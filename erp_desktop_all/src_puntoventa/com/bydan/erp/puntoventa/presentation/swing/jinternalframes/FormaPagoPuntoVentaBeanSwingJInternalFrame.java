/*
*AVISO LEGAL
Â© Copyright
*Este programa esta protegido por la ley de derechos de autor.
*La reproduccion o distribucion ilicita de este programa o de cualquiera de
*sus partes esta penado por la ley con severas sanciones civiles y penales,
*y seran objeto de todas las sanciones legales que correspondan.

*Su contenido no puede copiarse para fines comerciales o de otras,
*ni puede mostrarse, incluso en una version modificada, en otros sitios Web.
Solo esta permitido colocar hipervinculos al sitio web.
*/
package com.bydan.erp.puntoventa.presentation.swing.jinternalframes;




import com.bydan.erp.seguridad.business.entity.Usuario;
import com.bydan.erp.seguridad.business.entity.ResumenUsuario;
import com.bydan.erp.seguridad.business.entity.Opcion;
import com.bydan.erp.seguridad.business.entity.PerfilOpcion;
import com.bydan.erp.seguridad.business.entity.PerfilCampo;
import com.bydan.erp.seguridad.business.entity.PerfilAccion;
import com.bydan.erp.seguridad.business.entity.ParametroGeneralSg;
import com.bydan.erp.seguridad.business.entity.ParametroGeneralUsuario;
import com.bydan.erp.seguridad.business.entity.Modulo;
import com.bydan.erp.seguridad.business.entity.Accion;

import com.bydan.erp.seguridad.util.SistemaParameterReturnGeneralAdditional;
import com.bydan.erp.seguridad.util.SistemaParameterReturnGeneral;


//import com.bydan.erp.seguridad.business.entity.PerfilAccion;


import com.bydan.erp.seguridad.util.SistemaConstantesFunciones;
import com.bydan.erp.seguridad.util.SistemaConstantesFuncionesAdditional;
import com.bydan.erp.seguridad.business.logic.SistemaLogicAdditional;

import com.bydan.erp.puntoventa.util.FormaPagoPuntoVentaConstantesFunciones;
import com.bydan.erp.puntoventa.util.FormaPagoPuntoVentaParameterReturnGeneral;
//import com.bydan.erp.puntoventa.util.FormaPagoPuntoVentaParameterGeneral;
//import com.bydan.erp.puntoventa.presentation.report.source.FormaPagoPuntoVentaBean;
import com.bydan.framework.erp.business.dataaccess.ConstantesSql;
import com.bydan.framework.erp.business.entity.Classe;
import com.bydan.framework.erp.business.entity.DatoGeneral;
import com.bydan.framework.erp.business.entity.GeneralEntityParameterGeneral;
import com.bydan.framework.erp.business.entity.OrderBy;
import com.bydan.framework.erp.business.entity.DatoGeneralMinimo;
import com.bydan.framework.erp.business.entity.GeneralEntity;
import com.bydan.framework.erp.business.entity.Mensajes;
import com.bydan.framework.erp.business.entity.GeneralEntityParameterReturnGeneral;
//import com.bydan.framework.erp.business.entity.MaintenanceType;
import com.bydan.framework.erp.util.MaintenanceType;
import com.bydan.framework.erp.util.FuncionesReporte;
import com.bydan.framework.erp.business.logic.DatosCliente;
import com.bydan.framework.erp.business.logic.Pagination;

import com.bydan.erp.puntoventa.presentation.swing.jinternalframes.auxiliar.*;
import com.bydan.framework.erp.presentation.desktop.swing.TablaGeneralTotalModel;
import com.bydan.framework.erp.presentation.desktop.swing.TablaGeneralOrderByModel;
import com.bydan.framework.erp.presentation.desktop.swing.DateConverter;
import com.bydan.framework.erp.presentation.desktop.swing.DateConverterFromDate;
import com.bydan.framework.erp.presentation.desktop.swing.DateRenderer;
import com.bydan.framework.erp.presentation.desktop.swing.DateEditorRenderer;
import com.bydan.framework.erp.presentation.desktop.swing.BooleanRenderer;
import com.bydan.framework.erp.presentation.desktop.swing.BooleanEditorRenderer;
import com.bydan.framework.erp.presentation.desktop.swing.TextFieldRenderer;
import com.bydan.framework.erp.presentation.desktop.swing.RunnableProceso;
import com.bydan.framework.erp.presentation.desktop.swing.*;
//import com.bydan.framework.erp.presentation.desktop.swing.TextFieldEditorRenderer;
import com.bydan.framework.erp.presentation.desktop.swing.HeaderRenderer;
import com.bydan.framework.erp.presentation.desktop.swing.JInternalFrameBase;
import com.bydan.framework.erp.presentation.desktop.swing.FuncionesSwing;
import com.bydan.framework.erp.presentation.desktop.swing.MainJFrame;
import com.bydan.framework.erp.resources.imagenes.AuxiliarImagenes;
import com.bydan.erp.puntoventa.resources.reportes.AuxiliarReportes;


import com.bydan.erp.puntoventa.util.*;
import com.bydan.erp.puntoventa.business.logic.*;

import com.bydan.erp.seguridad.business.logic.*;
import com.bydan.erp.contabilidad.business.logic.*;
import com.bydan.erp.facturacion.business.logic.*;
import com.bydan.erp.tesoreria.business.logic.*;

//EJB

//PARAMETROS


//EJB PARAMETROS

import com.bydan.framework.erp.business.logic.*;
import com.bydan.framework.erp.util.*;

import com.bydan.erp.puntoventa.business.entity.*;
//import com.bydan.framework.erp.business.entity.ConexionBeanFace;
//import com.bydan.framework.erp.business.entity.Mensajes;


import com.bydan.erp.seguridad.presentation.swing.jinternalframes.*;
import com.bydan.erp.contabilidad.presentation.swing.jinternalframes.*;
import com.bydan.erp.facturacion.presentation.swing.jinternalframes.*;
import com.bydan.erp.tesoreria.presentation.swing.jinternalframes.*;

import com.bydan.erp.seguridad.presentation.swing.jinternalframes.auxiliar.*;
import com.bydan.erp.contabilidad.presentation.swing.jinternalframes.auxiliar.*;
import com.bydan.erp.facturacion.presentation.swing.jinternalframes.auxiliar.*;
import com.bydan.erp.tesoreria.presentation.swing.jinternalframes.auxiliar.*;






import javax.imageio.ImageIO;
import java.net.NetworkInterface;
import java.net.InterfaceAddress;
import java.net.InetAddress;
import javax.naming.InitialContext;
import java.lang.Long;
import java.util.Date;
import java.util.Enumeration;
import java.util.Iterator;
import java.util.Set;
import java.util.HashSet;
import java.util.List;
import java.util.ArrayList;
import java.io.Serializable;
import java.util.Hashtable;
import java.util.Collections;
import java.io.File;
import java.io.FileInputStream;
import java.io.BufferedWriter;
import java.io.FileWriter;
import java.io.FileOutputStream;
import java.io.InputStream;
import java.io.BufferedReader;
import java.io.FileReader;
import java.util.HashMap;
import java.util.Map;
import java.io.PrintWriter;
import java.sql.SQLException;

import javax.xml.parsers.DocumentBuilder;
import javax.xml.parsers.DocumentBuilderFactory;
import javax.xml.parsers.ParserConfigurationException;
import javax.xml.transform.stream.StreamSource;

import org.xml.sax.EntityResolver;
import org.xml.sax.InputSource;
import org.xml.sax.SAXException;

import org.w3c.dom.Document;
import org.w3c.dom.Document;
import org.w3c.dom.NodeList;
import org.w3c.dom.Node;
import org.w3c.dom.Element;

import org.apache.poi.hssf.usermodel.HSSFCell;
import org.apache.poi.hssf.usermodel.HSSFRow;
import org.apache.poi.hssf.usermodel.HSSFSheet;
import org.apache.poi.hssf.usermodel.HSSFWorkbook;
import org.apache.poi.xssf.usermodel.XSSFWorkbook;

import org.apache.poi.ss.usermodel.Workbook;
import org.apache.poi.ss.usermodel.Sheet;
import org.apache.poi.ss.usermodel.Row;
import org.apache.poi.ss.usermodel.Cell;
import org.apache.poi.ss.usermodel.CellStyle;
import org.apache.poi.ss.usermodel.IndexedColors;
import org.apache.poi.ss.util.CellRangeAddress;

import javax.xml.transform.Transformer;
import javax.xml.transform.TransformerFactory;
import javax.xml.transform.dom.DOMSource;
import javax.xml.transform.stream.StreamResult;


import net.sf.jasperreports.engine.JRException;
import net.sf.jasperreports.engine.JRRuntimeException;
import net.sf.jasperreports.engine.JasperFillManager;
import net.sf.jasperreports.engine.JasperPrint;
import net.sf.jasperreports.engine.JasperReport;
import net.sf.jasperreports.engine.util.JRLoader;
import net.sf.jasperreports.engine.export.JRHtmlExporter;
import net.sf.jasperreports.j2ee.servlets.BaseHttpServlet;
import net.sf.jasperreports.engine.JRExporterParameter;
import net.sf.jasperreports.engine.data.JRBeanArrayDataSource;
import net.sf.jasperreports.engine.data.JRBeanCollectionDataSource;
import net.sf.jasperreports.view.JasperViewer;

import org.apache.log4j.Logger;

import com.bydan.framework.erp.business.entity.Reporte;


//VALIDACION
import org.hibernate.validator.ClassValidator;
import org.hibernate.validator.InvalidValue;

import net.sf.jasperreports.engine.JREmptyDataSource;
import net.sf.jasperreports.engine.JasperCompileManager;
import net.sf.jasperreports.engine.JasperExportManager;
import net.sf.jasperreports.engine.JasperPrint;
import net.sf.jasperreports.engine.JasperPrintManager;
import net.sf.jasperreports.engine.JasperReport;
import net.sf.jasperreports.engine.JasperRunManager;
import net.sf.jasperreports.engine.export.JExcelApiExporter;
import net.sf.jasperreports.engine.export.JRCsvExporter;
import net.sf.jasperreports.engine.export.JRRtfExporter;
import net.sf.jasperreports.engine.export.JRXlsExporter;
import net.sf.jasperreports.engine.export.JRXlsExporterParameter;
import net.sf.jasperreports.engine.util.JRSaver;
import net.sf.jasperreports.engine.xml.JRXmlWriter;


import com.bydan.erp.puntoventa.presentation.web.jsf.sessionbean.*;

import java.util.EventObject;
import javax.swing.*;
import javax.swing.border.Border;
import javax.swing.border.TitledBorder;
import javax.swing.border.EmptyBorder;
import javax.swing.event.*;
import javax.swing.table.AbstractTableModel;
import javax.swing.table.DefaultTableCellRenderer;
import javax.swing.table.TableColumn;
import javax.swing.table.TableCellEditor;
import javax.swing.table.TableCellRenderer;
import java.awt.*;
import java.awt.event.*;

import org.jdesktop.beansbinding.Binding.SyncFailure;
import org.jdesktop.beansbinding.BindingListener;
import org.jdesktop.beansbinding.Bindings;
import org.jdesktop.beansbinding.BeanProperty;
import org.jdesktop.beansbinding.ELProperty;
import org.jdesktop.beansbinding.AutoBinding.UpdateStrategy;
import org.jdesktop.beansbinding.PropertyStateEvent;
import org.jdesktop.swingbinding.JComboBoxBinding;
import org.jdesktop.swingbinding.SwingBindings;
import java.beans.PropertyChangeListener;
import java.beans.PropertyChangeEvent;

import com.toedter.calendar.JDateChooser;


import com.bydan.erp.seguridad.business.entity.*;
import com.bydan.erp.contabilidad.business.entity.*;
import com.bydan.erp.facturacion.business.entity.*;
import com.bydan.erp.tesoreria.business.entity.*;
import com.bydan.erp.seguridad.util.*;
import com.bydan.erp.contabilidad.util.*;
import com.bydan.erp.facturacion.util.*;
import com.bydan.erp.tesoreria.util.*;
import com.bydan.erp.seguridad.presentation.web.jsf.sessionbean.*;
import com.bydan.erp.contabilidad.presentation.web.jsf.sessionbean.*;
import com.bydan.erp.facturacion.presentation.web.jsf.sessionbean.*;
import com.bydan.erp.tesoreria.presentation.web.jsf.sessionbean.*;


@SuppressWarnings("unused")
public class FormaPagoPuntoVentaBeanSwingJInternalFrame extends FormaPagoPuntoVentaJInternalFrame implements WindowListener,WindowFocusListener
{				
	
	public static final long serialVersionUID = 1L;
	
	public static Logger logger = Logger.getLogger(FormaPagoPuntoVentaBeanSwingJInternalFrame.class);  
	
	public static ClassValidator<FormaPagoPuntoVenta> formapagopuntoventaValidator = new ClassValidator<FormaPagoPuntoVenta>(FormaPagoPuntoVenta.class);
	
	public InvalidValue[] invalidValues=null;
		

	//Ejb Foreign Keys
	
	public FormaPagoPuntoVenta formapagopuntoventa;	
	public FormaPagoPuntoVenta formapagopuntoventaAux;
	public FormaPagoPuntoVenta formapagopuntoventaAnterior;//USADO PARA MANEJAR FOCUS GAINED,LOST
	public FormaPagoPuntoVenta formapagopuntoventaTotales;
	public Long idFormaPagoPuntoVentaActual;
	public Long iIdNuevoFormaPagoPuntoVenta=0L;
	public int rowIndexActual=0;
	
	
	
	
	public String sFinalQueryComboEmpresa="";

	public List<Empresa> empresasForeignKey;

	public List<Empresa> getempresasForeignKey() {
		return empresasForeignKey;
	}

	public void setempresasForeignKey(List<Empresa> empresasForeignKey) {
		this.empresasForeignKey = empresasForeignKey;
	}

	//OBJETO FK ACTUAL
	public Empresa empresaForeignKey;

	public Empresa getempresaForeignKey() {
		return empresaForeignKey;
	}

	public void setempresaForeignKey(Empresa empresaForeignKey) {
		this.empresaForeignKey = empresaForeignKey;
	}

	public String sFinalQueryComboSucursal="";

	public List<Sucursal> sucursalsForeignKey;

	public List<Sucursal> getsucursalsForeignKey() {
		return sucursalsForeignKey;
	}

	public void setsucursalsForeignKey(List<Sucursal> sucursalsForeignKey) {
		this.sucursalsForeignKey = sucursalsForeignKey;
	}

	//OBJETO FK ACTUAL
	public Sucursal sucursalForeignKey;

	public Sucursal getsucursalForeignKey() {
		return sucursalForeignKey;
	}

	public void setsucursalForeignKey(Sucursal sucursalForeignKey) {
		this.sucursalForeignKey = sucursalForeignKey;
	}

	public String sFinalQueryComboEjercicio="";

	public List<Ejercicio> ejerciciosForeignKey;

	public List<Ejercicio> getejerciciosForeignKey() {
		return ejerciciosForeignKey;
	}

	public void setejerciciosForeignKey(List<Ejercicio> ejerciciosForeignKey) {
		this.ejerciciosForeignKey = ejerciciosForeignKey;
	}

	//OBJETO FK ACTUAL
	public Ejercicio ejercicioForeignKey;

	public Ejercicio getejercicioForeignKey() {
		return ejercicioForeignKey;
	}

	public void setejercicioForeignKey(Ejercicio ejercicioForeignKey) {
		this.ejercicioForeignKey = ejercicioForeignKey;
	}

	public String sFinalQueryComboPeriodo="";

	public List<Periodo> periodosForeignKey;

	public List<Periodo> getperiodosForeignKey() {
		return periodosForeignKey;
	}

	public void setperiodosForeignKey(List<Periodo> periodosForeignKey) {
		this.periodosForeignKey = periodosForeignKey;
	}

	//OBJETO FK ACTUAL
	public Periodo periodoForeignKey;

	public Periodo getperiodoForeignKey() {
		return periodoForeignKey;
	}

	public void setperiodoForeignKey(Periodo periodoForeignKey) {
		this.periodoForeignKey = periodoForeignKey;
	}

	public String sFinalQueryComboFacturaPuntoVenta="";

	public List<FacturaPuntoVenta> facturapuntoventasForeignKey;

	public List<FacturaPuntoVenta> getfacturapuntoventasForeignKey() {
		return facturapuntoventasForeignKey;
	}

	public void setfacturapuntoventasForeignKey(List<FacturaPuntoVenta> facturapuntoventasForeignKey) {
		this.facturapuntoventasForeignKey = facturapuntoventasForeignKey;
	}

	//OBJETO FK ACTUAL
	public FacturaPuntoVenta facturapuntoventaForeignKey;

	public FacturaPuntoVenta getfacturapuntoventaForeignKey() {
		return facturapuntoventaForeignKey;
	}

	public void setfacturapuntoventaForeignKey(FacturaPuntoVenta facturapuntoventaForeignKey) {
		this.facturapuntoventaForeignKey = facturapuntoventaForeignKey;
	}

	public String sFinalQueryComboTipoFormaPago="";

	public List<TipoFormaPago> tipoformapagosForeignKey;

	public List<TipoFormaPago> gettipoformapagosForeignKey() {
		return tipoformapagosForeignKey;
	}

	public void settipoformapagosForeignKey(List<TipoFormaPago> tipoformapagosForeignKey) {
		this.tipoformapagosForeignKey = tipoformapagosForeignKey;
	}

	//OBJETO FK ACTUAL
	public TipoFormaPago tipoformapagoForeignKey;

	public TipoFormaPago gettipoformapagoForeignKey() {
		return tipoformapagoForeignKey;
	}

	public void settipoformapagoForeignKey(TipoFormaPago tipoformapagoForeignKey) {
		this.tipoformapagoForeignKey = tipoformapagoForeignKey;
	}

	public String sFinalQueryComboBanco="";

	public List<Banco> bancosForeignKey;

	public List<Banco> getbancosForeignKey() {
		return bancosForeignKey;
	}

	public void setbancosForeignKey(List<Banco> bancosForeignKey) {
		this.bancosForeignKey = bancosForeignKey;
	}

	//OBJETO FK ACTUAL
	public Banco bancoForeignKey;

	public Banco getbancoForeignKey() {
		return bancoForeignKey;
	}

	public void setbancoForeignKey(Banco bancoForeignKey) {
		this.bancoForeignKey = bancoForeignKey;
	}

	public String sFinalQueryComboCuentaBancoPunVen="";

	public List<CuentaBancoPunVen> cuentabancopunvensForeignKey;

	public List<CuentaBancoPunVen> getcuentabancopunvensForeignKey() {
		return cuentabancopunvensForeignKey;
	}

	public void setcuentabancopunvensForeignKey(List<CuentaBancoPunVen> cuentabancopunvensForeignKey) {
		this.cuentabancopunvensForeignKey = cuentabancopunvensForeignKey;
	}

	//OBJETO FK ACTUAL
	public CuentaBancoPunVen cuentabancopunvenForeignKey;

	public CuentaBancoPunVen getcuentabancopunvenForeignKey() {
		return cuentabancopunvenForeignKey;
	}

	public void setcuentabancopunvenForeignKey(CuentaBancoPunVen cuentabancopunvenForeignKey) {
		this.cuentabancopunvenForeignKey = cuentabancopunvenForeignKey;
	}

	public String sFinalQueryComboTipoRiesgoCheque="";

	public List<TipoRiesgoCheque> tiporiesgochequesForeignKey;

	public List<TipoRiesgoCheque> gettiporiesgochequesForeignKey() {
		return tiporiesgochequesForeignKey;
	}

	public void settiporiesgochequesForeignKey(List<TipoRiesgoCheque> tiporiesgochequesForeignKey) {
		this.tiporiesgochequesForeignKey = tiporiesgochequesForeignKey;
	}

	//OBJETO FK ACTUAL
	public TipoRiesgoCheque tiporiesgochequeForeignKey;

	public TipoRiesgoCheque gettiporiesgochequeForeignKey() {
		return tiporiesgochequeForeignKey;
	}

	public void settiporiesgochequeForeignKey(TipoRiesgoCheque tiporiesgochequeForeignKey) {
		this.tiporiesgochequeForeignKey = tiporiesgochequeForeignKey;
	}

	public String sFinalQueryComboBancoTarjeta="";

	public List<Banco> bancotarjetasForeignKey;

	public List<Banco> getbancotarjetasForeignKey() {
		return bancotarjetasForeignKey;
	}

	public void setbancotarjetasForeignKey(List<Banco> bancotarjetasForeignKey) {
		this.bancotarjetasForeignKey = bancotarjetasForeignKey;
	}

	//OBJETO FK ACTUAL
	public Banco bancotarjetaForeignKey;

	public Banco getbancotarjetaForeignKey() {
		return bancotarjetaForeignKey;
	}

	public void setbancotarjetaForeignKey(Banco bancotarjetaForeignKey) {
		this.bancotarjetaForeignKey = bancotarjetaForeignKey;
	}

	public String sFinalQueryComboTarjetaCredito="";

	public List<TarjetaCredito> tarjetacreditosForeignKey;

	public List<TarjetaCredito> gettarjetacreditosForeignKey() {
		return tarjetacreditosForeignKey;
	}

	public void settarjetacreditosForeignKey(List<TarjetaCredito> tarjetacreditosForeignKey) {
		this.tarjetacreditosForeignKey = tarjetacreditosForeignKey;
	}

	//OBJETO FK ACTUAL
	public TarjetaCredito tarjetacreditoForeignKey;

	public TarjetaCredito gettarjetacreditoForeignKey() {
		return tarjetacreditoForeignKey;
	}

	public void settarjetacreditoForeignKey(TarjetaCredito tarjetacreditoForeignKey) {
		this.tarjetacreditoForeignKey = tarjetacreditoForeignKey;
	}

	public String sFinalQueryComboTipoInteresTarjeta="";

	public List<TipoInteresTarjeta> tipointerestarjetasForeignKey;

	public List<TipoInteresTarjeta> gettipointerestarjetasForeignKey() {
		return tipointerestarjetasForeignKey;
	}

	public void settipointerestarjetasForeignKey(List<TipoInteresTarjeta> tipointerestarjetasForeignKey) {
		this.tipointerestarjetasForeignKey = tipointerestarjetasForeignKey;
	}

	//OBJETO FK ACTUAL
	public TipoInteresTarjeta tipointerestarjetaForeignKey;

	public TipoInteresTarjeta gettipointerestarjetaForeignKey() {
		return tipointerestarjetaForeignKey;
	}

	public void settipointerestarjetaForeignKey(TipoInteresTarjeta tipointerestarjetaForeignKey) {
		this.tipointerestarjetaForeignKey = tipointerestarjetaForeignKey;
	}

	public String sFinalQueryComboTipoPagoTarjeta="";

	public List<TipoPagoTarjeta> tipopagotarjetasForeignKey;

	public List<TipoPagoTarjeta> gettipopagotarjetasForeignKey() {
		return tipopagotarjetasForeignKey;
	}

	public void settipopagotarjetasForeignKey(List<TipoPagoTarjeta> tipopagotarjetasForeignKey) {
		this.tipopagotarjetasForeignKey = tipopagotarjetasForeignKey;
	}

	//OBJETO FK ACTUAL
	public TipoPagoTarjeta tipopagotarjetaForeignKey;

	public TipoPagoTarjeta gettipopagotarjetaForeignKey() {
		return tipopagotarjetaForeignKey;
	}

	public void settipopagotarjetaForeignKey(TipoPagoTarjeta tipopagotarjetaForeignKey) {
		this.tipopagotarjetaForeignKey = tipopagotarjetaForeignKey;
	}

	public String sFinalQueryComboConexion="";

	public List<Conexion> conexionsForeignKey;

	public List<Conexion> getconexionsForeignKey() {
		return conexionsForeignKey;
	}

	public void setconexionsForeignKey(List<Conexion> conexionsForeignKey) {
		this.conexionsForeignKey = conexionsForeignKey;
	}

	//OBJETO FK ACTUAL
	public Conexion conexionForeignKey;

	public Conexion getconexionForeignKey() {
		return conexionForeignKey;
	}

	public void setconexionForeignKey(Conexion conexionForeignKey) {
		this.conexionForeignKey = conexionForeignKey;
	}

	public String sFinalQueryComboMes="";

	public List<Mes> messForeignKey;

	public List<Mes> getmessForeignKey() {
		return messForeignKey;
	}

	public void setmessForeignKey(List<Mes> messForeignKey) {
		this.messForeignKey = messForeignKey;
	}

	//OBJETO FK ACTUAL
	public Mes mesForeignKey;

	public Mes getmesForeignKey() {
		return mesForeignKey;
	}

	public void setmesForeignKey(Mes mesForeignKey) {
		this.mesForeignKey = mesForeignKey;
	}

	public String sFinalQueryComboAnio="";

	public List<Anio> aniosForeignKey;

	public List<Anio> getaniosForeignKey() {
		return aniosForeignKey;
	}

	public void setaniosForeignKey(List<Anio> aniosForeignKey) {
		this.aniosForeignKey = aniosForeignKey;
	}

	//OBJETO FK ACTUAL
	public Anio anioForeignKey;

	public Anio getanioForeignKey() {
		return anioForeignKey;
	}

	public void setanioForeignKey(Anio anioForeignKey) {
		this.anioForeignKey = anioForeignKey;
	}

	public String sFinalQueryComboCuentaContable="";

	public List<CuentaContable> cuentacontablesForeignKey;

	public List<CuentaContable> getcuentacontablesForeignKey() {
		return cuentacontablesForeignKey;
	}

	public void setcuentacontablesForeignKey(List<CuentaContable> cuentacontablesForeignKey) {
		this.cuentacontablesForeignKey = cuentacontablesForeignKey;
	}

	//OBJETO FK ACTUAL
	public CuentaContable cuentacontableForeignKey;

	public CuentaContable getcuentacontableForeignKey() {
		return cuentacontableForeignKey;
	}

	public void setcuentacontableForeignKey(CuentaContable cuentacontableForeignKey) {
		this.cuentacontableForeignKey = cuentacontableForeignKey;
	}

	public String sFinalQueryComboAsientoContable="";

	public List<AsientoContable> asientocontablesForeignKey;

	public List<AsientoContable> getasientocontablesForeignKey() {
		return asientocontablesForeignKey;
	}

	public void setasientocontablesForeignKey(List<AsientoContable> asientocontablesForeignKey) {
		this.asientocontablesForeignKey = asientocontablesForeignKey;
	}

	//OBJETO FK ACTUAL
	public AsientoContable asientocontableForeignKey;

	public AsientoContable getasientocontableForeignKey() {
		return asientocontableForeignKey;
	}

	public void setasientocontableForeignKey(AsientoContable asientocontableForeignKey) {
		this.asientocontableForeignKey = asientocontableForeignKey;
	}

		
	
	
	
	//BUSQUEDA INTERNA FK
	public Long idCuentaContableActual=0L;

	public Long getidCuentaContableActual() {
		return idCuentaContableActual;
	}

	public void setidCuentaContableActual(Long idCuentaContableActual) {
		this.idCuentaContableActual= idCuentaContableActual;
	}
	public Long idAsientoContableActual=0L;

	public Long getidAsientoContableActual() {
		return idAsientoContableActual;
	}

	public void setidAsientoContableActual(Long idAsientoContableActual) {
		this.idAsientoContableActual= idAsientoContableActual;
	}
	
	
	
	
	//FALTA:PARA BUSQUEDAS POR CAMPO EN FORMULARIO
	public String sFinalQueryGeneral="";
	public Boolean isEntroOnLoad=false;
	public Boolean isErrorGuardar=false;
	
	public Boolean isGuardarCambiosEnLote=false;
	public Boolean isCargarCombosDependencia=false;
	public Boolean isSeleccionarTodos=false;
	public Boolean isSeleccionados=false;
	public Boolean conGraficoReporte=false;
	
	public Boolean isPostAccionNuevo=false;
	public Boolean isPostAccionSinCerrar=false;
	public Boolean isPostAccionSinMensaje=false;
	
	
	public Boolean esControlTabla=false;
	
	public Boolean isPermisoTodoFormaPagoPuntoVenta;
	public Boolean isPermisoNuevoFormaPagoPuntoVenta;
	public Boolean isPermisoActualizarFormaPagoPuntoVenta;
	public Boolean isPermisoActualizarOriginalFormaPagoPuntoVenta;
	public Boolean isPermisoEliminarFormaPagoPuntoVenta;
	public Boolean isPermisoGuardarCambiosFormaPagoPuntoVenta;
	public Boolean isPermisoConsultaFormaPagoPuntoVenta;
	public Boolean isPermisoBusquedaFormaPagoPuntoVenta;
	public Boolean isPermisoReporteFormaPagoPuntoVenta;
	public Boolean isPermisoPaginacionMedioFormaPagoPuntoVenta;
	public Boolean isPermisoPaginacionAltoFormaPagoPuntoVenta;
	public Boolean isPermisoPaginacionTodoFormaPagoPuntoVenta;
	public Boolean isPermisoCopiarFormaPagoPuntoVenta;
	public Boolean isPermisoVerFormFormaPagoPuntoVenta;
	public Boolean isPermisoDuplicarFormaPagoPuntoVenta;
	public Boolean isPermisoOrdenFormaPagoPuntoVenta;
	
	
	public ArrayList<DatoGeneral> arrDatoGeneral;
	public ArrayList<String> arrDatoGeneralNo;
	ArrayList<Classe> classesActual=new ArrayList<Classe>();
	
	public List<Accion> accions;	
	public List<Accion> accionsFormulario;
	
	
	public ArrayList<DatoGeneralMinimo> arrDatoGeneralMinimos;
	
	public ArrayList<Reporte> tiposArchivosReportes;
	public ArrayList<Reporte> tiposArchivosReportesDinamico;
	public ArrayList<Reporte> tiposReportes;
	public ArrayList<Reporte> tiposReportesDinamico;
	public ArrayList<Reporte> tiposGraficosReportes;
	public ArrayList<Reporte> tiposPaginacion;
	public ArrayList<Reporte> tiposRelaciones;
	public ArrayList<Reporte> tiposAcciones;
	public ArrayList<Reporte> tiposAccionesFormulario;
	public ArrayList<Reporte> tiposSeleccionar;
	
	public ArrayList<Reporte> tiposColumnasSelect;
	public ArrayList<Reporte> tiposRelacionesSelect;
	
	
	public Integer iNumeroPaginacion;
	public Integer iNumeroPaginacionPagina;
	public Pagination pagination;
	public DatosCliente datosCliente;
	public DatosDeep datosDeep;
	public String sTipoArchivoReporte="";
	public String sTipoArchivoReporteDinamico="";
	public String sTipoReporte="";
	public String sTipoReporteDinamico="";
	public String sTipoGraficoReporte="";
	public String sTipoPaginacion="";
	public String sTipoRelacion="";
	public String sTipoAccion="";
	public String sTipoAccionFormulario="";
	public String sTipoSeleccionar="";	
	public String sDetalleReporte="";
	public Boolean isMostrarNumeroPaginacion;
	public String sTipoReporteExtra="";
	public String sValorCampoGeneral="";
	public Boolean esReporteDinamico=false;
	public Boolean esReporteAccionProceso=false;
	public Boolean esRecargarFks=false;
	public String sPathReporteDinamico="";
	
	public FormaPagoPuntoVentaParameterReturnGeneral formapagopuntoventaReturnGeneral;
	public FormaPagoPuntoVentaParameterReturnGeneral formapagopuntoventaParameterGeneral;
	
	 	
	public JasperPrint jasperPrint = null;
	
	public Long lIdUsuarioSesion=0L;				
	
	public Boolean isEsNuevoFormaPagoPuntoVenta=false;
	public Boolean esParaAccionDesdeFormularioFormaPagoPuntoVenta=false;
	public Boolean isEsMantenimientoRelacionesRelacionadoUnico=false;
	public Boolean isEsMantenimientoRelaciones=false;
	public Boolean isEsMantenimientoRelacionado=false;	
	public Boolean isContieneImagenes=false;
		
	//public Boolean conTotales=false; //Viene heredado de JInternalFrameBase
	//public Boolean esParaBusquedaForeignKey=false;
	
	
	protected FormaPagoPuntoVentaSessionBeanAdditional formapagopuntoventaSessionBeanAdditional=null;
	
	public FormaPagoPuntoVentaSessionBeanAdditional getFormaPagoPuntoVentaSessionBeanAdditional() {
		return this.formapagopuntoventaSessionBeanAdditional;
	}
	
	public void setFormaPagoPuntoVentaSessionBeanAdditional(FormaPagoPuntoVentaSessionBeanAdditional formapagopuntoventaSessionBeanAdditional) {
		try {
			this.formapagopuntoventaSessionBeanAdditional=formapagopuntoventaSessionBeanAdditional;
		} catch(Exception e) {
			;
		}
	}
	
	
	
	
	protected FormaPagoPuntoVentaBeanSwingJInternalFrameAdditional formapagopuntoventaBeanSwingJInternalFrameAdditional=null;
	//public class FormaPagoPuntoVentaBeanSwingJInternalFrame
	
	public FormaPagoPuntoVentaBeanSwingJInternalFrameAdditional getFormaPagoPuntoVentaBeanSwingJInternalFrameAdditional() {
		return this.formapagopuntoventaBeanSwingJInternalFrameAdditional;
	}
	
	public void setFormaPagoPuntoVentaBeanSwingJInternalFrameAdditional(FormaPagoPuntoVentaBeanSwingJInternalFrameAdditional formapagopuntoventaBeanSwingJInternalFrameAdditional) {
		try {
			this.formapagopuntoventaBeanSwingJInternalFrameAdditional=formapagopuntoventaBeanSwingJInternalFrameAdditional;
		} catch(Exception e) {
			;
		}
	}
	
	
	
	
	//ESTA EN PADRE
	
	//public FormaPagoPuntoVentaLogic formapagopuntoventaLogic;
	public SistemaLogicAdditional sistemaLogicAdditional;
	
	
	public FormaPagoPuntoVenta formapagopuntoventaBean;
	public FormaPagoPuntoVentaConstantesFunciones formapagopuntoventaConstantesFunciones;
	//public FormaPagoPuntoVentaParameterReturnGeneral formapagopuntoventaReturnGeneral;
	
	//FK
	
	public EmpresaLogic empresaLogic;
	public SucursalLogic sucursalLogic;
	public EjercicioLogic ejercicioLogic;
	public PeriodoLogic periodoLogic;
	public FacturaPuntoVentaLogic facturapuntoventaLogic;
	public TipoFormaPagoLogic tipoformapagoLogic;
	public BancoLogic bancoLogic;
	public CuentaBancoPunVenLogic cuentabancopunvenLogic;
	public TipoRiesgoChequeLogic tiporiesgochequeLogic;
	public BancoLogic bancotarjetaLogic;
	public TarjetaCreditoLogic tarjetacreditoLogic;
	public TipoInteresTarjetaLogic tipointerestarjetaLogic;
	public TipoPagoTarjetaLogic tipopagotarjetaLogic;
	public ConexionLogic conexionLogic;
	public MesLogic mesLogic;
	public AnioLogic anioLogic;
	public CuentaContableLogic cuentacontableLogic;
	public AsientoContableLogic asientocontableLogic;
	
	//PARAMETROS
	
	
	//public List<FormaPagoPuntoVenta> formapagopuntoventas;	
	//public List<FormaPagoPuntoVenta> formapagopuntoventasEliminados;
	//public List<FormaPagoPuntoVenta> formapagopuntoventasAux;
	
	public String sAccionMantenimiento="";
	public String sAccionBusqueda="";
	public String sAccionAdicional="";
	public String sUltimaBusqueda="";
	
	public Mensaje mensaje;
	
	
	public String sVisibilidadTablaBusquedas="";					
	public String sVisibilidadTablaElementos="";	
	public String sVisibilidadTablaAcciones="";			
	
	public Boolean isVisibilidadCeldaNuevoFormaPagoPuntoVenta=false;
	public Boolean isVisibilidadCeldaDuplicarFormaPagoPuntoVenta=true;
	public Boolean isVisibilidadCeldaCopiarFormaPagoPuntoVenta=true;
	public Boolean isVisibilidadCeldaVerFormFormaPagoPuntoVenta=true;
	public Boolean isVisibilidadCeldaOrdenFormaPagoPuntoVenta=true;
	public Boolean isVisibilidadCeldaNuevoRelacionesFormaPagoPuntoVenta=false;
	public Boolean isVisibilidadCeldaModificarFormaPagoPuntoVenta=false;
	public Boolean isVisibilidadCeldaActualizarFormaPagoPuntoVenta=false;
	public Boolean isVisibilidadCeldaEliminarFormaPagoPuntoVenta=false;
	public Boolean isVisibilidadCeldaCancelarFormaPagoPuntoVenta=false;
	public Boolean isVisibilidadCeldaGuardarFormaPagoPuntoVenta=false;	
	public Boolean isVisibilidadCeldaGuardarCambiosFormaPagoPuntoVenta=false;	
	
	
	public Boolean isVisibilidadFK_IdAnio=false;
	public Boolean isVisibilidadFK_IdAsientoContable=false;
	public Boolean isVisibilidadFK_IdBanco=false;
	public Boolean isVisibilidadFK_IdBancoTarjeta=false;
	public Boolean isVisibilidadFK_IdConexion=false;
	public Boolean isVisibilidadFK_IdCuentaBancoPunVen=false;
	public Boolean isVisibilidadFK_IdCuentaContable=false;
	public Boolean isVisibilidadFK_IdEjercicio=false;
	public Boolean isVisibilidadFK_IdEmpresa=false;
	public Boolean isVisibilidadFK_IdFacturaPuntoVenta=false;
	public Boolean isVisibilidadFK_IdMes=false;
	public Boolean isVisibilidadFK_IdPeriodo=false;
	public Boolean isVisibilidadFK_IdSucursal=false;
	public Boolean isVisibilidadFK_IdTarjetaCredito=false;
	public Boolean isVisibilidadFK_IdTipoFormaPago=false;
	public Boolean isVisibilidadFK_IdTipoInteresTarjeta=false;
	public Boolean isVisibilidadFK_IdTipoPagoTarjeta=false;
	public Boolean isVisibilidadFK_IdTipoRiesgoCheque=false;
	
	public Long getiIdNuevoFormaPagoPuntoVenta() {
		return this.iIdNuevoFormaPagoPuntoVenta;
	}

	public void setiIdNuevoFormaPagoPuntoVenta(Long iIdNuevoFormaPagoPuntoVenta) {
		this.iIdNuevoFormaPagoPuntoVenta = iIdNuevoFormaPagoPuntoVenta;
	}
	
	public Long getidFormaPagoPuntoVentaActual() {
		return this.idFormaPagoPuntoVentaActual;
	}

	public void setidFormaPagoPuntoVentaActual(Long idFormaPagoPuntoVentaActual) {
		this.idFormaPagoPuntoVentaActual = idFormaPagoPuntoVentaActual;
	}
	
	public int getrowIndexActual() {
		return this.rowIndexActual;
	}

	public void setrowIndexActual(int rowIndexActual) {
		this.rowIndexActual=rowIndexActual;
	}
	
	
	public FormaPagoPuntoVenta getformapagopuntoventa() {
		return this.formapagopuntoventa;
	}

	public void setformapagopuntoventa(FormaPagoPuntoVenta formapagopuntoventa) {
		this.formapagopuntoventa = formapagopuntoventa;
	}
	
	public FormaPagoPuntoVenta getformapagopuntoventaAux() {
		return this.formapagopuntoventaAux;
	}

	public void setformapagopuntoventaAux(FormaPagoPuntoVenta formapagopuntoventaAux) {
		this.formapagopuntoventaAux = formapagopuntoventaAux;
	}				
	
	public FormaPagoPuntoVenta getformapagopuntoventaAnterior() {
		return this.formapagopuntoventaAnterior;
	}

	public void setformapagopuntoventaAnterior(FormaPagoPuntoVenta formapagopuntoventaAnterior) {
		this.formapagopuntoventaAnterior = formapagopuntoventaAnterior;
	}	
	
	public FormaPagoPuntoVenta getformapagopuntoventaTotales() {
		return this.formapagopuntoventaTotales;
	}

	public void setformapagopuntoventaTotales(FormaPagoPuntoVenta formapagopuntoventaTotales) {
		this.formapagopuntoventaTotales = formapagopuntoventaTotales;
	}	
	
	public FormaPagoPuntoVenta getformapagopuntoventaBean() {
		return this.formapagopuntoventaBean;
	}

	public void setformapagopuntoventaBean(FormaPagoPuntoVenta formapagopuntoventaBean) {
		this.formapagopuntoventaBean = formapagopuntoventaBean;
	}	
	
	public FormaPagoPuntoVentaParameterReturnGeneral getformapagopuntoventaReturnGeneral() {
		return this.formapagopuntoventaReturnGeneral;
	}

	public void setformapagopuntoventaReturnGeneral(FormaPagoPuntoVentaParameterReturnGeneral formapagopuntoventaReturnGeneral) {
		this.formapagopuntoventaReturnGeneral = formapagopuntoventaReturnGeneral;
	}	
	
	
	public Long id_anioFK_IdAnio=null;

	public Long getid_anioFK_IdAnio() {
		return this.id_anioFK_IdAnio;
	}

	public void setid_anioFK_IdAnio(Long id_anioFK_IdAnio) {
		this.id_anioFK_IdAnio = id_anioFK_IdAnio;
	}

	public Long id_asiento_contableFK_IdAsientoContable=null;

	public Long getid_asiento_contableFK_IdAsientoContable() {
		return this.id_asiento_contableFK_IdAsientoContable;
	}

	public void setid_asiento_contableFK_IdAsientoContable(Long id_asiento_contableFK_IdAsientoContable) {
		this.id_asiento_contableFK_IdAsientoContable = id_asiento_contableFK_IdAsientoContable;
	}

	public Long id_bancoFK_IdBanco=null;

	public Long getid_bancoFK_IdBanco() {
		return this.id_bancoFK_IdBanco;
	}

	public void setid_bancoFK_IdBanco(Long id_bancoFK_IdBanco) {
		this.id_bancoFK_IdBanco = id_bancoFK_IdBanco;
	}

	public Long id_banco_tarjetaFK_IdBancoTarjeta=null;

	public Long getid_banco_tarjetaFK_IdBancoTarjeta() {
		return this.id_banco_tarjetaFK_IdBancoTarjeta;
	}

	public void setid_banco_tarjetaFK_IdBancoTarjeta(Long id_banco_tarjetaFK_IdBancoTarjeta) {
		this.id_banco_tarjetaFK_IdBancoTarjeta = id_banco_tarjetaFK_IdBancoTarjeta;
	}

	public Long id_conexionFK_IdConexion=null;

	public Long getid_conexionFK_IdConexion() {
		return this.id_conexionFK_IdConexion;
	}

	public void setid_conexionFK_IdConexion(Long id_conexionFK_IdConexion) {
		this.id_conexionFK_IdConexion = id_conexionFK_IdConexion;
	}

	public Long id_cuenta_banco_pun_venFK_IdCuentaBancoPunVen=null;

	public Long getid_cuenta_banco_pun_venFK_IdCuentaBancoPunVen() {
		return this.id_cuenta_banco_pun_venFK_IdCuentaBancoPunVen;
	}

	public void setid_cuenta_banco_pun_venFK_IdCuentaBancoPunVen(Long id_cuenta_banco_pun_venFK_IdCuentaBancoPunVen) {
		this.id_cuenta_banco_pun_venFK_IdCuentaBancoPunVen = id_cuenta_banco_pun_venFK_IdCuentaBancoPunVen;
	}

	public Long id_cuenta_contableFK_IdCuentaContable=null;

	public Long getid_cuenta_contableFK_IdCuentaContable() {
		return this.id_cuenta_contableFK_IdCuentaContable;
	}

	public void setid_cuenta_contableFK_IdCuentaContable(Long id_cuenta_contableFK_IdCuentaContable) {
		this.id_cuenta_contableFK_IdCuentaContable = id_cuenta_contableFK_IdCuentaContable;
	}

	public Long id_ejercicioFK_IdEjercicio=-1L;

	public Long getid_ejercicioFK_IdEjercicio() {
		return this.id_ejercicioFK_IdEjercicio;
	}

	public void setid_ejercicioFK_IdEjercicio(Long id_ejercicioFK_IdEjercicio) {
		this.id_ejercicioFK_IdEjercicio = id_ejercicioFK_IdEjercicio;
	}

	public Long id_empresaFK_IdEmpresa=-1L;

	public Long getid_empresaFK_IdEmpresa() {
		return this.id_empresaFK_IdEmpresa;
	}

	public void setid_empresaFK_IdEmpresa(Long id_empresaFK_IdEmpresa) {
		this.id_empresaFK_IdEmpresa = id_empresaFK_IdEmpresa;
	}

	public Long id_factura_punto_ventaFK_IdFacturaPuntoVenta=-1L;

	public Long getid_factura_punto_ventaFK_IdFacturaPuntoVenta() {
		return this.id_factura_punto_ventaFK_IdFacturaPuntoVenta;
	}

	public void setid_factura_punto_ventaFK_IdFacturaPuntoVenta(Long id_factura_punto_ventaFK_IdFacturaPuntoVenta) {
		this.id_factura_punto_ventaFK_IdFacturaPuntoVenta = id_factura_punto_ventaFK_IdFacturaPuntoVenta;
	}

	public Long id_mesFK_IdMes=null;

	public Long getid_mesFK_IdMes() {
		return this.id_mesFK_IdMes;
	}

	public void setid_mesFK_IdMes(Long id_mesFK_IdMes) {
		this.id_mesFK_IdMes = id_mesFK_IdMes;
	}

	public Long id_periodoFK_IdPeriodo=-1L;

	public Long getid_periodoFK_IdPeriodo() {
		return this.id_periodoFK_IdPeriodo;
	}

	public void setid_periodoFK_IdPeriodo(Long id_periodoFK_IdPeriodo) {
		this.id_periodoFK_IdPeriodo = id_periodoFK_IdPeriodo;
	}

	public Long id_sucursalFK_IdSucursal=-1L;

	public Long getid_sucursalFK_IdSucursal() {
		return this.id_sucursalFK_IdSucursal;
	}

	public void setid_sucursalFK_IdSucursal(Long id_sucursalFK_IdSucursal) {
		this.id_sucursalFK_IdSucursal = id_sucursalFK_IdSucursal;
	}

	public Long id_tarjeta_creditoFK_IdTarjetaCredito=null;

	public Long getid_tarjeta_creditoFK_IdTarjetaCredito() {
		return this.id_tarjeta_creditoFK_IdTarjetaCredito;
	}

	public void setid_tarjeta_creditoFK_IdTarjetaCredito(Long id_tarjeta_creditoFK_IdTarjetaCredito) {
		this.id_tarjeta_creditoFK_IdTarjetaCredito = id_tarjeta_creditoFK_IdTarjetaCredito;
	}

	public Long id_tipo_forma_pagoFK_IdTipoFormaPago=-1L;

	public Long getid_tipo_forma_pagoFK_IdTipoFormaPago() {
		return this.id_tipo_forma_pagoFK_IdTipoFormaPago;
	}

	public void setid_tipo_forma_pagoFK_IdTipoFormaPago(Long id_tipo_forma_pagoFK_IdTipoFormaPago) {
		this.id_tipo_forma_pagoFK_IdTipoFormaPago = id_tipo_forma_pagoFK_IdTipoFormaPago;
	}

	public Long id_tipo_interes_tarjetaFK_IdTipoInteresTarjeta=null;

	public Long getid_tipo_interes_tarjetaFK_IdTipoInteresTarjeta() {
		return this.id_tipo_interes_tarjetaFK_IdTipoInteresTarjeta;
	}

	public void setid_tipo_interes_tarjetaFK_IdTipoInteresTarjeta(Long id_tipo_interes_tarjetaFK_IdTipoInteresTarjeta) {
		this.id_tipo_interes_tarjetaFK_IdTipoInteresTarjeta = id_tipo_interes_tarjetaFK_IdTipoInteresTarjeta;
	}

	public Long id_tipo_pago_tarjetaFK_IdTipoPagoTarjeta=null;

	public Long getid_tipo_pago_tarjetaFK_IdTipoPagoTarjeta() {
		return this.id_tipo_pago_tarjetaFK_IdTipoPagoTarjeta;
	}

	public void setid_tipo_pago_tarjetaFK_IdTipoPagoTarjeta(Long id_tipo_pago_tarjetaFK_IdTipoPagoTarjeta) {
		this.id_tipo_pago_tarjetaFK_IdTipoPagoTarjeta = id_tipo_pago_tarjetaFK_IdTipoPagoTarjeta;
	}

	public Long id_tipo_riesgo_chequeFK_IdTipoRiesgoCheque=null;

	public Long getid_tipo_riesgo_chequeFK_IdTipoRiesgoCheque() {
		return this.id_tipo_riesgo_chequeFK_IdTipoRiesgoCheque;
	}

	public void setid_tipo_riesgo_chequeFK_IdTipoRiesgoCheque(Long id_tipo_riesgo_chequeFK_IdTipoRiesgoCheque) {
		this.id_tipo_riesgo_chequeFK_IdTipoRiesgoCheque = id_tipo_riesgo_chequeFK_IdTipoRiesgoCheque;
	}

		
	
	//ELEMENTOS TABLAS PARAMETOS
	
	
	
	
	
	
	//ELEMENTOS TABLAS PARAMETOS_FIN
	
	
	public FormaPagoPuntoVentaLogic getFormaPagoPuntoVentaLogic()	{		
		return formapagopuntoventaLogic;
	}

	public void setFormaPagoPuntoVentaLogic(FormaPagoPuntoVentaLogic formapagopuntoventaLogic) {
		this.formapagopuntoventaLogic = formapagopuntoventaLogic;
	}
	
	
	public void setsFinalQueryGeneral(String sFinalQueryGeneral) {
		this.sFinalQueryGeneral=sFinalQueryGeneral;
	}
	
	public String getsFinalQueryGeneral() {
		return this.sFinalQueryGeneral;
	}
		
	public Boolean getIsGuardarCambiosEnLote() {
		return isGuardarCambiosEnLote;
	}

	public void setIsGuardarCambiosEnLote(Boolean isGuardarCambiosEnLote) {
		this.isGuardarCambiosEnLote = isGuardarCambiosEnLote;
	}
	
	public Boolean getIsCargarCombosDependencia() {
		return isCargarCombosDependencia;
	}

	public void setIsCargarCombosDependencia(Boolean isCargarCombosDependencia) {
		this.isCargarCombosDependencia = isCargarCombosDependencia;
	}
	
	public Boolean getIsEsNuevoFormaPagoPuntoVenta() {
		return isEsNuevoFormaPagoPuntoVenta;
	}

	public void setIsEsNuevoFormaPagoPuntoVenta(Boolean isEsNuevoFormaPagoPuntoVenta) {
		this.isEsNuevoFormaPagoPuntoVenta = isEsNuevoFormaPagoPuntoVenta;
	}

	public Boolean getEsParaAccionDesdeFormularioFormaPagoPuntoVenta() {
		return esParaAccionDesdeFormularioFormaPagoPuntoVenta;
	}
	
	public void setEsParaAccionDesdeFormularioFormaPagoPuntoVenta(Boolean esParaAccionDesdeFormularioFormaPagoPuntoVenta) {
		this.esParaAccionDesdeFormularioFormaPagoPuntoVenta = esParaAccionDesdeFormularioFormaPagoPuntoVenta;
	}
	
	public Boolean getIsEsMantenimientoRelacionesRelacionadoUnico() {
		return isEsMantenimientoRelacionesRelacionadoUnico;
	}

	public void setIsEsMantenimientoRelacionesRelacionadoUnico(Boolean isEsMantenimientoRelacionesRelacionadoUnico) {
		this.isEsMantenimientoRelacionesRelacionadoUnico = isEsMantenimientoRelacionesRelacionadoUnico;
	}

	public Boolean getIsEsMantenimientoRelaciones() {
		return isEsMantenimientoRelaciones;
	}

	public void setIsEsMantenimientoRelaciones(Boolean isEsMantenimientoRelaciones) {
		this.isEsMantenimientoRelaciones = isEsMantenimientoRelaciones;
	}

	public Boolean getIsEsMantenimientoRelacionado() {
		return isEsMantenimientoRelacionado;
	}

	public void setIsEsMantenimientoRelacionado(Boolean isEsMantenimientoRelacionado) {
		this.isEsMantenimientoRelacionado = isEsMantenimientoRelacionado;
	}

	public Boolean getesParaBusquedaForeignKey() {
		return esParaBusquedaForeignKey;
	}

	public void setesParaBusquedaForeignKey(Boolean esParaBusquedaForeignKey) {
		this.esParaBusquedaForeignKey = esParaBusquedaForeignKey;
	}

	public Boolean getIsContieneImagenes() {
		return isContieneImagenes;
	}

	public void setIsContieneImagenes(Boolean isContieneImagenes) {
		this.isContieneImagenes = isContieneImagenes;
	}		
	
	
	public void cargarCombosEmpresasForeignKeyLista(String sFinalQuery)throws Exception
	{
		try
		{
			this.empresasForeignKey=new ArrayList<Empresa>();

			ArrayList<Classe> clases=new ArrayList<Classe>();
			ArrayList<String> arrClasses=new ArrayList<String>();
			Classe classe=new Classe();
			DatosDeep datosDeep=new DatosDeep(false,DeepLoadType.INCLUDE,clases,"");

			EmpresaLogic empresaLogic=new EmpresaLogic();

			//empresaLogic.getEmpresaDataAccess().setIsForForeingKeyData(true);

			if(this.formapagopuntoventaSessionBean==null) {
				this.formapagopuntoventaSessionBean=new FormaPagoPuntoVentaSessionBean();
			}

			if(!this.formapagopuntoventaSessionBean.getisBusquedaDesdeForeignKeySesionEmpresa()) {
				//ARCHITECTURE
				if(Constantes.ISUSAEJBLOGICLAYER) {
					//empresaLogic.getEmpresaDataAccess().setIsForForeingKeyData(true);

					empresaLogic.getTodosEmpresasWithConnection(sFinalQuery,new Pagination());

					this.empresasForeignKey=empresaLogic.getEmpresas();

				} else if(Constantes.ISUSAEJBREMOTE) {

				} else if(Constantes.ISUSAEJBHOME) {
				}


				//ARCHITECTURE
			} else {
				if(!this.conCargarMinimo) {
					this.setVisibilidadBusquedasParaEmpresa(true);
				}
				//ARCHITECTURE

				if(Constantes.ISUSAEJBLOGICLAYER) {
					empresaLogic.getEntityWithConnection(formapagopuntoventaSessionBean.getlidEmpresaActual());
					this.empresasForeignKey.add(empresaLogic.getEmpresa());
				} else if(Constantes.ISUSAEJBREMOTE) {
				} else if(Constantes.ISUSAEJBHOME) {
				}
				//ARCHITECTURE
			}
		}
		catch(Exception e)
		{
			throw e;
		}
	}

	public void cargarCombosSucursalsForeignKeyLista(String sFinalQuery)throws Exception
	{
		try
		{
			this.sucursalsForeignKey=new ArrayList<Sucursal>();

			ArrayList<Classe> clases=new ArrayList<Classe>();
			ArrayList<String> arrClasses=new ArrayList<String>();
			Classe classe=new Classe();
			DatosDeep datosDeep=new DatosDeep(false,DeepLoadType.INCLUDE,clases,"");

			SucursalLogic sucursalLogic=new SucursalLogic();

			//sucursalLogic.getSucursalDataAccess().setIsForForeingKeyData(true);

			if(this.formapagopuntoventaSessionBean==null) {
				this.formapagopuntoventaSessionBean=new FormaPagoPuntoVentaSessionBean();
			}

			if(!this.formapagopuntoventaSessionBean.getisBusquedaDesdeForeignKeySesionSucursal()) {
				//ARCHITECTURE
				if(Constantes.ISUSAEJBLOGICLAYER) {
					//sucursalLogic.getSucursalDataAccess().setIsForForeingKeyData(true);

					sucursalLogic.getTodosSucursalsWithConnection(sFinalQuery,new Pagination());

					this.sucursalsForeignKey=sucursalLogic.getSucursals();

				} else if(Constantes.ISUSAEJBREMOTE) {

				} else if(Constantes.ISUSAEJBHOME) {
				}


				//ARCHITECTURE
			} else {
				if(!this.conCargarMinimo) {
					this.setVisibilidadBusquedasParaSucursal(true);
				}
				//ARCHITECTURE

				if(Constantes.ISUSAEJBLOGICLAYER) {
					sucursalLogic.getEntityWithConnection(formapagopuntoventaSessionBean.getlidSucursalActual());
					this.sucursalsForeignKey.add(sucursalLogic.getSucursal());
				} else if(Constantes.ISUSAEJBREMOTE) {
				} else if(Constantes.ISUSAEJBHOME) {
				}
				//ARCHITECTURE
			}
		}
		catch(Exception e)
		{
			throw e;
		}
	}

	public void cargarCombosEjerciciosForeignKeyLista(String sFinalQuery)throws Exception
	{
		try
		{
			this.ejerciciosForeignKey=new ArrayList<Ejercicio>();

			ArrayList<Classe> clases=new ArrayList<Classe>();
			ArrayList<String> arrClasses=new ArrayList<String>();
			Classe classe=new Classe();
			DatosDeep datosDeep=new DatosDeep(false,DeepLoadType.INCLUDE,clases,"");

			EjercicioLogic ejercicioLogic=new EjercicioLogic();

			//ejercicioLogic.getEjercicioDataAccess().setIsForForeingKeyData(true);

			if(this.formapagopuntoventaSessionBean==null) {
				this.formapagopuntoventaSessionBean=new FormaPagoPuntoVentaSessionBean();
			}

			if(!this.formapagopuntoventaSessionBean.getisBusquedaDesdeForeignKeySesionEjercicio()) {
				//ARCHITECTURE
				if(Constantes.ISUSAEJBLOGICLAYER) {
					//ejercicioLogic.getEjercicioDataAccess().setIsForForeingKeyData(true);

					ejercicioLogic.getTodosEjerciciosWithConnection(sFinalQuery,new Pagination());

					this.ejerciciosForeignKey=ejercicioLogic.getEjercicios();

				} else if(Constantes.ISUSAEJBREMOTE) {

				} else if(Constantes.ISUSAEJBHOME) {
				}


				//ARCHITECTURE
			} else {
				if(!this.conCargarMinimo) {
					this.setVisibilidadBusquedasParaEjercicio(true);
				}
				//ARCHITECTURE

				if(Constantes.ISUSAEJBLOGICLAYER) {
					ejercicioLogic.getEntityWithConnection(formapagopuntoventaSessionBean.getlidEjercicioActual());
					this.ejerciciosForeignKey.add(ejercicioLogic.getEjercicio());
				} else if(Constantes.ISUSAEJBREMOTE) {
				} else if(Constantes.ISUSAEJBHOME) {
				}
				//ARCHITECTURE
			}
		}
		catch(Exception e)
		{
			throw e;
		}
	}

	public void cargarCombosPeriodosForeignKeyLista(String sFinalQuery)throws Exception
	{
		try
		{
			this.periodosForeignKey=new ArrayList<Periodo>();

			ArrayList<Classe> clases=new ArrayList<Classe>();
			ArrayList<String> arrClasses=new ArrayList<String>();
			Classe classe=new Classe();
			DatosDeep datosDeep=new DatosDeep(false,DeepLoadType.INCLUDE,clases,"");

			PeriodoLogic periodoLogic=new PeriodoLogic();

			//periodoLogic.getPeriodoDataAccess().setIsForForeingKeyData(true);

			if(this.formapagopuntoventaSessionBean==null) {
				this.formapagopuntoventaSessionBean=new FormaPagoPuntoVentaSessionBean();
			}

			if(!this.formapagopuntoventaSessionBean.getisBusquedaDesdeForeignKeySesionPeriodo()) {
				//ARCHITECTURE
				if(Constantes.ISUSAEJBLOGICLAYER) {
					//periodoLogic.getPeriodoDataAccess().setIsForForeingKeyData(true);

					periodoLogic.getTodosPeriodosWithConnection(sFinalQuery,new Pagination());

					this.periodosForeignKey=periodoLogic.getPeriodos();

				} else if(Constantes.ISUSAEJBREMOTE) {

				} else if(Constantes.ISUSAEJBHOME) {
				}


				//ARCHITECTURE
			} else {
				if(!this.conCargarMinimo) {
					this.setVisibilidadBusquedasParaPeriodo(true);
				}
				//ARCHITECTURE

				if(Constantes.ISUSAEJBLOGICLAYER) {
					periodoLogic.getEntityWithConnection(formapagopuntoventaSessionBean.getlidPeriodoActual());
					this.periodosForeignKey.add(periodoLogic.getPeriodo());
				} else if(Constantes.ISUSAEJBREMOTE) {
				} else if(Constantes.ISUSAEJBHOME) {
				}
				//ARCHITECTURE
			}
		}
		catch(Exception e)
		{
			throw e;
		}
	}

	public void cargarCombosFacturaPuntoVentasForeignKeyLista(String sFinalQuery)throws Exception
	{
		try
		{
			this.facturapuntoventasForeignKey=new ArrayList<FacturaPuntoVenta>();

			ArrayList<Classe> clases=new ArrayList<Classe>();
			ArrayList<String> arrClasses=new ArrayList<String>();
			Classe classe=new Classe();
			DatosDeep datosDeep=new DatosDeep(false,DeepLoadType.INCLUDE,clases,"");

			FacturaPuntoVentaLogic facturapuntoventaLogic=new FacturaPuntoVentaLogic();

			//facturapuntoventaLogic.getFacturaPuntoVentaDataAccess().setIsForForeingKeyData(true);

			if(this.formapagopuntoventaSessionBean==null) {
				this.formapagopuntoventaSessionBean=new FormaPagoPuntoVentaSessionBean();
			}

			if(!this.formapagopuntoventaSessionBean.getisBusquedaDesdeForeignKeySesionFacturaPuntoVenta()) {
				//ARCHITECTURE
				if(Constantes.ISUSAEJBLOGICLAYER) {
					//facturapuntoventaLogic.getFacturaPuntoVentaDataAccess().setIsForForeingKeyData(true);

					facturapuntoventaLogic.getTodosFacturaPuntoVentasWithConnection(sFinalQuery,new Pagination());

					this.facturapuntoventasForeignKey=facturapuntoventaLogic.getFacturaPuntoVentas();

				} else if(Constantes.ISUSAEJBREMOTE) {

				} else if(Constantes.ISUSAEJBHOME) {
				}


				//ARCHITECTURE
			} else {
				if(!this.conCargarMinimo) {
					this.setVisibilidadBusquedasParaFacturaPuntoVenta(true);
				}
				//ARCHITECTURE

				if(Constantes.ISUSAEJBLOGICLAYER) {
					facturapuntoventaLogic.getEntityWithConnection(formapagopuntoventaSessionBean.getlidFacturaPuntoVentaActual());
					this.facturapuntoventasForeignKey.add(facturapuntoventaLogic.getFacturaPuntoVenta());
				} else if(Constantes.ISUSAEJBREMOTE) {
				} else if(Constantes.ISUSAEJBHOME) {
				}
				//ARCHITECTURE
			}
		}
		catch(Exception e)
		{
			throw e;
		}
	}

	public void cargarCombosTipoFormaPagosForeignKeyLista(String sFinalQuery)throws Exception
	{
		try
		{
			this.tipoformapagosForeignKey=new ArrayList<TipoFormaPago>();

			ArrayList<Classe> clases=new ArrayList<Classe>();
			ArrayList<String> arrClasses=new ArrayList<String>();
			Classe classe=new Classe();
			DatosDeep datosDeep=new DatosDeep(false,DeepLoadType.INCLUDE,clases,"");

			TipoFormaPagoLogic tipoformapagoLogic=new TipoFormaPagoLogic();

			//tipoformapagoLogic.getTipoFormaPagoDataAccess().setIsForForeingKeyData(true);

			if(this.formapagopuntoventaSessionBean==null) {
				this.formapagopuntoventaSessionBean=new FormaPagoPuntoVentaSessionBean();
			}

			if(!this.formapagopuntoventaSessionBean.getisBusquedaDesdeForeignKeySesionTipoFormaPago()) {
				//ARCHITECTURE
				if(Constantes.ISUSAEJBLOGICLAYER) {
					//tipoformapagoLogic.getTipoFormaPagoDataAccess().setIsForForeingKeyData(true);

					tipoformapagoLogic.getTodosTipoFormaPagosWithConnection(sFinalQuery,new Pagination());

					this.tipoformapagosForeignKey=tipoformapagoLogic.getTipoFormaPagos();

				} else if(Constantes.ISUSAEJBREMOTE) {

				} else if(Constantes.ISUSAEJBHOME) {
				}


				//ARCHITECTURE
			} else {
				if(!this.conCargarMinimo) {
					this.setVisibilidadBusquedasParaTipoFormaPago(true);
				}
				//ARCHITECTURE

				if(Constantes.ISUSAEJBLOGICLAYER) {
					tipoformapagoLogic.getEntityWithConnection(formapagopuntoventaSessionBean.getlidTipoFormaPagoActual());
					this.tipoformapagosForeignKey.add(tipoformapagoLogic.getTipoFormaPago());
				} else if(Constantes.ISUSAEJBREMOTE) {
				} else if(Constantes.ISUSAEJBHOME) {
				}
				//ARCHITECTURE
			}
		}
		catch(Exception e)
		{
			throw e;
		}
	}

	public void cargarCombosBancosForeignKeyLista(String sFinalQuery)throws Exception
	{
		try
		{
			this.bancosForeignKey=new ArrayList<Banco>();

			ArrayList<Classe> clases=new ArrayList<Classe>();
			ArrayList<String> arrClasses=new ArrayList<String>();
			Classe classe=new Classe();
			DatosDeep datosDeep=new DatosDeep(false,DeepLoadType.INCLUDE,clases,"");

			Banco bancoNulo = new Banco();

			BancoLogic bancoLogic=new BancoLogic();

			//bancoLogic.getBancoDataAccess().setIsForForeingKeyData(true);

			if(this.formapagopuntoventaSessionBean==null) {
				this.formapagopuntoventaSessionBean=new FormaPagoPuntoVentaSessionBean();
			}

			if(!this.formapagopuntoventaSessionBean.getisBusquedaDesdeForeignKeySesionBanco()) {
				//ARCHITECTURE
				if(Constantes.ISUSAEJBLOGICLAYER) {
					//bancoLogic.getBancoDataAccess().setIsForForeingKeyData(true);

					bancoLogic.getTodosBancosWithConnection(sFinalQuery,new Pagination());

					this.bancosForeignKey=bancoLogic.getBancos();

				} else if(Constantes.ISUSAEJBREMOTE) {

				} else if(Constantes.ISUSAEJBHOME) {
				}

				this.bancosForeignKey.add(0, bancoNulo);

				//ARCHITECTURE
			} else {
				if(!this.conCargarMinimo) {
					this.setVisibilidadBusquedasParaBanco(true);
				}
				//ARCHITECTURE

				if(Constantes.ISUSAEJBLOGICLAYER) {
					bancoLogic.getEntityWithConnection(formapagopuntoventaSessionBean.getlidBancoActual());
					this.bancosForeignKey.add(bancoLogic.getBanco());
				} else if(Constantes.ISUSAEJBREMOTE) {
				} else if(Constantes.ISUSAEJBHOME) {
				}
				//ARCHITECTURE
			}
		}
		catch(Exception e)
		{
			throw e;
		}
	}

	public void cargarCombosCuentaBancoPunVensForeignKeyLista(String sFinalQuery)throws Exception
	{
		try
		{
			this.cuentabancopunvensForeignKey=new ArrayList<CuentaBancoPunVen>();

			ArrayList<Classe> clases=new ArrayList<Classe>();
			ArrayList<String> arrClasses=new ArrayList<String>();
			Classe classe=new Classe();
			DatosDeep datosDeep=new DatosDeep(false,DeepLoadType.INCLUDE,clases,"");

			CuentaBancoPunVen cuentabancopunvenNulo = new CuentaBancoPunVen();

			CuentaBancoPunVenLogic cuentabancopunvenLogic=new CuentaBancoPunVenLogic();

			//cuentabancopunvenLogic.getCuentaBancoPunVenDataAccess().setIsForForeingKeyData(true);

			if(this.formapagopuntoventaSessionBean==null) {
				this.formapagopuntoventaSessionBean=new FormaPagoPuntoVentaSessionBean();
			}

			if(!this.formapagopuntoventaSessionBean.getisBusquedaDesdeForeignKeySesionCuentaBancoPunVen()) {
				//ARCHITECTURE
				if(Constantes.ISUSAEJBLOGICLAYER) {
					//cuentabancopunvenLogic.getCuentaBancoPunVenDataAccess().setIsForForeingKeyData(true);

					cuentabancopunvenLogic.getTodosCuentaBancoPunVensWithConnection(sFinalQuery,new Pagination());

					this.cuentabancopunvensForeignKey=cuentabancopunvenLogic.getCuentaBancoPunVens();

				} else if(Constantes.ISUSAEJBREMOTE) {

				} else if(Constantes.ISUSAEJBHOME) {
				}

				this.cuentabancopunvensForeignKey.add(0, cuentabancopunvenNulo);

				//ARCHITECTURE
			} else {
				if(!this.conCargarMinimo) {
					this.setVisibilidadBusquedasParaCuentaBancoPunVen(true);
				}
				//ARCHITECTURE

				if(Constantes.ISUSAEJBLOGICLAYER) {
					cuentabancopunvenLogic.getEntityWithConnection(formapagopuntoventaSessionBean.getlidCuentaBancoPunVenActual());
					this.cuentabancopunvensForeignKey.add(cuentabancopunvenLogic.getCuentaBancoPunVen());
				} else if(Constantes.ISUSAEJBREMOTE) {
				} else if(Constantes.ISUSAEJBHOME) {
				}
				//ARCHITECTURE
			}
		}
		catch(Exception e)
		{
			throw e;
		}
	}

	public void cargarCombosTipoRiesgoChequesForeignKeyLista(String sFinalQuery)throws Exception
	{
		try
		{
			this.tiporiesgochequesForeignKey=new ArrayList<TipoRiesgoCheque>();

			ArrayList<Classe> clases=new ArrayList<Classe>();
			ArrayList<String> arrClasses=new ArrayList<String>();
			Classe classe=new Classe();
			DatosDeep datosDeep=new DatosDeep(false,DeepLoadType.INCLUDE,clases,"");

			TipoRiesgoCheque tiporiesgochequeNulo = new TipoRiesgoCheque();

			TipoRiesgoChequeLogic tiporiesgochequeLogic=new TipoRiesgoChequeLogic();

			//tiporiesgochequeLogic.getTipoRiesgoChequeDataAccess().setIsForForeingKeyData(true);

			if(this.formapagopuntoventaSessionBean==null) {
				this.formapagopuntoventaSessionBean=new FormaPagoPuntoVentaSessionBean();
			}

			if(!this.formapagopuntoventaSessionBean.getisBusquedaDesdeForeignKeySesionTipoRiesgoCheque()) {
				//ARCHITECTURE
				if(Constantes.ISUSAEJBLOGICLAYER) {
					//tiporiesgochequeLogic.getTipoRiesgoChequeDataAccess().setIsForForeingKeyData(true);

					tiporiesgochequeLogic.getTodosTipoRiesgoChequesWithConnection(sFinalQuery,new Pagination());

					this.tiporiesgochequesForeignKey=tiporiesgochequeLogic.getTipoRiesgoCheques();

				} else if(Constantes.ISUSAEJBREMOTE) {

				} else if(Constantes.ISUSAEJBHOME) {
				}

				this.tiporiesgochequesForeignKey.add(0, tiporiesgochequeNulo);

				//ARCHITECTURE
			} else {
				if(!this.conCargarMinimo) {
					this.setVisibilidadBusquedasParaTipoRiesgoCheque(true);
				}
				//ARCHITECTURE

				if(Constantes.ISUSAEJBLOGICLAYER) {
					tiporiesgochequeLogic.getEntityWithConnection(formapagopuntoventaSessionBean.getlidTipoRiesgoChequeActual());
					this.tiporiesgochequesForeignKey.add(tiporiesgochequeLogic.getTipoRiesgoCheque());
				} else if(Constantes.ISUSAEJBREMOTE) {
				} else if(Constantes.ISUSAEJBHOME) {
				}
				//ARCHITECTURE
			}
		}
		catch(Exception e)
		{
			throw e;
		}
	}

	public void cargarCombosBancoTarjetasForeignKeyLista(String sFinalQuery)throws Exception
	{
		try
		{
			this.bancotarjetasForeignKey=new ArrayList<Banco>();

			ArrayList<Classe> clases=new ArrayList<Classe>();
			ArrayList<String> arrClasses=new ArrayList<String>();
			Classe classe=new Classe();
			DatosDeep datosDeep=new DatosDeep(false,DeepLoadType.INCLUDE,clases,"");

			Banco bancotarjetaNulo = new Banco();

			BancoLogic bancoLogic=new BancoLogic();

			//bancoLogic.getBancoDataAccess().setIsForForeingKeyData(true);

			if(this.formapagopuntoventaSessionBean==null) {
				this.formapagopuntoventaSessionBean=new FormaPagoPuntoVentaSessionBean();
			}

			if(!this.formapagopuntoventaSessionBean.getisBusquedaDesdeForeignKeySesionBancoTarjeta()) {
				//ARCHITECTURE
				if(Constantes.ISUSAEJBLOGICLAYER) {
					//bancotarjetaLogic.getBancoDataAccess().setIsForForeingKeyData(true);

					bancoLogic.getTodosBancosWithConnection(sFinalQuery,new Pagination());

					this.bancotarjetasForeignKey=bancoLogic.getBancos();

				} else if(Constantes.ISUSAEJBREMOTE) {

				} else if(Constantes.ISUSAEJBHOME) {
				}

				this.bancotarjetasForeignKey.add(0, bancotarjetaNulo);

				//ARCHITECTURE
			} else {
				if(!this.conCargarMinimo) {
					this.setVisibilidadBusquedasParaBancoTarjeta(true);
				}
				//ARCHITECTURE

				if(Constantes.ISUSAEJBLOGICLAYER) {
					bancoLogic.getEntityWithConnection(formapagopuntoventaSessionBean.getlidBancoTarjetaActual());
					this.bancotarjetasForeignKey.add(bancoLogic.getBanco());
				} else if(Constantes.ISUSAEJBREMOTE) {
				} else if(Constantes.ISUSAEJBHOME) {
				}
				//ARCHITECTURE
			}
		}
		catch(Exception e)
		{
			throw e;
		}
	}

	public void cargarCombosTarjetaCreditosForeignKeyLista(String sFinalQuery)throws Exception
	{
		try
		{
			this.tarjetacreditosForeignKey=new ArrayList<TarjetaCredito>();

			ArrayList<Classe> clases=new ArrayList<Classe>();
			ArrayList<String> arrClasses=new ArrayList<String>();
			Classe classe=new Classe();
			DatosDeep datosDeep=new DatosDeep(false,DeepLoadType.INCLUDE,clases,"");

			TarjetaCredito tarjetacreditoNulo = new TarjetaCredito();

			TarjetaCreditoLogic tarjetacreditoLogic=new TarjetaCreditoLogic();

			//tarjetacreditoLogic.getTarjetaCreditoDataAccess().setIsForForeingKeyData(true);

			if(this.formapagopuntoventaSessionBean==null) {
				this.formapagopuntoventaSessionBean=new FormaPagoPuntoVentaSessionBean();
			}

			if(!this.formapagopuntoventaSessionBean.getisBusquedaDesdeForeignKeySesionTarjetaCredito()) {
				//ARCHITECTURE
				if(Constantes.ISUSAEJBLOGICLAYER) {
					//tarjetacreditoLogic.getTarjetaCreditoDataAccess().setIsForForeingKeyData(true);

					tarjetacreditoLogic.getTodosTarjetaCreditosWithConnection(sFinalQuery,new Pagination());

					this.tarjetacreditosForeignKey=tarjetacreditoLogic.getTarjetaCreditos();

				} else if(Constantes.ISUSAEJBREMOTE) {

				} else if(Constantes.ISUSAEJBHOME) {
				}

				this.tarjetacreditosForeignKey.add(0, tarjetacreditoNulo);

				//ARCHITECTURE
			} else {
				if(!this.conCargarMinimo) {
					this.setVisibilidadBusquedasParaTarjetaCredito(true);
				}
				//ARCHITECTURE

				if(Constantes.ISUSAEJBLOGICLAYER) {
					tarjetacreditoLogic.getEntityWithConnection(formapagopuntoventaSessionBean.getlidTarjetaCreditoActual());
					this.tarjetacreditosForeignKey.add(tarjetacreditoLogic.getTarjetaCredito());
				} else if(Constantes.ISUSAEJBREMOTE) {
				} else if(Constantes.ISUSAEJBHOME) {
				}
				//ARCHITECTURE
			}
		}
		catch(Exception e)
		{
			throw e;
		}
	}

	public void cargarCombosTipoInteresTarjetasForeignKeyLista(String sFinalQuery)throws Exception
	{
		try
		{
			this.tipointerestarjetasForeignKey=new ArrayList<TipoInteresTarjeta>();

			ArrayList<Classe> clases=new ArrayList<Classe>();
			ArrayList<String> arrClasses=new ArrayList<String>();
			Classe classe=new Classe();
			DatosDeep datosDeep=new DatosDeep(false,DeepLoadType.INCLUDE,clases,"");

			TipoInteresTarjeta tipointerestarjetaNulo = new TipoInteresTarjeta();

			TipoInteresTarjetaLogic tipointerestarjetaLogic=new TipoInteresTarjetaLogic();

			//tipointerestarjetaLogic.getTipoInteresTarjetaDataAccess().setIsForForeingKeyData(true);

			if(this.formapagopuntoventaSessionBean==null) {
				this.formapagopuntoventaSessionBean=new FormaPagoPuntoVentaSessionBean();
			}

			if(!this.formapagopuntoventaSessionBean.getisBusquedaDesdeForeignKeySesionTipoInteresTarjeta()) {
				//ARCHITECTURE
				if(Constantes.ISUSAEJBLOGICLAYER) {
					//tipointerestarjetaLogic.getTipoInteresTarjetaDataAccess().setIsForForeingKeyData(true);

					tipointerestarjetaLogic.getTodosTipoInteresTarjetasWithConnection(sFinalQuery,new Pagination());

					this.tipointerestarjetasForeignKey=tipointerestarjetaLogic.getTipoInteresTarjetas();

				} else if(Constantes.ISUSAEJBREMOTE) {

				} else if(Constantes.ISUSAEJBHOME) {
				}

				this.tipointerestarjetasForeignKey.add(0, tipointerestarjetaNulo);

				//ARCHITECTURE
			} else {
				if(!this.conCargarMinimo) {
					this.setVisibilidadBusquedasParaTipoInteresTarjeta(true);
				}
				//ARCHITECTURE

				if(Constantes.ISUSAEJBLOGICLAYER) {
					tipointerestarjetaLogic.getEntityWithConnection(formapagopuntoventaSessionBean.getlidTipoInteresTarjetaActual());
					this.tipointerestarjetasForeignKey.add(tipointerestarjetaLogic.getTipoInteresTarjeta());
				} else if(Constantes.ISUSAEJBREMOTE) {
				} else if(Constantes.ISUSAEJBHOME) {
				}
				//ARCHITECTURE
			}
		}
		catch(Exception e)
		{
			throw e;
		}
	}

	public void cargarCombosTipoPagoTarjetasForeignKeyLista(String sFinalQuery)throws Exception
	{
		try
		{
			this.tipopagotarjetasForeignKey=new ArrayList<TipoPagoTarjeta>();

			ArrayList<Classe> clases=new ArrayList<Classe>();
			ArrayList<String> arrClasses=new ArrayList<String>();
			Classe classe=new Classe();
			DatosDeep datosDeep=new DatosDeep(false,DeepLoadType.INCLUDE,clases,"");

			TipoPagoTarjeta tipopagotarjetaNulo = new TipoPagoTarjeta();

			TipoPagoTarjetaLogic tipopagotarjetaLogic=new TipoPagoTarjetaLogic();

			//tipopagotarjetaLogic.getTipoPagoTarjetaDataAccess().setIsForForeingKeyData(true);

			if(this.formapagopuntoventaSessionBean==null) {
				this.formapagopuntoventaSessionBean=new FormaPagoPuntoVentaSessionBean();
			}

			if(!this.formapagopuntoventaSessionBean.getisBusquedaDesdeForeignKeySesionTipoPagoTarjeta()) {
				//ARCHITECTURE
				if(Constantes.ISUSAEJBLOGICLAYER) {
					//tipopagotarjetaLogic.getTipoPagoTarjetaDataAccess().setIsForForeingKeyData(true);

					tipopagotarjetaLogic.getTodosTipoPagoTarjetasWithConnection(sFinalQuery,new Pagination());

					this.tipopagotarjetasForeignKey=tipopagotarjetaLogic.getTipoPagoTarjetas();

				} else if(Constantes.ISUSAEJBREMOTE) {

				} else if(Constantes.ISUSAEJBHOME) {
				}

				this.tipopagotarjetasForeignKey.add(0, tipopagotarjetaNulo);

				//ARCHITECTURE
			} else {
				if(!this.conCargarMinimo) {
					this.setVisibilidadBusquedasParaTipoPagoTarjeta(true);
				}
				//ARCHITECTURE

				if(Constantes.ISUSAEJBLOGICLAYER) {
					tipopagotarjetaLogic.getEntityWithConnection(formapagopuntoventaSessionBean.getlidTipoPagoTarjetaActual());
					this.tipopagotarjetasForeignKey.add(tipopagotarjetaLogic.getTipoPagoTarjeta());
				} else if(Constantes.ISUSAEJBREMOTE) {
				} else if(Constantes.ISUSAEJBHOME) {
				}
				//ARCHITECTURE
			}
		}
		catch(Exception e)
		{
			throw e;
		}
	}

	public void cargarCombosConexionsForeignKeyLista(String sFinalQuery)throws Exception
	{
		try
		{
			this.conexionsForeignKey=new ArrayList<Conexion>();

			ArrayList<Classe> clases=new ArrayList<Classe>();
			ArrayList<String> arrClasses=new ArrayList<String>();
			Classe classe=new Classe();
			DatosDeep datosDeep=new DatosDeep(false,DeepLoadType.INCLUDE,clases,"");

			Conexion conexionNulo = new Conexion();

			ConexionLogic conexionLogic=new ConexionLogic();

			//conexionLogic.getConexionDataAccess().setIsForForeingKeyData(true);

			if(this.formapagopuntoventaSessionBean==null) {
				this.formapagopuntoventaSessionBean=new FormaPagoPuntoVentaSessionBean();
			}

			if(!this.formapagopuntoventaSessionBean.getisBusquedaDesdeForeignKeySesionConexion()) {
				//ARCHITECTURE
				if(Constantes.ISUSAEJBLOGICLAYER) {
					//conexionLogic.getConexionDataAccess().setIsForForeingKeyData(true);

					conexionLogic.getTodosConexionsWithConnection(sFinalQuery,new Pagination());

					this.conexionsForeignKey=conexionLogic.getConexions();

				} else if(Constantes.ISUSAEJBREMOTE) {

				} else if(Constantes.ISUSAEJBHOME) {
				}

				this.conexionsForeignKey.add(0, conexionNulo);

				//ARCHITECTURE
			} else {
				if(!this.conCargarMinimo) {
					this.setVisibilidadBusquedasParaConexion(true);
				}
				//ARCHITECTURE

				if(Constantes.ISUSAEJBLOGICLAYER) {
					conexionLogic.getEntityWithConnection(formapagopuntoventaSessionBean.getlidConexionActual());
					this.conexionsForeignKey.add(conexionLogic.getConexion());
				} else if(Constantes.ISUSAEJBREMOTE) {
				} else if(Constantes.ISUSAEJBHOME) {
				}
				//ARCHITECTURE
			}
		}
		catch(Exception e)
		{
			throw e;
		}
	}

	public void cargarCombosMessForeignKeyLista(String sFinalQuery)throws Exception
	{
		try
		{
			this.messForeignKey=new ArrayList<Mes>();

			ArrayList<Classe> clases=new ArrayList<Classe>();
			ArrayList<String> arrClasses=new ArrayList<String>();
			Classe classe=new Classe();
			DatosDeep datosDeep=new DatosDeep(false,DeepLoadType.INCLUDE,clases,"");

			MesLogic mesLogic=new MesLogic();

			//mesLogic.getMesDataAccess().setIsForForeingKeyData(true);

			if(this.formapagopuntoventaSessionBean==null) {
				this.formapagopuntoventaSessionBean=new FormaPagoPuntoVentaSessionBean();
			}

			if(!this.formapagopuntoventaSessionBean.getisBusquedaDesdeForeignKeySesionMes()) {
				//ARCHITECTURE
				if(Constantes.ISUSAEJBLOGICLAYER) {
					//mesLogic.getMesDataAccess().setIsForForeingKeyData(true);

					mesLogic.getTodosMessWithConnection(sFinalQuery,new Pagination());

					this.messForeignKey=mesLogic.getMess();

				} else if(Constantes.ISUSAEJBREMOTE) {

				} else if(Constantes.ISUSAEJBHOME) {
				}


				//ARCHITECTURE
			} else {
				if(!this.conCargarMinimo) {
					this.setVisibilidadBusquedasParaMes(true);
				}
				//ARCHITECTURE

				if(Constantes.ISUSAEJBLOGICLAYER) {
					mesLogic.getEntityWithConnection(formapagopuntoventaSessionBean.getlidMesActual());
					this.messForeignKey.add(mesLogic.getMes());
				} else if(Constantes.ISUSAEJBREMOTE) {
				} else if(Constantes.ISUSAEJBHOME) {
				}
				//ARCHITECTURE
			}
		}
		catch(Exception e)
		{
			throw e;
		}
	}

	public void cargarCombosAniosForeignKeyLista(String sFinalQuery)throws Exception
	{
		try
		{
			this.aniosForeignKey=new ArrayList<Anio>();

			ArrayList<Classe> clases=new ArrayList<Classe>();
			ArrayList<String> arrClasses=new ArrayList<String>();
			Classe classe=new Classe();
			DatosDeep datosDeep=new DatosDeep(false,DeepLoadType.INCLUDE,clases,"");

			AnioLogic anioLogic=new AnioLogic();

			//anioLogic.getAnioDataAccess().setIsForForeingKeyData(true);

			if(this.formapagopuntoventaSessionBean==null) {
				this.formapagopuntoventaSessionBean=new FormaPagoPuntoVentaSessionBean();
			}

			if(!this.formapagopuntoventaSessionBean.getisBusquedaDesdeForeignKeySesionAnio()) {
				//ARCHITECTURE
				if(Constantes.ISUSAEJBLOGICLAYER) {
					//anioLogic.getAnioDataAccess().setIsForForeingKeyData(true);

					anioLogic.getTodosAniosWithConnection(sFinalQuery,new Pagination());

					this.aniosForeignKey=anioLogic.getAnios();

				} else if(Constantes.ISUSAEJBREMOTE) {

				} else if(Constantes.ISUSAEJBHOME) {
				}


				//ARCHITECTURE
			} else {
				if(!this.conCargarMinimo) {
					this.setVisibilidadBusquedasParaAnio(true);
				}
				//ARCHITECTURE

				if(Constantes.ISUSAEJBLOGICLAYER) {
					anioLogic.getEntityWithConnection(formapagopuntoventaSessionBean.getlidAnioActual());
					this.aniosForeignKey.add(anioLogic.getAnio());
				} else if(Constantes.ISUSAEJBREMOTE) {
				} else if(Constantes.ISUSAEJBHOME) {
				}
				//ARCHITECTURE
			}
		}
		catch(Exception e)
		{
			throw e;
		}
	}

	public void cargarCombosCuentaContablesForeignKeyLista(String sFinalQuery)throws Exception
	{
		try
		{
			this.cuentacontablesForeignKey=new ArrayList<CuentaContable>();

			ArrayList<Classe> clases=new ArrayList<Classe>();
			ArrayList<String> arrClasses=new ArrayList<String>();
			Classe classe=new Classe();
			DatosDeep datosDeep=new DatosDeep(false,DeepLoadType.INCLUDE,clases,"");

			CuentaContable cuentacontableNulo = new CuentaContable();

			CuentaContableLogic cuentacontableLogic=new CuentaContableLogic();

			//cuentacontableLogic.getCuentaContableDataAccess().setIsForForeingKeyData(true);

			if(this.formapagopuntoventaSessionBean==null) {
				this.formapagopuntoventaSessionBean=new FormaPagoPuntoVentaSessionBean();
			}

			if(!this.formapagopuntoventaSessionBean.getisBusquedaDesdeForeignKeySesionCuentaContable()) {
				//ARCHITECTURE
				if(Constantes.ISUSAEJBLOGICLAYER) {
					//cuentacontableLogic.getCuentaContableDataAccess().setIsForForeingKeyData(true);

					cuentacontableLogic.getTodosCuentaContablesWithConnection(sFinalQuery,new Pagination());

					this.cuentacontablesForeignKey=cuentacontableLogic.getCuentaContables();

				} else if(Constantes.ISUSAEJBREMOTE) {

				} else if(Constantes.ISUSAEJBHOME) {
				}

				this.cuentacontablesForeignKey.add(0, cuentacontableNulo);

				//ARCHITECTURE
			} else {
				if(!this.conCargarMinimo) {
					this.setVisibilidadBusquedasParaCuentaContable(true);
				}
				//ARCHITECTURE

				if(Constantes.ISUSAEJBLOGICLAYER) {
					cuentacontableLogic.getEntityWithConnection(formapagopuntoventaSessionBean.getlidCuentaContableActual());
					this.cuentacontablesForeignKey.add(cuentacontableLogic.getCuentaContable());
				} else if(Constantes.ISUSAEJBREMOTE) {
				} else if(Constantes.ISUSAEJBHOME) {
				}
				//ARCHITECTURE
			}
		}
		catch(Exception e)
		{
			throw e;
		}
	}

	public void cargarCombosAsientoContablesForeignKeyLista(String sFinalQuery)throws Exception
	{
		try
		{
			this.asientocontablesForeignKey=new ArrayList<AsientoContable>();

			ArrayList<Classe> clases=new ArrayList<Classe>();
			ArrayList<String> arrClasses=new ArrayList<String>();
			Classe classe=new Classe();
			DatosDeep datosDeep=new DatosDeep(false,DeepLoadType.INCLUDE,clases,"");

			AsientoContable asientocontableNulo = new AsientoContable();

			AsientoContableLogic asientocontableLogic=new AsientoContableLogic();

			//asientocontableLogic.getAsientoContableDataAccess().setIsForForeingKeyData(true);

			if(this.formapagopuntoventaSessionBean==null) {
				this.formapagopuntoventaSessionBean=new FormaPagoPuntoVentaSessionBean();
			}

			if(!this.formapagopuntoventaSessionBean.getisBusquedaDesdeForeignKeySesionAsientoContable()) {
				//ARCHITECTURE
				if(Constantes.ISUSAEJBLOGICLAYER) {
					//asientocontableLogic.getAsientoContableDataAccess().setIsForForeingKeyData(true);

					asientocontableLogic.getTodosAsientoContablesWithConnection(sFinalQuery,new Pagination());

					this.asientocontablesForeignKey=asientocontableLogic.getAsientoContables();

				} else if(Constantes.ISUSAEJBREMOTE) {

				} else if(Constantes.ISUSAEJBHOME) {
				}

				this.asientocontablesForeignKey.add(0, asientocontableNulo);

				//ARCHITECTURE
			} else {
				if(!this.conCargarMinimo) {
					this.setVisibilidadBusquedasParaAsientoContable(true);
				}
				//ARCHITECTURE

				if(Constantes.ISUSAEJBLOGICLAYER) {
					asientocontableLogic.getEntityWithConnection(formapagopuntoventaSessionBean.getlidAsientoContableActual());
					this.asientocontablesForeignKey.add(asientocontableLogic.getAsientoContable());
				} else if(Constantes.ISUSAEJBREMOTE) {
				} else if(Constantes.ISUSAEJBHOME) {
				}
				//ARCHITECTURE
			}
		}
		catch(Exception e)
		{
			throw e;
		}
	}

	
	
	public void setActualEmpresaForeignKey(Long idEmpresaSeleccionado,Boolean conCombosBusquedas,String sFormularioTipoBusqueda)throws Exception
	{
		try
		{
			Empresa  empresaTemp=null;

			for(Empresa empresaAux:empresasForeignKey) {
				if(empresaAux.getId()!=null && empresaAux.getId().equals(idEmpresaSeleccionado)) {
					empresaTemp=empresaAux;
					break;
				}
			}

			if(sFormularioTipoBusqueda.equals("Formulario") || sFormularioTipoBusqueda.equals("Todos")){
				if(empresaTemp!=null) {

					if(this.formapagopuntoventa!=null) {
						this.formapagopuntoventa.setEmpresa(empresaTemp);
					}

					if(this.jInternalFrameDetalleFormFormaPagoPuntoVenta!=null) {
						this.jInternalFrameDetalleFormFormaPagoPuntoVenta.jComboBoxid_empresaFormaPagoPuntoVenta.setSelectedItem(empresaTemp);
					}
				} else {
					//jComboBoxid_empresaFormaPagoPuntoVenta.setSelectedItem(empresaTemp);
					if(this.jInternalFrameDetalleFormFormaPagoPuntoVenta!=null) {
						if(this.jInternalFrameDetalleFormFormaPagoPuntoVenta.jComboBoxid_empresaFormaPagoPuntoVenta.getItemCount()>0) {
							this.jInternalFrameDetalleFormFormaPagoPuntoVenta.jComboBoxid_empresaFormaPagoPuntoVenta.setSelectedIndex(0);
						}
					}
				}
			}

			if(conCombosBusquedas) {

		//BYDAN_BUSQUEDAS
		/*				

		*/			}

		}
		catch(Exception e)
		{
			throw e;
		}
	}

	public String getActualEmpresaForeignKeyDescripcion(Long idEmpresaSeleccionado)throws Exception
	{
		String sDescripcion="";

		try
		{
			Empresa  empresaTemp=null;

			for(Empresa empresaAux:empresasForeignKey) {
				if(empresaAux.getId()!=null && empresaAux.getId().equals(idEmpresaSeleccionado)) {
					empresaTemp=empresaAux;
					break;
				}
			}


			sDescripcion=EmpresaConstantesFunciones.getEmpresaDescripcion(empresaTemp);
		}
		catch(Exception e)
		{
			throw e;
		}

		return sDescripcion;
	}

	@SuppressWarnings("rawtypes")
	public void setActualEmpresaForeignKeyGenerico(Long idEmpresaSeleccionado,JComboBox jComboBoxid_empresaFormaPagoPuntoVentaGenerico)throws Exception
	{
		try
		{
			Empresa  empresaTemp=null;

			for(Empresa empresaAux:empresasForeignKey) {
				if(empresaAux.getId()!=null && empresaAux.getId().equals(idEmpresaSeleccionado)) {
					empresaTemp=empresaAux;
					break;
				}
			}

			if(empresaTemp!=null) {
				jComboBoxid_empresaFormaPagoPuntoVentaGenerico.setSelectedItem(empresaTemp);
			} else {
				if(jComboBoxid_empresaFormaPagoPuntoVentaGenerico!=null && jComboBoxid_empresaFormaPagoPuntoVentaGenerico.getItemCount()>0) {
					jComboBoxid_empresaFormaPagoPuntoVentaGenerico.setSelectedIndex(0);
				}
			}

		}
		catch(Exception e)
		{
			throw e;
		}

	}

	public void setActualSucursalForeignKey(Long idSucursalSeleccionado,Boolean conCombosBusquedas,String sFormularioTipoBusqueda)throws Exception
	{
		try
		{
			Sucursal  sucursalTemp=null;

			for(Sucursal sucursalAux:sucursalsForeignKey) {
				if(sucursalAux.getId()!=null && sucursalAux.getId().equals(idSucursalSeleccionado)) {
					sucursalTemp=sucursalAux;
					break;
				}
			}

			if(sFormularioTipoBusqueda.equals("Formulario") || sFormularioTipoBusqueda.equals("Todos")){
				if(sucursalTemp!=null) {

					if(this.formapagopuntoventa!=null) {
						this.formapagopuntoventa.setSucursal(sucursalTemp);
					}

					if(this.jInternalFrameDetalleFormFormaPagoPuntoVenta!=null) {
						this.jInternalFrameDetalleFormFormaPagoPuntoVenta.jComboBoxid_sucursalFormaPagoPuntoVenta.setSelectedItem(sucursalTemp);
					}
				} else {
					//jComboBoxid_sucursalFormaPagoPuntoVenta.setSelectedItem(sucursalTemp);
					if(this.jInternalFrameDetalleFormFormaPagoPuntoVenta!=null) {
						if(this.jInternalFrameDetalleFormFormaPagoPuntoVenta.jComboBoxid_sucursalFormaPagoPuntoVenta.getItemCount()>0) {
							this.jInternalFrameDetalleFormFormaPagoPuntoVenta.jComboBoxid_sucursalFormaPagoPuntoVenta.setSelectedIndex(0);
						}
					}
				}
			}

			if(conCombosBusquedas) {

		//BYDAN_BUSQUEDAS
		/*				

		*/			}

		}
		catch(Exception e)
		{
			throw e;
		}
	}

	public String getActualSucursalForeignKeyDescripcion(Long idSucursalSeleccionado)throws Exception
	{
		String sDescripcion="";

		try
		{
			Sucursal  sucursalTemp=null;

			for(Sucursal sucursalAux:sucursalsForeignKey) {
				if(sucursalAux.getId()!=null && sucursalAux.getId().equals(idSucursalSeleccionado)) {
					sucursalTemp=sucursalAux;
					break;
				}
			}


			sDescripcion=SucursalConstantesFunciones.getSucursalDescripcion(sucursalTemp);
		}
		catch(Exception e)
		{
			throw e;
		}

		return sDescripcion;
	}

	@SuppressWarnings("rawtypes")
	public void setActualSucursalForeignKeyGenerico(Long idSucursalSeleccionado,JComboBox jComboBoxid_sucursalFormaPagoPuntoVentaGenerico)throws Exception
	{
		try
		{
			Sucursal  sucursalTemp=null;

			for(Sucursal sucursalAux:sucursalsForeignKey) {
				if(sucursalAux.getId()!=null && sucursalAux.getId().equals(idSucursalSeleccionado)) {
					sucursalTemp=sucursalAux;
					break;
				}
			}

			if(sucursalTemp!=null) {
				jComboBoxid_sucursalFormaPagoPuntoVentaGenerico.setSelectedItem(sucursalTemp);
			} else {
				if(jComboBoxid_sucursalFormaPagoPuntoVentaGenerico!=null && jComboBoxid_sucursalFormaPagoPuntoVentaGenerico.getItemCount()>0) {
					jComboBoxid_sucursalFormaPagoPuntoVentaGenerico.setSelectedIndex(0);
				}
			}

		}
		catch(Exception e)
		{
			throw e;
		}

	}

	public void setActualEjercicioForeignKey(Long idEjercicioSeleccionado,Boolean conCombosBusquedas,String sFormularioTipoBusqueda)throws Exception
	{
		try
		{
			Ejercicio  ejercicioTemp=null;

			for(Ejercicio ejercicioAux:ejerciciosForeignKey) {
				if(ejercicioAux.getId()!=null && ejercicioAux.getId().equals(idEjercicioSeleccionado)) {
					ejercicioTemp=ejercicioAux;
					break;
				}
			}

			if(sFormularioTipoBusqueda.equals("Formulario") || sFormularioTipoBusqueda.equals("Todos")){
				if(ejercicioTemp!=null) {

					if(this.formapagopuntoventa!=null) {
						this.formapagopuntoventa.setEjercicio(ejercicioTemp);
					}

					if(this.jInternalFrameDetalleFormFormaPagoPuntoVenta!=null) {
						this.jInternalFrameDetalleFormFormaPagoPuntoVenta.jComboBoxid_ejercicioFormaPagoPuntoVenta.setSelectedItem(ejercicioTemp);
					}
				} else {
					//jComboBoxid_ejercicioFormaPagoPuntoVenta.setSelectedItem(ejercicioTemp);
					if(this.jInternalFrameDetalleFormFormaPagoPuntoVenta!=null) {
						if(this.jInternalFrameDetalleFormFormaPagoPuntoVenta.jComboBoxid_ejercicioFormaPagoPuntoVenta.getItemCount()>0) {
							this.jInternalFrameDetalleFormFormaPagoPuntoVenta.jComboBoxid_ejercicioFormaPagoPuntoVenta.setSelectedIndex(0);
						}
					}
				}
			}

			if(conCombosBusquedas) {

		//BYDAN_BUSQUEDAS
		/*				

		*/			}

		}
		catch(Exception e)
		{
			throw e;
		}
	}

	public String getActualEjercicioForeignKeyDescripcion(Long idEjercicioSeleccionado)throws Exception
	{
		String sDescripcion="";

		try
		{
			Ejercicio  ejercicioTemp=null;

			for(Ejercicio ejercicioAux:ejerciciosForeignKey) {
				if(ejercicioAux.getId()!=null && ejercicioAux.getId().equals(idEjercicioSeleccionado)) {
					ejercicioTemp=ejercicioAux;
					break;
				}
			}


			sDescripcion=EjercicioConstantesFunciones.getEjercicioDescripcion(ejercicioTemp);
		}
		catch(Exception e)
		{
			throw e;
		}

		return sDescripcion;
	}

	@SuppressWarnings("rawtypes")
	public void setActualEjercicioForeignKeyGenerico(Long idEjercicioSeleccionado,JComboBox jComboBoxid_ejercicioFormaPagoPuntoVentaGenerico)throws Exception
	{
		try
		{
			Ejercicio  ejercicioTemp=null;

			for(Ejercicio ejercicioAux:ejerciciosForeignKey) {
				if(ejercicioAux.getId()!=null && ejercicioAux.getId().equals(idEjercicioSeleccionado)) {
					ejercicioTemp=ejercicioAux;
					break;
				}
			}

			if(ejercicioTemp!=null) {
				jComboBoxid_ejercicioFormaPagoPuntoVentaGenerico.setSelectedItem(ejercicioTemp);
			} else {
				if(jComboBoxid_ejercicioFormaPagoPuntoVentaGenerico!=null && jComboBoxid_ejercicioFormaPagoPuntoVentaGenerico.getItemCount()>0) {
					jComboBoxid_ejercicioFormaPagoPuntoVentaGenerico.setSelectedIndex(0);
				}
			}

		}
		catch(Exception e)
		{
			throw e;
		}

	}

	public void setActualPeriodoForeignKey(Long idPeriodoSeleccionado,Boolean conCombosBusquedas,String sFormularioTipoBusqueda)throws Exception
	{
		try
		{
			Periodo  periodoTemp=null;

			for(Periodo periodoAux:periodosForeignKey) {
				if(periodoAux.getId()!=null && periodoAux.getId().equals(idPeriodoSeleccionado)) {
					periodoTemp=periodoAux;
					break;
				}
			}

			if(sFormularioTipoBusqueda.equals("Formulario") || sFormularioTipoBusqueda.equals("Todos")){
				if(periodoTemp!=null) {

					if(this.formapagopuntoventa!=null) {
						this.formapagopuntoventa.setPeriodo(periodoTemp);
					}

					if(this.jInternalFrameDetalleFormFormaPagoPuntoVenta!=null) {
						this.jInternalFrameDetalleFormFormaPagoPuntoVenta.jComboBoxid_periodoFormaPagoPuntoVenta.setSelectedItem(periodoTemp);
					}
				} else {
					//jComboBoxid_periodoFormaPagoPuntoVenta.setSelectedItem(periodoTemp);
					if(this.jInternalFrameDetalleFormFormaPagoPuntoVenta!=null) {
						if(this.jInternalFrameDetalleFormFormaPagoPuntoVenta.jComboBoxid_periodoFormaPagoPuntoVenta.getItemCount()>0) {
							this.jInternalFrameDetalleFormFormaPagoPuntoVenta.jComboBoxid_periodoFormaPagoPuntoVenta.setSelectedIndex(0);
						}
					}
				}
			}

			if(conCombosBusquedas) {

		//BYDAN_BUSQUEDAS
		/*				

		*/			}

		}
		catch(Exception e)
		{
			throw e;
		}
	}

	public String getActualPeriodoForeignKeyDescripcion(Long idPeriodoSeleccionado)throws Exception
	{
		String sDescripcion="";

		try
		{
			Periodo  periodoTemp=null;

			for(Periodo periodoAux:periodosForeignKey) {
				if(periodoAux.getId()!=null && periodoAux.getId().equals(idPeriodoSeleccionado)) {
					periodoTemp=periodoAux;
					break;
				}
			}


			sDescripcion=PeriodoConstantesFunciones.getPeriodoDescripcion(periodoTemp);
		}
		catch(Exception e)
		{
			throw e;
		}

		return sDescripcion;
	}

	@SuppressWarnings("rawtypes")
	public void setActualPeriodoForeignKeyGenerico(Long idPeriodoSeleccionado,JComboBox jComboBoxid_periodoFormaPagoPuntoVentaGenerico)throws Exception
	{
		try
		{
			Periodo  periodoTemp=null;

			for(Periodo periodoAux:periodosForeignKey) {
				if(periodoAux.getId()!=null && periodoAux.getId().equals(idPeriodoSeleccionado)) {
					periodoTemp=periodoAux;
					break;
				}
			}

			if(periodoTemp!=null) {
				jComboBoxid_periodoFormaPagoPuntoVentaGenerico.setSelectedItem(periodoTemp);
			} else {
				if(jComboBoxid_periodoFormaPagoPuntoVentaGenerico!=null && jComboBoxid_periodoFormaPagoPuntoVentaGenerico.getItemCount()>0) {
					jComboBoxid_periodoFormaPagoPuntoVentaGenerico.setSelectedIndex(0);
				}
			}

		}
		catch(Exception e)
		{
			throw e;
		}

	}

	public void setActualFacturaPuntoVentaForeignKey(Long idFacturaPuntoVentaSeleccionado,Boolean conCombosBusquedas,String sFormularioTipoBusqueda)throws Exception
	{
		try
		{
			FacturaPuntoVenta  facturapuntoventaTemp=null;

			for(FacturaPuntoVenta facturapuntoventaAux:facturapuntoventasForeignKey) {
				if(facturapuntoventaAux.getId()!=null && facturapuntoventaAux.getId().equals(idFacturaPuntoVentaSeleccionado)) {
					facturapuntoventaTemp=facturapuntoventaAux;
					break;
				}
			}

			if(sFormularioTipoBusqueda.equals("Formulario") || sFormularioTipoBusqueda.equals("Todos")){
				if(facturapuntoventaTemp!=null) {

					if(this.formapagopuntoventa!=null) {
						this.formapagopuntoventa.setFacturaPuntoVenta(facturapuntoventaTemp);
					}

					if(this.jInternalFrameDetalleFormFormaPagoPuntoVenta!=null) {
						this.jInternalFrameDetalleFormFormaPagoPuntoVenta.jComboBoxid_factura_punto_ventaFormaPagoPuntoVenta.setSelectedItem(facturapuntoventaTemp);
					}
				} else {
					//jComboBoxid_factura_punto_ventaFormaPagoPuntoVenta.setSelectedItem(facturapuntoventaTemp);
					if(this.jInternalFrameDetalleFormFormaPagoPuntoVenta!=null) {
						if(this.jInternalFrameDetalleFormFormaPagoPuntoVenta.jComboBoxid_factura_punto_ventaFormaPagoPuntoVenta.getItemCount()>0) {
							this.jInternalFrameDetalleFormFormaPagoPuntoVenta.jComboBoxid_factura_punto_ventaFormaPagoPuntoVenta.setSelectedIndex(0);
						}
					}
				}
			}

			if(conCombosBusquedas) {

		//BYDAN_BUSQUEDAS
		/*				
				if(sFormularioTipoBusqueda.equals("FK_IdFacturaPuntoVenta") || sFormularioTipoBusqueda.equals("Todos")){
					if(facturapuntoventaTemp!=null && jComboBoxid_factura_punto_ventaFK_IdFacturaPuntoVentaFormaPagoPuntoVenta!=null) {
						jComboBoxid_factura_punto_ventaFK_IdFacturaPuntoVentaFormaPagoPuntoVenta.setSelectedItem(facturapuntoventaTemp);
					} else {
						if(jComboBoxid_factura_punto_ventaFK_IdFacturaPuntoVentaFormaPagoPuntoVenta!=null) {
							//jComboBoxid_factura_punto_ventaFK_IdFacturaPuntoVentaFormaPagoPuntoVenta.setSelectedItem(facturapuntoventaTemp);
							if(jComboBoxid_factura_punto_ventaFK_IdFacturaPuntoVentaFormaPagoPuntoVenta.getItemCount()>0) {
								jComboBoxid_factura_punto_ventaFK_IdFacturaPuntoVentaFormaPagoPuntoVenta.setSelectedIndex(0);
							}
						}
					}
				}

		*/			}

		}
		catch(Exception e)
		{
			throw e;
		}
	}

	public String getActualFacturaPuntoVentaForeignKeyDescripcion(Long idFacturaPuntoVentaSeleccionado)throws Exception
	{
		String sDescripcion="";

		try
		{
			FacturaPuntoVenta  facturapuntoventaTemp=null;

			for(FacturaPuntoVenta facturapuntoventaAux:facturapuntoventasForeignKey) {
				if(facturapuntoventaAux.getId()!=null && facturapuntoventaAux.getId().equals(idFacturaPuntoVentaSeleccionado)) {
					facturapuntoventaTemp=facturapuntoventaAux;
					break;
				}
			}


			sDescripcion=FacturaPuntoVentaConstantesFunciones.getFacturaPuntoVentaDescripcion(facturapuntoventaTemp);
		}
		catch(Exception e)
		{
			throw e;
		}

		return sDescripcion;
	}

	@SuppressWarnings("rawtypes")
	public void setActualFacturaPuntoVentaForeignKeyGenerico(Long idFacturaPuntoVentaSeleccionado,JComboBox jComboBoxid_factura_punto_ventaFormaPagoPuntoVentaGenerico)throws Exception
	{
		try
		{
			FacturaPuntoVenta  facturapuntoventaTemp=null;

			for(FacturaPuntoVenta facturapuntoventaAux:facturapuntoventasForeignKey) {
				if(facturapuntoventaAux.getId()!=null && facturapuntoventaAux.getId().equals(idFacturaPuntoVentaSeleccionado)) {
					facturapuntoventaTemp=facturapuntoventaAux;
					break;
				}
			}

			if(facturapuntoventaTemp!=null) {
				jComboBoxid_factura_punto_ventaFormaPagoPuntoVentaGenerico.setSelectedItem(facturapuntoventaTemp);
			} else {
				if(jComboBoxid_factura_punto_ventaFormaPagoPuntoVentaGenerico!=null && jComboBoxid_factura_punto_ventaFormaPagoPuntoVentaGenerico.getItemCount()>0) {
					jComboBoxid_factura_punto_ventaFormaPagoPuntoVentaGenerico.setSelectedIndex(0);
				}
			}

		}
		catch(Exception e)
		{
			throw e;
		}

	}

	public void setActualTipoFormaPagoForeignKey(Long idTipoFormaPagoSeleccionado,Boolean conCombosBusquedas,String sFormularioTipoBusqueda)throws Exception
	{
		try
		{
			TipoFormaPago  tipoformapagoTemp=null;

			for(TipoFormaPago tipoformapagoAux:tipoformapagosForeignKey) {
				if(tipoformapagoAux.getId()!=null && tipoformapagoAux.getId().equals(idTipoFormaPagoSeleccionado)) {
					tipoformapagoTemp=tipoformapagoAux;
					break;
				}
			}

			if(sFormularioTipoBusqueda.equals("Formulario") || sFormularioTipoBusqueda.equals("Todos")){
				if(tipoformapagoTemp!=null) {

					if(this.formapagopuntoventa!=null) {
						this.formapagopuntoventa.setTipoFormaPago(tipoformapagoTemp);
					}

					if(this.jInternalFrameDetalleFormFormaPagoPuntoVenta!=null) {
						this.jInternalFrameDetalleFormFormaPagoPuntoVenta.jComboBoxid_tipo_forma_pagoFormaPagoPuntoVenta.setSelectedItem(tipoformapagoTemp);
					}
				} else {
					//jComboBoxid_tipo_forma_pagoFormaPagoPuntoVenta.setSelectedItem(tipoformapagoTemp);
					if(this.jInternalFrameDetalleFormFormaPagoPuntoVenta!=null) {
						if(this.jInternalFrameDetalleFormFormaPagoPuntoVenta.jComboBoxid_tipo_forma_pagoFormaPagoPuntoVenta.getItemCount()>0) {
							this.jInternalFrameDetalleFormFormaPagoPuntoVenta.jComboBoxid_tipo_forma_pagoFormaPagoPuntoVenta.setSelectedIndex(0);
						}
					}
				}
			}

			if(conCombosBusquedas) {

		//BYDAN_BUSQUEDAS
		/*				
				if(sFormularioTipoBusqueda.equals("FK_IdTipoFormaPago") || sFormularioTipoBusqueda.equals("Todos")){
					if(tipoformapagoTemp!=null && jComboBoxid_tipo_forma_pagoFK_IdTipoFormaPagoFormaPagoPuntoVenta!=null) {
						jComboBoxid_tipo_forma_pagoFK_IdTipoFormaPagoFormaPagoPuntoVenta.setSelectedItem(tipoformapagoTemp);
					} else {
						if(jComboBoxid_tipo_forma_pagoFK_IdTipoFormaPagoFormaPagoPuntoVenta!=null) {
							//jComboBoxid_tipo_forma_pagoFK_IdTipoFormaPagoFormaPagoPuntoVenta.setSelectedItem(tipoformapagoTemp);
							if(jComboBoxid_tipo_forma_pagoFK_IdTipoFormaPagoFormaPagoPuntoVenta.getItemCount()>0) {
								jComboBoxid_tipo_forma_pagoFK_IdTipoFormaPagoFormaPagoPuntoVenta.setSelectedIndex(0);
							}
						}
					}
				}

		*/			}

		}
		catch(Exception e)
		{
			throw e;
		}
	}

	public String getActualTipoFormaPagoForeignKeyDescripcion(Long idTipoFormaPagoSeleccionado)throws Exception
	{
		String sDescripcion="";

		try
		{
			TipoFormaPago  tipoformapagoTemp=null;

			for(TipoFormaPago tipoformapagoAux:tipoformapagosForeignKey) {
				if(tipoformapagoAux.getId()!=null && tipoformapagoAux.getId().equals(idTipoFormaPagoSeleccionado)) {
					tipoformapagoTemp=tipoformapagoAux;
					break;
				}
			}


			sDescripcion=TipoFormaPagoConstantesFunciones.getTipoFormaPagoDescripcion(tipoformapagoTemp);
		}
		catch(Exception e)
		{
			throw e;
		}

		return sDescripcion;
	}

	@SuppressWarnings("rawtypes")
	public void setActualTipoFormaPagoForeignKeyGenerico(Long idTipoFormaPagoSeleccionado,JComboBox jComboBoxid_tipo_forma_pagoFormaPagoPuntoVentaGenerico)throws Exception
	{
		try
		{
			TipoFormaPago  tipoformapagoTemp=null;

			for(TipoFormaPago tipoformapagoAux:tipoformapagosForeignKey) {
				if(tipoformapagoAux.getId()!=null && tipoformapagoAux.getId().equals(idTipoFormaPagoSeleccionado)) {
					tipoformapagoTemp=tipoformapagoAux;
					break;
				}
			}

			if(tipoformapagoTemp!=null) {
				jComboBoxid_tipo_forma_pagoFormaPagoPuntoVentaGenerico.setSelectedItem(tipoformapagoTemp);
			} else {
				if(jComboBoxid_tipo_forma_pagoFormaPagoPuntoVentaGenerico!=null && jComboBoxid_tipo_forma_pagoFormaPagoPuntoVentaGenerico.getItemCount()>0) {
					jComboBoxid_tipo_forma_pagoFormaPagoPuntoVentaGenerico.setSelectedIndex(0);
				}
			}

		}
		catch(Exception e)
		{
			throw e;
		}

	}

	public void setActualBancoForeignKey(Long idBancoSeleccionado,Boolean conCombosBusquedas,String sFormularioTipoBusqueda)throws Exception
	{
		try
		{
			Banco  bancoTemp=null;

			for(Banco bancoAux:bancosForeignKey) {
				if(bancoAux.getId()!=null && bancoAux.getId().equals(idBancoSeleccionado)) {
					bancoTemp=bancoAux;
					break;
				}
			}

			if(sFormularioTipoBusqueda.equals("Formulario") || sFormularioTipoBusqueda.equals("Todos")){
				if(bancoTemp!=null) {

					if(this.formapagopuntoventa!=null) {
						this.formapagopuntoventa.setBanco(bancoTemp);
					}

					if(this.jInternalFrameDetalleFormFormaPagoPuntoVenta!=null) {
						this.jInternalFrameDetalleFormFormaPagoPuntoVenta.jComboBoxid_bancoFormaPagoPuntoVenta.setSelectedItem(bancoTemp);
					}
				} else {
					//jComboBoxid_bancoFormaPagoPuntoVenta.setSelectedItem(bancoTemp);
					if(this.jInternalFrameDetalleFormFormaPagoPuntoVenta!=null) {
						if(this.jInternalFrameDetalleFormFormaPagoPuntoVenta.jComboBoxid_bancoFormaPagoPuntoVenta.getItemCount()>0) {
							this.jInternalFrameDetalleFormFormaPagoPuntoVenta.jComboBoxid_bancoFormaPagoPuntoVenta.setSelectedIndex(0);
						}
					}
				}
			}

			if(conCombosBusquedas) {

		//BYDAN_BUSQUEDAS
		/*				
				if(sFormularioTipoBusqueda.equals("FK_IdBanco") || sFormularioTipoBusqueda.equals("Todos")){
					if(bancoTemp!=null && jComboBoxid_bancoFK_IdBancoFormaPagoPuntoVenta!=null) {
						jComboBoxid_bancoFK_IdBancoFormaPagoPuntoVenta.setSelectedItem(bancoTemp);
					} else {
						if(jComboBoxid_bancoFK_IdBancoFormaPagoPuntoVenta!=null) {
							//jComboBoxid_bancoFK_IdBancoFormaPagoPuntoVenta.setSelectedItem(bancoTemp);
							if(jComboBoxid_bancoFK_IdBancoFormaPagoPuntoVenta.getItemCount()>0) {
								jComboBoxid_bancoFK_IdBancoFormaPagoPuntoVenta.setSelectedIndex(0);
							}
						}
					}
				}

		*/			}

		}
		catch(Exception e)
		{
			throw e;
		}
	}

	public String getActualBancoForeignKeyDescripcion(Long idBancoSeleccionado)throws Exception
	{
		String sDescripcion="";

		try
		{
			Banco  bancoTemp=null;

			for(Banco bancoAux:bancosForeignKey) {
				if(bancoAux.getId()!=null && bancoAux.getId().equals(idBancoSeleccionado)) {
					bancoTemp=bancoAux;
					break;
				}
			}


			sDescripcion=BancoConstantesFunciones.getBancoDescripcion(bancoTemp);
		}
		catch(Exception e)
		{
			throw e;
		}

		return sDescripcion;
	}

	@SuppressWarnings("rawtypes")
	public void setActualBancoForeignKeyGenerico(Long idBancoSeleccionado,JComboBox jComboBoxid_bancoFormaPagoPuntoVentaGenerico)throws Exception
	{
		try
		{
			Banco  bancoTemp=null;

			for(Banco bancoAux:bancosForeignKey) {
				if(bancoAux.getId()!=null && bancoAux.getId().equals(idBancoSeleccionado)) {
					bancoTemp=bancoAux;
					break;
				}
			}

			if(bancoTemp!=null) {
				jComboBoxid_bancoFormaPagoPuntoVentaGenerico.setSelectedItem(bancoTemp);
			} else {
				if(jComboBoxid_bancoFormaPagoPuntoVentaGenerico!=null && jComboBoxid_bancoFormaPagoPuntoVentaGenerico.getItemCount()>0) {
					jComboBoxid_bancoFormaPagoPuntoVentaGenerico.setSelectedIndex(0);
				}
			}

		}
		catch(Exception e)
		{
			throw e;
		}

	}

	public void setActualCuentaBancoPunVenForeignKey(Long idCuentaBancoPunVenSeleccionado,Boolean conCombosBusquedas,String sFormularioTipoBusqueda)throws Exception
	{
		try
		{
			CuentaBancoPunVen  cuentabancopunvenTemp=null;

			for(CuentaBancoPunVen cuentabancopunvenAux:cuentabancopunvensForeignKey) {
				if(cuentabancopunvenAux.getId()!=null && cuentabancopunvenAux.getId().equals(idCuentaBancoPunVenSeleccionado)) {
					cuentabancopunvenTemp=cuentabancopunvenAux;
					break;
				}
			}

			if(sFormularioTipoBusqueda.equals("Formulario") || sFormularioTipoBusqueda.equals("Todos")){
				if(cuentabancopunvenTemp!=null) {

					if(this.formapagopuntoventa!=null) {
						this.formapagopuntoventa.setCuentaBancoPunVen(cuentabancopunvenTemp);
					}

					if(this.jInternalFrameDetalleFormFormaPagoPuntoVenta!=null) {
						this.jInternalFrameDetalleFormFormaPagoPuntoVenta.jComboBoxid_cuenta_banco_pun_venFormaPagoPuntoVenta.setSelectedItem(cuentabancopunvenTemp);
					}
				} else {
					//jComboBoxid_cuenta_banco_pun_venFormaPagoPuntoVenta.setSelectedItem(cuentabancopunvenTemp);
					if(this.jInternalFrameDetalleFormFormaPagoPuntoVenta!=null) {
						if(this.jInternalFrameDetalleFormFormaPagoPuntoVenta.jComboBoxid_cuenta_banco_pun_venFormaPagoPuntoVenta.getItemCount()>0) {
							this.jInternalFrameDetalleFormFormaPagoPuntoVenta.jComboBoxid_cuenta_banco_pun_venFormaPagoPuntoVenta.setSelectedIndex(0);
						}
					}
				}
			}

			if(conCombosBusquedas) {

		//BYDAN_BUSQUEDAS
		/*				
				if(sFormularioTipoBusqueda.equals("FK_IdCuentaBancoPunVen") || sFormularioTipoBusqueda.equals("Todos")){
					if(cuentabancopunvenTemp!=null && jComboBoxid_cuenta_banco_pun_venFK_IdCuentaBancoPunVenFormaPagoPuntoVenta!=null) {
						jComboBoxid_cuenta_banco_pun_venFK_IdCuentaBancoPunVenFormaPagoPuntoVenta.setSelectedItem(cuentabancopunvenTemp);
					} else {
						if(jComboBoxid_cuenta_banco_pun_venFK_IdCuentaBancoPunVenFormaPagoPuntoVenta!=null) {
							//jComboBoxid_cuenta_banco_pun_venFK_IdCuentaBancoPunVenFormaPagoPuntoVenta.setSelectedItem(cuentabancopunvenTemp);
							if(jComboBoxid_cuenta_banco_pun_venFK_IdCuentaBancoPunVenFormaPagoPuntoVenta.getItemCount()>0) {
								jComboBoxid_cuenta_banco_pun_venFK_IdCuentaBancoPunVenFormaPagoPuntoVenta.setSelectedIndex(0);
							}
						}
					}
				}

		*/			}

		}
		catch(Exception e)
		{
			throw e;
		}
	}

	public String getActualCuentaBancoPunVenForeignKeyDescripcion(Long idCuentaBancoPunVenSeleccionado)throws Exception
	{
		String sDescripcion="";

		try
		{
			CuentaBancoPunVen  cuentabancopunvenTemp=null;

			for(CuentaBancoPunVen cuentabancopunvenAux:cuentabancopunvensForeignKey) {
				if(cuentabancopunvenAux.getId()!=null && cuentabancopunvenAux.getId().equals(idCuentaBancoPunVenSeleccionado)) {
					cuentabancopunvenTemp=cuentabancopunvenAux;
					break;
				}
			}


			sDescripcion=CuentaBancoPunVenConstantesFunciones.getCuentaBancoPunVenDescripcion(cuentabancopunvenTemp);
		}
		catch(Exception e)
		{
			throw e;
		}

		return sDescripcion;
	}

	@SuppressWarnings("rawtypes")
	public void setActualCuentaBancoPunVenForeignKeyGenerico(Long idCuentaBancoPunVenSeleccionado,JComboBox jComboBoxid_cuenta_banco_pun_venFormaPagoPuntoVentaGenerico)throws Exception
	{
		try
		{
			CuentaBancoPunVen  cuentabancopunvenTemp=null;

			for(CuentaBancoPunVen cuentabancopunvenAux:cuentabancopunvensForeignKey) {
				if(cuentabancopunvenAux.getId()!=null && cuentabancopunvenAux.getId().equals(idCuentaBancoPunVenSeleccionado)) {
					cuentabancopunvenTemp=cuentabancopunvenAux;
					break;
				}
			}

			if(cuentabancopunvenTemp!=null) {
				jComboBoxid_cuenta_banco_pun_venFormaPagoPuntoVentaGenerico.setSelectedItem(cuentabancopunvenTemp);
			} else {
				if(jComboBoxid_cuenta_banco_pun_venFormaPagoPuntoVentaGenerico!=null && jComboBoxid_cuenta_banco_pun_venFormaPagoPuntoVentaGenerico.getItemCount()>0) {
					jComboBoxid_cuenta_banco_pun_venFormaPagoPuntoVentaGenerico.setSelectedIndex(0);
				}
			}

		}
		catch(Exception e)
		{
			throw e;
		}

	}

	public void setActualTipoRiesgoChequeForeignKey(Long idTipoRiesgoChequeSeleccionado,Boolean conCombosBusquedas,String sFormularioTipoBusqueda)throws Exception
	{
		try
		{
			TipoRiesgoCheque  tiporiesgochequeTemp=null;

			for(TipoRiesgoCheque tiporiesgochequeAux:tiporiesgochequesForeignKey) {
				if(tiporiesgochequeAux.getId()!=null && tiporiesgochequeAux.getId().equals(idTipoRiesgoChequeSeleccionado)) {
					tiporiesgochequeTemp=tiporiesgochequeAux;
					break;
				}
			}

			if(sFormularioTipoBusqueda.equals("Formulario") || sFormularioTipoBusqueda.equals("Todos")){
				if(tiporiesgochequeTemp!=null) {

					if(this.formapagopuntoventa!=null) {
						this.formapagopuntoventa.setTipoRiesgoCheque(tiporiesgochequeTemp);
					}

					if(this.jInternalFrameDetalleFormFormaPagoPuntoVenta!=null) {
						this.jInternalFrameDetalleFormFormaPagoPuntoVenta.jComboBoxid_tipo_riesgo_chequeFormaPagoPuntoVenta.setSelectedItem(tiporiesgochequeTemp);
					}
				} else {
					//jComboBoxid_tipo_riesgo_chequeFormaPagoPuntoVenta.setSelectedItem(tiporiesgochequeTemp);
					if(this.jInternalFrameDetalleFormFormaPagoPuntoVenta!=null) {
						if(this.jInternalFrameDetalleFormFormaPagoPuntoVenta.jComboBoxid_tipo_riesgo_chequeFormaPagoPuntoVenta.getItemCount()>0) {
							this.jInternalFrameDetalleFormFormaPagoPuntoVenta.jComboBoxid_tipo_riesgo_chequeFormaPagoPuntoVenta.setSelectedIndex(0);
						}
					}
				}
			}

			if(conCombosBusquedas) {

		//BYDAN_BUSQUEDAS
		/*				
				if(sFormularioTipoBusqueda.equals("FK_IdTipoRiesgoCheque") || sFormularioTipoBusqueda.equals("Todos")){
					if(tiporiesgochequeTemp!=null && jComboBoxid_tipo_riesgo_chequeFK_IdTipoRiesgoChequeFormaPagoPuntoVenta!=null) {
						jComboBoxid_tipo_riesgo_chequeFK_IdTipoRiesgoChequeFormaPagoPuntoVenta.setSelectedItem(tiporiesgochequeTemp);
					} else {
						if(jComboBoxid_tipo_riesgo_chequeFK_IdTipoRiesgoChequeFormaPagoPuntoVenta!=null) {
							//jComboBoxid_tipo_riesgo_chequeFK_IdTipoRiesgoChequeFormaPagoPuntoVenta.setSelectedItem(tiporiesgochequeTemp);
							if(jComboBoxid_tipo_riesgo_chequeFK_IdTipoRiesgoChequeFormaPagoPuntoVenta.getItemCount()>0) {
								jComboBoxid_tipo_riesgo_chequeFK_IdTipoRiesgoChequeFormaPagoPuntoVenta.setSelectedIndex(0);
							}
						}
					}
				}

		*/			}

		}
		catch(Exception e)
		{
			throw e;
		}
	}

	public String getActualTipoRiesgoChequeForeignKeyDescripcion(Long idTipoRiesgoChequeSeleccionado)throws Exception
	{
		String sDescripcion="";

		try
		{
			TipoRiesgoCheque  tiporiesgochequeTemp=null;

			for(TipoRiesgoCheque tiporiesgochequeAux:tiporiesgochequesForeignKey) {
				if(tiporiesgochequeAux.getId()!=null && tiporiesgochequeAux.getId().equals(idTipoRiesgoChequeSeleccionado)) {
					tiporiesgochequeTemp=tiporiesgochequeAux;
					break;
				}
			}


			sDescripcion=TipoRiesgoChequeConstantesFunciones.getTipoRiesgoChequeDescripcion(tiporiesgochequeTemp);
		}
		catch(Exception e)
		{
			throw e;
		}

		return sDescripcion;
	}

	@SuppressWarnings("rawtypes")
	public void setActualTipoRiesgoChequeForeignKeyGenerico(Long idTipoRiesgoChequeSeleccionado,JComboBox jComboBoxid_tipo_riesgo_chequeFormaPagoPuntoVentaGenerico)throws Exception
	{
		try
		{
			TipoRiesgoCheque  tiporiesgochequeTemp=null;

			for(TipoRiesgoCheque tiporiesgochequeAux:tiporiesgochequesForeignKey) {
				if(tiporiesgochequeAux.getId()!=null && tiporiesgochequeAux.getId().equals(idTipoRiesgoChequeSeleccionado)) {
					tiporiesgochequeTemp=tiporiesgochequeAux;
					break;
				}
			}

			if(tiporiesgochequeTemp!=null) {
				jComboBoxid_tipo_riesgo_chequeFormaPagoPuntoVentaGenerico.setSelectedItem(tiporiesgochequeTemp);
			} else {
				if(jComboBoxid_tipo_riesgo_chequeFormaPagoPuntoVentaGenerico!=null && jComboBoxid_tipo_riesgo_chequeFormaPagoPuntoVentaGenerico.getItemCount()>0) {
					jComboBoxid_tipo_riesgo_chequeFormaPagoPuntoVentaGenerico.setSelectedIndex(0);
				}
			}

		}
		catch(Exception e)
		{
			throw e;
		}

	}

	public void setActualBancoTarjetaForeignKey(Long idBancoTarjetaSeleccionado,Boolean conCombosBusquedas,String sFormularioTipoBusqueda)throws Exception
	{
		try
		{
			Banco  bancotarjetaTemp=null;

			for(Banco bancotarjetaAux:bancotarjetasForeignKey) {
				if(bancotarjetaAux.getId()!=null && bancotarjetaAux.getId().equals(idBancoTarjetaSeleccionado)) {
					bancotarjetaTemp=bancotarjetaAux;
					break;
				}
			}

			if(sFormularioTipoBusqueda.equals("Formulario") || sFormularioTipoBusqueda.equals("Todos")){
				if(bancotarjetaTemp!=null) {

					if(this.formapagopuntoventa!=null) {
						this.formapagopuntoventa.setBancoTarjeta(bancotarjetaTemp);
					}

					if(this.jInternalFrameDetalleFormFormaPagoPuntoVenta!=null) {
						this.jInternalFrameDetalleFormFormaPagoPuntoVenta.jComboBoxid_banco_tarjetaFormaPagoPuntoVenta.setSelectedItem(bancotarjetaTemp);
					}
				} else {
					//jComboBoxid_banco_tarjetaFormaPagoPuntoVenta.setSelectedItem(bancotarjetaTemp);
					if(this.jInternalFrameDetalleFormFormaPagoPuntoVenta!=null) {
						if(this.jInternalFrameDetalleFormFormaPagoPuntoVenta.jComboBoxid_banco_tarjetaFormaPagoPuntoVenta.getItemCount()>0) {
							this.jInternalFrameDetalleFormFormaPagoPuntoVenta.jComboBoxid_banco_tarjetaFormaPagoPuntoVenta.setSelectedIndex(0);
						}
					}
				}
			}

			if(conCombosBusquedas) {

		//BYDAN_BUSQUEDAS
		/*				
				if(sFormularioTipoBusqueda.equals("FK_IdBancoTarjeta") || sFormularioTipoBusqueda.equals("Todos")){
					if(bancotarjetaTemp!=null && jComboBoxid_banco_tarjetaFK_IdBancoTarjetaFormaPagoPuntoVenta!=null) {
						jComboBoxid_banco_tarjetaFK_IdBancoTarjetaFormaPagoPuntoVenta.setSelectedItem(bancotarjetaTemp);
					} else {
						if(jComboBoxid_banco_tarjetaFK_IdBancoTarjetaFormaPagoPuntoVenta!=null) {
							//jComboBoxid_banco_tarjetaFK_IdBancoTarjetaFormaPagoPuntoVenta.setSelectedItem(bancotarjetaTemp);
							if(jComboBoxid_banco_tarjetaFK_IdBancoTarjetaFormaPagoPuntoVenta.getItemCount()>0) {
								jComboBoxid_banco_tarjetaFK_IdBancoTarjetaFormaPagoPuntoVenta.setSelectedIndex(0);
							}
						}
					}
				}

		*/			}

		}
		catch(Exception e)
		{
			throw e;
		}
	}

	public String getActualBancoTarjetaForeignKeyDescripcion(Long idBancoTarjetaSeleccionado)throws Exception
	{
		String sDescripcion="";

		try
		{
			Banco  bancotarjetaTemp=null;

			for(Banco bancotarjetaAux:bancotarjetasForeignKey) {
				if(bancotarjetaAux.getId()!=null && bancotarjetaAux.getId().equals(idBancoTarjetaSeleccionado)) {
					bancotarjetaTemp=bancotarjetaAux;
					break;
				}
			}


			sDescripcion=BancoConstantesFunciones.getBancoDescripcion(bancotarjetaTemp);
		}
		catch(Exception e)
		{
			throw e;
		}

		return sDescripcion;
	}

	@SuppressWarnings("rawtypes")
	public void setActualBancoTarjetaForeignKeyGenerico(Long idBancoTarjetaSeleccionado,JComboBox jComboBoxid_banco_tarjetaFormaPagoPuntoVentaGenerico)throws Exception
	{
		try
		{
			Banco  bancotarjetaTemp=null;

			for(Banco bancotarjetaAux:bancotarjetasForeignKey) {
				if(bancotarjetaAux.getId()!=null && bancotarjetaAux.getId().equals(idBancoTarjetaSeleccionado)) {
					bancotarjetaTemp=bancotarjetaAux;
					break;
				}
			}

			if(bancotarjetaTemp!=null) {
				jComboBoxid_banco_tarjetaFormaPagoPuntoVentaGenerico.setSelectedItem(bancotarjetaTemp);
			} else {
				if(jComboBoxid_banco_tarjetaFormaPagoPuntoVentaGenerico!=null && jComboBoxid_banco_tarjetaFormaPagoPuntoVentaGenerico.getItemCount()>0) {
					jComboBoxid_banco_tarjetaFormaPagoPuntoVentaGenerico.setSelectedIndex(0);
				}
			}

		}
		catch(Exception e)
		{
			throw e;
		}

	}

	public void setActualTarjetaCreditoForeignKey(Long idTarjetaCreditoSeleccionado,Boolean conCombosBusquedas,String sFormularioTipoBusqueda)throws Exception
	{
		try
		{
			TarjetaCredito  tarjetacreditoTemp=null;

			for(TarjetaCredito tarjetacreditoAux:tarjetacreditosForeignKey) {
				if(tarjetacreditoAux.getId()!=null && tarjetacreditoAux.getId().equals(idTarjetaCreditoSeleccionado)) {
					tarjetacreditoTemp=tarjetacreditoAux;
					break;
				}
			}

			if(sFormularioTipoBusqueda.equals("Formulario") || sFormularioTipoBusqueda.equals("Todos")){
				if(tarjetacreditoTemp!=null) {

					if(this.formapagopuntoventa!=null) {
						this.formapagopuntoventa.setTarjetaCredito(tarjetacreditoTemp);
					}

					if(this.jInternalFrameDetalleFormFormaPagoPuntoVenta!=null) {
						this.jInternalFrameDetalleFormFormaPagoPuntoVenta.jComboBoxid_tarjeta_creditoFormaPagoPuntoVenta.setSelectedItem(tarjetacreditoTemp);
					}
				} else {
					//jComboBoxid_tarjeta_creditoFormaPagoPuntoVenta.setSelectedItem(tarjetacreditoTemp);
					if(this.jInternalFrameDetalleFormFormaPagoPuntoVenta!=null) {
						if(this.jInternalFrameDetalleFormFormaPagoPuntoVenta.jComboBoxid_tarjeta_creditoFormaPagoPuntoVenta.getItemCount()>0) {
							this.jInternalFrameDetalleFormFormaPagoPuntoVenta.jComboBoxid_tarjeta_creditoFormaPagoPuntoVenta.setSelectedIndex(0);
						}
					}
				}
			}

			if(conCombosBusquedas) {

		//BYDAN_BUSQUEDAS
		/*				
				if(sFormularioTipoBusqueda.equals("FK_IdTarjetaCredito") || sFormularioTipoBusqueda.equals("Todos")){
					if(tarjetacreditoTemp!=null && jComboBoxid_tarjeta_creditoFK_IdTarjetaCreditoFormaPagoPuntoVenta!=null) {
						jComboBoxid_tarjeta_creditoFK_IdTarjetaCreditoFormaPagoPuntoVenta.setSelectedItem(tarjetacreditoTemp);
					} else {
						if(jComboBoxid_tarjeta_creditoFK_IdTarjetaCreditoFormaPagoPuntoVenta!=null) {
							//jComboBoxid_tarjeta_creditoFK_IdTarjetaCreditoFormaPagoPuntoVenta.setSelectedItem(tarjetacreditoTemp);
							if(jComboBoxid_tarjeta_creditoFK_IdTarjetaCreditoFormaPagoPuntoVenta.getItemCount()>0) {
								jComboBoxid_tarjeta_creditoFK_IdTarjetaCreditoFormaPagoPuntoVenta.setSelectedIndex(0);
							}
						}
					}
				}

		*/			}

		}
		catch(Exception e)
		{
			throw e;
		}
	}

	public String getActualTarjetaCreditoForeignKeyDescripcion(Long idTarjetaCreditoSeleccionado)throws Exception
	{
		String sDescripcion="";

		try
		{
			TarjetaCredito  tarjetacreditoTemp=null;

			for(TarjetaCredito tarjetacreditoAux:tarjetacreditosForeignKey) {
				if(tarjetacreditoAux.getId()!=null && tarjetacreditoAux.getId().equals(idTarjetaCreditoSeleccionado)) {
					tarjetacreditoTemp=tarjetacreditoAux;
					break;
				}
			}


			sDescripcion=TarjetaCreditoConstantesFunciones.getTarjetaCreditoDescripcion(tarjetacreditoTemp);
		}
		catch(Exception e)
		{
			throw e;
		}

		return sDescripcion;
	}

	@SuppressWarnings("rawtypes")
	public void setActualTarjetaCreditoForeignKeyGenerico(Long idTarjetaCreditoSeleccionado,JComboBox jComboBoxid_tarjeta_creditoFormaPagoPuntoVentaGenerico)throws Exception
	{
		try
		{
			TarjetaCredito  tarjetacreditoTemp=null;

			for(TarjetaCredito tarjetacreditoAux:tarjetacreditosForeignKey) {
				if(tarjetacreditoAux.getId()!=null && tarjetacreditoAux.getId().equals(idTarjetaCreditoSeleccionado)) {
					tarjetacreditoTemp=tarjetacreditoAux;
					break;
				}
			}

			if(tarjetacreditoTemp!=null) {
				jComboBoxid_tarjeta_creditoFormaPagoPuntoVentaGenerico.setSelectedItem(tarjetacreditoTemp);
			} else {
				if(jComboBoxid_tarjeta_creditoFormaPagoPuntoVentaGenerico!=null && jComboBoxid_tarjeta_creditoFormaPagoPuntoVentaGenerico.getItemCount()>0) {
					jComboBoxid_tarjeta_creditoFormaPagoPuntoVentaGenerico.setSelectedIndex(0);
				}
			}

		}
		catch(Exception e)
		{
			throw e;
		}

	}

	public void setActualTipoInteresTarjetaForeignKey(Long idTipoInteresTarjetaSeleccionado,Boolean conCombosBusquedas,String sFormularioTipoBusqueda)throws Exception
	{
		try
		{
			TipoInteresTarjeta  tipointerestarjetaTemp=null;

			for(TipoInteresTarjeta tipointerestarjetaAux:tipointerestarjetasForeignKey) {
				if(tipointerestarjetaAux.getId()!=null && tipointerestarjetaAux.getId().equals(idTipoInteresTarjetaSeleccionado)) {
					tipointerestarjetaTemp=tipointerestarjetaAux;
					break;
				}
			}

			if(sFormularioTipoBusqueda.equals("Formulario") || sFormularioTipoBusqueda.equals("Todos")){
				if(tipointerestarjetaTemp!=null) {

					if(this.formapagopuntoventa!=null) {
						this.formapagopuntoventa.setTipoInteresTarjeta(tipointerestarjetaTemp);
					}

					if(this.jInternalFrameDetalleFormFormaPagoPuntoVenta!=null) {
						this.jInternalFrameDetalleFormFormaPagoPuntoVenta.jComboBoxid_tipo_interes_tarjetaFormaPagoPuntoVenta.setSelectedItem(tipointerestarjetaTemp);
					}
				} else {
					//jComboBoxid_tipo_interes_tarjetaFormaPagoPuntoVenta.setSelectedItem(tipointerestarjetaTemp);
					if(this.jInternalFrameDetalleFormFormaPagoPuntoVenta!=null) {
						if(this.jInternalFrameDetalleFormFormaPagoPuntoVenta.jComboBoxid_tipo_interes_tarjetaFormaPagoPuntoVenta.getItemCount()>0) {
							this.jInternalFrameDetalleFormFormaPagoPuntoVenta.jComboBoxid_tipo_interes_tarjetaFormaPagoPuntoVenta.setSelectedIndex(0);
						}
					}
				}
			}

			if(conCombosBusquedas) {

		//BYDAN_BUSQUEDAS
		/*				
				if(sFormularioTipoBusqueda.equals("FK_IdTipoInteresTarjeta") || sFormularioTipoBusqueda.equals("Todos")){
					if(tipointerestarjetaTemp!=null && jComboBoxid_tipo_interes_tarjetaFK_IdTipoInteresTarjetaFormaPagoPuntoVenta!=null) {
						jComboBoxid_tipo_interes_tarjetaFK_IdTipoInteresTarjetaFormaPagoPuntoVenta.setSelectedItem(tipointerestarjetaTemp);
					} else {
						if(jComboBoxid_tipo_interes_tarjetaFK_IdTipoInteresTarjetaFormaPagoPuntoVenta!=null) {
							//jComboBoxid_tipo_interes_tarjetaFK_IdTipoInteresTarjetaFormaPagoPuntoVenta.setSelectedItem(tipointerestarjetaTemp);
							if(jComboBoxid_tipo_interes_tarjetaFK_IdTipoInteresTarjetaFormaPagoPuntoVenta.getItemCount()>0) {
								jComboBoxid_tipo_interes_tarjetaFK_IdTipoInteresTarjetaFormaPagoPuntoVenta.setSelectedIndex(0);
							}
						}
					}
				}

		*/			}

		}
		catch(Exception e)
		{
			throw e;
		}
	}

	public String getActualTipoInteresTarjetaForeignKeyDescripcion(Long idTipoInteresTarjetaSeleccionado)throws Exception
	{
		String sDescripcion="";

		try
		{
			TipoInteresTarjeta  tipointerestarjetaTemp=null;

			for(TipoInteresTarjeta tipointerestarjetaAux:tipointerestarjetasForeignKey) {
				if(tipointerestarjetaAux.getId()!=null && tipointerestarjetaAux.getId().equals(idTipoInteresTarjetaSeleccionado)) {
					tipointerestarjetaTemp=tipointerestarjetaAux;
					break;
				}
			}


			sDescripcion=TipoInteresTarjetaConstantesFunciones.getTipoInteresTarjetaDescripcion(tipointerestarjetaTemp);
		}
		catch(Exception e)
		{
			throw e;
		}

		return sDescripcion;
	}

	@SuppressWarnings("rawtypes")
	public void setActualTipoInteresTarjetaForeignKeyGenerico(Long idTipoInteresTarjetaSeleccionado,JComboBox jComboBoxid_tipo_interes_tarjetaFormaPagoPuntoVentaGenerico)throws Exception
	{
		try
		{
			TipoInteresTarjeta  tipointerestarjetaTemp=null;

			for(TipoInteresTarjeta tipointerestarjetaAux:tipointerestarjetasForeignKey) {
				if(tipointerestarjetaAux.getId()!=null && tipointerestarjetaAux.getId().equals(idTipoInteresTarjetaSeleccionado)) {
					tipointerestarjetaTemp=tipointerestarjetaAux;
					break;
				}
			}

			if(tipointerestarjetaTemp!=null) {
				jComboBoxid_tipo_interes_tarjetaFormaPagoPuntoVentaGenerico.setSelectedItem(tipointerestarjetaTemp);
			} else {
				if(jComboBoxid_tipo_interes_tarjetaFormaPagoPuntoVentaGenerico!=null && jComboBoxid_tipo_interes_tarjetaFormaPagoPuntoVentaGenerico.getItemCount()>0) {
					jComboBoxid_tipo_interes_tarjetaFormaPagoPuntoVentaGenerico.setSelectedIndex(0);
				}
			}

		}
		catch(Exception e)
		{
			throw e;
		}

	}

	public void setActualTipoPagoTarjetaForeignKey(Long idTipoPagoTarjetaSeleccionado,Boolean conCombosBusquedas,String sFormularioTipoBusqueda)throws Exception
	{
		try
		{
			TipoPagoTarjeta  tipopagotarjetaTemp=null;

			for(TipoPagoTarjeta tipopagotarjetaAux:tipopagotarjetasForeignKey) {
				if(tipopagotarjetaAux.getId()!=null && tipopagotarjetaAux.getId().equals(idTipoPagoTarjetaSeleccionado)) {
					tipopagotarjetaTemp=tipopagotarjetaAux;
					break;
				}
			}

			if(sFormularioTipoBusqueda.equals("Formulario") || sFormularioTipoBusqueda.equals("Todos")){
				if(tipopagotarjetaTemp!=null) {

					if(this.formapagopuntoventa!=null) {
						this.formapagopuntoventa.setTipoPagoTarjeta(tipopagotarjetaTemp);
					}

					if(this.jInternalFrameDetalleFormFormaPagoPuntoVenta!=null) {
						this.jInternalFrameDetalleFormFormaPagoPuntoVenta.jComboBoxid_tipo_pago_tarjetaFormaPagoPuntoVenta.setSelectedItem(tipopagotarjetaTemp);
					}
				} else {
					//jComboBoxid_tipo_pago_tarjetaFormaPagoPuntoVenta.setSelectedItem(tipopagotarjetaTemp);
					if(this.jInternalFrameDetalleFormFormaPagoPuntoVenta!=null) {
						if(this.jInternalFrameDetalleFormFormaPagoPuntoVenta.jComboBoxid_tipo_pago_tarjetaFormaPagoPuntoVenta.getItemCount()>0) {
							this.jInternalFrameDetalleFormFormaPagoPuntoVenta.jComboBoxid_tipo_pago_tarjetaFormaPagoPuntoVenta.setSelectedIndex(0);
						}
					}
				}
			}

			if(conCombosBusquedas) {

		//BYDAN_BUSQUEDAS
		/*				
				if(sFormularioTipoBusqueda.equals("FK_IdTipoPagoTarjeta") || sFormularioTipoBusqueda.equals("Todos")){
					if(tipopagotarjetaTemp!=null && jComboBoxid_tipo_pago_tarjetaFK_IdTipoPagoTarjetaFormaPagoPuntoVenta!=null) {
						jComboBoxid_tipo_pago_tarjetaFK_IdTipoPagoTarjetaFormaPagoPuntoVenta.setSelectedItem(tipopagotarjetaTemp);
					} else {
						if(jComboBoxid_tipo_pago_tarjetaFK_IdTipoPagoTarjetaFormaPagoPuntoVenta!=null) {
							//jComboBoxid_tipo_pago_tarjetaFK_IdTipoPagoTarjetaFormaPagoPuntoVenta.setSelectedItem(tipopagotarjetaTemp);
							if(jComboBoxid_tipo_pago_tarjetaFK_IdTipoPagoTarjetaFormaPagoPuntoVenta.getItemCount()>0) {
								jComboBoxid_tipo_pago_tarjetaFK_IdTipoPagoTarjetaFormaPagoPuntoVenta.setSelectedIndex(0);
							}
						}
					}
				}

		*/			}

		}
		catch(Exception e)
		{
			throw e;
		}
	}

	public String getActualTipoPagoTarjetaForeignKeyDescripcion(Long idTipoPagoTarjetaSeleccionado)throws Exception
	{
		String sDescripcion="";

		try
		{
			TipoPagoTarjeta  tipopagotarjetaTemp=null;

			for(TipoPagoTarjeta tipopagotarjetaAux:tipopagotarjetasForeignKey) {
				if(tipopagotarjetaAux.getId()!=null && tipopagotarjetaAux.getId().equals(idTipoPagoTarjetaSeleccionado)) {
					tipopagotarjetaTemp=tipopagotarjetaAux;
					break;
				}
			}


			sDescripcion=TipoPagoTarjetaConstantesFunciones.getTipoPagoTarjetaDescripcion(tipopagotarjetaTemp);
		}
		catch(Exception e)
		{
			throw e;
		}

		return sDescripcion;
	}

	@SuppressWarnings("rawtypes")
	public void setActualTipoPagoTarjetaForeignKeyGenerico(Long idTipoPagoTarjetaSeleccionado,JComboBox jComboBoxid_tipo_pago_tarjetaFormaPagoPuntoVentaGenerico)throws Exception
	{
		try
		{
			TipoPagoTarjeta  tipopagotarjetaTemp=null;

			for(TipoPagoTarjeta tipopagotarjetaAux:tipopagotarjetasForeignKey) {
				if(tipopagotarjetaAux.getId()!=null && tipopagotarjetaAux.getId().equals(idTipoPagoTarjetaSeleccionado)) {
					tipopagotarjetaTemp=tipopagotarjetaAux;
					break;
				}
			}

			if(tipopagotarjetaTemp!=null) {
				jComboBoxid_tipo_pago_tarjetaFormaPagoPuntoVentaGenerico.setSelectedItem(tipopagotarjetaTemp);
			} else {
				if(jComboBoxid_tipo_pago_tarjetaFormaPagoPuntoVentaGenerico!=null && jComboBoxid_tipo_pago_tarjetaFormaPagoPuntoVentaGenerico.getItemCount()>0) {
					jComboBoxid_tipo_pago_tarjetaFormaPagoPuntoVentaGenerico.setSelectedIndex(0);
				}
			}

		}
		catch(Exception e)
		{
			throw e;
		}

	}

	public void setActualConexionForeignKey(Long idConexionSeleccionado,Boolean conCombosBusquedas,String sFormularioTipoBusqueda)throws Exception
	{
		try
		{
			Conexion  conexionTemp=null;

			for(Conexion conexionAux:conexionsForeignKey) {
				if(conexionAux.getId()!=null && conexionAux.getId().equals(idConexionSeleccionado)) {
					conexionTemp=conexionAux;
					break;
				}
			}

			if(sFormularioTipoBusqueda.equals("Formulario") || sFormularioTipoBusqueda.equals("Todos")){
				if(conexionTemp!=null) {

					if(this.formapagopuntoventa!=null) {
						this.formapagopuntoventa.setConexion(conexionTemp);
					}

					if(this.jInternalFrameDetalleFormFormaPagoPuntoVenta!=null) {
						this.jInternalFrameDetalleFormFormaPagoPuntoVenta.jComboBoxid_conexionFormaPagoPuntoVenta.setSelectedItem(conexionTemp);
					}
				} else {
					//jComboBoxid_conexionFormaPagoPuntoVenta.setSelectedItem(conexionTemp);
					if(this.jInternalFrameDetalleFormFormaPagoPuntoVenta!=null) {
						if(this.jInternalFrameDetalleFormFormaPagoPuntoVenta.jComboBoxid_conexionFormaPagoPuntoVenta.getItemCount()>0) {
							this.jInternalFrameDetalleFormFormaPagoPuntoVenta.jComboBoxid_conexionFormaPagoPuntoVenta.setSelectedIndex(0);
						}
					}
				}
			}

			if(conCombosBusquedas) {

		//BYDAN_BUSQUEDAS
		/*				
				if(sFormularioTipoBusqueda.equals("FK_IdConexion") || sFormularioTipoBusqueda.equals("Todos")){
					if(conexionTemp!=null && jComboBoxid_conexionFK_IdConexionFormaPagoPuntoVenta!=null) {
						jComboBoxid_conexionFK_IdConexionFormaPagoPuntoVenta.setSelectedItem(conexionTemp);
					} else {
						if(jComboBoxid_conexionFK_IdConexionFormaPagoPuntoVenta!=null) {
							//jComboBoxid_conexionFK_IdConexionFormaPagoPuntoVenta.setSelectedItem(conexionTemp);
							if(jComboBoxid_conexionFK_IdConexionFormaPagoPuntoVenta.getItemCount()>0) {
								jComboBoxid_conexionFK_IdConexionFormaPagoPuntoVenta.setSelectedIndex(0);
							}
						}
					}
				}

		*/			}

		}
		catch(Exception e)
		{
			throw e;
		}
	}

	public String getActualConexionForeignKeyDescripcion(Long idConexionSeleccionado)throws Exception
	{
		String sDescripcion="";

		try
		{
			Conexion  conexionTemp=null;

			for(Conexion conexionAux:conexionsForeignKey) {
				if(conexionAux.getId()!=null && conexionAux.getId().equals(idConexionSeleccionado)) {
					conexionTemp=conexionAux;
					break;
				}
			}


			sDescripcion=ConexionConstantesFunciones.getConexionDescripcion(conexionTemp);
		}
		catch(Exception e)
		{
			throw e;
		}

		return sDescripcion;
	}

	@SuppressWarnings("rawtypes")
	public void setActualConexionForeignKeyGenerico(Long idConexionSeleccionado,JComboBox jComboBoxid_conexionFormaPagoPuntoVentaGenerico)throws Exception
	{
		try
		{
			Conexion  conexionTemp=null;

			for(Conexion conexionAux:conexionsForeignKey) {
				if(conexionAux.getId()!=null && conexionAux.getId().equals(idConexionSeleccionado)) {
					conexionTemp=conexionAux;
					break;
				}
			}

			if(conexionTemp!=null) {
				jComboBoxid_conexionFormaPagoPuntoVentaGenerico.setSelectedItem(conexionTemp);
			} else {
				if(jComboBoxid_conexionFormaPagoPuntoVentaGenerico!=null && jComboBoxid_conexionFormaPagoPuntoVentaGenerico.getItemCount()>0) {
					jComboBoxid_conexionFormaPagoPuntoVentaGenerico.setSelectedIndex(0);
				}
			}

		}
		catch(Exception e)
		{
			throw e;
		}

	}

	public void setActualMesForeignKey(Long idMesSeleccionado,Boolean conCombosBusquedas,String sFormularioTipoBusqueda)throws Exception
	{
		try
		{
			Mes  mesTemp=null;

			for(Mes mesAux:messForeignKey) {
				if(mesAux.getId()!=null && mesAux.getId().equals(idMesSeleccionado)) {
					mesTemp=mesAux;
					break;
				}
			}

			if(sFormularioTipoBusqueda.equals("Formulario") || sFormularioTipoBusqueda.equals("Todos")){
				if(mesTemp!=null) {

					if(this.formapagopuntoventa!=null) {
						this.formapagopuntoventa.setMes(mesTemp);
					}

					if(this.jInternalFrameDetalleFormFormaPagoPuntoVenta!=null) {
						this.jInternalFrameDetalleFormFormaPagoPuntoVenta.jComboBoxid_mesFormaPagoPuntoVenta.setSelectedItem(mesTemp);
					}
				} else {
					//jComboBoxid_mesFormaPagoPuntoVenta.setSelectedItem(mesTemp);
					if(this.jInternalFrameDetalleFormFormaPagoPuntoVenta!=null) {
						if(this.jInternalFrameDetalleFormFormaPagoPuntoVenta.jComboBoxid_mesFormaPagoPuntoVenta.getItemCount()>0) {
							this.jInternalFrameDetalleFormFormaPagoPuntoVenta.jComboBoxid_mesFormaPagoPuntoVenta.setSelectedIndex(0);
						}
					}
				}
			}

			if(conCombosBusquedas) {

		//BYDAN_BUSQUEDAS
		/*				

		*/			}

		}
		catch(Exception e)
		{
			throw e;
		}
	}

	public String getActualMesForeignKeyDescripcion(Long idMesSeleccionado)throws Exception
	{
		String sDescripcion="";

		try
		{
			Mes  mesTemp=null;

			for(Mes mesAux:messForeignKey) {
				if(mesAux.getId()!=null && mesAux.getId().equals(idMesSeleccionado)) {
					mesTemp=mesAux;
					break;
				}
			}


			sDescripcion=MesConstantesFunciones.getMesDescripcion(mesTemp);
		}
		catch(Exception e)
		{
			throw e;
		}

		return sDescripcion;
	}

	@SuppressWarnings("rawtypes")
	public void setActualMesForeignKeyGenerico(Long idMesSeleccionado,JComboBox jComboBoxid_mesFormaPagoPuntoVentaGenerico)throws Exception
	{
		try
		{
			Mes  mesTemp=null;

			for(Mes mesAux:messForeignKey) {
				if(mesAux.getId()!=null && mesAux.getId().equals(idMesSeleccionado)) {
					mesTemp=mesAux;
					break;
				}
			}

			if(mesTemp!=null) {
				jComboBoxid_mesFormaPagoPuntoVentaGenerico.setSelectedItem(mesTemp);
			} else {
				if(jComboBoxid_mesFormaPagoPuntoVentaGenerico!=null && jComboBoxid_mesFormaPagoPuntoVentaGenerico.getItemCount()>0) {
					jComboBoxid_mesFormaPagoPuntoVentaGenerico.setSelectedIndex(0);
				}
			}

		}
		catch(Exception e)
		{
			throw e;
		}

	}

	public void setActualAnioForeignKey(Long idAnioSeleccionado,Boolean conCombosBusquedas,String sFormularioTipoBusqueda)throws Exception
	{
		try
		{
			Anio  anioTemp=null;

			for(Anio anioAux:aniosForeignKey) {
				if(anioAux.getId()!=null && anioAux.getId().equals(idAnioSeleccionado)) {
					anioTemp=anioAux;
					break;
				}
			}

			if(sFormularioTipoBusqueda.equals("Formulario") || sFormularioTipoBusqueda.equals("Todos")){
				if(anioTemp!=null) {

					if(this.formapagopuntoventa!=null) {
						this.formapagopuntoventa.setAnio(anioTemp);
					}

					if(this.jInternalFrameDetalleFormFormaPagoPuntoVenta!=null) {
						this.jInternalFrameDetalleFormFormaPagoPuntoVenta.jComboBoxid_anioFormaPagoPuntoVenta.setSelectedItem(anioTemp);
					}
				} else {
					//jComboBoxid_anioFormaPagoPuntoVenta.setSelectedItem(anioTemp);
					if(this.jInternalFrameDetalleFormFormaPagoPuntoVenta!=null) {
						if(this.jInternalFrameDetalleFormFormaPagoPuntoVenta.jComboBoxid_anioFormaPagoPuntoVenta.getItemCount()>0) {
							this.jInternalFrameDetalleFormFormaPagoPuntoVenta.jComboBoxid_anioFormaPagoPuntoVenta.setSelectedIndex(0);
						}
					}
				}
			}

			if(conCombosBusquedas) {

		//BYDAN_BUSQUEDAS
		/*				

		*/			}

		}
		catch(Exception e)
		{
			throw e;
		}
	}

	public String getActualAnioForeignKeyDescripcion(Long idAnioSeleccionado)throws Exception
	{
		String sDescripcion="";

		try
		{
			Anio  anioTemp=null;

			for(Anio anioAux:aniosForeignKey) {
				if(anioAux.getId()!=null && anioAux.getId().equals(idAnioSeleccionado)) {
					anioTemp=anioAux;
					break;
				}
			}


			sDescripcion=AnioConstantesFunciones.getAnioDescripcion(anioTemp);
		}
		catch(Exception e)
		{
			throw e;
		}

		return sDescripcion;
	}

	@SuppressWarnings("rawtypes")
	public void setActualAnioForeignKeyGenerico(Long idAnioSeleccionado,JComboBox jComboBoxid_anioFormaPagoPuntoVentaGenerico)throws Exception
	{
		try
		{
			Anio  anioTemp=null;

			for(Anio anioAux:aniosForeignKey) {
				if(anioAux.getId()!=null && anioAux.getId().equals(idAnioSeleccionado)) {
					anioTemp=anioAux;
					break;
				}
			}

			if(anioTemp!=null) {
				jComboBoxid_anioFormaPagoPuntoVentaGenerico.setSelectedItem(anioTemp);
			} else {
				if(jComboBoxid_anioFormaPagoPuntoVentaGenerico!=null && jComboBoxid_anioFormaPagoPuntoVentaGenerico.getItemCount()>0) {
					jComboBoxid_anioFormaPagoPuntoVentaGenerico.setSelectedIndex(0);
				}
			}

		}
		catch(Exception e)
		{
			throw e;
		}

	}

	public void setActualCuentaContableForeignKey(Long idCuentaContableSeleccionado,Boolean conCombosBusquedas,String sFormularioTipoBusqueda)throws Exception
	{
		try
		{
			CuentaContable  cuentacontableTemp=null;

			for(CuentaContable cuentacontableAux:cuentacontablesForeignKey) {
				if(cuentacontableAux.getId()!=null && cuentacontableAux.getId().equals(idCuentaContableSeleccionado)) {
					cuentacontableTemp=cuentacontableAux;
					break;
				}
			}

			if(sFormularioTipoBusqueda.equals("Formulario") || sFormularioTipoBusqueda.equals("Todos")){
				if(cuentacontableTemp!=null) {

					if(this.formapagopuntoventa!=null) {
						this.formapagopuntoventa.setCuentaContable(cuentacontableTemp);
					}

					if(this.jInternalFrameDetalleFormFormaPagoPuntoVenta!=null) {
						this.jInternalFrameDetalleFormFormaPagoPuntoVenta.jComboBoxid_cuenta_contableFormaPagoPuntoVenta.setSelectedItem(cuentacontableTemp);
					}
				} else {
					//jComboBoxid_cuenta_contableFormaPagoPuntoVenta.setSelectedItem(cuentacontableTemp);
					if(this.jInternalFrameDetalleFormFormaPagoPuntoVenta!=null) {
						if(this.jInternalFrameDetalleFormFormaPagoPuntoVenta.jComboBoxid_cuenta_contableFormaPagoPuntoVenta.getItemCount()>0) {
							this.jInternalFrameDetalleFormFormaPagoPuntoVenta.jComboBoxid_cuenta_contableFormaPagoPuntoVenta.setSelectedIndex(0);
						}
					}
				}
			}

			if(conCombosBusquedas) {

		//BYDAN_BUSQUEDAS
		/*				
				if(sFormularioTipoBusqueda.equals("FK_IdCuentaContable") || sFormularioTipoBusqueda.equals("Todos")){
					if(cuentacontableTemp!=null && jComboBoxid_cuenta_contableFK_IdCuentaContableFormaPagoPuntoVenta!=null) {
						jComboBoxid_cuenta_contableFK_IdCuentaContableFormaPagoPuntoVenta.setSelectedItem(cuentacontableTemp);
					} else {
						if(jComboBoxid_cuenta_contableFK_IdCuentaContableFormaPagoPuntoVenta!=null) {
							//jComboBoxid_cuenta_contableFK_IdCuentaContableFormaPagoPuntoVenta.setSelectedItem(cuentacontableTemp);
							if(jComboBoxid_cuenta_contableFK_IdCuentaContableFormaPagoPuntoVenta.getItemCount()>0) {
								jComboBoxid_cuenta_contableFK_IdCuentaContableFormaPagoPuntoVenta.setSelectedIndex(0);
							}
						}
					}
				}

		*/			}

		}
		catch(Exception e)
		{
			throw e;
		}
	}

	public String getActualCuentaContableForeignKeyDescripcion(Long idCuentaContableSeleccionado)throws Exception
	{
		String sDescripcion="";

		try
		{
			CuentaContable  cuentacontableTemp=null;

			for(CuentaContable cuentacontableAux:cuentacontablesForeignKey) {
				if(cuentacontableAux.getId()!=null && cuentacontableAux.getId().equals(idCuentaContableSeleccionado)) {
					cuentacontableTemp=cuentacontableAux;
					break;
				}
			}


			sDescripcion=CuentaContableConstantesFunciones.getCuentaContableDescripcion(cuentacontableTemp);
		}
		catch(Exception e)
		{
			throw e;
		}

		return sDescripcion;
	}

	@SuppressWarnings("rawtypes")
	public void setActualCuentaContableForeignKeyGenerico(Long idCuentaContableSeleccionado,JComboBox jComboBoxid_cuenta_contableFormaPagoPuntoVentaGenerico)throws Exception
	{
		try
		{
			CuentaContable  cuentacontableTemp=null;

			for(CuentaContable cuentacontableAux:cuentacontablesForeignKey) {
				if(cuentacontableAux.getId()!=null && cuentacontableAux.getId().equals(idCuentaContableSeleccionado)) {
					cuentacontableTemp=cuentacontableAux;
					break;
				}
			}

			if(cuentacontableTemp!=null) {
				jComboBoxid_cuenta_contableFormaPagoPuntoVentaGenerico.setSelectedItem(cuentacontableTemp);
			} else {
				if(jComboBoxid_cuenta_contableFormaPagoPuntoVentaGenerico!=null && jComboBoxid_cuenta_contableFormaPagoPuntoVentaGenerico.getItemCount()>0) {
					jComboBoxid_cuenta_contableFormaPagoPuntoVentaGenerico.setSelectedIndex(0);
				}
			}

		}
		catch(Exception e)
		{
			throw e;
		}

	}

	public void setActualAsientoContableForeignKey(Long idAsientoContableSeleccionado,Boolean conCombosBusquedas,String sFormularioTipoBusqueda)throws Exception
	{
		try
		{
			AsientoContable  asientocontableTemp=null;

			for(AsientoContable asientocontableAux:asientocontablesForeignKey) {
				if(asientocontableAux.getId()!=null && asientocontableAux.getId().equals(idAsientoContableSeleccionado)) {
					asientocontableTemp=asientocontableAux;
					break;
				}
			}

			if(sFormularioTipoBusqueda.equals("Formulario") || sFormularioTipoBusqueda.equals("Todos")){
				if(asientocontableTemp!=null) {

					if(this.formapagopuntoventa!=null) {
						this.formapagopuntoventa.setAsientoContable(asientocontableTemp);
					}

					if(this.jInternalFrameDetalleFormFormaPagoPuntoVenta!=null) {
						this.jInternalFrameDetalleFormFormaPagoPuntoVenta.jComboBoxid_asiento_contableFormaPagoPuntoVenta.setSelectedItem(asientocontableTemp);
					}
				} else {
					//jComboBoxid_asiento_contableFormaPagoPuntoVenta.setSelectedItem(asientocontableTemp);
					if(this.jInternalFrameDetalleFormFormaPagoPuntoVenta!=null) {
						if(this.jInternalFrameDetalleFormFormaPagoPuntoVenta.jComboBoxid_asiento_contableFormaPagoPuntoVenta.getItemCount()>0) {
							this.jInternalFrameDetalleFormFormaPagoPuntoVenta.jComboBoxid_asiento_contableFormaPagoPuntoVenta.setSelectedIndex(0);
						}
					}
				}
			}

			if(conCombosBusquedas) {

		//BYDAN_BUSQUEDAS
		/*				
				if(sFormularioTipoBusqueda.equals("FK_IdAsientoContable") || sFormularioTipoBusqueda.equals("Todos")){
					if(asientocontableTemp!=null && jComboBoxid_asiento_contableFK_IdAsientoContableFormaPagoPuntoVenta!=null) {
						jComboBoxid_asiento_contableFK_IdAsientoContableFormaPagoPuntoVenta.setSelectedItem(asientocontableTemp);
					} else {
						if(jComboBoxid_asiento_contableFK_IdAsientoContableFormaPagoPuntoVenta!=null) {
							//jComboBoxid_asiento_contableFK_IdAsientoContableFormaPagoPuntoVenta.setSelectedItem(asientocontableTemp);
							if(jComboBoxid_asiento_contableFK_IdAsientoContableFormaPagoPuntoVenta.getItemCount()>0) {
								jComboBoxid_asiento_contableFK_IdAsientoContableFormaPagoPuntoVenta.setSelectedIndex(0);
							}
						}
					}
				}

		*/			}

		}
		catch(Exception e)
		{
			throw e;
		}
	}

	public String getActualAsientoContableForeignKeyDescripcion(Long idAsientoContableSeleccionado)throws Exception
	{
		String sDescripcion="";

		try
		{
			AsientoContable  asientocontableTemp=null;

			for(AsientoContable asientocontableAux:asientocontablesForeignKey) {
				if(asientocontableAux.getId()!=null && asientocontableAux.getId().equals(idAsientoContableSeleccionado)) {
					asientocontableTemp=asientocontableAux;
					break;
				}
			}


			sDescripcion=AsientoContableConstantesFunciones.getAsientoContableDescripcion(asientocontableTemp);
		}
		catch(Exception e)
		{
			throw e;
		}

		return sDescripcion;
	}

	@SuppressWarnings("rawtypes")
	public void setActualAsientoContableForeignKeyGenerico(Long idAsientoContableSeleccionado,JComboBox jComboBoxid_asiento_contableFormaPagoPuntoVentaGenerico)throws Exception
	{
		try
		{
			AsientoContable  asientocontableTemp=null;

			for(AsientoContable asientocontableAux:asientocontablesForeignKey) {
				if(asientocontableAux.getId()!=null && asientocontableAux.getId().equals(idAsientoContableSeleccionado)) {
					asientocontableTemp=asientocontableAux;
					break;
				}
			}

			if(asientocontableTemp!=null) {
				jComboBoxid_asiento_contableFormaPagoPuntoVentaGenerico.setSelectedItem(asientocontableTemp);
			} else {
				if(jComboBoxid_asiento_contableFormaPagoPuntoVentaGenerico!=null && jComboBoxid_asiento_contableFormaPagoPuntoVentaGenerico.getItemCount()>0) {
					jComboBoxid_asiento_contableFormaPagoPuntoVentaGenerico.setSelectedIndex(0);
				}
			}

		}
		catch(Exception e)
		{
			throw e;
		}

	}

	
	
	@SuppressWarnings("rawtypes")
	public void setActualParaGuardarEmpresaForeignKey(FormaPagoPuntoVenta formapagopuntoventa,JComboBox jComboBoxid_empresaFormaPagoPuntoVentaGenerico)throws Exception
	{
		try
		{
			Empresa  empresaAux=new Empresa();

			if(jComboBoxid_empresaFormaPagoPuntoVentaGenerico==null) {
				empresaAux=(Empresa)this.jInternalFrameDetalleFormFormaPagoPuntoVenta.jComboBoxid_empresaFormaPagoPuntoVenta.getSelectedItem();
			} else {
				empresaAux=(Empresa)jComboBoxid_empresaFormaPagoPuntoVentaGenerico.getSelectedItem();
			}

			if(empresaAux!=null && empresaAux.getId()!=null) {
				formapagopuntoventa.setid_empresa(empresaAux.getId());
				formapagopuntoventa.setempresa_descripcion(FormaPagoPuntoVentaConstantesFunciones.getEmpresaDescripcion(empresaAux));
				formapagopuntoventa.setEmpresa(empresaAux);			}
		}
		catch(Exception e)
		{
			throw e;
		}
	}

	@SuppressWarnings("rawtypes")
	public void setActualParaGuardarSucursalForeignKey(FormaPagoPuntoVenta formapagopuntoventa,JComboBox jComboBoxid_sucursalFormaPagoPuntoVentaGenerico)throws Exception
	{
		try
		{
			Sucursal  sucursalAux=new Sucursal();

			if(jComboBoxid_sucursalFormaPagoPuntoVentaGenerico==null) {
				sucursalAux=(Sucursal)this.jInternalFrameDetalleFormFormaPagoPuntoVenta.jComboBoxid_sucursalFormaPagoPuntoVenta.getSelectedItem();
			} else {
				sucursalAux=(Sucursal)jComboBoxid_sucursalFormaPagoPuntoVentaGenerico.getSelectedItem();
			}

			if(sucursalAux!=null && sucursalAux.getId()!=null) {
				formapagopuntoventa.setid_sucursal(sucursalAux.getId());
				formapagopuntoventa.setsucursal_descripcion(FormaPagoPuntoVentaConstantesFunciones.getSucursalDescripcion(sucursalAux));
				formapagopuntoventa.setSucursal(sucursalAux);			}
		}
		catch(Exception e)
		{
			throw e;
		}
	}

	@SuppressWarnings("rawtypes")
	public void setActualParaGuardarEjercicioForeignKey(FormaPagoPuntoVenta formapagopuntoventa,JComboBox jComboBoxid_ejercicioFormaPagoPuntoVentaGenerico)throws Exception
	{
		try
		{
			Ejercicio  ejercicioAux=new Ejercicio();

			if(jComboBoxid_ejercicioFormaPagoPuntoVentaGenerico==null) {
				ejercicioAux=(Ejercicio)this.jInternalFrameDetalleFormFormaPagoPuntoVenta.jComboBoxid_ejercicioFormaPagoPuntoVenta.getSelectedItem();
			} else {
				ejercicioAux=(Ejercicio)jComboBoxid_ejercicioFormaPagoPuntoVentaGenerico.getSelectedItem();
			}

			if(ejercicioAux!=null && ejercicioAux.getId()!=null) {
				formapagopuntoventa.setid_ejercicio(ejercicioAux.getId());
				formapagopuntoventa.setejercicio_descripcion(FormaPagoPuntoVentaConstantesFunciones.getEjercicioDescripcion(ejercicioAux));
				formapagopuntoventa.setEjercicio(ejercicioAux);			}
		}
		catch(Exception e)
		{
			throw e;
		}
	}

	@SuppressWarnings("rawtypes")
	public void setActualParaGuardarPeriodoForeignKey(FormaPagoPuntoVenta formapagopuntoventa,JComboBox jComboBoxid_periodoFormaPagoPuntoVentaGenerico)throws Exception
	{
		try
		{
			Periodo  periodoAux=new Periodo();

			if(jComboBoxid_periodoFormaPagoPuntoVentaGenerico==null) {
				periodoAux=(Periodo)this.jInternalFrameDetalleFormFormaPagoPuntoVenta.jComboBoxid_periodoFormaPagoPuntoVenta.getSelectedItem();
			} else {
				periodoAux=(Periodo)jComboBoxid_periodoFormaPagoPuntoVentaGenerico.getSelectedItem();
			}

			if(periodoAux!=null && periodoAux.getId()!=null) {
				if(periodoAux.getid_estado_periodo().equals(0L)) {
					throw new Exception("Periodo INACTIVO, NO PUEDE GUARDAR LA INFORMACION CONSULTE CON EL ADMINISTRADOR");
				}

				formapagopuntoventa.setid_periodo(periodoAux.getId());
				formapagopuntoventa.setperiodo_descripcion(FormaPagoPuntoVentaConstantesFunciones.getPeriodoDescripcion(periodoAux));
				formapagopuntoventa.setPeriodo(periodoAux);			}
		}
		catch(Exception e)
		{
			throw e;
		}
	}

	@SuppressWarnings("rawtypes")
	public void setActualParaGuardarFacturaPuntoVentaForeignKey(FormaPagoPuntoVenta formapagopuntoventa,JComboBox jComboBoxid_factura_punto_ventaFormaPagoPuntoVentaGenerico)throws Exception
	{
		try
		{
			FacturaPuntoVenta  facturapuntoventaAux=new FacturaPuntoVenta();

			if(jComboBoxid_factura_punto_ventaFormaPagoPuntoVentaGenerico==null) {
				facturapuntoventaAux=(FacturaPuntoVenta)this.jInternalFrameDetalleFormFormaPagoPuntoVenta.jComboBoxid_factura_punto_ventaFormaPagoPuntoVenta.getSelectedItem();
			} else {
				facturapuntoventaAux=(FacturaPuntoVenta)jComboBoxid_factura_punto_ventaFormaPagoPuntoVentaGenerico.getSelectedItem();
			}

			if(facturapuntoventaAux!=null && facturapuntoventaAux.getId()!=null) {
				formapagopuntoventa.setid_factura_punto_venta(facturapuntoventaAux.getId());
				formapagopuntoventa.setfacturapuntoventa_descripcion(FormaPagoPuntoVentaConstantesFunciones.getFacturaPuntoVentaDescripcion(facturapuntoventaAux));
				formapagopuntoventa.setFacturaPuntoVenta(facturapuntoventaAux);			}
		}
		catch(Exception e)
		{
			throw e;
		}
	}

	@SuppressWarnings("rawtypes")
	public void setActualParaGuardarTipoFormaPagoForeignKey(FormaPagoPuntoVenta formapagopuntoventa,JComboBox jComboBoxid_tipo_forma_pagoFormaPagoPuntoVentaGenerico)throws Exception
	{
		try
		{
			TipoFormaPago  tipoformapagoAux=new TipoFormaPago();

			if(jComboBoxid_tipo_forma_pagoFormaPagoPuntoVentaGenerico==null) {
				tipoformapagoAux=(TipoFormaPago)this.jInternalFrameDetalleFormFormaPagoPuntoVenta.jComboBoxid_tipo_forma_pagoFormaPagoPuntoVenta.getSelectedItem();
			} else {
				tipoformapagoAux=(TipoFormaPago)jComboBoxid_tipo_forma_pagoFormaPagoPuntoVentaGenerico.getSelectedItem();
			}

			if(tipoformapagoAux!=null && tipoformapagoAux.getId()!=null) {
				formapagopuntoventa.setid_tipo_forma_pago(tipoformapagoAux.getId());
				formapagopuntoventa.settipoformapago_descripcion(FormaPagoPuntoVentaConstantesFunciones.getTipoFormaPagoDescripcion(tipoformapagoAux));
				formapagopuntoventa.setTipoFormaPago(tipoformapagoAux);			}
		}
		catch(Exception e)
		{
			throw e;
		}
	}

	@SuppressWarnings("rawtypes")
	public void setActualParaGuardarBancoForeignKey(FormaPagoPuntoVenta formapagopuntoventa,JComboBox jComboBoxid_bancoFormaPagoPuntoVentaGenerico)throws Exception
	{
		try
		{
			Banco  bancoAux=new Banco();

			if(jComboBoxid_bancoFormaPagoPuntoVentaGenerico==null) {
				bancoAux=(Banco)this.jInternalFrameDetalleFormFormaPagoPuntoVenta.jComboBoxid_bancoFormaPagoPuntoVenta.getSelectedItem();
			} else {
				bancoAux=(Banco)jComboBoxid_bancoFormaPagoPuntoVentaGenerico.getSelectedItem();
			}

			if(bancoAux!=null) {
				formapagopuntoventa.setid_banco(bancoAux.getId());
				formapagopuntoventa.setbanco_descripcion(FormaPagoPuntoVentaConstantesFunciones.getBancoDescripcion(bancoAux));
				formapagopuntoventa.setBanco(bancoAux);			}
		}
		catch(Exception e)
		{
			throw e;
		}
	}

	@SuppressWarnings("rawtypes")
	public void setActualParaGuardarCuentaBancoPunVenForeignKey(FormaPagoPuntoVenta formapagopuntoventa,JComboBox jComboBoxid_cuenta_banco_pun_venFormaPagoPuntoVentaGenerico)throws Exception
	{
		try
		{
			CuentaBancoPunVen  cuentabancopunvenAux=new CuentaBancoPunVen();

			if(jComboBoxid_cuenta_banco_pun_venFormaPagoPuntoVentaGenerico==null) {
				cuentabancopunvenAux=(CuentaBancoPunVen)this.jInternalFrameDetalleFormFormaPagoPuntoVenta.jComboBoxid_cuenta_banco_pun_venFormaPagoPuntoVenta.getSelectedItem();
			} else {
				cuentabancopunvenAux=(CuentaBancoPunVen)jComboBoxid_cuenta_banco_pun_venFormaPagoPuntoVentaGenerico.getSelectedItem();
			}

			if(cuentabancopunvenAux!=null) {
				formapagopuntoventa.setid_cuenta_banco_pun_ven(cuentabancopunvenAux.getId());
				formapagopuntoventa.setcuentabancopunven_descripcion(FormaPagoPuntoVentaConstantesFunciones.getCuentaBancoPunVenDescripcion(cuentabancopunvenAux));
				formapagopuntoventa.setCuentaBancoPunVen(cuentabancopunvenAux);			}
		}
		catch(Exception e)
		{
			throw e;
		}
	}

	@SuppressWarnings("rawtypes")
	public void setActualParaGuardarTipoRiesgoChequeForeignKey(FormaPagoPuntoVenta formapagopuntoventa,JComboBox jComboBoxid_tipo_riesgo_chequeFormaPagoPuntoVentaGenerico)throws Exception
	{
		try
		{
			TipoRiesgoCheque  tiporiesgochequeAux=new TipoRiesgoCheque();

			if(jComboBoxid_tipo_riesgo_chequeFormaPagoPuntoVentaGenerico==null) {
				tiporiesgochequeAux=(TipoRiesgoCheque)this.jInternalFrameDetalleFormFormaPagoPuntoVenta.jComboBoxid_tipo_riesgo_chequeFormaPagoPuntoVenta.getSelectedItem();
			} else {
				tiporiesgochequeAux=(TipoRiesgoCheque)jComboBoxid_tipo_riesgo_chequeFormaPagoPuntoVentaGenerico.getSelectedItem();
			}

			if(tiporiesgochequeAux!=null) {
				formapagopuntoventa.setid_tipo_riesgo_cheque(tiporiesgochequeAux.getId());
				formapagopuntoventa.settiporiesgocheque_descripcion(FormaPagoPuntoVentaConstantesFunciones.getTipoRiesgoChequeDescripcion(tiporiesgochequeAux));
				formapagopuntoventa.setTipoRiesgoCheque(tiporiesgochequeAux);			}
		}
		catch(Exception e)
		{
			throw e;
		}
	}

	@SuppressWarnings("rawtypes")
	public void setActualParaGuardarBancoTarjetaForeignKey(FormaPagoPuntoVenta formapagopuntoventa,JComboBox jComboBoxid_banco_tarjetaFormaPagoPuntoVentaGenerico)throws Exception
	{
		try
		{
			Banco  bancoAux=new Banco();

			if(jComboBoxid_banco_tarjetaFormaPagoPuntoVentaGenerico==null) {
				bancoAux=(Banco)this.jInternalFrameDetalleFormFormaPagoPuntoVenta.jComboBoxid_banco_tarjetaFormaPagoPuntoVenta.getSelectedItem();
			} else {
				bancoAux=(Banco)jComboBoxid_banco_tarjetaFormaPagoPuntoVentaGenerico.getSelectedItem();
			}

			if(bancoAux!=null) {
				formapagopuntoventa.setid_banco_tarjeta(bancoAux.getId());
				formapagopuntoventa.setbancotarjeta_descripcion(FormaPagoPuntoVentaConstantesFunciones.getBancoTarjetaDescripcion(bancoAux));
				formapagopuntoventa.setBancoTarjeta(bancoAux);			}
		}
		catch(Exception e)
		{
			throw e;
		}
	}

	@SuppressWarnings("rawtypes")
	public void setActualParaGuardarTarjetaCreditoForeignKey(FormaPagoPuntoVenta formapagopuntoventa,JComboBox jComboBoxid_tarjeta_creditoFormaPagoPuntoVentaGenerico)throws Exception
	{
		try
		{
			TarjetaCredito  tarjetacreditoAux=new TarjetaCredito();

			if(jComboBoxid_tarjeta_creditoFormaPagoPuntoVentaGenerico==null) {
				tarjetacreditoAux=(TarjetaCredito)this.jInternalFrameDetalleFormFormaPagoPuntoVenta.jComboBoxid_tarjeta_creditoFormaPagoPuntoVenta.getSelectedItem();
			} else {
				tarjetacreditoAux=(TarjetaCredito)jComboBoxid_tarjeta_creditoFormaPagoPuntoVentaGenerico.getSelectedItem();
			}

			if(tarjetacreditoAux!=null) {
				formapagopuntoventa.setid_tarjeta_credito(tarjetacreditoAux.getId());
				formapagopuntoventa.settarjetacredito_descripcion(FormaPagoPuntoVentaConstantesFunciones.getTarjetaCreditoDescripcion(tarjetacreditoAux));
				formapagopuntoventa.setTarjetaCredito(tarjetacreditoAux);			}
		}
		catch(Exception e)
		{
			throw e;
		}
	}

	@SuppressWarnings("rawtypes")
	public void setActualParaGuardarTipoInteresTarjetaForeignKey(FormaPagoPuntoVenta formapagopuntoventa,JComboBox jComboBoxid_tipo_interes_tarjetaFormaPagoPuntoVentaGenerico)throws Exception
	{
		try
		{
			TipoInteresTarjeta  tipointerestarjetaAux=new TipoInteresTarjeta();

			if(jComboBoxid_tipo_interes_tarjetaFormaPagoPuntoVentaGenerico==null) {
				tipointerestarjetaAux=(TipoInteresTarjeta)this.jInternalFrameDetalleFormFormaPagoPuntoVenta.jComboBoxid_tipo_interes_tarjetaFormaPagoPuntoVenta.getSelectedItem();
			} else {
				tipointerestarjetaAux=(TipoInteresTarjeta)jComboBoxid_tipo_interes_tarjetaFormaPagoPuntoVentaGenerico.getSelectedItem();
			}

			if(tipointerestarjetaAux!=null) {
				formapagopuntoventa.setid_tipo_interes_tarjeta(tipointerestarjetaAux.getId());
				formapagopuntoventa.settipointerestarjeta_descripcion(FormaPagoPuntoVentaConstantesFunciones.getTipoInteresTarjetaDescripcion(tipointerestarjetaAux));
				formapagopuntoventa.setTipoInteresTarjeta(tipointerestarjetaAux);			}
		}
		catch(Exception e)
		{
			throw e;
		}
	}

	@SuppressWarnings("rawtypes")
	public void setActualParaGuardarTipoPagoTarjetaForeignKey(FormaPagoPuntoVenta formapagopuntoventa,JComboBox jComboBoxid_tipo_pago_tarjetaFormaPagoPuntoVentaGenerico)throws Exception
	{
		try
		{
			TipoPagoTarjeta  tipopagotarjetaAux=new TipoPagoTarjeta();

			if(jComboBoxid_tipo_pago_tarjetaFormaPagoPuntoVentaGenerico==null) {
				tipopagotarjetaAux=(TipoPagoTarjeta)this.jInternalFrameDetalleFormFormaPagoPuntoVenta.jComboBoxid_tipo_pago_tarjetaFormaPagoPuntoVenta.getSelectedItem();
			} else {
				tipopagotarjetaAux=(TipoPagoTarjeta)jComboBoxid_tipo_pago_tarjetaFormaPagoPuntoVentaGenerico.getSelectedItem();
			}

			if(tipopagotarjetaAux!=null) {
				formapagopuntoventa.setid_tipo_pago_tarjeta(tipopagotarjetaAux.getId());
				formapagopuntoventa.settipopagotarjeta_descripcion(FormaPagoPuntoVentaConstantesFunciones.getTipoPagoTarjetaDescripcion(tipopagotarjetaAux));
				formapagopuntoventa.setTipoPagoTarjeta(tipopagotarjetaAux);			}
		}
		catch(Exception e)
		{
			throw e;
		}
	}

	@SuppressWarnings("rawtypes")
	public void setActualParaGuardarConexionForeignKey(FormaPagoPuntoVenta formapagopuntoventa,JComboBox jComboBoxid_conexionFormaPagoPuntoVentaGenerico)throws Exception
	{
		try
		{
			Conexion  conexionAux=new Conexion();

			if(jComboBoxid_conexionFormaPagoPuntoVentaGenerico==null) {
				conexionAux=(Conexion)this.jInternalFrameDetalleFormFormaPagoPuntoVenta.jComboBoxid_conexionFormaPagoPuntoVenta.getSelectedItem();
			} else {
				conexionAux=(Conexion)jComboBoxid_conexionFormaPagoPuntoVentaGenerico.getSelectedItem();
			}

			if(conexionAux!=null) {
				formapagopuntoventa.setid_conexion(conexionAux.getId());
				formapagopuntoventa.setconexion_descripcion(FormaPagoPuntoVentaConstantesFunciones.getConexionDescripcion(conexionAux));
				formapagopuntoventa.setConexion(conexionAux);			}
		}
		catch(Exception e)
		{
			throw e;
		}
	}

	@SuppressWarnings("rawtypes")
	public void setActualParaGuardarMesForeignKey(FormaPagoPuntoVenta formapagopuntoventa,JComboBox jComboBoxid_mesFormaPagoPuntoVentaGenerico)throws Exception
	{
		try
		{
			Mes  mesAux=new Mes();

			if(jComboBoxid_mesFormaPagoPuntoVentaGenerico==null) {
				mesAux=(Mes)this.jInternalFrameDetalleFormFormaPagoPuntoVenta.jComboBoxid_mesFormaPagoPuntoVenta.getSelectedItem();
			} else {
				mesAux=(Mes)jComboBoxid_mesFormaPagoPuntoVentaGenerico.getSelectedItem();
			}

			if(mesAux!=null) {
				formapagopuntoventa.setid_mes(mesAux.getId());
				formapagopuntoventa.setmes_descripcion(FormaPagoPuntoVentaConstantesFunciones.getMesDescripcion(mesAux));
				formapagopuntoventa.setMes(mesAux);			}
		}
		catch(Exception e)
		{
			throw e;
		}
	}

	@SuppressWarnings("rawtypes")
	public void setActualParaGuardarAnioForeignKey(FormaPagoPuntoVenta formapagopuntoventa,JComboBox jComboBoxid_anioFormaPagoPuntoVentaGenerico)throws Exception
	{
		try
		{
			Anio  anioAux=new Anio();

			if(jComboBoxid_anioFormaPagoPuntoVentaGenerico==null) {
				anioAux=(Anio)this.jInternalFrameDetalleFormFormaPagoPuntoVenta.jComboBoxid_anioFormaPagoPuntoVenta.getSelectedItem();
			} else {
				anioAux=(Anio)jComboBoxid_anioFormaPagoPuntoVentaGenerico.getSelectedItem();
			}

			if(anioAux!=null) {
				formapagopuntoventa.setid_anio(anioAux.getId());
				formapagopuntoventa.setanio_descripcion(FormaPagoPuntoVentaConstantesFunciones.getAnioDescripcion(anioAux));
				formapagopuntoventa.setAnio(anioAux);			}
		}
		catch(Exception e)
		{
			throw e;
		}
	}

	@SuppressWarnings("rawtypes")
	public void setActualParaGuardarCuentaContableForeignKey(FormaPagoPuntoVenta formapagopuntoventa,JComboBox jComboBoxid_cuenta_contableFormaPagoPuntoVentaGenerico)throws Exception
	{
		try
		{
			CuentaContable  cuentacontableAux=new CuentaContable();

			if(jComboBoxid_cuenta_contableFormaPagoPuntoVentaGenerico==null) {
				cuentacontableAux=(CuentaContable)this.jInternalFrameDetalleFormFormaPagoPuntoVenta.jComboBoxid_cuenta_contableFormaPagoPuntoVenta.getSelectedItem();
			} else {
				cuentacontableAux=(CuentaContable)jComboBoxid_cuenta_contableFormaPagoPuntoVentaGenerico.getSelectedItem();
			}

			if(cuentacontableAux!=null) {
				formapagopuntoventa.setid_cuenta_contable(cuentacontableAux.getId());
				formapagopuntoventa.setcuentacontable_descripcion(FormaPagoPuntoVentaConstantesFunciones.getCuentaContableDescripcion(cuentacontableAux));
				formapagopuntoventa.setCuentaContable(cuentacontableAux);			}
		}
		catch(Exception e)
		{
			throw e;
		}
	}

	@SuppressWarnings("rawtypes")
	public void setActualParaGuardarAsientoContableForeignKey(FormaPagoPuntoVenta formapagopuntoventa,JComboBox jComboBoxid_asiento_contableFormaPagoPuntoVentaGenerico)throws Exception
	{
		try
		{
			AsientoContable  asientocontableAux=new AsientoContable();

			if(jComboBoxid_asiento_contableFormaPagoPuntoVentaGenerico==null) {
				asientocontableAux=(AsientoContable)this.jInternalFrameDetalleFormFormaPagoPuntoVenta.jComboBoxid_asiento_contableFormaPagoPuntoVenta.getSelectedItem();
			} else {
				asientocontableAux=(AsientoContable)jComboBoxid_asiento_contableFormaPagoPuntoVentaGenerico.getSelectedItem();
			}

			if(asientocontableAux!=null) {
				formapagopuntoventa.setid_asiento_contable(asientocontableAux.getId());
				formapagopuntoventa.setasientocontable_descripcion(FormaPagoPuntoVentaConstantesFunciones.getAsientoContableDescripcion(asientocontableAux));
				formapagopuntoventa.setAsientoContable(asientocontableAux);			}
		}
		catch(Exception e)
		{
			throw e;
		}
	}

	
	


		@SuppressWarnings({ "unchecked", "rawtypes" })
		public void cargarCombosFrameEmpresasForeignKey(String sFormularioTipoBusqueda)throws Exception {
			try {

				JComboBoxBinding jComboBoxBindingEmpresa=null;

				if(sFormularioTipoBusqueda.equals("Formulario") || sFormularioTipoBusqueda.equals("Todos")){

					if(!FormaPagoPuntoVentaJInternalFrame.ISBINDING_MANUAL) {
					} else {
						if(this.jInternalFrameDetalleFormFormaPagoPuntoVenta!=null) { 
							this.jInternalFrameDetalleFormFormaPagoPuntoVenta.jComboBoxid_empresaFormaPagoPuntoVenta.removeAllItems();

							for(Empresa empresa:this.empresasForeignKey) {
								this.jInternalFrameDetalleFormFormaPagoPuntoVenta.jComboBoxid_empresaFormaPagoPuntoVenta.addItem(empresa);
							}
						}
					}

					if(this.jInternalFrameDetalleFormFormaPagoPuntoVenta!=null) { 
					}

					if(!FormaPagoPuntoVentaJInternalFrame.ISBINDING_MANUAL) {
					}
				}


				if(!this.conCargarMinimo) {


				}

			}  catch(Exception e) {
				throw e;
			}
		}

		@SuppressWarnings({ "unchecked", "rawtypes" })
		public void cargarCombosFrameSucursalsForeignKey(String sFormularioTipoBusqueda)throws Exception {
			try {

				JComboBoxBinding jComboBoxBindingSucursal=null;

				if(sFormularioTipoBusqueda.equals("Formulario") || sFormularioTipoBusqueda.equals("Todos")){

					if(!FormaPagoPuntoVentaJInternalFrame.ISBINDING_MANUAL) {
					} else {
						if(this.jInternalFrameDetalleFormFormaPagoPuntoVenta!=null) { 
							this.jInternalFrameDetalleFormFormaPagoPuntoVenta.jComboBoxid_sucursalFormaPagoPuntoVenta.removeAllItems();

							for(Sucursal sucursal:this.sucursalsForeignKey) {
								this.jInternalFrameDetalleFormFormaPagoPuntoVenta.jComboBoxid_sucursalFormaPagoPuntoVenta.addItem(sucursal);
							}
						}
					}

					if(this.jInternalFrameDetalleFormFormaPagoPuntoVenta!=null) { 
					}

					if(!FormaPagoPuntoVentaJInternalFrame.ISBINDING_MANUAL) {
					}
				}


				if(!this.conCargarMinimo) {


				}

			}  catch(Exception e) {
				throw e;
			}
		}

		@SuppressWarnings({ "unchecked", "rawtypes" })
		public void cargarCombosFrameEjerciciosForeignKey(String sFormularioTipoBusqueda)throws Exception {
			try {

				JComboBoxBinding jComboBoxBindingEjercicio=null;

				if(sFormularioTipoBusqueda.equals("Formulario") || sFormularioTipoBusqueda.equals("Todos")){

					if(!FormaPagoPuntoVentaJInternalFrame.ISBINDING_MANUAL) {
					} else {
						if(this.jInternalFrameDetalleFormFormaPagoPuntoVenta!=null) { 
							this.jInternalFrameDetalleFormFormaPagoPuntoVenta.jComboBoxid_ejercicioFormaPagoPuntoVenta.removeAllItems();

							for(Ejercicio ejercicio:this.ejerciciosForeignKey) {
								this.jInternalFrameDetalleFormFormaPagoPuntoVenta.jComboBoxid_ejercicioFormaPagoPuntoVenta.addItem(ejercicio);
							}
						}
					}

					if(this.jInternalFrameDetalleFormFormaPagoPuntoVenta!=null) { 
					}

					if(!FormaPagoPuntoVentaJInternalFrame.ISBINDING_MANUAL) {
					}
				}


				if(!this.conCargarMinimo) {


				}

			}  catch(Exception e) {
				throw e;
			}
		}

		@SuppressWarnings({ "unchecked", "rawtypes" })
		public void cargarCombosFramePeriodosForeignKey(String sFormularioTipoBusqueda)throws Exception {
			try {

				JComboBoxBinding jComboBoxBindingPeriodo=null;

				if(sFormularioTipoBusqueda.equals("Formulario") || sFormularioTipoBusqueda.equals("Todos")){

					if(!FormaPagoPuntoVentaJInternalFrame.ISBINDING_MANUAL) {
					} else {
						if(this.jInternalFrameDetalleFormFormaPagoPuntoVenta!=null) { 
							this.jInternalFrameDetalleFormFormaPagoPuntoVenta.jComboBoxid_periodoFormaPagoPuntoVenta.removeAllItems();

							for(Periodo periodo:this.periodosForeignKey) {
								this.jInternalFrameDetalleFormFormaPagoPuntoVenta.jComboBoxid_periodoFormaPagoPuntoVenta.addItem(periodo);
							}
						}
					}

					if(this.jInternalFrameDetalleFormFormaPagoPuntoVenta!=null) { 
					}

					if(!FormaPagoPuntoVentaJInternalFrame.ISBINDING_MANUAL) {
					}
				}


				if(!this.conCargarMinimo) {


				}

			}  catch(Exception e) {
				throw e;
			}
		}

		@SuppressWarnings({ "unchecked", "rawtypes" })
		public void cargarCombosFrameFacturaPuntoVentasForeignKey(String sFormularioTipoBusqueda)throws Exception {
			try {

				JComboBoxBinding jComboBoxBindingFacturaPuntoVenta=null;

				if(sFormularioTipoBusqueda.equals("Formulario") || sFormularioTipoBusqueda.equals("Todos")){

					if(!FormaPagoPuntoVentaJInternalFrame.ISBINDING_MANUAL) {
					} else {
						if(this.jInternalFrameDetalleFormFormaPagoPuntoVenta!=null) { 
							this.jInternalFrameDetalleFormFormaPagoPuntoVenta.jComboBoxid_factura_punto_ventaFormaPagoPuntoVenta.removeAllItems();

							for(FacturaPuntoVenta facturapuntoventa:this.facturapuntoventasForeignKey) {
								this.jInternalFrameDetalleFormFormaPagoPuntoVenta.jComboBoxid_factura_punto_ventaFormaPagoPuntoVenta.addItem(facturapuntoventa);
							}
						}
					}

					if(this.jInternalFrameDetalleFormFormaPagoPuntoVenta!=null) { 
					}

					if(!FormaPagoPuntoVentaJInternalFrame.ISBINDING_MANUAL) {
					}
				}


				if(!this.conCargarMinimo) {

					if(sFormularioTipoBusqueda.equals("FK_IdFacturaPuntoVenta") || sFormularioTipoBusqueda.equals("Todos")){

						//BYDAN_BUSQUEDAS
						/*
						if(!FormaPagoPuntoVentaJInternalFrame.ISBINDING_MANUAL) {
						} else {
							this.jComboBoxid_factura_punto_ventaFK_IdFacturaPuntoVentaFormaPagoPuntoVenta.removeAllItems();

							for(FacturaPuntoVenta facturapuntoventa:this.facturapuntoventasForeignKey) {
								this.jComboBoxid_factura_punto_ventaFK_IdFacturaPuntoVentaFormaPagoPuntoVenta.addItem(facturapuntoventa);
							}
						}

						if(!FormaPagoPuntoVentaJInternalFrame.ISBINDING_MANUAL) {
						}

						*/
					}

				}

			}  catch(Exception e) {
				throw e;
			}
		}

		@SuppressWarnings({ "unchecked", "rawtypes" })
		public void cargarCombosFrameTipoFormaPagosForeignKey(String sFormularioTipoBusqueda)throws Exception {
			try {

				JComboBoxBinding jComboBoxBindingTipoFormaPago=null;

				if(sFormularioTipoBusqueda.equals("Formulario") || sFormularioTipoBusqueda.equals("Todos")){

					if(!FormaPagoPuntoVentaJInternalFrame.ISBINDING_MANUAL) {
					} else {
						if(this.jInternalFrameDetalleFormFormaPagoPuntoVenta!=null) { 
							this.jInternalFrameDetalleFormFormaPagoPuntoVenta.jComboBoxid_tipo_forma_pagoFormaPagoPuntoVenta.removeAllItems();

							for(TipoFormaPago tipoformapago:this.tipoformapagosForeignKey) {
								this.jInternalFrameDetalleFormFormaPagoPuntoVenta.jComboBoxid_tipo_forma_pagoFormaPagoPuntoVenta.addItem(tipoformapago);
							}
						}
					}

					if(this.jInternalFrameDetalleFormFormaPagoPuntoVenta!=null) { 
					}

					if(!FormaPagoPuntoVentaJInternalFrame.ISBINDING_MANUAL) {
					}
				}


				if(!this.conCargarMinimo) {

					if(sFormularioTipoBusqueda.equals("FK_IdTipoFormaPago") || sFormularioTipoBusqueda.equals("Todos")){

						//BYDAN_BUSQUEDAS
						/*
						if(!FormaPagoPuntoVentaJInternalFrame.ISBINDING_MANUAL) {
						} else {
							this.jComboBoxid_tipo_forma_pagoFK_IdTipoFormaPagoFormaPagoPuntoVenta.removeAllItems();

							for(TipoFormaPago tipoformapago:this.tipoformapagosForeignKey) {
								this.jComboBoxid_tipo_forma_pagoFK_IdTipoFormaPagoFormaPagoPuntoVenta.addItem(tipoformapago);
							}
						}

						if(!FormaPagoPuntoVentaJInternalFrame.ISBINDING_MANUAL) {
						}

						*/
					}

				}

			}  catch(Exception e) {
				throw e;
			}
		}

		@SuppressWarnings({ "unchecked", "rawtypes" })
		public void cargarCombosFrameBancosForeignKey(String sFormularioTipoBusqueda)throws Exception {
			try {

				JComboBoxBinding jComboBoxBindingBanco=null;

				if(sFormularioTipoBusqueda.equals("Formulario") || sFormularioTipoBusqueda.equals("Todos")){

					if(!FormaPagoPuntoVentaJInternalFrame.ISBINDING_MANUAL) {
					} else {
						if(this.jInternalFrameDetalleFormFormaPagoPuntoVenta!=null) { 
							this.jInternalFrameDetalleFormFormaPagoPuntoVenta.jComboBoxid_bancoFormaPagoPuntoVenta.removeAllItems();

							for(Banco banco:this.bancosForeignKey) {
								this.jInternalFrameDetalleFormFormaPagoPuntoVenta.jComboBoxid_bancoFormaPagoPuntoVenta.addItem(banco);
							}
						}
					}

					if(this.jInternalFrameDetalleFormFormaPagoPuntoVenta!=null) { 
					}

					if(!FormaPagoPuntoVentaJInternalFrame.ISBINDING_MANUAL) {
					}
				}


				if(!this.conCargarMinimo) {

					if(sFormularioTipoBusqueda.equals("FK_IdBanco") || sFormularioTipoBusqueda.equals("Todos")){

						//BYDAN_BUSQUEDAS
						/*
						if(!FormaPagoPuntoVentaJInternalFrame.ISBINDING_MANUAL) {
						} else {
							this.jComboBoxid_bancoFK_IdBancoFormaPagoPuntoVenta.removeAllItems();

							for(Banco banco:this.bancosForeignKey) {
								this.jComboBoxid_bancoFK_IdBancoFormaPagoPuntoVenta.addItem(banco);
							}
						}

						if(!FormaPagoPuntoVentaJInternalFrame.ISBINDING_MANUAL) {
						}

						*/
					}

				}

			}  catch(Exception e) {
				throw e;
			}
		}

		@SuppressWarnings({ "unchecked", "rawtypes" })
		public void cargarCombosFrameCuentaBancoPunVensForeignKey(String sFormularioTipoBusqueda)throws Exception {
			try {

				JComboBoxBinding jComboBoxBindingCuentaBancoPunVen=null;

				if(sFormularioTipoBusqueda.equals("Formulario") || sFormularioTipoBusqueda.equals("Todos")){

					if(!FormaPagoPuntoVentaJInternalFrame.ISBINDING_MANUAL) {
					} else {
						if(this.jInternalFrameDetalleFormFormaPagoPuntoVenta!=null) { 
							this.jInternalFrameDetalleFormFormaPagoPuntoVenta.jComboBoxid_cuenta_banco_pun_venFormaPagoPuntoVenta.removeAllItems();

							for(CuentaBancoPunVen cuentabancopunven:this.cuentabancopunvensForeignKey) {
								this.jInternalFrameDetalleFormFormaPagoPuntoVenta.jComboBoxid_cuenta_banco_pun_venFormaPagoPuntoVenta.addItem(cuentabancopunven);
							}
						}
					}

					if(this.jInternalFrameDetalleFormFormaPagoPuntoVenta!=null) { 
					}

					if(!FormaPagoPuntoVentaJInternalFrame.ISBINDING_MANUAL) {
					}
				}


				if(!this.conCargarMinimo) {

					if(sFormularioTipoBusqueda.equals("FK_IdCuentaBancoPunVen") || sFormularioTipoBusqueda.equals("Todos")){

						//BYDAN_BUSQUEDAS
						/*
						if(!FormaPagoPuntoVentaJInternalFrame.ISBINDING_MANUAL) {
						} else {
							this.jComboBoxid_cuenta_banco_pun_venFK_IdCuentaBancoPunVenFormaPagoPuntoVenta.removeAllItems();

							for(CuentaBancoPunVen cuentabancopunven:this.cuentabancopunvensForeignKey) {
								this.jComboBoxid_cuenta_banco_pun_venFK_IdCuentaBancoPunVenFormaPagoPuntoVenta.addItem(cuentabancopunven);
							}
						}

						if(!FormaPagoPuntoVentaJInternalFrame.ISBINDING_MANUAL) {
						}

						*/
					}

				}

			}  catch(Exception e) {
				throw e;
			}
		}

		@SuppressWarnings({ "unchecked", "rawtypes" })
		public void cargarCombosFrameTipoRiesgoChequesForeignKey(String sFormularioTipoBusqueda)throws Exception {
			try {

				JComboBoxBinding jComboBoxBindingTipoRiesgoCheque=null;

				if(sFormularioTipoBusqueda.equals("Formulario") || sFormularioTipoBusqueda.equals("Todos")){

					if(!FormaPagoPuntoVentaJInternalFrame.ISBINDING_MANUAL) {
					} else {
						if(this.jInternalFrameDetalleFormFormaPagoPuntoVenta!=null) { 
							this.jInternalFrameDetalleFormFormaPagoPuntoVenta.jComboBoxid_tipo_riesgo_chequeFormaPagoPuntoVenta.removeAllItems();

							for(TipoRiesgoCheque tiporiesgocheque:this.tiporiesgochequesForeignKey) {
								this.jInternalFrameDetalleFormFormaPagoPuntoVenta.jComboBoxid_tipo_riesgo_chequeFormaPagoPuntoVenta.addItem(tiporiesgocheque);
							}
						}
					}

					if(this.jInternalFrameDetalleFormFormaPagoPuntoVenta!=null) { 
					}

					if(!FormaPagoPuntoVentaJInternalFrame.ISBINDING_MANUAL) {
					}
				}


				if(!this.conCargarMinimo) {

					if(sFormularioTipoBusqueda.equals("FK_IdTipoRiesgoCheque") || sFormularioTipoBusqueda.equals("Todos")){

						//BYDAN_BUSQUEDAS
						/*
						if(!FormaPagoPuntoVentaJInternalFrame.ISBINDING_MANUAL) {
						} else {
							this.jComboBoxid_tipo_riesgo_chequeFK_IdTipoRiesgoChequeFormaPagoPuntoVenta.removeAllItems();

							for(TipoRiesgoCheque tiporiesgocheque:this.tiporiesgochequesForeignKey) {
								this.jComboBoxid_tipo_riesgo_chequeFK_IdTipoRiesgoChequeFormaPagoPuntoVenta.addItem(tiporiesgocheque);
							}
						}

						if(!FormaPagoPuntoVentaJInternalFrame.ISBINDING_MANUAL) {
						}

						*/
					}

				}

			}  catch(Exception e) {
				throw e;
			}
		}

		@SuppressWarnings({ "unchecked", "rawtypes" })
		public void cargarCombosFrameBancoTarjetasForeignKey(String sFormularioTipoBusqueda)throws Exception {
			try {

				JComboBoxBinding jComboBoxBindingBanco=null;

				if(sFormularioTipoBusqueda.equals("Formulario") || sFormularioTipoBusqueda.equals("Todos")){

					if(!FormaPagoPuntoVentaJInternalFrame.ISBINDING_MANUAL) {
					} else {
						if(this.jInternalFrameDetalleFormFormaPagoPuntoVenta!=null) { 
							this.jInternalFrameDetalleFormFormaPagoPuntoVenta.jComboBoxid_banco_tarjetaFormaPagoPuntoVenta.removeAllItems();

							for(Banco bancotarjeta:this.bancotarjetasForeignKey) {
								this.jInternalFrameDetalleFormFormaPagoPuntoVenta.jComboBoxid_banco_tarjetaFormaPagoPuntoVenta.addItem(bancotarjeta);
							}
						}
					}

					if(this.jInternalFrameDetalleFormFormaPagoPuntoVenta!=null) { 
					}

					if(!FormaPagoPuntoVentaJInternalFrame.ISBINDING_MANUAL) {
					}
				}


				if(!this.conCargarMinimo) {

					if(sFormularioTipoBusqueda.equals("FK_IdBancoTarjeta") || sFormularioTipoBusqueda.equals("Todos")){

						//BYDAN_BUSQUEDAS
						/*
						if(!FormaPagoPuntoVentaJInternalFrame.ISBINDING_MANUAL) {
						} else {
							this.jComboBoxid_banco_tarjetaFK_IdBancoTarjetaFormaPagoPuntoVenta.removeAllItems();

							for(Banco bancotarjeta:this.bancotarjetasForeignKey) {
								this.jComboBoxid_banco_tarjetaFK_IdBancoTarjetaFormaPagoPuntoVenta.addItem(bancotarjeta);
							}
						}

						if(!FormaPagoPuntoVentaJInternalFrame.ISBINDING_MANUAL) {
						}

						*/
					}

				}

			}  catch(Exception e) {
				throw e;
			}
		}

		@SuppressWarnings({ "unchecked", "rawtypes" })
		public void cargarCombosFrameTarjetaCreditosForeignKey(String sFormularioTipoBusqueda)throws Exception {
			try {

				JComboBoxBinding jComboBoxBindingTarjetaCredito=null;

				if(sFormularioTipoBusqueda.equals("Formulario") || sFormularioTipoBusqueda.equals("Todos")){

					if(!FormaPagoPuntoVentaJInternalFrame.ISBINDING_MANUAL) {
					} else {
						if(this.jInternalFrameDetalleFormFormaPagoPuntoVenta!=null) { 
							this.jInternalFrameDetalleFormFormaPagoPuntoVenta.jComboBoxid_tarjeta_creditoFormaPagoPuntoVenta.removeAllItems();

							for(TarjetaCredito tarjetacredito:this.tarjetacreditosForeignKey) {
								this.jInternalFrameDetalleFormFormaPagoPuntoVenta.jComboBoxid_tarjeta_creditoFormaPagoPuntoVenta.addItem(tarjetacredito);
							}
						}
					}

					if(this.jInternalFrameDetalleFormFormaPagoPuntoVenta!=null) { 
					}

					if(!FormaPagoPuntoVentaJInternalFrame.ISBINDING_MANUAL) {
					}
				}


				if(!this.conCargarMinimo) {

					if(sFormularioTipoBusqueda.equals("FK_IdTarjetaCredito") || sFormularioTipoBusqueda.equals("Todos")){

						//BYDAN_BUSQUEDAS
						/*
						if(!FormaPagoPuntoVentaJInternalFrame.ISBINDING_MANUAL) {
						} else {
							this.jComboBoxid_tarjeta_creditoFK_IdTarjetaCreditoFormaPagoPuntoVenta.removeAllItems();

							for(TarjetaCredito tarjetacredito:this.tarjetacreditosForeignKey) {
								this.jComboBoxid_tarjeta_creditoFK_IdTarjetaCreditoFormaPagoPuntoVenta.addItem(tarjetacredito);
							}
						}

						if(!FormaPagoPuntoVentaJInternalFrame.ISBINDING_MANUAL) {
						}

						*/
					}

				}

			}  catch(Exception e) {
				throw e;
			}
		}

		@SuppressWarnings({ "unchecked", "rawtypes" })
		public void cargarCombosFrameTipoInteresTarjetasForeignKey(String sFormularioTipoBusqueda)throws Exception {
			try {

				JComboBoxBinding jComboBoxBindingTipoInteresTarjeta=null;

				if(sFormularioTipoBusqueda.equals("Formulario") || sFormularioTipoBusqueda.equals("Todos")){

					if(!FormaPagoPuntoVentaJInternalFrame.ISBINDING_MANUAL) {
					} else {
						if(this.jInternalFrameDetalleFormFormaPagoPuntoVenta!=null) { 
							this.jInternalFrameDetalleFormFormaPagoPuntoVenta.jComboBoxid_tipo_interes_tarjetaFormaPagoPuntoVenta.removeAllItems();

							for(TipoInteresTarjeta tipointerestarjeta:this.tipointerestarjetasForeignKey) {
								this.jInternalFrameDetalleFormFormaPagoPuntoVenta.jComboBoxid_tipo_interes_tarjetaFormaPagoPuntoVenta.addItem(tipointerestarjeta);
							}
						}
					}

					if(this.jInternalFrameDetalleFormFormaPagoPuntoVenta!=null) { 
					}

					if(!FormaPagoPuntoVentaJInternalFrame.ISBINDING_MANUAL) {
					}
				}


				if(!this.conCargarMinimo) {

					if(sFormularioTipoBusqueda.equals("FK_IdTipoInteresTarjeta") || sFormularioTipoBusqueda.equals("Todos")){

						//BYDAN_BUSQUEDAS
						/*
						if(!FormaPagoPuntoVentaJInternalFrame.ISBINDING_MANUAL) {
						} else {
							this.jComboBoxid_tipo_interes_tarjetaFK_IdTipoInteresTarjetaFormaPagoPuntoVenta.removeAllItems();

							for(TipoInteresTarjeta tipointerestarjeta:this.tipointerestarjetasForeignKey) {
								this.jComboBoxid_tipo_interes_tarjetaFK_IdTipoInteresTarjetaFormaPagoPuntoVenta.addItem(tipointerestarjeta);
							}
						}

						if(!FormaPagoPuntoVentaJInternalFrame.ISBINDING_MANUAL) {
						}

						*/
					}

				}

			}  catch(Exception e) {
				throw e;
			}
		}

		@SuppressWarnings({ "unchecked", "rawtypes" })
		public void cargarCombosFrameTipoPagoTarjetasForeignKey(String sFormularioTipoBusqueda)throws Exception {
			try {

				JComboBoxBinding jComboBoxBindingTipoPagoTarjeta=null;

				if(sFormularioTipoBusqueda.equals("Formulario") || sFormularioTipoBusqueda.equals("Todos")){

					if(!FormaPagoPuntoVentaJInternalFrame.ISBINDING_MANUAL) {
					} else {
						if(this.jInternalFrameDetalleFormFormaPagoPuntoVenta!=null) { 
							this.jInternalFrameDetalleFormFormaPagoPuntoVenta.jComboBoxid_tipo_pago_tarjetaFormaPagoPuntoVenta.removeAllItems();

							for(TipoPagoTarjeta tipopagotarjeta:this.tipopagotarjetasForeignKey) {
								this.jInternalFrameDetalleFormFormaPagoPuntoVenta.jComboBoxid_tipo_pago_tarjetaFormaPagoPuntoVenta.addItem(tipopagotarjeta);
							}
						}
					}

					if(this.jInternalFrameDetalleFormFormaPagoPuntoVenta!=null) { 
					}

					if(!FormaPagoPuntoVentaJInternalFrame.ISBINDING_MANUAL) {
					}
				}


				if(!this.conCargarMinimo) {

					if(sFormularioTipoBusqueda.equals("FK_IdTipoPagoTarjeta") || sFormularioTipoBusqueda.equals("Todos")){

						//BYDAN_BUSQUEDAS
						/*
						if(!FormaPagoPuntoVentaJInternalFrame.ISBINDING_MANUAL) {
						} else {
							this.jComboBoxid_tipo_pago_tarjetaFK_IdTipoPagoTarjetaFormaPagoPuntoVenta.removeAllItems();

							for(TipoPagoTarjeta tipopagotarjeta:this.tipopagotarjetasForeignKey) {
								this.jComboBoxid_tipo_pago_tarjetaFK_IdTipoPagoTarjetaFormaPagoPuntoVenta.addItem(tipopagotarjeta);
							}
						}

						if(!FormaPagoPuntoVentaJInternalFrame.ISBINDING_MANUAL) {
						}

						*/
					}

				}

			}  catch(Exception e) {
				throw e;
			}
		}

		@SuppressWarnings({ "unchecked", "rawtypes" })
		public void cargarCombosFrameConexionsForeignKey(String sFormularioTipoBusqueda)throws Exception {
			try {

				JComboBoxBinding jComboBoxBindingConexion=null;

				if(sFormularioTipoBusqueda.equals("Formulario") || sFormularioTipoBusqueda.equals("Todos")){

					if(!FormaPagoPuntoVentaJInternalFrame.ISBINDING_MANUAL) {
					} else {
						if(this.jInternalFrameDetalleFormFormaPagoPuntoVenta!=null) { 
							this.jInternalFrameDetalleFormFormaPagoPuntoVenta.jComboBoxid_conexionFormaPagoPuntoVenta.removeAllItems();

							for(Conexion conexion:this.conexionsForeignKey) {
								this.jInternalFrameDetalleFormFormaPagoPuntoVenta.jComboBoxid_conexionFormaPagoPuntoVenta.addItem(conexion);
							}
						}
					}

					if(this.jInternalFrameDetalleFormFormaPagoPuntoVenta!=null) { 
					}

					if(!FormaPagoPuntoVentaJInternalFrame.ISBINDING_MANUAL) {
					}
				}


				if(!this.conCargarMinimo) {

					if(sFormularioTipoBusqueda.equals("FK_IdConexion") || sFormularioTipoBusqueda.equals("Todos")){

						//BYDAN_BUSQUEDAS
						/*
						if(!FormaPagoPuntoVentaJInternalFrame.ISBINDING_MANUAL) {
						} else {
							this.jComboBoxid_conexionFK_IdConexionFormaPagoPuntoVenta.removeAllItems();

							for(Conexion conexion:this.conexionsForeignKey) {
								this.jComboBoxid_conexionFK_IdConexionFormaPagoPuntoVenta.addItem(conexion);
							}
						}

						if(!FormaPagoPuntoVentaJInternalFrame.ISBINDING_MANUAL) {
						}

						*/
					}

				}

			}  catch(Exception e) {
				throw e;
			}
		}

		@SuppressWarnings({ "unchecked", "rawtypes" })
		public void cargarCombosFrameMessForeignKey(String sFormularioTipoBusqueda)throws Exception {
			try {

				JComboBoxBinding jComboBoxBindingMes=null;

				if(sFormularioTipoBusqueda.equals("Formulario") || sFormularioTipoBusqueda.equals("Todos")){

					if(!FormaPagoPuntoVentaJInternalFrame.ISBINDING_MANUAL) {
					} else {
						if(this.jInternalFrameDetalleFormFormaPagoPuntoVenta!=null) { 
							this.jInternalFrameDetalleFormFormaPagoPuntoVenta.jComboBoxid_mesFormaPagoPuntoVenta.removeAllItems();

							for(Mes mes:this.messForeignKey) {
								this.jInternalFrameDetalleFormFormaPagoPuntoVenta.jComboBoxid_mesFormaPagoPuntoVenta.addItem(mes);
							}
						}
					}

					if(this.jInternalFrameDetalleFormFormaPagoPuntoVenta!=null) { 
					}

					if(!FormaPagoPuntoVentaJInternalFrame.ISBINDING_MANUAL) {
					}
				}


				if(!this.conCargarMinimo) {


				}

			}  catch(Exception e) {
				throw e;
			}
		}

		@SuppressWarnings({ "unchecked", "rawtypes" })
		public void cargarCombosFrameAniosForeignKey(String sFormularioTipoBusqueda)throws Exception {
			try {

				JComboBoxBinding jComboBoxBindingAnio=null;

				if(sFormularioTipoBusqueda.equals("Formulario") || sFormularioTipoBusqueda.equals("Todos")){

					if(!FormaPagoPuntoVentaJInternalFrame.ISBINDING_MANUAL) {
					} else {
						if(this.jInternalFrameDetalleFormFormaPagoPuntoVenta!=null) { 
							this.jInternalFrameDetalleFormFormaPagoPuntoVenta.jComboBoxid_anioFormaPagoPuntoVenta.removeAllItems();

							for(Anio anio:this.aniosForeignKey) {
								this.jInternalFrameDetalleFormFormaPagoPuntoVenta.jComboBoxid_anioFormaPagoPuntoVenta.addItem(anio);
							}
						}
					}

					if(this.jInternalFrameDetalleFormFormaPagoPuntoVenta!=null) { 
					}

					if(!FormaPagoPuntoVentaJInternalFrame.ISBINDING_MANUAL) {
					}
				}


				if(!this.conCargarMinimo) {


				}

			}  catch(Exception e) {
				throw e;
			}
		}

		@SuppressWarnings({ "unchecked", "rawtypes" })
		public void cargarCombosFrameCuentaContablesForeignKey(String sFormularioTipoBusqueda)throws Exception {
			try {

				JComboBoxBinding jComboBoxBindingCuentaContable=null;

				if(sFormularioTipoBusqueda.equals("Formulario") || sFormularioTipoBusqueda.equals("Todos")){

					if(!FormaPagoPuntoVentaJInternalFrame.ISBINDING_MANUAL) {
					} else {
						if(this.jInternalFrameDetalleFormFormaPagoPuntoVenta!=null) { 
							this.jInternalFrameDetalleFormFormaPagoPuntoVenta.jComboBoxid_cuenta_contableFormaPagoPuntoVenta.removeAllItems();

							for(CuentaContable cuentacontable:this.cuentacontablesForeignKey) {
								this.jInternalFrameDetalleFormFormaPagoPuntoVenta.jComboBoxid_cuenta_contableFormaPagoPuntoVenta.addItem(cuentacontable);
							}
						}
					}

					if(this.jInternalFrameDetalleFormFormaPagoPuntoVenta!=null) { 
					}

					if(!FormaPagoPuntoVentaJInternalFrame.ISBINDING_MANUAL) {
					}
				}


				if(!this.conCargarMinimo) {

					if(sFormularioTipoBusqueda.equals("FK_IdCuentaContable") || sFormularioTipoBusqueda.equals("Todos")){

						//BYDAN_BUSQUEDAS
						/*
						if(!FormaPagoPuntoVentaJInternalFrame.ISBINDING_MANUAL) {
						} else {
							this.jComboBoxid_cuenta_contableFK_IdCuentaContableFormaPagoPuntoVenta.removeAllItems();

							for(CuentaContable cuentacontable:this.cuentacontablesForeignKey) {
								this.jComboBoxid_cuenta_contableFK_IdCuentaContableFormaPagoPuntoVenta.addItem(cuentacontable);
							}
						}

						if(!FormaPagoPuntoVentaJInternalFrame.ISBINDING_MANUAL) {
						}

						*/
					}

				}

			}  catch(Exception e) {
				throw e;
			}
		}

		@SuppressWarnings({ "unchecked", "rawtypes" })
		public void cargarCombosFrameAsientoContablesForeignKey(String sFormularioTipoBusqueda)throws Exception {
			try {

				JComboBoxBinding jComboBoxBindingAsientoContable=null;

				if(sFormularioTipoBusqueda.equals("Formulario") || sFormularioTipoBusqueda.equals("Todos")){

					if(!FormaPagoPuntoVentaJInternalFrame.ISBINDING_MANUAL) {
					} else {
						if(this.jInternalFrameDetalleFormFormaPagoPuntoVenta!=null) { 
							this.jInternalFrameDetalleFormFormaPagoPuntoVenta.jComboBoxid_asiento_contableFormaPagoPuntoVenta.removeAllItems();

							for(AsientoContable asientocontable:this.asientocontablesForeignKey) {
								this.jInternalFrameDetalleFormFormaPagoPuntoVenta.jComboBoxid_asiento_contableFormaPagoPuntoVenta.addItem(asientocontable);
							}
						}
					}

					if(this.jInternalFrameDetalleFormFormaPagoPuntoVenta!=null) { 
					}

					if(!FormaPagoPuntoVentaJInternalFrame.ISBINDING_MANUAL) {
					}
				}


				if(!this.conCargarMinimo) {

					if(sFormularioTipoBusqueda.equals("FK_IdAsientoContable") || sFormularioTipoBusqueda.equals("Todos")){

						//BYDAN_BUSQUEDAS
						/*
						if(!FormaPagoPuntoVentaJInternalFrame.ISBINDING_MANUAL) {
						} else {
							this.jComboBoxid_asiento_contableFK_IdAsientoContableFormaPagoPuntoVenta.removeAllItems();

							for(AsientoContable asientocontable:this.asientocontablesForeignKey) {
								this.jComboBoxid_asiento_contableFK_IdAsientoContableFormaPagoPuntoVenta.addItem(asientocontable);
							}
						}

						if(!FormaPagoPuntoVentaJInternalFrame.ISBINDING_MANUAL) {
						}

						*/
					}

				}

			}  catch(Exception e) {
				throw e;
			}
		}

	


		public void setSelectedItemCombosFrameEmpresaForeignKey(Empresa empresa,int iIndexSelected,Boolean conSelectedIndex,Boolean conFormulario,Boolean conBusqueda)throws Exception {
			try {

				if(conFormulario) {
					if(!conSelectedIndex) {
						if(this.jInternalFrameDetalleFormFormaPagoPuntoVenta!=null) {
							this.jInternalFrameDetalleFormFormaPagoPuntoVenta.jComboBoxid_empresaFormaPagoPuntoVenta.setSelectedItem(empresa);
						}
					} else {
						if(this.jInternalFrameDetalleFormFormaPagoPuntoVenta!=null) {
							this.jInternalFrameDetalleFormFormaPagoPuntoVenta.jComboBoxid_empresaFormaPagoPuntoVenta.setSelectedIndex(iIndexSelected);
						}
					}
				}


				if(!this.conCargarMinimo) {
					if(conBusqueda) {

					//BYDAN_BUSQUEDAS
					/*

					*/					}
				}
			} catch(Exception e) {
				throw e;
			}
		}

		public void setSelectedItemCombosFrameSucursalForeignKey(Sucursal sucursal,int iIndexSelected,Boolean conSelectedIndex,Boolean conFormulario,Boolean conBusqueda)throws Exception {
			try {

				if(conFormulario) {
					if(!conSelectedIndex) {
						if(this.jInternalFrameDetalleFormFormaPagoPuntoVenta!=null) {
							this.jInternalFrameDetalleFormFormaPagoPuntoVenta.jComboBoxid_sucursalFormaPagoPuntoVenta.setSelectedItem(sucursal);
						}
					} else {
						if(this.jInternalFrameDetalleFormFormaPagoPuntoVenta!=null) {
							this.jInternalFrameDetalleFormFormaPagoPuntoVenta.jComboBoxid_sucursalFormaPagoPuntoVenta.setSelectedIndex(iIndexSelected);
						}
					}
				}


				if(!this.conCargarMinimo) {
					if(conBusqueda) {

					//BYDAN_BUSQUEDAS
					/*

					*/					}
				}
			} catch(Exception e) {
				throw e;
			}
		}

		public void setSelectedItemCombosFrameEjercicioForeignKey(Ejercicio ejercicio,int iIndexSelected,Boolean conSelectedIndex,Boolean conFormulario,Boolean conBusqueda)throws Exception {
			try {

				if(conFormulario) {
					if(!conSelectedIndex) {
						if(this.jInternalFrameDetalleFormFormaPagoPuntoVenta!=null) {
							this.jInternalFrameDetalleFormFormaPagoPuntoVenta.jComboBoxid_ejercicioFormaPagoPuntoVenta.setSelectedItem(ejercicio);
						}
					} else {
						if(this.jInternalFrameDetalleFormFormaPagoPuntoVenta!=null) {
							this.jInternalFrameDetalleFormFormaPagoPuntoVenta.jComboBoxid_ejercicioFormaPagoPuntoVenta.setSelectedIndex(iIndexSelected);
						}
					}
				}


				if(!this.conCargarMinimo) {
					if(conBusqueda) {

					//BYDAN_BUSQUEDAS
					/*

					*/					}
				}
			} catch(Exception e) {
				throw e;
			}
		}

		public void setSelectedItemCombosFramePeriodoForeignKey(Periodo periodo,int iIndexSelected,Boolean conSelectedIndex,Boolean conFormulario,Boolean conBusqueda)throws Exception {
			try {

				if(conFormulario) {
					if(!conSelectedIndex) {
						if(this.jInternalFrameDetalleFormFormaPagoPuntoVenta!=null) {
							this.jInternalFrameDetalleFormFormaPagoPuntoVenta.jComboBoxid_periodoFormaPagoPuntoVenta.setSelectedItem(periodo);
						}
					} else {
						if(this.jInternalFrameDetalleFormFormaPagoPuntoVenta!=null) {
							this.jInternalFrameDetalleFormFormaPagoPuntoVenta.jComboBoxid_periodoFormaPagoPuntoVenta.setSelectedIndex(iIndexSelected);
						}
					}
				}


				if(!this.conCargarMinimo) {
					if(conBusqueda) {

					//BYDAN_BUSQUEDAS
					/*

					*/					}
				}
			} catch(Exception e) {
				throw e;
			}
		}

		public void setSelectedItemCombosFrameFacturaPuntoVentaForeignKey(FacturaPuntoVenta facturapuntoventa,int iIndexSelected,Boolean conSelectedIndex,Boolean conFormulario,Boolean conBusqueda)throws Exception {
			try {

				if(conFormulario) {
					if(!conSelectedIndex) {
						if(this.jInternalFrameDetalleFormFormaPagoPuntoVenta!=null) {
							this.jInternalFrameDetalleFormFormaPagoPuntoVenta.jComboBoxid_factura_punto_ventaFormaPagoPuntoVenta.setSelectedItem(facturapuntoventa);
						}
					} else {
						if(this.jInternalFrameDetalleFormFormaPagoPuntoVenta!=null) {
							this.jInternalFrameDetalleFormFormaPagoPuntoVenta.jComboBoxid_factura_punto_ventaFormaPagoPuntoVenta.setSelectedIndex(iIndexSelected);
						}
					}
				}


				if(!this.conCargarMinimo) {
					if(conBusqueda) {

					//BYDAN_BUSQUEDAS
					/*
						if(!conSelectedIndex) {
							this.jComboBoxid_factura_punto_ventaFK_IdFacturaPuntoVentaFormaPagoPuntoVenta.setSelectedItem(facturapuntoventa);
						} else {
							this.jComboBoxid_factura_punto_ventaFK_IdFacturaPuntoVentaFormaPagoPuntoVenta.setSelectedIndex(iIndexSelected);
						}

					*/					}
				}
			} catch(Exception e) {
				throw e;
			}
		}

		public void setSelectedItemCombosFrameTipoFormaPagoForeignKey(TipoFormaPago tipoformapago,int iIndexSelected,Boolean conSelectedIndex,Boolean conFormulario,Boolean conBusqueda)throws Exception {
			try {

				if(conFormulario) {
					if(!conSelectedIndex) {
						if(this.jInternalFrameDetalleFormFormaPagoPuntoVenta!=null) {
							this.jInternalFrameDetalleFormFormaPagoPuntoVenta.jComboBoxid_tipo_forma_pagoFormaPagoPuntoVenta.setSelectedItem(tipoformapago);
						}
					} else {
						if(this.jInternalFrameDetalleFormFormaPagoPuntoVenta!=null) {
							this.jInternalFrameDetalleFormFormaPagoPuntoVenta.jComboBoxid_tipo_forma_pagoFormaPagoPuntoVenta.setSelectedIndex(iIndexSelected);
						}
					}
				}


				if(!this.conCargarMinimo) {
					if(conBusqueda) {

					//BYDAN_BUSQUEDAS
					/*
						if(!conSelectedIndex) {
							this.jComboBoxid_tipo_forma_pagoFK_IdTipoFormaPagoFormaPagoPuntoVenta.setSelectedItem(tipoformapago);
						} else {
							this.jComboBoxid_tipo_forma_pagoFK_IdTipoFormaPagoFormaPagoPuntoVenta.setSelectedIndex(iIndexSelected);
						}

					*/					}
				}
			} catch(Exception e) {
				throw e;
			}
		}

		public void setSelectedItemCombosFrameBancoForeignKey(Banco banco,int iIndexSelected,Boolean conSelectedIndex,Boolean conFormulario,Boolean conBusqueda)throws Exception {
			try {

				if(conFormulario) {
					if(!conSelectedIndex) {
						if(this.jInternalFrameDetalleFormFormaPagoPuntoVenta!=null) {
							this.jInternalFrameDetalleFormFormaPagoPuntoVenta.jComboBoxid_bancoFormaPagoPuntoVenta.setSelectedItem(banco);
						}
					} else {
						if(this.jInternalFrameDetalleFormFormaPagoPuntoVenta!=null) {
							this.jInternalFrameDetalleFormFormaPagoPuntoVenta.jComboBoxid_bancoFormaPagoPuntoVenta.setSelectedIndex(iIndexSelected);
						}
					}
				}


				if(!this.conCargarMinimo) {
					if(conBusqueda) {

					//BYDAN_BUSQUEDAS
					/*
						if(!conSelectedIndex) {
							this.jComboBoxid_bancoFK_IdBancoFormaPagoPuntoVenta.setSelectedItem(banco);
						} else {
							this.jComboBoxid_bancoFK_IdBancoFormaPagoPuntoVenta.setSelectedIndex(iIndexSelected);
						}

					*/					}
				}
			} catch(Exception e) {
				throw e;
			}
		}

		public void setSelectedItemCombosFrameCuentaBancoPunVenForeignKey(CuentaBancoPunVen cuentabancopunven,int iIndexSelected,Boolean conSelectedIndex,Boolean conFormulario,Boolean conBusqueda)throws Exception {
			try {

				if(conFormulario) {
					if(!conSelectedIndex) {
						if(this.jInternalFrameDetalleFormFormaPagoPuntoVenta!=null) {
							this.jInternalFrameDetalleFormFormaPagoPuntoVenta.jComboBoxid_cuenta_banco_pun_venFormaPagoPuntoVenta.setSelectedItem(cuentabancopunven);
						}
					} else {
						if(this.jInternalFrameDetalleFormFormaPagoPuntoVenta!=null) {
							this.jInternalFrameDetalleFormFormaPagoPuntoVenta.jComboBoxid_cuenta_banco_pun_venFormaPagoPuntoVenta.setSelectedIndex(iIndexSelected);
						}
					}
				}


				if(!this.conCargarMinimo) {
					if(conBusqueda) {

					//BYDAN_BUSQUEDAS
					/*
						if(!conSelectedIndex) {
							this.jComboBoxid_cuenta_banco_pun_venFK_IdCuentaBancoPunVenFormaPagoPuntoVenta.setSelectedItem(cuentabancopunven);
						} else {
							this.jComboBoxid_cuenta_banco_pun_venFK_IdCuentaBancoPunVenFormaPagoPuntoVenta.setSelectedIndex(iIndexSelected);
						}

					*/					}
				}
			} catch(Exception e) {
				throw e;
			}
		}

		public void setSelectedItemCombosFrameTipoRiesgoChequeForeignKey(TipoRiesgoCheque tiporiesgocheque,int iIndexSelected,Boolean conSelectedIndex,Boolean conFormulario,Boolean conBusqueda)throws Exception {
			try {

				if(conFormulario) {
					if(!conSelectedIndex) {
						if(this.jInternalFrameDetalleFormFormaPagoPuntoVenta!=null) {
							this.jInternalFrameDetalleFormFormaPagoPuntoVenta.jComboBoxid_tipo_riesgo_chequeFormaPagoPuntoVenta.setSelectedItem(tiporiesgocheque);
						}
					} else {
						if(this.jInternalFrameDetalleFormFormaPagoPuntoVenta!=null) {
							this.jInternalFrameDetalleFormFormaPagoPuntoVenta.jComboBoxid_tipo_riesgo_chequeFormaPagoPuntoVenta.setSelectedIndex(iIndexSelected);
						}
					}
				}


				if(!this.conCargarMinimo) {
					if(conBusqueda) {

					//BYDAN_BUSQUEDAS
					/*
						if(!conSelectedIndex) {
							this.jComboBoxid_tipo_riesgo_chequeFK_IdTipoRiesgoChequeFormaPagoPuntoVenta.setSelectedItem(tiporiesgocheque);
						} else {
							this.jComboBoxid_tipo_riesgo_chequeFK_IdTipoRiesgoChequeFormaPagoPuntoVenta.setSelectedIndex(iIndexSelected);
						}

					*/					}
				}
			} catch(Exception e) {
				throw e;
			}
		}

		public void setSelectedItemCombosFrameBancoTarjetaForeignKey(Banco bancotarjeta,int iIndexSelected,Boolean conSelectedIndex,Boolean conFormulario,Boolean conBusqueda)throws Exception {
			try {

				if(conFormulario) {
					if(!conSelectedIndex) {
						if(this.jInternalFrameDetalleFormFormaPagoPuntoVenta!=null) {
							this.jInternalFrameDetalleFormFormaPagoPuntoVenta.jComboBoxid_banco_tarjetaFormaPagoPuntoVenta.setSelectedItem(bancotarjeta);
						}
					} else {
						if(this.jInternalFrameDetalleFormFormaPagoPuntoVenta!=null) {
							this.jInternalFrameDetalleFormFormaPagoPuntoVenta.jComboBoxid_banco_tarjetaFormaPagoPuntoVenta.setSelectedIndex(iIndexSelected);
						}
					}
				}


				if(!this.conCargarMinimo) {
					if(conBusqueda) {

					//BYDAN_BUSQUEDAS
					/*
						if(!conSelectedIndex) {
							this.jComboBoxid_banco_tarjetaFK_IdBancoTarjetaFormaPagoPuntoVenta.setSelectedItem(bancotarjeta);
						} else {
							this.jComboBoxid_banco_tarjetaFK_IdBancoTarjetaFormaPagoPuntoVenta.setSelectedIndex(iIndexSelected);
						}

					*/					}
				}
			} catch(Exception e) {
				throw e;
			}
		}

		public void setSelectedItemCombosFrameTarjetaCreditoForeignKey(TarjetaCredito tarjetacredito,int iIndexSelected,Boolean conSelectedIndex,Boolean conFormulario,Boolean conBusqueda)throws Exception {
			try {

				if(conFormulario) {
					if(!conSelectedIndex) {
						if(this.jInternalFrameDetalleFormFormaPagoPuntoVenta!=null) {
							this.jInternalFrameDetalleFormFormaPagoPuntoVenta.jComboBoxid_tarjeta_creditoFormaPagoPuntoVenta.setSelectedItem(tarjetacredito);
						}
					} else {
						if(this.jInternalFrameDetalleFormFormaPagoPuntoVenta!=null) {
							this.jInternalFrameDetalleFormFormaPagoPuntoVenta.jComboBoxid_tarjeta_creditoFormaPagoPuntoVenta.setSelectedIndex(iIndexSelected);
						}
					}
				}


				if(!this.conCargarMinimo) {
					if(conBusqueda) {

					//BYDAN_BUSQUEDAS
					/*
						if(!conSelectedIndex) {
							this.jComboBoxid_tarjeta_creditoFK_IdTarjetaCreditoFormaPagoPuntoVenta.setSelectedItem(tarjetacredito);
						} else {
							this.jComboBoxid_tarjeta_creditoFK_IdTarjetaCreditoFormaPagoPuntoVenta.setSelectedIndex(iIndexSelected);
						}

					*/					}
				}
			} catch(Exception e) {
				throw e;
			}
		}

		public void setSelectedItemCombosFrameTipoInteresTarjetaForeignKey(TipoInteresTarjeta tipointerestarjeta,int iIndexSelected,Boolean conSelectedIndex,Boolean conFormulario,Boolean conBusqueda)throws Exception {
			try {

				if(conFormulario) {
					if(!conSelectedIndex) {
						if(this.jInternalFrameDetalleFormFormaPagoPuntoVenta!=null) {
							this.jInternalFrameDetalleFormFormaPagoPuntoVenta.jComboBoxid_tipo_interes_tarjetaFormaPagoPuntoVenta.setSelectedItem(tipointerestarjeta);
						}
					} else {
						if(this.jInternalFrameDetalleFormFormaPagoPuntoVenta!=null) {
							this.jInternalFrameDetalleFormFormaPagoPuntoVenta.jComboBoxid_tipo_interes_tarjetaFormaPagoPuntoVenta.setSelectedIndex(iIndexSelected);
						}
					}
				}


				if(!this.conCargarMinimo) {
					if(conBusqueda) {

					//BYDAN_BUSQUEDAS
					/*
						if(!conSelectedIndex) {
							this.jComboBoxid_tipo_interes_tarjetaFK_IdTipoInteresTarjetaFormaPagoPuntoVenta.setSelectedItem(tipointerestarjeta);
						} else {
							this.jComboBoxid_tipo_interes_tarjetaFK_IdTipoInteresTarjetaFormaPagoPuntoVenta.setSelectedIndex(iIndexSelected);
						}

					*/					}
				}
			} catch(Exception e) {
				throw e;
			}
		}

		public void setSelectedItemCombosFrameTipoPagoTarjetaForeignKey(TipoPagoTarjeta tipopagotarjeta,int iIndexSelected,Boolean conSelectedIndex,Boolean conFormulario,Boolean conBusqueda)throws Exception {
			try {

				if(conFormulario) {
					if(!conSelectedIndex) {
						if(this.jInternalFrameDetalleFormFormaPagoPuntoVenta!=null) {
							this.jInternalFrameDetalleFormFormaPagoPuntoVenta.jComboBoxid_tipo_pago_tarjetaFormaPagoPuntoVenta.setSelectedItem(tipopagotarjeta);
						}
					} else {
						if(this.jInternalFrameDetalleFormFormaPagoPuntoVenta!=null) {
							this.jInternalFrameDetalleFormFormaPagoPuntoVenta.jComboBoxid_tipo_pago_tarjetaFormaPagoPuntoVenta.setSelectedIndex(iIndexSelected);
						}
					}
				}


				if(!this.conCargarMinimo) {
					if(conBusqueda) {

					//BYDAN_BUSQUEDAS
					/*
						if(!conSelectedIndex) {
							this.jComboBoxid_tipo_pago_tarjetaFK_IdTipoPagoTarjetaFormaPagoPuntoVenta.setSelectedItem(tipopagotarjeta);
						} else {
							this.jComboBoxid_tipo_pago_tarjetaFK_IdTipoPagoTarjetaFormaPagoPuntoVenta.setSelectedIndex(iIndexSelected);
						}

					*/					}
				}
			} catch(Exception e) {
				throw e;
			}
		}

		public void setSelectedItemCombosFrameConexionForeignKey(Conexion conexion,int iIndexSelected,Boolean conSelectedIndex,Boolean conFormulario,Boolean conBusqueda)throws Exception {
			try {

				if(conFormulario) {
					if(!conSelectedIndex) {
						if(this.jInternalFrameDetalleFormFormaPagoPuntoVenta!=null) {
							this.jInternalFrameDetalleFormFormaPagoPuntoVenta.jComboBoxid_conexionFormaPagoPuntoVenta.setSelectedItem(conexion);
						}
					} else {
						if(this.jInternalFrameDetalleFormFormaPagoPuntoVenta!=null) {
							this.jInternalFrameDetalleFormFormaPagoPuntoVenta.jComboBoxid_conexionFormaPagoPuntoVenta.setSelectedIndex(iIndexSelected);
						}
					}
				}


				if(!this.conCargarMinimo) {
					if(conBusqueda) {

					//BYDAN_BUSQUEDAS
					/*
						if(!conSelectedIndex) {
							this.jComboBoxid_conexionFK_IdConexionFormaPagoPuntoVenta.setSelectedItem(conexion);
						} else {
							this.jComboBoxid_conexionFK_IdConexionFormaPagoPuntoVenta.setSelectedIndex(iIndexSelected);
						}

					*/					}
				}
			} catch(Exception e) {
				throw e;
			}
		}

		public void setSelectedItemCombosFrameMesForeignKey(Mes mes,int iIndexSelected,Boolean conSelectedIndex,Boolean conFormulario,Boolean conBusqueda)throws Exception {
			try {

				if(conFormulario) {
					if(!conSelectedIndex) {
						if(this.jInternalFrameDetalleFormFormaPagoPuntoVenta!=null) {
							this.jInternalFrameDetalleFormFormaPagoPuntoVenta.jComboBoxid_mesFormaPagoPuntoVenta.setSelectedItem(mes);
						}
					} else {
						if(this.jInternalFrameDetalleFormFormaPagoPuntoVenta!=null) {
							this.jInternalFrameDetalleFormFormaPagoPuntoVenta.jComboBoxid_mesFormaPagoPuntoVenta.setSelectedIndex(iIndexSelected);
						}
					}
				}


				if(!this.conCargarMinimo) {
					if(conBusqueda) {

					//BYDAN_BUSQUEDAS
					/*

					*/					}
				}
			} catch(Exception e) {
				throw e;
			}
		}

		public void setSelectedItemCombosFrameAnioForeignKey(Anio anio,int iIndexSelected,Boolean conSelectedIndex,Boolean conFormulario,Boolean conBusqueda)throws Exception {
			try {

				if(conFormulario) {
					if(!conSelectedIndex) {
						if(this.jInternalFrameDetalleFormFormaPagoPuntoVenta!=null) {
							this.jInternalFrameDetalleFormFormaPagoPuntoVenta.jComboBoxid_anioFormaPagoPuntoVenta.setSelectedItem(anio);
						}
					} else {
						if(this.jInternalFrameDetalleFormFormaPagoPuntoVenta!=null) {
							this.jInternalFrameDetalleFormFormaPagoPuntoVenta.jComboBoxid_anioFormaPagoPuntoVenta.setSelectedIndex(iIndexSelected);
						}
					}
				}


				if(!this.conCargarMinimo) {
					if(conBusqueda) {

					//BYDAN_BUSQUEDAS
					/*

					*/					}
				}
			} catch(Exception e) {
				throw e;
			}
		}

		public void setSelectedItemCombosFrameCuentaContableForeignKey(CuentaContable cuentacontable,int iIndexSelected,Boolean conSelectedIndex,Boolean conFormulario,Boolean conBusqueda)throws Exception {
			try {

				if(conFormulario) {
					if(!conSelectedIndex) {
						if(this.jInternalFrameDetalleFormFormaPagoPuntoVenta!=null) {
							this.jInternalFrameDetalleFormFormaPagoPuntoVenta.jComboBoxid_cuenta_contableFormaPagoPuntoVenta.setSelectedItem(cuentacontable);
						}
					} else {
						if(this.jInternalFrameDetalleFormFormaPagoPuntoVenta!=null) {
							this.jInternalFrameDetalleFormFormaPagoPuntoVenta.jComboBoxid_cuenta_contableFormaPagoPuntoVenta.setSelectedIndex(iIndexSelected);
						}
					}
				}


				if(!this.conCargarMinimo) {
					if(conBusqueda) {

					//BYDAN_BUSQUEDAS
					/*
						if(!conSelectedIndex) {
							this.jComboBoxid_cuenta_contableFK_IdCuentaContableFormaPagoPuntoVenta.setSelectedItem(cuentacontable);
						} else {
							this.jComboBoxid_cuenta_contableFK_IdCuentaContableFormaPagoPuntoVenta.setSelectedIndex(iIndexSelected);
						}

					*/					}
				}
			} catch(Exception e) {
				throw e;
			}
		}

		public void setSelectedItemCombosFrameAsientoContableForeignKey(AsientoContable asientocontable,int iIndexSelected,Boolean conSelectedIndex,Boolean conFormulario,Boolean conBusqueda)throws Exception {
			try {

				if(conFormulario) {
					if(!conSelectedIndex) {
						if(this.jInternalFrameDetalleFormFormaPagoPuntoVenta!=null) {
							this.jInternalFrameDetalleFormFormaPagoPuntoVenta.jComboBoxid_asiento_contableFormaPagoPuntoVenta.setSelectedItem(asientocontable);
						}
					} else {
						if(this.jInternalFrameDetalleFormFormaPagoPuntoVenta!=null) {
							this.jInternalFrameDetalleFormFormaPagoPuntoVenta.jComboBoxid_asiento_contableFormaPagoPuntoVenta.setSelectedIndex(iIndexSelected);
						}
					}
				}


				if(!this.conCargarMinimo) {
					if(conBusqueda) {

					//BYDAN_BUSQUEDAS
					/*
						if(!conSelectedIndex) {
							this.jComboBoxid_asiento_contableFK_IdAsientoContableFormaPagoPuntoVenta.setSelectedItem(asientocontable);
						} else {
							this.jComboBoxid_asiento_contableFK_IdAsientoContableFormaPagoPuntoVenta.setSelectedIndex(iIndexSelected);
						}

					*/					}
				}
			} catch(Exception e) {
				throw e;
			}
		}

	


	
	public void refrescarForeignKeysDescripcionesFormaPagoPuntoVenta() throws Exception {
		//SI FUNCIONA DEEPLOAD ESTO VA AL ULTIMO
		if(Constantes.ISUSAEJBLOGICLAYER) {
			FormaPagoPuntoVentaConstantesFunciones.refrescarForeignKeysDescripcionesFormaPagoPuntoVenta(this.formapagopuntoventaLogic.getFormaPagoPuntoVentas());
		} else if(Constantes.ISUSAEJBREMOTE || Constantes.ISUSAEJBHOME) {
			FormaPagoPuntoVentaConstantesFunciones.refrescarForeignKeysDescripcionesFormaPagoPuntoVenta(this.formapagopuntoventas);
		}
		
		/*
		ArrayList<Classe> classes=new ArrayList<Classe>();
		
		classes.add(new Classe(Empresa.class));
		classes.add(new Classe(Sucursal.class));
		classes.add(new Classe(Ejercicio.class));
		classes.add(new Classe(Periodo.class));
		classes.add(new Classe(FacturaPuntoVenta.class));
		classes.add(new Classe(TipoFormaPago.class));
		classes.add(new Classe(Banco.class));
		classes.add(new Classe(CuentaBancoPunVen.class));
		classes.add(new Classe(TipoRiesgoCheque.class));
		classes.add(new Classe(TarjetaCredito.class));
		classes.add(new Classe(TipoInteresTarjeta.class));
		classes.add(new Classe(TipoPagoTarjeta.class));
		classes.add(new Classe(Conexion.class));
		classes.add(new Classe(Mes.class));
		classes.add(new Classe(Anio.class));
		classes.add(new Classe(CuentaContable.class));
		classes.add(new Classe(AsientoContable.class));
			
		if(Constantes.ISUSAEJBLOGICLAYER) {
			//USA LOS OBJETOS DE LOGIC DIRECTAMENTE
			//formapagopuntoventaLogic.setFormaPagoPuntoVentas(this.formapagopuntoventas);
			formapagopuntoventaLogic.deepLoadsWithConnection(false, DeepLoadType.INCLUDE, classes,"");
	
		} else if(Constantes.ISUSAEJBREMOTE) {
		} else if(Constantes.ISUSAEJBHOME) {
		}
		*/				
	}	
	
	
	
	public Integer getiNumeroPaginacion() {
		return iNumeroPaginacion;
	}

	public void setiNumeroPaginacion(Integer iNumeroPaginacion) {
		this.iNumeroPaginacion= iNumeroPaginacion;
	}
	
	public Integer getiNumeroPaginacionPagina() {
		return iNumeroPaginacionPagina;
	}

	public void setiNumeroPaginacionPagina(Integer iNumeroPaginacionPagina) {
		this.iNumeroPaginacionPagina= iNumeroPaginacionPagina;
	}
	
	
	public Boolean getIsSeleccionarTodos() {
		return this.isSeleccionarTodos;
	}

	public void setIsSeleccionarTodos(Boolean isSeleccionarTodos) {
		this.isSeleccionarTodos= isSeleccionarTodos;
	}
	
	public Boolean getEsControlTabla() {
		return this.esControlTabla;
	}

	public void setEsControlTabla(Boolean esControlTabla) {
		this.esControlTabla= esControlTabla;
	}
	
	public Boolean getIsSeleccionados() {
		return this.isSeleccionados;
	}

	public void setIsSeleccionados(Boolean isSeleccionados) {
		this.isSeleccionados= isSeleccionados;
	}
	
	public Boolean getIsPostAccionNuevo() {
		return this.isPostAccionNuevo;
	}

	public void setIsPostAccionNuevo(Boolean isPostAccionNuevo) {
		this.isPostAccionNuevo= isPostAccionNuevo;
	}
	
	public Boolean getIsPostAccionSinCerrar() {
		return this.isPostAccionSinCerrar;
	}

	public void setIsPostAccionSinCerrar(Boolean isPostAccionSinCerrar) {
		this.isPostAccionSinCerrar= isPostAccionSinCerrar;
	}
	
	public Boolean getIsPostAccionSinMensaje() {
		return this.isPostAccionSinMensaje;
	}

	public void setIsPostAccionSinMensaje(Boolean isPostAccionSinMensaje) {
		this.isPostAccionSinMensaje= isPostAccionSinMensaje;
	}
	
	public Boolean getConGraficoReporte() {
		return this.conGraficoReporte;
	}

	public void setConGraficoReporte(Boolean conGraficoReporte) {
		this.conGraficoReporte= conGraficoReporte;
	}
	
	
	public ArrayList<Reporte> gettiposArchivosReportes() {
		return this.tiposArchivosReportes;
	}
	
	public void settiposArchivosReportes(ArrayList<Reporte> tiposArchivosReportes) {
		this.tiposArchivosReportes = tiposArchivosReportes;
	}
	
	//TIPOS ARCHIVOS DINAMICOS
	public ArrayList<Reporte> gettiposArchivosReportesDinamico() {
		return this.tiposArchivosReportesDinamico;
	}
	
	public void settiposArchivosReportesDinamico(ArrayList<Reporte> tiposArchivosReportesDinamico) {
		this.tiposArchivosReportesDinamico = tiposArchivosReportesDinamico;
	}
	
	//TIPOS REPORTES
	public ArrayList<Reporte> gettiposReportes() {
		return this.tiposReportes;
	}
	
	public void settiposReportes(ArrayList<Reporte> tiposReportes) {
		this.tiposReportes = tiposReportes;
	}
	
	//TIPOS REPORTES
	public ArrayList<Reporte> gettiposReportesDinamico() {
		return this.tiposReportesDinamico;
	}
	
	public void settiposReportesDinamico(ArrayList<Reporte> tiposReportesDinamico) {
		this.tiposReportesDinamico = tiposReportesDinamico;
	}
	
	//TIPOS GRAFICOS REPORTES
	public ArrayList<Reporte> gettiposGraficosReportes() {
		return this.tiposGraficosReportes;
	}
	
	public void settiposGraficosReportes(ArrayList<Reporte> tiposGraficosReportes) {
		this.tiposGraficosReportes = tiposGraficosReportes;
	}
	
	public ArrayList<Reporte> gettiposPaginacion() {
		return this.tiposPaginacion;
	}
	
	public void settiposPaginacion(ArrayList<Reporte> tiposPaginacion) {
		this.tiposPaginacion = tiposPaginacion;
	}
	
	public ArrayList<Reporte> gettiposRelaciones() {
		return this.tiposRelaciones;
	}
	
	public void settiposRelaciones(ArrayList<Reporte> tiposRelaciones) {
		this.tiposRelaciones= tiposRelaciones;
	}
	
	public ArrayList<Reporte> gettiposAcciones() {
		return this.tiposAcciones;
	}
	
	public void settiposAcciones(ArrayList<Reporte> tiposAcciones) {
		this.tiposAcciones = tiposAcciones;
	}
	
	public ArrayList<Reporte> gettiposAccionesFormulario() {
		return this.tiposAccionesFormulario;
	}
	
	public void settiposAccionesFormulario(ArrayList<Reporte> tiposAccionesFormulario) {
		this.tiposAccionesFormulario = tiposAccionesFormulario;
	}
	
	public ArrayList<Reporte> gettiposSeleccionar() {
		return this.tiposSeleccionar;
	}
	
	public void settiposSeleccionar(ArrayList<Reporte> tiposSeleccionar) {
		this.tiposSeleccionar = tiposSeleccionar;
	}
	
	public ArrayList<Reporte> gettiposColumnasSelect() {
		return this.tiposColumnasSelect;
	}
	
	public void settiposColumnasSelect(ArrayList<Reporte> tiposColumnasSelect) {
		this.tiposColumnasSelect = tiposColumnasSelect;
	}
		
	public ArrayList<Reporte> gettiposRelacionesSelect() {
		return this.tiposRelacionesSelect;
	}
	
	public void settiposRelacionesSelect(ArrayList<Reporte> tiposRelacionesSelect) {
		this.tiposRelacionesSelect = tiposRelacionesSelect;
	}
	
	public Long getIIdUsuarioSesion() {
		return lIdUsuarioSesion;
	}

	public void setIIdUsuarioSesion(Long lIdUsuarioSesion) {
		this.lIdUsuarioSesion = lIdUsuarioSesion;
	}
	
	
	public List<Accion> getAccions() {
		return this.accions;
	}

	public void setAccions(List<Accion> accions) {
		this.accions = accions;
	}
	
	public List<Accion> getAccionsFormulario() {
		return this.accionsFormulario;
	}

	public void setAccionsFormulario(List<Accion> accionsFormulario) {
		this.accionsFormulario = accionsFormulario;
	}
	
	public String getsAccionMantenimiento() {
		return sAccionMantenimiento;
	}

	public void setsAccionMantenimiento(String sAccionMantenimiento) {
		this.sAccionMantenimiento = sAccionMantenimiento;
	}

	public String getsAccionBusqueda() {
		return sAccionBusqueda;
	}

	public void setsAccionBusqueda(String sAccionBusqueda) {
		this.sAccionBusqueda = sAccionBusqueda;
	}

	public String getsAccionAdicional() {
		return sAccionAdicional;
	}

	public void setsAccionAdicional(String sAccionAdicional) {
		this.sAccionAdicional = sAccionAdicional;
	}

	public String getsUltimaBusqueda() {
		return sUltimaBusqueda;
	}

	public void setsUltimaBusqueda(String sUltimaBusqueda) {
		this.sUltimaBusqueda = sUltimaBusqueda;
	}
	
	public String getsTipoArchivoReporte() {
		return sTipoArchivoReporte;
	}

	public void setsTipoArchivoReporte(String sTipoArchivoReporte) {
		this.sTipoArchivoReporte = sTipoArchivoReporte;
	}
	
	public String getsTipoArchivoReporteDinamico() {
		return sTipoArchivoReporteDinamico;
	}

	public void setsTipoArchivoReporteDinamico(String sTipoArchivoReporteDinamico) {
		this.sTipoArchivoReporteDinamico = sTipoArchivoReporteDinamico;
	}
	
	public String getsTipoReporte() {
		return sTipoReporte;
	}

	public void setsTipoReporte(String sTipoReporte) {
		this.sTipoReporte = sTipoReporte;
	}
	
	public String getsTipoReporteDinamico() {
		return sTipoReporteDinamico;
	}

	public void setsTipoReporteDinamico(String sTipoReporteDinamico) {
		this.sTipoReporteDinamico = sTipoReporteDinamico;
	}
	
	public String getsTipoGraficoReporte() {
		return sTipoGraficoReporte;
	}

	public void setsTipoGraficoReporte(String sTipoGraficoReporte) {
		this.sTipoGraficoReporte = sTipoGraficoReporte;
	}
	
	public String getsTipoPaginacion() {
		return sTipoPaginacion;
	}

	public void setsTipoPaginacion(String sTipoPaginacion) {
		this.sTipoPaginacion = sTipoPaginacion;
	}
	
	public String getsTipoRelacion() {
		return sTipoRelacion;
	}

	public void setsTipoRelacion(String sTipoRelacion) {
		this.sTipoRelacion = sTipoRelacion;
	}
	
	public String getsTipoAccion() {
		return sTipoAccion;
	}

	public void setsTipoAccion(String sTipoAccion) {
		this.sTipoAccion = sTipoAccion;
	}
	
	public String getsTipoAccionFormulario() {
		return sTipoAccionFormulario;
	}

	public void setsTipoAccionFormulario(String sTipoAccionFormulario) {
		this.sTipoAccionFormulario = sTipoAccionFormulario;
	}
	
	public String getsTipoSeleccionar() {
		return sTipoSeleccionar;
	}

	public void setsTipoSeleccionar(String sTipoSeleccionar) {
		this.sTipoSeleccionar = sTipoSeleccionar;
	}
	
	public String getsValorCampoGeneral() {
		return sValorCampoGeneral;
	}

	public void setsValorCampoGeneral(String sValorCampoGeneral) {
		this.sValorCampoGeneral = sValorCampoGeneral;
	}			

	public String getsDetalleReporte() {
		return sDetalleReporte;
	}

	public void setsDetalleReporte(String sDetalleReporte) {
		this.sDetalleReporte = sDetalleReporte;
	}
	
	
	public String getsTipoReporteExtra() {
		return sTipoReporteExtra;
	}

	public void setsTipoReporteExtra(String sTipoReporteExtra) {
		this.sTipoReporteExtra = sTipoReporteExtra;
	}
	
	public Boolean getesReporteDinamico() {
		return esReporteDinamico;
	}	
	
	public void setesReporteDinamico(Boolean esReporteDinamico) {
		this.esReporteDinamico = esReporteDinamico;
	}
	
	public Boolean getesRecargarFks() {
		return esRecargarFks;
	}	
	
	public void setesRecargarFks(Boolean esRecargarFks) {
		this.esRecargarFks = esRecargarFks;
	}
	
	public Boolean getesReporteAccionProceso() {
		return esReporteAccionProceso;
	}	
	
	public void setesReporteAccionProceso(Boolean esReporteAccionProceso) {
		this.esReporteAccionProceso= esReporteAccionProceso;
	}
		
	public FormaPagoPuntoVentaParameterReturnGeneral getFormaPagoPuntoVentaParameterGeneral() {
		return this.formapagopuntoventaParameterGeneral;
	}
	
	public void setFormaPagoPuntoVentaParameterGeneral(FormaPagoPuntoVentaParameterReturnGeneral formapagopuntoventaParameterGeneral) {
		this.formapagopuntoventaParameterGeneral = formapagopuntoventaParameterGeneral;
	}
	
	public String getsPathReporteDinamico() {
		return sPathReporteDinamico;
	}

	public void setsPathReporteDinamico(String sPathReporteDinamico) {
		this.sPathReporteDinamico = sPathReporteDinamico;
	}
		
	public Boolean getisMostrarNumeroPaginacion() {
		return isMostrarNumeroPaginacion;
	}

	public void setisMostrarNumeroPaginacion(Boolean isMostrarNumeroPaginacion) {
		this.isMostrarNumeroPaginacion = isMostrarNumeroPaginacion;
	}
	
	public Mensaje getMensaje() {
		return mensaje;
	}

	public void setMensaje(Mensaje mensaje) {
		this.mensaje = mensaje;
	}
	
	public Boolean getIsPermisoTodoFormaPagoPuntoVenta() {
		return isPermisoTodoFormaPagoPuntoVenta;
	}

	public void setIsPermisoTodoFormaPagoPuntoVenta(Boolean isPermisoTodoFormaPagoPuntoVenta) {
		this.isPermisoTodoFormaPagoPuntoVenta = isPermisoTodoFormaPagoPuntoVenta;
	}

	public Boolean getIsPermisoNuevoFormaPagoPuntoVenta() {
		return isPermisoNuevoFormaPagoPuntoVenta;
	}

	public void setIsPermisoNuevoFormaPagoPuntoVenta(Boolean isPermisoNuevoFormaPagoPuntoVenta) {
		this.isPermisoNuevoFormaPagoPuntoVenta = isPermisoNuevoFormaPagoPuntoVenta;
	}

	public Boolean getIsPermisoActualizarFormaPagoPuntoVenta() {
		return isPermisoActualizarFormaPagoPuntoVenta;
	}

	public void setIsPermisoActualizarFormaPagoPuntoVenta(Boolean isPermisoActualizarFormaPagoPuntoVenta) {
		this.isPermisoActualizarFormaPagoPuntoVenta = isPermisoActualizarFormaPagoPuntoVenta;
	}

	public Boolean getIsPermisoEliminarFormaPagoPuntoVenta() {
		return isPermisoEliminarFormaPagoPuntoVenta;
	}

	public void setIsPermisoEliminarFormaPagoPuntoVenta(Boolean isPermisoEliminarFormaPagoPuntoVenta) {
		this.isPermisoEliminarFormaPagoPuntoVenta = isPermisoEliminarFormaPagoPuntoVenta;
	}

	public Boolean getIsPermisoGuardarCambiosFormaPagoPuntoVenta() {
		return isPermisoGuardarCambiosFormaPagoPuntoVenta;
	}

	public void setIsPermisoGuardarCambiosFormaPagoPuntoVenta(Boolean isPermisoGuardarCambiosFormaPagoPuntoVenta) {
		this.isPermisoGuardarCambiosFormaPagoPuntoVenta = isPermisoGuardarCambiosFormaPagoPuntoVenta;
	}
	
	public Boolean getIsPermisoConsultaFormaPagoPuntoVenta() {
		return isPermisoConsultaFormaPagoPuntoVenta;
	}

	public void setIsPermisoConsultaFormaPagoPuntoVenta(Boolean isPermisoConsultaFormaPagoPuntoVenta) {
		this.isPermisoConsultaFormaPagoPuntoVenta = isPermisoConsultaFormaPagoPuntoVenta;
	}

	public Boolean getIsPermisoBusquedaFormaPagoPuntoVenta() {
		return isPermisoBusquedaFormaPagoPuntoVenta;
	}

	public void setIsPermisoBusquedaFormaPagoPuntoVenta(Boolean isPermisoBusquedaFormaPagoPuntoVenta) {
		this.isPermisoBusquedaFormaPagoPuntoVenta = isPermisoBusquedaFormaPagoPuntoVenta;
	}

	public Boolean getIsPermisoReporteFormaPagoPuntoVenta() {
		return isPermisoReporteFormaPagoPuntoVenta;
	}

	public void setIsPermisoReporteFormaPagoPuntoVenta(Boolean isPermisoReporteFormaPagoPuntoVenta) {
		this.isPermisoReporteFormaPagoPuntoVenta = isPermisoReporteFormaPagoPuntoVenta;
	}
	
	public Boolean getIsPermisoPaginacionMedioFormaPagoPuntoVenta() {
		return isPermisoPaginacionMedioFormaPagoPuntoVenta;
	}

	public void setIsPermisoPaginacionMedioFormaPagoPuntoVenta(Boolean isPermisoPaginacionMedioFormaPagoPuntoVenta) {
		this.isPermisoPaginacionMedioFormaPagoPuntoVenta = isPermisoPaginacionMedioFormaPagoPuntoVenta;
	}
	
	public Boolean getIsPermisoPaginacionTodoFormaPagoPuntoVenta() {
		return isPermisoPaginacionTodoFormaPagoPuntoVenta;
	}

	public void setIsPermisoPaginacionTodoFormaPagoPuntoVenta(Boolean isPermisoPaginacionTodoFormaPagoPuntoVenta) {
		this.isPermisoPaginacionTodoFormaPagoPuntoVenta = isPermisoPaginacionTodoFormaPagoPuntoVenta;
	}
	
	public Boolean getIsPermisoPaginacionAltoFormaPagoPuntoVenta() {
		return isPermisoPaginacionAltoFormaPagoPuntoVenta;
	}

	public void setIsPermisoPaginacionAltoFormaPagoPuntoVenta(Boolean isPermisoPaginacionAltoFormaPagoPuntoVenta) {
		this.isPermisoPaginacionAltoFormaPagoPuntoVenta = isPermisoPaginacionAltoFormaPagoPuntoVenta;
	}
	
	public Boolean getIsPermisoCopiarFormaPagoPuntoVenta() {
		return isPermisoCopiarFormaPagoPuntoVenta;
	}

	public void setIsPermisoCopiarFormaPagoPuntoVenta(Boolean isPermisoCopiarFormaPagoPuntoVenta) {
		this.isPermisoCopiarFormaPagoPuntoVenta = isPermisoCopiarFormaPagoPuntoVenta;
	}
	
	public Boolean getIsPermisoVerFormFormaPagoPuntoVenta() {
		return isPermisoVerFormFormaPagoPuntoVenta;
	}

	public void setIsPermisoVerFormFormaPagoPuntoVenta(Boolean isPermisoVerFormFormaPagoPuntoVenta) {
		this.isPermisoVerFormFormaPagoPuntoVenta = isPermisoVerFormFormaPagoPuntoVenta;
	}
	
	public Boolean getIsPermisoDuplicarFormaPagoPuntoVenta() {
		return isPermisoDuplicarFormaPagoPuntoVenta;
	}

	public void setIsPermisoDuplicarFormaPagoPuntoVenta(Boolean isPermisoDuplicarFormaPagoPuntoVenta) {
		this.isPermisoDuplicarFormaPagoPuntoVenta = isPermisoDuplicarFormaPagoPuntoVenta;
	}
	
	public Boolean getIsPermisoOrdenFormaPagoPuntoVenta() {
		return isPermisoOrdenFormaPagoPuntoVenta;
	}

	public void setIsPermisoOrdenFormaPagoPuntoVenta(Boolean isPermisoOrdenFormaPagoPuntoVenta) {
		this.isPermisoOrdenFormaPagoPuntoVenta = isPermisoOrdenFormaPagoPuntoVenta;
	}
	
	public String getsVisibilidadTablaBusquedas() {
		return sVisibilidadTablaBusquedas;
	}

	public void setsVisibilidadTablaBusquedas(String sVisibilidadTablaBusquedas) {
		this.sVisibilidadTablaBusquedas = sVisibilidadTablaBusquedas;
	}
	
	public String getsVisibilidadTablaElementos() {
		return sVisibilidadTablaElementos;
	}

	public void setsVisibilidadTablaElementos(String sVisibilidadTablaElementos) {
		this.sVisibilidadTablaElementos = sVisibilidadTablaElementos;
	}

	public String getsVisibilidadTablaAcciones() {
		return sVisibilidadTablaAcciones;
	}

	public void setsVisibilidadTablaAcciones(String sVisibilidadTablaAcciones) {
		this.sVisibilidadTablaAcciones = sVisibilidadTablaAcciones;
	}
	
	public Boolean getIsVisibilidadCeldaNuevoFormaPagoPuntoVenta() {
		return isVisibilidadCeldaNuevoFormaPagoPuntoVenta;
	}

	public void setIsVisibilidadCeldaNuevoFormaPagoPuntoVenta(Boolean isVisibilidadCeldaNuevoFormaPagoPuntoVenta) {
		this.isVisibilidadCeldaNuevoFormaPagoPuntoVenta = isVisibilidadCeldaNuevoFormaPagoPuntoVenta;
	}
	
	public Boolean getIsVisibilidadCeldaDuplicarFormaPagoPuntoVenta() {
		return isVisibilidadCeldaDuplicarFormaPagoPuntoVenta;
	}

	public void setIsVisibilidadCeldaDuplicarFormaPagoPuntoVenta(Boolean isVisibilidadCeldaDuplicarFormaPagoPuntoVenta) {
		this.isVisibilidadCeldaDuplicarFormaPagoPuntoVenta = isVisibilidadCeldaDuplicarFormaPagoPuntoVenta;
	}
	
	public Boolean getIsVisibilidadCeldaCopiarFormaPagoPuntoVenta() {
		return isVisibilidadCeldaCopiarFormaPagoPuntoVenta;
	}

	public void setIsVisibilidadCeldaCopiarFormaPagoPuntoVenta(Boolean isVisibilidadCeldaCopiarFormaPagoPuntoVenta) {
		this.isVisibilidadCeldaCopiarFormaPagoPuntoVenta = isVisibilidadCeldaCopiarFormaPagoPuntoVenta;
	}
	
	public Boolean getIsVisibilidadCeldaVerFormFormaPagoPuntoVenta() {
		return isVisibilidadCeldaVerFormFormaPagoPuntoVenta;
	}

	public void setIsVisibilidadCeldaVerFormFormaPagoPuntoVenta(Boolean isVisibilidadCeldaVerFormFormaPagoPuntoVenta) {
		this.isVisibilidadCeldaVerFormFormaPagoPuntoVenta = isVisibilidadCeldaVerFormFormaPagoPuntoVenta;
	}
	
	public Boolean getIsVisibilidadCeldaOrdenFormaPagoPuntoVenta() {
		return isVisibilidadCeldaOrdenFormaPagoPuntoVenta;
	}

	public void setIsVisibilidadCeldaOrdenFormaPagoPuntoVenta(Boolean isVisibilidadCeldaOrdenFormaPagoPuntoVenta) {
		this.isVisibilidadCeldaOrdenFormaPagoPuntoVenta = isVisibilidadCeldaOrdenFormaPagoPuntoVenta;
	}
	
	public Boolean getIsVisibilidadCeldaNuevoRelacionesFormaPagoPuntoVenta() {
		return isVisibilidadCeldaNuevoRelacionesFormaPagoPuntoVenta;
	}

	public void setIsVisibilidadCeldaNuevoRelacionesFormaPagoPuntoVenta(Boolean isVisibilidadCeldaNuevoRelacionesFormaPagoPuntoVenta) {
		this.isVisibilidadCeldaNuevoRelacionesFormaPagoPuntoVenta = isVisibilidadCeldaNuevoRelacionesFormaPagoPuntoVenta;
	}
	
	public Boolean getIsVisibilidadCeldaModificarFormaPagoPuntoVenta() {
		return isVisibilidadCeldaModificarFormaPagoPuntoVenta;
	}

	public void setIsVisibilidadCeldaModificarFormaPagoPuntoVenta(Boolean isVisibilidadCeldaModificarFormaPagoPuntoVenta) {
		this.isVisibilidadCeldaModificarFormaPagoPuntoVenta = isVisibilidadCeldaModificarFormaPagoPuntoVenta;
	}
	
	public Boolean getIsVisibilidadCeldaActualizarFormaPagoPuntoVenta() {
		return isVisibilidadCeldaActualizarFormaPagoPuntoVenta;
	}

	public void setIsVisibilidadCeldaActualizarFormaPagoPuntoVenta(Boolean isVisibilidadCeldaActualizarFormaPagoPuntoVenta) {
		this.isVisibilidadCeldaActualizarFormaPagoPuntoVenta = isVisibilidadCeldaActualizarFormaPagoPuntoVenta;
	}

	public Boolean getIsVisibilidadCeldaEliminarFormaPagoPuntoVenta() {
		return isVisibilidadCeldaEliminarFormaPagoPuntoVenta;
	}

	public void setIsVisibilidadCeldaEliminarFormaPagoPuntoVenta(Boolean isVisibilidadCeldaEliminarFormaPagoPuntoVenta) {
		this.isVisibilidadCeldaEliminarFormaPagoPuntoVenta = isVisibilidadCeldaEliminarFormaPagoPuntoVenta;
	}

	public Boolean getIsVisibilidadCeldaCancelarFormaPagoPuntoVenta() {
		return isVisibilidadCeldaCancelarFormaPagoPuntoVenta;
	}

	public void setIsVisibilidadCeldaCancelarFormaPagoPuntoVenta(Boolean isVisibilidadCeldaCancelarFormaPagoPuntoVenta) {
		this.isVisibilidadCeldaCancelarFormaPagoPuntoVenta = isVisibilidadCeldaCancelarFormaPagoPuntoVenta;
	}

	public Boolean getIsVisibilidadCeldaGuardarFormaPagoPuntoVenta() {
		return isVisibilidadCeldaGuardarFormaPagoPuntoVenta;
	}

	public void setIsVisibilidadCeldaGuardarFormaPagoPuntoVenta(Boolean isVisibilidadCeldaGuardarFormaPagoPuntoVenta) {
		this.isVisibilidadCeldaGuardarFormaPagoPuntoVenta = isVisibilidadCeldaGuardarFormaPagoPuntoVenta;
	}
	
	public Boolean getIsVisibilidadCeldaGuardarCambiosFormaPagoPuntoVenta() {
		return isVisibilidadCeldaGuardarCambiosFormaPagoPuntoVenta;
	}

	public void setIsVisibilidadCeldaGuardarCambiosFormaPagoPuntoVenta(Boolean isVisibilidadCeldaGuardarCambiosFormaPagoPuntoVenta) {
		this.isVisibilidadCeldaGuardarCambiosFormaPagoPuntoVenta = isVisibilidadCeldaGuardarCambiosFormaPagoPuntoVenta;
	}
		
	public FormaPagoPuntoVentaSessionBean getformapagopuntoventaSessionBean() {
		return this.formapagopuntoventaSessionBean;
	}
	
	public void setformapagopuntoventaSessionBean(FormaPagoPuntoVentaSessionBean formapagopuntoventaSessionBean) {
		this.formapagopuntoventaSessionBean=formapagopuntoventaSessionBean;
	}
	
	
	public Boolean getisVisibilidadFK_IdAnio() {
		return this.isVisibilidadFK_IdAnio;
	}

	public void setisVisibilidadFK_IdAnio(Boolean isVisibilidadFK_IdAnio) {
		this.isVisibilidadFK_IdAnio=isVisibilidadFK_IdAnio;
	}

	public Boolean getisVisibilidadFK_IdAsientoContable() {
		return this.isVisibilidadFK_IdAsientoContable;
	}

	public void setisVisibilidadFK_IdAsientoContable(Boolean isVisibilidadFK_IdAsientoContable) {
		this.isVisibilidadFK_IdAsientoContable=isVisibilidadFK_IdAsientoContable;
	}

	public Boolean getisVisibilidadFK_IdBanco() {
		return this.isVisibilidadFK_IdBanco;
	}

	public void setisVisibilidadFK_IdBanco(Boolean isVisibilidadFK_IdBanco) {
		this.isVisibilidadFK_IdBanco=isVisibilidadFK_IdBanco;
	}

	public Boolean getisVisibilidadFK_IdBancoTarjeta() {
		return this.isVisibilidadFK_IdBancoTarjeta;
	}

	public void setisVisibilidadFK_IdBancoTarjeta(Boolean isVisibilidadFK_IdBancoTarjeta) {
		this.isVisibilidadFK_IdBancoTarjeta=isVisibilidadFK_IdBancoTarjeta;
	}

	public Boolean getisVisibilidadFK_IdConexion() {
		return this.isVisibilidadFK_IdConexion;
	}

	public void setisVisibilidadFK_IdConexion(Boolean isVisibilidadFK_IdConexion) {
		this.isVisibilidadFK_IdConexion=isVisibilidadFK_IdConexion;
	}

	public Boolean getisVisibilidadFK_IdCuentaBancoPunVen() {
		return this.isVisibilidadFK_IdCuentaBancoPunVen;
	}

	public void setisVisibilidadFK_IdCuentaBancoPunVen(Boolean isVisibilidadFK_IdCuentaBancoPunVen) {
		this.isVisibilidadFK_IdCuentaBancoPunVen=isVisibilidadFK_IdCuentaBancoPunVen;
	}

	public Boolean getisVisibilidadFK_IdCuentaContable() {
		return this.isVisibilidadFK_IdCuentaContable;
	}

	public void setisVisibilidadFK_IdCuentaContable(Boolean isVisibilidadFK_IdCuentaContable) {
		this.isVisibilidadFK_IdCuentaContable=isVisibilidadFK_IdCuentaContable;
	}

	public Boolean getisVisibilidadFK_IdEjercicio() {
		return this.isVisibilidadFK_IdEjercicio;
	}

	public void setisVisibilidadFK_IdEjercicio(Boolean isVisibilidadFK_IdEjercicio) {
		this.isVisibilidadFK_IdEjercicio=isVisibilidadFK_IdEjercicio;
	}

	public Boolean getisVisibilidadFK_IdEmpresa() {
		return this.isVisibilidadFK_IdEmpresa;
	}

	public void setisVisibilidadFK_IdEmpresa(Boolean isVisibilidadFK_IdEmpresa) {
		this.isVisibilidadFK_IdEmpresa=isVisibilidadFK_IdEmpresa;
	}

	public Boolean getisVisibilidadFK_IdFacturaPuntoVenta() {
		return this.isVisibilidadFK_IdFacturaPuntoVenta;
	}

	public void setisVisibilidadFK_IdFacturaPuntoVenta(Boolean isVisibilidadFK_IdFacturaPuntoVenta) {
		this.isVisibilidadFK_IdFacturaPuntoVenta=isVisibilidadFK_IdFacturaPuntoVenta;
	}

	public Boolean getisVisibilidadFK_IdMes() {
		return this.isVisibilidadFK_IdMes;
	}

	public void setisVisibilidadFK_IdMes(Boolean isVisibilidadFK_IdMes) {
		this.isVisibilidadFK_IdMes=isVisibilidadFK_IdMes;
	}

	public Boolean getisVisibilidadFK_IdPeriodo() {
		return this.isVisibilidadFK_IdPeriodo;
	}

	public void setisVisibilidadFK_IdPeriodo(Boolean isVisibilidadFK_IdPeriodo) {
		this.isVisibilidadFK_IdPeriodo=isVisibilidadFK_IdPeriodo;
	}

	public Boolean getisVisibilidadFK_IdSucursal() {
		return this.isVisibilidadFK_IdSucursal;
	}

	public void setisVisibilidadFK_IdSucursal(Boolean isVisibilidadFK_IdSucursal) {
		this.isVisibilidadFK_IdSucursal=isVisibilidadFK_IdSucursal;
	}

	public Boolean getisVisibilidadFK_IdTarjetaCredito() {
		return this.isVisibilidadFK_IdTarjetaCredito;
	}

	public void setisVisibilidadFK_IdTarjetaCredito(Boolean isVisibilidadFK_IdTarjetaCredito) {
		this.isVisibilidadFK_IdTarjetaCredito=isVisibilidadFK_IdTarjetaCredito;
	}

	public Boolean getisVisibilidadFK_IdTipoFormaPago() {
		return this.isVisibilidadFK_IdTipoFormaPago;
	}

	public void setisVisibilidadFK_IdTipoFormaPago(Boolean isVisibilidadFK_IdTipoFormaPago) {
		this.isVisibilidadFK_IdTipoFormaPago=isVisibilidadFK_IdTipoFormaPago;
	}

	public Boolean getisVisibilidadFK_IdTipoInteresTarjeta() {
		return this.isVisibilidadFK_IdTipoInteresTarjeta;
	}

	public void setisVisibilidadFK_IdTipoInteresTarjeta(Boolean isVisibilidadFK_IdTipoInteresTarjeta) {
		this.isVisibilidadFK_IdTipoInteresTarjeta=isVisibilidadFK_IdTipoInteresTarjeta;
	}

	public Boolean getisVisibilidadFK_IdTipoPagoTarjeta() {
		return this.isVisibilidadFK_IdTipoPagoTarjeta;
	}

	public void setisVisibilidadFK_IdTipoPagoTarjeta(Boolean isVisibilidadFK_IdTipoPagoTarjeta) {
		this.isVisibilidadFK_IdTipoPagoTarjeta=isVisibilidadFK_IdTipoPagoTarjeta;
	}

	public Boolean getisVisibilidadFK_IdTipoRiesgoCheque() {
		return this.isVisibilidadFK_IdTipoRiesgoCheque;
	}

	public void setisVisibilidadFK_IdTipoRiesgoCheque(Boolean isVisibilidadFK_IdTipoRiesgoCheque) {
		this.isVisibilidadFK_IdTipoRiesgoCheque=isVisibilidadFK_IdTipoRiesgoCheque;
	}

	
	
	public void setVariablesFormularioToObjetoActualForeignKeysFormaPagoPuntoVenta(FormaPagoPuntoVenta formapagopuntoventa)throws Exception {
		try {
			
				this.setActualParaGuardarEmpresaForeignKey(formapagopuntoventa,null);
				this.setActualParaGuardarSucursalForeignKey(formapagopuntoventa,null);
				this.setActualParaGuardarEjercicioForeignKey(formapagopuntoventa,null);
				this.setActualParaGuardarPeriodoForeignKey(formapagopuntoventa,null);
				this.setActualParaGuardarFacturaPuntoVentaForeignKey(formapagopuntoventa,null);
				this.setActualParaGuardarTipoFormaPagoForeignKey(formapagopuntoventa,null);
				this.setActualParaGuardarBancoForeignKey(formapagopuntoventa,null);
				this.setActualParaGuardarCuentaBancoPunVenForeignKey(formapagopuntoventa,null);
				this.setActualParaGuardarTipoRiesgoChequeForeignKey(formapagopuntoventa,null);
				this.setActualParaGuardarBancoTarjetaForeignKey(formapagopuntoventa,null);
				this.setActualParaGuardarTarjetaCreditoForeignKey(formapagopuntoventa,null);
				this.setActualParaGuardarTipoInteresTarjetaForeignKey(formapagopuntoventa,null);
				this.setActualParaGuardarTipoPagoTarjetaForeignKey(formapagopuntoventa,null);
				this.setActualParaGuardarConexionForeignKey(formapagopuntoventa,null);
				this.setActualParaGuardarMesForeignKey(formapagopuntoventa,null);
				this.setActualParaGuardarAnioForeignKey(formapagopuntoventa,null);
				this.setActualParaGuardarCuentaContableForeignKey(formapagopuntoventa,null);
				this.setActualParaGuardarAsientoContableForeignKey(formapagopuntoventa,null);
		} catch(Exception e) {
			throw e;
		}
	}
	
	public void cargarLicenciaCliente(DatosCliente datosCliente) throws Exception {
		Boolean existe=false;
			
		try {
				InputStream reportFile=null;
				
				String sPath=this.parametroGeneralUsuario.getpath_exportar()+"erp_bydan/license/license.xml";
				
				reportFile = new FileInputStream(sPath);
				
				Document documentBuilder=null;
				
				if(this.constantes2.DOCUMENT_BUILDER==null) {
					documentBuilder=Funciones2.parseXml(reportFile);
				} else {
					documentBuilder=this.constantes2.DOCUMENT_BUILDER;
				}
				
				//GlobalSeguridad.readXml(documentBuilder);
				
				String sNamePCServerLicencia="";
				String sClaveSistemaLicencia="";
				Date dFechaServerLicencia=null;
				
				//CARGAR ELEMENTOS DE LICENCIA
				NodeList nodeList = documentBuilder.getElementsByTagName("Licencia");
				
				for (int iIndice = 0; iIndice < nodeList.getLength(); iIndice++) {
					Node node = nodeList.item(iIndice);
				
					if (node.getNodeType() == Node.ELEMENT_NODE) {
						Element element = (Element) node;
						 
						sNamePCServerLicencia=element.getElementsByTagName("NombrePc").item(0).getTextContent();
						sClaveSistemaLicencia=element.getElementsByTagName("ClaveSistema").item(0).getTextContent();
						
						existe=true;
						break;
					}
				}														
			
				
			if(existe) {
				datosCliente.setsClaveSistema(sClaveSistemaLicencia);
				
				if(!datosCliente.getsNamePCServer().equals(sNamePCServerLicencia)
					&& !datosCliente.getsNamePCServer().equals("")) {
					
					datosCliente.setsNamePCServer(sNamePCServerLicencia);
				}
			} else {
				throw new Exception("NO EXISTE LICENCIA O NO ESTA BIEN FORMADO");
			}
		} catch(Exception e) {
			throw new Exception("NO EXISTE LICENCIA O NO ESTA BIEN FORMADO");
		}						
	}
	
	public void cargarDatosCliente() throws Exception {
		String sPrimerMacAddress="";		
		String sHostName="";		 
		String sHostIp="";		  
		String sHostUser="";
		
		/*
		sPrimerMacAddress=FuncionesNetwork.getPrimerMacAddress();		
		sHostName=FuncionesNetwork.getHostName();		 
		sHostIp=FuncionesNetwork.getHostIp();		  
		sHostUser=FuncionesNetwork.getHostUser();
		*/
		
		this.datosCliente=new DatosCliente();
		if(lIdUsuarioSesion!=null){datosCliente.setIdUsuario(this.lIdUsuarioSesion);}
		
		//SERVIDOR WEB Y TALVEZ SERVIDOR SWING WINDOWS
		this.datosCliente.setsUsuarioPCServer(sHostUser);
		this.datosCliente.setsNamePCServer(sHostName);
		this.datosCliente.setsIPPCServer(sHostIp);
		this.datosCliente.setsMacAddressPCServer(sPrimerMacAddress);
			
			//CLIENTE SWING WINDOWS
			this.datosCliente.setIsClienteWeb(false);
			
			this.datosCliente.setsUsuarioPC(sHostUser);
			this.datosCliente.setsNamePC(sHostName);
			this.datosCliente.setsIPPC(sHostIp);
			this.datosCliente.setsMacAddressPC(sPrimerMacAddress);	
			
			/*
			//this.cargarLicenciaCliente(this.datosCliente);
			*/
	}
	
	public void bugActualizarReferenciaActual(FormaPagoPuntoVenta formapagopuntoventa,FormaPagoPuntoVenta formapagopuntoventaAux) throws Exception {
		//ARCHITECTURE		
		//EL ID NEGATIVO GUARDADO EN ORIGINAL SIRVE PARA VERIFICAR Y ACTUALIZAR EL REGISTRO NUEVO (ID,VERSIONROW)
		this.setCamposBaseDesdeOriginalFormaPagoPuntoVenta(formapagopuntoventa);
					
		//POR BUG: EL OBJETO ACTUAL SE PERDIA, POR LO QUE SE GUARDA TAMBIEN VALORES EN AUX Y LUEGO DESPUES DEL MENSAJE SE HACE REFERENCIA EL OBJETO ACTUAL AL AUX
		formapagopuntoventaAux.setId(formapagopuntoventa.getId());
		formapagopuntoventaAux.setVersionRow(formapagopuntoventa.getVersionRow());					
	}
	
	public void ejecutarMantenimiento(MaintenanceType maintenanceType)throws Exception {	
		try	{								
			
			//this.startProcessFormaPagoPuntoVenta();
		
			int intSelectedRow = this.jTableDatosFormaPagoPuntoVenta.getSelectedRow();	       
			
			//PUEDE SER -1 CUANDO SE ELIMINA EN GUARDAR CAMBIOS
			if(intSelectedRow>=0 && maintenanceType!=MaintenanceType.GUARDARCAMBIOS) {
				//SE PIEDE INDICE SELECTED CON FILA TOTALES, ASEGURARSE QUE OBJETO ACTUAL ESTE EN FORMULARIO
					
				//ARCHITECTURE
				
				if(Constantes.ISUSAEJBLOGICLAYER) {
					this.formapagopuntoventa =(FormaPagoPuntoVenta) this.formapagopuntoventaLogic.getFormaPagoPuntoVentas().toArray()[this.jTableDatosFormaPagoPuntoVenta.convertRowIndexToModel(intSelectedRow)];
				} else if(Constantes.ISUSAEJBREMOTE ||Constantes.ISUSAEJBHOME) {
					this.formapagopuntoventa =(FormaPagoPuntoVenta) this.formapagopuntoventas.toArray()[this.jTableDatosFormaPagoPuntoVenta.convertRowIndexToModel(intSelectedRow)];
				}
				
				//ARCHITECTURE
				
				if(FormaPagoPuntoVentaJInternalFrame.ISBINDING_MANUAL_TABLA) {
					//this.setVariablesFormularioToObjetoActualFormaPagoPuntoVenta(this.formapagopuntoventa,true);
				}
				
				this.setVariablesFormularioToObjetoActualForeignKeysFormaPagoPuntoVenta(this.formapagopuntoventa);
			}
			
			//LUEGO DE TRAER DATOS CORRESPONDIENTES QUE COINCIDA LISTA TABLA QUITO FILA TOTALES
			if(this.conTotales) {
				//MEJOR LO DEJO, SI EXISTE EXCEPCION SE PIEDE FILA TOTALES Y ORDEN INDICE FILA ACTUAL
				//this.quitarFilaTotales();
			}
			
			this.cargarDatosCliente();
			
			this.datosDeep=new DatosDeep();
			
			//SE CAMBIA ESTADOS CON ERROR, ENTONCES SE EJECUTA ANTES
			//this.invalidValues = formapagopuntoventaValidator.getInvalidValues(this.formapagopuntoventa);
			
			//if(this.invalidValues==null || this.invalidValues.length<=0) {
			
			formapagopuntoventaLogic.setDatosCliente(datosCliente);
			formapagopuntoventaLogic.setIsConDeep(false);
			
			if(maintenanceType==MaintenanceType.NUEVO) {
				formapagopuntoventaAux=new  FormaPagoPuntoVenta();
				
				formapagopuntoventaAux.setIsNew(true);
				formapagopuntoventaAux.setIsChanged(true);
				
				formapagopuntoventaAux.setFormaPagoPuntoVentaOriginal(this.formapagopuntoventa);
				
				formapagopuntoventaAux.setId(this.formapagopuntoventa.getId());	
				formapagopuntoventaAux.setVersionRow(this.formapagopuntoventa.getVersionRow());	
				formapagopuntoventaAux.setid_empresa(this.formapagopuntoventa.getid_empresa());	
				formapagopuntoventaAux.setid_sucursal(this.formapagopuntoventa.getid_sucursal());	
				formapagopuntoventaAux.setid_ejercicio(this.formapagopuntoventa.getid_ejercicio());	
				formapagopuntoventaAux.setid_periodo(this.formapagopuntoventa.getid_periodo());	
				formapagopuntoventaAux.setid_factura_punto_venta(this.formapagopuntoventa.getid_factura_punto_venta());	
				formapagopuntoventaAux.setid_tipo_forma_pago(this.formapagopuntoventa.getid_tipo_forma_pago());	
				formapagopuntoventaAux.setporcentaje(this.formapagopuntoventa.getporcentaje());	
				formapagopuntoventaAux.setvalor(this.formapagopuntoventa.getvalor());	
				formapagopuntoventaAux.setfecha(this.formapagopuntoventa.getfecha());	
				formapagopuntoventaAux.setdescripcion(this.formapagopuntoventa.getdescripcion());	
				formapagopuntoventaAux.setfecha_inicio(this.formapagopuntoventa.getfecha_inicio());	
				formapagopuntoventaAux.setnumero_dias_plazo(this.formapagopuntoventa.getnumero_dias_plazo());	
				formapagopuntoventaAux.setfecha_fin(this.formapagopuntoventa.getfecha_fin());	
				
				if(this.formapagopuntoventa.getid_banco()!=null && this.formapagopuntoventa.getid_banco()>0L) {
					formapagopuntoventaAux.setid_banco(this.formapagopuntoventa.getid_banco());
				} else {
					formapagopuntoventaAux.setid_banco(null);
				}	
				
				if(this.formapagopuntoventa.getid_cuenta_banco_pun_ven()!=null && this.formapagopuntoventa.getid_cuenta_banco_pun_ven()>0L) {
					formapagopuntoventaAux.setid_cuenta_banco_pun_ven(this.formapagopuntoventa.getid_cuenta_banco_pun_ven());
				} else {
					formapagopuntoventaAux.setid_cuenta_banco_pun_ven(null);
				}	
				
				if(this.formapagopuntoventa.getid_tipo_riesgo_cheque()!=null && this.formapagopuntoventa.getid_tipo_riesgo_cheque()>0L) {
					formapagopuntoventaAux.setid_tipo_riesgo_cheque(this.formapagopuntoventa.getid_tipo_riesgo_cheque());
				} else {
					formapagopuntoventaAux.setid_tipo_riesgo_cheque(null);
				}	
				formapagopuntoventaAux.setnumero_cuenta(this.formapagopuntoventa.getnumero_cuenta());	
				formapagopuntoventaAux.setnumero_cheque(this.formapagopuntoventa.getnumero_cheque());	
				formapagopuntoventaAux.setgirador(this.formapagopuntoventa.getgirador());	
				
				if(this.formapagopuntoventa.getid_banco_tarjeta()!=null && this.formapagopuntoventa.getid_banco_tarjeta()>0L) {
					formapagopuntoventaAux.setid_banco_tarjeta(this.formapagopuntoventa.getid_banco_tarjeta());
				} else {
					formapagopuntoventaAux.setid_banco_tarjeta(null);
				}	
				
				if(this.formapagopuntoventa.getid_tarjeta_credito()!=null && this.formapagopuntoventa.getid_tarjeta_credito()>0L) {
					formapagopuntoventaAux.setid_tarjeta_credito(this.formapagopuntoventa.getid_tarjeta_credito());
				} else {
					formapagopuntoventaAux.setid_tarjeta_credito(null);
				}	
				
				if(this.formapagopuntoventa.getid_tipo_interes_tarjeta()!=null && this.formapagopuntoventa.getid_tipo_interes_tarjeta()>0L) {
					formapagopuntoventaAux.setid_tipo_interes_tarjeta(this.formapagopuntoventa.getid_tipo_interes_tarjeta());
				} else {
					formapagopuntoventaAux.setid_tipo_interes_tarjeta(null);
				}	
				
				if(this.formapagopuntoventa.getid_tipo_pago_tarjeta()!=null && this.formapagopuntoventa.getid_tipo_pago_tarjeta()>0L) {
					formapagopuntoventaAux.setid_tipo_pago_tarjeta(this.formapagopuntoventa.getid_tipo_pago_tarjeta());
				} else {
					formapagopuntoventaAux.setid_tipo_pago_tarjeta(null);
				}	
				
				if(this.formapagopuntoventa.getid_conexion()!=null && this.formapagopuntoventa.getid_conexion()>0L) {
					formapagopuntoventaAux.setid_conexion(this.formapagopuntoventa.getid_conexion());
				} else {
					formapagopuntoventaAux.setid_conexion(null);
				}	
				formapagopuntoventaAux.setid_mes(this.formapagopuntoventa.getid_mes());	
				formapagopuntoventaAux.setnumero(this.formapagopuntoventa.getnumero());	
				formapagopuntoventaAux.settarjeta_habiente(this.formapagopuntoventa.gettarjeta_habiente());	
				formapagopuntoventaAux.setautorizacion(this.formapagopuntoventa.getautorizacion());	
				formapagopuntoventaAux.setvoucher(this.formapagopuntoventa.getvoucher());	
				formapagopuntoventaAux.setlote(this.formapagopuntoventa.getlote());	
				formapagopuntoventaAux.setcuota(this.formapagopuntoventa.getcuota());	
				formapagopuntoventaAux.setvalor_retencion(this.formapagopuntoventa.getvalor_retencion());	
				formapagopuntoventaAux.setvalor_comision(this.formapagopuntoventa.getvalor_comision());	
				formapagopuntoventaAux.setvalor_calculado(this.formapagopuntoventa.getvalor_calculado());	
				formapagopuntoventaAux.setvalor_cancelado(this.formapagopuntoventa.getvalor_cancelado());	
				formapagopuntoventaAux.setvalor_difiere(this.formapagopuntoventa.getvalor_difiere());	
				formapagopuntoventaAux.setnumero_retencion(this.formapagopuntoventa.getnumero_retencion());	
				formapagopuntoventaAux.setnumero_liquidacion(this.formapagopuntoventa.getnumero_liquidacion());	
				formapagopuntoventaAux.setid_anio(this.formapagopuntoventa.getid_anio());	
				
				if(this.formapagopuntoventa.getid_cuenta_contable()!=null && this.formapagopuntoventa.getid_cuenta_contable()>0L) {
					formapagopuntoventaAux.setid_cuenta_contable(this.formapagopuntoventa.getid_cuenta_contable());
				} else {
					formapagopuntoventaAux.setid_cuenta_contable(null);
				}	
				
				if(this.formapagopuntoventa.getid_asiento_contable()!=null && this.formapagopuntoventa.getid_asiento_contable()>0L) {
					formapagopuntoventaAux.setid_asiento_contable(this.formapagopuntoventa.getid_asiento_contable());
				} else {
					formapagopuntoventaAux.setid_asiento_contable(null);
				}	
								
				//ARCHITECTURE
				if(Constantes.ISUSAEJBLOGICLAYER) {
					//NO ENTENDIBLE PORQUE PONER
					//if(this.formapagopuntoventaSessionBean.getEstaModoGuardarRelaciones() 
					//	|| this.formapagopuntoventaSessionBean.getEsGuardarRelacionado())	{
						actualizarLista(formapagopuntoventaAux,formapagopuntoventaLogic.getFormaPagoPuntoVentas());
					//}
				} else if(Constantes.ISUSAEJBREMOTE||Constantes.ISUSAEJBHOME) {
					actualizarLista(formapagopuntoventaAux,formapagopuntoventas);
				}
				//ARCHITECTURE
				
				if(!isGuardarCambiosEnLote  && !this.formapagopuntoventaSessionBean.getEstaModoGuardarRelaciones() 
						&& !this.formapagopuntoventaSessionBean.getEsGuardarRelacionado())	{
					
					//ARCHITECTURE
					if(Constantes.ISUSAEJBLOGICLAYER) {
						formapagopuntoventaLogic.saveFormaPagoPuntoVentas();//WithConnection
						//formapagopuntoventaLogic.getSetVersionRowFormaPagoPuntoVentas();//WithConnection
					} else if(Constantes.ISUSAEJBREMOTE) {
					} else if(Constantes.ISUSAEJBHOME) {
					}
					//ARCHITECTURE		
					
					//POR BUG: EL OBJETO ACTUAL SE PERDIA, POR LO QUE SE GUARDA TAMBIEN VALORES EN AUX Y LUEGO DESPUES DEL MENSAJE SE HACE REFERENCIA EL OBJETO ACTUAL AL AUX
					this.bugActualizarReferenciaActual(this.formapagopuntoventa,formapagopuntoventaAux);
					
					this.refrescarForeignKeysDescripcionesFormaPagoPuntoVenta();
				} else {
					//CUANDO ES MANTENIMIENTO MAESTRO DETALLE
					if(this.formapagopuntoventaSessionBean.getEstaModoGuardarRelaciones()) {
						//GUARDAR RELACIONES
						//ARCHITECTURE
						if(Constantes.ISUSAEJBLOGICLAYER) {
							
						} else if(Constantes.ISUSAEJBREMOTE ||Constantes.ISUSAEJBHOME) {
							
						}
						//ARCHITECTURE	
						
						if(!this.formapagopuntoventaSessionBean.getEsGuardarRelacionado()) {
							//QUITAR FILA TOTAL
							//ARCHITECTURE
							if(Constantes.ISUSAEJBLOGICLAYER) {
							
							} else if(Constantes.ISUSAEJBREMOTE ||Constantes.ISUSAEJBHOME) {
								
							}
							//ARCHITECTURE
												
							//ARCHITECTURE
							if(Constantes.ISUSAEJBLOGICLAYER) {
								formapagopuntoventaLogic.saveFormaPagoPuntoVentaRelaciones(formapagopuntoventaAux);//WithConnection
								//formapagopuntoventaLogic.getSetVersionRowFormaPagoPuntoVentas();//WithConnection
							} else if(Constantes.ISUSAEJBREMOTE) {
							} else if(Constantes.ISUSAEJBHOME) {
							}
							//ARCHITECTURE
							
							//POR BUG: EL OBJETO ACTUAL SE PERDIA, POR LO QUE SE GUARDA TAMBIEN VALORES EN AUX Y LUEGO DESPUES DEL MENSAJE SE HACE REFERENCIA EL OBJETO ACTUAL AL AUX
							this.bugActualizarReferenciaActual(this.formapagopuntoventa,formapagopuntoventaAux);
					
					
							//ARCHITECTURE
							if(Constantes.ISUSAEJBLOGICLAYER) {
								
							} else if(Constantes.ISUSAEJBREMOTE ||Constantes.ISUSAEJBHOME) {
								
							}
							//ARCHITECTURE	
						} else {
							
							
							
							//ARCHITECTURE
							if(Constantes.ISUSAEJBLOGICLAYER) {
								if(this.formapagopuntoventaSessionBean.getEstaModoGuardarRelaciones() 
									|| this.formapagopuntoventaSessionBean.getEsGuardarRelacionado())	{
									actualizarLista(formapagopuntoventaAux,formapagopuntoventaLogic.getFormaPagoPuntoVentas());
								}
							} else if(Constantes.ISUSAEJBREMOTE||Constantes.ISUSAEJBHOME) {
								actualizarLista(formapagopuntoventaAux,formapagopuntoventas);
							}
							//ARCHITECTURE
							
							//AQUI EL ID NEGATIVO ES EL ID BUSCADO, YA QUE NO SE GENERA OTRO EN LA DB POR INGRESAR UNO NUEVO
							//POR BUG: EL OBJETO ACTUAL SE PERDIA, POR LO QUE SE GUARDA TAMBIEN VALORES EN AUX Y LUEGO DESPUES DEL MENSAJE SE HACE REFERENCIA EL OBJETO ACTUAL AL AUX
							//this.bugActualizarReferenciaActual(this.formapagopuntoventa,formapagopuntoventaAux);												
						}
					}
				}
			} else if(maintenanceType==MaintenanceType.ACTUALIZAR) {
				formapagopuntoventaAux=new  FormaPagoPuntoVenta();
				
				//PUEDE QUE SE ACTUALIZE ALGUN REGISTRO NUEVO
				if(!this.formapagopuntoventaSessionBean.getEsGuardarRelacionado() 
					|| (this.formapagopuntoventaSessionBean.getEsGuardarRelacionado() && this.formapagopuntoventa.getId()>=0)) {
						
					formapagopuntoventaAux.setIsNew(false);
				}
				
				formapagopuntoventaAux.setIsDeleted(false);
			
				formapagopuntoventaAux.setId(this.formapagopuntoventa.getId());	
				formapagopuntoventaAux.setVersionRow(this.formapagopuntoventa.getVersionRow());	
				formapagopuntoventaAux.setid_empresa(this.formapagopuntoventa.getid_empresa());	
				formapagopuntoventaAux.setid_sucursal(this.formapagopuntoventa.getid_sucursal());	
				formapagopuntoventaAux.setid_ejercicio(this.formapagopuntoventa.getid_ejercicio());	
				formapagopuntoventaAux.setid_periodo(this.formapagopuntoventa.getid_periodo());	
				formapagopuntoventaAux.setid_factura_punto_venta(this.formapagopuntoventa.getid_factura_punto_venta());	
				formapagopuntoventaAux.setid_tipo_forma_pago(this.formapagopuntoventa.getid_tipo_forma_pago());	
				formapagopuntoventaAux.setporcentaje(this.formapagopuntoventa.getporcentaje());	
				formapagopuntoventaAux.setvalor(this.formapagopuntoventa.getvalor());	
				formapagopuntoventaAux.setfecha(this.formapagopuntoventa.getfecha());	
				formapagopuntoventaAux.setdescripcion(this.formapagopuntoventa.getdescripcion());	
				formapagopuntoventaAux.setfecha_inicio(this.formapagopuntoventa.getfecha_inicio());	
				formapagopuntoventaAux.setnumero_dias_plazo(this.formapagopuntoventa.getnumero_dias_plazo());	
				formapagopuntoventaAux.setfecha_fin(this.formapagopuntoventa.getfecha_fin());	
				
				if(this.formapagopuntoventa.getid_banco()!=null && this.formapagopuntoventa.getid_banco()>0L) {
					formapagopuntoventaAux.setid_banco(this.formapagopuntoventa.getid_banco());
				} else {
					formapagopuntoventaAux.setid_banco(null);
				}	
				
				if(this.formapagopuntoventa.getid_cuenta_banco_pun_ven()!=null && this.formapagopuntoventa.getid_cuenta_banco_pun_ven()>0L) {
					formapagopuntoventaAux.setid_cuenta_banco_pun_ven(this.formapagopuntoventa.getid_cuenta_banco_pun_ven());
				} else {
					formapagopuntoventaAux.setid_cuenta_banco_pun_ven(null);
				}	
				
				if(this.formapagopuntoventa.getid_tipo_riesgo_cheque()!=null && this.formapagopuntoventa.getid_tipo_riesgo_cheque()>0L) {
					formapagopuntoventaAux.setid_tipo_riesgo_cheque(this.formapagopuntoventa.getid_tipo_riesgo_cheque());
				} else {
					formapagopuntoventaAux.setid_tipo_riesgo_cheque(null);
				}	
				formapagopuntoventaAux.setnumero_cuenta(this.formapagopuntoventa.getnumero_cuenta());	
				formapagopuntoventaAux.setnumero_cheque(this.formapagopuntoventa.getnumero_cheque());	
				formapagopuntoventaAux.setgirador(this.formapagopuntoventa.getgirador());	
				
				if(this.formapagopuntoventa.getid_banco_tarjeta()!=null && this.formapagopuntoventa.getid_banco_tarjeta()>0L) {
					formapagopuntoventaAux.setid_banco_tarjeta(this.formapagopuntoventa.getid_banco_tarjeta());
				} else {
					formapagopuntoventaAux.setid_banco_tarjeta(null);
				}	
				
				if(this.formapagopuntoventa.getid_tarjeta_credito()!=null && this.formapagopuntoventa.getid_tarjeta_credito()>0L) {
					formapagopuntoventaAux.setid_tarjeta_credito(this.formapagopuntoventa.getid_tarjeta_credito());
				} else {
					formapagopuntoventaAux.setid_tarjeta_credito(null);
				}	
				
				if(this.formapagopuntoventa.getid_tipo_interes_tarjeta()!=null && this.formapagopuntoventa.getid_tipo_interes_tarjeta()>0L) {
					formapagopuntoventaAux.setid_tipo_interes_tarjeta(this.formapagopuntoventa.getid_tipo_interes_tarjeta());
				} else {
					formapagopuntoventaAux.setid_tipo_interes_tarjeta(null);
				}	
				
				if(this.formapagopuntoventa.getid_tipo_pago_tarjeta()!=null && this.formapagopuntoventa.getid_tipo_pago_tarjeta()>0L) {
					formapagopuntoventaAux.setid_tipo_pago_tarjeta(this.formapagopuntoventa.getid_tipo_pago_tarjeta());
				} else {
					formapagopuntoventaAux.setid_tipo_pago_tarjeta(null);
				}	
				
				if(this.formapagopuntoventa.getid_conexion()!=null && this.formapagopuntoventa.getid_conexion()>0L) {
					formapagopuntoventaAux.setid_conexion(this.formapagopuntoventa.getid_conexion());
				} else {
					formapagopuntoventaAux.setid_conexion(null);
				}	
				formapagopuntoventaAux.setid_mes(this.formapagopuntoventa.getid_mes());	
				formapagopuntoventaAux.setnumero(this.formapagopuntoventa.getnumero());	
				formapagopuntoventaAux.settarjeta_habiente(this.formapagopuntoventa.gettarjeta_habiente());	
				formapagopuntoventaAux.setautorizacion(this.formapagopuntoventa.getautorizacion());	
				formapagopuntoventaAux.setvoucher(this.formapagopuntoventa.getvoucher());	
				formapagopuntoventaAux.setlote(this.formapagopuntoventa.getlote());	
				formapagopuntoventaAux.setcuota(this.formapagopuntoventa.getcuota());	
				formapagopuntoventaAux.setvalor_retencion(this.formapagopuntoventa.getvalor_retencion());	
				formapagopuntoventaAux.setvalor_comision(this.formapagopuntoventa.getvalor_comision());	
				formapagopuntoventaAux.setvalor_calculado(this.formapagopuntoventa.getvalor_calculado());	
				formapagopuntoventaAux.setvalor_cancelado(this.formapagopuntoventa.getvalor_cancelado());	
				formapagopuntoventaAux.setvalor_difiere(this.formapagopuntoventa.getvalor_difiere());	
				formapagopuntoventaAux.setnumero_retencion(this.formapagopuntoventa.getnumero_retencion());	
				formapagopuntoventaAux.setnumero_liquidacion(this.formapagopuntoventa.getnumero_liquidacion());	
				formapagopuntoventaAux.setid_anio(this.formapagopuntoventa.getid_anio());	
				
				if(this.formapagopuntoventa.getid_cuenta_contable()!=null && this.formapagopuntoventa.getid_cuenta_contable()>0L) {
					formapagopuntoventaAux.setid_cuenta_contable(this.formapagopuntoventa.getid_cuenta_contable());
				} else {
					formapagopuntoventaAux.setid_cuenta_contable(null);
				}	
				
				if(this.formapagopuntoventa.getid_asiento_contable()!=null && this.formapagopuntoventa.getid_asiento_contable()>0L) {
					formapagopuntoventaAux.setid_asiento_contable(this.formapagopuntoventa.getid_asiento_contable());
				} else {
					formapagopuntoventaAux.setid_asiento_contable(null);
				}	
				
				//ARCHITECTURE
				if(Constantes.ISUSAEJBLOGICLAYER) {
					actualizarLista(formapagopuntoventaAux,formapagopuntoventaLogic.getFormaPagoPuntoVentas());
				} else if(Constantes.ISUSAEJBREMOTE||Constantes.ISUSAEJBHOME) {
					actualizarLista(formapagopuntoventaAux,formapagopuntoventas);
				}
				//ARCHITECTURE
				
				if(!isGuardarCambiosEnLote && !this.formapagopuntoventaSessionBean.getEstaModoGuardarRelaciones() 
						&& !this.formapagopuntoventaSessionBean.getEsGuardarRelacionado())	{
					
					//ARCHITECTURE
					if(Constantes.ISUSAEJBLOGICLAYER) {
						formapagopuntoventaLogic.saveFormaPagoPuntoVentas();//WithConnection
						//formapagopuntoventaLogic.getSetVersionRowFormaPagoPuntoVentas();//WithConnection
					} else if(Constantes.ISUSAEJBREMOTE) {
					} else if(Constantes.ISUSAEJBHOME) {
					}	
					//ARCHITECTURE
					
					//TALVEZ ESTA DEMAS POR SER UPDATE
					//POR BUG: EL OBJETO ACTUAL SE PERDIA, POR LO QUE SE GUARDA TAMBIEN VALORES EN AUX Y LUEGO DESPUES DEL MENSAJE SE HACE REFERENCIA EL OBJETO ACTUAL AL AUX
					this.bugActualizarReferenciaActual(this.formapagopuntoventa,formapagopuntoventaAux);
					
					this.refrescarForeignKeysDescripcionesFormaPagoPuntoVenta();
				} else {
					//CUANDO ES MANTENIMIENTO MAESTRO DETALLE
					if(this.formapagopuntoventaSessionBean.getEstaModoGuardarRelaciones()) {
						//GUARDAR RELACIONES
						//ARCHITECTURE
						if(Constantes.ISUSAEJBLOGICLAYER) {
							
						} else if(Constantes.ISUSAEJBREMOTE ||Constantes.ISUSAEJBHOME) {
							
						}
						//ARCHITECTURE
						
						if(!this.formapagopuntoventaSessionBean.getEsGuardarRelacionado()) {
							//QUITAR FILA TOTAL
							//ARCHITECTURE
							if(Constantes.ISUSAEJBLOGICLAYER) {
							
							} else if(Constantes.ISUSAEJBREMOTE ||Constantes.ISUSAEJBHOME) {
								
							}
							//ARCHITECTURE
							
							//ARCHITECTURE
							if(Constantes.ISUSAEJBLOGICLAYER) {
								formapagopuntoventaLogic.saveFormaPagoPuntoVentaRelaciones(formapagopuntoventaAux);//WithConnection
								//formapagopuntoventaLogic.getSetVersionRowFormaPagoPuntoVentas();//WithConnection
							} else if(Constantes.ISUSAEJBREMOTE) {
							} else if(Constantes.ISUSAEJBHOME) {
							}
							//ARCHITECTURE
							
							//TALVEZ ESTA DEMAS POR SER UPDATE
							//POR BUG: EL OBJETO ACTUAL SE PERDIA, POR LO QUE SE GUARDA TAMBIEN VALORES EN AUX Y LUEGO DESPUES DEL MENSAJE SE HACE REFERENCIA EL OBJETO ACTUAL AL AUX
							this.bugActualizarReferenciaActual(this.formapagopuntoventa,formapagopuntoventaAux);
					
							//ARCHITECTURE
							if(Constantes.ISUSAEJBLOGICLAYER) {
								
							} else if(Constantes.ISUSAEJBREMOTE ||Constantes.ISUSAEJBHOME) {
								
							}
							//ARCHITECTURE
						} else {
							
							
							
							//ARCHITECTURE
							if(Constantes.ISUSAEJBLOGICLAYER) {
								if(this.formapagopuntoventaSessionBean.getEstaModoGuardarRelaciones() 
									|| this.formapagopuntoventaSessionBean.getEsGuardarRelacionado())	{
									actualizarLista(formapagopuntoventaAux,formapagopuntoventaLogic.getFormaPagoPuntoVentas());
								}
							} else if(Constantes.ISUSAEJBREMOTE||Constantes.ISUSAEJBHOME) {
								actualizarLista(formapagopuntoventaAux,formapagopuntoventas);
							}
							//ARCHITECTURE
							
							//AQUI EL ID NEGATIVO ES EL ID BUSCADO, YA QUE NO SE GENERA OTRO EN LA DB POR INGRESAR UNO NUEVO							
							//TALVEZ ESTA DEMAS POR SER UPDATE
							//POR BUG: EL OBJETO ACTUAL SE PERDIA, POR LO QUE SE GUARDA TAMBIEN VALORES EN AUX Y LUEGO DESPUES DEL MENSAJE SE HACE REFERENCIA EL OBJETO ACTUAL AL AUX
							//this.bugActualizarReferenciaActual(this.formapagopuntoventa,formapagopuntoventaAux);
					
						}
					}
				}				
			} else if(maintenanceType==MaintenanceType.ELIMINAR) {
				formapagopuntoventaAux=new  FormaPagoPuntoVenta();
				
				formapagopuntoventaAux.setIsNew(false);
				formapagopuntoventaAux.setIsChanged(false);
				
				formapagopuntoventaAux.setIsDeleted(true);
				
				formapagopuntoventaAux.setId(this.formapagopuntoventa.getId());	
				formapagopuntoventaAux.setVersionRow(this.formapagopuntoventa.getVersionRow());	
				formapagopuntoventaAux.setid_empresa(this.formapagopuntoventa.getid_empresa());	
				formapagopuntoventaAux.setid_sucursal(this.formapagopuntoventa.getid_sucursal());	
				formapagopuntoventaAux.setid_ejercicio(this.formapagopuntoventa.getid_ejercicio());	
				formapagopuntoventaAux.setid_periodo(this.formapagopuntoventa.getid_periodo());	
				formapagopuntoventaAux.setid_factura_punto_venta(this.formapagopuntoventa.getid_factura_punto_venta());	
				formapagopuntoventaAux.setid_tipo_forma_pago(this.formapagopuntoventa.getid_tipo_forma_pago());	
				formapagopuntoventaAux.setporcentaje(this.formapagopuntoventa.getporcentaje());	
				formapagopuntoventaAux.setvalor(this.formapagopuntoventa.getvalor());	
				formapagopuntoventaAux.setfecha(this.formapagopuntoventa.getfecha());	
				formapagopuntoventaAux.setdescripcion(this.formapagopuntoventa.getdescripcion());	
				formapagopuntoventaAux.setfecha_inicio(this.formapagopuntoventa.getfecha_inicio());	
				formapagopuntoventaAux.setnumero_dias_plazo(this.formapagopuntoventa.getnumero_dias_plazo());	
				formapagopuntoventaAux.setfecha_fin(this.formapagopuntoventa.getfecha_fin());	
				
				if(this.formapagopuntoventa.getid_banco()!=null && this.formapagopuntoventa.getid_banco()>0L) {
					formapagopuntoventaAux.setid_banco(this.formapagopuntoventa.getid_banco());
				} else {
					formapagopuntoventaAux.setid_banco(null);
				}	
				
				if(this.formapagopuntoventa.getid_cuenta_banco_pun_ven()!=null && this.formapagopuntoventa.getid_cuenta_banco_pun_ven()>0L) {
					formapagopuntoventaAux.setid_cuenta_banco_pun_ven(this.formapagopuntoventa.getid_cuenta_banco_pun_ven());
				} else {
					formapagopuntoventaAux.setid_cuenta_banco_pun_ven(null);
				}	
				
				if(this.formapagopuntoventa.getid_tipo_riesgo_cheque()!=null && this.formapagopuntoventa.getid_tipo_riesgo_cheque()>0L) {
					formapagopuntoventaAux.setid_tipo_riesgo_cheque(this.formapagopuntoventa.getid_tipo_riesgo_cheque());
				} else {
					formapagopuntoventaAux.setid_tipo_riesgo_cheque(null);
				}	
				formapagopuntoventaAux.setnumero_cuenta(this.formapagopuntoventa.getnumero_cuenta());	
				formapagopuntoventaAux.setnumero_cheque(this.formapagopuntoventa.getnumero_cheque());	
				formapagopuntoventaAux.setgirador(this.formapagopuntoventa.getgirador());	
				
				if(this.formapagopuntoventa.getid_banco_tarjeta()!=null && this.formapagopuntoventa.getid_banco_tarjeta()>0L) {
					formapagopuntoventaAux.setid_banco_tarjeta(this.formapagopuntoventa.getid_banco_tarjeta());
				} else {
					formapagopuntoventaAux.setid_banco_tarjeta(null);
				}	
				
				if(this.formapagopuntoventa.getid_tarjeta_credito()!=null && this.formapagopuntoventa.getid_tarjeta_credito()>0L) {
					formapagopuntoventaAux.setid_tarjeta_credito(this.formapagopuntoventa.getid_tarjeta_credito());
				} else {
					formapagopuntoventaAux.setid_tarjeta_credito(null);
				}	
				
				if(this.formapagopuntoventa.getid_tipo_interes_tarjeta()!=null && this.formapagopuntoventa.getid_tipo_interes_tarjeta()>0L) {
					formapagopuntoventaAux.setid_tipo_interes_tarjeta(this.formapagopuntoventa.getid_tipo_interes_tarjeta());
				} else {
					formapagopuntoventaAux.setid_tipo_interes_tarjeta(null);
				}	
				
				if(this.formapagopuntoventa.getid_tipo_pago_tarjeta()!=null && this.formapagopuntoventa.getid_tipo_pago_tarjeta()>0L) {
					formapagopuntoventaAux.setid_tipo_pago_tarjeta(this.formapagopuntoventa.getid_tipo_pago_tarjeta());
				} else {
					formapagopuntoventaAux.setid_tipo_pago_tarjeta(null);
				}	
				
				if(this.formapagopuntoventa.getid_conexion()!=null && this.formapagopuntoventa.getid_conexion()>0L) {
					formapagopuntoventaAux.setid_conexion(this.formapagopuntoventa.getid_conexion());
				} else {
					formapagopuntoventaAux.setid_conexion(null);
				}	
				formapagopuntoventaAux.setid_mes(this.formapagopuntoventa.getid_mes());	
				formapagopuntoventaAux.setnumero(this.formapagopuntoventa.getnumero());	
				formapagopuntoventaAux.settarjeta_habiente(this.formapagopuntoventa.gettarjeta_habiente());	
				formapagopuntoventaAux.setautorizacion(this.formapagopuntoventa.getautorizacion());	
				formapagopuntoventaAux.setvoucher(this.formapagopuntoventa.getvoucher());	
				formapagopuntoventaAux.setlote(this.formapagopuntoventa.getlote());	
				formapagopuntoventaAux.setcuota(this.formapagopuntoventa.getcuota());	
				formapagopuntoventaAux.setvalor_retencion(this.formapagopuntoventa.getvalor_retencion());	
				formapagopuntoventaAux.setvalor_comision(this.formapagopuntoventa.getvalor_comision());	
				formapagopuntoventaAux.setvalor_calculado(this.formapagopuntoventa.getvalor_calculado());	
				formapagopuntoventaAux.setvalor_cancelado(this.formapagopuntoventa.getvalor_cancelado());	
				formapagopuntoventaAux.setvalor_difiere(this.formapagopuntoventa.getvalor_difiere());	
				formapagopuntoventaAux.setnumero_retencion(this.formapagopuntoventa.getnumero_retencion());	
				formapagopuntoventaAux.setnumero_liquidacion(this.formapagopuntoventa.getnumero_liquidacion());	
				formapagopuntoventaAux.setid_anio(this.formapagopuntoventa.getid_anio());	
				
				if(this.formapagopuntoventa.getid_cuenta_contable()!=null && this.formapagopuntoventa.getid_cuenta_contable()>0L) {
					formapagopuntoventaAux.setid_cuenta_contable(this.formapagopuntoventa.getid_cuenta_contable());
				} else {
					formapagopuntoventaAux.setid_cuenta_contable(null);
				}	
				
				if(this.formapagopuntoventa.getid_asiento_contable()!=null && this.formapagopuntoventa.getid_asiento_contable()>0L) {
					formapagopuntoventaAux.setid_asiento_contable(this.formapagopuntoventa.getid_asiento_contable());
				} else {
					formapagopuntoventaAux.setid_asiento_contable(null);
				}	
				
				if(this.formapagopuntoventaSessionBean.getEsGuardarRelacionado()) {
					//ELEMENTO ACTUAL NO SE HA INGRESADO AL SISTEMA, NO SE PUEDE ELIMINAR ALGO QUE NO EXISTE
					if(this.formapagopuntoventaAux.getId()>=0) {	
						this.formapagopuntoventasEliminados.add(formapagopuntoventaAux);											
					}
				}
				
				//ARCHITECTURE
				if(Constantes.ISUSAEJBLOGICLAYER) {				
					actualizarLista(formapagopuntoventaAux,formapagopuntoventaLogic.getFormaPagoPuntoVentas());
				} else if(Constantes.ISUSAEJBREMOTE||Constantes.ISUSAEJBHOME) {
					actualizarLista(formapagopuntoventaAux,formapagopuntoventas);
				}
				//ARCHITECTURE
				
				
				if(!isGuardarCambiosEnLote && !this.formapagopuntoventaSessionBean.getEstaModoGuardarRelaciones() 
						&& !this.formapagopuntoventaSessionBean.getEsGuardarRelacionado())	{
					
					//ARCHITECTURE
					if(Constantes.ISUSAEJBLOGICLAYER) {
						formapagopuntoventaLogic.saveFormaPagoPuntoVentas();//WithConnection
						//formapagopuntoventaLogic.getSetVersionRowFormaPagoPuntoVentas();//WithConnection
					} else if(Constantes.ISUSAEJBREMOTE) {
					} else if(Constantes.ISUSAEJBHOME) {
					}	
					//ARCHITECTURE
				} else {
					//CUANDO ES MANTENIMIENTO MAESTRO DETALLE
					if(this.formapagopuntoventaSessionBean.getEstaModoGuardarRelaciones()) {
						//GUARDAR RELACIONES
						//ARCHITECTURE
						if(Constantes.ISUSAEJBLOGICLAYER) {
							
						} else if(Constantes.ISUSAEJBREMOTE ||Constantes.ISUSAEJBHOME) {
							
						}
						//ARCHITECTURE
						
						
						if(!this.formapagopuntoventaSessionBean.getEsGuardarRelacionado()) {
							//QUITAR FILA TOTAL
							//ARCHITECTURE
							if(Constantes.ISUSAEJBLOGICLAYER) {
							
							} else if(Constantes.ISUSAEJBREMOTE ||Constantes.ISUSAEJBHOME) {
								
							}
							//ARCHITECTURE
							
							//ARCHITECTURE
							if(Constantes.ISUSAEJBLOGICLAYER) {
								formapagopuntoventaLogic.saveFormaPagoPuntoVentaRelaciones(formapagopuntoventaAux);//WithConnection
								//formapagopuntoventaLogic.getSetVersionRowFormaPagoPuntoVentas();//WithConnection
							} else if(Constantes.ISUSAEJBREMOTE) {
							} else if(Constantes.ISUSAEJBHOME) {
							}
							//ARCHITECTURE
							
							//ARCHITECTURE
							if(Constantes.ISUSAEJBLOGICLAYER) {
								
							} else if(Constantes.ISUSAEJBREMOTE ||Constantes.ISUSAEJBHOME) {
								
							}
							//ARCHITECTURE
						}
					}  else {
							
						
								
						//ARCHITECTURE
						if(Constantes.ISUSAEJBLOGICLAYER) {
							if(this.formapagopuntoventaSessionBean.getEstaModoGuardarRelaciones() 
								|| this.formapagopuntoventaSessionBean.getEsGuardarRelacionado())	{
								actualizarLista(formapagopuntoventaAux,formapagopuntoventaLogic.getFormaPagoPuntoVentas());
							}
						} else if(Constantes.ISUSAEJBREMOTE||Constantes.ISUSAEJBHOME) {
							actualizarLista(formapagopuntoventaAux,formapagopuntoventas);
						}
						//ARCHITECTURE
					}
				}				
			} else if(maintenanceType==MaintenanceType.GUARDARCAMBIOS) {		
				
				//ARCHITECTURE
				if(Constantes.ISUSAEJBLOGICLAYER) {
					this.formapagopuntoventaLogic.getFormaPagoPuntoVentas().addAll(this.formapagopuntoventasEliminados);
					
					formapagopuntoventaLogic.saveFormaPagoPuntoVentas();//WithConnection
					//formapagopuntoventaLogic.getSetVersionRowFormaPagoPuntoVentas();//WithConnection
				} else if(Constantes.ISUSAEJBREMOTE) {
				} else if(Constantes.ISUSAEJBHOME) {
				}	
				//ARCHITECTURE
				this.refrescarForeignKeysDescripcionesFormaPagoPuntoVenta();
				
				this.formapagopuntoventasEliminados= new ArrayList<FormaPagoPuntoVenta>();		
			}
			
			if(this.formapagopuntoventaSessionBean.getEsGuardarRelacionado()) {
				 this.crearFilaTotales();
			}
			
			
									
			if(this.parametroGeneralUsuario.getcon_mensaje_confirmacion() && !this.formapagopuntoventaSessionBean.getEsGuardarRelacionado()) {//Constantes.ISMOSTRARMENSAJESMANTENIMIENTO && 
				if(!this.isPostAccionSinMensaje) {
					JOptionPane.showMessageDialog(this,"Forma Pago GUARDADO CORRECTAMENTE","MANTENIMIENTO DE Forma Pago",JOptionPane.INFORMATION_MESSAGE);
					if(maintenanceType==MaintenanceType.NUEVO || maintenanceType==MaintenanceType.ACTUALIZAR) {
						//CUANDO ES NUEVO SE PIERDE REFERENCIA NO SE PORQUE
						this.formapagopuntoventa=formapagopuntoventaAux;
					}
				}
			}
			
			this.isErrorGuardar=false;
			
			this.inicializarInvalidValues();
		/*
		} else {
			this.mostrarInvalidValues();	
		}
		*/
			
		} catch(Exception e) {
			this.isErrorGuardar=true;
			
			this.crearFilaTotales();
			
			throw e;
		} finally {
      		//this.finishProcessFormaPagoPuntoVenta();
      	}
		
	}	
	
	public void actualizarRelaciones(FormaPagoPuntoVenta formapagopuntoventaLocal) throws Exception {
		
		if(this.formapagopuntoventaSessionBean.getConGuardarRelaciones()) {			
			
			if(Constantes.ISUSAEJBLOGICLAYER) {
			
			
			} else {
				
			}
		}
	}
	
	public void actualizarRelacionFkPadreActual(FormaPagoPuntoVenta formapagopuntoventaLocal) throws Exception {	
		if(this.formapagopuntoventaSessionBean.getEsGuardarRelacionado()) {			
			
		
			if(this.jInternalFrameParent.getClass().equals(EmpresaDetalleFormJInternalFrame.class)) {
				EmpresaBeanSwingJInternalFrame empresaBeanSwingJInternalFrameLocal=(EmpresaBeanSwingJInternalFrame) ((EmpresaDetalleFormJInternalFrame) this.jInternalFrameParent).jInternalFrameParent;

				empresaBeanSwingJInternalFrameLocal.setVariablesFormularioToObjetoActualTodoEmpresa(empresaBeanSwingJInternalFrameLocal.getempresa(),true);
				empresaBeanSwingJInternalFrameLocal.actualizarLista(empresaBeanSwingJInternalFrameLocal.empresa,this.empresasForeignKey);

				empresaBeanSwingJInternalFrameLocal.actualizarRelaciones(empresaBeanSwingJInternalFrameLocal.empresa);

				formapagopuntoventaLocal.setEmpresa(empresaBeanSwingJInternalFrameLocal.empresa);

				this.addItemDefectoCombosForeignKeyEmpresa();
				this.cargarCombosFrameEmpresasForeignKey("Formulario");
				this.setActualEmpresaForeignKey(empresaBeanSwingJInternalFrameLocal.empresa.getId(),false,"Formulario");
			}
			 else if(this.jInternalFrameParent.getClass().equals(SucursalDetalleFormJInternalFrame.class)) {
				SucursalBeanSwingJInternalFrame sucursalBeanSwingJInternalFrameLocal=(SucursalBeanSwingJInternalFrame) ((SucursalDetalleFormJInternalFrame) this.jInternalFrameParent).jInternalFrameParent;

				sucursalBeanSwingJInternalFrameLocal.setVariablesFormularioToObjetoActualTodoSucursal(sucursalBeanSwingJInternalFrameLocal.getsucursal(),true);
				sucursalBeanSwingJInternalFrameLocal.actualizarLista(sucursalBeanSwingJInternalFrameLocal.sucursal,this.sucursalsForeignKey);

				sucursalBeanSwingJInternalFrameLocal.actualizarRelaciones(sucursalBeanSwingJInternalFrameLocal.sucursal);

				formapagopuntoventaLocal.setSucursal(sucursalBeanSwingJInternalFrameLocal.sucursal);

				this.addItemDefectoCombosForeignKeySucursal();
				this.cargarCombosFrameSucursalsForeignKey("Formulario");
				this.setActualSucursalForeignKey(sucursalBeanSwingJInternalFrameLocal.sucursal.getId(),false,"Formulario");
			}
			 else if(this.jInternalFrameParent.getClass().equals(EjercicioDetalleFormJInternalFrame.class)) {
				EjercicioBeanSwingJInternalFrame ejercicioBeanSwingJInternalFrameLocal=(EjercicioBeanSwingJInternalFrame) ((EjercicioDetalleFormJInternalFrame) this.jInternalFrameParent).jInternalFrameParent;

				ejercicioBeanSwingJInternalFrameLocal.setVariablesFormularioToObjetoActualTodoEjercicio(ejercicioBeanSwingJInternalFrameLocal.getejercicio(),true);
				ejercicioBeanSwingJInternalFrameLocal.actualizarLista(ejercicioBeanSwingJInternalFrameLocal.ejercicio,this.ejerciciosForeignKey);

				ejercicioBeanSwingJInternalFrameLocal.actualizarRelaciones(ejercicioBeanSwingJInternalFrameLocal.ejercicio);

				formapagopuntoventaLocal.setEjercicio(ejercicioBeanSwingJInternalFrameLocal.ejercicio);

				this.addItemDefectoCombosForeignKeyEjercicio();
				this.cargarCombosFrameEjerciciosForeignKey("Formulario");
				this.setActualEjercicioForeignKey(ejercicioBeanSwingJInternalFrameLocal.ejercicio.getId(),false,"Formulario");
			}
			 else if(this.jInternalFrameParent.getClass().equals(PeriodoDetalleFormJInternalFrame.class)) {
				PeriodoBeanSwingJInternalFrame periodoBeanSwingJInternalFrameLocal=(PeriodoBeanSwingJInternalFrame) ((PeriodoDetalleFormJInternalFrame) this.jInternalFrameParent).jInternalFrameParent;

				periodoBeanSwingJInternalFrameLocal.setVariablesFormularioToObjetoActualTodoPeriodo(periodoBeanSwingJInternalFrameLocal.getperiodo(),true);
				periodoBeanSwingJInternalFrameLocal.actualizarLista(periodoBeanSwingJInternalFrameLocal.periodo,this.periodosForeignKey);

				periodoBeanSwingJInternalFrameLocal.actualizarRelaciones(periodoBeanSwingJInternalFrameLocal.periodo);

				formapagopuntoventaLocal.setPeriodo(periodoBeanSwingJInternalFrameLocal.periodo);

				this.addItemDefectoCombosForeignKeyPeriodo();
				this.cargarCombosFramePeriodosForeignKey("Formulario");
				this.setActualPeriodoForeignKey(periodoBeanSwingJInternalFrameLocal.periodo.getId(),false,"Formulario");
			}
			 else if(this.jInternalFrameParent.getClass().equals(FacturaPuntoVentaDetalleFormJInternalFrame.class)) {
				FacturaPuntoVentaBeanSwingJInternalFrame facturapuntoventaBeanSwingJInternalFrameLocal=(FacturaPuntoVentaBeanSwingJInternalFrame) ((FacturaPuntoVentaDetalleFormJInternalFrame) this.jInternalFrameParent).jInternalFrameParent;

				facturapuntoventaBeanSwingJInternalFrameLocal.setVariablesFormularioToObjetoActualTodoFacturaPuntoVenta(facturapuntoventaBeanSwingJInternalFrameLocal.getfacturapuntoventa(),true);
				facturapuntoventaBeanSwingJInternalFrameLocal.actualizarLista(facturapuntoventaBeanSwingJInternalFrameLocal.facturapuntoventa,this.facturapuntoventasForeignKey);

				facturapuntoventaBeanSwingJInternalFrameLocal.actualizarRelaciones(facturapuntoventaBeanSwingJInternalFrameLocal.facturapuntoventa);

				formapagopuntoventaLocal.setFacturaPuntoVenta(facturapuntoventaBeanSwingJInternalFrameLocal.facturapuntoventa);

				this.addItemDefectoCombosForeignKeyFacturaPuntoVenta();
				this.cargarCombosFrameFacturaPuntoVentasForeignKey("Formulario");
				this.setActualFacturaPuntoVentaForeignKey(facturapuntoventaBeanSwingJInternalFrameLocal.facturapuntoventa.getId(),false,"Formulario");
			}
			 else if(this.jInternalFrameParent.getClass().equals(TipoFormaPagoDetalleFormJInternalFrame.class)) {
				TipoFormaPagoBeanSwingJInternalFrame tipoformapagoBeanSwingJInternalFrameLocal=(TipoFormaPagoBeanSwingJInternalFrame) ((TipoFormaPagoDetalleFormJInternalFrame) this.jInternalFrameParent).jInternalFrameParent;

				tipoformapagoBeanSwingJInternalFrameLocal.setVariablesFormularioToObjetoActualTodoTipoFormaPago(tipoformapagoBeanSwingJInternalFrameLocal.gettipoformapago(),true);
				tipoformapagoBeanSwingJInternalFrameLocal.actualizarLista(tipoformapagoBeanSwingJInternalFrameLocal.tipoformapago,this.tipoformapagosForeignKey);

				tipoformapagoBeanSwingJInternalFrameLocal.actualizarRelaciones(tipoformapagoBeanSwingJInternalFrameLocal.tipoformapago);

				formapagopuntoventaLocal.setTipoFormaPago(tipoformapagoBeanSwingJInternalFrameLocal.tipoformapago);

				this.addItemDefectoCombosForeignKeyTipoFormaPago();
				this.cargarCombosFrameTipoFormaPagosForeignKey("Formulario");
				this.setActualTipoFormaPagoForeignKey(tipoformapagoBeanSwingJInternalFrameLocal.tipoformapago.getId(),false,"Formulario");
			}
			 else if(this.jInternalFrameParent.getClass().equals(BancoDetalleFormJInternalFrame.class)) {
				BancoBeanSwingJInternalFrame bancoBeanSwingJInternalFrameLocal=(BancoBeanSwingJInternalFrame) ((BancoDetalleFormJInternalFrame) this.jInternalFrameParent).jInternalFrameParent;

				bancoBeanSwingJInternalFrameLocal.setVariablesFormularioToObjetoActualTodoBanco(bancoBeanSwingJInternalFrameLocal.getbanco(),true);
				bancoBeanSwingJInternalFrameLocal.actualizarLista(bancoBeanSwingJInternalFrameLocal.banco,this.bancosForeignKey);

				bancoBeanSwingJInternalFrameLocal.actualizarRelaciones(bancoBeanSwingJInternalFrameLocal.banco);

				formapagopuntoventaLocal.setBanco(bancoBeanSwingJInternalFrameLocal.banco);

				this.addItemDefectoCombosForeignKeyBanco();
				this.cargarCombosFrameBancosForeignKey("Formulario");
				this.setActualBancoForeignKey(bancoBeanSwingJInternalFrameLocal.banco.getId(),false,"Formulario");
			}
			 else if(this.jInternalFrameParent.getClass().equals(CuentaBancoPunVenDetalleFormJInternalFrame.class)) {
				CuentaBancoPunVenBeanSwingJInternalFrame cuentabancopunvenBeanSwingJInternalFrameLocal=(CuentaBancoPunVenBeanSwingJInternalFrame) ((CuentaBancoPunVenDetalleFormJInternalFrame) this.jInternalFrameParent).jInternalFrameParent;

				cuentabancopunvenBeanSwingJInternalFrameLocal.setVariablesFormularioToObjetoActualTodoCuentaBancoPunVen(cuentabancopunvenBeanSwingJInternalFrameLocal.getcuentabancopunven(),true);
				cuentabancopunvenBeanSwingJInternalFrameLocal.actualizarLista(cuentabancopunvenBeanSwingJInternalFrameLocal.cuentabancopunven,this.cuentabancopunvensForeignKey);

				cuentabancopunvenBeanSwingJInternalFrameLocal.actualizarRelaciones(cuentabancopunvenBeanSwingJInternalFrameLocal.cuentabancopunven);

				formapagopuntoventaLocal.setCuentaBancoPunVen(cuentabancopunvenBeanSwingJInternalFrameLocal.cuentabancopunven);

				this.addItemDefectoCombosForeignKeyCuentaBancoPunVen();
				this.cargarCombosFrameCuentaBancoPunVensForeignKey("Formulario");
				this.setActualCuentaBancoPunVenForeignKey(cuentabancopunvenBeanSwingJInternalFrameLocal.cuentabancopunven.getId(),false,"Formulario");
			}
			 else if(this.jInternalFrameParent.getClass().equals(TipoRiesgoChequeDetalleFormJInternalFrame.class)) {
				TipoRiesgoChequeBeanSwingJInternalFrame tiporiesgochequeBeanSwingJInternalFrameLocal=(TipoRiesgoChequeBeanSwingJInternalFrame) ((TipoRiesgoChequeDetalleFormJInternalFrame) this.jInternalFrameParent).jInternalFrameParent;

				tiporiesgochequeBeanSwingJInternalFrameLocal.setVariablesFormularioToObjetoActualTodoTipoRiesgoCheque(tiporiesgochequeBeanSwingJInternalFrameLocal.gettiporiesgocheque(),true);
				tiporiesgochequeBeanSwingJInternalFrameLocal.actualizarLista(tiporiesgochequeBeanSwingJInternalFrameLocal.tiporiesgocheque,this.tiporiesgochequesForeignKey);

				tiporiesgochequeBeanSwingJInternalFrameLocal.actualizarRelaciones(tiporiesgochequeBeanSwingJInternalFrameLocal.tiporiesgocheque);

				formapagopuntoventaLocal.setTipoRiesgoCheque(tiporiesgochequeBeanSwingJInternalFrameLocal.tiporiesgocheque);

				this.addItemDefectoCombosForeignKeyTipoRiesgoCheque();
				this.cargarCombosFrameTipoRiesgoChequesForeignKey("Formulario");
				this.setActualTipoRiesgoChequeForeignKey(tiporiesgochequeBeanSwingJInternalFrameLocal.tiporiesgocheque.getId(),false,"Formulario");
			}
			 else if(this.jInternalFrameParent.getClass().equals(BancoDetalleFormJInternalFrame.class)) {
				BancoBeanSwingJInternalFrame bancotarjetaBeanSwingJInternalFrameLocal=(BancoBeanSwingJInternalFrame) ((BancoDetalleFormJInternalFrame) this.jInternalFrameParent).jInternalFrameParent;

				bancotarjetaBeanSwingJInternalFrameLocal.setVariablesFormularioToObjetoActualTodoBanco(bancotarjetaBeanSwingJInternalFrameLocal.getbanco(),true);
				bancotarjetaBeanSwingJInternalFrameLocal.actualizarLista(bancotarjetaBeanSwingJInternalFrameLocal.banco,this.bancotarjetasForeignKey);

				bancotarjetaBeanSwingJInternalFrameLocal.actualizarRelaciones(bancotarjetaBeanSwingJInternalFrameLocal.banco);

				formapagopuntoventaLocal.setBancoTarjeta(bancotarjetaBeanSwingJInternalFrameLocal.banco);

				this.addItemDefectoCombosForeignKeyBancoTarjeta();
				this.cargarCombosFrameBancoTarjetasForeignKey("Formulario");
				this.setActualBancoTarjetaForeignKey(bancotarjetaBeanSwingJInternalFrameLocal.banco.getId(),false,"Formulario");
			}
			 else if(this.jInternalFrameParent.getClass().equals(TarjetaCreditoDetalleFormJInternalFrame.class)) {
				TarjetaCreditoBeanSwingJInternalFrame tarjetacreditoBeanSwingJInternalFrameLocal=(TarjetaCreditoBeanSwingJInternalFrame) ((TarjetaCreditoDetalleFormJInternalFrame) this.jInternalFrameParent).jInternalFrameParent;

				tarjetacreditoBeanSwingJInternalFrameLocal.setVariablesFormularioToObjetoActualTodoTarjetaCredito(tarjetacreditoBeanSwingJInternalFrameLocal.gettarjetacredito(),true);
				tarjetacreditoBeanSwingJInternalFrameLocal.actualizarLista(tarjetacreditoBeanSwingJInternalFrameLocal.tarjetacredito,this.tarjetacreditosForeignKey);

				tarjetacreditoBeanSwingJInternalFrameLocal.actualizarRelaciones(tarjetacreditoBeanSwingJInternalFrameLocal.tarjetacredito);

				formapagopuntoventaLocal.setTarjetaCredito(tarjetacreditoBeanSwingJInternalFrameLocal.tarjetacredito);

				this.addItemDefectoCombosForeignKeyTarjetaCredito();
				this.cargarCombosFrameTarjetaCreditosForeignKey("Formulario");
				this.setActualTarjetaCreditoForeignKey(tarjetacreditoBeanSwingJInternalFrameLocal.tarjetacredito.getId(),false,"Formulario");
			}
			 else if(this.jInternalFrameParent.getClass().equals(TipoInteresTarjetaDetalleFormJInternalFrame.class)) {
				TipoInteresTarjetaBeanSwingJInternalFrame tipointerestarjetaBeanSwingJInternalFrameLocal=(TipoInteresTarjetaBeanSwingJInternalFrame) ((TipoInteresTarjetaDetalleFormJInternalFrame) this.jInternalFrameParent).jInternalFrameParent;

				tipointerestarjetaBeanSwingJInternalFrameLocal.setVariablesFormularioToObjetoActualTodoTipoInteresTarjeta(tipointerestarjetaBeanSwingJInternalFrameLocal.gettipointerestarjeta(),true);
				tipointerestarjetaBeanSwingJInternalFrameLocal.actualizarLista(tipointerestarjetaBeanSwingJInternalFrameLocal.tipointerestarjeta,this.tipointerestarjetasForeignKey);

				tipointerestarjetaBeanSwingJInternalFrameLocal.actualizarRelaciones(tipointerestarjetaBeanSwingJInternalFrameLocal.tipointerestarjeta);

				formapagopuntoventaLocal.setTipoInteresTarjeta(tipointerestarjetaBeanSwingJInternalFrameLocal.tipointerestarjeta);

				this.addItemDefectoCombosForeignKeyTipoInteresTarjeta();
				this.cargarCombosFrameTipoInteresTarjetasForeignKey("Formulario");
				this.setActualTipoInteresTarjetaForeignKey(tipointerestarjetaBeanSwingJInternalFrameLocal.tipointerestarjeta.getId(),false,"Formulario");
			}
			 else if(this.jInternalFrameParent.getClass().equals(TipoPagoTarjetaDetalleFormJInternalFrame.class)) {
				TipoPagoTarjetaBeanSwingJInternalFrame tipopagotarjetaBeanSwingJInternalFrameLocal=(TipoPagoTarjetaBeanSwingJInternalFrame) ((TipoPagoTarjetaDetalleFormJInternalFrame) this.jInternalFrameParent).jInternalFrameParent;

				tipopagotarjetaBeanSwingJInternalFrameLocal.setVariablesFormularioToObjetoActualTodoTipoPagoTarjeta(tipopagotarjetaBeanSwingJInternalFrameLocal.gettipopagotarjeta(),true);
				tipopagotarjetaBeanSwingJInternalFrameLocal.actualizarLista(tipopagotarjetaBeanSwingJInternalFrameLocal.tipopagotarjeta,this.tipopagotarjetasForeignKey);

				tipopagotarjetaBeanSwingJInternalFrameLocal.actualizarRelaciones(tipopagotarjetaBeanSwingJInternalFrameLocal.tipopagotarjeta);

				formapagopuntoventaLocal.setTipoPagoTarjeta(tipopagotarjetaBeanSwingJInternalFrameLocal.tipopagotarjeta);

				this.addItemDefectoCombosForeignKeyTipoPagoTarjeta();
				this.cargarCombosFrameTipoPagoTarjetasForeignKey("Formulario");
				this.setActualTipoPagoTarjetaForeignKey(tipopagotarjetaBeanSwingJInternalFrameLocal.tipopagotarjeta.getId(),false,"Formulario");
			}
			 else if(this.jInternalFrameParent.getClass().equals(ConexionDetalleFormJInternalFrame.class)) {
				ConexionBeanSwingJInternalFrame conexionBeanSwingJInternalFrameLocal=(ConexionBeanSwingJInternalFrame) ((ConexionDetalleFormJInternalFrame) this.jInternalFrameParent).jInternalFrameParent;

				conexionBeanSwingJInternalFrameLocal.setVariablesFormularioToObjetoActualTodoConexion(conexionBeanSwingJInternalFrameLocal.getconexion(),true);
				conexionBeanSwingJInternalFrameLocal.actualizarLista(conexionBeanSwingJInternalFrameLocal.conexion,this.conexionsForeignKey);

				conexionBeanSwingJInternalFrameLocal.actualizarRelaciones(conexionBeanSwingJInternalFrameLocal.conexion);

				formapagopuntoventaLocal.setConexion(conexionBeanSwingJInternalFrameLocal.conexion);

				this.addItemDefectoCombosForeignKeyConexion();
				this.cargarCombosFrameConexionsForeignKey("Formulario");
				this.setActualConexionForeignKey(conexionBeanSwingJInternalFrameLocal.conexion.getId(),false,"Formulario");
			}
			 else if(this.jInternalFrameParent.getClass().equals(MesDetalleFormJInternalFrame.class)) {
				MesBeanSwingJInternalFrame mesBeanSwingJInternalFrameLocal=(MesBeanSwingJInternalFrame) ((MesDetalleFormJInternalFrame) this.jInternalFrameParent).jInternalFrameParent;

				mesBeanSwingJInternalFrameLocal.setVariablesFormularioToObjetoActualTodoMes(mesBeanSwingJInternalFrameLocal.getmes(),true);
				mesBeanSwingJInternalFrameLocal.actualizarLista(mesBeanSwingJInternalFrameLocal.mes,this.messForeignKey);

				mesBeanSwingJInternalFrameLocal.actualizarRelaciones(mesBeanSwingJInternalFrameLocal.mes);

				formapagopuntoventaLocal.setMes(mesBeanSwingJInternalFrameLocal.mes);

				this.addItemDefectoCombosForeignKeyMes();
				this.cargarCombosFrameMessForeignKey("Formulario");
				this.setActualMesForeignKey(mesBeanSwingJInternalFrameLocal.mes.getId(),false,"Formulario");
			}
			 else if(this.jInternalFrameParent.getClass().equals(AnioDetalleFormJInternalFrame.class)) {
				AnioBeanSwingJInternalFrame anioBeanSwingJInternalFrameLocal=(AnioBeanSwingJInternalFrame) ((AnioDetalleFormJInternalFrame) this.jInternalFrameParent).jInternalFrameParent;

				anioBeanSwingJInternalFrameLocal.setVariablesFormularioToObjetoActualTodoAnio(anioBeanSwingJInternalFrameLocal.getanio(),true);
				anioBeanSwingJInternalFrameLocal.actualizarLista(anioBeanSwingJInternalFrameLocal.anio,this.aniosForeignKey);

				anioBeanSwingJInternalFrameLocal.actualizarRelaciones(anioBeanSwingJInternalFrameLocal.anio);

				formapagopuntoventaLocal.setAnio(anioBeanSwingJInternalFrameLocal.anio);

				this.addItemDefectoCombosForeignKeyAnio();
				this.cargarCombosFrameAniosForeignKey("Formulario");
				this.setActualAnioForeignKey(anioBeanSwingJInternalFrameLocal.anio.getId(),false,"Formulario");
			}
			 else if(this.jInternalFrameParent.getClass().equals(CuentaContableDetalleFormJInternalFrame.class)) {
				CuentaContableBeanSwingJInternalFrame cuentacontableBeanSwingJInternalFrameLocal=(CuentaContableBeanSwingJInternalFrame) ((CuentaContableDetalleFormJInternalFrame) this.jInternalFrameParent).jInternalFrameParent;

				cuentacontableBeanSwingJInternalFrameLocal.setVariablesFormularioToObjetoActualTodoCuentaContable(cuentacontableBeanSwingJInternalFrameLocal.getcuentacontable(),true);
				cuentacontableBeanSwingJInternalFrameLocal.actualizarLista(cuentacontableBeanSwingJInternalFrameLocal.cuentacontable,this.cuentacontablesForeignKey);

				cuentacontableBeanSwingJInternalFrameLocal.actualizarRelaciones(cuentacontableBeanSwingJInternalFrameLocal.cuentacontable);

				formapagopuntoventaLocal.setCuentaContable(cuentacontableBeanSwingJInternalFrameLocal.cuentacontable);

				this.addItemDefectoCombosForeignKeyCuentaContable();
				this.cargarCombosFrameCuentaContablesForeignKey("Formulario");
				this.setActualCuentaContableForeignKey(cuentacontableBeanSwingJInternalFrameLocal.cuentacontable.getId(),false,"Formulario");
			}
			 else if(this.jInternalFrameParent.getClass().equals(AsientoContableDetalleFormJInternalFrame.class)) {
				AsientoContableBeanSwingJInternalFrame asientocontableBeanSwingJInternalFrameLocal=(AsientoContableBeanSwingJInternalFrame) ((AsientoContableDetalleFormJInternalFrame) this.jInternalFrameParent).jInternalFrameParent;

				asientocontableBeanSwingJInternalFrameLocal.setVariablesFormularioToObjetoActualTodoAsientoContable(asientocontableBeanSwingJInternalFrameLocal.getasientocontable(),true);
				asientocontableBeanSwingJInternalFrameLocal.actualizarLista(asientocontableBeanSwingJInternalFrameLocal.asientocontable,this.asientocontablesForeignKey);

				asientocontableBeanSwingJInternalFrameLocal.actualizarRelaciones(asientocontableBeanSwingJInternalFrameLocal.asientocontable);

				formapagopuntoventaLocal.setAsientoContable(asientocontableBeanSwingJInternalFrameLocal.asientocontable);

				this.addItemDefectoCombosForeignKeyAsientoContable();
				this.cargarCombosFrameAsientoContablesForeignKey("Formulario");
				this.setActualAsientoContableForeignKey(asientocontableBeanSwingJInternalFrameLocal.asientocontable.getId(),false,"Formulario");
			}
		
		}
	}
	
	public Boolean validarFormaPagoPuntoVentaActual() throws Exception {
		Boolean estaValidado=false;
		this.inicializarInvalidValues();
		
		/*
		int intSelectedRow = this.jTableDatosFormaPagoPuntoVenta.getSelectedRow();
				
		//ARCHITECTURE
		if(Constantes.ISUSAEJBLOGICLAYER) {
			this.formapagopuntoventa =(FormaPagoPuntoVenta) this.formapagopuntoventaLogic.getFormaPagoPuntoVentas().toArray()[this.jTableDatosFormaPagoPuntoVenta.convertRowIndexToModel(intSelectedRow)];
		} else if(Constantes.ISUSAEJBREMOTE ||Constantes.ISUSAEJBHOME) {
			this.formapagopuntoventa =(FormaPagoPuntoVenta) this.formapagopuntoventas.toArray()[this.jTableDatosFormaPagoPuntoVenta.convertRowIndexToModel(intSelectedRow)];
		}
		//ARCHITECTURE
		*/
		
		this.invalidValues = formapagopuntoventaValidator.getInvalidValues(this.formapagopuntoventa);
					
		if(this.invalidValues==null || this.invalidValues.length<=0) {
			estaValidado=true;
		} else {
			this.mostrarInvalidValues();	
		}
		
		return estaValidado;
	}
	
	public void actualizarLista(FormaPagoPuntoVenta formapagopuntoventa,List<FormaPagoPuntoVenta> formapagopuntoventas) throws Exception {
		try	{		
			FormaPagoPuntoVentaConstantesFunciones.actualizarLista(formapagopuntoventa,formapagopuntoventas,this.formapagopuntoventaSessionBean.getEsGuardarRelacionado());		
		} catch(Exception e) {
			throw e;
		}
	}		
	
	public void actualizarSelectedLista(FormaPagoPuntoVenta formapagopuntoventa,List<FormaPagoPuntoVenta> formapagopuntoventas) throws Exception {
		try	{			
			FormaPagoPuntoVentaConstantesFunciones.actualizarSelectedLista(formapagopuntoventa,formapagopuntoventas);
		} catch(Exception e) {
			throw e;
		}
	}	
	
	public Boolean tieneElementosSeleccionados() throws Exception {
		Boolean tiene=false;
		
		List<FormaPagoPuntoVenta> formapagopuntoventasLocal=null;
		
		try	{			
			//ARCHITECTURE
			if(Constantes.ISUSAEJBLOGICLAYER) {
				formapagopuntoventasLocal=this.formapagopuntoventaLogic.getFormaPagoPuntoVentas();
			} else if(Constantes.ISUSAEJBREMOTE || Constantes.ISUSAEJBHOME) {
				formapagopuntoventasLocal=this.formapagopuntoventas;
			}
			//ARCHITECTURE
		
			for(FormaPagoPuntoVenta formapagopuntoventaLocal:formapagopuntoventasLocal) {
				if(this.permiteMantenimiento(formapagopuntoventaLocal) && formapagopuntoventaLocal.getIsSelected()) {
					tiene=true;
					break;
				}
			}
		} catch(Exception e) {
			throw e;
		}
		
		return tiene;
	}			
	
	public void mostrarInvalidValues() throws Exception {
		String sMensaje="";
				
		for (InvalidValue invalidValue : this.invalidValues) {
			sMensaje+="\r\n"+FormaPagoPuntoVentaConstantesFunciones.getFormaPagoPuntoVentaLabelDesdeNombre(invalidValue.getPropertyName())+"->"+invalidValue.getMessage();
			
			//MOSTRAR CAMPOS INVALIDOS
			if(invalidValue.getPropertyName().equals(FormaPagoPuntoVentaConstantesFunciones.IDEMPRESA)) {FuncionesSwing.mostrarCampoMensajeInvalido(false,this.jInternalFrameDetalleFormFormaPagoPuntoVenta.jLabelid_empresaFormaPagoPuntoVenta,invalidValue.getMessage());}
			if(invalidValue.getPropertyName().equals(FormaPagoPuntoVentaConstantesFunciones.IDSUCURSAL)) {FuncionesSwing.mostrarCampoMensajeInvalido(false,this.jInternalFrameDetalleFormFormaPagoPuntoVenta.jLabelid_sucursalFormaPagoPuntoVenta,invalidValue.getMessage());}
			if(invalidValue.getPropertyName().equals(FormaPagoPuntoVentaConstantesFunciones.IDEJERCICIO)) {FuncionesSwing.mostrarCampoMensajeInvalido(false,this.jInternalFrameDetalleFormFormaPagoPuntoVenta.jLabelid_ejercicioFormaPagoPuntoVenta,invalidValue.getMessage());}
			if(invalidValue.getPropertyName().equals(FormaPagoPuntoVentaConstantesFunciones.IDPERIODO)) {FuncionesSwing.mostrarCampoMensajeInvalido(false,this.jInternalFrameDetalleFormFormaPagoPuntoVenta.jLabelid_periodoFormaPagoPuntoVenta,invalidValue.getMessage());}
			if(invalidValue.getPropertyName().equals(FormaPagoPuntoVentaConstantesFunciones.IDFACTURAPUNTOVENTA)) {FuncionesSwing.mostrarCampoMensajeInvalido(false,this.jInternalFrameDetalleFormFormaPagoPuntoVenta.jLabelid_factura_punto_ventaFormaPagoPuntoVenta,invalidValue.getMessage());}
			if(invalidValue.getPropertyName().equals(FormaPagoPuntoVentaConstantesFunciones.IDTIPOFORMAPAGO)) {FuncionesSwing.mostrarCampoMensajeInvalido(false,this.jInternalFrameDetalleFormFormaPagoPuntoVenta.jLabelid_tipo_forma_pagoFormaPagoPuntoVenta,invalidValue.getMessage());}
			if(invalidValue.getPropertyName().equals(FormaPagoPuntoVentaConstantesFunciones.PORCENTAJE)) {FuncionesSwing.mostrarCampoMensajeInvalido(false,this.jInternalFrameDetalleFormFormaPagoPuntoVenta.jLabelporcentajeFormaPagoPuntoVenta,invalidValue.getMessage());}
			if(invalidValue.getPropertyName().equals(FormaPagoPuntoVentaConstantesFunciones.VALOR)) {FuncionesSwing.mostrarCampoMensajeInvalido(false,this.jInternalFrameDetalleFormFormaPagoPuntoVenta.jLabelvalorFormaPagoPuntoVenta,invalidValue.getMessage());}
			if(invalidValue.getPropertyName().equals(FormaPagoPuntoVentaConstantesFunciones.FECHA)) {FuncionesSwing.mostrarCampoMensajeInvalido(false,this.jInternalFrameDetalleFormFormaPagoPuntoVenta.jLabelfechaFormaPagoPuntoVenta,invalidValue.getMessage());}
			if(invalidValue.getPropertyName().equals(FormaPagoPuntoVentaConstantesFunciones.DESCRIPCION)) {FuncionesSwing.mostrarCampoMensajeInvalido(false,this.jInternalFrameDetalleFormFormaPagoPuntoVenta.jLabeldescripcionFormaPagoPuntoVenta,invalidValue.getMessage());}
			if(invalidValue.getPropertyName().equals(FormaPagoPuntoVentaConstantesFunciones.FECHAINICIO)) {FuncionesSwing.mostrarCampoMensajeInvalido(false,this.jInternalFrameDetalleFormFormaPagoPuntoVenta.jLabelfecha_inicioFormaPagoPuntoVenta,invalidValue.getMessage());}
			if(invalidValue.getPropertyName().equals(FormaPagoPuntoVentaConstantesFunciones.NUMERODIASPLAZO)) {FuncionesSwing.mostrarCampoMensajeInvalido(false,this.jInternalFrameDetalleFormFormaPagoPuntoVenta.jLabelnumero_dias_plazoFormaPagoPuntoVenta,invalidValue.getMessage());}
			if(invalidValue.getPropertyName().equals(FormaPagoPuntoVentaConstantesFunciones.FECHAFIN)) {FuncionesSwing.mostrarCampoMensajeInvalido(false,this.jInternalFrameDetalleFormFormaPagoPuntoVenta.jLabelfecha_finFormaPagoPuntoVenta,invalidValue.getMessage());}
			if(invalidValue.getPropertyName().equals(FormaPagoPuntoVentaConstantesFunciones.IDBANCO)) {FuncionesSwing.mostrarCampoMensajeInvalido(false,this.jInternalFrameDetalleFormFormaPagoPuntoVenta.jLabelid_bancoFormaPagoPuntoVenta,invalidValue.getMessage());}
			if(invalidValue.getPropertyName().equals(FormaPagoPuntoVentaConstantesFunciones.IDCUENTABANCOPUNVEN)) {FuncionesSwing.mostrarCampoMensajeInvalido(false,this.jInternalFrameDetalleFormFormaPagoPuntoVenta.jLabelid_cuenta_banco_pun_venFormaPagoPuntoVenta,invalidValue.getMessage());}
			if(invalidValue.getPropertyName().equals(FormaPagoPuntoVentaConstantesFunciones.IDTIPORIESGOCHEQUE)) {FuncionesSwing.mostrarCampoMensajeInvalido(false,this.jInternalFrameDetalleFormFormaPagoPuntoVenta.jLabelid_tipo_riesgo_chequeFormaPagoPuntoVenta,invalidValue.getMessage());}
			if(invalidValue.getPropertyName().equals(FormaPagoPuntoVentaConstantesFunciones.NUMEROCUENTA)) {FuncionesSwing.mostrarCampoMensajeInvalido(false,this.jInternalFrameDetalleFormFormaPagoPuntoVenta.jLabelnumero_cuentaFormaPagoPuntoVenta,invalidValue.getMessage());}
			if(invalidValue.getPropertyName().equals(FormaPagoPuntoVentaConstantesFunciones.NUMEROCHEQUE)) {FuncionesSwing.mostrarCampoMensajeInvalido(false,this.jInternalFrameDetalleFormFormaPagoPuntoVenta.jLabelnumero_chequeFormaPagoPuntoVenta,invalidValue.getMessage());}
			if(invalidValue.getPropertyName().equals(FormaPagoPuntoVentaConstantesFunciones.GIRADOR)) {FuncionesSwing.mostrarCampoMensajeInvalido(false,this.jInternalFrameDetalleFormFormaPagoPuntoVenta.jLabelgiradorFormaPagoPuntoVenta,invalidValue.getMessage());}
			if(invalidValue.getPropertyName().equals(FormaPagoPuntoVentaConstantesFunciones.IDBANCOTARJETA)) {FuncionesSwing.mostrarCampoMensajeInvalido(false,this.jInternalFrameDetalleFormFormaPagoPuntoVenta.jLabelid_banco_tarjetaFormaPagoPuntoVenta,invalidValue.getMessage());}
			if(invalidValue.getPropertyName().equals(FormaPagoPuntoVentaConstantesFunciones.IDTARJETACREDITO)) {FuncionesSwing.mostrarCampoMensajeInvalido(false,this.jInternalFrameDetalleFormFormaPagoPuntoVenta.jLabelid_tarjeta_creditoFormaPagoPuntoVenta,invalidValue.getMessage());}
			if(invalidValue.getPropertyName().equals(FormaPagoPuntoVentaConstantesFunciones.IDTIPOINTERESTARJETA)) {FuncionesSwing.mostrarCampoMensajeInvalido(false,this.jInternalFrameDetalleFormFormaPagoPuntoVenta.jLabelid_tipo_interes_tarjetaFormaPagoPuntoVenta,invalidValue.getMessage());}
			if(invalidValue.getPropertyName().equals(FormaPagoPuntoVentaConstantesFunciones.IDTIPOPAGOTARJETA)) {FuncionesSwing.mostrarCampoMensajeInvalido(false,this.jInternalFrameDetalleFormFormaPagoPuntoVenta.jLabelid_tipo_pago_tarjetaFormaPagoPuntoVenta,invalidValue.getMessage());}
			if(invalidValue.getPropertyName().equals(FormaPagoPuntoVentaConstantesFunciones.IDCONEXION)) {FuncionesSwing.mostrarCampoMensajeInvalido(false,this.jInternalFrameDetalleFormFormaPagoPuntoVenta.jLabelid_conexionFormaPagoPuntoVenta,invalidValue.getMessage());}
			if(invalidValue.getPropertyName().equals(FormaPagoPuntoVentaConstantesFunciones.IDMES)) {FuncionesSwing.mostrarCampoMensajeInvalido(false,this.jInternalFrameDetalleFormFormaPagoPuntoVenta.jLabelid_mesFormaPagoPuntoVenta,invalidValue.getMessage());}
			if(invalidValue.getPropertyName().equals(FormaPagoPuntoVentaConstantesFunciones.NUMERO)) {FuncionesSwing.mostrarCampoMensajeInvalido(false,this.jInternalFrameDetalleFormFormaPagoPuntoVenta.jLabelnumeroFormaPagoPuntoVenta,invalidValue.getMessage());}
			if(invalidValue.getPropertyName().equals(FormaPagoPuntoVentaConstantesFunciones.TARJETAHABIENTE)) {FuncionesSwing.mostrarCampoMensajeInvalido(false,this.jInternalFrameDetalleFormFormaPagoPuntoVenta.jLabeltarjeta_habienteFormaPagoPuntoVenta,invalidValue.getMessage());}
			if(invalidValue.getPropertyName().equals(FormaPagoPuntoVentaConstantesFunciones.AUTORIZACION)) {FuncionesSwing.mostrarCampoMensajeInvalido(false,this.jInternalFrameDetalleFormFormaPagoPuntoVenta.jLabelautorizacionFormaPagoPuntoVenta,invalidValue.getMessage());}
			if(invalidValue.getPropertyName().equals(FormaPagoPuntoVentaConstantesFunciones.VOUCHER)) {FuncionesSwing.mostrarCampoMensajeInvalido(false,this.jInternalFrameDetalleFormFormaPagoPuntoVenta.jLabelvoucherFormaPagoPuntoVenta,invalidValue.getMessage());}
			if(invalidValue.getPropertyName().equals(FormaPagoPuntoVentaConstantesFunciones.LOTE)) {FuncionesSwing.mostrarCampoMensajeInvalido(false,this.jInternalFrameDetalleFormFormaPagoPuntoVenta.jLabelloteFormaPagoPuntoVenta,invalidValue.getMessage());}
			if(invalidValue.getPropertyName().equals(FormaPagoPuntoVentaConstantesFunciones.CUOTA)) {FuncionesSwing.mostrarCampoMensajeInvalido(false,this.jInternalFrameDetalleFormFormaPagoPuntoVenta.jLabelcuotaFormaPagoPuntoVenta,invalidValue.getMessage());}
			if(invalidValue.getPropertyName().equals(FormaPagoPuntoVentaConstantesFunciones.VALORRETENCION)) {FuncionesSwing.mostrarCampoMensajeInvalido(false,this.jInternalFrameDetalleFormFormaPagoPuntoVenta.jLabelvalor_retencionFormaPagoPuntoVenta,invalidValue.getMessage());}
			if(invalidValue.getPropertyName().equals(FormaPagoPuntoVentaConstantesFunciones.VALORCOMISION)) {FuncionesSwing.mostrarCampoMensajeInvalido(false,this.jInternalFrameDetalleFormFormaPagoPuntoVenta.jLabelvalor_comisionFormaPagoPuntoVenta,invalidValue.getMessage());}
			if(invalidValue.getPropertyName().equals(FormaPagoPuntoVentaConstantesFunciones.VALORCALCULADO)) {FuncionesSwing.mostrarCampoMensajeInvalido(false,this.jInternalFrameDetalleFormFormaPagoPuntoVenta.jLabelvalor_calculadoFormaPagoPuntoVenta,invalidValue.getMessage());}
			if(invalidValue.getPropertyName().equals(FormaPagoPuntoVentaConstantesFunciones.VALORCANCELADO)) {FuncionesSwing.mostrarCampoMensajeInvalido(false,this.jInternalFrameDetalleFormFormaPagoPuntoVenta.jLabelvalor_canceladoFormaPagoPuntoVenta,invalidValue.getMessage());}
			if(invalidValue.getPropertyName().equals(FormaPagoPuntoVentaConstantesFunciones.VALORDIFIERE)) {FuncionesSwing.mostrarCampoMensajeInvalido(false,this.jInternalFrameDetalleFormFormaPagoPuntoVenta.jLabelvalor_difiereFormaPagoPuntoVenta,invalidValue.getMessage());}
			if(invalidValue.getPropertyName().equals(FormaPagoPuntoVentaConstantesFunciones.NUMERORETENCION)) {FuncionesSwing.mostrarCampoMensajeInvalido(false,this.jInternalFrameDetalleFormFormaPagoPuntoVenta.jLabelnumero_retencionFormaPagoPuntoVenta,invalidValue.getMessage());}
			if(invalidValue.getPropertyName().equals(FormaPagoPuntoVentaConstantesFunciones.NUMEROLIQUIDACION)) {FuncionesSwing.mostrarCampoMensajeInvalido(false,this.jInternalFrameDetalleFormFormaPagoPuntoVenta.jLabelnumero_liquidacionFormaPagoPuntoVenta,invalidValue.getMessage());}
			if(invalidValue.getPropertyName().equals(FormaPagoPuntoVentaConstantesFunciones.IDANIO)) {FuncionesSwing.mostrarCampoMensajeInvalido(false,this.jInternalFrameDetalleFormFormaPagoPuntoVenta.jLabelid_anioFormaPagoPuntoVenta,invalidValue.getMessage());}
			if(invalidValue.getPropertyName().equals(FormaPagoPuntoVentaConstantesFunciones.IDCUENTACONTABLE)) {FuncionesSwing.mostrarCampoMensajeInvalido(false,this.jInternalFrameDetalleFormFormaPagoPuntoVenta.jLabelid_cuenta_contableFormaPagoPuntoVenta,invalidValue.getMessage());}
			if(invalidValue.getPropertyName().equals(FormaPagoPuntoVentaConstantesFunciones.IDASIENTOCONTABLE)) {FuncionesSwing.mostrarCampoMensajeInvalido(false,this.jInternalFrameDetalleFormFormaPagoPuntoVenta.jLabelid_asiento_contableFormaPagoPuntoVenta,invalidValue.getMessage());}
        }
		
		
		if(!sMensaje.equals("")) {
			//JOptionPane.showMessageDialog(this,sMensaje,"VALIDACION ",JOptionPane.ERROR_MESSAGE);
			throw new Exception(sMensaje);			
		}
		
		/*
		System.out.println(invalidValue);
        System.out.println("message=" + invalidValue.getMessage());
        System.out.println("propertyName=" + invalidValue.getPropertyName());
        System.out.println("propertyPath=" + invalidValue.getPropertyPath());
        System.out.println("value=" + invalidValue.getValue());
        */
	}		
	
	public void inicializarInvalidValues() throws Exception {
		String sMensaje="";	
		
		if(this.jInternalFrameDetalleFormFormaPagoPuntoVenta!=null) {
		
		//MOSTRAR CAMPOS INVALIDOS
		FuncionesSwing.mostrarCampoMensajeInvalido(true,this.jInternalFrameDetalleFormFormaPagoPuntoVenta.jLabelid_empresaFormaPagoPuntoVenta,"");
		FuncionesSwing.mostrarCampoMensajeInvalido(true,this.jInternalFrameDetalleFormFormaPagoPuntoVenta.jLabelid_sucursalFormaPagoPuntoVenta,"");
		FuncionesSwing.mostrarCampoMensajeInvalido(true,this.jInternalFrameDetalleFormFormaPagoPuntoVenta.jLabelid_ejercicioFormaPagoPuntoVenta,"");
		FuncionesSwing.mostrarCampoMensajeInvalido(true,this.jInternalFrameDetalleFormFormaPagoPuntoVenta.jLabelid_periodoFormaPagoPuntoVenta,"");
		FuncionesSwing.mostrarCampoMensajeInvalido(true,this.jInternalFrameDetalleFormFormaPagoPuntoVenta.jLabelid_factura_punto_ventaFormaPagoPuntoVenta,"");
		FuncionesSwing.mostrarCampoMensajeInvalido(true,this.jInternalFrameDetalleFormFormaPagoPuntoVenta.jLabelid_tipo_forma_pagoFormaPagoPuntoVenta,"");
		FuncionesSwing.mostrarCampoMensajeInvalido(true,this.jInternalFrameDetalleFormFormaPagoPuntoVenta.jLabelporcentajeFormaPagoPuntoVenta,"");
		FuncionesSwing.mostrarCampoMensajeInvalido(true,this.jInternalFrameDetalleFormFormaPagoPuntoVenta.jLabelvalorFormaPagoPuntoVenta,"");
		FuncionesSwing.mostrarCampoMensajeInvalido(true,this.jInternalFrameDetalleFormFormaPagoPuntoVenta.jLabelfechaFormaPagoPuntoVenta,"");
		FuncionesSwing.mostrarCampoMensajeInvalido(true,this.jInternalFrameDetalleFormFormaPagoPuntoVenta.jLabeldescripcionFormaPagoPuntoVenta,"");
		FuncionesSwing.mostrarCampoMensajeInvalido(true,this.jInternalFrameDetalleFormFormaPagoPuntoVenta.jLabelfecha_inicioFormaPagoPuntoVenta,"");
		FuncionesSwing.mostrarCampoMensajeInvalido(true,this.jInternalFrameDetalleFormFormaPagoPuntoVenta.jLabelnumero_dias_plazoFormaPagoPuntoVenta,"");
		FuncionesSwing.mostrarCampoMensajeInvalido(true,this.jInternalFrameDetalleFormFormaPagoPuntoVenta.jLabelfecha_finFormaPagoPuntoVenta,"");
		FuncionesSwing.mostrarCampoMensajeInvalido(true,this.jInternalFrameDetalleFormFormaPagoPuntoVenta.jLabelid_bancoFormaPagoPuntoVenta,"");
		FuncionesSwing.mostrarCampoMensajeInvalido(true,this.jInternalFrameDetalleFormFormaPagoPuntoVenta.jLabelid_cuenta_banco_pun_venFormaPagoPuntoVenta,"");
		FuncionesSwing.mostrarCampoMensajeInvalido(true,this.jInternalFrameDetalleFormFormaPagoPuntoVenta.jLabelid_tipo_riesgo_chequeFormaPagoPuntoVenta,"");
		FuncionesSwing.mostrarCampoMensajeInvalido(true,this.jInternalFrameDetalleFormFormaPagoPuntoVenta.jLabelnumero_cuentaFormaPagoPuntoVenta,"");
		FuncionesSwing.mostrarCampoMensajeInvalido(true,this.jInternalFrameDetalleFormFormaPagoPuntoVenta.jLabelnumero_chequeFormaPagoPuntoVenta,"");
		FuncionesSwing.mostrarCampoMensajeInvalido(true,this.jInternalFrameDetalleFormFormaPagoPuntoVenta.jLabelgiradorFormaPagoPuntoVenta,"");
		FuncionesSwing.mostrarCampoMensajeInvalido(true,this.jInternalFrameDetalleFormFormaPagoPuntoVenta.jLabelid_banco_tarjetaFormaPagoPuntoVenta,"");
		FuncionesSwing.mostrarCampoMensajeInvalido(true,this.jInternalFrameDetalleFormFormaPagoPuntoVenta.jLabelid_tarjeta_creditoFormaPagoPuntoVenta,"");
		FuncionesSwing.mostrarCampoMensajeInvalido(true,this.jInternalFrameDetalleFormFormaPagoPuntoVenta.jLabelid_tipo_interes_tarjetaFormaPagoPuntoVenta,"");
		FuncionesSwing.mostrarCampoMensajeInvalido(true,this.jInternalFrameDetalleFormFormaPagoPuntoVenta.jLabelid_tipo_pago_tarjetaFormaPagoPuntoVenta,"");
		FuncionesSwing.mostrarCampoMensajeInvalido(true,this.jInternalFrameDetalleFormFormaPagoPuntoVenta.jLabelid_conexionFormaPagoPuntoVenta,"");
		FuncionesSwing.mostrarCampoMensajeInvalido(true,this.jInternalFrameDetalleFormFormaPagoPuntoVenta.jLabelid_mesFormaPagoPuntoVenta,"");
		FuncionesSwing.mostrarCampoMensajeInvalido(true,this.jInternalFrameDetalleFormFormaPagoPuntoVenta.jLabelnumeroFormaPagoPuntoVenta,"");
		FuncionesSwing.mostrarCampoMensajeInvalido(true,this.jInternalFrameDetalleFormFormaPagoPuntoVenta.jLabeltarjeta_habienteFormaPagoPuntoVenta,"");
		FuncionesSwing.mostrarCampoMensajeInvalido(true,this.jInternalFrameDetalleFormFormaPagoPuntoVenta.jLabelautorizacionFormaPagoPuntoVenta,"");
		FuncionesSwing.mostrarCampoMensajeInvalido(true,this.jInternalFrameDetalleFormFormaPagoPuntoVenta.jLabelvoucherFormaPagoPuntoVenta,"");
		FuncionesSwing.mostrarCampoMensajeInvalido(true,this.jInternalFrameDetalleFormFormaPagoPuntoVenta.jLabelloteFormaPagoPuntoVenta,"");
		FuncionesSwing.mostrarCampoMensajeInvalido(true,this.jInternalFrameDetalleFormFormaPagoPuntoVenta.jLabelcuotaFormaPagoPuntoVenta,"");
		FuncionesSwing.mostrarCampoMensajeInvalido(true,this.jInternalFrameDetalleFormFormaPagoPuntoVenta.jLabelvalor_retencionFormaPagoPuntoVenta,"");
		FuncionesSwing.mostrarCampoMensajeInvalido(true,this.jInternalFrameDetalleFormFormaPagoPuntoVenta.jLabelvalor_comisionFormaPagoPuntoVenta,"");
		FuncionesSwing.mostrarCampoMensajeInvalido(true,this.jInternalFrameDetalleFormFormaPagoPuntoVenta.jLabelvalor_calculadoFormaPagoPuntoVenta,"");
		FuncionesSwing.mostrarCampoMensajeInvalido(true,this.jInternalFrameDetalleFormFormaPagoPuntoVenta.jLabelvalor_canceladoFormaPagoPuntoVenta,"");
		FuncionesSwing.mostrarCampoMensajeInvalido(true,this.jInternalFrameDetalleFormFormaPagoPuntoVenta.jLabelvalor_difiereFormaPagoPuntoVenta,"");
		FuncionesSwing.mostrarCampoMensajeInvalido(true,this.jInternalFrameDetalleFormFormaPagoPuntoVenta.jLabelnumero_retencionFormaPagoPuntoVenta,"");
		FuncionesSwing.mostrarCampoMensajeInvalido(true,this.jInternalFrameDetalleFormFormaPagoPuntoVenta.jLabelnumero_liquidacionFormaPagoPuntoVenta,"");
		FuncionesSwing.mostrarCampoMensajeInvalido(true,this.jInternalFrameDetalleFormFormaPagoPuntoVenta.jLabelid_anioFormaPagoPuntoVenta,"");
		FuncionesSwing.mostrarCampoMensajeInvalido(true,this.jInternalFrameDetalleFormFormaPagoPuntoVenta.jLabelid_cuenta_contableFormaPagoPuntoVenta,"");
		FuncionesSwing.mostrarCampoMensajeInvalido(true,this.jInternalFrameDetalleFormFormaPagoPuntoVenta.jLabelid_asiento_contableFormaPagoPuntoVenta,"");
		
		}
	}
	
	
	
	public void actualizarObjetoPadreFk(String sTipo)  throws Exception {
		if(sTipo.equals("XXXAuxiliar")) {
		
		}
		
	}
	
	public void nuevoPreparar() throws Exception {
		this.nuevoPreparar(false);
	}
	
	public void nuevoPreparar(Boolean esNuevoGuardarCambios) throws Exception {
		this.iIdNuevoFormaPagoPuntoVenta--;	
		
		
		this.formapagopuntoventaAux=new FormaPagoPuntoVenta();
		
		this.formapagopuntoventaAux.setId(this.iIdNuevoFormaPagoPuntoVenta);
		this.formapagopuntoventaAux.setIsChanged(true);
		
		//ARCHITECTURE
		if(Constantes.ISUSAEJBLOGICLAYER) {
			this.formapagopuntoventaLogic.getFormaPagoPuntoVentas().add(this.formapagopuntoventaAux);
		} else if(Constantes.ISUSAEJBREMOTE || Constantes.ISUSAEJBHOME) {
			this.formapagopuntoventas.add(this.formapagopuntoventaAux);
		}
		//ARCHITECTURE
		
		this.formapagopuntoventa=this.formapagopuntoventaAux;
		
		if(FormaPagoPuntoVentaJInternalFrame.ISBINDING_MANUAL_TABLA) {
			this.setVariablesObjetoActualToFormularioFormaPagoPuntoVenta(this.formapagopuntoventa);
			this.setVariablesObjetoActualToFormularioForeignKeyFormaPagoPuntoVenta(this.formapagopuntoventa);
		}
				
		//this.setDefaultControlesFormaPagoPuntoVenta();
		
		this.inicializarInvalidValues();
				
		//SELECCIONA ITEM DEFECTO-->SET O SELECTED INDEX
		this.setItemDefectoCombosForeignKeyFormaPagoPuntoVenta();
		
		
		//INICIALIZA VARIABLES COMBOS GLOBALES A FORMULARIO(ParametroGeneralUsuario)
		this.setVariablesGlobalesCombosForeignKeyFormaPagoPuntoVenta();
		
		//INICIALIZA VARIABLES COMBOS GLOBALES AUXILIARES A FORMULARIO(Anio,Mes)
		//this.setVariablesGlobalesAuxiliaresCombosForeignKeyFormaPagoPuntoVenta();
		
		//SI TIENE FOREIGN KEY CON CAMPO esDefecto=true, SE ACTUALIZA A OBJETO ACTUAL
		this.setVariablesForeignKeyObjetoBeanDefectoActualToObjetoActualFormaPagoPuntoVenta(this.formapagopuntoventaBean,this.formapagopuntoventa,false,false);
		
		//ACTUALIZA VALORES PARA EL OBJETO ACTUAL ANTES DE ENVIARLO A ACTUALIZAR
		this.setVariablesFormularioToObjetoActualForeignKeysFormaPagoPuntoVenta(this.formapagopuntoventa);
				
		ArrayList<Classe> classes=new ArrayList<Classe>();
		
		if(this.jInternalFrameParent!=null) {
			this.jInternalFrameParent.actualizarObjetoPadreFk(FormaPagoPuntoVentaConstantesFunciones.CLASSNAME);
		}	
		
		
		if(this.formapagopuntoventaSessionBean.getConGuardarRelaciones()) {
			classes=FormaPagoPuntoVentaConstantesFunciones.getClassesRelationshipsOfFormaPagoPuntoVenta(new ArrayList<Classe>(),DeepLoadType.NONE);
		}
		
		this.classesActual=new ArrayList<Classe>();
		this.classesActual.addAll(classes);
				
		//ARCHITECTURE
		if(Constantes.ISUSAEJBLOGICLAYER) {						
			this.formapagopuntoventaReturnGeneral=formapagopuntoventaLogic.procesarEventosFormaPagoPuntoVentasWithConnection(this.parametroGeneralUsuario,this.moduloActual,this.opcionActual,this.usuarioActual,EventoGlobalTipo.FORM_RECARGAR,ControlTipo.FORM,EventoTipo.LOAD,EventoSubTipo.NEW,"FORM",this.formapagopuntoventaLogic.getFormaPagoPuntoVentas(),this.formapagopuntoventa,this.formapagopuntoventaParameterGeneral,this.isEsNuevoFormaPagoPuntoVenta,classes);//this.formapagopuntoventaLogic.getFormaPagoPuntoVenta()
						
		} else if(Constantes.ISUSAEJBREMOTE) {
						
		} else if(Constantes.ISUSAEJBHOME) {
		}
		//ARCHITECTURE
		
		//ACTUALIZA VARIABLES DEFECTO DESDE LOGIC A RETURN GENERAL Y LUEGO A BEAN
		//this.setVariablesObjetoReturnGeneralToBeanFormaPagoPuntoVenta(this.formapagopuntoventaReturnGeneral,this.formapagopuntoventaBean,false);
		
		if(this.formapagopuntoventaReturnGeneral.getConRecargarPropiedades()) {
			//INICIALIZA VARIABLES COMBOS NORMALES (FK)
			this.setVariablesObjetoActualToFormularioForeignKeyFormaPagoPuntoVenta(this.formapagopuntoventaReturnGeneral.getFormaPagoPuntoVenta());
			
			//INICIALIZA VARIABLES NORMALES A FORMULARIO(SIN FK)
			this.setVariablesObjetoActualToFormularioFormaPagoPuntoVenta(this.formapagopuntoventaReturnGeneral.getFormaPagoPuntoVenta());
		}
		
		if(this.formapagopuntoventaReturnGeneral.getConRecargarRelaciones()) {
			//INICIALIZA VARIABLES RELACIONES A FORMULARIO
			this.setVariablesRelacionesObjetoActualToFormularioFormaPagoPuntoVenta(this.formapagopuntoventaReturnGeneral.getFormaPagoPuntoVenta(),classes);//this.formapagopuntoventaBean);	
		}
			
		//ACTUALIZA VARIABLES FORMULARIO A OBJETO ACTUAL (PARA NUEVO TABLA O GUARDAR CAMBIOS
		if(esNuevoGuardarCambios) {
			this.setVariablesFormularioToObjetoActualFormaPagoPuntoVenta(this.formapagopuntoventa,false);
		}
		
		//INICIALIZA VARIABLES COMBOS DEFAULT DEL PROYECTO(|DEFAULT para FK)
		//this.setVariablesDefaultCombosForeignKeyFormaPagoPuntoVenta();
		
		//INICIALIZA VARIABLES COMBOS PARAMETRO DEL PROYECTO(|VALORPARAM Era para ParametroModulo, ahora en logic)
		//this.setVariablesParametroCombosForeignKeyFormaPagoPuntoVenta();						
		
		if(!esNuevoGuardarCambios) {
			//INICIALIZA VARIABLES POR OPCION MENU
			this.arrDatoGeneral= new  ArrayList<DatoGeneral>();
			this.arrDatoGeneralNo= new  ArrayList<String>();
			
			FormaPagoPuntoVentaBeanSwingJInternalFrameAdditional.RecargarFormFormaPagoPuntoVenta(this,"NUEVO_PREPARAR","",this.arrDatoGeneral);
		
			//NO FUNCIONA BINDINGS			
			this.inicializarActualizarBindingFormaPagoPuntoVenta(false);
						
			if(formapagopuntoventaSessionBean.getConGuardarRelaciones()) {
				//DEBERIA YA ESTAR CARGADO LOS COMBOS Y SI SE NECESITA ALGO MAS SE DEBE CREAR FUNCION LIMITADA
				//SI DEBE TRAER Y RESETEAR TABLA
								
			}
				
			//SI ES MANUAL
			if(FormaPagoPuntoVentaJInternalFrame.ISBINDING_MANUAL) {
				//this.inicializarActualizarBindingManualFormaPagoPuntoVenta();
			}
			
			this.actualizarVisualTableDatosFormaPagoPuntoVenta();
			
			this.jTableDatosFormaPagoPuntoVenta.setRowSelectionInterval(this.getIndiceNuevoFormaPagoPuntoVenta(), this.getIndiceNuevoFormaPagoPuntoVenta());
			
			this.seleccionarFilaTablaFormaPagoPuntoVentaActual();
						
			this.actualizarEstadoCeldasBotonesFormaPagoPuntoVenta("a", isGuardarCambiosEnLote, isEsMantenimientoRelacionado);			
		
		}		
	}
	
	public void habilitarDeshabilitarControlesFormaPagoPuntoVenta(Boolean isHabilitar) throws Exception {
		
		this.jInternalFrameDetalleFormFormaPagoPuntoVenta.jTextFieldporcentajeFormaPagoPuntoVenta.setEnabled(isHabilitar && this.formapagopuntoventaConstantesFunciones.activarporcentajeFormaPagoPuntoVenta);
		this.jInternalFrameDetalleFormFormaPagoPuntoVenta.jTextFieldvalorFormaPagoPuntoVenta.setEnabled(isHabilitar && this.formapagopuntoventaConstantesFunciones.activarvalorFormaPagoPuntoVenta);
		this.jInternalFrameDetalleFormFormaPagoPuntoVenta.jDateChooserfechaFormaPagoPuntoVenta.setEnabled(isHabilitar && this.formapagopuntoventaConstantesFunciones.activarfechaFormaPagoPuntoVenta);
		this.jInternalFrameDetalleFormFormaPagoPuntoVenta.jTextAreadescripcionFormaPagoPuntoVenta.setEnabled(isHabilitar && this.formapagopuntoventaConstantesFunciones.activardescripcionFormaPagoPuntoVenta);
		this.jInternalFrameDetalleFormFormaPagoPuntoVenta.jDateChooserfecha_inicioFormaPagoPuntoVenta.setEnabled(isHabilitar && this.formapagopuntoventaConstantesFunciones.activarfecha_inicioFormaPagoPuntoVenta);
		this.jInternalFrameDetalleFormFormaPagoPuntoVenta.jTextFieldnumero_dias_plazoFormaPagoPuntoVenta.setEnabled(isHabilitar && this.formapagopuntoventaConstantesFunciones.activarnumero_dias_plazoFormaPagoPuntoVenta);
		this.jInternalFrameDetalleFormFormaPagoPuntoVenta.jDateChooserfecha_finFormaPagoPuntoVenta.setEnabled(isHabilitar && this.formapagopuntoventaConstantesFunciones.activarfecha_finFormaPagoPuntoVenta);
		this.jInternalFrameDetalleFormFormaPagoPuntoVenta.jTextFieldnumero_cuentaFormaPagoPuntoVenta.setEnabled(isHabilitar && this.formapagopuntoventaConstantesFunciones.activarnumero_cuentaFormaPagoPuntoVenta);
		this.jInternalFrameDetalleFormFormaPagoPuntoVenta.jTextFieldnumero_chequeFormaPagoPuntoVenta.setEnabled(isHabilitar && this.formapagopuntoventaConstantesFunciones.activarnumero_chequeFormaPagoPuntoVenta);
		this.jInternalFrameDetalleFormFormaPagoPuntoVenta.jTextAreagiradorFormaPagoPuntoVenta.setEnabled(isHabilitar && this.formapagopuntoventaConstantesFunciones.activargiradorFormaPagoPuntoVenta);
		this.jInternalFrameDetalleFormFormaPagoPuntoVenta.jTextFieldnumeroFormaPagoPuntoVenta.setEnabled(isHabilitar && this.formapagopuntoventaConstantesFunciones.activarnumeroFormaPagoPuntoVenta);
		this.jInternalFrameDetalleFormFormaPagoPuntoVenta.jTextAreatarjeta_habienteFormaPagoPuntoVenta.setEnabled(isHabilitar && this.formapagopuntoventaConstantesFunciones.activartarjeta_habienteFormaPagoPuntoVenta);
		this.jInternalFrameDetalleFormFormaPagoPuntoVenta.jTextAreaautorizacionFormaPagoPuntoVenta.setEnabled(isHabilitar && this.formapagopuntoventaConstantesFunciones.activarautorizacionFormaPagoPuntoVenta);
		this.jInternalFrameDetalleFormFormaPagoPuntoVenta.jTextFieldvoucherFormaPagoPuntoVenta.setEnabled(isHabilitar && this.formapagopuntoventaConstantesFunciones.activarvoucherFormaPagoPuntoVenta);
		this.jInternalFrameDetalleFormFormaPagoPuntoVenta.jTextFieldloteFormaPagoPuntoVenta.setEnabled(isHabilitar && this.formapagopuntoventaConstantesFunciones.activarloteFormaPagoPuntoVenta);
		this.jInternalFrameDetalleFormFormaPagoPuntoVenta.jTextFieldcuotaFormaPagoPuntoVenta.setEnabled(isHabilitar && this.formapagopuntoventaConstantesFunciones.activarcuotaFormaPagoPuntoVenta);
		this.jInternalFrameDetalleFormFormaPagoPuntoVenta.jTextFieldvalor_retencionFormaPagoPuntoVenta.setEnabled(isHabilitar && this.formapagopuntoventaConstantesFunciones.activarvalor_retencionFormaPagoPuntoVenta);
		this.jInternalFrameDetalleFormFormaPagoPuntoVenta.jTextFieldvalor_comisionFormaPagoPuntoVenta.setEnabled(isHabilitar && this.formapagopuntoventaConstantesFunciones.activarvalor_comisionFormaPagoPuntoVenta);
		this.jInternalFrameDetalleFormFormaPagoPuntoVenta.jTextFieldvalor_calculadoFormaPagoPuntoVenta.setEnabled(isHabilitar && this.formapagopuntoventaConstantesFunciones.activarvalor_calculadoFormaPagoPuntoVenta);
		this.jInternalFrameDetalleFormFormaPagoPuntoVenta.jTextFieldvalor_canceladoFormaPagoPuntoVenta.setEnabled(isHabilitar && this.formapagopuntoventaConstantesFunciones.activarvalor_canceladoFormaPagoPuntoVenta);
		this.jInternalFrameDetalleFormFormaPagoPuntoVenta.jTextFieldvalor_difiereFormaPagoPuntoVenta.setEnabled(isHabilitar && this.formapagopuntoventaConstantesFunciones.activarvalor_difiereFormaPagoPuntoVenta);
		this.jInternalFrameDetalleFormFormaPagoPuntoVenta.jTextFieldnumero_retencionFormaPagoPuntoVenta.setEnabled(isHabilitar && this.formapagopuntoventaConstantesFunciones.activarnumero_retencionFormaPagoPuntoVenta);
		this.jInternalFrameDetalleFormFormaPagoPuntoVenta.jTextFieldnumero_liquidacionFormaPagoPuntoVenta.setEnabled(isHabilitar && this.formapagopuntoventaConstantesFunciones.activarnumero_liquidacionFormaPagoPuntoVenta);	
		//
		this.jInternalFrameDetalleFormFormaPagoPuntoVenta.jComboBoxid_empresaFormaPagoPuntoVenta.setEnabled(isHabilitar && this.formapagopuntoventaConstantesFunciones.activarid_empresaFormaPagoPuntoVenta);//
		this.jInternalFrameDetalleFormFormaPagoPuntoVenta.jComboBoxid_sucursalFormaPagoPuntoVenta.setEnabled(isHabilitar && this.formapagopuntoventaConstantesFunciones.activarid_sucursalFormaPagoPuntoVenta);//
		this.jInternalFrameDetalleFormFormaPagoPuntoVenta.jComboBoxid_ejercicioFormaPagoPuntoVenta.setEnabled(isHabilitar && this.formapagopuntoventaConstantesFunciones.activarid_ejercicioFormaPagoPuntoVenta);//
		this.jInternalFrameDetalleFormFormaPagoPuntoVenta.jComboBoxid_periodoFormaPagoPuntoVenta.setEnabled(isHabilitar && this.formapagopuntoventaConstantesFunciones.activarid_periodoFormaPagoPuntoVenta);
		this.jInternalFrameDetalleFormFormaPagoPuntoVenta.jComboBoxid_factura_punto_ventaFormaPagoPuntoVenta.setEnabled(isHabilitar && this.formapagopuntoventaConstantesFunciones.activarid_factura_punto_ventaFormaPagoPuntoVenta);
		this.jInternalFrameDetalleFormFormaPagoPuntoVenta.jComboBoxid_tipo_forma_pagoFormaPagoPuntoVenta.setEnabled(isHabilitar && this.formapagopuntoventaConstantesFunciones.activarid_tipo_forma_pagoFormaPagoPuntoVenta);
		this.jInternalFrameDetalleFormFormaPagoPuntoVenta.jComboBoxid_bancoFormaPagoPuntoVenta.setEnabled(isHabilitar && this.formapagopuntoventaConstantesFunciones.activarid_bancoFormaPagoPuntoVenta);
		this.jInternalFrameDetalleFormFormaPagoPuntoVenta.jComboBoxid_cuenta_banco_pun_venFormaPagoPuntoVenta.setEnabled(isHabilitar && this.formapagopuntoventaConstantesFunciones.activarid_cuenta_banco_pun_venFormaPagoPuntoVenta);
		this.jInternalFrameDetalleFormFormaPagoPuntoVenta.jComboBoxid_tipo_riesgo_chequeFormaPagoPuntoVenta.setEnabled(isHabilitar && this.formapagopuntoventaConstantesFunciones.activarid_tipo_riesgo_chequeFormaPagoPuntoVenta);
		this.jInternalFrameDetalleFormFormaPagoPuntoVenta.jComboBoxid_banco_tarjetaFormaPagoPuntoVenta.setEnabled(isHabilitar && this.formapagopuntoventaConstantesFunciones.activarid_banco_tarjetaFormaPagoPuntoVenta);
		this.jInternalFrameDetalleFormFormaPagoPuntoVenta.jComboBoxid_tarjeta_creditoFormaPagoPuntoVenta.setEnabled(isHabilitar && this.formapagopuntoventaConstantesFunciones.activarid_tarjeta_creditoFormaPagoPuntoVenta);
		this.jInternalFrameDetalleFormFormaPagoPuntoVenta.jComboBoxid_tipo_interes_tarjetaFormaPagoPuntoVenta.setEnabled(isHabilitar && this.formapagopuntoventaConstantesFunciones.activarid_tipo_interes_tarjetaFormaPagoPuntoVenta);
		this.jInternalFrameDetalleFormFormaPagoPuntoVenta.jComboBoxid_tipo_pago_tarjetaFormaPagoPuntoVenta.setEnabled(isHabilitar && this.formapagopuntoventaConstantesFunciones.activarid_tipo_pago_tarjetaFormaPagoPuntoVenta);
		this.jInternalFrameDetalleFormFormaPagoPuntoVenta.jComboBoxid_conexionFormaPagoPuntoVenta.setEnabled(isHabilitar && this.formapagopuntoventaConstantesFunciones.activarid_conexionFormaPagoPuntoVenta);
		this.jInternalFrameDetalleFormFormaPagoPuntoVenta.jComboBoxid_mesFormaPagoPuntoVenta.setEnabled(isHabilitar && this.formapagopuntoventaConstantesFunciones.activarid_mesFormaPagoPuntoVenta);//
		this.jInternalFrameDetalleFormFormaPagoPuntoVenta.jComboBoxid_anioFormaPagoPuntoVenta.setEnabled(isHabilitar && this.formapagopuntoventaConstantesFunciones.activarid_anioFormaPagoPuntoVenta);//
		this.jInternalFrameDetalleFormFormaPagoPuntoVenta.jComboBoxid_cuenta_contableFormaPagoPuntoVenta.setEnabled(isHabilitar && this.formapagopuntoventaConstantesFunciones.activarid_cuenta_contableFormaPagoPuntoVenta);//
		this.jInternalFrameDetalleFormFormaPagoPuntoVenta.jComboBoxid_asiento_contableFormaPagoPuntoVenta.setEnabled(isHabilitar && this.formapagopuntoventaConstantesFunciones.activarid_asiento_contableFormaPagoPuntoVenta);
	};
	
	public void setDefaultControlesFormaPagoPuntoVenta() throws Exception {
			
	};
	
	
	public void habilitarDeshabilitarTipoMantenimientoFormaPagoPuntoVenta(Boolean esRelaciones) throws Exception {
		if(esRelaciones) {
			//this.formapagopuntoventaSessionBean.setConGuardarRelaciones(true);			
			this.formapagopuntoventaSessionBean.setEstaModoGuardarRelaciones(true);				
			this.jInternalFrameDetalleFormFormaPagoPuntoVenta.jTabbedPaneRelacionesFormaPagoPuntoVenta.setVisible(true);
			
					
		} else {
			//this.formapagopuntoventaSessionBean.setConGuardarRelaciones(false);			
			this.formapagopuntoventaSessionBean.setEstaModoGuardarRelaciones(false);						
			this.jInternalFrameDetalleFormFormaPagoPuntoVenta.jTabbedPaneRelacionesFormaPagoPuntoVenta.setVisible(false);
			
			
		}
	};
	
	public int getIndiceNuevoFormaPagoPuntoVenta() throws Exception {
		int iIndice=0;
		Boolean existe=false;
		
		//ARCHITECTURE
		if(Constantes.ISUSAEJBLOGICLAYER) {
			for(FormaPagoPuntoVenta formapagopuntoventaAux:this.formapagopuntoventaLogic.getFormaPagoPuntoVentas()) {
				if(formapagopuntoventaAux.getId().equals(this.iIdNuevoFormaPagoPuntoVenta)) {
					existe=true;
					break;
				}
				
				iIndice++;
			}
		} else if(Constantes.ISUSAEJBREMOTE || Constantes.ISUSAEJBHOME) {
			for(FormaPagoPuntoVenta formapagopuntoventaAux:this.formapagopuntoventas) {
				if(formapagopuntoventaAux.getId().equals(this.iIdNuevoFormaPagoPuntoVenta)) {
					existe=true;
					break;
				}
				
				iIndice++;
			}
		}
		//ARCHITECTURE
		
		if(!existe) {
			//SI NO EXISTE TOMA LA ULTIMA FILA
			iIndice=iIndice-1;
		}
		
		return iIndice;
	}
	
	public int getIndiceActualFormaPagoPuntoVenta(FormaPagoPuntoVenta formapagopuntoventa,Integer iIndiceActual) throws Exception {
		Integer iIndice=0;
		Boolean existe=false;
		
		//ARCHITECTURE
		if(Constantes.ISUSAEJBLOGICLAYER) {
			for(FormaPagoPuntoVenta formapagopuntoventaAux:this.formapagopuntoventaLogic.getFormaPagoPuntoVentas()) {
				if(formapagopuntoventaAux.getId().equals(formapagopuntoventa.getId())) {
					existe=true;
					break;
				}
				
				iIndice++;
			}
		} else if(Constantes.ISUSAEJBREMOTE || Constantes.ISUSAEJBHOME) {
			for(FormaPagoPuntoVenta formapagopuntoventaAux:this.formapagopuntoventas) {
				if(formapagopuntoventaAux.getId().equals(formapagopuntoventa.getId())) {
					existe=true;
					break;
				}
				
				iIndice++;
			}
		}
		//ARCHITECTURE
		
		if(!existe) {
			//SI NO EXISTE TOMA LA ULTIMA FILA
			iIndice=iIndiceActual;
		}
		
		return iIndice;
	}
	
	public void setCamposBaseDesdeOriginalFormaPagoPuntoVenta(FormaPagoPuntoVenta formapagopuntoventaOriginal) throws Exception {
		Boolean existe=false;
		
		//ARCHITECTURE
		if(Constantes.ISUSAEJBLOGICLAYER) {
			for(FormaPagoPuntoVenta formapagopuntoventaAux:this.formapagopuntoventaLogic.getFormaPagoPuntoVentas()) {
				if(formapagopuntoventaAux.getFormaPagoPuntoVentaOriginal().getId().equals(formapagopuntoventaOriginal.getId())) {
					existe=true;
					formapagopuntoventaOriginal.setId(formapagopuntoventaAux.getId());
					formapagopuntoventaOriginal.setVersionRow(formapagopuntoventaAux.getVersionRow());
					break;
				}
				
			}
		} else if(Constantes.ISUSAEJBREMOTE || Constantes.ISUSAEJBHOME) {
			for(FormaPagoPuntoVenta formapagopuntoventaAux:this.formapagopuntoventas) {
				if(formapagopuntoventaAux.getFormaPagoPuntoVentaOriginal().getId().equals(formapagopuntoventaOriginal.getId())) {
					existe=true;
					formapagopuntoventaOriginal.setId(formapagopuntoventaAux.getId());
					formapagopuntoventaOriginal.setVersionRow(formapagopuntoventaAux.getVersionRow());
					break;
				}				
			}
		}
		//ARCHITECTURE
		
		if(!existe) {
			//SI NO EXISTE TOMA LA ULTIMA FILA
		}
	}
	
	public void cancelarNuevosFormaPagoPuntoVenta(Boolean esParaCancelar) throws Exception {
		formapagopuntoventasAux=new ArrayList<FormaPagoPuntoVenta>();
		formapagopuntoventaAux=new FormaPagoPuntoVenta();
		
		if(!this.formapagopuntoventaSessionBean.getEsGuardarRelacionado()) {
			if(Constantes.ISUSAEJBLOGICLAYER) {
				for(FormaPagoPuntoVenta formapagopuntoventaAux:this.formapagopuntoventaLogic.getFormaPagoPuntoVentas()) {
					if(formapagopuntoventaAux.getId()<0) {
						formapagopuntoventasAux.add(formapagopuntoventaAux);
					}		
				}
				this.iIdNuevoFormaPagoPuntoVenta=0L;
				this.formapagopuntoventaLogic.getFormaPagoPuntoVentas().removeAll(formapagopuntoventasAux);
					
			} else if(Constantes.ISUSAEJBREMOTE||Constantes.ISUSAEJBHOME) {
				for(FormaPagoPuntoVenta formapagopuntoventaAux:this.formapagopuntoventas) {
					if(formapagopuntoventaAux.getId()<0) {
						formapagopuntoventasAux.add(formapagopuntoventaAux);
					}		
				}
				this.iIdNuevoFormaPagoPuntoVenta=0L;
				this.formapagopuntoventas.removeAll(formapagopuntoventasAux);
			}	
		} else {			
			if(Constantes.ISUSAEJBLOGICLAYER) {
				if(esParaCancelar && this.isEsNuevoFormaPagoPuntoVenta 
					&& this.formapagopuntoventaLogic.getFormaPagoPuntoVentas().size()>0
					) {
					formapagopuntoventaAux=this.formapagopuntoventaLogic.getFormaPagoPuntoVentas().get(this.formapagopuntoventaLogic.getFormaPagoPuntoVentas().size() - 1);
				
					if(formapagopuntoventaAux.getId()<0) {
						this.formapagopuntoventaLogic.getFormaPagoPuntoVentas().remove(formapagopuntoventaAux);
					}
				}
			} else if(Constantes.ISUSAEJBREMOTE||Constantes.ISUSAEJBHOME) {
				if(esParaCancelar && this.isEsNuevoFormaPagoPuntoVenta && this.formapagopuntoventas.size()>0) {
					formapagopuntoventaAux=this.formapagopuntoventas.get(this.formapagopuntoventas.size() - 1);
				
					if(formapagopuntoventaAux.getId()<0) {
						this.formapagopuntoventas.remove(formapagopuntoventaAux);
					}
				}
			}	
		}
	}
	
	public void cancelarNuevoFormaPagoPuntoVenta(Boolean esParaCancelar) throws Exception {
		if(Constantes.ISUSAEJBLOGICLAYER) {
			if(formapagopuntoventa.getId()<0) {
				this.formapagopuntoventaLogic.getFormaPagoPuntoVentas().remove(this.formapagopuntoventa);
			}					
		} else if(Constantes.ISUSAEJBREMOTE||Constantes.ISUSAEJBHOME) {
			if(formapagopuntoventa.getId()<0) {
				this.formapagopuntoventas.remove(this.formapagopuntoventa);
			}
		}			
	}
	
	public void setEstadosInicialesFormaPagoPuntoVenta(List<FormaPagoPuntoVenta> formapagopuntoventasAux) throws Exception {
		FormaPagoPuntoVentaConstantesFunciones.setEstadosInicialesFormaPagoPuntoVenta(formapagopuntoventasAux);
	}
	
	public void setEstadosInicialesFormaPagoPuntoVenta(FormaPagoPuntoVenta formapagopuntoventaAux) throws Exception {
		FormaPagoPuntoVentaConstantesFunciones.setEstadosInicialesFormaPagoPuntoVenta(formapagopuntoventaAux);		
	}
	
	public void nuevo() throws Exception {
		try	{
			//ESTA VALIDADO EN FUNCION ACTUALIZAR
			//if(this.validarFormaPagoPuntoVentaActual()) {
				this.ejecutarMantenimiento(MaintenanceType.NUEVO);
				
				this.actualizarEstadoCeldasBotonesFormaPagoPuntoVenta("n", isGuardarCambiosEnLote, isEsMantenimientoRelacionado);
				
			//}
		} catch(Exception e) {
			throw e;
			//FuncionesSwing.manageException(this, e,logger,FormaPagoPuntoVentaConstantesFunciones.CLASSNAME);
		}
	}
	
	public void actualizar() throws Exception {
		try	{
			if(this.validarFormaPagoPuntoVentaActual()) {
				if(!this.isEsNuevoFormaPagoPuntoVenta) {
					this.ejecutarMantenimiento(MaintenanceType.ACTUALIZAR);
					
					this.actualizarEstadoCeldasBotonesFormaPagoPuntoVenta("n", isGuardarCambiosEnLote, isEsMantenimientoRelacionado);
					
				} else {					
					this.nuevo();
					this.isEsNuevoFormaPagoPuntoVenta=false;
				}
				
				//SE CANCELA AL FINAL DEL PROCESO JBUTTONACTUALIZAR
				//this.cancelar(false);
			}		
		} catch(Exception e) {
			throw e;
			//FuncionesSwing.manageException(this, e,logger,FormaPagoPuntoVentaConstantesFunciones.CLASSNAME);
		}
	}
	
	public void eliminar() throws Exception {
		try	{	
			if(this.validarFormaPagoPuntoVentaActual()) {
				if(JOptionPane.showConfirmDialog(this, "ESTA SEGURO DE ELIMINAR EL/LA Forma Pago ?", "MANTENIMIENTO DE Forma Pago", JOptionPane.OK_CANCEL_OPTION) == 0) {
					this.ejecutarMantenimiento(MaintenanceType.ELIMINAR);			
					this.actualizarEstadoCeldasBotonesFormaPagoPuntoVenta("n", isGuardarCambiosEnLote, isEsMantenimientoRelacionado);			
				}
			
			}
		} catch(Exception e) {
			throw e;
			//FuncionesSwing.manageException(this, e,logger,FormaPagoPuntoVentaConstantesFunciones.CLASSNAME);
		}
	}
	
	public void guardarCambios() throws Exception {
		try	{
			this.ejecutarMantenimiento(MaintenanceType.GUARDARCAMBIOS);
			
		} catch(Exception e) {
			FuncionesSwing.manageException(this, e,logger,FormaPagoPuntoVentaConstantesFunciones.CLASSNAME);
		}
	}
	
	public void seleccionarAsignar(FormaPagoPuntoVenta formapagopuntoventa) throws Exception {
		FormaPagoPuntoVentaConstantesFunciones.seleccionarAsignar(this.formapagopuntoventa,formapagopuntoventa);
	}
	
	public void seleccionar() throws Exception {
		try	{
			//ACTUALIZO EL PERMISO ACTUALIZAR CON EL PERMISO ACTUALIZAR ORIGINAL ESTE PERMISO SE UTILIZA PARA EL NUEVO TAMBIEN
			this.isPermisoActualizarFormaPagoPuntoVenta=this.isPermisoActualizarOriginalFormaPagoPuntoVenta;
			
			
			this.seleccionarAsignar(formapagopuntoventa);
			
			

			idCuentaContableActual=formapagopuntoventa.getid_cuenta_contable();
			this.seleccionarCuentaContableActual();

			idAsientoContableActual=formapagopuntoventa.getid_asiento_contable();
			this.seleccionarAsientoContableActual();
			
			this.arrDatoGeneral= new  ArrayList<DatoGeneral>();
			this.arrDatoGeneralNo= new  ArrayList<String>();
			
			FormaPagoPuntoVentaConstantesFunciones.quitarEspaciosFormaPagoPuntoVenta(this.formapagopuntoventa,this.arrDatoGeneral);
			
			
			this.actualizarEstadoCeldasBotonesFormaPagoPuntoVenta("ae", isGuardarCambiosEnLote, isEsMantenimientoRelacionado);
			
						
		} catch(Exception e) {
			FuncionesSwing.manageException(this, e,logger,FormaPagoPuntoVentaConstantesFunciones.CLASSNAME);
		}
	}
	
	public void seleccionarBusqueda(Long id) throws Exception {
		try	{
			this.formapagopuntoventaSessionBean.setsFuncionBusquedaRapida(this.formapagopuntoventaSessionBean.getsFuncionBusquedaRapida().replace("TO_REPLACE", id.toString()));
			
		} catch(Exception e) {
			FuncionesSwing.manageException(this, e,logger,FormaPagoPuntoVentaConstantesFunciones.CLASSNAME);
		}
	}
	
	
	//BUSQUEDA INTERNA FK
	public void seleccionarCuentaContableActual() throws Exception {
		try	{
			CuentaContable cuentacontableAux=new CuentaContable();

			if(this.idCuentaContableActual != null && this.idCuentaContableActual>0) {
				//ARCHITECTURE
				if(Constantes.ISUSAEJBLOGICLAYER) {
					cuentacontableLogic.getEntityWithConnection(this.idCuentaContableActual);
					cuentacontableAux= cuentacontableLogic.getCuentaContable();
				} else if(Constantes.ISUSAEJBREMOTE) {
				} else if(Constantes.ISUSAEJBHOME) {
				}
				//ARCHITECTURE

				cuentacontablesForeignKey=new ArrayList<CuentaContable>();
				cuentacontablesForeignKey.add(cuentacontableAux);
			}

		} catch(Exception e) {
			FuncionesSwing.manageException(this, e,logger);
		}
	}
	public void seleccionarAsientoContableActual() throws Exception {
		try	{
			AsientoContable asientocontableAux=new AsientoContable();

			if(this.idAsientoContableActual != null && this.idAsientoContableActual>0) {
				//ARCHITECTURE
				if(Constantes.ISUSAEJBLOGICLAYER) {
					asientocontableLogic.getEntityWithConnection(this.idAsientoContableActual);
					asientocontableAux= asientocontableLogic.getAsientoContable();
				} else if(Constantes.ISUSAEJBREMOTE) {
				} else if(Constantes.ISUSAEJBHOME) {
				}
				//ARCHITECTURE

				asientocontablesForeignKey=new ArrayList<AsientoContable>();
				asientocontablesForeignKey.add(asientocontableAux);
			}

		} catch(Exception e) {
			FuncionesSwing.manageException(this, e,logger);
		}
	}
	
	public void cancelar() throws Exception {
		this.cancelar(true);
	}
	
	public void cancelar(Boolean esParaCancelar) throws Exception {
		try {
														
			
			//SE UTILIZA COLUMNA ELIMINAR EN TABLA
			if(this.isEsNuevoFormaPagoPuntoVenta) {
				//NO CANCELA TODOS NUEVOS POR FUNCIONALIDAD GUARDAR CAMBIOS
				//this.cancelarNuevosFormaPagoPuntoVenta(esParaCancelar);				
				this.cancelarNuevoFormaPagoPuntoVenta(esParaCancelar);								
			}
			
			this.formapagopuntoventa=new FormaPagoPuntoVenta();
			
			this.inicializarFormaPagoPuntoVenta();
			
			this.actualizarEstadoCeldasBotonesFormaPagoPuntoVenta("n", isGuardarCambiosEnLote, isEsMantenimientoRelacionado);			
		
		} catch(Exception e) {
			FuncionesSwing.manageException(this, e,logger,FormaPagoPuntoVentaConstantesFunciones.CLASSNAME);
		}
	}
	
	public void inicializarFormaPagoPuntoVenta() throws Exception {
		try {
			FormaPagoPuntoVentaConstantesFunciones.inicializarFormaPagoPuntoVenta(this.formapagopuntoventa);
			
			} catch(Exception e) {
			throw e;
		}
	}
	
	public void anteriores()throws Exception {
		try	{
			//this.iNumeroPaginacionPagina=this.iNumeroPaginacionPagina-this.iNumeroPaginacion;
			
			if(this.iNumeroPaginacionPagina-this.iNumeroPaginacion<this.iNumeroPaginacion) {
				this.iNumeroPaginacionPagina=0;		
			} else {
				this.iNumeroPaginacionPagina=this.iNumeroPaginacionPagina-this.iNumeroPaginacion;
			}
			
			this.procesarBusqueda(this.sAccionBusqueda);
			
		} catch(Exception e) {
			FuncionesSwing.manageException(this, e,logger,FormaPagoPuntoVentaConstantesFunciones.CLASSNAME);
		}
	}
	
	public void siguientes()throws Exception {
		try	{			
			if(this.formapagopuntoventaLogic.getFormaPagoPuntoVentas().size()>0) {
					
				this.iNumeroPaginacionPagina=this.iNumeroPaginacionPagina+this.iNumeroPaginacion;
			}
				
			this.procesarBusqueda(this.sAccionBusqueda);
			
		} catch(Exception e) {
			FuncionesSwing.manageException(this, e,logger,FormaPagoPuntoVentaConstantesFunciones.CLASSNAME);
		}
	}		
	
	public void generarReporteFormaPagoPuntoVentas(String sAccionBusqueda,List<FormaPagoPuntoVenta> formapagopuntoventasParaReportes) throws Exception {
		//HttpSession httpSession = httpServletRequest.getSession();
		Long iIdUsuarioSesion=0L;	
		
		
		if(usuarioActual==null) {
			this.usuarioActual=new Usuario();
		}
		
		iIdUsuarioSesion=usuarioActual.getId();
		
		String sPathReportes="";
		
		InputStream reportFile=null;
		InputStream imageFile=null;
			
		imageFile=AuxiliarImagenes.class.getResourceAsStream("LogoReporte.jpg");			
				
		
		String sPathReporteFinal="";
		
		if(!esReporteAccionProceso) {
			if(!this.sTipoReporte.equals("RELACIONES")) {//!isEsReporteRelaciones
				if(!this.esReporteDinamico) {
					sPathReporteFinal="FormaPagoPuntoVenta"+this.sTipoReporteExtra+"Design.jasper";
					reportFile = AuxiliarReportes.class.getResourceAsStream(sPathReporteFinal);	
				} else {
					sPathReporteFinal=this.sPathReporteDinamico;
					reportFile = new FileInputStream(sPathReporteFinal);
				}
			} else {
				sPathReporteFinal="FormaPagoPuntoVentaMasterRelaciones"+this.sTipoReporteExtra+"Design.jasper";
				reportFile = AuxiliarReportes.class.getResourceAsStream(sPathReporteFinal);
				//sPathReportes=reportFile.getPath().replace("FormaPagoPuntoVentaMasterRelacionesDesign.jasper", "");
			}
		} else {
				sPathReporteFinal="FormaPagoPuntoVenta"+this.sTipoReporteExtra+"Design.jasper";
				reportFile = AuxiliarReportes.class.getResourceAsStream(sPathReporteFinal);	
		}
		
		if(reportFile==null) {
			throw new JRRuntimeException(sPathReporteFinal+" no existe");
		}
		
		String sUsuario="";
		
		if(usuarioActual!=null) {
			sUsuario=usuarioActual.getuser_name();
		}
		
		Map<String, Object> parameters = new HashMap<String, Object>();
		parameters.put("usuario", sUsuario);
		
		parameters.put("titulo", Funciones.GetTituloSistemaReporte(this.parametroGeneralSg,this.moduloActual,this.usuarioActual));
		parameters.put("subtitulo", "Reporte De  Forma Pagoes");		
		parameters.put("busquedapor", FormaPagoPuntoVentaConstantesFunciones.getNombreIndice(sAccionBusqueda)+sDetalleReporte);
		
		
		if(this.sTipoReporte.equals("RELACIONES")) {//isEsReporteRelaciones
			parameters.put("SUBREPORT_DIR", sPathReportes);
		}
		
		parameters.put("con_grafico", this.conGraficoReporte);
		
		JasperReport jasperReport = (JasperReport)JRLoader.loadObject(reportFile);
				
		this.cargarDatosCliente();
		
		ArrayList<Classe> classes=new ArrayList<Classe>();		
		
		if(this.sTipoReporte.equals("RELACIONES")) {//isEsReporteRelaciones
			
			
		} else {
			//FK DEBERIA TRAERSE DE ANTEMANO
			
		}
								
		
		//CLASSES PARA REPORTES OBJETOS RELACIONADOS
		if(!this.sTipoReporte.equals("RELACIONES")) {//!isEsReporteRelaciones
			classes=new ArrayList<Classe>();
		}
		
		JRBeanArrayDataSource jrbeanArrayDataSourceFormaPagoPuntoVenta=null;
		
		if(this.sTipoReporteExtra!=null && !this.sTipoReporteExtra.equals("")) {
			FormaPagoPuntoVentaConstantesFunciones.S_TIPOREPORTE_EXTRA=this.sTipoReporteExtra;
		} else {
			FormaPagoPuntoVentaConstantesFunciones.S_TIPOREPORTE_EXTRA="";
		}
		
		jrbeanArrayDataSourceFormaPagoPuntoVenta=new JRBeanArrayDataSource(FormaPagoPuntoVentaJInternalFrame.TraerFormaPagoPuntoVentaBeans(formapagopuntoventasParaReportes,classes).toArray());
		
		jasperPrint = JasperFillManager.fillReport(jasperReport,parameters,jrbeanArrayDataSourceFormaPagoPuntoVenta);
				
		
		String sPathDest=Constantes.SUNIDAD_ARCHIVOS+":/"+Constantes.SCONTEXTSERVER+"/"+FormaPagoPuntoVentaConstantesFunciones.SCHEMA+"/reportes";
		
		File filePathDest = new File(sPathDest);
		
		if(!filePathDest.exists()) {
			filePathDest.mkdirs();				
		}
				
		String sDestFileName=sPathDest+"/"+FormaPagoPuntoVentaConstantesFunciones.CLASSNAME;
				
		if(this.sTipoArchivoReporte=="VISUALIZAR") {
			JasperViewer jasperViewer = new JasperViewer(jasperPrint,false) ;
			jasperViewer.setVisible(true) ; 

		} else if(this.sTipoArchivoReporte=="HTML"||this.sTipoArchivoReporte=="PDF"||this.sTipoArchivoReporte=="XML") {	
			//JasperFillManager.fillReportToFile(reportFile.getAbsolutePath(),parameters, new JRBeanArrayDataSource(FormaPagoPuntoVentaBean.TraerFormaPagoPuntoVentaBeans(formapagopuntoventasParaReportes).toArray()));
							
			if(this.sTipoArchivoReporte=="HTML") {
				sDestFileName+=".html";
				JasperExportManager.exportReportToHtmlFile(jasperPrint,sDestFileName);
					
			} else if(this.sTipoArchivoReporte=="PDF") {
				sDestFileName+=".pdf";
				JasperExportManager.exportReportToPdfFile(jasperPrint,sDestFileName);
			} else {
				sDestFileName+=".xml";
				JasperExportManager.exportReportToXmlFile(jasperPrint,sDestFileName, false);
			}	
			
		} else if(this.sTipoArchivoReporte=="WORD"||this.sTipoArchivoReporte=="EXCEL") {
				
			if(this.sTipoArchivoReporte=="WORD") {
				sDestFileName+=".rtf";
					
				JRRtfExporter exporter = new JRRtfExporter();
		
				exporter.setParameter(JRExporterParameter.JASPER_PRINT, jasperPrint);
				exporter.setParameter(JRExporterParameter.OUTPUT_FILE_NAME, sDestFileName);
		
				exporter.exportReport();
				
			} else	{
				sDestFileName+=".xls";
					
				JRXlsExporter exporterXls = new JRXlsExporter();
		
				exporterXls.setParameter(JRExporterParameter.JASPER_PRINT, jasperPrint);
				exporterXls.setParameter(JRExporterParameter.OUTPUT_FILE_NAME, sDestFileName);
				exporterXls.setParameter(JRXlsExporterParameter.IS_ONE_PAGE_PER_SHEET, Boolean.TRUE);
		
				exporterXls.exportReport();
			}
			
		} else if(this.sTipoArchivoReporte=="EXCEL2"||this.sTipoArchivoReporte=="EXCEL2_2") {
			//sDestFileName+=".xlsx";
			
			if(this.sTipoReporte.equals("NORMAL")) {
				this.generarExcelReporteFormaPagoPuntoVentas(sAccionBusqueda,sTipoArchivoReporte,formapagopuntoventasParaReportes);
			
			} else if(this.sTipoReporte.equals("FORMULARIO")){
				this.generarExcelReporteVerticalFormaPagoPuntoVentas(sAccionBusqueda,sTipoArchivoReporte,formapagopuntoventasParaReportes,false);
			
			} else if(this.sTipoReporte.equals("DINAMICO")){
				
				if(this.sTipoReporteDinamico.equals("NORMAL")) {
					/*
					this.jButtonGenerarExcelReporteDinamicoFormaPagoPuntoVentaActionPerformed(null);
					//this.generarExcelReporteFormaPagoPuntoVentas(sAccionBusqueda,sTipoArchivoReporte,formapagopuntoventasParaReportes);
					*/
				
				} else if(this.sTipoReporteDinamico.equals("FORMULARIO")){
					this.generarExcelReporteVerticalFormaPagoPuntoVentas(sAccionBusqueda,sTipoArchivoReporte,formapagopuntoventasParaReportes,true);
				
				} else if(this.sTipoReporteDinamico.equals("RELACIONES")){
					this.generarExcelReporteRelacionesFormaPagoPuntoVentas(sAccionBusqueda,sTipoArchivoReporte,formapagopuntoventasParaReportes,true);
				}
				
			} else if(this.sTipoReporte.equals("RELACIONES")){
				this.generarExcelReporteRelacionesFormaPagoPuntoVentas(sAccionBusqueda,sTipoArchivoReporte,formapagopuntoventasParaReportes,false);
			}
		}
		
		if(this.sTipoArchivoReporte=="HTML"||this.sTipoArchivoReporte=="PDF"||this.sTipoArchivoReporte=="XML"||this.sTipoArchivoReporte=="WORD"||this.sTipoArchivoReporte=="EXCEL") {				
			JOptionPane.showMessageDialog(this,"REPORTE "+sDestFileName+" GENERADO SATISFACTORIAMENTE","REPORTES ",JOptionPane.INFORMATION_MESSAGE);
		}
	}
	
	public void generarExcelReporteFormaPagoPuntoVentas(String sAccionBusqueda,String sTipoArchivoReporte,List<FormaPagoPuntoVenta> formapagopuntoventasParaReportes) throws Exception {
	 	Workbook workbook = null;
		String sPath=this.parametroGeneralUsuario.getpath_exportar()+"formapagopuntoventa";
		
		if(sTipoArchivoReporte=="EXCEL2") {
			workbook = new HSSFWorkbook();
			sPath+=".xls";
		
		} else if(sTipoArchivoReporte=="EXCEL2_2") {
			workbook = new XSSFWorkbook();
			sPath+=".xlsx";			
		}
		
		
		
		Sheet sheet = workbook.createSheet("FormaPagoPuntoVentas");
         
        int iRow = 0;
		int iCell = 0;
		Row row =null;
		Cell cell=null;
		
		row = sheet.createRow(iRow++);
		
		this.generarExcelReporteHeaderFormaPagoPuntoVenta("NORMAL",row,workbook);
		
		CellStyle cellStyleData = Funciones2.getStyleTitulo(workbook,"ZEBRA");
		CellStyle cellStyleDataAux=null;
		
		int i=0;
		
      	for(FormaPagoPuntoVenta formapagopuntoventa : formapagopuntoventasParaReportes) {            
			row = sheet.createRow(iRow++);
			iCell = 0;
			
			cellStyleDataAux=null;
			
			if(i%2==0) {
				cellStyleDataAux=cellStyleData;
			}
			
			FormaPagoPuntoVentaConstantesFunciones.generarExcelReporteDataFormaPagoPuntoVenta("NORMAL",row,workbook,formapagopuntoventa,cellStyleDataAux);
		
			
			/*
            Cell cell0 = row.createCell(0);
            cell0.setCellValue(country.getName());
            Cell cell1 = row.createCell(1);
            cell1.setCellValue(country.getShortCode());
			*/
			
			i++;
        }
        
		
        FileOutputStream fileOutputStream = new FileOutputStream(sPath);
		
        workbook.write(fileOutputStream);
		
        fileOutputStream.close();
		
		Constantes2.S_PATH_ULTIMO_ARCHIVO=sPath;
			
		if(this.parametroGeneralUsuario.getcon_mensaje_confirmacion() && !this.formapagopuntoventaSessionBean.getEsGuardarRelacionado()) {//Constantes.ISMOSTRARMENSAJESMANTENIMIENTO && 
			JOptionPane.showMessageDialog(this,"EXPORTADO CORRECTAMENTE:"+sPath,"MANTENIMIENTO DE Forma Pago",JOptionPane.INFORMATION_MESSAGE);
		}
	}
	
	public void generarExcelReporteHeaderFormaPagoPuntoVenta(String sTipo,Row row,Workbook workbook) {
		
		FormaPagoPuntoVentaConstantesFunciones.generarExcelReporteHeaderFormaPagoPuntoVenta(sTipo,row,workbook);
		
		/*
		Cell cell=null;
		int iCell=0;
		
		CellStyle cellStyle = workbook.createCellStyle();
		cellStyle.setFillBackgroundColor(IndexedColors.GREEN.getIndex());
		cellStyle.setFillPattern(CellStyle.ALIGN_FILL);
		*/
		
	}
	
	public void generarExcelReporteVerticalFormaPagoPuntoVentas(String sAccionBusqueda,String sTipoArchivoReporte,List<FormaPagoPuntoVenta> formapagopuntoventasParaReportes,Boolean paraDinamico) throws Exception {
	 	Workbook workbook = null;
		String sPath=this.parametroGeneralUsuario.getpath_exportar()+"formapagopuntoventa_vertical";
		
		if(sTipoArchivoReporte=="EXCEL2") {
			workbook = new HSSFWorkbook();
			sPath+=".xls";
		
		} else if(sTipoArchivoReporte=="EXCEL2_2") {
			workbook = new XSSFWorkbook();
			sPath+=".xlsx";			
		}
		
		
		
		Sheet sheet = workbook.createSheet("FormaPagoPuntoVentas");
         
        int iRow = 0;
		int iRowLast = 0;
		int iCell = 0;
		Row row =null;
		Cell cell=null;
		
		row = sheet.createRow(iRow++);
		
		CellStyle cellStyle = Funciones2.getStyleTitulo(workbook,"ZEBRA");;
		
		CellStyle cellStyleTitulo = Funciones2.getStyleTitulo(workbook,"PRINCIPAL_VERTICAL");
		
		
		for(FormaPagoPuntoVenta formapagopuntoventa : formapagopuntoventasParaReportes) {
			row = sheet.createRow(iRow++);
			iRowLast=iRow - 1;
			
			cell = row.createCell(0);
			cell.setCellValue(FormaPagoPuntoVentaConstantesFunciones.getFormaPagoPuntoVentaDescripcion(formapagopuntoventa));
			cell.setCellStyle(cellStyleTitulo);
			
			sheet.addMergedRegion(new CellRangeAddress(iRowLast,iRowLast,0,2));			
	
			


			if(!paraDinamico || (paraDinamico && this.existeColumnaReporteDinamico(FormaPagoPuntoVentaConstantesFunciones.LABEL_IDEMPRESA))) {
				row = sheet.createRow(iRow++);

				cell = row.createCell(0);
				cell.setCellValue(FormaPagoPuntoVentaConstantesFunciones.LABEL_IDEMPRESA);
				cell.setCellStyle(cellStyle);

				cell = row.createCell(1);
				cell.setCellValue(formapagopuntoventa.getempresa_descripcion());


			}


			if(!paraDinamico || (paraDinamico && this.existeColumnaReporteDinamico(FormaPagoPuntoVentaConstantesFunciones.LABEL_IDSUCURSAL))) {
				row = sheet.createRow(iRow++);

				cell = row.createCell(0);
				cell.setCellValue(FormaPagoPuntoVentaConstantesFunciones.LABEL_IDSUCURSAL);
				cell.setCellStyle(cellStyle);

				cell = row.createCell(1);
				cell.setCellValue(formapagopuntoventa.getsucursal_descripcion());


			}


			if(!paraDinamico || (paraDinamico && this.existeColumnaReporteDinamico(FormaPagoPuntoVentaConstantesFunciones.LABEL_IDEJERCICIO))) {
				row = sheet.createRow(iRow++);

				cell = row.createCell(0);
				cell.setCellValue(FormaPagoPuntoVentaConstantesFunciones.LABEL_IDEJERCICIO);
				cell.setCellStyle(cellStyle);

				cell = row.createCell(1);
				cell.setCellValue(formapagopuntoventa.getejercicio_descripcion());


			}


			if(!paraDinamico || (paraDinamico && this.existeColumnaReporteDinamico(FormaPagoPuntoVentaConstantesFunciones.LABEL_IDPERIODO))) {
				row = sheet.createRow(iRow++);

				cell = row.createCell(0);
				cell.setCellValue(FormaPagoPuntoVentaConstantesFunciones.LABEL_IDPERIODO);
				cell.setCellStyle(cellStyle);

				cell = row.createCell(1);
				cell.setCellValue(formapagopuntoventa.getperiodo_descripcion());


			}


			if(!paraDinamico || (paraDinamico && this.existeColumnaReporteDinamico(FormaPagoPuntoVentaConstantesFunciones.LABEL_IDFACTURAPUNTOVENTA))) {
				row = sheet.createRow(iRow++);

				cell = row.createCell(0);
				cell.setCellValue(FormaPagoPuntoVentaConstantesFunciones.LABEL_IDFACTURAPUNTOVENTA);
				cell.setCellStyle(cellStyle);

				cell = row.createCell(1);
				cell.setCellValue(formapagopuntoventa.getfacturapuntoventa_descripcion());


			}


			if(!paraDinamico || (paraDinamico && this.existeColumnaReporteDinamico(FormaPagoPuntoVentaConstantesFunciones.LABEL_IDTIPOFORMAPAGO))) {
				row = sheet.createRow(iRow++);

				cell = row.createCell(0);
				cell.setCellValue(FormaPagoPuntoVentaConstantesFunciones.LABEL_IDTIPOFORMAPAGO);
				cell.setCellStyle(cellStyle);

				cell = row.createCell(1);
				cell.setCellValue(formapagopuntoventa.gettipoformapago_descripcion());


			}


			if(!paraDinamico || (paraDinamico && this.existeColumnaReporteDinamico(FormaPagoPuntoVentaConstantesFunciones.LABEL_PORCENTAJE))) {
				row = sheet.createRow(iRow++);

				cell = row.createCell(0);
				cell.setCellValue(FormaPagoPuntoVentaConstantesFunciones.LABEL_PORCENTAJE);
				cell.setCellStyle(cellStyle);

				cell = row.createCell(1);
				cell.setCellValue(formapagopuntoventa.getporcentaje());


			}


			if(!paraDinamico || (paraDinamico && this.existeColumnaReporteDinamico(FormaPagoPuntoVentaConstantesFunciones.LABEL_VALOR))) {
				row = sheet.createRow(iRow++);

				cell = row.createCell(0);
				cell.setCellValue(FormaPagoPuntoVentaConstantesFunciones.LABEL_VALOR);
				cell.setCellStyle(cellStyle);

				cell = row.createCell(1);
				cell.setCellValue(formapagopuntoventa.getvalor());


			}


			if(!paraDinamico || (paraDinamico && this.existeColumnaReporteDinamico(FormaPagoPuntoVentaConstantesFunciones.LABEL_FECHA))) {
				row = sheet.createRow(iRow++);

				cell = row.createCell(0);
				cell.setCellValue(FormaPagoPuntoVentaConstantesFunciones.LABEL_FECHA);
				cell.setCellStyle(cellStyle);

				cell = row.createCell(1);
				cell.setCellValue(formapagopuntoventa.getfecha());


			}


			if(!paraDinamico || (paraDinamico && this.existeColumnaReporteDinamico(FormaPagoPuntoVentaConstantesFunciones.LABEL_DESCRIPCION))) {
				row = sheet.createRow(iRow++);

				cell = row.createCell(0);
				cell.setCellValue(FormaPagoPuntoVentaConstantesFunciones.LABEL_DESCRIPCION);
				cell.setCellStyle(cellStyle);

				cell = row.createCell(1);
				cell.setCellValue(formapagopuntoventa.getdescripcion());


			}


			if(!paraDinamico || (paraDinamico && this.existeColumnaReporteDinamico(FormaPagoPuntoVentaConstantesFunciones.LABEL_FECHAINICIO))) {
				row = sheet.createRow(iRow++);

				cell = row.createCell(0);
				cell.setCellValue(FormaPagoPuntoVentaConstantesFunciones.LABEL_FECHAINICIO);
				cell.setCellStyle(cellStyle);

				cell = row.createCell(1);
				cell.setCellValue(formapagopuntoventa.getfecha_inicio());


			}


			if(!paraDinamico || (paraDinamico && this.existeColumnaReporteDinamico(FormaPagoPuntoVentaConstantesFunciones.LABEL_NUMERODIASPLAZO))) {
				row = sheet.createRow(iRow++);

				cell = row.createCell(0);
				cell.setCellValue(FormaPagoPuntoVentaConstantesFunciones.LABEL_NUMERODIASPLAZO);
				cell.setCellStyle(cellStyle);

				cell = row.createCell(1);
				cell.setCellValue(formapagopuntoventa.getnumero_dias_plazo());


			}


			if(!paraDinamico || (paraDinamico && this.existeColumnaReporteDinamico(FormaPagoPuntoVentaConstantesFunciones.LABEL_FECHAFIN))) {
				row = sheet.createRow(iRow++);

				cell = row.createCell(0);
				cell.setCellValue(FormaPagoPuntoVentaConstantesFunciones.LABEL_FECHAFIN);
				cell.setCellStyle(cellStyle);

				cell = row.createCell(1);
				cell.setCellValue(formapagopuntoventa.getfecha_fin());


			}


			if(!paraDinamico || (paraDinamico && this.existeColumnaReporteDinamico(FormaPagoPuntoVentaConstantesFunciones.LABEL_IDBANCO))) {
				row = sheet.createRow(iRow++);

				cell = row.createCell(0);
				cell.setCellValue(FormaPagoPuntoVentaConstantesFunciones.LABEL_IDBANCO);
				cell.setCellStyle(cellStyle);

				cell = row.createCell(1);
				cell.setCellValue(formapagopuntoventa.getbanco_descripcion());


			}


			if(!paraDinamico || (paraDinamico && this.existeColumnaReporteDinamico(FormaPagoPuntoVentaConstantesFunciones.LABEL_IDCUENTABANCOPUNVEN))) {
				row = sheet.createRow(iRow++);

				cell = row.createCell(0);
				cell.setCellValue(FormaPagoPuntoVentaConstantesFunciones.LABEL_IDCUENTABANCOPUNVEN);
				cell.setCellStyle(cellStyle);

				cell = row.createCell(1);
				cell.setCellValue(formapagopuntoventa.getcuentabancopunven_descripcion());


			}


			if(!paraDinamico || (paraDinamico && this.existeColumnaReporteDinamico(FormaPagoPuntoVentaConstantesFunciones.LABEL_IDTIPORIESGOCHEQUE))) {
				row = sheet.createRow(iRow++);

				cell = row.createCell(0);
				cell.setCellValue(FormaPagoPuntoVentaConstantesFunciones.LABEL_IDTIPORIESGOCHEQUE);
				cell.setCellStyle(cellStyle);

				cell = row.createCell(1);
				cell.setCellValue(formapagopuntoventa.gettiporiesgocheque_descripcion());


			}


			if(!paraDinamico || (paraDinamico && this.existeColumnaReporteDinamico(FormaPagoPuntoVentaConstantesFunciones.LABEL_NUMEROCUENTA))) {
				row = sheet.createRow(iRow++);

				cell = row.createCell(0);
				cell.setCellValue(FormaPagoPuntoVentaConstantesFunciones.LABEL_NUMEROCUENTA);
				cell.setCellStyle(cellStyle);

				cell = row.createCell(1);
				cell.setCellValue(formapagopuntoventa.getnumero_cuenta());


			}


			if(!paraDinamico || (paraDinamico && this.existeColumnaReporteDinamico(FormaPagoPuntoVentaConstantesFunciones.LABEL_NUMEROCHEQUE))) {
				row = sheet.createRow(iRow++);

				cell = row.createCell(0);
				cell.setCellValue(FormaPagoPuntoVentaConstantesFunciones.LABEL_NUMEROCHEQUE);
				cell.setCellStyle(cellStyle);

				cell = row.createCell(1);
				cell.setCellValue(formapagopuntoventa.getnumero_cheque());


			}


			if(!paraDinamico || (paraDinamico && this.existeColumnaReporteDinamico(FormaPagoPuntoVentaConstantesFunciones.LABEL_GIRADOR))) {
				row = sheet.createRow(iRow++);

				cell = row.createCell(0);
				cell.setCellValue(FormaPagoPuntoVentaConstantesFunciones.LABEL_GIRADOR);
				cell.setCellStyle(cellStyle);

				cell = row.createCell(1);
				cell.setCellValue(formapagopuntoventa.getgirador());


			}


			if(!paraDinamico || (paraDinamico && this.existeColumnaReporteDinamico(FormaPagoPuntoVentaConstantesFunciones.LABEL_IDBANCOTARJETA))) {
				row = sheet.createRow(iRow++);

				cell = row.createCell(0);
				cell.setCellValue(FormaPagoPuntoVentaConstantesFunciones.LABEL_IDBANCOTARJETA);
				cell.setCellStyle(cellStyle);

				cell = row.createCell(1);
				cell.setCellValue(formapagopuntoventa.getbancotarjeta_descripcion());


			}


			if(!paraDinamico || (paraDinamico && this.existeColumnaReporteDinamico(FormaPagoPuntoVentaConstantesFunciones.LABEL_IDTARJETACREDITO))) {
				row = sheet.createRow(iRow++);

				cell = row.createCell(0);
				cell.setCellValue(FormaPagoPuntoVentaConstantesFunciones.LABEL_IDTARJETACREDITO);
				cell.setCellStyle(cellStyle);

				cell = row.createCell(1);
				cell.setCellValue(formapagopuntoventa.gettarjetacredito_descripcion());


			}


			if(!paraDinamico || (paraDinamico && this.existeColumnaReporteDinamico(FormaPagoPuntoVentaConstantesFunciones.LABEL_IDTIPOINTERESTARJETA))) {
				row = sheet.createRow(iRow++);

				cell = row.createCell(0);
				cell.setCellValue(FormaPagoPuntoVentaConstantesFunciones.LABEL_IDTIPOINTERESTARJETA);
				cell.setCellStyle(cellStyle);

				cell = row.createCell(1);
				cell.setCellValue(formapagopuntoventa.gettipointerestarjeta_descripcion());


			}


			if(!paraDinamico || (paraDinamico && this.existeColumnaReporteDinamico(FormaPagoPuntoVentaConstantesFunciones.LABEL_IDTIPOPAGOTARJETA))) {
				row = sheet.createRow(iRow++);

				cell = row.createCell(0);
				cell.setCellValue(FormaPagoPuntoVentaConstantesFunciones.LABEL_IDTIPOPAGOTARJETA);
				cell.setCellStyle(cellStyle);

				cell = row.createCell(1);
				cell.setCellValue(formapagopuntoventa.gettipopagotarjeta_descripcion());


			}


			if(!paraDinamico || (paraDinamico && this.existeColumnaReporteDinamico(FormaPagoPuntoVentaConstantesFunciones.LABEL_IDCONEXION))) {
				row = sheet.createRow(iRow++);

				cell = row.createCell(0);
				cell.setCellValue(FormaPagoPuntoVentaConstantesFunciones.LABEL_IDCONEXION);
				cell.setCellStyle(cellStyle);

				cell = row.createCell(1);
				cell.setCellValue(formapagopuntoventa.getconexion_descripcion());


			}


			if(!paraDinamico || (paraDinamico && this.existeColumnaReporteDinamico(FormaPagoPuntoVentaConstantesFunciones.LABEL_IDMES))) {
				row = sheet.createRow(iRow++);

				cell = row.createCell(0);
				cell.setCellValue(FormaPagoPuntoVentaConstantesFunciones.LABEL_IDMES);
				cell.setCellStyle(cellStyle);

				cell = row.createCell(1);
				cell.setCellValue(formapagopuntoventa.getmes_descripcion());


			}


			if(!paraDinamico || (paraDinamico && this.existeColumnaReporteDinamico(FormaPagoPuntoVentaConstantesFunciones.LABEL_NUMERO))) {
				row = sheet.createRow(iRow++);

				cell = row.createCell(0);
				cell.setCellValue(FormaPagoPuntoVentaConstantesFunciones.LABEL_NUMERO);
				cell.setCellStyle(cellStyle);

				cell = row.createCell(1);
				cell.setCellValue(formapagopuntoventa.getnumero());


			}


			if(!paraDinamico || (paraDinamico && this.existeColumnaReporteDinamico(FormaPagoPuntoVentaConstantesFunciones.LABEL_TARJETAHABIENTE))) {
				row = sheet.createRow(iRow++);

				cell = row.createCell(0);
				cell.setCellValue(FormaPagoPuntoVentaConstantesFunciones.LABEL_TARJETAHABIENTE);
				cell.setCellStyle(cellStyle);

				cell = row.createCell(1);
				cell.setCellValue(formapagopuntoventa.gettarjeta_habiente());


			}


			if(!paraDinamico || (paraDinamico && this.existeColumnaReporteDinamico(FormaPagoPuntoVentaConstantesFunciones.LABEL_AUTORIZACION))) {
				row = sheet.createRow(iRow++);

				cell = row.createCell(0);
				cell.setCellValue(FormaPagoPuntoVentaConstantesFunciones.LABEL_AUTORIZACION);
				cell.setCellStyle(cellStyle);

				cell = row.createCell(1);
				cell.setCellValue(formapagopuntoventa.getautorizacion());


			}


			if(!paraDinamico || (paraDinamico && this.existeColumnaReporteDinamico(FormaPagoPuntoVentaConstantesFunciones.LABEL_VOUCHER))) {
				row = sheet.createRow(iRow++);

				cell = row.createCell(0);
				cell.setCellValue(FormaPagoPuntoVentaConstantesFunciones.LABEL_VOUCHER);
				cell.setCellStyle(cellStyle);

				cell = row.createCell(1);
				cell.setCellValue(formapagopuntoventa.getvoucher());


			}


			if(!paraDinamico || (paraDinamico && this.existeColumnaReporteDinamico(FormaPagoPuntoVentaConstantesFunciones.LABEL_LOTE))) {
				row = sheet.createRow(iRow++);

				cell = row.createCell(0);
				cell.setCellValue(FormaPagoPuntoVentaConstantesFunciones.LABEL_LOTE);
				cell.setCellStyle(cellStyle);

				cell = row.createCell(1);
				cell.setCellValue(formapagopuntoventa.getlote());


			}


			if(!paraDinamico || (paraDinamico && this.existeColumnaReporteDinamico(FormaPagoPuntoVentaConstantesFunciones.LABEL_CUOTA))) {
				row = sheet.createRow(iRow++);

				cell = row.createCell(0);
				cell.setCellValue(FormaPagoPuntoVentaConstantesFunciones.LABEL_CUOTA);
				cell.setCellStyle(cellStyle);

				cell = row.createCell(1);
				cell.setCellValue(formapagopuntoventa.getcuota());


			}


			if(!paraDinamico || (paraDinamico && this.existeColumnaReporteDinamico(FormaPagoPuntoVentaConstantesFunciones.LABEL_VALORRETENCION))) {
				row = sheet.createRow(iRow++);

				cell = row.createCell(0);
				cell.setCellValue(FormaPagoPuntoVentaConstantesFunciones.LABEL_VALORRETENCION);
				cell.setCellStyle(cellStyle);

				cell = row.createCell(1);
				cell.setCellValue(formapagopuntoventa.getvalor_retencion());


			}


			if(!paraDinamico || (paraDinamico && this.existeColumnaReporteDinamico(FormaPagoPuntoVentaConstantesFunciones.LABEL_VALORCOMISION))) {
				row = sheet.createRow(iRow++);

				cell = row.createCell(0);
				cell.setCellValue(FormaPagoPuntoVentaConstantesFunciones.LABEL_VALORCOMISION);
				cell.setCellStyle(cellStyle);

				cell = row.createCell(1);
				cell.setCellValue(formapagopuntoventa.getvalor_comision());


			}


			if(!paraDinamico || (paraDinamico && this.existeColumnaReporteDinamico(FormaPagoPuntoVentaConstantesFunciones.LABEL_VALORCALCULADO))) {
				row = sheet.createRow(iRow++);

				cell = row.createCell(0);
				cell.setCellValue(FormaPagoPuntoVentaConstantesFunciones.LABEL_VALORCALCULADO);
				cell.setCellStyle(cellStyle);

				cell = row.createCell(1);
				cell.setCellValue(formapagopuntoventa.getvalor_calculado());


			}


			if(!paraDinamico || (paraDinamico && this.existeColumnaReporteDinamico(FormaPagoPuntoVentaConstantesFunciones.LABEL_VALORCANCELADO))) {
				row = sheet.createRow(iRow++);

				cell = row.createCell(0);
				cell.setCellValue(FormaPagoPuntoVentaConstantesFunciones.LABEL_VALORCANCELADO);
				cell.setCellStyle(cellStyle);

				cell = row.createCell(1);
				cell.setCellValue(formapagopuntoventa.getvalor_cancelado());


			}


			if(!paraDinamico || (paraDinamico && this.existeColumnaReporteDinamico(FormaPagoPuntoVentaConstantesFunciones.LABEL_VALORDIFIERE))) {
				row = sheet.createRow(iRow++);

				cell = row.createCell(0);
				cell.setCellValue(FormaPagoPuntoVentaConstantesFunciones.LABEL_VALORDIFIERE);
				cell.setCellStyle(cellStyle);

				cell = row.createCell(1);
				cell.setCellValue(formapagopuntoventa.getvalor_difiere());


			}


			if(!paraDinamico || (paraDinamico && this.existeColumnaReporteDinamico(FormaPagoPuntoVentaConstantesFunciones.LABEL_NUMERORETENCION))) {
				row = sheet.createRow(iRow++);

				cell = row.createCell(0);
				cell.setCellValue(FormaPagoPuntoVentaConstantesFunciones.LABEL_NUMERORETENCION);
				cell.setCellStyle(cellStyle);

				cell = row.createCell(1);
				cell.setCellValue(formapagopuntoventa.getnumero_retencion());


			}


			if(!paraDinamico || (paraDinamico && this.existeColumnaReporteDinamico(FormaPagoPuntoVentaConstantesFunciones.LABEL_NUMEROLIQUIDACION))) {
				row = sheet.createRow(iRow++);

				cell = row.createCell(0);
				cell.setCellValue(FormaPagoPuntoVentaConstantesFunciones.LABEL_NUMEROLIQUIDACION);
				cell.setCellStyle(cellStyle);

				cell = row.createCell(1);
				cell.setCellValue(formapagopuntoventa.getnumero_liquidacion());


			}


			if(!paraDinamico || (paraDinamico && this.existeColumnaReporteDinamico(FormaPagoPuntoVentaConstantesFunciones.LABEL_IDANIO))) {
				row = sheet.createRow(iRow++);

				cell = row.createCell(0);
				cell.setCellValue(FormaPagoPuntoVentaConstantesFunciones.LABEL_IDANIO);
				cell.setCellStyle(cellStyle);

				cell = row.createCell(1);
				cell.setCellValue(formapagopuntoventa.getanio_descripcion());


			}


			if(!paraDinamico || (paraDinamico && this.existeColumnaReporteDinamico(FormaPagoPuntoVentaConstantesFunciones.LABEL_IDCUENTACONTABLE))) {
				row = sheet.createRow(iRow++);

				cell = row.createCell(0);
				cell.setCellValue(FormaPagoPuntoVentaConstantesFunciones.LABEL_IDCUENTACONTABLE);
				cell.setCellStyle(cellStyle);

				cell = row.createCell(1);
				cell.setCellValue(formapagopuntoventa.getcuentacontable_descripcion());


			}


			if(!paraDinamico || (paraDinamico && this.existeColumnaReporteDinamico(FormaPagoPuntoVentaConstantesFunciones.LABEL_IDASIENTOCONTABLE))) {
				row = sheet.createRow(iRow++);

				cell = row.createCell(0);
				cell.setCellValue(FormaPagoPuntoVentaConstantesFunciones.LABEL_IDASIENTOCONTABLE);
				cell.setCellStyle(cellStyle);

				cell = row.createCell(1);
				cell.setCellValue(formapagopuntoventa.getasientocontable_descripcion());


			}						
        }
        
		
        FileOutputStream fileOutputStream = new FileOutputStream(sPath);
		
        workbook.write(fileOutputStream);
		
        fileOutputStream.close();
		
		Constantes2.S_PATH_ULTIMO_ARCHIVO=sPath;
			
		if(this.parametroGeneralUsuario.getcon_mensaje_confirmacion() && !this.formapagopuntoventaSessionBean.getEsGuardarRelacionado()) {//Constantes.ISMOSTRARMENSAJESMANTENIMIENTO && 
			JOptionPane.showMessageDialog(this,"EXPORTADO CORRECTAMENTE:"+sPath,"MANTENIMIENTO DE Forma Pago",JOptionPane.INFORMATION_MESSAGE);
		}
	}
	
	public void generarExcelReporteRelacionesFormaPagoPuntoVentas(String sAccionBusqueda,String sTipoArchivoReporte,List<FormaPagoPuntoVenta> formapagopuntoventasParaReportes,Boolean paraDinamico) throws Exception {
		
		ArrayList<Classe> classes=new ArrayList<Classe>();
		List<FormaPagoPuntoVenta> formapagopuntoventasRespaldo=null;
		
		classes=FormaPagoPuntoVentaConstantesFunciones.getClassesRelationshipsOfFormaPagoPuntoVenta(new ArrayList<Classe>(),DeepLoadType.NONE,false);
					
		this.datosDeep=new DatosDeep();
		
		this.datosDeep.setIsDeep(false);
		this.datosDeep.setDeepLoadType(DeepLoadType.INCLUDE);
		this.datosDeep.setClases(classes);
			
		this.datosCliente.setDatosDeepParametros(false, DeepLoadType.INCLUDE, classes, "");
		this.datosCliente.setIsConDeep(true);	
		this.datosCliente.setIsConExportar(false);
		
						
		this.formapagopuntoventaLogic.setDatosCliente(this.datosCliente);
		this.formapagopuntoventaLogic.setDatosDeep(this.datosDeep);
		this.formapagopuntoventaLogic.setIsConDeep(true);
		
		formapagopuntoventasRespaldo=this.formapagopuntoventaLogic.getFormaPagoPuntoVentas();
		
		this.formapagopuntoventaLogic.setFormaPagoPuntoVentas(formapagopuntoventasParaReportes);	
		this.formapagopuntoventaLogic.deepLoadsWithConnection(false, DeepLoadType.INCLUDE, classes,"");
		
		formapagopuntoventasParaReportes=this.formapagopuntoventaLogic.getFormaPagoPuntoVentas();
		this.formapagopuntoventaLogic.setFormaPagoPuntoVentas(formapagopuntoventasRespaldo);
		
		
	 	Workbook workbook = null;
		String sPath=this.parametroGeneralUsuario.getpath_exportar()+"formapagopuntoventa_relacion";
		
		if(sTipoArchivoReporte=="EXCEL2") {
			workbook = new HSSFWorkbook();
			sPath+=".xls";
		
		} else if(sTipoArchivoReporte=="EXCEL2_2") {
			workbook = new XSSFWorkbook();
			sPath+=".xlsx";			
		}
		
		
		
		Sheet sheet = workbook.createSheet("FormaPagoPuntoVentas");
         
        int iRow = 0;
		int iRowLast = 0;
		int iCell = 0;
		Row row =null;
		Cell cell=null;
		
		row = sheet.createRow(iRow++);
		
		this.generarExcelReporteHeaderFormaPagoPuntoVenta("NORMAL",row,workbook);
		
		int i=0;
		int i2=0;
		
		CellStyle cellStyleData = Funciones2.getStyleTitulo(workbook,"ZEBRA");
		CellStyle cellStyleDataTitulo = Funciones2.getStyleTitulo(workbook,"PRINCIPAL");
		CellStyle cellStyleDataZebra = Funciones2.getStyleTitulo(workbook,"ZEBRA");
		CellStyle cellStyleDataAux =null;
		CellStyle cellStyleDataAuxHijo =null;
		
		for(FormaPagoPuntoVenta formapagopuntoventa : formapagopuntoventasParaReportes) {			
			if(i!=0) {
				row = sheet.createRow(iRow++);				
				this.generarExcelReporteHeaderFormaPagoPuntoVenta("NORMAL",row,workbook);
			}
			
			cellStyleDataAux=null;
			
			if(i%2==0) {
				//cellStyleDataAux=cellStyleData;
			}
			
			row = sheet.createRow(iRow++);						
			FormaPagoPuntoVentaConstantesFunciones.generarExcelReporteDataFormaPagoPuntoVenta("NORMAL",row,workbook,formapagopuntoventa,cellStyleDataAux);
		
			
			
			
			i++;
        }
        
		/*
		row = sheet.createRow(iRow++);
		iRowLast=iRow - 1;
			
		cell = row.createCell(0);
		cell.setCellValue(FormaPagoPuntoVentaConstantesFunciones.getFormaPagoPuntoVentaDescripcion(formapagopuntoventa));
		cell.setCellStyle(cellStyleTitulo);
			
		sheet.addMergedRegion(new CellRangeAddress(iRowLast,iRowLast,0,2));			
		*/
		
			
		
        FileOutputStream fileOutputStream = new FileOutputStream(sPath);
		
        workbook.write(fileOutputStream);
		
        fileOutputStream.close();
		
		Constantes2.S_PATH_ULTIMO_ARCHIVO=sPath;
			
		if(this.parametroGeneralUsuario.getcon_mensaje_confirmacion() && !this.formapagopuntoventaSessionBean.getEsGuardarRelacionado()) {//Constantes.ISMOSTRARMENSAJESMANTENIMIENTO && 
			JOptionPane.showMessageDialog(this,"EXPORTADO CORRECTAMENTE:"+sPath,"MANTENIMIENTO DE Forma Pago",JOptionPane.INFORMATION_MESSAGE);
		}
	}
	
	
	public Boolean existeColumnaReporteDinamico(String sColumna) {
		Boolean existe=false;
		
		Reporte reporte=new Reporte();
		
		/*
		for(int index:this.jInternalFrameReporteDinamicoFormaPagoPuntoVenta.getjListColumnasSelectReporte().getSelectedIndices()) {
			reporte=(Reporte)this.jInternalFrameReporteDinamicoFormaPagoPuntoVenta.getjListColumnasSelectReporte().getModel().getElementAt(index);
			
			if(sColumna.equals(reporte.getsCodigo())) {
				existe=true;
				break;
			}
		
		}
		*/
		
		return existe;
	}
	
	public Boolean existeRelacionReporteDinamico(String sColumna) {
		Boolean existe=false;
		
		Reporte reporte=new Reporte();
		
		/*
		for(int index:this.jInternalFrameReporteDinamicoFormaPagoPuntoVenta.getjListRelacionesSelectReporte().getSelectedIndices()) {
			reporte=(Reporte)this.jInternalFrameReporteDinamicoFormaPagoPuntoVenta.getjListRelacionesSelectReporte().getModel().getElementAt(index);
			
			if(sColumna.equals(reporte.getsCodigo())) {
				existe=true;
				break;
			}
		
		}
		*/
		
		return existe;
	}
	
	public void startProcessFormaPagoPuntoVenta() throws Exception {		
		this.startProcessFormaPagoPuntoVenta(true);
	}
	
	public void startProcessFormaPagoPuntoVenta(Boolean conSplash) throws Exception {		
		//FuncionesSwing.enableDisablePanels(false,this.jTabbedPaneBusquedasFormaPagoPuntoVenta ,this.jPanelParametrosReportesFormaPagoPuntoVenta, this.jScrollPanelDatosFormaPagoPuntoVenta,this.jPanelPaginacionFormaPagoPuntoVenta, this.jScrollPanelDatosEdicionFormaPagoPuntoVenta, this.jPanelAccionesFormaPagoPuntoVenta,this.jPanelAccionesFormularioFormaPagoPuntoVenta,this.jmenuBarFormaPagoPuntoVenta,this.jmenuBarDetalleFormaPagoPuntoVenta,this.jTtoolBarFormaPagoPuntoVenta,this.jTtoolBarDetalleFormaPagoPuntoVenta);		
		
		final JTabbedPane jTabbedPaneBusquedasFormaPagoPuntoVenta=new JTabbedPane();
		
		final JPanel jPanelParametrosReportesFormaPagoPuntoVenta=this.jPanelParametrosReportesFormaPagoPuntoVenta;
		//final JScrollPane jScrollPanelDatosFormaPagoPuntoVenta=this.jScrollPanelDatosFormaPagoPuntoVenta;
		final JTable jTableDatosFormaPagoPuntoVenta=this.jTableDatosFormaPagoPuntoVenta;		
		final JPanel jPanelPaginacionFormaPagoPuntoVenta=this.jPanelPaginacionFormaPagoPuntoVenta;
		//final JScrollPane jScrollPanelDatosEdicionFormaPagoPuntoVenta=this.jScrollPanelDatosEdicionFormaPagoPuntoVenta;
		final JPanel jPanelAccionesFormaPagoPuntoVenta=this.jPanelAccionesFormaPagoPuntoVenta;
		
		JPanel jPanelCamposAuxiliarFormaPagoPuntoVenta=new JPanelMe();
		JPanel jPanelAccionesFormularioAuxiliarFormaPagoPuntoVenta=new JPanelMe();
		
		if(this.jInternalFrameDetalleFormFormaPagoPuntoVenta!=null) {
			jPanelCamposAuxiliarFormaPagoPuntoVenta=this.jInternalFrameDetalleFormFormaPagoPuntoVenta.jPanelCamposFormaPagoPuntoVenta;
			jPanelAccionesFormularioAuxiliarFormaPagoPuntoVenta=this.jInternalFrameDetalleFormFormaPagoPuntoVenta.jPanelAccionesFormularioFormaPagoPuntoVenta;
		}
		
		final JPanel jPanelCamposFormaPagoPuntoVenta=jPanelCamposAuxiliarFormaPagoPuntoVenta;
		final JPanel jPanelAccionesFormularioFormaPagoPuntoVenta=jPanelAccionesFormularioAuxiliarFormaPagoPuntoVenta;
		
		
		final JMenuBar jmenuBarFormaPagoPuntoVenta=new JMenuBar();
		final JMenuBar jmenuBarDetalleFormaPagoPuntoVenta=new JMenuBar();
		final JToolBar jTtoolBarFormaPagoPuntoVenta=new JToolBar();
		final JToolBar jTtoolBarDetalleFormaPagoPuntoVenta=new JToolBar();		
		
		
		if(Constantes2.CON_PROCESO_HILO) {
			Thread threadRunnableProcess;
			ProcessRunnable processRunnable;
			
			processRunnable=new ProcessRunnable();
			
			processRunnable.setsTipo("START");
			processRunnable.setDesktop(jDesktopPane);
			processRunnable.setModuloActual(moduloActual);
			processRunnable.setModuloUsuarioSeleccionado(moduloActual);
			processRunnable.setOpcionActual(opcionActual);
			processRunnable.setParametroGeneralSg(parametroGeneralSg);
			processRunnable.setParametroGeneralUsuario(parametroGeneralUsuario);
			processRunnable.setResumenUsuarioActual(resumenUsuarioActual);
			processRunnable.setUsuarioActual(usuarioActual);
			
			processRunnable.jTabbedPaneBusquedas=jTabbedPaneBusquedasFormaPagoPuntoVenta;
			processRunnable.jPanelParametrosReportes=jPanelParametrosReportesFormaPagoPuntoVenta;
			processRunnable.jTableDatos=jTableDatosFormaPagoPuntoVenta;
			processRunnable.jPanelCampos=jPanelCamposFormaPagoPuntoVenta;
			processRunnable.jPanelPaginacion=jPanelPaginacionFormaPagoPuntoVenta;
			processRunnable.jPanelAcciones=jPanelAccionesFormaPagoPuntoVenta;
			processRunnable.jPanelAccionesFormulario=jPanelAccionesFormularioFormaPagoPuntoVenta;
			
			
			processRunnable.jmenuBar=jmenuBarFormaPagoPuntoVenta;
			processRunnable.jmenuBarDetalle=jmenuBarDetalleFormaPagoPuntoVenta;
			processRunnable.jTtoolBar=jTtoolBarFormaPagoPuntoVenta;
			processRunnable.jTtoolBarDetalle=jTtoolBarDetalleFormaPagoPuntoVenta;
			processRunnable.jInternalFrameBase=this;
			
			//processRunnable.CargarObjetosRendimientoCriticoModuloInventario();
			
			
			threadRunnableProcess=new Thread(processRunnable);//.start();
					
			threadRunnableProcess.start();
			
		} else {
			FuncionesSwing.enableDisablePanels(false,jTabbedPaneBusquedasFormaPagoPuntoVenta ,jPanelParametrosReportesFormaPagoPuntoVenta,jTableDatosFormaPagoPuntoVenta, /*jScrollPanelDatosFormaPagoPuntoVenta,*/jPanelCamposFormaPagoPuntoVenta,jPanelPaginacionFormaPagoPuntoVenta, /*jScrollPanelDatosEdicionFormaPagoPuntoVenta,*/ jPanelAccionesFormaPagoPuntoVenta,jPanelAccionesFormularioFormaPagoPuntoVenta,jmenuBarFormaPagoPuntoVenta,jmenuBarDetalleFormaPagoPuntoVenta,jTtoolBarFormaPagoPuntoVenta,jTtoolBarDetalleFormaPagoPuntoVenta);
		
			startProcess();//this.
		}
						
		/*
		if(conSplash) {
			SwingUtilities.invokeLater(new Runnable() {
			      public void run() {
			    	  try {
							FuncionesSwing.enableDisablePanels(false,jTabbedPaneBusquedasFormaPagoPuntoVenta ,jPanelParametrosReportesFormaPagoPuntoVenta, jScrollPanelDatosFormaPagoPuntoVenta,jPanelPaginacionFormaPagoPuntoVenta, jScrollPanelDatosEdicionFormaPagoPuntoVenta, jPanelAccionesFormaPagoPuntoVenta,jPanelAccionesFormularioFormaPagoPuntoVenta,jmenuBarFormaPagoPuntoVenta,jmenuBarDetalleFormaPagoPuntoVenta,jTtoolBarFormaPagoPuntoVenta,jTtoolBarDetalleFormaPagoPuntoVenta);
						
							startProcess();//this.
							
						} catch (Exception e) {
							// TODO Auto-generated catch block
							e.printStackTrace();
						}
			      }
			});
		}
		*/
	}
	
	public void finishProcessFormaPagoPuntoVenta() {// throws Exception 
		this.finishProcessFormaPagoPuntoVenta(true);
	}
	
	public void finishProcessFormaPagoPuntoVenta(Boolean conSplash) {// throws Exception 
		//FuncionesSwing.enableDisablePanels(true,this.jTabbedPaneBusquedasFormaPagoPuntoVenta ,this.jPanelParametrosReportesFormaPagoPuntoVenta, this.jScrollPanelDatosFormaPagoPuntoVenta,this.jPanelPaginacionFormaPagoPuntoVenta, this.jScrollPanelDatosEdicionFormaPagoPuntoVenta, this.jPanelAccionesFormaPagoPuntoVenta,this.jPanelAccionesFormularioFormaPagoPuntoVenta,this.jmenuBarFormaPagoPuntoVenta,this.jmenuBarDetalleFormaPagoPuntoVenta,this.jTtoolBarFormaPagoPuntoVenta,this.jTtoolBarDetalleFormaPagoPuntoVenta);		
		
		final JTabbedPane jTabbedPaneBusquedasFormaPagoPuntoVenta=new JTabbedPane();
		
		final JPanel jPanelParametrosReportesFormaPagoPuntoVenta=this.jPanelParametrosReportesFormaPagoPuntoVenta;
		//final JScrollPane jScrollPanelDatosFormaPagoPuntoVenta=this.jScrollPanelDatosFormaPagoPuntoVenta;
		final JTable jTableDatosFormaPagoPuntoVenta=this.jTableDatosFormaPagoPuntoVenta;		
		final JPanel jPanelPaginacionFormaPagoPuntoVenta=this.jPanelPaginacionFormaPagoPuntoVenta;
		//final JScrollPane jScrollPanelDatosEdicionFormaPagoPuntoVenta=this.jScrollPanelDatosEdicionFormaPagoPuntoVenta;
		final JPanel jPanelAccionesFormaPagoPuntoVenta=this.jPanelAccionesFormaPagoPuntoVenta;
		
		JPanel jPanelCamposAuxiliarFormaPagoPuntoVenta=new JPanel();
		JPanel jPanelAccionesFormularioAuxiliarFormaPagoPuntoVenta=new JPanel();
		
		if(this.jInternalFrameDetalleFormFormaPagoPuntoVenta!=null) {
			jPanelCamposAuxiliarFormaPagoPuntoVenta=this.jInternalFrameDetalleFormFormaPagoPuntoVenta.jPanelCamposFormaPagoPuntoVenta;
			jPanelAccionesFormularioAuxiliarFormaPagoPuntoVenta=this.jInternalFrameDetalleFormFormaPagoPuntoVenta.jPanelAccionesFormularioFormaPagoPuntoVenta;
		}
		
		final JPanel jPanelCamposFormaPagoPuntoVenta=jPanelCamposAuxiliarFormaPagoPuntoVenta;
		final JPanel jPanelAccionesFormularioFormaPagoPuntoVenta=jPanelAccionesFormularioAuxiliarFormaPagoPuntoVenta;
		
		
		final JMenuBar jmenuBarFormaPagoPuntoVenta=new JMenuBar();
		final JMenuBar jmenuBarDetalleFormaPagoPuntoVenta=new JMenuBar();
		final JToolBar jTtoolBarFormaPagoPuntoVenta=new JToolBar();
		final JToolBar jTtoolBarDetalleFormaPagoPuntoVenta=new JToolBar();		
		
		
		if(Constantes2.CON_PROCESO_HILO) {
			Thread threadRunnableProcess;
			ProcessRunnable processRunnable;
			
			processRunnable=new ProcessRunnable();
			
			processRunnable.setsTipo("END");
			processRunnable.setDesktop(jDesktopPane);
			processRunnable.setModuloActual(moduloActual);
			processRunnable.setModuloUsuarioSeleccionado(moduloActual);
			processRunnable.setOpcionActual(opcionActual);
			processRunnable.setParametroGeneralSg(parametroGeneralSg);
			processRunnable.setParametroGeneralUsuario(parametroGeneralUsuario);
			processRunnable.setResumenUsuarioActual(resumenUsuarioActual);
			processRunnable.setUsuarioActual(usuarioActual);
			
			processRunnable.jTabbedPaneBusquedas=jTabbedPaneBusquedasFormaPagoPuntoVenta;
			processRunnable.jPanelParametrosReportes=jPanelParametrosReportesFormaPagoPuntoVenta;
			processRunnable.jTableDatos=jTableDatosFormaPagoPuntoVenta;
			processRunnable.jPanelCampos=jPanelCamposFormaPagoPuntoVenta;
			processRunnable.jPanelPaginacion=jPanelPaginacionFormaPagoPuntoVenta;
			processRunnable.jPanelAcciones=jPanelAccionesFormaPagoPuntoVenta;
			processRunnable.jPanelAccionesFormulario=jPanelAccionesFormularioFormaPagoPuntoVenta;
			
			
			processRunnable.jmenuBar=jmenuBarFormaPagoPuntoVenta;
			processRunnable.jmenuBarDetalle=jmenuBarDetalleFormaPagoPuntoVenta;
			processRunnable.jTtoolBar=jTtoolBarFormaPagoPuntoVenta;
			processRunnable.jTtoolBarDetalle=jTtoolBarDetalleFormaPagoPuntoVenta;
			processRunnable.jInternalFrameBase=this;
			
			//processRunnable.CargarObjetosRendimientoCriticoModuloInventario();
			
			
			threadRunnableProcess=new Thread(processRunnable);//.start();
					
			threadRunnableProcess.start();
			
		} else {
			if(conSplash) {
				SwingUtilities.invokeLater(new RunnableProceso(true,this,jTabbedPaneBusquedasFormaPagoPuntoVenta ,jPanelParametrosReportesFormaPagoPuntoVenta, jTableDatosFormaPagoPuntoVenta,/*jScrollPanelDatosFormaPagoPuntoVenta,*/jPanelCamposFormaPagoPuntoVenta,jPanelPaginacionFormaPagoPuntoVenta, /*jScrollPanelDatosEdicionFormaPagoPuntoVenta,*/ jPanelAccionesFormaPagoPuntoVenta,jPanelAccionesFormularioFormaPagoPuntoVenta,jmenuBarFormaPagoPuntoVenta,jmenuBarDetalleFormaPagoPuntoVenta,jTtoolBarFormaPagoPuntoVenta,jTtoolBarDetalleFormaPagoPuntoVenta));
			}
		}						
	}
	
	/*
	public void habilitarDeshabilitarControlesFormaPagoPuntoVenta(Boolean esHabilitar,Boolean conDetalle) {
		this.habilitarDeshabilitarToolBarFormaPagoPuntoVenta(esHabilitar,conDetalle);
		this.habilitarDeshabilitarMenuFormaPagoPuntoVenta(esHabilitar,conDetalle);
	}
	
	public void habilitarDeshabilitarToolBarFormaPagoPuntoVenta(Boolean esHabilitar,Boolean conDetalle) {
		FuncionesSwing.enableDisableComponents(this.jTtoolBarFormaPagoPuntoVenta,esHabilitar,1,1);
		
		if(conDetalle) {
			FuncionesSwing.enableDisableComponents(this.jTtoolBarDetalleFormaPagoPuntoVenta,esHabilitar,1,1);
		}
	}
	
	public void habilitarDeshabilitarMenuFormaPagoPuntoVenta(Boolean esHabilitar,Boolean conDetalle) {
		FuncionesSwing.enableDisableComponents(this.jmenuBarFormaPagoPuntoVenta,esHabilitar,1,1);
		
		if(conDetalle) {
			FuncionesSwing.enableDisableComponents(this.jmenuBarDetalleFormaPagoPuntoVenta,esHabilitar,1,1);
		}
	}
	*/
	
	
	
	public void procesarBusqueda(String sAccionBusqueda) throws Exception {		
		String  finalQueryPaginacion=this.formapagopuntoventaConstantesFunciones.getsFinalQueryFormaPagoPuntoVenta();
		String  finalQueryPaginacionTodos=this.formapagopuntoventaConstantesFunciones.getsFinalQueryFormaPagoPuntoVenta();
		
		Boolean esBusqueda=false;
		
		this.actualizarVariablesTipoReporte(true,false,false,"");
		/*
		this.sTipoReporteExtra="";
		this.esReporteDinamico=false;
		this.sPathReporteDinamico="";
		*/
		
		if(!sAccionBusqueda.equals("Todos"))	{
			esBusqueda=true;
		}
		
		this.arrDatoGeneral= new  ArrayList<DatoGeneral>();
		this.arrDatoGeneralNo= new  ArrayList<String>();
		
		ArrayList<String> arrColumnasGlobalesNo=FormaPagoPuntoVentaConstantesFunciones.getArrayColumnasGlobalesNoFormaPagoPuntoVenta(this.arrDatoGeneral);
		ArrayList<String> arrColumnasGlobales=FormaPagoPuntoVentaConstantesFunciones.getArrayColumnasGlobalesFormaPagoPuntoVenta(this.arrDatoGeneral,arrColumnasGlobalesNo);
		
			
		String  finalQueryGlobal="";
		
		finalQueryGlobal=Funciones.GetWhereGlobalConstants(this.parametroGeneralUsuario,this.moduloActual,!esBusqueda,esBusqueda,arrColumnasGlobales,FormaPagoPuntoVentaConstantesFunciones.TABLENAME);
		
		String sOrderBy="";
		
		/*
		sOrderBy=Funciones2.getFinalQueryOrderBy(this.arrOrderBy);
		*/
		
		if(!sOrderBy.equals("")) {			
			finalQueryPaginacion=sOrderBy;
			finalQueryPaginacionTodos=sOrderBy;
		}
		
		
		//INICIALIZA ELIMINADOS
		this.formapagopuntoventasEliminados= new ArrayList<FormaPagoPuntoVenta>();
		
		if(!this.isEntroOnLoad) {
			this.onLoad();
		}/* else {
			this.isEntroOnLoad=false;
		}*/
		
		
		
				
		try	{		
			
			//this.startProcessFormaPagoPuntoVenta();
		
				///*FormaPagoPuntoVentaSessionBean*/this.formapagopuntoventaSessionBean=new FormaPagoPuntoVentaSessionBean();
			
			if(this.formapagopuntoventaSessionBean==null) {
				this.formapagopuntoventaSessionBean=new FormaPagoPuntoVentaSessionBean();
			}
			
			//ACTUALIZA EL TAMANIO DE PAGINACION DESDE EL COMBO
			if(this.sTipoPaginacion!=null && !this.sTipoPaginacion.equals("")) {
				if(!this.sTipoPaginacion.equals("TODOS")) {
					this.iNumeroPaginacion=Integer.parseInt(this.sTipoPaginacion);
				} else {
					this.iNumeroPaginacion=-1;
					this.iNumeroPaginacionPagina=-1;
				}
			} else {
				if(this.iNumeroPaginacion==null || (this.iNumeroPaginacion!=null && this.iNumeroPaginacion<=0)) {
					this.iNumeroPaginacion=FormaPagoPuntoVentaConstantesFunciones.INUMEROPAGINACION;
				}
			}
			
			this.pagination=new Pagination();
			this.pagination.setiFirstResult(this.iNumeroPaginacionPagina);
			this.pagination.setiMaxResults(this.iNumeroPaginacion);
			
			this.cargarDatosCliente();
			
			ArrayList<Classe> classes=new ArrayList<Classe>();
			
			classes=FormaPagoPuntoVentaConstantesFunciones.getClassesForeignKeysOfFormaPagoPuntoVenta(new ArrayList<Classe>(),DeepLoadType.NONE);
			
		
			this.datosDeep=new DatosDeep();
			this.datosDeep.setIsDeep(false);
			this.datosDeep.setDeepLoadType(DeepLoadType.INCLUDE);
			this.datosDeep.setClases(classes);
			
			this.datosCliente.setDatosDeepParametros(false, DeepLoadType.INCLUDE, classes, "");
			this.datosCliente.setIsConDeep(true);
			
			if(false) {//this.conExportar
				this.datosCliente.setIsConExportar(true);
				this.datosCliente.setDatosExportarParametros(Funciones2.getTipoExportar(this.parametroGeneralUsuario),this.parametroGeneralUsuario.getcon_exportar_cabecera(),Funciones2.getTipoDelimiter(this.parametroGeneralUsuario),this.parametroGeneralUsuario.getpath_exportar()+"/formapagopuntoventa."+Funciones2.getTipoExtensionArchivoExportar(this.parametroGeneralUsuario));
			} else {
				this.datosCliente.setIsConExportar(false);
			}
			
			formapagopuntoventasAux= new ArrayList<FormaPagoPuntoVenta>();
			
				
			formapagopuntoventaLogic.setDatosCliente(this.datosCliente);
			formapagopuntoventaLogic.setDatosDeep(this.datosDeep);
			formapagopuntoventaLogic.setIsConDeep(true);
			
			
			formapagopuntoventaLogic.getFormaPagoPuntoVentaDataAccess().setIsForForeingsKeysDataRelationships(true);
			
			if(sAccionBusqueda.equals("Todos") || sAccionBusqueda.equals("Query"))	{	
				if(sAccionBusqueda.equals("Todos")) {
					//FALTA:PARA BUSQUEDAS POR CAMPO EN FORMULARIO
					//this.sFinalQueryGeneral="";
				}
				
				//ARCHITECTURE
				if(Constantes.ISUSAEJBLOGICLAYER) {	
					finalQueryGlobal=Funciones.GetFinalQueryAppendBusqueda(finalQueryGlobal, this.sFinalQueryGeneral,finalQueryPaginacionTodos );
					
					formapagopuntoventaLogic.getTodosFormaPagoPuntoVentas(finalQueryGlobal,pagination);
					
					//formapagopuntoventaLogic.getTodosFormaPagoPuntoVentasWithConnection(finalQueryGlobal,pagination);										
				
				} else if(Constantes.ISUSAEJBREMOTE) {
				} else if(Constantes.ISUSAEJBHOME) {
				}
				//ARCHITECTURE
				
				if(formapagopuntoventaLogic.getFormaPagoPuntoVentas()==null|| formapagopuntoventaLogic.getFormaPagoPuntoVentas().size()==0)	{
					
				
				}
				
				if(false && sTipoArchivoReporte!=""&&sTipoArchivoReporte!=null) {//this.isTipoArchivoReporte
					if(false) {//isMostrarTodosResultadosReporte
						this.pagination.setiFirstResult(-1);
						this.pagination.setiMaxResults(-1);
						
						//ARCHITECTURE
						if(Constantes.ISUSAEJBLOGICLAYER) {	
							formapagopuntoventasAux= new ArrayList<FormaPagoPuntoVenta>();
							formapagopuntoventasAux.addAll(formapagopuntoventaLogic.getFormaPagoPuntoVentas());						
						} else if(Constantes.ISUSAEJBREMOTE || Constantes.ISUSAEJBHOME) {
							formapagopuntoventasAux= new ArrayList<FormaPagoPuntoVenta>();
							formapagopuntoventasAux.addAll(formapagopuntoventas);
						}
						//ARCHITECTURE
						
						//ARCHITECTURE
						if(Constantes.ISUSAEJBLOGICLAYER) {	
							formapagopuntoventaLogic.getTodosFormaPagoPuntoVentas(finalQueryGlobal+"",this.pagination);												
							
							//formapagopuntoventaLogic.getTodosFormaPagoPuntoVentasWithConnection(finalQueryGlobal+"",this.pagination);												
						} else if(Constantes.ISUSAEJBREMOTE) {
						} else if(Constantes.ISUSAEJBHOME) {
						}
						//ARCHITECTURE
						
					}
					
					this.generarReporteFormaPagoPuntoVentas("Todos",formapagopuntoventaLogic.getFormaPagoPuntoVentas() );
					
					if(false) {//isMostrarTodosResultadosReporte						
						//ARCHITECTURE
						if(Constantes.ISUSAEJBLOGICLAYER) {	
							formapagopuntoventaLogic.setFormaPagoPuntoVentas(new ArrayList<FormaPagoPuntoVenta>());					
							formapagopuntoventaLogic.getFormaPagoPuntoVentas().addAll(formapagopuntoventasAux);
						} else if(Constantes.ISUSAEJBREMOTE || Constantes.ISUSAEJBHOME) {
							formapagopuntoventas=new ArrayList<FormaPagoPuntoVenta>();
							formapagopuntoventas.addAll(formapagopuntoventasAux);
						}
						//ARCHITECTURE
						
						this.pagination.setiFirstResult(this.iNumeroPaginacionPagina);
						this.pagination.setiMaxResults(this.iNumeroPaginacion);														
					}
				}
			}
			else if(sAccionBusqueda.equals("PorId")) {
				Long idFormaPagoPuntoVenta=0L;
				
				if(this.idActual!=null && this.idActual!=0L) {
					idFormaPagoPuntoVenta=this.idActual;
				
				} else if(this.idFormaPagoPuntoVentaActual!=null && this.idFormaPagoPuntoVentaActual!=0L) {
					idFormaPagoPuntoVenta=idFormaPagoPuntoVentaActual;
				}
				
					
				this.sDetalleReporte=FormaPagoPuntoVentaConstantesFunciones.getDetalleIndicePorId(idFormaPagoPuntoVenta);
				
				this.formapagopuntoventas=new ArrayList<FormaPagoPuntoVenta>();
				
				//ARCHITECTURE
				if(Constantes.ISUSAEJBLOGICLAYER) {					
					formapagopuntoventaLogic.getEntity(idFormaPagoPuntoVenta);
					
					//formapagopuntoventaLogic.getEntityWithConnection(idFormaPagoPuntoVenta);
				} else if(Constantes.ISUSAEJBREMOTE) {
				} else if(Constantes.ISUSAEJBHOME) {
				}
				//ARCHITECTURE
								
				if(Constantes.ISUSAEJBLOGICLAYER) {
					formapagopuntoventaLogic.setFormaPagoPuntoVentas(new ArrayList<FormaPagoPuntoVenta>());
					formapagopuntoventaLogic.getFormaPagoPuntoVentas().add(formapagopuntoventaLogic.getFormaPagoPuntoVenta());
				
				} else if(Constantes.ISUSAEJBREMOTE || Constantes.ISUSAEJBHOME) {
					this.formapagopuntoventas=new ArrayList<FormaPagoPuntoVenta>();
					this.formapagopuntoventas.add(formapagopuntoventa);
				}
				
				if(formapagopuntoventaLogic.getFormaPagoPuntoVenta()==null)	{
					
				
				}			
			}
			
		
			else if(sAccionBusqueda.equals("FK_IdAsientoContable")) {
				this.sDetalleReporte=FormaPagoPuntoVentaConstantesFunciones.getDetalleIndiceFK_IdAsientoContable(id_asiento_contableFK_IdAsientoContable);

				
				//ARCHITECTURE
				if(Constantes.ISUSAEJBLOGICLAYER) {

					finalQueryGlobal=Funciones.GetFinalQueryAppendBusqueda(finalQueryGlobal, this.sFinalQueryGeneral,finalQueryPaginacion);

					formapagopuntoventaLogic.getFormaPagoPuntoVentasFK_IdAsientoContable(finalQueryGlobal,pagination,id_asiento_contableFK_IdAsientoContable);
				} else if(Constantes.ISUSAEJBREMOTE) {
				this.sDetalleReporte=FormaPagoPuntoVentaConstantesFunciones.getDetalleIndiceFK_IdAsientoContable(id_asiento_contableFK_IdAsientoContable);

				
				} else if(Constantes.ISUSAEJBHOME) {
				this.sDetalleReporte=FormaPagoPuntoVentaConstantesFunciones.getDetalleIndiceFK_IdAsientoContable(id_asiento_contableFK_IdAsientoContable);

				
				}
				//ARCHITECTURE

				Boolean isNoExiste=false;
				//ARCHITECTURE
				if(Constantes.ISUSAEJBLOGICLAYER) {
					isNoExiste=formapagopuntoventaLogic.getFormaPagoPuntoVentas()==null||formapagopuntoventaLogic.getFormaPagoPuntoVentas().size()==0;
				} else if(Constantes.ISUSAEJBREMOTE||Constantes.ISUSAEJBHOME) {
					isNoExiste=formapagopuntoventas==null|| formapagopuntoventas.size()==0;
				}
				//ARCHITECTURE

		if(false && sTipoArchivoReporte!=""&&sTipoArchivoReporte!=null) {//this.isTipoArchivoReporte
			if(false) {//isMostrarTodosResultadosReporte
				this.pagination.setiFirstResult(-1);
				this.pagination.setiMaxResults(-1);

				//ARCHITECTURE
				if(Constantes.ISUSAEJBLOGICLAYER) {
						formapagopuntoventasAux=new ArrayList<FormaPagoPuntoVenta>();
						formapagopuntoventasAux.addAll(formapagopuntoventaLogic.getFormaPagoPuntoVentas());
				} else if(Constantes.ISUSAEJBREMOTE || Constantes.ISUSAEJBHOME) {
							formapagopuntoventasAux=new ArrayList<FormaPagoPuntoVenta>();
							formapagopuntoventasAux.addAll(formapagopuntoventas);
				}
				//ARCHITECTURE
								
				
				//ARCHITECTURE
				if(Constantes.ISUSAEJBLOGICLAYER) {
							finalQueryGlobal=Funciones.GetFinalQueryAppendBusqueda(finalQueryGlobal, this.sFinalQueryGeneral,"");
							formapagopuntoventaLogic.getFormaPagoPuntoVentasFK_IdAsientoContable(finalQueryGlobal,pagination,id_asiento_contableFK_IdAsientoContable);
				} else if(Constantes.ISUSAEJBREMOTE) {
				this.sDetalleReporte=FormaPagoPuntoVentaConstantesFunciones.getDetalleIndiceFK_IdAsientoContable(id_asiento_contableFK_IdAsientoContable);
						
				} else if(Constantes.ISUSAEJBHOME) {
				this.sDetalleReporte=FormaPagoPuntoVentaConstantesFunciones.getDetalleIndiceFK_IdAsientoContable(id_asiento_contableFK_IdAsientoContable);
						
				}
				//ARCHITECTURE
					}
				//ARCHITECTURE
				if(Constantes.ISUSAEJBLOGICLAYER) {
					generarReporteFormaPagoPuntoVentas("FK_IdAsientoContable",formapagopuntoventaLogic.getFormaPagoPuntoVentas());
				} else if(Constantes.ISUSAEJBREMOTE || Constantes.ISUSAEJBHOME) {
					generarReporteFormaPagoPuntoVentas("FK_IdAsientoContable",formapagopuntoventas);
				}
				//ARCHITECTURE

					if(false) {//isMostrarTodosResultadosReporte
						this.pagination.setiFirstResult(this.iNumeroPaginacionPagina);
						this.pagination.setiMaxResults(this.iNumeroPaginacion);

						//ARCHITECTURE
						if(Constantes.ISUSAEJBLOGICLAYER) {
						formapagopuntoventaLogic.setFormaPagoPuntoVentas(new ArrayList<FormaPagoPuntoVenta>());
						formapagopuntoventaLogic.getFormaPagoPuntoVentas().addAll(formapagopuntoventasAux);
						} else if(Constantes.ISUSAEJBREMOTE || Constantes.ISUSAEJBHOME) {
							formapagopuntoventas=new ArrayList<FormaPagoPuntoVenta>();
							formapagopuntoventas.addAll(formapagopuntoventasAux);
						}
						//ARCHITECTURE
					}
				}

			}
			else if(sAccionBusqueda.equals("FK_IdBanco")) {
				this.sDetalleReporte=FormaPagoPuntoVentaConstantesFunciones.getDetalleIndiceFK_IdBanco(id_bancoFK_IdBanco);

				
				//ARCHITECTURE
				if(Constantes.ISUSAEJBLOGICLAYER) {

					finalQueryGlobal=Funciones.GetFinalQueryAppendBusqueda(finalQueryGlobal, this.sFinalQueryGeneral,finalQueryPaginacion);

					formapagopuntoventaLogic.getFormaPagoPuntoVentasFK_IdBanco(finalQueryGlobal,pagination,id_bancoFK_IdBanco);
				} else if(Constantes.ISUSAEJBREMOTE) {
				this.sDetalleReporte=FormaPagoPuntoVentaConstantesFunciones.getDetalleIndiceFK_IdBanco(id_bancoFK_IdBanco);

				
				} else if(Constantes.ISUSAEJBHOME) {
				this.sDetalleReporte=FormaPagoPuntoVentaConstantesFunciones.getDetalleIndiceFK_IdBanco(id_bancoFK_IdBanco);

				
				}
				//ARCHITECTURE

				Boolean isNoExiste=false;
				//ARCHITECTURE
				if(Constantes.ISUSAEJBLOGICLAYER) {
					isNoExiste=formapagopuntoventaLogic.getFormaPagoPuntoVentas()==null||formapagopuntoventaLogic.getFormaPagoPuntoVentas().size()==0;
				} else if(Constantes.ISUSAEJBREMOTE||Constantes.ISUSAEJBHOME) {
					isNoExiste=formapagopuntoventas==null|| formapagopuntoventas.size()==0;
				}
				//ARCHITECTURE

		if(false && sTipoArchivoReporte!=""&&sTipoArchivoReporte!=null) {//this.isTipoArchivoReporte
			if(false) {//isMostrarTodosResultadosReporte
				this.pagination.setiFirstResult(-1);
				this.pagination.setiMaxResults(-1);

				//ARCHITECTURE
				if(Constantes.ISUSAEJBLOGICLAYER) {
						formapagopuntoventasAux=new ArrayList<FormaPagoPuntoVenta>();
						formapagopuntoventasAux.addAll(formapagopuntoventaLogic.getFormaPagoPuntoVentas());
				} else if(Constantes.ISUSAEJBREMOTE || Constantes.ISUSAEJBHOME) {
							formapagopuntoventasAux=new ArrayList<FormaPagoPuntoVenta>();
							formapagopuntoventasAux.addAll(formapagopuntoventas);
				}
				//ARCHITECTURE
								
				
				//ARCHITECTURE
				if(Constantes.ISUSAEJBLOGICLAYER) {
							finalQueryGlobal=Funciones.GetFinalQueryAppendBusqueda(finalQueryGlobal, this.sFinalQueryGeneral,"");
							formapagopuntoventaLogic.getFormaPagoPuntoVentasFK_IdBanco(finalQueryGlobal,pagination,id_bancoFK_IdBanco);
				} else if(Constantes.ISUSAEJBREMOTE) {
				this.sDetalleReporte=FormaPagoPuntoVentaConstantesFunciones.getDetalleIndiceFK_IdBanco(id_bancoFK_IdBanco);
						
				} else if(Constantes.ISUSAEJBHOME) {
				this.sDetalleReporte=FormaPagoPuntoVentaConstantesFunciones.getDetalleIndiceFK_IdBanco(id_bancoFK_IdBanco);
						
				}
				//ARCHITECTURE
					}
				//ARCHITECTURE
				if(Constantes.ISUSAEJBLOGICLAYER) {
					generarReporteFormaPagoPuntoVentas("FK_IdBanco",formapagopuntoventaLogic.getFormaPagoPuntoVentas());
				} else if(Constantes.ISUSAEJBREMOTE || Constantes.ISUSAEJBHOME) {
					generarReporteFormaPagoPuntoVentas("FK_IdBanco",formapagopuntoventas);
				}
				//ARCHITECTURE

					if(false) {//isMostrarTodosResultadosReporte
						this.pagination.setiFirstResult(this.iNumeroPaginacionPagina);
						this.pagination.setiMaxResults(this.iNumeroPaginacion);

						//ARCHITECTURE
						if(Constantes.ISUSAEJBLOGICLAYER) {
						formapagopuntoventaLogic.setFormaPagoPuntoVentas(new ArrayList<FormaPagoPuntoVenta>());
						formapagopuntoventaLogic.getFormaPagoPuntoVentas().addAll(formapagopuntoventasAux);
						} else if(Constantes.ISUSAEJBREMOTE || Constantes.ISUSAEJBHOME) {
							formapagopuntoventas=new ArrayList<FormaPagoPuntoVenta>();
							formapagopuntoventas.addAll(formapagopuntoventasAux);
						}
						//ARCHITECTURE
					}
				}

			}
			else if(sAccionBusqueda.equals("FK_IdBancoTarjeta")) {
				this.sDetalleReporte=FormaPagoPuntoVentaConstantesFunciones.getDetalleIndiceFK_IdBancoTarjeta(id_banco_tarjetaFK_IdBancoTarjeta);

				
				//ARCHITECTURE
				if(Constantes.ISUSAEJBLOGICLAYER) {

					finalQueryGlobal=Funciones.GetFinalQueryAppendBusqueda(finalQueryGlobal, this.sFinalQueryGeneral,finalQueryPaginacion);

					formapagopuntoventaLogic.getFormaPagoPuntoVentasFK_IdBancoTarjeta(finalQueryGlobal,pagination,id_banco_tarjetaFK_IdBancoTarjeta);
				} else if(Constantes.ISUSAEJBREMOTE) {
				this.sDetalleReporte=FormaPagoPuntoVentaConstantesFunciones.getDetalleIndiceFK_IdBancoTarjeta(id_banco_tarjetaFK_IdBancoTarjeta);

				
				} else if(Constantes.ISUSAEJBHOME) {
				this.sDetalleReporte=FormaPagoPuntoVentaConstantesFunciones.getDetalleIndiceFK_IdBancoTarjeta(id_banco_tarjetaFK_IdBancoTarjeta);

				
				}
				//ARCHITECTURE

				Boolean isNoExiste=false;
				//ARCHITECTURE
				if(Constantes.ISUSAEJBLOGICLAYER) {
					isNoExiste=formapagopuntoventaLogic.getFormaPagoPuntoVentas()==null||formapagopuntoventaLogic.getFormaPagoPuntoVentas().size()==0;
				} else if(Constantes.ISUSAEJBREMOTE||Constantes.ISUSAEJBHOME) {
					isNoExiste=formapagopuntoventas==null|| formapagopuntoventas.size()==0;
				}
				//ARCHITECTURE

		if(false && sTipoArchivoReporte!=""&&sTipoArchivoReporte!=null) {//this.isTipoArchivoReporte
			if(false) {//isMostrarTodosResultadosReporte
				this.pagination.setiFirstResult(-1);
				this.pagination.setiMaxResults(-1);

				//ARCHITECTURE
				if(Constantes.ISUSAEJBLOGICLAYER) {
						formapagopuntoventasAux=new ArrayList<FormaPagoPuntoVenta>();
						formapagopuntoventasAux.addAll(formapagopuntoventaLogic.getFormaPagoPuntoVentas());
				} else if(Constantes.ISUSAEJBREMOTE || Constantes.ISUSAEJBHOME) {
							formapagopuntoventasAux=new ArrayList<FormaPagoPuntoVenta>();
							formapagopuntoventasAux.addAll(formapagopuntoventas);
				}
				//ARCHITECTURE
								
				
				//ARCHITECTURE
				if(Constantes.ISUSAEJBLOGICLAYER) {
							finalQueryGlobal=Funciones.GetFinalQueryAppendBusqueda(finalQueryGlobal, this.sFinalQueryGeneral,"");
							formapagopuntoventaLogic.getFormaPagoPuntoVentasFK_IdBancoTarjeta(finalQueryGlobal,pagination,id_banco_tarjetaFK_IdBancoTarjeta);
				} else if(Constantes.ISUSAEJBREMOTE) {
				this.sDetalleReporte=FormaPagoPuntoVentaConstantesFunciones.getDetalleIndiceFK_IdBancoTarjeta(id_banco_tarjetaFK_IdBancoTarjeta);
						
				} else if(Constantes.ISUSAEJBHOME) {
				this.sDetalleReporte=FormaPagoPuntoVentaConstantesFunciones.getDetalleIndiceFK_IdBancoTarjeta(id_banco_tarjetaFK_IdBancoTarjeta);
						
				}
				//ARCHITECTURE
					}
				//ARCHITECTURE
				if(Constantes.ISUSAEJBLOGICLAYER) {
					generarReporteFormaPagoPuntoVentas("FK_IdBancoTarjeta",formapagopuntoventaLogic.getFormaPagoPuntoVentas());
				} else if(Constantes.ISUSAEJBREMOTE || Constantes.ISUSAEJBHOME) {
					generarReporteFormaPagoPuntoVentas("FK_IdBancoTarjeta",formapagopuntoventas);
				}
				//ARCHITECTURE

					if(false) {//isMostrarTodosResultadosReporte
						this.pagination.setiFirstResult(this.iNumeroPaginacionPagina);
						this.pagination.setiMaxResults(this.iNumeroPaginacion);

						//ARCHITECTURE
						if(Constantes.ISUSAEJBLOGICLAYER) {
						formapagopuntoventaLogic.setFormaPagoPuntoVentas(new ArrayList<FormaPagoPuntoVenta>());
						formapagopuntoventaLogic.getFormaPagoPuntoVentas().addAll(formapagopuntoventasAux);
						} else if(Constantes.ISUSAEJBREMOTE || Constantes.ISUSAEJBHOME) {
							formapagopuntoventas=new ArrayList<FormaPagoPuntoVenta>();
							formapagopuntoventas.addAll(formapagopuntoventasAux);
						}
						//ARCHITECTURE
					}
				}

			}
			else if(sAccionBusqueda.equals("FK_IdConexion")) {
				this.sDetalleReporte=FormaPagoPuntoVentaConstantesFunciones.getDetalleIndiceFK_IdConexion(id_conexionFK_IdConexion);

				
				//ARCHITECTURE
				if(Constantes.ISUSAEJBLOGICLAYER) {

					finalQueryGlobal=Funciones.GetFinalQueryAppendBusqueda(finalQueryGlobal, this.sFinalQueryGeneral,finalQueryPaginacion);

					formapagopuntoventaLogic.getFormaPagoPuntoVentasFK_IdConexion(finalQueryGlobal,pagination,id_conexionFK_IdConexion);
				} else if(Constantes.ISUSAEJBREMOTE) {
				this.sDetalleReporte=FormaPagoPuntoVentaConstantesFunciones.getDetalleIndiceFK_IdConexion(id_conexionFK_IdConexion);

				
				} else if(Constantes.ISUSAEJBHOME) {
				this.sDetalleReporte=FormaPagoPuntoVentaConstantesFunciones.getDetalleIndiceFK_IdConexion(id_conexionFK_IdConexion);

				
				}
				//ARCHITECTURE

				Boolean isNoExiste=false;
				//ARCHITECTURE
				if(Constantes.ISUSAEJBLOGICLAYER) {
					isNoExiste=formapagopuntoventaLogic.getFormaPagoPuntoVentas()==null||formapagopuntoventaLogic.getFormaPagoPuntoVentas().size()==0;
				} else if(Constantes.ISUSAEJBREMOTE||Constantes.ISUSAEJBHOME) {
					isNoExiste=formapagopuntoventas==null|| formapagopuntoventas.size()==0;
				}
				//ARCHITECTURE

		if(false && sTipoArchivoReporte!=""&&sTipoArchivoReporte!=null) {//this.isTipoArchivoReporte
			if(false) {//isMostrarTodosResultadosReporte
				this.pagination.setiFirstResult(-1);
				this.pagination.setiMaxResults(-1);

				//ARCHITECTURE
				if(Constantes.ISUSAEJBLOGICLAYER) {
						formapagopuntoventasAux=new ArrayList<FormaPagoPuntoVenta>();
						formapagopuntoventasAux.addAll(formapagopuntoventaLogic.getFormaPagoPuntoVentas());
				} else if(Constantes.ISUSAEJBREMOTE || Constantes.ISUSAEJBHOME) {
							formapagopuntoventasAux=new ArrayList<FormaPagoPuntoVenta>();
							formapagopuntoventasAux.addAll(formapagopuntoventas);
				}
				//ARCHITECTURE
								
				
				//ARCHITECTURE
				if(Constantes.ISUSAEJBLOGICLAYER) {
							finalQueryGlobal=Funciones.GetFinalQueryAppendBusqueda(finalQueryGlobal, this.sFinalQueryGeneral,"");
							formapagopuntoventaLogic.getFormaPagoPuntoVentasFK_IdConexion(finalQueryGlobal,pagination,id_conexionFK_IdConexion);
				} else if(Constantes.ISUSAEJBREMOTE) {
				this.sDetalleReporte=FormaPagoPuntoVentaConstantesFunciones.getDetalleIndiceFK_IdConexion(id_conexionFK_IdConexion);
						
				} else if(Constantes.ISUSAEJBHOME) {
				this.sDetalleReporte=FormaPagoPuntoVentaConstantesFunciones.getDetalleIndiceFK_IdConexion(id_conexionFK_IdConexion);
						
				}
				//ARCHITECTURE
					}
				//ARCHITECTURE
				if(Constantes.ISUSAEJBLOGICLAYER) {
					generarReporteFormaPagoPuntoVentas("FK_IdConexion",formapagopuntoventaLogic.getFormaPagoPuntoVentas());
				} else if(Constantes.ISUSAEJBREMOTE || Constantes.ISUSAEJBHOME) {
					generarReporteFormaPagoPuntoVentas("FK_IdConexion",formapagopuntoventas);
				}
				//ARCHITECTURE

					if(false) {//isMostrarTodosResultadosReporte
						this.pagination.setiFirstResult(this.iNumeroPaginacionPagina);
						this.pagination.setiMaxResults(this.iNumeroPaginacion);

						//ARCHITECTURE
						if(Constantes.ISUSAEJBLOGICLAYER) {
						formapagopuntoventaLogic.setFormaPagoPuntoVentas(new ArrayList<FormaPagoPuntoVenta>());
						formapagopuntoventaLogic.getFormaPagoPuntoVentas().addAll(formapagopuntoventasAux);
						} else if(Constantes.ISUSAEJBREMOTE || Constantes.ISUSAEJBHOME) {
							formapagopuntoventas=new ArrayList<FormaPagoPuntoVenta>();
							formapagopuntoventas.addAll(formapagopuntoventasAux);
						}
						//ARCHITECTURE
					}
				}

			}
			else if(sAccionBusqueda.equals("FK_IdCuentaBancoPunVen")) {
				this.sDetalleReporte=FormaPagoPuntoVentaConstantesFunciones.getDetalleIndiceFK_IdCuentaBancoPunVen(id_cuenta_banco_pun_venFK_IdCuentaBancoPunVen);

				
				//ARCHITECTURE
				if(Constantes.ISUSAEJBLOGICLAYER) {

					finalQueryGlobal=Funciones.GetFinalQueryAppendBusqueda(finalQueryGlobal, this.sFinalQueryGeneral,finalQueryPaginacion);

					formapagopuntoventaLogic.getFormaPagoPuntoVentasFK_IdCuentaBancoPunVen(finalQueryGlobal,pagination,id_cuenta_banco_pun_venFK_IdCuentaBancoPunVen);
				} else if(Constantes.ISUSAEJBREMOTE) {
				this.sDetalleReporte=FormaPagoPuntoVentaConstantesFunciones.getDetalleIndiceFK_IdCuentaBancoPunVen(id_cuenta_banco_pun_venFK_IdCuentaBancoPunVen);

				
				} else if(Constantes.ISUSAEJBHOME) {
				this.sDetalleReporte=FormaPagoPuntoVentaConstantesFunciones.getDetalleIndiceFK_IdCuentaBancoPunVen(id_cuenta_banco_pun_venFK_IdCuentaBancoPunVen);

				
				}
				//ARCHITECTURE

				Boolean isNoExiste=false;
				//ARCHITECTURE
				if(Constantes.ISUSAEJBLOGICLAYER) {
					isNoExiste=formapagopuntoventaLogic.getFormaPagoPuntoVentas()==null||formapagopuntoventaLogic.getFormaPagoPuntoVentas().size()==0;
				} else if(Constantes.ISUSAEJBREMOTE||Constantes.ISUSAEJBHOME) {
					isNoExiste=formapagopuntoventas==null|| formapagopuntoventas.size()==0;
				}
				//ARCHITECTURE

		if(false && sTipoArchivoReporte!=""&&sTipoArchivoReporte!=null) {//this.isTipoArchivoReporte
			if(false) {//isMostrarTodosResultadosReporte
				this.pagination.setiFirstResult(-1);
				this.pagination.setiMaxResults(-1);

				//ARCHITECTURE
				if(Constantes.ISUSAEJBLOGICLAYER) {
						formapagopuntoventasAux=new ArrayList<FormaPagoPuntoVenta>();
						formapagopuntoventasAux.addAll(formapagopuntoventaLogic.getFormaPagoPuntoVentas());
				} else if(Constantes.ISUSAEJBREMOTE || Constantes.ISUSAEJBHOME) {
							formapagopuntoventasAux=new ArrayList<FormaPagoPuntoVenta>();
							formapagopuntoventasAux.addAll(formapagopuntoventas);
				}
				//ARCHITECTURE
								
				
				//ARCHITECTURE
				if(Constantes.ISUSAEJBLOGICLAYER) {
							finalQueryGlobal=Funciones.GetFinalQueryAppendBusqueda(finalQueryGlobal, this.sFinalQueryGeneral,"");
							formapagopuntoventaLogic.getFormaPagoPuntoVentasFK_IdCuentaBancoPunVen(finalQueryGlobal,pagination,id_cuenta_banco_pun_venFK_IdCuentaBancoPunVen);
				} else if(Constantes.ISUSAEJBREMOTE) {
				this.sDetalleReporte=FormaPagoPuntoVentaConstantesFunciones.getDetalleIndiceFK_IdCuentaBancoPunVen(id_cuenta_banco_pun_venFK_IdCuentaBancoPunVen);
						
				} else if(Constantes.ISUSAEJBHOME) {
				this.sDetalleReporte=FormaPagoPuntoVentaConstantesFunciones.getDetalleIndiceFK_IdCuentaBancoPunVen(id_cuenta_banco_pun_venFK_IdCuentaBancoPunVen);
						
				}
				//ARCHITECTURE
					}
				//ARCHITECTURE
				if(Constantes.ISUSAEJBLOGICLAYER) {
					generarReporteFormaPagoPuntoVentas("FK_IdCuentaBancoPunVen",formapagopuntoventaLogic.getFormaPagoPuntoVentas());
				} else if(Constantes.ISUSAEJBREMOTE || Constantes.ISUSAEJBHOME) {
					generarReporteFormaPagoPuntoVentas("FK_IdCuentaBancoPunVen",formapagopuntoventas);
				}
				//ARCHITECTURE

					if(false) {//isMostrarTodosResultadosReporte
						this.pagination.setiFirstResult(this.iNumeroPaginacionPagina);
						this.pagination.setiMaxResults(this.iNumeroPaginacion);

						//ARCHITECTURE
						if(Constantes.ISUSAEJBLOGICLAYER) {
						formapagopuntoventaLogic.setFormaPagoPuntoVentas(new ArrayList<FormaPagoPuntoVenta>());
						formapagopuntoventaLogic.getFormaPagoPuntoVentas().addAll(formapagopuntoventasAux);
						} else if(Constantes.ISUSAEJBREMOTE || Constantes.ISUSAEJBHOME) {
							formapagopuntoventas=new ArrayList<FormaPagoPuntoVenta>();
							formapagopuntoventas.addAll(formapagopuntoventasAux);
						}
						//ARCHITECTURE
					}
				}

			}
			else if(sAccionBusqueda.equals("FK_IdCuentaContable")) {
				this.sDetalleReporte=FormaPagoPuntoVentaConstantesFunciones.getDetalleIndiceFK_IdCuentaContable(id_cuenta_contableFK_IdCuentaContable);

				
				//ARCHITECTURE
				if(Constantes.ISUSAEJBLOGICLAYER) {

					finalQueryGlobal=Funciones.GetFinalQueryAppendBusqueda(finalQueryGlobal, this.sFinalQueryGeneral,finalQueryPaginacion);

					formapagopuntoventaLogic.getFormaPagoPuntoVentasFK_IdCuentaContable(finalQueryGlobal,pagination,id_cuenta_contableFK_IdCuentaContable);
				} else if(Constantes.ISUSAEJBREMOTE) {
				this.sDetalleReporte=FormaPagoPuntoVentaConstantesFunciones.getDetalleIndiceFK_IdCuentaContable(id_cuenta_contableFK_IdCuentaContable);

				
				} else if(Constantes.ISUSAEJBHOME) {
				this.sDetalleReporte=FormaPagoPuntoVentaConstantesFunciones.getDetalleIndiceFK_IdCuentaContable(id_cuenta_contableFK_IdCuentaContable);

				
				}
				//ARCHITECTURE

				Boolean isNoExiste=false;
				//ARCHITECTURE
				if(Constantes.ISUSAEJBLOGICLAYER) {
					isNoExiste=formapagopuntoventaLogic.getFormaPagoPuntoVentas()==null||formapagopuntoventaLogic.getFormaPagoPuntoVentas().size()==0;
				} else if(Constantes.ISUSAEJBREMOTE||Constantes.ISUSAEJBHOME) {
					isNoExiste=formapagopuntoventas==null|| formapagopuntoventas.size()==0;
				}
				//ARCHITECTURE

		if(false && sTipoArchivoReporte!=""&&sTipoArchivoReporte!=null) {//this.isTipoArchivoReporte
			if(false) {//isMostrarTodosResultadosReporte
				this.pagination.setiFirstResult(-1);
				this.pagination.setiMaxResults(-1);

				//ARCHITECTURE
				if(Constantes.ISUSAEJBLOGICLAYER) {
						formapagopuntoventasAux=new ArrayList<FormaPagoPuntoVenta>();
						formapagopuntoventasAux.addAll(formapagopuntoventaLogic.getFormaPagoPuntoVentas());
				} else if(Constantes.ISUSAEJBREMOTE || Constantes.ISUSAEJBHOME) {
							formapagopuntoventasAux=new ArrayList<FormaPagoPuntoVenta>();
							formapagopuntoventasAux.addAll(formapagopuntoventas);
				}
				//ARCHITECTURE
								
				
				//ARCHITECTURE
				if(Constantes.ISUSAEJBLOGICLAYER) {
							finalQueryGlobal=Funciones.GetFinalQueryAppendBusqueda(finalQueryGlobal, this.sFinalQueryGeneral,"");
							formapagopuntoventaLogic.getFormaPagoPuntoVentasFK_IdCuentaContable(finalQueryGlobal,pagination,id_cuenta_contableFK_IdCuentaContable);
				} else if(Constantes.ISUSAEJBREMOTE) {
				this.sDetalleReporte=FormaPagoPuntoVentaConstantesFunciones.getDetalleIndiceFK_IdCuentaContable(id_cuenta_contableFK_IdCuentaContable);
						
				} else if(Constantes.ISUSAEJBHOME) {
				this.sDetalleReporte=FormaPagoPuntoVentaConstantesFunciones.getDetalleIndiceFK_IdCuentaContable(id_cuenta_contableFK_IdCuentaContable);
						
				}
				//ARCHITECTURE
					}
				//ARCHITECTURE
				if(Constantes.ISUSAEJBLOGICLAYER) {
					generarReporteFormaPagoPuntoVentas("FK_IdCuentaContable",formapagopuntoventaLogic.getFormaPagoPuntoVentas());
				} else if(Constantes.ISUSAEJBREMOTE || Constantes.ISUSAEJBHOME) {
					generarReporteFormaPagoPuntoVentas("FK_IdCuentaContable",formapagopuntoventas);
				}
				//ARCHITECTURE

					if(false) {//isMostrarTodosResultadosReporte
						this.pagination.setiFirstResult(this.iNumeroPaginacionPagina);
						this.pagination.setiMaxResults(this.iNumeroPaginacion);

						//ARCHITECTURE
						if(Constantes.ISUSAEJBLOGICLAYER) {
						formapagopuntoventaLogic.setFormaPagoPuntoVentas(new ArrayList<FormaPagoPuntoVenta>());
						formapagopuntoventaLogic.getFormaPagoPuntoVentas().addAll(formapagopuntoventasAux);
						} else if(Constantes.ISUSAEJBREMOTE || Constantes.ISUSAEJBHOME) {
							formapagopuntoventas=new ArrayList<FormaPagoPuntoVenta>();
							formapagopuntoventas.addAll(formapagopuntoventasAux);
						}
						//ARCHITECTURE
					}
				}

			}
			else if(sAccionBusqueda.equals("FK_IdEjercicio")) {
				this.sDetalleReporte=FormaPagoPuntoVentaConstantesFunciones.getDetalleIndiceFK_IdEjercicio(id_ejercicioFK_IdEjercicio);

				
				//ARCHITECTURE
				if(Constantes.ISUSAEJBLOGICLAYER) {

					finalQueryGlobal=Funciones.GetFinalQueryAppendBusqueda(finalQueryGlobal, this.sFinalQueryGeneral,finalQueryPaginacion);

					formapagopuntoventaLogic.getFormaPagoPuntoVentasFK_IdEjercicio(finalQueryGlobal,pagination,id_ejercicioFK_IdEjercicio);
				} else if(Constantes.ISUSAEJBREMOTE) {
				this.sDetalleReporte=FormaPagoPuntoVentaConstantesFunciones.getDetalleIndiceFK_IdEjercicio(id_ejercicioFK_IdEjercicio);

				
				} else if(Constantes.ISUSAEJBHOME) {
				this.sDetalleReporte=FormaPagoPuntoVentaConstantesFunciones.getDetalleIndiceFK_IdEjercicio(id_ejercicioFK_IdEjercicio);

				
				}
				//ARCHITECTURE

				Boolean isNoExiste=false;
				//ARCHITECTURE
				if(Constantes.ISUSAEJBLOGICLAYER) {
					isNoExiste=formapagopuntoventaLogic.getFormaPagoPuntoVentas()==null||formapagopuntoventaLogic.getFormaPagoPuntoVentas().size()==0;
				} else if(Constantes.ISUSAEJBREMOTE||Constantes.ISUSAEJBHOME) {
					isNoExiste=formapagopuntoventas==null|| formapagopuntoventas.size()==0;
				}
				//ARCHITECTURE

		if(false && sTipoArchivoReporte!=""&&sTipoArchivoReporte!=null) {//this.isTipoArchivoReporte
			if(false) {//isMostrarTodosResultadosReporte
				this.pagination.setiFirstResult(-1);
				this.pagination.setiMaxResults(-1);

				//ARCHITECTURE
				if(Constantes.ISUSAEJBLOGICLAYER) {
						formapagopuntoventasAux=new ArrayList<FormaPagoPuntoVenta>();
						formapagopuntoventasAux.addAll(formapagopuntoventaLogic.getFormaPagoPuntoVentas());
				} else if(Constantes.ISUSAEJBREMOTE || Constantes.ISUSAEJBHOME) {
							formapagopuntoventasAux=new ArrayList<FormaPagoPuntoVenta>();
							formapagopuntoventasAux.addAll(formapagopuntoventas);
				}
				//ARCHITECTURE
								
				
				//ARCHITECTURE
				if(Constantes.ISUSAEJBLOGICLAYER) {
							finalQueryGlobal=Funciones.GetFinalQueryAppendBusqueda(finalQueryGlobal, this.sFinalQueryGeneral,"");
							formapagopuntoventaLogic.getFormaPagoPuntoVentasFK_IdEjercicio(finalQueryGlobal,pagination,id_ejercicioFK_IdEjercicio);
				} else if(Constantes.ISUSAEJBREMOTE) {
				this.sDetalleReporte=FormaPagoPuntoVentaConstantesFunciones.getDetalleIndiceFK_IdEjercicio(id_ejercicioFK_IdEjercicio);
						
				} else if(Constantes.ISUSAEJBHOME) {
				this.sDetalleReporte=FormaPagoPuntoVentaConstantesFunciones.getDetalleIndiceFK_IdEjercicio(id_ejercicioFK_IdEjercicio);
						
				}
				//ARCHITECTURE
					}
				//ARCHITECTURE
				if(Constantes.ISUSAEJBLOGICLAYER) {
					generarReporteFormaPagoPuntoVentas("FK_IdEjercicio",formapagopuntoventaLogic.getFormaPagoPuntoVentas());
				} else if(Constantes.ISUSAEJBREMOTE || Constantes.ISUSAEJBHOME) {
					generarReporteFormaPagoPuntoVentas("FK_IdEjercicio",formapagopuntoventas);
				}
				//ARCHITECTURE

					if(false) {//isMostrarTodosResultadosReporte
						this.pagination.setiFirstResult(this.iNumeroPaginacionPagina);
						this.pagination.setiMaxResults(this.iNumeroPaginacion);

						//ARCHITECTURE
						if(Constantes.ISUSAEJBLOGICLAYER) {
						formapagopuntoventaLogic.setFormaPagoPuntoVentas(new ArrayList<FormaPagoPuntoVenta>());
						formapagopuntoventaLogic.getFormaPagoPuntoVentas().addAll(formapagopuntoventasAux);
						} else if(Constantes.ISUSAEJBREMOTE || Constantes.ISUSAEJBHOME) {
							formapagopuntoventas=new ArrayList<FormaPagoPuntoVenta>();
							formapagopuntoventas.addAll(formapagopuntoventasAux);
						}
						//ARCHITECTURE
					}
				}

			}
			else if(sAccionBusqueda.equals("FK_IdEmpresa")) {
				this.sDetalleReporte=FormaPagoPuntoVentaConstantesFunciones.getDetalleIndiceFK_IdEmpresa(id_empresaFK_IdEmpresa);

				
				//ARCHITECTURE
				if(Constantes.ISUSAEJBLOGICLAYER) {

					finalQueryGlobal=Funciones.GetFinalQueryAppendBusqueda(finalQueryGlobal, this.sFinalQueryGeneral,finalQueryPaginacion);

					formapagopuntoventaLogic.getFormaPagoPuntoVentasFK_IdEmpresa(finalQueryGlobal,pagination,id_empresaFK_IdEmpresa);
				} else if(Constantes.ISUSAEJBREMOTE) {
				this.sDetalleReporte=FormaPagoPuntoVentaConstantesFunciones.getDetalleIndiceFK_IdEmpresa(id_empresaFK_IdEmpresa);

				
				} else if(Constantes.ISUSAEJBHOME) {
				this.sDetalleReporte=FormaPagoPuntoVentaConstantesFunciones.getDetalleIndiceFK_IdEmpresa(id_empresaFK_IdEmpresa);

				
				}
				//ARCHITECTURE

				Boolean isNoExiste=false;
				//ARCHITECTURE
				if(Constantes.ISUSAEJBLOGICLAYER) {
					isNoExiste=formapagopuntoventaLogic.getFormaPagoPuntoVentas()==null||formapagopuntoventaLogic.getFormaPagoPuntoVentas().size()==0;
				} else if(Constantes.ISUSAEJBREMOTE||Constantes.ISUSAEJBHOME) {
					isNoExiste=formapagopuntoventas==null|| formapagopuntoventas.size()==0;
				}
				//ARCHITECTURE

		if(false && sTipoArchivoReporte!=""&&sTipoArchivoReporte!=null) {//this.isTipoArchivoReporte
			if(false) {//isMostrarTodosResultadosReporte
				this.pagination.setiFirstResult(-1);
				this.pagination.setiMaxResults(-1);

				//ARCHITECTURE
				if(Constantes.ISUSAEJBLOGICLAYER) {
						formapagopuntoventasAux=new ArrayList<FormaPagoPuntoVenta>();
						formapagopuntoventasAux.addAll(formapagopuntoventaLogic.getFormaPagoPuntoVentas());
				} else if(Constantes.ISUSAEJBREMOTE || Constantes.ISUSAEJBHOME) {
							formapagopuntoventasAux=new ArrayList<FormaPagoPuntoVenta>();
							formapagopuntoventasAux.addAll(formapagopuntoventas);
				}
				//ARCHITECTURE
								
				
				//ARCHITECTURE
				if(Constantes.ISUSAEJBLOGICLAYER) {
							finalQueryGlobal=Funciones.GetFinalQueryAppendBusqueda(finalQueryGlobal, this.sFinalQueryGeneral,"");
							formapagopuntoventaLogic.getFormaPagoPuntoVentasFK_IdEmpresa(finalQueryGlobal,pagination,id_empresaFK_IdEmpresa);
				} else if(Constantes.ISUSAEJBREMOTE) {
				this.sDetalleReporte=FormaPagoPuntoVentaConstantesFunciones.getDetalleIndiceFK_IdEmpresa(id_empresaFK_IdEmpresa);
						
				} else if(Constantes.ISUSAEJBHOME) {
				this.sDetalleReporte=FormaPagoPuntoVentaConstantesFunciones.getDetalleIndiceFK_IdEmpresa(id_empresaFK_IdEmpresa);
						
				}
				//ARCHITECTURE
					}
				//ARCHITECTURE
				if(Constantes.ISUSAEJBLOGICLAYER) {
					generarReporteFormaPagoPuntoVentas("FK_IdEmpresa",formapagopuntoventaLogic.getFormaPagoPuntoVentas());
				} else if(Constantes.ISUSAEJBREMOTE || Constantes.ISUSAEJBHOME) {
					generarReporteFormaPagoPuntoVentas("FK_IdEmpresa",formapagopuntoventas);
				}
				//ARCHITECTURE

					if(false) {//isMostrarTodosResultadosReporte
						this.pagination.setiFirstResult(this.iNumeroPaginacionPagina);
						this.pagination.setiMaxResults(this.iNumeroPaginacion);

						//ARCHITECTURE
						if(Constantes.ISUSAEJBLOGICLAYER) {
						formapagopuntoventaLogic.setFormaPagoPuntoVentas(new ArrayList<FormaPagoPuntoVenta>());
						formapagopuntoventaLogic.getFormaPagoPuntoVentas().addAll(formapagopuntoventasAux);
						} else if(Constantes.ISUSAEJBREMOTE || Constantes.ISUSAEJBHOME) {
							formapagopuntoventas=new ArrayList<FormaPagoPuntoVenta>();
							formapagopuntoventas.addAll(formapagopuntoventasAux);
						}
						//ARCHITECTURE
					}
				}

			}
			else if(sAccionBusqueda.equals("FK_IdFacturaPuntoVenta")) {
				this.sDetalleReporte=FormaPagoPuntoVentaConstantesFunciones.getDetalleIndiceFK_IdFacturaPuntoVenta(id_factura_punto_ventaFK_IdFacturaPuntoVenta);

				
				//ARCHITECTURE
				if(Constantes.ISUSAEJBLOGICLAYER) {

					finalQueryGlobal=Funciones.GetFinalQueryAppendBusqueda(finalQueryGlobal, this.sFinalQueryGeneral,finalQueryPaginacion);

					formapagopuntoventaLogic.getFormaPagoPuntoVentasFK_IdFacturaPuntoVenta(finalQueryGlobal,pagination,id_factura_punto_ventaFK_IdFacturaPuntoVenta);
				} else if(Constantes.ISUSAEJBREMOTE) {
				this.sDetalleReporte=FormaPagoPuntoVentaConstantesFunciones.getDetalleIndiceFK_IdFacturaPuntoVenta(id_factura_punto_ventaFK_IdFacturaPuntoVenta);

				
				} else if(Constantes.ISUSAEJBHOME) {
				this.sDetalleReporte=FormaPagoPuntoVentaConstantesFunciones.getDetalleIndiceFK_IdFacturaPuntoVenta(id_factura_punto_ventaFK_IdFacturaPuntoVenta);

				
				}
				//ARCHITECTURE

				Boolean isNoExiste=false;
				//ARCHITECTURE
				if(Constantes.ISUSAEJBLOGICLAYER) {
					isNoExiste=formapagopuntoventaLogic.getFormaPagoPuntoVentas()==null||formapagopuntoventaLogic.getFormaPagoPuntoVentas().size()==0;
				} else if(Constantes.ISUSAEJBREMOTE||Constantes.ISUSAEJBHOME) {
					isNoExiste=formapagopuntoventas==null|| formapagopuntoventas.size()==0;
				}
				//ARCHITECTURE

		if(false && sTipoArchivoReporte!=""&&sTipoArchivoReporte!=null) {//this.isTipoArchivoReporte
			if(false) {//isMostrarTodosResultadosReporte
				this.pagination.setiFirstResult(-1);
				this.pagination.setiMaxResults(-1);

				//ARCHITECTURE
				if(Constantes.ISUSAEJBLOGICLAYER) {
						formapagopuntoventasAux=new ArrayList<FormaPagoPuntoVenta>();
						formapagopuntoventasAux.addAll(formapagopuntoventaLogic.getFormaPagoPuntoVentas());
				} else if(Constantes.ISUSAEJBREMOTE || Constantes.ISUSAEJBHOME) {
							formapagopuntoventasAux=new ArrayList<FormaPagoPuntoVenta>();
							formapagopuntoventasAux.addAll(formapagopuntoventas);
				}
				//ARCHITECTURE
								
				
				//ARCHITECTURE
				if(Constantes.ISUSAEJBLOGICLAYER) {
							finalQueryGlobal=Funciones.GetFinalQueryAppendBusqueda(finalQueryGlobal, this.sFinalQueryGeneral,"");
							formapagopuntoventaLogic.getFormaPagoPuntoVentasFK_IdFacturaPuntoVenta(finalQueryGlobal,pagination,id_factura_punto_ventaFK_IdFacturaPuntoVenta);
				} else if(Constantes.ISUSAEJBREMOTE) {
				this.sDetalleReporte=FormaPagoPuntoVentaConstantesFunciones.getDetalleIndiceFK_IdFacturaPuntoVenta(id_factura_punto_ventaFK_IdFacturaPuntoVenta);
						
				} else if(Constantes.ISUSAEJBHOME) {
				this.sDetalleReporte=FormaPagoPuntoVentaConstantesFunciones.getDetalleIndiceFK_IdFacturaPuntoVenta(id_factura_punto_ventaFK_IdFacturaPuntoVenta);
						
				}
				//ARCHITECTURE
					}
				//ARCHITECTURE
				if(Constantes.ISUSAEJBLOGICLAYER) {
					generarReporteFormaPagoPuntoVentas("FK_IdFacturaPuntoVenta",formapagopuntoventaLogic.getFormaPagoPuntoVentas());
				} else if(Constantes.ISUSAEJBREMOTE || Constantes.ISUSAEJBHOME) {
					generarReporteFormaPagoPuntoVentas("FK_IdFacturaPuntoVenta",formapagopuntoventas);
				}
				//ARCHITECTURE

					if(false) {//isMostrarTodosResultadosReporte
						this.pagination.setiFirstResult(this.iNumeroPaginacionPagina);
						this.pagination.setiMaxResults(this.iNumeroPaginacion);

						//ARCHITECTURE
						if(Constantes.ISUSAEJBLOGICLAYER) {
						formapagopuntoventaLogic.setFormaPagoPuntoVentas(new ArrayList<FormaPagoPuntoVenta>());
						formapagopuntoventaLogic.getFormaPagoPuntoVentas().addAll(formapagopuntoventasAux);
						} else if(Constantes.ISUSAEJBREMOTE || Constantes.ISUSAEJBHOME) {
							formapagopuntoventas=new ArrayList<FormaPagoPuntoVenta>();
							formapagopuntoventas.addAll(formapagopuntoventasAux);
						}
						//ARCHITECTURE
					}
				}

			}
			else if(sAccionBusqueda.equals("FK_IdPeriodo")) {
				this.sDetalleReporte=FormaPagoPuntoVentaConstantesFunciones.getDetalleIndiceFK_IdPeriodo(id_periodoFK_IdPeriodo);

				
				//ARCHITECTURE
				if(Constantes.ISUSAEJBLOGICLAYER) {

					finalQueryGlobal=Funciones.GetFinalQueryAppendBusqueda(finalQueryGlobal, this.sFinalQueryGeneral,finalQueryPaginacion);

					formapagopuntoventaLogic.getFormaPagoPuntoVentasFK_IdPeriodo(finalQueryGlobal,pagination,id_periodoFK_IdPeriodo);
				} else if(Constantes.ISUSAEJBREMOTE) {
				this.sDetalleReporte=FormaPagoPuntoVentaConstantesFunciones.getDetalleIndiceFK_IdPeriodo(id_periodoFK_IdPeriodo);

				
				} else if(Constantes.ISUSAEJBHOME) {
				this.sDetalleReporte=FormaPagoPuntoVentaConstantesFunciones.getDetalleIndiceFK_IdPeriodo(id_periodoFK_IdPeriodo);

				
				}
				//ARCHITECTURE

				Boolean isNoExiste=false;
				//ARCHITECTURE
				if(Constantes.ISUSAEJBLOGICLAYER) {
					isNoExiste=formapagopuntoventaLogic.getFormaPagoPuntoVentas()==null||formapagopuntoventaLogic.getFormaPagoPuntoVentas().size()==0;
				} else if(Constantes.ISUSAEJBREMOTE||Constantes.ISUSAEJBHOME) {
					isNoExiste=formapagopuntoventas==null|| formapagopuntoventas.size()==0;
				}
				//ARCHITECTURE

		if(false && sTipoArchivoReporte!=""&&sTipoArchivoReporte!=null) {//this.isTipoArchivoReporte
			if(false) {//isMostrarTodosResultadosReporte
				this.pagination.setiFirstResult(-1);
				this.pagination.setiMaxResults(-1);

				//ARCHITECTURE
				if(Constantes.ISUSAEJBLOGICLAYER) {
						formapagopuntoventasAux=new ArrayList<FormaPagoPuntoVenta>();
						formapagopuntoventasAux.addAll(formapagopuntoventaLogic.getFormaPagoPuntoVentas());
				} else if(Constantes.ISUSAEJBREMOTE || Constantes.ISUSAEJBHOME) {
							formapagopuntoventasAux=new ArrayList<FormaPagoPuntoVenta>();
							formapagopuntoventasAux.addAll(formapagopuntoventas);
				}
				//ARCHITECTURE
								
				
				//ARCHITECTURE
				if(Constantes.ISUSAEJBLOGICLAYER) {
							finalQueryGlobal=Funciones.GetFinalQueryAppendBusqueda(finalQueryGlobal, this.sFinalQueryGeneral,"");
							formapagopuntoventaLogic.getFormaPagoPuntoVentasFK_IdPeriodo(finalQueryGlobal,pagination,id_periodoFK_IdPeriodo);
				} else if(Constantes.ISUSAEJBREMOTE) {
				this.sDetalleReporte=FormaPagoPuntoVentaConstantesFunciones.getDetalleIndiceFK_IdPeriodo(id_periodoFK_IdPeriodo);
						
				} else if(Constantes.ISUSAEJBHOME) {
				this.sDetalleReporte=FormaPagoPuntoVentaConstantesFunciones.getDetalleIndiceFK_IdPeriodo(id_periodoFK_IdPeriodo);
						
				}
				//ARCHITECTURE
					}
				//ARCHITECTURE
				if(Constantes.ISUSAEJBLOGICLAYER) {
					generarReporteFormaPagoPuntoVentas("FK_IdPeriodo",formapagopuntoventaLogic.getFormaPagoPuntoVentas());
				} else if(Constantes.ISUSAEJBREMOTE || Constantes.ISUSAEJBHOME) {
					generarReporteFormaPagoPuntoVentas("FK_IdPeriodo",formapagopuntoventas);
				}
				//ARCHITECTURE

					if(false) {//isMostrarTodosResultadosReporte
						this.pagination.setiFirstResult(this.iNumeroPaginacionPagina);
						this.pagination.setiMaxResults(this.iNumeroPaginacion);

						//ARCHITECTURE
						if(Constantes.ISUSAEJBLOGICLAYER) {
						formapagopuntoventaLogic.setFormaPagoPuntoVentas(new ArrayList<FormaPagoPuntoVenta>());
						formapagopuntoventaLogic.getFormaPagoPuntoVentas().addAll(formapagopuntoventasAux);
						} else if(Constantes.ISUSAEJBREMOTE || Constantes.ISUSAEJBHOME) {
							formapagopuntoventas=new ArrayList<FormaPagoPuntoVenta>();
							formapagopuntoventas.addAll(formapagopuntoventasAux);
						}
						//ARCHITECTURE
					}
				}

			}
			else if(sAccionBusqueda.equals("FK_IdSucursal")) {
				this.sDetalleReporte=FormaPagoPuntoVentaConstantesFunciones.getDetalleIndiceFK_IdSucursal(id_sucursalFK_IdSucursal);

				
				//ARCHITECTURE
				if(Constantes.ISUSAEJBLOGICLAYER) {

					finalQueryGlobal=Funciones.GetFinalQueryAppendBusqueda(finalQueryGlobal, this.sFinalQueryGeneral,finalQueryPaginacion);

					formapagopuntoventaLogic.getFormaPagoPuntoVentasFK_IdSucursal(finalQueryGlobal,pagination,id_sucursalFK_IdSucursal);
				} else if(Constantes.ISUSAEJBREMOTE) {
				this.sDetalleReporte=FormaPagoPuntoVentaConstantesFunciones.getDetalleIndiceFK_IdSucursal(id_sucursalFK_IdSucursal);

				
				} else if(Constantes.ISUSAEJBHOME) {
				this.sDetalleReporte=FormaPagoPuntoVentaConstantesFunciones.getDetalleIndiceFK_IdSucursal(id_sucursalFK_IdSucursal);

				
				}
				//ARCHITECTURE

				Boolean isNoExiste=false;
				//ARCHITECTURE
				if(Constantes.ISUSAEJBLOGICLAYER) {
					isNoExiste=formapagopuntoventaLogic.getFormaPagoPuntoVentas()==null||formapagopuntoventaLogic.getFormaPagoPuntoVentas().size()==0;
				} else if(Constantes.ISUSAEJBREMOTE||Constantes.ISUSAEJBHOME) {
					isNoExiste=formapagopuntoventas==null|| formapagopuntoventas.size()==0;
				}
				//ARCHITECTURE

		if(false && sTipoArchivoReporte!=""&&sTipoArchivoReporte!=null) {//this.isTipoArchivoReporte
			if(false) {//isMostrarTodosResultadosReporte
				this.pagination.setiFirstResult(-1);
				this.pagination.setiMaxResults(-1);

				//ARCHITECTURE
				if(Constantes.ISUSAEJBLOGICLAYER) {
						formapagopuntoventasAux=new ArrayList<FormaPagoPuntoVenta>();
						formapagopuntoventasAux.addAll(formapagopuntoventaLogic.getFormaPagoPuntoVentas());
				} else if(Constantes.ISUSAEJBREMOTE || Constantes.ISUSAEJBHOME) {
							formapagopuntoventasAux=new ArrayList<FormaPagoPuntoVenta>();
							formapagopuntoventasAux.addAll(formapagopuntoventas);
				}
				//ARCHITECTURE
								
				
				//ARCHITECTURE
				if(Constantes.ISUSAEJBLOGICLAYER) {
							finalQueryGlobal=Funciones.GetFinalQueryAppendBusqueda(finalQueryGlobal, this.sFinalQueryGeneral,"");
							formapagopuntoventaLogic.getFormaPagoPuntoVentasFK_IdSucursal(finalQueryGlobal,pagination,id_sucursalFK_IdSucursal);
				} else if(Constantes.ISUSAEJBREMOTE) {
				this.sDetalleReporte=FormaPagoPuntoVentaConstantesFunciones.getDetalleIndiceFK_IdSucursal(id_sucursalFK_IdSucursal);
						
				} else if(Constantes.ISUSAEJBHOME) {
				this.sDetalleReporte=FormaPagoPuntoVentaConstantesFunciones.getDetalleIndiceFK_IdSucursal(id_sucursalFK_IdSucursal);
						
				}
				//ARCHITECTURE
					}
				//ARCHITECTURE
				if(Constantes.ISUSAEJBLOGICLAYER) {
					generarReporteFormaPagoPuntoVentas("FK_IdSucursal",formapagopuntoventaLogic.getFormaPagoPuntoVentas());
				} else if(Constantes.ISUSAEJBREMOTE || Constantes.ISUSAEJBHOME) {
					generarReporteFormaPagoPuntoVentas("FK_IdSucursal",formapagopuntoventas);
				}
				//ARCHITECTURE

					if(false) {//isMostrarTodosResultadosReporte
						this.pagination.setiFirstResult(this.iNumeroPaginacionPagina);
						this.pagination.setiMaxResults(this.iNumeroPaginacion);

						//ARCHITECTURE
						if(Constantes.ISUSAEJBLOGICLAYER) {
						formapagopuntoventaLogic.setFormaPagoPuntoVentas(new ArrayList<FormaPagoPuntoVenta>());
						formapagopuntoventaLogic.getFormaPagoPuntoVentas().addAll(formapagopuntoventasAux);
						} else if(Constantes.ISUSAEJBREMOTE || Constantes.ISUSAEJBHOME) {
							formapagopuntoventas=new ArrayList<FormaPagoPuntoVenta>();
							formapagopuntoventas.addAll(formapagopuntoventasAux);
						}
						//ARCHITECTURE
					}
				}

			}
			else if(sAccionBusqueda.equals("FK_IdTarjetaCredito")) {
				this.sDetalleReporte=FormaPagoPuntoVentaConstantesFunciones.getDetalleIndiceFK_IdTarjetaCredito(id_tarjeta_creditoFK_IdTarjetaCredito);

				
				//ARCHITECTURE
				if(Constantes.ISUSAEJBLOGICLAYER) {

					finalQueryGlobal=Funciones.GetFinalQueryAppendBusqueda(finalQueryGlobal, this.sFinalQueryGeneral,finalQueryPaginacion);

					formapagopuntoventaLogic.getFormaPagoPuntoVentasFK_IdTarjetaCredito(finalQueryGlobal,pagination,id_tarjeta_creditoFK_IdTarjetaCredito);
				} else if(Constantes.ISUSAEJBREMOTE) {
				this.sDetalleReporte=FormaPagoPuntoVentaConstantesFunciones.getDetalleIndiceFK_IdTarjetaCredito(id_tarjeta_creditoFK_IdTarjetaCredito);

				
				} else if(Constantes.ISUSAEJBHOME) {
				this.sDetalleReporte=FormaPagoPuntoVentaConstantesFunciones.getDetalleIndiceFK_IdTarjetaCredito(id_tarjeta_creditoFK_IdTarjetaCredito);

				
				}
				//ARCHITECTURE

				Boolean isNoExiste=false;
				//ARCHITECTURE
				if(Constantes.ISUSAEJBLOGICLAYER) {
					isNoExiste=formapagopuntoventaLogic.getFormaPagoPuntoVentas()==null||formapagopuntoventaLogic.getFormaPagoPuntoVentas().size()==0;
				} else if(Constantes.ISUSAEJBREMOTE||Constantes.ISUSAEJBHOME) {
					isNoExiste=formapagopuntoventas==null|| formapagopuntoventas.size()==0;
				}
				//ARCHITECTURE

		if(false && sTipoArchivoReporte!=""&&sTipoArchivoReporte!=null) {//this.isTipoArchivoReporte
			if(false) {//isMostrarTodosResultadosReporte
				this.pagination.setiFirstResult(-1);
				this.pagination.setiMaxResults(-1);

				//ARCHITECTURE
				if(Constantes.ISUSAEJBLOGICLAYER) {
						formapagopuntoventasAux=new ArrayList<FormaPagoPuntoVenta>();
						formapagopuntoventasAux.addAll(formapagopuntoventaLogic.getFormaPagoPuntoVentas());
				} else if(Constantes.ISUSAEJBREMOTE || Constantes.ISUSAEJBHOME) {
							formapagopuntoventasAux=new ArrayList<FormaPagoPuntoVenta>();
							formapagopuntoventasAux.addAll(formapagopuntoventas);
				}
				//ARCHITECTURE
								
				
				//ARCHITECTURE
				if(Constantes.ISUSAEJBLOGICLAYER) {
							finalQueryGlobal=Funciones.GetFinalQueryAppendBusqueda(finalQueryGlobal, this.sFinalQueryGeneral,"");
							formapagopuntoventaLogic.getFormaPagoPuntoVentasFK_IdTarjetaCredito(finalQueryGlobal,pagination,id_tarjeta_creditoFK_IdTarjetaCredito);
				} else if(Constantes.ISUSAEJBREMOTE) {
				this.sDetalleReporte=FormaPagoPuntoVentaConstantesFunciones.getDetalleIndiceFK_IdTarjetaCredito(id_tarjeta_creditoFK_IdTarjetaCredito);
						
				} else if(Constantes.ISUSAEJBHOME) {
				this.sDetalleReporte=FormaPagoPuntoVentaConstantesFunciones.getDetalleIndiceFK_IdTarjetaCredito(id_tarjeta_creditoFK_IdTarjetaCredito);
						
				}
				//ARCHITECTURE
					}
				//ARCHITECTURE
				if(Constantes.ISUSAEJBLOGICLAYER) {
					generarReporteFormaPagoPuntoVentas("FK_IdTarjetaCredito",formapagopuntoventaLogic.getFormaPagoPuntoVentas());
				} else if(Constantes.ISUSAEJBREMOTE || Constantes.ISUSAEJBHOME) {
					generarReporteFormaPagoPuntoVentas("FK_IdTarjetaCredito",formapagopuntoventas);
				}
				//ARCHITECTURE

					if(false) {//isMostrarTodosResultadosReporte
						this.pagination.setiFirstResult(this.iNumeroPaginacionPagina);
						this.pagination.setiMaxResults(this.iNumeroPaginacion);

						//ARCHITECTURE
						if(Constantes.ISUSAEJBLOGICLAYER) {
						formapagopuntoventaLogic.setFormaPagoPuntoVentas(new ArrayList<FormaPagoPuntoVenta>());
						formapagopuntoventaLogic.getFormaPagoPuntoVentas().addAll(formapagopuntoventasAux);
						} else if(Constantes.ISUSAEJBREMOTE || Constantes.ISUSAEJBHOME) {
							formapagopuntoventas=new ArrayList<FormaPagoPuntoVenta>();
							formapagopuntoventas.addAll(formapagopuntoventasAux);
						}
						//ARCHITECTURE
					}
				}

			}
			else if(sAccionBusqueda.equals("FK_IdTipoFormaPago")) {
				this.sDetalleReporte=FormaPagoPuntoVentaConstantesFunciones.getDetalleIndiceFK_IdTipoFormaPago(id_tipo_forma_pagoFK_IdTipoFormaPago);

				
				//ARCHITECTURE
				if(Constantes.ISUSAEJBLOGICLAYER) {

					finalQueryGlobal=Funciones.GetFinalQueryAppendBusqueda(finalQueryGlobal, this.sFinalQueryGeneral,finalQueryPaginacion);

					formapagopuntoventaLogic.getFormaPagoPuntoVentasFK_IdTipoFormaPago(finalQueryGlobal,pagination,id_tipo_forma_pagoFK_IdTipoFormaPago);
				} else if(Constantes.ISUSAEJBREMOTE) {
				this.sDetalleReporte=FormaPagoPuntoVentaConstantesFunciones.getDetalleIndiceFK_IdTipoFormaPago(id_tipo_forma_pagoFK_IdTipoFormaPago);

				
				} else if(Constantes.ISUSAEJBHOME) {
				this.sDetalleReporte=FormaPagoPuntoVentaConstantesFunciones.getDetalleIndiceFK_IdTipoFormaPago(id_tipo_forma_pagoFK_IdTipoFormaPago);

				
				}
				//ARCHITECTURE

				Boolean isNoExiste=false;
				//ARCHITECTURE
				if(Constantes.ISUSAEJBLOGICLAYER) {
					isNoExiste=formapagopuntoventaLogic.getFormaPagoPuntoVentas()==null||formapagopuntoventaLogic.getFormaPagoPuntoVentas().size()==0;
				} else if(Constantes.ISUSAEJBREMOTE||Constantes.ISUSAEJBHOME) {
					isNoExiste=formapagopuntoventas==null|| formapagopuntoventas.size()==0;
				}
				//ARCHITECTURE

		if(false && sTipoArchivoReporte!=""&&sTipoArchivoReporte!=null) {//this.isTipoArchivoReporte
			if(false) {//isMostrarTodosResultadosReporte
				this.pagination.setiFirstResult(-1);
				this.pagination.setiMaxResults(-1);

				//ARCHITECTURE
				if(Constantes.ISUSAEJBLOGICLAYER) {
						formapagopuntoventasAux=new ArrayList<FormaPagoPuntoVenta>();
						formapagopuntoventasAux.addAll(formapagopuntoventaLogic.getFormaPagoPuntoVentas());
				} else if(Constantes.ISUSAEJBREMOTE || Constantes.ISUSAEJBHOME) {
							formapagopuntoventasAux=new ArrayList<FormaPagoPuntoVenta>();
							formapagopuntoventasAux.addAll(formapagopuntoventas);
				}
				//ARCHITECTURE
								
				
				//ARCHITECTURE
				if(Constantes.ISUSAEJBLOGICLAYER) {
							finalQueryGlobal=Funciones.GetFinalQueryAppendBusqueda(finalQueryGlobal, this.sFinalQueryGeneral,"");
							formapagopuntoventaLogic.getFormaPagoPuntoVentasFK_IdTipoFormaPago(finalQueryGlobal,pagination,id_tipo_forma_pagoFK_IdTipoFormaPago);
				} else if(Constantes.ISUSAEJBREMOTE) {
				this.sDetalleReporte=FormaPagoPuntoVentaConstantesFunciones.getDetalleIndiceFK_IdTipoFormaPago(id_tipo_forma_pagoFK_IdTipoFormaPago);
						
				} else if(Constantes.ISUSAEJBHOME) {
				this.sDetalleReporte=FormaPagoPuntoVentaConstantesFunciones.getDetalleIndiceFK_IdTipoFormaPago(id_tipo_forma_pagoFK_IdTipoFormaPago);
						
				}
				//ARCHITECTURE
					}
				//ARCHITECTURE
				if(Constantes.ISUSAEJBLOGICLAYER) {
					generarReporteFormaPagoPuntoVentas("FK_IdTipoFormaPago",formapagopuntoventaLogic.getFormaPagoPuntoVentas());
				} else if(Constantes.ISUSAEJBREMOTE || Constantes.ISUSAEJBHOME) {
					generarReporteFormaPagoPuntoVentas("FK_IdTipoFormaPago",formapagopuntoventas);
				}
				//ARCHITECTURE

					if(false) {//isMostrarTodosResultadosReporte
						this.pagination.setiFirstResult(this.iNumeroPaginacionPagina);
						this.pagination.setiMaxResults(this.iNumeroPaginacion);

						//ARCHITECTURE
						if(Constantes.ISUSAEJBLOGICLAYER) {
						formapagopuntoventaLogic.setFormaPagoPuntoVentas(new ArrayList<FormaPagoPuntoVenta>());
						formapagopuntoventaLogic.getFormaPagoPuntoVentas().addAll(formapagopuntoventasAux);
						} else if(Constantes.ISUSAEJBREMOTE || Constantes.ISUSAEJBHOME) {
							formapagopuntoventas=new ArrayList<FormaPagoPuntoVenta>();
							formapagopuntoventas.addAll(formapagopuntoventasAux);
						}
						//ARCHITECTURE
					}
				}

			}
			else if(sAccionBusqueda.equals("FK_IdTipoInteresTarjeta")) {
				this.sDetalleReporte=FormaPagoPuntoVentaConstantesFunciones.getDetalleIndiceFK_IdTipoInteresTarjeta(id_tipo_interes_tarjetaFK_IdTipoInteresTarjeta);

				
				//ARCHITECTURE
				if(Constantes.ISUSAEJBLOGICLAYER) {

					finalQueryGlobal=Funciones.GetFinalQueryAppendBusqueda(finalQueryGlobal, this.sFinalQueryGeneral,finalQueryPaginacion);

					formapagopuntoventaLogic.getFormaPagoPuntoVentasFK_IdTipoInteresTarjeta(finalQueryGlobal,pagination,id_tipo_interes_tarjetaFK_IdTipoInteresTarjeta);
				} else if(Constantes.ISUSAEJBREMOTE) {
				this.sDetalleReporte=FormaPagoPuntoVentaConstantesFunciones.getDetalleIndiceFK_IdTipoInteresTarjeta(id_tipo_interes_tarjetaFK_IdTipoInteresTarjeta);

				
				} else if(Constantes.ISUSAEJBHOME) {
				this.sDetalleReporte=FormaPagoPuntoVentaConstantesFunciones.getDetalleIndiceFK_IdTipoInteresTarjeta(id_tipo_interes_tarjetaFK_IdTipoInteresTarjeta);

				
				}
				//ARCHITECTURE

				Boolean isNoExiste=false;
				//ARCHITECTURE
				if(Constantes.ISUSAEJBLOGICLAYER) {
					isNoExiste=formapagopuntoventaLogic.getFormaPagoPuntoVentas()==null||formapagopuntoventaLogic.getFormaPagoPuntoVentas().size()==0;
				} else if(Constantes.ISUSAEJBREMOTE||Constantes.ISUSAEJBHOME) {
					isNoExiste=formapagopuntoventas==null|| formapagopuntoventas.size()==0;
				}
				//ARCHITECTURE

		if(false && sTipoArchivoReporte!=""&&sTipoArchivoReporte!=null) {//this.isTipoArchivoReporte
			if(false) {//isMostrarTodosResultadosReporte
				this.pagination.setiFirstResult(-1);
				this.pagination.setiMaxResults(-1);

				//ARCHITECTURE
				if(Constantes.ISUSAEJBLOGICLAYER) {
						formapagopuntoventasAux=new ArrayList<FormaPagoPuntoVenta>();
						formapagopuntoventasAux.addAll(formapagopuntoventaLogic.getFormaPagoPuntoVentas());
				} else if(Constantes.ISUSAEJBREMOTE || Constantes.ISUSAEJBHOME) {
							formapagopuntoventasAux=new ArrayList<FormaPagoPuntoVenta>();
							formapagopuntoventasAux.addAll(formapagopuntoventas);
				}
				//ARCHITECTURE
								
				
				//ARCHITECTURE
				if(Constantes.ISUSAEJBLOGICLAYER) {
							finalQueryGlobal=Funciones.GetFinalQueryAppendBusqueda(finalQueryGlobal, this.sFinalQueryGeneral,"");
							formapagopuntoventaLogic.getFormaPagoPuntoVentasFK_IdTipoInteresTarjeta(finalQueryGlobal,pagination,id_tipo_interes_tarjetaFK_IdTipoInteresTarjeta);
				} else if(Constantes.ISUSAEJBREMOTE) {
				this.sDetalleReporte=FormaPagoPuntoVentaConstantesFunciones.getDetalleIndiceFK_IdTipoInteresTarjeta(id_tipo_interes_tarjetaFK_IdTipoInteresTarjeta);
						
				} else if(Constantes.ISUSAEJBHOME) {
				this.sDetalleReporte=FormaPagoPuntoVentaConstantesFunciones.getDetalleIndiceFK_IdTipoInteresTarjeta(id_tipo_interes_tarjetaFK_IdTipoInteresTarjeta);
						
				}
				//ARCHITECTURE
					}
				//ARCHITECTURE
				if(Constantes.ISUSAEJBLOGICLAYER) {
					generarReporteFormaPagoPuntoVentas("FK_IdTipoInteresTarjeta",formapagopuntoventaLogic.getFormaPagoPuntoVentas());
				} else if(Constantes.ISUSAEJBREMOTE || Constantes.ISUSAEJBHOME) {
					generarReporteFormaPagoPuntoVentas("FK_IdTipoInteresTarjeta",formapagopuntoventas);
				}
				//ARCHITECTURE

					if(false) {//isMostrarTodosResultadosReporte
						this.pagination.setiFirstResult(this.iNumeroPaginacionPagina);
						this.pagination.setiMaxResults(this.iNumeroPaginacion);

						//ARCHITECTURE
						if(Constantes.ISUSAEJBLOGICLAYER) {
						formapagopuntoventaLogic.setFormaPagoPuntoVentas(new ArrayList<FormaPagoPuntoVenta>());
						formapagopuntoventaLogic.getFormaPagoPuntoVentas().addAll(formapagopuntoventasAux);
						} else if(Constantes.ISUSAEJBREMOTE || Constantes.ISUSAEJBHOME) {
							formapagopuntoventas=new ArrayList<FormaPagoPuntoVenta>();
							formapagopuntoventas.addAll(formapagopuntoventasAux);
						}
						//ARCHITECTURE
					}
				}

			}
			else if(sAccionBusqueda.equals("FK_IdTipoPagoTarjeta")) {
				this.sDetalleReporte=FormaPagoPuntoVentaConstantesFunciones.getDetalleIndiceFK_IdTipoPagoTarjeta(id_tipo_pago_tarjetaFK_IdTipoPagoTarjeta);

				
				//ARCHITECTURE
				if(Constantes.ISUSAEJBLOGICLAYER) {

					finalQueryGlobal=Funciones.GetFinalQueryAppendBusqueda(finalQueryGlobal, this.sFinalQueryGeneral,finalQueryPaginacion);

					formapagopuntoventaLogic.getFormaPagoPuntoVentasFK_IdTipoPagoTarjeta(finalQueryGlobal,pagination,id_tipo_pago_tarjetaFK_IdTipoPagoTarjeta);
				} else if(Constantes.ISUSAEJBREMOTE) {
				this.sDetalleReporte=FormaPagoPuntoVentaConstantesFunciones.getDetalleIndiceFK_IdTipoPagoTarjeta(id_tipo_pago_tarjetaFK_IdTipoPagoTarjeta);

				
				} else if(Constantes.ISUSAEJBHOME) {
				this.sDetalleReporte=FormaPagoPuntoVentaConstantesFunciones.getDetalleIndiceFK_IdTipoPagoTarjeta(id_tipo_pago_tarjetaFK_IdTipoPagoTarjeta);

				
				}
				//ARCHITECTURE

				Boolean isNoExiste=false;
				//ARCHITECTURE
				if(Constantes.ISUSAEJBLOGICLAYER) {
					isNoExiste=formapagopuntoventaLogic.getFormaPagoPuntoVentas()==null||formapagopuntoventaLogic.getFormaPagoPuntoVentas().size()==0;
				} else if(Constantes.ISUSAEJBREMOTE||Constantes.ISUSAEJBHOME) {
					isNoExiste=formapagopuntoventas==null|| formapagopuntoventas.size()==0;
				}
				//ARCHITECTURE

		if(false && sTipoArchivoReporte!=""&&sTipoArchivoReporte!=null) {//this.isTipoArchivoReporte
			if(false) {//isMostrarTodosResultadosReporte
				this.pagination.setiFirstResult(-1);
				this.pagination.setiMaxResults(-1);

				//ARCHITECTURE
				if(Constantes.ISUSAEJBLOGICLAYER) {
						formapagopuntoventasAux=new ArrayList<FormaPagoPuntoVenta>();
						formapagopuntoventasAux.addAll(formapagopuntoventaLogic.getFormaPagoPuntoVentas());
				} else if(Constantes.ISUSAEJBREMOTE || Constantes.ISUSAEJBHOME) {
							formapagopuntoventasAux=new ArrayList<FormaPagoPuntoVenta>();
							formapagopuntoventasAux.addAll(formapagopuntoventas);
				}
				//ARCHITECTURE
								
				
				//ARCHITECTURE
				if(Constantes.ISUSAEJBLOGICLAYER) {
							finalQueryGlobal=Funciones.GetFinalQueryAppendBusqueda(finalQueryGlobal, this.sFinalQueryGeneral,"");
							formapagopuntoventaLogic.getFormaPagoPuntoVentasFK_IdTipoPagoTarjeta(finalQueryGlobal,pagination,id_tipo_pago_tarjetaFK_IdTipoPagoTarjeta);
				} else if(Constantes.ISUSAEJBREMOTE) {
				this.sDetalleReporte=FormaPagoPuntoVentaConstantesFunciones.getDetalleIndiceFK_IdTipoPagoTarjeta(id_tipo_pago_tarjetaFK_IdTipoPagoTarjeta);
						
				} else if(Constantes.ISUSAEJBHOME) {
				this.sDetalleReporte=FormaPagoPuntoVentaConstantesFunciones.getDetalleIndiceFK_IdTipoPagoTarjeta(id_tipo_pago_tarjetaFK_IdTipoPagoTarjeta);
						
				}
				//ARCHITECTURE
					}
				//ARCHITECTURE
				if(Constantes.ISUSAEJBLOGICLAYER) {
					generarReporteFormaPagoPuntoVentas("FK_IdTipoPagoTarjeta",formapagopuntoventaLogic.getFormaPagoPuntoVentas());
				} else if(Constantes.ISUSAEJBREMOTE || Constantes.ISUSAEJBHOME) {
					generarReporteFormaPagoPuntoVentas("FK_IdTipoPagoTarjeta",formapagopuntoventas);
				}
				//ARCHITECTURE

					if(false) {//isMostrarTodosResultadosReporte
						this.pagination.setiFirstResult(this.iNumeroPaginacionPagina);
						this.pagination.setiMaxResults(this.iNumeroPaginacion);

						//ARCHITECTURE
						if(Constantes.ISUSAEJBLOGICLAYER) {
						formapagopuntoventaLogic.setFormaPagoPuntoVentas(new ArrayList<FormaPagoPuntoVenta>());
						formapagopuntoventaLogic.getFormaPagoPuntoVentas().addAll(formapagopuntoventasAux);
						} else if(Constantes.ISUSAEJBREMOTE || Constantes.ISUSAEJBHOME) {
							formapagopuntoventas=new ArrayList<FormaPagoPuntoVenta>();
							formapagopuntoventas.addAll(formapagopuntoventasAux);
						}
						//ARCHITECTURE
					}
				}

			}
			else if(sAccionBusqueda.equals("FK_IdTipoRiesgoCheque")) {
				this.sDetalleReporte=FormaPagoPuntoVentaConstantesFunciones.getDetalleIndiceFK_IdTipoRiesgoCheque(id_tipo_riesgo_chequeFK_IdTipoRiesgoCheque);

				
				//ARCHITECTURE
				if(Constantes.ISUSAEJBLOGICLAYER) {

					finalQueryGlobal=Funciones.GetFinalQueryAppendBusqueda(finalQueryGlobal, this.sFinalQueryGeneral,finalQueryPaginacion);

					formapagopuntoventaLogic.getFormaPagoPuntoVentasFK_IdTipoRiesgoCheque(finalQueryGlobal,pagination,id_tipo_riesgo_chequeFK_IdTipoRiesgoCheque);
				} else if(Constantes.ISUSAEJBREMOTE) {
				this.sDetalleReporte=FormaPagoPuntoVentaConstantesFunciones.getDetalleIndiceFK_IdTipoRiesgoCheque(id_tipo_riesgo_chequeFK_IdTipoRiesgoCheque);

				
				} else if(Constantes.ISUSAEJBHOME) {
				this.sDetalleReporte=FormaPagoPuntoVentaConstantesFunciones.getDetalleIndiceFK_IdTipoRiesgoCheque(id_tipo_riesgo_chequeFK_IdTipoRiesgoCheque);

				
				}
				//ARCHITECTURE

				Boolean isNoExiste=false;
				//ARCHITECTURE
				if(Constantes.ISUSAEJBLOGICLAYER) {
					isNoExiste=formapagopuntoventaLogic.getFormaPagoPuntoVentas()==null||formapagopuntoventaLogic.getFormaPagoPuntoVentas().size()==0;
				} else if(Constantes.ISUSAEJBREMOTE||Constantes.ISUSAEJBHOME) {
					isNoExiste=formapagopuntoventas==null|| formapagopuntoventas.size()==0;
				}
				//ARCHITECTURE

		if(false && sTipoArchivoReporte!=""&&sTipoArchivoReporte!=null) {//this.isTipoArchivoReporte
			if(false) {//isMostrarTodosResultadosReporte
				this.pagination.setiFirstResult(-1);
				this.pagination.setiMaxResults(-1);

				//ARCHITECTURE
				if(Constantes.ISUSAEJBLOGICLAYER) {
						formapagopuntoventasAux=new ArrayList<FormaPagoPuntoVenta>();
						formapagopuntoventasAux.addAll(formapagopuntoventaLogic.getFormaPagoPuntoVentas());
				} else if(Constantes.ISUSAEJBREMOTE || Constantes.ISUSAEJBHOME) {
							formapagopuntoventasAux=new ArrayList<FormaPagoPuntoVenta>();
							formapagopuntoventasAux.addAll(formapagopuntoventas);
				}
				//ARCHITECTURE
								
				
				//ARCHITECTURE
				if(Constantes.ISUSAEJBLOGICLAYER) {
							finalQueryGlobal=Funciones.GetFinalQueryAppendBusqueda(finalQueryGlobal, this.sFinalQueryGeneral,"");
							formapagopuntoventaLogic.getFormaPagoPuntoVentasFK_IdTipoRiesgoCheque(finalQueryGlobal,pagination,id_tipo_riesgo_chequeFK_IdTipoRiesgoCheque);
				} else if(Constantes.ISUSAEJBREMOTE) {
				this.sDetalleReporte=FormaPagoPuntoVentaConstantesFunciones.getDetalleIndiceFK_IdTipoRiesgoCheque(id_tipo_riesgo_chequeFK_IdTipoRiesgoCheque);
						
				} else if(Constantes.ISUSAEJBHOME) {
				this.sDetalleReporte=FormaPagoPuntoVentaConstantesFunciones.getDetalleIndiceFK_IdTipoRiesgoCheque(id_tipo_riesgo_chequeFK_IdTipoRiesgoCheque);
						
				}
				//ARCHITECTURE
					}
				//ARCHITECTURE
				if(Constantes.ISUSAEJBLOGICLAYER) {
					generarReporteFormaPagoPuntoVentas("FK_IdTipoRiesgoCheque",formapagopuntoventaLogic.getFormaPagoPuntoVentas());
				} else if(Constantes.ISUSAEJBREMOTE || Constantes.ISUSAEJBHOME) {
					generarReporteFormaPagoPuntoVentas("FK_IdTipoRiesgoCheque",formapagopuntoventas);
				}
				//ARCHITECTURE

					if(false) {//isMostrarTodosResultadosReporte
						this.pagination.setiFirstResult(this.iNumeroPaginacionPagina);
						this.pagination.setiMaxResults(this.iNumeroPaginacion);

						//ARCHITECTURE
						if(Constantes.ISUSAEJBLOGICLAYER) {
						formapagopuntoventaLogic.setFormaPagoPuntoVentas(new ArrayList<FormaPagoPuntoVenta>());
						formapagopuntoventaLogic.getFormaPagoPuntoVentas().addAll(formapagopuntoventasAux);
						} else if(Constantes.ISUSAEJBREMOTE || Constantes.ISUSAEJBHOME) {
							formapagopuntoventas=new ArrayList<FormaPagoPuntoVenta>();
							formapagopuntoventas.addAll(formapagopuntoventasAux);
						}
						//ARCHITECTURE
					}
				}

			} 
		
		
		
		this.redimensionarTablaDatos();
		//this.refrescarForeignKeysDescripcionesFormaPagoPuntoVenta();
		
		
		if(this.conTotales) {
			this.crearFilaTotales();
		}		
		} catch (JRException e) {
			throw e;
		} catch(Exception e) {
			throw e;
      	} finally {
      		//this.finishProcessFormaPagoPuntoVenta();
      	}
		
	}				
	
	public void redimensionarTablaDatos() throws Exception {
		int iSizeTabla=0;
				
		iSizeTabla=this.getSizeTablaDatos();
		
		//ARCHITECTURE
		/*
		if(Constantes.ISUSAEJBLOGICLAYER) {	
			iSizeTabla=formapagopuntoventaLogic.getFormaPagoPuntoVentas().size();
		} else if(Constantes.ISUSAEJBREMOTE || Constantes.ISUSAEJBHOME) {
			iSizeTabla=formapagopuntoventas.size();
		}
		*/
		//ARCHITECTURE
											
		this.redimensionarTablaDatos(iSizeTabla);		
	}
	
	public Integer getSizeTablaDatos() throws Exception {
		Integer iSizeTabla=0;
				
		//ARCHITECTURE
		if(Constantes.ISUSAEJBLOGICLAYER) {	
			iSizeTabla=formapagopuntoventaLogic.getFormaPagoPuntoVentas().size();
		} else if(Constantes.ISUSAEJBREMOTE || Constantes.ISUSAEJBHOME) {
			iSizeTabla=formapagopuntoventas.size();
		}
		//ARCHITECTURE
											
		return iSizeTabla;		
	}
	
			
	public Boolean permiteMantenimiento(FormaPagoPuntoVenta formapagopuntoventa) {
		Boolean permite=true;
		
		if(this.formapagopuntoventa.getsType().equals(Constantes2.S_TOTALES)) {
			permite=false;
		}
		
		return permite;
	}
	
	public void traerValoresTablaTotales() throws Exception {
	}
	
	/*
	public void traerValoresTablaOrderBy() throws Exception {
		if(Constantes.ISUSAEJBLOGICLAYER) {
			this.arrOrderBy=FormaPagoPuntoVentaConstantesFunciones.getOrderByListaFormaPagoPuntoVenta();							
		} else if(Constantes.ISUSAEJBREMOTE || Constantes.ISUSAEJBHOME) {
			this.arrOrderBy=FormaPagoPuntoVentaConstantesFunciones.getOrderByListaFormaPagoPuntoVenta();
		}		
	}
	*/
	
	public Boolean existeFilaTotales() throws Exception {
		Boolean existe=false;
		
		if(Constantes.ISUSAEJBLOGICLAYER) {
			for(FormaPagoPuntoVenta formapagopuntoventa:formapagopuntoventaLogic.getFormaPagoPuntoVentas()) {
				if(formapagopuntoventa.getsType().equals(Constantes2.S_TOTALES)) {
					formapagopuntoventaTotales=formapagopuntoventa;
					existe=true;
					break;
				}
			}
								
		} else if(Constantes.ISUSAEJBREMOTE || Constantes.ISUSAEJBHOME) {
			for(FormaPagoPuntoVenta formapagopuntoventa:this.formapagopuntoventas) {
				if(formapagopuntoventa.getsType().equals(Constantes2.S_TOTALES)) {
					formapagopuntoventaTotales=formapagopuntoventa;
					existe=true;
					break;
				}
			}
		}
		
		return existe;
	}
	
	public void crearFilaTotales() throws Exception {
		Boolean existe=false;
		
		existe=this.existeFilaTotales();
		
		if(!existe) {
			//SI NO ES UNO A UNO SE CREA FILA TOTALES
			this.formapagopuntoventaAux=new FormaPagoPuntoVenta();
			this.formapagopuntoventaAux.setsType(Constantes2.S_TOTALES);
			this.formapagopuntoventaAux.setIsNew(false);
			this.formapagopuntoventaAux.setIsChanged(false);
			this.formapagopuntoventaAux.setIsDeleted(false);
				
			if(Constantes.ISUSAEJBLOGICLAYER) {
				FormaPagoPuntoVentaConstantesFunciones.TotalizarValoresFilaFormaPagoPuntoVenta(this.formapagopuntoventaLogic.getFormaPagoPuntoVentas(),this.formapagopuntoventaAux);
				
				this.formapagopuntoventaLogic.getFormaPagoPuntoVentas().add(this.formapagopuntoventaAux);
				
			} else if(Constantes.ISUSAEJBREMOTE || Constantes.ISUSAEJBHOME) {
				FormaPagoPuntoVentaConstantesFunciones.TotalizarValoresFilaFormaPagoPuntoVenta(this.formapagopuntoventas,this.formapagopuntoventaAux);
				
				this.formapagopuntoventas.add(this.formapagopuntoventaAux);
			}
		}
	}
	
	public void quitarFilaTotales() throws Exception {
		formapagopuntoventaTotales=new FormaPagoPuntoVenta();
		Boolean existe=false;
		
		if(Constantes.ISUSAEJBLOGICLAYER) {
			existe=this.existeFilaTotales();
			
			if(existe) {
				this.formapagopuntoventaLogic.getFormaPagoPuntoVentas().remove(formapagopuntoventaTotales);
			}			
		} else if(Constantes.ISUSAEJBREMOTE || Constantes.ISUSAEJBHOME) {
			existe=this.existeFilaTotales();
			
			if(existe) {
				this.formapagopuntoventas.remove(formapagopuntoventaTotales);
			}
		}
	}
	
	public void actualizarFilaTotales() throws Exception {
		formapagopuntoventaTotales=new FormaPagoPuntoVenta();
		Boolean existe=false;
		
		if(Constantes.ISUSAEJBLOGICLAYER) {
			for(FormaPagoPuntoVenta formapagopuntoventa:formapagopuntoventaLogic.getFormaPagoPuntoVentas()) {
				if(formapagopuntoventa.getsType().equals(Constantes2.S_TOTALES)) {
					formapagopuntoventaTotales=formapagopuntoventa;
					existe=true;
					break;
				}
			}
			
			if(existe) {
				FormaPagoPuntoVentaConstantesFunciones.TotalizarValoresFilaFormaPagoPuntoVenta(this.formapagopuntoventaLogic.getFormaPagoPuntoVentas(),formapagopuntoventaTotales);
			}			
		} else if(Constantes.ISUSAEJBREMOTE || Constantes.ISUSAEJBHOME) {
			for(FormaPagoPuntoVenta formapagopuntoventa:this.formapagopuntoventas) {
				if(formapagopuntoventa.getsType().equals(Constantes2.S_TOTALES)) {
					formapagopuntoventaTotales=formapagopuntoventa;
					existe=true;
					break;
				}
			}
			
			if(existe) {
				FormaPagoPuntoVentaConstantesFunciones.TotalizarValoresFilaFormaPagoPuntoVenta(this.formapagopuntoventas,formapagopuntoventaTotales);
			}
		}
	}		
	
	public void recargarInformacion()throws Exception {
		try {
			sAccionBusqueda="Todos";
			this.iNumeroPaginacionPagina=0;
			
			this.procesarBusqueda(sAccionBusqueda);
			
		} catch(Exception e) {
			FuncionesSwing.manageException(this, e,logger,FormaPagoPuntoVentaConstantesFunciones.CLASSNAME);
		}	
	}		
	
	
	
	public void onLoad()throws Exception {		
		try {		
			isEntroOnLoad=true;
			//INTENTA TRAER DATOS DE BUSQUEDA ANTERIOR
			this.traerDatosBusquedaDesdeSession();
					
			//SINO SE CUMPLE VIENE DE PADRE FOREIGN O BUSQUEDA ANTIGUA
			if(this.sAccionBusqueda.equals("")) {
				this.sAccionBusqueda="Todos";
			}
								
			this.procesarBusqueda(sAccionBusqueda);
			
		} catch (Exception e) {
			throw e;
		}
	}		
	
	public void inicializarPermisosFormaPagoPuntoVenta() {
		this.isPermisoTodoFormaPagoPuntoVenta=false;
		this.isPermisoNuevoFormaPagoPuntoVenta=false;
		this.isPermisoActualizarFormaPagoPuntoVenta=false;
		this.isPermisoActualizarOriginalFormaPagoPuntoVenta=false;
		this.isPermisoEliminarFormaPagoPuntoVenta=false;
		this.isPermisoGuardarCambiosFormaPagoPuntoVenta=false;
		this.isPermisoConsultaFormaPagoPuntoVenta=false;
		this.isPermisoBusquedaFormaPagoPuntoVenta=false;
		this.isPermisoReporteFormaPagoPuntoVenta=false;		
		this.isPermisoOrdenFormaPagoPuntoVenta=false;		
		this.isPermisoPaginacionMedioFormaPagoPuntoVenta=false;		
		this.isPermisoPaginacionAltoFormaPagoPuntoVenta=false;
		this.isPermisoPaginacionTodoFormaPagoPuntoVenta=false;
		this.isPermisoCopiarFormaPagoPuntoVenta=false;		
		this.isPermisoVerFormFormaPagoPuntoVenta=false;		
		this.isPermisoDuplicarFormaPagoPuntoVenta=false;		
		this.isPermisoOrdenFormaPagoPuntoVenta=false;		
	}
	
	public void setPermisosUsuarioFormaPagoPuntoVenta(Boolean isPermiso) {
		this.isPermisoTodoFormaPagoPuntoVenta=isPermiso;
		this.isPermisoNuevoFormaPagoPuntoVenta=isPermiso;
		this.isPermisoActualizarFormaPagoPuntoVenta=isPermiso;
		this.isPermisoActualizarOriginalFormaPagoPuntoVenta=isPermiso;
		this.isPermisoEliminarFormaPagoPuntoVenta=isPermiso;
		this.isPermisoGuardarCambiosFormaPagoPuntoVenta=isPermiso;
		this.isPermisoConsultaFormaPagoPuntoVenta=isPermiso;
		this.isPermisoBusquedaFormaPagoPuntoVenta=isPermiso;
		this.isPermisoReporteFormaPagoPuntoVenta=isPermiso;
		this.isPermisoOrdenFormaPagoPuntoVenta=isPermiso;		
		this.isPermisoPaginacionMedioFormaPagoPuntoVenta=isPermiso;		
		this.isPermisoPaginacionAltoFormaPagoPuntoVenta=isPermiso;		
		this.isPermisoPaginacionTodoFormaPagoPuntoVenta=isPermiso;		
		this.isPermisoCopiarFormaPagoPuntoVenta=isPermiso;		
		this.isPermisoVerFormFormaPagoPuntoVenta=isPermiso;		
		this.isPermisoDuplicarFormaPagoPuntoVenta=isPermiso;
		this.isPermisoOrdenFormaPagoPuntoVenta=isPermiso;
	}
	
	public void setPermisosMantenimientoUsuarioFormaPagoPuntoVenta(Boolean isPermiso) {
		//this.isPermisoTodoFormaPagoPuntoVenta=isPermiso;
		this.isPermisoNuevoFormaPagoPuntoVenta=isPermiso;
		this.isPermisoActualizarFormaPagoPuntoVenta=isPermiso;
		this.isPermisoActualizarOriginalFormaPagoPuntoVenta=isPermiso;
		this.isPermisoEliminarFormaPagoPuntoVenta=isPermiso;
		this.isPermisoGuardarCambiosFormaPagoPuntoVenta=isPermiso;
		//this.isPermisoConsultaFormaPagoPuntoVenta=isPermiso;
		//this.isPermisoBusquedaFormaPagoPuntoVenta=isPermiso;
		//this.isPermisoReporteFormaPagoPuntoVenta=isPermiso;
		//this.isPermisoOrdenFormaPagoPuntoVenta=isPermiso;		
		//this.isPermisoPaginacionMedioFormaPagoPuntoVenta=isPermiso;		
		//this.isPermisoPaginacionAltoFormaPagoPuntoVenta=isPermiso;		
		//this.isPermisoPaginacionTodoFormaPagoPuntoVenta=isPermiso;		
		//this.isPermisoCopiarFormaPagoPuntoVenta=isPermiso;		
		//this.isPermisoDuplicarFormaPagoPuntoVenta=isPermiso;
		//this.isPermisoOrdenFormaPagoPuntoVenta=isPermiso;
	}
	
	public void inicializarSetPermisosUsuarioFormaPagoPuntoVentaClasesRelacionadas() throws Exception {
		ArrayList<String> arrPaginas=new ArrayList<String>();		
		ArrayList<Opcion> opcionsFinal=new ArrayList<Opcion>();	
		
		
		if(FormaPagoPuntoVentaJInternalFrame.CON_LLAMADA_SIMPLE) {
			this.opcionsRelacionadas.addAll(this.sistemaReturnGeneral.getOpcionsRelacionadas());
			
		} else {
			if(Constantes.ISUSAEJBLOGICLAYER) {
				opcionsFinal=sistemaLogicAdditional.tienePermisosOpcionesEnPaginaWeb(this.usuarioActual, Constantes.LIDSISTEMAACTUAL, arrPaginas);
			} else if(Constantes.ISUSAEJBREMOTE) {
			} else if(Constantes.ISUSAEJBHOME) {
			}
			
			this.opcionsRelacionadas.addAll(opcionsFinal);
		}
		
		
		
	}
	
	public Boolean tienePermisosUsuarioEnPaginaWebFormaPagoPuntoVenta(String sPagina) throws Exception {
		Boolean tienePermisos=false;
		
		if(Constantes.ISUSAEJBLOGICLAYER) {
			tienePermisos=sistemaLogicAdditional.tienePermisosEnPaginaWeb(this.usuarioActual, Constantes.LIDSISTEMAACTUAL, sPagina);
		} else if(Constantes.ISUSAEJBREMOTE) {
		} else if(Constantes.ISUSAEJBHOME) {
		}
		
		return tienePermisos;
	}
	
	public void inicializarSetPermisosUsuarioFormaPagoPuntoVentaClasesRelacionadas(Boolean conPermiso) throws Exception {
		
	}
	
	public Boolean verificarGetPermisosUsuarioFormaPagoPuntoVentaClaseRelacionada(ArrayList<String> arrPaginasFinal,String sPaginaActual) throws Exception {
		Boolean verificado=false;
		
		verificado=Funciones2.verificarGetPermisosUsuarioClaseRelacionada(arrPaginasFinal,sPaginaActual);				
		
		return verificado;
	}
	
	public Boolean verificarGetPermisosUsuarioOpcionFormaPagoPuntoVentaClaseRelacionada(List<Opcion> opcionsFinal,String sPaginaActual) throws Exception {
		Boolean verificado=false;
		
		verificado=Funciones2.verificarGetPermisosUsuarioOpcionClaseRelacionada(opcionsFinal,sPaginaActual);				
		
		return verificado;
	}
	
	public void actualizarTabsSetPermisosUsuarioFormaPagoPuntoVentaClasesRelacionadas() throws Exception {
		
	}
	
	public void setPermisosUsuarioFormaPagoPuntoVenta() throws Exception {
		
		PerfilOpcion perfilOpcionUsuario=new PerfilOpcion();		
		Long idOpcion=this.opcionActual.getId();
		
		if(FormaPagoPuntoVentaJInternalFrame.CON_LLAMADA_SIMPLE) {
			perfilOpcionUsuario=this.sistemaReturnGeneral.getPerfilOpcion();
			
		} else {
			if(this.formapagopuntoventaSessionBean.getEsGuardarRelacionado()) {
				idOpcion=0L;
			}
			
			if(Constantes.ISUSAEJBLOGICLAYER) {	
				perfilOpcionUsuario=sistemaLogicAdditional.traerPermisosPaginaWebPerfilOpcion(this.usuarioActual, Constantes.LIDSISTEMAACTUAL, FormaPagoPuntoVentaConstantesFunciones.SNOMBREOPCION,idOpcion);				
			} else if(Constantes.ISUSAEJBREMOTE) {
			} else if(Constantes.ISUSAEJBHOME) {
			}
		}
		
		if(perfilOpcionUsuario!=null && perfilOpcionUsuario.getId()>0) {
			this.isPermisoNuevoFormaPagoPuntoVenta=perfilOpcionUsuario.getingreso()||perfilOpcionUsuario.gettodo();
			this.isPermisoActualizarFormaPagoPuntoVenta=perfilOpcionUsuario.getmodificacion()||perfilOpcionUsuario.gettodo();
			this.isPermisoActualizarOriginalFormaPagoPuntoVenta=this.isPermisoActualizarFormaPagoPuntoVenta;
			this.isPermisoEliminarFormaPagoPuntoVenta=perfilOpcionUsuario.geteliminacion()||perfilOpcionUsuario.gettodo();
			this.isPermisoGuardarCambiosFormaPagoPuntoVenta=perfilOpcionUsuario.getguardar_cambios()||perfilOpcionUsuario.gettodo();
			this.isPermisoConsultaFormaPagoPuntoVenta=perfilOpcionUsuario.getconsulta()||perfilOpcionUsuario.gettodo();
			this.isPermisoBusquedaFormaPagoPuntoVenta=perfilOpcionUsuario.getbusqueda()||perfilOpcionUsuario.gettodo();
			this.isPermisoTodoFormaPagoPuntoVenta=perfilOpcionUsuario.gettodo()||perfilOpcionUsuario.gettodo();
			this.isPermisoReporteFormaPagoPuntoVenta=perfilOpcionUsuario.getreporte()||perfilOpcionUsuario.gettodo();
			this.isPermisoOrdenFormaPagoPuntoVenta=perfilOpcionUsuario.getorden()||perfilOpcionUsuario.gettodo();
			this.isPermisoPaginacionMedioFormaPagoPuntoVenta=perfilOpcionUsuario.getpaginacion_medio()||perfilOpcionUsuario.gettodo();
			this.isPermisoPaginacionAltoFormaPagoPuntoVenta=perfilOpcionUsuario.getpaginacion_alto()||perfilOpcionUsuario.gettodo();
			this.isPermisoPaginacionTodoFormaPagoPuntoVenta=perfilOpcionUsuario.getpaginacion_todo()||perfilOpcionUsuario.gettodo();
			this.isPermisoCopiarFormaPagoPuntoVenta=perfilOpcionUsuario.getcopiar()||perfilOpcionUsuario.gettodo();
			this.isPermisoVerFormFormaPagoPuntoVenta=true;//perfilOpcionUsuario.getver_form()||perfilOpcionUsuario.gettodo();
			this.isPermisoDuplicarFormaPagoPuntoVenta=perfilOpcionUsuario.getduplicar()||perfilOpcionUsuario.gettodo();
			this.isPermisoOrdenFormaPagoPuntoVenta=perfilOpcionUsuario.getorden()||perfilOpcionUsuario.gettodo();
			
			if(this.formapagopuntoventaSessionBean.getEsGuardarRelacionado()) {
				this.opcionActual.setId(perfilOpcionUsuario.getid_opcion());
				
				this.jTableDatosFormaPagoPuntoVenta.setToolTipText(this.jTableDatosFormaPagoPuntoVenta.getToolTipText()+"_"+perfilOpcionUsuario.getid_opcion());		
			}
		} else {
			this.setPermisosUsuarioFormaPagoPuntoVenta(false);
		}
		
		//SI SE NECESITA PONER TODOS LOS PERMISOS POR DEFECTO
		//
		
	}
	
	public void setAccionesUsuarioFormaPagoPuntoVenta(Boolean esParaAccionesFormulario) throws Exception {		
		Reporte reporte=null;
		
		if(!esParaAccionesFormulario) {
			this.accions=new ArrayList<Accion>();
			
			if(FormaPagoPuntoVentaJInternalFrame.CON_LLAMADA_SIMPLE) {
				this.accions=this.sistemaReturnGeneral.getAccions();
				
				
			} else {
				if(Constantes.ISUSAEJBLOGICLAYER) {	
					this.accions=sistemaLogicAdditional.getAccionesUsuario(this.usuarioActual,this.opcionActual,false);				
				} else if(Constantes.ISUSAEJBREMOTE) {
				} else if(Constantes.ISUSAEJBHOME) {
				}
			}
			
			if(this.accions.size()>0) {			
				for(Accion accion:this.accions) {
					reporte=new Reporte();
					reporte.setsCodigo(accion.getcodigo());
					reporte.setsDescripcion(accion.getnombre());
		
		
					this.tiposAcciones.add(reporte);
				}
			}	
			
			

			reporte=new Reporte();
			reporte.setsCodigo("");
			reporte.setsDescripcion("");

			this.tiposAcciones.add(reporte);
			
		} else {
			//ACCIONES FORMULARIO
			this.accionsFormulario=new ArrayList<Accion>();
			
			if(FormaPagoPuntoVentaJInternalFrame.CON_LLAMADA_SIMPLE) {
				this.accionsFormulario=this.sistemaReturnGeneral.getAccionsFormulario();
			
			} else {
				if(Constantes.ISUSAEJBLOGICLAYER) {	
					this.accionsFormulario=sistemaLogicAdditional.getAccionesUsuario(this.usuarioActual,this.opcionActual,true);				
				} else if(Constantes.ISUSAEJBREMOTE) {
				} else if(Constantes.ISUSAEJBHOME) {
				}
			}
			
			if(this.accionsFormulario.size()>0) {			
				for(Accion accion:this.accionsFormulario) {
					reporte=new Reporte();
					reporte.setsCodigo(accion.getcodigo());
					reporte.setsDescripcion(accion.getnombre());
					
					this.tiposAccionesFormulario.add(reporte);
				}
			}	
			
			

			reporte=new Reporte();
			reporte.setsCodigo("");
			reporte.setsDescripcion("");

			this.tiposAccionesFormulario.add(reporte);
		}				
	}	 	
	
	public void setRelacionesUsuarioFormaPagoPuntoVenta() throws Exception {
		Reporte reporte=null;
		
		
		
		
		//ORDENAR ALFABETICAMENTE
		Collections.sort(this.tiposRelaciones, new ReporteComparator());
		/*
		reporte=new Reporte();
		reporte.setsCodigo(accion.getcodigo());
		reporte.setsDescripcion(accion.getnombre());
			
		this.tiposRelaciones.add(reporte);
		*/
	}	
	
		
	@SuppressWarnings({ "unchecked", "rawtypes" } )
	public void inicializarCombosForeignKeyFormaPagoPuntoVentaListas()throws Exception {
		try	{						
			
				this.empresasForeignKey=new ArrayList();
				this.sucursalsForeignKey=new ArrayList();
				this.ejerciciosForeignKey=new ArrayList();
				this.periodosForeignKey=new ArrayList();
				this.facturapuntoventasForeignKey=new ArrayList();
				this.tipoformapagosForeignKey=new ArrayList();
				this.bancosForeignKey=new ArrayList();
				this.cuentabancopunvensForeignKey=new ArrayList();
				this.tiporiesgochequesForeignKey=new ArrayList();
				this.bancotarjetasForeignKey=new ArrayList();
				this.tarjetacreditosForeignKey=new ArrayList();
				this.tipointerestarjetasForeignKey=new ArrayList();
				this.tipopagotarjetasForeignKey=new ArrayList();
				this.conexionsForeignKey=new ArrayList();
				this.messForeignKey=new ArrayList();
				this.aniosForeignKey=new ArrayList();
				this.cuentacontablesForeignKey=new ArrayList();
				this.asientocontablesForeignKey=new ArrayList();
		} catch(Exception e) {
			throw e;
		}		
	}
	
	public void cargarCombosTodosForeignKeyFormaPagoPuntoVentaListas(Boolean cargarCombosDependencia)throws Exception {
		try	{
			
			ArrayList<String> arrColumnasGlobales=new ArrayList<String>();
			String  finalQueryGlobal="";
			String sFinalQueryCombo="";
			
			Modulo  moduloActualAux=new Modulo();
			
			if(FormaPagoPuntoVentaJInternalFrame.ISLOAD_FKLOTE) {
				this.cargarCombosLoteForeignKeyFormaPagoPuntoVentaListas(false);
			} else {
			
				this.cargarCombosForeignKeyEmpresaListas(cargarCombosDependencia,sFinalQueryCombo);
				this.cargarCombosForeignKeySucursalListas(cargarCombosDependencia,sFinalQueryCombo);
				this.cargarCombosForeignKeyEjercicioListas(cargarCombosDependencia,sFinalQueryCombo);
				this.cargarCombosForeignKeyPeriodoListas(cargarCombosDependencia,sFinalQueryCombo);
				this.cargarCombosForeignKeyFacturaPuntoVentaListas(cargarCombosDependencia,sFinalQueryCombo);
				this.cargarCombosForeignKeyTipoFormaPagoListas(cargarCombosDependencia,sFinalQueryCombo);
				this.cargarCombosForeignKeyBancoListas(cargarCombosDependencia,sFinalQueryCombo);
				this.cargarCombosForeignKeyCuentaBancoPunVenListas(cargarCombosDependencia,sFinalQueryCombo);
				this.cargarCombosForeignKeyTipoRiesgoChequeListas(cargarCombosDependencia,sFinalQueryCombo);
				this.cargarCombosForeignKeyBancoTarjetaListas(cargarCombosDependencia,sFinalQueryCombo);
				this.cargarCombosForeignKeyTarjetaCreditoListas(cargarCombosDependencia,sFinalQueryCombo);
				this.cargarCombosForeignKeyTipoInteresTarjetaListas(cargarCombosDependencia,sFinalQueryCombo);
				this.cargarCombosForeignKeyTipoPagoTarjetaListas(cargarCombosDependencia,sFinalQueryCombo);
				this.cargarCombosForeignKeyConexionListas(cargarCombosDependencia,sFinalQueryCombo);
				this.cargarCombosForeignKeyMesListas(cargarCombosDependencia,sFinalQueryCombo);
				this.cargarCombosForeignKeyAnioListas(cargarCombosDependencia,sFinalQueryCombo);
				this.cargarCombosForeignKeyCuentaContableListas(cargarCombosDependencia,sFinalQueryCombo);
				this.cargarCombosForeignKeyAsientoContableListas(cargarCombosDependencia,sFinalQueryCombo);
			}
		} catch(Exception e) {
			throw e;
		}		
	}		
	
	

	public void cargarCombosForeignKeyEmpresaListas(Boolean cargarCombosDependencia,String sFinalQuery)throws Exception {
		try	{
			ArrayList<String> arrColumnasGlobales=new ArrayList<String>();

			String  finalQueryGlobal="";

			Modulo  moduloActualAux=new Modulo();

			if((this.empresasForeignKey==null||this.empresasForeignKey.size()<=0)) {
				this.arrDatoGeneral= new  ArrayList<DatoGeneral>();
				this.arrDatoGeneralNo= new  ArrayList<String>();

				arrColumnasGlobales=EmpresaConstantesFunciones.getArrayColumnasGlobalesEmpresa(this.arrDatoGeneral,this.arrDatoGeneralNo);
				finalQueryGlobal=Funciones.GetWhereGlobalConstants(this.parametroGeneralUsuario,this.moduloActual,true,false,arrColumnasGlobales,EmpresaConstantesFunciones.TABLENAME);

				finalQueryGlobal=Funciones.GetFinalQueryAppend(finalQueryGlobal, sFinalQuery);
				finalQueryGlobal=Funciones.GetFinalQueryAppend(finalQueryGlobal, "");

				finalQueryGlobal+=EmpresaConstantesFunciones.SFINALQUERY;

				this.cargarCombosEmpresasForeignKeyLista(finalQueryGlobal);
			}

		} catch(Exception e) {
			throw e;
		}
	}

	public void cargarCombosForeignKeySucursalListas(Boolean cargarCombosDependencia,String sFinalQuery)throws Exception {
		try	{
			ArrayList<String> arrColumnasGlobales=new ArrayList<String>();

			String  finalQueryGlobal="";

			Modulo  moduloActualAux=new Modulo();

			if((this.sucursalsForeignKey==null||this.sucursalsForeignKey.size()<=0)) {
				this.arrDatoGeneral= new  ArrayList<DatoGeneral>();
				this.arrDatoGeneralNo= new  ArrayList<String>();

				arrColumnasGlobales=SucursalConstantesFunciones.getArrayColumnasGlobalesSucursal(this.arrDatoGeneral,this.arrDatoGeneralNo);
				finalQueryGlobal=Funciones.GetWhereGlobalConstants(this.parametroGeneralUsuario,this.moduloActual,true,false,arrColumnasGlobales,SucursalConstantesFunciones.TABLENAME);

				finalQueryGlobal=Funciones.GetFinalQueryAppend(finalQueryGlobal, sFinalQuery);
				finalQueryGlobal=Funciones.GetFinalQueryAppend(finalQueryGlobal, "");

				finalQueryGlobal+=SucursalConstantesFunciones.SFINALQUERY;

				this.cargarCombosSucursalsForeignKeyLista(finalQueryGlobal);
			}

		} catch(Exception e) {
			throw e;
		}
	}

	public void cargarCombosForeignKeyEjercicioListas(Boolean cargarCombosDependencia,String sFinalQuery)throws Exception {
		try	{
			ArrayList<String> arrColumnasGlobales=new ArrayList<String>();

			String  finalQueryGlobal="";

			Modulo  moduloActualAux=new Modulo();

			if((this.ejerciciosForeignKey==null||this.ejerciciosForeignKey.size()<=0)) {
				this.arrDatoGeneral= new  ArrayList<DatoGeneral>();
				this.arrDatoGeneralNo= new  ArrayList<String>();

				arrColumnasGlobales=EjercicioConstantesFunciones.getArrayColumnasGlobalesEjercicio(this.arrDatoGeneral,this.arrDatoGeneralNo);
				finalQueryGlobal=Funciones.GetWhereGlobalConstants(this.parametroGeneralUsuario,this.moduloActual,true,false,arrColumnasGlobales,EjercicioConstantesFunciones.TABLENAME);

				finalQueryGlobal=Funciones.GetFinalQueryAppend(finalQueryGlobal, sFinalQuery);
				finalQueryGlobal=Funciones.GetFinalQueryAppend(finalQueryGlobal, "");

				finalQueryGlobal+=EjercicioConstantesFunciones.SFINALQUERY;

				this.cargarCombosEjerciciosForeignKeyLista(finalQueryGlobal);
			}

		} catch(Exception e) {
			throw e;
		}
	}

	public void cargarCombosForeignKeyPeriodoListas(Boolean cargarCombosDependencia,String sFinalQuery)throws Exception {
		try	{
			ArrayList<String> arrColumnasGlobales=new ArrayList<String>();

			String  finalQueryGlobal="";

			Modulo  moduloActualAux=new Modulo();

			if((this.periodosForeignKey==null||this.periodosForeignKey.size()<=0)) {
				this.arrDatoGeneral= new  ArrayList<DatoGeneral>();
				this.arrDatoGeneralNo= new  ArrayList<String>();

				arrColumnasGlobales=PeriodoConstantesFunciones.getArrayColumnasGlobalesPeriodo(this.arrDatoGeneral,this.arrDatoGeneralNo);
				finalQueryGlobal=Funciones.GetWhereGlobalConstants(this.parametroGeneralUsuario,this.moduloActual,true,false,arrColumnasGlobales,PeriodoConstantesFunciones.TABLENAME);

				finalQueryGlobal=Funciones.GetFinalQueryAppend(finalQueryGlobal, sFinalQuery);
				finalQueryGlobal=Funciones.GetFinalQueryAppend(finalQueryGlobal, "");

				finalQueryGlobal+=PeriodoConstantesFunciones.SFINALQUERY;

				this.cargarCombosPeriodosForeignKeyLista(finalQueryGlobal);
			}

		} catch(Exception e) {
			throw e;
		}
	}

	public void cargarCombosForeignKeyFacturaPuntoVentaListas(Boolean cargarCombosDependencia,String sFinalQuery)throws Exception {
		try	{
			ArrayList<String> arrColumnasGlobales=new ArrayList<String>();

			String  finalQueryGlobal="";

			Modulo  moduloActualAux=new Modulo();

			if((this.facturapuntoventasForeignKey==null||this.facturapuntoventasForeignKey.size()<=0)) {
				this.arrDatoGeneral= new  ArrayList<DatoGeneral>();
				this.arrDatoGeneralNo= new  ArrayList<String>();

				arrColumnasGlobales=FacturaPuntoVentaConstantesFunciones.getArrayColumnasGlobalesFacturaPuntoVenta(this.arrDatoGeneral,this.arrDatoGeneralNo);
				finalQueryGlobal=Funciones.GetWhereGlobalConstants(this.parametroGeneralUsuario,this.moduloActual,true,false,arrColumnasGlobales,FacturaPuntoVentaConstantesFunciones.TABLENAME);

				finalQueryGlobal=Funciones.GetFinalQueryAppend(finalQueryGlobal, sFinalQuery);
				finalQueryGlobal=Funciones.GetFinalQueryAppend(finalQueryGlobal, "");

				finalQueryGlobal+=FacturaPuntoVentaConstantesFunciones.SFINALQUERY;

				this.cargarCombosFacturaPuntoVentasForeignKeyLista(finalQueryGlobal);
			}

		} catch(Exception e) {
			throw e;
		}
	}

	public void cargarCombosForeignKeyTipoFormaPagoListas(Boolean cargarCombosDependencia,String sFinalQuery)throws Exception {
		try	{
			ArrayList<String> arrColumnasGlobales=new ArrayList<String>();

			String  finalQueryGlobal="";

			Modulo  moduloActualAux=new Modulo();

			if((this.tipoformapagosForeignKey==null||this.tipoformapagosForeignKey.size()<=0)) {
				this.arrDatoGeneral= new  ArrayList<DatoGeneral>();
				this.arrDatoGeneralNo= new  ArrayList<String>();

				arrColumnasGlobales=TipoFormaPagoConstantesFunciones.getArrayColumnasGlobalesTipoFormaPago(this.arrDatoGeneral,this.arrDatoGeneralNo);
				finalQueryGlobal=Funciones.GetWhereGlobalConstants(this.parametroGeneralUsuario,this.moduloActual,true,false,arrColumnasGlobales,TipoFormaPagoConstantesFunciones.TABLENAME);

				finalQueryGlobal=Funciones.GetFinalQueryAppend(finalQueryGlobal, sFinalQuery);
				finalQueryGlobal=Funciones.GetFinalQueryAppend(finalQueryGlobal, "");

				finalQueryGlobal+=TipoFormaPagoConstantesFunciones.SFINALQUERY;

				this.cargarCombosTipoFormaPagosForeignKeyLista(finalQueryGlobal);
			}

		} catch(Exception e) {
			throw e;
		}
	}

	public void cargarCombosForeignKeyBancoListas(Boolean cargarCombosDependencia,String sFinalQuery)throws Exception {
		try	{
			ArrayList<String> arrColumnasGlobales=new ArrayList<String>();

			String  finalQueryGlobal="";

			Modulo  moduloActualAux=new Modulo();

			if((this.bancosForeignKey==null||this.bancosForeignKey.size()<=0)) {
				this.arrDatoGeneral= new  ArrayList<DatoGeneral>();
				this.arrDatoGeneralNo= new  ArrayList<String>();

				arrColumnasGlobales=BancoConstantesFunciones.getArrayColumnasGlobalesBanco(this.arrDatoGeneral,this.arrDatoGeneralNo);
				finalQueryGlobal=Funciones.GetWhereGlobalConstants(this.parametroGeneralUsuario,this.moduloActual,true,false,arrColumnasGlobales,BancoConstantesFunciones.TABLENAME);

				finalQueryGlobal=Funciones.GetFinalQueryAppend(finalQueryGlobal, sFinalQuery);
				finalQueryGlobal=Funciones.GetFinalQueryAppend(finalQueryGlobal, "");

				finalQueryGlobal+=BancoConstantesFunciones.SFINALQUERY;

				this.cargarCombosBancosForeignKeyLista(finalQueryGlobal);
			}

		} catch(Exception e) {
			throw e;
		}
	}

	public void cargarCombosForeignKeyCuentaBancoPunVenListas(Boolean cargarCombosDependencia,String sFinalQuery)throws Exception {
		try	{
			ArrayList<String> arrColumnasGlobales=new ArrayList<String>();

			String  finalQueryGlobal="";

			Modulo  moduloActualAux=new Modulo();

			if((this.cuentabancopunvensForeignKey==null||this.cuentabancopunvensForeignKey.size()<=0)) {
				this.arrDatoGeneral= new  ArrayList<DatoGeneral>();
				this.arrDatoGeneralNo= new  ArrayList<String>();

				arrColumnasGlobales=CuentaBancoPunVenConstantesFunciones.getArrayColumnasGlobalesCuentaBancoPunVen(this.arrDatoGeneral,this.arrDatoGeneralNo);
				finalQueryGlobal=Funciones.GetWhereGlobalConstants(this.parametroGeneralUsuario,this.moduloActual,true,false,arrColumnasGlobales,CuentaBancoPunVenConstantesFunciones.TABLENAME);

				finalQueryGlobal=Funciones.GetFinalQueryAppend(finalQueryGlobal, sFinalQuery);
				finalQueryGlobal=Funciones.GetFinalQueryAppend(finalQueryGlobal, "");

				finalQueryGlobal+=CuentaBancoPunVenConstantesFunciones.SFINALQUERY;

				this.cargarCombosCuentaBancoPunVensForeignKeyLista(finalQueryGlobal);
			}

		} catch(Exception e) {
			throw e;
		}
	}

	public void cargarCombosForeignKeyTipoRiesgoChequeListas(Boolean cargarCombosDependencia,String sFinalQuery)throws Exception {
		try	{
			ArrayList<String> arrColumnasGlobales=new ArrayList<String>();

			String  finalQueryGlobal="";

			Modulo  moduloActualAux=new Modulo();

			if((this.tiporiesgochequesForeignKey==null||this.tiporiesgochequesForeignKey.size()<=0)) {
				this.arrDatoGeneral= new  ArrayList<DatoGeneral>();
				this.arrDatoGeneralNo= new  ArrayList<String>();

				arrColumnasGlobales=TipoRiesgoChequeConstantesFunciones.getArrayColumnasGlobalesTipoRiesgoCheque(this.arrDatoGeneral,this.arrDatoGeneralNo);
				finalQueryGlobal=Funciones.GetWhereGlobalConstants(this.parametroGeneralUsuario,this.moduloActual,true,false,arrColumnasGlobales,TipoRiesgoChequeConstantesFunciones.TABLENAME);

				finalQueryGlobal=Funciones.GetFinalQueryAppend(finalQueryGlobal, sFinalQuery);
				finalQueryGlobal=Funciones.GetFinalQueryAppend(finalQueryGlobal, "");

				finalQueryGlobal+=TipoRiesgoChequeConstantesFunciones.SFINALQUERY;

				this.cargarCombosTipoRiesgoChequesForeignKeyLista(finalQueryGlobal);
			}

		} catch(Exception e) {
			throw e;
		}
	}

	public void cargarCombosForeignKeyBancoTarjetaListas(Boolean cargarCombosDependencia,String sFinalQuery)throws Exception {
		try	{
			ArrayList<String> arrColumnasGlobales=new ArrayList<String>();

			String  finalQueryGlobal="";

			Modulo  moduloActualAux=new Modulo();

			if((this.bancotarjetasForeignKey==null||this.bancotarjetasForeignKey.size()<=0)) {
				this.arrDatoGeneral= new  ArrayList<DatoGeneral>();
				this.arrDatoGeneralNo= new  ArrayList<String>();

				arrColumnasGlobales=BancoConstantesFunciones.getArrayColumnasGlobalesBanco(this.arrDatoGeneral,this.arrDatoGeneralNo);
				finalQueryGlobal=Funciones.GetWhereGlobalConstants(this.parametroGeneralUsuario,this.moduloActual,true,false,arrColumnasGlobales,BancoConstantesFunciones.TABLENAME);

				finalQueryGlobal=Funciones.GetFinalQueryAppend(finalQueryGlobal, sFinalQuery);
				finalQueryGlobal=Funciones.GetFinalQueryAppend(finalQueryGlobal, "");

				finalQueryGlobal+=BancoConstantesFunciones.SFINALQUERY;

				this.cargarCombosBancoTarjetasForeignKeyLista(finalQueryGlobal);
			}

		} catch(Exception e) {
			throw e;
		}
	}

	public void cargarCombosForeignKeyTarjetaCreditoListas(Boolean cargarCombosDependencia,String sFinalQuery)throws Exception {
		try	{
			ArrayList<String> arrColumnasGlobales=new ArrayList<String>();

			String  finalQueryGlobal="";

			Modulo  moduloActualAux=new Modulo();

			if((this.tarjetacreditosForeignKey==null||this.tarjetacreditosForeignKey.size()<=0)) {
				this.arrDatoGeneral= new  ArrayList<DatoGeneral>();
				this.arrDatoGeneralNo= new  ArrayList<String>();

				arrColumnasGlobales=TarjetaCreditoConstantesFunciones.getArrayColumnasGlobalesTarjetaCredito(this.arrDatoGeneral,this.arrDatoGeneralNo);
				finalQueryGlobal=Funciones.GetWhereGlobalConstants(this.parametroGeneralUsuario,this.moduloActual,true,false,arrColumnasGlobales,TarjetaCreditoConstantesFunciones.TABLENAME);

				finalQueryGlobal=Funciones.GetFinalQueryAppend(finalQueryGlobal, sFinalQuery);
				finalQueryGlobal=Funciones.GetFinalQueryAppend(finalQueryGlobal, "");

				finalQueryGlobal+=TarjetaCreditoConstantesFunciones.SFINALQUERY;

				this.cargarCombosTarjetaCreditosForeignKeyLista(finalQueryGlobal);
			}

		} catch(Exception e) {
			throw e;
		}
	}

	public void cargarCombosForeignKeyTipoInteresTarjetaListas(Boolean cargarCombosDependencia,String sFinalQuery)throws Exception {
		try	{
			ArrayList<String> arrColumnasGlobales=new ArrayList<String>();

			String  finalQueryGlobal="";

			Modulo  moduloActualAux=new Modulo();

			if((this.tipointerestarjetasForeignKey==null||this.tipointerestarjetasForeignKey.size()<=0)) {
				this.arrDatoGeneral= new  ArrayList<DatoGeneral>();
				this.arrDatoGeneralNo= new  ArrayList<String>();

				arrColumnasGlobales=TipoInteresTarjetaConstantesFunciones.getArrayColumnasGlobalesTipoInteresTarjeta(this.arrDatoGeneral,this.arrDatoGeneralNo);
				finalQueryGlobal=Funciones.GetWhereGlobalConstants(this.parametroGeneralUsuario,this.moduloActual,true,false,arrColumnasGlobales,TipoInteresTarjetaConstantesFunciones.TABLENAME);

				finalQueryGlobal=Funciones.GetFinalQueryAppend(finalQueryGlobal, sFinalQuery);
				finalQueryGlobal=Funciones.GetFinalQueryAppend(finalQueryGlobal, "");

				finalQueryGlobal+=TipoInteresTarjetaConstantesFunciones.SFINALQUERY;

				this.cargarCombosTipoInteresTarjetasForeignKeyLista(finalQueryGlobal);
			}

		} catch(Exception e) {
			throw e;
		}
	}

	public void cargarCombosForeignKeyTipoPagoTarjetaListas(Boolean cargarCombosDependencia,String sFinalQuery)throws Exception {
		try	{
			ArrayList<String> arrColumnasGlobales=new ArrayList<String>();

			String  finalQueryGlobal="";

			Modulo  moduloActualAux=new Modulo();

			if((this.tipopagotarjetasForeignKey==null||this.tipopagotarjetasForeignKey.size()<=0)) {
				this.arrDatoGeneral= new  ArrayList<DatoGeneral>();
				this.arrDatoGeneralNo= new  ArrayList<String>();

				arrColumnasGlobales=TipoPagoTarjetaConstantesFunciones.getArrayColumnasGlobalesTipoPagoTarjeta(this.arrDatoGeneral,this.arrDatoGeneralNo);
				finalQueryGlobal=Funciones.GetWhereGlobalConstants(this.parametroGeneralUsuario,this.moduloActual,true,false,arrColumnasGlobales,TipoPagoTarjetaConstantesFunciones.TABLENAME);

				finalQueryGlobal=Funciones.GetFinalQueryAppend(finalQueryGlobal, sFinalQuery);
				finalQueryGlobal=Funciones.GetFinalQueryAppend(finalQueryGlobal, "");

				finalQueryGlobal+=TipoPagoTarjetaConstantesFunciones.SFINALQUERY;

				this.cargarCombosTipoPagoTarjetasForeignKeyLista(finalQueryGlobal);
			}

		} catch(Exception e) {
			throw e;
		}
	}

	public void cargarCombosForeignKeyConexionListas(Boolean cargarCombosDependencia,String sFinalQuery)throws Exception {
		try	{
			ArrayList<String> arrColumnasGlobales=new ArrayList<String>();

			String  finalQueryGlobal="";

			Modulo  moduloActualAux=new Modulo();

			if((this.conexionsForeignKey==null||this.conexionsForeignKey.size()<=0)) {
				this.arrDatoGeneral= new  ArrayList<DatoGeneral>();
				this.arrDatoGeneralNo= new  ArrayList<String>();

				arrColumnasGlobales=ConexionConstantesFunciones.getArrayColumnasGlobalesConexion(this.arrDatoGeneral,this.arrDatoGeneralNo);
				finalQueryGlobal=Funciones.GetWhereGlobalConstants(this.parametroGeneralUsuario,this.moduloActual,true,false,arrColumnasGlobales,ConexionConstantesFunciones.TABLENAME);

				finalQueryGlobal=Funciones.GetFinalQueryAppend(finalQueryGlobal, sFinalQuery);
				finalQueryGlobal=Funciones.GetFinalQueryAppend(finalQueryGlobal, "");

				finalQueryGlobal+=ConexionConstantesFunciones.SFINALQUERY;

				this.cargarCombosConexionsForeignKeyLista(finalQueryGlobal);
			}

		} catch(Exception e) {
			throw e;
		}
	}

	public void cargarCombosForeignKeyMesListas(Boolean cargarCombosDependencia,String sFinalQuery)throws Exception {
		try	{
			ArrayList<String> arrColumnasGlobales=new ArrayList<String>();

			String  finalQueryGlobal="";

			Modulo  moduloActualAux=new Modulo();

			if((this.messForeignKey==null||this.messForeignKey.size()<=0)) {
				this.arrDatoGeneral= new  ArrayList<DatoGeneral>();
				this.arrDatoGeneralNo= new  ArrayList<String>();

				arrColumnasGlobales=MesConstantesFunciones.getArrayColumnasGlobalesMes(this.arrDatoGeneral,this.arrDatoGeneralNo);
				finalQueryGlobal=Funciones.GetWhereGlobalConstants(this.parametroGeneralUsuario,this.moduloActual,true,false,arrColumnasGlobales,MesConstantesFunciones.TABLENAME);

				finalQueryGlobal=Funciones.GetFinalQueryAppend(finalQueryGlobal, sFinalQuery);
				finalQueryGlobal=Funciones.GetFinalQueryAppend(finalQueryGlobal, "");

				finalQueryGlobal+=MesConstantesFunciones.SFINALQUERY;

				this.cargarCombosMessForeignKeyLista(finalQueryGlobal);
			}

		} catch(Exception e) {
			throw e;
		}
	}

	public void cargarCombosForeignKeyAnioListas(Boolean cargarCombosDependencia,String sFinalQuery)throws Exception {
		try	{
			ArrayList<String> arrColumnasGlobales=new ArrayList<String>();

			String  finalQueryGlobal="";

			Modulo  moduloActualAux=new Modulo();

			if((this.aniosForeignKey==null||this.aniosForeignKey.size()<=0)) {
				this.arrDatoGeneral= new  ArrayList<DatoGeneral>();
				this.arrDatoGeneralNo= new  ArrayList<String>();

				arrColumnasGlobales=AnioConstantesFunciones.getArrayColumnasGlobalesAnio(this.arrDatoGeneral,this.arrDatoGeneralNo);
				finalQueryGlobal=Funciones.GetWhereGlobalConstants(this.parametroGeneralUsuario,this.moduloActual,true,false,arrColumnasGlobales,AnioConstantesFunciones.TABLENAME);

				finalQueryGlobal=Funciones.GetFinalQueryAppend(finalQueryGlobal, sFinalQuery);
				finalQueryGlobal=Funciones.GetFinalQueryAppend(finalQueryGlobal, "");

				finalQueryGlobal+=AnioConstantesFunciones.SFINALQUERY;

				this.cargarCombosAniosForeignKeyLista(finalQueryGlobal);
			}

		} catch(Exception e) {
			throw e;
		}
	}

	public void cargarCombosForeignKeyCuentaContableListas(Boolean cargarCombosDependencia,String sFinalQuery)throws Exception {
		try	{
			ArrayList<String> arrColumnasGlobales=new ArrayList<String>();

			String  finalQueryGlobal="";

			Modulo  moduloActualAux=new Modulo();

			if((this.cuentacontablesForeignKey==null||this.cuentacontablesForeignKey.size()<=0)) {
				this.arrDatoGeneral= new  ArrayList<DatoGeneral>();
				this.arrDatoGeneralNo= new  ArrayList<String>();

				arrColumnasGlobales=CuentaContableConstantesFunciones.getArrayColumnasGlobalesCuentaContable(this.arrDatoGeneral,this.arrDatoGeneralNo);
				finalQueryGlobal=Funciones.GetWhereGlobalConstants(this.parametroGeneralUsuario,this.moduloActual,true,false,arrColumnasGlobales,CuentaContableConstantesFunciones.TABLENAME);

				finalQueryGlobal=Funciones.GetFinalQueryAppend(finalQueryGlobal, sFinalQuery);
				finalQueryGlobal=Funciones.GetFinalQueryAppend(finalQueryGlobal, "");

				finalQueryGlobal+=CuentaContableConstantesFunciones.SFINALQUERY;

				this.cargarCombosCuentaContablesForeignKeyLista(finalQueryGlobal);
			}

		} catch(Exception e) {
			throw e;
		}
	}

	public void cargarCombosForeignKeyAsientoContableListas(Boolean cargarCombosDependencia,String sFinalQuery)throws Exception {
		try	{
			ArrayList<String> arrColumnasGlobales=new ArrayList<String>();

			String  finalQueryGlobal="";

			Modulo  moduloActualAux=new Modulo();

			if((this.asientocontablesForeignKey==null||this.asientocontablesForeignKey.size()<=0)) {
				this.arrDatoGeneral= new  ArrayList<DatoGeneral>();
				this.arrDatoGeneralNo= new  ArrayList<String>();

				arrColumnasGlobales=AsientoContableConstantesFunciones.getArrayColumnasGlobalesAsientoContable(this.arrDatoGeneral,this.arrDatoGeneralNo);
				finalQueryGlobal=Funciones.GetWhereGlobalConstants(this.parametroGeneralUsuario,this.moduloActual,true,false,arrColumnasGlobales,AsientoContableConstantesFunciones.TABLENAME);

				finalQueryGlobal=Funciones.GetFinalQueryAppend(finalQueryGlobal, sFinalQuery);
				finalQueryGlobal=Funciones.GetFinalQueryAppend(finalQueryGlobal, "");

				finalQueryGlobal+=AsientoContableConstantesFunciones.SFINALQUERY;

				this.cargarCombosAsientoContablesForeignKeyLista(finalQueryGlobal);
			}

		} catch(Exception e) {
			throw e;
		}
	}
	
	public void cargarCombosLoteForeignKeyFormaPagoPuntoVentaListas(Boolean cargarCombosDependencia)throws Exception {
		try	{
			
			ArrayList<String> arrColumnasGlobales=new ArrayList<String>();
			String  finalQueryGlobal="";
			
			Modulo  moduloActualAux=new Modulo();
			
			
			FormaPagoPuntoVentaParameterReturnGeneral formapagopuntoventaReturnGeneral=new FormaPagoPuntoVentaParameterReturnGeneral();
						
			


				String finalQueryGlobalEmpresa="";

				if(((this.empresasForeignKey==null||this.empresasForeignKey.size()<=0) && this.formapagopuntoventaConstantesFunciones.cargarid_empresaFormaPagoPuntoVenta)
					 || (this.esRecargarFks && this.formapagopuntoventaConstantesFunciones.cargarid_empresaFormaPagoPuntoVenta)) {

					if(!this.formapagopuntoventaSessionBean.getisBusquedaDesdeForeignKeySesionEmpresa()) {

						this.arrDatoGeneral= new  ArrayList<DatoGeneral>();
						this.arrDatoGeneralNo= new  ArrayList<String>();


						arrColumnasGlobales=EmpresaConstantesFunciones.getArrayColumnasGlobalesEmpresa(this.arrDatoGeneral,this.arrDatoGeneralNo);
						finalQueryGlobalEmpresa=Funciones.GetWhereGlobalConstants(this.parametroGeneralUsuario,this.moduloActual,true,false,arrColumnasGlobales,EmpresaConstantesFunciones.TABLENAME);

						finalQueryGlobalEmpresa=Funciones.GetFinalQueryAppend(finalQueryGlobalEmpresa, "");
						finalQueryGlobalEmpresa+=EmpresaConstantesFunciones.SFINALQUERY;

						//this.cargarCombosEmpresasForeignKeyLista(finalQueryGlobal);
					} else {
						finalQueryGlobalEmpresa=" WHERE " + ConstantesSql.ID + "="+formapagopuntoventaSessionBean.getlidEmpresaActual();
					}
				} else {
					finalQueryGlobalEmpresa="NONE";
				}


				String finalQueryGlobalSucursal="";

				if(((this.sucursalsForeignKey==null||this.sucursalsForeignKey.size()<=0) && this.formapagopuntoventaConstantesFunciones.cargarid_sucursalFormaPagoPuntoVenta)
					 || (this.esRecargarFks && this.formapagopuntoventaConstantesFunciones.cargarid_sucursalFormaPagoPuntoVenta)) {

					if(!this.formapagopuntoventaSessionBean.getisBusquedaDesdeForeignKeySesionSucursal()) {

						this.arrDatoGeneral= new  ArrayList<DatoGeneral>();
						this.arrDatoGeneralNo= new  ArrayList<String>();


						arrColumnasGlobales=SucursalConstantesFunciones.getArrayColumnasGlobalesSucursal(this.arrDatoGeneral,this.arrDatoGeneralNo);
						finalQueryGlobalSucursal=Funciones.GetWhereGlobalConstants(this.parametroGeneralUsuario,this.moduloActual,true,false,arrColumnasGlobales,SucursalConstantesFunciones.TABLENAME);

						finalQueryGlobalSucursal=Funciones.GetFinalQueryAppend(finalQueryGlobalSucursal, "");
						finalQueryGlobalSucursal+=SucursalConstantesFunciones.SFINALQUERY;

						//this.cargarCombosSucursalsForeignKeyLista(finalQueryGlobal);
					} else {
						finalQueryGlobalSucursal=" WHERE " + ConstantesSql.ID + "="+formapagopuntoventaSessionBean.getlidSucursalActual();
					}
				} else {
					finalQueryGlobalSucursal="NONE";
				}


				String finalQueryGlobalEjercicio="";

				if(((this.ejerciciosForeignKey==null||this.ejerciciosForeignKey.size()<=0) && this.formapagopuntoventaConstantesFunciones.cargarid_ejercicioFormaPagoPuntoVenta)
					 || (this.esRecargarFks && this.formapagopuntoventaConstantesFunciones.cargarid_ejercicioFormaPagoPuntoVenta)) {

					if(!this.formapagopuntoventaSessionBean.getisBusquedaDesdeForeignKeySesionEjercicio()) {

						this.arrDatoGeneral= new  ArrayList<DatoGeneral>();
						this.arrDatoGeneralNo= new  ArrayList<String>();


						arrColumnasGlobales=EjercicioConstantesFunciones.getArrayColumnasGlobalesEjercicio(this.arrDatoGeneral,this.arrDatoGeneralNo);
						finalQueryGlobalEjercicio=Funciones.GetWhereGlobalConstants(this.parametroGeneralUsuario,this.moduloActual,true,false,arrColumnasGlobales,EjercicioConstantesFunciones.TABLENAME);

						finalQueryGlobalEjercicio=Funciones.GetFinalQueryAppend(finalQueryGlobalEjercicio, "");
						finalQueryGlobalEjercicio+=EjercicioConstantesFunciones.SFINALQUERY;

						//this.cargarCombosEjerciciosForeignKeyLista(finalQueryGlobal);
					} else {
						finalQueryGlobalEjercicio=" WHERE " + ConstantesSql.ID + "="+formapagopuntoventaSessionBean.getlidEjercicioActual();
					}
				} else {
					finalQueryGlobalEjercicio="NONE";
				}


				String finalQueryGlobalPeriodo="";

				if(((this.periodosForeignKey==null||this.periodosForeignKey.size()<=0) && this.formapagopuntoventaConstantesFunciones.cargarid_periodoFormaPagoPuntoVenta)
					 || (this.esRecargarFks && this.formapagopuntoventaConstantesFunciones.cargarid_periodoFormaPagoPuntoVenta)) {

					if(!this.formapagopuntoventaSessionBean.getisBusquedaDesdeForeignKeySesionPeriodo()) {

						this.arrDatoGeneral= new  ArrayList<DatoGeneral>();
						this.arrDatoGeneralNo= new  ArrayList<String>();


						arrColumnasGlobales=PeriodoConstantesFunciones.getArrayColumnasGlobalesPeriodo(this.arrDatoGeneral,this.arrDatoGeneralNo);
						finalQueryGlobalPeriodo=Funciones.GetWhereGlobalConstants(this.parametroGeneralUsuario,this.moduloActual,true,false,arrColumnasGlobales,PeriodoConstantesFunciones.TABLENAME);

						finalQueryGlobalPeriodo=Funciones.GetFinalQueryAppend(finalQueryGlobalPeriodo, "");
						finalQueryGlobalPeriodo+=PeriodoConstantesFunciones.SFINALQUERY;

						//this.cargarCombosPeriodosForeignKeyLista(finalQueryGlobal);
					} else {
						finalQueryGlobalPeriodo=" WHERE " + ConstantesSql.ID + "="+formapagopuntoventaSessionBean.getlidPeriodoActual();
					}
				} else {
					finalQueryGlobalPeriodo="NONE";
				}


				String finalQueryGlobalFacturaPuntoVenta="";

				if(((this.facturapuntoventasForeignKey==null||this.facturapuntoventasForeignKey.size()<=0) && this.formapagopuntoventaConstantesFunciones.cargarid_factura_punto_ventaFormaPagoPuntoVenta)
					 || (this.esRecargarFks && this.formapagopuntoventaConstantesFunciones.cargarid_factura_punto_ventaFormaPagoPuntoVenta)) {

					if(!this.formapagopuntoventaSessionBean.getisBusquedaDesdeForeignKeySesionFacturaPuntoVenta()) {

						this.arrDatoGeneral= new  ArrayList<DatoGeneral>();
						this.arrDatoGeneralNo= new  ArrayList<String>();


						arrColumnasGlobales=FacturaPuntoVentaConstantesFunciones.getArrayColumnasGlobalesFacturaPuntoVenta(this.arrDatoGeneral,this.arrDatoGeneralNo);
						finalQueryGlobalFacturaPuntoVenta=Funciones.GetWhereGlobalConstants(this.parametroGeneralUsuario,this.moduloActual,true,false,arrColumnasGlobales,FacturaPuntoVentaConstantesFunciones.TABLENAME);

						finalQueryGlobalFacturaPuntoVenta=Funciones.GetFinalQueryAppend(finalQueryGlobalFacturaPuntoVenta, "");
						finalQueryGlobalFacturaPuntoVenta+=FacturaPuntoVentaConstantesFunciones.SFINALQUERY;

						//this.cargarCombosFacturaPuntoVentasForeignKeyLista(finalQueryGlobal);
					} else {
						finalQueryGlobalFacturaPuntoVenta=" WHERE " + ConstantesSql.ID + "="+formapagopuntoventaSessionBean.getlidFacturaPuntoVentaActual();
					}
				} else {
					finalQueryGlobalFacturaPuntoVenta="NONE";
				}


				String finalQueryGlobalTipoFormaPago="";

				if(((this.tipoformapagosForeignKey==null||this.tipoformapagosForeignKey.size()<=0) && this.formapagopuntoventaConstantesFunciones.cargarid_tipo_forma_pagoFormaPagoPuntoVenta)
					 || (this.esRecargarFks && this.formapagopuntoventaConstantesFunciones.cargarid_tipo_forma_pagoFormaPagoPuntoVenta)) {

					if(!this.formapagopuntoventaSessionBean.getisBusquedaDesdeForeignKeySesionTipoFormaPago()) {

						this.arrDatoGeneral= new  ArrayList<DatoGeneral>();
						this.arrDatoGeneralNo= new  ArrayList<String>();


						arrColumnasGlobales=TipoFormaPagoConstantesFunciones.getArrayColumnasGlobalesTipoFormaPago(this.arrDatoGeneral,this.arrDatoGeneralNo);
						finalQueryGlobalTipoFormaPago=Funciones.GetWhereGlobalConstants(this.parametroGeneralUsuario,this.moduloActual,true,false,arrColumnasGlobales,TipoFormaPagoConstantesFunciones.TABLENAME);

						finalQueryGlobalTipoFormaPago=Funciones.GetFinalQueryAppend(finalQueryGlobalTipoFormaPago, "");
						finalQueryGlobalTipoFormaPago+=TipoFormaPagoConstantesFunciones.SFINALQUERY;

						//this.cargarCombosTipoFormaPagosForeignKeyLista(finalQueryGlobal);
					} else {
						finalQueryGlobalTipoFormaPago=" WHERE " + ConstantesSql.ID + "="+formapagopuntoventaSessionBean.getlidTipoFormaPagoActual();
					}
				} else {
					finalQueryGlobalTipoFormaPago="NONE";
				}


				String finalQueryGlobalBanco="";

				if(((this.bancosForeignKey==null||this.bancosForeignKey.size()<=0) && this.formapagopuntoventaConstantesFunciones.cargarid_bancoFormaPagoPuntoVenta)
					 || (this.esRecargarFks && this.formapagopuntoventaConstantesFunciones.cargarid_bancoFormaPagoPuntoVenta)) {

					if(!this.formapagopuntoventaSessionBean.getisBusquedaDesdeForeignKeySesionBanco()) {

						this.arrDatoGeneral= new  ArrayList<DatoGeneral>();
						this.arrDatoGeneralNo= new  ArrayList<String>();


						arrColumnasGlobales=BancoConstantesFunciones.getArrayColumnasGlobalesBanco(this.arrDatoGeneral,this.arrDatoGeneralNo);
						finalQueryGlobalBanco=Funciones.GetWhereGlobalConstants(this.parametroGeneralUsuario,this.moduloActual,true,false,arrColumnasGlobales,BancoConstantesFunciones.TABLENAME);

						finalQueryGlobalBanco=Funciones.GetFinalQueryAppend(finalQueryGlobalBanco, "");
						finalQueryGlobalBanco+=BancoConstantesFunciones.SFINALQUERY;

						//this.cargarCombosBancosForeignKeyLista(finalQueryGlobal);
					} else {
						finalQueryGlobalBanco=" WHERE " + ConstantesSql.ID + "="+formapagopuntoventaSessionBean.getlidBancoActual();
					}
				} else {
					finalQueryGlobalBanco="NONE";
				}


				String finalQueryGlobalCuentaBancoPunVen="";

				if(((this.cuentabancopunvensForeignKey==null||this.cuentabancopunvensForeignKey.size()<=0) && this.formapagopuntoventaConstantesFunciones.cargarid_cuenta_banco_pun_venFormaPagoPuntoVenta)
					 || (this.esRecargarFks && this.formapagopuntoventaConstantesFunciones.cargarid_cuenta_banco_pun_venFormaPagoPuntoVenta)) {

					if(!this.formapagopuntoventaSessionBean.getisBusquedaDesdeForeignKeySesionCuentaBancoPunVen()) {

						this.arrDatoGeneral= new  ArrayList<DatoGeneral>();
						this.arrDatoGeneralNo= new  ArrayList<String>();


						arrColumnasGlobales=CuentaBancoPunVenConstantesFunciones.getArrayColumnasGlobalesCuentaBancoPunVen(this.arrDatoGeneral,this.arrDatoGeneralNo);
						finalQueryGlobalCuentaBancoPunVen=Funciones.GetWhereGlobalConstants(this.parametroGeneralUsuario,this.moduloActual,true,false,arrColumnasGlobales,CuentaBancoPunVenConstantesFunciones.TABLENAME);

						finalQueryGlobalCuentaBancoPunVen=Funciones.GetFinalQueryAppend(finalQueryGlobalCuentaBancoPunVen, "");
						finalQueryGlobalCuentaBancoPunVen+=CuentaBancoPunVenConstantesFunciones.SFINALQUERY;

						//this.cargarCombosCuentaBancoPunVensForeignKeyLista(finalQueryGlobal);
					} else {
						finalQueryGlobalCuentaBancoPunVen=" WHERE " + ConstantesSql.ID + "="+formapagopuntoventaSessionBean.getlidCuentaBancoPunVenActual();
					}
				} else {
					finalQueryGlobalCuentaBancoPunVen="NONE";
				}


				String finalQueryGlobalTipoRiesgoCheque="";

				if(((this.tiporiesgochequesForeignKey==null||this.tiporiesgochequesForeignKey.size()<=0) && this.formapagopuntoventaConstantesFunciones.cargarid_tipo_riesgo_chequeFormaPagoPuntoVenta)
					 || (this.esRecargarFks && this.formapagopuntoventaConstantesFunciones.cargarid_tipo_riesgo_chequeFormaPagoPuntoVenta)) {

					if(!this.formapagopuntoventaSessionBean.getisBusquedaDesdeForeignKeySesionTipoRiesgoCheque()) {

						this.arrDatoGeneral= new  ArrayList<DatoGeneral>();
						this.arrDatoGeneralNo= new  ArrayList<String>();


						arrColumnasGlobales=TipoRiesgoChequeConstantesFunciones.getArrayColumnasGlobalesTipoRiesgoCheque(this.arrDatoGeneral,this.arrDatoGeneralNo);
						finalQueryGlobalTipoRiesgoCheque=Funciones.GetWhereGlobalConstants(this.parametroGeneralUsuario,this.moduloActual,true,false,arrColumnasGlobales,TipoRiesgoChequeConstantesFunciones.TABLENAME);

						finalQueryGlobalTipoRiesgoCheque=Funciones.GetFinalQueryAppend(finalQueryGlobalTipoRiesgoCheque, "");
						finalQueryGlobalTipoRiesgoCheque+=TipoRiesgoChequeConstantesFunciones.SFINALQUERY;

						//this.cargarCombosTipoRiesgoChequesForeignKeyLista(finalQueryGlobal);
					} else {
						finalQueryGlobalTipoRiesgoCheque=" WHERE " + ConstantesSql.ID + "="+formapagopuntoventaSessionBean.getlidTipoRiesgoChequeActual();
					}
				} else {
					finalQueryGlobalTipoRiesgoCheque="NONE";
				}


				String finalQueryGlobalBancoTarjeta="";

				if(((this.bancotarjetasForeignKey==null||this.bancotarjetasForeignKey.size()<=0) && this.formapagopuntoventaConstantesFunciones.cargarid_banco_tarjetaFormaPagoPuntoVenta)
					 || (this.esRecargarFks && this.formapagopuntoventaConstantesFunciones.cargarid_banco_tarjetaFormaPagoPuntoVenta)) {

					if(!this.formapagopuntoventaSessionBean.getisBusquedaDesdeForeignKeySesionBancoTarjeta()) {

						this.arrDatoGeneral= new  ArrayList<DatoGeneral>();
						this.arrDatoGeneralNo= new  ArrayList<String>();


						arrColumnasGlobales=BancoConstantesFunciones.getArrayColumnasGlobalesBanco(this.arrDatoGeneral,this.arrDatoGeneralNo);
						finalQueryGlobalBancoTarjeta=Funciones.GetWhereGlobalConstants(this.parametroGeneralUsuario,this.moduloActual,true,false,arrColumnasGlobales,BancoConstantesFunciones.TABLENAME);

						finalQueryGlobalBancoTarjeta=Funciones.GetFinalQueryAppend(finalQueryGlobalBancoTarjeta, "");
						finalQueryGlobalBancoTarjeta+=BancoConstantesFunciones.SFINALQUERY;

						//this.cargarCombosBancoTarjetasForeignKeyLista(finalQueryGlobal);
					} else {
						finalQueryGlobalBancoTarjeta=" WHERE " + ConstantesSql.ID + "="+formapagopuntoventaSessionBean.getlidBancoTarjetaActual();
					}
				} else {
					finalQueryGlobalBancoTarjeta="NONE";
				}


				String finalQueryGlobalTarjetaCredito="";

				if(((this.tarjetacreditosForeignKey==null||this.tarjetacreditosForeignKey.size()<=0) && this.formapagopuntoventaConstantesFunciones.cargarid_tarjeta_creditoFormaPagoPuntoVenta)
					 || (this.esRecargarFks && this.formapagopuntoventaConstantesFunciones.cargarid_tarjeta_creditoFormaPagoPuntoVenta)) {

					if(!this.formapagopuntoventaSessionBean.getisBusquedaDesdeForeignKeySesionTarjetaCredito()) {

						this.arrDatoGeneral= new  ArrayList<DatoGeneral>();
						this.arrDatoGeneralNo= new  ArrayList<String>();


						arrColumnasGlobales=TarjetaCreditoConstantesFunciones.getArrayColumnasGlobalesTarjetaCredito(this.arrDatoGeneral,this.arrDatoGeneralNo);
						finalQueryGlobalTarjetaCredito=Funciones.GetWhereGlobalConstants(this.parametroGeneralUsuario,this.moduloActual,true,false,arrColumnasGlobales,TarjetaCreditoConstantesFunciones.TABLENAME);

						finalQueryGlobalTarjetaCredito=Funciones.GetFinalQueryAppend(finalQueryGlobalTarjetaCredito, "");
						finalQueryGlobalTarjetaCredito+=TarjetaCreditoConstantesFunciones.SFINALQUERY;

						//this.cargarCombosTarjetaCreditosForeignKeyLista(finalQueryGlobal);
					} else {
						finalQueryGlobalTarjetaCredito=" WHERE " + ConstantesSql.ID + "="+formapagopuntoventaSessionBean.getlidTarjetaCreditoActual();
					}
				} else {
					finalQueryGlobalTarjetaCredito="NONE";
				}


				String finalQueryGlobalTipoInteresTarjeta="";

				if(((this.tipointerestarjetasForeignKey==null||this.tipointerestarjetasForeignKey.size()<=0) && this.formapagopuntoventaConstantesFunciones.cargarid_tipo_interes_tarjetaFormaPagoPuntoVenta)
					 || (this.esRecargarFks && this.formapagopuntoventaConstantesFunciones.cargarid_tipo_interes_tarjetaFormaPagoPuntoVenta)) {

					if(!this.formapagopuntoventaSessionBean.getisBusquedaDesdeForeignKeySesionTipoInteresTarjeta()) {

						this.arrDatoGeneral= new  ArrayList<DatoGeneral>();
						this.arrDatoGeneralNo= new  ArrayList<String>();


						arrColumnasGlobales=TipoInteresTarjetaConstantesFunciones.getArrayColumnasGlobalesTipoInteresTarjeta(this.arrDatoGeneral,this.arrDatoGeneralNo);
						finalQueryGlobalTipoInteresTarjeta=Funciones.GetWhereGlobalConstants(this.parametroGeneralUsuario,this.moduloActual,true,false,arrColumnasGlobales,TipoInteresTarjetaConstantesFunciones.TABLENAME);

						finalQueryGlobalTipoInteresTarjeta=Funciones.GetFinalQueryAppend(finalQueryGlobalTipoInteresTarjeta, "");
						finalQueryGlobalTipoInteresTarjeta+=TipoInteresTarjetaConstantesFunciones.SFINALQUERY;

						//this.cargarCombosTipoInteresTarjetasForeignKeyLista(finalQueryGlobal);
					} else {
						finalQueryGlobalTipoInteresTarjeta=" WHERE " + ConstantesSql.ID + "="+formapagopuntoventaSessionBean.getlidTipoInteresTarjetaActual();
					}
				} else {
					finalQueryGlobalTipoInteresTarjeta="NONE";
				}


				String finalQueryGlobalTipoPagoTarjeta="";

				if(((this.tipopagotarjetasForeignKey==null||this.tipopagotarjetasForeignKey.size()<=0) && this.formapagopuntoventaConstantesFunciones.cargarid_tipo_pago_tarjetaFormaPagoPuntoVenta)
					 || (this.esRecargarFks && this.formapagopuntoventaConstantesFunciones.cargarid_tipo_pago_tarjetaFormaPagoPuntoVenta)) {

					if(!this.formapagopuntoventaSessionBean.getisBusquedaDesdeForeignKeySesionTipoPagoTarjeta()) {

						this.arrDatoGeneral= new  ArrayList<DatoGeneral>();
						this.arrDatoGeneralNo= new  ArrayList<String>();


						arrColumnasGlobales=TipoPagoTarjetaConstantesFunciones.getArrayColumnasGlobalesTipoPagoTarjeta(this.arrDatoGeneral,this.arrDatoGeneralNo);
						finalQueryGlobalTipoPagoTarjeta=Funciones.GetWhereGlobalConstants(this.parametroGeneralUsuario,this.moduloActual,true,false,arrColumnasGlobales,TipoPagoTarjetaConstantesFunciones.TABLENAME);

						finalQueryGlobalTipoPagoTarjeta=Funciones.GetFinalQueryAppend(finalQueryGlobalTipoPagoTarjeta, "");
						finalQueryGlobalTipoPagoTarjeta+=TipoPagoTarjetaConstantesFunciones.SFINALQUERY;

						//this.cargarCombosTipoPagoTarjetasForeignKeyLista(finalQueryGlobal);
					} else {
						finalQueryGlobalTipoPagoTarjeta=" WHERE " + ConstantesSql.ID + "="+formapagopuntoventaSessionBean.getlidTipoPagoTarjetaActual();
					}
				} else {
					finalQueryGlobalTipoPagoTarjeta="NONE";
				}


				String finalQueryGlobalConexion="";

				if(((this.conexionsForeignKey==null||this.conexionsForeignKey.size()<=0) && this.formapagopuntoventaConstantesFunciones.cargarid_conexionFormaPagoPuntoVenta)
					 || (this.esRecargarFks && this.formapagopuntoventaConstantesFunciones.cargarid_conexionFormaPagoPuntoVenta)) {

					if(!this.formapagopuntoventaSessionBean.getisBusquedaDesdeForeignKeySesionConexion()) {

						this.arrDatoGeneral= new  ArrayList<DatoGeneral>();
						this.arrDatoGeneralNo= new  ArrayList<String>();


						arrColumnasGlobales=ConexionConstantesFunciones.getArrayColumnasGlobalesConexion(this.arrDatoGeneral,this.arrDatoGeneralNo);
						finalQueryGlobalConexion=Funciones.GetWhereGlobalConstants(this.parametroGeneralUsuario,this.moduloActual,true,false,arrColumnasGlobales,ConexionConstantesFunciones.TABLENAME);

						finalQueryGlobalConexion=Funciones.GetFinalQueryAppend(finalQueryGlobalConexion, "");
						finalQueryGlobalConexion+=ConexionConstantesFunciones.SFINALQUERY;

						//this.cargarCombosConexionsForeignKeyLista(finalQueryGlobal);
					} else {
						finalQueryGlobalConexion=" WHERE " + ConstantesSql.ID + "="+formapagopuntoventaSessionBean.getlidConexionActual();
					}
				} else {
					finalQueryGlobalConexion="NONE";
				}


				String finalQueryGlobalMes="";

				if(((this.messForeignKey==null||this.messForeignKey.size()<=0) && this.formapagopuntoventaConstantesFunciones.cargarid_mesFormaPagoPuntoVenta)
					 || (this.esRecargarFks && this.formapagopuntoventaConstantesFunciones.cargarid_mesFormaPagoPuntoVenta)) {

					if(!this.formapagopuntoventaSessionBean.getisBusquedaDesdeForeignKeySesionMes()) {

						this.arrDatoGeneral= new  ArrayList<DatoGeneral>();
						this.arrDatoGeneralNo= new  ArrayList<String>();


						arrColumnasGlobales=MesConstantesFunciones.getArrayColumnasGlobalesMes(this.arrDatoGeneral,this.arrDatoGeneralNo);
						finalQueryGlobalMes=Funciones.GetWhereGlobalConstants(this.parametroGeneralUsuario,this.moduloActual,true,false,arrColumnasGlobales,MesConstantesFunciones.TABLENAME);

						finalQueryGlobalMes=Funciones.GetFinalQueryAppend(finalQueryGlobalMes, "");
						finalQueryGlobalMes+=MesConstantesFunciones.SFINALQUERY;

						//this.cargarCombosMessForeignKeyLista(finalQueryGlobal);
					} else {
						finalQueryGlobalMes=" WHERE " + ConstantesSql.ID + "="+formapagopuntoventaSessionBean.getlidMesActual();
					}
				} else {
					finalQueryGlobalMes="NONE";
				}


				String finalQueryGlobalAnio="";

				if(((this.aniosForeignKey==null||this.aniosForeignKey.size()<=0) && this.formapagopuntoventaConstantesFunciones.cargarid_anioFormaPagoPuntoVenta)
					 || (this.esRecargarFks && this.formapagopuntoventaConstantesFunciones.cargarid_anioFormaPagoPuntoVenta)) {

					if(!this.formapagopuntoventaSessionBean.getisBusquedaDesdeForeignKeySesionAnio()) {

						this.arrDatoGeneral= new  ArrayList<DatoGeneral>();
						this.arrDatoGeneralNo= new  ArrayList<String>();


						arrColumnasGlobales=AnioConstantesFunciones.getArrayColumnasGlobalesAnio(this.arrDatoGeneral,this.arrDatoGeneralNo);
						finalQueryGlobalAnio=Funciones.GetWhereGlobalConstants(this.parametroGeneralUsuario,this.moduloActual,true,false,arrColumnasGlobales,AnioConstantesFunciones.TABLENAME);

						finalQueryGlobalAnio=Funciones.GetFinalQueryAppend(finalQueryGlobalAnio, "");
						finalQueryGlobalAnio+=AnioConstantesFunciones.SFINALQUERY;

						//this.cargarCombosAniosForeignKeyLista(finalQueryGlobal);
					} else {
						finalQueryGlobalAnio=" WHERE " + ConstantesSql.ID + "="+formapagopuntoventaSessionBean.getlidAnioActual();
					}
				} else {
					finalQueryGlobalAnio="NONE";
				}


				String finalQueryGlobalCuentaContable="";

				if(((this.cuentacontablesForeignKey==null||this.cuentacontablesForeignKey.size()<=0) && this.formapagopuntoventaConstantesFunciones.cargarid_cuenta_contableFormaPagoPuntoVenta)
					 || (this.esRecargarFks && this.formapagopuntoventaConstantesFunciones.cargarid_cuenta_contableFormaPagoPuntoVenta)) {

					if(!this.formapagopuntoventaSessionBean.getisBusquedaDesdeForeignKeySesionCuentaContable()) {

						this.arrDatoGeneral= new  ArrayList<DatoGeneral>();
						this.arrDatoGeneralNo= new  ArrayList<String>();

						this.arrDatoGeneralNo.add("id_modulo");

						arrColumnasGlobales=CuentaContableConstantesFunciones.getArrayColumnasGlobalesCuentaContable(this.arrDatoGeneral,this.arrDatoGeneralNo);
						finalQueryGlobalCuentaContable=Funciones.GetWhereGlobalConstants(this.parametroGeneralUsuario,this.moduloActual,true,false,arrColumnasGlobales,CuentaContableConstantesFunciones.TABLENAME);

						finalQueryGlobalCuentaContable=Funciones.GetFinalQueryAppend(finalQueryGlobalCuentaContable, "");
						finalQueryGlobalCuentaContable+=CuentaContableConstantesFunciones.SFINALQUERY;

						//this.cargarCombosCuentaContablesForeignKeyLista(finalQueryGlobal);
					} else {
						finalQueryGlobalCuentaContable=" WHERE " + ConstantesSql.ID + "="+formapagopuntoventaSessionBean.getlidCuentaContableActual();
					}
				} else {
					finalQueryGlobalCuentaContable="NONE";
				}


				String finalQueryGlobalAsientoContable="";

				if(((this.asientocontablesForeignKey==null||this.asientocontablesForeignKey.size()<=0) && this.formapagopuntoventaConstantesFunciones.cargarid_asiento_contableFormaPagoPuntoVenta)
					 || (this.esRecargarFks && this.formapagopuntoventaConstantesFunciones.cargarid_asiento_contableFormaPagoPuntoVenta)) {

					if(!this.formapagopuntoventaSessionBean.getisBusquedaDesdeForeignKeySesionAsientoContable()) {

						this.arrDatoGeneral= new  ArrayList<DatoGeneral>();
						this.arrDatoGeneralNo= new  ArrayList<String>();


						arrColumnasGlobales=AsientoContableConstantesFunciones.getArrayColumnasGlobalesAsientoContable(this.arrDatoGeneral,this.arrDatoGeneralNo);
						finalQueryGlobalAsientoContable=Funciones.GetWhereGlobalConstants(this.parametroGeneralUsuario,this.moduloActual,true,false,arrColumnasGlobales,AsientoContableConstantesFunciones.TABLENAME);

						finalQueryGlobalAsientoContable=Funciones.GetFinalQueryAppend(finalQueryGlobalAsientoContable, "");
						finalQueryGlobalAsientoContable+=AsientoContableConstantesFunciones.SFINALQUERY;

						//this.cargarCombosAsientoContablesForeignKeyLista(finalQueryGlobal);
					} else {
						finalQueryGlobalAsientoContable=" WHERE " + ConstantesSql.ID + "="+formapagopuntoventaSessionBean.getlidAsientoContableActual();
					}
				} else {
					finalQueryGlobalAsientoContable="NONE";
				}
			
			//ARCHITECTURE			
			if(Constantes.ISUSAEJBLOGICLAYER) {	
				formapagopuntoventaReturnGeneral=formapagopuntoventaLogic.cargarCombosLoteForeignKeyFormaPagoPuntoVenta(finalQueryGlobalEmpresa,finalQueryGlobalSucursal,finalQueryGlobalEjercicio,finalQueryGlobalPeriodo,finalQueryGlobalFacturaPuntoVenta,finalQueryGlobalTipoFormaPago,finalQueryGlobalBanco,finalQueryGlobalCuentaBancoPunVen,finalQueryGlobalTipoRiesgoCheque,finalQueryGlobalBancoTarjeta,finalQueryGlobalTarjetaCredito,finalQueryGlobalTipoInteresTarjeta,finalQueryGlobalTipoPagoTarjeta,finalQueryGlobalConexion,finalQueryGlobalMes,finalQueryGlobalAnio,finalQueryGlobalCuentaContable,finalQueryGlobalAsientoContable);//WithConnection
			} else if(Constantes.ISUSAEJBREMOTE) {
			} else if(Constantes.ISUSAEJBHOME) {
			}			
			//ARCHITECTURE
			
			

			if(!finalQueryGlobalEmpresa.equals("NONE")) {
				this.empresasForeignKey=formapagopuntoventaReturnGeneral.getempresasForeignKey();
			}

			if(!finalQueryGlobalSucursal.equals("NONE")) {
				this.sucursalsForeignKey=formapagopuntoventaReturnGeneral.getsucursalsForeignKey();
			}

			if(!finalQueryGlobalEjercicio.equals("NONE")) {
				this.ejerciciosForeignKey=formapagopuntoventaReturnGeneral.getejerciciosForeignKey();
			}

			if(!finalQueryGlobalPeriodo.equals("NONE")) {
				this.periodosForeignKey=formapagopuntoventaReturnGeneral.getperiodosForeignKey();
			}

			if(!finalQueryGlobalFacturaPuntoVenta.equals("NONE")) {
				this.facturapuntoventasForeignKey=formapagopuntoventaReturnGeneral.getfacturapuntoventasForeignKey();
			}

			if(!finalQueryGlobalTipoFormaPago.equals("NONE")) {
				this.tipoformapagosForeignKey=formapagopuntoventaReturnGeneral.gettipoformapagosForeignKey();
			}

			if(!finalQueryGlobalBanco.equals("NONE")) {
				this.bancosForeignKey=formapagopuntoventaReturnGeneral.getbancosForeignKey();
			}

			if(!finalQueryGlobalCuentaBancoPunVen.equals("NONE")) {
				this.cuentabancopunvensForeignKey=formapagopuntoventaReturnGeneral.getcuentabancopunvensForeignKey();
			}

			if(!finalQueryGlobalTipoRiesgoCheque.equals("NONE")) {
				this.tiporiesgochequesForeignKey=formapagopuntoventaReturnGeneral.gettiporiesgochequesForeignKey();
			}

			if(!finalQueryGlobalBancoTarjeta.equals("NONE")) {
				this.bancotarjetasForeignKey=formapagopuntoventaReturnGeneral.getbancotarjetasForeignKey();
			}

			if(!finalQueryGlobalTarjetaCredito.equals("NONE")) {
				this.tarjetacreditosForeignKey=formapagopuntoventaReturnGeneral.gettarjetacreditosForeignKey();
			}

			if(!finalQueryGlobalTipoInteresTarjeta.equals("NONE")) {
				this.tipointerestarjetasForeignKey=formapagopuntoventaReturnGeneral.gettipointerestarjetasForeignKey();
			}

			if(!finalQueryGlobalTipoPagoTarjeta.equals("NONE")) {
				this.tipopagotarjetasForeignKey=formapagopuntoventaReturnGeneral.gettipopagotarjetasForeignKey();
			}

			if(!finalQueryGlobalConexion.equals("NONE")) {
				this.conexionsForeignKey=formapagopuntoventaReturnGeneral.getconexionsForeignKey();
			}

			if(!finalQueryGlobalMes.equals("NONE")) {
				this.messForeignKey=formapagopuntoventaReturnGeneral.getmessForeignKey();
			}

			if(!finalQueryGlobalAnio.equals("NONE")) {
				this.aniosForeignKey=formapagopuntoventaReturnGeneral.getaniosForeignKey();
			}

			if(!finalQueryGlobalCuentaContable.equals("NONE")) {
				this.cuentacontablesForeignKey=formapagopuntoventaReturnGeneral.getcuentacontablesForeignKey();
			}

			if(!finalQueryGlobalAsientoContable.equals("NONE")) {
				this.asientocontablesForeignKey=formapagopuntoventaReturnGeneral.getasientocontablesForeignKey();
			}
			
			
		} catch(Exception e) {
			throw e;
		}		
	}
	
	public void addItemDefectoCombosTodosForeignKeyFormaPagoPuntoVenta()throws Exception {
		try {
			
			this.addItemDefectoCombosForeignKeyEmpresa();
			this.addItemDefectoCombosForeignKeySucursal();
			this.addItemDefectoCombosForeignKeyEjercicio();
			this.addItemDefectoCombosForeignKeyPeriodo();
			this.addItemDefectoCombosForeignKeyFacturaPuntoVenta();
			this.addItemDefectoCombosForeignKeyTipoFormaPago();
			this.addItemDefectoCombosForeignKeyBanco();
			this.addItemDefectoCombosForeignKeyCuentaBancoPunVen();
			this.addItemDefectoCombosForeignKeyTipoRiesgoCheque();
			this.addItemDefectoCombosForeignKeyBancoTarjeta();
			this.addItemDefectoCombosForeignKeyTarjetaCredito();
			this.addItemDefectoCombosForeignKeyTipoInteresTarjeta();
			this.addItemDefectoCombosForeignKeyTipoPagoTarjeta();
			this.addItemDefectoCombosForeignKeyConexion();
			this.addItemDefectoCombosForeignKeyMes();
			this.addItemDefectoCombosForeignKeyAnio();
			this.addItemDefectoCombosForeignKeyCuentaContable();
			this.addItemDefectoCombosForeignKeyAsientoContable();
		} catch(Exception e) {
			throw e;
		}		
	}
	
	



	public void addItemDefectoCombosForeignKeyEmpresa()throws Exception {
		try {
			if(this.formapagopuntoventaSessionBean==null) {
				this.formapagopuntoventaSessionBean=new FormaPagoPuntoVentaSessionBean();
			}

			if(!this.formapagopuntoventaSessionBean.getisBusquedaDesdeForeignKeySesionEmpresa()) {
				Empresa empresa=new Empresa();
				EmpresaConstantesFunciones.setEmpresaDescripcion(empresa,Constantes.SMENSAJE_ESCOJA_OPCION);
				empresa.setId(null);

				if(!EmpresaConstantesFunciones.ExisteEnLista(this.empresasForeignKey,empresa,true)) {

					this.empresasForeignKey.add(0,empresa);
				}
			}
		} catch(Exception e) {
			throw e;
		}
	}

	public void addItemDefectoCombosForeignKeySucursal()throws Exception {
		try {

			if(!this.formapagopuntoventaSessionBean.getisBusquedaDesdeForeignKeySesionSucursal()) {
				Sucursal sucursal=new Sucursal();
				SucursalConstantesFunciones.setSucursalDescripcion(sucursal,Constantes.SMENSAJE_ESCOJA_OPCION);
				sucursal.setId(null);

				if(!SucursalConstantesFunciones.ExisteEnLista(this.sucursalsForeignKey,sucursal,true)) {

					this.sucursalsForeignKey.add(0,sucursal);
				}
			}
		} catch(Exception e) {
			throw e;
		}
	}

	public void addItemDefectoCombosForeignKeyEjercicio()throws Exception {
		try {

			if(!this.formapagopuntoventaSessionBean.getisBusquedaDesdeForeignKeySesionEjercicio()) {
				Ejercicio ejercicio=new Ejercicio();
				EjercicioConstantesFunciones.setEjercicioDescripcion(ejercicio,Constantes.SMENSAJE_ESCOJA_OPCION);
				ejercicio.setId(null);

				if(!EjercicioConstantesFunciones.ExisteEnLista(this.ejerciciosForeignKey,ejercicio,true)) {

					this.ejerciciosForeignKey.add(0,ejercicio);
				}
			}
		} catch(Exception e) {
			throw e;
		}
	}

	public void addItemDefectoCombosForeignKeyPeriodo()throws Exception {
		try {

			if(!this.formapagopuntoventaSessionBean.getisBusquedaDesdeForeignKeySesionPeriodo()) {
				Periodo periodo=new Periodo();
				PeriodoConstantesFunciones.setPeriodoDescripcion(periodo,Constantes.SMENSAJE_ESCOJA_OPCION);
				periodo.setId(null);

				if(!PeriodoConstantesFunciones.ExisteEnLista(this.periodosForeignKey,periodo,true)) {

					this.periodosForeignKey.add(0,periodo);
				}
			}
		} catch(Exception e) {
			throw e;
		}
	}

	public void addItemDefectoCombosForeignKeyFacturaPuntoVenta()throws Exception {
		try {

			if(!this.formapagopuntoventaSessionBean.getisBusquedaDesdeForeignKeySesionFacturaPuntoVenta()) {
				FacturaPuntoVenta facturapuntoventa=new FacturaPuntoVenta();
				FacturaPuntoVentaConstantesFunciones.setFacturaPuntoVentaDescripcion(facturapuntoventa,Constantes.SMENSAJE_ESCOJA_OPCION);
				facturapuntoventa.setId(null);

				if(!FacturaPuntoVentaConstantesFunciones.ExisteEnLista(this.facturapuntoventasForeignKey,facturapuntoventa,true)) {

					this.facturapuntoventasForeignKey.add(0,facturapuntoventa);
				}
			}
		} catch(Exception e) {
			throw e;
		}
	}

	public void addItemDefectoCombosForeignKeyTipoFormaPago()throws Exception {
		try {

			if(!this.formapagopuntoventaSessionBean.getisBusquedaDesdeForeignKeySesionTipoFormaPago()) {
				TipoFormaPago tipoformapago=new TipoFormaPago();
				TipoFormaPagoConstantesFunciones.setTipoFormaPagoDescripcion(tipoformapago,Constantes.SMENSAJE_ESCOJA_OPCION);
				tipoformapago.setId(null);

				if(!TipoFormaPagoConstantesFunciones.ExisteEnLista(this.tipoformapagosForeignKey,tipoformapago,true)) {

					this.tipoformapagosForeignKey.add(0,tipoformapago);
				}
			}
		} catch(Exception e) {
			throw e;
		}
	}

	public void addItemDefectoCombosForeignKeyBanco()throws Exception {
		try {

			if(!this.formapagopuntoventaSessionBean.getisBusquedaDesdeForeignKeySesionBanco()) {
				Banco banco=new Banco();
				BancoConstantesFunciones.setBancoDescripcion(banco,Constantes.SMENSAJE_ESCOJA_OPCION);
				banco.setId(null);

				if(!BancoConstantesFunciones.ExisteEnLista(this.bancosForeignKey,banco,true)) {

					this.bancosForeignKey.add(0,banco);
				}
			}
		} catch(Exception e) {
			throw e;
		}
	}

	public void addItemDefectoCombosForeignKeyCuentaBancoPunVen()throws Exception {
		try {

			if(!this.formapagopuntoventaSessionBean.getisBusquedaDesdeForeignKeySesionCuentaBancoPunVen()) {
				CuentaBancoPunVen cuentabancopunven=new CuentaBancoPunVen();
				CuentaBancoPunVenConstantesFunciones.setCuentaBancoPunVenDescripcion(cuentabancopunven,Constantes.SMENSAJE_ESCOJA_OPCION);
				cuentabancopunven.setId(null);

				if(!CuentaBancoPunVenConstantesFunciones.ExisteEnLista(this.cuentabancopunvensForeignKey,cuentabancopunven,true)) {

					this.cuentabancopunvensForeignKey.add(0,cuentabancopunven);
				}
			}
		} catch(Exception e) {
			throw e;
		}
	}

	public void addItemDefectoCombosForeignKeyTipoRiesgoCheque()throws Exception {
		try {

			if(!this.formapagopuntoventaSessionBean.getisBusquedaDesdeForeignKeySesionTipoRiesgoCheque()) {
				TipoRiesgoCheque tiporiesgocheque=new TipoRiesgoCheque();
				TipoRiesgoChequeConstantesFunciones.setTipoRiesgoChequeDescripcion(tiporiesgocheque,Constantes.SMENSAJE_ESCOJA_OPCION);
				tiporiesgocheque.setId(null);

				if(!TipoRiesgoChequeConstantesFunciones.ExisteEnLista(this.tiporiesgochequesForeignKey,tiporiesgocheque,true)) {

					this.tiporiesgochequesForeignKey.add(0,tiporiesgocheque);
				}
			}
		} catch(Exception e) {
			throw e;
		}
	}

	public void addItemDefectoCombosForeignKeyBancoTarjeta()throws Exception {
		try {

			if(!this.formapagopuntoventaSessionBean.getisBusquedaDesdeForeignKeySesionBancoTarjeta()) {
				Banco bancotarjeta=new Banco();
				BancoConstantesFunciones.setBancoDescripcion(bancotarjeta,Constantes.SMENSAJE_ESCOJA_OPCION);
				bancotarjeta.setId(null);

				if(!BancoConstantesFunciones.ExisteEnLista(this.bancotarjetasForeignKey,bancotarjeta,true)) {

					this.bancotarjetasForeignKey.add(0,bancotarjeta);
				}
			}
		} catch(Exception e) {
			throw e;
		}
	}

	public void addItemDefectoCombosForeignKeyTarjetaCredito()throws Exception {
		try {

			if(!this.formapagopuntoventaSessionBean.getisBusquedaDesdeForeignKeySesionTarjetaCredito()) {
				TarjetaCredito tarjetacredito=new TarjetaCredito();
				TarjetaCreditoConstantesFunciones.setTarjetaCreditoDescripcion(tarjetacredito,Constantes.SMENSAJE_ESCOJA_OPCION);
				tarjetacredito.setId(null);

				if(!TarjetaCreditoConstantesFunciones.ExisteEnLista(this.tarjetacreditosForeignKey,tarjetacredito,true)) {

					this.tarjetacreditosForeignKey.add(0,tarjetacredito);
				}
			}
		} catch(Exception e) {
			throw e;
		}
	}

	public void addItemDefectoCombosForeignKeyTipoInteresTarjeta()throws Exception {
		try {

			if(!this.formapagopuntoventaSessionBean.getisBusquedaDesdeForeignKeySesionTipoInteresTarjeta()) {
				TipoInteresTarjeta tipointerestarjeta=new TipoInteresTarjeta();
				TipoInteresTarjetaConstantesFunciones.setTipoInteresTarjetaDescripcion(tipointerestarjeta,Constantes.SMENSAJE_ESCOJA_OPCION);
				tipointerestarjeta.setId(null);

				if(!TipoInteresTarjetaConstantesFunciones.ExisteEnLista(this.tipointerestarjetasForeignKey,tipointerestarjeta,true)) {

					this.tipointerestarjetasForeignKey.add(0,tipointerestarjeta);
				}
			}
		} catch(Exception e) {
			throw e;
		}
	}

	public void addItemDefectoCombosForeignKeyTipoPagoTarjeta()throws Exception {
		try {

			if(!this.formapagopuntoventaSessionBean.getisBusquedaDesdeForeignKeySesionTipoPagoTarjeta()) {
				TipoPagoTarjeta tipopagotarjeta=new TipoPagoTarjeta();
				TipoPagoTarjetaConstantesFunciones.setTipoPagoTarjetaDescripcion(tipopagotarjeta,Constantes.SMENSAJE_ESCOJA_OPCION);
				tipopagotarjeta.setId(null);

				if(!TipoPagoTarjetaConstantesFunciones.ExisteEnLista(this.tipopagotarjetasForeignKey,tipopagotarjeta,true)) {

					this.tipopagotarjetasForeignKey.add(0,tipopagotarjeta);
				}
			}
		} catch(Exception e) {
			throw e;
		}
	}

	public void addItemDefectoCombosForeignKeyConexion()throws Exception {
		try {

			if(!this.formapagopuntoventaSessionBean.getisBusquedaDesdeForeignKeySesionConexion()) {
				Conexion conexion=new Conexion();
				ConexionConstantesFunciones.setConexionDescripcion(conexion,Constantes.SMENSAJE_ESCOJA_OPCION);
				conexion.setId(null);

				if(!ConexionConstantesFunciones.ExisteEnLista(this.conexionsForeignKey,conexion,true)) {

					this.conexionsForeignKey.add(0,conexion);
				}
			}
		} catch(Exception e) {
			throw e;
		}
	}

	public void addItemDefectoCombosForeignKeyMes()throws Exception {
		try {

			if(!this.formapagopuntoventaSessionBean.getisBusquedaDesdeForeignKeySesionMes()) {
				Mes mes=new Mes();
				MesConstantesFunciones.setMesDescripcion(mes,Constantes.SMENSAJE_ESCOJA_OPCION);
				mes.setId(null);

				if(!MesConstantesFunciones.ExisteEnLista(this.messForeignKey,mes,true)) {

					this.messForeignKey.add(0,mes);
				}
			}
		} catch(Exception e) {
			throw e;
		}
	}

	public void addItemDefectoCombosForeignKeyAnio()throws Exception {
		try {

			if(!this.formapagopuntoventaSessionBean.getisBusquedaDesdeForeignKeySesionAnio()) {
				Anio anio=new Anio();
				AnioConstantesFunciones.setAnioDescripcion(anio,Constantes.SMENSAJE_ESCOJA_OPCION);
				anio.setId(null);

				if(!AnioConstantesFunciones.ExisteEnLista(this.aniosForeignKey,anio,true)) {

					this.aniosForeignKey.add(0,anio);
				}
			}
		} catch(Exception e) {
			throw e;
		}
	}

	public void addItemDefectoCombosForeignKeyCuentaContable()throws Exception {
		try {

			if(!this.formapagopuntoventaSessionBean.getisBusquedaDesdeForeignKeySesionCuentaContable()) {
				CuentaContable cuentacontable=new CuentaContable();
				CuentaContableConstantesFunciones.setCuentaContableDescripcion(cuentacontable,Constantes.SMENSAJE_ESCOJA_OPCION);
				cuentacontable.setId(null);

				if(!CuentaContableConstantesFunciones.ExisteEnLista(this.cuentacontablesForeignKey,cuentacontable,true)) {

					this.cuentacontablesForeignKey.add(0,cuentacontable);
				}
			}
		} catch(Exception e) {
			throw e;
		}
	}

	public void addItemDefectoCombosForeignKeyAsientoContable()throws Exception {
		try {

			if(!this.formapagopuntoventaSessionBean.getisBusquedaDesdeForeignKeySesionAsientoContable()) {
				AsientoContable asientocontable=new AsientoContable();
				AsientoContableConstantesFunciones.setAsientoContableDescripcion(asientocontable,Constantes.SMENSAJE_ESCOJA_OPCION);
				asientocontable.setId(null);

				if(!AsientoContableConstantesFunciones.ExisteEnLista(this.asientocontablesForeignKey,asientocontable,true)) {

					this.asientocontablesForeignKey.add(0,asientocontable);
				}
			}
		} catch(Exception e) {
			throw e;
		}
	}
	
	public void initActionsCombosTodosForeignKeyFormaPagoPuntoVenta()throws Exception {
		try {
			
			this.initActionsCombosForeignKeyTipoFormaPago("Todos");
		} catch(Exception e) {
			throw e;
		}		
	}
	
	public void initActionsCombosTodosForeignKeyFormaPagoPuntoVenta(String sFormularioTipoBusqueda)throws Exception {
		try {
			
			this.initActionsCombosForeignKeyTipoFormaPago(sFormularioTipoBusqueda);
		} catch(Exception e) {
			throw e;
		}		
	}
	
	



	@SuppressWarnings("rawtypes")
	public void procesarActionsCombosForeignKeyTipoFormaPago(JComboBox jComboBoxTipoFormaPagoGenerico,String sFormularioTipoBusqueda)throws Exception {
		try {
			String sFinalQueryCombo="";
			TipoFormaPago tipoformapagoLocal=(TipoFormaPago)jComboBoxTipoFormaPagoGenerico.getSelectedItem();

			if(tipoformapagoLocal!=null  && tipoformapagoLocal.getId()!=null  && tipoformapagoLocal.getId()>0) {
				sFinalQueryCombo="  WHERE  id_tipo_forma_pago="+tipoformapagoLocal.getId();
			}
		} catch(Exception e) {
			throw e;
		}
	}
	
	



	public void initActionsCombosForeignKeyTipoFormaPago(String sFormularioTipoBusqueda)throws Exception {
		try {
			if(sFormularioTipoBusqueda.equals("Todos") || sFormularioTipoBusqueda.equals("Formulario")) {
				if(Constantes2.CON_COMBOBOX_ITEMLISTENER) {
					if(this.jInternalFrameDetalleFormFormaPagoPuntoVenta!=null) {
						this.jInternalFrameDetalleFormFormaPagoPuntoVenta.jComboBoxid_tipo_forma_pagoFormaPagoPuntoVenta.addItemListener(new ComboBoxItemListener(this,"id_tipo_forma_pagoFormaPagoPuntoVenta"));
						this.jInternalFrameDetalleFormFormaPagoPuntoVenta.jComboBoxid_tipo_forma_pagoFormaPagoPuntoVenta.addFocusListener(new ComboBoxFocusListener(this,"id_tipo_forma_pagoFormaPagoPuntoVenta"));
					}
				} else {
					if(this.jInternalFrameDetalleFormFormaPagoPuntoVenta!=null) {
						this.jInternalFrameDetalleFormFormaPagoPuntoVenta.jComboBoxid_tipo_forma_pagoFormaPagoPuntoVenta.addActionListener(new ComboBoxActionListener(this,"id_tipo_forma_pagoFormaPagoPuntoVenta"));
						this.jInternalFrameDetalleFormFormaPagoPuntoVenta.jComboBoxid_tipo_forma_pagoFormaPagoPuntoVenta.addFocusListener(new ComboBoxFocusListener(this,"id_tipo_forma_pagoFormaPagoPuntoVenta"));
					}
				}
			}

			if(sFormularioTipoBusqueda.equals("Todos")) {

				if(!this.conCargarMinimo) {
				/*
					if(Constantes2.CON_COMBOBOX_ITEMLISTENER) {
						this.jComboBoxid_tipo_forma_pagoFK_IdTipoFormaPagoFormaPagoPuntoVenta.addItemListener(new ComboBoxItemListener(this,"jComboBoxid_tipo_forma_pagoFK_IdTipoFormaPagoFormaPagoPuntoVenta"));

						this.jComboBoxid_tipo_forma_pagoFK_IdTipoFormaPagoFormaPagoPuntoVenta.addFocusListener(new ComboBoxFocusListener(this,"jComboBoxid_tipo_forma_pagoFK_IdTipoFormaPagoFormaPagoPuntoVenta"));

					} else {
						this.jComboBoxid_tipo_forma_pagoFK_IdTipoFormaPagoFormaPagoPuntoVenta.addActionListener(new ComboBoxActionListener(this,"jComboBoxid_tipo_forma_pagoFK_IdTipoFormaPagoFormaPagoPuntoVenta"));

						this.jComboBoxid_tipo_forma_pagoFK_IdTipoFormaPagoFormaPagoPuntoVenta.addFocusListener(new ComboBoxFocusListener(this,"jComboBoxid_tipo_forma_pagoFK_IdTipoFormaPagoFormaPagoPuntoVenta"));

					}
			*/
				}
			}
		} catch(Exception e) {
			throw e;
		}
	}
	
	public void setVariablesGlobalesCombosForeignKeyFormaPagoPuntoVenta()throws Exception {	
		try {
			if(this.parametroGeneralUsuario!=null && this.parametroGeneralUsuario.getId()>0) {
			
				this.setActualEmpresaForeignKey(this.parametroGeneralUsuario.getid_empresa(),false,"Formulario");
				this.setActualSucursalForeignKey(this.parametroGeneralUsuario.getid_sucursal(),false,"Formulario");
				this.setActualEjercicioForeignKey(this.parametroGeneralUsuario.getid_ejercicio(),false,"Formulario");
				this.setActualPeriodoForeignKey(this.parametroGeneralUsuario.getid_periodo(),false,"Formulario");
			
			
				this.formapagopuntoventa.setfecha(this.parametroGeneralUsuario.getfecha_sistema());
				this.formapagopuntoventa.setfecha_inicio(this.parametroGeneralUsuario.getfecha_sistema());
				this.formapagopuntoventa.setfecha_fin(this.parametroGeneralUsuario.getfecha_sistema());
			}
			
			//INICIALIZA VARIABLES COMBOS GLOBALES AUXILIARES A FORMULARIO(Anio,Mes)
			this.setVariablesGlobalesAuxiliaresCombosForeignKeyFormaPagoPuntoVenta();
		
		} catch(Exception e) {
			throw e;
		}
	}
	
	public void setVariablesObjetoActualToFormularioForeignKeyFormaPagoPuntoVenta(FormaPagoPuntoVenta formapagopuntoventa)throws Exception {	
		try {
			
			this.setActualFacturaPuntoVentaForeignKey(formapagopuntoventa.getid_factura_punto_venta(),false,"Formulario");
			this.setActualTipoFormaPagoForeignKey(formapagopuntoventa.getid_tipo_forma_pago(),false,"Formulario");
			this.setActualBancoForeignKey(formapagopuntoventa.getid_banco(),false,"Formulario");
			this.setActualCuentaBancoPunVenForeignKey(formapagopuntoventa.getid_cuenta_banco_pun_ven(),false,"Formulario");
			this.setActualTipoRiesgoChequeForeignKey(formapagopuntoventa.getid_tipo_riesgo_cheque(),false,"Formulario");
			this.setActualBancoTarjetaForeignKey(formapagopuntoventa.getid_banco_tarjeta(),false,"Formulario");
			this.setActualTarjetaCreditoForeignKey(formapagopuntoventa.getid_tarjeta_credito(),false,"Formulario");
			this.setActualTipoInteresTarjetaForeignKey(formapagopuntoventa.getid_tipo_interes_tarjeta(),false,"Formulario");
			this.setActualTipoPagoTarjetaForeignKey(formapagopuntoventa.getid_tipo_pago_tarjeta(),false,"Formulario");
			this.setActualConexionForeignKey(formapagopuntoventa.getid_conexion(),false,"Formulario");
			this.setActualCuentaContableForeignKey(formapagopuntoventa.getid_cuenta_contable(),false,"Formulario");
			this.setActualAsientoContableForeignKey(formapagopuntoventa.getid_asiento_contable(),false,"Formulario");			
		} catch(Exception e) {
			throw e;
		}
	}
	
	public void setVariablesObjetoActualToListasForeignKeyFormaPagoPuntoVenta(FormaPagoPuntoVenta formapagopuntoventa,String sTipoEvento)throws Exception {	
		try {
			
			

				if(formapagopuntoventa.getCuentaContable()!=null && !sTipoEvento.equals("id_cuenta_contableFormaPagoPuntoVenta")) { //sTipoEvento Evita Bucle Infinito

					this.cuentacontablesForeignKey=new ArrayList<CuentaContable>();
					this.cuentacontablesForeignKey.add(formapagopuntoventa.getCuentaContable());

					this.addItemDefectoCombosForeignKeyCuentaContable();
					this.cargarCombosFrameCuentaContablesForeignKey("Todos");
				}

				if(formapagopuntoventa.getAsientoContable()!=null && !sTipoEvento.equals("id_asiento_contableFormaPagoPuntoVenta")) { //sTipoEvento Evita Bucle Infinito

					this.asientocontablesForeignKey=new ArrayList<AsientoContable>();
					this.asientocontablesForeignKey.add(formapagopuntoventa.getAsientoContable());

					this.addItemDefectoCombosForeignKeyAsientoContable();
					this.cargarCombosFrameAsientoContablesForeignKey("Todos");
				}
			
		} catch(Exception e) {
			throw e;
		}
	}
	
	/*
	public void setVariablesCombosFromBeanForeignKeyFormaPagoPuntoVenta()throws Exception {	
		try {
			
			this.setActualFacturaPuntoVentaForeignKey(this.formapagopuntoventaConstantesFunciones.getid_factura_punto_venta(),false,"Formulario");
			this.setActualTipoFormaPagoForeignKey(this.formapagopuntoventaConstantesFunciones.getid_tipo_forma_pago(),false,"Formulario");
			this.setActualBancoForeignKey(this.formapagopuntoventaConstantesFunciones.getid_banco(),false,"Formulario");
			this.setActualCuentaBancoPunVenForeignKey(this.formapagopuntoventaConstantesFunciones.getid_cuenta_banco_pun_ven(),false,"Formulario");
			this.setActualTipoRiesgoChequeForeignKey(this.formapagopuntoventaConstantesFunciones.getid_tipo_riesgo_cheque(),false,"Formulario");
			this.setActualBancoTarjetaForeignKey(this.formapagopuntoventaConstantesFunciones.getid_banco_tarjeta(),false,"Formulario");
			this.setActualTarjetaCreditoForeignKey(this.formapagopuntoventaConstantesFunciones.getid_tarjeta_credito(),false,"Formulario");
			this.setActualTipoInteresTarjetaForeignKey(this.formapagopuntoventaConstantesFunciones.getid_tipo_interes_tarjeta(),false,"Formulario");
			this.setActualTipoPagoTarjetaForeignKey(this.formapagopuntoventaConstantesFunciones.getid_tipo_pago_tarjeta(),false,"Formulario");
			this.setActualConexionForeignKey(this.formapagopuntoventaConstantesFunciones.getid_conexion(),false,"Formulario");
			this.setActualCuentaContableForeignKey(this.formapagopuntoventaConstantesFunciones.getid_cuenta_contable(),false,"Formulario");
			this.setActualAsientoContableForeignKey(this.formapagopuntoventaConstantesFunciones.getid_asiento_contable(),false,"Formulario");			
		} catch(Exception e) {
			throw e;
		}
	}
	*/
	
	public void setVariablesGlobalesAuxiliaresCombosForeignKeyFormaPagoPuntoVenta()throws Exception {	
		try {
			

				if(this.jInternalFrameDetalleFormFormaPagoPuntoVenta!=null) {
					Ejercicio ejercicioActual=(Ejercicio)this.jInternalFrameDetalleFormFormaPagoPuntoVenta.jComboBoxid_ejercicioFormaPagoPuntoVenta.getSelectedItem();
					this.setActualAnioForeignKey(ejercicioActual.getid_anio(),false,"Formulario");
				}

				if(this.jInternalFrameDetalleFormFormaPagoPuntoVenta!=null) {
					Periodo periodoActual=(Periodo)this.jInternalFrameDetalleFormFormaPagoPuntoVenta.jComboBoxid_periodoFormaPagoPuntoVenta.getSelectedItem();
					this.setActualMesForeignKey(periodoActual.getid_mes(),false,"Formulario");
				}
		
		} catch(Exception e) {
			throw e;
		}
	}
	
	public void setVariablesDefaultCombosForeignKeyFormaPagoPuntoVenta()throws Exception {	
		try {
			
		} catch(Exception e) {
			throw e;
		}
	}
	
	public void setVariablesParametroCombosForeignKeyFormaPagoPuntoVenta()throws Exception {	
		try {
			
		} catch(Exception e) {
			throw e;
		}
	}		
	
	public void cargarCombosParametroFormaPagoPuntoVenta()throws Exception {
		try	{
			ArrayList<String> arrColumnasGlobales=new ArrayList<String>();
			String  finalQueryGlobal="";
			
			//this.cargarDatosCliente();
			
			
			
		} catch(Exception e) {
			throw e;
		}		
	}
		
	public void cargarCombosFrameForeignKeyFormaPagoPuntoVenta()throws Exception {
		try {
			

			this.cargarCombosFrameEmpresasForeignKey("Todos");
			this.cargarCombosFrameSucursalsForeignKey("Todos");
			this.cargarCombosFrameEjerciciosForeignKey("Todos");
			this.cargarCombosFramePeriodosForeignKey("Todos");
			this.cargarCombosFrameFacturaPuntoVentasForeignKey("Todos");
			this.cargarCombosFrameTipoFormaPagosForeignKey("Todos");
			this.cargarCombosFrameBancosForeignKey("Todos");
			this.cargarCombosFrameCuentaBancoPunVensForeignKey("Todos");
			this.cargarCombosFrameTipoRiesgoChequesForeignKey("Todos");
			this.cargarCombosFrameBancoTarjetasForeignKey("Todos");
			this.cargarCombosFrameTarjetaCreditosForeignKey("Todos");
			this.cargarCombosFrameTipoInteresTarjetasForeignKey("Todos");
			this.cargarCombosFrameTipoPagoTarjetasForeignKey("Todos");
			this.cargarCombosFrameConexionsForeignKey("Todos");
			this.cargarCombosFrameMessForeignKey("Todos");
			this.cargarCombosFrameAniosForeignKey("Todos");
			this.cargarCombosFrameCuentaContablesForeignKey("Todos");
			this.cargarCombosFrameAsientoContablesForeignKey("Todos");

		} catch(Exception e) {
			throw e;
		}		
	}		
	
	public void cargarCombosFrameForeignKeyFormaPagoPuntoVenta(String sFormularioTipoBusqueda)throws Exception {
		try {
			

			this.cargarCombosFrameEmpresasForeignKey(sFormularioTipoBusqueda);
			this.cargarCombosFrameSucursalsForeignKey(sFormularioTipoBusqueda);
			this.cargarCombosFrameEjerciciosForeignKey(sFormularioTipoBusqueda);
			this.cargarCombosFramePeriodosForeignKey(sFormularioTipoBusqueda);
			this.cargarCombosFrameFacturaPuntoVentasForeignKey(sFormularioTipoBusqueda);
			this.cargarCombosFrameTipoFormaPagosForeignKey(sFormularioTipoBusqueda);
			this.cargarCombosFrameBancosForeignKey(sFormularioTipoBusqueda);
			this.cargarCombosFrameCuentaBancoPunVensForeignKey(sFormularioTipoBusqueda);
			this.cargarCombosFrameTipoRiesgoChequesForeignKey(sFormularioTipoBusqueda);
			this.cargarCombosFrameBancoTarjetasForeignKey(sFormularioTipoBusqueda);
			this.cargarCombosFrameTarjetaCreditosForeignKey(sFormularioTipoBusqueda);
			this.cargarCombosFrameTipoInteresTarjetasForeignKey(sFormularioTipoBusqueda);
			this.cargarCombosFrameTipoPagoTarjetasForeignKey(sFormularioTipoBusqueda);
			this.cargarCombosFrameConexionsForeignKey(sFormularioTipoBusqueda);
			this.cargarCombosFrameMessForeignKey(sFormularioTipoBusqueda);
			this.cargarCombosFrameAniosForeignKey(sFormularioTipoBusqueda);
			this.cargarCombosFrameCuentaContablesForeignKey(sFormularioTipoBusqueda);
			this.cargarCombosFrameAsientoContablesForeignKey(sFormularioTipoBusqueda);

		} catch(Exception e) {
			throw e;
		}		
	}	
	
	public void setItemDefectoCombosForeignKeyFormaPagoPuntoVenta()throws Exception {
		try {
			



			if(this.jInternalFrameDetalleFormFormaPagoPuntoVenta.jComboBoxid_empresaFormaPagoPuntoVenta!=null && this.jInternalFrameDetalleFormFormaPagoPuntoVenta.jComboBoxid_empresaFormaPagoPuntoVenta.getItemCount()>0) {
				this.jInternalFrameDetalleFormFormaPagoPuntoVenta.jComboBoxid_empresaFormaPagoPuntoVenta.setSelectedIndex(0);
			}

			if(this.jInternalFrameDetalleFormFormaPagoPuntoVenta.jComboBoxid_sucursalFormaPagoPuntoVenta!=null && this.jInternalFrameDetalleFormFormaPagoPuntoVenta.jComboBoxid_sucursalFormaPagoPuntoVenta.getItemCount()>0) {
				this.jInternalFrameDetalleFormFormaPagoPuntoVenta.jComboBoxid_sucursalFormaPagoPuntoVenta.setSelectedIndex(0);
			}

			if(this.jInternalFrameDetalleFormFormaPagoPuntoVenta.jComboBoxid_ejercicioFormaPagoPuntoVenta!=null && this.jInternalFrameDetalleFormFormaPagoPuntoVenta.jComboBoxid_ejercicioFormaPagoPuntoVenta.getItemCount()>0) {
				this.jInternalFrameDetalleFormFormaPagoPuntoVenta.jComboBoxid_ejercicioFormaPagoPuntoVenta.setSelectedIndex(0);
			}

			if(this.jInternalFrameDetalleFormFormaPagoPuntoVenta.jComboBoxid_periodoFormaPagoPuntoVenta!=null && this.jInternalFrameDetalleFormFormaPagoPuntoVenta.jComboBoxid_periodoFormaPagoPuntoVenta.getItemCount()>0) {
				this.jInternalFrameDetalleFormFormaPagoPuntoVenta.jComboBoxid_periodoFormaPagoPuntoVenta.setSelectedIndex(0);
			}

			if(this.jInternalFrameDetalleFormFormaPagoPuntoVenta.jComboBoxid_factura_punto_ventaFormaPagoPuntoVenta!=null && this.jInternalFrameDetalleFormFormaPagoPuntoVenta.jComboBoxid_factura_punto_ventaFormaPagoPuntoVenta.getItemCount()>0) {
				this.jInternalFrameDetalleFormFormaPagoPuntoVenta.jComboBoxid_factura_punto_ventaFormaPagoPuntoVenta.setSelectedIndex(0);
			}

			if(this.jInternalFrameDetalleFormFormaPagoPuntoVenta.jComboBoxid_tipo_forma_pagoFormaPagoPuntoVenta!=null && this.jInternalFrameDetalleFormFormaPagoPuntoVenta.jComboBoxid_tipo_forma_pagoFormaPagoPuntoVenta.getItemCount()>0) {
				this.jInternalFrameDetalleFormFormaPagoPuntoVenta.jComboBoxid_tipo_forma_pagoFormaPagoPuntoVenta.setSelectedIndex(0);
			}

			if(this.jInternalFrameDetalleFormFormaPagoPuntoVenta.jComboBoxid_bancoFormaPagoPuntoVenta!=null && this.jInternalFrameDetalleFormFormaPagoPuntoVenta.jComboBoxid_bancoFormaPagoPuntoVenta.getItemCount()>0) {
				this.jInternalFrameDetalleFormFormaPagoPuntoVenta.jComboBoxid_bancoFormaPagoPuntoVenta.setSelectedIndex(0);
			}

			if(this.jInternalFrameDetalleFormFormaPagoPuntoVenta.jComboBoxid_cuenta_banco_pun_venFormaPagoPuntoVenta!=null && this.jInternalFrameDetalleFormFormaPagoPuntoVenta.jComboBoxid_cuenta_banco_pun_venFormaPagoPuntoVenta.getItemCount()>0) {
				this.jInternalFrameDetalleFormFormaPagoPuntoVenta.jComboBoxid_cuenta_banco_pun_venFormaPagoPuntoVenta.setSelectedIndex(0);
			}

			if(this.jInternalFrameDetalleFormFormaPagoPuntoVenta.jComboBoxid_tipo_riesgo_chequeFormaPagoPuntoVenta!=null && this.jInternalFrameDetalleFormFormaPagoPuntoVenta.jComboBoxid_tipo_riesgo_chequeFormaPagoPuntoVenta.getItemCount()>0) {
				this.jInternalFrameDetalleFormFormaPagoPuntoVenta.jComboBoxid_tipo_riesgo_chequeFormaPagoPuntoVenta.setSelectedIndex(0);
			}

			if(this.jInternalFrameDetalleFormFormaPagoPuntoVenta.jComboBoxid_banco_tarjetaFormaPagoPuntoVenta!=null && this.jInternalFrameDetalleFormFormaPagoPuntoVenta.jComboBoxid_banco_tarjetaFormaPagoPuntoVenta.getItemCount()>0) {
				this.jInternalFrameDetalleFormFormaPagoPuntoVenta.jComboBoxid_banco_tarjetaFormaPagoPuntoVenta.setSelectedIndex(0);
			}

			if(this.jInternalFrameDetalleFormFormaPagoPuntoVenta.jComboBoxid_tarjeta_creditoFormaPagoPuntoVenta!=null && this.jInternalFrameDetalleFormFormaPagoPuntoVenta.jComboBoxid_tarjeta_creditoFormaPagoPuntoVenta.getItemCount()>0) {
				this.jInternalFrameDetalleFormFormaPagoPuntoVenta.jComboBoxid_tarjeta_creditoFormaPagoPuntoVenta.setSelectedIndex(0);
			}

			if(this.jInternalFrameDetalleFormFormaPagoPuntoVenta.jComboBoxid_tipo_interes_tarjetaFormaPagoPuntoVenta!=null && this.jInternalFrameDetalleFormFormaPagoPuntoVenta.jComboBoxid_tipo_interes_tarjetaFormaPagoPuntoVenta.getItemCount()>0) {
				this.jInternalFrameDetalleFormFormaPagoPuntoVenta.jComboBoxid_tipo_interes_tarjetaFormaPagoPuntoVenta.setSelectedIndex(0);
			}

			if(this.jInternalFrameDetalleFormFormaPagoPuntoVenta.jComboBoxid_tipo_pago_tarjetaFormaPagoPuntoVenta!=null && this.jInternalFrameDetalleFormFormaPagoPuntoVenta.jComboBoxid_tipo_pago_tarjetaFormaPagoPuntoVenta.getItemCount()>0) {
				this.jInternalFrameDetalleFormFormaPagoPuntoVenta.jComboBoxid_tipo_pago_tarjetaFormaPagoPuntoVenta.setSelectedIndex(0);
			}

			if(this.jInternalFrameDetalleFormFormaPagoPuntoVenta.jComboBoxid_conexionFormaPagoPuntoVenta!=null && this.jInternalFrameDetalleFormFormaPagoPuntoVenta.jComboBoxid_conexionFormaPagoPuntoVenta.getItemCount()>0) {
				this.jInternalFrameDetalleFormFormaPagoPuntoVenta.jComboBoxid_conexionFormaPagoPuntoVenta.setSelectedIndex(0);
			}

			if(this.jInternalFrameDetalleFormFormaPagoPuntoVenta.jComboBoxid_mesFormaPagoPuntoVenta!=null && this.jInternalFrameDetalleFormFormaPagoPuntoVenta.jComboBoxid_mesFormaPagoPuntoVenta.getItemCount()>0) {
				this.jInternalFrameDetalleFormFormaPagoPuntoVenta.jComboBoxid_mesFormaPagoPuntoVenta.setSelectedIndex(0);
			}

			if(this.jInternalFrameDetalleFormFormaPagoPuntoVenta.jComboBoxid_anioFormaPagoPuntoVenta!=null && this.jInternalFrameDetalleFormFormaPagoPuntoVenta.jComboBoxid_anioFormaPagoPuntoVenta.getItemCount()>0) {
				this.jInternalFrameDetalleFormFormaPagoPuntoVenta.jComboBoxid_anioFormaPagoPuntoVenta.setSelectedIndex(0);
			}

			if(this.jInternalFrameDetalleFormFormaPagoPuntoVenta.jComboBoxid_cuenta_contableFormaPagoPuntoVenta!=null && this.jInternalFrameDetalleFormFormaPagoPuntoVenta.jComboBoxid_cuenta_contableFormaPagoPuntoVenta.getItemCount()>0) {
				this.jInternalFrameDetalleFormFormaPagoPuntoVenta.jComboBoxid_cuenta_contableFormaPagoPuntoVenta.setSelectedIndex(0);
			}

			if(this.jInternalFrameDetalleFormFormaPagoPuntoVenta.jComboBoxid_asiento_contableFormaPagoPuntoVenta!=null && this.jInternalFrameDetalleFormFormaPagoPuntoVenta.jComboBoxid_asiento_contableFormaPagoPuntoVenta.getItemCount()>0) {
				this.jInternalFrameDetalleFormFormaPagoPuntoVenta.jComboBoxid_asiento_contableFormaPagoPuntoVenta.setSelectedIndex(0);
			}
		} catch(Exception e) {
			throw e;
		}		
	}		
	
	











	public void recargarFormFormaPagoPuntoVentaTipoFormaPago(JComboBox<?> jComboBoxGenericoTipoFormaPago,String sFormularioTipoBusqueda) throws Exception {

	}
























	
	

	public FormaPagoPuntoVentaBeanSwingJInternalFrame() throws Exception {
		super(false,PaginaTipo.PRINCIPAL);
	}
	
	public FormaPagoPuntoVentaBeanSwingJInternalFrame(Boolean cargarRelaciones,PaginaTipo paginaTipo) throws Exception {
		super(cargarRelaciones,paginaTipo);
	}
	
	public FormaPagoPuntoVentaBeanSwingJInternalFrame(Boolean conGuardarRelaciones,Boolean esGuardarRelacionado,Boolean cargarRelaciones,PaginaTipo paginaTipo) throws Exception {
		super(cargarRelaciones,paginaTipo);
		
		this.formapagopuntoventaSessionBean=new FormaPagoPuntoVentaSessionBean(); 
		this.formapagopuntoventaConstantesFunciones=new FormaPagoPuntoVentaConstantesFunciones(); 
		this.formapagopuntoventaBean=new FormaPagoPuntoVenta();//(this.formapagopuntoventaConstantesFunciones); 		
		this.formapagopuntoventaReturnGeneral=new FormaPagoPuntoVentaParameterReturnGeneral(); 
		
		this.formapagopuntoventaSessionBean.setConGuardarRelaciones(conGuardarRelaciones);
		this.formapagopuntoventaSessionBean.setEsGuardarRelacionado(esGuardarRelacionado);
				
	}
	
	public FormaPagoPuntoVentaBeanSwingJInternalFrame(Boolean blncargarCombostrForeignKey,Boolean blnCargarInformacionInicial,JDesktopPane jdesktopPane,Usuario usuarioActual,ResumenUsuario resumenUsuarioActual,Modulo moduloActual,Opcion opcionActual,ParametroGeneralSg parametroGeneralSg,ParametroGeneralUsuario parametroGeneralUsuario,Boolean conGuardarRelaciones,Boolean esGuardarRelacionado,Boolean cargarRelaciones,Boolean cargarTodosDatos,PaginaTipo paginaTipo) throws Exception {
		this(blncargarCombostrForeignKey,blnCargarInformacionInicial,jdesktopPane,usuarioActual,resumenUsuarioActual,moduloActual,opcionActual,parametroGeneralSg,parametroGeneralUsuario,paginaTipo,conGuardarRelaciones,esGuardarRelacionado,cargarRelaciones,cargarTodosDatos);
	}
		
	public FormaPagoPuntoVentaBeanSwingJInternalFrame(Boolean blncargarCombostrForeignKey,Boolean blnCargarInformacionInicial,JDesktopPane jdesktopPane,Usuario usuarioActual,ResumenUsuario resumenUsuarioActual,Modulo moduloActual,Opcion opcionActual,ParametroGeneralSg parametroGeneralSg,ParametroGeneralUsuario parametroGeneralUsuario,Boolean cargarRelaciones,Boolean cargarTodosDatos,PaginaTipo paginaTipo) throws Exception {
		this(blncargarCombostrForeignKey,blnCargarInformacionInicial,jdesktopPane,usuarioActual,resumenUsuarioActual,moduloActual,opcionActual,parametroGeneralSg,parametroGeneralUsuario,paginaTipo,false,false,cargarRelaciones,cargarTodosDatos);
	}	
	
	public FormaPagoPuntoVentaBeanSwingJInternalFrame(Boolean blncargarCombostrForeignKey,Boolean blnCargarInformacionInicial,JDesktopPane jdesktopPane,Usuario usuarioActual,ResumenUsuario resumenUsuarioActual,Modulo moduloActual,Opcion opcionActual,ParametroGeneralSg parametroGeneralSg,ParametroGeneralUsuario parametroGeneralUsuario,PaginaTipo paginaTipo,Boolean conGuardarRelaciones,Boolean esGuardarRelacionado,Boolean cargarRelaciones,Boolean cargarTodosDatos) throws Exception //Boolean esParaBusquedaForeignKey
    {
		super(jdesktopPane,conGuardarRelaciones,esGuardarRelacionado,cargarRelaciones,usuarioActual,resumenUsuarioActual,moduloActual,opcionActual,parametroGeneralSg,parametroGeneralUsuario,paginaTipo);
		
		try {
			
			this.permiteRecargarForm=false;
			
			this.startProcessFormaPagoPuntoVenta(true);
			
			Boolean esParaBusquedaForeignKey=false;//ANTES USADO COMO PARAMETRO DEL CONSTRUCTOR
			
			if(paginaTipo.equals(PaginaTipo.BUSQUEDA)) {
				esParaBusquedaForeignKey=true;
			}
			
			
			
			//SE ASIGNA EN CLASE PADRE
			/*
			this.parametroGeneralSg=parametroGeneralSg;		
			this.parametroGeneralUsuario=parametroGeneralUsuario;	
			this.usuarioActual=usuarioActual;
			this.moduloActual=moduloActual;
			*/						
			
			long start_time=0;
			long end_time=0;
			
			if(Constantes2.ISDEVELOPING2) {
				start_time = System.currentTimeMillis();
			}
			
			if(!cargarTodosDatos) {
				this.sAccionBusqueda="NINGUNO";
			}
			
			this.formapagopuntoventaConstantesFunciones=new FormaPagoPuntoVentaConstantesFunciones(); 
			this.formapagopuntoventaBean=new FormaPagoPuntoVenta();//this.formapagopuntoventaConstantesFunciones); 			
			this.formapagopuntoventaReturnGeneral=new FormaPagoPuntoVentaParameterReturnGeneral(); 
		
			FormaPagoPuntoVentaBeanSwingJInternalFrameAdditional.CargaInicialInicio(this, "NORMAL", null);
			
			this.setTitle(Funciones.GetTituloSistema(this.parametroGeneralSg,this.moduloActual,this.usuarioActual,"Forma Pago Mantenimiento",paginaTipo));			
			
			this.conTotales=false;
			
			this.conTotales=true;
			
			
			this.formapagopuntoventa=new FormaPagoPuntoVenta();
			this.formapagopuntoventas = new ArrayList<FormaPagoPuntoVenta>();
			this.formapagopuntoventasAux = new ArrayList<FormaPagoPuntoVenta>();
			
			if(Constantes.ISUSAEJBLOGICLAYER) {
				this.formapagopuntoventaLogic=new FormaPagoPuntoVentaLogic();
				this.formapagopuntoventaLogic.getNewConnexionToDeep("");
			}
			
			//this.formapagopuntoventaSessionBean.setConGuardarRelaciones(conGuardarRelaciones);
			//this.formapagopuntoventaSessionBean.setEsGuardarRelacionado(esGuardarRelacionado);
			
			this.jDesktopPane=jdesktopPane;
			
			if(this.jDesktopPane.getClass().equals(JDesktopPaneMe.class)) {
				this.constantes2=((JDesktopPaneMe)this.jDesktopPane).constantes2;
			}
			
			if(!Constantes.CON_VARIAS_VENTANAS) {
    			MainJFrame.cerrarJInternalFramesExistentes(this.jDesktopPane,this.jInternalFrameDetalleFormFormaPagoPuntoVenta);
				
				if(!this.conCargarMinimo) {
					/*
					if(this.jInternalFrameReporteDinamicoFormaPagoPuntoVenta!=null) {
						MainJFrame.cerrarJInternalFramesExistentes(this.jDesktopPane,this.jInternalFrameReporteDinamicoFormaPagoPuntoVenta);	
					}
					
					if(this.jInternalFrameImportacionFormaPagoPuntoVenta!=null) {
						MainJFrame.cerrarJInternalFramesExistentes(this.jDesktopPane,this.jInternalFrameImportacionFormaPagoPuntoVenta);							
					}
					*/
				}
				
				
				if(!this.conCargarMinimo) {
					/*
					if(this.jInternalFrameOrderByFormaPagoPuntoVenta!=null) {
						MainJFrame.cerrarJInternalFramesExistentes(this.jDesktopPane,this.jInternalFrameOrderByFormaPagoPuntoVenta);					
					}
					*/
				}
			}
			
			//DETALLE DATOS
			if(this.jInternalFrameDetalleFormFormaPagoPuntoVenta!=null) { //this.conCargarFormDetalle) {
				this.jDesktopPane.add(this.jInternalFrameDetalleFormFormaPagoPuntoVenta);
				this.jInternalFrameDetalleFormFormaPagoPuntoVenta.setVisible(false);
				this.jInternalFrameDetalleFormFormaPagoPuntoVenta.setSelected(false);						
			}
			
			if(!this.conCargarMinimo) {
				/*
				//REPORTE DINAMICO
				if(this.jInternalFrameReporteDinamicoFormaPagoPuntoVenta!=null) {
					this.jDesktopPane.add(this.jInternalFrameReporteDinamicoFormaPagoPuntoVenta);
					this.jInternalFrameReporteDinamicoFormaPagoPuntoVenta.setVisible(false);
					this.jInternalFrameReporteDinamicoFormaPagoPuntoVenta.setSelected(false);
				}
				
				//IMPORTACION
				if(this.jInternalFrameImportacionFormaPagoPuntoVenta!=null) {
					this.jDesktopPane.add(this.jInternalFrameImportacionFormaPagoPuntoVenta);
					this.jInternalFrameImportacionFormaPagoPuntoVenta.setVisible(false);
					this.jInternalFrameImportacionFormaPagoPuntoVenta.setSelected(false);
				}
				
				*/
			}
			
			
			if(!this.conCargarMinimo) {
				/*
				if(this.jInternalFrameOrderByFormaPagoPuntoVenta!=null) {
					this.jDesktopPane.add(this.jInternalFrameOrderByFormaPagoPuntoVenta);
					this.jInternalFrameOrderByFormaPagoPuntoVenta.setVisible(false);
					this.jInternalFrameOrderByFormaPagoPuntoVenta.setSelected(false);				
				}
				*/
			}
			
			
			//this.esParaBusquedaForeignKey=false;
			this.esParaBusquedaForeignKey=esParaBusquedaForeignKey;
			
			this.invalidValues=new InvalidValue[0];
			
			
			
			this.idFormaPagoPuntoVentaActual=0L;
			this.rowIndexActual=0;
			
			
			this.iNumeroPaginacionPagina=0;
			this.iNumeroPaginacion=FormaPagoPuntoVentaConstantesFunciones.INUMEROPAGINACION;
			this.pagination=new Pagination();
			this.datosCliente=new DatosCliente();
			this.lIdUsuarioSesion=0L;	
			this.sTipoArchivoReporte="";
			this.sTipoArchivoReporteDinamico="";
			this.sTipoReporte="";
			this.sTipoReporteDinamico="";
			this.sTipoPaginacion="";
			this.sTipoRelacion="";
			this.sTipoAccion="";
			this.sTipoAccionFormulario="";
			this.sTipoSeleccionar="";			
			this.sDetalleReporte="";
			this.sTipoReporteExtra="";
			this.sValorCampoGeneral="";
			this.sPathReporteDinamico="";			
			
			this.isMostrarNumeroPaginacion=false;
			this.isSeleccionarTodos=false;
			this.isSeleccionados=false;
			this.conGraficoReporte=false;
			this.isPostAccionNuevo=false;
			this.isPostAccionSinCerrar=false;
			this.isPostAccionSinMensaje=false;
			this.esReporteDinamico=false;
			this.esRecargarFks=false;
			this.esReporteAccionProceso=false;
			
			this.formapagopuntoventaReturnGeneral=new FormaPagoPuntoVentaParameterReturnGeneral();
			
			this.formapagopuntoventaParameterGeneral=new FormaPagoPuntoVentaParameterReturnGeneral();
			
			
			
			this.sistemaLogicAdditional=new SistemaLogicAdditional();
			
			this.sistemaLogicAdditional.setConnexion(this.formapagopuntoventaLogic.getConnexion());			
			
			
			
			
			
			
			
			//VERIFICAR GLOBAL
			this.cargarDatosCliente();			
			
			/*
			if(!this.formapagopuntoventaSessionBean.getEsGuardarRelacionado()) {
				if(Constantes.ISUSAEJBLOGICLAYER) {	
					if(!sistemaLogicAdditional.validarLicenciaCliente(this.datosCliente,this.moduloActual,this.usuarioActual)) {
					 	this.setVisible(false);
						throw new Exception(Mensajes.SERROR_CONTROLGLOBAL);
					}
					
				} else if(Constantes.ISUSAEJBREMOTE) {
					
				} else if(Constantes.ISUSAEJBHOME) {
				}
			}			
			*/
			//VERIFICAR GLOBAL
			
			//VERIFICAR SESSION ACTUAL
			//this.cargarDatosCliente();
			
			this.sistemaReturnGeneral=new SistemaParameterReturnGeneral();
			
			SistemaParameterReturnGeneralAdditional.inicializarSinSeguridad(this.sistemaReturnGeneral);
			
			if(FormaPagoPuntoVentaJInternalFrame.CON_LLAMADA_SIMPLE) {
				if(this.formapagopuntoventaSessionBean.getEsGuardarRelacionado()) {
					this.opcionActual.setId(0L);
					
					//idOpcion=0L;					
				}
				
				ArrayList<String> arrPaginas=new ArrayList<String>();		
				ArrayList<Opcion> opcionsFinal=new ArrayList<Opcion>();	
				
		
				if(Constantes.ISUSAEJBLOGICLAYER) {	
					//this.sistemaReturnGeneral=sistemaLogicAdditional.validarCargarSesionUsuarioActualWithConnection(this.usuarioActual,this.datosCliente,this.resumenUsuarioActual,Constantes.LIDSISTEMAACTUAL,FormaPagoPuntoVentaConstantesFunciones.SNOMBREOPCION,this.opcionActual,this.formapagopuntoventaSessionBean.getEsGuardarRelacionado(),this.formapagopuntoventaSessionBean.getConGuardarRelaciones(),arrPaginas);
					
					this.sistemaReturnGeneral=sistemaLogicAdditional.validarCargarSesionUsuarioActual(this.usuarioActual,this.datosCliente,this.resumenUsuarioActual,Constantes.LIDSISTEMAACTUAL,FormaPagoPuntoVentaConstantesFunciones.SNOMBREOPCION,this.opcionActual,this.formapagopuntoventaSessionBean.getEsGuardarRelacionado(),this.formapagopuntoventaSessionBean.getConGuardarRelaciones(),arrPaginas);
					
					if(!this.sistemaReturnGeneral.getEsValidado()) {
					 	this.setVisible(false);
						throw new Exception(Mensajes.SERROR_SESIONACTUAL);
					}
				} else if(Constantes.ISUSAEJBREMOTE) {
				} else if(Constantes.ISUSAEJBHOME) {
					//FALTA
				}
			} else { 
				if(Constantes.ISUSAEJBLOGICLAYER) {	
					if(!sistemaLogicAdditional.validarSesionUsuarioActual(this.usuarioActual,this.datosCliente,this.resumenUsuarioActual)) {
					 	this.setVisible(false);
						throw new Exception(Mensajes.SERROR_SESIONACTUAL);
					}
				
				} else if(Constantes.ISUSAEJBREMOTE) {
					
				} else if(Constantes.ISUSAEJBHOME) {
				}
			} 
			//VERIFICAR SESSION ACTUAL
			
			
			this.sVisibilidadTablaBusquedas="table-row";
			this.sVisibilidadTablaElementos="none";
			this.sVisibilidadTablaAcciones="none";
			
			this.isVisibilidadCeldaNuevoFormaPagoPuntoVenta=false;
			this.isVisibilidadCeldaDuplicarFormaPagoPuntoVenta=true;
			this.isVisibilidadCeldaCopiarFormaPagoPuntoVenta=true;
			this.isVisibilidadCeldaVerFormFormaPagoPuntoVenta=true;
			this.isVisibilidadCeldaOrdenFormaPagoPuntoVenta=true;
			this.isVisibilidadCeldaNuevoRelacionesFormaPagoPuntoVenta=false;
			this.isVisibilidadCeldaModificarFormaPagoPuntoVenta=false;
			this.isVisibilidadCeldaActualizarFormaPagoPuntoVenta=false;
			this.isVisibilidadCeldaEliminarFormaPagoPuntoVenta=false;
			this.isVisibilidadCeldaCancelarFormaPagoPuntoVenta=false;
			this.isVisibilidadCeldaGuardarFormaPagoPuntoVenta=false;
			this.isVisibilidadCeldaGuardarCambiosFormaPagoPuntoVenta=false;
			
			
			this.isVisibilidadFK_IdAnio=true;
			this.isVisibilidadFK_IdAsientoContable=true;
			this.isVisibilidadFK_IdBanco=true;
			this.isVisibilidadFK_IdBancoTarjeta=true;
			this.isVisibilidadFK_IdConexion=true;
			this.isVisibilidadFK_IdCuentaBancoPunVen=true;
			this.isVisibilidadFK_IdCuentaContable=true;
			this.isVisibilidadFK_IdEjercicio=true;
			this.isVisibilidadFK_IdEmpresa=true;
			this.isVisibilidadFK_IdFacturaPuntoVenta=true;
			this.isVisibilidadFK_IdMes=true;
			this.isVisibilidadFK_IdPeriodo=true;
			this.isVisibilidadFK_IdSucursal=true;
			this.isVisibilidadFK_IdTarjetaCredito=true;
			this.isVisibilidadFK_IdTipoFormaPago=true;
			this.isVisibilidadFK_IdTipoInteresTarjeta=true;
			this.isVisibilidadFK_IdTipoPagoTarjeta=true;
			this.isVisibilidadFK_IdTipoRiesgoCheque=true;
			
			//ELEMENTOS TABLAS PARAMETOS
			
			
			
			//ELEMENTOS TABLAS PARAMETOS_FIN
			
			//this.actualizarEstadoCeldasBotonesFormaPagoPuntoVenta("n", isGuardarCambiosEnLote, isEsMantenimientoRelacionado);
						
			
			
			this.inicializarPermisosFormaPagoPuntoVenta();
			
			//INICIALIZAR FALSE, TALVEZ COMENTAR
			this.setPermisosUsuarioFormaPagoPuntoVenta(false);
			
			this.setPermisosUsuarioFormaPagoPuntoVenta();
			
			
			
			//FUNCIONALIDAD_RELACIONADO
			if(!this.formapagopuntoventaSessionBean.getEsGuardarRelacionado() 
				|| (this.formapagopuntoventaSessionBean.getEsGuardarRelacionado() && this.formapagopuntoventaSessionBean.getConGuardarRelaciones())) {
				
				this.inicializarSetPermisosUsuarioFormaPagoPuntoVentaClasesRelacionadas();
			}
			
			if(this.formapagopuntoventaSessionBean.getConGuardarRelaciones()) {
				this.actualizarTabsSetPermisosUsuarioFormaPagoPuntoVentaClasesRelacionadas();
			}
			
			
			
			//SOLO SE EJECUTA LA PRIMERA VEZ, BINDINGS SI FUNCIONA
			if(!FormaPagoPuntoVentaJInternalFrame.ISBINDING_MANUAL) {
				this.inicializarActualizarBindingBotonesPermisosFormaPagoPuntoVenta();
			} else {
				this.inicializarActualizarBindingBotonesPermisosManualFormaPagoPuntoVenta();
			}
			
			if(!this.isPermisoBusquedaFormaPagoPuntoVenta) {
				//BYDAN_BUSQUEDAS
				/*
				this.jTabbedPaneBusquedasFormaPagoPuntoVenta.setVisible(false);				
				*/
			}
			
			
			
			//FUNCIONALIDAD_RELACIONADO
			if(!this.formapagopuntoventaSessionBean.getEsGuardarRelacionado()) {				
				this.tiposArchivosReportes=Funciones.getListTiposArchivosReportes();
				this.tiposArchivosReportesDinamico=Funciones.getListTiposArchivosReportes();
				this.tiposReportes=Funciones.getListTiposReportes(true);
				this.tiposReportesDinamico=Funciones.getListTiposReportesDinamico(true);
				
				
				
				this.tiposGraficosReportes=Funciones2.getListTiposGraficosReportes();
				this.tiposPaginacion=Funciones2.getListTiposPaginacion(this.isPermisoPaginacionMedioFormaPagoPuntoVenta,this.isPermisoPaginacionMedioFormaPagoPuntoVenta,this.isPermisoPaginacionTodoFormaPagoPuntoVenta);
				this.tiposSeleccionar=Funciones2.getListTiposSeleccionar();
				this.tiposSeleccionar.addAll(FormaPagoPuntoVentaConstantesFunciones.getTiposSeleccionarFormaPagoPuntoVenta());
				
				this.tiposColumnasSelect=FormaPagoPuntoVentaConstantesFunciones.getTiposSeleccionarFormaPagoPuntoVenta(true);
				
				this.tiposRelacionesSelect=new ArrayList<Reporte>();								
				
				
			} else {
				this.tiposArchivosReportes=new ArrayList<Reporte>();
				this.tiposArchivosReportesDinamico=new ArrayList<Reporte>();
				this.tiposReportes=new ArrayList<Reporte>();
				this.tiposReportesDinamico=new ArrayList<Reporte>();
				this.tiposGraficosReportes=new ArrayList<Reporte>();
				this.tiposPaginacion=new ArrayList<Reporte>();
				this.tiposSeleccionar=new ArrayList<Reporte>();			
				this.tiposColumnasSelect=new ArrayList<Reporte>();	
				this.tiposRelacionesSelect=new ArrayList<Reporte>();	
			}
						
			
			//FUNCIONALIDAD_RELACIONADO
			//if(!this.formapagopuntoventaSessionBean.getEsGuardarRelacionado()) {
				//SE ENCUENTRA MAS ADELANTE CON ACCIONES POR USUARIO
				//ACCIONES GENERALES Y POR USUARIO
				this.tiposRelaciones=Funciones2.getListTiposRelaciones();
				this.setRelacionesUsuarioFormaPagoPuntoVenta();
				
				this.tiposAcciones=Funciones2.getListTiposAcciones(true,false,true);
				this.setAccionesUsuarioFormaPagoPuntoVenta(false);	
				
				this.tiposAccionesFormulario=Funciones2.getListTiposAccionesFormulario(true,false,true);							
				this.setAccionesUsuarioFormaPagoPuntoVenta(true);	
				
				this.inicializarActualizarBindingtiposArchivosReportesAccionesFormaPagoPuntoVenta() ;
			
			/*
			} else {
				this.tiposAcciones=new ArrayList<Reporte>();
				this.tiposAccionesFormulario=new ArrayList<Reporte>();
			}
			*/						
			
			this.inicializarInvalidValues();
						
			this.arrDatoGeneral= new  ArrayList<DatoGeneral>();
			this.arrDatoGeneralNo= new  ArrayList<String>();
			
			
			/*
			this.arrOrderBy= new  ArrayList<OrderBy>();
			*/
			
			this.arrDatoGeneralMinimos= new  ArrayList<DatoGeneralMinimo>();
			
			/*
			this.traerValoresTablaOrderBy();			
			*/
			
			this.isGuardarCambiosEnLote=false;
			this.isCargarCombosDependencia=false;
			
			 
			jasperPrint = null;												
			
			//FK
			
			this.empresaLogic=new EmpresaLogic();
			this.sucursalLogic=new SucursalLogic();
			this.ejercicioLogic=new EjercicioLogic();
			this.periodoLogic=new PeriodoLogic();
			this.facturapuntoventaLogic=new FacturaPuntoVentaLogic();
			this.tipoformapagoLogic=new TipoFormaPagoLogic();
			this.bancoLogic=new BancoLogic();
			this.cuentabancopunvenLogic=new CuentaBancoPunVenLogic();
			this.tiporiesgochequeLogic=new TipoRiesgoChequeLogic();
			this.bancotarjetaLogic=new BancoLogic();
			this.tarjetacreditoLogic=new TarjetaCreditoLogic();
			this.tipointerestarjetaLogic=new TipoInteresTarjetaLogic();
			this.tipopagotarjetaLogic=new TipoPagoTarjetaLogic();
			this.conexionLogic=new ConexionLogic();
			this.mesLogic=new MesLogic();
			this.anioLogic=new AnioLogic();
			this.cuentacontableLogic=new CuentaContableLogic();
			this.asientocontableLogic=new AsientoContableLogic();
			
			//PARAMETROS
			
			
			/*
			if(Constantes.ISUSAEJBREMOTE || Constantes.ISUSAEJBHOME) {		
				hashtableEnv =  Funciones.getHashtableEnv();		
				initialContext = new InitialContext(hashtableEnv);	
			}
			*/
			/*
			if(Constantes.ISUSAEJBREMOTE) {
				formapagopuntoventaImplementable= (FormaPagoPuntoVentaImplementable) initialContext.lookup(Constantes.SEJBPACKAGE+Constantes.SEJBSEPARATOR+FormaPagoPuntoVentaConstantesFunciones.SEJBNAME+Constantes.SEJBSEPARATOR+Constantes.SEJBREMOTE);
			} else if(Constantes.ISUSAEJBHOME) {
				formapagopuntoventaImplementableHome= (FormaPagoPuntoVentaImplementableHome) initialContext.lookup(Constantes.SEJBPACKAGE+Constantes.SEJBSEPARATOR+FormaPagoPuntoVentaConstantesFunciones.SEJBNAME+Constantes.SEJBSEPARATOR+Constantes.SEJBLOCAL);
			}			
			*/
			
			
			this.formapagopuntoventas= new ArrayList<FormaPagoPuntoVenta>();
			this.formapagopuntoventasEliminados= new ArrayList<FormaPagoPuntoVenta>();
						
			this.isEsNuevoFormaPagoPuntoVenta=false;
			this.esParaAccionDesdeFormularioFormaPagoPuntoVenta=false;
			this.isEsMantenimientoRelacionesRelacionadoUnico=false;
			this.isEsMantenimientoRelaciones=false;
			this.isEsMantenimientoRelacionado=false;
			this.isContieneImagenes=false;
			
			
			
			
			//BUSQUEDA INTERNA FK
			this.idCuentaContableActual=0L;
			this.idAsientoContableActual=0L;
			
			//INICIALIZAR LISTAS FK
			
			this.empresasForeignKey=new ArrayList<Empresa>() ;
			this.sucursalsForeignKey=new ArrayList<Sucursal>() ;
			this.ejerciciosForeignKey=new ArrayList<Ejercicio>() ;
			this.periodosForeignKey=new ArrayList<Periodo>() ;
			this.facturapuntoventasForeignKey=new ArrayList<FacturaPuntoVenta>() ;
			this.tipoformapagosForeignKey=new ArrayList<TipoFormaPago>() ;
			this.bancosForeignKey=new ArrayList<Banco>() ;
			this.cuentabancopunvensForeignKey=new ArrayList<CuentaBancoPunVen>() ;
			this.tiporiesgochequesForeignKey=new ArrayList<TipoRiesgoCheque>() ;
			this.bancotarjetasForeignKey=new ArrayList<Banco>() ;
			this.tarjetacreditosForeignKey=new ArrayList<TarjetaCredito>() ;
			this.tipointerestarjetasForeignKey=new ArrayList<TipoInteresTarjeta>() ;
			this.tipopagotarjetasForeignKey=new ArrayList<TipoPagoTarjeta>() ;
			this.conexionsForeignKey=new ArrayList<Conexion>() ;
			this.messForeignKey=new ArrayList<Mes>() ;
			this.aniosForeignKey=new ArrayList<Anio>() ;
			this.cuentacontablesForeignKey=new ArrayList<CuentaContable>() ;
			this.asientocontablesForeignKey=new ArrayList<AsientoContable>() ;
			
			
			
			
			if(blncargarCombostrForeignKey) {
				this.cargarCombosForeignKeyFormaPagoPuntoVenta(this.isCargarCombosDependencia);
			}
			
			this.cargarCombosParametroFormaPagoPuntoVenta();
			
			
			
			
			
			//FUNCIONALIDAD_RELACIONADO
			if(!this.formapagopuntoventaSessionBean.getEsGuardarRelacionado()) {
				this.onLoad();
			}
						
			FormaPagoPuntoVentaBeanSwingJInternalFrameAdditional.RecargarVentanaSegunOpcion(this,opcionActual);
			
			/*
			if(blnCargarInformacionInicial) {
				this.recargarInformacion();
			}
			*/
			//this.iNumeroPaginacionPagina=0;
			//this.iNumeroPaginacion=FormaPagoPuntoVentaConstantesFunciones.INUMEROPAGINACION;
			
			this.actualizarEstadoCeldasBotonesFormaPagoPuntoVenta("n", isGuardarCambiosEnLote, isEsMantenimientoRelacionado);
			//SOLO LA PRIMERA VEZ HACE LOS BINDINGS, SOLO AHI FUNCIONA
			this.inicializarActualizarBindingFormaPagoPuntoVenta(true); 
			
			//SE REDIMENSIONA SINO NO SE ACTUALIZA
			this.redimensionarTablaDatos();
			
			
			this.initActions();
			
			;
						
			if(this.jInternalFrameDetalleFormFormaPagoPuntoVenta!=null) {//if(this.conCargarFormDetalle) {
				this.cargarMenuRelaciones();
			}
			
			//OBLIGA CARGAR DETALLE, MEJOR DESHABILITAR, FALTA TALVEZ PONER EN SELECCIONAR
			//MAYBE
			//this.updateControlesFormularioFormaPagoPuntoVenta();
			
			if(!this.conCargarMinimo) {
				this.updateBusquedasFormularioFormaPagoPuntoVenta();
			}
			
			FormaPagoPuntoVentaBeanSwingJInternalFrameAdditional.CargaInicial(this, "NORMAL", null);
			
			
			//SE REALIZA ESTO PARA QUE SE PUEDA RECORRER TAB SIN IMPORTAR ORDEN
			Boolean existeTabBusqueda=false;
			
			if(!this.conCargarMinimo) {
				//BYDAN_BUSQUEDAS
				/*
				
				for(int i=0; i<this.jTabbedPaneBusquedasFormaPagoPuntoVenta.getTabCount(); i++) {
					this.jTabbedPaneBusquedasFormaPagoPuntoVenta.setSelectedIndex(i);
						
					if(!existeTabBusqueda) {
						existeTabBusqueda=true;
					}
				}
					
				if(existeTabBusqueda) {
					this.jTabbedPaneBusquedasFormaPagoPuntoVenta.setSelectedIndex(0);
				}	
				
				*/
			}
			
			
			if(Constantes.ISUSAEJBLOGICLAYER) {
				this.formapagopuntoventaLogic.commitNewConnexionToDeep();
			}
			
			
			if(Constantes2.ISDEVELOPING2) {
				end_time = System.currentTimeMillis();			
				String sTipo="Load Ventana";
				Funciones2.getMensajeTiempoEjecucion(start_time, end_time, sTipo,false);
			}  
			
			this.finishProcessFormaPagoPuntoVenta(true);
			
			this.dEnd=(double)System.currentTimeMillis();
			
			this.dDif=this.dEnd - this.dStart;
			
			if(Constantes.ISDEVELOPING) {
				System.out.println("Tiempo(ms) Carga FormaPagoPuntoVenta: " + this.dDif); 
			}
			
			this.permiteRecargarForm=true;
			
		} catch(Exception e) {
			
			if(Constantes.ISUSAEJBLOGICLAYER) {
				this.formapagopuntoventaLogic.rollbackNewConnexionToDeep();
			}
			
			FuncionesSwing.manageException(this, e,logger,FormaPagoPuntoVentaConstantesFunciones.CLASSNAME);
		
		} finally {
			if(Constantes.ISUSAEJBLOGICLAYER) {
				this.formapagopuntoventaLogic.closeNewConnexionToDeep();
			}
		}	 
    }
	
	public void cargarTiposRelacionesSelectFormaPagoPuntoVenta() {
		Reporte reporte=new Reporte();
		
	
	}
	
	
	
	public void jTabbedPaneChangeListenerGeneral(String sTipo,ChangeEvent evt) { 	  
		Boolean procesaCargarParteTab=false;
			
		try {
			int iIndex=0;		    			
			String sTitle="";
			
			//TABBED PANE RELACIONES
			if(sTipo.equals("RelacionesFormaPagoPuntoVenta")) {
				iIndex=this.jInternalFrameDetalleFormFormaPagoPuntoVenta.jTabbedPaneRelacionesFormaPagoPuntoVenta.getSelectedIndex();		    
			
				sTitle=this.jInternalFrameDetalleFormFormaPagoPuntoVenta.jTabbedPaneRelacionesFormaPagoPuntoVenta.getTitleAt(iIndex);
				
				Integer intSelectedRow = 0;	
			
				intSelectedRow = this.jTableDatosFormaPagoPuntoVenta.getSelectedRow();	
				
				
				
			}
			
			//TABBED PANE RELACIONES FIN(EXTRA TAB)
			;
			
  		} catch(Exception e) {
  			e.printStackTrace();
  		} finally {
			if(procesaCargarParteTab) {				
				this.finishProcessFormaPagoPuntoVenta();	
			}
		}
    }
	
	
	
	public void jButtonRelacionActionPerformedGeneral(String sTipo,ActionEvent evt) { 	  
		try {
			
  		} catch(Exception e) {
  			e.printStackTrace();
  		}
    }
	
	public void cargarMenuRelaciones() {	
		JMenuItem jmenuItem= new JMenuItem("General");
		String sLabelMenu="";
		
	}		
	
	public void cargarCombosForeignKeyFormaPagoPuntoVenta(Boolean cargarCombosDependencia) throws Exception {   
		this.cargarCombosForeignKeyFormaPagoPuntoVenta(cargarCombosDependencia,true,true);
	}
	
	//CARGAR COMBOS EN LOTE
	public void cargarCombosForeignKeyFormaPagoPuntoVenta(Boolean cargarCombosDependencia,Boolean conInitActions,Boolean conSetVariablesGlobales) throws Exception {   
		this.cargarCombosTodosForeignKeyFormaPagoPuntoVentaListas(cargarCombosDependencia);
				
		this.addItemDefectoCombosTodosForeignKeyFormaPagoPuntoVenta();
		
		this.cargarCombosFrameForeignKeyFormaPagoPuntoVenta();						
		
		if(conInitActions) {
			this.initActionsCombosTodosForeignKeyFormaPagoPuntoVenta();
		}
		
		if(conSetVariablesGlobales) {
			this.setVariablesGlobalesCombosForeignKeyFormaPagoPuntoVenta();
		}
	}
	
	

	public void cargarCombosForeignKeyFacturaPuntoVenta(Boolean cargarCombosDependencia,Boolean conInitActions,Boolean conSetVariablesGlobales,String sFinalQueryCombo,String sFormularioTipoBusqueda) throws Exception {
		try {
				this.cargarCombosForeignKeyFacturaPuntoVentaListas(cargarCombosDependencia,sFinalQueryCombo);
				this.addItemDefectoCombosForeignKeyFacturaPuntoVenta();
				this.cargarCombosFrameFacturaPuntoVentasForeignKey(sFormularioTipoBusqueda);

				if(conInitActions) {
				}

			this.recargarComboTablaFacturaPuntoVenta(this.facturapuntoventasForeignKey);

		} catch(Exception e) {
			throw e;
		}
	}

	public void cargarCombosForeignKeyTipoFormaPago(Boolean cargarCombosDependencia,Boolean conInitActions,Boolean conSetVariablesGlobales,String sFinalQueryCombo,String sFormularioTipoBusqueda) throws Exception {
		try {
				this.cargarCombosForeignKeyTipoFormaPagoListas(cargarCombosDependencia,sFinalQueryCombo);
				this.addItemDefectoCombosForeignKeyTipoFormaPago();
				this.cargarCombosFrameTipoFormaPagosForeignKey(sFormularioTipoBusqueda);

				if(conInitActions) {
					this.initActionsCombosForeignKeyTipoFormaPago("Todos");
				}

			this.recargarComboTablaTipoFormaPago(this.tipoformapagosForeignKey);

		} catch(Exception e) {
			throw e;
		}
	}

	public void cargarCombosForeignKeyBanco(Boolean cargarCombosDependencia,Boolean conInitActions,Boolean conSetVariablesGlobales,String sFinalQueryCombo,String sFormularioTipoBusqueda) throws Exception {
		try {
				this.cargarCombosForeignKeyBancoListas(cargarCombosDependencia,sFinalQueryCombo);
				this.addItemDefectoCombosForeignKeyBanco();
				this.cargarCombosFrameBancosForeignKey(sFormularioTipoBusqueda);

				if(conInitActions) {
					this.initActionsCombosForeignKeyTipoFormaPago("Todos");
				}

			this.recargarComboTablaBanco(this.bancosForeignKey);

		} catch(Exception e) {
			throw e;
		}
	}

	public void cargarCombosForeignKeyCuentaBancoPunVen(Boolean cargarCombosDependencia,Boolean conInitActions,Boolean conSetVariablesGlobales,String sFinalQueryCombo,String sFormularioTipoBusqueda) throws Exception {
		try {
				this.cargarCombosForeignKeyCuentaBancoPunVenListas(cargarCombosDependencia,sFinalQueryCombo);
				this.addItemDefectoCombosForeignKeyCuentaBancoPunVen();
				this.cargarCombosFrameCuentaBancoPunVensForeignKey(sFormularioTipoBusqueda);

				if(conInitActions) {
					this.initActionsCombosForeignKeyTipoFormaPago("Todos");
				}

			this.recargarComboTablaCuentaBancoPunVen(this.cuentabancopunvensForeignKey);

		} catch(Exception e) {
			throw e;
		}
	}

	public void cargarCombosForeignKeyTipoRiesgoCheque(Boolean cargarCombosDependencia,Boolean conInitActions,Boolean conSetVariablesGlobales,String sFinalQueryCombo,String sFormularioTipoBusqueda) throws Exception {
		try {
				this.cargarCombosForeignKeyTipoRiesgoChequeListas(cargarCombosDependencia,sFinalQueryCombo);
				this.addItemDefectoCombosForeignKeyTipoRiesgoCheque();
				this.cargarCombosFrameTipoRiesgoChequesForeignKey(sFormularioTipoBusqueda);

				if(conInitActions) {
					this.initActionsCombosForeignKeyTipoFormaPago("Todos");
				}

			this.recargarComboTablaTipoRiesgoCheque(this.tiporiesgochequesForeignKey);

		} catch(Exception e) {
			throw e;
		}
	}

	public void cargarCombosForeignKeyBancoTarjeta(Boolean cargarCombosDependencia,Boolean conInitActions,Boolean conSetVariablesGlobales,String sFinalQueryCombo,String sFormularioTipoBusqueda) throws Exception {
		try {
				this.cargarCombosForeignKeyBancoTarjetaListas(cargarCombosDependencia,sFinalQueryCombo);
				this.addItemDefectoCombosForeignKeyBancoTarjeta();
				this.cargarCombosFrameBancoTarjetasForeignKey(sFormularioTipoBusqueda);

				if(conInitActions) {
					this.initActionsCombosForeignKeyTipoFormaPago("Todos");
				}

			this.recargarComboTablaBancoTarjeta(this.bancotarjetasForeignKey);

		} catch(Exception e) {
			throw e;
		}
	}

	public void cargarCombosForeignKeyTarjetaCredito(Boolean cargarCombosDependencia,Boolean conInitActions,Boolean conSetVariablesGlobales,String sFinalQueryCombo,String sFormularioTipoBusqueda) throws Exception {
		try {
				this.cargarCombosForeignKeyTarjetaCreditoListas(cargarCombosDependencia,sFinalQueryCombo);
				this.addItemDefectoCombosForeignKeyTarjetaCredito();
				this.cargarCombosFrameTarjetaCreditosForeignKey(sFormularioTipoBusqueda);

				if(conInitActions) {
					this.initActionsCombosForeignKeyTipoFormaPago("Todos");
				}

			this.recargarComboTablaTarjetaCredito(this.tarjetacreditosForeignKey);

		} catch(Exception e) {
			throw e;
		}
	}

	public void cargarCombosForeignKeyTipoInteresTarjeta(Boolean cargarCombosDependencia,Boolean conInitActions,Boolean conSetVariablesGlobales,String sFinalQueryCombo,String sFormularioTipoBusqueda) throws Exception {
		try {
				this.cargarCombosForeignKeyTipoInteresTarjetaListas(cargarCombosDependencia,sFinalQueryCombo);
				this.addItemDefectoCombosForeignKeyTipoInteresTarjeta();
				this.cargarCombosFrameTipoInteresTarjetasForeignKey(sFormularioTipoBusqueda);

				if(conInitActions) {
					this.initActionsCombosForeignKeyTipoFormaPago("Todos");
				}

			this.recargarComboTablaTipoInteresTarjeta(this.tipointerestarjetasForeignKey);

		} catch(Exception e) {
			throw e;
		}
	}

	public void cargarCombosForeignKeyTipoPagoTarjeta(Boolean cargarCombosDependencia,Boolean conInitActions,Boolean conSetVariablesGlobales,String sFinalQueryCombo,String sFormularioTipoBusqueda) throws Exception {
		try {
				this.cargarCombosForeignKeyTipoPagoTarjetaListas(cargarCombosDependencia,sFinalQueryCombo);
				this.addItemDefectoCombosForeignKeyTipoPagoTarjeta();
				this.cargarCombosFrameTipoPagoTarjetasForeignKey(sFormularioTipoBusqueda);

				if(conInitActions) {
					this.initActionsCombosForeignKeyTipoFormaPago("Todos");
				}

			this.recargarComboTablaTipoPagoTarjeta(this.tipopagotarjetasForeignKey);

		} catch(Exception e) {
			throw e;
		}
	}

	public void cargarCombosForeignKeyConexion(Boolean cargarCombosDependencia,Boolean conInitActions,Boolean conSetVariablesGlobales,String sFinalQueryCombo,String sFormularioTipoBusqueda) throws Exception {
		try {
				this.cargarCombosForeignKeyConexionListas(cargarCombosDependencia,sFinalQueryCombo);
				this.addItemDefectoCombosForeignKeyConexion();
				this.cargarCombosFrameConexionsForeignKey(sFormularioTipoBusqueda);

				if(conInitActions) {
					this.initActionsCombosForeignKeyTipoFormaPago("Todos");
				}

			this.recargarComboTablaConexion(this.conexionsForeignKey);

		} catch(Exception e) {
			throw e;
		}
	}

	public void cargarCombosForeignKeyMes(Boolean cargarCombosDependencia,Boolean conInitActions,Boolean conSetVariablesGlobales,String sFinalQueryCombo,String sFormularioTipoBusqueda) throws Exception {
		try {
				this.cargarCombosForeignKeyMesListas(cargarCombosDependencia,sFinalQueryCombo);
				this.addItemDefectoCombosForeignKeyMes();
				this.cargarCombosFrameMessForeignKey(sFormularioTipoBusqueda);

				if(conInitActions) {
					this.initActionsCombosForeignKeyTipoFormaPago("Todos");
				}

			this.recargarComboTablaMes(this.messForeignKey);

		} catch(Exception e) {
			throw e;
		}
	}

	public void cargarCombosForeignKeyAnio(Boolean cargarCombosDependencia,Boolean conInitActions,Boolean conSetVariablesGlobales,String sFinalQueryCombo,String sFormularioTipoBusqueda) throws Exception {
		try {
				this.cargarCombosForeignKeyAnioListas(cargarCombosDependencia,sFinalQueryCombo);
				this.addItemDefectoCombosForeignKeyAnio();
				this.cargarCombosFrameAniosForeignKey(sFormularioTipoBusqueda);

				if(conInitActions) {
					this.initActionsCombosForeignKeyTipoFormaPago("Todos");
				}

			this.recargarComboTablaAnio(this.aniosForeignKey);

		} catch(Exception e) {
			throw e;
		}
	}

	public void cargarCombosForeignKeyCuentaContable(Boolean cargarCombosDependencia,Boolean conInitActions,Boolean conSetVariablesGlobales,String sFinalQueryCombo,String sFormularioTipoBusqueda) throws Exception {
		try {
				this.cargarCombosForeignKeyCuentaContableListas(cargarCombosDependencia,sFinalQueryCombo);
				this.addItemDefectoCombosForeignKeyCuentaContable();
				this.cargarCombosFrameCuentaContablesForeignKey(sFormularioTipoBusqueda);

				if(conInitActions) {
					this.initActionsCombosForeignKeyTipoFormaPago("Todos");
				}

			this.recargarComboTablaCuentaContable(this.cuentacontablesForeignKey);

		} catch(Exception e) {
			throw e;
		}
	}

	public void cargarCombosForeignKeyAsientoContable(Boolean cargarCombosDependencia,Boolean conInitActions,Boolean conSetVariablesGlobales,String sFinalQueryCombo,String sFormularioTipoBusqueda) throws Exception {
		try {
				this.cargarCombosForeignKeyAsientoContableListas(cargarCombosDependencia,sFinalQueryCombo);
				this.addItemDefectoCombosForeignKeyAsientoContable();
				this.cargarCombosFrameAsientoContablesForeignKey(sFormularioTipoBusqueda);

				if(conInitActions) {
					this.initActionsCombosForeignKeyTipoFormaPago("Todos");
				}

			this.recargarComboTablaAsientoContable(this.asientocontablesForeignKey);

		} catch(Exception e) {
			throw e;
		}
	}
	
	public void jButtonNuevoFormaPagoPuntoVentaActionPerformed(ActionEvent evt,Boolean esRelaciones) throws Exception {   
		try {
			EventoGlobalTipo eventoGlobalTipo=EventoGlobalTipo.FORM_RECARGAR;
			String sTipo="NUEVO_NORMAL";
			
			this.estaModoNuevo=true;
			
			if(this.formapagopuntoventaSessionBean.getConGuardarRelaciones()) {
				this.dStart=(double)System.currentTimeMillis();
			}
				
			//if(this.esUsoDesdeHijo) {
			//	eventoGlobalTipo=EventoGlobalTipo.FORM_HIJO_ACTUALIZAR;
			//}
											
			if(this.jInternalFrameDetalleFormFormaPagoPuntoVenta==null) { //if(!this.conCargarFormDetalle) {
				this.inicializarFormDetalle();
			}			
				
			FormaPagoPuntoVentaBeanSwingJInternalFrameAdditional.procesarEventosVista(this.parametroGeneralUsuario,this.moduloActual,this.opcionActual,this.usuarioActual,this,FuncionTipo.BEFORE,ControlTipo.FORM,EventoTipo.LOAD,EventoSubTipo.NEW,"FORM",this.formapagopuntoventa,new Object(),this.formapagopuntoventaParameterGeneral,this.formapagopuntoventaReturnGeneral);
			
			
			if(jTableDatosFormaPagoPuntoVenta.getRowCount()>=1) {
				jTableDatosFormaPagoPuntoVenta.removeRowSelectionInterval(0, jTableDatosFormaPagoPuntoVenta.getRowCount()-1);						
			}
			
			this.isEsNuevoFormaPagoPuntoVenta=true;
			
			//ESTABLECE SI ES RELACIONADO O NO 
			this.habilitarDeshabilitarTipoMantenimientoFormaPagoPuntoVenta(esRelaciones);
			
			this.nuevoPreparar(false); 
			this.habilitarDeshabilitarControlesFormaPagoPuntoVenta(true);			
			//this.formapagopuntoventa=new FormaPagoPuntoVenta();
			//this.formapagopuntoventa.setIsChanged(true);
			
			//NO FUNCIONA BINDINGS
			this.inicializarActualizarBindingBotonesFormaPagoPuntoVenta(false) ;						
			 
			//SI ES MANUAL
			//this.inicializarActualizarBindingBotonesManualFormaPagoPuntoVenta() ;
			
			if(FormaPagoPuntoVentaJInternalFrame.CON_DATOS_FRAME) {
				this.abrirFrameDetalleFormaPagoPuntoVenta(esRelaciones);
			}
					
			//Se Duplica, sin sentido
			//this.actualizarInformacion("EVENTO_NUEVO",false,this.formapagopuntoventa);	
			this.actualizarInformacion("INFO_PADRE",false,this.formapagopuntoventa);				
			
			FormaPagoPuntoVentaBeanSwingJInternalFrameAdditional.procesarEventosVista(this.parametroGeneralUsuario,this.moduloActual,this.opcionActual,this.usuarioActual,this,FuncionTipo.AFTER,ControlTipo.FORM,EventoTipo.LOAD,EventoSubTipo.NEW,"FORM",this.formapagopuntoventa,new Object(),this.formapagopuntoventaParameterGeneral,this.formapagopuntoventaReturnGeneral);
			
			if(this.formapagopuntoventaSessionBean.getConGuardarRelaciones()) {
				this.dEnd=(double)System.currentTimeMillis();					
				this.dDif=this.dEnd - this.dStart;
					
				if(Constantes.ISDEVELOPING) {
					System.out.println("Tiempo(ms) Nuevo Preparar FormaPagoPuntoVenta: " + this.dDif); 
				}
			}
			
			//false para que pueda generar eventos
			this.estaModoNuevo=false;
							
			//Con this.estaModoNuevo=false;, se permite actualizar y usar eventos control al mismo tiempo (FuncionTipo.LAST)			
			FormaPagoPuntoVentaBeanSwingJInternalFrameAdditional.procesarEventosVista(this.parametroGeneralUsuario,this.moduloActual,this.opcionActual,this.usuarioActual,this,FuncionTipo.LAST,ControlTipo.FORM,EventoTipo.CLIC,EventoSubTipo.NEW,sTipo,this.formapagopuntoventa,new Object(),this.formapagopuntoventaParameterGeneral,this.formapagopuntoventaReturnGeneral);
			
		} catch(Exception e) {									
			FuncionesSwing.manageException(this, e,logger,FormaPagoPuntoVentaConstantesFunciones.CLASSNAME);
			
		} finally {
			this.estaModoNuevo=false;			
		}
	}
	
	public void jButtonDuplicarFormaPagoPuntoVentaActionPerformed(ActionEvent evt,Boolean esRelaciones) throws Exception {   
		try {
			Boolean soloDuplicarUno=false;
			Boolean conSeleccionarFilaTabla=false;
			
			this.estaModoNuevo=true;
			this.estaModoDuplicar=true;
			
			ArrayList<FormaPagoPuntoVenta> formapagopuntoventasSeleccionados=new ArrayList<FormaPagoPuntoVenta>();
			int intSelectedRow =-1;
			Integer iNumRowsSeleccionados=0;
			int[] arrNumRowsSeleccionados=null;
			
			//NO SE TOMA EN CUENTA, SI LOS SELECCIONADOS
			if(conSeleccionarFilaTabla) {
				arrNumRowsSeleccionados=this.jTableDatosFormaPagoPuntoVenta.getSelectedRows();
				iNumRowsSeleccionados=this.jTableDatosFormaPagoPuntoVenta.getSelectedRows().length;			
			}
			
			formapagopuntoventasSeleccionados=this.getFormaPagoPuntoVentasSeleccionados(false);
				
			if((soloDuplicarUno && iNumRowsSeleccionados.equals(1)) || !soloDuplicarUno) {
				//LO HACE NUEVOPREPARAR
				//this.iIdNuevoFormaPagoPuntoVenta--;			
				//FormaPagoPuntoVenta formapagopuntoventaAux= new FormaPagoPuntoVenta();			
				//formapagopuntoventaAux.setId(this.iIdNuevoFormaPagoPuntoVenta);																
				
				//NO SE TOMA EN CUENTA, SI LOS SELECCIONADOS
				//FormaPagoPuntoVenta formapagopuntoventaOrigen=new FormaPagoPuntoVenta();
				//for(Integer iNumRowSeleccionado:arrNumRowsSeleccionados) {				
				
				for(FormaPagoPuntoVenta formapagopuntoventaOrigen : formapagopuntoventasSeleccionados) {
					if(conSeleccionarFilaTabla) {
						if(!soloDuplicarUno) {
							//NO SE TOMA EN CUENTA, SI LOS SELECCIONADOS
							//intSelectedRow =iNumRowSeleccionado;
						} else {
							intSelectedRow = this.jTableDatosFormaPagoPuntoVenta.getSelectedRow();
						}
						
						//ARCHITECTURE
						if(Constantes.ISUSAEJBLOGICLAYER) {
							formapagopuntoventaOrigen =(FormaPagoPuntoVenta) this.formapagopuntoventaLogic.getFormaPagoPuntoVentas().toArray()[this.jTableDatosFormaPagoPuntoVenta.convertRowIndexToModel(intSelectedRow)];
						} else if(Constantes.ISUSAEJBREMOTE || Constantes.ISUSAEJBHOME) {
							formapagopuntoventaOrigen =(FormaPagoPuntoVenta) this.formapagopuntoventas.toArray()[this.jTableDatosFormaPagoPuntoVenta.convertRowIndexToModel(intSelectedRow)];
						}
					}
					
					this.aumentarTamanioFilaNuevaTablaFormaPagoPuntoVenta();
					
					if(this.conTotales) {
						this.quitarFilaTotales();
					}
					
					this.nuevoPreparar(true);
					
					this.formapagopuntoventa.setsType("DUPLICADO");
					
					this.setCopiarVariablesObjetosFormaPagoPuntoVenta(formapagopuntoventaOrigen,this.formapagopuntoventa,true,true);
					
					this.setVariablesFormularioToObjetoActualForeignKeysFormaPagoPuntoVenta(this.formapagopuntoventa);
					
					//LO HACE NUEVOPREPARAR
					/*
					if(Constantes.ISUSAEJBLOGICLAYER) {				
						this.formapagopuntoventaLogic.getFormaPagoPuntoVentas().add(this.formapagopuntoventaAux);
					} else if(Constantes.ISUSAEJBREMOTE||Constantes.ISUSAEJBHOME) {
						this.formapagopuntoventas.add(this.formapagopuntoventaAux);				
					}
					*/
				}
				
				this.inicializarActualizarBindingTablaFormaPagoPuntoVenta(false);
				
				this.jTableDatosFormaPagoPuntoVenta.setRowSelectionInterval(this.getIndiceNuevoFormaPagoPuntoVenta(), this.getIndiceNuevoFormaPagoPuntoVenta());
				
				int iLastRow =  this.jTableDatosFormaPagoPuntoVenta.getRowCount () - 1;
				Rectangle rectangle = this.jTableDatosFormaPagoPuntoVenta.getCellRect(iLastRow, 0, true);
				
				this.jTableDatosFormaPagoPuntoVenta.scrollRectToVisible(rectangle);
				
				//FILA TOTALES
				if(this.conTotales) {
					this.crearFilaTotales();
					
					this.inicializarActualizarBindingTablaFormaPagoPuntoVenta(false);
				}
			} else {
				throw new Exception("DEBE ESTAR SELECCIONADO 1 REGISTRO");
			}
			
		} catch(Exception e) {			
			FuncionesSwing.manageException(this, e,logger,FormaPagoPuntoVentaConstantesFunciones.CLASSNAME);
		
		} finally {
			this.estaModoNuevo=false;
			this.estaModoDuplicar=false;
		}
	}
	
	public void jButtonCopiarFormaPagoPuntoVentaActionPerformed(ActionEvent evt) throws Exception {   
		try {
			
			Boolean conSeleccionarFilaTabla=false;
			Integer iNumRowsSeleccionados=0;
			int[] intSelectedRows =null;
			int intSelectedRow =0;
			
			this.estaModoCopiar=true;
			
			ArrayList<FormaPagoPuntoVenta> formapagopuntoventasSeleccionados=new ArrayList<FormaPagoPuntoVenta>();									
		
			FormaPagoPuntoVenta formapagopuntoventaOrigen=new FormaPagoPuntoVenta();
			FormaPagoPuntoVenta formapagopuntoventaDestino=new FormaPagoPuntoVenta();
				
			formapagopuntoventasSeleccionados=this.getFormaPagoPuntoVentasSeleccionados(false);
			
			if(conSeleccionarFilaTabla) {
				iNumRowsSeleccionados=this.jTableDatosFormaPagoPuntoVenta.getSelectedRows().length;	
			}
			
			if(iNumRowsSeleccionados.equals(2) || formapagopuntoventasSeleccionados.size()==2) {
				if(conSeleccionarFilaTabla) {
					intSelectedRows =this.jTableDatosFormaPagoPuntoVenta.getSelectedRows();
					intSelectedRow = intSelectedRows[0];	
									
					//ARCHITECTURE
					if(Constantes.ISUSAEJBLOGICLAYER) {
						formapagopuntoventaOrigen =(FormaPagoPuntoVenta) this.formapagopuntoventaLogic.getFormaPagoPuntoVentas().toArray()[this.jTableDatosFormaPagoPuntoVenta.convertRowIndexToModel(intSelectedRow)];
					} else if(Constantes.ISUSAEJBREMOTE || Constantes.ISUSAEJBHOME) {
						formapagopuntoventaOrigen =(FormaPagoPuntoVenta) this.formapagopuntoventas.toArray()[this.jTableDatosFormaPagoPuntoVenta.convertRowIndexToModel(intSelectedRow)];
					}
					//ARCHITECTURE
					
					intSelectedRow = intSelectedRows[1];
					
					//ARCHITECTURE
					if(Constantes.ISUSAEJBLOGICLAYER) {
						formapagopuntoventaDestino =(FormaPagoPuntoVenta) this.formapagopuntoventaLogic.getFormaPagoPuntoVentas().toArray()[this.jTableDatosFormaPagoPuntoVenta.convertRowIndexToModel(intSelectedRow)];
					} else if(Constantes.ISUSAEJBREMOTE || Constantes.ISUSAEJBHOME) {
						formapagopuntoventaDestino =(FormaPagoPuntoVenta) this.formapagopuntoventas.toArray()[this.jTableDatosFormaPagoPuntoVenta.convertRowIndexToModel(intSelectedRow)];
					}
					//ARCHITECTURE
				}
				
				formapagopuntoventaOrigen =formapagopuntoventasSeleccionados.get(0);
				formapagopuntoventaDestino =formapagopuntoventasSeleccionados.get(1);
				
				this.setCopiarVariablesObjetosFormaPagoPuntoVenta(formapagopuntoventaOrigen,formapagopuntoventaDestino,true,false);
				
				formapagopuntoventaDestino.setsType("DUPLICADO");
				
				//ARCHITECTURE
				if(Constantes.ISUSAEJBLOGICLAYER) {
					actualizarLista(formapagopuntoventaDestino,formapagopuntoventaLogic.getFormaPagoPuntoVentas());					
				} else if(Constantes.ISUSAEJBREMOTE||Constantes.ISUSAEJBHOME) {
					actualizarLista(formapagopuntoventaDestino,formapagopuntoventas);
				}
				//ARCHITECTURE
				
				this.inicializarActualizarBindingTablaFormaPagoPuntoVenta(false);
				
				//this.jTableDatosFormaPagoPuntoVenta.setRowSelectionInterval(this.getIndiceNuevoFormaPagoPuntoVenta(), this.getIndiceNuevoFormaPagoPuntoVenta());
				
				int iLastRow =  this.jTableDatosFormaPagoPuntoVenta.getRowCount () - 1;
				Rectangle rectangle = this.jTableDatosFormaPagoPuntoVenta.getCellRect(iLastRow, 0, true);
				
				this.jTableDatosFormaPagoPuntoVenta.scrollRectToVisible(rectangle);
				
				//FILA TOTALES
				if(this.conTotales) {
					//this.crearFilaTotales();
					
					this.inicializarActualizarBindingTablaFormaPagoPuntoVenta(false);
				}
			} else {
				throw new Exception("DEBEN ESTAR SELECCIONADOS 2 REGISTROS");
			}
		} catch(Exception e) {
			FuncionesSwing.manageException(this, e,logger,FormaPagoPuntoVentaConstantesFunciones.CLASSNAME);
		
		}  finally {
			this.estaModoCopiar=false;
		}
	}
	
	public void jButtonVerFormFormaPagoPuntoVentaActionPerformed(ActionEvent evt) throws Exception {   
		try {
			
			if(this.jInternalFrameDetalleFormFormaPagoPuntoVenta==null) { //if(!this.conCargarFormDetalle) {
				this.inicializarFormDetalle();
			}
			
			this.jInternalFrameDetalleFormFormaPagoPuntoVenta.setSelected(true);
			
		} catch(Exception e) {
			FuncionesSwing.manageException(this, e,logger,FormaPagoPuntoVentaConstantesFunciones.CLASSNAME);
		}
	}
	
	public void jButtonMostrarOcultarFormaPagoPuntoVentaActionPerformed(ActionEvent evt) throws Exception {   
		try {
			Boolean isVisible=this.jPanelParametrosReportesFormaPagoPuntoVenta.isVisible();
			
			//BYDAN_BUSQUEDAS
			/*
			this.jTabbedPaneBusquedasFormaPagoPuntoVenta.setVisible(!isVisible);			
			*/
			
			this.jPanelParametrosReportesFormaPagoPuntoVenta.setVisible(!isVisible);
			this.jPanelPaginacionFormaPagoPuntoVenta.setVisible(!isVisible);
			this.jPanelAccionesFormaPagoPuntoVenta.setVisible(!isVisible);
							
		} catch(Exception e) {
			FuncionesSwing.manageException(this, e,logger,FormaPagoPuntoVentaConstantesFunciones.CLASSNAME);
		}
	}
	
	public void jButtonCerrarFormaPagoPuntoVentaActionPerformed(ActionEvent evt) throws Exception {   
		try {
			this.closingInternalFrameFormaPagoPuntoVenta();
			
			//if(this.jInternalFrameParent==null) {
				//this.dispose();
			/*} else {
				this.setVisible(false);
	        	this.setSelected(false);	
			}*/			
		} catch(Exception e) {
			FuncionesSwing.manageException(this, e,logger,FormaPagoPuntoVentaConstantesFunciones.CLASSNAME);
		}
	}
	
	public void jButtonCerrarReporteDinamicoFormaPagoPuntoVentaActionPerformed(ActionEvent evt) throws Exception {   
		try {
			/*
			this.cerrarFrameReporteDinamicoFormaPagoPuntoVenta();
			*/
						
		} catch(Exception e) {
			FuncionesSwing.manageException(this, e,logger,FormaPagoPuntoVentaConstantesFunciones.CLASSNAME);
		}
	}
	
	public void jButtonCerrarImportacionFormaPagoPuntoVentaActionPerformed(ActionEvent evt) throws Exception {   
		try {
			/*
			this.cerrarFrameImportacionFormaPagoPuntoVenta();
			*/
						
		} catch(Exception e) {
			FuncionesSwing.manageException(this, e,logger,FormaPagoPuntoVentaConstantesFunciones.CLASSNAME);
		}
	}
	
	
	public void jButtonAbrirOrderByFormaPagoPuntoVentaActionPerformed(ActionEvent evt) throws Exception {   
		try {
			/*
			
			this.abrirInicializarFrameOrderByFormaPagoPuntoVenta();
			
			this.abrirFrameOrderByFormaPagoPuntoVenta();
			*/
			
		} catch(Exception e) {
			FuncionesSwing.manageException(this, e,logger,FormaPagoPuntoVentaConstantesFunciones.CLASSNAME);
		}
	}
	
	public void jButtonCerrarOrderByFormaPagoPuntoVentaActionPerformed(ActionEvent evt) throws Exception {   
		try {
			/*
			this.cerrarFrameOrderByFormaPagoPuntoVenta();
			*/
						
		} catch(Exception e) {
			FuncionesSwing.manageException(this, e,logger,FormaPagoPuntoVentaConstantesFunciones.CLASSNAME);
		}
	}
	
	public void abrirFrameDetalleFormaPagoPuntoVenta(Boolean esRelaciones) throws Exception {	    	        
	    try {
			//CAUSA PROBLEMAS, SE ADICIONA EN CONSTRUCTOR, LUEGO SOLO VISIBLE true y false
			//this.jDesktopPane.add(jInternalFrameDetalleFormFormaPagoPuntoVenta);
			
			if(!esRelaciones) {
				if(this.jInternalFrameDetalleFormFormaPagoPuntoVenta.isMaximum()) {
					this.jInternalFrameDetalleFormFormaPagoPuntoVenta.setMaximum(false);
				}								
				
	    		this.jInternalFrameDetalleFormFormaPagoPuntoVenta.setSize(this.jInternalFrameDetalleFormFormaPagoPuntoVenta.iWidthFormulario,this.jInternalFrameDetalleFormFormaPagoPuntoVenta.iHeightFormulario);
	    	} else {
				if(this.iWidthScroll<this.jInternalFrameDetalleFormFormaPagoPuntoVenta.iWidthFormularioMaximo) {
	    			this.jInternalFrameDetalleFormFormaPagoPuntoVenta.setSize(this.iWidthScroll,this.iHeightScroll);
				} else {
					if(!this.jInternalFrameDetalleFormFormaPagoPuntoVenta.isMaximum()) {
						this.jInternalFrameDetalleFormFormaPagoPuntoVenta.setMaximum(true);
					}
				}
				
				if(this.jInternalFrameDetalleFormFormaPagoPuntoVenta.jContentPaneDetalleFormaPagoPuntoVenta.getWidth() > this.getWidth()) {
					this.jInternalFrameDetalleFormFormaPagoPuntoVenta.jTabbedPaneRelacionesFormaPagoPuntoVenta.setMinimumSize(new Dimension(this.jInternalFrameDetalleFormFormaPagoPuntoVenta.jContentPaneDetalleFormaPagoPuntoVenta.getWidth(),FormaPagoPuntoVentaConstantesFunciones.ALTO_TABPANE_RELACIONES));
					this.jInternalFrameDetalleFormFormaPagoPuntoVenta.jTabbedPaneRelacionesFormaPagoPuntoVenta.setMaximumSize(new Dimension(this.jInternalFrameDetalleFormFormaPagoPuntoVenta.jContentPaneDetalleFormaPagoPuntoVenta.getWidth(),FormaPagoPuntoVentaConstantesFunciones.ALTO_TABPANE_RELACIONES));
					this.jInternalFrameDetalleFormFormaPagoPuntoVenta.jTabbedPaneRelacionesFormaPagoPuntoVenta.setPreferredSize(new Dimension(this.jInternalFrameDetalleFormFormaPagoPuntoVenta.jContentPaneDetalleFormaPagoPuntoVenta.getWidth(),FormaPagoPuntoVentaConstantesFunciones.ALTO_TABPANE_RELACIONES));
					
					Dimension dimension=new Dimension(); 
					
					
					
				}
	    	}
			
		
	       	this.jInternalFrameDetalleFormFormaPagoPuntoVenta.setVisible(true);
	        this.jInternalFrameDetalleFormFormaPagoPuntoVenta.setSelected(true);
		
	    } catch (final java.beans.PropertyVetoException e) {
		
			FuncionesSwing.manageException(this, e,logger,FormaPagoPuntoVentaConstantesFunciones.CLASSNAME);
	    }
	}
	
	/*
	public void abrirInicializarFrameOrderByFormaPagoPuntoVenta() throws Exception {	    	        
	    try {
			if(this.jInternalFrameOrderByFormaPagoPuntoVenta==null) {
				
				if(!this.conCargarMinimo) {
					this.jInternalFrameOrderByFormaPagoPuntoVenta=new OrderByJInternalFrame(STIPO_TAMANIO_GENERAL,this.jButtonAbrirOrderByFormaPagoPuntoVenta,false,this);
				} else {
					this.jInternalFrameOrderByFormaPagoPuntoVenta=new OrderByJInternalFrame(STIPO_TAMANIO_GENERAL,this.jButtonAbrirOrderByFormaPagoPuntoVenta,true,this);
				}
				
				this.jDesktopPane.add(this.jInternalFrameOrderByFormaPagoPuntoVenta);
				this.jInternalFrameOrderByFormaPagoPuntoVenta.setVisible(false);
				this.jInternalFrameOrderByFormaPagoPuntoVenta.setSelected(false);
				
				this.jInternalFrameOrderByFormaPagoPuntoVenta.getjButtonCerrarOrderBy().addActionListener (new ButtonActionListener(this,"CerrarOrderByFormaPagoPuntoVenta"));
				
				this.inicializarActualizarBindingTablaOrderByFormaPagoPuntoVenta();
			}
		} catch (final Exception e) {
			
		}
	}
	*/
	
	/*
	public void abrirInicializarFrameImportacionFormaPagoPuntoVenta() throws Exception {	    	        
	    try {
			if(this.jInternalFrameImportacionFormaPagoPuntoVenta==null) {
				
				this.jInternalFrameImportacionFormaPagoPuntoVenta=new ImportacionJInternalFrame(FormaPagoPuntoVentaConstantesFunciones.SCLASSWEBTITULO,this);			
				
				MainJFrame.cerrarJInternalFramesExistentes(this.jDesktopPane,this.jInternalFrameImportacionFormaPagoPuntoVenta);							
				
				this.jDesktopPane.add(this.jInternalFrameImportacionFormaPagoPuntoVenta);
				this.jInternalFrameImportacionFormaPagoPuntoVenta.setVisible(false);
				this.jInternalFrameImportacionFormaPagoPuntoVenta.setSelected(false);


				this.jInternalFrameImportacionFormaPagoPuntoVenta.getjButtonCerrarImportacion().addActionListener (new ButtonActionListener(this,"CerrarImportacionFormaPagoPuntoVenta"));
				this.jInternalFrameImportacionFormaPagoPuntoVenta.getjButtonGenerarImportacion().addActionListener (new ButtonActionListener(this,"GenerarImportacionFormaPagoPuntoVenta"));
				this.jInternalFrameImportacionFormaPagoPuntoVenta.getjButtonAbrirImportacion().addActionListener (new ButtonActionListener(this,"AbrirImportacionFormaPagoPuntoVenta"));


			}
		} catch (final Exception e) {
			
		}
	}		
	*/
	
	/*
	public void abrirInicializarFrameReporteDinamicoFormaPagoPuntoVenta() throws Exception {	    	        
	    try {
			
			if(this.jInternalFrameReporteDinamicoFormaPagoPuntoVenta==null) {
				this.jInternalFrameReporteDinamicoFormaPagoPuntoVenta=new ReporteDinamicoJInternalFrame(FormaPagoPuntoVentaConstantesFunciones.SCLASSWEBTITULO,this);	
				
				MainJFrame.cerrarJInternalFramesExistentes(this.jDesktopPane,this.jInternalFrameReporteDinamicoFormaPagoPuntoVenta);	
	
	
				this.jDesktopPane.add(this.jInternalFrameReporteDinamicoFormaPagoPuntoVenta);
				this.jInternalFrameReporteDinamicoFormaPagoPuntoVenta.setVisible(false);
				this.jInternalFrameReporteDinamicoFormaPagoPuntoVenta.setSelected(false);
	
	
	
				this.jInternalFrameReporteDinamicoFormaPagoPuntoVenta.getjButtonCerrarReporteDinamico().addActionListener (new ButtonActionListener(this,"CerrarReporteDinamicoFormaPagoPuntoVenta"));
				this.jInternalFrameReporteDinamicoFormaPagoPuntoVenta.getjButtonGenerarReporteDinamico().addActionListener (new ButtonActionListener(this,"GenerarReporteDinamicoFormaPagoPuntoVenta"));
				this.jInternalFrameReporteDinamicoFormaPagoPuntoVenta.getjButtonGenerarExcelReporteDinamico().addActionListener (new ButtonActionListener(this,"GenerarExcelReporteDinamicoFormaPagoPuntoVenta"));
	
				this.inicializarActualizarBindingtiposArchivosReportesDinamicoAccionesManualFormaPagoPuntoVenta();
			}

		} catch (final Exception e) {
			
		}
	}	
	*/
	
	
		
					
	public void cerrarFrameDetalleFormaPagoPuntoVenta() throws Exception {	    	        
	    try {
			//this.jDesktopPane.add(jInternalFrameDetalleFormFormaPagoPuntoVenta);
			
	       	this.jInternalFrameDetalleFormFormaPagoPuntoVenta.setVisible(false);
	        this.jInternalFrameDetalleFormFormaPagoPuntoVenta.setSelected(false);
			
			//this.jInternalFrameDetalleFormFormaPagoPuntoVenta.dispose();
			//this.jInternalFrameDetalleFormFormaPagoPuntoVenta=null;
			
	    } catch (final java.beans.PropertyVetoException e) {
		
			FuncionesSwing.manageException(this, e,logger,FormaPagoPuntoVentaConstantesFunciones.CLASSNAME);
	    }
	}
	
	/*
	public void abrirFrameReporteDinamicoFormaPagoPuntoVenta() throws Exception {	    	        
	    try {
			
			this.jInternalFrameReporteDinamicoFormaPagoPuntoVenta.setVisible(true);
	        this.jInternalFrameReporteDinamicoFormaPagoPuntoVenta.setSelected(true);			
			
	    } catch (final java.beans.PropertyVetoException e) {
		
			FuncionesSwing.manageException(this, e,logger,FormaPagoPuntoVentaConstantesFunciones.CLASSNAME);
	    }		
	}
	*/
	
	/*
	public void abrirFrameImportacionFormaPagoPuntoVenta() throws Exception {	    	        		
	    try {			
			this.jInternalFrameImportacionFormaPagoPuntoVenta.setVisible(true);
	        this.jInternalFrameImportacionFormaPagoPuntoVenta.setSelected(true);			
			
	    } catch (final java.beans.PropertyVetoException e) {
		
			FuncionesSwing.manageException(this, e,logger,FormaPagoPuntoVentaConstantesFunciones.CLASSNAME);
	    }		
	}	
	*/
	
	
	
	/*
	public void abrirFrameOrderByFormaPagoPuntoVenta() throws Exception {	    	        		
	    try {
			this.jInternalFrameOrderByFormaPagoPuntoVenta.setVisible(true);
	        this.jInternalFrameOrderByFormaPagoPuntoVenta.setSelected(true);			
			
	    } catch (final java.beans.PropertyVetoException e) {
		
			FuncionesSwing.manageException(this, e,logger,FormaPagoPuntoVentaConstantesFunciones.CLASSNAME);
	    }		
	}
	*/
	
	/*
	public void cerrarFrameOrderByFormaPagoPuntoVenta() throws Exception {	    	        		
	    try {			
			this.jInternalFrameOrderByFormaPagoPuntoVenta.setVisible(false);
	        this.jInternalFrameOrderByFormaPagoPuntoVenta.setSelected(false);			
		
	    } catch (final java.beans.PropertyVetoException e) {
		
			FuncionesSwing.manageException(this, e,logger,FormaPagoPuntoVentaConstantesFunciones.CLASSNAME);
	    }		
	}
	*/
	
	/*
	public void cerrarFrameReporteDinamicoFormaPagoPuntoVenta() throws Exception {			
	    try {
			this.jInternalFrameReporteDinamicoFormaPagoPuntoVenta.setVisible(false);
	        this.jInternalFrameReporteDinamicoFormaPagoPuntoVenta.setSelected(false);			
		
	    } catch (final java.beans.PropertyVetoException e) {
		
			FuncionesSwing.manageException(this, e,logger,FormaPagoPuntoVentaConstantesFunciones.CLASSNAME);
	    }		
	}
	*/
	
	/*
	public void cerrarFrameImportacionFormaPagoPuntoVenta() throws Exception {	    	        		
	    try {
			this.jInternalFrameImportacionFormaPagoPuntoVenta.setVisible(false);
	        this.jInternalFrameImportacionFormaPagoPuntoVenta.setSelected(false);
		
	    } catch (final java.beans.PropertyVetoException e) {
		
			FuncionesSwing.manageException(this, e,logger,FormaPagoPuntoVentaConstantesFunciones.CLASSNAME);
	    }		
	}
	*/
	
	

				public void abrirFrameTreeCuentaContable(String sTipoProceso) { //throws Exception
					try {
						//CAUSA PROBLEMAS, SE ADICIONA EN CONSTRUCTOR, LUEGO SOLO VISIBLE true y false
						//this.jDesktopPane.add(jInternalFrameTreeCuentaContable);
						CuentaContableBeanSwingJInternalFrame cuentacontableBeanSwingJInternalFrame=new CuentaContableBeanSwingJInternalFrame(true,true,this.jDesktopPane,this.usuarioActual,this.resumenUsuarioActual,this.moduloActual,this.opcionActual,this.parametroGeneralSg,this.parametroGeneralUsuario,PaginaTipo.BUSQUEDA,false,false,false,true);
						cuentacontableBeanSwingJInternalFrame.setJInternalFrameParent(this);
						cuentacontableBeanSwingJInternalFrame.jInternalFrameTreeCuentaContable.setsTipoProceso(sTipoProceso);

						if(sTipoProceso.equals("BUSQUEDA_FK")) {
							cuentacontableBeanSwingJInternalFrame.jInternalFrameTreeCuentaContable.sTipoBusqueda="CuentaContable";
						}

						cuentacontableBeanSwingJInternalFrame.getTodosCuentaContableArbol();
						cuentacontableBeanSwingJInternalFrame.jInternalFrameTreeCuentaContable.setCuentaContables(cuentacontableBeanSwingJInternalFrame.cuentacontablesArbol);
						cuentacontableBeanSwingJInternalFrame.jInternalFrameTreeCuentaContable.CargarTreeCuentaContable();
						cuentacontableBeanSwingJInternalFrame.jInternalFrameTreeCuentaContable.setVisible(true);
						cuentacontableBeanSwingJInternalFrame.jInternalFrameTreeCuentaContable.setSelected(true);

						//SE CAMBIA PARENT ORIGINAL PARA QUE RETORNE EN ESTE FORMULARIO
						cuentacontableBeanSwingJInternalFrame.jInternalFrameTreeCuentaContable.jInternalFrameParent=this;
						TitledBorder titledBorderFormaPagoPuntoVenta=(TitledBorder)this.jScrollPanelDatosFormaPagoPuntoVenta.getBorder();
						TitledBorder titledBorderCuentaContable=(TitledBorder)cuentacontableBeanSwingJInternalFrame.jScrollPanelDatosCuentaContable.getBorder();

						titledBorderCuentaContable.setTitle(titledBorderFormaPagoPuntoVenta.getTitle() + " -> Cuenta Contable");


						if(!Constantes.CON_VARIAS_VENTANAS) {
							MainJFrame.cerrarJInternalFramesExistentes(this.jDesktopPane,cuentacontableBeanSwingJInternalFrame);
						}
						this.jDesktopPane.add(cuentacontableBeanSwingJInternalFrame);

					} catch (Exception e) {
						e.getStackTrace();
						//Funciones<%=getFrameworkDomain()%>.manageException(this, e,logger,<%=GetNombreClaseC(TablaBase.ToString())%>ConstantesFunciones.CLASSNAME);
					}
				}

				public void cerrarFrameTreeCuentaContable(CuentaContableBeanSwingJInternalFrame jInternalFrameTreeCuentaContable) throws Exception {
					try {
						//jDesktopPane.add(jInternalFrameTreeCuentaContable);
						jInternalFrameTreeCuentaContable.setVisible(false);
						jInternalFrameTreeCuentaContable.setSelected(false);
						//jInternalFrameTreeCuentaContable.dispose();
						//jInternalFrameTreeCuentaContable=null;
					} catch (final java.beans.PropertyVetoException e) {
						FuncionesSwing.manageException(this, e,logger);
					}
				}
	
	public void jButtonModificarFormaPagoPuntoVentaActionPerformed(ActionEvent evt) throws Exception {   
		try {
			this.modificarFormaPagoPuntoVenta(evt,-1,false);
		
		} catch(Exception e) {
			FuncionesSwing.manageException(this, e,logger,FormaPagoPuntoVentaConstantesFunciones.CLASSNAME);
		}
	}
	
	public void modificarFormaPagoPuntoVenta(ActionEvent evt,int rowIndex,Boolean esRelaciones) throws Exception {   
		try {
			int intSelectedRow = 0;	
			
			if(rowIndex>=0) {
				intSelectedRow=rowIndex;
			} else {
				intSelectedRow = this.jTableDatosFormaPagoPuntoVenta.getSelectedRow();
			}
			
			this.habilitarDeshabilitarControlesFormaPagoPuntoVenta(true);
			//this.isEsNuevoFormaPagoPuntoVenta=false;
			
			//ARCHITECTURE
			if(Constantes.ISUSAEJBLOGICLAYER) {
				this.formapagopuntoventa =(FormaPagoPuntoVenta) this.formapagopuntoventaLogic.getFormaPagoPuntoVentas().toArray()[this.jTableDatosFormaPagoPuntoVenta.convertRowIndexToModel(intSelectedRow)];
			} else if(Constantes.ISUSAEJBREMOTE || Constantes.ISUSAEJBHOME ) {
				this.formapagopuntoventa =(FormaPagoPuntoVenta) this.formapagopuntoventas.toArray()[this.jTableDatosFormaPagoPuntoVenta.convertRowIndexToModel(intSelectedRow)];
			}
			//ARCHITECTURE
			
			this.actualizarEstadoCeldasBotonesFormaPagoPuntoVenta("ae", isGuardarCambiosEnLote, isEsMantenimientoRelacionado);
			
			//NO FUNCIONA BINDINGS
			this.inicializarActualizarBindingBotonesFormaPagoPuntoVenta(false) ;
			
			if(formapagopuntoventaSessionBean.getConGuardarRelaciones()) {
			
			}
			
			if(FormaPagoPuntoVentaJInternalFrame.CON_DATOS_FRAME) {
				this.abrirFrameDetalleFormaPagoPuntoVenta(esRelaciones);
			}
			
			//SI ES MANUAL
			//this.inicializarActualizarBindingBotonesManualFormaPagoPuntoVenta(false) ;
		
		} catch(Exception e) {
			FuncionesSwing.manageException(this, e,logger,FormaPagoPuntoVentaConstantesFunciones.CLASSNAME);
		}
	}
	
	public void seleccionarFilaTablaFormaPagoPuntoVentaActual() { 	  
		try {
			//SELECCIONA FILA A OBJETO ACTUAL
			Integer intSelectedRow = this.jTableDatosFormaPagoPuntoVenta.getSelectedRow();
					
			if(intSelectedRow!=null && intSelectedRow>-1) {
				//ARCHITECTURE
				if(Constantes.ISUSAEJBLOGICLAYER) {
					this.formapagopuntoventa =(FormaPagoPuntoVenta) this.formapagopuntoventaLogic.getFormaPagoPuntoVentas().toArray()[this.jTableDatosFormaPagoPuntoVenta.convertRowIndexToModel(intSelectedRow)];
				} else if(Constantes.ISUSAEJBREMOTE || Constantes.ISUSAEJBHOME ) {
					this.formapagopuntoventa =(FormaPagoPuntoVenta) this.formapagopuntoventas.toArray()[this.jTableDatosFormaPagoPuntoVenta.convertRowIndexToModel(intSelectedRow)];
				}
				//ARCHITECTURE
				
				//System.out.println(this.banco);
			}
			
		} catch(Exception e) {
  			FuncionesSwing.manageException2(this, e,logger,FormaPagoPuntoVentaConstantesFunciones.CLASSNAME);
  		}
    }	
	
	public void seleccionarFormaPagoPuntoVenta(ActionEvent evt,int rowIndex) throws Exception {   
		try {
			
			if(this.jInternalFrameDetalleFormFormaPagoPuntoVenta==null) { //if(!this.conCargarFormDetalle) {
				this.inicializarFormDetalle();
			}
			
			int intSelectedRow = 0;	
			
			if(rowIndex>=0) {
				intSelectedRow=rowIndex;
			} else {
				intSelectedRow = this.jTableDatosFormaPagoPuntoVenta.getSelectedRow();
			}
			
			//this.habilitarDeshabilitarControlesFormaPagoPuntoVenta(true);
			//this.isEsNuevoFormaPagoPuntoVenta=false;
			
			//ARCHITECTURE
			if(Constantes.ISUSAEJBLOGICLAYER) {
				this.formapagopuntoventa =(FormaPagoPuntoVenta) this.formapagopuntoventaLogic.getFormaPagoPuntoVentas().toArray()[this.jTableDatosFormaPagoPuntoVenta.convertRowIndexToModel(intSelectedRow)];
			} else if(Constantes.ISUSAEJBREMOTE || Constantes.ISUSAEJBHOME ) {
				this.formapagopuntoventa =(FormaPagoPuntoVenta) this.formapagopuntoventas.toArray()[this.jTableDatosFormaPagoPuntoVenta.convertRowIndexToModel(intSelectedRow)];
			}
			//ARCHITECTURE
			
			this.jInternalFrameParent.setIdCombosCodigoDesdeBusquedaForeignKey(this.formapagopuntoventa.getId(),this.sTipoBusqueda);
			
			this.dispose();
			
			//this.actualizarEstadoCeldasBotonesFormaPagoPuntoVenta("ae", isGuardarCambiosEnLote, isEsMantenimientoRelacionado);
			
			//NO FUNCIONA BINDINGS
			/*
			this.inicializarActualizarBindingBotonesFormaPagoPuntoVenta(false) ;
			
			if(FormaPagoPuntoVentaJInternalFrame.CON_DATOS_FRAME) {
				this.abrirFrameDetalleFormaPagoPuntoVenta(esRelaciones);
			}
			*/
			
			//SI ES MANUAL
			//this.inicializarActualizarBindingBotonesManualFormaPagoPuntoVenta(false) ;
		
		} catch(Exception e) {
			FuncionesSwing.manageException(this, e,logger,FormaPagoPuntoVentaConstantesFunciones.CLASSNAME);
		}
	}		
	
	public void setIdCombosCodigoDesdeBusquedaForeignKey(Long id,String sType)throws Exception{
		
		try {
			
			if(sType.equals("CuentaContable")) {
				if(!this.formapagopuntoventaConstantesFunciones.cargarid_cuenta_contableFormaPagoPuntoVenta) {
					this.cargarCombosCuentaContablesForeignKeyLista(" where id="+id);
					//this.inicializarActualizarBindingFormaPagoPuntoVenta(false,false);
					this.cargarCombosFrameCuentaContablesForeignKey("Todos");
				}

				this.setCombosCodigoDesdeBusquedaid_cuenta_contable (id);

				this.recargarComboTablaCuentaContable(this.cuentacontablesForeignKey);

			}
			
			if(sType.equals("AsientoContable")) {
				if(!this.formapagopuntoventaConstantesFunciones.cargarid_asiento_contableFormaPagoPuntoVenta) {
					this.cargarCombosAsientoContablesForeignKeyLista(" where id="+id);
					//this.inicializarActualizarBindingFormaPagoPuntoVenta(false,false);
					this.cargarCombosFrameAsientoContablesForeignKey("Todos");
				}

				this.setCombosCodigoDesdeBusquedaid_asiento_contable (id);

				this.recargarComboTablaAsientoContable(this.asientocontablesForeignKey);

			}
		} catch(Exception e) {
			throw e;
		}
	}
	
					
	
	public void recargarComboTablaFacturaPuntoVenta(List<FacturaPuntoVenta> facturapuntoventasForeignKey)throws Exception{
		TableColumn tableColumnFacturaPuntoVenta=this.jTableDatosFormaPagoPuntoVenta.getColumnModel().getColumn(Funciones2.getColumnIndexByName(this.jTableDatosFormaPagoPuntoVenta,FormaPagoPuntoVentaConstantesFunciones.LABEL_IDFACTURAPUNTOVENTA));
		TableCellEditor tableCellEditorFacturaPuntoVenta =tableColumnFacturaPuntoVenta.getCellEditor();

		FacturaPuntoVentaTableCell facturapuntoventaTableCellFk=(FacturaPuntoVentaTableCell)tableCellEditorFacturaPuntoVenta;

		if(facturapuntoventaTableCellFk!=null) {
			facturapuntoventaTableCellFk.setfacturapuntoventasForeignKey(facturapuntoventasForeignKey);
		}


		//SIEMPRE rowActual<0 , NO USADO POR EL MOMENTO
		//COMBO DE FILA ACTUAL SE ACTUALIZA, LOS DEMAS USAN EL ANTERIOR COMBO
		//int intSelectedRow = -1;
		//intSelectedRow=this.jTableDatosFormaPagoPuntoVenta.getSelectedRow();

		//if(intSelectedRow<=0) {
			//facturapuntoventaTableCellFk.setRowActual(intSelectedRow);
			//facturapuntoventaTableCellFk.setfacturapuntoventasForeignKeyActual(facturapuntoventasForeignKey);
		//}


		if(facturapuntoventaTableCellFk!=null) {
			facturapuntoventaTableCellFk.RecargarFacturaPuntoVentasForeignKey();
			//ACTUALIZA COMBOS DE TABLA-FIN
		}

	}	
	
	
	public void recargarComboTablaTipoFormaPago(List<TipoFormaPago> tipoformapagosForeignKey)throws Exception{
		TableColumn tableColumnTipoFormaPago=this.jTableDatosFormaPagoPuntoVenta.getColumnModel().getColumn(Funciones2.getColumnIndexByName(this.jTableDatosFormaPagoPuntoVenta,FormaPagoPuntoVentaConstantesFunciones.LABEL_IDTIPOFORMAPAGO));
		TableCellEditor tableCellEditorTipoFormaPago =tableColumnTipoFormaPago.getCellEditor();

		TipoFormaPagoTableCell tipoformapagoTableCellFk=(TipoFormaPagoTableCell)tableCellEditorTipoFormaPago;

		if(tipoformapagoTableCellFk!=null) {
			tipoformapagoTableCellFk.settipoformapagosForeignKey(tipoformapagosForeignKey);
		}


		//SIEMPRE rowActual<0 , NO USADO POR EL MOMENTO
		//COMBO DE FILA ACTUAL SE ACTUALIZA, LOS DEMAS USAN EL ANTERIOR COMBO
		//int intSelectedRow = -1;
		//intSelectedRow=this.jTableDatosFormaPagoPuntoVenta.getSelectedRow();

		//if(intSelectedRow<=0) {
			//tipoformapagoTableCellFk.setRowActual(intSelectedRow);
			//tipoformapagoTableCellFk.settipoformapagosForeignKeyActual(tipoformapagosForeignKey);
		//}


		if(tipoformapagoTableCellFk!=null) {
			tipoformapagoTableCellFk.RecargarTipoFormaPagosForeignKey();
			//ACTUALIZA COMBOS DE TABLA-FIN
		}

	}	
	
	
	public void recargarComboTablaBanco(List<Banco> bancosForeignKey)throws Exception{
		TableColumn tableColumnBanco=this.jTableDatosFormaPagoPuntoVenta.getColumnModel().getColumn(Funciones2.getColumnIndexByName(this.jTableDatosFormaPagoPuntoVenta,FormaPagoPuntoVentaConstantesFunciones.LABEL_IDBANCO));
		TableCellEditor tableCellEditorBanco =tableColumnBanco.getCellEditor();

		BancoTableCell bancoTableCellFk=(BancoTableCell)tableCellEditorBanco;

		if(bancoTableCellFk!=null) {
			bancoTableCellFk.setbancosForeignKey(bancosForeignKey);
		}


		//SIEMPRE rowActual<0 , NO USADO POR EL MOMENTO
		//COMBO DE FILA ACTUAL SE ACTUALIZA, LOS DEMAS USAN EL ANTERIOR COMBO
		//int intSelectedRow = -1;
		//intSelectedRow=this.jTableDatosFormaPagoPuntoVenta.getSelectedRow();

		//if(intSelectedRow<=0) {
			//bancoTableCellFk.setRowActual(intSelectedRow);
			//bancoTableCellFk.setbancosForeignKeyActual(bancosForeignKey);
		//}


		if(bancoTableCellFk!=null) {
			bancoTableCellFk.RecargarBancosForeignKey();
			//ACTUALIZA COMBOS DE TABLA-FIN
		}

	}	
	
	
	public void recargarComboTablaCuentaBancoPunVen(List<CuentaBancoPunVen> cuentabancopunvensForeignKey)throws Exception{
		TableColumn tableColumnCuentaBancoPunVen=this.jTableDatosFormaPagoPuntoVenta.getColumnModel().getColumn(Funciones2.getColumnIndexByName(this.jTableDatosFormaPagoPuntoVenta,FormaPagoPuntoVentaConstantesFunciones.LABEL_IDCUENTABANCOPUNVEN));
		TableCellEditor tableCellEditorCuentaBancoPunVen =tableColumnCuentaBancoPunVen.getCellEditor();

		CuentaBancoPunVenTableCell cuentabancopunvenTableCellFk=(CuentaBancoPunVenTableCell)tableCellEditorCuentaBancoPunVen;

		if(cuentabancopunvenTableCellFk!=null) {
			cuentabancopunvenTableCellFk.setcuentabancopunvensForeignKey(cuentabancopunvensForeignKey);
		}


		//SIEMPRE rowActual<0 , NO USADO POR EL MOMENTO
		//COMBO DE FILA ACTUAL SE ACTUALIZA, LOS DEMAS USAN EL ANTERIOR COMBO
		//int intSelectedRow = -1;
		//intSelectedRow=this.jTableDatosFormaPagoPuntoVenta.getSelectedRow();

		//if(intSelectedRow<=0) {
			//cuentabancopunvenTableCellFk.setRowActual(intSelectedRow);
			//cuentabancopunvenTableCellFk.setcuentabancopunvensForeignKeyActual(cuentabancopunvensForeignKey);
		//}


		if(cuentabancopunvenTableCellFk!=null) {
			cuentabancopunvenTableCellFk.RecargarCuentaBancoPunVensForeignKey();
			//ACTUALIZA COMBOS DE TABLA-FIN
		}

	}	
	
	
	public void recargarComboTablaTipoRiesgoCheque(List<TipoRiesgoCheque> tiporiesgochequesForeignKey)throws Exception{
		TableColumn tableColumnTipoRiesgoCheque=this.jTableDatosFormaPagoPuntoVenta.getColumnModel().getColumn(Funciones2.getColumnIndexByName(this.jTableDatosFormaPagoPuntoVenta,FormaPagoPuntoVentaConstantesFunciones.LABEL_IDTIPORIESGOCHEQUE));
		TableCellEditor tableCellEditorTipoRiesgoCheque =tableColumnTipoRiesgoCheque.getCellEditor();

		TipoRiesgoChequeTableCell tiporiesgochequeTableCellFk=(TipoRiesgoChequeTableCell)tableCellEditorTipoRiesgoCheque;

		if(tiporiesgochequeTableCellFk!=null) {
			tiporiesgochequeTableCellFk.settiporiesgochequesForeignKey(tiporiesgochequesForeignKey);
		}


		//SIEMPRE rowActual<0 , NO USADO POR EL MOMENTO
		//COMBO DE FILA ACTUAL SE ACTUALIZA, LOS DEMAS USAN EL ANTERIOR COMBO
		//int intSelectedRow = -1;
		//intSelectedRow=this.jTableDatosFormaPagoPuntoVenta.getSelectedRow();

		//if(intSelectedRow<=0) {
			//tiporiesgochequeTableCellFk.setRowActual(intSelectedRow);
			//tiporiesgochequeTableCellFk.settiporiesgochequesForeignKeyActual(tiporiesgochequesForeignKey);
		//}


		if(tiporiesgochequeTableCellFk!=null) {
			tiporiesgochequeTableCellFk.RecargarTipoRiesgoChequesForeignKey();
			//ACTUALIZA COMBOS DE TABLA-FIN
		}

	}	
	
	
	public void recargarComboTablaBancoTarjeta(List<Banco> bancotarjetasForeignKey)throws Exception{
		TableColumn tableColumnBancoTarjeta=this.jTableDatosFormaPagoPuntoVenta.getColumnModel().getColumn(Funciones2.getColumnIndexByName(this.jTableDatosFormaPagoPuntoVenta,FormaPagoPuntoVentaConstantesFunciones.LABEL_IDBANCOTARJETA));
		TableCellEditor tableCellEditorBancoTarjeta =tableColumnBancoTarjeta.getCellEditor();

		BancoTableCell bancoTableCellFk=(BancoTableCell)tableCellEditorBancoTarjeta;

		if(bancoTableCellFk!=null) {
			bancoTableCellFk.setbancosForeignKey(bancotarjetasForeignKey);
		}


		//SIEMPRE rowActual<0 , NO USADO POR EL MOMENTO
		//COMBO DE FILA ACTUAL SE ACTUALIZA, LOS DEMAS USAN EL ANTERIOR COMBO
		//int intSelectedRow = -1;
		//intSelectedRow=this.jTableDatosFormaPagoPuntoVenta.getSelectedRow();

		//if(intSelectedRow<=0) {
			//bancoTableCellFk.setRowActual(intSelectedRow);
			//bancoTableCellFk.setbancosForeignKeyActual(bancotarjetasForeignKey);
		//}


		if(bancoTableCellFk!=null) {
			bancoTableCellFk.RecargarBancosForeignKey();
			//ACTUALIZA COMBOS DE TABLA-FIN
		}

	}	
	
	
	public void recargarComboTablaTarjetaCredito(List<TarjetaCredito> tarjetacreditosForeignKey)throws Exception{
		TableColumn tableColumnTarjetaCredito=this.jTableDatosFormaPagoPuntoVenta.getColumnModel().getColumn(Funciones2.getColumnIndexByName(this.jTableDatosFormaPagoPuntoVenta,FormaPagoPuntoVentaConstantesFunciones.LABEL_IDTARJETACREDITO));
		TableCellEditor tableCellEditorTarjetaCredito =tableColumnTarjetaCredito.getCellEditor();

		TarjetaCreditoTableCell tarjetacreditoTableCellFk=(TarjetaCreditoTableCell)tableCellEditorTarjetaCredito;

		if(tarjetacreditoTableCellFk!=null) {
			tarjetacreditoTableCellFk.settarjetacreditosForeignKey(tarjetacreditosForeignKey);
		}


		//SIEMPRE rowActual<0 , NO USADO POR EL MOMENTO
		//COMBO DE FILA ACTUAL SE ACTUALIZA, LOS DEMAS USAN EL ANTERIOR COMBO
		//int intSelectedRow = -1;
		//intSelectedRow=this.jTableDatosFormaPagoPuntoVenta.getSelectedRow();

		//if(intSelectedRow<=0) {
			//tarjetacreditoTableCellFk.setRowActual(intSelectedRow);
			//tarjetacreditoTableCellFk.settarjetacreditosForeignKeyActual(tarjetacreditosForeignKey);
		//}


		if(tarjetacreditoTableCellFk!=null) {
			tarjetacreditoTableCellFk.RecargarTarjetaCreditosForeignKey();
			//ACTUALIZA COMBOS DE TABLA-FIN
		}

	}	
	
	
	public void recargarComboTablaTipoInteresTarjeta(List<TipoInteresTarjeta> tipointerestarjetasForeignKey)throws Exception{
		TableColumn tableColumnTipoInteresTarjeta=this.jTableDatosFormaPagoPuntoVenta.getColumnModel().getColumn(Funciones2.getColumnIndexByName(this.jTableDatosFormaPagoPuntoVenta,FormaPagoPuntoVentaConstantesFunciones.LABEL_IDTIPOINTERESTARJETA));
		TableCellEditor tableCellEditorTipoInteresTarjeta =tableColumnTipoInteresTarjeta.getCellEditor();

		TipoInteresTarjetaTableCell tipointerestarjetaTableCellFk=(TipoInteresTarjetaTableCell)tableCellEditorTipoInteresTarjeta;

		if(tipointerestarjetaTableCellFk!=null) {
			tipointerestarjetaTableCellFk.settipointerestarjetasForeignKey(tipointerestarjetasForeignKey);
		}


		//SIEMPRE rowActual<0 , NO USADO POR EL MOMENTO
		//COMBO DE FILA ACTUAL SE ACTUALIZA, LOS DEMAS USAN EL ANTERIOR COMBO
		//int intSelectedRow = -1;
		//intSelectedRow=this.jTableDatosFormaPagoPuntoVenta.getSelectedRow();

		//if(intSelectedRow<=0) {
			//tipointerestarjetaTableCellFk.setRowActual(intSelectedRow);
			//tipointerestarjetaTableCellFk.settipointerestarjetasForeignKeyActual(tipointerestarjetasForeignKey);
		//}


		if(tipointerestarjetaTableCellFk!=null) {
			tipointerestarjetaTableCellFk.RecargarTipoInteresTarjetasForeignKey();
			//ACTUALIZA COMBOS DE TABLA-FIN
		}

	}	
	
	
	public void recargarComboTablaTipoPagoTarjeta(List<TipoPagoTarjeta> tipopagotarjetasForeignKey)throws Exception{
		TableColumn tableColumnTipoPagoTarjeta=this.jTableDatosFormaPagoPuntoVenta.getColumnModel().getColumn(Funciones2.getColumnIndexByName(this.jTableDatosFormaPagoPuntoVenta,FormaPagoPuntoVentaConstantesFunciones.LABEL_IDTIPOPAGOTARJETA));
		TableCellEditor tableCellEditorTipoPagoTarjeta =tableColumnTipoPagoTarjeta.getCellEditor();

		TipoPagoTarjetaTableCell tipopagotarjetaTableCellFk=(TipoPagoTarjetaTableCell)tableCellEditorTipoPagoTarjeta;

		if(tipopagotarjetaTableCellFk!=null) {
			tipopagotarjetaTableCellFk.settipopagotarjetasForeignKey(tipopagotarjetasForeignKey);
		}


		//SIEMPRE rowActual<0 , NO USADO POR EL MOMENTO
		//COMBO DE FILA ACTUAL SE ACTUALIZA, LOS DEMAS USAN EL ANTERIOR COMBO
		//int intSelectedRow = -1;
		//intSelectedRow=this.jTableDatosFormaPagoPuntoVenta.getSelectedRow();

		//if(intSelectedRow<=0) {
			//tipopagotarjetaTableCellFk.setRowActual(intSelectedRow);
			//tipopagotarjetaTableCellFk.settipopagotarjetasForeignKeyActual(tipopagotarjetasForeignKey);
		//}


		if(tipopagotarjetaTableCellFk!=null) {
			tipopagotarjetaTableCellFk.RecargarTipoPagoTarjetasForeignKey();
			//ACTUALIZA COMBOS DE TABLA-FIN
		}

	}	
	
	
	public void recargarComboTablaConexion(List<Conexion> conexionsForeignKey)throws Exception{
		TableColumn tableColumnConexion=this.jTableDatosFormaPagoPuntoVenta.getColumnModel().getColumn(Funciones2.getColumnIndexByName(this.jTableDatosFormaPagoPuntoVenta,FormaPagoPuntoVentaConstantesFunciones.LABEL_IDCONEXION));
		TableCellEditor tableCellEditorConexion =tableColumnConexion.getCellEditor();

		ConexionTableCell conexionTableCellFk=(ConexionTableCell)tableCellEditorConexion;

		if(conexionTableCellFk!=null) {
			conexionTableCellFk.setconexionsForeignKey(conexionsForeignKey);
		}


		//SIEMPRE rowActual<0 , NO USADO POR EL MOMENTO
		//COMBO DE FILA ACTUAL SE ACTUALIZA, LOS DEMAS USAN EL ANTERIOR COMBO
		//int intSelectedRow = -1;
		//intSelectedRow=this.jTableDatosFormaPagoPuntoVenta.getSelectedRow();

		//if(intSelectedRow<=0) {
			//conexionTableCellFk.setRowActual(intSelectedRow);
			//conexionTableCellFk.setconexionsForeignKeyActual(conexionsForeignKey);
		//}


		if(conexionTableCellFk!=null) {
			conexionTableCellFk.RecargarConexionsForeignKey();
			//ACTUALIZA COMBOS DE TABLA-FIN
		}

	}	
	
	
	public void recargarComboTablaMes(List<Mes> messForeignKey)throws Exception{
		TableColumn tableColumnMes=this.jTableDatosFormaPagoPuntoVenta.getColumnModel().getColumn(Funciones2.getColumnIndexByName(this.jTableDatosFormaPagoPuntoVenta,FormaPagoPuntoVentaConstantesFunciones.LABEL_IDMES));
		TableCellEditor tableCellEditorMes =tableColumnMes.getCellEditor();

		MesTableCell mesTableCellFk=(MesTableCell)tableCellEditorMes;

		if(mesTableCellFk!=null) {
			mesTableCellFk.setmessForeignKey(messForeignKey);
		}


		//SIEMPRE rowActual<0 , NO USADO POR EL MOMENTO
		//COMBO DE FILA ACTUAL SE ACTUALIZA, LOS DEMAS USAN EL ANTERIOR COMBO
		//int intSelectedRow = -1;
		//intSelectedRow=this.jTableDatosFormaPagoPuntoVenta.getSelectedRow();

		//if(intSelectedRow<=0) {
			//mesTableCellFk.setRowActual(intSelectedRow);
			//mesTableCellFk.setmessForeignKeyActual(messForeignKey);
		//}


		if(mesTableCellFk!=null) {
			mesTableCellFk.RecargarMessForeignKey();
			//ACTUALIZA COMBOS DE TABLA-FIN
		}

	}	
	
	
	public void recargarComboTablaAnio(List<Anio> aniosForeignKey)throws Exception{
		TableColumn tableColumnAnio=this.jTableDatosFormaPagoPuntoVenta.getColumnModel().getColumn(Funciones2.getColumnIndexByName(this.jTableDatosFormaPagoPuntoVenta,FormaPagoPuntoVentaConstantesFunciones.LABEL_IDANIO));
		TableCellEditor tableCellEditorAnio =tableColumnAnio.getCellEditor();

		AnioTableCell anioTableCellFk=(AnioTableCell)tableCellEditorAnio;

		if(anioTableCellFk!=null) {
			anioTableCellFk.setaniosForeignKey(aniosForeignKey);
		}


		//SIEMPRE rowActual<0 , NO USADO POR EL MOMENTO
		//COMBO DE FILA ACTUAL SE ACTUALIZA, LOS DEMAS USAN EL ANTERIOR COMBO
		//int intSelectedRow = -1;
		//intSelectedRow=this.jTableDatosFormaPagoPuntoVenta.getSelectedRow();

		//if(intSelectedRow<=0) {
			//anioTableCellFk.setRowActual(intSelectedRow);
			//anioTableCellFk.setaniosForeignKeyActual(aniosForeignKey);
		//}


		if(anioTableCellFk!=null) {
			anioTableCellFk.RecargarAniosForeignKey();
			//ACTUALIZA COMBOS DE TABLA-FIN
		}

	}	
	
	
	public void recargarComboTablaCuentaContable(List<CuentaContable> cuentacontablesForeignKey)throws Exception{
		TableColumn tableColumnCuentaContable=this.jTableDatosFormaPagoPuntoVenta.getColumnModel().getColumn(Funciones2.getColumnIndexByName(this.jTableDatosFormaPagoPuntoVenta,FormaPagoPuntoVentaConstantesFunciones.LABEL_IDCUENTACONTABLE));
		TableCellEditor tableCellEditorCuentaContable =tableColumnCuentaContable.getCellEditor();

		CuentaContableTableCell cuentacontableTableCellFk=(CuentaContableTableCell)tableCellEditorCuentaContable;

		if(cuentacontableTableCellFk!=null) {
			cuentacontableTableCellFk.setcuentacontablesForeignKey(cuentacontablesForeignKey);
		}


		//SIEMPRE rowActual<0 , NO USADO POR EL MOMENTO
		//COMBO DE FILA ACTUAL SE ACTUALIZA, LOS DEMAS USAN EL ANTERIOR COMBO
		//int intSelectedRow = -1;
		//intSelectedRow=this.jTableDatosFormaPagoPuntoVenta.getSelectedRow();

		//if(intSelectedRow<=0) {
			//cuentacontableTableCellFk.setRowActual(intSelectedRow);
			//cuentacontableTableCellFk.setcuentacontablesForeignKeyActual(cuentacontablesForeignKey);
		//}


		if(cuentacontableTableCellFk!=null) {
			cuentacontableTableCellFk.RecargarCuentaContablesForeignKey();
			//ACTUALIZA COMBOS DE TABLA-FIN
		}

	}	
	
	
	public void recargarComboTablaAsientoContable(List<AsientoContable> asientocontablesForeignKey)throws Exception{
		TableColumn tableColumnAsientoContable=this.jTableDatosFormaPagoPuntoVenta.getColumnModel().getColumn(Funciones2.getColumnIndexByName(this.jTableDatosFormaPagoPuntoVenta,FormaPagoPuntoVentaConstantesFunciones.LABEL_IDASIENTOCONTABLE));
		TableCellEditor tableCellEditorAsientoContable =tableColumnAsientoContable.getCellEditor();

		AsientoContableTableCell asientocontableTableCellFk=(AsientoContableTableCell)tableCellEditorAsientoContable;

		if(asientocontableTableCellFk!=null) {
			asientocontableTableCellFk.setasientocontablesForeignKey(asientocontablesForeignKey);
		}


		//SIEMPRE rowActual<0 , NO USADO POR EL MOMENTO
		//COMBO DE FILA ACTUAL SE ACTUALIZA, LOS DEMAS USAN EL ANTERIOR COMBO
		//int intSelectedRow = -1;
		//intSelectedRow=this.jTableDatosFormaPagoPuntoVenta.getSelectedRow();

		//if(intSelectedRow<=0) {
			//asientocontableTableCellFk.setRowActual(intSelectedRow);
			//asientocontableTableCellFk.setasientocontablesForeignKeyActual(asientocontablesForeignKey);
		//}


		if(asientocontableTableCellFk!=null) {
			asientocontableTableCellFk.RecargarAsientoContablesForeignKey();
			//ACTUALIZA COMBOS DE TABLA-FIN
		}

	}	
	
	
	

	public void setCombosCodigoDesdeBusquedaid_cuenta_contable (Long id) throws Exception {
		this.setActualCuentaContableForeignKey(id,true,"Todos");

	};
	

	public void setCombosCodigoDesdeBusquedaid_asiento_contable (Long id) throws Exception {
		this.setActualAsientoContableForeignKey(id,true,"Todos");

	};
	
	public void jButtonActualizarFormaPagoPuntoVentaActionPerformed(ActionEvent evt) throws Exception {   
		try	{
			if(Constantes.ISUSAEJBLOGICLAYER) {
				this.formapagopuntoventaLogic.getNewConnexionToDeep("");
			}
			
			this.inicializarActualizarBindingParametrosReportesFormaPagoPuntoVenta(false);
			
			//if(!this.isEsNuevoFormaPagoPuntoVenta) {								
				int intSelectedRow = this.jTableDatosFormaPagoPuntoVenta.getSelectedRow();	
				
				//SE PIEDE INDICE SELECTED CON FILA TOTALES, ASEGURARSE QUE OBJETO ACTUAL ESTE EN FORMULARIO
				
				//ARCHITECTURE
				if(Constantes.ISUSAEJBLOGICLAYER) {
					this.formapagopuntoventa =(FormaPagoPuntoVenta) this.formapagopuntoventaLogic.getFormaPagoPuntoVentas().toArray()[this.jTableDatosFormaPagoPuntoVenta.convertRowIndexToModel(intSelectedRow)];
				} else if(Constantes.ISUSAEJBREMOTE || Constantes.ISUSAEJBHOME) {
					this.formapagopuntoventa =(FormaPagoPuntoVenta) this.formapagopuntoventas.toArray()[this.jTableDatosFormaPagoPuntoVenta.convertRowIndexToModel(intSelectedRow)];
				}
				//ARCHITECTURE
				
			//}
				
			if(FormaPagoPuntoVentaJInternalFrame.ISBINDING_MANUAL_TABLA) {
				this.setVariablesFormularioToObjetoActualFormaPagoPuntoVenta(this.formapagopuntoventa,true);
				this.setVariablesFormularioToObjetoActualForeignKeysFormaPagoPuntoVenta(this.formapagopuntoventa);
				
			}
			
			if(this.permiteMantenimiento(this.formapagopuntoventa)) {	
				this.actualizar();
				
				if(!this.isGuardarCambiosEnLote && !this.formapagopuntoventaSessionBean.getEsGuardarRelacionado()) {
					this.procesarBusqueda(sAccionBusqueda);
					
					this.isEsNuevoFormaPagoPuntoVenta=true;
					this.inicializarActualizarBindingTablaFormaPagoPuntoVenta(false);
					this.isEsNuevoFormaPagoPuntoVenta=false;
				
				} else {					
					
					//PARA RELACIONADO ACTUALIZAR FILA TOTALES
					this.isEsNuevoFormaPagoPuntoVenta=true;
					this.procesoActualizarFilaTotales(false,"MANTENIMIENTO");
					this.isEsNuevoFormaPagoPuntoVenta=false;
				}
						
								
				//NO FUNCIONA BINDINGS
				this.inicializarActualizarBindingBotonesFormaPagoPuntoVenta(false);
				
				//SI ES MANUAL
				//this.inicializarActualizarBindingBotonesManualFormaPagoPuntoVenta(false);
				
				this.habilitarDeshabilitarControlesFormaPagoPuntoVenta(false);
			
												
				
				if(FormaPagoPuntoVentaJInternalFrame.CON_DATOS_FRAME) {
					if(!this.isPostAccionSinCerrar) {
						this.cerrarFrameDetalleFormaPagoPuntoVenta();
					}
				}
				
				if(this.isPostAccionNuevo) {
					this.jButtonNuevoFormaPagoPuntoVentaActionPerformed(evt,formapagopuntoventaSessionBean.getConGuardarRelaciones());
				} else {
					if(this.isPostAccionSinCerrar) {
						Integer intSelectedRowActual=this.getIndiceActualFormaPagoPuntoVenta(this.formapagopuntoventa,intSelectedRow);
						
						if(intSelectedRow>-1) {
							this.jTableDatosFormaPagoPuntoVenta.setRowSelectionInterval(intSelectedRowActual, intSelectedRowActual);
							this.jButtonIdActionPerformed(evt,intSelectedRowActual,formapagopuntoventaSessionBean.getConGuardarRelaciones(),false);
						}
					}
				}
				
				this.cancelar(false);
				
			} else {
				JOptionPane.showMessageDialog(this,"ESTE REGISTRO NO PUEDE ACTUALIZARSE","EDITAR",JOptionPane.ERROR_MESSAGE);
			}
			
			if(Constantes.ISUSAEJBLOGICLAYER) {
				this.formapagopuntoventaLogic.commitNewConnexionToDeep();
			}
			
			
			if(this.jInternalFrameParent!=null) { //&& this.isEsMantenimientoRelacionado) {
				Boolean esUsoDesdeHijoLocal=true;
				String sTipo="Formulario";
				Boolean conIrServidorAplicacionParent=false;
				Long id=this.formapagopuntoventa.getId();
				ArrayList<String> arrClasses=new ArrayList<String>();
				
				GeneralEntityParameterGeneral generalEntityParameterGeneral=new GeneralEntityParameterGeneral();
				
				generalEntityParameterGeneral.setEventoGlobalTipo(EventoGlobalTipo.FORM_HIJO_ACTUALIZAR);
				generalEntityParameterGeneral.setsDominio("Formulario");
				generalEntityParameterGeneral.setsDominioTipo(FormaPagoPuntoVenta.class.getName());
				
				this.jInternalFrameParent.setEventoParentGeneral(esUsoDesdeHijoLocal,"Formulario",FormaPagoPuntoVenta.class.getName(),sTipo,"FORMULARIO",esControlTabla,conIrServidorAplicacionParent,
					id,this, EventoGlobalTipo.FORM_HIJO_ACTUALIZAR,ControlTipo.FORM,EventoTipo.CHANGE,EventoSubTipo.CHANGED,arrClasses,
					evt,generalEntityParameterGeneral,this);
			}
			
		} catch(Exception e) {
			if(Constantes.ISUSAEJBLOGICLAYER) {
				this.formapagopuntoventaLogic.rollbackNewConnexionToDeep();
			}
			
			FuncionesSwing.manageException(this, e,logger,FormaPagoPuntoVentaConstantesFunciones.CLASSNAME);
		
		} finally {
			if(Constantes.ISUSAEJBLOGICLAYER) {
				this.formapagopuntoventaLogic.closeNewConnexionToDeep();
			}
		}
	}
	
	public void jButtonEliminarFormaPagoPuntoVentaActionPerformed(ActionEvent evt) throws Exception {   
		try	{
			
			if(Constantes.ISUSAEJBLOGICLAYER) {
				this.formapagopuntoventaLogic.getNewConnexionToDeep("");
			}
			
			int intSelectedRow = this.jTableDatosFormaPagoPuntoVenta.getSelectedRow();	       
							
			//ARCHITECTURE
			if(Constantes.ISUSAEJBLOGICLAYER) {
				this.formapagopuntoventa =(FormaPagoPuntoVenta) this.formapagopuntoventaLogic.getFormaPagoPuntoVentas().toArray()[this.jTableDatosFormaPagoPuntoVenta.convertRowIndexToModel(intSelectedRow)];
				this.formapagopuntoventa.setIsDeleted(true);
			} else if(Constantes.ISUSAEJBREMOTE || Constantes.ISUSAEJBHOME ) {
				this.formapagopuntoventa =(FormaPagoPuntoVenta) this.formapagopuntoventas.toArray()[this.jTableDatosFormaPagoPuntoVenta.convertRowIndexToModel(intSelectedRow)];
				this.formapagopuntoventa.setIsDeleted(true);
			}
			//ARCHITECTURE
			
			if(this.permiteMantenimiento(this.formapagopuntoventa)) {
				this.eliminar();
				
				if(!this.isGuardarCambiosEnLote && !this.formapagopuntoventaSessionBean.getEsGuardarRelacionado()) {
					this.procesarBusqueda(sAccionBusqueda);
				}
				
				((FormaPagoPuntoVentaModel) this.jTableDatosFormaPagoPuntoVenta.getModel()).fireTableRowsDeleted(intSelectedRow,intSelectedRow);
				
				this.isEsNuevoFormaPagoPuntoVenta=true;
				this.inicializarActualizarBindingTablaFormaPagoPuntoVenta(false);
				this.isEsNuevoFormaPagoPuntoVenta=false;									
					
				//NO FUNCIONA BINDINGS
				this.inicializarActualizarBindingBotonesFormaPagoPuntoVenta(false);
				
				//SI ES MANUAL
				//this.inicializarActualizarBindingBotonesManualFormaPagoPuntoVenta(false);
				
				this.habilitarDeshabilitarControlesFormaPagoPuntoVenta(false);
				
				
				
				if(FormaPagoPuntoVentaJInternalFrame.CON_DATOS_FRAME) {
					this.cerrarFrameDetalleFormaPagoPuntoVenta();
				}
			} else {
				JOptionPane.showMessageDialog(this,"ESTE REGISTRO NO PUEDE ACTUALIZARSE","EDITAR",JOptionPane.ERROR_MESSAGE);
			}	
			
			if(Constantes.ISUSAEJBLOGICLAYER) {
				this.formapagopuntoventaLogic.commitNewConnexionToDeep();
			}
			
		} catch(Exception e) {
			
			if(Constantes.ISUSAEJBLOGICLAYER) {
				this.formapagopuntoventaLogic.rollbackNewConnexionToDeep();
			}

			FuncionesSwing.manageException(this, e,logger,FormaPagoPuntoVentaConstantesFunciones.CLASSNAME);
		
		} finally {
			if(Constantes.ISUSAEJBLOGICLAYER) {
				this.formapagopuntoventaLogic.closeNewConnexionToDeep();
			}
		}		
	}
		
	public void jButtonCancelarFormaPagoPuntoVentaActionPerformed(ActionEvent evt) throws Exception {                                         	   	       
	  	try {
			if(jTableDatosFormaPagoPuntoVenta.getRowCount()>=1) {
				jTableDatosFormaPagoPuntoVenta.removeRowSelectionInterval(0, jTableDatosFormaPagoPuntoVenta.getRowCount()-1);						
			}
						
			this.invalidValues=new InvalidValue[0];
			this.habilitarDeshabilitarControlesFormaPagoPuntoVenta(false);
			this.cancelar(true);			
			this.inicializarActualizarBindingTablaFormaPagoPuntoVenta(false);
			
			//NO FUNCIONA BINDINGS
			this.inicializarActualizarBindingBotonesFormaPagoPuntoVenta(false) ;
			
			//SI ES MANUAL
			//this.inicializarActualizarBindingBotonesManualFormaPagoPuntoVenta(false) ;
			
			this.isEsNuevoFormaPagoPuntoVenta=false;
			
			if(FormaPagoPuntoVentaJInternalFrame.CON_DATOS_FRAME) {
				this.cerrarFrameDetalleFormaPagoPuntoVenta();
			}
			
		} catch(Exception e) {
			FuncionesSwing.manageException(this, e,logger,FormaPagoPuntoVentaConstantesFunciones.CLASSNAME);
		}
	}
	
	public void jButtonGuardarCambiosFormaPagoPuntoVentaActionPerformed(ActionEvent evt) throws Exception {    		
		try	{
			
			if(Constantes.ISUSAEJBLOGICLAYER) {
				this.formapagopuntoventaLogic.getNewConnexionToDeep("");
			}
			
			//this.estaModoGuardarCambios=true;
			
	    	this.guardarCambios();
			
			if(!this.isErrorGuardar) {
				this.procesarBusqueda(this.sAccionBusqueda);
				
				//NO FUNCIONA BINDINGS
				this.inicializarActualizarBindingFormaPagoPuntoVenta(false);
				
				//SI ES MANUAL
				if(FormaPagoPuntoVentaJInternalFrame.ISBINDING_MANUAL) {				
					//this.inicializarActualizarBindingManualFormaPagoPuntoVenta();				
				}
			}
			
			if(Constantes.ISUSAEJBLOGICLAYER) {
				this.formapagopuntoventaLogic.commitNewConnexionToDeep();
			}
			
		} catch(Exception e) {
			if(Constantes.ISUSAEJBLOGICLAYER) {
				this.formapagopuntoventaLogic.rollbackNewConnexionToDeep();
			}

			FuncionesSwing.manageException(this, e,logger,FormaPagoPuntoVentaConstantesFunciones.CLASSNAME);
		
		} finally {
			if(Constantes.ISUSAEJBLOGICLAYER) {
				this.formapagopuntoventaLogic.closeNewConnexionToDeep();
			}
			
			//this.estaModoGuardarCambios=false;
		}
	}
	
	public void jButtonNuevoGuardarCambiosFormaPagoPuntoVentaActionPerformed(ActionEvent evt) throws Exception {    		
		try	{
			
			this.estaModoNuevo=true;
			this.estaModoNuevoGuardarCambios=true;
			
			//LO HACE NUEVOPREPARAR
			//this.iIdNuevoFormaPagoPuntoVenta--;			
			//FormaPagoPuntoVenta formapagopuntoventaAux= new FormaPagoPuntoVenta();			
			//formapagopuntoventaAux.setId(this.iIdNuevoFormaPagoPuntoVenta);
			
			if(this.jInternalFrameDetalleFormFormaPagoPuntoVenta==null) { //if(!this.conCargarFormDetalle) {
				this.inicializarFormDetalle();
			}
			
			this.aumentarTamanioFilaNuevaTablaFormaPagoPuntoVenta();
			
			if(this.conTotales) {
				this.quitarFilaTotales();
			}
			
			this.nuevoPreparar(true);
			
			this.setVariablesFormularioToObjetoActualForeignKeysFormaPagoPuntoVenta(this.formapagopuntoventa);
			
			this.formapagopuntoventa.setsType("NUEVO_GUARDAR_CAMBIOS");
			
			//LO HACE NUEVOPREPARAR
			/*
			if(Constantes.ISUSAEJBLOGICLAYER) {				
				this.formapagopuntoventaLogic.getFormaPagoPuntoVentas().add(this.formapagopuntoventaAux);
			} else if(Constantes.ISUSAEJBREMOTE||Constantes.ISUSAEJBHOME) {
				this.formapagopuntoventas.add(this.formapagopuntoventaAux);				
			}
			*/
			
			this.inicializarActualizarBindingTablaFormaPagoPuntoVenta(false);
			
			this.jTableDatosFormaPagoPuntoVenta.setRowSelectionInterval(this.getIndiceNuevoFormaPagoPuntoVenta(), this.getIndiceNuevoFormaPagoPuntoVenta());
			
			int iLastRow =  this.jTableDatosFormaPagoPuntoVenta.getRowCount () - 1;
			Rectangle rectangle = this.jTableDatosFormaPagoPuntoVenta.getCellRect(iLastRow, 0, true);
			
			this.jTableDatosFormaPagoPuntoVenta.scrollRectToVisible(rectangle);
			
			//FILA TOTALES
			if(this.conTotales) {
				this.crearFilaTotales();
				
				this.inicializarActualizarBindingTablaFormaPagoPuntoVenta(false);
			}

		} catch(Exception e) {									
			FuncionesSwing.manageException(this, e,logger,FormaPagoPuntoVentaConstantesFunciones.CLASSNAME);
			
		} finally {
			this.estaModoNuevo=false;
			this.estaModoNuevoGuardarCambios=false;
		}
	}		
	
	public void jButtonRecargarInformacionFormaPagoPuntoVentaActionPerformed(ActionEvent evt) throws Exception {    		
		try {
			this.iNumeroPaginacionPagina=0;
			
			if(Constantes.ISUSAEJBLOGICLAYER) {
				this.formapagopuntoventaLogic.getNewConnexionToDeep("");
			}
			
			this.inicializarActualizarBindingFormaPagoPuntoVenta(false,false);
			
	    	this.recargarInformacion();
			
			//NO FUNCIONA BINDINGS
			this.inicializarActualizarBindingFormaPagoPuntoVenta(false);
			
			//SI ES MANUAL
			if(FormaPagoPuntoVentaJInternalFrame.ISBINDING_MANUAL) {
				//this.inicializarActualizarBindingManualFormaPagoPuntoVenta();
			}
			
			//this.abrirFrameTreeFormaPagoPuntoVenta();
			
			if(Constantes.ISUSAEJBLOGICLAYER) {
				this.formapagopuntoventaLogic.commitNewConnexionToDeep();
			}
			
		} catch(Exception e) {
			if(Constantes.ISUSAEJBLOGICLAYER) {
				this.formapagopuntoventaLogic.rollbackNewConnexionToDeep();
			}
			
			FuncionesSwing.manageException(this, e,logger,FormaPagoPuntoVentaConstantesFunciones.CLASSNAME);
		
		} finally {
			if(Constantes.ISUSAEJBLOGICLAYER) {
				this.formapagopuntoventaLogic.closeNewConnexionToDeep();
			}
		}	
	}
	
	/*
	public void jButtonGenerarImportacionFormaPagoPuntoVentaActionPerformed(ActionEvent evt) throws Exception {    				
		BufferedReader bufferedReader = null;
		String sXmlStringFile="";
		String sPath="";
		this.arrDatoGeneralMinimos= new  ArrayList<DatoGeneralMinimo>();
		DatoGeneralMinimo datoGeneralMinimo=new DatoGeneralMinimo();
		String sLine="";
		
		try {			
			if(JOptionPane.showConfirmDialog(this, "ESTA SEGURO DE PROCESAR IMPORTACION DE Forma PagoES ?", "MANTENIMIENTO DE Forma Pago", JOptionPane.OK_CANCEL_OPTION) == 0) {
				bufferedReader = new BufferedReader(new FileReader(this.jInternalFrameImportacionFormaPagoPuntoVenta.getFileImportacion().getAbsolutePath()));
								
				while ((sLine = bufferedReader.readLine()) != null) {
					datoGeneralMinimo=new DatoGeneralMinimo();
					datoGeneralMinimo.setsDescripcion(sLine);
					
					this.arrDatoGeneralMinimos.add(datoGeneralMinimo);
				}
				
				this.actualizarParametrosGeneralFormaPagoPuntoVenta();
						
				//ARCHITECTURE
				if(Constantes.ISUSAEJBLOGICLAYER) {						
					this.formapagopuntoventaReturnGeneral=formapagopuntoventaLogic.procesarImportacionFormaPagoPuntoVentasWithConnection(this.parametroGeneralUsuario,this.moduloActual,this.opcionActual,this.usuarioActual,this.arrDatoGeneralMinimos,this.formapagopuntoventaParameterGeneral);
						
				} else if(Constantes.ISUSAEJBREMOTE) {
						
				} else if(Constantes.ISUSAEJBHOME) {
				}
				//ARCHITECTURE
						
				this.procesarFormaPagoPuntoVentaReturnGeneral();
			}
		} catch(Exception e) {
			FuncionesSwing.manageException(this, e,logger,FormaPagoPuntoVentaConstantesFunciones.CLASSNAME);
		
		} finally {			
			if (bufferedReader != null) {
				bufferedReader.close();
			}	
		}				
	}
	*/
	
	/*
	public void jButtonAbrirImportacionFormaPagoPuntoVentaActionPerformed(ActionEvent evt) throws Exception {    				
		BufferedWriter bufferedWriter = null;
		String sXmlStringFile="";
		String sPath="";
		
		try {
			int iReturnArchivo = this.jInternalFrameImportacionFormaPagoPuntoVenta.getjFileChooserImportacion().showOpenDialog(this);
 
            if (iReturnArchivo == JFileChooser.APPROVE_OPTION) {
            	this.jInternalFrameImportacionFormaPagoPuntoVenta.setFileImportacion(this.jInternalFrameImportacionFormaPagoPuntoVenta.getjFileChooserImportacion().getSelectedFile());
            	
				this.jInternalFrameImportacionFormaPagoPuntoVenta.getjTextFieldPathArchivoImportacion().setText(this.jInternalFrameImportacionFormaPagoPuntoVenta.getFileImportacion().getName());
				
				//System.out.println("ARCHIVO ESCOGIDO: "+this.fileImportacionFormaPagoPuntoVenta.getName());
				
            } else {
                //System.out.println("CANCELAR SELECCION");
				this.jInternalFrameImportacionFormaPagoPuntoVenta.getjTextFieldPathArchivoImportacion().setText("SELECCION CANCELADA");
            }			
		} catch(Exception e) {
			FuncionesSwing.manageException(this, e,logger,FormaPagoPuntoVentaConstantesFunciones.CLASSNAME);
		
		} finally {			
			if (bufferedWriter != null) {
				bufferedWriter.close();
			}	
		}		
	}
	*/
	
	public void jButtonGenerarReporteDinamicoFormaPagoPuntoVentaActionPerformed(ActionEvent evt) throws Exception {    		
		BufferedWriter bufferedWriter = null;
		String sXmlStringFile="";
		String sPath="";
		
		try {	
		
		ArrayList<FormaPagoPuntoVenta> formapagopuntoventasSeleccionados=new ArrayList<FormaPagoPuntoVenta>();		

		formapagopuntoventasSeleccionados=this.getFormaPagoPuntoVentasSeleccionados(true);
		
		/*
		this.sTipoReporteDinamico=((Reporte)this.jInternalFrameReporteDinamicoFormaPagoPuntoVenta.getjComboBoxTiposReportesDinamico().getSelectedItem()).getsCodigo();
		
		this.sTipoArchivoReporteDinamico=((Reporte)this.jInternalFrameReporteDinamicoFormaPagoPuntoVenta.getjComboBoxTiposArchivosReportesDinamico().getSelectedItem()).getsCodigo();			
		*/
		
		this.sTipoArchivoReporte=this.sTipoArchivoReporteDinamico;
		
		//this.sTipoReporteExtra="Base";
		
			InputStream reportFile=null;
			InputStream imageFile=null;
			
			imageFile=AuxiliarImagenes.class.getResourceAsStream("LogoReporte.jpg");			
				
		
		
			reportFile = AuxiliarReportes.class.getResourceAsStream("FormaPagoPuntoVentaBaseDesign.jrxml");	
			
			sPath=this.parametroGeneralUsuario.getpath_exportar()+"FormaPagoPuntoVentaBaseDesign.jrxml";
			
			sXmlStringFile=Funciones2.getStringFromInputStream(reportFile);
						
			bufferedWriter = new BufferedWriter(new FileWriter(sPath));
			
			/*
			sXmlStringFile=this.actualizarReporteDinamico(sXmlStringFile);
			*/
			
			bufferedWriter.write(sXmlStringFile);
			
			bufferedWriter.close();
			
			try{JasperCompileManager.compileReportToFile(sPath);}catch(Exception e){e.printStackTrace();}
			
			this.actualizarVariablesTipoReporte(false,true,false,sPath);
			
			/*
			this.esReporteDinamico=true;
			this.sPathReporteDinamico=sPath.replace(".jrxml",".jasper");
			this.sTipoReporteExtra="";
			*/
			
			this.generarReporteFormaPagoPuntoVentas("Todos",formapagopuntoventasSeleccionados );

			if(this.parametroGeneralUsuario.getcon_mensaje_confirmacion() && !this.formapagopuntoventaSessionBean.getEsGuardarRelacionado()) {//Constantes.ISMOSTRARMENSAJESMANTENIMIENTO && 
				//DEBE APARECER EL REPORTE DIRECTAMENTE
				//JOptionPane.showMessageDialog(this,"GENERADO CORRECTAMENTE:"+sPath,"MANTENIMIENTO DE Forma Pago",JOptionPane.INFORMATION_MESSAGE);
			}
			
		} catch(Exception e) {
			FuncionesSwing.manageException(this, e,logger,FormaPagoPuntoVentaConstantesFunciones.CLASSNAME);
		
		} finally {			
			if (bufferedWriter != null) {
				bufferedWriter.close();
			}	
		}
	}		
	
	/*
	public String actualizarReporteDinamico(String sXmlStringFile) {				
		Reporte reporte=new Reporte();
		Integer iAnchoMaximoVertical=535;//781,782
		Integer iAnchoMaximoHorizontal=782;
		Integer iAnchoSum=0;
		Integer iAnchoColumna=0;
		
		Integer iAnchoMargenes=60;
		String sWidthGrafico="535";
		
		for(int index:this.jInternalFrameReporteDinamicoFormaPagoPuntoVenta.getjListColumnasSelectReporte().getSelectedIndices()) {
			reporte=(Reporte)this.jInternalFrameReporteDinamicoFormaPagoPuntoVenta.getjListColumnasSelectReporte().getModel().getElementAt(index);
			
			switch(reporte.getsCodigo()) {
				
				case FormaPagoPuntoVentaConstantesFunciones.LABEL_IDEMPRESA:
					iAnchoColumna=100;

					if(iAnchoSum+iAnchoColumna<=iAnchoMaximoHorizontal) {
						sXmlStringFile=sXmlStringFile.replace("<!--col_Empresa_col", "");
						sXmlStringFile=sXmlStringFile.replace("col_Empresa_col-->", "");

						sXmlStringFile=sXmlStringFile.replace("colancho_Empresa_colancho", iAnchoColumna.toString());
						sXmlStringFile=sXmlStringFile.replace("colx_Empresa_colx", iAnchoSum.toString());

						iAnchoSum+=iAnchoColumna;
					}

					break;

				case FormaPagoPuntoVentaConstantesFunciones.LABEL_IDSUCURSAL:
					iAnchoColumna=100;

					if(iAnchoSum+iAnchoColumna<=iAnchoMaximoHorizontal) {
						sXmlStringFile=sXmlStringFile.replace("<!--col_Sucursal_col", "");
						sXmlStringFile=sXmlStringFile.replace("col_Sucursal_col-->", "");

						sXmlStringFile=sXmlStringFile.replace("colancho_Sucursal_colancho", iAnchoColumna.toString());
						sXmlStringFile=sXmlStringFile.replace("colx_Sucursal_colx", iAnchoSum.toString());

						iAnchoSum+=iAnchoColumna;
					}

					break;

				case FormaPagoPuntoVentaConstantesFunciones.LABEL_IDEJERCICIO:
					iAnchoColumna=100;

					if(iAnchoSum+iAnchoColumna<=iAnchoMaximoHorizontal) {
						sXmlStringFile=sXmlStringFile.replace("<!--col_Ejercicio_col", "");
						sXmlStringFile=sXmlStringFile.replace("col_Ejercicio_col-->", "");

						sXmlStringFile=sXmlStringFile.replace("colancho_Ejercicio_colancho", iAnchoColumna.toString());
						sXmlStringFile=sXmlStringFile.replace("colx_Ejercicio_colx", iAnchoSum.toString());

						iAnchoSum+=iAnchoColumna;
					}

					break;

				case FormaPagoPuntoVentaConstantesFunciones.LABEL_IDPERIODO:
					iAnchoColumna=100;

					if(iAnchoSum+iAnchoColumna<=iAnchoMaximoHorizontal) {
						sXmlStringFile=sXmlStringFile.replace("<!--col_Periodo_col", "");
						sXmlStringFile=sXmlStringFile.replace("col_Periodo_col-->", "");

						sXmlStringFile=sXmlStringFile.replace("colancho_Periodo_colancho", iAnchoColumna.toString());
						sXmlStringFile=sXmlStringFile.replace("colx_Periodo_colx", iAnchoSum.toString());

						iAnchoSum+=iAnchoColumna;
					}

					break;

				case FormaPagoPuntoVentaConstantesFunciones.LABEL_IDFACTURAPUNTOVENTA:
					iAnchoColumna=100;

					if(iAnchoSum+iAnchoColumna<=iAnchoMaximoHorizontal) {
						sXmlStringFile=sXmlStringFile.replace("<!--col_FacturaPuntoVenta_col", "");
						sXmlStringFile=sXmlStringFile.replace("col_FacturaPuntoVenta_col-->", "");

						sXmlStringFile=sXmlStringFile.replace("colancho_FacturaPuntoVenta_colancho", iAnchoColumna.toString());
						sXmlStringFile=sXmlStringFile.replace("colx_FacturaPuntoVenta_colx", iAnchoSum.toString());

						iAnchoSum+=iAnchoColumna;
					}

					break;

				case FormaPagoPuntoVentaConstantesFunciones.LABEL_IDTIPOFORMAPAGO:
					iAnchoColumna=100;

					if(iAnchoSum+iAnchoColumna<=iAnchoMaximoHorizontal) {
						sXmlStringFile=sXmlStringFile.replace("<!--col_TipoFormaPago_col", "");
						sXmlStringFile=sXmlStringFile.replace("col_TipoFormaPago_col-->", "");

						sXmlStringFile=sXmlStringFile.replace("colancho_TipoFormaPago_colancho", iAnchoColumna.toString());
						sXmlStringFile=sXmlStringFile.replace("colx_TipoFormaPago_colx", iAnchoSum.toString());

						iAnchoSum+=iAnchoColumna;
					}

					break;

				case FormaPagoPuntoVentaConstantesFunciones.LABEL_PORCENTAJE:
					iAnchoColumna=50;

					if(iAnchoSum+iAnchoColumna<=iAnchoMaximoHorizontal) {
						sXmlStringFile=sXmlStringFile.replace("<!--col_rcentaje_col", "");
						sXmlStringFile=sXmlStringFile.replace("col_rcentaje_col-->", "");

						sXmlStringFile=sXmlStringFile.replace("colancho_rcentaje_colancho", iAnchoColumna.toString());
						sXmlStringFile=sXmlStringFile.replace("colx_rcentaje_colx", iAnchoSum.toString());

						iAnchoSum+=iAnchoColumna;
					}

					break;

				case FormaPagoPuntoVentaConstantesFunciones.LABEL_VALOR:
					iAnchoColumna=50;

					if(iAnchoSum+iAnchoColumna<=iAnchoMaximoHorizontal) {
						sXmlStringFile=sXmlStringFile.replace("<!--col_lor_col", "");
						sXmlStringFile=sXmlStringFile.replace("col_lor_col-->", "");

						sXmlStringFile=sXmlStringFile.replace("colancho_lor_colancho", iAnchoColumna.toString());
						sXmlStringFile=sXmlStringFile.replace("colx_lor_colx", iAnchoSum.toString());

						iAnchoSum+=iAnchoColumna;
					}

					break;

				case FormaPagoPuntoVentaConstantesFunciones.LABEL_FECHA:
					iAnchoColumna=50;

					if(iAnchoSum+iAnchoColumna<=iAnchoMaximoHorizontal) {
						sXmlStringFile=sXmlStringFile.replace("<!--col_cha_col", "");
						sXmlStringFile=sXmlStringFile.replace("col_cha_col-->", "");

						sXmlStringFile=sXmlStringFile.replace("colancho_cha_colancho", iAnchoColumna.toString());
						sXmlStringFile=sXmlStringFile.replace("colx_cha_colx", iAnchoSum.toString());

						iAnchoSum+=iAnchoColumna;
					}

					break;

				case FormaPagoPuntoVentaConstantesFunciones.LABEL_DESCRIPCION:
					iAnchoColumna=100;

					if(iAnchoSum+iAnchoColumna<=iAnchoMaximoHorizontal) {
						sXmlStringFile=sXmlStringFile.replace("<!--col_scripcion_col", "");
						sXmlStringFile=sXmlStringFile.replace("col_scripcion_col-->", "");

						sXmlStringFile=sXmlStringFile.replace("colancho_scripcion_colancho", iAnchoColumna.toString());
						sXmlStringFile=sXmlStringFile.replace("colx_scripcion_colx", iAnchoSum.toString());

						iAnchoSum+=iAnchoColumna;
					}

					break;

				case FormaPagoPuntoVentaConstantesFunciones.LABEL_FECHAINICIO:
					iAnchoColumna=50;

					if(iAnchoSum+iAnchoColumna<=iAnchoMaximoHorizontal) {
						sXmlStringFile=sXmlStringFile.replace("<!--col_chaInicio_col", "");
						sXmlStringFile=sXmlStringFile.replace("col_chaInicio_col-->", "");

						sXmlStringFile=sXmlStringFile.replace("colancho_chaInicio_colancho", iAnchoColumna.toString());
						sXmlStringFile=sXmlStringFile.replace("colx_chaInicio_colx", iAnchoSum.toString());

						iAnchoSum+=iAnchoColumna;
					}

					break;

				case FormaPagoPuntoVentaConstantesFunciones.LABEL_NUMERODIASPLAZO:
					iAnchoColumna=50;

					if(iAnchoSum+iAnchoColumna<=iAnchoMaximoHorizontal) {
						sXmlStringFile=sXmlStringFile.replace("<!--col_meroDiasPlazo_col", "");
						sXmlStringFile=sXmlStringFile.replace("col_meroDiasPlazo_col-->", "");

						sXmlStringFile=sXmlStringFile.replace("colancho_meroDiasPlazo_colancho", iAnchoColumna.toString());
						sXmlStringFile=sXmlStringFile.replace("colx_meroDiasPlazo_colx", iAnchoSum.toString());

						iAnchoSum+=iAnchoColumna;
					}

					break;

				case FormaPagoPuntoVentaConstantesFunciones.LABEL_FECHAFIN:
					iAnchoColumna=50;

					if(iAnchoSum+iAnchoColumna<=iAnchoMaximoHorizontal) {
						sXmlStringFile=sXmlStringFile.replace("<!--col_chaFin_col", "");
						sXmlStringFile=sXmlStringFile.replace("col_chaFin_col-->", "");

						sXmlStringFile=sXmlStringFile.replace("colancho_chaFin_colancho", iAnchoColumna.toString());
						sXmlStringFile=sXmlStringFile.replace("colx_chaFin_colx", iAnchoSum.toString());

						iAnchoSum+=iAnchoColumna;
					}

					break;

				case FormaPagoPuntoVentaConstantesFunciones.LABEL_IDBANCO:
					iAnchoColumna=100;

					if(iAnchoSum+iAnchoColumna<=iAnchoMaximoHorizontal) {
						sXmlStringFile=sXmlStringFile.replace("<!--col_Banco_col", "");
						sXmlStringFile=sXmlStringFile.replace("col_Banco_col-->", "");

						sXmlStringFile=sXmlStringFile.replace("colancho_Banco_colancho", iAnchoColumna.toString());
						sXmlStringFile=sXmlStringFile.replace("colx_Banco_colx", iAnchoSum.toString());

						iAnchoSum+=iAnchoColumna;
					}

					break;

				case FormaPagoPuntoVentaConstantesFunciones.LABEL_IDCUENTABANCOPUNVEN:
					iAnchoColumna=100;

					if(iAnchoSum+iAnchoColumna<=iAnchoMaximoHorizontal) {
						sXmlStringFile=sXmlStringFile.replace("<!--col_CuentaBancoPunVen_col", "");
						sXmlStringFile=sXmlStringFile.replace("col_CuentaBancoPunVen_col-->", "");

						sXmlStringFile=sXmlStringFile.replace("colancho_CuentaBancoPunVen_colancho", iAnchoColumna.toString());
						sXmlStringFile=sXmlStringFile.replace("colx_CuentaBancoPunVen_colx", iAnchoSum.toString());

						iAnchoSum+=iAnchoColumna;
					}

					break;

				case FormaPagoPuntoVentaConstantesFunciones.LABEL_IDTIPORIESGOCHEQUE:
					iAnchoColumna=100;

					if(iAnchoSum+iAnchoColumna<=iAnchoMaximoHorizontal) {
						sXmlStringFile=sXmlStringFile.replace("<!--col_TipoRiesgoCheque_col", "");
						sXmlStringFile=sXmlStringFile.replace("col_TipoRiesgoCheque_col-->", "");

						sXmlStringFile=sXmlStringFile.replace("colancho_TipoRiesgoCheque_colancho", iAnchoColumna.toString());
						sXmlStringFile=sXmlStringFile.replace("colx_TipoRiesgoCheque_colx", iAnchoSum.toString());

						iAnchoSum+=iAnchoColumna;
					}

					break;

				case FormaPagoPuntoVentaConstantesFunciones.LABEL_NUMEROCUENTA:
					iAnchoColumna=100;

					if(iAnchoSum+iAnchoColumna<=iAnchoMaximoHorizontal) {
						sXmlStringFile=sXmlStringFile.replace("<!--col_meroCuenta_col", "");
						sXmlStringFile=sXmlStringFile.replace("col_meroCuenta_col-->", "");

						sXmlStringFile=sXmlStringFile.replace("colancho_meroCuenta_colancho", iAnchoColumna.toString());
						sXmlStringFile=sXmlStringFile.replace("colx_meroCuenta_colx", iAnchoSum.toString());

						iAnchoSum+=iAnchoColumna;
					}

					break;

				case FormaPagoPuntoVentaConstantesFunciones.LABEL_NUMEROCHEQUE:
					iAnchoColumna=100;

					if(iAnchoSum+iAnchoColumna<=iAnchoMaximoHorizontal) {
						sXmlStringFile=sXmlStringFile.replace("<!--col_meroCheque_col", "");
						sXmlStringFile=sXmlStringFile.replace("col_meroCheque_col-->", "");

						sXmlStringFile=sXmlStringFile.replace("colancho_meroCheque_colancho", iAnchoColumna.toString());
						sXmlStringFile=sXmlStringFile.replace("colx_meroCheque_colx", iAnchoSum.toString());

						iAnchoSum+=iAnchoColumna;
					}

					break;

				case FormaPagoPuntoVentaConstantesFunciones.LABEL_GIRADOR:
					iAnchoColumna=100;

					if(iAnchoSum+iAnchoColumna<=iAnchoMaximoHorizontal) {
						sXmlStringFile=sXmlStringFile.replace("<!--col_rador_col", "");
						sXmlStringFile=sXmlStringFile.replace("col_rador_col-->", "");

						sXmlStringFile=sXmlStringFile.replace("colancho_rador_colancho", iAnchoColumna.toString());
						sXmlStringFile=sXmlStringFile.replace("colx_rador_colx", iAnchoSum.toString());

						iAnchoSum+=iAnchoColumna;
					}

					break;

				case FormaPagoPuntoVentaConstantesFunciones.LABEL_IDBANCOTARJETA:
					iAnchoColumna=100;

					if(iAnchoSum+iAnchoColumna<=iAnchoMaximoHorizontal) {
						sXmlStringFile=sXmlStringFile.replace("<!--col_BancoTarjeta_col", "");
						sXmlStringFile=sXmlStringFile.replace("col_BancoTarjeta_col-->", "");

						sXmlStringFile=sXmlStringFile.replace("colancho_BancoTarjeta_colancho", iAnchoColumna.toString());
						sXmlStringFile=sXmlStringFile.replace("colx_BancoTarjeta_colx", iAnchoSum.toString());

						iAnchoSum+=iAnchoColumna;
					}

					break;

				case FormaPagoPuntoVentaConstantesFunciones.LABEL_IDTARJETACREDITO:
					iAnchoColumna=100;

					if(iAnchoSum+iAnchoColumna<=iAnchoMaximoHorizontal) {
						sXmlStringFile=sXmlStringFile.replace("<!--col_TarjetaCredito_col", "");
						sXmlStringFile=sXmlStringFile.replace("col_TarjetaCredito_col-->", "");

						sXmlStringFile=sXmlStringFile.replace("colancho_TarjetaCredito_colancho", iAnchoColumna.toString());
						sXmlStringFile=sXmlStringFile.replace("colx_TarjetaCredito_colx", iAnchoSum.toString());

						iAnchoSum+=iAnchoColumna;
					}

					break;

				case FormaPagoPuntoVentaConstantesFunciones.LABEL_IDTIPOINTERESTARJETA:
					iAnchoColumna=100;

					if(iAnchoSum+iAnchoColumna<=iAnchoMaximoHorizontal) {
						sXmlStringFile=sXmlStringFile.replace("<!--col_TipoInteresTarjeta_col", "");
						sXmlStringFile=sXmlStringFile.replace("col_TipoInteresTarjeta_col-->", "");

						sXmlStringFile=sXmlStringFile.replace("colancho_TipoInteresTarjeta_colancho", iAnchoColumna.toString());
						sXmlStringFile=sXmlStringFile.replace("colx_TipoInteresTarjeta_colx", iAnchoSum.toString());

						iAnchoSum+=iAnchoColumna;
					}

					break;

				case FormaPagoPuntoVentaConstantesFunciones.LABEL_IDTIPOPAGOTARJETA:
					iAnchoColumna=100;

					if(iAnchoSum+iAnchoColumna<=iAnchoMaximoHorizontal) {
						sXmlStringFile=sXmlStringFile.replace("<!--col_TipoPagoTarjeta_col", "");
						sXmlStringFile=sXmlStringFile.replace("col_TipoPagoTarjeta_col-->", "");

						sXmlStringFile=sXmlStringFile.replace("colancho_TipoPagoTarjeta_colancho", iAnchoColumna.toString());
						sXmlStringFile=sXmlStringFile.replace("colx_TipoPagoTarjeta_colx", iAnchoSum.toString());

						iAnchoSum+=iAnchoColumna;
					}

					break;

				case FormaPagoPuntoVentaConstantesFunciones.LABEL_IDCONEXION:
					iAnchoColumna=100;

					if(iAnchoSum+iAnchoColumna<=iAnchoMaximoHorizontal) {
						sXmlStringFile=sXmlStringFile.replace("<!--col_Conexion_col", "");
						sXmlStringFile=sXmlStringFile.replace("col_Conexion_col-->", "");

						sXmlStringFile=sXmlStringFile.replace("colancho_Conexion_colancho", iAnchoColumna.toString());
						sXmlStringFile=sXmlStringFile.replace("colx_Conexion_colx", iAnchoSum.toString());

						iAnchoSum+=iAnchoColumna;
					}

					break;

				case FormaPagoPuntoVentaConstantesFunciones.LABEL_IDMES:
					iAnchoColumna=100;

					if(iAnchoSum+iAnchoColumna<=iAnchoMaximoHorizontal) {
						sXmlStringFile=sXmlStringFile.replace("<!--col_Mes_col", "");
						sXmlStringFile=sXmlStringFile.replace("col_Mes_col-->", "");

						sXmlStringFile=sXmlStringFile.replace("colancho_Mes_colancho", iAnchoColumna.toString());
						sXmlStringFile=sXmlStringFile.replace("colx_Mes_colx", iAnchoSum.toString());

						iAnchoSum+=iAnchoColumna;
					}

					break;

				case FormaPagoPuntoVentaConstantesFunciones.LABEL_NUMERO:
					iAnchoColumna=100;

					if(iAnchoSum+iAnchoColumna<=iAnchoMaximoHorizontal) {
						sXmlStringFile=sXmlStringFile.replace("<!--col_mero_col", "");
						sXmlStringFile=sXmlStringFile.replace("col_mero_col-->", "");

						sXmlStringFile=sXmlStringFile.replace("colancho_mero_colancho", iAnchoColumna.toString());
						sXmlStringFile=sXmlStringFile.replace("colx_mero_colx", iAnchoSum.toString());

						iAnchoSum+=iAnchoColumna;
					}

					break;

				case FormaPagoPuntoVentaConstantesFunciones.LABEL_TARJETAHABIENTE:
					iAnchoColumna=100;

					if(iAnchoSum+iAnchoColumna<=iAnchoMaximoHorizontal) {
						sXmlStringFile=sXmlStringFile.replace("<!--col_rjetaHabiente_col", "");
						sXmlStringFile=sXmlStringFile.replace("col_rjetaHabiente_col-->", "");

						sXmlStringFile=sXmlStringFile.replace("colancho_rjetaHabiente_colancho", iAnchoColumna.toString());
						sXmlStringFile=sXmlStringFile.replace("colx_rjetaHabiente_colx", iAnchoSum.toString());

						iAnchoSum+=iAnchoColumna;
					}

					break;

				case FormaPagoPuntoVentaConstantesFunciones.LABEL_AUTORIZACION:
					iAnchoColumna=100;

					if(iAnchoSum+iAnchoColumna<=iAnchoMaximoHorizontal) {
						sXmlStringFile=sXmlStringFile.replace("<!--col_torizacion_col", "");
						sXmlStringFile=sXmlStringFile.replace("col_torizacion_col-->", "");

						sXmlStringFile=sXmlStringFile.replace("colancho_torizacion_colancho", iAnchoColumna.toString());
						sXmlStringFile=sXmlStringFile.replace("colx_torizacion_colx", iAnchoSum.toString());

						iAnchoSum+=iAnchoColumna;
					}

					break;

				case FormaPagoPuntoVentaConstantesFunciones.LABEL_VOUCHER:
					iAnchoColumna=100;

					if(iAnchoSum+iAnchoColumna<=iAnchoMaximoHorizontal) {
						sXmlStringFile=sXmlStringFile.replace("<!--col_ucher_col", "");
						sXmlStringFile=sXmlStringFile.replace("col_ucher_col-->", "");

						sXmlStringFile=sXmlStringFile.replace("colancho_ucher_colancho", iAnchoColumna.toString());
						sXmlStringFile=sXmlStringFile.replace("colx_ucher_colx", iAnchoSum.toString());

						iAnchoSum+=iAnchoColumna;
					}

					break;

				case FormaPagoPuntoVentaConstantesFunciones.LABEL_LOTE:
					iAnchoColumna=100;

					if(iAnchoSum+iAnchoColumna<=iAnchoMaximoHorizontal) {
						sXmlStringFile=sXmlStringFile.replace("<!--col_te_col", "");
						sXmlStringFile=sXmlStringFile.replace("col_te_col-->", "");

						sXmlStringFile=sXmlStringFile.replace("colancho_te_colancho", iAnchoColumna.toString());
						sXmlStringFile=sXmlStringFile.replace("colx_te_colx", iAnchoSum.toString());

						iAnchoSum+=iAnchoColumna;
					}

					break;

				case FormaPagoPuntoVentaConstantesFunciones.LABEL_CUOTA:
					iAnchoColumna=50;

					if(iAnchoSum+iAnchoColumna<=iAnchoMaximoHorizontal) {
						sXmlStringFile=sXmlStringFile.replace("<!--col_ota_col", "");
						sXmlStringFile=sXmlStringFile.replace("col_ota_col-->", "");

						sXmlStringFile=sXmlStringFile.replace("colancho_ota_colancho", iAnchoColumna.toString());
						sXmlStringFile=sXmlStringFile.replace("colx_ota_colx", iAnchoSum.toString());

						iAnchoSum+=iAnchoColumna;
					}

					break;

				case FormaPagoPuntoVentaConstantesFunciones.LABEL_VALORRETENCION:
					iAnchoColumna=50;

					if(iAnchoSum+iAnchoColumna<=iAnchoMaximoHorizontal) {
						sXmlStringFile=sXmlStringFile.replace("<!--col_lorRetencion_col", "");
						sXmlStringFile=sXmlStringFile.replace("col_lorRetencion_col-->", "");

						sXmlStringFile=sXmlStringFile.replace("colancho_lorRetencion_colancho", iAnchoColumna.toString());
						sXmlStringFile=sXmlStringFile.replace("colx_lorRetencion_colx", iAnchoSum.toString());

						iAnchoSum+=iAnchoColumna;
					}

					break;

				case FormaPagoPuntoVentaConstantesFunciones.LABEL_VALORCOMISION:
					iAnchoColumna=50;

					if(iAnchoSum+iAnchoColumna<=iAnchoMaximoHorizontal) {
						sXmlStringFile=sXmlStringFile.replace("<!--col_lorComision_col", "");
						sXmlStringFile=sXmlStringFile.replace("col_lorComision_col-->", "");

						sXmlStringFile=sXmlStringFile.replace("colancho_lorComision_colancho", iAnchoColumna.toString());
						sXmlStringFile=sXmlStringFile.replace("colx_lorComision_colx", iAnchoSum.toString());

						iAnchoSum+=iAnchoColumna;
					}

					break;

				case FormaPagoPuntoVentaConstantesFunciones.LABEL_VALORCALCULADO:
					iAnchoColumna=50;

					if(iAnchoSum+iAnchoColumna<=iAnchoMaximoHorizontal) {
						sXmlStringFile=sXmlStringFile.replace("<!--col_lorCalculado_col", "");
						sXmlStringFile=sXmlStringFile.replace("col_lorCalculado_col-->", "");

						sXmlStringFile=sXmlStringFile.replace("colancho_lorCalculado_colancho", iAnchoColumna.toString());
						sXmlStringFile=sXmlStringFile.replace("colx_lorCalculado_colx", iAnchoSum.toString());

						iAnchoSum+=iAnchoColumna;
					}

					break;

				case FormaPagoPuntoVentaConstantesFunciones.LABEL_VALORCANCELADO:
					iAnchoColumna=50;

					if(iAnchoSum+iAnchoColumna<=iAnchoMaximoHorizontal) {
						sXmlStringFile=sXmlStringFile.replace("<!--col_lorCancelado_col", "");
						sXmlStringFile=sXmlStringFile.replace("col_lorCancelado_col-->", "");

						sXmlStringFile=sXmlStringFile.replace("colancho_lorCancelado_colancho", iAnchoColumna.toString());
						sXmlStringFile=sXmlStringFile.replace("colx_lorCancelado_colx", iAnchoSum.toString());

						iAnchoSum+=iAnchoColumna;
					}

					break;

				case FormaPagoPuntoVentaConstantesFunciones.LABEL_VALORDIFIERE:
					iAnchoColumna=50;

					if(iAnchoSum+iAnchoColumna<=iAnchoMaximoHorizontal) {
						sXmlStringFile=sXmlStringFile.replace("<!--col_lorDifiere_col", "");
						sXmlStringFile=sXmlStringFile.replace("col_lorDifiere_col-->", "");

						sXmlStringFile=sXmlStringFile.replace("colancho_lorDifiere_colancho", iAnchoColumna.toString());
						sXmlStringFile=sXmlStringFile.replace("colx_lorDifiere_colx", iAnchoSum.toString());

						iAnchoSum+=iAnchoColumna;
					}

					break;

				case FormaPagoPuntoVentaConstantesFunciones.LABEL_NUMERORETENCION:
					iAnchoColumna=100;

					if(iAnchoSum+iAnchoColumna<=iAnchoMaximoHorizontal) {
						sXmlStringFile=sXmlStringFile.replace("<!--col_meroRetencion_col", "");
						sXmlStringFile=sXmlStringFile.replace("col_meroRetencion_col-->", "");

						sXmlStringFile=sXmlStringFile.replace("colancho_meroRetencion_colancho", iAnchoColumna.toString());
						sXmlStringFile=sXmlStringFile.replace("colx_meroRetencion_colx", iAnchoSum.toString());

						iAnchoSum+=iAnchoColumna;
					}

					break;

				case FormaPagoPuntoVentaConstantesFunciones.LABEL_NUMEROLIQUIDACION:
					iAnchoColumna=100;

					if(iAnchoSum+iAnchoColumna<=iAnchoMaximoHorizontal) {
						sXmlStringFile=sXmlStringFile.replace("<!--col_meroLiquidacion_col", "");
						sXmlStringFile=sXmlStringFile.replace("col_meroLiquidacion_col-->", "");

						sXmlStringFile=sXmlStringFile.replace("colancho_meroLiquidacion_colancho", iAnchoColumna.toString());
						sXmlStringFile=sXmlStringFile.replace("colx_meroLiquidacion_colx", iAnchoSum.toString());

						iAnchoSum+=iAnchoColumna;
					}

					break;

				case FormaPagoPuntoVentaConstantesFunciones.LABEL_IDANIO:
					iAnchoColumna=100;

					if(iAnchoSum+iAnchoColumna<=iAnchoMaximoHorizontal) {
						sXmlStringFile=sXmlStringFile.replace("<!--col_Anio_col", "");
						sXmlStringFile=sXmlStringFile.replace("col_Anio_col-->", "");

						sXmlStringFile=sXmlStringFile.replace("colancho_Anio_colancho", iAnchoColumna.toString());
						sXmlStringFile=sXmlStringFile.replace("colx_Anio_colx", iAnchoSum.toString());

						iAnchoSum+=iAnchoColumna;
					}

					break;

				case FormaPagoPuntoVentaConstantesFunciones.LABEL_IDCUENTACONTABLE:
					iAnchoColumna=100;

					if(iAnchoSum+iAnchoColumna<=iAnchoMaximoHorizontal) {
						sXmlStringFile=sXmlStringFile.replace("<!--col_CuentaContable_col", "");
						sXmlStringFile=sXmlStringFile.replace("col_CuentaContable_col-->", "");

						sXmlStringFile=sXmlStringFile.replace("colancho_CuentaContable_colancho", iAnchoColumna.toString());
						sXmlStringFile=sXmlStringFile.replace("colx_CuentaContable_colx", iAnchoSum.toString());

						iAnchoSum+=iAnchoColumna;
					}

					break;

				case FormaPagoPuntoVentaConstantesFunciones.LABEL_IDASIENTOCONTABLE:
					iAnchoColumna=100;

					if(iAnchoSum+iAnchoColumna<=iAnchoMaximoHorizontal) {
						sXmlStringFile=sXmlStringFile.replace("<!--col_AsientoContable_col", "");
						sXmlStringFile=sXmlStringFile.replace("col_AsientoContable_col-->", "");

						sXmlStringFile=sXmlStringFile.replace("colancho_AsientoContable_colancho", iAnchoColumna.toString());
						sXmlStringFile=sXmlStringFile.replace("colx_AsientoContable_colx", iAnchoSum.toString());

						iAnchoSum+=iAnchoColumna;
					}

					break;
					
				default :
					break;
			}
		}
		
		iAnchoSum+=iAnchoMargenes;
		
		if(iAnchoSum>iAnchoMaximoVertical) {
			sXmlStringFile=sXmlStringFile.replace("595", "842");
			//sXmlStringFile=sXmlStringFile.replace("842", "595");
			sXmlStringFile=sXmlStringFile.replace("535", "782");
			sXmlStringFile=sXmlStringFile.replace("Portrait", "Landscape");			
			sWidthGrafico="782";
		
		} else {
			sXmlStringFile=sXmlStringFile.replace("842", "595");
			//sXmlStringFile=sXmlStringFile.replace("595", "842");
			sXmlStringFile=sXmlStringFile.replace("782", "535");
			sXmlStringFile=sXmlStringFile.replace("Landscape", "Portrait");
			sWidthGrafico="535";
		}
		
		if(this.jInternalFrameReporteDinamicoFormaPagoPuntoVenta.getjCheckBoxConGraficoDinamico().isSelected()) {
			sXmlStringFile=this.actualizarGraficoReporteDinamico(sXmlStringFile,sWidthGrafico);
		} else {
			sXmlStringFile=sXmlStringFile.replace("colancho_summary_colancho", "30");
		}
		
		return sXmlStringFile;
	}
	*/
	
	/*
	public String actualizarGraficoReporteDinamico(String sXmlStringFile,String sWidthGrafico) {		
		String strGrafico="";		
		String sTipo="NORMAL";
		String strCategorySeries="";
		String sNombreCampoCategoria="";
		String sNombreCampoCategoriaValor="";
		Reporte reporte=new Reporte();
		Reporte reporteCategoriaValor=new Reporte();
		Reporte reporteTipoGraficoReporte=new Reporte();
		Boolean existe=false;
		
		sXmlStringFile=sXmlStringFile.replace("colancho_summary_colancho", "280");
		
		//CATEGORIA GRAFICO				
		reporte=((Reporte)this.jInternalFrameReporteDinamicoFormaPagoPuntoVenta.getjComboBoxColumnaCategoriaGrafico().getSelectedItem());
				
		//TIPO GRAFICO REPORTE
		reporteTipoGraficoReporte=((Reporte)this.jInternalFrameReporteDinamicoFormaPagoPuntoVenta.getjComboBoxTiposGraficosReportesDinamico().getSelectedItem());
		
		String sTipoGraficoReporte=reporteTipoGraficoReporte.getsCodigo();
		
		switch(reporte.getsCodigo()) {
			
				case FormaPagoPuntoVentaConstantesFunciones.LABEL_IDEMPRESA:
					sNombreCampoCategoria="id_empresa";
					break;

				case FormaPagoPuntoVentaConstantesFunciones.LABEL_IDSUCURSAL:
					sNombreCampoCategoria="id_sucursal";
					break;

				case FormaPagoPuntoVentaConstantesFunciones.LABEL_IDEJERCICIO:
					sNombreCampoCategoria="id_ejercicio";
					break;

				case FormaPagoPuntoVentaConstantesFunciones.LABEL_IDPERIODO:
					sNombreCampoCategoria="id_periodo";
					break;

				case FormaPagoPuntoVentaConstantesFunciones.LABEL_IDFACTURAPUNTOVENTA:
					sNombreCampoCategoria="id_factura_punto_venta";
					break;

				case FormaPagoPuntoVentaConstantesFunciones.LABEL_IDTIPOFORMAPAGO:
					sNombreCampoCategoria="id_tipo_forma_pago";
					break;

				case FormaPagoPuntoVentaConstantesFunciones.LABEL_PORCENTAJE:
					sNombreCampoCategoria="porcentaje";
					break;

				case FormaPagoPuntoVentaConstantesFunciones.LABEL_VALOR:
					sNombreCampoCategoria="valor";
					break;

				case FormaPagoPuntoVentaConstantesFunciones.LABEL_FECHA:
					sNombreCampoCategoria="fecha";
					break;

				case FormaPagoPuntoVentaConstantesFunciones.LABEL_DESCRIPCION:
					sNombreCampoCategoria="descripcion";
					break;

				case FormaPagoPuntoVentaConstantesFunciones.LABEL_FECHAINICIO:
					sNombreCampoCategoria="fecha_inicio";
					break;

				case FormaPagoPuntoVentaConstantesFunciones.LABEL_NUMERODIASPLAZO:
					sNombreCampoCategoria="numero_dias_plazo";
					break;

				case FormaPagoPuntoVentaConstantesFunciones.LABEL_FECHAFIN:
					sNombreCampoCategoria="fecha_fin";
					break;

				case FormaPagoPuntoVentaConstantesFunciones.LABEL_IDBANCO:
					sNombreCampoCategoria="id_banco";
					break;

				case FormaPagoPuntoVentaConstantesFunciones.LABEL_IDCUENTABANCOPUNVEN:
					sNombreCampoCategoria="id_cuenta_banco_pun_ven";
					break;

				case FormaPagoPuntoVentaConstantesFunciones.LABEL_IDTIPORIESGOCHEQUE:
					sNombreCampoCategoria="id_tipo_riesgo_cheque";
					break;

				case FormaPagoPuntoVentaConstantesFunciones.LABEL_NUMEROCUENTA:
					sNombreCampoCategoria="numero_cuenta";
					break;

				case FormaPagoPuntoVentaConstantesFunciones.LABEL_NUMEROCHEQUE:
					sNombreCampoCategoria="numero_cheque";
					break;

				case FormaPagoPuntoVentaConstantesFunciones.LABEL_GIRADOR:
					sNombreCampoCategoria="girador";
					break;

				case FormaPagoPuntoVentaConstantesFunciones.LABEL_IDBANCOTARJETA:
					sNombreCampoCategoria="id_banco_tarjeta";
					break;

				case FormaPagoPuntoVentaConstantesFunciones.LABEL_IDTARJETACREDITO:
					sNombreCampoCategoria="id_tarjeta_credito";
					break;

				case FormaPagoPuntoVentaConstantesFunciones.LABEL_IDTIPOINTERESTARJETA:
					sNombreCampoCategoria="id_tipo_interes_tarjeta";
					break;

				case FormaPagoPuntoVentaConstantesFunciones.LABEL_IDTIPOPAGOTARJETA:
					sNombreCampoCategoria="id_tipo_pago_tarjeta";
					break;

				case FormaPagoPuntoVentaConstantesFunciones.LABEL_IDCONEXION:
					sNombreCampoCategoria="id_conexion";
					break;

				case FormaPagoPuntoVentaConstantesFunciones.LABEL_IDMES:
					sNombreCampoCategoria="id_mes";
					break;

				case FormaPagoPuntoVentaConstantesFunciones.LABEL_NUMERO:
					sNombreCampoCategoria="numero";
					break;

				case FormaPagoPuntoVentaConstantesFunciones.LABEL_TARJETAHABIENTE:
					sNombreCampoCategoria="tarjeta_habiente";
					break;

				case FormaPagoPuntoVentaConstantesFunciones.LABEL_AUTORIZACION:
					sNombreCampoCategoria="autorizacion";
					break;

				case FormaPagoPuntoVentaConstantesFunciones.LABEL_VOUCHER:
					sNombreCampoCategoria="voucher";
					break;

				case FormaPagoPuntoVentaConstantesFunciones.LABEL_LOTE:
					sNombreCampoCategoria="lote";
					break;

				case FormaPagoPuntoVentaConstantesFunciones.LABEL_CUOTA:
					sNombreCampoCategoria="cuota";
					break;

				case FormaPagoPuntoVentaConstantesFunciones.LABEL_VALORRETENCION:
					sNombreCampoCategoria="valor_retencion";
					break;

				case FormaPagoPuntoVentaConstantesFunciones.LABEL_VALORCOMISION:
					sNombreCampoCategoria="valor_comision";
					break;

				case FormaPagoPuntoVentaConstantesFunciones.LABEL_VALORCALCULADO:
					sNombreCampoCategoria="valor_calculado";
					break;

				case FormaPagoPuntoVentaConstantesFunciones.LABEL_VALORCANCELADO:
					sNombreCampoCategoria="valor_cancelado";
					break;

				case FormaPagoPuntoVentaConstantesFunciones.LABEL_VALORDIFIERE:
					sNombreCampoCategoria="valor_difiere";
					break;

				case FormaPagoPuntoVentaConstantesFunciones.LABEL_NUMERORETENCION:
					sNombreCampoCategoria="numero_retencion";
					break;

				case FormaPagoPuntoVentaConstantesFunciones.LABEL_NUMEROLIQUIDACION:
					sNombreCampoCategoria="numero_liquidacion";
					break;

				case FormaPagoPuntoVentaConstantesFunciones.LABEL_IDANIO:
					sNombreCampoCategoria="id_anio";
					break;

				case FormaPagoPuntoVentaConstantesFunciones.LABEL_IDCUENTACONTABLE:
					sNombreCampoCategoria="id_cuenta_contable";
					break;

				case FormaPagoPuntoVentaConstantesFunciones.LABEL_IDASIENTOCONTABLE:
					sNombreCampoCategoria="id_asiento_contable";
					break;
					
			default :
				break;
		}		
		//CATEGORIA GRAFICO
		
		//CATEGORIA VALOR				
		reporteCategoriaValor=((Reporte)this.jInternalFrameReporteDinamicoFormaPagoPuntoVenta.getjComboBoxColumnaCategoriaValor().getSelectedItem());
		
		switch(reporteCategoriaValor.getsCodigo()) {
			
				case FormaPagoPuntoVentaConstantesFunciones.LABEL_IDEMPRESA:
					sNombreCampoCategoriaValor="id_empresa";
					break;

				case FormaPagoPuntoVentaConstantesFunciones.LABEL_IDSUCURSAL:
					sNombreCampoCategoriaValor="id_sucursal";
					break;

				case FormaPagoPuntoVentaConstantesFunciones.LABEL_IDEJERCICIO:
					sNombreCampoCategoriaValor="id_ejercicio";
					break;

				case FormaPagoPuntoVentaConstantesFunciones.LABEL_IDPERIODO:
					sNombreCampoCategoriaValor="id_periodo";
					break;

				case FormaPagoPuntoVentaConstantesFunciones.LABEL_IDFACTURAPUNTOVENTA:
					sNombreCampoCategoriaValor="id_factura_punto_venta";
					break;

				case FormaPagoPuntoVentaConstantesFunciones.LABEL_IDTIPOFORMAPAGO:
					sNombreCampoCategoriaValor="id_tipo_forma_pago";
					break;

				case FormaPagoPuntoVentaConstantesFunciones.LABEL_PORCENTAJE:
					sNombreCampoCategoriaValor="porcentaje";
					break;

				case FormaPagoPuntoVentaConstantesFunciones.LABEL_VALOR:
					sNombreCampoCategoriaValor="valor";
					break;

				case FormaPagoPuntoVentaConstantesFunciones.LABEL_FECHA:
					sNombreCampoCategoriaValor="fecha";
					break;

				case FormaPagoPuntoVentaConstantesFunciones.LABEL_DESCRIPCION:
					sNombreCampoCategoriaValor="descripcion";
					break;

				case FormaPagoPuntoVentaConstantesFunciones.LABEL_FECHAINICIO:
					sNombreCampoCategoriaValor="fecha_inicio";
					break;

				case FormaPagoPuntoVentaConstantesFunciones.LABEL_NUMERODIASPLAZO:
					sNombreCampoCategoriaValor="numero_dias_plazo";
					break;

				case FormaPagoPuntoVentaConstantesFunciones.LABEL_FECHAFIN:
					sNombreCampoCategoriaValor="fecha_fin";
					break;

				case FormaPagoPuntoVentaConstantesFunciones.LABEL_IDBANCO:
					sNombreCampoCategoriaValor="id_banco";
					break;

				case FormaPagoPuntoVentaConstantesFunciones.LABEL_IDCUENTABANCOPUNVEN:
					sNombreCampoCategoriaValor="id_cuenta_banco_pun_ven";
					break;

				case FormaPagoPuntoVentaConstantesFunciones.LABEL_IDTIPORIESGOCHEQUE:
					sNombreCampoCategoriaValor="id_tipo_riesgo_cheque";
					break;

				case FormaPagoPuntoVentaConstantesFunciones.LABEL_NUMEROCUENTA:
					sNombreCampoCategoriaValor="numero_cuenta";
					break;

				case FormaPagoPuntoVentaConstantesFunciones.LABEL_NUMEROCHEQUE:
					sNombreCampoCategoriaValor="numero_cheque";
					break;

				case FormaPagoPuntoVentaConstantesFunciones.LABEL_GIRADOR:
					sNombreCampoCategoriaValor="girador";
					break;

				case FormaPagoPuntoVentaConstantesFunciones.LABEL_IDBANCOTARJETA:
					sNombreCampoCategoriaValor="id_banco_tarjeta";
					break;

				case FormaPagoPuntoVentaConstantesFunciones.LABEL_IDTARJETACREDITO:
					sNombreCampoCategoriaValor="id_tarjeta_credito";
					break;

				case FormaPagoPuntoVentaConstantesFunciones.LABEL_IDTIPOINTERESTARJETA:
					sNombreCampoCategoriaValor="id_tipo_interes_tarjeta";
					break;

				case FormaPagoPuntoVentaConstantesFunciones.LABEL_IDTIPOPAGOTARJETA:
					sNombreCampoCategoriaValor="id_tipo_pago_tarjeta";
					break;

				case FormaPagoPuntoVentaConstantesFunciones.LABEL_IDCONEXION:
					sNombreCampoCategoriaValor="id_conexion";
					break;

				case FormaPagoPuntoVentaConstantesFunciones.LABEL_IDMES:
					sNombreCampoCategoriaValor="id_mes";
					break;

				case FormaPagoPuntoVentaConstantesFunciones.LABEL_NUMERO:
					sNombreCampoCategoriaValor="numero";
					break;

				case FormaPagoPuntoVentaConstantesFunciones.LABEL_TARJETAHABIENTE:
					sNombreCampoCategoriaValor="tarjeta_habiente";
					break;

				case FormaPagoPuntoVentaConstantesFunciones.LABEL_AUTORIZACION:
					sNombreCampoCategoriaValor="autorizacion";
					break;

				case FormaPagoPuntoVentaConstantesFunciones.LABEL_VOUCHER:
					sNombreCampoCategoriaValor="voucher";
					break;

				case FormaPagoPuntoVentaConstantesFunciones.LABEL_LOTE:
					sNombreCampoCategoriaValor="lote";
					break;

				case FormaPagoPuntoVentaConstantesFunciones.LABEL_CUOTA:
					sNombreCampoCategoriaValor="cuota";
					break;

				case FormaPagoPuntoVentaConstantesFunciones.LABEL_VALORRETENCION:
					sNombreCampoCategoriaValor="valor_retencion";
					break;

				case FormaPagoPuntoVentaConstantesFunciones.LABEL_VALORCOMISION:
					sNombreCampoCategoriaValor="valor_comision";
					break;

				case FormaPagoPuntoVentaConstantesFunciones.LABEL_VALORCALCULADO:
					sNombreCampoCategoriaValor="valor_calculado";
					break;

				case FormaPagoPuntoVentaConstantesFunciones.LABEL_VALORCANCELADO:
					sNombreCampoCategoriaValor="valor_cancelado";
					break;

				case FormaPagoPuntoVentaConstantesFunciones.LABEL_VALORDIFIERE:
					sNombreCampoCategoriaValor="valor_difiere";
					break;

				case FormaPagoPuntoVentaConstantesFunciones.LABEL_NUMERORETENCION:
					sNombreCampoCategoriaValor="numero_retencion";
					break;

				case FormaPagoPuntoVentaConstantesFunciones.LABEL_NUMEROLIQUIDACION:
					sNombreCampoCategoriaValor="numero_liquidacion";
					break;

				case FormaPagoPuntoVentaConstantesFunciones.LABEL_IDANIO:
					sNombreCampoCategoriaValor="id_anio";
					break;

				case FormaPagoPuntoVentaConstantesFunciones.LABEL_IDCUENTACONTABLE:
					sNombreCampoCategoriaValor="id_cuenta_contable";
					break;

				case FormaPagoPuntoVentaConstantesFunciones.LABEL_IDASIENTOCONTABLE:
					sNombreCampoCategoriaValor="id_asiento_contable";
					break;
					
			default :
				break;
		}	
		//CATEGORIA VALOR
		
		//VALORES GRAFICO
		for(int index:this.jInternalFrameReporteDinamicoFormaPagoPuntoVenta.getjListColumnasValoresGrafico().getSelectedIndices()) {
			reporte=(Reporte)this.jInternalFrameReporteDinamicoFormaPagoPuntoVenta.getjListColumnasValoresGrafico().getModel().getElementAt(index);
			
			switch(reporte.getsCodigo()) {
				
				case FormaPagoPuntoVentaConstantesFunciones.LABEL_IDEMPRESA:
					strCategorySeries+=FuncionesReporte.getStringCategoryGraficoNormalReporte(sTipoGraficoReporte,"Empresa",sNombreCampoCategoria,sNombreCampoCategoriaValor,"id_empresa");
					break;

				case FormaPagoPuntoVentaConstantesFunciones.LABEL_IDSUCURSAL:
					strCategorySeries+=FuncionesReporte.getStringCategoryGraficoNormalReporte(sTipoGraficoReporte,"Sucursal",sNombreCampoCategoria,sNombreCampoCategoriaValor,"id_sucursal");
					break;

				case FormaPagoPuntoVentaConstantesFunciones.LABEL_IDEJERCICIO:
					strCategorySeries+=FuncionesReporte.getStringCategoryGraficoNormalReporte(sTipoGraficoReporte,"Ejercicio",sNombreCampoCategoria,sNombreCampoCategoriaValor,"id_ejercicio");
					break;

				case FormaPagoPuntoVentaConstantesFunciones.LABEL_IDPERIODO:
					strCategorySeries+=FuncionesReporte.getStringCategoryGraficoNormalReporte(sTipoGraficoReporte,"Periodo",sNombreCampoCategoria,sNombreCampoCategoriaValor,"id_periodo");
					break;

				case FormaPagoPuntoVentaConstantesFunciones.LABEL_IDFACTURAPUNTOVENTA:
					strCategorySeries+=FuncionesReporte.getStringCategoryGraficoNormalReporte(sTipoGraficoReporte,"Factura Punto Venta",sNombreCampoCategoria,sNombreCampoCategoriaValor,"id_factura_punto_venta");
					break;

				case FormaPagoPuntoVentaConstantesFunciones.LABEL_IDTIPOFORMAPAGO:
					strCategorySeries+=FuncionesReporte.getStringCategoryGraficoNormalReporte(sTipoGraficoReporte,"Tipo Forma Pago",sNombreCampoCategoria,sNombreCampoCategoriaValor,"id_tipo_forma_pago");
					break;

				case FormaPagoPuntoVentaConstantesFunciones.LABEL_PORCENTAJE:
					strCategorySeries+=FuncionesReporte.getStringCategoryGraficoNormalReporte(sTipoGraficoReporte,"Porcentaje",sNombreCampoCategoria,sNombreCampoCategoriaValor,"porcentaje");
					break;

				case FormaPagoPuntoVentaConstantesFunciones.LABEL_VALOR:
					strCategorySeries+=FuncionesReporte.getStringCategoryGraficoNormalReporte(sTipoGraficoReporte,"Valor",sNombreCampoCategoria,sNombreCampoCategoriaValor,"valor");
					break;

				case FormaPagoPuntoVentaConstantesFunciones.LABEL_FECHA:
					strCategorySeries+=FuncionesReporte.getStringCategoryGraficoNormalReporte(sTipoGraficoReporte,"Fecha",sNombreCampoCategoria,sNombreCampoCategoriaValor,"fecha");
					break;

				case FormaPagoPuntoVentaConstantesFunciones.LABEL_DESCRIPCION:
					strCategorySeries+=FuncionesReporte.getStringCategoryGraficoNormalReporte(sTipoGraficoReporte,"Descripcion",sNombreCampoCategoria,sNombreCampoCategoriaValor,"descripcion");
					break;

				case FormaPagoPuntoVentaConstantesFunciones.LABEL_FECHAINICIO:
					strCategorySeries+=FuncionesReporte.getStringCategoryGraficoNormalReporte(sTipoGraficoReporte,"Fecha Inicio",sNombreCampoCategoria,sNombreCampoCategoriaValor,"fecha_inicio");
					break;

				case FormaPagoPuntoVentaConstantesFunciones.LABEL_NUMERODIASPLAZO:
					strCategorySeries+=FuncionesReporte.getStringCategoryGraficoNormalReporte(sTipoGraficoReporte,"Numero Dias Plazo",sNombreCampoCategoria,sNombreCampoCategoriaValor,"numero_dias_plazo");
					break;

				case FormaPagoPuntoVentaConstantesFunciones.LABEL_FECHAFIN:
					strCategorySeries+=FuncionesReporte.getStringCategoryGraficoNormalReporte(sTipoGraficoReporte,"Fecha Fin",sNombreCampoCategoria,sNombreCampoCategoriaValor,"fecha_fin");
					break;

				case FormaPagoPuntoVentaConstantesFunciones.LABEL_IDBANCO:
					strCategorySeries+=FuncionesReporte.getStringCategoryGraficoNormalReporte(sTipoGraficoReporte,"Banco",sNombreCampoCategoria,sNombreCampoCategoriaValor,"id_banco");
					break;

				case FormaPagoPuntoVentaConstantesFunciones.LABEL_IDCUENTABANCOPUNVEN:
					strCategorySeries+=FuncionesReporte.getStringCategoryGraficoNormalReporte(sTipoGraficoReporte,"Cuenta Banco Pun Ven",sNombreCampoCategoria,sNombreCampoCategoriaValor,"id_cuenta_banco_pun_ven");
					break;

				case FormaPagoPuntoVentaConstantesFunciones.LABEL_IDTIPORIESGOCHEQUE:
					strCategorySeries+=FuncionesReporte.getStringCategoryGraficoNormalReporte(sTipoGraficoReporte,"Tipo Riesgo Cheque",sNombreCampoCategoria,sNombreCampoCategoriaValor,"id_tipo_riesgo_cheque");
					break;

				case FormaPagoPuntoVentaConstantesFunciones.LABEL_NUMEROCUENTA:
					strCategorySeries+=FuncionesReporte.getStringCategoryGraficoNormalReporte(sTipoGraficoReporte,"Numero Cuenta",sNombreCampoCategoria,sNombreCampoCategoriaValor,"numero_cuenta");
					break;

				case FormaPagoPuntoVentaConstantesFunciones.LABEL_NUMEROCHEQUE:
					strCategorySeries+=FuncionesReporte.getStringCategoryGraficoNormalReporte(sTipoGraficoReporte,"Numero Cheque",sNombreCampoCategoria,sNombreCampoCategoriaValor,"numero_cheque");
					break;

				case FormaPagoPuntoVentaConstantesFunciones.LABEL_GIRADOR:
					strCategorySeries+=FuncionesReporte.getStringCategoryGraficoNormalReporte(sTipoGraficoReporte,"Girador",sNombreCampoCategoria,sNombreCampoCategoriaValor,"girador");
					break;

				case FormaPagoPuntoVentaConstantesFunciones.LABEL_IDBANCOTARJETA:
					strCategorySeries+=FuncionesReporte.getStringCategoryGraficoNormalReporte(sTipoGraficoReporte,"Banco",sNombreCampoCategoria,sNombreCampoCategoriaValor,"id_banco_tarjeta");
					break;

				case FormaPagoPuntoVentaConstantesFunciones.LABEL_IDTARJETACREDITO:
					strCategorySeries+=FuncionesReporte.getStringCategoryGraficoNormalReporte(sTipoGraficoReporte,"Tarjeta Credito",sNombreCampoCategoria,sNombreCampoCategoriaValor,"id_tarjeta_credito");
					break;

				case FormaPagoPuntoVentaConstantesFunciones.LABEL_IDTIPOINTERESTARJETA:
					strCategorySeries+=FuncionesReporte.getStringCategoryGraficoNormalReporte(sTipoGraficoReporte,"Tipo Interes Tarjeta",sNombreCampoCategoria,sNombreCampoCategoriaValor,"id_tipo_interes_tarjeta");
					break;

				case FormaPagoPuntoVentaConstantesFunciones.LABEL_IDTIPOPAGOTARJETA:
					strCategorySeries+=FuncionesReporte.getStringCategoryGraficoNormalReporte(sTipoGraficoReporte,"Tipo Pago Tarjeta",sNombreCampoCategoria,sNombreCampoCategoriaValor,"id_tipo_pago_tarjeta");
					break;

				case FormaPagoPuntoVentaConstantesFunciones.LABEL_IDCONEXION:
					strCategorySeries+=FuncionesReporte.getStringCategoryGraficoNormalReporte(sTipoGraficoReporte,"Conexion",sNombreCampoCategoria,sNombreCampoCategoriaValor,"id_conexion");
					break;

				case FormaPagoPuntoVentaConstantesFunciones.LABEL_IDMES:
					strCategorySeries+=FuncionesReporte.getStringCategoryGraficoNormalReporte(sTipoGraficoReporte,"Mes",sNombreCampoCategoria,sNombreCampoCategoriaValor,"id_mes");
					break;

				case FormaPagoPuntoVentaConstantesFunciones.LABEL_NUMERO:
					strCategorySeries+=FuncionesReporte.getStringCategoryGraficoNormalReporte(sTipoGraficoReporte,"Numero",sNombreCampoCategoria,sNombreCampoCategoriaValor,"numero");
					break;

				case FormaPagoPuntoVentaConstantesFunciones.LABEL_TARJETAHABIENTE:
					strCategorySeries+=FuncionesReporte.getStringCategoryGraficoNormalReporte(sTipoGraficoReporte,"Tarjeta Habiente",sNombreCampoCategoria,sNombreCampoCategoriaValor,"tarjeta_habiente");
					break;

				case FormaPagoPuntoVentaConstantesFunciones.LABEL_AUTORIZACION:
					strCategorySeries+=FuncionesReporte.getStringCategoryGraficoNormalReporte(sTipoGraficoReporte,"Autorizacion",sNombreCampoCategoria,sNombreCampoCategoriaValor,"autorizacion");
					break;

				case FormaPagoPuntoVentaConstantesFunciones.LABEL_VOUCHER:
					strCategorySeries+=FuncionesReporte.getStringCategoryGraficoNormalReporte(sTipoGraficoReporte,"Voucher",sNombreCampoCategoria,sNombreCampoCategoriaValor,"voucher");
					break;

				case FormaPagoPuntoVentaConstantesFunciones.LABEL_LOTE:
					strCategorySeries+=FuncionesReporte.getStringCategoryGraficoNormalReporte(sTipoGraficoReporte,"Lote",sNombreCampoCategoria,sNombreCampoCategoriaValor,"lote");
					break;

				case FormaPagoPuntoVentaConstantesFunciones.LABEL_CUOTA:
					strCategorySeries+=FuncionesReporte.getStringCategoryGraficoNormalReporte(sTipoGraficoReporte,"Cuota",sNombreCampoCategoria,sNombreCampoCategoriaValor,"cuota");
					break;

				case FormaPagoPuntoVentaConstantesFunciones.LABEL_VALORRETENCION:
					strCategorySeries+=FuncionesReporte.getStringCategoryGraficoNormalReporte(sTipoGraficoReporte,"Valor Retencion",sNombreCampoCategoria,sNombreCampoCategoriaValor,"valor_retencion");
					break;

				case FormaPagoPuntoVentaConstantesFunciones.LABEL_VALORCOMISION:
					strCategorySeries+=FuncionesReporte.getStringCategoryGraficoNormalReporte(sTipoGraficoReporte,"Valor Comision",sNombreCampoCategoria,sNombreCampoCategoriaValor,"valor_comision");
					break;

				case FormaPagoPuntoVentaConstantesFunciones.LABEL_VALORCALCULADO:
					strCategorySeries+=FuncionesReporte.getStringCategoryGraficoNormalReporte(sTipoGraficoReporte,"Valor Calculado",sNombreCampoCategoria,sNombreCampoCategoriaValor,"valor_calculado");
					break;

				case FormaPagoPuntoVentaConstantesFunciones.LABEL_VALORCANCELADO:
					strCategorySeries+=FuncionesReporte.getStringCategoryGraficoNormalReporte(sTipoGraficoReporte,"Valor Cancelado",sNombreCampoCategoria,sNombreCampoCategoriaValor,"valor_cancelado");
					break;

				case FormaPagoPuntoVentaConstantesFunciones.LABEL_VALORDIFIERE:
					strCategorySeries+=FuncionesReporte.getStringCategoryGraficoNormalReporte(sTipoGraficoReporte,"Valor Difiere",sNombreCampoCategoria,sNombreCampoCategoriaValor,"valor_difiere");
					break;

				case FormaPagoPuntoVentaConstantesFunciones.LABEL_NUMERORETENCION:
					strCategorySeries+=FuncionesReporte.getStringCategoryGraficoNormalReporte(sTipoGraficoReporte,"Numero Retencion",sNombreCampoCategoria,sNombreCampoCategoriaValor,"numero_retencion");
					break;

				case FormaPagoPuntoVentaConstantesFunciones.LABEL_NUMEROLIQUIDACION:
					strCategorySeries+=FuncionesReporte.getStringCategoryGraficoNormalReporte(sTipoGraficoReporte,"Numero Liquidacion",sNombreCampoCategoria,sNombreCampoCategoriaValor,"numero_liquidacion");
					break;

				case FormaPagoPuntoVentaConstantesFunciones.LABEL_IDANIO:
					strCategorySeries+=FuncionesReporte.getStringCategoryGraficoNormalReporte(sTipoGraficoReporte,"Anio",sNombreCampoCategoria,sNombreCampoCategoriaValor,"id_anio");
					break;

				case FormaPagoPuntoVentaConstantesFunciones.LABEL_IDCUENTACONTABLE:
					strCategorySeries+=FuncionesReporte.getStringCategoryGraficoNormalReporte(sTipoGraficoReporte,"Cuenta Contable",sNombreCampoCategoria,sNombreCampoCategoriaValor,"id_cuenta_contable");
					break;

				case FormaPagoPuntoVentaConstantesFunciones.LABEL_IDASIENTOCONTABLE:
					strCategorySeries+=FuncionesReporte.getStringCategoryGraficoNormalReporte(sTipoGraficoReporte,"Asiento Contable",sNombreCampoCategoria,sNombreCampoCategoriaValor,"id_asiento_contable");
					break;
					
				default :
					break;
			}
		}
		//VALORES GRAFICO
		//if(sTipoGraficoReporte.equals("BARRAS") || sTipoGraficoReporte.equals("BARRAS_3D") || sTipoGraficoReporte.equals("BARRAS_XY") ||
		//   sTipoGraficoReporte.equals("PASTEL") || sTipoGraficoReporte.equals("PASTEL_3D") || sTipoGraficoReporte.equals("APILADO")) {
			
			existe=true;
			strGrafico=FuncionesReporte.getStringGraficoReporte(sTipoGraficoReporte,sWidthGrafico,strCategorySeries);			
		//}
		
		if(existe) {
			sXmlStringFile=sXmlStringFile.replace("<!--GRAFICO-->", strGrafico);
		}												
		
		return sXmlStringFile;
	}
	*/
	
	//@SuppressWarnings("deprecation")
	/*
	public void jButtonGenerarExcelReporteDinamicoFormaPagoPuntoVentaActionPerformed(ActionEvent evt) throws Exception {		
		ArrayList<FormaPagoPuntoVenta> formapagopuntoventasSeleccionados=new ArrayList<FormaPagoPuntoVenta>();		
		
		formapagopuntoventasSeleccionados=this.getFormaPagoPuntoVentasSeleccionados(true);
		
		String sTipo=Funciones2.getTipoExportar(this.parametroGeneralUsuario);
		Boolean conCabecera=this.parametroGeneralUsuario.getcon_exportar_cabecera();
		String sDelimiter=Funciones2.getTipoDelimiter(this.parametroGeneralUsuario);
		String sPath=this.parametroGeneralUsuario.getpath_exportar()+"formapagopuntoventa";//.xls";
		
		String sFilaCabecera="";
		String sFilaDatos="";
		
		Boolean existeFilas=false;
		
		Workbook workbook = null;
		FileOutputStream fileOutputStream=null;
		Reporte reporte=new Reporte();
		
		try {
			
			if(sTipoArchivoReporte=="EXCEL2") {
				workbook = new HSSFWorkbook();
				sPath+=".xls";
			
			} else if(sTipoArchivoReporte=="EXCEL2_2") {
				workbook = new XSSFWorkbook();
				sPath+=".xlsx";			
			}
		
			Sheet sheet = workbook.createSheet("FormaPagoPuntoVentas");
						
		    			
			Integer iRow=0;
			Integer iCell=0;
			
			Row row = sheet.createRow(iRow);
			Cell cell = row.createCell(iCell);
			//cell.setCellValue("Blahblah");
			
			for(int index:this.jInternalFrameReporteDinamicoFormaPagoPuntoVenta.getjListColumnasSelectReporte().getSelectedIndices()) {
				reporte=(Reporte)this.jInternalFrameReporteDinamicoFormaPagoPuntoVenta.getjListColumnasSelectReporte().getModel().getElementAt(index);
				
				switch(reporte.getsCodigo()) {
					
				case FormaPagoPuntoVentaConstantesFunciones.LABEL_IDEMPRESA:
					iRow=0;

					if(!existeFilas) {row = sheet.createRow(iRow);} else {row=sheet.getRow(iRow);}

					cell = row.createCell(iCell);
					cell.setCellValue(FormaPagoPuntoVentaConstantesFunciones.LABEL_IDEMPRESA);
					iRow++;

					for(FormaPagoPuntoVenta formapagopuntoventa:formapagopuntoventasSeleccionados) {
						if(!existeFilas) {row = sheet.createRow(iRow);} else {row=sheet.getRow(iRow);}

						cell = row.createCell(iCell);
						cell.setCellValue(formapagopuntoventa.getempresa_descripcion());
						iRow++;
					}

					existeFilas=true;
					iCell++;
					break;

				case FormaPagoPuntoVentaConstantesFunciones.LABEL_IDSUCURSAL:
					iRow=0;

					if(!existeFilas) {row = sheet.createRow(iRow);} else {row=sheet.getRow(iRow);}

					cell = row.createCell(iCell);
					cell.setCellValue(FormaPagoPuntoVentaConstantesFunciones.LABEL_IDSUCURSAL);
					iRow++;

					for(FormaPagoPuntoVenta formapagopuntoventa:formapagopuntoventasSeleccionados) {
						if(!existeFilas) {row = sheet.createRow(iRow);} else {row=sheet.getRow(iRow);}

						cell = row.createCell(iCell);
						cell.setCellValue(formapagopuntoventa.getsucursal_descripcion());
						iRow++;
					}

					existeFilas=true;
					iCell++;
					break;

				case FormaPagoPuntoVentaConstantesFunciones.LABEL_IDEJERCICIO:
					iRow=0;

					if(!existeFilas) {row = sheet.createRow(iRow);} else {row=sheet.getRow(iRow);}

					cell = row.createCell(iCell);
					cell.setCellValue(FormaPagoPuntoVentaConstantesFunciones.LABEL_IDEJERCICIO);
					iRow++;

					for(FormaPagoPuntoVenta formapagopuntoventa:formapagopuntoventasSeleccionados) {
						if(!existeFilas) {row = sheet.createRow(iRow);} else {row=sheet.getRow(iRow);}

						cell = row.createCell(iCell);
						cell.setCellValue(formapagopuntoventa.getejercicio_descripcion());
						iRow++;
					}

					existeFilas=true;
					iCell++;
					break;

				case FormaPagoPuntoVentaConstantesFunciones.LABEL_IDPERIODO:
					iRow=0;

					if(!existeFilas) {row = sheet.createRow(iRow);} else {row=sheet.getRow(iRow);}

					cell = row.createCell(iCell);
					cell.setCellValue(FormaPagoPuntoVentaConstantesFunciones.LABEL_IDPERIODO);
					iRow++;

					for(FormaPagoPuntoVenta formapagopuntoventa:formapagopuntoventasSeleccionados) {
						if(!existeFilas) {row = sheet.createRow(iRow);} else {row=sheet.getRow(iRow);}

						cell = row.createCell(iCell);
						cell.setCellValue(formapagopuntoventa.getperiodo_descripcion());
						iRow++;
					}

					existeFilas=true;
					iCell++;
					break;

				case FormaPagoPuntoVentaConstantesFunciones.LABEL_IDFACTURAPUNTOVENTA:
					iRow=0;

					if(!existeFilas) {row = sheet.createRow(iRow);} else {row=sheet.getRow(iRow);}

					cell = row.createCell(iCell);
					cell.setCellValue(FormaPagoPuntoVentaConstantesFunciones.LABEL_IDFACTURAPUNTOVENTA);
					iRow++;

					for(FormaPagoPuntoVenta formapagopuntoventa:formapagopuntoventasSeleccionados) {
						if(!existeFilas) {row = sheet.createRow(iRow);} else {row=sheet.getRow(iRow);}

						cell = row.createCell(iCell);
						cell.setCellValue(formapagopuntoventa.getfacturapuntoventa_descripcion());
						iRow++;
					}

					existeFilas=true;
					iCell++;
					break;

				case FormaPagoPuntoVentaConstantesFunciones.LABEL_IDTIPOFORMAPAGO:
					iRow=0;

					if(!existeFilas) {row = sheet.createRow(iRow);} else {row=sheet.getRow(iRow);}

					cell = row.createCell(iCell);
					cell.setCellValue(FormaPagoPuntoVentaConstantesFunciones.LABEL_IDTIPOFORMAPAGO);
					iRow++;

					for(FormaPagoPuntoVenta formapagopuntoventa:formapagopuntoventasSeleccionados) {
						if(!existeFilas) {row = sheet.createRow(iRow);} else {row=sheet.getRow(iRow);}

						cell = row.createCell(iCell);
						cell.setCellValue(formapagopuntoventa.gettipoformapago_descripcion());
						iRow++;
					}

					existeFilas=true;
					iCell++;
					break;

				case FormaPagoPuntoVentaConstantesFunciones.LABEL_PORCENTAJE:
					iRow=0;

					if(!existeFilas) {row = sheet.createRow(iRow);} else {row=sheet.getRow(iRow);}

					cell = row.createCell(iCell);
					cell.setCellValue(FormaPagoPuntoVentaConstantesFunciones.LABEL_PORCENTAJE);
					iRow++;

					for(FormaPagoPuntoVenta formapagopuntoventa:formapagopuntoventasSeleccionados) {
						if(!existeFilas) {row = sheet.createRow(iRow);} else {row=sheet.getRow(iRow);}

						cell = row.createCell(iCell);
						cell.setCellValue(formapagopuntoventa.getporcentaje());
						iRow++;
					}

					existeFilas=true;
					iCell++;
					break;

				case FormaPagoPuntoVentaConstantesFunciones.LABEL_VALOR:
					iRow=0;

					if(!existeFilas) {row = sheet.createRow(iRow);} else {row=sheet.getRow(iRow);}

					cell = row.createCell(iCell);
					cell.setCellValue(FormaPagoPuntoVentaConstantesFunciones.LABEL_VALOR);
					iRow++;

					for(FormaPagoPuntoVenta formapagopuntoventa:formapagopuntoventasSeleccionados) {
						if(!existeFilas) {row = sheet.createRow(iRow);} else {row=sheet.getRow(iRow);}

						cell = row.createCell(iCell);
						cell.setCellValue(formapagopuntoventa.getvalor());
						iRow++;
					}

					existeFilas=true;
					iCell++;
					break;

				case FormaPagoPuntoVentaConstantesFunciones.LABEL_FECHA:
					iRow=0;

					if(!existeFilas) {row = sheet.createRow(iRow);} else {row=sheet.getRow(iRow);}

					cell = row.createCell(iCell);
					cell.setCellValue(FormaPagoPuntoVentaConstantesFunciones.LABEL_FECHA);
					iRow++;

					for(FormaPagoPuntoVenta formapagopuntoventa:formapagopuntoventasSeleccionados) {
						if(!existeFilas) {row = sheet.createRow(iRow);} else {row=sheet.getRow(iRow);}

						cell = row.createCell(iCell);
						cell.setCellValue(formapagopuntoventa.getfecha());
						iRow++;
					}

					existeFilas=true;
					iCell++;
					break;

				case FormaPagoPuntoVentaConstantesFunciones.LABEL_DESCRIPCION:
					iRow=0;

					if(!existeFilas) {row = sheet.createRow(iRow);} else {row=sheet.getRow(iRow);}

					cell = row.createCell(iCell);
					cell.setCellValue(FormaPagoPuntoVentaConstantesFunciones.LABEL_DESCRIPCION);
					iRow++;

					for(FormaPagoPuntoVenta formapagopuntoventa:formapagopuntoventasSeleccionados) {
						if(!existeFilas) {row = sheet.createRow(iRow);} else {row=sheet.getRow(iRow);}

						cell = row.createCell(iCell);
						cell.setCellValue(formapagopuntoventa.getdescripcion());
						iRow++;
					}

					existeFilas=true;
					iCell++;
					break;

				case FormaPagoPuntoVentaConstantesFunciones.LABEL_FECHAINICIO:
					iRow=0;

					if(!existeFilas) {row = sheet.createRow(iRow);} else {row=sheet.getRow(iRow);}

					cell = row.createCell(iCell);
					cell.setCellValue(FormaPagoPuntoVentaConstantesFunciones.LABEL_FECHAINICIO);
					iRow++;

					for(FormaPagoPuntoVenta formapagopuntoventa:formapagopuntoventasSeleccionados) {
						if(!existeFilas) {row = sheet.createRow(iRow);} else {row=sheet.getRow(iRow);}

						cell = row.createCell(iCell);
						cell.setCellValue(formapagopuntoventa.getfecha_inicio());
						iRow++;
					}

					existeFilas=true;
					iCell++;
					break;

				case FormaPagoPuntoVentaConstantesFunciones.LABEL_NUMERODIASPLAZO:
					iRow=0;

					if(!existeFilas) {row = sheet.createRow(iRow);} else {row=sheet.getRow(iRow);}

					cell = row.createCell(iCell);
					cell.setCellValue(FormaPagoPuntoVentaConstantesFunciones.LABEL_NUMERODIASPLAZO);
					iRow++;

					for(FormaPagoPuntoVenta formapagopuntoventa:formapagopuntoventasSeleccionados) {
						if(!existeFilas) {row = sheet.createRow(iRow);} else {row=sheet.getRow(iRow);}

						cell = row.createCell(iCell);
						cell.setCellValue(formapagopuntoventa.getnumero_dias_plazo());
						iRow++;
					}

					existeFilas=true;
					iCell++;
					break;

				case FormaPagoPuntoVentaConstantesFunciones.LABEL_FECHAFIN:
					iRow=0;

					if(!existeFilas) {row = sheet.createRow(iRow);} else {row=sheet.getRow(iRow);}

					cell = row.createCell(iCell);
					cell.setCellValue(FormaPagoPuntoVentaConstantesFunciones.LABEL_FECHAFIN);
					iRow++;

					for(FormaPagoPuntoVenta formapagopuntoventa:formapagopuntoventasSeleccionados) {
						if(!existeFilas) {row = sheet.createRow(iRow);} else {row=sheet.getRow(iRow);}

						cell = row.createCell(iCell);
						cell.setCellValue(formapagopuntoventa.getfecha_fin());
						iRow++;
					}

					existeFilas=true;
					iCell++;
					break;

				case FormaPagoPuntoVentaConstantesFunciones.LABEL_IDBANCO:
					iRow=0;

					if(!existeFilas) {row = sheet.createRow(iRow);} else {row=sheet.getRow(iRow);}

					cell = row.createCell(iCell);
					cell.setCellValue(FormaPagoPuntoVentaConstantesFunciones.LABEL_IDBANCO);
					iRow++;

					for(FormaPagoPuntoVenta formapagopuntoventa:formapagopuntoventasSeleccionados) {
						if(!existeFilas) {row = sheet.createRow(iRow);} else {row=sheet.getRow(iRow);}

						cell = row.createCell(iCell);
						cell.setCellValue(formapagopuntoventa.getbanco_descripcion());
						iRow++;
					}

					existeFilas=true;
					iCell++;
					break;

				case FormaPagoPuntoVentaConstantesFunciones.LABEL_IDCUENTABANCOPUNVEN:
					iRow=0;

					if(!existeFilas) {row = sheet.createRow(iRow);} else {row=sheet.getRow(iRow);}

					cell = row.createCell(iCell);
					cell.setCellValue(FormaPagoPuntoVentaConstantesFunciones.LABEL_IDCUENTABANCOPUNVEN);
					iRow++;

					for(FormaPagoPuntoVenta formapagopuntoventa:formapagopuntoventasSeleccionados) {
						if(!existeFilas) {row = sheet.createRow(iRow);} else {row=sheet.getRow(iRow);}

						cell = row.createCell(iCell);
						cell.setCellValue(formapagopuntoventa.getcuentabancopunven_descripcion());
						iRow++;
					}

					existeFilas=true;
					iCell++;
					break;

				case FormaPagoPuntoVentaConstantesFunciones.LABEL_IDTIPORIESGOCHEQUE:
					iRow=0;

					if(!existeFilas) {row = sheet.createRow(iRow);} else {row=sheet.getRow(iRow);}

					cell = row.createCell(iCell);
					cell.setCellValue(FormaPagoPuntoVentaConstantesFunciones.LABEL_IDTIPORIESGOCHEQUE);
					iRow++;

					for(FormaPagoPuntoVenta formapagopuntoventa:formapagopuntoventasSeleccionados) {
						if(!existeFilas) {row = sheet.createRow(iRow);} else {row=sheet.getRow(iRow);}

						cell = row.createCell(iCell);
						cell.setCellValue(formapagopuntoventa.gettiporiesgocheque_descripcion());
						iRow++;
					}

					existeFilas=true;
					iCell++;
					break;

				case FormaPagoPuntoVentaConstantesFunciones.LABEL_NUMEROCUENTA:
					iRow=0;

					if(!existeFilas) {row = sheet.createRow(iRow);} else {row=sheet.getRow(iRow);}

					cell = row.createCell(iCell);
					cell.setCellValue(FormaPagoPuntoVentaConstantesFunciones.LABEL_NUMEROCUENTA);
					iRow++;

					for(FormaPagoPuntoVenta formapagopuntoventa:formapagopuntoventasSeleccionados) {
						if(!existeFilas) {row = sheet.createRow(iRow);} else {row=sheet.getRow(iRow);}

						cell = row.createCell(iCell);
						cell.setCellValue(formapagopuntoventa.getnumero_cuenta());
						iRow++;
					}

					existeFilas=true;
					iCell++;
					break;

				case FormaPagoPuntoVentaConstantesFunciones.LABEL_NUMEROCHEQUE:
					iRow=0;

					if(!existeFilas) {row = sheet.createRow(iRow);} else {row=sheet.getRow(iRow);}

					cell = row.createCell(iCell);
					cell.setCellValue(FormaPagoPuntoVentaConstantesFunciones.LABEL_NUMEROCHEQUE);
					iRow++;

					for(FormaPagoPuntoVenta formapagopuntoventa:formapagopuntoventasSeleccionados) {
						if(!existeFilas) {row = sheet.createRow(iRow);} else {row=sheet.getRow(iRow);}

						cell = row.createCell(iCell);
						cell.setCellValue(formapagopuntoventa.getnumero_cheque());
						iRow++;
					}

					existeFilas=true;
					iCell++;
					break;

				case FormaPagoPuntoVentaConstantesFunciones.LABEL_GIRADOR:
					iRow=0;

					if(!existeFilas) {row = sheet.createRow(iRow);} else {row=sheet.getRow(iRow);}

					cell = row.createCell(iCell);
					cell.setCellValue(FormaPagoPuntoVentaConstantesFunciones.LABEL_GIRADOR);
					iRow++;

					for(FormaPagoPuntoVenta formapagopuntoventa:formapagopuntoventasSeleccionados) {
						if(!existeFilas) {row = sheet.createRow(iRow);} else {row=sheet.getRow(iRow);}

						cell = row.createCell(iCell);
						cell.setCellValue(formapagopuntoventa.getgirador());
						iRow++;
					}

					existeFilas=true;
					iCell++;
					break;

				case FormaPagoPuntoVentaConstantesFunciones.LABEL_IDBANCOTARJETA:
					iRow=0;

					if(!existeFilas) {row = sheet.createRow(iRow);} else {row=sheet.getRow(iRow);}

					cell = row.createCell(iCell);
					cell.setCellValue(FormaPagoPuntoVentaConstantesFunciones.LABEL_IDBANCOTARJETA);
					iRow++;

					for(FormaPagoPuntoVenta formapagopuntoventa:formapagopuntoventasSeleccionados) {
						if(!existeFilas) {row = sheet.createRow(iRow);} else {row=sheet.getRow(iRow);}

						cell = row.createCell(iCell);
						cell.setCellValue(formapagopuntoventa.getbancotarjeta_descripcion());
						iRow++;
					}

					existeFilas=true;
					iCell++;
					break;

				case FormaPagoPuntoVentaConstantesFunciones.LABEL_IDTARJETACREDITO:
					iRow=0;

					if(!existeFilas) {row = sheet.createRow(iRow);} else {row=sheet.getRow(iRow);}

					cell = row.createCell(iCell);
					cell.setCellValue(FormaPagoPuntoVentaConstantesFunciones.LABEL_IDTARJETACREDITO);
					iRow++;

					for(FormaPagoPuntoVenta formapagopuntoventa:formapagopuntoventasSeleccionados) {
						if(!existeFilas) {row = sheet.createRow(iRow);} else {row=sheet.getRow(iRow);}

						cell = row.createCell(iCell);
						cell.setCellValue(formapagopuntoventa.gettarjetacredito_descripcion());
						iRow++;
					}

					existeFilas=true;
					iCell++;
					break;

				case FormaPagoPuntoVentaConstantesFunciones.LABEL_IDTIPOINTERESTARJETA:
					iRow=0;

					if(!existeFilas) {row = sheet.createRow(iRow);} else {row=sheet.getRow(iRow);}

					cell = row.createCell(iCell);
					cell.setCellValue(FormaPagoPuntoVentaConstantesFunciones.LABEL_IDTIPOINTERESTARJETA);
					iRow++;

					for(FormaPagoPuntoVenta formapagopuntoventa:formapagopuntoventasSeleccionados) {
						if(!existeFilas) {row = sheet.createRow(iRow);} else {row=sheet.getRow(iRow);}

						cell = row.createCell(iCell);
						cell.setCellValue(formapagopuntoventa.gettipointerestarjeta_descripcion());
						iRow++;
					}

					existeFilas=true;
					iCell++;
					break;

				case FormaPagoPuntoVentaConstantesFunciones.LABEL_IDTIPOPAGOTARJETA:
					iRow=0;

					if(!existeFilas) {row = sheet.createRow(iRow);} else {row=sheet.getRow(iRow);}

					cell = row.createCell(iCell);
					cell.setCellValue(FormaPagoPuntoVentaConstantesFunciones.LABEL_IDTIPOPAGOTARJETA);
					iRow++;

					for(FormaPagoPuntoVenta formapagopuntoventa:formapagopuntoventasSeleccionados) {
						if(!existeFilas) {row = sheet.createRow(iRow);} else {row=sheet.getRow(iRow);}

						cell = row.createCell(iCell);
						cell.setCellValue(formapagopuntoventa.gettipopagotarjeta_descripcion());
						iRow++;
					}

					existeFilas=true;
					iCell++;
					break;

				case FormaPagoPuntoVentaConstantesFunciones.LABEL_IDCONEXION:
					iRow=0;

					if(!existeFilas) {row = sheet.createRow(iRow);} else {row=sheet.getRow(iRow);}

					cell = row.createCell(iCell);
					cell.setCellValue(FormaPagoPuntoVentaConstantesFunciones.LABEL_IDCONEXION);
					iRow++;

					for(FormaPagoPuntoVenta formapagopuntoventa:formapagopuntoventasSeleccionados) {
						if(!existeFilas) {row = sheet.createRow(iRow);} else {row=sheet.getRow(iRow);}

						cell = row.createCell(iCell);
						cell.setCellValue(formapagopuntoventa.getconexion_descripcion());
						iRow++;
					}

					existeFilas=true;
					iCell++;
					break;

				case FormaPagoPuntoVentaConstantesFunciones.LABEL_IDMES:
					iRow=0;

					if(!existeFilas) {row = sheet.createRow(iRow);} else {row=sheet.getRow(iRow);}

					cell = row.createCell(iCell);
					cell.setCellValue(FormaPagoPuntoVentaConstantesFunciones.LABEL_IDMES);
					iRow++;

					for(FormaPagoPuntoVenta formapagopuntoventa:formapagopuntoventasSeleccionados) {
						if(!existeFilas) {row = sheet.createRow(iRow);} else {row=sheet.getRow(iRow);}

						cell = row.createCell(iCell);
						cell.setCellValue(formapagopuntoventa.getmes_descripcion());
						iRow++;
					}

					existeFilas=true;
					iCell++;
					break;

				case FormaPagoPuntoVentaConstantesFunciones.LABEL_NUMERO:
					iRow=0;

					if(!existeFilas) {row = sheet.createRow(iRow);} else {row=sheet.getRow(iRow);}

					cell = row.createCell(iCell);
					cell.setCellValue(FormaPagoPuntoVentaConstantesFunciones.LABEL_NUMERO);
					iRow++;

					for(FormaPagoPuntoVenta formapagopuntoventa:formapagopuntoventasSeleccionados) {
						if(!existeFilas) {row = sheet.createRow(iRow);} else {row=sheet.getRow(iRow);}

						cell = row.createCell(iCell);
						cell.setCellValue(formapagopuntoventa.getnumero());
						iRow++;
					}

					existeFilas=true;
					iCell++;
					break;

				case FormaPagoPuntoVentaConstantesFunciones.LABEL_TARJETAHABIENTE:
					iRow=0;

					if(!existeFilas) {row = sheet.createRow(iRow);} else {row=sheet.getRow(iRow);}

					cell = row.createCell(iCell);
					cell.setCellValue(FormaPagoPuntoVentaConstantesFunciones.LABEL_TARJETAHABIENTE);
					iRow++;

					for(FormaPagoPuntoVenta formapagopuntoventa:formapagopuntoventasSeleccionados) {
						if(!existeFilas) {row = sheet.createRow(iRow);} else {row=sheet.getRow(iRow);}

						cell = row.createCell(iCell);
						cell.setCellValue(formapagopuntoventa.gettarjeta_habiente());
						iRow++;
					}

					existeFilas=true;
					iCell++;
					break;

				case FormaPagoPuntoVentaConstantesFunciones.LABEL_AUTORIZACION:
					iRow=0;

					if(!existeFilas) {row = sheet.createRow(iRow);} else {row=sheet.getRow(iRow);}

					cell = row.createCell(iCell);
					cell.setCellValue(FormaPagoPuntoVentaConstantesFunciones.LABEL_AUTORIZACION);
					iRow++;

					for(FormaPagoPuntoVenta formapagopuntoventa:formapagopuntoventasSeleccionados) {
						if(!existeFilas) {row = sheet.createRow(iRow);} else {row=sheet.getRow(iRow);}

						cell = row.createCell(iCell);
						cell.setCellValue(formapagopuntoventa.getautorizacion());
						iRow++;
					}

					existeFilas=true;
					iCell++;
					break;

				case FormaPagoPuntoVentaConstantesFunciones.LABEL_VOUCHER:
					iRow=0;

					if(!existeFilas) {row = sheet.createRow(iRow);} else {row=sheet.getRow(iRow);}

					cell = row.createCell(iCell);
					cell.setCellValue(FormaPagoPuntoVentaConstantesFunciones.LABEL_VOUCHER);
					iRow++;

					for(FormaPagoPuntoVenta formapagopuntoventa:formapagopuntoventasSeleccionados) {
						if(!existeFilas) {row = sheet.createRow(iRow);} else {row=sheet.getRow(iRow);}

						cell = row.createCell(iCell);
						cell.setCellValue(formapagopuntoventa.getvoucher());
						iRow++;
					}

					existeFilas=true;
					iCell++;
					break;

				case FormaPagoPuntoVentaConstantesFunciones.LABEL_LOTE:
					iRow=0;

					if(!existeFilas) {row = sheet.createRow(iRow);} else {row=sheet.getRow(iRow);}

					cell = row.createCell(iCell);
					cell.setCellValue(FormaPagoPuntoVentaConstantesFunciones.LABEL_LOTE);
					iRow++;

					for(FormaPagoPuntoVenta formapagopuntoventa:formapagopuntoventasSeleccionados) {
						if(!existeFilas) {row = sheet.createRow(iRow);} else {row=sheet.getRow(iRow);}

						cell = row.createCell(iCell);
						cell.setCellValue(formapagopuntoventa.getlote());
						iRow++;
					}

					existeFilas=true;
					iCell++;
					break;

				case FormaPagoPuntoVentaConstantesFunciones.LABEL_CUOTA:
					iRow=0;

					if(!existeFilas) {row = sheet.createRow(iRow);} else {row=sheet.getRow(iRow);}

					cell = row.createCell(iCell);
					cell.setCellValue(FormaPagoPuntoVentaConstantesFunciones.LABEL_CUOTA);
					iRow++;

					for(FormaPagoPuntoVenta formapagopuntoventa:formapagopuntoventasSeleccionados) {
						if(!existeFilas) {row = sheet.createRow(iRow);} else {row=sheet.getRow(iRow);}

						cell = row.createCell(iCell);
						cell.setCellValue(formapagopuntoventa.getcuota());
						iRow++;
					}

					existeFilas=true;
					iCell++;
					break;

				case FormaPagoPuntoVentaConstantesFunciones.LABEL_VALORRETENCION:
					iRow=0;

					if(!existeFilas) {row = sheet.createRow(iRow);} else {row=sheet.getRow(iRow);}

					cell = row.createCell(iCell);
					cell.setCellValue(FormaPagoPuntoVentaConstantesFunciones.LABEL_VALORRETENCION);
					iRow++;

					for(FormaPagoPuntoVenta formapagopuntoventa:formapagopuntoventasSeleccionados) {
						if(!existeFilas) {row = sheet.createRow(iRow);} else {row=sheet.getRow(iRow);}

						cell = row.createCell(iCell);
						cell.setCellValue(formapagopuntoventa.getvalor_retencion());
						iRow++;
					}

					existeFilas=true;
					iCell++;
					break;

				case FormaPagoPuntoVentaConstantesFunciones.LABEL_VALORCOMISION:
					iRow=0;

					if(!existeFilas) {row = sheet.createRow(iRow);} else {row=sheet.getRow(iRow);}

					cell = row.createCell(iCell);
					cell.setCellValue(FormaPagoPuntoVentaConstantesFunciones.LABEL_VALORCOMISION);
					iRow++;

					for(FormaPagoPuntoVenta formapagopuntoventa:formapagopuntoventasSeleccionados) {
						if(!existeFilas) {row = sheet.createRow(iRow);} else {row=sheet.getRow(iRow);}

						cell = row.createCell(iCell);
						cell.setCellValue(formapagopuntoventa.getvalor_comision());
						iRow++;
					}

					existeFilas=true;
					iCell++;
					break;

				case FormaPagoPuntoVentaConstantesFunciones.LABEL_VALORCALCULADO:
					iRow=0;

					if(!existeFilas) {row = sheet.createRow(iRow);} else {row=sheet.getRow(iRow);}

					cell = row.createCell(iCell);
					cell.setCellValue(FormaPagoPuntoVentaConstantesFunciones.LABEL_VALORCALCULADO);
					iRow++;

					for(FormaPagoPuntoVenta formapagopuntoventa:formapagopuntoventasSeleccionados) {
						if(!existeFilas) {row = sheet.createRow(iRow);} else {row=sheet.getRow(iRow);}

						cell = row.createCell(iCell);
						cell.setCellValue(formapagopuntoventa.getvalor_calculado());
						iRow++;
					}

					existeFilas=true;
					iCell++;
					break;

				case FormaPagoPuntoVentaConstantesFunciones.LABEL_VALORCANCELADO:
					iRow=0;

					if(!existeFilas) {row = sheet.createRow(iRow);} else {row=sheet.getRow(iRow);}

					cell = row.createCell(iCell);
					cell.setCellValue(FormaPagoPuntoVentaConstantesFunciones.LABEL_VALORCANCELADO);
					iRow++;

					for(FormaPagoPuntoVenta formapagopuntoventa:formapagopuntoventasSeleccionados) {
						if(!existeFilas) {row = sheet.createRow(iRow);} else {row=sheet.getRow(iRow);}

						cell = row.createCell(iCell);
						cell.setCellValue(formapagopuntoventa.getvalor_cancelado());
						iRow++;
					}

					existeFilas=true;
					iCell++;
					break;

				case FormaPagoPuntoVentaConstantesFunciones.LABEL_VALORDIFIERE:
					iRow=0;

					if(!existeFilas) {row = sheet.createRow(iRow);} else {row=sheet.getRow(iRow);}

					cell = row.createCell(iCell);
					cell.setCellValue(FormaPagoPuntoVentaConstantesFunciones.LABEL_VALORDIFIERE);
					iRow++;

					for(FormaPagoPuntoVenta formapagopuntoventa:formapagopuntoventasSeleccionados) {
						if(!existeFilas) {row = sheet.createRow(iRow);} else {row=sheet.getRow(iRow);}

						cell = row.createCell(iCell);
						cell.setCellValue(formapagopuntoventa.getvalor_difiere());
						iRow++;
					}

					existeFilas=true;
					iCell++;
					break;

				case FormaPagoPuntoVentaConstantesFunciones.LABEL_NUMERORETENCION:
					iRow=0;

					if(!existeFilas) {row = sheet.createRow(iRow);} else {row=sheet.getRow(iRow);}

					cell = row.createCell(iCell);
					cell.setCellValue(FormaPagoPuntoVentaConstantesFunciones.LABEL_NUMERORETENCION);
					iRow++;

					for(FormaPagoPuntoVenta formapagopuntoventa:formapagopuntoventasSeleccionados) {
						if(!existeFilas) {row = sheet.createRow(iRow);} else {row=sheet.getRow(iRow);}

						cell = row.createCell(iCell);
						cell.setCellValue(formapagopuntoventa.getnumero_retencion());
						iRow++;
					}

					existeFilas=true;
					iCell++;
					break;

				case FormaPagoPuntoVentaConstantesFunciones.LABEL_NUMEROLIQUIDACION:
					iRow=0;

					if(!existeFilas) {row = sheet.createRow(iRow);} else {row=sheet.getRow(iRow);}

					cell = row.createCell(iCell);
					cell.setCellValue(FormaPagoPuntoVentaConstantesFunciones.LABEL_NUMEROLIQUIDACION);
					iRow++;

					for(FormaPagoPuntoVenta formapagopuntoventa:formapagopuntoventasSeleccionados) {
						if(!existeFilas) {row = sheet.createRow(iRow);} else {row=sheet.getRow(iRow);}

						cell = row.createCell(iCell);
						cell.setCellValue(formapagopuntoventa.getnumero_liquidacion());
						iRow++;
					}

					existeFilas=true;
					iCell++;
					break;

				case FormaPagoPuntoVentaConstantesFunciones.LABEL_IDANIO:
					iRow=0;

					if(!existeFilas) {row = sheet.createRow(iRow);} else {row=sheet.getRow(iRow);}

					cell = row.createCell(iCell);
					cell.setCellValue(FormaPagoPuntoVentaConstantesFunciones.LABEL_IDANIO);
					iRow++;

					for(FormaPagoPuntoVenta formapagopuntoventa:formapagopuntoventasSeleccionados) {
						if(!existeFilas) {row = sheet.createRow(iRow);} else {row=sheet.getRow(iRow);}

						cell = row.createCell(iCell);
						cell.setCellValue(formapagopuntoventa.getanio_descripcion());
						iRow++;
					}

					existeFilas=true;
					iCell++;
					break;

				case FormaPagoPuntoVentaConstantesFunciones.LABEL_IDCUENTACONTABLE:
					iRow=0;

					if(!existeFilas) {row = sheet.createRow(iRow);} else {row=sheet.getRow(iRow);}

					cell = row.createCell(iCell);
					cell.setCellValue(FormaPagoPuntoVentaConstantesFunciones.LABEL_IDCUENTACONTABLE);
					iRow++;

					for(FormaPagoPuntoVenta formapagopuntoventa:formapagopuntoventasSeleccionados) {
						if(!existeFilas) {row = sheet.createRow(iRow);} else {row=sheet.getRow(iRow);}

						cell = row.createCell(iCell);
						cell.setCellValue(formapagopuntoventa.getcuentacontable_descripcion());
						iRow++;
					}

					existeFilas=true;
					iCell++;
					break;

				case FormaPagoPuntoVentaConstantesFunciones.LABEL_IDASIENTOCONTABLE:
					iRow=0;

					if(!existeFilas) {row = sheet.createRow(iRow);} else {row=sheet.getRow(iRow);}

					cell = row.createCell(iCell);
					cell.setCellValue(FormaPagoPuntoVentaConstantesFunciones.LABEL_IDASIENTOCONTABLE);
					iRow++;

					for(FormaPagoPuntoVenta formapagopuntoventa:formapagopuntoventasSeleccionados) {
						if(!existeFilas) {row = sheet.createRow(iRow);} else {row=sheet.getRow(iRow);}

						cell = row.createCell(iCell);
						cell.setCellValue(formapagopuntoventa.getasientocontable_descripcion());
						iRow++;
					}

					existeFilas=true;
					iCell++;
					break;
					
					default :
						break;
				}
			}
			
			
			//if(conCabecera) {
			//	this.getFilaCabeceraExportarExcelFormaPagoPuntoVenta(row);				
			//	iRow++;
			//}				
			
			//for(FormaPagoPuntoVenta formapagopuntoventaAux:formapagopuntoventasSeleccionados) {
			//	row = sheet.createRow(iRow);
				
			//	this.getFilaDatosExportarExcelFormaPagoPuntoVenta(formapagopuntoventaAux,row);
				
			//	iRow++;
			//}
			
			
			
			fileOutputStream = new FileOutputStream(new File(sPath));
		    
			workbook.write(fileOutputStream);
			
			//fileOutputStream.close();
			
			Constantes2.S_PATH_ULTIMO_ARCHIVO=sPath;
			
			if(this.parametroGeneralUsuario.getcon_mensaje_confirmacion() && !this.formapagopuntoventaSessionBean.getEsGuardarRelacionado()) {//Constantes.ISMOSTRARMENSAJESMANTENIMIENTO && 
				JOptionPane.showMessageDialog(this,"EXPORTADO CORRECTAMENTE:"+sPath,"MANTENIMIENTO DE Forma Pago",JOptionPane.INFORMATION_MESSAGE);
			}
		} catch (Exception e) {
			throw e;
			
		} finally {			
       		if (fileOutputStream != null) {
				fileOutputStream.close();
			}			
		}				
	}	
	*/
	
	
	
	public void buscarPorId(Long idActual) throws Exception {    		
		try {
			if(Constantes.ISUSAEJBLOGICLAYER) {
				this.formapagopuntoventaLogic.getNewConnexionToDeep("");
			}
			
			this.idActual=idActual;
			this.iNumeroPaginacionPagina=0;
			
			this.procesarBusqueda("PorId");
				    	
			//NO FUNCIONA BINDINGS
			this.inicializarActualizarBindingFormaPagoPuntoVenta(false);
			
			//SI ES MANUAL
			if(FormaPagoPuntoVentaJInternalFrame.ISBINDING_MANUAL) {
				//this.inicializarActualizarBindingManualFormaPagoPuntoVenta();
			}	
			
			if(Constantes.ISUSAEJBLOGICLAYER) {
				this.formapagopuntoventaLogic.commitNewConnexionToDeep();
			}
			
		} catch(Exception e) {
			
			if(Constantes.ISUSAEJBLOGICLAYER) {
				this.formapagopuntoventaLogic.rollbackNewConnexionToDeep();
			}
			
			FuncionesSwing.manageException(this, e,logger);
			
		} finally {
			if(Constantes.ISUSAEJBLOGICLAYER) {
				this.formapagopuntoventaLogic.closeNewConnexionToDeep();
			}
		}
	}
	
	public void jButtonAnterioresFormaPagoPuntoVentaActionPerformed(ActionEvent evt) throws Exception {    		
		try	{
			//this.iNumeroPaginacion-=this.iNumeroPaginacion;
			/*
			if(this.iNumeroPaginacion<0) {
				this.iNumeroPaginacion=0;
			}
			*/
			//this.iNumeroPaginacionPagina=10;			
			
			if(Constantes.ISUSAEJBLOGICLAYER) {
				this.formapagopuntoventaLogic.getNewConnexionToDeep("");
			}
			
			this.anteriores();
			
			//NO FUNCIONA BINDINGS
			this.inicializarActualizarBindingFormaPagoPuntoVenta(false);
			
			//SI ES MANUAL
			if(FormaPagoPuntoVentaJInternalFrame.ISBINDING_MANUAL) {
	    		//this.inicializarActualizarBindingManualFormaPagoPuntoVenta();
			}
			
			if(Constantes.ISUSAEJBLOGICLAYER) {
				this.formapagopuntoventaLogic.commitNewConnexionToDeep();
			}
			
		} catch(Exception e) {
			if(Constantes.ISUSAEJBLOGICLAYER) {
				this.formapagopuntoventaLogic.rollbackNewConnexionToDeep();
			}
			
			FuncionesSwing.manageException(this, e,logger,FormaPagoPuntoVentaConstantesFunciones.CLASSNAME);
		
		} finally {
			if(Constantes.ISUSAEJBLOGICLAYER) {
				this.formapagopuntoventaLogic.closeNewConnexionToDeep();
			}
		}
	}
	
	public void jButtonSiguientesFormaPagoPuntoVentaActionPerformed(ActionEvent evt) throws Exception {    		
		try	{
			//this.iNumeroPaginacion+=this.iNumeroPaginacion;
			//this.iNumeroPaginacionPagina=10;			
			
			if(Constantes.ISUSAEJBLOGICLAYER) {
				this.formapagopuntoventaLogic.getNewConnexionToDeep("");
			}
			
			this.siguientes();
			
			//NO FUNCIONA BINDINGS
			this.inicializarActualizarBindingFormaPagoPuntoVenta(false);
			
			//SI ES MANUAL
			if(FormaPagoPuntoVentaJInternalFrame.ISBINDING_MANUAL) {
	    		//this.inicializarActualizarBindingManualFormaPagoPuntoVenta();
			}		
			
			if(Constantes.ISUSAEJBLOGICLAYER) {
				this.formapagopuntoventaLogic.commitNewConnexionToDeep();
			}
			
		} catch(Exception e) {
			if(Constantes.ISUSAEJBLOGICLAYER) {
				this.formapagopuntoventaLogic.rollbackNewConnexionToDeep();
			}
			
			FuncionesSwing.manageException(this, e,logger,FormaPagoPuntoVentaConstantesFunciones.CLASSNAME);
		
		} finally {
			if(Constantes.ISUSAEJBLOGICLAYER) {
				this.formapagopuntoventaLogic.closeNewConnexionToDeep();
			}
		}
	}
	
	public void aumentarTamanioFilaNuevaTablaFormaPagoPuntoVenta() throws Exception {		
		Dimension dimensionMinimum=this.jTableDatosFormaPagoPuntoVenta.getMinimumSize();
		Dimension dimensionMaximum=this.jTableDatosFormaPagoPuntoVenta.getMaximumSize();
		Dimension dimensionPreferred=this.jTableDatosFormaPagoPuntoVenta.getPreferredSize();
	
		double iHeightConFilaNueva=dimensionPreferred.getHeight();
		
		iHeightConFilaNueva+=this.jTableDatosFormaPagoPuntoVenta.getRowHeight();
		
		dimensionMinimum.setSize(dimensionMinimum.getWidth(),iHeightConFilaNueva);
		dimensionMaximum.setSize(dimensionMaximum.getWidth(),iHeightConFilaNueva);
		dimensionPreferred.setSize(dimensionPreferred.getWidth(),iHeightConFilaNueva);
		
		this.jTableDatosFormaPagoPuntoVenta.setMinimumSize(dimensionMinimum);
		this.jTableDatosFormaPagoPuntoVenta.setMaximumSize(dimensionMaximum);
		this.jTableDatosFormaPagoPuntoVenta.setPreferredSize(dimensionPreferred);	
	}
	
	public void inicializarActualizarBindingFormaPagoPuntoVenta(Boolean esInicializar) throws Exception {
		this.inicializarActualizarBindingFormaPagoPuntoVenta(esInicializar,true);
	}
	
	public void inicializarActualizarBindingFormaPagoPuntoVenta(Boolean esInicializar,Boolean conTabla) throws Exception {		
		if(conTabla) {
			this.inicializarActualizarBindingTablaFormaPagoPuntoVenta(esInicializar);
		}
		
		this.inicializarActualizarBindingBotonesFormaPagoPuntoVenta(esInicializar);
		
		//FUNCIONALIDAD_RELACIONADO
		if(!this.formapagopuntoventaSessionBean.getEsGuardarRelacionado()) {
			try{this.inicializarActualizarBindingBusquedasFormaPagoPuntoVenta(esInicializar);}catch(Exception e){e.printStackTrace();}
			
			//this.inicializarActualizarBindingtiposArchivosReportesAccionesFormaPagoPuntoVenta(esInicializar) ;
			
			this.inicializarActualizarBindingParametrosReportesFormaPagoPuntoVenta(esInicializar) ;
		}
		
		if(esInicializar) {
			if( !FormaPagoPuntoVentaJInternalFrame.ISBINDING_MANUAL_TABLA ||
			   	!FormaPagoPuntoVentaJInternalFrame.ISBINDING_MANUAL) {
			   	
			}
		}
	}
	
	public void inicializarActualizarBindingManualFormaPagoPuntoVenta() throws Exception {		
		//NO SE NECESITA HACER BINDING OTRA VEZ
		//this.inicializarActualizarBindingTablaFormaPagoPuntoVenta();
		
		this.inicializarActualizarBindingBotonesManualFormaPagoPuntoVenta(true);
		
		//FUNCIONALIDAD_RELACIONADO
		if(!this.formapagopuntoventaSessionBean.getEsGuardarRelacionado()) {
			/*
			this.inicializarActualizarBindingBusquedasManualFormaPagoPuntoVenta();			
			*/
			
			//this.inicializarActualizarBindingtiposArchivosReportesAccionesFormaPagoPuntoVenta() ;
			
			this.inicializarActualizarBindingParametrosReportesPostAccionesManualFormaPagoPuntoVenta(false) ;			
			
		}
	}
	
	public void inicializarActualizarBindingParametrosReportesPostAccionesManualFormaPagoPuntoVenta(Boolean esSetControles) throws Exception {
		try	{					
			if(!esSetControles) {
				this.isSeleccionarTodos=this.jCheckBoxSeleccionarTodosFormaPagoPuntoVenta.isSelected();
				this.isSeleccionados=this.jCheckBoxSeleccionadosFormaPagoPuntoVenta.isSelected();
				
				/*
				this.conGraficoReporte=this.jCheckBoxConGraficoReporteFormaPagoPuntoVenta.isSelected();															
				*/
				
				if(this.jInternalFrameDetalleFormFormaPagoPuntoVenta!=null) {
				this.isPostAccionNuevo=this.jInternalFrameDetalleFormFormaPagoPuntoVenta.jCheckBoxPostAccionNuevoFormaPagoPuntoVenta.isSelected();
				this.isPostAccionSinCerrar=this.jInternalFrameDetalleFormFormaPagoPuntoVenta.jCheckBoxPostAccionSinCerrarFormaPagoPuntoVenta.isSelected();
				this.isPostAccionSinMensaje=this.jInternalFrameDetalleFormFormaPagoPuntoVenta.jCheckBoxPostAccionSinMensajeFormaPagoPuntoVenta.isSelected();
				}
			
			} else {
				this.jCheckBoxSeleccionarTodosFormaPagoPuntoVenta.setSelected(this.isSeleccionarTodos);
				this.jCheckBoxSeleccionadosFormaPagoPuntoVenta.setSelected(this.isSeleccionados);
				
				/*
				this.jCheckBoxConGraficoReporteFormaPagoPuntoVenta.setSelected(this.conGraficoReporte);				
				*/
				
				if(this.jInternalFrameDetalleFormFormaPagoPuntoVenta!=null) {
				this.jInternalFrameDetalleFormFormaPagoPuntoVenta.jCheckBoxPostAccionNuevoFormaPagoPuntoVenta.setSelected(this.isPostAccionNuevo);
				this.jInternalFrameDetalleFormFormaPagoPuntoVenta.jCheckBoxPostAccionSinCerrarFormaPagoPuntoVenta.setSelected(this.isPostAccionSinCerrar);
				this.jInternalFrameDetalleFormFormaPagoPuntoVenta.jCheckBoxPostAccionSinMensajeFormaPagoPuntoVenta.setSelected(this.isPostAccionSinMensaje);
				}
			}
			
			/*
			if(this.jComboBoxTiposPaginacionFormaPagoPuntoVenta.getSelectedItem()!=null) {
				this.sTipoPaginacion=((Reporte)this.jComboBoxTiposPaginacionFormaPagoPuntoVenta.getSelectedItem()).getsCodigo();			
			}
			*/
			
			
			if(this.jInternalFrameDetalleFormFormaPagoPuntoVenta!=null) {
			this.sTipoAccionFormulario=((Reporte)this.jInternalFrameDetalleFormFormaPagoPuntoVenta.jComboBoxTiposAccionesFormularioFormaPagoPuntoVenta.getSelectedItem()).getsCodigo();
			}
			
			
			/*
			if(!this.conCargarMinimo) {
				this.sTipoArchivoReporte=((Reporte)this.jComboBoxTiposArchivosReportesFormaPagoPuntoVenta.getSelectedItem()).getsCodigo();			
				
				if(this.jInternalFrameReporteDinamicoFormaPagoPuntoVenta!=null) {
					this.sTipoArchivoReporteDinamico=((Reporte)this.jInternalFrameReporteDinamicoFormaPagoPuntoVenta.getjComboBoxTiposArchivosReportesDinamico().getSelectedItem()).getsCodigo();			
				}
				
				this.sTipoRelacion=((Reporte)this.jComboBoxTiposRelacionesFormaPagoPuntoVenta.getSelectedItem()).getsCodigo();
									
				this.sTipoAccion=((Reporte)this.jComboBoxTiposAccionesFormaPagoPuntoVenta.getSelectedItem()).getsCodigo();
													
				this.sTipoSeleccionar=((Reporte)this.jComboBoxTiposSeleccionarFormaPagoPuntoVenta.getSelectedItem()).getsCodigo();
									
				this.sTipoReporte=((Reporte)this.jComboBoxTiposReportesFormaPagoPuntoVenta.getSelectedItem()).getsCodigo();							
					
				if(this.jInternalFrameReporteDinamicoFormaPagoPuntoVenta!=null) {
					this.sTipoReporteDinamico=((Reporte)this.jInternalFrameReporteDinamicoFormaPagoPuntoVenta.getjComboBoxTiposReportesDinamico().getSelectedItem()).getsCodigo();							
				}
				
				this.sTipoGraficoReporte=((Reporte)this.jComboBoxTiposGraficosReportesFormaPagoPuntoVenta.getSelectedItem()).getsCodigo();											
			}			
			
			this.sValorCampoGeneral=this.jTextFieldValorCampoGeneralFormaPagoPuntoVenta.getText();						
			
			*/
			
		} catch(Exception e) {
			throw e;
		}
	}
	
	public void inicializarActualizarBindingParametrosReportesFormaPagoPuntoVenta(Boolean esInicializar) throws Exception {
		try	{	
			if(FormaPagoPuntoVentaJInternalFrame.ISBINDING_MANUAL) {
				this. inicializarActualizarBindingParametrosReportesPostAccionesManualFormaPagoPuntoVenta(false);
			} else {
			}
		} catch(Exception e) {
			throw e;
		}
	}	
	
	public void inicializarActualizarBindingtiposArchivosReportesAccionesFormaPagoPuntoVenta() throws Exception {
		try	{
			if(FormaPagoPuntoVentaJInternalFrame.ISBINDING_MANUAL) {
				this.inicializarActualizarBindingtiposArchivosReportesAccionesManualFormaPagoPuntoVenta();
			} else {
			}
		} catch(Exception e) {
			throw e;
		}
	}
	
	@SuppressWarnings("unchecked")
	public void inicializarActualizarBindingtiposArchivosReportesAccionesManualFormDetalleFormaPagoPuntoVenta() throws Exception {
		//TIPOS ACCIONES FORMULARIO	
		this.jInternalFrameDetalleFormFormaPagoPuntoVenta.jComboBoxTiposAccionesFormularioFormaPagoPuntoVenta.removeAllItems();
				
		for(Reporte reporte:this.tiposAccionesFormulario) {
			this.jInternalFrameDetalleFormFormaPagoPuntoVenta.jComboBoxTiposAccionesFormularioFormaPagoPuntoVenta.addItem(reporte);
		}
		
		//TIPOS ACCIONES FORMULARIO
	}
	
	@SuppressWarnings("unchecked")
	public void inicializarActualizarBindingtiposArchivosReportesAccionesManualFormaPagoPuntoVenta() throws Exception {
		try	{
			/*
			//TIPOS ARCHIVOS REPORTES
			this.jComboBoxTiposArchivosReportesFormaPagoPuntoVenta.removeAllItems();
				
			for(Reporte reporte:this.tiposArchivosReportes) {
				this.jComboBoxTiposArchivosReportesFormaPagoPuntoVenta.addItem(reporte);
			}
			
			
				
			//TIPOS REPORTES
			this.jComboBoxTiposReportesFormaPagoPuntoVenta.removeAllItems();
				
			for(Reporte reporte:this.tiposReportes) {
				this.jComboBoxTiposReportesFormaPagoPuntoVenta.addItem(reporte);
			}
			
			
			//TIPOS GRAFICOS REPORTES
			this.jComboBoxTiposGraficosReportesFormaPagoPuntoVenta.removeAllItems();
				
			for(Reporte reporte:this.tiposGraficosReportes) {
				this.jComboBoxTiposGraficosReportesFormaPagoPuntoVenta.addItem(reporte);
			}
			
			
			//TIPOS PAGINACION
			this.jComboBoxTiposPaginacionFormaPagoPuntoVenta.removeAllItems();
				
			for(Reporte reporte:this.tiposPaginacion) {
				this.jComboBoxTiposPaginacionFormaPagoPuntoVenta.addItem(reporte);
			}
			
			
			if(!this.formapagopuntoventaSessionBean.getEsGuardarRelacionado()) {
				this.jComboBoxTiposPaginacionFormaPagoPuntoVenta.setSelectedItem(Funciones2.getTipoPaginacionDefecto("NORMAL",this.tiposPaginacion));
			} else {
				this.jComboBoxTiposPaginacionFormaPagoPuntoVenta.setSelectedItem(Funciones2.getTipoPaginacionDefecto("RELACIONADO",this.tiposPaginacion));
			}
				
				
			//TIPOS ACCIONES	
			this.jComboBoxTiposRelacionesFormaPagoPuntoVenta.removeAllItems();
				
			for(Reporte reporte:this.tiposRelaciones) {
				this.jComboBoxTiposRelacionesFormaPagoPuntoVenta.addItem(reporte);
			}
			
			//TIPOS ACCIONES
				
				
			//TIPOS ACCIONES	
			this.jComboBoxTiposAccionesFormaPagoPuntoVenta.removeAllItems();
				
			for(Reporte reporte:this.tiposAcciones) {
				this.jComboBoxTiposAccionesFormaPagoPuntoVenta.addItem(reporte);
			}
			
			//TIPOS ACCIONES			
			*/
			
			
			//TIPOS ACCIONES FORMULARIO	
			if(this.jInternalFrameDetalleFormFormaPagoPuntoVenta!=null) { //if(this.conCargarFormDetalle) {
				this.jInternalFrameDetalleFormFormaPagoPuntoVenta.jComboBoxTiposAccionesFormularioFormaPagoPuntoVenta.removeAllItems();
				
				for(Reporte reporte:this.tiposAccionesFormulario) {
					this.jInternalFrameDetalleFormFormaPagoPuntoVenta.jComboBoxTiposAccionesFormularioFormaPagoPuntoVenta.addItem(reporte);
				}
				
			}
			//TIPOS ACCIONES FORMULARIO
			
			
			/*
			//TIPOS SELECCIONAR
			this.jComboBoxTiposSeleccionarFormaPagoPuntoVenta.removeAllItems();
				
			for(Reporte reporte:this.tiposSeleccionar) {
				this.jComboBoxTiposSeleccionarFormaPagoPuntoVenta.addItem(reporte);
			}
			
			
			if(this.tiposSeleccionar!=null && this.tiposSeleccionar.size()>1) {
				this.jComboBoxTiposSeleccionarFormaPagoPuntoVenta.setSelectedIndex(1);
			}
				
			//REPORTE DINAMICO
			this.inicializarActualizarBindingtiposArchivosReportesDinamicoAccionesManualFormaPagoPuntoVenta();
							
			//TIPOS COLUMNAS SELECT
			//TIPOS SELECCIONAR
			
			*/
		} catch(Exception e) {
			throw e;
		}
	}		
	
	/*
	@SuppressWarnings("unchecked")
	public void inicializarActualizarBindingtiposArchivosReportesDinamicoAccionesManualFormaPagoPuntoVenta() throws Exception {
		try	{
			DefaultListModel<Reporte> defaultListModel=new DefaultListModel<Reporte>();
			
			
			//TIPOS ARCHIVOS REPORTES DINAMICO
			if(this.jInternalFrameReporteDinamicoFormaPagoPuntoVenta!=null) {
				this.jInternalFrameReporteDinamicoFormaPagoPuntoVenta.getjComboBoxTiposArchivosReportesDinamico().removeAllItems();
					
				for(Reporte reporte:this.tiposArchivosReportesDinamico) {
					this.jInternalFrameReporteDinamicoFormaPagoPuntoVenta.getjComboBoxTiposArchivosReportesDinamico().addItem(reporte);
				}
				
			}
			
			//TIPOS REPORTES DINAMICO
			if(this.jInternalFrameReporteDinamicoFormaPagoPuntoVenta!=null) {
				this.jInternalFrameReporteDinamicoFormaPagoPuntoVenta.getjComboBoxTiposReportesDinamico().removeAllItems();
					
				for(Reporte reporte:this.tiposReportesDinamico) {
					this.jInternalFrameReporteDinamicoFormaPagoPuntoVenta.getjComboBoxTiposReportesDinamico().addItem(reporte);
				}
				
			}
			
			defaultListModel=new DefaultListModel<Reporte>();
			
			if(this.jInternalFrameReporteDinamicoFormaPagoPuntoVenta!=null) {
				
				if(this.jInternalFrameReporteDinamicoFormaPagoPuntoVenta.getjListColumnasSelectReporte()!=null) {
					this.jInternalFrameReporteDinamicoFormaPagoPuntoVenta.getjListColumnasSelectReporte().removeAll();
						
					for(Reporte reporte:this.tiposColumnasSelect) {
						defaultListModel.addElement(reporte);
					}						
						
					this.jInternalFrameReporteDinamicoFormaPagoPuntoVenta.getjListColumnasSelectReporte().setModel(defaultListModel);									
						
				}	
					
				//TIPOS RELACIONES SELECT
				//TIPOS SELECCIONAR
				defaultListModel=new DefaultListModel<Reporte>();
				if(this.jInternalFrameReporteDinamicoFormaPagoPuntoVenta.getjListRelacionesSelectReporte()!=null) {
					this.jInternalFrameReporteDinamicoFormaPagoPuntoVenta.getjListRelacionesSelectReporte().removeAll();
						
					for(Reporte reporte:this.tiposRelacionesSelect) {
						defaultListModel.addElement(reporte);
					}						
						
					this.jInternalFrameReporteDinamicoFormaPagoPuntoVenta.getjListRelacionesSelectReporte().setModel(defaultListModel);									
						
				}	
				
				
				//TIPOS COLUMNAS CATEGORIA DINAMICO
				if(this.jInternalFrameReporteDinamicoFormaPagoPuntoVenta.getjComboBoxColumnaCategoriaGrafico()!=null) {
					this.jInternalFrameReporteDinamicoFormaPagoPuntoVenta.getjComboBoxColumnaCategoriaGrafico().removeAllItems();
						
					ArrayList<Reporte> tiposColumnasCategoria=FormaPagoPuntoVentaConstantesFunciones.getTiposSeleccionarFormaPagoPuntoVenta(true,true,false,true,true);
						
					for(Reporte reporte:tiposColumnasCategoria) {//this.tiposSeleccionar
						this.jInternalFrameReporteDinamicoFormaPagoPuntoVenta.getjComboBoxColumnaCategoriaGrafico().addItem(reporte);
					}
					
				}
					
				//TIPOS COLUMNAS CATEGORIA VALOR DINAMICO
				if(this.jInternalFrameReporteDinamicoFormaPagoPuntoVenta.getjComboBoxColumnaCategoriaValor()!=null) {
					this.jInternalFrameReporteDinamicoFormaPagoPuntoVenta.getjComboBoxColumnaCategoriaValor().removeAllItems();
						
					ArrayList<Reporte> tiposColumnasCategoriaValor=FormaPagoPuntoVentaConstantesFunciones.getTiposSeleccionarFormaPagoPuntoVenta(false,false,true,false,false);
						
					for(Reporte reporte:tiposColumnasCategoriaValor) {//this.tiposSeleccionar
						this.jInternalFrameReporteDinamicoFormaPagoPuntoVenta.getjComboBoxColumnaCategoriaValor().addItem(reporte);
					}
					
				}
					
				//TIPOS COLUMNAS VALOR
				defaultListModel=new DefaultListModel<Reporte>();
					
				if(this.jInternalFrameReporteDinamicoFormaPagoPuntoVenta.getjListColumnasValoresGrafico()!=null) {
					this.jInternalFrameReporteDinamicoFormaPagoPuntoVenta.getjListColumnasValoresGrafico().removeAll();
						
					ArrayList<Reporte> tiposColumnasValor=FormaPagoPuntoVentaConstantesFunciones.getTiposSeleccionarFormaPagoPuntoVenta(false,false,true,false,false);
						
					for(Reporte reporte:tiposColumnasValor) {//this.tiposSeleccionar
						defaultListModel.addElement(reporte);
					}						
						
					this.jInternalFrameReporteDinamicoFormaPagoPuntoVenta.getjListColumnasValoresGrafico().setModel(defaultListModel);									
						
				}
					
				//TIPOS GRAFICOS REPORTES DINAMICOS
				if(this.jInternalFrameReporteDinamicoFormaPagoPuntoVenta.getjComboBoxTiposGraficosReportesDinamico()!=null) {
					this.jInternalFrameReporteDinamicoFormaPagoPuntoVenta.getjComboBoxTiposGraficosReportesDinamico().removeAllItems();
						
					for(Reporte reporte:this.tiposGraficosReportes) {
						this.jInternalFrameReporteDinamicoFormaPagoPuntoVenta.getjComboBoxTiposGraficosReportesDinamico().addItem(reporte);
					}
					
				}
			
			
			}
		} catch(Exception e) {
			throw e;
		}
	}	
	*/
	
	/*
	public void inicializarActualizarBindingBusquedasManualFormaPagoPuntoVenta()  throws Exception {				
		//BYDAN_BUSQUEDAS		
		
		if(this.jComboBoxid_asiento_contableFK_IdAsientoContableFormaPagoPuntoVenta.getSelectedItem()!=null){this.id_asiento_contableFK_IdAsientoContable=((AsientoContable)this.jComboBoxid_asiento_contableFK_IdAsientoContableFormaPagoPuntoVenta.getSelectedItem()).getId();}
		if(this.jComboBoxid_bancoFK_IdBancoFormaPagoPuntoVenta.getSelectedItem()!=null){this.id_bancoFK_IdBanco=((Banco)this.jComboBoxid_bancoFK_IdBancoFormaPagoPuntoVenta.getSelectedItem()).getId();}
		if(this.jComboBoxid_banco_tarjetaFK_IdBancoTarjetaFormaPagoPuntoVenta.getSelectedItem()!=null){this.id_banco_tarjetaFK_IdBancoTarjeta=((Banco)this.jComboBoxid_banco_tarjetaFK_IdBancoTarjetaFormaPagoPuntoVenta.getSelectedItem()).getId();}
		if(this.jComboBoxid_conexionFK_IdConexionFormaPagoPuntoVenta.getSelectedItem()!=null){this.id_conexionFK_IdConexion=((Conexion)this.jComboBoxid_conexionFK_IdConexionFormaPagoPuntoVenta.getSelectedItem()).getId();}
		if(this.jComboBoxid_cuenta_banco_pun_venFK_IdCuentaBancoPunVenFormaPagoPuntoVenta.getSelectedItem()!=null){this.id_cuenta_banco_pun_venFK_IdCuentaBancoPunVen=((CuentaBancoPunVen)this.jComboBoxid_cuenta_banco_pun_venFK_IdCuentaBancoPunVenFormaPagoPuntoVenta.getSelectedItem()).getId();}
		if(this.jComboBoxid_cuenta_contableFK_IdCuentaContableFormaPagoPuntoVenta.getSelectedItem()!=null){this.id_cuenta_contableFK_IdCuentaContable=((CuentaContable)this.jComboBoxid_cuenta_contableFK_IdCuentaContableFormaPagoPuntoVenta.getSelectedItem()).getId();}
		if(this.jComboBoxid_factura_punto_ventaFK_IdFacturaPuntoVentaFormaPagoPuntoVenta.getSelectedItem()!=null){this.id_factura_punto_ventaFK_IdFacturaPuntoVenta=((FacturaPuntoVenta)this.jComboBoxid_factura_punto_ventaFK_IdFacturaPuntoVentaFormaPagoPuntoVenta.getSelectedItem()).getId();}
		if(this.jComboBoxid_tarjeta_creditoFK_IdTarjetaCreditoFormaPagoPuntoVenta.getSelectedItem()!=null){this.id_tarjeta_creditoFK_IdTarjetaCredito=((TarjetaCredito)this.jComboBoxid_tarjeta_creditoFK_IdTarjetaCreditoFormaPagoPuntoVenta.getSelectedItem()).getId();}
		if(this.jComboBoxid_tipo_forma_pagoFK_IdTipoFormaPagoFormaPagoPuntoVenta.getSelectedItem()!=null){this.id_tipo_forma_pagoFK_IdTipoFormaPago=((TipoFormaPago)this.jComboBoxid_tipo_forma_pagoFK_IdTipoFormaPagoFormaPagoPuntoVenta.getSelectedItem()).getId();}
		if(this.jComboBoxid_tipo_interes_tarjetaFK_IdTipoInteresTarjetaFormaPagoPuntoVenta.getSelectedItem()!=null){this.id_tipo_interes_tarjetaFK_IdTipoInteresTarjeta=((TipoInteresTarjeta)this.jComboBoxid_tipo_interes_tarjetaFK_IdTipoInteresTarjetaFormaPagoPuntoVenta.getSelectedItem()).getId();}
		if(this.jComboBoxid_tipo_pago_tarjetaFK_IdTipoPagoTarjetaFormaPagoPuntoVenta.getSelectedItem()!=null){this.id_tipo_pago_tarjetaFK_IdTipoPagoTarjeta=((TipoPagoTarjeta)this.jComboBoxid_tipo_pago_tarjetaFK_IdTipoPagoTarjetaFormaPagoPuntoVenta.getSelectedItem()).getId();}
		if(this.jComboBoxid_tipo_riesgo_chequeFK_IdTipoRiesgoChequeFormaPagoPuntoVenta.getSelectedItem()!=null){this.id_tipo_riesgo_chequeFK_IdTipoRiesgoCheque=((TipoRiesgoCheque)this.jComboBoxid_tipo_riesgo_chequeFK_IdTipoRiesgoChequeFormaPagoPuntoVenta.getSelectedItem()).getId();}
		
	}
	*/
	
	
	
	public void inicializarActualizarBindingBusquedasFormaPagoPuntoVenta(Boolean esInicializar) throws Exception {				
		if(FormaPagoPuntoVentaJInternalFrame.ISBINDING_MANUAL) {
			/*
			this.inicializarActualizarBindingBusquedasManualFormaPagoPuntoVenta();			
			*/
		} else {
		}
	}		
		
	public void inicializarActualizarBindingTablaFormaPagoPuntoVenta() throws Exception {
		this.inicializarActualizarBindingTablaFormaPagoPuntoVenta(false);
	}
	
	/*
	public void inicializarActualizarBindingTablaOrderByFormaPagoPuntoVenta() {
		//TABLA OrderBy	
		TableColumn tableColumn=new TableColumn();
		Integer iWidthTableDefinicionOrderBy=0;			
			
		this.jInternalFrameOrderByFormaPagoPuntoVenta.getjTableDatosOrderBy().setModel(new TablaGeneralOrderByModel(this.arrOrderBy));
					
		//DEFINIR RENDERERS OrderBy
		tableColumn=this.jInternalFrameOrderByFormaPagoPuntoVenta.getjTableDatosOrderBy().getColumnModel().getColumn(Funciones2.getColumnIndexByName(this.jInternalFrameOrderByFormaPagoPuntoVenta.getjTableDatosOrderBy(),OrderBy.ISSELECTED));			
		//tableColumn.addPropertyChangeListener(new FormaPagoPuntoVentaPropertyChangeListener());
					
		tableColumn.setPreferredWidth(50); 	 
		tableColumn.setWidth(50); 	 
		tableColumn.setMinWidth(50);
		tableColumn.setMaxWidth(50);
				
		iWidthTableDefinicionOrderBy+=50;
					
		tableColumn=this.jInternalFrameOrderByFormaPagoPuntoVenta.getjTableDatosOrderBy().getColumnModel().getColumn(Funciones2.getColumnIndexByName(this.jInternalFrameOrderByFormaPagoPuntoVenta.getjTableDatosOrderBy(),OrderBy.NOMBRE));
		//tableColumn.addPropertyChangeListener(new FormaPagoPuntoVentaPropertyChangeListener());
					
		tableColumn.setPreferredWidth(150); 	 
		tableColumn.setWidth(150); 	 
		tableColumn.setMinWidth(150);
		tableColumn.setMaxWidth(150);
				
		iWidthTableDefinicionOrderBy+=150;
					
		//tableColumn=this.jTableDatosFormaPagoPuntoVentaOrderBy.getColumnModel().getColumn(Funciones2.getColumnIndexByName(this.jTableDatosFormaPagoPuntoVentaOrderBy,OrderBy.NOMBREDB));			
		////tableColumn.addPropertyChangeListener(new FormaPagoPuntoVentaPropertyChangeListener());
								
		tableColumn=this.jInternalFrameOrderByFormaPagoPuntoVenta.getjTableDatosOrderBy().getColumnModel().getColumn(Funciones2.getColumnIndexByName(this.jInternalFrameOrderByFormaPagoPuntoVenta.getjTableDatosOrderBy(),OrderBy.ESDESC));
		//tableColumn.addPropertyChangeListener(new FormaPagoPuntoVentaPropertyChangeListener());
												
		tableColumn.setPreferredWidth(50); 	 
		tableColumn.setWidth(50); 	 
		tableColumn.setMinWidth(50);
		tableColumn.setMaxWidth(50);
				
		((AbstractTableModel) this.jInternalFrameOrderByFormaPagoPuntoVenta.getjTableDatosOrderBy().getModel()).fireTableDataChanged();
				
		iWidthTableDefinicionOrderBy+=50;
	}
	*/
	
	
	public void inicializarActualizarBindingTablaFormaPagoPuntoVenta(Boolean esInicializar) throws Exception {
		Boolean isNoExiste=false;
		Integer iCountNumeroColumnasNormal=0;
		Integer iCountNumeroColumnasFk=0;
		
		this.iWidthTableDefinicion=0;
		
		int iSizeTabla=0;
		
		iSizeTabla=this.getSizeTablaDatos();
		
	if(esInicializar || ConstantesSwing.FORZAR_INICIALIZAR_TABLA) {//esInicializar
		//ARCHITECTURE
		if(Constantes.ISUSAEJBLOGICLAYER) {
			isNoExiste=formapagopuntoventaLogic.getFormaPagoPuntoVentas().size()==0;
		} else if(Constantes.ISUSAEJBREMOTE || Constantes.ISUSAEJBHOME) {
			isNoExiste=formapagopuntoventas.size()==0;
		}
		//ARCHITECTURE
			
		if(isNoExiste) {
			if(this.iNumeroPaginacion-this.iNumeroPaginacion>0) {
				this.iNumeroPaginacion-=this.iNumeroPaginacion;
			}
		}
		
		TableColumn tableColumn=new TableColumn();
		
		if(FormaPagoPuntoVentaJInternalFrame.ISBINDING_MANUAL_TABLA) {
			
			//ARCHITECTURE
			if(Constantes.ISUSAEJBLOGICLAYER) {
				this.jTableDatosFormaPagoPuntoVenta.setModel(new FormaPagoPuntoVentaModel(this.formapagopuntoventaLogic.getFormaPagoPuntoVentas(),this));
			} else if(Constantes.ISUSAEJBREMOTE || Constantes.ISUSAEJBHOME ) {
				this.jTableDatosFormaPagoPuntoVenta.setModel(new FormaPagoPuntoVentaModel(this.formapagopuntoventas,this));
			}
			//ARCHITECTURE
			
							
			/*
			
			if(this.jInternalFrameOrderByFormaPagoPuntoVenta!=null && this.jInternalFrameOrderByFormaPagoPuntoVenta.getjTableDatosOrderBy()!=null) {
				this.inicializarActualizarBindingTablaOrderByFormaPagoPuntoVenta();
			}
			*/
								
			//DEFINIR RENDERERS
			tableColumn=this.jTableDatosFormaPagoPuntoVenta.getColumnModel().getColumn(Funciones2.getColumnIndexByName(this.jTableDatosFormaPagoPuntoVenta,Constantes2.S_SELECCIONAR));
			//tableColumn.addPropertyChangeListener(new FormaPagoPuntoVentaPropertyChangeListener());
			tableColumn.setCellRenderer(new BooleanRenderer(true,"Seleccionar "+FormaPagoPuntoVentaConstantesFunciones.SCLASSWEBTITULO,formapagopuntoventaConstantesFunciones.resaltarSeleccionarFormaPagoPuntoVenta,iSizeTabla,true,false,"","",this));
			tableColumn.setCellEditor(new BooleanEditorRenderer(true,"Seleccionar "+FormaPagoPuntoVentaConstantesFunciones.SCLASSWEBTITULO,formapagopuntoventaConstantesFunciones.resaltarSeleccionarFormaPagoPuntoVenta,false,"","",this));			
			
			tableColumn.setPreferredWidth(50); 	 
			tableColumn.setWidth(50); 	 
			tableColumn.setMinWidth(50); 
			tableColumn.setMaxWidth(50); 
			
			this.iWidthTableDefinicion+=50;
			
			


			tableColumn=this.jTableDatosFormaPagoPuntoVenta.getColumnModel().getColumn(Funciones2.getColumnIndexByName(this.jTableDatosFormaPagoPuntoVenta,FormaPagoPuntoVentaConstantesFunciones.LABEL_ID));

		if(this.formapagopuntoventaConstantesFunciones.mostraridFormaPagoPuntoVenta && Funciones2.permiteMostarParaBusqueda(this.esParaBusquedaForeignKey,FormaPagoPuntoVentaConstantesFunciones.LABEL_ID,false,iCountNumeroColumnasNormal++,iCountNumeroColumnasFk)) {
			tableColumn.setCellRenderer(new TextFieldRenderer(this.formapagopuntoventaConstantesFunciones.resaltaridFormaPagoPuntoVenta,this.formapagopuntoventaConstantesFunciones.activaridFormaPagoPuntoVenta,iSizeTabla,this,true,"idFormaPagoPuntoVenta","BASICO"));
			tableColumn.setCellEditor(new TextFieldEditorRenderer(this.formapagopuntoventaConstantesFunciones.resaltaridFormaPagoPuntoVenta,this.formapagopuntoventaConstantesFunciones.activaridFormaPagoPuntoVenta,this,true,"idFormaPagoPuntoVenta","BASICO",false));

			tableColumn.setPreferredWidth(50);
			tableColumn.setWidth(50);
			tableColumn.setMinWidth(50);
			tableColumn.setMaxWidth(50);

			this.iWidthTableDefinicion+=50;
		} else {
			Funciones2.setTableColumnOcultar(tableColumn);
		}


			tableColumn=this.jTableDatosFormaPagoPuntoVenta.getColumnModel().getColumn(Funciones2.getColumnIndexByName(this.jTableDatosFormaPagoPuntoVenta,FormaPagoPuntoVentaConstantesFunciones.LABEL_IDEMPRESA));

		if(this.formapagopuntoventaConstantesFunciones.mostrarid_empresaFormaPagoPuntoVenta && Funciones2.permiteMostarParaBusqueda(this.esParaBusquedaForeignKey,FormaPagoPuntoVentaConstantesFunciones.LABEL_IDEMPRESA,true,iCountNumeroColumnasNormal,iCountNumeroColumnasFk++) && Constantes.ISDEVELOPING) {
			tableColumn.setCellRenderer(new EmpresaTableCell(this.empresasForeignKey,this.formapagopuntoventaConstantesFunciones.resaltarid_empresaFormaPagoPuntoVenta,this,this.formapagopuntoventaConstantesFunciones.activarid_empresaFormaPagoPuntoVenta,iSizeTabla));
			tableColumn.setCellEditor(new EmpresaTableCell(this.empresasForeignKey,this.formapagopuntoventaConstantesFunciones.resaltarid_empresaFormaPagoPuntoVenta,this,this.formapagopuntoventaConstantesFunciones.activarid_empresaFormaPagoPuntoVenta,false,"id_empresaFormaPagoPuntoVenta","GLOBAL"));

			tableColumn.setPreferredWidth(Constantes.ISWING_ANCHO_COLUMNA + FuncionesSwing.getValorProporcion(Constantes.ISWING_ANCHO_CONTROL,0));
			tableColumn.setWidth(Constantes.ISWING_ANCHO_COLUMNA + FuncionesSwing.getValorProporcion(Constantes.ISWING_ANCHO_CONTROL,0));
			tableColumn.setMinWidth(Constantes.ISWING_ANCHO_COLUMNA + FuncionesSwing.getValorProporcion(Constantes.ISWING_ANCHO_CONTROL,0));
			tableColumn.setMaxWidth(Constantes.ISWING_ANCHO_COLUMNA + FuncionesSwing.getValorProporcion(Constantes.ISWING_ANCHO_CONTROL,0));

			this.iWidthTableDefinicion+=Constantes.ISWING_ANCHO_COLUMNA + FuncionesSwing.getValorProporcion(Constantes.ISWING_ANCHO_CONTROL,0);
			//tableColumn.addPropertyChangeListener(new FormaPagoPuntoVentaPropertyChangeListener());
		} else {
			Funciones2.setTableColumnOcultar(tableColumn);
		}


			tableColumn=this.jTableDatosFormaPagoPuntoVenta.getColumnModel().getColumn(Funciones2.getColumnIndexByName(this.jTableDatosFormaPagoPuntoVenta,FormaPagoPuntoVentaConstantesFunciones.LABEL_IDSUCURSAL));

		if(this.formapagopuntoventaConstantesFunciones.mostrarid_sucursalFormaPagoPuntoVenta && Funciones2.permiteMostarParaBusqueda(this.esParaBusquedaForeignKey,FormaPagoPuntoVentaConstantesFunciones.LABEL_IDSUCURSAL,true,iCountNumeroColumnasNormal,iCountNumeroColumnasFk++) && Constantes.ISDEVELOPING) {
			tableColumn.setCellRenderer(new SucursalTableCell(this.sucursalsForeignKey,this.formapagopuntoventaConstantesFunciones.resaltarid_sucursalFormaPagoPuntoVenta,this,this.formapagopuntoventaConstantesFunciones.activarid_sucursalFormaPagoPuntoVenta,iSizeTabla));
			tableColumn.setCellEditor(new SucursalTableCell(this.sucursalsForeignKey,this.formapagopuntoventaConstantesFunciones.resaltarid_sucursalFormaPagoPuntoVenta,this,this.formapagopuntoventaConstantesFunciones.activarid_sucursalFormaPagoPuntoVenta,false,"id_sucursalFormaPagoPuntoVenta","GLOBAL"));

			tableColumn.setPreferredWidth(Constantes.ISWING_ANCHO_COLUMNA + FuncionesSwing.getValorProporcion(Constantes.ISWING_ANCHO_CONTROL,0));
			tableColumn.setWidth(Constantes.ISWING_ANCHO_COLUMNA + FuncionesSwing.getValorProporcion(Constantes.ISWING_ANCHO_CONTROL,0));
			tableColumn.setMinWidth(Constantes.ISWING_ANCHO_COLUMNA + FuncionesSwing.getValorProporcion(Constantes.ISWING_ANCHO_CONTROL,0));
			tableColumn.setMaxWidth(Constantes.ISWING_ANCHO_COLUMNA + FuncionesSwing.getValorProporcion(Constantes.ISWING_ANCHO_CONTROL,0));

			this.iWidthTableDefinicion+=Constantes.ISWING_ANCHO_COLUMNA + FuncionesSwing.getValorProporcion(Constantes.ISWING_ANCHO_CONTROL,0);
			//tableColumn.addPropertyChangeListener(new FormaPagoPuntoVentaPropertyChangeListener());
		} else {
			Funciones2.setTableColumnOcultar(tableColumn);
		}


			tableColumn=this.jTableDatosFormaPagoPuntoVenta.getColumnModel().getColumn(Funciones2.getColumnIndexByName(this.jTableDatosFormaPagoPuntoVenta,FormaPagoPuntoVentaConstantesFunciones.LABEL_IDEJERCICIO));

		if(this.formapagopuntoventaConstantesFunciones.mostrarid_ejercicioFormaPagoPuntoVenta && Funciones2.permiteMostarParaBusqueda(this.esParaBusquedaForeignKey,FormaPagoPuntoVentaConstantesFunciones.LABEL_IDEJERCICIO,true,iCountNumeroColumnasNormal,iCountNumeroColumnasFk++) && Constantes.ISDEVELOPING) {
			tableColumn.setCellRenderer(new EjercicioTableCell(this.ejerciciosForeignKey,this.formapagopuntoventaConstantesFunciones.resaltarid_ejercicioFormaPagoPuntoVenta,this,this.formapagopuntoventaConstantesFunciones.activarid_ejercicioFormaPagoPuntoVenta,iSizeTabla));
			tableColumn.setCellEditor(new EjercicioTableCell(this.ejerciciosForeignKey,this.formapagopuntoventaConstantesFunciones.resaltarid_ejercicioFormaPagoPuntoVenta,this,this.formapagopuntoventaConstantesFunciones.activarid_ejercicioFormaPagoPuntoVenta,false,"id_ejercicioFormaPagoPuntoVenta","GLOBAL"));

			tableColumn.setPreferredWidth(Constantes.ISWING_ANCHO_COLUMNA + FuncionesSwing.getValorProporcion(Constantes.ISWING_ANCHO_CONTROL,0));
			tableColumn.setWidth(Constantes.ISWING_ANCHO_COLUMNA + FuncionesSwing.getValorProporcion(Constantes.ISWING_ANCHO_CONTROL,0));
			tableColumn.setMinWidth(Constantes.ISWING_ANCHO_COLUMNA + FuncionesSwing.getValorProporcion(Constantes.ISWING_ANCHO_CONTROL,0));
			tableColumn.setMaxWidth(Constantes.ISWING_ANCHO_COLUMNA + FuncionesSwing.getValorProporcion(Constantes.ISWING_ANCHO_CONTROL,0));

			this.iWidthTableDefinicion+=Constantes.ISWING_ANCHO_COLUMNA + FuncionesSwing.getValorProporcion(Constantes.ISWING_ANCHO_CONTROL,0);
			//tableColumn.addPropertyChangeListener(new FormaPagoPuntoVentaPropertyChangeListener());
		} else {
			Funciones2.setTableColumnOcultar(tableColumn);
		}


			tableColumn=this.jTableDatosFormaPagoPuntoVenta.getColumnModel().getColumn(Funciones2.getColumnIndexByName(this.jTableDatosFormaPagoPuntoVenta,FormaPagoPuntoVentaConstantesFunciones.LABEL_IDPERIODO));

		if(this.formapagopuntoventaConstantesFunciones.mostrarid_periodoFormaPagoPuntoVenta && Funciones2.permiteMostarParaBusqueda(this.esParaBusquedaForeignKey,FormaPagoPuntoVentaConstantesFunciones.LABEL_IDPERIODO,true,iCountNumeroColumnasNormal,iCountNumeroColumnasFk++) && Constantes.ISDEVELOPING) {
			tableColumn.setCellRenderer(new PeriodoTableCell(this.periodosForeignKey,this.formapagopuntoventaConstantesFunciones.resaltarid_periodoFormaPagoPuntoVenta,this,this.formapagopuntoventaConstantesFunciones.activarid_periodoFormaPagoPuntoVenta,iSizeTabla));
			tableColumn.setCellEditor(new PeriodoTableCell(this.periodosForeignKey,this.formapagopuntoventaConstantesFunciones.resaltarid_periodoFormaPagoPuntoVenta,this,this.formapagopuntoventaConstantesFunciones.activarid_periodoFormaPagoPuntoVenta,false,"id_periodoFormaPagoPuntoVenta","GLOBAL"));

			tableColumn.setPreferredWidth(Constantes.ISWING_ANCHO_COLUMNA + FuncionesSwing.getValorProporcion(Constantes.ISWING_ANCHO_CONTROL,0));
			tableColumn.setWidth(Constantes.ISWING_ANCHO_COLUMNA + FuncionesSwing.getValorProporcion(Constantes.ISWING_ANCHO_CONTROL,0));
			tableColumn.setMinWidth(Constantes.ISWING_ANCHO_COLUMNA + FuncionesSwing.getValorProporcion(Constantes.ISWING_ANCHO_CONTROL,0));
			tableColumn.setMaxWidth(Constantes.ISWING_ANCHO_COLUMNA + FuncionesSwing.getValorProporcion(Constantes.ISWING_ANCHO_CONTROL,0));

			this.iWidthTableDefinicion+=Constantes.ISWING_ANCHO_COLUMNA + FuncionesSwing.getValorProporcion(Constantes.ISWING_ANCHO_CONTROL,0);
			//tableColumn.addPropertyChangeListener(new FormaPagoPuntoVentaPropertyChangeListener());
		} else {
			Funciones2.setTableColumnOcultar(tableColumn);
		}


			tableColumn=this.jTableDatosFormaPagoPuntoVenta.getColumnModel().getColumn(Funciones2.getColumnIndexByName(this.jTableDatosFormaPagoPuntoVenta,FormaPagoPuntoVentaConstantesFunciones.LABEL_IDFACTURAPUNTOVENTA));

		if(this.formapagopuntoventaConstantesFunciones.mostrarid_factura_punto_ventaFormaPagoPuntoVenta && Funciones2.permiteMostarParaBusqueda(this.esParaBusquedaForeignKey,FormaPagoPuntoVentaConstantesFunciones.LABEL_IDFACTURAPUNTOVENTA,true,iCountNumeroColumnasNormal,iCountNumeroColumnasFk++)) {
			tableColumn.setCellRenderer(new FacturaPuntoVentaTableCell(this.facturapuntoventasForeignKey,this.formapagopuntoventaConstantesFunciones.resaltarid_factura_punto_ventaFormaPagoPuntoVenta,this,this.formapagopuntoventaConstantesFunciones.activarid_factura_punto_ventaFormaPagoPuntoVenta,iSizeTabla));
			tableColumn.setCellEditor(new FacturaPuntoVentaTableCell(this.facturapuntoventasForeignKey,this.formapagopuntoventaConstantesFunciones.resaltarid_factura_punto_ventaFormaPagoPuntoVenta,this,this.formapagopuntoventaConstantesFunciones.activarid_factura_punto_ventaFormaPagoPuntoVenta,true,"id_factura_punto_ventaFormaPagoPuntoVenta","BASICO"));

			tableColumn.setPreferredWidth(Constantes.ISWING_ANCHO_COLUMNA + FuncionesSwing.getValorProporcion(Constantes.ISWING_ANCHO_CONTROL,0));
			tableColumn.setWidth(Constantes.ISWING_ANCHO_COLUMNA + FuncionesSwing.getValorProporcion(Constantes.ISWING_ANCHO_CONTROL,0));
			tableColumn.setMinWidth(Constantes.ISWING_ANCHO_COLUMNA + FuncionesSwing.getValorProporcion(Constantes.ISWING_ANCHO_CONTROL,0));
			tableColumn.setMaxWidth(Constantes.ISWING_ANCHO_COLUMNA + FuncionesSwing.getValorProporcion(Constantes.ISWING_ANCHO_CONTROL,0));

			this.iWidthTableDefinicion+=Constantes.ISWING_ANCHO_COLUMNA + FuncionesSwing.getValorProporcion(Constantes.ISWING_ANCHO_CONTROL,0);
			//tableColumn.addPropertyChangeListener(new FormaPagoPuntoVentaPropertyChangeListener());
		} else {
			Funciones2.setTableColumnOcultar(tableColumn);
		}


			tableColumn=this.jTableDatosFormaPagoPuntoVenta.getColumnModel().getColumn(Funciones2.getColumnIndexByName(this.jTableDatosFormaPagoPuntoVenta,FormaPagoPuntoVentaConstantesFunciones.LABEL_IDTIPOFORMAPAGO));

		if(this.formapagopuntoventaConstantesFunciones.mostrarid_tipo_forma_pagoFormaPagoPuntoVenta && Funciones2.permiteMostarParaBusqueda(this.esParaBusquedaForeignKey,FormaPagoPuntoVentaConstantesFunciones.LABEL_IDTIPOFORMAPAGO,true,iCountNumeroColumnasNormal,iCountNumeroColumnasFk++)) {
			tableColumn.setCellRenderer(new TipoFormaPagoTableCell(this.tipoformapagosForeignKey,this.formapagopuntoventaConstantesFunciones.resaltarid_tipo_forma_pagoFormaPagoPuntoVenta,this,this.formapagopuntoventaConstantesFunciones.activarid_tipo_forma_pagoFormaPagoPuntoVenta,iSizeTabla));
			tableColumn.setCellEditor(new TipoFormaPagoTableCell(this.tipoformapagosForeignKey,this.formapagopuntoventaConstantesFunciones.resaltarid_tipo_forma_pagoFormaPagoPuntoVenta,this,this.formapagopuntoventaConstantesFunciones.activarid_tipo_forma_pagoFormaPagoPuntoVenta,true,"id_tipo_forma_pagoFormaPagoPuntoVenta","BASICO-CON_EVENT_CHANGE"));

			tableColumn.setPreferredWidth(Constantes.ISWING_ANCHO_COLUMNA + FuncionesSwing.getValorProporcion(Constantes.ISWING_ANCHO_CONTROL,0));
			tableColumn.setWidth(Constantes.ISWING_ANCHO_COLUMNA + FuncionesSwing.getValorProporcion(Constantes.ISWING_ANCHO_CONTROL,0));
			tableColumn.setMinWidth(Constantes.ISWING_ANCHO_COLUMNA + FuncionesSwing.getValorProporcion(Constantes.ISWING_ANCHO_CONTROL,0));
			tableColumn.setMaxWidth(Constantes.ISWING_ANCHO_COLUMNA + FuncionesSwing.getValorProporcion(Constantes.ISWING_ANCHO_CONTROL,0));

			this.iWidthTableDefinicion+=Constantes.ISWING_ANCHO_COLUMNA + FuncionesSwing.getValorProporcion(Constantes.ISWING_ANCHO_CONTROL,0);
			//tableColumn.addPropertyChangeListener(new FormaPagoPuntoVentaPropertyChangeListener());
		} else {
			Funciones2.setTableColumnOcultar(tableColumn);
		}


			tableColumn=this.jTableDatosFormaPagoPuntoVenta.getColumnModel().getColumn(Funciones2.getColumnIndexByName(this.jTableDatosFormaPagoPuntoVenta,FormaPagoPuntoVentaConstantesFunciones.LABEL_PORCENTAJE));

		if(this.formapagopuntoventaConstantesFunciones.mostrarporcentajeFormaPagoPuntoVenta && Funciones2.permiteMostarParaBusqueda(this.esParaBusquedaForeignKey,FormaPagoPuntoVentaConstantesFunciones.LABEL_PORCENTAJE,false,iCountNumeroColumnasNormal++,iCountNumeroColumnasFk)) {
			tableColumn.setCellRenderer(new TextFieldRenderer(this.formapagopuntoventaConstantesFunciones.resaltarporcentajeFormaPagoPuntoVenta,this.formapagopuntoventaConstantesFunciones.activarporcentajeFormaPagoPuntoVenta,iSizeTabla,this,true,"porcentajeFormaPagoPuntoVenta","BASICO-CON_EVENT_CHANGE"));
			tableColumn.setCellEditor(new TextFieldEditorRenderer(this.formapagopuntoventaConstantesFunciones.resaltarporcentajeFormaPagoPuntoVenta,this.formapagopuntoventaConstantesFunciones.activarporcentajeFormaPagoPuntoVenta,this,true,"porcentajeFormaPagoPuntoVenta","BASICO-CON_EVENT_CHANGE",true));

			tableColumn.setPreferredWidth(Constantes.ISWING_ANCHO_COLUMNA);
			tableColumn.setWidth(Constantes.ISWING_ANCHO_COLUMNA);
			tableColumn.setMinWidth(Constantes.ISWING_ANCHO_COLUMNA);
			tableColumn.setMaxWidth(Constantes.ISWING_ANCHO_COLUMNA);

			this.iWidthTableDefinicion+=Constantes.ISWING_ANCHO_COLUMNA;
			//tableColumn.addPropertyChangeListener(new FormaPagoPuntoVentaPropertyChangeListener());
		} else {
			Funciones2.setTableColumnOcultar(tableColumn);
		}


			tableColumn=this.jTableDatosFormaPagoPuntoVenta.getColumnModel().getColumn(Funciones2.getColumnIndexByName(this.jTableDatosFormaPagoPuntoVenta,FormaPagoPuntoVentaConstantesFunciones.LABEL_VALOR));

		if(this.formapagopuntoventaConstantesFunciones.mostrarvalorFormaPagoPuntoVenta && Funciones2.permiteMostarParaBusqueda(this.esParaBusquedaForeignKey,FormaPagoPuntoVentaConstantesFunciones.LABEL_VALOR,false,iCountNumeroColumnasNormal++,iCountNumeroColumnasFk)) {
			tableColumn.setCellRenderer(new TextFieldRenderer(this.formapagopuntoventaConstantesFunciones.resaltarvalorFormaPagoPuntoVenta,this.formapagopuntoventaConstantesFunciones.activarvalorFormaPagoPuntoVenta,iSizeTabla,this,true,"valorFormaPagoPuntoVenta","BASICO-CON_EVENT_CHANGE"));
			tableColumn.setCellEditor(new TextFieldEditorRenderer(this.formapagopuntoventaConstantesFunciones.resaltarvalorFormaPagoPuntoVenta,this.formapagopuntoventaConstantesFunciones.activarvalorFormaPagoPuntoVenta,this,true,"valorFormaPagoPuntoVenta","BASICO-CON_EVENT_CHANGE",true));

			tableColumn.setPreferredWidth(Constantes.ISWING_ANCHO_COLUMNA);
			tableColumn.setWidth(Constantes.ISWING_ANCHO_COLUMNA);
			tableColumn.setMinWidth(Constantes.ISWING_ANCHO_COLUMNA);
			tableColumn.setMaxWidth(Constantes.ISWING_ANCHO_COLUMNA);

			this.iWidthTableDefinicion+=Constantes.ISWING_ANCHO_COLUMNA;
			//tableColumn.addPropertyChangeListener(new FormaPagoPuntoVentaPropertyChangeListener());
		} else {
			Funciones2.setTableColumnOcultar(tableColumn);
		}


			tableColumn=this.jTableDatosFormaPagoPuntoVenta.getColumnModel().getColumn(Funciones2.getColumnIndexByName(this.jTableDatosFormaPagoPuntoVenta,FormaPagoPuntoVentaConstantesFunciones.LABEL_FECHA));

		if(this.formapagopuntoventaConstantesFunciones.mostrarfechaFormaPagoPuntoVenta && Funciones2.permiteMostarParaBusqueda(this.esParaBusquedaForeignKey,FormaPagoPuntoVentaConstantesFunciones.LABEL_FECHA,false,iCountNumeroColumnasNormal++,iCountNumeroColumnasFk)) {
			tableColumn.setCellRenderer(new DateRenderer(this.formapagopuntoventaConstantesFunciones.resaltarfechaFormaPagoPuntoVenta,this.formapagopuntoventaConstantesFunciones.activarfechaFormaPagoPuntoVenta,iSizeTabla,this,true,"fechaFormaPagoPuntoVenta","BASICO"));
			tableColumn.setCellEditor(new DateEditorRenderer(this.formapagopuntoventaConstantesFunciones.resaltarfechaFormaPagoPuntoVenta,this.formapagopuntoventaConstantesFunciones.activarfechaFormaPagoPuntoVenta,this,true,"fechaFormaPagoPuntoVenta","BASICO"));

			tableColumn.setPreferredWidth(Constantes.ISWING_ANCHO_COLUMNA + FuncionesSwing.getValorProporcion(Constantes.ISWING_ANCHO_CONTROL,30));
			tableColumn.setWidth(Constantes.ISWING_ANCHO_COLUMNA + FuncionesSwing.getValorProporcion(Constantes.ISWING_ANCHO_CONTROL,30));
			tableColumn.setMinWidth(Constantes.ISWING_ANCHO_COLUMNA + FuncionesSwing.getValorProporcion(Constantes.ISWING_ANCHO_CONTROL,30));
			tableColumn.setMaxWidth(Constantes.ISWING_ANCHO_COLUMNA + FuncionesSwing.getValorProporcion(Constantes.ISWING_ANCHO_CONTROL,30));

			this.iWidthTableDefinicion+=Constantes.ISWING_ANCHO_COLUMNA + FuncionesSwing.getValorProporcion(Constantes.ISWING_ANCHO_CONTROL,30);
			//tableColumn.addPropertyChangeListener(new FormaPagoPuntoVentaPropertyChangeListener());
		} else {
			Funciones2.setTableColumnOcultar(tableColumn);
		}


			tableColumn=this.jTableDatosFormaPagoPuntoVenta.getColumnModel().getColumn(Funciones2.getColumnIndexByName(this.jTableDatosFormaPagoPuntoVenta,FormaPagoPuntoVentaConstantesFunciones.LABEL_DESCRIPCION));

		if(this.formapagopuntoventaConstantesFunciones.mostrardescripcionFormaPagoPuntoVenta && Funciones2.permiteMostarParaBusqueda(this.esParaBusquedaForeignKey,FormaPagoPuntoVentaConstantesFunciones.LABEL_DESCRIPCION,false,iCountNumeroColumnasNormal++,iCountNumeroColumnasFk)) {
			tableColumn.setCellRenderer(new LabelRenderer(this.formapagopuntoventaConstantesFunciones.resaltardescripcionFormaPagoPuntoVenta,this.formapagopuntoventaConstantesFunciones.activardescripcionFormaPagoPuntoVenta,iSizeTabla,this,true,"descripcionFormaPagoPuntoVenta","BASICO"));
			tableColumn.setCellEditor(new TextFieldEditorRenderer(this.formapagopuntoventaConstantesFunciones.resaltardescripcionFormaPagoPuntoVenta,this.formapagopuntoventaConstantesFunciones.activardescripcionFormaPagoPuntoVenta,this,true,"descripcionFormaPagoPuntoVenta","BASICO",false));

			tableColumn.setPreferredWidth(Constantes.ISWING_ANCHO_COLUMNA + FuncionesSwing.getValorProporcion(Constantes.ISWING_ANCHO_CONTROL,0));
			tableColumn.setWidth(Constantes.ISWING_ANCHO_COLUMNA + FuncionesSwing.getValorProporcion(Constantes.ISWING_ANCHO_CONTROL,0));
			tableColumn.setMinWidth(Constantes.ISWING_ANCHO_COLUMNA + FuncionesSwing.getValorProporcion(Constantes.ISWING_ANCHO_CONTROL,0));
			tableColumn.setMaxWidth(Constantes.ISWING_ANCHO_COLUMNA + FuncionesSwing.getValorProporcion(Constantes.ISWING_ANCHO_CONTROL,0));

			this.iWidthTableDefinicion+=Constantes.ISWING_ANCHO_COLUMNA + FuncionesSwing.getValorProporcion(Constantes.ISWING_ANCHO_CONTROL,0);
			//tableColumn.addPropertyChangeListener(new FormaPagoPuntoVentaPropertyChangeListener());
		} else {
			Funciones2.setTableColumnOcultar(tableColumn);
		}


			tableColumn=this.jTableDatosFormaPagoPuntoVenta.getColumnModel().getColumn(Funciones2.getColumnIndexByName(this.jTableDatosFormaPagoPuntoVenta,FormaPagoPuntoVentaConstantesFunciones.LABEL_FECHAINICIO));

		if(this.formapagopuntoventaConstantesFunciones.mostrarfecha_inicioFormaPagoPuntoVenta && Funciones2.permiteMostarParaBusqueda(this.esParaBusquedaForeignKey,FormaPagoPuntoVentaConstantesFunciones.LABEL_FECHAINICIO,false,iCountNumeroColumnasNormal++,iCountNumeroColumnasFk)) {
			tableColumn.setCellRenderer(new DateRenderer(this.formapagopuntoventaConstantesFunciones.resaltarfecha_inicioFormaPagoPuntoVenta,this.formapagopuntoventaConstantesFunciones.activarfecha_inicioFormaPagoPuntoVenta,iSizeTabla,this,true,"fecha_inicioFormaPagoPuntoVenta","BASICO"));
			tableColumn.setCellEditor(new DateEditorRenderer(this.formapagopuntoventaConstantesFunciones.resaltarfecha_inicioFormaPagoPuntoVenta,this.formapagopuntoventaConstantesFunciones.activarfecha_inicioFormaPagoPuntoVenta,this,true,"fecha_inicioFormaPagoPuntoVenta","BASICO"));

			tableColumn.setPreferredWidth(Constantes.ISWING_ANCHO_COLUMNA + FuncionesSwing.getValorProporcion(Constantes.ISWING_ANCHO_CONTROL,30));
			tableColumn.setWidth(Constantes.ISWING_ANCHO_COLUMNA + FuncionesSwing.getValorProporcion(Constantes.ISWING_ANCHO_CONTROL,30));
			tableColumn.setMinWidth(Constantes.ISWING_ANCHO_COLUMNA + FuncionesSwing.getValorProporcion(Constantes.ISWING_ANCHO_CONTROL,30));
			tableColumn.setMaxWidth(Constantes.ISWING_ANCHO_COLUMNA + FuncionesSwing.getValorProporcion(Constantes.ISWING_ANCHO_CONTROL,30));

			this.iWidthTableDefinicion+=Constantes.ISWING_ANCHO_COLUMNA + FuncionesSwing.getValorProporcion(Constantes.ISWING_ANCHO_CONTROL,30);
			//tableColumn.addPropertyChangeListener(new FormaPagoPuntoVentaPropertyChangeListener());
		} else {
			Funciones2.setTableColumnOcultar(tableColumn);
		}


			tableColumn=this.jTableDatosFormaPagoPuntoVenta.getColumnModel().getColumn(Funciones2.getColumnIndexByName(this.jTableDatosFormaPagoPuntoVenta,FormaPagoPuntoVentaConstantesFunciones.LABEL_NUMERODIASPLAZO));

		if(this.formapagopuntoventaConstantesFunciones.mostrarnumero_dias_plazoFormaPagoPuntoVenta && Funciones2.permiteMostarParaBusqueda(this.esParaBusquedaForeignKey,FormaPagoPuntoVentaConstantesFunciones.LABEL_NUMERODIASPLAZO,false,iCountNumeroColumnasNormal++,iCountNumeroColumnasFk)) {
			tableColumn.setCellRenderer(new TextFieldRenderer(this.formapagopuntoventaConstantesFunciones.resaltarnumero_dias_plazoFormaPagoPuntoVenta,this.formapagopuntoventaConstantesFunciones.activarnumero_dias_plazoFormaPagoPuntoVenta,iSizeTabla,this,true,"numero_dias_plazoFormaPagoPuntoVenta","BASICO-CON_EVENT_CHANGE"));
			tableColumn.setCellEditor(new TextFieldEditorRenderer(this.formapagopuntoventaConstantesFunciones.resaltarnumero_dias_plazoFormaPagoPuntoVenta,this.formapagopuntoventaConstantesFunciones.activarnumero_dias_plazoFormaPagoPuntoVenta,this,true,"numero_dias_plazoFormaPagoPuntoVenta","BASICO-CON_EVENT_CHANGE",true));

			tableColumn.setPreferredWidth(Constantes.ISWING_ANCHO_COLUMNA);
			tableColumn.setWidth(Constantes.ISWING_ANCHO_COLUMNA);
			tableColumn.setMinWidth(Constantes.ISWING_ANCHO_COLUMNA);
			tableColumn.setMaxWidth(Constantes.ISWING_ANCHO_COLUMNA);

			this.iWidthTableDefinicion+=Constantes.ISWING_ANCHO_COLUMNA;
			//tableColumn.addPropertyChangeListener(new FormaPagoPuntoVentaPropertyChangeListener());
		} else {
			Funciones2.setTableColumnOcultar(tableColumn);
		}


			tableColumn=this.jTableDatosFormaPagoPuntoVenta.getColumnModel().getColumn(Funciones2.getColumnIndexByName(this.jTableDatosFormaPagoPuntoVenta,FormaPagoPuntoVentaConstantesFunciones.LABEL_FECHAFIN));

		if(this.formapagopuntoventaConstantesFunciones.mostrarfecha_finFormaPagoPuntoVenta && Funciones2.permiteMostarParaBusqueda(this.esParaBusquedaForeignKey,FormaPagoPuntoVentaConstantesFunciones.LABEL_FECHAFIN,false,iCountNumeroColumnasNormal++,iCountNumeroColumnasFk)) {
			tableColumn.setCellRenderer(new DateRenderer(this.formapagopuntoventaConstantesFunciones.resaltarfecha_finFormaPagoPuntoVenta,this.formapagopuntoventaConstantesFunciones.activarfecha_finFormaPagoPuntoVenta,iSizeTabla,this,true,"fecha_finFormaPagoPuntoVenta","BASICO"));
			tableColumn.setCellEditor(new DateEditorRenderer(this.formapagopuntoventaConstantesFunciones.resaltarfecha_finFormaPagoPuntoVenta,this.formapagopuntoventaConstantesFunciones.activarfecha_finFormaPagoPuntoVenta,this,true,"fecha_finFormaPagoPuntoVenta","BASICO"));

			tableColumn.setPreferredWidth(Constantes.ISWING_ANCHO_COLUMNA + FuncionesSwing.getValorProporcion(Constantes.ISWING_ANCHO_CONTROL,30));
			tableColumn.setWidth(Constantes.ISWING_ANCHO_COLUMNA + FuncionesSwing.getValorProporcion(Constantes.ISWING_ANCHO_CONTROL,30));
			tableColumn.setMinWidth(Constantes.ISWING_ANCHO_COLUMNA + FuncionesSwing.getValorProporcion(Constantes.ISWING_ANCHO_CONTROL,30));
			tableColumn.setMaxWidth(Constantes.ISWING_ANCHO_COLUMNA + FuncionesSwing.getValorProporcion(Constantes.ISWING_ANCHO_CONTROL,30));

			this.iWidthTableDefinicion+=Constantes.ISWING_ANCHO_COLUMNA + FuncionesSwing.getValorProporcion(Constantes.ISWING_ANCHO_CONTROL,30);
			//tableColumn.addPropertyChangeListener(new FormaPagoPuntoVentaPropertyChangeListener());
		} else {
			Funciones2.setTableColumnOcultar(tableColumn);
		}


			tableColumn=this.jTableDatosFormaPagoPuntoVenta.getColumnModel().getColumn(Funciones2.getColumnIndexByName(this.jTableDatosFormaPagoPuntoVenta,FormaPagoPuntoVentaConstantesFunciones.LABEL_IDBANCO));

		if(this.formapagopuntoventaConstantesFunciones.mostrarid_bancoFormaPagoPuntoVenta && Funciones2.permiteMostarParaBusqueda(this.esParaBusquedaForeignKey,FormaPagoPuntoVentaConstantesFunciones.LABEL_IDBANCO,true,iCountNumeroColumnasNormal,iCountNumeroColumnasFk++)) {
			tableColumn.setCellRenderer(new BancoTableCell(this.bancosForeignKey,this.formapagopuntoventaConstantesFunciones.resaltarid_bancoFormaPagoPuntoVenta,this,this.formapagopuntoventaConstantesFunciones.activarid_bancoFormaPagoPuntoVenta,iSizeTabla));
			tableColumn.setCellEditor(new BancoTableCell(this.bancosForeignKey,this.formapagopuntoventaConstantesFunciones.resaltarid_bancoFormaPagoPuntoVenta,this,this.formapagopuntoventaConstantesFunciones.activarid_bancoFormaPagoPuntoVenta,true,"id_bancoFormaPagoPuntoVenta","BASICO"));

			tableColumn.setPreferredWidth(Constantes.ISWING_ANCHO_COLUMNA + FuncionesSwing.getValorProporcion(Constantes.ISWING_ANCHO_CONTROL,0));
			tableColumn.setWidth(Constantes.ISWING_ANCHO_COLUMNA + FuncionesSwing.getValorProporcion(Constantes.ISWING_ANCHO_CONTROL,0));
			tableColumn.setMinWidth(Constantes.ISWING_ANCHO_COLUMNA + FuncionesSwing.getValorProporcion(Constantes.ISWING_ANCHO_CONTROL,0));
			tableColumn.setMaxWidth(Constantes.ISWING_ANCHO_COLUMNA + FuncionesSwing.getValorProporcion(Constantes.ISWING_ANCHO_CONTROL,0));

			this.iWidthTableDefinicion+=Constantes.ISWING_ANCHO_COLUMNA + FuncionesSwing.getValorProporcion(Constantes.ISWING_ANCHO_CONTROL,0);
			//tableColumn.addPropertyChangeListener(new FormaPagoPuntoVentaPropertyChangeListener());
		} else {
			Funciones2.setTableColumnOcultar(tableColumn);
		}


			tableColumn=this.jTableDatosFormaPagoPuntoVenta.getColumnModel().getColumn(Funciones2.getColumnIndexByName(this.jTableDatosFormaPagoPuntoVenta,FormaPagoPuntoVentaConstantesFunciones.LABEL_IDCUENTABANCOPUNVEN));

		if(this.formapagopuntoventaConstantesFunciones.mostrarid_cuenta_banco_pun_venFormaPagoPuntoVenta && Funciones2.permiteMostarParaBusqueda(this.esParaBusquedaForeignKey,FormaPagoPuntoVentaConstantesFunciones.LABEL_IDCUENTABANCOPUNVEN,true,iCountNumeroColumnasNormal,iCountNumeroColumnasFk++)) {
			tableColumn.setCellRenderer(new CuentaBancoPunVenTableCell(this.cuentabancopunvensForeignKey,this.formapagopuntoventaConstantesFunciones.resaltarid_cuenta_banco_pun_venFormaPagoPuntoVenta,this,this.formapagopuntoventaConstantesFunciones.activarid_cuenta_banco_pun_venFormaPagoPuntoVenta,iSizeTabla));
			tableColumn.setCellEditor(new CuentaBancoPunVenTableCell(this.cuentabancopunvensForeignKey,this.formapagopuntoventaConstantesFunciones.resaltarid_cuenta_banco_pun_venFormaPagoPuntoVenta,this,this.formapagopuntoventaConstantesFunciones.activarid_cuenta_banco_pun_venFormaPagoPuntoVenta,true,"id_cuenta_banco_pun_venFormaPagoPuntoVenta","BASICO"));

			tableColumn.setPreferredWidth(Constantes.ISWING_ANCHO_COLUMNA + FuncionesSwing.getValorProporcion(Constantes.ISWING_ANCHO_CONTROL,0));
			tableColumn.setWidth(Constantes.ISWING_ANCHO_COLUMNA + FuncionesSwing.getValorProporcion(Constantes.ISWING_ANCHO_CONTROL,0));
			tableColumn.setMinWidth(Constantes.ISWING_ANCHO_COLUMNA + FuncionesSwing.getValorProporcion(Constantes.ISWING_ANCHO_CONTROL,0));
			tableColumn.setMaxWidth(Constantes.ISWING_ANCHO_COLUMNA + FuncionesSwing.getValorProporcion(Constantes.ISWING_ANCHO_CONTROL,0));

			this.iWidthTableDefinicion+=Constantes.ISWING_ANCHO_COLUMNA + FuncionesSwing.getValorProporcion(Constantes.ISWING_ANCHO_CONTROL,0);
			//tableColumn.addPropertyChangeListener(new FormaPagoPuntoVentaPropertyChangeListener());
		} else {
			Funciones2.setTableColumnOcultar(tableColumn);
		}


			tableColumn=this.jTableDatosFormaPagoPuntoVenta.getColumnModel().getColumn(Funciones2.getColumnIndexByName(this.jTableDatosFormaPagoPuntoVenta,FormaPagoPuntoVentaConstantesFunciones.LABEL_IDTIPORIESGOCHEQUE));

		if(this.formapagopuntoventaConstantesFunciones.mostrarid_tipo_riesgo_chequeFormaPagoPuntoVenta && Funciones2.permiteMostarParaBusqueda(this.esParaBusquedaForeignKey,FormaPagoPuntoVentaConstantesFunciones.LABEL_IDTIPORIESGOCHEQUE,true,iCountNumeroColumnasNormal,iCountNumeroColumnasFk++)) {
			tableColumn.setCellRenderer(new TipoRiesgoChequeTableCell(this.tiporiesgochequesForeignKey,this.formapagopuntoventaConstantesFunciones.resaltarid_tipo_riesgo_chequeFormaPagoPuntoVenta,this,this.formapagopuntoventaConstantesFunciones.activarid_tipo_riesgo_chequeFormaPagoPuntoVenta,iSizeTabla));
			tableColumn.setCellEditor(new TipoRiesgoChequeTableCell(this.tiporiesgochequesForeignKey,this.formapagopuntoventaConstantesFunciones.resaltarid_tipo_riesgo_chequeFormaPagoPuntoVenta,this,this.formapagopuntoventaConstantesFunciones.activarid_tipo_riesgo_chequeFormaPagoPuntoVenta,true,"id_tipo_riesgo_chequeFormaPagoPuntoVenta","BASICO"));

			tableColumn.setPreferredWidth(Constantes.ISWING_ANCHO_COLUMNA + FuncionesSwing.getValorProporcion(Constantes.ISWING_ANCHO_CONTROL,0));
			tableColumn.setWidth(Constantes.ISWING_ANCHO_COLUMNA + FuncionesSwing.getValorProporcion(Constantes.ISWING_ANCHO_CONTROL,0));
			tableColumn.setMinWidth(Constantes.ISWING_ANCHO_COLUMNA + FuncionesSwing.getValorProporcion(Constantes.ISWING_ANCHO_CONTROL,0));
			tableColumn.setMaxWidth(Constantes.ISWING_ANCHO_COLUMNA + FuncionesSwing.getValorProporcion(Constantes.ISWING_ANCHO_CONTROL,0));

			this.iWidthTableDefinicion+=Constantes.ISWING_ANCHO_COLUMNA + FuncionesSwing.getValorProporcion(Constantes.ISWING_ANCHO_CONTROL,0);
			//tableColumn.addPropertyChangeListener(new FormaPagoPuntoVentaPropertyChangeListener());
		} else {
			Funciones2.setTableColumnOcultar(tableColumn);
		}


			tableColumn=this.jTableDatosFormaPagoPuntoVenta.getColumnModel().getColumn(Funciones2.getColumnIndexByName(this.jTableDatosFormaPagoPuntoVenta,FormaPagoPuntoVentaConstantesFunciones.LABEL_NUMEROCUENTA));

		if(this.formapagopuntoventaConstantesFunciones.mostrarnumero_cuentaFormaPagoPuntoVenta && Funciones2.permiteMostarParaBusqueda(this.esParaBusquedaForeignKey,FormaPagoPuntoVentaConstantesFunciones.LABEL_NUMEROCUENTA,false,iCountNumeroColumnasNormal++,iCountNumeroColumnasFk)) {
			tableColumn.setCellRenderer(new LabelRenderer(this.formapagopuntoventaConstantesFunciones.resaltarnumero_cuentaFormaPagoPuntoVenta,this.formapagopuntoventaConstantesFunciones.activarnumero_cuentaFormaPagoPuntoVenta,iSizeTabla,this,true,"numero_cuentaFormaPagoPuntoVenta","BASICO"));
			tableColumn.setCellEditor(new TextFieldEditorRenderer(this.formapagopuntoventaConstantesFunciones.resaltarnumero_cuentaFormaPagoPuntoVenta,this.formapagopuntoventaConstantesFunciones.activarnumero_cuentaFormaPagoPuntoVenta,this,true,"numero_cuentaFormaPagoPuntoVenta","BASICO",false));

			tableColumn.setPreferredWidth(Constantes.ISWING_ANCHO_COLUMNA + FuncionesSwing.getValorProporcion(Constantes.ISWING_ANCHO_CONTROL,0));
			tableColumn.setWidth(Constantes.ISWING_ANCHO_COLUMNA + FuncionesSwing.getValorProporcion(Constantes.ISWING_ANCHO_CONTROL,0));
			tableColumn.setMinWidth(Constantes.ISWING_ANCHO_COLUMNA + FuncionesSwing.getValorProporcion(Constantes.ISWING_ANCHO_CONTROL,0));
			tableColumn.setMaxWidth(Constantes.ISWING_ANCHO_COLUMNA + FuncionesSwing.getValorProporcion(Constantes.ISWING_ANCHO_CONTROL,0));

			this.iWidthTableDefinicion+=Constantes.ISWING_ANCHO_COLUMNA + FuncionesSwing.getValorProporcion(Constantes.ISWING_ANCHO_CONTROL,0);
			//tableColumn.addPropertyChangeListener(new FormaPagoPuntoVentaPropertyChangeListener());
		} else {
			Funciones2.setTableColumnOcultar(tableColumn);
		}


			tableColumn=this.jTableDatosFormaPagoPuntoVenta.getColumnModel().getColumn(Funciones2.getColumnIndexByName(this.jTableDatosFormaPagoPuntoVenta,FormaPagoPuntoVentaConstantesFunciones.LABEL_NUMEROCHEQUE));

		if(this.formapagopuntoventaConstantesFunciones.mostrarnumero_chequeFormaPagoPuntoVenta && Funciones2.permiteMostarParaBusqueda(this.esParaBusquedaForeignKey,FormaPagoPuntoVentaConstantesFunciones.LABEL_NUMEROCHEQUE,false,iCountNumeroColumnasNormal++,iCountNumeroColumnasFk)) {
			tableColumn.setCellRenderer(new LabelRenderer(this.formapagopuntoventaConstantesFunciones.resaltarnumero_chequeFormaPagoPuntoVenta,this.formapagopuntoventaConstantesFunciones.activarnumero_chequeFormaPagoPuntoVenta,iSizeTabla,this,true,"numero_chequeFormaPagoPuntoVenta","BASICO"));
			tableColumn.setCellEditor(new TextFieldEditorRenderer(this.formapagopuntoventaConstantesFunciones.resaltarnumero_chequeFormaPagoPuntoVenta,this.formapagopuntoventaConstantesFunciones.activarnumero_chequeFormaPagoPuntoVenta,this,true,"numero_chequeFormaPagoPuntoVenta","BASICO",false));

			tableColumn.setPreferredWidth(Constantes.ISWING_ANCHO_COLUMNA + FuncionesSwing.getValorProporcion(Constantes.ISWING_ANCHO_CONTROL,0));
			tableColumn.setWidth(Constantes.ISWING_ANCHO_COLUMNA + FuncionesSwing.getValorProporcion(Constantes.ISWING_ANCHO_CONTROL,0));
			tableColumn.setMinWidth(Constantes.ISWING_ANCHO_COLUMNA + FuncionesSwing.getValorProporcion(Constantes.ISWING_ANCHO_CONTROL,0));
			tableColumn.setMaxWidth(Constantes.ISWING_ANCHO_COLUMNA + FuncionesSwing.getValorProporcion(Constantes.ISWING_ANCHO_CONTROL,0));

			this.iWidthTableDefinicion+=Constantes.ISWING_ANCHO_COLUMNA + FuncionesSwing.getValorProporcion(Constantes.ISWING_ANCHO_CONTROL,0);
			//tableColumn.addPropertyChangeListener(new FormaPagoPuntoVentaPropertyChangeListener());
		} else {
			Funciones2.setTableColumnOcultar(tableColumn);
		}


			tableColumn=this.jTableDatosFormaPagoPuntoVenta.getColumnModel().getColumn(Funciones2.getColumnIndexByName(this.jTableDatosFormaPagoPuntoVenta,FormaPagoPuntoVentaConstantesFunciones.LABEL_GIRADOR));

		if(this.formapagopuntoventaConstantesFunciones.mostrargiradorFormaPagoPuntoVenta && Funciones2.permiteMostarParaBusqueda(this.esParaBusquedaForeignKey,FormaPagoPuntoVentaConstantesFunciones.LABEL_GIRADOR,false,iCountNumeroColumnasNormal++,iCountNumeroColumnasFk)) {
			tableColumn.setCellRenderer(new LabelRenderer(this.formapagopuntoventaConstantesFunciones.resaltargiradorFormaPagoPuntoVenta,this.formapagopuntoventaConstantesFunciones.activargiradorFormaPagoPuntoVenta,iSizeTabla,this,true,"giradorFormaPagoPuntoVenta","BASICO"));
			tableColumn.setCellEditor(new TextFieldEditorRenderer(this.formapagopuntoventaConstantesFunciones.resaltargiradorFormaPagoPuntoVenta,this.formapagopuntoventaConstantesFunciones.activargiradorFormaPagoPuntoVenta,this,true,"giradorFormaPagoPuntoVenta","BASICO",false));

			tableColumn.setPreferredWidth(Constantes.ISWING_ANCHO_COLUMNA + FuncionesSwing.getValorProporcion(Constantes.ISWING_ANCHO_CONTROL,0));
			tableColumn.setWidth(Constantes.ISWING_ANCHO_COLUMNA + FuncionesSwing.getValorProporcion(Constantes.ISWING_ANCHO_CONTROL,0));
			tableColumn.setMinWidth(Constantes.ISWING_ANCHO_COLUMNA + FuncionesSwing.getValorProporcion(Constantes.ISWING_ANCHO_CONTROL,0));
			tableColumn.setMaxWidth(Constantes.ISWING_ANCHO_COLUMNA + FuncionesSwing.getValorProporcion(Constantes.ISWING_ANCHO_CONTROL,0));

			this.iWidthTableDefinicion+=Constantes.ISWING_ANCHO_COLUMNA + FuncionesSwing.getValorProporcion(Constantes.ISWING_ANCHO_CONTROL,0);
			//tableColumn.addPropertyChangeListener(new FormaPagoPuntoVentaPropertyChangeListener());
		} else {
			Funciones2.setTableColumnOcultar(tableColumn);
		}


			tableColumn=this.jTableDatosFormaPagoPuntoVenta.getColumnModel().getColumn(Funciones2.getColumnIndexByName(this.jTableDatosFormaPagoPuntoVenta,FormaPagoPuntoVentaConstantesFunciones.LABEL_IDBANCOTARJETA));

		if(this.formapagopuntoventaConstantesFunciones.mostrarid_banco_tarjetaFormaPagoPuntoVenta && Funciones2.permiteMostarParaBusqueda(this.esParaBusquedaForeignKey,FormaPagoPuntoVentaConstantesFunciones.LABEL_IDBANCOTARJETA,true,iCountNumeroColumnasNormal,iCountNumeroColumnasFk++)) {
			tableColumn.setCellRenderer(new BancoTableCell(this.bancotarjetasForeignKey,this.formapagopuntoventaConstantesFunciones.resaltarid_banco_tarjetaFormaPagoPuntoVenta,this,this.formapagopuntoventaConstantesFunciones.activarid_banco_tarjetaFormaPagoPuntoVenta,iSizeTabla));
			tableColumn.setCellEditor(new BancoTableCell(this.bancotarjetasForeignKey,this.formapagopuntoventaConstantesFunciones.resaltarid_banco_tarjetaFormaPagoPuntoVenta,this,this.formapagopuntoventaConstantesFunciones.activarid_banco_tarjetaFormaPagoPuntoVenta,true,"id_banco_tarjetaFormaPagoPuntoVenta","BASICO"));

			tableColumn.setPreferredWidth(Constantes.ISWING_ANCHO_COLUMNA + FuncionesSwing.getValorProporcion(Constantes.ISWING_ANCHO_CONTROL,0));
			tableColumn.setWidth(Constantes.ISWING_ANCHO_COLUMNA + FuncionesSwing.getValorProporcion(Constantes.ISWING_ANCHO_CONTROL,0));
			tableColumn.setMinWidth(Constantes.ISWING_ANCHO_COLUMNA + FuncionesSwing.getValorProporcion(Constantes.ISWING_ANCHO_CONTROL,0));
			tableColumn.setMaxWidth(Constantes.ISWING_ANCHO_COLUMNA + FuncionesSwing.getValorProporcion(Constantes.ISWING_ANCHO_CONTROL,0));

			this.iWidthTableDefinicion+=Constantes.ISWING_ANCHO_COLUMNA + FuncionesSwing.getValorProporcion(Constantes.ISWING_ANCHO_CONTROL,0);
			//tableColumn.addPropertyChangeListener(new FormaPagoPuntoVentaPropertyChangeListener());
		} else {
			Funciones2.setTableColumnOcultar(tableColumn);
		}


			tableColumn=this.jTableDatosFormaPagoPuntoVenta.getColumnModel().getColumn(Funciones2.getColumnIndexByName(this.jTableDatosFormaPagoPuntoVenta,FormaPagoPuntoVentaConstantesFunciones.LABEL_IDTARJETACREDITO));

		if(this.formapagopuntoventaConstantesFunciones.mostrarid_tarjeta_creditoFormaPagoPuntoVenta && Funciones2.permiteMostarParaBusqueda(this.esParaBusquedaForeignKey,FormaPagoPuntoVentaConstantesFunciones.LABEL_IDTARJETACREDITO,true,iCountNumeroColumnasNormal,iCountNumeroColumnasFk++)) {
			tableColumn.setCellRenderer(new TarjetaCreditoTableCell(this.tarjetacreditosForeignKey,this.formapagopuntoventaConstantesFunciones.resaltarid_tarjeta_creditoFormaPagoPuntoVenta,this,this.formapagopuntoventaConstantesFunciones.activarid_tarjeta_creditoFormaPagoPuntoVenta,iSizeTabla));
			tableColumn.setCellEditor(new TarjetaCreditoTableCell(this.tarjetacreditosForeignKey,this.formapagopuntoventaConstantesFunciones.resaltarid_tarjeta_creditoFormaPagoPuntoVenta,this,this.formapagopuntoventaConstantesFunciones.activarid_tarjeta_creditoFormaPagoPuntoVenta,true,"id_tarjeta_creditoFormaPagoPuntoVenta","BASICO"));

			tableColumn.setPreferredWidth(Constantes.ISWING_ANCHO_COLUMNA + FuncionesSwing.getValorProporcion(Constantes.ISWING_ANCHO_CONTROL,0));
			tableColumn.setWidth(Constantes.ISWING_ANCHO_COLUMNA + FuncionesSwing.getValorProporcion(Constantes.ISWING_ANCHO_CONTROL,0));
			tableColumn.setMinWidth(Constantes.ISWING_ANCHO_COLUMNA + FuncionesSwing.getValorProporcion(Constantes.ISWING_ANCHO_CONTROL,0));
			tableColumn.setMaxWidth(Constantes.ISWING_ANCHO_COLUMNA + FuncionesSwing.getValorProporcion(Constantes.ISWING_ANCHO_CONTROL,0));

			this.iWidthTableDefinicion+=Constantes.ISWING_ANCHO_COLUMNA + FuncionesSwing.getValorProporcion(Constantes.ISWING_ANCHO_CONTROL,0);
			//tableColumn.addPropertyChangeListener(new FormaPagoPuntoVentaPropertyChangeListener());
		} else {
			Funciones2.setTableColumnOcultar(tableColumn);
		}


			tableColumn=this.jTableDatosFormaPagoPuntoVenta.getColumnModel().getColumn(Funciones2.getColumnIndexByName(this.jTableDatosFormaPagoPuntoVenta,FormaPagoPuntoVentaConstantesFunciones.LABEL_IDTIPOINTERESTARJETA));

		if(this.formapagopuntoventaConstantesFunciones.mostrarid_tipo_interes_tarjetaFormaPagoPuntoVenta && Funciones2.permiteMostarParaBusqueda(this.esParaBusquedaForeignKey,FormaPagoPuntoVentaConstantesFunciones.LABEL_IDTIPOINTERESTARJETA,true,iCountNumeroColumnasNormal,iCountNumeroColumnasFk++)) {
			tableColumn.setCellRenderer(new TipoInteresTarjetaTableCell(this.tipointerestarjetasForeignKey,this.formapagopuntoventaConstantesFunciones.resaltarid_tipo_interes_tarjetaFormaPagoPuntoVenta,this,this.formapagopuntoventaConstantesFunciones.activarid_tipo_interes_tarjetaFormaPagoPuntoVenta,iSizeTabla));
			tableColumn.setCellEditor(new TipoInteresTarjetaTableCell(this.tipointerestarjetasForeignKey,this.formapagopuntoventaConstantesFunciones.resaltarid_tipo_interes_tarjetaFormaPagoPuntoVenta,this,this.formapagopuntoventaConstantesFunciones.activarid_tipo_interes_tarjetaFormaPagoPuntoVenta,true,"id_tipo_interes_tarjetaFormaPagoPuntoVenta","BASICO"));

			tableColumn.setPreferredWidth(Constantes.ISWING_ANCHO_COLUMNA + FuncionesSwing.getValorProporcion(Constantes.ISWING_ANCHO_CONTROL,0));
			tableColumn.setWidth(Constantes.ISWING_ANCHO_COLUMNA + FuncionesSwing.getValorProporcion(Constantes.ISWING_ANCHO_CONTROL,0));
			tableColumn.setMinWidth(Constantes.ISWING_ANCHO_COLUMNA + FuncionesSwing.getValorProporcion(Constantes.ISWING_ANCHO_CONTROL,0));
			tableColumn.setMaxWidth(Constantes.ISWING_ANCHO_COLUMNA + FuncionesSwing.getValorProporcion(Constantes.ISWING_ANCHO_CONTROL,0));

			this.iWidthTableDefinicion+=Constantes.ISWING_ANCHO_COLUMNA + FuncionesSwing.getValorProporcion(Constantes.ISWING_ANCHO_CONTROL,0);
			//tableColumn.addPropertyChangeListener(new FormaPagoPuntoVentaPropertyChangeListener());
		} else {
			Funciones2.setTableColumnOcultar(tableColumn);
		}


			tableColumn=this.jTableDatosFormaPagoPuntoVenta.getColumnModel().getColumn(Funciones2.getColumnIndexByName(this.jTableDatosFormaPagoPuntoVenta,FormaPagoPuntoVentaConstantesFunciones.LABEL_IDTIPOPAGOTARJETA));

		if(this.formapagopuntoventaConstantesFunciones.mostrarid_tipo_pago_tarjetaFormaPagoPuntoVenta && Funciones2.permiteMostarParaBusqueda(this.esParaBusquedaForeignKey,FormaPagoPuntoVentaConstantesFunciones.LABEL_IDTIPOPAGOTARJETA,true,iCountNumeroColumnasNormal,iCountNumeroColumnasFk++)) {
			tableColumn.setCellRenderer(new TipoPagoTarjetaTableCell(this.tipopagotarjetasForeignKey,this.formapagopuntoventaConstantesFunciones.resaltarid_tipo_pago_tarjetaFormaPagoPuntoVenta,this,this.formapagopuntoventaConstantesFunciones.activarid_tipo_pago_tarjetaFormaPagoPuntoVenta,iSizeTabla));
			tableColumn.setCellEditor(new TipoPagoTarjetaTableCell(this.tipopagotarjetasForeignKey,this.formapagopuntoventaConstantesFunciones.resaltarid_tipo_pago_tarjetaFormaPagoPuntoVenta,this,this.formapagopuntoventaConstantesFunciones.activarid_tipo_pago_tarjetaFormaPagoPuntoVenta,true,"id_tipo_pago_tarjetaFormaPagoPuntoVenta","BASICO"));

			tableColumn.setPreferredWidth(Constantes.ISWING_ANCHO_COLUMNA + FuncionesSwing.getValorProporcion(Constantes.ISWING_ANCHO_CONTROL,0));
			tableColumn.setWidth(Constantes.ISWING_ANCHO_COLUMNA + FuncionesSwing.getValorProporcion(Constantes.ISWING_ANCHO_CONTROL,0));
			tableColumn.setMinWidth(Constantes.ISWING_ANCHO_COLUMNA + FuncionesSwing.getValorProporcion(Constantes.ISWING_ANCHO_CONTROL,0));
			tableColumn.setMaxWidth(Constantes.ISWING_ANCHO_COLUMNA + FuncionesSwing.getValorProporcion(Constantes.ISWING_ANCHO_CONTROL,0));

			this.iWidthTableDefinicion+=Constantes.ISWING_ANCHO_COLUMNA + FuncionesSwing.getValorProporcion(Constantes.ISWING_ANCHO_CONTROL,0);
			//tableColumn.addPropertyChangeListener(new FormaPagoPuntoVentaPropertyChangeListener());
		} else {
			Funciones2.setTableColumnOcultar(tableColumn);
		}


			tableColumn=this.jTableDatosFormaPagoPuntoVenta.getColumnModel().getColumn(Funciones2.getColumnIndexByName(this.jTableDatosFormaPagoPuntoVenta,FormaPagoPuntoVentaConstantesFunciones.LABEL_IDCONEXION));

		if(this.formapagopuntoventaConstantesFunciones.mostrarid_conexionFormaPagoPuntoVenta && Funciones2.permiteMostarParaBusqueda(this.esParaBusquedaForeignKey,FormaPagoPuntoVentaConstantesFunciones.LABEL_IDCONEXION,true,iCountNumeroColumnasNormal,iCountNumeroColumnasFk++)) {
			tableColumn.setCellRenderer(new ConexionTableCell(this.conexionsForeignKey,this.formapagopuntoventaConstantesFunciones.resaltarid_conexionFormaPagoPuntoVenta,this,this.formapagopuntoventaConstantesFunciones.activarid_conexionFormaPagoPuntoVenta,iSizeTabla));
			tableColumn.setCellEditor(new ConexionTableCell(this.conexionsForeignKey,this.formapagopuntoventaConstantesFunciones.resaltarid_conexionFormaPagoPuntoVenta,this,this.formapagopuntoventaConstantesFunciones.activarid_conexionFormaPagoPuntoVenta,true,"id_conexionFormaPagoPuntoVenta","BASICO"));

			tableColumn.setPreferredWidth(Constantes.ISWING_ANCHO_COLUMNA + FuncionesSwing.getValorProporcion(Constantes.ISWING_ANCHO_CONTROL,0));
			tableColumn.setWidth(Constantes.ISWING_ANCHO_COLUMNA + FuncionesSwing.getValorProporcion(Constantes.ISWING_ANCHO_CONTROL,0));
			tableColumn.setMinWidth(Constantes.ISWING_ANCHO_COLUMNA + FuncionesSwing.getValorProporcion(Constantes.ISWING_ANCHO_CONTROL,0));
			tableColumn.setMaxWidth(Constantes.ISWING_ANCHO_COLUMNA + FuncionesSwing.getValorProporcion(Constantes.ISWING_ANCHO_CONTROL,0));

			this.iWidthTableDefinicion+=Constantes.ISWING_ANCHO_COLUMNA + FuncionesSwing.getValorProporcion(Constantes.ISWING_ANCHO_CONTROL,0);
			//tableColumn.addPropertyChangeListener(new FormaPagoPuntoVentaPropertyChangeListener());
		} else {
			Funciones2.setTableColumnOcultar(tableColumn);
		}


			tableColumn=this.jTableDatosFormaPagoPuntoVenta.getColumnModel().getColumn(Funciones2.getColumnIndexByName(this.jTableDatosFormaPagoPuntoVenta,FormaPagoPuntoVentaConstantesFunciones.LABEL_IDMES));

		if(this.formapagopuntoventaConstantesFunciones.mostrarid_mesFormaPagoPuntoVenta && Funciones2.permiteMostarParaBusqueda(this.esParaBusquedaForeignKey,FormaPagoPuntoVentaConstantesFunciones.LABEL_IDMES,true,iCountNumeroColumnasNormal,iCountNumeroColumnasFk++)) {
			tableColumn.setCellRenderer(new MesTableCell(this.messForeignKey,this.formapagopuntoventaConstantesFunciones.resaltarid_mesFormaPagoPuntoVenta,this,this.formapagopuntoventaConstantesFunciones.activarid_mesFormaPagoPuntoVenta,iSizeTabla));
			tableColumn.setCellEditor(new MesTableCell(this.messForeignKey,this.formapagopuntoventaConstantesFunciones.resaltarid_mesFormaPagoPuntoVenta,this,this.formapagopuntoventaConstantesFunciones.activarid_mesFormaPagoPuntoVenta,true,"id_mesFormaPagoPuntoVenta","BASICO"));

			tableColumn.setPreferredWidth(Constantes.ISWING_ANCHO_COLUMNA + FuncionesSwing.getValorProporcion(Constantes.ISWING_ANCHO_CONTROL,0));
			tableColumn.setWidth(Constantes.ISWING_ANCHO_COLUMNA + FuncionesSwing.getValorProporcion(Constantes.ISWING_ANCHO_CONTROL,0));
			tableColumn.setMinWidth(Constantes.ISWING_ANCHO_COLUMNA + FuncionesSwing.getValorProporcion(Constantes.ISWING_ANCHO_CONTROL,0));
			tableColumn.setMaxWidth(Constantes.ISWING_ANCHO_COLUMNA + FuncionesSwing.getValorProporcion(Constantes.ISWING_ANCHO_CONTROL,0));

			this.iWidthTableDefinicion+=Constantes.ISWING_ANCHO_COLUMNA + FuncionesSwing.getValorProporcion(Constantes.ISWING_ANCHO_CONTROL,0);
			//tableColumn.addPropertyChangeListener(new FormaPagoPuntoVentaPropertyChangeListener());
		} else {
			Funciones2.setTableColumnOcultar(tableColumn);
		}


			tableColumn=this.jTableDatosFormaPagoPuntoVenta.getColumnModel().getColumn(Funciones2.getColumnIndexByName(this.jTableDatosFormaPagoPuntoVenta,FormaPagoPuntoVentaConstantesFunciones.LABEL_NUMERO));

		if(this.formapagopuntoventaConstantesFunciones.mostrarnumeroFormaPagoPuntoVenta && Funciones2.permiteMostarParaBusqueda(this.esParaBusquedaForeignKey,FormaPagoPuntoVentaConstantesFunciones.LABEL_NUMERO,false,iCountNumeroColumnasNormal++,iCountNumeroColumnasFk)) {
			tableColumn.setCellRenderer(new LabelRenderer(this.formapagopuntoventaConstantesFunciones.resaltarnumeroFormaPagoPuntoVenta,this.formapagopuntoventaConstantesFunciones.activarnumeroFormaPagoPuntoVenta,iSizeTabla,this,true,"numeroFormaPagoPuntoVenta","BASICO"));
			tableColumn.setCellEditor(new TextFieldEditorRenderer(this.formapagopuntoventaConstantesFunciones.resaltarnumeroFormaPagoPuntoVenta,this.formapagopuntoventaConstantesFunciones.activarnumeroFormaPagoPuntoVenta,this,true,"numeroFormaPagoPuntoVenta","BASICO",false));

			tableColumn.setPreferredWidth(Constantes.ISWING_ANCHO_COLUMNA + FuncionesSwing.getValorProporcion(Constantes.ISWING_ANCHO_CONTROL,0));
			tableColumn.setWidth(Constantes.ISWING_ANCHO_COLUMNA + FuncionesSwing.getValorProporcion(Constantes.ISWING_ANCHO_CONTROL,0));
			tableColumn.setMinWidth(Constantes.ISWING_ANCHO_COLUMNA + FuncionesSwing.getValorProporcion(Constantes.ISWING_ANCHO_CONTROL,0));
			tableColumn.setMaxWidth(Constantes.ISWING_ANCHO_COLUMNA + FuncionesSwing.getValorProporcion(Constantes.ISWING_ANCHO_CONTROL,0));

			this.iWidthTableDefinicion+=Constantes.ISWING_ANCHO_COLUMNA + FuncionesSwing.getValorProporcion(Constantes.ISWING_ANCHO_CONTROL,0);
			//tableColumn.addPropertyChangeListener(new FormaPagoPuntoVentaPropertyChangeListener());
		} else {
			Funciones2.setTableColumnOcultar(tableColumn);
		}


			tableColumn=this.jTableDatosFormaPagoPuntoVenta.getColumnModel().getColumn(Funciones2.getColumnIndexByName(this.jTableDatosFormaPagoPuntoVenta,FormaPagoPuntoVentaConstantesFunciones.LABEL_TARJETAHABIENTE));

		if(this.formapagopuntoventaConstantesFunciones.mostrartarjeta_habienteFormaPagoPuntoVenta && Funciones2.permiteMostarParaBusqueda(this.esParaBusquedaForeignKey,FormaPagoPuntoVentaConstantesFunciones.LABEL_TARJETAHABIENTE,false,iCountNumeroColumnasNormal++,iCountNumeroColumnasFk)) {
			tableColumn.setCellRenderer(new LabelRenderer(this.formapagopuntoventaConstantesFunciones.resaltartarjeta_habienteFormaPagoPuntoVenta,this.formapagopuntoventaConstantesFunciones.activartarjeta_habienteFormaPagoPuntoVenta,iSizeTabla,this,true,"tarjeta_habienteFormaPagoPuntoVenta","BASICO"));
			tableColumn.setCellEditor(new TextFieldEditorRenderer(this.formapagopuntoventaConstantesFunciones.resaltartarjeta_habienteFormaPagoPuntoVenta,this.formapagopuntoventaConstantesFunciones.activartarjeta_habienteFormaPagoPuntoVenta,this,true,"tarjeta_habienteFormaPagoPuntoVenta","BASICO",false));

			tableColumn.setPreferredWidth(Constantes.ISWING_ANCHO_COLUMNA + FuncionesSwing.getValorProporcion(Constantes.ISWING_ANCHO_CONTROL,0));
			tableColumn.setWidth(Constantes.ISWING_ANCHO_COLUMNA + FuncionesSwing.getValorProporcion(Constantes.ISWING_ANCHO_CONTROL,0));
			tableColumn.setMinWidth(Constantes.ISWING_ANCHO_COLUMNA + FuncionesSwing.getValorProporcion(Constantes.ISWING_ANCHO_CONTROL,0));
			tableColumn.setMaxWidth(Constantes.ISWING_ANCHO_COLUMNA + FuncionesSwing.getValorProporcion(Constantes.ISWING_ANCHO_CONTROL,0));

			this.iWidthTableDefinicion+=Constantes.ISWING_ANCHO_COLUMNA + FuncionesSwing.getValorProporcion(Constantes.ISWING_ANCHO_CONTROL,0);
			//tableColumn.addPropertyChangeListener(new FormaPagoPuntoVentaPropertyChangeListener());
		} else {
			Funciones2.setTableColumnOcultar(tableColumn);
		}


			tableColumn=this.jTableDatosFormaPagoPuntoVenta.getColumnModel().getColumn(Funciones2.getColumnIndexByName(this.jTableDatosFormaPagoPuntoVenta,FormaPagoPuntoVentaConstantesFunciones.LABEL_AUTORIZACION));

		if(this.formapagopuntoventaConstantesFunciones.mostrarautorizacionFormaPagoPuntoVenta && Funciones2.permiteMostarParaBusqueda(this.esParaBusquedaForeignKey,FormaPagoPuntoVentaConstantesFunciones.LABEL_AUTORIZACION,false,iCountNumeroColumnasNormal++,iCountNumeroColumnasFk)) {
			tableColumn.setCellRenderer(new LabelRenderer(this.formapagopuntoventaConstantesFunciones.resaltarautorizacionFormaPagoPuntoVenta,this.formapagopuntoventaConstantesFunciones.activarautorizacionFormaPagoPuntoVenta,iSizeTabla,this,true,"autorizacionFormaPagoPuntoVenta","BASICO"));
			tableColumn.setCellEditor(new TextFieldEditorRenderer(this.formapagopuntoventaConstantesFunciones.resaltarautorizacionFormaPagoPuntoVenta,this.formapagopuntoventaConstantesFunciones.activarautorizacionFormaPagoPuntoVenta,this,true,"autorizacionFormaPagoPuntoVenta","BASICO",false));

			tableColumn.setPreferredWidth(Constantes.ISWING_ANCHO_COLUMNA + FuncionesSwing.getValorProporcion(Constantes.ISWING_ANCHO_CONTROL,0));
			tableColumn.setWidth(Constantes.ISWING_ANCHO_COLUMNA + FuncionesSwing.getValorProporcion(Constantes.ISWING_ANCHO_CONTROL,0));
			tableColumn.setMinWidth(Constantes.ISWING_ANCHO_COLUMNA + FuncionesSwing.getValorProporcion(Constantes.ISWING_ANCHO_CONTROL,0));
			tableColumn.setMaxWidth(Constantes.ISWING_ANCHO_COLUMNA + FuncionesSwing.getValorProporcion(Constantes.ISWING_ANCHO_CONTROL,0));

			this.iWidthTableDefinicion+=Constantes.ISWING_ANCHO_COLUMNA + FuncionesSwing.getValorProporcion(Constantes.ISWING_ANCHO_CONTROL,0);
			//tableColumn.addPropertyChangeListener(new FormaPagoPuntoVentaPropertyChangeListener());
		} else {
			Funciones2.setTableColumnOcultar(tableColumn);
		}


			tableColumn=this.jTableDatosFormaPagoPuntoVenta.getColumnModel().getColumn(Funciones2.getColumnIndexByName(this.jTableDatosFormaPagoPuntoVenta,FormaPagoPuntoVentaConstantesFunciones.LABEL_VOUCHER));

		if(this.formapagopuntoventaConstantesFunciones.mostrarvoucherFormaPagoPuntoVenta && Funciones2.permiteMostarParaBusqueda(this.esParaBusquedaForeignKey,FormaPagoPuntoVentaConstantesFunciones.LABEL_VOUCHER,false,iCountNumeroColumnasNormal++,iCountNumeroColumnasFk)) {
			tableColumn.setCellRenderer(new LabelRenderer(this.formapagopuntoventaConstantesFunciones.resaltarvoucherFormaPagoPuntoVenta,this.formapagopuntoventaConstantesFunciones.activarvoucherFormaPagoPuntoVenta,iSizeTabla,this,true,"voucherFormaPagoPuntoVenta","BASICO"));
			tableColumn.setCellEditor(new TextFieldEditorRenderer(this.formapagopuntoventaConstantesFunciones.resaltarvoucherFormaPagoPuntoVenta,this.formapagopuntoventaConstantesFunciones.activarvoucherFormaPagoPuntoVenta,this,true,"voucherFormaPagoPuntoVenta","BASICO",false));

			tableColumn.setPreferredWidth(Constantes.ISWING_ANCHO_COLUMNA + FuncionesSwing.getValorProporcion(Constantes.ISWING_ANCHO_CONTROL,0));
			tableColumn.setWidth(Constantes.ISWING_ANCHO_COLUMNA + FuncionesSwing.getValorProporcion(Constantes.ISWING_ANCHO_CONTROL,0));
			tableColumn.setMinWidth(Constantes.ISWING_ANCHO_COLUMNA + FuncionesSwing.getValorProporcion(Constantes.ISWING_ANCHO_CONTROL,0));
			tableColumn.setMaxWidth(Constantes.ISWING_ANCHO_COLUMNA + FuncionesSwing.getValorProporcion(Constantes.ISWING_ANCHO_CONTROL,0));

			this.iWidthTableDefinicion+=Constantes.ISWING_ANCHO_COLUMNA + FuncionesSwing.getValorProporcion(Constantes.ISWING_ANCHO_CONTROL,0);
			//tableColumn.addPropertyChangeListener(new FormaPagoPuntoVentaPropertyChangeListener());
		} else {
			Funciones2.setTableColumnOcultar(tableColumn);
		}


			tableColumn=this.jTableDatosFormaPagoPuntoVenta.getColumnModel().getColumn(Funciones2.getColumnIndexByName(this.jTableDatosFormaPagoPuntoVenta,FormaPagoPuntoVentaConstantesFunciones.LABEL_LOTE));

		if(this.formapagopuntoventaConstantesFunciones.mostrarloteFormaPagoPuntoVenta && Funciones2.permiteMostarParaBusqueda(this.esParaBusquedaForeignKey,FormaPagoPuntoVentaConstantesFunciones.LABEL_LOTE,false,iCountNumeroColumnasNormal++,iCountNumeroColumnasFk)) {
			tableColumn.setCellRenderer(new LabelRenderer(this.formapagopuntoventaConstantesFunciones.resaltarloteFormaPagoPuntoVenta,this.formapagopuntoventaConstantesFunciones.activarloteFormaPagoPuntoVenta,iSizeTabla,this,true,"loteFormaPagoPuntoVenta","BASICO"));
			tableColumn.setCellEditor(new TextFieldEditorRenderer(this.formapagopuntoventaConstantesFunciones.resaltarloteFormaPagoPuntoVenta,this.formapagopuntoventaConstantesFunciones.activarloteFormaPagoPuntoVenta,this,true,"loteFormaPagoPuntoVenta","BASICO",false));

			tableColumn.setPreferredWidth(Constantes.ISWING_ANCHO_COLUMNA + FuncionesSwing.getValorProporcion(Constantes.ISWING_ANCHO_CONTROL,0));
			tableColumn.setWidth(Constantes.ISWING_ANCHO_COLUMNA + FuncionesSwing.getValorProporcion(Constantes.ISWING_ANCHO_CONTROL,0));
			tableColumn.setMinWidth(Constantes.ISWING_ANCHO_COLUMNA + FuncionesSwing.getValorProporcion(Constantes.ISWING_ANCHO_CONTROL,0));
			tableColumn.setMaxWidth(Constantes.ISWING_ANCHO_COLUMNA + FuncionesSwing.getValorProporcion(Constantes.ISWING_ANCHO_CONTROL,0));

			this.iWidthTableDefinicion+=Constantes.ISWING_ANCHO_COLUMNA + FuncionesSwing.getValorProporcion(Constantes.ISWING_ANCHO_CONTROL,0);
			//tableColumn.addPropertyChangeListener(new FormaPagoPuntoVentaPropertyChangeListener());
		} else {
			Funciones2.setTableColumnOcultar(tableColumn);
		}


			tableColumn=this.jTableDatosFormaPagoPuntoVenta.getColumnModel().getColumn(Funciones2.getColumnIndexByName(this.jTableDatosFormaPagoPuntoVenta,FormaPagoPuntoVentaConstantesFunciones.LABEL_CUOTA));

		if(this.formapagopuntoventaConstantesFunciones.mostrarcuotaFormaPagoPuntoVenta && Funciones2.permiteMostarParaBusqueda(this.esParaBusquedaForeignKey,FormaPagoPuntoVentaConstantesFunciones.LABEL_CUOTA,false,iCountNumeroColumnasNormal++,iCountNumeroColumnasFk)) {
			tableColumn.setCellRenderer(new TextFieldRenderer(this.formapagopuntoventaConstantesFunciones.resaltarcuotaFormaPagoPuntoVenta,this.formapagopuntoventaConstantesFunciones.activarcuotaFormaPagoPuntoVenta,iSizeTabla,this,true,"cuotaFormaPagoPuntoVenta","BASICO"));
			tableColumn.setCellEditor(new TextFieldEditorRenderer(this.formapagopuntoventaConstantesFunciones.resaltarcuotaFormaPagoPuntoVenta,this.formapagopuntoventaConstantesFunciones.activarcuotaFormaPagoPuntoVenta,this,true,"cuotaFormaPagoPuntoVenta","BASICO",false));

			tableColumn.setPreferredWidth(Constantes.ISWING_ANCHO_COLUMNA);
			tableColumn.setWidth(Constantes.ISWING_ANCHO_COLUMNA);
			tableColumn.setMinWidth(Constantes.ISWING_ANCHO_COLUMNA);
			tableColumn.setMaxWidth(Constantes.ISWING_ANCHO_COLUMNA);

			this.iWidthTableDefinicion+=Constantes.ISWING_ANCHO_COLUMNA;
			//tableColumn.addPropertyChangeListener(new FormaPagoPuntoVentaPropertyChangeListener());
		} else {
			Funciones2.setTableColumnOcultar(tableColumn);
		}


			tableColumn=this.jTableDatosFormaPagoPuntoVenta.getColumnModel().getColumn(Funciones2.getColumnIndexByName(this.jTableDatosFormaPagoPuntoVenta,FormaPagoPuntoVentaConstantesFunciones.LABEL_VALORRETENCION));

		if(this.formapagopuntoventaConstantesFunciones.mostrarvalor_retencionFormaPagoPuntoVenta && Funciones2.permiteMostarParaBusqueda(this.esParaBusquedaForeignKey,FormaPagoPuntoVentaConstantesFunciones.LABEL_VALORRETENCION,false,iCountNumeroColumnasNormal++,iCountNumeroColumnasFk)) {
			tableColumn.setCellRenderer(new TextFieldRenderer(this.formapagopuntoventaConstantesFunciones.resaltarvalor_retencionFormaPagoPuntoVenta,this.formapagopuntoventaConstantesFunciones.activarvalor_retencionFormaPagoPuntoVenta,iSizeTabla,this,true,"valor_retencionFormaPagoPuntoVenta","BASICO"));
			tableColumn.setCellEditor(new TextFieldEditorRenderer(this.formapagopuntoventaConstantesFunciones.resaltarvalor_retencionFormaPagoPuntoVenta,this.formapagopuntoventaConstantesFunciones.activarvalor_retencionFormaPagoPuntoVenta,this,true,"valor_retencionFormaPagoPuntoVenta","BASICO",false));

			tableColumn.setPreferredWidth(Constantes.ISWING_ANCHO_COLUMNA);
			tableColumn.setWidth(Constantes.ISWING_ANCHO_COLUMNA);
			tableColumn.setMinWidth(Constantes.ISWING_ANCHO_COLUMNA);
			tableColumn.setMaxWidth(Constantes.ISWING_ANCHO_COLUMNA);

			this.iWidthTableDefinicion+=Constantes.ISWING_ANCHO_COLUMNA;
			//tableColumn.addPropertyChangeListener(new FormaPagoPuntoVentaPropertyChangeListener());
		} else {
			Funciones2.setTableColumnOcultar(tableColumn);
		}


			tableColumn=this.jTableDatosFormaPagoPuntoVenta.getColumnModel().getColumn(Funciones2.getColumnIndexByName(this.jTableDatosFormaPagoPuntoVenta,FormaPagoPuntoVentaConstantesFunciones.LABEL_VALORCOMISION));

		if(this.formapagopuntoventaConstantesFunciones.mostrarvalor_comisionFormaPagoPuntoVenta && Funciones2.permiteMostarParaBusqueda(this.esParaBusquedaForeignKey,FormaPagoPuntoVentaConstantesFunciones.LABEL_VALORCOMISION,false,iCountNumeroColumnasNormal++,iCountNumeroColumnasFk)) {
			tableColumn.setCellRenderer(new TextFieldRenderer(this.formapagopuntoventaConstantesFunciones.resaltarvalor_comisionFormaPagoPuntoVenta,this.formapagopuntoventaConstantesFunciones.activarvalor_comisionFormaPagoPuntoVenta,iSizeTabla,this,true,"valor_comisionFormaPagoPuntoVenta","BASICO"));
			tableColumn.setCellEditor(new TextFieldEditorRenderer(this.formapagopuntoventaConstantesFunciones.resaltarvalor_comisionFormaPagoPuntoVenta,this.formapagopuntoventaConstantesFunciones.activarvalor_comisionFormaPagoPuntoVenta,this,true,"valor_comisionFormaPagoPuntoVenta","BASICO",false));

			tableColumn.setPreferredWidth(Constantes.ISWING_ANCHO_COLUMNA);
			tableColumn.setWidth(Constantes.ISWING_ANCHO_COLUMNA);
			tableColumn.setMinWidth(Constantes.ISWING_ANCHO_COLUMNA);
			tableColumn.setMaxWidth(Constantes.ISWING_ANCHO_COLUMNA);

			this.iWidthTableDefinicion+=Constantes.ISWING_ANCHO_COLUMNA;
			//tableColumn.addPropertyChangeListener(new FormaPagoPuntoVentaPropertyChangeListener());
		} else {
			Funciones2.setTableColumnOcultar(tableColumn);
		}


			tableColumn=this.jTableDatosFormaPagoPuntoVenta.getColumnModel().getColumn(Funciones2.getColumnIndexByName(this.jTableDatosFormaPagoPuntoVenta,FormaPagoPuntoVentaConstantesFunciones.LABEL_VALORCALCULADO));

		if(this.formapagopuntoventaConstantesFunciones.mostrarvalor_calculadoFormaPagoPuntoVenta && Funciones2.permiteMostarParaBusqueda(this.esParaBusquedaForeignKey,FormaPagoPuntoVentaConstantesFunciones.LABEL_VALORCALCULADO,false,iCountNumeroColumnasNormal++,iCountNumeroColumnasFk)) {
			tableColumn.setCellRenderer(new TextFieldRenderer(this.formapagopuntoventaConstantesFunciones.resaltarvalor_calculadoFormaPagoPuntoVenta,this.formapagopuntoventaConstantesFunciones.activarvalor_calculadoFormaPagoPuntoVenta,iSizeTabla,this,true,"valor_calculadoFormaPagoPuntoVenta","BASICO"));
			tableColumn.setCellEditor(new TextFieldEditorRenderer(this.formapagopuntoventaConstantesFunciones.resaltarvalor_calculadoFormaPagoPuntoVenta,this.formapagopuntoventaConstantesFunciones.activarvalor_calculadoFormaPagoPuntoVenta,this,true,"valor_calculadoFormaPagoPuntoVenta","BASICO",false));

			tableColumn.setPreferredWidth(Constantes.ISWING_ANCHO_COLUMNA);
			tableColumn.setWidth(Constantes.ISWING_ANCHO_COLUMNA);
			tableColumn.setMinWidth(Constantes.ISWING_ANCHO_COLUMNA);
			tableColumn.setMaxWidth(Constantes.ISWING_ANCHO_COLUMNA);

			this.iWidthTableDefinicion+=Constantes.ISWING_ANCHO_COLUMNA;
			//tableColumn.addPropertyChangeListener(new FormaPagoPuntoVentaPropertyChangeListener());
		} else {
			Funciones2.setTableColumnOcultar(tableColumn);
		}


			tableColumn=this.jTableDatosFormaPagoPuntoVenta.getColumnModel().getColumn(Funciones2.getColumnIndexByName(this.jTableDatosFormaPagoPuntoVenta,FormaPagoPuntoVentaConstantesFunciones.LABEL_VALORCANCELADO));

		if(this.formapagopuntoventaConstantesFunciones.mostrarvalor_canceladoFormaPagoPuntoVenta && Funciones2.permiteMostarParaBusqueda(this.esParaBusquedaForeignKey,FormaPagoPuntoVentaConstantesFunciones.LABEL_VALORCANCELADO,false,iCountNumeroColumnasNormal++,iCountNumeroColumnasFk)) {
			tableColumn.setCellRenderer(new TextFieldRenderer(this.formapagopuntoventaConstantesFunciones.resaltarvalor_canceladoFormaPagoPuntoVenta,this.formapagopuntoventaConstantesFunciones.activarvalor_canceladoFormaPagoPuntoVenta,iSizeTabla,this,true,"valor_canceladoFormaPagoPuntoVenta","BASICO"));
			tableColumn.setCellEditor(new TextFieldEditorRenderer(this.formapagopuntoventaConstantesFunciones.resaltarvalor_canceladoFormaPagoPuntoVenta,this.formapagopuntoventaConstantesFunciones.activarvalor_canceladoFormaPagoPuntoVenta,this,true,"valor_canceladoFormaPagoPuntoVenta","BASICO",false));

			tableColumn.setPreferredWidth(Constantes.ISWING_ANCHO_COLUMNA);
			tableColumn.setWidth(Constantes.ISWING_ANCHO_COLUMNA);
			tableColumn.setMinWidth(Constantes.ISWING_ANCHO_COLUMNA);
			tableColumn.setMaxWidth(Constantes.ISWING_ANCHO_COLUMNA);

			this.iWidthTableDefinicion+=Constantes.ISWING_ANCHO_COLUMNA;
			//tableColumn.addPropertyChangeListener(new FormaPagoPuntoVentaPropertyChangeListener());
		} else {
			Funciones2.setTableColumnOcultar(tableColumn);
		}


			tableColumn=this.jTableDatosFormaPagoPuntoVenta.getColumnModel().getColumn(Funciones2.getColumnIndexByName(this.jTableDatosFormaPagoPuntoVenta,FormaPagoPuntoVentaConstantesFunciones.LABEL_VALORDIFIERE));

		if(this.formapagopuntoventaConstantesFunciones.mostrarvalor_difiereFormaPagoPuntoVenta && Funciones2.permiteMostarParaBusqueda(this.esParaBusquedaForeignKey,FormaPagoPuntoVentaConstantesFunciones.LABEL_VALORDIFIERE,false,iCountNumeroColumnasNormal++,iCountNumeroColumnasFk)) {
			tableColumn.setCellRenderer(new TextFieldRenderer(this.formapagopuntoventaConstantesFunciones.resaltarvalor_difiereFormaPagoPuntoVenta,this.formapagopuntoventaConstantesFunciones.activarvalor_difiereFormaPagoPuntoVenta,iSizeTabla,this,true,"valor_difiereFormaPagoPuntoVenta","BASICO"));
			tableColumn.setCellEditor(new TextFieldEditorRenderer(this.formapagopuntoventaConstantesFunciones.resaltarvalor_difiereFormaPagoPuntoVenta,this.formapagopuntoventaConstantesFunciones.activarvalor_difiereFormaPagoPuntoVenta,this,true,"valor_difiereFormaPagoPuntoVenta","BASICO",false));

			tableColumn.setPreferredWidth(Constantes.ISWING_ANCHO_COLUMNA);
			tableColumn.setWidth(Constantes.ISWING_ANCHO_COLUMNA);
			tableColumn.setMinWidth(Constantes.ISWING_ANCHO_COLUMNA);
			tableColumn.setMaxWidth(Constantes.ISWING_ANCHO_COLUMNA);

			this.iWidthTableDefinicion+=Constantes.ISWING_ANCHO_COLUMNA;
			//tableColumn.addPropertyChangeListener(new FormaPagoPuntoVentaPropertyChangeListener());
		} else {
			Funciones2.setTableColumnOcultar(tableColumn);
		}


			tableColumn=this.jTableDatosFormaPagoPuntoVenta.getColumnModel().getColumn(Funciones2.getColumnIndexByName(this.jTableDatosFormaPagoPuntoVenta,FormaPagoPuntoVentaConstantesFunciones.LABEL_NUMERORETENCION));

		if(this.formapagopuntoventaConstantesFunciones.mostrarnumero_retencionFormaPagoPuntoVenta && Funciones2.permiteMostarParaBusqueda(this.esParaBusquedaForeignKey,FormaPagoPuntoVentaConstantesFunciones.LABEL_NUMERORETENCION,false,iCountNumeroColumnasNormal++,iCountNumeroColumnasFk)) {
			tableColumn.setCellRenderer(new LabelRenderer(this.formapagopuntoventaConstantesFunciones.resaltarnumero_retencionFormaPagoPuntoVenta,this.formapagopuntoventaConstantesFunciones.activarnumero_retencionFormaPagoPuntoVenta,iSizeTabla,this,true,"numero_retencionFormaPagoPuntoVenta","BASICO"));
			tableColumn.setCellEditor(new TextFieldEditorRenderer(this.formapagopuntoventaConstantesFunciones.resaltarnumero_retencionFormaPagoPuntoVenta,this.formapagopuntoventaConstantesFunciones.activarnumero_retencionFormaPagoPuntoVenta,this,true,"numero_retencionFormaPagoPuntoVenta","BASICO",false));

			tableColumn.setPreferredWidth(Constantes.ISWING_ANCHO_COLUMNA + FuncionesSwing.getValorProporcion(Constantes.ISWING_ANCHO_CONTROL,0));
			tableColumn.setWidth(Constantes.ISWING_ANCHO_COLUMNA + FuncionesSwing.getValorProporcion(Constantes.ISWING_ANCHO_CONTROL,0));
			tableColumn.setMinWidth(Constantes.ISWING_ANCHO_COLUMNA + FuncionesSwing.getValorProporcion(Constantes.ISWING_ANCHO_CONTROL,0));
			tableColumn.setMaxWidth(Constantes.ISWING_ANCHO_COLUMNA + FuncionesSwing.getValorProporcion(Constantes.ISWING_ANCHO_CONTROL,0));

			this.iWidthTableDefinicion+=Constantes.ISWING_ANCHO_COLUMNA + FuncionesSwing.getValorProporcion(Constantes.ISWING_ANCHO_CONTROL,0);
			//tableColumn.addPropertyChangeListener(new FormaPagoPuntoVentaPropertyChangeListener());
		} else {
			Funciones2.setTableColumnOcultar(tableColumn);
		}


			tableColumn=this.jTableDatosFormaPagoPuntoVenta.getColumnModel().getColumn(Funciones2.getColumnIndexByName(this.jTableDatosFormaPagoPuntoVenta,FormaPagoPuntoVentaConstantesFunciones.LABEL_NUMEROLIQUIDACION));

		if(this.formapagopuntoventaConstantesFunciones.mostrarnumero_liquidacionFormaPagoPuntoVenta && Funciones2.permiteMostarParaBusqueda(this.esParaBusquedaForeignKey,FormaPagoPuntoVentaConstantesFunciones.LABEL_NUMEROLIQUIDACION,false,iCountNumeroColumnasNormal++,iCountNumeroColumnasFk)) {
			tableColumn.setCellRenderer(new LabelRenderer(this.formapagopuntoventaConstantesFunciones.resaltarnumero_liquidacionFormaPagoPuntoVenta,this.formapagopuntoventaConstantesFunciones.activarnumero_liquidacionFormaPagoPuntoVenta,iSizeTabla,this,true,"numero_liquidacionFormaPagoPuntoVenta","BASICO"));
			tableColumn.setCellEditor(new TextFieldEditorRenderer(this.formapagopuntoventaConstantesFunciones.resaltarnumero_liquidacionFormaPagoPuntoVenta,this.formapagopuntoventaConstantesFunciones.activarnumero_liquidacionFormaPagoPuntoVenta,this,true,"numero_liquidacionFormaPagoPuntoVenta","BASICO",false));

			tableColumn.setPreferredWidth(Constantes.ISWING_ANCHO_COLUMNA + FuncionesSwing.getValorProporcion(Constantes.ISWING_ANCHO_CONTROL,0));
			tableColumn.setWidth(Constantes.ISWING_ANCHO_COLUMNA + FuncionesSwing.getValorProporcion(Constantes.ISWING_ANCHO_CONTROL,0));
			tableColumn.setMinWidth(Constantes.ISWING_ANCHO_COLUMNA + FuncionesSwing.getValorProporcion(Constantes.ISWING_ANCHO_CONTROL,0));
			tableColumn.setMaxWidth(Constantes.ISWING_ANCHO_COLUMNA + FuncionesSwing.getValorProporcion(Constantes.ISWING_ANCHO_CONTROL,0));

			this.iWidthTableDefinicion+=Constantes.ISWING_ANCHO_COLUMNA + FuncionesSwing.getValorProporcion(Constantes.ISWING_ANCHO_CONTROL,0);
			//tableColumn.addPropertyChangeListener(new FormaPagoPuntoVentaPropertyChangeListener());
		} else {
			Funciones2.setTableColumnOcultar(tableColumn);
		}


			tableColumn=this.jTableDatosFormaPagoPuntoVenta.getColumnModel().getColumn(Funciones2.getColumnIndexByName(this.jTableDatosFormaPagoPuntoVenta,FormaPagoPuntoVentaConstantesFunciones.LABEL_IDANIO));

		if(this.formapagopuntoventaConstantesFunciones.mostrarid_anioFormaPagoPuntoVenta && Funciones2.permiteMostarParaBusqueda(this.esParaBusquedaForeignKey,FormaPagoPuntoVentaConstantesFunciones.LABEL_IDANIO,true,iCountNumeroColumnasNormal,iCountNumeroColumnasFk++)) {
			tableColumn.setCellRenderer(new AnioTableCell(this.aniosForeignKey,this.formapagopuntoventaConstantesFunciones.resaltarid_anioFormaPagoPuntoVenta,this,this.formapagopuntoventaConstantesFunciones.activarid_anioFormaPagoPuntoVenta,iSizeTabla));
			tableColumn.setCellEditor(new AnioTableCell(this.aniosForeignKey,this.formapagopuntoventaConstantesFunciones.resaltarid_anioFormaPagoPuntoVenta,this,this.formapagopuntoventaConstantesFunciones.activarid_anioFormaPagoPuntoVenta,true,"id_anioFormaPagoPuntoVenta","BASICO"));

			tableColumn.setPreferredWidth(Constantes.ISWING_ANCHO_COLUMNA + FuncionesSwing.getValorProporcion(Constantes.ISWING_ANCHO_CONTROL,0));
			tableColumn.setWidth(Constantes.ISWING_ANCHO_COLUMNA + FuncionesSwing.getValorProporcion(Constantes.ISWING_ANCHO_CONTROL,0));
			tableColumn.setMinWidth(Constantes.ISWING_ANCHO_COLUMNA + FuncionesSwing.getValorProporcion(Constantes.ISWING_ANCHO_CONTROL,0));
			tableColumn.setMaxWidth(Constantes.ISWING_ANCHO_COLUMNA + FuncionesSwing.getValorProporcion(Constantes.ISWING_ANCHO_CONTROL,0));

			this.iWidthTableDefinicion+=Constantes.ISWING_ANCHO_COLUMNA + FuncionesSwing.getValorProporcion(Constantes.ISWING_ANCHO_CONTROL,0);
			//tableColumn.addPropertyChangeListener(new FormaPagoPuntoVentaPropertyChangeListener());
		} else {
			Funciones2.setTableColumnOcultar(tableColumn);
		}
			
		} else {
		}			
					
		if(!this.formapagopuntoventaSessionBean.getEsGuardarRelacionado()
			&& !this.esParaBusquedaForeignKey) {
			
		}
		
		if(true) {
			String sLabelColumnAccion="Editar";
			String sLabelColumnAccionEli="Eli";
			
			if(this.esParaBusquedaForeignKey)  {
				sLabelColumnAccion="Seleccionar";
				
				//LO MISMO QUE ELSE
				tableColumn= new TableColumn();
				tableColumn.setIdentifier(sLabelColumnAccion);
				tableColumn.setHeaderValue(sLabelColumnAccion);
				tableColumn.setCellRenderer(new IdTableCell(this,false,false,this.formapagopuntoventaSessionBean.getEsGuardarRelacionado(),iSizeTabla));
				tableColumn.setCellEditor(new IdTableCell(this,false,false,this.formapagopuntoventaSessionBean.getEsGuardarRelacionado(),iSizeTabla));
	
				tableColumn.setPreferredWidth(Constantes.ISWING_ANCHO_COLUMNA); 	 
				tableColumn.setWidth(Constantes.ISWING_ANCHO_COLUMNA); 	 
				tableColumn.setMinWidth(Constantes.ISWING_ANCHO_COLUMNA); 
				tableColumn.setMaxWidth(Constantes.ISWING_ANCHO_COLUMNA); 
				
				this.iWidthTableDefinicion+=Constantes.ISWING_ANCHO_COLUMNA;
				
				this.jTableDatosFormaPagoPuntoVenta.addColumn(tableColumn);
			
			} else {				
				
				//LO MISMO QUE IF
				
				tableColumn= new TableColumn();
				tableColumn.setIdentifier(sLabelColumnAccion);
				tableColumn.setHeaderValue(sLabelColumnAccion);
				tableColumn.setCellRenderer(new IdTableCell(this,false,false,this.formapagopuntoventaSessionBean.getEsGuardarRelacionado(),iSizeTabla));
				tableColumn.setCellEditor(new IdTableCell(this,false,false,this.formapagopuntoventaSessionBean.getEsGuardarRelacionado(),iSizeTabla));
		
				tableColumn.setPreferredWidth(Constantes.ISWING_ANCHO_COLUMNA); 	 
				tableColumn.setWidth(Constantes.ISWING_ANCHO_COLUMNA); 	 
				tableColumn.setMinWidth(Constantes.ISWING_ANCHO_COLUMNA); 
				tableColumn.setMaxWidth(Constantes.ISWING_ANCHO_COLUMNA); 
				
				this.iWidthTableDefinicion+=Constantes.ISWING_ANCHO_COLUMNA;
				
				this.jTableDatosFormaPagoPuntoVenta.addColumn(tableColumn);				
					
				//ELIMINAR
				if(this.isPermisoEliminarFormaPagoPuntoVenta && this.isPermisoGuardarCambiosFormaPagoPuntoVenta) {
					tableColumn= new TableColumn();
					tableColumn.setIdentifier(Constantes2.S_ELI);
					tableColumn.setHeaderValue(sLabelColumnAccionEli);
					tableColumn.setCellRenderer(new IdTableCell(this,false,true,this.formapagopuntoventaSessionBean.getEsGuardarRelacionado(),iSizeTabla));
					tableColumn.setCellEditor(new IdTableCell(this,false,true,this.formapagopuntoventaSessionBean.getEsGuardarRelacionado(),iSizeTabla));
			
					tableColumn.setPreferredWidth(65); 	 
					tableColumn.setWidth(65); 	 
					tableColumn.setMinWidth(65); 
					tableColumn.setMaxWidth(65);
					
					this.iWidthTableDefinicion+=65;
						
					this.jTableDatosFormaPagoPuntoVenta.addColumn(tableColumn);
				}
			}			
						
			
			/*
			tableColumn= new TableColumn();
			tableColumn.setIdentifier(Constantes2.S_SELECCIONAR);
			tableColumn.setHeaderValue(Constantes2.S_SELECCIONAR);
			tableColumn.setCellRenderer(new IdSeleccionarTableCell(this));
			tableColumn.setCellEditor(new IdSeleccionarTableCell(this));
			
			tableColumn.setPreferredWidth(30); 	 
			tableColumn.setWidth(30); 	 
			tableColumn.setMinWidth(30); 
			
			this.iWidthTableDefinicion+=30;
			
			this.jTableDatosFormaPagoPuntoVenta.addColumn(tableColumn);
			*/
		}
		
		Integer iUltimaColumna=0;//1
		Integer iNuevaPosicionColumna=0;
		
		
		//PERMITE ELIMINAR SIMPLE
		if(!this.esParaBusquedaForeignKey)  {
			if(this.isPermisoEliminarFormaPagoPuntoVenta && this.isPermisoGuardarCambiosFormaPagoPuntoVenta) {
				iUltimaColumna++;
			}	
		}
		
		//PERMITE EDITAR SIMPLE
		iUltimaColumna++;	
		
				
		
		//MOVIA SELECCIONAR
		//iUltimaColumna++;
		
		if(!this.esParaBusquedaForeignKey)  {
			if(this.isPermisoEliminarFormaPagoPuntoVenta && this.isPermisoGuardarCambiosFormaPagoPuntoVenta) {
				//REUBICA ELIMINAR SIMPLE
				jTableDatosFormaPagoPuntoVenta.moveColumn(this.jTableDatosFormaPagoPuntoVenta.getColumnModel().getColumnCount()-iUltimaColumna, iNuevaPosicionColumna++);//-1,-2 o -3
					
				iUltimaColumna--;
			}
		}
		//REUBICA EDITAR SIMPLE
		jTableDatosFormaPagoPuntoVenta.moveColumn(this.jTableDatosFormaPagoPuntoVenta.getColumnModel().getColumnCount()-iUltimaColumna, iNuevaPosicionColumna++);//-1,-2 o -3				
		
		
		
		
		//REUBICABA SELECCIONAR
		/*
		if(iUltimaColumna>1) {
			iUltimaColumna--;
		}
		
		//iNuevaPosicionColumna++;
			
		//REUBICA SELECCIONAR FILA CHECK
		jTableDatosFormaPagoPuntoVenta.moveColumn(this.jTableDatosFormaPagoPuntoVenta.getColumnModel().getColumnCount()-iUltimaColumna, iNuevaPosicionColumna++);//-1		
		*/
		
		//DEFINEN HEADERS
		final TableCellRenderer tableHeaderDefaultCellRenderer = this.jTableDatosFormaPagoPuntoVenta.getTableHeader().getDefaultRenderer();
		
		this.jTableDatosFormaPagoPuntoVenta.getTableHeader().setDefaultRenderer(new TableCellRendererHeader(this.jTableDatosFormaPagoPuntoVenta,tableHeaderDefaultCellRenderer));
	    
		TableColumn column=null;
		
		if(!FormaPagoPuntoVentaJInternalFrame.ISBINDING_MANUAL_TABLA) {
			for(int i = 0; i < this.jTableDatosFormaPagoPuntoVenta.getColumnModel().getColumnCount(); i++) { 
				column = this.jTableDatosFormaPagoPuntoVenta.getColumnModel().getColumn(i); 
				
				if(column.getIdentifier()!=null) {
					//SI SE UTILIZA UN HEADER ES GENERICO
					//column.setHeaderRenderer(new HeaderRenderer(column.getIdentifier().toString()));
				}
				
				if(column.getIdentifier()!=null && column.getIdentifier().equals(Constantes2.S_ELI)) {
					continue;
				}
				
				if(column.getIdentifier()!=null && column.getIdentifier().equals(Constantes2.S_SELECCIONAR)) {
					if(!FormaPagoPuntoVentaJInternalFrame.ISBINDING_MANUAL_TABLA) {
						column.setPreferredWidth(50); 	 
						column.setWidth(50); 	 
						column.setMinWidth(50); 	
						column.setMaxWidth(50); 
						
						this.iWidthTableDefinicion+=50;
					}
					
				} else {
					if(!FormaPagoPuntoVentaJInternalFrame.ISBINDING_MANUAL_TABLA) {
						column.setPreferredWidth(Constantes.ISWING_ANCHO_COLUMNA); 	 
						column.setWidth(Constantes.ISWING_ANCHO_COLUMNA); 	 
						column.setMinWidth(Constantes.ISWING_ANCHO_COLUMNA); 	
						column.setMaxWidth(Constantes.ISWING_ANCHO_COLUMNA); 	
						
						this.iWidthTableDefinicion+=Constantes.ISWING_ANCHO_COLUMNA;
					}
				}
			}
		}
		
		this.jTableDatosFormaPagoPuntoVenta.setSelectionBackground(FuncionesSwing.getColorSelectedBackground());
		this.jTableDatosFormaPagoPuntoVenta.setSelectionForeground(FuncionesSwing.getColorSelectedForeground());
		
		/*
		this.jTableDatosFormaPagoPuntoVenta.setDefaultRenderer(Object.class, new DefaultTableCellRenderer() {
			private static final long serialVersionUID = 1L;
			
		    @Override
		    public Component getTableCellRendererComponent(JTable table, Object value, boolean isSelected, boolean hasFocus, int row, int column) {
		        final Component component= super.getTableCellRendererComponent(table, value, isSelected, hasFocus, row, column);
		        //POR DEFECTO ES MEJOR, SE PIERDE DATOS AL SELECCIONAR BLANCO LETRAS BLANCAS
				component.setBackground(row % 2 == 0 ? FuncionesSwing.getColorTextFields(Constantes2.S_FONDOCONTROL_COLOR) : Funciones2.getColorFilaTabla2()); //FuncionesSwing.getColorTextFields(Constantes2.S_FONDOCONTROL_COLOR)
				component.setForeground(Funciones2.getColorTextoFilaTabla1());
				
				try {
		        	int iSize=-999;
		        	
		        	if(conTotales) {
						//FILA TOTALES OTRO COLOR, SI TABLA NO ES UNO A UNO
			        	if(Constantes.ISUSAEJBLOGICLAYER) {
							iSize=formapagopuntoventaLogic.getFormaPagoPuntoVentas().size()-1;
								
						} else if(Constantes.ISUSAEJBREMOTE || Constantes.ISUSAEJBHOME) {
							iSize=formapagopuntoventas.size()-1;
						}
						
						if(iSize==row) {
							component.setBackground(Funciones2.getColorFilaTablaTotales());
						}
		        	}
					
					//POR EFICIENCIA NO UTILIZAR					
					//if (component instanceof JComponent) {
		            //    JComponent jcomponent = (JComponent) component;		                 		                
		        	//}				
					
				} catch (Exception e) {
					e.printStackTrace();
				}
				
		        return component;
		    }
		});
		*/
		
		//ESTA EN LA DEFINICION DE LA TABLA
		//this.jTableDatosFormaPagoPuntoVenta.setRowHeight(Constantes.ISWING_ALTO_FILA_TABLA);
		
		/*
		column=this.jTableDatosFormaPagoPuntoVenta.getColumnModel().getColumn(Funciones2.getColumnIndexByName(this.jTableDatosSistema,Constantes2.S_SELECCIONAR));
		
		if(column!=null) {
			column.setPreferredWidth(25); 	 
			column.setWidth(25); 	 
			column.setMinWidth(25); 	
		}
		*/
			
			//CopyTableToTableTotal();
		} else {
			
			this.actualizarVisualTableDatosFormaPagoPuntoVenta();
			
		}
	}
	
	/*
	//COPY_TABLES
	/* FALTARIA RESOLVER:
	   1 SOLO SCROLL PARA 2 TABLAS
	   COPIA EXACTA DE COLUMNAS DE UNA TABLA A OTRA, SI SE MODIFICA TAMANIO TAMBIEN LA OTRA
	*/
	
	public void jButtonIdActionPerformed(ActionEvent evt,int rowIndex,Boolean esRelaciones,Boolean esEliminar) { 
		try {
			if(!esEliminar) {
				this.estaModoSeleccionar=true;
				
				//this.isEsNuevoFormaPagoPuntoVenta=false;
					
				FormaPagoPuntoVentaBeanSwingJInternalFrameAdditional.procesarEventosVista(this.parametroGeneralUsuario,this.moduloActual,this.opcionActual,this.usuarioActual,this,FuncionTipo.BEFORE,ControlTipo.FORM,EventoTipo.LOAD,EventoSubTipo.SELECTED,"FORM",this.formapagopuntoventa,new Object(),this.formapagopuntoventaParameterGeneral,this.formapagopuntoventaReturnGeneral);
			
				if(this.formapagopuntoventaSessionBean.getConGuardarRelaciones()) {
					this.dStart=(double)System.currentTimeMillis();
				}
				
				if(this.jInternalFrameDetalleFormFormaPagoPuntoVenta==null) {
					this.inicializarFormDetalle();
				}
				
				this.inicializarInvalidValues();
				
				int intSelectedRow = 0;
				
				if(rowIndex>=0) {
					intSelectedRow=rowIndex;
					this.jTableDatosFormaPagoPuntoVenta.getSelectionModel().setSelectionInterval(intSelectedRow, intSelectedRow);
				} else {	
					intSelectedRow=this.jTableDatosFormaPagoPuntoVenta.getSelectedRow();	       
				}
				
				//ARCHITECTURE
				if(Constantes.ISUSAEJBLOGICLAYER) {
					this.formapagopuntoventa =(FormaPagoPuntoVenta) this.formapagopuntoventaLogic.getFormaPagoPuntoVentas().toArray()[this.jTableDatosFormaPagoPuntoVenta.convertRowIndexToModel(intSelectedRow)];
				} else if(Constantes.ISUSAEJBREMOTE || Constantes.ISUSAEJBHOME ) {
					this.formapagopuntoventa =(FormaPagoPuntoVenta) this.formapagopuntoventas.toArray()[this.jTableDatosFormaPagoPuntoVenta.convertRowIndexToModel(intSelectedRow)];
				}
				//ARCHITECTURE
				
				//PUEDE SER PARA DUPLICADO O NUEVO TABLA
				
				if(this.formapagopuntoventa.getsType().equals("DUPLICADO")
				   || this.formapagopuntoventa.getsType().equals("NUEVO_GUARDAR_CAMBIOS")) {
					
					this.isEsNuevoFormaPagoPuntoVenta=true;
				
				} else {
					this.isEsNuevoFormaPagoPuntoVenta=false;	
				}
				
				//CONTROL VERSION ANTERIOR
				/*
				if(!this.formapagopuntoventaSessionBean.getEsGuardarRelacionado()) {
					if(this.formapagopuntoventa.getId()>=0 && !this.formapagopuntoventa.getIsNew()) {						
						this.isEsNuevoFormaPagoPuntoVenta=false;
						
					} else {
						this.isEsNuevoFormaPagoPuntoVenta=true;
					}
					
				} else {
					//CONTROLAR PARA RELACIONADO
				}
				*/
				
				//ESTABLECE SI ES RELACIONADO O NO 
				this.habilitarDeshabilitarTipoMantenimientoFormaPagoPuntoVenta(esRelaciones);						
				
				this.seleccionarFormaPagoPuntoVenta(evt,null,rowIndex);
				
				//SELECCIONA ACTUAL PERO AUN NO SE HA INGRESADO AL SISTEMA
				//SE DESHABILITA POR GUARDAR CAMBIOS
				/*
				if(this.formapagopuntoventa.getId()<0) {
					this.isEsNuevoFormaPagoPuntoVenta=true;
				}
				*/
				
				if(!this.esParaBusquedaForeignKey) {
					this.modificarFormaPagoPuntoVenta(evt,rowIndex,esRelaciones);
				} else {
					this.seleccionarFormaPagoPuntoVenta(evt,rowIndex);
				}	
				
				if(this.formapagopuntoventaSessionBean.getConGuardarRelaciones()) {
					this.dEnd=(double)System.currentTimeMillis();					
					this.dDif=this.dEnd - this.dStart;
					
					if(Constantes.ISDEVELOPING) {
						System.out.println("Tiempo(ms) Seleccion FormaPagoPuntoVenta: " + this.dDif); 
					}
				}								
				
				FormaPagoPuntoVentaBeanSwingJInternalFrameAdditional.procesarEventosVista(this.parametroGeneralUsuario,this.moduloActual,this.opcionActual,this.usuarioActual,this,FuncionTipo.AFTER,ControlTipo.FORM,EventoTipo.LOAD,EventoSubTipo.SELECTED,"FORM",this.formapagopuntoventa,new Object(),this.formapagopuntoventaParameterGeneral,this.formapagopuntoventaReturnGeneral);
				
			} else {
				this.estaModoEliminarGuardarCambios=true;
				
				this.seleccionarFormaPagoPuntoVenta(evt,null,rowIndex);
				
				if(this.permiteMantenimiento(this.formapagopuntoventa)) {
					if(this.formapagopuntoventa.getId()>0) {
						this.formapagopuntoventa.setIsDeleted(true);
						
						this.formapagopuntoventasEliminados.add(this.formapagopuntoventa);
					}
					
					if(Constantes.ISUSAEJBLOGICLAYER) {				
						this.formapagopuntoventaLogic.getFormaPagoPuntoVentas().remove(this.formapagopuntoventa);
					} else if(Constantes.ISUSAEJBREMOTE||Constantes.ISUSAEJBHOME) {
						this.formapagopuntoventas.remove(this.formapagopuntoventa);				
					}
					
					
					((FormaPagoPuntoVentaModel) this.jTableDatosFormaPagoPuntoVenta.getModel()).fireTableRowsDeleted(rowIndex,rowIndex);
					
					this.actualizarFilaTotales();
					
					this.inicializarActualizarBindingTablaFormaPagoPuntoVenta(false);					
				}								
			}
			
		} catch(Exception e) {
			FuncionesSwing.manageException2(this, e,logger,FormaPagoPuntoVentaConstantesFunciones.CLASSNAME);
			
		} finally {
			this.estaModoSeleccionar=false;				
			this.estaModoEliminarGuardarCambios=false;
		}
	}
	
	
	public void seleccionarFormaPagoPuntoVenta(ActionEvent evt,javax.swing.event.ListSelectionEvent evt2,int rowIndex) throws Exception { 
		try {
			//SI PUEDE SER NUEVO Y SELECCIONAR (PARA DUPLICAR Y NUEVO TABLA)
			//if(!this.isEsNuevoFormaPagoPuntoVenta) {
			
			if(this.jInternalFrameDetalleFormFormaPagoPuntoVenta==null) { //if(!this.conCargarFormDetalle) {
				this.inicializarFormDetalle();
			}
			
				int intSelectedRow = 0;
				
				if(rowIndex>=0) {
					intSelectedRow=rowIndex;
					this.jTableDatosFormaPagoPuntoVenta.getSelectionModel().setSelectionInterval(intSelectedRow, intSelectedRow);
				} else {	
					intSelectedRow=this.jTableDatosFormaPagoPuntoVenta.getSelectedRow();	       
				}
				
				//CUANDO SE RECARGA TABLA TAMBIEN SE SELECCIONA PERO CON -1 POR LO QUE SE NECESITA VALIDAR ANTES
				if(intSelectedRow<0) {
					return;
				}
				
				//ARCHITECTURE
				if(Constantes.ISUSAEJBLOGICLAYER) {
					this.formapagopuntoventa =(FormaPagoPuntoVenta) this.formapagopuntoventaLogic.getFormaPagoPuntoVentas().toArray()[this.jTableDatosFormaPagoPuntoVenta.convertRowIndexToModel(intSelectedRow)];
				} else if(Constantes.ISUSAEJBREMOTE || Constantes.ISUSAEJBHOME ) {
					this.formapagopuntoventa =(FormaPagoPuntoVenta) this.formapagopuntoventas.toArray()[this.jTableDatosFormaPagoPuntoVenta.convertRowIndexToModel(intSelectedRow)];
				}
				
				if(FormaPagoPuntoVentaJInternalFrame.ISBINDING_MANUAL_TABLA) {
					this.setVariablesObjetoActualToFormularioFormaPagoPuntoVenta(this.formapagopuntoventa);
				}
				
				//ARCHITECTURE
				try {
					

					//Empresa
					if(!this.formapagopuntoventaConstantesFunciones.cargarid_empresaFormaPagoPuntoVenta || this.formapagopuntoventaConstantesFunciones.event_dependid_empresaFormaPagoPuntoVenta) {
						//this.cargarCombosEmpresasForeignKeyLista(" where id="+this.formapagopuntoventa.getid_empresa());
									//this.inicializarActualizarBindingFormaPagoPuntoVenta(false,false);
						this.empresasForeignKey=new ArrayList<Empresa>();

						if(formapagopuntoventa.getEmpresa()!=null) {
							this.empresasForeignKey.add(formapagopuntoventa.getEmpresa());
						}

						this.addItemDefectoCombosForeignKeyEmpresa();
						this.cargarCombosFrameEmpresasForeignKey("Todos");
					}
					this.setActualEmpresaForeignKey(this.formapagopuntoventa.getid_empresa(),false,"Formulario");

					//Sucursal
					if(!this.formapagopuntoventaConstantesFunciones.cargarid_sucursalFormaPagoPuntoVenta || this.formapagopuntoventaConstantesFunciones.event_dependid_sucursalFormaPagoPuntoVenta) {
						//this.cargarCombosSucursalsForeignKeyLista(" where id="+this.formapagopuntoventa.getid_sucursal());
									//this.inicializarActualizarBindingFormaPagoPuntoVenta(false,false);
						this.sucursalsForeignKey=new ArrayList<Sucursal>();

						if(formapagopuntoventa.getSucursal()!=null) {
							this.sucursalsForeignKey.add(formapagopuntoventa.getSucursal());
						}

						this.addItemDefectoCombosForeignKeySucursal();
						this.cargarCombosFrameSucursalsForeignKey("Todos");
					}
					this.setActualSucursalForeignKey(this.formapagopuntoventa.getid_sucursal(),false,"Formulario");

					//Ejercicio
					if(!this.formapagopuntoventaConstantesFunciones.cargarid_ejercicioFormaPagoPuntoVenta || this.formapagopuntoventaConstantesFunciones.event_dependid_ejercicioFormaPagoPuntoVenta) {
						//this.cargarCombosEjerciciosForeignKeyLista(" where id="+this.formapagopuntoventa.getid_ejercicio());
									//this.inicializarActualizarBindingFormaPagoPuntoVenta(false,false);
						this.ejerciciosForeignKey=new ArrayList<Ejercicio>();

						if(formapagopuntoventa.getEjercicio()!=null) {
							this.ejerciciosForeignKey.add(formapagopuntoventa.getEjercicio());
						}

						this.addItemDefectoCombosForeignKeyEjercicio();
						this.cargarCombosFrameEjerciciosForeignKey("Todos");
					}
					this.setActualEjercicioForeignKey(this.formapagopuntoventa.getid_ejercicio(),false,"Formulario");

					//Periodo
					if(!this.formapagopuntoventaConstantesFunciones.cargarid_periodoFormaPagoPuntoVenta || this.formapagopuntoventaConstantesFunciones.event_dependid_periodoFormaPagoPuntoVenta) {
						//this.cargarCombosPeriodosForeignKeyLista(" where id="+this.formapagopuntoventa.getid_periodo());
									//this.inicializarActualizarBindingFormaPagoPuntoVenta(false,false);
						this.periodosForeignKey=new ArrayList<Periodo>();

						if(formapagopuntoventa.getPeriodo()!=null) {
							this.periodosForeignKey.add(formapagopuntoventa.getPeriodo());
						}

						this.addItemDefectoCombosForeignKeyPeriodo();
						this.cargarCombosFramePeriodosForeignKey("Todos");
					}
					this.setActualPeriodoForeignKey(this.formapagopuntoventa.getid_periodo(),false,"Formulario");

					//FacturaPuntoVenta
					if(!this.formapagopuntoventaConstantesFunciones.cargarid_factura_punto_ventaFormaPagoPuntoVenta || this.formapagopuntoventaConstantesFunciones.event_dependid_factura_punto_ventaFormaPagoPuntoVenta) {
						//this.cargarCombosFacturaPuntoVentasForeignKeyLista(" where id="+this.formapagopuntoventa.getid_factura_punto_venta());
									//this.inicializarActualizarBindingFormaPagoPuntoVenta(false,false);
						this.facturapuntoventasForeignKey=new ArrayList<FacturaPuntoVenta>();

						if(formapagopuntoventa.getFacturaPuntoVenta()!=null) {
							this.facturapuntoventasForeignKey.add(formapagopuntoventa.getFacturaPuntoVenta());
						}

						this.addItemDefectoCombosForeignKeyFacturaPuntoVenta();
						this.cargarCombosFrameFacturaPuntoVentasForeignKey("Todos");
					}
					this.setActualFacturaPuntoVentaForeignKey(this.formapagopuntoventa.getid_factura_punto_venta(),false,"Formulario");

					//TipoFormaPago
					if(!this.formapagopuntoventaConstantesFunciones.cargarid_tipo_forma_pagoFormaPagoPuntoVenta || this.formapagopuntoventaConstantesFunciones.event_dependid_tipo_forma_pagoFormaPagoPuntoVenta) {
						//this.cargarCombosTipoFormaPagosForeignKeyLista(" where id="+this.formapagopuntoventa.getid_tipo_forma_pago());
									//this.inicializarActualizarBindingFormaPagoPuntoVenta(false,false);
						this.tipoformapagosForeignKey=new ArrayList<TipoFormaPago>();

						if(formapagopuntoventa.getTipoFormaPago()!=null) {
							this.tipoformapagosForeignKey.add(formapagopuntoventa.getTipoFormaPago());
						}

						this.addItemDefectoCombosForeignKeyTipoFormaPago();
						this.cargarCombosFrameTipoFormaPagosForeignKey("Todos");
					}
					this.setActualTipoFormaPagoForeignKey(this.formapagopuntoventa.getid_tipo_forma_pago(),false,"Formulario");

					//Banco
					if(!this.formapagopuntoventaConstantesFunciones.cargarid_bancoFormaPagoPuntoVenta || this.formapagopuntoventaConstantesFunciones.event_dependid_bancoFormaPagoPuntoVenta) {
						//this.cargarCombosBancosForeignKeyLista(" where id="+this.formapagopuntoventa.getid_banco());
									//this.inicializarActualizarBindingFormaPagoPuntoVenta(false,false);
						this.bancosForeignKey=new ArrayList<Banco>();

						if(formapagopuntoventa.getBanco()!=null) {
							this.bancosForeignKey.add(formapagopuntoventa.getBanco());
						}

						this.addItemDefectoCombosForeignKeyBanco();
						this.cargarCombosFrameBancosForeignKey("Todos");
					}
					this.setActualBancoForeignKey(this.formapagopuntoventa.getid_banco(),false,"Formulario");

					//CuentaBancoPunVen
					if(!this.formapagopuntoventaConstantesFunciones.cargarid_cuenta_banco_pun_venFormaPagoPuntoVenta || this.formapagopuntoventaConstantesFunciones.event_dependid_cuenta_banco_pun_venFormaPagoPuntoVenta) {
						//this.cargarCombosCuentaBancoPunVensForeignKeyLista(" where id="+this.formapagopuntoventa.getid_cuenta_banco_pun_ven());
									//this.inicializarActualizarBindingFormaPagoPuntoVenta(false,false);
						this.cuentabancopunvensForeignKey=new ArrayList<CuentaBancoPunVen>();

						if(formapagopuntoventa.getCuentaBancoPunVen()!=null) {
							this.cuentabancopunvensForeignKey.add(formapagopuntoventa.getCuentaBancoPunVen());
						}

						this.addItemDefectoCombosForeignKeyCuentaBancoPunVen();
						this.cargarCombosFrameCuentaBancoPunVensForeignKey("Todos");
					}
					this.setActualCuentaBancoPunVenForeignKey(this.formapagopuntoventa.getid_cuenta_banco_pun_ven(),false,"Formulario");

					//TipoRiesgoCheque
					if(!this.formapagopuntoventaConstantesFunciones.cargarid_tipo_riesgo_chequeFormaPagoPuntoVenta || this.formapagopuntoventaConstantesFunciones.event_dependid_tipo_riesgo_chequeFormaPagoPuntoVenta) {
						//this.cargarCombosTipoRiesgoChequesForeignKeyLista(" where id="+this.formapagopuntoventa.getid_tipo_riesgo_cheque());
									//this.inicializarActualizarBindingFormaPagoPuntoVenta(false,false);
						this.tiporiesgochequesForeignKey=new ArrayList<TipoRiesgoCheque>();

						if(formapagopuntoventa.getTipoRiesgoCheque()!=null) {
							this.tiporiesgochequesForeignKey.add(formapagopuntoventa.getTipoRiesgoCheque());
						}

						this.addItemDefectoCombosForeignKeyTipoRiesgoCheque();
						this.cargarCombosFrameTipoRiesgoChequesForeignKey("Todos");
					}
					this.setActualTipoRiesgoChequeForeignKey(this.formapagopuntoventa.getid_tipo_riesgo_cheque(),false,"Formulario");

					//BancoTarjeta
					if(!this.formapagopuntoventaConstantesFunciones.cargarid_banco_tarjetaFormaPagoPuntoVenta || this.formapagopuntoventaConstantesFunciones.event_dependid_banco_tarjetaFormaPagoPuntoVenta) {
						//this.cargarCombosBancoTarjetasForeignKeyLista(" where id="+this.formapagopuntoventa.getid_banco_tarjeta());
									//this.inicializarActualizarBindingFormaPagoPuntoVenta(false,false);
						this.bancotarjetasForeignKey=new ArrayList<Banco>();

						if(formapagopuntoventa.getBancoTarjeta()!=null) {
							this.bancotarjetasForeignKey.add(formapagopuntoventa.getBancoTarjeta());
						}

						this.addItemDefectoCombosForeignKeyBancoTarjeta();
						this.cargarCombosFrameBancoTarjetasForeignKey("Todos");
					}
					this.setActualBancoTarjetaForeignKey(this.formapagopuntoventa.getid_banco_tarjeta(),false,"Formulario");

					//TarjetaCredito
					if(!this.formapagopuntoventaConstantesFunciones.cargarid_tarjeta_creditoFormaPagoPuntoVenta || this.formapagopuntoventaConstantesFunciones.event_dependid_tarjeta_creditoFormaPagoPuntoVenta) {
						//this.cargarCombosTarjetaCreditosForeignKeyLista(" where id="+this.formapagopuntoventa.getid_tarjeta_credito());
									//this.inicializarActualizarBindingFormaPagoPuntoVenta(false,false);
						this.tarjetacreditosForeignKey=new ArrayList<TarjetaCredito>();

						if(formapagopuntoventa.getTarjetaCredito()!=null) {
							this.tarjetacreditosForeignKey.add(formapagopuntoventa.getTarjetaCredito());
						}

						this.addItemDefectoCombosForeignKeyTarjetaCredito();
						this.cargarCombosFrameTarjetaCreditosForeignKey("Todos");
					}
					this.setActualTarjetaCreditoForeignKey(this.formapagopuntoventa.getid_tarjeta_credito(),false,"Formulario");

					//TipoInteresTarjeta
					if(!this.formapagopuntoventaConstantesFunciones.cargarid_tipo_interes_tarjetaFormaPagoPuntoVenta || this.formapagopuntoventaConstantesFunciones.event_dependid_tipo_interes_tarjetaFormaPagoPuntoVenta) {
						//this.cargarCombosTipoInteresTarjetasForeignKeyLista(" where id="+this.formapagopuntoventa.getid_tipo_interes_tarjeta());
									//this.inicializarActualizarBindingFormaPagoPuntoVenta(false,false);
						this.tipointerestarjetasForeignKey=new ArrayList<TipoInteresTarjeta>();

						if(formapagopuntoventa.getTipoInteresTarjeta()!=null) {
							this.tipointerestarjetasForeignKey.add(formapagopuntoventa.getTipoInteresTarjeta());
						}

						this.addItemDefectoCombosForeignKeyTipoInteresTarjeta();
						this.cargarCombosFrameTipoInteresTarjetasForeignKey("Todos");
					}
					this.setActualTipoInteresTarjetaForeignKey(this.formapagopuntoventa.getid_tipo_interes_tarjeta(),false,"Formulario");

					//TipoPagoTarjeta
					if(!this.formapagopuntoventaConstantesFunciones.cargarid_tipo_pago_tarjetaFormaPagoPuntoVenta || this.formapagopuntoventaConstantesFunciones.event_dependid_tipo_pago_tarjetaFormaPagoPuntoVenta) {
						//this.cargarCombosTipoPagoTarjetasForeignKeyLista(" where id="+this.formapagopuntoventa.getid_tipo_pago_tarjeta());
									//this.inicializarActualizarBindingFormaPagoPuntoVenta(false,false);
						this.tipopagotarjetasForeignKey=new ArrayList<TipoPagoTarjeta>();

						if(formapagopuntoventa.getTipoPagoTarjeta()!=null) {
							this.tipopagotarjetasForeignKey.add(formapagopuntoventa.getTipoPagoTarjeta());
						}

						this.addItemDefectoCombosForeignKeyTipoPagoTarjeta();
						this.cargarCombosFrameTipoPagoTarjetasForeignKey("Todos");
					}
					this.setActualTipoPagoTarjetaForeignKey(this.formapagopuntoventa.getid_tipo_pago_tarjeta(),false,"Formulario");

					//Conexion
					if(!this.formapagopuntoventaConstantesFunciones.cargarid_conexionFormaPagoPuntoVenta || this.formapagopuntoventaConstantesFunciones.event_dependid_conexionFormaPagoPuntoVenta) {
						//this.cargarCombosConexionsForeignKeyLista(" where id="+this.formapagopuntoventa.getid_conexion());
									//this.inicializarActualizarBindingFormaPagoPuntoVenta(false,false);
						this.conexionsForeignKey=new ArrayList<Conexion>();

						if(formapagopuntoventa.getConexion()!=null) {
							this.conexionsForeignKey.add(formapagopuntoventa.getConexion());
						}

						this.addItemDefectoCombosForeignKeyConexion();
						this.cargarCombosFrameConexionsForeignKey("Todos");
					}
					this.setActualConexionForeignKey(this.formapagopuntoventa.getid_conexion(),false,"Formulario");

					//Mes
					if(!this.formapagopuntoventaConstantesFunciones.cargarid_mesFormaPagoPuntoVenta || this.formapagopuntoventaConstantesFunciones.event_dependid_mesFormaPagoPuntoVenta) {
						//this.cargarCombosMessForeignKeyLista(" where id="+this.formapagopuntoventa.getid_mes());
									//this.inicializarActualizarBindingFormaPagoPuntoVenta(false,false);
						this.messForeignKey=new ArrayList<Mes>();

						if(formapagopuntoventa.getMes()!=null) {
							this.messForeignKey.add(formapagopuntoventa.getMes());
						}

						this.addItemDefectoCombosForeignKeyMes();
						this.cargarCombosFrameMessForeignKey("Todos");
					}
					this.setActualMesForeignKey(this.formapagopuntoventa.getid_mes(),false,"Formulario");

					//Anio
					if(!this.formapagopuntoventaConstantesFunciones.cargarid_anioFormaPagoPuntoVenta || this.formapagopuntoventaConstantesFunciones.event_dependid_anioFormaPagoPuntoVenta) {
						//this.cargarCombosAniosForeignKeyLista(" where id="+this.formapagopuntoventa.getid_anio());
									//this.inicializarActualizarBindingFormaPagoPuntoVenta(false,false);
						this.aniosForeignKey=new ArrayList<Anio>();

						if(formapagopuntoventa.getAnio()!=null) {
							this.aniosForeignKey.add(formapagopuntoventa.getAnio());
						}

						this.addItemDefectoCombosForeignKeyAnio();
						this.cargarCombosFrameAniosForeignKey("Todos");
					}
					this.setActualAnioForeignKey(this.formapagopuntoventa.getid_anio(),false,"Formulario");

					//CuentaContable
					if(!this.formapagopuntoventaConstantesFunciones.cargarid_cuenta_contableFormaPagoPuntoVenta || this.formapagopuntoventaConstantesFunciones.event_dependid_cuenta_contableFormaPagoPuntoVenta) {
						//this.cargarCombosCuentaContablesForeignKeyLista(" where id="+this.formapagopuntoventa.getid_cuenta_contable());
									//this.inicializarActualizarBindingFormaPagoPuntoVenta(false,false);
						this.cuentacontablesForeignKey=new ArrayList<CuentaContable>();

						if(formapagopuntoventa.getCuentaContable()!=null) {
							this.cuentacontablesForeignKey.add(formapagopuntoventa.getCuentaContable());
						}

						this.addItemDefectoCombosForeignKeyCuentaContable();
						this.cargarCombosFrameCuentaContablesForeignKey("Todos");
					}
					this.setActualCuentaContableForeignKey(this.formapagopuntoventa.getid_cuenta_contable(),false,"Formulario");

					//AsientoContable
					if(!this.formapagopuntoventaConstantesFunciones.cargarid_asiento_contableFormaPagoPuntoVenta || this.formapagopuntoventaConstantesFunciones.event_dependid_asiento_contableFormaPagoPuntoVenta) {
						//this.cargarCombosAsientoContablesForeignKeyLista(" where id="+this.formapagopuntoventa.getid_asiento_contable());
									//this.inicializarActualizarBindingFormaPagoPuntoVenta(false,false);
						this.asientocontablesForeignKey=new ArrayList<AsientoContable>();

						if(formapagopuntoventa.getAsientoContable()!=null) {
							this.asientocontablesForeignKey.add(formapagopuntoventa.getAsientoContable());
						}

						this.addItemDefectoCombosForeignKeyAsientoContable();
						this.cargarCombosFrameAsientoContablesForeignKey("Todos");
					}
					this.setActualAsientoContableForeignKey(this.formapagopuntoventa.getid_asiento_contable(),false,"Formulario");
				} catch(Exception e) {
					throw e;
				}
				
				this.actualizarEstadoCeldasBotonesFormaPagoPuntoVenta("s", this.isGuardarCambiosEnLote, this.isEsMantenimientoRelacionado);
				
				//NO FUNCIONA BINDING PERO SE MANTIENE
				this.inicializarActualizarBindingBotonesFormaPagoPuntoVenta(false) ;
				
				//SI ES MANUAL
				//this.inicializarActualizarBindingBotonesManualFormaPagoPuntoVenta() ;
			//}
		} catch(Exception e) {
			FuncionesSwing.manageException(this, e,logger,FormaPagoPuntoVentaConstantesFunciones.CLASSNAME);
		}
	}
	
	public void setVariablesObjetoActualToFormularioTodoFormaPagoPuntoVenta(FormaPagoPuntoVenta formapagopuntoventa) throws Exception { 
		this.setVariablesObjetoActualToFormularioTodoFormaPagoPuntoVenta(formapagopuntoventa,false,"NINGUNO");
	}
	
	public void setVariablesObjetoActualToFormularioTodoFormaPagoPuntoVenta(FormaPagoPuntoVenta formapagopuntoventa,Boolean conCargarListasDesdeObjetoActual,String sTipoEvento) throws Exception { 
		this.setVariablesObjetoActualToFormularioFormaPagoPuntoVenta(formapagopuntoventa);
		
		if(conCargarListasDesdeObjetoActual) {
			this.setVariablesObjetoActualToListasForeignKeyFormaPagoPuntoVenta(formapagopuntoventa,sTipoEvento);
		}
		
		this.setVariablesObjetoActualToFormularioForeignKeyFormaPagoPuntoVenta(formapagopuntoventa);
	}
	
	public void setVariablesObjetoActualToFormularioFormaPagoPuntoVenta(FormaPagoPuntoVenta formapagopuntoventa) throws Exception { 
		try {			
			Image imageActual=null;
			ImageIcon imageIcon = null;
			
			if(this.jInternalFrameDetalleFormFormaPagoPuntoVenta==null) { //if(!this.conCargarFormDetalle) {
				this.inicializarFormDetalle();
			}
			
			
			this.jInternalFrameDetalleFormFormaPagoPuntoVenta.jLabelidFormaPagoPuntoVenta.setText(formapagopuntoventa.getId().toString());
			this.jInternalFrameDetalleFormFormaPagoPuntoVenta.jTextFieldporcentajeFormaPagoPuntoVenta.setText(formapagopuntoventa.getporcentaje().toString());
			this.jInternalFrameDetalleFormFormaPagoPuntoVenta.jTextFieldvalorFormaPagoPuntoVenta.setText(formapagopuntoventa.getvalor().toString());
			this.jInternalFrameDetalleFormFormaPagoPuntoVenta.jDateChooserfechaFormaPagoPuntoVenta.setDate(formapagopuntoventa.getfecha());
			this.jInternalFrameDetalleFormFormaPagoPuntoVenta.jTextAreadescripcionFormaPagoPuntoVenta.setText(formapagopuntoventa.getdescripcion());
			this.jInternalFrameDetalleFormFormaPagoPuntoVenta.jDateChooserfecha_inicioFormaPagoPuntoVenta.setDate(formapagopuntoventa.getfecha_inicio());
			this.jInternalFrameDetalleFormFormaPagoPuntoVenta.jTextFieldnumero_dias_plazoFormaPagoPuntoVenta.setText(formapagopuntoventa.getnumero_dias_plazo().toString());
			this.jInternalFrameDetalleFormFormaPagoPuntoVenta.jDateChooserfecha_finFormaPagoPuntoVenta.setDate(formapagopuntoventa.getfecha_fin());
			this.jInternalFrameDetalleFormFormaPagoPuntoVenta.jTextFieldnumero_cuentaFormaPagoPuntoVenta.setText(formapagopuntoventa.getnumero_cuenta());
			this.jInternalFrameDetalleFormFormaPagoPuntoVenta.jTextFieldnumero_chequeFormaPagoPuntoVenta.setText(formapagopuntoventa.getnumero_cheque());
			this.jInternalFrameDetalleFormFormaPagoPuntoVenta.jTextAreagiradorFormaPagoPuntoVenta.setText(formapagopuntoventa.getgirador());
			this.jInternalFrameDetalleFormFormaPagoPuntoVenta.jTextFieldnumeroFormaPagoPuntoVenta.setText(formapagopuntoventa.getnumero());
			this.jInternalFrameDetalleFormFormaPagoPuntoVenta.jTextAreatarjeta_habienteFormaPagoPuntoVenta.setText(formapagopuntoventa.gettarjeta_habiente());
			this.jInternalFrameDetalleFormFormaPagoPuntoVenta.jTextAreaautorizacionFormaPagoPuntoVenta.setText(formapagopuntoventa.getautorizacion());
			this.jInternalFrameDetalleFormFormaPagoPuntoVenta.jTextFieldvoucherFormaPagoPuntoVenta.setText(formapagopuntoventa.getvoucher());
			this.jInternalFrameDetalleFormFormaPagoPuntoVenta.jTextFieldloteFormaPagoPuntoVenta.setText(formapagopuntoventa.getlote());
			this.jInternalFrameDetalleFormFormaPagoPuntoVenta.jTextFieldcuotaFormaPagoPuntoVenta.setText(formapagopuntoventa.getcuota().toString());
			this.jInternalFrameDetalleFormFormaPagoPuntoVenta.jTextFieldvalor_retencionFormaPagoPuntoVenta.setText(formapagopuntoventa.getvalor_retencion().toString());
			this.jInternalFrameDetalleFormFormaPagoPuntoVenta.jTextFieldvalor_comisionFormaPagoPuntoVenta.setText(formapagopuntoventa.getvalor_comision().toString());
			this.jInternalFrameDetalleFormFormaPagoPuntoVenta.jTextFieldvalor_calculadoFormaPagoPuntoVenta.setText(formapagopuntoventa.getvalor_calculado().toString());
			this.jInternalFrameDetalleFormFormaPagoPuntoVenta.jTextFieldvalor_canceladoFormaPagoPuntoVenta.setText(formapagopuntoventa.getvalor_cancelado().toString());
			this.jInternalFrameDetalleFormFormaPagoPuntoVenta.jTextFieldvalor_difiereFormaPagoPuntoVenta.setText(formapagopuntoventa.getvalor_difiere().toString());
			this.jInternalFrameDetalleFormFormaPagoPuntoVenta.jTextFieldnumero_retencionFormaPagoPuntoVenta.setText(formapagopuntoventa.getnumero_retencion());
			this.jInternalFrameDetalleFormFormaPagoPuntoVenta.jTextFieldnumero_liquidacionFormaPagoPuntoVenta.setText(formapagopuntoventa.getnumero_liquidacion());
			
		} catch(Exception e) {
			throw e;
			//FuncionesSwing.manageException(this, e,logger,FormaPagoPuntoVentaConstantesFunciones.CLASSNAME);
		}
	}
		
	public void actualizarInformacion(String sTipo,FormaPagoPuntoVenta formapagopuntoventaLocal) throws Exception {
		this.actualizarInformacion(sTipo,false,formapagopuntoventaLocal);
	}	
	
	public void actualizarInformacion(String sTipo,Boolean conParametroObjeto,FormaPagoPuntoVenta formapagopuntoventaLocal) throws Exception {
		
		if(!conParametroObjeto) {
			if(!this.getEsControlTabla()) {
				formapagopuntoventaLocal=this.formapagopuntoventa;
			} else {
				formapagopuntoventaLocal=this.formapagopuntoventaAnterior;
			}
		}
		
		if(this.permiteMantenimiento(formapagopuntoventaLocal)) {
			if(sTipo.equals("EVENTO_CONTROL")) { // || sTipo.equals("EVENTO_NUEVO")
				if(!this.esControlTabla) {
					this.setVariablesFormularioToObjetoActualTodoFormaPagoPuntoVenta(formapagopuntoventaLocal,true);
					
					if(formapagopuntoventaSessionBean.getConGuardarRelaciones()) {
						this.actualizarRelaciones(formapagopuntoventaLocal);
					}
				}
			
			} else if(sTipo.equals("INFO_PADRE")) {
				
				if(this.formapagopuntoventaSessionBean.getEsGuardarRelacionado()) {
					this.actualizarRelacionFkPadreActual(formapagopuntoventaLocal);
				}
			}
		}
	}
	
	public void setVariablesFormularioToObjetoActualTodoFormaPagoPuntoVenta(FormaPagoPuntoVenta formapagopuntoventa,Boolean conColumnasBase) throws Exception { 
		this.setVariablesFormularioToObjetoActualFormaPagoPuntoVenta(formapagopuntoventa,conColumnasBase);
		this.setVariablesFormularioToObjetoActualForeignKeysFormaPagoPuntoVenta(formapagopuntoventa);
	}
	
	public void setVariablesFormularioToObjetoActualFormaPagoPuntoVenta(FormaPagoPuntoVenta formapagopuntoventa,Boolean conColumnasBase) throws Exception { 
		this.setVariablesFormularioToObjetoActualFormaPagoPuntoVenta(formapagopuntoventa,conColumnasBase,true);
	}
	
	public void setVariablesFormularioToObjetoActualFormaPagoPuntoVenta(FormaPagoPuntoVenta formapagopuntoventa,Boolean conColumnasBase,Boolean conInicializarInvalidValues) throws Exception { 
		String sMensajeCampoActual="";
		Boolean estaValidado=true;
		try {
			
			if(this.jInternalFrameDetalleFormFormaPagoPuntoVenta==null) { //if(!this.conCargarFormDetalle) {
				this.inicializarFormDetalle();
			}
			
			if(conInicializarInvalidValues) {
				this.inicializarInvalidValues();
			}
			
			

		try {
			if(this.jInternalFrameDetalleFormFormaPagoPuntoVenta.jLabelidFormaPagoPuntoVenta.getText()==null || this.jInternalFrameDetalleFormFormaPagoPuntoVenta.jLabelidFormaPagoPuntoVenta.getText()=="" || this.jInternalFrameDetalleFormFormaPagoPuntoVenta.jLabelidFormaPagoPuntoVenta.getText()=="Id") {
				this.jInternalFrameDetalleFormFormaPagoPuntoVenta.jLabelidFormaPagoPuntoVenta.setText("0");
			}

			if(conColumnasBase) {formapagopuntoventa.setId(Long.parseLong(this.jInternalFrameDetalleFormFormaPagoPuntoVenta.jLabelidFormaPagoPuntoVenta.getText()));}
		} catch(Exception e) {
			estaValidado=false;
			sMensajeCampoActual+="\r\n"+FormaPagoPuntoVentaConstantesFunciones.LABEL_ID+"-->"+ConstantesMensajes.SMENSAJEEXCEPCION_VALIDACIONVALOR;FuncionesSwing.mostrarCampoMensajeInvalido(false,this.jInternalFrameDetalleFormFormaPagoPuntoVenta.jLabelIdFormaPagoPuntoVenta,ConstantesMensajes.SMENSAJEEXCEPCION_VALIDACIONVALOR);
		}

		try {
			formapagopuntoventa.setporcentaje(Double.parseDouble(this.jInternalFrameDetalleFormFormaPagoPuntoVenta.jTextFieldporcentajeFormaPagoPuntoVenta.getText()));
		} catch(Exception e) {
			estaValidado=false;
			sMensajeCampoActual+="\r\n"+FormaPagoPuntoVentaConstantesFunciones.LABEL_PORCENTAJE+"-->"+ConstantesMensajes.SMENSAJEEXCEPCION_VALIDACIONVALOR;FuncionesSwing.mostrarCampoMensajeInvalido(false,this.jInternalFrameDetalleFormFormaPagoPuntoVenta.jLabelporcentajeFormaPagoPuntoVenta,ConstantesMensajes.SMENSAJEEXCEPCION_VALIDACIONVALOR);
		}

		try {
			formapagopuntoventa.setvalor(Double.parseDouble(this.jInternalFrameDetalleFormFormaPagoPuntoVenta.jTextFieldvalorFormaPagoPuntoVenta.getText()));
		} catch(Exception e) {
			estaValidado=false;
			sMensajeCampoActual+="\r\n"+FormaPagoPuntoVentaConstantesFunciones.LABEL_VALOR+"-->"+ConstantesMensajes.SMENSAJEEXCEPCION_VALIDACIONVALOR;FuncionesSwing.mostrarCampoMensajeInvalido(false,this.jInternalFrameDetalleFormFormaPagoPuntoVenta.jLabelvalorFormaPagoPuntoVenta,ConstantesMensajes.SMENSAJEEXCEPCION_VALIDACIONVALOR);
		}

		try {
			formapagopuntoventa.setfecha(this.jInternalFrameDetalleFormFormaPagoPuntoVenta.jDateChooserfechaFormaPagoPuntoVenta.getDate());
		} catch(Exception e) {
			estaValidado=false;
			sMensajeCampoActual+="\r\n"+FormaPagoPuntoVentaConstantesFunciones.LABEL_FECHA+"-->"+ConstantesMensajes.SMENSAJEEXCEPCION_VALIDACIONVALOR;FuncionesSwing.mostrarCampoMensajeInvalido(false,this.jInternalFrameDetalleFormFormaPagoPuntoVenta.jLabelfechaFormaPagoPuntoVenta,ConstantesMensajes.SMENSAJEEXCEPCION_VALIDACIONVALOR);
		}

		try {
			formapagopuntoventa.setdescripcion(this.jInternalFrameDetalleFormFormaPagoPuntoVenta.jTextAreadescripcionFormaPagoPuntoVenta.getText());
		} catch(Exception e) {
			estaValidado=false;
			sMensajeCampoActual+="\r\n"+FormaPagoPuntoVentaConstantesFunciones.LABEL_DESCRIPCION+"-->"+ConstantesMensajes.SMENSAJEEXCEPCION_VALIDACIONVALOR;FuncionesSwing.mostrarCampoMensajeInvalido(false,this.jInternalFrameDetalleFormFormaPagoPuntoVenta.jLabeldescripcionFormaPagoPuntoVenta,ConstantesMensajes.SMENSAJEEXCEPCION_VALIDACIONVALOR);
		}

		try {
			formapagopuntoventa.setfecha_inicio(this.jInternalFrameDetalleFormFormaPagoPuntoVenta.jDateChooserfecha_inicioFormaPagoPuntoVenta.getDate());
		} catch(Exception e) {
			estaValidado=false;
			sMensajeCampoActual+="\r\n"+FormaPagoPuntoVentaConstantesFunciones.LABEL_FECHAINICIO+"-->"+ConstantesMensajes.SMENSAJEEXCEPCION_VALIDACIONVALOR;FuncionesSwing.mostrarCampoMensajeInvalido(false,this.jInternalFrameDetalleFormFormaPagoPuntoVenta.jLabelfecha_inicioFormaPagoPuntoVenta,ConstantesMensajes.SMENSAJEEXCEPCION_VALIDACIONVALOR);
		}

		try {
			formapagopuntoventa.setnumero_dias_plazo(Integer.parseInt(this.jInternalFrameDetalleFormFormaPagoPuntoVenta.jTextFieldnumero_dias_plazoFormaPagoPuntoVenta.getText()));
		} catch(Exception e) {
			estaValidado=false;
			sMensajeCampoActual+="\r\n"+FormaPagoPuntoVentaConstantesFunciones.LABEL_NUMERODIASPLAZO+"-->"+ConstantesMensajes.SMENSAJEEXCEPCION_VALIDACIONVALOR;FuncionesSwing.mostrarCampoMensajeInvalido(false,this.jInternalFrameDetalleFormFormaPagoPuntoVenta.jLabelnumero_dias_plazoFormaPagoPuntoVenta,ConstantesMensajes.SMENSAJEEXCEPCION_VALIDACIONVALOR);
		}

		try {
			formapagopuntoventa.setfecha_fin(this.jInternalFrameDetalleFormFormaPagoPuntoVenta.jDateChooserfecha_finFormaPagoPuntoVenta.getDate());
		} catch(Exception e) {
			estaValidado=false;
			sMensajeCampoActual+="\r\n"+FormaPagoPuntoVentaConstantesFunciones.LABEL_FECHAFIN+"-->"+ConstantesMensajes.SMENSAJEEXCEPCION_VALIDACIONVALOR;FuncionesSwing.mostrarCampoMensajeInvalido(false,this.jInternalFrameDetalleFormFormaPagoPuntoVenta.jLabelfecha_finFormaPagoPuntoVenta,ConstantesMensajes.SMENSAJEEXCEPCION_VALIDACIONVALOR);
		}

		try {
			formapagopuntoventa.setnumero_cuenta(this.jInternalFrameDetalleFormFormaPagoPuntoVenta.jTextFieldnumero_cuentaFormaPagoPuntoVenta.getText());
		} catch(Exception e) {
			estaValidado=false;
			sMensajeCampoActual+="\r\n"+FormaPagoPuntoVentaConstantesFunciones.LABEL_NUMEROCUENTA+"-->"+ConstantesMensajes.SMENSAJEEXCEPCION_VALIDACIONVALOR;FuncionesSwing.mostrarCampoMensajeInvalido(false,this.jInternalFrameDetalleFormFormaPagoPuntoVenta.jLabelnumero_cuentaFormaPagoPuntoVenta,ConstantesMensajes.SMENSAJEEXCEPCION_VALIDACIONVALOR);
		}

		try {
			formapagopuntoventa.setnumero_cheque(this.jInternalFrameDetalleFormFormaPagoPuntoVenta.jTextFieldnumero_chequeFormaPagoPuntoVenta.getText());
		} catch(Exception e) {
			estaValidado=false;
			sMensajeCampoActual+="\r\n"+FormaPagoPuntoVentaConstantesFunciones.LABEL_NUMEROCHEQUE+"-->"+ConstantesMensajes.SMENSAJEEXCEPCION_VALIDACIONVALOR;FuncionesSwing.mostrarCampoMensajeInvalido(false,this.jInternalFrameDetalleFormFormaPagoPuntoVenta.jLabelnumero_chequeFormaPagoPuntoVenta,ConstantesMensajes.SMENSAJEEXCEPCION_VALIDACIONVALOR);
		}

		try {
			formapagopuntoventa.setgirador(this.jInternalFrameDetalleFormFormaPagoPuntoVenta.jTextAreagiradorFormaPagoPuntoVenta.getText());
		} catch(Exception e) {
			estaValidado=false;
			sMensajeCampoActual+="\r\n"+FormaPagoPuntoVentaConstantesFunciones.LABEL_GIRADOR+"-->"+ConstantesMensajes.SMENSAJEEXCEPCION_VALIDACIONVALOR;FuncionesSwing.mostrarCampoMensajeInvalido(false,this.jInternalFrameDetalleFormFormaPagoPuntoVenta.jLabelgiradorFormaPagoPuntoVenta,ConstantesMensajes.SMENSAJEEXCEPCION_VALIDACIONVALOR);
		}

		try {
			formapagopuntoventa.setnumero(this.jInternalFrameDetalleFormFormaPagoPuntoVenta.jTextFieldnumeroFormaPagoPuntoVenta.getText());
		} catch(Exception e) {
			estaValidado=false;
			sMensajeCampoActual+="\r\n"+FormaPagoPuntoVentaConstantesFunciones.LABEL_NUMERO+"-->"+ConstantesMensajes.SMENSAJEEXCEPCION_VALIDACIONVALOR;FuncionesSwing.mostrarCampoMensajeInvalido(false,this.jInternalFrameDetalleFormFormaPagoPuntoVenta.jLabelnumeroFormaPagoPuntoVenta,ConstantesMensajes.SMENSAJEEXCEPCION_VALIDACIONVALOR);
		}

		try {
			formapagopuntoventa.settarjeta_habiente(this.jInternalFrameDetalleFormFormaPagoPuntoVenta.jTextAreatarjeta_habienteFormaPagoPuntoVenta.getText());
		} catch(Exception e) {
			estaValidado=false;
			sMensajeCampoActual+="\r\n"+FormaPagoPuntoVentaConstantesFunciones.LABEL_TARJETAHABIENTE+"-->"+ConstantesMensajes.SMENSAJEEXCEPCION_VALIDACIONVALOR;FuncionesSwing.mostrarCampoMensajeInvalido(false,this.jInternalFrameDetalleFormFormaPagoPuntoVenta.jLabeltarjeta_habienteFormaPagoPuntoVenta,ConstantesMensajes.SMENSAJEEXCEPCION_VALIDACIONVALOR);
		}

		try {
			formapagopuntoventa.setautorizacion(this.jInternalFrameDetalleFormFormaPagoPuntoVenta.jTextAreaautorizacionFormaPagoPuntoVenta.getText());
		} catch(Exception e) {
			estaValidado=false;
			sMensajeCampoActual+="\r\n"+FormaPagoPuntoVentaConstantesFunciones.LABEL_AUTORIZACION+"-->"+ConstantesMensajes.SMENSAJEEXCEPCION_VALIDACIONVALOR;FuncionesSwing.mostrarCampoMensajeInvalido(false,this.jInternalFrameDetalleFormFormaPagoPuntoVenta.jLabelautorizacionFormaPagoPuntoVenta,ConstantesMensajes.SMENSAJEEXCEPCION_VALIDACIONVALOR);
		}

		try {
			formapagopuntoventa.setvoucher(this.jInternalFrameDetalleFormFormaPagoPuntoVenta.jTextFieldvoucherFormaPagoPuntoVenta.getText());
		} catch(Exception e) {
			estaValidado=false;
			sMensajeCampoActual+="\r\n"+FormaPagoPuntoVentaConstantesFunciones.LABEL_VOUCHER+"-->"+ConstantesMensajes.SMENSAJEEXCEPCION_VALIDACIONVALOR;FuncionesSwing.mostrarCampoMensajeInvalido(false,this.jInternalFrameDetalleFormFormaPagoPuntoVenta.jLabelvoucherFormaPagoPuntoVenta,ConstantesMensajes.SMENSAJEEXCEPCION_VALIDACIONVALOR);
		}

		try {
			formapagopuntoventa.setlote(this.jInternalFrameDetalleFormFormaPagoPuntoVenta.jTextFieldloteFormaPagoPuntoVenta.getText());
		} catch(Exception e) {
			estaValidado=false;
			sMensajeCampoActual+="\r\n"+FormaPagoPuntoVentaConstantesFunciones.LABEL_LOTE+"-->"+ConstantesMensajes.SMENSAJEEXCEPCION_VALIDACIONVALOR;FuncionesSwing.mostrarCampoMensajeInvalido(false,this.jInternalFrameDetalleFormFormaPagoPuntoVenta.jLabelloteFormaPagoPuntoVenta,ConstantesMensajes.SMENSAJEEXCEPCION_VALIDACIONVALOR);
		}

		try {
			formapagopuntoventa.setcuota(Integer.parseInt(this.jInternalFrameDetalleFormFormaPagoPuntoVenta.jTextFieldcuotaFormaPagoPuntoVenta.getText()));
		} catch(Exception e) {
			estaValidado=false;
			sMensajeCampoActual+="\r\n"+FormaPagoPuntoVentaConstantesFunciones.LABEL_CUOTA+"-->"+ConstantesMensajes.SMENSAJEEXCEPCION_VALIDACIONVALOR;FuncionesSwing.mostrarCampoMensajeInvalido(false,this.jInternalFrameDetalleFormFormaPagoPuntoVenta.jLabelcuotaFormaPagoPuntoVenta,ConstantesMensajes.SMENSAJEEXCEPCION_VALIDACIONVALOR);
		}

		try {
			formapagopuntoventa.setvalor_retencion(Double.parseDouble(this.jInternalFrameDetalleFormFormaPagoPuntoVenta.jTextFieldvalor_retencionFormaPagoPuntoVenta.getText()));
		} catch(Exception e) {
			estaValidado=false;
			sMensajeCampoActual+="\r\n"+FormaPagoPuntoVentaConstantesFunciones.LABEL_VALORRETENCION+"-->"+ConstantesMensajes.SMENSAJEEXCEPCION_VALIDACIONVALOR;FuncionesSwing.mostrarCampoMensajeInvalido(false,this.jInternalFrameDetalleFormFormaPagoPuntoVenta.jLabelvalor_retencionFormaPagoPuntoVenta,ConstantesMensajes.SMENSAJEEXCEPCION_VALIDACIONVALOR);
		}

		try {
			formapagopuntoventa.setvalor_comision(Double.parseDouble(this.jInternalFrameDetalleFormFormaPagoPuntoVenta.jTextFieldvalor_comisionFormaPagoPuntoVenta.getText()));
		} catch(Exception e) {
			estaValidado=false;
			sMensajeCampoActual+="\r\n"+FormaPagoPuntoVentaConstantesFunciones.LABEL_VALORCOMISION+"-->"+ConstantesMensajes.SMENSAJEEXCEPCION_VALIDACIONVALOR;FuncionesSwing.mostrarCampoMensajeInvalido(false,this.jInternalFrameDetalleFormFormaPagoPuntoVenta.jLabelvalor_comisionFormaPagoPuntoVenta,ConstantesMensajes.SMENSAJEEXCEPCION_VALIDACIONVALOR);
		}

		try {
			formapagopuntoventa.setvalor_calculado(Double.parseDouble(this.jInternalFrameDetalleFormFormaPagoPuntoVenta.jTextFieldvalor_calculadoFormaPagoPuntoVenta.getText()));
		} catch(Exception e) {
			estaValidado=false;
			sMensajeCampoActual+="\r\n"+FormaPagoPuntoVentaConstantesFunciones.LABEL_VALORCALCULADO+"-->"+ConstantesMensajes.SMENSAJEEXCEPCION_VALIDACIONVALOR;FuncionesSwing.mostrarCampoMensajeInvalido(false,this.jInternalFrameDetalleFormFormaPagoPuntoVenta.jLabelvalor_calculadoFormaPagoPuntoVenta,ConstantesMensajes.SMENSAJEEXCEPCION_VALIDACIONVALOR);
		}

		try {
			formapagopuntoventa.setvalor_cancelado(Double.parseDouble(this.jInternalFrameDetalleFormFormaPagoPuntoVenta.jTextFieldvalor_canceladoFormaPagoPuntoVenta.getText()));
		} catch(Exception e) {
			estaValidado=false;
			sMensajeCampoActual+="\r\n"+FormaPagoPuntoVentaConstantesFunciones.LABEL_VALORCANCELADO+"-->"+ConstantesMensajes.SMENSAJEEXCEPCION_VALIDACIONVALOR;FuncionesSwing.mostrarCampoMensajeInvalido(false,this.jInternalFrameDetalleFormFormaPagoPuntoVenta.jLabelvalor_canceladoFormaPagoPuntoVenta,ConstantesMensajes.SMENSAJEEXCEPCION_VALIDACIONVALOR);
		}

		try {
			formapagopuntoventa.setvalor_difiere(Double.parseDouble(this.jInternalFrameDetalleFormFormaPagoPuntoVenta.jTextFieldvalor_difiereFormaPagoPuntoVenta.getText()));
		} catch(Exception e) {
			estaValidado=false;
			sMensajeCampoActual+="\r\n"+FormaPagoPuntoVentaConstantesFunciones.LABEL_VALORDIFIERE+"-->"+ConstantesMensajes.SMENSAJEEXCEPCION_VALIDACIONVALOR;FuncionesSwing.mostrarCampoMensajeInvalido(false,this.jInternalFrameDetalleFormFormaPagoPuntoVenta.jLabelvalor_difiereFormaPagoPuntoVenta,ConstantesMensajes.SMENSAJEEXCEPCION_VALIDACIONVALOR);
		}

		try {
			formapagopuntoventa.setnumero_retencion(this.jInternalFrameDetalleFormFormaPagoPuntoVenta.jTextFieldnumero_retencionFormaPagoPuntoVenta.getText());
		} catch(Exception e) {
			estaValidado=false;
			sMensajeCampoActual+="\r\n"+FormaPagoPuntoVentaConstantesFunciones.LABEL_NUMERORETENCION+"-->"+ConstantesMensajes.SMENSAJEEXCEPCION_VALIDACIONVALOR;FuncionesSwing.mostrarCampoMensajeInvalido(false,this.jInternalFrameDetalleFormFormaPagoPuntoVenta.jLabelnumero_retencionFormaPagoPuntoVenta,ConstantesMensajes.SMENSAJEEXCEPCION_VALIDACIONVALOR);
		}

		try {
			formapagopuntoventa.setnumero_liquidacion(this.jInternalFrameDetalleFormFormaPagoPuntoVenta.jTextFieldnumero_liquidacionFormaPagoPuntoVenta.getText());
		} catch(Exception e) {
			estaValidado=false;
			sMensajeCampoActual+="\r\n"+FormaPagoPuntoVentaConstantesFunciones.LABEL_NUMEROLIQUIDACION+"-->"+ConstantesMensajes.SMENSAJEEXCEPCION_VALIDACIONVALOR;FuncionesSwing.mostrarCampoMensajeInvalido(false,this.jInternalFrameDetalleFormFormaPagoPuntoVenta.jLabelnumero_liquidacionFormaPagoPuntoVenta,ConstantesMensajes.SMENSAJEEXCEPCION_VALIDACIONVALOR);
		}
			
			if(!estaValidado) {
				throw new Exception(sMensajeCampoActual);
			}
		} catch(NumberFormatException e) {
			throw new Exception(sMensajeCampoActual);
			//FuncionesSwing.manageException(this, e,logger,MovimientoInventarioConstantesFunciones.CLASSNAME);
		} catch(Exception e) {
			throw e;
			//FuncionesSwing.manageException(this, e,logger,FormaPagoPuntoVentaConstantesFunciones.CLASSNAME);
		}
	}
	
	public void setVariablesForeignKeyObjetoBeanDefectoActualToObjetoActualFormaPagoPuntoVenta(FormaPagoPuntoVenta formapagopuntoventaBean,FormaPagoPuntoVenta formapagopuntoventa,Boolean conDefault,Boolean conColumnasBase) throws Exception { 
		try {
			
			
		} catch(Exception e) {
			throw e;
			//FuncionesSwing.manageException(this, e,logger,FormaPagoPuntoVentaConstantesFunciones.CLASSNAME);
		}
	}
	
	public void setCopiarVariablesObjetosFormaPagoPuntoVenta(FormaPagoPuntoVenta formapagopuntoventaOrigen,FormaPagoPuntoVenta formapagopuntoventa,Boolean conDefault,Boolean conColumnasBase) throws Exception { 
		try {
			
			if(conColumnasBase) {if(conDefault || (!conDefault && formapagopuntoventaOrigen.getId()!=null && !formapagopuntoventaOrigen.getId().equals(0L))) {formapagopuntoventa.setId(formapagopuntoventaOrigen.getId());}}
			if(conDefault || (!conDefault && formapagopuntoventaOrigen.getporcentaje()!=null && !formapagopuntoventaOrigen.getporcentaje().equals(0.0))) {formapagopuntoventa.setporcentaje(formapagopuntoventaOrigen.getporcentaje());}
			if(conDefault || (!conDefault && formapagopuntoventaOrigen.getvalor()!=null && !formapagopuntoventaOrigen.getvalor().equals(0.0))) {formapagopuntoventa.setvalor(formapagopuntoventaOrigen.getvalor());}
			if(conDefault || (!conDefault && formapagopuntoventaOrigen.getfecha()!=null && !formapagopuntoventaOrigen.getfecha().equals(new Date()))) {formapagopuntoventa.setfecha(formapagopuntoventaOrigen.getfecha());}
			if(conDefault || (!conDefault && formapagopuntoventaOrigen.getdescripcion()!=null && !formapagopuntoventaOrigen.getdescripcion().equals(""))) {formapagopuntoventa.setdescripcion(formapagopuntoventaOrigen.getdescripcion());}
			if(conDefault || (!conDefault && formapagopuntoventaOrigen.getfecha_inicio()!=null && !formapagopuntoventaOrigen.getfecha_inicio().equals(new Date()))) {formapagopuntoventa.setfecha_inicio(formapagopuntoventaOrigen.getfecha_inicio());}
			if(conDefault || (!conDefault && formapagopuntoventaOrigen.getnumero_dias_plazo()!=null && !formapagopuntoventaOrigen.getnumero_dias_plazo().equals(0))) {formapagopuntoventa.setnumero_dias_plazo(formapagopuntoventaOrigen.getnumero_dias_plazo());}
			if(conDefault || (!conDefault && formapagopuntoventaOrigen.getfecha_fin()!=null && !formapagopuntoventaOrigen.getfecha_fin().equals(new Date()))) {formapagopuntoventa.setfecha_fin(formapagopuntoventaOrigen.getfecha_fin());}
			if(conDefault || (!conDefault && formapagopuntoventaOrigen.getnumero_cuenta()!=null && !formapagopuntoventaOrigen.getnumero_cuenta().equals(""))) {formapagopuntoventa.setnumero_cuenta(formapagopuntoventaOrigen.getnumero_cuenta());}
			if(conDefault || (!conDefault && formapagopuntoventaOrigen.getnumero_cheque()!=null && !formapagopuntoventaOrigen.getnumero_cheque().equals(""))) {formapagopuntoventa.setnumero_cheque(formapagopuntoventaOrigen.getnumero_cheque());}
			if(conDefault || (!conDefault && formapagopuntoventaOrigen.getgirador()!=null && !formapagopuntoventaOrigen.getgirador().equals(""))) {formapagopuntoventa.setgirador(formapagopuntoventaOrigen.getgirador());}
			if(conDefault || (!conDefault && formapagopuntoventaOrigen.getnumero()!=null && !formapagopuntoventaOrigen.getnumero().equals(""))) {formapagopuntoventa.setnumero(formapagopuntoventaOrigen.getnumero());}
			if(conDefault || (!conDefault && formapagopuntoventaOrigen.gettarjeta_habiente()!=null && !formapagopuntoventaOrigen.gettarjeta_habiente().equals(""))) {formapagopuntoventa.settarjeta_habiente(formapagopuntoventaOrigen.gettarjeta_habiente());}
			if(conDefault || (!conDefault && formapagopuntoventaOrigen.getautorizacion()!=null && !formapagopuntoventaOrigen.getautorizacion().equals(""))) {formapagopuntoventa.setautorizacion(formapagopuntoventaOrigen.getautorizacion());}
			if(conDefault || (!conDefault && formapagopuntoventaOrigen.getvoucher()!=null && !formapagopuntoventaOrigen.getvoucher().equals(""))) {formapagopuntoventa.setvoucher(formapagopuntoventaOrigen.getvoucher());}
			if(conDefault || (!conDefault && formapagopuntoventaOrigen.getlote()!=null && !formapagopuntoventaOrigen.getlote().equals(""))) {formapagopuntoventa.setlote(formapagopuntoventaOrigen.getlote());}
			if(conDefault || (!conDefault && formapagopuntoventaOrigen.getcuota()!=null && !formapagopuntoventaOrigen.getcuota().equals(0))) {formapagopuntoventa.setcuota(formapagopuntoventaOrigen.getcuota());}
			if(conDefault || (!conDefault && formapagopuntoventaOrigen.getvalor_retencion()!=null && !formapagopuntoventaOrigen.getvalor_retencion().equals(0.0))) {formapagopuntoventa.setvalor_retencion(formapagopuntoventaOrigen.getvalor_retencion());}
			if(conDefault || (!conDefault && formapagopuntoventaOrigen.getvalor_comision()!=null && !formapagopuntoventaOrigen.getvalor_comision().equals(0.0))) {formapagopuntoventa.setvalor_comision(formapagopuntoventaOrigen.getvalor_comision());}
			if(conDefault || (!conDefault && formapagopuntoventaOrigen.getvalor_calculado()!=null && !formapagopuntoventaOrigen.getvalor_calculado().equals(0.0))) {formapagopuntoventa.setvalor_calculado(formapagopuntoventaOrigen.getvalor_calculado());}
			if(conDefault || (!conDefault && formapagopuntoventaOrigen.getvalor_cancelado()!=null && !formapagopuntoventaOrigen.getvalor_cancelado().equals(0.0))) {formapagopuntoventa.setvalor_cancelado(formapagopuntoventaOrigen.getvalor_cancelado());}
			if(conDefault || (!conDefault && formapagopuntoventaOrigen.getvalor_difiere()!=null && !formapagopuntoventaOrigen.getvalor_difiere().equals(0.0))) {formapagopuntoventa.setvalor_difiere(formapagopuntoventaOrigen.getvalor_difiere());}
			if(conDefault || (!conDefault && formapagopuntoventaOrigen.getnumero_retencion()!=null && !formapagopuntoventaOrigen.getnumero_retencion().equals(""))) {formapagopuntoventa.setnumero_retencion(formapagopuntoventaOrigen.getnumero_retencion());}
			if(conDefault || (!conDefault && formapagopuntoventaOrigen.getnumero_liquidacion()!=null && !formapagopuntoventaOrigen.getnumero_liquidacion().equals(""))) {formapagopuntoventa.setnumero_liquidacion(formapagopuntoventaOrigen.getnumero_liquidacion());}
			
		} catch(Exception e) {
			throw e;
			//FuncionesSwing.manageException(this, e,logger,FormaPagoPuntoVentaConstantesFunciones.CLASSNAME);
		}
	}
	
	/*
	public void setVariablesObjetoBeanActualToFormularioFormaPagoPuntoVenta(FormaPagoPuntoVenta formapagopuntoventa) throws Exception { 
		try {
			
			this.jInternalFrameDetalleFormFormaPagoPuntoVenta.jLabelidFormaPagoPuntoVenta.setText(formapagopuntoventa.getId().toString());
			this.jInternalFrameDetalleFormFormaPagoPuntoVenta.jTextFieldporcentajeFormaPagoPuntoVenta.setText(formapagopuntoventa.getporcentaje().toString());
			this.jInternalFrameDetalleFormFormaPagoPuntoVenta.jTextFieldvalorFormaPagoPuntoVenta.setText(formapagopuntoventa.getvalor().toString());
			this.jInternalFrameDetalleFormFormaPagoPuntoVenta.jDateChooserfechaFormaPagoPuntoVenta.setDate(formapagopuntoventa.getfecha());
			this.jInternalFrameDetalleFormFormaPagoPuntoVenta.jTextAreadescripcionFormaPagoPuntoVenta.setText(formapagopuntoventa.getdescripcion());
			this.jInternalFrameDetalleFormFormaPagoPuntoVenta.jDateChooserfecha_inicioFormaPagoPuntoVenta.setDate(formapagopuntoventa.getfecha_inicio());
			this.jInternalFrameDetalleFormFormaPagoPuntoVenta.jTextFieldnumero_dias_plazoFormaPagoPuntoVenta.setText(formapagopuntoventa.getnumero_dias_plazo().toString());
			this.jInternalFrameDetalleFormFormaPagoPuntoVenta.jDateChooserfecha_finFormaPagoPuntoVenta.setDate(formapagopuntoventa.getfecha_fin());
			this.jInternalFrameDetalleFormFormaPagoPuntoVenta.jTextFieldnumero_cuentaFormaPagoPuntoVenta.setText(formapagopuntoventa.getnumero_cuenta());
			this.jInternalFrameDetalleFormFormaPagoPuntoVenta.jTextFieldnumero_chequeFormaPagoPuntoVenta.setText(formapagopuntoventa.getnumero_cheque());
			this.jInternalFrameDetalleFormFormaPagoPuntoVenta.jTextAreagiradorFormaPagoPuntoVenta.setText(formapagopuntoventa.getgirador());
			this.jInternalFrameDetalleFormFormaPagoPuntoVenta.jTextFieldnumeroFormaPagoPuntoVenta.setText(formapagopuntoventa.getnumero());
			this.jInternalFrameDetalleFormFormaPagoPuntoVenta.jTextAreatarjeta_habienteFormaPagoPuntoVenta.setText(formapagopuntoventa.gettarjeta_habiente());
			this.jInternalFrameDetalleFormFormaPagoPuntoVenta.jTextAreaautorizacionFormaPagoPuntoVenta.setText(formapagopuntoventa.getautorizacion());
			this.jInternalFrameDetalleFormFormaPagoPuntoVenta.jTextFieldvoucherFormaPagoPuntoVenta.setText(formapagopuntoventa.getvoucher());
			this.jInternalFrameDetalleFormFormaPagoPuntoVenta.jTextFieldloteFormaPagoPuntoVenta.setText(formapagopuntoventa.getlote());
			this.jInternalFrameDetalleFormFormaPagoPuntoVenta.jTextFieldcuotaFormaPagoPuntoVenta.setText(formapagopuntoventa.getcuota().toString());
			this.jInternalFrameDetalleFormFormaPagoPuntoVenta.jTextFieldvalor_retencionFormaPagoPuntoVenta.setText(formapagopuntoventa.getvalor_retencion().toString());
			this.jInternalFrameDetalleFormFormaPagoPuntoVenta.jTextFieldvalor_comisionFormaPagoPuntoVenta.setText(formapagopuntoventa.getvalor_comision().toString());
			this.jInternalFrameDetalleFormFormaPagoPuntoVenta.jTextFieldvalor_calculadoFormaPagoPuntoVenta.setText(formapagopuntoventa.getvalor_calculado().toString());
			this.jInternalFrameDetalleFormFormaPagoPuntoVenta.jTextFieldvalor_canceladoFormaPagoPuntoVenta.setText(formapagopuntoventa.getvalor_cancelado().toString());
			this.jInternalFrameDetalleFormFormaPagoPuntoVenta.jTextFieldvalor_difiereFormaPagoPuntoVenta.setText(formapagopuntoventa.getvalor_difiere().toString());
			this.jInternalFrameDetalleFormFormaPagoPuntoVenta.jTextFieldnumero_retencionFormaPagoPuntoVenta.setText(formapagopuntoventa.getnumero_retencion());
			this.jInternalFrameDetalleFormFormaPagoPuntoVenta.jTextFieldnumero_liquidacionFormaPagoPuntoVenta.setText(formapagopuntoventa.getnumero_liquidacion());
			
		} catch(Exception e) {
			FuncionesSwing.manageException(this, e,logger,FormaPagoPuntoVentaConstantesFunciones.CLASSNAME);
		}
	}
	*/
	
	/*
	public void setVariablesObjetoBeanActualToFormularioFormaPagoPuntoVenta(FormaPagoPuntoVentaBean formapagopuntoventaBean) throws Exception { 
		try {
			
			this.jInternalFrameDetalleFormFormaPagoPuntoVenta.jLabelidFormaPagoPuntoVenta.setText(formapagopuntoventaBean.getId().toString());
			this.jInternalFrameDetalleFormFormaPagoPuntoVenta.jTextFieldporcentajeFormaPagoPuntoVenta.setText(formapagopuntoventaBean.getporcentaje().toString());
			this.jInternalFrameDetalleFormFormaPagoPuntoVenta.jTextFieldvalorFormaPagoPuntoVenta.setText(formapagopuntoventaBean.getvalor().toString());
			this.jInternalFrameDetalleFormFormaPagoPuntoVenta.jDateChooserfechaFormaPagoPuntoVenta.setDate(formapagopuntoventaBean.getfecha());
			this.jInternalFrameDetalleFormFormaPagoPuntoVenta.jTextAreadescripcionFormaPagoPuntoVenta.setText(formapagopuntoventaBean.getdescripcion());
			this.jInternalFrameDetalleFormFormaPagoPuntoVenta.jDateChooserfecha_inicioFormaPagoPuntoVenta.setDate(formapagopuntoventaBean.getfecha_inicio());
			this.jInternalFrameDetalleFormFormaPagoPuntoVenta.jTextFieldnumero_dias_plazoFormaPagoPuntoVenta.setText(formapagopuntoventaBean.getnumero_dias_plazo().toString());
			this.jInternalFrameDetalleFormFormaPagoPuntoVenta.jDateChooserfecha_finFormaPagoPuntoVenta.setDate(formapagopuntoventaBean.getfecha_fin());
			this.jInternalFrameDetalleFormFormaPagoPuntoVenta.jTextFieldnumero_cuentaFormaPagoPuntoVenta.setText(formapagopuntoventaBean.getnumero_cuenta());
			this.jInternalFrameDetalleFormFormaPagoPuntoVenta.jTextFieldnumero_chequeFormaPagoPuntoVenta.setText(formapagopuntoventaBean.getnumero_cheque());
			this.jInternalFrameDetalleFormFormaPagoPuntoVenta.jTextAreagiradorFormaPagoPuntoVenta.setText(formapagopuntoventaBean.getgirador());
			this.jInternalFrameDetalleFormFormaPagoPuntoVenta.jTextFieldnumeroFormaPagoPuntoVenta.setText(formapagopuntoventaBean.getnumero());
			this.jInternalFrameDetalleFormFormaPagoPuntoVenta.jTextAreatarjeta_habienteFormaPagoPuntoVenta.setText(formapagopuntoventaBean.gettarjeta_habiente());
			this.jInternalFrameDetalleFormFormaPagoPuntoVenta.jTextAreaautorizacionFormaPagoPuntoVenta.setText(formapagopuntoventaBean.getautorizacion());
			this.jInternalFrameDetalleFormFormaPagoPuntoVenta.jTextFieldvoucherFormaPagoPuntoVenta.setText(formapagopuntoventaBean.getvoucher());
			this.jInternalFrameDetalleFormFormaPagoPuntoVenta.jTextFieldloteFormaPagoPuntoVenta.setText(formapagopuntoventaBean.getlote());
			this.jInternalFrameDetalleFormFormaPagoPuntoVenta.jTextFieldcuotaFormaPagoPuntoVenta.setText(formapagopuntoventaBean.getcuota().toString());
			this.jInternalFrameDetalleFormFormaPagoPuntoVenta.jTextFieldvalor_retencionFormaPagoPuntoVenta.setText(formapagopuntoventaBean.getvalor_retencion().toString());
			this.jInternalFrameDetalleFormFormaPagoPuntoVenta.jTextFieldvalor_comisionFormaPagoPuntoVenta.setText(formapagopuntoventaBean.getvalor_comision().toString());
			this.jInternalFrameDetalleFormFormaPagoPuntoVenta.jTextFieldvalor_calculadoFormaPagoPuntoVenta.setText(formapagopuntoventaBean.getvalor_calculado().toString());
			this.jInternalFrameDetalleFormFormaPagoPuntoVenta.jTextFieldvalor_canceladoFormaPagoPuntoVenta.setText(formapagopuntoventaBean.getvalor_cancelado().toString());
			this.jInternalFrameDetalleFormFormaPagoPuntoVenta.jTextFieldvalor_difiereFormaPagoPuntoVenta.setText(formapagopuntoventaBean.getvalor_difiere().toString());
			this.jInternalFrameDetalleFormFormaPagoPuntoVenta.jTextFieldnumero_retencionFormaPagoPuntoVenta.setText(formapagopuntoventaBean.getnumero_retencion());
			this.jInternalFrameDetalleFormFormaPagoPuntoVenta.jTextFieldnumero_liquidacionFormaPagoPuntoVenta.setText(formapagopuntoventaBean.getnumero_liquidacion());
			
		} catch(Exception e) {
			FuncionesSwing.manageException(this, e,logger,FormaPagoPuntoVentaConstantesFunciones.CLASSNAME);
		}
	}
	*/
	
	/*
	public void setVariablesObjetoReturnGeneralToBeanFormaPagoPuntoVenta(FormaPagoPuntoVentaParameterReturnGeneral formapagopuntoventaReturnGeneral,FormaPagoPuntoVentaBean formapagopuntoventaBean,Boolean conDefault) throws Exception { 
		try {
			FormaPagoPuntoVenta formapagopuntoventaLocal=new FormaPagoPuntoVenta();
			
			formapagopuntoventaLocal=formapagopuntoventaReturnGeneral.getFormaPagoPuntoVenta();
			
			
			if(conColumnasBase) {if(conDefault || (!conDefault && formapagopuntoventaLocal.getId()!=null && !formapagopuntoventaLocal.getId().equals(0L))) {formapagopuntoventaBean.setId(formapagopuntoventaLocal.getId());}}
			if(conDefault || (!conDefault && formapagopuntoventaLocal.getporcentaje()!=null && !formapagopuntoventaLocal.getporcentaje().equals(0.0))) {formapagopuntoventaBean.setporcentaje(formapagopuntoventaLocal.getporcentaje());}
			if(conDefault || (!conDefault && formapagopuntoventaLocal.getvalor()!=null && !formapagopuntoventaLocal.getvalor().equals(0.0))) {formapagopuntoventaBean.setvalor(formapagopuntoventaLocal.getvalor());}
			if(conDefault || (!conDefault && formapagopuntoventaLocal.getfecha()!=null && !formapagopuntoventaLocal.getfecha().equals(new Date()))) {formapagopuntoventaBean.setfecha(formapagopuntoventaLocal.getfecha());}
			if(conDefault || (!conDefault && formapagopuntoventaLocal.getdescripcion()!=null && !formapagopuntoventaLocal.getdescripcion().equals(""))) {formapagopuntoventaBean.setdescripcion(formapagopuntoventaLocal.getdescripcion());}
			if(conDefault || (!conDefault && formapagopuntoventaLocal.getfecha_inicio()!=null && !formapagopuntoventaLocal.getfecha_inicio().equals(new Date()))) {formapagopuntoventaBean.setfecha_inicio(formapagopuntoventaLocal.getfecha_inicio());}
			if(conDefault || (!conDefault && formapagopuntoventaLocal.getnumero_dias_plazo()!=null && !formapagopuntoventaLocal.getnumero_dias_plazo().equals(0))) {formapagopuntoventaBean.setnumero_dias_plazo(formapagopuntoventaLocal.getnumero_dias_plazo());}
			if(conDefault || (!conDefault && formapagopuntoventaLocal.getfecha_fin()!=null && !formapagopuntoventaLocal.getfecha_fin().equals(new Date()))) {formapagopuntoventaBean.setfecha_fin(formapagopuntoventaLocal.getfecha_fin());}
			if(conDefault || (!conDefault && formapagopuntoventaLocal.getnumero_cuenta()!=null && !formapagopuntoventaLocal.getnumero_cuenta().equals(""))) {formapagopuntoventaBean.setnumero_cuenta(formapagopuntoventaLocal.getnumero_cuenta());}
			if(conDefault || (!conDefault && formapagopuntoventaLocal.getnumero_cheque()!=null && !formapagopuntoventaLocal.getnumero_cheque().equals(""))) {formapagopuntoventaBean.setnumero_cheque(formapagopuntoventaLocal.getnumero_cheque());}
			if(conDefault || (!conDefault && formapagopuntoventaLocal.getgirador()!=null && !formapagopuntoventaLocal.getgirador().equals(""))) {formapagopuntoventaBean.setgirador(formapagopuntoventaLocal.getgirador());}
			if(conDefault || (!conDefault && formapagopuntoventaLocal.getnumero()!=null && !formapagopuntoventaLocal.getnumero().equals(""))) {formapagopuntoventaBean.setnumero(formapagopuntoventaLocal.getnumero());}
			if(conDefault || (!conDefault && formapagopuntoventaLocal.gettarjeta_habiente()!=null && !formapagopuntoventaLocal.gettarjeta_habiente().equals(""))) {formapagopuntoventaBean.settarjeta_habiente(formapagopuntoventaLocal.gettarjeta_habiente());}
			if(conDefault || (!conDefault && formapagopuntoventaLocal.getautorizacion()!=null && !formapagopuntoventaLocal.getautorizacion().equals(""))) {formapagopuntoventaBean.setautorizacion(formapagopuntoventaLocal.getautorizacion());}
			if(conDefault || (!conDefault && formapagopuntoventaLocal.getvoucher()!=null && !formapagopuntoventaLocal.getvoucher().equals(""))) {formapagopuntoventaBean.setvoucher(formapagopuntoventaLocal.getvoucher());}
			if(conDefault || (!conDefault && formapagopuntoventaLocal.getlote()!=null && !formapagopuntoventaLocal.getlote().equals(""))) {formapagopuntoventaBean.setlote(formapagopuntoventaLocal.getlote());}
			if(conDefault || (!conDefault && formapagopuntoventaLocal.getcuota()!=null && !formapagopuntoventaLocal.getcuota().equals(0))) {formapagopuntoventaBean.setcuota(formapagopuntoventaLocal.getcuota());}
			if(conDefault || (!conDefault && formapagopuntoventaLocal.getvalor_retencion()!=null && !formapagopuntoventaLocal.getvalor_retencion().equals(0.0))) {formapagopuntoventaBean.setvalor_retencion(formapagopuntoventaLocal.getvalor_retencion());}
			if(conDefault || (!conDefault && formapagopuntoventaLocal.getvalor_comision()!=null && !formapagopuntoventaLocal.getvalor_comision().equals(0.0))) {formapagopuntoventaBean.setvalor_comision(formapagopuntoventaLocal.getvalor_comision());}
			if(conDefault || (!conDefault && formapagopuntoventaLocal.getvalor_calculado()!=null && !formapagopuntoventaLocal.getvalor_calculado().equals(0.0))) {formapagopuntoventaBean.setvalor_calculado(formapagopuntoventaLocal.getvalor_calculado());}
			if(conDefault || (!conDefault && formapagopuntoventaLocal.getvalor_cancelado()!=null && !formapagopuntoventaLocal.getvalor_cancelado().equals(0.0))) {formapagopuntoventaBean.setvalor_cancelado(formapagopuntoventaLocal.getvalor_cancelado());}
			if(conDefault || (!conDefault && formapagopuntoventaLocal.getvalor_difiere()!=null && !formapagopuntoventaLocal.getvalor_difiere().equals(0.0))) {formapagopuntoventaBean.setvalor_difiere(formapagopuntoventaLocal.getvalor_difiere());}
			if(conDefault || (!conDefault && formapagopuntoventaLocal.getnumero_retencion()!=null && !formapagopuntoventaLocal.getnumero_retencion().equals(""))) {formapagopuntoventaBean.setnumero_retencion(formapagopuntoventaLocal.getnumero_retencion());}
			if(conDefault || (!conDefault && formapagopuntoventaLocal.getnumero_liquidacion()!=null && !formapagopuntoventaLocal.getnumero_liquidacion().equals(""))) {formapagopuntoventaBean.setnumero_liquidacion(formapagopuntoventaLocal.getnumero_liquidacion());}
			
		} catch(Exception e) {
			FuncionesSwing.manageException(this, e,logger,FormaPagoPuntoVentaConstantesFunciones.CLASSNAME);
		}
	}
	*/
	
	@SuppressWarnings("rawtypes")
	public static void setActualComboBoxFormaPagoPuntoVentaGenerico(Long idFormaPagoPuntoVentaSeleccionado,JComboBox jComboBoxFormaPagoPuntoVenta,List<FormaPagoPuntoVenta> formapagopuntoventasLocal)throws Exception {
		try {
			FormaPagoPuntoVenta  formapagopuntoventaTemp=null;

			for(FormaPagoPuntoVenta formapagopuntoventaAux:formapagopuntoventasLocal) {
				if(formapagopuntoventaAux.getId()!=null && formapagopuntoventaAux.getId().equals(idFormaPagoPuntoVentaSeleccionado)) {
					formapagopuntoventaTemp=formapagopuntoventaAux;
					break;
				}
			}

			jComboBoxFormaPagoPuntoVenta.setSelectedItem(formapagopuntoventaTemp);

		} catch(Exception e) {
			throw e;
		}
	}
	
	@SuppressWarnings("rawtypes")
	public static void setHotKeysComboBoxFormaPagoPuntoVentaGenerico(JComboBox jComboBoxFormaPagoPuntoVenta,JInternalFrameBase jInternalFrameBase,String sNombreHotKeyAbstractAction,String sTipoBusqueda)throws Exception {
		try {
			//GLOBAL(id_empresa,id_sucursal,id_ejercicio)
			//BASICO(normal)
			//CON_BUSQUEDA(Permite buscar Fk)
			
			String sKeyStrokeName="";
			KeyStroke keyStrokeControl=null;
			
			if(!sTipoBusqueda.equals("GLOBAL")) {
				
				//BUSCAR
				sKeyStrokeName = FuncionesSwing.getKeyNameControl("CONTROL_BUSCAR");
				keyStrokeControl=FuncionesSwing.getKeyStrokeControl("CONTROL_BUSCAR");
				
				jComboBoxFormaPagoPuntoVenta.getInputMap().put(keyStrokeControl, sKeyStrokeName);
				jComboBoxFormaPagoPuntoVenta.getActionMap().put(sKeyStrokeName, new ButtonAbstractAction(jInternalFrameBase,sNombreHotKeyAbstractAction+"Busqueda"));
				//BUSCAR
				
				
				//ACTUALIZAR
				sKeyStrokeName = FuncionesSwing.getKeyNameControl("CONTROL_ACTUALIZAR");
				keyStrokeControl=FuncionesSwing.getKeyStrokeControl("CONTROL_ACTUALIZAR");
				
				jComboBoxFormaPagoPuntoVenta.getInputMap().put(keyStrokeControl, sKeyStrokeName);
				jComboBoxFormaPagoPuntoVenta.getActionMap().put(sKeyStrokeName, new ButtonAbstractAction(jInternalFrameBase,sNombreHotKeyAbstractAction+"Update"));
				//ACTUALIZAR
				
				if(sTipoBusqueda.contains("CON_EVENT_CHANGE")) {
					if(Constantes2.CON_COMBOBOX_ITEMLISTENER) {
						jComboBoxFormaPagoPuntoVenta.addFocusListener(new ComboBoxFocusListener(jInternalFrameBase,sNombreHotKeyAbstractAction));
						jComboBoxFormaPagoPuntoVenta.addActionListener(new ComboBoxActionListener(jInternalFrameBase,sNombreHotKeyAbstractAction));						
					}
					
					/*
					if(Constantes2.CON_COMBOBOX_ITEMLISTENER) {
						jComboBoxFormaPagoPuntoVenta.addItemListener(new ComboBoxItemListener(jInternalFrameBase,sNombreHotKeyAbstractAction));
					} else {
						jComboBoxFormaPagoPuntoVenta.addActionListener(new ComboBoxActionListener(jInternalFrameBase,sNombreHotKeyAbstractAction));
					}
					*/
				}								
				
				//CON_BUSQUEDA								
				if(sTipoBusqueda.contains("CON_BUSQUEDA")) {
					sKeyStrokeName = FuncionesSwing.getKeyNameControl("CONTROL_BUSQUEDA");
					keyStrokeControl=FuncionesSwing.getKeyStrokeControl("CONTROL_BUSQUEDA");
							
					jComboBoxFormaPagoPuntoVenta.getInputMap().put(keyStrokeControl, sKeyStrokeName);
					jComboBoxFormaPagoPuntoVenta.getActionMap().put(sKeyStrokeName, new ButtonAbstractAction(jInternalFrameBase,sNombreHotKeyAbstractAction));
				}
				//CON_BUSQUEDA
				
				
			}
		} catch(Exception e) {
			throw e;
		}
	}
	
	//PARA INICIALIZAR CONTROLES DE TABLA
	@SuppressWarnings("rawtypes")
	public void setHotKeysComboBoxGenerico(JComboBox jComboBox,JInternalFrameBase jInternalFrameBase,String sNombreHotKeyAbstractAction,String sTipoBusqueda) {
		if(sTipoBusqueda.contains("CON_EVENT_CHANGE")) {
			if(Constantes2.CON_COMBOBOX_ITEMLISTENER) {
				jComboBox.addItemListener(new ComboBoxItemListener(jInternalFrameBase,sNombreHotKeyAbstractAction));
				jComboBox.addFocusListener(new ComboBoxFocusListener(jInternalFrameBase,sNombreHotKeyAbstractAction));
			} else {
				jComboBox.addActionListener(new ComboBoxActionListener(jInternalFrameBase,sNombreHotKeyAbstractAction));
				jComboBox.addFocusListener(new ComboBoxFocusListener(jInternalFrameBase,sNombreHotKeyAbstractAction));
			}
		}
	}
	
	//PARA INICIALIZAR CONTROLES DE TABLA
	public void setHotKeysJTextFieldGenerico(JTextField jTextField,JInternalFrameBase jInternalFrameBase,String sNombreHotKeyAbstractAction,String sTipoBusqueda) {
		jTextField.addFocusListener(new TextFieldFocusListener(jInternalFrameBase,sNombreHotKeyAbstractAction));
		jTextField.addActionListener(new TextFieldActionListener(jInternalFrameBase,sNombreHotKeyAbstractAction));
	}
	
	//PARA INICIALIZAR CONTROLES DE TABLA
	public void setHotKeysJTextAreaGenerico(JTextArea jTextArea,JInternalFrameBase jInternalFrameBase,String sNombreHotKeyAbstractAction,String sTipoBusqueda) {
		jTextArea.addFocusListener(new TextAreaFocusListener(jInternalFrameBase,sNombreHotKeyAbstractAction));
		
		//NO EXISTE
		//jTextArea.addActionListener(new TextAreaActionListener(jInternalFrameBase,sNombreHotKeyAbstractAction));
	}
	
	//PARA INICIALIZAR CONTROLES DE TABLA
	public void setHotKeysJLabelGenerico(JLabel jLabel,JInternalFrameBase jInternalFrameBase,String sNombreHotKeyAbstractAction,String sTipoBusqueda) {
		jLabel.addFocusListener(new LabelFocusListener(jInternalFrameBase,sNombreHotKeyAbstractAction));
		
		//NO EXISTE
		//jLabel.addActionListener(new LabelActionListener(jInternalFrameBase,sNombreHotKeyAbstractAction));
	}
	
	//PARA INICIALIZAR CONTROLES DE TABLA
	public void setHotKeysJCheckBoxGenerico(JCheckBox jCheckBox,JInternalFrameBase jInternalFrameBase,String sNombreHotKeyAbstractAction,String sTipoBusqueda) {
		jCheckBox.addFocusListener(new CheckBoxFocusListener(jInternalFrameBase,sNombreHotKeyAbstractAction));
		
		//SI SE DEFINE AL CAMBIAR VALOR, ESTE NUEVO VALOR NO SE ENVIA AL EVENTO
		//jCheckBox.addItemListener(new CheckBoxItemListener(jInternalFrameBase,sNombreHotKeyAbstractAction));
	}
	
	//PARA INICIALIZAR CONTROLES DE TABLA
	public void setHotKeysJDateChooserGenerico(JDateChooser jDateChooser,JInternalFrameBase jInternalFrameBase,String sNombreHotKeyAbstractAction,String sTipoBusqueda) {
		FuncionesSwing.addDateListener(jDateChooser, jInternalFrameBase, sNombreHotKeyAbstractAction);
	}
	
	//PARA INICIALIZAR CONTROLES DE TABLA
	public void setHotKeysJButtonGenerico(JButton jButton,JInternalFrameBase jInternalFrameBase,String sNombreHotKeyAbstractAction,String sTipoBusqueda) {
		jButton.addActionListener(new ButtonActionListener(jInternalFrameBase,sNombreHotKeyAbstractAction));
	}
	
	public void jButtonRelacionActionPerformed(String sTipo,ActionEvent evt,int rowIndex,Boolean conInicializar,Boolean esRelacionado) {
		//ABRIR RELACIONES
		try {
			
		} catch (Exception e) {
			FuncionesSwing.manageException2(this, e,logger,FormaPagoPuntoVentaConstantesFunciones.CLASSNAME);
		}
	}
	
	public String getDescripcionFk(String sTipo,JTable table,Object value,int intSelectedRow) throws Exception {
		//DESCRIPCIONES FK		
		String sDescripcion="";
		
		if(Constantes.ISUSAEJBLOGICLAYER) {
			formapagopuntoventa=(FormaPagoPuntoVenta) formapagopuntoventaLogic.getFormaPagoPuntoVentas().toArray()[table.convertRowIndexToModel(intSelectedRow)];
		} else if(Constantes.ISUSAEJBREMOTE) {
			formapagopuntoventa =(FormaPagoPuntoVenta) formapagopuntoventas.toArray()[table.convertRowIndexToModel(intSelectedRow)];
		}
					
		
		if(sTipo.equals("Empresa")) {
			//sDescripcion=this.getActualEmpresaForeignKeyDescripcion((Long)value);
			if(!formapagopuntoventa.getIsNew() && !formapagopuntoventa.getIsChanged() && !formapagopuntoventa.getIsDeleted()) {
				sDescripcion=formapagopuntoventa.getempresa_descripcion();
			} else {
				//sDescripcion=this.getActualEmpresaForeignKeyDescripcion((Long)value);
				sDescripcion=formapagopuntoventa.getempresa_descripcion();
			}
		}

		if(sTipo.equals("Sucursal")) {
			//sDescripcion=this.getActualSucursalForeignKeyDescripcion((Long)value);
			if(!formapagopuntoventa.getIsNew() && !formapagopuntoventa.getIsChanged() && !formapagopuntoventa.getIsDeleted()) {
				sDescripcion=formapagopuntoventa.getsucursal_descripcion();
			} else {
				//sDescripcion=this.getActualSucursalForeignKeyDescripcion((Long)value);
				sDescripcion=formapagopuntoventa.getsucursal_descripcion();
			}
		}

		if(sTipo.equals("Ejercicio")) {
			//sDescripcion=this.getActualEjercicioForeignKeyDescripcion((Long)value);
			if(!formapagopuntoventa.getIsNew() && !formapagopuntoventa.getIsChanged() && !formapagopuntoventa.getIsDeleted()) {
				sDescripcion=formapagopuntoventa.getejercicio_descripcion();
			} else {
				//sDescripcion=this.getActualEjercicioForeignKeyDescripcion((Long)value);
				sDescripcion=formapagopuntoventa.getejercicio_descripcion();
			}
		}

		if(sTipo.equals("Periodo")) {
			//sDescripcion=this.getActualPeriodoForeignKeyDescripcion((Long)value);
			if(!formapagopuntoventa.getIsNew() && !formapagopuntoventa.getIsChanged() && !formapagopuntoventa.getIsDeleted()) {
				sDescripcion=formapagopuntoventa.getperiodo_descripcion();
			} else {
				//sDescripcion=this.getActualPeriodoForeignKeyDescripcion((Long)value);
				sDescripcion=formapagopuntoventa.getperiodo_descripcion();
			}
		}

		if(sTipo.equals("FacturaPuntoVenta")) {
			//sDescripcion=this.getActualFacturaPuntoVentaForeignKeyDescripcion((Long)value);
			if(!formapagopuntoventa.getIsNew() && !formapagopuntoventa.getIsChanged() && !formapagopuntoventa.getIsDeleted()) {
				sDescripcion=formapagopuntoventa.getfacturapuntoventa_descripcion();
			} else {
				//sDescripcion=this.getActualFacturaPuntoVentaForeignKeyDescripcion((Long)value);
				sDescripcion=formapagopuntoventa.getfacturapuntoventa_descripcion();
			}
		}

		if(sTipo.equals("TipoFormaPago")) {
			//sDescripcion=this.getActualTipoFormaPagoForeignKeyDescripcion((Long)value);
			if(!formapagopuntoventa.getIsNew() && !formapagopuntoventa.getIsChanged() && !formapagopuntoventa.getIsDeleted()) {
				sDescripcion=formapagopuntoventa.gettipoformapago_descripcion();
			} else {
				//sDescripcion=this.getActualTipoFormaPagoForeignKeyDescripcion((Long)value);
				sDescripcion=formapagopuntoventa.gettipoformapago_descripcion();
			}
		}

		if(sTipo.equals("Banco")) {
			//sDescripcion=this.getActualBancoForeignKeyDescripcion((Long)value);
			if(!formapagopuntoventa.getIsNew() && !formapagopuntoventa.getIsChanged() && !formapagopuntoventa.getIsDeleted()) {
				sDescripcion=formapagopuntoventa.getbanco_descripcion();
			} else {
				//sDescripcion=this.getActualBancoForeignKeyDescripcion((Long)value);
				sDescripcion=formapagopuntoventa.getbanco_descripcion();
			}
		}

		if(sTipo.equals("CuentaBancoPunVen")) {
			//sDescripcion=this.getActualCuentaBancoPunVenForeignKeyDescripcion((Long)value);
			if(!formapagopuntoventa.getIsNew() && !formapagopuntoventa.getIsChanged() && !formapagopuntoventa.getIsDeleted()) {
				sDescripcion=formapagopuntoventa.getcuentabancopunven_descripcion();
			} else {
				//sDescripcion=this.getActualCuentaBancoPunVenForeignKeyDescripcion((Long)value);
				sDescripcion=formapagopuntoventa.getcuentabancopunven_descripcion();
			}
		}

		if(sTipo.equals("TipoRiesgoCheque")) {
			//sDescripcion=this.getActualTipoRiesgoChequeForeignKeyDescripcion((Long)value);
			if(!formapagopuntoventa.getIsNew() && !formapagopuntoventa.getIsChanged() && !formapagopuntoventa.getIsDeleted()) {
				sDescripcion=formapagopuntoventa.gettiporiesgocheque_descripcion();
			} else {
				//sDescripcion=this.getActualTipoRiesgoChequeForeignKeyDescripcion((Long)value);
				sDescripcion=formapagopuntoventa.gettiporiesgocheque_descripcion();
			}
		}

		if(sTipo.equals("BancoTarjeta")) {
			//sDescripcion=this.getActualBancoTarjetaForeignKeyDescripcion((Long)value);
			if(!formapagopuntoventa.getIsNew() && !formapagopuntoventa.getIsChanged() && !formapagopuntoventa.getIsDeleted()) {
				sDescripcion=formapagopuntoventa.getbancotarjeta_descripcion();
			} else {
				//sDescripcion=this.getActualBancoTarjetaForeignKeyDescripcion((Long)value);
				sDescripcion=formapagopuntoventa.getbancotarjeta_descripcion();
			}
		}

		if(sTipo.equals("TarjetaCredito")) {
			//sDescripcion=this.getActualTarjetaCreditoForeignKeyDescripcion((Long)value);
			if(!formapagopuntoventa.getIsNew() && !formapagopuntoventa.getIsChanged() && !formapagopuntoventa.getIsDeleted()) {
				sDescripcion=formapagopuntoventa.gettarjetacredito_descripcion();
			} else {
				//sDescripcion=this.getActualTarjetaCreditoForeignKeyDescripcion((Long)value);
				sDescripcion=formapagopuntoventa.gettarjetacredito_descripcion();
			}
		}

		if(sTipo.equals("TipoInteresTarjeta")) {
			//sDescripcion=this.getActualTipoInteresTarjetaForeignKeyDescripcion((Long)value);
			if(!formapagopuntoventa.getIsNew() && !formapagopuntoventa.getIsChanged() && !formapagopuntoventa.getIsDeleted()) {
				sDescripcion=formapagopuntoventa.gettipointerestarjeta_descripcion();
			} else {
				//sDescripcion=this.getActualTipoInteresTarjetaForeignKeyDescripcion((Long)value);
				sDescripcion=formapagopuntoventa.gettipointerestarjeta_descripcion();
			}
		}

		if(sTipo.equals("TipoPagoTarjeta")) {
			//sDescripcion=this.getActualTipoPagoTarjetaForeignKeyDescripcion((Long)value);
			if(!formapagopuntoventa.getIsNew() && !formapagopuntoventa.getIsChanged() && !formapagopuntoventa.getIsDeleted()) {
				sDescripcion=formapagopuntoventa.gettipopagotarjeta_descripcion();
			} else {
				//sDescripcion=this.getActualTipoPagoTarjetaForeignKeyDescripcion((Long)value);
				sDescripcion=formapagopuntoventa.gettipopagotarjeta_descripcion();
			}
		}

		if(sTipo.equals("Conexion")) {
			//sDescripcion=this.getActualConexionForeignKeyDescripcion((Long)value);
			if(!formapagopuntoventa.getIsNew() && !formapagopuntoventa.getIsChanged() && !formapagopuntoventa.getIsDeleted()) {
				sDescripcion=formapagopuntoventa.getconexion_descripcion();
			} else {
				//sDescripcion=this.getActualConexionForeignKeyDescripcion((Long)value);
				sDescripcion=formapagopuntoventa.getconexion_descripcion();
			}
		}

		if(sTipo.equals("Mes")) {
			//sDescripcion=this.getActualMesForeignKeyDescripcion((Long)value);
			if(!formapagopuntoventa.getIsNew() && !formapagopuntoventa.getIsChanged() && !formapagopuntoventa.getIsDeleted()) {
				sDescripcion=formapagopuntoventa.getmes_descripcion();
			} else {
				//sDescripcion=this.getActualMesForeignKeyDescripcion((Long)value);
				sDescripcion=formapagopuntoventa.getmes_descripcion();
			}
		}

		if(sTipo.equals("Anio")) {
			//sDescripcion=this.getActualAnioForeignKeyDescripcion((Long)value);
			if(!formapagopuntoventa.getIsNew() && !formapagopuntoventa.getIsChanged() && !formapagopuntoventa.getIsDeleted()) {
				sDescripcion=formapagopuntoventa.getanio_descripcion();
			} else {
				//sDescripcion=this.getActualAnioForeignKeyDescripcion((Long)value);
				sDescripcion=formapagopuntoventa.getanio_descripcion();
			}
		}

		if(sTipo.equals("CuentaContable")) {
			//sDescripcion=this.getActualCuentaContableForeignKeyDescripcion((Long)value);
			if(!formapagopuntoventa.getIsNew() && !formapagopuntoventa.getIsChanged() && !formapagopuntoventa.getIsDeleted()) {
				sDescripcion=formapagopuntoventa.getcuentacontable_descripcion();
			} else {
				//sDescripcion=this.getActualCuentaContableForeignKeyDescripcion((Long)value);
				sDescripcion=formapagopuntoventa.getcuentacontable_descripcion();
			}
		}

		if(sTipo.equals("AsientoContable")) {
			//sDescripcion=this.getActualAsientoContableForeignKeyDescripcion((Long)value);
			if(!formapagopuntoventa.getIsNew() && !formapagopuntoventa.getIsChanged() && !formapagopuntoventa.getIsDeleted()) {
				sDescripcion=formapagopuntoventa.getasientocontable_descripcion();
			} else {
				//sDescripcion=this.getActualAsientoContableForeignKeyDescripcion((Long)value);
				sDescripcion=formapagopuntoventa.getasientocontable_descripcion();
			}
		}

		
		return sDescripcion;
	}
	
	public Color getColorFk(String sTipo,JTable table,Object value,int intSelectedRow) throws Exception {
		//DESCRIPCIONES FK		
		Color color=Color.WHITE;
		
		FormaPagoPuntoVenta formapagopuntoventaRow=new FormaPagoPuntoVenta();
		
		if(Constantes.ISUSAEJBLOGICLAYER) {
			formapagopuntoventaRow=(FormaPagoPuntoVenta) formapagopuntoventaLogic.getFormaPagoPuntoVentas().toArray()[table.convertRowIndexToModel(intSelectedRow)];
		} else if(Constantes.ISUSAEJBREMOTE) {
			formapagopuntoventaRow=(FormaPagoPuntoVenta) formapagopuntoventas.toArray()[table.convertRowIndexToModel(intSelectedRow)];
		}
					
		
		
		return color;
	}
	
	
	
	
	
	
	
	public void refrescarBindingTabla(Boolean blnSoloTabla) {
	}
	
	public void inicializarActualizarBindingBotonesManualFormaPagoPuntoVenta(Boolean esSetControles) {						
		if(esSetControles) {
			this.jButtonNuevoFormaPagoPuntoVenta.setVisible((this.isVisibilidadCeldaNuevoFormaPagoPuntoVenta && this.isPermisoNuevoFormaPagoPuntoVenta));			
			this.jButtonDuplicarFormaPagoPuntoVenta.setVisible((this.isVisibilidadCeldaDuplicarFormaPagoPuntoVenta && this.isPermisoDuplicarFormaPagoPuntoVenta));			
			this.jButtonCopiarFormaPagoPuntoVenta.setVisible((this.isVisibilidadCeldaCopiarFormaPagoPuntoVenta && this.isPermisoCopiarFormaPagoPuntoVenta));
			this.jButtonVerFormFormaPagoPuntoVenta.setVisible((this.isVisibilidadCeldaVerFormFormaPagoPuntoVenta && this.isPermisoVerFormFormaPagoPuntoVenta));
			/*
			this.jButtonAbrirOrderByFormaPagoPuntoVenta.setVisible((this.isVisibilidadCeldaOrdenFormaPagoPuntoVenta && this.isPermisoOrdenFormaPagoPuntoVenta));			
			*/
			this.jButtonNuevoRelacionesFormaPagoPuntoVenta.setVisible((this.isVisibilidadCeldaNuevoRelacionesFormaPagoPuntoVenta && this.isPermisoNuevoFormaPagoPuntoVenta));			
			this.jButtonNuevoGuardarCambiosFormaPagoPuntoVenta.setVisible((this.isVisibilidadCeldaNuevoFormaPagoPuntoVenta && this.isPermisoNuevoFormaPagoPuntoVenta && this.isPermisoGuardarCambiosFormaPagoPuntoVenta));
			
			if(this.jInternalFrameDetalleFormFormaPagoPuntoVenta!=null) {
			this.jInternalFrameDetalleFormFormaPagoPuntoVenta.jButtonModificarFormaPagoPuntoVenta.setVisible((this.isVisibilidadCeldaModificarFormaPagoPuntoVenta && this.isPermisoActualizarFormaPagoPuntoVenta));	
			this.jInternalFrameDetalleFormFormaPagoPuntoVenta.jButtonActualizarFormaPagoPuntoVenta.setVisible((this.isVisibilidadCeldaActualizarFormaPagoPuntoVenta && this.isPermisoActualizarFormaPagoPuntoVenta));	
			this.jInternalFrameDetalleFormFormaPagoPuntoVenta.jButtonEliminarFormaPagoPuntoVenta.setVisible((this.isVisibilidadCeldaEliminarFormaPagoPuntoVenta && this.isPermisoEliminarFormaPagoPuntoVenta));
			this.jInternalFrameDetalleFormFormaPagoPuntoVenta.jButtonCancelarFormaPagoPuntoVenta.setVisible(this.isVisibilidadCeldaCancelarFormaPagoPuntoVenta);							
			this.jInternalFrameDetalleFormFormaPagoPuntoVenta.jButtonGuardarCambiosFormaPagoPuntoVenta.setVisible((this.isVisibilidadCeldaGuardarFormaPagoPuntoVenta && this.isPermisoGuardarCambiosFormaPagoPuntoVenta));			
			
			}
						
			this.jButtonGuardarCambiosTablaFormaPagoPuntoVenta.setVisible((this.isVisibilidadCeldaGuardarCambiosFormaPagoPuntoVenta && this.isPermisoGuardarCambiosFormaPagoPuntoVenta));							
			
			//TOOLBAR
			/*
			this.jButtonNuevoToolBarFormaPagoPuntoVenta.setVisible((this.isVisibilidadCeldaNuevoFormaPagoPuntoVenta && this.isPermisoNuevoFormaPagoPuntoVenta));						
			this.jButtonDuplicarToolBarFormaPagoPuntoVenta.setVisible((this.isVisibilidadCeldaDuplicarFormaPagoPuntoVenta && this.isPermisoDuplicarFormaPagoPuntoVenta));						
			this.jButtonCopiarToolBarFormaPagoPuntoVenta.setVisible((this.isVisibilidadCeldaCopiarFormaPagoPuntoVenta && this.isPermisoCopiarFormaPagoPuntoVenta));			
			this.jButtonVerFormToolBarFormaPagoPuntoVenta.setVisible((this.isVisibilidadCeldaVerFormFormaPagoPuntoVenta && this.isPermisoVerFormFormaPagoPuntoVenta));			
			this.jButtonAbrirOrderByToolBarFormaPagoPuntoVenta.setVisible((this.isVisibilidadCeldaOrdenFormaPagoPuntoVenta && this.isPermisoOrdenFormaPagoPuntoVenta));
			this.jButtonNuevoRelacionesToolBarFormaPagoPuntoVenta.setVisible((this.isVisibilidadCeldaNuevoRelacionesFormaPagoPuntoVenta && this.isPermisoNuevoFormaPagoPuntoVenta));			
			this.jButtonNuevoGuardarCambiosToolBarFormaPagoPuntoVenta.setVisible((this.isVisibilidadCeldaNuevoFormaPagoPuntoVenta && this.isPermisoNuevoFormaPagoPuntoVenta && this.isPermisoGuardarCambiosFormaPagoPuntoVenta));			
			
			if(this.jInternalFrameDetalleFormFormaPagoPuntoVenta!=null) {
			this.jInternalFrameDetalleFormFormaPagoPuntoVenta.jButtonModificarToolBarFormaPagoPuntoVenta.setVisible((this.isVisibilidadCeldaModificarFormaPagoPuntoVenta && this.isPermisoActualizarFormaPagoPuntoVenta));	
			this.jInternalFrameDetalleFormFormaPagoPuntoVenta.jButtonActualizarToolBarFormaPagoPuntoVenta.setVisible((this.isVisibilidadCeldaActualizarFormaPagoPuntoVenta  && this.isPermisoActualizarFormaPagoPuntoVenta));	
			this.jInternalFrameDetalleFormFormaPagoPuntoVenta.jButtonEliminarToolBarFormaPagoPuntoVenta.setVisible((this.isVisibilidadCeldaEliminarFormaPagoPuntoVenta && this.isPermisoEliminarFormaPagoPuntoVenta));
			this.jInternalFrameDetalleFormFormaPagoPuntoVenta.jButtonCancelarToolBarFormaPagoPuntoVenta.setVisible(this.isVisibilidadCeldaCancelarFormaPagoPuntoVenta);				
			this.jInternalFrameDetalleFormFormaPagoPuntoVenta.jButtonGuardarCambiosToolBarFormaPagoPuntoVenta.setVisible((this.isVisibilidadCeldaGuardarFormaPagoPuntoVenta && this.isPermisoGuardarCambiosFormaPagoPuntoVenta));									
			}
			
			this.jButtonGuardarCambiosTablaToolBarFormaPagoPuntoVenta.setVisible((this.isVisibilidadCeldaGuardarCambiosFormaPagoPuntoVenta && this.isPermisoGuardarCambiosFormaPagoPuntoVenta));									
			*/
			//TOOLBAR
			
			//MENUS
			/*
			this.jMenuItemNuevoFormaPagoPuntoVenta.setVisible((this.isVisibilidadCeldaNuevoFormaPagoPuntoVenta && this.isPermisoNuevoFormaPagoPuntoVenta));			
			this.jMenuItemDuplicarFormaPagoPuntoVenta.setVisible((this.isVisibilidadCeldaDuplicarFormaPagoPuntoVenta && this.isPermisoDuplicarFormaPagoPuntoVenta));			
			this.jMenuItemCopiarFormaPagoPuntoVenta.setVisible((this.isVisibilidadCeldaCopiarFormaPagoPuntoVenta && this.isPermisoCopiarFormaPagoPuntoVenta));			
			this.jMenuItemVerFormFormaPagoPuntoVenta.setVisible((this.isVisibilidadCeldaVerFormFormaPagoPuntoVenta && this.isPermisoVerFormFormaPagoPuntoVenta));			
			this.jMenuItemAbrirOrderByFormaPagoPuntoVenta.setVisible((this.isVisibilidadCeldaOrdenFormaPagoPuntoVenta && this.isPermisoOrdenFormaPagoPuntoVenta));			
			//this.jMenuItemMostrarOcultarFormaPagoPuntoVenta.setVisible((this.isVisibilidadCeldaOrdenFormaPagoPuntoVenta && this.isPermisoOrdenFormaPagoPuntoVenta));
			this.jMenuItemDetalleAbrirOrderByFormaPagoPuntoVenta.setVisible((this.isVisibilidadCeldaOrdenFormaPagoPuntoVenta && this.isPermisoOrdenFormaPagoPuntoVenta));			
			//this.jMenuItemDetalleMostrarOcultarFormaPagoPuntoVenta.setVisible((this.isVisibilidadCeldaOrdenFormaPagoPuntoVenta && this.isPermisoOrdenFormaPagoPuntoVenta));			
			this.jMenuItemNuevoRelacionesFormaPagoPuntoVenta.setVisible((this.isVisibilidadCeldaNuevoRelacionesFormaPagoPuntoVenta && this.isPermisoNuevoFormaPagoPuntoVenta));			
			this.jMenuItemNuevoGuardarCambiosFormaPagoPuntoVenta.setVisible((this.isVisibilidadCeldaNuevoFormaPagoPuntoVenta && this.isPermisoNuevoFormaPagoPuntoVenta && this.isPermisoGuardarCambiosFormaPagoPuntoVenta));									
			
			if(this.jInternalFrameDetalleFormFormaPagoPuntoVenta!=null) {
			this.jInternalFrameDetalleFormFormaPagoPuntoVenta.jMenuItemModificarFormaPagoPuntoVenta.setVisible((this.isVisibilidadCeldaModificarFormaPagoPuntoVenta && this.isPermisoActualizarFormaPagoPuntoVenta));	
			this.jInternalFrameDetalleFormFormaPagoPuntoVenta.jMenuItemActualizarFormaPagoPuntoVenta.setVisible((this.isVisibilidadCeldaActualizarFormaPagoPuntoVenta && this.isPermisoActualizarFormaPagoPuntoVenta));	
			this.jInternalFrameDetalleFormFormaPagoPuntoVenta.jMenuItemEliminarFormaPagoPuntoVenta.setVisible((this.isVisibilidadCeldaEliminarFormaPagoPuntoVenta && this.isPermisoEliminarFormaPagoPuntoVenta));
			this.jInternalFrameDetalleFormFormaPagoPuntoVenta.jMenuItemCancelarFormaPagoPuntoVenta.setVisible(this.isVisibilidadCeldaCancelarFormaPagoPuntoVenta);				
			}
			
			this.jMenuItemGuardarCambiosFormaPagoPuntoVenta.setVisible((this.isVisibilidadCeldaGuardarFormaPagoPuntoVenta && this.isPermisoGuardarCambiosFormaPagoPuntoVenta));						
			this.jMenuItemGuardarCambiosTablaFormaPagoPuntoVenta.setVisible((this.isVisibilidadCeldaGuardarCambiosFormaPagoPuntoVenta && this.isPermisoGuardarCambiosFormaPagoPuntoVenta));						
			*/
			//MENUS
			
		} else {
			this.isVisibilidadCeldaNuevoFormaPagoPuntoVenta=this.jButtonNuevoFormaPagoPuntoVenta.isVisible();
			this.isVisibilidadCeldaDuplicarFormaPagoPuntoVenta=this.jButtonDuplicarFormaPagoPuntoVenta.isVisible();
			this.isVisibilidadCeldaCopiarFormaPagoPuntoVenta=this.jButtonCopiarFormaPagoPuntoVenta.isVisible();
			this.isVisibilidadCeldaVerFormFormaPagoPuntoVenta=this.jButtonVerFormFormaPagoPuntoVenta.isVisible();
			/*
			this.isVisibilidadCeldaOrdenFormaPagoPuntoVenta=this.jButtonAbrirOrderByFormaPagoPuntoVenta.isVisible();			
			*/
			this.isVisibilidadCeldaNuevoRelacionesFormaPagoPuntoVenta=this.jButtonNuevoRelacionesFormaPagoPuntoVenta.isVisible();
			this.isVisibilidadCeldaModificarFormaPagoPuntoVenta=this.jButtonModificarFormaPagoPuntoVenta.isVisible();
			
			if(this.jInternalFrameDetalleFormFormaPagoPuntoVenta!=null) {
			this.isVisibilidadCeldaActualizarFormaPagoPuntoVenta=this.jInternalFrameDetalleFormFormaPagoPuntoVenta.jButtonActualizarFormaPagoPuntoVenta.isVisible();
			this.isVisibilidadCeldaEliminarFormaPagoPuntoVenta=this.jInternalFrameDetalleFormFormaPagoPuntoVenta.jButtonEliminarFormaPagoPuntoVenta.isVisible();
			this.isVisibilidadCeldaCancelarFormaPagoPuntoVenta=this.jInternalFrameDetalleFormFormaPagoPuntoVenta.jButtonCancelarFormaPagoPuntoVenta.isVisible();
			this.isVisibilidadCeldaGuardarFormaPagoPuntoVenta=this.jInternalFrameDetalleFormFormaPagoPuntoVenta.jButtonGuardarCambiosFormaPagoPuntoVenta.isVisible();			
			}
			
			this.isVisibilidadCeldaGuardarCambiosFormaPagoPuntoVenta=this.jButtonGuardarCambiosTablaFormaPagoPuntoVenta.isVisible();
			
			//TOOLBAR
			/*
			this.isVisibilidadCeldaNuevoFormaPagoPuntoVenta=this.jButtonNuevoToolBarFormaPagoPuntoVenta.isVisible();
			this.isVisibilidadCeldaNuevoRelacionesFormaPagoPuntoVenta=this.jButtonNuevoRelacionesToolBarFormaPagoPuntoVenta.isVisible();
			
			if(this.jInternalFrameDetalleFormFormaPagoPuntoVenta!=null) {
			this.isVisibilidadCeldaModificarFormaPagoPuntoVenta=this.jInternalFrameDetalleFormFormaPagoPuntoVenta.jButtonModificarToolBarFormaPagoPuntoVenta.isVisible();
			this.isVisibilidadCeldaActualizarFormaPagoPuntoVenta=this.jInternalFrameDetalleFormFormaPagoPuntoVenta.jButtonActualizarToolBarFormaPagoPuntoVenta.isVisible();
			this.isVisibilidadCeldaEliminarFormaPagoPuntoVenta=this.jInternalFrameDetalleFormFormaPagoPuntoVenta.jButtonEliminarToolBarFormaPagoPuntoVenta.isVisible();
			this.isVisibilidadCeldaCancelarFormaPagoPuntoVenta=this.jInternalFrameDetalleFormFormaPagoPuntoVenta.jButtonCancelarToolBarFormaPagoPuntoVenta.isVisible();
			}
			
			this.isVisibilidadCeldaGuardarFormaPagoPuntoVenta=this.jButtonGuardarCambiosToolBarFormaPagoPuntoVenta.isVisible();
			this.isVisibilidadCeldaGuardarCambiosFormaPagoPuntoVenta=this.jButtonGuardarCambiosTablaToolBarFormaPagoPuntoVenta.isVisible();						
			*/
			//TOOLBAR
			
			//MENUS
			/*
			this.isVisibilidadCeldaNuevoFormaPagoPuntoVenta=this.jMenuItemNuevoFormaPagoPuntoVenta.isVisible();
			this.isVisibilidadCeldaNuevoRelacionesFormaPagoPuntoVenta=this.jMenuItemNuevoRelacionesFormaPagoPuntoVenta.isVisible();
			
			if(this.jInternalFrameDetalleFormFormaPagoPuntoVenta!=null) {
			this.isVisibilidadCeldaModificarFormaPagoPuntoVenta=this.jInternalFrameDetalleFormFormaPagoPuntoVenta.jMenuItemModificarFormaPagoPuntoVenta.isVisible();
			this.isVisibilidadCeldaActualizarFormaPagoPuntoVenta=this.jInternalFrameDetalleFormFormaPagoPuntoVenta.jMenuItemActualizarFormaPagoPuntoVenta.isVisible();
			this.isVisibilidadCeldaEliminarFormaPagoPuntoVenta=this.jInternalFrameDetalleFormFormaPagoPuntoVenta.jMenuItemEliminarFormaPagoPuntoVenta.isVisible();
			this.isVisibilidadCeldaCancelarFormaPagoPuntoVenta=this.jInternalFrameDetalleFormFormaPagoPuntoVenta.jMenuItemCancelarFormaPagoPuntoVenta.isVisible();
			}
			
			this.isVisibilidadCeldaGuardarFormaPagoPuntoVenta=this.jMenuItemGuardarCambiosFormaPagoPuntoVenta.isVisible();
			this.isVisibilidadCeldaGuardarCambiosFormaPagoPuntoVenta=this.jMenuItemGuardarCambiosTablaFormaPagoPuntoVenta.isVisible();						
			*/
			//MENUS
		}
	}
	
	public void inicializarActualizarBindingBotonesFormaPagoPuntoVenta(Boolean esInicializar) {
		if(FormaPagoPuntoVentaJInternalFrame.ISBINDING_MANUAL) {			
			if(this.formapagopuntoventaSessionBean.getConGuardarRelaciones()) {
				//if(this.formapagopuntoventaSessionBean.getEsGuardarRelacionado()) {
				
				this.actualizarEstadoCeldasBotonesConGuardarRelacionesFormaPagoPuntoVenta();
			}
			
			this.inicializarActualizarBindingBotonesManualFormaPagoPuntoVenta(true);
			
		} else {	
		}
	}		
	
	public void inicializarActualizarBindingBotonesPermisosManualFormaPagoPuntoVenta() {
		this.jButtonNuevoFormaPagoPuntoVenta.setVisible(this.isPermisoNuevoFormaPagoPuntoVenta);			
		this.jButtonDuplicarFormaPagoPuntoVenta.setVisible(this.isPermisoDuplicarFormaPagoPuntoVenta);			
		this.jButtonCopiarFormaPagoPuntoVenta.setVisible(this.isPermisoCopiarFormaPagoPuntoVenta);			
		this.jButtonVerFormFormaPagoPuntoVenta.setVisible(this.isPermisoVerFormFormaPagoPuntoVenta);			
		/*
		this.jButtonAbrirOrderByFormaPagoPuntoVenta.setVisible(this.isPermisoOrdenFormaPagoPuntoVenta);					
		*/
		this.jButtonNuevoRelacionesFormaPagoPuntoVenta.setVisible(this.isPermisoNuevoFormaPagoPuntoVenta);			
		
		if(this.jInternalFrameDetalleFormFormaPagoPuntoVenta!=null) { //if(this.conCargarFormDetalle) {
			this.jInternalFrameDetalleFormFormaPagoPuntoVenta.jButtonModificarFormaPagoPuntoVenta.setVisible(this.isPermisoActualizarFormaPagoPuntoVenta);	
			this.jInternalFrameDetalleFormFormaPagoPuntoVenta.jButtonActualizarFormaPagoPuntoVenta.setVisible(this.isPermisoActualizarFormaPagoPuntoVenta);	
			this.jInternalFrameDetalleFormFormaPagoPuntoVenta.jButtonEliminarFormaPagoPuntoVenta.setVisible(this.isPermisoEliminarFormaPagoPuntoVenta);
			this.jInternalFrameDetalleFormFormaPagoPuntoVenta.jButtonCancelarFormaPagoPuntoVenta.setVisible(this.isVisibilidadCeldaCancelarFormaPagoPuntoVenta);						
			this.jInternalFrameDetalleFormFormaPagoPuntoVenta.jButtonGuardarCambiosFormaPagoPuntoVenta.setVisible(this.isPermisoGuardarCambiosFormaPagoPuntoVenta);							
		}
		
		this.jButtonGuardarCambiosTablaFormaPagoPuntoVenta.setVisible(this.isPermisoActualizarFormaPagoPuntoVenta);
	}
	
	public void inicializarActualizarBindingBotonesPermisosManualFormDetalleFormaPagoPuntoVenta() {
		this.jInternalFrameDetalleFormFormaPagoPuntoVenta.jButtonModificarFormaPagoPuntoVenta.setVisible(this.isPermisoActualizarFormaPagoPuntoVenta);	
		this.jInternalFrameDetalleFormFormaPagoPuntoVenta.jButtonActualizarFormaPagoPuntoVenta.setVisible(this.isPermisoActualizarFormaPagoPuntoVenta);	
		this.jInternalFrameDetalleFormFormaPagoPuntoVenta.jButtonEliminarFormaPagoPuntoVenta.setVisible(this.isPermisoEliminarFormaPagoPuntoVenta);
		this.jInternalFrameDetalleFormFormaPagoPuntoVenta.jButtonCancelarFormaPagoPuntoVenta.setVisible(this.isVisibilidadCeldaCancelarFormaPagoPuntoVenta);							
		this.jInternalFrameDetalleFormFormaPagoPuntoVenta.jButtonGuardarCambiosFormaPagoPuntoVenta.setVisible((this.isVisibilidadCeldaGuardarFormaPagoPuntoVenta && this.isPermisoGuardarCambiosFormaPagoPuntoVenta));			
	}
	
	public void inicializarActualizarBindingBotonesPermisosFormaPagoPuntoVenta() {
		if(FormaPagoPuntoVentaJInternalFrame.ISBINDING_MANUAL) {
			this.inicializarActualizarBindingBotonesPermisosManualFormaPagoPuntoVenta();
		} else {
		}
	}
	
	
	public void refrescarBindingBotonesFormaPagoPuntoVenta() {
	}
	
	public void jTableDatosFormaPagoPuntoVentaListSelectionListener(javax.swing.event.ListSelectionEvent evt) throws Exception { 
		try {
			this.seleccionarFormaPagoPuntoVenta(null,evt,-1);
		} catch(Exception e) {
			FuncionesSwing.manageException(this, e,logger,FormaPagoPuntoVentaConstantesFunciones.CLASSNAME);
		}
	}
	
	
	public void jButtonidFormaPagoPuntoVentaBusquedaActionPerformed(java.awt.event.ActionEvent evt) throws Exception {
		try {

				if(Constantes.ISUSAEJBLOGICLAYER) {
					this.formapagopuntoventaLogic.getNewConnexionToDeep("");
				}

				//TOCA TRAER NUEVAMENTE, YA QUE SE PIERDE REGISTRO ACTUAL
				int intSelectedRow = this.jTableDatosFormaPagoPuntoVenta.getSelectedRow();

				if(intSelectedRow>-1) {
					this.setVariablesFormularioToObjetoActualFormaPagoPuntoVenta(this.getformapagopuntoventa(),true);
					this.setVariablesFormularioToObjetoActualForeignKeysFormaPagoPuntoVenta(this.formapagopuntoventa);
					//ARCHITECTURE
					/*
					if(Constantes.ISUSAEJBLOGICLAYER) {
						this.formapagopuntoventa =(FormaPagoPuntoVenta) this.formapagopuntoventaLogic.getFormaPagoPuntoVentas().toArray()[this.jTableDatosFormaPagoPuntoVenta.convertRowIndexToModel(intSelectedRow)];
					} else if(Constantes.ISUSAEJBREMOTE || Constantes.ISUSAEJBHOME) {
						this.formapagopuntoventa =(FormaPagoPuntoVenta) this.formapagopuntoventas.toArray()[this.jTableDatosFormaPagoPuntoVenta.convertRowIndexToModel(intSelectedRow)];
					}
					*/
					//ARCHITECTURE

				} else {
					if(this.formapagopuntoventa==null) {
						this.formapagopuntoventa = new FormaPagoPuntoVenta();
					}

					this.setVariablesFormularioToObjetoActualFormaPagoPuntoVenta(this.formapagopuntoventa,true);
					this.setVariablesFormularioToObjetoActualForeignKeysFormaPagoPuntoVenta(this.formapagopuntoventa);
				}

				if(this.formapagopuntoventa.getId()!=null) {

					this.sAccionBusqueda="Query";

					this.sFinalQueryGeneral=" where id = "+this.formapagopuntoventa.getId().toString()+" ";

					if(Constantes.ISDEVELOPING) {
						System.out.println(this.sFinalQueryGeneral);
					}

					this.procesarBusqueda(this.sAccionBusqueda);

					this.inicializarActualizarBindingFormaPagoPuntoVenta(false);
				}

				if(Constantes.ISUSAEJBLOGICLAYER) {
					this.formapagopuntoventaLogic.commitNewConnexionToDeep();
				}

			} catch(Exception e) {

				if(Constantes.ISUSAEJBLOGICLAYER) {
					this.formapagopuntoventaLogic.rollbackNewConnexionToDeep();
				}

				FuncionesSwing.manageException(this, e,logger,FormaPagoPuntoVentaConstantesFunciones.CLASSNAME);

			} finally {
				if(Constantes.ISUSAEJBLOGICLAYER) {
					this.formapagopuntoventaLogic.closeNewConnexionToDeep();
				}

			}
		}

	public void jButtonid_empresaFormaPagoPuntoVentaUpdateActionPerformed(java.awt.event.ActionEvent evt) throws Exception {
		try {

			if(Constantes.ISUSAEJBLOGICLAYER) {
				this.formapagopuntoventaLogic.getNewConnexionToDeep("");
			}

			Boolean idTienePermisoempresa=true;

			idTienePermisoempresa=this.tienePermisosUsuarioEnPaginaWebFormaPagoPuntoVenta(EmpresaConstantesFunciones.CLASSNAME);

			if(idTienePermisoempresa) {
				//TOCA TRAER NUEVAMENTE, YA QUE SE PIERDE REGISTRO ACTUAL
				int intSelectedRow = this.jTableDatosFormaPagoPuntoVenta.getSelectedRow();

				if(intSelectedRow<0 && this.jTableDatosFormaPagoPuntoVenta.getRowCount()>0) {
					intSelectedRow =0;
					this.jTableDatosFormaPagoPuntoVenta.setRowSelectionInterval(intSelectedRow,intSelectedRow);
				}
				//ARCHITECTURE
				/*
				if(Constantes.ISUSAEJBLOGICLAYER) {
					this.formapagopuntoventa =(FormaPagoPuntoVenta) this.formapagopuntoventaLogic.getFormaPagoPuntoVentas().toArray()[this.jTableDatosFormaPagoPuntoVenta.convertRowIndexToModel(intSelectedRow)];
				} else if(Constantes.ISUSAEJBREMOTE || Constantes.ISUSAEJBHOME) {
					this.formapagopuntoventa =(FormaPagoPuntoVenta) this.formapagopuntoventas.toArray()[this.jTableDatosFormaPagoPuntoVenta.convertRowIndexToModel(intSelectedRow)];
				}
				*/
				//ARCHITECTURE

				this.setVariablesFormularioToObjetoActualFormaPagoPuntoVenta(this.getformapagopuntoventa(),true);
				this.setVariablesFormularioToObjetoActualForeignKeysFormaPagoPuntoVenta(this.formapagopuntoventa);

				this.empresaBeanSwingJInternalFrame=new EmpresaBeanSwingJInternalFrame(true,true,this.jDesktopPane,this.usuarioActual,this.resumenUsuarioActual,this.moduloActual,this.opcionActual,this.parametroGeneralSg,this.parametroGeneralUsuario,PaginaTipo.AUXILIAR,false,false,false,true);
				this.empresaBeanSwingJInternalFrame.setJInternalFrameParent(this);

				this.empresaBeanSwingJInternalFrame.getEmpresaLogic().setConnexion(this.formapagopuntoventaLogic.getConnexion());

				if(this.formapagopuntoventa.getid_empresa()!=null) {
					this.empresaBeanSwingJInternalFrame.sTipoBusqueda="PorId";
					this.empresaBeanSwingJInternalFrame.setIdActual(this.formapagopuntoventa.getid_empresa());
					this.empresaBeanSwingJInternalFrame.procesarBusqueda("PorId");
					this.empresaBeanSwingJInternalFrame.setsAccionBusqueda("PorId");
					this.empresaBeanSwingJInternalFrame.inicializarActualizarBindingTablaEmpresa();
				}

				JInternalFrameBase jinternalFrame =this.empresaBeanSwingJInternalFrame;
				jinternalFrame.setAutoscrolls(true);
				//frame.setSize(screenSize.width-inset*7 , screenSize.height-inset*9);
				jinternalFrame.setVisible(true); 


				TitledBorder titledBorderFormaPagoPuntoVenta=(TitledBorder)this.jScrollPanelDatosFormaPagoPuntoVenta.getBorder();
				TitledBorder titledBorderempresa=(TitledBorder)this.empresaBeanSwingJInternalFrame.jScrollPanelDatosEmpresa.getBorder();

				titledBorderempresa.setTitle(titledBorderFormaPagoPuntoVenta.getTitle() + " -> Empresa");


				if(!Constantes.CON_VARIAS_VENTANAS) {
					MainJFrame.cerrarJInternalFramesExistentes(this.jDesktopPane,jinternalFrame);
				}

				this.jDesktopPane.add(jinternalFrame);

				jinternalFrame.setSelected(true);
			} else {
				throw new Exception("NO TIENE PERMISO PARA TRABAJAR CON ESTA INFORMACION");
			}

			if(Constantes.ISUSAEJBLOGICLAYER) {
				this.formapagopuntoventaLogic.commitNewConnexionToDeep();
			}


		} catch(Exception e) {

			if(Constantes.ISUSAEJBLOGICLAYER) {
				this.formapagopuntoventaLogic.rollbackNewConnexionToDeep();
			}

			FuncionesSwing.manageException(this, e,logger,FormaPagoPuntoVentaConstantesFunciones.CLASSNAME);

		} finally {
			if(Constantes.ISUSAEJBLOGICLAYER) {
				this.formapagopuntoventaLogic.closeNewConnexionToDeep();
			}

		}
	}

	public void jButtonid_empresaFormaPagoPuntoVentaBusquedaActionPerformed(java.awt.event.ActionEvent evt) throws Exception {
		try {

				if(Constantes.ISUSAEJBLOGICLAYER) {
					this.formapagopuntoventaLogic.getNewConnexionToDeep("");
				}

				//TOCA TRAER NUEVAMENTE, YA QUE SE PIERDE REGISTRO ACTUAL
				int intSelectedRow = this.jTableDatosFormaPagoPuntoVenta.getSelectedRow();

				if(intSelectedRow>-1) {
					this.setVariablesFormularioToObjetoActualFormaPagoPuntoVenta(this.getformapagopuntoventa(),true);
					this.setVariablesFormularioToObjetoActualForeignKeysFormaPagoPuntoVenta(this.formapagopuntoventa);
					//ARCHITECTURE
					/*
					if(Constantes.ISUSAEJBLOGICLAYER) {
						this.formapagopuntoventa =(FormaPagoPuntoVenta) this.formapagopuntoventaLogic.getFormaPagoPuntoVentas().toArray()[this.jTableDatosFormaPagoPuntoVenta.convertRowIndexToModel(intSelectedRow)];
					} else if(Constantes.ISUSAEJBREMOTE || Constantes.ISUSAEJBHOME) {
						this.formapagopuntoventa =(FormaPagoPuntoVenta) this.formapagopuntoventas.toArray()[this.jTableDatosFormaPagoPuntoVenta.convertRowIndexToModel(intSelectedRow)];
					}
					*/
					//ARCHITECTURE

				} else {
					if(this.formapagopuntoventa==null) {
						this.formapagopuntoventa = new FormaPagoPuntoVenta();
					}

					this.setVariablesFormularioToObjetoActualFormaPagoPuntoVenta(this.formapagopuntoventa,true);
					this.setVariablesFormularioToObjetoActualForeignKeysFormaPagoPuntoVenta(this.formapagopuntoventa);
				}

				if(this.formapagopuntoventa.getid_empresa()!=null) {

					this.sAccionBusqueda="Query";

					this.sFinalQueryGeneral=" where id_empresa = "+this.formapagopuntoventa.getid_empresa().toString()+" ";

					if(Constantes.ISDEVELOPING) {
						System.out.println(this.sFinalQueryGeneral);
					}

					this.procesarBusqueda(this.sAccionBusqueda);

					this.inicializarActualizarBindingFormaPagoPuntoVenta(false);
				}

				if(Constantes.ISUSAEJBLOGICLAYER) {
					this.formapagopuntoventaLogic.commitNewConnexionToDeep();
				}

			} catch(Exception e) {

				if(Constantes.ISUSAEJBLOGICLAYER) {
					this.formapagopuntoventaLogic.rollbackNewConnexionToDeep();
				}

				FuncionesSwing.manageException(this, e,logger,FormaPagoPuntoVentaConstantesFunciones.CLASSNAME);

			} finally {
				if(Constantes.ISUSAEJBLOGICLAYER) {
					this.formapagopuntoventaLogic.closeNewConnexionToDeep();
				}

			}
		}

	public void jButtonid_sucursalFormaPagoPuntoVentaUpdateActionPerformed(java.awt.event.ActionEvent evt) throws Exception {
		try {

			if(Constantes.ISUSAEJBLOGICLAYER) {
				this.formapagopuntoventaLogic.getNewConnexionToDeep("");
			}

			Boolean idTienePermisosucursal=true;

			idTienePermisosucursal=this.tienePermisosUsuarioEnPaginaWebFormaPagoPuntoVenta(SucursalConstantesFunciones.CLASSNAME);

			if(idTienePermisosucursal) {
				//TOCA TRAER NUEVAMENTE, YA QUE SE PIERDE REGISTRO ACTUAL
				int intSelectedRow = this.jTableDatosFormaPagoPuntoVenta.getSelectedRow();

				if(intSelectedRow<0 && this.jTableDatosFormaPagoPuntoVenta.getRowCount()>0) {
					intSelectedRow =0;
					this.jTableDatosFormaPagoPuntoVenta.setRowSelectionInterval(intSelectedRow,intSelectedRow);
				}
				//ARCHITECTURE
				/*
				if(Constantes.ISUSAEJBLOGICLAYER) {
					this.formapagopuntoventa =(FormaPagoPuntoVenta) this.formapagopuntoventaLogic.getFormaPagoPuntoVentas().toArray()[this.jTableDatosFormaPagoPuntoVenta.convertRowIndexToModel(intSelectedRow)];
				} else if(Constantes.ISUSAEJBREMOTE || Constantes.ISUSAEJBHOME) {
					this.formapagopuntoventa =(FormaPagoPuntoVenta) this.formapagopuntoventas.toArray()[this.jTableDatosFormaPagoPuntoVenta.convertRowIndexToModel(intSelectedRow)];
				}
				*/
				//ARCHITECTURE

				this.setVariablesFormularioToObjetoActualFormaPagoPuntoVenta(this.getformapagopuntoventa(),true);
				this.setVariablesFormularioToObjetoActualForeignKeysFormaPagoPuntoVenta(this.formapagopuntoventa);

				this.sucursalBeanSwingJInternalFrame=new SucursalBeanSwingJInternalFrame(true,true,this.jDesktopPane,this.usuarioActual,this.resumenUsuarioActual,this.moduloActual,this.opcionActual,this.parametroGeneralSg,this.parametroGeneralUsuario,PaginaTipo.AUXILIAR,false,false,false,true);
				this.sucursalBeanSwingJInternalFrame.setJInternalFrameParent(this);

				this.sucursalBeanSwingJInternalFrame.getSucursalLogic().setConnexion(this.formapagopuntoventaLogic.getConnexion());

				if(this.formapagopuntoventa.getid_sucursal()!=null) {
					this.sucursalBeanSwingJInternalFrame.sTipoBusqueda="PorId";
					this.sucursalBeanSwingJInternalFrame.setIdActual(this.formapagopuntoventa.getid_sucursal());
					this.sucursalBeanSwingJInternalFrame.procesarBusqueda("PorId");
					this.sucursalBeanSwingJInternalFrame.setsAccionBusqueda("PorId");
					this.sucursalBeanSwingJInternalFrame.inicializarActualizarBindingTablaSucursal();
				}

				JInternalFrameBase jinternalFrame =this.sucursalBeanSwingJInternalFrame;
				jinternalFrame.setAutoscrolls(true);
				//frame.setSize(screenSize.width-inset*7 , screenSize.height-inset*9);
				jinternalFrame.setVisible(true); 


				TitledBorder titledBorderFormaPagoPuntoVenta=(TitledBorder)this.jScrollPanelDatosFormaPagoPuntoVenta.getBorder();
				TitledBorder titledBordersucursal=(TitledBorder)this.sucursalBeanSwingJInternalFrame.jScrollPanelDatosSucursal.getBorder();

				titledBordersucursal.setTitle(titledBorderFormaPagoPuntoVenta.getTitle() + " -> Sucursal");


				if(!Constantes.CON_VARIAS_VENTANAS) {
					MainJFrame.cerrarJInternalFramesExistentes(this.jDesktopPane,jinternalFrame);
				}

				this.jDesktopPane.add(jinternalFrame);

				jinternalFrame.setSelected(true);
			} else {
				throw new Exception("NO TIENE PERMISO PARA TRABAJAR CON ESTA INFORMACION");
			}

			if(Constantes.ISUSAEJBLOGICLAYER) {
				this.formapagopuntoventaLogic.commitNewConnexionToDeep();
			}


		} catch(Exception e) {

			if(Constantes.ISUSAEJBLOGICLAYER) {
				this.formapagopuntoventaLogic.rollbackNewConnexionToDeep();
			}

			FuncionesSwing.manageException(this, e,logger,FormaPagoPuntoVentaConstantesFunciones.CLASSNAME);

		} finally {
			if(Constantes.ISUSAEJBLOGICLAYER) {
				this.formapagopuntoventaLogic.closeNewConnexionToDeep();
			}

		}
	}

	public void jButtonid_sucursalFormaPagoPuntoVentaBusquedaActionPerformed(java.awt.event.ActionEvent evt) throws Exception {
		try {

				if(Constantes.ISUSAEJBLOGICLAYER) {
					this.formapagopuntoventaLogic.getNewConnexionToDeep("");
				}

				//TOCA TRAER NUEVAMENTE, YA QUE SE PIERDE REGISTRO ACTUAL
				int intSelectedRow = this.jTableDatosFormaPagoPuntoVenta.getSelectedRow();

				if(intSelectedRow>-1) {
					this.setVariablesFormularioToObjetoActualFormaPagoPuntoVenta(this.getformapagopuntoventa(),true);
					this.setVariablesFormularioToObjetoActualForeignKeysFormaPagoPuntoVenta(this.formapagopuntoventa);
					//ARCHITECTURE
					/*
					if(Constantes.ISUSAEJBLOGICLAYER) {
						this.formapagopuntoventa =(FormaPagoPuntoVenta) this.formapagopuntoventaLogic.getFormaPagoPuntoVentas().toArray()[this.jTableDatosFormaPagoPuntoVenta.convertRowIndexToModel(intSelectedRow)];
					} else if(Constantes.ISUSAEJBREMOTE || Constantes.ISUSAEJBHOME) {
						this.formapagopuntoventa =(FormaPagoPuntoVenta) this.formapagopuntoventas.toArray()[this.jTableDatosFormaPagoPuntoVenta.convertRowIndexToModel(intSelectedRow)];
					}
					*/
					//ARCHITECTURE

				} else {
					if(this.formapagopuntoventa==null) {
						this.formapagopuntoventa = new FormaPagoPuntoVenta();
					}

					this.setVariablesFormularioToObjetoActualFormaPagoPuntoVenta(this.formapagopuntoventa,true);
					this.setVariablesFormularioToObjetoActualForeignKeysFormaPagoPuntoVenta(this.formapagopuntoventa);
				}

				if(this.formapagopuntoventa.getid_sucursal()!=null) {

					this.sAccionBusqueda="Query";

					this.sFinalQueryGeneral=" where id_sucursal = "+this.formapagopuntoventa.getid_sucursal().toString()+" ";

					if(Constantes.ISDEVELOPING) {
						System.out.println(this.sFinalQueryGeneral);
					}

					this.procesarBusqueda(this.sAccionBusqueda);

					this.inicializarActualizarBindingFormaPagoPuntoVenta(false);
				}

				if(Constantes.ISUSAEJBLOGICLAYER) {
					this.formapagopuntoventaLogic.commitNewConnexionToDeep();
				}

			} catch(Exception e) {

				if(Constantes.ISUSAEJBLOGICLAYER) {
					this.formapagopuntoventaLogic.rollbackNewConnexionToDeep();
				}

				FuncionesSwing.manageException(this, e,logger,FormaPagoPuntoVentaConstantesFunciones.CLASSNAME);

			} finally {
				if(Constantes.ISUSAEJBLOGICLAYER) {
					this.formapagopuntoventaLogic.closeNewConnexionToDeep();
				}

			}
		}

	public void jButtonid_ejercicioFormaPagoPuntoVentaUpdateActionPerformed(java.awt.event.ActionEvent evt) throws Exception {
		try {

			if(Constantes.ISUSAEJBLOGICLAYER) {
				this.formapagopuntoventaLogic.getNewConnexionToDeep("");
			}

			Boolean idTienePermisoejercicio=true;

			idTienePermisoejercicio=this.tienePermisosUsuarioEnPaginaWebFormaPagoPuntoVenta(EjercicioConstantesFunciones.CLASSNAME);

			if(idTienePermisoejercicio) {
				//TOCA TRAER NUEVAMENTE, YA QUE SE PIERDE REGISTRO ACTUAL
				int intSelectedRow = this.jTableDatosFormaPagoPuntoVenta.getSelectedRow();

				if(intSelectedRow<0 && this.jTableDatosFormaPagoPuntoVenta.getRowCount()>0) {
					intSelectedRow =0;
					this.jTableDatosFormaPagoPuntoVenta.setRowSelectionInterval(intSelectedRow,intSelectedRow);
				}
				//ARCHITECTURE
				/*
				if(Constantes.ISUSAEJBLOGICLAYER) {
					this.formapagopuntoventa =(FormaPagoPuntoVenta) this.formapagopuntoventaLogic.getFormaPagoPuntoVentas().toArray()[this.jTableDatosFormaPagoPuntoVenta.convertRowIndexToModel(intSelectedRow)];
				} else if(Constantes.ISUSAEJBREMOTE || Constantes.ISUSAEJBHOME) {
					this.formapagopuntoventa =(FormaPagoPuntoVenta) this.formapagopuntoventas.toArray()[this.jTableDatosFormaPagoPuntoVenta.convertRowIndexToModel(intSelectedRow)];
				}
				*/
				//ARCHITECTURE

				this.setVariablesFormularioToObjetoActualFormaPagoPuntoVenta(this.getformapagopuntoventa(),true);
				this.setVariablesFormularioToObjetoActualForeignKeysFormaPagoPuntoVenta(this.formapagopuntoventa);

				this.ejercicioBeanSwingJInternalFrame=new EjercicioBeanSwingJInternalFrame(true,true,this.jDesktopPane,this.usuarioActual,this.resumenUsuarioActual,this.moduloActual,this.opcionActual,this.parametroGeneralSg,this.parametroGeneralUsuario,PaginaTipo.AUXILIAR,false,false,false,true);
				this.ejercicioBeanSwingJInternalFrame.setJInternalFrameParent(this);

				this.ejercicioBeanSwingJInternalFrame.getEjercicioLogic().setConnexion(this.formapagopuntoventaLogic.getConnexion());

				if(this.formapagopuntoventa.getid_ejercicio()!=null) {
					this.ejercicioBeanSwingJInternalFrame.sTipoBusqueda="PorId";
					this.ejercicioBeanSwingJInternalFrame.setIdActual(this.formapagopuntoventa.getid_ejercicio());
					this.ejercicioBeanSwingJInternalFrame.procesarBusqueda("PorId");
					this.ejercicioBeanSwingJInternalFrame.setsAccionBusqueda("PorId");
					this.ejercicioBeanSwingJInternalFrame.inicializarActualizarBindingTablaEjercicio();
				}

				JInternalFrameBase jinternalFrame =this.ejercicioBeanSwingJInternalFrame;
				jinternalFrame.setAutoscrolls(true);
				//frame.setSize(screenSize.width-inset*7 , screenSize.height-inset*9);
				jinternalFrame.setVisible(true); 


				TitledBorder titledBorderFormaPagoPuntoVenta=(TitledBorder)this.jScrollPanelDatosFormaPagoPuntoVenta.getBorder();
				TitledBorder titledBorderejercicio=(TitledBorder)this.ejercicioBeanSwingJInternalFrame.jScrollPanelDatosEjercicio.getBorder();

				titledBorderejercicio.setTitle(titledBorderFormaPagoPuntoVenta.getTitle() + " -> Ejercicio");


				if(!Constantes.CON_VARIAS_VENTANAS) {
					MainJFrame.cerrarJInternalFramesExistentes(this.jDesktopPane,jinternalFrame);
				}

				this.jDesktopPane.add(jinternalFrame);

				jinternalFrame.setSelected(true);
			} else {
				throw new Exception("NO TIENE PERMISO PARA TRABAJAR CON ESTA INFORMACION");
			}

			if(Constantes.ISUSAEJBLOGICLAYER) {
				this.formapagopuntoventaLogic.commitNewConnexionToDeep();
			}


		} catch(Exception e) {

			if(Constantes.ISUSAEJBLOGICLAYER) {
				this.formapagopuntoventaLogic.rollbackNewConnexionToDeep();
			}

			FuncionesSwing.manageException(this, e,logger,FormaPagoPuntoVentaConstantesFunciones.CLASSNAME);

		} finally {
			if(Constantes.ISUSAEJBLOGICLAYER) {
				this.formapagopuntoventaLogic.closeNewConnexionToDeep();
			}

		}
	}

	public void jButtonid_ejercicioFormaPagoPuntoVentaBusquedaActionPerformed(java.awt.event.ActionEvent evt) throws Exception {
		try {

				if(Constantes.ISUSAEJBLOGICLAYER) {
					this.formapagopuntoventaLogic.getNewConnexionToDeep("");
				}

				//TOCA TRAER NUEVAMENTE, YA QUE SE PIERDE REGISTRO ACTUAL
				int intSelectedRow = this.jTableDatosFormaPagoPuntoVenta.getSelectedRow();

				if(intSelectedRow>-1) {
					this.setVariablesFormularioToObjetoActualFormaPagoPuntoVenta(this.getformapagopuntoventa(),true);
					this.setVariablesFormularioToObjetoActualForeignKeysFormaPagoPuntoVenta(this.formapagopuntoventa);
					//ARCHITECTURE
					/*
					if(Constantes.ISUSAEJBLOGICLAYER) {
						this.formapagopuntoventa =(FormaPagoPuntoVenta) this.formapagopuntoventaLogic.getFormaPagoPuntoVentas().toArray()[this.jTableDatosFormaPagoPuntoVenta.convertRowIndexToModel(intSelectedRow)];
					} else if(Constantes.ISUSAEJBREMOTE || Constantes.ISUSAEJBHOME) {
						this.formapagopuntoventa =(FormaPagoPuntoVenta) this.formapagopuntoventas.toArray()[this.jTableDatosFormaPagoPuntoVenta.convertRowIndexToModel(intSelectedRow)];
					}
					*/
					//ARCHITECTURE

				} else {
					if(this.formapagopuntoventa==null) {
						this.formapagopuntoventa = new FormaPagoPuntoVenta();
					}

					this.setVariablesFormularioToObjetoActualFormaPagoPuntoVenta(this.formapagopuntoventa,true);
					this.setVariablesFormularioToObjetoActualForeignKeysFormaPagoPuntoVenta(this.formapagopuntoventa);
				}

				if(this.formapagopuntoventa.getid_ejercicio()!=null) {

					this.sAccionBusqueda="Query";

					this.sFinalQueryGeneral=" where id_ejercicio = "+this.formapagopuntoventa.getid_ejercicio().toString()+" ";

					if(Constantes.ISDEVELOPING) {
						System.out.println(this.sFinalQueryGeneral);
					}

					this.procesarBusqueda(this.sAccionBusqueda);

					this.inicializarActualizarBindingFormaPagoPuntoVenta(false);
				}

				if(Constantes.ISUSAEJBLOGICLAYER) {
					this.formapagopuntoventaLogic.commitNewConnexionToDeep();
				}

			} catch(Exception e) {

				if(Constantes.ISUSAEJBLOGICLAYER) {
					this.formapagopuntoventaLogic.rollbackNewConnexionToDeep();
				}

				FuncionesSwing.manageException(this, e,logger,FormaPagoPuntoVentaConstantesFunciones.CLASSNAME);

			} finally {
				if(Constantes.ISUSAEJBLOGICLAYER) {
					this.formapagopuntoventaLogic.closeNewConnexionToDeep();
				}

			}
		}

	public void jButtonid_periodoFormaPagoPuntoVentaUpdateActionPerformed(java.awt.event.ActionEvent evt) throws Exception {
		try {

			if(Constantes.ISUSAEJBLOGICLAYER) {
				this.formapagopuntoventaLogic.getNewConnexionToDeep("");
			}

			Boolean idTienePermisoperiodo=true;

			idTienePermisoperiodo=this.tienePermisosUsuarioEnPaginaWebFormaPagoPuntoVenta(PeriodoConstantesFunciones.CLASSNAME);

			if(idTienePermisoperiodo) {
				//TOCA TRAER NUEVAMENTE, YA QUE SE PIERDE REGISTRO ACTUAL
				int intSelectedRow = this.jTableDatosFormaPagoPuntoVenta.getSelectedRow();

				if(intSelectedRow<0 && this.jTableDatosFormaPagoPuntoVenta.getRowCount()>0) {
					intSelectedRow =0;
					this.jTableDatosFormaPagoPuntoVenta.setRowSelectionInterval(intSelectedRow,intSelectedRow);
				}
				//ARCHITECTURE
				/*
				if(Constantes.ISUSAEJBLOGICLAYER) {
					this.formapagopuntoventa =(FormaPagoPuntoVenta) this.formapagopuntoventaLogic.getFormaPagoPuntoVentas().toArray()[this.jTableDatosFormaPagoPuntoVenta.convertRowIndexToModel(intSelectedRow)];
				} else if(Constantes.ISUSAEJBREMOTE || Constantes.ISUSAEJBHOME) {
					this.formapagopuntoventa =(FormaPagoPuntoVenta) this.formapagopuntoventas.toArray()[this.jTableDatosFormaPagoPuntoVenta.convertRowIndexToModel(intSelectedRow)];
				}
				*/
				//ARCHITECTURE

				this.setVariablesFormularioToObjetoActualFormaPagoPuntoVenta(this.getformapagopuntoventa(),true);
				this.setVariablesFormularioToObjetoActualForeignKeysFormaPagoPuntoVenta(this.formapagopuntoventa);

				this.periodoBeanSwingJInternalFrame=new PeriodoBeanSwingJInternalFrame(true,true,this.jDesktopPane,this.usuarioActual,this.resumenUsuarioActual,this.moduloActual,this.opcionActual,this.parametroGeneralSg,this.parametroGeneralUsuario,PaginaTipo.AUXILIAR,false,false,false,true);
				this.periodoBeanSwingJInternalFrame.setJInternalFrameParent(this);

				this.periodoBeanSwingJInternalFrame.getPeriodoLogic().setConnexion(this.formapagopuntoventaLogic.getConnexion());

				if(this.formapagopuntoventa.getid_periodo()!=null) {
					this.periodoBeanSwingJInternalFrame.sTipoBusqueda="PorId";
					this.periodoBeanSwingJInternalFrame.setIdActual(this.formapagopuntoventa.getid_periodo());
					this.periodoBeanSwingJInternalFrame.procesarBusqueda("PorId");
					this.periodoBeanSwingJInternalFrame.setsAccionBusqueda("PorId");
					this.periodoBeanSwingJInternalFrame.inicializarActualizarBindingTablaPeriodo();
				}

				JInternalFrameBase jinternalFrame =this.periodoBeanSwingJInternalFrame;
				jinternalFrame.setAutoscrolls(true);
				//frame.setSize(screenSize.width-inset*7 , screenSize.height-inset*9);
				jinternalFrame.setVisible(true); 


				TitledBorder titledBorderFormaPagoPuntoVenta=(TitledBorder)this.jScrollPanelDatosFormaPagoPuntoVenta.getBorder();
				TitledBorder titledBorderperiodo=(TitledBorder)this.periodoBeanSwingJInternalFrame.jScrollPanelDatosPeriodo.getBorder();

				titledBorderperiodo.setTitle(titledBorderFormaPagoPuntoVenta.getTitle() + " -> Periodo");


				if(!Constantes.CON_VARIAS_VENTANAS) {
					MainJFrame.cerrarJInternalFramesExistentes(this.jDesktopPane,jinternalFrame);
				}

				this.jDesktopPane.add(jinternalFrame);

				jinternalFrame.setSelected(true);
			} else {
				throw new Exception("NO TIENE PERMISO PARA TRABAJAR CON ESTA INFORMACION");
			}

			if(Constantes.ISUSAEJBLOGICLAYER) {
				this.formapagopuntoventaLogic.commitNewConnexionToDeep();
			}


		} catch(Exception e) {

			if(Constantes.ISUSAEJBLOGICLAYER) {
				this.formapagopuntoventaLogic.rollbackNewConnexionToDeep();
			}

			FuncionesSwing.manageException(this, e,logger,FormaPagoPuntoVentaConstantesFunciones.CLASSNAME);

		} finally {
			if(Constantes.ISUSAEJBLOGICLAYER) {
				this.formapagopuntoventaLogic.closeNewConnexionToDeep();
			}

		}
	}

	public void jButtonid_periodoFormaPagoPuntoVentaBusquedaActionPerformed(java.awt.event.ActionEvent evt) throws Exception {
		try {

				if(Constantes.ISUSAEJBLOGICLAYER) {
					this.formapagopuntoventaLogic.getNewConnexionToDeep("");
				}

				//TOCA TRAER NUEVAMENTE, YA QUE SE PIERDE REGISTRO ACTUAL
				int intSelectedRow = this.jTableDatosFormaPagoPuntoVenta.getSelectedRow();

				if(intSelectedRow>-1) {
					this.setVariablesFormularioToObjetoActualFormaPagoPuntoVenta(this.getformapagopuntoventa(),true);
					this.setVariablesFormularioToObjetoActualForeignKeysFormaPagoPuntoVenta(this.formapagopuntoventa);
					//ARCHITECTURE
					/*
					if(Constantes.ISUSAEJBLOGICLAYER) {
						this.formapagopuntoventa =(FormaPagoPuntoVenta) this.formapagopuntoventaLogic.getFormaPagoPuntoVentas().toArray()[this.jTableDatosFormaPagoPuntoVenta.convertRowIndexToModel(intSelectedRow)];
					} else if(Constantes.ISUSAEJBREMOTE || Constantes.ISUSAEJBHOME) {
						this.formapagopuntoventa =(FormaPagoPuntoVenta) this.formapagopuntoventas.toArray()[this.jTableDatosFormaPagoPuntoVenta.convertRowIndexToModel(intSelectedRow)];
					}
					*/
					//ARCHITECTURE

				} else {
					if(this.formapagopuntoventa==null) {
						this.formapagopuntoventa = new FormaPagoPuntoVenta();
					}

					this.setVariablesFormularioToObjetoActualFormaPagoPuntoVenta(this.formapagopuntoventa,true);
					this.setVariablesFormularioToObjetoActualForeignKeysFormaPagoPuntoVenta(this.formapagopuntoventa);
				}

				if(this.formapagopuntoventa.getid_periodo()!=null) {

					this.sAccionBusqueda="Query";

					this.sFinalQueryGeneral=" where id_periodo = "+this.formapagopuntoventa.getid_periodo().toString()+" ";

					if(Constantes.ISDEVELOPING) {
						System.out.println(this.sFinalQueryGeneral);
					}

					this.procesarBusqueda(this.sAccionBusqueda);

					this.inicializarActualizarBindingFormaPagoPuntoVenta(false);
				}

				if(Constantes.ISUSAEJBLOGICLAYER) {
					this.formapagopuntoventaLogic.commitNewConnexionToDeep();
				}

			} catch(Exception e) {

				if(Constantes.ISUSAEJBLOGICLAYER) {
					this.formapagopuntoventaLogic.rollbackNewConnexionToDeep();
				}

				FuncionesSwing.manageException(this, e,logger,FormaPagoPuntoVentaConstantesFunciones.CLASSNAME);

			} finally {
				if(Constantes.ISUSAEJBLOGICLAYER) {
					this.formapagopuntoventaLogic.closeNewConnexionToDeep();
				}

			}
		}

	public void jButtonid_factura_punto_ventaFormaPagoPuntoVentaUpdateActionPerformed(java.awt.event.ActionEvent evt) throws Exception {
		try {

			if(Constantes.ISUSAEJBLOGICLAYER) {
				this.formapagopuntoventaLogic.getNewConnexionToDeep("");
			}

			Boolean idTienePermisofacturapuntoventa=true;

			idTienePermisofacturapuntoventa=this.tienePermisosUsuarioEnPaginaWebFormaPagoPuntoVenta(FacturaPuntoVentaConstantesFunciones.CLASSNAME);

			if(idTienePermisofacturapuntoventa) {
				//TOCA TRAER NUEVAMENTE, YA QUE SE PIERDE REGISTRO ACTUAL
				int intSelectedRow = this.jTableDatosFormaPagoPuntoVenta.getSelectedRow();

				if(intSelectedRow<0 && this.jTableDatosFormaPagoPuntoVenta.getRowCount()>0) {
					intSelectedRow =0;
					this.jTableDatosFormaPagoPuntoVenta.setRowSelectionInterval(intSelectedRow,intSelectedRow);
				}
				//ARCHITECTURE
				/*
				if(Constantes.ISUSAEJBLOGICLAYER) {
					this.formapagopuntoventa =(FormaPagoPuntoVenta) this.formapagopuntoventaLogic.getFormaPagoPuntoVentas().toArray()[this.jTableDatosFormaPagoPuntoVenta.convertRowIndexToModel(intSelectedRow)];
				} else if(Constantes.ISUSAEJBREMOTE || Constantes.ISUSAEJBHOME) {
					this.formapagopuntoventa =(FormaPagoPuntoVenta) this.formapagopuntoventas.toArray()[this.jTableDatosFormaPagoPuntoVenta.convertRowIndexToModel(intSelectedRow)];
				}
				*/
				//ARCHITECTURE

				this.setVariablesFormularioToObjetoActualFormaPagoPuntoVenta(this.getformapagopuntoventa(),true);
				this.setVariablesFormularioToObjetoActualForeignKeysFormaPagoPuntoVenta(this.formapagopuntoventa);

				this.facturapuntoventaBeanSwingJInternalFrame=new FacturaPuntoVentaBeanSwingJInternalFrame(true,true,this.jDesktopPane,this.usuarioActual,this.resumenUsuarioActual,this.moduloActual,this.opcionActual,this.parametroGeneralSg,this.parametroGeneralUsuario,PaginaTipo.AUXILIAR,false,false,false,true);
				this.facturapuntoventaBeanSwingJInternalFrame.setJInternalFrameParent(this);

				this.facturapuntoventaBeanSwingJInternalFrame.getFacturaPuntoVentaLogic().setConnexion(this.formapagopuntoventaLogic.getConnexion());

				if(this.formapagopuntoventa.getid_factura_punto_venta()!=null) {
					this.facturapuntoventaBeanSwingJInternalFrame.sTipoBusqueda="PorId";
					this.facturapuntoventaBeanSwingJInternalFrame.setIdActual(this.formapagopuntoventa.getid_factura_punto_venta());
					this.facturapuntoventaBeanSwingJInternalFrame.procesarBusqueda("PorId");
					this.facturapuntoventaBeanSwingJInternalFrame.setsAccionBusqueda("PorId");
					this.facturapuntoventaBeanSwingJInternalFrame.inicializarActualizarBindingTablaFacturaPuntoVenta();
				}

				JInternalFrameBase jinternalFrame =this.facturapuntoventaBeanSwingJInternalFrame;
				jinternalFrame.setAutoscrolls(true);
				//frame.setSize(screenSize.width-inset*7 , screenSize.height-inset*9);
				jinternalFrame.setVisible(true); 


				TitledBorder titledBorderFormaPagoPuntoVenta=(TitledBorder)this.jScrollPanelDatosFormaPagoPuntoVenta.getBorder();
				TitledBorder titledBorderfacturapuntoventa=(TitledBorder)this.facturapuntoventaBeanSwingJInternalFrame.jScrollPanelDatosFacturaPuntoVenta.getBorder();

				titledBorderfacturapuntoventa.setTitle(titledBorderFormaPagoPuntoVenta.getTitle() + " -> Factura Punto Venta");


				if(!Constantes.CON_VARIAS_VENTANAS) {
					MainJFrame.cerrarJInternalFramesExistentes(this.jDesktopPane,jinternalFrame);
				}

				this.jDesktopPane.add(jinternalFrame);

				jinternalFrame.setSelected(true);
			} else {
				throw new Exception("NO TIENE PERMISO PARA TRABAJAR CON ESTA INFORMACION");
			}

			if(Constantes.ISUSAEJBLOGICLAYER) {
				this.formapagopuntoventaLogic.commitNewConnexionToDeep();
			}


		} catch(Exception e) {

			if(Constantes.ISUSAEJBLOGICLAYER) {
				this.formapagopuntoventaLogic.rollbackNewConnexionToDeep();
			}

			FuncionesSwing.manageException(this, e,logger,FormaPagoPuntoVentaConstantesFunciones.CLASSNAME);

		} finally {
			if(Constantes.ISUSAEJBLOGICLAYER) {
				this.formapagopuntoventaLogic.closeNewConnexionToDeep();
			}

		}
	}

	public void jButtonid_factura_punto_ventaFormaPagoPuntoVentaBusquedaActionPerformed(java.awt.event.ActionEvent evt) throws Exception {
		try {

				if(Constantes.ISUSAEJBLOGICLAYER) {
					this.formapagopuntoventaLogic.getNewConnexionToDeep("");
				}

				//TOCA TRAER NUEVAMENTE, YA QUE SE PIERDE REGISTRO ACTUAL
				int intSelectedRow = this.jTableDatosFormaPagoPuntoVenta.getSelectedRow();

				if(intSelectedRow>-1) {
					this.setVariablesFormularioToObjetoActualFormaPagoPuntoVenta(this.getformapagopuntoventa(),true);
					this.setVariablesFormularioToObjetoActualForeignKeysFormaPagoPuntoVenta(this.formapagopuntoventa);
					//ARCHITECTURE
					/*
					if(Constantes.ISUSAEJBLOGICLAYER) {
						this.formapagopuntoventa =(FormaPagoPuntoVenta) this.formapagopuntoventaLogic.getFormaPagoPuntoVentas().toArray()[this.jTableDatosFormaPagoPuntoVenta.convertRowIndexToModel(intSelectedRow)];
					} else if(Constantes.ISUSAEJBREMOTE || Constantes.ISUSAEJBHOME) {
						this.formapagopuntoventa =(FormaPagoPuntoVenta) this.formapagopuntoventas.toArray()[this.jTableDatosFormaPagoPuntoVenta.convertRowIndexToModel(intSelectedRow)];
					}
					*/
					//ARCHITECTURE

				} else {
					if(this.formapagopuntoventa==null) {
						this.formapagopuntoventa = new FormaPagoPuntoVenta();
					}

					this.setVariablesFormularioToObjetoActualFormaPagoPuntoVenta(this.formapagopuntoventa,true);
					this.setVariablesFormularioToObjetoActualForeignKeysFormaPagoPuntoVenta(this.formapagopuntoventa);
				}

				if(this.formapagopuntoventa.getid_factura_punto_venta()!=null) {

					this.sAccionBusqueda="Query";

					this.sFinalQueryGeneral=" where id_factura_punto_venta = "+this.formapagopuntoventa.getid_factura_punto_venta().toString()+" ";

					if(Constantes.ISDEVELOPING) {
						System.out.println(this.sFinalQueryGeneral);
					}

					this.procesarBusqueda(this.sAccionBusqueda);

					this.inicializarActualizarBindingFormaPagoPuntoVenta(false);
				}

				if(Constantes.ISUSAEJBLOGICLAYER) {
					this.formapagopuntoventaLogic.commitNewConnexionToDeep();
				}

			} catch(Exception e) {

				if(Constantes.ISUSAEJBLOGICLAYER) {
					this.formapagopuntoventaLogic.rollbackNewConnexionToDeep();
				}

				FuncionesSwing.manageException(this, e,logger,FormaPagoPuntoVentaConstantesFunciones.CLASSNAME);

			} finally {
				if(Constantes.ISUSAEJBLOGICLAYER) {
					this.formapagopuntoventaLogic.closeNewConnexionToDeep();
				}

			}
		}

	public void jButtonid_tipo_forma_pagoFormaPagoPuntoVentaUpdateActionPerformed(java.awt.event.ActionEvent evt) throws Exception {
		try {

			if(Constantes.ISUSAEJBLOGICLAYER) {
				this.formapagopuntoventaLogic.getNewConnexionToDeep("");
			}

			Boolean idTienePermisotipoformapago=true;

			idTienePermisotipoformapago=this.tienePermisosUsuarioEnPaginaWebFormaPagoPuntoVenta(TipoFormaPagoConstantesFunciones.CLASSNAME);

			if(idTienePermisotipoformapago) {
				//TOCA TRAER NUEVAMENTE, YA QUE SE PIERDE REGISTRO ACTUAL
				int intSelectedRow = this.jTableDatosFormaPagoPuntoVenta.getSelectedRow();

				if(intSelectedRow<0 && this.jTableDatosFormaPagoPuntoVenta.getRowCount()>0) {
					intSelectedRow =0;
					this.jTableDatosFormaPagoPuntoVenta.setRowSelectionInterval(intSelectedRow,intSelectedRow);
				}
				//ARCHITECTURE
				/*
				if(Constantes.ISUSAEJBLOGICLAYER) {
					this.formapagopuntoventa =(FormaPagoPuntoVenta) this.formapagopuntoventaLogic.getFormaPagoPuntoVentas().toArray()[this.jTableDatosFormaPagoPuntoVenta.convertRowIndexToModel(intSelectedRow)];
				} else if(Constantes.ISUSAEJBREMOTE || Constantes.ISUSAEJBHOME) {
					this.formapagopuntoventa =(FormaPagoPuntoVenta) this.formapagopuntoventas.toArray()[this.jTableDatosFormaPagoPuntoVenta.convertRowIndexToModel(intSelectedRow)];
				}
				*/
				//ARCHITECTURE

				this.setVariablesFormularioToObjetoActualFormaPagoPuntoVenta(this.getformapagopuntoventa(),true);
				this.setVariablesFormularioToObjetoActualForeignKeysFormaPagoPuntoVenta(this.formapagopuntoventa);

				this.tipoformapagoBeanSwingJInternalFrame=new TipoFormaPagoBeanSwingJInternalFrame(true,true,this.jDesktopPane,this.usuarioActual,this.resumenUsuarioActual,this.moduloActual,this.opcionActual,this.parametroGeneralSg,this.parametroGeneralUsuario,PaginaTipo.AUXILIAR,false,false,false,true);
				this.tipoformapagoBeanSwingJInternalFrame.setJInternalFrameParent(this);

				this.tipoformapagoBeanSwingJInternalFrame.getTipoFormaPagoLogic().setConnexion(this.formapagopuntoventaLogic.getConnexion());

				if(this.formapagopuntoventa.getid_tipo_forma_pago()!=null) {
					this.tipoformapagoBeanSwingJInternalFrame.sTipoBusqueda="PorId";
					this.tipoformapagoBeanSwingJInternalFrame.setIdActual(this.formapagopuntoventa.getid_tipo_forma_pago());
					this.tipoformapagoBeanSwingJInternalFrame.procesarBusqueda("PorId");
					this.tipoformapagoBeanSwingJInternalFrame.setsAccionBusqueda("PorId");
					this.tipoformapagoBeanSwingJInternalFrame.inicializarActualizarBindingTablaTipoFormaPago();
				}

				JInternalFrameBase jinternalFrame =this.tipoformapagoBeanSwingJInternalFrame;
				jinternalFrame.setAutoscrolls(true);
				//frame.setSize(screenSize.width-inset*7 , screenSize.height-inset*9);
				jinternalFrame.setVisible(true); 


				TitledBorder titledBorderFormaPagoPuntoVenta=(TitledBorder)this.jScrollPanelDatosFormaPagoPuntoVenta.getBorder();
				TitledBorder titledBordertipoformapago=(TitledBorder)this.tipoformapagoBeanSwingJInternalFrame.jScrollPanelDatosTipoFormaPago.getBorder();

				titledBordertipoformapago.setTitle(titledBorderFormaPagoPuntoVenta.getTitle() + " -> Tipo Forma Pago");


				if(!Constantes.CON_VARIAS_VENTANAS) {
					MainJFrame.cerrarJInternalFramesExistentes(this.jDesktopPane,jinternalFrame);
				}

				this.jDesktopPane.add(jinternalFrame);

				jinternalFrame.setSelected(true);
			} else {
				throw new Exception("NO TIENE PERMISO PARA TRABAJAR CON ESTA INFORMACION");
			}

			if(Constantes.ISUSAEJBLOGICLAYER) {
				this.formapagopuntoventaLogic.commitNewConnexionToDeep();
			}


		} catch(Exception e) {

			if(Constantes.ISUSAEJBLOGICLAYER) {
				this.formapagopuntoventaLogic.rollbackNewConnexionToDeep();
			}

			FuncionesSwing.manageException(this, e,logger,FormaPagoPuntoVentaConstantesFunciones.CLASSNAME);

		} finally {
			if(Constantes.ISUSAEJBLOGICLAYER) {
				this.formapagopuntoventaLogic.closeNewConnexionToDeep();
			}

		}
	}

	public void jButtonid_tipo_forma_pagoFormaPagoPuntoVentaBusquedaActionPerformed(java.awt.event.ActionEvent evt) throws Exception {
		try {

				if(Constantes.ISUSAEJBLOGICLAYER) {
					this.formapagopuntoventaLogic.getNewConnexionToDeep("");
				}

				//TOCA TRAER NUEVAMENTE, YA QUE SE PIERDE REGISTRO ACTUAL
				int intSelectedRow = this.jTableDatosFormaPagoPuntoVenta.getSelectedRow();

				if(intSelectedRow>-1) {
					this.setVariablesFormularioToObjetoActualFormaPagoPuntoVenta(this.getformapagopuntoventa(),true);
					this.setVariablesFormularioToObjetoActualForeignKeysFormaPagoPuntoVenta(this.formapagopuntoventa);
					//ARCHITECTURE
					/*
					if(Constantes.ISUSAEJBLOGICLAYER) {
						this.formapagopuntoventa =(FormaPagoPuntoVenta) this.formapagopuntoventaLogic.getFormaPagoPuntoVentas().toArray()[this.jTableDatosFormaPagoPuntoVenta.convertRowIndexToModel(intSelectedRow)];
					} else if(Constantes.ISUSAEJBREMOTE || Constantes.ISUSAEJBHOME) {
						this.formapagopuntoventa =(FormaPagoPuntoVenta) this.formapagopuntoventas.toArray()[this.jTableDatosFormaPagoPuntoVenta.convertRowIndexToModel(intSelectedRow)];
					}
					*/
					//ARCHITECTURE

				} else {
					if(this.formapagopuntoventa==null) {
						this.formapagopuntoventa = new FormaPagoPuntoVenta();
					}

					this.setVariablesFormularioToObjetoActualFormaPagoPuntoVenta(this.formapagopuntoventa,true);
					this.setVariablesFormularioToObjetoActualForeignKeysFormaPagoPuntoVenta(this.formapagopuntoventa);
				}

				if(this.formapagopuntoventa.getid_tipo_forma_pago()!=null) {

					this.sAccionBusqueda="Query";

					this.sFinalQueryGeneral=" where id_tipo_forma_pago = "+this.formapagopuntoventa.getid_tipo_forma_pago().toString()+" ";

					if(Constantes.ISDEVELOPING) {
						System.out.println(this.sFinalQueryGeneral);
					}

					this.procesarBusqueda(this.sAccionBusqueda);

					this.inicializarActualizarBindingFormaPagoPuntoVenta(false);
				}

				if(Constantes.ISUSAEJBLOGICLAYER) {
					this.formapagopuntoventaLogic.commitNewConnexionToDeep();
				}

			} catch(Exception e) {

				if(Constantes.ISUSAEJBLOGICLAYER) {
					this.formapagopuntoventaLogic.rollbackNewConnexionToDeep();
				}

				FuncionesSwing.manageException(this, e,logger,FormaPagoPuntoVentaConstantesFunciones.CLASSNAME);

			} finally {
				if(Constantes.ISUSAEJBLOGICLAYER) {
					this.formapagopuntoventaLogic.closeNewConnexionToDeep();
				}

			}
		}

	public void jButtonporcentajeFormaPagoPuntoVentaBusquedaActionPerformed(java.awt.event.ActionEvent evt) throws Exception {
		try {

				if(Constantes.ISUSAEJBLOGICLAYER) {
					this.formapagopuntoventaLogic.getNewConnexionToDeep("");
				}

				//TOCA TRAER NUEVAMENTE, YA QUE SE PIERDE REGISTRO ACTUAL
				int intSelectedRow = this.jTableDatosFormaPagoPuntoVenta.getSelectedRow();

				if(intSelectedRow>-1) {
					this.setVariablesFormularioToObjetoActualFormaPagoPuntoVenta(this.getformapagopuntoventa(),true);
					this.setVariablesFormularioToObjetoActualForeignKeysFormaPagoPuntoVenta(this.formapagopuntoventa);
					//ARCHITECTURE
					/*
					if(Constantes.ISUSAEJBLOGICLAYER) {
						this.formapagopuntoventa =(FormaPagoPuntoVenta) this.formapagopuntoventaLogic.getFormaPagoPuntoVentas().toArray()[this.jTableDatosFormaPagoPuntoVenta.convertRowIndexToModel(intSelectedRow)];
					} else if(Constantes.ISUSAEJBREMOTE || Constantes.ISUSAEJBHOME) {
						this.formapagopuntoventa =(FormaPagoPuntoVenta) this.formapagopuntoventas.toArray()[this.jTableDatosFormaPagoPuntoVenta.convertRowIndexToModel(intSelectedRow)];
					}
					*/
					//ARCHITECTURE

				} else {
					if(this.formapagopuntoventa==null) {
						this.formapagopuntoventa = new FormaPagoPuntoVenta();
					}

					this.setVariablesFormularioToObjetoActualFormaPagoPuntoVenta(this.formapagopuntoventa,true);
					this.setVariablesFormularioToObjetoActualForeignKeysFormaPagoPuntoVenta(this.formapagopuntoventa);
				}

				if(this.formapagopuntoventa.getporcentaje()!=null) {

					this.sAccionBusqueda="Query";

					this.sFinalQueryGeneral=" where porcentaje = "+this.formapagopuntoventa.getporcentaje().toString()+" ";

					if(Constantes.ISDEVELOPING) {
						System.out.println(this.sFinalQueryGeneral);
					}

					this.procesarBusqueda(this.sAccionBusqueda);

					this.inicializarActualizarBindingFormaPagoPuntoVenta(false);
				}

				if(Constantes.ISUSAEJBLOGICLAYER) {
					this.formapagopuntoventaLogic.commitNewConnexionToDeep();
				}

			} catch(Exception e) {

				if(Constantes.ISUSAEJBLOGICLAYER) {
					this.formapagopuntoventaLogic.rollbackNewConnexionToDeep();
				}

				FuncionesSwing.manageException(this, e,logger,FormaPagoPuntoVentaConstantesFunciones.CLASSNAME);

			} finally {
				if(Constantes.ISUSAEJBLOGICLAYER) {
					this.formapagopuntoventaLogic.closeNewConnexionToDeep();
				}

			}
		}

	public void jButtonvalorFormaPagoPuntoVentaBusquedaActionPerformed(java.awt.event.ActionEvent evt) throws Exception {
		try {

				if(Constantes.ISUSAEJBLOGICLAYER) {
					this.formapagopuntoventaLogic.getNewConnexionToDeep("");
				}

				//TOCA TRAER NUEVAMENTE, YA QUE SE PIERDE REGISTRO ACTUAL
				int intSelectedRow = this.jTableDatosFormaPagoPuntoVenta.getSelectedRow();

				if(intSelectedRow>-1) {
					this.setVariablesFormularioToObjetoActualFormaPagoPuntoVenta(this.getformapagopuntoventa(),true);
					this.setVariablesFormularioToObjetoActualForeignKeysFormaPagoPuntoVenta(this.formapagopuntoventa);
					//ARCHITECTURE
					/*
					if(Constantes.ISUSAEJBLOGICLAYER) {
						this.formapagopuntoventa =(FormaPagoPuntoVenta) this.formapagopuntoventaLogic.getFormaPagoPuntoVentas().toArray()[this.jTableDatosFormaPagoPuntoVenta.convertRowIndexToModel(intSelectedRow)];
					} else if(Constantes.ISUSAEJBREMOTE || Constantes.ISUSAEJBHOME) {
						this.formapagopuntoventa =(FormaPagoPuntoVenta) this.formapagopuntoventas.toArray()[this.jTableDatosFormaPagoPuntoVenta.convertRowIndexToModel(intSelectedRow)];
					}
					*/
					//ARCHITECTURE

				} else {
					if(this.formapagopuntoventa==null) {
						this.formapagopuntoventa = new FormaPagoPuntoVenta();
					}

					this.setVariablesFormularioToObjetoActualFormaPagoPuntoVenta(this.formapagopuntoventa,true);
					this.setVariablesFormularioToObjetoActualForeignKeysFormaPagoPuntoVenta(this.formapagopuntoventa);
				}

				if(this.formapagopuntoventa.getvalor()!=null) {

					this.sAccionBusqueda="Query";

					this.sFinalQueryGeneral=" where valor = "+this.formapagopuntoventa.getvalor().toString()+" ";

					if(Constantes.ISDEVELOPING) {
						System.out.println(this.sFinalQueryGeneral);
					}

					this.procesarBusqueda(this.sAccionBusqueda);

					this.inicializarActualizarBindingFormaPagoPuntoVenta(false);
				}

				if(Constantes.ISUSAEJBLOGICLAYER) {
					this.formapagopuntoventaLogic.commitNewConnexionToDeep();
				}

			} catch(Exception e) {

				if(Constantes.ISUSAEJBLOGICLAYER) {
					this.formapagopuntoventaLogic.rollbackNewConnexionToDeep();
				}

				FuncionesSwing.manageException(this, e,logger,FormaPagoPuntoVentaConstantesFunciones.CLASSNAME);

			} finally {
				if(Constantes.ISUSAEJBLOGICLAYER) {
					this.formapagopuntoventaLogic.closeNewConnexionToDeep();
				}

			}
		}

	public void jButtonfechaFormaPagoPuntoVentaBusquedaActionPerformed(java.awt.event.ActionEvent evt) throws Exception {
		try {

				if(Constantes.ISUSAEJBLOGICLAYER) {
					this.formapagopuntoventaLogic.getNewConnexionToDeep("");
				}

				//TOCA TRAER NUEVAMENTE, YA QUE SE PIERDE REGISTRO ACTUAL
				int intSelectedRow = this.jTableDatosFormaPagoPuntoVenta.getSelectedRow();

				if(intSelectedRow>-1) {
					this.setVariablesFormularioToObjetoActualFormaPagoPuntoVenta(this.getformapagopuntoventa(),true);
					this.setVariablesFormularioToObjetoActualForeignKeysFormaPagoPuntoVenta(this.formapagopuntoventa);
					//ARCHITECTURE
					/*
					if(Constantes.ISUSAEJBLOGICLAYER) {
						this.formapagopuntoventa =(FormaPagoPuntoVenta) this.formapagopuntoventaLogic.getFormaPagoPuntoVentas().toArray()[this.jTableDatosFormaPagoPuntoVenta.convertRowIndexToModel(intSelectedRow)];
					} else if(Constantes.ISUSAEJBREMOTE || Constantes.ISUSAEJBHOME) {
						this.formapagopuntoventa =(FormaPagoPuntoVenta) this.formapagopuntoventas.toArray()[this.jTableDatosFormaPagoPuntoVenta.convertRowIndexToModel(intSelectedRow)];
					}
					*/
					//ARCHITECTURE

				} else {
					if(this.formapagopuntoventa==null) {
						this.formapagopuntoventa = new FormaPagoPuntoVenta();
					}

					this.setVariablesFormularioToObjetoActualFormaPagoPuntoVenta(this.formapagopuntoventa,true);
					this.setVariablesFormularioToObjetoActualForeignKeysFormaPagoPuntoVenta(this.formapagopuntoventa);
				}

				if(this.formapagopuntoventa.getfecha()!=null) {

					this.sAccionBusqueda="Query";

					this.sFinalQueryGeneral=" where fecha = '"+Funciones2.getStringPostgresDate(this.formapagopuntoventa.getfecha())+"' ";

					if(Constantes.ISDEVELOPING) {
						System.out.println(this.sFinalQueryGeneral);
					}

					this.procesarBusqueda(this.sAccionBusqueda);

					this.inicializarActualizarBindingFormaPagoPuntoVenta(false);
				}

				if(Constantes.ISUSAEJBLOGICLAYER) {
					this.formapagopuntoventaLogic.commitNewConnexionToDeep();
				}

			} catch(Exception e) {

				if(Constantes.ISUSAEJBLOGICLAYER) {
					this.formapagopuntoventaLogic.rollbackNewConnexionToDeep();
				}

				FuncionesSwing.manageException(this, e,logger,FormaPagoPuntoVentaConstantesFunciones.CLASSNAME);

			} finally {
				if(Constantes.ISUSAEJBLOGICLAYER) {
					this.formapagopuntoventaLogic.closeNewConnexionToDeep();
				}

			}
		}

	public void jButtondescripcionFormaPagoPuntoVentaBusquedaActionPerformed(java.awt.event.ActionEvent evt) throws Exception {
		try {

				if(Constantes.ISUSAEJBLOGICLAYER) {
					this.formapagopuntoventaLogic.getNewConnexionToDeep("");
				}

				//TOCA TRAER NUEVAMENTE, YA QUE SE PIERDE REGISTRO ACTUAL
				int intSelectedRow = this.jTableDatosFormaPagoPuntoVenta.getSelectedRow();

				if(intSelectedRow>-1) {
					this.setVariablesFormularioToObjetoActualFormaPagoPuntoVenta(this.getformapagopuntoventa(),true);
					this.setVariablesFormularioToObjetoActualForeignKeysFormaPagoPuntoVenta(this.formapagopuntoventa);
					//ARCHITECTURE
					/*
					if(Constantes.ISUSAEJBLOGICLAYER) {
						this.formapagopuntoventa =(FormaPagoPuntoVenta) this.formapagopuntoventaLogic.getFormaPagoPuntoVentas().toArray()[this.jTableDatosFormaPagoPuntoVenta.convertRowIndexToModel(intSelectedRow)];
					} else if(Constantes.ISUSAEJBREMOTE || Constantes.ISUSAEJBHOME) {
						this.formapagopuntoventa =(FormaPagoPuntoVenta) this.formapagopuntoventas.toArray()[this.jTableDatosFormaPagoPuntoVenta.convertRowIndexToModel(intSelectedRow)];
					}
					*/
					//ARCHITECTURE

				} else {
					if(this.formapagopuntoventa==null) {
						this.formapagopuntoventa = new FormaPagoPuntoVenta();
					}

					this.setVariablesFormularioToObjetoActualFormaPagoPuntoVenta(this.formapagopuntoventa,true);
					this.setVariablesFormularioToObjetoActualForeignKeysFormaPagoPuntoVenta(this.formapagopuntoventa);
				}

				if(this.formapagopuntoventa.getdescripcion()!=null) {

					this.sAccionBusqueda="Query";

					this.sFinalQueryGeneral=" where descripcion like '%"+this.formapagopuntoventa.getdescripcion()+"%' ";

					if(Constantes.ISDEVELOPING) {
						System.out.println(this.sFinalQueryGeneral);
					}

					this.procesarBusqueda(this.sAccionBusqueda);

					this.inicializarActualizarBindingFormaPagoPuntoVenta(false);
				}

				if(Constantes.ISUSAEJBLOGICLAYER) {
					this.formapagopuntoventaLogic.commitNewConnexionToDeep();
				}

			} catch(Exception e) {

				if(Constantes.ISUSAEJBLOGICLAYER) {
					this.formapagopuntoventaLogic.rollbackNewConnexionToDeep();
				}

				FuncionesSwing.manageException(this, e,logger,FormaPagoPuntoVentaConstantesFunciones.CLASSNAME);

			} finally {
				if(Constantes.ISUSAEJBLOGICLAYER) {
					this.formapagopuntoventaLogic.closeNewConnexionToDeep();
				}

			}
		}

	public void jButtonfecha_inicioFormaPagoPuntoVentaBusquedaActionPerformed(java.awt.event.ActionEvent evt) throws Exception {
		try {

				if(Constantes.ISUSAEJBLOGICLAYER) {
					this.formapagopuntoventaLogic.getNewConnexionToDeep("");
				}

				//TOCA TRAER NUEVAMENTE, YA QUE SE PIERDE REGISTRO ACTUAL
				int intSelectedRow = this.jTableDatosFormaPagoPuntoVenta.getSelectedRow();

				if(intSelectedRow>-1) {
					this.setVariablesFormularioToObjetoActualFormaPagoPuntoVenta(this.getformapagopuntoventa(),true);
					this.setVariablesFormularioToObjetoActualForeignKeysFormaPagoPuntoVenta(this.formapagopuntoventa);
					//ARCHITECTURE
					/*
					if(Constantes.ISUSAEJBLOGICLAYER) {
						this.formapagopuntoventa =(FormaPagoPuntoVenta) this.formapagopuntoventaLogic.getFormaPagoPuntoVentas().toArray()[this.jTableDatosFormaPagoPuntoVenta.convertRowIndexToModel(intSelectedRow)];
					} else if(Constantes.ISUSAEJBREMOTE || Constantes.ISUSAEJBHOME) {
						this.formapagopuntoventa =(FormaPagoPuntoVenta) this.formapagopuntoventas.toArray()[this.jTableDatosFormaPagoPuntoVenta.convertRowIndexToModel(intSelectedRow)];
					}
					*/
					//ARCHITECTURE

				} else {
					if(this.formapagopuntoventa==null) {
						this.formapagopuntoventa = new FormaPagoPuntoVenta();
					}

					this.setVariablesFormularioToObjetoActualFormaPagoPuntoVenta(this.formapagopuntoventa,true);
					this.setVariablesFormularioToObjetoActualForeignKeysFormaPagoPuntoVenta(this.formapagopuntoventa);
				}

				if(this.formapagopuntoventa.getfecha_inicio()!=null) {

					this.sAccionBusqueda="Query";

					this.sFinalQueryGeneral=" where fecha_inicio = '"+Funciones2.getStringPostgresDate(this.formapagopuntoventa.getfecha_inicio())+"' ";

					if(Constantes.ISDEVELOPING) {
						System.out.println(this.sFinalQueryGeneral);
					}

					this.procesarBusqueda(this.sAccionBusqueda);

					this.inicializarActualizarBindingFormaPagoPuntoVenta(false);
				}

				if(Constantes.ISUSAEJBLOGICLAYER) {
					this.formapagopuntoventaLogic.commitNewConnexionToDeep();
				}

			} catch(Exception e) {

				if(Constantes.ISUSAEJBLOGICLAYER) {
					this.formapagopuntoventaLogic.rollbackNewConnexionToDeep();
				}

				FuncionesSwing.manageException(this, e,logger,FormaPagoPuntoVentaConstantesFunciones.CLASSNAME);

			} finally {
				if(Constantes.ISUSAEJBLOGICLAYER) {
					this.formapagopuntoventaLogic.closeNewConnexionToDeep();
				}

			}
		}

	public void jButtonnumero_dias_plazoFormaPagoPuntoVentaBusquedaActionPerformed(java.awt.event.ActionEvent evt) throws Exception {
		try {

				if(Constantes.ISUSAEJBLOGICLAYER) {
					this.formapagopuntoventaLogic.getNewConnexionToDeep("");
				}

				//TOCA TRAER NUEVAMENTE, YA QUE SE PIERDE REGISTRO ACTUAL
				int intSelectedRow = this.jTableDatosFormaPagoPuntoVenta.getSelectedRow();

				if(intSelectedRow>-1) {
					this.setVariablesFormularioToObjetoActualFormaPagoPuntoVenta(this.getformapagopuntoventa(),true);
					this.setVariablesFormularioToObjetoActualForeignKeysFormaPagoPuntoVenta(this.formapagopuntoventa);
					//ARCHITECTURE
					/*
					if(Constantes.ISUSAEJBLOGICLAYER) {
						this.formapagopuntoventa =(FormaPagoPuntoVenta) this.formapagopuntoventaLogic.getFormaPagoPuntoVentas().toArray()[this.jTableDatosFormaPagoPuntoVenta.convertRowIndexToModel(intSelectedRow)];
					} else if(Constantes.ISUSAEJBREMOTE || Constantes.ISUSAEJBHOME) {
						this.formapagopuntoventa =(FormaPagoPuntoVenta) this.formapagopuntoventas.toArray()[this.jTableDatosFormaPagoPuntoVenta.convertRowIndexToModel(intSelectedRow)];
					}
					*/
					//ARCHITECTURE

				} else {
					if(this.formapagopuntoventa==null) {
						this.formapagopuntoventa = new FormaPagoPuntoVenta();
					}

					this.setVariablesFormularioToObjetoActualFormaPagoPuntoVenta(this.formapagopuntoventa,true);
					this.setVariablesFormularioToObjetoActualForeignKeysFormaPagoPuntoVenta(this.formapagopuntoventa);
				}

				if(this.formapagopuntoventa.getnumero_dias_plazo()!=null) {

					this.sAccionBusqueda="Query";

					this.sFinalQueryGeneral=" where numero_dias_plazo = "+this.formapagopuntoventa.getnumero_dias_plazo().toString()+" ";

					if(Constantes.ISDEVELOPING) {
						System.out.println(this.sFinalQueryGeneral);
					}

					this.procesarBusqueda(this.sAccionBusqueda);

					this.inicializarActualizarBindingFormaPagoPuntoVenta(false);
				}

				if(Constantes.ISUSAEJBLOGICLAYER) {
					this.formapagopuntoventaLogic.commitNewConnexionToDeep();
				}

			} catch(Exception e) {

				if(Constantes.ISUSAEJBLOGICLAYER) {
					this.formapagopuntoventaLogic.rollbackNewConnexionToDeep();
				}

				FuncionesSwing.manageException(this, e,logger,FormaPagoPuntoVentaConstantesFunciones.CLASSNAME);

			} finally {
				if(Constantes.ISUSAEJBLOGICLAYER) {
					this.formapagopuntoventaLogic.closeNewConnexionToDeep();
				}

			}
		}

	public void jButtonfecha_finFormaPagoPuntoVentaBusquedaActionPerformed(java.awt.event.ActionEvent evt) throws Exception {
		try {

				if(Constantes.ISUSAEJBLOGICLAYER) {
					this.formapagopuntoventaLogic.getNewConnexionToDeep("");
				}

				//TOCA TRAER NUEVAMENTE, YA QUE SE PIERDE REGISTRO ACTUAL
				int intSelectedRow = this.jTableDatosFormaPagoPuntoVenta.getSelectedRow();

				if(intSelectedRow>-1) {
					this.setVariablesFormularioToObjetoActualFormaPagoPuntoVenta(this.getformapagopuntoventa(),true);
					this.setVariablesFormularioToObjetoActualForeignKeysFormaPagoPuntoVenta(this.formapagopuntoventa);
					//ARCHITECTURE
					/*
					if(Constantes.ISUSAEJBLOGICLAYER) {
						this.formapagopuntoventa =(FormaPagoPuntoVenta) this.formapagopuntoventaLogic.getFormaPagoPuntoVentas().toArray()[this.jTableDatosFormaPagoPuntoVenta.convertRowIndexToModel(intSelectedRow)];
					} else if(Constantes.ISUSAEJBREMOTE || Constantes.ISUSAEJBHOME) {
						this.formapagopuntoventa =(FormaPagoPuntoVenta) this.formapagopuntoventas.toArray()[this.jTableDatosFormaPagoPuntoVenta.convertRowIndexToModel(intSelectedRow)];
					}
					*/
					//ARCHITECTURE

				} else {
					if(this.formapagopuntoventa==null) {
						this.formapagopuntoventa = new FormaPagoPuntoVenta();
					}

					this.setVariablesFormularioToObjetoActualFormaPagoPuntoVenta(this.formapagopuntoventa,true);
					this.setVariablesFormularioToObjetoActualForeignKeysFormaPagoPuntoVenta(this.formapagopuntoventa);
				}

				if(this.formapagopuntoventa.getfecha_fin()!=null) {

					this.sAccionBusqueda="Query";

					this.sFinalQueryGeneral=" where fecha_fin = '"+Funciones2.getStringPostgresDate(this.formapagopuntoventa.getfecha_fin())+"' ";

					if(Constantes.ISDEVELOPING) {
						System.out.println(this.sFinalQueryGeneral);
					}

					this.procesarBusqueda(this.sAccionBusqueda);

					this.inicializarActualizarBindingFormaPagoPuntoVenta(false);
				}

				if(Constantes.ISUSAEJBLOGICLAYER) {
					this.formapagopuntoventaLogic.commitNewConnexionToDeep();
				}

			} catch(Exception e) {

				if(Constantes.ISUSAEJBLOGICLAYER) {
					this.formapagopuntoventaLogic.rollbackNewConnexionToDeep();
				}

				FuncionesSwing.manageException(this, e,logger,FormaPagoPuntoVentaConstantesFunciones.CLASSNAME);

			} finally {
				if(Constantes.ISUSAEJBLOGICLAYER) {
					this.formapagopuntoventaLogic.closeNewConnexionToDeep();
				}

			}
		}

	public void jButtonid_bancoFormaPagoPuntoVentaUpdateActionPerformed(java.awt.event.ActionEvent evt) throws Exception {
		try {

			if(Constantes.ISUSAEJBLOGICLAYER) {
				this.formapagopuntoventaLogic.getNewConnexionToDeep("");
			}

			Boolean idTienePermisobanco=true;

			idTienePermisobanco=this.tienePermisosUsuarioEnPaginaWebFormaPagoPuntoVenta(BancoConstantesFunciones.CLASSNAME);

			if(idTienePermisobanco) {
				//TOCA TRAER NUEVAMENTE, YA QUE SE PIERDE REGISTRO ACTUAL
				int intSelectedRow = this.jTableDatosFormaPagoPuntoVenta.getSelectedRow();

				if(intSelectedRow<0 && this.jTableDatosFormaPagoPuntoVenta.getRowCount()>0) {
					intSelectedRow =0;
					this.jTableDatosFormaPagoPuntoVenta.setRowSelectionInterval(intSelectedRow,intSelectedRow);
				}
				//ARCHITECTURE
				/*
				if(Constantes.ISUSAEJBLOGICLAYER) {
					this.formapagopuntoventa =(FormaPagoPuntoVenta) this.formapagopuntoventaLogic.getFormaPagoPuntoVentas().toArray()[this.jTableDatosFormaPagoPuntoVenta.convertRowIndexToModel(intSelectedRow)];
				} else if(Constantes.ISUSAEJBREMOTE || Constantes.ISUSAEJBHOME) {
					this.formapagopuntoventa =(FormaPagoPuntoVenta) this.formapagopuntoventas.toArray()[this.jTableDatosFormaPagoPuntoVenta.convertRowIndexToModel(intSelectedRow)];
				}
				*/
				//ARCHITECTURE

				this.setVariablesFormularioToObjetoActualFormaPagoPuntoVenta(this.getformapagopuntoventa(),true);
				this.setVariablesFormularioToObjetoActualForeignKeysFormaPagoPuntoVenta(this.formapagopuntoventa);

				this.bancoBeanSwingJInternalFrame=new BancoBeanSwingJInternalFrame(true,true,this.jDesktopPane,this.usuarioActual,this.resumenUsuarioActual,this.moduloActual,this.opcionActual,this.parametroGeneralSg,this.parametroGeneralUsuario,PaginaTipo.AUXILIAR,false,false,false,true);
				this.bancoBeanSwingJInternalFrame.setJInternalFrameParent(this);

				this.bancoBeanSwingJInternalFrame.getBancoLogic().setConnexion(this.formapagopuntoventaLogic.getConnexion());

				if(this.formapagopuntoventa.getid_banco()!=null) {
					this.bancoBeanSwingJInternalFrame.sTipoBusqueda="PorId";
					this.bancoBeanSwingJInternalFrame.setIdActual(this.formapagopuntoventa.getid_banco());
					this.bancoBeanSwingJInternalFrame.procesarBusqueda("PorId");
					this.bancoBeanSwingJInternalFrame.setsAccionBusqueda("PorId");
					this.bancoBeanSwingJInternalFrame.inicializarActualizarBindingTablaBanco();
				}

				JInternalFrameBase jinternalFrame =this.bancoBeanSwingJInternalFrame;
				jinternalFrame.setAutoscrolls(true);
				//frame.setSize(screenSize.width-inset*7 , screenSize.height-inset*9);
				jinternalFrame.setVisible(true); 


				TitledBorder titledBorderFormaPagoPuntoVenta=(TitledBorder)this.jScrollPanelDatosFormaPagoPuntoVenta.getBorder();
				TitledBorder titledBorderbanco=(TitledBorder)this.bancoBeanSwingJInternalFrame.jScrollPanelDatosBanco.getBorder();

				titledBorderbanco.setTitle(titledBorderFormaPagoPuntoVenta.getTitle() + " -> Banco");


				if(!Constantes.CON_VARIAS_VENTANAS) {
					MainJFrame.cerrarJInternalFramesExistentes(this.jDesktopPane,jinternalFrame);
				}

				this.jDesktopPane.add(jinternalFrame);

				jinternalFrame.setSelected(true);
			} else {
				throw new Exception("NO TIENE PERMISO PARA TRABAJAR CON ESTA INFORMACION");
			}

			if(Constantes.ISUSAEJBLOGICLAYER) {
				this.formapagopuntoventaLogic.commitNewConnexionToDeep();
			}


		} catch(Exception e) {

			if(Constantes.ISUSAEJBLOGICLAYER) {
				this.formapagopuntoventaLogic.rollbackNewConnexionToDeep();
			}

			FuncionesSwing.manageException(this, e,logger,FormaPagoPuntoVentaConstantesFunciones.CLASSNAME);

		} finally {
			if(Constantes.ISUSAEJBLOGICLAYER) {
				this.formapagopuntoventaLogic.closeNewConnexionToDeep();
			}

		}
	}

	public void jButtonid_bancoFormaPagoPuntoVentaBusquedaActionPerformed(java.awt.event.ActionEvent evt) throws Exception {
		try {

				if(Constantes.ISUSAEJBLOGICLAYER) {
					this.formapagopuntoventaLogic.getNewConnexionToDeep("");
				}

				//TOCA TRAER NUEVAMENTE, YA QUE SE PIERDE REGISTRO ACTUAL
				int intSelectedRow = this.jTableDatosFormaPagoPuntoVenta.getSelectedRow();

				if(intSelectedRow>-1) {
					this.setVariablesFormularioToObjetoActualFormaPagoPuntoVenta(this.getformapagopuntoventa(),true);
					this.setVariablesFormularioToObjetoActualForeignKeysFormaPagoPuntoVenta(this.formapagopuntoventa);
					//ARCHITECTURE
					/*
					if(Constantes.ISUSAEJBLOGICLAYER) {
						this.formapagopuntoventa =(FormaPagoPuntoVenta) this.formapagopuntoventaLogic.getFormaPagoPuntoVentas().toArray()[this.jTableDatosFormaPagoPuntoVenta.convertRowIndexToModel(intSelectedRow)];
					} else if(Constantes.ISUSAEJBREMOTE || Constantes.ISUSAEJBHOME) {
						this.formapagopuntoventa =(FormaPagoPuntoVenta) this.formapagopuntoventas.toArray()[this.jTableDatosFormaPagoPuntoVenta.convertRowIndexToModel(intSelectedRow)];
					}
					*/
					//ARCHITECTURE

				} else {
					if(this.formapagopuntoventa==null) {
						this.formapagopuntoventa = new FormaPagoPuntoVenta();
					}

					this.setVariablesFormularioToObjetoActualFormaPagoPuntoVenta(this.formapagopuntoventa,true);
					this.setVariablesFormularioToObjetoActualForeignKeysFormaPagoPuntoVenta(this.formapagopuntoventa);
				}

				if(this.formapagopuntoventa.getid_banco()!=null) {

					this.sAccionBusqueda="Query";

					this.sFinalQueryGeneral=" where id_banco = "+this.formapagopuntoventa.getid_banco().toString()+" ";

					if(Constantes.ISDEVELOPING) {
						System.out.println(this.sFinalQueryGeneral);
					}

					this.procesarBusqueda(this.sAccionBusqueda);

					this.inicializarActualizarBindingFormaPagoPuntoVenta(false);
				}

				if(Constantes.ISUSAEJBLOGICLAYER) {
					this.formapagopuntoventaLogic.commitNewConnexionToDeep();
				}

			} catch(Exception e) {

				if(Constantes.ISUSAEJBLOGICLAYER) {
					this.formapagopuntoventaLogic.rollbackNewConnexionToDeep();
				}

				FuncionesSwing.manageException(this, e,logger,FormaPagoPuntoVentaConstantesFunciones.CLASSNAME);

			} finally {
				if(Constantes.ISUSAEJBLOGICLAYER) {
					this.formapagopuntoventaLogic.closeNewConnexionToDeep();
				}

			}
		}

	public void jButtonid_cuenta_banco_pun_venFormaPagoPuntoVentaUpdateActionPerformed(java.awt.event.ActionEvent evt) throws Exception {
		try {

			if(Constantes.ISUSAEJBLOGICLAYER) {
				this.formapagopuntoventaLogic.getNewConnexionToDeep("");
			}

			Boolean idTienePermisocuentabancopunven=true;

			idTienePermisocuentabancopunven=this.tienePermisosUsuarioEnPaginaWebFormaPagoPuntoVenta(CuentaBancoPunVenConstantesFunciones.CLASSNAME);

			if(idTienePermisocuentabancopunven) {
				//TOCA TRAER NUEVAMENTE, YA QUE SE PIERDE REGISTRO ACTUAL
				int intSelectedRow = this.jTableDatosFormaPagoPuntoVenta.getSelectedRow();

				if(intSelectedRow<0 && this.jTableDatosFormaPagoPuntoVenta.getRowCount()>0) {
					intSelectedRow =0;
					this.jTableDatosFormaPagoPuntoVenta.setRowSelectionInterval(intSelectedRow,intSelectedRow);
				}
				//ARCHITECTURE
				/*
				if(Constantes.ISUSAEJBLOGICLAYER) {
					this.formapagopuntoventa =(FormaPagoPuntoVenta) this.formapagopuntoventaLogic.getFormaPagoPuntoVentas().toArray()[this.jTableDatosFormaPagoPuntoVenta.convertRowIndexToModel(intSelectedRow)];
				} else if(Constantes.ISUSAEJBREMOTE || Constantes.ISUSAEJBHOME) {
					this.formapagopuntoventa =(FormaPagoPuntoVenta) this.formapagopuntoventas.toArray()[this.jTableDatosFormaPagoPuntoVenta.convertRowIndexToModel(intSelectedRow)];
				}
				*/
				//ARCHITECTURE

				this.setVariablesFormularioToObjetoActualFormaPagoPuntoVenta(this.getformapagopuntoventa(),true);
				this.setVariablesFormularioToObjetoActualForeignKeysFormaPagoPuntoVenta(this.formapagopuntoventa);

				this.cuentabancopunvenBeanSwingJInternalFrame=new CuentaBancoPunVenBeanSwingJInternalFrame(true,true,this.jDesktopPane,this.usuarioActual,this.resumenUsuarioActual,this.moduloActual,this.opcionActual,this.parametroGeneralSg,this.parametroGeneralUsuario,PaginaTipo.AUXILIAR,false,false,false,true);
				this.cuentabancopunvenBeanSwingJInternalFrame.setJInternalFrameParent(this);

				this.cuentabancopunvenBeanSwingJInternalFrame.getCuentaBancoPunVenLogic().setConnexion(this.formapagopuntoventaLogic.getConnexion());

				if(this.formapagopuntoventa.getid_cuenta_banco_pun_ven()!=null) {
					this.cuentabancopunvenBeanSwingJInternalFrame.sTipoBusqueda="PorId";
					this.cuentabancopunvenBeanSwingJInternalFrame.setIdActual(this.formapagopuntoventa.getid_cuenta_banco_pun_ven());
					this.cuentabancopunvenBeanSwingJInternalFrame.procesarBusqueda("PorId");
					this.cuentabancopunvenBeanSwingJInternalFrame.setsAccionBusqueda("PorId");
					this.cuentabancopunvenBeanSwingJInternalFrame.inicializarActualizarBindingTablaCuentaBancoPunVen();
				}

				JInternalFrameBase jinternalFrame =this.cuentabancopunvenBeanSwingJInternalFrame;
				jinternalFrame.setAutoscrolls(true);
				//frame.setSize(screenSize.width-inset*7 , screenSize.height-inset*9);
				jinternalFrame.setVisible(true); 


				TitledBorder titledBorderFormaPagoPuntoVenta=(TitledBorder)this.jScrollPanelDatosFormaPagoPuntoVenta.getBorder();
				TitledBorder titledBordercuentabancopunven=(TitledBorder)this.cuentabancopunvenBeanSwingJInternalFrame.jScrollPanelDatosCuentaBancoPunVen.getBorder();

				titledBordercuentabancopunven.setTitle(titledBorderFormaPagoPuntoVenta.getTitle() + " -> Cuenta Banco");


				if(!Constantes.CON_VARIAS_VENTANAS) {
					MainJFrame.cerrarJInternalFramesExistentes(this.jDesktopPane,jinternalFrame);
				}

				this.jDesktopPane.add(jinternalFrame);

				jinternalFrame.setSelected(true);
			} else {
				throw new Exception("NO TIENE PERMISO PARA TRABAJAR CON ESTA INFORMACION");
			}

			if(Constantes.ISUSAEJBLOGICLAYER) {
				this.formapagopuntoventaLogic.commitNewConnexionToDeep();
			}


		} catch(Exception e) {

			if(Constantes.ISUSAEJBLOGICLAYER) {
				this.formapagopuntoventaLogic.rollbackNewConnexionToDeep();
			}

			FuncionesSwing.manageException(this, e,logger,FormaPagoPuntoVentaConstantesFunciones.CLASSNAME);

		} finally {
			if(Constantes.ISUSAEJBLOGICLAYER) {
				this.formapagopuntoventaLogic.closeNewConnexionToDeep();
			}

		}
	}

	public void jButtonid_cuenta_banco_pun_venFormaPagoPuntoVentaBusquedaActionPerformed(java.awt.event.ActionEvent evt) throws Exception {
		try {

				if(Constantes.ISUSAEJBLOGICLAYER) {
					this.formapagopuntoventaLogic.getNewConnexionToDeep("");
				}

				//TOCA TRAER NUEVAMENTE, YA QUE SE PIERDE REGISTRO ACTUAL
				int intSelectedRow = this.jTableDatosFormaPagoPuntoVenta.getSelectedRow();

				if(intSelectedRow>-1) {
					this.setVariablesFormularioToObjetoActualFormaPagoPuntoVenta(this.getformapagopuntoventa(),true);
					this.setVariablesFormularioToObjetoActualForeignKeysFormaPagoPuntoVenta(this.formapagopuntoventa);
					//ARCHITECTURE
					/*
					if(Constantes.ISUSAEJBLOGICLAYER) {
						this.formapagopuntoventa =(FormaPagoPuntoVenta) this.formapagopuntoventaLogic.getFormaPagoPuntoVentas().toArray()[this.jTableDatosFormaPagoPuntoVenta.convertRowIndexToModel(intSelectedRow)];
					} else if(Constantes.ISUSAEJBREMOTE || Constantes.ISUSAEJBHOME) {
						this.formapagopuntoventa =(FormaPagoPuntoVenta) this.formapagopuntoventas.toArray()[this.jTableDatosFormaPagoPuntoVenta.convertRowIndexToModel(intSelectedRow)];
					}
					*/
					//ARCHITECTURE

				} else {
					if(this.formapagopuntoventa==null) {
						this.formapagopuntoventa = new FormaPagoPuntoVenta();
					}

					this.setVariablesFormularioToObjetoActualFormaPagoPuntoVenta(this.formapagopuntoventa,true);
					this.setVariablesFormularioToObjetoActualForeignKeysFormaPagoPuntoVenta(this.formapagopuntoventa);
				}

				if(this.formapagopuntoventa.getid_cuenta_banco_pun_ven()!=null) {

					this.sAccionBusqueda="Query";

					this.sFinalQueryGeneral=" where id_cuenta_banco_pun_ven = "+this.formapagopuntoventa.getid_cuenta_banco_pun_ven().toString()+" ";

					if(Constantes.ISDEVELOPING) {
						System.out.println(this.sFinalQueryGeneral);
					}

					this.procesarBusqueda(this.sAccionBusqueda);

					this.inicializarActualizarBindingFormaPagoPuntoVenta(false);
				}

				if(Constantes.ISUSAEJBLOGICLAYER) {
					this.formapagopuntoventaLogic.commitNewConnexionToDeep();
				}

			} catch(Exception e) {

				if(Constantes.ISUSAEJBLOGICLAYER) {
					this.formapagopuntoventaLogic.rollbackNewConnexionToDeep();
				}

				FuncionesSwing.manageException(this, e,logger,FormaPagoPuntoVentaConstantesFunciones.CLASSNAME);

			} finally {
				if(Constantes.ISUSAEJBLOGICLAYER) {
					this.formapagopuntoventaLogic.closeNewConnexionToDeep();
				}

			}
		}

	public void jButtonid_tipo_riesgo_chequeFormaPagoPuntoVentaUpdateActionPerformed(java.awt.event.ActionEvent evt) throws Exception {
		try {

			if(Constantes.ISUSAEJBLOGICLAYER) {
				this.formapagopuntoventaLogic.getNewConnexionToDeep("");
			}

			Boolean idTienePermisotiporiesgocheque=true;

			idTienePermisotiporiesgocheque=this.tienePermisosUsuarioEnPaginaWebFormaPagoPuntoVenta(TipoRiesgoChequeConstantesFunciones.CLASSNAME);

			if(idTienePermisotiporiesgocheque) {
				//TOCA TRAER NUEVAMENTE, YA QUE SE PIERDE REGISTRO ACTUAL
				int intSelectedRow = this.jTableDatosFormaPagoPuntoVenta.getSelectedRow();

				if(intSelectedRow<0 && this.jTableDatosFormaPagoPuntoVenta.getRowCount()>0) {
					intSelectedRow =0;
					this.jTableDatosFormaPagoPuntoVenta.setRowSelectionInterval(intSelectedRow,intSelectedRow);
				}
				//ARCHITECTURE
				/*
				if(Constantes.ISUSAEJBLOGICLAYER) {
					this.formapagopuntoventa =(FormaPagoPuntoVenta) this.formapagopuntoventaLogic.getFormaPagoPuntoVentas().toArray()[this.jTableDatosFormaPagoPuntoVenta.convertRowIndexToModel(intSelectedRow)];
				} else if(Constantes.ISUSAEJBREMOTE || Constantes.ISUSAEJBHOME) {
					this.formapagopuntoventa =(FormaPagoPuntoVenta) this.formapagopuntoventas.toArray()[this.jTableDatosFormaPagoPuntoVenta.convertRowIndexToModel(intSelectedRow)];
				}
				*/
				//ARCHITECTURE

				this.setVariablesFormularioToObjetoActualFormaPagoPuntoVenta(this.getformapagopuntoventa(),true);
				this.setVariablesFormularioToObjetoActualForeignKeysFormaPagoPuntoVenta(this.formapagopuntoventa);

				this.tiporiesgochequeBeanSwingJInternalFrame=new TipoRiesgoChequeBeanSwingJInternalFrame(true,true,this.jDesktopPane,this.usuarioActual,this.resumenUsuarioActual,this.moduloActual,this.opcionActual,this.parametroGeneralSg,this.parametroGeneralUsuario,PaginaTipo.AUXILIAR,false,false,false,true);
				this.tiporiesgochequeBeanSwingJInternalFrame.setJInternalFrameParent(this);

				this.tiporiesgochequeBeanSwingJInternalFrame.getTipoRiesgoChequeLogic().setConnexion(this.formapagopuntoventaLogic.getConnexion());

				if(this.formapagopuntoventa.getid_tipo_riesgo_cheque()!=null) {
					this.tiporiesgochequeBeanSwingJInternalFrame.sTipoBusqueda="PorId";
					this.tiporiesgochequeBeanSwingJInternalFrame.setIdActual(this.formapagopuntoventa.getid_tipo_riesgo_cheque());
					this.tiporiesgochequeBeanSwingJInternalFrame.procesarBusqueda("PorId");
					this.tiporiesgochequeBeanSwingJInternalFrame.setsAccionBusqueda("PorId");
					this.tiporiesgochequeBeanSwingJInternalFrame.inicializarActualizarBindingTablaTipoRiesgoCheque();
				}

				JInternalFrameBase jinternalFrame =this.tiporiesgochequeBeanSwingJInternalFrame;
				jinternalFrame.setAutoscrolls(true);
				//frame.setSize(screenSize.width-inset*7 , screenSize.height-inset*9);
				jinternalFrame.setVisible(true); 


				TitledBorder titledBorderFormaPagoPuntoVenta=(TitledBorder)this.jScrollPanelDatosFormaPagoPuntoVenta.getBorder();
				TitledBorder titledBordertiporiesgocheque=(TitledBorder)this.tiporiesgochequeBeanSwingJInternalFrame.jScrollPanelDatosTipoRiesgoCheque.getBorder();

				titledBordertiporiesgocheque.setTitle(titledBorderFormaPagoPuntoVenta.getTitle() + " -> Tipo Riesgo Cheque");


				if(!Constantes.CON_VARIAS_VENTANAS) {
					MainJFrame.cerrarJInternalFramesExistentes(this.jDesktopPane,jinternalFrame);
				}

				this.jDesktopPane.add(jinternalFrame);

				jinternalFrame.setSelected(true);
			} else {
				throw new Exception("NO TIENE PERMISO PARA TRABAJAR CON ESTA INFORMACION");
			}

			if(Constantes.ISUSAEJBLOGICLAYER) {
				this.formapagopuntoventaLogic.commitNewConnexionToDeep();
			}


		} catch(Exception e) {

			if(Constantes.ISUSAEJBLOGICLAYER) {
				this.formapagopuntoventaLogic.rollbackNewConnexionToDeep();
			}

			FuncionesSwing.manageException(this, e,logger,FormaPagoPuntoVentaConstantesFunciones.CLASSNAME);

		} finally {
			if(Constantes.ISUSAEJBLOGICLAYER) {
				this.formapagopuntoventaLogic.closeNewConnexionToDeep();
			}

		}
	}

	public void jButtonid_tipo_riesgo_chequeFormaPagoPuntoVentaBusquedaActionPerformed(java.awt.event.ActionEvent evt) throws Exception {
		try {

				if(Constantes.ISUSAEJBLOGICLAYER) {
					this.formapagopuntoventaLogic.getNewConnexionToDeep("");
				}

				//TOCA TRAER NUEVAMENTE, YA QUE SE PIERDE REGISTRO ACTUAL
				int intSelectedRow = this.jTableDatosFormaPagoPuntoVenta.getSelectedRow();

				if(intSelectedRow>-1) {
					this.setVariablesFormularioToObjetoActualFormaPagoPuntoVenta(this.getformapagopuntoventa(),true);
					this.setVariablesFormularioToObjetoActualForeignKeysFormaPagoPuntoVenta(this.formapagopuntoventa);
					//ARCHITECTURE
					/*
					if(Constantes.ISUSAEJBLOGICLAYER) {
						this.formapagopuntoventa =(FormaPagoPuntoVenta) this.formapagopuntoventaLogic.getFormaPagoPuntoVentas().toArray()[this.jTableDatosFormaPagoPuntoVenta.convertRowIndexToModel(intSelectedRow)];
					} else if(Constantes.ISUSAEJBREMOTE || Constantes.ISUSAEJBHOME) {
						this.formapagopuntoventa =(FormaPagoPuntoVenta) this.formapagopuntoventas.toArray()[this.jTableDatosFormaPagoPuntoVenta.convertRowIndexToModel(intSelectedRow)];
					}
					*/
					//ARCHITECTURE

				} else {
					if(this.formapagopuntoventa==null) {
						this.formapagopuntoventa = new FormaPagoPuntoVenta();
					}

					this.setVariablesFormularioToObjetoActualFormaPagoPuntoVenta(this.formapagopuntoventa,true);
					this.setVariablesFormularioToObjetoActualForeignKeysFormaPagoPuntoVenta(this.formapagopuntoventa);
				}

				if(this.formapagopuntoventa.getid_tipo_riesgo_cheque()!=null) {

					this.sAccionBusqueda="Query";

					this.sFinalQueryGeneral=" where id_tipo_riesgo_cheque = "+this.formapagopuntoventa.getid_tipo_riesgo_cheque().toString()+" ";

					if(Constantes.ISDEVELOPING) {
						System.out.println(this.sFinalQueryGeneral);
					}

					this.procesarBusqueda(this.sAccionBusqueda);

					this.inicializarActualizarBindingFormaPagoPuntoVenta(false);
				}

				if(Constantes.ISUSAEJBLOGICLAYER) {
					this.formapagopuntoventaLogic.commitNewConnexionToDeep();
				}

			} catch(Exception e) {

				if(Constantes.ISUSAEJBLOGICLAYER) {
					this.formapagopuntoventaLogic.rollbackNewConnexionToDeep();
				}

				FuncionesSwing.manageException(this, e,logger,FormaPagoPuntoVentaConstantesFunciones.CLASSNAME);

			} finally {
				if(Constantes.ISUSAEJBLOGICLAYER) {
					this.formapagopuntoventaLogic.closeNewConnexionToDeep();
				}

			}
		}

	public void jButtonnumero_cuentaFormaPagoPuntoVentaBusquedaActionPerformed(java.awt.event.ActionEvent evt) throws Exception {
		try {

				if(Constantes.ISUSAEJBLOGICLAYER) {
					this.formapagopuntoventaLogic.getNewConnexionToDeep("");
				}

				//TOCA TRAER NUEVAMENTE, YA QUE SE PIERDE REGISTRO ACTUAL
				int intSelectedRow = this.jTableDatosFormaPagoPuntoVenta.getSelectedRow();

				if(intSelectedRow>-1) {
					this.setVariablesFormularioToObjetoActualFormaPagoPuntoVenta(this.getformapagopuntoventa(),true);
					this.setVariablesFormularioToObjetoActualForeignKeysFormaPagoPuntoVenta(this.formapagopuntoventa);
					//ARCHITECTURE
					/*
					if(Constantes.ISUSAEJBLOGICLAYER) {
						this.formapagopuntoventa =(FormaPagoPuntoVenta) this.formapagopuntoventaLogic.getFormaPagoPuntoVentas().toArray()[this.jTableDatosFormaPagoPuntoVenta.convertRowIndexToModel(intSelectedRow)];
					} else if(Constantes.ISUSAEJBREMOTE || Constantes.ISUSAEJBHOME) {
						this.formapagopuntoventa =(FormaPagoPuntoVenta) this.formapagopuntoventas.toArray()[this.jTableDatosFormaPagoPuntoVenta.convertRowIndexToModel(intSelectedRow)];
					}
					*/
					//ARCHITECTURE

				} else {
					if(this.formapagopuntoventa==null) {
						this.formapagopuntoventa = new FormaPagoPuntoVenta();
					}

					this.setVariablesFormularioToObjetoActualFormaPagoPuntoVenta(this.formapagopuntoventa,true);
					this.setVariablesFormularioToObjetoActualForeignKeysFormaPagoPuntoVenta(this.formapagopuntoventa);
				}

				if(this.formapagopuntoventa.getnumero_cuenta()!=null) {

					this.sAccionBusqueda="Query";

					this.sFinalQueryGeneral=" where numero_cuenta like '%"+this.formapagopuntoventa.getnumero_cuenta()+"%' ";

					if(Constantes.ISDEVELOPING) {
						System.out.println(this.sFinalQueryGeneral);
					}

					this.procesarBusqueda(this.sAccionBusqueda);

					this.inicializarActualizarBindingFormaPagoPuntoVenta(false);
				}

				if(Constantes.ISUSAEJBLOGICLAYER) {
					this.formapagopuntoventaLogic.commitNewConnexionToDeep();
				}

			} catch(Exception e) {

				if(Constantes.ISUSAEJBLOGICLAYER) {
					this.formapagopuntoventaLogic.rollbackNewConnexionToDeep();
				}

				FuncionesSwing.manageException(this, e,logger,FormaPagoPuntoVentaConstantesFunciones.CLASSNAME);

			} finally {
				if(Constantes.ISUSAEJBLOGICLAYER) {
					this.formapagopuntoventaLogic.closeNewConnexionToDeep();
				}

			}
		}

	public void jButtonnumero_chequeFormaPagoPuntoVentaBusquedaActionPerformed(java.awt.event.ActionEvent evt) throws Exception {
		try {

				if(Constantes.ISUSAEJBLOGICLAYER) {
					this.formapagopuntoventaLogic.getNewConnexionToDeep("");
				}

				//TOCA TRAER NUEVAMENTE, YA QUE SE PIERDE REGISTRO ACTUAL
				int intSelectedRow = this.jTableDatosFormaPagoPuntoVenta.getSelectedRow();

				if(intSelectedRow>-1) {
					this.setVariablesFormularioToObjetoActualFormaPagoPuntoVenta(this.getformapagopuntoventa(),true);
					this.setVariablesFormularioToObjetoActualForeignKeysFormaPagoPuntoVenta(this.formapagopuntoventa);
					//ARCHITECTURE
					/*
					if(Constantes.ISUSAEJBLOGICLAYER) {
						this.formapagopuntoventa =(FormaPagoPuntoVenta) this.formapagopuntoventaLogic.getFormaPagoPuntoVentas().toArray()[this.jTableDatosFormaPagoPuntoVenta.convertRowIndexToModel(intSelectedRow)];
					} else if(Constantes.ISUSAEJBREMOTE || Constantes.ISUSAEJBHOME) {
						this.formapagopuntoventa =(FormaPagoPuntoVenta) this.formapagopuntoventas.toArray()[this.jTableDatosFormaPagoPuntoVenta.convertRowIndexToModel(intSelectedRow)];
					}
					*/
					//ARCHITECTURE

				} else {
					if(this.formapagopuntoventa==null) {
						this.formapagopuntoventa = new FormaPagoPuntoVenta();
					}

					this.setVariablesFormularioToObjetoActualFormaPagoPuntoVenta(this.formapagopuntoventa,true);
					this.setVariablesFormularioToObjetoActualForeignKeysFormaPagoPuntoVenta(this.formapagopuntoventa);
				}

				if(this.formapagopuntoventa.getnumero_cheque()!=null) {

					this.sAccionBusqueda="Query";

					this.sFinalQueryGeneral=" where numero_cheque like '%"+this.formapagopuntoventa.getnumero_cheque()+"%' ";

					if(Constantes.ISDEVELOPING) {
						System.out.println(this.sFinalQueryGeneral);
					}

					this.procesarBusqueda(this.sAccionBusqueda);

					this.inicializarActualizarBindingFormaPagoPuntoVenta(false);
				}

				if(Constantes.ISUSAEJBLOGICLAYER) {
					this.formapagopuntoventaLogic.commitNewConnexionToDeep();
				}

			} catch(Exception e) {

				if(Constantes.ISUSAEJBLOGICLAYER) {
					this.formapagopuntoventaLogic.rollbackNewConnexionToDeep();
				}

				FuncionesSwing.manageException(this, e,logger,FormaPagoPuntoVentaConstantesFunciones.CLASSNAME);

			} finally {
				if(Constantes.ISUSAEJBLOGICLAYER) {
					this.formapagopuntoventaLogic.closeNewConnexionToDeep();
				}

			}
		}

	public void jButtongiradorFormaPagoPuntoVentaBusquedaActionPerformed(java.awt.event.ActionEvent evt) throws Exception {
		try {

				if(Constantes.ISUSAEJBLOGICLAYER) {
					this.formapagopuntoventaLogic.getNewConnexionToDeep("");
				}

				//TOCA TRAER NUEVAMENTE, YA QUE SE PIERDE REGISTRO ACTUAL
				int intSelectedRow = this.jTableDatosFormaPagoPuntoVenta.getSelectedRow();

				if(intSelectedRow>-1) {
					this.setVariablesFormularioToObjetoActualFormaPagoPuntoVenta(this.getformapagopuntoventa(),true);
					this.setVariablesFormularioToObjetoActualForeignKeysFormaPagoPuntoVenta(this.formapagopuntoventa);
					//ARCHITECTURE
					/*
					if(Constantes.ISUSAEJBLOGICLAYER) {
						this.formapagopuntoventa =(FormaPagoPuntoVenta) this.formapagopuntoventaLogic.getFormaPagoPuntoVentas().toArray()[this.jTableDatosFormaPagoPuntoVenta.convertRowIndexToModel(intSelectedRow)];
					} else if(Constantes.ISUSAEJBREMOTE || Constantes.ISUSAEJBHOME) {
						this.formapagopuntoventa =(FormaPagoPuntoVenta) this.formapagopuntoventas.toArray()[this.jTableDatosFormaPagoPuntoVenta.convertRowIndexToModel(intSelectedRow)];
					}
					*/
					//ARCHITECTURE

				} else {
					if(this.formapagopuntoventa==null) {
						this.formapagopuntoventa = new FormaPagoPuntoVenta();
					}

					this.setVariablesFormularioToObjetoActualFormaPagoPuntoVenta(this.formapagopuntoventa,true);
					this.setVariablesFormularioToObjetoActualForeignKeysFormaPagoPuntoVenta(this.formapagopuntoventa);
				}

				if(this.formapagopuntoventa.getgirador()!=null) {

					this.sAccionBusqueda="Query";

					this.sFinalQueryGeneral=" where girador like '%"+this.formapagopuntoventa.getgirador()+"%' ";

					if(Constantes.ISDEVELOPING) {
						System.out.println(this.sFinalQueryGeneral);
					}

					this.procesarBusqueda(this.sAccionBusqueda);

					this.inicializarActualizarBindingFormaPagoPuntoVenta(false);
				}

				if(Constantes.ISUSAEJBLOGICLAYER) {
					this.formapagopuntoventaLogic.commitNewConnexionToDeep();
				}

			} catch(Exception e) {

				if(Constantes.ISUSAEJBLOGICLAYER) {
					this.formapagopuntoventaLogic.rollbackNewConnexionToDeep();
				}

				FuncionesSwing.manageException(this, e,logger,FormaPagoPuntoVentaConstantesFunciones.CLASSNAME);

			} finally {
				if(Constantes.ISUSAEJBLOGICLAYER) {
					this.formapagopuntoventaLogic.closeNewConnexionToDeep();
				}

			}
		}

	public void jButtonid_banco_tarjetaFormaPagoPuntoVentaUpdateActionPerformed(java.awt.event.ActionEvent evt) throws Exception {
		try {

			if(Constantes.ISUSAEJBLOGICLAYER) {
				this.formapagopuntoventaLogic.getNewConnexionToDeep("");
			}

			Boolean idTienePermisobancotarjeta=true;

			idTienePermisobancotarjeta=this.tienePermisosUsuarioEnPaginaWebFormaPagoPuntoVenta(BancoConstantesFunciones.CLASSNAME);

			if(idTienePermisobancotarjeta) {
				//TOCA TRAER NUEVAMENTE, YA QUE SE PIERDE REGISTRO ACTUAL
				int intSelectedRow = this.jTableDatosFormaPagoPuntoVenta.getSelectedRow();

				if(intSelectedRow<0 && this.jTableDatosFormaPagoPuntoVenta.getRowCount()>0) {
					intSelectedRow =0;
					this.jTableDatosFormaPagoPuntoVenta.setRowSelectionInterval(intSelectedRow,intSelectedRow);
				}
				//ARCHITECTURE
				/*
				if(Constantes.ISUSAEJBLOGICLAYER) {
					this.formapagopuntoventa =(FormaPagoPuntoVenta) this.formapagopuntoventaLogic.getFormaPagoPuntoVentas().toArray()[this.jTableDatosFormaPagoPuntoVenta.convertRowIndexToModel(intSelectedRow)];
				} else if(Constantes.ISUSAEJBREMOTE || Constantes.ISUSAEJBHOME) {
					this.formapagopuntoventa =(FormaPagoPuntoVenta) this.formapagopuntoventas.toArray()[this.jTableDatosFormaPagoPuntoVenta.convertRowIndexToModel(intSelectedRow)];
				}
				*/
				//ARCHITECTURE

				this.setVariablesFormularioToObjetoActualFormaPagoPuntoVenta(this.getformapagopuntoventa(),true);
				this.setVariablesFormularioToObjetoActualForeignKeysFormaPagoPuntoVenta(this.formapagopuntoventa);

				this.bancotarjetaBeanSwingJInternalFrame=new BancoBeanSwingJInternalFrame(true,true,this.jDesktopPane,this.usuarioActual,this.resumenUsuarioActual,this.moduloActual,this.opcionActual,this.parametroGeneralSg,this.parametroGeneralUsuario,PaginaTipo.AUXILIAR,false,false,false,true);
				this.bancotarjetaBeanSwingJInternalFrame.setJInternalFrameParent(this);

				this.bancotarjetaBeanSwingJInternalFrame.getBancoLogic().setConnexion(this.formapagopuntoventaLogic.getConnexion());

				if(this.formapagopuntoventa.getid_banco_tarjeta()!=null) {
					this.bancotarjetaBeanSwingJInternalFrame.sTipoBusqueda="PorId";
					this.bancotarjetaBeanSwingJInternalFrame.setIdActual(this.formapagopuntoventa.getid_banco_tarjeta());
					this.bancotarjetaBeanSwingJInternalFrame.procesarBusqueda("PorId");
					this.bancotarjetaBeanSwingJInternalFrame.setsAccionBusqueda("PorId");
					this.bancotarjetaBeanSwingJInternalFrame.inicializarActualizarBindingTablaBanco();
				}

				JInternalFrameBase jinternalFrame =this.bancotarjetaBeanSwingJInternalFrame;
				jinternalFrame.setAutoscrolls(true);
				//frame.setSize(screenSize.width-inset*7 , screenSize.height-inset*9);
				jinternalFrame.setVisible(true); 


				TitledBorder titledBorderFormaPagoPuntoVenta=(TitledBorder)this.jScrollPanelDatosFormaPagoPuntoVenta.getBorder();
				TitledBorder titledBorderbancotarjeta=(TitledBorder)this.bancotarjetaBeanSwingJInternalFrame.jScrollPanelDatosBanco.getBorder();

				titledBorderbancotarjeta.setTitle(titledBorderFormaPagoPuntoVenta.getTitle() + " -> Banco");


				if(!Constantes.CON_VARIAS_VENTANAS) {
					MainJFrame.cerrarJInternalFramesExistentes(this.jDesktopPane,jinternalFrame);
				}

				this.jDesktopPane.add(jinternalFrame);

				jinternalFrame.setSelected(true);
			} else {
				throw new Exception("NO TIENE PERMISO PARA TRABAJAR CON ESTA INFORMACION");
			}

			if(Constantes.ISUSAEJBLOGICLAYER) {
				this.formapagopuntoventaLogic.commitNewConnexionToDeep();
			}


		} catch(Exception e) {

			if(Constantes.ISUSAEJBLOGICLAYER) {
				this.formapagopuntoventaLogic.rollbackNewConnexionToDeep();
			}

			FuncionesSwing.manageException(this, e,logger,FormaPagoPuntoVentaConstantesFunciones.CLASSNAME);

		} finally {
			if(Constantes.ISUSAEJBLOGICLAYER) {
				this.formapagopuntoventaLogic.closeNewConnexionToDeep();
			}

		}
	}

	public void jButtonid_banco_tarjetaFormaPagoPuntoVentaBusquedaActionPerformed(java.awt.event.ActionEvent evt) throws Exception {
		try {

				if(Constantes.ISUSAEJBLOGICLAYER) {
					this.formapagopuntoventaLogic.getNewConnexionToDeep("");
				}

				//TOCA TRAER NUEVAMENTE, YA QUE SE PIERDE REGISTRO ACTUAL
				int intSelectedRow = this.jTableDatosFormaPagoPuntoVenta.getSelectedRow();

				if(intSelectedRow>-1) {
					this.setVariablesFormularioToObjetoActualFormaPagoPuntoVenta(this.getformapagopuntoventa(),true);
					this.setVariablesFormularioToObjetoActualForeignKeysFormaPagoPuntoVenta(this.formapagopuntoventa);
					//ARCHITECTURE
					/*
					if(Constantes.ISUSAEJBLOGICLAYER) {
						this.formapagopuntoventa =(FormaPagoPuntoVenta) this.formapagopuntoventaLogic.getFormaPagoPuntoVentas().toArray()[this.jTableDatosFormaPagoPuntoVenta.convertRowIndexToModel(intSelectedRow)];
					} else if(Constantes.ISUSAEJBREMOTE || Constantes.ISUSAEJBHOME) {
						this.formapagopuntoventa =(FormaPagoPuntoVenta) this.formapagopuntoventas.toArray()[this.jTableDatosFormaPagoPuntoVenta.convertRowIndexToModel(intSelectedRow)];
					}
					*/
					//ARCHITECTURE

				} else {
					if(this.formapagopuntoventa==null) {
						this.formapagopuntoventa = new FormaPagoPuntoVenta();
					}

					this.setVariablesFormularioToObjetoActualFormaPagoPuntoVenta(this.formapagopuntoventa,true);
					this.setVariablesFormularioToObjetoActualForeignKeysFormaPagoPuntoVenta(this.formapagopuntoventa);
				}

				if(this.formapagopuntoventa.getid_banco_tarjeta()!=null) {

					this.sAccionBusqueda="Query";

					this.sFinalQueryGeneral=" where id_banco_tarjeta = "+this.formapagopuntoventa.getid_banco_tarjeta().toString()+" ";

					if(Constantes.ISDEVELOPING) {
						System.out.println(this.sFinalQueryGeneral);
					}

					this.procesarBusqueda(this.sAccionBusqueda);

					this.inicializarActualizarBindingFormaPagoPuntoVenta(false);
				}

				if(Constantes.ISUSAEJBLOGICLAYER) {
					this.formapagopuntoventaLogic.commitNewConnexionToDeep();
				}

			} catch(Exception e) {

				if(Constantes.ISUSAEJBLOGICLAYER) {
					this.formapagopuntoventaLogic.rollbackNewConnexionToDeep();
				}

				FuncionesSwing.manageException(this, e,logger,FormaPagoPuntoVentaConstantesFunciones.CLASSNAME);

			} finally {
				if(Constantes.ISUSAEJBLOGICLAYER) {
					this.formapagopuntoventaLogic.closeNewConnexionToDeep();
				}

			}
		}

	public void jButtonid_tarjeta_creditoFormaPagoPuntoVentaUpdateActionPerformed(java.awt.event.ActionEvent evt) throws Exception {
		try {

			if(Constantes.ISUSAEJBLOGICLAYER) {
				this.formapagopuntoventaLogic.getNewConnexionToDeep("");
			}

			Boolean idTienePermisotarjetacredito=true;

			idTienePermisotarjetacredito=this.tienePermisosUsuarioEnPaginaWebFormaPagoPuntoVenta(TarjetaCreditoConstantesFunciones.CLASSNAME);

			if(idTienePermisotarjetacredito) {
				//TOCA TRAER NUEVAMENTE, YA QUE SE PIERDE REGISTRO ACTUAL
				int intSelectedRow = this.jTableDatosFormaPagoPuntoVenta.getSelectedRow();

				if(intSelectedRow<0 && this.jTableDatosFormaPagoPuntoVenta.getRowCount()>0) {
					intSelectedRow =0;
					this.jTableDatosFormaPagoPuntoVenta.setRowSelectionInterval(intSelectedRow,intSelectedRow);
				}
				//ARCHITECTURE
				/*
				if(Constantes.ISUSAEJBLOGICLAYER) {
					this.formapagopuntoventa =(FormaPagoPuntoVenta) this.formapagopuntoventaLogic.getFormaPagoPuntoVentas().toArray()[this.jTableDatosFormaPagoPuntoVenta.convertRowIndexToModel(intSelectedRow)];
				} else if(Constantes.ISUSAEJBREMOTE || Constantes.ISUSAEJBHOME) {
					this.formapagopuntoventa =(FormaPagoPuntoVenta) this.formapagopuntoventas.toArray()[this.jTableDatosFormaPagoPuntoVenta.convertRowIndexToModel(intSelectedRow)];
				}
				*/
				//ARCHITECTURE

				this.setVariablesFormularioToObjetoActualFormaPagoPuntoVenta(this.getformapagopuntoventa(),true);
				this.setVariablesFormularioToObjetoActualForeignKeysFormaPagoPuntoVenta(this.formapagopuntoventa);

				this.tarjetacreditoBeanSwingJInternalFrame=new TarjetaCreditoBeanSwingJInternalFrame(true,true,this.jDesktopPane,this.usuarioActual,this.resumenUsuarioActual,this.moduloActual,this.opcionActual,this.parametroGeneralSg,this.parametroGeneralUsuario,PaginaTipo.AUXILIAR,false,false,false,true);
				this.tarjetacreditoBeanSwingJInternalFrame.setJInternalFrameParent(this);

				this.tarjetacreditoBeanSwingJInternalFrame.getTarjetaCreditoLogic().setConnexion(this.formapagopuntoventaLogic.getConnexion());

				if(this.formapagopuntoventa.getid_tarjeta_credito()!=null) {
					this.tarjetacreditoBeanSwingJInternalFrame.sTipoBusqueda="PorId";
					this.tarjetacreditoBeanSwingJInternalFrame.setIdActual(this.formapagopuntoventa.getid_tarjeta_credito());
					this.tarjetacreditoBeanSwingJInternalFrame.procesarBusqueda("PorId");
					this.tarjetacreditoBeanSwingJInternalFrame.setsAccionBusqueda("PorId");
					this.tarjetacreditoBeanSwingJInternalFrame.inicializarActualizarBindingTablaTarjetaCredito();
				}

				JInternalFrameBase jinternalFrame =this.tarjetacreditoBeanSwingJInternalFrame;
				jinternalFrame.setAutoscrolls(true);
				//frame.setSize(screenSize.width-inset*7 , screenSize.height-inset*9);
				jinternalFrame.setVisible(true); 


				TitledBorder titledBorderFormaPagoPuntoVenta=(TitledBorder)this.jScrollPanelDatosFormaPagoPuntoVenta.getBorder();
				TitledBorder titledBordertarjetacredito=(TitledBorder)this.tarjetacreditoBeanSwingJInternalFrame.jScrollPanelDatosTarjetaCredito.getBorder();

				titledBordertarjetacredito.setTitle(titledBorderFormaPagoPuntoVenta.getTitle() + " -> Tarjeta Credito");


				if(!Constantes.CON_VARIAS_VENTANAS) {
					MainJFrame.cerrarJInternalFramesExistentes(this.jDesktopPane,jinternalFrame);
				}

				this.jDesktopPane.add(jinternalFrame);

				jinternalFrame.setSelected(true);
			} else {
				throw new Exception("NO TIENE PERMISO PARA TRABAJAR CON ESTA INFORMACION");
			}

			if(Constantes.ISUSAEJBLOGICLAYER) {
				this.formapagopuntoventaLogic.commitNewConnexionToDeep();
			}


		} catch(Exception e) {

			if(Constantes.ISUSAEJBLOGICLAYER) {
				this.formapagopuntoventaLogic.rollbackNewConnexionToDeep();
			}

			FuncionesSwing.manageException(this, e,logger,FormaPagoPuntoVentaConstantesFunciones.CLASSNAME);

		} finally {
			if(Constantes.ISUSAEJBLOGICLAYER) {
				this.formapagopuntoventaLogic.closeNewConnexionToDeep();
			}

		}
	}

	public void jButtonid_tarjeta_creditoFormaPagoPuntoVentaBusquedaActionPerformed(java.awt.event.ActionEvent evt) throws Exception {
		try {

				if(Constantes.ISUSAEJBLOGICLAYER) {
					this.formapagopuntoventaLogic.getNewConnexionToDeep("");
				}

				//TOCA TRAER NUEVAMENTE, YA QUE SE PIERDE REGISTRO ACTUAL
				int intSelectedRow = this.jTableDatosFormaPagoPuntoVenta.getSelectedRow();

				if(intSelectedRow>-1) {
					this.setVariablesFormularioToObjetoActualFormaPagoPuntoVenta(this.getformapagopuntoventa(),true);
					this.setVariablesFormularioToObjetoActualForeignKeysFormaPagoPuntoVenta(this.formapagopuntoventa);
					//ARCHITECTURE
					/*
					if(Constantes.ISUSAEJBLOGICLAYER) {
						this.formapagopuntoventa =(FormaPagoPuntoVenta) this.formapagopuntoventaLogic.getFormaPagoPuntoVentas().toArray()[this.jTableDatosFormaPagoPuntoVenta.convertRowIndexToModel(intSelectedRow)];
					} else if(Constantes.ISUSAEJBREMOTE || Constantes.ISUSAEJBHOME) {
						this.formapagopuntoventa =(FormaPagoPuntoVenta) this.formapagopuntoventas.toArray()[this.jTableDatosFormaPagoPuntoVenta.convertRowIndexToModel(intSelectedRow)];
					}
					*/
					//ARCHITECTURE

				} else {
					if(this.formapagopuntoventa==null) {
						this.formapagopuntoventa = new FormaPagoPuntoVenta();
					}

					this.setVariablesFormularioToObjetoActualFormaPagoPuntoVenta(this.formapagopuntoventa,true);
					this.setVariablesFormularioToObjetoActualForeignKeysFormaPagoPuntoVenta(this.formapagopuntoventa);
				}

				if(this.formapagopuntoventa.getid_tarjeta_credito()!=null) {

					this.sAccionBusqueda="Query";

					this.sFinalQueryGeneral=" where id_tarjeta_credito = "+this.formapagopuntoventa.getid_tarjeta_credito().toString()+" ";

					if(Constantes.ISDEVELOPING) {
						System.out.println(this.sFinalQueryGeneral);
					}

					this.procesarBusqueda(this.sAccionBusqueda);

					this.inicializarActualizarBindingFormaPagoPuntoVenta(false);
				}

				if(Constantes.ISUSAEJBLOGICLAYER) {
					this.formapagopuntoventaLogic.commitNewConnexionToDeep();
				}

			} catch(Exception e) {

				if(Constantes.ISUSAEJBLOGICLAYER) {
					this.formapagopuntoventaLogic.rollbackNewConnexionToDeep();
				}

				FuncionesSwing.manageException(this, e,logger,FormaPagoPuntoVentaConstantesFunciones.CLASSNAME);

			} finally {
				if(Constantes.ISUSAEJBLOGICLAYER) {
					this.formapagopuntoventaLogic.closeNewConnexionToDeep();
				}

			}
		}

	public void jButtonid_tipo_interes_tarjetaFormaPagoPuntoVentaUpdateActionPerformed(java.awt.event.ActionEvent evt) throws Exception {
		try {

			if(Constantes.ISUSAEJBLOGICLAYER) {
				this.formapagopuntoventaLogic.getNewConnexionToDeep("");
			}

			Boolean idTienePermisotipointerestarjeta=true;

			idTienePermisotipointerestarjeta=this.tienePermisosUsuarioEnPaginaWebFormaPagoPuntoVenta(TipoInteresTarjetaConstantesFunciones.CLASSNAME);

			if(idTienePermisotipointerestarjeta) {
				//TOCA TRAER NUEVAMENTE, YA QUE SE PIERDE REGISTRO ACTUAL
				int intSelectedRow = this.jTableDatosFormaPagoPuntoVenta.getSelectedRow();

				if(intSelectedRow<0 && this.jTableDatosFormaPagoPuntoVenta.getRowCount()>0) {
					intSelectedRow =0;
					this.jTableDatosFormaPagoPuntoVenta.setRowSelectionInterval(intSelectedRow,intSelectedRow);
				}
				//ARCHITECTURE
				/*
				if(Constantes.ISUSAEJBLOGICLAYER) {
					this.formapagopuntoventa =(FormaPagoPuntoVenta) this.formapagopuntoventaLogic.getFormaPagoPuntoVentas().toArray()[this.jTableDatosFormaPagoPuntoVenta.convertRowIndexToModel(intSelectedRow)];
				} else if(Constantes.ISUSAEJBREMOTE || Constantes.ISUSAEJBHOME) {
					this.formapagopuntoventa =(FormaPagoPuntoVenta) this.formapagopuntoventas.toArray()[this.jTableDatosFormaPagoPuntoVenta.convertRowIndexToModel(intSelectedRow)];
				}
				*/
				//ARCHITECTURE

				this.setVariablesFormularioToObjetoActualFormaPagoPuntoVenta(this.getformapagopuntoventa(),true);
				this.setVariablesFormularioToObjetoActualForeignKeysFormaPagoPuntoVenta(this.formapagopuntoventa);

				this.tipointerestarjetaBeanSwingJInternalFrame=new TipoInteresTarjetaBeanSwingJInternalFrame(true,true,this.jDesktopPane,this.usuarioActual,this.resumenUsuarioActual,this.moduloActual,this.opcionActual,this.parametroGeneralSg,this.parametroGeneralUsuario,PaginaTipo.AUXILIAR,false,false,false,true);
				this.tipointerestarjetaBeanSwingJInternalFrame.setJInternalFrameParent(this);

				this.tipointerestarjetaBeanSwingJInternalFrame.getTipoInteresTarjetaLogic().setConnexion(this.formapagopuntoventaLogic.getConnexion());

				if(this.formapagopuntoventa.getid_tipo_interes_tarjeta()!=null) {
					this.tipointerestarjetaBeanSwingJInternalFrame.sTipoBusqueda="PorId";
					this.tipointerestarjetaBeanSwingJInternalFrame.setIdActual(this.formapagopuntoventa.getid_tipo_interes_tarjeta());
					this.tipointerestarjetaBeanSwingJInternalFrame.procesarBusqueda("PorId");
					this.tipointerestarjetaBeanSwingJInternalFrame.setsAccionBusqueda("PorId");
					this.tipointerestarjetaBeanSwingJInternalFrame.inicializarActualizarBindingTablaTipoInteresTarjeta();
				}

				JInternalFrameBase jinternalFrame =this.tipointerestarjetaBeanSwingJInternalFrame;
				jinternalFrame.setAutoscrolls(true);
				//frame.setSize(screenSize.width-inset*7 , screenSize.height-inset*9);
				jinternalFrame.setVisible(true); 


				TitledBorder titledBorderFormaPagoPuntoVenta=(TitledBorder)this.jScrollPanelDatosFormaPagoPuntoVenta.getBorder();
				TitledBorder titledBordertipointerestarjeta=(TitledBorder)this.tipointerestarjetaBeanSwingJInternalFrame.jScrollPanelDatosTipoInteresTarjeta.getBorder();

				titledBordertipointerestarjeta.setTitle(titledBorderFormaPagoPuntoVenta.getTitle() + " -> Tipo Interes Tarjeta");


				if(!Constantes.CON_VARIAS_VENTANAS) {
					MainJFrame.cerrarJInternalFramesExistentes(this.jDesktopPane,jinternalFrame);
				}

				this.jDesktopPane.add(jinternalFrame);

				jinternalFrame.setSelected(true);
			} else {
				throw new Exception("NO TIENE PERMISO PARA TRABAJAR CON ESTA INFORMACION");
			}

			if(Constantes.ISUSAEJBLOGICLAYER) {
				this.formapagopuntoventaLogic.commitNewConnexionToDeep();
			}


		} catch(Exception e) {

			if(Constantes.ISUSAEJBLOGICLAYER) {
				this.formapagopuntoventaLogic.rollbackNewConnexionToDeep();
			}

			FuncionesSwing.manageException(this, e,logger,FormaPagoPuntoVentaConstantesFunciones.CLASSNAME);

		} finally {
			if(Constantes.ISUSAEJBLOGICLAYER) {
				this.formapagopuntoventaLogic.closeNewConnexionToDeep();
			}

		}
	}

	public void jButtonid_tipo_interes_tarjetaFormaPagoPuntoVentaBusquedaActionPerformed(java.awt.event.ActionEvent evt) throws Exception {
		try {

				if(Constantes.ISUSAEJBLOGICLAYER) {
					this.formapagopuntoventaLogic.getNewConnexionToDeep("");
				}

				//TOCA TRAER NUEVAMENTE, YA QUE SE PIERDE REGISTRO ACTUAL
				int intSelectedRow = this.jTableDatosFormaPagoPuntoVenta.getSelectedRow();

				if(intSelectedRow>-1) {
					this.setVariablesFormularioToObjetoActualFormaPagoPuntoVenta(this.getformapagopuntoventa(),true);
					this.setVariablesFormularioToObjetoActualForeignKeysFormaPagoPuntoVenta(this.formapagopuntoventa);
					//ARCHITECTURE
					/*
					if(Constantes.ISUSAEJBLOGICLAYER) {
						this.formapagopuntoventa =(FormaPagoPuntoVenta) this.formapagopuntoventaLogic.getFormaPagoPuntoVentas().toArray()[this.jTableDatosFormaPagoPuntoVenta.convertRowIndexToModel(intSelectedRow)];
					} else if(Constantes.ISUSAEJBREMOTE || Constantes.ISUSAEJBHOME) {
						this.formapagopuntoventa =(FormaPagoPuntoVenta) this.formapagopuntoventas.toArray()[this.jTableDatosFormaPagoPuntoVenta.convertRowIndexToModel(intSelectedRow)];
					}
					*/
					//ARCHITECTURE

				} else {
					if(this.formapagopuntoventa==null) {
						this.formapagopuntoventa = new FormaPagoPuntoVenta();
					}

					this.setVariablesFormularioToObjetoActualFormaPagoPuntoVenta(this.formapagopuntoventa,true);
					this.setVariablesFormularioToObjetoActualForeignKeysFormaPagoPuntoVenta(this.formapagopuntoventa);
				}

				if(this.formapagopuntoventa.getid_tipo_interes_tarjeta()!=null) {

					this.sAccionBusqueda="Query";

					this.sFinalQueryGeneral=" where id_tipo_interes_tarjeta = "+this.formapagopuntoventa.getid_tipo_interes_tarjeta().toString()+" ";

					if(Constantes.ISDEVELOPING) {
						System.out.println(this.sFinalQueryGeneral);
					}

					this.procesarBusqueda(this.sAccionBusqueda);

					this.inicializarActualizarBindingFormaPagoPuntoVenta(false);
				}

				if(Constantes.ISUSAEJBLOGICLAYER) {
					this.formapagopuntoventaLogic.commitNewConnexionToDeep();
				}

			} catch(Exception e) {

				if(Constantes.ISUSAEJBLOGICLAYER) {
					this.formapagopuntoventaLogic.rollbackNewConnexionToDeep();
				}

				FuncionesSwing.manageException(this, e,logger,FormaPagoPuntoVentaConstantesFunciones.CLASSNAME);

			} finally {
				if(Constantes.ISUSAEJBLOGICLAYER) {
					this.formapagopuntoventaLogic.closeNewConnexionToDeep();
				}

			}
		}

	public void jButtonid_tipo_pago_tarjetaFormaPagoPuntoVentaUpdateActionPerformed(java.awt.event.ActionEvent evt) throws Exception {
		try {

			if(Constantes.ISUSAEJBLOGICLAYER) {
				this.formapagopuntoventaLogic.getNewConnexionToDeep("");
			}

			Boolean idTienePermisotipopagotarjeta=true;

			idTienePermisotipopagotarjeta=this.tienePermisosUsuarioEnPaginaWebFormaPagoPuntoVenta(TipoPagoTarjetaConstantesFunciones.CLASSNAME);

			if(idTienePermisotipopagotarjeta) {
				//TOCA TRAER NUEVAMENTE, YA QUE SE PIERDE REGISTRO ACTUAL
				int intSelectedRow = this.jTableDatosFormaPagoPuntoVenta.getSelectedRow();

				if(intSelectedRow<0 && this.jTableDatosFormaPagoPuntoVenta.getRowCount()>0) {
					intSelectedRow =0;
					this.jTableDatosFormaPagoPuntoVenta.setRowSelectionInterval(intSelectedRow,intSelectedRow);
				}
				//ARCHITECTURE
				/*
				if(Constantes.ISUSAEJBLOGICLAYER) {
					this.formapagopuntoventa =(FormaPagoPuntoVenta) this.formapagopuntoventaLogic.getFormaPagoPuntoVentas().toArray()[this.jTableDatosFormaPagoPuntoVenta.convertRowIndexToModel(intSelectedRow)];
				} else if(Constantes.ISUSAEJBREMOTE || Constantes.ISUSAEJBHOME) {
					this.formapagopuntoventa =(FormaPagoPuntoVenta) this.formapagopuntoventas.toArray()[this.jTableDatosFormaPagoPuntoVenta.convertRowIndexToModel(intSelectedRow)];
				}
				*/
				//ARCHITECTURE

				this.setVariablesFormularioToObjetoActualFormaPagoPuntoVenta(this.getformapagopuntoventa(),true);
				this.setVariablesFormularioToObjetoActualForeignKeysFormaPagoPuntoVenta(this.formapagopuntoventa);

				this.tipopagotarjetaBeanSwingJInternalFrame=new TipoPagoTarjetaBeanSwingJInternalFrame(true,true,this.jDesktopPane,this.usuarioActual,this.resumenUsuarioActual,this.moduloActual,this.opcionActual,this.parametroGeneralSg,this.parametroGeneralUsuario,PaginaTipo.AUXILIAR,false,false,false,true);
				this.tipopagotarjetaBeanSwingJInternalFrame.setJInternalFrameParent(this);

				this.tipopagotarjetaBeanSwingJInternalFrame.getTipoPagoTarjetaLogic().setConnexion(this.formapagopuntoventaLogic.getConnexion());

				if(this.formapagopuntoventa.getid_tipo_pago_tarjeta()!=null) {
					this.tipopagotarjetaBeanSwingJInternalFrame.sTipoBusqueda="PorId";
					this.tipopagotarjetaBeanSwingJInternalFrame.setIdActual(this.formapagopuntoventa.getid_tipo_pago_tarjeta());
					this.tipopagotarjetaBeanSwingJInternalFrame.procesarBusqueda("PorId");
					this.tipopagotarjetaBeanSwingJInternalFrame.setsAccionBusqueda("PorId");
					this.tipopagotarjetaBeanSwingJInternalFrame.inicializarActualizarBindingTablaTipoPagoTarjeta();
				}

				JInternalFrameBase jinternalFrame =this.tipopagotarjetaBeanSwingJInternalFrame;
				jinternalFrame.setAutoscrolls(true);
				//frame.setSize(screenSize.width-inset*7 , screenSize.height-inset*9);
				jinternalFrame.setVisible(true); 


				TitledBorder titledBorderFormaPagoPuntoVenta=(TitledBorder)this.jScrollPanelDatosFormaPagoPuntoVenta.getBorder();
				TitledBorder titledBordertipopagotarjeta=(TitledBorder)this.tipopagotarjetaBeanSwingJInternalFrame.jScrollPanelDatosTipoPagoTarjeta.getBorder();

				titledBordertipopagotarjeta.setTitle(titledBorderFormaPagoPuntoVenta.getTitle() + " -> Tipo Pago");


				if(!Constantes.CON_VARIAS_VENTANAS) {
					MainJFrame.cerrarJInternalFramesExistentes(this.jDesktopPane,jinternalFrame);
				}

				this.jDesktopPane.add(jinternalFrame);

				jinternalFrame.setSelected(true);
			} else {
				throw new Exception("NO TIENE PERMISO PARA TRABAJAR CON ESTA INFORMACION");
			}

			if(Constantes.ISUSAEJBLOGICLAYER) {
				this.formapagopuntoventaLogic.commitNewConnexionToDeep();
			}


		} catch(Exception e) {

			if(Constantes.ISUSAEJBLOGICLAYER) {
				this.formapagopuntoventaLogic.rollbackNewConnexionToDeep();
			}

			FuncionesSwing.manageException(this, e,logger,FormaPagoPuntoVentaConstantesFunciones.CLASSNAME);

		} finally {
			if(Constantes.ISUSAEJBLOGICLAYER) {
				this.formapagopuntoventaLogic.closeNewConnexionToDeep();
			}

		}
	}

	public void jButtonid_tipo_pago_tarjetaFormaPagoPuntoVentaBusquedaActionPerformed(java.awt.event.ActionEvent evt) throws Exception {
		try {

				if(Constantes.ISUSAEJBLOGICLAYER) {
					this.formapagopuntoventaLogic.getNewConnexionToDeep("");
				}

				//TOCA TRAER NUEVAMENTE, YA QUE SE PIERDE REGISTRO ACTUAL
				int intSelectedRow = this.jTableDatosFormaPagoPuntoVenta.getSelectedRow();

				if(intSelectedRow>-1) {
					this.setVariablesFormularioToObjetoActualFormaPagoPuntoVenta(this.getformapagopuntoventa(),true);
					this.setVariablesFormularioToObjetoActualForeignKeysFormaPagoPuntoVenta(this.formapagopuntoventa);
					//ARCHITECTURE
					/*
					if(Constantes.ISUSAEJBLOGICLAYER) {
						this.formapagopuntoventa =(FormaPagoPuntoVenta) this.formapagopuntoventaLogic.getFormaPagoPuntoVentas().toArray()[this.jTableDatosFormaPagoPuntoVenta.convertRowIndexToModel(intSelectedRow)];
					} else if(Constantes.ISUSAEJBREMOTE || Constantes.ISUSAEJBHOME) {
						this.formapagopuntoventa =(FormaPagoPuntoVenta) this.formapagopuntoventas.toArray()[this.jTableDatosFormaPagoPuntoVenta.convertRowIndexToModel(intSelectedRow)];
					}
					*/
					//ARCHITECTURE

				} else {
					if(this.formapagopuntoventa==null) {
						this.formapagopuntoventa = new FormaPagoPuntoVenta();
					}

					this.setVariablesFormularioToObjetoActualFormaPagoPuntoVenta(this.formapagopuntoventa,true);
					this.setVariablesFormularioToObjetoActualForeignKeysFormaPagoPuntoVenta(this.formapagopuntoventa);
				}

				if(this.formapagopuntoventa.getid_tipo_pago_tarjeta()!=null) {

					this.sAccionBusqueda="Query";

					this.sFinalQueryGeneral=" where id_tipo_pago_tarjeta = "+this.formapagopuntoventa.getid_tipo_pago_tarjeta().toString()+" ";

					if(Constantes.ISDEVELOPING) {
						System.out.println(this.sFinalQueryGeneral);
					}

					this.procesarBusqueda(this.sAccionBusqueda);

					this.inicializarActualizarBindingFormaPagoPuntoVenta(false);
				}

				if(Constantes.ISUSAEJBLOGICLAYER) {
					this.formapagopuntoventaLogic.commitNewConnexionToDeep();
				}

			} catch(Exception e) {

				if(Constantes.ISUSAEJBLOGICLAYER) {
					this.formapagopuntoventaLogic.rollbackNewConnexionToDeep();
				}

				FuncionesSwing.manageException(this, e,logger,FormaPagoPuntoVentaConstantesFunciones.CLASSNAME);

			} finally {
				if(Constantes.ISUSAEJBLOGICLAYER) {
					this.formapagopuntoventaLogic.closeNewConnexionToDeep();
				}

			}
		}

	public void jButtonid_conexionFormaPagoPuntoVentaUpdateActionPerformed(java.awt.event.ActionEvent evt) throws Exception {
		try {

			if(Constantes.ISUSAEJBLOGICLAYER) {
				this.formapagopuntoventaLogic.getNewConnexionToDeep("");
			}

			Boolean idTienePermisoconexion=true;

			idTienePermisoconexion=this.tienePermisosUsuarioEnPaginaWebFormaPagoPuntoVenta(ConexionConstantesFunciones.CLASSNAME);

			if(idTienePermisoconexion) {
				//TOCA TRAER NUEVAMENTE, YA QUE SE PIERDE REGISTRO ACTUAL
				int intSelectedRow = this.jTableDatosFormaPagoPuntoVenta.getSelectedRow();

				if(intSelectedRow<0 && this.jTableDatosFormaPagoPuntoVenta.getRowCount()>0) {
					intSelectedRow =0;
					this.jTableDatosFormaPagoPuntoVenta.setRowSelectionInterval(intSelectedRow,intSelectedRow);
				}
				//ARCHITECTURE
				/*
				if(Constantes.ISUSAEJBLOGICLAYER) {
					this.formapagopuntoventa =(FormaPagoPuntoVenta) this.formapagopuntoventaLogic.getFormaPagoPuntoVentas().toArray()[this.jTableDatosFormaPagoPuntoVenta.convertRowIndexToModel(intSelectedRow)];
				} else if(Constantes.ISUSAEJBREMOTE || Constantes.ISUSAEJBHOME) {
					this.formapagopuntoventa =(FormaPagoPuntoVenta) this.formapagopuntoventas.toArray()[this.jTableDatosFormaPagoPuntoVenta.convertRowIndexToModel(intSelectedRow)];
				}
				*/
				//ARCHITECTURE

				this.setVariablesFormularioToObjetoActualFormaPagoPuntoVenta(this.getformapagopuntoventa(),true);
				this.setVariablesFormularioToObjetoActualForeignKeysFormaPagoPuntoVenta(this.formapagopuntoventa);

				this.conexionBeanSwingJInternalFrame=new ConexionBeanSwingJInternalFrame(true,true,this.jDesktopPane,this.usuarioActual,this.resumenUsuarioActual,this.moduloActual,this.opcionActual,this.parametroGeneralSg,this.parametroGeneralUsuario,PaginaTipo.AUXILIAR,false,false,false,true);
				this.conexionBeanSwingJInternalFrame.setJInternalFrameParent(this);

				this.conexionBeanSwingJInternalFrame.getConexionLogic().setConnexion(this.formapagopuntoventaLogic.getConnexion());

				if(this.formapagopuntoventa.getid_conexion()!=null) {
					this.conexionBeanSwingJInternalFrame.sTipoBusqueda="PorId";
					this.conexionBeanSwingJInternalFrame.setIdActual(this.formapagopuntoventa.getid_conexion());
					this.conexionBeanSwingJInternalFrame.procesarBusqueda("PorId");
					this.conexionBeanSwingJInternalFrame.setsAccionBusqueda("PorId");
					this.conexionBeanSwingJInternalFrame.inicializarActualizarBindingTablaConexion();
				}

				JInternalFrameBase jinternalFrame =this.conexionBeanSwingJInternalFrame;
				jinternalFrame.setAutoscrolls(true);
				//frame.setSize(screenSize.width-inset*7 , screenSize.height-inset*9);
				jinternalFrame.setVisible(true); 


				TitledBorder titledBorderFormaPagoPuntoVenta=(TitledBorder)this.jScrollPanelDatosFormaPagoPuntoVenta.getBorder();
				TitledBorder titledBorderconexion=(TitledBorder)this.conexionBeanSwingJInternalFrame.jScrollPanelDatosConexion.getBorder();

				titledBorderconexion.setTitle(titledBorderFormaPagoPuntoVenta.getTitle() + " -> Conexion");


				if(!Constantes.CON_VARIAS_VENTANAS) {
					MainJFrame.cerrarJInternalFramesExistentes(this.jDesktopPane,jinternalFrame);
				}

				this.jDesktopPane.add(jinternalFrame);

				jinternalFrame.setSelected(true);
			} else {
				throw new Exception("NO TIENE PERMISO PARA TRABAJAR CON ESTA INFORMACION");
			}

			if(Constantes.ISUSAEJBLOGICLAYER) {
				this.formapagopuntoventaLogic.commitNewConnexionToDeep();
			}


		} catch(Exception e) {

			if(Constantes.ISUSAEJBLOGICLAYER) {
				this.formapagopuntoventaLogic.rollbackNewConnexionToDeep();
			}

			FuncionesSwing.manageException(this, e,logger,FormaPagoPuntoVentaConstantesFunciones.CLASSNAME);

		} finally {
			if(Constantes.ISUSAEJBLOGICLAYER) {
				this.formapagopuntoventaLogic.closeNewConnexionToDeep();
			}

		}
	}

	public void jButtonid_conexionFormaPagoPuntoVentaBusquedaActionPerformed(java.awt.event.ActionEvent evt) throws Exception {
		try {

				if(Constantes.ISUSAEJBLOGICLAYER) {
					this.formapagopuntoventaLogic.getNewConnexionToDeep("");
				}

				//TOCA TRAER NUEVAMENTE, YA QUE SE PIERDE REGISTRO ACTUAL
				int intSelectedRow = this.jTableDatosFormaPagoPuntoVenta.getSelectedRow();

				if(intSelectedRow>-1) {
					this.setVariablesFormularioToObjetoActualFormaPagoPuntoVenta(this.getformapagopuntoventa(),true);
					this.setVariablesFormularioToObjetoActualForeignKeysFormaPagoPuntoVenta(this.formapagopuntoventa);
					//ARCHITECTURE
					/*
					if(Constantes.ISUSAEJBLOGICLAYER) {
						this.formapagopuntoventa =(FormaPagoPuntoVenta) this.formapagopuntoventaLogic.getFormaPagoPuntoVentas().toArray()[this.jTableDatosFormaPagoPuntoVenta.convertRowIndexToModel(intSelectedRow)];
					} else if(Constantes.ISUSAEJBREMOTE || Constantes.ISUSAEJBHOME) {
						this.formapagopuntoventa =(FormaPagoPuntoVenta) this.formapagopuntoventas.toArray()[this.jTableDatosFormaPagoPuntoVenta.convertRowIndexToModel(intSelectedRow)];
					}
					*/
					//ARCHITECTURE

				} else {
					if(this.formapagopuntoventa==null) {
						this.formapagopuntoventa = new FormaPagoPuntoVenta();
					}

					this.setVariablesFormularioToObjetoActualFormaPagoPuntoVenta(this.formapagopuntoventa,true);
					this.setVariablesFormularioToObjetoActualForeignKeysFormaPagoPuntoVenta(this.formapagopuntoventa);
				}

				if(this.formapagopuntoventa.getid_conexion()!=null) {

					this.sAccionBusqueda="Query";

					this.sFinalQueryGeneral=" where id_conexion = "+this.formapagopuntoventa.getid_conexion().toString()+" ";

					if(Constantes.ISDEVELOPING) {
						System.out.println(this.sFinalQueryGeneral);
					}

					this.procesarBusqueda(this.sAccionBusqueda);

					this.inicializarActualizarBindingFormaPagoPuntoVenta(false);
				}

				if(Constantes.ISUSAEJBLOGICLAYER) {
					this.formapagopuntoventaLogic.commitNewConnexionToDeep();
				}

			} catch(Exception e) {

				if(Constantes.ISUSAEJBLOGICLAYER) {
					this.formapagopuntoventaLogic.rollbackNewConnexionToDeep();
				}

				FuncionesSwing.manageException(this, e,logger,FormaPagoPuntoVentaConstantesFunciones.CLASSNAME);

			} finally {
				if(Constantes.ISUSAEJBLOGICLAYER) {
					this.formapagopuntoventaLogic.closeNewConnexionToDeep();
				}

			}
		}

	public void jButtonid_mesFormaPagoPuntoVentaUpdateActionPerformed(java.awt.event.ActionEvent evt) throws Exception {
		try {

			if(Constantes.ISUSAEJBLOGICLAYER) {
				this.formapagopuntoventaLogic.getNewConnexionToDeep("");
			}

			Boolean idTienePermisomes=true;

			idTienePermisomes=this.tienePermisosUsuarioEnPaginaWebFormaPagoPuntoVenta(MesConstantesFunciones.CLASSNAME);

			if(idTienePermisomes) {
				//TOCA TRAER NUEVAMENTE, YA QUE SE PIERDE REGISTRO ACTUAL
				int intSelectedRow = this.jTableDatosFormaPagoPuntoVenta.getSelectedRow();

				if(intSelectedRow<0 && this.jTableDatosFormaPagoPuntoVenta.getRowCount()>0) {
					intSelectedRow =0;
					this.jTableDatosFormaPagoPuntoVenta.setRowSelectionInterval(intSelectedRow,intSelectedRow);
				}
				//ARCHITECTURE
				/*
				if(Constantes.ISUSAEJBLOGICLAYER) {
					this.formapagopuntoventa =(FormaPagoPuntoVenta) this.formapagopuntoventaLogic.getFormaPagoPuntoVentas().toArray()[this.jTableDatosFormaPagoPuntoVenta.convertRowIndexToModel(intSelectedRow)];
				} else if(Constantes.ISUSAEJBREMOTE || Constantes.ISUSAEJBHOME) {
					this.formapagopuntoventa =(FormaPagoPuntoVenta) this.formapagopuntoventas.toArray()[this.jTableDatosFormaPagoPuntoVenta.convertRowIndexToModel(intSelectedRow)];
				}
				*/
				//ARCHITECTURE

				this.setVariablesFormularioToObjetoActualFormaPagoPuntoVenta(this.getformapagopuntoventa(),true);
				this.setVariablesFormularioToObjetoActualForeignKeysFormaPagoPuntoVenta(this.formapagopuntoventa);

				this.mesBeanSwingJInternalFrame=new MesBeanSwingJInternalFrame(true,true,this.jDesktopPane,this.usuarioActual,this.resumenUsuarioActual,this.moduloActual,this.opcionActual,this.parametroGeneralSg,this.parametroGeneralUsuario,PaginaTipo.AUXILIAR,false,false,false,true);
				this.mesBeanSwingJInternalFrame.setJInternalFrameParent(this);

				this.mesBeanSwingJInternalFrame.getMesLogic().setConnexion(this.formapagopuntoventaLogic.getConnexion());

				if(this.formapagopuntoventa.getid_mes()!=null) {
					this.mesBeanSwingJInternalFrame.sTipoBusqueda="PorId";
					this.mesBeanSwingJInternalFrame.setIdActual(this.formapagopuntoventa.getid_mes());
					this.mesBeanSwingJInternalFrame.procesarBusqueda("PorId");
					this.mesBeanSwingJInternalFrame.setsAccionBusqueda("PorId");
					this.mesBeanSwingJInternalFrame.inicializarActualizarBindingTablaMes();
				}

				JInternalFrameBase jinternalFrame =this.mesBeanSwingJInternalFrame;
				jinternalFrame.setAutoscrolls(true);
				//frame.setSize(screenSize.width-inset*7 , screenSize.height-inset*9);
				jinternalFrame.setVisible(true); 


				TitledBorder titledBorderFormaPagoPuntoVenta=(TitledBorder)this.jScrollPanelDatosFormaPagoPuntoVenta.getBorder();
				TitledBorder titledBordermes=(TitledBorder)this.mesBeanSwingJInternalFrame.jScrollPanelDatosMes.getBorder();

				titledBordermes.setTitle(titledBorderFormaPagoPuntoVenta.getTitle() + " -> Mes");


				if(!Constantes.CON_VARIAS_VENTANAS) {
					MainJFrame.cerrarJInternalFramesExistentes(this.jDesktopPane,jinternalFrame);
				}

				this.jDesktopPane.add(jinternalFrame);

				jinternalFrame.setSelected(true);
			} else {
				throw new Exception("NO TIENE PERMISO PARA TRABAJAR CON ESTA INFORMACION");
			}

			if(Constantes.ISUSAEJBLOGICLAYER) {
				this.formapagopuntoventaLogic.commitNewConnexionToDeep();
			}


		} catch(Exception e) {

			if(Constantes.ISUSAEJBLOGICLAYER) {
				this.formapagopuntoventaLogic.rollbackNewConnexionToDeep();
			}

			FuncionesSwing.manageException(this, e,logger,FormaPagoPuntoVentaConstantesFunciones.CLASSNAME);

		} finally {
			if(Constantes.ISUSAEJBLOGICLAYER) {
				this.formapagopuntoventaLogic.closeNewConnexionToDeep();
			}

		}
	}

	public void jButtonid_mesFormaPagoPuntoVentaBusquedaActionPerformed(java.awt.event.ActionEvent evt) throws Exception {
		try {

				if(Constantes.ISUSAEJBLOGICLAYER) {
					this.formapagopuntoventaLogic.getNewConnexionToDeep("");
				}

				//TOCA TRAER NUEVAMENTE, YA QUE SE PIERDE REGISTRO ACTUAL
				int intSelectedRow = this.jTableDatosFormaPagoPuntoVenta.getSelectedRow();

				if(intSelectedRow>-1) {
					this.setVariablesFormularioToObjetoActualFormaPagoPuntoVenta(this.getformapagopuntoventa(),true);
					this.setVariablesFormularioToObjetoActualForeignKeysFormaPagoPuntoVenta(this.formapagopuntoventa);
					//ARCHITECTURE
					/*
					if(Constantes.ISUSAEJBLOGICLAYER) {
						this.formapagopuntoventa =(FormaPagoPuntoVenta) this.formapagopuntoventaLogic.getFormaPagoPuntoVentas().toArray()[this.jTableDatosFormaPagoPuntoVenta.convertRowIndexToModel(intSelectedRow)];
					} else if(Constantes.ISUSAEJBREMOTE || Constantes.ISUSAEJBHOME) {
						this.formapagopuntoventa =(FormaPagoPuntoVenta) this.formapagopuntoventas.toArray()[this.jTableDatosFormaPagoPuntoVenta.convertRowIndexToModel(intSelectedRow)];
					}
					*/
					//ARCHITECTURE

				} else {
					if(this.formapagopuntoventa==null) {
						this.formapagopuntoventa = new FormaPagoPuntoVenta();
					}

					this.setVariablesFormularioToObjetoActualFormaPagoPuntoVenta(this.formapagopuntoventa,true);
					this.setVariablesFormularioToObjetoActualForeignKeysFormaPagoPuntoVenta(this.formapagopuntoventa);
				}

				if(this.formapagopuntoventa.getid_mes()!=null) {

					this.sAccionBusqueda="Query";

					this.sFinalQueryGeneral=" where id_mes = "+this.formapagopuntoventa.getid_mes().toString()+" ";

					if(Constantes.ISDEVELOPING) {
						System.out.println(this.sFinalQueryGeneral);
					}

					this.procesarBusqueda(this.sAccionBusqueda);

					this.inicializarActualizarBindingFormaPagoPuntoVenta(false);
				}

				if(Constantes.ISUSAEJBLOGICLAYER) {
					this.formapagopuntoventaLogic.commitNewConnexionToDeep();
				}

			} catch(Exception e) {

				if(Constantes.ISUSAEJBLOGICLAYER) {
					this.formapagopuntoventaLogic.rollbackNewConnexionToDeep();
				}

				FuncionesSwing.manageException(this, e,logger,FormaPagoPuntoVentaConstantesFunciones.CLASSNAME);

			} finally {
				if(Constantes.ISUSAEJBLOGICLAYER) {
					this.formapagopuntoventaLogic.closeNewConnexionToDeep();
				}

			}
		}

	public void jButtonnumeroFormaPagoPuntoVentaBusquedaActionPerformed(java.awt.event.ActionEvent evt) throws Exception {
		try {

				if(Constantes.ISUSAEJBLOGICLAYER) {
					this.formapagopuntoventaLogic.getNewConnexionToDeep("");
				}

				//TOCA TRAER NUEVAMENTE, YA QUE SE PIERDE REGISTRO ACTUAL
				int intSelectedRow = this.jTableDatosFormaPagoPuntoVenta.getSelectedRow();

				if(intSelectedRow>-1) {
					this.setVariablesFormularioToObjetoActualFormaPagoPuntoVenta(this.getformapagopuntoventa(),true);
					this.setVariablesFormularioToObjetoActualForeignKeysFormaPagoPuntoVenta(this.formapagopuntoventa);
					//ARCHITECTURE
					/*
					if(Constantes.ISUSAEJBLOGICLAYER) {
						this.formapagopuntoventa =(FormaPagoPuntoVenta) this.formapagopuntoventaLogic.getFormaPagoPuntoVentas().toArray()[this.jTableDatosFormaPagoPuntoVenta.convertRowIndexToModel(intSelectedRow)];
					} else if(Constantes.ISUSAEJBREMOTE || Constantes.ISUSAEJBHOME) {
						this.formapagopuntoventa =(FormaPagoPuntoVenta) this.formapagopuntoventas.toArray()[this.jTableDatosFormaPagoPuntoVenta.convertRowIndexToModel(intSelectedRow)];
					}
					*/
					//ARCHITECTURE

				} else {
					if(this.formapagopuntoventa==null) {
						this.formapagopuntoventa = new FormaPagoPuntoVenta();
					}

					this.setVariablesFormularioToObjetoActualFormaPagoPuntoVenta(this.formapagopuntoventa,true);
					this.setVariablesFormularioToObjetoActualForeignKeysFormaPagoPuntoVenta(this.formapagopuntoventa);
				}

				if(this.formapagopuntoventa.getnumero()!=null) {

					this.sAccionBusqueda="Query";

					this.sFinalQueryGeneral=" where numero like '%"+this.formapagopuntoventa.getnumero()+"%' ";

					if(Constantes.ISDEVELOPING) {
						System.out.println(this.sFinalQueryGeneral);
					}

					this.procesarBusqueda(this.sAccionBusqueda);

					this.inicializarActualizarBindingFormaPagoPuntoVenta(false);
				}

				if(Constantes.ISUSAEJBLOGICLAYER) {
					this.formapagopuntoventaLogic.commitNewConnexionToDeep();
				}

			} catch(Exception e) {

				if(Constantes.ISUSAEJBLOGICLAYER) {
					this.formapagopuntoventaLogic.rollbackNewConnexionToDeep();
				}

				FuncionesSwing.manageException(this, e,logger,FormaPagoPuntoVentaConstantesFunciones.CLASSNAME);

			} finally {
				if(Constantes.ISUSAEJBLOGICLAYER) {
					this.formapagopuntoventaLogic.closeNewConnexionToDeep();
				}

			}
		}

	public void jButtontarjeta_habienteFormaPagoPuntoVentaBusquedaActionPerformed(java.awt.event.ActionEvent evt) throws Exception {
		try {

				if(Constantes.ISUSAEJBLOGICLAYER) {
					this.formapagopuntoventaLogic.getNewConnexionToDeep("");
				}

				//TOCA TRAER NUEVAMENTE, YA QUE SE PIERDE REGISTRO ACTUAL
				int intSelectedRow = this.jTableDatosFormaPagoPuntoVenta.getSelectedRow();

				if(intSelectedRow>-1) {
					this.setVariablesFormularioToObjetoActualFormaPagoPuntoVenta(this.getformapagopuntoventa(),true);
					this.setVariablesFormularioToObjetoActualForeignKeysFormaPagoPuntoVenta(this.formapagopuntoventa);
					//ARCHITECTURE
					/*
					if(Constantes.ISUSAEJBLOGICLAYER) {
						this.formapagopuntoventa =(FormaPagoPuntoVenta) this.formapagopuntoventaLogic.getFormaPagoPuntoVentas().toArray()[this.jTableDatosFormaPagoPuntoVenta.convertRowIndexToModel(intSelectedRow)];
					} else if(Constantes.ISUSAEJBREMOTE || Constantes.ISUSAEJBHOME) {
						this.formapagopuntoventa =(FormaPagoPuntoVenta) this.formapagopuntoventas.toArray()[this.jTableDatosFormaPagoPuntoVenta.convertRowIndexToModel(intSelectedRow)];
					}
					*/
					//ARCHITECTURE

				} else {
					if(this.formapagopuntoventa==null) {
						this.formapagopuntoventa = new FormaPagoPuntoVenta();
					}

					this.setVariablesFormularioToObjetoActualFormaPagoPuntoVenta(this.formapagopuntoventa,true);
					this.setVariablesFormularioToObjetoActualForeignKeysFormaPagoPuntoVenta(this.formapagopuntoventa);
				}

				if(this.formapagopuntoventa.gettarjeta_habiente()!=null) {

					this.sAccionBusqueda="Query";

					this.sFinalQueryGeneral=" where tarjeta_habiente like '%"+this.formapagopuntoventa.gettarjeta_habiente()+"%' ";

					if(Constantes.ISDEVELOPING) {
						System.out.println(this.sFinalQueryGeneral);
					}

					this.procesarBusqueda(this.sAccionBusqueda);

					this.inicializarActualizarBindingFormaPagoPuntoVenta(false);
				}

				if(Constantes.ISUSAEJBLOGICLAYER) {
					this.formapagopuntoventaLogic.commitNewConnexionToDeep();
				}

			} catch(Exception e) {

				if(Constantes.ISUSAEJBLOGICLAYER) {
					this.formapagopuntoventaLogic.rollbackNewConnexionToDeep();
				}

				FuncionesSwing.manageException(this, e,logger,FormaPagoPuntoVentaConstantesFunciones.CLASSNAME);

			} finally {
				if(Constantes.ISUSAEJBLOGICLAYER) {
					this.formapagopuntoventaLogic.closeNewConnexionToDeep();
				}

			}
		}

	public void jButtonautorizacionFormaPagoPuntoVentaBusquedaActionPerformed(java.awt.event.ActionEvent evt) throws Exception {
		try {

				if(Constantes.ISUSAEJBLOGICLAYER) {
					this.formapagopuntoventaLogic.getNewConnexionToDeep("");
				}

				//TOCA TRAER NUEVAMENTE, YA QUE SE PIERDE REGISTRO ACTUAL
				int intSelectedRow = this.jTableDatosFormaPagoPuntoVenta.getSelectedRow();

				if(intSelectedRow>-1) {
					this.setVariablesFormularioToObjetoActualFormaPagoPuntoVenta(this.getformapagopuntoventa(),true);
					this.setVariablesFormularioToObjetoActualForeignKeysFormaPagoPuntoVenta(this.formapagopuntoventa);
					//ARCHITECTURE
					/*
					if(Constantes.ISUSAEJBLOGICLAYER) {
						this.formapagopuntoventa =(FormaPagoPuntoVenta) this.formapagopuntoventaLogic.getFormaPagoPuntoVentas().toArray()[this.jTableDatosFormaPagoPuntoVenta.convertRowIndexToModel(intSelectedRow)];
					} else if(Constantes.ISUSAEJBREMOTE || Constantes.ISUSAEJBHOME) {
						this.formapagopuntoventa =(FormaPagoPuntoVenta) this.formapagopuntoventas.toArray()[this.jTableDatosFormaPagoPuntoVenta.convertRowIndexToModel(intSelectedRow)];
					}
					*/
					//ARCHITECTURE

				} else {
					if(this.formapagopuntoventa==null) {
						this.formapagopuntoventa = new FormaPagoPuntoVenta();
					}

					this.setVariablesFormularioToObjetoActualFormaPagoPuntoVenta(this.formapagopuntoventa,true);
					this.setVariablesFormularioToObjetoActualForeignKeysFormaPagoPuntoVenta(this.formapagopuntoventa);
				}

				if(this.formapagopuntoventa.getautorizacion()!=null) {

					this.sAccionBusqueda="Query";

					this.sFinalQueryGeneral=" where autorizacion like '%"+this.formapagopuntoventa.getautorizacion()+"%' ";

					if(Constantes.ISDEVELOPING) {
						System.out.println(this.sFinalQueryGeneral);
					}

					this.procesarBusqueda(this.sAccionBusqueda);

					this.inicializarActualizarBindingFormaPagoPuntoVenta(false);
				}

				if(Constantes.ISUSAEJBLOGICLAYER) {
					this.formapagopuntoventaLogic.commitNewConnexionToDeep();
				}

			} catch(Exception e) {

				if(Constantes.ISUSAEJBLOGICLAYER) {
					this.formapagopuntoventaLogic.rollbackNewConnexionToDeep();
				}

				FuncionesSwing.manageException(this, e,logger,FormaPagoPuntoVentaConstantesFunciones.CLASSNAME);

			} finally {
				if(Constantes.ISUSAEJBLOGICLAYER) {
					this.formapagopuntoventaLogic.closeNewConnexionToDeep();
				}

			}
		}

	public void jButtonvoucherFormaPagoPuntoVentaBusquedaActionPerformed(java.awt.event.ActionEvent evt) throws Exception {
		try {

				if(Constantes.ISUSAEJBLOGICLAYER) {
					this.formapagopuntoventaLogic.getNewConnexionToDeep("");
				}

				//TOCA TRAER NUEVAMENTE, YA QUE SE PIERDE REGISTRO ACTUAL
				int intSelectedRow = this.jTableDatosFormaPagoPuntoVenta.getSelectedRow();

				if(intSelectedRow>-1) {
					this.setVariablesFormularioToObjetoActualFormaPagoPuntoVenta(this.getformapagopuntoventa(),true);
					this.setVariablesFormularioToObjetoActualForeignKeysFormaPagoPuntoVenta(this.formapagopuntoventa);
					//ARCHITECTURE
					/*
					if(Constantes.ISUSAEJBLOGICLAYER) {
						this.formapagopuntoventa =(FormaPagoPuntoVenta) this.formapagopuntoventaLogic.getFormaPagoPuntoVentas().toArray()[this.jTableDatosFormaPagoPuntoVenta.convertRowIndexToModel(intSelectedRow)];
					} else if(Constantes.ISUSAEJBREMOTE || Constantes.ISUSAEJBHOME) {
						this.formapagopuntoventa =(FormaPagoPuntoVenta) this.formapagopuntoventas.toArray()[this.jTableDatosFormaPagoPuntoVenta.convertRowIndexToModel(intSelectedRow)];
					}
					*/
					//ARCHITECTURE

				} else {
					if(this.formapagopuntoventa==null) {
						this.formapagopuntoventa = new FormaPagoPuntoVenta();
					}

					this.setVariablesFormularioToObjetoActualFormaPagoPuntoVenta(this.formapagopuntoventa,true);
					this.setVariablesFormularioToObjetoActualForeignKeysFormaPagoPuntoVenta(this.formapagopuntoventa);
				}

				if(this.formapagopuntoventa.getvoucher()!=null) {

					this.sAccionBusqueda="Query";

					this.sFinalQueryGeneral=" where voucher like '%"+this.formapagopuntoventa.getvoucher()+"%' ";

					if(Constantes.ISDEVELOPING) {
						System.out.println(this.sFinalQueryGeneral);
					}

					this.procesarBusqueda(this.sAccionBusqueda);

					this.inicializarActualizarBindingFormaPagoPuntoVenta(false);
				}

				if(Constantes.ISUSAEJBLOGICLAYER) {
					this.formapagopuntoventaLogic.commitNewConnexionToDeep();
				}

			} catch(Exception e) {

				if(Constantes.ISUSAEJBLOGICLAYER) {
					this.formapagopuntoventaLogic.rollbackNewConnexionToDeep();
				}

				FuncionesSwing.manageException(this, e,logger,FormaPagoPuntoVentaConstantesFunciones.CLASSNAME);

			} finally {
				if(Constantes.ISUSAEJBLOGICLAYER) {
					this.formapagopuntoventaLogic.closeNewConnexionToDeep();
				}

			}
		}

	public void jButtonloteFormaPagoPuntoVentaBusquedaActionPerformed(java.awt.event.ActionEvent evt) throws Exception {
		try {

				if(Constantes.ISUSAEJBLOGICLAYER) {
					this.formapagopuntoventaLogic.getNewConnexionToDeep("");
				}

				//TOCA TRAER NUEVAMENTE, YA QUE SE PIERDE REGISTRO ACTUAL
				int intSelectedRow = this.jTableDatosFormaPagoPuntoVenta.getSelectedRow();

				if(intSelectedRow>-1) {
					this.setVariablesFormularioToObjetoActualFormaPagoPuntoVenta(this.getformapagopuntoventa(),true);
					this.setVariablesFormularioToObjetoActualForeignKeysFormaPagoPuntoVenta(this.formapagopuntoventa);
					//ARCHITECTURE
					/*
					if(Constantes.ISUSAEJBLOGICLAYER) {
						this.formapagopuntoventa =(FormaPagoPuntoVenta) this.formapagopuntoventaLogic.getFormaPagoPuntoVentas().toArray()[this.jTableDatosFormaPagoPuntoVenta.convertRowIndexToModel(intSelectedRow)];
					} else if(Constantes.ISUSAEJBREMOTE || Constantes.ISUSAEJBHOME) {
						this.formapagopuntoventa =(FormaPagoPuntoVenta) this.formapagopuntoventas.toArray()[this.jTableDatosFormaPagoPuntoVenta.convertRowIndexToModel(intSelectedRow)];
					}
					*/
					//ARCHITECTURE

				} else {
					if(this.formapagopuntoventa==null) {
						this.formapagopuntoventa = new FormaPagoPuntoVenta();
					}

					this.setVariablesFormularioToObjetoActualFormaPagoPuntoVenta(this.formapagopuntoventa,true);
					this.setVariablesFormularioToObjetoActualForeignKeysFormaPagoPuntoVenta(this.formapagopuntoventa);
				}

				if(this.formapagopuntoventa.getlote()!=null) {

					this.sAccionBusqueda="Query";

					this.sFinalQueryGeneral=" where lote like '%"+this.formapagopuntoventa.getlote()+"%' ";

					if(Constantes.ISDEVELOPING) {
						System.out.println(this.sFinalQueryGeneral);
					}

					this.procesarBusqueda(this.sAccionBusqueda);

					this.inicializarActualizarBindingFormaPagoPuntoVenta(false);
				}

				if(Constantes.ISUSAEJBLOGICLAYER) {
					this.formapagopuntoventaLogic.commitNewConnexionToDeep();
				}

			} catch(Exception e) {

				if(Constantes.ISUSAEJBLOGICLAYER) {
					this.formapagopuntoventaLogic.rollbackNewConnexionToDeep();
				}

				FuncionesSwing.manageException(this, e,logger,FormaPagoPuntoVentaConstantesFunciones.CLASSNAME);

			} finally {
				if(Constantes.ISUSAEJBLOGICLAYER) {
					this.formapagopuntoventaLogic.closeNewConnexionToDeep();
				}

			}
		}

	public void jButtoncuotaFormaPagoPuntoVentaBusquedaActionPerformed(java.awt.event.ActionEvent evt) throws Exception {
		try {

				if(Constantes.ISUSAEJBLOGICLAYER) {
					this.formapagopuntoventaLogic.getNewConnexionToDeep("");
				}

				//TOCA TRAER NUEVAMENTE, YA QUE SE PIERDE REGISTRO ACTUAL
				int intSelectedRow = this.jTableDatosFormaPagoPuntoVenta.getSelectedRow();

				if(intSelectedRow>-1) {
					this.setVariablesFormularioToObjetoActualFormaPagoPuntoVenta(this.getformapagopuntoventa(),true);
					this.setVariablesFormularioToObjetoActualForeignKeysFormaPagoPuntoVenta(this.formapagopuntoventa);
					//ARCHITECTURE
					/*
					if(Constantes.ISUSAEJBLOGICLAYER) {
						this.formapagopuntoventa =(FormaPagoPuntoVenta) this.formapagopuntoventaLogic.getFormaPagoPuntoVentas().toArray()[this.jTableDatosFormaPagoPuntoVenta.convertRowIndexToModel(intSelectedRow)];
					} else if(Constantes.ISUSAEJBREMOTE || Constantes.ISUSAEJBHOME) {
						this.formapagopuntoventa =(FormaPagoPuntoVenta) this.formapagopuntoventas.toArray()[this.jTableDatosFormaPagoPuntoVenta.convertRowIndexToModel(intSelectedRow)];
					}
					*/
					//ARCHITECTURE

				} else {
					if(this.formapagopuntoventa==null) {
						this.formapagopuntoventa = new FormaPagoPuntoVenta();
					}

					this.setVariablesFormularioToObjetoActualFormaPagoPuntoVenta(this.formapagopuntoventa,true);
					this.setVariablesFormularioToObjetoActualForeignKeysFormaPagoPuntoVenta(this.formapagopuntoventa);
				}

				if(this.formapagopuntoventa.getcuota()!=null) {

					this.sAccionBusqueda="Query";

					this.sFinalQueryGeneral=" where cuota = "+this.formapagopuntoventa.getcuota().toString()+" ";

					if(Constantes.ISDEVELOPING) {
						System.out.println(this.sFinalQueryGeneral);
					}

					this.procesarBusqueda(this.sAccionBusqueda);

					this.inicializarActualizarBindingFormaPagoPuntoVenta(false);
				}

				if(Constantes.ISUSAEJBLOGICLAYER) {
					this.formapagopuntoventaLogic.commitNewConnexionToDeep();
				}

			} catch(Exception e) {

				if(Constantes.ISUSAEJBLOGICLAYER) {
					this.formapagopuntoventaLogic.rollbackNewConnexionToDeep();
				}

				FuncionesSwing.manageException(this, e,logger,FormaPagoPuntoVentaConstantesFunciones.CLASSNAME);

			} finally {
				if(Constantes.ISUSAEJBLOGICLAYER) {
					this.formapagopuntoventaLogic.closeNewConnexionToDeep();
				}

			}
		}

	public void jButtonvalor_retencionFormaPagoPuntoVentaBusquedaActionPerformed(java.awt.event.ActionEvent evt) throws Exception {
		try {

				if(Constantes.ISUSAEJBLOGICLAYER) {
					this.formapagopuntoventaLogic.getNewConnexionToDeep("");
				}

				//TOCA TRAER NUEVAMENTE, YA QUE SE PIERDE REGISTRO ACTUAL
				int intSelectedRow = this.jTableDatosFormaPagoPuntoVenta.getSelectedRow();

				if(intSelectedRow>-1) {
					this.setVariablesFormularioToObjetoActualFormaPagoPuntoVenta(this.getformapagopuntoventa(),true);
					this.setVariablesFormularioToObjetoActualForeignKeysFormaPagoPuntoVenta(this.formapagopuntoventa);
					//ARCHITECTURE
					/*
					if(Constantes.ISUSAEJBLOGICLAYER) {
						this.formapagopuntoventa =(FormaPagoPuntoVenta) this.formapagopuntoventaLogic.getFormaPagoPuntoVentas().toArray()[this.jTableDatosFormaPagoPuntoVenta.convertRowIndexToModel(intSelectedRow)];
					} else if(Constantes.ISUSAEJBREMOTE || Constantes.ISUSAEJBHOME) {
						this.formapagopuntoventa =(FormaPagoPuntoVenta) this.formapagopuntoventas.toArray()[this.jTableDatosFormaPagoPuntoVenta.convertRowIndexToModel(intSelectedRow)];
					}
					*/
					//ARCHITECTURE

				} else {
					if(this.formapagopuntoventa==null) {
						this.formapagopuntoventa = new FormaPagoPuntoVenta();
					}

					this.setVariablesFormularioToObjetoActualFormaPagoPuntoVenta(this.formapagopuntoventa,true);
					this.setVariablesFormularioToObjetoActualForeignKeysFormaPagoPuntoVenta(this.formapagopuntoventa);
				}

				if(this.formapagopuntoventa.getvalor_retencion()!=null) {

					this.sAccionBusqueda="Query";

					this.sFinalQueryGeneral=" where valor_retencion = "+this.formapagopuntoventa.getvalor_retencion().toString()+" ";

					if(Constantes.ISDEVELOPING) {
						System.out.println(this.sFinalQueryGeneral);
					}

					this.procesarBusqueda(this.sAccionBusqueda);

					this.inicializarActualizarBindingFormaPagoPuntoVenta(false);
				}

				if(Constantes.ISUSAEJBLOGICLAYER) {
					this.formapagopuntoventaLogic.commitNewConnexionToDeep();
				}

			} catch(Exception e) {

				if(Constantes.ISUSAEJBLOGICLAYER) {
					this.formapagopuntoventaLogic.rollbackNewConnexionToDeep();
				}

				FuncionesSwing.manageException(this, e,logger,FormaPagoPuntoVentaConstantesFunciones.CLASSNAME);

			} finally {
				if(Constantes.ISUSAEJBLOGICLAYER) {
					this.formapagopuntoventaLogic.closeNewConnexionToDeep();
				}

			}
		}

	public void jButtonvalor_comisionFormaPagoPuntoVentaBusquedaActionPerformed(java.awt.event.ActionEvent evt) throws Exception {
		try {

				if(Constantes.ISUSAEJBLOGICLAYER) {
					this.formapagopuntoventaLogic.getNewConnexionToDeep("");
				}

				//TOCA TRAER NUEVAMENTE, YA QUE SE PIERDE REGISTRO ACTUAL
				int intSelectedRow = this.jTableDatosFormaPagoPuntoVenta.getSelectedRow();

				if(intSelectedRow>-1) {
					this.setVariablesFormularioToObjetoActualFormaPagoPuntoVenta(this.getformapagopuntoventa(),true);
					this.setVariablesFormularioToObjetoActualForeignKeysFormaPagoPuntoVenta(this.formapagopuntoventa);
					//ARCHITECTURE
					/*
					if(Constantes.ISUSAEJBLOGICLAYER) {
						this.formapagopuntoventa =(FormaPagoPuntoVenta) this.formapagopuntoventaLogic.getFormaPagoPuntoVentas().toArray()[this.jTableDatosFormaPagoPuntoVenta.convertRowIndexToModel(intSelectedRow)];
					} else if(Constantes.ISUSAEJBREMOTE || Constantes.ISUSAEJBHOME) {
						this.formapagopuntoventa =(FormaPagoPuntoVenta) this.formapagopuntoventas.toArray()[this.jTableDatosFormaPagoPuntoVenta.convertRowIndexToModel(intSelectedRow)];
					}
					*/
					//ARCHITECTURE

				} else {
					if(this.formapagopuntoventa==null) {
						this.formapagopuntoventa = new FormaPagoPuntoVenta();
					}

					this.setVariablesFormularioToObjetoActualFormaPagoPuntoVenta(this.formapagopuntoventa,true);
					this.setVariablesFormularioToObjetoActualForeignKeysFormaPagoPuntoVenta(this.formapagopuntoventa);
				}

				if(this.formapagopuntoventa.getvalor_comision()!=null) {

					this.sAccionBusqueda="Query";

					this.sFinalQueryGeneral=" where valor_comision = "+this.formapagopuntoventa.getvalor_comision().toString()+" ";

					if(Constantes.ISDEVELOPING) {
						System.out.println(this.sFinalQueryGeneral);
					}

					this.procesarBusqueda(this.sAccionBusqueda);

					this.inicializarActualizarBindingFormaPagoPuntoVenta(false);
				}

				if(Constantes.ISUSAEJBLOGICLAYER) {
					this.formapagopuntoventaLogic.commitNewConnexionToDeep();
				}

			} catch(Exception e) {

				if(Constantes.ISUSAEJBLOGICLAYER) {
					this.formapagopuntoventaLogic.rollbackNewConnexionToDeep();
				}

				FuncionesSwing.manageException(this, e,logger,FormaPagoPuntoVentaConstantesFunciones.CLASSNAME);

			} finally {
				if(Constantes.ISUSAEJBLOGICLAYER) {
					this.formapagopuntoventaLogic.closeNewConnexionToDeep();
				}

			}
		}

	public void jButtonvalor_calculadoFormaPagoPuntoVentaBusquedaActionPerformed(java.awt.event.ActionEvent evt) throws Exception {
		try {

				if(Constantes.ISUSAEJBLOGICLAYER) {
					this.formapagopuntoventaLogic.getNewConnexionToDeep("");
				}

				//TOCA TRAER NUEVAMENTE, YA QUE SE PIERDE REGISTRO ACTUAL
				int intSelectedRow = this.jTableDatosFormaPagoPuntoVenta.getSelectedRow();

				if(intSelectedRow>-1) {
					this.setVariablesFormularioToObjetoActualFormaPagoPuntoVenta(this.getformapagopuntoventa(),true);
					this.setVariablesFormularioToObjetoActualForeignKeysFormaPagoPuntoVenta(this.formapagopuntoventa);
					//ARCHITECTURE
					/*
					if(Constantes.ISUSAEJBLOGICLAYER) {
						this.formapagopuntoventa =(FormaPagoPuntoVenta) this.formapagopuntoventaLogic.getFormaPagoPuntoVentas().toArray()[this.jTableDatosFormaPagoPuntoVenta.convertRowIndexToModel(intSelectedRow)];
					} else if(Constantes.ISUSAEJBREMOTE || Constantes.ISUSAEJBHOME) {
						this.formapagopuntoventa =(FormaPagoPuntoVenta) this.formapagopuntoventas.toArray()[this.jTableDatosFormaPagoPuntoVenta.convertRowIndexToModel(intSelectedRow)];
					}
					*/
					//ARCHITECTURE

				} else {
					if(this.formapagopuntoventa==null) {
						this.formapagopuntoventa = new FormaPagoPuntoVenta();
					}

					this.setVariablesFormularioToObjetoActualFormaPagoPuntoVenta(this.formapagopuntoventa,true);
					this.setVariablesFormularioToObjetoActualForeignKeysFormaPagoPuntoVenta(this.formapagopuntoventa);
				}

				if(this.formapagopuntoventa.getvalor_calculado()!=null) {

					this.sAccionBusqueda="Query";

					this.sFinalQueryGeneral=" where valor_calculado = "+this.formapagopuntoventa.getvalor_calculado().toString()+" ";

					if(Constantes.ISDEVELOPING) {
						System.out.println(this.sFinalQueryGeneral);
					}

					this.procesarBusqueda(this.sAccionBusqueda);

					this.inicializarActualizarBindingFormaPagoPuntoVenta(false);
				}

				if(Constantes.ISUSAEJBLOGICLAYER) {
					this.formapagopuntoventaLogic.commitNewConnexionToDeep();
				}

			} catch(Exception e) {

				if(Constantes.ISUSAEJBLOGICLAYER) {
					this.formapagopuntoventaLogic.rollbackNewConnexionToDeep();
				}

				FuncionesSwing.manageException(this, e,logger,FormaPagoPuntoVentaConstantesFunciones.CLASSNAME);

			} finally {
				if(Constantes.ISUSAEJBLOGICLAYER) {
					this.formapagopuntoventaLogic.closeNewConnexionToDeep();
				}

			}
		}

	public void jButtonvalor_canceladoFormaPagoPuntoVentaBusquedaActionPerformed(java.awt.event.ActionEvent evt) throws Exception {
		try {

				if(Constantes.ISUSAEJBLOGICLAYER) {
					this.formapagopuntoventaLogic.getNewConnexionToDeep("");
				}

				//TOCA TRAER NUEVAMENTE, YA QUE SE PIERDE REGISTRO ACTUAL
				int intSelectedRow = this.jTableDatosFormaPagoPuntoVenta.getSelectedRow();

				if(intSelectedRow>-1) {
					this.setVariablesFormularioToObjetoActualFormaPagoPuntoVenta(this.getformapagopuntoventa(),true);
					this.setVariablesFormularioToObjetoActualForeignKeysFormaPagoPuntoVenta(this.formapagopuntoventa);
					//ARCHITECTURE
					/*
					if(Constantes.ISUSAEJBLOGICLAYER) {
						this.formapagopuntoventa =(FormaPagoPuntoVenta) this.formapagopuntoventaLogic.getFormaPagoPuntoVentas().toArray()[this.jTableDatosFormaPagoPuntoVenta.convertRowIndexToModel(intSelectedRow)];
					} else if(Constantes.ISUSAEJBREMOTE || Constantes.ISUSAEJBHOME) {
						this.formapagopuntoventa =(FormaPagoPuntoVenta) this.formapagopuntoventas.toArray()[this.jTableDatosFormaPagoPuntoVenta.convertRowIndexToModel(intSelectedRow)];
					}
					*/
					//ARCHITECTURE

				} else {
					if(this.formapagopuntoventa==null) {
						this.formapagopuntoventa = new FormaPagoPuntoVenta();
					}

					this.setVariablesFormularioToObjetoActualFormaPagoPuntoVenta(this.formapagopuntoventa,true);
					this.setVariablesFormularioToObjetoActualForeignKeysFormaPagoPuntoVenta(this.formapagopuntoventa);
				}

				if(this.formapagopuntoventa.getvalor_cancelado()!=null) {

					this.sAccionBusqueda="Query";

					this.sFinalQueryGeneral=" where valor_cancelado = "+this.formapagopuntoventa.getvalor_cancelado().toString()+" ";

					if(Constantes.ISDEVELOPING) {
						System.out.println(this.sFinalQueryGeneral);
					}

					this.procesarBusqueda(this.sAccionBusqueda);

					this.inicializarActualizarBindingFormaPagoPuntoVenta(false);
				}

				if(Constantes.ISUSAEJBLOGICLAYER) {
					this.formapagopuntoventaLogic.commitNewConnexionToDeep();
				}

			} catch(Exception e) {

				if(Constantes.ISUSAEJBLOGICLAYER) {
					this.formapagopuntoventaLogic.rollbackNewConnexionToDeep();
				}

				FuncionesSwing.manageException(this, e,logger,FormaPagoPuntoVentaConstantesFunciones.CLASSNAME);

			} finally {
				if(Constantes.ISUSAEJBLOGICLAYER) {
					this.formapagopuntoventaLogic.closeNewConnexionToDeep();
				}

			}
		}

	public void jButtonvalor_difiereFormaPagoPuntoVentaBusquedaActionPerformed(java.awt.event.ActionEvent evt) throws Exception {
		try {

				if(Constantes.ISUSAEJBLOGICLAYER) {
					this.formapagopuntoventaLogic.getNewConnexionToDeep("");
				}

				//TOCA TRAER NUEVAMENTE, YA QUE SE PIERDE REGISTRO ACTUAL
				int intSelectedRow = this.jTableDatosFormaPagoPuntoVenta.getSelectedRow();

				if(intSelectedRow>-1) {
					this.setVariablesFormularioToObjetoActualFormaPagoPuntoVenta(this.getformapagopuntoventa(),true);
					this.setVariablesFormularioToObjetoActualForeignKeysFormaPagoPuntoVenta(this.formapagopuntoventa);
					//ARCHITECTURE
					/*
					if(Constantes.ISUSAEJBLOGICLAYER) {
						this.formapagopuntoventa =(FormaPagoPuntoVenta) this.formapagopuntoventaLogic.getFormaPagoPuntoVentas().toArray()[this.jTableDatosFormaPagoPuntoVenta.convertRowIndexToModel(intSelectedRow)];
					} else if(Constantes.ISUSAEJBREMOTE || Constantes.ISUSAEJBHOME) {
						this.formapagopuntoventa =(FormaPagoPuntoVenta) this.formapagopuntoventas.toArray()[this.jTableDatosFormaPagoPuntoVenta.convertRowIndexToModel(intSelectedRow)];
					}
					*/
					//ARCHITECTURE

				} else {
					if(this.formapagopuntoventa==null) {
						this.formapagopuntoventa = new FormaPagoPuntoVenta();
					}

					this.setVariablesFormularioToObjetoActualFormaPagoPuntoVenta(this.formapagopuntoventa,true);
					this.setVariablesFormularioToObjetoActualForeignKeysFormaPagoPuntoVenta(this.formapagopuntoventa);
				}

				if(this.formapagopuntoventa.getvalor_difiere()!=null) {

					this.sAccionBusqueda="Query";

					this.sFinalQueryGeneral=" where valor_difiere = "+this.formapagopuntoventa.getvalor_difiere().toString()+" ";

					if(Constantes.ISDEVELOPING) {
						System.out.println(this.sFinalQueryGeneral);
					}

					this.procesarBusqueda(this.sAccionBusqueda);

					this.inicializarActualizarBindingFormaPagoPuntoVenta(false);
				}

				if(Constantes.ISUSAEJBLOGICLAYER) {
					this.formapagopuntoventaLogic.commitNewConnexionToDeep();
				}

			} catch(Exception e) {

				if(Constantes.ISUSAEJBLOGICLAYER) {
					this.formapagopuntoventaLogic.rollbackNewConnexionToDeep();
				}

				FuncionesSwing.manageException(this, e,logger,FormaPagoPuntoVentaConstantesFunciones.CLASSNAME);

			} finally {
				if(Constantes.ISUSAEJBLOGICLAYER) {
					this.formapagopuntoventaLogic.closeNewConnexionToDeep();
				}

			}
		}

	public void jButtonnumero_retencionFormaPagoPuntoVentaBusquedaActionPerformed(java.awt.event.ActionEvent evt) throws Exception {
		try {

				if(Constantes.ISUSAEJBLOGICLAYER) {
					this.formapagopuntoventaLogic.getNewConnexionToDeep("");
				}

				//TOCA TRAER NUEVAMENTE, YA QUE SE PIERDE REGISTRO ACTUAL
				int intSelectedRow = this.jTableDatosFormaPagoPuntoVenta.getSelectedRow();

				if(intSelectedRow>-1) {
					this.setVariablesFormularioToObjetoActualFormaPagoPuntoVenta(this.getformapagopuntoventa(),true);
					this.setVariablesFormularioToObjetoActualForeignKeysFormaPagoPuntoVenta(this.formapagopuntoventa);
					//ARCHITECTURE
					/*
					if(Constantes.ISUSAEJBLOGICLAYER) {
						this.formapagopuntoventa =(FormaPagoPuntoVenta) this.formapagopuntoventaLogic.getFormaPagoPuntoVentas().toArray()[this.jTableDatosFormaPagoPuntoVenta.convertRowIndexToModel(intSelectedRow)];
					} else if(Constantes.ISUSAEJBREMOTE || Constantes.ISUSAEJBHOME) {
						this.formapagopuntoventa =(FormaPagoPuntoVenta) this.formapagopuntoventas.toArray()[this.jTableDatosFormaPagoPuntoVenta.convertRowIndexToModel(intSelectedRow)];
					}
					*/
					//ARCHITECTURE

				} else {
					if(this.formapagopuntoventa==null) {
						this.formapagopuntoventa = new FormaPagoPuntoVenta();
					}

					this.setVariablesFormularioToObjetoActualFormaPagoPuntoVenta(this.formapagopuntoventa,true);
					this.setVariablesFormularioToObjetoActualForeignKeysFormaPagoPuntoVenta(this.formapagopuntoventa);
				}

				if(this.formapagopuntoventa.getnumero_retencion()!=null) {

					this.sAccionBusqueda="Query";

					this.sFinalQueryGeneral=" where numero_retencion like '%"+this.formapagopuntoventa.getnumero_retencion()+"%' ";

					if(Constantes.ISDEVELOPING) {
						System.out.println(this.sFinalQueryGeneral);
					}

					this.procesarBusqueda(this.sAccionBusqueda);

					this.inicializarActualizarBindingFormaPagoPuntoVenta(false);
				}

				if(Constantes.ISUSAEJBLOGICLAYER) {
					this.formapagopuntoventaLogic.commitNewConnexionToDeep();
				}

			} catch(Exception e) {

				if(Constantes.ISUSAEJBLOGICLAYER) {
					this.formapagopuntoventaLogic.rollbackNewConnexionToDeep();
				}

				FuncionesSwing.manageException(this, e,logger,FormaPagoPuntoVentaConstantesFunciones.CLASSNAME);

			} finally {
				if(Constantes.ISUSAEJBLOGICLAYER) {
					this.formapagopuntoventaLogic.closeNewConnexionToDeep();
				}

			}
		}

	public void jButtonnumero_liquidacionFormaPagoPuntoVentaBusquedaActionPerformed(java.awt.event.ActionEvent evt) throws Exception {
		try {

				if(Constantes.ISUSAEJBLOGICLAYER) {
					this.formapagopuntoventaLogic.getNewConnexionToDeep("");
				}

				//TOCA TRAER NUEVAMENTE, YA QUE SE PIERDE REGISTRO ACTUAL
				int intSelectedRow = this.jTableDatosFormaPagoPuntoVenta.getSelectedRow();

				if(intSelectedRow>-1) {
					this.setVariablesFormularioToObjetoActualFormaPagoPuntoVenta(this.getformapagopuntoventa(),true);
					this.setVariablesFormularioToObjetoActualForeignKeysFormaPagoPuntoVenta(this.formapagopuntoventa);
					//ARCHITECTURE
					/*
					if(Constantes.ISUSAEJBLOGICLAYER) {
						this.formapagopuntoventa =(FormaPagoPuntoVenta) this.formapagopuntoventaLogic.getFormaPagoPuntoVentas().toArray()[this.jTableDatosFormaPagoPuntoVenta.convertRowIndexToModel(intSelectedRow)];
					} else if(Constantes.ISUSAEJBREMOTE || Constantes.ISUSAEJBHOME) {
						this.formapagopuntoventa =(FormaPagoPuntoVenta) this.formapagopuntoventas.toArray()[this.jTableDatosFormaPagoPuntoVenta.convertRowIndexToModel(intSelectedRow)];
					}
					*/
					//ARCHITECTURE

				} else {
					if(this.formapagopuntoventa==null) {
						this.formapagopuntoventa = new FormaPagoPuntoVenta();
					}

					this.setVariablesFormularioToObjetoActualFormaPagoPuntoVenta(this.formapagopuntoventa,true);
					this.setVariablesFormularioToObjetoActualForeignKeysFormaPagoPuntoVenta(this.formapagopuntoventa);
				}

				if(this.formapagopuntoventa.getnumero_liquidacion()!=null) {

					this.sAccionBusqueda="Query";

					this.sFinalQueryGeneral=" where numero_liquidacion like '%"+this.formapagopuntoventa.getnumero_liquidacion()+"%' ";

					if(Constantes.ISDEVELOPING) {
						System.out.println(this.sFinalQueryGeneral);
					}

					this.procesarBusqueda(this.sAccionBusqueda);

					this.inicializarActualizarBindingFormaPagoPuntoVenta(false);
				}

				if(Constantes.ISUSAEJBLOGICLAYER) {
					this.formapagopuntoventaLogic.commitNewConnexionToDeep();
				}

			} catch(Exception e) {

				if(Constantes.ISUSAEJBLOGICLAYER) {
					this.formapagopuntoventaLogic.rollbackNewConnexionToDeep();
				}

				FuncionesSwing.manageException(this, e,logger,FormaPagoPuntoVentaConstantesFunciones.CLASSNAME);

			} finally {
				if(Constantes.ISUSAEJBLOGICLAYER) {
					this.formapagopuntoventaLogic.closeNewConnexionToDeep();
				}

			}
		}

	public void jButtonid_anioFormaPagoPuntoVentaUpdateActionPerformed(java.awt.event.ActionEvent evt) throws Exception {
		try {

			if(Constantes.ISUSAEJBLOGICLAYER) {
				this.formapagopuntoventaLogic.getNewConnexionToDeep("");
			}

			Boolean idTienePermisoanio=true;

			idTienePermisoanio=this.tienePermisosUsuarioEnPaginaWebFormaPagoPuntoVenta(AnioConstantesFunciones.CLASSNAME);

			if(idTienePermisoanio) {
				//TOCA TRAER NUEVAMENTE, YA QUE SE PIERDE REGISTRO ACTUAL
				int intSelectedRow = this.jTableDatosFormaPagoPuntoVenta.getSelectedRow();

				if(intSelectedRow<0 && this.jTableDatosFormaPagoPuntoVenta.getRowCount()>0) {
					intSelectedRow =0;
					this.jTableDatosFormaPagoPuntoVenta.setRowSelectionInterval(intSelectedRow,intSelectedRow);
				}
				//ARCHITECTURE
				/*
				if(Constantes.ISUSAEJBLOGICLAYER) {
					this.formapagopuntoventa =(FormaPagoPuntoVenta) this.formapagopuntoventaLogic.getFormaPagoPuntoVentas().toArray()[this.jTableDatosFormaPagoPuntoVenta.convertRowIndexToModel(intSelectedRow)];
				} else if(Constantes.ISUSAEJBREMOTE || Constantes.ISUSAEJBHOME) {
					this.formapagopuntoventa =(FormaPagoPuntoVenta) this.formapagopuntoventas.toArray()[this.jTableDatosFormaPagoPuntoVenta.convertRowIndexToModel(intSelectedRow)];
				}
				*/
				//ARCHITECTURE

				this.setVariablesFormularioToObjetoActualFormaPagoPuntoVenta(this.getformapagopuntoventa(),true);
				this.setVariablesFormularioToObjetoActualForeignKeysFormaPagoPuntoVenta(this.formapagopuntoventa);

				this.anioBeanSwingJInternalFrame=new AnioBeanSwingJInternalFrame(true,true,this.jDesktopPane,this.usuarioActual,this.resumenUsuarioActual,this.moduloActual,this.opcionActual,this.parametroGeneralSg,this.parametroGeneralUsuario,PaginaTipo.AUXILIAR,false,false,false,true);
				this.anioBeanSwingJInternalFrame.setJInternalFrameParent(this);

				this.anioBeanSwingJInternalFrame.getAnioLogic().setConnexion(this.formapagopuntoventaLogic.getConnexion());

				if(this.formapagopuntoventa.getid_anio()!=null) {
					this.anioBeanSwingJInternalFrame.sTipoBusqueda="PorId";
					this.anioBeanSwingJInternalFrame.setIdActual(this.formapagopuntoventa.getid_anio());
					this.anioBeanSwingJInternalFrame.procesarBusqueda("PorId");
					this.anioBeanSwingJInternalFrame.setsAccionBusqueda("PorId");
					this.anioBeanSwingJInternalFrame.inicializarActualizarBindingTablaAnio();
				}

				JInternalFrameBase jinternalFrame =this.anioBeanSwingJInternalFrame;
				jinternalFrame.setAutoscrolls(true);
				//frame.setSize(screenSize.width-inset*7 , screenSize.height-inset*9);
				jinternalFrame.setVisible(true); 


				TitledBorder titledBorderFormaPagoPuntoVenta=(TitledBorder)this.jScrollPanelDatosFormaPagoPuntoVenta.getBorder();
				TitledBorder titledBorderanio=(TitledBorder)this.anioBeanSwingJInternalFrame.jScrollPanelDatosAnio.getBorder();

				titledBorderanio.setTitle(titledBorderFormaPagoPuntoVenta.getTitle() + " -> Anio");


				if(!Constantes.CON_VARIAS_VENTANAS) {
					MainJFrame.cerrarJInternalFramesExistentes(this.jDesktopPane,jinternalFrame);
				}

				this.jDesktopPane.add(jinternalFrame);

				jinternalFrame.setSelected(true);
			} else {
				throw new Exception("NO TIENE PERMISO PARA TRABAJAR CON ESTA INFORMACION");
			}

			if(Constantes.ISUSAEJBLOGICLAYER) {
				this.formapagopuntoventaLogic.commitNewConnexionToDeep();
			}


		} catch(Exception e) {

			if(Constantes.ISUSAEJBLOGICLAYER) {
				this.formapagopuntoventaLogic.rollbackNewConnexionToDeep();
			}

			FuncionesSwing.manageException(this, e,logger,FormaPagoPuntoVentaConstantesFunciones.CLASSNAME);

		} finally {
			if(Constantes.ISUSAEJBLOGICLAYER) {
				this.formapagopuntoventaLogic.closeNewConnexionToDeep();
			}

		}
	}

	public void jButtonid_anioFormaPagoPuntoVentaBusquedaActionPerformed(java.awt.event.ActionEvent evt) throws Exception {
		try {

				if(Constantes.ISUSAEJBLOGICLAYER) {
					this.formapagopuntoventaLogic.getNewConnexionToDeep("");
				}

				//TOCA TRAER NUEVAMENTE, YA QUE SE PIERDE REGISTRO ACTUAL
				int intSelectedRow = this.jTableDatosFormaPagoPuntoVenta.getSelectedRow();

				if(intSelectedRow>-1) {
					this.setVariablesFormularioToObjetoActualFormaPagoPuntoVenta(this.getformapagopuntoventa(),true);
					this.setVariablesFormularioToObjetoActualForeignKeysFormaPagoPuntoVenta(this.formapagopuntoventa);
					//ARCHITECTURE
					/*
					if(Constantes.ISUSAEJBLOGICLAYER) {
						this.formapagopuntoventa =(FormaPagoPuntoVenta) this.formapagopuntoventaLogic.getFormaPagoPuntoVentas().toArray()[this.jTableDatosFormaPagoPuntoVenta.convertRowIndexToModel(intSelectedRow)];
					} else if(Constantes.ISUSAEJBREMOTE || Constantes.ISUSAEJBHOME) {
						this.formapagopuntoventa =(FormaPagoPuntoVenta) this.formapagopuntoventas.toArray()[this.jTableDatosFormaPagoPuntoVenta.convertRowIndexToModel(intSelectedRow)];
					}
					*/
					//ARCHITECTURE

				} else {
					if(this.formapagopuntoventa==null) {
						this.formapagopuntoventa = new FormaPagoPuntoVenta();
					}

					this.setVariablesFormularioToObjetoActualFormaPagoPuntoVenta(this.formapagopuntoventa,true);
					this.setVariablesFormularioToObjetoActualForeignKeysFormaPagoPuntoVenta(this.formapagopuntoventa);
				}

				if(this.formapagopuntoventa.getid_anio()!=null) {

					this.sAccionBusqueda="Query";

					this.sFinalQueryGeneral=" where id_anio = "+this.formapagopuntoventa.getid_anio().toString()+" ";

					if(Constantes.ISDEVELOPING) {
						System.out.println(this.sFinalQueryGeneral);
					}

					this.procesarBusqueda(this.sAccionBusqueda);

					this.inicializarActualizarBindingFormaPagoPuntoVenta(false);
				}

				if(Constantes.ISUSAEJBLOGICLAYER) {
					this.formapagopuntoventaLogic.commitNewConnexionToDeep();
				}

			} catch(Exception e) {

				if(Constantes.ISUSAEJBLOGICLAYER) {
					this.formapagopuntoventaLogic.rollbackNewConnexionToDeep();
				}

				FuncionesSwing.manageException(this, e,logger,FormaPagoPuntoVentaConstantesFunciones.CLASSNAME);

			} finally {
				if(Constantes.ISUSAEJBLOGICLAYER) {
					this.formapagopuntoventaLogic.closeNewConnexionToDeep();
				}

			}
		}

	public void jButtonid_cuenta_contableFormaPagoPuntoVentaActionPerformed(java.awt.event.ActionEvent evt) throws Exception {
		try {
			this.cuentacontableBeanSwingJInternalFrame=new CuentaContableBeanSwingJInternalFrame(true,true,this.jDesktopPane,this.usuarioActual,this.resumenUsuarioActual,this.moduloActual,this.opcionActual,this.parametroGeneralSg,this.parametroGeneralUsuario,PaginaTipo.BUSQUEDA,false,false,false,true);
			this.cuentacontableBeanSwingJInternalFrame.setJInternalFrameParent(this);
			this.cuentacontableBeanSwingJInternalFrame.sTipoBusqueda="CuentaContable";

			if(!this.sFinalQueryGeneral_cuentacontable.equals("")) {
				this.cuentacontableBeanSwingJInternalFrame.setsFinalQueryGeneral(this.sFinalQueryGeneral_cuentacontable);
				this.cuentacontableBeanSwingJInternalFrame.sAccionBusqueda="Query";


				this.cuentacontableBeanSwingJInternalFrame.procesarBusqueda(this.cuentacontableBeanSwingJInternalFrame.sAccionBusqueda);
				this.cuentacontableBeanSwingJInternalFrame.inicializarActualizarBindingCuentaContable(false);
			}

			if(!this.sFinalQueryComboCuentaContable.equals("") && false) {
			}


			JInternalFrameBase jinternalFrame =this.cuentacontableBeanSwingJInternalFrame;
			jinternalFrame.setAutoscrolls(true);
			//frame.setSize(screenSize.width-inset*7 , screenSize.height-inset*9);
			jinternalFrame.setVisible(true); 


			TitledBorder titledBorderFormaPagoPuntoVenta=null;
			TitledBorder titledBordercuentacontable=null;

			if(!this.jScrollPanelDatosFormaPagoPuntoVenta.getBorder().getClass().equals(EmptyBorder.class)) {
				titledBorderFormaPagoPuntoVenta=(TitledBorder)this.jScrollPanelDatosFormaPagoPuntoVenta.getBorder();
				titledBordercuentacontable=(TitledBorder)this.cuentacontableBeanSwingJInternalFrame.jScrollPanelDatosCuentaContable.getBorder();

				titledBordercuentacontable.setTitle(titledBorderFormaPagoPuntoVenta.getTitle() + " -> Cuenta Contable");
			}

			if(!Constantes.CON_VARIAS_VENTANAS) {
				MainJFrame.cerrarJInternalFramesExistentes(this.jDesktopPane,jinternalFrame);
			}

			this.jDesktopPane.add(jinternalFrame);

			jinternalFrame.setSelected(true);

		} catch(Exception e) {
			FuncionesSwing.manageException(this, e,logger,FormaPagoPuntoVentaConstantesFunciones.CLASSNAME);
		}
	}

	public void jButtonid_cuenta_contableFormaPagoPuntoVentaUpdateActionPerformed(java.awt.event.ActionEvent evt) throws Exception {
		try {

			if(Constantes.ISUSAEJBLOGICLAYER) {
				this.formapagopuntoventaLogic.getNewConnexionToDeep("");
			}

			Boolean idTienePermisocuentacontable=true;

			idTienePermisocuentacontable=this.tienePermisosUsuarioEnPaginaWebFormaPagoPuntoVenta(CuentaContableConstantesFunciones.CLASSNAME);

			if(idTienePermisocuentacontable) {
				//TOCA TRAER NUEVAMENTE, YA QUE SE PIERDE REGISTRO ACTUAL
				int intSelectedRow = this.jTableDatosFormaPagoPuntoVenta.getSelectedRow();

				if(intSelectedRow<0 && this.jTableDatosFormaPagoPuntoVenta.getRowCount()>0) {
					intSelectedRow =0;
					this.jTableDatosFormaPagoPuntoVenta.setRowSelectionInterval(intSelectedRow,intSelectedRow);
				}
				//ARCHITECTURE
				/*
				if(Constantes.ISUSAEJBLOGICLAYER) {
					this.formapagopuntoventa =(FormaPagoPuntoVenta) this.formapagopuntoventaLogic.getFormaPagoPuntoVentas().toArray()[this.jTableDatosFormaPagoPuntoVenta.convertRowIndexToModel(intSelectedRow)];
				} else if(Constantes.ISUSAEJBREMOTE || Constantes.ISUSAEJBHOME) {
					this.formapagopuntoventa =(FormaPagoPuntoVenta) this.formapagopuntoventas.toArray()[this.jTableDatosFormaPagoPuntoVenta.convertRowIndexToModel(intSelectedRow)];
				}
				*/
				//ARCHITECTURE

				this.setVariablesFormularioToObjetoActualFormaPagoPuntoVenta(this.getformapagopuntoventa(),true);
				this.setVariablesFormularioToObjetoActualForeignKeysFormaPagoPuntoVenta(this.formapagopuntoventa);

				this.cuentacontableBeanSwingJInternalFrame=new CuentaContableBeanSwingJInternalFrame(true,true,this.jDesktopPane,this.usuarioActual,this.resumenUsuarioActual,this.moduloActual,this.opcionActual,this.parametroGeneralSg,this.parametroGeneralUsuario,PaginaTipo.AUXILIAR,false,false,false,true);
				this.cuentacontableBeanSwingJInternalFrame.setJInternalFrameParent(this);

				this.cuentacontableBeanSwingJInternalFrame.getCuentaContableLogic().setConnexion(this.formapagopuntoventaLogic.getConnexion());

				if(this.formapagopuntoventa.getid_cuenta_contable()!=null) {
					this.cuentacontableBeanSwingJInternalFrame.sTipoBusqueda="PorId";
					this.cuentacontableBeanSwingJInternalFrame.setIdActual(this.formapagopuntoventa.getid_cuenta_contable());
					this.cuentacontableBeanSwingJInternalFrame.procesarBusqueda("PorId");
					this.cuentacontableBeanSwingJInternalFrame.setsAccionBusqueda("PorId");
					this.cuentacontableBeanSwingJInternalFrame.inicializarActualizarBindingTablaCuentaContable();
				}

				JInternalFrameBase jinternalFrame =this.cuentacontableBeanSwingJInternalFrame;
				jinternalFrame.setAutoscrolls(true);
				//frame.setSize(screenSize.width-inset*7 , screenSize.height-inset*9);
				jinternalFrame.setVisible(true); 


				TitledBorder titledBorderFormaPagoPuntoVenta=(TitledBorder)this.jScrollPanelDatosFormaPagoPuntoVenta.getBorder();
				TitledBorder titledBordercuentacontable=(TitledBorder)this.cuentacontableBeanSwingJInternalFrame.jScrollPanelDatosCuentaContable.getBorder();

				titledBordercuentacontable.setTitle(titledBorderFormaPagoPuntoVenta.getTitle() + " -> Cuenta Contable");


				if(!Constantes.CON_VARIAS_VENTANAS) {
					MainJFrame.cerrarJInternalFramesExistentes(this.jDesktopPane,jinternalFrame);
				}

				this.jDesktopPane.add(jinternalFrame);

				jinternalFrame.setSelected(true);
			} else {
				throw new Exception("NO TIENE PERMISO PARA TRABAJAR CON ESTA INFORMACION");
			}

			if(Constantes.ISUSAEJBLOGICLAYER) {
				this.formapagopuntoventaLogic.commitNewConnexionToDeep();
			}


		} catch(Exception e) {

			if(Constantes.ISUSAEJBLOGICLAYER) {
				this.formapagopuntoventaLogic.rollbackNewConnexionToDeep();
			}

			FuncionesSwing.manageException(this, e,logger,FormaPagoPuntoVentaConstantesFunciones.CLASSNAME);

		} finally {
			if(Constantes.ISUSAEJBLOGICLAYER) {
				this.formapagopuntoventaLogic.closeNewConnexionToDeep();
			}

		}
	}

	public void jButtonid_cuenta_contableFormaPagoPuntoVentaBusquedaActionPerformed(java.awt.event.ActionEvent evt) throws Exception {
		try {

				if(Constantes.ISUSAEJBLOGICLAYER) {
					this.formapagopuntoventaLogic.getNewConnexionToDeep("");
				}

				//TOCA TRAER NUEVAMENTE, YA QUE SE PIERDE REGISTRO ACTUAL
				int intSelectedRow = this.jTableDatosFormaPagoPuntoVenta.getSelectedRow();

				if(intSelectedRow>-1) {
					this.setVariablesFormularioToObjetoActualFormaPagoPuntoVenta(this.getformapagopuntoventa(),true);
					this.setVariablesFormularioToObjetoActualForeignKeysFormaPagoPuntoVenta(this.formapagopuntoventa);
					//ARCHITECTURE
					/*
					if(Constantes.ISUSAEJBLOGICLAYER) {
						this.formapagopuntoventa =(FormaPagoPuntoVenta) this.formapagopuntoventaLogic.getFormaPagoPuntoVentas().toArray()[this.jTableDatosFormaPagoPuntoVenta.convertRowIndexToModel(intSelectedRow)];
					} else if(Constantes.ISUSAEJBREMOTE || Constantes.ISUSAEJBHOME) {
						this.formapagopuntoventa =(FormaPagoPuntoVenta) this.formapagopuntoventas.toArray()[this.jTableDatosFormaPagoPuntoVenta.convertRowIndexToModel(intSelectedRow)];
					}
					*/
					//ARCHITECTURE

				} else {
					if(this.formapagopuntoventa==null) {
						this.formapagopuntoventa = new FormaPagoPuntoVenta();
					}

					this.setVariablesFormularioToObjetoActualFormaPagoPuntoVenta(this.formapagopuntoventa,true);
					this.setVariablesFormularioToObjetoActualForeignKeysFormaPagoPuntoVenta(this.formapagopuntoventa);
				}

				if(this.formapagopuntoventa.getid_cuenta_contable()!=null) {

					this.sAccionBusqueda="Query";

					this.sFinalQueryGeneral=" where id_cuenta_contable = "+this.formapagopuntoventa.getid_cuenta_contable().toString()+" ";

					if(Constantes.ISDEVELOPING) {
						System.out.println(this.sFinalQueryGeneral);
					}

					this.procesarBusqueda(this.sAccionBusqueda);

					this.inicializarActualizarBindingFormaPagoPuntoVenta(false);
				}

				if(Constantes.ISUSAEJBLOGICLAYER) {
					this.formapagopuntoventaLogic.commitNewConnexionToDeep();
				}

			} catch(Exception e) {

				if(Constantes.ISUSAEJBLOGICLAYER) {
					this.formapagopuntoventaLogic.rollbackNewConnexionToDeep();
				}

				FuncionesSwing.manageException(this, e,logger,FormaPagoPuntoVentaConstantesFunciones.CLASSNAME);

			} finally {
				if(Constantes.ISUSAEJBLOGICLAYER) {
					this.formapagopuntoventaLogic.closeNewConnexionToDeep();
				}

			}
		}

	public void jButtonid_asiento_contableFormaPagoPuntoVentaActionPerformed(java.awt.event.ActionEvent evt) throws Exception {
		try {
			this.asientocontableBeanSwingJInternalFrame=new AsientoContableBeanSwingJInternalFrame(true,true,this.jDesktopPane,this.usuarioActual,this.resumenUsuarioActual,this.moduloActual,this.opcionActual,this.parametroGeneralSg,this.parametroGeneralUsuario,PaginaTipo.BUSQUEDA,false,false,false,true);
			this.asientocontableBeanSwingJInternalFrame.setJInternalFrameParent(this);
			this.asientocontableBeanSwingJInternalFrame.sTipoBusqueda="AsientoContable";

			if(!this.sFinalQueryGeneral_asientocontable.equals("")) {
				this.asientocontableBeanSwingJInternalFrame.setsFinalQueryGeneral(this.sFinalQueryGeneral_asientocontable);
				this.asientocontableBeanSwingJInternalFrame.sAccionBusqueda="Query";


				this.asientocontableBeanSwingJInternalFrame.procesarBusqueda(this.asientocontableBeanSwingJInternalFrame.sAccionBusqueda);
				this.asientocontableBeanSwingJInternalFrame.inicializarActualizarBindingAsientoContable(false);
			}

			if(!this.sFinalQueryComboAsientoContable.equals("") && false) {
			}


			JInternalFrameBase jinternalFrame =this.asientocontableBeanSwingJInternalFrame;
			jinternalFrame.setAutoscrolls(true);
			//frame.setSize(screenSize.width-inset*7 , screenSize.height-inset*9);
			jinternalFrame.setVisible(true); 


			TitledBorder titledBorderFormaPagoPuntoVenta=null;
			TitledBorder titledBorderasientocontable=null;

			if(!this.jScrollPanelDatosFormaPagoPuntoVenta.getBorder().getClass().equals(EmptyBorder.class)) {
				titledBorderFormaPagoPuntoVenta=(TitledBorder)this.jScrollPanelDatosFormaPagoPuntoVenta.getBorder();
				titledBorderasientocontable=(TitledBorder)this.asientocontableBeanSwingJInternalFrame.jScrollPanelDatosAsientoContable.getBorder();

				titledBorderasientocontable.setTitle(titledBorderFormaPagoPuntoVenta.getTitle() + " -> Asiento Contable");
			}

			if(!Constantes.CON_VARIAS_VENTANAS) {
				MainJFrame.cerrarJInternalFramesExistentes(this.jDesktopPane,jinternalFrame);
			}

			this.jDesktopPane.add(jinternalFrame);

			jinternalFrame.setSelected(true);

		} catch(Exception e) {
			FuncionesSwing.manageException(this, e,logger,FormaPagoPuntoVentaConstantesFunciones.CLASSNAME);
		}
	}

	public void jButtonid_asiento_contableFormaPagoPuntoVentaUpdateActionPerformed(java.awt.event.ActionEvent evt) throws Exception {
		try {

			if(Constantes.ISUSAEJBLOGICLAYER) {
				this.formapagopuntoventaLogic.getNewConnexionToDeep("");
			}

			Boolean idTienePermisoasientocontable=true;

			idTienePermisoasientocontable=this.tienePermisosUsuarioEnPaginaWebFormaPagoPuntoVenta(AsientoContableConstantesFunciones.CLASSNAME);

			if(idTienePermisoasientocontable) {
				//TOCA TRAER NUEVAMENTE, YA QUE SE PIERDE REGISTRO ACTUAL
				int intSelectedRow = this.jTableDatosFormaPagoPuntoVenta.getSelectedRow();

				if(intSelectedRow<0 && this.jTableDatosFormaPagoPuntoVenta.getRowCount()>0) {
					intSelectedRow =0;
					this.jTableDatosFormaPagoPuntoVenta.setRowSelectionInterval(intSelectedRow,intSelectedRow);
				}
				//ARCHITECTURE
				/*
				if(Constantes.ISUSAEJBLOGICLAYER) {
					this.formapagopuntoventa =(FormaPagoPuntoVenta) this.formapagopuntoventaLogic.getFormaPagoPuntoVentas().toArray()[this.jTableDatosFormaPagoPuntoVenta.convertRowIndexToModel(intSelectedRow)];
				} else if(Constantes.ISUSAEJBREMOTE || Constantes.ISUSAEJBHOME) {
					this.formapagopuntoventa =(FormaPagoPuntoVenta) this.formapagopuntoventas.toArray()[this.jTableDatosFormaPagoPuntoVenta.convertRowIndexToModel(intSelectedRow)];
				}
				*/
				//ARCHITECTURE

				this.setVariablesFormularioToObjetoActualFormaPagoPuntoVenta(this.getformapagopuntoventa(),true);
				this.setVariablesFormularioToObjetoActualForeignKeysFormaPagoPuntoVenta(this.formapagopuntoventa);

				this.asientocontableBeanSwingJInternalFrame=new AsientoContableBeanSwingJInternalFrame(true,true,this.jDesktopPane,this.usuarioActual,this.resumenUsuarioActual,this.moduloActual,this.opcionActual,this.parametroGeneralSg,this.parametroGeneralUsuario,PaginaTipo.AUXILIAR,false,false,false,true);
				this.asientocontableBeanSwingJInternalFrame.setJInternalFrameParent(this);

				this.asientocontableBeanSwingJInternalFrame.getAsientoContableLogic().setConnexion(this.formapagopuntoventaLogic.getConnexion());

				if(this.formapagopuntoventa.getid_asiento_contable()!=null) {
					this.asientocontableBeanSwingJInternalFrame.sTipoBusqueda="PorId";
					this.asientocontableBeanSwingJInternalFrame.setIdActual(this.formapagopuntoventa.getid_asiento_contable());
					this.asientocontableBeanSwingJInternalFrame.procesarBusqueda("PorId");
					this.asientocontableBeanSwingJInternalFrame.setsAccionBusqueda("PorId");
					this.asientocontableBeanSwingJInternalFrame.inicializarActualizarBindingTablaAsientoContable();
				}

				JInternalFrameBase jinternalFrame =this.asientocontableBeanSwingJInternalFrame;
				jinternalFrame.setAutoscrolls(true);
				//frame.setSize(screenSize.width-inset*7 , screenSize.height-inset*9);
				jinternalFrame.setVisible(true); 


				TitledBorder titledBorderFormaPagoPuntoVenta=(TitledBorder)this.jScrollPanelDatosFormaPagoPuntoVenta.getBorder();
				TitledBorder titledBorderasientocontable=(TitledBorder)this.asientocontableBeanSwingJInternalFrame.jScrollPanelDatosAsientoContable.getBorder();

				titledBorderasientocontable.setTitle(titledBorderFormaPagoPuntoVenta.getTitle() + " -> Asiento Contable");


				if(!Constantes.CON_VARIAS_VENTANAS) {
					MainJFrame.cerrarJInternalFramesExistentes(this.jDesktopPane,jinternalFrame);
				}

				this.jDesktopPane.add(jinternalFrame);

				jinternalFrame.setSelected(true);
			} else {
				throw new Exception("NO TIENE PERMISO PARA TRABAJAR CON ESTA INFORMACION");
			}

			if(Constantes.ISUSAEJBLOGICLAYER) {
				this.formapagopuntoventaLogic.commitNewConnexionToDeep();
			}


		} catch(Exception e) {

			if(Constantes.ISUSAEJBLOGICLAYER) {
				this.formapagopuntoventaLogic.rollbackNewConnexionToDeep();
			}

			FuncionesSwing.manageException(this, e,logger,FormaPagoPuntoVentaConstantesFunciones.CLASSNAME);

		} finally {
			if(Constantes.ISUSAEJBLOGICLAYER) {
				this.formapagopuntoventaLogic.closeNewConnexionToDeep();
			}

		}
	}

	public void jButtonid_asiento_contableFormaPagoPuntoVentaBusquedaActionPerformed(java.awt.event.ActionEvent evt) throws Exception {
		try {

				if(Constantes.ISUSAEJBLOGICLAYER) {
					this.formapagopuntoventaLogic.getNewConnexionToDeep("");
				}

				//TOCA TRAER NUEVAMENTE, YA QUE SE PIERDE REGISTRO ACTUAL
				int intSelectedRow = this.jTableDatosFormaPagoPuntoVenta.getSelectedRow();

				if(intSelectedRow>-1) {
					this.setVariablesFormularioToObjetoActualFormaPagoPuntoVenta(this.getformapagopuntoventa(),true);
					this.setVariablesFormularioToObjetoActualForeignKeysFormaPagoPuntoVenta(this.formapagopuntoventa);
					//ARCHITECTURE
					/*
					if(Constantes.ISUSAEJBLOGICLAYER) {
						this.formapagopuntoventa =(FormaPagoPuntoVenta) this.formapagopuntoventaLogic.getFormaPagoPuntoVentas().toArray()[this.jTableDatosFormaPagoPuntoVenta.convertRowIndexToModel(intSelectedRow)];
					} else if(Constantes.ISUSAEJBREMOTE || Constantes.ISUSAEJBHOME) {
						this.formapagopuntoventa =(FormaPagoPuntoVenta) this.formapagopuntoventas.toArray()[this.jTableDatosFormaPagoPuntoVenta.convertRowIndexToModel(intSelectedRow)];
					}
					*/
					//ARCHITECTURE

				} else {
					if(this.formapagopuntoventa==null) {
						this.formapagopuntoventa = new FormaPagoPuntoVenta();
					}

					this.setVariablesFormularioToObjetoActualFormaPagoPuntoVenta(this.formapagopuntoventa,true);
					this.setVariablesFormularioToObjetoActualForeignKeysFormaPagoPuntoVenta(this.formapagopuntoventa);
				}

				if(this.formapagopuntoventa.getid_asiento_contable()!=null) {

					this.sAccionBusqueda="Query";

					this.sFinalQueryGeneral=" where id_asiento_contable = "+this.formapagopuntoventa.getid_asiento_contable().toString()+" ";

					if(Constantes.ISDEVELOPING) {
						System.out.println(this.sFinalQueryGeneral);
					}

					this.procesarBusqueda(this.sAccionBusqueda);

					this.inicializarActualizarBindingFormaPagoPuntoVenta(false);
				}

				if(Constantes.ISUSAEJBLOGICLAYER) {
					this.formapagopuntoventaLogic.commitNewConnexionToDeep();
				}

			} catch(Exception e) {

				if(Constantes.ISUSAEJBLOGICLAYER) {
					this.formapagopuntoventaLogic.rollbackNewConnexionToDeep();
				}

				FuncionesSwing.manageException(this, e,logger,FormaPagoPuntoVentaConstantesFunciones.CLASSNAME);

			} finally {
				if(Constantes.ISUSAEJBLOGICLAYER) {
					this.formapagopuntoventaLogic.closeNewConnexionToDeep();
				}

			}
		}

	
	
	public void closingInternalFrameFormaPagoPuntoVenta() {
		if(this.jInternalFrameDetalleFormFormaPagoPuntoVenta!=null) {
			
		
		
		}
		
		if(this.jInternalFrameDetalleFormFormaPagoPuntoVenta!=null) {
			this.jInternalFrameDetalleFormFormaPagoPuntoVenta.setVisible(false);	    			
			this.jInternalFrameDetalleFormFormaPagoPuntoVenta.dispose();
			this.jInternalFrameDetalleFormFormaPagoPuntoVenta=null;
		}
		
		/*
		if(this.jInternalFrameReporteDinamicoFormaPagoPuntoVenta!=null) {
			this.jInternalFrameReporteDinamicoFormaPagoPuntoVenta.setVisible(false);	    			
			this.jInternalFrameReporteDinamicoFormaPagoPuntoVenta.dispose();
			this.jInternalFrameReporteDinamicoFormaPagoPuntoVenta=null;
		}
		
		if(this.jInternalFrameImportacionFormaPagoPuntoVenta!=null) {
			this.jInternalFrameImportacionFormaPagoPuntoVenta.setVisible(false);	    			
			this.jInternalFrameImportacionFormaPagoPuntoVenta.dispose();
			this.jInternalFrameImportacionFormaPagoPuntoVenta=null;
		}		
		*/
		
		this.setVisible(false);
		this.dispose();
		//this=null;
	}
	
	
	
	public void jButtonActionPerformedGeneral(String sTipo,ActionEvent evt) { 	  
		try {			
			this.startProcessFormaPagoPuntoVenta();
			
			FormaPagoPuntoVentaBeanSwingJInternalFrameAdditional.procesarEventosVista(this.parametroGeneralUsuario,this.moduloActual,this.opcionActual,this.usuarioActual,this,FuncionTipo.BEFORE,ControlTipo.BUTTON,EventoTipo.CLIC,EventoSubTipo.CLICKED,sTipo,this.formapagopuntoventa,new Object(),this.formapagopuntoventaParameterGeneral,this.formapagopuntoventaReturnGeneral);
			
			
			if(sTipo.equals("NuevoFormaPagoPuntoVenta")) {
				jButtonNuevoFormaPagoPuntoVentaActionPerformed(evt,false);
			} else if(sTipo.equals("DuplicarFormaPagoPuntoVenta")) {
				jButtonDuplicarFormaPagoPuntoVentaActionPerformed(evt,false);
			} else if(sTipo.equals("CopiarFormaPagoPuntoVenta")) {
				jButtonCopiarFormaPagoPuntoVentaActionPerformed(evt);
			} else if(sTipo.equals("VerFormFormaPagoPuntoVenta")) {
				jButtonVerFormFormaPagoPuntoVentaActionPerformed(evt);
			} else if(sTipo.equals("NuevoToolBarFormaPagoPuntoVenta")) {
				jButtonNuevoFormaPagoPuntoVentaActionPerformed(evt,false);
			} else if(sTipo.equals("DuplicarToolBarFormaPagoPuntoVenta")) {
				jButtonDuplicarFormaPagoPuntoVentaActionPerformed(evt,false);
			} else if(sTipo.equals("MenuItemNuevoFormaPagoPuntoVenta")) {
				jButtonNuevoFormaPagoPuntoVentaActionPerformed(evt,false);
			} else if(sTipo.equals("MenuItemDuplicarFormaPagoPuntoVenta")) {
				jButtonDuplicarFormaPagoPuntoVentaActionPerformed(evt,false);
			} else if(sTipo.equals("NuevoRelacionesFormaPagoPuntoVenta")) {
				jButtonNuevoFormaPagoPuntoVentaActionPerformed(evt,true);
			} else if(sTipo.equals("NuevoRelacionesToolBarFormaPagoPuntoVenta")) {
				jButtonNuevoFormaPagoPuntoVentaActionPerformed(evt,true);
			} else if(sTipo.equals("MenuItemNuevoRelacionesFormaPagoPuntoVenta")) {
				jButtonNuevoFormaPagoPuntoVentaActionPerformed(evt,true);
			} else if(sTipo.equals("ModificarFormaPagoPuntoVenta")) {
				jButtonModificarFormaPagoPuntoVentaActionPerformed(evt);
			} else if(sTipo.equals("ModificarToolBarFormaPagoPuntoVenta")) {
				jButtonModificarFormaPagoPuntoVentaActionPerformed(evt);
			} else if(sTipo.equals("MenuItemModificarFormaPagoPuntoVenta")) {
				jButtonModificarFormaPagoPuntoVentaActionPerformed(evt);
			} else if(sTipo.equals("ActualizarFormaPagoPuntoVenta")) {
				jButtonActualizarFormaPagoPuntoVentaActionPerformed(evt);
			} else if(sTipo.equals("ActualizarToolBarFormaPagoPuntoVenta")) {
				jButtonActualizarFormaPagoPuntoVentaActionPerformed(evt);
			} else if(sTipo.equals("MenuItemActualizarFormaPagoPuntoVenta")) {
				jButtonActualizarFormaPagoPuntoVentaActionPerformed(evt);
			} else if(sTipo.equals("EliminarFormaPagoPuntoVenta")) {
				jButtonEliminarFormaPagoPuntoVentaActionPerformed(evt);
			} else if(sTipo.equals("EliminarToolBarFormaPagoPuntoVenta")) {
				jButtonEliminarFormaPagoPuntoVentaActionPerformed(evt);
			} else if(sTipo.equals("MenuItemEliminarFormaPagoPuntoVenta")) {
				jButtonEliminarFormaPagoPuntoVentaActionPerformed(evt);
			} else if(sTipo.equals("CancelarFormaPagoPuntoVenta")) {
				jButtonCancelarFormaPagoPuntoVentaActionPerformed(evt);
			} else if(sTipo.equals("CancelarToolBarFormaPagoPuntoVenta")) {
				jButtonCancelarFormaPagoPuntoVentaActionPerformed(evt);
			} else if(sTipo.equals("MenuItemCancelarFormaPagoPuntoVenta")) {
				jButtonCancelarFormaPagoPuntoVentaActionPerformed(evt);
			} else if(sTipo.equals("CerrarFormaPagoPuntoVenta")) {
				jButtonCerrarFormaPagoPuntoVentaActionPerformed(evt);
			} else if(sTipo.equals("CerrarToolBarFormaPagoPuntoVenta")) {
				jButtonCerrarFormaPagoPuntoVentaActionPerformed(evt);
			} else if(sTipo.equals("MenuItemCerrarFormaPagoPuntoVenta")) {
				jButtonCerrarFormaPagoPuntoVentaActionPerformed(evt);
			} else if(sTipo.equals("MostrarOcultarToolBarFormaPagoPuntoVenta")) {
				jButtonMostrarOcultarFormaPagoPuntoVentaActionPerformed(evt);
			} else if(sTipo.equals("MenuItemDetalleCerrarFormaPagoPuntoVenta")) {
				jButtonCancelarFormaPagoPuntoVentaActionPerformed(evt);
			} else if(sTipo.equals("GuardarCambiosFormaPagoPuntoVenta")) {
				jButtonGuardarCambiosFormaPagoPuntoVentaActionPerformed(evt);
			} else if(sTipo.equals("GuardarCambiosToolBarFormaPagoPuntoVenta")) {
				jButtonGuardarCambiosFormaPagoPuntoVentaActionPerformed(evt);
			} else if(sTipo.equals("CopiarToolBarFormaPagoPuntoVenta")) {
				jButtonCopiarFormaPagoPuntoVentaActionPerformed(evt);
			} else if(sTipo.equals("VerFormToolBarFormaPagoPuntoVenta")) {
				jButtonVerFormFormaPagoPuntoVentaActionPerformed(evt);
			} else if(sTipo.equals("MenuItemGuardarCambiosFormaPagoPuntoVenta")) {
				jButtonGuardarCambiosFormaPagoPuntoVentaActionPerformed(evt);
			} else if(sTipo.equals("MenuItemCopiarFormaPagoPuntoVenta")) {
				jButtonCopiarFormaPagoPuntoVentaActionPerformed(evt);
			} else if(sTipo.equals("MenuItemVerFormFormaPagoPuntoVenta")) {
				jButtonVerFormFormaPagoPuntoVentaActionPerformed(evt);
			} else if(sTipo.equals("GuardarCambiosTablaFormaPagoPuntoVenta")) {
				jButtonGuardarCambiosFormaPagoPuntoVentaActionPerformed(evt);
			} else if(sTipo.equals("GuardarCambiosTablaToolBarFormaPagoPuntoVenta")) {
				jButtonGuardarCambiosFormaPagoPuntoVentaActionPerformed(evt);
			} else if(sTipo.equals("MenuItemGuardarCambiosTablaFormaPagoPuntoVenta")) {
				jButtonGuardarCambiosFormaPagoPuntoVentaActionPerformed(evt);
			} else if(sTipo.equals("RecargarInformacionFormaPagoPuntoVenta")) {
				jButtonRecargarInformacionFormaPagoPuntoVentaActionPerformed(evt);
			} else if(sTipo.equals("RecargarInformacionToolBarFormaPagoPuntoVenta")) {
				jButtonRecargarInformacionFormaPagoPuntoVentaActionPerformed(evt);
			} else if(sTipo.equals("MenuItemRecargarInformacionFormaPagoPuntoVenta")) {
				jButtonRecargarInformacionFormaPagoPuntoVentaActionPerformed(evt);
			}
			else if(sTipo.equals("AnterioresFormaPagoPuntoVenta")) {
				jButtonAnterioresFormaPagoPuntoVentaActionPerformed(evt);
			} else if(sTipo.equals("AnterioresToolBarFormaPagoPuntoVenta")) {
				jButtonAnterioresFormaPagoPuntoVentaActionPerformed(evt);
			} else if(sTipo.equals("MenuItemAnterioreFormaPagoPuntoVenta")) {
				jButtonAnterioresFormaPagoPuntoVentaActionPerformed(evt);
			} else if(sTipo.equals("SiguientesFormaPagoPuntoVenta")) {
				jButtonSiguientesFormaPagoPuntoVentaActionPerformed(evt);
			} else if(sTipo.equals("SiguientesToolBarFormaPagoPuntoVenta")) {
				jButtonSiguientesFormaPagoPuntoVentaActionPerformed(evt);
			} else if(sTipo.equals("MenuItemSiguientesFormaPagoPuntoVenta")) {
				jButtonSiguientesFormaPagoPuntoVentaActionPerformed(evt);
			} else if(sTipo.equals("MenuItemAbrirOrderByFormaPagoPuntoVenta") || sTipo.equals("MenuItemDetalleAbrirOrderByFormaPagoPuntoVenta")) {
				jButtonAbrirOrderByFormaPagoPuntoVentaActionPerformed(evt);
			} else if(sTipo.equals("MenuItemMostrarOcultarFormaPagoPuntoVenta") || sTipo.equals("MenuItemDetalleMostrarOcultarFormaPagoPuntoVenta")) {
				jButtonMostrarOcultarFormaPagoPuntoVentaActionPerformed(evt);
			} else if(sTipo.equals("NuevoGuardarCambiosFormaPagoPuntoVenta")) {
				jButtonNuevoGuardarCambiosFormaPagoPuntoVentaActionPerformed(evt);
			} else if(sTipo.equals("NuevoGuardarCambiosToolBarFormaPagoPuntoVenta")) {
				jButtonNuevoGuardarCambiosFormaPagoPuntoVentaActionPerformed(evt);
			} else if(sTipo.equals("MenuItemNuevoGuardarCambiosFormaPagoPuntoVenta")) {
				jButtonNuevoGuardarCambiosFormaPagoPuntoVentaActionPerformed(evt);
			} 
			else if(sTipo.equals("CerrarReporteDinamicoFormaPagoPuntoVenta")) {
				jButtonCerrarReporteDinamicoFormaPagoPuntoVentaActionPerformed(evt);
			} else if(sTipo.equals("GenerarReporteDinamicoFormaPagoPuntoVenta")) {
				jButtonGenerarReporteDinamicoFormaPagoPuntoVentaActionPerformed(evt);
			} else if(sTipo.equals("GenerarExcelReporteDinamicoFormaPagoPuntoVenta")) {
				/*
				jButtonGenerarExcelReporteDinamicoFormaPagoPuntoVentaActionPerformed(evt);
				*/
			} else if(sTipo.equals("CerrarImportacionFormaPagoPuntoVenta")) {
				jButtonCerrarImportacionFormaPagoPuntoVentaActionPerformed(evt);
			} else if(sTipo.equals("GenerarImportacionFormaPagoPuntoVenta")) {
				/*
				jButtonGenerarImportacionFormaPagoPuntoVentaActionPerformed(evt);
				*/
			} else if(sTipo.equals("AbrirImportacionFormaPagoPuntoVenta")) {
				/*
				jButtonAbrirImportacionFormaPagoPuntoVentaActionPerformed(evt);
				*/
			} else if(sTipo.equals("TiposAccionesFormaPagoPuntoVenta")) {
				jComboBoxTiposAccionesFormaPagoPuntoVentaActionListener(evt,false);
			} else if(sTipo.equals("TiposRelacionesFormaPagoPuntoVenta")) {
				jComboBoxTiposRelacionesFormaPagoPuntoVentaActionListener(evt);
			} else if(sTipo.equals("TiposAccionesFormularioFormaPagoPuntoVenta")) {
				jComboBoxTiposAccionesFormaPagoPuntoVentaActionListener(evt,true);
			} else if(sTipo.equals("TiposSeleccionarFormaPagoPuntoVenta")) {
				/*
				jComboBoxTiposSeleccionarFormaPagoPuntoVentaActionListener(evt);
				*/
			} else if(sTipo.equals("ValorCampoGeneralFormaPagoPuntoVenta")) {
				jTextFieldValorCampoGeneralFormaPagoPuntoVentaActionListener(evt);
			}
			
			
			else if(sTipo.equals("AbrirOrderByFormaPagoPuntoVenta")) {
				jButtonAbrirOrderByFormaPagoPuntoVentaActionPerformed(evt);
				
			} else if(sTipo.equals("AbrirOrderByToolBarFormaPagoPuntoVenta")) {
				jButtonAbrirOrderByFormaPagoPuntoVentaActionPerformed(evt);
				
			} else if(sTipo.equals("CerrarOrderByFormaPagoPuntoVenta")) {
				jButtonCerrarOrderByFormaPagoPuntoVentaActionPerformed(evt);
			} 
						
			
			//BUSQUEDA GENERAL CAMPO
			else if(sTipo.equals("idFormaPagoPuntoVentaBusqueda")) {
				this.jButtonidFormaPagoPuntoVentaBusquedaActionPerformed(evt);
			}
			//ACTUALIZAR CAMPO
			else if(sTipo.equals("id_empresaFormaPagoPuntoVentaUpdate")) {
				this.jButtonid_empresaFormaPagoPuntoVentaUpdateActionPerformed(evt);
			}
			//BUSQUEDA GENERAL CAMPO
			else if(sTipo.equals("id_empresaFormaPagoPuntoVentaBusqueda")) {
				this.jButtonid_empresaFormaPagoPuntoVentaBusquedaActionPerformed(evt);
			}
			//ACTUALIZAR CAMPO
			else if(sTipo.equals("id_sucursalFormaPagoPuntoVentaUpdate")) {
				this.jButtonid_sucursalFormaPagoPuntoVentaUpdateActionPerformed(evt);
			}
			//BUSQUEDA GENERAL CAMPO
			else if(sTipo.equals("id_sucursalFormaPagoPuntoVentaBusqueda")) {
				this.jButtonid_sucursalFormaPagoPuntoVentaBusquedaActionPerformed(evt);
			}
			//ACTUALIZAR CAMPO
			else if(sTipo.equals("id_ejercicioFormaPagoPuntoVentaUpdate")) {
				this.jButtonid_ejercicioFormaPagoPuntoVentaUpdateActionPerformed(evt);
			}
			//BUSQUEDA GENERAL CAMPO
			else if(sTipo.equals("id_ejercicioFormaPagoPuntoVentaBusqueda")) {
				this.jButtonid_ejercicioFormaPagoPuntoVentaBusquedaActionPerformed(evt);
			}
			//ACTUALIZAR CAMPO
			else if(sTipo.equals("id_periodoFormaPagoPuntoVentaUpdate")) {
				this.jButtonid_periodoFormaPagoPuntoVentaUpdateActionPerformed(evt);
			}
			//BUSQUEDA GENERAL CAMPO
			else if(sTipo.equals("id_periodoFormaPagoPuntoVentaBusqueda")) {
				this.jButtonid_periodoFormaPagoPuntoVentaBusquedaActionPerformed(evt);
			}
			//ACTUALIZAR CAMPO
			else if(sTipo.equals("id_factura_punto_ventaFormaPagoPuntoVentaUpdate")) {
				this.jButtonid_factura_punto_ventaFormaPagoPuntoVentaUpdateActionPerformed(evt);
			}
			//BUSQUEDA GENERAL CAMPO
			else if(sTipo.equals("id_factura_punto_ventaFormaPagoPuntoVentaBusqueda")) {
				this.jButtonid_factura_punto_ventaFormaPagoPuntoVentaBusquedaActionPerformed(evt);
			}
			//ACTUALIZAR CAMPO
			else if(sTipo.equals("id_tipo_forma_pagoFormaPagoPuntoVentaUpdate")) {
				this.jButtonid_tipo_forma_pagoFormaPagoPuntoVentaUpdateActionPerformed(evt);
			}
			//BUSQUEDA GENERAL CAMPO
			else if(sTipo.equals("id_tipo_forma_pagoFormaPagoPuntoVentaBusqueda")) {
				this.jButtonid_tipo_forma_pagoFormaPagoPuntoVentaBusquedaActionPerformed(evt);
			}
			//BUSQUEDA GENERAL CAMPO
			else if(sTipo.equals("porcentajeFormaPagoPuntoVentaBusqueda")) {
				this.jButtonporcentajeFormaPagoPuntoVentaBusquedaActionPerformed(evt);
			}
			//BUSQUEDA GENERAL CAMPO
			else if(sTipo.equals("valorFormaPagoPuntoVentaBusqueda")) {
				this.jButtonvalorFormaPagoPuntoVentaBusquedaActionPerformed(evt);
			}
			//BUSQUEDA GENERAL CAMPO
			else if(sTipo.equals("fechaFormaPagoPuntoVentaBusqueda")) {
				this.jButtonfechaFormaPagoPuntoVentaBusquedaActionPerformed(evt);
			}
			//BUSQUEDA GENERAL CAMPO
			else if(sTipo.equals("descripcionFormaPagoPuntoVentaBusqueda")) {
				this.jButtondescripcionFormaPagoPuntoVentaBusquedaActionPerformed(evt);
			}
			//BUSQUEDA GENERAL CAMPO
			else if(sTipo.equals("fecha_inicioFormaPagoPuntoVentaBusqueda")) {
				this.jButtonfecha_inicioFormaPagoPuntoVentaBusquedaActionPerformed(evt);
			}
			//BUSQUEDA GENERAL CAMPO
			else if(sTipo.equals("numero_dias_plazoFormaPagoPuntoVentaBusqueda")) {
				this.jButtonnumero_dias_plazoFormaPagoPuntoVentaBusquedaActionPerformed(evt);
			}
			//BUSQUEDA GENERAL CAMPO
			else if(sTipo.equals("fecha_finFormaPagoPuntoVentaBusqueda")) {
				this.jButtonfecha_finFormaPagoPuntoVentaBusquedaActionPerformed(evt);
			}
			//ACTUALIZAR CAMPO
			else if(sTipo.equals("id_bancoFormaPagoPuntoVentaUpdate")) {
				this.jButtonid_bancoFormaPagoPuntoVentaUpdateActionPerformed(evt);
			}
			//BUSQUEDA GENERAL CAMPO
			else if(sTipo.equals("id_bancoFormaPagoPuntoVentaBusqueda")) {
				this.jButtonid_bancoFormaPagoPuntoVentaBusquedaActionPerformed(evt);
			}
			//ACTUALIZAR CAMPO
			else if(sTipo.equals("id_cuenta_banco_pun_venFormaPagoPuntoVentaUpdate")) {
				this.jButtonid_cuenta_banco_pun_venFormaPagoPuntoVentaUpdateActionPerformed(evt);
			}
			//BUSQUEDA GENERAL CAMPO
			else if(sTipo.equals("id_cuenta_banco_pun_venFormaPagoPuntoVentaBusqueda")) {
				this.jButtonid_cuenta_banco_pun_venFormaPagoPuntoVentaBusquedaActionPerformed(evt);
			}
			//ACTUALIZAR CAMPO
			else if(sTipo.equals("id_tipo_riesgo_chequeFormaPagoPuntoVentaUpdate")) {
				this.jButtonid_tipo_riesgo_chequeFormaPagoPuntoVentaUpdateActionPerformed(evt);
			}
			//BUSQUEDA GENERAL CAMPO
			else if(sTipo.equals("id_tipo_riesgo_chequeFormaPagoPuntoVentaBusqueda")) {
				this.jButtonid_tipo_riesgo_chequeFormaPagoPuntoVentaBusquedaActionPerformed(evt);
			}
			//BUSQUEDA GENERAL CAMPO
			else if(sTipo.equals("numero_cuentaFormaPagoPuntoVentaBusqueda")) {
				this.jButtonnumero_cuentaFormaPagoPuntoVentaBusquedaActionPerformed(evt);
			}
			//BUSQUEDA GENERAL CAMPO
			else if(sTipo.equals("numero_chequeFormaPagoPuntoVentaBusqueda")) {
				this.jButtonnumero_chequeFormaPagoPuntoVentaBusquedaActionPerformed(evt);
			}
			//BUSQUEDA GENERAL CAMPO
			else if(sTipo.equals("giradorFormaPagoPuntoVentaBusqueda")) {
				this.jButtongiradorFormaPagoPuntoVentaBusquedaActionPerformed(evt);
			}
			//ACTUALIZAR CAMPO
			else if(sTipo.equals("id_banco_tarjetaFormaPagoPuntoVentaUpdate")) {
				this.jButtonid_banco_tarjetaFormaPagoPuntoVentaUpdateActionPerformed(evt);
			}
			//BUSQUEDA GENERAL CAMPO
			else if(sTipo.equals("id_banco_tarjetaFormaPagoPuntoVentaBusqueda")) {
				this.jButtonid_banco_tarjetaFormaPagoPuntoVentaBusquedaActionPerformed(evt);
			}
			//ACTUALIZAR CAMPO
			else if(sTipo.equals("id_tarjeta_creditoFormaPagoPuntoVentaUpdate")) {
				this.jButtonid_tarjeta_creditoFormaPagoPuntoVentaUpdateActionPerformed(evt);
			}
			//BUSQUEDA GENERAL CAMPO
			else if(sTipo.equals("id_tarjeta_creditoFormaPagoPuntoVentaBusqueda")) {
				this.jButtonid_tarjeta_creditoFormaPagoPuntoVentaBusquedaActionPerformed(evt);
			}
			//ACTUALIZAR CAMPO
			else if(sTipo.equals("id_tipo_interes_tarjetaFormaPagoPuntoVentaUpdate")) {
				this.jButtonid_tipo_interes_tarjetaFormaPagoPuntoVentaUpdateActionPerformed(evt);
			}
			//BUSQUEDA GENERAL CAMPO
			else if(sTipo.equals("id_tipo_interes_tarjetaFormaPagoPuntoVentaBusqueda")) {
				this.jButtonid_tipo_interes_tarjetaFormaPagoPuntoVentaBusquedaActionPerformed(evt);
			}
			//ACTUALIZAR CAMPO
			else if(sTipo.equals("id_tipo_pago_tarjetaFormaPagoPuntoVentaUpdate")) {
				this.jButtonid_tipo_pago_tarjetaFormaPagoPuntoVentaUpdateActionPerformed(evt);
			}
			//BUSQUEDA GENERAL CAMPO
			else if(sTipo.equals("id_tipo_pago_tarjetaFormaPagoPuntoVentaBusqueda")) {
				this.jButtonid_tipo_pago_tarjetaFormaPagoPuntoVentaBusquedaActionPerformed(evt);
			}
			//ACTUALIZAR CAMPO
			else if(sTipo.equals("id_conexionFormaPagoPuntoVentaUpdate")) {
				this.jButtonid_conexionFormaPagoPuntoVentaUpdateActionPerformed(evt);
			}
			//BUSQUEDA GENERAL CAMPO
			else if(sTipo.equals("id_conexionFormaPagoPuntoVentaBusqueda")) {
				this.jButtonid_conexionFormaPagoPuntoVentaBusquedaActionPerformed(evt);
			}
			//ACTUALIZAR CAMPO
			else if(sTipo.equals("id_mesFormaPagoPuntoVentaUpdate")) {
				this.jButtonid_mesFormaPagoPuntoVentaUpdateActionPerformed(evt);
			}
			//BUSQUEDA GENERAL CAMPO
			else if(sTipo.equals("id_mesFormaPagoPuntoVentaBusqueda")) {
				this.jButtonid_mesFormaPagoPuntoVentaBusquedaActionPerformed(evt);
			}
			//BUSQUEDA GENERAL CAMPO
			else if(sTipo.equals("numeroFormaPagoPuntoVentaBusqueda")) {
				this.jButtonnumeroFormaPagoPuntoVentaBusquedaActionPerformed(evt);
			}
			//BUSQUEDA GENERAL CAMPO
			else if(sTipo.equals("tarjeta_habienteFormaPagoPuntoVentaBusqueda")) {
				this.jButtontarjeta_habienteFormaPagoPuntoVentaBusquedaActionPerformed(evt);
			}
			//BUSQUEDA GENERAL CAMPO
			else if(sTipo.equals("autorizacionFormaPagoPuntoVentaBusqueda")) {
				this.jButtonautorizacionFormaPagoPuntoVentaBusquedaActionPerformed(evt);
			}
			//BUSQUEDA GENERAL CAMPO
			else if(sTipo.equals("voucherFormaPagoPuntoVentaBusqueda")) {
				this.jButtonvoucherFormaPagoPuntoVentaBusquedaActionPerformed(evt);
			}
			//BUSQUEDA GENERAL CAMPO
			else if(sTipo.equals("loteFormaPagoPuntoVentaBusqueda")) {
				this.jButtonloteFormaPagoPuntoVentaBusquedaActionPerformed(evt);
			}
			//BUSQUEDA GENERAL CAMPO
			else if(sTipo.equals("cuotaFormaPagoPuntoVentaBusqueda")) {
				this.jButtoncuotaFormaPagoPuntoVentaBusquedaActionPerformed(evt);
			}
			//BUSQUEDA GENERAL CAMPO
			else if(sTipo.equals("valor_retencionFormaPagoPuntoVentaBusqueda")) {
				this.jButtonvalor_retencionFormaPagoPuntoVentaBusquedaActionPerformed(evt);
			}
			//BUSQUEDA GENERAL CAMPO
			else if(sTipo.equals("valor_comisionFormaPagoPuntoVentaBusqueda")) {
				this.jButtonvalor_comisionFormaPagoPuntoVentaBusquedaActionPerformed(evt);
			}
			//BUSQUEDA GENERAL CAMPO
			else if(sTipo.equals("valor_calculadoFormaPagoPuntoVentaBusqueda")) {
				this.jButtonvalor_calculadoFormaPagoPuntoVentaBusquedaActionPerformed(evt);
			}
			//BUSQUEDA GENERAL CAMPO
			else if(sTipo.equals("valor_canceladoFormaPagoPuntoVentaBusqueda")) {
				this.jButtonvalor_canceladoFormaPagoPuntoVentaBusquedaActionPerformed(evt);
			}
			//BUSQUEDA GENERAL CAMPO
			else if(sTipo.equals("valor_difiereFormaPagoPuntoVentaBusqueda")) {
				this.jButtonvalor_difiereFormaPagoPuntoVentaBusquedaActionPerformed(evt);
			}
			//BUSQUEDA GENERAL CAMPO
			else if(sTipo.equals("numero_retencionFormaPagoPuntoVentaBusqueda")) {
				this.jButtonnumero_retencionFormaPagoPuntoVentaBusquedaActionPerformed(evt);
			}
			//BUSQUEDA GENERAL CAMPO
			else if(sTipo.equals("numero_liquidacionFormaPagoPuntoVentaBusqueda")) {
				this.jButtonnumero_liquidacionFormaPagoPuntoVentaBusquedaActionPerformed(evt);
			}
			//ACTUALIZAR CAMPO
			else if(sTipo.equals("id_anioFormaPagoPuntoVentaUpdate")) {
				this.jButtonid_anioFormaPagoPuntoVentaUpdateActionPerformed(evt);
			}
			//BUSQUEDA GENERAL CAMPO
			else if(sTipo.equals("id_anioFormaPagoPuntoVentaBusqueda")) {
				this.jButtonid_anioFormaPagoPuntoVentaBusquedaActionPerformed(evt);
			}
			//BUSQUEDA CAMPO
			else if(sTipo.equals("id_cuenta_contableFormaPagoPuntoVenta")) {
				this.jButtonid_cuenta_contableFormaPagoPuntoVentaActionPerformed(evt);
			}
			//BUSQUEDA ARBOL CAMPO
			else if(sTipo.equals("id_cuenta_contableFormaPagoPuntoVentaArbol")) {
				this.abrirFrameTreeCuentaContable("BUSQUEDA_FK");
			}
			//ACTUALIZAR CAMPO
			else if(sTipo.equals("id_cuenta_contableFormaPagoPuntoVentaUpdate")) {
				this.jButtonid_cuenta_contableFormaPagoPuntoVentaUpdateActionPerformed(evt);
			}
			//BUSQUEDA GENERAL CAMPO
			else if(sTipo.equals("id_cuenta_contableFormaPagoPuntoVentaBusqueda")) {
				this.jButtonid_cuenta_contableFormaPagoPuntoVentaBusquedaActionPerformed(evt);
			}
			//BUSQUEDA CAMPO
			else if(sTipo.equals("id_asiento_contableFormaPagoPuntoVenta")) {
				this.jButtonid_asiento_contableFormaPagoPuntoVentaActionPerformed(evt);
			}
			//ACTUALIZAR CAMPO
			else if(sTipo.equals("id_asiento_contableFormaPagoPuntoVentaUpdate")) {
				this.jButtonid_asiento_contableFormaPagoPuntoVentaUpdateActionPerformed(evt);
			}
			//BUSQUEDA GENERAL CAMPO
			else if(sTipo.equals("id_asiento_contableFormaPagoPuntoVentaBusqueda")) {
				this.jButtonid_asiento_contableFormaPagoPuntoVentaBusquedaActionPerformed(evt);
			}
			
			
			else if(sTipo.equals("id_asiento_contableFormaPagoPuntoVenta")) {
				this.jButtonid_asiento_contableFormaPagoPuntoVentaActionPerformed(evt);
			}
			else if(sTipo.equals("id_cuenta_contableFormaPagoPuntoVenta")) {
				this.jButtonid_cuenta_contableFormaPagoPuntoVentaActionPerformed(evt);
			}
			
			
			;
			
			
			FormaPagoPuntoVentaBeanSwingJInternalFrameAdditional.procesarEventosVista(this.parametroGeneralUsuario,this.moduloActual,this.opcionActual,this.usuarioActual,this,FuncionTipo.AFTER,ControlTipo.BUTTON,EventoTipo.CLIC,EventoSubTipo.CLICKED,sTipo,this.formapagopuntoventa,new Object(),this.formapagopuntoventaParameterGeneral,this.formapagopuntoventaReturnGeneral);
			
		} catch(Exception e) {
  			FuncionesSwing.manageException2(this, e,logger,FormaPagoPuntoVentaConstantesFunciones.CLASSNAME);
			
  		} finally {
      		this.finishProcessFormaPagoPuntoVenta();
      	}
    }
	
	//FUNCIONA AL APLASTAR ENTER
	public void jTextFieldActionPerformedGeneral(String sTipo,ActionEvent evt) { 	  
		try {
			if(this.permiteManejarEventosControl()) {
				//SELECCIONA FILA A OBJETO ACTUAL			
				this.seleccionarFilaTablaFormaPagoPuntoVentaActual();
			
				EventoGlobalTipo eventoGlobalTipo=EventoGlobalTipo.CONTROL_CHANGE;
				
				Boolean esControlTabla=false;
				Container containerParent=null;
				JTextField jTextField=null;
				
				
				//PARAMETROS LLAMAR FUNCION PARENT
				GeneralEntityParameterGeneral generalEntityParameterGeneral=new GeneralEntityParameterGeneral();			
				Boolean esUsoDesdeHijoLocal=false;
				Boolean conIrServidorAplicacionParent=false;	
				ArrayList<String> arrClasses=new ArrayList<String>();			
				//PARAMETROS LLAMAR FUNCION PARENT_FIN
				
				/*
				if(this.esUsoDesdeHijo) {
					eventoGlobalTipo=EventoGlobalTipo.FORM_HIJO_ACTUALIZAR;
				}
				*/
				
				ArrayList<Classe> classes=new ArrayList<Classe>();
				
				jTextField=(JTextField)evt.getSource();
				
				containerParent=jTextField.getParent();
						
				if(containerParent!=null && containerParent.getClass().equals(JTableMe.class)) {
					esControlTabla=true;
				}
						
				this.esControlTabla=esControlTabla;
				
				
				this.actualizarInformacion("EVENTO_CONTROL",false,this.formapagopuntoventa);
				
				this.actualizarInformacion("INFO_PADRE",false,this.formapagopuntoventa);
				
				FormaPagoPuntoVentaBeanSwingJInternalFrameAdditional.procesarEventosVista(this.parametroGeneralUsuario,this.moduloActual,this.opcionActual,this.usuarioActual,this,FuncionTipo.BEFORE,ControlTipo.TEXTBOX,EventoTipo.CHANGE,EventoSubTipo.CHANGED,sTipo,this.formapagopuntoventa,new Object(),this.formapagopuntoventaParameterGeneral,this.formapagopuntoventaReturnGeneral);
				
				


			if(sTipo.equals("porcentajeFormaPagoPuntoVenta")) {
				if(this.formapagopuntoventaSessionBean.getConGuardarRelaciones()) {
					//classes=FormaPagoPuntoVentaConstantesFunciones.getClassesRelationshipsOfFormaPagoPuntoVenta(new ArrayList<Classe>(),DeepLoadType.NONE);
				}

				this.classesActual=new ArrayList<Classe>();
				this.classesActual.addAll(classes);

				this.recargarFormFormaPagoPuntoVenta(sTipo,"Formulario",eventoGlobalTipo,ControlTipo.TEXTBOX,EventoTipo.CHANGE,EventoSubTipo.CHANGED,"TEXTBOX",classes,false,esControlTabla);
			}
			 else if(sTipo.equals("valorFormaPagoPuntoVenta")) {
				if(this.formapagopuntoventaSessionBean.getConGuardarRelaciones()) {
					//classes=FormaPagoPuntoVentaConstantesFunciones.getClassesRelationshipsOfFormaPagoPuntoVenta(new ArrayList<Classe>(),DeepLoadType.NONE);
				}

				this.classesActual=new ArrayList<Classe>();
				this.classesActual.addAll(classes);

				this.recargarFormFormaPagoPuntoVenta(sTipo,"Formulario",eventoGlobalTipo,ControlTipo.TEXTBOX,EventoTipo.CHANGE,EventoSubTipo.CHANGED,"TEXTBOX",classes,false,esControlTabla);
			}
			 else if(sTipo.equals("numero_dias_plazoFormaPagoPuntoVenta")) {
				if(this.formapagopuntoventaSessionBean.getConGuardarRelaciones()) {
					//classes=FormaPagoPuntoVentaConstantesFunciones.getClassesRelationshipsOfFormaPagoPuntoVenta(new ArrayList<Classe>(),DeepLoadType.NONE);
				}

				this.classesActual=new ArrayList<Classe>();
				this.classesActual.addAll(classes);

				this.recargarFormFormaPagoPuntoVenta(sTipo,"Formulario",eventoGlobalTipo,ControlTipo.TEXTBOX,EventoTipo.CHANGE,EventoSubTipo.CHANGED,"TEXTBOX",classes,false,esControlTabla);
			}
				
				FormaPagoPuntoVentaBeanSwingJInternalFrameAdditional.procesarEventosVista(this.parametroGeneralUsuario,this.moduloActual,this.opcionActual,this.usuarioActual,this,FuncionTipo.AFTER,ControlTipo.TEXTBOX,EventoTipo.CHANGE,EventoSubTipo.CHANGED,sTipo,this.formapagopuntoventa,new Object(),this.formapagopuntoventaParameterGeneral,this.formapagopuntoventaReturnGeneral);
				
				
				if(esUsoDesdeHijoLocal) {
					Long id=0L;
					
					generalEntityParameterGeneral.setEventoGlobalTipo(EventoGlobalTipo.FORM_HIJO_ACTUALIZAR);
					generalEntityParameterGeneral.setsDominio("Formulario");
					generalEntityParameterGeneral.setsDominioTipo(FormaPagoPuntoVenta.class.getName());
					
					if(this.jInternalFrameParent!=null) {
						this.jInternalFrameParent.setEventoParentGeneral(esUsoDesdeHijoLocal,"Formulario",FormaPagoPuntoVenta.class.getName(),sTipo,"TEXTFIELD",esControlTabla,conIrServidorAplicacionParent,
							id,jTextField, EventoGlobalTipo.FORM_HIJO_ACTUALIZAR,ControlTipo.TEXTBOX,EventoTipo.CHANGE,EventoSubTipo.CHANGED,arrClasses,
							evt,generalEntityParameterGeneral,null);
					}
				}			
				}
				
			} catch(Exception e) {
  				FuncionesSwing.manageException2(this, e,logger,FormaPagoPuntoVentaConstantesFunciones.CLASSNAME);
  			}
    }
	
	public Boolean existeCambioValor(ControlTipo controlTipo,String sTipo) throws Exception {
		Boolean existeCambio=true;
		
		try {
			FormaPagoPuntoVenta formapagopuntoventaLocal=null;
			
			if(!this.getEsControlTabla()) {
				formapagopuntoventaLocal=this.formapagopuntoventa;
			} else {
				formapagopuntoventaLocal=this.formapagopuntoventaAnterior;
			}
			
			if(controlTipo.equals(ControlTipo.TEXTBOX)) {
				


				if(sTipo.equals("porcentajeFormaPagoPuntoVenta")) {
					if(formapagopuntoventaLocal.getporcentaje()==Double.parseDouble(this.jInternalFrameDetalleFormFormaPagoPuntoVenta.jTextFieldporcentajeFormaPagoPuntoVenta.getText())){existeCambio=false;};
				}
				 else if(sTipo.equals("valorFormaPagoPuntoVenta")) {
					if(formapagopuntoventaLocal.getvalor()==Double.parseDouble(this.jInternalFrameDetalleFormFormaPagoPuntoVenta.jTextFieldvalorFormaPagoPuntoVenta.getText())){existeCambio=false;};
				}
				 else if(sTipo.equals("numero_dias_plazoFormaPagoPuntoVenta")) {
					if(formapagopuntoventaLocal.getnumero_dias_plazo()==Integer.parseInt(this.jInternalFrameDetalleFormFormaPagoPuntoVenta.jTextFieldnumero_dias_plazoFormaPagoPuntoVenta.getText())){existeCambio=false;};
				}
			}
		
		} catch(Exception e) {
  			FuncionesSwing.manageException2(this, e,logger,FormaPagoPuntoVentaConstantesFunciones.CLASSNAME);
  		}
		
		return existeCambio;
	}
	
	public void jTextFieldFocusLostGeneral(String sTipo,java.awt.event.FocusEvent evt) { 	  
		try {
			if(this.permiteManejarEventosControl() && this.existeCambioValor(ControlTipo.TEXTBOX,sTipo)) {
				
				EventoGlobalTipo eventoGlobalTipo=EventoGlobalTipo.CONTROL_CHANGE;
				
				Boolean esControlTabla=false;
				JTextField jTextField=null;
				Container containerParent=null;
				Component componentOpposite=null;
				
				//PARAMETROS LLAMAR FUNCION PARENT
				GeneralEntityParameterGeneral generalEntityParameterGeneral=new GeneralEntityParameterGeneral();			
				Boolean esUsoDesdeHijoLocal=false;
				Boolean conIrServidorAplicacionParent=false;	
				ArrayList<String> arrClasses=new ArrayList<String>();			
				//PARAMETROS LLAMAR FUNCION PARENT_FIN
				
				/*
				if(this.esUsoDesdeHijo) {
					eventoGlobalTipo=EventoGlobalTipo.FORM_HIJO_ACTUALIZAR;
				}
				*/
				
				ArrayList<Classe> classes=new ArrayList<Classe>();
				
				jTextField=(JTextField)evt.getSource();
				
				containerParent=jTextField.getParent();
						
				componentOpposite=evt.getOppositeComponent();
				
				if((containerParent!=null && containerParent.getClass().equals(JTableMe.class))
					|| (componentOpposite!=null && componentOpposite.getClass().equals(JTableMe.class))
				) {					
					esControlTabla=true;
				}
				
				this.esControlTabla=esControlTabla;
				
				
				this.actualizarInformacion("EVENTO_CONTROL",false,this.formapagopuntoventa);
				
				this.actualizarInformacion("INFO_PADRE",false,this.formapagopuntoventa);
				
				FormaPagoPuntoVentaBeanSwingJInternalFrameAdditional.procesarEventosVista(this.parametroGeneralUsuario,this.moduloActual,this.opcionActual,this.usuarioActual,this,FuncionTipo.BEFORE,ControlTipo.TEXTBOX,EventoTipo.CHANGE,EventoSubTipo.CHANGED,sTipo,this.formapagopuntoventa,new Object(),this.formapagopuntoventaParameterGeneral,this.formapagopuntoventaReturnGeneral);
							
				
				


			if(sTipo.equals("porcentajeFormaPagoPuntoVenta")) {
				if(this.formapagopuntoventaSessionBean.getConGuardarRelaciones()) {
					//classes=FormaPagoPuntoVentaConstantesFunciones.getClassesRelationshipsOfFormaPagoPuntoVenta(new ArrayList<Classe>(),DeepLoadType.NONE);
				}

				this.classesActual=new ArrayList<Classe>();
				this.classesActual.addAll(classes);

				this.recargarFormFormaPagoPuntoVenta(sTipo,"Formulario",eventoGlobalTipo,ControlTipo.TEXTBOX,EventoTipo.CHANGE,EventoSubTipo.CHANGED,"TEXTBOX",classes,false,esControlTabla);
			}
			 else if(sTipo.equals("valorFormaPagoPuntoVenta")) {
				if(this.formapagopuntoventaSessionBean.getConGuardarRelaciones()) {
					//classes=FormaPagoPuntoVentaConstantesFunciones.getClassesRelationshipsOfFormaPagoPuntoVenta(new ArrayList<Classe>(),DeepLoadType.NONE);
				}

				this.classesActual=new ArrayList<Classe>();
				this.classesActual.addAll(classes);

				this.recargarFormFormaPagoPuntoVenta(sTipo,"Formulario",eventoGlobalTipo,ControlTipo.TEXTBOX,EventoTipo.CHANGE,EventoSubTipo.CHANGED,"TEXTBOX",classes,false,esControlTabla);
			}
			 else if(sTipo.equals("numero_dias_plazoFormaPagoPuntoVenta")) {
				if(this.formapagopuntoventaSessionBean.getConGuardarRelaciones()) {
					//classes=FormaPagoPuntoVentaConstantesFunciones.getClassesRelationshipsOfFormaPagoPuntoVenta(new ArrayList<Classe>(),DeepLoadType.NONE);
				}

				this.classesActual=new ArrayList<Classe>();
				this.classesActual.addAll(classes);

				this.recargarFormFormaPagoPuntoVenta(sTipo,"Formulario",eventoGlobalTipo,ControlTipo.TEXTBOX,EventoTipo.CHANGE,EventoSubTipo.CHANGED,"TEXTBOX",classes,false,esControlTabla);
			}
				
				FormaPagoPuntoVentaBeanSwingJInternalFrameAdditional.procesarEventosVista(this.parametroGeneralUsuario,this.moduloActual,this.opcionActual,this.usuarioActual,this,FuncionTipo.AFTER,ControlTipo.TEXTBOX,EventoTipo.CHANGE,EventoSubTipo.CHANGED,sTipo,this.formapagopuntoventa,new Object(),this.formapagopuntoventaParameterGeneral,this.formapagopuntoventaReturnGeneral);
				
				
				if(esUsoDesdeHijoLocal) {
					Long id=0L;
					
					generalEntityParameterGeneral.setEventoGlobalTipo(EventoGlobalTipo.FORM_HIJO_ACTUALIZAR);
					generalEntityParameterGeneral.setsDominio("Formulario");
					generalEntityParameterGeneral.setsDominioTipo(FormaPagoPuntoVenta.class.getName());
					
					if(this.jInternalFrameParent!=null) {
						this.jInternalFrameParent.setEventoParentGeneral(esUsoDesdeHijoLocal,"Formulario",FormaPagoPuntoVenta.class.getName(),sTipo,"TEXTFIELD",esControlTabla,conIrServidorAplicacionParent,
							id,jTextField, EventoGlobalTipo.FORM_HIJO_ACTUALIZAR,ControlTipo.TEXTBOX,EventoTipo.CHANGE,EventoSubTipo.CHANGED,arrClasses,
							evt,generalEntityParameterGeneral,null);
					}
				}			
			}
			
		} catch(Exception e) {
  			FuncionesSwing.manageException2(this, e,logger,FormaPagoPuntoVentaConstantesFunciones.CLASSNAME);
  		}
    }
	
	public void jTextFieldFocusGainedGeneral(String sTipo,java.awt.event.FocusEvent evt) { 	  
		try {
			//SELECCIONA FILA A OBJETO ACTUAL			
			this.seleccionarFilaTablaFormaPagoPuntoVentaActual();
			
			//SELECCIONA FILA A OBJETO ANTERIOR
			Integer intSelectedRow = this.jTableDatosFormaPagoPuntoVenta.getSelectedRow();
					
			if(intSelectedRow!=null && intSelectedRow>-1) {
				//ARCHITECTURE
				if(Constantes.ISUSAEJBLOGICLAYER) {
					this.formapagopuntoventaAnterior =(FormaPagoPuntoVenta) this.formapagopuntoventaLogic.getFormaPagoPuntoVentas().toArray()[this.jTableDatosFormaPagoPuntoVenta.convertRowIndexToModel(intSelectedRow)];
				} else if(Constantes.ISUSAEJBREMOTE || Constantes.ISUSAEJBHOME ) {
					this.formapagopuntoventaAnterior =(FormaPagoPuntoVenta) this.formapagopuntoventas.toArray()[this.jTableDatosFormaPagoPuntoVenta.convertRowIndexToModel(intSelectedRow)];
				}
				//ARCHITECTURE
				
				//System.out.println(this.banco);
			}
			
		} catch(Exception e) {
  			FuncionesSwing.manageException2(this, e,logger,FormaPagoPuntoVentaConstantesFunciones.CLASSNAME);
  		}
    }	
	
	//CUANDO SE CAMBIA ALGUN FORMATO(TIPO DE LETRA,NEGRILLA,ETC)
	public void jTextFieldChangedUpdateGeneral(String sTipo,JTextField jTextField,DocumentEvent evt) { 	  
		try {
			/*
			EventoGlobalTipo eventoGlobalTipo=EventoGlobalTipo.CONTROL_CHANGE;
			
			//System.out.println("UPDATE");
			
			Boolean esControlTabla=false;
			//JTextField jTextField=null;
			Container containerParent=null;
			Component componentOpposite=null;
			
			if(this.esUsoDesdeHijo) {
				eventoGlobalTipo=EventoGlobalTipo.FORM_HIJO_ACTUALIZAR;
			}
			
			FormaPagoPuntoVentaBeanSwingJInternalFrameAdditional.procesarEventosVista(this.parametroGeneralUsuario,this.moduloActual,this.opcionActual,this.usuarioActual,this,FuncionTipo.BEFORE,ControlTipo.TEXTBOX,EventoTipo.CHANGE,EventoSubTipo.CHANGED,sTipo,this.formapagopuntoventa,new Object(),this.formapagopuntoventaParameterGeneral,this.formapagopuntoventaReturnGeneral);
			
			ArrayList<Classe> classes=new ArrayList<Classe>();
			
			//jTextField=(JTextField)evt.getSource();
			
			containerParent=jTextField.getParent();
					
			componentOpposite=null;//evt.getOppositeComponent();
			
			if((containerParent!=null && containerParent.getClass().equals(JTableMe.class))
				|| (componentOpposite!=null && componentOpposite.getClass().equals(JTableMe.class))
			) {					
				esControlTabla=true;
			}
			
			this.esControlTabla=esControlTabla;
			
			


			if(sTipo.equals("porcentajeFormaPagoPuntoVenta")) {
				if(this.formapagopuntoventaSessionBean.getConGuardarRelaciones()) {
					//classes=FormaPagoPuntoVentaConstantesFunciones.getClassesRelationshipsOfFormaPagoPuntoVenta(new ArrayList<Classe>(),DeepLoadType.NONE);
				}

				this.classesActual=new ArrayList<Classe>();
				this.classesActual.addAll(classes);

				this.recargarFormFormaPagoPuntoVenta(sTipo,"Formulario",eventoGlobalTipo,ControlTipo.TEXTBOX,EventoTipo.CHANGE,EventoSubTipo.CHANGED,"TEXTBOX",classes,false,esControlTabla);
			}
			 else if(sTipo.equals("valorFormaPagoPuntoVenta")) {
				if(this.formapagopuntoventaSessionBean.getConGuardarRelaciones()) {
					//classes=FormaPagoPuntoVentaConstantesFunciones.getClassesRelationshipsOfFormaPagoPuntoVenta(new ArrayList<Classe>(),DeepLoadType.NONE);
				}

				this.classesActual=new ArrayList<Classe>();
				this.classesActual.addAll(classes);

				this.recargarFormFormaPagoPuntoVenta(sTipo,"Formulario",eventoGlobalTipo,ControlTipo.TEXTBOX,EventoTipo.CHANGE,EventoSubTipo.CHANGED,"TEXTBOX",classes,false,esControlTabla);
			}
			 else if(sTipo.equals("numero_dias_plazoFormaPagoPuntoVenta")) {
				if(this.formapagopuntoventaSessionBean.getConGuardarRelaciones()) {
					//classes=FormaPagoPuntoVentaConstantesFunciones.getClassesRelationshipsOfFormaPagoPuntoVenta(new ArrayList<Classe>(),DeepLoadType.NONE);
				}

				this.classesActual=new ArrayList<Classe>();
				this.classesActual.addAll(classes);

				this.recargarFormFormaPagoPuntoVenta(sTipo,"Formulario",eventoGlobalTipo,ControlTipo.TEXTBOX,EventoTipo.CHANGE,EventoSubTipo.CHANGED,"TEXTBOX",classes,false,esControlTabla);
			}
			
			FormaPagoPuntoVentaBeanSwingJInternalFrameAdditional.procesarEventosVista(this.parametroGeneralUsuario,this.moduloActual,this.opcionActual,this.usuarioActual,this,FuncionTipo.AFTER,ControlTipo.TEXTBOX,EventoTipo.CHANGE,EventoSubTipo.CHANGED,sTipo,this.formapagopuntoventa,new Object(),this.formapagopuntoventaParameterGeneral,this.formapagopuntoventaReturnGeneral);
			*/
  		} catch(Exception e) {
  			FuncionesSwing.manageException2(this, e,logger,FormaPagoPuntoVentaConstantesFunciones.CLASSNAME);
  		}
    }
	
	//CUANDO SE QUITA ALGUN CARACTER
	public void jTextFieldRemoveUpdateGeneral(String sTipo,JTextField jTextField,DocumentEvent evt) { 	  
		try {
			//System.out.println("REMOVE");
			
  		} catch(Exception e) {
  			FuncionesSwing.manageException2(this, e,logger,FormaPagoPuntoVentaConstantesFunciones.CLASSNAME);
  		}
    }
	
	//CUANDO SE INGRESA ALGUN CARACTER
	public void jTextFieldInsertUpdateGeneral(String sTipo,JTextField jTextField,DocumentEvent evt) { 	  
		try {
			//System.out.println("INSERT");
			
  		} catch(Exception e) {
  			FuncionesSwing.manageException2(this, e,logger,FormaPagoPuntoVentaConstantesFunciones.CLASSNAME);
  		}
    }
	
	//FUNCIONA AL APLASTAR ENTER
	public void jFormattedTextFieldActionPerformedGeneral(String sTipo,ActionEvent evt) { 	  
		try {
			if(this.permiteManejarEventosControl()) {
				
				//SELECCIONA FILA A OBJETO ACTUAL			
				this.seleccionarFilaTablaFormaPagoPuntoVentaActual();
				
				EventoGlobalTipo eventoGlobalTipo=EventoGlobalTipo.CONTROL_CHANGE;
				
				Boolean esControlTabla=false;
				Container containerParent=null;
				Container containerParentAux=null;
				JFormattedTextField JFormattedTextField=null;
				Component componentOpposite=null;
				
				//PARAMETROS LLAMAR FUNCION PARENT
				GeneralEntityParameterGeneral generalEntityParameterGeneral=new GeneralEntityParameterGeneral();			
				Boolean esUsoDesdeHijoLocal=false;
				Boolean conIrServidorAplicacionParent=false;	
				ArrayList<String> arrClasses=new ArrayList<String>();			
				//PARAMETROS LLAMAR FUNCION PARENT_FIN
				
				/*
				if(this.esUsoDesdeHijo) {
					eventoGlobalTipo=EventoGlobalTipo.FORM_HIJO_ACTUALIZAR;
				}
				*/
				ArrayList<Classe> classes=new ArrayList<Classe>();
				
				JFormattedTextField=(JFormattedTextField)evt.getSource();
				
				containerParentAux=JFormattedTextField.getParent();
				
				if(containerParentAux!=null && containerParentAux.getClass().equals(JDateChooser.class)) {
					containerParent=containerParentAux.getParent();
				}
				
				componentOpposite=null;//evt.getOppositeComponent();
				
				if((containerParent!=null && containerParent.getClass().equals(JTableMe.class))
					|| (componentOpposite!=null && componentOpposite.getClass().equals(JTableMe.class))
				) {					
					esControlTabla=true;
				}
				
				this.esControlTabla=esControlTabla;
				
				
				this.actualizarInformacion("EVENTO_CONTROL",false,this.formapagopuntoventa);
				
				this.actualizarInformacion("INFO_PADRE",false,this.formapagopuntoventa);
				
				FormaPagoPuntoVentaBeanSwingJInternalFrameAdditional.procesarEventosVista(this.parametroGeneralUsuario,this.moduloActual,this.opcionActual,this.usuarioActual,this,FuncionTipo.BEFORE,ControlTipo.DATE,EventoTipo.CHANGE,EventoSubTipo.CHANGED,sTipo,this.formapagopuntoventa,new Object(),this.formapagopuntoventaParameterGeneral,this.formapagopuntoventaReturnGeneral);
								
						
				


				
				FormaPagoPuntoVentaBeanSwingJInternalFrameAdditional.procesarEventosVista(this.parametroGeneralUsuario,this.moduloActual,this.opcionActual,this.usuarioActual,this,FuncionTipo.AFTER,ControlTipo.DATE,EventoTipo.CHANGE,EventoSubTipo.CHANGED,sTipo,this.formapagopuntoventa,new Object(),this.formapagopuntoventaParameterGeneral,this.formapagopuntoventaReturnGeneral);
				
				
				if(esUsoDesdeHijoLocal) {
					Long id=0L;
					
					generalEntityParameterGeneral.setEventoGlobalTipo(EventoGlobalTipo.FORM_HIJO_ACTUALIZAR);
					generalEntityParameterGeneral.setsDominio("Formulario");
					generalEntityParameterGeneral.setsDominioTipo(FormaPagoPuntoVenta.class.getName());
					
					if(this.jInternalFrameParent!=null) {
						this.jInternalFrameParent.setEventoParentGeneral(esUsoDesdeHijoLocal,"Formulario",FormaPagoPuntoVenta.class.getName(),sTipo,"DATE",esControlTabla,conIrServidorAplicacionParent,
							id,JFormattedTextField, EventoGlobalTipo.FORM_HIJO_ACTUALIZAR,ControlTipo.DATE,EventoTipo.CHANGE,EventoSubTipo.CHANGED,arrClasses,
							evt,generalEntityParameterGeneral,null);
					}
				}			
			}
			
		} catch(Exception e) {
  			FuncionesSwing.manageException2(this, e,logger,FormaPagoPuntoVentaConstantesFunciones.CLASSNAME);
  		}
    }
	
	public void jFormattedTextFieldFocusLostGeneral(String sTipo,java.awt.event.FocusEvent evt) { 	  
		try {
			if(this.permiteManejarEventosControl() && this.existeCambioValor(ControlTipo.TEXTBOX,sTipo)) {
				EventoGlobalTipo eventoGlobalTipo=EventoGlobalTipo.CONTROL_CHANGE;
				
				Boolean esControlTabla=false;
				JTextField jTextField=null;
				Container containerParent=null;
				Container containerParentAux=null;
				Component componentOpposite=null;
				
				
				//PARAMETROS LLAMAR FUNCION PARENT
				GeneralEntityParameterGeneral generalEntityParameterGeneral=new GeneralEntityParameterGeneral();			
				Boolean esUsoDesdeHijoLocal=false;
				Boolean conIrServidorAplicacionParent=false;	
				ArrayList<String> arrClasses=new ArrayList<String>();			
				//PARAMETROS LLAMAR FUNCION PARENT_FIN
				
				/*
				if(this.esUsoDesdeHijo) {
					eventoGlobalTipo=EventoGlobalTipo.FORM_HIJO_ACTUALIZAR;
				}
				*/
				
				ArrayList<Classe> classes=new ArrayList<Classe>();
				
				jTextField=(JTextField)evt.getSource();
				
				containerParentAux=jTextField.getParent();
						
				if(containerParentAux!=null && containerParentAux.getClass().equals(JDateChooser.class)) {
					containerParent=containerParentAux.getParent();
				}
				
				componentOpposite=evt.getOppositeComponent();
				
				if((containerParent!=null && containerParent.getClass().equals(JTableMe.class))
					|| (componentOpposite!=null && componentOpposite.getClass().equals(JTableMe.class))
				) {					
					esControlTabla=true;
				}
				
				this.esControlTabla=esControlTabla;
				
				
				this.actualizarInformacion("EVENTO_CONTROL",false,this.formapagopuntoventa);
				
				this.actualizarInformacion("INFO_PADRE",false,this.formapagopuntoventa);
				
				FormaPagoPuntoVentaBeanSwingJInternalFrameAdditional.procesarEventosVista(this.parametroGeneralUsuario,this.moduloActual,this.opcionActual,this.usuarioActual,this,FuncionTipo.BEFORE,ControlTipo.DATE,EventoTipo.CHANGE,EventoSubTipo.CHANGED,sTipo,this.formapagopuntoventa,new Object(),this.formapagopuntoventaParameterGeneral,this.formapagopuntoventaReturnGeneral);
								
				
				


				
				FormaPagoPuntoVentaBeanSwingJInternalFrameAdditional.procesarEventosVista(this.parametroGeneralUsuario,this.moduloActual,this.opcionActual,this.usuarioActual,this,FuncionTipo.AFTER,ControlTipo.DATE,EventoTipo.CHANGE,EventoSubTipo.CHANGED,sTipo,this.formapagopuntoventa,new Object(),this.formapagopuntoventaParameterGeneral,this.formapagopuntoventaReturnGeneral);
				
				
				if(esUsoDesdeHijoLocal) {
					Long id=0L;
					
					generalEntityParameterGeneral.setEventoGlobalTipo(EventoGlobalTipo.FORM_HIJO_ACTUALIZAR);
					generalEntityParameterGeneral.setsDominio("Formulario");
					generalEntityParameterGeneral.setsDominioTipo(FormaPagoPuntoVenta.class.getName());
					
					if(this.jInternalFrameParent!=null) {
						this.jInternalFrameParent.setEventoParentGeneral(esUsoDesdeHijoLocal,"Formulario",FormaPagoPuntoVenta.class.getName(),sTipo,"TEXTFIELD",esControlTabla,conIrServidorAplicacionParent,
							id,jTextField, EventoGlobalTipo.FORM_HIJO_ACTUALIZAR,ControlTipo.TEXTBOX,EventoTipo.CHANGE,EventoSubTipo.CHANGED,arrClasses,
							evt,generalEntityParameterGeneral,null);
					}
				}			
			}
			
		} catch(Exception e) {
  			FuncionesSwing.manageException2(this, e,logger,FormaPagoPuntoVentaConstantesFunciones.CLASSNAME);
  		}
    }
	
	public void jFormattedTextFieldFocusGainedGeneral(String sTipo,java.awt.event.FocusEvent evt) { 	  
		try {
			//SELECCIONA FILA A OBJETO ACTUAL			
			this.seleccionarFilaTablaFormaPagoPuntoVentaActual();
			
			//SELECCIONA FILA A OBJETO ANTERIOR
			Integer intSelectedRow = this.jTableDatosFormaPagoPuntoVenta.getSelectedRow();
					
			if(intSelectedRow!=null && intSelectedRow>-1) {
				//ARCHITECTURE
				if(Constantes.ISUSAEJBLOGICLAYER) {
					this.formapagopuntoventaAnterior =(FormaPagoPuntoVenta) this.formapagopuntoventaLogic.getFormaPagoPuntoVentas().toArray()[this.jTableDatosFormaPagoPuntoVenta.convertRowIndexToModel(intSelectedRow)];
				} else if(Constantes.ISUSAEJBREMOTE || Constantes.ISUSAEJBHOME ) {
					this.formapagopuntoventaAnterior =(FormaPagoPuntoVenta) this.formapagopuntoventas.toArray()[this.jTableDatosFormaPagoPuntoVenta.convertRowIndexToModel(intSelectedRow)];
				}
				//ARCHITECTURE
				
				//System.out.println(this.banco);
			}
			
		} catch(Exception e) {
  			FuncionesSwing.manageException2(this, e,logger,FormaPagoPuntoVentaConstantesFunciones.CLASSNAME);
  		}
    }	
	
	public void jDateChooserFocusLostGeneral(String sTipo,java.awt.event.FocusEvent evt) { 	  
		try {
			if(this.permiteManejarEventosControl() && this.existeCambioValor(ControlTipo.DATE,sTipo)) {
				this.actualizarInformacion("EVENTO_CONTROL",false,this.formapagopuntoventa);
				
				this.actualizarInformacion("INFO_PADRE",false,this.formapagopuntoventa);
			}	
		} catch(Exception e) {
  			FuncionesSwing.manageException2(this, e,logger,FormaPagoPuntoVentaConstantesFunciones.CLASSNAME);
  		}
    }	
	
	public void jDateChooserFocusGainedGeneral(String sTipo,java.awt.event.FocusEvent evt) { 	  
		try {
			//SELECCIONA FILA A OBJETO ACTUAL			
			this.seleccionarFilaTablaFormaPagoPuntoVentaActual();
			
			//SELECCIONA FILA A OBJETO ANTERIOR
			Integer intSelectedRow = this.jTableDatosFormaPagoPuntoVenta.getSelectedRow();
					
			if(intSelectedRow!=null && intSelectedRow>-1) {
				//ARCHITECTURE
				if(Constantes.ISUSAEJBLOGICLAYER) {
					this.formapagopuntoventaAnterior =(FormaPagoPuntoVenta) this.formapagopuntoventaLogic.getFormaPagoPuntoVentas().toArray()[this.jTableDatosFormaPagoPuntoVenta.convertRowIndexToModel(intSelectedRow)];
				} else if(Constantes.ISUSAEJBREMOTE || Constantes.ISUSAEJBHOME ) {
					this.formapagopuntoventaAnterior =(FormaPagoPuntoVenta) this.formapagopuntoventas.toArray()[this.jTableDatosFormaPagoPuntoVenta.convertRowIndexToModel(intSelectedRow)];
				}
				//ARCHITECTURE
				
				//System.out.println(this.banco);
			}
		} catch(Exception e) {
  			FuncionesSwing.manageException2(this, e,logger,FormaPagoPuntoVentaConstantesFunciones.CLASSNAME);
  		}
    }	
	
	public void jDateChooserActionPerformedGeneral(String sTipo,ActionEvent evt) { 	  
		try {
			
			//SELECCIONA FILA A OBJETO ACTUAL			
			this.seleccionarFilaTablaFormaPagoPuntoVentaActual();
				
			this.actualizarInformacion("EVENTO_CONTROL",false,this.formapagopuntoventa);
			
			this.actualizarInformacion("INFO_PADRE",false,this.formapagopuntoventa);
				
		} catch(Exception e) {
  			FuncionesSwing.manageException2(this, e,logger,FormaPagoPuntoVentaConstantesFunciones.CLASSNAME);
  		}
    }	
	
	public void jTextAreaFocusLostGeneral(String sTipo,java.awt.event.FocusEvent evt) { 	  
		try {
			if(this.permiteManejarEventosControl() && this.existeCambioValor(ControlTipo.TEXTAREA,sTipo)) {
				EventoGlobalTipo eventoGlobalTipo=EventoGlobalTipo.CONTROL_CHANGE;
				
				Boolean esControlTabla=false;
				JTextArea jTextArea=null;
				Container containerParent=null;
				Component componentOpposite=null;
				
				//PARAMETROS LLAMAR FUNCION PARENT
				GeneralEntityParameterGeneral generalEntityParameterGeneral=new GeneralEntityParameterGeneral();			
				Boolean esUsoDesdeHijoLocal=false;
				Boolean conIrServidorAplicacionParent=false;	
				ArrayList<String> arrClasses=new ArrayList<String>();			
				//PARAMETROS LLAMAR FUNCION PARENT_FIN
				
				/*
				if(this.esUsoDesdeHijo) {
					eventoGlobalTipo=EventoGlobalTipo.FORM_HIJO_ACTUALIZAR;
				}
				*/
				
				ArrayList<Classe> classes=new ArrayList<Classe>();
				
				jTextArea=(JTextArea)evt.getSource();
				
				containerParent=jTextArea.getParent();
				componentOpposite=evt.getOppositeComponent();
				
				if((containerParent!=null && containerParent.getClass().equals(JTableMe.class))
					|| (componentOpposite!=null && componentOpposite.getClass().equals(JTableMe.class))
				) {
					esControlTabla=true;
				}
				
				this.esControlTabla=esControlTabla;
				
				
				this.actualizarInformacion("EVENTO_CONTROL",false,this.formapagopuntoventa);
				
				this.actualizarInformacion("INFO_PADRE",false,this.formapagopuntoventa);
				
				FormaPagoPuntoVentaBeanSwingJInternalFrameAdditional.procesarEventosVista(this.parametroGeneralUsuario,this.moduloActual,this.opcionActual,this.usuarioActual,this,FuncionTipo.BEFORE,ControlTipo.TEXTAREA,EventoTipo.CHANGE,EventoSubTipo.CHANGED,sTipo,this.formapagopuntoventa,new Object(),this.formapagopuntoventaParameterGeneral,this.formapagopuntoventaReturnGeneral);
							
				
				


				
				FormaPagoPuntoVentaBeanSwingJInternalFrameAdditional.procesarEventosVista(this.parametroGeneralUsuario,this.moduloActual,this.opcionActual,this.usuarioActual,this,FuncionTipo.AFTER,ControlTipo.TEXTAREA,EventoTipo.CHANGE,EventoSubTipo.CHANGED,sTipo,this.formapagopuntoventa,new Object(),this.formapagopuntoventaParameterGeneral,this.formapagopuntoventaReturnGeneral);
				
				
				if(esUsoDesdeHijoLocal) {
					Long id=0L;
					
					generalEntityParameterGeneral.setEventoGlobalTipo(EventoGlobalTipo.FORM_HIJO_ACTUALIZAR);
					generalEntityParameterGeneral.setsDominio("Formulario");
					generalEntityParameterGeneral.setsDominioTipo(FormaPagoPuntoVenta.class.getName());
					
					if(this.jInternalFrameParent!=null) {
						this.jInternalFrameParent.setEventoParentGeneral(esUsoDesdeHijoLocal,"Formulario",FormaPagoPuntoVenta.class.getName(),sTipo,"TEXTAREA",esControlTabla,conIrServidorAplicacionParent,
							id,jTextArea, EventoGlobalTipo.FORM_HIJO_ACTUALIZAR,ControlTipo.TEXTAREA,EventoTipo.CHANGE,EventoSubTipo.CHANGED,arrClasses,
							evt,generalEntityParameterGeneral,null);
					}
				}			
			}
			
		} catch(Exception e) {
  			FuncionesSwing.manageException2(this, e,logger,FormaPagoPuntoVentaConstantesFunciones.CLASSNAME);
  		}
    }
	
	public void jTextAreaFocusGainedGeneral(String sTipo,java.awt.event.FocusEvent evt) { 	  
		try {
			if(this.permiteManejarEventosControl()) {
				//SELECCIONA FILA A OBJETO ACTUAL			
				this.seleccionarFilaTablaFormaPagoPuntoVentaActual();
			
				//SELECCIONA FILA A OBJETO ANTERIOR
				Integer intSelectedRow = this.jTableDatosFormaPagoPuntoVenta.getSelectedRow();
						
				if(intSelectedRow!=null && intSelectedRow>-1) {
					//ARCHITECTURE
					if(Constantes.ISUSAEJBLOGICLAYER) {
						this.formapagopuntoventaAnterior =(FormaPagoPuntoVenta) this.formapagopuntoventaLogic.getFormaPagoPuntoVentas().toArray()[this.jTableDatosFormaPagoPuntoVenta.convertRowIndexToModel(intSelectedRow)];
					} else if(Constantes.ISUSAEJBREMOTE || Constantes.ISUSAEJBHOME ) {
						this.formapagopuntoventaAnterior =(FormaPagoPuntoVenta) this.formapagopuntoventas.toArray()[this.jTableDatosFormaPagoPuntoVenta.convertRowIndexToModel(intSelectedRow)];
					}
					//ARCHITECTURE
					
					//System.out.println(this.banco);
				}
			}
		} catch(Exception e) {
  			FuncionesSwing.manageException2(this, e,logger,FormaPagoPuntoVentaConstantesFunciones.CLASSNAME);
  		}
    }
	
	public void jTextAreaChangedUpdateGeneral(String sTipo,JTextArea jTextArea,DocumentEvent evt) { 	  
		try {
			/*
			EventoGlobalTipo eventoGlobalTipo=EventoGlobalTipo.CONTROL_CHANGE;
			
			//System.out.println("UPDATE");
			
			Boolean esControlTabla=false;
			//JTextArea jTextArea=null;
			Container containerParent=null;
			Component componentOpposite=null;
			
			if(this.esUsoDesdeHijo) {
				eventoGlobalTipo=EventoGlobalTipo.FORM_HIJO_ACTUALIZAR;
			}
			
			FormaPagoPuntoVentaBeanSwingJInternalFrameAdditional.procesarEventosVista(this.parametroGeneralUsuario,this.moduloActual,this.opcionActual,this.usuarioActual,this,FuncionTipo.BEFORE,ControlTipo.TEXTAREA,EventoTipo.CHANGE,EventoSubTipo.CHANGED,sTipo,this.formapagopuntoventa,new Object(),this.formapagopuntoventaParameterGeneral,this.formapagopuntoventaReturnGeneral);
			
			ArrayList<Classe> classes=new ArrayList<Classe>();
			
			//jTextArea=(JTextArea)evt.getSource();
			
			containerParent=jTextArea.getParent();
			componentOpposite=null;//evt.getOppositeComponent();
			
			if((containerParent!=null && containerParent.getClass().equals(JTableMe.class))
				|| (componentOpposite!=null && componentOpposite.getClass().equals(JTableMe.class))
			) {
				esControlTabla=true;
			}
			
			this.esControlTabla=esControlTabla;
			
			


			
			FormaPagoPuntoVentaBeanSwingJInternalFrameAdditional.procesarEventosVista(this.parametroGeneralUsuario,this.moduloActual,this.opcionActual,this.usuarioActual,this,FuncionTipo.AFTER,ControlTipo.TEXTAREA,EventoTipo.CHANGE,EventoSubTipo.CHANGED,sTipo,this.formapagopuntoventa,new Object(),this.formapagopuntoventaParameterGeneral,this.formapagopuntoventaReturnGeneral);
			
			*/
  		} catch(Exception e) {
  			FuncionesSwing.manageException2(this, e,logger,FormaPagoPuntoVentaConstantesFunciones.CLASSNAME);
  		}
    }
	
	public void jTextAreaRemoveUpdateGeneral(String sTipo,JTextArea jTextArea,DocumentEvent evt) { 	  
		try {
			//System.out.println("REMOVE");
			
  		} catch(Exception e) {
  			FuncionesSwing.manageException2(this, e,logger,FormaPagoPuntoVentaConstantesFunciones.CLASSNAME);
  		}
    }
	
	public void jTextAreaInsertUpdateGeneral(String sTipo,JTextArea jTextArea,DocumentEvent evt) { 	  
		try {
			
			//System.out.println("INSERT");
			
  		} catch(Exception e) {
  			FuncionesSwing.manageException2(this, e,logger,FormaPagoPuntoVentaConstantesFunciones.CLASSNAME);
  		}
    }
	
	//NO EXISTE O NO ES APLICABLE
	public void jTextAreaActionPerformedGeneral(String sTipo,ActionEvent evt) { 	  
		try {
			//SELECCIONA FILA A OBJETO ACTUAL			
			this.seleccionarFilaTablaFormaPagoPuntoVentaActual();
			
			this.actualizarInformacion("EVENTO_CONTROL",false,this.formapagopuntoventa);
			
			this.actualizarInformacion("INFO_PADRE",false,this.formapagopuntoventa);
				
		} catch(Exception e) {
  			FuncionesSwing.manageException2(this, e,logger,FormaPagoPuntoVentaConstantesFunciones.CLASSNAME);
  		}
    }
	
	public void jLabelFocusLostGeneral(String sTipo,java.awt.event.FocusEvent evt) { 	  
		try {
			if(this.permiteManejarEventosControl()) {
				EventoGlobalTipo eventoGlobalTipo=EventoGlobalTipo.CONTROL_CHANGE;
				
				Boolean esControlTabla=false;
				JLabel jLabel=null;
				Container containerParent=null;
				Component componentOpposite=null;
				
				
				//PARAMETROS LLAMAR FUNCION PARENT
				GeneralEntityParameterGeneral generalEntityParameterGeneral=new GeneralEntityParameterGeneral();			
				Boolean esUsoDesdeHijoLocal=false;
				Boolean conIrServidorAplicacionParent=false;	
				ArrayList<String> arrClasses=new ArrayList<String>();			
				//PARAMETROS LLAMAR FUNCION PARENT_FIN
				
				
				/*
				if(this.esUsoDesdeHijo) {
					eventoGlobalTipo=EventoGlobalTipo.FORM_HIJO_ACTUALIZAR;
				}
				*/
				
				ArrayList<Classe> classes=new ArrayList<Classe>();
				
				jLabel=(JLabel)evt.getSource();
				
				containerParent=jLabel.getParent();
						
				componentOpposite=evt.getOppositeComponent();
				
				if((containerParent!=null && containerParent.getClass().equals(JTableMe.class))
					|| (componentOpposite!=null && componentOpposite.getClass().equals(JTableMe.class))
				) {					
					esControlTabla=true;
				}
				
				this.esControlTabla=esControlTabla;
				
				
				this.actualizarInformacion("EVENTO_CONTROL",false,this.formapagopuntoventa);
				
				this.actualizarInformacion("INFO_PADRE",false,this.formapagopuntoventa);
				
				FormaPagoPuntoVentaBeanSwingJInternalFrameAdditional.procesarEventosVista(this.parametroGeneralUsuario,this.moduloActual,this.opcionActual,this.usuarioActual,this,FuncionTipo.BEFORE,ControlTipo.TEXTBOX,EventoTipo.CHANGE,EventoSubTipo.CHANGED,sTipo,this.formapagopuntoventa,new Object(),this.formapagopuntoventaParameterGeneral,this.formapagopuntoventaReturnGeneral);
								
				
				


			if(sTipo.equals("porcentajeFormaPagoPuntoVenta")) {
				if(this.formapagopuntoventaSessionBean.getConGuardarRelaciones()) {
					//classes=FormaPagoPuntoVentaConstantesFunciones.getClassesRelationshipsOfFormaPagoPuntoVenta(new ArrayList<Classe>(),DeepLoadType.NONE);
				}

				this.classesActual=new ArrayList<Classe>();
				this.classesActual.addAll(classes);

				this.recargarFormFormaPagoPuntoVenta(sTipo,"Formulario",eventoGlobalTipo,ControlTipo.LABEL,EventoTipo.CHANGE,EventoSubTipo.CHANGED,"LABEL",classes,false,esControlTabla);
			}
			 else if(sTipo.equals("valorFormaPagoPuntoVenta")) {
				if(this.formapagopuntoventaSessionBean.getConGuardarRelaciones()) {
					//classes=FormaPagoPuntoVentaConstantesFunciones.getClassesRelationshipsOfFormaPagoPuntoVenta(new ArrayList<Classe>(),DeepLoadType.NONE);
				}

				this.classesActual=new ArrayList<Classe>();
				this.classesActual.addAll(classes);

				this.recargarFormFormaPagoPuntoVenta(sTipo,"Formulario",eventoGlobalTipo,ControlTipo.LABEL,EventoTipo.CHANGE,EventoSubTipo.CHANGED,"LABEL",classes,false,esControlTabla);
			}
			 else if(sTipo.equals("numero_dias_plazoFormaPagoPuntoVenta")) {
				if(this.formapagopuntoventaSessionBean.getConGuardarRelaciones()) {
					//classes=FormaPagoPuntoVentaConstantesFunciones.getClassesRelationshipsOfFormaPagoPuntoVenta(new ArrayList<Classe>(),DeepLoadType.NONE);
				}

				this.classesActual=new ArrayList<Classe>();
				this.classesActual.addAll(classes);

				this.recargarFormFormaPagoPuntoVenta(sTipo,"Formulario",eventoGlobalTipo,ControlTipo.LABEL,EventoTipo.CHANGE,EventoSubTipo.CHANGED,"LABEL",classes,false,esControlTabla);
			}
				
				FormaPagoPuntoVentaBeanSwingJInternalFrameAdditional.procesarEventosVista(this.parametroGeneralUsuario,this.moduloActual,this.opcionActual,this.usuarioActual,this,FuncionTipo.AFTER,ControlTipo.TEXTBOX,EventoTipo.CHANGE,EventoSubTipo.CHANGED,sTipo,this.formapagopuntoventa,new Object(),this.formapagopuntoventaParameterGeneral,this.formapagopuntoventaReturnGeneral);
				
				
				if(esUsoDesdeHijoLocal) {
					Long id=0L;
					
					generalEntityParameterGeneral.setEventoGlobalTipo(EventoGlobalTipo.FORM_HIJO_ACTUALIZAR);
					generalEntityParameterGeneral.setsDominio("Formulario");
					generalEntityParameterGeneral.setsDominioTipo(FormaPagoPuntoVenta.class.getName());
					
					if(this.jInternalFrameParent!=null) {
						this.jInternalFrameParent.setEventoParentGeneral(esUsoDesdeHijoLocal,"Formulario",FormaPagoPuntoVenta.class.getName(),sTipo,"TEXTFIELD",esControlTabla,conIrServidorAplicacionParent,
							id,jLabel, EventoGlobalTipo.FORM_HIJO_ACTUALIZAR,ControlTipo.TEXTBOX,EventoTipo.CHANGE,EventoSubTipo.CHANGED,arrClasses,
							evt,generalEntityParameterGeneral,null);
					}
				}			
			}	
			
		} catch(Exception e) {
  			FuncionesSwing.manageException2(this, e,logger,FormaPagoPuntoVentaConstantesFunciones.CLASSNAME);
  		}
    }
	
	public void jLabelFocusGainedGeneral(String sTipo,java.awt.event.FocusEvent evt) { 	  
		try {
			//SELECCIONA FILA A OBJETO ACTUAL			
			this.seleccionarFilaTablaFormaPagoPuntoVentaActual();
			
			//SELECCIONA FILA A OBJETO ANTERIOR
			Integer intSelectedRow = this.jTableDatosFormaPagoPuntoVenta.getSelectedRow();
					
			if(intSelectedRow!=null && intSelectedRow>-1) {
				//ARCHITECTURE
				if(Constantes.ISUSAEJBLOGICLAYER) {
					this.formapagopuntoventaAnterior =(FormaPagoPuntoVenta) this.formapagopuntoventaLogic.getFormaPagoPuntoVentas().toArray()[this.jTableDatosFormaPagoPuntoVenta.convertRowIndexToModel(intSelectedRow)];
				} else if(Constantes.ISUSAEJBREMOTE || Constantes.ISUSAEJBHOME ) {
					this.formapagopuntoventaAnterior =(FormaPagoPuntoVenta) this.formapagopuntoventas.toArray()[this.jTableDatosFormaPagoPuntoVenta.convertRowIndexToModel(intSelectedRow)];
				}
				//ARCHITECTURE
				
				//System.out.println(this.banco);
			}
		} catch(Exception e) {
  			FuncionesSwing.manageException2(this, e,logger,FormaPagoPuntoVentaConstantesFunciones.CLASSNAME);
  		}
    }
	
	//NO EXISTE O NO ES APLICABLE
	public void jLabelActionPerformedGeneral(String sTipo,ActionEvent evt) { 	  
		try {
			
			//SELECCIONA FILA A OBJETO ACTUAL			
			this.seleccionarFilaTablaFormaPagoPuntoVentaActual();
				
			this.actualizarInformacion("EVENTO_CONTROL",false,this.formapagopuntoventa);
			
			this.actualizarInformacion("INFO_PADRE",false,this.formapagopuntoventa);
				
		} catch(Exception e) {
  			FuncionesSwing.manageException2(this, e,logger,FormaPagoPuntoVentaConstantesFunciones.CLASSNAME);
  		}
    }
	
	public void jCheckBoxItemListenerGeneral(String sTipo,ItemEvent evt) { 	  
		try {
			if(this.permiteManejarEventosControl()) {
				//SELECCIONA FILA A OBJETO ACTUAL			
				this.seleccionarFilaTablaFormaPagoPuntoVentaActual();
				
				EventoGlobalTipo eventoGlobalTipo=EventoGlobalTipo.CONTROL_CHANGE;
				
				Boolean esControlTabla=false;
				JCheckBox jCheckBox=null;
				Container containerParent=null;
				Component componentOpposite=null;
				
							
				//PARAMETROS LLAMAR FUNCION PARENT
				GeneralEntityParameterGeneral generalEntityParameterGeneral=new GeneralEntityParameterGeneral();			
				Boolean esUsoDesdeHijoLocal=false;
				Boolean conIrServidorAplicacionParent=false;	
				ArrayList<String> arrClasses=new ArrayList<String>();			
				//PARAMETROS LLAMAR FUNCION PARENT_FIN
				
				
				/*
				if(this.esUsoDesdeHijo) {
					eventoGlobalTipo=EventoGlobalTipo.FORM_HIJO_ACTUALIZAR;
				}
				*/
				
				ArrayList<Classe> classes=new ArrayList<Classe>();
				
				jCheckBox=(JCheckBox)evt.getSource();
				
				containerParent=jCheckBox.getParent();
						
				componentOpposite=null;//evt.getOppositeComponent();
				
				if((containerParent!=null && containerParent.getClass().equals(JTableMe.class))
					|| (componentOpposite!=null && componentOpposite.getClass().equals(JTableMe.class))
				) {					
					esControlTabla=true;
				}
				
				this.esControlTabla=esControlTabla;
				
				
				this.actualizarInformacion("EVENTO_CONTROL",false,this.formapagopuntoventa);
				
				this.actualizarInformacion("INFO_PADRE",false,this.formapagopuntoventa);
				
				FormaPagoPuntoVentaBeanSwingJInternalFrameAdditional.procesarEventosVista(this.parametroGeneralUsuario,this.moduloActual,this.opcionActual,this.usuarioActual,this,FuncionTipo.BEFORE,ControlTipo.CHECKBOX,EventoTipo.CLIC,EventoSubTipo.CLICKED,sTipo,this.formapagopuntoventa,new Object(),this.formapagopuntoventaParameterGeneral,this.formapagopuntoventaReturnGeneral);
												
				
				if(sTipo.equals("SeleccionarTodosFormaPagoPuntoVenta")) {
					jCheckBoxSeleccionarTodosFormaPagoPuntoVentaItemListener(evt);
				
				} else if(sTipo.equals("SeleccionadosFormaPagoPuntoVenta")) {
					jCheckBoxSeleccionadosFormaPagoPuntoVentaItemListener(evt);
				
				} else if(sTipo.equals("NuevoToolBarFormaPagoPuntoVenta")) {
					
				}
				
				


				
				
				FormaPagoPuntoVentaBeanSwingJInternalFrameAdditional.procesarEventosVista(this.parametroGeneralUsuario,this.moduloActual,this.opcionActual,this.usuarioActual,this,FuncionTipo.AFTER,ControlTipo.CHECKBOX,EventoTipo.CLIC,EventoSubTipo.CLICKED,sTipo,this.formapagopuntoventa,new Object(),this.formapagopuntoventaParameterGeneral,this.formapagopuntoventaReturnGeneral);
				
				
				if(esUsoDesdeHijoLocal) {
					Long id=0L;
					
					generalEntityParameterGeneral.setEventoGlobalTipo(EventoGlobalTipo.FORM_HIJO_ACTUALIZAR);
					generalEntityParameterGeneral.setsDominio("Formulario");
					generalEntityParameterGeneral.setsDominioTipo(FormaPagoPuntoVenta.class.getName());
					
					if(this.jInternalFrameParent!=null) {
						this.jInternalFrameParent.setEventoParentGeneral(esUsoDesdeHijoLocal,"Formulario",FormaPagoPuntoVenta.class.getName(),sTipo,"TEXTFIELD",esControlTabla,conIrServidorAplicacionParent,
							id,jCheckBox, EventoGlobalTipo.FORM_HIJO_ACTUALIZAR,ControlTipo.CHECKBOX,EventoTipo.CLIC,EventoSubTipo.CLICKED,arrClasses,
							evt,generalEntityParameterGeneral,null);
					}
				}			
			}	
			
  		} catch(Exception e) {
  			FuncionesSwing.manageException2(this, e,logger,FormaPagoPuntoVentaConstantesFunciones.CLASSNAME);
  		}
    }
	
	public void jCheckBoxFocusLostGeneral(String sTipo,java.awt.event.FocusEvent evt) { 	  
		try {
			if(this.permiteManejarEventosControl() && this.existeCambioValor(ControlTipo.CHECKBOX,sTipo)) {
				EventoGlobalTipo eventoGlobalTipo=EventoGlobalTipo.CONTROL_CHANGE;
				
				Boolean esControlTabla=false;
				JCheckBox jCheckBox=null;
				Container containerParent=null;
				Component componentOpposite=null;
				
				
				//PARAMETROS LLAMAR FUNCION PARENT
				GeneralEntityParameterGeneral generalEntityParameterGeneral=new GeneralEntityParameterGeneral();			
				Boolean esUsoDesdeHijoLocal=false;
				Boolean conIrServidorAplicacionParent=false;	
				ArrayList<String> arrClasses=new ArrayList<String>();			
				//PARAMETROS LLAMAR FUNCION PARENT_FIN
				
				
				ArrayList<Classe> classes=new ArrayList<Classe>();
				
				jCheckBox=(JCheckBox)evt.getSource();
				
				containerParent=jCheckBox.getParent();
						
				componentOpposite=evt.getOppositeComponent();
				
				if((containerParent!=null && containerParent.getClass().equals(JTableMe.class))
					|| (componentOpposite!=null && componentOpposite.getClass().equals(JTableMe.class))
				) {					
					esControlTabla=true;
				}
				
				this.esControlTabla=esControlTabla;
				
				
				/*
				if(this.esUsoDesdeHijo) {
					eventoGlobalTipo=EventoGlobalTipo.FORM_HIJO_ACTUALIZAR;
				}
				*/
				
				//this.actualizarInformacion("EVENTO_CONTROL",false,this.formapagopuntoventa);
				
				//this.actualizarInformacion("INFO_PADRE",false,this.formapagopuntoventa);
				
				FormaPagoPuntoVentaBeanSwingJInternalFrameAdditional.procesarEventosVista(this.parametroGeneralUsuario,this.moduloActual,this.opcionActual,this.usuarioActual,this,FuncionTipo.BEFORE,ControlTipo.CHECKBOX,EventoTipo.CLIC,EventoSubTipo.CLICKED,sTipo,this.formapagopuntoventa,new Object(),this.formapagopuntoventaParameterGeneral,this.formapagopuntoventaReturnGeneral);
												
				
				


				
				
				FormaPagoPuntoVentaBeanSwingJInternalFrameAdditional.procesarEventosVista(this.parametroGeneralUsuario,this.moduloActual,this.opcionActual,this.usuarioActual,this,FuncionTipo.AFTER,ControlTipo.CHECKBOX,EventoTipo.CLIC,EventoSubTipo.CLICKED,sTipo,this.formapagopuntoventa,new Object(),this.formapagopuntoventaParameterGeneral,this.formapagopuntoventaReturnGeneral);
				
				
				if(esUsoDesdeHijoLocal) {
					Long id=0L;
				
					generalEntityParameterGeneral.setEventoGlobalTipo(EventoGlobalTipo.FORM_HIJO_ACTUALIZAR);
					generalEntityParameterGeneral.setsDominio("Formulario");
					generalEntityParameterGeneral.setsDominioTipo(FormaPagoPuntoVenta.class.getName());
					
					if(this.jInternalFrameParent!=null) {
						this.jInternalFrameParent.setEventoParentGeneral(esUsoDesdeHijoLocal,"Formulario",FormaPagoPuntoVenta.class.getName(),sTipo,"TEXTFIELD",esControlTabla,conIrServidorAplicacionParent,
							id,jCheckBox, EventoGlobalTipo.FORM_HIJO_ACTUALIZAR,ControlTipo.CHECKBOX,EventoTipo.CLIC,EventoSubTipo.CLICKED,arrClasses,
							evt,generalEntityParameterGeneral,null);
					}
				}			
			}
			
  		} catch(Exception e) {
  			FuncionesSwing.manageException2(this, e,logger,FormaPagoPuntoVentaConstantesFunciones.CLASSNAME);
  		}
    }
	
	public void jCheckBoxFocusGainedGeneral(String sTipo,java.awt.event.FocusEvent evt) { 	  
		try {
			if(this.permiteManejarEventosControl()) {
				//SELECCIONA FILA A OBJETO ACTUAL			
				this.seleccionarFilaTablaFormaPagoPuntoVentaActual();
			
				//SELECCIONA FILA A OBJETO ANTERIOR
				Integer intSelectedRow = this.jTableDatosFormaPagoPuntoVenta.getSelectedRow();
						
				if(intSelectedRow!=null && intSelectedRow>-1) {
					//ARCHITECTURE
					if(Constantes.ISUSAEJBLOGICLAYER) {
						this.formapagopuntoventaAnterior =(FormaPagoPuntoVenta) this.formapagopuntoventaLogic.getFormaPagoPuntoVentas().toArray()[this.jTableDatosFormaPagoPuntoVenta.convertRowIndexToModel(intSelectedRow)];
					} else if(Constantes.ISUSAEJBREMOTE || Constantes.ISUSAEJBHOME ) {
						this.formapagopuntoventaAnterior =(FormaPagoPuntoVenta) this.formapagopuntoventas.toArray()[this.jTableDatosFormaPagoPuntoVenta.convertRowIndexToModel(intSelectedRow)];
					}
					//ARCHITECTURE
					
					//System.out.println(this.banco);
				}
			}
  		} catch(Exception e) {
  			FuncionesSwing.manageException2(this, e,logger,FormaPagoPuntoVentaConstantesFunciones.CLASSNAME);
  		}
    }
	
	public void jCheckBoxActionPerformedGeneral(String sTipo,ActionEvent evt) { 	  
		try {
			if(this.permiteManejarEventosControl()) {
				
				//SELECCIONA FILA A OBJETO ACTUAL			
				this.seleccionarFilaTablaFormaPagoPuntoVentaActual();
				
				this.actualizarInformacion("EVENTO_CONTROL",false,this.formapagopuntoventa);
				
				this.actualizarInformacion("INFO_PADRE",false,this.formapagopuntoventa);
				
				FormaPagoPuntoVentaBeanSwingJInternalFrameAdditional.procesarEventosVista(this.parametroGeneralUsuario,this.moduloActual,this.opcionActual,this.usuarioActual,this,FuncionTipo.BEFORE,ControlTipo.CHECKBOX,EventoTipo.CLIC,EventoSubTipo.CLICKED,sTipo,this.formapagopuntoventa,new Object(),this.formapagopuntoventaParameterGeneral,this.formapagopuntoventaReturnGeneral);
				
				
				FormaPagoPuntoVentaBeanSwingJInternalFrameAdditional.procesarEventosVista(this.parametroGeneralUsuario,this.moduloActual,this.opcionActual,this.usuarioActual,this,FuncionTipo.AFTER,ControlTipo.CHECKBOX,EventoTipo.CLIC,EventoSubTipo.CLICKED,sTipo,this.formapagopuntoventa,new Object(),this.formapagopuntoventaParameterGeneral,this.formapagopuntoventaReturnGeneral);
			}
			
  		} catch(Exception e) {
  			FuncionesSwing.manageException2(this, e,logger,FormaPagoPuntoVentaConstantesFunciones.CLASSNAME);
  		}
    }
	
	//NO SE UTILIZA, SE USA EL DE ABAJO, IGUAL SE DEJA EL CODIGO COMO RESPALDO Y ES CASI IGUAL
	//ERROR:SI SE USA,AL HACER CLIC EN EL MISMO ELEMENTO O EJECUTAR SELECTEDITEM, SIEMPRE SE EJECUTA COMO SI ESCOGIERA OTRO ELEMENTO(NO DEBERIA)
	//@SuppressWarnings("rawtypes")
	public void jComboBoxActionPerformedGeneral(String sTipo,ActionEvent evt) {		
		try {
			/*		
			EventoGlobalTipo eventoGlobalTipo=EventoGlobalTipo.CONTROL_CHANGE;
			
			if(this.esUsoDesdeHijo) {
				eventoGlobalTipo=EventoGlobalTipo.FORM_HIJO_ACTUALIZAR;
			}
			
			Container containerParent=null;
			Component componentOpposite=null;
			Boolean esControlTabla=false;
				
			ArrayList<Classe> classes=new ArrayList<Classe>();
			
			FormaPagoPuntoVentaBeanSwingJInternalFrameAdditional.procesarEventosVista(this.parametroGeneralUsuario,this.moduloActual,this.opcionActual,this.usuarioActual,this,FuncionTipo.BEFORE,ControlTipo.COMBOBOX,EventoTipo.CHANGE,EventoSubTipo.CLICKED,sTipo,this.formapagopuntoventa,new Object(),this.formapagopuntoventaParameterGeneral,this.formapagopuntoventaReturnGeneral);
			JComboBox jComboBoxGenerico=null;						
			
			if(evt.getSource().getClass().equals(JComboBox.class)
				|| evt.getSource().getClass().equals(JComboBoxMe.class)) {
					
				jComboBoxGenerico=(JComboBox)evt.getSource();
				
				containerParent=jComboBoxGenerico.getParent();
				
				componentOpposite=null;//evt.getOppositeComponent();
				
				if((containerParent!=null && containerParent.getClass().equals(JTableMe.class))
					|| (componentOpposite!=null && componentOpposite.getClass().equals(JTableMe.class))
				) {					
					esControlTabla=true;
				}
				
				this.esControlTabla=esControlTabla;
			}
			
			String sFinalQueryCombo="";
			
			


			if(sTipo.equals("id_tipo_forma_pagoFormaPagoPuntoVenta")) {
				if(jComboBoxGenerico==null) {
					jComboBoxGenerico=this.jInternalFrameDetalleFormFormaPagoPuntoVenta.jComboBoxid_tipo_forma_pagoFormaPagoPuntoVenta;
				}

				if(this.formapagopuntoventaSessionBean.getConGuardarRelaciones()) {
					//classes=FormaPagoPuntoVentaConstantesFunciones.getClassesRelationshipsOfFormaPagoPuntoVenta(new ArrayList<Classe>(),DeepLoadType.NONE);
				}


				this.procesarActionsCombosForeignKeyTipoFormaPago(jComboBoxGenerico,"Formulario");

				this.recargarFormFormaPagoPuntoVenta(sTipo,"Formulario",eventoGlobalTipo,ControlTipo.COMBOBOX,EventoTipo.CHANGE,EventoSubTipo.CHANGED,"COMBOBOX",classes,false,esControlTabla);
			}
			 else if(sTipo.equals("jComboBoxid_tipo_forma_pagoFK_IdTipoFormaPagoFormaPagoPuntoVenta")) {
				//this.procesarActionsCombosForeignKeyTipoFormaPago(jComboBoxid_tipo_forma_pagoFK_IdTipoFormaPagoFormaPagoPuntoVenta,"FK_IdTipoFormaPago");
				//recargarFormFormaPagoPuntoVentaTipoFormaPago(jComboBoxid_tipo_forma_pagoFK_IdTipoFormaPagoFormaPagoPuntoVenta,"FK_IdTipoFormaPago");
			}
			
			FormaPagoPuntoVentaBeanSwingJInternalFrameAdditional.procesarEventosVista(this.parametroGeneralUsuario,this.moduloActual,this.opcionActual,this.usuarioActual,this,FuncionTipo.AFTER,ControlTipo.COMBOBOX,EventoTipo.CHANGE,EventoSubTipo.CHANGED,sTipo,this.formapagopuntoventa,new Object(),this.formapagopuntoventaParameterGeneral,this.formapagopuntoventaReturnGeneral);
			*/						
  		} catch(Exception e) {
  			FuncionesSwing.manageException2(this, e,logger,FormaPagoPuntoVentaConstantesFunciones.CLASSNAME);
  		}		
    }
	
	@SuppressWarnings("rawtypes")
	public void jComboBoxItemStateChangedGeneral(String sTipo,ItemEvent evt) { 	  
		try {
			if (evt.getStateChange() == ItemEvent.SELECTED && this.permiteManejarEventosControl()) {
				//SELECCIONA FILA A OBJETO ACTUAL			
				this.seleccionarFilaTablaFormaPagoPuntoVentaActual();
			
				//PARAMETROS LLAMAR FUNCION PARENT
				GeneralEntityParameterGeneral generalEntityParameterGeneral=new GeneralEntityParameterGeneral();			
				Boolean esUsoDesdeHijoLocal=false;
				Boolean conIrServidorAplicacionParent=false;	
				ArrayList<String> arrClasses=new ArrayList<String>();			
				//PARAMETROS LLAMAR FUNCION PARENT_FIN
			
			
				EventoGlobalTipo eventoGlobalTipo=EventoGlobalTipo.CONTROL_CHANGE;
				
				/*
				if(this.esUsoDesdeHijo) {
					eventoGlobalTipo=EventoGlobalTipo.FORM_HIJO_ACTUALIZAR;
				}
				*/
				
				Container containerParent=null;
				Component componentOpposite=null;
				Boolean esControlTabla=false;
				
				ArrayList<Classe> classes=new ArrayList<Classe>();
				
				JComboBox jComboBoxGenerico=null;						
				
				if(evt.getSource().getClass().equals(JComboBox.class)
					|| evt.getSource().getClass().equals(JComboBoxMe.class)) {
						
					jComboBoxGenerico=(JComboBox)evt.getSource();
					
					containerParent=jComboBoxGenerico.getParent();
					
					componentOpposite=null;//evt.getOppositeComponent();
					
					if((containerParent!=null && containerParent.getClass().equals(JTableMe.class))
					|| (componentOpposite!=null && componentOpposite.getClass().equals(JTableMe.class))
					) {					
						esControlTabla=true;
					}		
					
					this.esControlTabla=esControlTabla;
				}
				
				
				this.actualizarInformacion("EVENTO_CONTROL",false,this.formapagopuntoventa);
				
				this.actualizarInformacion("INFO_PADRE",false,this.formapagopuntoventa);
				
				FormaPagoPuntoVentaBeanSwingJInternalFrameAdditional.procesarEventosVista(this.parametroGeneralUsuario,this.moduloActual,this.opcionActual,this.usuarioActual,this,FuncionTipo.BEFORE,ControlTipo.COMBOBOX,EventoTipo.CHANGE,EventoSubTipo.CLICKED,sTipo,this.formapagopuntoventa,new Object(),this.formapagopuntoventaParameterGeneral,this.formapagopuntoventaReturnGeneral);
				
				
				String sFinalQueryCombo="";
				
				


			if(sTipo.equals("id_tipo_forma_pagoFormaPagoPuntoVenta")) {
				if(jComboBoxGenerico==null) {
					jComboBoxGenerico=this.jInternalFrameDetalleFormFormaPagoPuntoVenta.jComboBoxid_tipo_forma_pagoFormaPagoPuntoVenta;
				}

				if(this.formapagopuntoventaSessionBean.getConGuardarRelaciones()) {
					//classes=FormaPagoPuntoVentaConstantesFunciones.getClassesRelationshipsOfFormaPagoPuntoVenta(new ArrayList<Classe>(),DeepLoadType.NONE);
				}


				this.procesarActionsCombosForeignKeyTipoFormaPago(jComboBoxGenerico,"Formulario");

				this.recargarFormFormaPagoPuntoVenta(sTipo,"Formulario",eventoGlobalTipo,ControlTipo.COMBOBOX,EventoTipo.CHANGE,EventoSubTipo.CHANGED,"COMBOBOX",classes,false,esControlTabla);
			}
			 else if(sTipo.equals("jComboBoxid_tipo_forma_pagoFK_IdTipoFormaPagoFormaPagoPuntoVenta")) {
				//this.procesarActionsCombosForeignKeyTipoFormaPago(jComboBoxid_tipo_forma_pagoFK_IdTipoFormaPagoFormaPagoPuntoVenta,"FK_IdTipoFormaPago");
				//recargarFormFormaPagoPuntoVentaTipoFormaPago(jComboBoxid_tipo_forma_pagoFK_IdTipoFormaPagoFormaPagoPuntoVenta,"FK_IdTipoFormaPago");
			}
				
				FormaPagoPuntoVentaBeanSwingJInternalFrameAdditional.procesarEventosVista(this.parametroGeneralUsuario,this.moduloActual,this.opcionActual,this.usuarioActual,this,FuncionTipo.AFTER,ControlTipo.COMBOBOX,EventoTipo.CHANGE,EventoSubTipo.CHANGED,sTipo,this.formapagopuntoventa,new Object(),this.formapagopuntoventaParameterGeneral,this.formapagopuntoventaReturnGeneral);
				
				if(esUsoDesdeHijoLocal) {
					Long id=0L;
				
					generalEntityParameterGeneral.setEventoGlobalTipo(EventoGlobalTipo.FORM_HIJO_ACTUALIZAR);
					generalEntityParameterGeneral.setsDominio("Formulario");
					generalEntityParameterGeneral.setsDominioTipo(FormaPagoPuntoVenta.class.getName());
								
					if(this.jInternalFrameParent!=null) {
						this.jInternalFrameParent.setEventoParentGeneral(esUsoDesdeHijoLocal,"Formulario",FormaPagoPuntoVenta.class.getName(),sTipo,"COMBOBOX",esControlTabla,conIrServidorAplicacionParent,
							id,jComboBoxGenerico, EventoGlobalTipo.FORM_HIJO_ACTUALIZAR,ControlTipo.COMBOBOX,EventoTipo.CHANGE,EventoSubTipo.CHANGED,arrClasses,
							evt,generalEntityParameterGeneral,null);
					}
				}			
			}
  		} catch(Exception e) {
  			FuncionesSwing.manageException2(this, e,logger,FormaPagoPuntoVentaConstantesFunciones.CLASSNAME);
  		}
    }
	
	//@SuppressWarnings("rawtypes")
	public void jComboBoxFocusLostGeneral(String sTipo,java.awt.event.FocusEvent evt) { 	  
		//MANEJADO EN ITEMLISTENER
		/*
		try {
			if(this.permiteManejarEventosControl()) {
				EventoGlobalTipo eventoGlobalTipo=EventoGlobalTipo.CONTROL_CHANGE;
				
				
				//if(this.esUsoDesdeHijo) {
				//	eventoGlobalTipo=EventoGlobalTipo.FORM_HIJO_ACTUALIZAR;
				//}
				
				
				Container containerParent=null;
				Component componentOpposite=null;
				Boolean esControlTabla=false;
				
				ArrayList<Classe> classes=new ArrayList<Classe>();
				
				//PARAMETROS LLAMAR FUNCION PARENT
				GeneralEntityParameterGeneral generalEntityParameterGeneral=new GeneralEntityParameterGeneral();			
				Boolean esUsoDesdeHijoLocal=false;
				Boolean conIrServidorAplicacionParent=false;	
				ArrayList<String> arrClasses=new ArrayList<String>();			
				//PARAMETROS LLAMAR FUNCION PARENT_FIN
			
				this.actualizarInformacion("EVENTO_CONTROL",false,this.formapagopuntoventa);
				
				this.actualizarInformacion("INFO_PADRE",false,this.formapagopuntoventa);
				
				FormaPagoPuntoVentaBeanSwingJInternalFrameAdditional.procesarEventosVista(this.parametroGeneralUsuario,this.moduloActual,this.opcionActual,this.usuarioActual,this,FuncionTipo.BEFORE,ControlTipo.COMBOBOX,EventoTipo.CHANGE,EventoSubTipo.CLICKED,sTipo,this.formapagopuntoventa,new Object(),this.formapagopuntoventaParameterGeneral,this.formapagopuntoventaReturnGeneral);
				JComboBox jComboBoxGenerico=null;						
				
				if(evt.getSource().getClass().equals(JComboBox.class)
					|| evt.getSource().getClass().equals(JComboBoxMe.class)) {
						
					jComboBoxGenerico=(JComboBox)evt.getSource();
					
					containerParent=jComboBoxGenerico.getParent();
					
					componentOpposite=evt.getOppositeComponent();
					
					if((containerParent!=null && containerParent.getClass().equals(JTableMe.class))
					|| (componentOpposite!=null && componentOpposite.getClass().equals(JTableMe.class))
					) {					
						esControlTabla=true;
					}
					
					this.esControlTabla=esControlTabla;
				}
				
				String sFinalQueryCombo="";
				
				


			if(sTipo.equals("id_tipo_forma_pagoFormaPagoPuntoVenta")) {
				if(jComboBoxGenerico==null) {
					jComboBoxGenerico=this.jInternalFrameDetalleFormFormaPagoPuntoVenta.jComboBoxid_tipo_forma_pagoFormaPagoPuntoVenta;
				}

				if(this.formapagopuntoventaSessionBean.getConGuardarRelaciones()) {
					//classes=FormaPagoPuntoVentaConstantesFunciones.getClassesRelationshipsOfFormaPagoPuntoVenta(new ArrayList<Classe>(),DeepLoadType.NONE);
				}


				this.procesarActionsCombosForeignKeyTipoFormaPago(jComboBoxGenerico,"Formulario");

				this.recargarFormFormaPagoPuntoVenta(sTipo,"Formulario",eventoGlobalTipo,ControlTipo.COMBOBOX,EventoTipo.CHANGE,EventoSubTipo.CHANGED,"COMBOBOX",classes,false,esControlTabla);
			}
			 else if(sTipo.equals("jComboBoxid_tipo_forma_pagoFK_IdTipoFormaPagoFormaPagoPuntoVenta")) {
				//this.procesarActionsCombosForeignKeyTipoFormaPago(jComboBoxid_tipo_forma_pagoFK_IdTipoFormaPagoFormaPagoPuntoVenta,"FK_IdTipoFormaPago");
				//recargarFormFormaPagoPuntoVentaTipoFormaPago(jComboBoxid_tipo_forma_pagoFK_IdTipoFormaPagoFormaPagoPuntoVenta,"FK_IdTipoFormaPago");
			}
				
				FormaPagoPuntoVentaBeanSwingJInternalFrameAdditional.procesarEventosVista(this.parametroGeneralUsuario,this.moduloActual,this.opcionActual,this.usuarioActual,this,FuncionTipo.AFTER,ControlTipo.COMBOBOX,EventoTipo.CHANGE,EventoSubTipo.CHANGED,sTipo,this.formapagopuntoventa,new Object(),this.formapagopuntoventaParameterGeneral,this.formapagopuntoventaReturnGeneral);
				
				
				if(esUsoDesdeHijoLocal) {
					Long id=0L;
					
					generalEntityParameterGeneral.setEventoGlobalTipo(EventoGlobalTipo.FORM_HIJO_ACTUALIZAR);
					generalEntityParameterGeneral.setsDominio("Formulario");
					generalEntityParameterGeneral.setsDominioTipo(FormaPagoPuntoVenta.class.getName());
				
					if(this.jInternalFrameParent!=null) {
						this.jInternalFrameParent.setEventoParentGeneral(esUsoDesdeHijoLocal,"Formulario",FormaPagoPuntoVenta.class.getName(),sTipo,"TEXTFIELD",esControlTabla,conIrServidorAplicacionParent,
							id,jComboBoxGenerico, EventoGlobalTipo.FORM_HIJO_ACTUALIZAR,ControlTipo.COMBOBOX,EventoTipo.CHANGE,EventoSubTipo.CHANGED,arrClasses,
							evt,generalEntityParameterGeneral,null);
					}
				}			
			}
			
  		} catch(Exception e) {
  			FuncionesSwing.manageException2(this, e,logger,FormaPagoPuntoVentaConstantesFunciones.CLASSNAME);
  		}
		
		*/
    }
	
	public void jComboBoxFocusGainedGeneral(String sTipo,java.awt.event.FocusEvent evt) { 	  
		try {
			//SELECCIONA FILA A OBJETO ACTUAL			
			this.seleccionarFilaTablaFormaPagoPuntoVentaActual();
			
			//SELECCIONA FILA A OBJETO ANTERIOR
			Integer intSelectedRow = this.jTableDatosFormaPagoPuntoVenta.getSelectedRow();
					
			if(intSelectedRow!=null && intSelectedRow>-1) {
				//ARCHITECTURE
				if(Constantes.ISUSAEJBLOGICLAYER) {
					this.formapagopuntoventaAnterior =(FormaPagoPuntoVenta) this.formapagopuntoventaLogic.getFormaPagoPuntoVentas().toArray()[this.jTableDatosFormaPagoPuntoVenta.convertRowIndexToModel(intSelectedRow)];
				} else if(Constantes.ISUSAEJBREMOTE || Constantes.ISUSAEJBHOME ) {
					this.formapagopuntoventaAnterior =(FormaPagoPuntoVenta) this.formapagopuntoventas.toArray()[this.jTableDatosFormaPagoPuntoVenta.convertRowIndexToModel(intSelectedRow)];
				}
				//ARCHITECTURE
				
				//System.out.println(this.banco);
			}
			
		} catch(Exception e) {
  			FuncionesSwing.manageException2(this, e,logger,FormaPagoPuntoVentaConstantesFunciones.CLASSNAME);
  		}
    }		
	
	public void tableValueChangedGeneral(String sTipo,ListSelectionEvent evt) { 	  
		try {
			if(this.permiteManejarEventosControl()) {
				FormaPagoPuntoVentaBeanSwingJInternalFrameAdditional.procesarEventosVista(this.parametroGeneralUsuario,this.moduloActual,this.opcionActual,this.usuarioActual,this,FuncionTipo.BEFORE,ControlTipo.TABLE,EventoTipo.CHANGE,EventoSubTipo.CHANGED,sTipo,this.formapagopuntoventa,new Object(),this.formapagopuntoventaParameterGeneral,this.formapagopuntoventaReturnGeneral);
				
				if(sTipo.equals("TableDatosSeleccionarFormaPagoPuntoVenta")) {
					//BYDAN_DESHABILITADO
					//try {jTableDatosFormaPagoPuntoVentaListSelectionListener(e);}catch(Exception e1){e1.printStackTrace();}
					
					//SOLO CUANDO MOUSE ES SOLTADO
					if (!evt.getValueIsAdjusting()) {
						//SELECCIONA FILA A OBJETO ACTUAL
						Integer intSelectedRow = this.jTableDatosFormaPagoPuntoVenta.getSelectedRow();
						
						if(intSelectedRow!=null && intSelectedRow>-1) {
							//ARCHITECTURE
							if(Constantes.ISUSAEJBLOGICLAYER) {
								this.formapagopuntoventa =(FormaPagoPuntoVenta) this.formapagopuntoventaLogic.getFormaPagoPuntoVentas().toArray()[this.jTableDatosFormaPagoPuntoVenta.convertRowIndexToModel(intSelectedRow)];
							} else if(Constantes.ISUSAEJBREMOTE || Constantes.ISUSAEJBHOME ) {
								this.formapagopuntoventa =(FormaPagoPuntoVenta) this.formapagopuntoventas.toArray()[this.jTableDatosFormaPagoPuntoVenta.convertRowIndexToModel(intSelectedRow)];
							}
							//ARCHITECTURE
							
							//System.out.println(this.formapagopuntoventa);
						}
					}
					
				} else if(sTipo.equals("jButtonCancelarFormaPagoPuntoVenta")) {
				
				}
				
				FormaPagoPuntoVentaBeanSwingJInternalFrameAdditional.procesarEventosVista(this.parametroGeneralUsuario,this.moduloActual,this.opcionActual,this.usuarioActual,this,FuncionTipo.AFTER,ControlTipo.TABLE,EventoTipo.CHANGE,EventoSubTipo.CHANGED,sTipo,this.formapagopuntoventa,new Object(),this.formapagopuntoventaParameterGeneral,this.formapagopuntoventaReturnGeneral);
			}
			
  		} catch(Exception e) {
  			FuncionesSwing.manageException2(this, e,logger,FormaPagoPuntoVentaConstantesFunciones.CLASSNAME);
  		}
    }
	
	public void tableMouseAdapterGeneral(String sTipo,MouseEvent evt) { 	  
		try {
			FormaPagoPuntoVentaBeanSwingJInternalFrameAdditional.procesarEventosVista(this.parametroGeneralUsuario,this.moduloActual,this.opcionActual,this.usuarioActual,this,FuncionTipo.BEFORE,ControlTipo.TABLE,EventoTipo.MOUSE,EventoSubTipo.CLICKED,sTipo,this.formapagopuntoventa,new Object(),this.formapagopuntoventaParameterGeneral,this.formapagopuntoventaReturnGeneral);
			
			if(sTipo.equals("DatosSeleccionarFormaPagoPuntoVenta")) {
				if (evt.getClickCount() == 2) {
					jButtonIdActionPerformed(null,jTableDatosFormaPagoPuntoVenta.getSelectedRow(),false,false);
				}	
			} else if(sTipo.equals("jButtonCancelarFormaPagoPuntoVenta")) {
			
			}
			
			FormaPagoPuntoVentaBeanSwingJInternalFrameAdditional.procesarEventosVista(this.parametroGeneralUsuario,this.moduloActual,this.opcionActual,this.usuarioActual,this,FuncionTipo.AFTER,ControlTipo.TABLE,EventoTipo.MOUSE,EventoSubTipo.CLICKED,sTipo,this.formapagopuntoventa,new Object(),this.formapagopuntoventaParameterGeneral,this.formapagopuntoventaReturnGeneral);
  		} catch(Exception e) {
  			FuncionesSwing.manageException2(this, e,logger,FormaPagoPuntoVentaConstantesFunciones.CLASSNAME);
  		}
    }
	
	;
	
	public void jButtonActionPerformedTecladoGeneral(String sTipo,ActionEvent evt) { 	  
		try {
			this.startProcessFormaPagoPuntoVenta();
			
			FormaPagoPuntoVentaBeanSwingJInternalFrameAdditional.procesarEventosVista(this.parametroGeneralUsuario,this.moduloActual,this.opcionActual,this.usuarioActual,this,FuncionTipo.BEFORE,ControlTipo.KEY,EventoTipo.CLIC,EventoSubTipo.CLICKED,sTipo,this.formapagopuntoventa,new Object(),this.formapagopuntoventaParameterGeneral,this.formapagopuntoventaReturnGeneral);
			
			if(sTipo.equals("NuevoFormaPagoPuntoVenta")) {
				jButtonNuevoFormaPagoPuntoVentaActionPerformed(evt,false);
				
			} else if(sTipo.equals("DuplicarFormaPagoPuntoVenta")) {
				jButtonDuplicarFormaPagoPuntoVentaActionPerformed(evt,false);
				
			} else if(sTipo.equals("CopiarFormaPagoPuntoVenta")) {
				jButtonCopiarFormaPagoPuntoVentaActionPerformed(evt);
				
			} else if(sTipo.equals("VerFormFormaPagoPuntoVenta")) {
				jButtonVerFormFormaPagoPuntoVentaActionPerformed(evt);
				
			} else if(sTipo.equals("NuevoRelacionesFormaPagoPuntoVenta")) {
				jButtonNuevoFormaPagoPuntoVentaActionPerformed(evt,true);
				
			} else if(sTipo.equals("ModificarFormaPagoPuntoVenta")) {
				jButtonModificarFormaPagoPuntoVentaActionPerformed(evt);
				
			} else if(sTipo.equals("ActualizarFormaPagoPuntoVenta")) {
				jButtonActualizarFormaPagoPuntoVentaActionPerformed(evt);
				
			} else if(sTipo.equals("EliminarFormaPagoPuntoVenta")) {
				jButtonEliminarFormaPagoPuntoVentaActionPerformed(evt);
				
			} else if(sTipo.equals("GuardarCambiosTablaFormaPagoPuntoVenta")) {
				jButtonGuardarCambiosFormaPagoPuntoVentaActionPerformed(evt);
				
			} else if(sTipo.equals("CancelarFormaPagoPuntoVenta")) {
				jButtonCancelarFormaPagoPuntoVentaActionPerformed(evt);
				
			} else if(sTipo.equals("CerrarFormaPagoPuntoVenta")) {
				jButtonCerrarFormaPagoPuntoVentaActionPerformed(evt);
				
			} else if(sTipo.equals("GuardarCambiosFormaPagoPuntoVenta")) {
				jButtonGuardarCambiosFormaPagoPuntoVentaActionPerformed(evt);
			
			} else if(sTipo.equals("NuevoGuardarCambiosFormaPagoPuntoVenta")) {
				jButtonNuevoGuardarCambiosFormaPagoPuntoVentaActionPerformed(evt);
			
			} else if(sTipo.equals("AbrirOrderByFormaPagoPuntoVenta")) {
				jButtonAbrirOrderByFormaPagoPuntoVentaActionPerformed(evt);
			
			} else if(sTipo.equals("RecargarInformacionFormaPagoPuntoVenta")) {
				jButtonRecargarInformacionFormaPagoPuntoVentaActionPerformed(evt);
			
			} else if(sTipo.equals("AnterioresFormaPagoPuntoVenta")) {
				jButtonAnterioresFormaPagoPuntoVentaActionPerformed(evt);			
			
			}  else if(sTipo.equals("SiguientesFormaPagoPuntoVenta")) {
				jButtonSiguientesFormaPagoPuntoVentaActionPerformed(evt);			
			} 
			
			
			//BUSQUEDA GENERAL CAMPO
			else if(sTipo.equals("idFormaPagoPuntoVentaBusqueda")) {
				this.jButtonidFormaPagoPuntoVentaBusquedaActionPerformed(evt);
			}
			//ACTUALIZAR CAMPO
			else if(sTipo.equals("id_empresaFormaPagoPuntoVentaUpdate")) {
				this.jButtonid_empresaFormaPagoPuntoVentaUpdateActionPerformed(evt);
			}
			//BUSQUEDA GENERAL CAMPO
			else if(sTipo.equals("id_empresaFormaPagoPuntoVentaBusqueda")) {
				this.jButtonid_empresaFormaPagoPuntoVentaBusquedaActionPerformed(evt);
			}
			//ACTUALIZAR CAMPO
			else if(sTipo.equals("id_sucursalFormaPagoPuntoVentaUpdate")) {
				this.jButtonid_sucursalFormaPagoPuntoVentaUpdateActionPerformed(evt);
			}
			//BUSQUEDA GENERAL CAMPO
			else if(sTipo.equals("id_sucursalFormaPagoPuntoVentaBusqueda")) {
				this.jButtonid_sucursalFormaPagoPuntoVentaBusquedaActionPerformed(evt);
			}
			//ACTUALIZAR CAMPO
			else if(sTipo.equals("id_ejercicioFormaPagoPuntoVentaUpdate")) {
				this.jButtonid_ejercicioFormaPagoPuntoVentaUpdateActionPerformed(evt);
			}
			//BUSQUEDA GENERAL CAMPO
			else if(sTipo.equals("id_ejercicioFormaPagoPuntoVentaBusqueda")) {
				this.jButtonid_ejercicioFormaPagoPuntoVentaBusquedaActionPerformed(evt);
			}
			//ACTUALIZAR CAMPO
			else if(sTipo.equals("id_periodoFormaPagoPuntoVentaUpdate")) {
				this.jButtonid_periodoFormaPagoPuntoVentaUpdateActionPerformed(evt);
			}
			//BUSQUEDA GENERAL CAMPO
			else if(sTipo.equals("id_periodoFormaPagoPuntoVentaBusqueda")) {
				this.jButtonid_periodoFormaPagoPuntoVentaBusquedaActionPerformed(evt);
			}
			//ACTUALIZAR CAMPO
			else if(sTipo.equals("id_factura_punto_ventaFormaPagoPuntoVentaUpdate")) {
				this.jButtonid_factura_punto_ventaFormaPagoPuntoVentaUpdateActionPerformed(evt);
			}
			//BUSQUEDA GENERAL CAMPO
			else if(sTipo.equals("id_factura_punto_ventaFormaPagoPuntoVentaBusqueda")) {
				this.jButtonid_factura_punto_ventaFormaPagoPuntoVentaBusquedaActionPerformed(evt);
			}
			//ACTUALIZAR CAMPO
			else if(sTipo.equals("id_tipo_forma_pagoFormaPagoPuntoVentaUpdate")) {
				this.jButtonid_tipo_forma_pagoFormaPagoPuntoVentaUpdateActionPerformed(evt);
			}
			//BUSQUEDA GENERAL CAMPO
			else if(sTipo.equals("id_tipo_forma_pagoFormaPagoPuntoVentaBusqueda")) {
				this.jButtonid_tipo_forma_pagoFormaPagoPuntoVentaBusquedaActionPerformed(evt);
			}
			//BUSQUEDA GENERAL CAMPO
			else if(sTipo.equals("porcentajeFormaPagoPuntoVentaBusqueda")) {
				this.jButtonporcentajeFormaPagoPuntoVentaBusquedaActionPerformed(evt);
			}
			//BUSQUEDA GENERAL CAMPO
			else if(sTipo.equals("valorFormaPagoPuntoVentaBusqueda")) {
				this.jButtonvalorFormaPagoPuntoVentaBusquedaActionPerformed(evt);
			}
			//BUSQUEDA GENERAL CAMPO
			else if(sTipo.equals("fechaFormaPagoPuntoVentaBusqueda")) {
				this.jButtonfechaFormaPagoPuntoVentaBusquedaActionPerformed(evt);
			}
			//BUSQUEDA GENERAL CAMPO
			else if(sTipo.equals("descripcionFormaPagoPuntoVentaBusqueda")) {
				this.jButtondescripcionFormaPagoPuntoVentaBusquedaActionPerformed(evt);
			}
			//BUSQUEDA GENERAL CAMPO
			else if(sTipo.equals("fecha_inicioFormaPagoPuntoVentaBusqueda")) {
				this.jButtonfecha_inicioFormaPagoPuntoVentaBusquedaActionPerformed(evt);
			}
			//BUSQUEDA GENERAL CAMPO
			else if(sTipo.equals("numero_dias_plazoFormaPagoPuntoVentaBusqueda")) {
				this.jButtonnumero_dias_plazoFormaPagoPuntoVentaBusquedaActionPerformed(evt);
			}
			//BUSQUEDA GENERAL CAMPO
			else if(sTipo.equals("fecha_finFormaPagoPuntoVentaBusqueda")) {
				this.jButtonfecha_finFormaPagoPuntoVentaBusquedaActionPerformed(evt);
			}
			//ACTUALIZAR CAMPO
			else if(sTipo.equals("id_bancoFormaPagoPuntoVentaUpdate")) {
				this.jButtonid_bancoFormaPagoPuntoVentaUpdateActionPerformed(evt);
			}
			//BUSQUEDA GENERAL CAMPO
			else if(sTipo.equals("id_bancoFormaPagoPuntoVentaBusqueda")) {
				this.jButtonid_bancoFormaPagoPuntoVentaBusquedaActionPerformed(evt);
			}
			//ACTUALIZAR CAMPO
			else if(sTipo.equals("id_cuenta_banco_pun_venFormaPagoPuntoVentaUpdate")) {
				this.jButtonid_cuenta_banco_pun_venFormaPagoPuntoVentaUpdateActionPerformed(evt);
			}
			//BUSQUEDA GENERAL CAMPO
			else if(sTipo.equals("id_cuenta_banco_pun_venFormaPagoPuntoVentaBusqueda")) {
				this.jButtonid_cuenta_banco_pun_venFormaPagoPuntoVentaBusquedaActionPerformed(evt);
			}
			//ACTUALIZAR CAMPO
			else if(sTipo.equals("id_tipo_riesgo_chequeFormaPagoPuntoVentaUpdate")) {
				this.jButtonid_tipo_riesgo_chequeFormaPagoPuntoVentaUpdateActionPerformed(evt);
			}
			//BUSQUEDA GENERAL CAMPO
			else if(sTipo.equals("id_tipo_riesgo_chequeFormaPagoPuntoVentaBusqueda")) {
				this.jButtonid_tipo_riesgo_chequeFormaPagoPuntoVentaBusquedaActionPerformed(evt);
			}
			//BUSQUEDA GENERAL CAMPO
			else if(sTipo.equals("numero_cuentaFormaPagoPuntoVentaBusqueda")) {
				this.jButtonnumero_cuentaFormaPagoPuntoVentaBusquedaActionPerformed(evt);
			}
			//BUSQUEDA GENERAL CAMPO
			else if(sTipo.equals("numero_chequeFormaPagoPuntoVentaBusqueda")) {
				this.jButtonnumero_chequeFormaPagoPuntoVentaBusquedaActionPerformed(evt);
			}
			//BUSQUEDA GENERAL CAMPO
			else if(sTipo.equals("giradorFormaPagoPuntoVentaBusqueda")) {
				this.jButtongiradorFormaPagoPuntoVentaBusquedaActionPerformed(evt);
			}
			//ACTUALIZAR CAMPO
			else if(sTipo.equals("id_banco_tarjetaFormaPagoPuntoVentaUpdate")) {
				this.jButtonid_banco_tarjetaFormaPagoPuntoVentaUpdateActionPerformed(evt);
			}
			//BUSQUEDA GENERAL CAMPO
			else if(sTipo.equals("id_banco_tarjetaFormaPagoPuntoVentaBusqueda")) {
				this.jButtonid_banco_tarjetaFormaPagoPuntoVentaBusquedaActionPerformed(evt);
			}
			//ACTUALIZAR CAMPO
			else if(sTipo.equals("id_tarjeta_creditoFormaPagoPuntoVentaUpdate")) {
				this.jButtonid_tarjeta_creditoFormaPagoPuntoVentaUpdateActionPerformed(evt);
			}
			//BUSQUEDA GENERAL CAMPO
			else if(sTipo.equals("id_tarjeta_creditoFormaPagoPuntoVentaBusqueda")) {
				this.jButtonid_tarjeta_creditoFormaPagoPuntoVentaBusquedaActionPerformed(evt);
			}
			//ACTUALIZAR CAMPO
			else if(sTipo.equals("id_tipo_interes_tarjetaFormaPagoPuntoVentaUpdate")) {
				this.jButtonid_tipo_interes_tarjetaFormaPagoPuntoVentaUpdateActionPerformed(evt);
			}
			//BUSQUEDA GENERAL CAMPO
			else if(sTipo.equals("id_tipo_interes_tarjetaFormaPagoPuntoVentaBusqueda")) {
				this.jButtonid_tipo_interes_tarjetaFormaPagoPuntoVentaBusquedaActionPerformed(evt);
			}
			//ACTUALIZAR CAMPO
			else if(sTipo.equals("id_tipo_pago_tarjetaFormaPagoPuntoVentaUpdate")) {
				this.jButtonid_tipo_pago_tarjetaFormaPagoPuntoVentaUpdateActionPerformed(evt);
			}
			//BUSQUEDA GENERAL CAMPO
			else if(sTipo.equals("id_tipo_pago_tarjetaFormaPagoPuntoVentaBusqueda")) {
				this.jButtonid_tipo_pago_tarjetaFormaPagoPuntoVentaBusquedaActionPerformed(evt);
			}
			//ACTUALIZAR CAMPO
			else if(sTipo.equals("id_conexionFormaPagoPuntoVentaUpdate")) {
				this.jButtonid_conexionFormaPagoPuntoVentaUpdateActionPerformed(evt);
			}
			//BUSQUEDA GENERAL CAMPO
			else if(sTipo.equals("id_conexionFormaPagoPuntoVentaBusqueda")) {
				this.jButtonid_conexionFormaPagoPuntoVentaBusquedaActionPerformed(evt);
			}
			//ACTUALIZAR CAMPO
			else if(sTipo.equals("id_mesFormaPagoPuntoVentaUpdate")) {
				this.jButtonid_mesFormaPagoPuntoVentaUpdateActionPerformed(evt);
			}
			//BUSQUEDA GENERAL CAMPO
			else if(sTipo.equals("id_mesFormaPagoPuntoVentaBusqueda")) {
				this.jButtonid_mesFormaPagoPuntoVentaBusquedaActionPerformed(evt);
			}
			//BUSQUEDA GENERAL CAMPO
			else if(sTipo.equals("numeroFormaPagoPuntoVentaBusqueda")) {
				this.jButtonnumeroFormaPagoPuntoVentaBusquedaActionPerformed(evt);
			}
			//BUSQUEDA GENERAL CAMPO
			else if(sTipo.equals("tarjeta_habienteFormaPagoPuntoVentaBusqueda")) {
				this.jButtontarjeta_habienteFormaPagoPuntoVentaBusquedaActionPerformed(evt);
			}
			//BUSQUEDA GENERAL CAMPO
			else if(sTipo.equals("autorizacionFormaPagoPuntoVentaBusqueda")) {
				this.jButtonautorizacionFormaPagoPuntoVentaBusquedaActionPerformed(evt);
			}
			//BUSQUEDA GENERAL CAMPO
			else if(sTipo.equals("voucherFormaPagoPuntoVentaBusqueda")) {
				this.jButtonvoucherFormaPagoPuntoVentaBusquedaActionPerformed(evt);
			}
			//BUSQUEDA GENERAL CAMPO
			else if(sTipo.equals("loteFormaPagoPuntoVentaBusqueda")) {
				this.jButtonloteFormaPagoPuntoVentaBusquedaActionPerformed(evt);
			}
			//BUSQUEDA GENERAL CAMPO
			else if(sTipo.equals("cuotaFormaPagoPuntoVentaBusqueda")) {
				this.jButtoncuotaFormaPagoPuntoVentaBusquedaActionPerformed(evt);
			}
			//BUSQUEDA GENERAL CAMPO
			else if(sTipo.equals("valor_retencionFormaPagoPuntoVentaBusqueda")) {
				this.jButtonvalor_retencionFormaPagoPuntoVentaBusquedaActionPerformed(evt);
			}
			//BUSQUEDA GENERAL CAMPO
			else if(sTipo.equals("valor_comisionFormaPagoPuntoVentaBusqueda")) {
				this.jButtonvalor_comisionFormaPagoPuntoVentaBusquedaActionPerformed(evt);
			}
			//BUSQUEDA GENERAL CAMPO
			else if(sTipo.equals("valor_calculadoFormaPagoPuntoVentaBusqueda")) {
				this.jButtonvalor_calculadoFormaPagoPuntoVentaBusquedaActionPerformed(evt);
			}
			//BUSQUEDA GENERAL CAMPO
			else if(sTipo.equals("valor_canceladoFormaPagoPuntoVentaBusqueda")) {
				this.jButtonvalor_canceladoFormaPagoPuntoVentaBusquedaActionPerformed(evt);
			}
			//BUSQUEDA GENERAL CAMPO
			else if(sTipo.equals("valor_difiereFormaPagoPuntoVentaBusqueda")) {
				this.jButtonvalor_difiereFormaPagoPuntoVentaBusquedaActionPerformed(evt);
			}
			//BUSQUEDA GENERAL CAMPO
			else if(sTipo.equals("numero_retencionFormaPagoPuntoVentaBusqueda")) {
				this.jButtonnumero_retencionFormaPagoPuntoVentaBusquedaActionPerformed(evt);
			}
			//BUSQUEDA GENERAL CAMPO
			else if(sTipo.equals("numero_liquidacionFormaPagoPuntoVentaBusqueda")) {
				this.jButtonnumero_liquidacionFormaPagoPuntoVentaBusquedaActionPerformed(evt);
			}
			//ACTUALIZAR CAMPO
			else if(sTipo.equals("id_anioFormaPagoPuntoVentaUpdate")) {
				this.jButtonid_anioFormaPagoPuntoVentaUpdateActionPerformed(evt);
			}
			//BUSQUEDA GENERAL CAMPO
			else if(sTipo.equals("id_anioFormaPagoPuntoVentaBusqueda")) {
				this.jButtonid_anioFormaPagoPuntoVentaBusquedaActionPerformed(evt);
			}
			//BUSQUEDA CAMPO
			else if(sTipo.equals("id_cuenta_contableFormaPagoPuntoVenta")) {
				this.jButtonid_cuenta_contableFormaPagoPuntoVentaActionPerformed(evt);
			}
			//BUSQUEDA ARBOL CAMPO
			else if(sTipo.equals("id_cuenta_contableFormaPagoPuntoVentaArbol")) {
				this.abrirFrameTreeCuentaContable("BUSQUEDA_FK");
			}
			//ACTUALIZAR CAMPO
			else if(sTipo.equals("id_cuenta_contableFormaPagoPuntoVentaUpdate")) {
				this.jButtonid_cuenta_contableFormaPagoPuntoVentaUpdateActionPerformed(evt);
			}
			//BUSQUEDA GENERAL CAMPO
			else if(sTipo.equals("id_cuenta_contableFormaPagoPuntoVentaBusqueda")) {
				this.jButtonid_cuenta_contableFormaPagoPuntoVentaBusquedaActionPerformed(evt);
			}
			//BUSQUEDA CAMPO
			else if(sTipo.equals("id_asiento_contableFormaPagoPuntoVenta")) {
				this.jButtonid_asiento_contableFormaPagoPuntoVentaActionPerformed(evt);
			}
			//ACTUALIZAR CAMPO
			else if(sTipo.equals("id_asiento_contableFormaPagoPuntoVentaUpdate")) {
				this.jButtonid_asiento_contableFormaPagoPuntoVentaUpdateActionPerformed(evt);
			}
			//BUSQUEDA GENERAL CAMPO
			else if(sTipo.equals("id_asiento_contableFormaPagoPuntoVentaBusqueda")) {
				this.jButtonid_asiento_contableFormaPagoPuntoVentaBusquedaActionPerformed(evt);
			}
			
			FormaPagoPuntoVentaBeanSwingJInternalFrameAdditional.procesarEventosVista(this.parametroGeneralUsuario,this.moduloActual,this.opcionActual,this.usuarioActual,this,FuncionTipo.AFTER,ControlTipo.KEY,EventoTipo.CLIC,EventoSubTipo.CLICKED,sTipo,this.formapagopuntoventa,new Object(),this.formapagopuntoventaParameterGeneral,this.formapagopuntoventaReturnGeneral);
  		} catch(Exception e) {
  			FuncionesSwing.manageException2(this, e,logger,FormaPagoPuntoVentaConstantesFunciones.CLASSNAME);
			
  		}  finally {
      		this.finishProcessFormaPagoPuntoVenta();
      	}
    }
	
	public void internalFrameClosingInternalFrameGeneral(String sTipo,InternalFrameEvent evt) { 	  
		try {
			FormaPagoPuntoVentaBeanSwingJInternalFrameAdditional.procesarEventosVista(this.parametroGeneralUsuario,this.moduloActual,this.opcionActual,this.usuarioActual,this,FuncionTipo.BEFORE,ControlTipo.WINDOW,EventoTipo.CLIC,EventoSubTipo.CLOSING,sTipo,this.formapagopuntoventa,new Object(),this.formapagopuntoventaParameterGeneral,this.formapagopuntoventaReturnGeneral);
			
			if(sTipo.equals("CloseInternalFrameFormaPagoPuntoVenta")) {
				closingInternalFrameFormaPagoPuntoVenta();
				
			} else if(sTipo.equals("jButtonCancelarFormaPagoPuntoVenta")) {
				JInternalFrameBase jInternalFrameDetalleFormFormaPagoPuntoVenta = (JInternalFrameBase)evt.getSource();
	            	
	            FormaPagoPuntoVentaBeanSwingJInternalFrame jInternalFrameParent=(FormaPagoPuntoVentaBeanSwingJInternalFrame)jInternalFrameDetalleFormFormaPagoPuntoVenta.getjInternalFrameParent();
	            
				jInternalFrameParent.jButtonCancelarFormaPagoPuntoVentaActionPerformed(null);
			}
			
			FormaPagoPuntoVentaBeanSwingJInternalFrameAdditional.procesarEventosVista(this.parametroGeneralUsuario,this.moduloActual,this.opcionActual,this.usuarioActual,this,FuncionTipo.AFTER,ControlTipo.WINDOW,EventoTipo.CLIC,EventoSubTipo.CLOSING,sTipo,this.formapagopuntoventa,new Object(),this.formapagopuntoventaParameterGeneral,this.formapagopuntoventaReturnGeneral);
  		} catch(Exception e) {
  			FuncionesSwing.manageException2(this, e,logger,FormaPagoPuntoVentaConstantesFunciones.CLASSNAME);
  		}
    }
	
	public void recargarFormFormaPagoPuntoVenta(String sTipo,String sDominio,EventoGlobalTipo eventoGlobalTipo,ControlTipo controlTipo,EventoTipo eventoTipo,EventoSubTipo eventoSubTipo,String sTipoGeneral,ArrayList<Classe> classes,Boolean conIrServidorAplicacion) throws Exception {
		this.recargarFormFormaPagoPuntoVenta(sTipo,sDominio,eventoGlobalTipo,controlTipo,eventoTipo,eventoSubTipo,sTipoGeneral,classes,conIrServidorAplicacion,false);
	}
	
	public void recargarFormFormaPagoPuntoVenta(String sTipo,String sDominio,EventoGlobalTipo eventoGlobalTipo,ControlTipo controlTipo,EventoTipo eventoTipo,EventoSubTipo eventoSubTipo,String sTipoGeneral,ArrayList<Classe> classes,Boolean conIrServidorAplicacion,Boolean esControlTabla) throws Exception {
		if(this.permiteRecargarForm && this.permiteMantenimiento(this.formapagopuntoventa)) {
			if(!esControlTabla) {
				if(FormaPagoPuntoVentaJInternalFrame.ISBINDING_MANUAL_TABLA) {			
					this.setVariablesFormularioToObjetoActualFormaPagoPuntoVenta(this.formapagopuntoventa,true,false);
					this.setVariablesFormularioToObjetoActualForeignKeysFormaPagoPuntoVenta(this.formapagopuntoventa);			
				}
				
				if(this.formapagopuntoventaSessionBean.getEstaModoGuardarRelaciones()) {
					this.setVariablesFormularioRelacionesToObjetoActualFormaPagoPuntoVenta(this.formapagopuntoventa,classes);				
				}
			
				if(conIrServidorAplicacion) {
					//ARCHITECTURE
					if(Constantes.ISUSAEJBLOGICLAYER) {						
						this.formapagopuntoventaReturnGeneral=formapagopuntoventaLogic.procesarEventosFormaPagoPuntoVentasWithConnection(this.parametroGeneralUsuario,this.moduloActual,this.opcionActual,this.usuarioActual,eventoGlobalTipo,controlTipo,eventoTipo,eventoSubTipo,sTipo,this.formapagopuntoventaLogic.getFormaPagoPuntoVentas(),this.formapagopuntoventa,this.formapagopuntoventaParameterGeneral,this.isEsNuevoFormaPagoPuntoVenta,classes);//this.formapagopuntoventaLogic.getFormaPagoPuntoVenta()//sTipoGeneral
									
					} else if(Constantes.ISUSAEJBREMOTE) {
									
					} else if(Constantes.ISUSAEJBHOME) {
					}
					//ARCHITECTURE
					
					//ACTUALIZA VARIABLES DEFECTO DESDE LOGIC A RETURN GENERAL Y LUEGO A BEAN
					//this.setVariablesObjetoReturnGeneralToBeanFormaPagoPuntoVenta(this.formapagopuntoventaReturnGeneral,this.formapagopuntoventaBean,false);
						
					//ACTUALIZA VARIABLES RELACIONES DEFECTO DESDE LOGIC A RETURN GENERAL Y LUEGO A BEAN
					if(this.formapagopuntoventaSessionBean.getEstaModoGuardarRelaciones()) {
						//this.setVariablesRelacionesObjetoReturnGeneralToBeanFormaPagoPuntoVenta(classes,this.formapagopuntoventaReturnGeneral,this.formapagopuntoventaBean,false);
					}
						
					if(this.formapagopuntoventaReturnGeneral.getConRecargarPropiedades()) {
						//INICIALIZA VARIABLES COMBOS NORMALES (FK)
						this.setVariablesObjetoActualToFormularioForeignKeyFormaPagoPuntoVenta(this.formapagopuntoventaReturnGeneral.getFormaPagoPuntoVenta());
							
						//INICIALIZA VARIABLES NORMALES A FORMULARIO(SIN FK)
						this.setVariablesObjetoActualToFormularioFormaPagoPuntoVenta(this.formapagopuntoventaReturnGeneral.getFormaPagoPuntoVenta());	
					}
						
					if(this.formapagopuntoventaReturnGeneral.getConRecargarRelaciones()) {
						//INICIALIZA VARIABLES RELACIONES A FORMULARIO
						this.setVariablesRelacionesObjetoActualToFormularioFormaPagoPuntoVenta(this.formapagopuntoventaReturnGeneral.getFormaPagoPuntoVenta(),classes);//this.formapagopuntoventaBean);	
					}									
					
				} else {				
					//INICIALIZA VARIABLES RELACIONES A FORMULARIO
					this.setVariablesRelacionesObjetoActualToFormularioFormaPagoPuntoVenta(this.formapagopuntoventa,classes);//this.formapagopuntoventaBean);									
				}
			
				if(FormaPagoPuntoVentaJInternalFrame.ISBINDING_MANUAL_TABLA) {
					this.setVariablesFormularioToObjetoActualFormaPagoPuntoVenta(this.formapagopuntoventa,true,false);
					this.setVariablesFormularioToObjetoActualForeignKeysFormaPagoPuntoVenta(this.formapagopuntoventa);				
				}
				
			} else {
				
				if(((controlTipo.equals(ControlTipo.TEXTBOX) || controlTipo.equals(ControlTipo.DATE)
					|| controlTipo.equals(ControlTipo.TEXTAREA) || controlTipo.equals(ControlTipo.COMBOBOX)
					)				
					&& eventoTipo.equals(EventoTipo.CHANGE)
					)
					
					|| (controlTipo.equals(ControlTipo.CHECKBOX) && eventoTipo.equals(EventoTipo.CLIC))
					
				) { // && sTipoGeneral.equals("TEXTBOX")
					
					if(this.formapagopuntoventaAnterior!=null) {
						this.formapagopuntoventa=this.formapagopuntoventaAnterior;
					}
				}
				
				if(conIrServidorAplicacion) {
					//ARCHITECTURE
					if(Constantes.ISUSAEJBLOGICLAYER) {						
						this.formapagopuntoventaReturnGeneral=formapagopuntoventaLogic.procesarEventosFormaPagoPuntoVentasWithConnection(this.parametroGeneralUsuario,this.moduloActual,this.opcionActual,this.usuarioActual,eventoGlobalTipo,controlTipo,eventoTipo,eventoSubTipo,sTipo,this.formapagopuntoventaLogic.getFormaPagoPuntoVentas(),this.formapagopuntoventa,this.formapagopuntoventaParameterGeneral,this.isEsNuevoFormaPagoPuntoVenta,classes);//this.formapagopuntoventaLogic.getFormaPagoPuntoVenta()//sTipoGeneral
									
					} else if(Constantes.ISUSAEJBREMOTE) {
									
					} else if(Constantes.ISUSAEJBHOME) {
					}
					//ARCHITECTURE
				}
				
				//ARCHITECTURE
				if(Constantes.ISUSAEJBLOGICLAYER) {
					//NO ENTENDIBLE PORQUE PONER
					//if(this.formapagopuntoventaSessionBean.getEstaModoGuardarRelaciones() 
					//	|| this.formapagopuntoventaSessionBean.getEsGuardarRelacionado())	{
						actualizarLista(this.formapagopuntoventaReturnGeneral.getFormaPagoPuntoVenta(),formapagopuntoventaLogic.getFormaPagoPuntoVentas());
					//}
				} else if(Constantes.ISUSAEJBREMOTE||Constantes.ISUSAEJBHOME) {
					actualizarLista(this.formapagopuntoventaReturnGeneral.getFormaPagoPuntoVenta(),this.formapagopuntoventas);
				}
				//ARCHITECTURE
				
				//this.jTableDatosFormaPagoPuntoVenta.repaint();
				
				//((AbstractTableModel) this.jTableDatosFormaPagoPuntoVenta.getModel()).fireTableDataChanged();
				
				this.actualizarVisualTableDatosFormaPagoPuntoVenta();
			}
		}
	}
	
	public void actualizarVisualTableDatosFormaPagoPuntoVenta() throws Exception {
		
		FormaPagoPuntoVentaModel formapagopuntoventaModel=(FormaPagoPuntoVentaModel)this.jTableDatosFormaPagoPuntoVenta.getModel();
		
		if(Constantes.ISUSAEJBLOGICLAYER) {
			formapagopuntoventaModel.formapagopuntoventas=this.formapagopuntoventaLogic.getFormaPagoPuntoVentas();
		
		} else if(Constantes.ISUSAEJBREMOTE || Constantes.ISUSAEJBHOME ) {
			formapagopuntoventaModel.formapagopuntoventas=this.formapagopuntoventas;
		}
		
		
		((FormaPagoPuntoVentaModel) this.jTableDatosFormaPagoPuntoVenta.getModel()).fireTableDataChanged();
	}
	
	public void actualizarVisualTableDatosEventosVistaFormaPagoPuntoVenta() throws Exception {
		
		//ARCHITECTURE
		if(Constantes.ISUSAEJBLOGICLAYER) {
			this.actualizarLista(this.getformapagopuntoventaAnterior(),this.formapagopuntoventaLogic.getFormaPagoPuntoVentas());
					
		} else if(Constantes.ISUSAEJBREMOTE||Constantes.ISUSAEJBHOME) {
			this.actualizarLista(this.getformapagopuntoventaAnterior(),this.formapagopuntoventas);
		}
		//ARCHITECTURE
						
		this.actualizarFilaTotales();
						
		this.actualizarVisualTableDatosFormaPagoPuntoVenta();	
	}
	
	public void setVariablesRelacionesObjetoActualToFormularioFormaPagoPuntoVenta(FormaPagoPuntoVenta formapagopuntoventa,ArrayList<Classe> classes) throws Exception { 
		try {
			
			
		} catch(Exception e) {
			FuncionesSwing.manageException(this, e,logger,FormaPagoPuntoVentaConstantesFunciones.CLASSNAME);
		}
	}
	
	public void setEventoParentGeneral(Boolean esUsoDesdeHijo,String sDominio,String sDominioTipo,String sTipo,String sTipoGeneral,Boolean esControlTabla,Boolean conIrServidorAplicacion,
						Long id,Component control, EventoGlobalTipo eventoGlobalTipo,ControlTipo controlTipo,EventoTipo eventoTipo,EventoSubTipo eventoSubTipo,ArrayList<String> arrClasses,
						Object evt,GeneralEntityParameterReturnGeneral generalEntityParameterGeneral,Object otro) { 	  
		try {
			
			if(this.permiteManejarEventosControl()) {
				
				//BASE COPIADO DESDE TEXTFIELLOSTFOCUS
				
				//EventoGlobalTipo.FORM_HIJO_ACTUALIZAR;
				Boolean conTodasRelaciones=false;
				
				this.esUsoDesdeHijo=esUsoDesdeHijo;
										
				FormaPagoPuntoVentaBeanSwingJInternalFrameAdditional.procesarEventosVista(this.parametroGeneralUsuario,this.moduloActual,this.opcionActual,this.usuarioActual,this,FuncionTipo.BEFORE,controlTipo,eventoTipo,eventoSubTipo,sTipo,this.formapagopuntoventa,new Object(),generalEntityParameterGeneral,this.formapagopuntoventaReturnGeneral);
				
				ArrayList<Classe> classes=new ArrayList<Classe>();
				
				for(String sClasse:arrClasses) {
					if(sClasse.equals("TODOS")) {
						conTodasRelaciones=true;
						break;
					}
				}
				
				if(this.formapagopuntoventaSessionBean.getConGuardarRelaciones()) {
					if(conTodasRelaciones) {
						classes=FormaPagoPuntoVentaConstantesFunciones.getClassesRelationshipsOfFormaPagoPuntoVenta(new ArrayList<Classe>(),DeepLoadType.NONE);
					} else {
						classes=FormaPagoPuntoVentaConstantesFunciones.getClassesRelationshipsFromStringsOfFormaPagoPuntoVenta(arrClasses,DeepLoadType.NONE);
					}
				}
	
				this.classesActual=new ArrayList<Classe>();
				this.classesActual.addAll(classes);
	
				this.recargarFormFormaPagoPuntoVenta(sTipo,sDominio,eventoGlobalTipo,controlTipo,eventoTipo,eventoSubTipo,sTipoGeneral,classes,conIrServidorAplicacion,esControlTabla);
										
				FormaPagoPuntoVentaBeanSwingJInternalFrameAdditional.procesarEventosVista(this.parametroGeneralUsuario,this.moduloActual,this.opcionActual,this.usuarioActual,this,FuncionTipo.AFTER,controlTipo,eventoTipo,eventoSubTipo,sTipo,this.formapagopuntoventa,new Object(),generalEntityParameterGeneral,this.formapagopuntoventaReturnGeneral);
			}
			
		} catch(Exception e) {
  			FuncionesSwing.manageException2(this, e,logger,FormaPagoPuntoVentaConstantesFunciones.CLASSNAME);
  		}
    }
	
	/*
	public void setVariablesRelacionesObjetoBeanActualToFormularioFormaPagoPuntoVenta(FormaPagoPuntoVentaBean formapagopuntoventaBean) throws Exception { 
		try {
			
			
		} catch(Exception e) {
			FuncionesSwing.manageException(this, e,logger,FormaPagoPuntoVentaConstantesFunciones.CLASSNAME);
		}
	}
	*/
	
	/*
	public void setVariablesRelacionesObjetoReturnGeneralToBeanFormaPagoPuntoVenta(ArrayList<Classe> classes,FormaPagoPuntoVentaReturnGeneral formapagopuntoventaReturnGeneral,FormaPagoPuntoVentaBean formapagopuntoventaBean,Boolean conDefault) throws Exception {
		
	}
	*/
	
	public void setVariablesFormularioRelacionesToObjetoActualFormaPagoPuntoVenta(FormaPagoPuntoVenta formapagopuntoventa,ArrayList<Classe> classes) throws Exception {
		
	}
	
	public Boolean permiteManejarEventosControl() {
		Boolean permite=true;				
		
		if(this.estaModoNuevo || this.estaModoSeleccionar || this.estaModoEliminarGuardarCambios) {
			permite=false;
			
		} 
		
		//NO DEBE MEZCLARSE CONCEPTOS
		/*	
		if(!paraTabla && !this.permiteMantenimiento(this.formapagopuntoventa)) {
			System.out.println("ERROR:EL OBJETO ACTUAL NO PUEDE SER FILA TOTALES");
				
			//JOptionPane.showMessageDialog(this,"EL OBJETO ACTUAL NO PUEDE SER FILA TOTALES","EVENTO",JOptionPane.ERROR_MESSAGE);			
		}
		*/
		
		return permite;
	}
	
	public void inicializarFormDetalle() throws Exception {
		
		this.jInternalFrameDetalleFormFormaPagoPuntoVenta = new FormaPagoPuntoVentaDetalleFormJInternalFrame(jDesktopPane,this.formapagopuntoventaSessionBean.getConGuardarRelaciones(),this.formapagopuntoventaSessionBean.getEsGuardarRelacionado(),this.cargarRelaciones,usuarioActual,resumenUsuarioActual,moduloActual,opcionActual,parametroGeneralSg,parametroGeneralUsuario,paginaTipo);
		
		this.jDesktopPane.add(this.jInternalFrameDetalleFormFormaPagoPuntoVenta);
		this.jInternalFrameDetalleFormFormaPagoPuntoVenta.setVisible(false);
		this.jInternalFrameDetalleFormFormaPagoPuntoVenta.setSelected(false);						
		
		this.jInternalFrameDetalleFormFormaPagoPuntoVenta.setJInternalFrameParent(this);
		
		this.jInternalFrameDetalleFormFormaPagoPuntoVenta.formapagopuntoventaLogic=this.formapagopuntoventaLogic;
		
		this.cargarCombosFrameForeignKeyFormaPagoPuntoVenta("Formulario");
		
		this.inicializarActualizarBindingBotonesPermisosManualFormDetalleFormaPagoPuntoVenta();
		this.inicializarActualizarBindingtiposArchivosReportesAccionesManualFormDetalleFormaPagoPuntoVenta();
		
		this.initActionsFormDetalle();		
		
		this.initActionsCombosTodosForeignKeyFormaPagoPuntoVenta("Formulario");
		
		//TALVEZ conSetVariablesGlobales COMO if() 
		this.setVariablesGlobalesCombosForeignKeyFormaPagoPuntoVenta();
		
		this.cargarMenuRelaciones();
		
	}
	
	public void initActionsFormDetalle() {	
		
		this.jInternalFrameDetalleFormFormaPagoPuntoVenta.addInternalFrameListener(new InternalFrameInternalFrameAdapter(this,"jButtonCancelarFormaPagoPuntoVenta"));
		
		this.jInternalFrameDetalleFormFormaPagoPuntoVenta.jButtonModificarFormaPagoPuntoVenta.addActionListener(new ButtonActionListener(this,"ModificarFormaPagoPuntoVenta"));

		/*
		this.jInternalFrameDetalleFormFormaPagoPuntoVenta.jButtonModificarToolBarFormaPagoPuntoVenta.addActionListener(new ButtonActionListener(this,"ModificarToolBarFormaPagoPuntoVenta"));
					
		this.jInternalFrameDetalleFormFormaPagoPuntoVenta.jMenuItemModificarFormaPagoPuntoVenta.addActionListener(new ButtonActionListener(this,"MenuItemModificarFormaPagoPuntoVenta"));		
		
		*/
		
		this.jInternalFrameDetalleFormFormaPagoPuntoVenta.jButtonActualizarFormaPagoPuntoVenta.addActionListener (new ButtonActionListener(this,"ActualizarFormaPagoPuntoVenta"));
		
		/*
		this.jInternalFrameDetalleFormFormaPagoPuntoVenta.jButtonActualizarToolBarFormaPagoPuntoVenta.addActionListener(new ButtonActionListener(this,"ActualizarToolBarFormaPagoPuntoVenta"));
						
		this.jInternalFrameDetalleFormFormaPagoPuntoVenta.jMenuItemActualizarFormaPagoPuntoVenta.addActionListener (new ButtonActionListener(this,"MenuItemActualizarFormaPagoPuntoVenta"));		
		
		*/
		
		this.jInternalFrameDetalleFormFormaPagoPuntoVenta.jButtonEliminarFormaPagoPuntoVenta.addActionListener (new ButtonActionListener(this,"EliminarFormaPagoPuntoVenta"));
		
		/*
		this.jInternalFrameDetalleFormFormaPagoPuntoVenta.jButtonEliminarToolBarFormaPagoPuntoVenta.addActionListener (new ButtonActionListener(this,"EliminarToolBarFormaPagoPuntoVenta"));
								
		this.jInternalFrameDetalleFormFormaPagoPuntoVenta.jMenuItemEliminarFormaPagoPuntoVenta.addActionListener (new ButtonActionListener(this,"MenuItemEliminarFormaPagoPuntoVenta"));		
		
		*/
		
		this.jInternalFrameDetalleFormFormaPagoPuntoVenta.jButtonCancelarFormaPagoPuntoVenta.addActionListener (new ButtonActionListener(this,"CancelarFormaPagoPuntoVenta"));
		
		/*
		this.jInternalFrameDetalleFormFormaPagoPuntoVenta.jButtonCancelarToolBarFormaPagoPuntoVenta.addActionListener (new ButtonActionListener(this,"CancelarToolBarFormaPagoPuntoVenta"));
					
		this.jInternalFrameDetalleFormFormaPagoPuntoVenta.jMenuItemCancelarFormaPagoPuntoVenta.addActionListener (new ButtonActionListener(this,"MenuItemCancelarFormaPagoPuntoVenta"));		
		
		*/
		
		
		/*
		this.jInternalFrameDetalleFormFormaPagoPuntoVenta.jMenuItemDetalleCerrarFormaPagoPuntoVenta.addActionListener (new ButtonActionListener(this,"MenuItemDetalleCerrarFormaPagoPuntoVenta"));		
		*/
		
		/*
		this.jInternalFrameDetalleFormFormaPagoPuntoVenta.jButtonGuardarCambiosToolBarFormaPagoPuntoVenta.addActionListener (new ButtonActionListener(this,"GuardarCambiosToolBarFormaPagoPuntoVenta"));
		*/
		
		/*
		this.jInternalFrameDetalleFormFormaPagoPuntoVenta.jButtonGuardarCambiosToolBarFormaPagoPuntoVenta.addActionListener (new ButtonActionListener(this,"GuardarCambiosToolBarFormaPagoPuntoVenta"));
		*/
		
		
		this.jInternalFrameDetalleFormFormaPagoPuntoVenta.jComboBoxTiposAccionesFormularioFormaPagoPuntoVenta.addActionListener (new ButtonActionListener(this,"TiposAccionesFormularioFormaPagoPuntoVenta"));
		
		
		//CAMPO EVENTO
		this.jInternalFrameDetalleFormFormaPagoPuntoVenta.jTextFieldporcentajeFormaPagoPuntoVenta.addFocusListener(new TextFieldFocusListener(this,"porcentajeFormaPagoPuntoVenta"));
		this.jInternalFrameDetalleFormFormaPagoPuntoVenta.jTextFieldporcentajeFormaPagoPuntoVenta.addActionListener(new TextFieldActionListener(this,"porcentajeFormaPagoPuntoVenta"));
		//this.jInternalFrameDetalleFormFormaPagoPuntoVenta.jTextFieldporcentajeFormaPagoPuntoVenta.getDocument().addDocumentListener(new TextFieldDocumentListener(this,this.jTextFieldporcentajeFormaPagoPuntoVenta,"porcentajeFormaPagoPuntoVenta"));


		//CAMPO EVENTO
		this.jInternalFrameDetalleFormFormaPagoPuntoVenta.jTextFieldvalorFormaPagoPuntoVenta.addFocusListener(new TextFieldFocusListener(this,"valorFormaPagoPuntoVenta"));
		this.jInternalFrameDetalleFormFormaPagoPuntoVenta.jTextFieldvalorFormaPagoPuntoVenta.addActionListener(new TextFieldActionListener(this,"valorFormaPagoPuntoVenta"));
		//this.jInternalFrameDetalleFormFormaPagoPuntoVenta.jTextFieldvalorFormaPagoPuntoVenta.getDocument().addDocumentListener(new TextFieldDocumentListener(this,this.jTextFieldvalorFormaPagoPuntoVenta,"valorFormaPagoPuntoVenta"));


		//CAMPO EVENTO
		this.jInternalFrameDetalleFormFormaPagoPuntoVenta.jTextFieldnumero_dias_plazoFormaPagoPuntoVenta.addFocusListener(new TextFieldFocusListener(this,"numero_dias_plazoFormaPagoPuntoVenta"));
		this.jInternalFrameDetalleFormFormaPagoPuntoVenta.jTextFieldnumero_dias_plazoFormaPagoPuntoVenta.addActionListener(new TextFieldActionListener(this,"numero_dias_plazoFormaPagoPuntoVenta"));
		//this.jInternalFrameDetalleFormFormaPagoPuntoVenta.jTextFieldnumero_dias_plazoFormaPagoPuntoVenta.getDocument().addDocumentListener(new TextFieldDocumentListener(this,this.jTextFieldnumero_dias_plazoFormaPagoPuntoVenta,"numero_dias_plazoFormaPagoPuntoVenta"));


				
		
		//BUSQUEDA GENERAL
		this.jInternalFrameDetalleFormFormaPagoPuntoVenta.jButtonidFormaPagoPuntoVentaBusqueda.addActionListener(new ButtonActionListener(this,"idFormaPagoPuntoVentaBusqueda"));
		//ACTUALIZAR FK
		this.jInternalFrameDetalleFormFormaPagoPuntoVenta.jButtonid_empresaFormaPagoPuntoVentaUpdate.addActionListener(new ButtonActionListener(this,"id_empresaFormaPagoPuntoVentaUpdate"));
		//BUSQUEDA GENERAL
		this.jInternalFrameDetalleFormFormaPagoPuntoVenta.jButtonid_empresaFormaPagoPuntoVentaBusqueda.addActionListener(new ButtonActionListener(this,"id_empresaFormaPagoPuntoVentaBusqueda"));
		//ACTUALIZAR FK
		this.jInternalFrameDetalleFormFormaPagoPuntoVenta.jButtonid_sucursalFormaPagoPuntoVentaUpdate.addActionListener(new ButtonActionListener(this,"id_sucursalFormaPagoPuntoVentaUpdate"));
		//BUSQUEDA GENERAL
		this.jInternalFrameDetalleFormFormaPagoPuntoVenta.jButtonid_sucursalFormaPagoPuntoVentaBusqueda.addActionListener(new ButtonActionListener(this,"id_sucursalFormaPagoPuntoVentaBusqueda"));
		//ACTUALIZAR FK
		this.jInternalFrameDetalleFormFormaPagoPuntoVenta.jButtonid_ejercicioFormaPagoPuntoVentaUpdate.addActionListener(new ButtonActionListener(this,"id_ejercicioFormaPagoPuntoVentaUpdate"));
		//BUSQUEDA GENERAL
		this.jInternalFrameDetalleFormFormaPagoPuntoVenta.jButtonid_ejercicioFormaPagoPuntoVentaBusqueda.addActionListener(new ButtonActionListener(this,"id_ejercicioFormaPagoPuntoVentaBusqueda"));
		//ACTUALIZAR FK
		this.jInternalFrameDetalleFormFormaPagoPuntoVenta.jButtonid_periodoFormaPagoPuntoVentaUpdate.addActionListener(new ButtonActionListener(this,"id_periodoFormaPagoPuntoVentaUpdate"));
		//BUSQUEDA GENERAL
		this.jInternalFrameDetalleFormFormaPagoPuntoVenta.jButtonid_periodoFormaPagoPuntoVentaBusqueda.addActionListener(new ButtonActionListener(this,"id_periodoFormaPagoPuntoVentaBusqueda"));
		//ACTUALIZAR FK
		this.jInternalFrameDetalleFormFormaPagoPuntoVenta.jButtonid_factura_punto_ventaFormaPagoPuntoVentaUpdate.addActionListener(new ButtonActionListener(this,"id_factura_punto_ventaFormaPagoPuntoVentaUpdate"));
		//BUSQUEDA GENERAL
		this.jInternalFrameDetalleFormFormaPagoPuntoVenta.jButtonid_factura_punto_ventaFormaPagoPuntoVentaBusqueda.addActionListener(new ButtonActionListener(this,"id_factura_punto_ventaFormaPagoPuntoVentaBusqueda"));
		//ACTUALIZAR FK
		this.jInternalFrameDetalleFormFormaPagoPuntoVenta.jButtonid_tipo_forma_pagoFormaPagoPuntoVentaUpdate.addActionListener(new ButtonActionListener(this,"id_tipo_forma_pagoFormaPagoPuntoVentaUpdate"));
		//BUSQUEDA GENERAL
		this.jInternalFrameDetalleFormFormaPagoPuntoVenta.jButtonid_tipo_forma_pagoFormaPagoPuntoVentaBusqueda.addActionListener(new ButtonActionListener(this,"id_tipo_forma_pagoFormaPagoPuntoVentaBusqueda"));
		//BUSQUEDA GENERAL
		this.jInternalFrameDetalleFormFormaPagoPuntoVenta.jButtonporcentajeFormaPagoPuntoVentaBusqueda.addActionListener(new ButtonActionListener(this,"porcentajeFormaPagoPuntoVentaBusqueda"));
		//BUSQUEDA GENERAL
		this.jInternalFrameDetalleFormFormaPagoPuntoVenta.jButtonvalorFormaPagoPuntoVentaBusqueda.addActionListener(new ButtonActionListener(this,"valorFormaPagoPuntoVentaBusqueda"));
		//BUSQUEDA GENERAL
		this.jInternalFrameDetalleFormFormaPagoPuntoVenta.jButtonfechaFormaPagoPuntoVentaBusqueda.addActionListener(new ButtonActionListener(this,"fechaFormaPagoPuntoVentaBusqueda"));
		//BUSQUEDA GENERAL
		this.jInternalFrameDetalleFormFormaPagoPuntoVenta.jButtondescripcionFormaPagoPuntoVentaBusqueda.addActionListener(new ButtonActionListener(this,"descripcionFormaPagoPuntoVentaBusqueda"));
		//BUSQUEDA GENERAL
		this.jInternalFrameDetalleFormFormaPagoPuntoVenta.jButtonfecha_inicioFormaPagoPuntoVentaBusqueda.addActionListener(new ButtonActionListener(this,"fecha_inicioFormaPagoPuntoVentaBusqueda"));
		//BUSQUEDA GENERAL
		this.jInternalFrameDetalleFormFormaPagoPuntoVenta.jButtonnumero_dias_plazoFormaPagoPuntoVentaBusqueda.addActionListener(new ButtonActionListener(this,"numero_dias_plazoFormaPagoPuntoVentaBusqueda"));
		//BUSQUEDA GENERAL
		this.jInternalFrameDetalleFormFormaPagoPuntoVenta.jButtonfecha_finFormaPagoPuntoVentaBusqueda.addActionListener(new ButtonActionListener(this,"fecha_finFormaPagoPuntoVentaBusqueda"));
		//ACTUALIZAR FK
		this.jInternalFrameDetalleFormFormaPagoPuntoVenta.jButtonid_bancoFormaPagoPuntoVentaUpdate.addActionListener(new ButtonActionListener(this,"id_bancoFormaPagoPuntoVentaUpdate"));
		//BUSQUEDA GENERAL
		this.jInternalFrameDetalleFormFormaPagoPuntoVenta.jButtonid_bancoFormaPagoPuntoVentaBusqueda.addActionListener(new ButtonActionListener(this,"id_bancoFormaPagoPuntoVentaBusqueda"));
		//ACTUALIZAR FK
		this.jInternalFrameDetalleFormFormaPagoPuntoVenta.jButtonid_cuenta_banco_pun_venFormaPagoPuntoVentaUpdate.addActionListener(new ButtonActionListener(this,"id_cuenta_banco_pun_venFormaPagoPuntoVentaUpdate"));
		//BUSQUEDA GENERAL
		this.jInternalFrameDetalleFormFormaPagoPuntoVenta.jButtonid_cuenta_banco_pun_venFormaPagoPuntoVentaBusqueda.addActionListener(new ButtonActionListener(this,"id_cuenta_banco_pun_venFormaPagoPuntoVentaBusqueda"));
		//ACTUALIZAR FK
		this.jInternalFrameDetalleFormFormaPagoPuntoVenta.jButtonid_tipo_riesgo_chequeFormaPagoPuntoVentaUpdate.addActionListener(new ButtonActionListener(this,"id_tipo_riesgo_chequeFormaPagoPuntoVentaUpdate"));
		//BUSQUEDA GENERAL
		this.jInternalFrameDetalleFormFormaPagoPuntoVenta.jButtonid_tipo_riesgo_chequeFormaPagoPuntoVentaBusqueda.addActionListener(new ButtonActionListener(this,"id_tipo_riesgo_chequeFormaPagoPuntoVentaBusqueda"));
		//BUSQUEDA GENERAL
		this.jInternalFrameDetalleFormFormaPagoPuntoVenta.jButtonnumero_cuentaFormaPagoPuntoVentaBusqueda.addActionListener(new ButtonActionListener(this,"numero_cuentaFormaPagoPuntoVentaBusqueda"));
		//BUSQUEDA GENERAL
		this.jInternalFrameDetalleFormFormaPagoPuntoVenta.jButtonnumero_chequeFormaPagoPuntoVentaBusqueda.addActionListener(new ButtonActionListener(this,"numero_chequeFormaPagoPuntoVentaBusqueda"));
		//BUSQUEDA GENERAL
		this.jInternalFrameDetalleFormFormaPagoPuntoVenta.jButtongiradorFormaPagoPuntoVentaBusqueda.addActionListener(new ButtonActionListener(this,"giradorFormaPagoPuntoVentaBusqueda"));
		//ACTUALIZAR FK
		this.jInternalFrameDetalleFormFormaPagoPuntoVenta.jButtonid_banco_tarjetaFormaPagoPuntoVentaUpdate.addActionListener(new ButtonActionListener(this,"id_banco_tarjetaFormaPagoPuntoVentaUpdate"));
		//BUSQUEDA GENERAL
		this.jInternalFrameDetalleFormFormaPagoPuntoVenta.jButtonid_banco_tarjetaFormaPagoPuntoVentaBusqueda.addActionListener(new ButtonActionListener(this,"id_banco_tarjetaFormaPagoPuntoVentaBusqueda"));
		//ACTUALIZAR FK
		this.jInternalFrameDetalleFormFormaPagoPuntoVenta.jButtonid_tarjeta_creditoFormaPagoPuntoVentaUpdate.addActionListener(new ButtonActionListener(this,"id_tarjeta_creditoFormaPagoPuntoVentaUpdate"));
		//BUSQUEDA GENERAL
		this.jInternalFrameDetalleFormFormaPagoPuntoVenta.jButtonid_tarjeta_creditoFormaPagoPuntoVentaBusqueda.addActionListener(new ButtonActionListener(this,"id_tarjeta_creditoFormaPagoPuntoVentaBusqueda"));
		//ACTUALIZAR FK
		this.jInternalFrameDetalleFormFormaPagoPuntoVenta.jButtonid_tipo_interes_tarjetaFormaPagoPuntoVentaUpdate.addActionListener(new ButtonActionListener(this,"id_tipo_interes_tarjetaFormaPagoPuntoVentaUpdate"));
		//BUSQUEDA GENERAL
		this.jInternalFrameDetalleFormFormaPagoPuntoVenta.jButtonid_tipo_interes_tarjetaFormaPagoPuntoVentaBusqueda.addActionListener(new ButtonActionListener(this,"id_tipo_interes_tarjetaFormaPagoPuntoVentaBusqueda"));
		//ACTUALIZAR FK
		this.jInternalFrameDetalleFormFormaPagoPuntoVenta.jButtonid_tipo_pago_tarjetaFormaPagoPuntoVentaUpdate.addActionListener(new ButtonActionListener(this,"id_tipo_pago_tarjetaFormaPagoPuntoVentaUpdate"));
		//BUSQUEDA GENERAL
		this.jInternalFrameDetalleFormFormaPagoPuntoVenta.jButtonid_tipo_pago_tarjetaFormaPagoPuntoVentaBusqueda.addActionListener(new ButtonActionListener(this,"id_tipo_pago_tarjetaFormaPagoPuntoVentaBusqueda"));
		//ACTUALIZAR FK
		this.jInternalFrameDetalleFormFormaPagoPuntoVenta.jButtonid_conexionFormaPagoPuntoVentaUpdate.addActionListener(new ButtonActionListener(this,"id_conexionFormaPagoPuntoVentaUpdate"));
		//BUSQUEDA GENERAL
		this.jInternalFrameDetalleFormFormaPagoPuntoVenta.jButtonid_conexionFormaPagoPuntoVentaBusqueda.addActionListener(new ButtonActionListener(this,"id_conexionFormaPagoPuntoVentaBusqueda"));
		//ACTUALIZAR FK
		this.jInternalFrameDetalleFormFormaPagoPuntoVenta.jButtonid_mesFormaPagoPuntoVentaUpdate.addActionListener(new ButtonActionListener(this,"id_mesFormaPagoPuntoVentaUpdate"));
		//BUSQUEDA GENERAL
		this.jInternalFrameDetalleFormFormaPagoPuntoVenta.jButtonid_mesFormaPagoPuntoVentaBusqueda.addActionListener(new ButtonActionListener(this,"id_mesFormaPagoPuntoVentaBusqueda"));
		//BUSQUEDA GENERAL
		this.jInternalFrameDetalleFormFormaPagoPuntoVenta.jButtonnumeroFormaPagoPuntoVentaBusqueda.addActionListener(new ButtonActionListener(this,"numeroFormaPagoPuntoVentaBusqueda"));
		//BUSQUEDA GENERAL
		this.jInternalFrameDetalleFormFormaPagoPuntoVenta.jButtontarjeta_habienteFormaPagoPuntoVentaBusqueda.addActionListener(new ButtonActionListener(this,"tarjeta_habienteFormaPagoPuntoVentaBusqueda"));
		//BUSQUEDA GENERAL
		this.jInternalFrameDetalleFormFormaPagoPuntoVenta.jButtonautorizacionFormaPagoPuntoVentaBusqueda.addActionListener(new ButtonActionListener(this,"autorizacionFormaPagoPuntoVentaBusqueda"));
		//BUSQUEDA GENERAL
		this.jInternalFrameDetalleFormFormaPagoPuntoVenta.jButtonvoucherFormaPagoPuntoVentaBusqueda.addActionListener(new ButtonActionListener(this,"voucherFormaPagoPuntoVentaBusqueda"));
		//BUSQUEDA GENERAL
		this.jInternalFrameDetalleFormFormaPagoPuntoVenta.jButtonloteFormaPagoPuntoVentaBusqueda.addActionListener(new ButtonActionListener(this,"loteFormaPagoPuntoVentaBusqueda"));
		//BUSQUEDA GENERAL
		this.jInternalFrameDetalleFormFormaPagoPuntoVenta.jButtoncuotaFormaPagoPuntoVentaBusqueda.addActionListener(new ButtonActionListener(this,"cuotaFormaPagoPuntoVentaBusqueda"));
		//BUSQUEDA GENERAL
		this.jInternalFrameDetalleFormFormaPagoPuntoVenta.jButtonvalor_retencionFormaPagoPuntoVentaBusqueda.addActionListener(new ButtonActionListener(this,"valor_retencionFormaPagoPuntoVentaBusqueda"));
		//BUSQUEDA GENERAL
		this.jInternalFrameDetalleFormFormaPagoPuntoVenta.jButtonvalor_comisionFormaPagoPuntoVentaBusqueda.addActionListener(new ButtonActionListener(this,"valor_comisionFormaPagoPuntoVentaBusqueda"));
		//BUSQUEDA GENERAL
		this.jInternalFrameDetalleFormFormaPagoPuntoVenta.jButtonvalor_calculadoFormaPagoPuntoVentaBusqueda.addActionListener(new ButtonActionListener(this,"valor_calculadoFormaPagoPuntoVentaBusqueda"));
		//BUSQUEDA GENERAL
		this.jInternalFrameDetalleFormFormaPagoPuntoVenta.jButtonvalor_canceladoFormaPagoPuntoVentaBusqueda.addActionListener(new ButtonActionListener(this,"valor_canceladoFormaPagoPuntoVentaBusqueda"));
		//BUSQUEDA GENERAL
		this.jInternalFrameDetalleFormFormaPagoPuntoVenta.jButtonvalor_difiereFormaPagoPuntoVentaBusqueda.addActionListener(new ButtonActionListener(this,"valor_difiereFormaPagoPuntoVentaBusqueda"));
		//BUSQUEDA GENERAL
		this.jInternalFrameDetalleFormFormaPagoPuntoVenta.jButtonnumero_retencionFormaPagoPuntoVentaBusqueda.addActionListener(new ButtonActionListener(this,"numero_retencionFormaPagoPuntoVentaBusqueda"));
		//BUSQUEDA GENERAL
		this.jInternalFrameDetalleFormFormaPagoPuntoVenta.jButtonnumero_liquidacionFormaPagoPuntoVentaBusqueda.addActionListener(new ButtonActionListener(this,"numero_liquidacionFormaPagoPuntoVentaBusqueda"));
		//ACTUALIZAR FK
		this.jInternalFrameDetalleFormFormaPagoPuntoVenta.jButtonid_anioFormaPagoPuntoVentaUpdate.addActionListener(new ButtonActionListener(this,"id_anioFormaPagoPuntoVentaUpdate"));
		//BUSQUEDA GENERAL
		this.jInternalFrameDetalleFormFormaPagoPuntoVenta.jButtonid_anioFormaPagoPuntoVentaBusqueda.addActionListener(new ButtonActionListener(this,"id_anioFormaPagoPuntoVentaBusqueda"));
		//jButtonid_cuenta_contableFormaPagoPuntoVenta.addActionListener (
		//	new java.awt.event.ActionListener() {
		//		public void actionPerformed(java.awt.event.ActionEvent evt) {
		//			jButtonid_cuenta_contableFormaPagoPuntoVentaActionPerformed(evt);
		//		}
		//	}
		//);

		//BUSQUEDA CAMPO
		this.jInternalFrameDetalleFormFormaPagoPuntoVenta.jButtonid_cuenta_contableFormaPagoPuntoVenta.addActionListener(new ButtonActionListener(this,"id_cuenta_contableFormaPagoPuntoVenta"));
		//jButtonid_cuenta_contableFormaPagoPuntoVentaArbol.addActionListener (
		//	new java.awt.event.ActionListener() {
		//		public void actionPerformed(java.awt.event.ActionEvent evt) {
		//			abrirFrameTreeCuentaContable("BUSQUEDA_FK");
		//		}
		//	}
		//);

		//BUSQUEDA ARBOL CAMPO
		this.jInternalFrameDetalleFormFormaPagoPuntoVenta.jButtonid_cuenta_contableFormaPagoPuntoVentaArbol.addActionListener(new ButtonActionListener(this,"id_cuenta_contableFormaPagoPuntoVentaArbol"));
		//ACTUALIZAR FK
		this.jInternalFrameDetalleFormFormaPagoPuntoVenta.jButtonid_cuenta_contableFormaPagoPuntoVentaUpdate.addActionListener(new ButtonActionListener(this,"id_cuenta_contableFormaPagoPuntoVentaUpdate"));
		//BUSQUEDA GENERAL
		this.jInternalFrameDetalleFormFormaPagoPuntoVenta.jButtonid_cuenta_contableFormaPagoPuntoVentaBusqueda.addActionListener(new ButtonActionListener(this,"id_cuenta_contableFormaPagoPuntoVentaBusqueda"));
		//jButtonid_asiento_contableFormaPagoPuntoVenta.addActionListener (
		//	new java.awt.event.ActionListener() {
		//		public void actionPerformed(java.awt.event.ActionEvent evt) {
		//			jButtonid_asiento_contableFormaPagoPuntoVentaActionPerformed(evt);
		//		}
		//	}
		//);

		//BUSQUEDA CAMPO
		this.jInternalFrameDetalleFormFormaPagoPuntoVenta.jButtonid_asiento_contableFormaPagoPuntoVenta.addActionListener(new ButtonActionListener(this,"id_asiento_contableFormaPagoPuntoVenta"));
		//ACTUALIZAR FK
		this.jInternalFrameDetalleFormFormaPagoPuntoVenta.jButtonid_asiento_contableFormaPagoPuntoVentaUpdate.addActionListener(new ButtonActionListener(this,"id_asiento_contableFormaPagoPuntoVentaUpdate"));
		//BUSQUEDA GENERAL
		this.jInternalFrameDetalleFormFormaPagoPuntoVenta.jButtonid_asiento_contableFormaPagoPuntoVentaBusqueda.addActionListener(new ButtonActionListener(this,"id_asiento_contableFormaPagoPuntoVentaBusqueda"));
		
		
		;

		//TABBED PANE RELACIONES
		this.jInternalFrameDetalleFormFormaPagoPuntoVenta.jTabbedPaneRelacionesFormaPagoPuntoVenta.addChangeListener(new TabbedPaneChangeListener(this,"RelacionesFormaPagoPuntoVenta"));
		
		;		
		//TABBED PANE RELACIONES FIN(EXTRA TAB)	
	}
	
	public void initActions() {				
		this.addInternalFrameListener(new InternalFrameInternalFrameAdapter(this,"CloseInternalFrameFormaPagoPuntoVenta"));
		
		if(this.jInternalFrameDetalleFormFormaPagoPuntoVenta!=null) { //if(this.conCargarFormDetalle) {
			this.jInternalFrameDetalleFormFormaPagoPuntoVenta.addInternalFrameListener(new InternalFrameInternalFrameAdapter(this,"jButtonCancelarFormaPagoPuntoVenta"));
		}
		
		this.jTableDatosFormaPagoPuntoVenta.getSelectionModel().addListSelectionListener(new TableListSelectionListener(this,"TableDatosSeleccionarFormaPagoPuntoVenta"));
		
		this.jTableDatosFormaPagoPuntoVenta.addMouseListener(new TableMouseAdapter(this,"DatosSeleccionarFormaPagoPuntoVenta"));
		
		this.jButtonNuevoFormaPagoPuntoVenta.addActionListener(new ButtonActionListener(this,"NuevoFormaPagoPuntoVenta"));
		
		this.jButtonDuplicarFormaPagoPuntoVenta.addActionListener(new ButtonActionListener(this,"DuplicarFormaPagoPuntoVenta"));
		
		this.jButtonCopiarFormaPagoPuntoVenta.addActionListener(new ButtonActionListener(this,"CopiarFormaPagoPuntoVenta"));
		
		this.jButtonVerFormFormaPagoPuntoVenta.addActionListener(new ButtonActionListener(this,"VerFormFormaPagoPuntoVenta"));
		
		/*
		this.jButtonNuevoToolBarFormaPagoPuntoVenta.addActionListener(new ButtonActionListener(this,"NuevoToolBarFormaPagoPuntoVenta"));
			
		this.jButtonDuplicarToolBarFormaPagoPuntoVenta.addActionListener(new ButtonActionListener(this,"DuplicarToolBarFormaPagoPuntoVenta"));
			
		this.jMenuItemNuevoFormaPagoPuntoVenta.addActionListener (new ButtonActionListener(this,"MenuItemNuevoFormaPagoPuntoVenta"));
			
		this.jMenuItemDuplicarFormaPagoPuntoVenta.addActionListener (new ButtonActionListener(this,"MenuItemDuplicarFormaPagoPuntoVenta"));		
		*/
		
		this.jButtonNuevoRelacionesFormaPagoPuntoVenta.addActionListener (new ButtonActionListener(this,"NuevoRelacionesFormaPagoPuntoVenta"));
		
		/*
		this.jButtonNuevoRelacionesToolBarFormaPagoPuntoVenta.addActionListener(new ButtonActionListener(this,"NuevoRelacionesToolBarFormaPagoPuntoVenta"));
			
		this.jMenuItemNuevoRelacionesFormaPagoPuntoVenta.addActionListener(new ButtonActionListener(this,"MenuItemNuevoRelacionesFormaPagoPuntoVenta"));		
		*/
		
		if(this.jInternalFrameDetalleFormFormaPagoPuntoVenta!=null) { //if(this.conCargarFormDetalle) {
			this.jInternalFrameDetalleFormFormaPagoPuntoVenta.jButtonModificarFormaPagoPuntoVenta.addActionListener(new ButtonActionListener(this,"ModificarFormaPagoPuntoVenta"));
		}
		
		/*
		if(this.jInternalFrameDetalleFormFormaPagoPuntoVenta!=null) { //if(this.conCargarFormDetalle) {
			this.jInternalFrameDetalleFormFormaPagoPuntoVenta.jButtonModificarToolBarFormaPagoPuntoVenta.addActionListener(new ButtonActionListener(this,"ModificarToolBarFormaPagoPuntoVenta"));
			
			this.jInternalFrameDetalleFormFormaPagoPuntoVenta.jMenuItemModificarFormaPagoPuntoVenta.addActionListener(new ButtonActionListener(this,"MenuItemModificarFormaPagoPuntoVenta"));		
		}
		*/
		
		if(this.jInternalFrameDetalleFormFormaPagoPuntoVenta!=null) { //if(this.conCargarFormDetalle) {			
			this.jInternalFrameDetalleFormFormaPagoPuntoVenta.jButtonActualizarFormaPagoPuntoVenta.addActionListener (new ButtonActionListener(this,"ActualizarFormaPagoPuntoVenta"));
		}
		
		/*
		if(this.jInternalFrameDetalleFormFormaPagoPuntoVenta!=null) { //if(this.conCargarFormDetalle) {
			this.jInternalFrameDetalleFormFormaPagoPuntoVenta.jButtonActualizarToolBarFormaPagoPuntoVenta.addActionListener(new ButtonActionListener(this,"ActualizarToolBarFormaPagoPuntoVenta"));
				
			this.jInternalFrameDetalleFormFormaPagoPuntoVenta.jMenuItemActualizarFormaPagoPuntoVenta.addActionListener (new ButtonActionListener(this,"MenuItemActualizarFormaPagoPuntoVenta"));		
		}
		*/
		
		if(this.jInternalFrameDetalleFormFormaPagoPuntoVenta!=null) { //if(this.conCargarFormDetalle) {
			this.jInternalFrameDetalleFormFormaPagoPuntoVenta.jButtonEliminarFormaPagoPuntoVenta.addActionListener (new ButtonActionListener(this,"EliminarFormaPagoPuntoVenta"));
		}
		
		/*
		if(this.jInternalFrameDetalleFormFormaPagoPuntoVenta!=null) { //if(this.conCargarFormDetalle) {
			this.jInternalFrameDetalleFormFormaPagoPuntoVenta.jButtonEliminarToolBarFormaPagoPuntoVenta.addActionListener (new ButtonActionListener(this,"EliminarToolBarFormaPagoPuntoVenta"));
						
			this.jInternalFrameDetalleFormFormaPagoPuntoVenta.jMenuItemEliminarFormaPagoPuntoVenta.addActionListener (new ButtonActionListener(this,"MenuItemEliminarFormaPagoPuntoVenta"));		
		}
		*/
		
		if(this.jInternalFrameDetalleFormFormaPagoPuntoVenta!=null) { //if(this.conCargarFormDetalle) {
			this.jInternalFrameDetalleFormFormaPagoPuntoVenta.jButtonCancelarFormaPagoPuntoVenta.addActionListener (new ButtonActionListener(this,"CancelarFormaPagoPuntoVenta"));
		}
		
		/*
		if(this.jInternalFrameDetalleFormFormaPagoPuntoVenta!=null) { //if(this.conCargarFormDetalle) {
			this.jInternalFrameDetalleFormFormaPagoPuntoVenta.jButtonCancelarToolBarFormaPagoPuntoVenta.addActionListener (new ButtonActionListener(this,"CancelarToolBarFormaPagoPuntoVenta"));
			
			this.jInternalFrameDetalleFormFormaPagoPuntoVenta.jMenuItemCancelarFormaPagoPuntoVenta.addActionListener (new ButtonActionListener(this,"MenuItemCancelarFormaPagoPuntoVenta"));		
		}
		
		this.jButtonMostrarOcultarTablaToolBarFormaPagoPuntoVenta.addActionListener (new ButtonActionListener(this,"MostrarOcultarToolBarFormaPagoPuntoVenta"));		
		*/
		
		this.jButtonCerrarFormaPagoPuntoVenta.addActionListener (new ButtonActionListener(this,"CerrarFormaPagoPuntoVenta"));
		
		/*
		this.jButtonCerrarToolBarFormaPagoPuntoVenta.addActionListener (new ButtonActionListener(this,"CerrarToolBarFormaPagoPuntoVenta"));
			
		this.jMenuItemCerrarFormaPagoPuntoVenta.addActionListener (new ButtonActionListener(this,"MenuItemCerrarFormaPagoPuntoVenta"));
			
		if(this.jInternalFrameDetalleFormFormaPagoPuntoVenta!=null) { //if(this.conCargarFormDetalle) {
			this.jInternalFrameDetalleFormFormaPagoPuntoVenta.jMenuItemDetalleCerrarFormaPagoPuntoVenta.addActionListener (new ButtonActionListener(this,"MenuItemDetalleCerrarFormaPagoPuntoVenta"));		
		}
		*/
		
		if(this.jInternalFrameDetalleFormFormaPagoPuntoVenta!=null) { //if(this.conCargarFormDetalle) {
			this.jInternalFrameDetalleFormFormaPagoPuntoVenta.jButtonGuardarCambiosFormaPagoPuntoVenta.addActionListener (new ButtonActionListener(this,"GuardarCambiosFormaPagoPuntoVenta"));
		}
		
		/*
		if(this.jInternalFrameDetalleFormFormaPagoPuntoVenta!=null) { //if(this.conCargarFormDetalle) {
			this.jInternalFrameDetalleFormFormaPagoPuntoVenta.jButtonGuardarCambiosToolBarFormaPagoPuntoVenta.addActionListener (new ButtonActionListener(this,"GuardarCambiosToolBarFormaPagoPuntoVenta"));
		}
		
		this.jButtonCopiarToolBarFormaPagoPuntoVenta.addActionListener (new ButtonActionListener(this,"CopiarToolBarFormaPagoPuntoVenta"));
			
		this.jButtonVerFormToolBarFormaPagoPuntoVenta.addActionListener (new ButtonActionListener(this,"VerFormToolBarFormaPagoPuntoVenta"));
		
		this.jMenuItemGuardarCambiosFormaPagoPuntoVenta.addActionListener (new ButtonActionListener(this,"MenuItemGuardarCambiosFormaPagoPuntoVenta"));
			
		this.jMenuItemCopiarFormaPagoPuntoVenta.addActionListener (new ButtonActionListener(this,"MenuItemCopiarFormaPagoPuntoVenta"));		
		
		this.jMenuItemVerFormFormaPagoPuntoVenta.addActionListener (new ButtonActionListener(this,"MenuItemVerFormFormaPagoPuntoVenta"));		
		*/
		
		this.jButtonGuardarCambiosTablaFormaPagoPuntoVenta.addActionListener (new ButtonActionListener(this,"GuardarCambiosTablaFormaPagoPuntoVenta"));
		
		/*
		this.jButtonGuardarCambiosTablaToolBarFormaPagoPuntoVenta.addActionListener (new ButtonActionListener(this,"GuardarCambiosTablaToolBarFormaPagoPuntoVenta"));
			
		this.jMenuItemGuardarCambiosTablaFormaPagoPuntoVenta.addActionListener (new ButtonActionListener(this,"GuardarCambiosTablaFormaPagoPuntoVenta"));		
		*/
		
		/*
		this.jButtonRecargarInformacionFormaPagoPuntoVenta.addActionListener (new ButtonActionListener(this,"RecargarInformacionFormaPagoPuntoVenta"));
					
		this.jButtonRecargarInformacionToolBarFormaPagoPuntoVenta.addActionListener (new ButtonActionListener(this,"RecargarInformacionToolBarFormaPagoPuntoVenta"));
		
		this.jMenuItemRecargarInformacionFormaPagoPuntoVenta.addActionListener (new ButtonActionListener(this,"MenuItemRecargarInformacionFormaPagoPuntoVenta"));		
		*/
		
		
		this.jButtonAnterioresFormaPagoPuntoVenta.addActionListener (new ButtonActionListener(this,"AnterioresFormaPagoPuntoVenta"));
		
		/*
		this.jButtonAnterioresToolBarFormaPagoPuntoVenta.addActionListener (new ButtonActionListener(this,"AnterioresToolBarFormaPagoPuntoVenta"));
		
		this.jMenuItemAnterioresFormaPagoPuntoVenta.addActionListener (new ButtonActionListener(this,"MenuItemAnterioresFormaPagoPuntoVenta"));		
		*/
		
		this.jButtonSiguientesFormaPagoPuntoVenta.addActionListener (new ButtonActionListener(this,"SiguientesFormaPagoPuntoVenta"));
		
		/*
		this.jButtonSiguientesToolBarFormaPagoPuntoVenta.addActionListener (new ButtonActionListener(this,"SiguientesToolBarFormaPagoPuntoVenta"));
			
		this.jMenuItemSiguientesFormaPagoPuntoVenta.addActionListener (new ButtonActionListener(this,"MenuItemSiguientesFormaPagoPuntoVenta"));
			
		this.jMenuItemAbrirOrderByFormaPagoPuntoVenta.addActionListener (new ButtonActionListener(this,"MenuItemAbrirOrderByFormaPagoPuntoVenta"));
			
		this.jMenuItemMostrarOcultarFormaPagoPuntoVenta.addActionListener (new ButtonActionListener(this,"MenuItemMostrarOcultarFormaPagoPuntoVenta"));
			
		this.jMenuItemDetalleAbrirOrderByFormaPagoPuntoVenta.addActionListener (new ButtonActionListener(this,"MenuItemDetalleAbrirOrderByFormaPagoPuntoVenta"));
			
		this.jMenuItemDetalleMostarOcultarFormaPagoPuntoVenta.addActionListener (new ButtonActionListener(this,"MenuItemDetalleMostrarOcultarFormaPagoPuntoVenta"));		
		*/
		
		this.jButtonNuevoGuardarCambiosFormaPagoPuntoVenta.addActionListener (new ButtonActionListener(this,"NuevoGuardarCambiosFormaPagoPuntoVenta"));
		
		/*
		this.jButtonNuevoGuardarCambiosToolBarFormaPagoPuntoVenta.addActionListener (new ButtonActionListener(this,"NuevoGuardarCambiosToolBarFormaPagoPuntoVenta"));
			
		this.jMenuItemNuevoGuardarCambiosFormaPagoPuntoVenta.addActionListener (new ButtonActionListener(this,"MenuItemNuevoGuardarCambiosFormaPagoPuntoVenta"));		
		*/
		
		
		//SELECCIONAR TODOS
		
		this.jCheckBoxSeleccionarTodosFormaPagoPuntoVenta.addItemListener(new CheckBoxItemListener(this,"SeleccionarTodosFormaPagoPuntoVenta"));

		this.jCheckBoxSeleccionadosFormaPagoPuntoVenta.addItemListener(new CheckBoxItemListener(this,"SeleccionadosFormaPagoPuntoVenta"));
		
		if(this.jInternalFrameDetalleFormFormaPagoPuntoVenta!=null) { //if(this.conCargarFormDetalle) {
			this.jInternalFrameDetalleFormFormaPagoPuntoVenta.jComboBoxTiposAccionesFormularioFormaPagoPuntoVenta.addActionListener (new ButtonActionListener(this,"TiposAccionesFormularioFormaPagoPuntoVenta"));
		}
		
		/*
		this.jComboBoxTiposRelacionesFormaPagoPuntoVenta.addActionListener (new ButtonActionListener(this,"TiposRelacionesFormaPagoPuntoVenta"));
			
		this.jComboBoxTiposAccionesFormaPagoPuntoVenta.addActionListener (new ButtonActionListener(this,"TiposAccionesFormaPagoPuntoVenta"));
					
		this.jComboBoxTiposSeleccionarFormaPagoPuntoVenta.addActionListener (new ButtonActionListener(this,"TiposSeleccionarFormaPagoPuntoVenta"));
			
		this.jTextFieldValorCampoGeneralFormaPagoPuntoVenta.addActionListener (new ButtonActionListener(this,"ValorCampoGeneralFormaPagoPuntoVenta"));		
		*/
		
		if(this.jInternalFrameDetalleFormFormaPagoPuntoVenta!=null) { //if(this.conCargarFormDetalle) {
		
		//CAMPO EVENTO
		this.jInternalFrameDetalleFormFormaPagoPuntoVenta.jTextFieldporcentajeFormaPagoPuntoVenta.addFocusListener(new TextFieldFocusListener(this,"porcentajeFormaPagoPuntoVenta"));
		this.jInternalFrameDetalleFormFormaPagoPuntoVenta.jTextFieldporcentajeFormaPagoPuntoVenta.addActionListener(new TextFieldActionListener(this,"porcentajeFormaPagoPuntoVenta"));
		//this.jInternalFrameDetalleFormFormaPagoPuntoVenta.jTextFieldporcentajeFormaPagoPuntoVenta.getDocument().addDocumentListener(new TextFieldDocumentListener(this,this.jTextFieldporcentajeFormaPagoPuntoVenta,"porcentajeFormaPagoPuntoVenta"));


		//CAMPO EVENTO
		this.jInternalFrameDetalleFormFormaPagoPuntoVenta.jTextFieldvalorFormaPagoPuntoVenta.addFocusListener(new TextFieldFocusListener(this,"valorFormaPagoPuntoVenta"));
		this.jInternalFrameDetalleFormFormaPagoPuntoVenta.jTextFieldvalorFormaPagoPuntoVenta.addActionListener(new TextFieldActionListener(this,"valorFormaPagoPuntoVenta"));
		//this.jInternalFrameDetalleFormFormaPagoPuntoVenta.jTextFieldvalorFormaPagoPuntoVenta.getDocument().addDocumentListener(new TextFieldDocumentListener(this,this.jTextFieldvalorFormaPagoPuntoVenta,"valorFormaPagoPuntoVenta"));


		//CAMPO EVENTO
		this.jInternalFrameDetalleFormFormaPagoPuntoVenta.jTextFieldnumero_dias_plazoFormaPagoPuntoVenta.addFocusListener(new TextFieldFocusListener(this,"numero_dias_plazoFormaPagoPuntoVenta"));
		this.jInternalFrameDetalleFormFormaPagoPuntoVenta.jTextFieldnumero_dias_plazoFormaPagoPuntoVenta.addActionListener(new TextFieldActionListener(this,"numero_dias_plazoFormaPagoPuntoVenta"));
		//this.jInternalFrameDetalleFormFormaPagoPuntoVenta.jTextFieldnumero_dias_plazoFormaPagoPuntoVenta.getDocument().addDocumentListener(new TextFieldDocumentListener(this,this.jTextFieldnumero_dias_plazoFormaPagoPuntoVenta,"numero_dias_plazoFormaPagoPuntoVenta"));


		
		
		//BUSQUEDA GENERAL
		this.jInternalFrameDetalleFormFormaPagoPuntoVenta.jButtonidFormaPagoPuntoVentaBusqueda.addActionListener(new ButtonActionListener(this,"idFormaPagoPuntoVentaBusqueda"));
		//ACTUALIZAR FK
		this.jInternalFrameDetalleFormFormaPagoPuntoVenta.jButtonid_empresaFormaPagoPuntoVentaUpdate.addActionListener(new ButtonActionListener(this,"id_empresaFormaPagoPuntoVentaUpdate"));
		//BUSQUEDA GENERAL
		this.jInternalFrameDetalleFormFormaPagoPuntoVenta.jButtonid_empresaFormaPagoPuntoVentaBusqueda.addActionListener(new ButtonActionListener(this,"id_empresaFormaPagoPuntoVentaBusqueda"));
		//ACTUALIZAR FK
		this.jInternalFrameDetalleFormFormaPagoPuntoVenta.jButtonid_sucursalFormaPagoPuntoVentaUpdate.addActionListener(new ButtonActionListener(this,"id_sucursalFormaPagoPuntoVentaUpdate"));
		//BUSQUEDA GENERAL
		this.jInternalFrameDetalleFormFormaPagoPuntoVenta.jButtonid_sucursalFormaPagoPuntoVentaBusqueda.addActionListener(new ButtonActionListener(this,"id_sucursalFormaPagoPuntoVentaBusqueda"));
		//ACTUALIZAR FK
		this.jInternalFrameDetalleFormFormaPagoPuntoVenta.jButtonid_ejercicioFormaPagoPuntoVentaUpdate.addActionListener(new ButtonActionListener(this,"id_ejercicioFormaPagoPuntoVentaUpdate"));
		//BUSQUEDA GENERAL
		this.jInternalFrameDetalleFormFormaPagoPuntoVenta.jButtonid_ejercicioFormaPagoPuntoVentaBusqueda.addActionListener(new ButtonActionListener(this,"id_ejercicioFormaPagoPuntoVentaBusqueda"));
		//ACTUALIZAR FK
		this.jInternalFrameDetalleFormFormaPagoPuntoVenta.jButtonid_periodoFormaPagoPuntoVentaUpdate.addActionListener(new ButtonActionListener(this,"id_periodoFormaPagoPuntoVentaUpdate"));
		//BUSQUEDA GENERAL
		this.jInternalFrameDetalleFormFormaPagoPuntoVenta.jButtonid_periodoFormaPagoPuntoVentaBusqueda.addActionListener(new ButtonActionListener(this,"id_periodoFormaPagoPuntoVentaBusqueda"));
		//ACTUALIZAR FK
		this.jInternalFrameDetalleFormFormaPagoPuntoVenta.jButtonid_factura_punto_ventaFormaPagoPuntoVentaUpdate.addActionListener(new ButtonActionListener(this,"id_factura_punto_ventaFormaPagoPuntoVentaUpdate"));
		//BUSQUEDA GENERAL
		this.jInternalFrameDetalleFormFormaPagoPuntoVenta.jButtonid_factura_punto_ventaFormaPagoPuntoVentaBusqueda.addActionListener(new ButtonActionListener(this,"id_factura_punto_ventaFormaPagoPuntoVentaBusqueda"));
		//ACTUALIZAR FK
		this.jInternalFrameDetalleFormFormaPagoPuntoVenta.jButtonid_tipo_forma_pagoFormaPagoPuntoVentaUpdate.addActionListener(new ButtonActionListener(this,"id_tipo_forma_pagoFormaPagoPuntoVentaUpdate"));
		//BUSQUEDA GENERAL
		this.jInternalFrameDetalleFormFormaPagoPuntoVenta.jButtonid_tipo_forma_pagoFormaPagoPuntoVentaBusqueda.addActionListener(new ButtonActionListener(this,"id_tipo_forma_pagoFormaPagoPuntoVentaBusqueda"));
		//BUSQUEDA GENERAL
		this.jInternalFrameDetalleFormFormaPagoPuntoVenta.jButtonporcentajeFormaPagoPuntoVentaBusqueda.addActionListener(new ButtonActionListener(this,"porcentajeFormaPagoPuntoVentaBusqueda"));
		//BUSQUEDA GENERAL
		this.jInternalFrameDetalleFormFormaPagoPuntoVenta.jButtonvalorFormaPagoPuntoVentaBusqueda.addActionListener(new ButtonActionListener(this,"valorFormaPagoPuntoVentaBusqueda"));
		//BUSQUEDA GENERAL
		this.jInternalFrameDetalleFormFormaPagoPuntoVenta.jButtonfechaFormaPagoPuntoVentaBusqueda.addActionListener(new ButtonActionListener(this,"fechaFormaPagoPuntoVentaBusqueda"));
		//BUSQUEDA GENERAL
		this.jInternalFrameDetalleFormFormaPagoPuntoVenta.jButtondescripcionFormaPagoPuntoVentaBusqueda.addActionListener(new ButtonActionListener(this,"descripcionFormaPagoPuntoVentaBusqueda"));
		//BUSQUEDA GENERAL
		this.jInternalFrameDetalleFormFormaPagoPuntoVenta.jButtonfecha_inicioFormaPagoPuntoVentaBusqueda.addActionListener(new ButtonActionListener(this,"fecha_inicioFormaPagoPuntoVentaBusqueda"));
		//BUSQUEDA GENERAL
		this.jInternalFrameDetalleFormFormaPagoPuntoVenta.jButtonnumero_dias_plazoFormaPagoPuntoVentaBusqueda.addActionListener(new ButtonActionListener(this,"numero_dias_plazoFormaPagoPuntoVentaBusqueda"));
		//BUSQUEDA GENERAL
		this.jInternalFrameDetalleFormFormaPagoPuntoVenta.jButtonfecha_finFormaPagoPuntoVentaBusqueda.addActionListener(new ButtonActionListener(this,"fecha_finFormaPagoPuntoVentaBusqueda"));
		//ACTUALIZAR FK
		this.jInternalFrameDetalleFormFormaPagoPuntoVenta.jButtonid_bancoFormaPagoPuntoVentaUpdate.addActionListener(new ButtonActionListener(this,"id_bancoFormaPagoPuntoVentaUpdate"));
		//BUSQUEDA GENERAL
		this.jInternalFrameDetalleFormFormaPagoPuntoVenta.jButtonid_bancoFormaPagoPuntoVentaBusqueda.addActionListener(new ButtonActionListener(this,"id_bancoFormaPagoPuntoVentaBusqueda"));
		//ACTUALIZAR FK
		this.jInternalFrameDetalleFormFormaPagoPuntoVenta.jButtonid_cuenta_banco_pun_venFormaPagoPuntoVentaUpdate.addActionListener(new ButtonActionListener(this,"id_cuenta_banco_pun_venFormaPagoPuntoVentaUpdate"));
		//BUSQUEDA GENERAL
		this.jInternalFrameDetalleFormFormaPagoPuntoVenta.jButtonid_cuenta_banco_pun_venFormaPagoPuntoVentaBusqueda.addActionListener(new ButtonActionListener(this,"id_cuenta_banco_pun_venFormaPagoPuntoVentaBusqueda"));
		//ACTUALIZAR FK
		this.jInternalFrameDetalleFormFormaPagoPuntoVenta.jButtonid_tipo_riesgo_chequeFormaPagoPuntoVentaUpdate.addActionListener(new ButtonActionListener(this,"id_tipo_riesgo_chequeFormaPagoPuntoVentaUpdate"));
		//BUSQUEDA GENERAL
		this.jInternalFrameDetalleFormFormaPagoPuntoVenta.jButtonid_tipo_riesgo_chequeFormaPagoPuntoVentaBusqueda.addActionListener(new ButtonActionListener(this,"id_tipo_riesgo_chequeFormaPagoPuntoVentaBusqueda"));
		//BUSQUEDA GENERAL
		this.jInternalFrameDetalleFormFormaPagoPuntoVenta.jButtonnumero_cuentaFormaPagoPuntoVentaBusqueda.addActionListener(new ButtonActionListener(this,"numero_cuentaFormaPagoPuntoVentaBusqueda"));
		//BUSQUEDA GENERAL
		this.jInternalFrameDetalleFormFormaPagoPuntoVenta.jButtonnumero_chequeFormaPagoPuntoVentaBusqueda.addActionListener(new ButtonActionListener(this,"numero_chequeFormaPagoPuntoVentaBusqueda"));
		//BUSQUEDA GENERAL
		this.jInternalFrameDetalleFormFormaPagoPuntoVenta.jButtongiradorFormaPagoPuntoVentaBusqueda.addActionListener(new ButtonActionListener(this,"giradorFormaPagoPuntoVentaBusqueda"));
		//ACTUALIZAR FK
		this.jInternalFrameDetalleFormFormaPagoPuntoVenta.jButtonid_banco_tarjetaFormaPagoPuntoVentaUpdate.addActionListener(new ButtonActionListener(this,"id_banco_tarjetaFormaPagoPuntoVentaUpdate"));
		//BUSQUEDA GENERAL
		this.jInternalFrameDetalleFormFormaPagoPuntoVenta.jButtonid_banco_tarjetaFormaPagoPuntoVentaBusqueda.addActionListener(new ButtonActionListener(this,"id_banco_tarjetaFormaPagoPuntoVentaBusqueda"));
		//ACTUALIZAR FK
		this.jInternalFrameDetalleFormFormaPagoPuntoVenta.jButtonid_tarjeta_creditoFormaPagoPuntoVentaUpdate.addActionListener(new ButtonActionListener(this,"id_tarjeta_creditoFormaPagoPuntoVentaUpdate"));
		//BUSQUEDA GENERAL
		this.jInternalFrameDetalleFormFormaPagoPuntoVenta.jButtonid_tarjeta_creditoFormaPagoPuntoVentaBusqueda.addActionListener(new ButtonActionListener(this,"id_tarjeta_creditoFormaPagoPuntoVentaBusqueda"));
		//ACTUALIZAR FK
		this.jInternalFrameDetalleFormFormaPagoPuntoVenta.jButtonid_tipo_interes_tarjetaFormaPagoPuntoVentaUpdate.addActionListener(new ButtonActionListener(this,"id_tipo_interes_tarjetaFormaPagoPuntoVentaUpdate"));
		//BUSQUEDA GENERAL
		this.jInternalFrameDetalleFormFormaPagoPuntoVenta.jButtonid_tipo_interes_tarjetaFormaPagoPuntoVentaBusqueda.addActionListener(new ButtonActionListener(this,"id_tipo_interes_tarjetaFormaPagoPuntoVentaBusqueda"));
		//ACTUALIZAR FK
		this.jInternalFrameDetalleFormFormaPagoPuntoVenta.jButtonid_tipo_pago_tarjetaFormaPagoPuntoVentaUpdate.addActionListener(new ButtonActionListener(this,"id_tipo_pago_tarjetaFormaPagoPuntoVentaUpdate"));
		//BUSQUEDA GENERAL
		this.jInternalFrameDetalleFormFormaPagoPuntoVenta.jButtonid_tipo_pago_tarjetaFormaPagoPuntoVentaBusqueda.addActionListener(new ButtonActionListener(this,"id_tipo_pago_tarjetaFormaPagoPuntoVentaBusqueda"));
		//ACTUALIZAR FK
		this.jInternalFrameDetalleFormFormaPagoPuntoVenta.jButtonid_conexionFormaPagoPuntoVentaUpdate.addActionListener(new ButtonActionListener(this,"id_conexionFormaPagoPuntoVentaUpdate"));
		//BUSQUEDA GENERAL
		this.jInternalFrameDetalleFormFormaPagoPuntoVenta.jButtonid_conexionFormaPagoPuntoVentaBusqueda.addActionListener(new ButtonActionListener(this,"id_conexionFormaPagoPuntoVentaBusqueda"));
		//ACTUALIZAR FK
		this.jInternalFrameDetalleFormFormaPagoPuntoVenta.jButtonid_mesFormaPagoPuntoVentaUpdate.addActionListener(new ButtonActionListener(this,"id_mesFormaPagoPuntoVentaUpdate"));
		//BUSQUEDA GENERAL
		this.jInternalFrameDetalleFormFormaPagoPuntoVenta.jButtonid_mesFormaPagoPuntoVentaBusqueda.addActionListener(new ButtonActionListener(this,"id_mesFormaPagoPuntoVentaBusqueda"));
		//BUSQUEDA GENERAL
		this.jInternalFrameDetalleFormFormaPagoPuntoVenta.jButtonnumeroFormaPagoPuntoVentaBusqueda.addActionListener(new ButtonActionListener(this,"numeroFormaPagoPuntoVentaBusqueda"));
		//BUSQUEDA GENERAL
		this.jInternalFrameDetalleFormFormaPagoPuntoVenta.jButtontarjeta_habienteFormaPagoPuntoVentaBusqueda.addActionListener(new ButtonActionListener(this,"tarjeta_habienteFormaPagoPuntoVentaBusqueda"));
		//BUSQUEDA GENERAL
		this.jInternalFrameDetalleFormFormaPagoPuntoVenta.jButtonautorizacionFormaPagoPuntoVentaBusqueda.addActionListener(new ButtonActionListener(this,"autorizacionFormaPagoPuntoVentaBusqueda"));
		//BUSQUEDA GENERAL
		this.jInternalFrameDetalleFormFormaPagoPuntoVenta.jButtonvoucherFormaPagoPuntoVentaBusqueda.addActionListener(new ButtonActionListener(this,"voucherFormaPagoPuntoVentaBusqueda"));
		//BUSQUEDA GENERAL
		this.jInternalFrameDetalleFormFormaPagoPuntoVenta.jButtonloteFormaPagoPuntoVentaBusqueda.addActionListener(new ButtonActionListener(this,"loteFormaPagoPuntoVentaBusqueda"));
		//BUSQUEDA GENERAL
		this.jInternalFrameDetalleFormFormaPagoPuntoVenta.jButtoncuotaFormaPagoPuntoVentaBusqueda.addActionListener(new ButtonActionListener(this,"cuotaFormaPagoPuntoVentaBusqueda"));
		//BUSQUEDA GENERAL
		this.jInternalFrameDetalleFormFormaPagoPuntoVenta.jButtonvalor_retencionFormaPagoPuntoVentaBusqueda.addActionListener(new ButtonActionListener(this,"valor_retencionFormaPagoPuntoVentaBusqueda"));
		//BUSQUEDA GENERAL
		this.jInternalFrameDetalleFormFormaPagoPuntoVenta.jButtonvalor_comisionFormaPagoPuntoVentaBusqueda.addActionListener(new ButtonActionListener(this,"valor_comisionFormaPagoPuntoVentaBusqueda"));
		//BUSQUEDA GENERAL
		this.jInternalFrameDetalleFormFormaPagoPuntoVenta.jButtonvalor_calculadoFormaPagoPuntoVentaBusqueda.addActionListener(new ButtonActionListener(this,"valor_calculadoFormaPagoPuntoVentaBusqueda"));
		//BUSQUEDA GENERAL
		this.jInternalFrameDetalleFormFormaPagoPuntoVenta.jButtonvalor_canceladoFormaPagoPuntoVentaBusqueda.addActionListener(new ButtonActionListener(this,"valor_canceladoFormaPagoPuntoVentaBusqueda"));
		//BUSQUEDA GENERAL
		this.jInternalFrameDetalleFormFormaPagoPuntoVenta.jButtonvalor_difiereFormaPagoPuntoVentaBusqueda.addActionListener(new ButtonActionListener(this,"valor_difiereFormaPagoPuntoVentaBusqueda"));
		//BUSQUEDA GENERAL
		this.jInternalFrameDetalleFormFormaPagoPuntoVenta.jButtonnumero_retencionFormaPagoPuntoVentaBusqueda.addActionListener(new ButtonActionListener(this,"numero_retencionFormaPagoPuntoVentaBusqueda"));
		//BUSQUEDA GENERAL
		this.jInternalFrameDetalleFormFormaPagoPuntoVenta.jButtonnumero_liquidacionFormaPagoPuntoVentaBusqueda.addActionListener(new ButtonActionListener(this,"numero_liquidacionFormaPagoPuntoVentaBusqueda"));
		//ACTUALIZAR FK
		this.jInternalFrameDetalleFormFormaPagoPuntoVenta.jButtonid_anioFormaPagoPuntoVentaUpdate.addActionListener(new ButtonActionListener(this,"id_anioFormaPagoPuntoVentaUpdate"));
		//BUSQUEDA GENERAL
		this.jInternalFrameDetalleFormFormaPagoPuntoVenta.jButtonid_anioFormaPagoPuntoVentaBusqueda.addActionListener(new ButtonActionListener(this,"id_anioFormaPagoPuntoVentaBusqueda"));
		//jButtonid_cuenta_contableFormaPagoPuntoVenta.addActionListener (
		//	new java.awt.event.ActionListener() {
		//		public void actionPerformed(java.awt.event.ActionEvent evt) {
		//			jButtonid_cuenta_contableFormaPagoPuntoVentaActionPerformed(evt);
		//		}
		//	}
		//);

		//BUSQUEDA CAMPO
		this.jInternalFrameDetalleFormFormaPagoPuntoVenta.jButtonid_cuenta_contableFormaPagoPuntoVenta.addActionListener(new ButtonActionListener(this,"id_cuenta_contableFormaPagoPuntoVenta"));
		//jButtonid_cuenta_contableFormaPagoPuntoVentaArbol.addActionListener (
		//	new java.awt.event.ActionListener() {
		//		public void actionPerformed(java.awt.event.ActionEvent evt) {
		//			abrirFrameTreeCuentaContable("BUSQUEDA_FK");
		//		}
		//	}
		//);

		//BUSQUEDA ARBOL CAMPO
		this.jInternalFrameDetalleFormFormaPagoPuntoVenta.jButtonid_cuenta_contableFormaPagoPuntoVentaArbol.addActionListener(new ButtonActionListener(this,"id_cuenta_contableFormaPagoPuntoVentaArbol"));
		//ACTUALIZAR FK
		this.jInternalFrameDetalleFormFormaPagoPuntoVenta.jButtonid_cuenta_contableFormaPagoPuntoVentaUpdate.addActionListener(new ButtonActionListener(this,"id_cuenta_contableFormaPagoPuntoVentaUpdate"));
		//BUSQUEDA GENERAL
		this.jInternalFrameDetalleFormFormaPagoPuntoVenta.jButtonid_cuenta_contableFormaPagoPuntoVentaBusqueda.addActionListener(new ButtonActionListener(this,"id_cuenta_contableFormaPagoPuntoVentaBusqueda"));
		//jButtonid_asiento_contableFormaPagoPuntoVenta.addActionListener (
		//	new java.awt.event.ActionListener() {
		//		public void actionPerformed(java.awt.event.ActionEvent evt) {
		//			jButtonid_asiento_contableFormaPagoPuntoVentaActionPerformed(evt);
		//		}
		//	}
		//);

		//BUSQUEDA CAMPO
		this.jInternalFrameDetalleFormFormaPagoPuntoVenta.jButtonid_asiento_contableFormaPagoPuntoVenta.addActionListener(new ButtonActionListener(this,"id_asiento_contableFormaPagoPuntoVenta"));
		//ACTUALIZAR FK
		this.jInternalFrameDetalleFormFormaPagoPuntoVenta.jButtonid_asiento_contableFormaPagoPuntoVentaUpdate.addActionListener(new ButtonActionListener(this,"id_asiento_contableFormaPagoPuntoVentaUpdate"));
		//BUSQUEDA GENERAL
		this.jInternalFrameDetalleFormFormaPagoPuntoVenta.jButtonid_asiento_contableFormaPagoPuntoVentaBusqueda.addActionListener(new ButtonActionListener(this,"id_asiento_contableFormaPagoPuntoVentaBusqueda"));
		}
		
		if(!this.conCargarMinimo) {
		//BYDAN_BUSQUEDAS
		/*
		
			this.jButtonFK_IdAsientoContableFormaPagoPuntoVenta.addActionListener(new ButtonActionListener(this,"FK_IdAsientoContableFormaPagoPuntoVenta"));

			this.jButtonBuscarFK_IdAsientoContableid_asiento_contableFormaPagoPuntoVenta.addActionListener(new ButtonActionListener(this,"id_asiento_contableFormaPagoPuntoVenta"));

			this.jButtonFK_IdBancoFormaPagoPuntoVenta.addActionListener(new ButtonActionListener(this,"FK_IdBancoFormaPagoPuntoVenta"));

			this.jButtonFK_IdBancoTarjetaFormaPagoPuntoVenta.addActionListener(new ButtonActionListener(this,"FK_IdBancoTarjetaFormaPagoPuntoVenta"));

			this.jButtonFK_IdConexionFormaPagoPuntoVenta.addActionListener(new ButtonActionListener(this,"FK_IdConexionFormaPagoPuntoVenta"));

			this.jButtonFK_IdCuentaBancoPunVenFormaPagoPuntoVenta.addActionListener(new ButtonActionListener(this,"FK_IdCuentaBancoPunVenFormaPagoPuntoVenta"));

			this.jButtonFK_IdCuentaContableFormaPagoPuntoVenta.addActionListener(new ButtonActionListener(this,"FK_IdCuentaContableFormaPagoPuntoVenta"));

			this.jButtonBuscarFK_IdCuentaContableid_cuenta_contableFormaPagoPuntoVenta.addActionListener(new ButtonActionListener(this,"id_cuenta_contableFormaPagoPuntoVenta"));

			this.jButtonFK_IdFacturaPuntoVentaFormaPagoPuntoVenta.addActionListener(new ButtonActionListener(this,"FK_IdFacturaPuntoVentaFormaPagoPuntoVenta"));

			this.jButtonFK_IdTarjetaCreditoFormaPagoPuntoVenta.addActionListener(new ButtonActionListener(this,"FK_IdTarjetaCreditoFormaPagoPuntoVenta"));

			this.jButtonFK_IdTipoFormaPagoFormaPagoPuntoVenta.addActionListener(new ButtonActionListener(this,"FK_IdTipoFormaPagoFormaPagoPuntoVenta"));

			this.jButtonFK_IdTipoInteresTarjetaFormaPagoPuntoVenta.addActionListener(new ButtonActionListener(this,"FK_IdTipoInteresTarjetaFormaPagoPuntoVenta"));

			this.jButtonFK_IdTipoPagoTarjetaFormaPagoPuntoVenta.addActionListener(new ButtonActionListener(this,"FK_IdTipoPagoTarjetaFormaPagoPuntoVenta"));

			this.jButtonFK_IdTipoRiesgoChequeFormaPagoPuntoVenta.addActionListener(new ButtonActionListener(this,"FK_IdTipoRiesgoChequeFormaPagoPuntoVenta"));
		
		*/
		
			//REPORTE DINAMICO
			/*
			if(this.jInternalFrameReporteDinamicoFormaPagoPuntoVenta!=null) {
				this.jInternalFrameReporteDinamicoFormaPagoPuntoVenta.getjButtonCerrarReporteDinamico().addActionListener (new ButtonActionListener(this,"CerrarReporteDinamicoFormaPagoPuntoVenta"));
				this.jInternalFrameReporteDinamicoFormaPagoPuntoVenta.getjButtonGenerarReporteDinamico().addActionListener (new ButtonActionListener(this,"GenerarReporteDinamicoFormaPagoPuntoVenta"));
				this.jInternalFrameReporteDinamicoFormaPagoPuntoVenta.getjButtonGenerarExcelReporteDinamico().addActionListener (new ButtonActionListener(this,"GenerarExcelReporteDinamicoFormaPagoPuntoVenta"));
			}
			
			//this.jButtonCerrarReporteDinamicoFormaPagoPuntoVenta.addActionListener (new ButtonActionListener(this,"CerrarReporteDinamicoFormaPagoPuntoVenta"));				
			//this.jButtonGenerarReporteDinamicoFormaPagoPuntoVenta.addActionListener (new ButtonActionListener(this,"GenerarReporteDinamicoFormaPagoPuntoVenta"));
			//this.jButtonGenerarExcelReporteDinamicoFormaPagoPuntoVenta.addActionListener (new ButtonActionListener(this,"GenerarExcelReporteDinamicoFormaPagoPuntoVenta"));
				
				
			//IMPORTACION			
			if(this.jInternalFrameImportacionFormaPagoPuntoVenta!=null) {
				this.jInternalFrameImportacionFormaPagoPuntoVenta.getjButtonCerrarImportacion().addActionListener (new ButtonActionListener(this,"CerrarImportacionFormaPagoPuntoVenta"));
				this.jInternalFrameImportacionFormaPagoPuntoVenta.getjButtonGenerarImportacion().addActionListener (new ButtonActionListener(this,"GenerarImportacionFormaPagoPuntoVenta"));
				this.jInternalFrameImportacionFormaPagoPuntoVenta.getjButtonAbrirImportacion().addActionListener (new ButtonActionListener(this,"AbrirImportacionFormaPagoPuntoVenta"));
			}
			
			//ORDER BY
			this.jButtonAbrirOrderByFormaPagoPuntoVenta.addActionListener (new ButtonActionListener(this,"AbrirOrderByFormaPagoPuntoVenta"));
			
			this.jButtonAbrirOrderByToolBarFormaPagoPuntoVenta.addActionListener (new ButtonActionListener(this,"AbrirOrderByToolBarFormaPagoPuntoVenta"));			
			
			if(this.jInternalFrameOrderByFormaPagoPuntoVenta!=null) {
				this.jInternalFrameOrderByFormaPagoPuntoVenta.getjButtonCerrarOrderBy().addActionListener (new ButtonActionListener(this,"CerrarOrderByFormaPagoPuntoVenta"));				
			}
			*/
			
		}
		
		
		
		if(!this.conCargarMinimo) {
			if(this.jInternalFrameDetalleFormFormaPagoPuntoVenta!=null) { //if(this.conCargarFormDetalle) {
			;
			}
		}
		
		
		//TABBED PANE RELACIONES
		if(this.jInternalFrameDetalleFormFormaPagoPuntoVenta!=null) { //if(this.conCargarFormDetalle) {
			this.jInternalFrameDetalleFormFormaPagoPuntoVenta.jTabbedPaneRelacionesFormaPagoPuntoVenta.addChangeListener(new TabbedPaneChangeListener(this,"RelacionesFormaPagoPuntoVenta"));
		
		;
		}
		//TABBED PANE RELACIONES FIN(EXTRA TAB)		
	}
	
	/*
	public void initActions() {
		String sMapKey = "";
		InputMap inputMap =null;
		
		this.addInternalFrameListener(new javax.swing.event.InternalFrameAdapter() {
            public void internalFrameClosing(InternalFrameEvent event) {          	
            	try {
            		closingInternalFrameFormaPagoPuntoVenta();
				} catch (Exception e) {
					e.printStackTrace();
				}
            }
        });
		
		this.jInternalFrameDetalleFormFormaPagoPuntoVenta.addInternalFrameListener(new javax.swing.event.InternalFrameAdapter() {
	        public void internalFrameClosing(InternalFrameEvent event) {
	            JInternalFrameBase jInternalFrameDetalleFormFormaPagoPuntoVenta = (JInternalFrameBase)event.getSource();
	            	
	            FormaPagoPuntoVentaBeanSwingJInternalFrame jInternalFrameParent=(FormaPagoPuntoVentaBeanSwingJInternalFrame)jInternalFrameDetalleFormFormaPagoPuntoVenta.getjInternalFrameParent();
	                
	            try {
					jInternalFrameParent.jButtonCancelarFormaPagoPuntoVentaActionPerformed(null);
					
					//jInternalFrameParent.dispose();
					//jInternalFrameParent=null;
					
				} catch (Exception e) {
					e.printStackTrace();
				}
	        }
	    });
			
		this.jTableDatosFormaPagoPuntoVenta.getSelectionModel().addListSelectionListener (
	                new ListSelectionListener() {
	                    public void valueChanged(ListSelectionEvent e) {
							//BYDAN_DESHABILITADO
	                    	//try {jTableDatosFormaPagoPuntoVentaListSelectionListener(e);}catch(Exception e1){e1.printStackTrace();}
	                    }
	                }
	     );
		
		this.jTableDatosFormaPagoPuntoVenta.addMouseListener(new MouseAdapter() {
			   public void mouseClicked(MouseEvent evt) {
				      if (evt.getClickCount() == 2) {
				    	  jButtonIdActionPerformed(null,jTableDatosFormaPagoPuntoVenta.getSelectedRow(),false,false);
				      }
				   }
		});
		
		this.jButtonNuevoFormaPagoPuntoVenta.addActionListener (
	          new java.awt.event.ActionListener() {
	              public void actionPerformed(ActionEvent evt) {
	            	  try {jButtonNuevoFormaPagoPuntoVentaActionPerformed(evt,false);}catch(Exception e){e.printStackTrace();}
	              }
	          }
        );
		
		this.jButtonNuevoToolBarFormaPagoPuntoVenta.addActionListener (
	          new java.awt.event.ActionListener() {
	              public void actionPerformed(ActionEvent evt) {
	            	  try {jButtonNuevoFormaPagoPuntoVentaActionPerformed(evt,false);}catch(Exception e){e.printStackTrace();}
	              }
	          }
        );
		
		this.jMenuItemNuevoFormaPagoPuntoVenta.addActionListener (
	          new java.awt.event.ActionListener() {
	              public void actionPerformed(ActionEvent evt) {
	            	  try {jButtonNuevoFormaPagoPuntoVentaActionPerformed(evt,false);}catch(Exception e){e.printStackTrace();}
	              }
	          }
        );
		
		sMapKey = "NuevoFormaPagoPuntoVenta";
		inputMap = this.jButtonNuevoFormaPagoPuntoVenta.getInputMap(JComponent.WHEN_IN_FOCUSED_WINDOW);
		inputMap.put(KeyStroke.getKeyStroke(KeyEvent.VK_N , KeyEvent.CTRL_MASK), sMapKey);
			
		this.jButtonNuevoFormaPagoPuntoVenta.getActionMap().put(sMapKey, new AbstractAction() {
			public static final long serialVersionUID = 1L;
			public void actionPerformed(ActionEvent evt) {
			    try {jButtonNuevoFormaPagoPuntoVentaActionPerformed(evt,false);} catch (Exception e) {e.printStackTrace();}
			}
		});
		
		this.jButtonNuevoRelacionesFormaPagoPuntoVenta.addActionListener (
	          new java.awt.event.ActionListener() {
	              public void actionPerformed(ActionEvent evt) {
	            	  try {jButtonNuevoFormaPagoPuntoVentaActionPerformed(evt,true);}catch(Exception e){e.printStackTrace();}
	              }
	          }
        );
		
		this.jButtonNuevoRelacionesToolBarFormaPagoPuntoVenta.addActionListener (
	          new java.awt.event.ActionListener() {
	              public void actionPerformed(ActionEvent evt) {
	            	  try {jButtonNuevoFormaPagoPuntoVentaActionPerformed(evt,true);}catch(Exception e){e.printStackTrace();}
	              }
	          }
        );
		
		this.jMenuItemNuevoRelacionesFormaPagoPuntoVenta.addActionListener (
	          new java.awt.event.ActionListener() {
	              public void actionPerformed(ActionEvent evt) {
	            	  try {jButtonNuevoFormaPagoPuntoVentaActionPerformed(evt,true);}catch(Exception e){e.printStackTrace();}
	              }
	          }
        );
		
		sMapKey = "NuevoRelacionesFormaPagoPuntoVenta";
		inputMap = this.jButtonNuevoRelacionesFormaPagoPuntoVenta.getInputMap(JComponent.WHEN_IN_FOCUSED_WINDOW);
		inputMap.put(KeyStroke.getKeyStroke(KeyEvent.VK_R , KeyEvent.CTRL_MASK), sMapKey);
			
		this.jButtonNuevoRelacionesFormaPagoPuntoVenta.getActionMap().put(sMapKey, new AbstractAction() {
			public static final long serialVersionUID = 1L;
			public void actionPerformed(ActionEvent evt) {
			    try {jButtonNuevoFormaPagoPuntoVentaActionPerformed(evt,true);} catch (Exception e) {e.printStackTrace();}
			}
		});
		
		this.jButtonModificarFormaPagoPuntoVenta.addActionListener (
	          new java.awt.event.ActionListener() {
	              public void actionPerformed(ActionEvent evt) {
	            	  try {jButtonModificarFormaPagoPuntoVentaActionPerformed(evt);}catch(Exception e){e.printStackTrace();}
	              }
	          }
        );
		
		this.jButtonModificarToolBarFormaPagoPuntoVenta.addActionListener (
	          new java.awt.event.ActionListener() {
	              public void actionPerformed(ActionEvent evt) {
	            	  try {jButtonModificarFormaPagoPuntoVentaActionPerformed(evt);}catch(Exception e){e.printStackTrace();}
	              }
	          }
        );
		
		this.jMenuItemModificarFormaPagoPuntoVenta.addActionListener (
	          new java.awt.event.ActionListener() {
	              public void actionPerformed(ActionEvent evt) {
	            	  try {jButtonModificarFormaPagoPuntoVentaActionPerformed(evt);}catch(Exception e){e.printStackTrace();}
	              }
	          }
        );
		
		sMapKey = "ModificarFormaPagoPuntoVenta";
		inputMap = this.jButtonModificarFormaPagoPuntoVenta.getInputMap(JComponent.WHEN_IN_FOCUSED_WINDOW);
		inputMap.put(KeyStroke.getKeyStroke(KeyEvent.VK_M , KeyEvent.CTRL_MASK), sMapKey);
			
		this.jButtonModificarFormaPagoPuntoVenta.getActionMap().put(sMapKey, new AbstractAction() {
			public static final long serialVersionUID = 1L;
			public void actionPerformed(ActionEvent evt) {
			    try {jButtonModificarFormaPagoPuntoVentaActionPerformed(evt);} catch (Exception e) {e.printStackTrace();}
			}
		});
		
		this.jButtonActualizarFormaPagoPuntoVenta.addActionListener (
	          new java.awt.event.ActionListener() {
	              public void actionPerformed(ActionEvent evt) {
	            	  try {jButtonActualizarFormaPagoPuntoVentaActionPerformed(evt);}catch(Exception e){e.printStackTrace();}
	              }
	          }
        );
		
		this.jButtonActualizarToolBarFormaPagoPuntoVenta.addActionListener (
	          new java.awt.event.ActionListener() {
	              public void actionPerformed(ActionEvent evt) {
	            	  try {jButtonActualizarFormaPagoPuntoVentaActionPerformed(evt);}catch(Exception e){e.printStackTrace();}
	              }
	          }
        );
		
		this.jMenuItemActualizarFormaPagoPuntoVenta.addActionListener (
	          new java.awt.event.ActionListener() {
	              public void actionPerformed(ActionEvent evt) {
	            	  try {jButtonActualizarFormaPagoPuntoVentaActionPerformed(evt);}catch(Exception e){e.printStackTrace();}
	              }
	          }
        );
		
		sMapKey = "ActualizarFormaPagoPuntoVenta";
		inputMap = this.jButtonActualizarFormaPagoPuntoVenta.getInputMap(JComponent.WHEN_IN_FOCUSED_WINDOW);
		inputMap.put(KeyStroke.getKeyStroke(KeyEvent.VK_G , KeyEvent.CTRL_MASK), sMapKey);
			
		this.jButtonActualizarFormaPagoPuntoVenta.getActionMap().put(sMapKey, new AbstractAction() {
			public static final long serialVersionUID = 1L;
			public void actionPerformed(ActionEvent evt) {
			    try {jButtonActualizarFormaPagoPuntoVentaActionPerformed(evt);} catch (Exception e) {e.printStackTrace();}
			}
		});
		
		this.jButtonEliminarFormaPagoPuntoVenta.addActionListener (
	          new java.awt.event.ActionListener() {
	              public void actionPerformed(ActionEvent evt) {
	            	  try {jButtonEliminarFormaPagoPuntoVentaActionPerformed(evt);}catch(Exception e){e.printStackTrace();}
	              }
	          }
        );
		
		this.jButtonEliminarToolBarFormaPagoPuntoVenta.addActionListener (
	          new java.awt.event.ActionListener() {
	              public void actionPerformed(ActionEvent evt) {
	            	  try {jButtonEliminarFormaPagoPuntoVentaActionPerformed(evt);}catch(Exception e){e.printStackTrace();}
	              }
	          }
        );
				
		this.jMenuItemEliminarFormaPagoPuntoVenta.addActionListener (
	          new java.awt.event.ActionListener() {
	              public void actionPerformed(ActionEvent evt) {
	            	  try {jButtonEliminarFormaPagoPuntoVentaActionPerformed(evt);}catch(Exception e){e.printStackTrace();}
	              }
	          }
        );
		
		sMapKey = "EliminarFormaPagoPuntoVenta";
		inputMap = this.jButtonEliminarFormaPagoPuntoVenta.getInputMap(JComponent.WHEN_IN_FOCUSED_WINDOW);
		inputMap.put(KeyStroke.getKeyStroke(KeyEvent.VK_E , KeyEvent.CTRL_MASK), sMapKey);
			
		this.jButtonEliminarFormaPagoPuntoVenta.getActionMap().put(sMapKey, new AbstractAction() {
			public static final long serialVersionUID = 1L;
			public void actionPerformed(ActionEvent evt) {
			    try {jButtonEliminarFormaPagoPuntoVentaActionPerformed(evt);} catch (Exception e) {e.printStackTrace();}
			}
		});
		
		this.jButtonCancelarFormaPagoPuntoVenta.addActionListener (
	          new java.awt.event.ActionListener() {
	              public void actionPerformed(ActionEvent evt) {
	            	  try {jButtonCancelarFormaPagoPuntoVentaActionPerformed(evt);}catch(Exception e){e.printStackTrace();}
	              }
	          }
        );
		
		this.jButtonCancelarToolBarFormaPagoPuntoVenta.addActionListener (
	          new java.awt.event.ActionListener() {
	              public void actionPerformed(ActionEvent evt) {
	            	  try {jButtonCancelarFormaPagoPuntoVentaActionPerformed(evt);}catch(Exception e){e.printStackTrace();}
	              }
	          }
        );
		
		this.jMenuItemCancelarFormaPagoPuntoVenta.addActionListener (
	          new java.awt.event.ActionListener() {
	              public void actionPerformed(ActionEvent evt) {
	            	  try {jButtonCancelarFormaPagoPuntoVentaActionPerformed(evt);}catch(Exception e){e.printStackTrace();}
	              }
	          }
        );
		
		sMapKey = "CancelarFormaPagoPuntoVenta";
		inputMap = this.jButtonCancelarFormaPagoPuntoVenta.getInputMap(JComponent.WHEN_IN_FOCUSED_WINDOW);
		inputMap.put(KeyStroke.getKeyStroke(KeyEvent.VK_Q , KeyEvent.CTRL_MASK), sMapKey);
			
		this.jButtonCancelarFormaPagoPuntoVenta.getActionMap().put(sMapKey, new AbstractAction() {
			public static final long serialVersionUID = 1L;
			public void actionPerformed(ActionEvent evt) {
			    try {jButtonCancelarFormaPagoPuntoVentaActionPerformed(evt);} catch (Exception e) {e.printStackTrace();}
			}
		});
		
		this.jButtonCerrarFormaPagoPuntoVenta.addActionListener (
	          new java.awt.event.ActionListener() {
	              public void actionPerformed(ActionEvent evt) {
	            	  try {jButtonCerrarFormaPagoPuntoVentaActionPerformed(evt);}catch(Exception e){e.printStackTrace();}
	              }
	          }
        );
		
		this.jButtonCerrarToolBarFormaPagoPuntoVenta.addActionListener (
	          new java.awt.event.ActionListener() {
	              public void actionPerformed(ActionEvent evt) {
	            	  try {jButtonCerrarFormaPagoPuntoVentaActionPerformed(evt);}catch(Exception e){e.printStackTrace();}
	              }
	          }
        );
		
		this.jMenuItemCerrarFormaPagoPuntoVenta.addActionListener (
	          new java.awt.event.ActionListener() {
	              public void actionPerformed(ActionEvent evt) {
	            	  try {jButtonCerrarFormaPagoPuntoVentaActionPerformed(evt);}catch(Exception e){e.printStackTrace();}
	              }
	          }
        );
		
		this.jMenuItemDetalleCerrarFormaPagoPuntoVenta.addActionListener (
	          new java.awt.event.ActionListener() {
	              public void actionPerformed(ActionEvent evt) {
	            	  //try {jButtonCerrarFormaPagoPuntoVentaActionPerformed(evt);}catch(Exception e){e.printStackTrace();}
					try {jButtonCancelarFormaPagoPuntoVentaActionPerformed(evt);}catch(Exception e){e.printStackTrace();}
	              }
	          }
        );
		
		sMapKey = "CerrarFormaPagoPuntoVenta";
		inputMap = this.jButtonCerrarFormaPagoPuntoVenta.getInputMap(JComponent.WHEN_IN_FOCUSED_WINDOW);
		inputMap.put(KeyStroke.getKeyStroke(KeyEvent.VK_C , KeyEvent.ALT_MASK), sMapKey);
			
		this.jButtonCerrarFormaPagoPuntoVenta.getActionMap().put(sMapKey, new AbstractAction() {
			public static final long serialVersionUID = 1L;
			public void actionPerformed(ActionEvent evt) {
			    try {jButtonCerrarFormaPagoPuntoVentaActionPerformed(evt);} catch (Exception e) {e.printStackTrace();}
			}
		});
		
		this.jInternalFrameDetalleFormFormaPagoPuntoVenta.jButtonGuardarCambiosFormaPagoPuntoVenta.addActionListener (
	          new java.awt.event.ActionListener() {
	              public void actionPerformed(ActionEvent evt) {
	            	  try {jButtonGuardarCambiosFormaPagoPuntoVentaActionPerformed(evt);}catch(Exception e){e.printStackTrace();}
	              }
	          }
        );
		
		this.jButtonGuardarCambiosToolBarFormaPagoPuntoVenta.addActionListener (
	          new java.awt.event.ActionListener() {
	              public void actionPerformed(ActionEvent evt) {
	            	  try {jButtonGuardarCambiosFormaPagoPuntoVentaActionPerformed(evt);}catch(Exception e){e.printStackTrace();}
	              }
	          }
        );
		
		this.jMenuItemGuardarCambiosFormaPagoPuntoVenta.addActionListener (
	          new java.awt.event.ActionListener() {
	              public void actionPerformed(ActionEvent evt) {
	            	  try {jButtonGuardarCambiosFormaPagoPuntoVentaActionPerformed(evt);}catch(Exception e){e.printStackTrace();}
	              }
	          }
        );
		
		this.jButtonGuardarCambiosTablaFormaPagoPuntoVenta.addActionListener (
	          new java.awt.event.ActionListener() {
	              public void actionPerformed(ActionEvent evt) {
	            	  try {jButtonGuardarCambiosFormaPagoPuntoVentaActionPerformed(evt);}catch(Exception e){e.printStackTrace();}
	              }
	          }
        );
		
		this.jButtonGuardarCambiosTablaToolBarFormaPagoPuntoVenta.addActionListener (
	          new java.awt.event.ActionListener() {
	              public void actionPerformed(ActionEvent evt) {
	            	  try {jButtonGuardarCambiosFormaPagoPuntoVentaActionPerformed(evt);}catch(Exception e){e.printStackTrace();}
	              }
	          }
        );
		
		this.jMenuItemGuardarCambiosTablaFormaPagoPuntoVenta.addActionListener (
	          new java.awt.event.ActionListener() {
	              public void actionPerformed(ActionEvent evt) {
	            	  try {jButtonGuardarCambiosFormaPagoPuntoVentaActionPerformed(evt);}catch(Exception e){e.printStackTrace();}
	              }
	          }
        );
		
		sMapKey = "GuardarCambiosFormaPagoPuntoVenta";
		inputMap = this.jInternalFrameDetalleFormFormaPagoPuntoVenta.jButtonGuardarCambiosFormaPagoPuntoVenta.getInputMap(JComponent.WHEN_IN_FOCUSED_WINDOW);
		inputMap.put(KeyStroke.getKeyStroke(KeyEvent.VK_G , KeyEvent.CTRL_MASK), sMapKey);
			
		this.jInternalFrameDetalleFormFormaPagoPuntoVenta.jButtonGuardarCambiosFormaPagoPuntoVenta.getActionMap().put(sMapKey, new AbstractAction() {
			public static final long serialVersionUID = 1L;
			public void actionPerformed(ActionEvent evt) {
			    try {jButtonGuardarCambiosFormaPagoPuntoVentaActionPerformed(evt);} catch (Exception e) {e.printStackTrace();}
			}
		});
		
		this.jButtonRecargarInformacionFormaPagoPuntoVenta.addActionListener (
	          new java.awt.event.ActionListener() {
	              public void actionPerformed(ActionEvent evt) {
	            	  try {jButtonRecargarInformacionFormaPagoPuntoVentaActionPerformed(evt);}catch(Exception e){e.printStackTrace();}
	              }
	          }
        );
		
		this.jButtonRecargarInformacionToolBarFormaPagoPuntoVenta.addActionListener (
	          new java.awt.event.ActionListener() {
	              public void actionPerformed(ActionEvent evt) {
	            	  try {jButtonRecargarInformacionFormaPagoPuntoVentaActionPerformed(evt);}catch(Exception e){e.printStackTrace();}
	              }
	          }
        );
		
		this.jMenuItemRecargarInformacionFormaPagoPuntoVenta.addActionListener (
	          new java.awt.event.ActionListener() {
	              public void actionPerformed(ActionEvent evt) {
	            	  try {jButtonRecargarInformacionFormaPagoPuntoVentaActionPerformed(evt);}catch(Exception e){e.printStackTrace();}
	              }
	          }
        );
		
		
		this.jButtonAnterioresFormaPagoPuntoVenta.addActionListener (
	          new java.awt.event.ActionListener() {
	              public void actionPerformed(ActionEvent evt) {
	            	  try {jButtonAnterioresFormaPagoPuntoVentaActionPerformed(evt);}catch(Exception e){e.printStackTrace();}
	              }
	          }
        );
		
		this.jButtonAnterioresToolBarFormaPagoPuntoVenta.addActionListener (
	          new java.awt.event.ActionListener() {
	              public void actionPerformed(ActionEvent evt) {
	            	  try {jButtonAnterioresFormaPagoPuntoVentaActionPerformed(evt);}catch(Exception e){e.printStackTrace();}
	              }
	          }
        );
		
		this.jMenuItemAnterioresFormaPagoPuntoVenta.addActionListener (
	          new java.awt.event.ActionListener() {
	              public void actionPerformed(ActionEvent evt) {
	            	  try {jButtonAnterioresFormaPagoPuntoVentaActionPerformed(evt);}catch(Exception e){e.printStackTrace();}
	              }
	          }
        );
		
		this.jButtonSiguientesFormaPagoPuntoVenta.addActionListener (
	          new java.awt.event.ActionListener() {
	              public void actionPerformed(ActionEvent evt) {
	            	  try {jButtonSiguientesFormaPagoPuntoVentaActionPerformed(evt);}catch(Exception e){e.printStackTrace();}
	              }
	          }
        );
		
		this.jButtonSiguientesToolBarFormaPagoPuntoVenta.addActionListener (
	          new java.awt.event.ActionListener() {
	              public void actionPerformed(ActionEvent evt) {
	            	  try {jButtonSiguientesFormaPagoPuntoVentaActionPerformed(evt);}catch(Exception e){e.printStackTrace();}
	              }
	          }
        );
		
		this.jMenuItemSiguientesFormaPagoPuntoVenta.addActionListener (
	          new java.awt.event.ActionListener() {
	              public void actionPerformed(ActionEvent evt) {
	            	  try {jButtonSiguientesFormaPagoPuntoVentaActionPerformed(evt);}catch(Exception e){e.printStackTrace();}
	              }
	          }
        );
		
		this.jButtonNuevoGuardarCambiosFormaPagoPuntoVenta.addActionListener (
	          new java.awt.event.ActionListener() {
	              public void actionPerformed(ActionEvent evt) {
	            	  try {jButtonNuevoGuardarCambiosFormaPagoPuntoVentaActionPerformed(evt);}catch(Exception e){e.printStackTrace();}
	              }
	          }
        );
		
		this.jButtonNuevoGuardarCambiosToolBarFormaPagoPuntoVenta.addActionListener (
	          new java.awt.event.ActionListener() {
	              public void actionPerformed(ActionEvent evt) {
	            	  try {jButtonNuevoGuardarCambiosFormaPagoPuntoVentaActionPerformed(evt);}catch(Exception e){e.printStackTrace();}
	              }
	          }
        );
		
		this.jMenuItemNuevoGuardarCambiosFormaPagoPuntoVenta.addActionListener (
	          new java.awt.event.ActionListener() {
	              public void actionPerformed(ActionEvent evt) {
	            	  try {jButtonNuevoGuardarCambiosFormaPagoPuntoVentaActionPerformed(evt);}catch(Exception e){e.printStackTrace();}
	              }
	          }
        );
		
		
		//SELECCIONAR TODOS
		this.jCheckBoxSeleccionarTodosFormaPagoPuntoVenta.addItemListener(new ItemListener() {		
			public void itemStateChanged(ItemEvent evt) {
				try {jCheckBoxSeleccionarTodosFormaPagoPuntoVentaItemListener(evt);}catch(Exception e){e.printStackTrace();}
			}
		});

		this.jComboBoxTiposAccionesFormaPagoPuntoVenta.addActionListener (new ActionListener () {
			public void actionPerformed(ActionEvent e) {
				try {jComboBoxTiposAccionesFormaPagoPuntoVentaActionListener(e);} catch (Exception e1) { e1.printStackTrace();}
			};
		});
		
		this.jComboBoxTiposSeleccionarFormaPagoPuntoVenta.addActionListener (new ActionListener () {
			public void actionPerformed(ActionEvent e) {
				try {jComboBoxTiposSeleccionarFormaPagoPuntoVentaActionListener(e);} catch (Exception e1) { e1.printStackTrace();}
			};
		});
		
		this.jTextFieldValorCampoGeneralFormaPagoPuntoVenta.addActionListener (new ActionListener () {
			public void actionPerformed(ActionEvent e) {
				try {jTextFieldValorCampoGeneralFormaPagoPuntoVentaActionListener(e);} catch (Exception e1) { e1.printStackTrace();}
			};
		});
		
		
		//BUSQUEDA GENERAL
		this.jInternalFrameDetalleFormFormaPagoPuntoVenta.jButtonidFormaPagoPuntoVentaBusqueda.addActionListener(new ButtonActionListener(this,"idFormaPagoPuntoVentaBusqueda"));
		//ACTUALIZAR FK
		this.jInternalFrameDetalleFormFormaPagoPuntoVenta.jButtonid_empresaFormaPagoPuntoVentaUpdate.addActionListener(new ButtonActionListener(this,"id_empresaFormaPagoPuntoVentaUpdate"));
		//BUSQUEDA GENERAL
		this.jInternalFrameDetalleFormFormaPagoPuntoVenta.jButtonid_empresaFormaPagoPuntoVentaBusqueda.addActionListener(new ButtonActionListener(this,"id_empresaFormaPagoPuntoVentaBusqueda"));
		//ACTUALIZAR FK
		this.jInternalFrameDetalleFormFormaPagoPuntoVenta.jButtonid_sucursalFormaPagoPuntoVentaUpdate.addActionListener(new ButtonActionListener(this,"id_sucursalFormaPagoPuntoVentaUpdate"));
		//BUSQUEDA GENERAL
		this.jInternalFrameDetalleFormFormaPagoPuntoVenta.jButtonid_sucursalFormaPagoPuntoVentaBusqueda.addActionListener(new ButtonActionListener(this,"id_sucursalFormaPagoPuntoVentaBusqueda"));
		//ACTUALIZAR FK
		this.jInternalFrameDetalleFormFormaPagoPuntoVenta.jButtonid_ejercicioFormaPagoPuntoVentaUpdate.addActionListener(new ButtonActionListener(this,"id_ejercicioFormaPagoPuntoVentaUpdate"));
		//BUSQUEDA GENERAL
		this.jInternalFrameDetalleFormFormaPagoPuntoVenta.jButtonid_ejercicioFormaPagoPuntoVentaBusqueda.addActionListener(new ButtonActionListener(this,"id_ejercicioFormaPagoPuntoVentaBusqueda"));
		//ACTUALIZAR FK
		this.jInternalFrameDetalleFormFormaPagoPuntoVenta.jButtonid_periodoFormaPagoPuntoVentaUpdate.addActionListener(new ButtonActionListener(this,"id_periodoFormaPagoPuntoVentaUpdate"));
		//BUSQUEDA GENERAL
		this.jInternalFrameDetalleFormFormaPagoPuntoVenta.jButtonid_periodoFormaPagoPuntoVentaBusqueda.addActionListener(new ButtonActionListener(this,"id_periodoFormaPagoPuntoVentaBusqueda"));
		//ACTUALIZAR FK
		this.jInternalFrameDetalleFormFormaPagoPuntoVenta.jButtonid_factura_punto_ventaFormaPagoPuntoVentaUpdate.addActionListener(new ButtonActionListener(this,"id_factura_punto_ventaFormaPagoPuntoVentaUpdate"));
		//BUSQUEDA GENERAL
		this.jInternalFrameDetalleFormFormaPagoPuntoVenta.jButtonid_factura_punto_ventaFormaPagoPuntoVentaBusqueda.addActionListener(new ButtonActionListener(this,"id_factura_punto_ventaFormaPagoPuntoVentaBusqueda"));
		//ACTUALIZAR FK
		this.jInternalFrameDetalleFormFormaPagoPuntoVenta.jButtonid_tipo_forma_pagoFormaPagoPuntoVentaUpdate.addActionListener(new ButtonActionListener(this,"id_tipo_forma_pagoFormaPagoPuntoVentaUpdate"));
		//BUSQUEDA GENERAL
		this.jInternalFrameDetalleFormFormaPagoPuntoVenta.jButtonid_tipo_forma_pagoFormaPagoPuntoVentaBusqueda.addActionListener(new ButtonActionListener(this,"id_tipo_forma_pagoFormaPagoPuntoVentaBusqueda"));
		//BUSQUEDA GENERAL
		this.jInternalFrameDetalleFormFormaPagoPuntoVenta.jButtonporcentajeFormaPagoPuntoVentaBusqueda.addActionListener(new ButtonActionListener(this,"porcentajeFormaPagoPuntoVentaBusqueda"));
		//BUSQUEDA GENERAL
		this.jInternalFrameDetalleFormFormaPagoPuntoVenta.jButtonvalorFormaPagoPuntoVentaBusqueda.addActionListener(new ButtonActionListener(this,"valorFormaPagoPuntoVentaBusqueda"));
		//BUSQUEDA GENERAL
		this.jInternalFrameDetalleFormFormaPagoPuntoVenta.jButtonfechaFormaPagoPuntoVentaBusqueda.addActionListener(new ButtonActionListener(this,"fechaFormaPagoPuntoVentaBusqueda"));
		//BUSQUEDA GENERAL
		this.jInternalFrameDetalleFormFormaPagoPuntoVenta.jButtondescripcionFormaPagoPuntoVentaBusqueda.addActionListener(new ButtonActionListener(this,"descripcionFormaPagoPuntoVentaBusqueda"));
		//BUSQUEDA GENERAL
		this.jInternalFrameDetalleFormFormaPagoPuntoVenta.jButtonfecha_inicioFormaPagoPuntoVentaBusqueda.addActionListener(new ButtonActionListener(this,"fecha_inicioFormaPagoPuntoVentaBusqueda"));
		//BUSQUEDA GENERAL
		this.jInternalFrameDetalleFormFormaPagoPuntoVenta.jButtonnumero_dias_plazoFormaPagoPuntoVentaBusqueda.addActionListener(new ButtonActionListener(this,"numero_dias_plazoFormaPagoPuntoVentaBusqueda"));
		//BUSQUEDA GENERAL
		this.jInternalFrameDetalleFormFormaPagoPuntoVenta.jButtonfecha_finFormaPagoPuntoVentaBusqueda.addActionListener(new ButtonActionListener(this,"fecha_finFormaPagoPuntoVentaBusqueda"));
		//ACTUALIZAR FK
		this.jInternalFrameDetalleFormFormaPagoPuntoVenta.jButtonid_bancoFormaPagoPuntoVentaUpdate.addActionListener(new ButtonActionListener(this,"id_bancoFormaPagoPuntoVentaUpdate"));
		//BUSQUEDA GENERAL
		this.jInternalFrameDetalleFormFormaPagoPuntoVenta.jButtonid_bancoFormaPagoPuntoVentaBusqueda.addActionListener(new ButtonActionListener(this,"id_bancoFormaPagoPuntoVentaBusqueda"));
		//ACTUALIZAR FK
		this.jInternalFrameDetalleFormFormaPagoPuntoVenta.jButtonid_cuenta_banco_pun_venFormaPagoPuntoVentaUpdate.addActionListener(new ButtonActionListener(this,"id_cuenta_banco_pun_venFormaPagoPuntoVentaUpdate"));
		//BUSQUEDA GENERAL
		this.jInternalFrameDetalleFormFormaPagoPuntoVenta.jButtonid_cuenta_banco_pun_venFormaPagoPuntoVentaBusqueda.addActionListener(new ButtonActionListener(this,"id_cuenta_banco_pun_venFormaPagoPuntoVentaBusqueda"));
		//ACTUALIZAR FK
		this.jInternalFrameDetalleFormFormaPagoPuntoVenta.jButtonid_tipo_riesgo_chequeFormaPagoPuntoVentaUpdate.addActionListener(new ButtonActionListener(this,"id_tipo_riesgo_chequeFormaPagoPuntoVentaUpdate"));
		//BUSQUEDA GENERAL
		this.jInternalFrameDetalleFormFormaPagoPuntoVenta.jButtonid_tipo_riesgo_chequeFormaPagoPuntoVentaBusqueda.addActionListener(new ButtonActionListener(this,"id_tipo_riesgo_chequeFormaPagoPuntoVentaBusqueda"));
		//BUSQUEDA GENERAL
		this.jInternalFrameDetalleFormFormaPagoPuntoVenta.jButtonnumero_cuentaFormaPagoPuntoVentaBusqueda.addActionListener(new ButtonActionListener(this,"numero_cuentaFormaPagoPuntoVentaBusqueda"));
		//BUSQUEDA GENERAL
		this.jInternalFrameDetalleFormFormaPagoPuntoVenta.jButtonnumero_chequeFormaPagoPuntoVentaBusqueda.addActionListener(new ButtonActionListener(this,"numero_chequeFormaPagoPuntoVentaBusqueda"));
		//BUSQUEDA GENERAL
		this.jInternalFrameDetalleFormFormaPagoPuntoVenta.jButtongiradorFormaPagoPuntoVentaBusqueda.addActionListener(new ButtonActionListener(this,"giradorFormaPagoPuntoVentaBusqueda"));
		//ACTUALIZAR FK
		this.jInternalFrameDetalleFormFormaPagoPuntoVenta.jButtonid_banco_tarjetaFormaPagoPuntoVentaUpdate.addActionListener(new ButtonActionListener(this,"id_banco_tarjetaFormaPagoPuntoVentaUpdate"));
		//BUSQUEDA GENERAL
		this.jInternalFrameDetalleFormFormaPagoPuntoVenta.jButtonid_banco_tarjetaFormaPagoPuntoVentaBusqueda.addActionListener(new ButtonActionListener(this,"id_banco_tarjetaFormaPagoPuntoVentaBusqueda"));
		//ACTUALIZAR FK
		this.jInternalFrameDetalleFormFormaPagoPuntoVenta.jButtonid_tarjeta_creditoFormaPagoPuntoVentaUpdate.addActionListener(new ButtonActionListener(this,"id_tarjeta_creditoFormaPagoPuntoVentaUpdate"));
		//BUSQUEDA GENERAL
		this.jInternalFrameDetalleFormFormaPagoPuntoVenta.jButtonid_tarjeta_creditoFormaPagoPuntoVentaBusqueda.addActionListener(new ButtonActionListener(this,"id_tarjeta_creditoFormaPagoPuntoVentaBusqueda"));
		//ACTUALIZAR FK
		this.jInternalFrameDetalleFormFormaPagoPuntoVenta.jButtonid_tipo_interes_tarjetaFormaPagoPuntoVentaUpdate.addActionListener(new ButtonActionListener(this,"id_tipo_interes_tarjetaFormaPagoPuntoVentaUpdate"));
		//BUSQUEDA GENERAL
		this.jInternalFrameDetalleFormFormaPagoPuntoVenta.jButtonid_tipo_interes_tarjetaFormaPagoPuntoVentaBusqueda.addActionListener(new ButtonActionListener(this,"id_tipo_interes_tarjetaFormaPagoPuntoVentaBusqueda"));
		//ACTUALIZAR FK
		this.jInternalFrameDetalleFormFormaPagoPuntoVenta.jButtonid_tipo_pago_tarjetaFormaPagoPuntoVentaUpdate.addActionListener(new ButtonActionListener(this,"id_tipo_pago_tarjetaFormaPagoPuntoVentaUpdate"));
		//BUSQUEDA GENERAL
		this.jInternalFrameDetalleFormFormaPagoPuntoVenta.jButtonid_tipo_pago_tarjetaFormaPagoPuntoVentaBusqueda.addActionListener(new ButtonActionListener(this,"id_tipo_pago_tarjetaFormaPagoPuntoVentaBusqueda"));
		//ACTUALIZAR FK
		this.jInternalFrameDetalleFormFormaPagoPuntoVenta.jButtonid_conexionFormaPagoPuntoVentaUpdate.addActionListener(new ButtonActionListener(this,"id_conexionFormaPagoPuntoVentaUpdate"));
		//BUSQUEDA GENERAL
		this.jInternalFrameDetalleFormFormaPagoPuntoVenta.jButtonid_conexionFormaPagoPuntoVentaBusqueda.addActionListener(new ButtonActionListener(this,"id_conexionFormaPagoPuntoVentaBusqueda"));
		//ACTUALIZAR FK
		this.jInternalFrameDetalleFormFormaPagoPuntoVenta.jButtonid_mesFormaPagoPuntoVentaUpdate.addActionListener(new ButtonActionListener(this,"id_mesFormaPagoPuntoVentaUpdate"));
		//BUSQUEDA GENERAL
		this.jInternalFrameDetalleFormFormaPagoPuntoVenta.jButtonid_mesFormaPagoPuntoVentaBusqueda.addActionListener(new ButtonActionListener(this,"id_mesFormaPagoPuntoVentaBusqueda"));
		//BUSQUEDA GENERAL
		this.jInternalFrameDetalleFormFormaPagoPuntoVenta.jButtonnumeroFormaPagoPuntoVentaBusqueda.addActionListener(new ButtonActionListener(this,"numeroFormaPagoPuntoVentaBusqueda"));
		//BUSQUEDA GENERAL
		this.jInternalFrameDetalleFormFormaPagoPuntoVenta.jButtontarjeta_habienteFormaPagoPuntoVentaBusqueda.addActionListener(new ButtonActionListener(this,"tarjeta_habienteFormaPagoPuntoVentaBusqueda"));
		//BUSQUEDA GENERAL
		this.jInternalFrameDetalleFormFormaPagoPuntoVenta.jButtonautorizacionFormaPagoPuntoVentaBusqueda.addActionListener(new ButtonActionListener(this,"autorizacionFormaPagoPuntoVentaBusqueda"));
		//BUSQUEDA GENERAL
		this.jInternalFrameDetalleFormFormaPagoPuntoVenta.jButtonvoucherFormaPagoPuntoVentaBusqueda.addActionListener(new ButtonActionListener(this,"voucherFormaPagoPuntoVentaBusqueda"));
		//BUSQUEDA GENERAL
		this.jInternalFrameDetalleFormFormaPagoPuntoVenta.jButtonloteFormaPagoPuntoVentaBusqueda.addActionListener(new ButtonActionListener(this,"loteFormaPagoPuntoVentaBusqueda"));
		//BUSQUEDA GENERAL
		this.jInternalFrameDetalleFormFormaPagoPuntoVenta.jButtoncuotaFormaPagoPuntoVentaBusqueda.addActionListener(new ButtonActionListener(this,"cuotaFormaPagoPuntoVentaBusqueda"));
		//BUSQUEDA GENERAL
		this.jInternalFrameDetalleFormFormaPagoPuntoVenta.jButtonvalor_retencionFormaPagoPuntoVentaBusqueda.addActionListener(new ButtonActionListener(this,"valor_retencionFormaPagoPuntoVentaBusqueda"));
		//BUSQUEDA GENERAL
		this.jInternalFrameDetalleFormFormaPagoPuntoVenta.jButtonvalor_comisionFormaPagoPuntoVentaBusqueda.addActionListener(new ButtonActionListener(this,"valor_comisionFormaPagoPuntoVentaBusqueda"));
		//BUSQUEDA GENERAL
		this.jInternalFrameDetalleFormFormaPagoPuntoVenta.jButtonvalor_calculadoFormaPagoPuntoVentaBusqueda.addActionListener(new ButtonActionListener(this,"valor_calculadoFormaPagoPuntoVentaBusqueda"));
		//BUSQUEDA GENERAL
		this.jInternalFrameDetalleFormFormaPagoPuntoVenta.jButtonvalor_canceladoFormaPagoPuntoVentaBusqueda.addActionListener(new ButtonActionListener(this,"valor_canceladoFormaPagoPuntoVentaBusqueda"));
		//BUSQUEDA GENERAL
		this.jInternalFrameDetalleFormFormaPagoPuntoVenta.jButtonvalor_difiereFormaPagoPuntoVentaBusqueda.addActionListener(new ButtonActionListener(this,"valor_difiereFormaPagoPuntoVentaBusqueda"));
		//BUSQUEDA GENERAL
		this.jInternalFrameDetalleFormFormaPagoPuntoVenta.jButtonnumero_retencionFormaPagoPuntoVentaBusqueda.addActionListener(new ButtonActionListener(this,"numero_retencionFormaPagoPuntoVentaBusqueda"));
		//BUSQUEDA GENERAL
		this.jInternalFrameDetalleFormFormaPagoPuntoVenta.jButtonnumero_liquidacionFormaPagoPuntoVentaBusqueda.addActionListener(new ButtonActionListener(this,"numero_liquidacionFormaPagoPuntoVentaBusqueda"));
		//ACTUALIZAR FK
		this.jInternalFrameDetalleFormFormaPagoPuntoVenta.jButtonid_anioFormaPagoPuntoVentaUpdate.addActionListener(new ButtonActionListener(this,"id_anioFormaPagoPuntoVentaUpdate"));
		//BUSQUEDA GENERAL
		this.jInternalFrameDetalleFormFormaPagoPuntoVenta.jButtonid_anioFormaPagoPuntoVentaBusqueda.addActionListener(new ButtonActionListener(this,"id_anioFormaPagoPuntoVentaBusqueda"));
		//jButtonid_cuenta_contableFormaPagoPuntoVenta.addActionListener (
		//	new java.awt.event.ActionListener() {
		//		public void actionPerformed(java.awt.event.ActionEvent evt) {
		//			jButtonid_cuenta_contableFormaPagoPuntoVentaActionPerformed(evt);
		//		}
		//	}
		//);

		//BUSQUEDA CAMPO
		this.jInternalFrameDetalleFormFormaPagoPuntoVenta.jButtonid_cuenta_contableFormaPagoPuntoVenta.addActionListener(new ButtonActionListener(this,"id_cuenta_contableFormaPagoPuntoVenta"));
		//jButtonid_cuenta_contableFormaPagoPuntoVentaArbol.addActionListener (
		//	new java.awt.event.ActionListener() {
		//		public void actionPerformed(java.awt.event.ActionEvent evt) {
		//			abrirFrameTreeCuentaContable("BUSQUEDA_FK");
		//		}
		//	}
		//);

		//BUSQUEDA ARBOL CAMPO
		this.jInternalFrameDetalleFormFormaPagoPuntoVenta.jButtonid_cuenta_contableFormaPagoPuntoVentaArbol.addActionListener(new ButtonActionListener(this,"id_cuenta_contableFormaPagoPuntoVentaArbol"));
		//ACTUALIZAR FK
		this.jInternalFrameDetalleFormFormaPagoPuntoVenta.jButtonid_cuenta_contableFormaPagoPuntoVentaUpdate.addActionListener(new ButtonActionListener(this,"id_cuenta_contableFormaPagoPuntoVentaUpdate"));
		//BUSQUEDA GENERAL
		this.jInternalFrameDetalleFormFormaPagoPuntoVenta.jButtonid_cuenta_contableFormaPagoPuntoVentaBusqueda.addActionListener(new ButtonActionListener(this,"id_cuenta_contableFormaPagoPuntoVentaBusqueda"));
		//jButtonid_asiento_contableFormaPagoPuntoVenta.addActionListener (
		//	new java.awt.event.ActionListener() {
		//		public void actionPerformed(java.awt.event.ActionEvent evt) {
		//			jButtonid_asiento_contableFormaPagoPuntoVentaActionPerformed(evt);
		//		}
		//	}
		//);

		//BUSQUEDA CAMPO
		this.jInternalFrameDetalleFormFormaPagoPuntoVenta.jButtonid_asiento_contableFormaPagoPuntoVenta.addActionListener(new ButtonActionListener(this,"id_asiento_contableFormaPagoPuntoVenta"));
		//ACTUALIZAR FK
		this.jInternalFrameDetalleFormFormaPagoPuntoVenta.jButtonid_asiento_contableFormaPagoPuntoVentaUpdate.addActionListener(new ButtonActionListener(this,"id_asiento_contableFormaPagoPuntoVentaUpdate"));
		//BUSQUEDA GENERAL
		this.jInternalFrameDetalleFormFormaPagoPuntoVenta.jButtonid_asiento_contableFormaPagoPuntoVentaBusqueda.addActionListener(new ButtonActionListener(this,"id_asiento_contableFormaPagoPuntoVentaBusqueda"));
		
		
		this.jButtonFK_IdAsientoContableFormaPagoPuntoVenta.addActionListener(new ButtonActionListener(this,"FK_IdAsientoContableFormaPagoPuntoVenta"));

		this.jButtonBuscarFK_IdAsientoContableid_asiento_contableFormaPagoPuntoVenta.addActionListener(new ButtonActionListener(this,"id_asiento_contableFormaPagoPuntoVenta"));

		this.jButtonFK_IdBancoFormaPagoPuntoVenta.addActionListener(new ButtonActionListener(this,"FK_IdBancoFormaPagoPuntoVenta"));

		this.jButtonFK_IdBancoTarjetaFormaPagoPuntoVenta.addActionListener(new ButtonActionListener(this,"FK_IdBancoTarjetaFormaPagoPuntoVenta"));

		this.jButtonFK_IdConexionFormaPagoPuntoVenta.addActionListener(new ButtonActionListener(this,"FK_IdConexionFormaPagoPuntoVenta"));

		this.jButtonFK_IdCuentaBancoPunVenFormaPagoPuntoVenta.addActionListener(new ButtonActionListener(this,"FK_IdCuentaBancoPunVenFormaPagoPuntoVenta"));

		this.jButtonFK_IdCuentaContableFormaPagoPuntoVenta.addActionListener(new ButtonActionListener(this,"FK_IdCuentaContableFormaPagoPuntoVenta"));

		this.jButtonBuscarFK_IdCuentaContableid_cuenta_contableFormaPagoPuntoVenta.addActionListener(new ButtonActionListener(this,"id_cuenta_contableFormaPagoPuntoVenta"));

		this.jButtonFK_IdFacturaPuntoVentaFormaPagoPuntoVenta.addActionListener(new ButtonActionListener(this,"FK_IdFacturaPuntoVentaFormaPagoPuntoVenta"));

		this.jButtonFK_IdTarjetaCreditoFormaPagoPuntoVenta.addActionListener(new ButtonActionListener(this,"FK_IdTarjetaCreditoFormaPagoPuntoVenta"));

		this.jButtonFK_IdTipoFormaPagoFormaPagoPuntoVenta.addActionListener(new ButtonActionListener(this,"FK_IdTipoFormaPagoFormaPagoPuntoVenta"));

		this.jButtonFK_IdTipoInteresTarjetaFormaPagoPuntoVenta.addActionListener(new ButtonActionListener(this,"FK_IdTipoInteresTarjetaFormaPagoPuntoVenta"));

		this.jButtonFK_IdTipoPagoTarjetaFormaPagoPuntoVenta.addActionListener(new ButtonActionListener(this,"FK_IdTipoPagoTarjetaFormaPagoPuntoVenta"));

		this.jButtonFK_IdTipoRiesgoChequeFormaPagoPuntoVenta.addActionListener(new ButtonActionListener(this,"FK_IdTipoRiesgoChequeFormaPagoPuntoVenta"));

		
		//REPORTE DINAMICO
		this.jButtonCerrarReporteDinamicoFormaPagoPuntoVenta.addActionListener (
	          new java.awt.event.ActionListener() {
	              public void actionPerformed(ActionEvent evt) {
	            	  try {jButtonCerrarReporteDinamicoFormaPagoPuntoVentaActionPerformed(evt);}catch(Exception e){e.printStackTrace();}
	              }
	          }
        );
		
		this.jButtonGenerarReporteDinamicoFormaPagoPuntoVenta.addActionListener (
	          new java.awt.event.ActionListener() {
	              public void actionPerformed(ActionEvent evt) {
	            	  try {jButtonGenerarReporteDinamicoFormaPagoPuntoVentaActionPerformed(evt);}catch(Exception e){e.printStackTrace();}
	              }
	          }
        );
		
		this.jButtonGenerarExcelReporteDinamicoFormaPagoPuntoVenta.addActionListener (
	          new java.awt.event.ActionListener() {
	              public void actionPerformed(ActionEvent evt) {
	            	  try {jButtonGenerarExcelReporteDinamicoFormaPagoPuntoVentaActionPerformed(evt);}catch(Exception e){e.printStackTrace();}
	              }
	          }
        );
		
		//IMPORTACION
		this.jButtonCerrarImportacionFormaPagoPuntoVenta.addActionListener (
	          new java.awt.event.ActionListener() {
	              public void actionPerformed(ActionEvent evt) {
	            	  try {jButtonCerrarImportacionFormaPagoPuntoVentaActionPerformed(evt);}catch(Exception e){e.printStackTrace();}
	              }
	          }
        );
		
		this.jButtonGenerarImportacionFormaPagoPuntoVenta.addActionListener (
	          new java.awt.event.ActionListener() {
	              public void actionPerformed(ActionEvent evt) {
	            	  try {jButtonGenerarImportacionFormaPagoPuntoVentaActionPerformed(evt);}catch(Exception e){e.printStackTrace();}
	              }
	          }
        );
		
		this.jButtonAbrirImportacionFormaPagoPuntoVenta.addActionListener (
	          new java.awt.event.ActionListener() {
	              public void actionPerformed(ActionEvent evt) {
	            	  try {jButtonAbrirImportacionFormaPagoPuntoVentaActionPerformed(evt);}catch(Exception e){e.printStackTrace();}
	              }
	          }
        );
	}
	*/
	
	/*
	public void jComboBoxTiposSeleccionarFormaPagoPuntoVentaActionListener(ActionEvent evt) throws Exception {    		
		try {			
			Reporte reporte=(Reporte)this.jComboBoxTiposSeleccionarFormaPagoPuntoVenta.getSelectedItem();
			
			//if(reporte.getsCodigo().equals("SELECCIONAR")) {
			//}					
		} catch(Exception e) {
			FuncionesSwing.manageException(this, e,logger,FormaPagoPuntoVentaConstantesFunciones.CLASSNAME);
		}
	}	
	*/
	
	
	public void seleccionarTodosFormaPagoPuntoVenta(Boolean conSeleccionarTodos) throws Exception {    		
		try {
			if(Constantes.ISUSAEJBLOGICLAYER) {				
				for(FormaPagoPuntoVenta formapagopuntoventaAux:this.formapagopuntoventaLogic.getFormaPagoPuntoVentas()) {
					formapagopuntoventaAux.setIsSelected(conSeleccionarTodos);
				}			
			} else if(Constantes.ISUSAEJBREMOTE||Constantes.ISUSAEJBHOME) {
				for(FormaPagoPuntoVenta formapagopuntoventaAux:formapagopuntoventas) {
					formapagopuntoventaAux.setIsSelected(conSeleccionarTodos);
				}
			}
		} catch(Exception e) {
			FuncionesSwing.manageException(this, e,logger,FormaPagoPuntoVentaConstantesFunciones.CLASSNAME);
		}
	}
	
	public void jCheckBoxSeleccionarTodosFormaPagoPuntoVentaItemListener(ItemEvent evt) throws Exception {    		
		try {			
			this.inicializarActualizarBindingFormaPagoPuntoVenta(false,false);
			
			//JCheckBox jCheckBox=(JCheckBox)evt.getSource();			
			//System.out.println("ok");		
			
			Boolean existe=false;
			
			if(sTipoSeleccionar.equals("COLUMNAS")) {
				existe=true;
				
				if(Constantes.ISUSAEJBLOGICLAYER) {				
					for(FormaPagoPuntoVenta formapagopuntoventaAux:this.formapagopuntoventaLogic.getFormaPagoPuntoVentas()) {
						formapagopuntoventaAux.setIsSelected(this.isSeleccionarTodos);
					}			
				} else if(Constantes.ISUSAEJBREMOTE||Constantes.ISUSAEJBHOME) {
					for(FormaPagoPuntoVenta formapagopuntoventaAux:formapagopuntoventas) {
						formapagopuntoventaAux.setIsSelected(this.isSeleccionarTodos);
					}
				}
			} else {
				if(Constantes.ISUSAEJBLOGICLAYER) {
					for(FormaPagoPuntoVenta formapagopuntoventaAux:this.formapagopuntoventaLogic.getFormaPagoPuntoVentas()) {
					
					}	
				} else if(Constantes.ISUSAEJBREMOTE||Constantes.ISUSAEJBHOME) {
					for(FormaPagoPuntoVenta formapagopuntoventaAux:formapagopuntoventas) {
						
					}
				}
			}
					
			if(existe) {
				this.inicializarActualizarBindingTablaFormaPagoPuntoVenta(false);
			} else {
				JOptionPane.showMessageDialog(this,"NO SE HA SELECCIONADO ALGUNA COLUMNA VALIDA","SELECCIONAR",JOptionPane.ERROR_MESSAGE);
			}	
			
			//TableCellRenderer tableCellRenderer=null;			
			
			//TableCellEditor tableCellEditor=null;						
						
			//FUNCIONA CON MODEL PERO SE DANA MANTENIMIENTO
			/*
			for(int i = 0; i < this.jTableDatosFormaPagoPuntoVenta.getRowCount(); i++) {				
				tableCellRenderer=this.jTableDatosSistema.getCellRenderer(i, 2);
				tableCellEditor=this.jTableDatosSistema.getCellEditor(i, 2);
				
				idSeleccionarTableCell=(IdSeleccionarTableCell)tableCellRenderer;				
				idSeleccionarTableCell.jCheckBoxId.setSelected(jCheckBox.isSelected());
				
				idSeleccionarTableCell=(IdSeleccionarTableCell)tableCellEditor;
				
				if(idSeleccionarTableCell.jCheckBoxId!=null) {
					idSeleccionarTableCell.jCheckBoxId.setSelected(jCheckBox.isSelected());
				}
				
				//System.out.println(idSeleccionarTableCell.valor);
				
				//this.jTableDatosFormaPagoPuntoVenta.getModel().setValueAt(jCheckBox.isSelected(), i, Funciones2.getColumnIndexByName(this.jTableDatosFormaPagoPuntoVenta,Constantes2.S_SELECCIONAR));
		    } 
			*/
					
		} catch(Exception e) {
			FuncionesSwing.manageException(this, e,logger,FormaPagoPuntoVentaConstantesFunciones.CLASSNAME);
		}
	}
	
	public void jCheckBoxSeleccionadosFormaPagoPuntoVentaItemListener(ItemEvent evt) throws Exception {    		
		try {			
			this.inicializarActualizarBindingFormaPagoPuntoVenta(false,false);
			
			//JCheckBox jCheckBox=(JCheckBox)evt.getSource();			
			//System.out.println("ok");		
			
			Boolean existe=false;
			int[] arrNumRowsSeleccionados=null;
			
			arrNumRowsSeleccionados=this.jTableDatosFormaPagoPuntoVenta.getSelectedRows();
			
			FormaPagoPuntoVenta formapagopuntoventaLocal=new FormaPagoPuntoVenta();
			
			//this.seleccionarTodosFormaPagoPuntoVenta(false);
			
			for(Integer iNumRowSeleccionado:arrNumRowsSeleccionados) {
				existe=true;
				
				if(Constantes.ISUSAEJBLOGICLAYER) {
					formapagopuntoventaLocal =(FormaPagoPuntoVenta) this.formapagopuntoventaLogic.getFormaPagoPuntoVentas().toArray()[this.jTableDatosFormaPagoPuntoVenta.convertRowIndexToModel(iNumRowSeleccionado)];
				} else if(Constantes.ISUSAEJBREMOTE || Constantes.ISUSAEJBHOME) {
					formapagopuntoventaLocal =(FormaPagoPuntoVenta) this.formapagopuntoventas.toArray()[this.jTableDatosFormaPagoPuntoVenta.convertRowIndexToModel(iNumRowSeleccionado)];
				}
				
				formapagopuntoventaLocal.setIsSelected(this.isSeleccionados);
			}
			
			/*
			if(sTipoSeleccionar.equals("SELECCIONAR")) {
				existe=true;
				
				if(Constantes.ISUSAEJBLOGICLAYER) {				
					for(FormaPagoPuntoVenta formapagopuntoventaAux:this.formapagopuntoventaLogic.getFormaPagoPuntoVentas()) {
						formapagopuntoventaAux.setIsSelected(this.isSeleccionados);
					}			
				} else if(Constantes.ISUSAEJBREMOTE||Constantes.ISUSAEJBHOME) {
					for(FormaPagoPuntoVenta formapagopuntoventaAux:formapagopuntoventas) {
						formapagopuntoventaAux.setIsSelected(this.isSeleccionados);
					}
				}
			}
			*/
			
			//if(existe) {
				this.inicializarActualizarBindingTablaFormaPagoPuntoVenta(false);
			/*
			} else {
				JOptionPane.showMessageDialog(this,"NO SE HA SELECCIONADO ALGUNA COLUMNA VALIDA","SELECCIONAR",JOptionPane.ERROR_MESSAGE);
			}	
			*/
			
			
			//TableCellRenderer tableCellRenderer=null;			
			
			//TableCellEditor tableCellEditor=null;						
						
			//FUNCIONA CON MODEL PERO SE DANA MANTENIMIENTO
			/*
			for(int i = 0; i < this.jTableDatosFormaPagoPuntoVenta.getRowCount(); i++) {				
				tableCellRenderer=this.jTableDatosSistema.getCellRenderer(i, 2);
				tableCellEditor=this.jTableDatosSistema.getCellEditor(i, 2);
				
				idSeleccionarTableCell=(IdSeleccionarTableCell)tableCellRenderer;				
				idSeleccionarTableCell.jCheckBoxId.setSelected(jCheckBox.isSelected());
				
				idSeleccionarTableCell=(IdSeleccionarTableCell)tableCellEditor;
				
				if(idSeleccionarTableCell.jCheckBoxId!=null) {
					idSeleccionarTableCell.jCheckBoxId.setSelected(jCheckBox.isSelected());
				}
				
				//System.out.println(idSeleccionarTableCell.valor);
				
				//this.jTableDatosFormaPagoPuntoVenta.getModel().setValueAt(jCheckBox.isSelected(), i, Funciones2.getColumnIndexByName(this.jTableDatosFormaPagoPuntoVenta,Constantes2.S_SELECCIONAR));
		    } 
			*/
					
		} catch(Exception e) {
			FuncionesSwing.manageException(this, e,logger,FormaPagoPuntoVentaConstantesFunciones.CLASSNAME);
		}
	}
	
	public void jCheckBoxSeleccionarActualFormaPagoPuntoVentaItemListener(ItemEvent evt,Long idActual) throws Exception {    		
		try {
			
		} catch(Exception e) {
			FuncionesSwing.manageException(this, e,logger,FormaPagoPuntoVentaConstantesFunciones.CLASSNAME);
		}
	}
	
	public void ejecutarAuxiliarFormaPagoPuntoVentaParaAjaxPostBack() throws Exception {    		
		try {
			
		} catch(Exception e) {
			FuncionesSwing.manageException(this, e,logger,FormaPagoPuntoVentaConstantesFunciones.CLASSNAME);
		}
	}
	
	public void jTextFieldValorCampoGeneralFormaPagoPuntoVentaActionListener(ActionEvent evt) throws Exception {    		
		try {
			this.inicializarActualizarBindingFormaPagoPuntoVenta(false,false);
			
			//System.out.println(this.jTextFieldValorCampoGeneralFormaPagoPuntoVenta.getText());		
			
			Boolean existe=false;
			
			if(Constantes.ISUSAEJBLOGICLAYER) {
				for(FormaPagoPuntoVenta formapagopuntoventaAux:this.formapagopuntoventaLogic.getFormaPagoPuntoVentas()) {
				
						if(sTipoSeleccionar.equals(FormaPagoPuntoVentaConstantesFunciones.LABEL_PORCENTAJE)) {
							existe=true;
							formapagopuntoventaAux.setporcentaje(Double.parseDouble(this.sValorCampoGeneral));
						}
						 else if(sTipoSeleccionar.equals(FormaPagoPuntoVentaConstantesFunciones.LABEL_VALOR)) {
							existe=true;
							formapagopuntoventaAux.setvalor(Double.parseDouble(this.sValorCampoGeneral));
						}
						 else if(sTipoSeleccionar.equals(FormaPagoPuntoVentaConstantesFunciones.LABEL_FECHA)) {
							existe=true;
							formapagopuntoventaAux.setfecha(Funciones.ConvertToDate(this.sValorCampoGeneral));
						}
						 else if(sTipoSeleccionar.equals(FormaPagoPuntoVentaConstantesFunciones.LABEL_DESCRIPCION)) {
							existe=true;
							formapagopuntoventaAux.setdescripcion(this.sValorCampoGeneral);
						}
						 else if(sTipoSeleccionar.equals(FormaPagoPuntoVentaConstantesFunciones.LABEL_FECHAINICIO)) {
							existe=true;
							formapagopuntoventaAux.setfecha_inicio(Funciones.ConvertToDate(this.sValorCampoGeneral));
						}
						 else if(sTipoSeleccionar.equals(FormaPagoPuntoVentaConstantesFunciones.LABEL_NUMERODIASPLAZO)) {
							existe=true;
							formapagopuntoventaAux.setnumero_dias_plazo(Integer.parseInt(this.sValorCampoGeneral));
						}
						 else if(sTipoSeleccionar.equals(FormaPagoPuntoVentaConstantesFunciones.LABEL_FECHAFIN)) {
							existe=true;
							formapagopuntoventaAux.setfecha_fin(Funciones.ConvertToDate(this.sValorCampoGeneral));
						}
						 else if(sTipoSeleccionar.equals(FormaPagoPuntoVentaConstantesFunciones.LABEL_NUMEROCUENTA)) {
							existe=true;
							formapagopuntoventaAux.setnumero_cuenta(this.sValorCampoGeneral);
						}
						 else if(sTipoSeleccionar.equals(FormaPagoPuntoVentaConstantesFunciones.LABEL_NUMEROCHEQUE)) {
							existe=true;
							formapagopuntoventaAux.setnumero_cheque(this.sValorCampoGeneral);
						}
						 else if(sTipoSeleccionar.equals(FormaPagoPuntoVentaConstantesFunciones.LABEL_GIRADOR)) {
							existe=true;
							formapagopuntoventaAux.setgirador(this.sValorCampoGeneral);
						}
						 else if(sTipoSeleccionar.equals(FormaPagoPuntoVentaConstantesFunciones.LABEL_NUMERO)) {
							existe=true;
							formapagopuntoventaAux.setnumero(this.sValorCampoGeneral);
						}
						 else if(sTipoSeleccionar.equals(FormaPagoPuntoVentaConstantesFunciones.LABEL_TARJETAHABIENTE)) {
							existe=true;
							formapagopuntoventaAux.settarjeta_habiente(this.sValorCampoGeneral);
						}
						 else if(sTipoSeleccionar.equals(FormaPagoPuntoVentaConstantesFunciones.LABEL_AUTORIZACION)) {
							existe=true;
							formapagopuntoventaAux.setautorizacion(this.sValorCampoGeneral);
						}
						 else if(sTipoSeleccionar.equals(FormaPagoPuntoVentaConstantesFunciones.LABEL_VOUCHER)) {
							existe=true;
							formapagopuntoventaAux.setvoucher(this.sValorCampoGeneral);
						}
						 else if(sTipoSeleccionar.equals(FormaPagoPuntoVentaConstantesFunciones.LABEL_LOTE)) {
							existe=true;
							formapagopuntoventaAux.setlote(this.sValorCampoGeneral);
						}
						 else if(sTipoSeleccionar.equals(FormaPagoPuntoVentaConstantesFunciones.LABEL_CUOTA)) {
							existe=true;
							formapagopuntoventaAux.setcuota(Integer.parseInt(this.sValorCampoGeneral));
						}
						 else if(sTipoSeleccionar.equals(FormaPagoPuntoVentaConstantesFunciones.LABEL_VALORRETENCION)) {
							existe=true;
							formapagopuntoventaAux.setvalor_retencion(Double.parseDouble(this.sValorCampoGeneral));
						}
						 else if(sTipoSeleccionar.equals(FormaPagoPuntoVentaConstantesFunciones.LABEL_VALORCOMISION)) {
							existe=true;
							formapagopuntoventaAux.setvalor_comision(Double.parseDouble(this.sValorCampoGeneral));
						}
						 else if(sTipoSeleccionar.equals(FormaPagoPuntoVentaConstantesFunciones.LABEL_VALORCALCULADO)) {
							existe=true;
							formapagopuntoventaAux.setvalor_calculado(Double.parseDouble(this.sValorCampoGeneral));
						}
						 else if(sTipoSeleccionar.equals(FormaPagoPuntoVentaConstantesFunciones.LABEL_VALORCANCELADO)) {
							existe=true;
							formapagopuntoventaAux.setvalor_cancelado(Double.parseDouble(this.sValorCampoGeneral));
						}
						 else if(sTipoSeleccionar.equals(FormaPagoPuntoVentaConstantesFunciones.LABEL_VALORDIFIERE)) {
							existe=true;
							formapagopuntoventaAux.setvalor_difiere(Double.parseDouble(this.sValorCampoGeneral));
						}
						 else if(sTipoSeleccionar.equals(FormaPagoPuntoVentaConstantesFunciones.LABEL_NUMERORETENCION)) {
							existe=true;
							formapagopuntoventaAux.setnumero_retencion(this.sValorCampoGeneral);
						}
						 else if(sTipoSeleccionar.equals(FormaPagoPuntoVentaConstantesFunciones.LABEL_NUMEROLIQUIDACION)) {
							existe=true;
							formapagopuntoventaAux.setnumero_liquidacion(this.sValorCampoGeneral);
						}
				}	
			} else if(Constantes.ISUSAEJBREMOTE||Constantes.ISUSAEJBHOME) {
				for(FormaPagoPuntoVenta formapagopuntoventaAux:formapagopuntoventas) {
					
						if(sTipoSeleccionar.equals(FormaPagoPuntoVentaConstantesFunciones.LABEL_PORCENTAJE)) {
							existe=true;
							formapagopuntoventaAux.setporcentaje(Double.parseDouble(this.sValorCampoGeneral));
						}
						 else if(sTipoSeleccionar.equals(FormaPagoPuntoVentaConstantesFunciones.LABEL_VALOR)) {
							existe=true;
							formapagopuntoventaAux.setvalor(Double.parseDouble(this.sValorCampoGeneral));
						}
						 else if(sTipoSeleccionar.equals(FormaPagoPuntoVentaConstantesFunciones.LABEL_FECHA)) {
							existe=true;
							formapagopuntoventaAux.setfecha(Funciones.ConvertToDate(this.sValorCampoGeneral));
						}
						 else if(sTipoSeleccionar.equals(FormaPagoPuntoVentaConstantesFunciones.LABEL_DESCRIPCION)) {
							existe=true;
							formapagopuntoventaAux.setdescripcion(this.sValorCampoGeneral);
						}
						 else if(sTipoSeleccionar.equals(FormaPagoPuntoVentaConstantesFunciones.LABEL_FECHAINICIO)) {
							existe=true;
							formapagopuntoventaAux.setfecha_inicio(Funciones.ConvertToDate(this.sValorCampoGeneral));
						}
						 else if(sTipoSeleccionar.equals(FormaPagoPuntoVentaConstantesFunciones.LABEL_NUMERODIASPLAZO)) {
							existe=true;
							formapagopuntoventaAux.setnumero_dias_plazo(Integer.parseInt(this.sValorCampoGeneral));
						}
						 else if(sTipoSeleccionar.equals(FormaPagoPuntoVentaConstantesFunciones.LABEL_FECHAFIN)) {
							existe=true;
							formapagopuntoventaAux.setfecha_fin(Funciones.ConvertToDate(this.sValorCampoGeneral));
						}
						 else if(sTipoSeleccionar.equals(FormaPagoPuntoVentaConstantesFunciones.LABEL_NUMEROCUENTA)) {
							existe=true;
							formapagopuntoventaAux.setnumero_cuenta(this.sValorCampoGeneral);
						}
						 else if(sTipoSeleccionar.equals(FormaPagoPuntoVentaConstantesFunciones.LABEL_NUMEROCHEQUE)) {
							existe=true;
							formapagopuntoventaAux.setnumero_cheque(this.sValorCampoGeneral);
						}
						 else if(sTipoSeleccionar.equals(FormaPagoPuntoVentaConstantesFunciones.LABEL_GIRADOR)) {
							existe=true;
							formapagopuntoventaAux.setgirador(this.sValorCampoGeneral);
						}
						 else if(sTipoSeleccionar.equals(FormaPagoPuntoVentaConstantesFunciones.LABEL_NUMERO)) {
							existe=true;
							formapagopuntoventaAux.setnumero(this.sValorCampoGeneral);
						}
						 else if(sTipoSeleccionar.equals(FormaPagoPuntoVentaConstantesFunciones.LABEL_TARJETAHABIENTE)) {
							existe=true;
							formapagopuntoventaAux.settarjeta_habiente(this.sValorCampoGeneral);
						}
						 else if(sTipoSeleccionar.equals(FormaPagoPuntoVentaConstantesFunciones.LABEL_AUTORIZACION)) {
							existe=true;
							formapagopuntoventaAux.setautorizacion(this.sValorCampoGeneral);
						}
						 else if(sTipoSeleccionar.equals(FormaPagoPuntoVentaConstantesFunciones.LABEL_VOUCHER)) {
							existe=true;
							formapagopuntoventaAux.setvoucher(this.sValorCampoGeneral);
						}
						 else if(sTipoSeleccionar.equals(FormaPagoPuntoVentaConstantesFunciones.LABEL_LOTE)) {
							existe=true;
							formapagopuntoventaAux.setlote(this.sValorCampoGeneral);
						}
						 else if(sTipoSeleccionar.equals(FormaPagoPuntoVentaConstantesFunciones.LABEL_CUOTA)) {
							existe=true;
							formapagopuntoventaAux.setcuota(Integer.parseInt(this.sValorCampoGeneral));
						}
						 else if(sTipoSeleccionar.equals(FormaPagoPuntoVentaConstantesFunciones.LABEL_VALORRETENCION)) {
							existe=true;
							formapagopuntoventaAux.setvalor_retencion(Double.parseDouble(this.sValorCampoGeneral));
						}
						 else if(sTipoSeleccionar.equals(FormaPagoPuntoVentaConstantesFunciones.LABEL_VALORCOMISION)) {
							existe=true;
							formapagopuntoventaAux.setvalor_comision(Double.parseDouble(this.sValorCampoGeneral));
						}
						 else if(sTipoSeleccionar.equals(FormaPagoPuntoVentaConstantesFunciones.LABEL_VALORCALCULADO)) {
							existe=true;
							formapagopuntoventaAux.setvalor_calculado(Double.parseDouble(this.sValorCampoGeneral));
						}
						 else if(sTipoSeleccionar.equals(FormaPagoPuntoVentaConstantesFunciones.LABEL_VALORCANCELADO)) {
							existe=true;
							formapagopuntoventaAux.setvalor_cancelado(Double.parseDouble(this.sValorCampoGeneral));
						}
						 else if(sTipoSeleccionar.equals(FormaPagoPuntoVentaConstantesFunciones.LABEL_VALORDIFIERE)) {
							existe=true;
							formapagopuntoventaAux.setvalor_difiere(Double.parseDouble(this.sValorCampoGeneral));
						}
						 else if(sTipoSeleccionar.equals(FormaPagoPuntoVentaConstantesFunciones.LABEL_NUMERORETENCION)) {
							existe=true;
							formapagopuntoventaAux.setnumero_retencion(this.sValorCampoGeneral);
						}
						 else if(sTipoSeleccionar.equals(FormaPagoPuntoVentaConstantesFunciones.LABEL_NUMEROLIQUIDACION)) {
							existe=true;
							formapagopuntoventaAux.setnumero_liquidacion(this.sValorCampoGeneral);
						}
				}
			}
								
			if(existe) {
				this.inicializarActualizarBindingTablaFormaPagoPuntoVenta(false);
			} else {
				JOptionPane.showMessageDialog(this,"NO SE HA SELECCIONADO ALGUNA COLUMNA VALIDA","SELECCIONAR",JOptionPane.ERROR_MESSAGE);
			}			
		} catch(Exception e) {
			FuncionesSwing.manageException(this, e,logger,FormaPagoPuntoVentaConstantesFunciones.CLASSNAME);
		}
	}
	
	public void jComboBoxTiposAccionesFormaPagoPuntoVentaActionListener(ActionEvent evt,Boolean esParaAccionDesdeFormulario) throws Exception {    				
		Boolean conSplash=true;
		
		try {							
		
			this.inicializarActualizarBindingFormaPagoPuntoVenta(false,false);
			
			Reporte reporte=new Reporte();
			
			this.esParaAccionDesdeFormularioFormaPagoPuntoVenta=esParaAccionDesdeFormulario;
			
			if(!esParaAccionDesdeFormulario) {
				/*
				reporte=(Reporte)this.jComboBoxTiposAccionesFormaPagoPuntoVenta.getSelectedItem();
				*/
			} else {
				reporte=(Reporte)this.jInternalFrameDetalleFormFormaPagoPuntoVenta.jComboBoxTiposAccionesFormularioFormaPagoPuntoVenta.getSelectedItem();
			}
			String sTipoAccionLocal=this.sTipoAccion;
			
			if(!esParaAccionDesdeFormulario) {
				sTipoAccionLocal=this.sTipoAccion;
			} else {
				sTipoAccionLocal=this.sTipoAccionFormulario;
			}
			
			if(sTipoAccionLocal.equals("GENERAR REPORTE")) {//reporte.getsCodigo().equals("GENERAR REPORTE")) {
				if(this.isPermisoReporteFormaPagoPuntoVenta) {				
					conSplash=true;//false;										
					
					//this.startProcessFormaPagoPuntoVenta(conSplash);
				
					this.generarReporteFormaPagoPuntoVentasSeleccionados();
				} else {
					JOptionPane.showMessageDialog(this,"NO TIENE PERMISO PARA GENERAR REPORTES","REPORTE",JOptionPane.ERROR_MESSAGE);					
				}
				if(!esParaAccionDesdeFormulario) {
					/*
					this.jComboBoxTiposAccionesFormaPagoPuntoVenta.setSelectedIndex(0);					
					*/
				} else {
					this.jInternalFrameDetalleFormFormaPagoPuntoVenta.jComboBoxTiposAccionesFormularioFormaPagoPuntoVenta.setSelectedIndex(0);					
				}
			} else if(sTipoAccionLocal.equals("GENERAR REPORTE DINAMICO")) {//reporte.getsCodigo().equals("GENERAR_REPORTE_GROUP_GENERICO")) {
				//SE GENERA REPORTE SEGUN TIPO REPORTE SELECCIONADO
				//this.mostrarReporteDinamicoFormaPagoPuntoVentasSeleccionados();
				//this.jComboBoxTiposAccionesFormaPagoPuntoVenta.setSelectedIndex(0);					
			}  else if(sTipoAccionLocal.equals("GENERAR_REPORTE_GROUP_GENERICO")) {//reporte.getsCodigo().equals("GENERAR_REPORTE_GROUP_GENERICO")) {
				//SE GENERA REPORTE SEGUN TIPO REPORTE SELECCIONADO
				//this.generarReporteGroupGenericoFormaPagoPuntoVentasSeleccionados(false);
				//this.jComboBoxTiposAccionesFormaPagoPuntoVenta.setSelectedIndex(0);					
			} else if(sTipoAccionLocal.equals("GENERAR_REPORTE_TOTALES_GROUP_GENERICO")) {//reporte.getsCodigo().equals("GENERAR_REPORTE_GROUP_GENERICO")) {
				//SE GENERA REPORTE SEGUN TIPO REPORTE SELECCIONADO
				//this.generarReporteGroupGenericoFormaPagoPuntoVentasSeleccionados(true);
				//this.jComboBoxTiposAccionesFormaPagoPuntoVenta.setSelectedIndex(0);					
			} else if(sTipoAccionLocal.equals("EXPORTAR_DATOS")) {//reporte.getsCodigo().equals("GENERAR_REPORTE_GROUP_GENERICO")) {
				//this.startProcessFormaPagoPuntoVenta();
				
				this.exportarFormaPagoPuntoVentasSeleccionados();
				if(!esParaAccionDesdeFormulario) {
					/*
					this.jComboBoxTiposAccionesFormaPagoPuntoVenta.setSelectedIndex(0);					
					*/
				} else {
					this.jInternalFrameDetalleFormFormaPagoPuntoVenta.jComboBoxTiposAccionesFormularioFormaPagoPuntoVenta.setSelectedIndex(0);					
				}					
			} else if(sTipoAccionLocal.equals("IMPORTAR_DATOS")) {//reporte.getsCodigo().equals("GENERAR_REPORTE_GROUP_GENERICO")) {
				this.mostrarImportacionFormaPagoPuntoVentas();
				//this.importarFormaPagoPuntoVentas();
				if(!esParaAccionDesdeFormulario) {
					/*
					this.jComboBoxTiposAccionesFormaPagoPuntoVenta.setSelectedIndex(0);					
					*/
				} else {
					this.jInternalFrameDetalleFormFormaPagoPuntoVenta.jComboBoxTiposAccionesFormularioFormaPagoPuntoVenta.setSelectedIndex(0);					
				}					
			} else if(sTipoAccionLocal.equals("EXPORTAR_DATOS_EXCEL")) {//reporte.getsCodigo().equals("GENERAR_REPORTE_GROUP_GENERICO")) {
				//this.startProcessFormaPagoPuntoVenta();
				//SE EXPORTA SEGUN TIPO ARCHIVO SELECCIONADO
				//this.exportarExcelFormaPagoPuntoVentasSeleccionados();
				//this.jComboBoxTiposAccionesFormaPagoPuntoVenta.setSelectedIndex(0);					
			}  else if(sTipoAccionLocal.equals("RECARGAR_FK")) {//reporte.getsCodigo().equals("GENERAR_REPORTE_GROUP_GENERICO")) {								
				if(JOptionPane.showConfirmDialog(this, "ESTA SEGURO DE RECARGAR REFERENCIAS ?", "MANTENIMIENTO DE Forma Pago", JOptionPane.OK_CANCEL_OPTION) == 0) {
				
				//this.startProcessFormaPagoPuntoVenta();
				
					if(!esParaAccionDesdeFormulario || (esParaAccionDesdeFormulario && this.isEsNuevoFormaPagoPuntoVenta)) {
						this.esRecargarFks=true;
						this.cargarCombosForeignKeyFormaPagoPuntoVenta(false,false,false);
						this.esRecargarFks=false;
						
						JOptionPane.showMessageDialog(this,"PROCESO EJECUTADO CORRECTAMENTE","MANTENIMIENTO DE Forma Pago",JOptionPane.INFORMATION_MESSAGE);
					} else {
						JOptionPane.showMessageDialog(this,"ESTE PROCESO SOLO FUNCIONA AL INGRESAR UN NUEVO ELEMENTO","MANTENIMIENTO",JOptionPane.ERROR_MESSAGE);	
					}
					
					
				}
				
				if(!esParaAccionDesdeFormulario) {
					/*
					this.jComboBoxTiposAccionesFormaPagoPuntoVenta.setSelectedIndex(0);					
					*/
				} else {
					this.jInternalFrameDetalleFormFormaPagoPuntoVenta.jComboBoxTiposAccionesFormularioFormaPagoPuntoVenta.setSelectedIndex(0);					
				}	
			} 			
			else if(FormaPagoPuntoVentaBeanSwingJInternalFrame.EsProcesoReporte(reporte.getsCodigo())){
				if(this.isPermisoReporteFormaPagoPuntoVenta) {				
					if(this.tieneElementosSeleccionados()) {
						this.quitarFilaTotales();
						
						conSplash=false;
						
						//this.startProcessFormaPagoPuntoVenta(conSplash);
					
						//this.actualizarParametrosGeneralFormaPagoPuntoVenta();
						
						this.generarReporteProcesoAccionFormaPagoPuntoVentasSeleccionados(reporte.getsCodigo());
						
						if(!esParaAccionDesdeFormulario) {
							/*
							this.jComboBoxTiposAccionesFormaPagoPuntoVenta.setSelectedIndex(0);					
							*/
						} else {
							this.jInternalFrameDetalleFormFormaPagoPuntoVenta.jComboBoxTiposAccionesFormularioFormaPagoPuntoVenta.setSelectedIndex(0);					
						}
					} else {
						JOptionPane.showMessageDialog(this,"NO SE HA SELECCIONADO ALGUN ELEMENTO","SELECCIONAR",JOptionPane.ERROR_MESSAGE);
					}
				} else {
					JOptionPane.showMessageDialog(this,"NO TIENE PERMISO PARA GENERAR REPORTES","REPORTE",JOptionPane.ERROR_MESSAGE);					
				}
			} 
			else if(FormaPagoPuntoVentaBeanSwingJInternalFrameAdditional.EsProcesoAccionNormal(reporte.getsCodigo())){
				if(this.tieneElementosSeleccionados()) {
					this.quitarFilaTotales();
					
					if(JOptionPane.showConfirmDialog(this, "ESTA SEGURO DE PROCESAR "+reporte.getsDescripcion()+" EN PROCESO Forma PagoES SELECCIONADOS?", "MANTENIMIENTO DE Forma Pago", JOptionPane.OK_CANCEL_OPTION) == 0) {
						//this.startProcessFormaPagoPuntoVenta();
				
						this.actualizarParametrosGeneralFormaPagoPuntoVenta();
						
						//ARCHITECTURE
						if(Constantes.ISUSAEJBLOGICLAYER) {						
							this.formapagopuntoventaReturnGeneral=formapagopuntoventaLogic.procesarAccionFormaPagoPuntoVentasWithConnection(this.parametroGeneralUsuario,this.moduloActual,this.opcionActual,this.usuarioActual,sTipoAccionLocal,this.formapagopuntoventaLogic.getFormaPagoPuntoVentas(),this.formapagopuntoventaParameterGeneral);
						
						} else if(Constantes.ISUSAEJBREMOTE) {
						
						} else if(Constantes.ISUSAEJBHOME) {
						}
						//ARCHITECTURE
						
						this.procesarFormaPagoPuntoVentaReturnGeneral();
					
					if(!esParaAccionDesdeFormulario) {
						/*
						this.jComboBoxTiposAccionesFormaPagoPuntoVenta.setSelectedIndex(0);					
						*/
					} else {
						this.jInternalFrameDetalleFormFormaPagoPuntoVenta.jComboBoxTiposAccionesFormularioFormaPagoPuntoVenta.setSelectedIndex(0);					
					}
					}
				} else {
					JOptionPane.showMessageDialog(this,"NO SE HA SELECCIONADO ALGUN ELEMENTO","SELECCIONAR",JOptionPane.ERROR_MESSAGE);
				}				
			} 
			else {
				if(this.tieneElementosSeleccionados()) {
					this.quitarFilaTotales();
					
					this.actualizarParametrosGeneralFormaPagoPuntoVenta();
					
					FormaPagoPuntoVentaBeanSwingJInternalFrameAdditional.ProcesarAccion(reporte.getsCodigo(),reporte.getsDescripcion(),this);
					
					this.procesarFormaPagoPuntoVentaReturnGeneral();
					
					if(!esParaAccionDesdeFormulario) {
						/*
						this.jComboBoxTiposAccionesFormaPagoPuntoVenta.setSelectedIndex(0);					
						*/
					} else {
						this.jInternalFrameDetalleFormFormaPagoPuntoVenta.jComboBoxTiposAccionesFormularioFormaPagoPuntoVenta.setSelectedIndex(0);					
					}
				} else {
					JOptionPane.showMessageDialog(this,"NO SE HA SELECCIONADO ALGUN ELEMENTO","SELECCIONAR",JOptionPane.ERROR_MESSAGE);
				}
			}
		} catch(Exception e) {
			this.esRecargarFks=false;
			
			FuncionesSwing.manageException(this, e,logger,FormaPagoPuntoVentaConstantesFunciones.CLASSNAME);
		
		}  finally {
      		//this.finishProcessFormaPagoPuntoVenta(conSplash);
      	}
	}
	
	public void jComboBoxTiposRelacionesFormaPagoPuntoVentaActionListener(ActionEvent evt) throws Exception {    				
		Boolean conSplash=true;
		
		try {			
			this.startProcessFormaPagoPuntoVenta();
			
			if(this.jInternalFrameDetalleFormFormaPagoPuntoVenta==null) { //if(!this.conCargarFormDetalle) {			
				this.inicializarFormDetalle();
			}
			
			ArrayList<FormaPagoPuntoVenta> formapagopuntoventasSeleccionados=new ArrayList<FormaPagoPuntoVenta>();		
			FormaPagoPuntoVenta formapagopuntoventa=new FormaPagoPuntoVenta();
			
			int rowIndex=-1;//CON ESTO SE DESHABILITA SELECCION POR INDICE
			
			this.inicializarActualizarBindingFormaPagoPuntoVenta(false,false);
			
			Reporte reporte=new Reporte();
			
			/*
			reporte=(Reporte)this.jComboBoxTiposRelacionesFormaPagoPuntoVenta.getSelectedItem();
			*/
			
			
			
			formapagopuntoventasSeleccionados=this.getFormaPagoPuntoVentasSeleccionados(true);
			//this.sTipoAccion;
			
			if(formapagopuntoventasSeleccionados.size()==1) {
				for(FormaPagoPuntoVenta formapagopuntoventaAux:formapagopuntoventasSeleccionados) {
					formapagopuntoventa=formapagopuntoventaAux;
				}
				
				if(this.sTipoAccion.equals("NONE")) {
				
				}
				
			} else {
				JOptionPane.showMessageDialog(this,"SELECCIONE SOLO UN REGISTRO","RELACIONES",JOptionPane.ERROR_MESSAGE);
			}
			
		} catch(Exception e) {
			FuncionesSwing.manageException(this, e,logger,FormaPagoPuntoVentaConstantesFunciones.CLASSNAME);
		
		}  finally {
			this.finishProcessFormaPagoPuntoVenta();
			
      		//this.finishProcessFormaPagoPuntoVenta(conSplash);
      	}
	}
			
	public static Boolean EsProcesoReporte(String sTipoProceso) throws Exception {
		Boolean esProcesoAccionRepoorte=false;

		if(sTipoProceso.contains("REPORTE_")) {
			 esProcesoAccionRepoorte=true;
		}

		return esProcesoAccionRepoorte;
	}
	
	public void procesarFormaPagoPuntoVentaReturnGeneral() throws Exception {
		if(this.formapagopuntoventaReturnGeneral.getConRetornoEstaProcesado()) {
			JOptionPane.showMessageDialog(this,this.formapagopuntoventaReturnGeneral.getsMensajeProceso(),"PROCESO",JOptionPane.INFORMATION_MESSAGE);
		}
		
		if(this.formapagopuntoventaReturnGeneral.getConMostrarMensaje()) {
			JOptionPane.showMessageDialog(this,this.formapagopuntoventaReturnGeneral.getsMensajeProceso(),"PROCESO",FuncionesSwing.getColorSelectedBackground(this.formapagopuntoventaReturnGeneral.getsTipoMensaje()));
		}
		
		if(this.formapagopuntoventaReturnGeneral.getConRecargarInformacion()) {
			this.procesarBusqueda(this.sAccionBusqueda);
			
			this.inicializarActualizarBindingFormaPagoPuntoVenta(false);
		}
		
		if(this.formapagopuntoventaReturnGeneral.getConRetornoLista() || this.formapagopuntoventaReturnGeneral.getConRetornoObjeto()) {
			if(this.formapagopuntoventaReturnGeneral.getConRetornoLista()) {
				//ARCHITECTURE
				if(Constantes.ISUSAEJBLOGICLAYER) {	
					this.formapagopuntoventaLogic.setFormaPagoPuntoVentas(this.formapagopuntoventaReturnGeneral.getFormaPagoPuntoVentas());
				} else if(Constantes.ISUSAEJBREMOTE) {
				} else if(Constantes.ISUSAEJBHOME) {
				}
				//ARCHITECTURE
			}
			
			if(this.formapagopuntoventaReturnGeneral.getConRetornoObjeto()) {
				//ARCHITECTURE
				if(Constantes.ISUSAEJBLOGICLAYER) {	
					this.formapagopuntoventaLogic.setFormaPagoPuntoVenta(this.formapagopuntoventaReturnGeneral.getFormaPagoPuntoVenta());
				} else if(Constantes.ISUSAEJBREMOTE) {
				} else if(Constantes.ISUSAEJBHOME) {
				}
				//ARCHITECTURE
			}
			
			this.inicializarActualizarBindingFormaPagoPuntoVenta(false);
		}
	}
	
	public void actualizarParametrosGeneralFormaPagoPuntoVenta() throws Exception {
		
		
	}
	
	public ArrayList<FormaPagoPuntoVenta> getFormaPagoPuntoVentasSeleccionados(Boolean conSeleccionarTodosAutomatico) throws Exception {
		ArrayList<FormaPagoPuntoVenta> formapagopuntoventasSeleccionados=new ArrayList<FormaPagoPuntoVenta>();
		Boolean existe=false;
		
		if(!this.esParaAccionDesdeFormularioFormaPagoPuntoVenta) {
			if(Constantes.ISUSAEJBLOGICLAYER) {	
				
				for(FormaPagoPuntoVenta formapagopuntoventaAux:formapagopuntoventaLogic.getFormaPagoPuntoVentas()) {
					if(formapagopuntoventaAux.getIsSelected()) {
						formapagopuntoventasSeleccionados.add(formapagopuntoventaAux);				
					}
				}
				
			} else if(Constantes.ISUSAEJBREMOTE||Constantes.ISUSAEJBHOME) {
				for(FormaPagoPuntoVenta formapagopuntoventaAux:this.formapagopuntoventas) {
					if(formapagopuntoventaAux.getIsSelected()) {
						formapagopuntoventasSeleccionados.add(formapagopuntoventaAux);				
					}
				}
			}
			
			if(formapagopuntoventasSeleccionados.size()>0) {
				existe=true;
			}
			
			//SI NO ESTA NINGUNO SELECCIONADO SE SELECCIONA TODOS
			if(!existe) {
				if(conSeleccionarTodosAutomatico) {
					if(Constantes.ISUSAEJBLOGICLAYER) {				
						formapagopuntoventasSeleccionados.addAll(this.formapagopuntoventaLogic.getFormaPagoPuntoVentas());
					} else if(Constantes.ISUSAEJBREMOTE||Constantes.ISUSAEJBHOME) {
						formapagopuntoventasSeleccionados.addAll(this.formapagopuntoventas);				
					}
				}
			}
		} else {
			formapagopuntoventasSeleccionados.add(this.formapagopuntoventa);
		}
		
		return formapagopuntoventasSeleccionados;
	}
	
	public void actualizarVariablesTipoReporte(Boolean esReporteNormal,Boolean esReporteDinamico,Boolean esReporteAccionProceso,String sPath) {
		if(esReporteNormal) {
			this.sTipoReporteExtra="";
			this.esReporteDinamico=false;
			this.sPathReporteDinamico="";
			this.esReporteAccionProceso=false;
			
		} else if(esReporteAccionProceso) {
			this.sTipoReporteExtra="";
			this.esReporteDinamico=false;
			this.sPathReporteDinamico="";
			this.esReporteAccionProceso=true;
			
		} else if(esReporteDinamico) {
			this.sTipoReporteExtra="";
			this.esReporteDinamico=true;
			this.esReporteAccionProceso=false;
			this.sPathReporteDinamico=sPath.replace(".jrxml",".jasper");			
		}
	}
	
	public void generarReporteFormaPagoPuntoVentasSeleccionados() throws Exception {
		Boolean existe=false;
		
		if(this.sTipoReporte.equals("NORMAL") || this.sTipoReporte.equals("FORMULARIO")) {
			existe=true;								
			this.generarReporteNormalFormaPagoPuntoVentasSeleccionados();
			
		} else if(this.sTipoReporte.equals("DINAMICO")) {
			existe=true;
			this.mostrarReporteDinamicoFormaPagoPuntoVentasSeleccionados();
			
		} else if(this.sTipoReporte.equals("GRUPO_GENERICO")) {
			existe=true;
			this.generarReporteGroupGenericoFormaPagoPuntoVentasSeleccionados(false);
			
		} else if(this.sTipoReporte.equals("TOTALES_GRUPO_GENERICO")) {
			existe=true;
			this.generarReporteGroupGenericoFormaPagoPuntoVentasSeleccionados(true);
		}
		
		if(!existe) {
			JOptionPane.showMessageDialog(this,"SELECCIONE UN TIPO DE REPORTE VALIDO","REPORTE DE Forma Pago",JOptionPane.ERROR_MESSAGE);
		}
	}
	
	public void generarReporteRelacionesFormaPagoPuntoVentasSeleccionados() throws Exception {
		ArrayList<FormaPagoPuntoVenta> formapagopuntoventasSeleccionados=new ArrayList<FormaPagoPuntoVenta>();		
		
		formapagopuntoventasSeleccionados=this.getFormaPagoPuntoVentasSeleccionados(true);
		
		this.actualizarVariablesTipoReporte(true,false,false,"");
					
		//this.sTipoReporteExtra="MasterRelaciones";
		
		/*
		this.sTipoReporteExtra="";
		this.esReporteDinamico=false;
		this.sPathReporteDinamico="";
		*/
		
		
		this.generarReporteFormaPagoPuntoVentas("Todos",formapagopuntoventasSeleccionados);
		
	}	
	
	public void generarReporteNormalFormaPagoPuntoVentasSeleccionados() throws Exception {
		ArrayList<FormaPagoPuntoVenta> formapagopuntoventasSeleccionados=new ArrayList<FormaPagoPuntoVenta>();		
		
		formapagopuntoventasSeleccionados=this.getFormaPagoPuntoVentasSeleccionados(true);
		
		this.actualizarVariablesTipoReporte(true,false,false,"");
								
		if(this.sTipoReporte.equals("FORMULARIO")) {
			this.sTipoReporteExtra="Vertical";					
		}
		
		/*
		this.sTipoReporteExtra="";
		this.esReporteDinamico=false;
		this.sPathReporteDinamico="";
		*/
		
		this.generarReporteFormaPagoPuntoVentas("Todos",formapagopuntoventasSeleccionados);
	}		
	
	public void generarReporteProcesoAccionFormaPagoPuntoVentasSeleccionados(String sProcesoReporte) throws Exception {
		ArrayList<FormaPagoPuntoVenta> formapagopuntoventasSeleccionados=new ArrayList<FormaPagoPuntoVenta>();
		
		formapagopuntoventasSeleccionados=this.getFormaPagoPuntoVentasSeleccionados(true);
		
		this.actualizarVariablesTipoReporte(false,false,true,"");
		
		/*
		this.esReporteDinamico=false;
		this.sPathReporteDinamico="";
		*/
		
		this.sTipoReporteExtra=sProcesoReporte.toLowerCase();
		
		this.esReporteAccionProceso=true;
		this.generarReporteFormaPagoPuntoVentas("Todos",formapagopuntoventasSeleccionados);
		this.esReporteAccionProceso=false;
	}
	
	
	public void mostrarReporteDinamicoFormaPagoPuntoVentasSeleccionados() throws Exception {
		ArrayList<FormaPagoPuntoVenta> formapagopuntoventasSeleccionados=new ArrayList<FormaPagoPuntoVenta>();		
		
		/*
		this.abrirInicializarFrameReporteDinamicoFormaPagoPuntoVenta();
		*/
		
		formapagopuntoventasSeleccionados=this.getFormaPagoPuntoVentasSeleccionados(true);
		
		this.sTipoReporteExtra="";
		//this.actualizarVariablesTipoReporte(true,false,false,"");
		
		/*
		this.abrirFrameReporteDinamicoFormaPagoPuntoVenta();
		*/
		
		//this.generarReporteFormaPagoPuntoVentas("Todos",formapagopuntoventasSeleccionados ,formapagopuntoventaImplementable,formapagopuntoventaImplementableHome);
	}
	
	public void mostrarImportacionFormaPagoPuntoVentas() throws Exception {
		//this.sTipoReporteExtra="";
		//this.actualizarVariablesTipoReporte(true,false,false,"");
		
		/*
		this.abrirInicializarFrameImportacionFormaPagoPuntoVenta();
		
		this.abrirFrameImportacionFormaPagoPuntoVenta();		
		*/
			
		//this.generarReporteFormaPagoPuntoVentas("Todos",formapagopuntoventasSeleccionados ,formapagopuntoventaImplementable,formapagopuntoventaImplementableHome);
	}
	
	public void importarFormaPagoPuntoVentas() throws Exception {		
	
	}
	
	public void exportarFormaPagoPuntoVentasSeleccionados() throws Exception {
		Boolean existe=false;
		
		if(this.sTipoArchivoReporte.equals("EXCEL")) {
			existe=true;
			this.exportarExcelFormaPagoPuntoVentasSeleccionados();
			
		} else if(this.sTipoArchivoReporte.equals("TEXTO")) {
			existe=true;
			this.exportarTextoFormaPagoPuntoVentasSeleccionados();
		
		} else if(this.sTipoArchivoReporte.equals("XML")) {
			existe=true;
			this.exportarXmlFormaPagoPuntoVentasSeleccionados();
		} 
		
		if(!existe) {
			JOptionPane.showMessageDialog(this,"SELECCIONE UN TIPO DE ARCHIVO VALIDO","EXPORTACION DE Forma Pago",JOptionPane.ERROR_MESSAGE);
		}
	}
	
	public void exportarTextoFormaPagoPuntoVentasSeleccionados() throws Exception {
		ArrayList<FormaPagoPuntoVenta> formapagopuntoventasSeleccionados=new ArrayList<FormaPagoPuntoVenta>();		
		
		formapagopuntoventasSeleccionados=this.getFormaPagoPuntoVentasSeleccionados(true);
		
		String sTipo=Funciones2.getTipoExportar(this.parametroGeneralUsuario);
		Boolean conCabecera=this.parametroGeneralUsuario.getcon_exportar_cabecera();
		String sDelimiter=Funciones2.getTipoDelimiter(this.parametroGeneralUsuario);
		String sPath=this.parametroGeneralUsuario.getpath_exportar()+"formapagopuntoventa."+"txt";//Funciones2.getTipoExtensionArchivoExportar(this.parametroGeneralUsuario);
		
		String sFilaCabecera="";
		String sFilaDatos="";
		
		BufferedWriter bufferedWriter = null;
		FileWriter fileWriter=null;
		
		fileWriter=new FileWriter(sPath);
		
		bufferedWriter = new BufferedWriter(fileWriter);
		
		try {
			if(conCabecera) {
				sFilaCabecera=this.getFilaCabeceraExportarFormaPagoPuntoVenta(sDelimiter);
				
				bufferedWriter.write(sFilaCabecera);
			}				
			
			for(FormaPagoPuntoVenta formapagopuntoventaAux:formapagopuntoventasSeleccionados) {
				sFilaDatos=this.getFilaDatosExportarFormaPagoPuntoVenta(formapagopuntoventaAux,sDelimiter);
				
				bufferedWriter.write(sFilaDatos);
				
				//formapagopuntoventaAux.setsDetalleGeneralEntityReporte(formapagopuntoventaAux.toString());			
			}
			
			bufferedWriter.close();
			
			Constantes2.S_PATH_ULTIMO_ARCHIVO=sPath;
			
			if(this.parametroGeneralUsuario.getcon_mensaje_confirmacion() && !this.formapagopuntoventaSessionBean.getEsGuardarRelacionado()) {//Constantes.ISMOSTRARMENSAJESMANTENIMIENTO && 
				JOptionPane.showMessageDialog(this,"EXPORTADO CORRECTAMENTE:"+sPath,"MANTENIMIENTO DE Forma Pago",JOptionPane.INFORMATION_MESSAGE);
			}
		} catch (Exception e) {
			throw e;
			
		} finally {
       		if (bufferedWriter != null) {
				bufferedWriter.close();
			}
		}
	}
	
	public String getFilaCabeceraExportarFormaPagoPuntoVenta(String sDelimiter) {
		String sFilaCabecera="";
		
		
		sFilaCabecera+=FormaPagoPuntoVentaConstantesFunciones.LABEL_ID;

		if(parametroGeneralUsuario.getcon_exportar_campo_version()){
			sFilaCabecera+=sDelimiter;
		sFilaCabecera+=FormaPagoPuntoVentaConstantesFunciones.LABEL_VERSIONROW;
		}

		sFilaCabecera+=sDelimiter;
		sFilaCabecera+=FormaPagoPuntoVentaConstantesFunciones.LABEL_IDEMPRESA;
		sFilaCabecera+=sDelimiter;
		sFilaCabecera+=FormaPagoPuntoVentaConstantesFunciones.LABEL_IDSUCURSAL;
		sFilaCabecera+=sDelimiter;
		sFilaCabecera+=FormaPagoPuntoVentaConstantesFunciones.LABEL_IDEJERCICIO;
		sFilaCabecera+=sDelimiter;
		sFilaCabecera+=FormaPagoPuntoVentaConstantesFunciones.LABEL_IDPERIODO;
		sFilaCabecera+=sDelimiter;
		sFilaCabecera+=FormaPagoPuntoVentaConstantesFunciones.LABEL_IDFACTURAPUNTOVENTA;
		sFilaCabecera+=sDelimiter;
		sFilaCabecera+=FormaPagoPuntoVentaConstantesFunciones.LABEL_IDTIPOFORMAPAGO;
		sFilaCabecera+=sDelimiter;
		sFilaCabecera+=FormaPagoPuntoVentaConstantesFunciones.LABEL_PORCENTAJE;
		sFilaCabecera+=sDelimiter;
		sFilaCabecera+=FormaPagoPuntoVentaConstantesFunciones.LABEL_VALOR;
		sFilaCabecera+=sDelimiter;
		sFilaCabecera+=FormaPagoPuntoVentaConstantesFunciones.LABEL_FECHA;
		sFilaCabecera+=sDelimiter;
		sFilaCabecera+=FormaPagoPuntoVentaConstantesFunciones.LABEL_DESCRIPCION;
		sFilaCabecera+=sDelimiter;
		sFilaCabecera+=FormaPagoPuntoVentaConstantesFunciones.LABEL_FECHAINICIO;
		sFilaCabecera+=sDelimiter;
		sFilaCabecera+=FormaPagoPuntoVentaConstantesFunciones.LABEL_NUMERODIASPLAZO;
		sFilaCabecera+=sDelimiter;
		sFilaCabecera+=FormaPagoPuntoVentaConstantesFunciones.LABEL_FECHAFIN;
		sFilaCabecera+=sDelimiter;
		sFilaCabecera+=FormaPagoPuntoVentaConstantesFunciones.LABEL_IDBANCO;
		sFilaCabecera+=sDelimiter;
		sFilaCabecera+=FormaPagoPuntoVentaConstantesFunciones.LABEL_IDCUENTABANCOPUNVEN;
		sFilaCabecera+=sDelimiter;
		sFilaCabecera+=FormaPagoPuntoVentaConstantesFunciones.LABEL_IDTIPORIESGOCHEQUE;
		sFilaCabecera+=sDelimiter;
		sFilaCabecera+=FormaPagoPuntoVentaConstantesFunciones.LABEL_NUMEROCUENTA;
		sFilaCabecera+=sDelimiter;
		sFilaCabecera+=FormaPagoPuntoVentaConstantesFunciones.LABEL_NUMEROCHEQUE;
		sFilaCabecera+=sDelimiter;
		sFilaCabecera+=FormaPagoPuntoVentaConstantesFunciones.LABEL_GIRADOR;
		sFilaCabecera+=sDelimiter;
		sFilaCabecera+=FormaPagoPuntoVentaConstantesFunciones.LABEL_IDBANCOTARJETA;
		sFilaCabecera+=sDelimiter;
		sFilaCabecera+=FormaPagoPuntoVentaConstantesFunciones.LABEL_IDTARJETACREDITO;
		sFilaCabecera+=sDelimiter;
		sFilaCabecera+=FormaPagoPuntoVentaConstantesFunciones.LABEL_IDTIPOINTERESTARJETA;
		sFilaCabecera+=sDelimiter;
		sFilaCabecera+=FormaPagoPuntoVentaConstantesFunciones.LABEL_IDTIPOPAGOTARJETA;
		sFilaCabecera+=sDelimiter;
		sFilaCabecera+=FormaPagoPuntoVentaConstantesFunciones.LABEL_IDCONEXION;
		sFilaCabecera+=sDelimiter;
		sFilaCabecera+=FormaPagoPuntoVentaConstantesFunciones.LABEL_IDMES;
		sFilaCabecera+=sDelimiter;
		sFilaCabecera+=FormaPagoPuntoVentaConstantesFunciones.LABEL_NUMERO;
		sFilaCabecera+=sDelimiter;
		sFilaCabecera+=FormaPagoPuntoVentaConstantesFunciones.LABEL_TARJETAHABIENTE;
		sFilaCabecera+=sDelimiter;
		sFilaCabecera+=FormaPagoPuntoVentaConstantesFunciones.LABEL_AUTORIZACION;
		sFilaCabecera+=sDelimiter;
		sFilaCabecera+=FormaPagoPuntoVentaConstantesFunciones.LABEL_VOUCHER;
		sFilaCabecera+=sDelimiter;
		sFilaCabecera+=FormaPagoPuntoVentaConstantesFunciones.LABEL_LOTE;
		sFilaCabecera+=sDelimiter;
		sFilaCabecera+=FormaPagoPuntoVentaConstantesFunciones.LABEL_CUOTA;
		sFilaCabecera+=sDelimiter;
		sFilaCabecera+=FormaPagoPuntoVentaConstantesFunciones.LABEL_VALORRETENCION;
		sFilaCabecera+=sDelimiter;
		sFilaCabecera+=FormaPagoPuntoVentaConstantesFunciones.LABEL_VALORCOMISION;
		sFilaCabecera+=sDelimiter;
		sFilaCabecera+=FormaPagoPuntoVentaConstantesFunciones.LABEL_VALORCALCULADO;
		sFilaCabecera+=sDelimiter;
		sFilaCabecera+=FormaPagoPuntoVentaConstantesFunciones.LABEL_VALORCANCELADO;
		sFilaCabecera+=sDelimiter;
		sFilaCabecera+=FormaPagoPuntoVentaConstantesFunciones.LABEL_VALORDIFIERE;
		sFilaCabecera+=sDelimiter;
		sFilaCabecera+=FormaPagoPuntoVentaConstantesFunciones.LABEL_NUMERORETENCION;
		sFilaCabecera+=sDelimiter;
		sFilaCabecera+=FormaPagoPuntoVentaConstantesFunciones.LABEL_NUMEROLIQUIDACION;
		sFilaCabecera+=sDelimiter;
		sFilaCabecera+=FormaPagoPuntoVentaConstantesFunciones.LABEL_IDANIO;
		sFilaCabecera+=sDelimiter;
		sFilaCabecera+=FormaPagoPuntoVentaConstantesFunciones.LABEL_IDCUENTACONTABLE;
		sFilaCabecera+=sDelimiter;
		sFilaCabecera+=FormaPagoPuntoVentaConstantesFunciones.LABEL_IDASIENTOCONTABLE;
		
		return sFilaCabecera;
	}
	
	public String getFilaDatosExportarFormaPagoPuntoVenta(FormaPagoPuntoVenta formapagopuntoventa,String sDelimiter) {
		String sFilaDatos="";
		
		sFilaDatos+="\r\n";
		
		
		sFilaDatos+=formapagopuntoventa.getId().toString();

		if(parametroGeneralUsuario.getcon_exportar_campo_version()){
			sFilaDatos+=sDelimiter;
		sFilaDatos+=formapagopuntoventa.getVersionRow().toString();
		}

		sFilaDatos+=sDelimiter;
		sFilaDatos+=formapagopuntoventa.getempresa_descripcion();
		sFilaDatos+=sDelimiter;
		sFilaDatos+=formapagopuntoventa.getsucursal_descripcion();
		sFilaDatos+=sDelimiter;
		sFilaDatos+=formapagopuntoventa.getejercicio_descripcion();
		sFilaDatos+=sDelimiter;
		sFilaDatos+=formapagopuntoventa.getperiodo_descripcion();
		sFilaDatos+=sDelimiter;
		sFilaDatos+=formapagopuntoventa.getfacturapuntoventa_descripcion();
		sFilaDatos+=sDelimiter;
		sFilaDatos+=formapagopuntoventa.gettipoformapago_descripcion();
		sFilaDatos+=sDelimiter;
		sFilaDatos+=formapagopuntoventa.getporcentaje().toString();
		sFilaDatos+=sDelimiter;
		sFilaDatos+=formapagopuntoventa.getvalor().toString();
		sFilaDatos+=sDelimiter;
		sFilaDatos+=formapagopuntoventa.getfecha().toString();
		sFilaDatos+=sDelimiter;
		sFilaDatos+=formapagopuntoventa.getdescripcion();
		sFilaDatos+=sDelimiter;
		sFilaDatos+=formapagopuntoventa.getfecha_inicio().toString();
		sFilaDatos+=sDelimiter;
		sFilaDatos+=formapagopuntoventa.getnumero_dias_plazo().toString();
		sFilaDatos+=sDelimiter;
		sFilaDatos+=formapagopuntoventa.getfecha_fin().toString();
		sFilaDatos+=sDelimiter;
		sFilaDatos+=formapagopuntoventa.getbanco_descripcion();
		sFilaDatos+=sDelimiter;
		sFilaDatos+=formapagopuntoventa.getcuentabancopunven_descripcion();
		sFilaDatos+=sDelimiter;
		sFilaDatos+=formapagopuntoventa.gettiporiesgocheque_descripcion();
		sFilaDatos+=sDelimiter;
		sFilaDatos+=formapagopuntoventa.getnumero_cuenta();
		sFilaDatos+=sDelimiter;
		sFilaDatos+=formapagopuntoventa.getnumero_cheque();
		sFilaDatos+=sDelimiter;
		sFilaDatos+=formapagopuntoventa.getgirador();
		sFilaDatos+=sDelimiter;
		sFilaDatos+=formapagopuntoventa.getbancotarjeta_descripcion();
		sFilaDatos+=sDelimiter;
		sFilaDatos+=formapagopuntoventa.gettarjetacredito_descripcion();
		sFilaDatos+=sDelimiter;
		sFilaDatos+=formapagopuntoventa.gettipointerestarjeta_descripcion();
		sFilaDatos+=sDelimiter;
		sFilaDatos+=formapagopuntoventa.gettipopagotarjeta_descripcion();
		sFilaDatos+=sDelimiter;
		sFilaDatos+=formapagopuntoventa.getconexion_descripcion();
		sFilaDatos+=sDelimiter;
		sFilaDatos+=formapagopuntoventa.getmes_descripcion();
		sFilaDatos+=sDelimiter;
		sFilaDatos+=formapagopuntoventa.getnumero();
		sFilaDatos+=sDelimiter;
		sFilaDatos+=formapagopuntoventa.gettarjeta_habiente();
		sFilaDatos+=sDelimiter;
		sFilaDatos+=formapagopuntoventa.getautorizacion();
		sFilaDatos+=sDelimiter;
		sFilaDatos+=formapagopuntoventa.getvoucher();
		sFilaDatos+=sDelimiter;
		sFilaDatos+=formapagopuntoventa.getlote();
		sFilaDatos+=sDelimiter;
		sFilaDatos+=formapagopuntoventa.getcuota().toString();
		sFilaDatos+=sDelimiter;
		sFilaDatos+=formapagopuntoventa.getvalor_retencion().toString();
		sFilaDatos+=sDelimiter;
		sFilaDatos+=formapagopuntoventa.getvalor_comision().toString();
		sFilaDatos+=sDelimiter;
		sFilaDatos+=formapagopuntoventa.getvalor_calculado().toString();
		sFilaDatos+=sDelimiter;
		sFilaDatos+=formapagopuntoventa.getvalor_cancelado().toString();
		sFilaDatos+=sDelimiter;
		sFilaDatos+=formapagopuntoventa.getvalor_difiere().toString();
		sFilaDatos+=sDelimiter;
		sFilaDatos+=formapagopuntoventa.getnumero_retencion();
		sFilaDatos+=sDelimiter;
		sFilaDatos+=formapagopuntoventa.getnumero_liquidacion();
		sFilaDatos+=sDelimiter;
		sFilaDatos+=formapagopuntoventa.getanio_descripcion();
		sFilaDatos+=sDelimiter;
		sFilaDatos+=formapagopuntoventa.getcuentacontable_descripcion();
		sFilaDatos+=sDelimiter;
		sFilaDatos+=formapagopuntoventa.getasientocontable_descripcion();
		
		return sFilaDatos;
	}
	
	//@SuppressWarnings("deprecation")
	public void exportarExcelFormaPagoPuntoVentasSeleccionados() throws Exception {
		ArrayList<FormaPagoPuntoVenta> formapagopuntoventasSeleccionados=new ArrayList<FormaPagoPuntoVenta>();		
		
		formapagopuntoventasSeleccionados=this.getFormaPagoPuntoVentasSeleccionados(true);
		
		String sTipo=Funciones2.getTipoExportar(this.parametroGeneralUsuario);
		Boolean conCabecera=this.parametroGeneralUsuario.getcon_exportar_cabecera();
		String sDelimiter=Funciones2.getTipoDelimiter(this.parametroGeneralUsuario);
		String sPath=this.parametroGeneralUsuario.getpath_exportar()+"formapagopuntoventa.xls";
		
		String sFilaCabecera="";
		String sFilaDatos="";
		
		FileOutputStream fileOutputStream=null;
		
		try {
			HSSFWorkbook workbook = new HSSFWorkbook();
			HSSFSheet sheet = workbook.createSheet("FormaPagoPuntoVentas");
						
		    			
			Integer iRow=0;
			Integer iCell=0;
			
			HSSFRow row = sheet.createRow(iRow);
			HSSFCell cell = row.createCell(iCell);
			//cell.setCellValue("Blahblah");

			if(conCabecera) {
				this.getFilaCabeceraExportarExcelFormaPagoPuntoVenta(row);				
				iRow++;
			}				
			
			for(FormaPagoPuntoVenta formapagopuntoventaAux:formapagopuntoventasSeleccionados) {
				row = sheet.createRow(iRow);
				
				this.getFilaDatosExportarExcelFormaPagoPuntoVenta(formapagopuntoventaAux,row);
				
				iRow++;
			}
			
			
			fileOutputStream = new FileOutputStream(new File(sPath));
		    
			workbook.write(fileOutputStream);
			
			//fileOutputStream.close();
			
			Constantes2.S_PATH_ULTIMO_ARCHIVO=sPath;
			
			if(this.parametroGeneralUsuario.getcon_mensaje_confirmacion() && !this.formapagopuntoventaSessionBean.getEsGuardarRelacionado()) {//Constantes.ISMOSTRARMENSAJESMANTENIMIENTO && 
				JOptionPane.showMessageDialog(this,"EXPORTADO CORRECTAMENTE:"+sPath,"MANTENIMIENTO DE Forma Pago",JOptionPane.INFORMATION_MESSAGE);
			}
		} catch (Exception e) {
			throw e;
			
		} finally {			
       		if (fileOutputStream != null) {
				fileOutputStream.close();
			}			
		}
	}		
	
	public void exportarXmlFormaPagoPuntoVentasSeleccionados() throws Exception {
		ArrayList<FormaPagoPuntoVenta> formapagopuntoventasSeleccionados=new ArrayList<FormaPagoPuntoVenta>();		
		
		formapagopuntoventasSeleccionados=this.getFormaPagoPuntoVentasSeleccionados(true);
		
		//String sTipo=Funciones2.getTipoExportar(this.parametroGeneralUsuario);
		//Boolean conCabecera=this.parametroGeneralUsuario.getcon_exportar_cabecera();
		//String sDelimiter=Funciones2.getTipoDelimiter(this.parametroGeneralUsuario);
		String sPath=this.parametroGeneralUsuario.getpath_exportar()+"formapagopuntoventa.xml";
		
		String sFilaCabecera="";
		String sFilaDatos="";
		
		DocumentBuilderFactory documentBuilderFactory=null;
		DocumentBuilder documentBuilder =null;
		
		try {
			documentBuilderFactory = DocumentBuilderFactory.newInstance();
			documentBuilder = documentBuilderFactory.newDocumentBuilder();
	
			Document document = documentBuilder.newDocument();
			Element elementRoot = document.createElement("formapagopuntoventas");
			
			document.appendChild(elementRoot);
		    			
												
			Element element = null;//document.createElement("formapagopuntoventa");
			//elementRoot.appendChild(element);
		
			for(FormaPagoPuntoVenta formapagopuntoventaAux:formapagopuntoventasSeleccionados) {
				element = document.createElement("formapagopuntoventa");
				elementRoot.appendChild(element);
			
				this.setFilaDatosExportarXmlFormaPagoPuntoVenta(formapagopuntoventaAux,document,element);
			}
			
			TransformerFactory transformerFactory = TransformerFactory.newInstance();
			Transformer transformer = transformerFactory.newTransformer();
			DOMSource domSource = new DOMSource(document);
			
			StreamResult streamResult = new StreamResult(new File(sPath));
	
			transformer.transform(domSource, streamResult);
						
			Constantes2.S_PATH_ULTIMO_ARCHIVO=sPath;
			
			if(this.parametroGeneralUsuario.getcon_mensaje_confirmacion() && !this.formapagopuntoventaSessionBean.getEsGuardarRelacionado()) {//Constantes.ISMOSTRARMENSAJESMANTENIMIENTO && 
				JOptionPane.showMessageDialog(this,"EXPORTADO CORRECTAMENTE:"+sPath,"MANTENIMIENTO DE Forma Pago",JOptionPane.INFORMATION_MESSAGE);
			}
		} catch (Exception e) {
			throw e;
			
		} finally {			       				
		}
	}	
	
	//@SuppressWarnings("deprecation")
	public void getFilaCabeceraExportarExcelFormaPagoPuntoVenta(HSSFRow row) {
		Integer iColumn=0;
		
		
		HSSFCell cell =null;
		cell = row.createCell(iColumn++);cell.setCellValue(FormaPagoPuntoVentaConstantesFunciones.LABEL_ID);

		if(parametroGeneralUsuario.getcon_exportar_campo_version()){
		cell = row.createCell(iColumn++);cell.setCellValue(FormaPagoPuntoVentaConstantesFunciones.LABEL_VERSIONROW);
		}

		cell = row.createCell(iColumn++);cell.setCellValue(FormaPagoPuntoVentaConstantesFunciones.LABEL_IDEMPRESA);
		cell = row.createCell(iColumn++);cell.setCellValue(FormaPagoPuntoVentaConstantesFunciones.LABEL_IDSUCURSAL);
		cell = row.createCell(iColumn++);cell.setCellValue(FormaPagoPuntoVentaConstantesFunciones.LABEL_IDEJERCICIO);
		cell = row.createCell(iColumn++);cell.setCellValue(FormaPagoPuntoVentaConstantesFunciones.LABEL_IDPERIODO);
		cell = row.createCell(iColumn++);cell.setCellValue(FormaPagoPuntoVentaConstantesFunciones.LABEL_IDFACTURAPUNTOVENTA);
		cell = row.createCell(iColumn++);cell.setCellValue(FormaPagoPuntoVentaConstantesFunciones.LABEL_IDTIPOFORMAPAGO);
		cell = row.createCell(iColumn++);cell.setCellValue(FormaPagoPuntoVentaConstantesFunciones.LABEL_PORCENTAJE);
		cell = row.createCell(iColumn++);cell.setCellValue(FormaPagoPuntoVentaConstantesFunciones.LABEL_VALOR);
		cell = row.createCell(iColumn++);cell.setCellValue(FormaPagoPuntoVentaConstantesFunciones.LABEL_FECHA);
		cell = row.createCell(iColumn++);cell.setCellValue(FormaPagoPuntoVentaConstantesFunciones.LABEL_DESCRIPCION);
		cell = row.createCell(iColumn++);cell.setCellValue(FormaPagoPuntoVentaConstantesFunciones.LABEL_FECHAINICIO);
		cell = row.createCell(iColumn++);cell.setCellValue(FormaPagoPuntoVentaConstantesFunciones.LABEL_NUMERODIASPLAZO);
		cell = row.createCell(iColumn++);cell.setCellValue(FormaPagoPuntoVentaConstantesFunciones.LABEL_FECHAFIN);
		cell = row.createCell(iColumn++);cell.setCellValue(FormaPagoPuntoVentaConstantesFunciones.LABEL_IDBANCO);
		cell = row.createCell(iColumn++);cell.setCellValue(FormaPagoPuntoVentaConstantesFunciones.LABEL_IDCUENTABANCOPUNVEN);
		cell = row.createCell(iColumn++);cell.setCellValue(FormaPagoPuntoVentaConstantesFunciones.LABEL_IDTIPORIESGOCHEQUE);
		cell = row.createCell(iColumn++);cell.setCellValue(FormaPagoPuntoVentaConstantesFunciones.LABEL_NUMEROCUENTA);
		cell = row.createCell(iColumn++);cell.setCellValue(FormaPagoPuntoVentaConstantesFunciones.LABEL_NUMEROCHEQUE);
		cell = row.createCell(iColumn++);cell.setCellValue(FormaPagoPuntoVentaConstantesFunciones.LABEL_GIRADOR);
		cell = row.createCell(iColumn++);cell.setCellValue(FormaPagoPuntoVentaConstantesFunciones.LABEL_IDBANCOTARJETA);
		cell = row.createCell(iColumn++);cell.setCellValue(FormaPagoPuntoVentaConstantesFunciones.LABEL_IDTARJETACREDITO);
		cell = row.createCell(iColumn++);cell.setCellValue(FormaPagoPuntoVentaConstantesFunciones.LABEL_IDTIPOINTERESTARJETA);
		cell = row.createCell(iColumn++);cell.setCellValue(FormaPagoPuntoVentaConstantesFunciones.LABEL_IDTIPOPAGOTARJETA);
		cell = row.createCell(iColumn++);cell.setCellValue(FormaPagoPuntoVentaConstantesFunciones.LABEL_IDCONEXION);
		cell = row.createCell(iColumn++);cell.setCellValue(FormaPagoPuntoVentaConstantesFunciones.LABEL_IDMES);
		cell = row.createCell(iColumn++);cell.setCellValue(FormaPagoPuntoVentaConstantesFunciones.LABEL_NUMERO);
		cell = row.createCell(iColumn++);cell.setCellValue(FormaPagoPuntoVentaConstantesFunciones.LABEL_TARJETAHABIENTE);
		cell = row.createCell(iColumn++);cell.setCellValue(FormaPagoPuntoVentaConstantesFunciones.LABEL_AUTORIZACION);
		cell = row.createCell(iColumn++);cell.setCellValue(FormaPagoPuntoVentaConstantesFunciones.LABEL_VOUCHER);
		cell = row.createCell(iColumn++);cell.setCellValue(FormaPagoPuntoVentaConstantesFunciones.LABEL_LOTE);
		cell = row.createCell(iColumn++);cell.setCellValue(FormaPagoPuntoVentaConstantesFunciones.LABEL_CUOTA);
		cell = row.createCell(iColumn++);cell.setCellValue(FormaPagoPuntoVentaConstantesFunciones.LABEL_VALORRETENCION);
		cell = row.createCell(iColumn++);cell.setCellValue(FormaPagoPuntoVentaConstantesFunciones.LABEL_VALORCOMISION);
		cell = row.createCell(iColumn++);cell.setCellValue(FormaPagoPuntoVentaConstantesFunciones.LABEL_VALORCALCULADO);
		cell = row.createCell(iColumn++);cell.setCellValue(FormaPagoPuntoVentaConstantesFunciones.LABEL_VALORCANCELADO);
		cell = row.createCell(iColumn++);cell.setCellValue(FormaPagoPuntoVentaConstantesFunciones.LABEL_VALORDIFIERE);
		cell = row.createCell(iColumn++);cell.setCellValue(FormaPagoPuntoVentaConstantesFunciones.LABEL_NUMERORETENCION);
		cell = row.createCell(iColumn++);cell.setCellValue(FormaPagoPuntoVentaConstantesFunciones.LABEL_NUMEROLIQUIDACION);
		cell = row.createCell(iColumn++);cell.setCellValue(FormaPagoPuntoVentaConstantesFunciones.LABEL_IDANIO);
		cell = row.createCell(iColumn++);cell.setCellValue(FormaPagoPuntoVentaConstantesFunciones.LABEL_IDCUENTACONTABLE);
		cell = row.createCell(iColumn++);cell.setCellValue(FormaPagoPuntoVentaConstantesFunciones.LABEL_IDASIENTOCONTABLE);
	}
	
	//@SuppressWarnings("deprecation")
	public void getFilaDatosExportarExcelFormaPagoPuntoVenta(FormaPagoPuntoVenta formapagopuntoventa,HSSFRow row) {
		Integer iColumn=0;
		
		
		HSSFCell cell =null;
		cell = row.createCell(iColumn++);cell.setCellValue(formapagopuntoventa.getId());
		cell = row.createCell(iColumn++);cell.setCellValue(formapagopuntoventa.getempresa_descripcion());
		cell = row.createCell(iColumn++);cell.setCellValue(formapagopuntoventa.getsucursal_descripcion());
		cell = row.createCell(iColumn++);cell.setCellValue(formapagopuntoventa.getejercicio_descripcion());
		cell = row.createCell(iColumn++);cell.setCellValue(formapagopuntoventa.getperiodo_descripcion());
		cell = row.createCell(iColumn++);cell.setCellValue(formapagopuntoventa.getfacturapuntoventa_descripcion());
		cell = row.createCell(iColumn++);cell.setCellValue(formapagopuntoventa.gettipoformapago_descripcion());
		cell = row.createCell(iColumn++);cell.setCellValue(formapagopuntoventa.getporcentaje());
		cell = row.createCell(iColumn++);cell.setCellValue(formapagopuntoventa.getvalor());
		cell = row.createCell(iColumn++);cell.setCellValue(formapagopuntoventa.getfecha());
		cell = row.createCell(iColumn++);cell.setCellValue(formapagopuntoventa.getdescripcion());
		cell = row.createCell(iColumn++);cell.setCellValue(formapagopuntoventa.getfecha_inicio());
		cell = row.createCell(iColumn++);cell.setCellValue(formapagopuntoventa.getnumero_dias_plazo());
		cell = row.createCell(iColumn++);cell.setCellValue(formapagopuntoventa.getfecha_fin());
		cell = row.createCell(iColumn++);cell.setCellValue(formapagopuntoventa.getbanco_descripcion());
		cell = row.createCell(iColumn++);cell.setCellValue(formapagopuntoventa.getcuentabancopunven_descripcion());
		cell = row.createCell(iColumn++);cell.setCellValue(formapagopuntoventa.gettiporiesgocheque_descripcion());
		cell = row.createCell(iColumn++);cell.setCellValue(formapagopuntoventa.getnumero_cuenta());
		cell = row.createCell(iColumn++);cell.setCellValue(formapagopuntoventa.getnumero_cheque());
		cell = row.createCell(iColumn++);cell.setCellValue(formapagopuntoventa.getgirador());
		cell = row.createCell(iColumn++);cell.setCellValue(formapagopuntoventa.getbancotarjeta_descripcion());
		cell = row.createCell(iColumn++);cell.setCellValue(formapagopuntoventa.gettarjetacredito_descripcion());
		cell = row.createCell(iColumn++);cell.setCellValue(formapagopuntoventa.gettipointerestarjeta_descripcion());
		cell = row.createCell(iColumn++);cell.setCellValue(formapagopuntoventa.gettipopagotarjeta_descripcion());
		cell = row.createCell(iColumn++);cell.setCellValue(formapagopuntoventa.getconexion_descripcion());
		cell = row.createCell(iColumn++);cell.setCellValue(formapagopuntoventa.getmes_descripcion());
		cell = row.createCell(iColumn++);cell.setCellValue(formapagopuntoventa.getnumero());
		cell = row.createCell(iColumn++);cell.setCellValue(formapagopuntoventa.gettarjeta_habiente());
		cell = row.createCell(iColumn++);cell.setCellValue(formapagopuntoventa.getautorizacion());
		cell = row.createCell(iColumn++);cell.setCellValue(formapagopuntoventa.getvoucher());
		cell = row.createCell(iColumn++);cell.setCellValue(formapagopuntoventa.getlote());
		cell = row.createCell(iColumn++);cell.setCellValue(formapagopuntoventa.getcuota());
		cell = row.createCell(iColumn++);cell.setCellValue(formapagopuntoventa.getvalor_retencion());
		cell = row.createCell(iColumn++);cell.setCellValue(formapagopuntoventa.getvalor_comision());
		cell = row.createCell(iColumn++);cell.setCellValue(formapagopuntoventa.getvalor_calculado());
		cell = row.createCell(iColumn++);cell.setCellValue(formapagopuntoventa.getvalor_cancelado());
		cell = row.createCell(iColumn++);cell.setCellValue(formapagopuntoventa.getvalor_difiere());
		cell = row.createCell(iColumn++);cell.setCellValue(formapagopuntoventa.getnumero_retencion());
		cell = row.createCell(iColumn++);cell.setCellValue(formapagopuntoventa.getnumero_liquidacion());
		cell = row.createCell(iColumn++);cell.setCellValue(formapagopuntoventa.getanio_descripcion());
		cell = row.createCell(iColumn++);cell.setCellValue(formapagopuntoventa.getcuentacontable_descripcion());
		cell = row.createCell(iColumn++);cell.setCellValue(formapagopuntoventa.getasientocontable_descripcion());				
	}
	
	public void setFilaDatosExportarXmlFormaPagoPuntoVenta(FormaPagoPuntoVenta formapagopuntoventa,Document document,Element element) {
		/*
		Element lastname = document.createElement("lastname");
		lastname.appendChild(document.createTextNode("mook kim"));
		element.appendChild(lastname);
		*/
		

		Element elementId = document.createElement(FormaPagoPuntoVentaConstantesFunciones.ID);
		elementId.appendChild(document.createTextNode(formapagopuntoventa.getId().toString().trim()));
		element.appendChild(elementId);

		if(parametroGeneralUsuario.getcon_exportar_campo_version()){

		Element elementVersionRow = document.createElement(FormaPagoPuntoVentaConstantesFunciones.VERSIONROW);
		elementVersionRow.appendChild(document.createTextNode(formapagopuntoventa.getVersionRow().toString().trim()));
		element.appendChild(elementVersionRow);
		}


		Element elementempresa_descripcion = document.createElement(FormaPagoPuntoVentaConstantesFunciones.IDEMPRESA);
		elementempresa_descripcion.appendChild(document.createTextNode(formapagopuntoventa.getempresa_descripcion()));
		element.appendChild(elementempresa_descripcion);

		Element elementsucursal_descripcion = document.createElement(FormaPagoPuntoVentaConstantesFunciones.IDSUCURSAL);
		elementsucursal_descripcion.appendChild(document.createTextNode(formapagopuntoventa.getsucursal_descripcion()));
		element.appendChild(elementsucursal_descripcion);

		Element elementejercicio_descripcion = document.createElement(FormaPagoPuntoVentaConstantesFunciones.IDEJERCICIO);
		elementejercicio_descripcion.appendChild(document.createTextNode(formapagopuntoventa.getejercicio_descripcion()));
		element.appendChild(elementejercicio_descripcion);

		Element elementperiodo_descripcion = document.createElement(FormaPagoPuntoVentaConstantesFunciones.IDPERIODO);
		elementperiodo_descripcion.appendChild(document.createTextNode(formapagopuntoventa.getperiodo_descripcion()));
		element.appendChild(elementperiodo_descripcion);

		Element elementfacturapuntoventa_descripcion = document.createElement(FormaPagoPuntoVentaConstantesFunciones.IDFACTURAPUNTOVENTA);
		elementfacturapuntoventa_descripcion.appendChild(document.createTextNode(formapagopuntoventa.getfacturapuntoventa_descripcion()));
		element.appendChild(elementfacturapuntoventa_descripcion);

		Element elementtipoformapago_descripcion = document.createElement(FormaPagoPuntoVentaConstantesFunciones.IDTIPOFORMAPAGO);
		elementtipoformapago_descripcion.appendChild(document.createTextNode(formapagopuntoventa.gettipoformapago_descripcion()));
		element.appendChild(elementtipoformapago_descripcion);

		Element elementporcentaje = document.createElement(FormaPagoPuntoVentaConstantesFunciones.PORCENTAJE);
		elementporcentaje.appendChild(document.createTextNode(formapagopuntoventa.getporcentaje().toString().trim()));
		element.appendChild(elementporcentaje);

		Element elementvalor = document.createElement(FormaPagoPuntoVentaConstantesFunciones.VALOR);
		elementvalor.appendChild(document.createTextNode(formapagopuntoventa.getvalor().toString().trim()));
		element.appendChild(elementvalor);

		Element elementfecha = document.createElement(FormaPagoPuntoVentaConstantesFunciones.FECHA);
		elementfecha.appendChild(document.createTextNode(formapagopuntoventa.getfecha().toString().trim()));
		element.appendChild(elementfecha);

		Element elementdescripcion = document.createElement(FormaPagoPuntoVentaConstantesFunciones.DESCRIPCION);
		elementdescripcion.appendChild(document.createTextNode(formapagopuntoventa.getdescripcion().trim()));
		element.appendChild(elementdescripcion);

		Element elementfecha_inicio = document.createElement(FormaPagoPuntoVentaConstantesFunciones.FECHAINICIO);
		elementfecha_inicio.appendChild(document.createTextNode(formapagopuntoventa.getfecha_inicio().toString().trim()));
		element.appendChild(elementfecha_inicio);

		Element elementnumero_dias_plazo = document.createElement(FormaPagoPuntoVentaConstantesFunciones.NUMERODIASPLAZO);
		elementnumero_dias_plazo.appendChild(document.createTextNode(formapagopuntoventa.getnumero_dias_plazo().toString().trim()));
		element.appendChild(elementnumero_dias_plazo);

		Element elementfecha_fin = document.createElement(FormaPagoPuntoVentaConstantesFunciones.FECHAFIN);
		elementfecha_fin.appendChild(document.createTextNode(formapagopuntoventa.getfecha_fin().toString().trim()));
		element.appendChild(elementfecha_fin);

		Element elementbanco_descripcion = document.createElement(FormaPagoPuntoVentaConstantesFunciones.IDBANCO);
		elementbanco_descripcion.appendChild(document.createTextNode(formapagopuntoventa.getbanco_descripcion()));
		element.appendChild(elementbanco_descripcion);

		Element elementcuentabancopunven_descripcion = document.createElement(FormaPagoPuntoVentaConstantesFunciones.IDCUENTABANCOPUNVEN);
		elementcuentabancopunven_descripcion.appendChild(document.createTextNode(formapagopuntoventa.getcuentabancopunven_descripcion()));
		element.appendChild(elementcuentabancopunven_descripcion);

		Element elementtiporiesgocheque_descripcion = document.createElement(FormaPagoPuntoVentaConstantesFunciones.IDTIPORIESGOCHEQUE);
		elementtiporiesgocheque_descripcion.appendChild(document.createTextNode(formapagopuntoventa.gettiporiesgocheque_descripcion()));
		element.appendChild(elementtiporiesgocheque_descripcion);

		Element elementnumero_cuenta = document.createElement(FormaPagoPuntoVentaConstantesFunciones.NUMEROCUENTA);
		elementnumero_cuenta.appendChild(document.createTextNode(formapagopuntoventa.getnumero_cuenta().trim()));
		element.appendChild(elementnumero_cuenta);

		Element elementnumero_cheque = document.createElement(FormaPagoPuntoVentaConstantesFunciones.NUMEROCHEQUE);
		elementnumero_cheque.appendChild(document.createTextNode(formapagopuntoventa.getnumero_cheque().trim()));
		element.appendChild(elementnumero_cheque);

		Element elementgirador = document.createElement(FormaPagoPuntoVentaConstantesFunciones.GIRADOR);
		elementgirador.appendChild(document.createTextNode(formapagopuntoventa.getgirador().trim()));
		element.appendChild(elementgirador);

		Element elementbancotarjeta_descripcion = document.createElement(FormaPagoPuntoVentaConstantesFunciones.IDBANCOTARJETA);
		elementbancotarjeta_descripcion.appendChild(document.createTextNode(formapagopuntoventa.getbancotarjeta_descripcion()));
		element.appendChild(elementbancotarjeta_descripcion);

		Element elementtarjetacredito_descripcion = document.createElement(FormaPagoPuntoVentaConstantesFunciones.IDTARJETACREDITO);
		elementtarjetacredito_descripcion.appendChild(document.createTextNode(formapagopuntoventa.gettarjetacredito_descripcion()));
		element.appendChild(elementtarjetacredito_descripcion);

		Element elementtipointerestarjeta_descripcion = document.createElement(FormaPagoPuntoVentaConstantesFunciones.IDTIPOINTERESTARJETA);
		elementtipointerestarjeta_descripcion.appendChild(document.createTextNode(formapagopuntoventa.gettipointerestarjeta_descripcion()));
		element.appendChild(elementtipointerestarjeta_descripcion);

		Element elementtipopagotarjeta_descripcion = document.createElement(FormaPagoPuntoVentaConstantesFunciones.IDTIPOPAGOTARJETA);
		elementtipopagotarjeta_descripcion.appendChild(document.createTextNode(formapagopuntoventa.gettipopagotarjeta_descripcion()));
		element.appendChild(elementtipopagotarjeta_descripcion);

		Element elementconexion_descripcion = document.createElement(FormaPagoPuntoVentaConstantesFunciones.IDCONEXION);
		elementconexion_descripcion.appendChild(document.createTextNode(formapagopuntoventa.getconexion_descripcion()));
		element.appendChild(elementconexion_descripcion);

		Element elementmes_descripcion = document.createElement(FormaPagoPuntoVentaConstantesFunciones.IDMES);
		elementmes_descripcion.appendChild(document.createTextNode(formapagopuntoventa.getmes_descripcion()));
		element.appendChild(elementmes_descripcion);

		Element elementnumero = document.createElement(FormaPagoPuntoVentaConstantesFunciones.NUMERO);
		elementnumero.appendChild(document.createTextNode(formapagopuntoventa.getnumero().trim()));
		element.appendChild(elementnumero);

		Element elementtarjeta_habiente = document.createElement(FormaPagoPuntoVentaConstantesFunciones.TARJETAHABIENTE);
		elementtarjeta_habiente.appendChild(document.createTextNode(formapagopuntoventa.gettarjeta_habiente().trim()));
		element.appendChild(elementtarjeta_habiente);

		Element elementautorizacion = document.createElement(FormaPagoPuntoVentaConstantesFunciones.AUTORIZACION);
		elementautorizacion.appendChild(document.createTextNode(formapagopuntoventa.getautorizacion().trim()));
		element.appendChild(elementautorizacion);

		Element elementvoucher = document.createElement(FormaPagoPuntoVentaConstantesFunciones.VOUCHER);
		elementvoucher.appendChild(document.createTextNode(formapagopuntoventa.getvoucher().trim()));
		element.appendChild(elementvoucher);

		Element elementlote = document.createElement(FormaPagoPuntoVentaConstantesFunciones.LOTE);
		elementlote.appendChild(document.createTextNode(formapagopuntoventa.getlote().trim()));
		element.appendChild(elementlote);

		Element elementcuota = document.createElement(FormaPagoPuntoVentaConstantesFunciones.CUOTA);
		elementcuota.appendChild(document.createTextNode(formapagopuntoventa.getcuota().toString().trim()));
		element.appendChild(elementcuota);

		Element elementvalor_retencion = document.createElement(FormaPagoPuntoVentaConstantesFunciones.VALORRETENCION);
		elementvalor_retencion.appendChild(document.createTextNode(formapagopuntoventa.getvalor_retencion().toString().trim()));
		element.appendChild(elementvalor_retencion);

		Element elementvalor_comision = document.createElement(FormaPagoPuntoVentaConstantesFunciones.VALORCOMISION);
		elementvalor_comision.appendChild(document.createTextNode(formapagopuntoventa.getvalor_comision().toString().trim()));
		element.appendChild(elementvalor_comision);

		Element elementvalor_calculado = document.createElement(FormaPagoPuntoVentaConstantesFunciones.VALORCALCULADO);
		elementvalor_calculado.appendChild(document.createTextNode(formapagopuntoventa.getvalor_calculado().toString().trim()));
		element.appendChild(elementvalor_calculado);

		Element elementvalor_cancelado = document.createElement(FormaPagoPuntoVentaConstantesFunciones.VALORCANCELADO);
		elementvalor_cancelado.appendChild(document.createTextNode(formapagopuntoventa.getvalor_cancelado().toString().trim()));
		element.appendChild(elementvalor_cancelado);

		Element elementvalor_difiere = document.createElement(FormaPagoPuntoVentaConstantesFunciones.VALORDIFIERE);
		elementvalor_difiere.appendChild(document.createTextNode(formapagopuntoventa.getvalor_difiere().toString().trim()));
		element.appendChild(elementvalor_difiere);

		Element elementnumero_retencion = document.createElement(FormaPagoPuntoVentaConstantesFunciones.NUMERORETENCION);
		elementnumero_retencion.appendChild(document.createTextNode(formapagopuntoventa.getnumero_retencion().trim()));
		element.appendChild(elementnumero_retencion);

		Element elementnumero_liquidacion = document.createElement(FormaPagoPuntoVentaConstantesFunciones.NUMEROLIQUIDACION);
		elementnumero_liquidacion.appendChild(document.createTextNode(formapagopuntoventa.getnumero_liquidacion().trim()));
		element.appendChild(elementnumero_liquidacion);

		Element elementanio_descripcion = document.createElement(FormaPagoPuntoVentaConstantesFunciones.IDANIO);
		elementanio_descripcion.appendChild(document.createTextNode(formapagopuntoventa.getanio_descripcion()));
		element.appendChild(elementanio_descripcion);

		Element elementcuentacontable_descripcion = document.createElement(FormaPagoPuntoVentaConstantesFunciones.IDCUENTACONTABLE);
		elementcuentacontable_descripcion.appendChild(document.createTextNode(formapagopuntoventa.getcuentacontable_descripcion()));
		element.appendChild(elementcuentacontable_descripcion);

		Element elementasientocontable_descripcion = document.createElement(FormaPagoPuntoVentaConstantesFunciones.IDASIENTOCONTABLE);
		elementasientocontable_descripcion.appendChild(document.createTextNode(formapagopuntoventa.getasientocontable_descripcion()));
		element.appendChild(elementasientocontable_descripcion);
	}
	
	public void generarReporteGroupGenericoFormaPagoPuntoVentasSeleccionados(Boolean soloTotales) throws Exception {
		ArrayList<FormaPagoPuntoVenta> formapagopuntoventasSeleccionados=new ArrayList<FormaPagoPuntoVenta>();
		
		formapagopuntoventasSeleccionados=this.getFormaPagoPuntoVentasSeleccionados(true);
		
		this.actualizarVariablesTipoReporte(true,false,false,"");
		
		/*
		this.esReporteDinamico=false;
		this.sPathReporteDinamico="";
		*/
		
		if(!soloTotales) {
			this.sTipoReporteExtra=Constantes2.S_REPORTE_EXTRA_GROUP_GENERICO;
		} else {
			this.sTipoReporteExtra=Constantes2.S_REPORTE_EXTRA_GROUP_TOTALES_GENERICO;
		}
		
		this.setColumnaDescripcionReporteGroupGenericoFormaPagoPuntoVenta(formapagopuntoventasSeleccionados);
		
		this.generarReporteFormaPagoPuntoVentas("Todos",formapagopuntoventasSeleccionados);
	}
	
	public void setColumnaDescripcionReporteGroupGenericoFormaPagoPuntoVenta(ArrayList<FormaPagoPuntoVenta> formapagopuntoventasSeleccionados) throws Exception {    		
		try {
			//FUNCIONA CON MODEL PERO SE DANA MANTENIMIENTO
			
			Boolean existe=false;
			
			for(FormaPagoPuntoVenta formapagopuntoventaAux:formapagopuntoventasSeleccionados) {
				formapagopuntoventaAux.setsDetalleGeneralEntityReporte(formapagopuntoventaAux.toString());
			
				if(sTipoSeleccionar.equals(FormaPagoPuntoVentaConstantesFunciones.LABEL_IDEMPRESA)) {
					existe=true;
					formapagopuntoventaAux.setsDescripcionGeneralEntityReporte1(formapagopuntoventaAux.getempresa_descripcion());
				}
				 else if(sTipoSeleccionar.equals(FormaPagoPuntoVentaConstantesFunciones.LABEL_IDSUCURSAL)) {
					existe=true;
					formapagopuntoventaAux.setsDescripcionGeneralEntityReporte1(formapagopuntoventaAux.getsucursal_descripcion());
				}
				 else if(sTipoSeleccionar.equals(FormaPagoPuntoVentaConstantesFunciones.LABEL_IDEJERCICIO)) {
					existe=true;
					formapagopuntoventaAux.setsDescripcionGeneralEntityReporte1(formapagopuntoventaAux.getejercicio_descripcion());
				}
				 else if(sTipoSeleccionar.equals(FormaPagoPuntoVentaConstantesFunciones.LABEL_IDPERIODO)) {
					existe=true;
					formapagopuntoventaAux.setsDescripcionGeneralEntityReporte1(formapagopuntoventaAux.getperiodo_descripcion());
				}
				 else if(sTipoSeleccionar.equals(FormaPagoPuntoVentaConstantesFunciones.LABEL_IDFACTURAPUNTOVENTA)) {
					existe=true;
					formapagopuntoventaAux.setsDescripcionGeneralEntityReporte1(formapagopuntoventaAux.getfacturapuntoventa_descripcion());
				}
				 else if(sTipoSeleccionar.equals(FormaPagoPuntoVentaConstantesFunciones.LABEL_IDTIPOFORMAPAGO)) {
					existe=true;
					formapagopuntoventaAux.setsDescripcionGeneralEntityReporte1(formapagopuntoventaAux.gettipoformapago_descripcion());
				}
				 else if(sTipoSeleccionar.equals(FormaPagoPuntoVentaConstantesFunciones.LABEL_FECHA)) {
					existe=true;
					formapagopuntoventaAux.setsDescripcionGeneralEntityReporte1(Funciones2.getStringPostgresDate(formapagopuntoventaAux.getfecha()));
				}
				 else if(sTipoSeleccionar.equals(FormaPagoPuntoVentaConstantesFunciones.LABEL_DESCRIPCION)) {
					existe=true;
					formapagopuntoventaAux.setsDescripcionGeneralEntityReporte1(formapagopuntoventaAux.getdescripcion());
				}
				 else if(sTipoSeleccionar.equals(FormaPagoPuntoVentaConstantesFunciones.LABEL_FECHAINICIO)) {
					existe=true;
					formapagopuntoventaAux.setsDescripcionGeneralEntityReporte1(Funciones2.getStringPostgresDate(formapagopuntoventaAux.getfecha_inicio()));
				}
				 else if(sTipoSeleccionar.equals(FormaPagoPuntoVentaConstantesFunciones.LABEL_NUMERODIASPLAZO)) {
					existe=true;
					formapagopuntoventaAux.setsDescripcionGeneralEntityReporte1(formapagopuntoventaAux.getnumero_dias_plazo().toString());
				}
				 else if(sTipoSeleccionar.equals(FormaPagoPuntoVentaConstantesFunciones.LABEL_FECHAFIN)) {
					existe=true;
					formapagopuntoventaAux.setsDescripcionGeneralEntityReporte1(Funciones2.getStringPostgresDate(formapagopuntoventaAux.getfecha_fin()));
				}
				 else if(sTipoSeleccionar.equals(FormaPagoPuntoVentaConstantesFunciones.LABEL_IDBANCO)) {
					existe=true;
					formapagopuntoventaAux.setsDescripcionGeneralEntityReporte1(formapagopuntoventaAux.getbanco_descripcion());
				}
				 else if(sTipoSeleccionar.equals(FormaPagoPuntoVentaConstantesFunciones.LABEL_IDCUENTABANCOPUNVEN)) {
					existe=true;
					formapagopuntoventaAux.setsDescripcionGeneralEntityReporte1(formapagopuntoventaAux.getcuentabancopunven_descripcion());
				}
				 else if(sTipoSeleccionar.equals(FormaPagoPuntoVentaConstantesFunciones.LABEL_IDTIPORIESGOCHEQUE)) {
					existe=true;
					formapagopuntoventaAux.setsDescripcionGeneralEntityReporte1(formapagopuntoventaAux.gettiporiesgocheque_descripcion());
				}
				 else if(sTipoSeleccionar.equals(FormaPagoPuntoVentaConstantesFunciones.LABEL_NUMEROCUENTA)) {
					existe=true;
					formapagopuntoventaAux.setsDescripcionGeneralEntityReporte1(formapagopuntoventaAux.getnumero_cuenta());
				}
				 else if(sTipoSeleccionar.equals(FormaPagoPuntoVentaConstantesFunciones.LABEL_NUMEROCHEQUE)) {
					existe=true;
					formapagopuntoventaAux.setsDescripcionGeneralEntityReporte1(formapagopuntoventaAux.getnumero_cheque());
				}
				 else if(sTipoSeleccionar.equals(FormaPagoPuntoVentaConstantesFunciones.LABEL_GIRADOR)) {
					existe=true;
					formapagopuntoventaAux.setsDescripcionGeneralEntityReporte1(formapagopuntoventaAux.getgirador());
				}
				 else if(sTipoSeleccionar.equals(FormaPagoPuntoVentaConstantesFunciones.LABEL_IDBANCOTARJETA)) {
					existe=true;
					formapagopuntoventaAux.setsDescripcionGeneralEntityReporte1(formapagopuntoventaAux.getbancotarjeta_descripcion());
				}
				 else if(sTipoSeleccionar.equals(FormaPagoPuntoVentaConstantesFunciones.LABEL_IDTARJETACREDITO)) {
					existe=true;
					formapagopuntoventaAux.setsDescripcionGeneralEntityReporte1(formapagopuntoventaAux.gettarjetacredito_descripcion());
				}
				 else if(sTipoSeleccionar.equals(FormaPagoPuntoVentaConstantesFunciones.LABEL_IDTIPOINTERESTARJETA)) {
					existe=true;
					formapagopuntoventaAux.setsDescripcionGeneralEntityReporte1(formapagopuntoventaAux.gettipointerestarjeta_descripcion());
				}
				 else if(sTipoSeleccionar.equals(FormaPagoPuntoVentaConstantesFunciones.LABEL_IDTIPOPAGOTARJETA)) {
					existe=true;
					formapagopuntoventaAux.setsDescripcionGeneralEntityReporte1(formapagopuntoventaAux.gettipopagotarjeta_descripcion());
				}
				 else if(sTipoSeleccionar.equals(FormaPagoPuntoVentaConstantesFunciones.LABEL_IDCONEXION)) {
					existe=true;
					formapagopuntoventaAux.setsDescripcionGeneralEntityReporte1(formapagopuntoventaAux.getconexion_descripcion());
				}
				 else if(sTipoSeleccionar.equals(FormaPagoPuntoVentaConstantesFunciones.LABEL_IDMES)) {
					existe=true;
					formapagopuntoventaAux.setsDescripcionGeneralEntityReporte1(formapagopuntoventaAux.getmes_descripcion());
				}
				 else if(sTipoSeleccionar.equals(FormaPagoPuntoVentaConstantesFunciones.LABEL_NUMERO)) {
					existe=true;
					formapagopuntoventaAux.setsDescripcionGeneralEntityReporte1(formapagopuntoventaAux.getnumero());
				}
				 else if(sTipoSeleccionar.equals(FormaPagoPuntoVentaConstantesFunciones.LABEL_TARJETAHABIENTE)) {
					existe=true;
					formapagopuntoventaAux.setsDescripcionGeneralEntityReporte1(formapagopuntoventaAux.gettarjeta_habiente());
				}
				 else if(sTipoSeleccionar.equals(FormaPagoPuntoVentaConstantesFunciones.LABEL_AUTORIZACION)) {
					existe=true;
					formapagopuntoventaAux.setsDescripcionGeneralEntityReporte1(formapagopuntoventaAux.getautorizacion());
				}
				 else if(sTipoSeleccionar.equals(FormaPagoPuntoVentaConstantesFunciones.LABEL_VOUCHER)) {
					existe=true;
					formapagopuntoventaAux.setsDescripcionGeneralEntityReporte1(formapagopuntoventaAux.getvoucher());
				}
				 else if(sTipoSeleccionar.equals(FormaPagoPuntoVentaConstantesFunciones.LABEL_LOTE)) {
					existe=true;
					formapagopuntoventaAux.setsDescripcionGeneralEntityReporte1(formapagopuntoventaAux.getlote());
				}
				 else if(sTipoSeleccionar.equals(FormaPagoPuntoVentaConstantesFunciones.LABEL_CUOTA)) {
					existe=true;
					formapagopuntoventaAux.setsDescripcionGeneralEntityReporte1(formapagopuntoventaAux.getcuota().toString());
				}
				 else if(sTipoSeleccionar.equals(FormaPagoPuntoVentaConstantesFunciones.LABEL_NUMERORETENCION)) {
					existe=true;
					formapagopuntoventaAux.setsDescripcionGeneralEntityReporte1(formapagopuntoventaAux.getnumero_retencion());
				}
				 else if(sTipoSeleccionar.equals(FormaPagoPuntoVentaConstantesFunciones.LABEL_NUMEROLIQUIDACION)) {
					existe=true;
					formapagopuntoventaAux.setsDescripcionGeneralEntityReporte1(formapagopuntoventaAux.getnumero_liquidacion());
				}
				 else if(sTipoSeleccionar.equals(FormaPagoPuntoVentaConstantesFunciones.LABEL_IDANIO)) {
					existe=true;
					formapagopuntoventaAux.setsDescripcionGeneralEntityReporte1(formapagopuntoventaAux.getanio_descripcion());
				}
				 else if(sTipoSeleccionar.equals(FormaPagoPuntoVentaConstantesFunciones.LABEL_IDCUENTACONTABLE)) {
					existe=true;
					formapagopuntoventaAux.setsDescripcionGeneralEntityReporte1(formapagopuntoventaAux.getcuentacontable_descripcion());
				}
				 else if(sTipoSeleccionar.equals(FormaPagoPuntoVentaConstantesFunciones.LABEL_IDASIENTOCONTABLE)) {
					existe=true;
					formapagopuntoventaAux.setsDescripcionGeneralEntityReporte1(formapagopuntoventaAux.getasientocontable_descripcion());
				}
			}	
											
			if(!existe) {
				JOptionPane.showMessageDialog(this,"NO SE HA SELECCIONADO ALGUNA COLUMNA VALIDA","SELECCIONAR",JOptionPane.ERROR_MESSAGE);
			}										
		} catch(Exception e) {
			FuncionesSwing.manageException(this, e,logger,FormaPagoPuntoVentaConstantesFunciones.CLASSNAME);
		}
	}
	
	
	public void actualizarEstadoCeldasBotonesFormaPagoPuntoVenta(String sAccion,Boolean isGuardarCambiosEnLote,Boolean isEsMantenimientoRelacionado) throws Exception {
		if(sAccion=="n") {
			if(!this.esParaBusquedaForeignKey) {
				this.isVisibilidadCeldaNuevoFormaPagoPuntoVenta=true;
				this.isVisibilidadCeldaNuevoRelacionesFormaPagoPuntoVenta=true;
				this.isVisibilidadCeldaGuardarCambiosFormaPagoPuntoVenta=true;
			}
			
			this.isVisibilidadCeldaModificarFormaPagoPuntoVenta=false;
			this.isVisibilidadCeldaActualizarFormaPagoPuntoVenta=false;
			this.isVisibilidadCeldaEliminarFormaPagoPuntoVenta=false;
			this.isVisibilidadCeldaCancelarFormaPagoPuntoVenta=false;
			
			if(isEsMantenimientoRelacionado==false) {
				if(isGuardarCambiosEnLote==true) {
					this.isVisibilidadCeldaGuardarFormaPagoPuntoVenta=true;
				} else {
					this.isVisibilidadCeldaGuardarFormaPagoPuntoVenta=false;
				}
			}
		} else if(sAccion=="a") {
			this.isVisibilidadCeldaNuevoFormaPagoPuntoVenta=false;
			this.isVisibilidadCeldaNuevoRelacionesFormaPagoPuntoVenta=false;
			this.isVisibilidadCeldaGuardarCambiosFormaPagoPuntoVenta=false;
			this.isVisibilidadCeldaModificarFormaPagoPuntoVenta=false;
			this.isVisibilidadCeldaActualizarFormaPagoPuntoVenta=true;
			this.isVisibilidadCeldaEliminarFormaPagoPuntoVenta=false;
			this.isVisibilidadCeldaCancelarFormaPagoPuntoVenta=true;
			
			if(isEsMantenimientoRelacionado==false) {
				if(isGuardarCambiosEnLote==true) {
					this.isVisibilidadCeldaGuardarFormaPagoPuntoVenta=true;
				} else {
					this.isVisibilidadCeldaGuardarFormaPagoPuntoVenta=false;
				}
			}
		} else if(sAccion=="ae") {
			this.isVisibilidadCeldaNuevoFormaPagoPuntoVenta=false;
			this.isVisibilidadCeldaNuevoRelacionesFormaPagoPuntoVenta=false;
			this.isVisibilidadCeldaGuardarCambiosFormaPagoPuntoVenta=false;
			this.isVisibilidadCeldaModificarFormaPagoPuntoVenta=false;
			this.isVisibilidadCeldaActualizarFormaPagoPuntoVenta=true;
			this.isVisibilidadCeldaEliminarFormaPagoPuntoVenta=true;
			this.isVisibilidadCeldaCancelarFormaPagoPuntoVenta=true;
			
			if(isEsMantenimientoRelacionado==false) {
				if(isGuardarCambiosEnLote==true) {
					this.isVisibilidadCeldaGuardarFormaPagoPuntoVenta=true;
				} else {
					this.isVisibilidadCeldaGuardarFormaPagoPuntoVenta=false;
				}
			}
		}
		//Para Mantenimientos de tablas relacionados con mas de columnas minimas
		else if(sAccion=="ae2") {
			this.isVisibilidadCeldaNuevoFormaPagoPuntoVenta=false;
			this.isVisibilidadCeldaNuevoRelacionesFormaPagoPuntoVenta=false;
			this.isVisibilidadCeldaGuardarCambiosFormaPagoPuntoVenta=false;
			this.isVisibilidadCeldaModificarFormaPagoPuntoVenta=false;
			this.isVisibilidadCeldaActualizarFormaPagoPuntoVenta=true;
			this.isVisibilidadCeldaEliminarFormaPagoPuntoVenta=false;
			this.isVisibilidadCeldaCancelarFormaPagoPuntoVenta=true;
			
			if(isEsMantenimientoRelacionado==false) {
				if(isGuardarCambiosEnLote==true) {
					this.isVisibilidadCeldaGuardarFormaPagoPuntoVenta=false;
				} else {
					this.isVisibilidadCeldaGuardarFormaPagoPuntoVenta=false;
				}
			}
		} else if(sAccion=="c") {
			this.isVisibilidadCeldaNuevoFormaPagoPuntoVenta=true;
			this.isVisibilidadCeldaNuevoRelacionesFormaPagoPuntoVenta=true;
			this.isVisibilidadCeldaGuardarCambiosFormaPagoPuntoVenta=true;
			this.isVisibilidadCeldaModificarFormaPagoPuntoVenta=false;
			this.isVisibilidadCeldaActualizarFormaPagoPuntoVenta=false;
			this.isVisibilidadCeldaEliminarFormaPagoPuntoVenta=false;
			this.isVisibilidadCeldaCancelarFormaPagoPuntoVenta=false;
			
			if(isEsMantenimientoRelacionado==false) {
				if(isGuardarCambiosEnLote==true) {
					this.isVisibilidadCeldaGuardarFormaPagoPuntoVenta=true;
				} else {
					this.isVisibilidadCeldaGuardarFormaPagoPuntoVenta=false;
				}
			}
		} else if(sAccion=="t") {
			this.isVisibilidadCeldaNuevoFormaPagoPuntoVenta=false;
			this.isVisibilidadCeldaNuevoRelacionesFormaPagoPuntoVenta=false;
			this.isVisibilidadCeldaGuardarCambiosFormaPagoPuntoVenta=false;
			this.isVisibilidadCeldaActualizarFormaPagoPuntoVenta=false;
			this.isVisibilidadCeldaEliminarFormaPagoPuntoVenta=false;
			this.isVisibilidadCeldaCancelarFormaPagoPuntoVenta=false;
			
			if(isEsMantenimientoRelacionado==false) {
				if(isGuardarCambiosEnLote==true) {
					this.isVisibilidadCeldaGuardarFormaPagoPuntoVenta=false;
				} else {
					this.isVisibilidadCeldaGuardarFormaPagoPuntoVenta=false;
				}
			}
		}  else if(sAccion=="s"||sAccion=="s2") {
			this.isVisibilidadCeldaNuevoFormaPagoPuntoVenta=false;
			this.isVisibilidadCeldaNuevoRelacionesFormaPagoPuntoVenta=false;
			this.isVisibilidadCeldaGuardarCambiosFormaPagoPuntoVenta=false;
			this.isVisibilidadCeldaModificarFormaPagoPuntoVenta=true;
			this.isVisibilidadCeldaActualizarFormaPagoPuntoVenta=false;
			this.isVisibilidadCeldaEliminarFormaPagoPuntoVenta=false;
			this.isVisibilidadCeldaCancelarFormaPagoPuntoVenta=true;
			
			if(isEsMantenimientoRelacionado==false) {
				if(isGuardarCambiosEnLote==true) {
					this.isVisibilidadCeldaGuardarFormaPagoPuntoVenta=false;
				} else {
					this.isVisibilidadCeldaGuardarFormaPagoPuntoVenta=false;
				}
			}
		}
		
		//ACTUALIZA VISIBILIDAD PANELES
		if(FormaPagoPuntoVentaJInternalFrame.CON_DATOS_FRAME && !this.esParaBusquedaForeignKey) {
			//SIEMPRE VISIBLE
			this.isVisibilidadCeldaNuevoFormaPagoPuntoVenta=true;
			this.isVisibilidadCeldaNuevoRelacionesFormaPagoPuntoVenta=true;
			this.isVisibilidadCeldaGuardarCambiosFormaPagoPuntoVenta=true;
		} else {
			this.actualizarEstadoPanelsFormaPagoPuntoVenta(sAccion);						
		}
		
		if(this.esParaBusquedaForeignKey) {
			this.isVisibilidadCeldaCopiarFormaPagoPuntoVenta=false;
			//this.isVisibilidadCeldaVerFormFormaPagoPuntoVenta=false;
			this.isVisibilidadCeldaDuplicarFormaPagoPuntoVenta=false;
		}
		
		//SI ES MANTENIMIENTO RELACIONES
		if(!formapagopuntoventaSessionBean.getConGuardarRelaciones()) {
			this.isVisibilidadCeldaNuevoRelacionesFormaPagoPuntoVenta=false;
		} else {
			this.isVisibilidadCeldaNuevoFormaPagoPuntoVenta=false;
			this.isVisibilidadCeldaGuardarCambiosFormaPagoPuntoVenta=false;
		}
		
		//SI ES MANTENIMIENTO RELACIONADO
		if(formapagopuntoventaSessionBean.getEsGuardarRelacionado()) {
			if(!formapagopuntoventaSessionBean.getConGuardarRelaciones()) {	
				this.isVisibilidadCeldaNuevoRelacionesFormaPagoPuntoVenta=false;												
			}
			
			this.jButtonCerrarFormaPagoPuntoVenta.setVisible(false);
		}
		
		//SI NO TIENE MAXIMO DE RELACIONES PERMITIDAS
		if(!this.conMaximoRelaciones) {
			this.isVisibilidadCeldaNuevoRelacionesFormaPagoPuntoVenta=false;
		}
		
		if(!this.permiteMantenimiento(this.formapagopuntoventa)) {
			this.isVisibilidadCeldaActualizarFormaPagoPuntoVenta=false;
			this.isVisibilidadCeldaEliminarFormaPagoPuntoVenta=false;
		}
		
		
		
	}
	
	public void actualizarEstadoCeldasBotonesConGuardarRelacionesFormaPagoPuntoVenta() {
	}
	
	public void actualizarEstadoPanelsFormaPagoPuntoVenta(String sAccion) {
		if(sAccion=="n") {
			if(this.jScrollPanelDatosEdicionFormaPagoPuntoVenta!=null) {
				this.jScrollPanelDatosEdicionFormaPagoPuntoVenta.setVisible(false);			
			}
			
			//BYDAN_BUSQUEDAS
			/*
			if(this.jTabbedPaneBusquedasFormaPagoPuntoVenta!=null) {
				this.jTabbedPaneBusquedasFormaPagoPuntoVenta.setVisible(true);			
			}
			*/
			
			if(this.jScrollPanelDatosFormaPagoPuntoVenta!=null) {
				this.jScrollPanelDatosFormaPagoPuntoVenta.setVisible(true);
			}
			
			if(this.jPanelPaginacionFormaPagoPuntoVenta!=null) {
				this.jPanelPaginacionFormaPagoPuntoVenta.setVisible(true);
			}
			
			if(this.jPanelParametrosReportesFormaPagoPuntoVenta!=null) {
				this.jPanelParametrosReportesFormaPagoPuntoVenta.setVisible(true);		    
			}
			
		} else if(sAccion=="a") {				
			if(this.jScrollPanelDatosEdicionFormaPagoPuntoVenta!=null) {
				this.jScrollPanelDatosEdicionFormaPagoPuntoVenta.setVisible(true);			
			}
			
			//BYDAN_BUSQUEDAS
			/*
			if(this.jTabbedPaneBusquedasFormaPagoPuntoVenta!=null) {
				this.jTabbedPaneBusquedasFormaPagoPuntoVenta.setVisible(false);			
			}
			*/
			
			
			if(this.jScrollPanelDatosFormaPagoPuntoVenta!=null) {
				this.jScrollPanelDatosFormaPagoPuntoVenta.setVisible(false);
			}
			
			if(this.jPanelPaginacionFormaPagoPuntoVenta!=null) {
				this.jPanelPaginacionFormaPagoPuntoVenta.setVisible(false);
			}
			
			if(this.jPanelParametrosReportesFormaPagoPuntoVenta!=null) {
				this.jPanelParametrosReportesFormaPagoPuntoVenta.setVisible(false);
			}
						
		} else if(sAccion=="ae") {		
			if(this.jScrollPanelDatosEdicionFormaPagoPuntoVenta!=null) {
				this.jScrollPanelDatosEdicionFormaPagoPuntoVenta.setVisible(true);		
			}
			
			//BYDAN_BUSQUEDAS
			/*
			if(this.jTabbedPaneBusquedasFormaPagoPuntoVenta!=null) {
				this.jTabbedPaneBusquedasFormaPagoPuntoVenta.setVisible(false);			
			}
			*/
			
			if(this.jScrollPanelDatosFormaPagoPuntoVenta!=null) {
				this.jScrollPanelDatosFormaPagoPuntoVenta.setVisible(false);
			}
			
			if(this.jPanelPaginacionFormaPagoPuntoVenta!=null) {
				this.jPanelPaginacionFormaPagoPuntoVenta.setVisible(false);
			}
			
			if(this.jPanelParametrosReportesFormaPagoPuntoVenta!=null) {
				this.jPanelParametrosReportesFormaPagoPuntoVenta.setVisible(false);
			}
						
		}
		//Para Mantenimientos de tablas relacionados con mas de columnas minimas
		else if(sAccion=="ae2") {	
			if(this.jScrollPanelDatosEdicionFormaPagoPuntoVenta!=null) {
				this.jScrollPanelDatosEdicionFormaPagoPuntoVenta.setVisible(true);			
			}
			
			//BYDAN_BUSQUEDAS
			/*
			if(this.jTabbedPaneBusquedasFormaPagoPuntoVenta!=null) {
				this.jTabbedPaneBusquedasFormaPagoPuntoVenta.setVisible(false);			
			}
			*/
			
			if(this.jScrollPanelDatosFormaPagoPuntoVenta!=null) {
				this.jScrollPanelDatosFormaPagoPuntoVenta.setVisible(false);
			}
			
			if(this.jPanelPaginacionFormaPagoPuntoVenta!=null) {
				this.jPanelPaginacionFormaPagoPuntoVenta.setVisible(false);
			}
			
			if(this.jPanelParametrosReportesFormaPagoPuntoVenta!=null) {
				this.jPanelParametrosReportesFormaPagoPuntoVenta.setVisible(false);
			}
						
		} else if(sAccion=="c") {	
			if(this.jScrollPanelDatosEdicionFormaPagoPuntoVenta!=null) {
				this.jScrollPanelDatosEdicionFormaPagoPuntoVenta.setVisible(false);			
			}
			
			//BYDAN_BUSQUEDAS
			/*
			if(this.jTabbedPaneBusquedasFormaPagoPuntoVenta!=null) {
				this.jTabbedPaneBusquedasFormaPagoPuntoVenta.setVisible(true);			
			}
			*/
			
			if(this.jScrollPanelDatosFormaPagoPuntoVenta!=null) {
				this.jScrollPanelDatosFormaPagoPuntoVenta.setVisible(true);
			}
			
			if(this.jPanelPaginacionFormaPagoPuntoVenta!=null) {
				this.jPanelPaginacionFormaPagoPuntoVenta.setVisible(true);
			}
			
			if(this.jPanelParametrosReportesFormaPagoPuntoVenta!=null) {
				this.jPanelParametrosReportesFormaPagoPuntoVenta.setVisible(true);
			}
						
		} else if(sAccion=="t") {
			
			if(this.jScrollPanelDatosEdicionFormaPagoPuntoVenta!=null) {
				this.jScrollPanelDatosEdicionFormaPagoPuntoVenta.setVisible(false);
			}
			
			//BYDAN_BUSQUEDAS
			/*
			if(this.jTabbedPaneBusquedasFormaPagoPuntoVenta!=null) {
				this.jTabbedPaneBusquedasFormaPagoPuntoVenta.setVisible(true);			
			}
			*/
			
			if(this.jScrollPanelDatosFormaPagoPuntoVenta!=null) {
				this.jScrollPanelDatosFormaPagoPuntoVenta.setVisible(true);
			}
			
			if(this.jPanelPaginacionFormaPagoPuntoVenta!=null) {
				this.jPanelPaginacionFormaPagoPuntoVenta.setVisible(true);
			}
			
			if(this.jPanelParametrosReportesFormaPagoPuntoVenta!=null) {
				this.jPanelParametrosReportesFormaPagoPuntoVenta.setVisible(true);
			}
						
		}  else if(sAccion=="s"||sAccion=="s2") {
			if(this.jScrollPanelDatosEdicionFormaPagoPuntoVenta!=null) {
				this.jScrollPanelDatosEdicionFormaPagoPuntoVenta.setVisible(false);
			}
			
			//BYDAN_BUSQUEDAS
			/*
			if(this.jTabbedPaneBusquedasFormaPagoPuntoVenta!=null) {
				this.jTabbedPaneBusquedasFormaPagoPuntoVenta.setVisible(true);			
			}
			*/
			
			if(this.jScrollPanelDatosFormaPagoPuntoVenta!=null) {
				this.jScrollPanelDatosFormaPagoPuntoVenta.setVisible(true);
			}
			
			if(this.jPanelPaginacionFormaPagoPuntoVenta!=null) {
				this.jPanelPaginacionFormaPagoPuntoVenta.setVisible(true);
			}
			
			if(this.jPanelParametrosReportesFormaPagoPuntoVenta!=null) {
				this.jPanelParametrosReportesFormaPagoPuntoVenta.setVisible(true);
			}
			
		} 
		
		if(sAccion.equals("relacionado") || this.formapagopuntoventaSessionBean.getEsGuardarRelacionado()) {
			if(!this.conCargarMinimo) {
				//BYDAN_BUSQUEDAS
				/*
				if(this.jTabbedPaneBusquedasFormaPagoPuntoVenta!=null) {
					this.jTabbedPaneBusquedasFormaPagoPuntoVenta.setVisible(false);				
				}
				*/
			}
			
			if(this.jPanelParametrosReportesFormaPagoPuntoVenta!=null) {
				this.jPanelParametrosReportesFormaPagoPuntoVenta.setVisible(false);
			}
		
		} else if(sAccion.equals("no_relacionado") && !this.formapagopuntoventaSessionBean.getEsGuardarRelacionado()) {
			//BYDAN_BUSQUEDAS
			/*
			if(this.jTabbedPaneBusquedasFormaPagoPuntoVenta!=null) {
				this.jTabbedPaneBusquedasFormaPagoPuntoVenta.setVisible(true);			
			}
			*/
			if(this.jPanelParametrosReportesFormaPagoPuntoVenta!=null) {
				this.jPanelParametrosReportesFormaPagoPuntoVenta.setVisible(true);
			}
		}
	}	
	
	

	public void setVisibilidadBusquedasParaEmpresa(Boolean isParaEmpresa){
		//BYDAN_BUSQUEDAS
		/*
		if(!this.conCargarMinimo) {

			Boolean isParaEmpresaNegation=!isParaEmpresa;

			this.isVisibilidadFK_IdAsientoContable=isParaEmpresaNegation;
			if(!this.isVisibilidadFK_IdAsientoContable) {this.jTabbedPaneBusquedasFormaPagoPuntoVenta.remove(jPanelFK_IdAsientoContableFormaPagoPuntoVenta);}

			this.isVisibilidadFK_IdBanco=isParaEmpresaNegation;
			if(!this.isVisibilidadFK_IdBanco) {this.jTabbedPaneBusquedasFormaPagoPuntoVenta.remove(jPanelFK_IdBancoFormaPagoPuntoVenta);}

			this.isVisibilidadFK_IdBancoTarjeta=isParaEmpresaNegation;
			if(!this.isVisibilidadFK_IdBancoTarjeta) {this.jTabbedPaneBusquedasFormaPagoPuntoVenta.remove(jPanelFK_IdBancoTarjetaFormaPagoPuntoVenta);}

			this.isVisibilidadFK_IdConexion=isParaEmpresaNegation;
			if(!this.isVisibilidadFK_IdConexion) {this.jTabbedPaneBusquedasFormaPagoPuntoVenta.remove(jPanelFK_IdConexionFormaPagoPuntoVenta);}

			this.isVisibilidadFK_IdCuentaBancoPunVen=isParaEmpresaNegation;
			if(!this.isVisibilidadFK_IdCuentaBancoPunVen) {this.jTabbedPaneBusquedasFormaPagoPuntoVenta.remove(jPanelFK_IdCuentaBancoPunVenFormaPagoPuntoVenta);}

			this.isVisibilidadFK_IdCuentaContable=isParaEmpresaNegation;
			if(!this.isVisibilidadFK_IdCuentaContable) {this.jTabbedPaneBusquedasFormaPagoPuntoVenta.remove(jPanelFK_IdCuentaContableFormaPagoPuntoVenta);}

			this.isVisibilidadFK_IdFacturaPuntoVenta=isParaEmpresaNegation;
			if(!this.isVisibilidadFK_IdFacturaPuntoVenta) {this.jTabbedPaneBusquedasFormaPagoPuntoVenta.remove(jPanelFK_IdFacturaPuntoVentaFormaPagoPuntoVenta);}

			this.isVisibilidadFK_IdTarjetaCredito=isParaEmpresaNegation;
			if(!this.isVisibilidadFK_IdTarjetaCredito) {this.jTabbedPaneBusquedasFormaPagoPuntoVenta.remove(jPanelFK_IdTarjetaCreditoFormaPagoPuntoVenta);}

			this.isVisibilidadFK_IdTipoFormaPago=isParaEmpresaNegation;
			if(!this.isVisibilidadFK_IdTipoFormaPago) {this.jTabbedPaneBusquedasFormaPagoPuntoVenta.remove(jPanelFK_IdTipoFormaPagoFormaPagoPuntoVenta);}

			this.isVisibilidadFK_IdTipoInteresTarjeta=isParaEmpresaNegation;
			if(!this.isVisibilidadFK_IdTipoInteresTarjeta) {this.jTabbedPaneBusquedasFormaPagoPuntoVenta.remove(jPanelFK_IdTipoInteresTarjetaFormaPagoPuntoVenta);}

			this.isVisibilidadFK_IdTipoPagoTarjeta=isParaEmpresaNegation;
			if(!this.isVisibilidadFK_IdTipoPagoTarjeta) {this.jTabbedPaneBusquedasFormaPagoPuntoVenta.remove(jPanelFK_IdTipoPagoTarjetaFormaPagoPuntoVenta);}

			this.isVisibilidadFK_IdTipoRiesgoCheque=isParaEmpresaNegation;
			if(!this.isVisibilidadFK_IdTipoRiesgoCheque) {this.jTabbedPaneBusquedasFormaPagoPuntoVenta.remove(jPanelFK_IdTipoRiesgoChequeFormaPagoPuntoVenta);}
		}
		*/
	}

	public void setVisibilidadBusquedasParaSucursal(Boolean isParaSucursal){
		//BYDAN_BUSQUEDAS
		/*
		if(!this.conCargarMinimo) {

			Boolean isParaSucursalNegation=!isParaSucursal;

			this.isVisibilidadFK_IdAsientoContable=isParaSucursalNegation;
			if(!this.isVisibilidadFK_IdAsientoContable) {this.jTabbedPaneBusquedasFormaPagoPuntoVenta.remove(jPanelFK_IdAsientoContableFormaPagoPuntoVenta);}

			this.isVisibilidadFK_IdBanco=isParaSucursalNegation;
			if(!this.isVisibilidadFK_IdBanco) {this.jTabbedPaneBusquedasFormaPagoPuntoVenta.remove(jPanelFK_IdBancoFormaPagoPuntoVenta);}

			this.isVisibilidadFK_IdBancoTarjeta=isParaSucursalNegation;
			if(!this.isVisibilidadFK_IdBancoTarjeta) {this.jTabbedPaneBusquedasFormaPagoPuntoVenta.remove(jPanelFK_IdBancoTarjetaFormaPagoPuntoVenta);}

			this.isVisibilidadFK_IdConexion=isParaSucursalNegation;
			if(!this.isVisibilidadFK_IdConexion) {this.jTabbedPaneBusquedasFormaPagoPuntoVenta.remove(jPanelFK_IdConexionFormaPagoPuntoVenta);}

			this.isVisibilidadFK_IdCuentaBancoPunVen=isParaSucursalNegation;
			if(!this.isVisibilidadFK_IdCuentaBancoPunVen) {this.jTabbedPaneBusquedasFormaPagoPuntoVenta.remove(jPanelFK_IdCuentaBancoPunVenFormaPagoPuntoVenta);}

			this.isVisibilidadFK_IdCuentaContable=isParaSucursalNegation;
			if(!this.isVisibilidadFK_IdCuentaContable) {this.jTabbedPaneBusquedasFormaPagoPuntoVenta.remove(jPanelFK_IdCuentaContableFormaPagoPuntoVenta);}

			this.isVisibilidadFK_IdFacturaPuntoVenta=isParaSucursalNegation;
			if(!this.isVisibilidadFK_IdFacturaPuntoVenta) {this.jTabbedPaneBusquedasFormaPagoPuntoVenta.remove(jPanelFK_IdFacturaPuntoVentaFormaPagoPuntoVenta);}

			this.isVisibilidadFK_IdTarjetaCredito=isParaSucursalNegation;
			if(!this.isVisibilidadFK_IdTarjetaCredito) {this.jTabbedPaneBusquedasFormaPagoPuntoVenta.remove(jPanelFK_IdTarjetaCreditoFormaPagoPuntoVenta);}

			this.isVisibilidadFK_IdTipoFormaPago=isParaSucursalNegation;
			if(!this.isVisibilidadFK_IdTipoFormaPago) {this.jTabbedPaneBusquedasFormaPagoPuntoVenta.remove(jPanelFK_IdTipoFormaPagoFormaPagoPuntoVenta);}

			this.isVisibilidadFK_IdTipoInteresTarjeta=isParaSucursalNegation;
			if(!this.isVisibilidadFK_IdTipoInteresTarjeta) {this.jTabbedPaneBusquedasFormaPagoPuntoVenta.remove(jPanelFK_IdTipoInteresTarjetaFormaPagoPuntoVenta);}

			this.isVisibilidadFK_IdTipoPagoTarjeta=isParaSucursalNegation;
			if(!this.isVisibilidadFK_IdTipoPagoTarjeta) {this.jTabbedPaneBusquedasFormaPagoPuntoVenta.remove(jPanelFK_IdTipoPagoTarjetaFormaPagoPuntoVenta);}

			this.isVisibilidadFK_IdTipoRiesgoCheque=isParaSucursalNegation;
			if(!this.isVisibilidadFK_IdTipoRiesgoCheque) {this.jTabbedPaneBusquedasFormaPagoPuntoVenta.remove(jPanelFK_IdTipoRiesgoChequeFormaPagoPuntoVenta);}
		}
		*/
	}

	public void setVisibilidadBusquedasParaEjercicio(Boolean isParaEjercicio){
		//BYDAN_BUSQUEDAS
		/*
		if(!this.conCargarMinimo) {

			Boolean isParaEjercicioNegation=!isParaEjercicio;

			this.isVisibilidadFK_IdAsientoContable=isParaEjercicioNegation;
			if(!this.isVisibilidadFK_IdAsientoContable) {this.jTabbedPaneBusquedasFormaPagoPuntoVenta.remove(jPanelFK_IdAsientoContableFormaPagoPuntoVenta);}

			this.isVisibilidadFK_IdBanco=isParaEjercicioNegation;
			if(!this.isVisibilidadFK_IdBanco) {this.jTabbedPaneBusquedasFormaPagoPuntoVenta.remove(jPanelFK_IdBancoFormaPagoPuntoVenta);}

			this.isVisibilidadFK_IdBancoTarjeta=isParaEjercicioNegation;
			if(!this.isVisibilidadFK_IdBancoTarjeta) {this.jTabbedPaneBusquedasFormaPagoPuntoVenta.remove(jPanelFK_IdBancoTarjetaFormaPagoPuntoVenta);}

			this.isVisibilidadFK_IdConexion=isParaEjercicioNegation;
			if(!this.isVisibilidadFK_IdConexion) {this.jTabbedPaneBusquedasFormaPagoPuntoVenta.remove(jPanelFK_IdConexionFormaPagoPuntoVenta);}

			this.isVisibilidadFK_IdCuentaBancoPunVen=isParaEjercicioNegation;
			if(!this.isVisibilidadFK_IdCuentaBancoPunVen) {this.jTabbedPaneBusquedasFormaPagoPuntoVenta.remove(jPanelFK_IdCuentaBancoPunVenFormaPagoPuntoVenta);}

			this.isVisibilidadFK_IdCuentaContable=isParaEjercicioNegation;
			if(!this.isVisibilidadFK_IdCuentaContable) {this.jTabbedPaneBusquedasFormaPagoPuntoVenta.remove(jPanelFK_IdCuentaContableFormaPagoPuntoVenta);}

			this.isVisibilidadFK_IdFacturaPuntoVenta=isParaEjercicioNegation;
			if(!this.isVisibilidadFK_IdFacturaPuntoVenta) {this.jTabbedPaneBusquedasFormaPagoPuntoVenta.remove(jPanelFK_IdFacturaPuntoVentaFormaPagoPuntoVenta);}

			this.isVisibilidadFK_IdTarjetaCredito=isParaEjercicioNegation;
			if(!this.isVisibilidadFK_IdTarjetaCredito) {this.jTabbedPaneBusquedasFormaPagoPuntoVenta.remove(jPanelFK_IdTarjetaCreditoFormaPagoPuntoVenta);}

			this.isVisibilidadFK_IdTipoFormaPago=isParaEjercicioNegation;
			if(!this.isVisibilidadFK_IdTipoFormaPago) {this.jTabbedPaneBusquedasFormaPagoPuntoVenta.remove(jPanelFK_IdTipoFormaPagoFormaPagoPuntoVenta);}

			this.isVisibilidadFK_IdTipoInteresTarjeta=isParaEjercicioNegation;
			if(!this.isVisibilidadFK_IdTipoInteresTarjeta) {this.jTabbedPaneBusquedasFormaPagoPuntoVenta.remove(jPanelFK_IdTipoInteresTarjetaFormaPagoPuntoVenta);}

			this.isVisibilidadFK_IdTipoPagoTarjeta=isParaEjercicioNegation;
			if(!this.isVisibilidadFK_IdTipoPagoTarjeta) {this.jTabbedPaneBusquedasFormaPagoPuntoVenta.remove(jPanelFK_IdTipoPagoTarjetaFormaPagoPuntoVenta);}

			this.isVisibilidadFK_IdTipoRiesgoCheque=isParaEjercicioNegation;
			if(!this.isVisibilidadFK_IdTipoRiesgoCheque) {this.jTabbedPaneBusquedasFormaPagoPuntoVenta.remove(jPanelFK_IdTipoRiesgoChequeFormaPagoPuntoVenta);}
		}
		*/
	}

	public void setVisibilidadBusquedasParaPeriodo(Boolean isParaPeriodo){
		//BYDAN_BUSQUEDAS
		/*
		if(!this.conCargarMinimo) {

			Boolean isParaPeriodoNegation=!isParaPeriodo;

			this.isVisibilidadFK_IdAsientoContable=isParaPeriodoNegation;
			if(!this.isVisibilidadFK_IdAsientoContable) {this.jTabbedPaneBusquedasFormaPagoPuntoVenta.remove(jPanelFK_IdAsientoContableFormaPagoPuntoVenta);}

			this.isVisibilidadFK_IdBanco=isParaPeriodoNegation;
			if(!this.isVisibilidadFK_IdBanco) {this.jTabbedPaneBusquedasFormaPagoPuntoVenta.remove(jPanelFK_IdBancoFormaPagoPuntoVenta);}

			this.isVisibilidadFK_IdBancoTarjeta=isParaPeriodoNegation;
			if(!this.isVisibilidadFK_IdBancoTarjeta) {this.jTabbedPaneBusquedasFormaPagoPuntoVenta.remove(jPanelFK_IdBancoTarjetaFormaPagoPuntoVenta);}

			this.isVisibilidadFK_IdConexion=isParaPeriodoNegation;
			if(!this.isVisibilidadFK_IdConexion) {this.jTabbedPaneBusquedasFormaPagoPuntoVenta.remove(jPanelFK_IdConexionFormaPagoPuntoVenta);}

			this.isVisibilidadFK_IdCuentaBancoPunVen=isParaPeriodoNegation;
			if(!this.isVisibilidadFK_IdCuentaBancoPunVen) {this.jTabbedPaneBusquedasFormaPagoPuntoVenta.remove(jPanelFK_IdCuentaBancoPunVenFormaPagoPuntoVenta);}

			this.isVisibilidadFK_IdCuentaContable=isParaPeriodoNegation;
			if(!this.isVisibilidadFK_IdCuentaContable) {this.jTabbedPaneBusquedasFormaPagoPuntoVenta.remove(jPanelFK_IdCuentaContableFormaPagoPuntoVenta);}

			this.isVisibilidadFK_IdFacturaPuntoVenta=isParaPeriodoNegation;
			if(!this.isVisibilidadFK_IdFacturaPuntoVenta) {this.jTabbedPaneBusquedasFormaPagoPuntoVenta.remove(jPanelFK_IdFacturaPuntoVentaFormaPagoPuntoVenta);}

			this.isVisibilidadFK_IdTarjetaCredito=isParaPeriodoNegation;
			if(!this.isVisibilidadFK_IdTarjetaCredito) {this.jTabbedPaneBusquedasFormaPagoPuntoVenta.remove(jPanelFK_IdTarjetaCreditoFormaPagoPuntoVenta);}

			this.isVisibilidadFK_IdTipoFormaPago=isParaPeriodoNegation;
			if(!this.isVisibilidadFK_IdTipoFormaPago) {this.jTabbedPaneBusquedasFormaPagoPuntoVenta.remove(jPanelFK_IdTipoFormaPagoFormaPagoPuntoVenta);}

			this.isVisibilidadFK_IdTipoInteresTarjeta=isParaPeriodoNegation;
			if(!this.isVisibilidadFK_IdTipoInteresTarjeta) {this.jTabbedPaneBusquedasFormaPagoPuntoVenta.remove(jPanelFK_IdTipoInteresTarjetaFormaPagoPuntoVenta);}

			this.isVisibilidadFK_IdTipoPagoTarjeta=isParaPeriodoNegation;
			if(!this.isVisibilidadFK_IdTipoPagoTarjeta) {this.jTabbedPaneBusquedasFormaPagoPuntoVenta.remove(jPanelFK_IdTipoPagoTarjetaFormaPagoPuntoVenta);}

			this.isVisibilidadFK_IdTipoRiesgoCheque=isParaPeriodoNegation;
			if(!this.isVisibilidadFK_IdTipoRiesgoCheque) {this.jTabbedPaneBusquedasFormaPagoPuntoVenta.remove(jPanelFK_IdTipoRiesgoChequeFormaPagoPuntoVenta);}
		}
		*/
	}

	public void setVisibilidadBusquedasParaFacturaPuntoVenta(Boolean isParaFacturaPuntoVenta){
		//BYDAN_BUSQUEDAS
		/*
		if(!this.conCargarMinimo) {

			Boolean isParaFacturaPuntoVentaNegation=!isParaFacturaPuntoVenta;

			this.isVisibilidadFK_IdAsientoContable=isParaFacturaPuntoVentaNegation;
			if(!this.isVisibilidadFK_IdAsientoContable) {this.jTabbedPaneBusquedasFormaPagoPuntoVenta.remove(jPanelFK_IdAsientoContableFormaPagoPuntoVenta);}

			this.isVisibilidadFK_IdBanco=isParaFacturaPuntoVentaNegation;
			if(!this.isVisibilidadFK_IdBanco) {this.jTabbedPaneBusquedasFormaPagoPuntoVenta.remove(jPanelFK_IdBancoFormaPagoPuntoVenta);}

			this.isVisibilidadFK_IdBancoTarjeta=isParaFacturaPuntoVentaNegation;
			if(!this.isVisibilidadFK_IdBancoTarjeta) {this.jTabbedPaneBusquedasFormaPagoPuntoVenta.remove(jPanelFK_IdBancoTarjetaFormaPagoPuntoVenta);}

			this.isVisibilidadFK_IdConexion=isParaFacturaPuntoVentaNegation;
			if(!this.isVisibilidadFK_IdConexion) {this.jTabbedPaneBusquedasFormaPagoPuntoVenta.remove(jPanelFK_IdConexionFormaPagoPuntoVenta);}

			this.isVisibilidadFK_IdCuentaBancoPunVen=isParaFacturaPuntoVentaNegation;
			if(!this.isVisibilidadFK_IdCuentaBancoPunVen) {this.jTabbedPaneBusquedasFormaPagoPuntoVenta.remove(jPanelFK_IdCuentaBancoPunVenFormaPagoPuntoVenta);}

			this.isVisibilidadFK_IdCuentaContable=isParaFacturaPuntoVentaNegation;
			if(!this.isVisibilidadFK_IdCuentaContable) {this.jTabbedPaneBusquedasFormaPagoPuntoVenta.remove(jPanelFK_IdCuentaContableFormaPagoPuntoVenta);}

			this.isVisibilidadFK_IdFacturaPuntoVenta=isParaFacturaPuntoVenta;
			if(!this.isVisibilidadFK_IdFacturaPuntoVenta) {this.jTabbedPaneBusquedasFormaPagoPuntoVenta.remove(jPanelFK_IdFacturaPuntoVentaFormaPagoPuntoVenta);}

			this.isVisibilidadFK_IdTarjetaCredito=isParaFacturaPuntoVentaNegation;
			if(!this.isVisibilidadFK_IdTarjetaCredito) {this.jTabbedPaneBusquedasFormaPagoPuntoVenta.remove(jPanelFK_IdTarjetaCreditoFormaPagoPuntoVenta);}

			this.isVisibilidadFK_IdTipoFormaPago=isParaFacturaPuntoVentaNegation;
			if(!this.isVisibilidadFK_IdTipoFormaPago) {this.jTabbedPaneBusquedasFormaPagoPuntoVenta.remove(jPanelFK_IdTipoFormaPagoFormaPagoPuntoVenta);}

			this.isVisibilidadFK_IdTipoInteresTarjeta=isParaFacturaPuntoVentaNegation;
			if(!this.isVisibilidadFK_IdTipoInteresTarjeta) {this.jTabbedPaneBusquedasFormaPagoPuntoVenta.remove(jPanelFK_IdTipoInteresTarjetaFormaPagoPuntoVenta);}

			this.isVisibilidadFK_IdTipoPagoTarjeta=isParaFacturaPuntoVentaNegation;
			if(!this.isVisibilidadFK_IdTipoPagoTarjeta) {this.jTabbedPaneBusquedasFormaPagoPuntoVenta.remove(jPanelFK_IdTipoPagoTarjetaFormaPagoPuntoVenta);}

			this.isVisibilidadFK_IdTipoRiesgoCheque=isParaFacturaPuntoVentaNegation;
			if(!this.isVisibilidadFK_IdTipoRiesgoCheque) {this.jTabbedPaneBusquedasFormaPagoPuntoVenta.remove(jPanelFK_IdTipoRiesgoChequeFormaPagoPuntoVenta);}
		}
		*/
	}

	public void setVisibilidadBusquedasParaTipoFormaPago(Boolean isParaTipoFormaPago){
		//BYDAN_BUSQUEDAS
		/*
		if(!this.conCargarMinimo) {

			Boolean isParaTipoFormaPagoNegation=!isParaTipoFormaPago;

			this.isVisibilidadFK_IdAsientoContable=isParaTipoFormaPagoNegation;
			if(!this.isVisibilidadFK_IdAsientoContable) {this.jTabbedPaneBusquedasFormaPagoPuntoVenta.remove(jPanelFK_IdAsientoContableFormaPagoPuntoVenta);}

			this.isVisibilidadFK_IdBanco=isParaTipoFormaPagoNegation;
			if(!this.isVisibilidadFK_IdBanco) {this.jTabbedPaneBusquedasFormaPagoPuntoVenta.remove(jPanelFK_IdBancoFormaPagoPuntoVenta);}

			this.isVisibilidadFK_IdBancoTarjeta=isParaTipoFormaPagoNegation;
			if(!this.isVisibilidadFK_IdBancoTarjeta) {this.jTabbedPaneBusquedasFormaPagoPuntoVenta.remove(jPanelFK_IdBancoTarjetaFormaPagoPuntoVenta);}

			this.isVisibilidadFK_IdConexion=isParaTipoFormaPagoNegation;
			if(!this.isVisibilidadFK_IdConexion) {this.jTabbedPaneBusquedasFormaPagoPuntoVenta.remove(jPanelFK_IdConexionFormaPagoPuntoVenta);}

			this.isVisibilidadFK_IdCuentaBancoPunVen=isParaTipoFormaPagoNegation;
			if(!this.isVisibilidadFK_IdCuentaBancoPunVen) {this.jTabbedPaneBusquedasFormaPagoPuntoVenta.remove(jPanelFK_IdCuentaBancoPunVenFormaPagoPuntoVenta);}

			this.isVisibilidadFK_IdCuentaContable=isParaTipoFormaPagoNegation;
			if(!this.isVisibilidadFK_IdCuentaContable) {this.jTabbedPaneBusquedasFormaPagoPuntoVenta.remove(jPanelFK_IdCuentaContableFormaPagoPuntoVenta);}

			this.isVisibilidadFK_IdFacturaPuntoVenta=isParaTipoFormaPagoNegation;
			if(!this.isVisibilidadFK_IdFacturaPuntoVenta) {this.jTabbedPaneBusquedasFormaPagoPuntoVenta.remove(jPanelFK_IdFacturaPuntoVentaFormaPagoPuntoVenta);}

			this.isVisibilidadFK_IdTarjetaCredito=isParaTipoFormaPagoNegation;
			if(!this.isVisibilidadFK_IdTarjetaCredito) {this.jTabbedPaneBusquedasFormaPagoPuntoVenta.remove(jPanelFK_IdTarjetaCreditoFormaPagoPuntoVenta);}

			this.isVisibilidadFK_IdTipoFormaPago=isParaTipoFormaPago;
			if(!this.isVisibilidadFK_IdTipoFormaPago) {this.jTabbedPaneBusquedasFormaPagoPuntoVenta.remove(jPanelFK_IdTipoFormaPagoFormaPagoPuntoVenta);}

			this.isVisibilidadFK_IdTipoInteresTarjeta=isParaTipoFormaPagoNegation;
			if(!this.isVisibilidadFK_IdTipoInteresTarjeta) {this.jTabbedPaneBusquedasFormaPagoPuntoVenta.remove(jPanelFK_IdTipoInteresTarjetaFormaPagoPuntoVenta);}

			this.isVisibilidadFK_IdTipoPagoTarjeta=isParaTipoFormaPagoNegation;
			if(!this.isVisibilidadFK_IdTipoPagoTarjeta) {this.jTabbedPaneBusquedasFormaPagoPuntoVenta.remove(jPanelFK_IdTipoPagoTarjetaFormaPagoPuntoVenta);}

			this.isVisibilidadFK_IdTipoRiesgoCheque=isParaTipoFormaPagoNegation;
			if(!this.isVisibilidadFK_IdTipoRiesgoCheque) {this.jTabbedPaneBusquedasFormaPagoPuntoVenta.remove(jPanelFK_IdTipoRiesgoChequeFormaPagoPuntoVenta);}
		}
		*/
	}

	public void setVisibilidadBusquedasParaBanco(Boolean isParaBanco){
		//BYDAN_BUSQUEDAS
		/*
		if(!this.conCargarMinimo) {

			Boolean isParaBancoNegation=!isParaBanco;

			this.isVisibilidadFK_IdAsientoContable=isParaBancoNegation;
			if(!this.isVisibilidadFK_IdAsientoContable) {this.jTabbedPaneBusquedasFormaPagoPuntoVenta.remove(jPanelFK_IdAsientoContableFormaPagoPuntoVenta);}

			this.isVisibilidadFK_IdBanco=isParaBanco;
			if(!this.isVisibilidadFK_IdBanco) {this.jTabbedPaneBusquedasFormaPagoPuntoVenta.remove(jPanelFK_IdBancoFormaPagoPuntoVenta);}

			this.isVisibilidadFK_IdBancoTarjeta=isParaBancoNegation;
			if(!this.isVisibilidadFK_IdBancoTarjeta) {this.jTabbedPaneBusquedasFormaPagoPuntoVenta.remove(jPanelFK_IdBancoTarjetaFormaPagoPuntoVenta);}

			this.isVisibilidadFK_IdConexion=isParaBancoNegation;
			if(!this.isVisibilidadFK_IdConexion) {this.jTabbedPaneBusquedasFormaPagoPuntoVenta.remove(jPanelFK_IdConexionFormaPagoPuntoVenta);}

			this.isVisibilidadFK_IdCuentaBancoPunVen=isParaBancoNegation;
			if(!this.isVisibilidadFK_IdCuentaBancoPunVen) {this.jTabbedPaneBusquedasFormaPagoPuntoVenta.remove(jPanelFK_IdCuentaBancoPunVenFormaPagoPuntoVenta);}

			this.isVisibilidadFK_IdCuentaContable=isParaBancoNegation;
			if(!this.isVisibilidadFK_IdCuentaContable) {this.jTabbedPaneBusquedasFormaPagoPuntoVenta.remove(jPanelFK_IdCuentaContableFormaPagoPuntoVenta);}

			this.isVisibilidadFK_IdFacturaPuntoVenta=isParaBancoNegation;
			if(!this.isVisibilidadFK_IdFacturaPuntoVenta) {this.jTabbedPaneBusquedasFormaPagoPuntoVenta.remove(jPanelFK_IdFacturaPuntoVentaFormaPagoPuntoVenta);}

			this.isVisibilidadFK_IdTarjetaCredito=isParaBancoNegation;
			if(!this.isVisibilidadFK_IdTarjetaCredito) {this.jTabbedPaneBusquedasFormaPagoPuntoVenta.remove(jPanelFK_IdTarjetaCreditoFormaPagoPuntoVenta);}

			this.isVisibilidadFK_IdTipoFormaPago=isParaBancoNegation;
			if(!this.isVisibilidadFK_IdTipoFormaPago) {this.jTabbedPaneBusquedasFormaPagoPuntoVenta.remove(jPanelFK_IdTipoFormaPagoFormaPagoPuntoVenta);}

			this.isVisibilidadFK_IdTipoInteresTarjeta=isParaBancoNegation;
			if(!this.isVisibilidadFK_IdTipoInteresTarjeta) {this.jTabbedPaneBusquedasFormaPagoPuntoVenta.remove(jPanelFK_IdTipoInteresTarjetaFormaPagoPuntoVenta);}

			this.isVisibilidadFK_IdTipoPagoTarjeta=isParaBancoNegation;
			if(!this.isVisibilidadFK_IdTipoPagoTarjeta) {this.jTabbedPaneBusquedasFormaPagoPuntoVenta.remove(jPanelFK_IdTipoPagoTarjetaFormaPagoPuntoVenta);}

			this.isVisibilidadFK_IdTipoRiesgoCheque=isParaBancoNegation;
			if(!this.isVisibilidadFK_IdTipoRiesgoCheque) {this.jTabbedPaneBusquedasFormaPagoPuntoVenta.remove(jPanelFK_IdTipoRiesgoChequeFormaPagoPuntoVenta);}
		}
		*/
	}

	public void setVisibilidadBusquedasParaCuentaBancoPunVen(Boolean isParaCuentaBancoPunVen){
		//BYDAN_BUSQUEDAS
		/*
		if(!this.conCargarMinimo) {

			Boolean isParaCuentaBancoPunVenNegation=!isParaCuentaBancoPunVen;

			this.isVisibilidadFK_IdAsientoContable=isParaCuentaBancoPunVenNegation;
			if(!this.isVisibilidadFK_IdAsientoContable) {this.jTabbedPaneBusquedasFormaPagoPuntoVenta.remove(jPanelFK_IdAsientoContableFormaPagoPuntoVenta);}

			this.isVisibilidadFK_IdBanco=isParaCuentaBancoPunVenNegation;
			if(!this.isVisibilidadFK_IdBanco) {this.jTabbedPaneBusquedasFormaPagoPuntoVenta.remove(jPanelFK_IdBancoFormaPagoPuntoVenta);}

			this.isVisibilidadFK_IdBancoTarjeta=isParaCuentaBancoPunVenNegation;
			if(!this.isVisibilidadFK_IdBancoTarjeta) {this.jTabbedPaneBusquedasFormaPagoPuntoVenta.remove(jPanelFK_IdBancoTarjetaFormaPagoPuntoVenta);}

			this.isVisibilidadFK_IdConexion=isParaCuentaBancoPunVenNegation;
			if(!this.isVisibilidadFK_IdConexion) {this.jTabbedPaneBusquedasFormaPagoPuntoVenta.remove(jPanelFK_IdConexionFormaPagoPuntoVenta);}

			this.isVisibilidadFK_IdCuentaBancoPunVen=isParaCuentaBancoPunVen;
			if(!this.isVisibilidadFK_IdCuentaBancoPunVen) {this.jTabbedPaneBusquedasFormaPagoPuntoVenta.remove(jPanelFK_IdCuentaBancoPunVenFormaPagoPuntoVenta);}

			this.isVisibilidadFK_IdCuentaContable=isParaCuentaBancoPunVenNegation;
			if(!this.isVisibilidadFK_IdCuentaContable) {this.jTabbedPaneBusquedasFormaPagoPuntoVenta.remove(jPanelFK_IdCuentaContableFormaPagoPuntoVenta);}

			this.isVisibilidadFK_IdFacturaPuntoVenta=isParaCuentaBancoPunVenNegation;
			if(!this.isVisibilidadFK_IdFacturaPuntoVenta) {this.jTabbedPaneBusquedasFormaPagoPuntoVenta.remove(jPanelFK_IdFacturaPuntoVentaFormaPagoPuntoVenta);}

			this.isVisibilidadFK_IdTarjetaCredito=isParaCuentaBancoPunVenNegation;
			if(!this.isVisibilidadFK_IdTarjetaCredito) {this.jTabbedPaneBusquedasFormaPagoPuntoVenta.remove(jPanelFK_IdTarjetaCreditoFormaPagoPuntoVenta);}

			this.isVisibilidadFK_IdTipoFormaPago=isParaCuentaBancoPunVenNegation;
			if(!this.isVisibilidadFK_IdTipoFormaPago) {this.jTabbedPaneBusquedasFormaPagoPuntoVenta.remove(jPanelFK_IdTipoFormaPagoFormaPagoPuntoVenta);}

			this.isVisibilidadFK_IdTipoInteresTarjeta=isParaCuentaBancoPunVenNegation;
			if(!this.isVisibilidadFK_IdTipoInteresTarjeta) {this.jTabbedPaneBusquedasFormaPagoPuntoVenta.remove(jPanelFK_IdTipoInteresTarjetaFormaPagoPuntoVenta);}

			this.isVisibilidadFK_IdTipoPagoTarjeta=isParaCuentaBancoPunVenNegation;
			if(!this.isVisibilidadFK_IdTipoPagoTarjeta) {this.jTabbedPaneBusquedasFormaPagoPuntoVenta.remove(jPanelFK_IdTipoPagoTarjetaFormaPagoPuntoVenta);}

			this.isVisibilidadFK_IdTipoRiesgoCheque=isParaCuentaBancoPunVenNegation;
			if(!this.isVisibilidadFK_IdTipoRiesgoCheque) {this.jTabbedPaneBusquedasFormaPagoPuntoVenta.remove(jPanelFK_IdTipoRiesgoChequeFormaPagoPuntoVenta);}
		}
		*/
	}

	public void setVisibilidadBusquedasParaTipoRiesgoCheque(Boolean isParaTipoRiesgoCheque){
		//BYDAN_BUSQUEDAS
		/*
		if(!this.conCargarMinimo) {

			Boolean isParaTipoRiesgoChequeNegation=!isParaTipoRiesgoCheque;

			this.isVisibilidadFK_IdAsientoContable=isParaTipoRiesgoChequeNegation;
			if(!this.isVisibilidadFK_IdAsientoContable) {this.jTabbedPaneBusquedasFormaPagoPuntoVenta.remove(jPanelFK_IdAsientoContableFormaPagoPuntoVenta);}

			this.isVisibilidadFK_IdBanco=isParaTipoRiesgoChequeNegation;
			if(!this.isVisibilidadFK_IdBanco) {this.jTabbedPaneBusquedasFormaPagoPuntoVenta.remove(jPanelFK_IdBancoFormaPagoPuntoVenta);}

			this.isVisibilidadFK_IdBancoTarjeta=isParaTipoRiesgoChequeNegation;
			if(!this.isVisibilidadFK_IdBancoTarjeta) {this.jTabbedPaneBusquedasFormaPagoPuntoVenta.remove(jPanelFK_IdBancoTarjetaFormaPagoPuntoVenta);}

			this.isVisibilidadFK_IdConexion=isParaTipoRiesgoChequeNegation;
			if(!this.isVisibilidadFK_IdConexion) {this.jTabbedPaneBusquedasFormaPagoPuntoVenta.remove(jPanelFK_IdConexionFormaPagoPuntoVenta);}

			this.isVisibilidadFK_IdCuentaBancoPunVen=isParaTipoRiesgoChequeNegation;
			if(!this.isVisibilidadFK_IdCuentaBancoPunVen) {this.jTabbedPaneBusquedasFormaPagoPuntoVenta.remove(jPanelFK_IdCuentaBancoPunVenFormaPagoPuntoVenta);}

			this.isVisibilidadFK_IdCuentaContable=isParaTipoRiesgoChequeNegation;
			if(!this.isVisibilidadFK_IdCuentaContable) {this.jTabbedPaneBusquedasFormaPagoPuntoVenta.remove(jPanelFK_IdCuentaContableFormaPagoPuntoVenta);}

			this.isVisibilidadFK_IdFacturaPuntoVenta=isParaTipoRiesgoChequeNegation;
			if(!this.isVisibilidadFK_IdFacturaPuntoVenta) {this.jTabbedPaneBusquedasFormaPagoPuntoVenta.remove(jPanelFK_IdFacturaPuntoVentaFormaPagoPuntoVenta);}

			this.isVisibilidadFK_IdTarjetaCredito=isParaTipoRiesgoChequeNegation;
			if(!this.isVisibilidadFK_IdTarjetaCredito) {this.jTabbedPaneBusquedasFormaPagoPuntoVenta.remove(jPanelFK_IdTarjetaCreditoFormaPagoPuntoVenta);}

			this.isVisibilidadFK_IdTipoFormaPago=isParaTipoRiesgoChequeNegation;
			if(!this.isVisibilidadFK_IdTipoFormaPago) {this.jTabbedPaneBusquedasFormaPagoPuntoVenta.remove(jPanelFK_IdTipoFormaPagoFormaPagoPuntoVenta);}

			this.isVisibilidadFK_IdTipoInteresTarjeta=isParaTipoRiesgoChequeNegation;
			if(!this.isVisibilidadFK_IdTipoInteresTarjeta) {this.jTabbedPaneBusquedasFormaPagoPuntoVenta.remove(jPanelFK_IdTipoInteresTarjetaFormaPagoPuntoVenta);}

			this.isVisibilidadFK_IdTipoPagoTarjeta=isParaTipoRiesgoChequeNegation;
			if(!this.isVisibilidadFK_IdTipoPagoTarjeta) {this.jTabbedPaneBusquedasFormaPagoPuntoVenta.remove(jPanelFK_IdTipoPagoTarjetaFormaPagoPuntoVenta);}

			this.isVisibilidadFK_IdTipoRiesgoCheque=isParaTipoRiesgoCheque;
			if(!this.isVisibilidadFK_IdTipoRiesgoCheque) {this.jTabbedPaneBusquedasFormaPagoPuntoVenta.remove(jPanelFK_IdTipoRiesgoChequeFormaPagoPuntoVenta);}
		}
		*/
	}

	public void setVisibilidadBusquedasParaBancoTarjeta(Boolean isParaBancoTarjeta){
		//BYDAN_BUSQUEDAS
		/*
		if(!this.conCargarMinimo) {

			Boolean isParaBancoTarjetaNegation=!isParaBancoTarjeta;

			this.isVisibilidadFK_IdAsientoContable=isParaBancoTarjetaNegation;
			if(!this.isVisibilidadFK_IdAsientoContable) {this.jTabbedPaneBusquedasFormaPagoPuntoVenta.remove(jPanelFK_IdAsientoContableFormaPagoPuntoVenta);}

			this.isVisibilidadFK_IdBanco=isParaBancoTarjetaNegation;
			if(!this.isVisibilidadFK_IdBanco) {this.jTabbedPaneBusquedasFormaPagoPuntoVenta.remove(jPanelFK_IdBancoFormaPagoPuntoVenta);}

			this.isVisibilidadFK_IdBancoTarjeta=isParaBancoTarjeta;
			if(!this.isVisibilidadFK_IdBancoTarjeta) {this.jTabbedPaneBusquedasFormaPagoPuntoVenta.remove(jPanelFK_IdBancoTarjetaFormaPagoPuntoVenta);}

			this.isVisibilidadFK_IdConexion=isParaBancoTarjetaNegation;
			if(!this.isVisibilidadFK_IdConexion) {this.jTabbedPaneBusquedasFormaPagoPuntoVenta.remove(jPanelFK_IdConexionFormaPagoPuntoVenta);}

			this.isVisibilidadFK_IdCuentaBancoPunVen=isParaBancoTarjetaNegation;
			if(!this.isVisibilidadFK_IdCuentaBancoPunVen) {this.jTabbedPaneBusquedasFormaPagoPuntoVenta.remove(jPanelFK_IdCuentaBancoPunVenFormaPagoPuntoVenta);}

			this.isVisibilidadFK_IdCuentaContable=isParaBancoTarjetaNegation;
			if(!this.isVisibilidadFK_IdCuentaContable) {this.jTabbedPaneBusquedasFormaPagoPuntoVenta.remove(jPanelFK_IdCuentaContableFormaPagoPuntoVenta);}

			this.isVisibilidadFK_IdFacturaPuntoVenta=isParaBancoTarjetaNegation;
			if(!this.isVisibilidadFK_IdFacturaPuntoVenta) {this.jTabbedPaneBusquedasFormaPagoPuntoVenta.remove(jPanelFK_IdFacturaPuntoVentaFormaPagoPuntoVenta);}

			this.isVisibilidadFK_IdTarjetaCredito=isParaBancoTarjetaNegation;
			if(!this.isVisibilidadFK_IdTarjetaCredito) {this.jTabbedPaneBusquedasFormaPagoPuntoVenta.remove(jPanelFK_IdTarjetaCreditoFormaPagoPuntoVenta);}

			this.isVisibilidadFK_IdTipoFormaPago=isParaBancoTarjetaNegation;
			if(!this.isVisibilidadFK_IdTipoFormaPago) {this.jTabbedPaneBusquedasFormaPagoPuntoVenta.remove(jPanelFK_IdTipoFormaPagoFormaPagoPuntoVenta);}

			this.isVisibilidadFK_IdTipoInteresTarjeta=isParaBancoTarjetaNegation;
			if(!this.isVisibilidadFK_IdTipoInteresTarjeta) {this.jTabbedPaneBusquedasFormaPagoPuntoVenta.remove(jPanelFK_IdTipoInteresTarjetaFormaPagoPuntoVenta);}

			this.isVisibilidadFK_IdTipoPagoTarjeta=isParaBancoTarjetaNegation;
			if(!this.isVisibilidadFK_IdTipoPagoTarjeta) {this.jTabbedPaneBusquedasFormaPagoPuntoVenta.remove(jPanelFK_IdTipoPagoTarjetaFormaPagoPuntoVenta);}

			this.isVisibilidadFK_IdTipoRiesgoCheque=isParaBancoTarjetaNegation;
			if(!this.isVisibilidadFK_IdTipoRiesgoCheque) {this.jTabbedPaneBusquedasFormaPagoPuntoVenta.remove(jPanelFK_IdTipoRiesgoChequeFormaPagoPuntoVenta);}
		}
		*/
	}

	public void setVisibilidadBusquedasParaTarjetaCredito(Boolean isParaTarjetaCredito){
		//BYDAN_BUSQUEDAS
		/*
		if(!this.conCargarMinimo) {

			Boolean isParaTarjetaCreditoNegation=!isParaTarjetaCredito;

			this.isVisibilidadFK_IdAsientoContable=isParaTarjetaCreditoNegation;
			if(!this.isVisibilidadFK_IdAsientoContable) {this.jTabbedPaneBusquedasFormaPagoPuntoVenta.remove(jPanelFK_IdAsientoContableFormaPagoPuntoVenta);}

			this.isVisibilidadFK_IdBanco=isParaTarjetaCreditoNegation;
			if(!this.isVisibilidadFK_IdBanco) {this.jTabbedPaneBusquedasFormaPagoPuntoVenta.remove(jPanelFK_IdBancoFormaPagoPuntoVenta);}

			this.isVisibilidadFK_IdBancoTarjeta=isParaTarjetaCreditoNegation;
			if(!this.isVisibilidadFK_IdBancoTarjeta) {this.jTabbedPaneBusquedasFormaPagoPuntoVenta.remove(jPanelFK_IdBancoTarjetaFormaPagoPuntoVenta);}

			this.isVisibilidadFK_IdConexion=isParaTarjetaCreditoNegation;
			if(!this.isVisibilidadFK_IdConexion) {this.jTabbedPaneBusquedasFormaPagoPuntoVenta.remove(jPanelFK_IdConexionFormaPagoPuntoVenta);}

			this.isVisibilidadFK_IdCuentaBancoPunVen=isParaTarjetaCreditoNegation;
			if(!this.isVisibilidadFK_IdCuentaBancoPunVen) {this.jTabbedPaneBusquedasFormaPagoPuntoVenta.remove(jPanelFK_IdCuentaBancoPunVenFormaPagoPuntoVenta);}

			this.isVisibilidadFK_IdCuentaContable=isParaTarjetaCreditoNegation;
			if(!this.isVisibilidadFK_IdCuentaContable) {this.jTabbedPaneBusquedasFormaPagoPuntoVenta.remove(jPanelFK_IdCuentaContableFormaPagoPuntoVenta);}

			this.isVisibilidadFK_IdFacturaPuntoVenta=isParaTarjetaCreditoNegation;
			if(!this.isVisibilidadFK_IdFacturaPuntoVenta) {this.jTabbedPaneBusquedasFormaPagoPuntoVenta.remove(jPanelFK_IdFacturaPuntoVentaFormaPagoPuntoVenta);}

			this.isVisibilidadFK_IdTarjetaCredito=isParaTarjetaCredito;
			if(!this.isVisibilidadFK_IdTarjetaCredito) {this.jTabbedPaneBusquedasFormaPagoPuntoVenta.remove(jPanelFK_IdTarjetaCreditoFormaPagoPuntoVenta);}

			this.isVisibilidadFK_IdTipoFormaPago=isParaTarjetaCreditoNegation;
			if(!this.isVisibilidadFK_IdTipoFormaPago) {this.jTabbedPaneBusquedasFormaPagoPuntoVenta.remove(jPanelFK_IdTipoFormaPagoFormaPagoPuntoVenta);}

			this.isVisibilidadFK_IdTipoInteresTarjeta=isParaTarjetaCreditoNegation;
			if(!this.isVisibilidadFK_IdTipoInteresTarjeta) {this.jTabbedPaneBusquedasFormaPagoPuntoVenta.remove(jPanelFK_IdTipoInteresTarjetaFormaPagoPuntoVenta);}

			this.isVisibilidadFK_IdTipoPagoTarjeta=isParaTarjetaCreditoNegation;
			if(!this.isVisibilidadFK_IdTipoPagoTarjeta) {this.jTabbedPaneBusquedasFormaPagoPuntoVenta.remove(jPanelFK_IdTipoPagoTarjetaFormaPagoPuntoVenta);}

			this.isVisibilidadFK_IdTipoRiesgoCheque=isParaTarjetaCreditoNegation;
			if(!this.isVisibilidadFK_IdTipoRiesgoCheque) {this.jTabbedPaneBusquedasFormaPagoPuntoVenta.remove(jPanelFK_IdTipoRiesgoChequeFormaPagoPuntoVenta);}
		}
		*/
	}

	public void setVisibilidadBusquedasParaTipoInteresTarjeta(Boolean isParaTipoInteresTarjeta){
		//BYDAN_BUSQUEDAS
		/*
		if(!this.conCargarMinimo) {

			Boolean isParaTipoInteresTarjetaNegation=!isParaTipoInteresTarjeta;

			this.isVisibilidadFK_IdAsientoContable=isParaTipoInteresTarjetaNegation;
			if(!this.isVisibilidadFK_IdAsientoContable) {this.jTabbedPaneBusquedasFormaPagoPuntoVenta.remove(jPanelFK_IdAsientoContableFormaPagoPuntoVenta);}

			this.isVisibilidadFK_IdBanco=isParaTipoInteresTarjetaNegation;
			if(!this.isVisibilidadFK_IdBanco) {this.jTabbedPaneBusquedasFormaPagoPuntoVenta.remove(jPanelFK_IdBancoFormaPagoPuntoVenta);}

			this.isVisibilidadFK_IdBancoTarjeta=isParaTipoInteresTarjetaNegation;
			if(!this.isVisibilidadFK_IdBancoTarjeta) {this.jTabbedPaneBusquedasFormaPagoPuntoVenta.remove(jPanelFK_IdBancoTarjetaFormaPagoPuntoVenta);}

			this.isVisibilidadFK_IdConexion=isParaTipoInteresTarjetaNegation;
			if(!this.isVisibilidadFK_IdConexion) {this.jTabbedPaneBusquedasFormaPagoPuntoVenta.remove(jPanelFK_IdConexionFormaPagoPuntoVenta);}

			this.isVisibilidadFK_IdCuentaBancoPunVen=isParaTipoInteresTarjetaNegation;
			if(!this.isVisibilidadFK_IdCuentaBancoPunVen) {this.jTabbedPaneBusquedasFormaPagoPuntoVenta.remove(jPanelFK_IdCuentaBancoPunVenFormaPagoPuntoVenta);}

			this.isVisibilidadFK_IdCuentaContable=isParaTipoInteresTarjetaNegation;
			if(!this.isVisibilidadFK_IdCuentaContable) {this.jTabbedPaneBusquedasFormaPagoPuntoVenta.remove(jPanelFK_IdCuentaContableFormaPagoPuntoVenta);}

			this.isVisibilidadFK_IdFacturaPuntoVenta=isParaTipoInteresTarjetaNegation;
			if(!this.isVisibilidadFK_IdFacturaPuntoVenta) {this.jTabbedPaneBusquedasFormaPagoPuntoVenta.remove(jPanelFK_IdFacturaPuntoVentaFormaPagoPuntoVenta);}

			this.isVisibilidadFK_IdTarjetaCredito=isParaTipoInteresTarjetaNegation;
			if(!this.isVisibilidadFK_IdTarjetaCredito) {this.jTabbedPaneBusquedasFormaPagoPuntoVenta.remove(jPanelFK_IdTarjetaCreditoFormaPagoPuntoVenta);}

			this.isVisibilidadFK_IdTipoFormaPago=isParaTipoInteresTarjetaNegation;
			if(!this.isVisibilidadFK_IdTipoFormaPago) {this.jTabbedPaneBusquedasFormaPagoPuntoVenta.remove(jPanelFK_IdTipoFormaPagoFormaPagoPuntoVenta);}

			this.isVisibilidadFK_IdTipoInteresTarjeta=isParaTipoInteresTarjeta;
			if(!this.isVisibilidadFK_IdTipoInteresTarjeta) {this.jTabbedPaneBusquedasFormaPagoPuntoVenta.remove(jPanelFK_IdTipoInteresTarjetaFormaPagoPuntoVenta);}

			this.isVisibilidadFK_IdTipoPagoTarjeta=isParaTipoInteresTarjetaNegation;
			if(!this.isVisibilidadFK_IdTipoPagoTarjeta) {this.jTabbedPaneBusquedasFormaPagoPuntoVenta.remove(jPanelFK_IdTipoPagoTarjetaFormaPagoPuntoVenta);}

			this.isVisibilidadFK_IdTipoRiesgoCheque=isParaTipoInteresTarjetaNegation;
			if(!this.isVisibilidadFK_IdTipoRiesgoCheque) {this.jTabbedPaneBusquedasFormaPagoPuntoVenta.remove(jPanelFK_IdTipoRiesgoChequeFormaPagoPuntoVenta);}
		}
		*/
	}

	public void setVisibilidadBusquedasParaTipoPagoTarjeta(Boolean isParaTipoPagoTarjeta){
		//BYDAN_BUSQUEDAS
		/*
		if(!this.conCargarMinimo) {

			Boolean isParaTipoPagoTarjetaNegation=!isParaTipoPagoTarjeta;

			this.isVisibilidadFK_IdAsientoContable=isParaTipoPagoTarjetaNegation;
			if(!this.isVisibilidadFK_IdAsientoContable) {this.jTabbedPaneBusquedasFormaPagoPuntoVenta.remove(jPanelFK_IdAsientoContableFormaPagoPuntoVenta);}

			this.isVisibilidadFK_IdBanco=isParaTipoPagoTarjetaNegation;
			if(!this.isVisibilidadFK_IdBanco) {this.jTabbedPaneBusquedasFormaPagoPuntoVenta.remove(jPanelFK_IdBancoFormaPagoPuntoVenta);}

			this.isVisibilidadFK_IdBancoTarjeta=isParaTipoPagoTarjetaNegation;
			if(!this.isVisibilidadFK_IdBancoTarjeta) {this.jTabbedPaneBusquedasFormaPagoPuntoVenta.remove(jPanelFK_IdBancoTarjetaFormaPagoPuntoVenta);}

			this.isVisibilidadFK_IdConexion=isParaTipoPagoTarjetaNegation;
			if(!this.isVisibilidadFK_IdConexion) {this.jTabbedPaneBusquedasFormaPagoPuntoVenta.remove(jPanelFK_IdConexionFormaPagoPuntoVenta);}

			this.isVisibilidadFK_IdCuentaBancoPunVen=isParaTipoPagoTarjetaNegation;
			if(!this.isVisibilidadFK_IdCuentaBancoPunVen) {this.jTabbedPaneBusquedasFormaPagoPuntoVenta.remove(jPanelFK_IdCuentaBancoPunVenFormaPagoPuntoVenta);}

			this.isVisibilidadFK_IdCuentaContable=isParaTipoPagoTarjetaNegation;
			if(!this.isVisibilidadFK_IdCuentaContable) {this.jTabbedPaneBusquedasFormaPagoPuntoVenta.remove(jPanelFK_IdCuentaContableFormaPagoPuntoVenta);}

			this.isVisibilidadFK_IdFacturaPuntoVenta=isParaTipoPagoTarjetaNegation;
			if(!this.isVisibilidadFK_IdFacturaPuntoVenta) {this.jTabbedPaneBusquedasFormaPagoPuntoVenta.remove(jPanelFK_IdFacturaPuntoVentaFormaPagoPuntoVenta);}

			this.isVisibilidadFK_IdTarjetaCredito=isParaTipoPagoTarjetaNegation;
			if(!this.isVisibilidadFK_IdTarjetaCredito) {this.jTabbedPaneBusquedasFormaPagoPuntoVenta.remove(jPanelFK_IdTarjetaCreditoFormaPagoPuntoVenta);}

			this.isVisibilidadFK_IdTipoFormaPago=isParaTipoPagoTarjetaNegation;
			if(!this.isVisibilidadFK_IdTipoFormaPago) {this.jTabbedPaneBusquedasFormaPagoPuntoVenta.remove(jPanelFK_IdTipoFormaPagoFormaPagoPuntoVenta);}

			this.isVisibilidadFK_IdTipoInteresTarjeta=isParaTipoPagoTarjetaNegation;
			if(!this.isVisibilidadFK_IdTipoInteresTarjeta) {this.jTabbedPaneBusquedasFormaPagoPuntoVenta.remove(jPanelFK_IdTipoInteresTarjetaFormaPagoPuntoVenta);}

			this.isVisibilidadFK_IdTipoPagoTarjeta=isParaTipoPagoTarjeta;
			if(!this.isVisibilidadFK_IdTipoPagoTarjeta) {this.jTabbedPaneBusquedasFormaPagoPuntoVenta.remove(jPanelFK_IdTipoPagoTarjetaFormaPagoPuntoVenta);}

			this.isVisibilidadFK_IdTipoRiesgoCheque=isParaTipoPagoTarjetaNegation;
			if(!this.isVisibilidadFK_IdTipoRiesgoCheque) {this.jTabbedPaneBusquedasFormaPagoPuntoVenta.remove(jPanelFK_IdTipoRiesgoChequeFormaPagoPuntoVenta);}
		}
		*/
	}

	public void setVisibilidadBusquedasParaConexion(Boolean isParaConexion){
		//BYDAN_BUSQUEDAS
		/*
		if(!this.conCargarMinimo) {

			Boolean isParaConexionNegation=!isParaConexion;

			this.isVisibilidadFK_IdAsientoContable=isParaConexionNegation;
			if(!this.isVisibilidadFK_IdAsientoContable) {this.jTabbedPaneBusquedasFormaPagoPuntoVenta.remove(jPanelFK_IdAsientoContableFormaPagoPuntoVenta);}

			this.isVisibilidadFK_IdBanco=isParaConexionNegation;
			if(!this.isVisibilidadFK_IdBanco) {this.jTabbedPaneBusquedasFormaPagoPuntoVenta.remove(jPanelFK_IdBancoFormaPagoPuntoVenta);}

			this.isVisibilidadFK_IdBancoTarjeta=isParaConexionNegation;
			if(!this.isVisibilidadFK_IdBancoTarjeta) {this.jTabbedPaneBusquedasFormaPagoPuntoVenta.remove(jPanelFK_IdBancoTarjetaFormaPagoPuntoVenta);}

			this.isVisibilidadFK_IdConexion=isParaConexion;
			if(!this.isVisibilidadFK_IdConexion) {this.jTabbedPaneBusquedasFormaPagoPuntoVenta.remove(jPanelFK_IdConexionFormaPagoPuntoVenta);}

			this.isVisibilidadFK_IdCuentaBancoPunVen=isParaConexionNegation;
			if(!this.isVisibilidadFK_IdCuentaBancoPunVen) {this.jTabbedPaneBusquedasFormaPagoPuntoVenta.remove(jPanelFK_IdCuentaBancoPunVenFormaPagoPuntoVenta);}

			this.isVisibilidadFK_IdCuentaContable=isParaConexionNegation;
			if(!this.isVisibilidadFK_IdCuentaContable) {this.jTabbedPaneBusquedasFormaPagoPuntoVenta.remove(jPanelFK_IdCuentaContableFormaPagoPuntoVenta);}

			this.isVisibilidadFK_IdFacturaPuntoVenta=isParaConexionNegation;
			if(!this.isVisibilidadFK_IdFacturaPuntoVenta) {this.jTabbedPaneBusquedasFormaPagoPuntoVenta.remove(jPanelFK_IdFacturaPuntoVentaFormaPagoPuntoVenta);}

			this.isVisibilidadFK_IdTarjetaCredito=isParaConexionNegation;
			if(!this.isVisibilidadFK_IdTarjetaCredito) {this.jTabbedPaneBusquedasFormaPagoPuntoVenta.remove(jPanelFK_IdTarjetaCreditoFormaPagoPuntoVenta);}

			this.isVisibilidadFK_IdTipoFormaPago=isParaConexionNegation;
			if(!this.isVisibilidadFK_IdTipoFormaPago) {this.jTabbedPaneBusquedasFormaPagoPuntoVenta.remove(jPanelFK_IdTipoFormaPagoFormaPagoPuntoVenta);}

			this.isVisibilidadFK_IdTipoInteresTarjeta=isParaConexionNegation;
			if(!this.isVisibilidadFK_IdTipoInteresTarjeta) {this.jTabbedPaneBusquedasFormaPagoPuntoVenta.remove(jPanelFK_IdTipoInteresTarjetaFormaPagoPuntoVenta);}

			this.isVisibilidadFK_IdTipoPagoTarjeta=isParaConexionNegation;
			if(!this.isVisibilidadFK_IdTipoPagoTarjeta) {this.jTabbedPaneBusquedasFormaPagoPuntoVenta.remove(jPanelFK_IdTipoPagoTarjetaFormaPagoPuntoVenta);}

			this.isVisibilidadFK_IdTipoRiesgoCheque=isParaConexionNegation;
			if(!this.isVisibilidadFK_IdTipoRiesgoCheque) {this.jTabbedPaneBusquedasFormaPagoPuntoVenta.remove(jPanelFK_IdTipoRiesgoChequeFormaPagoPuntoVenta);}
		}
		*/
	}

	public void setVisibilidadBusquedasParaMes(Boolean isParaMes){
		//BYDAN_BUSQUEDAS
		/*
		if(!this.conCargarMinimo) {

			Boolean isParaMesNegation=!isParaMes;

			this.isVisibilidadFK_IdAsientoContable=isParaMesNegation;
			if(!this.isVisibilidadFK_IdAsientoContable) {this.jTabbedPaneBusquedasFormaPagoPuntoVenta.remove(jPanelFK_IdAsientoContableFormaPagoPuntoVenta);}

			this.isVisibilidadFK_IdBanco=isParaMesNegation;
			if(!this.isVisibilidadFK_IdBanco) {this.jTabbedPaneBusquedasFormaPagoPuntoVenta.remove(jPanelFK_IdBancoFormaPagoPuntoVenta);}

			this.isVisibilidadFK_IdBancoTarjeta=isParaMesNegation;
			if(!this.isVisibilidadFK_IdBancoTarjeta) {this.jTabbedPaneBusquedasFormaPagoPuntoVenta.remove(jPanelFK_IdBancoTarjetaFormaPagoPuntoVenta);}

			this.isVisibilidadFK_IdConexion=isParaMesNegation;
			if(!this.isVisibilidadFK_IdConexion) {this.jTabbedPaneBusquedasFormaPagoPuntoVenta.remove(jPanelFK_IdConexionFormaPagoPuntoVenta);}

			this.isVisibilidadFK_IdCuentaBancoPunVen=isParaMesNegation;
			if(!this.isVisibilidadFK_IdCuentaBancoPunVen) {this.jTabbedPaneBusquedasFormaPagoPuntoVenta.remove(jPanelFK_IdCuentaBancoPunVenFormaPagoPuntoVenta);}

			this.isVisibilidadFK_IdCuentaContable=isParaMesNegation;
			if(!this.isVisibilidadFK_IdCuentaContable) {this.jTabbedPaneBusquedasFormaPagoPuntoVenta.remove(jPanelFK_IdCuentaContableFormaPagoPuntoVenta);}

			this.isVisibilidadFK_IdFacturaPuntoVenta=isParaMesNegation;
			if(!this.isVisibilidadFK_IdFacturaPuntoVenta) {this.jTabbedPaneBusquedasFormaPagoPuntoVenta.remove(jPanelFK_IdFacturaPuntoVentaFormaPagoPuntoVenta);}

			this.isVisibilidadFK_IdTarjetaCredito=isParaMesNegation;
			if(!this.isVisibilidadFK_IdTarjetaCredito) {this.jTabbedPaneBusquedasFormaPagoPuntoVenta.remove(jPanelFK_IdTarjetaCreditoFormaPagoPuntoVenta);}

			this.isVisibilidadFK_IdTipoFormaPago=isParaMesNegation;
			if(!this.isVisibilidadFK_IdTipoFormaPago) {this.jTabbedPaneBusquedasFormaPagoPuntoVenta.remove(jPanelFK_IdTipoFormaPagoFormaPagoPuntoVenta);}

			this.isVisibilidadFK_IdTipoInteresTarjeta=isParaMesNegation;
			if(!this.isVisibilidadFK_IdTipoInteresTarjeta) {this.jTabbedPaneBusquedasFormaPagoPuntoVenta.remove(jPanelFK_IdTipoInteresTarjetaFormaPagoPuntoVenta);}

			this.isVisibilidadFK_IdTipoPagoTarjeta=isParaMesNegation;
			if(!this.isVisibilidadFK_IdTipoPagoTarjeta) {this.jTabbedPaneBusquedasFormaPagoPuntoVenta.remove(jPanelFK_IdTipoPagoTarjetaFormaPagoPuntoVenta);}

			this.isVisibilidadFK_IdTipoRiesgoCheque=isParaMesNegation;
			if(!this.isVisibilidadFK_IdTipoRiesgoCheque) {this.jTabbedPaneBusquedasFormaPagoPuntoVenta.remove(jPanelFK_IdTipoRiesgoChequeFormaPagoPuntoVenta);}
		}
		*/
	}

	public void setVisibilidadBusquedasParaAnio(Boolean isParaAnio){
		//BYDAN_BUSQUEDAS
		/*
		if(!this.conCargarMinimo) {

			Boolean isParaAnioNegation=!isParaAnio;

			this.isVisibilidadFK_IdAsientoContable=isParaAnioNegation;
			if(!this.isVisibilidadFK_IdAsientoContable) {this.jTabbedPaneBusquedasFormaPagoPuntoVenta.remove(jPanelFK_IdAsientoContableFormaPagoPuntoVenta);}

			this.isVisibilidadFK_IdBanco=isParaAnioNegation;
			if(!this.isVisibilidadFK_IdBanco) {this.jTabbedPaneBusquedasFormaPagoPuntoVenta.remove(jPanelFK_IdBancoFormaPagoPuntoVenta);}

			this.isVisibilidadFK_IdBancoTarjeta=isParaAnioNegation;
			if(!this.isVisibilidadFK_IdBancoTarjeta) {this.jTabbedPaneBusquedasFormaPagoPuntoVenta.remove(jPanelFK_IdBancoTarjetaFormaPagoPuntoVenta);}

			this.isVisibilidadFK_IdConexion=isParaAnioNegation;
			if(!this.isVisibilidadFK_IdConexion) {this.jTabbedPaneBusquedasFormaPagoPuntoVenta.remove(jPanelFK_IdConexionFormaPagoPuntoVenta);}

			this.isVisibilidadFK_IdCuentaBancoPunVen=isParaAnioNegation;
			if(!this.isVisibilidadFK_IdCuentaBancoPunVen) {this.jTabbedPaneBusquedasFormaPagoPuntoVenta.remove(jPanelFK_IdCuentaBancoPunVenFormaPagoPuntoVenta);}

			this.isVisibilidadFK_IdCuentaContable=isParaAnioNegation;
			if(!this.isVisibilidadFK_IdCuentaContable) {this.jTabbedPaneBusquedasFormaPagoPuntoVenta.remove(jPanelFK_IdCuentaContableFormaPagoPuntoVenta);}

			this.isVisibilidadFK_IdFacturaPuntoVenta=isParaAnioNegation;
			if(!this.isVisibilidadFK_IdFacturaPuntoVenta) {this.jTabbedPaneBusquedasFormaPagoPuntoVenta.remove(jPanelFK_IdFacturaPuntoVentaFormaPagoPuntoVenta);}

			this.isVisibilidadFK_IdTarjetaCredito=isParaAnioNegation;
			if(!this.isVisibilidadFK_IdTarjetaCredito) {this.jTabbedPaneBusquedasFormaPagoPuntoVenta.remove(jPanelFK_IdTarjetaCreditoFormaPagoPuntoVenta);}

			this.isVisibilidadFK_IdTipoFormaPago=isParaAnioNegation;
			if(!this.isVisibilidadFK_IdTipoFormaPago) {this.jTabbedPaneBusquedasFormaPagoPuntoVenta.remove(jPanelFK_IdTipoFormaPagoFormaPagoPuntoVenta);}

			this.isVisibilidadFK_IdTipoInteresTarjeta=isParaAnioNegation;
			if(!this.isVisibilidadFK_IdTipoInteresTarjeta) {this.jTabbedPaneBusquedasFormaPagoPuntoVenta.remove(jPanelFK_IdTipoInteresTarjetaFormaPagoPuntoVenta);}

			this.isVisibilidadFK_IdTipoPagoTarjeta=isParaAnioNegation;
			if(!this.isVisibilidadFK_IdTipoPagoTarjeta) {this.jTabbedPaneBusquedasFormaPagoPuntoVenta.remove(jPanelFK_IdTipoPagoTarjetaFormaPagoPuntoVenta);}

			this.isVisibilidadFK_IdTipoRiesgoCheque=isParaAnioNegation;
			if(!this.isVisibilidadFK_IdTipoRiesgoCheque) {this.jTabbedPaneBusquedasFormaPagoPuntoVenta.remove(jPanelFK_IdTipoRiesgoChequeFormaPagoPuntoVenta);}
		}
		*/
	}

	public void setVisibilidadBusquedasParaCuentaContable(Boolean isParaCuentaContable){
		//BYDAN_BUSQUEDAS
		/*
		if(!this.conCargarMinimo) {

			Boolean isParaCuentaContableNegation=!isParaCuentaContable;

			this.isVisibilidadFK_IdAsientoContable=isParaCuentaContableNegation;
			if(!this.isVisibilidadFK_IdAsientoContable) {this.jTabbedPaneBusquedasFormaPagoPuntoVenta.remove(jPanelFK_IdAsientoContableFormaPagoPuntoVenta);}

			this.isVisibilidadFK_IdBanco=isParaCuentaContableNegation;
			if(!this.isVisibilidadFK_IdBanco) {this.jTabbedPaneBusquedasFormaPagoPuntoVenta.remove(jPanelFK_IdBancoFormaPagoPuntoVenta);}

			this.isVisibilidadFK_IdBancoTarjeta=isParaCuentaContableNegation;
			if(!this.isVisibilidadFK_IdBancoTarjeta) {this.jTabbedPaneBusquedasFormaPagoPuntoVenta.remove(jPanelFK_IdBancoTarjetaFormaPagoPuntoVenta);}

			this.isVisibilidadFK_IdConexion=isParaCuentaContableNegation;
			if(!this.isVisibilidadFK_IdConexion) {this.jTabbedPaneBusquedasFormaPagoPuntoVenta.remove(jPanelFK_IdConexionFormaPagoPuntoVenta);}

			this.isVisibilidadFK_IdCuentaBancoPunVen=isParaCuentaContableNegation;
			if(!this.isVisibilidadFK_IdCuentaBancoPunVen) {this.jTabbedPaneBusquedasFormaPagoPuntoVenta.remove(jPanelFK_IdCuentaBancoPunVenFormaPagoPuntoVenta);}

			this.isVisibilidadFK_IdCuentaContable=isParaCuentaContable;
			if(!this.isVisibilidadFK_IdCuentaContable) {this.jTabbedPaneBusquedasFormaPagoPuntoVenta.remove(jPanelFK_IdCuentaContableFormaPagoPuntoVenta);}

			this.isVisibilidadFK_IdFacturaPuntoVenta=isParaCuentaContableNegation;
			if(!this.isVisibilidadFK_IdFacturaPuntoVenta) {this.jTabbedPaneBusquedasFormaPagoPuntoVenta.remove(jPanelFK_IdFacturaPuntoVentaFormaPagoPuntoVenta);}

			this.isVisibilidadFK_IdTarjetaCredito=isParaCuentaContableNegation;
			if(!this.isVisibilidadFK_IdTarjetaCredito) {this.jTabbedPaneBusquedasFormaPagoPuntoVenta.remove(jPanelFK_IdTarjetaCreditoFormaPagoPuntoVenta);}

			this.isVisibilidadFK_IdTipoFormaPago=isParaCuentaContableNegation;
			if(!this.isVisibilidadFK_IdTipoFormaPago) {this.jTabbedPaneBusquedasFormaPagoPuntoVenta.remove(jPanelFK_IdTipoFormaPagoFormaPagoPuntoVenta);}

			this.isVisibilidadFK_IdTipoInteresTarjeta=isParaCuentaContableNegation;
			if(!this.isVisibilidadFK_IdTipoInteresTarjeta) {this.jTabbedPaneBusquedasFormaPagoPuntoVenta.remove(jPanelFK_IdTipoInteresTarjetaFormaPagoPuntoVenta);}

			this.isVisibilidadFK_IdTipoPagoTarjeta=isParaCuentaContableNegation;
			if(!this.isVisibilidadFK_IdTipoPagoTarjeta) {this.jTabbedPaneBusquedasFormaPagoPuntoVenta.remove(jPanelFK_IdTipoPagoTarjetaFormaPagoPuntoVenta);}

			this.isVisibilidadFK_IdTipoRiesgoCheque=isParaCuentaContableNegation;
			if(!this.isVisibilidadFK_IdTipoRiesgoCheque) {this.jTabbedPaneBusquedasFormaPagoPuntoVenta.remove(jPanelFK_IdTipoRiesgoChequeFormaPagoPuntoVenta);}
		}
		*/
	}

	public void setVisibilidadBusquedasParaAsientoContable(Boolean isParaAsientoContable){
		//BYDAN_BUSQUEDAS
		/*
		if(!this.conCargarMinimo) {

			Boolean isParaAsientoContableNegation=!isParaAsientoContable;

			this.isVisibilidadFK_IdAsientoContable=isParaAsientoContable;
			if(!this.isVisibilidadFK_IdAsientoContable) {this.jTabbedPaneBusquedasFormaPagoPuntoVenta.remove(jPanelFK_IdAsientoContableFormaPagoPuntoVenta);}

			this.isVisibilidadFK_IdBanco=isParaAsientoContableNegation;
			if(!this.isVisibilidadFK_IdBanco) {this.jTabbedPaneBusquedasFormaPagoPuntoVenta.remove(jPanelFK_IdBancoFormaPagoPuntoVenta);}

			this.isVisibilidadFK_IdBancoTarjeta=isParaAsientoContableNegation;
			if(!this.isVisibilidadFK_IdBancoTarjeta) {this.jTabbedPaneBusquedasFormaPagoPuntoVenta.remove(jPanelFK_IdBancoTarjetaFormaPagoPuntoVenta);}

			this.isVisibilidadFK_IdConexion=isParaAsientoContableNegation;
			if(!this.isVisibilidadFK_IdConexion) {this.jTabbedPaneBusquedasFormaPagoPuntoVenta.remove(jPanelFK_IdConexionFormaPagoPuntoVenta);}

			this.isVisibilidadFK_IdCuentaBancoPunVen=isParaAsientoContableNegation;
			if(!this.isVisibilidadFK_IdCuentaBancoPunVen) {this.jTabbedPaneBusquedasFormaPagoPuntoVenta.remove(jPanelFK_IdCuentaBancoPunVenFormaPagoPuntoVenta);}

			this.isVisibilidadFK_IdCuentaContable=isParaAsientoContableNegation;
			if(!this.isVisibilidadFK_IdCuentaContable) {this.jTabbedPaneBusquedasFormaPagoPuntoVenta.remove(jPanelFK_IdCuentaContableFormaPagoPuntoVenta);}

			this.isVisibilidadFK_IdFacturaPuntoVenta=isParaAsientoContableNegation;
			if(!this.isVisibilidadFK_IdFacturaPuntoVenta) {this.jTabbedPaneBusquedasFormaPagoPuntoVenta.remove(jPanelFK_IdFacturaPuntoVentaFormaPagoPuntoVenta);}

			this.isVisibilidadFK_IdTarjetaCredito=isParaAsientoContableNegation;
			if(!this.isVisibilidadFK_IdTarjetaCredito) {this.jTabbedPaneBusquedasFormaPagoPuntoVenta.remove(jPanelFK_IdTarjetaCreditoFormaPagoPuntoVenta);}

			this.isVisibilidadFK_IdTipoFormaPago=isParaAsientoContableNegation;
			if(!this.isVisibilidadFK_IdTipoFormaPago) {this.jTabbedPaneBusquedasFormaPagoPuntoVenta.remove(jPanelFK_IdTipoFormaPagoFormaPagoPuntoVenta);}

			this.isVisibilidadFK_IdTipoInteresTarjeta=isParaAsientoContableNegation;
			if(!this.isVisibilidadFK_IdTipoInteresTarjeta) {this.jTabbedPaneBusquedasFormaPagoPuntoVenta.remove(jPanelFK_IdTipoInteresTarjetaFormaPagoPuntoVenta);}

			this.isVisibilidadFK_IdTipoPagoTarjeta=isParaAsientoContableNegation;
			if(!this.isVisibilidadFK_IdTipoPagoTarjeta) {this.jTabbedPaneBusquedasFormaPagoPuntoVenta.remove(jPanelFK_IdTipoPagoTarjetaFormaPagoPuntoVenta);}

			this.isVisibilidadFK_IdTipoRiesgoCheque=isParaAsientoContableNegation;
			if(!this.isVisibilidadFK_IdTipoRiesgoCheque) {this.jTabbedPaneBusquedasFormaPagoPuntoVenta.remove(jPanelFK_IdTipoRiesgoChequeFormaPagoPuntoVenta);}
		}
		*/
	}
	
	
	
	

	public String registrarSesionFormaPagoPuntoVentaParaBusquedaCuentaContables() throws Exception {
		Boolean isPaginaPopupCuentaContable=false;

		try {

			if(formapagopuntoventaSessionBean==null) {
				formapagopuntoventaSessionBean=new FormaPagoPuntoVentaSessionBean();
			}

			if(cuentacontableSessionBean==null) {
				cuentacontableSessionBean=new CuentaContableSessionBean();
			}

			cuentacontableSessionBean.setsPathNavegacionActual(formapagopuntoventaSessionBean.getsPathNavegacionActual()+Constantes.SHTMLFLECHA+CuentaContableConstantesFunciones.SCLASSWEBTITULO);
			cuentacontableSessionBean.setisPermiteRecargarInformacion(false);
			cuentacontableSessionBean.setisPaginaPopup(true);
			isPaginaPopupCuentaContable=cuentacontableSessionBean.getisPaginaPopup();
			cuentacontableSessionBean.setisPaginaPopup(false);
			cuentacontableSessionBean.setEstaModoBusqueda(true);
			cuentacontableSessionBean.setsFuncionBusquedaRapida("window.opener.formapagopuntoventaFuncionGeneral.setCombosCodigoDesdeBusquedaid_cuenta_contable(TO_REPLACE);");
			cuentacontableSessionBean.setisPermiteNavegacionHaciaForeignKeyDesdeCuentaContable(true);
			cuentacontableSessionBean.setsNombrePaginaNavegacionHaciaForeignKeyDesdeCuentaContable(FormaPagoPuntoVentaConstantesFunciones.SNOMBREOPCION);
			//cuentacontableSessionBean.setisBusquedaDesdeForeignKeySesionFormaPagoPuntoVenta(true);
			//cuentacontableSessionBean.setlidFormaPagoPuntoVentaActual(this.idFormaPagoPuntoVentaActual);

			formapagopuntoventaSessionBean.setisBusquedaDesdeForeignKeySesionForeignKeyFormaPagoPuntoVenta(true);
			formapagopuntoventaSessionBean.setlIdFormaPagoPuntoVentaActualForeignKey(this.idFormaPagoPuntoVentaActual);

			String strPagina=Constantes.SNONE;
			SistemaLogicAdditional sistemaLogicAdditional=new SistemaLogicAdditional();

			guardarDatosBusquedaSession();

		} catch(Exception e) {
			FuncionesSwing.manageException(this, e,logger);
		}
			return "";
	}

	public String registrarSesionFormaPagoPuntoVentaParaBusquedaAsientoContables() throws Exception {
		Boolean isPaginaPopupAsientoContable=false;

		try {

			if(formapagopuntoventaSessionBean==null) {
				formapagopuntoventaSessionBean=new FormaPagoPuntoVentaSessionBean();
			}

			if(asientocontableSessionBean==null) {
				asientocontableSessionBean=new AsientoContableSessionBean();
			}

			asientocontableSessionBean.setsPathNavegacionActual(formapagopuntoventaSessionBean.getsPathNavegacionActual()+Constantes.SHTMLFLECHA+AsientoContableConstantesFunciones.SCLASSWEBTITULO);
			asientocontableSessionBean.setisPermiteRecargarInformacion(false);
			asientocontableSessionBean.setisPaginaPopup(true);
			isPaginaPopupAsientoContable=asientocontableSessionBean.getisPaginaPopup();
			asientocontableSessionBean.setisPaginaPopup(false);
			asientocontableSessionBean.setEstaModoBusqueda(true);
			asientocontableSessionBean.setsFuncionBusquedaRapida("window.opener.formapagopuntoventaFuncionGeneral.setCombosCodigoDesdeBusquedaid_asiento_contable(TO_REPLACE);");
			asientocontableSessionBean.setisPermiteNavegacionHaciaForeignKeyDesdeAsientoContable(true);
			asientocontableSessionBean.setsNombrePaginaNavegacionHaciaForeignKeyDesdeAsientoContable(FormaPagoPuntoVentaConstantesFunciones.SNOMBREOPCION);
			//asientocontableSessionBean.setisBusquedaDesdeForeignKeySesionFormaPagoPuntoVenta(true);
			//asientocontableSessionBean.setlidFormaPagoPuntoVentaActual(this.idFormaPagoPuntoVentaActual);

			formapagopuntoventaSessionBean.setisBusquedaDesdeForeignKeySesionForeignKeyFormaPagoPuntoVenta(true);
			formapagopuntoventaSessionBean.setlIdFormaPagoPuntoVentaActualForeignKey(this.idFormaPagoPuntoVentaActual);

			String strPagina=Constantes.SNONE;
			SistemaLogicAdditional sistemaLogicAdditional=new SistemaLogicAdditional();

			guardarDatosBusquedaSession();

		} catch(Exception e) {
			FuncionesSwing.manageException(this, e,logger);
		}
			return "";
	}
	
	
	public void guardarDatosBusquedaSession() throws Exception {
		
		//FormaPagoPuntoVentaSessionBean formapagopuntoventaSessionBean=new FormaPagoPuntoVentaSessionBean();
		
		if(this.formapagopuntoventaSessionBean==null) {
			this.formapagopuntoventaSessionBean=new FormaPagoPuntoVentaSessionBean();
		}
		
		this.formapagopuntoventaSessionBean.setsUltimaBusquedaFormaPagoPuntoVenta(this.getsAccionBusqueda());
		this.formapagopuntoventaSessionBean.setiNumeroPaginacion(this.getiNumeroPaginacion());
		this.formapagopuntoventaSessionBean.setiNumeroPaginacionPagina(this.getiNumeroPaginacionPagina());
		
		if(this.getsAccionBusqueda().equals("Todos")) {
			;
		}
		

		else if(this.getsAccionBusqueda().equals("FK_IdAsientoContable")) {
			formapagopuntoventaSessionBean.setid_asiento_contable(this.getid_asiento_contableFK_IdAsientoContable());	
		}
		else if(this.getsAccionBusqueda().equals("FK_IdBanco")) {
			formapagopuntoventaSessionBean.setid_banco(this.getid_bancoFK_IdBanco());	
		}
		else if(this.getsAccionBusqueda().equals("FK_IdBancoTarjeta")) {
			formapagopuntoventaSessionBean.setid_banco_tarjeta(this.getid_banco_tarjetaFK_IdBancoTarjeta());	
		}
		else if(this.getsAccionBusqueda().equals("FK_IdConexion")) {
			formapagopuntoventaSessionBean.setid_conexion(this.getid_conexionFK_IdConexion());	
		}
		else if(this.getsAccionBusqueda().equals("FK_IdCuentaBancoPunVen")) {
			formapagopuntoventaSessionBean.setid_cuenta_banco_pun_ven(this.getid_cuenta_banco_pun_venFK_IdCuentaBancoPunVen());	
		}
		else if(this.getsAccionBusqueda().equals("FK_IdCuentaContable")) {
			formapagopuntoventaSessionBean.setid_cuenta_contable(this.getid_cuenta_contableFK_IdCuentaContable());	
		}
		else if(this.getsAccionBusqueda().equals("FK_IdEjercicio")) {
			formapagopuntoventaSessionBean.setid_ejercicio(this.getid_ejercicioFK_IdEjercicio());	
		}
		else if(this.getsAccionBusqueda().equals("FK_IdEmpresa")) {
			formapagopuntoventaSessionBean.setid_empresa(this.getid_empresaFK_IdEmpresa());	
		}
		else if(this.getsAccionBusqueda().equals("FK_IdFacturaPuntoVenta")) {
			formapagopuntoventaSessionBean.setid_factura_punto_venta(this.getid_factura_punto_ventaFK_IdFacturaPuntoVenta());	
		}
		else if(this.getsAccionBusqueda().equals("FK_IdPeriodo")) {
			formapagopuntoventaSessionBean.setid_periodo(this.getid_periodoFK_IdPeriodo());	
		}
		else if(this.getsAccionBusqueda().equals("FK_IdSucursal")) {
			formapagopuntoventaSessionBean.setid_sucursal(this.getid_sucursalFK_IdSucursal());	
		}
		else if(this.getsAccionBusqueda().equals("FK_IdTarjetaCredito")) {
			formapagopuntoventaSessionBean.setid_tarjeta_credito(this.getid_tarjeta_creditoFK_IdTarjetaCredito());	
		}
		else if(this.getsAccionBusqueda().equals("FK_IdTipoFormaPago")) {
			formapagopuntoventaSessionBean.setid_tipo_forma_pago(this.getid_tipo_forma_pagoFK_IdTipoFormaPago());	
		}
		else if(this.getsAccionBusqueda().equals("FK_IdTipoInteresTarjeta")) {
			formapagopuntoventaSessionBean.setid_tipo_interes_tarjeta(this.getid_tipo_interes_tarjetaFK_IdTipoInteresTarjeta());	
		}
		else if(this.getsAccionBusqueda().equals("FK_IdTipoPagoTarjeta")) {
			formapagopuntoventaSessionBean.setid_tipo_pago_tarjeta(this.getid_tipo_pago_tarjetaFK_IdTipoPagoTarjeta());	
		}
		else if(this.getsAccionBusqueda().equals("FK_IdTipoRiesgoCheque")) {
			formapagopuntoventaSessionBean.setid_tipo_riesgo_cheque(this.getid_tipo_riesgo_chequeFK_IdTipoRiesgoCheque());	
		}
		
	}
	
	public void traerDatosBusquedaDesdeSession() throws Exception {
		//FormaPagoPuntoVentaSessionBean formapagopuntoventaSessionBean=new FormaPagoPuntoVentaSessionBean();
		
		if(this.formapagopuntoventaSessionBean==null) {
			this.formapagopuntoventaSessionBean=new FormaPagoPuntoVentaSessionBean();
		}
		
		if(this.formapagopuntoventaSessionBean.getsUltimaBusquedaFormaPagoPuntoVenta()!=null&&!this.formapagopuntoventaSessionBean.getsUltimaBusquedaFormaPagoPuntoVenta().equals("")) {
			this.setsAccionBusqueda(formapagopuntoventaSessionBean.getsUltimaBusquedaFormaPagoPuntoVenta());
			this.setiNumeroPaginacion(formapagopuntoventaSessionBean.getiNumeroPaginacion());
			this.setiNumeroPaginacionPagina(formapagopuntoventaSessionBean.getiNumeroPaginacionPagina());		
				
			if(this.getsAccionBusqueda().equals("Todos")) {
				;
			}
			

			 else if(this.getsAccionBusqueda().equals("FK_IdAsientoContable")) {
				this.setid_asiento_contableFK_IdAsientoContable(formapagopuntoventaSessionBean.getid_asiento_contable());
				formapagopuntoventaSessionBean.setid_asiento_contable(null);
			}
			 else if(this.getsAccionBusqueda().equals("FK_IdBanco")) {
				this.setid_bancoFK_IdBanco(formapagopuntoventaSessionBean.getid_banco());
				formapagopuntoventaSessionBean.setid_banco(null);
			}
			 else if(this.getsAccionBusqueda().equals("FK_IdBancoTarjeta")) {
				this.setid_banco_tarjetaFK_IdBancoTarjeta(formapagopuntoventaSessionBean.getid_banco_tarjeta());
				formapagopuntoventaSessionBean.setid_banco_tarjeta(null);
			}
			 else if(this.getsAccionBusqueda().equals("FK_IdConexion")) {
				this.setid_conexionFK_IdConexion(formapagopuntoventaSessionBean.getid_conexion());
				formapagopuntoventaSessionBean.setid_conexion(null);
			}
			 else if(this.getsAccionBusqueda().equals("FK_IdCuentaBancoPunVen")) {
				this.setid_cuenta_banco_pun_venFK_IdCuentaBancoPunVen(formapagopuntoventaSessionBean.getid_cuenta_banco_pun_ven());
				formapagopuntoventaSessionBean.setid_cuenta_banco_pun_ven(null);
			}
			 else if(this.getsAccionBusqueda().equals("FK_IdCuentaContable")) {
				this.setid_cuenta_contableFK_IdCuentaContable(formapagopuntoventaSessionBean.getid_cuenta_contable());
				formapagopuntoventaSessionBean.setid_cuenta_contable(null);
			}
			 else if(this.getsAccionBusqueda().equals("FK_IdEjercicio")) {
				this.setid_ejercicioFK_IdEjercicio(formapagopuntoventaSessionBean.getid_ejercicio());
				formapagopuntoventaSessionBean.setid_ejercicio(-1L);
			}
			 else if(this.getsAccionBusqueda().equals("FK_IdEmpresa")) {
				this.setid_empresaFK_IdEmpresa(formapagopuntoventaSessionBean.getid_empresa());
				formapagopuntoventaSessionBean.setid_empresa(-1L);
			}
			 else if(this.getsAccionBusqueda().equals("FK_IdFacturaPuntoVenta")) {
				this.setid_factura_punto_ventaFK_IdFacturaPuntoVenta(formapagopuntoventaSessionBean.getid_factura_punto_venta());
				formapagopuntoventaSessionBean.setid_factura_punto_venta(-1L);
			}
			 else if(this.getsAccionBusqueda().equals("FK_IdPeriodo")) {
				this.setid_periodoFK_IdPeriodo(formapagopuntoventaSessionBean.getid_periodo());
				formapagopuntoventaSessionBean.setid_periodo(-1L);
			}
			 else if(this.getsAccionBusqueda().equals("FK_IdSucursal")) {
				this.setid_sucursalFK_IdSucursal(formapagopuntoventaSessionBean.getid_sucursal());
				formapagopuntoventaSessionBean.setid_sucursal(-1L);
			}
			 else if(this.getsAccionBusqueda().equals("FK_IdTarjetaCredito")) {
				this.setid_tarjeta_creditoFK_IdTarjetaCredito(formapagopuntoventaSessionBean.getid_tarjeta_credito());
				formapagopuntoventaSessionBean.setid_tarjeta_credito(null);
			}
			 else if(this.getsAccionBusqueda().equals("FK_IdTipoFormaPago")) {
				this.setid_tipo_forma_pagoFK_IdTipoFormaPago(formapagopuntoventaSessionBean.getid_tipo_forma_pago());
				formapagopuntoventaSessionBean.setid_tipo_forma_pago(-1L);
			}
			 else if(this.getsAccionBusqueda().equals("FK_IdTipoInteresTarjeta")) {
				this.setid_tipo_interes_tarjetaFK_IdTipoInteresTarjeta(formapagopuntoventaSessionBean.getid_tipo_interes_tarjeta());
				formapagopuntoventaSessionBean.setid_tipo_interes_tarjeta(null);
			}
			 else if(this.getsAccionBusqueda().equals("FK_IdTipoPagoTarjeta")) {
				this.setid_tipo_pago_tarjetaFK_IdTipoPagoTarjeta(formapagopuntoventaSessionBean.getid_tipo_pago_tarjeta());
				formapagopuntoventaSessionBean.setid_tipo_pago_tarjeta(null);
			}
			 else if(this.getsAccionBusqueda().equals("FK_IdTipoRiesgoCheque")) {
				this.setid_tipo_riesgo_chequeFK_IdTipoRiesgoCheque(formapagopuntoventaSessionBean.getid_tipo_riesgo_cheque());
				formapagopuntoventaSessionBean.setid_tipo_riesgo_cheque(null);
			}
		}
		
		this.formapagopuntoventaSessionBean.setsUltimaBusquedaFormaPagoPuntoVenta("");
		this.formapagopuntoventaSessionBean.setiNumeroPaginacion(FormaPagoPuntoVentaConstantesFunciones.INUMEROPAGINACION);
		this.formapagopuntoventaSessionBean.setiNumeroPaginacionPagina(0);
		
	}
	
	public void procesoActualizarFilaTotales(Boolean esCampoValor,String sTipo) {
		try {
			this.actualizarFilaTotales();
				
			this.traerValoresTablaTotales();
			
			this.inicializarActualizarBindingTablaFormaPagoPuntoVenta(false);
			
			
			
			
		} catch (Exception e) {
			e.printStackTrace();
		}
	}
	
	
	public void updateBusquedasFormularioFormaPagoPuntoVenta() {
		this.updateBorderResaltarBusquedasFormularioFormaPagoPuntoVenta();
		this.updateVisibilidadBusquedasFormularioFormaPagoPuntoVenta();
		this.updateHabilitarBusquedasFormularioFormaPagoPuntoVenta();
	}
	
	public void updateBorderResaltarBusquedasFormularioFormaPagoPuntoVenta() {					
	//BYDAN_BUSQUEDAS
	/*	
	int index=0;
		
	if(this.jTabbedPaneBusquedasFormaPagoPuntoVenta.getComponents().length>0) {
	

		if(this.formapagopuntoventaConstantesFunciones.resaltarFK_IdAsientoContableFormaPagoPuntoVenta!=null) {
			index= this.jTabbedPaneBusquedasFormaPagoPuntoVenta.indexOfComponent(this.jPanelFK_IdAsientoContableFormaPagoPuntoVenta);
			if(index>-1) {
				JPanel jPanel=(JPanel)this.jTabbedPaneBusquedasFormaPagoPuntoVenta.getComponent(index);
				jPanel.setBorder(this.formapagopuntoventaConstantesFunciones.resaltarFK_IdAsientoContableFormaPagoPuntoVenta);
			}
		}

		if(this.formapagopuntoventaConstantesFunciones.resaltarFK_IdBancoFormaPagoPuntoVenta!=null) {
			index= this.jTabbedPaneBusquedasFormaPagoPuntoVenta.indexOfComponent(this.jPanelFK_IdBancoFormaPagoPuntoVenta);
			if(index>-1) {
				JPanel jPanel=(JPanel)this.jTabbedPaneBusquedasFormaPagoPuntoVenta.getComponent(index);
				jPanel.setBorder(this.formapagopuntoventaConstantesFunciones.resaltarFK_IdBancoFormaPagoPuntoVenta);
			}
		}

		if(this.formapagopuntoventaConstantesFunciones.resaltarFK_IdBancoTarjetaFormaPagoPuntoVenta!=null) {
			index= this.jTabbedPaneBusquedasFormaPagoPuntoVenta.indexOfComponent(this.jPanelFK_IdBancoTarjetaFormaPagoPuntoVenta);
			if(index>-1) {
				JPanel jPanel=(JPanel)this.jTabbedPaneBusquedasFormaPagoPuntoVenta.getComponent(index);
				jPanel.setBorder(this.formapagopuntoventaConstantesFunciones.resaltarFK_IdBancoTarjetaFormaPagoPuntoVenta);
			}
		}

		if(this.formapagopuntoventaConstantesFunciones.resaltarFK_IdConexionFormaPagoPuntoVenta!=null) {
			index= this.jTabbedPaneBusquedasFormaPagoPuntoVenta.indexOfComponent(this.jPanelFK_IdConexionFormaPagoPuntoVenta);
			if(index>-1) {
				JPanel jPanel=(JPanel)this.jTabbedPaneBusquedasFormaPagoPuntoVenta.getComponent(index);
				jPanel.setBorder(this.formapagopuntoventaConstantesFunciones.resaltarFK_IdConexionFormaPagoPuntoVenta);
			}
		}

		if(this.formapagopuntoventaConstantesFunciones.resaltarFK_IdCuentaBancoPunVenFormaPagoPuntoVenta!=null) {
			index= this.jTabbedPaneBusquedasFormaPagoPuntoVenta.indexOfComponent(this.jPanelFK_IdCuentaBancoPunVenFormaPagoPuntoVenta);
			if(index>-1) {
				JPanel jPanel=(JPanel)this.jTabbedPaneBusquedasFormaPagoPuntoVenta.getComponent(index);
				jPanel.setBorder(this.formapagopuntoventaConstantesFunciones.resaltarFK_IdCuentaBancoPunVenFormaPagoPuntoVenta);
			}
		}

		if(this.formapagopuntoventaConstantesFunciones.resaltarFK_IdCuentaContableFormaPagoPuntoVenta!=null) {
			index= this.jTabbedPaneBusquedasFormaPagoPuntoVenta.indexOfComponent(this.jPanelFK_IdCuentaContableFormaPagoPuntoVenta);
			if(index>-1) {
				JPanel jPanel=(JPanel)this.jTabbedPaneBusquedasFormaPagoPuntoVenta.getComponent(index);
				jPanel.setBorder(this.formapagopuntoventaConstantesFunciones.resaltarFK_IdCuentaContableFormaPagoPuntoVenta);
			}
		}

		if(this.formapagopuntoventaConstantesFunciones.resaltarFK_IdFacturaPuntoVentaFormaPagoPuntoVenta!=null) {
			index= this.jTabbedPaneBusquedasFormaPagoPuntoVenta.indexOfComponent(this.jPanelFK_IdFacturaPuntoVentaFormaPagoPuntoVenta);
			if(index>-1) {
				JPanel jPanel=(JPanel)this.jTabbedPaneBusquedasFormaPagoPuntoVenta.getComponent(index);
				jPanel.setBorder(this.formapagopuntoventaConstantesFunciones.resaltarFK_IdFacturaPuntoVentaFormaPagoPuntoVenta);
			}
		}

		if(this.formapagopuntoventaConstantesFunciones.resaltarFK_IdTarjetaCreditoFormaPagoPuntoVenta!=null) {
			index= this.jTabbedPaneBusquedasFormaPagoPuntoVenta.indexOfComponent(this.jPanelFK_IdTarjetaCreditoFormaPagoPuntoVenta);
			if(index>-1) {
				JPanel jPanel=(JPanel)this.jTabbedPaneBusquedasFormaPagoPuntoVenta.getComponent(index);
				jPanel.setBorder(this.formapagopuntoventaConstantesFunciones.resaltarFK_IdTarjetaCreditoFormaPagoPuntoVenta);
			}
		}

		if(this.formapagopuntoventaConstantesFunciones.resaltarFK_IdTipoFormaPagoFormaPagoPuntoVenta!=null) {
			index= this.jTabbedPaneBusquedasFormaPagoPuntoVenta.indexOfComponent(this.jPanelFK_IdTipoFormaPagoFormaPagoPuntoVenta);
			if(index>-1) {
				JPanel jPanel=(JPanel)this.jTabbedPaneBusquedasFormaPagoPuntoVenta.getComponent(index);
				jPanel.setBorder(this.formapagopuntoventaConstantesFunciones.resaltarFK_IdTipoFormaPagoFormaPagoPuntoVenta);
			}
		}

		if(this.formapagopuntoventaConstantesFunciones.resaltarFK_IdTipoInteresTarjetaFormaPagoPuntoVenta!=null) {
			index= this.jTabbedPaneBusquedasFormaPagoPuntoVenta.indexOfComponent(this.jPanelFK_IdTipoInteresTarjetaFormaPagoPuntoVenta);
			if(index>-1) {
				JPanel jPanel=(JPanel)this.jTabbedPaneBusquedasFormaPagoPuntoVenta.getComponent(index);
				jPanel.setBorder(this.formapagopuntoventaConstantesFunciones.resaltarFK_IdTipoInteresTarjetaFormaPagoPuntoVenta);
			}
		}

		if(this.formapagopuntoventaConstantesFunciones.resaltarFK_IdTipoPagoTarjetaFormaPagoPuntoVenta!=null) {
			index= this.jTabbedPaneBusquedasFormaPagoPuntoVenta.indexOfComponent(this.jPanelFK_IdTipoPagoTarjetaFormaPagoPuntoVenta);
			if(index>-1) {
				JPanel jPanel=(JPanel)this.jTabbedPaneBusquedasFormaPagoPuntoVenta.getComponent(index);
				jPanel.setBorder(this.formapagopuntoventaConstantesFunciones.resaltarFK_IdTipoPagoTarjetaFormaPagoPuntoVenta);
			}
		}

		if(this.formapagopuntoventaConstantesFunciones.resaltarFK_IdTipoRiesgoChequeFormaPagoPuntoVenta!=null) {
			index= this.jTabbedPaneBusquedasFormaPagoPuntoVenta.indexOfComponent(this.jPanelFK_IdTipoRiesgoChequeFormaPagoPuntoVenta);
			if(index>-1) {
				JPanel jPanel=(JPanel)this.jTabbedPaneBusquedasFormaPagoPuntoVenta.getComponent(index);
				jPanel.setBorder(this.formapagopuntoventaConstantesFunciones.resaltarFK_IdTipoRiesgoChequeFormaPagoPuntoVenta);
			}
		}
	}	
	*/
	}
	
	public void updateVisibilidadBusquedasFormularioFormaPagoPuntoVenta() {
	//BYDAN_BUSQUEDAS
	/*
	int index=0;
	JPanel jPanel=null;
		
	if(this.jTabbedPaneBusquedasFormaPagoPuntoVenta.getComponents().length>0) {
	

			index= this.jTabbedPaneBusquedasFormaPagoPuntoVenta.indexOfComponent(this.jPanelFK_IdAsientoContableFormaPagoPuntoVenta);
			jPanel=(JPanel)this.jTabbedPaneBusquedasFormaPagoPuntoVenta.getComponent(index);
			//NO VALE SOLO PONIENDO VISIBLE=FALSE, HAY QUE USAR REMOVE
			jPanel.setVisible(this.formapagopuntoventaConstantesFunciones.mostrarFK_IdAsientoContableFormaPagoPuntoVenta);
			if(!this.formapagopuntoventaConstantesFunciones.mostrarFK_IdAsientoContableFormaPagoPuntoVenta && index>-1) {
				this.jTabbedPaneBusquedasFormaPagoPuntoVenta.remove(index);
			}

			index= this.jTabbedPaneBusquedasFormaPagoPuntoVenta.indexOfComponent(this.jPanelFK_IdBancoFormaPagoPuntoVenta);
			jPanel=(JPanel)this.jTabbedPaneBusquedasFormaPagoPuntoVenta.getComponent(index);
			//NO VALE SOLO PONIENDO VISIBLE=FALSE, HAY QUE USAR REMOVE
			jPanel.setVisible(this.formapagopuntoventaConstantesFunciones.mostrarFK_IdBancoFormaPagoPuntoVenta);
			if(!this.formapagopuntoventaConstantesFunciones.mostrarFK_IdBancoFormaPagoPuntoVenta && index>-1) {
				this.jTabbedPaneBusquedasFormaPagoPuntoVenta.remove(index);
			}

			index= this.jTabbedPaneBusquedasFormaPagoPuntoVenta.indexOfComponent(this.jPanelFK_IdBancoTarjetaFormaPagoPuntoVenta);
			jPanel=(JPanel)this.jTabbedPaneBusquedasFormaPagoPuntoVenta.getComponent(index);
			//NO VALE SOLO PONIENDO VISIBLE=FALSE, HAY QUE USAR REMOVE
			jPanel.setVisible(this.formapagopuntoventaConstantesFunciones.mostrarFK_IdBancoTarjetaFormaPagoPuntoVenta);
			if(!this.formapagopuntoventaConstantesFunciones.mostrarFK_IdBancoTarjetaFormaPagoPuntoVenta && index>-1) {
				this.jTabbedPaneBusquedasFormaPagoPuntoVenta.remove(index);
			}

			index= this.jTabbedPaneBusquedasFormaPagoPuntoVenta.indexOfComponent(this.jPanelFK_IdConexionFormaPagoPuntoVenta);
			jPanel=(JPanel)this.jTabbedPaneBusquedasFormaPagoPuntoVenta.getComponent(index);
			//NO VALE SOLO PONIENDO VISIBLE=FALSE, HAY QUE USAR REMOVE
			jPanel.setVisible(this.formapagopuntoventaConstantesFunciones.mostrarFK_IdConexionFormaPagoPuntoVenta);
			if(!this.formapagopuntoventaConstantesFunciones.mostrarFK_IdConexionFormaPagoPuntoVenta && index>-1) {
				this.jTabbedPaneBusquedasFormaPagoPuntoVenta.remove(index);
			}

			index= this.jTabbedPaneBusquedasFormaPagoPuntoVenta.indexOfComponent(this.jPanelFK_IdCuentaBancoPunVenFormaPagoPuntoVenta);
			jPanel=(JPanel)this.jTabbedPaneBusquedasFormaPagoPuntoVenta.getComponent(index);
			//NO VALE SOLO PONIENDO VISIBLE=FALSE, HAY QUE USAR REMOVE
			jPanel.setVisible(this.formapagopuntoventaConstantesFunciones.mostrarFK_IdCuentaBancoPunVenFormaPagoPuntoVenta);
			if(!this.formapagopuntoventaConstantesFunciones.mostrarFK_IdCuentaBancoPunVenFormaPagoPuntoVenta && index>-1) {
				this.jTabbedPaneBusquedasFormaPagoPuntoVenta.remove(index);
			}

			index= this.jTabbedPaneBusquedasFormaPagoPuntoVenta.indexOfComponent(this.jPanelFK_IdCuentaContableFormaPagoPuntoVenta);
			jPanel=(JPanel)this.jTabbedPaneBusquedasFormaPagoPuntoVenta.getComponent(index);
			//NO VALE SOLO PONIENDO VISIBLE=FALSE, HAY QUE USAR REMOVE
			jPanel.setVisible(this.formapagopuntoventaConstantesFunciones.mostrarFK_IdCuentaContableFormaPagoPuntoVenta);
			if(!this.formapagopuntoventaConstantesFunciones.mostrarFK_IdCuentaContableFormaPagoPuntoVenta && index>-1) {
				this.jTabbedPaneBusquedasFormaPagoPuntoVenta.remove(index);
			}

			index= this.jTabbedPaneBusquedasFormaPagoPuntoVenta.indexOfComponent(this.jPanelFK_IdFacturaPuntoVentaFormaPagoPuntoVenta);
			jPanel=(JPanel)this.jTabbedPaneBusquedasFormaPagoPuntoVenta.getComponent(index);
			//NO VALE SOLO PONIENDO VISIBLE=FALSE, HAY QUE USAR REMOVE
			jPanel.setVisible(this.formapagopuntoventaConstantesFunciones.mostrarFK_IdFacturaPuntoVentaFormaPagoPuntoVenta);
			if(!this.formapagopuntoventaConstantesFunciones.mostrarFK_IdFacturaPuntoVentaFormaPagoPuntoVenta && index>-1) {
				this.jTabbedPaneBusquedasFormaPagoPuntoVenta.remove(index);
			}

			index= this.jTabbedPaneBusquedasFormaPagoPuntoVenta.indexOfComponent(this.jPanelFK_IdTarjetaCreditoFormaPagoPuntoVenta);
			jPanel=(JPanel)this.jTabbedPaneBusquedasFormaPagoPuntoVenta.getComponent(index);
			//NO VALE SOLO PONIENDO VISIBLE=FALSE, HAY QUE USAR REMOVE
			jPanel.setVisible(this.formapagopuntoventaConstantesFunciones.mostrarFK_IdTarjetaCreditoFormaPagoPuntoVenta);
			if(!this.formapagopuntoventaConstantesFunciones.mostrarFK_IdTarjetaCreditoFormaPagoPuntoVenta && index>-1) {
				this.jTabbedPaneBusquedasFormaPagoPuntoVenta.remove(index);
			}

			index= this.jTabbedPaneBusquedasFormaPagoPuntoVenta.indexOfComponent(this.jPanelFK_IdTipoFormaPagoFormaPagoPuntoVenta);
			jPanel=(JPanel)this.jTabbedPaneBusquedasFormaPagoPuntoVenta.getComponent(index);
			//NO VALE SOLO PONIENDO VISIBLE=FALSE, HAY QUE USAR REMOVE
			jPanel.setVisible(this.formapagopuntoventaConstantesFunciones.mostrarFK_IdTipoFormaPagoFormaPagoPuntoVenta);
			if(!this.formapagopuntoventaConstantesFunciones.mostrarFK_IdTipoFormaPagoFormaPagoPuntoVenta && index>-1) {
				this.jTabbedPaneBusquedasFormaPagoPuntoVenta.remove(index);
			}

			index= this.jTabbedPaneBusquedasFormaPagoPuntoVenta.indexOfComponent(this.jPanelFK_IdTipoInteresTarjetaFormaPagoPuntoVenta);
			jPanel=(JPanel)this.jTabbedPaneBusquedasFormaPagoPuntoVenta.getComponent(index);
			//NO VALE SOLO PONIENDO VISIBLE=FALSE, HAY QUE USAR REMOVE
			jPanel.setVisible(this.formapagopuntoventaConstantesFunciones.mostrarFK_IdTipoInteresTarjetaFormaPagoPuntoVenta);
			if(!this.formapagopuntoventaConstantesFunciones.mostrarFK_IdTipoInteresTarjetaFormaPagoPuntoVenta && index>-1) {
				this.jTabbedPaneBusquedasFormaPagoPuntoVenta.remove(index);
			}

			index= this.jTabbedPaneBusquedasFormaPagoPuntoVenta.indexOfComponent(this.jPanelFK_IdTipoPagoTarjetaFormaPagoPuntoVenta);
			jPanel=(JPanel)this.jTabbedPaneBusquedasFormaPagoPuntoVenta.getComponent(index);
			//NO VALE SOLO PONIENDO VISIBLE=FALSE, HAY QUE USAR REMOVE
			jPanel.setVisible(this.formapagopuntoventaConstantesFunciones.mostrarFK_IdTipoPagoTarjetaFormaPagoPuntoVenta);
			if(!this.formapagopuntoventaConstantesFunciones.mostrarFK_IdTipoPagoTarjetaFormaPagoPuntoVenta && index>-1) {
				this.jTabbedPaneBusquedasFormaPagoPuntoVenta.remove(index);
			}

			index= this.jTabbedPaneBusquedasFormaPagoPuntoVenta.indexOfComponent(this.jPanelFK_IdTipoRiesgoChequeFormaPagoPuntoVenta);
			jPanel=(JPanel)this.jTabbedPaneBusquedasFormaPagoPuntoVenta.getComponent(index);
			//NO VALE SOLO PONIENDO VISIBLE=FALSE, HAY QUE USAR REMOVE
			jPanel.setVisible(this.formapagopuntoventaConstantesFunciones.mostrarFK_IdTipoRiesgoChequeFormaPagoPuntoVenta);
			if(!this.formapagopuntoventaConstantesFunciones.mostrarFK_IdTipoRiesgoChequeFormaPagoPuntoVenta && index>-1) {
				this.jTabbedPaneBusquedasFormaPagoPuntoVenta.remove(index);
			}
	}	
	*/
	}
	
	public void updateHabilitarBusquedasFormularioFormaPagoPuntoVenta() {
	/*
	//BYDAN_BUSQUEDAS		
		int index=0;
		JPanel jPanel=null;
			
		if(this.jTabbedPaneBusquedasFormaPagoPuntoVenta.getComponents().length>0) {
	

			index= this.jTabbedPaneBusquedasFormaPagoPuntoVenta.indexOfComponent(this.jPanelFK_IdAsientoContableFormaPagoPuntoVenta);
			if(index>-1) {
				jPanel=(JPanel)this.jTabbedPaneBusquedasFormaPagoPuntoVenta.getComponent(index);
				//ENABLE PANE=FALSE NO FUNCIONA, ENABLEAT SI
				jPanel.setEnabled(this.formapagopuntoventaConstantesFunciones.activarFK_IdAsientoContableFormaPagoPuntoVenta);
				this.jTabbedPaneBusquedasFormaPagoPuntoVenta.setEnabledAt(index,this.formapagopuntoventaConstantesFunciones.activarFK_IdAsientoContableFormaPagoPuntoVenta);
			}

			index= this.jTabbedPaneBusquedasFormaPagoPuntoVenta.indexOfComponent(this.jPanelFK_IdBancoFormaPagoPuntoVenta);
			if(index>-1) {
				jPanel=(JPanel)this.jTabbedPaneBusquedasFormaPagoPuntoVenta.getComponent(index);
				//ENABLE PANE=FALSE NO FUNCIONA, ENABLEAT SI
				jPanel.setEnabled(this.formapagopuntoventaConstantesFunciones.activarFK_IdBancoFormaPagoPuntoVenta);
				this.jTabbedPaneBusquedasFormaPagoPuntoVenta.setEnabledAt(index,this.formapagopuntoventaConstantesFunciones.activarFK_IdBancoFormaPagoPuntoVenta);
			}

			index= this.jTabbedPaneBusquedasFormaPagoPuntoVenta.indexOfComponent(this.jPanelFK_IdBancoTarjetaFormaPagoPuntoVenta);
			if(index>-1) {
				jPanel=(JPanel)this.jTabbedPaneBusquedasFormaPagoPuntoVenta.getComponent(index);
				//ENABLE PANE=FALSE NO FUNCIONA, ENABLEAT SI
				jPanel.setEnabled(this.formapagopuntoventaConstantesFunciones.activarFK_IdBancoTarjetaFormaPagoPuntoVenta);
				this.jTabbedPaneBusquedasFormaPagoPuntoVenta.setEnabledAt(index,this.formapagopuntoventaConstantesFunciones.activarFK_IdBancoTarjetaFormaPagoPuntoVenta);
			}

			index= this.jTabbedPaneBusquedasFormaPagoPuntoVenta.indexOfComponent(this.jPanelFK_IdConexionFormaPagoPuntoVenta);
			if(index>-1) {
				jPanel=(JPanel)this.jTabbedPaneBusquedasFormaPagoPuntoVenta.getComponent(index);
				//ENABLE PANE=FALSE NO FUNCIONA, ENABLEAT SI
				jPanel.setEnabled(this.formapagopuntoventaConstantesFunciones.activarFK_IdConexionFormaPagoPuntoVenta);
				this.jTabbedPaneBusquedasFormaPagoPuntoVenta.setEnabledAt(index,this.formapagopuntoventaConstantesFunciones.activarFK_IdConexionFormaPagoPuntoVenta);
			}

			index= this.jTabbedPaneBusquedasFormaPagoPuntoVenta.indexOfComponent(this.jPanelFK_IdCuentaBancoPunVenFormaPagoPuntoVenta);
			if(index>-1) {
				jPanel=(JPanel)this.jTabbedPaneBusquedasFormaPagoPuntoVenta.getComponent(index);
				//ENABLE PANE=FALSE NO FUNCIONA, ENABLEAT SI
				jPanel.setEnabled(this.formapagopuntoventaConstantesFunciones.activarFK_IdCuentaBancoPunVenFormaPagoPuntoVenta);
				this.jTabbedPaneBusquedasFormaPagoPuntoVenta.setEnabledAt(index,this.formapagopuntoventaConstantesFunciones.activarFK_IdCuentaBancoPunVenFormaPagoPuntoVenta);
			}

			index= this.jTabbedPaneBusquedasFormaPagoPuntoVenta.indexOfComponent(this.jPanelFK_IdCuentaContableFormaPagoPuntoVenta);
			if(index>-1) {
				jPanel=(JPanel)this.jTabbedPaneBusquedasFormaPagoPuntoVenta.getComponent(index);
				//ENABLE PANE=FALSE NO FUNCIONA, ENABLEAT SI
				jPanel.setEnabled(this.formapagopuntoventaConstantesFunciones.activarFK_IdCuentaContableFormaPagoPuntoVenta);
				this.jTabbedPaneBusquedasFormaPagoPuntoVenta.setEnabledAt(index,this.formapagopuntoventaConstantesFunciones.activarFK_IdCuentaContableFormaPagoPuntoVenta);
			}

			index= this.jTabbedPaneBusquedasFormaPagoPuntoVenta.indexOfComponent(this.jPanelFK_IdFacturaPuntoVentaFormaPagoPuntoVenta);
			if(index>-1) {
				jPanel=(JPanel)this.jTabbedPaneBusquedasFormaPagoPuntoVenta.getComponent(index);
				//ENABLE PANE=FALSE NO FUNCIONA, ENABLEAT SI
				jPanel.setEnabled(this.formapagopuntoventaConstantesFunciones.activarFK_IdFacturaPuntoVentaFormaPagoPuntoVenta);
				this.jTabbedPaneBusquedasFormaPagoPuntoVenta.setEnabledAt(index,this.formapagopuntoventaConstantesFunciones.activarFK_IdFacturaPuntoVentaFormaPagoPuntoVenta);
			}

			index= this.jTabbedPaneBusquedasFormaPagoPuntoVenta.indexOfComponent(this.jPanelFK_IdTarjetaCreditoFormaPagoPuntoVenta);
			if(index>-1) {
				jPanel=(JPanel)this.jTabbedPaneBusquedasFormaPagoPuntoVenta.getComponent(index);
				//ENABLE PANE=FALSE NO FUNCIONA, ENABLEAT SI
				jPanel.setEnabled(this.formapagopuntoventaConstantesFunciones.activarFK_IdTarjetaCreditoFormaPagoPuntoVenta);
				this.jTabbedPaneBusquedasFormaPagoPuntoVenta.setEnabledAt(index,this.formapagopuntoventaConstantesFunciones.activarFK_IdTarjetaCreditoFormaPagoPuntoVenta);
			}

			index= this.jTabbedPaneBusquedasFormaPagoPuntoVenta.indexOfComponent(this.jPanelFK_IdTipoFormaPagoFormaPagoPuntoVenta);
			if(index>-1) {
				jPanel=(JPanel)this.jTabbedPaneBusquedasFormaPagoPuntoVenta.getComponent(index);
				//ENABLE PANE=FALSE NO FUNCIONA, ENABLEAT SI
				jPanel.setEnabled(this.formapagopuntoventaConstantesFunciones.activarFK_IdTipoFormaPagoFormaPagoPuntoVenta);
				this.jTabbedPaneBusquedasFormaPagoPuntoVenta.setEnabledAt(index,this.formapagopuntoventaConstantesFunciones.activarFK_IdTipoFormaPagoFormaPagoPuntoVenta);
			}

			index= this.jTabbedPaneBusquedasFormaPagoPuntoVenta.indexOfComponent(this.jPanelFK_IdTipoInteresTarjetaFormaPagoPuntoVenta);
			if(index>-1) {
				jPanel=(JPanel)this.jTabbedPaneBusquedasFormaPagoPuntoVenta.getComponent(index);
				//ENABLE PANE=FALSE NO FUNCIONA, ENABLEAT SI
				jPanel.setEnabled(this.formapagopuntoventaConstantesFunciones.activarFK_IdTipoInteresTarjetaFormaPagoPuntoVenta);
				this.jTabbedPaneBusquedasFormaPagoPuntoVenta.setEnabledAt(index,this.formapagopuntoventaConstantesFunciones.activarFK_IdTipoInteresTarjetaFormaPagoPuntoVenta);
			}

			index= this.jTabbedPaneBusquedasFormaPagoPuntoVenta.indexOfComponent(this.jPanelFK_IdTipoPagoTarjetaFormaPagoPuntoVenta);
			if(index>-1) {
				jPanel=(JPanel)this.jTabbedPaneBusquedasFormaPagoPuntoVenta.getComponent(index);
				//ENABLE PANE=FALSE NO FUNCIONA, ENABLEAT SI
				jPanel.setEnabled(this.formapagopuntoventaConstantesFunciones.activarFK_IdTipoPagoTarjetaFormaPagoPuntoVenta);
				this.jTabbedPaneBusquedasFormaPagoPuntoVenta.setEnabledAt(index,this.formapagopuntoventaConstantesFunciones.activarFK_IdTipoPagoTarjetaFormaPagoPuntoVenta);
			}

			index= this.jTabbedPaneBusquedasFormaPagoPuntoVenta.indexOfComponent(this.jPanelFK_IdTipoRiesgoChequeFormaPagoPuntoVenta);
			if(index>-1) {
				jPanel=(JPanel)this.jTabbedPaneBusquedasFormaPagoPuntoVenta.getComponent(index);
				//ENABLE PANE=FALSE NO FUNCIONA, ENABLEAT SI
				jPanel.setEnabled(this.formapagopuntoventaConstantesFunciones.activarFK_IdTipoRiesgoChequeFormaPagoPuntoVenta);
				this.jTabbedPaneBusquedasFormaPagoPuntoVenta.setEnabledAt(index,this.formapagopuntoventaConstantesFunciones.activarFK_IdTipoRiesgoChequeFormaPagoPuntoVenta);
			}
		}	
	*/
	}
	
	
	public void resaltarPanelBusquedaFormaPagoPuntoVenta(String sTipoBusqueda) {
		Boolean existe=false;
		//BYDAN_BUSQUEDAS
		/*
		int index=0;
		Border resaltar = Funciones2.getBorderResaltar(this.parametroGeneralUsuario,"TAB");

		if(sTipoBusqueda.equals("FK_IdAsientoContable")) {
			index= this.jTabbedPaneBusquedasFormaPagoPuntoVenta.indexOfComponent(this.jPanelFK_IdAsientoContableFormaPagoPuntoVenta);

			this.jTabbedPaneBusquedasFormaPagoPuntoVenta.setSelectedIndex(index);

			JPanel jPanel=(JPanel)this.jTabbedPaneBusquedasFormaPagoPuntoVenta.getComponent(index);

			this.formapagopuntoventaConstantesFunciones.setResaltarFK_IdAsientoContableFormaPagoPuntoVenta(resaltar);

			jPanel.setBorder(this.formapagopuntoventaConstantesFunciones.resaltarFK_IdAsientoContableFormaPagoPuntoVenta);
			existe=true;
		}
		else if(sTipoBusqueda.equals("FK_IdBanco")) {
			index= this.jTabbedPaneBusquedasFormaPagoPuntoVenta.indexOfComponent(this.jPanelFK_IdBancoFormaPagoPuntoVenta);

			this.jTabbedPaneBusquedasFormaPagoPuntoVenta.setSelectedIndex(index);

			JPanel jPanel=(JPanel)this.jTabbedPaneBusquedasFormaPagoPuntoVenta.getComponent(index);

			this.formapagopuntoventaConstantesFunciones.setResaltarFK_IdBancoFormaPagoPuntoVenta(resaltar);

			jPanel.setBorder(this.formapagopuntoventaConstantesFunciones.resaltarFK_IdBancoFormaPagoPuntoVenta);
			existe=true;
		}
		else if(sTipoBusqueda.equals("FK_IdBancoTarjeta")) {
			index= this.jTabbedPaneBusquedasFormaPagoPuntoVenta.indexOfComponent(this.jPanelFK_IdBancoTarjetaFormaPagoPuntoVenta);

			this.jTabbedPaneBusquedasFormaPagoPuntoVenta.setSelectedIndex(index);

			JPanel jPanel=(JPanel)this.jTabbedPaneBusquedasFormaPagoPuntoVenta.getComponent(index);

			this.formapagopuntoventaConstantesFunciones.setResaltarFK_IdBancoTarjetaFormaPagoPuntoVenta(resaltar);

			jPanel.setBorder(this.formapagopuntoventaConstantesFunciones.resaltarFK_IdBancoTarjetaFormaPagoPuntoVenta);
			existe=true;
		}
		else if(sTipoBusqueda.equals("FK_IdConexion")) {
			index= this.jTabbedPaneBusquedasFormaPagoPuntoVenta.indexOfComponent(this.jPanelFK_IdConexionFormaPagoPuntoVenta);

			this.jTabbedPaneBusquedasFormaPagoPuntoVenta.setSelectedIndex(index);

			JPanel jPanel=(JPanel)this.jTabbedPaneBusquedasFormaPagoPuntoVenta.getComponent(index);

			this.formapagopuntoventaConstantesFunciones.setResaltarFK_IdConexionFormaPagoPuntoVenta(resaltar);

			jPanel.setBorder(this.formapagopuntoventaConstantesFunciones.resaltarFK_IdConexionFormaPagoPuntoVenta);
			existe=true;
		}
		else if(sTipoBusqueda.equals("FK_IdCuentaBancoPunVen")) {
			index= this.jTabbedPaneBusquedasFormaPagoPuntoVenta.indexOfComponent(this.jPanelFK_IdCuentaBancoPunVenFormaPagoPuntoVenta);

			this.jTabbedPaneBusquedasFormaPagoPuntoVenta.setSelectedIndex(index);

			JPanel jPanel=(JPanel)this.jTabbedPaneBusquedasFormaPagoPuntoVenta.getComponent(index);

			this.formapagopuntoventaConstantesFunciones.setResaltarFK_IdCuentaBancoPunVenFormaPagoPuntoVenta(resaltar);

			jPanel.setBorder(this.formapagopuntoventaConstantesFunciones.resaltarFK_IdCuentaBancoPunVenFormaPagoPuntoVenta);
			existe=true;
		}
		else if(sTipoBusqueda.equals("FK_IdCuentaContable")) {
			index= this.jTabbedPaneBusquedasFormaPagoPuntoVenta.indexOfComponent(this.jPanelFK_IdCuentaContableFormaPagoPuntoVenta);

			this.jTabbedPaneBusquedasFormaPagoPuntoVenta.setSelectedIndex(index);

			JPanel jPanel=(JPanel)this.jTabbedPaneBusquedasFormaPagoPuntoVenta.getComponent(index);

			this.formapagopuntoventaConstantesFunciones.setResaltarFK_IdCuentaContableFormaPagoPuntoVenta(resaltar);

			jPanel.setBorder(this.formapagopuntoventaConstantesFunciones.resaltarFK_IdCuentaContableFormaPagoPuntoVenta);
			existe=true;
		}
		else if(sTipoBusqueda.equals("FK_IdFacturaPuntoVenta")) {
			index= this.jTabbedPaneBusquedasFormaPagoPuntoVenta.indexOfComponent(this.jPanelFK_IdFacturaPuntoVentaFormaPagoPuntoVenta);

			this.jTabbedPaneBusquedasFormaPagoPuntoVenta.setSelectedIndex(index);

			JPanel jPanel=(JPanel)this.jTabbedPaneBusquedasFormaPagoPuntoVenta.getComponent(index);

			this.formapagopuntoventaConstantesFunciones.setResaltarFK_IdFacturaPuntoVentaFormaPagoPuntoVenta(resaltar);

			jPanel.setBorder(this.formapagopuntoventaConstantesFunciones.resaltarFK_IdFacturaPuntoVentaFormaPagoPuntoVenta);
			existe=true;
		}
		else if(sTipoBusqueda.equals("FK_IdTarjetaCredito")) {
			index= this.jTabbedPaneBusquedasFormaPagoPuntoVenta.indexOfComponent(this.jPanelFK_IdTarjetaCreditoFormaPagoPuntoVenta);

			this.jTabbedPaneBusquedasFormaPagoPuntoVenta.setSelectedIndex(index);

			JPanel jPanel=(JPanel)this.jTabbedPaneBusquedasFormaPagoPuntoVenta.getComponent(index);

			this.formapagopuntoventaConstantesFunciones.setResaltarFK_IdTarjetaCreditoFormaPagoPuntoVenta(resaltar);

			jPanel.setBorder(this.formapagopuntoventaConstantesFunciones.resaltarFK_IdTarjetaCreditoFormaPagoPuntoVenta);
			existe=true;
		}
		else if(sTipoBusqueda.equals("FK_IdTipoFormaPago")) {
			index= this.jTabbedPaneBusquedasFormaPagoPuntoVenta.indexOfComponent(this.jPanelFK_IdTipoFormaPagoFormaPagoPuntoVenta);

			this.jTabbedPaneBusquedasFormaPagoPuntoVenta.setSelectedIndex(index);

			JPanel jPanel=(JPanel)this.jTabbedPaneBusquedasFormaPagoPuntoVenta.getComponent(index);

			this.formapagopuntoventaConstantesFunciones.setResaltarFK_IdTipoFormaPagoFormaPagoPuntoVenta(resaltar);

			jPanel.setBorder(this.formapagopuntoventaConstantesFunciones.resaltarFK_IdTipoFormaPagoFormaPagoPuntoVenta);
			existe=true;
		}
		else if(sTipoBusqueda.equals("FK_IdTipoInteresTarjeta")) {
			index= this.jTabbedPaneBusquedasFormaPagoPuntoVenta.indexOfComponent(this.jPanelFK_IdTipoInteresTarjetaFormaPagoPuntoVenta);

			this.jTabbedPaneBusquedasFormaPagoPuntoVenta.setSelectedIndex(index);

			JPanel jPanel=(JPanel)this.jTabbedPaneBusquedasFormaPagoPuntoVenta.getComponent(index);

			this.formapagopuntoventaConstantesFunciones.setResaltarFK_IdTipoInteresTarjetaFormaPagoPuntoVenta(resaltar);

			jPanel.setBorder(this.formapagopuntoventaConstantesFunciones.resaltarFK_IdTipoInteresTarjetaFormaPagoPuntoVenta);
			existe=true;
		}
		else if(sTipoBusqueda.equals("FK_IdTipoPagoTarjeta")) {
			index= this.jTabbedPaneBusquedasFormaPagoPuntoVenta.indexOfComponent(this.jPanelFK_IdTipoPagoTarjetaFormaPagoPuntoVenta);

			this.jTabbedPaneBusquedasFormaPagoPuntoVenta.setSelectedIndex(index);

			JPanel jPanel=(JPanel)this.jTabbedPaneBusquedasFormaPagoPuntoVenta.getComponent(index);

			this.formapagopuntoventaConstantesFunciones.setResaltarFK_IdTipoPagoTarjetaFormaPagoPuntoVenta(resaltar);

			jPanel.setBorder(this.formapagopuntoventaConstantesFunciones.resaltarFK_IdTipoPagoTarjetaFormaPagoPuntoVenta);
			existe=true;
		}
		else if(sTipoBusqueda.equals("FK_IdTipoRiesgoCheque")) {
			index= this.jTabbedPaneBusquedasFormaPagoPuntoVenta.indexOfComponent(this.jPanelFK_IdTipoRiesgoChequeFormaPagoPuntoVenta);

			this.jTabbedPaneBusquedasFormaPagoPuntoVenta.setSelectedIndex(index);

			JPanel jPanel=(JPanel)this.jTabbedPaneBusquedasFormaPagoPuntoVenta.getComponent(index);

			this.formapagopuntoventaConstantesFunciones.setResaltarFK_IdTipoRiesgoChequeFormaPagoPuntoVenta(resaltar);

			jPanel.setBorder(this.formapagopuntoventaConstantesFunciones.resaltarFK_IdTipoRiesgoChequeFormaPagoPuntoVenta);
			existe=true;
		}
		*/

		if(existe) {
			/*
			this.jTtoolBarFormaPagoPuntoVenta.setBorder(resaltar);
			*/
		}
	}	
	
	//NO FUNCIONA
	public void windowClosed(WindowEvent e) {	
	}
		
	public void windowClosing(WindowEvent e) {	    	    
	}

	public void windowOpened(WindowEvent e) {	    
	}

	public void windowIconified(WindowEvent e) {	    
	}

	public void windowDeiconified(WindowEvent e) {	    
	}

	public void windowActivated(WindowEvent e) {	    
	}

	public void windowDeactivated(WindowEvent e) {	    
	}

	public void windowGainedFocus(WindowEvent e) {	    
	}

	public void windowLostFocus(WindowEvent e) {	    
	}
	
	public void updateControlesFormularioFormaPagoPuntoVenta() throws Exception {

		if(this.jInternalFrameDetalleFormFormaPagoPuntoVenta==null) { //if(!this.conCargarFormDetalle) {			
			this.inicializarFormDetalle();
		}
		
		this.updateBorderResaltarControlesFormularioFormaPagoPuntoVenta();
		this.updateVisibilidadResaltarControlesFormularioFormaPagoPuntoVenta();
		this.updateHabilitarResaltarControlesFormularioFormaPagoPuntoVenta();
		
	}
	
	public void updateBorderResaltarControlesFormularioFormaPagoPuntoVenta() throws Exception {
		if(this.jInternalFrameDetalleFormFormaPagoPuntoVenta==null) { //if(!this.conCargarFormDetalle) {
			this.inicializarFormDetalle();
		}
		
	
		if(this.formapagopuntoventaConstantesFunciones.resaltaridFormaPagoPuntoVenta!=null && this.jInternalFrameDetalleFormFormaPagoPuntoVenta!=null) {this.jInternalFrameDetalleFormFormaPagoPuntoVenta.jLabelidFormaPagoPuntoVenta.setBorder(this.formapagopuntoventaConstantesFunciones.resaltaridFormaPagoPuntoVenta);}
		if(this.formapagopuntoventaConstantesFunciones.resaltarid_empresaFormaPagoPuntoVenta!=null && this.jInternalFrameDetalleFormFormaPagoPuntoVenta!=null) {this.jInternalFrameDetalleFormFormaPagoPuntoVenta.jComboBoxid_empresaFormaPagoPuntoVenta.setBorder(this.formapagopuntoventaConstantesFunciones.resaltarid_empresaFormaPagoPuntoVenta);}
		if(this.formapagopuntoventaConstantesFunciones.resaltarid_sucursalFormaPagoPuntoVenta!=null && this.jInternalFrameDetalleFormFormaPagoPuntoVenta!=null) {this.jInternalFrameDetalleFormFormaPagoPuntoVenta.jComboBoxid_sucursalFormaPagoPuntoVenta.setBorder(this.formapagopuntoventaConstantesFunciones.resaltarid_sucursalFormaPagoPuntoVenta);}
		if(this.formapagopuntoventaConstantesFunciones.resaltarid_ejercicioFormaPagoPuntoVenta!=null && this.jInternalFrameDetalleFormFormaPagoPuntoVenta!=null) {this.jInternalFrameDetalleFormFormaPagoPuntoVenta.jComboBoxid_ejercicioFormaPagoPuntoVenta.setBorder(this.formapagopuntoventaConstantesFunciones.resaltarid_ejercicioFormaPagoPuntoVenta);}
		if(this.formapagopuntoventaConstantesFunciones.resaltarid_periodoFormaPagoPuntoVenta!=null && this.jInternalFrameDetalleFormFormaPagoPuntoVenta!=null) {this.jInternalFrameDetalleFormFormaPagoPuntoVenta.jComboBoxid_periodoFormaPagoPuntoVenta.setBorder(this.formapagopuntoventaConstantesFunciones.resaltarid_periodoFormaPagoPuntoVenta);}
		if(this.formapagopuntoventaConstantesFunciones.resaltarid_factura_punto_ventaFormaPagoPuntoVenta!=null && this.jInternalFrameDetalleFormFormaPagoPuntoVenta!=null) {this.jInternalFrameDetalleFormFormaPagoPuntoVenta.jComboBoxid_factura_punto_ventaFormaPagoPuntoVenta.setBorder(this.formapagopuntoventaConstantesFunciones.resaltarid_factura_punto_ventaFormaPagoPuntoVenta);}
		if(this.formapagopuntoventaConstantesFunciones.resaltarid_tipo_forma_pagoFormaPagoPuntoVenta!=null && this.jInternalFrameDetalleFormFormaPagoPuntoVenta!=null) {this.jInternalFrameDetalleFormFormaPagoPuntoVenta.jComboBoxid_tipo_forma_pagoFormaPagoPuntoVenta.setBorder(this.formapagopuntoventaConstantesFunciones.resaltarid_tipo_forma_pagoFormaPagoPuntoVenta);}
		if(this.formapagopuntoventaConstantesFunciones.resaltarporcentajeFormaPagoPuntoVenta!=null && this.jInternalFrameDetalleFormFormaPagoPuntoVenta!=null) {this.jInternalFrameDetalleFormFormaPagoPuntoVenta.jTextFieldporcentajeFormaPagoPuntoVenta.setBorder(this.formapagopuntoventaConstantesFunciones.resaltarporcentajeFormaPagoPuntoVenta);}
		if(this.formapagopuntoventaConstantesFunciones.resaltarvalorFormaPagoPuntoVenta!=null && this.jInternalFrameDetalleFormFormaPagoPuntoVenta!=null) {this.jInternalFrameDetalleFormFormaPagoPuntoVenta.jTextFieldvalorFormaPagoPuntoVenta.setBorder(this.formapagopuntoventaConstantesFunciones.resaltarvalorFormaPagoPuntoVenta);}
		if(this.formapagopuntoventaConstantesFunciones.resaltarfechaFormaPagoPuntoVenta!=null && this.jInternalFrameDetalleFormFormaPagoPuntoVenta!=null) {this.jInternalFrameDetalleFormFormaPagoPuntoVenta.jDateChooserfechaFormaPagoPuntoVenta.setBorder(this.formapagopuntoventaConstantesFunciones.resaltarfechaFormaPagoPuntoVenta);}
		if(this.formapagopuntoventaConstantesFunciones.resaltardescripcionFormaPagoPuntoVenta!=null && this.jInternalFrameDetalleFormFormaPagoPuntoVenta!=null) {this.jInternalFrameDetalleFormFormaPagoPuntoVenta.jTextAreadescripcionFormaPagoPuntoVenta.setBorder(this.formapagopuntoventaConstantesFunciones.resaltardescripcionFormaPagoPuntoVenta);}
		if(this.formapagopuntoventaConstantesFunciones.resaltarfecha_inicioFormaPagoPuntoVenta!=null && this.jInternalFrameDetalleFormFormaPagoPuntoVenta!=null) {this.jInternalFrameDetalleFormFormaPagoPuntoVenta.jDateChooserfecha_inicioFormaPagoPuntoVenta.setBorder(this.formapagopuntoventaConstantesFunciones.resaltarfecha_inicioFormaPagoPuntoVenta);}
		if(this.formapagopuntoventaConstantesFunciones.resaltarnumero_dias_plazoFormaPagoPuntoVenta!=null && this.jInternalFrameDetalleFormFormaPagoPuntoVenta!=null) {this.jInternalFrameDetalleFormFormaPagoPuntoVenta.jTextFieldnumero_dias_plazoFormaPagoPuntoVenta.setBorder(this.formapagopuntoventaConstantesFunciones.resaltarnumero_dias_plazoFormaPagoPuntoVenta);}
		if(this.formapagopuntoventaConstantesFunciones.resaltarfecha_finFormaPagoPuntoVenta!=null && this.jInternalFrameDetalleFormFormaPagoPuntoVenta!=null) {this.jInternalFrameDetalleFormFormaPagoPuntoVenta.jDateChooserfecha_finFormaPagoPuntoVenta.setBorder(this.formapagopuntoventaConstantesFunciones.resaltarfecha_finFormaPagoPuntoVenta);}
		if(this.formapagopuntoventaConstantesFunciones.resaltarid_bancoFormaPagoPuntoVenta!=null && this.jInternalFrameDetalleFormFormaPagoPuntoVenta!=null) {this.jInternalFrameDetalleFormFormaPagoPuntoVenta.jComboBoxid_bancoFormaPagoPuntoVenta.setBorder(this.formapagopuntoventaConstantesFunciones.resaltarid_bancoFormaPagoPuntoVenta);}
		if(this.formapagopuntoventaConstantesFunciones.resaltarid_cuenta_banco_pun_venFormaPagoPuntoVenta!=null && this.jInternalFrameDetalleFormFormaPagoPuntoVenta!=null) {this.jInternalFrameDetalleFormFormaPagoPuntoVenta.jComboBoxid_cuenta_banco_pun_venFormaPagoPuntoVenta.setBorder(this.formapagopuntoventaConstantesFunciones.resaltarid_cuenta_banco_pun_venFormaPagoPuntoVenta);}
		if(this.formapagopuntoventaConstantesFunciones.resaltarid_tipo_riesgo_chequeFormaPagoPuntoVenta!=null && this.jInternalFrameDetalleFormFormaPagoPuntoVenta!=null) {this.jInternalFrameDetalleFormFormaPagoPuntoVenta.jComboBoxid_tipo_riesgo_chequeFormaPagoPuntoVenta.setBorder(this.formapagopuntoventaConstantesFunciones.resaltarid_tipo_riesgo_chequeFormaPagoPuntoVenta);}
		if(this.formapagopuntoventaConstantesFunciones.resaltarnumero_cuentaFormaPagoPuntoVenta!=null && this.jInternalFrameDetalleFormFormaPagoPuntoVenta!=null) {this.jInternalFrameDetalleFormFormaPagoPuntoVenta.jTextFieldnumero_cuentaFormaPagoPuntoVenta.setBorder(this.formapagopuntoventaConstantesFunciones.resaltarnumero_cuentaFormaPagoPuntoVenta);}
		if(this.formapagopuntoventaConstantesFunciones.resaltarnumero_chequeFormaPagoPuntoVenta!=null && this.jInternalFrameDetalleFormFormaPagoPuntoVenta!=null) {this.jInternalFrameDetalleFormFormaPagoPuntoVenta.jTextFieldnumero_chequeFormaPagoPuntoVenta.setBorder(this.formapagopuntoventaConstantesFunciones.resaltarnumero_chequeFormaPagoPuntoVenta);}
		if(this.formapagopuntoventaConstantesFunciones.resaltargiradorFormaPagoPuntoVenta!=null && this.jInternalFrameDetalleFormFormaPagoPuntoVenta!=null) {this.jInternalFrameDetalleFormFormaPagoPuntoVenta.jTextAreagiradorFormaPagoPuntoVenta.setBorder(this.formapagopuntoventaConstantesFunciones.resaltargiradorFormaPagoPuntoVenta);}
		if(this.formapagopuntoventaConstantesFunciones.resaltarid_banco_tarjetaFormaPagoPuntoVenta!=null && this.jInternalFrameDetalleFormFormaPagoPuntoVenta!=null) {this.jInternalFrameDetalleFormFormaPagoPuntoVenta.jComboBoxid_banco_tarjetaFormaPagoPuntoVenta.setBorder(this.formapagopuntoventaConstantesFunciones.resaltarid_banco_tarjetaFormaPagoPuntoVenta);}
		if(this.formapagopuntoventaConstantesFunciones.resaltarid_tarjeta_creditoFormaPagoPuntoVenta!=null && this.jInternalFrameDetalleFormFormaPagoPuntoVenta!=null) {this.jInternalFrameDetalleFormFormaPagoPuntoVenta.jComboBoxid_tarjeta_creditoFormaPagoPuntoVenta.setBorder(this.formapagopuntoventaConstantesFunciones.resaltarid_tarjeta_creditoFormaPagoPuntoVenta);}
		if(this.formapagopuntoventaConstantesFunciones.resaltarid_tipo_interes_tarjetaFormaPagoPuntoVenta!=null && this.jInternalFrameDetalleFormFormaPagoPuntoVenta!=null) {this.jInternalFrameDetalleFormFormaPagoPuntoVenta.jComboBoxid_tipo_interes_tarjetaFormaPagoPuntoVenta.setBorder(this.formapagopuntoventaConstantesFunciones.resaltarid_tipo_interes_tarjetaFormaPagoPuntoVenta);}
		if(this.formapagopuntoventaConstantesFunciones.resaltarid_tipo_pago_tarjetaFormaPagoPuntoVenta!=null && this.jInternalFrameDetalleFormFormaPagoPuntoVenta!=null) {this.jInternalFrameDetalleFormFormaPagoPuntoVenta.jComboBoxid_tipo_pago_tarjetaFormaPagoPuntoVenta.setBorder(this.formapagopuntoventaConstantesFunciones.resaltarid_tipo_pago_tarjetaFormaPagoPuntoVenta);}
		if(this.formapagopuntoventaConstantesFunciones.resaltarid_conexionFormaPagoPuntoVenta!=null && this.jInternalFrameDetalleFormFormaPagoPuntoVenta!=null) {this.jInternalFrameDetalleFormFormaPagoPuntoVenta.jComboBoxid_conexionFormaPagoPuntoVenta.setBorder(this.formapagopuntoventaConstantesFunciones.resaltarid_conexionFormaPagoPuntoVenta);}
		if(this.formapagopuntoventaConstantesFunciones.resaltarid_mesFormaPagoPuntoVenta!=null && this.jInternalFrameDetalleFormFormaPagoPuntoVenta!=null) {this.jInternalFrameDetalleFormFormaPagoPuntoVenta.jComboBoxid_mesFormaPagoPuntoVenta.setBorder(this.formapagopuntoventaConstantesFunciones.resaltarid_mesFormaPagoPuntoVenta);}
		if(this.formapagopuntoventaConstantesFunciones.resaltarnumeroFormaPagoPuntoVenta!=null && this.jInternalFrameDetalleFormFormaPagoPuntoVenta!=null) {this.jInternalFrameDetalleFormFormaPagoPuntoVenta.jTextFieldnumeroFormaPagoPuntoVenta.setBorder(this.formapagopuntoventaConstantesFunciones.resaltarnumeroFormaPagoPuntoVenta);}
		if(this.formapagopuntoventaConstantesFunciones.resaltartarjeta_habienteFormaPagoPuntoVenta!=null && this.jInternalFrameDetalleFormFormaPagoPuntoVenta!=null) {this.jInternalFrameDetalleFormFormaPagoPuntoVenta.jTextAreatarjeta_habienteFormaPagoPuntoVenta.setBorder(this.formapagopuntoventaConstantesFunciones.resaltartarjeta_habienteFormaPagoPuntoVenta);}
		if(this.formapagopuntoventaConstantesFunciones.resaltarautorizacionFormaPagoPuntoVenta!=null && this.jInternalFrameDetalleFormFormaPagoPuntoVenta!=null) {this.jInternalFrameDetalleFormFormaPagoPuntoVenta.jTextAreaautorizacionFormaPagoPuntoVenta.setBorder(this.formapagopuntoventaConstantesFunciones.resaltarautorizacionFormaPagoPuntoVenta);}
		if(this.formapagopuntoventaConstantesFunciones.resaltarvoucherFormaPagoPuntoVenta!=null && this.jInternalFrameDetalleFormFormaPagoPuntoVenta!=null) {this.jInternalFrameDetalleFormFormaPagoPuntoVenta.jTextFieldvoucherFormaPagoPuntoVenta.setBorder(this.formapagopuntoventaConstantesFunciones.resaltarvoucherFormaPagoPuntoVenta);}
		if(this.formapagopuntoventaConstantesFunciones.resaltarloteFormaPagoPuntoVenta!=null && this.jInternalFrameDetalleFormFormaPagoPuntoVenta!=null) {this.jInternalFrameDetalleFormFormaPagoPuntoVenta.jTextFieldloteFormaPagoPuntoVenta.setBorder(this.formapagopuntoventaConstantesFunciones.resaltarloteFormaPagoPuntoVenta);}
		if(this.formapagopuntoventaConstantesFunciones.resaltarcuotaFormaPagoPuntoVenta!=null && this.jInternalFrameDetalleFormFormaPagoPuntoVenta!=null) {this.jInternalFrameDetalleFormFormaPagoPuntoVenta.jTextFieldcuotaFormaPagoPuntoVenta.setBorder(this.formapagopuntoventaConstantesFunciones.resaltarcuotaFormaPagoPuntoVenta);}
		if(this.formapagopuntoventaConstantesFunciones.resaltarvalor_retencionFormaPagoPuntoVenta!=null && this.jInternalFrameDetalleFormFormaPagoPuntoVenta!=null) {this.jInternalFrameDetalleFormFormaPagoPuntoVenta.jTextFieldvalor_retencionFormaPagoPuntoVenta.setBorder(this.formapagopuntoventaConstantesFunciones.resaltarvalor_retencionFormaPagoPuntoVenta);}
		if(this.formapagopuntoventaConstantesFunciones.resaltarvalor_comisionFormaPagoPuntoVenta!=null && this.jInternalFrameDetalleFormFormaPagoPuntoVenta!=null) {this.jInternalFrameDetalleFormFormaPagoPuntoVenta.jTextFieldvalor_comisionFormaPagoPuntoVenta.setBorder(this.formapagopuntoventaConstantesFunciones.resaltarvalor_comisionFormaPagoPuntoVenta);}
		if(this.formapagopuntoventaConstantesFunciones.resaltarvalor_calculadoFormaPagoPuntoVenta!=null && this.jInternalFrameDetalleFormFormaPagoPuntoVenta!=null) {this.jInternalFrameDetalleFormFormaPagoPuntoVenta.jTextFieldvalor_calculadoFormaPagoPuntoVenta.setBorder(this.formapagopuntoventaConstantesFunciones.resaltarvalor_calculadoFormaPagoPuntoVenta);}
		if(this.formapagopuntoventaConstantesFunciones.resaltarvalor_canceladoFormaPagoPuntoVenta!=null && this.jInternalFrameDetalleFormFormaPagoPuntoVenta!=null) {this.jInternalFrameDetalleFormFormaPagoPuntoVenta.jTextFieldvalor_canceladoFormaPagoPuntoVenta.setBorder(this.formapagopuntoventaConstantesFunciones.resaltarvalor_canceladoFormaPagoPuntoVenta);}
		if(this.formapagopuntoventaConstantesFunciones.resaltarvalor_difiereFormaPagoPuntoVenta!=null && this.jInternalFrameDetalleFormFormaPagoPuntoVenta!=null) {this.jInternalFrameDetalleFormFormaPagoPuntoVenta.jTextFieldvalor_difiereFormaPagoPuntoVenta.setBorder(this.formapagopuntoventaConstantesFunciones.resaltarvalor_difiereFormaPagoPuntoVenta);}
		if(this.formapagopuntoventaConstantesFunciones.resaltarnumero_retencionFormaPagoPuntoVenta!=null && this.jInternalFrameDetalleFormFormaPagoPuntoVenta!=null) {this.jInternalFrameDetalleFormFormaPagoPuntoVenta.jTextFieldnumero_retencionFormaPagoPuntoVenta.setBorder(this.formapagopuntoventaConstantesFunciones.resaltarnumero_retencionFormaPagoPuntoVenta);}
		if(this.formapagopuntoventaConstantesFunciones.resaltarnumero_liquidacionFormaPagoPuntoVenta!=null && this.jInternalFrameDetalleFormFormaPagoPuntoVenta!=null) {this.jInternalFrameDetalleFormFormaPagoPuntoVenta.jTextFieldnumero_liquidacionFormaPagoPuntoVenta.setBorder(this.formapagopuntoventaConstantesFunciones.resaltarnumero_liquidacionFormaPagoPuntoVenta);}
		if(this.formapagopuntoventaConstantesFunciones.resaltarid_anioFormaPagoPuntoVenta!=null && this.jInternalFrameDetalleFormFormaPagoPuntoVenta!=null) {this.jInternalFrameDetalleFormFormaPagoPuntoVenta.jComboBoxid_anioFormaPagoPuntoVenta.setBorder(this.formapagopuntoventaConstantesFunciones.resaltarid_anioFormaPagoPuntoVenta);}
		if(this.formapagopuntoventaConstantesFunciones.resaltarid_cuenta_contableFormaPagoPuntoVenta!=null && this.jInternalFrameDetalleFormFormaPagoPuntoVenta!=null) {this.jInternalFrameDetalleFormFormaPagoPuntoVenta.jComboBoxid_cuenta_contableFormaPagoPuntoVenta.setBorder(this.formapagopuntoventaConstantesFunciones.resaltarid_cuenta_contableFormaPagoPuntoVenta);}
		if(this.formapagopuntoventaConstantesFunciones.resaltarid_asiento_contableFormaPagoPuntoVenta!=null && this.jInternalFrameDetalleFormFormaPagoPuntoVenta!=null) {this.jInternalFrameDetalleFormFormaPagoPuntoVenta.jComboBoxid_asiento_contableFormaPagoPuntoVenta.setBorder(this.formapagopuntoventaConstantesFunciones.resaltarid_asiento_contableFormaPagoPuntoVenta);}
	}
	
	public void updateVisibilidadResaltarControlesFormularioFormaPagoPuntoVenta() throws Exception {		
		if(this.jInternalFrameDetalleFormFormaPagoPuntoVenta==null) { //if(!this.conCargarFormDetalle) {
			this.inicializarFormDetalle();
		}
		
		if(this.jInternalFrameDetalleFormFormaPagoPuntoVenta!=null) {
	
		//this.jInternalFrameDetalleFormFormaPagoPuntoVenta.jLabelidFormaPagoPuntoVenta.setVisible(this.formapagopuntoventaConstantesFunciones.mostraridFormaPagoPuntoVenta);
		this.jInternalFrameDetalleFormFormaPagoPuntoVenta.jPanelidFormaPagoPuntoVenta.setVisible(this.formapagopuntoventaConstantesFunciones.mostraridFormaPagoPuntoVenta);
		//this.jInternalFrameDetalleFormFormaPagoPuntoVenta.jComboBoxid_empresaFormaPagoPuntoVenta.setVisible(this.formapagopuntoventaConstantesFunciones.mostrarid_empresaFormaPagoPuntoVenta);
		this.jInternalFrameDetalleFormFormaPagoPuntoVenta.jPanelid_empresaFormaPagoPuntoVenta.setVisible(this.formapagopuntoventaConstantesFunciones.mostrarid_empresaFormaPagoPuntoVenta);
		//this.jInternalFrameDetalleFormFormaPagoPuntoVenta.jComboBoxid_sucursalFormaPagoPuntoVenta.setVisible(this.formapagopuntoventaConstantesFunciones.mostrarid_sucursalFormaPagoPuntoVenta);
		this.jInternalFrameDetalleFormFormaPagoPuntoVenta.jPanelid_sucursalFormaPagoPuntoVenta.setVisible(this.formapagopuntoventaConstantesFunciones.mostrarid_sucursalFormaPagoPuntoVenta);
		//this.jInternalFrameDetalleFormFormaPagoPuntoVenta.jComboBoxid_ejercicioFormaPagoPuntoVenta.setVisible(this.formapagopuntoventaConstantesFunciones.mostrarid_ejercicioFormaPagoPuntoVenta);
		this.jInternalFrameDetalleFormFormaPagoPuntoVenta.jPanelid_ejercicioFormaPagoPuntoVenta.setVisible(this.formapagopuntoventaConstantesFunciones.mostrarid_ejercicioFormaPagoPuntoVenta);
		//this.jInternalFrameDetalleFormFormaPagoPuntoVenta.jComboBoxid_periodoFormaPagoPuntoVenta.setVisible(this.formapagopuntoventaConstantesFunciones.mostrarid_periodoFormaPagoPuntoVenta);
		this.jInternalFrameDetalleFormFormaPagoPuntoVenta.jPanelid_periodoFormaPagoPuntoVenta.setVisible(this.formapagopuntoventaConstantesFunciones.mostrarid_periodoFormaPagoPuntoVenta);
		//this.jInternalFrameDetalleFormFormaPagoPuntoVenta.jComboBoxid_factura_punto_ventaFormaPagoPuntoVenta.setVisible(this.formapagopuntoventaConstantesFunciones.mostrarid_factura_punto_ventaFormaPagoPuntoVenta);
		this.jInternalFrameDetalleFormFormaPagoPuntoVenta.jPanelid_factura_punto_ventaFormaPagoPuntoVenta.setVisible(this.formapagopuntoventaConstantesFunciones.mostrarid_factura_punto_ventaFormaPagoPuntoVenta);
		//this.jInternalFrameDetalleFormFormaPagoPuntoVenta.jComboBoxid_tipo_forma_pagoFormaPagoPuntoVenta.setVisible(this.formapagopuntoventaConstantesFunciones.mostrarid_tipo_forma_pagoFormaPagoPuntoVenta);
		this.jInternalFrameDetalleFormFormaPagoPuntoVenta.jPanelid_tipo_forma_pagoFormaPagoPuntoVenta.setVisible(this.formapagopuntoventaConstantesFunciones.mostrarid_tipo_forma_pagoFormaPagoPuntoVenta);
		//this.jInternalFrameDetalleFormFormaPagoPuntoVenta.jTextFieldporcentajeFormaPagoPuntoVenta.setVisible(this.formapagopuntoventaConstantesFunciones.mostrarporcentajeFormaPagoPuntoVenta);
		this.jInternalFrameDetalleFormFormaPagoPuntoVenta.jPanelporcentajeFormaPagoPuntoVenta.setVisible(this.formapagopuntoventaConstantesFunciones.mostrarporcentajeFormaPagoPuntoVenta);
		//this.jInternalFrameDetalleFormFormaPagoPuntoVenta.jTextFieldvalorFormaPagoPuntoVenta.setVisible(this.formapagopuntoventaConstantesFunciones.mostrarvalorFormaPagoPuntoVenta);
		this.jInternalFrameDetalleFormFormaPagoPuntoVenta.jPanelvalorFormaPagoPuntoVenta.setVisible(this.formapagopuntoventaConstantesFunciones.mostrarvalorFormaPagoPuntoVenta);
		//this.jInternalFrameDetalleFormFormaPagoPuntoVenta.jDateChooserfechaFormaPagoPuntoVenta.setVisible(this.formapagopuntoventaConstantesFunciones.mostrarfechaFormaPagoPuntoVenta);
		this.jInternalFrameDetalleFormFormaPagoPuntoVenta.jPanelfechaFormaPagoPuntoVenta.setVisible(this.formapagopuntoventaConstantesFunciones.mostrarfechaFormaPagoPuntoVenta);
		//this.jInternalFrameDetalleFormFormaPagoPuntoVenta.jTextAreadescripcionFormaPagoPuntoVenta.setVisible(this.formapagopuntoventaConstantesFunciones.mostrardescripcionFormaPagoPuntoVenta);
		this.jInternalFrameDetalleFormFormaPagoPuntoVenta.jPaneldescripcionFormaPagoPuntoVenta.setVisible(this.formapagopuntoventaConstantesFunciones.mostrardescripcionFormaPagoPuntoVenta);
		//this.jInternalFrameDetalleFormFormaPagoPuntoVenta.jDateChooserfecha_inicioFormaPagoPuntoVenta.setVisible(this.formapagopuntoventaConstantesFunciones.mostrarfecha_inicioFormaPagoPuntoVenta);
		this.jInternalFrameDetalleFormFormaPagoPuntoVenta.jPanelfecha_inicioFormaPagoPuntoVenta.setVisible(this.formapagopuntoventaConstantesFunciones.mostrarfecha_inicioFormaPagoPuntoVenta);
		//this.jInternalFrameDetalleFormFormaPagoPuntoVenta.jTextFieldnumero_dias_plazoFormaPagoPuntoVenta.setVisible(this.formapagopuntoventaConstantesFunciones.mostrarnumero_dias_plazoFormaPagoPuntoVenta);
		this.jInternalFrameDetalleFormFormaPagoPuntoVenta.jPanelnumero_dias_plazoFormaPagoPuntoVenta.setVisible(this.formapagopuntoventaConstantesFunciones.mostrarnumero_dias_plazoFormaPagoPuntoVenta);
		//this.jInternalFrameDetalleFormFormaPagoPuntoVenta.jDateChooserfecha_finFormaPagoPuntoVenta.setVisible(this.formapagopuntoventaConstantesFunciones.mostrarfecha_finFormaPagoPuntoVenta);
		this.jInternalFrameDetalleFormFormaPagoPuntoVenta.jPanelfecha_finFormaPagoPuntoVenta.setVisible(this.formapagopuntoventaConstantesFunciones.mostrarfecha_finFormaPagoPuntoVenta);
		//this.jInternalFrameDetalleFormFormaPagoPuntoVenta.jComboBoxid_bancoFormaPagoPuntoVenta.setVisible(this.formapagopuntoventaConstantesFunciones.mostrarid_bancoFormaPagoPuntoVenta);
		this.jInternalFrameDetalleFormFormaPagoPuntoVenta.jPanelid_bancoFormaPagoPuntoVenta.setVisible(this.formapagopuntoventaConstantesFunciones.mostrarid_bancoFormaPagoPuntoVenta);
		//this.jInternalFrameDetalleFormFormaPagoPuntoVenta.jComboBoxid_cuenta_banco_pun_venFormaPagoPuntoVenta.setVisible(this.formapagopuntoventaConstantesFunciones.mostrarid_cuenta_banco_pun_venFormaPagoPuntoVenta);
		this.jInternalFrameDetalleFormFormaPagoPuntoVenta.jPanelid_cuenta_banco_pun_venFormaPagoPuntoVenta.setVisible(this.formapagopuntoventaConstantesFunciones.mostrarid_cuenta_banco_pun_venFormaPagoPuntoVenta);
		//this.jInternalFrameDetalleFormFormaPagoPuntoVenta.jComboBoxid_tipo_riesgo_chequeFormaPagoPuntoVenta.setVisible(this.formapagopuntoventaConstantesFunciones.mostrarid_tipo_riesgo_chequeFormaPagoPuntoVenta);
		this.jInternalFrameDetalleFormFormaPagoPuntoVenta.jPanelid_tipo_riesgo_chequeFormaPagoPuntoVenta.setVisible(this.formapagopuntoventaConstantesFunciones.mostrarid_tipo_riesgo_chequeFormaPagoPuntoVenta);
		//this.jInternalFrameDetalleFormFormaPagoPuntoVenta.jTextFieldnumero_cuentaFormaPagoPuntoVenta.setVisible(this.formapagopuntoventaConstantesFunciones.mostrarnumero_cuentaFormaPagoPuntoVenta);
		this.jInternalFrameDetalleFormFormaPagoPuntoVenta.jPanelnumero_cuentaFormaPagoPuntoVenta.setVisible(this.formapagopuntoventaConstantesFunciones.mostrarnumero_cuentaFormaPagoPuntoVenta);
		//this.jInternalFrameDetalleFormFormaPagoPuntoVenta.jTextFieldnumero_chequeFormaPagoPuntoVenta.setVisible(this.formapagopuntoventaConstantesFunciones.mostrarnumero_chequeFormaPagoPuntoVenta);
		this.jInternalFrameDetalleFormFormaPagoPuntoVenta.jPanelnumero_chequeFormaPagoPuntoVenta.setVisible(this.formapagopuntoventaConstantesFunciones.mostrarnumero_chequeFormaPagoPuntoVenta);
		//this.jInternalFrameDetalleFormFormaPagoPuntoVenta.jTextAreagiradorFormaPagoPuntoVenta.setVisible(this.formapagopuntoventaConstantesFunciones.mostrargiradorFormaPagoPuntoVenta);
		this.jInternalFrameDetalleFormFormaPagoPuntoVenta.jPanelgiradorFormaPagoPuntoVenta.setVisible(this.formapagopuntoventaConstantesFunciones.mostrargiradorFormaPagoPuntoVenta);
		//this.jInternalFrameDetalleFormFormaPagoPuntoVenta.jComboBoxid_banco_tarjetaFormaPagoPuntoVenta.setVisible(this.formapagopuntoventaConstantesFunciones.mostrarid_banco_tarjetaFormaPagoPuntoVenta);
		this.jInternalFrameDetalleFormFormaPagoPuntoVenta.jPanelid_banco_tarjetaFormaPagoPuntoVenta.setVisible(this.formapagopuntoventaConstantesFunciones.mostrarid_banco_tarjetaFormaPagoPuntoVenta);
		//this.jInternalFrameDetalleFormFormaPagoPuntoVenta.jComboBoxid_tarjeta_creditoFormaPagoPuntoVenta.setVisible(this.formapagopuntoventaConstantesFunciones.mostrarid_tarjeta_creditoFormaPagoPuntoVenta);
		this.jInternalFrameDetalleFormFormaPagoPuntoVenta.jPanelid_tarjeta_creditoFormaPagoPuntoVenta.setVisible(this.formapagopuntoventaConstantesFunciones.mostrarid_tarjeta_creditoFormaPagoPuntoVenta);
		//this.jInternalFrameDetalleFormFormaPagoPuntoVenta.jComboBoxid_tipo_interes_tarjetaFormaPagoPuntoVenta.setVisible(this.formapagopuntoventaConstantesFunciones.mostrarid_tipo_interes_tarjetaFormaPagoPuntoVenta);
		this.jInternalFrameDetalleFormFormaPagoPuntoVenta.jPanelid_tipo_interes_tarjetaFormaPagoPuntoVenta.setVisible(this.formapagopuntoventaConstantesFunciones.mostrarid_tipo_interes_tarjetaFormaPagoPuntoVenta);
		//this.jInternalFrameDetalleFormFormaPagoPuntoVenta.jComboBoxid_tipo_pago_tarjetaFormaPagoPuntoVenta.setVisible(this.formapagopuntoventaConstantesFunciones.mostrarid_tipo_pago_tarjetaFormaPagoPuntoVenta);
		this.jInternalFrameDetalleFormFormaPagoPuntoVenta.jPanelid_tipo_pago_tarjetaFormaPagoPuntoVenta.setVisible(this.formapagopuntoventaConstantesFunciones.mostrarid_tipo_pago_tarjetaFormaPagoPuntoVenta);
		//this.jInternalFrameDetalleFormFormaPagoPuntoVenta.jComboBoxid_conexionFormaPagoPuntoVenta.setVisible(this.formapagopuntoventaConstantesFunciones.mostrarid_conexionFormaPagoPuntoVenta);
		this.jInternalFrameDetalleFormFormaPagoPuntoVenta.jPanelid_conexionFormaPagoPuntoVenta.setVisible(this.formapagopuntoventaConstantesFunciones.mostrarid_conexionFormaPagoPuntoVenta);
		//this.jInternalFrameDetalleFormFormaPagoPuntoVenta.jComboBoxid_mesFormaPagoPuntoVenta.setVisible(this.formapagopuntoventaConstantesFunciones.mostrarid_mesFormaPagoPuntoVenta);
		this.jInternalFrameDetalleFormFormaPagoPuntoVenta.jPanelid_mesFormaPagoPuntoVenta.setVisible(this.formapagopuntoventaConstantesFunciones.mostrarid_mesFormaPagoPuntoVenta);
		//this.jInternalFrameDetalleFormFormaPagoPuntoVenta.jTextFieldnumeroFormaPagoPuntoVenta.setVisible(this.formapagopuntoventaConstantesFunciones.mostrarnumeroFormaPagoPuntoVenta);
		this.jInternalFrameDetalleFormFormaPagoPuntoVenta.jPanelnumeroFormaPagoPuntoVenta.setVisible(this.formapagopuntoventaConstantesFunciones.mostrarnumeroFormaPagoPuntoVenta);
		//this.jInternalFrameDetalleFormFormaPagoPuntoVenta.jTextAreatarjeta_habienteFormaPagoPuntoVenta.setVisible(this.formapagopuntoventaConstantesFunciones.mostrartarjeta_habienteFormaPagoPuntoVenta);
		this.jInternalFrameDetalleFormFormaPagoPuntoVenta.jPaneltarjeta_habienteFormaPagoPuntoVenta.setVisible(this.formapagopuntoventaConstantesFunciones.mostrartarjeta_habienteFormaPagoPuntoVenta);
		//this.jInternalFrameDetalleFormFormaPagoPuntoVenta.jTextAreaautorizacionFormaPagoPuntoVenta.setVisible(this.formapagopuntoventaConstantesFunciones.mostrarautorizacionFormaPagoPuntoVenta);
		this.jInternalFrameDetalleFormFormaPagoPuntoVenta.jPanelautorizacionFormaPagoPuntoVenta.setVisible(this.formapagopuntoventaConstantesFunciones.mostrarautorizacionFormaPagoPuntoVenta);
		//this.jInternalFrameDetalleFormFormaPagoPuntoVenta.jTextFieldvoucherFormaPagoPuntoVenta.setVisible(this.formapagopuntoventaConstantesFunciones.mostrarvoucherFormaPagoPuntoVenta);
		this.jInternalFrameDetalleFormFormaPagoPuntoVenta.jPanelvoucherFormaPagoPuntoVenta.setVisible(this.formapagopuntoventaConstantesFunciones.mostrarvoucherFormaPagoPuntoVenta);
		//this.jInternalFrameDetalleFormFormaPagoPuntoVenta.jTextFieldloteFormaPagoPuntoVenta.setVisible(this.formapagopuntoventaConstantesFunciones.mostrarloteFormaPagoPuntoVenta);
		this.jInternalFrameDetalleFormFormaPagoPuntoVenta.jPanelloteFormaPagoPuntoVenta.setVisible(this.formapagopuntoventaConstantesFunciones.mostrarloteFormaPagoPuntoVenta);
		//this.jInternalFrameDetalleFormFormaPagoPuntoVenta.jTextFieldcuotaFormaPagoPuntoVenta.setVisible(this.formapagopuntoventaConstantesFunciones.mostrarcuotaFormaPagoPuntoVenta);
		this.jInternalFrameDetalleFormFormaPagoPuntoVenta.jPanelcuotaFormaPagoPuntoVenta.setVisible(this.formapagopuntoventaConstantesFunciones.mostrarcuotaFormaPagoPuntoVenta);
		//this.jInternalFrameDetalleFormFormaPagoPuntoVenta.jTextFieldvalor_retencionFormaPagoPuntoVenta.setVisible(this.formapagopuntoventaConstantesFunciones.mostrarvalor_retencionFormaPagoPuntoVenta);
		this.jInternalFrameDetalleFormFormaPagoPuntoVenta.jPanelvalor_retencionFormaPagoPuntoVenta.setVisible(this.formapagopuntoventaConstantesFunciones.mostrarvalor_retencionFormaPagoPuntoVenta);
		//this.jInternalFrameDetalleFormFormaPagoPuntoVenta.jTextFieldvalor_comisionFormaPagoPuntoVenta.setVisible(this.formapagopuntoventaConstantesFunciones.mostrarvalor_comisionFormaPagoPuntoVenta);
		this.jInternalFrameDetalleFormFormaPagoPuntoVenta.jPanelvalor_comisionFormaPagoPuntoVenta.setVisible(this.formapagopuntoventaConstantesFunciones.mostrarvalor_comisionFormaPagoPuntoVenta);
		//this.jInternalFrameDetalleFormFormaPagoPuntoVenta.jTextFieldvalor_calculadoFormaPagoPuntoVenta.setVisible(this.formapagopuntoventaConstantesFunciones.mostrarvalor_calculadoFormaPagoPuntoVenta);
		this.jInternalFrameDetalleFormFormaPagoPuntoVenta.jPanelvalor_calculadoFormaPagoPuntoVenta.setVisible(this.formapagopuntoventaConstantesFunciones.mostrarvalor_calculadoFormaPagoPuntoVenta);
		//this.jInternalFrameDetalleFormFormaPagoPuntoVenta.jTextFieldvalor_canceladoFormaPagoPuntoVenta.setVisible(this.formapagopuntoventaConstantesFunciones.mostrarvalor_canceladoFormaPagoPuntoVenta);
		this.jInternalFrameDetalleFormFormaPagoPuntoVenta.jPanelvalor_canceladoFormaPagoPuntoVenta.setVisible(this.formapagopuntoventaConstantesFunciones.mostrarvalor_canceladoFormaPagoPuntoVenta);
		//this.jInternalFrameDetalleFormFormaPagoPuntoVenta.jTextFieldvalor_difiereFormaPagoPuntoVenta.setVisible(this.formapagopuntoventaConstantesFunciones.mostrarvalor_difiereFormaPagoPuntoVenta);
		this.jInternalFrameDetalleFormFormaPagoPuntoVenta.jPanelvalor_difiereFormaPagoPuntoVenta.setVisible(this.formapagopuntoventaConstantesFunciones.mostrarvalor_difiereFormaPagoPuntoVenta);
		//this.jInternalFrameDetalleFormFormaPagoPuntoVenta.jTextFieldnumero_retencionFormaPagoPuntoVenta.setVisible(this.formapagopuntoventaConstantesFunciones.mostrarnumero_retencionFormaPagoPuntoVenta);
		this.jInternalFrameDetalleFormFormaPagoPuntoVenta.jPanelnumero_retencionFormaPagoPuntoVenta.setVisible(this.formapagopuntoventaConstantesFunciones.mostrarnumero_retencionFormaPagoPuntoVenta);
		//this.jInternalFrameDetalleFormFormaPagoPuntoVenta.jTextFieldnumero_liquidacionFormaPagoPuntoVenta.setVisible(this.formapagopuntoventaConstantesFunciones.mostrarnumero_liquidacionFormaPagoPuntoVenta);
		this.jInternalFrameDetalleFormFormaPagoPuntoVenta.jPanelnumero_liquidacionFormaPagoPuntoVenta.setVisible(this.formapagopuntoventaConstantesFunciones.mostrarnumero_liquidacionFormaPagoPuntoVenta);
		//this.jInternalFrameDetalleFormFormaPagoPuntoVenta.jComboBoxid_anioFormaPagoPuntoVenta.setVisible(this.formapagopuntoventaConstantesFunciones.mostrarid_anioFormaPagoPuntoVenta);
		this.jInternalFrameDetalleFormFormaPagoPuntoVenta.jPanelid_anioFormaPagoPuntoVenta.setVisible(this.formapagopuntoventaConstantesFunciones.mostrarid_anioFormaPagoPuntoVenta);
		//this.jInternalFrameDetalleFormFormaPagoPuntoVenta.jComboBoxid_cuenta_contableFormaPagoPuntoVenta.setVisible(this.formapagopuntoventaConstantesFunciones.mostrarid_cuenta_contableFormaPagoPuntoVenta);
		this.jInternalFrameDetalleFormFormaPagoPuntoVenta.jPanelid_cuenta_contableFormaPagoPuntoVenta.setVisible(this.formapagopuntoventaConstantesFunciones.mostrarid_cuenta_contableFormaPagoPuntoVenta);
			this.jInternalFrameDetalleFormFormaPagoPuntoVenta.jButtonid_cuenta_contableFormaPagoPuntoVenta.setVisible(this.formapagopuntoventaConstantesFunciones.mostrarid_cuenta_contableFormaPagoPuntoVenta);
		//this.jInternalFrameDetalleFormFormaPagoPuntoVenta.jComboBoxid_asiento_contableFormaPagoPuntoVenta.setVisible(this.formapagopuntoventaConstantesFunciones.mostrarid_asiento_contableFormaPagoPuntoVenta);
		this.jInternalFrameDetalleFormFormaPagoPuntoVenta.jPanelid_asiento_contableFormaPagoPuntoVenta.setVisible(this.formapagopuntoventaConstantesFunciones.mostrarid_asiento_contableFormaPagoPuntoVenta);
			this.jInternalFrameDetalleFormFormaPagoPuntoVenta.jButtonid_asiento_contableFormaPagoPuntoVenta.setVisible(this.formapagopuntoventaConstantesFunciones.mostrarid_asiento_contableFormaPagoPuntoVenta);
		}
	}
	
	public void updateHabilitarResaltarControlesFormularioFormaPagoPuntoVenta() throws Exception {
		if(this.jInternalFrameDetalleFormFormaPagoPuntoVenta==null) { //if(!this.conCargarFormDetalle) {
			this.inicializarFormDetalle();
		}
		
		if(this.jInternalFrameDetalleFormFormaPagoPuntoVenta!=null) {
	
		this.jInternalFrameDetalleFormFormaPagoPuntoVenta.jLabelidFormaPagoPuntoVenta.setEnabled(this.formapagopuntoventaConstantesFunciones.activaridFormaPagoPuntoVenta);
		this.jInternalFrameDetalleFormFormaPagoPuntoVenta.jComboBoxid_empresaFormaPagoPuntoVenta.setEnabled(this.formapagopuntoventaConstantesFunciones.activarid_empresaFormaPagoPuntoVenta);
		this.jInternalFrameDetalleFormFormaPagoPuntoVenta.jComboBoxid_sucursalFormaPagoPuntoVenta.setEnabled(this.formapagopuntoventaConstantesFunciones.activarid_sucursalFormaPagoPuntoVenta);
		this.jInternalFrameDetalleFormFormaPagoPuntoVenta.jComboBoxid_ejercicioFormaPagoPuntoVenta.setEnabled(this.formapagopuntoventaConstantesFunciones.activarid_ejercicioFormaPagoPuntoVenta);
		this.jInternalFrameDetalleFormFormaPagoPuntoVenta.jComboBoxid_periodoFormaPagoPuntoVenta.setEnabled(this.formapagopuntoventaConstantesFunciones.activarid_periodoFormaPagoPuntoVenta);
		this.jInternalFrameDetalleFormFormaPagoPuntoVenta.jComboBoxid_factura_punto_ventaFormaPagoPuntoVenta.setEnabled(this.formapagopuntoventaConstantesFunciones.activarid_factura_punto_ventaFormaPagoPuntoVenta);
		this.jInternalFrameDetalleFormFormaPagoPuntoVenta.jComboBoxid_tipo_forma_pagoFormaPagoPuntoVenta.setEnabled(this.formapagopuntoventaConstantesFunciones.activarid_tipo_forma_pagoFormaPagoPuntoVenta);
		this.jInternalFrameDetalleFormFormaPagoPuntoVenta.jTextFieldporcentajeFormaPagoPuntoVenta.setEnabled(this.formapagopuntoventaConstantesFunciones.activarporcentajeFormaPagoPuntoVenta);
		this.jInternalFrameDetalleFormFormaPagoPuntoVenta.jTextFieldvalorFormaPagoPuntoVenta.setEnabled(this.formapagopuntoventaConstantesFunciones.activarvalorFormaPagoPuntoVenta);
		this.jInternalFrameDetalleFormFormaPagoPuntoVenta.jDateChooserfechaFormaPagoPuntoVenta.setEnabled(this.formapagopuntoventaConstantesFunciones.activarfechaFormaPagoPuntoVenta);
		this.jInternalFrameDetalleFormFormaPagoPuntoVenta.jTextAreadescripcionFormaPagoPuntoVenta.setEnabled(this.formapagopuntoventaConstantesFunciones.activardescripcionFormaPagoPuntoVenta);
		this.jInternalFrameDetalleFormFormaPagoPuntoVenta.jDateChooserfecha_inicioFormaPagoPuntoVenta.setEnabled(this.formapagopuntoventaConstantesFunciones.activarfecha_inicioFormaPagoPuntoVenta);
		this.jInternalFrameDetalleFormFormaPagoPuntoVenta.jTextFieldnumero_dias_plazoFormaPagoPuntoVenta.setEnabled(this.formapagopuntoventaConstantesFunciones.activarnumero_dias_plazoFormaPagoPuntoVenta);
		this.jInternalFrameDetalleFormFormaPagoPuntoVenta.jDateChooserfecha_finFormaPagoPuntoVenta.setEnabled(this.formapagopuntoventaConstantesFunciones.activarfecha_finFormaPagoPuntoVenta);
		this.jInternalFrameDetalleFormFormaPagoPuntoVenta.jComboBoxid_bancoFormaPagoPuntoVenta.setEnabled(this.formapagopuntoventaConstantesFunciones.activarid_bancoFormaPagoPuntoVenta);
		this.jInternalFrameDetalleFormFormaPagoPuntoVenta.jComboBoxid_cuenta_banco_pun_venFormaPagoPuntoVenta.setEnabled(this.formapagopuntoventaConstantesFunciones.activarid_cuenta_banco_pun_venFormaPagoPuntoVenta);
		this.jInternalFrameDetalleFormFormaPagoPuntoVenta.jComboBoxid_tipo_riesgo_chequeFormaPagoPuntoVenta.setEnabled(this.formapagopuntoventaConstantesFunciones.activarid_tipo_riesgo_chequeFormaPagoPuntoVenta);
		this.jInternalFrameDetalleFormFormaPagoPuntoVenta.jTextFieldnumero_cuentaFormaPagoPuntoVenta.setEnabled(this.formapagopuntoventaConstantesFunciones.activarnumero_cuentaFormaPagoPuntoVenta);
		this.jInternalFrameDetalleFormFormaPagoPuntoVenta.jTextFieldnumero_chequeFormaPagoPuntoVenta.setEnabled(this.formapagopuntoventaConstantesFunciones.activarnumero_chequeFormaPagoPuntoVenta);
		this.jInternalFrameDetalleFormFormaPagoPuntoVenta.jTextAreagiradorFormaPagoPuntoVenta.setEnabled(this.formapagopuntoventaConstantesFunciones.activargiradorFormaPagoPuntoVenta);
		this.jInternalFrameDetalleFormFormaPagoPuntoVenta.jComboBoxid_banco_tarjetaFormaPagoPuntoVenta.setEnabled(this.formapagopuntoventaConstantesFunciones.activarid_banco_tarjetaFormaPagoPuntoVenta);
		this.jInternalFrameDetalleFormFormaPagoPuntoVenta.jComboBoxid_tarjeta_creditoFormaPagoPuntoVenta.setEnabled(this.formapagopuntoventaConstantesFunciones.activarid_tarjeta_creditoFormaPagoPuntoVenta);
		this.jInternalFrameDetalleFormFormaPagoPuntoVenta.jComboBoxid_tipo_interes_tarjetaFormaPagoPuntoVenta.setEnabled(this.formapagopuntoventaConstantesFunciones.activarid_tipo_interes_tarjetaFormaPagoPuntoVenta);
		this.jInternalFrameDetalleFormFormaPagoPuntoVenta.jComboBoxid_tipo_pago_tarjetaFormaPagoPuntoVenta.setEnabled(this.formapagopuntoventaConstantesFunciones.activarid_tipo_pago_tarjetaFormaPagoPuntoVenta);
		this.jInternalFrameDetalleFormFormaPagoPuntoVenta.jComboBoxid_conexionFormaPagoPuntoVenta.setEnabled(this.formapagopuntoventaConstantesFunciones.activarid_conexionFormaPagoPuntoVenta);
		this.jInternalFrameDetalleFormFormaPagoPuntoVenta.jComboBoxid_mesFormaPagoPuntoVenta.setEnabled(this.formapagopuntoventaConstantesFunciones.activarid_mesFormaPagoPuntoVenta);
		this.jInternalFrameDetalleFormFormaPagoPuntoVenta.jTextFieldnumeroFormaPagoPuntoVenta.setEnabled(this.formapagopuntoventaConstantesFunciones.activarnumeroFormaPagoPuntoVenta);
		this.jInternalFrameDetalleFormFormaPagoPuntoVenta.jTextAreatarjeta_habienteFormaPagoPuntoVenta.setEnabled(this.formapagopuntoventaConstantesFunciones.activartarjeta_habienteFormaPagoPuntoVenta);
		this.jInternalFrameDetalleFormFormaPagoPuntoVenta.jTextAreaautorizacionFormaPagoPuntoVenta.setEnabled(this.formapagopuntoventaConstantesFunciones.activarautorizacionFormaPagoPuntoVenta);
		this.jInternalFrameDetalleFormFormaPagoPuntoVenta.jTextFieldvoucherFormaPagoPuntoVenta.setEnabled(this.formapagopuntoventaConstantesFunciones.activarvoucherFormaPagoPuntoVenta);
		this.jInternalFrameDetalleFormFormaPagoPuntoVenta.jTextFieldloteFormaPagoPuntoVenta.setEnabled(this.formapagopuntoventaConstantesFunciones.activarloteFormaPagoPuntoVenta);
		this.jInternalFrameDetalleFormFormaPagoPuntoVenta.jTextFieldcuotaFormaPagoPuntoVenta.setEnabled(this.formapagopuntoventaConstantesFunciones.activarcuotaFormaPagoPuntoVenta);
		this.jInternalFrameDetalleFormFormaPagoPuntoVenta.jTextFieldvalor_retencionFormaPagoPuntoVenta.setEnabled(this.formapagopuntoventaConstantesFunciones.activarvalor_retencionFormaPagoPuntoVenta);
		this.jInternalFrameDetalleFormFormaPagoPuntoVenta.jTextFieldvalor_comisionFormaPagoPuntoVenta.setEnabled(this.formapagopuntoventaConstantesFunciones.activarvalor_comisionFormaPagoPuntoVenta);
		this.jInternalFrameDetalleFormFormaPagoPuntoVenta.jTextFieldvalor_calculadoFormaPagoPuntoVenta.setEnabled(this.formapagopuntoventaConstantesFunciones.activarvalor_calculadoFormaPagoPuntoVenta);
		this.jInternalFrameDetalleFormFormaPagoPuntoVenta.jTextFieldvalor_canceladoFormaPagoPuntoVenta.setEnabled(this.formapagopuntoventaConstantesFunciones.activarvalor_canceladoFormaPagoPuntoVenta);
		this.jInternalFrameDetalleFormFormaPagoPuntoVenta.jTextFieldvalor_difiereFormaPagoPuntoVenta.setEnabled(this.formapagopuntoventaConstantesFunciones.activarvalor_difiereFormaPagoPuntoVenta);
		this.jInternalFrameDetalleFormFormaPagoPuntoVenta.jTextFieldnumero_retencionFormaPagoPuntoVenta.setEnabled(this.formapagopuntoventaConstantesFunciones.activarnumero_retencionFormaPagoPuntoVenta);
		this.jInternalFrameDetalleFormFormaPagoPuntoVenta.jTextFieldnumero_liquidacionFormaPagoPuntoVenta.setEnabled(this.formapagopuntoventaConstantesFunciones.activarnumero_liquidacionFormaPagoPuntoVenta);
		this.jInternalFrameDetalleFormFormaPagoPuntoVenta.jComboBoxid_anioFormaPagoPuntoVenta.setEnabled(this.formapagopuntoventaConstantesFunciones.activarid_anioFormaPagoPuntoVenta);
		this.jInternalFrameDetalleFormFormaPagoPuntoVenta.jComboBoxid_cuenta_contableFormaPagoPuntoVenta.setEnabled(this.formapagopuntoventaConstantesFunciones.activarid_cuenta_contableFormaPagoPuntoVenta);
			this.jInternalFrameDetalleFormFormaPagoPuntoVenta.jButtonid_cuenta_contableFormaPagoPuntoVenta.setEnabled(this.formapagopuntoventaConstantesFunciones.activarid_cuenta_contableFormaPagoPuntoVenta);
		this.jInternalFrameDetalleFormFormaPagoPuntoVenta.jComboBoxid_asiento_contableFormaPagoPuntoVenta.setEnabled(this.formapagopuntoventaConstantesFunciones.activarid_asiento_contableFormaPagoPuntoVenta);
			this.jInternalFrameDetalleFormFormaPagoPuntoVenta.jButtonid_asiento_contableFormaPagoPuntoVenta.setEnabled(this.formapagopuntoventaConstantesFunciones.activarid_asiento_contableFormaPagoPuntoVenta);
		}
	}
	
		
}