/*
*AVISO LEGAL
Â© Copyright
*Este programa esta protegido por la ley de derechos de autor.
*La reproduccion o distribucion ilicita de este programa o de cualquiera de
*sus partes esta penado por la ley con severas sanciones civiles y penales,
*y seran objeto de todas las sanciones legales que correspondan.

*Su contenido no puede copiarse para fines comerciales o de otras,
*ni puede mostrarse, incluso en una version modificada, en otros sitios Web.
Solo esta permitido colocar hipervinculos al sitio web.
*/
package com.bydan.erp.puntoventa.presentation.swing.jinternalframes;




import com.bydan.erp.seguridad.business.entity.Usuario;
import com.bydan.erp.seguridad.business.entity.ResumenUsuario;
import com.bydan.erp.seguridad.business.entity.Opcion;
import com.bydan.erp.seguridad.business.entity.PerfilOpcion;
import com.bydan.erp.seguridad.business.entity.PerfilCampo;
import com.bydan.erp.seguridad.business.entity.PerfilAccion;
import com.bydan.erp.seguridad.business.entity.ParametroGeneralSg;
import com.bydan.erp.seguridad.business.entity.ParametroGeneralUsuario;
import com.bydan.erp.seguridad.business.entity.Modulo;
import com.bydan.erp.seguridad.business.entity.Accion;

import com.bydan.erp.seguridad.util.SistemaParameterReturnGeneralAdditional;
import com.bydan.erp.seguridad.util.SistemaParameterReturnGeneral;


//import com.bydan.erp.seguridad.business.entity.PerfilAccion;


import com.bydan.erp.seguridad.util.SistemaConstantesFunciones;
import com.bydan.erp.seguridad.util.SistemaConstantesFuncionesAdditional;
import com.bydan.erp.seguridad.business.logic.SistemaLogicAdditional;

import com.bydan.erp.puntoventa.util.ConfiguracionPunVenConstantesFunciones;
import com.bydan.erp.puntoventa.util.ConfiguracionPunVenParameterReturnGeneral;
//import com.bydan.erp.puntoventa.util.ConfiguracionPunVenParameterGeneral;
//import com.bydan.erp.puntoventa.presentation.report.source.ConfiguracionPunVenBean;
import com.bydan.framework.erp.business.dataaccess.ConstantesSql;
import com.bydan.framework.erp.business.entity.Classe;
import com.bydan.framework.erp.business.entity.DatoGeneral;
import com.bydan.framework.erp.business.entity.GeneralEntityParameterGeneral;
import com.bydan.framework.erp.business.entity.OrderBy;
import com.bydan.framework.erp.business.entity.DatoGeneralMinimo;
import com.bydan.framework.erp.business.entity.GeneralEntity;
import com.bydan.framework.erp.business.entity.Mensajes;
import com.bydan.framework.erp.business.entity.GeneralEntityParameterReturnGeneral;
//import com.bydan.framework.erp.business.entity.MaintenanceType;
import com.bydan.framework.erp.util.MaintenanceType;
import com.bydan.framework.erp.util.FuncionesReporte;
import com.bydan.framework.erp.business.logic.DatosCliente;
import com.bydan.framework.erp.business.logic.Pagination;

import com.bydan.erp.puntoventa.presentation.swing.jinternalframes.auxiliar.*;
import com.bydan.framework.erp.presentation.desktop.swing.TablaGeneralTotalModel;
import com.bydan.framework.erp.presentation.desktop.swing.TablaGeneralOrderByModel;
import com.bydan.framework.erp.presentation.desktop.swing.DateConverter;
import com.bydan.framework.erp.presentation.desktop.swing.DateConverterFromDate;
import com.bydan.framework.erp.presentation.desktop.swing.DateRenderer;
import com.bydan.framework.erp.presentation.desktop.swing.DateEditorRenderer;
import com.bydan.framework.erp.presentation.desktop.swing.BooleanRenderer;
import com.bydan.framework.erp.presentation.desktop.swing.BooleanEditorRenderer;
import com.bydan.framework.erp.presentation.desktop.swing.TextFieldRenderer;
import com.bydan.framework.erp.presentation.desktop.swing.RunnableProceso;
import com.bydan.framework.erp.presentation.desktop.swing.*;
//import com.bydan.framework.erp.presentation.desktop.swing.TextFieldEditorRenderer;
import com.bydan.framework.erp.presentation.desktop.swing.HeaderRenderer;
import com.bydan.framework.erp.presentation.desktop.swing.JInternalFrameBase;
import com.bydan.framework.erp.presentation.desktop.swing.FuncionesSwing;
import com.bydan.framework.erp.presentation.desktop.swing.MainJFrame;
import com.bydan.framework.erp.resources.imagenes.AuxiliarImagenes;
import com.bydan.erp.puntoventa.resources.reportes.AuxiliarReportes;


import com.bydan.erp.puntoventa.util.*;
import com.bydan.erp.puntoventa.business.logic.*;

import com.bydan.erp.seguridad.business.logic.*;
import com.bydan.erp.inventario.business.logic.*;
import com.bydan.erp.contabilidad.business.logic.*;
import com.bydan.erp.cartera.business.logic.*;
import com.bydan.erp.tesoreria.business.logic.*;

//EJB

//PARAMETROS


//EJB PARAMETROS

import com.bydan.framework.erp.business.logic.*;
import com.bydan.framework.erp.util.*;

import com.bydan.erp.puntoventa.business.entity.*;
//import com.bydan.framework.erp.business.entity.ConexionBeanFace;
//import com.bydan.framework.erp.business.entity.Mensajes;


import com.bydan.erp.seguridad.presentation.swing.jinternalframes.*;
import com.bydan.erp.inventario.presentation.swing.jinternalframes.*;
import com.bydan.erp.contabilidad.presentation.swing.jinternalframes.*;
import com.bydan.erp.cartera.presentation.swing.jinternalframes.*;
import com.bydan.erp.tesoreria.presentation.swing.jinternalframes.*;

import com.bydan.erp.seguridad.presentation.swing.jinternalframes.auxiliar.*;
import com.bydan.erp.inventario.presentation.swing.jinternalframes.auxiliar.*;
import com.bydan.erp.contabilidad.presentation.swing.jinternalframes.auxiliar.*;
import com.bydan.erp.cartera.presentation.swing.jinternalframes.auxiliar.*;
import com.bydan.erp.tesoreria.presentation.swing.jinternalframes.auxiliar.*;






import javax.imageio.ImageIO;
import java.net.NetworkInterface;
import java.net.InterfaceAddress;
import java.net.InetAddress;
import javax.naming.InitialContext;
import java.lang.Long;
import java.util.Date;
import java.util.Enumeration;
import java.util.Iterator;
import java.util.Set;
import java.util.HashSet;
import java.util.List;
import java.util.ArrayList;
import java.io.Serializable;
import java.util.Hashtable;
import java.util.Collections;
import java.io.File;
import java.io.FileInputStream;
import java.io.BufferedWriter;
import java.io.FileWriter;
import java.io.FileOutputStream;
import java.io.InputStream;
import java.io.BufferedReader;
import java.io.FileReader;
import java.util.HashMap;
import java.util.Map;
import java.io.PrintWriter;
import java.sql.SQLException;

import javax.xml.parsers.DocumentBuilder;
import javax.xml.parsers.DocumentBuilderFactory;
import javax.xml.parsers.ParserConfigurationException;
import javax.xml.transform.stream.StreamSource;

import org.xml.sax.EntityResolver;
import org.xml.sax.InputSource;
import org.xml.sax.SAXException;

import org.w3c.dom.Document;
import org.w3c.dom.Document;
import org.w3c.dom.NodeList;
import org.w3c.dom.Node;
import org.w3c.dom.Element;

import org.apache.poi.hssf.usermodel.HSSFCell;
import org.apache.poi.hssf.usermodel.HSSFRow;
import org.apache.poi.hssf.usermodel.HSSFSheet;
import org.apache.poi.hssf.usermodel.HSSFWorkbook;
import org.apache.poi.xssf.usermodel.XSSFWorkbook;

import org.apache.poi.ss.usermodel.Workbook;
import org.apache.poi.ss.usermodel.Sheet;
import org.apache.poi.ss.usermodel.Row;
import org.apache.poi.ss.usermodel.Cell;
import org.apache.poi.ss.usermodel.CellStyle;
import org.apache.poi.ss.usermodel.IndexedColors;
import org.apache.poi.ss.util.CellRangeAddress;

import javax.xml.transform.Transformer;
import javax.xml.transform.TransformerFactory;
import javax.xml.transform.dom.DOMSource;
import javax.xml.transform.stream.StreamResult;


import net.sf.jasperreports.engine.JRException;
import net.sf.jasperreports.engine.JRRuntimeException;
import net.sf.jasperreports.engine.JasperFillManager;
import net.sf.jasperreports.engine.JasperPrint;
import net.sf.jasperreports.engine.JasperReport;
import net.sf.jasperreports.engine.util.JRLoader;
import net.sf.jasperreports.engine.export.JRHtmlExporter;
import net.sf.jasperreports.j2ee.servlets.BaseHttpServlet;
import net.sf.jasperreports.engine.JRExporterParameter;
import net.sf.jasperreports.engine.data.JRBeanArrayDataSource;
import net.sf.jasperreports.engine.data.JRBeanCollectionDataSource;
import net.sf.jasperreports.view.JasperViewer;

import org.apache.log4j.Logger;

import com.bydan.framework.erp.business.entity.Reporte;


//VALIDACION
import org.hibernate.validator.ClassValidator;
import org.hibernate.validator.InvalidValue;

import net.sf.jasperreports.engine.JREmptyDataSource;
import net.sf.jasperreports.engine.JasperCompileManager;
import net.sf.jasperreports.engine.JasperExportManager;
import net.sf.jasperreports.engine.JasperPrint;
import net.sf.jasperreports.engine.JasperPrintManager;
import net.sf.jasperreports.engine.JasperReport;
import net.sf.jasperreports.engine.JasperRunManager;
import net.sf.jasperreports.engine.export.JExcelApiExporter;
import net.sf.jasperreports.engine.export.JRCsvExporter;
import net.sf.jasperreports.engine.export.JRRtfExporter;
import net.sf.jasperreports.engine.export.JRXlsExporter;
import net.sf.jasperreports.engine.export.JRXlsExporterParameter;
import net.sf.jasperreports.engine.util.JRSaver;
import net.sf.jasperreports.engine.xml.JRXmlWriter;


import com.bydan.erp.puntoventa.presentation.web.jsf.sessionbean.*;

import java.util.EventObject;
import javax.swing.*;
import javax.swing.border.Border;
import javax.swing.border.TitledBorder;
import javax.swing.border.EmptyBorder;
import javax.swing.event.*;
import javax.swing.table.AbstractTableModel;
import javax.swing.table.DefaultTableCellRenderer;
import javax.swing.table.TableColumn;
import javax.swing.table.TableCellEditor;
import javax.swing.table.TableCellRenderer;
import java.awt.*;
import java.awt.event.*;

import org.jdesktop.beansbinding.Binding.SyncFailure;
import org.jdesktop.beansbinding.BindingListener;
import org.jdesktop.beansbinding.Bindings;
import org.jdesktop.beansbinding.BeanProperty;
import org.jdesktop.beansbinding.ELProperty;
import org.jdesktop.beansbinding.AutoBinding.UpdateStrategy;
import org.jdesktop.beansbinding.PropertyStateEvent;
import org.jdesktop.swingbinding.JComboBoxBinding;
import org.jdesktop.swingbinding.SwingBindings;
import java.beans.PropertyChangeListener;
import java.beans.PropertyChangeEvent;

import com.toedter.calendar.JDateChooser;


import com.bydan.erp.seguridad.business.entity.*;
import com.bydan.erp.inventario.business.entity.*;
import com.bydan.erp.contabilidad.business.entity.*;
import com.bydan.erp.cartera.business.entity.*;
import com.bydan.erp.tesoreria.business.entity.*;
import com.bydan.erp.seguridad.util.*;
import com.bydan.erp.inventario.util.*;
import com.bydan.erp.contabilidad.util.*;
import com.bydan.erp.cartera.util.*;
import com.bydan.erp.tesoreria.util.*;
import com.bydan.erp.seguridad.presentation.web.jsf.sessionbean.*;
import com.bydan.erp.inventario.presentation.web.jsf.sessionbean.*;
import com.bydan.erp.contabilidad.presentation.web.jsf.sessionbean.*;
import com.bydan.erp.cartera.presentation.web.jsf.sessionbean.*;
import com.bydan.erp.tesoreria.presentation.web.jsf.sessionbean.*;


@SuppressWarnings("unused")
public class ConfiguracionPunVenBeanSwingJInternalFrame extends ConfiguracionPunVenJInternalFrame implements WindowListener,WindowFocusListener
{				
	
	public static final long serialVersionUID = 1L;
	
	public static Logger logger = Logger.getLogger(ConfiguracionPunVenBeanSwingJInternalFrame.class);  
	
	public static ClassValidator<ConfiguracionPunVen> configuracionpunvenValidator = new ClassValidator<ConfiguracionPunVen>(ConfiguracionPunVen.class);
	
	public InvalidValue[] invalidValues=null;
		

	//Ejb Foreign Keys
	
	public ConfiguracionPunVen configuracionpunven;	
	public ConfiguracionPunVen configuracionpunvenAux;
	public ConfiguracionPunVen configuracionpunvenAnterior;//USADO PARA MANEJAR FOCUS GAINED,LOST
	public ConfiguracionPunVen configuracionpunvenTotales;
	public Long idConfiguracionPunVenActual;
	public Long iIdNuevoConfiguracionPunVen=0L;
	public int rowIndexActual=0;
	
	
	
	
	public String sFinalQueryComboEmpresa="";

	public List<Empresa> empresasForeignKey;

	public List<Empresa> getempresasForeignKey() {
		return empresasForeignKey;
	}

	public void setempresasForeignKey(List<Empresa> empresasForeignKey) {
		this.empresasForeignKey = empresasForeignKey;
	}

	//OBJETO FK ACTUAL
	public Empresa empresaForeignKey;

	public Empresa getempresaForeignKey() {
		return empresaForeignKey;
	}

	public void setempresaForeignKey(Empresa empresaForeignKey) {
		this.empresaForeignKey = empresaForeignKey;
	}

	public String sFinalQueryComboSucursal="";

	public List<Sucursal> sucursalsForeignKey;

	public List<Sucursal> getsucursalsForeignKey() {
		return sucursalsForeignKey;
	}

	public void setsucursalsForeignKey(List<Sucursal> sucursalsForeignKey) {
		this.sucursalsForeignKey = sucursalsForeignKey;
	}

	//OBJETO FK ACTUAL
	public Sucursal sucursalForeignKey;

	public Sucursal getsucursalForeignKey() {
		return sucursalForeignKey;
	}

	public void setsucursalForeignKey(Sucursal sucursalForeignKey) {
		this.sucursalForeignKey = sucursalForeignKey;
	}

	public String sFinalQueryComboBodega="";

	public List<Bodega> bodegasForeignKey;

	public List<Bodega> getbodegasForeignKey() {
		return bodegasForeignKey;
	}

	public void setbodegasForeignKey(List<Bodega> bodegasForeignKey) {
		this.bodegasForeignKey = bodegasForeignKey;
	}

	//OBJETO FK ACTUAL
	public Bodega bodegaForeignKey;

	public Bodega getbodegaForeignKey() {
		return bodegaForeignKey;
	}

	public void setbodegaForeignKey(Bodega bodegaForeignKey) {
		this.bodegaForeignKey = bodegaForeignKey;
	}

	public String sFinalQueryComboCuentaContableEfectivo="";

	public List<CuentaContable> cuentacontableefectivosForeignKey;

	public List<CuentaContable> getcuentacontableefectivosForeignKey() {
		return cuentacontableefectivosForeignKey;
	}

	public void setcuentacontableefectivosForeignKey(List<CuentaContable> cuentacontableefectivosForeignKey) {
		this.cuentacontableefectivosForeignKey = cuentacontableefectivosForeignKey;
	}

	//OBJETO FK ACTUAL
	public CuentaContable cuentacontableefectivoForeignKey;

	public CuentaContable getcuentacontableefectivoForeignKey() {
		return cuentacontableefectivoForeignKey;
	}

	public void setcuentacontableefectivoForeignKey(CuentaContable cuentacontableefectivoForeignKey) {
		this.cuentacontableefectivoForeignKey = cuentacontableefectivoForeignKey;
	}

	public String sFinalQueryComboCuentaContableIce="";

	public List<CuentaContable> cuentacontableicesForeignKey;

	public List<CuentaContable> getcuentacontableicesForeignKey() {
		return cuentacontableicesForeignKey;
	}

	public void setcuentacontableicesForeignKey(List<CuentaContable> cuentacontableicesForeignKey) {
		this.cuentacontableicesForeignKey = cuentacontableicesForeignKey;
	}

	//OBJETO FK ACTUAL
	public CuentaContable cuentacontableiceForeignKey;

	public CuentaContable getcuentacontableiceForeignKey() {
		return cuentacontableiceForeignKey;
	}

	public void setcuentacontableiceForeignKey(CuentaContable cuentacontableiceForeignKey) {
		this.cuentacontableiceForeignKey = cuentacontableiceForeignKey;
	}

	public String sFinalQueryComboCuentaContableOtros="";

	public List<CuentaContable> cuentacontableotrossForeignKey;

	public List<CuentaContable> getcuentacontableotrossForeignKey() {
		return cuentacontableotrossForeignKey;
	}

	public void setcuentacontableotrossForeignKey(List<CuentaContable> cuentacontableotrossForeignKey) {
		this.cuentacontableotrossForeignKey = cuentacontableotrossForeignKey;
	}

	//OBJETO FK ACTUAL
	public CuentaContable cuentacontableotrosForeignKey;

	public CuentaContable getcuentacontableotrosForeignKey() {
		return cuentacontableotrosForeignKey;
	}

	public void setcuentacontableotrosForeignKey(CuentaContable cuentacontableotrosForeignKey) {
		this.cuentacontableotrosForeignKey = cuentacontableotrosForeignKey;
	}

	public String sFinalQueryComboClienteConsumidorFinal="";

	public List<Cliente> clienteconsumidorfinalsForeignKey;

	public List<Cliente> getclienteconsumidorfinalsForeignKey() {
		return clienteconsumidorfinalsForeignKey;
	}

	public void setclienteconsumidorfinalsForeignKey(List<Cliente> clienteconsumidorfinalsForeignKey) {
		this.clienteconsumidorfinalsForeignKey = clienteconsumidorfinalsForeignKey;
	}

	//OBJETO FK ACTUAL
	public Cliente clienteconsumidorfinalForeignKey;

	public Cliente getclienteconsumidorfinalForeignKey() {
		return clienteconsumidorfinalForeignKey;
	}

	public void setclienteconsumidorfinalForeignKey(Cliente clienteconsumidorfinalForeignKey) {
		this.clienteconsumidorfinalForeignKey = clienteconsumidorfinalForeignKey;
	}

	public String sFinalQueryComboTipoDocumentoFactura="";

	public List<TipoDocumento> tipodocumentofacturasForeignKey;

	public List<TipoDocumento> gettipodocumentofacturasForeignKey() {
		return tipodocumentofacturasForeignKey;
	}

	public void settipodocumentofacturasForeignKey(List<TipoDocumento> tipodocumentofacturasForeignKey) {
		this.tipodocumentofacturasForeignKey = tipodocumentofacturasForeignKey;
	}

	//OBJETO FK ACTUAL
	public TipoDocumento tipodocumentofacturaForeignKey;

	public TipoDocumento gettipodocumentofacturaForeignKey() {
		return tipodocumentofacturaForeignKey;
	}

	public void settipodocumentofacturaForeignKey(TipoDocumento tipodocumentofacturaForeignKey) {
		this.tipodocumentofacturaForeignKey = tipodocumentofacturaForeignKey;
	}

	public String sFinalQueryComboTipoDocumentoNotaVenta="";

	public List<TipoDocumento> tipodocumentonotaventasForeignKey;

	public List<TipoDocumento> gettipodocumentonotaventasForeignKey() {
		return tipodocumentonotaventasForeignKey;
	}

	public void settipodocumentonotaventasForeignKey(List<TipoDocumento> tipodocumentonotaventasForeignKey) {
		this.tipodocumentonotaventasForeignKey = tipodocumentonotaventasForeignKey;
	}

	//OBJETO FK ACTUAL
	public TipoDocumento tipodocumentonotaventaForeignKey;

	public TipoDocumento gettipodocumentonotaventaForeignKey() {
		return tipodocumentonotaventaForeignKey;
	}

	public void settipodocumentonotaventaForeignKey(TipoDocumento tipodocumentonotaventaForeignKey) {
		this.tipodocumentonotaventaForeignKey = tipodocumentonotaventaForeignKey;
	}

	public String sFinalQueryComboTipoDocumentoNotaCredito="";

	public List<TipoDocumento> tipodocumentonotacreditosForeignKey;

	public List<TipoDocumento> gettipodocumentonotacreditosForeignKey() {
		return tipodocumentonotacreditosForeignKey;
	}

	public void settipodocumentonotacreditosForeignKey(List<TipoDocumento> tipodocumentonotacreditosForeignKey) {
		this.tipodocumentonotacreditosForeignKey = tipodocumentonotacreditosForeignKey;
	}

	//OBJETO FK ACTUAL
	public TipoDocumento tipodocumentonotacreditoForeignKey;

	public TipoDocumento gettipodocumentonotacreditoForeignKey() {
		return tipodocumentonotacreditoForeignKey;
	}

	public void settipodocumentonotacreditoForeignKey(TipoDocumento tipodocumentonotacreditoForeignKey) {
		this.tipodocumentonotacreditoForeignKey = tipodocumentonotacreditoForeignKey;
	}

	public String sFinalQueryComboTipoDocumentoTarjetaCredito="";

	public List<TipoDocumento> tipodocumentotarjetacreditosForeignKey;

	public List<TipoDocumento> gettipodocumentotarjetacreditosForeignKey() {
		return tipodocumentotarjetacreditosForeignKey;
	}

	public void settipodocumentotarjetacreditosForeignKey(List<TipoDocumento> tipodocumentotarjetacreditosForeignKey) {
		this.tipodocumentotarjetacreditosForeignKey = tipodocumentotarjetacreditosForeignKey;
	}

	//OBJETO FK ACTUAL
	public TipoDocumento tipodocumentotarjetacreditoForeignKey;

	public TipoDocumento gettipodocumentotarjetacreditoForeignKey() {
		return tipodocumentotarjetacreditoForeignKey;
	}

	public void settipodocumentotarjetacreditoForeignKey(TipoDocumento tipodocumentotarjetacreditoForeignKey) {
		this.tipodocumentotarjetacreditoForeignKey = tipodocumentotarjetacreditoForeignKey;
	}

	public String sFinalQueryComboFormatoFactura="";

	public List<Formato> formatofacturasForeignKey;

	public List<Formato> getformatofacturasForeignKey() {
		return formatofacturasForeignKey;
	}

	public void setformatofacturasForeignKey(List<Formato> formatofacturasForeignKey) {
		this.formatofacturasForeignKey = formatofacturasForeignKey;
	}

	//OBJETO FK ACTUAL
	public Formato formatofacturaForeignKey;

	public Formato getformatofacturaForeignKey() {
		return formatofacturaForeignKey;
	}

	public void setformatofacturaForeignKey(Formato formatofacturaForeignKey) {
		this.formatofacturaForeignKey = formatofacturaForeignKey;
	}

	public String sFinalQueryComboFormatoNotaVenta="";

	public List<Formato> formatonotaventasForeignKey;

	public List<Formato> getformatonotaventasForeignKey() {
		return formatonotaventasForeignKey;
	}

	public void setformatonotaventasForeignKey(List<Formato> formatonotaventasForeignKey) {
		this.formatonotaventasForeignKey = formatonotaventasForeignKey;
	}

	//OBJETO FK ACTUAL
	public Formato formatonotaventaForeignKey;

	public Formato getformatonotaventaForeignKey() {
		return formatonotaventaForeignKey;
	}

	public void setformatonotaventaForeignKey(Formato formatonotaventaForeignKey) {
		this.formatonotaventaForeignKey = formatonotaventaForeignKey;
	}

	public String sFinalQueryComboFormatoNotaCredito="";

	public List<Formato> formatonotacreditosForeignKey;

	public List<Formato> getformatonotacreditosForeignKey() {
		return formatonotacreditosForeignKey;
	}

	public void setformatonotacreditosForeignKey(List<Formato> formatonotacreditosForeignKey) {
		this.formatonotacreditosForeignKey = formatonotacreditosForeignKey;
	}

	//OBJETO FK ACTUAL
	public Formato formatonotacreditoForeignKey;

	public Formato getformatonotacreditoForeignKey() {
		return formatonotacreditoForeignKey;
	}

	public void setformatonotacreditoForeignKey(Formato formatonotacreditoForeignKey) {
		this.formatonotacreditoForeignKey = formatonotacreditoForeignKey;
	}

	public String sFinalQueryComboTransaccionFactura="";

	public List<Transaccion> transaccionfacturasForeignKey;

	public List<Transaccion> gettransaccionfacturasForeignKey() {
		return transaccionfacturasForeignKey;
	}

	public void settransaccionfacturasForeignKey(List<Transaccion> transaccionfacturasForeignKey) {
		this.transaccionfacturasForeignKey = transaccionfacturasForeignKey;
	}

	//OBJETO FK ACTUAL
	public Transaccion transaccionfacturaForeignKey;

	public Transaccion gettransaccionfacturaForeignKey() {
		return transaccionfacturaForeignKey;
	}

	public void settransaccionfacturaForeignKey(Transaccion transaccionfacturaForeignKey) {
		this.transaccionfacturaForeignKey = transaccionfacturaForeignKey;
	}

	public String sFinalQueryComboTransaccionNotaVenta="";

	public List<Transaccion> transaccionnotaventasForeignKey;

	public List<Transaccion> gettransaccionnotaventasForeignKey() {
		return transaccionnotaventasForeignKey;
	}

	public void settransaccionnotaventasForeignKey(List<Transaccion> transaccionnotaventasForeignKey) {
		this.transaccionnotaventasForeignKey = transaccionnotaventasForeignKey;
	}

	//OBJETO FK ACTUAL
	public Transaccion transaccionnotaventaForeignKey;

	public Transaccion gettransaccionnotaventaForeignKey() {
		return transaccionnotaventaForeignKey;
	}

	public void settransaccionnotaventaForeignKey(Transaccion transaccionnotaventaForeignKey) {
		this.transaccionnotaventaForeignKey = transaccionnotaventaForeignKey;
	}

	public String sFinalQueryComboTransaccionNotaCredito="";

	public List<Transaccion> transaccionnotacreditosForeignKey;

	public List<Transaccion> gettransaccionnotacreditosForeignKey() {
		return transaccionnotacreditosForeignKey;
	}

	public void settransaccionnotacreditosForeignKey(List<Transaccion> transaccionnotacreditosForeignKey) {
		this.transaccionnotacreditosForeignKey = transaccionnotacreditosForeignKey;
	}

	//OBJETO FK ACTUAL
	public Transaccion transaccionnotacreditoForeignKey;

	public Transaccion gettransaccionnotacreditoForeignKey() {
		return transaccionnotacreditoForeignKey;
	}

	public void settransaccionnotacreditoForeignKey(Transaccion transaccionnotacreditoForeignKey) {
		this.transaccionnotacreditoForeignKey = transaccionnotacreditoForeignKey;
	}

	public String sFinalQueryComboTransaccionCuentaFactura="";

	public List<Transaccion> transaccioncuentafacturasForeignKey;

	public List<Transaccion> gettransaccioncuentafacturasForeignKey() {
		return transaccioncuentafacturasForeignKey;
	}

	public void settransaccioncuentafacturasForeignKey(List<Transaccion> transaccioncuentafacturasForeignKey) {
		this.transaccioncuentafacturasForeignKey = transaccioncuentafacturasForeignKey;
	}

	//OBJETO FK ACTUAL
	public Transaccion transaccioncuentafacturaForeignKey;

	public Transaccion gettransaccioncuentafacturaForeignKey() {
		return transaccioncuentafacturaForeignKey;
	}

	public void settransaccioncuentafacturaForeignKey(Transaccion transaccioncuentafacturaForeignKey) {
		this.transaccioncuentafacturaForeignKey = transaccioncuentafacturaForeignKey;
	}

	public String sFinalQueryComboTransaccionCuentaNotaVenta="";

	public List<Transaccion> transaccioncuentanotaventasForeignKey;

	public List<Transaccion> gettransaccioncuentanotaventasForeignKey() {
		return transaccioncuentanotaventasForeignKey;
	}

	public void settransaccioncuentanotaventasForeignKey(List<Transaccion> transaccioncuentanotaventasForeignKey) {
		this.transaccioncuentanotaventasForeignKey = transaccioncuentanotaventasForeignKey;
	}

	//OBJETO FK ACTUAL
	public Transaccion transaccioncuentanotaventaForeignKey;

	public Transaccion gettransaccioncuentanotaventaForeignKey() {
		return transaccioncuentanotaventaForeignKey;
	}

	public void settransaccioncuentanotaventaForeignKey(Transaccion transaccioncuentanotaventaForeignKey) {
		this.transaccioncuentanotaventaForeignKey = transaccioncuentanotaventaForeignKey;
	}

	public String sFinalQueryComboTransaccionCuentaNotaCredito="";

	public List<Transaccion> transaccioncuentanotacreditosForeignKey;

	public List<Transaccion> gettransaccioncuentanotacreditosForeignKey() {
		return transaccioncuentanotacreditosForeignKey;
	}

	public void settransaccioncuentanotacreditosForeignKey(List<Transaccion> transaccioncuentanotacreditosForeignKey) {
		this.transaccioncuentanotacreditosForeignKey = transaccioncuentanotacreditosForeignKey;
	}

	//OBJETO FK ACTUAL
	public Transaccion transaccioncuentanotacreditoForeignKey;

	public Transaccion gettransaccioncuentanotacreditoForeignKey() {
		return transaccioncuentanotacreditoForeignKey;
	}

	public void settransaccioncuentanotacreditoForeignKey(Transaccion transaccioncuentanotacreditoForeignKey) {
		this.transaccioncuentanotacreditoForeignKey = transaccioncuentanotacreditoForeignKey;
	}

		
	
	
	
	//BUSQUEDA INTERNA FK
	public Long idClienteConsumidorFinalActual=0L;

	public Long getidClienteConsumidorFinalActual() {
		return idClienteConsumidorFinalActual;
	}

	public void setidClienteConsumidorFinalActual(Long idClienteConsumidorFinalActual) {
		this.idClienteConsumidorFinalActual= idClienteConsumidorFinalActual;
	}
	
	
	
	
	//FALTA:PARA BUSQUEDAS POR CAMPO EN FORMULARIO
	public String sFinalQueryGeneral="";
	public Boolean isEntroOnLoad=false;
	public Boolean isErrorGuardar=false;
	
	public Boolean isGuardarCambiosEnLote=false;
	public Boolean isCargarCombosDependencia=false;
	public Boolean isSeleccionarTodos=false;
	public Boolean isSeleccionados=false;
	public Boolean conGraficoReporte=false;
	
	public Boolean isPostAccionNuevo=false;
	public Boolean isPostAccionSinCerrar=false;
	public Boolean isPostAccionSinMensaje=false;
	
	
	public Boolean esControlTabla=false;
	
	public Boolean isPermisoTodoConfiguracionPunVen;
	public Boolean isPermisoNuevoConfiguracionPunVen;
	public Boolean isPermisoActualizarConfiguracionPunVen;
	public Boolean isPermisoActualizarOriginalConfiguracionPunVen;
	public Boolean isPermisoEliminarConfiguracionPunVen;
	public Boolean isPermisoGuardarCambiosConfiguracionPunVen;
	public Boolean isPermisoConsultaConfiguracionPunVen;
	public Boolean isPermisoBusquedaConfiguracionPunVen;
	public Boolean isPermisoReporteConfiguracionPunVen;
	public Boolean isPermisoPaginacionMedioConfiguracionPunVen;
	public Boolean isPermisoPaginacionAltoConfiguracionPunVen;
	public Boolean isPermisoPaginacionTodoConfiguracionPunVen;
	public Boolean isPermisoCopiarConfiguracionPunVen;
	public Boolean isPermisoVerFormConfiguracionPunVen;
	public Boolean isPermisoDuplicarConfiguracionPunVen;
	public Boolean isPermisoOrdenConfiguracionPunVen;
	
	
	public ArrayList<DatoGeneral> arrDatoGeneral;
	public ArrayList<String> arrDatoGeneralNo;
	ArrayList<Classe> classesActual=new ArrayList<Classe>();
	
	public List<Accion> accions;	
	public List<Accion> accionsFormulario;
	
	
	public ArrayList<DatoGeneralMinimo> arrDatoGeneralMinimos;
	
	public ArrayList<Reporte> tiposArchivosReportes;
	public ArrayList<Reporte> tiposArchivosReportesDinamico;
	public ArrayList<Reporte> tiposReportes;
	public ArrayList<Reporte> tiposReportesDinamico;
	public ArrayList<Reporte> tiposGraficosReportes;
	public ArrayList<Reporte> tiposPaginacion;
	public ArrayList<Reporte> tiposRelaciones;
	public ArrayList<Reporte> tiposAcciones;
	public ArrayList<Reporte> tiposAccionesFormulario;
	public ArrayList<Reporte> tiposSeleccionar;
	
	public ArrayList<Reporte> tiposColumnasSelect;
	public ArrayList<Reporte> tiposRelacionesSelect;
	
	
	public Integer iNumeroPaginacion;
	public Integer iNumeroPaginacionPagina;
	public Pagination pagination;
	public DatosCliente datosCliente;
	public DatosDeep datosDeep;
	public String sTipoArchivoReporte="";
	public String sTipoArchivoReporteDinamico="";
	public String sTipoReporte="";
	public String sTipoReporteDinamico="";
	public String sTipoGraficoReporte="";
	public String sTipoPaginacion="";
	public String sTipoRelacion="";
	public String sTipoAccion="";
	public String sTipoAccionFormulario="";
	public String sTipoSeleccionar="";	
	public String sDetalleReporte="";
	public Boolean isMostrarNumeroPaginacion;
	public String sTipoReporteExtra="";
	public String sValorCampoGeneral="";
	public Boolean esReporteDinamico=false;
	public Boolean esReporteAccionProceso=false;
	public Boolean esRecargarFks=false;
	public String sPathReporteDinamico="";
	
	public ConfiguracionPunVenParameterReturnGeneral configuracionpunvenReturnGeneral;
	public ConfiguracionPunVenParameterReturnGeneral configuracionpunvenParameterGeneral;
	
	 	
	public JasperPrint jasperPrint = null;
	
	public Long lIdUsuarioSesion=0L;				
	
	public Boolean isEsNuevoConfiguracionPunVen=false;
	public Boolean esParaAccionDesdeFormularioConfiguracionPunVen=false;
	public Boolean isEsMantenimientoRelacionesRelacionadoUnico=false;
	public Boolean isEsMantenimientoRelaciones=false;
	public Boolean isEsMantenimientoRelacionado=false;	
	public Boolean isContieneImagenes=false;
		
	//public Boolean conTotales=false; //Viene heredado de JInternalFrameBase
	//public Boolean esParaBusquedaForeignKey=false;
	
	
	protected ConfiguracionPunVenSessionBeanAdditional configuracionpunvenSessionBeanAdditional=null;
	
	public ConfiguracionPunVenSessionBeanAdditional getConfiguracionPunVenSessionBeanAdditional() {
		return this.configuracionpunvenSessionBeanAdditional;
	}
	
	public void setConfiguracionPunVenSessionBeanAdditional(ConfiguracionPunVenSessionBeanAdditional configuracionpunvenSessionBeanAdditional) {
		try {
			this.configuracionpunvenSessionBeanAdditional=configuracionpunvenSessionBeanAdditional;
		} catch(Exception e) {
			;
		}
	}
	
	
	
	
	protected ConfiguracionPunVenBeanSwingJInternalFrameAdditional configuracionpunvenBeanSwingJInternalFrameAdditional=null;
	//public class ConfiguracionPunVenBeanSwingJInternalFrame
	
	public ConfiguracionPunVenBeanSwingJInternalFrameAdditional getConfiguracionPunVenBeanSwingJInternalFrameAdditional() {
		return this.configuracionpunvenBeanSwingJInternalFrameAdditional;
	}
	
	public void setConfiguracionPunVenBeanSwingJInternalFrameAdditional(ConfiguracionPunVenBeanSwingJInternalFrameAdditional configuracionpunvenBeanSwingJInternalFrameAdditional) {
		try {
			this.configuracionpunvenBeanSwingJInternalFrameAdditional=configuracionpunvenBeanSwingJInternalFrameAdditional;
		} catch(Exception e) {
			;
		}
	}
	
	
	
	
	//ESTA EN PADRE
	
	//public ConfiguracionPunVenLogic configuracionpunvenLogic;
	public SistemaLogicAdditional sistemaLogicAdditional;
	
	
	public ConfiguracionPunVen configuracionpunvenBean;
	public ConfiguracionPunVenConstantesFunciones configuracionpunvenConstantesFunciones;
	//public ConfiguracionPunVenParameterReturnGeneral configuracionpunvenReturnGeneral;
	
	//FK
	
	public EmpresaLogic empresaLogic;
	public SucursalLogic sucursalLogic;
	public BodegaLogic bodegaLogic;
	public CuentaContableLogic cuentacontableefectivoLogic;
	public CuentaContableLogic cuentacontableiceLogic;
	public CuentaContableLogic cuentacontableotrosLogic;
	public ClienteLogic clienteconsumidorfinalLogic;
	public TipoDocumentoLogic tipodocumentofacturaLogic;
	public TipoDocumentoLogic tipodocumentonotaventaLogic;
	public TipoDocumentoLogic tipodocumentonotacreditoLogic;
	public TipoDocumentoLogic tipodocumentotarjetacreditoLogic;
	public FormatoLogic formatofacturaLogic;
	public FormatoLogic formatonotaventaLogic;
	public FormatoLogic formatonotacreditoLogic;
	public TransaccionLogic transaccionfacturaLogic;
	public TransaccionLogic transaccionnotaventaLogic;
	public TransaccionLogic transaccionnotacreditoLogic;
	public TransaccionLogic transaccioncuentafacturaLogic;
	public TransaccionLogic transaccioncuentanotaventaLogic;
	public TransaccionLogic transaccioncuentanotacreditoLogic;
	
	//PARAMETROS
	
	
	//public List<ConfiguracionPunVen> configuracionpunvens;	
	//public List<ConfiguracionPunVen> configuracionpunvensEliminados;
	//public List<ConfiguracionPunVen> configuracionpunvensAux;
	
	public String sAccionMantenimiento="";
	public String sAccionBusqueda="";
	public String sAccionAdicional="";
	public String sUltimaBusqueda="";
	
	public Mensaje mensaje;
	
	
	public String sVisibilidadTablaBusquedas="";					
	public String sVisibilidadTablaElementos="";	
	public String sVisibilidadTablaAcciones="";			
	
	public Boolean isVisibilidadCeldaNuevoConfiguracionPunVen=false;
	public Boolean isVisibilidadCeldaDuplicarConfiguracionPunVen=true;
	public Boolean isVisibilidadCeldaCopiarConfiguracionPunVen=true;
	public Boolean isVisibilidadCeldaVerFormConfiguracionPunVen=true;
	public Boolean isVisibilidadCeldaOrdenConfiguracionPunVen=true;
	public Boolean isVisibilidadCeldaNuevoRelacionesConfiguracionPunVen=false;
	public Boolean isVisibilidadCeldaModificarConfiguracionPunVen=false;
	public Boolean isVisibilidadCeldaActualizarConfiguracionPunVen=false;
	public Boolean isVisibilidadCeldaEliminarConfiguracionPunVen=false;
	public Boolean isVisibilidadCeldaCancelarConfiguracionPunVen=false;
	public Boolean isVisibilidadCeldaGuardarConfiguracionPunVen=false;	
	public Boolean isVisibilidadCeldaGuardarCambiosConfiguracionPunVen=false;	
	
	
	public Boolean isVisibilidadFK_IdBodega=false;
	public Boolean isVisibilidadFK_IdClienteConsumidorFinal=false;
	public Boolean isVisibilidadFK_IdCuentaContableEfectivo=false;
	public Boolean isVisibilidadFK_IdCuentaContableIce=false;
	public Boolean isVisibilidadFK_IdCuentaContableOtros=false;
	public Boolean isVisibilidadFK_IdEmpresa=false;
	public Boolean isVisibilidadFK_IdFormatoFactura=false;
	public Boolean isVisibilidadFK_IdFormatoNotaCredito=false;
	public Boolean isVisibilidadFK_IdFormatoNotaVenta=false;
	public Boolean isVisibilidadFK_IdSucursal=false;
	public Boolean isVisibilidadFK_IdTipoDocumentoFactura=false;
	public Boolean isVisibilidadFK_IdTipoDocumentoNotaCredito=false;
	public Boolean isVisibilidadFK_IdTipoDocumentoNotaVenta=false;
	public Boolean isVisibilidadFK_IdTipoDocumentoTarjetaCredito=false;
	public Boolean isVisibilidadFK_IdTransaccionCuentaFactura=false;
	public Boolean isVisibilidadFK_IdTransaccionCuentaNotaCredito=false;
	public Boolean isVisibilidadFK_IdTransaccionCuentaNotaVenta=false;
	public Boolean isVisibilidadFK_IdTransaccionFactura=false;
	public Boolean isVisibilidadFK_IdTransaccionNotaCredito=false;
	public Boolean isVisibilidadFK_IdTransaccionNotaVenta=false;
	
	public Long getiIdNuevoConfiguracionPunVen() {
		return this.iIdNuevoConfiguracionPunVen;
	}

	public void setiIdNuevoConfiguracionPunVen(Long iIdNuevoConfiguracionPunVen) {
		this.iIdNuevoConfiguracionPunVen = iIdNuevoConfiguracionPunVen;
	}
	
	public Long getidConfiguracionPunVenActual() {
		return this.idConfiguracionPunVenActual;
	}

	public void setidConfiguracionPunVenActual(Long idConfiguracionPunVenActual) {
		this.idConfiguracionPunVenActual = idConfiguracionPunVenActual;
	}
	
	public int getrowIndexActual() {
		return this.rowIndexActual;
	}

	public void setrowIndexActual(int rowIndexActual) {
		this.rowIndexActual=rowIndexActual;
	}
	
	
	public ConfiguracionPunVen getconfiguracionpunven() {
		return this.configuracionpunven;
	}

	public void setconfiguracionpunven(ConfiguracionPunVen configuracionpunven) {
		this.configuracionpunven = configuracionpunven;
	}
	
	public ConfiguracionPunVen getconfiguracionpunvenAux() {
		return this.configuracionpunvenAux;
	}

	public void setconfiguracionpunvenAux(ConfiguracionPunVen configuracionpunvenAux) {
		this.configuracionpunvenAux = configuracionpunvenAux;
	}				
	
	public ConfiguracionPunVen getconfiguracionpunvenAnterior() {
		return this.configuracionpunvenAnterior;
	}

	public void setconfiguracionpunvenAnterior(ConfiguracionPunVen configuracionpunvenAnterior) {
		this.configuracionpunvenAnterior = configuracionpunvenAnterior;
	}	
	
	public ConfiguracionPunVen getconfiguracionpunvenTotales() {
		return this.configuracionpunvenTotales;
	}

	public void setconfiguracionpunvenTotales(ConfiguracionPunVen configuracionpunvenTotales) {
		this.configuracionpunvenTotales = configuracionpunvenTotales;
	}	
	
	public ConfiguracionPunVen getconfiguracionpunvenBean() {
		return this.configuracionpunvenBean;
	}

	public void setconfiguracionpunvenBean(ConfiguracionPunVen configuracionpunvenBean) {
		this.configuracionpunvenBean = configuracionpunvenBean;
	}	
	
	public ConfiguracionPunVenParameterReturnGeneral getconfiguracionpunvenReturnGeneral() {
		return this.configuracionpunvenReturnGeneral;
	}

	public void setconfiguracionpunvenReturnGeneral(ConfiguracionPunVenParameterReturnGeneral configuracionpunvenReturnGeneral) {
		this.configuracionpunvenReturnGeneral = configuracionpunvenReturnGeneral;
	}	
	
	
	public Long id_bodegaFK_IdBodega=-1L;

	public Long getid_bodegaFK_IdBodega() {
		return this.id_bodegaFK_IdBodega;
	}

	public void setid_bodegaFK_IdBodega(Long id_bodegaFK_IdBodega) {
		this.id_bodegaFK_IdBodega = id_bodegaFK_IdBodega;
	}

	public Long id_cliente_consumidor_finalFK_IdClienteConsumidorFinal=-1L;

	public Long getid_cliente_consumidor_finalFK_IdClienteConsumidorFinal() {
		return this.id_cliente_consumidor_finalFK_IdClienteConsumidorFinal;
	}

	public void setid_cliente_consumidor_finalFK_IdClienteConsumidorFinal(Long id_cliente_consumidor_finalFK_IdClienteConsumidorFinal) {
		this.id_cliente_consumidor_finalFK_IdClienteConsumidorFinal = id_cliente_consumidor_finalFK_IdClienteConsumidorFinal;
	}

	public Long id_cuenta_contable_efectivoFK_IdCuentaContableEfectivo=-1L;

	public Long getid_cuenta_contable_efectivoFK_IdCuentaContableEfectivo() {
		return this.id_cuenta_contable_efectivoFK_IdCuentaContableEfectivo;
	}

	public void setid_cuenta_contable_efectivoFK_IdCuentaContableEfectivo(Long id_cuenta_contable_efectivoFK_IdCuentaContableEfectivo) {
		this.id_cuenta_contable_efectivoFK_IdCuentaContableEfectivo = id_cuenta_contable_efectivoFK_IdCuentaContableEfectivo;
	}

	public Long id_cuenta_contable_iceFK_IdCuentaContableIce=-1L;

	public Long getid_cuenta_contable_iceFK_IdCuentaContableIce() {
		return this.id_cuenta_contable_iceFK_IdCuentaContableIce;
	}

	public void setid_cuenta_contable_iceFK_IdCuentaContableIce(Long id_cuenta_contable_iceFK_IdCuentaContableIce) {
		this.id_cuenta_contable_iceFK_IdCuentaContableIce = id_cuenta_contable_iceFK_IdCuentaContableIce;
	}

	public Long id_cuenta_contable_otrosFK_IdCuentaContableOtros=-1L;

	public Long getid_cuenta_contable_otrosFK_IdCuentaContableOtros() {
		return this.id_cuenta_contable_otrosFK_IdCuentaContableOtros;
	}

	public void setid_cuenta_contable_otrosFK_IdCuentaContableOtros(Long id_cuenta_contable_otrosFK_IdCuentaContableOtros) {
		this.id_cuenta_contable_otrosFK_IdCuentaContableOtros = id_cuenta_contable_otrosFK_IdCuentaContableOtros;
	}

	public Long id_empresaFK_IdEmpresa=-1L;

	public Long getid_empresaFK_IdEmpresa() {
		return this.id_empresaFK_IdEmpresa;
	}

	public void setid_empresaFK_IdEmpresa(Long id_empresaFK_IdEmpresa) {
		this.id_empresaFK_IdEmpresa = id_empresaFK_IdEmpresa;
	}

	public Long id_formato_facturaFK_IdFormatoFactura=-1L;

	public Long getid_formato_facturaFK_IdFormatoFactura() {
		return this.id_formato_facturaFK_IdFormatoFactura;
	}

	public void setid_formato_facturaFK_IdFormatoFactura(Long id_formato_facturaFK_IdFormatoFactura) {
		this.id_formato_facturaFK_IdFormatoFactura = id_formato_facturaFK_IdFormatoFactura;
	}

	public Long id_formato_nota_creditoFK_IdFormatoNotaCredito=-1L;

	public Long getid_formato_nota_creditoFK_IdFormatoNotaCredito() {
		return this.id_formato_nota_creditoFK_IdFormatoNotaCredito;
	}

	public void setid_formato_nota_creditoFK_IdFormatoNotaCredito(Long id_formato_nota_creditoFK_IdFormatoNotaCredito) {
		this.id_formato_nota_creditoFK_IdFormatoNotaCredito = id_formato_nota_creditoFK_IdFormatoNotaCredito;
	}

	public Long id_formato_nota_ventaFK_IdFormatoNotaVenta=-1L;

	public Long getid_formato_nota_ventaFK_IdFormatoNotaVenta() {
		return this.id_formato_nota_ventaFK_IdFormatoNotaVenta;
	}

	public void setid_formato_nota_ventaFK_IdFormatoNotaVenta(Long id_formato_nota_ventaFK_IdFormatoNotaVenta) {
		this.id_formato_nota_ventaFK_IdFormatoNotaVenta = id_formato_nota_ventaFK_IdFormatoNotaVenta;
	}

	public Long id_sucursalFK_IdSucursal=-1L;

	public Long getid_sucursalFK_IdSucursal() {
		return this.id_sucursalFK_IdSucursal;
	}

	public void setid_sucursalFK_IdSucursal(Long id_sucursalFK_IdSucursal) {
		this.id_sucursalFK_IdSucursal = id_sucursalFK_IdSucursal;
	}

	public Long id_tipo_documento_facturaFK_IdTipoDocumentoFactura=-1L;

	public Long getid_tipo_documento_facturaFK_IdTipoDocumentoFactura() {
		return this.id_tipo_documento_facturaFK_IdTipoDocumentoFactura;
	}

	public void setid_tipo_documento_facturaFK_IdTipoDocumentoFactura(Long id_tipo_documento_facturaFK_IdTipoDocumentoFactura) {
		this.id_tipo_documento_facturaFK_IdTipoDocumentoFactura = id_tipo_documento_facturaFK_IdTipoDocumentoFactura;
	}

	public Long id_tipo_documento_nota_creditoFK_IdTipoDocumentoNotaCredito=-1L;

	public Long getid_tipo_documento_nota_creditoFK_IdTipoDocumentoNotaCredito() {
		return this.id_tipo_documento_nota_creditoFK_IdTipoDocumentoNotaCredito;
	}

	public void setid_tipo_documento_nota_creditoFK_IdTipoDocumentoNotaCredito(Long id_tipo_documento_nota_creditoFK_IdTipoDocumentoNotaCredito) {
		this.id_tipo_documento_nota_creditoFK_IdTipoDocumentoNotaCredito = id_tipo_documento_nota_creditoFK_IdTipoDocumentoNotaCredito;
	}

	public Long id_tipo_documento_nota_ventaFK_IdTipoDocumentoNotaVenta=-1L;

	public Long getid_tipo_documento_nota_ventaFK_IdTipoDocumentoNotaVenta() {
		return this.id_tipo_documento_nota_ventaFK_IdTipoDocumentoNotaVenta;
	}

	public void setid_tipo_documento_nota_ventaFK_IdTipoDocumentoNotaVenta(Long id_tipo_documento_nota_ventaFK_IdTipoDocumentoNotaVenta) {
		this.id_tipo_documento_nota_ventaFK_IdTipoDocumentoNotaVenta = id_tipo_documento_nota_ventaFK_IdTipoDocumentoNotaVenta;
	}

	public Long id_tipo_documento_tarjeta_creditoFK_IdTipoDocumentoTarjetaCredito=-1L;

	public Long getid_tipo_documento_tarjeta_creditoFK_IdTipoDocumentoTarjetaCredito() {
		return this.id_tipo_documento_tarjeta_creditoFK_IdTipoDocumentoTarjetaCredito;
	}

	public void setid_tipo_documento_tarjeta_creditoFK_IdTipoDocumentoTarjetaCredito(Long id_tipo_documento_tarjeta_creditoFK_IdTipoDocumentoTarjetaCredito) {
		this.id_tipo_documento_tarjeta_creditoFK_IdTipoDocumentoTarjetaCredito = id_tipo_documento_tarjeta_creditoFK_IdTipoDocumentoTarjetaCredito;
	}

	public Long id_transaccion_cuenta_facturaFK_IdTransaccionCuentaFactura=-1L;

	public Long getid_transaccion_cuenta_facturaFK_IdTransaccionCuentaFactura() {
		return this.id_transaccion_cuenta_facturaFK_IdTransaccionCuentaFactura;
	}

	public void setid_transaccion_cuenta_facturaFK_IdTransaccionCuentaFactura(Long id_transaccion_cuenta_facturaFK_IdTransaccionCuentaFactura) {
		this.id_transaccion_cuenta_facturaFK_IdTransaccionCuentaFactura = id_transaccion_cuenta_facturaFK_IdTransaccionCuentaFactura;
	}

	public Long id_transaccion_cuenta_nota_creditoFK_IdTransaccionCuentaNotaCredito=-1L;

	public Long getid_transaccion_cuenta_nota_creditoFK_IdTransaccionCuentaNotaCredito() {
		return this.id_transaccion_cuenta_nota_creditoFK_IdTransaccionCuentaNotaCredito;
	}

	public void setid_transaccion_cuenta_nota_creditoFK_IdTransaccionCuentaNotaCredito(Long id_transaccion_cuenta_nota_creditoFK_IdTransaccionCuentaNotaCredito) {
		this.id_transaccion_cuenta_nota_creditoFK_IdTransaccionCuentaNotaCredito = id_transaccion_cuenta_nota_creditoFK_IdTransaccionCuentaNotaCredito;
	}

	public Long id_transaccion_cuenta_nota_ventaFK_IdTransaccionCuentaNotaVenta=-1L;

	public Long getid_transaccion_cuenta_nota_ventaFK_IdTransaccionCuentaNotaVenta() {
		return this.id_transaccion_cuenta_nota_ventaFK_IdTransaccionCuentaNotaVenta;
	}

	public void setid_transaccion_cuenta_nota_ventaFK_IdTransaccionCuentaNotaVenta(Long id_transaccion_cuenta_nota_ventaFK_IdTransaccionCuentaNotaVenta) {
		this.id_transaccion_cuenta_nota_ventaFK_IdTransaccionCuentaNotaVenta = id_transaccion_cuenta_nota_ventaFK_IdTransaccionCuentaNotaVenta;
	}

	public Long id_transaccion_facturaFK_IdTransaccionFactura=-1L;

	public Long getid_transaccion_facturaFK_IdTransaccionFactura() {
		return this.id_transaccion_facturaFK_IdTransaccionFactura;
	}

	public void setid_transaccion_facturaFK_IdTransaccionFactura(Long id_transaccion_facturaFK_IdTransaccionFactura) {
		this.id_transaccion_facturaFK_IdTransaccionFactura = id_transaccion_facturaFK_IdTransaccionFactura;
	}

	public Long id_transaccion_nota_creditoFK_IdTransaccionNotaCredito=-1L;

	public Long getid_transaccion_nota_creditoFK_IdTransaccionNotaCredito() {
		return this.id_transaccion_nota_creditoFK_IdTransaccionNotaCredito;
	}

	public void setid_transaccion_nota_creditoFK_IdTransaccionNotaCredito(Long id_transaccion_nota_creditoFK_IdTransaccionNotaCredito) {
		this.id_transaccion_nota_creditoFK_IdTransaccionNotaCredito = id_transaccion_nota_creditoFK_IdTransaccionNotaCredito;
	}

	public Long id_transaccion_nota_ventaFK_IdTransaccionNotaVenta=-1L;

	public Long getid_transaccion_nota_ventaFK_IdTransaccionNotaVenta() {
		return this.id_transaccion_nota_ventaFK_IdTransaccionNotaVenta;
	}

	public void setid_transaccion_nota_ventaFK_IdTransaccionNotaVenta(Long id_transaccion_nota_ventaFK_IdTransaccionNotaVenta) {
		this.id_transaccion_nota_ventaFK_IdTransaccionNotaVenta = id_transaccion_nota_ventaFK_IdTransaccionNotaVenta;
	}

		
	
	//ELEMENTOS TABLAS PARAMETOS
	
	
	
	
	
	
	//ELEMENTOS TABLAS PARAMETOS_FIN
	
	
	public ConfiguracionPunVenLogic getConfiguracionPunVenLogic()	{		
		return configuracionpunvenLogic;
	}

	public void setConfiguracionPunVenLogic(ConfiguracionPunVenLogic configuracionpunvenLogic) {
		this.configuracionpunvenLogic = configuracionpunvenLogic;
	}
	
	
	public void setsFinalQueryGeneral(String sFinalQueryGeneral) {
		this.sFinalQueryGeneral=sFinalQueryGeneral;
	}
	
	public String getsFinalQueryGeneral() {
		return this.sFinalQueryGeneral;
	}
		
	public Boolean getIsGuardarCambiosEnLote() {
		return isGuardarCambiosEnLote;
	}

	public void setIsGuardarCambiosEnLote(Boolean isGuardarCambiosEnLote) {
		this.isGuardarCambiosEnLote = isGuardarCambiosEnLote;
	}
	
	public Boolean getIsCargarCombosDependencia() {
		return isCargarCombosDependencia;
	}

	public void setIsCargarCombosDependencia(Boolean isCargarCombosDependencia) {
		this.isCargarCombosDependencia = isCargarCombosDependencia;
	}
	
	public Boolean getIsEsNuevoConfiguracionPunVen() {
		return isEsNuevoConfiguracionPunVen;
	}

	public void setIsEsNuevoConfiguracionPunVen(Boolean isEsNuevoConfiguracionPunVen) {
		this.isEsNuevoConfiguracionPunVen = isEsNuevoConfiguracionPunVen;
	}

	public Boolean getEsParaAccionDesdeFormularioConfiguracionPunVen() {
		return esParaAccionDesdeFormularioConfiguracionPunVen;
	}
	
	public void setEsParaAccionDesdeFormularioConfiguracionPunVen(Boolean esParaAccionDesdeFormularioConfiguracionPunVen) {
		this.esParaAccionDesdeFormularioConfiguracionPunVen = esParaAccionDesdeFormularioConfiguracionPunVen;
	}
	
	public Boolean getIsEsMantenimientoRelacionesRelacionadoUnico() {
		return isEsMantenimientoRelacionesRelacionadoUnico;
	}

	public void setIsEsMantenimientoRelacionesRelacionadoUnico(Boolean isEsMantenimientoRelacionesRelacionadoUnico) {
		this.isEsMantenimientoRelacionesRelacionadoUnico = isEsMantenimientoRelacionesRelacionadoUnico;
	}

	public Boolean getIsEsMantenimientoRelaciones() {
		return isEsMantenimientoRelaciones;
	}

	public void setIsEsMantenimientoRelaciones(Boolean isEsMantenimientoRelaciones) {
		this.isEsMantenimientoRelaciones = isEsMantenimientoRelaciones;
	}

	public Boolean getIsEsMantenimientoRelacionado() {
		return isEsMantenimientoRelacionado;
	}

	public void setIsEsMantenimientoRelacionado(Boolean isEsMantenimientoRelacionado) {
		this.isEsMantenimientoRelacionado = isEsMantenimientoRelacionado;
	}

	public Boolean getesParaBusquedaForeignKey() {
		return esParaBusquedaForeignKey;
	}

	public void setesParaBusquedaForeignKey(Boolean esParaBusquedaForeignKey) {
		this.esParaBusquedaForeignKey = esParaBusquedaForeignKey;
	}

	public Boolean getIsContieneImagenes() {
		return isContieneImagenes;
	}

	public void setIsContieneImagenes(Boolean isContieneImagenes) {
		this.isContieneImagenes = isContieneImagenes;
	}		
	
	
	public void cargarCombosEmpresasForeignKeyLista(String sFinalQuery)throws Exception
	{
		try
		{
			this.empresasForeignKey=new ArrayList<Empresa>();

			ArrayList<Classe> clases=new ArrayList<Classe>();
			ArrayList<String> arrClasses=new ArrayList<String>();
			Classe classe=new Classe();
			DatosDeep datosDeep=new DatosDeep(false,DeepLoadType.INCLUDE,clases,"");

			EmpresaLogic empresaLogic=new EmpresaLogic();

			//empresaLogic.getEmpresaDataAccess().setIsForForeingKeyData(true);

			if(this.configuracionpunvenSessionBean==null) {
				this.configuracionpunvenSessionBean=new ConfiguracionPunVenSessionBean();
			}

			if(!this.configuracionpunvenSessionBean.getisBusquedaDesdeForeignKeySesionEmpresa()) {
				//ARCHITECTURE
				if(Constantes.ISUSAEJBLOGICLAYER) {
					//empresaLogic.getEmpresaDataAccess().setIsForForeingKeyData(true);

					empresaLogic.getTodosEmpresasWithConnection(sFinalQuery,new Pagination());

					this.empresasForeignKey=empresaLogic.getEmpresas();

				} else if(Constantes.ISUSAEJBREMOTE) {

				} else if(Constantes.ISUSAEJBHOME) {
				}


				//ARCHITECTURE
			} else {
				if(!this.conCargarMinimo) {
					this.setVisibilidadBusquedasParaEmpresa(true);
				}
				//ARCHITECTURE

				if(Constantes.ISUSAEJBLOGICLAYER) {
					empresaLogic.getEntityWithConnection(configuracionpunvenSessionBean.getlidEmpresaActual());
					this.empresasForeignKey.add(empresaLogic.getEmpresa());
				} else if(Constantes.ISUSAEJBREMOTE) {
				} else if(Constantes.ISUSAEJBHOME) {
				}
				//ARCHITECTURE
			}
		}
		catch(Exception e)
		{
			throw e;
		}
	}

	public void cargarCombosSucursalsForeignKeyLista(String sFinalQuery)throws Exception
	{
		try
		{
			this.sucursalsForeignKey=new ArrayList<Sucursal>();

			ArrayList<Classe> clases=new ArrayList<Classe>();
			ArrayList<String> arrClasses=new ArrayList<String>();
			Classe classe=new Classe();
			DatosDeep datosDeep=new DatosDeep(false,DeepLoadType.INCLUDE,clases,"");

			SucursalLogic sucursalLogic=new SucursalLogic();

			//sucursalLogic.getSucursalDataAccess().setIsForForeingKeyData(true);

			if(this.configuracionpunvenSessionBean==null) {
				this.configuracionpunvenSessionBean=new ConfiguracionPunVenSessionBean();
			}

			if(!this.configuracionpunvenSessionBean.getisBusquedaDesdeForeignKeySesionSucursal()) {
				//ARCHITECTURE
				if(Constantes.ISUSAEJBLOGICLAYER) {
					//sucursalLogic.getSucursalDataAccess().setIsForForeingKeyData(true);

					sucursalLogic.getTodosSucursalsWithConnection(sFinalQuery,new Pagination());

					this.sucursalsForeignKey=sucursalLogic.getSucursals();

				} else if(Constantes.ISUSAEJBREMOTE) {

				} else if(Constantes.ISUSAEJBHOME) {
				}


				//ARCHITECTURE
			} else {
				if(!this.conCargarMinimo) {
					this.setVisibilidadBusquedasParaSucursal(true);
				}
				//ARCHITECTURE

				if(Constantes.ISUSAEJBLOGICLAYER) {
					sucursalLogic.getEntityWithConnection(configuracionpunvenSessionBean.getlidSucursalActual());
					this.sucursalsForeignKey.add(sucursalLogic.getSucursal());
				} else if(Constantes.ISUSAEJBREMOTE) {
				} else if(Constantes.ISUSAEJBHOME) {
				}
				//ARCHITECTURE
			}
		}
		catch(Exception e)
		{
			throw e;
		}
	}

	public void cargarCombosBodegasForeignKeyLista(String sFinalQuery)throws Exception
	{
		try
		{
			this.bodegasForeignKey=new ArrayList<Bodega>();

			ArrayList<Classe> clases=new ArrayList<Classe>();
			ArrayList<String> arrClasses=new ArrayList<String>();
			Classe classe=new Classe();
			DatosDeep datosDeep=new DatosDeep(false,DeepLoadType.INCLUDE,clases,"");

			BodegaLogic bodegaLogic=new BodegaLogic();

			//bodegaLogic.getBodegaDataAccess().setIsForForeingKeyData(true);

			if(this.configuracionpunvenSessionBean==null) {
				this.configuracionpunvenSessionBean=new ConfiguracionPunVenSessionBean();
			}

			if(!this.configuracionpunvenSessionBean.getisBusquedaDesdeForeignKeySesionBodega()) {
				//ARCHITECTURE
				if(Constantes.ISUSAEJBLOGICLAYER) {
					//bodegaLogic.getBodegaDataAccess().setIsForForeingKeyData(true);

					bodegaLogic.getTodosBodegasWithConnection(sFinalQuery,new Pagination());

					this.bodegasForeignKey=bodegaLogic.getBodegas();

				} else if(Constantes.ISUSAEJBREMOTE) {

				} else if(Constantes.ISUSAEJBHOME) {
				}


				//ARCHITECTURE
			} else {
				if(!this.conCargarMinimo) {
					this.setVisibilidadBusquedasParaBodega(true);
				}
				//ARCHITECTURE

				if(Constantes.ISUSAEJBLOGICLAYER) {
					bodegaLogic.getEntityWithConnection(configuracionpunvenSessionBean.getlidBodegaActual());
					this.bodegasForeignKey.add(bodegaLogic.getBodega());
				} else if(Constantes.ISUSAEJBREMOTE) {
				} else if(Constantes.ISUSAEJBHOME) {
				}
				//ARCHITECTURE
			}
		}
		catch(Exception e)
		{
			throw e;
		}
	}

	public void cargarCombosCuentaContableEfectivosForeignKeyLista(String sFinalQuery)throws Exception
	{
		try
		{
			this.cuentacontableefectivosForeignKey=new ArrayList<CuentaContable>();

			ArrayList<Classe> clases=new ArrayList<Classe>();
			ArrayList<String> arrClasses=new ArrayList<String>();
			Classe classe=new Classe();
			DatosDeep datosDeep=new DatosDeep(false,DeepLoadType.INCLUDE,clases,"");

			CuentaContableLogic cuentacontableLogic=new CuentaContableLogic();

			//cuentacontableLogic.getCuentaContableDataAccess().setIsForForeingKeyData(true);

			if(this.configuracionpunvenSessionBean==null) {
				this.configuracionpunvenSessionBean=new ConfiguracionPunVenSessionBean();
			}

			if(!this.configuracionpunvenSessionBean.getisBusquedaDesdeForeignKeySesionCuentaContableEfectivo()) {
				//ARCHITECTURE
				if(Constantes.ISUSAEJBLOGICLAYER) {
					//cuentacontableefectivoLogic.getCuentaContableDataAccess().setIsForForeingKeyData(true);

					cuentacontableLogic.getTodosCuentaContablesWithConnection(sFinalQuery,new Pagination());

					this.cuentacontableefectivosForeignKey=cuentacontableLogic.getCuentaContables();

				} else if(Constantes.ISUSAEJBREMOTE) {

				} else if(Constantes.ISUSAEJBHOME) {
				}


				//ARCHITECTURE
			} else {
				if(!this.conCargarMinimo) {
					this.setVisibilidadBusquedasParaCuentaContableEfectivo(true);
				}
				//ARCHITECTURE

				if(Constantes.ISUSAEJBLOGICLAYER) {
					cuentacontableLogic.getEntityWithConnection(configuracionpunvenSessionBean.getlidCuentaContableEfectivoActual());
					this.cuentacontableefectivosForeignKey.add(cuentacontableLogic.getCuentaContable());
				} else if(Constantes.ISUSAEJBREMOTE) {
				} else if(Constantes.ISUSAEJBHOME) {
				}
				//ARCHITECTURE
			}
		}
		catch(Exception e)
		{
			throw e;
		}
	}

	public void cargarCombosCuentaContableIcesForeignKeyLista(String sFinalQuery)throws Exception
	{
		try
		{
			this.cuentacontableicesForeignKey=new ArrayList<CuentaContable>();

			ArrayList<Classe> clases=new ArrayList<Classe>();
			ArrayList<String> arrClasses=new ArrayList<String>();
			Classe classe=new Classe();
			DatosDeep datosDeep=new DatosDeep(false,DeepLoadType.INCLUDE,clases,"");

			CuentaContableLogic cuentacontableLogic=new CuentaContableLogic();

			//cuentacontableLogic.getCuentaContableDataAccess().setIsForForeingKeyData(true);

			if(this.configuracionpunvenSessionBean==null) {
				this.configuracionpunvenSessionBean=new ConfiguracionPunVenSessionBean();
			}

			if(!this.configuracionpunvenSessionBean.getisBusquedaDesdeForeignKeySesionCuentaContableIce()) {
				//ARCHITECTURE
				if(Constantes.ISUSAEJBLOGICLAYER) {
					//cuentacontableiceLogic.getCuentaContableDataAccess().setIsForForeingKeyData(true);

					cuentacontableLogic.getTodosCuentaContablesWithConnection(sFinalQuery,new Pagination());

					this.cuentacontableicesForeignKey=cuentacontableLogic.getCuentaContables();

				} else if(Constantes.ISUSAEJBREMOTE) {

				} else if(Constantes.ISUSAEJBHOME) {
				}


				//ARCHITECTURE
			} else {
				if(!this.conCargarMinimo) {
					this.setVisibilidadBusquedasParaCuentaContableIce(true);
				}
				//ARCHITECTURE

				if(Constantes.ISUSAEJBLOGICLAYER) {
					cuentacontableLogic.getEntityWithConnection(configuracionpunvenSessionBean.getlidCuentaContableIceActual());
					this.cuentacontableicesForeignKey.add(cuentacontableLogic.getCuentaContable());
				} else if(Constantes.ISUSAEJBREMOTE) {
				} else if(Constantes.ISUSAEJBHOME) {
				}
				//ARCHITECTURE
			}
		}
		catch(Exception e)
		{
			throw e;
		}
	}

	public void cargarCombosCuentaContableOtrossForeignKeyLista(String sFinalQuery)throws Exception
	{
		try
		{
			this.cuentacontableotrossForeignKey=new ArrayList<CuentaContable>();

			ArrayList<Classe> clases=new ArrayList<Classe>();
			ArrayList<String> arrClasses=new ArrayList<String>();
			Classe classe=new Classe();
			DatosDeep datosDeep=new DatosDeep(false,DeepLoadType.INCLUDE,clases,"");

			CuentaContableLogic cuentacontableLogic=new CuentaContableLogic();

			//cuentacontableLogic.getCuentaContableDataAccess().setIsForForeingKeyData(true);

			if(this.configuracionpunvenSessionBean==null) {
				this.configuracionpunvenSessionBean=new ConfiguracionPunVenSessionBean();
			}

			if(!this.configuracionpunvenSessionBean.getisBusquedaDesdeForeignKeySesionCuentaContableOtros()) {
				//ARCHITECTURE
				if(Constantes.ISUSAEJBLOGICLAYER) {
					//cuentacontableotrosLogic.getCuentaContableDataAccess().setIsForForeingKeyData(true);

					cuentacontableLogic.getTodosCuentaContablesWithConnection(sFinalQuery,new Pagination());

					this.cuentacontableotrossForeignKey=cuentacontableLogic.getCuentaContables();

				} else if(Constantes.ISUSAEJBREMOTE) {

				} else if(Constantes.ISUSAEJBHOME) {
				}


				//ARCHITECTURE
			} else {
				if(!this.conCargarMinimo) {
					this.setVisibilidadBusquedasParaCuentaContableOtros(true);
				}
				//ARCHITECTURE

				if(Constantes.ISUSAEJBLOGICLAYER) {
					cuentacontableLogic.getEntityWithConnection(configuracionpunvenSessionBean.getlidCuentaContableOtrosActual());
					this.cuentacontableotrossForeignKey.add(cuentacontableLogic.getCuentaContable());
				} else if(Constantes.ISUSAEJBREMOTE) {
				} else if(Constantes.ISUSAEJBHOME) {
				}
				//ARCHITECTURE
			}
		}
		catch(Exception e)
		{
			throw e;
		}
	}

	public void cargarCombosClienteConsumidorFinalsForeignKeyLista(String sFinalQuery)throws Exception
	{
		try
		{
			this.clienteconsumidorfinalsForeignKey=new ArrayList<Cliente>();

			ArrayList<Classe> clases=new ArrayList<Classe>();
			ArrayList<String> arrClasses=new ArrayList<String>();
			Classe classe=new Classe();
			DatosDeep datosDeep=new DatosDeep(false,DeepLoadType.INCLUDE,clases,"");

			ClienteLogic clienteLogic=new ClienteLogic();

			//clienteLogic.getClienteDataAccess().setIsForForeingKeyData(true);

			if(this.configuracionpunvenSessionBean==null) {
				this.configuracionpunvenSessionBean=new ConfiguracionPunVenSessionBean();
			}

			if(!this.configuracionpunvenSessionBean.getisBusquedaDesdeForeignKeySesionClienteConsumidorFinal()) {
				//ARCHITECTURE
				if(Constantes.ISUSAEJBLOGICLAYER) {
					//clienteconsumidorfinalLogic.getClienteDataAccess().setIsForForeingKeyData(true);

					clienteLogic.getTodosClientesWithConnection(sFinalQuery,new Pagination());

					this.clienteconsumidorfinalsForeignKey=clienteLogic.getClientes();

				} else if(Constantes.ISUSAEJBREMOTE) {

				} else if(Constantes.ISUSAEJBHOME) {
				}


				//ARCHITECTURE
			} else {
				if(!this.conCargarMinimo) {
					this.setVisibilidadBusquedasParaClienteConsumidorFinal(true);
				}
				//ARCHITECTURE

				if(Constantes.ISUSAEJBLOGICLAYER) {
					clienteLogic.getEntityWithConnection(configuracionpunvenSessionBean.getlidClienteConsumidorFinalActual());
					this.clienteconsumidorfinalsForeignKey.add(clienteLogic.getCliente());
				} else if(Constantes.ISUSAEJBREMOTE) {
				} else if(Constantes.ISUSAEJBHOME) {
				}
				//ARCHITECTURE
			}
		}
		catch(Exception e)
		{
			throw e;
		}
	}

	public void cargarCombosTipoDocumentoFacturasForeignKeyLista(String sFinalQuery)throws Exception
	{
		try
		{
			this.tipodocumentofacturasForeignKey=new ArrayList<TipoDocumento>();

			ArrayList<Classe> clases=new ArrayList<Classe>();
			ArrayList<String> arrClasses=new ArrayList<String>();
			Classe classe=new Classe();
			DatosDeep datosDeep=new DatosDeep(false,DeepLoadType.INCLUDE,clases,"");

			TipoDocumentoLogic tipodocumentoLogic=new TipoDocumentoLogic();

			//tipodocumentoLogic.getTipoDocumentoDataAccess().setIsForForeingKeyData(true);

			if(this.configuracionpunvenSessionBean==null) {
				this.configuracionpunvenSessionBean=new ConfiguracionPunVenSessionBean();
			}

			if(!this.configuracionpunvenSessionBean.getisBusquedaDesdeForeignKeySesionTipoDocumentoFactura()) {
				//ARCHITECTURE
				if(Constantes.ISUSAEJBLOGICLAYER) {
					//tipodocumentofacturaLogic.getTipoDocumentoDataAccess().setIsForForeingKeyData(true);

					tipodocumentoLogic.getTodosTipoDocumentosWithConnection(sFinalQuery,new Pagination());

					this.tipodocumentofacturasForeignKey=tipodocumentoLogic.getTipoDocumentos();

				} else if(Constantes.ISUSAEJBREMOTE) {

				} else if(Constantes.ISUSAEJBHOME) {
				}


				//ARCHITECTURE
			} else {
				if(!this.conCargarMinimo) {
					this.setVisibilidadBusquedasParaTipoDocumentoFactura(true);
				}
				//ARCHITECTURE

				if(Constantes.ISUSAEJBLOGICLAYER) {
					tipodocumentoLogic.getEntityWithConnection(configuracionpunvenSessionBean.getlidTipoDocumentoFacturaActual());
					this.tipodocumentofacturasForeignKey.add(tipodocumentoLogic.getTipoDocumento());
				} else if(Constantes.ISUSAEJBREMOTE) {
				} else if(Constantes.ISUSAEJBHOME) {
				}
				//ARCHITECTURE
			}
		}
		catch(Exception e)
		{
			throw e;
		}
	}

	public void cargarCombosTipoDocumentoNotaVentasForeignKeyLista(String sFinalQuery)throws Exception
	{
		try
		{
			this.tipodocumentonotaventasForeignKey=new ArrayList<TipoDocumento>();

			ArrayList<Classe> clases=new ArrayList<Classe>();
			ArrayList<String> arrClasses=new ArrayList<String>();
			Classe classe=new Classe();
			DatosDeep datosDeep=new DatosDeep(false,DeepLoadType.INCLUDE,clases,"");

			TipoDocumentoLogic tipodocumentoLogic=new TipoDocumentoLogic();

			//tipodocumentoLogic.getTipoDocumentoDataAccess().setIsForForeingKeyData(true);

			if(this.configuracionpunvenSessionBean==null) {
				this.configuracionpunvenSessionBean=new ConfiguracionPunVenSessionBean();
			}

			if(!this.configuracionpunvenSessionBean.getisBusquedaDesdeForeignKeySesionTipoDocumentoNotaVenta()) {
				//ARCHITECTURE
				if(Constantes.ISUSAEJBLOGICLAYER) {
					//tipodocumentonotaventaLogic.getTipoDocumentoDataAccess().setIsForForeingKeyData(true);

					tipodocumentoLogic.getTodosTipoDocumentosWithConnection(sFinalQuery,new Pagination());

					this.tipodocumentonotaventasForeignKey=tipodocumentoLogic.getTipoDocumentos();

				} else if(Constantes.ISUSAEJBREMOTE) {

				} else if(Constantes.ISUSAEJBHOME) {
				}


				//ARCHITECTURE
			} else {
				if(!this.conCargarMinimo) {
					this.setVisibilidadBusquedasParaTipoDocumentoNotaVenta(true);
				}
				//ARCHITECTURE

				if(Constantes.ISUSAEJBLOGICLAYER) {
					tipodocumentoLogic.getEntityWithConnection(configuracionpunvenSessionBean.getlidTipoDocumentoNotaVentaActual());
					this.tipodocumentonotaventasForeignKey.add(tipodocumentoLogic.getTipoDocumento());
				} else if(Constantes.ISUSAEJBREMOTE) {
				} else if(Constantes.ISUSAEJBHOME) {
				}
				//ARCHITECTURE
			}
		}
		catch(Exception e)
		{
			throw e;
		}
	}

	public void cargarCombosTipoDocumentoNotaCreditosForeignKeyLista(String sFinalQuery)throws Exception
	{
		try
		{
			this.tipodocumentonotacreditosForeignKey=new ArrayList<TipoDocumento>();

			ArrayList<Classe> clases=new ArrayList<Classe>();
			ArrayList<String> arrClasses=new ArrayList<String>();
			Classe classe=new Classe();
			DatosDeep datosDeep=new DatosDeep(false,DeepLoadType.INCLUDE,clases,"");

			TipoDocumentoLogic tipodocumentoLogic=new TipoDocumentoLogic();

			//tipodocumentoLogic.getTipoDocumentoDataAccess().setIsForForeingKeyData(true);

			if(this.configuracionpunvenSessionBean==null) {
				this.configuracionpunvenSessionBean=new ConfiguracionPunVenSessionBean();
			}

			if(!this.configuracionpunvenSessionBean.getisBusquedaDesdeForeignKeySesionTipoDocumentoNotaCredito()) {
				//ARCHITECTURE
				if(Constantes.ISUSAEJBLOGICLAYER) {
					//tipodocumentonotacreditoLogic.getTipoDocumentoDataAccess().setIsForForeingKeyData(true);

					tipodocumentoLogic.getTodosTipoDocumentosWithConnection(sFinalQuery,new Pagination());

					this.tipodocumentonotacreditosForeignKey=tipodocumentoLogic.getTipoDocumentos();

				} else if(Constantes.ISUSAEJBREMOTE) {

				} else if(Constantes.ISUSAEJBHOME) {
				}


				//ARCHITECTURE
			} else {
				if(!this.conCargarMinimo) {
					this.setVisibilidadBusquedasParaTipoDocumentoNotaCredito(true);
				}
				//ARCHITECTURE

				if(Constantes.ISUSAEJBLOGICLAYER) {
					tipodocumentoLogic.getEntityWithConnection(configuracionpunvenSessionBean.getlidTipoDocumentoNotaCreditoActual());
					this.tipodocumentonotacreditosForeignKey.add(tipodocumentoLogic.getTipoDocumento());
				} else if(Constantes.ISUSAEJBREMOTE) {
				} else if(Constantes.ISUSAEJBHOME) {
				}
				//ARCHITECTURE
			}
		}
		catch(Exception e)
		{
			throw e;
		}
	}

	public void cargarCombosTipoDocumentoTarjetaCreditosForeignKeyLista(String sFinalQuery)throws Exception
	{
		try
		{
			this.tipodocumentotarjetacreditosForeignKey=new ArrayList<TipoDocumento>();

			ArrayList<Classe> clases=new ArrayList<Classe>();
			ArrayList<String> arrClasses=new ArrayList<String>();
			Classe classe=new Classe();
			DatosDeep datosDeep=new DatosDeep(false,DeepLoadType.INCLUDE,clases,"");

			TipoDocumentoLogic tipodocumentoLogic=new TipoDocumentoLogic();

			//tipodocumentoLogic.getTipoDocumentoDataAccess().setIsForForeingKeyData(true);

			if(this.configuracionpunvenSessionBean==null) {
				this.configuracionpunvenSessionBean=new ConfiguracionPunVenSessionBean();
			}

			if(!this.configuracionpunvenSessionBean.getisBusquedaDesdeForeignKeySesionTipoDocumentoTarjetaCredito()) {
				//ARCHITECTURE
				if(Constantes.ISUSAEJBLOGICLAYER) {
					//tipodocumentotarjetacreditoLogic.getTipoDocumentoDataAccess().setIsForForeingKeyData(true);

					tipodocumentoLogic.getTodosTipoDocumentosWithConnection(sFinalQuery,new Pagination());

					this.tipodocumentotarjetacreditosForeignKey=tipodocumentoLogic.getTipoDocumentos();

				} else if(Constantes.ISUSAEJBREMOTE) {

				} else if(Constantes.ISUSAEJBHOME) {
				}


				//ARCHITECTURE
			} else {
				if(!this.conCargarMinimo) {
					this.setVisibilidadBusquedasParaTipoDocumentoTarjetaCredito(true);
				}
				//ARCHITECTURE

				if(Constantes.ISUSAEJBLOGICLAYER) {
					tipodocumentoLogic.getEntityWithConnection(configuracionpunvenSessionBean.getlidTipoDocumentoTarjetaCreditoActual());
					this.tipodocumentotarjetacreditosForeignKey.add(tipodocumentoLogic.getTipoDocumento());
				} else if(Constantes.ISUSAEJBREMOTE) {
				} else if(Constantes.ISUSAEJBHOME) {
				}
				//ARCHITECTURE
			}
		}
		catch(Exception e)
		{
			throw e;
		}
	}

	public void cargarCombosFormatoFacturasForeignKeyLista(String sFinalQuery)throws Exception
	{
		try
		{
			this.formatofacturasForeignKey=new ArrayList<Formato>();

			ArrayList<Classe> clases=new ArrayList<Classe>();
			ArrayList<String> arrClasses=new ArrayList<String>();
			Classe classe=new Classe();
			DatosDeep datosDeep=new DatosDeep(false,DeepLoadType.INCLUDE,clases,"");

			FormatoLogic formatoLogic=new FormatoLogic();

			//formatoLogic.getFormatoDataAccess().setIsForForeingKeyData(true);

			if(this.configuracionpunvenSessionBean==null) {
				this.configuracionpunvenSessionBean=new ConfiguracionPunVenSessionBean();
			}

			if(!this.configuracionpunvenSessionBean.getisBusquedaDesdeForeignKeySesionFormatoFactura()) {
				//ARCHITECTURE
				if(Constantes.ISUSAEJBLOGICLAYER) {
					//formatofacturaLogic.getFormatoDataAccess().setIsForForeingKeyData(true);

					formatoLogic.getTodosFormatosWithConnection(sFinalQuery,new Pagination());

					this.formatofacturasForeignKey=formatoLogic.getFormatos();

				} else if(Constantes.ISUSAEJBREMOTE) {

				} else if(Constantes.ISUSAEJBHOME) {
				}


				//ARCHITECTURE
			} else {
				if(!this.conCargarMinimo) {
					this.setVisibilidadBusquedasParaFormatoFactura(true);
				}
				//ARCHITECTURE

				if(Constantes.ISUSAEJBLOGICLAYER) {
					formatoLogic.getEntityWithConnection(configuracionpunvenSessionBean.getlidFormatoFacturaActual());
					this.formatofacturasForeignKey.add(formatoLogic.getFormato());
				} else if(Constantes.ISUSAEJBREMOTE) {
				} else if(Constantes.ISUSAEJBHOME) {
				}
				//ARCHITECTURE
			}
		}
		catch(Exception e)
		{
			throw e;
		}
	}

	public void cargarCombosFormatoNotaVentasForeignKeyLista(String sFinalQuery)throws Exception
	{
		try
		{
			this.formatonotaventasForeignKey=new ArrayList<Formato>();

			ArrayList<Classe> clases=new ArrayList<Classe>();
			ArrayList<String> arrClasses=new ArrayList<String>();
			Classe classe=new Classe();
			DatosDeep datosDeep=new DatosDeep(false,DeepLoadType.INCLUDE,clases,"");

			FormatoLogic formatoLogic=new FormatoLogic();

			//formatoLogic.getFormatoDataAccess().setIsForForeingKeyData(true);

			if(this.configuracionpunvenSessionBean==null) {
				this.configuracionpunvenSessionBean=new ConfiguracionPunVenSessionBean();
			}

			if(!this.configuracionpunvenSessionBean.getisBusquedaDesdeForeignKeySesionFormatoNotaVenta()) {
				//ARCHITECTURE
				if(Constantes.ISUSAEJBLOGICLAYER) {
					//formatonotaventaLogic.getFormatoDataAccess().setIsForForeingKeyData(true);

					formatoLogic.getTodosFormatosWithConnection(sFinalQuery,new Pagination());

					this.formatonotaventasForeignKey=formatoLogic.getFormatos();

				} else if(Constantes.ISUSAEJBREMOTE) {

				} else if(Constantes.ISUSAEJBHOME) {
				}


				//ARCHITECTURE
			} else {
				if(!this.conCargarMinimo) {
					this.setVisibilidadBusquedasParaFormatoNotaVenta(true);
				}
				//ARCHITECTURE

				if(Constantes.ISUSAEJBLOGICLAYER) {
					formatoLogic.getEntityWithConnection(configuracionpunvenSessionBean.getlidFormatoNotaVentaActual());
					this.formatonotaventasForeignKey.add(formatoLogic.getFormato());
				} else if(Constantes.ISUSAEJBREMOTE) {
				} else if(Constantes.ISUSAEJBHOME) {
				}
				//ARCHITECTURE
			}
		}
		catch(Exception e)
		{
			throw e;
		}
	}

	public void cargarCombosFormatoNotaCreditosForeignKeyLista(String sFinalQuery)throws Exception
	{
		try
		{
			this.formatonotacreditosForeignKey=new ArrayList<Formato>();

			ArrayList<Classe> clases=new ArrayList<Classe>();
			ArrayList<String> arrClasses=new ArrayList<String>();
			Classe classe=new Classe();
			DatosDeep datosDeep=new DatosDeep(false,DeepLoadType.INCLUDE,clases,"");

			FormatoLogic formatoLogic=new FormatoLogic();

			//formatoLogic.getFormatoDataAccess().setIsForForeingKeyData(true);

			if(this.configuracionpunvenSessionBean==null) {
				this.configuracionpunvenSessionBean=new ConfiguracionPunVenSessionBean();
			}

			if(!this.configuracionpunvenSessionBean.getisBusquedaDesdeForeignKeySesionFormatoNotaCredito()) {
				//ARCHITECTURE
				if(Constantes.ISUSAEJBLOGICLAYER) {
					//formatonotacreditoLogic.getFormatoDataAccess().setIsForForeingKeyData(true);

					formatoLogic.getTodosFormatosWithConnection(sFinalQuery,new Pagination());

					this.formatonotacreditosForeignKey=formatoLogic.getFormatos();

				} else if(Constantes.ISUSAEJBREMOTE) {

				} else if(Constantes.ISUSAEJBHOME) {
				}


				//ARCHITECTURE
			} else {
				if(!this.conCargarMinimo) {
					this.setVisibilidadBusquedasParaFormatoNotaCredito(true);
				}
				//ARCHITECTURE

				if(Constantes.ISUSAEJBLOGICLAYER) {
					formatoLogic.getEntityWithConnection(configuracionpunvenSessionBean.getlidFormatoNotaCreditoActual());
					this.formatonotacreditosForeignKey.add(formatoLogic.getFormato());
				} else if(Constantes.ISUSAEJBREMOTE) {
				} else if(Constantes.ISUSAEJBHOME) {
				}
				//ARCHITECTURE
			}
		}
		catch(Exception e)
		{
			throw e;
		}
	}

	public void cargarCombosTransaccionFacturasForeignKeyLista(String sFinalQuery)throws Exception
	{
		try
		{
			this.transaccionfacturasForeignKey=new ArrayList<Transaccion>();

			ArrayList<Classe> clases=new ArrayList<Classe>();
			ArrayList<String> arrClasses=new ArrayList<String>();
			Classe classe=new Classe();
			DatosDeep datosDeep=new DatosDeep(false,DeepLoadType.INCLUDE,clases,"");

			TransaccionLogic transaccionLogic=new TransaccionLogic();

			//transaccionLogic.getTransaccionDataAccess().setIsForForeingKeyData(true);

			if(this.configuracionpunvenSessionBean==null) {
				this.configuracionpunvenSessionBean=new ConfiguracionPunVenSessionBean();
			}

			if(!this.configuracionpunvenSessionBean.getisBusquedaDesdeForeignKeySesionTransaccionFactura()) {
				//ARCHITECTURE
				if(Constantes.ISUSAEJBLOGICLAYER) {
					//transaccionfacturaLogic.getTransaccionDataAccess().setIsForForeingKeyData(true);

					transaccionLogic.getTodosTransaccionsWithConnection(sFinalQuery,new Pagination());

					this.transaccionfacturasForeignKey=transaccionLogic.getTransaccions();

				} else if(Constantes.ISUSAEJBREMOTE) {

				} else if(Constantes.ISUSAEJBHOME) {
				}


				//ARCHITECTURE
			} else {
				if(!this.conCargarMinimo) {
					this.setVisibilidadBusquedasParaTransaccionFactura(true);
				}
				//ARCHITECTURE

				if(Constantes.ISUSAEJBLOGICLAYER) {
					transaccionLogic.getEntityWithConnection(configuracionpunvenSessionBean.getlidTransaccionFacturaActual());
					this.transaccionfacturasForeignKey.add(transaccionLogic.getTransaccion());
				} else if(Constantes.ISUSAEJBREMOTE) {
				} else if(Constantes.ISUSAEJBHOME) {
				}
				//ARCHITECTURE
			}
		}
		catch(Exception e)
		{
			throw e;
		}
	}

	public void cargarCombosTransaccionNotaVentasForeignKeyLista(String sFinalQuery)throws Exception
	{
		try
		{
			this.transaccionnotaventasForeignKey=new ArrayList<Transaccion>();

			ArrayList<Classe> clases=new ArrayList<Classe>();
			ArrayList<String> arrClasses=new ArrayList<String>();
			Classe classe=new Classe();
			DatosDeep datosDeep=new DatosDeep(false,DeepLoadType.INCLUDE,clases,"");

			TransaccionLogic transaccionLogic=new TransaccionLogic();

			//transaccionLogic.getTransaccionDataAccess().setIsForForeingKeyData(true);

			if(this.configuracionpunvenSessionBean==null) {
				this.configuracionpunvenSessionBean=new ConfiguracionPunVenSessionBean();
			}

			if(!this.configuracionpunvenSessionBean.getisBusquedaDesdeForeignKeySesionTransaccionNotaVenta()) {
				//ARCHITECTURE
				if(Constantes.ISUSAEJBLOGICLAYER) {
					//transaccionnotaventaLogic.getTransaccionDataAccess().setIsForForeingKeyData(true);

					transaccionLogic.getTodosTransaccionsWithConnection(sFinalQuery,new Pagination());

					this.transaccionnotaventasForeignKey=transaccionLogic.getTransaccions();

				} else if(Constantes.ISUSAEJBREMOTE) {

				} else if(Constantes.ISUSAEJBHOME) {
				}


				//ARCHITECTURE
			} else {
				if(!this.conCargarMinimo) {
					this.setVisibilidadBusquedasParaTransaccionNotaVenta(true);
				}
				//ARCHITECTURE

				if(Constantes.ISUSAEJBLOGICLAYER) {
					transaccionLogic.getEntityWithConnection(configuracionpunvenSessionBean.getlidTransaccionNotaVentaActual());
					this.transaccionnotaventasForeignKey.add(transaccionLogic.getTransaccion());
				} else if(Constantes.ISUSAEJBREMOTE) {
				} else if(Constantes.ISUSAEJBHOME) {
				}
				//ARCHITECTURE
			}
		}
		catch(Exception e)
		{
			throw e;
		}
	}

	public void cargarCombosTransaccionNotaCreditosForeignKeyLista(String sFinalQuery)throws Exception
	{
		try
		{
			this.transaccionnotacreditosForeignKey=new ArrayList<Transaccion>();

			ArrayList<Classe> clases=new ArrayList<Classe>();
			ArrayList<String> arrClasses=new ArrayList<String>();
			Classe classe=new Classe();
			DatosDeep datosDeep=new DatosDeep(false,DeepLoadType.INCLUDE,clases,"");

			TransaccionLogic transaccionLogic=new TransaccionLogic();

			//transaccionLogic.getTransaccionDataAccess().setIsForForeingKeyData(true);

			if(this.configuracionpunvenSessionBean==null) {
				this.configuracionpunvenSessionBean=new ConfiguracionPunVenSessionBean();
			}

			if(!this.configuracionpunvenSessionBean.getisBusquedaDesdeForeignKeySesionTransaccionNotaCredito()) {
				//ARCHITECTURE
				if(Constantes.ISUSAEJBLOGICLAYER) {
					//transaccionnotacreditoLogic.getTransaccionDataAccess().setIsForForeingKeyData(true);

					transaccionLogic.getTodosTransaccionsWithConnection(sFinalQuery,new Pagination());

					this.transaccionnotacreditosForeignKey=transaccionLogic.getTransaccions();

				} else if(Constantes.ISUSAEJBREMOTE) {

				} else if(Constantes.ISUSAEJBHOME) {
				}


				//ARCHITECTURE
			} else {
				if(!this.conCargarMinimo) {
					this.setVisibilidadBusquedasParaTransaccionNotaCredito(true);
				}
				//ARCHITECTURE

				if(Constantes.ISUSAEJBLOGICLAYER) {
					transaccionLogic.getEntityWithConnection(configuracionpunvenSessionBean.getlidTransaccionNotaCreditoActual());
					this.transaccionnotacreditosForeignKey.add(transaccionLogic.getTransaccion());
				} else if(Constantes.ISUSAEJBREMOTE) {
				} else if(Constantes.ISUSAEJBHOME) {
				}
				//ARCHITECTURE
			}
		}
		catch(Exception e)
		{
			throw e;
		}
	}

	public void cargarCombosTransaccionCuentaFacturasForeignKeyLista(String sFinalQuery)throws Exception
	{
		try
		{
			this.transaccioncuentafacturasForeignKey=new ArrayList<Transaccion>();

			ArrayList<Classe> clases=new ArrayList<Classe>();
			ArrayList<String> arrClasses=new ArrayList<String>();
			Classe classe=new Classe();
			DatosDeep datosDeep=new DatosDeep(false,DeepLoadType.INCLUDE,clases,"");

			TransaccionLogic transaccionLogic=new TransaccionLogic();

			//transaccionLogic.getTransaccionDataAccess().setIsForForeingKeyData(true);

			if(this.configuracionpunvenSessionBean==null) {
				this.configuracionpunvenSessionBean=new ConfiguracionPunVenSessionBean();
			}

			if(!this.configuracionpunvenSessionBean.getisBusquedaDesdeForeignKeySesionTransaccionCuentaFactura()) {
				//ARCHITECTURE
				if(Constantes.ISUSAEJBLOGICLAYER) {
					//transaccioncuentafacturaLogic.getTransaccionDataAccess().setIsForForeingKeyData(true);

					transaccionLogic.getTodosTransaccionsWithConnection(sFinalQuery,new Pagination());

					this.transaccioncuentafacturasForeignKey=transaccionLogic.getTransaccions();

				} else if(Constantes.ISUSAEJBREMOTE) {

				} else if(Constantes.ISUSAEJBHOME) {
				}


				//ARCHITECTURE
			} else {
				if(!this.conCargarMinimo) {
					this.setVisibilidadBusquedasParaTransaccionCuentaFactura(true);
				}
				//ARCHITECTURE

				if(Constantes.ISUSAEJBLOGICLAYER) {
					transaccionLogic.getEntityWithConnection(configuracionpunvenSessionBean.getlidTransaccionCuentaFacturaActual());
					this.transaccioncuentafacturasForeignKey.add(transaccionLogic.getTransaccion());
				} else if(Constantes.ISUSAEJBREMOTE) {
				} else if(Constantes.ISUSAEJBHOME) {
				}
				//ARCHITECTURE
			}
		}
		catch(Exception e)
		{
			throw e;
		}
	}

	public void cargarCombosTransaccionCuentaNotaVentasForeignKeyLista(String sFinalQuery)throws Exception
	{
		try
		{
			this.transaccioncuentanotaventasForeignKey=new ArrayList<Transaccion>();

			ArrayList<Classe> clases=new ArrayList<Classe>();
			ArrayList<String> arrClasses=new ArrayList<String>();
			Classe classe=new Classe();
			DatosDeep datosDeep=new DatosDeep(false,DeepLoadType.INCLUDE,clases,"");

			TransaccionLogic transaccionLogic=new TransaccionLogic();

			//transaccionLogic.getTransaccionDataAccess().setIsForForeingKeyData(true);

			if(this.configuracionpunvenSessionBean==null) {
				this.configuracionpunvenSessionBean=new ConfiguracionPunVenSessionBean();
			}

			if(!this.configuracionpunvenSessionBean.getisBusquedaDesdeForeignKeySesionTransaccionCuentaNotaVenta()) {
				//ARCHITECTURE
				if(Constantes.ISUSAEJBLOGICLAYER) {
					//transaccioncuentanotaventaLogic.getTransaccionDataAccess().setIsForForeingKeyData(true);

					transaccionLogic.getTodosTransaccionsWithConnection(sFinalQuery,new Pagination());

					this.transaccioncuentanotaventasForeignKey=transaccionLogic.getTransaccions();

				} else if(Constantes.ISUSAEJBREMOTE) {

				} else if(Constantes.ISUSAEJBHOME) {
				}


				//ARCHITECTURE
			} else {
				if(!this.conCargarMinimo) {
					this.setVisibilidadBusquedasParaTransaccionCuentaNotaVenta(true);
				}
				//ARCHITECTURE

				if(Constantes.ISUSAEJBLOGICLAYER) {
					transaccionLogic.getEntityWithConnection(configuracionpunvenSessionBean.getlidTransaccionCuentaNotaVentaActual());
					this.transaccioncuentanotaventasForeignKey.add(transaccionLogic.getTransaccion());
				} else if(Constantes.ISUSAEJBREMOTE) {
				} else if(Constantes.ISUSAEJBHOME) {
				}
				//ARCHITECTURE
			}
		}
		catch(Exception e)
		{
			throw e;
		}
	}

	public void cargarCombosTransaccionCuentaNotaCreditosForeignKeyLista(String sFinalQuery)throws Exception
	{
		try
		{
			this.transaccioncuentanotacreditosForeignKey=new ArrayList<Transaccion>();

			ArrayList<Classe> clases=new ArrayList<Classe>();
			ArrayList<String> arrClasses=new ArrayList<String>();
			Classe classe=new Classe();
			DatosDeep datosDeep=new DatosDeep(false,DeepLoadType.INCLUDE,clases,"");

			TransaccionLogic transaccionLogic=new TransaccionLogic();

			//transaccionLogic.getTransaccionDataAccess().setIsForForeingKeyData(true);

			if(this.configuracionpunvenSessionBean==null) {
				this.configuracionpunvenSessionBean=new ConfiguracionPunVenSessionBean();
			}

			if(!this.configuracionpunvenSessionBean.getisBusquedaDesdeForeignKeySesionTransaccionCuentaNotaCredito()) {
				//ARCHITECTURE
				if(Constantes.ISUSAEJBLOGICLAYER) {
					//transaccioncuentanotacreditoLogic.getTransaccionDataAccess().setIsForForeingKeyData(true);

					transaccionLogic.getTodosTransaccionsWithConnection(sFinalQuery,new Pagination());

					this.transaccioncuentanotacreditosForeignKey=transaccionLogic.getTransaccions();

				} else if(Constantes.ISUSAEJBREMOTE) {

				} else if(Constantes.ISUSAEJBHOME) {
				}


				//ARCHITECTURE
			} else {
				if(!this.conCargarMinimo) {
					this.setVisibilidadBusquedasParaTransaccionCuentaNotaCredito(true);
				}
				//ARCHITECTURE

				if(Constantes.ISUSAEJBLOGICLAYER) {
					transaccionLogic.getEntityWithConnection(configuracionpunvenSessionBean.getlidTransaccionCuentaNotaCreditoActual());
					this.transaccioncuentanotacreditosForeignKey.add(transaccionLogic.getTransaccion());
				} else if(Constantes.ISUSAEJBREMOTE) {
				} else if(Constantes.ISUSAEJBHOME) {
				}
				//ARCHITECTURE
			}
		}
		catch(Exception e)
		{
			throw e;
		}
	}

	
	
	public void setActualEmpresaForeignKey(Long idEmpresaSeleccionado,Boolean conCombosBusquedas,String sFormularioTipoBusqueda)throws Exception
	{
		try
		{
			Empresa  empresaTemp=null;

			for(Empresa empresaAux:empresasForeignKey) {
				if(empresaAux.getId()!=null && empresaAux.getId().equals(idEmpresaSeleccionado)) {
					empresaTemp=empresaAux;
					break;
				}
			}

			if(sFormularioTipoBusqueda.equals("Formulario") || sFormularioTipoBusqueda.equals("Todos")){
				if(empresaTemp!=null) {

					if(this.configuracionpunven!=null) {
						this.configuracionpunven.setEmpresa(empresaTemp);
					}

					if(this.jInternalFrameDetalleFormConfiguracionPunVen!=null) {
						this.jInternalFrameDetalleFormConfiguracionPunVen.jComboBoxid_empresaConfiguracionPunVen.setSelectedItem(empresaTemp);
					}
				} else {
					//jComboBoxid_empresaConfiguracionPunVen.setSelectedItem(empresaTemp);
					if(this.jInternalFrameDetalleFormConfiguracionPunVen!=null) {
						if(this.jInternalFrameDetalleFormConfiguracionPunVen.jComboBoxid_empresaConfiguracionPunVen.getItemCount()>0) {
							this.jInternalFrameDetalleFormConfiguracionPunVen.jComboBoxid_empresaConfiguracionPunVen.setSelectedIndex(0);
						}
					}
				}
			}

			if(conCombosBusquedas) {

		//BYDAN_BUSQUEDAS
						

					}

		}
		catch(Exception e)
		{
			throw e;
		}
	}

	public String getActualEmpresaForeignKeyDescripcion(Long idEmpresaSeleccionado)throws Exception
	{
		String sDescripcion="";

		try
		{
			Empresa  empresaTemp=null;

			for(Empresa empresaAux:empresasForeignKey) {
				if(empresaAux.getId()!=null && empresaAux.getId().equals(idEmpresaSeleccionado)) {
					empresaTemp=empresaAux;
					break;
				}
			}


			sDescripcion=EmpresaConstantesFunciones.getEmpresaDescripcion(empresaTemp);
		}
		catch(Exception e)
		{
			throw e;
		}

		return sDescripcion;
	}

	@SuppressWarnings("rawtypes")
	public void setActualEmpresaForeignKeyGenerico(Long idEmpresaSeleccionado,JComboBox jComboBoxid_empresaConfiguracionPunVenGenerico)throws Exception
	{
		try
		{
			Empresa  empresaTemp=null;

			for(Empresa empresaAux:empresasForeignKey) {
				if(empresaAux.getId()!=null && empresaAux.getId().equals(idEmpresaSeleccionado)) {
					empresaTemp=empresaAux;
					break;
				}
			}

			if(empresaTemp!=null) {
				jComboBoxid_empresaConfiguracionPunVenGenerico.setSelectedItem(empresaTemp);
			} else {
				if(jComboBoxid_empresaConfiguracionPunVenGenerico!=null && jComboBoxid_empresaConfiguracionPunVenGenerico.getItemCount()>0) {
					jComboBoxid_empresaConfiguracionPunVenGenerico.setSelectedIndex(0);
				}
			}

		}
		catch(Exception e)
		{
			throw e;
		}

	}

	public void setActualSucursalForeignKey(Long idSucursalSeleccionado,Boolean conCombosBusquedas,String sFormularioTipoBusqueda)throws Exception
	{
		try
		{
			Sucursal  sucursalTemp=null;

			for(Sucursal sucursalAux:sucursalsForeignKey) {
				if(sucursalAux.getId()!=null && sucursalAux.getId().equals(idSucursalSeleccionado)) {
					sucursalTemp=sucursalAux;
					break;
				}
			}

			if(sFormularioTipoBusqueda.equals("Formulario") || sFormularioTipoBusqueda.equals("Todos")){
				if(sucursalTemp!=null) {

					if(this.configuracionpunven!=null) {
						this.configuracionpunven.setSucursal(sucursalTemp);
					}

					if(this.jInternalFrameDetalleFormConfiguracionPunVen!=null) {
						this.jInternalFrameDetalleFormConfiguracionPunVen.jComboBoxid_sucursalConfiguracionPunVen.setSelectedItem(sucursalTemp);
					}
				} else {
					//jComboBoxid_sucursalConfiguracionPunVen.setSelectedItem(sucursalTemp);
					if(this.jInternalFrameDetalleFormConfiguracionPunVen!=null) {
						if(this.jInternalFrameDetalleFormConfiguracionPunVen.jComboBoxid_sucursalConfiguracionPunVen.getItemCount()>0) {
							this.jInternalFrameDetalleFormConfiguracionPunVen.jComboBoxid_sucursalConfiguracionPunVen.setSelectedIndex(0);
						}
					}
				}
			}

			if(conCombosBusquedas) {

		//BYDAN_BUSQUEDAS
						

					}

		}
		catch(Exception e)
		{
			throw e;
		}
	}

	public String getActualSucursalForeignKeyDescripcion(Long idSucursalSeleccionado)throws Exception
	{
		String sDescripcion="";

		try
		{
			Sucursal  sucursalTemp=null;

			for(Sucursal sucursalAux:sucursalsForeignKey) {
				if(sucursalAux.getId()!=null && sucursalAux.getId().equals(idSucursalSeleccionado)) {
					sucursalTemp=sucursalAux;
					break;
				}
			}


			sDescripcion=SucursalConstantesFunciones.getSucursalDescripcion(sucursalTemp);
		}
		catch(Exception e)
		{
			throw e;
		}

		return sDescripcion;
	}

	@SuppressWarnings("rawtypes")
	public void setActualSucursalForeignKeyGenerico(Long idSucursalSeleccionado,JComboBox jComboBoxid_sucursalConfiguracionPunVenGenerico)throws Exception
	{
		try
		{
			Sucursal  sucursalTemp=null;

			for(Sucursal sucursalAux:sucursalsForeignKey) {
				if(sucursalAux.getId()!=null && sucursalAux.getId().equals(idSucursalSeleccionado)) {
					sucursalTemp=sucursalAux;
					break;
				}
			}

			if(sucursalTemp!=null) {
				jComboBoxid_sucursalConfiguracionPunVenGenerico.setSelectedItem(sucursalTemp);
			} else {
				if(jComboBoxid_sucursalConfiguracionPunVenGenerico!=null && jComboBoxid_sucursalConfiguracionPunVenGenerico.getItemCount()>0) {
					jComboBoxid_sucursalConfiguracionPunVenGenerico.setSelectedIndex(0);
				}
			}

		}
		catch(Exception e)
		{
			throw e;
		}

	}

	public void setActualBodegaForeignKey(Long idBodegaSeleccionado,Boolean conCombosBusquedas,String sFormularioTipoBusqueda)throws Exception
	{
		try
		{
			Bodega  bodegaTemp=null;

			for(Bodega bodegaAux:bodegasForeignKey) {
				if(bodegaAux.getId()!=null && bodegaAux.getId().equals(idBodegaSeleccionado)) {
					bodegaTemp=bodegaAux;
					break;
				}
			}

			if(sFormularioTipoBusqueda.equals("Formulario") || sFormularioTipoBusqueda.equals("Todos")){
				if(bodegaTemp!=null) {

					if(this.configuracionpunven!=null) {
						this.configuracionpunven.setBodega(bodegaTemp);
					}

					if(this.jInternalFrameDetalleFormConfiguracionPunVen!=null) {
						this.jInternalFrameDetalleFormConfiguracionPunVen.jComboBoxid_bodegaConfiguracionPunVen.setSelectedItem(bodegaTemp);
					}
				} else {
					//jComboBoxid_bodegaConfiguracionPunVen.setSelectedItem(bodegaTemp);
					if(this.jInternalFrameDetalleFormConfiguracionPunVen!=null) {
						if(this.jInternalFrameDetalleFormConfiguracionPunVen.jComboBoxid_bodegaConfiguracionPunVen.getItemCount()>0) {
							this.jInternalFrameDetalleFormConfiguracionPunVen.jComboBoxid_bodegaConfiguracionPunVen.setSelectedIndex(0);
						}
					}
				}
			}

			if(conCombosBusquedas) {

		//BYDAN_BUSQUEDAS
						
				if(sFormularioTipoBusqueda.equals("FK_IdBodega") || sFormularioTipoBusqueda.equals("Todos")){
					if(bodegaTemp!=null && jComboBoxid_bodegaFK_IdBodegaConfiguracionPunVen!=null) {
						jComboBoxid_bodegaFK_IdBodegaConfiguracionPunVen.setSelectedItem(bodegaTemp);
					} else {
						if(jComboBoxid_bodegaFK_IdBodegaConfiguracionPunVen!=null) {
							//jComboBoxid_bodegaFK_IdBodegaConfiguracionPunVen.setSelectedItem(bodegaTemp);
							if(jComboBoxid_bodegaFK_IdBodegaConfiguracionPunVen.getItemCount()>0) {
								jComboBoxid_bodegaFK_IdBodegaConfiguracionPunVen.setSelectedIndex(0);
							}
						}
					}
				}

					}

		}
		catch(Exception e)
		{
			throw e;
		}
	}

	public String getActualBodegaForeignKeyDescripcion(Long idBodegaSeleccionado)throws Exception
	{
		String sDescripcion="";

		try
		{
			Bodega  bodegaTemp=null;

			for(Bodega bodegaAux:bodegasForeignKey) {
				if(bodegaAux.getId()!=null && bodegaAux.getId().equals(idBodegaSeleccionado)) {
					bodegaTemp=bodegaAux;
					break;
				}
			}


			sDescripcion=BodegaConstantesFunciones.getBodegaDescripcion(bodegaTemp);
		}
		catch(Exception e)
		{
			throw e;
		}

		return sDescripcion;
	}

	@SuppressWarnings("rawtypes")
	public void setActualBodegaForeignKeyGenerico(Long idBodegaSeleccionado,JComboBox jComboBoxid_bodegaConfiguracionPunVenGenerico)throws Exception
	{
		try
		{
			Bodega  bodegaTemp=null;

			for(Bodega bodegaAux:bodegasForeignKey) {
				if(bodegaAux.getId()!=null && bodegaAux.getId().equals(idBodegaSeleccionado)) {
					bodegaTemp=bodegaAux;
					break;
				}
			}

			if(bodegaTemp!=null) {
				jComboBoxid_bodegaConfiguracionPunVenGenerico.setSelectedItem(bodegaTemp);
			} else {
				if(jComboBoxid_bodegaConfiguracionPunVenGenerico!=null && jComboBoxid_bodegaConfiguracionPunVenGenerico.getItemCount()>0) {
					jComboBoxid_bodegaConfiguracionPunVenGenerico.setSelectedIndex(0);
				}
			}

		}
		catch(Exception e)
		{
			throw e;
		}

	}

	public void setActualCuentaContableEfectivoForeignKey(Long idCuentaContableEfectivoSeleccionado,Boolean conCombosBusquedas,String sFormularioTipoBusqueda)throws Exception
	{
		try
		{
			CuentaContable  cuentacontableefectivoTemp=null;

			for(CuentaContable cuentacontableefectivoAux:cuentacontableefectivosForeignKey) {
				if(cuentacontableefectivoAux.getId()!=null && cuentacontableefectivoAux.getId().equals(idCuentaContableEfectivoSeleccionado)) {
					cuentacontableefectivoTemp=cuentacontableefectivoAux;
					break;
				}
			}

			if(sFormularioTipoBusqueda.equals("Formulario") || sFormularioTipoBusqueda.equals("Todos")){
				if(cuentacontableefectivoTemp!=null) {

					if(this.configuracionpunven!=null) {
						this.configuracionpunven.setCuentaContableEfectivo(cuentacontableefectivoTemp);
					}

					if(this.jInternalFrameDetalleFormConfiguracionPunVen!=null) {
						this.jInternalFrameDetalleFormConfiguracionPunVen.jComboBoxid_cuenta_contable_efectivoConfiguracionPunVen.setSelectedItem(cuentacontableefectivoTemp);
					}
				} else {
					//jComboBoxid_cuenta_contable_efectivoConfiguracionPunVen.setSelectedItem(cuentacontableefectivoTemp);
					if(this.jInternalFrameDetalleFormConfiguracionPunVen!=null) {
						if(this.jInternalFrameDetalleFormConfiguracionPunVen.jComboBoxid_cuenta_contable_efectivoConfiguracionPunVen.getItemCount()>0) {
							this.jInternalFrameDetalleFormConfiguracionPunVen.jComboBoxid_cuenta_contable_efectivoConfiguracionPunVen.setSelectedIndex(0);
						}
					}
				}
			}

			if(conCombosBusquedas) {

		//BYDAN_BUSQUEDAS
						
				if(sFormularioTipoBusqueda.equals("FK_IdCuentaContableEfectivo") || sFormularioTipoBusqueda.equals("Todos")){
					if(cuentacontableefectivoTemp!=null && jComboBoxid_cuenta_contable_efectivoFK_IdCuentaContableEfectivoConfiguracionPunVen!=null) {
						jComboBoxid_cuenta_contable_efectivoFK_IdCuentaContableEfectivoConfiguracionPunVen.setSelectedItem(cuentacontableefectivoTemp);
					} else {
						if(jComboBoxid_cuenta_contable_efectivoFK_IdCuentaContableEfectivoConfiguracionPunVen!=null) {
							//jComboBoxid_cuenta_contable_efectivoFK_IdCuentaContableEfectivoConfiguracionPunVen.setSelectedItem(cuentacontableefectivoTemp);
							if(jComboBoxid_cuenta_contable_efectivoFK_IdCuentaContableEfectivoConfiguracionPunVen.getItemCount()>0) {
								jComboBoxid_cuenta_contable_efectivoFK_IdCuentaContableEfectivoConfiguracionPunVen.setSelectedIndex(0);
							}
						}
					}
				}

					}

		}
		catch(Exception e)
		{
			throw e;
		}
	}

	public String getActualCuentaContableEfectivoForeignKeyDescripcion(Long idCuentaContableEfectivoSeleccionado)throws Exception
	{
		String sDescripcion="";

		try
		{
			CuentaContable  cuentacontableefectivoTemp=null;

			for(CuentaContable cuentacontableefectivoAux:cuentacontableefectivosForeignKey) {
				if(cuentacontableefectivoAux.getId()!=null && cuentacontableefectivoAux.getId().equals(idCuentaContableEfectivoSeleccionado)) {
					cuentacontableefectivoTemp=cuentacontableefectivoAux;
					break;
				}
			}


			sDescripcion=CuentaContableConstantesFunciones.getCuentaContableDescripcion(cuentacontableefectivoTemp);
		}
		catch(Exception e)
		{
			throw e;
		}

		return sDescripcion;
	}

	@SuppressWarnings("rawtypes")
	public void setActualCuentaContableEfectivoForeignKeyGenerico(Long idCuentaContableEfectivoSeleccionado,JComboBox jComboBoxid_cuenta_contable_efectivoConfiguracionPunVenGenerico)throws Exception
	{
		try
		{
			CuentaContable  cuentacontableefectivoTemp=null;

			for(CuentaContable cuentacontableefectivoAux:cuentacontableefectivosForeignKey) {
				if(cuentacontableefectivoAux.getId()!=null && cuentacontableefectivoAux.getId().equals(idCuentaContableEfectivoSeleccionado)) {
					cuentacontableefectivoTemp=cuentacontableefectivoAux;
					break;
				}
			}

			if(cuentacontableefectivoTemp!=null) {
				jComboBoxid_cuenta_contable_efectivoConfiguracionPunVenGenerico.setSelectedItem(cuentacontableefectivoTemp);
			} else {
				if(jComboBoxid_cuenta_contable_efectivoConfiguracionPunVenGenerico!=null && jComboBoxid_cuenta_contable_efectivoConfiguracionPunVenGenerico.getItemCount()>0) {
					jComboBoxid_cuenta_contable_efectivoConfiguracionPunVenGenerico.setSelectedIndex(0);
				}
			}

		}
		catch(Exception e)
		{
			throw e;
		}

	}

	public void setActualCuentaContableIceForeignKey(Long idCuentaContableIceSeleccionado,Boolean conCombosBusquedas,String sFormularioTipoBusqueda)throws Exception
	{
		try
		{
			CuentaContable  cuentacontableiceTemp=null;

			for(CuentaContable cuentacontableiceAux:cuentacontableicesForeignKey) {
				if(cuentacontableiceAux.getId()!=null && cuentacontableiceAux.getId().equals(idCuentaContableIceSeleccionado)) {
					cuentacontableiceTemp=cuentacontableiceAux;
					break;
				}
			}

			if(sFormularioTipoBusqueda.equals("Formulario") || sFormularioTipoBusqueda.equals("Todos")){
				if(cuentacontableiceTemp!=null) {

					if(this.configuracionpunven!=null) {
						this.configuracionpunven.setCuentaContableIce(cuentacontableiceTemp);
					}

					if(this.jInternalFrameDetalleFormConfiguracionPunVen!=null) {
						this.jInternalFrameDetalleFormConfiguracionPunVen.jComboBoxid_cuenta_contable_iceConfiguracionPunVen.setSelectedItem(cuentacontableiceTemp);
					}
				} else {
					//jComboBoxid_cuenta_contable_iceConfiguracionPunVen.setSelectedItem(cuentacontableiceTemp);
					if(this.jInternalFrameDetalleFormConfiguracionPunVen!=null) {
						if(this.jInternalFrameDetalleFormConfiguracionPunVen.jComboBoxid_cuenta_contable_iceConfiguracionPunVen.getItemCount()>0) {
							this.jInternalFrameDetalleFormConfiguracionPunVen.jComboBoxid_cuenta_contable_iceConfiguracionPunVen.setSelectedIndex(0);
						}
					}
				}
			}

			if(conCombosBusquedas) {

		//BYDAN_BUSQUEDAS
						
				if(sFormularioTipoBusqueda.equals("FK_IdCuentaContableIce") || sFormularioTipoBusqueda.equals("Todos")){
					if(cuentacontableiceTemp!=null && jComboBoxid_cuenta_contable_iceFK_IdCuentaContableIceConfiguracionPunVen!=null) {
						jComboBoxid_cuenta_contable_iceFK_IdCuentaContableIceConfiguracionPunVen.setSelectedItem(cuentacontableiceTemp);
					} else {
						if(jComboBoxid_cuenta_contable_iceFK_IdCuentaContableIceConfiguracionPunVen!=null) {
							//jComboBoxid_cuenta_contable_iceFK_IdCuentaContableIceConfiguracionPunVen.setSelectedItem(cuentacontableiceTemp);
							if(jComboBoxid_cuenta_contable_iceFK_IdCuentaContableIceConfiguracionPunVen.getItemCount()>0) {
								jComboBoxid_cuenta_contable_iceFK_IdCuentaContableIceConfiguracionPunVen.setSelectedIndex(0);
							}
						}
					}
				}

					}

		}
		catch(Exception e)
		{
			throw e;
		}
	}

	public String getActualCuentaContableIceForeignKeyDescripcion(Long idCuentaContableIceSeleccionado)throws Exception
	{
		String sDescripcion="";

		try
		{
			CuentaContable  cuentacontableiceTemp=null;

			for(CuentaContable cuentacontableiceAux:cuentacontableicesForeignKey) {
				if(cuentacontableiceAux.getId()!=null && cuentacontableiceAux.getId().equals(idCuentaContableIceSeleccionado)) {
					cuentacontableiceTemp=cuentacontableiceAux;
					break;
				}
			}


			sDescripcion=CuentaContableConstantesFunciones.getCuentaContableDescripcion(cuentacontableiceTemp);
		}
		catch(Exception e)
		{
			throw e;
		}

		return sDescripcion;
	}

	@SuppressWarnings("rawtypes")
	public void setActualCuentaContableIceForeignKeyGenerico(Long idCuentaContableIceSeleccionado,JComboBox jComboBoxid_cuenta_contable_iceConfiguracionPunVenGenerico)throws Exception
	{
		try
		{
			CuentaContable  cuentacontableiceTemp=null;

			for(CuentaContable cuentacontableiceAux:cuentacontableicesForeignKey) {
				if(cuentacontableiceAux.getId()!=null && cuentacontableiceAux.getId().equals(idCuentaContableIceSeleccionado)) {
					cuentacontableiceTemp=cuentacontableiceAux;
					break;
				}
			}

			if(cuentacontableiceTemp!=null) {
				jComboBoxid_cuenta_contable_iceConfiguracionPunVenGenerico.setSelectedItem(cuentacontableiceTemp);
			} else {
				if(jComboBoxid_cuenta_contable_iceConfiguracionPunVenGenerico!=null && jComboBoxid_cuenta_contable_iceConfiguracionPunVenGenerico.getItemCount()>0) {
					jComboBoxid_cuenta_contable_iceConfiguracionPunVenGenerico.setSelectedIndex(0);
				}
			}

		}
		catch(Exception e)
		{
			throw e;
		}

	}

	public void setActualCuentaContableOtrosForeignKey(Long idCuentaContableOtrosSeleccionado,Boolean conCombosBusquedas,String sFormularioTipoBusqueda)throws Exception
	{
		try
		{
			CuentaContable  cuentacontableotrosTemp=null;

			for(CuentaContable cuentacontableotrosAux:cuentacontableotrossForeignKey) {
				if(cuentacontableotrosAux.getId()!=null && cuentacontableotrosAux.getId().equals(idCuentaContableOtrosSeleccionado)) {
					cuentacontableotrosTemp=cuentacontableotrosAux;
					break;
				}
			}

			if(sFormularioTipoBusqueda.equals("Formulario") || sFormularioTipoBusqueda.equals("Todos")){
				if(cuentacontableotrosTemp!=null) {

					if(this.configuracionpunven!=null) {
						this.configuracionpunven.setCuentaContableOtros(cuentacontableotrosTemp);
					}

					if(this.jInternalFrameDetalleFormConfiguracionPunVen!=null) {
						this.jInternalFrameDetalleFormConfiguracionPunVen.jComboBoxid_cuenta_contable_otrosConfiguracionPunVen.setSelectedItem(cuentacontableotrosTemp);
					}
				} else {
					//jComboBoxid_cuenta_contable_otrosConfiguracionPunVen.setSelectedItem(cuentacontableotrosTemp);
					if(this.jInternalFrameDetalleFormConfiguracionPunVen!=null) {
						if(this.jInternalFrameDetalleFormConfiguracionPunVen.jComboBoxid_cuenta_contable_otrosConfiguracionPunVen.getItemCount()>0) {
							this.jInternalFrameDetalleFormConfiguracionPunVen.jComboBoxid_cuenta_contable_otrosConfiguracionPunVen.setSelectedIndex(0);
						}
					}
				}
			}

			if(conCombosBusquedas) {

		//BYDAN_BUSQUEDAS
						
				if(sFormularioTipoBusqueda.equals("FK_IdCuentaContableOtros") || sFormularioTipoBusqueda.equals("Todos")){
					if(cuentacontableotrosTemp!=null && jComboBoxid_cuenta_contable_otrosFK_IdCuentaContableOtrosConfiguracionPunVen!=null) {
						jComboBoxid_cuenta_contable_otrosFK_IdCuentaContableOtrosConfiguracionPunVen.setSelectedItem(cuentacontableotrosTemp);
					} else {
						if(jComboBoxid_cuenta_contable_otrosFK_IdCuentaContableOtrosConfiguracionPunVen!=null) {
							//jComboBoxid_cuenta_contable_otrosFK_IdCuentaContableOtrosConfiguracionPunVen.setSelectedItem(cuentacontableotrosTemp);
							if(jComboBoxid_cuenta_contable_otrosFK_IdCuentaContableOtrosConfiguracionPunVen.getItemCount()>0) {
								jComboBoxid_cuenta_contable_otrosFK_IdCuentaContableOtrosConfiguracionPunVen.setSelectedIndex(0);
							}
						}
					}
				}

					}

		}
		catch(Exception e)
		{
			throw e;
		}
	}

	public String getActualCuentaContableOtrosForeignKeyDescripcion(Long idCuentaContableOtrosSeleccionado)throws Exception
	{
		String sDescripcion="";

		try
		{
			CuentaContable  cuentacontableotrosTemp=null;

			for(CuentaContable cuentacontableotrosAux:cuentacontableotrossForeignKey) {
				if(cuentacontableotrosAux.getId()!=null && cuentacontableotrosAux.getId().equals(idCuentaContableOtrosSeleccionado)) {
					cuentacontableotrosTemp=cuentacontableotrosAux;
					break;
				}
			}


			sDescripcion=CuentaContableConstantesFunciones.getCuentaContableDescripcion(cuentacontableotrosTemp);
		}
		catch(Exception e)
		{
			throw e;
		}

		return sDescripcion;
	}

	@SuppressWarnings("rawtypes")
	public void setActualCuentaContableOtrosForeignKeyGenerico(Long idCuentaContableOtrosSeleccionado,JComboBox jComboBoxid_cuenta_contable_otrosConfiguracionPunVenGenerico)throws Exception
	{
		try
		{
			CuentaContable  cuentacontableotrosTemp=null;

			for(CuentaContable cuentacontableotrosAux:cuentacontableotrossForeignKey) {
				if(cuentacontableotrosAux.getId()!=null && cuentacontableotrosAux.getId().equals(idCuentaContableOtrosSeleccionado)) {
					cuentacontableotrosTemp=cuentacontableotrosAux;
					break;
				}
			}

			if(cuentacontableotrosTemp!=null) {
				jComboBoxid_cuenta_contable_otrosConfiguracionPunVenGenerico.setSelectedItem(cuentacontableotrosTemp);
			} else {
				if(jComboBoxid_cuenta_contable_otrosConfiguracionPunVenGenerico!=null && jComboBoxid_cuenta_contable_otrosConfiguracionPunVenGenerico.getItemCount()>0) {
					jComboBoxid_cuenta_contable_otrosConfiguracionPunVenGenerico.setSelectedIndex(0);
				}
			}

		}
		catch(Exception e)
		{
			throw e;
		}

	}

	public void setActualClienteConsumidorFinalForeignKey(Long idClienteConsumidorFinalSeleccionado,Boolean conCombosBusquedas,String sFormularioTipoBusqueda)throws Exception
	{
		try
		{
			Cliente  clienteconsumidorfinalTemp=null;

			for(Cliente clienteconsumidorfinalAux:clienteconsumidorfinalsForeignKey) {
				if(clienteconsumidorfinalAux.getId()!=null && clienteconsumidorfinalAux.getId().equals(idClienteConsumidorFinalSeleccionado)) {
					clienteconsumidorfinalTemp=clienteconsumidorfinalAux;
					break;
				}
			}

			if(sFormularioTipoBusqueda.equals("Formulario") || sFormularioTipoBusqueda.equals("Todos")){
				if(clienteconsumidorfinalTemp!=null) {

					if(this.configuracionpunven!=null) {
						this.configuracionpunven.setClienteConsumidorFinal(clienteconsumidorfinalTemp);
					}

					if(this.jInternalFrameDetalleFormConfiguracionPunVen!=null) {
						this.jInternalFrameDetalleFormConfiguracionPunVen.jComboBoxid_cliente_consumidor_finalConfiguracionPunVen.setSelectedItem(clienteconsumidorfinalTemp);
					}
				} else {
					//jComboBoxid_cliente_consumidor_finalConfiguracionPunVen.setSelectedItem(clienteconsumidorfinalTemp);
					if(this.jInternalFrameDetalleFormConfiguracionPunVen!=null) {
						if(this.jInternalFrameDetalleFormConfiguracionPunVen.jComboBoxid_cliente_consumidor_finalConfiguracionPunVen.getItemCount()>0) {
							this.jInternalFrameDetalleFormConfiguracionPunVen.jComboBoxid_cliente_consumidor_finalConfiguracionPunVen.setSelectedIndex(0);
						}
					}
				}
			}

			if(conCombosBusquedas) {

		//BYDAN_BUSQUEDAS
						
				if(sFormularioTipoBusqueda.equals("FK_IdClienteConsumidorFinal") || sFormularioTipoBusqueda.equals("Todos")){
					if(clienteconsumidorfinalTemp!=null && jComboBoxid_cliente_consumidor_finalFK_IdClienteConsumidorFinalConfiguracionPunVen!=null) {
						jComboBoxid_cliente_consumidor_finalFK_IdClienteConsumidorFinalConfiguracionPunVen.setSelectedItem(clienteconsumidorfinalTemp);
					} else {
						if(jComboBoxid_cliente_consumidor_finalFK_IdClienteConsumidorFinalConfiguracionPunVen!=null) {
							//jComboBoxid_cliente_consumidor_finalFK_IdClienteConsumidorFinalConfiguracionPunVen.setSelectedItem(clienteconsumidorfinalTemp);
							if(jComboBoxid_cliente_consumidor_finalFK_IdClienteConsumidorFinalConfiguracionPunVen.getItemCount()>0) {
								jComboBoxid_cliente_consumidor_finalFK_IdClienteConsumidorFinalConfiguracionPunVen.setSelectedIndex(0);
							}
						}
					}
				}

					}

		}
		catch(Exception e)
		{
			throw e;
		}
	}

	public String getActualClienteConsumidorFinalForeignKeyDescripcion(Long idClienteConsumidorFinalSeleccionado)throws Exception
	{
		String sDescripcion="";

		try
		{
			Cliente  clienteconsumidorfinalTemp=null;

			for(Cliente clienteconsumidorfinalAux:clienteconsumidorfinalsForeignKey) {
				if(clienteconsumidorfinalAux.getId()!=null && clienteconsumidorfinalAux.getId().equals(idClienteConsumidorFinalSeleccionado)) {
					clienteconsumidorfinalTemp=clienteconsumidorfinalAux;
					break;
				}
			}


			sDescripcion=ClienteConstantesFunciones.getClienteDescripcion(clienteconsumidorfinalTemp);
		}
		catch(Exception e)
		{
			throw e;
		}

		return sDescripcion;
	}

	@SuppressWarnings("rawtypes")
	public void setActualClienteConsumidorFinalForeignKeyGenerico(Long idClienteConsumidorFinalSeleccionado,JComboBox jComboBoxid_cliente_consumidor_finalConfiguracionPunVenGenerico)throws Exception
	{
		try
		{
			Cliente  clienteconsumidorfinalTemp=null;

			for(Cliente clienteconsumidorfinalAux:clienteconsumidorfinalsForeignKey) {
				if(clienteconsumidorfinalAux.getId()!=null && clienteconsumidorfinalAux.getId().equals(idClienteConsumidorFinalSeleccionado)) {
					clienteconsumidorfinalTemp=clienteconsumidorfinalAux;
					break;
				}
			}

			if(clienteconsumidorfinalTemp!=null) {
				jComboBoxid_cliente_consumidor_finalConfiguracionPunVenGenerico.setSelectedItem(clienteconsumidorfinalTemp);
			} else {
				if(jComboBoxid_cliente_consumidor_finalConfiguracionPunVenGenerico!=null && jComboBoxid_cliente_consumidor_finalConfiguracionPunVenGenerico.getItemCount()>0) {
					jComboBoxid_cliente_consumidor_finalConfiguracionPunVenGenerico.setSelectedIndex(0);
				}
			}

		}
		catch(Exception e)
		{
			throw e;
		}

	}

	public void setActualTipoDocumentoFacturaForeignKey(Long idTipoDocumentoFacturaSeleccionado,Boolean conCombosBusquedas,String sFormularioTipoBusqueda)throws Exception
	{
		try
		{
			TipoDocumento  tipodocumentofacturaTemp=null;

			for(TipoDocumento tipodocumentofacturaAux:tipodocumentofacturasForeignKey) {
				if(tipodocumentofacturaAux.getId()!=null && tipodocumentofacturaAux.getId().equals(idTipoDocumentoFacturaSeleccionado)) {
					tipodocumentofacturaTemp=tipodocumentofacturaAux;
					break;
				}
			}

			if(sFormularioTipoBusqueda.equals("Formulario") || sFormularioTipoBusqueda.equals("Todos")){
				if(tipodocumentofacturaTemp!=null) {

					if(this.configuracionpunven!=null) {
						this.configuracionpunven.setTipoDocumentoFactura(tipodocumentofacturaTemp);
					}

					if(this.jInternalFrameDetalleFormConfiguracionPunVen!=null) {
						this.jInternalFrameDetalleFormConfiguracionPunVen.jComboBoxid_tipo_documento_facturaConfiguracionPunVen.setSelectedItem(tipodocumentofacturaTemp);
					}
				} else {
					//jComboBoxid_tipo_documento_facturaConfiguracionPunVen.setSelectedItem(tipodocumentofacturaTemp);
					if(this.jInternalFrameDetalleFormConfiguracionPunVen!=null) {
						if(this.jInternalFrameDetalleFormConfiguracionPunVen.jComboBoxid_tipo_documento_facturaConfiguracionPunVen.getItemCount()>0) {
							this.jInternalFrameDetalleFormConfiguracionPunVen.jComboBoxid_tipo_documento_facturaConfiguracionPunVen.setSelectedIndex(0);
						}
					}
				}
			}

			if(conCombosBusquedas) {

		//BYDAN_BUSQUEDAS
						
				if(sFormularioTipoBusqueda.equals("FK_IdTipoDocumentoFactura") || sFormularioTipoBusqueda.equals("Todos")){
					if(tipodocumentofacturaTemp!=null && jComboBoxid_tipo_documento_facturaFK_IdTipoDocumentoFacturaConfiguracionPunVen!=null) {
						jComboBoxid_tipo_documento_facturaFK_IdTipoDocumentoFacturaConfiguracionPunVen.setSelectedItem(tipodocumentofacturaTemp);
					} else {
						if(jComboBoxid_tipo_documento_facturaFK_IdTipoDocumentoFacturaConfiguracionPunVen!=null) {
							//jComboBoxid_tipo_documento_facturaFK_IdTipoDocumentoFacturaConfiguracionPunVen.setSelectedItem(tipodocumentofacturaTemp);
							if(jComboBoxid_tipo_documento_facturaFK_IdTipoDocumentoFacturaConfiguracionPunVen.getItemCount()>0) {
								jComboBoxid_tipo_documento_facturaFK_IdTipoDocumentoFacturaConfiguracionPunVen.setSelectedIndex(0);
							}
						}
					}
				}

					}

		}
		catch(Exception e)
		{
			throw e;
		}
	}

	public String getActualTipoDocumentoFacturaForeignKeyDescripcion(Long idTipoDocumentoFacturaSeleccionado)throws Exception
	{
		String sDescripcion="";

		try
		{
			TipoDocumento  tipodocumentofacturaTemp=null;

			for(TipoDocumento tipodocumentofacturaAux:tipodocumentofacturasForeignKey) {
				if(tipodocumentofacturaAux.getId()!=null && tipodocumentofacturaAux.getId().equals(idTipoDocumentoFacturaSeleccionado)) {
					tipodocumentofacturaTemp=tipodocumentofacturaAux;
					break;
				}
			}


			sDescripcion=TipoDocumentoConstantesFunciones.getTipoDocumentoDescripcion(tipodocumentofacturaTemp);
		}
		catch(Exception e)
		{
			throw e;
		}

		return sDescripcion;
	}

	@SuppressWarnings("rawtypes")
	public void setActualTipoDocumentoFacturaForeignKeyGenerico(Long idTipoDocumentoFacturaSeleccionado,JComboBox jComboBoxid_tipo_documento_facturaConfiguracionPunVenGenerico)throws Exception
	{
		try
		{
			TipoDocumento  tipodocumentofacturaTemp=null;

			for(TipoDocumento tipodocumentofacturaAux:tipodocumentofacturasForeignKey) {
				if(tipodocumentofacturaAux.getId()!=null && tipodocumentofacturaAux.getId().equals(idTipoDocumentoFacturaSeleccionado)) {
					tipodocumentofacturaTemp=tipodocumentofacturaAux;
					break;
				}
			}

			if(tipodocumentofacturaTemp!=null) {
				jComboBoxid_tipo_documento_facturaConfiguracionPunVenGenerico.setSelectedItem(tipodocumentofacturaTemp);
			} else {
				if(jComboBoxid_tipo_documento_facturaConfiguracionPunVenGenerico!=null && jComboBoxid_tipo_documento_facturaConfiguracionPunVenGenerico.getItemCount()>0) {
					jComboBoxid_tipo_documento_facturaConfiguracionPunVenGenerico.setSelectedIndex(0);
				}
			}

		}
		catch(Exception e)
		{
			throw e;
		}

	}

	public void setActualTipoDocumentoNotaVentaForeignKey(Long idTipoDocumentoNotaVentaSeleccionado,Boolean conCombosBusquedas,String sFormularioTipoBusqueda)throws Exception
	{
		try
		{
			TipoDocumento  tipodocumentonotaventaTemp=null;

			for(TipoDocumento tipodocumentonotaventaAux:tipodocumentonotaventasForeignKey) {
				if(tipodocumentonotaventaAux.getId()!=null && tipodocumentonotaventaAux.getId().equals(idTipoDocumentoNotaVentaSeleccionado)) {
					tipodocumentonotaventaTemp=tipodocumentonotaventaAux;
					break;
				}
			}

			if(sFormularioTipoBusqueda.equals("Formulario") || sFormularioTipoBusqueda.equals("Todos")){
				if(tipodocumentonotaventaTemp!=null) {

					if(this.configuracionpunven!=null) {
						this.configuracionpunven.setTipoDocumentoNotaVenta(tipodocumentonotaventaTemp);
					}

					if(this.jInternalFrameDetalleFormConfiguracionPunVen!=null) {
						this.jInternalFrameDetalleFormConfiguracionPunVen.jComboBoxid_tipo_documento_nota_ventaConfiguracionPunVen.setSelectedItem(tipodocumentonotaventaTemp);
					}
				} else {
					//jComboBoxid_tipo_documento_nota_ventaConfiguracionPunVen.setSelectedItem(tipodocumentonotaventaTemp);
					if(this.jInternalFrameDetalleFormConfiguracionPunVen!=null) {
						if(this.jInternalFrameDetalleFormConfiguracionPunVen.jComboBoxid_tipo_documento_nota_ventaConfiguracionPunVen.getItemCount()>0) {
							this.jInternalFrameDetalleFormConfiguracionPunVen.jComboBoxid_tipo_documento_nota_ventaConfiguracionPunVen.setSelectedIndex(0);
						}
					}
				}
			}

			if(conCombosBusquedas) {

		//BYDAN_BUSQUEDAS
						
				if(sFormularioTipoBusqueda.equals("FK_IdTipoDocumentoNotaVenta") || sFormularioTipoBusqueda.equals("Todos")){
					if(tipodocumentonotaventaTemp!=null && jComboBoxid_tipo_documento_nota_ventaFK_IdTipoDocumentoNotaVentaConfiguracionPunVen!=null) {
						jComboBoxid_tipo_documento_nota_ventaFK_IdTipoDocumentoNotaVentaConfiguracionPunVen.setSelectedItem(tipodocumentonotaventaTemp);
					} else {
						if(jComboBoxid_tipo_documento_nota_ventaFK_IdTipoDocumentoNotaVentaConfiguracionPunVen!=null) {
							//jComboBoxid_tipo_documento_nota_ventaFK_IdTipoDocumentoNotaVentaConfiguracionPunVen.setSelectedItem(tipodocumentonotaventaTemp);
							if(jComboBoxid_tipo_documento_nota_ventaFK_IdTipoDocumentoNotaVentaConfiguracionPunVen.getItemCount()>0) {
								jComboBoxid_tipo_documento_nota_ventaFK_IdTipoDocumentoNotaVentaConfiguracionPunVen.setSelectedIndex(0);
							}
						}
					}
				}

					}

		}
		catch(Exception e)
		{
			throw e;
		}
	}

	public String getActualTipoDocumentoNotaVentaForeignKeyDescripcion(Long idTipoDocumentoNotaVentaSeleccionado)throws Exception
	{
		String sDescripcion="";

		try
		{
			TipoDocumento  tipodocumentonotaventaTemp=null;

			for(TipoDocumento tipodocumentonotaventaAux:tipodocumentonotaventasForeignKey) {
				if(tipodocumentonotaventaAux.getId()!=null && tipodocumentonotaventaAux.getId().equals(idTipoDocumentoNotaVentaSeleccionado)) {
					tipodocumentonotaventaTemp=tipodocumentonotaventaAux;
					break;
				}
			}


			sDescripcion=TipoDocumentoConstantesFunciones.getTipoDocumentoDescripcion(tipodocumentonotaventaTemp);
		}
		catch(Exception e)
		{
			throw e;
		}

		return sDescripcion;
	}

	@SuppressWarnings("rawtypes")
	public void setActualTipoDocumentoNotaVentaForeignKeyGenerico(Long idTipoDocumentoNotaVentaSeleccionado,JComboBox jComboBoxid_tipo_documento_nota_ventaConfiguracionPunVenGenerico)throws Exception
	{
		try
		{
			TipoDocumento  tipodocumentonotaventaTemp=null;

			for(TipoDocumento tipodocumentonotaventaAux:tipodocumentonotaventasForeignKey) {
				if(tipodocumentonotaventaAux.getId()!=null && tipodocumentonotaventaAux.getId().equals(idTipoDocumentoNotaVentaSeleccionado)) {
					tipodocumentonotaventaTemp=tipodocumentonotaventaAux;
					break;
				}
			}

			if(tipodocumentonotaventaTemp!=null) {
				jComboBoxid_tipo_documento_nota_ventaConfiguracionPunVenGenerico.setSelectedItem(tipodocumentonotaventaTemp);
			} else {
				if(jComboBoxid_tipo_documento_nota_ventaConfiguracionPunVenGenerico!=null && jComboBoxid_tipo_documento_nota_ventaConfiguracionPunVenGenerico.getItemCount()>0) {
					jComboBoxid_tipo_documento_nota_ventaConfiguracionPunVenGenerico.setSelectedIndex(0);
				}
			}

		}
		catch(Exception e)
		{
			throw e;
		}

	}

	public void setActualTipoDocumentoNotaCreditoForeignKey(Long idTipoDocumentoNotaCreditoSeleccionado,Boolean conCombosBusquedas,String sFormularioTipoBusqueda)throws Exception
	{
		try
		{
			TipoDocumento  tipodocumentonotacreditoTemp=null;

			for(TipoDocumento tipodocumentonotacreditoAux:tipodocumentonotacreditosForeignKey) {
				if(tipodocumentonotacreditoAux.getId()!=null && tipodocumentonotacreditoAux.getId().equals(idTipoDocumentoNotaCreditoSeleccionado)) {
					tipodocumentonotacreditoTemp=tipodocumentonotacreditoAux;
					break;
				}
			}

			if(sFormularioTipoBusqueda.equals("Formulario") || sFormularioTipoBusqueda.equals("Todos")){
				if(tipodocumentonotacreditoTemp!=null) {

					if(this.configuracionpunven!=null) {
						this.configuracionpunven.setTipoDocumentoNotaCredito(tipodocumentonotacreditoTemp);
					}

					if(this.jInternalFrameDetalleFormConfiguracionPunVen!=null) {
						this.jInternalFrameDetalleFormConfiguracionPunVen.jComboBoxid_tipo_documento_nota_creditoConfiguracionPunVen.setSelectedItem(tipodocumentonotacreditoTemp);
					}
				} else {
					//jComboBoxid_tipo_documento_nota_creditoConfiguracionPunVen.setSelectedItem(tipodocumentonotacreditoTemp);
					if(this.jInternalFrameDetalleFormConfiguracionPunVen!=null) {
						if(this.jInternalFrameDetalleFormConfiguracionPunVen.jComboBoxid_tipo_documento_nota_creditoConfiguracionPunVen.getItemCount()>0) {
							this.jInternalFrameDetalleFormConfiguracionPunVen.jComboBoxid_tipo_documento_nota_creditoConfiguracionPunVen.setSelectedIndex(0);
						}
					}
				}
			}

			if(conCombosBusquedas) {

		//BYDAN_BUSQUEDAS
						
				if(sFormularioTipoBusqueda.equals("FK_IdTipoDocumentoNotaCredito") || sFormularioTipoBusqueda.equals("Todos")){
					if(tipodocumentonotacreditoTemp!=null && jComboBoxid_tipo_documento_nota_creditoFK_IdTipoDocumentoNotaCreditoConfiguracionPunVen!=null) {
						jComboBoxid_tipo_documento_nota_creditoFK_IdTipoDocumentoNotaCreditoConfiguracionPunVen.setSelectedItem(tipodocumentonotacreditoTemp);
					} else {
						if(jComboBoxid_tipo_documento_nota_creditoFK_IdTipoDocumentoNotaCreditoConfiguracionPunVen!=null) {
							//jComboBoxid_tipo_documento_nota_creditoFK_IdTipoDocumentoNotaCreditoConfiguracionPunVen.setSelectedItem(tipodocumentonotacreditoTemp);
							if(jComboBoxid_tipo_documento_nota_creditoFK_IdTipoDocumentoNotaCreditoConfiguracionPunVen.getItemCount()>0) {
								jComboBoxid_tipo_documento_nota_creditoFK_IdTipoDocumentoNotaCreditoConfiguracionPunVen.setSelectedIndex(0);
							}
						}
					}
				}

					}

		}
		catch(Exception e)
		{
			throw e;
		}
	}

	public String getActualTipoDocumentoNotaCreditoForeignKeyDescripcion(Long idTipoDocumentoNotaCreditoSeleccionado)throws Exception
	{
		String sDescripcion="";

		try
		{
			TipoDocumento  tipodocumentonotacreditoTemp=null;

			for(TipoDocumento tipodocumentonotacreditoAux:tipodocumentonotacreditosForeignKey) {
				if(tipodocumentonotacreditoAux.getId()!=null && tipodocumentonotacreditoAux.getId().equals(idTipoDocumentoNotaCreditoSeleccionado)) {
					tipodocumentonotacreditoTemp=tipodocumentonotacreditoAux;
					break;
				}
			}


			sDescripcion=TipoDocumentoConstantesFunciones.getTipoDocumentoDescripcion(tipodocumentonotacreditoTemp);
		}
		catch(Exception e)
		{
			throw e;
		}

		return sDescripcion;
	}

	@SuppressWarnings("rawtypes")
	public void setActualTipoDocumentoNotaCreditoForeignKeyGenerico(Long idTipoDocumentoNotaCreditoSeleccionado,JComboBox jComboBoxid_tipo_documento_nota_creditoConfiguracionPunVenGenerico)throws Exception
	{
		try
		{
			TipoDocumento  tipodocumentonotacreditoTemp=null;

			for(TipoDocumento tipodocumentonotacreditoAux:tipodocumentonotacreditosForeignKey) {
				if(tipodocumentonotacreditoAux.getId()!=null && tipodocumentonotacreditoAux.getId().equals(idTipoDocumentoNotaCreditoSeleccionado)) {
					tipodocumentonotacreditoTemp=tipodocumentonotacreditoAux;
					break;
				}
			}

			if(tipodocumentonotacreditoTemp!=null) {
				jComboBoxid_tipo_documento_nota_creditoConfiguracionPunVenGenerico.setSelectedItem(tipodocumentonotacreditoTemp);
			} else {
				if(jComboBoxid_tipo_documento_nota_creditoConfiguracionPunVenGenerico!=null && jComboBoxid_tipo_documento_nota_creditoConfiguracionPunVenGenerico.getItemCount()>0) {
					jComboBoxid_tipo_documento_nota_creditoConfiguracionPunVenGenerico.setSelectedIndex(0);
				}
			}

		}
		catch(Exception e)
		{
			throw e;
		}

	}

	public void setActualTipoDocumentoTarjetaCreditoForeignKey(Long idTipoDocumentoTarjetaCreditoSeleccionado,Boolean conCombosBusquedas,String sFormularioTipoBusqueda)throws Exception
	{
		try
		{
			TipoDocumento  tipodocumentotarjetacreditoTemp=null;

			for(TipoDocumento tipodocumentotarjetacreditoAux:tipodocumentotarjetacreditosForeignKey) {
				if(tipodocumentotarjetacreditoAux.getId()!=null && tipodocumentotarjetacreditoAux.getId().equals(idTipoDocumentoTarjetaCreditoSeleccionado)) {
					tipodocumentotarjetacreditoTemp=tipodocumentotarjetacreditoAux;
					break;
				}
			}

			if(sFormularioTipoBusqueda.equals("Formulario") || sFormularioTipoBusqueda.equals("Todos")){
				if(tipodocumentotarjetacreditoTemp!=null) {

					if(this.configuracionpunven!=null) {
						this.configuracionpunven.setTipoDocumentoTarjetaCredito(tipodocumentotarjetacreditoTemp);
					}

					if(this.jInternalFrameDetalleFormConfiguracionPunVen!=null) {
						this.jInternalFrameDetalleFormConfiguracionPunVen.jComboBoxid_tipo_documento_tarjeta_creditoConfiguracionPunVen.setSelectedItem(tipodocumentotarjetacreditoTemp);
					}
				} else {
					//jComboBoxid_tipo_documento_tarjeta_creditoConfiguracionPunVen.setSelectedItem(tipodocumentotarjetacreditoTemp);
					if(this.jInternalFrameDetalleFormConfiguracionPunVen!=null) {
						if(this.jInternalFrameDetalleFormConfiguracionPunVen.jComboBoxid_tipo_documento_tarjeta_creditoConfiguracionPunVen.getItemCount()>0) {
							this.jInternalFrameDetalleFormConfiguracionPunVen.jComboBoxid_tipo_documento_tarjeta_creditoConfiguracionPunVen.setSelectedIndex(0);
						}
					}
				}
			}

			if(conCombosBusquedas) {

		//BYDAN_BUSQUEDAS
						
				if(sFormularioTipoBusqueda.equals("FK_IdTipoDocumentoTarjetaCredito") || sFormularioTipoBusqueda.equals("Todos")){
					if(tipodocumentotarjetacreditoTemp!=null && jComboBoxid_tipo_documento_tarjeta_creditoFK_IdTipoDocumentoTarjetaCreditoConfiguracionPunVen!=null) {
						jComboBoxid_tipo_documento_tarjeta_creditoFK_IdTipoDocumentoTarjetaCreditoConfiguracionPunVen.setSelectedItem(tipodocumentotarjetacreditoTemp);
					} else {
						if(jComboBoxid_tipo_documento_tarjeta_creditoFK_IdTipoDocumentoTarjetaCreditoConfiguracionPunVen!=null) {
							//jComboBoxid_tipo_documento_tarjeta_creditoFK_IdTipoDocumentoTarjetaCreditoConfiguracionPunVen.setSelectedItem(tipodocumentotarjetacreditoTemp);
							if(jComboBoxid_tipo_documento_tarjeta_creditoFK_IdTipoDocumentoTarjetaCreditoConfiguracionPunVen.getItemCount()>0) {
								jComboBoxid_tipo_documento_tarjeta_creditoFK_IdTipoDocumentoTarjetaCreditoConfiguracionPunVen.setSelectedIndex(0);
							}
						}
					}
				}

					}

		}
		catch(Exception e)
		{
			throw e;
		}
	}

	public String getActualTipoDocumentoTarjetaCreditoForeignKeyDescripcion(Long idTipoDocumentoTarjetaCreditoSeleccionado)throws Exception
	{
		String sDescripcion="";

		try
		{
			TipoDocumento  tipodocumentotarjetacreditoTemp=null;

			for(TipoDocumento tipodocumentotarjetacreditoAux:tipodocumentotarjetacreditosForeignKey) {
				if(tipodocumentotarjetacreditoAux.getId()!=null && tipodocumentotarjetacreditoAux.getId().equals(idTipoDocumentoTarjetaCreditoSeleccionado)) {
					tipodocumentotarjetacreditoTemp=tipodocumentotarjetacreditoAux;
					break;
				}
			}


			sDescripcion=TipoDocumentoConstantesFunciones.getTipoDocumentoDescripcion(tipodocumentotarjetacreditoTemp);
		}
		catch(Exception e)
		{
			throw e;
		}

		return sDescripcion;
	}

	@SuppressWarnings("rawtypes")
	public void setActualTipoDocumentoTarjetaCreditoForeignKeyGenerico(Long idTipoDocumentoTarjetaCreditoSeleccionado,JComboBox jComboBoxid_tipo_documento_tarjeta_creditoConfiguracionPunVenGenerico)throws Exception
	{
		try
		{
			TipoDocumento  tipodocumentotarjetacreditoTemp=null;

			for(TipoDocumento tipodocumentotarjetacreditoAux:tipodocumentotarjetacreditosForeignKey) {
				if(tipodocumentotarjetacreditoAux.getId()!=null && tipodocumentotarjetacreditoAux.getId().equals(idTipoDocumentoTarjetaCreditoSeleccionado)) {
					tipodocumentotarjetacreditoTemp=tipodocumentotarjetacreditoAux;
					break;
				}
			}

			if(tipodocumentotarjetacreditoTemp!=null) {
				jComboBoxid_tipo_documento_tarjeta_creditoConfiguracionPunVenGenerico.setSelectedItem(tipodocumentotarjetacreditoTemp);
			} else {
				if(jComboBoxid_tipo_documento_tarjeta_creditoConfiguracionPunVenGenerico!=null && jComboBoxid_tipo_documento_tarjeta_creditoConfiguracionPunVenGenerico.getItemCount()>0) {
					jComboBoxid_tipo_documento_tarjeta_creditoConfiguracionPunVenGenerico.setSelectedIndex(0);
				}
			}

		}
		catch(Exception e)
		{
			throw e;
		}

	}

	public void setActualFormatoFacturaForeignKey(Long idFormatoFacturaSeleccionado,Boolean conCombosBusquedas,String sFormularioTipoBusqueda)throws Exception
	{
		try
		{
			Formato  formatofacturaTemp=null;

			for(Formato formatofacturaAux:formatofacturasForeignKey) {
				if(formatofacturaAux.getId()!=null && formatofacturaAux.getId().equals(idFormatoFacturaSeleccionado)) {
					formatofacturaTemp=formatofacturaAux;
					break;
				}
			}

			if(sFormularioTipoBusqueda.equals("Formulario") || sFormularioTipoBusqueda.equals("Todos")){
				if(formatofacturaTemp!=null) {

					if(this.configuracionpunven!=null) {
						this.configuracionpunven.setFormatoFactura(formatofacturaTemp);
					}

					if(this.jInternalFrameDetalleFormConfiguracionPunVen!=null) {
						this.jInternalFrameDetalleFormConfiguracionPunVen.jComboBoxid_formato_facturaConfiguracionPunVen.setSelectedItem(formatofacturaTemp);
					}
				} else {
					//jComboBoxid_formato_facturaConfiguracionPunVen.setSelectedItem(formatofacturaTemp);
					if(this.jInternalFrameDetalleFormConfiguracionPunVen!=null) {
						if(this.jInternalFrameDetalleFormConfiguracionPunVen.jComboBoxid_formato_facturaConfiguracionPunVen.getItemCount()>0) {
							this.jInternalFrameDetalleFormConfiguracionPunVen.jComboBoxid_formato_facturaConfiguracionPunVen.setSelectedIndex(0);
						}
					}
				}
			}

			if(conCombosBusquedas) {

		//BYDAN_BUSQUEDAS
						
				if(sFormularioTipoBusqueda.equals("FK_IdFormatoFactura") || sFormularioTipoBusqueda.equals("Todos")){
					if(formatofacturaTemp!=null && jComboBoxid_formato_facturaFK_IdFormatoFacturaConfiguracionPunVen!=null) {
						jComboBoxid_formato_facturaFK_IdFormatoFacturaConfiguracionPunVen.setSelectedItem(formatofacturaTemp);
					} else {
						if(jComboBoxid_formato_facturaFK_IdFormatoFacturaConfiguracionPunVen!=null) {
							//jComboBoxid_formato_facturaFK_IdFormatoFacturaConfiguracionPunVen.setSelectedItem(formatofacturaTemp);
							if(jComboBoxid_formato_facturaFK_IdFormatoFacturaConfiguracionPunVen.getItemCount()>0) {
								jComboBoxid_formato_facturaFK_IdFormatoFacturaConfiguracionPunVen.setSelectedIndex(0);
							}
						}
					}
				}

					}

		}
		catch(Exception e)
		{
			throw e;
		}
	}

	public String getActualFormatoFacturaForeignKeyDescripcion(Long idFormatoFacturaSeleccionado)throws Exception
	{
		String sDescripcion="";

		try
		{
			Formato  formatofacturaTemp=null;

			for(Formato formatofacturaAux:formatofacturasForeignKey) {
				if(formatofacturaAux.getId()!=null && formatofacturaAux.getId().equals(idFormatoFacturaSeleccionado)) {
					formatofacturaTemp=formatofacturaAux;
					break;
				}
			}


			sDescripcion=FormatoConstantesFunciones.getFormatoDescripcion(formatofacturaTemp);
		}
		catch(Exception e)
		{
			throw e;
		}

		return sDescripcion;
	}

	@SuppressWarnings("rawtypes")
	public void setActualFormatoFacturaForeignKeyGenerico(Long idFormatoFacturaSeleccionado,JComboBox jComboBoxid_formato_facturaConfiguracionPunVenGenerico)throws Exception
	{
		try
		{
			Formato  formatofacturaTemp=null;

			for(Formato formatofacturaAux:formatofacturasForeignKey) {
				if(formatofacturaAux.getId()!=null && formatofacturaAux.getId().equals(idFormatoFacturaSeleccionado)) {
					formatofacturaTemp=formatofacturaAux;
					break;
				}
			}

			if(formatofacturaTemp!=null) {
				jComboBoxid_formato_facturaConfiguracionPunVenGenerico.setSelectedItem(formatofacturaTemp);
			} else {
				if(jComboBoxid_formato_facturaConfiguracionPunVenGenerico!=null && jComboBoxid_formato_facturaConfiguracionPunVenGenerico.getItemCount()>0) {
					jComboBoxid_formato_facturaConfiguracionPunVenGenerico.setSelectedIndex(0);
				}
			}

		}
		catch(Exception e)
		{
			throw e;
		}

	}

	public void setActualFormatoNotaVentaForeignKey(Long idFormatoNotaVentaSeleccionado,Boolean conCombosBusquedas,String sFormularioTipoBusqueda)throws Exception
	{
		try
		{
			Formato  formatonotaventaTemp=null;

			for(Formato formatonotaventaAux:formatonotaventasForeignKey) {
				if(formatonotaventaAux.getId()!=null && formatonotaventaAux.getId().equals(idFormatoNotaVentaSeleccionado)) {
					formatonotaventaTemp=formatonotaventaAux;
					break;
				}
			}

			if(sFormularioTipoBusqueda.equals("Formulario") || sFormularioTipoBusqueda.equals("Todos")){
				if(formatonotaventaTemp!=null) {

					if(this.configuracionpunven!=null) {
						this.configuracionpunven.setFormatoNotaVenta(formatonotaventaTemp);
					}

					if(this.jInternalFrameDetalleFormConfiguracionPunVen!=null) {
						this.jInternalFrameDetalleFormConfiguracionPunVen.jComboBoxid_formato_nota_ventaConfiguracionPunVen.setSelectedItem(formatonotaventaTemp);
					}
				} else {
					//jComboBoxid_formato_nota_ventaConfiguracionPunVen.setSelectedItem(formatonotaventaTemp);
					if(this.jInternalFrameDetalleFormConfiguracionPunVen!=null) {
						if(this.jInternalFrameDetalleFormConfiguracionPunVen.jComboBoxid_formato_nota_ventaConfiguracionPunVen.getItemCount()>0) {
							this.jInternalFrameDetalleFormConfiguracionPunVen.jComboBoxid_formato_nota_ventaConfiguracionPunVen.setSelectedIndex(0);
						}
					}
				}
			}

			if(conCombosBusquedas) {

		//BYDAN_BUSQUEDAS
						
				if(sFormularioTipoBusqueda.equals("FK_IdFormatoNotaVenta") || sFormularioTipoBusqueda.equals("Todos")){
					if(formatonotaventaTemp!=null && jComboBoxid_formato_nota_ventaFK_IdFormatoNotaVentaConfiguracionPunVen!=null) {
						jComboBoxid_formato_nota_ventaFK_IdFormatoNotaVentaConfiguracionPunVen.setSelectedItem(formatonotaventaTemp);
					} else {
						if(jComboBoxid_formato_nota_ventaFK_IdFormatoNotaVentaConfiguracionPunVen!=null) {
							//jComboBoxid_formato_nota_ventaFK_IdFormatoNotaVentaConfiguracionPunVen.setSelectedItem(formatonotaventaTemp);
							if(jComboBoxid_formato_nota_ventaFK_IdFormatoNotaVentaConfiguracionPunVen.getItemCount()>0) {
								jComboBoxid_formato_nota_ventaFK_IdFormatoNotaVentaConfiguracionPunVen.setSelectedIndex(0);
							}
						}
					}
				}

					}

		}
		catch(Exception e)
		{
			throw e;
		}
	}

	public String getActualFormatoNotaVentaForeignKeyDescripcion(Long idFormatoNotaVentaSeleccionado)throws Exception
	{
		String sDescripcion="";

		try
		{
			Formato  formatonotaventaTemp=null;

			for(Formato formatonotaventaAux:formatonotaventasForeignKey) {
				if(formatonotaventaAux.getId()!=null && formatonotaventaAux.getId().equals(idFormatoNotaVentaSeleccionado)) {
					formatonotaventaTemp=formatonotaventaAux;
					break;
				}
			}


			sDescripcion=FormatoConstantesFunciones.getFormatoDescripcion(formatonotaventaTemp);
		}
		catch(Exception e)
		{
			throw e;
		}

		return sDescripcion;
	}

	@SuppressWarnings("rawtypes")
	public void setActualFormatoNotaVentaForeignKeyGenerico(Long idFormatoNotaVentaSeleccionado,JComboBox jComboBoxid_formato_nota_ventaConfiguracionPunVenGenerico)throws Exception
	{
		try
		{
			Formato  formatonotaventaTemp=null;

			for(Formato formatonotaventaAux:formatonotaventasForeignKey) {
				if(formatonotaventaAux.getId()!=null && formatonotaventaAux.getId().equals(idFormatoNotaVentaSeleccionado)) {
					formatonotaventaTemp=formatonotaventaAux;
					break;
				}
			}

			if(formatonotaventaTemp!=null) {
				jComboBoxid_formato_nota_ventaConfiguracionPunVenGenerico.setSelectedItem(formatonotaventaTemp);
			} else {
				if(jComboBoxid_formato_nota_ventaConfiguracionPunVenGenerico!=null && jComboBoxid_formato_nota_ventaConfiguracionPunVenGenerico.getItemCount()>0) {
					jComboBoxid_formato_nota_ventaConfiguracionPunVenGenerico.setSelectedIndex(0);
				}
			}

		}
		catch(Exception e)
		{
			throw e;
		}

	}

	public void setActualFormatoNotaCreditoForeignKey(Long idFormatoNotaCreditoSeleccionado,Boolean conCombosBusquedas,String sFormularioTipoBusqueda)throws Exception
	{
		try
		{
			Formato  formatonotacreditoTemp=null;

			for(Formato formatonotacreditoAux:formatonotacreditosForeignKey) {
				if(formatonotacreditoAux.getId()!=null && formatonotacreditoAux.getId().equals(idFormatoNotaCreditoSeleccionado)) {
					formatonotacreditoTemp=formatonotacreditoAux;
					break;
				}
			}

			if(sFormularioTipoBusqueda.equals("Formulario") || sFormularioTipoBusqueda.equals("Todos")){
				if(formatonotacreditoTemp!=null) {

					if(this.configuracionpunven!=null) {
						this.configuracionpunven.setFormatoNotaCredito(formatonotacreditoTemp);
					}

					if(this.jInternalFrameDetalleFormConfiguracionPunVen!=null) {
						this.jInternalFrameDetalleFormConfiguracionPunVen.jComboBoxid_formato_nota_creditoConfiguracionPunVen.setSelectedItem(formatonotacreditoTemp);
					}
				} else {
					//jComboBoxid_formato_nota_creditoConfiguracionPunVen.setSelectedItem(formatonotacreditoTemp);
					if(this.jInternalFrameDetalleFormConfiguracionPunVen!=null) {
						if(this.jInternalFrameDetalleFormConfiguracionPunVen.jComboBoxid_formato_nota_creditoConfiguracionPunVen.getItemCount()>0) {
							this.jInternalFrameDetalleFormConfiguracionPunVen.jComboBoxid_formato_nota_creditoConfiguracionPunVen.setSelectedIndex(0);
						}
					}
				}
			}

			if(conCombosBusquedas) {

		//BYDAN_BUSQUEDAS
						
				if(sFormularioTipoBusqueda.equals("FK_IdFormatoNotaCredito") || sFormularioTipoBusqueda.equals("Todos")){
					if(formatonotacreditoTemp!=null && jComboBoxid_formato_nota_creditoFK_IdFormatoNotaCreditoConfiguracionPunVen!=null) {
						jComboBoxid_formato_nota_creditoFK_IdFormatoNotaCreditoConfiguracionPunVen.setSelectedItem(formatonotacreditoTemp);
					} else {
						if(jComboBoxid_formato_nota_creditoFK_IdFormatoNotaCreditoConfiguracionPunVen!=null) {
							//jComboBoxid_formato_nota_creditoFK_IdFormatoNotaCreditoConfiguracionPunVen.setSelectedItem(formatonotacreditoTemp);
							if(jComboBoxid_formato_nota_creditoFK_IdFormatoNotaCreditoConfiguracionPunVen.getItemCount()>0) {
								jComboBoxid_formato_nota_creditoFK_IdFormatoNotaCreditoConfiguracionPunVen.setSelectedIndex(0);
							}
						}
					}
				}

					}

		}
		catch(Exception e)
		{
			throw e;
		}
	}

	public String getActualFormatoNotaCreditoForeignKeyDescripcion(Long idFormatoNotaCreditoSeleccionado)throws Exception
	{
		String sDescripcion="";

		try
		{
			Formato  formatonotacreditoTemp=null;

			for(Formato formatonotacreditoAux:formatonotacreditosForeignKey) {
				if(formatonotacreditoAux.getId()!=null && formatonotacreditoAux.getId().equals(idFormatoNotaCreditoSeleccionado)) {
					formatonotacreditoTemp=formatonotacreditoAux;
					break;
				}
			}


			sDescripcion=FormatoConstantesFunciones.getFormatoDescripcion(formatonotacreditoTemp);
		}
		catch(Exception e)
		{
			throw e;
		}

		return sDescripcion;
	}

	@SuppressWarnings("rawtypes")
	public void setActualFormatoNotaCreditoForeignKeyGenerico(Long idFormatoNotaCreditoSeleccionado,JComboBox jComboBoxid_formato_nota_creditoConfiguracionPunVenGenerico)throws Exception
	{
		try
		{
			Formato  formatonotacreditoTemp=null;

			for(Formato formatonotacreditoAux:formatonotacreditosForeignKey) {
				if(formatonotacreditoAux.getId()!=null && formatonotacreditoAux.getId().equals(idFormatoNotaCreditoSeleccionado)) {
					formatonotacreditoTemp=formatonotacreditoAux;
					break;
				}
			}

			if(formatonotacreditoTemp!=null) {
				jComboBoxid_formato_nota_creditoConfiguracionPunVenGenerico.setSelectedItem(formatonotacreditoTemp);
			} else {
				if(jComboBoxid_formato_nota_creditoConfiguracionPunVenGenerico!=null && jComboBoxid_formato_nota_creditoConfiguracionPunVenGenerico.getItemCount()>0) {
					jComboBoxid_formato_nota_creditoConfiguracionPunVenGenerico.setSelectedIndex(0);
				}
			}

		}
		catch(Exception e)
		{
			throw e;
		}

	}

	public void setActualTransaccionFacturaForeignKey(Long idTransaccionFacturaSeleccionado,Boolean conCombosBusquedas,String sFormularioTipoBusqueda)throws Exception
	{
		try
		{
			Transaccion  transaccionfacturaTemp=null;

			for(Transaccion transaccionfacturaAux:transaccionfacturasForeignKey) {
				if(transaccionfacturaAux.getId()!=null && transaccionfacturaAux.getId().equals(idTransaccionFacturaSeleccionado)) {
					transaccionfacturaTemp=transaccionfacturaAux;
					break;
				}
			}

			if(sFormularioTipoBusqueda.equals("Formulario") || sFormularioTipoBusqueda.equals("Todos")){
				if(transaccionfacturaTemp!=null) {

					if(this.configuracionpunven!=null) {
						this.configuracionpunven.setTransaccionFactura(transaccionfacturaTemp);
					}

					if(this.jInternalFrameDetalleFormConfiguracionPunVen!=null) {
						this.jInternalFrameDetalleFormConfiguracionPunVen.jComboBoxid_transaccion_facturaConfiguracionPunVen.setSelectedItem(transaccionfacturaTemp);
					}
				} else {
					//jComboBoxid_transaccion_facturaConfiguracionPunVen.setSelectedItem(transaccionfacturaTemp);
					if(this.jInternalFrameDetalleFormConfiguracionPunVen!=null) {
						if(this.jInternalFrameDetalleFormConfiguracionPunVen.jComboBoxid_transaccion_facturaConfiguracionPunVen.getItemCount()>0) {
							this.jInternalFrameDetalleFormConfiguracionPunVen.jComboBoxid_transaccion_facturaConfiguracionPunVen.setSelectedIndex(0);
						}
					}
				}
			}

			if(conCombosBusquedas) {

		//BYDAN_BUSQUEDAS
						
				if(sFormularioTipoBusqueda.equals("FK_IdTransaccionFactura") || sFormularioTipoBusqueda.equals("Todos")){
					if(transaccionfacturaTemp!=null && jComboBoxid_transaccion_facturaFK_IdTransaccionFacturaConfiguracionPunVen!=null) {
						jComboBoxid_transaccion_facturaFK_IdTransaccionFacturaConfiguracionPunVen.setSelectedItem(transaccionfacturaTemp);
					} else {
						if(jComboBoxid_transaccion_facturaFK_IdTransaccionFacturaConfiguracionPunVen!=null) {
							//jComboBoxid_transaccion_facturaFK_IdTransaccionFacturaConfiguracionPunVen.setSelectedItem(transaccionfacturaTemp);
							if(jComboBoxid_transaccion_facturaFK_IdTransaccionFacturaConfiguracionPunVen.getItemCount()>0) {
								jComboBoxid_transaccion_facturaFK_IdTransaccionFacturaConfiguracionPunVen.setSelectedIndex(0);
							}
						}
					}
				}

					}

		}
		catch(Exception e)
		{
			throw e;
		}
	}

	public String getActualTransaccionFacturaForeignKeyDescripcion(Long idTransaccionFacturaSeleccionado)throws Exception
	{
		String sDescripcion="";

		try
		{
			Transaccion  transaccionfacturaTemp=null;

			for(Transaccion transaccionfacturaAux:transaccionfacturasForeignKey) {
				if(transaccionfacturaAux.getId()!=null && transaccionfacturaAux.getId().equals(idTransaccionFacturaSeleccionado)) {
					transaccionfacturaTemp=transaccionfacturaAux;
					break;
				}
			}


			sDescripcion=TransaccionConstantesFunciones.getTransaccionDescripcion(transaccionfacturaTemp);
		}
		catch(Exception e)
		{
			throw e;
		}

		return sDescripcion;
	}

	@SuppressWarnings("rawtypes")
	public void setActualTransaccionFacturaForeignKeyGenerico(Long idTransaccionFacturaSeleccionado,JComboBox jComboBoxid_transaccion_facturaConfiguracionPunVenGenerico)throws Exception
	{
		try
		{
			Transaccion  transaccionfacturaTemp=null;

			for(Transaccion transaccionfacturaAux:transaccionfacturasForeignKey) {
				if(transaccionfacturaAux.getId()!=null && transaccionfacturaAux.getId().equals(idTransaccionFacturaSeleccionado)) {
					transaccionfacturaTemp=transaccionfacturaAux;
					break;
				}
			}

			if(transaccionfacturaTemp!=null) {
				jComboBoxid_transaccion_facturaConfiguracionPunVenGenerico.setSelectedItem(transaccionfacturaTemp);
			} else {
				if(jComboBoxid_transaccion_facturaConfiguracionPunVenGenerico!=null && jComboBoxid_transaccion_facturaConfiguracionPunVenGenerico.getItemCount()>0) {
					jComboBoxid_transaccion_facturaConfiguracionPunVenGenerico.setSelectedIndex(0);
				}
			}

		}
		catch(Exception e)
		{
			throw e;
		}

	}

	public void setActualTransaccionNotaVentaForeignKey(Long idTransaccionNotaVentaSeleccionado,Boolean conCombosBusquedas,String sFormularioTipoBusqueda)throws Exception
	{
		try
		{
			Transaccion  transaccionnotaventaTemp=null;

			for(Transaccion transaccionnotaventaAux:transaccionnotaventasForeignKey) {
				if(transaccionnotaventaAux.getId()!=null && transaccionnotaventaAux.getId().equals(idTransaccionNotaVentaSeleccionado)) {
					transaccionnotaventaTemp=transaccionnotaventaAux;
					break;
				}
			}

			if(sFormularioTipoBusqueda.equals("Formulario") || sFormularioTipoBusqueda.equals("Todos")){
				if(transaccionnotaventaTemp!=null) {

					if(this.configuracionpunven!=null) {
						this.configuracionpunven.setTransaccionNotaVenta(transaccionnotaventaTemp);
					}

					if(this.jInternalFrameDetalleFormConfiguracionPunVen!=null) {
						this.jInternalFrameDetalleFormConfiguracionPunVen.jComboBoxid_transaccion_nota_ventaConfiguracionPunVen.setSelectedItem(transaccionnotaventaTemp);
					}
				} else {
					//jComboBoxid_transaccion_nota_ventaConfiguracionPunVen.setSelectedItem(transaccionnotaventaTemp);
					if(this.jInternalFrameDetalleFormConfiguracionPunVen!=null) {
						if(this.jInternalFrameDetalleFormConfiguracionPunVen.jComboBoxid_transaccion_nota_ventaConfiguracionPunVen.getItemCount()>0) {
							this.jInternalFrameDetalleFormConfiguracionPunVen.jComboBoxid_transaccion_nota_ventaConfiguracionPunVen.setSelectedIndex(0);
						}
					}
				}
			}

			if(conCombosBusquedas) {

		//BYDAN_BUSQUEDAS
						
				if(sFormularioTipoBusqueda.equals("FK_IdTransaccionNotaVenta") || sFormularioTipoBusqueda.equals("Todos")){
					if(transaccionnotaventaTemp!=null && jComboBoxid_transaccion_nota_ventaFK_IdTransaccionNotaVentaConfiguracionPunVen!=null) {
						jComboBoxid_transaccion_nota_ventaFK_IdTransaccionNotaVentaConfiguracionPunVen.setSelectedItem(transaccionnotaventaTemp);
					} else {
						if(jComboBoxid_transaccion_nota_ventaFK_IdTransaccionNotaVentaConfiguracionPunVen!=null) {
							//jComboBoxid_transaccion_nota_ventaFK_IdTransaccionNotaVentaConfiguracionPunVen.setSelectedItem(transaccionnotaventaTemp);
							if(jComboBoxid_transaccion_nota_ventaFK_IdTransaccionNotaVentaConfiguracionPunVen.getItemCount()>0) {
								jComboBoxid_transaccion_nota_ventaFK_IdTransaccionNotaVentaConfiguracionPunVen.setSelectedIndex(0);
							}
						}
					}
				}

					}

		}
		catch(Exception e)
		{
			throw e;
		}
	}

	public String getActualTransaccionNotaVentaForeignKeyDescripcion(Long idTransaccionNotaVentaSeleccionado)throws Exception
	{
		String sDescripcion="";

		try
		{
			Transaccion  transaccionnotaventaTemp=null;

			for(Transaccion transaccionnotaventaAux:transaccionnotaventasForeignKey) {
				if(transaccionnotaventaAux.getId()!=null && transaccionnotaventaAux.getId().equals(idTransaccionNotaVentaSeleccionado)) {
					transaccionnotaventaTemp=transaccionnotaventaAux;
					break;
				}
			}


			sDescripcion=TransaccionConstantesFunciones.getTransaccionDescripcion(transaccionnotaventaTemp);
		}
		catch(Exception e)
		{
			throw e;
		}

		return sDescripcion;
	}

	@SuppressWarnings("rawtypes")
	public void setActualTransaccionNotaVentaForeignKeyGenerico(Long idTransaccionNotaVentaSeleccionado,JComboBox jComboBoxid_transaccion_nota_ventaConfiguracionPunVenGenerico)throws Exception
	{
		try
		{
			Transaccion  transaccionnotaventaTemp=null;

			for(Transaccion transaccionnotaventaAux:transaccionnotaventasForeignKey) {
				if(transaccionnotaventaAux.getId()!=null && transaccionnotaventaAux.getId().equals(idTransaccionNotaVentaSeleccionado)) {
					transaccionnotaventaTemp=transaccionnotaventaAux;
					break;
				}
			}

			if(transaccionnotaventaTemp!=null) {
				jComboBoxid_transaccion_nota_ventaConfiguracionPunVenGenerico.setSelectedItem(transaccionnotaventaTemp);
			} else {
				if(jComboBoxid_transaccion_nota_ventaConfiguracionPunVenGenerico!=null && jComboBoxid_transaccion_nota_ventaConfiguracionPunVenGenerico.getItemCount()>0) {
					jComboBoxid_transaccion_nota_ventaConfiguracionPunVenGenerico.setSelectedIndex(0);
				}
			}

		}
		catch(Exception e)
		{
			throw e;
		}

	}

	public void setActualTransaccionNotaCreditoForeignKey(Long idTransaccionNotaCreditoSeleccionado,Boolean conCombosBusquedas,String sFormularioTipoBusqueda)throws Exception
	{
		try
		{
			Transaccion  transaccionnotacreditoTemp=null;

			for(Transaccion transaccionnotacreditoAux:transaccionnotacreditosForeignKey) {
				if(transaccionnotacreditoAux.getId()!=null && transaccionnotacreditoAux.getId().equals(idTransaccionNotaCreditoSeleccionado)) {
					transaccionnotacreditoTemp=transaccionnotacreditoAux;
					break;
				}
			}

			if(sFormularioTipoBusqueda.equals("Formulario") || sFormularioTipoBusqueda.equals("Todos")){
				if(transaccionnotacreditoTemp!=null) {

					if(this.configuracionpunven!=null) {
						this.configuracionpunven.setTransaccionNotaCredito(transaccionnotacreditoTemp);
					}

					if(this.jInternalFrameDetalleFormConfiguracionPunVen!=null) {
						this.jInternalFrameDetalleFormConfiguracionPunVen.jComboBoxid_transaccion_nota_creditoConfiguracionPunVen.setSelectedItem(transaccionnotacreditoTemp);
					}
				} else {
					//jComboBoxid_transaccion_nota_creditoConfiguracionPunVen.setSelectedItem(transaccionnotacreditoTemp);
					if(this.jInternalFrameDetalleFormConfiguracionPunVen!=null) {
						if(this.jInternalFrameDetalleFormConfiguracionPunVen.jComboBoxid_transaccion_nota_creditoConfiguracionPunVen.getItemCount()>0) {
							this.jInternalFrameDetalleFormConfiguracionPunVen.jComboBoxid_transaccion_nota_creditoConfiguracionPunVen.setSelectedIndex(0);
						}
					}
				}
			}

			if(conCombosBusquedas) {

		//BYDAN_BUSQUEDAS
						
				if(sFormularioTipoBusqueda.equals("FK_IdTransaccionNotaCredito") || sFormularioTipoBusqueda.equals("Todos")){
					if(transaccionnotacreditoTemp!=null && jComboBoxid_transaccion_nota_creditoFK_IdTransaccionNotaCreditoConfiguracionPunVen!=null) {
						jComboBoxid_transaccion_nota_creditoFK_IdTransaccionNotaCreditoConfiguracionPunVen.setSelectedItem(transaccionnotacreditoTemp);
					} else {
						if(jComboBoxid_transaccion_nota_creditoFK_IdTransaccionNotaCreditoConfiguracionPunVen!=null) {
							//jComboBoxid_transaccion_nota_creditoFK_IdTransaccionNotaCreditoConfiguracionPunVen.setSelectedItem(transaccionnotacreditoTemp);
							if(jComboBoxid_transaccion_nota_creditoFK_IdTransaccionNotaCreditoConfiguracionPunVen.getItemCount()>0) {
								jComboBoxid_transaccion_nota_creditoFK_IdTransaccionNotaCreditoConfiguracionPunVen.setSelectedIndex(0);
							}
						}
					}
				}

					}

		}
		catch(Exception e)
		{
			throw e;
		}
	}

	public String getActualTransaccionNotaCreditoForeignKeyDescripcion(Long idTransaccionNotaCreditoSeleccionado)throws Exception
	{
		String sDescripcion="";

		try
		{
			Transaccion  transaccionnotacreditoTemp=null;

			for(Transaccion transaccionnotacreditoAux:transaccionnotacreditosForeignKey) {
				if(transaccionnotacreditoAux.getId()!=null && transaccionnotacreditoAux.getId().equals(idTransaccionNotaCreditoSeleccionado)) {
					transaccionnotacreditoTemp=transaccionnotacreditoAux;
					break;
				}
			}


			sDescripcion=TransaccionConstantesFunciones.getTransaccionDescripcion(transaccionnotacreditoTemp);
		}
		catch(Exception e)
		{
			throw e;
		}

		return sDescripcion;
	}

	@SuppressWarnings("rawtypes")
	public void setActualTransaccionNotaCreditoForeignKeyGenerico(Long idTransaccionNotaCreditoSeleccionado,JComboBox jComboBoxid_transaccion_nota_creditoConfiguracionPunVenGenerico)throws Exception
	{
		try
		{
			Transaccion  transaccionnotacreditoTemp=null;

			for(Transaccion transaccionnotacreditoAux:transaccionnotacreditosForeignKey) {
				if(transaccionnotacreditoAux.getId()!=null && transaccionnotacreditoAux.getId().equals(idTransaccionNotaCreditoSeleccionado)) {
					transaccionnotacreditoTemp=transaccionnotacreditoAux;
					break;
				}
			}

			if(transaccionnotacreditoTemp!=null) {
				jComboBoxid_transaccion_nota_creditoConfiguracionPunVenGenerico.setSelectedItem(transaccionnotacreditoTemp);
			} else {
				if(jComboBoxid_transaccion_nota_creditoConfiguracionPunVenGenerico!=null && jComboBoxid_transaccion_nota_creditoConfiguracionPunVenGenerico.getItemCount()>0) {
					jComboBoxid_transaccion_nota_creditoConfiguracionPunVenGenerico.setSelectedIndex(0);
				}
			}

		}
		catch(Exception e)
		{
			throw e;
		}

	}

	public void setActualTransaccionCuentaFacturaForeignKey(Long idTransaccionCuentaFacturaSeleccionado,Boolean conCombosBusquedas,String sFormularioTipoBusqueda)throws Exception
	{
		try
		{
			Transaccion  transaccioncuentafacturaTemp=null;

			for(Transaccion transaccioncuentafacturaAux:transaccioncuentafacturasForeignKey) {
				if(transaccioncuentafacturaAux.getId()!=null && transaccioncuentafacturaAux.getId().equals(idTransaccionCuentaFacturaSeleccionado)) {
					transaccioncuentafacturaTemp=transaccioncuentafacturaAux;
					break;
				}
			}

			if(sFormularioTipoBusqueda.equals("Formulario") || sFormularioTipoBusqueda.equals("Todos")){
				if(transaccioncuentafacturaTemp!=null) {

					if(this.configuracionpunven!=null) {
						this.configuracionpunven.setTransaccionCuentaFactura(transaccioncuentafacturaTemp);
					}

					if(this.jInternalFrameDetalleFormConfiguracionPunVen!=null) {
						this.jInternalFrameDetalleFormConfiguracionPunVen.jComboBoxid_transaccion_cuenta_facturaConfiguracionPunVen.setSelectedItem(transaccioncuentafacturaTemp);
					}
				} else {
					//jComboBoxid_transaccion_cuenta_facturaConfiguracionPunVen.setSelectedItem(transaccioncuentafacturaTemp);
					if(this.jInternalFrameDetalleFormConfiguracionPunVen!=null) {
						if(this.jInternalFrameDetalleFormConfiguracionPunVen.jComboBoxid_transaccion_cuenta_facturaConfiguracionPunVen.getItemCount()>0) {
							this.jInternalFrameDetalleFormConfiguracionPunVen.jComboBoxid_transaccion_cuenta_facturaConfiguracionPunVen.setSelectedIndex(0);
						}
					}
				}
			}

			if(conCombosBusquedas) {

		//BYDAN_BUSQUEDAS
						
				if(sFormularioTipoBusqueda.equals("FK_IdTransaccionCuentaFactura") || sFormularioTipoBusqueda.equals("Todos")){
					if(transaccioncuentafacturaTemp!=null && jComboBoxid_transaccion_cuenta_facturaFK_IdTransaccionCuentaFacturaConfiguracionPunVen!=null) {
						jComboBoxid_transaccion_cuenta_facturaFK_IdTransaccionCuentaFacturaConfiguracionPunVen.setSelectedItem(transaccioncuentafacturaTemp);
					} else {
						if(jComboBoxid_transaccion_cuenta_facturaFK_IdTransaccionCuentaFacturaConfiguracionPunVen!=null) {
							//jComboBoxid_transaccion_cuenta_facturaFK_IdTransaccionCuentaFacturaConfiguracionPunVen.setSelectedItem(transaccioncuentafacturaTemp);
							if(jComboBoxid_transaccion_cuenta_facturaFK_IdTransaccionCuentaFacturaConfiguracionPunVen.getItemCount()>0) {
								jComboBoxid_transaccion_cuenta_facturaFK_IdTransaccionCuentaFacturaConfiguracionPunVen.setSelectedIndex(0);
							}
						}
					}
				}

					}

		}
		catch(Exception e)
		{
			throw e;
		}
	}

	public String getActualTransaccionCuentaFacturaForeignKeyDescripcion(Long idTransaccionCuentaFacturaSeleccionado)throws Exception
	{
		String sDescripcion="";

		try
		{
			Transaccion  transaccioncuentafacturaTemp=null;

			for(Transaccion transaccioncuentafacturaAux:transaccioncuentafacturasForeignKey) {
				if(transaccioncuentafacturaAux.getId()!=null && transaccioncuentafacturaAux.getId().equals(idTransaccionCuentaFacturaSeleccionado)) {
					transaccioncuentafacturaTemp=transaccioncuentafacturaAux;
					break;
				}
			}


			sDescripcion=TransaccionConstantesFunciones.getTransaccionDescripcion(transaccioncuentafacturaTemp);
		}
		catch(Exception e)
		{
			throw e;
		}

		return sDescripcion;
	}

	@SuppressWarnings("rawtypes")
	public void setActualTransaccionCuentaFacturaForeignKeyGenerico(Long idTransaccionCuentaFacturaSeleccionado,JComboBox jComboBoxid_transaccion_cuenta_facturaConfiguracionPunVenGenerico)throws Exception
	{
		try
		{
			Transaccion  transaccioncuentafacturaTemp=null;

			for(Transaccion transaccioncuentafacturaAux:transaccioncuentafacturasForeignKey) {
				if(transaccioncuentafacturaAux.getId()!=null && transaccioncuentafacturaAux.getId().equals(idTransaccionCuentaFacturaSeleccionado)) {
					transaccioncuentafacturaTemp=transaccioncuentafacturaAux;
					break;
				}
			}

			if(transaccioncuentafacturaTemp!=null) {
				jComboBoxid_transaccion_cuenta_facturaConfiguracionPunVenGenerico.setSelectedItem(transaccioncuentafacturaTemp);
			} else {
				if(jComboBoxid_transaccion_cuenta_facturaConfiguracionPunVenGenerico!=null && jComboBoxid_transaccion_cuenta_facturaConfiguracionPunVenGenerico.getItemCount()>0) {
					jComboBoxid_transaccion_cuenta_facturaConfiguracionPunVenGenerico.setSelectedIndex(0);
				}
			}

		}
		catch(Exception e)
		{
			throw e;
		}

	}

	public void setActualTransaccionCuentaNotaVentaForeignKey(Long idTransaccionCuentaNotaVentaSeleccionado,Boolean conCombosBusquedas,String sFormularioTipoBusqueda)throws Exception
	{
		try
		{
			Transaccion  transaccioncuentanotaventaTemp=null;

			for(Transaccion transaccioncuentanotaventaAux:transaccioncuentanotaventasForeignKey) {
				if(transaccioncuentanotaventaAux.getId()!=null && transaccioncuentanotaventaAux.getId().equals(idTransaccionCuentaNotaVentaSeleccionado)) {
					transaccioncuentanotaventaTemp=transaccioncuentanotaventaAux;
					break;
				}
			}

			if(sFormularioTipoBusqueda.equals("Formulario") || sFormularioTipoBusqueda.equals("Todos")){
				if(transaccioncuentanotaventaTemp!=null) {

					if(this.configuracionpunven!=null) {
						this.configuracionpunven.setTransaccionCuentaNotaVenta(transaccioncuentanotaventaTemp);
					}

					if(this.jInternalFrameDetalleFormConfiguracionPunVen!=null) {
						this.jInternalFrameDetalleFormConfiguracionPunVen.jComboBoxid_transaccion_cuenta_nota_ventaConfiguracionPunVen.setSelectedItem(transaccioncuentanotaventaTemp);
					}
				} else {
					//jComboBoxid_transaccion_cuenta_nota_ventaConfiguracionPunVen.setSelectedItem(transaccioncuentanotaventaTemp);
					if(this.jInternalFrameDetalleFormConfiguracionPunVen!=null) {
						if(this.jInternalFrameDetalleFormConfiguracionPunVen.jComboBoxid_transaccion_cuenta_nota_ventaConfiguracionPunVen.getItemCount()>0) {
							this.jInternalFrameDetalleFormConfiguracionPunVen.jComboBoxid_transaccion_cuenta_nota_ventaConfiguracionPunVen.setSelectedIndex(0);
						}
					}
				}
			}

			if(conCombosBusquedas) {

		//BYDAN_BUSQUEDAS
						
				if(sFormularioTipoBusqueda.equals("FK_IdTransaccionCuentaNotaVenta") || sFormularioTipoBusqueda.equals("Todos")){
					if(transaccioncuentanotaventaTemp!=null && jComboBoxid_transaccion_cuenta_nota_ventaFK_IdTransaccionCuentaNotaVentaConfiguracionPunVen!=null) {
						jComboBoxid_transaccion_cuenta_nota_ventaFK_IdTransaccionCuentaNotaVentaConfiguracionPunVen.setSelectedItem(transaccioncuentanotaventaTemp);
					} else {
						if(jComboBoxid_transaccion_cuenta_nota_ventaFK_IdTransaccionCuentaNotaVentaConfiguracionPunVen!=null) {
							//jComboBoxid_transaccion_cuenta_nota_ventaFK_IdTransaccionCuentaNotaVentaConfiguracionPunVen.setSelectedItem(transaccioncuentanotaventaTemp);
							if(jComboBoxid_transaccion_cuenta_nota_ventaFK_IdTransaccionCuentaNotaVentaConfiguracionPunVen.getItemCount()>0) {
								jComboBoxid_transaccion_cuenta_nota_ventaFK_IdTransaccionCuentaNotaVentaConfiguracionPunVen.setSelectedIndex(0);
							}
						}
					}
				}

					}

		}
		catch(Exception e)
		{
			throw e;
		}
	}

	public String getActualTransaccionCuentaNotaVentaForeignKeyDescripcion(Long idTransaccionCuentaNotaVentaSeleccionado)throws Exception
	{
		String sDescripcion="";

		try
		{
			Transaccion  transaccioncuentanotaventaTemp=null;

			for(Transaccion transaccioncuentanotaventaAux:transaccioncuentanotaventasForeignKey) {
				if(transaccioncuentanotaventaAux.getId()!=null && transaccioncuentanotaventaAux.getId().equals(idTransaccionCuentaNotaVentaSeleccionado)) {
					transaccioncuentanotaventaTemp=transaccioncuentanotaventaAux;
					break;
				}
			}


			sDescripcion=TransaccionConstantesFunciones.getTransaccionDescripcion(transaccioncuentanotaventaTemp);
		}
		catch(Exception e)
		{
			throw e;
		}

		return sDescripcion;
	}

	@SuppressWarnings("rawtypes")
	public void setActualTransaccionCuentaNotaVentaForeignKeyGenerico(Long idTransaccionCuentaNotaVentaSeleccionado,JComboBox jComboBoxid_transaccion_cuenta_nota_ventaConfiguracionPunVenGenerico)throws Exception
	{
		try
		{
			Transaccion  transaccioncuentanotaventaTemp=null;

			for(Transaccion transaccioncuentanotaventaAux:transaccioncuentanotaventasForeignKey) {
				if(transaccioncuentanotaventaAux.getId()!=null && transaccioncuentanotaventaAux.getId().equals(idTransaccionCuentaNotaVentaSeleccionado)) {
					transaccioncuentanotaventaTemp=transaccioncuentanotaventaAux;
					break;
				}
			}

			if(transaccioncuentanotaventaTemp!=null) {
				jComboBoxid_transaccion_cuenta_nota_ventaConfiguracionPunVenGenerico.setSelectedItem(transaccioncuentanotaventaTemp);
			} else {
				if(jComboBoxid_transaccion_cuenta_nota_ventaConfiguracionPunVenGenerico!=null && jComboBoxid_transaccion_cuenta_nota_ventaConfiguracionPunVenGenerico.getItemCount()>0) {
					jComboBoxid_transaccion_cuenta_nota_ventaConfiguracionPunVenGenerico.setSelectedIndex(0);
				}
			}

		}
		catch(Exception e)
		{
			throw e;
		}

	}

	public void setActualTransaccionCuentaNotaCreditoForeignKey(Long idTransaccionCuentaNotaCreditoSeleccionado,Boolean conCombosBusquedas,String sFormularioTipoBusqueda)throws Exception
	{
		try
		{
			Transaccion  transaccioncuentanotacreditoTemp=null;

			for(Transaccion transaccioncuentanotacreditoAux:transaccioncuentanotacreditosForeignKey) {
				if(transaccioncuentanotacreditoAux.getId()!=null && transaccioncuentanotacreditoAux.getId().equals(idTransaccionCuentaNotaCreditoSeleccionado)) {
					transaccioncuentanotacreditoTemp=transaccioncuentanotacreditoAux;
					break;
				}
			}

			if(sFormularioTipoBusqueda.equals("Formulario") || sFormularioTipoBusqueda.equals("Todos")){
				if(transaccioncuentanotacreditoTemp!=null) {

					if(this.configuracionpunven!=null) {
						this.configuracionpunven.setTransaccionCuentaNotaCredito(transaccioncuentanotacreditoTemp);
					}

					if(this.jInternalFrameDetalleFormConfiguracionPunVen!=null) {
						this.jInternalFrameDetalleFormConfiguracionPunVen.jComboBoxid_transaccion_cuenta_nota_creditoConfiguracionPunVen.setSelectedItem(transaccioncuentanotacreditoTemp);
					}
				} else {
					//jComboBoxid_transaccion_cuenta_nota_creditoConfiguracionPunVen.setSelectedItem(transaccioncuentanotacreditoTemp);
					if(this.jInternalFrameDetalleFormConfiguracionPunVen!=null) {
						if(this.jInternalFrameDetalleFormConfiguracionPunVen.jComboBoxid_transaccion_cuenta_nota_creditoConfiguracionPunVen.getItemCount()>0) {
							this.jInternalFrameDetalleFormConfiguracionPunVen.jComboBoxid_transaccion_cuenta_nota_creditoConfiguracionPunVen.setSelectedIndex(0);
						}
					}
				}
			}

			if(conCombosBusquedas) {

		//BYDAN_BUSQUEDAS
						
				if(sFormularioTipoBusqueda.equals("FK_IdTransaccionCuentaNotaCredito") || sFormularioTipoBusqueda.equals("Todos")){
					if(transaccioncuentanotacreditoTemp!=null && jComboBoxid_transaccion_cuenta_nota_creditoFK_IdTransaccionCuentaNotaCreditoConfiguracionPunVen!=null) {
						jComboBoxid_transaccion_cuenta_nota_creditoFK_IdTransaccionCuentaNotaCreditoConfiguracionPunVen.setSelectedItem(transaccioncuentanotacreditoTemp);
					} else {
						if(jComboBoxid_transaccion_cuenta_nota_creditoFK_IdTransaccionCuentaNotaCreditoConfiguracionPunVen!=null) {
							//jComboBoxid_transaccion_cuenta_nota_creditoFK_IdTransaccionCuentaNotaCreditoConfiguracionPunVen.setSelectedItem(transaccioncuentanotacreditoTemp);
							if(jComboBoxid_transaccion_cuenta_nota_creditoFK_IdTransaccionCuentaNotaCreditoConfiguracionPunVen.getItemCount()>0) {
								jComboBoxid_transaccion_cuenta_nota_creditoFK_IdTransaccionCuentaNotaCreditoConfiguracionPunVen.setSelectedIndex(0);
							}
						}
					}
				}

					}

		}
		catch(Exception e)
		{
			throw e;
		}
	}

	public String getActualTransaccionCuentaNotaCreditoForeignKeyDescripcion(Long idTransaccionCuentaNotaCreditoSeleccionado)throws Exception
	{
		String sDescripcion="";

		try
		{
			Transaccion  transaccioncuentanotacreditoTemp=null;

			for(Transaccion transaccioncuentanotacreditoAux:transaccioncuentanotacreditosForeignKey) {
				if(transaccioncuentanotacreditoAux.getId()!=null && transaccioncuentanotacreditoAux.getId().equals(idTransaccionCuentaNotaCreditoSeleccionado)) {
					transaccioncuentanotacreditoTemp=transaccioncuentanotacreditoAux;
					break;
				}
			}


			sDescripcion=TransaccionConstantesFunciones.getTransaccionDescripcion(transaccioncuentanotacreditoTemp);
		}
		catch(Exception e)
		{
			throw e;
		}

		return sDescripcion;
	}

	@SuppressWarnings("rawtypes")
	public void setActualTransaccionCuentaNotaCreditoForeignKeyGenerico(Long idTransaccionCuentaNotaCreditoSeleccionado,JComboBox jComboBoxid_transaccion_cuenta_nota_creditoConfiguracionPunVenGenerico)throws Exception
	{
		try
		{
			Transaccion  transaccioncuentanotacreditoTemp=null;

			for(Transaccion transaccioncuentanotacreditoAux:transaccioncuentanotacreditosForeignKey) {
				if(transaccioncuentanotacreditoAux.getId()!=null && transaccioncuentanotacreditoAux.getId().equals(idTransaccionCuentaNotaCreditoSeleccionado)) {
					transaccioncuentanotacreditoTemp=transaccioncuentanotacreditoAux;
					break;
				}
			}

			if(transaccioncuentanotacreditoTemp!=null) {
				jComboBoxid_transaccion_cuenta_nota_creditoConfiguracionPunVenGenerico.setSelectedItem(transaccioncuentanotacreditoTemp);
			} else {
				if(jComboBoxid_transaccion_cuenta_nota_creditoConfiguracionPunVenGenerico!=null && jComboBoxid_transaccion_cuenta_nota_creditoConfiguracionPunVenGenerico.getItemCount()>0) {
					jComboBoxid_transaccion_cuenta_nota_creditoConfiguracionPunVenGenerico.setSelectedIndex(0);
				}
			}

		}
		catch(Exception e)
		{
			throw e;
		}

	}

	
	
	@SuppressWarnings("rawtypes")
	public void setActualParaGuardarEmpresaForeignKey(ConfiguracionPunVen configuracionpunven,JComboBox jComboBoxid_empresaConfiguracionPunVenGenerico)throws Exception
	{
		try
		{
			Empresa  empresaAux=new Empresa();

			if(jComboBoxid_empresaConfiguracionPunVenGenerico==null) {
				empresaAux=(Empresa)this.jInternalFrameDetalleFormConfiguracionPunVen.jComboBoxid_empresaConfiguracionPunVen.getSelectedItem();
			} else {
				empresaAux=(Empresa)jComboBoxid_empresaConfiguracionPunVenGenerico.getSelectedItem();
			}

			if(empresaAux!=null && empresaAux.getId()!=null) {
				configuracionpunven.setid_empresa(empresaAux.getId());
				configuracionpunven.setempresa_descripcion(ConfiguracionPunVenConstantesFunciones.getEmpresaDescripcion(empresaAux));
				configuracionpunven.setEmpresa(empresaAux);			}
		}
		catch(Exception e)
		{
			throw e;
		}
	}

	@SuppressWarnings("rawtypes")
	public void setActualParaGuardarSucursalForeignKey(ConfiguracionPunVen configuracionpunven,JComboBox jComboBoxid_sucursalConfiguracionPunVenGenerico)throws Exception
	{
		try
		{
			Sucursal  sucursalAux=new Sucursal();

			if(jComboBoxid_sucursalConfiguracionPunVenGenerico==null) {
				sucursalAux=(Sucursal)this.jInternalFrameDetalleFormConfiguracionPunVen.jComboBoxid_sucursalConfiguracionPunVen.getSelectedItem();
			} else {
				sucursalAux=(Sucursal)jComboBoxid_sucursalConfiguracionPunVenGenerico.getSelectedItem();
			}

			if(sucursalAux!=null && sucursalAux.getId()!=null) {
				configuracionpunven.setid_sucursal(sucursalAux.getId());
				configuracionpunven.setsucursal_descripcion(ConfiguracionPunVenConstantesFunciones.getSucursalDescripcion(sucursalAux));
				configuracionpunven.setSucursal(sucursalAux);			}
		}
		catch(Exception e)
		{
			throw e;
		}
	}

	@SuppressWarnings("rawtypes")
	public void setActualParaGuardarBodegaForeignKey(ConfiguracionPunVen configuracionpunven,JComboBox jComboBoxid_bodegaConfiguracionPunVenGenerico)throws Exception
	{
		try
		{
			Bodega  bodegaAux=new Bodega();

			if(jComboBoxid_bodegaConfiguracionPunVenGenerico==null) {
				bodegaAux=(Bodega)this.jInternalFrameDetalleFormConfiguracionPunVen.jComboBoxid_bodegaConfiguracionPunVen.getSelectedItem();
			} else {
				bodegaAux=(Bodega)jComboBoxid_bodegaConfiguracionPunVenGenerico.getSelectedItem();
			}

			if(bodegaAux!=null && bodegaAux.getId()!=null) {
				configuracionpunven.setid_bodega(bodegaAux.getId());
				configuracionpunven.setbodega_descripcion(ConfiguracionPunVenConstantesFunciones.getBodegaDescripcion(bodegaAux));
				configuracionpunven.setBodega(bodegaAux);			}
		}
		catch(Exception e)
		{
			throw e;
		}
	}

	@SuppressWarnings("rawtypes")
	public void setActualParaGuardarCuentaContableEfectivoForeignKey(ConfiguracionPunVen configuracionpunven,JComboBox jComboBoxid_cuenta_contable_efectivoConfiguracionPunVenGenerico)throws Exception
	{
		try
		{
			CuentaContable  cuentacontableAux=new CuentaContable();

			if(jComboBoxid_cuenta_contable_efectivoConfiguracionPunVenGenerico==null) {
				cuentacontableAux=(CuentaContable)this.jInternalFrameDetalleFormConfiguracionPunVen.jComboBoxid_cuenta_contable_efectivoConfiguracionPunVen.getSelectedItem();
			} else {
				cuentacontableAux=(CuentaContable)jComboBoxid_cuenta_contable_efectivoConfiguracionPunVenGenerico.getSelectedItem();
			}

			if(cuentacontableAux!=null && cuentacontableAux.getId()!=null) {
				configuracionpunven.setid_cuenta_contable_efectivo(cuentacontableAux.getId());
				configuracionpunven.setcuentacontableefectivo_descripcion(ConfiguracionPunVenConstantesFunciones.getCuentaContableEfectivoDescripcion(cuentacontableAux));
				configuracionpunven.setCuentaContableEfectivo(cuentacontableAux);			}
		}
		catch(Exception e)
		{
			throw e;
		}
	}

	@SuppressWarnings("rawtypes")
	public void setActualParaGuardarCuentaContableIceForeignKey(ConfiguracionPunVen configuracionpunven,JComboBox jComboBoxid_cuenta_contable_iceConfiguracionPunVenGenerico)throws Exception
	{
		try
		{
			CuentaContable  cuentacontableAux=new CuentaContable();

			if(jComboBoxid_cuenta_contable_iceConfiguracionPunVenGenerico==null) {
				cuentacontableAux=(CuentaContable)this.jInternalFrameDetalleFormConfiguracionPunVen.jComboBoxid_cuenta_contable_iceConfiguracionPunVen.getSelectedItem();
			} else {
				cuentacontableAux=(CuentaContable)jComboBoxid_cuenta_contable_iceConfiguracionPunVenGenerico.getSelectedItem();
			}

			if(cuentacontableAux!=null && cuentacontableAux.getId()!=null) {
				configuracionpunven.setid_cuenta_contable_ice(cuentacontableAux.getId());
				configuracionpunven.setcuentacontableice_descripcion(ConfiguracionPunVenConstantesFunciones.getCuentaContableIceDescripcion(cuentacontableAux));
				configuracionpunven.setCuentaContableIce(cuentacontableAux);			}
		}
		catch(Exception e)
		{
			throw e;
		}
	}

	@SuppressWarnings("rawtypes")
	public void setActualParaGuardarCuentaContableOtrosForeignKey(ConfiguracionPunVen configuracionpunven,JComboBox jComboBoxid_cuenta_contable_otrosConfiguracionPunVenGenerico)throws Exception
	{
		try
		{
			CuentaContable  cuentacontableAux=new CuentaContable();

			if(jComboBoxid_cuenta_contable_otrosConfiguracionPunVenGenerico==null) {
				cuentacontableAux=(CuentaContable)this.jInternalFrameDetalleFormConfiguracionPunVen.jComboBoxid_cuenta_contable_otrosConfiguracionPunVen.getSelectedItem();
			} else {
				cuentacontableAux=(CuentaContable)jComboBoxid_cuenta_contable_otrosConfiguracionPunVenGenerico.getSelectedItem();
			}

			if(cuentacontableAux!=null && cuentacontableAux.getId()!=null) {
				configuracionpunven.setid_cuenta_contable_otros(cuentacontableAux.getId());
				configuracionpunven.setcuentacontableotros_descripcion(ConfiguracionPunVenConstantesFunciones.getCuentaContableOtrosDescripcion(cuentacontableAux));
				configuracionpunven.setCuentaContableOtros(cuentacontableAux);			}
		}
		catch(Exception e)
		{
			throw e;
		}
	}

	@SuppressWarnings("rawtypes")
	public void setActualParaGuardarClienteConsumidorFinalForeignKey(ConfiguracionPunVen configuracionpunven,JComboBox jComboBoxid_cliente_consumidor_finalConfiguracionPunVenGenerico)throws Exception
	{
		try
		{
			Cliente  clienteAux=new Cliente();

			if(jComboBoxid_cliente_consumidor_finalConfiguracionPunVenGenerico==null) {
				clienteAux=(Cliente)this.jInternalFrameDetalleFormConfiguracionPunVen.jComboBoxid_cliente_consumidor_finalConfiguracionPunVen.getSelectedItem();
			} else {
				clienteAux=(Cliente)jComboBoxid_cliente_consumidor_finalConfiguracionPunVenGenerico.getSelectedItem();
			}

			if(clienteAux!=null && clienteAux.getId()!=null) {
				configuracionpunven.setid_cliente_consumidor_final(clienteAux.getId());
				configuracionpunven.setclienteconsumidorfinal_descripcion(ConfiguracionPunVenConstantesFunciones.getClienteConsumidorFinalDescripcion(clienteAux));
				configuracionpunven.setClienteConsumidorFinal(clienteAux);			}
		}
		catch(Exception e)
		{
			throw e;
		}
	}

	@SuppressWarnings("rawtypes")
	public void setActualParaGuardarTipoDocumentoFacturaForeignKey(ConfiguracionPunVen configuracionpunven,JComboBox jComboBoxid_tipo_documento_facturaConfiguracionPunVenGenerico)throws Exception
	{
		try
		{
			TipoDocumento  tipodocumentoAux=new TipoDocumento();

			if(jComboBoxid_tipo_documento_facturaConfiguracionPunVenGenerico==null) {
				tipodocumentoAux=(TipoDocumento)this.jInternalFrameDetalleFormConfiguracionPunVen.jComboBoxid_tipo_documento_facturaConfiguracionPunVen.getSelectedItem();
			} else {
				tipodocumentoAux=(TipoDocumento)jComboBoxid_tipo_documento_facturaConfiguracionPunVenGenerico.getSelectedItem();
			}

			if(tipodocumentoAux!=null && tipodocumentoAux.getId()!=null) {
				configuracionpunven.setid_tipo_documento_factura(tipodocumentoAux.getId());
				configuracionpunven.settipodocumentofactura_descripcion(ConfiguracionPunVenConstantesFunciones.getTipoDocumentoFacturaDescripcion(tipodocumentoAux));
				configuracionpunven.setTipoDocumentoFactura(tipodocumentoAux);			}
		}
		catch(Exception e)
		{
			throw e;
		}
	}

	@SuppressWarnings("rawtypes")
	public void setActualParaGuardarTipoDocumentoNotaVentaForeignKey(ConfiguracionPunVen configuracionpunven,JComboBox jComboBoxid_tipo_documento_nota_ventaConfiguracionPunVenGenerico)throws Exception
	{
		try
		{
			TipoDocumento  tipodocumentoAux=new TipoDocumento();

			if(jComboBoxid_tipo_documento_nota_ventaConfiguracionPunVenGenerico==null) {
				tipodocumentoAux=(TipoDocumento)this.jInternalFrameDetalleFormConfiguracionPunVen.jComboBoxid_tipo_documento_nota_ventaConfiguracionPunVen.getSelectedItem();
			} else {
				tipodocumentoAux=(TipoDocumento)jComboBoxid_tipo_documento_nota_ventaConfiguracionPunVenGenerico.getSelectedItem();
			}

			if(tipodocumentoAux!=null && tipodocumentoAux.getId()!=null) {
				configuracionpunven.setid_tipo_documento_nota_venta(tipodocumentoAux.getId());
				configuracionpunven.settipodocumentonotaventa_descripcion(ConfiguracionPunVenConstantesFunciones.getTipoDocumentoNotaVentaDescripcion(tipodocumentoAux));
				configuracionpunven.setTipoDocumentoNotaVenta(tipodocumentoAux);			}
		}
		catch(Exception e)
		{
			throw e;
		}
	}

	@SuppressWarnings("rawtypes")
	public void setActualParaGuardarTipoDocumentoNotaCreditoForeignKey(ConfiguracionPunVen configuracionpunven,JComboBox jComboBoxid_tipo_documento_nota_creditoConfiguracionPunVenGenerico)throws Exception
	{
		try
		{
			TipoDocumento  tipodocumentoAux=new TipoDocumento();

			if(jComboBoxid_tipo_documento_nota_creditoConfiguracionPunVenGenerico==null) {
				tipodocumentoAux=(TipoDocumento)this.jInternalFrameDetalleFormConfiguracionPunVen.jComboBoxid_tipo_documento_nota_creditoConfiguracionPunVen.getSelectedItem();
			} else {
				tipodocumentoAux=(TipoDocumento)jComboBoxid_tipo_documento_nota_creditoConfiguracionPunVenGenerico.getSelectedItem();
			}

			if(tipodocumentoAux!=null && tipodocumentoAux.getId()!=null) {
				configuracionpunven.setid_tipo_documento_nota_credito(tipodocumentoAux.getId());
				configuracionpunven.settipodocumentonotacredito_descripcion(ConfiguracionPunVenConstantesFunciones.getTipoDocumentoNotaCreditoDescripcion(tipodocumentoAux));
				configuracionpunven.setTipoDocumentoNotaCredito(tipodocumentoAux);			}
		}
		catch(Exception e)
		{
			throw e;
		}
	}

	@SuppressWarnings("rawtypes")
	public void setActualParaGuardarTipoDocumentoTarjetaCreditoForeignKey(ConfiguracionPunVen configuracionpunven,JComboBox jComboBoxid_tipo_documento_tarjeta_creditoConfiguracionPunVenGenerico)throws Exception
	{
		try
		{
			TipoDocumento  tipodocumentoAux=new TipoDocumento();

			if(jComboBoxid_tipo_documento_tarjeta_creditoConfiguracionPunVenGenerico==null) {
				tipodocumentoAux=(TipoDocumento)this.jInternalFrameDetalleFormConfiguracionPunVen.jComboBoxid_tipo_documento_tarjeta_creditoConfiguracionPunVen.getSelectedItem();
			} else {
				tipodocumentoAux=(TipoDocumento)jComboBoxid_tipo_documento_tarjeta_creditoConfiguracionPunVenGenerico.getSelectedItem();
			}

			if(tipodocumentoAux!=null && tipodocumentoAux.getId()!=null) {
				configuracionpunven.setid_tipo_documento_tarjeta_credito(tipodocumentoAux.getId());
				configuracionpunven.settipodocumentotarjetacredito_descripcion(ConfiguracionPunVenConstantesFunciones.getTipoDocumentoTarjetaCreditoDescripcion(tipodocumentoAux));
				configuracionpunven.setTipoDocumentoTarjetaCredito(tipodocumentoAux);			}
		}
		catch(Exception e)
		{
			throw e;
		}
	}

	@SuppressWarnings("rawtypes")
	public void setActualParaGuardarFormatoFacturaForeignKey(ConfiguracionPunVen configuracionpunven,JComboBox jComboBoxid_formato_facturaConfiguracionPunVenGenerico)throws Exception
	{
		try
		{
			Formato  formatoAux=new Formato();

			if(jComboBoxid_formato_facturaConfiguracionPunVenGenerico==null) {
				formatoAux=(Formato)this.jInternalFrameDetalleFormConfiguracionPunVen.jComboBoxid_formato_facturaConfiguracionPunVen.getSelectedItem();
			} else {
				formatoAux=(Formato)jComboBoxid_formato_facturaConfiguracionPunVenGenerico.getSelectedItem();
			}

			if(formatoAux!=null && formatoAux.getId()!=null) {
				configuracionpunven.setid_formato_factura(formatoAux.getId());
				configuracionpunven.setformatofactura_descripcion(ConfiguracionPunVenConstantesFunciones.getFormatoFacturaDescripcion(formatoAux));
				configuracionpunven.setFormatoFactura(formatoAux);			}
		}
		catch(Exception e)
		{
			throw e;
		}
	}

	@SuppressWarnings("rawtypes")
	public void setActualParaGuardarFormatoNotaVentaForeignKey(ConfiguracionPunVen configuracionpunven,JComboBox jComboBoxid_formato_nota_ventaConfiguracionPunVenGenerico)throws Exception
	{
		try
		{
			Formato  formatoAux=new Formato();

			if(jComboBoxid_formato_nota_ventaConfiguracionPunVenGenerico==null) {
				formatoAux=(Formato)this.jInternalFrameDetalleFormConfiguracionPunVen.jComboBoxid_formato_nota_ventaConfiguracionPunVen.getSelectedItem();
			} else {
				formatoAux=(Formato)jComboBoxid_formato_nota_ventaConfiguracionPunVenGenerico.getSelectedItem();
			}

			if(formatoAux!=null && formatoAux.getId()!=null) {
				configuracionpunven.setid_formato_nota_venta(formatoAux.getId());
				configuracionpunven.setformatonotaventa_descripcion(ConfiguracionPunVenConstantesFunciones.getFormatoNotaVentaDescripcion(formatoAux));
				configuracionpunven.setFormatoNotaVenta(formatoAux);			}
		}
		catch(Exception e)
		{
			throw e;
		}
	}

	@SuppressWarnings("rawtypes")
	public void setActualParaGuardarFormatoNotaCreditoForeignKey(ConfiguracionPunVen configuracionpunven,JComboBox jComboBoxid_formato_nota_creditoConfiguracionPunVenGenerico)throws Exception
	{
		try
		{
			Formato  formatoAux=new Formato();

			if(jComboBoxid_formato_nota_creditoConfiguracionPunVenGenerico==null) {
				formatoAux=(Formato)this.jInternalFrameDetalleFormConfiguracionPunVen.jComboBoxid_formato_nota_creditoConfiguracionPunVen.getSelectedItem();
			} else {
				formatoAux=(Formato)jComboBoxid_formato_nota_creditoConfiguracionPunVenGenerico.getSelectedItem();
			}

			if(formatoAux!=null && formatoAux.getId()!=null) {
				configuracionpunven.setid_formato_nota_credito(formatoAux.getId());
				configuracionpunven.setformatonotacredito_descripcion(ConfiguracionPunVenConstantesFunciones.getFormatoNotaCreditoDescripcion(formatoAux));
				configuracionpunven.setFormatoNotaCredito(formatoAux);			}
		}
		catch(Exception e)
		{
			throw e;
		}
	}

	@SuppressWarnings("rawtypes")
	public void setActualParaGuardarTransaccionFacturaForeignKey(ConfiguracionPunVen configuracionpunven,JComboBox jComboBoxid_transaccion_facturaConfiguracionPunVenGenerico)throws Exception
	{
		try
		{
			Transaccion  transaccionAux=new Transaccion();

			if(jComboBoxid_transaccion_facturaConfiguracionPunVenGenerico==null) {
				transaccionAux=(Transaccion)this.jInternalFrameDetalleFormConfiguracionPunVen.jComboBoxid_transaccion_facturaConfiguracionPunVen.getSelectedItem();
			} else {
				transaccionAux=(Transaccion)jComboBoxid_transaccion_facturaConfiguracionPunVenGenerico.getSelectedItem();
			}

			if(transaccionAux!=null && transaccionAux.getId()!=null) {
				configuracionpunven.setid_transaccion_factura(transaccionAux.getId());
				configuracionpunven.settransaccionfactura_descripcion(ConfiguracionPunVenConstantesFunciones.getTransaccionFacturaDescripcion(transaccionAux));
				configuracionpunven.setTransaccionFactura(transaccionAux);			}
		}
		catch(Exception e)
		{
			throw e;
		}
	}

	@SuppressWarnings("rawtypes")
	public void setActualParaGuardarTransaccionNotaVentaForeignKey(ConfiguracionPunVen configuracionpunven,JComboBox jComboBoxid_transaccion_nota_ventaConfiguracionPunVenGenerico)throws Exception
	{
		try
		{
			Transaccion  transaccionAux=new Transaccion();

			if(jComboBoxid_transaccion_nota_ventaConfiguracionPunVenGenerico==null) {
				transaccionAux=(Transaccion)this.jInternalFrameDetalleFormConfiguracionPunVen.jComboBoxid_transaccion_nota_ventaConfiguracionPunVen.getSelectedItem();
			} else {
				transaccionAux=(Transaccion)jComboBoxid_transaccion_nota_ventaConfiguracionPunVenGenerico.getSelectedItem();
			}

			if(transaccionAux!=null && transaccionAux.getId()!=null) {
				configuracionpunven.setid_transaccion_nota_venta(transaccionAux.getId());
				configuracionpunven.settransaccionnotaventa_descripcion(ConfiguracionPunVenConstantesFunciones.getTransaccionNotaVentaDescripcion(transaccionAux));
				configuracionpunven.setTransaccionNotaVenta(transaccionAux);			}
		}
		catch(Exception e)
		{
			throw e;
		}
	}

	@SuppressWarnings("rawtypes")
	public void setActualParaGuardarTransaccionNotaCreditoForeignKey(ConfiguracionPunVen configuracionpunven,JComboBox jComboBoxid_transaccion_nota_creditoConfiguracionPunVenGenerico)throws Exception
	{
		try
		{
			Transaccion  transaccionAux=new Transaccion();

			if(jComboBoxid_transaccion_nota_creditoConfiguracionPunVenGenerico==null) {
				transaccionAux=(Transaccion)this.jInternalFrameDetalleFormConfiguracionPunVen.jComboBoxid_transaccion_nota_creditoConfiguracionPunVen.getSelectedItem();
			} else {
				transaccionAux=(Transaccion)jComboBoxid_transaccion_nota_creditoConfiguracionPunVenGenerico.getSelectedItem();
			}

			if(transaccionAux!=null && transaccionAux.getId()!=null) {
				configuracionpunven.setid_transaccion_nota_credito(transaccionAux.getId());
				configuracionpunven.settransaccionnotacredito_descripcion(ConfiguracionPunVenConstantesFunciones.getTransaccionNotaCreditoDescripcion(transaccionAux));
				configuracionpunven.setTransaccionNotaCredito(transaccionAux);			}
		}
		catch(Exception e)
		{
			throw e;
		}
	}

	@SuppressWarnings("rawtypes")
	public void setActualParaGuardarTransaccionCuentaFacturaForeignKey(ConfiguracionPunVen configuracionpunven,JComboBox jComboBoxid_transaccion_cuenta_facturaConfiguracionPunVenGenerico)throws Exception
	{
		try
		{
			Transaccion  transaccionAux=new Transaccion();

			if(jComboBoxid_transaccion_cuenta_facturaConfiguracionPunVenGenerico==null) {
				transaccionAux=(Transaccion)this.jInternalFrameDetalleFormConfiguracionPunVen.jComboBoxid_transaccion_cuenta_facturaConfiguracionPunVen.getSelectedItem();
			} else {
				transaccionAux=(Transaccion)jComboBoxid_transaccion_cuenta_facturaConfiguracionPunVenGenerico.getSelectedItem();
			}

			if(transaccionAux!=null && transaccionAux.getId()!=null) {
				configuracionpunven.setid_transaccion_cuenta_factura(transaccionAux.getId());
				configuracionpunven.settransaccioncuentafactura_descripcion(ConfiguracionPunVenConstantesFunciones.getTransaccionCuentaFacturaDescripcion(transaccionAux));
				configuracionpunven.setTransaccionCuentaFactura(transaccionAux);			}
		}
		catch(Exception e)
		{
			throw e;
		}
	}

	@SuppressWarnings("rawtypes")
	public void setActualParaGuardarTransaccionCuentaNotaVentaForeignKey(ConfiguracionPunVen configuracionpunven,JComboBox jComboBoxid_transaccion_cuenta_nota_ventaConfiguracionPunVenGenerico)throws Exception
	{
		try
		{
			Transaccion  transaccionAux=new Transaccion();

			if(jComboBoxid_transaccion_cuenta_nota_ventaConfiguracionPunVenGenerico==null) {
				transaccionAux=(Transaccion)this.jInternalFrameDetalleFormConfiguracionPunVen.jComboBoxid_transaccion_cuenta_nota_ventaConfiguracionPunVen.getSelectedItem();
			} else {
				transaccionAux=(Transaccion)jComboBoxid_transaccion_cuenta_nota_ventaConfiguracionPunVenGenerico.getSelectedItem();
			}

			if(transaccionAux!=null && transaccionAux.getId()!=null) {
				configuracionpunven.setid_transaccion_cuenta_nota_venta(transaccionAux.getId());
				configuracionpunven.settransaccioncuentanotaventa_descripcion(ConfiguracionPunVenConstantesFunciones.getTransaccionCuentaNotaVentaDescripcion(transaccionAux));
				configuracionpunven.setTransaccionCuentaNotaVenta(transaccionAux);			}
		}
		catch(Exception e)
		{
			throw e;
		}
	}

	@SuppressWarnings("rawtypes")
	public void setActualParaGuardarTransaccionCuentaNotaCreditoForeignKey(ConfiguracionPunVen configuracionpunven,JComboBox jComboBoxid_transaccion_cuenta_nota_creditoConfiguracionPunVenGenerico)throws Exception
	{
		try
		{
			Transaccion  transaccionAux=new Transaccion();

			if(jComboBoxid_transaccion_cuenta_nota_creditoConfiguracionPunVenGenerico==null) {
				transaccionAux=(Transaccion)this.jInternalFrameDetalleFormConfiguracionPunVen.jComboBoxid_transaccion_cuenta_nota_creditoConfiguracionPunVen.getSelectedItem();
			} else {
				transaccionAux=(Transaccion)jComboBoxid_transaccion_cuenta_nota_creditoConfiguracionPunVenGenerico.getSelectedItem();
			}

			if(transaccionAux!=null && transaccionAux.getId()!=null) {
				configuracionpunven.setid_transaccion_cuenta_nota_credito(transaccionAux.getId());
				configuracionpunven.settransaccioncuentanotacredito_descripcion(ConfiguracionPunVenConstantesFunciones.getTransaccionCuentaNotaCreditoDescripcion(transaccionAux));
				configuracionpunven.setTransaccionCuentaNotaCredito(transaccionAux);			}
		}
		catch(Exception e)
		{
			throw e;
		}
	}

	
	


		@SuppressWarnings({ "unchecked", "rawtypes" })
		public void cargarCombosFrameEmpresasForeignKey(String sFormularioTipoBusqueda)throws Exception {
			try {

				JComboBoxBinding jComboBoxBindingEmpresa=null;

				if(sFormularioTipoBusqueda.equals("Formulario") || sFormularioTipoBusqueda.equals("Todos")){

					if(!ConfiguracionPunVenJInternalFrame.ISBINDING_MANUAL) {
					} else {
						if(this.jInternalFrameDetalleFormConfiguracionPunVen!=null) { 
							this.jInternalFrameDetalleFormConfiguracionPunVen.jComboBoxid_empresaConfiguracionPunVen.removeAllItems();

							for(Empresa empresa:this.empresasForeignKey) {
								this.jInternalFrameDetalleFormConfiguracionPunVen.jComboBoxid_empresaConfiguracionPunVen.addItem(empresa);
							}
						}
					}

					if(this.jInternalFrameDetalleFormConfiguracionPunVen!=null) { 
					}

					if(!ConfiguracionPunVenJInternalFrame.ISBINDING_MANUAL) {
					}
				}


				if(!this.conCargarMinimo) {


				}

			}  catch(Exception e) {
				throw e;
			}
		}

		@SuppressWarnings({ "unchecked", "rawtypes" })
		public void cargarCombosFrameSucursalsForeignKey(String sFormularioTipoBusqueda)throws Exception {
			try {

				JComboBoxBinding jComboBoxBindingSucursal=null;

				if(sFormularioTipoBusqueda.equals("Formulario") || sFormularioTipoBusqueda.equals("Todos")){

					if(!ConfiguracionPunVenJInternalFrame.ISBINDING_MANUAL) {
					} else {
						if(this.jInternalFrameDetalleFormConfiguracionPunVen!=null) { 
							this.jInternalFrameDetalleFormConfiguracionPunVen.jComboBoxid_sucursalConfiguracionPunVen.removeAllItems();

							for(Sucursal sucursal:this.sucursalsForeignKey) {
								this.jInternalFrameDetalleFormConfiguracionPunVen.jComboBoxid_sucursalConfiguracionPunVen.addItem(sucursal);
							}
						}
					}

					if(this.jInternalFrameDetalleFormConfiguracionPunVen!=null) { 
					}

					if(!ConfiguracionPunVenJInternalFrame.ISBINDING_MANUAL) {
					}
				}


				if(!this.conCargarMinimo) {


				}

			}  catch(Exception e) {
				throw e;
			}
		}

		@SuppressWarnings({ "unchecked", "rawtypes" })
		public void cargarCombosFrameBodegasForeignKey(String sFormularioTipoBusqueda)throws Exception {
			try {

				JComboBoxBinding jComboBoxBindingBodega=null;

				if(sFormularioTipoBusqueda.equals("Formulario") || sFormularioTipoBusqueda.equals("Todos")){

					if(!ConfiguracionPunVenJInternalFrame.ISBINDING_MANUAL) {
					} else {
						if(this.jInternalFrameDetalleFormConfiguracionPunVen!=null) { 
							this.jInternalFrameDetalleFormConfiguracionPunVen.jComboBoxid_bodegaConfiguracionPunVen.removeAllItems();

							for(Bodega bodega:this.bodegasForeignKey) {
								this.jInternalFrameDetalleFormConfiguracionPunVen.jComboBoxid_bodegaConfiguracionPunVen.addItem(bodega);
							}
						}
					}

					if(this.jInternalFrameDetalleFormConfiguracionPunVen!=null) { 
					}

					if(!ConfiguracionPunVenJInternalFrame.ISBINDING_MANUAL) {
					}
				}


				if(!this.conCargarMinimo) {

					if(sFormularioTipoBusqueda.equals("FK_IdBodega") || sFormularioTipoBusqueda.equals("Todos")){

						//BYDAN_BUSQUEDAS
						
						if(!ConfiguracionPunVenJInternalFrame.ISBINDING_MANUAL) {
						} else {
							this.jComboBoxid_bodegaFK_IdBodegaConfiguracionPunVen.removeAllItems();

							for(Bodega bodega:this.bodegasForeignKey) {
								this.jComboBoxid_bodegaFK_IdBodegaConfiguracionPunVen.addItem(bodega);
							}
						}

						if(!ConfiguracionPunVenJInternalFrame.ISBINDING_MANUAL) {
						}

						
					}

				}

			}  catch(Exception e) {
				throw e;
			}
		}

		@SuppressWarnings({ "unchecked", "rawtypes" })
		public void cargarCombosFrameCuentaContableEfectivosForeignKey(String sFormularioTipoBusqueda)throws Exception {
			try {

				JComboBoxBinding jComboBoxBindingCuentaContable=null;

				if(sFormularioTipoBusqueda.equals("Formulario") || sFormularioTipoBusqueda.equals("Todos")){

					if(!ConfiguracionPunVenJInternalFrame.ISBINDING_MANUAL) {
					} else {
						if(this.jInternalFrameDetalleFormConfiguracionPunVen!=null) { 
							this.jInternalFrameDetalleFormConfiguracionPunVen.jComboBoxid_cuenta_contable_efectivoConfiguracionPunVen.removeAllItems();

							for(CuentaContable cuentacontableefectivo:this.cuentacontableefectivosForeignKey) {
								this.jInternalFrameDetalleFormConfiguracionPunVen.jComboBoxid_cuenta_contable_efectivoConfiguracionPunVen.addItem(cuentacontableefectivo);
							}
						}
					}

					if(this.jInternalFrameDetalleFormConfiguracionPunVen!=null) { 
					}

					if(!ConfiguracionPunVenJInternalFrame.ISBINDING_MANUAL) {
					}
				}


				if(!this.conCargarMinimo) {

					if(sFormularioTipoBusqueda.equals("FK_IdCuentaContableEfectivo") || sFormularioTipoBusqueda.equals("Todos")){

						//BYDAN_BUSQUEDAS
						
						if(!ConfiguracionPunVenJInternalFrame.ISBINDING_MANUAL) {
						} else {
							this.jComboBoxid_cuenta_contable_efectivoFK_IdCuentaContableEfectivoConfiguracionPunVen.removeAllItems();

							for(CuentaContable cuentacontableefectivo:this.cuentacontableefectivosForeignKey) {
								this.jComboBoxid_cuenta_contable_efectivoFK_IdCuentaContableEfectivoConfiguracionPunVen.addItem(cuentacontableefectivo);
							}
						}

						if(!ConfiguracionPunVenJInternalFrame.ISBINDING_MANUAL) {
						}

						
					}

				}

			}  catch(Exception e) {
				throw e;
			}
		}

		@SuppressWarnings({ "unchecked", "rawtypes" })
		public void cargarCombosFrameCuentaContableIcesForeignKey(String sFormularioTipoBusqueda)throws Exception {
			try {

				JComboBoxBinding jComboBoxBindingCuentaContable=null;

				if(sFormularioTipoBusqueda.equals("Formulario") || sFormularioTipoBusqueda.equals("Todos")){

					if(!ConfiguracionPunVenJInternalFrame.ISBINDING_MANUAL) {
					} else {
						if(this.jInternalFrameDetalleFormConfiguracionPunVen!=null) { 
							this.jInternalFrameDetalleFormConfiguracionPunVen.jComboBoxid_cuenta_contable_iceConfiguracionPunVen.removeAllItems();

							for(CuentaContable cuentacontableice:this.cuentacontableicesForeignKey) {
								this.jInternalFrameDetalleFormConfiguracionPunVen.jComboBoxid_cuenta_contable_iceConfiguracionPunVen.addItem(cuentacontableice);
							}
						}
					}

					if(this.jInternalFrameDetalleFormConfiguracionPunVen!=null) { 
					}

					if(!ConfiguracionPunVenJInternalFrame.ISBINDING_MANUAL) {
					}
				}


				if(!this.conCargarMinimo) {

					if(sFormularioTipoBusqueda.equals("FK_IdCuentaContableIce") || sFormularioTipoBusqueda.equals("Todos")){

						//BYDAN_BUSQUEDAS
						
						if(!ConfiguracionPunVenJInternalFrame.ISBINDING_MANUAL) {
						} else {
							this.jComboBoxid_cuenta_contable_iceFK_IdCuentaContableIceConfiguracionPunVen.removeAllItems();

							for(CuentaContable cuentacontableice:this.cuentacontableicesForeignKey) {
								this.jComboBoxid_cuenta_contable_iceFK_IdCuentaContableIceConfiguracionPunVen.addItem(cuentacontableice);
							}
						}

						if(!ConfiguracionPunVenJInternalFrame.ISBINDING_MANUAL) {
						}

						
					}

				}

			}  catch(Exception e) {
				throw e;
			}
		}

		@SuppressWarnings({ "unchecked", "rawtypes" })
		public void cargarCombosFrameCuentaContableOtrossForeignKey(String sFormularioTipoBusqueda)throws Exception {
			try {

				JComboBoxBinding jComboBoxBindingCuentaContable=null;

				if(sFormularioTipoBusqueda.equals("Formulario") || sFormularioTipoBusqueda.equals("Todos")){

					if(!ConfiguracionPunVenJInternalFrame.ISBINDING_MANUAL) {
					} else {
						if(this.jInternalFrameDetalleFormConfiguracionPunVen!=null) { 
							this.jInternalFrameDetalleFormConfiguracionPunVen.jComboBoxid_cuenta_contable_otrosConfiguracionPunVen.removeAllItems();

							for(CuentaContable cuentacontableotros:this.cuentacontableotrossForeignKey) {
								this.jInternalFrameDetalleFormConfiguracionPunVen.jComboBoxid_cuenta_contable_otrosConfiguracionPunVen.addItem(cuentacontableotros);
							}
						}
					}

					if(this.jInternalFrameDetalleFormConfiguracionPunVen!=null) { 
					}

					if(!ConfiguracionPunVenJInternalFrame.ISBINDING_MANUAL) {
					}
				}


				if(!this.conCargarMinimo) {

					if(sFormularioTipoBusqueda.equals("FK_IdCuentaContableOtros") || sFormularioTipoBusqueda.equals("Todos")){

						//BYDAN_BUSQUEDAS
						
						if(!ConfiguracionPunVenJInternalFrame.ISBINDING_MANUAL) {
						} else {
							this.jComboBoxid_cuenta_contable_otrosFK_IdCuentaContableOtrosConfiguracionPunVen.removeAllItems();

							for(CuentaContable cuentacontableotros:this.cuentacontableotrossForeignKey) {
								this.jComboBoxid_cuenta_contable_otrosFK_IdCuentaContableOtrosConfiguracionPunVen.addItem(cuentacontableotros);
							}
						}

						if(!ConfiguracionPunVenJInternalFrame.ISBINDING_MANUAL) {
						}

						
					}

				}

			}  catch(Exception e) {
				throw e;
			}
		}

		@SuppressWarnings({ "unchecked", "rawtypes" })
		public void cargarCombosFrameClienteConsumidorFinalsForeignKey(String sFormularioTipoBusqueda)throws Exception {
			try {

				JComboBoxBinding jComboBoxBindingCliente=null;

				if(sFormularioTipoBusqueda.equals("Formulario") || sFormularioTipoBusqueda.equals("Todos")){

					if(!ConfiguracionPunVenJInternalFrame.ISBINDING_MANUAL) {
					} else {
						if(this.jInternalFrameDetalleFormConfiguracionPunVen!=null) { 
							this.jInternalFrameDetalleFormConfiguracionPunVen.jComboBoxid_cliente_consumidor_finalConfiguracionPunVen.removeAllItems();

							for(Cliente clienteconsumidorfinal:this.clienteconsumidorfinalsForeignKey) {
								this.jInternalFrameDetalleFormConfiguracionPunVen.jComboBoxid_cliente_consumidor_finalConfiguracionPunVen.addItem(clienteconsumidorfinal);
							}
						}
					}

					if(this.jInternalFrameDetalleFormConfiguracionPunVen!=null) { 
					}

					if(!ConfiguracionPunVenJInternalFrame.ISBINDING_MANUAL) {
					}
				}


				if(!this.conCargarMinimo) {

					if(sFormularioTipoBusqueda.equals("FK_IdClienteConsumidorFinal") || sFormularioTipoBusqueda.equals("Todos")){

						//BYDAN_BUSQUEDAS
						
						if(!ConfiguracionPunVenJInternalFrame.ISBINDING_MANUAL) {
						} else {
							this.jComboBoxid_cliente_consumidor_finalFK_IdClienteConsumidorFinalConfiguracionPunVen.removeAllItems();

							for(Cliente clienteconsumidorfinal:this.clienteconsumidorfinalsForeignKey) {
								this.jComboBoxid_cliente_consumidor_finalFK_IdClienteConsumidorFinalConfiguracionPunVen.addItem(clienteconsumidorfinal);
							}
						}

						if(!ConfiguracionPunVenJInternalFrame.ISBINDING_MANUAL) {
						}

						
					}

				}

			}  catch(Exception e) {
				throw e;
			}
		}

		@SuppressWarnings({ "unchecked", "rawtypes" })
		public void cargarCombosFrameTipoDocumentoFacturasForeignKey(String sFormularioTipoBusqueda)throws Exception {
			try {

				JComboBoxBinding jComboBoxBindingTipoDocumento=null;

				if(sFormularioTipoBusqueda.equals("Formulario") || sFormularioTipoBusqueda.equals("Todos")){

					if(!ConfiguracionPunVenJInternalFrame.ISBINDING_MANUAL) {
					} else {
						if(this.jInternalFrameDetalleFormConfiguracionPunVen!=null) { 
							this.jInternalFrameDetalleFormConfiguracionPunVen.jComboBoxid_tipo_documento_facturaConfiguracionPunVen.removeAllItems();

							for(TipoDocumento tipodocumentofactura:this.tipodocumentofacturasForeignKey) {
								this.jInternalFrameDetalleFormConfiguracionPunVen.jComboBoxid_tipo_documento_facturaConfiguracionPunVen.addItem(tipodocumentofactura);
							}
						}
					}

					if(this.jInternalFrameDetalleFormConfiguracionPunVen!=null) { 
					}

					if(!ConfiguracionPunVenJInternalFrame.ISBINDING_MANUAL) {
					}
				}


				if(!this.conCargarMinimo) {

					if(sFormularioTipoBusqueda.equals("FK_IdTipoDocumentoFactura") || sFormularioTipoBusqueda.equals("Todos")){

						//BYDAN_BUSQUEDAS
						
						if(!ConfiguracionPunVenJInternalFrame.ISBINDING_MANUAL) {
						} else {
							this.jComboBoxid_tipo_documento_facturaFK_IdTipoDocumentoFacturaConfiguracionPunVen.removeAllItems();

							for(TipoDocumento tipodocumentofactura:this.tipodocumentofacturasForeignKey) {
								this.jComboBoxid_tipo_documento_facturaFK_IdTipoDocumentoFacturaConfiguracionPunVen.addItem(tipodocumentofactura);
							}
						}

						if(!ConfiguracionPunVenJInternalFrame.ISBINDING_MANUAL) {
						}

						
					}

				}

			}  catch(Exception e) {
				throw e;
			}
		}

		@SuppressWarnings({ "unchecked", "rawtypes" })
		public void cargarCombosFrameTipoDocumentoNotaVentasForeignKey(String sFormularioTipoBusqueda)throws Exception {
			try {

				JComboBoxBinding jComboBoxBindingTipoDocumento=null;

				if(sFormularioTipoBusqueda.equals("Formulario") || sFormularioTipoBusqueda.equals("Todos")){

					if(!ConfiguracionPunVenJInternalFrame.ISBINDING_MANUAL) {
					} else {
						if(this.jInternalFrameDetalleFormConfiguracionPunVen!=null) { 
							this.jInternalFrameDetalleFormConfiguracionPunVen.jComboBoxid_tipo_documento_nota_ventaConfiguracionPunVen.removeAllItems();

							for(TipoDocumento tipodocumentonotaventa:this.tipodocumentonotaventasForeignKey) {
								this.jInternalFrameDetalleFormConfiguracionPunVen.jComboBoxid_tipo_documento_nota_ventaConfiguracionPunVen.addItem(tipodocumentonotaventa);
							}
						}
					}

					if(this.jInternalFrameDetalleFormConfiguracionPunVen!=null) { 
					}

					if(!ConfiguracionPunVenJInternalFrame.ISBINDING_MANUAL) {
					}
				}


				if(!this.conCargarMinimo) {

					if(sFormularioTipoBusqueda.equals("FK_IdTipoDocumentoNotaVenta") || sFormularioTipoBusqueda.equals("Todos")){

						//BYDAN_BUSQUEDAS
						
						if(!ConfiguracionPunVenJInternalFrame.ISBINDING_MANUAL) {
						} else {
							this.jComboBoxid_tipo_documento_nota_ventaFK_IdTipoDocumentoNotaVentaConfiguracionPunVen.removeAllItems();

							for(TipoDocumento tipodocumentonotaventa:this.tipodocumentonotaventasForeignKey) {
								this.jComboBoxid_tipo_documento_nota_ventaFK_IdTipoDocumentoNotaVentaConfiguracionPunVen.addItem(tipodocumentonotaventa);
							}
						}

						if(!ConfiguracionPunVenJInternalFrame.ISBINDING_MANUAL) {
						}

						
					}

				}

			}  catch(Exception e) {
				throw e;
			}
		}

		@SuppressWarnings({ "unchecked", "rawtypes" })
		public void cargarCombosFrameTipoDocumentoNotaCreditosForeignKey(String sFormularioTipoBusqueda)throws Exception {
			try {

				JComboBoxBinding jComboBoxBindingTipoDocumento=null;

				if(sFormularioTipoBusqueda.equals("Formulario") || sFormularioTipoBusqueda.equals("Todos")){

					if(!ConfiguracionPunVenJInternalFrame.ISBINDING_MANUAL) {
					} else {
						if(this.jInternalFrameDetalleFormConfiguracionPunVen!=null) { 
							this.jInternalFrameDetalleFormConfiguracionPunVen.jComboBoxid_tipo_documento_nota_creditoConfiguracionPunVen.removeAllItems();

							for(TipoDocumento tipodocumentonotacredito:this.tipodocumentonotacreditosForeignKey) {
								this.jInternalFrameDetalleFormConfiguracionPunVen.jComboBoxid_tipo_documento_nota_creditoConfiguracionPunVen.addItem(tipodocumentonotacredito);
							}
						}
					}

					if(this.jInternalFrameDetalleFormConfiguracionPunVen!=null) { 
					}

					if(!ConfiguracionPunVenJInternalFrame.ISBINDING_MANUAL) {
					}
				}


				if(!this.conCargarMinimo) {

					if(sFormularioTipoBusqueda.equals("FK_IdTipoDocumentoNotaCredito") || sFormularioTipoBusqueda.equals("Todos")){

						//BYDAN_BUSQUEDAS
						
						if(!ConfiguracionPunVenJInternalFrame.ISBINDING_MANUAL) {
						} else {
							this.jComboBoxid_tipo_documento_nota_creditoFK_IdTipoDocumentoNotaCreditoConfiguracionPunVen.removeAllItems();

							for(TipoDocumento tipodocumentonotacredito:this.tipodocumentonotacreditosForeignKey) {
								this.jComboBoxid_tipo_documento_nota_creditoFK_IdTipoDocumentoNotaCreditoConfiguracionPunVen.addItem(tipodocumentonotacredito);
							}
						}

						if(!ConfiguracionPunVenJInternalFrame.ISBINDING_MANUAL) {
						}

						
					}

				}

			}  catch(Exception e) {
				throw e;
			}
		}

		@SuppressWarnings({ "unchecked", "rawtypes" })
		public void cargarCombosFrameTipoDocumentoTarjetaCreditosForeignKey(String sFormularioTipoBusqueda)throws Exception {
			try {

				JComboBoxBinding jComboBoxBindingTipoDocumento=null;

				if(sFormularioTipoBusqueda.equals("Formulario") || sFormularioTipoBusqueda.equals("Todos")){

					if(!ConfiguracionPunVenJInternalFrame.ISBINDING_MANUAL) {
					} else {
						if(this.jInternalFrameDetalleFormConfiguracionPunVen!=null) { 
							this.jInternalFrameDetalleFormConfiguracionPunVen.jComboBoxid_tipo_documento_tarjeta_creditoConfiguracionPunVen.removeAllItems();

							for(TipoDocumento tipodocumentotarjetacredito:this.tipodocumentotarjetacreditosForeignKey) {
								this.jInternalFrameDetalleFormConfiguracionPunVen.jComboBoxid_tipo_documento_tarjeta_creditoConfiguracionPunVen.addItem(tipodocumentotarjetacredito);
							}
						}
					}

					if(this.jInternalFrameDetalleFormConfiguracionPunVen!=null) { 
					}

					if(!ConfiguracionPunVenJInternalFrame.ISBINDING_MANUAL) {
					}
				}


				if(!this.conCargarMinimo) {

					if(sFormularioTipoBusqueda.equals("FK_IdTipoDocumentoTarjetaCredito") || sFormularioTipoBusqueda.equals("Todos")){

						//BYDAN_BUSQUEDAS
						
						if(!ConfiguracionPunVenJInternalFrame.ISBINDING_MANUAL) {
						} else {
							this.jComboBoxid_tipo_documento_tarjeta_creditoFK_IdTipoDocumentoTarjetaCreditoConfiguracionPunVen.removeAllItems();

							for(TipoDocumento tipodocumentotarjetacredito:this.tipodocumentotarjetacreditosForeignKey) {
								this.jComboBoxid_tipo_documento_tarjeta_creditoFK_IdTipoDocumentoTarjetaCreditoConfiguracionPunVen.addItem(tipodocumentotarjetacredito);
							}
						}

						if(!ConfiguracionPunVenJInternalFrame.ISBINDING_MANUAL) {
						}

						
					}

				}

			}  catch(Exception e) {
				throw e;
			}
		}

		@SuppressWarnings({ "unchecked", "rawtypes" })
		public void cargarCombosFrameFormatoFacturasForeignKey(String sFormularioTipoBusqueda)throws Exception {
			try {

				JComboBoxBinding jComboBoxBindingFormato=null;

				if(sFormularioTipoBusqueda.equals("Formulario") || sFormularioTipoBusqueda.equals("Todos")){

					if(!ConfiguracionPunVenJInternalFrame.ISBINDING_MANUAL) {
					} else {
						if(this.jInternalFrameDetalleFormConfiguracionPunVen!=null) { 
							this.jInternalFrameDetalleFormConfiguracionPunVen.jComboBoxid_formato_facturaConfiguracionPunVen.removeAllItems();

							for(Formato formatofactura:this.formatofacturasForeignKey) {
								this.jInternalFrameDetalleFormConfiguracionPunVen.jComboBoxid_formato_facturaConfiguracionPunVen.addItem(formatofactura);
							}
						}
					}

					if(this.jInternalFrameDetalleFormConfiguracionPunVen!=null) { 
					}

					if(!ConfiguracionPunVenJInternalFrame.ISBINDING_MANUAL) {
					}
				}


				if(!this.conCargarMinimo) {

					if(sFormularioTipoBusqueda.equals("FK_IdFormatoFactura") || sFormularioTipoBusqueda.equals("Todos")){

						//BYDAN_BUSQUEDAS
						
						if(!ConfiguracionPunVenJInternalFrame.ISBINDING_MANUAL) {
						} else {
							this.jComboBoxid_formato_facturaFK_IdFormatoFacturaConfiguracionPunVen.removeAllItems();

							for(Formato formatofactura:this.formatofacturasForeignKey) {
								this.jComboBoxid_formato_facturaFK_IdFormatoFacturaConfiguracionPunVen.addItem(formatofactura);
							}
						}

						if(!ConfiguracionPunVenJInternalFrame.ISBINDING_MANUAL) {
						}

						
					}

				}

			}  catch(Exception e) {
				throw e;
			}
		}

		@SuppressWarnings({ "unchecked", "rawtypes" })
		public void cargarCombosFrameFormatoNotaVentasForeignKey(String sFormularioTipoBusqueda)throws Exception {
			try {

				JComboBoxBinding jComboBoxBindingFormato=null;

				if(sFormularioTipoBusqueda.equals("Formulario") || sFormularioTipoBusqueda.equals("Todos")){

					if(!ConfiguracionPunVenJInternalFrame.ISBINDING_MANUAL) {
					} else {
						if(this.jInternalFrameDetalleFormConfiguracionPunVen!=null) { 
							this.jInternalFrameDetalleFormConfiguracionPunVen.jComboBoxid_formato_nota_ventaConfiguracionPunVen.removeAllItems();

							for(Formato formatonotaventa:this.formatonotaventasForeignKey) {
								this.jInternalFrameDetalleFormConfiguracionPunVen.jComboBoxid_formato_nota_ventaConfiguracionPunVen.addItem(formatonotaventa);
							}
						}
					}

					if(this.jInternalFrameDetalleFormConfiguracionPunVen!=null) { 
					}

					if(!ConfiguracionPunVenJInternalFrame.ISBINDING_MANUAL) {
					}
				}


				if(!this.conCargarMinimo) {

					if(sFormularioTipoBusqueda.equals("FK_IdFormatoNotaVenta") || sFormularioTipoBusqueda.equals("Todos")){

						//BYDAN_BUSQUEDAS
						
						if(!ConfiguracionPunVenJInternalFrame.ISBINDING_MANUAL) {
						} else {
							this.jComboBoxid_formato_nota_ventaFK_IdFormatoNotaVentaConfiguracionPunVen.removeAllItems();

							for(Formato formatonotaventa:this.formatonotaventasForeignKey) {
								this.jComboBoxid_formato_nota_ventaFK_IdFormatoNotaVentaConfiguracionPunVen.addItem(formatonotaventa);
							}
						}

						if(!ConfiguracionPunVenJInternalFrame.ISBINDING_MANUAL) {
						}

						
					}

				}

			}  catch(Exception e) {
				throw e;
			}
		}

		@SuppressWarnings({ "unchecked", "rawtypes" })
		public void cargarCombosFrameFormatoNotaCreditosForeignKey(String sFormularioTipoBusqueda)throws Exception {
			try {

				JComboBoxBinding jComboBoxBindingFormato=null;

				if(sFormularioTipoBusqueda.equals("Formulario") || sFormularioTipoBusqueda.equals("Todos")){

					if(!ConfiguracionPunVenJInternalFrame.ISBINDING_MANUAL) {
					} else {
						if(this.jInternalFrameDetalleFormConfiguracionPunVen!=null) { 
							this.jInternalFrameDetalleFormConfiguracionPunVen.jComboBoxid_formato_nota_creditoConfiguracionPunVen.removeAllItems();

							for(Formato formatonotacredito:this.formatonotacreditosForeignKey) {
								this.jInternalFrameDetalleFormConfiguracionPunVen.jComboBoxid_formato_nota_creditoConfiguracionPunVen.addItem(formatonotacredito);
							}
						}
					}

					if(this.jInternalFrameDetalleFormConfiguracionPunVen!=null) { 
					}

					if(!ConfiguracionPunVenJInternalFrame.ISBINDING_MANUAL) {
					}
				}


				if(!this.conCargarMinimo) {

					if(sFormularioTipoBusqueda.equals("FK_IdFormatoNotaCredito") || sFormularioTipoBusqueda.equals("Todos")){

						//BYDAN_BUSQUEDAS
						
						if(!ConfiguracionPunVenJInternalFrame.ISBINDING_MANUAL) {
						} else {
							this.jComboBoxid_formato_nota_creditoFK_IdFormatoNotaCreditoConfiguracionPunVen.removeAllItems();

							for(Formato formatonotacredito:this.formatonotacreditosForeignKey) {
								this.jComboBoxid_formato_nota_creditoFK_IdFormatoNotaCreditoConfiguracionPunVen.addItem(formatonotacredito);
							}
						}

						if(!ConfiguracionPunVenJInternalFrame.ISBINDING_MANUAL) {
						}

						
					}

				}

			}  catch(Exception e) {
				throw e;
			}
		}

		@SuppressWarnings({ "unchecked", "rawtypes" })
		public void cargarCombosFrameTransaccionFacturasForeignKey(String sFormularioTipoBusqueda)throws Exception {
			try {

				JComboBoxBinding jComboBoxBindingTransaccion=null;

				if(sFormularioTipoBusqueda.equals("Formulario") || sFormularioTipoBusqueda.equals("Todos")){

					if(!ConfiguracionPunVenJInternalFrame.ISBINDING_MANUAL) {
					} else {
						if(this.jInternalFrameDetalleFormConfiguracionPunVen!=null) { 
							this.jInternalFrameDetalleFormConfiguracionPunVen.jComboBoxid_transaccion_facturaConfiguracionPunVen.removeAllItems();

							for(Transaccion transaccionfactura:this.transaccionfacturasForeignKey) {
								this.jInternalFrameDetalleFormConfiguracionPunVen.jComboBoxid_transaccion_facturaConfiguracionPunVen.addItem(transaccionfactura);
							}
						}
					}

					if(this.jInternalFrameDetalleFormConfiguracionPunVen!=null) { 
					}

					if(!ConfiguracionPunVenJInternalFrame.ISBINDING_MANUAL) {
					}
				}


				if(!this.conCargarMinimo) {

					if(sFormularioTipoBusqueda.equals("FK_IdTransaccionFactura") || sFormularioTipoBusqueda.equals("Todos")){

						//BYDAN_BUSQUEDAS
						
						if(!ConfiguracionPunVenJInternalFrame.ISBINDING_MANUAL) {
						} else {
							this.jComboBoxid_transaccion_facturaFK_IdTransaccionFacturaConfiguracionPunVen.removeAllItems();

							for(Transaccion transaccionfactura:this.transaccionfacturasForeignKey) {
								this.jComboBoxid_transaccion_facturaFK_IdTransaccionFacturaConfiguracionPunVen.addItem(transaccionfactura);
							}
						}

						if(!ConfiguracionPunVenJInternalFrame.ISBINDING_MANUAL) {
						}

						
					}

				}

			}  catch(Exception e) {
				throw e;
			}
		}

		@SuppressWarnings({ "unchecked", "rawtypes" })
		public void cargarCombosFrameTransaccionNotaVentasForeignKey(String sFormularioTipoBusqueda)throws Exception {
			try {

				JComboBoxBinding jComboBoxBindingTransaccion=null;

				if(sFormularioTipoBusqueda.equals("Formulario") || sFormularioTipoBusqueda.equals("Todos")){

					if(!ConfiguracionPunVenJInternalFrame.ISBINDING_MANUAL) {
					} else {
						if(this.jInternalFrameDetalleFormConfiguracionPunVen!=null) { 
							this.jInternalFrameDetalleFormConfiguracionPunVen.jComboBoxid_transaccion_nota_ventaConfiguracionPunVen.removeAllItems();

							for(Transaccion transaccionnotaventa:this.transaccionnotaventasForeignKey) {
								this.jInternalFrameDetalleFormConfiguracionPunVen.jComboBoxid_transaccion_nota_ventaConfiguracionPunVen.addItem(transaccionnotaventa);
							}
						}
					}

					if(this.jInternalFrameDetalleFormConfiguracionPunVen!=null) { 
					}

					if(!ConfiguracionPunVenJInternalFrame.ISBINDING_MANUAL) {
					}
				}


				if(!this.conCargarMinimo) {

					if(sFormularioTipoBusqueda.equals("FK_IdTransaccionNotaVenta") || sFormularioTipoBusqueda.equals("Todos")){

						//BYDAN_BUSQUEDAS
						
						if(!ConfiguracionPunVenJInternalFrame.ISBINDING_MANUAL) {
						} else {
							this.jComboBoxid_transaccion_nota_ventaFK_IdTransaccionNotaVentaConfiguracionPunVen.removeAllItems();

							for(Transaccion transaccionnotaventa:this.transaccionnotaventasForeignKey) {
								this.jComboBoxid_transaccion_nota_ventaFK_IdTransaccionNotaVentaConfiguracionPunVen.addItem(transaccionnotaventa);
							}
						}

						if(!ConfiguracionPunVenJInternalFrame.ISBINDING_MANUAL) {
						}

						
					}

				}

			}  catch(Exception e) {
				throw e;
			}
		}

		@SuppressWarnings({ "unchecked", "rawtypes" })
		public void cargarCombosFrameTransaccionNotaCreditosForeignKey(String sFormularioTipoBusqueda)throws Exception {
			try {

				JComboBoxBinding jComboBoxBindingTransaccion=null;

				if(sFormularioTipoBusqueda.equals("Formulario") || sFormularioTipoBusqueda.equals("Todos")){

					if(!ConfiguracionPunVenJInternalFrame.ISBINDING_MANUAL) {
					} else {
						if(this.jInternalFrameDetalleFormConfiguracionPunVen!=null) { 
							this.jInternalFrameDetalleFormConfiguracionPunVen.jComboBoxid_transaccion_nota_creditoConfiguracionPunVen.removeAllItems();

							for(Transaccion transaccionnotacredito:this.transaccionnotacreditosForeignKey) {
								this.jInternalFrameDetalleFormConfiguracionPunVen.jComboBoxid_transaccion_nota_creditoConfiguracionPunVen.addItem(transaccionnotacredito);
							}
						}
					}

					if(this.jInternalFrameDetalleFormConfiguracionPunVen!=null) { 
					}

					if(!ConfiguracionPunVenJInternalFrame.ISBINDING_MANUAL) {
					}
				}


				if(!this.conCargarMinimo) {

					if(sFormularioTipoBusqueda.equals("FK_IdTransaccionNotaCredito") || sFormularioTipoBusqueda.equals("Todos")){

						//BYDAN_BUSQUEDAS
						
						if(!ConfiguracionPunVenJInternalFrame.ISBINDING_MANUAL) {
						} else {
							this.jComboBoxid_transaccion_nota_creditoFK_IdTransaccionNotaCreditoConfiguracionPunVen.removeAllItems();

							for(Transaccion transaccionnotacredito:this.transaccionnotacreditosForeignKey) {
								this.jComboBoxid_transaccion_nota_creditoFK_IdTransaccionNotaCreditoConfiguracionPunVen.addItem(transaccionnotacredito);
							}
						}

						if(!ConfiguracionPunVenJInternalFrame.ISBINDING_MANUAL) {
						}

						
					}

				}

			}  catch(Exception e) {
				throw e;
			}
		}

		@SuppressWarnings({ "unchecked", "rawtypes" })
		public void cargarCombosFrameTransaccionCuentaFacturasForeignKey(String sFormularioTipoBusqueda)throws Exception {
			try {

				JComboBoxBinding jComboBoxBindingTransaccion=null;

				if(sFormularioTipoBusqueda.equals("Formulario") || sFormularioTipoBusqueda.equals("Todos")){

					if(!ConfiguracionPunVenJInternalFrame.ISBINDING_MANUAL) {
					} else {
						if(this.jInternalFrameDetalleFormConfiguracionPunVen!=null) { 
							this.jInternalFrameDetalleFormConfiguracionPunVen.jComboBoxid_transaccion_cuenta_facturaConfiguracionPunVen.removeAllItems();

							for(Transaccion transaccioncuentafactura:this.transaccioncuentafacturasForeignKey) {
								this.jInternalFrameDetalleFormConfiguracionPunVen.jComboBoxid_transaccion_cuenta_facturaConfiguracionPunVen.addItem(transaccioncuentafactura);
							}
						}
					}

					if(this.jInternalFrameDetalleFormConfiguracionPunVen!=null) { 
					}

					if(!ConfiguracionPunVenJInternalFrame.ISBINDING_MANUAL) {
					}
				}


				if(!this.conCargarMinimo) {

					if(sFormularioTipoBusqueda.equals("FK_IdTransaccionCuentaFactura") || sFormularioTipoBusqueda.equals("Todos")){

						//BYDAN_BUSQUEDAS
						
						if(!ConfiguracionPunVenJInternalFrame.ISBINDING_MANUAL) {
						} else {
							this.jComboBoxid_transaccion_cuenta_facturaFK_IdTransaccionCuentaFacturaConfiguracionPunVen.removeAllItems();

							for(Transaccion transaccioncuentafactura:this.transaccioncuentafacturasForeignKey) {
								this.jComboBoxid_transaccion_cuenta_facturaFK_IdTransaccionCuentaFacturaConfiguracionPunVen.addItem(transaccioncuentafactura);
							}
						}

						if(!ConfiguracionPunVenJInternalFrame.ISBINDING_MANUAL) {
						}

						
					}

				}

			}  catch(Exception e) {
				throw e;
			}
		}

		@SuppressWarnings({ "unchecked", "rawtypes" })
		public void cargarCombosFrameTransaccionCuentaNotaVentasForeignKey(String sFormularioTipoBusqueda)throws Exception {
			try {

				JComboBoxBinding jComboBoxBindingTransaccion=null;

				if(sFormularioTipoBusqueda.equals("Formulario") || sFormularioTipoBusqueda.equals("Todos")){

					if(!ConfiguracionPunVenJInternalFrame.ISBINDING_MANUAL) {
					} else {
						if(this.jInternalFrameDetalleFormConfiguracionPunVen!=null) { 
							this.jInternalFrameDetalleFormConfiguracionPunVen.jComboBoxid_transaccion_cuenta_nota_ventaConfiguracionPunVen.removeAllItems();

							for(Transaccion transaccioncuentanotaventa:this.transaccioncuentanotaventasForeignKey) {
								this.jInternalFrameDetalleFormConfiguracionPunVen.jComboBoxid_transaccion_cuenta_nota_ventaConfiguracionPunVen.addItem(transaccioncuentanotaventa);
							}
						}
					}

					if(this.jInternalFrameDetalleFormConfiguracionPunVen!=null) { 
					}

					if(!ConfiguracionPunVenJInternalFrame.ISBINDING_MANUAL) {
					}
				}


				if(!this.conCargarMinimo) {

					if(sFormularioTipoBusqueda.equals("FK_IdTransaccionCuentaNotaVenta") || sFormularioTipoBusqueda.equals("Todos")){

						//BYDAN_BUSQUEDAS
						
						if(!ConfiguracionPunVenJInternalFrame.ISBINDING_MANUAL) {
						} else {
							this.jComboBoxid_transaccion_cuenta_nota_ventaFK_IdTransaccionCuentaNotaVentaConfiguracionPunVen.removeAllItems();

							for(Transaccion transaccioncuentanotaventa:this.transaccioncuentanotaventasForeignKey) {
								this.jComboBoxid_transaccion_cuenta_nota_ventaFK_IdTransaccionCuentaNotaVentaConfiguracionPunVen.addItem(transaccioncuentanotaventa);
							}
						}

						if(!ConfiguracionPunVenJInternalFrame.ISBINDING_MANUAL) {
						}

						
					}

				}

			}  catch(Exception e) {
				throw e;
			}
		}

		@SuppressWarnings({ "unchecked", "rawtypes" })
		public void cargarCombosFrameTransaccionCuentaNotaCreditosForeignKey(String sFormularioTipoBusqueda)throws Exception {
			try {

				JComboBoxBinding jComboBoxBindingTransaccion=null;

				if(sFormularioTipoBusqueda.equals("Formulario") || sFormularioTipoBusqueda.equals("Todos")){

					if(!ConfiguracionPunVenJInternalFrame.ISBINDING_MANUAL) {
					} else {
						if(this.jInternalFrameDetalleFormConfiguracionPunVen!=null) { 
							this.jInternalFrameDetalleFormConfiguracionPunVen.jComboBoxid_transaccion_cuenta_nota_creditoConfiguracionPunVen.removeAllItems();

							for(Transaccion transaccioncuentanotacredito:this.transaccioncuentanotacreditosForeignKey) {
								this.jInternalFrameDetalleFormConfiguracionPunVen.jComboBoxid_transaccion_cuenta_nota_creditoConfiguracionPunVen.addItem(transaccioncuentanotacredito);
							}
						}
					}

					if(this.jInternalFrameDetalleFormConfiguracionPunVen!=null) { 
					}

					if(!ConfiguracionPunVenJInternalFrame.ISBINDING_MANUAL) {
					}
				}


				if(!this.conCargarMinimo) {

					if(sFormularioTipoBusqueda.equals("FK_IdTransaccionCuentaNotaCredito") || sFormularioTipoBusqueda.equals("Todos")){

						//BYDAN_BUSQUEDAS
						
						if(!ConfiguracionPunVenJInternalFrame.ISBINDING_MANUAL) {
						} else {
							this.jComboBoxid_transaccion_cuenta_nota_creditoFK_IdTransaccionCuentaNotaCreditoConfiguracionPunVen.removeAllItems();

							for(Transaccion transaccioncuentanotacredito:this.transaccioncuentanotacreditosForeignKey) {
								this.jComboBoxid_transaccion_cuenta_nota_creditoFK_IdTransaccionCuentaNotaCreditoConfiguracionPunVen.addItem(transaccioncuentanotacredito);
							}
						}

						if(!ConfiguracionPunVenJInternalFrame.ISBINDING_MANUAL) {
						}

						
					}

				}

			}  catch(Exception e) {
				throw e;
			}
		}

	


		public void setSelectedItemCombosFrameEmpresaForeignKey(Empresa empresa,int iIndexSelected,Boolean conSelectedIndex,Boolean conFormulario,Boolean conBusqueda)throws Exception {
			try {

				if(conFormulario) {
					if(!conSelectedIndex) {
						if(this.jInternalFrameDetalleFormConfiguracionPunVen!=null) {
							this.jInternalFrameDetalleFormConfiguracionPunVen.jComboBoxid_empresaConfiguracionPunVen.setSelectedItem(empresa);
						}
					} else {
						if(this.jInternalFrameDetalleFormConfiguracionPunVen!=null) {
							this.jInternalFrameDetalleFormConfiguracionPunVen.jComboBoxid_empresaConfiguracionPunVen.setSelectedIndex(iIndexSelected);
						}
					}
				}


				if(!this.conCargarMinimo) {
					if(conBusqueda) {

					//BYDAN_BUSQUEDAS
					

										}
				}
			} catch(Exception e) {
				throw e;
			}
		}

		public void setSelectedItemCombosFrameSucursalForeignKey(Sucursal sucursal,int iIndexSelected,Boolean conSelectedIndex,Boolean conFormulario,Boolean conBusqueda)throws Exception {
			try {

				if(conFormulario) {
					if(!conSelectedIndex) {
						if(this.jInternalFrameDetalleFormConfiguracionPunVen!=null) {
							this.jInternalFrameDetalleFormConfiguracionPunVen.jComboBoxid_sucursalConfiguracionPunVen.setSelectedItem(sucursal);
						}
					} else {
						if(this.jInternalFrameDetalleFormConfiguracionPunVen!=null) {
							this.jInternalFrameDetalleFormConfiguracionPunVen.jComboBoxid_sucursalConfiguracionPunVen.setSelectedIndex(iIndexSelected);
						}
					}
				}


				if(!this.conCargarMinimo) {
					if(conBusqueda) {

					//BYDAN_BUSQUEDAS
					

										}
				}
			} catch(Exception e) {
				throw e;
			}
		}

		public void setSelectedItemCombosFrameBodegaForeignKey(Bodega bodega,int iIndexSelected,Boolean conSelectedIndex,Boolean conFormulario,Boolean conBusqueda)throws Exception {
			try {

				if(conFormulario) {
					if(!conSelectedIndex) {
						if(this.jInternalFrameDetalleFormConfiguracionPunVen!=null) {
							this.jInternalFrameDetalleFormConfiguracionPunVen.jComboBoxid_bodegaConfiguracionPunVen.setSelectedItem(bodega);
						}
					} else {
						if(this.jInternalFrameDetalleFormConfiguracionPunVen!=null) {
							this.jInternalFrameDetalleFormConfiguracionPunVen.jComboBoxid_bodegaConfiguracionPunVen.setSelectedIndex(iIndexSelected);
						}
					}
				}


				if(!this.conCargarMinimo) {
					if(conBusqueda) {

					//BYDAN_BUSQUEDAS
					
						if(!conSelectedIndex) {
							this.jComboBoxid_bodegaFK_IdBodegaConfiguracionPunVen.setSelectedItem(bodega);
						} else {
							this.jComboBoxid_bodegaFK_IdBodegaConfiguracionPunVen.setSelectedIndex(iIndexSelected);
						}

										}
				}
			} catch(Exception e) {
				throw e;
			}
		}

		public void setSelectedItemCombosFrameCuentaContableEfectivoForeignKey(CuentaContable cuentacontableefectivo,int iIndexSelected,Boolean conSelectedIndex,Boolean conFormulario,Boolean conBusqueda)throws Exception {
			try {

				if(conFormulario) {
					if(!conSelectedIndex) {
						if(this.jInternalFrameDetalleFormConfiguracionPunVen!=null) {
							this.jInternalFrameDetalleFormConfiguracionPunVen.jComboBoxid_cuenta_contable_efectivoConfiguracionPunVen.setSelectedItem(cuentacontableefectivo);
						}
					} else {
						if(this.jInternalFrameDetalleFormConfiguracionPunVen!=null) {
							this.jInternalFrameDetalleFormConfiguracionPunVen.jComboBoxid_cuenta_contable_efectivoConfiguracionPunVen.setSelectedIndex(iIndexSelected);
						}
					}
				}


				if(!this.conCargarMinimo) {
					if(conBusqueda) {

					//BYDAN_BUSQUEDAS
					
						if(!conSelectedIndex) {
							this.jComboBoxid_cuenta_contable_efectivoFK_IdCuentaContableEfectivoConfiguracionPunVen.setSelectedItem(cuentacontableefectivo);
						} else {
							this.jComboBoxid_cuenta_contable_efectivoFK_IdCuentaContableEfectivoConfiguracionPunVen.setSelectedIndex(iIndexSelected);
						}

										}
				}
			} catch(Exception e) {
				throw e;
			}
		}

		public void setSelectedItemCombosFrameCuentaContableIceForeignKey(CuentaContable cuentacontableice,int iIndexSelected,Boolean conSelectedIndex,Boolean conFormulario,Boolean conBusqueda)throws Exception {
			try {

				if(conFormulario) {
					if(!conSelectedIndex) {
						if(this.jInternalFrameDetalleFormConfiguracionPunVen!=null) {
							this.jInternalFrameDetalleFormConfiguracionPunVen.jComboBoxid_cuenta_contable_iceConfiguracionPunVen.setSelectedItem(cuentacontableice);
						}
					} else {
						if(this.jInternalFrameDetalleFormConfiguracionPunVen!=null) {
							this.jInternalFrameDetalleFormConfiguracionPunVen.jComboBoxid_cuenta_contable_iceConfiguracionPunVen.setSelectedIndex(iIndexSelected);
						}
					}
				}


				if(!this.conCargarMinimo) {
					if(conBusqueda) {

					//BYDAN_BUSQUEDAS
					
						if(!conSelectedIndex) {
							this.jComboBoxid_cuenta_contable_iceFK_IdCuentaContableIceConfiguracionPunVen.setSelectedItem(cuentacontableice);
						} else {
							this.jComboBoxid_cuenta_contable_iceFK_IdCuentaContableIceConfiguracionPunVen.setSelectedIndex(iIndexSelected);
						}

										}
				}
			} catch(Exception e) {
				throw e;
			}
		}

		public void setSelectedItemCombosFrameCuentaContableOtrosForeignKey(CuentaContable cuentacontableotros,int iIndexSelected,Boolean conSelectedIndex,Boolean conFormulario,Boolean conBusqueda)throws Exception {
			try {

				if(conFormulario) {
					if(!conSelectedIndex) {
						if(this.jInternalFrameDetalleFormConfiguracionPunVen!=null) {
							this.jInternalFrameDetalleFormConfiguracionPunVen.jComboBoxid_cuenta_contable_otrosConfiguracionPunVen.setSelectedItem(cuentacontableotros);
						}
					} else {
						if(this.jInternalFrameDetalleFormConfiguracionPunVen!=null) {
							this.jInternalFrameDetalleFormConfiguracionPunVen.jComboBoxid_cuenta_contable_otrosConfiguracionPunVen.setSelectedIndex(iIndexSelected);
						}
					}
				}


				if(!this.conCargarMinimo) {
					if(conBusqueda) {

					//BYDAN_BUSQUEDAS
					
						if(!conSelectedIndex) {
							this.jComboBoxid_cuenta_contable_otrosFK_IdCuentaContableOtrosConfiguracionPunVen.setSelectedItem(cuentacontableotros);
						} else {
							this.jComboBoxid_cuenta_contable_otrosFK_IdCuentaContableOtrosConfiguracionPunVen.setSelectedIndex(iIndexSelected);
						}

										}
				}
			} catch(Exception e) {
				throw e;
			}
		}

		public void setSelectedItemCombosFrameClienteConsumidorFinalForeignKey(Cliente clienteconsumidorfinal,int iIndexSelected,Boolean conSelectedIndex,Boolean conFormulario,Boolean conBusqueda)throws Exception {
			try {

				if(conFormulario) {
					if(!conSelectedIndex) {
						if(this.jInternalFrameDetalleFormConfiguracionPunVen!=null) {
							this.jInternalFrameDetalleFormConfiguracionPunVen.jComboBoxid_cliente_consumidor_finalConfiguracionPunVen.setSelectedItem(clienteconsumidorfinal);
						}
					} else {
						if(this.jInternalFrameDetalleFormConfiguracionPunVen!=null) {
							this.jInternalFrameDetalleFormConfiguracionPunVen.jComboBoxid_cliente_consumidor_finalConfiguracionPunVen.setSelectedIndex(iIndexSelected);
						}
					}
				}


				if(!this.conCargarMinimo) {
					if(conBusqueda) {

					//BYDAN_BUSQUEDAS
					
						if(!conSelectedIndex) {
							this.jComboBoxid_cliente_consumidor_finalFK_IdClienteConsumidorFinalConfiguracionPunVen.setSelectedItem(clienteconsumidorfinal);
						} else {
							this.jComboBoxid_cliente_consumidor_finalFK_IdClienteConsumidorFinalConfiguracionPunVen.setSelectedIndex(iIndexSelected);
						}

										}
				}
			} catch(Exception e) {
				throw e;
			}
		}

		public void setSelectedItemCombosFrameTipoDocumentoFacturaForeignKey(TipoDocumento tipodocumentofactura,int iIndexSelected,Boolean conSelectedIndex,Boolean conFormulario,Boolean conBusqueda)throws Exception {
			try {

				if(conFormulario) {
					if(!conSelectedIndex) {
						if(this.jInternalFrameDetalleFormConfiguracionPunVen!=null) {
							this.jInternalFrameDetalleFormConfiguracionPunVen.jComboBoxid_tipo_documento_facturaConfiguracionPunVen.setSelectedItem(tipodocumentofactura);
						}
					} else {
						if(this.jInternalFrameDetalleFormConfiguracionPunVen!=null) {
							this.jInternalFrameDetalleFormConfiguracionPunVen.jComboBoxid_tipo_documento_facturaConfiguracionPunVen.setSelectedIndex(iIndexSelected);
						}
					}
				}


				if(!this.conCargarMinimo) {
					if(conBusqueda) {

					//BYDAN_BUSQUEDAS
					
						if(!conSelectedIndex) {
							this.jComboBoxid_tipo_documento_facturaFK_IdTipoDocumentoFacturaConfiguracionPunVen.setSelectedItem(tipodocumentofactura);
						} else {
							this.jComboBoxid_tipo_documento_facturaFK_IdTipoDocumentoFacturaConfiguracionPunVen.setSelectedIndex(iIndexSelected);
						}

										}
				}
			} catch(Exception e) {
				throw e;
			}
		}

		public void setSelectedItemCombosFrameTipoDocumentoNotaVentaForeignKey(TipoDocumento tipodocumentonotaventa,int iIndexSelected,Boolean conSelectedIndex,Boolean conFormulario,Boolean conBusqueda)throws Exception {
			try {

				if(conFormulario) {
					if(!conSelectedIndex) {
						if(this.jInternalFrameDetalleFormConfiguracionPunVen!=null) {
							this.jInternalFrameDetalleFormConfiguracionPunVen.jComboBoxid_tipo_documento_nota_ventaConfiguracionPunVen.setSelectedItem(tipodocumentonotaventa);
						}
					} else {
						if(this.jInternalFrameDetalleFormConfiguracionPunVen!=null) {
							this.jInternalFrameDetalleFormConfiguracionPunVen.jComboBoxid_tipo_documento_nota_ventaConfiguracionPunVen.setSelectedIndex(iIndexSelected);
						}
					}
				}


				if(!this.conCargarMinimo) {
					if(conBusqueda) {

					//BYDAN_BUSQUEDAS
					
						if(!conSelectedIndex) {
							this.jComboBoxid_tipo_documento_nota_ventaFK_IdTipoDocumentoNotaVentaConfiguracionPunVen.setSelectedItem(tipodocumentonotaventa);
						} else {
							this.jComboBoxid_tipo_documento_nota_ventaFK_IdTipoDocumentoNotaVentaConfiguracionPunVen.setSelectedIndex(iIndexSelected);
						}

										}
				}
			} catch(Exception e) {
				throw e;
			}
		}

		public void setSelectedItemCombosFrameTipoDocumentoNotaCreditoForeignKey(TipoDocumento tipodocumentonotacredito,int iIndexSelected,Boolean conSelectedIndex,Boolean conFormulario,Boolean conBusqueda)throws Exception {
			try {

				if(conFormulario) {
					if(!conSelectedIndex) {
						if(this.jInternalFrameDetalleFormConfiguracionPunVen!=null) {
							this.jInternalFrameDetalleFormConfiguracionPunVen.jComboBoxid_tipo_documento_nota_creditoConfiguracionPunVen.setSelectedItem(tipodocumentonotacredito);
						}
					} else {
						if(this.jInternalFrameDetalleFormConfiguracionPunVen!=null) {
							this.jInternalFrameDetalleFormConfiguracionPunVen.jComboBoxid_tipo_documento_nota_creditoConfiguracionPunVen.setSelectedIndex(iIndexSelected);
						}
					}
				}


				if(!this.conCargarMinimo) {
					if(conBusqueda) {

					//BYDAN_BUSQUEDAS
					
						if(!conSelectedIndex) {
							this.jComboBoxid_tipo_documento_nota_creditoFK_IdTipoDocumentoNotaCreditoConfiguracionPunVen.setSelectedItem(tipodocumentonotacredito);
						} else {
							this.jComboBoxid_tipo_documento_nota_creditoFK_IdTipoDocumentoNotaCreditoConfiguracionPunVen.setSelectedIndex(iIndexSelected);
						}

										}
				}
			} catch(Exception e) {
				throw e;
			}
		}

		public void setSelectedItemCombosFrameTipoDocumentoTarjetaCreditoForeignKey(TipoDocumento tipodocumentotarjetacredito,int iIndexSelected,Boolean conSelectedIndex,Boolean conFormulario,Boolean conBusqueda)throws Exception {
			try {

				if(conFormulario) {
					if(!conSelectedIndex) {
						if(this.jInternalFrameDetalleFormConfiguracionPunVen!=null) {
							this.jInternalFrameDetalleFormConfiguracionPunVen.jComboBoxid_tipo_documento_tarjeta_creditoConfiguracionPunVen.setSelectedItem(tipodocumentotarjetacredito);
						}
					} else {
						if(this.jInternalFrameDetalleFormConfiguracionPunVen!=null) {
							this.jInternalFrameDetalleFormConfiguracionPunVen.jComboBoxid_tipo_documento_tarjeta_creditoConfiguracionPunVen.setSelectedIndex(iIndexSelected);
						}
					}
				}


				if(!this.conCargarMinimo) {
					if(conBusqueda) {

					//BYDAN_BUSQUEDAS
					
						if(!conSelectedIndex) {
							this.jComboBoxid_tipo_documento_tarjeta_creditoFK_IdTipoDocumentoTarjetaCreditoConfiguracionPunVen.setSelectedItem(tipodocumentotarjetacredito);
						} else {
							this.jComboBoxid_tipo_documento_tarjeta_creditoFK_IdTipoDocumentoTarjetaCreditoConfiguracionPunVen.setSelectedIndex(iIndexSelected);
						}

										}
				}
			} catch(Exception e) {
				throw e;
			}
		}

		public void setSelectedItemCombosFrameFormatoFacturaForeignKey(Formato formatofactura,int iIndexSelected,Boolean conSelectedIndex,Boolean conFormulario,Boolean conBusqueda)throws Exception {
			try {

				if(conFormulario) {
					if(!conSelectedIndex) {
						if(this.jInternalFrameDetalleFormConfiguracionPunVen!=null) {
							this.jInternalFrameDetalleFormConfiguracionPunVen.jComboBoxid_formato_facturaConfiguracionPunVen.setSelectedItem(formatofactura);
						}
					} else {
						if(this.jInternalFrameDetalleFormConfiguracionPunVen!=null) {
							this.jInternalFrameDetalleFormConfiguracionPunVen.jComboBoxid_formato_facturaConfiguracionPunVen.setSelectedIndex(iIndexSelected);
						}
					}
				}


				if(!this.conCargarMinimo) {
					if(conBusqueda) {

					//BYDAN_BUSQUEDAS
					
						if(!conSelectedIndex) {
							this.jComboBoxid_formato_facturaFK_IdFormatoFacturaConfiguracionPunVen.setSelectedItem(formatofactura);
						} else {
							this.jComboBoxid_formato_facturaFK_IdFormatoFacturaConfiguracionPunVen.setSelectedIndex(iIndexSelected);
						}

										}
				}
			} catch(Exception e) {
				throw e;
			}
		}

		public void setSelectedItemCombosFrameFormatoNotaVentaForeignKey(Formato formatonotaventa,int iIndexSelected,Boolean conSelectedIndex,Boolean conFormulario,Boolean conBusqueda)throws Exception {
			try {

				if(conFormulario) {
					if(!conSelectedIndex) {
						if(this.jInternalFrameDetalleFormConfiguracionPunVen!=null) {
							this.jInternalFrameDetalleFormConfiguracionPunVen.jComboBoxid_formato_nota_ventaConfiguracionPunVen.setSelectedItem(formatonotaventa);
						}
					} else {
						if(this.jInternalFrameDetalleFormConfiguracionPunVen!=null) {
							this.jInternalFrameDetalleFormConfiguracionPunVen.jComboBoxid_formato_nota_ventaConfiguracionPunVen.setSelectedIndex(iIndexSelected);
						}
					}
				}


				if(!this.conCargarMinimo) {
					if(conBusqueda) {

					//BYDAN_BUSQUEDAS
					
						if(!conSelectedIndex) {
							this.jComboBoxid_formato_nota_ventaFK_IdFormatoNotaVentaConfiguracionPunVen.setSelectedItem(formatonotaventa);
						} else {
							this.jComboBoxid_formato_nota_ventaFK_IdFormatoNotaVentaConfiguracionPunVen.setSelectedIndex(iIndexSelected);
						}

										}
				}
			} catch(Exception e) {
				throw e;
			}
		}

		public void setSelectedItemCombosFrameFormatoNotaCreditoForeignKey(Formato formatonotacredito,int iIndexSelected,Boolean conSelectedIndex,Boolean conFormulario,Boolean conBusqueda)throws Exception {
			try {

				if(conFormulario) {
					if(!conSelectedIndex) {
						if(this.jInternalFrameDetalleFormConfiguracionPunVen!=null) {
							this.jInternalFrameDetalleFormConfiguracionPunVen.jComboBoxid_formato_nota_creditoConfiguracionPunVen.setSelectedItem(formatonotacredito);
						}
					} else {
						if(this.jInternalFrameDetalleFormConfiguracionPunVen!=null) {
							this.jInternalFrameDetalleFormConfiguracionPunVen.jComboBoxid_formato_nota_creditoConfiguracionPunVen.setSelectedIndex(iIndexSelected);
						}
					}
				}


				if(!this.conCargarMinimo) {
					if(conBusqueda) {

					//BYDAN_BUSQUEDAS
					
						if(!conSelectedIndex) {
							this.jComboBoxid_formato_nota_creditoFK_IdFormatoNotaCreditoConfiguracionPunVen.setSelectedItem(formatonotacredito);
						} else {
							this.jComboBoxid_formato_nota_creditoFK_IdFormatoNotaCreditoConfiguracionPunVen.setSelectedIndex(iIndexSelected);
						}

										}
				}
			} catch(Exception e) {
				throw e;
			}
		}

		public void setSelectedItemCombosFrameTransaccionFacturaForeignKey(Transaccion transaccionfactura,int iIndexSelected,Boolean conSelectedIndex,Boolean conFormulario,Boolean conBusqueda)throws Exception {
			try {

				if(conFormulario) {
					if(!conSelectedIndex) {
						if(this.jInternalFrameDetalleFormConfiguracionPunVen!=null) {
							this.jInternalFrameDetalleFormConfiguracionPunVen.jComboBoxid_transaccion_facturaConfiguracionPunVen.setSelectedItem(transaccionfactura);
						}
					} else {
						if(this.jInternalFrameDetalleFormConfiguracionPunVen!=null) {
							this.jInternalFrameDetalleFormConfiguracionPunVen.jComboBoxid_transaccion_facturaConfiguracionPunVen.setSelectedIndex(iIndexSelected);
						}
					}
				}


				if(!this.conCargarMinimo) {
					if(conBusqueda) {

					//BYDAN_BUSQUEDAS
					
						if(!conSelectedIndex) {
							this.jComboBoxid_transaccion_facturaFK_IdTransaccionFacturaConfiguracionPunVen.setSelectedItem(transaccionfactura);
						} else {
							this.jComboBoxid_transaccion_facturaFK_IdTransaccionFacturaConfiguracionPunVen.setSelectedIndex(iIndexSelected);
						}

										}
				}
			} catch(Exception e) {
				throw e;
			}
		}

		public void setSelectedItemCombosFrameTransaccionNotaVentaForeignKey(Transaccion transaccionnotaventa,int iIndexSelected,Boolean conSelectedIndex,Boolean conFormulario,Boolean conBusqueda)throws Exception {
			try {

				if(conFormulario) {
					if(!conSelectedIndex) {
						if(this.jInternalFrameDetalleFormConfiguracionPunVen!=null) {
							this.jInternalFrameDetalleFormConfiguracionPunVen.jComboBoxid_transaccion_nota_ventaConfiguracionPunVen.setSelectedItem(transaccionnotaventa);
						}
					} else {
						if(this.jInternalFrameDetalleFormConfiguracionPunVen!=null) {
							this.jInternalFrameDetalleFormConfiguracionPunVen.jComboBoxid_transaccion_nota_ventaConfiguracionPunVen.setSelectedIndex(iIndexSelected);
						}
					}
				}


				if(!this.conCargarMinimo) {
					if(conBusqueda) {

					//BYDAN_BUSQUEDAS
					
						if(!conSelectedIndex) {
							this.jComboBoxid_transaccion_nota_ventaFK_IdTransaccionNotaVentaConfiguracionPunVen.setSelectedItem(transaccionnotaventa);
						} else {
							this.jComboBoxid_transaccion_nota_ventaFK_IdTransaccionNotaVentaConfiguracionPunVen.setSelectedIndex(iIndexSelected);
						}

										}
				}
			} catch(Exception e) {
				throw e;
			}
		}

		public void setSelectedItemCombosFrameTransaccionNotaCreditoForeignKey(Transaccion transaccionnotacredito,int iIndexSelected,Boolean conSelectedIndex,Boolean conFormulario,Boolean conBusqueda)throws Exception {
			try {

				if(conFormulario) {
					if(!conSelectedIndex) {
						if(this.jInternalFrameDetalleFormConfiguracionPunVen!=null) {
							this.jInternalFrameDetalleFormConfiguracionPunVen.jComboBoxid_transaccion_nota_creditoConfiguracionPunVen.setSelectedItem(transaccionnotacredito);
						}
					} else {
						if(this.jInternalFrameDetalleFormConfiguracionPunVen!=null) {
							this.jInternalFrameDetalleFormConfiguracionPunVen.jComboBoxid_transaccion_nota_creditoConfiguracionPunVen.setSelectedIndex(iIndexSelected);
						}
					}
				}


				if(!this.conCargarMinimo) {
					if(conBusqueda) {

					//BYDAN_BUSQUEDAS
					
						if(!conSelectedIndex) {
							this.jComboBoxid_transaccion_nota_creditoFK_IdTransaccionNotaCreditoConfiguracionPunVen.setSelectedItem(transaccionnotacredito);
						} else {
							this.jComboBoxid_transaccion_nota_creditoFK_IdTransaccionNotaCreditoConfiguracionPunVen.setSelectedIndex(iIndexSelected);
						}

										}
				}
			} catch(Exception e) {
				throw e;
			}
		}

		public void setSelectedItemCombosFrameTransaccionCuentaFacturaForeignKey(Transaccion transaccioncuentafactura,int iIndexSelected,Boolean conSelectedIndex,Boolean conFormulario,Boolean conBusqueda)throws Exception {
			try {

				if(conFormulario) {
					if(!conSelectedIndex) {
						if(this.jInternalFrameDetalleFormConfiguracionPunVen!=null) {
							this.jInternalFrameDetalleFormConfiguracionPunVen.jComboBoxid_transaccion_cuenta_facturaConfiguracionPunVen.setSelectedItem(transaccioncuentafactura);
						}
					} else {
						if(this.jInternalFrameDetalleFormConfiguracionPunVen!=null) {
							this.jInternalFrameDetalleFormConfiguracionPunVen.jComboBoxid_transaccion_cuenta_facturaConfiguracionPunVen.setSelectedIndex(iIndexSelected);
						}
					}
				}


				if(!this.conCargarMinimo) {
					if(conBusqueda) {

					//BYDAN_BUSQUEDAS
					
						if(!conSelectedIndex) {
							this.jComboBoxid_transaccion_cuenta_facturaFK_IdTransaccionCuentaFacturaConfiguracionPunVen.setSelectedItem(transaccioncuentafactura);
						} else {
							this.jComboBoxid_transaccion_cuenta_facturaFK_IdTransaccionCuentaFacturaConfiguracionPunVen.setSelectedIndex(iIndexSelected);
						}

										}
				}
			} catch(Exception e) {
				throw e;
			}
		}

		public void setSelectedItemCombosFrameTransaccionCuentaNotaVentaForeignKey(Transaccion transaccioncuentanotaventa,int iIndexSelected,Boolean conSelectedIndex,Boolean conFormulario,Boolean conBusqueda)throws Exception {
			try {

				if(conFormulario) {
					if(!conSelectedIndex) {
						if(this.jInternalFrameDetalleFormConfiguracionPunVen!=null) {
							this.jInternalFrameDetalleFormConfiguracionPunVen.jComboBoxid_transaccion_cuenta_nota_ventaConfiguracionPunVen.setSelectedItem(transaccioncuentanotaventa);
						}
					} else {
						if(this.jInternalFrameDetalleFormConfiguracionPunVen!=null) {
							this.jInternalFrameDetalleFormConfiguracionPunVen.jComboBoxid_transaccion_cuenta_nota_ventaConfiguracionPunVen.setSelectedIndex(iIndexSelected);
						}
					}
				}


				if(!this.conCargarMinimo) {
					if(conBusqueda) {

					//BYDAN_BUSQUEDAS
					
						if(!conSelectedIndex) {
							this.jComboBoxid_transaccion_cuenta_nota_ventaFK_IdTransaccionCuentaNotaVentaConfiguracionPunVen.setSelectedItem(transaccioncuentanotaventa);
						} else {
							this.jComboBoxid_transaccion_cuenta_nota_ventaFK_IdTransaccionCuentaNotaVentaConfiguracionPunVen.setSelectedIndex(iIndexSelected);
						}

										}
				}
			} catch(Exception e) {
				throw e;
			}
		}

		public void setSelectedItemCombosFrameTransaccionCuentaNotaCreditoForeignKey(Transaccion transaccioncuentanotacredito,int iIndexSelected,Boolean conSelectedIndex,Boolean conFormulario,Boolean conBusqueda)throws Exception {
			try {

				if(conFormulario) {
					if(!conSelectedIndex) {
						if(this.jInternalFrameDetalleFormConfiguracionPunVen!=null) {
							this.jInternalFrameDetalleFormConfiguracionPunVen.jComboBoxid_transaccion_cuenta_nota_creditoConfiguracionPunVen.setSelectedItem(transaccioncuentanotacredito);
						}
					} else {
						if(this.jInternalFrameDetalleFormConfiguracionPunVen!=null) {
							this.jInternalFrameDetalleFormConfiguracionPunVen.jComboBoxid_transaccion_cuenta_nota_creditoConfiguracionPunVen.setSelectedIndex(iIndexSelected);
						}
					}
				}


				if(!this.conCargarMinimo) {
					if(conBusqueda) {

					//BYDAN_BUSQUEDAS
					
						if(!conSelectedIndex) {
							this.jComboBoxid_transaccion_cuenta_nota_creditoFK_IdTransaccionCuentaNotaCreditoConfiguracionPunVen.setSelectedItem(transaccioncuentanotacredito);
						} else {
							this.jComboBoxid_transaccion_cuenta_nota_creditoFK_IdTransaccionCuentaNotaCreditoConfiguracionPunVen.setSelectedIndex(iIndexSelected);
						}

										}
				}
			} catch(Exception e) {
				throw e;
			}
		}

	


	
	public void refrescarForeignKeysDescripcionesConfiguracionPunVen() throws Exception {
		//SI FUNCIONA DEEPLOAD ESTO VA AL ULTIMO
		if(Constantes.ISUSAEJBLOGICLAYER) {
			ConfiguracionPunVenConstantesFunciones.refrescarForeignKeysDescripcionesConfiguracionPunVen(this.configuracionpunvenLogic.getConfiguracionPunVens());
		} else if(Constantes.ISUSAEJBREMOTE || Constantes.ISUSAEJBHOME) {
			ConfiguracionPunVenConstantesFunciones.refrescarForeignKeysDescripcionesConfiguracionPunVen(this.configuracionpunvens);
		}
		
		/*
		ArrayList<Classe> classes=new ArrayList<Classe>();
		
		classes.add(new Classe(Empresa.class));
		classes.add(new Classe(Sucursal.class));
		classes.add(new Classe(Bodega.class));
		classes.add(new Classe(CuentaContable.class));
		classes.add(new Classe(Cliente.class));
		classes.add(new Classe(TipoDocumento.class));
		classes.add(new Classe(Formato.class));
		classes.add(new Classe(Transaccion.class));
			
		if(Constantes.ISUSAEJBLOGICLAYER) {
			//USA LOS OBJETOS DE LOGIC DIRECTAMENTE
			//configuracionpunvenLogic.setConfiguracionPunVens(this.configuracionpunvens);
			configuracionpunvenLogic.deepLoadsWithConnection(false, DeepLoadType.INCLUDE, classes,"");
	
		} else if(Constantes.ISUSAEJBREMOTE) {
		} else if(Constantes.ISUSAEJBHOME) {
		}
		*/				
	}	
	
	
	
	public Integer getiNumeroPaginacion() {
		return iNumeroPaginacion;
	}

	public void setiNumeroPaginacion(Integer iNumeroPaginacion) {
		this.iNumeroPaginacion= iNumeroPaginacion;
	}
	
	public Integer getiNumeroPaginacionPagina() {
		return iNumeroPaginacionPagina;
	}

	public void setiNumeroPaginacionPagina(Integer iNumeroPaginacionPagina) {
		this.iNumeroPaginacionPagina= iNumeroPaginacionPagina;
	}
	
	
	public Boolean getIsSeleccionarTodos() {
		return this.isSeleccionarTodos;
	}

	public void setIsSeleccionarTodos(Boolean isSeleccionarTodos) {
		this.isSeleccionarTodos= isSeleccionarTodos;
	}
	
	public Boolean getEsControlTabla() {
		return this.esControlTabla;
	}

	public void setEsControlTabla(Boolean esControlTabla) {
		this.esControlTabla= esControlTabla;
	}
	
	public Boolean getIsSeleccionados() {
		return this.isSeleccionados;
	}

	public void setIsSeleccionados(Boolean isSeleccionados) {
		this.isSeleccionados= isSeleccionados;
	}
	
	public Boolean getIsPostAccionNuevo() {
		return this.isPostAccionNuevo;
	}

	public void setIsPostAccionNuevo(Boolean isPostAccionNuevo) {
		this.isPostAccionNuevo= isPostAccionNuevo;
	}
	
	public Boolean getIsPostAccionSinCerrar() {
		return this.isPostAccionSinCerrar;
	}

	public void setIsPostAccionSinCerrar(Boolean isPostAccionSinCerrar) {
		this.isPostAccionSinCerrar= isPostAccionSinCerrar;
	}
	
	public Boolean getIsPostAccionSinMensaje() {
		return this.isPostAccionSinMensaje;
	}

	public void setIsPostAccionSinMensaje(Boolean isPostAccionSinMensaje) {
		this.isPostAccionSinMensaje= isPostAccionSinMensaje;
	}
	
	public Boolean getConGraficoReporte() {
		return this.conGraficoReporte;
	}

	public void setConGraficoReporte(Boolean conGraficoReporte) {
		this.conGraficoReporte= conGraficoReporte;
	}
	
	
	public ArrayList<Reporte> gettiposArchivosReportes() {
		return this.tiposArchivosReportes;
	}
	
	public void settiposArchivosReportes(ArrayList<Reporte> tiposArchivosReportes) {
		this.tiposArchivosReportes = tiposArchivosReportes;
	}
	
	//TIPOS ARCHIVOS DINAMICOS
	public ArrayList<Reporte> gettiposArchivosReportesDinamico() {
		return this.tiposArchivosReportesDinamico;
	}
	
	public void settiposArchivosReportesDinamico(ArrayList<Reporte> tiposArchivosReportesDinamico) {
		this.tiposArchivosReportesDinamico = tiposArchivosReportesDinamico;
	}
	
	//TIPOS REPORTES
	public ArrayList<Reporte> gettiposReportes() {
		return this.tiposReportes;
	}
	
	public void settiposReportes(ArrayList<Reporte> tiposReportes) {
		this.tiposReportes = tiposReportes;
	}
	
	//TIPOS REPORTES
	public ArrayList<Reporte> gettiposReportesDinamico() {
		return this.tiposReportesDinamico;
	}
	
	public void settiposReportesDinamico(ArrayList<Reporte> tiposReportesDinamico) {
		this.tiposReportesDinamico = tiposReportesDinamico;
	}
	
	//TIPOS GRAFICOS REPORTES
	public ArrayList<Reporte> gettiposGraficosReportes() {
		return this.tiposGraficosReportes;
	}
	
	public void settiposGraficosReportes(ArrayList<Reporte> tiposGraficosReportes) {
		this.tiposGraficosReportes = tiposGraficosReportes;
	}
	
	public ArrayList<Reporte> gettiposPaginacion() {
		return this.tiposPaginacion;
	}
	
	public void settiposPaginacion(ArrayList<Reporte> tiposPaginacion) {
		this.tiposPaginacion = tiposPaginacion;
	}
	
	public ArrayList<Reporte> gettiposRelaciones() {
		return this.tiposRelaciones;
	}
	
	public void settiposRelaciones(ArrayList<Reporte> tiposRelaciones) {
		this.tiposRelaciones= tiposRelaciones;
	}
	
	public ArrayList<Reporte> gettiposAcciones() {
		return this.tiposAcciones;
	}
	
	public void settiposAcciones(ArrayList<Reporte> tiposAcciones) {
		this.tiposAcciones = tiposAcciones;
	}
	
	public ArrayList<Reporte> gettiposAccionesFormulario() {
		return this.tiposAccionesFormulario;
	}
	
	public void settiposAccionesFormulario(ArrayList<Reporte> tiposAccionesFormulario) {
		this.tiposAccionesFormulario = tiposAccionesFormulario;
	}
	
	public ArrayList<Reporte> gettiposSeleccionar() {
		return this.tiposSeleccionar;
	}
	
	public void settiposSeleccionar(ArrayList<Reporte> tiposSeleccionar) {
		this.tiposSeleccionar = tiposSeleccionar;
	}
	
	public ArrayList<Reporte> gettiposColumnasSelect() {
		return this.tiposColumnasSelect;
	}
	
	public void settiposColumnasSelect(ArrayList<Reporte> tiposColumnasSelect) {
		this.tiposColumnasSelect = tiposColumnasSelect;
	}
		
	public ArrayList<Reporte> gettiposRelacionesSelect() {
		return this.tiposRelacionesSelect;
	}
	
	public void settiposRelacionesSelect(ArrayList<Reporte> tiposRelacionesSelect) {
		this.tiposRelacionesSelect = tiposRelacionesSelect;
	}
	
	public Long getIIdUsuarioSesion() {
		return lIdUsuarioSesion;
	}

	public void setIIdUsuarioSesion(Long lIdUsuarioSesion) {
		this.lIdUsuarioSesion = lIdUsuarioSesion;
	}
	
	
	public List<Accion> getAccions() {
		return this.accions;
	}

	public void setAccions(List<Accion> accions) {
		this.accions = accions;
	}
	
	public List<Accion> getAccionsFormulario() {
		return this.accionsFormulario;
	}

	public void setAccionsFormulario(List<Accion> accionsFormulario) {
		this.accionsFormulario = accionsFormulario;
	}
	
	public String getsAccionMantenimiento() {
		return sAccionMantenimiento;
	}

	public void setsAccionMantenimiento(String sAccionMantenimiento) {
		this.sAccionMantenimiento = sAccionMantenimiento;
	}

	public String getsAccionBusqueda() {
		return sAccionBusqueda;
	}

	public void setsAccionBusqueda(String sAccionBusqueda) {
		this.sAccionBusqueda = sAccionBusqueda;
	}

	public String getsAccionAdicional() {
		return sAccionAdicional;
	}

	public void setsAccionAdicional(String sAccionAdicional) {
		this.sAccionAdicional = sAccionAdicional;
	}

	public String getsUltimaBusqueda() {
		return sUltimaBusqueda;
	}

	public void setsUltimaBusqueda(String sUltimaBusqueda) {
		this.sUltimaBusqueda = sUltimaBusqueda;
	}
	
	public String getsTipoArchivoReporte() {
		return sTipoArchivoReporte;
	}

	public void setsTipoArchivoReporte(String sTipoArchivoReporte) {
		this.sTipoArchivoReporte = sTipoArchivoReporte;
	}
	
	public String getsTipoArchivoReporteDinamico() {
		return sTipoArchivoReporteDinamico;
	}

	public void setsTipoArchivoReporteDinamico(String sTipoArchivoReporteDinamico) {
		this.sTipoArchivoReporteDinamico = sTipoArchivoReporteDinamico;
	}
	
	public String getsTipoReporte() {
		return sTipoReporte;
	}

	public void setsTipoReporte(String sTipoReporte) {
		this.sTipoReporte = sTipoReporte;
	}
	
	public String getsTipoReporteDinamico() {
		return sTipoReporteDinamico;
	}

	public void setsTipoReporteDinamico(String sTipoReporteDinamico) {
		this.sTipoReporteDinamico = sTipoReporteDinamico;
	}
	
	public String getsTipoGraficoReporte() {
		return sTipoGraficoReporte;
	}

	public void setsTipoGraficoReporte(String sTipoGraficoReporte) {
		this.sTipoGraficoReporte = sTipoGraficoReporte;
	}
	
	public String getsTipoPaginacion() {
		return sTipoPaginacion;
	}

	public void setsTipoPaginacion(String sTipoPaginacion) {
		this.sTipoPaginacion = sTipoPaginacion;
	}
	
	public String getsTipoRelacion() {
		return sTipoRelacion;
	}

	public void setsTipoRelacion(String sTipoRelacion) {
		this.sTipoRelacion = sTipoRelacion;
	}
	
	public String getsTipoAccion() {
		return sTipoAccion;
	}

	public void setsTipoAccion(String sTipoAccion) {
		this.sTipoAccion = sTipoAccion;
	}
	
	public String getsTipoAccionFormulario() {
		return sTipoAccionFormulario;
	}

	public void setsTipoAccionFormulario(String sTipoAccionFormulario) {
		this.sTipoAccionFormulario = sTipoAccionFormulario;
	}
	
	public String getsTipoSeleccionar() {
		return sTipoSeleccionar;
	}

	public void setsTipoSeleccionar(String sTipoSeleccionar) {
		this.sTipoSeleccionar = sTipoSeleccionar;
	}
	
	public String getsValorCampoGeneral() {
		return sValorCampoGeneral;
	}

	public void setsValorCampoGeneral(String sValorCampoGeneral) {
		this.sValorCampoGeneral = sValorCampoGeneral;
	}			

	public String getsDetalleReporte() {
		return sDetalleReporte;
	}

	public void setsDetalleReporte(String sDetalleReporte) {
		this.sDetalleReporte = sDetalleReporte;
	}
	
	
	public String getsTipoReporteExtra() {
		return sTipoReporteExtra;
	}

	public void setsTipoReporteExtra(String sTipoReporteExtra) {
		this.sTipoReporteExtra = sTipoReporteExtra;
	}
	
	public Boolean getesReporteDinamico() {
		return esReporteDinamico;
	}	
	
	public void setesReporteDinamico(Boolean esReporteDinamico) {
		this.esReporteDinamico = esReporteDinamico;
	}
	
	public Boolean getesRecargarFks() {
		return esRecargarFks;
	}	
	
	public void setesRecargarFks(Boolean esRecargarFks) {
		this.esRecargarFks = esRecargarFks;
	}
	
	public Boolean getesReporteAccionProceso() {
		return esReporteAccionProceso;
	}	
	
	public void setesReporteAccionProceso(Boolean esReporteAccionProceso) {
		this.esReporteAccionProceso= esReporteAccionProceso;
	}
		
	public ConfiguracionPunVenParameterReturnGeneral getConfiguracionPunVenParameterGeneral() {
		return this.configuracionpunvenParameterGeneral;
	}
	
	public void setConfiguracionPunVenParameterGeneral(ConfiguracionPunVenParameterReturnGeneral configuracionpunvenParameterGeneral) {
		this.configuracionpunvenParameterGeneral = configuracionpunvenParameterGeneral;
	}
	
	public String getsPathReporteDinamico() {
		return sPathReporteDinamico;
	}

	public void setsPathReporteDinamico(String sPathReporteDinamico) {
		this.sPathReporteDinamico = sPathReporteDinamico;
	}
		
	public Boolean getisMostrarNumeroPaginacion() {
		return isMostrarNumeroPaginacion;
	}

	public void setisMostrarNumeroPaginacion(Boolean isMostrarNumeroPaginacion) {
		this.isMostrarNumeroPaginacion = isMostrarNumeroPaginacion;
	}
	
	public Mensaje getMensaje() {
		return mensaje;
	}

	public void setMensaje(Mensaje mensaje) {
		this.mensaje = mensaje;
	}
	
	public Boolean getIsPermisoTodoConfiguracionPunVen() {
		return isPermisoTodoConfiguracionPunVen;
	}

	public void setIsPermisoTodoConfiguracionPunVen(Boolean isPermisoTodoConfiguracionPunVen) {
		this.isPermisoTodoConfiguracionPunVen = isPermisoTodoConfiguracionPunVen;
	}

	public Boolean getIsPermisoNuevoConfiguracionPunVen() {
		return isPermisoNuevoConfiguracionPunVen;
	}

	public void setIsPermisoNuevoConfiguracionPunVen(Boolean isPermisoNuevoConfiguracionPunVen) {
		this.isPermisoNuevoConfiguracionPunVen = isPermisoNuevoConfiguracionPunVen;
	}

	public Boolean getIsPermisoActualizarConfiguracionPunVen() {
		return isPermisoActualizarConfiguracionPunVen;
	}

	public void setIsPermisoActualizarConfiguracionPunVen(Boolean isPermisoActualizarConfiguracionPunVen) {
		this.isPermisoActualizarConfiguracionPunVen = isPermisoActualizarConfiguracionPunVen;
	}

	public Boolean getIsPermisoEliminarConfiguracionPunVen() {
		return isPermisoEliminarConfiguracionPunVen;
	}

	public void setIsPermisoEliminarConfiguracionPunVen(Boolean isPermisoEliminarConfiguracionPunVen) {
		this.isPermisoEliminarConfiguracionPunVen = isPermisoEliminarConfiguracionPunVen;
	}

	public Boolean getIsPermisoGuardarCambiosConfiguracionPunVen() {
		return isPermisoGuardarCambiosConfiguracionPunVen;
	}

	public void setIsPermisoGuardarCambiosConfiguracionPunVen(Boolean isPermisoGuardarCambiosConfiguracionPunVen) {
		this.isPermisoGuardarCambiosConfiguracionPunVen = isPermisoGuardarCambiosConfiguracionPunVen;
	}
	
	public Boolean getIsPermisoConsultaConfiguracionPunVen() {
		return isPermisoConsultaConfiguracionPunVen;
	}

	public void setIsPermisoConsultaConfiguracionPunVen(Boolean isPermisoConsultaConfiguracionPunVen) {
		this.isPermisoConsultaConfiguracionPunVen = isPermisoConsultaConfiguracionPunVen;
	}

	public Boolean getIsPermisoBusquedaConfiguracionPunVen() {
		return isPermisoBusquedaConfiguracionPunVen;
	}

	public void setIsPermisoBusquedaConfiguracionPunVen(Boolean isPermisoBusquedaConfiguracionPunVen) {
		this.isPermisoBusquedaConfiguracionPunVen = isPermisoBusquedaConfiguracionPunVen;
	}

	public Boolean getIsPermisoReporteConfiguracionPunVen() {
		return isPermisoReporteConfiguracionPunVen;
	}

	public void setIsPermisoReporteConfiguracionPunVen(Boolean isPermisoReporteConfiguracionPunVen) {
		this.isPermisoReporteConfiguracionPunVen = isPermisoReporteConfiguracionPunVen;
	}
	
	public Boolean getIsPermisoPaginacionMedioConfiguracionPunVen() {
		return isPermisoPaginacionMedioConfiguracionPunVen;
	}

	public void setIsPermisoPaginacionMedioConfiguracionPunVen(Boolean isPermisoPaginacionMedioConfiguracionPunVen) {
		this.isPermisoPaginacionMedioConfiguracionPunVen = isPermisoPaginacionMedioConfiguracionPunVen;
	}
	
	public Boolean getIsPermisoPaginacionTodoConfiguracionPunVen() {
		return isPermisoPaginacionTodoConfiguracionPunVen;
	}

	public void setIsPermisoPaginacionTodoConfiguracionPunVen(Boolean isPermisoPaginacionTodoConfiguracionPunVen) {
		this.isPermisoPaginacionTodoConfiguracionPunVen = isPermisoPaginacionTodoConfiguracionPunVen;
	}
	
	public Boolean getIsPermisoPaginacionAltoConfiguracionPunVen() {
		return isPermisoPaginacionAltoConfiguracionPunVen;
	}

	public void setIsPermisoPaginacionAltoConfiguracionPunVen(Boolean isPermisoPaginacionAltoConfiguracionPunVen) {
		this.isPermisoPaginacionAltoConfiguracionPunVen = isPermisoPaginacionAltoConfiguracionPunVen;
	}
	
	public Boolean getIsPermisoCopiarConfiguracionPunVen() {
		return isPermisoCopiarConfiguracionPunVen;
	}

	public void setIsPermisoCopiarConfiguracionPunVen(Boolean isPermisoCopiarConfiguracionPunVen) {
		this.isPermisoCopiarConfiguracionPunVen = isPermisoCopiarConfiguracionPunVen;
	}
	
	public Boolean getIsPermisoVerFormConfiguracionPunVen() {
		return isPermisoVerFormConfiguracionPunVen;
	}

	public void setIsPermisoVerFormConfiguracionPunVen(Boolean isPermisoVerFormConfiguracionPunVen) {
		this.isPermisoVerFormConfiguracionPunVen = isPermisoVerFormConfiguracionPunVen;
	}
	
	public Boolean getIsPermisoDuplicarConfiguracionPunVen() {
		return isPermisoDuplicarConfiguracionPunVen;
	}

	public void setIsPermisoDuplicarConfiguracionPunVen(Boolean isPermisoDuplicarConfiguracionPunVen) {
		this.isPermisoDuplicarConfiguracionPunVen = isPermisoDuplicarConfiguracionPunVen;
	}
	
	public Boolean getIsPermisoOrdenConfiguracionPunVen() {
		return isPermisoOrdenConfiguracionPunVen;
	}

	public void setIsPermisoOrdenConfiguracionPunVen(Boolean isPermisoOrdenConfiguracionPunVen) {
		this.isPermisoOrdenConfiguracionPunVen = isPermisoOrdenConfiguracionPunVen;
	}
	
	public String getsVisibilidadTablaBusquedas() {
		return sVisibilidadTablaBusquedas;
	}

	public void setsVisibilidadTablaBusquedas(String sVisibilidadTablaBusquedas) {
		this.sVisibilidadTablaBusquedas = sVisibilidadTablaBusquedas;
	}
	
	public String getsVisibilidadTablaElementos() {
		return sVisibilidadTablaElementos;
	}

	public void setsVisibilidadTablaElementos(String sVisibilidadTablaElementos) {
		this.sVisibilidadTablaElementos = sVisibilidadTablaElementos;
	}

	public String getsVisibilidadTablaAcciones() {
		return sVisibilidadTablaAcciones;
	}

	public void setsVisibilidadTablaAcciones(String sVisibilidadTablaAcciones) {
		this.sVisibilidadTablaAcciones = sVisibilidadTablaAcciones;
	}
	
	public Boolean getIsVisibilidadCeldaNuevoConfiguracionPunVen() {
		return isVisibilidadCeldaNuevoConfiguracionPunVen;
	}

	public void setIsVisibilidadCeldaNuevoConfiguracionPunVen(Boolean isVisibilidadCeldaNuevoConfiguracionPunVen) {
		this.isVisibilidadCeldaNuevoConfiguracionPunVen = isVisibilidadCeldaNuevoConfiguracionPunVen;
	}
	
	public Boolean getIsVisibilidadCeldaDuplicarConfiguracionPunVen() {
		return isVisibilidadCeldaDuplicarConfiguracionPunVen;
	}

	public void setIsVisibilidadCeldaDuplicarConfiguracionPunVen(Boolean isVisibilidadCeldaDuplicarConfiguracionPunVen) {
		this.isVisibilidadCeldaDuplicarConfiguracionPunVen = isVisibilidadCeldaDuplicarConfiguracionPunVen;
	}
	
	public Boolean getIsVisibilidadCeldaCopiarConfiguracionPunVen() {
		return isVisibilidadCeldaCopiarConfiguracionPunVen;
	}

	public void setIsVisibilidadCeldaCopiarConfiguracionPunVen(Boolean isVisibilidadCeldaCopiarConfiguracionPunVen) {
		this.isVisibilidadCeldaCopiarConfiguracionPunVen = isVisibilidadCeldaCopiarConfiguracionPunVen;
	}
	
	public Boolean getIsVisibilidadCeldaVerFormConfiguracionPunVen() {
		return isVisibilidadCeldaVerFormConfiguracionPunVen;
	}

	public void setIsVisibilidadCeldaVerFormConfiguracionPunVen(Boolean isVisibilidadCeldaVerFormConfiguracionPunVen) {
		this.isVisibilidadCeldaVerFormConfiguracionPunVen = isVisibilidadCeldaVerFormConfiguracionPunVen;
	}
	
	public Boolean getIsVisibilidadCeldaOrdenConfiguracionPunVen() {
		return isVisibilidadCeldaOrdenConfiguracionPunVen;
	}

	public void setIsVisibilidadCeldaOrdenConfiguracionPunVen(Boolean isVisibilidadCeldaOrdenConfiguracionPunVen) {
		this.isVisibilidadCeldaOrdenConfiguracionPunVen = isVisibilidadCeldaOrdenConfiguracionPunVen;
	}
	
	public Boolean getIsVisibilidadCeldaNuevoRelacionesConfiguracionPunVen() {
		return isVisibilidadCeldaNuevoRelacionesConfiguracionPunVen;
	}

	public void setIsVisibilidadCeldaNuevoRelacionesConfiguracionPunVen(Boolean isVisibilidadCeldaNuevoRelacionesConfiguracionPunVen) {
		this.isVisibilidadCeldaNuevoRelacionesConfiguracionPunVen = isVisibilidadCeldaNuevoRelacionesConfiguracionPunVen;
	}
	
	public Boolean getIsVisibilidadCeldaModificarConfiguracionPunVen() {
		return isVisibilidadCeldaModificarConfiguracionPunVen;
	}

	public void setIsVisibilidadCeldaModificarConfiguracionPunVen(Boolean isVisibilidadCeldaModificarConfiguracionPunVen) {
		this.isVisibilidadCeldaModificarConfiguracionPunVen = isVisibilidadCeldaModificarConfiguracionPunVen;
	}
	
	public Boolean getIsVisibilidadCeldaActualizarConfiguracionPunVen() {
		return isVisibilidadCeldaActualizarConfiguracionPunVen;
	}

	public void setIsVisibilidadCeldaActualizarConfiguracionPunVen(Boolean isVisibilidadCeldaActualizarConfiguracionPunVen) {
		this.isVisibilidadCeldaActualizarConfiguracionPunVen = isVisibilidadCeldaActualizarConfiguracionPunVen;
	}

	public Boolean getIsVisibilidadCeldaEliminarConfiguracionPunVen() {
		return isVisibilidadCeldaEliminarConfiguracionPunVen;
	}

	public void setIsVisibilidadCeldaEliminarConfiguracionPunVen(Boolean isVisibilidadCeldaEliminarConfiguracionPunVen) {
		this.isVisibilidadCeldaEliminarConfiguracionPunVen = isVisibilidadCeldaEliminarConfiguracionPunVen;
	}

	public Boolean getIsVisibilidadCeldaCancelarConfiguracionPunVen() {
		return isVisibilidadCeldaCancelarConfiguracionPunVen;
	}

	public void setIsVisibilidadCeldaCancelarConfiguracionPunVen(Boolean isVisibilidadCeldaCancelarConfiguracionPunVen) {
		this.isVisibilidadCeldaCancelarConfiguracionPunVen = isVisibilidadCeldaCancelarConfiguracionPunVen;
	}

	public Boolean getIsVisibilidadCeldaGuardarConfiguracionPunVen() {
		return isVisibilidadCeldaGuardarConfiguracionPunVen;
	}

	public void setIsVisibilidadCeldaGuardarConfiguracionPunVen(Boolean isVisibilidadCeldaGuardarConfiguracionPunVen) {
		this.isVisibilidadCeldaGuardarConfiguracionPunVen = isVisibilidadCeldaGuardarConfiguracionPunVen;
	}
	
	public Boolean getIsVisibilidadCeldaGuardarCambiosConfiguracionPunVen() {
		return isVisibilidadCeldaGuardarCambiosConfiguracionPunVen;
	}

	public void setIsVisibilidadCeldaGuardarCambiosConfiguracionPunVen(Boolean isVisibilidadCeldaGuardarCambiosConfiguracionPunVen) {
		this.isVisibilidadCeldaGuardarCambiosConfiguracionPunVen = isVisibilidadCeldaGuardarCambiosConfiguracionPunVen;
	}
		
	public ConfiguracionPunVenSessionBean getconfiguracionpunvenSessionBean() {
		return this.configuracionpunvenSessionBean;
	}
	
	public void setconfiguracionpunvenSessionBean(ConfiguracionPunVenSessionBean configuracionpunvenSessionBean) {
		this.configuracionpunvenSessionBean=configuracionpunvenSessionBean;
	}
	
	
	public Boolean getisVisibilidadFK_IdBodega() {
		return this.isVisibilidadFK_IdBodega;
	}

	public void setisVisibilidadFK_IdBodega(Boolean isVisibilidadFK_IdBodega) {
		this.isVisibilidadFK_IdBodega=isVisibilidadFK_IdBodega;
	}

	public Boolean getisVisibilidadFK_IdClienteConsumidorFinal() {
		return this.isVisibilidadFK_IdClienteConsumidorFinal;
	}

	public void setisVisibilidadFK_IdClienteConsumidorFinal(Boolean isVisibilidadFK_IdClienteConsumidorFinal) {
		this.isVisibilidadFK_IdClienteConsumidorFinal=isVisibilidadFK_IdClienteConsumidorFinal;
	}

	public Boolean getisVisibilidadFK_IdCuentaContableEfectivo() {
		return this.isVisibilidadFK_IdCuentaContableEfectivo;
	}

	public void setisVisibilidadFK_IdCuentaContableEfectivo(Boolean isVisibilidadFK_IdCuentaContableEfectivo) {
		this.isVisibilidadFK_IdCuentaContableEfectivo=isVisibilidadFK_IdCuentaContableEfectivo;
	}

	public Boolean getisVisibilidadFK_IdCuentaContableIce() {
		return this.isVisibilidadFK_IdCuentaContableIce;
	}

	public void setisVisibilidadFK_IdCuentaContableIce(Boolean isVisibilidadFK_IdCuentaContableIce) {
		this.isVisibilidadFK_IdCuentaContableIce=isVisibilidadFK_IdCuentaContableIce;
	}

	public Boolean getisVisibilidadFK_IdCuentaContableOtros() {
		return this.isVisibilidadFK_IdCuentaContableOtros;
	}

	public void setisVisibilidadFK_IdCuentaContableOtros(Boolean isVisibilidadFK_IdCuentaContableOtros) {
		this.isVisibilidadFK_IdCuentaContableOtros=isVisibilidadFK_IdCuentaContableOtros;
	}

	public Boolean getisVisibilidadFK_IdEmpresa() {
		return this.isVisibilidadFK_IdEmpresa;
	}

	public void setisVisibilidadFK_IdEmpresa(Boolean isVisibilidadFK_IdEmpresa) {
		this.isVisibilidadFK_IdEmpresa=isVisibilidadFK_IdEmpresa;
	}

	public Boolean getisVisibilidadFK_IdFormatoFactura() {
		return this.isVisibilidadFK_IdFormatoFactura;
	}

	public void setisVisibilidadFK_IdFormatoFactura(Boolean isVisibilidadFK_IdFormatoFactura) {
		this.isVisibilidadFK_IdFormatoFactura=isVisibilidadFK_IdFormatoFactura;
	}

	public Boolean getisVisibilidadFK_IdFormatoNotaCredito() {
		return this.isVisibilidadFK_IdFormatoNotaCredito;
	}

	public void setisVisibilidadFK_IdFormatoNotaCredito(Boolean isVisibilidadFK_IdFormatoNotaCredito) {
		this.isVisibilidadFK_IdFormatoNotaCredito=isVisibilidadFK_IdFormatoNotaCredito;
	}

	public Boolean getisVisibilidadFK_IdFormatoNotaVenta() {
		return this.isVisibilidadFK_IdFormatoNotaVenta;
	}

	public void setisVisibilidadFK_IdFormatoNotaVenta(Boolean isVisibilidadFK_IdFormatoNotaVenta) {
		this.isVisibilidadFK_IdFormatoNotaVenta=isVisibilidadFK_IdFormatoNotaVenta;
	}

	public Boolean getisVisibilidadFK_IdSucursal() {
		return this.isVisibilidadFK_IdSucursal;
	}

	public void setisVisibilidadFK_IdSucursal(Boolean isVisibilidadFK_IdSucursal) {
		this.isVisibilidadFK_IdSucursal=isVisibilidadFK_IdSucursal;
	}

	public Boolean getisVisibilidadFK_IdTipoDocumentoFactura() {
		return this.isVisibilidadFK_IdTipoDocumentoFactura;
	}

	public void setisVisibilidadFK_IdTipoDocumentoFactura(Boolean isVisibilidadFK_IdTipoDocumentoFactura) {
		this.isVisibilidadFK_IdTipoDocumentoFactura=isVisibilidadFK_IdTipoDocumentoFactura;
	}

	public Boolean getisVisibilidadFK_IdTipoDocumentoNotaCredito() {
		return this.isVisibilidadFK_IdTipoDocumentoNotaCredito;
	}

	public void setisVisibilidadFK_IdTipoDocumentoNotaCredito(Boolean isVisibilidadFK_IdTipoDocumentoNotaCredito) {
		this.isVisibilidadFK_IdTipoDocumentoNotaCredito=isVisibilidadFK_IdTipoDocumentoNotaCredito;
	}

	public Boolean getisVisibilidadFK_IdTipoDocumentoNotaVenta() {
		return this.isVisibilidadFK_IdTipoDocumentoNotaVenta;
	}

	public void setisVisibilidadFK_IdTipoDocumentoNotaVenta(Boolean isVisibilidadFK_IdTipoDocumentoNotaVenta) {
		this.isVisibilidadFK_IdTipoDocumentoNotaVenta=isVisibilidadFK_IdTipoDocumentoNotaVenta;
	}

	public Boolean getisVisibilidadFK_IdTipoDocumentoTarjetaCredito() {
		return this.isVisibilidadFK_IdTipoDocumentoTarjetaCredito;
	}

	public void setisVisibilidadFK_IdTipoDocumentoTarjetaCredito(Boolean isVisibilidadFK_IdTipoDocumentoTarjetaCredito) {
		this.isVisibilidadFK_IdTipoDocumentoTarjetaCredito=isVisibilidadFK_IdTipoDocumentoTarjetaCredito;
	}

	public Boolean getisVisibilidadFK_IdTransaccionCuentaFactura() {
		return this.isVisibilidadFK_IdTransaccionCuentaFactura;
	}

	public void setisVisibilidadFK_IdTransaccionCuentaFactura(Boolean isVisibilidadFK_IdTransaccionCuentaFactura) {
		this.isVisibilidadFK_IdTransaccionCuentaFactura=isVisibilidadFK_IdTransaccionCuentaFactura;
	}

	public Boolean getisVisibilidadFK_IdTransaccionCuentaNotaCredito() {
		return this.isVisibilidadFK_IdTransaccionCuentaNotaCredito;
	}

	public void setisVisibilidadFK_IdTransaccionCuentaNotaCredito(Boolean isVisibilidadFK_IdTransaccionCuentaNotaCredito) {
		this.isVisibilidadFK_IdTransaccionCuentaNotaCredito=isVisibilidadFK_IdTransaccionCuentaNotaCredito;
	}

	public Boolean getisVisibilidadFK_IdTransaccionCuentaNotaVenta() {
		return this.isVisibilidadFK_IdTransaccionCuentaNotaVenta;
	}

	public void setisVisibilidadFK_IdTransaccionCuentaNotaVenta(Boolean isVisibilidadFK_IdTransaccionCuentaNotaVenta) {
		this.isVisibilidadFK_IdTransaccionCuentaNotaVenta=isVisibilidadFK_IdTransaccionCuentaNotaVenta;
	}

	public Boolean getisVisibilidadFK_IdTransaccionFactura() {
		return this.isVisibilidadFK_IdTransaccionFactura;
	}

	public void setisVisibilidadFK_IdTransaccionFactura(Boolean isVisibilidadFK_IdTransaccionFactura) {
		this.isVisibilidadFK_IdTransaccionFactura=isVisibilidadFK_IdTransaccionFactura;
	}

	public Boolean getisVisibilidadFK_IdTransaccionNotaCredito() {
		return this.isVisibilidadFK_IdTransaccionNotaCredito;
	}

	public void setisVisibilidadFK_IdTransaccionNotaCredito(Boolean isVisibilidadFK_IdTransaccionNotaCredito) {
		this.isVisibilidadFK_IdTransaccionNotaCredito=isVisibilidadFK_IdTransaccionNotaCredito;
	}

	public Boolean getisVisibilidadFK_IdTransaccionNotaVenta() {
		return this.isVisibilidadFK_IdTransaccionNotaVenta;
	}

	public void setisVisibilidadFK_IdTransaccionNotaVenta(Boolean isVisibilidadFK_IdTransaccionNotaVenta) {
		this.isVisibilidadFK_IdTransaccionNotaVenta=isVisibilidadFK_IdTransaccionNotaVenta;
	}

	
	
	public void setVariablesFormularioToObjetoActualForeignKeysConfiguracionPunVen(ConfiguracionPunVen configuracionpunven)throws Exception {
		try {
			
				this.setActualParaGuardarEmpresaForeignKey(configuracionpunven,null);
				this.setActualParaGuardarSucursalForeignKey(configuracionpunven,null);
				this.setActualParaGuardarBodegaForeignKey(configuracionpunven,null);
				this.setActualParaGuardarCuentaContableEfectivoForeignKey(configuracionpunven,null);
				this.setActualParaGuardarCuentaContableIceForeignKey(configuracionpunven,null);
				this.setActualParaGuardarCuentaContableOtrosForeignKey(configuracionpunven,null);
				this.setActualParaGuardarClienteConsumidorFinalForeignKey(configuracionpunven,null);
				this.setActualParaGuardarTipoDocumentoFacturaForeignKey(configuracionpunven,null);
				this.setActualParaGuardarTipoDocumentoNotaVentaForeignKey(configuracionpunven,null);
				this.setActualParaGuardarTipoDocumentoNotaCreditoForeignKey(configuracionpunven,null);
				this.setActualParaGuardarTipoDocumentoTarjetaCreditoForeignKey(configuracionpunven,null);
				this.setActualParaGuardarFormatoFacturaForeignKey(configuracionpunven,null);
				this.setActualParaGuardarFormatoNotaVentaForeignKey(configuracionpunven,null);
				this.setActualParaGuardarFormatoNotaCreditoForeignKey(configuracionpunven,null);
				this.setActualParaGuardarTransaccionFacturaForeignKey(configuracionpunven,null);
				this.setActualParaGuardarTransaccionNotaVentaForeignKey(configuracionpunven,null);
				this.setActualParaGuardarTransaccionNotaCreditoForeignKey(configuracionpunven,null);
				this.setActualParaGuardarTransaccionCuentaFacturaForeignKey(configuracionpunven,null);
				this.setActualParaGuardarTransaccionCuentaNotaVentaForeignKey(configuracionpunven,null);
				this.setActualParaGuardarTransaccionCuentaNotaCreditoForeignKey(configuracionpunven,null);
		} catch(Exception e) {
			throw e;
		}
	}
	
	public void cargarLicenciaCliente(DatosCliente datosCliente) throws Exception {
		Boolean existe=false;
			
		try {
				InputStream reportFile=null;
				
				String sPath=this.parametroGeneralUsuario.getpath_exportar()+"erp_bydan/license/license.xml";
				
				reportFile = new FileInputStream(sPath);
				
				Document documentBuilder=null;
				
				if(this.constantes2.DOCUMENT_BUILDER==null) {
					documentBuilder=Funciones2.parseXml(reportFile);
				} else {
					documentBuilder=this.constantes2.DOCUMENT_BUILDER;
				}
				
				//GlobalSeguridad.readXml(documentBuilder);
				
				String sNamePCServerLicencia="";
				String sClaveSistemaLicencia="";
				Date dFechaServerLicencia=null;
				
				//CARGAR ELEMENTOS DE LICENCIA
				NodeList nodeList = documentBuilder.getElementsByTagName("Licencia");
				
				for (int iIndice = 0; iIndice < nodeList.getLength(); iIndice++) {
					Node node = nodeList.item(iIndice);
				
					if (node.getNodeType() == Node.ELEMENT_NODE) {
						Element element = (Element) node;
						 
						sNamePCServerLicencia=element.getElementsByTagName("NombrePc").item(0).getTextContent();
						sClaveSistemaLicencia=element.getElementsByTagName("ClaveSistema").item(0).getTextContent();
						
						existe=true;
						break;
					}
				}														
			
				
			if(existe) {
				datosCliente.setsClaveSistema(sClaveSistemaLicencia);
				
				if(!datosCliente.getsNamePCServer().equals(sNamePCServerLicencia)
					&& !datosCliente.getsNamePCServer().equals("")) {
					
					datosCliente.setsNamePCServer(sNamePCServerLicencia);
				}
			} else {
				throw new Exception("NO EXISTE LICENCIA O NO ESTA BIEN FORMADO");
			}
		} catch(Exception e) {
			throw new Exception("NO EXISTE LICENCIA O NO ESTA BIEN FORMADO");
		}						
	}
	
	public void cargarDatosCliente() throws Exception {
		String sPrimerMacAddress="";		
		String sHostName="";		 
		String sHostIp="";		  
		String sHostUser="";
		
		
		sPrimerMacAddress=FuncionesNetwork.getPrimerMacAddress();		
		sHostName=FuncionesNetwork.getHostName();		 
		sHostIp=FuncionesNetwork.getHostIp();		  
		sHostUser=FuncionesNetwork.getHostUser();
		
		
		this.datosCliente=new DatosCliente();
		if(lIdUsuarioSesion!=null){datosCliente.setIdUsuario(this.lIdUsuarioSesion);}
		
		//SERVIDOR WEB Y TALVEZ SERVIDOR SWING WINDOWS
		this.datosCliente.setsUsuarioPCServer(sHostUser);
		this.datosCliente.setsNamePCServer(sHostName);
		this.datosCliente.setsIPPCServer(sHostIp);
		this.datosCliente.setsMacAddressPCServer(sPrimerMacAddress);
			
			//CLIENTE SWING WINDOWS
			this.datosCliente.setIsClienteWeb(false);
			
			this.datosCliente.setsUsuarioPC(sHostUser);
			this.datosCliente.setsNamePC(sHostName);
			this.datosCliente.setsIPPC(sHostIp);
			this.datosCliente.setsMacAddressPC(sPrimerMacAddress);	
			
			
			//this.cargarLicenciaCliente(this.datosCliente);
			
	}
	
	public void bugActualizarReferenciaActual(ConfiguracionPunVen configuracionpunven,ConfiguracionPunVen configuracionpunvenAux) throws Exception {
		//ARCHITECTURE		
		//EL ID NEGATIVO GUARDADO EN ORIGINAL SIRVE PARA VERIFICAR Y ACTUALIZAR EL REGISTRO NUEVO (ID,VERSIONROW)
		this.setCamposBaseDesdeOriginalConfiguracionPunVen(configuracionpunven);
					
		//POR BUG: EL OBJETO ACTUAL SE PERDIA, POR LO QUE SE GUARDA TAMBIEN VALORES EN AUX Y LUEGO DESPUES DEL MENSAJE SE HACE REFERENCIA EL OBJETO ACTUAL AL AUX
		configuracionpunvenAux.setId(configuracionpunven.getId());
		configuracionpunvenAux.setVersionRow(configuracionpunven.getVersionRow());					
	}
	
	public void ejecutarMantenimiento(MaintenanceType maintenanceType)throws Exception {	
		try	{								
			
			//this.startProcessConfiguracionPunVen();
		
			int intSelectedRow = this.jTableDatosConfiguracionPunVen.getSelectedRow();	       
			
			//PUEDE SER -1 CUANDO SE ELIMINA EN GUARDAR CAMBIOS
			if(intSelectedRow>=0 && maintenanceType!=MaintenanceType.GUARDARCAMBIOS) {
				//SE PIEDE INDICE SELECTED CON FILA TOTALES, ASEGURARSE QUE OBJETO ACTUAL ESTE EN FORMULARIO
					
				//ARCHITECTURE
				
				if(Constantes.ISUSAEJBLOGICLAYER) {
					this.configuracionpunven =(ConfiguracionPunVen) this.configuracionpunvenLogic.getConfiguracionPunVens().toArray()[this.jTableDatosConfiguracionPunVen.convertRowIndexToModel(intSelectedRow)];
				} else if(Constantes.ISUSAEJBREMOTE ||Constantes.ISUSAEJBHOME) {
					this.configuracionpunven =(ConfiguracionPunVen) this.configuracionpunvens.toArray()[this.jTableDatosConfiguracionPunVen.convertRowIndexToModel(intSelectedRow)];
				}
				
				//ARCHITECTURE
				
				if(ConfiguracionPunVenJInternalFrame.ISBINDING_MANUAL_TABLA) {
					//this.setVariablesFormularioToObjetoActualConfiguracionPunVen(this.configuracionpunven,true);
				}
				
				this.setVariablesFormularioToObjetoActualForeignKeysConfiguracionPunVen(this.configuracionpunven);
			}
			
			//LUEGO DE TRAER DATOS CORRESPONDIENTES QUE COINCIDA LISTA TABLA QUITO FILA TOTALES
			if(this.conTotales) {
				//MEJOR LO DEJO, SI EXISTE EXCEPCION SE PIEDE FILA TOTALES Y ORDEN INDICE FILA ACTUAL
				//this.quitarFilaTotales();
			}
			
			this.cargarDatosCliente();
			
			this.datosDeep=new DatosDeep();
			
			//SE CAMBIA ESTADOS CON ERROR, ENTONCES SE EJECUTA ANTES
			//this.invalidValues = configuracionpunvenValidator.getInvalidValues(this.configuracionpunven);
			
			//if(this.invalidValues==null || this.invalidValues.length<=0) {
			
			configuracionpunvenLogic.setDatosCliente(datosCliente);
			configuracionpunvenLogic.setIsConDeep(false);
			
			if(maintenanceType==MaintenanceType.NUEVO) {
				configuracionpunvenAux=new  ConfiguracionPunVen();
				
				configuracionpunvenAux.setIsNew(true);
				configuracionpunvenAux.setIsChanged(true);
				
				configuracionpunvenAux.setConfiguracionPunVenOriginal(this.configuracionpunven);
				
				configuracionpunvenAux.setId(this.configuracionpunven.getId());	
				configuracionpunvenAux.setVersionRow(this.configuracionpunven.getVersionRow());	
				configuracionpunvenAux.setid_empresa(this.configuracionpunven.getid_empresa());	
				configuracionpunvenAux.setid_sucursal(this.configuracionpunven.getid_sucursal());	
				configuracionpunvenAux.setid_bodega(this.configuracionpunven.getid_bodega());	
				configuracionpunvenAux.setid_cuenta_contable_efectivo(this.configuracionpunven.getid_cuenta_contable_efectivo());	
				configuracionpunvenAux.setid_cuenta_contable_ice(this.configuracionpunven.getid_cuenta_contable_ice());	
				configuracionpunvenAux.setid_cuenta_contable_otros(this.configuracionpunven.getid_cuenta_contable_otros());	
				configuracionpunvenAux.setid_cliente_consumidor_final(this.configuracionpunven.getid_cliente_consumidor_final());	
				configuracionpunvenAux.setid_tipo_documento_factura(this.configuracionpunven.getid_tipo_documento_factura());	
				configuracionpunvenAux.setid_tipo_documento_nota_venta(this.configuracionpunven.getid_tipo_documento_nota_venta());	
				configuracionpunvenAux.setid_tipo_documento_nota_credito(this.configuracionpunven.getid_tipo_documento_nota_credito());	
				configuracionpunvenAux.setid_tipo_documento_tarjeta_credito(this.configuracionpunven.getid_tipo_documento_tarjeta_credito());	
				configuracionpunvenAux.setid_formato_factura(this.configuracionpunven.getid_formato_factura());	
				configuracionpunvenAux.setid_formato_nota_venta(this.configuracionpunven.getid_formato_nota_venta());	
				configuracionpunvenAux.setid_formato_nota_credito(this.configuracionpunven.getid_formato_nota_credito());	
				configuracionpunvenAux.setid_transaccion_factura(this.configuracionpunven.getid_transaccion_factura());	
				configuracionpunvenAux.setid_transaccion_nota_venta(this.configuracionpunven.getid_transaccion_nota_venta());	
				configuracionpunvenAux.setid_transaccion_nota_credito(this.configuracionpunven.getid_transaccion_nota_credito());	
				configuracionpunvenAux.setid_transaccion_cuenta_factura(this.configuracionpunven.getid_transaccion_cuenta_factura());	
				configuracionpunvenAux.setid_transaccion_cuenta_nota_venta(this.configuracionpunven.getid_transaccion_cuenta_nota_venta());	
				configuracionpunvenAux.setid_transaccion_cuenta_nota_credito(this.configuracionpunven.getid_transaccion_cuenta_nota_credito());	
								
				//ARCHITECTURE
				if(Constantes.ISUSAEJBLOGICLAYER) {
					//NO ENTENDIBLE PORQUE PONER
					//if(this.configuracionpunvenSessionBean.getEstaModoGuardarRelaciones() 
					//	|| this.configuracionpunvenSessionBean.getEsGuardarRelacionado())	{
						actualizarLista(configuracionpunvenAux,configuracionpunvenLogic.getConfiguracionPunVens());
					//}
				} else if(Constantes.ISUSAEJBREMOTE||Constantes.ISUSAEJBHOME) {
					actualizarLista(configuracionpunvenAux,configuracionpunvens);
				}
				//ARCHITECTURE
				
				if(!isGuardarCambiosEnLote  && !this.configuracionpunvenSessionBean.getEstaModoGuardarRelaciones() 
						&& !this.configuracionpunvenSessionBean.getEsGuardarRelacionado())	{
					
					//ARCHITECTURE
					if(Constantes.ISUSAEJBLOGICLAYER) {
						configuracionpunvenLogic.saveConfiguracionPunVens();//WithConnection
						//configuracionpunvenLogic.getSetVersionRowConfiguracionPunVens();//WithConnection
					} else if(Constantes.ISUSAEJBREMOTE) {
					} else if(Constantes.ISUSAEJBHOME) {
					}
					//ARCHITECTURE		
					
					//POR BUG: EL OBJETO ACTUAL SE PERDIA, POR LO QUE SE GUARDA TAMBIEN VALORES EN AUX Y LUEGO DESPUES DEL MENSAJE SE HACE REFERENCIA EL OBJETO ACTUAL AL AUX
					this.bugActualizarReferenciaActual(this.configuracionpunven,configuracionpunvenAux);
					
					this.refrescarForeignKeysDescripcionesConfiguracionPunVen();
				} else {
					//CUANDO ES MANTENIMIENTO MAESTRO DETALLE
					if(this.configuracionpunvenSessionBean.getEstaModoGuardarRelaciones()) {
						//GUARDAR RELACIONES
						//ARCHITECTURE
						if(Constantes.ISUSAEJBLOGICLAYER) {
							
						} else if(Constantes.ISUSAEJBREMOTE ||Constantes.ISUSAEJBHOME) {
							
						}
						//ARCHITECTURE	
						
						if(!this.configuracionpunvenSessionBean.getEsGuardarRelacionado()) {
							//QUITAR FILA TOTAL
							//ARCHITECTURE
							if(Constantes.ISUSAEJBLOGICLAYER) {
							
							} else if(Constantes.ISUSAEJBREMOTE ||Constantes.ISUSAEJBHOME) {
								
							}
							//ARCHITECTURE
												
							//ARCHITECTURE
							if(Constantes.ISUSAEJBLOGICLAYER) {
								configuracionpunvenLogic.saveConfiguracionPunVenRelaciones(configuracionpunvenAux);//WithConnection
								//configuracionpunvenLogic.getSetVersionRowConfiguracionPunVens();//WithConnection
							} else if(Constantes.ISUSAEJBREMOTE) {
							} else if(Constantes.ISUSAEJBHOME) {
							}
							//ARCHITECTURE
							
							//POR BUG: EL OBJETO ACTUAL SE PERDIA, POR LO QUE SE GUARDA TAMBIEN VALORES EN AUX Y LUEGO DESPUES DEL MENSAJE SE HACE REFERENCIA EL OBJETO ACTUAL AL AUX
							this.bugActualizarReferenciaActual(this.configuracionpunven,configuracionpunvenAux);
					
					
							//ARCHITECTURE
							if(Constantes.ISUSAEJBLOGICLAYER) {
								
							} else if(Constantes.ISUSAEJBREMOTE ||Constantes.ISUSAEJBHOME) {
								
							}
							//ARCHITECTURE	
						} else {
							
							
							
							//ARCHITECTURE
							if(Constantes.ISUSAEJBLOGICLAYER) {
								if(this.configuracionpunvenSessionBean.getEstaModoGuardarRelaciones() 
									|| this.configuracionpunvenSessionBean.getEsGuardarRelacionado())	{
									actualizarLista(configuracionpunvenAux,configuracionpunvenLogic.getConfiguracionPunVens());
								}
							} else if(Constantes.ISUSAEJBREMOTE||Constantes.ISUSAEJBHOME) {
								actualizarLista(configuracionpunvenAux,configuracionpunvens);
							}
							//ARCHITECTURE
							
							//AQUI EL ID NEGATIVO ES EL ID BUSCADO, YA QUE NO SE GENERA OTRO EN LA DB POR INGRESAR UNO NUEVO
							//POR BUG: EL OBJETO ACTUAL SE PERDIA, POR LO QUE SE GUARDA TAMBIEN VALORES EN AUX Y LUEGO DESPUES DEL MENSAJE SE HACE REFERENCIA EL OBJETO ACTUAL AL AUX
							//this.bugActualizarReferenciaActual(this.configuracionpunven,configuracionpunvenAux);												
						}
					}
				}
			} else if(maintenanceType==MaintenanceType.ACTUALIZAR) {
				configuracionpunvenAux=new  ConfiguracionPunVen();
				
				//PUEDE QUE SE ACTUALIZE ALGUN REGISTRO NUEVO
				if(!this.configuracionpunvenSessionBean.getEsGuardarRelacionado() 
					|| (this.configuracionpunvenSessionBean.getEsGuardarRelacionado() && this.configuracionpunven.getId()>=0)) {
						
					configuracionpunvenAux.setIsNew(false);
				}
				
				configuracionpunvenAux.setIsDeleted(false);
			
				configuracionpunvenAux.setId(this.configuracionpunven.getId());	
				configuracionpunvenAux.setVersionRow(this.configuracionpunven.getVersionRow());	
				configuracionpunvenAux.setid_empresa(this.configuracionpunven.getid_empresa());	
				configuracionpunvenAux.setid_sucursal(this.configuracionpunven.getid_sucursal());	
				configuracionpunvenAux.setid_bodega(this.configuracionpunven.getid_bodega());	
				configuracionpunvenAux.setid_cuenta_contable_efectivo(this.configuracionpunven.getid_cuenta_contable_efectivo());	
				configuracionpunvenAux.setid_cuenta_contable_ice(this.configuracionpunven.getid_cuenta_contable_ice());	
				configuracionpunvenAux.setid_cuenta_contable_otros(this.configuracionpunven.getid_cuenta_contable_otros());	
				configuracionpunvenAux.setid_cliente_consumidor_final(this.configuracionpunven.getid_cliente_consumidor_final());	
				configuracionpunvenAux.setid_tipo_documento_factura(this.configuracionpunven.getid_tipo_documento_factura());	
				configuracionpunvenAux.setid_tipo_documento_nota_venta(this.configuracionpunven.getid_tipo_documento_nota_venta());	
				configuracionpunvenAux.setid_tipo_documento_nota_credito(this.configuracionpunven.getid_tipo_documento_nota_credito());	
				configuracionpunvenAux.setid_tipo_documento_tarjeta_credito(this.configuracionpunven.getid_tipo_documento_tarjeta_credito());	
				configuracionpunvenAux.setid_formato_factura(this.configuracionpunven.getid_formato_factura());	
				configuracionpunvenAux.setid_formato_nota_venta(this.configuracionpunven.getid_formato_nota_venta());	
				configuracionpunvenAux.setid_formato_nota_credito(this.configuracionpunven.getid_formato_nota_credito());	
				configuracionpunvenAux.setid_transaccion_factura(this.configuracionpunven.getid_transaccion_factura());	
				configuracionpunvenAux.setid_transaccion_nota_venta(this.configuracionpunven.getid_transaccion_nota_venta());	
				configuracionpunvenAux.setid_transaccion_nota_credito(this.configuracionpunven.getid_transaccion_nota_credito());	
				configuracionpunvenAux.setid_transaccion_cuenta_factura(this.configuracionpunven.getid_transaccion_cuenta_factura());	
				configuracionpunvenAux.setid_transaccion_cuenta_nota_venta(this.configuracionpunven.getid_transaccion_cuenta_nota_venta());	
				configuracionpunvenAux.setid_transaccion_cuenta_nota_credito(this.configuracionpunven.getid_transaccion_cuenta_nota_credito());	
				
				//ARCHITECTURE
				if(Constantes.ISUSAEJBLOGICLAYER) {
					actualizarLista(configuracionpunvenAux,configuracionpunvenLogic.getConfiguracionPunVens());
				} else if(Constantes.ISUSAEJBREMOTE||Constantes.ISUSAEJBHOME) {
					actualizarLista(configuracionpunvenAux,configuracionpunvens);
				}
				//ARCHITECTURE
				
				if(!isGuardarCambiosEnLote && !this.configuracionpunvenSessionBean.getEstaModoGuardarRelaciones() 
						&& !this.configuracionpunvenSessionBean.getEsGuardarRelacionado())	{
					
					//ARCHITECTURE
					if(Constantes.ISUSAEJBLOGICLAYER) {
						configuracionpunvenLogic.saveConfiguracionPunVens();//WithConnection
						//configuracionpunvenLogic.getSetVersionRowConfiguracionPunVens();//WithConnection
					} else if(Constantes.ISUSAEJBREMOTE) {
					} else if(Constantes.ISUSAEJBHOME) {
					}	
					//ARCHITECTURE
					
					//TALVEZ ESTA DEMAS POR SER UPDATE
					//POR BUG: EL OBJETO ACTUAL SE PERDIA, POR LO QUE SE GUARDA TAMBIEN VALORES EN AUX Y LUEGO DESPUES DEL MENSAJE SE HACE REFERENCIA EL OBJETO ACTUAL AL AUX
					this.bugActualizarReferenciaActual(this.configuracionpunven,configuracionpunvenAux);
					
					this.refrescarForeignKeysDescripcionesConfiguracionPunVen();
				} else {
					//CUANDO ES MANTENIMIENTO MAESTRO DETALLE
					if(this.configuracionpunvenSessionBean.getEstaModoGuardarRelaciones()) {
						//GUARDAR RELACIONES
						//ARCHITECTURE
						if(Constantes.ISUSAEJBLOGICLAYER) {
							
						} else if(Constantes.ISUSAEJBREMOTE ||Constantes.ISUSAEJBHOME) {
							
						}
						//ARCHITECTURE
						
						if(!this.configuracionpunvenSessionBean.getEsGuardarRelacionado()) {
							//QUITAR FILA TOTAL
							//ARCHITECTURE
							if(Constantes.ISUSAEJBLOGICLAYER) {
							
							} else if(Constantes.ISUSAEJBREMOTE ||Constantes.ISUSAEJBHOME) {
								
							}
							//ARCHITECTURE
							
							//ARCHITECTURE
							if(Constantes.ISUSAEJBLOGICLAYER) {
								configuracionpunvenLogic.saveConfiguracionPunVenRelaciones(configuracionpunvenAux);//WithConnection
								//configuracionpunvenLogic.getSetVersionRowConfiguracionPunVens();//WithConnection
							} else if(Constantes.ISUSAEJBREMOTE) {
							} else if(Constantes.ISUSAEJBHOME) {
							}
							//ARCHITECTURE
							
							//TALVEZ ESTA DEMAS POR SER UPDATE
							//POR BUG: EL OBJETO ACTUAL SE PERDIA, POR LO QUE SE GUARDA TAMBIEN VALORES EN AUX Y LUEGO DESPUES DEL MENSAJE SE HACE REFERENCIA EL OBJETO ACTUAL AL AUX
							this.bugActualizarReferenciaActual(this.configuracionpunven,configuracionpunvenAux);
					
							//ARCHITECTURE
							if(Constantes.ISUSAEJBLOGICLAYER) {
								
							} else if(Constantes.ISUSAEJBREMOTE ||Constantes.ISUSAEJBHOME) {
								
							}
							//ARCHITECTURE
						} else {
							
							
							
							//ARCHITECTURE
							if(Constantes.ISUSAEJBLOGICLAYER) {
								if(this.configuracionpunvenSessionBean.getEstaModoGuardarRelaciones() 
									|| this.configuracionpunvenSessionBean.getEsGuardarRelacionado())	{
									actualizarLista(configuracionpunvenAux,configuracionpunvenLogic.getConfiguracionPunVens());
								}
							} else if(Constantes.ISUSAEJBREMOTE||Constantes.ISUSAEJBHOME) {
								actualizarLista(configuracionpunvenAux,configuracionpunvens);
							}
							//ARCHITECTURE
							
							//AQUI EL ID NEGATIVO ES EL ID BUSCADO, YA QUE NO SE GENERA OTRO EN LA DB POR INGRESAR UNO NUEVO							
							//TALVEZ ESTA DEMAS POR SER UPDATE
							//POR BUG: EL OBJETO ACTUAL SE PERDIA, POR LO QUE SE GUARDA TAMBIEN VALORES EN AUX Y LUEGO DESPUES DEL MENSAJE SE HACE REFERENCIA EL OBJETO ACTUAL AL AUX
							//this.bugActualizarReferenciaActual(this.configuracionpunven,configuracionpunvenAux);
					
						}
					}
				}				
			} else if(maintenanceType==MaintenanceType.ELIMINAR) {
				configuracionpunvenAux=new  ConfiguracionPunVen();
				
				configuracionpunvenAux.setIsNew(false);
				configuracionpunvenAux.setIsChanged(false);
				
				configuracionpunvenAux.setIsDeleted(true);
				
				configuracionpunvenAux.setId(this.configuracionpunven.getId());	
				configuracionpunvenAux.setVersionRow(this.configuracionpunven.getVersionRow());	
				configuracionpunvenAux.setid_empresa(this.configuracionpunven.getid_empresa());	
				configuracionpunvenAux.setid_sucursal(this.configuracionpunven.getid_sucursal());	
				configuracionpunvenAux.setid_bodega(this.configuracionpunven.getid_bodega());	
				configuracionpunvenAux.setid_cuenta_contable_efectivo(this.configuracionpunven.getid_cuenta_contable_efectivo());	
				configuracionpunvenAux.setid_cuenta_contable_ice(this.configuracionpunven.getid_cuenta_contable_ice());	
				configuracionpunvenAux.setid_cuenta_contable_otros(this.configuracionpunven.getid_cuenta_contable_otros());	
				configuracionpunvenAux.setid_cliente_consumidor_final(this.configuracionpunven.getid_cliente_consumidor_final());	
				configuracionpunvenAux.setid_tipo_documento_factura(this.configuracionpunven.getid_tipo_documento_factura());	
				configuracionpunvenAux.setid_tipo_documento_nota_venta(this.configuracionpunven.getid_tipo_documento_nota_venta());	
				configuracionpunvenAux.setid_tipo_documento_nota_credito(this.configuracionpunven.getid_tipo_documento_nota_credito());	
				configuracionpunvenAux.setid_tipo_documento_tarjeta_credito(this.configuracionpunven.getid_tipo_documento_tarjeta_credito());	
				configuracionpunvenAux.setid_formato_factura(this.configuracionpunven.getid_formato_factura());	
				configuracionpunvenAux.setid_formato_nota_venta(this.configuracionpunven.getid_formato_nota_venta());	
				configuracionpunvenAux.setid_formato_nota_credito(this.configuracionpunven.getid_formato_nota_credito());	
				configuracionpunvenAux.setid_transaccion_factura(this.configuracionpunven.getid_transaccion_factura());	
				configuracionpunvenAux.setid_transaccion_nota_venta(this.configuracionpunven.getid_transaccion_nota_venta());	
				configuracionpunvenAux.setid_transaccion_nota_credito(this.configuracionpunven.getid_transaccion_nota_credito());	
				configuracionpunvenAux.setid_transaccion_cuenta_factura(this.configuracionpunven.getid_transaccion_cuenta_factura());	
				configuracionpunvenAux.setid_transaccion_cuenta_nota_venta(this.configuracionpunven.getid_transaccion_cuenta_nota_venta());	
				configuracionpunvenAux.setid_transaccion_cuenta_nota_credito(this.configuracionpunven.getid_transaccion_cuenta_nota_credito());	
				
				if(this.configuracionpunvenSessionBean.getEsGuardarRelacionado()) {
					//ELEMENTO ACTUAL NO SE HA INGRESADO AL SISTEMA, NO SE PUEDE ELIMINAR ALGO QUE NO EXISTE
					if(this.configuracionpunvenAux.getId()>=0) {	
						this.configuracionpunvensEliminados.add(configuracionpunvenAux);											
					}
				}
				
				//ARCHITECTURE
				if(Constantes.ISUSAEJBLOGICLAYER) {				
					actualizarLista(configuracionpunvenAux,configuracionpunvenLogic.getConfiguracionPunVens());
				} else if(Constantes.ISUSAEJBREMOTE||Constantes.ISUSAEJBHOME) {
					actualizarLista(configuracionpunvenAux,configuracionpunvens);
				}
				//ARCHITECTURE
				
				
				if(!isGuardarCambiosEnLote && !this.configuracionpunvenSessionBean.getEstaModoGuardarRelaciones() 
						&& !this.configuracionpunvenSessionBean.getEsGuardarRelacionado())	{
					
					//ARCHITECTURE
					if(Constantes.ISUSAEJBLOGICLAYER) {
						configuracionpunvenLogic.saveConfiguracionPunVens();//WithConnection
						//configuracionpunvenLogic.getSetVersionRowConfiguracionPunVens();//WithConnection
					} else if(Constantes.ISUSAEJBREMOTE) {
					} else if(Constantes.ISUSAEJBHOME) {
					}	
					//ARCHITECTURE
				} else {
					//CUANDO ES MANTENIMIENTO MAESTRO DETALLE
					if(this.configuracionpunvenSessionBean.getEstaModoGuardarRelaciones()) {
						//GUARDAR RELACIONES
						//ARCHITECTURE
						if(Constantes.ISUSAEJBLOGICLAYER) {
							
						} else if(Constantes.ISUSAEJBREMOTE ||Constantes.ISUSAEJBHOME) {
							
						}
						//ARCHITECTURE
						
						
						if(!this.configuracionpunvenSessionBean.getEsGuardarRelacionado()) {
							//QUITAR FILA TOTAL
							//ARCHITECTURE
							if(Constantes.ISUSAEJBLOGICLAYER) {
							
							} else if(Constantes.ISUSAEJBREMOTE ||Constantes.ISUSAEJBHOME) {
								
							}
							//ARCHITECTURE
							
							//ARCHITECTURE
							if(Constantes.ISUSAEJBLOGICLAYER) {
								configuracionpunvenLogic.saveConfiguracionPunVenRelaciones(configuracionpunvenAux);//WithConnection
								//configuracionpunvenLogic.getSetVersionRowConfiguracionPunVens();//WithConnection
							} else if(Constantes.ISUSAEJBREMOTE) {
							} else if(Constantes.ISUSAEJBHOME) {
							}
							//ARCHITECTURE
							
							//ARCHITECTURE
							if(Constantes.ISUSAEJBLOGICLAYER) {
								
							} else if(Constantes.ISUSAEJBREMOTE ||Constantes.ISUSAEJBHOME) {
								
							}
							//ARCHITECTURE
						}
					}  else {
							
						
								
						//ARCHITECTURE
						if(Constantes.ISUSAEJBLOGICLAYER) {
							if(this.configuracionpunvenSessionBean.getEstaModoGuardarRelaciones() 
								|| this.configuracionpunvenSessionBean.getEsGuardarRelacionado())	{
								actualizarLista(configuracionpunvenAux,configuracionpunvenLogic.getConfiguracionPunVens());
							}
						} else if(Constantes.ISUSAEJBREMOTE||Constantes.ISUSAEJBHOME) {
							actualizarLista(configuracionpunvenAux,configuracionpunvens);
						}
						//ARCHITECTURE
					}
				}				
			} else if(maintenanceType==MaintenanceType.GUARDARCAMBIOS) {		
				
				//ARCHITECTURE
				if(Constantes.ISUSAEJBLOGICLAYER) {
					this.configuracionpunvenLogic.getConfiguracionPunVens().addAll(this.configuracionpunvensEliminados);
					
					configuracionpunvenLogic.saveConfiguracionPunVens();//WithConnection
					//configuracionpunvenLogic.getSetVersionRowConfiguracionPunVens();//WithConnection
				} else if(Constantes.ISUSAEJBREMOTE) {
				} else if(Constantes.ISUSAEJBHOME) {
				}	
				//ARCHITECTURE
				this.refrescarForeignKeysDescripcionesConfiguracionPunVen();
				
				this.configuracionpunvensEliminados= new ArrayList<ConfiguracionPunVen>();		
			}
			
			if(this.configuracionpunvenSessionBean.getEsGuardarRelacionado()) {
				 this.crearFilaTotales();
			}
			
			
									
			if(this.parametroGeneralUsuario.getcon_mensaje_confirmacion() && !this.configuracionpunvenSessionBean.getEsGuardarRelacionado()) {//Constantes.ISMOSTRARMENSAJESMANTENIMIENTO && 
				if(!this.isPostAccionSinMensaje) {
					JOptionPane.showMessageDialog(this,"Configuracion Pun Ven GUARDADO CORRECTAMENTE","MANTENIMIENTO DE Configuracion Pun Ven",JOptionPane.INFORMATION_MESSAGE);
					if(maintenanceType==MaintenanceType.NUEVO || maintenanceType==MaintenanceType.ACTUALIZAR) {
						//CUANDO ES NUEVO SE PIERDE REFERENCIA NO SE PORQUE
						this.configuracionpunven=configuracionpunvenAux;
					}
				}
			}
			
			this.isErrorGuardar=false;
			
			this.inicializarInvalidValues();
		/*
		} else {
			this.mostrarInvalidValues();	
		}
		*/
			
		} catch(Exception e) {
			this.isErrorGuardar=true;
			
			this.crearFilaTotales();
			
			throw e;
		} finally {
      		//this.finishProcessConfiguracionPunVen();
      	}
		
	}	
	
	public void actualizarRelaciones(ConfiguracionPunVen configuracionpunvenLocal) throws Exception {
		
		if(this.configuracionpunvenSessionBean.getConGuardarRelaciones()) {			
			
			if(Constantes.ISUSAEJBLOGICLAYER) {
			
			
			} else {
				
			}
		}
	}
	
	public void actualizarRelacionFkPadreActual(ConfiguracionPunVen configuracionpunvenLocal) throws Exception {	
		if(this.configuracionpunvenSessionBean.getEsGuardarRelacionado()) {			
			
		
			if(this.jInternalFrameParent.getClass().equals(EmpresaDetalleFormJInternalFrame.class)) {
				EmpresaBeanSwingJInternalFrame empresaBeanSwingJInternalFrameLocal=(EmpresaBeanSwingJInternalFrame) ((EmpresaDetalleFormJInternalFrame) this.jInternalFrameParent).jInternalFrameParent;

				empresaBeanSwingJInternalFrameLocal.setVariablesFormularioToObjetoActualTodoEmpresa(empresaBeanSwingJInternalFrameLocal.getempresa(),true);
				empresaBeanSwingJInternalFrameLocal.actualizarLista(empresaBeanSwingJInternalFrameLocal.empresa,this.empresasForeignKey);

				empresaBeanSwingJInternalFrameLocal.actualizarRelaciones(empresaBeanSwingJInternalFrameLocal.empresa);

				configuracionpunvenLocal.setEmpresa(empresaBeanSwingJInternalFrameLocal.empresa);

				this.addItemDefectoCombosForeignKeyEmpresa();
				this.cargarCombosFrameEmpresasForeignKey("Formulario");
				this.setActualEmpresaForeignKey(empresaBeanSwingJInternalFrameLocal.empresa.getId(),false,"Formulario");
			}
			 else if(this.jInternalFrameParent.getClass().equals(SucursalDetalleFormJInternalFrame.class)) {
				SucursalBeanSwingJInternalFrame sucursalBeanSwingJInternalFrameLocal=(SucursalBeanSwingJInternalFrame) ((SucursalDetalleFormJInternalFrame) this.jInternalFrameParent).jInternalFrameParent;

				sucursalBeanSwingJInternalFrameLocal.setVariablesFormularioToObjetoActualTodoSucursal(sucursalBeanSwingJInternalFrameLocal.getsucursal(),true);
				sucursalBeanSwingJInternalFrameLocal.actualizarLista(sucursalBeanSwingJInternalFrameLocal.sucursal,this.sucursalsForeignKey);

				sucursalBeanSwingJInternalFrameLocal.actualizarRelaciones(sucursalBeanSwingJInternalFrameLocal.sucursal);

				configuracionpunvenLocal.setSucursal(sucursalBeanSwingJInternalFrameLocal.sucursal);

				this.addItemDefectoCombosForeignKeySucursal();
				this.cargarCombosFrameSucursalsForeignKey("Formulario");
				this.setActualSucursalForeignKey(sucursalBeanSwingJInternalFrameLocal.sucursal.getId(),false,"Formulario");
			}
			 else if(this.jInternalFrameParent.getClass().equals(BodegaDetalleFormJInternalFrame.class)) {
				BodegaBeanSwingJInternalFrame bodegaBeanSwingJInternalFrameLocal=(BodegaBeanSwingJInternalFrame) ((BodegaDetalleFormJInternalFrame) this.jInternalFrameParent).jInternalFrameParent;

				bodegaBeanSwingJInternalFrameLocal.setVariablesFormularioToObjetoActualTodoBodega(bodegaBeanSwingJInternalFrameLocal.getbodega(),true);
				bodegaBeanSwingJInternalFrameLocal.actualizarLista(bodegaBeanSwingJInternalFrameLocal.bodega,this.bodegasForeignKey);

				bodegaBeanSwingJInternalFrameLocal.actualizarRelaciones(bodegaBeanSwingJInternalFrameLocal.bodega);

				configuracionpunvenLocal.setBodega(bodegaBeanSwingJInternalFrameLocal.bodega);

				this.addItemDefectoCombosForeignKeyBodega();
				this.cargarCombosFrameBodegasForeignKey("Formulario");
				this.setActualBodegaForeignKey(bodegaBeanSwingJInternalFrameLocal.bodega.getId(),false,"Formulario");
			}
			 else if(this.jInternalFrameParent.getClass().equals(CuentaContableDetalleFormJInternalFrame.class)) {
				CuentaContableBeanSwingJInternalFrame cuentacontableefectivoBeanSwingJInternalFrameLocal=(CuentaContableBeanSwingJInternalFrame) ((CuentaContableDetalleFormJInternalFrame) this.jInternalFrameParent).jInternalFrameParent;

				cuentacontableefectivoBeanSwingJInternalFrameLocal.setVariablesFormularioToObjetoActualTodoCuentaContable(cuentacontableefectivoBeanSwingJInternalFrameLocal.getcuentacontable(),true);
				cuentacontableefectivoBeanSwingJInternalFrameLocal.actualizarLista(cuentacontableefectivoBeanSwingJInternalFrameLocal.cuentacontable,this.cuentacontableefectivosForeignKey);

				cuentacontableefectivoBeanSwingJInternalFrameLocal.actualizarRelaciones(cuentacontableefectivoBeanSwingJInternalFrameLocal.cuentacontable);

				configuracionpunvenLocal.setCuentaContableEfectivo(cuentacontableefectivoBeanSwingJInternalFrameLocal.cuentacontable);

				this.addItemDefectoCombosForeignKeyCuentaContableEfectivo();
				this.cargarCombosFrameCuentaContableEfectivosForeignKey("Formulario");
				this.setActualCuentaContableEfectivoForeignKey(cuentacontableefectivoBeanSwingJInternalFrameLocal.cuentacontable.getId(),false,"Formulario");
			}
			 else if(this.jInternalFrameParent.getClass().equals(CuentaContableDetalleFormJInternalFrame.class)) {
				CuentaContableBeanSwingJInternalFrame cuentacontableiceBeanSwingJInternalFrameLocal=(CuentaContableBeanSwingJInternalFrame) ((CuentaContableDetalleFormJInternalFrame) this.jInternalFrameParent).jInternalFrameParent;

				cuentacontableiceBeanSwingJInternalFrameLocal.setVariablesFormularioToObjetoActualTodoCuentaContable(cuentacontableiceBeanSwingJInternalFrameLocal.getcuentacontable(),true);
				cuentacontableiceBeanSwingJInternalFrameLocal.actualizarLista(cuentacontableiceBeanSwingJInternalFrameLocal.cuentacontable,this.cuentacontableicesForeignKey);

				cuentacontableiceBeanSwingJInternalFrameLocal.actualizarRelaciones(cuentacontableiceBeanSwingJInternalFrameLocal.cuentacontable);

				configuracionpunvenLocal.setCuentaContableIce(cuentacontableiceBeanSwingJInternalFrameLocal.cuentacontable);

				this.addItemDefectoCombosForeignKeyCuentaContableIce();
				this.cargarCombosFrameCuentaContableIcesForeignKey("Formulario");
				this.setActualCuentaContableIceForeignKey(cuentacontableiceBeanSwingJInternalFrameLocal.cuentacontable.getId(),false,"Formulario");
			}
			 else if(this.jInternalFrameParent.getClass().equals(CuentaContableDetalleFormJInternalFrame.class)) {
				CuentaContableBeanSwingJInternalFrame cuentacontableotrosBeanSwingJInternalFrameLocal=(CuentaContableBeanSwingJInternalFrame) ((CuentaContableDetalleFormJInternalFrame) this.jInternalFrameParent).jInternalFrameParent;

				cuentacontableotrosBeanSwingJInternalFrameLocal.setVariablesFormularioToObjetoActualTodoCuentaContable(cuentacontableotrosBeanSwingJInternalFrameLocal.getcuentacontable(),true);
				cuentacontableotrosBeanSwingJInternalFrameLocal.actualizarLista(cuentacontableotrosBeanSwingJInternalFrameLocal.cuentacontable,this.cuentacontableotrossForeignKey);

				cuentacontableotrosBeanSwingJInternalFrameLocal.actualizarRelaciones(cuentacontableotrosBeanSwingJInternalFrameLocal.cuentacontable);

				configuracionpunvenLocal.setCuentaContableOtros(cuentacontableotrosBeanSwingJInternalFrameLocal.cuentacontable);

				this.addItemDefectoCombosForeignKeyCuentaContableOtros();
				this.cargarCombosFrameCuentaContableOtrossForeignKey("Formulario");
				this.setActualCuentaContableOtrosForeignKey(cuentacontableotrosBeanSwingJInternalFrameLocal.cuentacontable.getId(),false,"Formulario");
			}
			 else if(this.jInternalFrameParent.getClass().equals(ClienteDetalleFormJInternalFrame.class)) {
				ClienteBeanSwingJInternalFrame clienteconsumidorfinalBeanSwingJInternalFrameLocal=(ClienteBeanSwingJInternalFrame) ((ClienteDetalleFormJInternalFrame) this.jInternalFrameParent).jInternalFrameParent;

				clienteconsumidorfinalBeanSwingJInternalFrameLocal.setVariablesFormularioToObjetoActualTodoCliente(clienteconsumidorfinalBeanSwingJInternalFrameLocal.getcliente(),true);
				clienteconsumidorfinalBeanSwingJInternalFrameLocal.actualizarLista(clienteconsumidorfinalBeanSwingJInternalFrameLocal.cliente,this.clienteconsumidorfinalsForeignKey);

				clienteconsumidorfinalBeanSwingJInternalFrameLocal.actualizarRelaciones(clienteconsumidorfinalBeanSwingJInternalFrameLocal.cliente);

				configuracionpunvenLocal.setClienteConsumidorFinal(clienteconsumidorfinalBeanSwingJInternalFrameLocal.cliente);

				this.addItemDefectoCombosForeignKeyClienteConsumidorFinal();
				this.cargarCombosFrameClienteConsumidorFinalsForeignKey("Formulario");
				this.setActualClienteConsumidorFinalForeignKey(clienteconsumidorfinalBeanSwingJInternalFrameLocal.cliente.getId(),false,"Formulario");
			}
			 else if(this.jInternalFrameParent.getClass().equals(TipoDocumentoDetalleFormJInternalFrame.class)) {
				TipoDocumentoBeanSwingJInternalFrame tipodocumentofacturaBeanSwingJInternalFrameLocal=(TipoDocumentoBeanSwingJInternalFrame) ((TipoDocumentoDetalleFormJInternalFrame) this.jInternalFrameParent).jInternalFrameParent;

				tipodocumentofacturaBeanSwingJInternalFrameLocal.setVariablesFormularioToObjetoActualTodoTipoDocumento(tipodocumentofacturaBeanSwingJInternalFrameLocal.gettipodocumento(),true);
				tipodocumentofacturaBeanSwingJInternalFrameLocal.actualizarLista(tipodocumentofacturaBeanSwingJInternalFrameLocal.tipodocumento,this.tipodocumentofacturasForeignKey);

				tipodocumentofacturaBeanSwingJInternalFrameLocal.actualizarRelaciones(tipodocumentofacturaBeanSwingJInternalFrameLocal.tipodocumento);

				configuracionpunvenLocal.setTipoDocumentoFactura(tipodocumentofacturaBeanSwingJInternalFrameLocal.tipodocumento);

				this.addItemDefectoCombosForeignKeyTipoDocumentoFactura();
				this.cargarCombosFrameTipoDocumentoFacturasForeignKey("Formulario");
				this.setActualTipoDocumentoFacturaForeignKey(tipodocumentofacturaBeanSwingJInternalFrameLocal.tipodocumento.getId(),false,"Formulario");
			}
			 else if(this.jInternalFrameParent.getClass().equals(TipoDocumentoDetalleFormJInternalFrame.class)) {
				TipoDocumentoBeanSwingJInternalFrame tipodocumentonotaventaBeanSwingJInternalFrameLocal=(TipoDocumentoBeanSwingJInternalFrame) ((TipoDocumentoDetalleFormJInternalFrame) this.jInternalFrameParent).jInternalFrameParent;

				tipodocumentonotaventaBeanSwingJInternalFrameLocal.setVariablesFormularioToObjetoActualTodoTipoDocumento(tipodocumentonotaventaBeanSwingJInternalFrameLocal.gettipodocumento(),true);
				tipodocumentonotaventaBeanSwingJInternalFrameLocal.actualizarLista(tipodocumentonotaventaBeanSwingJInternalFrameLocal.tipodocumento,this.tipodocumentonotaventasForeignKey);

				tipodocumentonotaventaBeanSwingJInternalFrameLocal.actualizarRelaciones(tipodocumentonotaventaBeanSwingJInternalFrameLocal.tipodocumento);

				configuracionpunvenLocal.setTipoDocumentoNotaVenta(tipodocumentonotaventaBeanSwingJInternalFrameLocal.tipodocumento);

				this.addItemDefectoCombosForeignKeyTipoDocumentoNotaVenta();
				this.cargarCombosFrameTipoDocumentoNotaVentasForeignKey("Formulario");
				this.setActualTipoDocumentoNotaVentaForeignKey(tipodocumentonotaventaBeanSwingJInternalFrameLocal.tipodocumento.getId(),false,"Formulario");
			}
			 else if(this.jInternalFrameParent.getClass().equals(TipoDocumentoDetalleFormJInternalFrame.class)) {
				TipoDocumentoBeanSwingJInternalFrame tipodocumentonotacreditoBeanSwingJInternalFrameLocal=(TipoDocumentoBeanSwingJInternalFrame) ((TipoDocumentoDetalleFormJInternalFrame) this.jInternalFrameParent).jInternalFrameParent;

				tipodocumentonotacreditoBeanSwingJInternalFrameLocal.setVariablesFormularioToObjetoActualTodoTipoDocumento(tipodocumentonotacreditoBeanSwingJInternalFrameLocal.gettipodocumento(),true);
				tipodocumentonotacreditoBeanSwingJInternalFrameLocal.actualizarLista(tipodocumentonotacreditoBeanSwingJInternalFrameLocal.tipodocumento,this.tipodocumentonotacreditosForeignKey);

				tipodocumentonotacreditoBeanSwingJInternalFrameLocal.actualizarRelaciones(tipodocumentonotacreditoBeanSwingJInternalFrameLocal.tipodocumento);

				configuracionpunvenLocal.setTipoDocumentoNotaCredito(tipodocumentonotacreditoBeanSwingJInternalFrameLocal.tipodocumento);

				this.addItemDefectoCombosForeignKeyTipoDocumentoNotaCredito();
				this.cargarCombosFrameTipoDocumentoNotaCreditosForeignKey("Formulario");
				this.setActualTipoDocumentoNotaCreditoForeignKey(tipodocumentonotacreditoBeanSwingJInternalFrameLocal.tipodocumento.getId(),false,"Formulario");
			}
			 else if(this.jInternalFrameParent.getClass().equals(TipoDocumentoDetalleFormJInternalFrame.class)) {
				TipoDocumentoBeanSwingJInternalFrame tipodocumentotarjetacreditoBeanSwingJInternalFrameLocal=(TipoDocumentoBeanSwingJInternalFrame) ((TipoDocumentoDetalleFormJInternalFrame) this.jInternalFrameParent).jInternalFrameParent;

				tipodocumentotarjetacreditoBeanSwingJInternalFrameLocal.setVariablesFormularioToObjetoActualTodoTipoDocumento(tipodocumentotarjetacreditoBeanSwingJInternalFrameLocal.gettipodocumento(),true);
				tipodocumentotarjetacreditoBeanSwingJInternalFrameLocal.actualizarLista(tipodocumentotarjetacreditoBeanSwingJInternalFrameLocal.tipodocumento,this.tipodocumentotarjetacreditosForeignKey);

				tipodocumentotarjetacreditoBeanSwingJInternalFrameLocal.actualizarRelaciones(tipodocumentotarjetacreditoBeanSwingJInternalFrameLocal.tipodocumento);

				configuracionpunvenLocal.setTipoDocumentoTarjetaCredito(tipodocumentotarjetacreditoBeanSwingJInternalFrameLocal.tipodocumento);

				this.addItemDefectoCombosForeignKeyTipoDocumentoTarjetaCredito();
				this.cargarCombosFrameTipoDocumentoTarjetaCreditosForeignKey("Formulario");
				this.setActualTipoDocumentoTarjetaCreditoForeignKey(tipodocumentotarjetacreditoBeanSwingJInternalFrameLocal.tipodocumento.getId(),false,"Formulario");
			}
			 else if(this.jInternalFrameParent.getClass().equals(FormatoDetalleFormJInternalFrame.class)) {
				FormatoBeanSwingJInternalFrame formatofacturaBeanSwingJInternalFrameLocal=(FormatoBeanSwingJInternalFrame) ((FormatoDetalleFormJInternalFrame) this.jInternalFrameParent).jInternalFrameParent;

				formatofacturaBeanSwingJInternalFrameLocal.setVariablesFormularioToObjetoActualTodoFormato(formatofacturaBeanSwingJInternalFrameLocal.getformato(),true);
				formatofacturaBeanSwingJInternalFrameLocal.actualizarLista(formatofacturaBeanSwingJInternalFrameLocal.formato,this.formatofacturasForeignKey);

				formatofacturaBeanSwingJInternalFrameLocal.actualizarRelaciones(formatofacturaBeanSwingJInternalFrameLocal.formato);

				configuracionpunvenLocal.setFormatoFactura(formatofacturaBeanSwingJInternalFrameLocal.formato);

				this.addItemDefectoCombosForeignKeyFormatoFactura();
				this.cargarCombosFrameFormatoFacturasForeignKey("Formulario");
				this.setActualFormatoFacturaForeignKey(formatofacturaBeanSwingJInternalFrameLocal.formato.getId(),false,"Formulario");
			}
			 else if(this.jInternalFrameParent.getClass().equals(FormatoDetalleFormJInternalFrame.class)) {
				FormatoBeanSwingJInternalFrame formatonotaventaBeanSwingJInternalFrameLocal=(FormatoBeanSwingJInternalFrame) ((FormatoDetalleFormJInternalFrame) this.jInternalFrameParent).jInternalFrameParent;

				formatonotaventaBeanSwingJInternalFrameLocal.setVariablesFormularioToObjetoActualTodoFormato(formatonotaventaBeanSwingJInternalFrameLocal.getformato(),true);
				formatonotaventaBeanSwingJInternalFrameLocal.actualizarLista(formatonotaventaBeanSwingJInternalFrameLocal.formato,this.formatonotaventasForeignKey);

				formatonotaventaBeanSwingJInternalFrameLocal.actualizarRelaciones(formatonotaventaBeanSwingJInternalFrameLocal.formato);

				configuracionpunvenLocal.setFormatoNotaVenta(formatonotaventaBeanSwingJInternalFrameLocal.formato);

				this.addItemDefectoCombosForeignKeyFormatoNotaVenta();
				this.cargarCombosFrameFormatoNotaVentasForeignKey("Formulario");
				this.setActualFormatoNotaVentaForeignKey(formatonotaventaBeanSwingJInternalFrameLocal.formato.getId(),false,"Formulario");
			}
			 else if(this.jInternalFrameParent.getClass().equals(FormatoDetalleFormJInternalFrame.class)) {
				FormatoBeanSwingJInternalFrame formatonotacreditoBeanSwingJInternalFrameLocal=(FormatoBeanSwingJInternalFrame) ((FormatoDetalleFormJInternalFrame) this.jInternalFrameParent).jInternalFrameParent;

				formatonotacreditoBeanSwingJInternalFrameLocal.setVariablesFormularioToObjetoActualTodoFormato(formatonotacreditoBeanSwingJInternalFrameLocal.getformato(),true);
				formatonotacreditoBeanSwingJInternalFrameLocal.actualizarLista(formatonotacreditoBeanSwingJInternalFrameLocal.formato,this.formatonotacreditosForeignKey);

				formatonotacreditoBeanSwingJInternalFrameLocal.actualizarRelaciones(formatonotacreditoBeanSwingJInternalFrameLocal.formato);

				configuracionpunvenLocal.setFormatoNotaCredito(formatonotacreditoBeanSwingJInternalFrameLocal.formato);

				this.addItemDefectoCombosForeignKeyFormatoNotaCredito();
				this.cargarCombosFrameFormatoNotaCreditosForeignKey("Formulario");
				this.setActualFormatoNotaCreditoForeignKey(formatonotacreditoBeanSwingJInternalFrameLocal.formato.getId(),false,"Formulario");
			}
			 else if(this.jInternalFrameParent.getClass().equals(TransaccionDetalleFormJInternalFrame.class)) {
				TransaccionBeanSwingJInternalFrame transaccionfacturaBeanSwingJInternalFrameLocal=(TransaccionBeanSwingJInternalFrame) ((TransaccionDetalleFormJInternalFrame) this.jInternalFrameParent).jInternalFrameParent;

				transaccionfacturaBeanSwingJInternalFrameLocal.setVariablesFormularioToObjetoActualTodoTransaccion(transaccionfacturaBeanSwingJInternalFrameLocal.gettransaccion(),true);
				transaccionfacturaBeanSwingJInternalFrameLocal.actualizarLista(transaccionfacturaBeanSwingJInternalFrameLocal.transaccion,this.transaccionfacturasForeignKey);

				transaccionfacturaBeanSwingJInternalFrameLocal.actualizarRelaciones(transaccionfacturaBeanSwingJInternalFrameLocal.transaccion);

				configuracionpunvenLocal.setTransaccionFactura(transaccionfacturaBeanSwingJInternalFrameLocal.transaccion);

				this.addItemDefectoCombosForeignKeyTransaccionFactura();
				this.cargarCombosFrameTransaccionFacturasForeignKey("Formulario");
				this.setActualTransaccionFacturaForeignKey(transaccionfacturaBeanSwingJInternalFrameLocal.transaccion.getId(),false,"Formulario");
			}
			 else if(this.jInternalFrameParent.getClass().equals(TransaccionDetalleFormJInternalFrame.class)) {
				TransaccionBeanSwingJInternalFrame transaccionnotaventaBeanSwingJInternalFrameLocal=(TransaccionBeanSwingJInternalFrame) ((TransaccionDetalleFormJInternalFrame) this.jInternalFrameParent).jInternalFrameParent;

				transaccionnotaventaBeanSwingJInternalFrameLocal.setVariablesFormularioToObjetoActualTodoTransaccion(transaccionnotaventaBeanSwingJInternalFrameLocal.gettransaccion(),true);
				transaccionnotaventaBeanSwingJInternalFrameLocal.actualizarLista(transaccionnotaventaBeanSwingJInternalFrameLocal.transaccion,this.transaccionnotaventasForeignKey);

				transaccionnotaventaBeanSwingJInternalFrameLocal.actualizarRelaciones(transaccionnotaventaBeanSwingJInternalFrameLocal.transaccion);

				configuracionpunvenLocal.setTransaccionNotaVenta(transaccionnotaventaBeanSwingJInternalFrameLocal.transaccion);

				this.addItemDefectoCombosForeignKeyTransaccionNotaVenta();
				this.cargarCombosFrameTransaccionNotaVentasForeignKey("Formulario");
				this.setActualTransaccionNotaVentaForeignKey(transaccionnotaventaBeanSwingJInternalFrameLocal.transaccion.getId(),false,"Formulario");
			}
			 else if(this.jInternalFrameParent.getClass().equals(TransaccionDetalleFormJInternalFrame.class)) {
				TransaccionBeanSwingJInternalFrame transaccionnotacreditoBeanSwingJInternalFrameLocal=(TransaccionBeanSwingJInternalFrame) ((TransaccionDetalleFormJInternalFrame) this.jInternalFrameParent).jInternalFrameParent;

				transaccionnotacreditoBeanSwingJInternalFrameLocal.setVariablesFormularioToObjetoActualTodoTransaccion(transaccionnotacreditoBeanSwingJInternalFrameLocal.gettransaccion(),true);
				transaccionnotacreditoBeanSwingJInternalFrameLocal.actualizarLista(transaccionnotacreditoBeanSwingJInternalFrameLocal.transaccion,this.transaccionnotacreditosForeignKey);

				transaccionnotacreditoBeanSwingJInternalFrameLocal.actualizarRelaciones(transaccionnotacreditoBeanSwingJInternalFrameLocal.transaccion);

				configuracionpunvenLocal.setTransaccionNotaCredito(transaccionnotacreditoBeanSwingJInternalFrameLocal.transaccion);

				this.addItemDefectoCombosForeignKeyTransaccionNotaCredito();
				this.cargarCombosFrameTransaccionNotaCreditosForeignKey("Formulario");
				this.setActualTransaccionNotaCreditoForeignKey(transaccionnotacreditoBeanSwingJInternalFrameLocal.transaccion.getId(),false,"Formulario");
			}
			 else if(this.jInternalFrameParent.getClass().equals(TransaccionDetalleFormJInternalFrame.class)) {
				TransaccionBeanSwingJInternalFrame transaccioncuentafacturaBeanSwingJInternalFrameLocal=(TransaccionBeanSwingJInternalFrame) ((TransaccionDetalleFormJInternalFrame) this.jInternalFrameParent).jInternalFrameParent;

				transaccioncuentafacturaBeanSwingJInternalFrameLocal.setVariablesFormularioToObjetoActualTodoTransaccion(transaccioncuentafacturaBeanSwingJInternalFrameLocal.gettransaccion(),true);
				transaccioncuentafacturaBeanSwingJInternalFrameLocal.actualizarLista(transaccioncuentafacturaBeanSwingJInternalFrameLocal.transaccion,this.transaccioncuentafacturasForeignKey);

				transaccioncuentafacturaBeanSwingJInternalFrameLocal.actualizarRelaciones(transaccioncuentafacturaBeanSwingJInternalFrameLocal.transaccion);

				configuracionpunvenLocal.setTransaccionCuentaFactura(transaccioncuentafacturaBeanSwingJInternalFrameLocal.transaccion);

				this.addItemDefectoCombosForeignKeyTransaccionCuentaFactura();
				this.cargarCombosFrameTransaccionCuentaFacturasForeignKey("Formulario");
				this.setActualTransaccionCuentaFacturaForeignKey(transaccioncuentafacturaBeanSwingJInternalFrameLocal.transaccion.getId(),false,"Formulario");
			}
			 else if(this.jInternalFrameParent.getClass().equals(TransaccionDetalleFormJInternalFrame.class)) {
				TransaccionBeanSwingJInternalFrame transaccioncuentanotaventaBeanSwingJInternalFrameLocal=(TransaccionBeanSwingJInternalFrame) ((TransaccionDetalleFormJInternalFrame) this.jInternalFrameParent).jInternalFrameParent;

				transaccioncuentanotaventaBeanSwingJInternalFrameLocal.setVariablesFormularioToObjetoActualTodoTransaccion(transaccioncuentanotaventaBeanSwingJInternalFrameLocal.gettransaccion(),true);
				transaccioncuentanotaventaBeanSwingJInternalFrameLocal.actualizarLista(transaccioncuentanotaventaBeanSwingJInternalFrameLocal.transaccion,this.transaccioncuentanotaventasForeignKey);

				transaccioncuentanotaventaBeanSwingJInternalFrameLocal.actualizarRelaciones(transaccioncuentanotaventaBeanSwingJInternalFrameLocal.transaccion);

				configuracionpunvenLocal.setTransaccionCuentaNotaVenta(transaccioncuentanotaventaBeanSwingJInternalFrameLocal.transaccion);

				this.addItemDefectoCombosForeignKeyTransaccionCuentaNotaVenta();
				this.cargarCombosFrameTransaccionCuentaNotaVentasForeignKey("Formulario");
				this.setActualTransaccionCuentaNotaVentaForeignKey(transaccioncuentanotaventaBeanSwingJInternalFrameLocal.transaccion.getId(),false,"Formulario");
			}
			 else if(this.jInternalFrameParent.getClass().equals(TransaccionDetalleFormJInternalFrame.class)) {
				TransaccionBeanSwingJInternalFrame transaccioncuentanotacreditoBeanSwingJInternalFrameLocal=(TransaccionBeanSwingJInternalFrame) ((TransaccionDetalleFormJInternalFrame) this.jInternalFrameParent).jInternalFrameParent;

				transaccioncuentanotacreditoBeanSwingJInternalFrameLocal.setVariablesFormularioToObjetoActualTodoTransaccion(transaccioncuentanotacreditoBeanSwingJInternalFrameLocal.gettransaccion(),true);
				transaccioncuentanotacreditoBeanSwingJInternalFrameLocal.actualizarLista(transaccioncuentanotacreditoBeanSwingJInternalFrameLocal.transaccion,this.transaccioncuentanotacreditosForeignKey);

				transaccioncuentanotacreditoBeanSwingJInternalFrameLocal.actualizarRelaciones(transaccioncuentanotacreditoBeanSwingJInternalFrameLocal.transaccion);

				configuracionpunvenLocal.setTransaccionCuentaNotaCredito(transaccioncuentanotacreditoBeanSwingJInternalFrameLocal.transaccion);

				this.addItemDefectoCombosForeignKeyTransaccionCuentaNotaCredito();
				this.cargarCombosFrameTransaccionCuentaNotaCreditosForeignKey("Formulario");
				this.setActualTransaccionCuentaNotaCreditoForeignKey(transaccioncuentanotacreditoBeanSwingJInternalFrameLocal.transaccion.getId(),false,"Formulario");
			}
		
		}
	}
	
	public Boolean validarConfiguracionPunVenActual() throws Exception {
		Boolean estaValidado=false;
		this.inicializarInvalidValues();
		
		/*
		int intSelectedRow = this.jTableDatosConfiguracionPunVen.getSelectedRow();
				
		//ARCHITECTURE
		if(Constantes.ISUSAEJBLOGICLAYER) {
			this.configuracionpunven =(ConfiguracionPunVen) this.configuracionpunvenLogic.getConfiguracionPunVens().toArray()[this.jTableDatosConfiguracionPunVen.convertRowIndexToModel(intSelectedRow)];
		} else if(Constantes.ISUSAEJBREMOTE ||Constantes.ISUSAEJBHOME) {
			this.configuracionpunven =(ConfiguracionPunVen) this.configuracionpunvens.toArray()[this.jTableDatosConfiguracionPunVen.convertRowIndexToModel(intSelectedRow)];
		}
		//ARCHITECTURE
		*/
		
		this.invalidValues = configuracionpunvenValidator.getInvalidValues(this.configuracionpunven);
					
		if(this.invalidValues==null || this.invalidValues.length<=0) {
			estaValidado=true;
		} else {
			this.mostrarInvalidValues();	
		}
		
		return estaValidado;
	}
	
	public void actualizarLista(ConfiguracionPunVen configuracionpunven,List<ConfiguracionPunVen> configuracionpunvens) throws Exception {
		try	{		
			ConfiguracionPunVenConstantesFunciones.actualizarLista(configuracionpunven,configuracionpunvens,this.configuracionpunvenSessionBean.getEsGuardarRelacionado());		
		} catch(Exception e) {
			throw e;
		}
	}		
	
	public void actualizarSelectedLista(ConfiguracionPunVen configuracionpunven,List<ConfiguracionPunVen> configuracionpunvens) throws Exception {
		try	{			
			ConfiguracionPunVenConstantesFunciones.actualizarSelectedLista(configuracionpunven,configuracionpunvens);
		} catch(Exception e) {
			throw e;
		}
	}	
	
	public Boolean tieneElementosSeleccionados() throws Exception {
		Boolean tiene=false;
		
		List<ConfiguracionPunVen> configuracionpunvensLocal=null;
		
		try	{			
			//ARCHITECTURE
			if(Constantes.ISUSAEJBLOGICLAYER) {
				configuracionpunvensLocal=this.configuracionpunvenLogic.getConfiguracionPunVens();
			} else if(Constantes.ISUSAEJBREMOTE || Constantes.ISUSAEJBHOME) {
				configuracionpunvensLocal=this.configuracionpunvens;
			}
			//ARCHITECTURE
		
			for(ConfiguracionPunVen configuracionpunvenLocal:configuracionpunvensLocal) {
				if(this.permiteMantenimiento(configuracionpunvenLocal) && configuracionpunvenLocal.getIsSelected()) {
					tiene=true;
					break;
				}
			}
		} catch(Exception e) {
			throw e;
		}
		
		return tiene;
	}			
	
	public void mostrarInvalidValues() throws Exception {
		String sMensaje="";
				
		for (InvalidValue invalidValue : this.invalidValues) {
			sMensaje+="\r\n"+ConfiguracionPunVenConstantesFunciones.getConfiguracionPunVenLabelDesdeNombre(invalidValue.getPropertyName())+"->"+invalidValue.getMessage();
			
			//MOSTRAR CAMPOS INVALIDOS
			if(invalidValue.getPropertyName().equals(ConfiguracionPunVenConstantesFunciones.IDEMPRESA)) {FuncionesSwing.mostrarCampoMensajeInvalido(false,this.jInternalFrameDetalleFormConfiguracionPunVen.jLabelid_empresaConfiguracionPunVen,invalidValue.getMessage());}
			if(invalidValue.getPropertyName().equals(ConfiguracionPunVenConstantesFunciones.IDSUCURSAL)) {FuncionesSwing.mostrarCampoMensajeInvalido(false,this.jInternalFrameDetalleFormConfiguracionPunVen.jLabelid_sucursalConfiguracionPunVen,invalidValue.getMessage());}
			if(invalidValue.getPropertyName().equals(ConfiguracionPunVenConstantesFunciones.IDBODEGA)) {FuncionesSwing.mostrarCampoMensajeInvalido(false,this.jInternalFrameDetalleFormConfiguracionPunVen.jLabelid_bodegaConfiguracionPunVen,invalidValue.getMessage());}
			if(invalidValue.getPropertyName().equals(ConfiguracionPunVenConstantesFunciones.IDCUENTACONTABLEEFECTIVO)) {FuncionesSwing.mostrarCampoMensajeInvalido(false,this.jInternalFrameDetalleFormConfiguracionPunVen.jLabelid_cuenta_contable_efectivoConfiguracionPunVen,invalidValue.getMessage());}
			if(invalidValue.getPropertyName().equals(ConfiguracionPunVenConstantesFunciones.IDCUENTACONTABLEICE)) {FuncionesSwing.mostrarCampoMensajeInvalido(false,this.jInternalFrameDetalleFormConfiguracionPunVen.jLabelid_cuenta_contable_iceConfiguracionPunVen,invalidValue.getMessage());}
			if(invalidValue.getPropertyName().equals(ConfiguracionPunVenConstantesFunciones.IDCUENTACONTABLEOTROS)) {FuncionesSwing.mostrarCampoMensajeInvalido(false,this.jInternalFrameDetalleFormConfiguracionPunVen.jLabelid_cuenta_contable_otrosConfiguracionPunVen,invalidValue.getMessage());}
			if(invalidValue.getPropertyName().equals(ConfiguracionPunVenConstantesFunciones.IDCLIENTECONSUMIDORFINAL)) {FuncionesSwing.mostrarCampoMensajeInvalido(false,this.jInternalFrameDetalleFormConfiguracionPunVen.jLabelid_cliente_consumidor_finalConfiguracionPunVen,invalidValue.getMessage());}
			if(invalidValue.getPropertyName().equals(ConfiguracionPunVenConstantesFunciones.IDTIPODOCUMENTOFACTURA)) {FuncionesSwing.mostrarCampoMensajeInvalido(false,this.jInternalFrameDetalleFormConfiguracionPunVen.jLabelid_tipo_documento_facturaConfiguracionPunVen,invalidValue.getMessage());}
			if(invalidValue.getPropertyName().equals(ConfiguracionPunVenConstantesFunciones.IDTIPODOCUMENTONOTAVENTA)) {FuncionesSwing.mostrarCampoMensajeInvalido(false,this.jInternalFrameDetalleFormConfiguracionPunVen.jLabelid_tipo_documento_nota_ventaConfiguracionPunVen,invalidValue.getMessage());}
			if(invalidValue.getPropertyName().equals(ConfiguracionPunVenConstantesFunciones.IDTIPODOCUMENTONOTACREDITO)) {FuncionesSwing.mostrarCampoMensajeInvalido(false,this.jInternalFrameDetalleFormConfiguracionPunVen.jLabelid_tipo_documento_nota_creditoConfiguracionPunVen,invalidValue.getMessage());}
			if(invalidValue.getPropertyName().equals(ConfiguracionPunVenConstantesFunciones.IDTIPODOCUMENTOTARJETACREDITO)) {FuncionesSwing.mostrarCampoMensajeInvalido(false,this.jInternalFrameDetalleFormConfiguracionPunVen.jLabelid_tipo_documento_tarjeta_creditoConfiguracionPunVen,invalidValue.getMessage());}
			if(invalidValue.getPropertyName().equals(ConfiguracionPunVenConstantesFunciones.IDFORMATOFACTURA)) {FuncionesSwing.mostrarCampoMensajeInvalido(false,this.jInternalFrameDetalleFormConfiguracionPunVen.jLabelid_formato_facturaConfiguracionPunVen,invalidValue.getMessage());}
			if(invalidValue.getPropertyName().equals(ConfiguracionPunVenConstantesFunciones.IDFORMATONOTAVENTA)) {FuncionesSwing.mostrarCampoMensajeInvalido(false,this.jInternalFrameDetalleFormConfiguracionPunVen.jLabelid_formato_nota_ventaConfiguracionPunVen,invalidValue.getMessage());}
			if(invalidValue.getPropertyName().equals(ConfiguracionPunVenConstantesFunciones.IDFORMATONOTACREDITO)) {FuncionesSwing.mostrarCampoMensajeInvalido(false,this.jInternalFrameDetalleFormConfiguracionPunVen.jLabelid_formato_nota_creditoConfiguracionPunVen,invalidValue.getMessage());}
			if(invalidValue.getPropertyName().equals(ConfiguracionPunVenConstantesFunciones.IDTRANSACCIONFACTURA)) {FuncionesSwing.mostrarCampoMensajeInvalido(false,this.jInternalFrameDetalleFormConfiguracionPunVen.jLabelid_transaccion_facturaConfiguracionPunVen,invalidValue.getMessage());}
			if(invalidValue.getPropertyName().equals(ConfiguracionPunVenConstantesFunciones.IDTRANSACCIONNOTAVENTA)) {FuncionesSwing.mostrarCampoMensajeInvalido(false,this.jInternalFrameDetalleFormConfiguracionPunVen.jLabelid_transaccion_nota_ventaConfiguracionPunVen,invalidValue.getMessage());}
			if(invalidValue.getPropertyName().equals(ConfiguracionPunVenConstantesFunciones.IDTRANSACCIONNOTACREDITO)) {FuncionesSwing.mostrarCampoMensajeInvalido(false,this.jInternalFrameDetalleFormConfiguracionPunVen.jLabelid_transaccion_nota_creditoConfiguracionPunVen,invalidValue.getMessage());}
			if(invalidValue.getPropertyName().equals(ConfiguracionPunVenConstantesFunciones.IDTRANSACCIONCUENTAFACTURA)) {FuncionesSwing.mostrarCampoMensajeInvalido(false,this.jInternalFrameDetalleFormConfiguracionPunVen.jLabelid_transaccion_cuenta_facturaConfiguracionPunVen,invalidValue.getMessage());}
			if(invalidValue.getPropertyName().equals(ConfiguracionPunVenConstantesFunciones.IDTRANSACCIONCUENTANOTAVENTA)) {FuncionesSwing.mostrarCampoMensajeInvalido(false,this.jInternalFrameDetalleFormConfiguracionPunVen.jLabelid_transaccion_cuenta_nota_ventaConfiguracionPunVen,invalidValue.getMessage());}
			if(invalidValue.getPropertyName().equals(ConfiguracionPunVenConstantesFunciones.IDTRANSACCIONCUENTANOTACREDITO)) {FuncionesSwing.mostrarCampoMensajeInvalido(false,this.jInternalFrameDetalleFormConfiguracionPunVen.jLabelid_transaccion_cuenta_nota_creditoConfiguracionPunVen,invalidValue.getMessage());}
        }
		
		
		if(!sMensaje.equals("")) {
			//JOptionPane.showMessageDialog(this,sMensaje,"VALIDACION ",JOptionPane.ERROR_MESSAGE);
			throw new Exception(sMensaje);			
		}
		
		/*
		System.out.println(invalidValue);
        System.out.println("message=" + invalidValue.getMessage());
        System.out.println("propertyName=" + invalidValue.getPropertyName());
        System.out.println("propertyPath=" + invalidValue.getPropertyPath());
        System.out.println("value=" + invalidValue.getValue());
        */
	}		
	
	public void inicializarInvalidValues() throws Exception {
		String sMensaje="";	
		
		if(this.jInternalFrameDetalleFormConfiguracionPunVen!=null) {
		
		//MOSTRAR CAMPOS INVALIDOS
		FuncionesSwing.mostrarCampoMensajeInvalido(true,this.jInternalFrameDetalleFormConfiguracionPunVen.jLabelid_empresaConfiguracionPunVen,"");
		FuncionesSwing.mostrarCampoMensajeInvalido(true,this.jInternalFrameDetalleFormConfiguracionPunVen.jLabelid_sucursalConfiguracionPunVen,"");
		FuncionesSwing.mostrarCampoMensajeInvalido(true,this.jInternalFrameDetalleFormConfiguracionPunVen.jLabelid_bodegaConfiguracionPunVen,"");
		FuncionesSwing.mostrarCampoMensajeInvalido(true,this.jInternalFrameDetalleFormConfiguracionPunVen.jLabelid_cuenta_contable_efectivoConfiguracionPunVen,"");
		FuncionesSwing.mostrarCampoMensajeInvalido(true,this.jInternalFrameDetalleFormConfiguracionPunVen.jLabelid_cuenta_contable_iceConfiguracionPunVen,"");
		FuncionesSwing.mostrarCampoMensajeInvalido(true,this.jInternalFrameDetalleFormConfiguracionPunVen.jLabelid_cuenta_contable_otrosConfiguracionPunVen,"");
		FuncionesSwing.mostrarCampoMensajeInvalido(true,this.jInternalFrameDetalleFormConfiguracionPunVen.jLabelid_cliente_consumidor_finalConfiguracionPunVen,"");
		FuncionesSwing.mostrarCampoMensajeInvalido(true,this.jInternalFrameDetalleFormConfiguracionPunVen.jLabelid_tipo_documento_facturaConfiguracionPunVen,"");
		FuncionesSwing.mostrarCampoMensajeInvalido(true,this.jInternalFrameDetalleFormConfiguracionPunVen.jLabelid_tipo_documento_nota_ventaConfiguracionPunVen,"");
		FuncionesSwing.mostrarCampoMensajeInvalido(true,this.jInternalFrameDetalleFormConfiguracionPunVen.jLabelid_tipo_documento_nota_creditoConfiguracionPunVen,"");
		FuncionesSwing.mostrarCampoMensajeInvalido(true,this.jInternalFrameDetalleFormConfiguracionPunVen.jLabelid_tipo_documento_tarjeta_creditoConfiguracionPunVen,"");
		FuncionesSwing.mostrarCampoMensajeInvalido(true,this.jInternalFrameDetalleFormConfiguracionPunVen.jLabelid_formato_facturaConfiguracionPunVen,"");
		FuncionesSwing.mostrarCampoMensajeInvalido(true,this.jInternalFrameDetalleFormConfiguracionPunVen.jLabelid_formato_nota_ventaConfiguracionPunVen,"");
		FuncionesSwing.mostrarCampoMensajeInvalido(true,this.jInternalFrameDetalleFormConfiguracionPunVen.jLabelid_formato_nota_creditoConfiguracionPunVen,"");
		FuncionesSwing.mostrarCampoMensajeInvalido(true,this.jInternalFrameDetalleFormConfiguracionPunVen.jLabelid_transaccion_facturaConfiguracionPunVen,"");
		FuncionesSwing.mostrarCampoMensajeInvalido(true,this.jInternalFrameDetalleFormConfiguracionPunVen.jLabelid_transaccion_nota_ventaConfiguracionPunVen,"");
		FuncionesSwing.mostrarCampoMensajeInvalido(true,this.jInternalFrameDetalleFormConfiguracionPunVen.jLabelid_transaccion_nota_creditoConfiguracionPunVen,"");
		FuncionesSwing.mostrarCampoMensajeInvalido(true,this.jInternalFrameDetalleFormConfiguracionPunVen.jLabelid_transaccion_cuenta_facturaConfiguracionPunVen,"");
		FuncionesSwing.mostrarCampoMensajeInvalido(true,this.jInternalFrameDetalleFormConfiguracionPunVen.jLabelid_transaccion_cuenta_nota_ventaConfiguracionPunVen,"");
		FuncionesSwing.mostrarCampoMensajeInvalido(true,this.jInternalFrameDetalleFormConfiguracionPunVen.jLabelid_transaccion_cuenta_nota_creditoConfiguracionPunVen,"");
		
		}
	}
	
	
	
	public void actualizarObjetoPadreFk(String sTipo)  throws Exception {
		if(sTipo.equals("XXXAuxiliar")) {
		
		}
		
	}
	
	public void nuevoPreparar() throws Exception {
		this.nuevoPreparar(false);
	}
	
	public void nuevoPreparar(Boolean esNuevoGuardarCambios) throws Exception {
		this.iIdNuevoConfiguracionPunVen--;	
		
		
		this.configuracionpunvenAux=new ConfiguracionPunVen();
		
		this.configuracionpunvenAux.setId(this.iIdNuevoConfiguracionPunVen);
		this.configuracionpunvenAux.setIsChanged(true);
		
		//ARCHITECTURE
		if(Constantes.ISUSAEJBLOGICLAYER) {
			this.configuracionpunvenLogic.getConfiguracionPunVens().add(this.configuracionpunvenAux);
		} else if(Constantes.ISUSAEJBREMOTE || Constantes.ISUSAEJBHOME) {
			this.configuracionpunvens.add(this.configuracionpunvenAux);
		}
		//ARCHITECTURE
		
		this.configuracionpunven=this.configuracionpunvenAux;
		
		if(ConfiguracionPunVenJInternalFrame.ISBINDING_MANUAL_TABLA) {
			this.setVariablesObjetoActualToFormularioConfiguracionPunVen(this.configuracionpunven);
			this.setVariablesObjetoActualToFormularioForeignKeyConfiguracionPunVen(this.configuracionpunven);
		}
				
		//this.setDefaultControlesConfiguracionPunVen();
		
		this.inicializarInvalidValues();
				
		//SELECCIONA ITEM DEFECTO-->SET O SELECTED INDEX
		this.setItemDefectoCombosForeignKeyConfiguracionPunVen();
		
		
		//INICIALIZA VARIABLES COMBOS GLOBALES A FORMULARIO(ParametroGeneralUsuario)
		this.setVariablesGlobalesCombosForeignKeyConfiguracionPunVen();
		
		//INICIALIZA VARIABLES COMBOS GLOBALES AUXILIARES A FORMULARIO(Anio,Mes)
		//this.setVariablesGlobalesAuxiliaresCombosForeignKeyConfiguracionPunVen();
		
		//SI TIENE FOREIGN KEY CON CAMPO esDefecto=true, SE ACTUALIZA A OBJETO ACTUAL
		this.setVariablesForeignKeyObjetoBeanDefectoActualToObjetoActualConfiguracionPunVen(this.configuracionpunvenBean,this.configuracionpunven,false,false);
		
		//ACTUALIZA VALORES PARA EL OBJETO ACTUAL ANTES DE ENVIARLO A ACTUALIZAR
		this.setVariablesFormularioToObjetoActualForeignKeysConfiguracionPunVen(this.configuracionpunven);
				
		ArrayList<Classe> classes=new ArrayList<Classe>();
		
		if(this.jInternalFrameParent!=null) {
			this.jInternalFrameParent.actualizarObjetoPadreFk(ConfiguracionPunVenConstantesFunciones.CLASSNAME);
		}	
		
		
		if(this.configuracionpunvenSessionBean.getConGuardarRelaciones()) {
			classes=ConfiguracionPunVenConstantesFunciones.getClassesRelationshipsOfConfiguracionPunVen(new ArrayList<Classe>(),DeepLoadType.NONE);
		}
		
		this.classesActual=new ArrayList<Classe>();
		this.classesActual.addAll(classes);
				
		//ARCHITECTURE
		if(Constantes.ISUSAEJBLOGICLAYER) {						
			this.configuracionpunvenReturnGeneral=configuracionpunvenLogic.procesarEventosConfiguracionPunVensWithConnection(this.parametroGeneralUsuario,this.moduloActual,this.opcionActual,this.usuarioActual,EventoGlobalTipo.FORM_RECARGAR,ControlTipo.FORM,EventoTipo.LOAD,EventoSubTipo.NEW,"FORM",this.configuracionpunvenLogic.getConfiguracionPunVens(),this.configuracionpunven,this.configuracionpunvenParameterGeneral,this.isEsNuevoConfiguracionPunVen,classes);//this.configuracionpunvenLogic.getConfiguracionPunVen()
						
		} else if(Constantes.ISUSAEJBREMOTE) {
						
		} else if(Constantes.ISUSAEJBHOME) {
		}
		//ARCHITECTURE
		
		//ACTUALIZA VARIABLES DEFECTO DESDE LOGIC A RETURN GENERAL Y LUEGO A BEAN
		//this.setVariablesObjetoReturnGeneralToBeanConfiguracionPunVen(this.configuracionpunvenReturnGeneral,this.configuracionpunvenBean,false);
		
		if(this.configuracionpunvenReturnGeneral.getConRecargarPropiedades()) {
			//INICIALIZA VARIABLES COMBOS NORMALES (FK)
			this.setVariablesObjetoActualToFormularioForeignKeyConfiguracionPunVen(this.configuracionpunvenReturnGeneral.getConfiguracionPunVen());
			
			//INICIALIZA VARIABLES NORMALES A FORMULARIO(SIN FK)
			this.setVariablesObjetoActualToFormularioConfiguracionPunVen(this.configuracionpunvenReturnGeneral.getConfiguracionPunVen());
		}
		
		if(this.configuracionpunvenReturnGeneral.getConRecargarRelaciones()) {
			//INICIALIZA VARIABLES RELACIONES A FORMULARIO
			this.setVariablesRelacionesObjetoActualToFormularioConfiguracionPunVen(this.configuracionpunvenReturnGeneral.getConfiguracionPunVen(),classes);//this.configuracionpunvenBean);	
		}
			
		//ACTUALIZA VARIABLES FORMULARIO A OBJETO ACTUAL (PARA NUEVO TABLA O GUARDAR CAMBIOS
		if(esNuevoGuardarCambios) {
			this.setVariablesFormularioToObjetoActualConfiguracionPunVen(this.configuracionpunven,false);
		}
		
		//INICIALIZA VARIABLES COMBOS DEFAULT DEL PROYECTO(|DEFAULT para FK)
		//this.setVariablesDefaultCombosForeignKeyConfiguracionPunVen();
		
		//INICIALIZA VARIABLES COMBOS PARAMETRO DEL PROYECTO(|VALORPARAM Era para ParametroModulo, ahora en logic)
		//this.setVariablesParametroCombosForeignKeyConfiguracionPunVen();						
		
		if(!esNuevoGuardarCambios) {
			//INICIALIZA VARIABLES POR OPCION MENU
			this.arrDatoGeneral= new  ArrayList<DatoGeneral>();
			this.arrDatoGeneralNo= new  ArrayList<String>();
			
			ConfiguracionPunVenBeanSwingJInternalFrameAdditional.RecargarFormConfiguracionPunVen(this,"NUEVO_PREPARAR","",this.arrDatoGeneral);
		
			//NO FUNCIONA BINDINGS			
			this.inicializarActualizarBindingConfiguracionPunVen(false);
						
			if(configuracionpunvenSessionBean.getConGuardarRelaciones()) {
				//DEBERIA YA ESTAR CARGADO LOS COMBOS Y SI SE NECESITA ALGO MAS SE DEBE CREAR FUNCION LIMITADA
				//SI DEBE TRAER Y RESETEAR TABLA
								
			}
				
			//SI ES MANUAL
			if(ConfiguracionPunVenJInternalFrame.ISBINDING_MANUAL) {
				//this.inicializarActualizarBindingManualConfiguracionPunVen();
			}
			
			this.actualizarVisualTableDatosConfiguracionPunVen();
			
			this.jTableDatosConfiguracionPunVen.setRowSelectionInterval(this.getIndiceNuevoConfiguracionPunVen(), this.getIndiceNuevoConfiguracionPunVen());
			
			this.seleccionarFilaTablaConfiguracionPunVenActual();
						
			this.actualizarEstadoCeldasBotonesConfiguracionPunVen("a", isGuardarCambiosEnLote, isEsMantenimientoRelacionado);			
		
		}		
	}
	
	public void habilitarDeshabilitarControlesConfiguracionPunVen(Boolean isHabilitar) throws Exception {
			
		//
		this.jInternalFrameDetalleFormConfiguracionPunVen.jComboBoxid_empresaConfiguracionPunVen.setEnabled(isHabilitar && this.configuracionpunvenConstantesFunciones.activarid_empresaConfiguracionPunVen);//
		this.jInternalFrameDetalleFormConfiguracionPunVen.jComboBoxid_sucursalConfiguracionPunVen.setEnabled(isHabilitar && this.configuracionpunvenConstantesFunciones.activarid_sucursalConfiguracionPunVen);
		this.jInternalFrameDetalleFormConfiguracionPunVen.jComboBoxid_bodegaConfiguracionPunVen.setEnabled(isHabilitar && this.configuracionpunvenConstantesFunciones.activarid_bodegaConfiguracionPunVen);
		this.jInternalFrameDetalleFormConfiguracionPunVen.jComboBoxid_cuenta_contable_efectivoConfiguracionPunVen.setEnabled(isHabilitar && this.configuracionpunvenConstantesFunciones.activarid_cuenta_contable_efectivoConfiguracionPunVen);
		this.jInternalFrameDetalleFormConfiguracionPunVen.jComboBoxid_cuenta_contable_iceConfiguracionPunVen.setEnabled(isHabilitar && this.configuracionpunvenConstantesFunciones.activarid_cuenta_contable_iceConfiguracionPunVen);
		this.jInternalFrameDetalleFormConfiguracionPunVen.jComboBoxid_cuenta_contable_otrosConfiguracionPunVen.setEnabled(isHabilitar && this.configuracionpunvenConstantesFunciones.activarid_cuenta_contable_otrosConfiguracionPunVen);
		this.jInternalFrameDetalleFormConfiguracionPunVen.jComboBoxid_cliente_consumidor_finalConfiguracionPunVen.setEnabled(isHabilitar && this.configuracionpunvenConstantesFunciones.activarid_cliente_consumidor_finalConfiguracionPunVen);
		this.jInternalFrameDetalleFormConfiguracionPunVen.jComboBoxid_tipo_documento_facturaConfiguracionPunVen.setEnabled(isHabilitar && this.configuracionpunvenConstantesFunciones.activarid_tipo_documento_facturaConfiguracionPunVen);
		this.jInternalFrameDetalleFormConfiguracionPunVen.jComboBoxid_tipo_documento_nota_ventaConfiguracionPunVen.setEnabled(isHabilitar && this.configuracionpunvenConstantesFunciones.activarid_tipo_documento_nota_ventaConfiguracionPunVen);
		this.jInternalFrameDetalleFormConfiguracionPunVen.jComboBoxid_tipo_documento_nota_creditoConfiguracionPunVen.setEnabled(isHabilitar && this.configuracionpunvenConstantesFunciones.activarid_tipo_documento_nota_creditoConfiguracionPunVen);
		this.jInternalFrameDetalleFormConfiguracionPunVen.jComboBoxid_tipo_documento_tarjeta_creditoConfiguracionPunVen.setEnabled(isHabilitar && this.configuracionpunvenConstantesFunciones.activarid_tipo_documento_tarjeta_creditoConfiguracionPunVen);
		this.jInternalFrameDetalleFormConfiguracionPunVen.jComboBoxid_formato_facturaConfiguracionPunVen.setEnabled(isHabilitar && this.configuracionpunvenConstantesFunciones.activarid_formato_facturaConfiguracionPunVen);
		this.jInternalFrameDetalleFormConfiguracionPunVen.jComboBoxid_formato_nota_ventaConfiguracionPunVen.setEnabled(isHabilitar && this.configuracionpunvenConstantesFunciones.activarid_formato_nota_ventaConfiguracionPunVen);
		this.jInternalFrameDetalleFormConfiguracionPunVen.jComboBoxid_formato_nota_creditoConfiguracionPunVen.setEnabled(isHabilitar && this.configuracionpunvenConstantesFunciones.activarid_formato_nota_creditoConfiguracionPunVen);
		this.jInternalFrameDetalleFormConfiguracionPunVen.jComboBoxid_transaccion_facturaConfiguracionPunVen.setEnabled(isHabilitar && this.configuracionpunvenConstantesFunciones.activarid_transaccion_facturaConfiguracionPunVen);
		this.jInternalFrameDetalleFormConfiguracionPunVen.jComboBoxid_transaccion_nota_ventaConfiguracionPunVen.setEnabled(isHabilitar && this.configuracionpunvenConstantesFunciones.activarid_transaccion_nota_ventaConfiguracionPunVen);
		this.jInternalFrameDetalleFormConfiguracionPunVen.jComboBoxid_transaccion_nota_creditoConfiguracionPunVen.setEnabled(isHabilitar && this.configuracionpunvenConstantesFunciones.activarid_transaccion_nota_creditoConfiguracionPunVen);
		this.jInternalFrameDetalleFormConfiguracionPunVen.jComboBoxid_transaccion_cuenta_facturaConfiguracionPunVen.setEnabled(isHabilitar && this.configuracionpunvenConstantesFunciones.activarid_transaccion_cuenta_facturaConfiguracionPunVen);
		this.jInternalFrameDetalleFormConfiguracionPunVen.jComboBoxid_transaccion_cuenta_nota_ventaConfiguracionPunVen.setEnabled(isHabilitar && this.configuracionpunvenConstantesFunciones.activarid_transaccion_cuenta_nota_ventaConfiguracionPunVen);
		this.jInternalFrameDetalleFormConfiguracionPunVen.jComboBoxid_transaccion_cuenta_nota_creditoConfiguracionPunVen.setEnabled(isHabilitar && this.configuracionpunvenConstantesFunciones.activarid_transaccion_cuenta_nota_creditoConfiguracionPunVen);
	};
	
	public void setDefaultControlesConfiguracionPunVen() throws Exception {
			
	};
	
	
	public void habilitarDeshabilitarTipoMantenimientoConfiguracionPunVen(Boolean esRelaciones) throws Exception {
		if(esRelaciones) {
			//this.configuracionpunvenSessionBean.setConGuardarRelaciones(true);			
			this.configuracionpunvenSessionBean.setEstaModoGuardarRelaciones(true);				
			this.jInternalFrameDetalleFormConfiguracionPunVen.jTabbedPaneRelacionesConfiguracionPunVen.setVisible(true);
			
					
		} else {
			//this.configuracionpunvenSessionBean.setConGuardarRelaciones(false);			
			this.configuracionpunvenSessionBean.setEstaModoGuardarRelaciones(false);						
			this.jInternalFrameDetalleFormConfiguracionPunVen.jTabbedPaneRelacionesConfiguracionPunVen.setVisible(false);
			
			
		}
	};
	
	public int getIndiceNuevoConfiguracionPunVen() throws Exception {
		int iIndice=0;
		Boolean existe=false;
		
		//ARCHITECTURE
		if(Constantes.ISUSAEJBLOGICLAYER) {
			for(ConfiguracionPunVen configuracionpunvenAux:this.configuracionpunvenLogic.getConfiguracionPunVens()) {
				if(configuracionpunvenAux.getId().equals(this.iIdNuevoConfiguracionPunVen)) {
					existe=true;
					break;
				}
				
				iIndice++;
			}
		} else if(Constantes.ISUSAEJBREMOTE || Constantes.ISUSAEJBHOME) {
			for(ConfiguracionPunVen configuracionpunvenAux:this.configuracionpunvens) {
				if(configuracionpunvenAux.getId().equals(this.iIdNuevoConfiguracionPunVen)) {
					existe=true;
					break;
				}
				
				iIndice++;
			}
		}
		//ARCHITECTURE
		
		if(!existe) {
			//SI NO EXISTE TOMA LA ULTIMA FILA
			iIndice=iIndice-1;
		}
		
		return iIndice;
	}
	
	public int getIndiceActualConfiguracionPunVen(ConfiguracionPunVen configuracionpunven,Integer iIndiceActual) throws Exception {
		Integer iIndice=0;
		Boolean existe=false;
		
		//ARCHITECTURE
		if(Constantes.ISUSAEJBLOGICLAYER) {
			for(ConfiguracionPunVen configuracionpunvenAux:this.configuracionpunvenLogic.getConfiguracionPunVens()) {
				if(configuracionpunvenAux.getId().equals(configuracionpunven.getId())) {
					existe=true;
					break;
				}
				
				iIndice++;
			}
		} else if(Constantes.ISUSAEJBREMOTE || Constantes.ISUSAEJBHOME) {
			for(ConfiguracionPunVen configuracionpunvenAux:this.configuracionpunvens) {
				if(configuracionpunvenAux.getId().equals(configuracionpunven.getId())) {
					existe=true;
					break;
				}
				
				iIndice++;
			}
		}
		//ARCHITECTURE
		
		if(!existe) {
			//SI NO EXISTE TOMA LA ULTIMA FILA
			iIndice=iIndiceActual;
		}
		
		return iIndice;
	}
	
	public void setCamposBaseDesdeOriginalConfiguracionPunVen(ConfiguracionPunVen configuracionpunvenOriginal) throws Exception {
		Boolean existe=false;
		
		//ARCHITECTURE
		if(Constantes.ISUSAEJBLOGICLAYER) {
			for(ConfiguracionPunVen configuracionpunvenAux:this.configuracionpunvenLogic.getConfiguracionPunVens()) {
				if(configuracionpunvenAux.getConfiguracionPunVenOriginal().getId().equals(configuracionpunvenOriginal.getId())) {
					existe=true;
					configuracionpunvenOriginal.setId(configuracionpunvenAux.getId());
					configuracionpunvenOriginal.setVersionRow(configuracionpunvenAux.getVersionRow());
					break;
				}
				
			}
		} else if(Constantes.ISUSAEJBREMOTE || Constantes.ISUSAEJBHOME) {
			for(ConfiguracionPunVen configuracionpunvenAux:this.configuracionpunvens) {
				if(configuracionpunvenAux.getConfiguracionPunVenOriginal().getId().equals(configuracionpunvenOriginal.getId())) {
					existe=true;
					configuracionpunvenOriginal.setId(configuracionpunvenAux.getId());
					configuracionpunvenOriginal.setVersionRow(configuracionpunvenAux.getVersionRow());
					break;
				}				
			}
		}
		//ARCHITECTURE
		
		if(!existe) {
			//SI NO EXISTE TOMA LA ULTIMA FILA
		}
	}
	
	public void cancelarNuevosConfiguracionPunVen(Boolean esParaCancelar) throws Exception {
		configuracionpunvensAux=new ArrayList<ConfiguracionPunVen>();
		configuracionpunvenAux=new ConfiguracionPunVen();
		
		if(!this.configuracionpunvenSessionBean.getEsGuardarRelacionado()) {
			if(Constantes.ISUSAEJBLOGICLAYER) {
				for(ConfiguracionPunVen configuracionpunvenAux:this.configuracionpunvenLogic.getConfiguracionPunVens()) {
					if(configuracionpunvenAux.getId()<0) {
						configuracionpunvensAux.add(configuracionpunvenAux);
					}		
				}
				this.iIdNuevoConfiguracionPunVen=0L;
				this.configuracionpunvenLogic.getConfiguracionPunVens().removeAll(configuracionpunvensAux);
					
			} else if(Constantes.ISUSAEJBREMOTE||Constantes.ISUSAEJBHOME) {
				for(ConfiguracionPunVen configuracionpunvenAux:this.configuracionpunvens) {
					if(configuracionpunvenAux.getId()<0) {
						configuracionpunvensAux.add(configuracionpunvenAux);
					}		
				}
				this.iIdNuevoConfiguracionPunVen=0L;
				this.configuracionpunvens.removeAll(configuracionpunvensAux);
			}	
		} else {			
			if(Constantes.ISUSAEJBLOGICLAYER) {
				if(esParaCancelar && this.isEsNuevoConfiguracionPunVen 
					&& this.configuracionpunvenLogic.getConfiguracionPunVens().size()>0
					) {
					configuracionpunvenAux=this.configuracionpunvenLogic.getConfiguracionPunVens().get(this.configuracionpunvenLogic.getConfiguracionPunVens().size() - 1);
				
					if(configuracionpunvenAux.getId()<0) {
						this.configuracionpunvenLogic.getConfiguracionPunVens().remove(configuracionpunvenAux);
					}
				}
			} else if(Constantes.ISUSAEJBREMOTE||Constantes.ISUSAEJBHOME) {
				if(esParaCancelar && this.isEsNuevoConfiguracionPunVen && this.configuracionpunvens.size()>0) {
					configuracionpunvenAux=this.configuracionpunvens.get(this.configuracionpunvens.size() - 1);
				
					if(configuracionpunvenAux.getId()<0) {
						this.configuracionpunvens.remove(configuracionpunvenAux);
					}
				}
			}	
		}
	}
	
	public void cancelarNuevoConfiguracionPunVen(Boolean esParaCancelar) throws Exception {
		if(Constantes.ISUSAEJBLOGICLAYER) {
			if(configuracionpunven.getId()<0) {
				this.configuracionpunvenLogic.getConfiguracionPunVens().remove(this.configuracionpunven);
			}					
		} else if(Constantes.ISUSAEJBREMOTE||Constantes.ISUSAEJBHOME) {
			if(configuracionpunven.getId()<0) {
				this.configuracionpunvens.remove(this.configuracionpunven);
			}
		}			
	}
	
	public void setEstadosInicialesConfiguracionPunVen(List<ConfiguracionPunVen> configuracionpunvensAux) throws Exception {
		ConfiguracionPunVenConstantesFunciones.setEstadosInicialesConfiguracionPunVen(configuracionpunvensAux);
	}
	
	public void setEstadosInicialesConfiguracionPunVen(ConfiguracionPunVen configuracionpunvenAux) throws Exception {
		ConfiguracionPunVenConstantesFunciones.setEstadosInicialesConfiguracionPunVen(configuracionpunvenAux);		
	}
	
	public void nuevo() throws Exception {
		try	{
			//ESTA VALIDADO EN FUNCION ACTUALIZAR
			//if(this.validarConfiguracionPunVenActual()) {
				this.ejecutarMantenimiento(MaintenanceType.NUEVO);
				
				this.actualizarEstadoCeldasBotonesConfiguracionPunVen("n", isGuardarCambiosEnLote, isEsMantenimientoRelacionado);
				
			//}
		} catch(Exception e) {
			throw e;
			//FuncionesSwing.manageException(this, e,logger,ConfiguracionPunVenConstantesFunciones.CLASSNAME);
		}
	}
	
	public void actualizar() throws Exception {
		try	{
			if(this.validarConfiguracionPunVenActual()) {
				if(!this.isEsNuevoConfiguracionPunVen) {
					this.ejecutarMantenimiento(MaintenanceType.ACTUALIZAR);
					
					this.actualizarEstadoCeldasBotonesConfiguracionPunVen("n", isGuardarCambiosEnLote, isEsMantenimientoRelacionado);
					
				} else {					
					this.nuevo();
					this.isEsNuevoConfiguracionPunVen=false;
				}
				
				//SE CANCELA AL FINAL DEL PROCESO JBUTTONACTUALIZAR
				//this.cancelar(false);
			}		
		} catch(Exception e) {
			throw e;
			//FuncionesSwing.manageException(this, e,logger,ConfiguracionPunVenConstantesFunciones.CLASSNAME);
		}
	}
	
	public void eliminar() throws Exception {
		try	{	
			if(this.validarConfiguracionPunVenActual()) {
				if(JOptionPane.showConfirmDialog(this, "ESTA SEGURO DE ELIMINAR EL/LA Configuracion Pun Ven ?", "MANTENIMIENTO DE Configuracion Pun Ven", JOptionPane.OK_CANCEL_OPTION) == 0) {
					this.ejecutarMantenimiento(MaintenanceType.ELIMINAR);			
					this.actualizarEstadoCeldasBotonesConfiguracionPunVen("n", isGuardarCambiosEnLote, isEsMantenimientoRelacionado);			
				}
			
			}
		} catch(Exception e) {
			throw e;
			//FuncionesSwing.manageException(this, e,logger,ConfiguracionPunVenConstantesFunciones.CLASSNAME);
		}
	}
	
	public void guardarCambios() throws Exception {
		try	{
			this.ejecutarMantenimiento(MaintenanceType.GUARDARCAMBIOS);
			
		} catch(Exception e) {
			FuncionesSwing.manageException(this, e,logger,ConfiguracionPunVenConstantesFunciones.CLASSNAME);
		}
	}
	
	public void seleccionarAsignar(ConfiguracionPunVen configuracionpunven) throws Exception {
		ConfiguracionPunVenConstantesFunciones.seleccionarAsignar(this.configuracionpunven,configuracionpunven);
	}
	
	public void seleccionar() throws Exception {
		try	{
			//ACTUALIZO EL PERMISO ACTUALIZAR CON EL PERMISO ACTUALIZAR ORIGINAL ESTE PERMISO SE UTILIZA PARA EL NUEVO TAMBIEN
			this.isPermisoActualizarConfiguracionPunVen=this.isPermisoActualizarOriginalConfiguracionPunVen;
			
			
			this.seleccionarAsignar(configuracionpunven);
			
			

			idClienteConsumidorFinalActual=configuracionpunven.getid_cliente_consumidor_final();
			this.seleccionarClienteConsumidorFinalActual();
			
			this.arrDatoGeneral= new  ArrayList<DatoGeneral>();
			this.arrDatoGeneralNo= new  ArrayList<String>();
			
			ConfiguracionPunVenConstantesFunciones.quitarEspaciosConfiguracionPunVen(this.configuracionpunven,this.arrDatoGeneral);
			
			
			this.actualizarEstadoCeldasBotonesConfiguracionPunVen("ae", isGuardarCambiosEnLote, isEsMantenimientoRelacionado);
			
						
		} catch(Exception e) {
			FuncionesSwing.manageException(this, e,logger,ConfiguracionPunVenConstantesFunciones.CLASSNAME);
		}
	}
	
	public void seleccionarBusqueda(Long id) throws Exception {
		try	{
			this.configuracionpunvenSessionBean.setsFuncionBusquedaRapida(this.configuracionpunvenSessionBean.getsFuncionBusquedaRapida().replace("TO_REPLACE", id.toString()));
			
		} catch(Exception e) {
			FuncionesSwing.manageException(this, e,logger,ConfiguracionPunVenConstantesFunciones.CLASSNAME);
		}
	}
	
	
	//BUSQUEDA INTERNA FK
	public void seleccionarClienteConsumidorFinalActual() throws Exception {
		try	{
			Cliente clienteconsumidorfinalAux=new Cliente();

			if(this.idClienteConsumidorFinalActual != null && this.idClienteConsumidorFinalActual>0) {
				//ARCHITECTURE
				if(Constantes.ISUSAEJBLOGICLAYER) {
					clienteconsumidorfinalLogic.getEntityWithConnection(this.idClienteConsumidorFinalActual);
					clienteconsumidorfinalAux= clienteconsumidorfinalLogic.getCliente();
				} else if(Constantes.ISUSAEJBREMOTE) {
				} else if(Constantes.ISUSAEJBHOME) {
				}
				//ARCHITECTURE

				clienteconsumidorfinalsForeignKey=new ArrayList<Cliente>();
				clienteconsumidorfinalsForeignKey.add(clienteconsumidorfinalAux);
			}

		} catch(Exception e) {
			FuncionesSwing.manageException(this, e,logger);
		}
	}
	
	public void cancelar() throws Exception {
		this.cancelar(true);
	}
	
	public void cancelar(Boolean esParaCancelar) throws Exception {
		try {
														
			
			//SE UTILIZA COLUMNA ELIMINAR EN TABLA
			if(this.isEsNuevoConfiguracionPunVen) {
				//NO CANCELA TODOS NUEVOS POR FUNCIONALIDAD GUARDAR CAMBIOS
				//this.cancelarNuevosConfiguracionPunVen(esParaCancelar);				
				this.cancelarNuevoConfiguracionPunVen(esParaCancelar);								
			}
			
			this.configuracionpunven=new ConfiguracionPunVen();
			
			this.inicializarConfiguracionPunVen();
			
			this.actualizarEstadoCeldasBotonesConfiguracionPunVen("n", isGuardarCambiosEnLote, isEsMantenimientoRelacionado);			
		
		} catch(Exception e) {
			FuncionesSwing.manageException(this, e,logger,ConfiguracionPunVenConstantesFunciones.CLASSNAME);
		}
	}
	
	public void inicializarConfiguracionPunVen() throws Exception {
		try {
			ConfiguracionPunVenConstantesFunciones.inicializarConfiguracionPunVen(this.configuracionpunven);
			
			} catch(Exception e) {
			throw e;
		}
	}
	
	public void anteriores()throws Exception {
		try	{
			//this.iNumeroPaginacionPagina=this.iNumeroPaginacionPagina-this.iNumeroPaginacion;
			
			if(this.iNumeroPaginacionPagina-this.iNumeroPaginacion<this.iNumeroPaginacion) {
				this.iNumeroPaginacionPagina=0;		
			} else {
				this.iNumeroPaginacionPagina=this.iNumeroPaginacionPagina-this.iNumeroPaginacion;
			}
			
			this.procesarBusqueda(this.sAccionBusqueda);
			
		} catch(Exception e) {
			FuncionesSwing.manageException(this, e,logger,ConfiguracionPunVenConstantesFunciones.CLASSNAME);
		}
	}
	
	public void siguientes()throws Exception {
		try	{			
			if(this.configuracionpunvenLogic.getConfiguracionPunVens().size()>0) {
					
				this.iNumeroPaginacionPagina=this.iNumeroPaginacionPagina+this.iNumeroPaginacion;
			}
				
			this.procesarBusqueda(this.sAccionBusqueda);
			
		} catch(Exception e) {
			FuncionesSwing.manageException(this, e,logger,ConfiguracionPunVenConstantesFunciones.CLASSNAME);
		}
	}		
	
	public void generarReporteConfiguracionPunVens(String sAccionBusqueda,List<ConfiguracionPunVen> configuracionpunvensParaReportes) throws Exception {
		//HttpSession httpSession = httpServletRequest.getSession();
		Long iIdUsuarioSesion=0L;	
		
		
		if(usuarioActual==null) {
			this.usuarioActual=new Usuario();
		}
		
		iIdUsuarioSesion=usuarioActual.getId();
		
		String sPathReportes="";
		
		InputStream reportFile=null;
		InputStream imageFile=null;
			
		imageFile=AuxiliarImagenes.class.getResourceAsStream("LogoReporte.jpg");			
				
		
		String sPathReporteFinal="";
		
		if(!esReporteAccionProceso) {
			if(!this.sTipoReporte.equals("RELACIONES")) {//!isEsReporteRelaciones
				if(!this.esReporteDinamico) {
					sPathReporteFinal="ConfiguracionPunVen"+this.sTipoReporteExtra+"Design.jasper";
					reportFile = AuxiliarReportes.class.getResourceAsStream(sPathReporteFinal);	
				} else {
					sPathReporteFinal=this.sPathReporteDinamico;
					reportFile = new FileInputStream(sPathReporteFinal);
				}
			} else {
				sPathReporteFinal="ConfiguracionPunVenMasterRelaciones"+this.sTipoReporteExtra+"Design.jasper";
				reportFile = AuxiliarReportes.class.getResourceAsStream(sPathReporteFinal);
				//sPathReportes=reportFile.getPath().replace("ConfiguracionPunVenMasterRelacionesDesign.jasper", "");
			}
		} else {
				sPathReporteFinal="ConfiguracionPunVen"+this.sTipoReporteExtra+"Design.jasper";
				reportFile = AuxiliarReportes.class.getResourceAsStream(sPathReporteFinal);	
		}
		
		if(reportFile==null) {
			throw new JRRuntimeException(sPathReporteFinal+" no existe");
		}
		
		String sUsuario="";
		
		if(usuarioActual!=null) {
			sUsuario=usuarioActual.getuser_name();
		}
		
		Map<String, Object> parameters = new HashMap<String, Object>();
		parameters.put("usuario", sUsuario);
		
		parameters.put("titulo", Funciones.GetTituloSistemaReporte(this.parametroGeneralSg,this.moduloActual,this.usuarioActual));
		parameters.put("subtitulo", "Reporte De  Configuracion Pun Venes");		
		parameters.put("busquedapor", ConfiguracionPunVenConstantesFunciones.getNombreIndice(sAccionBusqueda)+sDetalleReporte);
		
		
		if(this.sTipoReporte.equals("RELACIONES")) {//isEsReporteRelaciones
			parameters.put("SUBREPORT_DIR", sPathReportes);
		}
		
		parameters.put("con_grafico", this.conGraficoReporte);
		
		JasperReport jasperReport = (JasperReport)JRLoader.loadObject(reportFile);
				
		this.cargarDatosCliente();
		
		ArrayList<Classe> classes=new ArrayList<Classe>();		
		
		if(this.sTipoReporte.equals("RELACIONES")) {//isEsReporteRelaciones
			
			
		} else {
			//FK DEBERIA TRAERSE DE ANTEMANO
			
		}
								
		
		//CLASSES PARA REPORTES OBJETOS RELACIONADOS
		if(!this.sTipoReporte.equals("RELACIONES")) {//!isEsReporteRelaciones
			classes=new ArrayList<Classe>();
		}
		
		JRBeanArrayDataSource jrbeanArrayDataSourceConfiguracionPunVen=null;
		
		if(this.sTipoReporteExtra!=null && !this.sTipoReporteExtra.equals("")) {
			ConfiguracionPunVenConstantesFunciones.S_TIPOREPORTE_EXTRA=this.sTipoReporteExtra;
		} else {
			ConfiguracionPunVenConstantesFunciones.S_TIPOREPORTE_EXTRA="";
		}
		
		jrbeanArrayDataSourceConfiguracionPunVen=new JRBeanArrayDataSource(ConfiguracionPunVenJInternalFrame.TraerConfiguracionPunVenBeans(configuracionpunvensParaReportes,classes).toArray());
		
		jasperPrint = JasperFillManager.fillReport(jasperReport,parameters,jrbeanArrayDataSourceConfiguracionPunVen);
				
		
		String sPathDest=Constantes.SUNIDAD_ARCHIVOS+":/"+Constantes.SCONTEXTSERVER+"/"+ConfiguracionPunVenConstantesFunciones.SCHEMA+"/reportes";
		
		File filePathDest = new File(sPathDest);
		
		if(!filePathDest.exists()) {
			filePathDest.mkdirs();				
		}
				
		String sDestFileName=sPathDest+"/"+ConfiguracionPunVenConstantesFunciones.CLASSNAME;
				
		if(this.sTipoArchivoReporte=="VISUALIZAR") {
			JasperViewer jasperViewer = new JasperViewer(jasperPrint,false) ;
			jasperViewer.setVisible(true) ; 

		} else if(this.sTipoArchivoReporte=="HTML"||this.sTipoArchivoReporte=="PDF"||this.sTipoArchivoReporte=="XML") {	
			//JasperFillManager.fillReportToFile(reportFile.getAbsolutePath(),parameters, new JRBeanArrayDataSource(ConfiguracionPunVenBean.TraerConfiguracionPunVenBeans(configuracionpunvensParaReportes).toArray()));
							
			if(this.sTipoArchivoReporte=="HTML") {
				sDestFileName+=".html";
				JasperExportManager.exportReportToHtmlFile(jasperPrint,sDestFileName);
					
			} else if(this.sTipoArchivoReporte=="PDF") {
				sDestFileName+=".pdf";
				JasperExportManager.exportReportToPdfFile(jasperPrint,sDestFileName);
			} else {
				sDestFileName+=".xml";
				JasperExportManager.exportReportToXmlFile(jasperPrint,sDestFileName, false);
			}	
			
		} else if(this.sTipoArchivoReporte=="WORD"||this.sTipoArchivoReporte=="EXCEL") {
				
			if(this.sTipoArchivoReporte=="WORD") {
				sDestFileName+=".rtf";
					
				JRRtfExporter exporter = new JRRtfExporter();
		
				exporter.setParameter(JRExporterParameter.JASPER_PRINT, jasperPrint);
				exporter.setParameter(JRExporterParameter.OUTPUT_FILE_NAME, sDestFileName);
		
				exporter.exportReport();
				
			} else	{
				sDestFileName+=".xls";
					
				JRXlsExporter exporterXls = new JRXlsExporter();
		
				exporterXls.setParameter(JRExporterParameter.JASPER_PRINT, jasperPrint);
				exporterXls.setParameter(JRExporterParameter.OUTPUT_FILE_NAME, sDestFileName);
				exporterXls.setParameter(JRXlsExporterParameter.IS_ONE_PAGE_PER_SHEET, Boolean.TRUE);
		
				exporterXls.exportReport();
			}
			
		} else if(this.sTipoArchivoReporte=="EXCEL2"||this.sTipoArchivoReporte=="EXCEL2_2") {
			//sDestFileName+=".xlsx";
			
			if(this.sTipoReporte.equals("NORMAL")) {
				this.generarExcelReporteConfiguracionPunVens(sAccionBusqueda,sTipoArchivoReporte,configuracionpunvensParaReportes);
			
			} else if(this.sTipoReporte.equals("FORMULARIO")){
				this.generarExcelReporteVerticalConfiguracionPunVens(sAccionBusqueda,sTipoArchivoReporte,configuracionpunvensParaReportes,false);
			
			} else if(this.sTipoReporte.equals("DINAMICO")){
				
				if(this.sTipoReporteDinamico.equals("NORMAL")) {
					
					this.jButtonGenerarExcelReporteDinamicoConfiguracionPunVenActionPerformed(null);
					//this.generarExcelReporteConfiguracionPunVens(sAccionBusqueda,sTipoArchivoReporte,configuracionpunvensParaReportes);
					
				
				} else if(this.sTipoReporteDinamico.equals("FORMULARIO")){
					this.generarExcelReporteVerticalConfiguracionPunVens(sAccionBusqueda,sTipoArchivoReporte,configuracionpunvensParaReportes,true);
				
				} else if(this.sTipoReporteDinamico.equals("RELACIONES")){
					this.generarExcelReporteRelacionesConfiguracionPunVens(sAccionBusqueda,sTipoArchivoReporte,configuracionpunvensParaReportes,true);
				}
				
			} else if(this.sTipoReporte.equals("RELACIONES")){
				this.generarExcelReporteRelacionesConfiguracionPunVens(sAccionBusqueda,sTipoArchivoReporte,configuracionpunvensParaReportes,false);
			}
		}
		
		if(this.sTipoArchivoReporte=="HTML"||this.sTipoArchivoReporte=="PDF"||this.sTipoArchivoReporte=="XML"||this.sTipoArchivoReporte=="WORD"||this.sTipoArchivoReporte=="EXCEL") {				
			JOptionPane.showMessageDialog(this,"REPORTE "+sDestFileName+" GENERADO SATISFACTORIAMENTE","REPORTES ",JOptionPane.INFORMATION_MESSAGE);
		}
	}
	
	public void generarExcelReporteConfiguracionPunVens(String sAccionBusqueda,String sTipoArchivoReporte,List<ConfiguracionPunVen> configuracionpunvensParaReportes) throws Exception {
	 	Workbook workbook = null;
		String sPath=this.parametroGeneralUsuario.getpath_exportar()+"configuracionpunven";
		
		if(sTipoArchivoReporte=="EXCEL2") {
			workbook = new HSSFWorkbook();
			sPath+=".xls";
		
		} else if(sTipoArchivoReporte=="EXCEL2_2") {
			workbook = new XSSFWorkbook();
			sPath+=".xlsx";			
		}
		
		
		
		Sheet sheet = workbook.createSheet("ConfiguracionPunVens");
         
        int iRow = 0;
		int iCell = 0;
		Row row =null;
		Cell cell=null;
		
		row = sheet.createRow(iRow++);
		
		this.generarExcelReporteHeaderConfiguracionPunVen("NORMAL",row,workbook);
		
		CellStyle cellStyleData = Funciones2.getStyleTitulo(workbook,"ZEBRA");
		CellStyle cellStyleDataAux=null;
		
		int i=0;
		
      	for(ConfiguracionPunVen configuracionpunven : configuracionpunvensParaReportes) {            
			row = sheet.createRow(iRow++);
			iCell = 0;
			
			cellStyleDataAux=null;
			
			if(i%2==0) {
				cellStyleDataAux=cellStyleData;
			}
			
			ConfiguracionPunVenConstantesFunciones.generarExcelReporteDataConfiguracionPunVen("NORMAL",row,workbook,configuracionpunven,cellStyleDataAux);
		
			
			/*
            Cell cell0 = row.createCell(0);
            cell0.setCellValue(country.getName());
            Cell cell1 = row.createCell(1);
            cell1.setCellValue(country.getShortCode());
			*/
			
			i++;
        }
        
		
        FileOutputStream fileOutputStream = new FileOutputStream(sPath);
		
        workbook.write(fileOutputStream);
		
        fileOutputStream.close();
		
		Constantes2.S_PATH_ULTIMO_ARCHIVO=sPath;
			
		if(this.parametroGeneralUsuario.getcon_mensaje_confirmacion() && !this.configuracionpunvenSessionBean.getEsGuardarRelacionado()) {//Constantes.ISMOSTRARMENSAJESMANTENIMIENTO && 
			JOptionPane.showMessageDialog(this,"EXPORTADO CORRECTAMENTE:"+sPath,"MANTENIMIENTO DE Configuracion Pun Ven",JOptionPane.INFORMATION_MESSAGE);
		}
	}
	
	public void generarExcelReporteHeaderConfiguracionPunVen(String sTipo,Row row,Workbook workbook) {
		
		ConfiguracionPunVenConstantesFunciones.generarExcelReporteHeaderConfiguracionPunVen(sTipo,row,workbook);
		
		/*
		Cell cell=null;
		int iCell=0;
		
		CellStyle cellStyle = workbook.createCellStyle();
		cellStyle.setFillBackgroundColor(IndexedColors.GREEN.getIndex());
		cellStyle.setFillPattern(CellStyle.ALIGN_FILL);
		*/
		
	}
	
	public void generarExcelReporteVerticalConfiguracionPunVens(String sAccionBusqueda,String sTipoArchivoReporte,List<ConfiguracionPunVen> configuracionpunvensParaReportes,Boolean paraDinamico) throws Exception {
	 	Workbook workbook = null;
		String sPath=this.parametroGeneralUsuario.getpath_exportar()+"configuracionpunven_vertical";
		
		if(sTipoArchivoReporte=="EXCEL2") {
			workbook = new HSSFWorkbook();
			sPath+=".xls";
		
		} else if(sTipoArchivoReporte=="EXCEL2_2") {
			workbook = new XSSFWorkbook();
			sPath+=".xlsx";			
		}
		
		
		
		Sheet sheet = workbook.createSheet("ConfiguracionPunVens");
         
        int iRow = 0;
		int iRowLast = 0;
		int iCell = 0;
		Row row =null;
		Cell cell=null;
		
		row = sheet.createRow(iRow++);
		
		CellStyle cellStyle = Funciones2.getStyleTitulo(workbook,"ZEBRA");;
		
		CellStyle cellStyleTitulo = Funciones2.getStyleTitulo(workbook,"PRINCIPAL_VERTICAL");
		
		
		for(ConfiguracionPunVen configuracionpunven : configuracionpunvensParaReportes) {
			row = sheet.createRow(iRow++);
			iRowLast=iRow - 1;
			
			cell = row.createCell(0);
			cell.setCellValue(ConfiguracionPunVenConstantesFunciones.getConfiguracionPunVenDescripcion(configuracionpunven));
			cell.setCellStyle(cellStyleTitulo);
			
			sheet.addMergedRegion(new CellRangeAddress(iRowLast,iRowLast,0,2));			
	
			


			if(!paraDinamico || (paraDinamico && this.existeColumnaReporteDinamico(ConfiguracionPunVenConstantesFunciones.LABEL_IDEMPRESA))) {
				row = sheet.createRow(iRow++);

				cell = row.createCell(0);
				cell.setCellValue(ConfiguracionPunVenConstantesFunciones.LABEL_IDEMPRESA);
				cell.setCellStyle(cellStyle);

				cell = row.createCell(1);
				cell.setCellValue(configuracionpunven.getempresa_descripcion());


			}


			if(!paraDinamico || (paraDinamico && this.existeColumnaReporteDinamico(ConfiguracionPunVenConstantesFunciones.LABEL_IDSUCURSAL))) {
				row = sheet.createRow(iRow++);

				cell = row.createCell(0);
				cell.setCellValue(ConfiguracionPunVenConstantesFunciones.LABEL_IDSUCURSAL);
				cell.setCellStyle(cellStyle);

				cell = row.createCell(1);
				cell.setCellValue(configuracionpunven.getsucursal_descripcion());


			}


			if(!paraDinamico || (paraDinamico && this.existeColumnaReporteDinamico(ConfiguracionPunVenConstantesFunciones.LABEL_IDBODEGA))) {
				row = sheet.createRow(iRow++);

				cell = row.createCell(0);
				cell.setCellValue(ConfiguracionPunVenConstantesFunciones.LABEL_IDBODEGA);
				cell.setCellStyle(cellStyle);

				cell = row.createCell(1);
				cell.setCellValue(configuracionpunven.getbodega_descripcion());


			}


			if(!paraDinamico || (paraDinamico && this.existeColumnaReporteDinamico(ConfiguracionPunVenConstantesFunciones.LABEL_IDCUENTACONTABLEEFECTIVO))) {
				row = sheet.createRow(iRow++);

				cell = row.createCell(0);
				cell.setCellValue(ConfiguracionPunVenConstantesFunciones.LABEL_IDCUENTACONTABLEEFECTIVO);
				cell.setCellStyle(cellStyle);

				cell = row.createCell(1);
				cell.setCellValue(configuracionpunven.getcuentacontableefectivo_descripcion());


			}


			if(!paraDinamico || (paraDinamico && this.existeColumnaReporteDinamico(ConfiguracionPunVenConstantesFunciones.LABEL_IDCUENTACONTABLEICE))) {
				row = sheet.createRow(iRow++);

				cell = row.createCell(0);
				cell.setCellValue(ConfiguracionPunVenConstantesFunciones.LABEL_IDCUENTACONTABLEICE);
				cell.setCellStyle(cellStyle);

				cell = row.createCell(1);
				cell.setCellValue(configuracionpunven.getcuentacontableice_descripcion());


			}


			if(!paraDinamico || (paraDinamico && this.existeColumnaReporteDinamico(ConfiguracionPunVenConstantesFunciones.LABEL_IDCUENTACONTABLEOTROS))) {
				row = sheet.createRow(iRow++);

				cell = row.createCell(0);
				cell.setCellValue(ConfiguracionPunVenConstantesFunciones.LABEL_IDCUENTACONTABLEOTROS);
				cell.setCellStyle(cellStyle);

				cell = row.createCell(1);
				cell.setCellValue(configuracionpunven.getcuentacontableotros_descripcion());


			}


			if(!paraDinamico || (paraDinamico && this.existeColumnaReporteDinamico(ConfiguracionPunVenConstantesFunciones.LABEL_IDCLIENTECONSUMIDORFINAL))) {
				row = sheet.createRow(iRow++);

				cell = row.createCell(0);
				cell.setCellValue(ConfiguracionPunVenConstantesFunciones.LABEL_IDCLIENTECONSUMIDORFINAL);
				cell.setCellStyle(cellStyle);

				cell = row.createCell(1);
				cell.setCellValue(configuracionpunven.getclienteconsumidorfinal_descripcion());


			}


			if(!paraDinamico || (paraDinamico && this.existeColumnaReporteDinamico(ConfiguracionPunVenConstantesFunciones.LABEL_IDTIPODOCUMENTOFACTURA))) {
				row = sheet.createRow(iRow++);

				cell = row.createCell(0);
				cell.setCellValue(ConfiguracionPunVenConstantesFunciones.LABEL_IDTIPODOCUMENTOFACTURA);
				cell.setCellStyle(cellStyle);

				cell = row.createCell(1);
				cell.setCellValue(configuracionpunven.gettipodocumentofactura_descripcion());


			}


			if(!paraDinamico || (paraDinamico && this.existeColumnaReporteDinamico(ConfiguracionPunVenConstantesFunciones.LABEL_IDTIPODOCUMENTONOTAVENTA))) {
				row = sheet.createRow(iRow++);

				cell = row.createCell(0);
				cell.setCellValue(ConfiguracionPunVenConstantesFunciones.LABEL_IDTIPODOCUMENTONOTAVENTA);
				cell.setCellStyle(cellStyle);

				cell = row.createCell(1);
				cell.setCellValue(configuracionpunven.gettipodocumentonotaventa_descripcion());


			}


			if(!paraDinamico || (paraDinamico && this.existeColumnaReporteDinamico(ConfiguracionPunVenConstantesFunciones.LABEL_IDTIPODOCUMENTONOTACREDITO))) {
				row = sheet.createRow(iRow++);

				cell = row.createCell(0);
				cell.setCellValue(ConfiguracionPunVenConstantesFunciones.LABEL_IDTIPODOCUMENTONOTACREDITO);
				cell.setCellStyle(cellStyle);

				cell = row.createCell(1);
				cell.setCellValue(configuracionpunven.gettipodocumentonotacredito_descripcion());


			}


			if(!paraDinamico || (paraDinamico && this.existeColumnaReporteDinamico(ConfiguracionPunVenConstantesFunciones.LABEL_IDTIPODOCUMENTOTARJETACREDITO))) {
				row = sheet.createRow(iRow++);

				cell = row.createCell(0);
				cell.setCellValue(ConfiguracionPunVenConstantesFunciones.LABEL_IDTIPODOCUMENTOTARJETACREDITO);
				cell.setCellStyle(cellStyle);

				cell = row.createCell(1);
				cell.setCellValue(configuracionpunven.gettipodocumentotarjetacredito_descripcion());


			}


			if(!paraDinamico || (paraDinamico && this.existeColumnaReporteDinamico(ConfiguracionPunVenConstantesFunciones.LABEL_IDFORMATOFACTURA))) {
				row = sheet.createRow(iRow++);

				cell = row.createCell(0);
				cell.setCellValue(ConfiguracionPunVenConstantesFunciones.LABEL_IDFORMATOFACTURA);
				cell.setCellStyle(cellStyle);

				cell = row.createCell(1);
				cell.setCellValue(configuracionpunven.getformatofactura_descripcion());


			}


			if(!paraDinamico || (paraDinamico && this.existeColumnaReporteDinamico(ConfiguracionPunVenConstantesFunciones.LABEL_IDFORMATONOTAVENTA))) {
				row = sheet.createRow(iRow++);

				cell = row.createCell(0);
				cell.setCellValue(ConfiguracionPunVenConstantesFunciones.LABEL_IDFORMATONOTAVENTA);
				cell.setCellStyle(cellStyle);

				cell = row.createCell(1);
				cell.setCellValue(configuracionpunven.getformatonotaventa_descripcion());


			}


			if(!paraDinamico || (paraDinamico && this.existeColumnaReporteDinamico(ConfiguracionPunVenConstantesFunciones.LABEL_IDFORMATONOTACREDITO))) {
				row = sheet.createRow(iRow++);

				cell = row.createCell(0);
				cell.setCellValue(ConfiguracionPunVenConstantesFunciones.LABEL_IDFORMATONOTACREDITO);
				cell.setCellStyle(cellStyle);

				cell = row.createCell(1);
				cell.setCellValue(configuracionpunven.getformatonotacredito_descripcion());


			}


			if(!paraDinamico || (paraDinamico && this.existeColumnaReporteDinamico(ConfiguracionPunVenConstantesFunciones.LABEL_IDTRANSACCIONFACTURA))) {
				row = sheet.createRow(iRow++);

				cell = row.createCell(0);
				cell.setCellValue(ConfiguracionPunVenConstantesFunciones.LABEL_IDTRANSACCIONFACTURA);
				cell.setCellStyle(cellStyle);

				cell = row.createCell(1);
				cell.setCellValue(configuracionpunven.gettransaccionfactura_descripcion());


			}


			if(!paraDinamico || (paraDinamico && this.existeColumnaReporteDinamico(ConfiguracionPunVenConstantesFunciones.LABEL_IDTRANSACCIONNOTAVENTA))) {
				row = sheet.createRow(iRow++);

				cell = row.createCell(0);
				cell.setCellValue(ConfiguracionPunVenConstantesFunciones.LABEL_IDTRANSACCIONNOTAVENTA);
				cell.setCellStyle(cellStyle);

				cell = row.createCell(1);
				cell.setCellValue(configuracionpunven.gettransaccionnotaventa_descripcion());


			}


			if(!paraDinamico || (paraDinamico && this.existeColumnaReporteDinamico(ConfiguracionPunVenConstantesFunciones.LABEL_IDTRANSACCIONNOTACREDITO))) {
				row = sheet.createRow(iRow++);

				cell = row.createCell(0);
				cell.setCellValue(ConfiguracionPunVenConstantesFunciones.LABEL_IDTRANSACCIONNOTACREDITO);
				cell.setCellStyle(cellStyle);

				cell = row.createCell(1);
				cell.setCellValue(configuracionpunven.gettransaccionnotacredito_descripcion());


			}


			if(!paraDinamico || (paraDinamico && this.existeColumnaReporteDinamico(ConfiguracionPunVenConstantesFunciones.LABEL_IDTRANSACCIONCUENTAFACTURA))) {
				row = sheet.createRow(iRow++);

				cell = row.createCell(0);
				cell.setCellValue(ConfiguracionPunVenConstantesFunciones.LABEL_IDTRANSACCIONCUENTAFACTURA);
				cell.setCellStyle(cellStyle);

				cell = row.createCell(1);
				cell.setCellValue(configuracionpunven.gettransaccioncuentafactura_descripcion());


			}


			if(!paraDinamico || (paraDinamico && this.existeColumnaReporteDinamico(ConfiguracionPunVenConstantesFunciones.LABEL_IDTRANSACCIONCUENTANOTAVENTA))) {
				row = sheet.createRow(iRow++);

				cell = row.createCell(0);
				cell.setCellValue(ConfiguracionPunVenConstantesFunciones.LABEL_IDTRANSACCIONCUENTANOTAVENTA);
				cell.setCellStyle(cellStyle);

				cell = row.createCell(1);
				cell.setCellValue(configuracionpunven.gettransaccioncuentanotaventa_descripcion());


			}


			if(!paraDinamico || (paraDinamico && this.existeColumnaReporteDinamico(ConfiguracionPunVenConstantesFunciones.LABEL_IDTRANSACCIONCUENTANOTACREDITO))) {
				row = sheet.createRow(iRow++);

				cell = row.createCell(0);
				cell.setCellValue(ConfiguracionPunVenConstantesFunciones.LABEL_IDTRANSACCIONCUENTANOTACREDITO);
				cell.setCellStyle(cellStyle);

				cell = row.createCell(1);
				cell.setCellValue(configuracionpunven.gettransaccioncuentanotacredito_descripcion());


			}						
        }
        
		
        FileOutputStream fileOutputStream = new FileOutputStream(sPath);
		
        workbook.write(fileOutputStream);
		
        fileOutputStream.close();
		
		Constantes2.S_PATH_ULTIMO_ARCHIVO=sPath;
			
		if(this.parametroGeneralUsuario.getcon_mensaje_confirmacion() && !this.configuracionpunvenSessionBean.getEsGuardarRelacionado()) {//Constantes.ISMOSTRARMENSAJESMANTENIMIENTO && 
			JOptionPane.showMessageDialog(this,"EXPORTADO CORRECTAMENTE:"+sPath,"MANTENIMIENTO DE Configuracion Pun Ven",JOptionPane.INFORMATION_MESSAGE);
		}
	}
	
	public void generarExcelReporteRelacionesConfiguracionPunVens(String sAccionBusqueda,String sTipoArchivoReporte,List<ConfiguracionPunVen> configuracionpunvensParaReportes,Boolean paraDinamico) throws Exception {
		
		ArrayList<Classe> classes=new ArrayList<Classe>();
		List<ConfiguracionPunVen> configuracionpunvensRespaldo=null;
		
		classes=ConfiguracionPunVenConstantesFunciones.getClassesRelationshipsOfConfiguracionPunVen(new ArrayList<Classe>(),DeepLoadType.NONE,false);
					
		this.datosDeep=new DatosDeep();
		
		this.datosDeep.setIsDeep(false);
		this.datosDeep.setDeepLoadType(DeepLoadType.INCLUDE);
		this.datosDeep.setClases(classes);
			
		this.datosCliente.setDatosDeepParametros(false, DeepLoadType.INCLUDE, classes, "");
		this.datosCliente.setIsConDeep(true);	
		this.datosCliente.setIsConExportar(false);
		
						
		this.configuracionpunvenLogic.setDatosCliente(this.datosCliente);
		this.configuracionpunvenLogic.setDatosDeep(this.datosDeep);
		this.configuracionpunvenLogic.setIsConDeep(true);
		
		configuracionpunvensRespaldo=this.configuracionpunvenLogic.getConfiguracionPunVens();
		
		this.configuracionpunvenLogic.setConfiguracionPunVens(configuracionpunvensParaReportes);	
		this.configuracionpunvenLogic.deepLoadsWithConnection(false, DeepLoadType.INCLUDE, classes,"");
		
		configuracionpunvensParaReportes=this.configuracionpunvenLogic.getConfiguracionPunVens();
		this.configuracionpunvenLogic.setConfiguracionPunVens(configuracionpunvensRespaldo);
		
		
	 	Workbook workbook = null;
		String sPath=this.parametroGeneralUsuario.getpath_exportar()+"configuracionpunven_relacion";
		
		if(sTipoArchivoReporte=="EXCEL2") {
			workbook = new HSSFWorkbook();
			sPath+=".xls";
		
		} else if(sTipoArchivoReporte=="EXCEL2_2") {
			workbook = new XSSFWorkbook();
			sPath+=".xlsx";			
		}
		
		
		
		Sheet sheet = workbook.createSheet("ConfiguracionPunVens");
         
        int iRow = 0;
		int iRowLast = 0;
		int iCell = 0;
		Row row =null;
		Cell cell=null;
		
		row = sheet.createRow(iRow++);
		
		this.generarExcelReporteHeaderConfiguracionPunVen("NORMAL",row,workbook);
		
		int i=0;
		int i2=0;
		
		CellStyle cellStyleData = Funciones2.getStyleTitulo(workbook,"ZEBRA");
		CellStyle cellStyleDataTitulo = Funciones2.getStyleTitulo(workbook,"PRINCIPAL");
		CellStyle cellStyleDataZebra = Funciones2.getStyleTitulo(workbook,"ZEBRA");
		CellStyle cellStyleDataAux =null;
		CellStyle cellStyleDataAuxHijo =null;
		
		for(ConfiguracionPunVen configuracionpunven : configuracionpunvensParaReportes) {			
			if(i!=0) {
				row = sheet.createRow(iRow++);				
				this.generarExcelReporteHeaderConfiguracionPunVen("NORMAL",row,workbook);
			}
			
			cellStyleDataAux=null;
			
			if(i%2==0) {
				//cellStyleDataAux=cellStyleData;
			}
			
			row = sheet.createRow(iRow++);						
			ConfiguracionPunVenConstantesFunciones.generarExcelReporteDataConfiguracionPunVen("NORMAL",row,workbook,configuracionpunven,cellStyleDataAux);
		
			
			
			
			i++;
        }
        
		/*
		row = sheet.createRow(iRow++);
		iRowLast=iRow - 1;
			
		cell = row.createCell(0);
		cell.setCellValue(ConfiguracionPunVenConstantesFunciones.getConfiguracionPunVenDescripcion(configuracionpunven));
		cell.setCellStyle(cellStyleTitulo);
			
		sheet.addMergedRegion(new CellRangeAddress(iRowLast,iRowLast,0,2));			
		*/
		
			
		
        FileOutputStream fileOutputStream = new FileOutputStream(sPath);
		
        workbook.write(fileOutputStream);
		
        fileOutputStream.close();
		
		Constantes2.S_PATH_ULTIMO_ARCHIVO=sPath;
			
		if(this.parametroGeneralUsuario.getcon_mensaje_confirmacion() && !this.configuracionpunvenSessionBean.getEsGuardarRelacionado()) {//Constantes.ISMOSTRARMENSAJESMANTENIMIENTO && 
			JOptionPane.showMessageDialog(this,"EXPORTADO CORRECTAMENTE:"+sPath,"MANTENIMIENTO DE Configuracion Pun Ven",JOptionPane.INFORMATION_MESSAGE);
		}
	}
	
	
	public Boolean existeColumnaReporteDinamico(String sColumna) {
		Boolean existe=false;
		
		Reporte reporte=new Reporte();
		
		
		for(int index:this.jInternalFrameReporteDinamicoConfiguracionPunVen.getjListColumnasSelectReporte().getSelectedIndices()) {
			reporte=(Reporte)this.jInternalFrameReporteDinamicoConfiguracionPunVen.getjListColumnasSelectReporte().getModel().getElementAt(index);
			
			if(sColumna.equals(reporte.getsCodigo())) {
				existe=true;
				break;
			}
		
		}
		
		
		return existe;
	}
	
	public Boolean existeRelacionReporteDinamico(String sColumna) {
		Boolean existe=false;
		
		Reporte reporte=new Reporte();
		
		
		for(int index:this.jInternalFrameReporteDinamicoConfiguracionPunVen.getjListRelacionesSelectReporte().getSelectedIndices()) {
			reporte=(Reporte)this.jInternalFrameReporteDinamicoConfiguracionPunVen.getjListRelacionesSelectReporte().getModel().getElementAt(index);
			
			if(sColumna.equals(reporte.getsCodigo())) {
				existe=true;
				break;
			}
		
		}
		
		
		return existe;
	}
	
	public void startProcessConfiguracionPunVen() throws Exception {		
		this.startProcessConfiguracionPunVen(true);
	}
	
	public void startProcessConfiguracionPunVen(Boolean conSplash) throws Exception {		
		//FuncionesSwing.enableDisablePanels(false,this.jTabbedPaneBusquedasConfiguracionPunVen ,this.jPanelParametrosReportesConfiguracionPunVen, this.jScrollPanelDatosConfiguracionPunVen,this.jPanelPaginacionConfiguracionPunVen, this.jScrollPanelDatosEdicionConfiguracionPunVen, this.jPanelAccionesConfiguracionPunVen,this.jPanelAccionesFormularioConfiguracionPunVen,this.jmenuBarConfiguracionPunVen,this.jmenuBarDetalleConfiguracionPunVen,this.jTtoolBarConfiguracionPunVen,this.jTtoolBarDetalleConfiguracionPunVen);		
		
		final JTabbedPane jTabbedPaneBusquedasConfiguracionPunVen=this.jTabbedPaneBusquedasConfiguracionPunVen; 
		
		final JPanel jPanelParametrosReportesConfiguracionPunVen=this.jPanelParametrosReportesConfiguracionPunVen;
		//final JScrollPane jScrollPanelDatosConfiguracionPunVen=this.jScrollPanelDatosConfiguracionPunVen;
		final JTable jTableDatosConfiguracionPunVen=this.jTableDatosConfiguracionPunVen;		
		final JPanel jPanelPaginacionConfiguracionPunVen=this.jPanelPaginacionConfiguracionPunVen;
		//final JScrollPane jScrollPanelDatosEdicionConfiguracionPunVen=this.jScrollPanelDatosEdicionConfiguracionPunVen;
		final JPanel jPanelAccionesConfiguracionPunVen=this.jPanelAccionesConfiguracionPunVen;
		
		JPanel jPanelCamposAuxiliarConfiguracionPunVen=new JPanelMe();
		JPanel jPanelAccionesFormularioAuxiliarConfiguracionPunVen=new JPanelMe();
		
		if(this.jInternalFrameDetalleFormConfiguracionPunVen!=null) {
			jPanelCamposAuxiliarConfiguracionPunVen=this.jInternalFrameDetalleFormConfiguracionPunVen.jPanelCamposConfiguracionPunVen;
			jPanelAccionesFormularioAuxiliarConfiguracionPunVen=this.jInternalFrameDetalleFormConfiguracionPunVen.jPanelAccionesFormularioConfiguracionPunVen;
		}
		
		final JPanel jPanelCamposConfiguracionPunVen=jPanelCamposAuxiliarConfiguracionPunVen;
		final JPanel jPanelAccionesFormularioConfiguracionPunVen=jPanelAccionesFormularioAuxiliarConfiguracionPunVen;
		
		
		final JMenuBar jmenuBarConfiguracionPunVen=this.jmenuBarConfiguracionPunVen;
		final JToolBar jTtoolBarConfiguracionPunVen=this.jTtoolBarConfiguracionPunVen;		
		
		
		JMenuBar jmenuBarDetalleAuxiliarConfiguracionPunVen=new JMenuBar();
		JToolBar jTtoolBarDetalleAuxiliarConfiguracionPunVen=new JToolBar();		
		
		if(this.jInternalFrameDetalleFormConfiguracionPunVen!=null) {
			jmenuBarDetalleAuxiliarConfiguracionPunVen=this.jInternalFrameDetalleFormConfiguracionPunVen.jmenuBarDetalleConfiguracionPunVen;
			jTtoolBarDetalleAuxiliarConfiguracionPunVen=this.jInternalFrameDetalleFormConfiguracionPunVen.jTtoolBarDetalleConfiguracionPunVen;
		}
		
		final JMenuBar jmenuBarDetalleConfiguracionPunVen=jmenuBarDetalleAuxiliarConfiguracionPunVen;
		final JToolBar jTtoolBarDetalleConfiguracionPunVen=jTtoolBarDetalleAuxiliarConfiguracionPunVen;		
		
		
		
		
		
		if(Constantes2.CON_PROCESO_HILO) {
			Thread threadRunnableProcess;
			ProcessRunnable processRunnable;
			
			processRunnable=new ProcessRunnable();
			
			processRunnable.setsTipo("START");
			processRunnable.setDesktop(jDesktopPane);
			processRunnable.setModuloActual(moduloActual);
			processRunnable.setModuloUsuarioSeleccionado(moduloActual);
			processRunnable.setOpcionActual(opcionActual);
			processRunnable.setParametroGeneralSg(parametroGeneralSg);
			processRunnable.setParametroGeneralUsuario(parametroGeneralUsuario);
			processRunnable.setResumenUsuarioActual(resumenUsuarioActual);
			processRunnable.setUsuarioActual(usuarioActual);
			
			processRunnable.jTabbedPaneBusquedas=jTabbedPaneBusquedasConfiguracionPunVen;
			processRunnable.jPanelParametrosReportes=jPanelParametrosReportesConfiguracionPunVen;
			processRunnable.jTableDatos=jTableDatosConfiguracionPunVen;
			processRunnable.jPanelCampos=jPanelCamposConfiguracionPunVen;
			processRunnable.jPanelPaginacion=jPanelPaginacionConfiguracionPunVen;
			processRunnable.jPanelAcciones=jPanelAccionesConfiguracionPunVen;
			processRunnable.jPanelAccionesFormulario=jPanelAccionesFormularioConfiguracionPunVen;
			
			
			processRunnable.jmenuBar=jmenuBarConfiguracionPunVen;
			processRunnable.jmenuBarDetalle=jmenuBarDetalleConfiguracionPunVen;
			processRunnable.jTtoolBar=jTtoolBarConfiguracionPunVen;
			processRunnable.jTtoolBarDetalle=jTtoolBarDetalleConfiguracionPunVen;
			processRunnable.jInternalFrameBase=this;
			
			//processRunnable.CargarObjetosRendimientoCriticoModuloInventario();
			
			
			threadRunnableProcess=new Thread(processRunnable);//.start();
					
			threadRunnableProcess.start();
			
		} else {
			FuncionesSwing.enableDisablePanels(false,jTabbedPaneBusquedasConfiguracionPunVen ,jPanelParametrosReportesConfiguracionPunVen,jTableDatosConfiguracionPunVen, /*jScrollPanelDatosConfiguracionPunVen,*/jPanelCamposConfiguracionPunVen,jPanelPaginacionConfiguracionPunVen, /*jScrollPanelDatosEdicionConfiguracionPunVen,*/ jPanelAccionesConfiguracionPunVen,jPanelAccionesFormularioConfiguracionPunVen,jmenuBarConfiguracionPunVen,jmenuBarDetalleConfiguracionPunVen,jTtoolBarConfiguracionPunVen,jTtoolBarDetalleConfiguracionPunVen);
		
			startProcess();//this.
		}
						
		/*
		if(conSplash) {
			SwingUtilities.invokeLater(new Runnable() {
			      public void run() {
			    	  try {
							FuncionesSwing.enableDisablePanels(false,jTabbedPaneBusquedasConfiguracionPunVen ,jPanelParametrosReportesConfiguracionPunVen, jScrollPanelDatosConfiguracionPunVen,jPanelPaginacionConfiguracionPunVen, jScrollPanelDatosEdicionConfiguracionPunVen, jPanelAccionesConfiguracionPunVen,jPanelAccionesFormularioConfiguracionPunVen,jmenuBarConfiguracionPunVen,jmenuBarDetalleConfiguracionPunVen,jTtoolBarConfiguracionPunVen,jTtoolBarDetalleConfiguracionPunVen);
						
							startProcess();//this.
							
						} catch (Exception e) {
							// TODO Auto-generated catch block
							e.printStackTrace();
						}
			      }
			});
		}
		*/
	}
	
	public void finishProcessConfiguracionPunVen() {// throws Exception 
		this.finishProcessConfiguracionPunVen(true);
	}
	
	public void finishProcessConfiguracionPunVen(Boolean conSplash) {// throws Exception 
		//FuncionesSwing.enableDisablePanels(true,this.jTabbedPaneBusquedasConfiguracionPunVen ,this.jPanelParametrosReportesConfiguracionPunVen, this.jScrollPanelDatosConfiguracionPunVen,this.jPanelPaginacionConfiguracionPunVen, this.jScrollPanelDatosEdicionConfiguracionPunVen, this.jPanelAccionesConfiguracionPunVen,this.jPanelAccionesFormularioConfiguracionPunVen,this.jmenuBarConfiguracionPunVen,this.jmenuBarDetalleConfiguracionPunVen,this.jTtoolBarConfiguracionPunVen,this.jTtoolBarDetalleConfiguracionPunVen);		
		
		final JTabbedPane jTabbedPaneBusquedasConfiguracionPunVen=this.jTabbedPaneBusquedasConfiguracionPunVen; 
		
		final JPanel jPanelParametrosReportesConfiguracionPunVen=this.jPanelParametrosReportesConfiguracionPunVen;
		//final JScrollPane jScrollPanelDatosConfiguracionPunVen=this.jScrollPanelDatosConfiguracionPunVen;
		final JTable jTableDatosConfiguracionPunVen=this.jTableDatosConfiguracionPunVen;		
		final JPanel jPanelPaginacionConfiguracionPunVen=this.jPanelPaginacionConfiguracionPunVen;
		//final JScrollPane jScrollPanelDatosEdicionConfiguracionPunVen=this.jScrollPanelDatosEdicionConfiguracionPunVen;
		final JPanel jPanelAccionesConfiguracionPunVen=this.jPanelAccionesConfiguracionPunVen;
		
		JPanel jPanelCamposAuxiliarConfiguracionPunVen=new JPanel();
		JPanel jPanelAccionesFormularioAuxiliarConfiguracionPunVen=new JPanel();
		
		if(this.jInternalFrameDetalleFormConfiguracionPunVen!=null) {
			jPanelCamposAuxiliarConfiguracionPunVen=this.jInternalFrameDetalleFormConfiguracionPunVen.jPanelCamposConfiguracionPunVen;
			jPanelAccionesFormularioAuxiliarConfiguracionPunVen=this.jInternalFrameDetalleFormConfiguracionPunVen.jPanelAccionesFormularioConfiguracionPunVen;
		}
		
		final JPanel jPanelCamposConfiguracionPunVen=jPanelCamposAuxiliarConfiguracionPunVen;
		final JPanel jPanelAccionesFormularioConfiguracionPunVen=jPanelAccionesFormularioAuxiliarConfiguracionPunVen;
		
		
		final JMenuBar jmenuBarConfiguracionPunVen=this.jmenuBarConfiguracionPunVen;		
		final JToolBar jTtoolBarConfiguracionPunVen=this.jTtoolBarConfiguracionPunVen;
				
		JMenuBar jmenuBarDetalleAuxiliarConfiguracionPunVen=new JMenuBar();
		JToolBar jTtoolBarDetalleAuxiliarConfiguracionPunVen=new JToolBar();
		
		if(this.jInternalFrameDetalleFormConfiguracionPunVen!=null) {
			jmenuBarDetalleAuxiliarConfiguracionPunVen=this.jInternalFrameDetalleFormConfiguracionPunVen.jmenuBarDetalleConfiguracionPunVen;
			jTtoolBarDetalleAuxiliarConfiguracionPunVen=this.jInternalFrameDetalleFormConfiguracionPunVen.jTtoolBarDetalleConfiguracionPunVen;		
		}
		
		final JMenuBar jmenuBarDetalleConfiguracionPunVen=jmenuBarDetalleAuxiliarConfiguracionPunVen;
		final JToolBar jTtoolBarDetalleConfiguracionPunVen=jTtoolBarDetalleAuxiliarConfiguracionPunVen;
		
		
		
		if(Constantes2.CON_PROCESO_HILO) {
			Thread threadRunnableProcess;
			ProcessRunnable processRunnable;
			
			processRunnable=new ProcessRunnable();
			
			processRunnable.setsTipo("END");
			processRunnable.setDesktop(jDesktopPane);
			processRunnable.setModuloActual(moduloActual);
			processRunnable.setModuloUsuarioSeleccionado(moduloActual);
			processRunnable.setOpcionActual(opcionActual);
			processRunnable.setParametroGeneralSg(parametroGeneralSg);
			processRunnable.setParametroGeneralUsuario(parametroGeneralUsuario);
			processRunnable.setResumenUsuarioActual(resumenUsuarioActual);
			processRunnable.setUsuarioActual(usuarioActual);
			
			processRunnable.jTabbedPaneBusquedas=jTabbedPaneBusquedasConfiguracionPunVen;
			processRunnable.jPanelParametrosReportes=jPanelParametrosReportesConfiguracionPunVen;
			processRunnable.jTableDatos=jTableDatosConfiguracionPunVen;
			processRunnable.jPanelCampos=jPanelCamposConfiguracionPunVen;
			processRunnable.jPanelPaginacion=jPanelPaginacionConfiguracionPunVen;
			processRunnable.jPanelAcciones=jPanelAccionesConfiguracionPunVen;
			processRunnable.jPanelAccionesFormulario=jPanelAccionesFormularioConfiguracionPunVen;
			
			
			processRunnable.jmenuBar=jmenuBarConfiguracionPunVen;
			processRunnable.jmenuBarDetalle=jmenuBarDetalleConfiguracionPunVen;
			processRunnable.jTtoolBar=jTtoolBarConfiguracionPunVen;
			processRunnable.jTtoolBarDetalle=jTtoolBarDetalleConfiguracionPunVen;
			processRunnable.jInternalFrameBase=this;
			
			//processRunnable.CargarObjetosRendimientoCriticoModuloInventario();
			
			
			threadRunnableProcess=new Thread(processRunnable);//.start();
					
			threadRunnableProcess.start();
			
		} else {
			if(conSplash) {
				SwingUtilities.invokeLater(new RunnableProceso(true,this,jTabbedPaneBusquedasConfiguracionPunVen ,jPanelParametrosReportesConfiguracionPunVen, jTableDatosConfiguracionPunVen,/*jScrollPanelDatosConfiguracionPunVen,*/jPanelCamposConfiguracionPunVen,jPanelPaginacionConfiguracionPunVen, /*jScrollPanelDatosEdicionConfiguracionPunVen,*/ jPanelAccionesConfiguracionPunVen,jPanelAccionesFormularioConfiguracionPunVen,jmenuBarConfiguracionPunVen,jmenuBarDetalleConfiguracionPunVen,jTtoolBarConfiguracionPunVen,jTtoolBarDetalleConfiguracionPunVen));
			}
		}						
	}
	
	/*
	public void habilitarDeshabilitarControlesConfiguracionPunVen(Boolean esHabilitar,Boolean conDetalle) {
		this.habilitarDeshabilitarToolBarConfiguracionPunVen(esHabilitar,conDetalle);
		this.habilitarDeshabilitarMenuConfiguracionPunVen(esHabilitar,conDetalle);
	}
	
	public void habilitarDeshabilitarToolBarConfiguracionPunVen(Boolean esHabilitar,Boolean conDetalle) {
		FuncionesSwing.enableDisableComponents(this.jTtoolBarConfiguracionPunVen,esHabilitar,1,1);
		
		if(conDetalle) {
			FuncionesSwing.enableDisableComponents(this.jTtoolBarDetalleConfiguracionPunVen,esHabilitar,1,1);
		}
	}
	
	public void habilitarDeshabilitarMenuConfiguracionPunVen(Boolean esHabilitar,Boolean conDetalle) {
		FuncionesSwing.enableDisableComponents(this.jmenuBarConfiguracionPunVen,esHabilitar,1,1);
		
		if(conDetalle) {
			FuncionesSwing.enableDisableComponents(this.jmenuBarDetalleConfiguracionPunVen,esHabilitar,1,1);
		}
	}
	*/
	
	
	
	public void procesarBusqueda(String sAccionBusqueda) throws Exception {		
		String  finalQueryPaginacion=this.configuracionpunvenConstantesFunciones.getsFinalQueryConfiguracionPunVen();
		String  finalQueryPaginacionTodos=this.configuracionpunvenConstantesFunciones.getsFinalQueryConfiguracionPunVen();
		
		Boolean esBusqueda=false;
		
		this.actualizarVariablesTipoReporte(true,false,false,"");
		/*
		this.sTipoReporteExtra="";
		this.esReporteDinamico=false;
		this.sPathReporteDinamico="";
		*/
		
		if(!sAccionBusqueda.equals("Todos"))	{
			esBusqueda=true;
		}
		
		this.arrDatoGeneral= new  ArrayList<DatoGeneral>();
		this.arrDatoGeneralNo= new  ArrayList<String>();
		
		ArrayList<String> arrColumnasGlobalesNo=ConfiguracionPunVenConstantesFunciones.getArrayColumnasGlobalesNoConfiguracionPunVen(this.arrDatoGeneral);
		ArrayList<String> arrColumnasGlobales=ConfiguracionPunVenConstantesFunciones.getArrayColumnasGlobalesConfiguracionPunVen(this.arrDatoGeneral,arrColumnasGlobalesNo);
		
			
		String  finalQueryGlobal="";
		
		finalQueryGlobal=Funciones.GetWhereGlobalConstants(this.parametroGeneralUsuario,this.moduloActual,!esBusqueda,esBusqueda,arrColumnasGlobales,ConfiguracionPunVenConstantesFunciones.TABLENAME);
		
		String sOrderBy="";
		
		
		sOrderBy=Funciones2.getFinalQueryOrderBy(this.arrOrderBy);
		
		
		if(!sOrderBy.equals("")) {			
			finalQueryPaginacion=sOrderBy;
			finalQueryPaginacionTodos=sOrderBy;
		}
		
		
		//INICIALIZA ELIMINADOS
		this.configuracionpunvensEliminados= new ArrayList<ConfiguracionPunVen>();
		
		if(!this.isEntroOnLoad) {
			this.onLoad();
		}/* else {
			this.isEntroOnLoad=false;
		}*/
		
		
		
				
		try	{		
			
			//this.startProcessConfiguracionPunVen();
		
				///*ConfiguracionPunVenSessionBean*/this.configuracionpunvenSessionBean=new ConfiguracionPunVenSessionBean();
			
			if(this.configuracionpunvenSessionBean==null) {
				this.configuracionpunvenSessionBean=new ConfiguracionPunVenSessionBean();
			}
			
			//ACTUALIZA EL TAMANIO DE PAGINACION DESDE EL COMBO
			if(this.sTipoPaginacion!=null && !this.sTipoPaginacion.equals("")) {
				if(!this.sTipoPaginacion.equals("TODOS")) {
					this.iNumeroPaginacion=Integer.parseInt(this.sTipoPaginacion);
				} else {
					this.iNumeroPaginacion=-1;
					this.iNumeroPaginacionPagina=-1;
				}
			} else {
				if(this.iNumeroPaginacion==null || (this.iNumeroPaginacion!=null && this.iNumeroPaginacion<=0)) {
					this.iNumeroPaginacion=ConfiguracionPunVenConstantesFunciones.INUMEROPAGINACION;
				}
			}
			
			this.pagination=new Pagination();
			this.pagination.setiFirstResult(this.iNumeroPaginacionPagina);
			this.pagination.setiMaxResults(this.iNumeroPaginacion);
			
			this.cargarDatosCliente();
			
			ArrayList<Classe> classes=new ArrayList<Classe>();
			
			classes=ConfiguracionPunVenConstantesFunciones.getClassesForeignKeysOfConfiguracionPunVen(new ArrayList<Classe>(),DeepLoadType.NONE);
			
		
			this.datosDeep=new DatosDeep();
			this.datosDeep.setIsDeep(false);
			this.datosDeep.setDeepLoadType(DeepLoadType.INCLUDE);
			this.datosDeep.setClases(classes);
			
			this.datosCliente.setDatosDeepParametros(false, DeepLoadType.INCLUDE, classes, "");
			this.datosCliente.setIsConDeep(true);
			
			if(false) {//this.conExportar
				this.datosCliente.setIsConExportar(true);
				this.datosCliente.setDatosExportarParametros(Funciones2.getTipoExportar(this.parametroGeneralUsuario),this.parametroGeneralUsuario.getcon_exportar_cabecera(),Funciones2.getTipoDelimiter(this.parametroGeneralUsuario),this.parametroGeneralUsuario.getpath_exportar()+"/configuracionpunven."+Funciones2.getTipoExtensionArchivoExportar(this.parametroGeneralUsuario));
			} else {
				this.datosCliente.setIsConExportar(false);
			}
			
			configuracionpunvensAux= new ArrayList<ConfiguracionPunVen>();
			
				
			configuracionpunvenLogic.setDatosCliente(this.datosCliente);
			configuracionpunvenLogic.setDatosDeep(this.datosDeep);
			configuracionpunvenLogic.setIsConDeep(true);
			
			
			configuracionpunvenLogic.getConfiguracionPunVenDataAccess().setIsForForeingsKeysDataRelationships(true);
			
			if(sAccionBusqueda.equals("Todos") || sAccionBusqueda.equals("Query"))	{	
				if(sAccionBusqueda.equals("Todos")) {
					//FALTA:PARA BUSQUEDAS POR CAMPO EN FORMULARIO
					//this.sFinalQueryGeneral="";
				}
				
				//ARCHITECTURE
				if(Constantes.ISUSAEJBLOGICLAYER) {	
					finalQueryGlobal=Funciones.GetFinalQueryAppendBusqueda(finalQueryGlobal, this.sFinalQueryGeneral,finalQueryPaginacionTodos );
					
					configuracionpunvenLogic.getTodosConfiguracionPunVens(finalQueryGlobal,pagination);
					
					//configuracionpunvenLogic.getTodosConfiguracionPunVensWithConnection(finalQueryGlobal,pagination);										
				
				} else if(Constantes.ISUSAEJBREMOTE) {
				} else if(Constantes.ISUSAEJBHOME) {
				}
				//ARCHITECTURE
				
				if(configuracionpunvenLogic.getConfiguracionPunVens()==null|| configuracionpunvenLogic.getConfiguracionPunVens().size()==0)	{
					
				
				}
				
				if(false && sTipoArchivoReporte!=""&&sTipoArchivoReporte!=null) {//this.isTipoArchivoReporte
					if(false) {//isMostrarTodosResultadosReporte
						this.pagination.setiFirstResult(-1);
						this.pagination.setiMaxResults(-1);
						
						//ARCHITECTURE
						if(Constantes.ISUSAEJBLOGICLAYER) {	
							configuracionpunvensAux= new ArrayList<ConfiguracionPunVen>();
							configuracionpunvensAux.addAll(configuracionpunvenLogic.getConfiguracionPunVens());						
						} else if(Constantes.ISUSAEJBREMOTE || Constantes.ISUSAEJBHOME) {
							configuracionpunvensAux= new ArrayList<ConfiguracionPunVen>();
							configuracionpunvensAux.addAll(configuracionpunvens);
						}
						//ARCHITECTURE
						
						//ARCHITECTURE
						if(Constantes.ISUSAEJBLOGICLAYER) {	
							configuracionpunvenLogic.getTodosConfiguracionPunVens(finalQueryGlobal+"",this.pagination);												
							
							//configuracionpunvenLogic.getTodosConfiguracionPunVensWithConnection(finalQueryGlobal+"",this.pagination);												
						} else if(Constantes.ISUSAEJBREMOTE) {
						} else if(Constantes.ISUSAEJBHOME) {
						}
						//ARCHITECTURE
						
					}
					
					this.generarReporteConfiguracionPunVens("Todos",configuracionpunvenLogic.getConfiguracionPunVens() );
					
					if(false) {//isMostrarTodosResultadosReporte						
						//ARCHITECTURE
						if(Constantes.ISUSAEJBLOGICLAYER) {	
							configuracionpunvenLogic.setConfiguracionPunVens(new ArrayList<ConfiguracionPunVen>());					
							configuracionpunvenLogic.getConfiguracionPunVens().addAll(configuracionpunvensAux);
						} else if(Constantes.ISUSAEJBREMOTE || Constantes.ISUSAEJBHOME) {
							configuracionpunvens=new ArrayList<ConfiguracionPunVen>();
							configuracionpunvens.addAll(configuracionpunvensAux);
						}
						//ARCHITECTURE
						
						this.pagination.setiFirstResult(this.iNumeroPaginacionPagina);
						this.pagination.setiMaxResults(this.iNumeroPaginacion);														
					}
				}
			}
			else if(sAccionBusqueda.equals("PorId")) {
				Long idConfiguracionPunVen=0L;
				
				if(this.idActual!=null && this.idActual!=0L) {
					idConfiguracionPunVen=this.idActual;
				
				} else if(this.idConfiguracionPunVenActual!=null && this.idConfiguracionPunVenActual!=0L) {
					idConfiguracionPunVen=idConfiguracionPunVenActual;
				}
				
					
				this.sDetalleReporte=ConfiguracionPunVenConstantesFunciones.getDetalleIndicePorId(idConfiguracionPunVen);
				
				this.configuracionpunvens=new ArrayList<ConfiguracionPunVen>();
				
				//ARCHITECTURE
				if(Constantes.ISUSAEJBLOGICLAYER) {					
					configuracionpunvenLogic.getEntity(idConfiguracionPunVen);
					
					//configuracionpunvenLogic.getEntityWithConnection(idConfiguracionPunVen);
				} else if(Constantes.ISUSAEJBREMOTE) {
				} else if(Constantes.ISUSAEJBHOME) {
				}
				//ARCHITECTURE
								
				if(Constantes.ISUSAEJBLOGICLAYER) {
					configuracionpunvenLogic.setConfiguracionPunVens(new ArrayList<ConfiguracionPunVen>());
					configuracionpunvenLogic.getConfiguracionPunVens().add(configuracionpunvenLogic.getConfiguracionPunVen());
				
				} else if(Constantes.ISUSAEJBREMOTE || Constantes.ISUSAEJBHOME) {
					this.configuracionpunvens=new ArrayList<ConfiguracionPunVen>();
					this.configuracionpunvens.add(configuracionpunven);
				}
				
				if(configuracionpunvenLogic.getConfiguracionPunVen()==null)	{
					
				
				}			
			}
			
		
			else if(sAccionBusqueda.equals("FK_IdBodega")) {
				this.sDetalleReporte=ConfiguracionPunVenConstantesFunciones.getDetalleIndiceFK_IdBodega(id_bodegaFK_IdBodega);

				
				//ARCHITECTURE
				if(Constantes.ISUSAEJBLOGICLAYER) {

					finalQueryGlobal=Funciones.GetFinalQueryAppendBusqueda(finalQueryGlobal, this.sFinalQueryGeneral,finalQueryPaginacion);

					configuracionpunvenLogic.getConfiguracionPunVensFK_IdBodega(finalQueryGlobal,pagination,id_bodegaFK_IdBodega);
				} else if(Constantes.ISUSAEJBREMOTE) {
				this.sDetalleReporte=ConfiguracionPunVenConstantesFunciones.getDetalleIndiceFK_IdBodega(id_bodegaFK_IdBodega);

				
				} else if(Constantes.ISUSAEJBHOME) {
				this.sDetalleReporte=ConfiguracionPunVenConstantesFunciones.getDetalleIndiceFK_IdBodega(id_bodegaFK_IdBodega);

				
				}
				//ARCHITECTURE

				Boolean isNoExiste=false;
				//ARCHITECTURE
				if(Constantes.ISUSAEJBLOGICLAYER) {
					isNoExiste=configuracionpunvenLogic.getConfiguracionPunVens()==null||configuracionpunvenLogic.getConfiguracionPunVens().size()==0;
				} else if(Constantes.ISUSAEJBREMOTE||Constantes.ISUSAEJBHOME) {
					isNoExiste=configuracionpunvens==null|| configuracionpunvens.size()==0;
				}
				//ARCHITECTURE

		if(false && sTipoArchivoReporte!=""&&sTipoArchivoReporte!=null) {//this.isTipoArchivoReporte
			if(false) {//isMostrarTodosResultadosReporte
				this.pagination.setiFirstResult(-1);
				this.pagination.setiMaxResults(-1);

				//ARCHITECTURE
				if(Constantes.ISUSAEJBLOGICLAYER) {
						configuracionpunvensAux=new ArrayList<ConfiguracionPunVen>();
						configuracionpunvensAux.addAll(configuracionpunvenLogic.getConfiguracionPunVens());
				} else if(Constantes.ISUSAEJBREMOTE || Constantes.ISUSAEJBHOME) {
							configuracionpunvensAux=new ArrayList<ConfiguracionPunVen>();
							configuracionpunvensAux.addAll(configuracionpunvens);
				}
				//ARCHITECTURE
								
				
				//ARCHITECTURE
				if(Constantes.ISUSAEJBLOGICLAYER) {
							finalQueryGlobal=Funciones.GetFinalQueryAppendBusqueda(finalQueryGlobal, this.sFinalQueryGeneral,"");
							configuracionpunvenLogic.getConfiguracionPunVensFK_IdBodega(finalQueryGlobal,pagination,id_bodegaFK_IdBodega);
				} else if(Constantes.ISUSAEJBREMOTE) {
				this.sDetalleReporte=ConfiguracionPunVenConstantesFunciones.getDetalleIndiceFK_IdBodega(id_bodegaFK_IdBodega);
						
				} else if(Constantes.ISUSAEJBHOME) {
				this.sDetalleReporte=ConfiguracionPunVenConstantesFunciones.getDetalleIndiceFK_IdBodega(id_bodegaFK_IdBodega);
						
				}
				//ARCHITECTURE
					}
				//ARCHITECTURE
				if(Constantes.ISUSAEJBLOGICLAYER) {
					generarReporteConfiguracionPunVens("FK_IdBodega",configuracionpunvenLogic.getConfiguracionPunVens());
				} else if(Constantes.ISUSAEJBREMOTE || Constantes.ISUSAEJBHOME) {
					generarReporteConfiguracionPunVens("FK_IdBodega",configuracionpunvens);
				}
				//ARCHITECTURE

					if(false) {//isMostrarTodosResultadosReporte
						this.pagination.setiFirstResult(this.iNumeroPaginacionPagina);
						this.pagination.setiMaxResults(this.iNumeroPaginacion);

						//ARCHITECTURE
						if(Constantes.ISUSAEJBLOGICLAYER) {
						configuracionpunvenLogic.setConfiguracionPunVens(new ArrayList<ConfiguracionPunVen>());
						configuracionpunvenLogic.getConfiguracionPunVens().addAll(configuracionpunvensAux);
						} else if(Constantes.ISUSAEJBREMOTE || Constantes.ISUSAEJBHOME) {
							configuracionpunvens=new ArrayList<ConfiguracionPunVen>();
							configuracionpunvens.addAll(configuracionpunvensAux);
						}
						//ARCHITECTURE
					}
				}

			}
			else if(sAccionBusqueda.equals("FK_IdClienteConsumidorFinal")) {
				this.sDetalleReporte=ConfiguracionPunVenConstantesFunciones.getDetalleIndiceFK_IdClienteConsumidorFinal(id_cliente_consumidor_finalFK_IdClienteConsumidorFinal);

				
				//ARCHITECTURE
				if(Constantes.ISUSAEJBLOGICLAYER) {

					finalQueryGlobal=Funciones.GetFinalQueryAppendBusqueda(finalQueryGlobal, this.sFinalQueryGeneral,finalQueryPaginacion);

					configuracionpunvenLogic.getConfiguracionPunVensFK_IdClienteConsumidorFinal(finalQueryGlobal,pagination,id_cliente_consumidor_finalFK_IdClienteConsumidorFinal);
				} else if(Constantes.ISUSAEJBREMOTE) {
				this.sDetalleReporte=ConfiguracionPunVenConstantesFunciones.getDetalleIndiceFK_IdClienteConsumidorFinal(id_cliente_consumidor_finalFK_IdClienteConsumidorFinal);

				
				} else if(Constantes.ISUSAEJBHOME) {
				this.sDetalleReporte=ConfiguracionPunVenConstantesFunciones.getDetalleIndiceFK_IdClienteConsumidorFinal(id_cliente_consumidor_finalFK_IdClienteConsumidorFinal);

				
				}
				//ARCHITECTURE

				Boolean isNoExiste=false;
				//ARCHITECTURE
				if(Constantes.ISUSAEJBLOGICLAYER) {
					isNoExiste=configuracionpunvenLogic.getConfiguracionPunVens()==null||configuracionpunvenLogic.getConfiguracionPunVens().size()==0;
				} else if(Constantes.ISUSAEJBREMOTE||Constantes.ISUSAEJBHOME) {
					isNoExiste=configuracionpunvens==null|| configuracionpunvens.size()==0;
				}
				//ARCHITECTURE

		if(false && sTipoArchivoReporte!=""&&sTipoArchivoReporte!=null) {//this.isTipoArchivoReporte
			if(false) {//isMostrarTodosResultadosReporte
				this.pagination.setiFirstResult(-1);
				this.pagination.setiMaxResults(-1);

				//ARCHITECTURE
				if(Constantes.ISUSAEJBLOGICLAYER) {
						configuracionpunvensAux=new ArrayList<ConfiguracionPunVen>();
						configuracionpunvensAux.addAll(configuracionpunvenLogic.getConfiguracionPunVens());
				} else if(Constantes.ISUSAEJBREMOTE || Constantes.ISUSAEJBHOME) {
							configuracionpunvensAux=new ArrayList<ConfiguracionPunVen>();
							configuracionpunvensAux.addAll(configuracionpunvens);
				}
				//ARCHITECTURE
								
				
				//ARCHITECTURE
				if(Constantes.ISUSAEJBLOGICLAYER) {
							finalQueryGlobal=Funciones.GetFinalQueryAppendBusqueda(finalQueryGlobal, this.sFinalQueryGeneral,"");
							configuracionpunvenLogic.getConfiguracionPunVensFK_IdClienteConsumidorFinal(finalQueryGlobal,pagination,id_cliente_consumidor_finalFK_IdClienteConsumidorFinal);
				} else if(Constantes.ISUSAEJBREMOTE) {
				this.sDetalleReporte=ConfiguracionPunVenConstantesFunciones.getDetalleIndiceFK_IdClienteConsumidorFinal(id_cliente_consumidor_finalFK_IdClienteConsumidorFinal);
						
				} else if(Constantes.ISUSAEJBHOME) {
				this.sDetalleReporte=ConfiguracionPunVenConstantesFunciones.getDetalleIndiceFK_IdClienteConsumidorFinal(id_cliente_consumidor_finalFK_IdClienteConsumidorFinal);
						
				}
				//ARCHITECTURE
					}
				//ARCHITECTURE
				if(Constantes.ISUSAEJBLOGICLAYER) {
					generarReporteConfiguracionPunVens("FK_IdClienteConsumidorFinal",configuracionpunvenLogic.getConfiguracionPunVens());
				} else if(Constantes.ISUSAEJBREMOTE || Constantes.ISUSAEJBHOME) {
					generarReporteConfiguracionPunVens("FK_IdClienteConsumidorFinal",configuracionpunvens);
				}
				//ARCHITECTURE

					if(false) {//isMostrarTodosResultadosReporte
						this.pagination.setiFirstResult(this.iNumeroPaginacionPagina);
						this.pagination.setiMaxResults(this.iNumeroPaginacion);

						//ARCHITECTURE
						if(Constantes.ISUSAEJBLOGICLAYER) {
						configuracionpunvenLogic.setConfiguracionPunVens(new ArrayList<ConfiguracionPunVen>());
						configuracionpunvenLogic.getConfiguracionPunVens().addAll(configuracionpunvensAux);
						} else if(Constantes.ISUSAEJBREMOTE || Constantes.ISUSAEJBHOME) {
							configuracionpunvens=new ArrayList<ConfiguracionPunVen>();
							configuracionpunvens.addAll(configuracionpunvensAux);
						}
						//ARCHITECTURE
					}
				}

			}
			else if(sAccionBusqueda.equals("FK_IdCuentaContableEfectivo")) {
				this.sDetalleReporte=ConfiguracionPunVenConstantesFunciones.getDetalleIndiceFK_IdCuentaContableEfectivo(id_cuenta_contable_efectivoFK_IdCuentaContableEfectivo);

				
				//ARCHITECTURE
				if(Constantes.ISUSAEJBLOGICLAYER) {

					finalQueryGlobal=Funciones.GetFinalQueryAppendBusqueda(finalQueryGlobal, this.sFinalQueryGeneral,finalQueryPaginacion);

					configuracionpunvenLogic.getConfiguracionPunVensFK_IdCuentaContableEfectivo(finalQueryGlobal,pagination,id_cuenta_contable_efectivoFK_IdCuentaContableEfectivo);
				} else if(Constantes.ISUSAEJBREMOTE) {
				this.sDetalleReporte=ConfiguracionPunVenConstantesFunciones.getDetalleIndiceFK_IdCuentaContableEfectivo(id_cuenta_contable_efectivoFK_IdCuentaContableEfectivo);

				
				} else if(Constantes.ISUSAEJBHOME) {
				this.sDetalleReporte=ConfiguracionPunVenConstantesFunciones.getDetalleIndiceFK_IdCuentaContableEfectivo(id_cuenta_contable_efectivoFK_IdCuentaContableEfectivo);

				
				}
				//ARCHITECTURE

				Boolean isNoExiste=false;
				//ARCHITECTURE
				if(Constantes.ISUSAEJBLOGICLAYER) {
					isNoExiste=configuracionpunvenLogic.getConfiguracionPunVens()==null||configuracionpunvenLogic.getConfiguracionPunVens().size()==0;
				} else if(Constantes.ISUSAEJBREMOTE||Constantes.ISUSAEJBHOME) {
					isNoExiste=configuracionpunvens==null|| configuracionpunvens.size()==0;
				}
				//ARCHITECTURE

		if(false && sTipoArchivoReporte!=""&&sTipoArchivoReporte!=null) {//this.isTipoArchivoReporte
			if(false) {//isMostrarTodosResultadosReporte
				this.pagination.setiFirstResult(-1);
				this.pagination.setiMaxResults(-1);

				//ARCHITECTURE
				if(Constantes.ISUSAEJBLOGICLAYER) {
						configuracionpunvensAux=new ArrayList<ConfiguracionPunVen>();
						configuracionpunvensAux.addAll(configuracionpunvenLogic.getConfiguracionPunVens());
				} else if(Constantes.ISUSAEJBREMOTE || Constantes.ISUSAEJBHOME) {
							configuracionpunvensAux=new ArrayList<ConfiguracionPunVen>();
							configuracionpunvensAux.addAll(configuracionpunvens);
				}
				//ARCHITECTURE
								
				
				//ARCHITECTURE
				if(Constantes.ISUSAEJBLOGICLAYER) {
							finalQueryGlobal=Funciones.GetFinalQueryAppendBusqueda(finalQueryGlobal, this.sFinalQueryGeneral,"");
							configuracionpunvenLogic.getConfiguracionPunVensFK_IdCuentaContableEfectivo(finalQueryGlobal,pagination,id_cuenta_contable_efectivoFK_IdCuentaContableEfectivo);
				} else if(Constantes.ISUSAEJBREMOTE) {
				this.sDetalleReporte=ConfiguracionPunVenConstantesFunciones.getDetalleIndiceFK_IdCuentaContableEfectivo(id_cuenta_contable_efectivoFK_IdCuentaContableEfectivo);
						
				} else if(Constantes.ISUSAEJBHOME) {
				this.sDetalleReporte=ConfiguracionPunVenConstantesFunciones.getDetalleIndiceFK_IdCuentaContableEfectivo(id_cuenta_contable_efectivoFK_IdCuentaContableEfectivo);
						
				}
				//ARCHITECTURE
					}
				//ARCHITECTURE
				if(Constantes.ISUSAEJBLOGICLAYER) {
					generarReporteConfiguracionPunVens("FK_IdCuentaContableEfectivo",configuracionpunvenLogic.getConfiguracionPunVens());
				} else if(Constantes.ISUSAEJBREMOTE || Constantes.ISUSAEJBHOME) {
					generarReporteConfiguracionPunVens("FK_IdCuentaContableEfectivo",configuracionpunvens);
				}
				//ARCHITECTURE

					if(false) {//isMostrarTodosResultadosReporte
						this.pagination.setiFirstResult(this.iNumeroPaginacionPagina);
						this.pagination.setiMaxResults(this.iNumeroPaginacion);

						//ARCHITECTURE
						if(Constantes.ISUSAEJBLOGICLAYER) {
						configuracionpunvenLogic.setConfiguracionPunVens(new ArrayList<ConfiguracionPunVen>());
						configuracionpunvenLogic.getConfiguracionPunVens().addAll(configuracionpunvensAux);
						} else if(Constantes.ISUSAEJBREMOTE || Constantes.ISUSAEJBHOME) {
							configuracionpunvens=new ArrayList<ConfiguracionPunVen>();
							configuracionpunvens.addAll(configuracionpunvensAux);
						}
						//ARCHITECTURE
					}
				}

			}
			else if(sAccionBusqueda.equals("FK_IdCuentaContableIce")) {
				this.sDetalleReporte=ConfiguracionPunVenConstantesFunciones.getDetalleIndiceFK_IdCuentaContableIce(id_cuenta_contable_iceFK_IdCuentaContableIce);

				
				//ARCHITECTURE
				if(Constantes.ISUSAEJBLOGICLAYER) {

					finalQueryGlobal=Funciones.GetFinalQueryAppendBusqueda(finalQueryGlobal, this.sFinalQueryGeneral,finalQueryPaginacion);

					configuracionpunvenLogic.getConfiguracionPunVensFK_IdCuentaContableIce(finalQueryGlobal,pagination,id_cuenta_contable_iceFK_IdCuentaContableIce);
				} else if(Constantes.ISUSAEJBREMOTE) {
				this.sDetalleReporte=ConfiguracionPunVenConstantesFunciones.getDetalleIndiceFK_IdCuentaContableIce(id_cuenta_contable_iceFK_IdCuentaContableIce);

				
				} else if(Constantes.ISUSAEJBHOME) {
				this.sDetalleReporte=ConfiguracionPunVenConstantesFunciones.getDetalleIndiceFK_IdCuentaContableIce(id_cuenta_contable_iceFK_IdCuentaContableIce);

				
				}
				//ARCHITECTURE

				Boolean isNoExiste=false;
				//ARCHITECTURE
				if(Constantes.ISUSAEJBLOGICLAYER) {
					isNoExiste=configuracionpunvenLogic.getConfiguracionPunVens()==null||configuracionpunvenLogic.getConfiguracionPunVens().size()==0;
				} else if(Constantes.ISUSAEJBREMOTE||Constantes.ISUSAEJBHOME) {
					isNoExiste=configuracionpunvens==null|| configuracionpunvens.size()==0;
				}
				//ARCHITECTURE

		if(false && sTipoArchivoReporte!=""&&sTipoArchivoReporte!=null) {//this.isTipoArchivoReporte
			if(false) {//isMostrarTodosResultadosReporte
				this.pagination.setiFirstResult(-1);
				this.pagination.setiMaxResults(-1);

				//ARCHITECTURE
				if(Constantes.ISUSAEJBLOGICLAYER) {
						configuracionpunvensAux=new ArrayList<ConfiguracionPunVen>();
						configuracionpunvensAux.addAll(configuracionpunvenLogic.getConfiguracionPunVens());
				} else if(Constantes.ISUSAEJBREMOTE || Constantes.ISUSAEJBHOME) {
							configuracionpunvensAux=new ArrayList<ConfiguracionPunVen>();
							configuracionpunvensAux.addAll(configuracionpunvens);
				}
				//ARCHITECTURE
								
				
				//ARCHITECTURE
				if(Constantes.ISUSAEJBLOGICLAYER) {
							finalQueryGlobal=Funciones.GetFinalQueryAppendBusqueda(finalQueryGlobal, this.sFinalQueryGeneral,"");
							configuracionpunvenLogic.getConfiguracionPunVensFK_IdCuentaContableIce(finalQueryGlobal,pagination,id_cuenta_contable_iceFK_IdCuentaContableIce);
				} else if(Constantes.ISUSAEJBREMOTE) {
				this.sDetalleReporte=ConfiguracionPunVenConstantesFunciones.getDetalleIndiceFK_IdCuentaContableIce(id_cuenta_contable_iceFK_IdCuentaContableIce);
						
				} else if(Constantes.ISUSAEJBHOME) {
				this.sDetalleReporte=ConfiguracionPunVenConstantesFunciones.getDetalleIndiceFK_IdCuentaContableIce(id_cuenta_contable_iceFK_IdCuentaContableIce);
						
				}
				//ARCHITECTURE
					}
				//ARCHITECTURE
				if(Constantes.ISUSAEJBLOGICLAYER) {
					generarReporteConfiguracionPunVens("FK_IdCuentaContableIce",configuracionpunvenLogic.getConfiguracionPunVens());
				} else if(Constantes.ISUSAEJBREMOTE || Constantes.ISUSAEJBHOME) {
					generarReporteConfiguracionPunVens("FK_IdCuentaContableIce",configuracionpunvens);
				}
				//ARCHITECTURE

					if(false) {//isMostrarTodosResultadosReporte
						this.pagination.setiFirstResult(this.iNumeroPaginacionPagina);
						this.pagination.setiMaxResults(this.iNumeroPaginacion);

						//ARCHITECTURE
						if(Constantes.ISUSAEJBLOGICLAYER) {
						configuracionpunvenLogic.setConfiguracionPunVens(new ArrayList<ConfiguracionPunVen>());
						configuracionpunvenLogic.getConfiguracionPunVens().addAll(configuracionpunvensAux);
						} else if(Constantes.ISUSAEJBREMOTE || Constantes.ISUSAEJBHOME) {
							configuracionpunvens=new ArrayList<ConfiguracionPunVen>();
							configuracionpunvens.addAll(configuracionpunvensAux);
						}
						//ARCHITECTURE
					}
				}

			}
			else if(sAccionBusqueda.equals("FK_IdCuentaContableOtros")) {
				this.sDetalleReporte=ConfiguracionPunVenConstantesFunciones.getDetalleIndiceFK_IdCuentaContableOtros(id_cuenta_contable_otrosFK_IdCuentaContableOtros);

				
				//ARCHITECTURE
				if(Constantes.ISUSAEJBLOGICLAYER) {

					finalQueryGlobal=Funciones.GetFinalQueryAppendBusqueda(finalQueryGlobal, this.sFinalQueryGeneral,finalQueryPaginacion);

					configuracionpunvenLogic.getConfiguracionPunVensFK_IdCuentaContableOtros(finalQueryGlobal,pagination,id_cuenta_contable_otrosFK_IdCuentaContableOtros);
				} else if(Constantes.ISUSAEJBREMOTE) {
				this.sDetalleReporte=ConfiguracionPunVenConstantesFunciones.getDetalleIndiceFK_IdCuentaContableOtros(id_cuenta_contable_otrosFK_IdCuentaContableOtros);

				
				} else if(Constantes.ISUSAEJBHOME) {
				this.sDetalleReporte=ConfiguracionPunVenConstantesFunciones.getDetalleIndiceFK_IdCuentaContableOtros(id_cuenta_contable_otrosFK_IdCuentaContableOtros);

				
				}
				//ARCHITECTURE

				Boolean isNoExiste=false;
				//ARCHITECTURE
				if(Constantes.ISUSAEJBLOGICLAYER) {
					isNoExiste=configuracionpunvenLogic.getConfiguracionPunVens()==null||configuracionpunvenLogic.getConfiguracionPunVens().size()==0;
				} else if(Constantes.ISUSAEJBREMOTE||Constantes.ISUSAEJBHOME) {
					isNoExiste=configuracionpunvens==null|| configuracionpunvens.size()==0;
				}
				//ARCHITECTURE

		if(false && sTipoArchivoReporte!=""&&sTipoArchivoReporte!=null) {//this.isTipoArchivoReporte
			if(false) {//isMostrarTodosResultadosReporte
				this.pagination.setiFirstResult(-1);
				this.pagination.setiMaxResults(-1);

				//ARCHITECTURE
				if(Constantes.ISUSAEJBLOGICLAYER) {
						configuracionpunvensAux=new ArrayList<ConfiguracionPunVen>();
						configuracionpunvensAux.addAll(configuracionpunvenLogic.getConfiguracionPunVens());
				} else if(Constantes.ISUSAEJBREMOTE || Constantes.ISUSAEJBHOME) {
							configuracionpunvensAux=new ArrayList<ConfiguracionPunVen>();
							configuracionpunvensAux.addAll(configuracionpunvens);
				}
				//ARCHITECTURE
								
				
				//ARCHITECTURE
				if(Constantes.ISUSAEJBLOGICLAYER) {
							finalQueryGlobal=Funciones.GetFinalQueryAppendBusqueda(finalQueryGlobal, this.sFinalQueryGeneral,"");
							configuracionpunvenLogic.getConfiguracionPunVensFK_IdCuentaContableOtros(finalQueryGlobal,pagination,id_cuenta_contable_otrosFK_IdCuentaContableOtros);
				} else if(Constantes.ISUSAEJBREMOTE) {
				this.sDetalleReporte=ConfiguracionPunVenConstantesFunciones.getDetalleIndiceFK_IdCuentaContableOtros(id_cuenta_contable_otrosFK_IdCuentaContableOtros);
						
				} else if(Constantes.ISUSAEJBHOME) {
				this.sDetalleReporte=ConfiguracionPunVenConstantesFunciones.getDetalleIndiceFK_IdCuentaContableOtros(id_cuenta_contable_otrosFK_IdCuentaContableOtros);
						
				}
				//ARCHITECTURE
					}
				//ARCHITECTURE
				if(Constantes.ISUSAEJBLOGICLAYER) {
					generarReporteConfiguracionPunVens("FK_IdCuentaContableOtros",configuracionpunvenLogic.getConfiguracionPunVens());
				} else if(Constantes.ISUSAEJBREMOTE || Constantes.ISUSAEJBHOME) {
					generarReporteConfiguracionPunVens("FK_IdCuentaContableOtros",configuracionpunvens);
				}
				//ARCHITECTURE

					if(false) {//isMostrarTodosResultadosReporte
						this.pagination.setiFirstResult(this.iNumeroPaginacionPagina);
						this.pagination.setiMaxResults(this.iNumeroPaginacion);

						//ARCHITECTURE
						if(Constantes.ISUSAEJBLOGICLAYER) {
						configuracionpunvenLogic.setConfiguracionPunVens(new ArrayList<ConfiguracionPunVen>());
						configuracionpunvenLogic.getConfiguracionPunVens().addAll(configuracionpunvensAux);
						} else if(Constantes.ISUSAEJBREMOTE || Constantes.ISUSAEJBHOME) {
							configuracionpunvens=new ArrayList<ConfiguracionPunVen>();
							configuracionpunvens.addAll(configuracionpunvensAux);
						}
						//ARCHITECTURE
					}
				}

			}
			else if(sAccionBusqueda.equals("FK_IdEmpresa")) {
				this.sDetalleReporte=ConfiguracionPunVenConstantesFunciones.getDetalleIndiceFK_IdEmpresa(id_empresaFK_IdEmpresa);

				
				//ARCHITECTURE
				if(Constantes.ISUSAEJBLOGICLAYER) {

					finalQueryGlobal=Funciones.GetFinalQueryAppendBusqueda(finalQueryGlobal, this.sFinalQueryGeneral,finalQueryPaginacion);

					configuracionpunvenLogic.getConfiguracionPunVensFK_IdEmpresa(finalQueryGlobal,pagination,id_empresaFK_IdEmpresa);
				} else if(Constantes.ISUSAEJBREMOTE) {
				this.sDetalleReporte=ConfiguracionPunVenConstantesFunciones.getDetalleIndiceFK_IdEmpresa(id_empresaFK_IdEmpresa);

				
				} else if(Constantes.ISUSAEJBHOME) {
				this.sDetalleReporte=ConfiguracionPunVenConstantesFunciones.getDetalleIndiceFK_IdEmpresa(id_empresaFK_IdEmpresa);

				
				}
				//ARCHITECTURE

				Boolean isNoExiste=false;
				//ARCHITECTURE
				if(Constantes.ISUSAEJBLOGICLAYER) {
					isNoExiste=configuracionpunvenLogic.getConfiguracionPunVens()==null||configuracionpunvenLogic.getConfiguracionPunVens().size()==0;
				} else if(Constantes.ISUSAEJBREMOTE||Constantes.ISUSAEJBHOME) {
					isNoExiste=configuracionpunvens==null|| configuracionpunvens.size()==0;
				}
				//ARCHITECTURE

		if(false && sTipoArchivoReporte!=""&&sTipoArchivoReporte!=null) {//this.isTipoArchivoReporte
			if(false) {//isMostrarTodosResultadosReporte
				this.pagination.setiFirstResult(-1);
				this.pagination.setiMaxResults(-1);

				//ARCHITECTURE
				if(Constantes.ISUSAEJBLOGICLAYER) {
						configuracionpunvensAux=new ArrayList<ConfiguracionPunVen>();
						configuracionpunvensAux.addAll(configuracionpunvenLogic.getConfiguracionPunVens());
				} else if(Constantes.ISUSAEJBREMOTE || Constantes.ISUSAEJBHOME) {
							configuracionpunvensAux=new ArrayList<ConfiguracionPunVen>();
							configuracionpunvensAux.addAll(configuracionpunvens);
				}
				//ARCHITECTURE
								
				
				//ARCHITECTURE
				if(Constantes.ISUSAEJBLOGICLAYER) {
							finalQueryGlobal=Funciones.GetFinalQueryAppendBusqueda(finalQueryGlobal, this.sFinalQueryGeneral,"");
							configuracionpunvenLogic.getConfiguracionPunVensFK_IdEmpresa(finalQueryGlobal,pagination,id_empresaFK_IdEmpresa);
				} else if(Constantes.ISUSAEJBREMOTE) {
				this.sDetalleReporte=ConfiguracionPunVenConstantesFunciones.getDetalleIndiceFK_IdEmpresa(id_empresaFK_IdEmpresa);
						
				} else if(Constantes.ISUSAEJBHOME) {
				this.sDetalleReporte=ConfiguracionPunVenConstantesFunciones.getDetalleIndiceFK_IdEmpresa(id_empresaFK_IdEmpresa);
						
				}
				//ARCHITECTURE
					}
				//ARCHITECTURE
				if(Constantes.ISUSAEJBLOGICLAYER) {
					generarReporteConfiguracionPunVens("FK_IdEmpresa",configuracionpunvenLogic.getConfiguracionPunVens());
				} else if(Constantes.ISUSAEJBREMOTE || Constantes.ISUSAEJBHOME) {
					generarReporteConfiguracionPunVens("FK_IdEmpresa",configuracionpunvens);
				}
				//ARCHITECTURE

					if(false) {//isMostrarTodosResultadosReporte
						this.pagination.setiFirstResult(this.iNumeroPaginacionPagina);
						this.pagination.setiMaxResults(this.iNumeroPaginacion);

						//ARCHITECTURE
						if(Constantes.ISUSAEJBLOGICLAYER) {
						configuracionpunvenLogic.setConfiguracionPunVens(new ArrayList<ConfiguracionPunVen>());
						configuracionpunvenLogic.getConfiguracionPunVens().addAll(configuracionpunvensAux);
						} else if(Constantes.ISUSAEJBREMOTE || Constantes.ISUSAEJBHOME) {
							configuracionpunvens=new ArrayList<ConfiguracionPunVen>();
							configuracionpunvens.addAll(configuracionpunvensAux);
						}
						//ARCHITECTURE
					}
				}

			}
			else if(sAccionBusqueda.equals("FK_IdFormatoFactura")) {
				this.sDetalleReporte=ConfiguracionPunVenConstantesFunciones.getDetalleIndiceFK_IdFormatoFactura(id_formato_facturaFK_IdFormatoFactura);

				
				//ARCHITECTURE
				if(Constantes.ISUSAEJBLOGICLAYER) {

					finalQueryGlobal=Funciones.GetFinalQueryAppendBusqueda(finalQueryGlobal, this.sFinalQueryGeneral,finalQueryPaginacion);

					configuracionpunvenLogic.getConfiguracionPunVensFK_IdFormatoFactura(finalQueryGlobal,pagination,id_formato_facturaFK_IdFormatoFactura);
				} else if(Constantes.ISUSAEJBREMOTE) {
				this.sDetalleReporte=ConfiguracionPunVenConstantesFunciones.getDetalleIndiceFK_IdFormatoFactura(id_formato_facturaFK_IdFormatoFactura);

				
				} else if(Constantes.ISUSAEJBHOME) {
				this.sDetalleReporte=ConfiguracionPunVenConstantesFunciones.getDetalleIndiceFK_IdFormatoFactura(id_formato_facturaFK_IdFormatoFactura);

				
				}
				//ARCHITECTURE

				Boolean isNoExiste=false;
				//ARCHITECTURE
				if(Constantes.ISUSAEJBLOGICLAYER) {
					isNoExiste=configuracionpunvenLogic.getConfiguracionPunVens()==null||configuracionpunvenLogic.getConfiguracionPunVens().size()==0;
				} else if(Constantes.ISUSAEJBREMOTE||Constantes.ISUSAEJBHOME) {
					isNoExiste=configuracionpunvens==null|| configuracionpunvens.size()==0;
				}
				//ARCHITECTURE

		if(false && sTipoArchivoReporte!=""&&sTipoArchivoReporte!=null) {//this.isTipoArchivoReporte
			if(false) {//isMostrarTodosResultadosReporte
				this.pagination.setiFirstResult(-1);
				this.pagination.setiMaxResults(-1);

				//ARCHITECTURE
				if(Constantes.ISUSAEJBLOGICLAYER) {
						configuracionpunvensAux=new ArrayList<ConfiguracionPunVen>();
						configuracionpunvensAux.addAll(configuracionpunvenLogic.getConfiguracionPunVens());
				} else if(Constantes.ISUSAEJBREMOTE || Constantes.ISUSAEJBHOME) {
							configuracionpunvensAux=new ArrayList<ConfiguracionPunVen>();
							configuracionpunvensAux.addAll(configuracionpunvens);
				}
				//ARCHITECTURE
								
				
				//ARCHITECTURE
				if(Constantes.ISUSAEJBLOGICLAYER) {
							finalQueryGlobal=Funciones.GetFinalQueryAppendBusqueda(finalQueryGlobal, this.sFinalQueryGeneral,"");
							configuracionpunvenLogic.getConfiguracionPunVensFK_IdFormatoFactura(finalQueryGlobal,pagination,id_formato_facturaFK_IdFormatoFactura);
				} else if(Constantes.ISUSAEJBREMOTE) {
				this.sDetalleReporte=ConfiguracionPunVenConstantesFunciones.getDetalleIndiceFK_IdFormatoFactura(id_formato_facturaFK_IdFormatoFactura);
						
				} else if(Constantes.ISUSAEJBHOME) {
				this.sDetalleReporte=ConfiguracionPunVenConstantesFunciones.getDetalleIndiceFK_IdFormatoFactura(id_formato_facturaFK_IdFormatoFactura);
						
				}
				//ARCHITECTURE
					}
				//ARCHITECTURE
				if(Constantes.ISUSAEJBLOGICLAYER) {
					generarReporteConfiguracionPunVens("FK_IdFormatoFactura",configuracionpunvenLogic.getConfiguracionPunVens());
				} else if(Constantes.ISUSAEJBREMOTE || Constantes.ISUSAEJBHOME) {
					generarReporteConfiguracionPunVens("FK_IdFormatoFactura",configuracionpunvens);
				}
				//ARCHITECTURE

					if(false) {//isMostrarTodosResultadosReporte
						this.pagination.setiFirstResult(this.iNumeroPaginacionPagina);
						this.pagination.setiMaxResults(this.iNumeroPaginacion);

						//ARCHITECTURE
						if(Constantes.ISUSAEJBLOGICLAYER) {
						configuracionpunvenLogic.setConfiguracionPunVens(new ArrayList<ConfiguracionPunVen>());
						configuracionpunvenLogic.getConfiguracionPunVens().addAll(configuracionpunvensAux);
						} else if(Constantes.ISUSAEJBREMOTE || Constantes.ISUSAEJBHOME) {
							configuracionpunvens=new ArrayList<ConfiguracionPunVen>();
							configuracionpunvens.addAll(configuracionpunvensAux);
						}
						//ARCHITECTURE
					}
				}

			}
			else if(sAccionBusqueda.equals("FK_IdFormatoNotaCredito")) {
				this.sDetalleReporte=ConfiguracionPunVenConstantesFunciones.getDetalleIndiceFK_IdFormatoNotaCredito(id_formato_nota_creditoFK_IdFormatoNotaCredito);

				
				//ARCHITECTURE
				if(Constantes.ISUSAEJBLOGICLAYER) {

					finalQueryGlobal=Funciones.GetFinalQueryAppendBusqueda(finalQueryGlobal, this.sFinalQueryGeneral,finalQueryPaginacion);

					configuracionpunvenLogic.getConfiguracionPunVensFK_IdFormatoNotaCredito(finalQueryGlobal,pagination,id_formato_nota_creditoFK_IdFormatoNotaCredito);
				} else if(Constantes.ISUSAEJBREMOTE) {
				this.sDetalleReporte=ConfiguracionPunVenConstantesFunciones.getDetalleIndiceFK_IdFormatoNotaCredito(id_formato_nota_creditoFK_IdFormatoNotaCredito);

				
				} else if(Constantes.ISUSAEJBHOME) {
				this.sDetalleReporte=ConfiguracionPunVenConstantesFunciones.getDetalleIndiceFK_IdFormatoNotaCredito(id_formato_nota_creditoFK_IdFormatoNotaCredito);

				
				}
				//ARCHITECTURE

				Boolean isNoExiste=false;
				//ARCHITECTURE
				if(Constantes.ISUSAEJBLOGICLAYER) {
					isNoExiste=configuracionpunvenLogic.getConfiguracionPunVens()==null||configuracionpunvenLogic.getConfiguracionPunVens().size()==0;
				} else if(Constantes.ISUSAEJBREMOTE||Constantes.ISUSAEJBHOME) {
					isNoExiste=configuracionpunvens==null|| configuracionpunvens.size()==0;
				}
				//ARCHITECTURE

		if(false && sTipoArchivoReporte!=""&&sTipoArchivoReporte!=null) {//this.isTipoArchivoReporte
			if(false) {//isMostrarTodosResultadosReporte
				this.pagination.setiFirstResult(-1);
				this.pagination.setiMaxResults(-1);

				//ARCHITECTURE
				if(Constantes.ISUSAEJBLOGICLAYER) {
						configuracionpunvensAux=new ArrayList<ConfiguracionPunVen>();
						configuracionpunvensAux.addAll(configuracionpunvenLogic.getConfiguracionPunVens());
				} else if(Constantes.ISUSAEJBREMOTE || Constantes.ISUSAEJBHOME) {
							configuracionpunvensAux=new ArrayList<ConfiguracionPunVen>();
							configuracionpunvensAux.addAll(configuracionpunvens);
				}
				//ARCHITECTURE
								
				
				//ARCHITECTURE
				if(Constantes.ISUSAEJBLOGICLAYER) {
							finalQueryGlobal=Funciones.GetFinalQueryAppendBusqueda(finalQueryGlobal, this.sFinalQueryGeneral,"");
							configuracionpunvenLogic.getConfiguracionPunVensFK_IdFormatoNotaCredito(finalQueryGlobal,pagination,id_formato_nota_creditoFK_IdFormatoNotaCredito);
				} else if(Constantes.ISUSAEJBREMOTE) {
				this.sDetalleReporte=ConfiguracionPunVenConstantesFunciones.getDetalleIndiceFK_IdFormatoNotaCredito(id_formato_nota_creditoFK_IdFormatoNotaCredito);
						
				} else if(Constantes.ISUSAEJBHOME) {
				this.sDetalleReporte=ConfiguracionPunVenConstantesFunciones.getDetalleIndiceFK_IdFormatoNotaCredito(id_formato_nota_creditoFK_IdFormatoNotaCredito);
						
				}
				//ARCHITECTURE
					}
				//ARCHITECTURE
				if(Constantes.ISUSAEJBLOGICLAYER) {
					generarReporteConfiguracionPunVens("FK_IdFormatoNotaCredito",configuracionpunvenLogic.getConfiguracionPunVens());
				} else if(Constantes.ISUSAEJBREMOTE || Constantes.ISUSAEJBHOME) {
					generarReporteConfiguracionPunVens("FK_IdFormatoNotaCredito",configuracionpunvens);
				}
				//ARCHITECTURE

					if(false) {//isMostrarTodosResultadosReporte
						this.pagination.setiFirstResult(this.iNumeroPaginacionPagina);
						this.pagination.setiMaxResults(this.iNumeroPaginacion);

						//ARCHITECTURE
						if(Constantes.ISUSAEJBLOGICLAYER) {
						configuracionpunvenLogic.setConfiguracionPunVens(new ArrayList<ConfiguracionPunVen>());
						configuracionpunvenLogic.getConfiguracionPunVens().addAll(configuracionpunvensAux);
						} else if(Constantes.ISUSAEJBREMOTE || Constantes.ISUSAEJBHOME) {
							configuracionpunvens=new ArrayList<ConfiguracionPunVen>();
							configuracionpunvens.addAll(configuracionpunvensAux);
						}
						//ARCHITECTURE
					}
				}

			}
			else if(sAccionBusqueda.equals("FK_IdFormatoNotaVenta")) {
				this.sDetalleReporte=ConfiguracionPunVenConstantesFunciones.getDetalleIndiceFK_IdFormatoNotaVenta(id_formato_nota_ventaFK_IdFormatoNotaVenta);

				
				//ARCHITECTURE
				if(Constantes.ISUSAEJBLOGICLAYER) {

					finalQueryGlobal=Funciones.GetFinalQueryAppendBusqueda(finalQueryGlobal, this.sFinalQueryGeneral,finalQueryPaginacion);

					configuracionpunvenLogic.getConfiguracionPunVensFK_IdFormatoNotaVenta(finalQueryGlobal,pagination,id_formato_nota_ventaFK_IdFormatoNotaVenta);
				} else if(Constantes.ISUSAEJBREMOTE) {
				this.sDetalleReporte=ConfiguracionPunVenConstantesFunciones.getDetalleIndiceFK_IdFormatoNotaVenta(id_formato_nota_ventaFK_IdFormatoNotaVenta);

				
				} else if(Constantes.ISUSAEJBHOME) {
				this.sDetalleReporte=ConfiguracionPunVenConstantesFunciones.getDetalleIndiceFK_IdFormatoNotaVenta(id_formato_nota_ventaFK_IdFormatoNotaVenta);

				
				}
				//ARCHITECTURE

				Boolean isNoExiste=false;
				//ARCHITECTURE
				if(Constantes.ISUSAEJBLOGICLAYER) {
					isNoExiste=configuracionpunvenLogic.getConfiguracionPunVens()==null||configuracionpunvenLogic.getConfiguracionPunVens().size()==0;
				} else if(Constantes.ISUSAEJBREMOTE||Constantes.ISUSAEJBHOME) {
					isNoExiste=configuracionpunvens==null|| configuracionpunvens.size()==0;
				}
				//ARCHITECTURE

		if(false && sTipoArchivoReporte!=""&&sTipoArchivoReporte!=null) {//this.isTipoArchivoReporte
			if(false) {//isMostrarTodosResultadosReporte
				this.pagination.setiFirstResult(-1);
				this.pagination.setiMaxResults(-1);

				//ARCHITECTURE
				if(Constantes.ISUSAEJBLOGICLAYER) {
						configuracionpunvensAux=new ArrayList<ConfiguracionPunVen>();
						configuracionpunvensAux.addAll(configuracionpunvenLogic.getConfiguracionPunVens());
				} else if(Constantes.ISUSAEJBREMOTE || Constantes.ISUSAEJBHOME) {
							configuracionpunvensAux=new ArrayList<ConfiguracionPunVen>();
							configuracionpunvensAux.addAll(configuracionpunvens);
				}
				//ARCHITECTURE
								
				
				//ARCHITECTURE
				if(Constantes.ISUSAEJBLOGICLAYER) {
							finalQueryGlobal=Funciones.GetFinalQueryAppendBusqueda(finalQueryGlobal, this.sFinalQueryGeneral,"");
							configuracionpunvenLogic.getConfiguracionPunVensFK_IdFormatoNotaVenta(finalQueryGlobal,pagination,id_formato_nota_ventaFK_IdFormatoNotaVenta);
				} else if(Constantes.ISUSAEJBREMOTE) {
				this.sDetalleReporte=ConfiguracionPunVenConstantesFunciones.getDetalleIndiceFK_IdFormatoNotaVenta(id_formato_nota_ventaFK_IdFormatoNotaVenta);
						
				} else if(Constantes.ISUSAEJBHOME) {
				this.sDetalleReporte=ConfiguracionPunVenConstantesFunciones.getDetalleIndiceFK_IdFormatoNotaVenta(id_formato_nota_ventaFK_IdFormatoNotaVenta);
						
				}
				//ARCHITECTURE
					}
				//ARCHITECTURE
				if(Constantes.ISUSAEJBLOGICLAYER) {
					generarReporteConfiguracionPunVens("FK_IdFormatoNotaVenta",configuracionpunvenLogic.getConfiguracionPunVens());
				} else if(Constantes.ISUSAEJBREMOTE || Constantes.ISUSAEJBHOME) {
					generarReporteConfiguracionPunVens("FK_IdFormatoNotaVenta",configuracionpunvens);
				}
				//ARCHITECTURE

					if(false) {//isMostrarTodosResultadosReporte
						this.pagination.setiFirstResult(this.iNumeroPaginacionPagina);
						this.pagination.setiMaxResults(this.iNumeroPaginacion);

						//ARCHITECTURE
						if(Constantes.ISUSAEJBLOGICLAYER) {
						configuracionpunvenLogic.setConfiguracionPunVens(new ArrayList<ConfiguracionPunVen>());
						configuracionpunvenLogic.getConfiguracionPunVens().addAll(configuracionpunvensAux);
						} else if(Constantes.ISUSAEJBREMOTE || Constantes.ISUSAEJBHOME) {
							configuracionpunvens=new ArrayList<ConfiguracionPunVen>();
							configuracionpunvens.addAll(configuracionpunvensAux);
						}
						//ARCHITECTURE
					}
				}

			}
			else if(sAccionBusqueda.equals("FK_IdSucursal")) {
				this.sDetalleReporte=ConfiguracionPunVenConstantesFunciones.getDetalleIndiceFK_IdSucursal(id_sucursalFK_IdSucursal);

				
				//ARCHITECTURE
				if(Constantes.ISUSAEJBLOGICLAYER) {

					finalQueryGlobal=Funciones.GetFinalQueryAppendBusqueda(finalQueryGlobal, this.sFinalQueryGeneral,finalQueryPaginacion);

					configuracionpunvenLogic.getConfiguracionPunVensFK_IdSucursal(finalQueryGlobal,pagination,id_sucursalFK_IdSucursal);
				} else if(Constantes.ISUSAEJBREMOTE) {
				this.sDetalleReporte=ConfiguracionPunVenConstantesFunciones.getDetalleIndiceFK_IdSucursal(id_sucursalFK_IdSucursal);

				
				} else if(Constantes.ISUSAEJBHOME) {
				this.sDetalleReporte=ConfiguracionPunVenConstantesFunciones.getDetalleIndiceFK_IdSucursal(id_sucursalFK_IdSucursal);

				
				}
				//ARCHITECTURE

				Boolean isNoExiste=false;
				//ARCHITECTURE
				if(Constantes.ISUSAEJBLOGICLAYER) {
					isNoExiste=configuracionpunvenLogic.getConfiguracionPunVens()==null||configuracionpunvenLogic.getConfiguracionPunVens().size()==0;
				} else if(Constantes.ISUSAEJBREMOTE||Constantes.ISUSAEJBHOME) {
					isNoExiste=configuracionpunvens==null|| configuracionpunvens.size()==0;
				}
				//ARCHITECTURE

		if(false && sTipoArchivoReporte!=""&&sTipoArchivoReporte!=null) {//this.isTipoArchivoReporte
			if(false) {//isMostrarTodosResultadosReporte
				this.pagination.setiFirstResult(-1);
				this.pagination.setiMaxResults(-1);

				//ARCHITECTURE
				if(Constantes.ISUSAEJBLOGICLAYER) {
						configuracionpunvensAux=new ArrayList<ConfiguracionPunVen>();
						configuracionpunvensAux.addAll(configuracionpunvenLogic.getConfiguracionPunVens());
				} else if(Constantes.ISUSAEJBREMOTE || Constantes.ISUSAEJBHOME) {
							configuracionpunvensAux=new ArrayList<ConfiguracionPunVen>();
							configuracionpunvensAux.addAll(configuracionpunvens);
				}
				//ARCHITECTURE
								
				
				//ARCHITECTURE
				if(Constantes.ISUSAEJBLOGICLAYER) {
							finalQueryGlobal=Funciones.GetFinalQueryAppendBusqueda(finalQueryGlobal, this.sFinalQueryGeneral,"");
							configuracionpunvenLogic.getConfiguracionPunVensFK_IdSucursal(finalQueryGlobal,pagination,id_sucursalFK_IdSucursal);
				} else if(Constantes.ISUSAEJBREMOTE) {
				this.sDetalleReporte=ConfiguracionPunVenConstantesFunciones.getDetalleIndiceFK_IdSucursal(id_sucursalFK_IdSucursal);
						
				} else if(Constantes.ISUSAEJBHOME) {
				this.sDetalleReporte=ConfiguracionPunVenConstantesFunciones.getDetalleIndiceFK_IdSucursal(id_sucursalFK_IdSucursal);
						
				}
				//ARCHITECTURE
					}
				//ARCHITECTURE
				if(Constantes.ISUSAEJBLOGICLAYER) {
					generarReporteConfiguracionPunVens("FK_IdSucursal",configuracionpunvenLogic.getConfiguracionPunVens());
				} else if(Constantes.ISUSAEJBREMOTE || Constantes.ISUSAEJBHOME) {
					generarReporteConfiguracionPunVens("FK_IdSucursal",configuracionpunvens);
				}
				//ARCHITECTURE

					if(false) {//isMostrarTodosResultadosReporte
						this.pagination.setiFirstResult(this.iNumeroPaginacionPagina);
						this.pagination.setiMaxResults(this.iNumeroPaginacion);

						//ARCHITECTURE
						if(Constantes.ISUSAEJBLOGICLAYER) {
						configuracionpunvenLogic.setConfiguracionPunVens(new ArrayList<ConfiguracionPunVen>());
						configuracionpunvenLogic.getConfiguracionPunVens().addAll(configuracionpunvensAux);
						} else if(Constantes.ISUSAEJBREMOTE || Constantes.ISUSAEJBHOME) {
							configuracionpunvens=new ArrayList<ConfiguracionPunVen>();
							configuracionpunvens.addAll(configuracionpunvensAux);
						}
						//ARCHITECTURE
					}
				}

			}
			else if(sAccionBusqueda.equals("FK_IdTipoDocumentoFactura")) {
				this.sDetalleReporte=ConfiguracionPunVenConstantesFunciones.getDetalleIndiceFK_IdTipoDocumentoFactura(id_tipo_documento_facturaFK_IdTipoDocumentoFactura);

				
				//ARCHITECTURE
				if(Constantes.ISUSAEJBLOGICLAYER) {

					finalQueryGlobal=Funciones.GetFinalQueryAppendBusqueda(finalQueryGlobal, this.sFinalQueryGeneral,finalQueryPaginacion);

					configuracionpunvenLogic.getConfiguracionPunVensFK_IdTipoDocumentoFactura(finalQueryGlobal,pagination,id_tipo_documento_facturaFK_IdTipoDocumentoFactura);
				} else if(Constantes.ISUSAEJBREMOTE) {
				this.sDetalleReporte=ConfiguracionPunVenConstantesFunciones.getDetalleIndiceFK_IdTipoDocumentoFactura(id_tipo_documento_facturaFK_IdTipoDocumentoFactura);

				
				} else if(Constantes.ISUSAEJBHOME) {
				this.sDetalleReporte=ConfiguracionPunVenConstantesFunciones.getDetalleIndiceFK_IdTipoDocumentoFactura(id_tipo_documento_facturaFK_IdTipoDocumentoFactura);

				
				}
				//ARCHITECTURE

				Boolean isNoExiste=false;
				//ARCHITECTURE
				if(Constantes.ISUSAEJBLOGICLAYER) {
					isNoExiste=configuracionpunvenLogic.getConfiguracionPunVens()==null||configuracionpunvenLogic.getConfiguracionPunVens().size()==0;
				} else if(Constantes.ISUSAEJBREMOTE||Constantes.ISUSAEJBHOME) {
					isNoExiste=configuracionpunvens==null|| configuracionpunvens.size()==0;
				}
				//ARCHITECTURE

		if(false && sTipoArchivoReporte!=""&&sTipoArchivoReporte!=null) {//this.isTipoArchivoReporte
			if(false) {//isMostrarTodosResultadosReporte
				this.pagination.setiFirstResult(-1);
				this.pagination.setiMaxResults(-1);

				//ARCHITECTURE
				if(Constantes.ISUSAEJBLOGICLAYER) {
						configuracionpunvensAux=new ArrayList<ConfiguracionPunVen>();
						configuracionpunvensAux.addAll(configuracionpunvenLogic.getConfiguracionPunVens());
				} else if(Constantes.ISUSAEJBREMOTE || Constantes.ISUSAEJBHOME) {
							configuracionpunvensAux=new ArrayList<ConfiguracionPunVen>();
							configuracionpunvensAux.addAll(configuracionpunvens);
				}
				//ARCHITECTURE
								
				
				//ARCHITECTURE
				if(Constantes.ISUSAEJBLOGICLAYER) {
							finalQueryGlobal=Funciones.GetFinalQueryAppendBusqueda(finalQueryGlobal, this.sFinalQueryGeneral,"");
							configuracionpunvenLogic.getConfiguracionPunVensFK_IdTipoDocumentoFactura(finalQueryGlobal,pagination,id_tipo_documento_facturaFK_IdTipoDocumentoFactura);
				} else if(Constantes.ISUSAEJBREMOTE) {
				this.sDetalleReporte=ConfiguracionPunVenConstantesFunciones.getDetalleIndiceFK_IdTipoDocumentoFactura(id_tipo_documento_facturaFK_IdTipoDocumentoFactura);
						
				} else if(Constantes.ISUSAEJBHOME) {
				this.sDetalleReporte=ConfiguracionPunVenConstantesFunciones.getDetalleIndiceFK_IdTipoDocumentoFactura(id_tipo_documento_facturaFK_IdTipoDocumentoFactura);
						
				}
				//ARCHITECTURE
					}
				//ARCHITECTURE
				if(Constantes.ISUSAEJBLOGICLAYER) {
					generarReporteConfiguracionPunVens("FK_IdTipoDocumentoFactura",configuracionpunvenLogic.getConfiguracionPunVens());
				} else if(Constantes.ISUSAEJBREMOTE || Constantes.ISUSAEJBHOME) {
					generarReporteConfiguracionPunVens("FK_IdTipoDocumentoFactura",configuracionpunvens);
				}
				//ARCHITECTURE

					if(false) {//isMostrarTodosResultadosReporte
						this.pagination.setiFirstResult(this.iNumeroPaginacionPagina);
						this.pagination.setiMaxResults(this.iNumeroPaginacion);

						//ARCHITECTURE
						if(Constantes.ISUSAEJBLOGICLAYER) {
						configuracionpunvenLogic.setConfiguracionPunVens(new ArrayList<ConfiguracionPunVen>());
						configuracionpunvenLogic.getConfiguracionPunVens().addAll(configuracionpunvensAux);
						} else if(Constantes.ISUSAEJBREMOTE || Constantes.ISUSAEJBHOME) {
							configuracionpunvens=new ArrayList<ConfiguracionPunVen>();
							configuracionpunvens.addAll(configuracionpunvensAux);
						}
						//ARCHITECTURE
					}
				}

			}
			else if(sAccionBusqueda.equals("FK_IdTipoDocumentoNotaCredito")) {
				this.sDetalleReporte=ConfiguracionPunVenConstantesFunciones.getDetalleIndiceFK_IdTipoDocumentoNotaCredito(id_tipo_documento_nota_creditoFK_IdTipoDocumentoNotaCredito);

				
				//ARCHITECTURE
				if(Constantes.ISUSAEJBLOGICLAYER) {

					finalQueryGlobal=Funciones.GetFinalQueryAppendBusqueda(finalQueryGlobal, this.sFinalQueryGeneral,finalQueryPaginacion);

					configuracionpunvenLogic.getConfiguracionPunVensFK_IdTipoDocumentoNotaCredito(finalQueryGlobal,pagination,id_tipo_documento_nota_creditoFK_IdTipoDocumentoNotaCredito);
				} else if(Constantes.ISUSAEJBREMOTE) {
				this.sDetalleReporte=ConfiguracionPunVenConstantesFunciones.getDetalleIndiceFK_IdTipoDocumentoNotaCredito(id_tipo_documento_nota_creditoFK_IdTipoDocumentoNotaCredito);

				
				} else if(Constantes.ISUSAEJBHOME) {
				this.sDetalleReporte=ConfiguracionPunVenConstantesFunciones.getDetalleIndiceFK_IdTipoDocumentoNotaCredito(id_tipo_documento_nota_creditoFK_IdTipoDocumentoNotaCredito);

				
				}
				//ARCHITECTURE

				Boolean isNoExiste=false;
				//ARCHITECTURE
				if(Constantes.ISUSAEJBLOGICLAYER) {
					isNoExiste=configuracionpunvenLogic.getConfiguracionPunVens()==null||configuracionpunvenLogic.getConfiguracionPunVens().size()==0;
				} else if(Constantes.ISUSAEJBREMOTE||Constantes.ISUSAEJBHOME) {
					isNoExiste=configuracionpunvens==null|| configuracionpunvens.size()==0;
				}
				//ARCHITECTURE

		if(false && sTipoArchivoReporte!=""&&sTipoArchivoReporte!=null) {//this.isTipoArchivoReporte
			if(false) {//isMostrarTodosResultadosReporte
				this.pagination.setiFirstResult(-1);
				this.pagination.setiMaxResults(-1);

				//ARCHITECTURE
				if(Constantes.ISUSAEJBLOGICLAYER) {
						configuracionpunvensAux=new ArrayList<ConfiguracionPunVen>();
						configuracionpunvensAux.addAll(configuracionpunvenLogic.getConfiguracionPunVens());
				} else if(Constantes.ISUSAEJBREMOTE || Constantes.ISUSAEJBHOME) {
							configuracionpunvensAux=new ArrayList<ConfiguracionPunVen>();
							configuracionpunvensAux.addAll(configuracionpunvens);
				}
				//ARCHITECTURE
								
				
				//ARCHITECTURE
				if(Constantes.ISUSAEJBLOGICLAYER) {
							finalQueryGlobal=Funciones.GetFinalQueryAppendBusqueda(finalQueryGlobal, this.sFinalQueryGeneral,"");
							configuracionpunvenLogic.getConfiguracionPunVensFK_IdTipoDocumentoNotaCredito(finalQueryGlobal,pagination,id_tipo_documento_nota_creditoFK_IdTipoDocumentoNotaCredito);
				} else if(Constantes.ISUSAEJBREMOTE) {
				this.sDetalleReporte=ConfiguracionPunVenConstantesFunciones.getDetalleIndiceFK_IdTipoDocumentoNotaCredito(id_tipo_documento_nota_creditoFK_IdTipoDocumentoNotaCredito);
						
				} else if(Constantes.ISUSAEJBHOME) {
				this.sDetalleReporte=ConfiguracionPunVenConstantesFunciones.getDetalleIndiceFK_IdTipoDocumentoNotaCredito(id_tipo_documento_nota_creditoFK_IdTipoDocumentoNotaCredito);
						
				}
				//ARCHITECTURE
					}
				//ARCHITECTURE
				if(Constantes.ISUSAEJBLOGICLAYER) {
					generarReporteConfiguracionPunVens("FK_IdTipoDocumentoNotaCredito",configuracionpunvenLogic.getConfiguracionPunVens());
				} else if(Constantes.ISUSAEJBREMOTE || Constantes.ISUSAEJBHOME) {
					generarReporteConfiguracionPunVens("FK_IdTipoDocumentoNotaCredito",configuracionpunvens);
				}
				//ARCHITECTURE

					if(false) {//isMostrarTodosResultadosReporte
						this.pagination.setiFirstResult(this.iNumeroPaginacionPagina);
						this.pagination.setiMaxResults(this.iNumeroPaginacion);

						//ARCHITECTURE
						if(Constantes.ISUSAEJBLOGICLAYER) {
						configuracionpunvenLogic.setConfiguracionPunVens(new ArrayList<ConfiguracionPunVen>());
						configuracionpunvenLogic.getConfiguracionPunVens().addAll(configuracionpunvensAux);
						} else if(Constantes.ISUSAEJBREMOTE || Constantes.ISUSAEJBHOME) {
							configuracionpunvens=new ArrayList<ConfiguracionPunVen>();
							configuracionpunvens.addAll(configuracionpunvensAux);
						}
						//ARCHITECTURE
					}
				}

			}
			else if(sAccionBusqueda.equals("FK_IdTipoDocumentoNotaVenta")) {
				this.sDetalleReporte=ConfiguracionPunVenConstantesFunciones.getDetalleIndiceFK_IdTipoDocumentoNotaVenta(id_tipo_documento_nota_ventaFK_IdTipoDocumentoNotaVenta);

				
				//ARCHITECTURE
				if(Constantes.ISUSAEJBLOGICLAYER) {

					finalQueryGlobal=Funciones.GetFinalQueryAppendBusqueda(finalQueryGlobal, this.sFinalQueryGeneral,finalQueryPaginacion);

					configuracionpunvenLogic.getConfiguracionPunVensFK_IdTipoDocumentoNotaVenta(finalQueryGlobal,pagination,id_tipo_documento_nota_ventaFK_IdTipoDocumentoNotaVenta);
				} else if(Constantes.ISUSAEJBREMOTE) {
				this.sDetalleReporte=ConfiguracionPunVenConstantesFunciones.getDetalleIndiceFK_IdTipoDocumentoNotaVenta(id_tipo_documento_nota_ventaFK_IdTipoDocumentoNotaVenta);

				
				} else if(Constantes.ISUSAEJBHOME) {
				this.sDetalleReporte=ConfiguracionPunVenConstantesFunciones.getDetalleIndiceFK_IdTipoDocumentoNotaVenta(id_tipo_documento_nota_ventaFK_IdTipoDocumentoNotaVenta);

				
				}
				//ARCHITECTURE

				Boolean isNoExiste=false;
				//ARCHITECTURE
				if(Constantes.ISUSAEJBLOGICLAYER) {
					isNoExiste=configuracionpunvenLogic.getConfiguracionPunVens()==null||configuracionpunvenLogic.getConfiguracionPunVens().size()==0;
				} else if(Constantes.ISUSAEJBREMOTE||Constantes.ISUSAEJBHOME) {
					isNoExiste=configuracionpunvens==null|| configuracionpunvens.size()==0;
				}
				//ARCHITECTURE

		if(false && sTipoArchivoReporte!=""&&sTipoArchivoReporte!=null) {//this.isTipoArchivoReporte
			if(false) {//isMostrarTodosResultadosReporte
				this.pagination.setiFirstResult(-1);
				this.pagination.setiMaxResults(-1);

				//ARCHITECTURE
				if(Constantes.ISUSAEJBLOGICLAYER) {
						configuracionpunvensAux=new ArrayList<ConfiguracionPunVen>();
						configuracionpunvensAux.addAll(configuracionpunvenLogic.getConfiguracionPunVens());
				} else if(Constantes.ISUSAEJBREMOTE || Constantes.ISUSAEJBHOME) {
							configuracionpunvensAux=new ArrayList<ConfiguracionPunVen>();
							configuracionpunvensAux.addAll(configuracionpunvens);
				}
				//ARCHITECTURE
								
				
				//ARCHITECTURE
				if(Constantes.ISUSAEJBLOGICLAYER) {
							finalQueryGlobal=Funciones.GetFinalQueryAppendBusqueda(finalQueryGlobal, this.sFinalQueryGeneral,"");
							configuracionpunvenLogic.getConfiguracionPunVensFK_IdTipoDocumentoNotaVenta(finalQueryGlobal,pagination,id_tipo_documento_nota_ventaFK_IdTipoDocumentoNotaVenta);
				} else if(Constantes.ISUSAEJBREMOTE) {
				this.sDetalleReporte=ConfiguracionPunVenConstantesFunciones.getDetalleIndiceFK_IdTipoDocumentoNotaVenta(id_tipo_documento_nota_ventaFK_IdTipoDocumentoNotaVenta);
						
				} else if(Constantes.ISUSAEJBHOME) {
				this.sDetalleReporte=ConfiguracionPunVenConstantesFunciones.getDetalleIndiceFK_IdTipoDocumentoNotaVenta(id_tipo_documento_nota_ventaFK_IdTipoDocumentoNotaVenta);
						
				}
				//ARCHITECTURE
					}
				//ARCHITECTURE
				if(Constantes.ISUSAEJBLOGICLAYER) {
					generarReporteConfiguracionPunVens("FK_IdTipoDocumentoNotaVenta",configuracionpunvenLogic.getConfiguracionPunVens());
				} else if(Constantes.ISUSAEJBREMOTE || Constantes.ISUSAEJBHOME) {
					generarReporteConfiguracionPunVens("FK_IdTipoDocumentoNotaVenta",configuracionpunvens);
				}
				//ARCHITECTURE

					if(false) {//isMostrarTodosResultadosReporte
						this.pagination.setiFirstResult(this.iNumeroPaginacionPagina);
						this.pagination.setiMaxResults(this.iNumeroPaginacion);

						//ARCHITECTURE
						if(Constantes.ISUSAEJBLOGICLAYER) {
						configuracionpunvenLogic.setConfiguracionPunVens(new ArrayList<ConfiguracionPunVen>());
						configuracionpunvenLogic.getConfiguracionPunVens().addAll(configuracionpunvensAux);
						} else if(Constantes.ISUSAEJBREMOTE || Constantes.ISUSAEJBHOME) {
							configuracionpunvens=new ArrayList<ConfiguracionPunVen>();
							configuracionpunvens.addAll(configuracionpunvensAux);
						}
						//ARCHITECTURE
					}
				}

			}
			else if(sAccionBusqueda.equals("FK_IdTipoDocumentoTarjetaCredito")) {
				this.sDetalleReporte=ConfiguracionPunVenConstantesFunciones.getDetalleIndiceFK_IdTipoDocumentoTarjetaCredito(id_tipo_documento_tarjeta_creditoFK_IdTipoDocumentoTarjetaCredito);

				
				//ARCHITECTURE
				if(Constantes.ISUSAEJBLOGICLAYER) {

					finalQueryGlobal=Funciones.GetFinalQueryAppendBusqueda(finalQueryGlobal, this.sFinalQueryGeneral,finalQueryPaginacion);

					configuracionpunvenLogic.getConfiguracionPunVensFK_IdTipoDocumentoTarjetaCredito(finalQueryGlobal,pagination,id_tipo_documento_tarjeta_creditoFK_IdTipoDocumentoTarjetaCredito);
				} else if(Constantes.ISUSAEJBREMOTE) {
				this.sDetalleReporte=ConfiguracionPunVenConstantesFunciones.getDetalleIndiceFK_IdTipoDocumentoTarjetaCredito(id_tipo_documento_tarjeta_creditoFK_IdTipoDocumentoTarjetaCredito);

				
				} else if(Constantes.ISUSAEJBHOME) {
				this.sDetalleReporte=ConfiguracionPunVenConstantesFunciones.getDetalleIndiceFK_IdTipoDocumentoTarjetaCredito(id_tipo_documento_tarjeta_creditoFK_IdTipoDocumentoTarjetaCredito);

				
				}
				//ARCHITECTURE

				Boolean isNoExiste=false;
				//ARCHITECTURE
				if(Constantes.ISUSAEJBLOGICLAYER) {
					isNoExiste=configuracionpunvenLogic.getConfiguracionPunVens()==null||configuracionpunvenLogic.getConfiguracionPunVens().size()==0;
				} else if(Constantes.ISUSAEJBREMOTE||Constantes.ISUSAEJBHOME) {
					isNoExiste=configuracionpunvens==null|| configuracionpunvens.size()==0;
				}
				//ARCHITECTURE

		if(false && sTipoArchivoReporte!=""&&sTipoArchivoReporte!=null) {//this.isTipoArchivoReporte
			if(false) {//isMostrarTodosResultadosReporte
				this.pagination.setiFirstResult(-1);
				this.pagination.setiMaxResults(-1);

				//ARCHITECTURE
				if(Constantes.ISUSAEJBLOGICLAYER) {
						configuracionpunvensAux=new ArrayList<ConfiguracionPunVen>();
						configuracionpunvensAux.addAll(configuracionpunvenLogic.getConfiguracionPunVens());
				} else if(Constantes.ISUSAEJBREMOTE || Constantes.ISUSAEJBHOME) {
							configuracionpunvensAux=new ArrayList<ConfiguracionPunVen>();
							configuracionpunvensAux.addAll(configuracionpunvens);
				}
				//ARCHITECTURE
								
				
				//ARCHITECTURE
				if(Constantes.ISUSAEJBLOGICLAYER) {
							finalQueryGlobal=Funciones.GetFinalQueryAppendBusqueda(finalQueryGlobal, this.sFinalQueryGeneral,"");
							configuracionpunvenLogic.getConfiguracionPunVensFK_IdTipoDocumentoTarjetaCredito(finalQueryGlobal,pagination,id_tipo_documento_tarjeta_creditoFK_IdTipoDocumentoTarjetaCredito);
				} else if(Constantes.ISUSAEJBREMOTE) {
				this.sDetalleReporte=ConfiguracionPunVenConstantesFunciones.getDetalleIndiceFK_IdTipoDocumentoTarjetaCredito(id_tipo_documento_tarjeta_creditoFK_IdTipoDocumentoTarjetaCredito);
						
				} else if(Constantes.ISUSAEJBHOME) {
				this.sDetalleReporte=ConfiguracionPunVenConstantesFunciones.getDetalleIndiceFK_IdTipoDocumentoTarjetaCredito(id_tipo_documento_tarjeta_creditoFK_IdTipoDocumentoTarjetaCredito);
						
				}
				//ARCHITECTURE
					}
				//ARCHITECTURE
				if(Constantes.ISUSAEJBLOGICLAYER) {
					generarReporteConfiguracionPunVens("FK_IdTipoDocumentoTarjetaCredito",configuracionpunvenLogic.getConfiguracionPunVens());
				} else if(Constantes.ISUSAEJBREMOTE || Constantes.ISUSAEJBHOME) {
					generarReporteConfiguracionPunVens("FK_IdTipoDocumentoTarjetaCredito",configuracionpunvens);
				}
				//ARCHITECTURE

					if(false) {//isMostrarTodosResultadosReporte
						this.pagination.setiFirstResult(this.iNumeroPaginacionPagina);
						this.pagination.setiMaxResults(this.iNumeroPaginacion);

						//ARCHITECTURE
						if(Constantes.ISUSAEJBLOGICLAYER) {
						configuracionpunvenLogic.setConfiguracionPunVens(new ArrayList<ConfiguracionPunVen>());
						configuracionpunvenLogic.getConfiguracionPunVens().addAll(configuracionpunvensAux);
						} else if(Constantes.ISUSAEJBREMOTE || Constantes.ISUSAEJBHOME) {
							configuracionpunvens=new ArrayList<ConfiguracionPunVen>();
							configuracionpunvens.addAll(configuracionpunvensAux);
						}
						//ARCHITECTURE
					}
				}

			}
			else if(sAccionBusqueda.equals("FK_IdTransaccionCuentaFactura")) {
				this.sDetalleReporte=ConfiguracionPunVenConstantesFunciones.getDetalleIndiceFK_IdTransaccionCuentaFactura(id_transaccion_cuenta_facturaFK_IdTransaccionCuentaFactura);

				
				//ARCHITECTURE
				if(Constantes.ISUSAEJBLOGICLAYER) {

					finalQueryGlobal=Funciones.GetFinalQueryAppendBusqueda(finalQueryGlobal, this.sFinalQueryGeneral,finalQueryPaginacion);

					configuracionpunvenLogic.getConfiguracionPunVensFK_IdTransaccionCuentaFactura(finalQueryGlobal,pagination,id_transaccion_cuenta_facturaFK_IdTransaccionCuentaFactura);
				} else if(Constantes.ISUSAEJBREMOTE) {
				this.sDetalleReporte=ConfiguracionPunVenConstantesFunciones.getDetalleIndiceFK_IdTransaccionCuentaFactura(id_transaccion_cuenta_facturaFK_IdTransaccionCuentaFactura);

				
				} else if(Constantes.ISUSAEJBHOME) {
				this.sDetalleReporte=ConfiguracionPunVenConstantesFunciones.getDetalleIndiceFK_IdTransaccionCuentaFactura(id_transaccion_cuenta_facturaFK_IdTransaccionCuentaFactura);

				
				}
				//ARCHITECTURE

				Boolean isNoExiste=false;
				//ARCHITECTURE
				if(Constantes.ISUSAEJBLOGICLAYER) {
					isNoExiste=configuracionpunvenLogic.getConfiguracionPunVens()==null||configuracionpunvenLogic.getConfiguracionPunVens().size()==0;
				} else if(Constantes.ISUSAEJBREMOTE||Constantes.ISUSAEJBHOME) {
					isNoExiste=configuracionpunvens==null|| configuracionpunvens.size()==0;
				}
				//ARCHITECTURE

		if(false && sTipoArchivoReporte!=""&&sTipoArchivoReporte!=null) {//this.isTipoArchivoReporte
			if(false) {//isMostrarTodosResultadosReporte
				this.pagination.setiFirstResult(-1);
				this.pagination.setiMaxResults(-1);

				//ARCHITECTURE
				if(Constantes.ISUSAEJBLOGICLAYER) {
						configuracionpunvensAux=new ArrayList<ConfiguracionPunVen>();
						configuracionpunvensAux.addAll(configuracionpunvenLogic.getConfiguracionPunVens());
				} else if(Constantes.ISUSAEJBREMOTE || Constantes.ISUSAEJBHOME) {
							configuracionpunvensAux=new ArrayList<ConfiguracionPunVen>();
							configuracionpunvensAux.addAll(configuracionpunvens);
				}
				//ARCHITECTURE
								
				
				//ARCHITECTURE
				if(Constantes.ISUSAEJBLOGICLAYER) {
							finalQueryGlobal=Funciones.GetFinalQueryAppendBusqueda(finalQueryGlobal, this.sFinalQueryGeneral,"");
							configuracionpunvenLogic.getConfiguracionPunVensFK_IdTransaccionCuentaFactura(finalQueryGlobal,pagination,id_transaccion_cuenta_facturaFK_IdTransaccionCuentaFactura);
				} else if(Constantes.ISUSAEJBREMOTE) {
				this.sDetalleReporte=ConfiguracionPunVenConstantesFunciones.getDetalleIndiceFK_IdTransaccionCuentaFactura(id_transaccion_cuenta_facturaFK_IdTransaccionCuentaFactura);
						
				} else if(Constantes.ISUSAEJBHOME) {
				this.sDetalleReporte=ConfiguracionPunVenConstantesFunciones.getDetalleIndiceFK_IdTransaccionCuentaFactura(id_transaccion_cuenta_facturaFK_IdTransaccionCuentaFactura);
						
				}
				//ARCHITECTURE
					}
				//ARCHITECTURE
				if(Constantes.ISUSAEJBLOGICLAYER) {
					generarReporteConfiguracionPunVens("FK_IdTransaccionCuentaFactura",configuracionpunvenLogic.getConfiguracionPunVens());
				} else if(Constantes.ISUSAEJBREMOTE || Constantes.ISUSAEJBHOME) {
					generarReporteConfiguracionPunVens("FK_IdTransaccionCuentaFactura",configuracionpunvens);
				}
				//ARCHITECTURE

					if(false) {//isMostrarTodosResultadosReporte
						this.pagination.setiFirstResult(this.iNumeroPaginacionPagina);
						this.pagination.setiMaxResults(this.iNumeroPaginacion);

						//ARCHITECTURE
						if(Constantes.ISUSAEJBLOGICLAYER) {
						configuracionpunvenLogic.setConfiguracionPunVens(new ArrayList<ConfiguracionPunVen>());
						configuracionpunvenLogic.getConfiguracionPunVens().addAll(configuracionpunvensAux);
						} else if(Constantes.ISUSAEJBREMOTE || Constantes.ISUSAEJBHOME) {
							configuracionpunvens=new ArrayList<ConfiguracionPunVen>();
							configuracionpunvens.addAll(configuracionpunvensAux);
						}
						//ARCHITECTURE
					}
				}

			}
			else if(sAccionBusqueda.equals("FK_IdTransaccionCuentaNotaCredito")) {
				this.sDetalleReporte=ConfiguracionPunVenConstantesFunciones.getDetalleIndiceFK_IdTransaccionCuentaNotaCredito(id_transaccion_cuenta_nota_creditoFK_IdTransaccionCuentaNotaCredito);

				
				//ARCHITECTURE
				if(Constantes.ISUSAEJBLOGICLAYER) {

					finalQueryGlobal=Funciones.GetFinalQueryAppendBusqueda(finalQueryGlobal, this.sFinalQueryGeneral,finalQueryPaginacion);

					configuracionpunvenLogic.getConfiguracionPunVensFK_IdTransaccionCuentaNotaCredito(finalQueryGlobal,pagination,id_transaccion_cuenta_nota_creditoFK_IdTransaccionCuentaNotaCredito);
				} else if(Constantes.ISUSAEJBREMOTE) {
				this.sDetalleReporte=ConfiguracionPunVenConstantesFunciones.getDetalleIndiceFK_IdTransaccionCuentaNotaCredito(id_transaccion_cuenta_nota_creditoFK_IdTransaccionCuentaNotaCredito);

				
				} else if(Constantes.ISUSAEJBHOME) {
				this.sDetalleReporte=ConfiguracionPunVenConstantesFunciones.getDetalleIndiceFK_IdTransaccionCuentaNotaCredito(id_transaccion_cuenta_nota_creditoFK_IdTransaccionCuentaNotaCredito);

				
				}
				//ARCHITECTURE

				Boolean isNoExiste=false;
				//ARCHITECTURE
				if(Constantes.ISUSAEJBLOGICLAYER) {
					isNoExiste=configuracionpunvenLogic.getConfiguracionPunVens()==null||configuracionpunvenLogic.getConfiguracionPunVens().size()==0;
				} else if(Constantes.ISUSAEJBREMOTE||Constantes.ISUSAEJBHOME) {
					isNoExiste=configuracionpunvens==null|| configuracionpunvens.size()==0;
				}
				//ARCHITECTURE

		if(false && sTipoArchivoReporte!=""&&sTipoArchivoReporte!=null) {//this.isTipoArchivoReporte
			if(false) {//isMostrarTodosResultadosReporte
				this.pagination.setiFirstResult(-1);
				this.pagination.setiMaxResults(-1);

				//ARCHITECTURE
				if(Constantes.ISUSAEJBLOGICLAYER) {
						configuracionpunvensAux=new ArrayList<ConfiguracionPunVen>();
						configuracionpunvensAux.addAll(configuracionpunvenLogic.getConfiguracionPunVens());
				} else if(Constantes.ISUSAEJBREMOTE || Constantes.ISUSAEJBHOME) {
							configuracionpunvensAux=new ArrayList<ConfiguracionPunVen>();
							configuracionpunvensAux.addAll(configuracionpunvens);
				}
				//ARCHITECTURE
								
				
				//ARCHITECTURE
				if(Constantes.ISUSAEJBLOGICLAYER) {
							finalQueryGlobal=Funciones.GetFinalQueryAppendBusqueda(finalQueryGlobal, this.sFinalQueryGeneral,"");
							configuracionpunvenLogic.getConfiguracionPunVensFK_IdTransaccionCuentaNotaCredito(finalQueryGlobal,pagination,id_transaccion_cuenta_nota_creditoFK_IdTransaccionCuentaNotaCredito);
				} else if(Constantes.ISUSAEJBREMOTE) {
				this.sDetalleReporte=ConfiguracionPunVenConstantesFunciones.getDetalleIndiceFK_IdTransaccionCuentaNotaCredito(id_transaccion_cuenta_nota_creditoFK_IdTransaccionCuentaNotaCredito);
						
				} else if(Constantes.ISUSAEJBHOME) {
				this.sDetalleReporte=ConfiguracionPunVenConstantesFunciones.getDetalleIndiceFK_IdTransaccionCuentaNotaCredito(id_transaccion_cuenta_nota_creditoFK_IdTransaccionCuentaNotaCredito);
						
				}
				//ARCHITECTURE
					}
				//ARCHITECTURE
				if(Constantes.ISUSAEJBLOGICLAYER) {
					generarReporteConfiguracionPunVens("FK_IdTransaccionCuentaNotaCredito",configuracionpunvenLogic.getConfiguracionPunVens());
				} else if(Constantes.ISUSAEJBREMOTE || Constantes.ISUSAEJBHOME) {
					generarReporteConfiguracionPunVens("FK_IdTransaccionCuentaNotaCredito",configuracionpunvens);
				}
				//ARCHITECTURE

					if(false) {//isMostrarTodosResultadosReporte
						this.pagination.setiFirstResult(this.iNumeroPaginacionPagina);
						this.pagination.setiMaxResults(this.iNumeroPaginacion);

						//ARCHITECTURE
						if(Constantes.ISUSAEJBLOGICLAYER) {
						configuracionpunvenLogic.setConfiguracionPunVens(new ArrayList<ConfiguracionPunVen>());
						configuracionpunvenLogic.getConfiguracionPunVens().addAll(configuracionpunvensAux);
						} else if(Constantes.ISUSAEJBREMOTE || Constantes.ISUSAEJBHOME) {
							configuracionpunvens=new ArrayList<ConfiguracionPunVen>();
							configuracionpunvens.addAll(configuracionpunvensAux);
						}
						//ARCHITECTURE
					}
				}

			}
			else if(sAccionBusqueda.equals("FK_IdTransaccionCuentaNotaVenta")) {
				this.sDetalleReporte=ConfiguracionPunVenConstantesFunciones.getDetalleIndiceFK_IdTransaccionCuentaNotaVenta(id_transaccion_cuenta_nota_ventaFK_IdTransaccionCuentaNotaVenta);

				
				//ARCHITECTURE
				if(Constantes.ISUSAEJBLOGICLAYER) {

					finalQueryGlobal=Funciones.GetFinalQueryAppendBusqueda(finalQueryGlobal, this.sFinalQueryGeneral,finalQueryPaginacion);

					configuracionpunvenLogic.getConfiguracionPunVensFK_IdTransaccionCuentaNotaVenta(finalQueryGlobal,pagination,id_transaccion_cuenta_nota_ventaFK_IdTransaccionCuentaNotaVenta);
				} else if(Constantes.ISUSAEJBREMOTE) {
				this.sDetalleReporte=ConfiguracionPunVenConstantesFunciones.getDetalleIndiceFK_IdTransaccionCuentaNotaVenta(id_transaccion_cuenta_nota_ventaFK_IdTransaccionCuentaNotaVenta);

				
				} else if(Constantes.ISUSAEJBHOME) {
				this.sDetalleReporte=ConfiguracionPunVenConstantesFunciones.getDetalleIndiceFK_IdTransaccionCuentaNotaVenta(id_transaccion_cuenta_nota_ventaFK_IdTransaccionCuentaNotaVenta);

				
				}
				//ARCHITECTURE

				Boolean isNoExiste=false;
				//ARCHITECTURE
				if(Constantes.ISUSAEJBLOGICLAYER) {
					isNoExiste=configuracionpunvenLogic.getConfiguracionPunVens()==null||configuracionpunvenLogic.getConfiguracionPunVens().size()==0;
				} else if(Constantes.ISUSAEJBREMOTE||Constantes.ISUSAEJBHOME) {
					isNoExiste=configuracionpunvens==null|| configuracionpunvens.size()==0;
				}
				//ARCHITECTURE

		if(false && sTipoArchivoReporte!=""&&sTipoArchivoReporte!=null) {//this.isTipoArchivoReporte
			if(false) {//isMostrarTodosResultadosReporte
				this.pagination.setiFirstResult(-1);
				this.pagination.setiMaxResults(-1);

				//ARCHITECTURE
				if(Constantes.ISUSAEJBLOGICLAYER) {
						configuracionpunvensAux=new ArrayList<ConfiguracionPunVen>();
						configuracionpunvensAux.addAll(configuracionpunvenLogic.getConfiguracionPunVens());
				} else if(Constantes.ISUSAEJBREMOTE || Constantes.ISUSAEJBHOME) {
							configuracionpunvensAux=new ArrayList<ConfiguracionPunVen>();
							configuracionpunvensAux.addAll(configuracionpunvens);
				}
				//ARCHITECTURE
								
				
				//ARCHITECTURE
				if(Constantes.ISUSAEJBLOGICLAYER) {
							finalQueryGlobal=Funciones.GetFinalQueryAppendBusqueda(finalQueryGlobal, this.sFinalQueryGeneral,"");
							configuracionpunvenLogic.getConfiguracionPunVensFK_IdTransaccionCuentaNotaVenta(finalQueryGlobal,pagination,id_transaccion_cuenta_nota_ventaFK_IdTransaccionCuentaNotaVenta);
				} else if(Constantes.ISUSAEJBREMOTE) {
				this.sDetalleReporte=ConfiguracionPunVenConstantesFunciones.getDetalleIndiceFK_IdTransaccionCuentaNotaVenta(id_transaccion_cuenta_nota_ventaFK_IdTransaccionCuentaNotaVenta);
						
				} else if(Constantes.ISUSAEJBHOME) {
				this.sDetalleReporte=ConfiguracionPunVenConstantesFunciones.getDetalleIndiceFK_IdTransaccionCuentaNotaVenta(id_transaccion_cuenta_nota_ventaFK_IdTransaccionCuentaNotaVenta);
						
				}
				//ARCHITECTURE
					}
				//ARCHITECTURE
				if(Constantes.ISUSAEJBLOGICLAYER) {
					generarReporteConfiguracionPunVens("FK_IdTransaccionCuentaNotaVenta",configuracionpunvenLogic.getConfiguracionPunVens());
				} else if(Constantes.ISUSAEJBREMOTE || Constantes.ISUSAEJBHOME) {
					generarReporteConfiguracionPunVens("FK_IdTransaccionCuentaNotaVenta",configuracionpunvens);
				}
				//ARCHITECTURE

					if(false) {//isMostrarTodosResultadosReporte
						this.pagination.setiFirstResult(this.iNumeroPaginacionPagina);
						this.pagination.setiMaxResults(this.iNumeroPaginacion);

						//ARCHITECTURE
						if(Constantes.ISUSAEJBLOGICLAYER) {
						configuracionpunvenLogic.setConfiguracionPunVens(new ArrayList<ConfiguracionPunVen>());
						configuracionpunvenLogic.getConfiguracionPunVens().addAll(configuracionpunvensAux);
						} else if(Constantes.ISUSAEJBREMOTE || Constantes.ISUSAEJBHOME) {
							configuracionpunvens=new ArrayList<ConfiguracionPunVen>();
							configuracionpunvens.addAll(configuracionpunvensAux);
						}
						//ARCHITECTURE
					}
				}

			}
			else if(sAccionBusqueda.equals("FK_IdTransaccionFactura")) {
				this.sDetalleReporte=ConfiguracionPunVenConstantesFunciones.getDetalleIndiceFK_IdTransaccionFactura(id_transaccion_facturaFK_IdTransaccionFactura);

				
				//ARCHITECTURE
				if(Constantes.ISUSAEJBLOGICLAYER) {

					finalQueryGlobal=Funciones.GetFinalQueryAppendBusqueda(finalQueryGlobal, this.sFinalQueryGeneral,finalQueryPaginacion);

					configuracionpunvenLogic.getConfiguracionPunVensFK_IdTransaccionFactura(finalQueryGlobal,pagination,id_transaccion_facturaFK_IdTransaccionFactura);
				} else if(Constantes.ISUSAEJBREMOTE) {
				this.sDetalleReporte=ConfiguracionPunVenConstantesFunciones.getDetalleIndiceFK_IdTransaccionFactura(id_transaccion_facturaFK_IdTransaccionFactura);

				
				} else if(Constantes.ISUSAEJBHOME) {
				this.sDetalleReporte=ConfiguracionPunVenConstantesFunciones.getDetalleIndiceFK_IdTransaccionFactura(id_transaccion_facturaFK_IdTransaccionFactura);

				
				}
				//ARCHITECTURE

				Boolean isNoExiste=false;
				//ARCHITECTURE
				if(Constantes.ISUSAEJBLOGICLAYER) {
					isNoExiste=configuracionpunvenLogic.getConfiguracionPunVens()==null||configuracionpunvenLogic.getConfiguracionPunVens().size()==0;
				} else if(Constantes.ISUSAEJBREMOTE||Constantes.ISUSAEJBHOME) {
					isNoExiste=configuracionpunvens==null|| configuracionpunvens.size()==0;
				}
				//ARCHITECTURE

		if(false && sTipoArchivoReporte!=""&&sTipoArchivoReporte!=null) {//this.isTipoArchivoReporte
			if(false) {//isMostrarTodosResultadosReporte
				this.pagination.setiFirstResult(-1);
				this.pagination.setiMaxResults(-1);

				//ARCHITECTURE
				if(Constantes.ISUSAEJBLOGICLAYER) {
						configuracionpunvensAux=new ArrayList<ConfiguracionPunVen>();
						configuracionpunvensAux.addAll(configuracionpunvenLogic.getConfiguracionPunVens());
				} else if(Constantes.ISUSAEJBREMOTE || Constantes.ISUSAEJBHOME) {
							configuracionpunvensAux=new ArrayList<ConfiguracionPunVen>();
							configuracionpunvensAux.addAll(configuracionpunvens);
				}
				//ARCHITECTURE
								
				
				//ARCHITECTURE
				if(Constantes.ISUSAEJBLOGICLAYER) {
							finalQueryGlobal=Funciones.GetFinalQueryAppendBusqueda(finalQueryGlobal, this.sFinalQueryGeneral,"");
							configuracionpunvenLogic.getConfiguracionPunVensFK_IdTransaccionFactura(finalQueryGlobal,pagination,id_transaccion_facturaFK_IdTransaccionFactura);
				} else if(Constantes.ISUSAEJBREMOTE) {
				this.sDetalleReporte=ConfiguracionPunVenConstantesFunciones.getDetalleIndiceFK_IdTransaccionFactura(id_transaccion_facturaFK_IdTransaccionFactura);
						
				} else if(Constantes.ISUSAEJBHOME) {
				this.sDetalleReporte=ConfiguracionPunVenConstantesFunciones.getDetalleIndiceFK_IdTransaccionFactura(id_transaccion_facturaFK_IdTransaccionFactura);
						
				}
				//ARCHITECTURE
					}
				//ARCHITECTURE
				if(Constantes.ISUSAEJBLOGICLAYER) {
					generarReporteConfiguracionPunVens("FK_IdTransaccionFactura",configuracionpunvenLogic.getConfiguracionPunVens());
				} else if(Constantes.ISUSAEJBREMOTE || Constantes.ISUSAEJBHOME) {
					generarReporteConfiguracionPunVens("FK_IdTransaccionFactura",configuracionpunvens);
				}
				//ARCHITECTURE

					if(false) {//isMostrarTodosResultadosReporte
						this.pagination.setiFirstResult(this.iNumeroPaginacionPagina);
						this.pagination.setiMaxResults(this.iNumeroPaginacion);

						//ARCHITECTURE
						if(Constantes.ISUSAEJBLOGICLAYER) {
						configuracionpunvenLogic.setConfiguracionPunVens(new ArrayList<ConfiguracionPunVen>());
						configuracionpunvenLogic.getConfiguracionPunVens().addAll(configuracionpunvensAux);
						} else if(Constantes.ISUSAEJBREMOTE || Constantes.ISUSAEJBHOME) {
							configuracionpunvens=new ArrayList<ConfiguracionPunVen>();
							configuracionpunvens.addAll(configuracionpunvensAux);
						}
						//ARCHITECTURE
					}
				}

			}
			else if(sAccionBusqueda.equals("FK_IdTransaccionNotaCredito")) {
				this.sDetalleReporte=ConfiguracionPunVenConstantesFunciones.getDetalleIndiceFK_IdTransaccionNotaCredito(id_transaccion_nota_creditoFK_IdTransaccionNotaCredito);

				
				//ARCHITECTURE
				if(Constantes.ISUSAEJBLOGICLAYER) {

					finalQueryGlobal=Funciones.GetFinalQueryAppendBusqueda(finalQueryGlobal, this.sFinalQueryGeneral,finalQueryPaginacion);

					configuracionpunvenLogic.getConfiguracionPunVensFK_IdTransaccionNotaCredito(finalQueryGlobal,pagination,id_transaccion_nota_creditoFK_IdTransaccionNotaCredito);
				} else if(Constantes.ISUSAEJBREMOTE) {
				this.sDetalleReporte=ConfiguracionPunVenConstantesFunciones.getDetalleIndiceFK_IdTransaccionNotaCredito(id_transaccion_nota_creditoFK_IdTransaccionNotaCredito);

				
				} else if(Constantes.ISUSAEJBHOME) {
				this.sDetalleReporte=ConfiguracionPunVenConstantesFunciones.getDetalleIndiceFK_IdTransaccionNotaCredito(id_transaccion_nota_creditoFK_IdTransaccionNotaCredito);

				
				}
				//ARCHITECTURE

				Boolean isNoExiste=false;
				//ARCHITECTURE
				if(Constantes.ISUSAEJBLOGICLAYER) {
					isNoExiste=configuracionpunvenLogic.getConfiguracionPunVens()==null||configuracionpunvenLogic.getConfiguracionPunVens().size()==0;
				} else if(Constantes.ISUSAEJBREMOTE||Constantes.ISUSAEJBHOME) {
					isNoExiste=configuracionpunvens==null|| configuracionpunvens.size()==0;
				}
				//ARCHITECTURE

		if(false && sTipoArchivoReporte!=""&&sTipoArchivoReporte!=null) {//this.isTipoArchivoReporte
			if(false) {//isMostrarTodosResultadosReporte
				this.pagination.setiFirstResult(-1);
				this.pagination.setiMaxResults(-1);

				//ARCHITECTURE
				if(Constantes.ISUSAEJBLOGICLAYER) {
						configuracionpunvensAux=new ArrayList<ConfiguracionPunVen>();
						configuracionpunvensAux.addAll(configuracionpunvenLogic.getConfiguracionPunVens());
				} else if(Constantes.ISUSAEJBREMOTE || Constantes.ISUSAEJBHOME) {
							configuracionpunvensAux=new ArrayList<ConfiguracionPunVen>();
							configuracionpunvensAux.addAll(configuracionpunvens);
				}
				//ARCHITECTURE
								
				
				//ARCHITECTURE
				if(Constantes.ISUSAEJBLOGICLAYER) {
							finalQueryGlobal=Funciones.GetFinalQueryAppendBusqueda(finalQueryGlobal, this.sFinalQueryGeneral,"");
							configuracionpunvenLogic.getConfiguracionPunVensFK_IdTransaccionNotaCredito(finalQueryGlobal,pagination,id_transaccion_nota_creditoFK_IdTransaccionNotaCredito);
				} else if(Constantes.ISUSAEJBREMOTE) {
				this.sDetalleReporte=ConfiguracionPunVenConstantesFunciones.getDetalleIndiceFK_IdTransaccionNotaCredito(id_transaccion_nota_creditoFK_IdTransaccionNotaCredito);
						
				} else if(Constantes.ISUSAEJBHOME) {
				this.sDetalleReporte=ConfiguracionPunVenConstantesFunciones.getDetalleIndiceFK_IdTransaccionNotaCredito(id_transaccion_nota_creditoFK_IdTransaccionNotaCredito);
						
				}
				//ARCHITECTURE
					}
				//ARCHITECTURE
				if(Constantes.ISUSAEJBLOGICLAYER) {
					generarReporteConfiguracionPunVens("FK_IdTransaccionNotaCredito",configuracionpunvenLogic.getConfiguracionPunVens());
				} else if(Constantes.ISUSAEJBREMOTE || Constantes.ISUSAEJBHOME) {
					generarReporteConfiguracionPunVens("FK_IdTransaccionNotaCredito",configuracionpunvens);
				}
				//ARCHITECTURE

					if(false) {//isMostrarTodosResultadosReporte
						this.pagination.setiFirstResult(this.iNumeroPaginacionPagina);
						this.pagination.setiMaxResults(this.iNumeroPaginacion);

						//ARCHITECTURE
						if(Constantes.ISUSAEJBLOGICLAYER) {
						configuracionpunvenLogic.setConfiguracionPunVens(new ArrayList<ConfiguracionPunVen>());
						configuracionpunvenLogic.getConfiguracionPunVens().addAll(configuracionpunvensAux);
						} else if(Constantes.ISUSAEJBREMOTE || Constantes.ISUSAEJBHOME) {
							configuracionpunvens=new ArrayList<ConfiguracionPunVen>();
							configuracionpunvens.addAll(configuracionpunvensAux);
						}
						//ARCHITECTURE
					}
				}

			}
			else if(sAccionBusqueda.equals("FK_IdTransaccionNotaVenta")) {
				this.sDetalleReporte=ConfiguracionPunVenConstantesFunciones.getDetalleIndiceFK_IdTransaccionNotaVenta(id_transaccion_nota_ventaFK_IdTransaccionNotaVenta);

				
				//ARCHITECTURE
				if(Constantes.ISUSAEJBLOGICLAYER) {

					finalQueryGlobal=Funciones.GetFinalQueryAppendBusqueda(finalQueryGlobal, this.sFinalQueryGeneral,finalQueryPaginacion);

					configuracionpunvenLogic.getConfiguracionPunVensFK_IdTransaccionNotaVenta(finalQueryGlobal,pagination,id_transaccion_nota_ventaFK_IdTransaccionNotaVenta);
				} else if(Constantes.ISUSAEJBREMOTE) {
				this.sDetalleReporte=ConfiguracionPunVenConstantesFunciones.getDetalleIndiceFK_IdTransaccionNotaVenta(id_transaccion_nota_ventaFK_IdTransaccionNotaVenta);

				
				} else if(Constantes.ISUSAEJBHOME) {
				this.sDetalleReporte=ConfiguracionPunVenConstantesFunciones.getDetalleIndiceFK_IdTransaccionNotaVenta(id_transaccion_nota_ventaFK_IdTransaccionNotaVenta);

				
				}
				//ARCHITECTURE

				Boolean isNoExiste=false;
				//ARCHITECTURE
				if(Constantes.ISUSAEJBLOGICLAYER) {
					isNoExiste=configuracionpunvenLogic.getConfiguracionPunVens()==null||configuracionpunvenLogic.getConfiguracionPunVens().size()==0;
				} else if(Constantes.ISUSAEJBREMOTE||Constantes.ISUSAEJBHOME) {
					isNoExiste=configuracionpunvens==null|| configuracionpunvens.size()==0;
				}
				//ARCHITECTURE

		if(false && sTipoArchivoReporte!=""&&sTipoArchivoReporte!=null) {//this.isTipoArchivoReporte
			if(false) {//isMostrarTodosResultadosReporte
				this.pagination.setiFirstResult(-1);
				this.pagination.setiMaxResults(-1);

				//ARCHITECTURE
				if(Constantes.ISUSAEJBLOGICLAYER) {
						configuracionpunvensAux=new ArrayList<ConfiguracionPunVen>();
						configuracionpunvensAux.addAll(configuracionpunvenLogic.getConfiguracionPunVens());
				} else if(Constantes.ISUSAEJBREMOTE || Constantes.ISUSAEJBHOME) {
							configuracionpunvensAux=new ArrayList<ConfiguracionPunVen>();
							configuracionpunvensAux.addAll(configuracionpunvens);
				}
				//ARCHITECTURE
								
				
				//ARCHITECTURE
				if(Constantes.ISUSAEJBLOGICLAYER) {
							finalQueryGlobal=Funciones.GetFinalQueryAppendBusqueda(finalQueryGlobal, this.sFinalQueryGeneral,"");
							configuracionpunvenLogic.getConfiguracionPunVensFK_IdTransaccionNotaVenta(finalQueryGlobal,pagination,id_transaccion_nota_ventaFK_IdTransaccionNotaVenta);
				} else if(Constantes.ISUSAEJBREMOTE) {
				this.sDetalleReporte=ConfiguracionPunVenConstantesFunciones.getDetalleIndiceFK_IdTransaccionNotaVenta(id_transaccion_nota_ventaFK_IdTransaccionNotaVenta);
						
				} else if(Constantes.ISUSAEJBHOME) {
				this.sDetalleReporte=ConfiguracionPunVenConstantesFunciones.getDetalleIndiceFK_IdTransaccionNotaVenta(id_transaccion_nota_ventaFK_IdTransaccionNotaVenta);
						
				}
				//ARCHITECTURE
					}
				//ARCHITECTURE
				if(Constantes.ISUSAEJBLOGICLAYER) {
					generarReporteConfiguracionPunVens("FK_IdTransaccionNotaVenta",configuracionpunvenLogic.getConfiguracionPunVens());
				} else if(Constantes.ISUSAEJBREMOTE || Constantes.ISUSAEJBHOME) {
					generarReporteConfiguracionPunVens("FK_IdTransaccionNotaVenta",configuracionpunvens);
				}
				//ARCHITECTURE

					if(false) {//isMostrarTodosResultadosReporte
						this.pagination.setiFirstResult(this.iNumeroPaginacionPagina);
						this.pagination.setiMaxResults(this.iNumeroPaginacion);

						//ARCHITECTURE
						if(Constantes.ISUSAEJBLOGICLAYER) {
						configuracionpunvenLogic.setConfiguracionPunVens(new ArrayList<ConfiguracionPunVen>());
						configuracionpunvenLogic.getConfiguracionPunVens().addAll(configuracionpunvensAux);
						} else if(Constantes.ISUSAEJBREMOTE || Constantes.ISUSAEJBHOME) {
							configuracionpunvens=new ArrayList<ConfiguracionPunVen>();
							configuracionpunvens.addAll(configuracionpunvensAux);
						}
						//ARCHITECTURE
					}
				}

			} 
		
		
		
		this.redimensionarTablaDatos();
		//this.refrescarForeignKeysDescripcionesConfiguracionPunVen();
		
		
		if(this.conTotales) {
			this.crearFilaTotales();
		}		
		} catch (JRException e) {
			throw e;
		} catch(Exception e) {
			throw e;
      	} finally {
      		//this.finishProcessConfiguracionPunVen();
      	}
		
	}				
	
	public void redimensionarTablaDatos() throws Exception {
		int iSizeTabla=0;
				
		iSizeTabla=this.getSizeTablaDatos();
		
		//ARCHITECTURE
		/*
		if(Constantes.ISUSAEJBLOGICLAYER) {	
			iSizeTabla=configuracionpunvenLogic.getConfiguracionPunVens().size();
		} else if(Constantes.ISUSAEJBREMOTE || Constantes.ISUSAEJBHOME) {
			iSizeTabla=configuracionpunvens.size();
		}
		*/
		//ARCHITECTURE
											
		this.redimensionarTablaDatos(iSizeTabla);		
	}
	
	public Integer getSizeTablaDatos() throws Exception {
		Integer iSizeTabla=0;
				
		//ARCHITECTURE
		if(Constantes.ISUSAEJBLOGICLAYER) {	
			iSizeTabla=configuracionpunvenLogic.getConfiguracionPunVens().size();
		} else if(Constantes.ISUSAEJBREMOTE || Constantes.ISUSAEJBHOME) {
			iSizeTabla=configuracionpunvens.size();
		}
		//ARCHITECTURE
											
		return iSizeTabla;		
	}
	
			
	public Boolean permiteMantenimiento(ConfiguracionPunVen configuracionpunven) {
		Boolean permite=true;
		
		if(this.configuracionpunven.getsType().equals(Constantes2.S_TOTALES)) {
			permite=false;
		}
		
		return permite;
	}
	
	public void traerValoresTablaTotales() throws Exception {
	}
	
	
	public void traerValoresTablaOrderBy() throws Exception {
		if(Constantes.ISUSAEJBLOGICLAYER) {
			this.arrOrderBy=ConfiguracionPunVenConstantesFunciones.getOrderByListaConfiguracionPunVen();							
		} else if(Constantes.ISUSAEJBREMOTE || Constantes.ISUSAEJBHOME) {
			this.arrOrderBy=ConfiguracionPunVenConstantesFunciones.getOrderByListaConfiguracionPunVen();
		}		
	}
	
	
	public Boolean existeFilaTotales() throws Exception {
		Boolean existe=false;
		
		if(Constantes.ISUSAEJBLOGICLAYER) {
			for(ConfiguracionPunVen configuracionpunven:configuracionpunvenLogic.getConfiguracionPunVens()) {
				if(configuracionpunven.getsType().equals(Constantes2.S_TOTALES)) {
					configuracionpunvenTotales=configuracionpunven;
					existe=true;
					break;
				}
			}
								
		} else if(Constantes.ISUSAEJBREMOTE || Constantes.ISUSAEJBHOME) {
			for(ConfiguracionPunVen configuracionpunven:this.configuracionpunvens) {
				if(configuracionpunven.getsType().equals(Constantes2.S_TOTALES)) {
					configuracionpunvenTotales=configuracionpunven;
					existe=true;
					break;
				}
			}
		}
		
		return existe;
	}
	
	public void crearFilaTotales() throws Exception {
		Boolean existe=false;
		
		existe=this.existeFilaTotales();
		
		if(!existe) {
			//SI NO ES UNO A UNO SE CREA FILA TOTALES
			this.configuracionpunvenAux=new ConfiguracionPunVen();
			this.configuracionpunvenAux.setsType(Constantes2.S_TOTALES);
			this.configuracionpunvenAux.setIsNew(false);
			this.configuracionpunvenAux.setIsChanged(false);
			this.configuracionpunvenAux.setIsDeleted(false);
				
			if(Constantes.ISUSAEJBLOGICLAYER) {
				ConfiguracionPunVenConstantesFunciones.TotalizarValoresFilaConfiguracionPunVen(this.configuracionpunvenLogic.getConfiguracionPunVens(),this.configuracionpunvenAux);
				
				this.configuracionpunvenLogic.getConfiguracionPunVens().add(this.configuracionpunvenAux);
				
			} else if(Constantes.ISUSAEJBREMOTE || Constantes.ISUSAEJBHOME) {
				ConfiguracionPunVenConstantesFunciones.TotalizarValoresFilaConfiguracionPunVen(this.configuracionpunvens,this.configuracionpunvenAux);
				
				this.configuracionpunvens.add(this.configuracionpunvenAux);
			}
		}
	}
	
	public void quitarFilaTotales() throws Exception {
		configuracionpunvenTotales=new ConfiguracionPunVen();
		Boolean existe=false;
		
		if(Constantes.ISUSAEJBLOGICLAYER) {
			existe=this.existeFilaTotales();
			
			if(existe) {
				this.configuracionpunvenLogic.getConfiguracionPunVens().remove(configuracionpunvenTotales);
			}			
		} else if(Constantes.ISUSAEJBREMOTE || Constantes.ISUSAEJBHOME) {
			existe=this.existeFilaTotales();
			
			if(existe) {
				this.configuracionpunvens.remove(configuracionpunvenTotales);
			}
		}
	}
	
	public void actualizarFilaTotales() throws Exception {
		configuracionpunvenTotales=new ConfiguracionPunVen();
		Boolean existe=false;
		
		if(Constantes.ISUSAEJBLOGICLAYER) {
			for(ConfiguracionPunVen configuracionpunven:configuracionpunvenLogic.getConfiguracionPunVens()) {
				if(configuracionpunven.getsType().equals(Constantes2.S_TOTALES)) {
					configuracionpunvenTotales=configuracionpunven;
					existe=true;
					break;
				}
			}
			
			if(existe) {
				ConfiguracionPunVenConstantesFunciones.TotalizarValoresFilaConfiguracionPunVen(this.configuracionpunvenLogic.getConfiguracionPunVens(),configuracionpunvenTotales);
			}			
		} else if(Constantes.ISUSAEJBREMOTE || Constantes.ISUSAEJBHOME) {
			for(ConfiguracionPunVen configuracionpunven:this.configuracionpunvens) {
				if(configuracionpunven.getsType().equals(Constantes2.S_TOTALES)) {
					configuracionpunvenTotales=configuracionpunven;
					existe=true;
					break;
				}
			}
			
			if(existe) {
				ConfiguracionPunVenConstantesFunciones.TotalizarValoresFilaConfiguracionPunVen(this.configuracionpunvens,configuracionpunvenTotales);
			}
		}
	}		
	
	public void recargarInformacion()throws Exception {
		try {
			sAccionBusqueda="Todos";
			this.iNumeroPaginacionPagina=0;
			
			this.procesarBusqueda(sAccionBusqueda);
			
		} catch(Exception e) {
			FuncionesSwing.manageException(this, e,logger,ConfiguracionPunVenConstantesFunciones.CLASSNAME);
		}	
	}		
	
	
	public void getConfiguracionPunVensFK_IdBodega()throws Exception {
		try {
			sAccionBusqueda="FK_IdBodega";
			this.iNumeroPaginacionPagina=0;
			this.procesarBusqueda(sAccionBusqueda);

		} catch(Exception e) {
			FuncionesSwing.manageException(this, e,logger);
		}
	}

	public void getConfiguracionPunVensFK_IdClienteConsumidorFinal()throws Exception {
		try {
			sAccionBusqueda="FK_IdClienteConsumidorFinal";
			this.iNumeroPaginacionPagina=0;
			this.procesarBusqueda(sAccionBusqueda);

		} catch(Exception e) {
			FuncionesSwing.manageException(this, e,logger);
		}
	}

	public void getConfiguracionPunVensFK_IdCuentaContableEfectivo()throws Exception {
		try {
			sAccionBusqueda="FK_IdCuentaContableEfectivo";
			this.iNumeroPaginacionPagina=0;
			this.procesarBusqueda(sAccionBusqueda);

		} catch(Exception e) {
			FuncionesSwing.manageException(this, e,logger);
		}
	}

	public void getConfiguracionPunVensFK_IdCuentaContableIce()throws Exception {
		try {
			sAccionBusqueda="FK_IdCuentaContableIce";
			this.iNumeroPaginacionPagina=0;
			this.procesarBusqueda(sAccionBusqueda);

		} catch(Exception e) {
			FuncionesSwing.manageException(this, e,logger);
		}
	}

	public void getConfiguracionPunVensFK_IdCuentaContableOtros()throws Exception {
		try {
			sAccionBusqueda="FK_IdCuentaContableOtros";
			this.iNumeroPaginacionPagina=0;
			this.procesarBusqueda(sAccionBusqueda);

		} catch(Exception e) {
			FuncionesSwing.manageException(this, e,logger);
		}
	}

	public void getConfiguracionPunVensFK_IdEmpresa()throws Exception {
		try {
			sAccionBusqueda="FK_IdEmpresa";
			this.iNumeroPaginacionPagina=0;
			this.procesarBusqueda(sAccionBusqueda);

		} catch(Exception e) {
			FuncionesSwing.manageException(this, e,logger);
		}
	}

	public void getConfiguracionPunVensFK_IdFormatoFactura()throws Exception {
		try {
			sAccionBusqueda="FK_IdFormatoFactura";
			this.iNumeroPaginacionPagina=0;
			this.procesarBusqueda(sAccionBusqueda);

		} catch(Exception e) {
			FuncionesSwing.manageException(this, e,logger);
		}
	}

	public void getConfiguracionPunVensFK_IdFormatoNotaCredito()throws Exception {
		try {
			sAccionBusqueda="FK_IdFormatoNotaCredito";
			this.iNumeroPaginacionPagina=0;
			this.procesarBusqueda(sAccionBusqueda);

		} catch(Exception e) {
			FuncionesSwing.manageException(this, e,logger);
		}
	}

	public void getConfiguracionPunVensFK_IdFormatoNotaVenta()throws Exception {
		try {
			sAccionBusqueda="FK_IdFormatoNotaVenta";
			this.iNumeroPaginacionPagina=0;
			this.procesarBusqueda(sAccionBusqueda);

		} catch(Exception e) {
			FuncionesSwing.manageException(this, e,logger);
		}
	}

	public void getConfiguracionPunVensFK_IdSucursal()throws Exception {
		try {
			sAccionBusqueda="FK_IdSucursal";
			this.iNumeroPaginacionPagina=0;
			this.procesarBusqueda(sAccionBusqueda);

		} catch(Exception e) {
			FuncionesSwing.manageException(this, e,logger);
		}
	}

	public void getConfiguracionPunVensFK_IdTipoDocumentoFactura()throws Exception {
		try {
			sAccionBusqueda="FK_IdTipoDocumentoFactura";
			this.iNumeroPaginacionPagina=0;
			this.procesarBusqueda(sAccionBusqueda);

		} catch(Exception e) {
			FuncionesSwing.manageException(this, e,logger);
		}
	}

	public void getConfiguracionPunVensFK_IdTipoDocumentoNotaCredito()throws Exception {
		try {
			sAccionBusqueda="FK_IdTipoDocumentoNotaCredito";
			this.iNumeroPaginacionPagina=0;
			this.procesarBusqueda(sAccionBusqueda);

		} catch(Exception e) {
			FuncionesSwing.manageException(this, e,logger);
		}
	}

	public void getConfiguracionPunVensFK_IdTipoDocumentoNotaVenta()throws Exception {
		try {
			sAccionBusqueda="FK_IdTipoDocumentoNotaVenta";
			this.iNumeroPaginacionPagina=0;
			this.procesarBusqueda(sAccionBusqueda);

		} catch(Exception e) {
			FuncionesSwing.manageException(this, e,logger);
		}
	}

	public void getConfiguracionPunVensFK_IdTipoDocumentoTarjetaCredito()throws Exception {
		try {
			sAccionBusqueda="FK_IdTipoDocumentoTarjetaCredito";
			this.iNumeroPaginacionPagina=0;
			this.procesarBusqueda(sAccionBusqueda);

		} catch(Exception e) {
			FuncionesSwing.manageException(this, e,logger);
		}
	}

	public void getConfiguracionPunVensFK_IdTransaccionCuentaFactura()throws Exception {
		try {
			sAccionBusqueda="FK_IdTransaccionCuentaFactura";
			this.iNumeroPaginacionPagina=0;
			this.procesarBusqueda(sAccionBusqueda);

		} catch(Exception e) {
			FuncionesSwing.manageException(this, e,logger);
		}
	}

	public void getConfiguracionPunVensFK_IdTransaccionCuentaNotaCredito()throws Exception {
		try {
			sAccionBusqueda="FK_IdTransaccionCuentaNotaCredito";
			this.iNumeroPaginacionPagina=0;
			this.procesarBusqueda(sAccionBusqueda);

		} catch(Exception e) {
			FuncionesSwing.manageException(this, e,logger);
		}
	}

	public void getConfiguracionPunVensFK_IdTransaccionCuentaNotaVenta()throws Exception {
		try {
			sAccionBusqueda="FK_IdTransaccionCuentaNotaVenta";
			this.iNumeroPaginacionPagina=0;
			this.procesarBusqueda(sAccionBusqueda);

		} catch(Exception e) {
			FuncionesSwing.manageException(this, e,logger);
		}
	}

	public void getConfiguracionPunVensFK_IdTransaccionFactura()throws Exception {
		try {
			sAccionBusqueda="FK_IdTransaccionFactura";
			this.iNumeroPaginacionPagina=0;
			this.procesarBusqueda(sAccionBusqueda);

		} catch(Exception e) {
			FuncionesSwing.manageException(this, e,logger);
		}
	}

	public void getConfiguracionPunVensFK_IdTransaccionNotaCredito()throws Exception {
		try {
			sAccionBusqueda="FK_IdTransaccionNotaCredito";
			this.iNumeroPaginacionPagina=0;
			this.procesarBusqueda(sAccionBusqueda);

		} catch(Exception e) {
			FuncionesSwing.manageException(this, e,logger);
		}
	}

	public void getConfiguracionPunVensFK_IdTransaccionNotaVenta()throws Exception {
		try {
			sAccionBusqueda="FK_IdTransaccionNotaVenta";
			this.iNumeroPaginacionPagina=0;
			this.procesarBusqueda(sAccionBusqueda);

		} catch(Exception e) {
			FuncionesSwing.manageException(this, e,logger);
		}
	}

	
	
	public void getConfiguracionPunVensFK_IdBodega(String sFinalQuery,Long id_bodega)throws Exception {
		try {
			
			this.pagination=new Pagination();
			this.pagination.setiFirstResult(this.iNumeroPaginacionPagina);
			this.pagination.setiMaxResults(this.iNumeroPaginacion);

				//ARCHITECTURE
				if(Constantes.ISUSAEJBLOGICLAYER) {
					configuracionpunvenLogic.getConfiguracionPunVensFK_IdBodega(sFinalQuery,this.pagination,id_bodega);
				
				} else if(Constantes.ISUSAEJBREMOTE) {
				
				} else if(Constantes.ISUSAEJBHOME) {
				
				}
				//ARCHITECTURE
		} catch(Exception e) {
			throw e;
		}
	}

	public void getConfiguracionPunVensFK_IdClienteConsumidorFinal(String sFinalQuery,Long id_cliente_consumidor_final)throws Exception {
		try {
			
			this.pagination=new Pagination();
			this.pagination.setiFirstResult(this.iNumeroPaginacionPagina);
			this.pagination.setiMaxResults(this.iNumeroPaginacion);

				//ARCHITECTURE
				if(Constantes.ISUSAEJBLOGICLAYER) {
					configuracionpunvenLogic.getConfiguracionPunVensFK_IdClienteConsumidorFinal(sFinalQuery,this.pagination,id_cliente_consumidor_final);
				
				} else if(Constantes.ISUSAEJBREMOTE) {
				
				} else if(Constantes.ISUSAEJBHOME) {
				
				}
				//ARCHITECTURE
		} catch(Exception e) {
			throw e;
		}
	}

	public void getConfiguracionPunVensFK_IdCuentaContableEfectivo(String sFinalQuery,Long id_cuenta_contable_efectivo)throws Exception {
		try {
			
			this.pagination=new Pagination();
			this.pagination.setiFirstResult(this.iNumeroPaginacionPagina);
			this.pagination.setiMaxResults(this.iNumeroPaginacion);

				//ARCHITECTURE
				if(Constantes.ISUSAEJBLOGICLAYER) {
					configuracionpunvenLogic.getConfiguracionPunVensFK_IdCuentaContableEfectivo(sFinalQuery,this.pagination,id_cuenta_contable_efectivo);
				
				} else if(Constantes.ISUSAEJBREMOTE) {
				
				} else if(Constantes.ISUSAEJBHOME) {
				
				}
				//ARCHITECTURE
		} catch(Exception e) {
			throw e;
		}
	}

	public void getConfiguracionPunVensFK_IdCuentaContableIce(String sFinalQuery,Long id_cuenta_contable_ice)throws Exception {
		try {
			
			this.pagination=new Pagination();
			this.pagination.setiFirstResult(this.iNumeroPaginacionPagina);
			this.pagination.setiMaxResults(this.iNumeroPaginacion);

				//ARCHITECTURE
				if(Constantes.ISUSAEJBLOGICLAYER) {
					configuracionpunvenLogic.getConfiguracionPunVensFK_IdCuentaContableIce(sFinalQuery,this.pagination,id_cuenta_contable_ice);
				
				} else if(Constantes.ISUSAEJBREMOTE) {
				
				} else if(Constantes.ISUSAEJBHOME) {
				
				}
				//ARCHITECTURE
		} catch(Exception e) {
			throw e;
		}
	}

	public void getConfiguracionPunVensFK_IdCuentaContableOtros(String sFinalQuery,Long id_cuenta_contable_otros)throws Exception {
		try {
			
			this.pagination=new Pagination();
			this.pagination.setiFirstResult(this.iNumeroPaginacionPagina);
			this.pagination.setiMaxResults(this.iNumeroPaginacion);

				//ARCHITECTURE
				if(Constantes.ISUSAEJBLOGICLAYER) {
					configuracionpunvenLogic.getConfiguracionPunVensFK_IdCuentaContableOtros(sFinalQuery,this.pagination,id_cuenta_contable_otros);
				
				} else if(Constantes.ISUSAEJBREMOTE) {
				
				} else if(Constantes.ISUSAEJBHOME) {
				
				}
				//ARCHITECTURE
		} catch(Exception e) {
			throw e;
		}
	}

	public void getConfiguracionPunVensFK_IdEmpresa(String sFinalQuery,Long id_empresa)throws Exception {
		try {
			
			this.pagination=new Pagination();
			this.pagination.setiFirstResult(this.iNumeroPaginacionPagina);
			this.pagination.setiMaxResults(this.iNumeroPaginacion);

				//ARCHITECTURE
				if(Constantes.ISUSAEJBLOGICLAYER) {
					configuracionpunvenLogic.getConfiguracionPunVensFK_IdEmpresa(sFinalQuery,this.pagination,id_empresa);
				
				} else if(Constantes.ISUSAEJBREMOTE) {
				
				} else if(Constantes.ISUSAEJBHOME) {
				
				}
				//ARCHITECTURE
		} catch(Exception e) {
			throw e;
		}
	}

	public void getConfiguracionPunVensFK_IdFormatoFactura(String sFinalQuery,Long id_formato_factura)throws Exception {
		try {
			
			this.pagination=new Pagination();
			this.pagination.setiFirstResult(this.iNumeroPaginacionPagina);
			this.pagination.setiMaxResults(this.iNumeroPaginacion);

				//ARCHITECTURE
				if(Constantes.ISUSAEJBLOGICLAYER) {
					configuracionpunvenLogic.getConfiguracionPunVensFK_IdFormatoFactura(sFinalQuery,this.pagination,id_formato_factura);
				
				} else if(Constantes.ISUSAEJBREMOTE) {
				
				} else if(Constantes.ISUSAEJBHOME) {
				
				}
				//ARCHITECTURE
		} catch(Exception e) {
			throw e;
		}
	}

	public void getConfiguracionPunVensFK_IdFormatoNotaCredito(String sFinalQuery,Long id_formato_nota_credito)throws Exception {
		try {
			
			this.pagination=new Pagination();
			this.pagination.setiFirstResult(this.iNumeroPaginacionPagina);
			this.pagination.setiMaxResults(this.iNumeroPaginacion);

				//ARCHITECTURE
				if(Constantes.ISUSAEJBLOGICLAYER) {
					configuracionpunvenLogic.getConfiguracionPunVensFK_IdFormatoNotaCredito(sFinalQuery,this.pagination,id_formato_nota_credito);
				
				} else if(Constantes.ISUSAEJBREMOTE) {
				
				} else if(Constantes.ISUSAEJBHOME) {
				
				}
				//ARCHITECTURE
		} catch(Exception e) {
			throw e;
		}
	}

	public void getConfiguracionPunVensFK_IdFormatoNotaVenta(String sFinalQuery,Long id_formato_nota_venta)throws Exception {
		try {
			
			this.pagination=new Pagination();
			this.pagination.setiFirstResult(this.iNumeroPaginacionPagina);
			this.pagination.setiMaxResults(this.iNumeroPaginacion);

				//ARCHITECTURE
				if(Constantes.ISUSAEJBLOGICLAYER) {
					configuracionpunvenLogic.getConfiguracionPunVensFK_IdFormatoNotaVenta(sFinalQuery,this.pagination,id_formato_nota_venta);
				
				} else if(Constantes.ISUSAEJBREMOTE) {
				
				} else if(Constantes.ISUSAEJBHOME) {
				
				}
				//ARCHITECTURE
		} catch(Exception e) {
			throw e;
		}
	}

	public void getConfiguracionPunVensFK_IdSucursal(String sFinalQuery,Long id_sucursal)throws Exception {
		try {
			
			this.pagination=new Pagination();
			this.pagination.setiFirstResult(this.iNumeroPaginacionPagina);
			this.pagination.setiMaxResults(this.iNumeroPaginacion);

				//ARCHITECTURE
				if(Constantes.ISUSAEJBLOGICLAYER) {
					configuracionpunvenLogic.getConfiguracionPunVensFK_IdSucursal(sFinalQuery,this.pagination,id_sucursal);
				
				} else if(Constantes.ISUSAEJBREMOTE) {
				
				} else if(Constantes.ISUSAEJBHOME) {
				
				}
				//ARCHITECTURE
		} catch(Exception e) {
			throw e;
		}
	}

	public void getConfiguracionPunVensFK_IdTipoDocumentoFactura(String sFinalQuery,Long id_tipo_documento_factura)throws Exception {
		try {
			
			this.pagination=new Pagination();
			this.pagination.setiFirstResult(this.iNumeroPaginacionPagina);
			this.pagination.setiMaxResults(this.iNumeroPaginacion);

				//ARCHITECTURE
				if(Constantes.ISUSAEJBLOGICLAYER) {
					configuracionpunvenLogic.getConfiguracionPunVensFK_IdTipoDocumentoFactura(sFinalQuery,this.pagination,id_tipo_documento_factura);
				
				} else if(Constantes.ISUSAEJBREMOTE) {
				
				} else if(Constantes.ISUSAEJBHOME) {
				
				}
				//ARCHITECTURE
		} catch(Exception e) {
			throw e;
		}
	}

	public void getConfiguracionPunVensFK_IdTipoDocumentoNotaCredito(String sFinalQuery,Long id_tipo_documento_nota_credito)throws Exception {
		try {
			
			this.pagination=new Pagination();
			this.pagination.setiFirstResult(this.iNumeroPaginacionPagina);
			this.pagination.setiMaxResults(this.iNumeroPaginacion);

				//ARCHITECTURE
				if(Constantes.ISUSAEJBLOGICLAYER) {
					configuracionpunvenLogic.getConfiguracionPunVensFK_IdTipoDocumentoNotaCredito(sFinalQuery,this.pagination,id_tipo_documento_nota_credito);
				
				} else if(Constantes.ISUSAEJBREMOTE) {
				
				} else if(Constantes.ISUSAEJBHOME) {
				
				}
				//ARCHITECTURE
		} catch(Exception e) {
			throw e;
		}
	}

	public void getConfiguracionPunVensFK_IdTipoDocumentoNotaVenta(String sFinalQuery,Long id_tipo_documento_nota_venta)throws Exception {
		try {
			
			this.pagination=new Pagination();
			this.pagination.setiFirstResult(this.iNumeroPaginacionPagina);
			this.pagination.setiMaxResults(this.iNumeroPaginacion);

				//ARCHITECTURE
				if(Constantes.ISUSAEJBLOGICLAYER) {
					configuracionpunvenLogic.getConfiguracionPunVensFK_IdTipoDocumentoNotaVenta(sFinalQuery,this.pagination,id_tipo_documento_nota_venta);
				
				} else if(Constantes.ISUSAEJBREMOTE) {
				
				} else if(Constantes.ISUSAEJBHOME) {
				
				}
				//ARCHITECTURE
		} catch(Exception e) {
			throw e;
		}
	}

	public void getConfiguracionPunVensFK_IdTipoDocumentoTarjetaCredito(String sFinalQuery,Long id_tipo_documento_tarjeta_credito)throws Exception {
		try {
			
			this.pagination=new Pagination();
			this.pagination.setiFirstResult(this.iNumeroPaginacionPagina);
			this.pagination.setiMaxResults(this.iNumeroPaginacion);

				//ARCHITECTURE
				if(Constantes.ISUSAEJBLOGICLAYER) {
					configuracionpunvenLogic.getConfiguracionPunVensFK_IdTipoDocumentoTarjetaCredito(sFinalQuery,this.pagination,id_tipo_documento_tarjeta_credito);
				
				} else if(Constantes.ISUSAEJBREMOTE) {
				
				} else if(Constantes.ISUSAEJBHOME) {
				
				}
				//ARCHITECTURE
		} catch(Exception e) {
			throw e;
		}
	}

	public void getConfiguracionPunVensFK_IdTransaccionCuentaFactura(String sFinalQuery,Long id_transaccion_cuenta_factura)throws Exception {
		try {
			
			this.pagination=new Pagination();
			this.pagination.setiFirstResult(this.iNumeroPaginacionPagina);
			this.pagination.setiMaxResults(this.iNumeroPaginacion);

				//ARCHITECTURE
				if(Constantes.ISUSAEJBLOGICLAYER) {
					configuracionpunvenLogic.getConfiguracionPunVensFK_IdTransaccionCuentaFactura(sFinalQuery,this.pagination,id_transaccion_cuenta_factura);
				
				} else if(Constantes.ISUSAEJBREMOTE) {
				
				} else if(Constantes.ISUSAEJBHOME) {
				
				}
				//ARCHITECTURE
		} catch(Exception e) {
			throw e;
		}
	}

	public void getConfiguracionPunVensFK_IdTransaccionCuentaNotaCredito(String sFinalQuery,Long id_transaccion_cuenta_nota_credito)throws Exception {
		try {
			
			this.pagination=new Pagination();
			this.pagination.setiFirstResult(this.iNumeroPaginacionPagina);
			this.pagination.setiMaxResults(this.iNumeroPaginacion);

				//ARCHITECTURE
				if(Constantes.ISUSAEJBLOGICLAYER) {
					configuracionpunvenLogic.getConfiguracionPunVensFK_IdTransaccionCuentaNotaCredito(sFinalQuery,this.pagination,id_transaccion_cuenta_nota_credito);
				
				} else if(Constantes.ISUSAEJBREMOTE) {
				
				} else if(Constantes.ISUSAEJBHOME) {
				
				}
				//ARCHITECTURE
		} catch(Exception e) {
			throw e;
		}
	}

	public void getConfiguracionPunVensFK_IdTransaccionCuentaNotaVenta(String sFinalQuery,Long id_transaccion_cuenta_nota_venta)throws Exception {
		try {
			
			this.pagination=new Pagination();
			this.pagination.setiFirstResult(this.iNumeroPaginacionPagina);
			this.pagination.setiMaxResults(this.iNumeroPaginacion);

				//ARCHITECTURE
				if(Constantes.ISUSAEJBLOGICLAYER) {
					configuracionpunvenLogic.getConfiguracionPunVensFK_IdTransaccionCuentaNotaVenta(sFinalQuery,this.pagination,id_transaccion_cuenta_nota_venta);
				
				} else if(Constantes.ISUSAEJBREMOTE) {
				
				} else if(Constantes.ISUSAEJBHOME) {
				
				}
				//ARCHITECTURE
		} catch(Exception e) {
			throw e;
		}
	}

	public void getConfiguracionPunVensFK_IdTransaccionFactura(String sFinalQuery,Long id_transaccion_factura)throws Exception {
		try {
			
			this.pagination=new Pagination();
			this.pagination.setiFirstResult(this.iNumeroPaginacionPagina);
			this.pagination.setiMaxResults(this.iNumeroPaginacion);

				//ARCHITECTURE
				if(Constantes.ISUSAEJBLOGICLAYER) {
					configuracionpunvenLogic.getConfiguracionPunVensFK_IdTransaccionFactura(sFinalQuery,this.pagination,id_transaccion_factura);
				
				} else if(Constantes.ISUSAEJBREMOTE) {
				
				} else if(Constantes.ISUSAEJBHOME) {
				
				}
				//ARCHITECTURE
		} catch(Exception e) {
			throw e;
		}
	}

	public void getConfiguracionPunVensFK_IdTransaccionNotaCredito(String sFinalQuery,Long id_transaccion_nota_credito)throws Exception {
		try {
			
			this.pagination=new Pagination();
			this.pagination.setiFirstResult(this.iNumeroPaginacionPagina);
			this.pagination.setiMaxResults(this.iNumeroPaginacion);

				//ARCHITECTURE
				if(Constantes.ISUSAEJBLOGICLAYER) {
					configuracionpunvenLogic.getConfiguracionPunVensFK_IdTransaccionNotaCredito(sFinalQuery,this.pagination,id_transaccion_nota_credito);
				
				} else if(Constantes.ISUSAEJBREMOTE) {
				
				} else if(Constantes.ISUSAEJBHOME) {
				
				}
				//ARCHITECTURE
		} catch(Exception e) {
			throw e;
		}
	}

	public void getConfiguracionPunVensFK_IdTransaccionNotaVenta(String sFinalQuery,Long id_transaccion_nota_venta)throws Exception {
		try {
			
			this.pagination=new Pagination();
			this.pagination.setiFirstResult(this.iNumeroPaginacionPagina);
			this.pagination.setiMaxResults(this.iNumeroPaginacion);

				//ARCHITECTURE
				if(Constantes.ISUSAEJBLOGICLAYER) {
					configuracionpunvenLogic.getConfiguracionPunVensFK_IdTransaccionNotaVenta(sFinalQuery,this.pagination,id_transaccion_nota_venta);
				
				} else if(Constantes.ISUSAEJBREMOTE) {
				
				} else if(Constantes.ISUSAEJBHOME) {
				
				}
				//ARCHITECTURE
		} catch(Exception e) {
			throw e;
		}
	}

	
	public void onLoad()throws Exception {		
		try {		
			isEntroOnLoad=true;
			//INTENTA TRAER DATOS DE BUSQUEDA ANTERIOR
			this.traerDatosBusquedaDesdeSession();
					
			//SINO SE CUMPLE VIENE DE PADRE FOREIGN O BUSQUEDA ANTIGUA
			if(this.sAccionBusqueda.equals("")) {
				this.sAccionBusqueda="Todos";
			}
								
			this.procesarBusqueda(sAccionBusqueda);
			
		} catch (Exception e) {
			throw e;
		}
	}		
	
	public void inicializarPermisosConfiguracionPunVen() {
		this.isPermisoTodoConfiguracionPunVen=false;
		this.isPermisoNuevoConfiguracionPunVen=false;
		this.isPermisoActualizarConfiguracionPunVen=false;
		this.isPermisoActualizarOriginalConfiguracionPunVen=false;
		this.isPermisoEliminarConfiguracionPunVen=false;
		this.isPermisoGuardarCambiosConfiguracionPunVen=false;
		this.isPermisoConsultaConfiguracionPunVen=false;
		this.isPermisoBusquedaConfiguracionPunVen=false;
		this.isPermisoReporteConfiguracionPunVen=false;		
		this.isPermisoOrdenConfiguracionPunVen=false;		
		this.isPermisoPaginacionMedioConfiguracionPunVen=false;		
		this.isPermisoPaginacionAltoConfiguracionPunVen=false;
		this.isPermisoPaginacionTodoConfiguracionPunVen=false;
		this.isPermisoCopiarConfiguracionPunVen=false;		
		this.isPermisoVerFormConfiguracionPunVen=false;		
		this.isPermisoDuplicarConfiguracionPunVen=false;		
		this.isPermisoOrdenConfiguracionPunVen=false;		
	}
	
	public void setPermisosUsuarioConfiguracionPunVen(Boolean isPermiso) {
		this.isPermisoTodoConfiguracionPunVen=isPermiso;
		this.isPermisoNuevoConfiguracionPunVen=isPermiso;
		this.isPermisoActualizarConfiguracionPunVen=isPermiso;
		this.isPermisoActualizarOriginalConfiguracionPunVen=isPermiso;
		this.isPermisoEliminarConfiguracionPunVen=isPermiso;
		this.isPermisoGuardarCambiosConfiguracionPunVen=isPermiso;
		this.isPermisoConsultaConfiguracionPunVen=isPermiso;
		this.isPermisoBusquedaConfiguracionPunVen=isPermiso;
		this.isPermisoReporteConfiguracionPunVen=isPermiso;
		this.isPermisoOrdenConfiguracionPunVen=isPermiso;		
		this.isPermisoPaginacionMedioConfiguracionPunVen=isPermiso;		
		this.isPermisoPaginacionAltoConfiguracionPunVen=isPermiso;		
		this.isPermisoPaginacionTodoConfiguracionPunVen=isPermiso;		
		this.isPermisoCopiarConfiguracionPunVen=isPermiso;		
		this.isPermisoVerFormConfiguracionPunVen=isPermiso;		
		this.isPermisoDuplicarConfiguracionPunVen=isPermiso;
		this.isPermisoOrdenConfiguracionPunVen=isPermiso;
	}
	
	public void setPermisosMantenimientoUsuarioConfiguracionPunVen(Boolean isPermiso) {
		//this.isPermisoTodoConfiguracionPunVen=isPermiso;
		this.isPermisoNuevoConfiguracionPunVen=isPermiso;
		this.isPermisoActualizarConfiguracionPunVen=isPermiso;
		this.isPermisoActualizarOriginalConfiguracionPunVen=isPermiso;
		this.isPermisoEliminarConfiguracionPunVen=isPermiso;
		this.isPermisoGuardarCambiosConfiguracionPunVen=isPermiso;
		//this.isPermisoConsultaConfiguracionPunVen=isPermiso;
		//this.isPermisoBusquedaConfiguracionPunVen=isPermiso;
		//this.isPermisoReporteConfiguracionPunVen=isPermiso;
		//this.isPermisoOrdenConfiguracionPunVen=isPermiso;		
		//this.isPermisoPaginacionMedioConfiguracionPunVen=isPermiso;		
		//this.isPermisoPaginacionAltoConfiguracionPunVen=isPermiso;		
		//this.isPermisoPaginacionTodoConfiguracionPunVen=isPermiso;		
		//this.isPermisoCopiarConfiguracionPunVen=isPermiso;		
		//this.isPermisoDuplicarConfiguracionPunVen=isPermiso;
		//this.isPermisoOrdenConfiguracionPunVen=isPermiso;
	}
	
	public void inicializarSetPermisosUsuarioConfiguracionPunVenClasesRelacionadas() throws Exception {
		ArrayList<String> arrPaginas=new ArrayList<String>();		
		ArrayList<Opcion> opcionsFinal=new ArrayList<Opcion>();	
		
		
		if(ConfiguracionPunVenJInternalFrame.CON_LLAMADA_SIMPLE) {
			this.opcionsRelacionadas.addAll(this.sistemaReturnGeneral.getOpcionsRelacionadas());
			
		} else {
			if(Constantes.ISUSAEJBLOGICLAYER) {
				opcionsFinal=sistemaLogicAdditional.tienePermisosOpcionesEnPaginaWeb(this.usuarioActual, Constantes.LIDSISTEMAACTUAL, arrPaginas);
			} else if(Constantes.ISUSAEJBREMOTE) {
			} else if(Constantes.ISUSAEJBHOME) {
			}
			
			this.opcionsRelacionadas.addAll(opcionsFinal);
		}
		
		
		
	}
	
	public Boolean tienePermisosUsuarioEnPaginaWebConfiguracionPunVen(String sPagina) throws Exception {
		Boolean tienePermisos=false;
		
		if(Constantes.ISUSAEJBLOGICLAYER) {
			tienePermisos=sistemaLogicAdditional.tienePermisosEnPaginaWeb(this.usuarioActual, Constantes.LIDSISTEMAACTUAL, sPagina);
		} else if(Constantes.ISUSAEJBREMOTE) {
		} else if(Constantes.ISUSAEJBHOME) {
		}
		
		return tienePermisos;
	}
	
	public void inicializarSetPermisosUsuarioConfiguracionPunVenClasesRelacionadas(Boolean conPermiso) throws Exception {
		
	}
	
	public Boolean verificarGetPermisosUsuarioConfiguracionPunVenClaseRelacionada(ArrayList<String> arrPaginasFinal,String sPaginaActual) throws Exception {
		Boolean verificado=false;
		
		verificado=Funciones2.verificarGetPermisosUsuarioClaseRelacionada(arrPaginasFinal,sPaginaActual);				
		
		return verificado;
	}
	
	public Boolean verificarGetPermisosUsuarioOpcionConfiguracionPunVenClaseRelacionada(List<Opcion> opcionsFinal,String sPaginaActual) throws Exception {
		Boolean verificado=false;
		
		verificado=Funciones2.verificarGetPermisosUsuarioOpcionClaseRelacionada(opcionsFinal,sPaginaActual);				
		
		return verificado;
	}
	
	public void actualizarTabsSetPermisosUsuarioConfiguracionPunVenClasesRelacionadas() throws Exception {
		
	}
	
	public void setPermisosUsuarioConfiguracionPunVen() throws Exception {
		
		PerfilOpcion perfilOpcionUsuario=new PerfilOpcion();		
		Long idOpcion=this.opcionActual.getId();
		
		if(ConfiguracionPunVenJInternalFrame.CON_LLAMADA_SIMPLE) {
			perfilOpcionUsuario=this.sistemaReturnGeneral.getPerfilOpcion();
			
		} else {
			if(this.configuracionpunvenSessionBean.getEsGuardarRelacionado()) {
				idOpcion=0L;
			}
			
			if(Constantes.ISUSAEJBLOGICLAYER) {	
				perfilOpcionUsuario=sistemaLogicAdditional.traerPermisosPaginaWebPerfilOpcion(this.usuarioActual, Constantes.LIDSISTEMAACTUAL, ConfiguracionPunVenConstantesFunciones.SNOMBREOPCION,idOpcion);				
			} else if(Constantes.ISUSAEJBREMOTE) {
			} else if(Constantes.ISUSAEJBHOME) {
			}
		}
		
		if(perfilOpcionUsuario!=null && perfilOpcionUsuario.getId()>0) {
			this.isPermisoNuevoConfiguracionPunVen=perfilOpcionUsuario.getingreso()||perfilOpcionUsuario.gettodo();
			this.isPermisoActualizarConfiguracionPunVen=perfilOpcionUsuario.getmodificacion()||perfilOpcionUsuario.gettodo();
			this.isPermisoActualizarOriginalConfiguracionPunVen=this.isPermisoActualizarConfiguracionPunVen;
			this.isPermisoEliminarConfiguracionPunVen=perfilOpcionUsuario.geteliminacion()||perfilOpcionUsuario.gettodo();
			this.isPermisoGuardarCambiosConfiguracionPunVen=perfilOpcionUsuario.getguardar_cambios()||perfilOpcionUsuario.gettodo();
			this.isPermisoConsultaConfiguracionPunVen=perfilOpcionUsuario.getconsulta()||perfilOpcionUsuario.gettodo();
			this.isPermisoBusquedaConfiguracionPunVen=perfilOpcionUsuario.getbusqueda()||perfilOpcionUsuario.gettodo();
			this.isPermisoTodoConfiguracionPunVen=perfilOpcionUsuario.gettodo()||perfilOpcionUsuario.gettodo();
			this.isPermisoReporteConfiguracionPunVen=perfilOpcionUsuario.getreporte()||perfilOpcionUsuario.gettodo();
			this.isPermisoOrdenConfiguracionPunVen=perfilOpcionUsuario.getorden()||perfilOpcionUsuario.gettodo();
			this.isPermisoPaginacionMedioConfiguracionPunVen=perfilOpcionUsuario.getpaginacion_medio()||perfilOpcionUsuario.gettodo();
			this.isPermisoPaginacionAltoConfiguracionPunVen=perfilOpcionUsuario.getpaginacion_alto()||perfilOpcionUsuario.gettodo();
			this.isPermisoPaginacionTodoConfiguracionPunVen=perfilOpcionUsuario.getpaginacion_todo()||perfilOpcionUsuario.gettodo();
			this.isPermisoCopiarConfiguracionPunVen=perfilOpcionUsuario.getcopiar()||perfilOpcionUsuario.gettodo();
			this.isPermisoVerFormConfiguracionPunVen=true;//perfilOpcionUsuario.getver_form()||perfilOpcionUsuario.gettodo();
			this.isPermisoDuplicarConfiguracionPunVen=perfilOpcionUsuario.getduplicar()||perfilOpcionUsuario.gettodo();
			this.isPermisoOrdenConfiguracionPunVen=perfilOpcionUsuario.getorden()||perfilOpcionUsuario.gettodo();
			
			if(this.configuracionpunvenSessionBean.getEsGuardarRelacionado()) {
				this.opcionActual.setId(perfilOpcionUsuario.getid_opcion());
				
				this.jTableDatosConfiguracionPunVen.setToolTipText(this.jTableDatosConfiguracionPunVen.getToolTipText()+"_"+perfilOpcionUsuario.getid_opcion());		
			}
		} else {
			this.setPermisosUsuarioConfiguracionPunVen(false);
		}
		
		//SI SE NECESITA PONER TODOS LOS PERMISOS POR DEFECTO
		//
		
	}
	
	public void setAccionesUsuarioConfiguracionPunVen(Boolean esParaAccionesFormulario) throws Exception {		
		Reporte reporte=null;
		
		if(!esParaAccionesFormulario) {
			this.accions=new ArrayList<Accion>();
			
			if(ConfiguracionPunVenJInternalFrame.CON_LLAMADA_SIMPLE) {
				this.accions=this.sistemaReturnGeneral.getAccions();
				
				
			} else {
				if(Constantes.ISUSAEJBLOGICLAYER) {	
					this.accions=sistemaLogicAdditional.getAccionesUsuario(this.usuarioActual,this.opcionActual,false);				
				} else if(Constantes.ISUSAEJBREMOTE) {
				} else if(Constantes.ISUSAEJBHOME) {
				}
			}
			
			if(this.accions.size()>0) {			
				for(Accion accion:this.accions) {
					reporte=new Reporte();
					reporte.setsCodigo(accion.getcodigo());
					reporte.setsDescripcion(accion.getnombre());
		
		
					this.tiposAcciones.add(reporte);
				}
			}	
			
			

			reporte=new Reporte();
			reporte.setsCodigo("");
			reporte.setsDescripcion("");

			this.tiposAcciones.add(reporte);
			
		} else {
			//ACCIONES FORMULARIO
			this.accionsFormulario=new ArrayList<Accion>();
			
			if(ConfiguracionPunVenJInternalFrame.CON_LLAMADA_SIMPLE) {
				this.accionsFormulario=this.sistemaReturnGeneral.getAccionsFormulario();
			
			} else {
				if(Constantes.ISUSAEJBLOGICLAYER) {	
					this.accionsFormulario=sistemaLogicAdditional.getAccionesUsuario(this.usuarioActual,this.opcionActual,true);				
				} else if(Constantes.ISUSAEJBREMOTE) {
				} else if(Constantes.ISUSAEJBHOME) {
				}
			}
			
			if(this.accionsFormulario.size()>0) {			
				for(Accion accion:this.accionsFormulario) {
					reporte=new Reporte();
					reporte.setsCodigo(accion.getcodigo());
					reporte.setsDescripcion(accion.getnombre());
					
					this.tiposAccionesFormulario.add(reporte);
				}
			}	
			
			

			reporte=new Reporte();
			reporte.setsCodigo("");
			reporte.setsDescripcion("");

			this.tiposAccionesFormulario.add(reporte);
		}				
	}	 	
	
	public void setRelacionesUsuarioConfiguracionPunVen() throws Exception {
		Reporte reporte=null;
		
		
		
		
		//ORDENAR ALFABETICAMENTE
		Collections.sort(this.tiposRelaciones, new ReporteComparator());
		/*
		reporte=new Reporte();
		reporte.setsCodigo(accion.getcodigo());
		reporte.setsDescripcion(accion.getnombre());
			
		this.tiposRelaciones.add(reporte);
		*/
	}	
	
		
	@SuppressWarnings({ "unchecked", "rawtypes" } )
	public void inicializarCombosForeignKeyConfiguracionPunVenListas()throws Exception {
		try	{						
			
				this.empresasForeignKey=new ArrayList();
				this.sucursalsForeignKey=new ArrayList();
				this.bodegasForeignKey=new ArrayList();
				this.cuentacontableefectivosForeignKey=new ArrayList();
				this.cuentacontableicesForeignKey=new ArrayList();
				this.cuentacontableotrossForeignKey=new ArrayList();
				this.clienteconsumidorfinalsForeignKey=new ArrayList();
				this.tipodocumentofacturasForeignKey=new ArrayList();
				this.tipodocumentonotaventasForeignKey=new ArrayList();
				this.tipodocumentonotacreditosForeignKey=new ArrayList();
				this.tipodocumentotarjetacreditosForeignKey=new ArrayList();
				this.formatofacturasForeignKey=new ArrayList();
				this.formatonotaventasForeignKey=new ArrayList();
				this.formatonotacreditosForeignKey=new ArrayList();
				this.transaccionfacturasForeignKey=new ArrayList();
				this.transaccionnotaventasForeignKey=new ArrayList();
				this.transaccionnotacreditosForeignKey=new ArrayList();
				this.transaccioncuentafacturasForeignKey=new ArrayList();
				this.transaccioncuentanotaventasForeignKey=new ArrayList();
				this.transaccioncuentanotacreditosForeignKey=new ArrayList();
		} catch(Exception e) {
			throw e;
		}		
	}
	
	public void cargarCombosTodosForeignKeyConfiguracionPunVenListas(Boolean cargarCombosDependencia)throws Exception {
		try	{
			
			ArrayList<String> arrColumnasGlobales=new ArrayList<String>();
			String  finalQueryGlobal="";
			String sFinalQueryCombo="";
			
			Modulo  moduloActualAux=new Modulo();
			
			if(ConfiguracionPunVenJInternalFrame.ISLOAD_FKLOTE) {
				this.cargarCombosLoteForeignKeyConfiguracionPunVenListas(false);
			} else {
			
				this.cargarCombosForeignKeyEmpresaListas(cargarCombosDependencia,sFinalQueryCombo);
				this.cargarCombosForeignKeySucursalListas(cargarCombosDependencia,sFinalQueryCombo);
				this.cargarCombosForeignKeyBodegaListas(cargarCombosDependencia,sFinalQueryCombo);
				this.cargarCombosForeignKeyCuentaContableEfectivoListas(cargarCombosDependencia,sFinalQueryCombo);
				this.cargarCombosForeignKeyCuentaContableIceListas(cargarCombosDependencia,sFinalQueryCombo);
				this.cargarCombosForeignKeyCuentaContableOtrosListas(cargarCombosDependencia,sFinalQueryCombo);
				this.cargarCombosForeignKeyClienteConsumidorFinalListas(cargarCombosDependencia,sFinalQueryCombo);
				this.cargarCombosForeignKeyTipoDocumentoFacturaListas(cargarCombosDependencia,sFinalQueryCombo);
				this.cargarCombosForeignKeyTipoDocumentoNotaVentaListas(cargarCombosDependencia,sFinalQueryCombo);
				this.cargarCombosForeignKeyTipoDocumentoNotaCreditoListas(cargarCombosDependencia,sFinalQueryCombo);
				this.cargarCombosForeignKeyTipoDocumentoTarjetaCreditoListas(cargarCombosDependencia,sFinalQueryCombo);
				this.cargarCombosForeignKeyFormatoFacturaListas(cargarCombosDependencia,sFinalQueryCombo);
				this.cargarCombosForeignKeyFormatoNotaVentaListas(cargarCombosDependencia,sFinalQueryCombo);
				this.cargarCombosForeignKeyFormatoNotaCreditoListas(cargarCombosDependencia,sFinalQueryCombo);
				this.cargarCombosForeignKeyTransaccionFacturaListas(cargarCombosDependencia,sFinalQueryCombo);
				this.cargarCombosForeignKeyTransaccionNotaVentaListas(cargarCombosDependencia,sFinalQueryCombo);
				this.cargarCombosForeignKeyTransaccionNotaCreditoListas(cargarCombosDependencia,sFinalQueryCombo);
				this.cargarCombosForeignKeyTransaccionCuentaFacturaListas(cargarCombosDependencia,sFinalQueryCombo);
				this.cargarCombosForeignKeyTransaccionCuentaNotaVentaListas(cargarCombosDependencia,sFinalQueryCombo);
				this.cargarCombosForeignKeyTransaccionCuentaNotaCreditoListas(cargarCombosDependencia,sFinalQueryCombo);
			}
		} catch(Exception e) {
			throw e;
		}		
	}		
	
	

	public void cargarCombosForeignKeyEmpresaListas(Boolean cargarCombosDependencia,String sFinalQuery)throws Exception {
		try	{
			ArrayList<String> arrColumnasGlobales=new ArrayList<String>();

			String  finalQueryGlobal="";

			Modulo  moduloActualAux=new Modulo();

			if((this.empresasForeignKey==null||this.empresasForeignKey.size()<=0)) {
				this.arrDatoGeneral= new  ArrayList<DatoGeneral>();
				this.arrDatoGeneralNo= new  ArrayList<String>();

				arrColumnasGlobales=EmpresaConstantesFunciones.getArrayColumnasGlobalesEmpresa(this.arrDatoGeneral,this.arrDatoGeneralNo);
				finalQueryGlobal=Funciones.GetWhereGlobalConstants(this.parametroGeneralUsuario,this.moduloActual,true,false,arrColumnasGlobales,EmpresaConstantesFunciones.TABLENAME);

				finalQueryGlobal=Funciones.GetFinalQueryAppend(finalQueryGlobal, sFinalQuery);
				finalQueryGlobal=Funciones.GetFinalQueryAppend(finalQueryGlobal, "");

				finalQueryGlobal+=EmpresaConstantesFunciones.SFINALQUERY;

				this.cargarCombosEmpresasForeignKeyLista(finalQueryGlobal);
			}

		} catch(Exception e) {
			throw e;
		}
	}

	public void cargarCombosForeignKeySucursalListas(Boolean cargarCombosDependencia,String sFinalQuery)throws Exception {
		try	{
			ArrayList<String> arrColumnasGlobales=new ArrayList<String>();

			String  finalQueryGlobal="";

			Modulo  moduloActualAux=new Modulo();

			if((this.sucursalsForeignKey==null||this.sucursalsForeignKey.size()<=0)) {
				this.arrDatoGeneral= new  ArrayList<DatoGeneral>();
				this.arrDatoGeneralNo= new  ArrayList<String>();

				arrColumnasGlobales=SucursalConstantesFunciones.getArrayColumnasGlobalesSucursal(this.arrDatoGeneral,this.arrDatoGeneralNo);
				finalQueryGlobal=Funciones.GetWhereGlobalConstants(this.parametroGeneralUsuario,this.moduloActual,true,false,arrColumnasGlobales,SucursalConstantesFunciones.TABLENAME);

				finalQueryGlobal=Funciones.GetFinalQueryAppend(finalQueryGlobal, sFinalQuery);
				finalQueryGlobal=Funciones.GetFinalQueryAppend(finalQueryGlobal, "");

				finalQueryGlobal+=SucursalConstantesFunciones.SFINALQUERY;

				this.cargarCombosSucursalsForeignKeyLista(finalQueryGlobal);
			}

		} catch(Exception e) {
			throw e;
		}
	}

	public void cargarCombosForeignKeyBodegaListas(Boolean cargarCombosDependencia,String sFinalQuery)throws Exception {
		try	{
			ArrayList<String> arrColumnasGlobales=new ArrayList<String>();

			String  finalQueryGlobal="";

			Modulo  moduloActualAux=new Modulo();

			if((this.bodegasForeignKey==null||this.bodegasForeignKey.size()<=0)) {
				this.arrDatoGeneral= new  ArrayList<DatoGeneral>();
				this.arrDatoGeneralNo= new  ArrayList<String>();

				arrColumnasGlobales=BodegaConstantesFunciones.getArrayColumnasGlobalesBodega(this.arrDatoGeneral,this.arrDatoGeneralNo);
				finalQueryGlobal=Funciones.GetWhereGlobalConstants(this.parametroGeneralUsuario,this.moduloActual,true,false,arrColumnasGlobales,BodegaConstantesFunciones.TABLENAME);

				finalQueryGlobal=Funciones.GetFinalQueryAppend(finalQueryGlobal, sFinalQuery);
				finalQueryGlobal=Funciones.GetFinalQueryAppend(finalQueryGlobal, "");

				finalQueryGlobal+=BodegaConstantesFunciones.SFINALQUERY;

				this.cargarCombosBodegasForeignKeyLista(finalQueryGlobal);
			}

		} catch(Exception e) {
			throw e;
		}
	}

	public void cargarCombosForeignKeyCuentaContableEfectivoListas(Boolean cargarCombosDependencia,String sFinalQuery)throws Exception {
		try	{
			ArrayList<String> arrColumnasGlobales=new ArrayList<String>();

			String  finalQueryGlobal="";

			Modulo  moduloActualAux=new Modulo();

			if((this.cuentacontableefectivosForeignKey==null||this.cuentacontableefectivosForeignKey.size()<=0)) {
				this.arrDatoGeneral= new  ArrayList<DatoGeneral>();
				this.arrDatoGeneralNo= new  ArrayList<String>();

				arrColumnasGlobales=CuentaContableConstantesFunciones.getArrayColumnasGlobalesCuentaContable(this.arrDatoGeneral,this.arrDatoGeneralNo);
				finalQueryGlobal=Funciones.GetWhereGlobalConstants(this.parametroGeneralUsuario,this.moduloActual,true,false,arrColumnasGlobales,CuentaContableConstantesFunciones.TABLENAME);

				finalQueryGlobal=Funciones.GetFinalQueryAppend(finalQueryGlobal, sFinalQuery);
				finalQueryGlobal=Funciones.GetFinalQueryAppend(finalQueryGlobal, "");

				finalQueryGlobal+=CuentaContableConstantesFunciones.SFINALQUERY;

				this.cargarCombosCuentaContableEfectivosForeignKeyLista(finalQueryGlobal);
			}

		} catch(Exception e) {
			throw e;
		}
	}

	public void cargarCombosForeignKeyCuentaContableIceListas(Boolean cargarCombosDependencia,String sFinalQuery)throws Exception {
		try	{
			ArrayList<String> arrColumnasGlobales=new ArrayList<String>();

			String  finalQueryGlobal="";

			Modulo  moduloActualAux=new Modulo();

			if((this.cuentacontableicesForeignKey==null||this.cuentacontableicesForeignKey.size()<=0)) {
				this.arrDatoGeneral= new  ArrayList<DatoGeneral>();
				this.arrDatoGeneralNo= new  ArrayList<String>();

				arrColumnasGlobales=CuentaContableConstantesFunciones.getArrayColumnasGlobalesCuentaContable(this.arrDatoGeneral,this.arrDatoGeneralNo);
				finalQueryGlobal=Funciones.GetWhereGlobalConstants(this.parametroGeneralUsuario,this.moduloActual,true,false,arrColumnasGlobales,CuentaContableConstantesFunciones.TABLENAME);

				finalQueryGlobal=Funciones.GetFinalQueryAppend(finalQueryGlobal, sFinalQuery);
				finalQueryGlobal=Funciones.GetFinalQueryAppend(finalQueryGlobal, "");

				finalQueryGlobal+=CuentaContableConstantesFunciones.SFINALQUERY;

				this.cargarCombosCuentaContableIcesForeignKeyLista(finalQueryGlobal);
			}

		} catch(Exception e) {
			throw e;
		}
	}

	public void cargarCombosForeignKeyCuentaContableOtrosListas(Boolean cargarCombosDependencia,String sFinalQuery)throws Exception {
		try	{
			ArrayList<String> arrColumnasGlobales=new ArrayList<String>();

			String  finalQueryGlobal="";

			Modulo  moduloActualAux=new Modulo();

			if((this.cuentacontableotrossForeignKey==null||this.cuentacontableotrossForeignKey.size()<=0)) {
				this.arrDatoGeneral= new  ArrayList<DatoGeneral>();
				this.arrDatoGeneralNo= new  ArrayList<String>();

				arrColumnasGlobales=CuentaContableConstantesFunciones.getArrayColumnasGlobalesCuentaContable(this.arrDatoGeneral,this.arrDatoGeneralNo);
				finalQueryGlobal=Funciones.GetWhereGlobalConstants(this.parametroGeneralUsuario,this.moduloActual,true,false,arrColumnasGlobales,CuentaContableConstantesFunciones.TABLENAME);

				finalQueryGlobal=Funciones.GetFinalQueryAppend(finalQueryGlobal, sFinalQuery);
				finalQueryGlobal=Funciones.GetFinalQueryAppend(finalQueryGlobal, "");

				finalQueryGlobal+=CuentaContableConstantesFunciones.SFINALQUERY;

				this.cargarCombosCuentaContableOtrossForeignKeyLista(finalQueryGlobal);
			}

		} catch(Exception e) {
			throw e;
		}
	}

	public void cargarCombosForeignKeyClienteConsumidorFinalListas(Boolean cargarCombosDependencia,String sFinalQuery)throws Exception {
		try	{
			ArrayList<String> arrColumnasGlobales=new ArrayList<String>();

			String  finalQueryGlobal="";

			Modulo  moduloActualAux=new Modulo();

			if((this.clienteconsumidorfinalsForeignKey==null||this.clienteconsumidorfinalsForeignKey.size()<=0)) {
				this.arrDatoGeneral= new  ArrayList<DatoGeneral>();
				this.arrDatoGeneralNo= new  ArrayList<String>();

				arrColumnasGlobales=ClienteConstantesFunciones.getArrayColumnasGlobalesCliente(this.arrDatoGeneral,this.arrDatoGeneralNo);
				finalQueryGlobal=Funciones.GetWhereGlobalConstants(this.parametroGeneralUsuario,this.moduloActual,true,false,arrColumnasGlobales,ClienteConstantesFunciones.TABLENAME);

				finalQueryGlobal=Funciones.GetFinalQueryAppend(finalQueryGlobal, sFinalQuery);
				finalQueryGlobal=Funciones.GetFinalQueryAppend(finalQueryGlobal, "");

				finalQueryGlobal+=ClienteConstantesFunciones.SFINALQUERY;

				this.cargarCombosClienteConsumidorFinalsForeignKeyLista(finalQueryGlobal);
			}

		} catch(Exception e) {
			throw e;
		}
	}

	public void cargarCombosForeignKeyTipoDocumentoFacturaListas(Boolean cargarCombosDependencia,String sFinalQuery)throws Exception {
		try	{
			ArrayList<String> arrColumnasGlobales=new ArrayList<String>();

			String  finalQueryGlobal="";

			Modulo  moduloActualAux=new Modulo();

			if((this.tipodocumentofacturasForeignKey==null||this.tipodocumentofacturasForeignKey.size()<=0)) {
				this.arrDatoGeneral= new  ArrayList<DatoGeneral>();
				this.arrDatoGeneralNo= new  ArrayList<String>();

				arrColumnasGlobales=TipoDocumentoConstantesFunciones.getArrayColumnasGlobalesTipoDocumento(this.arrDatoGeneral,this.arrDatoGeneralNo);
				finalQueryGlobal=Funciones.GetWhereGlobalConstants(this.parametroGeneralUsuario,this.moduloActual,true,false,arrColumnasGlobales,TipoDocumentoConstantesFunciones.TABLENAME);

				finalQueryGlobal=Funciones.GetFinalQueryAppend(finalQueryGlobal, sFinalQuery);
				finalQueryGlobal=Funciones.GetFinalQueryAppend(finalQueryGlobal, "");

				finalQueryGlobal+=TipoDocumentoConstantesFunciones.SFINALQUERY;

				this.cargarCombosTipoDocumentoFacturasForeignKeyLista(finalQueryGlobal);
			}

		} catch(Exception e) {
			throw e;
		}
	}

	public void cargarCombosForeignKeyTipoDocumentoNotaVentaListas(Boolean cargarCombosDependencia,String sFinalQuery)throws Exception {
		try	{
			ArrayList<String> arrColumnasGlobales=new ArrayList<String>();

			String  finalQueryGlobal="";

			Modulo  moduloActualAux=new Modulo();

			if((this.tipodocumentonotaventasForeignKey==null||this.tipodocumentonotaventasForeignKey.size()<=0)) {
				this.arrDatoGeneral= new  ArrayList<DatoGeneral>();
				this.arrDatoGeneralNo= new  ArrayList<String>();

				arrColumnasGlobales=TipoDocumentoConstantesFunciones.getArrayColumnasGlobalesTipoDocumento(this.arrDatoGeneral,this.arrDatoGeneralNo);
				finalQueryGlobal=Funciones.GetWhereGlobalConstants(this.parametroGeneralUsuario,this.moduloActual,true,false,arrColumnasGlobales,TipoDocumentoConstantesFunciones.TABLENAME);

				finalQueryGlobal=Funciones.GetFinalQueryAppend(finalQueryGlobal, sFinalQuery);
				finalQueryGlobal=Funciones.GetFinalQueryAppend(finalQueryGlobal, "");

				finalQueryGlobal+=TipoDocumentoConstantesFunciones.SFINALQUERY;

				this.cargarCombosTipoDocumentoNotaVentasForeignKeyLista(finalQueryGlobal);
			}

		} catch(Exception e) {
			throw e;
		}
	}

	public void cargarCombosForeignKeyTipoDocumentoNotaCreditoListas(Boolean cargarCombosDependencia,String sFinalQuery)throws Exception {
		try	{
			ArrayList<String> arrColumnasGlobales=new ArrayList<String>();

			String  finalQueryGlobal="";

			Modulo  moduloActualAux=new Modulo();

			if((this.tipodocumentonotacreditosForeignKey==null||this.tipodocumentonotacreditosForeignKey.size()<=0)) {
				this.arrDatoGeneral= new  ArrayList<DatoGeneral>();
				this.arrDatoGeneralNo= new  ArrayList<String>();

				arrColumnasGlobales=TipoDocumentoConstantesFunciones.getArrayColumnasGlobalesTipoDocumento(this.arrDatoGeneral,this.arrDatoGeneralNo);
				finalQueryGlobal=Funciones.GetWhereGlobalConstants(this.parametroGeneralUsuario,this.moduloActual,true,false,arrColumnasGlobales,TipoDocumentoConstantesFunciones.TABLENAME);

				finalQueryGlobal=Funciones.GetFinalQueryAppend(finalQueryGlobal, sFinalQuery);
				finalQueryGlobal=Funciones.GetFinalQueryAppend(finalQueryGlobal, "");

				finalQueryGlobal+=TipoDocumentoConstantesFunciones.SFINALQUERY;

				this.cargarCombosTipoDocumentoNotaCreditosForeignKeyLista(finalQueryGlobal);
			}

		} catch(Exception e) {
			throw e;
		}
	}

	public void cargarCombosForeignKeyTipoDocumentoTarjetaCreditoListas(Boolean cargarCombosDependencia,String sFinalQuery)throws Exception {
		try	{
			ArrayList<String> arrColumnasGlobales=new ArrayList<String>();

			String  finalQueryGlobal="";

			Modulo  moduloActualAux=new Modulo();

			if((this.tipodocumentotarjetacreditosForeignKey==null||this.tipodocumentotarjetacreditosForeignKey.size()<=0)) {
				this.arrDatoGeneral= new  ArrayList<DatoGeneral>();
				this.arrDatoGeneralNo= new  ArrayList<String>();

				arrColumnasGlobales=TipoDocumentoConstantesFunciones.getArrayColumnasGlobalesTipoDocumento(this.arrDatoGeneral,this.arrDatoGeneralNo);
				finalQueryGlobal=Funciones.GetWhereGlobalConstants(this.parametroGeneralUsuario,this.moduloActual,true,false,arrColumnasGlobales,TipoDocumentoConstantesFunciones.TABLENAME);

				finalQueryGlobal=Funciones.GetFinalQueryAppend(finalQueryGlobal, sFinalQuery);
				finalQueryGlobal=Funciones.GetFinalQueryAppend(finalQueryGlobal, "");

				finalQueryGlobal+=TipoDocumentoConstantesFunciones.SFINALQUERY;

				this.cargarCombosTipoDocumentoTarjetaCreditosForeignKeyLista(finalQueryGlobal);
			}

		} catch(Exception e) {
			throw e;
		}
	}

	public void cargarCombosForeignKeyFormatoFacturaListas(Boolean cargarCombosDependencia,String sFinalQuery)throws Exception {
		try	{
			ArrayList<String> arrColumnasGlobales=new ArrayList<String>();

			String  finalQueryGlobal="";

			Modulo  moduloActualAux=new Modulo();

			if((this.formatofacturasForeignKey==null||this.formatofacturasForeignKey.size()<=0)) {
				this.arrDatoGeneral= new  ArrayList<DatoGeneral>();
				this.arrDatoGeneralNo= new  ArrayList<String>();

				arrColumnasGlobales=FormatoConstantesFunciones.getArrayColumnasGlobalesFormato(this.arrDatoGeneral,this.arrDatoGeneralNo);
				finalQueryGlobal=Funciones.GetWhereGlobalConstants(this.parametroGeneralUsuario,this.moduloActual,true,false,arrColumnasGlobales,FormatoConstantesFunciones.TABLENAME);

				finalQueryGlobal=Funciones.GetFinalQueryAppend(finalQueryGlobal, sFinalQuery);
				finalQueryGlobal=Funciones.GetFinalQueryAppend(finalQueryGlobal, "");

				finalQueryGlobal+=FormatoConstantesFunciones.SFINALQUERY;

				this.cargarCombosFormatoFacturasForeignKeyLista(finalQueryGlobal);
			}

		} catch(Exception e) {
			throw e;
		}
	}

	public void cargarCombosForeignKeyFormatoNotaVentaListas(Boolean cargarCombosDependencia,String sFinalQuery)throws Exception {
		try	{
			ArrayList<String> arrColumnasGlobales=new ArrayList<String>();

			String  finalQueryGlobal="";

			Modulo  moduloActualAux=new Modulo();

			if((this.formatonotaventasForeignKey==null||this.formatonotaventasForeignKey.size()<=0)) {
				this.arrDatoGeneral= new  ArrayList<DatoGeneral>();
				this.arrDatoGeneralNo= new  ArrayList<String>();

				arrColumnasGlobales=FormatoConstantesFunciones.getArrayColumnasGlobalesFormato(this.arrDatoGeneral,this.arrDatoGeneralNo);
				finalQueryGlobal=Funciones.GetWhereGlobalConstants(this.parametroGeneralUsuario,this.moduloActual,true,false,arrColumnasGlobales,FormatoConstantesFunciones.TABLENAME);

				finalQueryGlobal=Funciones.GetFinalQueryAppend(finalQueryGlobal, sFinalQuery);
				finalQueryGlobal=Funciones.GetFinalQueryAppend(finalQueryGlobal, "");

				finalQueryGlobal+=FormatoConstantesFunciones.SFINALQUERY;

				this.cargarCombosFormatoNotaVentasForeignKeyLista(finalQueryGlobal);
			}

		} catch(Exception e) {
			throw e;
		}
	}

	public void cargarCombosForeignKeyFormatoNotaCreditoListas(Boolean cargarCombosDependencia,String sFinalQuery)throws Exception {
		try	{
			ArrayList<String> arrColumnasGlobales=new ArrayList<String>();

			String  finalQueryGlobal="";

			Modulo  moduloActualAux=new Modulo();

			if((this.formatonotacreditosForeignKey==null||this.formatonotacreditosForeignKey.size()<=0)) {
				this.arrDatoGeneral= new  ArrayList<DatoGeneral>();
				this.arrDatoGeneralNo= new  ArrayList<String>();

				arrColumnasGlobales=FormatoConstantesFunciones.getArrayColumnasGlobalesFormato(this.arrDatoGeneral,this.arrDatoGeneralNo);
				finalQueryGlobal=Funciones.GetWhereGlobalConstants(this.parametroGeneralUsuario,this.moduloActual,true,false,arrColumnasGlobales,FormatoConstantesFunciones.TABLENAME);

				finalQueryGlobal=Funciones.GetFinalQueryAppend(finalQueryGlobal, sFinalQuery);
				finalQueryGlobal=Funciones.GetFinalQueryAppend(finalQueryGlobal, "");

				finalQueryGlobal+=FormatoConstantesFunciones.SFINALQUERY;

				this.cargarCombosFormatoNotaCreditosForeignKeyLista(finalQueryGlobal);
			}

		} catch(Exception e) {
			throw e;
		}
	}

	public void cargarCombosForeignKeyTransaccionFacturaListas(Boolean cargarCombosDependencia,String sFinalQuery)throws Exception {
		try	{
			ArrayList<String> arrColumnasGlobales=new ArrayList<String>();

			String  finalQueryGlobal="";

			Modulo  moduloActualAux=new Modulo();

			if((this.transaccionfacturasForeignKey==null||this.transaccionfacturasForeignKey.size()<=0)) {
				this.arrDatoGeneral= new  ArrayList<DatoGeneral>();
				this.arrDatoGeneralNo= new  ArrayList<String>();

				arrColumnasGlobales=TransaccionConstantesFunciones.getArrayColumnasGlobalesTransaccion(this.arrDatoGeneral,this.arrDatoGeneralNo);
				finalQueryGlobal=Funciones.GetWhereGlobalConstants(this.parametroGeneralUsuario,this.moduloActual,true,false,arrColumnasGlobales,TransaccionConstantesFunciones.TABLENAME);

				finalQueryGlobal=Funciones.GetFinalQueryAppend(finalQueryGlobal, sFinalQuery);
				finalQueryGlobal=Funciones.GetFinalQueryAppend(finalQueryGlobal, "");

				finalQueryGlobal+=TransaccionConstantesFunciones.SFINALQUERY;

				this.cargarCombosTransaccionFacturasForeignKeyLista(finalQueryGlobal);
			}

		} catch(Exception e) {
			throw e;
		}
	}

	public void cargarCombosForeignKeyTransaccionNotaVentaListas(Boolean cargarCombosDependencia,String sFinalQuery)throws Exception {
		try	{
			ArrayList<String> arrColumnasGlobales=new ArrayList<String>();

			String  finalQueryGlobal="";

			Modulo  moduloActualAux=new Modulo();

			if((this.transaccionnotaventasForeignKey==null||this.transaccionnotaventasForeignKey.size()<=0)) {
				this.arrDatoGeneral= new  ArrayList<DatoGeneral>();
				this.arrDatoGeneralNo= new  ArrayList<String>();

				arrColumnasGlobales=TransaccionConstantesFunciones.getArrayColumnasGlobalesTransaccion(this.arrDatoGeneral,this.arrDatoGeneralNo);
				finalQueryGlobal=Funciones.GetWhereGlobalConstants(this.parametroGeneralUsuario,this.moduloActual,true,false,arrColumnasGlobales,TransaccionConstantesFunciones.TABLENAME);

				finalQueryGlobal=Funciones.GetFinalQueryAppend(finalQueryGlobal, sFinalQuery);
				finalQueryGlobal=Funciones.GetFinalQueryAppend(finalQueryGlobal, "");

				finalQueryGlobal+=TransaccionConstantesFunciones.SFINALQUERY;

				this.cargarCombosTransaccionNotaVentasForeignKeyLista(finalQueryGlobal);
			}

		} catch(Exception e) {
			throw e;
		}
	}

	public void cargarCombosForeignKeyTransaccionNotaCreditoListas(Boolean cargarCombosDependencia,String sFinalQuery)throws Exception {
		try	{
			ArrayList<String> arrColumnasGlobales=new ArrayList<String>();

			String  finalQueryGlobal="";

			Modulo  moduloActualAux=new Modulo();

			if((this.transaccionnotacreditosForeignKey==null||this.transaccionnotacreditosForeignKey.size()<=0)) {
				this.arrDatoGeneral= new  ArrayList<DatoGeneral>();
				this.arrDatoGeneralNo= new  ArrayList<String>();

				arrColumnasGlobales=TransaccionConstantesFunciones.getArrayColumnasGlobalesTransaccion(this.arrDatoGeneral,this.arrDatoGeneralNo);
				finalQueryGlobal=Funciones.GetWhereGlobalConstants(this.parametroGeneralUsuario,this.moduloActual,true,false,arrColumnasGlobales,TransaccionConstantesFunciones.TABLENAME);

				finalQueryGlobal=Funciones.GetFinalQueryAppend(finalQueryGlobal, sFinalQuery);
				finalQueryGlobal=Funciones.GetFinalQueryAppend(finalQueryGlobal, "");

				finalQueryGlobal+=TransaccionConstantesFunciones.SFINALQUERY;

				this.cargarCombosTransaccionNotaCreditosForeignKeyLista(finalQueryGlobal);
			}

		} catch(Exception e) {
			throw e;
		}
	}

	public void cargarCombosForeignKeyTransaccionCuentaFacturaListas(Boolean cargarCombosDependencia,String sFinalQuery)throws Exception {
		try	{
			ArrayList<String> arrColumnasGlobales=new ArrayList<String>();

			String  finalQueryGlobal="";

			Modulo  moduloActualAux=new Modulo();

			if((this.transaccioncuentafacturasForeignKey==null||this.transaccioncuentafacturasForeignKey.size()<=0)) {
				this.arrDatoGeneral= new  ArrayList<DatoGeneral>();
				this.arrDatoGeneralNo= new  ArrayList<String>();

				arrColumnasGlobales=TransaccionConstantesFunciones.getArrayColumnasGlobalesTransaccion(this.arrDatoGeneral,this.arrDatoGeneralNo);
				finalQueryGlobal=Funciones.GetWhereGlobalConstants(this.parametroGeneralUsuario,this.moduloActual,true,false,arrColumnasGlobales,TransaccionConstantesFunciones.TABLENAME);

				finalQueryGlobal=Funciones.GetFinalQueryAppend(finalQueryGlobal, sFinalQuery);
				finalQueryGlobal=Funciones.GetFinalQueryAppend(finalQueryGlobal, "");

				finalQueryGlobal+=TransaccionConstantesFunciones.SFINALQUERY;

				this.cargarCombosTransaccionCuentaFacturasForeignKeyLista(finalQueryGlobal);
			}

		} catch(Exception e) {
			throw e;
		}
	}

	public void cargarCombosForeignKeyTransaccionCuentaNotaVentaListas(Boolean cargarCombosDependencia,String sFinalQuery)throws Exception {
		try	{
			ArrayList<String> arrColumnasGlobales=new ArrayList<String>();

			String  finalQueryGlobal="";

			Modulo  moduloActualAux=new Modulo();

			if((this.transaccioncuentanotaventasForeignKey==null||this.transaccioncuentanotaventasForeignKey.size()<=0)) {
				this.arrDatoGeneral= new  ArrayList<DatoGeneral>();
				this.arrDatoGeneralNo= new  ArrayList<String>();

				arrColumnasGlobales=TransaccionConstantesFunciones.getArrayColumnasGlobalesTransaccion(this.arrDatoGeneral,this.arrDatoGeneralNo);
				finalQueryGlobal=Funciones.GetWhereGlobalConstants(this.parametroGeneralUsuario,this.moduloActual,true,false,arrColumnasGlobales,TransaccionConstantesFunciones.TABLENAME);

				finalQueryGlobal=Funciones.GetFinalQueryAppend(finalQueryGlobal, sFinalQuery);
				finalQueryGlobal=Funciones.GetFinalQueryAppend(finalQueryGlobal, "");

				finalQueryGlobal+=TransaccionConstantesFunciones.SFINALQUERY;

				this.cargarCombosTransaccionCuentaNotaVentasForeignKeyLista(finalQueryGlobal);
			}

		} catch(Exception e) {
			throw e;
		}
	}

	public void cargarCombosForeignKeyTransaccionCuentaNotaCreditoListas(Boolean cargarCombosDependencia,String sFinalQuery)throws Exception {
		try	{
			ArrayList<String> arrColumnasGlobales=new ArrayList<String>();

			String  finalQueryGlobal="";

			Modulo  moduloActualAux=new Modulo();

			if((this.transaccioncuentanotacreditosForeignKey==null||this.transaccioncuentanotacreditosForeignKey.size()<=0)) {
				this.arrDatoGeneral= new  ArrayList<DatoGeneral>();
				this.arrDatoGeneralNo= new  ArrayList<String>();

				arrColumnasGlobales=TransaccionConstantesFunciones.getArrayColumnasGlobalesTransaccion(this.arrDatoGeneral,this.arrDatoGeneralNo);
				finalQueryGlobal=Funciones.GetWhereGlobalConstants(this.parametroGeneralUsuario,this.moduloActual,true,false,arrColumnasGlobales,TransaccionConstantesFunciones.TABLENAME);

				finalQueryGlobal=Funciones.GetFinalQueryAppend(finalQueryGlobal, sFinalQuery);
				finalQueryGlobal=Funciones.GetFinalQueryAppend(finalQueryGlobal, "");

				finalQueryGlobal+=TransaccionConstantesFunciones.SFINALQUERY;

				this.cargarCombosTransaccionCuentaNotaCreditosForeignKeyLista(finalQueryGlobal);
			}

		} catch(Exception e) {
			throw e;
		}
	}
	
	public void cargarCombosLoteForeignKeyConfiguracionPunVenListas(Boolean cargarCombosDependencia)throws Exception {
		try	{
			
			ArrayList<String> arrColumnasGlobales=new ArrayList<String>();
			String  finalQueryGlobal="";
			
			Modulo  moduloActualAux=new Modulo();
			
			
			ConfiguracionPunVenParameterReturnGeneral configuracionpunvenReturnGeneral=new ConfiguracionPunVenParameterReturnGeneral();
						
			


				String finalQueryGlobalEmpresa="";

				if(((this.empresasForeignKey==null||this.empresasForeignKey.size()<=0) && this.configuracionpunvenConstantesFunciones.cargarid_empresaConfiguracionPunVen)
					 || (this.esRecargarFks && this.configuracionpunvenConstantesFunciones.cargarid_empresaConfiguracionPunVen)) {

					if(!this.configuracionpunvenSessionBean.getisBusquedaDesdeForeignKeySesionEmpresa()) {

						this.arrDatoGeneral= new  ArrayList<DatoGeneral>();
						this.arrDatoGeneralNo= new  ArrayList<String>();


						arrColumnasGlobales=EmpresaConstantesFunciones.getArrayColumnasGlobalesEmpresa(this.arrDatoGeneral,this.arrDatoGeneralNo);
						finalQueryGlobalEmpresa=Funciones.GetWhereGlobalConstants(this.parametroGeneralUsuario,this.moduloActual,true,false,arrColumnasGlobales,EmpresaConstantesFunciones.TABLENAME);

						finalQueryGlobalEmpresa=Funciones.GetFinalQueryAppend(finalQueryGlobalEmpresa, "");
						finalQueryGlobalEmpresa+=EmpresaConstantesFunciones.SFINALQUERY;

						//this.cargarCombosEmpresasForeignKeyLista(finalQueryGlobal);
					} else {
						finalQueryGlobalEmpresa=" WHERE " + ConstantesSql.ID + "="+configuracionpunvenSessionBean.getlidEmpresaActual();
					}
				} else {
					finalQueryGlobalEmpresa="NONE";
				}


				String finalQueryGlobalSucursal="";

				if(((this.sucursalsForeignKey==null||this.sucursalsForeignKey.size()<=0) && this.configuracionpunvenConstantesFunciones.cargarid_sucursalConfiguracionPunVen)
					 || (this.esRecargarFks && this.configuracionpunvenConstantesFunciones.cargarid_sucursalConfiguracionPunVen)) {

					if(!this.configuracionpunvenSessionBean.getisBusquedaDesdeForeignKeySesionSucursal()) {

						this.arrDatoGeneral= new  ArrayList<DatoGeneral>();
						this.arrDatoGeneralNo= new  ArrayList<String>();


						arrColumnasGlobales=SucursalConstantesFunciones.getArrayColumnasGlobalesSucursal(this.arrDatoGeneral,this.arrDatoGeneralNo);
						finalQueryGlobalSucursal=Funciones.GetWhereGlobalConstants(this.parametroGeneralUsuario,this.moduloActual,true,false,arrColumnasGlobales,SucursalConstantesFunciones.TABLENAME);

						finalQueryGlobalSucursal=Funciones.GetFinalQueryAppend(finalQueryGlobalSucursal, "");
						finalQueryGlobalSucursal+=SucursalConstantesFunciones.SFINALQUERY;

						//this.cargarCombosSucursalsForeignKeyLista(finalQueryGlobal);
					} else {
						finalQueryGlobalSucursal=" WHERE " + ConstantesSql.ID + "="+configuracionpunvenSessionBean.getlidSucursalActual();
					}
				} else {
					finalQueryGlobalSucursal="NONE";
				}


				String finalQueryGlobalBodega="";

				if(((this.bodegasForeignKey==null||this.bodegasForeignKey.size()<=0) && this.configuracionpunvenConstantesFunciones.cargarid_bodegaConfiguracionPunVen)
					 || (this.esRecargarFks && this.configuracionpunvenConstantesFunciones.cargarid_bodegaConfiguracionPunVen)) {

					if(!this.configuracionpunvenSessionBean.getisBusquedaDesdeForeignKeySesionBodega()) {

						this.arrDatoGeneral= new  ArrayList<DatoGeneral>();
						this.arrDatoGeneralNo= new  ArrayList<String>();


						arrColumnasGlobales=BodegaConstantesFunciones.getArrayColumnasGlobalesBodega(this.arrDatoGeneral,this.arrDatoGeneralNo);
						finalQueryGlobalBodega=Funciones.GetWhereGlobalConstants(this.parametroGeneralUsuario,this.moduloActual,true,false,arrColumnasGlobales,BodegaConstantesFunciones.TABLENAME);

						finalQueryGlobalBodega=Funciones.GetFinalQueryAppend(finalQueryGlobalBodega, "");
						finalQueryGlobalBodega+=BodegaConstantesFunciones.SFINALQUERY;

						//this.cargarCombosBodegasForeignKeyLista(finalQueryGlobal);
					} else {
						finalQueryGlobalBodega=" WHERE " + ConstantesSql.ID + "="+configuracionpunvenSessionBean.getlidBodegaActual();
					}
				} else {
					finalQueryGlobalBodega="NONE";
				}


				String finalQueryGlobalCuentaContableEfectivo="";

				if(((this.cuentacontableefectivosForeignKey==null||this.cuentacontableefectivosForeignKey.size()<=0) && this.configuracionpunvenConstantesFunciones.cargarid_cuenta_contable_efectivoConfiguracionPunVen)
					 || (this.esRecargarFks && this.configuracionpunvenConstantesFunciones.cargarid_cuenta_contable_efectivoConfiguracionPunVen)) {

					if(!this.configuracionpunvenSessionBean.getisBusquedaDesdeForeignKeySesionCuentaContableEfectivo()) {

						this.arrDatoGeneral= new  ArrayList<DatoGeneral>();
						this.arrDatoGeneralNo= new  ArrayList<String>();

						this.arrDatoGeneralNo.add("id_modulo");

						arrColumnasGlobales=CuentaContableConstantesFunciones.getArrayColumnasGlobalesCuentaContable(this.arrDatoGeneral,this.arrDatoGeneralNo);
						finalQueryGlobalCuentaContableEfectivo=Funciones.GetWhereGlobalConstants(this.parametroGeneralUsuario,this.moduloActual,true,false,arrColumnasGlobales,CuentaContableConstantesFunciones.TABLENAME);

						finalQueryGlobalCuentaContableEfectivo=Funciones.GetFinalQueryAppend(finalQueryGlobalCuentaContableEfectivo, "");
						finalQueryGlobalCuentaContableEfectivo+=CuentaContableConstantesFunciones.SFINALQUERY;

						//this.cargarCombosCuentaContableEfectivosForeignKeyLista(finalQueryGlobal);
					} else {
						finalQueryGlobalCuentaContableEfectivo=" WHERE " + ConstantesSql.ID + "="+configuracionpunvenSessionBean.getlidCuentaContableEfectivoActual();
					}
				} else {
					finalQueryGlobalCuentaContableEfectivo="NONE";
				}


				String finalQueryGlobalCuentaContableIce="";

				if(((this.cuentacontableicesForeignKey==null||this.cuentacontableicesForeignKey.size()<=0) && this.configuracionpunvenConstantesFunciones.cargarid_cuenta_contable_iceConfiguracionPunVen)
					 || (this.esRecargarFks && this.configuracionpunvenConstantesFunciones.cargarid_cuenta_contable_iceConfiguracionPunVen)) {

					if(!this.configuracionpunvenSessionBean.getisBusquedaDesdeForeignKeySesionCuentaContableIce()) {

						this.arrDatoGeneral= new  ArrayList<DatoGeneral>();
						this.arrDatoGeneralNo= new  ArrayList<String>();

						this.arrDatoGeneralNo.add("id_modulo");

						arrColumnasGlobales=CuentaContableConstantesFunciones.getArrayColumnasGlobalesCuentaContable(this.arrDatoGeneral,this.arrDatoGeneralNo);
						finalQueryGlobalCuentaContableIce=Funciones.GetWhereGlobalConstants(this.parametroGeneralUsuario,this.moduloActual,true,false,arrColumnasGlobales,CuentaContableConstantesFunciones.TABLENAME);

						finalQueryGlobalCuentaContableIce=Funciones.GetFinalQueryAppend(finalQueryGlobalCuentaContableIce, "");
						finalQueryGlobalCuentaContableIce+=CuentaContableConstantesFunciones.SFINALQUERY;

						//this.cargarCombosCuentaContableIcesForeignKeyLista(finalQueryGlobal);
					} else {
						finalQueryGlobalCuentaContableIce=" WHERE " + ConstantesSql.ID + "="+configuracionpunvenSessionBean.getlidCuentaContableIceActual();
					}
				} else {
					finalQueryGlobalCuentaContableIce="NONE";
				}


				String finalQueryGlobalCuentaContableOtros="";

				if(((this.cuentacontableotrossForeignKey==null||this.cuentacontableotrossForeignKey.size()<=0) && this.configuracionpunvenConstantesFunciones.cargarid_cuenta_contable_otrosConfiguracionPunVen)
					 || (this.esRecargarFks && this.configuracionpunvenConstantesFunciones.cargarid_cuenta_contable_otrosConfiguracionPunVen)) {

					if(!this.configuracionpunvenSessionBean.getisBusquedaDesdeForeignKeySesionCuentaContableOtros()) {

						this.arrDatoGeneral= new  ArrayList<DatoGeneral>();
						this.arrDatoGeneralNo= new  ArrayList<String>();

						this.arrDatoGeneralNo.add("id_modulo");

						arrColumnasGlobales=CuentaContableConstantesFunciones.getArrayColumnasGlobalesCuentaContable(this.arrDatoGeneral,this.arrDatoGeneralNo);
						finalQueryGlobalCuentaContableOtros=Funciones.GetWhereGlobalConstants(this.parametroGeneralUsuario,this.moduloActual,true,false,arrColumnasGlobales,CuentaContableConstantesFunciones.TABLENAME);

						finalQueryGlobalCuentaContableOtros=Funciones.GetFinalQueryAppend(finalQueryGlobalCuentaContableOtros, "");
						finalQueryGlobalCuentaContableOtros+=CuentaContableConstantesFunciones.SFINALQUERY;

						//this.cargarCombosCuentaContableOtrossForeignKeyLista(finalQueryGlobal);
					} else {
						finalQueryGlobalCuentaContableOtros=" WHERE " + ConstantesSql.ID + "="+configuracionpunvenSessionBean.getlidCuentaContableOtrosActual();
					}
				} else {
					finalQueryGlobalCuentaContableOtros="NONE";
				}


				String finalQueryGlobalClienteConsumidorFinal="";

				if(((this.clienteconsumidorfinalsForeignKey==null||this.clienteconsumidorfinalsForeignKey.size()<=0) && this.configuracionpunvenConstantesFunciones.cargarid_cliente_consumidor_finalConfiguracionPunVen)
					 || (this.esRecargarFks && this.configuracionpunvenConstantesFunciones.cargarid_cliente_consumidor_finalConfiguracionPunVen)) {

					if(!this.configuracionpunvenSessionBean.getisBusquedaDesdeForeignKeySesionClienteConsumidorFinal()) {

						this.arrDatoGeneral= new  ArrayList<DatoGeneral>();
						this.arrDatoGeneralNo= new  ArrayList<String>();


						arrColumnasGlobales=ClienteConstantesFunciones.getArrayColumnasGlobalesCliente(this.arrDatoGeneral,this.arrDatoGeneralNo);
						finalQueryGlobalClienteConsumidorFinal=Funciones.GetWhereGlobalConstants(this.parametroGeneralUsuario,this.moduloActual,true,false,arrColumnasGlobales,ClienteConstantesFunciones.TABLENAME);

						finalQueryGlobalClienteConsumidorFinal=Funciones.GetFinalQueryAppend(finalQueryGlobalClienteConsumidorFinal, "");
						finalQueryGlobalClienteConsumidorFinal+=ClienteConstantesFunciones.SFINALQUERY;

						//this.cargarCombosClienteConsumidorFinalsForeignKeyLista(finalQueryGlobal);
					} else {
						finalQueryGlobalClienteConsumidorFinal=" WHERE " + ConstantesSql.ID + "="+configuracionpunvenSessionBean.getlidClienteConsumidorFinalActual();
					}
				} else {
					finalQueryGlobalClienteConsumidorFinal="NONE";
				}


				String finalQueryGlobalTipoDocumentoFactura="";

				if(((this.tipodocumentofacturasForeignKey==null||this.tipodocumentofacturasForeignKey.size()<=0) && this.configuracionpunvenConstantesFunciones.cargarid_tipo_documento_facturaConfiguracionPunVen)
					 || (this.esRecargarFks && this.configuracionpunvenConstantesFunciones.cargarid_tipo_documento_facturaConfiguracionPunVen)) {

					if(!this.configuracionpunvenSessionBean.getisBusquedaDesdeForeignKeySesionTipoDocumentoFactura()) {

						this.arrDatoGeneral= new  ArrayList<DatoGeneral>();
						this.arrDatoGeneralNo= new  ArrayList<String>();


						arrColumnasGlobales=TipoDocumentoConstantesFunciones.getArrayColumnasGlobalesTipoDocumento(this.arrDatoGeneral,this.arrDatoGeneralNo);
						finalQueryGlobalTipoDocumentoFactura=Funciones.GetWhereGlobalConstants(this.parametroGeneralUsuario,this.moduloActual,true,false,arrColumnasGlobales,TipoDocumentoConstantesFunciones.TABLENAME);

						finalQueryGlobalTipoDocumentoFactura=Funciones.GetFinalQueryAppend(finalQueryGlobalTipoDocumentoFactura, "");
						finalQueryGlobalTipoDocumentoFactura+=TipoDocumentoConstantesFunciones.SFINALQUERY;

						//this.cargarCombosTipoDocumentoFacturasForeignKeyLista(finalQueryGlobal);
					} else {
						finalQueryGlobalTipoDocumentoFactura=" WHERE " + ConstantesSql.ID + "="+configuracionpunvenSessionBean.getlidTipoDocumentoFacturaActual();
					}
				} else {
					finalQueryGlobalTipoDocumentoFactura="NONE";
				}


				String finalQueryGlobalTipoDocumentoNotaVenta="";

				if(((this.tipodocumentonotaventasForeignKey==null||this.tipodocumentonotaventasForeignKey.size()<=0) && this.configuracionpunvenConstantesFunciones.cargarid_tipo_documento_nota_ventaConfiguracionPunVen)
					 || (this.esRecargarFks && this.configuracionpunvenConstantesFunciones.cargarid_tipo_documento_nota_ventaConfiguracionPunVen)) {

					if(!this.configuracionpunvenSessionBean.getisBusquedaDesdeForeignKeySesionTipoDocumentoNotaVenta()) {

						this.arrDatoGeneral= new  ArrayList<DatoGeneral>();
						this.arrDatoGeneralNo= new  ArrayList<String>();


						arrColumnasGlobales=TipoDocumentoConstantesFunciones.getArrayColumnasGlobalesTipoDocumento(this.arrDatoGeneral,this.arrDatoGeneralNo);
						finalQueryGlobalTipoDocumentoNotaVenta=Funciones.GetWhereGlobalConstants(this.parametroGeneralUsuario,this.moduloActual,true,false,arrColumnasGlobales,TipoDocumentoConstantesFunciones.TABLENAME);

						finalQueryGlobalTipoDocumentoNotaVenta=Funciones.GetFinalQueryAppend(finalQueryGlobalTipoDocumentoNotaVenta, "");
						finalQueryGlobalTipoDocumentoNotaVenta+=TipoDocumentoConstantesFunciones.SFINALQUERY;

						//this.cargarCombosTipoDocumentoNotaVentasForeignKeyLista(finalQueryGlobal);
					} else {
						finalQueryGlobalTipoDocumentoNotaVenta=" WHERE " + ConstantesSql.ID + "="+configuracionpunvenSessionBean.getlidTipoDocumentoNotaVentaActual();
					}
				} else {
					finalQueryGlobalTipoDocumentoNotaVenta="NONE";
				}


				String finalQueryGlobalTipoDocumentoNotaCredito="";

				if(((this.tipodocumentonotacreditosForeignKey==null||this.tipodocumentonotacreditosForeignKey.size()<=0) && this.configuracionpunvenConstantesFunciones.cargarid_tipo_documento_nota_creditoConfiguracionPunVen)
					 || (this.esRecargarFks && this.configuracionpunvenConstantesFunciones.cargarid_tipo_documento_nota_creditoConfiguracionPunVen)) {

					if(!this.configuracionpunvenSessionBean.getisBusquedaDesdeForeignKeySesionTipoDocumentoNotaCredito()) {

						this.arrDatoGeneral= new  ArrayList<DatoGeneral>();
						this.arrDatoGeneralNo= new  ArrayList<String>();


						arrColumnasGlobales=TipoDocumentoConstantesFunciones.getArrayColumnasGlobalesTipoDocumento(this.arrDatoGeneral,this.arrDatoGeneralNo);
						finalQueryGlobalTipoDocumentoNotaCredito=Funciones.GetWhereGlobalConstants(this.parametroGeneralUsuario,this.moduloActual,true,false,arrColumnasGlobales,TipoDocumentoConstantesFunciones.TABLENAME);

						finalQueryGlobalTipoDocumentoNotaCredito=Funciones.GetFinalQueryAppend(finalQueryGlobalTipoDocumentoNotaCredito, "");
						finalQueryGlobalTipoDocumentoNotaCredito+=TipoDocumentoConstantesFunciones.SFINALQUERY;

						//this.cargarCombosTipoDocumentoNotaCreditosForeignKeyLista(finalQueryGlobal);
					} else {
						finalQueryGlobalTipoDocumentoNotaCredito=" WHERE " + ConstantesSql.ID + "="+configuracionpunvenSessionBean.getlidTipoDocumentoNotaCreditoActual();
					}
				} else {
					finalQueryGlobalTipoDocumentoNotaCredito="NONE";
				}


				String finalQueryGlobalTipoDocumentoTarjetaCredito="";

				if(((this.tipodocumentotarjetacreditosForeignKey==null||this.tipodocumentotarjetacreditosForeignKey.size()<=0) && this.configuracionpunvenConstantesFunciones.cargarid_tipo_documento_tarjeta_creditoConfiguracionPunVen)
					 || (this.esRecargarFks && this.configuracionpunvenConstantesFunciones.cargarid_tipo_documento_tarjeta_creditoConfiguracionPunVen)) {

					if(!this.configuracionpunvenSessionBean.getisBusquedaDesdeForeignKeySesionTipoDocumentoTarjetaCredito()) {

						this.arrDatoGeneral= new  ArrayList<DatoGeneral>();
						this.arrDatoGeneralNo= new  ArrayList<String>();


						arrColumnasGlobales=TipoDocumentoConstantesFunciones.getArrayColumnasGlobalesTipoDocumento(this.arrDatoGeneral,this.arrDatoGeneralNo);
						finalQueryGlobalTipoDocumentoTarjetaCredito=Funciones.GetWhereGlobalConstants(this.parametroGeneralUsuario,this.moduloActual,true,false,arrColumnasGlobales,TipoDocumentoConstantesFunciones.TABLENAME);

						finalQueryGlobalTipoDocumentoTarjetaCredito=Funciones.GetFinalQueryAppend(finalQueryGlobalTipoDocumentoTarjetaCredito, "");
						finalQueryGlobalTipoDocumentoTarjetaCredito+=TipoDocumentoConstantesFunciones.SFINALQUERY;

						//this.cargarCombosTipoDocumentoTarjetaCreditosForeignKeyLista(finalQueryGlobal);
					} else {
						finalQueryGlobalTipoDocumentoTarjetaCredito=" WHERE " + ConstantesSql.ID + "="+configuracionpunvenSessionBean.getlidTipoDocumentoTarjetaCreditoActual();
					}
				} else {
					finalQueryGlobalTipoDocumentoTarjetaCredito="NONE";
				}


				String finalQueryGlobalFormatoFactura="";

				if(((this.formatofacturasForeignKey==null||this.formatofacturasForeignKey.size()<=0) && this.configuracionpunvenConstantesFunciones.cargarid_formato_facturaConfiguracionPunVen)
					 || (this.esRecargarFks && this.configuracionpunvenConstantesFunciones.cargarid_formato_facturaConfiguracionPunVen)) {

					if(!this.configuracionpunvenSessionBean.getisBusquedaDesdeForeignKeySesionFormatoFactura()) {

						this.arrDatoGeneral= new  ArrayList<DatoGeneral>();
						this.arrDatoGeneralNo= new  ArrayList<String>();


						arrColumnasGlobales=FormatoConstantesFunciones.getArrayColumnasGlobalesFormato(this.arrDatoGeneral,this.arrDatoGeneralNo);
						finalQueryGlobalFormatoFactura=Funciones.GetWhereGlobalConstants(this.parametroGeneralUsuario,this.moduloActual,true,false,arrColumnasGlobales,FormatoConstantesFunciones.TABLENAME);

						finalQueryGlobalFormatoFactura=Funciones.GetFinalQueryAppend(finalQueryGlobalFormatoFactura, "");
						finalQueryGlobalFormatoFactura+=FormatoConstantesFunciones.SFINALQUERY;

						//this.cargarCombosFormatoFacturasForeignKeyLista(finalQueryGlobal);
					} else {
						finalQueryGlobalFormatoFactura=" WHERE " + ConstantesSql.ID + "="+configuracionpunvenSessionBean.getlidFormatoFacturaActual();
					}
				} else {
					finalQueryGlobalFormatoFactura="NONE";
				}


				String finalQueryGlobalFormatoNotaVenta="";

				if(((this.formatonotaventasForeignKey==null||this.formatonotaventasForeignKey.size()<=0) && this.configuracionpunvenConstantesFunciones.cargarid_formato_nota_ventaConfiguracionPunVen)
					 || (this.esRecargarFks && this.configuracionpunvenConstantesFunciones.cargarid_formato_nota_ventaConfiguracionPunVen)) {

					if(!this.configuracionpunvenSessionBean.getisBusquedaDesdeForeignKeySesionFormatoNotaVenta()) {

						this.arrDatoGeneral= new  ArrayList<DatoGeneral>();
						this.arrDatoGeneralNo= new  ArrayList<String>();


						arrColumnasGlobales=FormatoConstantesFunciones.getArrayColumnasGlobalesFormato(this.arrDatoGeneral,this.arrDatoGeneralNo);
						finalQueryGlobalFormatoNotaVenta=Funciones.GetWhereGlobalConstants(this.parametroGeneralUsuario,this.moduloActual,true,false,arrColumnasGlobales,FormatoConstantesFunciones.TABLENAME);

						finalQueryGlobalFormatoNotaVenta=Funciones.GetFinalQueryAppend(finalQueryGlobalFormatoNotaVenta, "");
						finalQueryGlobalFormatoNotaVenta+=FormatoConstantesFunciones.SFINALQUERY;

						//this.cargarCombosFormatoNotaVentasForeignKeyLista(finalQueryGlobal);
					} else {
						finalQueryGlobalFormatoNotaVenta=" WHERE " + ConstantesSql.ID + "="+configuracionpunvenSessionBean.getlidFormatoNotaVentaActual();
					}
				} else {
					finalQueryGlobalFormatoNotaVenta="NONE";
				}


				String finalQueryGlobalFormatoNotaCredito="";

				if(((this.formatonotacreditosForeignKey==null||this.formatonotacreditosForeignKey.size()<=0) && this.configuracionpunvenConstantesFunciones.cargarid_formato_nota_creditoConfiguracionPunVen)
					 || (this.esRecargarFks && this.configuracionpunvenConstantesFunciones.cargarid_formato_nota_creditoConfiguracionPunVen)) {

					if(!this.configuracionpunvenSessionBean.getisBusquedaDesdeForeignKeySesionFormatoNotaCredito()) {

						this.arrDatoGeneral= new  ArrayList<DatoGeneral>();
						this.arrDatoGeneralNo= new  ArrayList<String>();


						arrColumnasGlobales=FormatoConstantesFunciones.getArrayColumnasGlobalesFormato(this.arrDatoGeneral,this.arrDatoGeneralNo);
						finalQueryGlobalFormatoNotaCredito=Funciones.GetWhereGlobalConstants(this.parametroGeneralUsuario,this.moduloActual,true,false,arrColumnasGlobales,FormatoConstantesFunciones.TABLENAME);

						finalQueryGlobalFormatoNotaCredito=Funciones.GetFinalQueryAppend(finalQueryGlobalFormatoNotaCredito, "");
						finalQueryGlobalFormatoNotaCredito+=FormatoConstantesFunciones.SFINALQUERY;

						//this.cargarCombosFormatoNotaCreditosForeignKeyLista(finalQueryGlobal);
					} else {
						finalQueryGlobalFormatoNotaCredito=" WHERE " + ConstantesSql.ID + "="+configuracionpunvenSessionBean.getlidFormatoNotaCreditoActual();
					}
				} else {
					finalQueryGlobalFormatoNotaCredito="NONE";
				}


				String finalQueryGlobalTransaccionFactura="";

				if(((this.transaccionfacturasForeignKey==null||this.transaccionfacturasForeignKey.size()<=0) && this.configuracionpunvenConstantesFunciones.cargarid_transaccion_facturaConfiguracionPunVen)
					 || (this.esRecargarFks && this.configuracionpunvenConstantesFunciones.cargarid_transaccion_facturaConfiguracionPunVen)) {

					if(!this.configuracionpunvenSessionBean.getisBusquedaDesdeForeignKeySesionTransaccionFactura()) {

						this.arrDatoGeneral= new  ArrayList<DatoGeneral>();
						this.arrDatoGeneralNo= new  ArrayList<String>();


						arrColumnasGlobales=TransaccionConstantesFunciones.getArrayColumnasGlobalesTransaccion(this.arrDatoGeneral,this.arrDatoGeneralNo);
						finalQueryGlobalTransaccionFactura=Funciones.GetWhereGlobalConstants(this.parametroGeneralUsuario,this.moduloActual,true,false,arrColumnasGlobales,TransaccionConstantesFunciones.TABLENAME);

						finalQueryGlobalTransaccionFactura=Funciones.GetFinalQueryAppend(finalQueryGlobalTransaccionFactura, "");
						finalQueryGlobalTransaccionFactura+=TransaccionConstantesFunciones.SFINALQUERY;

						//this.cargarCombosTransaccionFacturasForeignKeyLista(finalQueryGlobal);
					} else {
						finalQueryGlobalTransaccionFactura=" WHERE " + ConstantesSql.ID + "="+configuracionpunvenSessionBean.getlidTransaccionFacturaActual();
					}
				} else {
					finalQueryGlobalTransaccionFactura="NONE";
				}


				String finalQueryGlobalTransaccionNotaVenta="";

				if(((this.transaccionnotaventasForeignKey==null||this.transaccionnotaventasForeignKey.size()<=0) && this.configuracionpunvenConstantesFunciones.cargarid_transaccion_nota_ventaConfiguracionPunVen)
					 || (this.esRecargarFks && this.configuracionpunvenConstantesFunciones.cargarid_transaccion_nota_ventaConfiguracionPunVen)) {

					if(!this.configuracionpunvenSessionBean.getisBusquedaDesdeForeignKeySesionTransaccionNotaVenta()) {

						this.arrDatoGeneral= new  ArrayList<DatoGeneral>();
						this.arrDatoGeneralNo= new  ArrayList<String>();


						arrColumnasGlobales=TransaccionConstantesFunciones.getArrayColumnasGlobalesTransaccion(this.arrDatoGeneral,this.arrDatoGeneralNo);
						finalQueryGlobalTransaccionNotaVenta=Funciones.GetWhereGlobalConstants(this.parametroGeneralUsuario,this.moduloActual,true,false,arrColumnasGlobales,TransaccionConstantesFunciones.TABLENAME);

						finalQueryGlobalTransaccionNotaVenta=Funciones.GetFinalQueryAppend(finalQueryGlobalTransaccionNotaVenta, "");
						finalQueryGlobalTransaccionNotaVenta+=TransaccionConstantesFunciones.SFINALQUERY;

						//this.cargarCombosTransaccionNotaVentasForeignKeyLista(finalQueryGlobal);
					} else {
						finalQueryGlobalTransaccionNotaVenta=" WHERE " + ConstantesSql.ID + "="+configuracionpunvenSessionBean.getlidTransaccionNotaVentaActual();
					}
				} else {
					finalQueryGlobalTransaccionNotaVenta="NONE";
				}


				String finalQueryGlobalTransaccionNotaCredito="";

				if(((this.transaccionnotacreditosForeignKey==null||this.transaccionnotacreditosForeignKey.size()<=0) && this.configuracionpunvenConstantesFunciones.cargarid_transaccion_nota_creditoConfiguracionPunVen)
					 || (this.esRecargarFks && this.configuracionpunvenConstantesFunciones.cargarid_transaccion_nota_creditoConfiguracionPunVen)) {

					if(!this.configuracionpunvenSessionBean.getisBusquedaDesdeForeignKeySesionTransaccionNotaCredito()) {

						this.arrDatoGeneral= new  ArrayList<DatoGeneral>();
						this.arrDatoGeneralNo= new  ArrayList<String>();


						arrColumnasGlobales=TransaccionConstantesFunciones.getArrayColumnasGlobalesTransaccion(this.arrDatoGeneral,this.arrDatoGeneralNo);
						finalQueryGlobalTransaccionNotaCredito=Funciones.GetWhereGlobalConstants(this.parametroGeneralUsuario,this.moduloActual,true,false,arrColumnasGlobales,TransaccionConstantesFunciones.TABLENAME);

						finalQueryGlobalTransaccionNotaCredito=Funciones.GetFinalQueryAppend(finalQueryGlobalTransaccionNotaCredito, "");
						finalQueryGlobalTransaccionNotaCredito+=TransaccionConstantesFunciones.SFINALQUERY;

						//this.cargarCombosTransaccionNotaCreditosForeignKeyLista(finalQueryGlobal);
					} else {
						finalQueryGlobalTransaccionNotaCredito=" WHERE " + ConstantesSql.ID + "="+configuracionpunvenSessionBean.getlidTransaccionNotaCreditoActual();
					}
				} else {
					finalQueryGlobalTransaccionNotaCredito="NONE";
				}


				String finalQueryGlobalTransaccionCuentaFactura="";

				if(((this.transaccioncuentafacturasForeignKey==null||this.transaccioncuentafacturasForeignKey.size()<=0) && this.configuracionpunvenConstantesFunciones.cargarid_transaccion_cuenta_facturaConfiguracionPunVen)
					 || (this.esRecargarFks && this.configuracionpunvenConstantesFunciones.cargarid_transaccion_cuenta_facturaConfiguracionPunVen)) {

					if(!this.configuracionpunvenSessionBean.getisBusquedaDesdeForeignKeySesionTransaccionCuentaFactura()) {

						this.arrDatoGeneral= new  ArrayList<DatoGeneral>();
						this.arrDatoGeneralNo= new  ArrayList<String>();


						arrColumnasGlobales=TransaccionConstantesFunciones.getArrayColumnasGlobalesTransaccion(this.arrDatoGeneral,this.arrDatoGeneralNo);
						finalQueryGlobalTransaccionCuentaFactura=Funciones.GetWhereGlobalConstants(this.parametroGeneralUsuario,this.moduloActual,true,false,arrColumnasGlobales,TransaccionConstantesFunciones.TABLENAME);

						finalQueryGlobalTransaccionCuentaFactura=Funciones.GetFinalQueryAppend(finalQueryGlobalTransaccionCuentaFactura, "");
						finalQueryGlobalTransaccionCuentaFactura+=TransaccionConstantesFunciones.SFINALQUERY;

						//this.cargarCombosTransaccionCuentaFacturasForeignKeyLista(finalQueryGlobal);
					} else {
						finalQueryGlobalTransaccionCuentaFactura=" WHERE " + ConstantesSql.ID + "="+configuracionpunvenSessionBean.getlidTransaccionCuentaFacturaActual();
					}
				} else {
					finalQueryGlobalTransaccionCuentaFactura="NONE";
				}


				String finalQueryGlobalTransaccionCuentaNotaVenta="";

				if(((this.transaccioncuentanotaventasForeignKey==null||this.transaccioncuentanotaventasForeignKey.size()<=0) && this.configuracionpunvenConstantesFunciones.cargarid_transaccion_cuenta_nota_ventaConfiguracionPunVen)
					 || (this.esRecargarFks && this.configuracionpunvenConstantesFunciones.cargarid_transaccion_cuenta_nota_ventaConfiguracionPunVen)) {

					if(!this.configuracionpunvenSessionBean.getisBusquedaDesdeForeignKeySesionTransaccionCuentaNotaVenta()) {

						this.arrDatoGeneral= new  ArrayList<DatoGeneral>();
						this.arrDatoGeneralNo= new  ArrayList<String>();


						arrColumnasGlobales=TransaccionConstantesFunciones.getArrayColumnasGlobalesTransaccion(this.arrDatoGeneral,this.arrDatoGeneralNo);
						finalQueryGlobalTransaccionCuentaNotaVenta=Funciones.GetWhereGlobalConstants(this.parametroGeneralUsuario,this.moduloActual,true,false,arrColumnasGlobales,TransaccionConstantesFunciones.TABLENAME);

						finalQueryGlobalTransaccionCuentaNotaVenta=Funciones.GetFinalQueryAppend(finalQueryGlobalTransaccionCuentaNotaVenta, "");
						finalQueryGlobalTransaccionCuentaNotaVenta+=TransaccionConstantesFunciones.SFINALQUERY;

						//this.cargarCombosTransaccionCuentaNotaVentasForeignKeyLista(finalQueryGlobal);
					} else {
						finalQueryGlobalTransaccionCuentaNotaVenta=" WHERE " + ConstantesSql.ID + "="+configuracionpunvenSessionBean.getlidTransaccionCuentaNotaVentaActual();
					}
				} else {
					finalQueryGlobalTransaccionCuentaNotaVenta="NONE";
				}


				String finalQueryGlobalTransaccionCuentaNotaCredito="";

				if(((this.transaccioncuentanotacreditosForeignKey==null||this.transaccioncuentanotacreditosForeignKey.size()<=0) && this.configuracionpunvenConstantesFunciones.cargarid_transaccion_cuenta_nota_creditoConfiguracionPunVen)
					 || (this.esRecargarFks && this.configuracionpunvenConstantesFunciones.cargarid_transaccion_cuenta_nota_creditoConfiguracionPunVen)) {

					if(!this.configuracionpunvenSessionBean.getisBusquedaDesdeForeignKeySesionTransaccionCuentaNotaCredito()) {

						this.arrDatoGeneral= new  ArrayList<DatoGeneral>();
						this.arrDatoGeneralNo= new  ArrayList<String>();


						arrColumnasGlobales=TransaccionConstantesFunciones.getArrayColumnasGlobalesTransaccion(this.arrDatoGeneral,this.arrDatoGeneralNo);
						finalQueryGlobalTransaccionCuentaNotaCredito=Funciones.GetWhereGlobalConstants(this.parametroGeneralUsuario,this.moduloActual,true,false,arrColumnasGlobales,TransaccionConstantesFunciones.TABLENAME);

						finalQueryGlobalTransaccionCuentaNotaCredito=Funciones.GetFinalQueryAppend(finalQueryGlobalTransaccionCuentaNotaCredito, "");
						finalQueryGlobalTransaccionCuentaNotaCredito+=TransaccionConstantesFunciones.SFINALQUERY;

						//this.cargarCombosTransaccionCuentaNotaCreditosForeignKeyLista(finalQueryGlobal);
					} else {
						finalQueryGlobalTransaccionCuentaNotaCredito=" WHERE " + ConstantesSql.ID + "="+configuracionpunvenSessionBean.getlidTransaccionCuentaNotaCreditoActual();
					}
				} else {
					finalQueryGlobalTransaccionCuentaNotaCredito="NONE";
				}
			
			//ARCHITECTURE			
			if(Constantes.ISUSAEJBLOGICLAYER) {	
				configuracionpunvenReturnGeneral=configuracionpunvenLogic.cargarCombosLoteForeignKeyConfiguracionPunVen(finalQueryGlobalEmpresa,finalQueryGlobalSucursal,finalQueryGlobalBodega,finalQueryGlobalCuentaContableEfectivo,finalQueryGlobalCuentaContableIce,finalQueryGlobalCuentaContableOtros,finalQueryGlobalClienteConsumidorFinal,finalQueryGlobalTipoDocumentoFactura,finalQueryGlobalTipoDocumentoNotaVenta,finalQueryGlobalTipoDocumentoNotaCredito,finalQueryGlobalTipoDocumentoTarjetaCredito,finalQueryGlobalFormatoFactura,finalQueryGlobalFormatoNotaVenta,finalQueryGlobalFormatoNotaCredito,finalQueryGlobalTransaccionFactura,finalQueryGlobalTransaccionNotaVenta,finalQueryGlobalTransaccionNotaCredito,finalQueryGlobalTransaccionCuentaFactura,finalQueryGlobalTransaccionCuentaNotaVenta,finalQueryGlobalTransaccionCuentaNotaCredito);//WithConnection
			} else if(Constantes.ISUSAEJBREMOTE) {
			} else if(Constantes.ISUSAEJBHOME) {
			}			
			//ARCHITECTURE
			
			

			if(!finalQueryGlobalEmpresa.equals("NONE")) {
				this.empresasForeignKey=configuracionpunvenReturnGeneral.getempresasForeignKey();
			}

			if(!finalQueryGlobalSucursal.equals("NONE")) {
				this.sucursalsForeignKey=configuracionpunvenReturnGeneral.getsucursalsForeignKey();
			}

			if(!finalQueryGlobalBodega.equals("NONE")) {
				this.bodegasForeignKey=configuracionpunvenReturnGeneral.getbodegasForeignKey();
			}

			if(!finalQueryGlobalCuentaContableEfectivo.equals("NONE")) {
				this.cuentacontableefectivosForeignKey=configuracionpunvenReturnGeneral.getcuentacontableefectivosForeignKey();
			}

			if(!finalQueryGlobalCuentaContableIce.equals("NONE")) {
				this.cuentacontableicesForeignKey=configuracionpunvenReturnGeneral.getcuentacontableicesForeignKey();
			}

			if(!finalQueryGlobalCuentaContableOtros.equals("NONE")) {
				this.cuentacontableotrossForeignKey=configuracionpunvenReturnGeneral.getcuentacontableotrossForeignKey();
			}

			if(!finalQueryGlobalClienteConsumidorFinal.equals("NONE")) {
				this.clienteconsumidorfinalsForeignKey=configuracionpunvenReturnGeneral.getclienteconsumidorfinalsForeignKey();
			}

			if(!finalQueryGlobalTipoDocumentoFactura.equals("NONE")) {
				this.tipodocumentofacturasForeignKey=configuracionpunvenReturnGeneral.gettipodocumentofacturasForeignKey();
			}

			if(!finalQueryGlobalTipoDocumentoNotaVenta.equals("NONE")) {
				this.tipodocumentonotaventasForeignKey=configuracionpunvenReturnGeneral.gettipodocumentonotaventasForeignKey();
			}

			if(!finalQueryGlobalTipoDocumentoNotaCredito.equals("NONE")) {
				this.tipodocumentonotacreditosForeignKey=configuracionpunvenReturnGeneral.gettipodocumentonotacreditosForeignKey();
			}

			if(!finalQueryGlobalTipoDocumentoTarjetaCredito.equals("NONE")) {
				this.tipodocumentotarjetacreditosForeignKey=configuracionpunvenReturnGeneral.gettipodocumentotarjetacreditosForeignKey();
			}

			if(!finalQueryGlobalFormatoFactura.equals("NONE")) {
				this.formatofacturasForeignKey=configuracionpunvenReturnGeneral.getformatofacturasForeignKey();
			}

			if(!finalQueryGlobalFormatoNotaVenta.equals("NONE")) {
				this.formatonotaventasForeignKey=configuracionpunvenReturnGeneral.getformatonotaventasForeignKey();
			}

			if(!finalQueryGlobalFormatoNotaCredito.equals("NONE")) {
				this.formatonotacreditosForeignKey=configuracionpunvenReturnGeneral.getformatonotacreditosForeignKey();
			}

			if(!finalQueryGlobalTransaccionFactura.equals("NONE")) {
				this.transaccionfacturasForeignKey=configuracionpunvenReturnGeneral.gettransaccionfacturasForeignKey();
			}

			if(!finalQueryGlobalTransaccionNotaVenta.equals("NONE")) {
				this.transaccionnotaventasForeignKey=configuracionpunvenReturnGeneral.gettransaccionnotaventasForeignKey();
			}

			if(!finalQueryGlobalTransaccionNotaCredito.equals("NONE")) {
				this.transaccionnotacreditosForeignKey=configuracionpunvenReturnGeneral.gettransaccionnotacreditosForeignKey();
			}

			if(!finalQueryGlobalTransaccionCuentaFactura.equals("NONE")) {
				this.transaccioncuentafacturasForeignKey=configuracionpunvenReturnGeneral.gettransaccioncuentafacturasForeignKey();
			}

			if(!finalQueryGlobalTransaccionCuentaNotaVenta.equals("NONE")) {
				this.transaccioncuentanotaventasForeignKey=configuracionpunvenReturnGeneral.gettransaccioncuentanotaventasForeignKey();
			}

			if(!finalQueryGlobalTransaccionCuentaNotaCredito.equals("NONE")) {
				this.transaccioncuentanotacreditosForeignKey=configuracionpunvenReturnGeneral.gettransaccioncuentanotacreditosForeignKey();
			}
			
			
		} catch(Exception e) {
			throw e;
		}		
	}
	
	public void addItemDefectoCombosTodosForeignKeyConfiguracionPunVen()throws Exception {
		try {
			
			this.addItemDefectoCombosForeignKeyEmpresa();
			this.addItemDefectoCombosForeignKeySucursal();
			this.addItemDefectoCombosForeignKeyBodega();
			this.addItemDefectoCombosForeignKeyCuentaContableEfectivo();
			this.addItemDefectoCombosForeignKeyCuentaContableIce();
			this.addItemDefectoCombosForeignKeyCuentaContableOtros();
			this.addItemDefectoCombosForeignKeyClienteConsumidorFinal();
			this.addItemDefectoCombosForeignKeyTipoDocumentoFactura();
			this.addItemDefectoCombosForeignKeyTipoDocumentoNotaVenta();
			this.addItemDefectoCombosForeignKeyTipoDocumentoNotaCredito();
			this.addItemDefectoCombosForeignKeyTipoDocumentoTarjetaCredito();
			this.addItemDefectoCombosForeignKeyFormatoFactura();
			this.addItemDefectoCombosForeignKeyFormatoNotaVenta();
			this.addItemDefectoCombosForeignKeyFormatoNotaCredito();
			this.addItemDefectoCombosForeignKeyTransaccionFactura();
			this.addItemDefectoCombosForeignKeyTransaccionNotaVenta();
			this.addItemDefectoCombosForeignKeyTransaccionNotaCredito();
			this.addItemDefectoCombosForeignKeyTransaccionCuentaFactura();
			this.addItemDefectoCombosForeignKeyTransaccionCuentaNotaVenta();
			this.addItemDefectoCombosForeignKeyTransaccionCuentaNotaCredito();
		} catch(Exception e) {
			throw e;
		}		
	}
	
	



	public void addItemDefectoCombosForeignKeyEmpresa()throws Exception {
		try {
			if(this.configuracionpunvenSessionBean==null) {
				this.configuracionpunvenSessionBean=new ConfiguracionPunVenSessionBean();
			}

			if(!this.configuracionpunvenSessionBean.getisBusquedaDesdeForeignKeySesionEmpresa()) {
				Empresa empresa=new Empresa();
				EmpresaConstantesFunciones.setEmpresaDescripcion(empresa,Constantes.SMENSAJE_ESCOJA_OPCION);
				empresa.setId(null);

				if(!EmpresaConstantesFunciones.ExisteEnLista(this.empresasForeignKey,empresa,true)) {

					this.empresasForeignKey.add(0,empresa);
				}
			}
		} catch(Exception e) {
			throw e;
		}
	}

	public void addItemDefectoCombosForeignKeySucursal()throws Exception {
		try {

			if(!this.configuracionpunvenSessionBean.getisBusquedaDesdeForeignKeySesionSucursal()) {
				Sucursal sucursal=new Sucursal();
				SucursalConstantesFunciones.setSucursalDescripcion(sucursal,Constantes.SMENSAJE_ESCOJA_OPCION);
				sucursal.setId(null);

				if(!SucursalConstantesFunciones.ExisteEnLista(this.sucursalsForeignKey,sucursal,true)) {

					this.sucursalsForeignKey.add(0,sucursal);
				}
			}
		} catch(Exception e) {
			throw e;
		}
	}

	public void addItemDefectoCombosForeignKeyBodega()throws Exception {
		try {

			if(!this.configuracionpunvenSessionBean.getisBusquedaDesdeForeignKeySesionBodega()) {
				Bodega bodega=new Bodega();
				BodegaConstantesFunciones.setBodegaDescripcion(bodega,Constantes.SMENSAJE_ESCOJA_OPCION);
				bodega.setId(null);

				if(!BodegaConstantesFunciones.ExisteEnLista(this.bodegasForeignKey,bodega,true)) {

					this.bodegasForeignKey.add(0,bodega);
				}
			}
		} catch(Exception e) {
			throw e;
		}
	}

	public void addItemDefectoCombosForeignKeyCuentaContableEfectivo()throws Exception {
		try {

			if(!this.configuracionpunvenSessionBean.getisBusquedaDesdeForeignKeySesionCuentaContableEfectivo()) {
				CuentaContable cuentacontableefectivo=new CuentaContable();
				CuentaContableConstantesFunciones.setCuentaContableDescripcion(cuentacontableefectivo,Constantes.SMENSAJE_ESCOJA_OPCION);
				cuentacontableefectivo.setId(null);

				if(!CuentaContableConstantesFunciones.ExisteEnLista(this.cuentacontableefectivosForeignKey,cuentacontableefectivo,true)) {

					this.cuentacontableefectivosForeignKey.add(0,cuentacontableefectivo);
				}
			}
		} catch(Exception e) {
			throw e;
		}
	}

	public void addItemDefectoCombosForeignKeyCuentaContableIce()throws Exception {
		try {

			if(!this.configuracionpunvenSessionBean.getisBusquedaDesdeForeignKeySesionCuentaContableIce()) {
				CuentaContable cuentacontableice=new CuentaContable();
				CuentaContableConstantesFunciones.setCuentaContableDescripcion(cuentacontableice,Constantes.SMENSAJE_ESCOJA_OPCION);
				cuentacontableice.setId(null);

				if(!CuentaContableConstantesFunciones.ExisteEnLista(this.cuentacontableicesForeignKey,cuentacontableice,true)) {

					this.cuentacontableicesForeignKey.add(0,cuentacontableice);
				}
			}
		} catch(Exception e) {
			throw e;
		}
	}

	public void addItemDefectoCombosForeignKeyCuentaContableOtros()throws Exception {
		try {

			if(!this.configuracionpunvenSessionBean.getisBusquedaDesdeForeignKeySesionCuentaContableOtros()) {
				CuentaContable cuentacontableotros=new CuentaContable();
				CuentaContableConstantesFunciones.setCuentaContableDescripcion(cuentacontableotros,Constantes.SMENSAJE_ESCOJA_OPCION);
				cuentacontableotros.setId(null);

				if(!CuentaContableConstantesFunciones.ExisteEnLista(this.cuentacontableotrossForeignKey,cuentacontableotros,true)) {

					this.cuentacontableotrossForeignKey.add(0,cuentacontableotros);
				}
			}
		} catch(Exception e) {
			throw e;
		}
	}

	public void addItemDefectoCombosForeignKeyClienteConsumidorFinal()throws Exception {
		try {

			if(!this.configuracionpunvenSessionBean.getisBusquedaDesdeForeignKeySesionClienteConsumidorFinal()) {
				Cliente clienteconsumidorfinal=new Cliente();
				ClienteConstantesFunciones.setClienteDescripcion(clienteconsumidorfinal,Constantes.SMENSAJE_ESCOJA_OPCION);
				clienteconsumidorfinal.setId(null);

				if(!ClienteConstantesFunciones.ExisteEnLista(this.clienteconsumidorfinalsForeignKey,clienteconsumidorfinal,true)) {

					this.clienteconsumidorfinalsForeignKey.add(0,clienteconsumidorfinal);
				}
			}
		} catch(Exception e) {
			throw e;
		}
	}

	public void addItemDefectoCombosForeignKeyTipoDocumentoFactura()throws Exception {
		try {

			if(!this.configuracionpunvenSessionBean.getisBusquedaDesdeForeignKeySesionTipoDocumentoFactura()) {
				TipoDocumento tipodocumentofactura=new TipoDocumento();
				TipoDocumentoConstantesFunciones.setTipoDocumentoDescripcion(tipodocumentofactura,Constantes.SMENSAJE_ESCOJA_OPCION);
				tipodocumentofactura.setId(null);

				if(!TipoDocumentoConstantesFunciones.ExisteEnLista(this.tipodocumentofacturasForeignKey,tipodocumentofactura,true)) {

					this.tipodocumentofacturasForeignKey.add(0,tipodocumentofactura);
				}
			}
		} catch(Exception e) {
			throw e;
		}
	}

	public void addItemDefectoCombosForeignKeyTipoDocumentoNotaVenta()throws Exception {
		try {

			if(!this.configuracionpunvenSessionBean.getisBusquedaDesdeForeignKeySesionTipoDocumentoNotaVenta()) {
				TipoDocumento tipodocumentonotaventa=new TipoDocumento();
				TipoDocumentoConstantesFunciones.setTipoDocumentoDescripcion(tipodocumentonotaventa,Constantes.SMENSAJE_ESCOJA_OPCION);
				tipodocumentonotaventa.setId(null);

				if(!TipoDocumentoConstantesFunciones.ExisteEnLista(this.tipodocumentonotaventasForeignKey,tipodocumentonotaventa,true)) {

					this.tipodocumentonotaventasForeignKey.add(0,tipodocumentonotaventa);
				}
			}
		} catch(Exception e) {
			throw e;
		}
	}

	public void addItemDefectoCombosForeignKeyTipoDocumentoNotaCredito()throws Exception {
		try {

			if(!this.configuracionpunvenSessionBean.getisBusquedaDesdeForeignKeySesionTipoDocumentoNotaCredito()) {
				TipoDocumento tipodocumentonotacredito=new TipoDocumento();
				TipoDocumentoConstantesFunciones.setTipoDocumentoDescripcion(tipodocumentonotacredito,Constantes.SMENSAJE_ESCOJA_OPCION);
				tipodocumentonotacredito.setId(null);

				if(!TipoDocumentoConstantesFunciones.ExisteEnLista(this.tipodocumentonotacreditosForeignKey,tipodocumentonotacredito,true)) {

					this.tipodocumentonotacreditosForeignKey.add(0,tipodocumentonotacredito);
				}
			}
		} catch(Exception e) {
			throw e;
		}
	}

	public void addItemDefectoCombosForeignKeyTipoDocumentoTarjetaCredito()throws Exception {
		try {

			if(!this.configuracionpunvenSessionBean.getisBusquedaDesdeForeignKeySesionTipoDocumentoTarjetaCredito()) {
				TipoDocumento tipodocumentotarjetacredito=new TipoDocumento();
				TipoDocumentoConstantesFunciones.setTipoDocumentoDescripcion(tipodocumentotarjetacredito,Constantes.SMENSAJE_ESCOJA_OPCION);
				tipodocumentotarjetacredito.setId(null);

				if(!TipoDocumentoConstantesFunciones.ExisteEnLista(this.tipodocumentotarjetacreditosForeignKey,tipodocumentotarjetacredito,true)) {

					this.tipodocumentotarjetacreditosForeignKey.add(0,tipodocumentotarjetacredito);
				}
			}
		} catch(Exception e) {
			throw e;
		}
	}

	public void addItemDefectoCombosForeignKeyFormatoFactura()throws Exception {
		try {

			if(!this.configuracionpunvenSessionBean.getisBusquedaDesdeForeignKeySesionFormatoFactura()) {
				Formato formatofactura=new Formato();
				FormatoConstantesFunciones.setFormatoDescripcion(formatofactura,Constantes.SMENSAJE_ESCOJA_OPCION);
				formatofactura.setId(null);

				if(!FormatoConstantesFunciones.ExisteEnLista(this.formatofacturasForeignKey,formatofactura,true)) {

					this.formatofacturasForeignKey.add(0,formatofactura);
				}
			}
		} catch(Exception e) {
			throw e;
		}
	}

	public void addItemDefectoCombosForeignKeyFormatoNotaVenta()throws Exception {
		try {

			if(!this.configuracionpunvenSessionBean.getisBusquedaDesdeForeignKeySesionFormatoNotaVenta()) {
				Formato formatonotaventa=new Formato();
				FormatoConstantesFunciones.setFormatoDescripcion(formatonotaventa,Constantes.SMENSAJE_ESCOJA_OPCION);
				formatonotaventa.setId(null);

				if(!FormatoConstantesFunciones.ExisteEnLista(this.formatonotaventasForeignKey,formatonotaventa,true)) {

					this.formatonotaventasForeignKey.add(0,formatonotaventa);
				}
			}
		} catch(Exception e) {
			throw e;
		}
	}

	public void addItemDefectoCombosForeignKeyFormatoNotaCredito()throws Exception {
		try {

			if(!this.configuracionpunvenSessionBean.getisBusquedaDesdeForeignKeySesionFormatoNotaCredito()) {
				Formato formatonotacredito=new Formato();
				FormatoConstantesFunciones.setFormatoDescripcion(formatonotacredito,Constantes.SMENSAJE_ESCOJA_OPCION);
				formatonotacredito.setId(null);

				if(!FormatoConstantesFunciones.ExisteEnLista(this.formatonotacreditosForeignKey,formatonotacredito,true)) {

					this.formatonotacreditosForeignKey.add(0,formatonotacredito);
				}
			}
		} catch(Exception e) {
			throw e;
		}
	}

	public void addItemDefectoCombosForeignKeyTransaccionFactura()throws Exception {
		try {

			if(!this.configuracionpunvenSessionBean.getisBusquedaDesdeForeignKeySesionTransaccionFactura()) {
				Transaccion transaccionfactura=new Transaccion();
				TransaccionConstantesFunciones.setTransaccionDescripcion(transaccionfactura,Constantes.SMENSAJE_ESCOJA_OPCION);
				transaccionfactura.setId(null);

				if(!TransaccionConstantesFunciones.ExisteEnLista(this.transaccionfacturasForeignKey,transaccionfactura,true)) {

					this.transaccionfacturasForeignKey.add(0,transaccionfactura);
				}
			}
		} catch(Exception e) {
			throw e;
		}
	}

	public void addItemDefectoCombosForeignKeyTransaccionNotaVenta()throws Exception {
		try {

			if(!this.configuracionpunvenSessionBean.getisBusquedaDesdeForeignKeySesionTransaccionNotaVenta()) {
				Transaccion transaccionnotaventa=new Transaccion();
				TransaccionConstantesFunciones.setTransaccionDescripcion(transaccionnotaventa,Constantes.SMENSAJE_ESCOJA_OPCION);
				transaccionnotaventa.setId(null);

				if(!TransaccionConstantesFunciones.ExisteEnLista(this.transaccionnotaventasForeignKey,transaccionnotaventa,true)) {

					this.transaccionnotaventasForeignKey.add(0,transaccionnotaventa);
				}
			}
		} catch(Exception e) {
			throw e;
		}
	}

	public void addItemDefectoCombosForeignKeyTransaccionNotaCredito()throws Exception {
		try {

			if(!this.configuracionpunvenSessionBean.getisBusquedaDesdeForeignKeySesionTransaccionNotaCredito()) {
				Transaccion transaccionnotacredito=new Transaccion();
				TransaccionConstantesFunciones.setTransaccionDescripcion(transaccionnotacredito,Constantes.SMENSAJE_ESCOJA_OPCION);
				transaccionnotacredito.setId(null);

				if(!TransaccionConstantesFunciones.ExisteEnLista(this.transaccionnotacreditosForeignKey,transaccionnotacredito,true)) {

					this.transaccionnotacreditosForeignKey.add(0,transaccionnotacredito);
				}
			}
		} catch(Exception e) {
			throw e;
		}
	}

	public void addItemDefectoCombosForeignKeyTransaccionCuentaFactura()throws Exception {
		try {

			if(!this.configuracionpunvenSessionBean.getisBusquedaDesdeForeignKeySesionTransaccionCuentaFactura()) {
				Transaccion transaccioncuentafactura=new Transaccion();
				TransaccionConstantesFunciones.setTransaccionDescripcion(transaccioncuentafactura,Constantes.SMENSAJE_ESCOJA_OPCION);
				transaccioncuentafactura.setId(null);

				if(!TransaccionConstantesFunciones.ExisteEnLista(this.transaccioncuentafacturasForeignKey,transaccioncuentafactura,true)) {

					this.transaccioncuentafacturasForeignKey.add(0,transaccioncuentafactura);
				}
			}
		} catch(Exception e) {
			throw e;
		}
	}

	public void addItemDefectoCombosForeignKeyTransaccionCuentaNotaVenta()throws Exception {
		try {

			if(!this.configuracionpunvenSessionBean.getisBusquedaDesdeForeignKeySesionTransaccionCuentaNotaVenta()) {
				Transaccion transaccioncuentanotaventa=new Transaccion();
				TransaccionConstantesFunciones.setTransaccionDescripcion(transaccioncuentanotaventa,Constantes.SMENSAJE_ESCOJA_OPCION);
				transaccioncuentanotaventa.setId(null);

				if(!TransaccionConstantesFunciones.ExisteEnLista(this.transaccioncuentanotaventasForeignKey,transaccioncuentanotaventa,true)) {

					this.transaccioncuentanotaventasForeignKey.add(0,transaccioncuentanotaventa);
				}
			}
		} catch(Exception e) {
			throw e;
		}
	}

	public void addItemDefectoCombosForeignKeyTransaccionCuentaNotaCredito()throws Exception {
		try {

			if(!this.configuracionpunvenSessionBean.getisBusquedaDesdeForeignKeySesionTransaccionCuentaNotaCredito()) {
				Transaccion transaccioncuentanotacredito=new Transaccion();
				TransaccionConstantesFunciones.setTransaccionDescripcion(transaccioncuentanotacredito,Constantes.SMENSAJE_ESCOJA_OPCION);
				transaccioncuentanotacredito.setId(null);

				if(!TransaccionConstantesFunciones.ExisteEnLista(this.transaccioncuentanotacreditosForeignKey,transaccioncuentanotacredito,true)) {

					this.transaccioncuentanotacreditosForeignKey.add(0,transaccioncuentanotacredito);
				}
			}
		} catch(Exception e) {
			throw e;
		}
	}
	
	public void initActionsCombosTodosForeignKeyConfiguracionPunVen()throws Exception {
		try {
			
		} catch(Exception e) {
			throw e;
		}		
	}
	
	public void initActionsCombosTodosForeignKeyConfiguracionPunVen(String sFormularioTipoBusqueda)throws Exception {
		try {
			
		} catch(Exception e) {
			throw e;
		}		
	}
	
	


	
	


	
	public void setVariablesGlobalesCombosForeignKeyConfiguracionPunVen()throws Exception {	
		try {
			if(this.parametroGeneralUsuario!=null && this.parametroGeneralUsuario.getId()>0) {
			
				this.setActualEmpresaForeignKey(this.parametroGeneralUsuario.getid_empresa(),false,"Formulario");
				this.setActualSucursalForeignKey(this.parametroGeneralUsuario.getid_sucursal(),false,"Formulario");
			
			
			}
			
			//INICIALIZA VARIABLES COMBOS GLOBALES AUXILIARES A FORMULARIO(Anio,Mes)
			this.setVariablesGlobalesAuxiliaresCombosForeignKeyConfiguracionPunVen();
		
		} catch(Exception e) {
			throw e;
		}
	}
	
	public void setVariablesObjetoActualToFormularioForeignKeyConfiguracionPunVen(ConfiguracionPunVen configuracionpunven)throws Exception {	
		try {
			
			this.setActualBodegaForeignKey(configuracionpunven.getid_bodega(),false,"Formulario");
			this.setActualCuentaContableEfectivoForeignKey(configuracionpunven.getid_cuenta_contable_efectivo(),false,"Formulario");
			this.setActualCuentaContableIceForeignKey(configuracionpunven.getid_cuenta_contable_ice(),false,"Formulario");
			this.setActualCuentaContableOtrosForeignKey(configuracionpunven.getid_cuenta_contable_otros(),false,"Formulario");
			this.setActualClienteConsumidorFinalForeignKey(configuracionpunven.getid_cliente_consumidor_final(),false,"Formulario");
			this.setActualTipoDocumentoFacturaForeignKey(configuracionpunven.getid_tipo_documento_factura(),false,"Formulario");
			this.setActualTipoDocumentoNotaVentaForeignKey(configuracionpunven.getid_tipo_documento_nota_venta(),false,"Formulario");
			this.setActualTipoDocumentoNotaCreditoForeignKey(configuracionpunven.getid_tipo_documento_nota_credito(),false,"Formulario");
			this.setActualTipoDocumentoTarjetaCreditoForeignKey(configuracionpunven.getid_tipo_documento_tarjeta_credito(),false,"Formulario");
			this.setActualFormatoFacturaForeignKey(configuracionpunven.getid_formato_factura(),false,"Formulario");
			this.setActualFormatoNotaVentaForeignKey(configuracionpunven.getid_formato_nota_venta(),false,"Formulario");
			this.setActualFormatoNotaCreditoForeignKey(configuracionpunven.getid_formato_nota_credito(),false,"Formulario");
			this.setActualTransaccionFacturaForeignKey(configuracionpunven.getid_transaccion_factura(),false,"Formulario");
			this.setActualTransaccionNotaVentaForeignKey(configuracionpunven.getid_transaccion_nota_venta(),false,"Formulario");
			this.setActualTransaccionNotaCreditoForeignKey(configuracionpunven.getid_transaccion_nota_credito(),false,"Formulario");
			this.setActualTransaccionCuentaFacturaForeignKey(configuracionpunven.getid_transaccion_cuenta_factura(),false,"Formulario");
			this.setActualTransaccionCuentaNotaVentaForeignKey(configuracionpunven.getid_transaccion_cuenta_nota_venta(),false,"Formulario");
			this.setActualTransaccionCuentaNotaCreditoForeignKey(configuracionpunven.getid_transaccion_cuenta_nota_credito(),false,"Formulario");			
		} catch(Exception e) {
			throw e;
		}
	}
	
	public void setVariablesObjetoActualToListasForeignKeyConfiguracionPunVen(ConfiguracionPunVen configuracionpunven,String sTipoEvento)throws Exception {	
		try {
			
			

				if(configuracionpunven.getClienteConsumidorFinal()!=null && !sTipoEvento.equals("id_cliente_consumidor_finalConfiguracionPunVen")) { //sTipoEvento Evita Bucle Infinito

					this.clienteconsumidorfinalsForeignKey=new ArrayList<Cliente>();
					this.clienteconsumidorfinalsForeignKey.add(configuracionpunven.getClienteConsumidorFinal());

					this.addItemDefectoCombosForeignKeyClienteConsumidorFinal();
					this.cargarCombosFrameClienteConsumidorFinalsForeignKey("Todos");
				}
			
		} catch(Exception e) {
			throw e;
		}
	}
	
	/*
	public void setVariablesCombosFromBeanForeignKeyConfiguracionPunVen()throws Exception {	
		try {
			
			this.setActualBodegaForeignKey(this.configuracionpunvenConstantesFunciones.getid_bodega(),false,"Formulario");
			this.setActualCuentaContableEfectivoForeignKey(this.configuracionpunvenConstantesFunciones.getid_cuenta_contable_efectivo(),false,"Formulario");
			this.setActualCuentaContableIceForeignKey(this.configuracionpunvenConstantesFunciones.getid_cuenta_contable_ice(),false,"Formulario");
			this.setActualCuentaContableOtrosForeignKey(this.configuracionpunvenConstantesFunciones.getid_cuenta_contable_otros(),false,"Formulario");
			this.setActualClienteConsumidorFinalForeignKey(this.configuracionpunvenConstantesFunciones.getid_cliente_consumidor_final(),false,"Formulario");
			this.setActualTipoDocumentoFacturaForeignKey(this.configuracionpunvenConstantesFunciones.getid_tipo_documento_factura(),false,"Formulario");
			this.setActualTipoDocumentoNotaVentaForeignKey(this.configuracionpunvenConstantesFunciones.getid_tipo_documento_nota_venta(),false,"Formulario");
			this.setActualTipoDocumentoNotaCreditoForeignKey(this.configuracionpunvenConstantesFunciones.getid_tipo_documento_nota_credito(),false,"Formulario");
			this.setActualTipoDocumentoTarjetaCreditoForeignKey(this.configuracionpunvenConstantesFunciones.getid_tipo_documento_tarjeta_credito(),false,"Formulario");
			this.setActualFormatoFacturaForeignKey(this.configuracionpunvenConstantesFunciones.getid_formato_factura(),false,"Formulario");
			this.setActualFormatoNotaVentaForeignKey(this.configuracionpunvenConstantesFunciones.getid_formato_nota_venta(),false,"Formulario");
			this.setActualFormatoNotaCreditoForeignKey(this.configuracionpunvenConstantesFunciones.getid_formato_nota_credito(),false,"Formulario");
			this.setActualTransaccionFacturaForeignKey(this.configuracionpunvenConstantesFunciones.getid_transaccion_factura(),false,"Formulario");
			this.setActualTransaccionNotaVentaForeignKey(this.configuracionpunvenConstantesFunciones.getid_transaccion_nota_venta(),false,"Formulario");
			this.setActualTransaccionNotaCreditoForeignKey(this.configuracionpunvenConstantesFunciones.getid_transaccion_nota_credito(),false,"Formulario");
			this.setActualTransaccionCuentaFacturaForeignKey(this.configuracionpunvenConstantesFunciones.getid_transaccion_cuenta_factura(),false,"Formulario");
			this.setActualTransaccionCuentaNotaVentaForeignKey(this.configuracionpunvenConstantesFunciones.getid_transaccion_cuenta_nota_venta(),false,"Formulario");
			this.setActualTransaccionCuentaNotaCreditoForeignKey(this.configuracionpunvenConstantesFunciones.getid_transaccion_cuenta_nota_credito(),false,"Formulario");			
		} catch(Exception e) {
			throw e;
		}
	}
	*/
	
	public void setVariablesGlobalesAuxiliaresCombosForeignKeyConfiguracionPunVen()throws Exception {	
		try {
			
		
		} catch(Exception e) {
			throw e;
		}
	}
	
	public void setVariablesDefaultCombosForeignKeyConfiguracionPunVen()throws Exception {	
		try {
			
		} catch(Exception e) {
			throw e;
		}
	}
	
	public void setVariablesParametroCombosForeignKeyConfiguracionPunVen()throws Exception {	
		try {
			
		} catch(Exception e) {
			throw e;
		}
	}		
	
	public void cargarCombosParametroConfiguracionPunVen()throws Exception {
		try	{
			ArrayList<String> arrColumnasGlobales=new ArrayList<String>();
			String  finalQueryGlobal="";
			
			//this.cargarDatosCliente();
			
			
			
		} catch(Exception e) {
			throw e;
		}		
	}
		
	public void cargarCombosFrameForeignKeyConfiguracionPunVen()throws Exception {
		try {
			

			this.cargarCombosFrameEmpresasForeignKey("Todos");
			this.cargarCombosFrameSucursalsForeignKey("Todos");
			this.cargarCombosFrameBodegasForeignKey("Todos");
			this.cargarCombosFrameCuentaContableEfectivosForeignKey("Todos");
			this.cargarCombosFrameCuentaContableIcesForeignKey("Todos");
			this.cargarCombosFrameCuentaContableOtrossForeignKey("Todos");
			this.cargarCombosFrameClienteConsumidorFinalsForeignKey("Todos");
			this.cargarCombosFrameTipoDocumentoFacturasForeignKey("Todos");
			this.cargarCombosFrameTipoDocumentoNotaVentasForeignKey("Todos");
			this.cargarCombosFrameTipoDocumentoNotaCreditosForeignKey("Todos");
			this.cargarCombosFrameTipoDocumentoTarjetaCreditosForeignKey("Todos");
			this.cargarCombosFrameFormatoFacturasForeignKey("Todos");
			this.cargarCombosFrameFormatoNotaVentasForeignKey("Todos");
			this.cargarCombosFrameFormatoNotaCreditosForeignKey("Todos");
			this.cargarCombosFrameTransaccionFacturasForeignKey("Todos");
			this.cargarCombosFrameTransaccionNotaVentasForeignKey("Todos");
			this.cargarCombosFrameTransaccionNotaCreditosForeignKey("Todos");
			this.cargarCombosFrameTransaccionCuentaFacturasForeignKey("Todos");
			this.cargarCombosFrameTransaccionCuentaNotaVentasForeignKey("Todos");
			this.cargarCombosFrameTransaccionCuentaNotaCreditosForeignKey("Todos");

		} catch(Exception e) {
			throw e;
		}		
	}		
	
	public void cargarCombosFrameForeignKeyConfiguracionPunVen(String sFormularioTipoBusqueda)throws Exception {
		try {
			

			this.cargarCombosFrameEmpresasForeignKey(sFormularioTipoBusqueda);
			this.cargarCombosFrameSucursalsForeignKey(sFormularioTipoBusqueda);
			this.cargarCombosFrameBodegasForeignKey(sFormularioTipoBusqueda);
			this.cargarCombosFrameCuentaContableEfectivosForeignKey(sFormularioTipoBusqueda);
			this.cargarCombosFrameCuentaContableIcesForeignKey(sFormularioTipoBusqueda);
			this.cargarCombosFrameCuentaContableOtrossForeignKey(sFormularioTipoBusqueda);
			this.cargarCombosFrameClienteConsumidorFinalsForeignKey(sFormularioTipoBusqueda);
			this.cargarCombosFrameTipoDocumentoFacturasForeignKey(sFormularioTipoBusqueda);
			this.cargarCombosFrameTipoDocumentoNotaVentasForeignKey(sFormularioTipoBusqueda);
			this.cargarCombosFrameTipoDocumentoNotaCreditosForeignKey(sFormularioTipoBusqueda);
			this.cargarCombosFrameTipoDocumentoTarjetaCreditosForeignKey(sFormularioTipoBusqueda);
			this.cargarCombosFrameFormatoFacturasForeignKey(sFormularioTipoBusqueda);
			this.cargarCombosFrameFormatoNotaVentasForeignKey(sFormularioTipoBusqueda);
			this.cargarCombosFrameFormatoNotaCreditosForeignKey(sFormularioTipoBusqueda);
			this.cargarCombosFrameTransaccionFacturasForeignKey(sFormularioTipoBusqueda);
			this.cargarCombosFrameTransaccionNotaVentasForeignKey(sFormularioTipoBusqueda);
			this.cargarCombosFrameTransaccionNotaCreditosForeignKey(sFormularioTipoBusqueda);
			this.cargarCombosFrameTransaccionCuentaFacturasForeignKey(sFormularioTipoBusqueda);
			this.cargarCombosFrameTransaccionCuentaNotaVentasForeignKey(sFormularioTipoBusqueda);
			this.cargarCombosFrameTransaccionCuentaNotaCreditosForeignKey(sFormularioTipoBusqueda);

		} catch(Exception e) {
			throw e;
		}		
	}	
	
	public void setItemDefectoCombosForeignKeyConfiguracionPunVen()throws Exception {
		try {
			



			if(this.jInternalFrameDetalleFormConfiguracionPunVen.jComboBoxid_empresaConfiguracionPunVen!=null && this.jInternalFrameDetalleFormConfiguracionPunVen.jComboBoxid_empresaConfiguracionPunVen.getItemCount()>0) {
				this.jInternalFrameDetalleFormConfiguracionPunVen.jComboBoxid_empresaConfiguracionPunVen.setSelectedIndex(0);
			}

			if(this.jInternalFrameDetalleFormConfiguracionPunVen.jComboBoxid_sucursalConfiguracionPunVen!=null && this.jInternalFrameDetalleFormConfiguracionPunVen.jComboBoxid_sucursalConfiguracionPunVen.getItemCount()>0) {
				this.jInternalFrameDetalleFormConfiguracionPunVen.jComboBoxid_sucursalConfiguracionPunVen.setSelectedIndex(0);
			}

			if(this.jInternalFrameDetalleFormConfiguracionPunVen.jComboBoxid_bodegaConfiguracionPunVen!=null && this.jInternalFrameDetalleFormConfiguracionPunVen.jComboBoxid_bodegaConfiguracionPunVen.getItemCount()>0) {
				this.jInternalFrameDetalleFormConfiguracionPunVen.jComboBoxid_bodegaConfiguracionPunVen.setSelectedIndex(0);
			}

			if(this.jInternalFrameDetalleFormConfiguracionPunVen.jComboBoxid_cuenta_contable_efectivoConfiguracionPunVen!=null && this.jInternalFrameDetalleFormConfiguracionPunVen.jComboBoxid_cuenta_contable_efectivoConfiguracionPunVen.getItemCount()>0) {
				this.jInternalFrameDetalleFormConfiguracionPunVen.jComboBoxid_cuenta_contable_efectivoConfiguracionPunVen.setSelectedIndex(0);
			}

			if(this.jInternalFrameDetalleFormConfiguracionPunVen.jComboBoxid_cuenta_contable_iceConfiguracionPunVen!=null && this.jInternalFrameDetalleFormConfiguracionPunVen.jComboBoxid_cuenta_contable_iceConfiguracionPunVen.getItemCount()>0) {
				this.jInternalFrameDetalleFormConfiguracionPunVen.jComboBoxid_cuenta_contable_iceConfiguracionPunVen.setSelectedIndex(0);
			}

			if(this.jInternalFrameDetalleFormConfiguracionPunVen.jComboBoxid_cuenta_contable_otrosConfiguracionPunVen!=null && this.jInternalFrameDetalleFormConfiguracionPunVen.jComboBoxid_cuenta_contable_otrosConfiguracionPunVen.getItemCount()>0) {
				this.jInternalFrameDetalleFormConfiguracionPunVen.jComboBoxid_cuenta_contable_otrosConfiguracionPunVen.setSelectedIndex(0);
			}

			if(this.jInternalFrameDetalleFormConfiguracionPunVen.jComboBoxid_cliente_consumidor_finalConfiguracionPunVen!=null && this.jInternalFrameDetalleFormConfiguracionPunVen.jComboBoxid_cliente_consumidor_finalConfiguracionPunVen.getItemCount()>0) {
				this.jInternalFrameDetalleFormConfiguracionPunVen.jComboBoxid_cliente_consumidor_finalConfiguracionPunVen.setSelectedIndex(0);
			}

			if(this.jInternalFrameDetalleFormConfiguracionPunVen.jComboBoxid_tipo_documento_facturaConfiguracionPunVen!=null && this.jInternalFrameDetalleFormConfiguracionPunVen.jComboBoxid_tipo_documento_facturaConfiguracionPunVen.getItemCount()>0) {
				this.jInternalFrameDetalleFormConfiguracionPunVen.jComboBoxid_tipo_documento_facturaConfiguracionPunVen.setSelectedIndex(0);
			}

			if(this.jInternalFrameDetalleFormConfiguracionPunVen.jComboBoxid_tipo_documento_nota_ventaConfiguracionPunVen!=null && this.jInternalFrameDetalleFormConfiguracionPunVen.jComboBoxid_tipo_documento_nota_ventaConfiguracionPunVen.getItemCount()>0) {
				this.jInternalFrameDetalleFormConfiguracionPunVen.jComboBoxid_tipo_documento_nota_ventaConfiguracionPunVen.setSelectedIndex(0);
			}

			if(this.jInternalFrameDetalleFormConfiguracionPunVen.jComboBoxid_tipo_documento_nota_creditoConfiguracionPunVen!=null && this.jInternalFrameDetalleFormConfiguracionPunVen.jComboBoxid_tipo_documento_nota_creditoConfiguracionPunVen.getItemCount()>0) {
				this.jInternalFrameDetalleFormConfiguracionPunVen.jComboBoxid_tipo_documento_nota_creditoConfiguracionPunVen.setSelectedIndex(0);
			}

			if(this.jInternalFrameDetalleFormConfiguracionPunVen.jComboBoxid_tipo_documento_tarjeta_creditoConfiguracionPunVen!=null && this.jInternalFrameDetalleFormConfiguracionPunVen.jComboBoxid_tipo_documento_tarjeta_creditoConfiguracionPunVen.getItemCount()>0) {
				this.jInternalFrameDetalleFormConfiguracionPunVen.jComboBoxid_tipo_documento_tarjeta_creditoConfiguracionPunVen.setSelectedIndex(0);
			}

			if(this.jInternalFrameDetalleFormConfiguracionPunVen.jComboBoxid_formato_facturaConfiguracionPunVen!=null && this.jInternalFrameDetalleFormConfiguracionPunVen.jComboBoxid_formato_facturaConfiguracionPunVen.getItemCount()>0) {
				this.jInternalFrameDetalleFormConfiguracionPunVen.jComboBoxid_formato_facturaConfiguracionPunVen.setSelectedIndex(0);
			}

			if(this.jInternalFrameDetalleFormConfiguracionPunVen.jComboBoxid_formato_nota_ventaConfiguracionPunVen!=null && this.jInternalFrameDetalleFormConfiguracionPunVen.jComboBoxid_formato_nota_ventaConfiguracionPunVen.getItemCount()>0) {
				this.jInternalFrameDetalleFormConfiguracionPunVen.jComboBoxid_formato_nota_ventaConfiguracionPunVen.setSelectedIndex(0);
			}

			if(this.jInternalFrameDetalleFormConfiguracionPunVen.jComboBoxid_formato_nota_creditoConfiguracionPunVen!=null && this.jInternalFrameDetalleFormConfiguracionPunVen.jComboBoxid_formato_nota_creditoConfiguracionPunVen.getItemCount()>0) {
				this.jInternalFrameDetalleFormConfiguracionPunVen.jComboBoxid_formato_nota_creditoConfiguracionPunVen.setSelectedIndex(0);
			}

			if(this.jInternalFrameDetalleFormConfiguracionPunVen.jComboBoxid_transaccion_facturaConfiguracionPunVen!=null && this.jInternalFrameDetalleFormConfiguracionPunVen.jComboBoxid_transaccion_facturaConfiguracionPunVen.getItemCount()>0) {
				this.jInternalFrameDetalleFormConfiguracionPunVen.jComboBoxid_transaccion_facturaConfiguracionPunVen.setSelectedIndex(0);
			}

			if(this.jInternalFrameDetalleFormConfiguracionPunVen.jComboBoxid_transaccion_nota_ventaConfiguracionPunVen!=null && this.jInternalFrameDetalleFormConfiguracionPunVen.jComboBoxid_transaccion_nota_ventaConfiguracionPunVen.getItemCount()>0) {
				this.jInternalFrameDetalleFormConfiguracionPunVen.jComboBoxid_transaccion_nota_ventaConfiguracionPunVen.setSelectedIndex(0);
			}

			if(this.jInternalFrameDetalleFormConfiguracionPunVen.jComboBoxid_transaccion_nota_creditoConfiguracionPunVen!=null && this.jInternalFrameDetalleFormConfiguracionPunVen.jComboBoxid_transaccion_nota_creditoConfiguracionPunVen.getItemCount()>0) {
				this.jInternalFrameDetalleFormConfiguracionPunVen.jComboBoxid_transaccion_nota_creditoConfiguracionPunVen.setSelectedIndex(0);
			}

			if(this.jInternalFrameDetalleFormConfiguracionPunVen.jComboBoxid_transaccion_cuenta_facturaConfiguracionPunVen!=null && this.jInternalFrameDetalleFormConfiguracionPunVen.jComboBoxid_transaccion_cuenta_facturaConfiguracionPunVen.getItemCount()>0) {
				this.jInternalFrameDetalleFormConfiguracionPunVen.jComboBoxid_transaccion_cuenta_facturaConfiguracionPunVen.setSelectedIndex(0);
			}

			if(this.jInternalFrameDetalleFormConfiguracionPunVen.jComboBoxid_transaccion_cuenta_nota_ventaConfiguracionPunVen!=null && this.jInternalFrameDetalleFormConfiguracionPunVen.jComboBoxid_transaccion_cuenta_nota_ventaConfiguracionPunVen.getItemCount()>0) {
				this.jInternalFrameDetalleFormConfiguracionPunVen.jComboBoxid_transaccion_cuenta_nota_ventaConfiguracionPunVen.setSelectedIndex(0);
			}

			if(this.jInternalFrameDetalleFormConfiguracionPunVen.jComboBoxid_transaccion_cuenta_nota_creditoConfiguracionPunVen!=null && this.jInternalFrameDetalleFormConfiguracionPunVen.jComboBoxid_transaccion_cuenta_nota_creditoConfiguracionPunVen.getItemCount()>0) {
				this.jInternalFrameDetalleFormConfiguracionPunVen.jComboBoxid_transaccion_cuenta_nota_creditoConfiguracionPunVen.setSelectedIndex(0);
			}
		} catch(Exception e) {
			throw e;
		}		
	}		
	
	








































	
	

	public ConfiguracionPunVenBeanSwingJInternalFrame() throws Exception {
		super(false,PaginaTipo.PRINCIPAL);
	}
	
	public ConfiguracionPunVenBeanSwingJInternalFrame(Boolean cargarRelaciones,PaginaTipo paginaTipo) throws Exception {
		super(cargarRelaciones,paginaTipo);
	}
	
	public ConfiguracionPunVenBeanSwingJInternalFrame(Boolean conGuardarRelaciones,Boolean esGuardarRelacionado,Boolean cargarRelaciones,PaginaTipo paginaTipo) throws Exception {
		super(cargarRelaciones,paginaTipo);
		
		this.configuracionpunvenSessionBean=new ConfiguracionPunVenSessionBean(); 
		this.configuracionpunvenConstantesFunciones=new ConfiguracionPunVenConstantesFunciones(); 
		this.configuracionpunvenBean=new ConfiguracionPunVen();//(this.configuracionpunvenConstantesFunciones); 		
		this.configuracionpunvenReturnGeneral=new ConfiguracionPunVenParameterReturnGeneral(); 
		
		this.configuracionpunvenSessionBean.setConGuardarRelaciones(conGuardarRelaciones);
		this.configuracionpunvenSessionBean.setEsGuardarRelacionado(esGuardarRelacionado);
				
	}
	
	public ConfiguracionPunVenBeanSwingJInternalFrame(Boolean blncargarCombostrForeignKey,Boolean blnCargarInformacionInicial,JDesktopPane jdesktopPane,Usuario usuarioActual,ResumenUsuario resumenUsuarioActual,Modulo moduloActual,Opcion opcionActual,ParametroGeneralSg parametroGeneralSg,ParametroGeneralUsuario parametroGeneralUsuario,Boolean conGuardarRelaciones,Boolean esGuardarRelacionado,Boolean cargarRelaciones,Boolean cargarTodosDatos,PaginaTipo paginaTipo) throws Exception {
		this(blncargarCombostrForeignKey,blnCargarInformacionInicial,jdesktopPane,usuarioActual,resumenUsuarioActual,moduloActual,opcionActual,parametroGeneralSg,parametroGeneralUsuario,paginaTipo,conGuardarRelaciones,esGuardarRelacionado,cargarRelaciones,cargarTodosDatos);
	}
		
	public ConfiguracionPunVenBeanSwingJInternalFrame(Boolean blncargarCombostrForeignKey,Boolean blnCargarInformacionInicial,JDesktopPane jdesktopPane,Usuario usuarioActual,ResumenUsuario resumenUsuarioActual,Modulo moduloActual,Opcion opcionActual,ParametroGeneralSg parametroGeneralSg,ParametroGeneralUsuario parametroGeneralUsuario,Boolean cargarRelaciones,Boolean cargarTodosDatos,PaginaTipo paginaTipo) throws Exception {
		this(blncargarCombostrForeignKey,blnCargarInformacionInicial,jdesktopPane,usuarioActual,resumenUsuarioActual,moduloActual,opcionActual,parametroGeneralSg,parametroGeneralUsuario,paginaTipo,false,false,cargarRelaciones,cargarTodosDatos);
	}	
	
	public ConfiguracionPunVenBeanSwingJInternalFrame(Boolean blncargarCombostrForeignKey,Boolean blnCargarInformacionInicial,JDesktopPane jdesktopPane,Usuario usuarioActual,ResumenUsuario resumenUsuarioActual,Modulo moduloActual,Opcion opcionActual,ParametroGeneralSg parametroGeneralSg,ParametroGeneralUsuario parametroGeneralUsuario,PaginaTipo paginaTipo,Boolean conGuardarRelaciones,Boolean esGuardarRelacionado,Boolean cargarRelaciones,Boolean cargarTodosDatos) throws Exception //Boolean esParaBusquedaForeignKey
    {
		super(jdesktopPane,conGuardarRelaciones,esGuardarRelacionado,cargarRelaciones,usuarioActual,resumenUsuarioActual,moduloActual,opcionActual,parametroGeneralSg,parametroGeneralUsuario,paginaTipo);
		
		try {
			
			this.permiteRecargarForm=false;
			
			this.startProcessConfiguracionPunVen(true);
			
			Boolean esParaBusquedaForeignKey=false;//ANTES USADO COMO PARAMETRO DEL CONSTRUCTOR
			
			if(paginaTipo.equals(PaginaTipo.BUSQUEDA)) {
				esParaBusquedaForeignKey=true;
			}
			
			
			
			//SE ASIGNA EN CLASE PADRE
			/*
			this.parametroGeneralSg=parametroGeneralSg;		
			this.parametroGeneralUsuario=parametroGeneralUsuario;	
			this.usuarioActual=usuarioActual;
			this.moduloActual=moduloActual;
			*/						
			
			long start_time=0;
			long end_time=0;
			
			if(Constantes2.ISDEVELOPING2) {
				start_time = System.currentTimeMillis();
			}
			
			if(!cargarTodosDatos) {
				this.sAccionBusqueda="NINGUNO";
			}
			
			this.configuracionpunvenConstantesFunciones=new ConfiguracionPunVenConstantesFunciones(); 
			this.configuracionpunvenBean=new ConfiguracionPunVen();//this.configuracionpunvenConstantesFunciones); 			
			this.configuracionpunvenReturnGeneral=new ConfiguracionPunVenParameterReturnGeneral(); 
		
			ConfiguracionPunVenBeanSwingJInternalFrameAdditional.CargaInicialInicio(this, "NORMAL", null);
			
			this.setTitle(Funciones.GetTituloSistema(this.parametroGeneralSg,this.moduloActual,this.usuarioActual,"Configuracion Pun Ven Mantenimiento",paginaTipo));			
			
			this.conTotales=false;
			
			
			
			this.configuracionpunven=new ConfiguracionPunVen();
			this.configuracionpunvens = new ArrayList<ConfiguracionPunVen>();
			this.configuracionpunvensAux = new ArrayList<ConfiguracionPunVen>();
			
			if(Constantes.ISUSAEJBLOGICLAYER) {
				this.configuracionpunvenLogic=new ConfiguracionPunVenLogic();
				this.configuracionpunvenLogic.getNewConnexionToDeep("");
			}
			
			//this.configuracionpunvenSessionBean.setConGuardarRelaciones(conGuardarRelaciones);
			//this.configuracionpunvenSessionBean.setEsGuardarRelacionado(esGuardarRelacionado);
			
			this.jDesktopPane=jdesktopPane;
			
			if(this.jDesktopPane.getClass().equals(JDesktopPaneMe.class)) {
				this.constantes2=((JDesktopPaneMe)this.jDesktopPane).constantes2;
			}
			
			if(!Constantes.CON_VARIAS_VENTANAS) {
    			MainJFrame.cerrarJInternalFramesExistentes(this.jDesktopPane,this.jInternalFrameDetalleFormConfiguracionPunVen);
				
				if(!this.conCargarMinimo) {
					
					if(this.jInternalFrameReporteDinamicoConfiguracionPunVen!=null) {
						MainJFrame.cerrarJInternalFramesExistentes(this.jDesktopPane,this.jInternalFrameReporteDinamicoConfiguracionPunVen);	
					}
					
					if(this.jInternalFrameImportacionConfiguracionPunVen!=null) {
						MainJFrame.cerrarJInternalFramesExistentes(this.jDesktopPane,this.jInternalFrameImportacionConfiguracionPunVen);							
					}
					
				}
				
				
				if(!this.conCargarMinimo) {
					
					if(this.jInternalFrameOrderByConfiguracionPunVen!=null) {
						MainJFrame.cerrarJInternalFramesExistentes(this.jDesktopPane,this.jInternalFrameOrderByConfiguracionPunVen);					
					}
					
				}
			}
			
			//DETALLE DATOS
			if(this.jInternalFrameDetalleFormConfiguracionPunVen!=null) { //this.conCargarFormDetalle) {
				this.jDesktopPane.add(this.jInternalFrameDetalleFormConfiguracionPunVen);
				this.jInternalFrameDetalleFormConfiguracionPunVen.setVisible(false);
				this.jInternalFrameDetalleFormConfiguracionPunVen.setSelected(false);						
			}
			
			if(!this.conCargarMinimo) {
				
				//REPORTE DINAMICO
				if(this.jInternalFrameReporteDinamicoConfiguracionPunVen!=null) {
					this.jDesktopPane.add(this.jInternalFrameReporteDinamicoConfiguracionPunVen);
					this.jInternalFrameReporteDinamicoConfiguracionPunVen.setVisible(false);
					this.jInternalFrameReporteDinamicoConfiguracionPunVen.setSelected(false);
				}
				
				//IMPORTACION
				if(this.jInternalFrameImportacionConfiguracionPunVen!=null) {
					this.jDesktopPane.add(this.jInternalFrameImportacionConfiguracionPunVen);
					this.jInternalFrameImportacionConfiguracionPunVen.setVisible(false);
					this.jInternalFrameImportacionConfiguracionPunVen.setSelected(false);
				}
				
				
			}
			
			
			if(!this.conCargarMinimo) {
				
				if(this.jInternalFrameOrderByConfiguracionPunVen!=null) {
					this.jDesktopPane.add(this.jInternalFrameOrderByConfiguracionPunVen);
					this.jInternalFrameOrderByConfiguracionPunVen.setVisible(false);
					this.jInternalFrameOrderByConfiguracionPunVen.setSelected(false);				
				}
				
			}
			
			
			//this.esParaBusquedaForeignKey=false;
			this.esParaBusquedaForeignKey=esParaBusquedaForeignKey;
			
			this.invalidValues=new InvalidValue[0];
			
			
			
			this.idConfiguracionPunVenActual=0L;
			this.rowIndexActual=0;
			
			
			this.iNumeroPaginacionPagina=0;
			this.iNumeroPaginacion=ConfiguracionPunVenConstantesFunciones.INUMEROPAGINACION;
			this.pagination=new Pagination();
			this.datosCliente=new DatosCliente();
			this.lIdUsuarioSesion=0L;	
			this.sTipoArchivoReporte="";
			this.sTipoArchivoReporteDinamico="";
			this.sTipoReporte="";
			this.sTipoReporteDinamico="";
			this.sTipoPaginacion="";
			this.sTipoRelacion="";
			this.sTipoAccion="";
			this.sTipoAccionFormulario="";
			this.sTipoSeleccionar="";			
			this.sDetalleReporte="";
			this.sTipoReporteExtra="";
			this.sValorCampoGeneral="";
			this.sPathReporteDinamico="";			
			
			this.isMostrarNumeroPaginacion=false;
			this.isSeleccionarTodos=false;
			this.isSeleccionados=false;
			this.conGraficoReporte=false;
			this.isPostAccionNuevo=false;
			this.isPostAccionSinCerrar=false;
			this.isPostAccionSinMensaje=false;
			this.esReporteDinamico=false;
			this.esRecargarFks=false;
			this.esReporteAccionProceso=false;
			
			this.configuracionpunvenReturnGeneral=new ConfiguracionPunVenParameterReturnGeneral();
			
			this.configuracionpunvenParameterGeneral=new ConfiguracionPunVenParameterReturnGeneral();
			
			
			
			this.sistemaLogicAdditional=new SistemaLogicAdditional();
			
			this.sistemaLogicAdditional.setConnexion(this.configuracionpunvenLogic.getConnexion());			
			
			
			
			
			
			
			
			//VERIFICAR GLOBAL
			this.cargarDatosCliente();			
			
			
			if(!this.configuracionpunvenSessionBean.getEsGuardarRelacionado()) {
				if(Constantes.ISUSAEJBLOGICLAYER) {	
					if(!sistemaLogicAdditional.validarLicenciaCliente(this.datosCliente,this.moduloActual,this.usuarioActual)) {
					 	this.setVisible(false);
						throw new Exception(Mensajes.SERROR_CONTROLGLOBAL);
					}
					
				} else if(Constantes.ISUSAEJBREMOTE) {
					
				} else if(Constantes.ISUSAEJBHOME) {
				}
			}			
			
			//VERIFICAR GLOBAL
			
			//VERIFICAR SESSION ACTUAL
			//this.cargarDatosCliente();
			
			this.sistemaReturnGeneral=new SistemaParameterReturnGeneral();
			
			SistemaParameterReturnGeneralAdditional.inicializarSinSeguridad(this.sistemaReturnGeneral);
			
			if(ConfiguracionPunVenJInternalFrame.CON_LLAMADA_SIMPLE) {
				if(this.configuracionpunvenSessionBean.getEsGuardarRelacionado()) {
					this.opcionActual.setId(0L);
					
					//idOpcion=0L;					
				}
				
				ArrayList<String> arrPaginas=new ArrayList<String>();		
				ArrayList<Opcion> opcionsFinal=new ArrayList<Opcion>();	
				
		
				if(Constantes.ISUSAEJBLOGICLAYER) {	
					//this.sistemaReturnGeneral=sistemaLogicAdditional.validarCargarSesionUsuarioActualWithConnection(this.usuarioActual,this.datosCliente,this.resumenUsuarioActual,Constantes.LIDSISTEMAACTUAL,ConfiguracionPunVenConstantesFunciones.SNOMBREOPCION,this.opcionActual,this.configuracionpunvenSessionBean.getEsGuardarRelacionado(),this.configuracionpunvenSessionBean.getConGuardarRelaciones(),arrPaginas);
					
					this.sistemaReturnGeneral=sistemaLogicAdditional.validarCargarSesionUsuarioActual(this.usuarioActual,this.datosCliente,this.resumenUsuarioActual,Constantes.LIDSISTEMAACTUAL,ConfiguracionPunVenConstantesFunciones.SNOMBREOPCION,this.opcionActual,this.configuracionpunvenSessionBean.getEsGuardarRelacionado(),this.configuracionpunvenSessionBean.getConGuardarRelaciones(),arrPaginas);
					
					if(!this.sistemaReturnGeneral.getEsValidado()) {
					 	this.setVisible(false);
						throw new Exception(Mensajes.SERROR_SESIONACTUAL);
					}
				} else if(Constantes.ISUSAEJBREMOTE) {
				} else if(Constantes.ISUSAEJBHOME) {
					//FALTA
				}
			} else { 
				if(Constantes.ISUSAEJBLOGICLAYER) {	
					if(!sistemaLogicAdditional.validarSesionUsuarioActual(this.usuarioActual,this.datosCliente,this.resumenUsuarioActual)) {
					 	this.setVisible(false);
						throw new Exception(Mensajes.SERROR_SESIONACTUAL);
					}
				
				} else if(Constantes.ISUSAEJBREMOTE) {
					
				} else if(Constantes.ISUSAEJBHOME) {
				}
			} 
			//VERIFICAR SESSION ACTUAL
			
			
			this.sVisibilidadTablaBusquedas="table-row";
			this.sVisibilidadTablaElementos="none";
			this.sVisibilidadTablaAcciones="none";
			
			this.isVisibilidadCeldaNuevoConfiguracionPunVen=false;
			this.isVisibilidadCeldaDuplicarConfiguracionPunVen=true;
			this.isVisibilidadCeldaCopiarConfiguracionPunVen=true;
			this.isVisibilidadCeldaVerFormConfiguracionPunVen=true;
			this.isVisibilidadCeldaOrdenConfiguracionPunVen=true;
			this.isVisibilidadCeldaNuevoRelacionesConfiguracionPunVen=false;
			this.isVisibilidadCeldaModificarConfiguracionPunVen=false;
			this.isVisibilidadCeldaActualizarConfiguracionPunVen=false;
			this.isVisibilidadCeldaEliminarConfiguracionPunVen=false;
			this.isVisibilidadCeldaCancelarConfiguracionPunVen=false;
			this.isVisibilidadCeldaGuardarConfiguracionPunVen=false;
			this.isVisibilidadCeldaGuardarCambiosConfiguracionPunVen=false;
			
			
			this.isVisibilidadFK_IdBodega=true;
			this.isVisibilidadFK_IdClienteConsumidorFinal=true;
			this.isVisibilidadFK_IdCuentaContableEfectivo=true;
			this.isVisibilidadFK_IdCuentaContableIce=true;
			this.isVisibilidadFK_IdCuentaContableOtros=true;
			this.isVisibilidadFK_IdEmpresa=true;
			this.isVisibilidadFK_IdFormatoFactura=true;
			this.isVisibilidadFK_IdFormatoNotaCredito=true;
			this.isVisibilidadFK_IdFormatoNotaVenta=true;
			this.isVisibilidadFK_IdSucursal=true;
			this.isVisibilidadFK_IdTipoDocumentoFactura=true;
			this.isVisibilidadFK_IdTipoDocumentoNotaCredito=true;
			this.isVisibilidadFK_IdTipoDocumentoNotaVenta=true;
			this.isVisibilidadFK_IdTipoDocumentoTarjetaCredito=true;
			this.isVisibilidadFK_IdTransaccionCuentaFactura=true;
			this.isVisibilidadFK_IdTransaccionCuentaNotaCredito=true;
			this.isVisibilidadFK_IdTransaccionCuentaNotaVenta=true;
			this.isVisibilidadFK_IdTransaccionFactura=true;
			this.isVisibilidadFK_IdTransaccionNotaCredito=true;
			this.isVisibilidadFK_IdTransaccionNotaVenta=true;
			
			//ELEMENTOS TABLAS PARAMETOS
			
			
			
			//ELEMENTOS TABLAS PARAMETOS_FIN
			
			//this.actualizarEstadoCeldasBotonesConfiguracionPunVen("n", isGuardarCambiosEnLote, isEsMantenimientoRelacionado);
						
			
			
			this.inicializarPermisosConfiguracionPunVen();
			
			//INICIALIZAR FALSE, TALVEZ COMENTAR
			this.setPermisosUsuarioConfiguracionPunVen(false);
			
			this.setPermisosUsuarioConfiguracionPunVen();
			
			
			
			//FUNCIONALIDAD_RELACIONADO
			if(!this.configuracionpunvenSessionBean.getEsGuardarRelacionado() 
				|| (this.configuracionpunvenSessionBean.getEsGuardarRelacionado() && this.configuracionpunvenSessionBean.getConGuardarRelaciones())) {
				
				this.inicializarSetPermisosUsuarioConfiguracionPunVenClasesRelacionadas();
			}
			
			if(this.configuracionpunvenSessionBean.getConGuardarRelaciones()) {
				this.actualizarTabsSetPermisosUsuarioConfiguracionPunVenClasesRelacionadas();
			}
			
			
			
			//SOLO SE EJECUTA LA PRIMERA VEZ, BINDINGS SI FUNCIONA
			if(!ConfiguracionPunVenJInternalFrame.ISBINDING_MANUAL) {
				this.inicializarActualizarBindingBotonesPermisosConfiguracionPunVen();
			} else {
				this.inicializarActualizarBindingBotonesPermisosManualConfiguracionPunVen();
			}
			
			if(!this.isPermisoBusquedaConfiguracionPunVen) {
				//BYDAN_BUSQUEDAS
				
				this.jTabbedPaneBusquedasConfiguracionPunVen.setVisible(false);				
				
			}
			
			
			
			//FUNCIONALIDAD_RELACIONADO
			if(!this.configuracionpunvenSessionBean.getEsGuardarRelacionado()) {				
				this.tiposArchivosReportes=Funciones.getListTiposArchivosReportes();
				this.tiposArchivosReportesDinamico=Funciones.getListTiposArchivosReportes();
				this.tiposReportes=Funciones.getListTiposReportes(false);
				this.tiposReportesDinamico=Funciones.getListTiposReportesDinamico(false);
				
				
				
				this.tiposGraficosReportes=Funciones2.getListTiposGraficosReportes();
				this.tiposPaginacion=Funciones2.getListTiposPaginacion(this.isPermisoPaginacionMedioConfiguracionPunVen,this.isPermisoPaginacionMedioConfiguracionPunVen,this.isPermisoPaginacionTodoConfiguracionPunVen);
				this.tiposSeleccionar=Funciones2.getListTiposSeleccionar();
				this.tiposSeleccionar.addAll(ConfiguracionPunVenConstantesFunciones.getTiposSeleccionarConfiguracionPunVen());
				
				this.tiposColumnasSelect=ConfiguracionPunVenConstantesFunciones.getTiposSeleccionarConfiguracionPunVen(true);
				
				this.tiposRelacionesSelect=new ArrayList<Reporte>();								
				
				
			} else {
				this.tiposArchivosReportes=new ArrayList<Reporte>();
				this.tiposArchivosReportesDinamico=new ArrayList<Reporte>();
				this.tiposReportes=new ArrayList<Reporte>();
				this.tiposReportesDinamico=new ArrayList<Reporte>();
				this.tiposGraficosReportes=new ArrayList<Reporte>();
				this.tiposPaginacion=new ArrayList<Reporte>();
				this.tiposSeleccionar=new ArrayList<Reporte>();			
				this.tiposColumnasSelect=new ArrayList<Reporte>();	
				this.tiposRelacionesSelect=new ArrayList<Reporte>();	
			}
						
			
			//FUNCIONALIDAD_RELACIONADO
			//if(!this.configuracionpunvenSessionBean.getEsGuardarRelacionado()) {
				//SE ENCUENTRA MAS ADELANTE CON ACCIONES POR USUARIO
				//ACCIONES GENERALES Y POR USUARIO
				this.tiposRelaciones=Funciones2.getListTiposRelaciones();
				this.setRelacionesUsuarioConfiguracionPunVen();
				
				this.tiposAcciones=Funciones2.getListTiposAcciones(false,false,true);
				this.setAccionesUsuarioConfiguracionPunVen(false);	
				
				this.tiposAccionesFormulario=Funciones2.getListTiposAccionesFormulario(false,false,true);							
				this.setAccionesUsuarioConfiguracionPunVen(true);	
				
				this.inicializarActualizarBindingtiposArchivosReportesAccionesConfiguracionPunVen() ;
			
			/*
			} else {
				this.tiposAcciones=new ArrayList<Reporte>();
				this.tiposAccionesFormulario=new ArrayList<Reporte>();
			}
			*/						
			
			this.inicializarInvalidValues();
						
			this.arrDatoGeneral= new  ArrayList<DatoGeneral>();
			this.arrDatoGeneralNo= new  ArrayList<String>();
			
			
			
			this.arrOrderBy= new  ArrayList<OrderBy>();
			
			
			this.arrDatoGeneralMinimos= new  ArrayList<DatoGeneralMinimo>();
			
			
			this.traerValoresTablaOrderBy();			
			
			
			this.isGuardarCambiosEnLote=false;
			this.isCargarCombosDependencia=false;
			
			 
			jasperPrint = null;												
			
			//FK
			
			this.empresaLogic=new EmpresaLogic();
			this.sucursalLogic=new SucursalLogic();
			this.bodegaLogic=new BodegaLogic();
			this.cuentacontableefectivoLogic=new CuentaContableLogic();
			this.cuentacontableiceLogic=new CuentaContableLogic();
			this.cuentacontableotrosLogic=new CuentaContableLogic();
			this.clienteconsumidorfinalLogic=new ClienteLogic();
			this.tipodocumentofacturaLogic=new TipoDocumentoLogic();
			this.tipodocumentonotaventaLogic=new TipoDocumentoLogic();
			this.tipodocumentonotacreditoLogic=new TipoDocumentoLogic();
			this.tipodocumentotarjetacreditoLogic=new TipoDocumentoLogic();
			this.formatofacturaLogic=new FormatoLogic();
			this.formatonotaventaLogic=new FormatoLogic();
			this.formatonotacreditoLogic=new FormatoLogic();
			this.transaccionfacturaLogic=new TransaccionLogic();
			this.transaccionnotaventaLogic=new TransaccionLogic();
			this.transaccionnotacreditoLogic=new TransaccionLogic();
			this.transaccioncuentafacturaLogic=new TransaccionLogic();
			this.transaccioncuentanotaventaLogic=new TransaccionLogic();
			this.transaccioncuentanotacreditoLogic=new TransaccionLogic();
			
			//PARAMETROS
			
			
			/*
			if(Constantes.ISUSAEJBREMOTE || Constantes.ISUSAEJBHOME) {		
				hashtableEnv =  Funciones.getHashtableEnv();		
				initialContext = new InitialContext(hashtableEnv);	
			}
			*/
			/*
			if(Constantes.ISUSAEJBREMOTE) {
				configuracionpunvenImplementable= (ConfiguracionPunVenImplementable) initialContext.lookup(Constantes.SEJBPACKAGE+Constantes.SEJBSEPARATOR+ConfiguracionPunVenConstantesFunciones.SEJBNAME+Constantes.SEJBSEPARATOR+Constantes.SEJBREMOTE);
			} else if(Constantes.ISUSAEJBHOME) {
				configuracionpunvenImplementableHome= (ConfiguracionPunVenImplementableHome) initialContext.lookup(Constantes.SEJBPACKAGE+Constantes.SEJBSEPARATOR+ConfiguracionPunVenConstantesFunciones.SEJBNAME+Constantes.SEJBSEPARATOR+Constantes.SEJBLOCAL);
			}			
			*/
			
			
			this.configuracionpunvens= new ArrayList<ConfiguracionPunVen>();
			this.configuracionpunvensEliminados= new ArrayList<ConfiguracionPunVen>();
						
			this.isEsNuevoConfiguracionPunVen=false;
			this.esParaAccionDesdeFormularioConfiguracionPunVen=false;
			this.isEsMantenimientoRelacionesRelacionadoUnico=false;
			this.isEsMantenimientoRelaciones=false;
			this.isEsMantenimientoRelacionado=false;
			this.isContieneImagenes=false;
			
			
			
			
			//BUSQUEDA INTERNA FK
			this.idClienteConsumidorFinalActual=0L;
			
			//INICIALIZAR LISTAS FK
			
			this.empresasForeignKey=new ArrayList<Empresa>() ;
			this.sucursalsForeignKey=new ArrayList<Sucursal>() ;
			this.bodegasForeignKey=new ArrayList<Bodega>() ;
			this.cuentacontableefectivosForeignKey=new ArrayList<CuentaContable>() ;
			this.cuentacontableicesForeignKey=new ArrayList<CuentaContable>() ;
			this.cuentacontableotrossForeignKey=new ArrayList<CuentaContable>() ;
			this.clienteconsumidorfinalsForeignKey=new ArrayList<Cliente>() ;
			this.tipodocumentofacturasForeignKey=new ArrayList<TipoDocumento>() ;
			this.tipodocumentonotaventasForeignKey=new ArrayList<TipoDocumento>() ;
			this.tipodocumentonotacreditosForeignKey=new ArrayList<TipoDocumento>() ;
			this.tipodocumentotarjetacreditosForeignKey=new ArrayList<TipoDocumento>() ;
			this.formatofacturasForeignKey=new ArrayList<Formato>() ;
			this.formatonotaventasForeignKey=new ArrayList<Formato>() ;
			this.formatonotacreditosForeignKey=new ArrayList<Formato>() ;
			this.transaccionfacturasForeignKey=new ArrayList<Transaccion>() ;
			this.transaccionnotaventasForeignKey=new ArrayList<Transaccion>() ;
			this.transaccionnotacreditosForeignKey=new ArrayList<Transaccion>() ;
			this.transaccioncuentafacturasForeignKey=new ArrayList<Transaccion>() ;
			this.transaccioncuentanotaventasForeignKey=new ArrayList<Transaccion>() ;
			this.transaccioncuentanotacreditosForeignKey=new ArrayList<Transaccion>() ;
			
			
			
			
			if(blncargarCombostrForeignKey) {
				this.cargarCombosForeignKeyConfiguracionPunVen(this.isCargarCombosDependencia);
			}
			
			this.cargarCombosParametroConfiguracionPunVen();
			
			
			
			
			
			//FUNCIONALIDAD_RELACIONADO
			if(!this.configuracionpunvenSessionBean.getEsGuardarRelacionado()) {
				this.onLoad();
			}
						
			ConfiguracionPunVenBeanSwingJInternalFrameAdditional.RecargarVentanaSegunOpcion(this,opcionActual);
			
			/*
			if(blnCargarInformacionInicial) {
				this.recargarInformacion();
			}
			*/
			//this.iNumeroPaginacionPagina=0;
			//this.iNumeroPaginacion=ConfiguracionPunVenConstantesFunciones.INUMEROPAGINACION;
			
			this.actualizarEstadoCeldasBotonesConfiguracionPunVen("n", isGuardarCambiosEnLote, isEsMantenimientoRelacionado);
			//SOLO LA PRIMERA VEZ HACE LOS BINDINGS, SOLO AHI FUNCIONA
			this.inicializarActualizarBindingConfiguracionPunVen(true); 
			
			//SE REDIMENSIONA SINO NO SE ACTUALIZA
			this.redimensionarTablaDatos();
			
			
			this.initActions();
			
			;
						
			if(this.jInternalFrameDetalleFormConfiguracionPunVen!=null) {//if(this.conCargarFormDetalle) {
				this.cargarMenuRelaciones();
			}
			
			//OBLIGA CARGAR DETALLE, MEJOR DESHABILITAR, FALTA TALVEZ PONER EN SELECCIONAR
			//MAYBE
			//this.updateControlesFormularioConfiguracionPunVen();
			
			if(!this.conCargarMinimo) {
				this.updateBusquedasFormularioConfiguracionPunVen();
			}
			
			ConfiguracionPunVenBeanSwingJInternalFrameAdditional.CargaInicial(this, "NORMAL", null);
			
			
			//SE REALIZA ESTO PARA QUE SE PUEDA RECORRER TAB SIN IMPORTAR ORDEN
			Boolean existeTabBusqueda=false;
			
			if(!this.conCargarMinimo) {
				//BYDAN_BUSQUEDAS
				
				
				for(int i=0; i<this.jTabbedPaneBusquedasConfiguracionPunVen.getTabCount(); i++) {
					this.jTabbedPaneBusquedasConfiguracionPunVen.setSelectedIndex(i);
						
					if(!existeTabBusqueda) {
						existeTabBusqueda=true;
					}
				}
					
				if(existeTabBusqueda) {
					this.jTabbedPaneBusquedasConfiguracionPunVen.setSelectedIndex(0);
				}	
				
				
			}
			
			
			if(Constantes.ISUSAEJBLOGICLAYER) {
				this.configuracionpunvenLogic.commitNewConnexionToDeep();
			}
			
			
			if(Constantes2.ISDEVELOPING2) {
				end_time = System.currentTimeMillis();			
				String sTipo="Load Ventana";
				Funciones2.getMensajeTiempoEjecucion(start_time, end_time, sTipo,false);
			}  
			
			this.finishProcessConfiguracionPunVen(true);
			
			this.dEnd=(double)System.currentTimeMillis();
			
			this.dDif=this.dEnd - this.dStart;
			
			if(Constantes.ISDEVELOPING) {
				System.out.println("Tiempo(ms) Carga ConfiguracionPunVen: " + this.dDif); 
			}
			
			this.permiteRecargarForm=true;
			
		} catch(Exception e) {
			
			if(Constantes.ISUSAEJBLOGICLAYER) {
				this.configuracionpunvenLogic.rollbackNewConnexionToDeep();
			}
			
			FuncionesSwing.manageException(this, e,logger,ConfiguracionPunVenConstantesFunciones.CLASSNAME);
		
		} finally {
			if(Constantes.ISUSAEJBLOGICLAYER) {
				this.configuracionpunvenLogic.closeNewConnexionToDeep();
			}
		}	 
    }
	
	public void cargarTiposRelacionesSelectConfiguracionPunVen() {
		Reporte reporte=new Reporte();
		
	
	}
	
	
	
	public void jTabbedPaneChangeListenerGeneral(String sTipo,ChangeEvent evt) { 	  
		Boolean procesaCargarParteTab=false;
			
		try {
			int iIndex=0;		    			
			String sTitle="";
			
			//TABBED PANE RELACIONES
			if(sTipo.equals("RelacionesConfiguracionPunVen")) {
				iIndex=this.jInternalFrameDetalleFormConfiguracionPunVen.jTabbedPaneRelacionesConfiguracionPunVen.getSelectedIndex();		    
			
				sTitle=this.jInternalFrameDetalleFormConfiguracionPunVen.jTabbedPaneRelacionesConfiguracionPunVen.getTitleAt(iIndex);
				
				Integer intSelectedRow = 0;	
			
				intSelectedRow = this.jTableDatosConfiguracionPunVen.getSelectedRow();	
				
				
				
			}
			
			//TABBED PANE RELACIONES FIN(EXTRA TAB)
			;
			
  		} catch(Exception e) {
  			e.printStackTrace();
  		} finally {
			if(procesaCargarParteTab) {				
				this.finishProcessConfiguracionPunVen();	
			}
		}
    }
	
	
	
	public void jButtonRelacionActionPerformedGeneral(String sTipo,ActionEvent evt) { 	  
		try {
			
  		} catch(Exception e) {
  			e.printStackTrace();
  		}
    }
	
	public void cargarMenuRelaciones() {	
		JMenuItem jmenuItem= new JMenuItem("General");
		String sLabelMenu="";
		
	}		
	
	public void cargarCombosForeignKeyConfiguracionPunVen(Boolean cargarCombosDependencia) throws Exception {   
		this.cargarCombosForeignKeyConfiguracionPunVen(cargarCombosDependencia,true,true);
	}
	
	//CARGAR COMBOS EN LOTE
	public void cargarCombosForeignKeyConfiguracionPunVen(Boolean cargarCombosDependencia,Boolean conInitActions,Boolean conSetVariablesGlobales) throws Exception {   
		this.cargarCombosTodosForeignKeyConfiguracionPunVenListas(cargarCombosDependencia);
				
		this.addItemDefectoCombosTodosForeignKeyConfiguracionPunVen();
		
		this.cargarCombosFrameForeignKeyConfiguracionPunVen();						
		
		if(conInitActions) {
			this.initActionsCombosTodosForeignKeyConfiguracionPunVen();
		}
		
		if(conSetVariablesGlobales) {
			this.setVariablesGlobalesCombosForeignKeyConfiguracionPunVen();
		}
	}
	
	

	public void cargarCombosForeignKeyBodega(Boolean cargarCombosDependencia,Boolean conInitActions,Boolean conSetVariablesGlobales,String sFinalQueryCombo,String sFormularioTipoBusqueda) throws Exception {
		try {
				this.cargarCombosForeignKeyBodegaListas(cargarCombosDependencia,sFinalQueryCombo);
				this.addItemDefectoCombosForeignKeyBodega();
				this.cargarCombosFrameBodegasForeignKey(sFormularioTipoBusqueda);

				if(conInitActions) {
				}

			this.recargarComboTablaBodega(this.bodegasForeignKey);

		} catch(Exception e) {
			throw e;
		}
	}

	public void cargarCombosForeignKeyCuentaContableEfectivo(Boolean cargarCombosDependencia,Boolean conInitActions,Boolean conSetVariablesGlobales,String sFinalQueryCombo,String sFormularioTipoBusqueda) throws Exception {
		try {
				this.cargarCombosForeignKeyCuentaContableEfectivoListas(cargarCombosDependencia,sFinalQueryCombo);
				this.addItemDefectoCombosForeignKeyCuentaContableEfectivo();
				this.cargarCombosFrameCuentaContableEfectivosForeignKey(sFormularioTipoBusqueda);

				if(conInitActions) {
				}

			this.recargarComboTablaCuentaContableEfectivo(this.cuentacontableefectivosForeignKey);

		} catch(Exception e) {
			throw e;
		}
	}

	public void cargarCombosForeignKeyCuentaContableIce(Boolean cargarCombosDependencia,Boolean conInitActions,Boolean conSetVariablesGlobales,String sFinalQueryCombo,String sFormularioTipoBusqueda) throws Exception {
		try {
				this.cargarCombosForeignKeyCuentaContableIceListas(cargarCombosDependencia,sFinalQueryCombo);
				this.addItemDefectoCombosForeignKeyCuentaContableIce();
				this.cargarCombosFrameCuentaContableIcesForeignKey(sFormularioTipoBusqueda);

				if(conInitActions) {
				}

			this.recargarComboTablaCuentaContableIce(this.cuentacontableicesForeignKey);

		} catch(Exception e) {
			throw e;
		}
	}

	public void cargarCombosForeignKeyCuentaContableOtros(Boolean cargarCombosDependencia,Boolean conInitActions,Boolean conSetVariablesGlobales,String sFinalQueryCombo,String sFormularioTipoBusqueda) throws Exception {
		try {
				this.cargarCombosForeignKeyCuentaContableOtrosListas(cargarCombosDependencia,sFinalQueryCombo);
				this.addItemDefectoCombosForeignKeyCuentaContableOtros();
				this.cargarCombosFrameCuentaContableOtrossForeignKey(sFormularioTipoBusqueda);

				if(conInitActions) {
				}

			this.recargarComboTablaCuentaContableOtros(this.cuentacontableotrossForeignKey);

		} catch(Exception e) {
			throw e;
		}
	}

	public void cargarCombosForeignKeyClienteConsumidorFinal(Boolean cargarCombosDependencia,Boolean conInitActions,Boolean conSetVariablesGlobales,String sFinalQueryCombo,String sFormularioTipoBusqueda) throws Exception {
		try {
				this.cargarCombosForeignKeyClienteConsumidorFinalListas(cargarCombosDependencia,sFinalQueryCombo);
				this.addItemDefectoCombosForeignKeyClienteConsumidorFinal();
				this.cargarCombosFrameClienteConsumidorFinalsForeignKey(sFormularioTipoBusqueda);

				if(conInitActions) {
				}

			this.recargarComboTablaClienteConsumidorFinal(this.clienteconsumidorfinalsForeignKey);

		} catch(Exception e) {
			throw e;
		}
	}

	public void cargarCombosForeignKeyTipoDocumentoFactura(Boolean cargarCombosDependencia,Boolean conInitActions,Boolean conSetVariablesGlobales,String sFinalQueryCombo,String sFormularioTipoBusqueda) throws Exception {
		try {
				this.cargarCombosForeignKeyTipoDocumentoFacturaListas(cargarCombosDependencia,sFinalQueryCombo);
				this.addItemDefectoCombosForeignKeyTipoDocumentoFactura();
				this.cargarCombosFrameTipoDocumentoFacturasForeignKey(sFormularioTipoBusqueda);

				if(conInitActions) {
				}

			this.recargarComboTablaTipoDocumentoFactura(this.tipodocumentofacturasForeignKey);

		} catch(Exception e) {
			throw e;
		}
	}

	public void cargarCombosForeignKeyTipoDocumentoNotaVenta(Boolean cargarCombosDependencia,Boolean conInitActions,Boolean conSetVariablesGlobales,String sFinalQueryCombo,String sFormularioTipoBusqueda) throws Exception {
		try {
				this.cargarCombosForeignKeyTipoDocumentoNotaVentaListas(cargarCombosDependencia,sFinalQueryCombo);
				this.addItemDefectoCombosForeignKeyTipoDocumentoNotaVenta();
				this.cargarCombosFrameTipoDocumentoNotaVentasForeignKey(sFormularioTipoBusqueda);

				if(conInitActions) {
				}

			this.recargarComboTablaTipoDocumentoNotaVenta(this.tipodocumentonotaventasForeignKey);

		} catch(Exception e) {
			throw e;
		}
	}

	public void cargarCombosForeignKeyTipoDocumentoNotaCredito(Boolean cargarCombosDependencia,Boolean conInitActions,Boolean conSetVariablesGlobales,String sFinalQueryCombo,String sFormularioTipoBusqueda) throws Exception {
		try {
				this.cargarCombosForeignKeyTipoDocumentoNotaCreditoListas(cargarCombosDependencia,sFinalQueryCombo);
				this.addItemDefectoCombosForeignKeyTipoDocumentoNotaCredito();
				this.cargarCombosFrameTipoDocumentoNotaCreditosForeignKey(sFormularioTipoBusqueda);

				if(conInitActions) {
				}

			this.recargarComboTablaTipoDocumentoNotaCredito(this.tipodocumentonotacreditosForeignKey);

		} catch(Exception e) {
			throw e;
		}
	}

	public void cargarCombosForeignKeyTipoDocumentoTarjetaCredito(Boolean cargarCombosDependencia,Boolean conInitActions,Boolean conSetVariablesGlobales,String sFinalQueryCombo,String sFormularioTipoBusqueda) throws Exception {
		try {
				this.cargarCombosForeignKeyTipoDocumentoTarjetaCreditoListas(cargarCombosDependencia,sFinalQueryCombo);
				this.addItemDefectoCombosForeignKeyTipoDocumentoTarjetaCredito();
				this.cargarCombosFrameTipoDocumentoTarjetaCreditosForeignKey(sFormularioTipoBusqueda);

				if(conInitActions) {
				}

			this.recargarComboTablaTipoDocumentoTarjetaCredito(this.tipodocumentotarjetacreditosForeignKey);

		} catch(Exception e) {
			throw e;
		}
	}

	public void cargarCombosForeignKeyFormatoFactura(Boolean cargarCombosDependencia,Boolean conInitActions,Boolean conSetVariablesGlobales,String sFinalQueryCombo,String sFormularioTipoBusqueda) throws Exception {
		try {
				this.cargarCombosForeignKeyFormatoFacturaListas(cargarCombosDependencia,sFinalQueryCombo);
				this.addItemDefectoCombosForeignKeyFormatoFactura();
				this.cargarCombosFrameFormatoFacturasForeignKey(sFormularioTipoBusqueda);

				if(conInitActions) {
				}

			this.recargarComboTablaFormatoFactura(this.formatofacturasForeignKey);

		} catch(Exception e) {
			throw e;
		}
	}

	public void cargarCombosForeignKeyFormatoNotaVenta(Boolean cargarCombosDependencia,Boolean conInitActions,Boolean conSetVariablesGlobales,String sFinalQueryCombo,String sFormularioTipoBusqueda) throws Exception {
		try {
				this.cargarCombosForeignKeyFormatoNotaVentaListas(cargarCombosDependencia,sFinalQueryCombo);
				this.addItemDefectoCombosForeignKeyFormatoNotaVenta();
				this.cargarCombosFrameFormatoNotaVentasForeignKey(sFormularioTipoBusqueda);

				if(conInitActions) {
				}

			this.recargarComboTablaFormatoNotaVenta(this.formatonotaventasForeignKey);

		} catch(Exception e) {
			throw e;
		}
	}

	public void cargarCombosForeignKeyFormatoNotaCredito(Boolean cargarCombosDependencia,Boolean conInitActions,Boolean conSetVariablesGlobales,String sFinalQueryCombo,String sFormularioTipoBusqueda) throws Exception {
		try {
				this.cargarCombosForeignKeyFormatoNotaCreditoListas(cargarCombosDependencia,sFinalQueryCombo);
				this.addItemDefectoCombosForeignKeyFormatoNotaCredito();
				this.cargarCombosFrameFormatoNotaCreditosForeignKey(sFormularioTipoBusqueda);

				if(conInitActions) {
				}

			this.recargarComboTablaFormatoNotaCredito(this.formatonotacreditosForeignKey);

		} catch(Exception e) {
			throw e;
		}
	}

	public void cargarCombosForeignKeyTransaccionFactura(Boolean cargarCombosDependencia,Boolean conInitActions,Boolean conSetVariablesGlobales,String sFinalQueryCombo,String sFormularioTipoBusqueda) throws Exception {
		try {
				this.cargarCombosForeignKeyTransaccionFacturaListas(cargarCombosDependencia,sFinalQueryCombo);
				this.addItemDefectoCombosForeignKeyTransaccionFactura();
				this.cargarCombosFrameTransaccionFacturasForeignKey(sFormularioTipoBusqueda);

				if(conInitActions) {
				}

			this.recargarComboTablaTransaccionFactura(this.transaccionfacturasForeignKey);

		} catch(Exception e) {
			throw e;
		}
	}

	public void cargarCombosForeignKeyTransaccionNotaVenta(Boolean cargarCombosDependencia,Boolean conInitActions,Boolean conSetVariablesGlobales,String sFinalQueryCombo,String sFormularioTipoBusqueda) throws Exception {
		try {
				this.cargarCombosForeignKeyTransaccionNotaVentaListas(cargarCombosDependencia,sFinalQueryCombo);
				this.addItemDefectoCombosForeignKeyTransaccionNotaVenta();
				this.cargarCombosFrameTransaccionNotaVentasForeignKey(sFormularioTipoBusqueda);

				if(conInitActions) {
				}

			this.recargarComboTablaTransaccionNotaVenta(this.transaccionnotaventasForeignKey);

		} catch(Exception e) {
			throw e;
		}
	}

	public void cargarCombosForeignKeyTransaccionNotaCredito(Boolean cargarCombosDependencia,Boolean conInitActions,Boolean conSetVariablesGlobales,String sFinalQueryCombo,String sFormularioTipoBusqueda) throws Exception {
		try {
				this.cargarCombosForeignKeyTransaccionNotaCreditoListas(cargarCombosDependencia,sFinalQueryCombo);
				this.addItemDefectoCombosForeignKeyTransaccionNotaCredito();
				this.cargarCombosFrameTransaccionNotaCreditosForeignKey(sFormularioTipoBusqueda);

				if(conInitActions) {
				}

			this.recargarComboTablaTransaccionNotaCredito(this.transaccionnotacreditosForeignKey);

		} catch(Exception e) {
			throw e;
		}
	}

	public void cargarCombosForeignKeyTransaccionCuentaFactura(Boolean cargarCombosDependencia,Boolean conInitActions,Boolean conSetVariablesGlobales,String sFinalQueryCombo,String sFormularioTipoBusqueda) throws Exception {
		try {
				this.cargarCombosForeignKeyTransaccionCuentaFacturaListas(cargarCombosDependencia,sFinalQueryCombo);
				this.addItemDefectoCombosForeignKeyTransaccionCuentaFactura();
				this.cargarCombosFrameTransaccionCuentaFacturasForeignKey(sFormularioTipoBusqueda);

				if(conInitActions) {
				}

			this.recargarComboTablaTransaccionCuentaFactura(this.transaccioncuentafacturasForeignKey);

		} catch(Exception e) {
			throw e;
		}
	}

	public void cargarCombosForeignKeyTransaccionCuentaNotaVenta(Boolean cargarCombosDependencia,Boolean conInitActions,Boolean conSetVariablesGlobales,String sFinalQueryCombo,String sFormularioTipoBusqueda) throws Exception {
		try {
				this.cargarCombosForeignKeyTransaccionCuentaNotaVentaListas(cargarCombosDependencia,sFinalQueryCombo);
				this.addItemDefectoCombosForeignKeyTransaccionCuentaNotaVenta();
				this.cargarCombosFrameTransaccionCuentaNotaVentasForeignKey(sFormularioTipoBusqueda);

				if(conInitActions) {
				}

			this.recargarComboTablaTransaccionCuentaNotaVenta(this.transaccioncuentanotaventasForeignKey);

		} catch(Exception e) {
			throw e;
		}
	}

	public void cargarCombosForeignKeyTransaccionCuentaNotaCredito(Boolean cargarCombosDependencia,Boolean conInitActions,Boolean conSetVariablesGlobales,String sFinalQueryCombo,String sFormularioTipoBusqueda) throws Exception {
		try {
				this.cargarCombosForeignKeyTransaccionCuentaNotaCreditoListas(cargarCombosDependencia,sFinalQueryCombo);
				this.addItemDefectoCombosForeignKeyTransaccionCuentaNotaCredito();
				this.cargarCombosFrameTransaccionCuentaNotaCreditosForeignKey(sFormularioTipoBusqueda);

				if(conInitActions) {
				}

			this.recargarComboTablaTransaccionCuentaNotaCredito(this.transaccioncuentanotacreditosForeignKey);

		} catch(Exception e) {
			throw e;
		}
	}
	
	public void jButtonNuevoConfiguracionPunVenActionPerformed(ActionEvent evt,Boolean esRelaciones) throws Exception {   
		try {
			EventoGlobalTipo eventoGlobalTipo=EventoGlobalTipo.FORM_RECARGAR;
			String sTipo="NUEVO_NORMAL";
			
			this.estaModoNuevo=true;
			
			if(this.configuracionpunvenSessionBean.getConGuardarRelaciones()) {
				this.dStart=(double)System.currentTimeMillis();
			}
				
			//if(this.esUsoDesdeHijo) {
			//	eventoGlobalTipo=EventoGlobalTipo.FORM_HIJO_ACTUALIZAR;
			//}
											
			if(this.jInternalFrameDetalleFormConfiguracionPunVen==null) { //if(!this.conCargarFormDetalle) {
				this.inicializarFormDetalle();
			}			
				
			ConfiguracionPunVenBeanSwingJInternalFrameAdditional.procesarEventosVista(this.parametroGeneralUsuario,this.moduloActual,this.opcionActual,this.usuarioActual,this,FuncionTipo.BEFORE,ControlTipo.FORM,EventoTipo.LOAD,EventoSubTipo.NEW,"FORM",this.configuracionpunven,new Object(),this.configuracionpunvenParameterGeneral,this.configuracionpunvenReturnGeneral);
			
			
			if(jTableDatosConfiguracionPunVen.getRowCount()>=1) {
				jTableDatosConfiguracionPunVen.removeRowSelectionInterval(0, jTableDatosConfiguracionPunVen.getRowCount()-1);						
			}
			
			this.isEsNuevoConfiguracionPunVen=true;
			
			//ESTABLECE SI ES RELACIONADO O NO 
			this.habilitarDeshabilitarTipoMantenimientoConfiguracionPunVen(esRelaciones);
			
			this.nuevoPreparar(false); 
			this.habilitarDeshabilitarControlesConfiguracionPunVen(true);			
			//this.configuracionpunven=new ConfiguracionPunVen();
			//this.configuracionpunven.setIsChanged(true);
			
			//NO FUNCIONA BINDINGS
			this.inicializarActualizarBindingBotonesConfiguracionPunVen(false) ;						
			 
			//SI ES MANUAL
			//this.inicializarActualizarBindingBotonesManualConfiguracionPunVen() ;
			
			if(ConfiguracionPunVenJInternalFrame.CON_DATOS_FRAME) {
				this.abrirFrameDetalleConfiguracionPunVen(esRelaciones);
			}
					
			//Se Duplica, sin sentido
			//this.actualizarInformacion("EVENTO_NUEVO",false,this.configuracionpunven);	
			this.actualizarInformacion("INFO_PADRE",false,this.configuracionpunven);				
			
			ConfiguracionPunVenBeanSwingJInternalFrameAdditional.procesarEventosVista(this.parametroGeneralUsuario,this.moduloActual,this.opcionActual,this.usuarioActual,this,FuncionTipo.AFTER,ControlTipo.FORM,EventoTipo.LOAD,EventoSubTipo.NEW,"FORM",this.configuracionpunven,new Object(),this.configuracionpunvenParameterGeneral,this.configuracionpunvenReturnGeneral);
			
			if(this.configuracionpunvenSessionBean.getConGuardarRelaciones()) {
				this.dEnd=(double)System.currentTimeMillis();					
				this.dDif=this.dEnd - this.dStart;
					
				if(Constantes.ISDEVELOPING) {
					System.out.println("Tiempo(ms) Nuevo Preparar ConfiguracionPunVen: " + this.dDif); 
				}
			}
			
			//false para que pueda generar eventos
			this.estaModoNuevo=false;
							
			//Con this.estaModoNuevo=false;, se permite actualizar y usar eventos control al mismo tiempo (FuncionTipo.LAST)			
			ConfiguracionPunVenBeanSwingJInternalFrameAdditional.procesarEventosVista(this.parametroGeneralUsuario,this.moduloActual,this.opcionActual,this.usuarioActual,this,FuncionTipo.LAST,ControlTipo.FORM,EventoTipo.CLIC,EventoSubTipo.NEW,sTipo,this.configuracionpunven,new Object(),this.configuracionpunvenParameterGeneral,this.configuracionpunvenReturnGeneral);
			
		} catch(Exception e) {									
			FuncionesSwing.manageException(this, e,logger,ConfiguracionPunVenConstantesFunciones.CLASSNAME);
			
		} finally {
			this.estaModoNuevo=false;			
		}
	}
	
	public void jButtonDuplicarConfiguracionPunVenActionPerformed(ActionEvent evt,Boolean esRelaciones) throws Exception {   
		try {
			Boolean soloDuplicarUno=false;
			Boolean conSeleccionarFilaTabla=false;
			
			this.estaModoNuevo=true;
			this.estaModoDuplicar=true;
			
			ArrayList<ConfiguracionPunVen> configuracionpunvensSeleccionados=new ArrayList<ConfiguracionPunVen>();
			int intSelectedRow =-1;
			Integer iNumRowsSeleccionados=0;
			int[] arrNumRowsSeleccionados=null;
			
			//NO SE TOMA EN CUENTA, SI LOS SELECCIONADOS
			if(conSeleccionarFilaTabla) {
				arrNumRowsSeleccionados=this.jTableDatosConfiguracionPunVen.getSelectedRows();
				iNumRowsSeleccionados=this.jTableDatosConfiguracionPunVen.getSelectedRows().length;			
			}
			
			configuracionpunvensSeleccionados=this.getConfiguracionPunVensSeleccionados(false);
				
			if((soloDuplicarUno && iNumRowsSeleccionados.equals(1)) || !soloDuplicarUno) {
				//LO HACE NUEVOPREPARAR
				//this.iIdNuevoConfiguracionPunVen--;			
				//ConfiguracionPunVen configuracionpunvenAux= new ConfiguracionPunVen();			
				//configuracionpunvenAux.setId(this.iIdNuevoConfiguracionPunVen);																
				
				//NO SE TOMA EN CUENTA, SI LOS SELECCIONADOS
				//ConfiguracionPunVen configuracionpunvenOrigen=new ConfiguracionPunVen();
				//for(Integer iNumRowSeleccionado:arrNumRowsSeleccionados) {				
				
				for(ConfiguracionPunVen configuracionpunvenOrigen : configuracionpunvensSeleccionados) {
					if(conSeleccionarFilaTabla) {
						if(!soloDuplicarUno) {
							//NO SE TOMA EN CUENTA, SI LOS SELECCIONADOS
							//intSelectedRow =iNumRowSeleccionado;
						} else {
							intSelectedRow = this.jTableDatosConfiguracionPunVen.getSelectedRow();
						}
						
						//ARCHITECTURE
						if(Constantes.ISUSAEJBLOGICLAYER) {
							configuracionpunvenOrigen =(ConfiguracionPunVen) this.configuracionpunvenLogic.getConfiguracionPunVens().toArray()[this.jTableDatosConfiguracionPunVen.convertRowIndexToModel(intSelectedRow)];
						} else if(Constantes.ISUSAEJBREMOTE || Constantes.ISUSAEJBHOME) {
							configuracionpunvenOrigen =(ConfiguracionPunVen) this.configuracionpunvens.toArray()[this.jTableDatosConfiguracionPunVen.convertRowIndexToModel(intSelectedRow)];
						}
					}
					
					this.aumentarTamanioFilaNuevaTablaConfiguracionPunVen();
					
					if(this.conTotales) {
						this.quitarFilaTotales();
					}
					
					this.nuevoPreparar(true);
					
					this.configuracionpunven.setsType("DUPLICADO");
					
					this.setCopiarVariablesObjetosConfiguracionPunVen(configuracionpunvenOrigen,this.configuracionpunven,true,true);
					
					this.setVariablesFormularioToObjetoActualForeignKeysConfiguracionPunVen(this.configuracionpunven);
					
					//LO HACE NUEVOPREPARAR
					/*
					if(Constantes.ISUSAEJBLOGICLAYER) {				
						this.configuracionpunvenLogic.getConfiguracionPunVens().add(this.configuracionpunvenAux);
					} else if(Constantes.ISUSAEJBREMOTE||Constantes.ISUSAEJBHOME) {
						this.configuracionpunvens.add(this.configuracionpunvenAux);				
					}
					*/
				}
				
				this.inicializarActualizarBindingTablaConfiguracionPunVen(false);
				
				this.jTableDatosConfiguracionPunVen.setRowSelectionInterval(this.getIndiceNuevoConfiguracionPunVen(), this.getIndiceNuevoConfiguracionPunVen());
				
				int iLastRow =  this.jTableDatosConfiguracionPunVen.getRowCount () - 1;
				Rectangle rectangle = this.jTableDatosConfiguracionPunVen.getCellRect(iLastRow, 0, true);
				
				this.jTableDatosConfiguracionPunVen.scrollRectToVisible(rectangle);
				
				//FILA TOTALES
				if(this.conTotales) {
					this.crearFilaTotales();
					
					this.inicializarActualizarBindingTablaConfiguracionPunVen(false);
				}
			} else {
				throw new Exception("DEBE ESTAR SELECCIONADO 1 REGISTRO");
			}
			
		} catch(Exception e) {			
			FuncionesSwing.manageException(this, e,logger,ConfiguracionPunVenConstantesFunciones.CLASSNAME);
		
		} finally {
			this.estaModoNuevo=false;
			this.estaModoDuplicar=false;
		}
	}
	
	public void jButtonCopiarConfiguracionPunVenActionPerformed(ActionEvent evt) throws Exception {   
		try {
			
			Boolean conSeleccionarFilaTabla=false;
			Integer iNumRowsSeleccionados=0;
			int[] intSelectedRows =null;
			int intSelectedRow =0;
			
			this.estaModoCopiar=true;
			
			ArrayList<ConfiguracionPunVen> configuracionpunvensSeleccionados=new ArrayList<ConfiguracionPunVen>();									
		
			ConfiguracionPunVen configuracionpunvenOrigen=new ConfiguracionPunVen();
			ConfiguracionPunVen configuracionpunvenDestino=new ConfiguracionPunVen();
				
			configuracionpunvensSeleccionados=this.getConfiguracionPunVensSeleccionados(false);
			
			if(conSeleccionarFilaTabla) {
				iNumRowsSeleccionados=this.jTableDatosConfiguracionPunVen.getSelectedRows().length;	
			}
			
			if(iNumRowsSeleccionados.equals(2) || configuracionpunvensSeleccionados.size()==2) {
				if(conSeleccionarFilaTabla) {
					intSelectedRows =this.jTableDatosConfiguracionPunVen.getSelectedRows();
					intSelectedRow = intSelectedRows[0];	
									
					//ARCHITECTURE
					if(Constantes.ISUSAEJBLOGICLAYER) {
						configuracionpunvenOrigen =(ConfiguracionPunVen) this.configuracionpunvenLogic.getConfiguracionPunVens().toArray()[this.jTableDatosConfiguracionPunVen.convertRowIndexToModel(intSelectedRow)];
					} else if(Constantes.ISUSAEJBREMOTE || Constantes.ISUSAEJBHOME) {
						configuracionpunvenOrigen =(ConfiguracionPunVen) this.configuracionpunvens.toArray()[this.jTableDatosConfiguracionPunVen.convertRowIndexToModel(intSelectedRow)];
					}
					//ARCHITECTURE
					
					intSelectedRow = intSelectedRows[1];
					
					//ARCHITECTURE
					if(Constantes.ISUSAEJBLOGICLAYER) {
						configuracionpunvenDestino =(ConfiguracionPunVen) this.configuracionpunvenLogic.getConfiguracionPunVens().toArray()[this.jTableDatosConfiguracionPunVen.convertRowIndexToModel(intSelectedRow)];
					} else if(Constantes.ISUSAEJBREMOTE || Constantes.ISUSAEJBHOME) {
						configuracionpunvenDestino =(ConfiguracionPunVen) this.configuracionpunvens.toArray()[this.jTableDatosConfiguracionPunVen.convertRowIndexToModel(intSelectedRow)];
					}
					//ARCHITECTURE
				}
				
				configuracionpunvenOrigen =configuracionpunvensSeleccionados.get(0);
				configuracionpunvenDestino =configuracionpunvensSeleccionados.get(1);
				
				this.setCopiarVariablesObjetosConfiguracionPunVen(configuracionpunvenOrigen,configuracionpunvenDestino,true,false);
				
				configuracionpunvenDestino.setsType("DUPLICADO");
				
				//ARCHITECTURE
				if(Constantes.ISUSAEJBLOGICLAYER) {
					actualizarLista(configuracionpunvenDestino,configuracionpunvenLogic.getConfiguracionPunVens());					
				} else if(Constantes.ISUSAEJBREMOTE||Constantes.ISUSAEJBHOME) {
					actualizarLista(configuracionpunvenDestino,configuracionpunvens);
				}
				//ARCHITECTURE
				
				this.inicializarActualizarBindingTablaConfiguracionPunVen(false);
				
				//this.jTableDatosConfiguracionPunVen.setRowSelectionInterval(this.getIndiceNuevoConfiguracionPunVen(), this.getIndiceNuevoConfiguracionPunVen());
				
				int iLastRow =  this.jTableDatosConfiguracionPunVen.getRowCount () - 1;
				Rectangle rectangle = this.jTableDatosConfiguracionPunVen.getCellRect(iLastRow, 0, true);
				
				this.jTableDatosConfiguracionPunVen.scrollRectToVisible(rectangle);
				
				//FILA TOTALES
				if(this.conTotales) {
					//this.crearFilaTotales();
					
					this.inicializarActualizarBindingTablaConfiguracionPunVen(false);
				}
			} else {
				throw new Exception("DEBEN ESTAR SELECCIONADOS 2 REGISTROS");
			}
		} catch(Exception e) {
			FuncionesSwing.manageException(this, e,logger,ConfiguracionPunVenConstantesFunciones.CLASSNAME);
		
		}  finally {
			this.estaModoCopiar=false;
		}
	}
	
	public void jButtonVerFormConfiguracionPunVenActionPerformed(ActionEvent evt) throws Exception {   
		try {
			
			if(this.jInternalFrameDetalleFormConfiguracionPunVen==null) { //if(!this.conCargarFormDetalle) {
				this.inicializarFormDetalle();
			}
			
			this.jInternalFrameDetalleFormConfiguracionPunVen.setSelected(true);
			
		} catch(Exception e) {
			FuncionesSwing.manageException(this, e,logger,ConfiguracionPunVenConstantesFunciones.CLASSNAME);
		}
	}
	
	public void jButtonMostrarOcultarConfiguracionPunVenActionPerformed(ActionEvent evt) throws Exception {   
		try {
			Boolean isVisible=this.jPanelParametrosReportesConfiguracionPunVen.isVisible();
			
			//BYDAN_BUSQUEDAS
			
			this.jTabbedPaneBusquedasConfiguracionPunVen.setVisible(!isVisible);			
			
			
			this.jPanelParametrosReportesConfiguracionPunVen.setVisible(!isVisible);
			this.jPanelPaginacionConfiguracionPunVen.setVisible(!isVisible);
			this.jPanelAccionesConfiguracionPunVen.setVisible(!isVisible);
							
		} catch(Exception e) {
			FuncionesSwing.manageException(this, e,logger,ConfiguracionPunVenConstantesFunciones.CLASSNAME);
		}
	}
	
	public void jButtonCerrarConfiguracionPunVenActionPerformed(ActionEvent evt) throws Exception {   
		try {
			this.closingInternalFrameConfiguracionPunVen();
			
			//if(this.jInternalFrameParent==null) {
				//this.dispose();
			/*} else {
				this.setVisible(false);
	        	this.setSelected(false);	
			}*/			
		} catch(Exception e) {
			FuncionesSwing.manageException(this, e,logger,ConfiguracionPunVenConstantesFunciones.CLASSNAME);
		}
	}
	
	public void jButtonCerrarReporteDinamicoConfiguracionPunVenActionPerformed(ActionEvent evt) throws Exception {   
		try {
			
			this.cerrarFrameReporteDinamicoConfiguracionPunVen();
			
						
		} catch(Exception e) {
			FuncionesSwing.manageException(this, e,logger,ConfiguracionPunVenConstantesFunciones.CLASSNAME);
		}
	}
	
	public void jButtonCerrarImportacionConfiguracionPunVenActionPerformed(ActionEvent evt) throws Exception {   
		try {
			
			this.cerrarFrameImportacionConfiguracionPunVen();
			
						
		} catch(Exception e) {
			FuncionesSwing.manageException(this, e,logger,ConfiguracionPunVenConstantesFunciones.CLASSNAME);
		}
	}
	
	
	public void jButtonAbrirOrderByConfiguracionPunVenActionPerformed(ActionEvent evt) throws Exception {   
		try {
			
			
			this.abrirInicializarFrameOrderByConfiguracionPunVen();
			
			this.abrirFrameOrderByConfiguracionPunVen();
			
			
		} catch(Exception e) {
			FuncionesSwing.manageException(this, e,logger,ConfiguracionPunVenConstantesFunciones.CLASSNAME);
		}
	}
	
	public void jButtonCerrarOrderByConfiguracionPunVenActionPerformed(ActionEvent evt) throws Exception {   
		try {
			
			this.cerrarFrameOrderByConfiguracionPunVen();
			
						
		} catch(Exception e) {
			FuncionesSwing.manageException(this, e,logger,ConfiguracionPunVenConstantesFunciones.CLASSNAME);
		}
	}
	
	public void abrirFrameDetalleConfiguracionPunVen(Boolean esRelaciones) throws Exception {	    	        
	    try {
			//CAUSA PROBLEMAS, SE ADICIONA EN CONSTRUCTOR, LUEGO SOLO VISIBLE true y false
			//this.jDesktopPane.add(jInternalFrameDetalleFormConfiguracionPunVen);
			
			if(!esRelaciones) {
				if(this.jInternalFrameDetalleFormConfiguracionPunVen.isMaximum()) {
					this.jInternalFrameDetalleFormConfiguracionPunVen.setMaximum(false);
				}								
				
	    		this.jInternalFrameDetalleFormConfiguracionPunVen.setSize(this.jInternalFrameDetalleFormConfiguracionPunVen.iWidthFormulario,this.jInternalFrameDetalleFormConfiguracionPunVen.iHeightFormulario);
	    	} else {
				if(this.iWidthScroll<this.jInternalFrameDetalleFormConfiguracionPunVen.iWidthFormularioMaximo) {
	    			this.jInternalFrameDetalleFormConfiguracionPunVen.setSize(this.iWidthScroll,this.iHeightScroll);
				} else {
					if(!this.jInternalFrameDetalleFormConfiguracionPunVen.isMaximum()) {
						this.jInternalFrameDetalleFormConfiguracionPunVen.setMaximum(true);
					}
				}
				
				if(this.jInternalFrameDetalleFormConfiguracionPunVen.jContentPaneDetalleConfiguracionPunVen.getWidth() > this.getWidth()) {
					this.jInternalFrameDetalleFormConfiguracionPunVen.jTabbedPaneRelacionesConfiguracionPunVen.setMinimumSize(new Dimension(this.jInternalFrameDetalleFormConfiguracionPunVen.jContentPaneDetalleConfiguracionPunVen.getWidth(),ConfiguracionPunVenConstantesFunciones.ALTO_TABPANE_RELACIONES));
					this.jInternalFrameDetalleFormConfiguracionPunVen.jTabbedPaneRelacionesConfiguracionPunVen.setMaximumSize(new Dimension(this.jInternalFrameDetalleFormConfiguracionPunVen.jContentPaneDetalleConfiguracionPunVen.getWidth(),ConfiguracionPunVenConstantesFunciones.ALTO_TABPANE_RELACIONES));
					this.jInternalFrameDetalleFormConfiguracionPunVen.jTabbedPaneRelacionesConfiguracionPunVen.setPreferredSize(new Dimension(this.jInternalFrameDetalleFormConfiguracionPunVen.jContentPaneDetalleConfiguracionPunVen.getWidth(),ConfiguracionPunVenConstantesFunciones.ALTO_TABPANE_RELACIONES));
					
					Dimension dimension=new Dimension(); 
					
					
					
				}
	    	}
			
		
	       	this.jInternalFrameDetalleFormConfiguracionPunVen.setVisible(true);
	        this.jInternalFrameDetalleFormConfiguracionPunVen.setSelected(true);
		
	    } catch (final java.beans.PropertyVetoException e) {
		
			FuncionesSwing.manageException(this, e,logger,ConfiguracionPunVenConstantesFunciones.CLASSNAME);
	    }
	}
	
	
	public void abrirInicializarFrameOrderByConfiguracionPunVen() throws Exception {	    	        
	    try {
			if(this.jInternalFrameOrderByConfiguracionPunVen==null) {
				
				if(!this.conCargarMinimo) {
					this.jInternalFrameOrderByConfiguracionPunVen=new OrderByJInternalFrame(STIPO_TAMANIO_GENERAL,this.jButtonAbrirOrderByConfiguracionPunVen,false,this);
				} else {
					this.jInternalFrameOrderByConfiguracionPunVen=new OrderByJInternalFrame(STIPO_TAMANIO_GENERAL,this.jButtonAbrirOrderByConfiguracionPunVen,true,this);
				}
				
				this.jDesktopPane.add(this.jInternalFrameOrderByConfiguracionPunVen);
				this.jInternalFrameOrderByConfiguracionPunVen.setVisible(false);
				this.jInternalFrameOrderByConfiguracionPunVen.setSelected(false);
				
				this.jInternalFrameOrderByConfiguracionPunVen.getjButtonCerrarOrderBy().addActionListener (new ButtonActionListener(this,"CerrarOrderByConfiguracionPunVen"));
				
				this.inicializarActualizarBindingTablaOrderByConfiguracionPunVen();
			}
		} catch (final Exception e) {
			
		}
	}
	
	
	
	public void abrirInicializarFrameImportacionConfiguracionPunVen() throws Exception {	    	        
	    try {
			if(this.jInternalFrameImportacionConfiguracionPunVen==null) {
				
				this.jInternalFrameImportacionConfiguracionPunVen=new ImportacionJInternalFrame(ConfiguracionPunVenConstantesFunciones.SCLASSWEBTITULO,this);			
				
				MainJFrame.cerrarJInternalFramesExistentes(this.jDesktopPane,this.jInternalFrameImportacionConfiguracionPunVen);							
				
				this.jDesktopPane.add(this.jInternalFrameImportacionConfiguracionPunVen);
				this.jInternalFrameImportacionConfiguracionPunVen.setVisible(false);
				this.jInternalFrameImportacionConfiguracionPunVen.setSelected(false);


				this.jInternalFrameImportacionConfiguracionPunVen.getjButtonCerrarImportacion().addActionListener (new ButtonActionListener(this,"CerrarImportacionConfiguracionPunVen"));
				this.jInternalFrameImportacionConfiguracionPunVen.getjButtonGenerarImportacion().addActionListener (new ButtonActionListener(this,"GenerarImportacionConfiguracionPunVen"));
				this.jInternalFrameImportacionConfiguracionPunVen.getjButtonAbrirImportacion().addActionListener (new ButtonActionListener(this,"AbrirImportacionConfiguracionPunVen"));


			}
		} catch (final Exception e) {
			
		}
	}		
	
	
	
	public void abrirInicializarFrameReporteDinamicoConfiguracionPunVen() throws Exception {	    	        
	    try {
			
			if(this.jInternalFrameReporteDinamicoConfiguracionPunVen==null) {
				this.jInternalFrameReporteDinamicoConfiguracionPunVen=new ReporteDinamicoJInternalFrame(ConfiguracionPunVenConstantesFunciones.SCLASSWEBTITULO,this);	
				
				MainJFrame.cerrarJInternalFramesExistentes(this.jDesktopPane,this.jInternalFrameReporteDinamicoConfiguracionPunVen);	
	
	
				this.jDesktopPane.add(this.jInternalFrameReporteDinamicoConfiguracionPunVen);
				this.jInternalFrameReporteDinamicoConfiguracionPunVen.setVisible(false);
				this.jInternalFrameReporteDinamicoConfiguracionPunVen.setSelected(false);
	
	
	
				this.jInternalFrameReporteDinamicoConfiguracionPunVen.getjButtonCerrarReporteDinamico().addActionListener (new ButtonActionListener(this,"CerrarReporteDinamicoConfiguracionPunVen"));
				this.jInternalFrameReporteDinamicoConfiguracionPunVen.getjButtonGenerarReporteDinamico().addActionListener (new ButtonActionListener(this,"GenerarReporteDinamicoConfiguracionPunVen"));
				this.jInternalFrameReporteDinamicoConfiguracionPunVen.getjButtonGenerarExcelReporteDinamico().addActionListener (new ButtonActionListener(this,"GenerarExcelReporteDinamicoConfiguracionPunVen"));
	
				this.inicializarActualizarBindingtiposArchivosReportesDinamicoAccionesManualConfiguracionPunVen();
			}

		} catch (final Exception e) {
			
		}
	}	
	
	
	
		
					
	public void cerrarFrameDetalleConfiguracionPunVen() throws Exception {	    	        
	    try {
			//this.jDesktopPane.add(jInternalFrameDetalleFormConfiguracionPunVen);
			
	       	this.jInternalFrameDetalleFormConfiguracionPunVen.setVisible(false);
	        this.jInternalFrameDetalleFormConfiguracionPunVen.setSelected(false);
			
			//this.jInternalFrameDetalleFormConfiguracionPunVen.dispose();
			//this.jInternalFrameDetalleFormConfiguracionPunVen=null;
			
	    } catch (final java.beans.PropertyVetoException e) {
		
			FuncionesSwing.manageException(this, e,logger,ConfiguracionPunVenConstantesFunciones.CLASSNAME);
	    }
	}
	
	
	public void abrirFrameReporteDinamicoConfiguracionPunVen() throws Exception {	    	        
	    try {
			
			this.jInternalFrameReporteDinamicoConfiguracionPunVen.setVisible(true);
	        this.jInternalFrameReporteDinamicoConfiguracionPunVen.setSelected(true);			
			
	    } catch (final java.beans.PropertyVetoException e) {
		
			FuncionesSwing.manageException(this, e,logger,ConfiguracionPunVenConstantesFunciones.CLASSNAME);
	    }		
	}
	
	
	
	public void abrirFrameImportacionConfiguracionPunVen() throws Exception {	    	        		
	    try {			
			this.jInternalFrameImportacionConfiguracionPunVen.setVisible(true);
	        this.jInternalFrameImportacionConfiguracionPunVen.setSelected(true);			
			
	    } catch (final java.beans.PropertyVetoException e) {
		
			FuncionesSwing.manageException(this, e,logger,ConfiguracionPunVenConstantesFunciones.CLASSNAME);
	    }		
	}	
	
	
	
	
	
	public void abrirFrameOrderByConfiguracionPunVen() throws Exception {	    	        		
	    try {
			this.jInternalFrameOrderByConfiguracionPunVen.setVisible(true);
	        this.jInternalFrameOrderByConfiguracionPunVen.setSelected(true);			
			
	    } catch (final java.beans.PropertyVetoException e) {
		
			FuncionesSwing.manageException(this, e,logger,ConfiguracionPunVenConstantesFunciones.CLASSNAME);
	    }		
	}
	
	
	
	public void cerrarFrameOrderByConfiguracionPunVen() throws Exception {	    	        		
	    try {			
			this.jInternalFrameOrderByConfiguracionPunVen.setVisible(false);
	        this.jInternalFrameOrderByConfiguracionPunVen.setSelected(false);			
		
	    } catch (final java.beans.PropertyVetoException e) {
		
			FuncionesSwing.manageException(this, e,logger,ConfiguracionPunVenConstantesFunciones.CLASSNAME);
	    }		
	}
	
	
	
	public void cerrarFrameReporteDinamicoConfiguracionPunVen() throws Exception {			
	    try {
			this.jInternalFrameReporteDinamicoConfiguracionPunVen.setVisible(false);
	        this.jInternalFrameReporteDinamicoConfiguracionPunVen.setSelected(false);			
		
	    } catch (final java.beans.PropertyVetoException e) {
		
			FuncionesSwing.manageException(this, e,logger,ConfiguracionPunVenConstantesFunciones.CLASSNAME);
	    }		
	}
	
	
	
	public void cerrarFrameImportacionConfiguracionPunVen() throws Exception {	    	        		
	    try {
			this.jInternalFrameImportacionConfiguracionPunVen.setVisible(false);
	        this.jInternalFrameImportacionConfiguracionPunVen.setSelected(false);
		
	    } catch (final java.beans.PropertyVetoException e) {
		
			FuncionesSwing.manageException(this, e,logger,ConfiguracionPunVenConstantesFunciones.CLASSNAME);
	    }		
	}
	
	
	

				public void abrirFrameTreeCuentaContableEfectivo(String sTipoProceso) { //throws Exception
					try {
						//CAUSA PROBLEMAS, SE ADICIONA EN CONSTRUCTOR, LUEGO SOLO VISIBLE true y false
						//this.jDesktopPane.add(jInternalFrameTreeCuentaContable);
						CuentaContableBeanSwingJInternalFrame cuentacontableBeanSwingJInternalFrame=new CuentaContableBeanSwingJInternalFrame(true,true,this.jDesktopPane,this.usuarioActual,this.resumenUsuarioActual,this.moduloActual,this.opcionActual,this.parametroGeneralSg,this.parametroGeneralUsuario,PaginaTipo.BUSQUEDA,false,false,false,true);
						cuentacontableBeanSwingJInternalFrame.setJInternalFrameParent(this);
						cuentacontableBeanSwingJInternalFrame.jInternalFrameTreeCuentaContable.setsTipoProceso(sTipoProceso);

						if(sTipoProceso.equals("BUSQUEDA_FK")) {
							cuentacontableBeanSwingJInternalFrame.jInternalFrameTreeCuentaContable.sTipoBusqueda="CuentaContableEfectivo";
						}

						cuentacontableBeanSwingJInternalFrame.getTodosCuentaContableArbol();
						cuentacontableBeanSwingJInternalFrame.jInternalFrameTreeCuentaContable.setCuentaContables(cuentacontableBeanSwingJInternalFrame.cuentacontablesArbol);
						cuentacontableBeanSwingJInternalFrame.jInternalFrameTreeCuentaContable.CargarTreeCuentaContable();
						cuentacontableBeanSwingJInternalFrame.jInternalFrameTreeCuentaContable.setVisible(true);
						cuentacontableBeanSwingJInternalFrame.jInternalFrameTreeCuentaContable.setSelected(true);

						//SE CAMBIA PARENT ORIGINAL PARA QUE RETORNE EN ESTE FORMULARIO
						cuentacontableBeanSwingJInternalFrame.jInternalFrameTreeCuentaContable.jInternalFrameParent=this;
						TitledBorder titledBorderConfiguracionPunVen=(TitledBorder)this.jScrollPanelDatosConfiguracionPunVen.getBorder();
						TitledBorder titledBorderCuentaContableEfectivo=(TitledBorder)cuentacontableBeanSwingJInternalFrame.jScrollPanelDatosCuentaContable.getBorder();

						titledBorderCuentaContableEfectivo.setTitle(titledBorderConfiguracionPunVen.getTitle() + " -> Cuenta Contable");


						if(!Constantes.CON_VARIAS_VENTANAS) {
							MainJFrame.cerrarJInternalFramesExistentes(this.jDesktopPane,cuentacontableBeanSwingJInternalFrame);
						}
						this.jDesktopPane.add(cuentacontableBeanSwingJInternalFrame);

					} catch (Exception e) {
						e.getStackTrace();
						//Funciones<%=getFrameworkDomain()%>.manageException(this, e,logger,<%=GetNombreClaseC(TablaBase.ToString())%>ConstantesFunciones.CLASSNAME);
					}
				}

				public void cerrarFrameTreeCuentaContableEfectivo(CuentaContableBeanSwingJInternalFrame jInternalFrameTreeCuentaContable) throws Exception {
					try {
						//jDesktopPane.add(jInternalFrameTreeCuentaContable);
						jInternalFrameTreeCuentaContable.setVisible(false);
						jInternalFrameTreeCuentaContable.setSelected(false);
						//jInternalFrameTreeCuentaContable.dispose();
						//jInternalFrameTreeCuentaContable=null;
					} catch (final java.beans.PropertyVetoException e) {
						FuncionesSwing.manageException(this, e,logger);
					}
				}

				public void abrirFrameTreeCuentaContableIce(String sTipoProceso) { //throws Exception
					try {
						//CAUSA PROBLEMAS, SE ADICIONA EN CONSTRUCTOR, LUEGO SOLO VISIBLE true y false
						//this.jDesktopPane.add(jInternalFrameTreeCuentaContable);
						CuentaContableBeanSwingJInternalFrame cuentacontableBeanSwingJInternalFrame=new CuentaContableBeanSwingJInternalFrame(true,true,this.jDesktopPane,this.usuarioActual,this.resumenUsuarioActual,this.moduloActual,this.opcionActual,this.parametroGeneralSg,this.parametroGeneralUsuario,PaginaTipo.BUSQUEDA,false,false,false,true);
						cuentacontableBeanSwingJInternalFrame.setJInternalFrameParent(this);
						cuentacontableBeanSwingJInternalFrame.jInternalFrameTreeCuentaContable.setsTipoProceso(sTipoProceso);

						if(sTipoProceso.equals("BUSQUEDA_FK")) {
							cuentacontableBeanSwingJInternalFrame.jInternalFrameTreeCuentaContable.sTipoBusqueda="CuentaContableIce";
						}

						cuentacontableBeanSwingJInternalFrame.getTodosCuentaContableArbol();
						cuentacontableBeanSwingJInternalFrame.jInternalFrameTreeCuentaContable.setCuentaContables(cuentacontableBeanSwingJInternalFrame.cuentacontablesArbol);
						cuentacontableBeanSwingJInternalFrame.jInternalFrameTreeCuentaContable.CargarTreeCuentaContable();
						cuentacontableBeanSwingJInternalFrame.jInternalFrameTreeCuentaContable.setVisible(true);
						cuentacontableBeanSwingJInternalFrame.jInternalFrameTreeCuentaContable.setSelected(true);

						//SE CAMBIA PARENT ORIGINAL PARA QUE RETORNE EN ESTE FORMULARIO
						cuentacontableBeanSwingJInternalFrame.jInternalFrameTreeCuentaContable.jInternalFrameParent=this;
						TitledBorder titledBorderConfiguracionPunVen=(TitledBorder)this.jScrollPanelDatosConfiguracionPunVen.getBorder();
						TitledBorder titledBorderCuentaContableIce=(TitledBorder)cuentacontableBeanSwingJInternalFrame.jScrollPanelDatosCuentaContable.getBorder();

						titledBorderCuentaContableIce.setTitle(titledBorderConfiguracionPunVen.getTitle() + " -> Cuenta Contable");


						if(!Constantes.CON_VARIAS_VENTANAS) {
							MainJFrame.cerrarJInternalFramesExistentes(this.jDesktopPane,cuentacontableBeanSwingJInternalFrame);
						}
						this.jDesktopPane.add(cuentacontableBeanSwingJInternalFrame);

					} catch (Exception e) {
						e.getStackTrace();
						//Funciones<%=getFrameworkDomain()%>.manageException(this, e,logger,<%=GetNombreClaseC(TablaBase.ToString())%>ConstantesFunciones.CLASSNAME);
					}
				}

				public void cerrarFrameTreeCuentaContableIce(CuentaContableBeanSwingJInternalFrame jInternalFrameTreeCuentaContable) throws Exception {
					try {
						//jDesktopPane.add(jInternalFrameTreeCuentaContable);
						jInternalFrameTreeCuentaContable.setVisible(false);
						jInternalFrameTreeCuentaContable.setSelected(false);
						//jInternalFrameTreeCuentaContable.dispose();
						//jInternalFrameTreeCuentaContable=null;
					} catch (final java.beans.PropertyVetoException e) {
						FuncionesSwing.manageException(this, e,logger);
					}
				}

				public void abrirFrameTreeCuentaContableOtros(String sTipoProceso) { //throws Exception
					try {
						//CAUSA PROBLEMAS, SE ADICIONA EN CONSTRUCTOR, LUEGO SOLO VISIBLE true y false
						//this.jDesktopPane.add(jInternalFrameTreeCuentaContable);
						CuentaContableBeanSwingJInternalFrame cuentacontableBeanSwingJInternalFrame=new CuentaContableBeanSwingJInternalFrame(true,true,this.jDesktopPane,this.usuarioActual,this.resumenUsuarioActual,this.moduloActual,this.opcionActual,this.parametroGeneralSg,this.parametroGeneralUsuario,PaginaTipo.BUSQUEDA,false,false,false,true);
						cuentacontableBeanSwingJInternalFrame.setJInternalFrameParent(this);
						cuentacontableBeanSwingJInternalFrame.jInternalFrameTreeCuentaContable.setsTipoProceso(sTipoProceso);

						if(sTipoProceso.equals("BUSQUEDA_FK")) {
							cuentacontableBeanSwingJInternalFrame.jInternalFrameTreeCuentaContable.sTipoBusqueda="CuentaContableOtros";
						}

						cuentacontableBeanSwingJInternalFrame.getTodosCuentaContableArbol();
						cuentacontableBeanSwingJInternalFrame.jInternalFrameTreeCuentaContable.setCuentaContables(cuentacontableBeanSwingJInternalFrame.cuentacontablesArbol);
						cuentacontableBeanSwingJInternalFrame.jInternalFrameTreeCuentaContable.CargarTreeCuentaContable();
						cuentacontableBeanSwingJInternalFrame.jInternalFrameTreeCuentaContable.setVisible(true);
						cuentacontableBeanSwingJInternalFrame.jInternalFrameTreeCuentaContable.setSelected(true);

						//SE CAMBIA PARENT ORIGINAL PARA QUE RETORNE EN ESTE FORMULARIO
						cuentacontableBeanSwingJInternalFrame.jInternalFrameTreeCuentaContable.jInternalFrameParent=this;
						TitledBorder titledBorderConfiguracionPunVen=(TitledBorder)this.jScrollPanelDatosConfiguracionPunVen.getBorder();
						TitledBorder titledBorderCuentaContableOtros=(TitledBorder)cuentacontableBeanSwingJInternalFrame.jScrollPanelDatosCuentaContable.getBorder();

						titledBorderCuentaContableOtros.setTitle(titledBorderConfiguracionPunVen.getTitle() + " -> Cuenta Contable");


						if(!Constantes.CON_VARIAS_VENTANAS) {
							MainJFrame.cerrarJInternalFramesExistentes(this.jDesktopPane,cuentacontableBeanSwingJInternalFrame);
						}
						this.jDesktopPane.add(cuentacontableBeanSwingJInternalFrame);

					} catch (Exception e) {
						e.getStackTrace();
						//Funciones<%=getFrameworkDomain()%>.manageException(this, e,logger,<%=GetNombreClaseC(TablaBase.ToString())%>ConstantesFunciones.CLASSNAME);
					}
				}

				public void cerrarFrameTreeCuentaContableOtros(CuentaContableBeanSwingJInternalFrame jInternalFrameTreeCuentaContable) throws Exception {
					try {
						//jDesktopPane.add(jInternalFrameTreeCuentaContable);
						jInternalFrameTreeCuentaContable.setVisible(false);
						jInternalFrameTreeCuentaContable.setSelected(false);
						//jInternalFrameTreeCuentaContable.dispose();
						//jInternalFrameTreeCuentaContable=null;
					} catch (final java.beans.PropertyVetoException e) {
						FuncionesSwing.manageException(this, e,logger);
					}
				}
	
	public void jButtonModificarConfiguracionPunVenActionPerformed(ActionEvent evt) throws Exception {   
		try {
			this.modificarConfiguracionPunVen(evt,-1,false);
		
		} catch(Exception e) {
			FuncionesSwing.manageException(this, e,logger,ConfiguracionPunVenConstantesFunciones.CLASSNAME);
		}
	}
	
	public void modificarConfiguracionPunVen(ActionEvent evt,int rowIndex,Boolean esRelaciones) throws Exception {   
		try {
			int intSelectedRow = 0;	
			
			if(rowIndex>=0) {
				intSelectedRow=rowIndex;
			} else {
				intSelectedRow = this.jTableDatosConfiguracionPunVen.getSelectedRow();
			}
			
			this.habilitarDeshabilitarControlesConfiguracionPunVen(true);
			//this.isEsNuevoConfiguracionPunVen=false;
			
			//ARCHITECTURE
			if(Constantes.ISUSAEJBLOGICLAYER) {
				this.configuracionpunven =(ConfiguracionPunVen) this.configuracionpunvenLogic.getConfiguracionPunVens().toArray()[this.jTableDatosConfiguracionPunVen.convertRowIndexToModel(intSelectedRow)];
			} else if(Constantes.ISUSAEJBREMOTE || Constantes.ISUSAEJBHOME ) {
				this.configuracionpunven =(ConfiguracionPunVen) this.configuracionpunvens.toArray()[this.jTableDatosConfiguracionPunVen.convertRowIndexToModel(intSelectedRow)];
			}
			//ARCHITECTURE
			
			this.actualizarEstadoCeldasBotonesConfiguracionPunVen("ae", isGuardarCambiosEnLote, isEsMantenimientoRelacionado);
			
			//NO FUNCIONA BINDINGS
			this.inicializarActualizarBindingBotonesConfiguracionPunVen(false) ;
			
			if(configuracionpunvenSessionBean.getConGuardarRelaciones()) {
			
			}
			
			if(ConfiguracionPunVenJInternalFrame.CON_DATOS_FRAME) {
				this.abrirFrameDetalleConfiguracionPunVen(esRelaciones);
			}
			
			//SI ES MANUAL
			//this.inicializarActualizarBindingBotonesManualConfiguracionPunVen(false) ;
		
		} catch(Exception e) {
			FuncionesSwing.manageException(this, e,logger,ConfiguracionPunVenConstantesFunciones.CLASSNAME);
		}
	}
	
	public void seleccionarFilaTablaConfiguracionPunVenActual() { 	  
		try {
			//SELECCIONA FILA A OBJETO ACTUAL
			Integer intSelectedRow = this.jTableDatosConfiguracionPunVen.getSelectedRow();
					
			if(intSelectedRow!=null && intSelectedRow>-1) {
				//ARCHITECTURE
				if(Constantes.ISUSAEJBLOGICLAYER) {
					this.configuracionpunven =(ConfiguracionPunVen) this.configuracionpunvenLogic.getConfiguracionPunVens().toArray()[this.jTableDatosConfiguracionPunVen.convertRowIndexToModel(intSelectedRow)];
				} else if(Constantes.ISUSAEJBREMOTE || Constantes.ISUSAEJBHOME ) {
					this.configuracionpunven =(ConfiguracionPunVen) this.configuracionpunvens.toArray()[this.jTableDatosConfiguracionPunVen.convertRowIndexToModel(intSelectedRow)];
				}
				//ARCHITECTURE
				
				//System.out.println(this.banco);
			}
			
		} catch(Exception e) {
  			FuncionesSwing.manageException2(this, e,logger,ConfiguracionPunVenConstantesFunciones.CLASSNAME);
  		}
    }	
	
	public void seleccionarConfiguracionPunVen(ActionEvent evt,int rowIndex) throws Exception {   
		try {
			
			if(this.jInternalFrameDetalleFormConfiguracionPunVen==null) { //if(!this.conCargarFormDetalle) {
				this.inicializarFormDetalle();
			}
			
			int intSelectedRow = 0;	
			
			if(rowIndex>=0) {
				intSelectedRow=rowIndex;
			} else {
				intSelectedRow = this.jTableDatosConfiguracionPunVen.getSelectedRow();
			}
			
			//this.habilitarDeshabilitarControlesConfiguracionPunVen(true);
			//this.isEsNuevoConfiguracionPunVen=false;
			
			//ARCHITECTURE
			if(Constantes.ISUSAEJBLOGICLAYER) {
				this.configuracionpunven =(ConfiguracionPunVen) this.configuracionpunvenLogic.getConfiguracionPunVens().toArray()[this.jTableDatosConfiguracionPunVen.convertRowIndexToModel(intSelectedRow)];
			} else if(Constantes.ISUSAEJBREMOTE || Constantes.ISUSAEJBHOME ) {
				this.configuracionpunven =(ConfiguracionPunVen) this.configuracionpunvens.toArray()[this.jTableDatosConfiguracionPunVen.convertRowIndexToModel(intSelectedRow)];
			}
			//ARCHITECTURE
			
			this.jInternalFrameParent.setIdCombosCodigoDesdeBusquedaForeignKey(this.configuracionpunven.getId(),this.sTipoBusqueda);
			
			this.dispose();
			
			//this.actualizarEstadoCeldasBotonesConfiguracionPunVen("ae", isGuardarCambiosEnLote, isEsMantenimientoRelacionado);
			
			//NO FUNCIONA BINDINGS
			/*
			this.inicializarActualizarBindingBotonesConfiguracionPunVen(false) ;
			
			if(ConfiguracionPunVenJInternalFrame.CON_DATOS_FRAME) {
				this.abrirFrameDetalleConfiguracionPunVen(esRelaciones);
			}
			*/
			
			//SI ES MANUAL
			//this.inicializarActualizarBindingBotonesManualConfiguracionPunVen(false) ;
		
		} catch(Exception e) {
			FuncionesSwing.manageException(this, e,logger,ConfiguracionPunVenConstantesFunciones.CLASSNAME);
		}
	}		
	
	public void setIdCombosCodigoDesdeBusquedaForeignKey(Long id,String sType)throws Exception{
		
		try {
			
			if(sType.equals("ClienteConsumidorFinal")) {
				if(!this.configuracionpunvenConstantesFunciones.cargarid_cliente_consumidor_finalConfiguracionPunVen) {
					this.cargarCombosClienteConsumidorFinalsForeignKeyLista(" where id="+id);
					//this.inicializarActualizarBindingConfiguracionPunVen(false,false);
					this.cargarCombosFrameClienteConsumidorFinalsForeignKey("Todos");
				}

				this.setCombosCodigoDesdeBusquedaid_cliente_consumidor_final (id);

				this.recargarComboTablaClienteConsumidorFinal(this.clienteconsumidorfinalsForeignKey);

			}
		} catch(Exception e) {
			throw e;
		}
	}
	
			
	
	public void recargarComboTablaBodega(List<Bodega> bodegasForeignKey)throws Exception{
		TableColumn tableColumnBodega=this.jTableDatosConfiguracionPunVen.getColumnModel().getColumn(Funciones2.getColumnIndexByName(this.jTableDatosConfiguracionPunVen,ConfiguracionPunVenConstantesFunciones.LABEL_IDBODEGA));
		TableCellEditor tableCellEditorBodega =tableColumnBodega.getCellEditor();

		BodegaTableCell bodegaTableCellFk=(BodegaTableCell)tableCellEditorBodega;

		if(bodegaTableCellFk!=null) {
			bodegaTableCellFk.setbodegasForeignKey(bodegasForeignKey);
		}


		//SIEMPRE rowActual<0 , NO USADO POR EL MOMENTO
		//COMBO DE FILA ACTUAL SE ACTUALIZA, LOS DEMAS USAN EL ANTERIOR COMBO
		//int intSelectedRow = -1;
		//intSelectedRow=this.jTableDatosConfiguracionPunVen.getSelectedRow();

		//if(intSelectedRow<=0) {
			//bodegaTableCellFk.setRowActual(intSelectedRow);
			//bodegaTableCellFk.setbodegasForeignKeyActual(bodegasForeignKey);
		//}


		if(bodegaTableCellFk!=null) {
			bodegaTableCellFk.RecargarBodegasForeignKey();
			//ACTUALIZA COMBOS DE TABLA-FIN
		}

	}	
	
	
	public void recargarComboTablaCuentaContableEfectivo(List<CuentaContable> cuentacontableefectivosForeignKey)throws Exception{
		TableColumn tableColumnCuentaContableEfectivo=this.jTableDatosConfiguracionPunVen.getColumnModel().getColumn(Funciones2.getColumnIndexByName(this.jTableDatosConfiguracionPunVen,ConfiguracionPunVenConstantesFunciones.LABEL_IDCUENTACONTABLEEFECTIVO));
		TableCellEditor tableCellEditorCuentaContableEfectivo =tableColumnCuentaContableEfectivo.getCellEditor();

		CuentaContableTableCell cuentacontableTableCellFk=(CuentaContableTableCell)tableCellEditorCuentaContableEfectivo;

		if(cuentacontableTableCellFk!=null) {
			cuentacontableTableCellFk.setcuentacontablesForeignKey(cuentacontableefectivosForeignKey);
		}


		//SIEMPRE rowActual<0 , NO USADO POR EL MOMENTO
		//COMBO DE FILA ACTUAL SE ACTUALIZA, LOS DEMAS USAN EL ANTERIOR COMBO
		//int intSelectedRow = -1;
		//intSelectedRow=this.jTableDatosConfiguracionPunVen.getSelectedRow();

		//if(intSelectedRow<=0) {
			//cuentacontableTableCellFk.setRowActual(intSelectedRow);
			//cuentacontableTableCellFk.setcuentacontablesForeignKeyActual(cuentacontableefectivosForeignKey);
		//}


		if(cuentacontableTableCellFk!=null) {
			cuentacontableTableCellFk.RecargarCuentaContablesForeignKey();
			//ACTUALIZA COMBOS DE TABLA-FIN
		}

	}	
	
	
	public void recargarComboTablaCuentaContableIce(List<CuentaContable> cuentacontableicesForeignKey)throws Exception{
		TableColumn tableColumnCuentaContableIce=this.jTableDatosConfiguracionPunVen.getColumnModel().getColumn(Funciones2.getColumnIndexByName(this.jTableDatosConfiguracionPunVen,ConfiguracionPunVenConstantesFunciones.LABEL_IDCUENTACONTABLEICE));
		TableCellEditor tableCellEditorCuentaContableIce =tableColumnCuentaContableIce.getCellEditor();

		CuentaContableTableCell cuentacontableTableCellFk=(CuentaContableTableCell)tableCellEditorCuentaContableIce;

		if(cuentacontableTableCellFk!=null) {
			cuentacontableTableCellFk.setcuentacontablesForeignKey(cuentacontableicesForeignKey);
		}


		//SIEMPRE rowActual<0 , NO USADO POR EL MOMENTO
		//COMBO DE FILA ACTUAL SE ACTUALIZA, LOS DEMAS USAN EL ANTERIOR COMBO
		//int intSelectedRow = -1;
		//intSelectedRow=this.jTableDatosConfiguracionPunVen.getSelectedRow();

		//if(intSelectedRow<=0) {
			//cuentacontableTableCellFk.setRowActual(intSelectedRow);
			//cuentacontableTableCellFk.setcuentacontablesForeignKeyActual(cuentacontableicesForeignKey);
		//}


		if(cuentacontableTableCellFk!=null) {
			cuentacontableTableCellFk.RecargarCuentaContablesForeignKey();
			//ACTUALIZA COMBOS DE TABLA-FIN
		}

	}	
	
	
	public void recargarComboTablaCuentaContableOtros(List<CuentaContable> cuentacontableotrossForeignKey)throws Exception{
		TableColumn tableColumnCuentaContableOtros=this.jTableDatosConfiguracionPunVen.getColumnModel().getColumn(Funciones2.getColumnIndexByName(this.jTableDatosConfiguracionPunVen,ConfiguracionPunVenConstantesFunciones.LABEL_IDCUENTACONTABLEOTROS));
		TableCellEditor tableCellEditorCuentaContableOtros =tableColumnCuentaContableOtros.getCellEditor();

		CuentaContableTableCell cuentacontableTableCellFk=(CuentaContableTableCell)tableCellEditorCuentaContableOtros;

		if(cuentacontableTableCellFk!=null) {
			cuentacontableTableCellFk.setcuentacontablesForeignKey(cuentacontableotrossForeignKey);
		}


		//SIEMPRE rowActual<0 , NO USADO POR EL MOMENTO
		//COMBO DE FILA ACTUAL SE ACTUALIZA, LOS DEMAS USAN EL ANTERIOR COMBO
		//int intSelectedRow = -1;
		//intSelectedRow=this.jTableDatosConfiguracionPunVen.getSelectedRow();

		//if(intSelectedRow<=0) {
			//cuentacontableTableCellFk.setRowActual(intSelectedRow);
			//cuentacontableTableCellFk.setcuentacontablesForeignKeyActual(cuentacontableotrossForeignKey);
		//}


		if(cuentacontableTableCellFk!=null) {
			cuentacontableTableCellFk.RecargarCuentaContablesForeignKey();
			//ACTUALIZA COMBOS DE TABLA-FIN
		}

	}	
	
	
	public void recargarComboTablaClienteConsumidorFinal(List<Cliente> clienteconsumidorfinalsForeignKey)throws Exception{
		TableColumn tableColumnClienteConsumidorFinal=this.jTableDatosConfiguracionPunVen.getColumnModel().getColumn(Funciones2.getColumnIndexByName(this.jTableDatosConfiguracionPunVen,ConfiguracionPunVenConstantesFunciones.LABEL_IDCLIENTECONSUMIDORFINAL));
		TableCellEditor tableCellEditorClienteConsumidorFinal =tableColumnClienteConsumidorFinal.getCellEditor();

		ClienteTableCell clienteTableCellFk=(ClienteTableCell)tableCellEditorClienteConsumidorFinal;

		if(clienteTableCellFk!=null) {
			clienteTableCellFk.setclientesForeignKey(clienteconsumidorfinalsForeignKey);
		}


		//SIEMPRE rowActual<0 , NO USADO POR EL MOMENTO
		//COMBO DE FILA ACTUAL SE ACTUALIZA, LOS DEMAS USAN EL ANTERIOR COMBO
		//int intSelectedRow = -1;
		//intSelectedRow=this.jTableDatosConfiguracionPunVen.getSelectedRow();

		//if(intSelectedRow<=0) {
			//clienteTableCellFk.setRowActual(intSelectedRow);
			//clienteTableCellFk.setclientesForeignKeyActual(clienteconsumidorfinalsForeignKey);
		//}


		if(clienteTableCellFk!=null) {
			clienteTableCellFk.RecargarClientesForeignKey();
			//ACTUALIZA COMBOS DE TABLA-FIN
		}

	}	
	
	
	public void recargarComboTablaTipoDocumentoFactura(List<TipoDocumento> tipodocumentofacturasForeignKey)throws Exception{
		TableColumn tableColumnTipoDocumentoFactura=this.jTableDatosConfiguracionPunVen.getColumnModel().getColumn(Funciones2.getColumnIndexByName(this.jTableDatosConfiguracionPunVen,ConfiguracionPunVenConstantesFunciones.LABEL_IDTIPODOCUMENTOFACTURA));
		TableCellEditor tableCellEditorTipoDocumentoFactura =tableColumnTipoDocumentoFactura.getCellEditor();

		TipoDocumentoTableCell tipodocumentoTableCellFk=(TipoDocumentoTableCell)tableCellEditorTipoDocumentoFactura;

		if(tipodocumentoTableCellFk!=null) {
			tipodocumentoTableCellFk.settipodocumentosForeignKey(tipodocumentofacturasForeignKey);
		}


		//SIEMPRE rowActual<0 , NO USADO POR EL MOMENTO
		//COMBO DE FILA ACTUAL SE ACTUALIZA, LOS DEMAS USAN EL ANTERIOR COMBO
		//int intSelectedRow = -1;
		//intSelectedRow=this.jTableDatosConfiguracionPunVen.getSelectedRow();

		//if(intSelectedRow<=0) {
			//tipodocumentoTableCellFk.setRowActual(intSelectedRow);
			//tipodocumentoTableCellFk.settipodocumentosForeignKeyActual(tipodocumentofacturasForeignKey);
		//}


		if(tipodocumentoTableCellFk!=null) {
			tipodocumentoTableCellFk.RecargarTipoDocumentosForeignKey();
			//ACTUALIZA COMBOS DE TABLA-FIN
		}

	}	
	
	
	public void recargarComboTablaTipoDocumentoNotaVenta(List<TipoDocumento> tipodocumentonotaventasForeignKey)throws Exception{
		TableColumn tableColumnTipoDocumentoNotaVenta=this.jTableDatosConfiguracionPunVen.getColumnModel().getColumn(Funciones2.getColumnIndexByName(this.jTableDatosConfiguracionPunVen,ConfiguracionPunVenConstantesFunciones.LABEL_IDTIPODOCUMENTONOTAVENTA));
		TableCellEditor tableCellEditorTipoDocumentoNotaVenta =tableColumnTipoDocumentoNotaVenta.getCellEditor();

		TipoDocumentoTableCell tipodocumentoTableCellFk=(TipoDocumentoTableCell)tableCellEditorTipoDocumentoNotaVenta;

		if(tipodocumentoTableCellFk!=null) {
			tipodocumentoTableCellFk.settipodocumentosForeignKey(tipodocumentonotaventasForeignKey);
		}


		//SIEMPRE rowActual<0 , NO USADO POR EL MOMENTO
		//COMBO DE FILA ACTUAL SE ACTUALIZA, LOS DEMAS USAN EL ANTERIOR COMBO
		//int intSelectedRow = -1;
		//intSelectedRow=this.jTableDatosConfiguracionPunVen.getSelectedRow();

		//if(intSelectedRow<=0) {
			//tipodocumentoTableCellFk.setRowActual(intSelectedRow);
			//tipodocumentoTableCellFk.settipodocumentosForeignKeyActual(tipodocumentonotaventasForeignKey);
		//}


		if(tipodocumentoTableCellFk!=null) {
			tipodocumentoTableCellFk.RecargarTipoDocumentosForeignKey();
			//ACTUALIZA COMBOS DE TABLA-FIN
		}

	}	
	
	
	public void recargarComboTablaTipoDocumentoNotaCredito(List<TipoDocumento> tipodocumentonotacreditosForeignKey)throws Exception{
		TableColumn tableColumnTipoDocumentoNotaCredito=this.jTableDatosConfiguracionPunVen.getColumnModel().getColumn(Funciones2.getColumnIndexByName(this.jTableDatosConfiguracionPunVen,ConfiguracionPunVenConstantesFunciones.LABEL_IDTIPODOCUMENTONOTACREDITO));
		TableCellEditor tableCellEditorTipoDocumentoNotaCredito =tableColumnTipoDocumentoNotaCredito.getCellEditor();

		TipoDocumentoTableCell tipodocumentoTableCellFk=(TipoDocumentoTableCell)tableCellEditorTipoDocumentoNotaCredito;

		if(tipodocumentoTableCellFk!=null) {
			tipodocumentoTableCellFk.settipodocumentosForeignKey(tipodocumentonotacreditosForeignKey);
		}


		//SIEMPRE rowActual<0 , NO USADO POR EL MOMENTO
		//COMBO DE FILA ACTUAL SE ACTUALIZA, LOS DEMAS USAN EL ANTERIOR COMBO
		//int intSelectedRow = -1;
		//intSelectedRow=this.jTableDatosConfiguracionPunVen.getSelectedRow();

		//if(intSelectedRow<=0) {
			//tipodocumentoTableCellFk.setRowActual(intSelectedRow);
			//tipodocumentoTableCellFk.settipodocumentosForeignKeyActual(tipodocumentonotacreditosForeignKey);
		//}


		if(tipodocumentoTableCellFk!=null) {
			tipodocumentoTableCellFk.RecargarTipoDocumentosForeignKey();
			//ACTUALIZA COMBOS DE TABLA-FIN
		}

	}	
	
	
	public void recargarComboTablaTipoDocumentoTarjetaCredito(List<TipoDocumento> tipodocumentotarjetacreditosForeignKey)throws Exception{
		TableColumn tableColumnTipoDocumentoTarjetaCredito=this.jTableDatosConfiguracionPunVen.getColumnModel().getColumn(Funciones2.getColumnIndexByName(this.jTableDatosConfiguracionPunVen,ConfiguracionPunVenConstantesFunciones.LABEL_IDTIPODOCUMENTOTARJETACREDITO));
		TableCellEditor tableCellEditorTipoDocumentoTarjetaCredito =tableColumnTipoDocumentoTarjetaCredito.getCellEditor();

		TipoDocumentoTableCell tipodocumentoTableCellFk=(TipoDocumentoTableCell)tableCellEditorTipoDocumentoTarjetaCredito;

		if(tipodocumentoTableCellFk!=null) {
			tipodocumentoTableCellFk.settipodocumentosForeignKey(tipodocumentotarjetacreditosForeignKey);
		}


		//SIEMPRE rowActual<0 , NO USADO POR EL MOMENTO
		//COMBO DE FILA ACTUAL SE ACTUALIZA, LOS DEMAS USAN EL ANTERIOR COMBO
		//int intSelectedRow = -1;
		//intSelectedRow=this.jTableDatosConfiguracionPunVen.getSelectedRow();

		//if(intSelectedRow<=0) {
			//tipodocumentoTableCellFk.setRowActual(intSelectedRow);
			//tipodocumentoTableCellFk.settipodocumentosForeignKeyActual(tipodocumentotarjetacreditosForeignKey);
		//}


		if(tipodocumentoTableCellFk!=null) {
			tipodocumentoTableCellFk.RecargarTipoDocumentosForeignKey();
			//ACTUALIZA COMBOS DE TABLA-FIN
		}

	}	
	
	
	public void recargarComboTablaFormatoFactura(List<Formato> formatofacturasForeignKey)throws Exception{
		TableColumn tableColumnFormatoFactura=this.jTableDatosConfiguracionPunVen.getColumnModel().getColumn(Funciones2.getColumnIndexByName(this.jTableDatosConfiguracionPunVen,ConfiguracionPunVenConstantesFunciones.LABEL_IDFORMATOFACTURA));
		TableCellEditor tableCellEditorFormatoFactura =tableColumnFormatoFactura.getCellEditor();

		FormatoTableCell formatoTableCellFk=(FormatoTableCell)tableCellEditorFormatoFactura;

		if(formatoTableCellFk!=null) {
			formatoTableCellFk.setformatosForeignKey(formatofacturasForeignKey);
		}


		//SIEMPRE rowActual<0 , NO USADO POR EL MOMENTO
		//COMBO DE FILA ACTUAL SE ACTUALIZA, LOS DEMAS USAN EL ANTERIOR COMBO
		//int intSelectedRow = -1;
		//intSelectedRow=this.jTableDatosConfiguracionPunVen.getSelectedRow();

		//if(intSelectedRow<=0) {
			//formatoTableCellFk.setRowActual(intSelectedRow);
			//formatoTableCellFk.setformatosForeignKeyActual(formatofacturasForeignKey);
		//}


		if(formatoTableCellFk!=null) {
			formatoTableCellFk.RecargarFormatosForeignKey();
			//ACTUALIZA COMBOS DE TABLA-FIN
		}

	}	
	
	
	public void recargarComboTablaFormatoNotaVenta(List<Formato> formatonotaventasForeignKey)throws Exception{
		TableColumn tableColumnFormatoNotaVenta=this.jTableDatosConfiguracionPunVen.getColumnModel().getColumn(Funciones2.getColumnIndexByName(this.jTableDatosConfiguracionPunVen,ConfiguracionPunVenConstantesFunciones.LABEL_IDFORMATONOTAVENTA));
		TableCellEditor tableCellEditorFormatoNotaVenta =tableColumnFormatoNotaVenta.getCellEditor();

		FormatoTableCell formatoTableCellFk=(FormatoTableCell)tableCellEditorFormatoNotaVenta;

		if(formatoTableCellFk!=null) {
			formatoTableCellFk.setformatosForeignKey(formatonotaventasForeignKey);
		}


		//SIEMPRE rowActual<0 , NO USADO POR EL MOMENTO
		//COMBO DE FILA ACTUAL SE ACTUALIZA, LOS DEMAS USAN EL ANTERIOR COMBO
		//int intSelectedRow = -1;
		//intSelectedRow=this.jTableDatosConfiguracionPunVen.getSelectedRow();

		//if(intSelectedRow<=0) {
			//formatoTableCellFk.setRowActual(intSelectedRow);
			//formatoTableCellFk.setformatosForeignKeyActual(formatonotaventasForeignKey);
		//}


		if(formatoTableCellFk!=null) {
			formatoTableCellFk.RecargarFormatosForeignKey();
			//ACTUALIZA COMBOS DE TABLA-FIN
		}

	}	
	
	
	public void recargarComboTablaFormatoNotaCredito(List<Formato> formatonotacreditosForeignKey)throws Exception{
		TableColumn tableColumnFormatoNotaCredito=this.jTableDatosConfiguracionPunVen.getColumnModel().getColumn(Funciones2.getColumnIndexByName(this.jTableDatosConfiguracionPunVen,ConfiguracionPunVenConstantesFunciones.LABEL_IDFORMATONOTACREDITO));
		TableCellEditor tableCellEditorFormatoNotaCredito =tableColumnFormatoNotaCredito.getCellEditor();

		FormatoTableCell formatoTableCellFk=(FormatoTableCell)tableCellEditorFormatoNotaCredito;

		if(formatoTableCellFk!=null) {
			formatoTableCellFk.setformatosForeignKey(formatonotacreditosForeignKey);
		}


		//SIEMPRE rowActual<0 , NO USADO POR EL MOMENTO
		//COMBO DE FILA ACTUAL SE ACTUALIZA, LOS DEMAS USAN EL ANTERIOR COMBO
		//int intSelectedRow = -1;
		//intSelectedRow=this.jTableDatosConfiguracionPunVen.getSelectedRow();

		//if(intSelectedRow<=0) {
			//formatoTableCellFk.setRowActual(intSelectedRow);
			//formatoTableCellFk.setformatosForeignKeyActual(formatonotacreditosForeignKey);
		//}


		if(formatoTableCellFk!=null) {
			formatoTableCellFk.RecargarFormatosForeignKey();
			//ACTUALIZA COMBOS DE TABLA-FIN
		}

	}	
	
	
	public void recargarComboTablaTransaccionFactura(List<Transaccion> transaccionfacturasForeignKey)throws Exception{
		TableColumn tableColumnTransaccionFactura=this.jTableDatosConfiguracionPunVen.getColumnModel().getColumn(Funciones2.getColumnIndexByName(this.jTableDatosConfiguracionPunVen,ConfiguracionPunVenConstantesFunciones.LABEL_IDTRANSACCIONFACTURA));
		TableCellEditor tableCellEditorTransaccionFactura =tableColumnTransaccionFactura.getCellEditor();

		TransaccionTableCell transaccionTableCellFk=(TransaccionTableCell)tableCellEditorTransaccionFactura;

		if(transaccionTableCellFk!=null) {
			transaccionTableCellFk.settransaccionsForeignKey(transaccionfacturasForeignKey);
		}


		//SIEMPRE rowActual<0 , NO USADO POR EL MOMENTO
		//COMBO DE FILA ACTUAL SE ACTUALIZA, LOS DEMAS USAN EL ANTERIOR COMBO
		//int intSelectedRow = -1;
		//intSelectedRow=this.jTableDatosConfiguracionPunVen.getSelectedRow();

		//if(intSelectedRow<=0) {
			//transaccionTableCellFk.setRowActual(intSelectedRow);
			//transaccionTableCellFk.settransaccionsForeignKeyActual(transaccionfacturasForeignKey);
		//}


		if(transaccionTableCellFk!=null) {
			transaccionTableCellFk.RecargarTransaccionsForeignKey();
			//ACTUALIZA COMBOS DE TABLA-FIN
		}

	}	
	
	
	public void recargarComboTablaTransaccionNotaVenta(List<Transaccion> transaccionnotaventasForeignKey)throws Exception{
		TableColumn tableColumnTransaccionNotaVenta=this.jTableDatosConfiguracionPunVen.getColumnModel().getColumn(Funciones2.getColumnIndexByName(this.jTableDatosConfiguracionPunVen,ConfiguracionPunVenConstantesFunciones.LABEL_IDTRANSACCIONNOTAVENTA));
		TableCellEditor tableCellEditorTransaccionNotaVenta =tableColumnTransaccionNotaVenta.getCellEditor();

		TransaccionTableCell transaccionTableCellFk=(TransaccionTableCell)tableCellEditorTransaccionNotaVenta;

		if(transaccionTableCellFk!=null) {
			transaccionTableCellFk.settransaccionsForeignKey(transaccionnotaventasForeignKey);
		}


		//SIEMPRE rowActual<0 , NO USADO POR EL MOMENTO
		//COMBO DE FILA ACTUAL SE ACTUALIZA, LOS DEMAS USAN EL ANTERIOR COMBO
		//int intSelectedRow = -1;
		//intSelectedRow=this.jTableDatosConfiguracionPunVen.getSelectedRow();

		//if(intSelectedRow<=0) {
			//transaccionTableCellFk.setRowActual(intSelectedRow);
			//transaccionTableCellFk.settransaccionsForeignKeyActual(transaccionnotaventasForeignKey);
		//}


		if(transaccionTableCellFk!=null) {
			transaccionTableCellFk.RecargarTransaccionsForeignKey();
			//ACTUALIZA COMBOS DE TABLA-FIN
		}

	}	
	
	
	public void recargarComboTablaTransaccionNotaCredito(List<Transaccion> transaccionnotacreditosForeignKey)throws Exception{
		TableColumn tableColumnTransaccionNotaCredito=this.jTableDatosConfiguracionPunVen.getColumnModel().getColumn(Funciones2.getColumnIndexByName(this.jTableDatosConfiguracionPunVen,ConfiguracionPunVenConstantesFunciones.LABEL_IDTRANSACCIONNOTACREDITO));
		TableCellEditor tableCellEditorTransaccionNotaCredito =tableColumnTransaccionNotaCredito.getCellEditor();

		TransaccionTableCell transaccionTableCellFk=(TransaccionTableCell)tableCellEditorTransaccionNotaCredito;

		if(transaccionTableCellFk!=null) {
			transaccionTableCellFk.settransaccionsForeignKey(transaccionnotacreditosForeignKey);
		}


		//SIEMPRE rowActual<0 , NO USADO POR EL MOMENTO
		//COMBO DE FILA ACTUAL SE ACTUALIZA, LOS DEMAS USAN EL ANTERIOR COMBO
		//int intSelectedRow = -1;
		//intSelectedRow=this.jTableDatosConfiguracionPunVen.getSelectedRow();

		//if(intSelectedRow<=0) {
			//transaccionTableCellFk.setRowActual(intSelectedRow);
			//transaccionTableCellFk.settransaccionsForeignKeyActual(transaccionnotacreditosForeignKey);
		//}


		if(transaccionTableCellFk!=null) {
			transaccionTableCellFk.RecargarTransaccionsForeignKey();
			//ACTUALIZA COMBOS DE TABLA-FIN
		}

	}	
	
	
	public void recargarComboTablaTransaccionCuentaFactura(List<Transaccion> transaccioncuentafacturasForeignKey)throws Exception{
		TableColumn tableColumnTransaccionCuentaFactura=this.jTableDatosConfiguracionPunVen.getColumnModel().getColumn(Funciones2.getColumnIndexByName(this.jTableDatosConfiguracionPunVen,ConfiguracionPunVenConstantesFunciones.LABEL_IDTRANSACCIONCUENTAFACTURA));
		TableCellEditor tableCellEditorTransaccionCuentaFactura =tableColumnTransaccionCuentaFactura.getCellEditor();

		TransaccionTableCell transaccionTableCellFk=(TransaccionTableCell)tableCellEditorTransaccionCuentaFactura;

		if(transaccionTableCellFk!=null) {
			transaccionTableCellFk.settransaccionsForeignKey(transaccioncuentafacturasForeignKey);
		}


		//SIEMPRE rowActual<0 , NO USADO POR EL MOMENTO
		//COMBO DE FILA ACTUAL SE ACTUALIZA, LOS DEMAS USAN EL ANTERIOR COMBO
		//int intSelectedRow = -1;
		//intSelectedRow=this.jTableDatosConfiguracionPunVen.getSelectedRow();

		//if(intSelectedRow<=0) {
			//transaccionTableCellFk.setRowActual(intSelectedRow);
			//transaccionTableCellFk.settransaccionsForeignKeyActual(transaccioncuentafacturasForeignKey);
		//}


		if(transaccionTableCellFk!=null) {
			transaccionTableCellFk.RecargarTransaccionsForeignKey();
			//ACTUALIZA COMBOS DE TABLA-FIN
		}

	}	
	
	
	public void recargarComboTablaTransaccionCuentaNotaVenta(List<Transaccion> transaccioncuentanotaventasForeignKey)throws Exception{
		TableColumn tableColumnTransaccionCuentaNotaVenta=this.jTableDatosConfiguracionPunVen.getColumnModel().getColumn(Funciones2.getColumnIndexByName(this.jTableDatosConfiguracionPunVen,ConfiguracionPunVenConstantesFunciones.LABEL_IDTRANSACCIONCUENTANOTAVENTA));
		TableCellEditor tableCellEditorTransaccionCuentaNotaVenta =tableColumnTransaccionCuentaNotaVenta.getCellEditor();

		TransaccionTableCell transaccionTableCellFk=(TransaccionTableCell)tableCellEditorTransaccionCuentaNotaVenta;

		if(transaccionTableCellFk!=null) {
			transaccionTableCellFk.settransaccionsForeignKey(transaccioncuentanotaventasForeignKey);
		}


		//SIEMPRE rowActual<0 , NO USADO POR EL MOMENTO
		//COMBO DE FILA ACTUAL SE ACTUALIZA, LOS DEMAS USAN EL ANTERIOR COMBO
		//int intSelectedRow = -1;
		//intSelectedRow=this.jTableDatosConfiguracionPunVen.getSelectedRow();

		//if(intSelectedRow<=0) {
			//transaccionTableCellFk.setRowActual(intSelectedRow);
			//transaccionTableCellFk.settransaccionsForeignKeyActual(transaccioncuentanotaventasForeignKey);
		//}


		if(transaccionTableCellFk!=null) {
			transaccionTableCellFk.RecargarTransaccionsForeignKey();
			//ACTUALIZA COMBOS DE TABLA-FIN
		}

	}	
	
	
	public void recargarComboTablaTransaccionCuentaNotaCredito(List<Transaccion> transaccioncuentanotacreditosForeignKey)throws Exception{
		TableColumn tableColumnTransaccionCuentaNotaCredito=this.jTableDatosConfiguracionPunVen.getColumnModel().getColumn(Funciones2.getColumnIndexByName(this.jTableDatosConfiguracionPunVen,ConfiguracionPunVenConstantesFunciones.LABEL_IDTRANSACCIONCUENTANOTACREDITO));
		TableCellEditor tableCellEditorTransaccionCuentaNotaCredito =tableColumnTransaccionCuentaNotaCredito.getCellEditor();

		TransaccionTableCell transaccionTableCellFk=(TransaccionTableCell)tableCellEditorTransaccionCuentaNotaCredito;

		if(transaccionTableCellFk!=null) {
			transaccionTableCellFk.settransaccionsForeignKey(transaccioncuentanotacreditosForeignKey);
		}


		//SIEMPRE rowActual<0 , NO USADO POR EL MOMENTO
		//COMBO DE FILA ACTUAL SE ACTUALIZA, LOS DEMAS USAN EL ANTERIOR COMBO
		//int intSelectedRow = -1;
		//intSelectedRow=this.jTableDatosConfiguracionPunVen.getSelectedRow();

		//if(intSelectedRow<=0) {
			//transaccionTableCellFk.setRowActual(intSelectedRow);
			//transaccionTableCellFk.settransaccionsForeignKeyActual(transaccioncuentanotacreditosForeignKey);
		//}


		if(transaccionTableCellFk!=null) {
			transaccionTableCellFk.RecargarTransaccionsForeignKey();
			//ACTUALIZA COMBOS DE TABLA-FIN
		}

	}	
	
	
	

	public void setCombosCodigoDesdeBusquedaid_cliente_consumidor_final (Long id) throws Exception {
		this.setActualClienteConsumidorFinalForeignKey(id,true,"Todos");

	};
	
	public void jButtonActualizarConfiguracionPunVenActionPerformed(ActionEvent evt) throws Exception {   
		try	{
			if(Constantes.ISUSAEJBLOGICLAYER) {
				this.configuracionpunvenLogic.getNewConnexionToDeep("");
			}
			
			this.inicializarActualizarBindingParametrosReportesConfiguracionPunVen(false);
			
			//if(!this.isEsNuevoConfiguracionPunVen) {								
				int intSelectedRow = this.jTableDatosConfiguracionPunVen.getSelectedRow();	
				
				//SE PIEDE INDICE SELECTED CON FILA TOTALES, ASEGURARSE QUE OBJETO ACTUAL ESTE EN FORMULARIO
				
				//ARCHITECTURE
				if(Constantes.ISUSAEJBLOGICLAYER) {
					this.configuracionpunven =(ConfiguracionPunVen) this.configuracionpunvenLogic.getConfiguracionPunVens().toArray()[this.jTableDatosConfiguracionPunVen.convertRowIndexToModel(intSelectedRow)];
				} else if(Constantes.ISUSAEJBREMOTE || Constantes.ISUSAEJBHOME) {
					this.configuracionpunven =(ConfiguracionPunVen) this.configuracionpunvens.toArray()[this.jTableDatosConfiguracionPunVen.convertRowIndexToModel(intSelectedRow)];
				}
				//ARCHITECTURE
				
			//}
				
			if(ConfiguracionPunVenJInternalFrame.ISBINDING_MANUAL_TABLA) {
				this.setVariablesFormularioToObjetoActualConfiguracionPunVen(this.configuracionpunven,true);
				this.setVariablesFormularioToObjetoActualForeignKeysConfiguracionPunVen(this.configuracionpunven);
				
			}
			
			if(this.permiteMantenimiento(this.configuracionpunven)) {	
				this.actualizar();
				
				if(!this.isGuardarCambiosEnLote && !this.configuracionpunvenSessionBean.getEsGuardarRelacionado()) {
					this.procesarBusqueda(sAccionBusqueda);
					
					this.isEsNuevoConfiguracionPunVen=true;
					this.inicializarActualizarBindingTablaConfiguracionPunVen(false);
					this.isEsNuevoConfiguracionPunVen=false;
				
				} else {					
					
					//PARA RELACIONADO ACTUALIZAR FILA TOTALES
					this.isEsNuevoConfiguracionPunVen=true;
					this.procesoActualizarFilaTotales(false,"MANTENIMIENTO");
					this.isEsNuevoConfiguracionPunVen=false;
				}
						
								
				//NO FUNCIONA BINDINGS
				this.inicializarActualizarBindingBotonesConfiguracionPunVen(false);
				
				//SI ES MANUAL
				//this.inicializarActualizarBindingBotonesManualConfiguracionPunVen(false);
				
				this.habilitarDeshabilitarControlesConfiguracionPunVen(false);
			
												
				
				if(ConfiguracionPunVenJInternalFrame.CON_DATOS_FRAME) {
					if(!this.isPostAccionSinCerrar) {
						this.cerrarFrameDetalleConfiguracionPunVen();
					}
				}
				
				if(this.isPostAccionNuevo) {
					this.jButtonNuevoConfiguracionPunVenActionPerformed(evt,configuracionpunvenSessionBean.getConGuardarRelaciones());
				} else {
					if(this.isPostAccionSinCerrar) {
						Integer intSelectedRowActual=this.getIndiceActualConfiguracionPunVen(this.configuracionpunven,intSelectedRow);
						
						if(intSelectedRow>-1) {
							this.jTableDatosConfiguracionPunVen.setRowSelectionInterval(intSelectedRowActual, intSelectedRowActual);
							this.jButtonIdActionPerformed(evt,intSelectedRowActual,configuracionpunvenSessionBean.getConGuardarRelaciones(),false);
						}
					}
				}
				
				this.cancelar(false);
				
			} else {
				JOptionPane.showMessageDialog(this,"ESTE REGISTRO NO PUEDE ACTUALIZARSE","EDITAR",JOptionPane.ERROR_MESSAGE);
			}
			
			if(Constantes.ISUSAEJBLOGICLAYER) {
				this.configuracionpunvenLogic.commitNewConnexionToDeep();
			}
			
			
			if(this.jInternalFrameParent!=null) { //&& this.isEsMantenimientoRelacionado) {
				Boolean esUsoDesdeHijoLocal=true;
				String sTipo="Formulario";
				Boolean conIrServidorAplicacionParent=false;
				Long id=this.configuracionpunven.getId();
				ArrayList<String> arrClasses=new ArrayList<String>();
				
				GeneralEntityParameterGeneral generalEntityParameterGeneral=new GeneralEntityParameterGeneral();
				
				generalEntityParameterGeneral.setEventoGlobalTipo(EventoGlobalTipo.FORM_HIJO_ACTUALIZAR);
				generalEntityParameterGeneral.setsDominio("Formulario");
				generalEntityParameterGeneral.setsDominioTipo(ConfiguracionPunVen.class.getName());
				
				this.jInternalFrameParent.setEventoParentGeneral(esUsoDesdeHijoLocal,"Formulario",ConfiguracionPunVen.class.getName(),sTipo,"FORMULARIO",esControlTabla,conIrServidorAplicacionParent,
					id,this, EventoGlobalTipo.FORM_HIJO_ACTUALIZAR,ControlTipo.FORM,EventoTipo.CHANGE,EventoSubTipo.CHANGED,arrClasses,
					evt,generalEntityParameterGeneral,this);
			}
			
		} catch(Exception e) {
			if(Constantes.ISUSAEJBLOGICLAYER) {
				this.configuracionpunvenLogic.rollbackNewConnexionToDeep();
			}
			
			FuncionesSwing.manageException(this, e,logger,ConfiguracionPunVenConstantesFunciones.CLASSNAME);
		
		} finally {
			if(Constantes.ISUSAEJBLOGICLAYER) {
				this.configuracionpunvenLogic.closeNewConnexionToDeep();
			}
		}
	}
	
	public void jButtonEliminarConfiguracionPunVenActionPerformed(ActionEvent evt) throws Exception {   
		try	{
			
			if(Constantes.ISUSAEJBLOGICLAYER) {
				this.configuracionpunvenLogic.getNewConnexionToDeep("");
			}
			
			int intSelectedRow = this.jTableDatosConfiguracionPunVen.getSelectedRow();	       
							
			//ARCHITECTURE
			if(Constantes.ISUSAEJBLOGICLAYER) {
				this.configuracionpunven =(ConfiguracionPunVen) this.configuracionpunvenLogic.getConfiguracionPunVens().toArray()[this.jTableDatosConfiguracionPunVen.convertRowIndexToModel(intSelectedRow)];
				this.configuracionpunven.setIsDeleted(true);
			} else if(Constantes.ISUSAEJBREMOTE || Constantes.ISUSAEJBHOME ) {
				this.configuracionpunven =(ConfiguracionPunVen) this.configuracionpunvens.toArray()[this.jTableDatosConfiguracionPunVen.convertRowIndexToModel(intSelectedRow)];
				this.configuracionpunven.setIsDeleted(true);
			}
			//ARCHITECTURE
			
			if(this.permiteMantenimiento(this.configuracionpunven)) {
				this.eliminar();
				
				if(!this.isGuardarCambiosEnLote && !this.configuracionpunvenSessionBean.getEsGuardarRelacionado()) {
					this.procesarBusqueda(sAccionBusqueda);
				}
				
				((ConfiguracionPunVenModel) this.jTableDatosConfiguracionPunVen.getModel()).fireTableRowsDeleted(intSelectedRow,intSelectedRow);
				
				this.isEsNuevoConfiguracionPunVen=true;
				this.inicializarActualizarBindingTablaConfiguracionPunVen(false);
				this.isEsNuevoConfiguracionPunVen=false;									
					
				//NO FUNCIONA BINDINGS
				this.inicializarActualizarBindingBotonesConfiguracionPunVen(false);
				
				//SI ES MANUAL
				//this.inicializarActualizarBindingBotonesManualConfiguracionPunVen(false);
				
				this.habilitarDeshabilitarControlesConfiguracionPunVen(false);
				
				
				
				if(ConfiguracionPunVenJInternalFrame.CON_DATOS_FRAME) {
					this.cerrarFrameDetalleConfiguracionPunVen();
				}
			} else {
				JOptionPane.showMessageDialog(this,"ESTE REGISTRO NO PUEDE ACTUALIZARSE","EDITAR",JOptionPane.ERROR_MESSAGE);
			}	
			
			if(Constantes.ISUSAEJBLOGICLAYER) {
				this.configuracionpunvenLogic.commitNewConnexionToDeep();
			}
			
		} catch(Exception e) {
			
			if(Constantes.ISUSAEJBLOGICLAYER) {
				this.configuracionpunvenLogic.rollbackNewConnexionToDeep();
			}

			FuncionesSwing.manageException(this, e,logger,ConfiguracionPunVenConstantesFunciones.CLASSNAME);
		
		} finally {
			if(Constantes.ISUSAEJBLOGICLAYER) {
				this.configuracionpunvenLogic.closeNewConnexionToDeep();
			}
		}		
	}
		
	public void jButtonCancelarConfiguracionPunVenActionPerformed(ActionEvent evt) throws Exception {                                         	   	       
	  	try {
			if(jTableDatosConfiguracionPunVen.getRowCount()>=1) {
				jTableDatosConfiguracionPunVen.removeRowSelectionInterval(0, jTableDatosConfiguracionPunVen.getRowCount()-1);						
			}
						
			this.invalidValues=new InvalidValue[0];
			this.habilitarDeshabilitarControlesConfiguracionPunVen(false);
			this.cancelar(true);			
			this.inicializarActualizarBindingTablaConfiguracionPunVen(false);
			
			//NO FUNCIONA BINDINGS
			this.inicializarActualizarBindingBotonesConfiguracionPunVen(false) ;
			
			//SI ES MANUAL
			//this.inicializarActualizarBindingBotonesManualConfiguracionPunVen(false) ;
			
			this.isEsNuevoConfiguracionPunVen=false;
			
			if(ConfiguracionPunVenJInternalFrame.CON_DATOS_FRAME) {
				this.cerrarFrameDetalleConfiguracionPunVen();
			}
			
		} catch(Exception e) {
			FuncionesSwing.manageException(this, e,logger,ConfiguracionPunVenConstantesFunciones.CLASSNAME);
		}
	}
	
	public void jButtonGuardarCambiosConfiguracionPunVenActionPerformed(ActionEvent evt) throws Exception {    		
		try	{
			
			if(Constantes.ISUSAEJBLOGICLAYER) {
				this.configuracionpunvenLogic.getNewConnexionToDeep("");
			}
			
			//this.estaModoGuardarCambios=true;
			
	    	this.guardarCambios();
			
			if(!this.isErrorGuardar) {
				this.procesarBusqueda(this.sAccionBusqueda);
				
				//NO FUNCIONA BINDINGS
				this.inicializarActualizarBindingConfiguracionPunVen(false);
				
				//SI ES MANUAL
				if(ConfiguracionPunVenJInternalFrame.ISBINDING_MANUAL) {				
					//this.inicializarActualizarBindingManualConfiguracionPunVen();				
				}
			}
			
			if(Constantes.ISUSAEJBLOGICLAYER) {
				this.configuracionpunvenLogic.commitNewConnexionToDeep();
			}
			
		} catch(Exception e) {
			if(Constantes.ISUSAEJBLOGICLAYER) {
				this.configuracionpunvenLogic.rollbackNewConnexionToDeep();
			}

			FuncionesSwing.manageException(this, e,logger,ConfiguracionPunVenConstantesFunciones.CLASSNAME);
		
		} finally {
			if(Constantes.ISUSAEJBLOGICLAYER) {
				this.configuracionpunvenLogic.closeNewConnexionToDeep();
			}
			
			//this.estaModoGuardarCambios=false;
		}
	}
	
	public void jButtonNuevoGuardarCambiosConfiguracionPunVenActionPerformed(ActionEvent evt) throws Exception {    		
		try	{
			
			this.estaModoNuevo=true;
			this.estaModoNuevoGuardarCambios=true;
			
			//LO HACE NUEVOPREPARAR
			//this.iIdNuevoConfiguracionPunVen--;			
			//ConfiguracionPunVen configuracionpunvenAux= new ConfiguracionPunVen();			
			//configuracionpunvenAux.setId(this.iIdNuevoConfiguracionPunVen);
			
			if(this.jInternalFrameDetalleFormConfiguracionPunVen==null) { //if(!this.conCargarFormDetalle) {
				this.inicializarFormDetalle();
			}
			
			this.aumentarTamanioFilaNuevaTablaConfiguracionPunVen();
			
			if(this.conTotales) {
				this.quitarFilaTotales();
			}
			
			this.nuevoPreparar(true);
			
			this.setVariablesFormularioToObjetoActualForeignKeysConfiguracionPunVen(this.configuracionpunven);
			
			this.configuracionpunven.setsType("NUEVO_GUARDAR_CAMBIOS");
			
			//LO HACE NUEVOPREPARAR
			/*
			if(Constantes.ISUSAEJBLOGICLAYER) {				
				this.configuracionpunvenLogic.getConfiguracionPunVens().add(this.configuracionpunvenAux);
			} else if(Constantes.ISUSAEJBREMOTE||Constantes.ISUSAEJBHOME) {
				this.configuracionpunvens.add(this.configuracionpunvenAux);				
			}
			*/
			
			this.inicializarActualizarBindingTablaConfiguracionPunVen(false);
			
			this.jTableDatosConfiguracionPunVen.setRowSelectionInterval(this.getIndiceNuevoConfiguracionPunVen(), this.getIndiceNuevoConfiguracionPunVen());
			
			int iLastRow =  this.jTableDatosConfiguracionPunVen.getRowCount () - 1;
			Rectangle rectangle = this.jTableDatosConfiguracionPunVen.getCellRect(iLastRow, 0, true);
			
			this.jTableDatosConfiguracionPunVen.scrollRectToVisible(rectangle);
			
			//FILA TOTALES
			if(this.conTotales) {
				this.crearFilaTotales();
				
				this.inicializarActualizarBindingTablaConfiguracionPunVen(false);
			}

		} catch(Exception e) {									
			FuncionesSwing.manageException(this, e,logger,ConfiguracionPunVenConstantesFunciones.CLASSNAME);
			
		} finally {
			this.estaModoNuevo=false;
			this.estaModoNuevoGuardarCambios=false;
		}
	}		
	
	public void jButtonRecargarInformacionConfiguracionPunVenActionPerformed(ActionEvent evt) throws Exception {    		
		try {
			this.iNumeroPaginacionPagina=0;
			
			if(Constantes.ISUSAEJBLOGICLAYER) {
				this.configuracionpunvenLogic.getNewConnexionToDeep("");
			}
			
			this.inicializarActualizarBindingConfiguracionPunVen(false,false);
			
	    	this.recargarInformacion();
			
			//NO FUNCIONA BINDINGS
			this.inicializarActualizarBindingConfiguracionPunVen(false);
			
			//SI ES MANUAL
			if(ConfiguracionPunVenJInternalFrame.ISBINDING_MANUAL) {
				//this.inicializarActualizarBindingManualConfiguracionPunVen();
			}
			
			//this.abrirFrameTreeConfiguracionPunVen();
			
			if(Constantes.ISUSAEJBLOGICLAYER) {
				this.configuracionpunvenLogic.commitNewConnexionToDeep();
			}
			
		} catch(Exception e) {
			if(Constantes.ISUSAEJBLOGICLAYER) {
				this.configuracionpunvenLogic.rollbackNewConnexionToDeep();
			}
			
			FuncionesSwing.manageException(this, e,logger,ConfiguracionPunVenConstantesFunciones.CLASSNAME);
		
		} finally {
			if(Constantes.ISUSAEJBLOGICLAYER) {
				this.configuracionpunvenLogic.closeNewConnexionToDeep();
			}
		}	
	}
	
	
	public void jButtonGenerarImportacionConfiguracionPunVenActionPerformed(ActionEvent evt) throws Exception {    				
		BufferedReader bufferedReader = null;
		String sXmlStringFile="";
		String sPath="";
		this.arrDatoGeneralMinimos= new  ArrayList<DatoGeneralMinimo>();
		DatoGeneralMinimo datoGeneralMinimo=new DatoGeneralMinimo();
		String sLine="";
		
		try {			
			if(JOptionPane.showConfirmDialog(this, "ESTA SEGURO DE PROCESAR IMPORTACION DE Configuracion Pun VenES ?", "MANTENIMIENTO DE Configuracion Pun Ven", JOptionPane.OK_CANCEL_OPTION) == 0) {
				bufferedReader = new BufferedReader(new FileReader(this.jInternalFrameImportacionConfiguracionPunVen.getFileImportacion().getAbsolutePath()));
								
				while ((sLine = bufferedReader.readLine()) != null) {
					datoGeneralMinimo=new DatoGeneralMinimo();
					datoGeneralMinimo.setsDescripcion(sLine);
					
					this.arrDatoGeneralMinimos.add(datoGeneralMinimo);
				}
				
				this.actualizarParametrosGeneralConfiguracionPunVen();
						
				//ARCHITECTURE
				if(Constantes.ISUSAEJBLOGICLAYER) {						
					this.configuracionpunvenReturnGeneral=configuracionpunvenLogic.procesarImportacionConfiguracionPunVensWithConnection(this.parametroGeneralUsuario,this.moduloActual,this.opcionActual,this.usuarioActual,this.arrDatoGeneralMinimos,this.configuracionpunvenParameterGeneral);
						
				} else if(Constantes.ISUSAEJBREMOTE) {
						
				} else if(Constantes.ISUSAEJBHOME) {
				}
				//ARCHITECTURE
						
				this.procesarConfiguracionPunVenReturnGeneral();
			}
		} catch(Exception e) {
			FuncionesSwing.manageException(this, e,logger,ConfiguracionPunVenConstantesFunciones.CLASSNAME);
		
		} finally {			
			if (bufferedReader != null) {
				bufferedReader.close();
			}	
		}				
	}
	
	
	
	public void jButtonAbrirImportacionConfiguracionPunVenActionPerformed(ActionEvent evt) throws Exception {    				
		BufferedWriter bufferedWriter = null;
		String sXmlStringFile="";
		String sPath="";
		
		try {
			int iReturnArchivo = this.jInternalFrameImportacionConfiguracionPunVen.getjFileChooserImportacion().showOpenDialog(this);
 
            if (iReturnArchivo == JFileChooser.APPROVE_OPTION) {
            	this.jInternalFrameImportacionConfiguracionPunVen.setFileImportacion(this.jInternalFrameImportacionConfiguracionPunVen.getjFileChooserImportacion().getSelectedFile());
            	
				this.jInternalFrameImportacionConfiguracionPunVen.getjTextFieldPathArchivoImportacion().setText(this.jInternalFrameImportacionConfiguracionPunVen.getFileImportacion().getName());
				
				//System.out.println("ARCHIVO ESCOGIDO: "+this.fileImportacionConfiguracionPunVen.getName());
				
            } else {
                //System.out.println("CANCELAR SELECCION");
				this.jInternalFrameImportacionConfiguracionPunVen.getjTextFieldPathArchivoImportacion().setText("SELECCION CANCELADA");
            }			
		} catch(Exception e) {
			FuncionesSwing.manageException(this, e,logger,ConfiguracionPunVenConstantesFunciones.CLASSNAME);
		
		} finally {			
			if (bufferedWriter != null) {
				bufferedWriter.close();
			}	
		}		
	}
	
	
	public void jButtonGenerarReporteDinamicoConfiguracionPunVenActionPerformed(ActionEvent evt) throws Exception {    		
		BufferedWriter bufferedWriter = null;
		String sXmlStringFile="";
		String sPath="";
		
		try {	
		
		ArrayList<ConfiguracionPunVen> configuracionpunvensSeleccionados=new ArrayList<ConfiguracionPunVen>();		

		configuracionpunvensSeleccionados=this.getConfiguracionPunVensSeleccionados(true);
		
		
		this.sTipoReporteDinamico=((Reporte)this.jInternalFrameReporteDinamicoConfiguracionPunVen.getjComboBoxTiposReportesDinamico().getSelectedItem()).getsCodigo();
		
		this.sTipoArchivoReporteDinamico=((Reporte)this.jInternalFrameReporteDinamicoConfiguracionPunVen.getjComboBoxTiposArchivosReportesDinamico().getSelectedItem()).getsCodigo();			
		
		
		this.sTipoArchivoReporte=this.sTipoArchivoReporteDinamico;
		
		//this.sTipoReporteExtra="Base";
		
			InputStream reportFile=null;
			InputStream imageFile=null;
			
			imageFile=AuxiliarImagenes.class.getResourceAsStream("LogoReporte.jpg");			
				
		
		
			reportFile = AuxiliarReportes.class.getResourceAsStream("ConfiguracionPunVenBaseDesign.jrxml");	
			
			sPath=this.parametroGeneralUsuario.getpath_exportar()+"ConfiguracionPunVenBaseDesign.jrxml";
			
			sXmlStringFile=Funciones2.getStringFromInputStream(reportFile);
						
			bufferedWriter = new BufferedWriter(new FileWriter(sPath));
			
			
			sXmlStringFile=this.actualizarReporteDinamico(sXmlStringFile);
			
			
			bufferedWriter.write(sXmlStringFile);
			
			bufferedWriter.close();
			
			try{JasperCompileManager.compileReportToFile(sPath);}catch(Exception e){e.printStackTrace();}
			
			this.actualizarVariablesTipoReporte(false,true,false,sPath);
			
			/*
			this.esReporteDinamico=true;
			this.sPathReporteDinamico=sPath.replace(".jrxml",".jasper");
			this.sTipoReporteExtra="";
			*/
			
			this.generarReporteConfiguracionPunVens("Todos",configuracionpunvensSeleccionados );

			if(this.parametroGeneralUsuario.getcon_mensaje_confirmacion() && !this.configuracionpunvenSessionBean.getEsGuardarRelacionado()) {//Constantes.ISMOSTRARMENSAJESMANTENIMIENTO && 
				//DEBE APARECER EL REPORTE DIRECTAMENTE
				//JOptionPane.showMessageDialog(this,"GENERADO CORRECTAMENTE:"+sPath,"MANTENIMIENTO DE Configuracion Pun Ven",JOptionPane.INFORMATION_MESSAGE);
			}
			
		} catch(Exception e) {
			FuncionesSwing.manageException(this, e,logger,ConfiguracionPunVenConstantesFunciones.CLASSNAME);
		
		} finally {			
			if (bufferedWriter != null) {
				bufferedWriter.close();
			}	
		}
	}		
	
	
	public String actualizarReporteDinamico(String sXmlStringFile) {				
		Reporte reporte=new Reporte();
		Integer iAnchoMaximoVertical=535;//781,782
		Integer iAnchoMaximoHorizontal=782;
		Integer iAnchoSum=0;
		Integer iAnchoColumna=0;
		
		Integer iAnchoMargenes=60;
		String sWidthGrafico="535";
		
		for(int index:this.jInternalFrameReporteDinamicoConfiguracionPunVen.getjListColumnasSelectReporte().getSelectedIndices()) {
			reporte=(Reporte)this.jInternalFrameReporteDinamicoConfiguracionPunVen.getjListColumnasSelectReporte().getModel().getElementAt(index);
			
			switch(reporte.getsCodigo()) {
				
				case ConfiguracionPunVenConstantesFunciones.LABEL_IDEMPRESA:
					iAnchoColumna=100;

					if(iAnchoSum+iAnchoColumna<=iAnchoMaximoHorizontal) {
						sXmlStringFile=sXmlStringFile.replace("<!--col_Empresa_col", "");
						sXmlStringFile=sXmlStringFile.replace("col_Empresa_col-->", "");

						sXmlStringFile=sXmlStringFile.replace("colancho_Empresa_colancho", iAnchoColumna.toString());
						sXmlStringFile=sXmlStringFile.replace("colx_Empresa_colx", iAnchoSum.toString());

						iAnchoSum+=iAnchoColumna;
					}

					break;

				case ConfiguracionPunVenConstantesFunciones.LABEL_IDSUCURSAL:
					iAnchoColumna=100;

					if(iAnchoSum+iAnchoColumna<=iAnchoMaximoHorizontal) {
						sXmlStringFile=sXmlStringFile.replace("<!--col_Sucursal_col", "");
						sXmlStringFile=sXmlStringFile.replace("col_Sucursal_col-->", "");

						sXmlStringFile=sXmlStringFile.replace("colancho_Sucursal_colancho", iAnchoColumna.toString());
						sXmlStringFile=sXmlStringFile.replace("colx_Sucursal_colx", iAnchoSum.toString());

						iAnchoSum+=iAnchoColumna;
					}

					break;

				case ConfiguracionPunVenConstantesFunciones.LABEL_IDBODEGA:
					iAnchoColumna=100;

					if(iAnchoSum+iAnchoColumna<=iAnchoMaximoHorizontal) {
						sXmlStringFile=sXmlStringFile.replace("<!--col_Bodega_col", "");
						sXmlStringFile=sXmlStringFile.replace("col_Bodega_col-->", "");

						sXmlStringFile=sXmlStringFile.replace("colancho_Bodega_colancho", iAnchoColumna.toString());
						sXmlStringFile=sXmlStringFile.replace("colx_Bodega_colx", iAnchoSum.toString());

						iAnchoSum+=iAnchoColumna;
					}

					break;

				case ConfiguracionPunVenConstantesFunciones.LABEL_IDCUENTACONTABLEEFECTIVO:
					iAnchoColumna=100;

					if(iAnchoSum+iAnchoColumna<=iAnchoMaximoHorizontal) {
						sXmlStringFile=sXmlStringFile.replace("<!--col_CuentaContableEfectivo_col", "");
						sXmlStringFile=sXmlStringFile.replace("col_CuentaContableEfectivo_col-->", "");

						sXmlStringFile=sXmlStringFile.replace("colancho_CuentaContableEfectivo_colancho", iAnchoColumna.toString());
						sXmlStringFile=sXmlStringFile.replace("colx_CuentaContableEfectivo_colx", iAnchoSum.toString());

						iAnchoSum+=iAnchoColumna;
					}

					break;

				case ConfiguracionPunVenConstantesFunciones.LABEL_IDCUENTACONTABLEICE:
					iAnchoColumna=100;

					if(iAnchoSum+iAnchoColumna<=iAnchoMaximoHorizontal) {
						sXmlStringFile=sXmlStringFile.replace("<!--col_CuentaContableIce_col", "");
						sXmlStringFile=sXmlStringFile.replace("col_CuentaContableIce_col-->", "");

						sXmlStringFile=sXmlStringFile.replace("colancho_CuentaContableIce_colancho", iAnchoColumna.toString());
						sXmlStringFile=sXmlStringFile.replace("colx_CuentaContableIce_colx", iAnchoSum.toString());

						iAnchoSum+=iAnchoColumna;
					}

					break;

				case ConfiguracionPunVenConstantesFunciones.LABEL_IDCUENTACONTABLEOTROS:
					iAnchoColumna=100;

					if(iAnchoSum+iAnchoColumna<=iAnchoMaximoHorizontal) {
						sXmlStringFile=sXmlStringFile.replace("<!--col_CuentaContableOtros_col", "");
						sXmlStringFile=sXmlStringFile.replace("col_CuentaContableOtros_col-->", "");

						sXmlStringFile=sXmlStringFile.replace("colancho_CuentaContableOtros_colancho", iAnchoColumna.toString());
						sXmlStringFile=sXmlStringFile.replace("colx_CuentaContableOtros_colx", iAnchoSum.toString());

						iAnchoSum+=iAnchoColumna;
					}

					break;

				case ConfiguracionPunVenConstantesFunciones.LABEL_IDCLIENTECONSUMIDORFINAL:
					iAnchoColumna=100;

					if(iAnchoSum+iAnchoColumna<=iAnchoMaximoHorizontal) {
						sXmlStringFile=sXmlStringFile.replace("<!--col_ClienteConsumidorFinal_col", "");
						sXmlStringFile=sXmlStringFile.replace("col_ClienteConsumidorFinal_col-->", "");

						sXmlStringFile=sXmlStringFile.replace("colancho_ClienteConsumidorFinal_colancho", iAnchoColumna.toString());
						sXmlStringFile=sXmlStringFile.replace("colx_ClienteConsumidorFinal_colx", iAnchoSum.toString());

						iAnchoSum+=iAnchoColumna;
					}

					break;

				case ConfiguracionPunVenConstantesFunciones.LABEL_IDTIPODOCUMENTOFACTURA:
					iAnchoColumna=100;

					if(iAnchoSum+iAnchoColumna<=iAnchoMaximoHorizontal) {
						sXmlStringFile=sXmlStringFile.replace("<!--col_TipoDocumentoFactura_col", "");
						sXmlStringFile=sXmlStringFile.replace("col_TipoDocumentoFactura_col-->", "");

						sXmlStringFile=sXmlStringFile.replace("colancho_TipoDocumentoFactura_colancho", iAnchoColumna.toString());
						sXmlStringFile=sXmlStringFile.replace("colx_TipoDocumentoFactura_colx", iAnchoSum.toString());

						iAnchoSum+=iAnchoColumna;
					}

					break;

				case ConfiguracionPunVenConstantesFunciones.LABEL_IDTIPODOCUMENTONOTAVENTA:
					iAnchoColumna=100;

					if(iAnchoSum+iAnchoColumna<=iAnchoMaximoHorizontal) {
						sXmlStringFile=sXmlStringFile.replace("<!--col_TipoDocumentoNotaVenta_col", "");
						sXmlStringFile=sXmlStringFile.replace("col_TipoDocumentoNotaVenta_col-->", "");

						sXmlStringFile=sXmlStringFile.replace("colancho_TipoDocumentoNotaVenta_colancho", iAnchoColumna.toString());
						sXmlStringFile=sXmlStringFile.replace("colx_TipoDocumentoNotaVenta_colx", iAnchoSum.toString());

						iAnchoSum+=iAnchoColumna;
					}

					break;

				case ConfiguracionPunVenConstantesFunciones.LABEL_IDTIPODOCUMENTONOTACREDITO:
					iAnchoColumna=100;

					if(iAnchoSum+iAnchoColumna<=iAnchoMaximoHorizontal) {
						sXmlStringFile=sXmlStringFile.replace("<!--col_TipoDocumentoNotaCredito_col", "");
						sXmlStringFile=sXmlStringFile.replace("col_TipoDocumentoNotaCredito_col-->", "");

						sXmlStringFile=sXmlStringFile.replace("colancho_TipoDocumentoNotaCredito_colancho", iAnchoColumna.toString());
						sXmlStringFile=sXmlStringFile.replace("colx_TipoDocumentoNotaCredito_colx", iAnchoSum.toString());

						iAnchoSum+=iAnchoColumna;
					}

					break;

				case ConfiguracionPunVenConstantesFunciones.LABEL_IDTIPODOCUMENTOTARJETACREDITO:
					iAnchoColumna=100;

					if(iAnchoSum+iAnchoColumna<=iAnchoMaximoHorizontal) {
						sXmlStringFile=sXmlStringFile.replace("<!--col_TipoDocumentoTarjetaCredito_col", "");
						sXmlStringFile=sXmlStringFile.replace("col_TipoDocumentoTarjetaCredito_col-->", "");

						sXmlStringFile=sXmlStringFile.replace("colancho_TipoDocumentoTarjetaCredito_colancho", iAnchoColumna.toString());
						sXmlStringFile=sXmlStringFile.replace("colx_TipoDocumentoTarjetaCredito_colx", iAnchoSum.toString());

						iAnchoSum+=iAnchoColumna;
					}

					break;

				case ConfiguracionPunVenConstantesFunciones.LABEL_IDFORMATOFACTURA:
					iAnchoColumna=100;

					if(iAnchoSum+iAnchoColumna<=iAnchoMaximoHorizontal) {
						sXmlStringFile=sXmlStringFile.replace("<!--col_FormatoFactura_col", "");
						sXmlStringFile=sXmlStringFile.replace("col_FormatoFactura_col-->", "");

						sXmlStringFile=sXmlStringFile.replace("colancho_FormatoFactura_colancho", iAnchoColumna.toString());
						sXmlStringFile=sXmlStringFile.replace("colx_FormatoFactura_colx", iAnchoSum.toString());

						iAnchoSum+=iAnchoColumna;
					}

					break;

				case ConfiguracionPunVenConstantesFunciones.LABEL_IDFORMATONOTAVENTA:
					iAnchoColumna=100;

					if(iAnchoSum+iAnchoColumna<=iAnchoMaximoHorizontal) {
						sXmlStringFile=sXmlStringFile.replace("<!--col_FormatoNotaVenta_col", "");
						sXmlStringFile=sXmlStringFile.replace("col_FormatoNotaVenta_col-->", "");

						sXmlStringFile=sXmlStringFile.replace("colancho_FormatoNotaVenta_colancho", iAnchoColumna.toString());
						sXmlStringFile=sXmlStringFile.replace("colx_FormatoNotaVenta_colx", iAnchoSum.toString());

						iAnchoSum+=iAnchoColumna;
					}

					break;

				case ConfiguracionPunVenConstantesFunciones.LABEL_IDFORMATONOTACREDITO:
					iAnchoColumna=100;

					if(iAnchoSum+iAnchoColumna<=iAnchoMaximoHorizontal) {
						sXmlStringFile=sXmlStringFile.replace("<!--col_FormatoNotaCredito_col", "");
						sXmlStringFile=sXmlStringFile.replace("col_FormatoNotaCredito_col-->", "");

						sXmlStringFile=sXmlStringFile.replace("colancho_FormatoNotaCredito_colancho", iAnchoColumna.toString());
						sXmlStringFile=sXmlStringFile.replace("colx_FormatoNotaCredito_colx", iAnchoSum.toString());

						iAnchoSum+=iAnchoColumna;
					}

					break;

				case ConfiguracionPunVenConstantesFunciones.LABEL_IDTRANSACCIONFACTURA:
					iAnchoColumna=100;

					if(iAnchoSum+iAnchoColumna<=iAnchoMaximoHorizontal) {
						sXmlStringFile=sXmlStringFile.replace("<!--col_TransaccionFactura_col", "");
						sXmlStringFile=sXmlStringFile.replace("col_TransaccionFactura_col-->", "");

						sXmlStringFile=sXmlStringFile.replace("colancho_TransaccionFactura_colancho", iAnchoColumna.toString());
						sXmlStringFile=sXmlStringFile.replace("colx_TransaccionFactura_colx", iAnchoSum.toString());

						iAnchoSum+=iAnchoColumna;
					}

					break;

				case ConfiguracionPunVenConstantesFunciones.LABEL_IDTRANSACCIONNOTAVENTA:
					iAnchoColumna=100;

					if(iAnchoSum+iAnchoColumna<=iAnchoMaximoHorizontal) {
						sXmlStringFile=sXmlStringFile.replace("<!--col_TransaccionNotaVenta_col", "");
						sXmlStringFile=sXmlStringFile.replace("col_TransaccionNotaVenta_col-->", "");

						sXmlStringFile=sXmlStringFile.replace("colancho_TransaccionNotaVenta_colancho", iAnchoColumna.toString());
						sXmlStringFile=sXmlStringFile.replace("colx_TransaccionNotaVenta_colx", iAnchoSum.toString());

						iAnchoSum+=iAnchoColumna;
					}

					break;

				case ConfiguracionPunVenConstantesFunciones.LABEL_IDTRANSACCIONNOTACREDITO:
					iAnchoColumna=100;

					if(iAnchoSum+iAnchoColumna<=iAnchoMaximoHorizontal) {
						sXmlStringFile=sXmlStringFile.replace("<!--col_TransaccionNotaCredito_col", "");
						sXmlStringFile=sXmlStringFile.replace("col_TransaccionNotaCredito_col-->", "");

						sXmlStringFile=sXmlStringFile.replace("colancho_TransaccionNotaCredito_colancho", iAnchoColumna.toString());
						sXmlStringFile=sXmlStringFile.replace("colx_TransaccionNotaCredito_colx", iAnchoSum.toString());

						iAnchoSum+=iAnchoColumna;
					}

					break;

				case ConfiguracionPunVenConstantesFunciones.LABEL_IDTRANSACCIONCUENTAFACTURA:
					iAnchoColumna=100;

					if(iAnchoSum+iAnchoColumna<=iAnchoMaximoHorizontal) {
						sXmlStringFile=sXmlStringFile.replace("<!--col_TransaccionCuentaFactura_col", "");
						sXmlStringFile=sXmlStringFile.replace("col_TransaccionCuentaFactura_col-->", "");

						sXmlStringFile=sXmlStringFile.replace("colancho_TransaccionCuentaFactura_colancho", iAnchoColumna.toString());
						sXmlStringFile=sXmlStringFile.replace("colx_TransaccionCuentaFactura_colx", iAnchoSum.toString());

						iAnchoSum+=iAnchoColumna;
					}

					break;

				case ConfiguracionPunVenConstantesFunciones.LABEL_IDTRANSACCIONCUENTANOTAVENTA:
					iAnchoColumna=100;

					if(iAnchoSum+iAnchoColumna<=iAnchoMaximoHorizontal) {
						sXmlStringFile=sXmlStringFile.replace("<!--col_TransaccionCuentaNotaVenta_col", "");
						sXmlStringFile=sXmlStringFile.replace("col_TransaccionCuentaNotaVenta_col-->", "");

						sXmlStringFile=sXmlStringFile.replace("colancho_TransaccionCuentaNotaVenta_colancho", iAnchoColumna.toString());
						sXmlStringFile=sXmlStringFile.replace("colx_TransaccionCuentaNotaVenta_colx", iAnchoSum.toString());

						iAnchoSum+=iAnchoColumna;
					}

					break;

				case ConfiguracionPunVenConstantesFunciones.LABEL_IDTRANSACCIONCUENTANOTACREDITO:
					iAnchoColumna=100;

					if(iAnchoSum+iAnchoColumna<=iAnchoMaximoHorizontal) {
						sXmlStringFile=sXmlStringFile.replace("<!--col_TransaccionCuentaNotaCredito_col", "");
						sXmlStringFile=sXmlStringFile.replace("col_TransaccionCuentaNotaCredito_col-->", "");

						sXmlStringFile=sXmlStringFile.replace("colancho_TransaccionCuentaNotaCredito_colancho", iAnchoColumna.toString());
						sXmlStringFile=sXmlStringFile.replace("colx_TransaccionCuentaNotaCredito_colx", iAnchoSum.toString());

						iAnchoSum+=iAnchoColumna;
					}

					break;
					
				default :
					break;
			}
		}
		
		iAnchoSum+=iAnchoMargenes;
		
		if(iAnchoSum>iAnchoMaximoVertical) {
			sXmlStringFile=sXmlStringFile.replace("595", "842");
			//sXmlStringFile=sXmlStringFile.replace("842", "595");
			sXmlStringFile=sXmlStringFile.replace("535", "782");
			sXmlStringFile=sXmlStringFile.replace("Portrait", "Landscape");			
			sWidthGrafico="782";
		
		} else {
			sXmlStringFile=sXmlStringFile.replace("842", "595");
			//sXmlStringFile=sXmlStringFile.replace("595", "842");
			sXmlStringFile=sXmlStringFile.replace("782", "535");
			sXmlStringFile=sXmlStringFile.replace("Landscape", "Portrait");
			sWidthGrafico="535";
		}
		
		if(this.jInternalFrameReporteDinamicoConfiguracionPunVen.getjCheckBoxConGraficoDinamico().isSelected()) {
			sXmlStringFile=this.actualizarGraficoReporteDinamico(sXmlStringFile,sWidthGrafico);
		} else {
			sXmlStringFile=sXmlStringFile.replace("colancho_summary_colancho", "30");
		}
		
		return sXmlStringFile;
	}
	
	
	
	public String actualizarGraficoReporteDinamico(String sXmlStringFile,String sWidthGrafico) {		
		String strGrafico="";		
		String sTipo="NORMAL";
		String strCategorySeries="";
		String sNombreCampoCategoria="";
		String sNombreCampoCategoriaValor="";
		Reporte reporte=new Reporte();
		Reporte reporteCategoriaValor=new Reporte();
		Reporte reporteTipoGraficoReporte=new Reporte();
		Boolean existe=false;
		
		sXmlStringFile=sXmlStringFile.replace("colancho_summary_colancho", "280");
		
		//CATEGORIA GRAFICO				
		reporte=((Reporte)this.jInternalFrameReporteDinamicoConfiguracionPunVen.getjComboBoxColumnaCategoriaGrafico().getSelectedItem());
				
		//TIPO GRAFICO REPORTE
		reporteTipoGraficoReporte=((Reporte)this.jInternalFrameReporteDinamicoConfiguracionPunVen.getjComboBoxTiposGraficosReportesDinamico().getSelectedItem());
		
		String sTipoGraficoReporte=reporteTipoGraficoReporte.getsCodigo();
		
		switch(reporte.getsCodigo()) {
			
				case ConfiguracionPunVenConstantesFunciones.LABEL_IDEMPRESA:
					sNombreCampoCategoria="id_empresa";
					break;

				case ConfiguracionPunVenConstantesFunciones.LABEL_IDSUCURSAL:
					sNombreCampoCategoria="id_sucursal";
					break;

				case ConfiguracionPunVenConstantesFunciones.LABEL_IDBODEGA:
					sNombreCampoCategoria="id_bodega";
					break;

				case ConfiguracionPunVenConstantesFunciones.LABEL_IDCUENTACONTABLEEFECTIVO:
					sNombreCampoCategoria="id_cuenta_contable_efectivo";
					break;

				case ConfiguracionPunVenConstantesFunciones.LABEL_IDCUENTACONTABLEICE:
					sNombreCampoCategoria="id_cuenta_contable_ice";
					break;

				case ConfiguracionPunVenConstantesFunciones.LABEL_IDCUENTACONTABLEOTROS:
					sNombreCampoCategoria="id_cuenta_contable_otros";
					break;

				case ConfiguracionPunVenConstantesFunciones.LABEL_IDCLIENTECONSUMIDORFINAL:
					sNombreCampoCategoria="id_cliente_consumidor_final";
					break;

				case ConfiguracionPunVenConstantesFunciones.LABEL_IDTIPODOCUMENTOFACTURA:
					sNombreCampoCategoria="id_tipo_documento_factura";
					break;

				case ConfiguracionPunVenConstantesFunciones.LABEL_IDTIPODOCUMENTONOTAVENTA:
					sNombreCampoCategoria="id_tipo_documento_nota_venta";
					break;

				case ConfiguracionPunVenConstantesFunciones.LABEL_IDTIPODOCUMENTONOTACREDITO:
					sNombreCampoCategoria="id_tipo_documento_nota_credito";
					break;

				case ConfiguracionPunVenConstantesFunciones.LABEL_IDTIPODOCUMENTOTARJETACREDITO:
					sNombreCampoCategoria="id_tipo_documento_tarjeta_credito";
					break;

				case ConfiguracionPunVenConstantesFunciones.LABEL_IDFORMATOFACTURA:
					sNombreCampoCategoria="id_formato_factura";
					break;

				case ConfiguracionPunVenConstantesFunciones.LABEL_IDFORMATONOTAVENTA:
					sNombreCampoCategoria="id_formato_nota_venta";
					break;

				case ConfiguracionPunVenConstantesFunciones.LABEL_IDFORMATONOTACREDITO:
					sNombreCampoCategoria="id_formato_nota_credito";
					break;

				case ConfiguracionPunVenConstantesFunciones.LABEL_IDTRANSACCIONFACTURA:
					sNombreCampoCategoria="id_transaccion_factura";
					break;

				case ConfiguracionPunVenConstantesFunciones.LABEL_IDTRANSACCIONNOTAVENTA:
					sNombreCampoCategoria="id_transaccion_nota_venta";
					break;

				case ConfiguracionPunVenConstantesFunciones.LABEL_IDTRANSACCIONNOTACREDITO:
					sNombreCampoCategoria="id_transaccion_nota_credito";
					break;

				case ConfiguracionPunVenConstantesFunciones.LABEL_IDTRANSACCIONCUENTAFACTURA:
					sNombreCampoCategoria="id_transaccion_cuenta_factura";
					break;

				case ConfiguracionPunVenConstantesFunciones.LABEL_IDTRANSACCIONCUENTANOTAVENTA:
					sNombreCampoCategoria="id_transaccion_cuenta_nota_venta";
					break;

				case ConfiguracionPunVenConstantesFunciones.LABEL_IDTRANSACCIONCUENTANOTACREDITO:
					sNombreCampoCategoria="id_transaccion_cuenta_nota_credito";
					break;
					
			default :
				break;
		}		
		//CATEGORIA GRAFICO
		
		//CATEGORIA VALOR				
		reporteCategoriaValor=((Reporte)this.jInternalFrameReporteDinamicoConfiguracionPunVen.getjComboBoxColumnaCategoriaValor().getSelectedItem());
		
		switch(reporteCategoriaValor.getsCodigo()) {
			
				case ConfiguracionPunVenConstantesFunciones.LABEL_IDEMPRESA:
					sNombreCampoCategoriaValor="id_empresa";
					break;

				case ConfiguracionPunVenConstantesFunciones.LABEL_IDSUCURSAL:
					sNombreCampoCategoriaValor="id_sucursal";
					break;

				case ConfiguracionPunVenConstantesFunciones.LABEL_IDBODEGA:
					sNombreCampoCategoriaValor="id_bodega";
					break;

				case ConfiguracionPunVenConstantesFunciones.LABEL_IDCUENTACONTABLEEFECTIVO:
					sNombreCampoCategoriaValor="id_cuenta_contable_efectivo";
					break;

				case ConfiguracionPunVenConstantesFunciones.LABEL_IDCUENTACONTABLEICE:
					sNombreCampoCategoriaValor="id_cuenta_contable_ice";
					break;

				case ConfiguracionPunVenConstantesFunciones.LABEL_IDCUENTACONTABLEOTROS:
					sNombreCampoCategoriaValor="id_cuenta_contable_otros";
					break;

				case ConfiguracionPunVenConstantesFunciones.LABEL_IDCLIENTECONSUMIDORFINAL:
					sNombreCampoCategoriaValor="id_cliente_consumidor_final";
					break;

				case ConfiguracionPunVenConstantesFunciones.LABEL_IDTIPODOCUMENTOFACTURA:
					sNombreCampoCategoriaValor="id_tipo_documento_factura";
					break;

				case ConfiguracionPunVenConstantesFunciones.LABEL_IDTIPODOCUMENTONOTAVENTA:
					sNombreCampoCategoriaValor="id_tipo_documento_nota_venta";
					break;

				case ConfiguracionPunVenConstantesFunciones.LABEL_IDTIPODOCUMENTONOTACREDITO:
					sNombreCampoCategoriaValor="id_tipo_documento_nota_credito";
					break;

				case ConfiguracionPunVenConstantesFunciones.LABEL_IDTIPODOCUMENTOTARJETACREDITO:
					sNombreCampoCategoriaValor="id_tipo_documento_tarjeta_credito";
					break;

				case ConfiguracionPunVenConstantesFunciones.LABEL_IDFORMATOFACTURA:
					sNombreCampoCategoriaValor="id_formato_factura";
					break;

				case ConfiguracionPunVenConstantesFunciones.LABEL_IDFORMATONOTAVENTA:
					sNombreCampoCategoriaValor="id_formato_nota_venta";
					break;

				case ConfiguracionPunVenConstantesFunciones.LABEL_IDFORMATONOTACREDITO:
					sNombreCampoCategoriaValor="id_formato_nota_credito";
					break;

				case ConfiguracionPunVenConstantesFunciones.LABEL_IDTRANSACCIONFACTURA:
					sNombreCampoCategoriaValor="id_transaccion_factura";
					break;

				case ConfiguracionPunVenConstantesFunciones.LABEL_IDTRANSACCIONNOTAVENTA:
					sNombreCampoCategoriaValor="id_transaccion_nota_venta";
					break;

				case ConfiguracionPunVenConstantesFunciones.LABEL_IDTRANSACCIONNOTACREDITO:
					sNombreCampoCategoriaValor="id_transaccion_nota_credito";
					break;

				case ConfiguracionPunVenConstantesFunciones.LABEL_IDTRANSACCIONCUENTAFACTURA:
					sNombreCampoCategoriaValor="id_transaccion_cuenta_factura";
					break;

				case ConfiguracionPunVenConstantesFunciones.LABEL_IDTRANSACCIONCUENTANOTAVENTA:
					sNombreCampoCategoriaValor="id_transaccion_cuenta_nota_venta";
					break;

				case ConfiguracionPunVenConstantesFunciones.LABEL_IDTRANSACCIONCUENTANOTACREDITO:
					sNombreCampoCategoriaValor="id_transaccion_cuenta_nota_credito";
					break;
					
			default :
				break;
		}	
		//CATEGORIA VALOR
		
		//VALORES GRAFICO
		for(int index:this.jInternalFrameReporteDinamicoConfiguracionPunVen.getjListColumnasValoresGrafico().getSelectedIndices()) {
			reporte=(Reporte)this.jInternalFrameReporteDinamicoConfiguracionPunVen.getjListColumnasValoresGrafico().getModel().getElementAt(index);
			
			switch(reporte.getsCodigo()) {
				
				case ConfiguracionPunVenConstantesFunciones.LABEL_IDEMPRESA:
					strCategorySeries+=FuncionesReporte.getStringCategoryGraficoNormalReporte(sTipoGraficoReporte,"Empresa",sNombreCampoCategoria,sNombreCampoCategoriaValor,"id_empresa");
					break;

				case ConfiguracionPunVenConstantesFunciones.LABEL_IDSUCURSAL:
					strCategorySeries+=FuncionesReporte.getStringCategoryGraficoNormalReporte(sTipoGraficoReporte,"Sucursal",sNombreCampoCategoria,sNombreCampoCategoriaValor,"id_sucursal");
					break;

				case ConfiguracionPunVenConstantesFunciones.LABEL_IDBODEGA:
					strCategorySeries+=FuncionesReporte.getStringCategoryGraficoNormalReporte(sTipoGraficoReporte,"Bodega",sNombreCampoCategoria,sNombreCampoCategoriaValor,"id_bodega");
					break;

				case ConfiguracionPunVenConstantesFunciones.LABEL_IDCUENTACONTABLEEFECTIVO:
					strCategorySeries+=FuncionesReporte.getStringCategoryGraficoNormalReporte(sTipoGraficoReporte,"Cta Contable Efectivo",sNombreCampoCategoria,sNombreCampoCategoriaValor,"id_cuenta_contable_efectivo");
					break;

				case ConfiguracionPunVenConstantesFunciones.LABEL_IDCUENTACONTABLEICE:
					strCategorySeries+=FuncionesReporte.getStringCategoryGraficoNormalReporte(sTipoGraficoReporte,"Cta Contable Ice",sNombreCampoCategoria,sNombreCampoCategoriaValor,"id_cuenta_contable_ice");
					break;

				case ConfiguracionPunVenConstantesFunciones.LABEL_IDCUENTACONTABLEOTROS:
					strCategorySeries+=FuncionesReporte.getStringCategoryGraficoNormalReporte(sTipoGraficoReporte,"Cta Contable Otros",sNombreCampoCategoria,sNombreCampoCategoriaValor,"id_cuenta_contable_otros");
					break;

				case ConfiguracionPunVenConstantesFunciones.LABEL_IDCLIENTECONSUMIDORFINAL:
					strCategorySeries+=FuncionesReporte.getStringCategoryGraficoNormalReporte(sTipoGraficoReporte,"Cliente Consumor Final",sNombreCampoCategoria,sNombreCampoCategoriaValor,"id_cliente_consumidor_final");
					break;

				case ConfiguracionPunVenConstantesFunciones.LABEL_IDTIPODOCUMENTOFACTURA:
					strCategorySeries+=FuncionesReporte.getStringCategoryGraficoNormalReporte(sTipoGraficoReporte,"T Documento Factura",sNombreCampoCategoria,sNombreCampoCategoriaValor,"id_tipo_documento_factura");
					break;

				case ConfiguracionPunVenConstantesFunciones.LABEL_IDTIPODOCUMENTONOTAVENTA:
					strCategorySeries+=FuncionesReporte.getStringCategoryGraficoNormalReporte(sTipoGraficoReporte,"T Documento Nota Venta",sNombreCampoCategoria,sNombreCampoCategoriaValor,"id_tipo_documento_nota_venta");
					break;

				case ConfiguracionPunVenConstantesFunciones.LABEL_IDTIPODOCUMENTONOTACREDITO:
					strCategorySeries+=FuncionesReporte.getStringCategoryGraficoNormalReporte(sTipoGraficoReporte,"T Documento Nota Credito",sNombreCampoCategoria,sNombreCampoCategoriaValor,"id_tipo_documento_nota_credito");
					break;

				case ConfiguracionPunVenConstantesFunciones.LABEL_IDTIPODOCUMENTOTARJETACREDITO:
					strCategorySeries+=FuncionesReporte.getStringCategoryGraficoNormalReporte(sTipoGraficoReporte,"T Documento Tarjeta Credito",sNombreCampoCategoria,sNombreCampoCategoriaValor,"id_tipo_documento_tarjeta_credito");
					break;

				case ConfiguracionPunVenConstantesFunciones.LABEL_IDFORMATOFACTURA:
					strCategorySeries+=FuncionesReporte.getStringCategoryGraficoNormalReporte(sTipoGraficoReporte,"Formato Factura",sNombreCampoCategoria,sNombreCampoCategoriaValor,"id_formato_factura");
					break;

				case ConfiguracionPunVenConstantesFunciones.LABEL_IDFORMATONOTAVENTA:
					strCategorySeries+=FuncionesReporte.getStringCategoryGraficoNormalReporte(sTipoGraficoReporte,"Formato Nota Venta",sNombreCampoCategoria,sNombreCampoCategoriaValor,"id_formato_nota_venta");
					break;

				case ConfiguracionPunVenConstantesFunciones.LABEL_IDFORMATONOTACREDITO:
					strCategorySeries+=FuncionesReporte.getStringCategoryGraficoNormalReporte(sTipoGraficoReporte,"Formato Nota Credito",sNombreCampoCategoria,sNombreCampoCategoriaValor,"id_formato_nota_credito");
					break;

				case ConfiguracionPunVenConstantesFunciones.LABEL_IDTRANSACCIONFACTURA:
					strCategorySeries+=FuncionesReporte.getStringCategoryGraficoNormalReporte(sTipoGraficoReporte,"Transaccion Factura",sNombreCampoCategoria,sNombreCampoCategoriaValor,"id_transaccion_factura");
					break;

				case ConfiguracionPunVenConstantesFunciones.LABEL_IDTRANSACCIONNOTAVENTA:
					strCategorySeries+=FuncionesReporte.getStringCategoryGraficoNormalReporte(sTipoGraficoReporte,"Transaccion Nota Venta",sNombreCampoCategoria,sNombreCampoCategoriaValor,"id_transaccion_nota_venta");
					break;

				case ConfiguracionPunVenConstantesFunciones.LABEL_IDTRANSACCIONNOTACREDITO:
					strCategorySeries+=FuncionesReporte.getStringCategoryGraficoNormalReporte(sTipoGraficoReporte,"Transaccion Nota Credito",sNombreCampoCategoria,sNombreCampoCategoriaValor,"id_transaccion_nota_credito");
					break;

				case ConfiguracionPunVenConstantesFunciones.LABEL_IDTRANSACCIONCUENTAFACTURA:
					strCategorySeries+=FuncionesReporte.getStringCategoryGraficoNormalReporte(sTipoGraficoReporte,"Transaccion Cuenta Factura",sNombreCampoCategoria,sNombreCampoCategoriaValor,"id_transaccion_cuenta_factura");
					break;

				case ConfiguracionPunVenConstantesFunciones.LABEL_IDTRANSACCIONCUENTANOTAVENTA:
					strCategorySeries+=FuncionesReporte.getStringCategoryGraficoNormalReporte(sTipoGraficoReporte,"Transaccion Cuenta Nota Venta",sNombreCampoCategoria,sNombreCampoCategoriaValor,"id_transaccion_cuenta_nota_venta");
					break;

				case ConfiguracionPunVenConstantesFunciones.LABEL_IDTRANSACCIONCUENTANOTACREDITO:
					strCategorySeries+=FuncionesReporte.getStringCategoryGraficoNormalReporte(sTipoGraficoReporte,"Transaccion Cuenta Nota Credito",sNombreCampoCategoria,sNombreCampoCategoriaValor,"id_transaccion_cuenta_nota_credito");
					break;
					
				default :
					break;
			}
		}
		//VALORES GRAFICO
		//if(sTipoGraficoReporte.equals("BARRAS") || sTipoGraficoReporte.equals("BARRAS_3D") || sTipoGraficoReporte.equals("BARRAS_XY") ||
		//   sTipoGraficoReporte.equals("PASTEL") || sTipoGraficoReporte.equals("PASTEL_3D") || sTipoGraficoReporte.equals("APILADO")) {
			
			existe=true;
			strGrafico=FuncionesReporte.getStringGraficoReporte(sTipoGraficoReporte,sWidthGrafico,strCategorySeries);			
		//}
		
		if(existe) {
			sXmlStringFile=sXmlStringFile.replace("<!--GRAFICO-->", strGrafico);
		}												
		
		return sXmlStringFile;
	}
	
	
	//@SuppressWarnings("deprecation")
	
	public void jButtonGenerarExcelReporteDinamicoConfiguracionPunVenActionPerformed(ActionEvent evt) throws Exception {		
		ArrayList<ConfiguracionPunVen> configuracionpunvensSeleccionados=new ArrayList<ConfiguracionPunVen>();		
		
		configuracionpunvensSeleccionados=this.getConfiguracionPunVensSeleccionados(true);
		
		String sTipo=Funciones2.getTipoExportar(this.parametroGeneralUsuario);
		Boolean conCabecera=this.parametroGeneralUsuario.getcon_exportar_cabecera();
		String sDelimiter=Funciones2.getTipoDelimiter(this.parametroGeneralUsuario);
		String sPath=this.parametroGeneralUsuario.getpath_exportar()+"configuracionpunven";//.xls";
		
		String sFilaCabecera="";
		String sFilaDatos="";
		
		Boolean existeFilas=false;
		
		Workbook workbook = null;
		FileOutputStream fileOutputStream=null;
		Reporte reporte=new Reporte();
		
		try {
			
			if(sTipoArchivoReporte=="EXCEL2") {
				workbook = new HSSFWorkbook();
				sPath+=".xls";
			
			} else if(sTipoArchivoReporte=="EXCEL2_2") {
				workbook = new XSSFWorkbook();
				sPath+=".xlsx";			
			}
		
			Sheet sheet = workbook.createSheet("ConfiguracionPunVens");
						
		    			
			Integer iRow=0;
			Integer iCell=0;
			
			Row row = sheet.createRow(iRow);
			Cell cell = row.createCell(iCell);
			//cell.setCellValue("Blahblah");
			
			for(int index:this.jInternalFrameReporteDinamicoConfiguracionPunVen.getjListColumnasSelectReporte().getSelectedIndices()) {
				reporte=(Reporte)this.jInternalFrameReporteDinamicoConfiguracionPunVen.getjListColumnasSelectReporte().getModel().getElementAt(index);
				
				switch(reporte.getsCodigo()) {
					
				case ConfiguracionPunVenConstantesFunciones.LABEL_IDEMPRESA:
					iRow=0;

					if(!existeFilas) {row = sheet.createRow(iRow);} else {row=sheet.getRow(iRow);}

					cell = row.createCell(iCell);
					cell.setCellValue(ConfiguracionPunVenConstantesFunciones.LABEL_IDEMPRESA);
					iRow++;

					for(ConfiguracionPunVen configuracionpunven:configuracionpunvensSeleccionados) {
						if(!existeFilas) {row = sheet.createRow(iRow);} else {row=sheet.getRow(iRow);}

						cell = row.createCell(iCell);
						cell.setCellValue(configuracionpunven.getempresa_descripcion());
						iRow++;
					}

					existeFilas=true;
					iCell++;
					break;

				case ConfiguracionPunVenConstantesFunciones.LABEL_IDSUCURSAL:
					iRow=0;

					if(!existeFilas) {row = sheet.createRow(iRow);} else {row=sheet.getRow(iRow);}

					cell = row.createCell(iCell);
					cell.setCellValue(ConfiguracionPunVenConstantesFunciones.LABEL_IDSUCURSAL);
					iRow++;

					for(ConfiguracionPunVen configuracionpunven:configuracionpunvensSeleccionados) {
						if(!existeFilas) {row = sheet.createRow(iRow);} else {row=sheet.getRow(iRow);}

						cell = row.createCell(iCell);
						cell.setCellValue(configuracionpunven.getsucursal_descripcion());
						iRow++;
					}

					existeFilas=true;
					iCell++;
					break;

				case ConfiguracionPunVenConstantesFunciones.LABEL_IDBODEGA:
					iRow=0;

					if(!existeFilas) {row = sheet.createRow(iRow);} else {row=sheet.getRow(iRow);}

					cell = row.createCell(iCell);
					cell.setCellValue(ConfiguracionPunVenConstantesFunciones.LABEL_IDBODEGA);
					iRow++;

					for(ConfiguracionPunVen configuracionpunven:configuracionpunvensSeleccionados) {
						if(!existeFilas) {row = sheet.createRow(iRow);} else {row=sheet.getRow(iRow);}

						cell = row.createCell(iCell);
						cell.setCellValue(configuracionpunven.getbodega_descripcion());
						iRow++;
					}

					existeFilas=true;
					iCell++;
					break;

				case ConfiguracionPunVenConstantesFunciones.LABEL_IDCUENTACONTABLEEFECTIVO:
					iRow=0;

					if(!existeFilas) {row = sheet.createRow(iRow);} else {row=sheet.getRow(iRow);}

					cell = row.createCell(iCell);
					cell.setCellValue(ConfiguracionPunVenConstantesFunciones.LABEL_IDCUENTACONTABLEEFECTIVO);
					iRow++;

					for(ConfiguracionPunVen configuracionpunven:configuracionpunvensSeleccionados) {
						if(!existeFilas) {row = sheet.createRow(iRow);} else {row=sheet.getRow(iRow);}

						cell = row.createCell(iCell);
						cell.setCellValue(configuracionpunven.getcuentacontableefectivo_descripcion());
						iRow++;
					}

					existeFilas=true;
					iCell++;
					break;

				case ConfiguracionPunVenConstantesFunciones.LABEL_IDCUENTACONTABLEICE:
					iRow=0;

					if(!existeFilas) {row = sheet.createRow(iRow);} else {row=sheet.getRow(iRow);}

					cell = row.createCell(iCell);
					cell.setCellValue(ConfiguracionPunVenConstantesFunciones.LABEL_IDCUENTACONTABLEICE);
					iRow++;

					for(ConfiguracionPunVen configuracionpunven:configuracionpunvensSeleccionados) {
						if(!existeFilas) {row = sheet.createRow(iRow);} else {row=sheet.getRow(iRow);}

						cell = row.createCell(iCell);
						cell.setCellValue(configuracionpunven.getcuentacontableice_descripcion());
						iRow++;
					}

					existeFilas=true;
					iCell++;
					break;

				case ConfiguracionPunVenConstantesFunciones.LABEL_IDCUENTACONTABLEOTROS:
					iRow=0;

					if(!existeFilas) {row = sheet.createRow(iRow);} else {row=sheet.getRow(iRow);}

					cell = row.createCell(iCell);
					cell.setCellValue(ConfiguracionPunVenConstantesFunciones.LABEL_IDCUENTACONTABLEOTROS);
					iRow++;

					for(ConfiguracionPunVen configuracionpunven:configuracionpunvensSeleccionados) {
						if(!existeFilas) {row = sheet.createRow(iRow);} else {row=sheet.getRow(iRow);}

						cell = row.createCell(iCell);
						cell.setCellValue(configuracionpunven.getcuentacontableotros_descripcion());
						iRow++;
					}

					existeFilas=true;
					iCell++;
					break;

				case ConfiguracionPunVenConstantesFunciones.LABEL_IDCLIENTECONSUMIDORFINAL:
					iRow=0;

					if(!existeFilas) {row = sheet.createRow(iRow);} else {row=sheet.getRow(iRow);}

					cell = row.createCell(iCell);
					cell.setCellValue(ConfiguracionPunVenConstantesFunciones.LABEL_IDCLIENTECONSUMIDORFINAL);
					iRow++;

					for(ConfiguracionPunVen configuracionpunven:configuracionpunvensSeleccionados) {
						if(!existeFilas) {row = sheet.createRow(iRow);} else {row=sheet.getRow(iRow);}

						cell = row.createCell(iCell);
						cell.setCellValue(configuracionpunven.getclienteconsumidorfinal_descripcion());
						iRow++;
					}

					existeFilas=true;
					iCell++;
					break;

				case ConfiguracionPunVenConstantesFunciones.LABEL_IDTIPODOCUMENTOFACTURA:
					iRow=0;

					if(!existeFilas) {row = sheet.createRow(iRow);} else {row=sheet.getRow(iRow);}

					cell = row.createCell(iCell);
					cell.setCellValue(ConfiguracionPunVenConstantesFunciones.LABEL_IDTIPODOCUMENTOFACTURA);
					iRow++;

					for(ConfiguracionPunVen configuracionpunven:configuracionpunvensSeleccionados) {
						if(!existeFilas) {row = sheet.createRow(iRow);} else {row=sheet.getRow(iRow);}

						cell = row.createCell(iCell);
						cell.setCellValue(configuracionpunven.gettipodocumentofactura_descripcion());
						iRow++;
					}

					existeFilas=true;
					iCell++;
					break;

				case ConfiguracionPunVenConstantesFunciones.LABEL_IDTIPODOCUMENTONOTAVENTA:
					iRow=0;

					if(!existeFilas) {row = sheet.createRow(iRow);} else {row=sheet.getRow(iRow);}

					cell = row.createCell(iCell);
					cell.setCellValue(ConfiguracionPunVenConstantesFunciones.LABEL_IDTIPODOCUMENTONOTAVENTA);
					iRow++;

					for(ConfiguracionPunVen configuracionpunven:configuracionpunvensSeleccionados) {
						if(!existeFilas) {row = sheet.createRow(iRow);} else {row=sheet.getRow(iRow);}

						cell = row.createCell(iCell);
						cell.setCellValue(configuracionpunven.gettipodocumentonotaventa_descripcion());
						iRow++;
					}

					existeFilas=true;
					iCell++;
					break;

				case ConfiguracionPunVenConstantesFunciones.LABEL_IDTIPODOCUMENTONOTACREDITO:
					iRow=0;

					if(!existeFilas) {row = sheet.createRow(iRow);} else {row=sheet.getRow(iRow);}

					cell = row.createCell(iCell);
					cell.setCellValue(ConfiguracionPunVenConstantesFunciones.LABEL_IDTIPODOCUMENTONOTACREDITO);
					iRow++;

					for(ConfiguracionPunVen configuracionpunven:configuracionpunvensSeleccionados) {
						if(!existeFilas) {row = sheet.createRow(iRow);} else {row=sheet.getRow(iRow);}

						cell = row.createCell(iCell);
						cell.setCellValue(configuracionpunven.gettipodocumentonotacredito_descripcion());
						iRow++;
					}

					existeFilas=true;
					iCell++;
					break;

				case ConfiguracionPunVenConstantesFunciones.LABEL_IDTIPODOCUMENTOTARJETACREDITO:
					iRow=0;

					if(!existeFilas) {row = sheet.createRow(iRow);} else {row=sheet.getRow(iRow);}

					cell = row.createCell(iCell);
					cell.setCellValue(ConfiguracionPunVenConstantesFunciones.LABEL_IDTIPODOCUMENTOTARJETACREDITO);
					iRow++;

					for(ConfiguracionPunVen configuracionpunven:configuracionpunvensSeleccionados) {
						if(!existeFilas) {row = sheet.createRow(iRow);} else {row=sheet.getRow(iRow);}

						cell = row.createCell(iCell);
						cell.setCellValue(configuracionpunven.gettipodocumentotarjetacredito_descripcion());
						iRow++;
					}

					existeFilas=true;
					iCell++;
					break;

				case ConfiguracionPunVenConstantesFunciones.LABEL_IDFORMATOFACTURA:
					iRow=0;

					if(!existeFilas) {row = sheet.createRow(iRow);} else {row=sheet.getRow(iRow);}

					cell = row.createCell(iCell);
					cell.setCellValue(ConfiguracionPunVenConstantesFunciones.LABEL_IDFORMATOFACTURA);
					iRow++;

					for(ConfiguracionPunVen configuracionpunven:configuracionpunvensSeleccionados) {
						if(!existeFilas) {row = sheet.createRow(iRow);} else {row=sheet.getRow(iRow);}

						cell = row.createCell(iCell);
						cell.setCellValue(configuracionpunven.getformatofactura_descripcion());
						iRow++;
					}

					existeFilas=true;
					iCell++;
					break;

				case ConfiguracionPunVenConstantesFunciones.LABEL_IDFORMATONOTAVENTA:
					iRow=0;

					if(!existeFilas) {row = sheet.createRow(iRow);} else {row=sheet.getRow(iRow);}

					cell = row.createCell(iCell);
					cell.setCellValue(ConfiguracionPunVenConstantesFunciones.LABEL_IDFORMATONOTAVENTA);
					iRow++;

					for(ConfiguracionPunVen configuracionpunven:configuracionpunvensSeleccionados) {
						if(!existeFilas) {row = sheet.createRow(iRow);} else {row=sheet.getRow(iRow);}

						cell = row.createCell(iCell);
						cell.setCellValue(configuracionpunven.getformatonotaventa_descripcion());
						iRow++;
					}

					existeFilas=true;
					iCell++;
					break;

				case ConfiguracionPunVenConstantesFunciones.LABEL_IDFORMATONOTACREDITO:
					iRow=0;

					if(!existeFilas) {row = sheet.createRow(iRow);} else {row=sheet.getRow(iRow);}

					cell = row.createCell(iCell);
					cell.setCellValue(ConfiguracionPunVenConstantesFunciones.LABEL_IDFORMATONOTACREDITO);
					iRow++;

					for(ConfiguracionPunVen configuracionpunven:configuracionpunvensSeleccionados) {
						if(!existeFilas) {row = sheet.createRow(iRow);} else {row=sheet.getRow(iRow);}

						cell = row.createCell(iCell);
						cell.setCellValue(configuracionpunven.getformatonotacredito_descripcion());
						iRow++;
					}

					existeFilas=true;
					iCell++;
					break;

				case ConfiguracionPunVenConstantesFunciones.LABEL_IDTRANSACCIONFACTURA:
					iRow=0;

					if(!existeFilas) {row = sheet.createRow(iRow);} else {row=sheet.getRow(iRow);}

					cell = row.createCell(iCell);
					cell.setCellValue(ConfiguracionPunVenConstantesFunciones.LABEL_IDTRANSACCIONFACTURA);
					iRow++;

					for(ConfiguracionPunVen configuracionpunven:configuracionpunvensSeleccionados) {
						if(!existeFilas) {row = sheet.createRow(iRow);} else {row=sheet.getRow(iRow);}

						cell = row.createCell(iCell);
						cell.setCellValue(configuracionpunven.gettransaccionfactura_descripcion());
						iRow++;
					}

					existeFilas=true;
					iCell++;
					break;

				case ConfiguracionPunVenConstantesFunciones.LABEL_IDTRANSACCIONNOTAVENTA:
					iRow=0;

					if(!existeFilas) {row = sheet.createRow(iRow);} else {row=sheet.getRow(iRow);}

					cell = row.createCell(iCell);
					cell.setCellValue(ConfiguracionPunVenConstantesFunciones.LABEL_IDTRANSACCIONNOTAVENTA);
					iRow++;

					for(ConfiguracionPunVen configuracionpunven:configuracionpunvensSeleccionados) {
						if(!existeFilas) {row = sheet.createRow(iRow);} else {row=sheet.getRow(iRow);}

						cell = row.createCell(iCell);
						cell.setCellValue(configuracionpunven.gettransaccionnotaventa_descripcion());
						iRow++;
					}

					existeFilas=true;
					iCell++;
					break;

				case ConfiguracionPunVenConstantesFunciones.LABEL_IDTRANSACCIONNOTACREDITO:
					iRow=0;

					if(!existeFilas) {row = sheet.createRow(iRow);} else {row=sheet.getRow(iRow);}

					cell = row.createCell(iCell);
					cell.setCellValue(ConfiguracionPunVenConstantesFunciones.LABEL_IDTRANSACCIONNOTACREDITO);
					iRow++;

					for(ConfiguracionPunVen configuracionpunven:configuracionpunvensSeleccionados) {
						if(!existeFilas) {row = sheet.createRow(iRow);} else {row=sheet.getRow(iRow);}

						cell = row.createCell(iCell);
						cell.setCellValue(configuracionpunven.gettransaccionnotacredito_descripcion());
						iRow++;
					}

					existeFilas=true;
					iCell++;
					break;

				case ConfiguracionPunVenConstantesFunciones.LABEL_IDTRANSACCIONCUENTAFACTURA:
					iRow=0;

					if(!existeFilas) {row = sheet.createRow(iRow);} else {row=sheet.getRow(iRow);}

					cell = row.createCell(iCell);
					cell.setCellValue(ConfiguracionPunVenConstantesFunciones.LABEL_IDTRANSACCIONCUENTAFACTURA);
					iRow++;

					for(ConfiguracionPunVen configuracionpunven:configuracionpunvensSeleccionados) {
						if(!existeFilas) {row = sheet.createRow(iRow);} else {row=sheet.getRow(iRow);}

						cell = row.createCell(iCell);
						cell.setCellValue(configuracionpunven.gettransaccioncuentafactura_descripcion());
						iRow++;
					}

					existeFilas=true;
					iCell++;
					break;

				case ConfiguracionPunVenConstantesFunciones.LABEL_IDTRANSACCIONCUENTANOTAVENTA:
					iRow=0;

					if(!existeFilas) {row = sheet.createRow(iRow);} else {row=sheet.getRow(iRow);}

					cell = row.createCell(iCell);
					cell.setCellValue(ConfiguracionPunVenConstantesFunciones.LABEL_IDTRANSACCIONCUENTANOTAVENTA);
					iRow++;

					for(ConfiguracionPunVen configuracionpunven:configuracionpunvensSeleccionados) {
						if(!existeFilas) {row = sheet.createRow(iRow);} else {row=sheet.getRow(iRow);}

						cell = row.createCell(iCell);
						cell.setCellValue(configuracionpunven.gettransaccioncuentanotaventa_descripcion());
						iRow++;
					}

					existeFilas=true;
					iCell++;
					break;

				case ConfiguracionPunVenConstantesFunciones.LABEL_IDTRANSACCIONCUENTANOTACREDITO:
					iRow=0;

					if(!existeFilas) {row = sheet.createRow(iRow);} else {row=sheet.getRow(iRow);}

					cell = row.createCell(iCell);
					cell.setCellValue(ConfiguracionPunVenConstantesFunciones.LABEL_IDTRANSACCIONCUENTANOTACREDITO);
					iRow++;

					for(ConfiguracionPunVen configuracionpunven:configuracionpunvensSeleccionados) {
						if(!existeFilas) {row = sheet.createRow(iRow);} else {row=sheet.getRow(iRow);}

						cell = row.createCell(iCell);
						cell.setCellValue(configuracionpunven.gettransaccioncuentanotacredito_descripcion());
						iRow++;
					}

					existeFilas=true;
					iCell++;
					break;
					
					default :
						break;
				}
			}
			
			
			//if(conCabecera) {
			//	this.getFilaCabeceraExportarExcelConfiguracionPunVen(row);				
			//	iRow++;
			//}				
			
			//for(ConfiguracionPunVen configuracionpunvenAux:configuracionpunvensSeleccionados) {
			//	row = sheet.createRow(iRow);
				
			//	this.getFilaDatosExportarExcelConfiguracionPunVen(configuracionpunvenAux,row);
				
			//	iRow++;
			//}
			
			
			
			fileOutputStream = new FileOutputStream(new File(sPath));
		    
			workbook.write(fileOutputStream);
			
			//fileOutputStream.close();
			
			Constantes2.S_PATH_ULTIMO_ARCHIVO=sPath;
			
			if(this.parametroGeneralUsuario.getcon_mensaje_confirmacion() && !this.configuracionpunvenSessionBean.getEsGuardarRelacionado()) {//Constantes.ISMOSTRARMENSAJESMANTENIMIENTO && 
				JOptionPane.showMessageDialog(this,"EXPORTADO CORRECTAMENTE:"+sPath,"MANTENIMIENTO DE Configuracion Pun Ven",JOptionPane.INFORMATION_MESSAGE);
			}
		} catch (Exception e) {
			throw e;
			
		} finally {			
       		if (fileOutputStream != null) {
				fileOutputStream.close();
			}			
		}				
	}	
	
	
	
	
	public void buscarPorId(Long idActual) throws Exception {    		
		try {
			if(Constantes.ISUSAEJBLOGICLAYER) {
				this.configuracionpunvenLogic.getNewConnexionToDeep("");
			}
			
			this.idActual=idActual;
			this.iNumeroPaginacionPagina=0;
			
			this.procesarBusqueda("PorId");
				    	
			//NO FUNCIONA BINDINGS
			this.inicializarActualizarBindingConfiguracionPunVen(false);
			
			//SI ES MANUAL
			if(ConfiguracionPunVenJInternalFrame.ISBINDING_MANUAL) {
				//this.inicializarActualizarBindingManualConfiguracionPunVen();
			}	
			
			if(Constantes.ISUSAEJBLOGICLAYER) {
				this.configuracionpunvenLogic.commitNewConnexionToDeep();
			}
			
		} catch(Exception e) {
			
			if(Constantes.ISUSAEJBLOGICLAYER) {
				this.configuracionpunvenLogic.rollbackNewConnexionToDeep();
			}
			
			FuncionesSwing.manageException(this, e,logger);
			
		} finally {
			if(Constantes.ISUSAEJBLOGICLAYER) {
				this.configuracionpunvenLogic.closeNewConnexionToDeep();
			}
		}
	}
	
	public void jButtonAnterioresConfiguracionPunVenActionPerformed(ActionEvent evt) throws Exception {    		
		try	{
			//this.iNumeroPaginacion-=this.iNumeroPaginacion;
			/*
			if(this.iNumeroPaginacion<0) {
				this.iNumeroPaginacion=0;
			}
			*/
			//this.iNumeroPaginacionPagina=10;			
			
			if(Constantes.ISUSAEJBLOGICLAYER) {
				this.configuracionpunvenLogic.getNewConnexionToDeep("");
			}
			
			this.anteriores();
			
			//NO FUNCIONA BINDINGS
			this.inicializarActualizarBindingConfiguracionPunVen(false);
			
			//SI ES MANUAL
			if(ConfiguracionPunVenJInternalFrame.ISBINDING_MANUAL) {
	    		//this.inicializarActualizarBindingManualConfiguracionPunVen();
			}
			
			if(Constantes.ISUSAEJBLOGICLAYER) {
				this.configuracionpunvenLogic.commitNewConnexionToDeep();
			}
			
		} catch(Exception e) {
			if(Constantes.ISUSAEJBLOGICLAYER) {
				this.configuracionpunvenLogic.rollbackNewConnexionToDeep();
			}
			
			FuncionesSwing.manageException(this, e,logger,ConfiguracionPunVenConstantesFunciones.CLASSNAME);
		
		} finally {
			if(Constantes.ISUSAEJBLOGICLAYER) {
				this.configuracionpunvenLogic.closeNewConnexionToDeep();
			}
		}
	}
	
	public void jButtonSiguientesConfiguracionPunVenActionPerformed(ActionEvent evt) throws Exception {    		
		try	{
			//this.iNumeroPaginacion+=this.iNumeroPaginacion;
			//this.iNumeroPaginacionPagina=10;			
			
			if(Constantes.ISUSAEJBLOGICLAYER) {
				this.configuracionpunvenLogic.getNewConnexionToDeep("");
			}
			
			this.siguientes();
			
			//NO FUNCIONA BINDINGS
			this.inicializarActualizarBindingConfiguracionPunVen(false);
			
			//SI ES MANUAL
			if(ConfiguracionPunVenJInternalFrame.ISBINDING_MANUAL) {
	    		//this.inicializarActualizarBindingManualConfiguracionPunVen();
			}		
			
			if(Constantes.ISUSAEJBLOGICLAYER) {
				this.configuracionpunvenLogic.commitNewConnexionToDeep();
			}
			
		} catch(Exception e) {
			if(Constantes.ISUSAEJBLOGICLAYER) {
				this.configuracionpunvenLogic.rollbackNewConnexionToDeep();
			}
			
			FuncionesSwing.manageException(this, e,logger,ConfiguracionPunVenConstantesFunciones.CLASSNAME);
		
		} finally {
			if(Constantes.ISUSAEJBLOGICLAYER) {
				this.configuracionpunvenLogic.closeNewConnexionToDeep();
			}
		}
	}
	
	public void aumentarTamanioFilaNuevaTablaConfiguracionPunVen() throws Exception {		
		Dimension dimensionMinimum=this.jTableDatosConfiguracionPunVen.getMinimumSize();
		Dimension dimensionMaximum=this.jTableDatosConfiguracionPunVen.getMaximumSize();
		Dimension dimensionPreferred=this.jTableDatosConfiguracionPunVen.getPreferredSize();
	
		double iHeightConFilaNueva=dimensionPreferred.getHeight();
		
		iHeightConFilaNueva+=this.jTableDatosConfiguracionPunVen.getRowHeight();
		
		dimensionMinimum.setSize(dimensionMinimum.getWidth(),iHeightConFilaNueva);
		dimensionMaximum.setSize(dimensionMaximum.getWidth(),iHeightConFilaNueva);
		dimensionPreferred.setSize(dimensionPreferred.getWidth(),iHeightConFilaNueva);
		
		this.jTableDatosConfiguracionPunVen.setMinimumSize(dimensionMinimum);
		this.jTableDatosConfiguracionPunVen.setMaximumSize(dimensionMaximum);
		this.jTableDatosConfiguracionPunVen.setPreferredSize(dimensionPreferred);	
	}
	
	public void inicializarActualizarBindingConfiguracionPunVen(Boolean esInicializar) throws Exception {
		this.inicializarActualizarBindingConfiguracionPunVen(esInicializar,true);
	}
	
	public void inicializarActualizarBindingConfiguracionPunVen(Boolean esInicializar,Boolean conTabla) throws Exception {		
		if(conTabla) {
			this.inicializarActualizarBindingTablaConfiguracionPunVen(esInicializar);
		}
		
		this.inicializarActualizarBindingBotonesConfiguracionPunVen(esInicializar);
		
		//FUNCIONALIDAD_RELACIONADO
		if(!this.configuracionpunvenSessionBean.getEsGuardarRelacionado()) {
			try{this.inicializarActualizarBindingBusquedasConfiguracionPunVen(esInicializar);}catch(Exception e){e.printStackTrace();}
			
			//this.inicializarActualizarBindingtiposArchivosReportesAccionesConfiguracionPunVen(esInicializar) ;
			
			this.inicializarActualizarBindingParametrosReportesConfiguracionPunVen(esInicializar) ;
		}
		
		if(esInicializar) {
			if( !ConfiguracionPunVenJInternalFrame.ISBINDING_MANUAL_TABLA ||
			   	!ConfiguracionPunVenJInternalFrame.ISBINDING_MANUAL) {
			   	
			}
		}
	}
	
	public void inicializarActualizarBindingManualConfiguracionPunVen() throws Exception {		
		//NO SE NECESITA HACER BINDING OTRA VEZ
		//this.inicializarActualizarBindingTablaConfiguracionPunVen();
		
		this.inicializarActualizarBindingBotonesManualConfiguracionPunVen(true);
		
		//FUNCIONALIDAD_RELACIONADO
		if(!this.configuracionpunvenSessionBean.getEsGuardarRelacionado()) {
			
			this.inicializarActualizarBindingBusquedasManualConfiguracionPunVen();			
			
			
			//this.inicializarActualizarBindingtiposArchivosReportesAccionesConfiguracionPunVen() ;
			
			this.inicializarActualizarBindingParametrosReportesPostAccionesManualConfiguracionPunVen(false) ;			
			
		}
	}
	
	public void inicializarActualizarBindingParametrosReportesPostAccionesManualConfiguracionPunVen(Boolean esSetControles) throws Exception {
		try	{					
			if(!esSetControles) {
				this.isSeleccionarTodos=this.jCheckBoxSeleccionarTodosConfiguracionPunVen.isSelected();
				this.isSeleccionados=this.jCheckBoxSeleccionadosConfiguracionPunVen.isSelected();
				
				
				this.conGraficoReporte=this.jCheckBoxConGraficoReporteConfiguracionPunVen.isSelected();															
				
				
				if(this.jInternalFrameDetalleFormConfiguracionPunVen!=null) {
				this.isPostAccionNuevo=this.jInternalFrameDetalleFormConfiguracionPunVen.jCheckBoxPostAccionNuevoConfiguracionPunVen.isSelected();
				this.isPostAccionSinCerrar=this.jInternalFrameDetalleFormConfiguracionPunVen.jCheckBoxPostAccionSinCerrarConfiguracionPunVen.isSelected();
				this.isPostAccionSinMensaje=this.jInternalFrameDetalleFormConfiguracionPunVen.jCheckBoxPostAccionSinMensajeConfiguracionPunVen.isSelected();
				}
			
			} else {
				this.jCheckBoxSeleccionarTodosConfiguracionPunVen.setSelected(this.isSeleccionarTodos);
				this.jCheckBoxSeleccionadosConfiguracionPunVen.setSelected(this.isSeleccionados);
				
				
				this.jCheckBoxConGraficoReporteConfiguracionPunVen.setSelected(this.conGraficoReporte);				
				
				
				if(this.jInternalFrameDetalleFormConfiguracionPunVen!=null) {
				this.jInternalFrameDetalleFormConfiguracionPunVen.jCheckBoxPostAccionNuevoConfiguracionPunVen.setSelected(this.isPostAccionNuevo);
				this.jInternalFrameDetalleFormConfiguracionPunVen.jCheckBoxPostAccionSinCerrarConfiguracionPunVen.setSelected(this.isPostAccionSinCerrar);
				this.jInternalFrameDetalleFormConfiguracionPunVen.jCheckBoxPostAccionSinMensajeConfiguracionPunVen.setSelected(this.isPostAccionSinMensaje);
				}
			}
			
			
			if(this.jComboBoxTiposPaginacionConfiguracionPunVen.getSelectedItem()!=null) {
				this.sTipoPaginacion=((Reporte)this.jComboBoxTiposPaginacionConfiguracionPunVen.getSelectedItem()).getsCodigo();			
			}
			
			
			
			if(this.jInternalFrameDetalleFormConfiguracionPunVen!=null) {
			this.sTipoAccionFormulario=((Reporte)this.jInternalFrameDetalleFormConfiguracionPunVen.jComboBoxTiposAccionesFormularioConfiguracionPunVen.getSelectedItem()).getsCodigo();
			}
			
			
			
			if(!this.conCargarMinimo) {
				this.sTipoArchivoReporte=((Reporte)this.jComboBoxTiposArchivosReportesConfiguracionPunVen.getSelectedItem()).getsCodigo();			
				
				if(this.jInternalFrameReporteDinamicoConfiguracionPunVen!=null) {
					this.sTipoArchivoReporteDinamico=((Reporte)this.jInternalFrameReporteDinamicoConfiguracionPunVen.getjComboBoxTiposArchivosReportesDinamico().getSelectedItem()).getsCodigo();			
				}
				
				this.sTipoRelacion=((Reporte)this.jComboBoxTiposRelacionesConfiguracionPunVen.getSelectedItem()).getsCodigo();
									
				this.sTipoAccion=((Reporte)this.jComboBoxTiposAccionesConfiguracionPunVen.getSelectedItem()).getsCodigo();
													
				this.sTipoSeleccionar=((Reporte)this.jComboBoxTiposSeleccionarConfiguracionPunVen.getSelectedItem()).getsCodigo();
									
				this.sTipoReporte=((Reporte)this.jComboBoxTiposReportesConfiguracionPunVen.getSelectedItem()).getsCodigo();							
					
				if(this.jInternalFrameReporteDinamicoConfiguracionPunVen!=null) {
					this.sTipoReporteDinamico=((Reporte)this.jInternalFrameReporteDinamicoConfiguracionPunVen.getjComboBoxTiposReportesDinamico().getSelectedItem()).getsCodigo();							
				}
				
				this.sTipoGraficoReporte=((Reporte)this.jComboBoxTiposGraficosReportesConfiguracionPunVen.getSelectedItem()).getsCodigo();											
			}			
			
			this.sValorCampoGeneral=this.jTextFieldValorCampoGeneralConfiguracionPunVen.getText();						
			
			
			
		} catch(Exception e) {
			throw e;
		}
	}
	
	public void inicializarActualizarBindingParametrosReportesConfiguracionPunVen(Boolean esInicializar) throws Exception {
		try	{	
			if(ConfiguracionPunVenJInternalFrame.ISBINDING_MANUAL) {
				this. inicializarActualizarBindingParametrosReportesPostAccionesManualConfiguracionPunVen(false);
			} else {
			}
		} catch(Exception e) {
			throw e;
		}
	}	
	
	public void inicializarActualizarBindingtiposArchivosReportesAccionesConfiguracionPunVen() throws Exception {
		try	{
			if(ConfiguracionPunVenJInternalFrame.ISBINDING_MANUAL) {
				this.inicializarActualizarBindingtiposArchivosReportesAccionesManualConfiguracionPunVen();
			} else {
			}
		} catch(Exception e) {
			throw e;
		}
	}
	
	@SuppressWarnings("unchecked")
	public void inicializarActualizarBindingtiposArchivosReportesAccionesManualFormDetalleConfiguracionPunVen() throws Exception {
		//TIPOS ACCIONES FORMULARIO	
		this.jInternalFrameDetalleFormConfiguracionPunVen.jComboBoxTiposAccionesFormularioConfiguracionPunVen.removeAllItems();
				
		for(Reporte reporte:this.tiposAccionesFormulario) {
			this.jInternalFrameDetalleFormConfiguracionPunVen.jComboBoxTiposAccionesFormularioConfiguracionPunVen.addItem(reporte);
		}
		
		//TIPOS ACCIONES FORMULARIO
	}
	
	@SuppressWarnings("unchecked")
	public void inicializarActualizarBindingtiposArchivosReportesAccionesManualConfiguracionPunVen() throws Exception {
		try	{
			
			//TIPOS ARCHIVOS REPORTES
			this.jComboBoxTiposArchivosReportesConfiguracionPunVen.removeAllItems();
				
			for(Reporte reporte:this.tiposArchivosReportes) {
				this.jComboBoxTiposArchivosReportesConfiguracionPunVen.addItem(reporte);
			}
			
			
				
			//TIPOS REPORTES
			this.jComboBoxTiposReportesConfiguracionPunVen.removeAllItems();
				
			for(Reporte reporte:this.tiposReportes) {
				this.jComboBoxTiposReportesConfiguracionPunVen.addItem(reporte);
			}
			
			
			//TIPOS GRAFICOS REPORTES
			this.jComboBoxTiposGraficosReportesConfiguracionPunVen.removeAllItems();
				
			for(Reporte reporte:this.tiposGraficosReportes) {
				this.jComboBoxTiposGraficosReportesConfiguracionPunVen.addItem(reporte);
			}
			
			
			//TIPOS PAGINACION
			this.jComboBoxTiposPaginacionConfiguracionPunVen.removeAllItems();
				
			for(Reporte reporte:this.tiposPaginacion) {
				this.jComboBoxTiposPaginacionConfiguracionPunVen.addItem(reporte);
			}
			
			
			if(!this.configuracionpunvenSessionBean.getEsGuardarRelacionado()) {
				this.jComboBoxTiposPaginacionConfiguracionPunVen.setSelectedItem(Funciones2.getTipoPaginacionDefecto("NORMAL",this.tiposPaginacion));
			} else {
				this.jComboBoxTiposPaginacionConfiguracionPunVen.setSelectedItem(Funciones2.getTipoPaginacionDefecto("RELACIONADO",this.tiposPaginacion));
			}
				
				
			//TIPOS ACCIONES	
			this.jComboBoxTiposRelacionesConfiguracionPunVen.removeAllItems();
				
			for(Reporte reporte:this.tiposRelaciones) {
				this.jComboBoxTiposRelacionesConfiguracionPunVen.addItem(reporte);
			}
			
			//TIPOS ACCIONES
				
				
			//TIPOS ACCIONES	
			this.jComboBoxTiposAccionesConfiguracionPunVen.removeAllItems();
				
			for(Reporte reporte:this.tiposAcciones) {
				this.jComboBoxTiposAccionesConfiguracionPunVen.addItem(reporte);
			}
			
			//TIPOS ACCIONES			
			
			
			
			//TIPOS ACCIONES FORMULARIO	
			if(this.jInternalFrameDetalleFormConfiguracionPunVen!=null) { //if(this.conCargarFormDetalle) {
				this.jInternalFrameDetalleFormConfiguracionPunVen.jComboBoxTiposAccionesFormularioConfiguracionPunVen.removeAllItems();
				
				for(Reporte reporte:this.tiposAccionesFormulario) {
					this.jInternalFrameDetalleFormConfiguracionPunVen.jComboBoxTiposAccionesFormularioConfiguracionPunVen.addItem(reporte);
				}
				
			}
			//TIPOS ACCIONES FORMULARIO
			
			
			
			//TIPOS SELECCIONAR
			this.jComboBoxTiposSeleccionarConfiguracionPunVen.removeAllItems();
				
			for(Reporte reporte:this.tiposSeleccionar) {
				this.jComboBoxTiposSeleccionarConfiguracionPunVen.addItem(reporte);
			}
			
			
			if(this.tiposSeleccionar!=null && this.tiposSeleccionar.size()>1) {
				this.jComboBoxTiposSeleccionarConfiguracionPunVen.setSelectedIndex(1);
			}
				
			//REPORTE DINAMICO
			this.inicializarActualizarBindingtiposArchivosReportesDinamicoAccionesManualConfiguracionPunVen();
							
			//TIPOS COLUMNAS SELECT
			//TIPOS SELECCIONAR
			
			
		} catch(Exception e) {
			throw e;
		}
	}		
	
	
	@SuppressWarnings("unchecked")
	public void inicializarActualizarBindingtiposArchivosReportesDinamicoAccionesManualConfiguracionPunVen() throws Exception {
		try	{
			DefaultListModel<Reporte> defaultListModel=new DefaultListModel<Reporte>();
			
			
			//TIPOS ARCHIVOS REPORTES DINAMICO
			if(this.jInternalFrameReporteDinamicoConfiguracionPunVen!=null) {
				this.jInternalFrameReporteDinamicoConfiguracionPunVen.getjComboBoxTiposArchivosReportesDinamico().removeAllItems();
					
				for(Reporte reporte:this.tiposArchivosReportesDinamico) {
					this.jInternalFrameReporteDinamicoConfiguracionPunVen.getjComboBoxTiposArchivosReportesDinamico().addItem(reporte);
				}
				
			}
			
			//TIPOS REPORTES DINAMICO
			if(this.jInternalFrameReporteDinamicoConfiguracionPunVen!=null) {
				this.jInternalFrameReporteDinamicoConfiguracionPunVen.getjComboBoxTiposReportesDinamico().removeAllItems();
					
				for(Reporte reporte:this.tiposReportesDinamico) {
					this.jInternalFrameReporteDinamicoConfiguracionPunVen.getjComboBoxTiposReportesDinamico().addItem(reporte);
				}
				
			}
			
			defaultListModel=new DefaultListModel<Reporte>();
			
			if(this.jInternalFrameReporteDinamicoConfiguracionPunVen!=null) {
				
				if(this.jInternalFrameReporteDinamicoConfiguracionPunVen.getjListColumnasSelectReporte()!=null) {
					this.jInternalFrameReporteDinamicoConfiguracionPunVen.getjListColumnasSelectReporte().removeAll();
						
					for(Reporte reporte:this.tiposColumnasSelect) {
						defaultListModel.addElement(reporte);
					}						
						
					this.jInternalFrameReporteDinamicoConfiguracionPunVen.getjListColumnasSelectReporte().setModel(defaultListModel);									
						
				}	
					
				//TIPOS RELACIONES SELECT
				//TIPOS SELECCIONAR
				defaultListModel=new DefaultListModel<Reporte>();
				if(this.jInternalFrameReporteDinamicoConfiguracionPunVen.getjListRelacionesSelectReporte()!=null) {
					this.jInternalFrameReporteDinamicoConfiguracionPunVen.getjListRelacionesSelectReporte().removeAll();
						
					for(Reporte reporte:this.tiposRelacionesSelect) {
						defaultListModel.addElement(reporte);
					}						
						
					this.jInternalFrameReporteDinamicoConfiguracionPunVen.getjListRelacionesSelectReporte().setModel(defaultListModel);									
						
				}	
				
			}
		} catch(Exception e) {
			throw e;
		}
	}	
	
	
	
	public void inicializarActualizarBindingBusquedasManualConfiguracionPunVen()  throws Exception {				
		//BYDAN_BUSQUEDAS		
		
		if(this.jComboBoxid_bodegaFK_IdBodegaConfiguracionPunVen.getSelectedItem()!=null){this.id_bodegaFK_IdBodega=((Bodega)this.jComboBoxid_bodegaFK_IdBodegaConfiguracionPunVen.getSelectedItem()).getId();}
		if(this.jComboBoxid_cliente_consumidor_finalFK_IdClienteConsumidorFinalConfiguracionPunVen.getSelectedItem()!=null){this.id_cliente_consumidor_finalFK_IdClienteConsumidorFinal=((Cliente)this.jComboBoxid_cliente_consumidor_finalFK_IdClienteConsumidorFinalConfiguracionPunVen.getSelectedItem()).getId();}
		if(this.jComboBoxid_cuenta_contable_efectivoFK_IdCuentaContableEfectivoConfiguracionPunVen.getSelectedItem()!=null){this.id_cuenta_contable_efectivoFK_IdCuentaContableEfectivo=((CuentaContable)this.jComboBoxid_cuenta_contable_efectivoFK_IdCuentaContableEfectivoConfiguracionPunVen.getSelectedItem()).getId();}
		if(this.jComboBoxid_cuenta_contable_iceFK_IdCuentaContableIceConfiguracionPunVen.getSelectedItem()!=null){this.id_cuenta_contable_iceFK_IdCuentaContableIce=((CuentaContable)this.jComboBoxid_cuenta_contable_iceFK_IdCuentaContableIceConfiguracionPunVen.getSelectedItem()).getId();}
		if(this.jComboBoxid_cuenta_contable_otrosFK_IdCuentaContableOtrosConfiguracionPunVen.getSelectedItem()!=null){this.id_cuenta_contable_otrosFK_IdCuentaContableOtros=((CuentaContable)this.jComboBoxid_cuenta_contable_otrosFK_IdCuentaContableOtrosConfiguracionPunVen.getSelectedItem()).getId();}
		if(this.jComboBoxid_formato_facturaFK_IdFormatoFacturaConfiguracionPunVen.getSelectedItem()!=null){this.id_formato_facturaFK_IdFormatoFactura=((Formato)this.jComboBoxid_formato_facturaFK_IdFormatoFacturaConfiguracionPunVen.getSelectedItem()).getId();}
		if(this.jComboBoxid_formato_nota_creditoFK_IdFormatoNotaCreditoConfiguracionPunVen.getSelectedItem()!=null){this.id_formato_nota_creditoFK_IdFormatoNotaCredito=((Formato)this.jComboBoxid_formato_nota_creditoFK_IdFormatoNotaCreditoConfiguracionPunVen.getSelectedItem()).getId();}
		if(this.jComboBoxid_formato_nota_ventaFK_IdFormatoNotaVentaConfiguracionPunVen.getSelectedItem()!=null){this.id_formato_nota_ventaFK_IdFormatoNotaVenta=((Formato)this.jComboBoxid_formato_nota_ventaFK_IdFormatoNotaVentaConfiguracionPunVen.getSelectedItem()).getId();}
		if(this.jComboBoxid_tipo_documento_facturaFK_IdTipoDocumentoFacturaConfiguracionPunVen.getSelectedItem()!=null){this.id_tipo_documento_facturaFK_IdTipoDocumentoFactura=((TipoDocumento)this.jComboBoxid_tipo_documento_facturaFK_IdTipoDocumentoFacturaConfiguracionPunVen.getSelectedItem()).getId();}
		if(this.jComboBoxid_tipo_documento_nota_creditoFK_IdTipoDocumentoNotaCreditoConfiguracionPunVen.getSelectedItem()!=null){this.id_tipo_documento_nota_creditoFK_IdTipoDocumentoNotaCredito=((TipoDocumento)this.jComboBoxid_tipo_documento_nota_creditoFK_IdTipoDocumentoNotaCreditoConfiguracionPunVen.getSelectedItem()).getId();}
		if(this.jComboBoxid_tipo_documento_nota_ventaFK_IdTipoDocumentoNotaVentaConfiguracionPunVen.getSelectedItem()!=null){this.id_tipo_documento_nota_ventaFK_IdTipoDocumentoNotaVenta=((TipoDocumento)this.jComboBoxid_tipo_documento_nota_ventaFK_IdTipoDocumentoNotaVentaConfiguracionPunVen.getSelectedItem()).getId();}
		if(this.jComboBoxid_tipo_documento_tarjeta_creditoFK_IdTipoDocumentoTarjetaCreditoConfiguracionPunVen.getSelectedItem()!=null){this.id_tipo_documento_tarjeta_creditoFK_IdTipoDocumentoTarjetaCredito=((TipoDocumento)this.jComboBoxid_tipo_documento_tarjeta_creditoFK_IdTipoDocumentoTarjetaCreditoConfiguracionPunVen.getSelectedItem()).getId();}
		if(this.jComboBoxid_transaccion_cuenta_facturaFK_IdTransaccionCuentaFacturaConfiguracionPunVen.getSelectedItem()!=null){this.id_transaccion_cuenta_facturaFK_IdTransaccionCuentaFactura=((Transaccion)this.jComboBoxid_transaccion_cuenta_facturaFK_IdTransaccionCuentaFacturaConfiguracionPunVen.getSelectedItem()).getId();}
		if(this.jComboBoxid_transaccion_cuenta_nota_creditoFK_IdTransaccionCuentaNotaCreditoConfiguracionPunVen.getSelectedItem()!=null){this.id_transaccion_cuenta_nota_creditoFK_IdTransaccionCuentaNotaCredito=((Transaccion)this.jComboBoxid_transaccion_cuenta_nota_creditoFK_IdTransaccionCuentaNotaCreditoConfiguracionPunVen.getSelectedItem()).getId();}
		if(this.jComboBoxid_transaccion_cuenta_nota_ventaFK_IdTransaccionCuentaNotaVentaConfiguracionPunVen.getSelectedItem()!=null){this.id_transaccion_cuenta_nota_ventaFK_IdTransaccionCuentaNotaVenta=((Transaccion)this.jComboBoxid_transaccion_cuenta_nota_ventaFK_IdTransaccionCuentaNotaVentaConfiguracionPunVen.getSelectedItem()).getId();}
		if(this.jComboBoxid_transaccion_facturaFK_IdTransaccionFacturaConfiguracionPunVen.getSelectedItem()!=null){this.id_transaccion_facturaFK_IdTransaccionFactura=((Transaccion)this.jComboBoxid_transaccion_facturaFK_IdTransaccionFacturaConfiguracionPunVen.getSelectedItem()).getId();}
		if(this.jComboBoxid_transaccion_nota_creditoFK_IdTransaccionNotaCreditoConfiguracionPunVen.getSelectedItem()!=null){this.id_transaccion_nota_creditoFK_IdTransaccionNotaCredito=((Transaccion)this.jComboBoxid_transaccion_nota_creditoFK_IdTransaccionNotaCreditoConfiguracionPunVen.getSelectedItem()).getId();}
		if(this.jComboBoxid_transaccion_nota_ventaFK_IdTransaccionNotaVentaConfiguracionPunVen.getSelectedItem()!=null){this.id_transaccion_nota_ventaFK_IdTransaccionNotaVenta=((Transaccion)this.jComboBoxid_transaccion_nota_ventaFK_IdTransaccionNotaVentaConfiguracionPunVen.getSelectedItem()).getId();}
		
	}
	
	
	
	
	public void inicializarActualizarBindingBusquedasConfiguracionPunVen(Boolean esInicializar) throws Exception {				
		if(ConfiguracionPunVenJInternalFrame.ISBINDING_MANUAL) {
			
			this.inicializarActualizarBindingBusquedasManualConfiguracionPunVen();			
			
		} else {
		}
	}		
		
	public void inicializarActualizarBindingTablaConfiguracionPunVen() throws Exception {
		this.inicializarActualizarBindingTablaConfiguracionPunVen(false);
	}
	
	
	public void inicializarActualizarBindingTablaOrderByConfiguracionPunVen() {
		//TABLA OrderBy	
		TableColumn tableColumn=new TableColumn();
		Integer iWidthTableDefinicionOrderBy=0;			
			
		this.jInternalFrameOrderByConfiguracionPunVen.getjTableDatosOrderBy().setModel(new TablaGeneralOrderByModel(this.arrOrderBy));
					
		//DEFINIR RENDERERS OrderBy
		tableColumn=this.jInternalFrameOrderByConfiguracionPunVen.getjTableDatosOrderBy().getColumnModel().getColumn(Funciones2.getColumnIndexByName(this.jInternalFrameOrderByConfiguracionPunVen.getjTableDatosOrderBy(),OrderBy.ISSELECTED));			
		//tableColumn.addPropertyChangeListener(new ConfiguracionPunVenPropertyChangeListener());
					
		tableColumn.setPreferredWidth(50); 	 
		tableColumn.setWidth(50); 	 
		tableColumn.setMinWidth(50);
		tableColumn.setMaxWidth(50);
				
		iWidthTableDefinicionOrderBy+=50;
					
		tableColumn=this.jInternalFrameOrderByConfiguracionPunVen.getjTableDatosOrderBy().getColumnModel().getColumn(Funciones2.getColumnIndexByName(this.jInternalFrameOrderByConfiguracionPunVen.getjTableDatosOrderBy(),OrderBy.NOMBRE));
		//tableColumn.addPropertyChangeListener(new ConfiguracionPunVenPropertyChangeListener());
					
		tableColumn.setPreferredWidth(150); 	 
		tableColumn.setWidth(150); 	 
		tableColumn.setMinWidth(150);
		tableColumn.setMaxWidth(150);
				
		iWidthTableDefinicionOrderBy+=150;
					
		//tableColumn=this.jTableDatosConfiguracionPunVenOrderBy.getColumnModel().getColumn(Funciones2.getColumnIndexByName(this.jTableDatosConfiguracionPunVenOrderBy,OrderBy.NOMBREDB));			
		////tableColumn.addPropertyChangeListener(new ConfiguracionPunVenPropertyChangeListener());
								
		tableColumn=this.jInternalFrameOrderByConfiguracionPunVen.getjTableDatosOrderBy().getColumnModel().getColumn(Funciones2.getColumnIndexByName(this.jInternalFrameOrderByConfiguracionPunVen.getjTableDatosOrderBy(),OrderBy.ESDESC));
		//tableColumn.addPropertyChangeListener(new ConfiguracionPunVenPropertyChangeListener());
												
		tableColumn.setPreferredWidth(50); 	 
		tableColumn.setWidth(50); 	 
		tableColumn.setMinWidth(50);
		tableColumn.setMaxWidth(50);
				
		((AbstractTableModel) this.jInternalFrameOrderByConfiguracionPunVen.getjTableDatosOrderBy().getModel()).fireTableDataChanged();
				
		iWidthTableDefinicionOrderBy+=50;
	}
	
	
	
	public void inicializarActualizarBindingTablaConfiguracionPunVen(Boolean esInicializar) throws Exception {
		Boolean isNoExiste=false;
		Integer iCountNumeroColumnasNormal=0;
		Integer iCountNumeroColumnasFk=0;
		
		this.iWidthTableDefinicion=0;
		
		int iSizeTabla=0;
		
		iSizeTabla=this.getSizeTablaDatos();
		
	if(esInicializar || ConstantesSwing.FORZAR_INICIALIZAR_TABLA) {//esInicializar
		//ARCHITECTURE
		if(Constantes.ISUSAEJBLOGICLAYER) {
			isNoExiste=configuracionpunvenLogic.getConfiguracionPunVens().size()==0;
		} else if(Constantes.ISUSAEJBREMOTE || Constantes.ISUSAEJBHOME) {
			isNoExiste=configuracionpunvens.size()==0;
		}
		//ARCHITECTURE
			
		if(isNoExiste) {
			if(this.iNumeroPaginacion-this.iNumeroPaginacion>0) {
				this.iNumeroPaginacion-=this.iNumeroPaginacion;
			}
		}
		
		TableColumn tableColumn=new TableColumn();
		
		if(ConfiguracionPunVenJInternalFrame.ISBINDING_MANUAL_TABLA) {
			
			//ARCHITECTURE
			if(Constantes.ISUSAEJBLOGICLAYER) {
				this.jTableDatosConfiguracionPunVen.setModel(new ConfiguracionPunVenModel(this.configuracionpunvenLogic.getConfiguracionPunVens(),this));
			} else if(Constantes.ISUSAEJBREMOTE || Constantes.ISUSAEJBHOME ) {
				this.jTableDatosConfiguracionPunVen.setModel(new ConfiguracionPunVenModel(this.configuracionpunvens,this));
			}
			//ARCHITECTURE
			
							
			
			
			if(this.jInternalFrameOrderByConfiguracionPunVen!=null && this.jInternalFrameOrderByConfiguracionPunVen.getjTableDatosOrderBy()!=null) {
				this.inicializarActualizarBindingTablaOrderByConfiguracionPunVen();
			}
			
								
			//DEFINIR RENDERERS
			tableColumn=this.jTableDatosConfiguracionPunVen.getColumnModel().getColumn(Funciones2.getColumnIndexByName(this.jTableDatosConfiguracionPunVen,Constantes2.S_SELECCIONAR));
			//tableColumn.addPropertyChangeListener(new ConfiguracionPunVenPropertyChangeListener());
			tableColumn.setCellRenderer(new BooleanRenderer(true,"Seleccionar "+ConfiguracionPunVenConstantesFunciones.SCLASSWEBTITULO,configuracionpunvenConstantesFunciones.resaltarSeleccionarConfiguracionPunVen,true,false,"","",this));
			tableColumn.setCellEditor(new BooleanEditorRenderer(true,"Seleccionar "+ConfiguracionPunVenConstantesFunciones.SCLASSWEBTITULO,configuracionpunvenConstantesFunciones.resaltarSeleccionarConfiguracionPunVen,false,"","",this));			
			
			tableColumn.setPreferredWidth(50); 	 
			tableColumn.setWidth(50); 	 
			tableColumn.setMinWidth(50); 
			tableColumn.setMaxWidth(50); 
			
			this.iWidthTableDefinicion+=50;
			
			


			tableColumn=this.jTableDatosConfiguracionPunVen.getColumnModel().getColumn(Funciones2.getColumnIndexByName(this.jTableDatosConfiguracionPunVen,ConfiguracionPunVenConstantesFunciones.LABEL_ID));

		if(this.configuracionpunvenConstantesFunciones.mostraridConfiguracionPunVen && Funciones2.permiteMostarParaBusqueda(this.esParaBusquedaForeignKey,ConfiguracionPunVenConstantesFunciones.LABEL_ID,false,iCountNumeroColumnasNormal++,iCountNumeroColumnasFk)) {
			tableColumn.setCellRenderer(new TextFieldRenderer(this.configuracionpunvenConstantesFunciones.resaltaridConfiguracionPunVen,this.configuracionpunvenConstantesFunciones.activaridConfiguracionPunVen,this,true,"idConfiguracionPunVen","BASICO"));
			tableColumn.setCellEditor(new TextFieldEditorRenderer(this.configuracionpunvenConstantesFunciones.resaltaridConfiguracionPunVen,this.configuracionpunvenConstantesFunciones.activaridConfiguracionPunVen,this,true,"idConfiguracionPunVen","BASICO",false));

			tableColumn.setPreferredWidth(50);
			tableColumn.setWidth(50);
			tableColumn.setMinWidth(50);
			tableColumn.setMaxWidth(50);

			this.iWidthTableDefinicion+=50;
		} else {
			Funciones2.setTableColumnOcultar(tableColumn);
		}


			tableColumn=this.jTableDatosConfiguracionPunVen.getColumnModel().getColumn(Funciones2.getColumnIndexByName(this.jTableDatosConfiguracionPunVen,ConfiguracionPunVenConstantesFunciones.LABEL_IDEMPRESA));

		if(this.configuracionpunvenConstantesFunciones.mostrarid_empresaConfiguracionPunVen && Funciones2.permiteMostarParaBusqueda(this.esParaBusquedaForeignKey,ConfiguracionPunVenConstantesFunciones.LABEL_IDEMPRESA,true,iCountNumeroColumnasNormal,iCountNumeroColumnasFk++) && Constantes.ISDEVELOPING) {
			tableColumn.setCellRenderer(new EmpresaTableCell(this.empresasForeignKey,this.configuracionpunvenConstantesFunciones.resaltarid_empresaConfiguracionPunVen,this,this.configuracionpunvenConstantesFunciones.activarid_empresaConfiguracionPunVen));
			tableColumn.setCellEditor(new EmpresaTableCell(this.empresasForeignKey,this.configuracionpunvenConstantesFunciones.resaltarid_empresaConfiguracionPunVen,this,this.configuracionpunvenConstantesFunciones.activarid_empresaConfiguracionPunVen,false,"id_empresaConfiguracionPunVen","GLOBAL"));

			tableColumn.setPreferredWidth(Constantes.ISWING_ANCHO_COLUMNA + FuncionesSwing.getValorProporcion(Constantes.ISWING_ANCHO_CONTROL,0));
			tableColumn.setWidth(Constantes.ISWING_ANCHO_COLUMNA + FuncionesSwing.getValorProporcion(Constantes.ISWING_ANCHO_CONTROL,0));
			tableColumn.setMinWidth(Constantes.ISWING_ANCHO_COLUMNA + FuncionesSwing.getValorProporcion(Constantes.ISWING_ANCHO_CONTROL,0));
			tableColumn.setMaxWidth(Constantes.ISWING_ANCHO_COLUMNA + FuncionesSwing.getValorProporcion(Constantes.ISWING_ANCHO_CONTROL,0));

			this.iWidthTableDefinicion+=Constantes.ISWING_ANCHO_COLUMNA + FuncionesSwing.getValorProporcion(Constantes.ISWING_ANCHO_CONTROL,0);
			//tableColumn.addPropertyChangeListener(new ConfiguracionPunVenPropertyChangeListener());
		} else {
			Funciones2.setTableColumnOcultar(tableColumn);
		}


			tableColumn=this.jTableDatosConfiguracionPunVen.getColumnModel().getColumn(Funciones2.getColumnIndexByName(this.jTableDatosConfiguracionPunVen,ConfiguracionPunVenConstantesFunciones.LABEL_IDSUCURSAL));

		if(this.configuracionpunvenConstantesFunciones.mostrarid_sucursalConfiguracionPunVen && Funciones2.permiteMostarParaBusqueda(this.esParaBusquedaForeignKey,ConfiguracionPunVenConstantesFunciones.LABEL_IDSUCURSAL,true,iCountNumeroColumnasNormal,iCountNumeroColumnasFk++) && Constantes.ISDEVELOPING) {
			tableColumn.setCellRenderer(new SucursalTableCell(this.sucursalsForeignKey,this.configuracionpunvenConstantesFunciones.resaltarid_sucursalConfiguracionPunVen,this,this.configuracionpunvenConstantesFunciones.activarid_sucursalConfiguracionPunVen));
			tableColumn.setCellEditor(new SucursalTableCell(this.sucursalsForeignKey,this.configuracionpunvenConstantesFunciones.resaltarid_sucursalConfiguracionPunVen,this,this.configuracionpunvenConstantesFunciones.activarid_sucursalConfiguracionPunVen,false,"id_sucursalConfiguracionPunVen","GLOBAL"));

			tableColumn.setPreferredWidth(Constantes.ISWING_ANCHO_COLUMNA + FuncionesSwing.getValorProporcion(Constantes.ISWING_ANCHO_CONTROL,0));
			tableColumn.setWidth(Constantes.ISWING_ANCHO_COLUMNA + FuncionesSwing.getValorProporcion(Constantes.ISWING_ANCHO_CONTROL,0));
			tableColumn.setMinWidth(Constantes.ISWING_ANCHO_COLUMNA + FuncionesSwing.getValorProporcion(Constantes.ISWING_ANCHO_CONTROL,0));
			tableColumn.setMaxWidth(Constantes.ISWING_ANCHO_COLUMNA + FuncionesSwing.getValorProporcion(Constantes.ISWING_ANCHO_CONTROL,0));

			this.iWidthTableDefinicion+=Constantes.ISWING_ANCHO_COLUMNA + FuncionesSwing.getValorProporcion(Constantes.ISWING_ANCHO_CONTROL,0);
			//tableColumn.addPropertyChangeListener(new ConfiguracionPunVenPropertyChangeListener());
		} else {
			Funciones2.setTableColumnOcultar(tableColumn);
		}


			tableColumn=this.jTableDatosConfiguracionPunVen.getColumnModel().getColumn(Funciones2.getColumnIndexByName(this.jTableDatosConfiguracionPunVen,ConfiguracionPunVenConstantesFunciones.LABEL_IDBODEGA));

		if(this.configuracionpunvenConstantesFunciones.mostrarid_bodegaConfiguracionPunVen && Funciones2.permiteMostarParaBusqueda(this.esParaBusquedaForeignKey,ConfiguracionPunVenConstantesFunciones.LABEL_IDBODEGA,true,iCountNumeroColumnasNormal,iCountNumeroColumnasFk++)) {
			tableColumn.setCellRenderer(new BodegaTableCell(this.bodegasForeignKey,this.configuracionpunvenConstantesFunciones.resaltarid_bodegaConfiguracionPunVen,this,this.configuracionpunvenConstantesFunciones.activarid_bodegaConfiguracionPunVen));
			tableColumn.setCellEditor(new BodegaTableCell(this.bodegasForeignKey,this.configuracionpunvenConstantesFunciones.resaltarid_bodegaConfiguracionPunVen,this,this.configuracionpunvenConstantesFunciones.activarid_bodegaConfiguracionPunVen,true,"id_bodegaConfiguracionPunVen","BASICO"));

			tableColumn.setPreferredWidth(Constantes.ISWING_ANCHO_COLUMNA + FuncionesSwing.getValorProporcion(Constantes.ISWING_ANCHO_CONTROL,75));
			tableColumn.setWidth(Constantes.ISWING_ANCHO_COLUMNA + FuncionesSwing.getValorProporcion(Constantes.ISWING_ANCHO_CONTROL,75));
			tableColumn.setMinWidth(Constantes.ISWING_ANCHO_COLUMNA + FuncionesSwing.getValorProporcion(Constantes.ISWING_ANCHO_CONTROL,75));
			tableColumn.setMaxWidth(Constantes.ISWING_ANCHO_COLUMNA + FuncionesSwing.getValorProporcion(Constantes.ISWING_ANCHO_CONTROL,75));

			this.iWidthTableDefinicion+=Constantes.ISWING_ANCHO_COLUMNA + FuncionesSwing.getValorProporcion(Constantes.ISWING_ANCHO_CONTROL,75);
			//tableColumn.addPropertyChangeListener(new ConfiguracionPunVenPropertyChangeListener());
		} else {
			Funciones2.setTableColumnOcultar(tableColumn);
		}


			tableColumn=this.jTableDatosConfiguracionPunVen.getColumnModel().getColumn(Funciones2.getColumnIndexByName(this.jTableDatosConfiguracionPunVen,ConfiguracionPunVenConstantesFunciones.LABEL_IDCUENTACONTABLEEFECTIVO));

		if(this.configuracionpunvenConstantesFunciones.mostrarid_cuenta_contable_efectivoConfiguracionPunVen && Funciones2.permiteMostarParaBusqueda(this.esParaBusquedaForeignKey,ConfiguracionPunVenConstantesFunciones.LABEL_IDCUENTACONTABLEEFECTIVO,true,iCountNumeroColumnasNormal,iCountNumeroColumnasFk++)) {
			tableColumn.setCellRenderer(new CuentaContableTableCell(this.cuentacontableefectivosForeignKey,this.configuracionpunvenConstantesFunciones.resaltarid_cuenta_contable_efectivoConfiguracionPunVen,this,this.configuracionpunvenConstantesFunciones.activarid_cuenta_contable_efectivoConfiguracionPunVen));
			tableColumn.setCellEditor(new CuentaContableTableCell(this.cuentacontableefectivosForeignKey,this.configuracionpunvenConstantesFunciones.resaltarid_cuenta_contable_efectivoConfiguracionPunVen,this,this.configuracionpunvenConstantesFunciones.activarid_cuenta_contable_efectivoConfiguracionPunVen,true,"id_cuenta_contable_efectivoConfiguracionPunVen","BASICO"));

			tableColumn.setPreferredWidth(Constantes.ISWING_ANCHO_COLUMNA + FuncionesSwing.getValorProporcion(Constantes.ISWING_ANCHO_CONTROL,70));
			tableColumn.setWidth(Constantes.ISWING_ANCHO_COLUMNA + FuncionesSwing.getValorProporcion(Constantes.ISWING_ANCHO_CONTROL,70));
			tableColumn.setMinWidth(Constantes.ISWING_ANCHO_COLUMNA + FuncionesSwing.getValorProporcion(Constantes.ISWING_ANCHO_CONTROL,70));
			tableColumn.setMaxWidth(Constantes.ISWING_ANCHO_COLUMNA + FuncionesSwing.getValorProporcion(Constantes.ISWING_ANCHO_CONTROL,70));

			this.iWidthTableDefinicion+=Constantes.ISWING_ANCHO_COLUMNA + FuncionesSwing.getValorProporcion(Constantes.ISWING_ANCHO_CONTROL,70);
			//tableColumn.addPropertyChangeListener(new ConfiguracionPunVenPropertyChangeListener());
		} else {
			Funciones2.setTableColumnOcultar(tableColumn);
		}


			tableColumn=this.jTableDatosConfiguracionPunVen.getColumnModel().getColumn(Funciones2.getColumnIndexByName(this.jTableDatosConfiguracionPunVen,ConfiguracionPunVenConstantesFunciones.LABEL_IDCUENTACONTABLEICE));

		if(this.configuracionpunvenConstantesFunciones.mostrarid_cuenta_contable_iceConfiguracionPunVen && Funciones2.permiteMostarParaBusqueda(this.esParaBusquedaForeignKey,ConfiguracionPunVenConstantesFunciones.LABEL_IDCUENTACONTABLEICE,true,iCountNumeroColumnasNormal,iCountNumeroColumnasFk++)) {
			tableColumn.setCellRenderer(new CuentaContableTableCell(this.cuentacontableicesForeignKey,this.configuracionpunvenConstantesFunciones.resaltarid_cuenta_contable_iceConfiguracionPunVen,this,this.configuracionpunvenConstantesFunciones.activarid_cuenta_contable_iceConfiguracionPunVen));
			tableColumn.setCellEditor(new CuentaContableTableCell(this.cuentacontableicesForeignKey,this.configuracionpunvenConstantesFunciones.resaltarid_cuenta_contable_iceConfiguracionPunVen,this,this.configuracionpunvenConstantesFunciones.activarid_cuenta_contable_iceConfiguracionPunVen,true,"id_cuenta_contable_iceConfiguracionPunVen","BASICO"));

			tableColumn.setPreferredWidth(Constantes.ISWING_ANCHO_COLUMNA + FuncionesSwing.getValorProporcion(Constantes.ISWING_ANCHO_CONTROL,70));
			tableColumn.setWidth(Constantes.ISWING_ANCHO_COLUMNA + FuncionesSwing.getValorProporcion(Constantes.ISWING_ANCHO_CONTROL,70));
			tableColumn.setMinWidth(Constantes.ISWING_ANCHO_COLUMNA + FuncionesSwing.getValorProporcion(Constantes.ISWING_ANCHO_CONTROL,70));
			tableColumn.setMaxWidth(Constantes.ISWING_ANCHO_COLUMNA + FuncionesSwing.getValorProporcion(Constantes.ISWING_ANCHO_CONTROL,70));

			this.iWidthTableDefinicion+=Constantes.ISWING_ANCHO_COLUMNA + FuncionesSwing.getValorProporcion(Constantes.ISWING_ANCHO_CONTROL,70);
			//tableColumn.addPropertyChangeListener(new ConfiguracionPunVenPropertyChangeListener());
		} else {
			Funciones2.setTableColumnOcultar(tableColumn);
		}


			tableColumn=this.jTableDatosConfiguracionPunVen.getColumnModel().getColumn(Funciones2.getColumnIndexByName(this.jTableDatosConfiguracionPunVen,ConfiguracionPunVenConstantesFunciones.LABEL_IDCUENTACONTABLEOTROS));

		if(this.configuracionpunvenConstantesFunciones.mostrarid_cuenta_contable_otrosConfiguracionPunVen && Funciones2.permiteMostarParaBusqueda(this.esParaBusquedaForeignKey,ConfiguracionPunVenConstantesFunciones.LABEL_IDCUENTACONTABLEOTROS,true,iCountNumeroColumnasNormal,iCountNumeroColumnasFk++)) {
			tableColumn.setCellRenderer(new CuentaContableTableCell(this.cuentacontableotrossForeignKey,this.configuracionpunvenConstantesFunciones.resaltarid_cuenta_contable_otrosConfiguracionPunVen,this,this.configuracionpunvenConstantesFunciones.activarid_cuenta_contable_otrosConfiguracionPunVen));
			tableColumn.setCellEditor(new CuentaContableTableCell(this.cuentacontableotrossForeignKey,this.configuracionpunvenConstantesFunciones.resaltarid_cuenta_contable_otrosConfiguracionPunVen,this,this.configuracionpunvenConstantesFunciones.activarid_cuenta_contable_otrosConfiguracionPunVen,true,"id_cuenta_contable_otrosConfiguracionPunVen","BASICO"));

			tableColumn.setPreferredWidth(Constantes.ISWING_ANCHO_COLUMNA + FuncionesSwing.getValorProporcion(Constantes.ISWING_ANCHO_CONTROL,70));
			tableColumn.setWidth(Constantes.ISWING_ANCHO_COLUMNA + FuncionesSwing.getValorProporcion(Constantes.ISWING_ANCHO_CONTROL,70));
			tableColumn.setMinWidth(Constantes.ISWING_ANCHO_COLUMNA + FuncionesSwing.getValorProporcion(Constantes.ISWING_ANCHO_CONTROL,70));
			tableColumn.setMaxWidth(Constantes.ISWING_ANCHO_COLUMNA + FuncionesSwing.getValorProporcion(Constantes.ISWING_ANCHO_CONTROL,70));

			this.iWidthTableDefinicion+=Constantes.ISWING_ANCHO_COLUMNA + FuncionesSwing.getValorProporcion(Constantes.ISWING_ANCHO_CONTROL,70);
			//tableColumn.addPropertyChangeListener(new ConfiguracionPunVenPropertyChangeListener());
		} else {
			Funciones2.setTableColumnOcultar(tableColumn);
		}


			tableColumn=this.jTableDatosConfiguracionPunVen.getColumnModel().getColumn(Funciones2.getColumnIndexByName(this.jTableDatosConfiguracionPunVen,ConfiguracionPunVenConstantesFunciones.LABEL_IDCLIENTECONSUMIDORFINAL));

		if(this.configuracionpunvenConstantesFunciones.mostrarid_cliente_consumidor_finalConfiguracionPunVen && Funciones2.permiteMostarParaBusqueda(this.esParaBusquedaForeignKey,ConfiguracionPunVenConstantesFunciones.LABEL_IDCLIENTECONSUMIDORFINAL,true,iCountNumeroColumnasNormal,iCountNumeroColumnasFk++)) {
			tableColumn.setCellRenderer(new ClienteTableCell(this.clienteconsumidorfinalsForeignKey,this.configuracionpunvenConstantesFunciones.resaltarid_cliente_consumidor_finalConfiguracionPunVen,this,this.configuracionpunvenConstantesFunciones.activarid_cliente_consumidor_finalConfiguracionPunVen));
			tableColumn.setCellEditor(new ClienteTableCell(this.clienteconsumidorfinalsForeignKey,this.configuracionpunvenConstantesFunciones.resaltarid_cliente_consumidor_finalConfiguracionPunVen,this,this.configuracionpunvenConstantesFunciones.activarid_cliente_consumidor_finalConfiguracionPunVen,true,"id_cliente_consumidor_finalConfiguracionPunVen","CON_BUSQUEDA"));

			tableColumn.setPreferredWidth(Constantes.ISWING_ANCHO_COLUMNA + FuncionesSwing.getValorProporcion(Constantes.ISWING_ANCHO_CONTROL,75));
			tableColumn.setWidth(Constantes.ISWING_ANCHO_COLUMNA + FuncionesSwing.getValorProporcion(Constantes.ISWING_ANCHO_CONTROL,75));
			tableColumn.setMinWidth(Constantes.ISWING_ANCHO_COLUMNA + FuncionesSwing.getValorProporcion(Constantes.ISWING_ANCHO_CONTROL,75));
			tableColumn.setMaxWidth(Constantes.ISWING_ANCHO_COLUMNA + FuncionesSwing.getValorProporcion(Constantes.ISWING_ANCHO_CONTROL,75));

			this.iWidthTableDefinicion+=Constantes.ISWING_ANCHO_COLUMNA + FuncionesSwing.getValorProporcion(Constantes.ISWING_ANCHO_CONTROL,75);
			//tableColumn.addPropertyChangeListener(new ConfiguracionPunVenPropertyChangeListener());
		} else {
			Funciones2.setTableColumnOcultar(tableColumn);
		}


			tableColumn=this.jTableDatosConfiguracionPunVen.getColumnModel().getColumn(Funciones2.getColumnIndexByName(this.jTableDatosConfiguracionPunVen,ConfiguracionPunVenConstantesFunciones.LABEL_IDTIPODOCUMENTOFACTURA));

		if(this.configuracionpunvenConstantesFunciones.mostrarid_tipo_documento_facturaConfiguracionPunVen && Funciones2.permiteMostarParaBusqueda(this.esParaBusquedaForeignKey,ConfiguracionPunVenConstantesFunciones.LABEL_IDTIPODOCUMENTOFACTURA,true,iCountNumeroColumnasNormal,iCountNumeroColumnasFk++)) {
			tableColumn.setCellRenderer(new TipoDocumentoTableCell(this.tipodocumentofacturasForeignKey,this.configuracionpunvenConstantesFunciones.resaltarid_tipo_documento_facturaConfiguracionPunVen,this,this.configuracionpunvenConstantesFunciones.activarid_tipo_documento_facturaConfiguracionPunVen));
			tableColumn.setCellEditor(new TipoDocumentoTableCell(this.tipodocumentofacturasForeignKey,this.configuracionpunvenConstantesFunciones.resaltarid_tipo_documento_facturaConfiguracionPunVen,this,this.configuracionpunvenConstantesFunciones.activarid_tipo_documento_facturaConfiguracionPunVen,true,"id_tipo_documento_facturaConfiguracionPunVen","BASICO"));

			tableColumn.setPreferredWidth(Constantes.ISWING_ANCHO_COLUMNA + FuncionesSwing.getValorProporcion(Constantes.ISWING_ANCHO_CONTROL,0));
			tableColumn.setWidth(Constantes.ISWING_ANCHO_COLUMNA + FuncionesSwing.getValorProporcion(Constantes.ISWING_ANCHO_CONTROL,0));
			tableColumn.setMinWidth(Constantes.ISWING_ANCHO_COLUMNA + FuncionesSwing.getValorProporcion(Constantes.ISWING_ANCHO_CONTROL,0));
			tableColumn.setMaxWidth(Constantes.ISWING_ANCHO_COLUMNA + FuncionesSwing.getValorProporcion(Constantes.ISWING_ANCHO_CONTROL,0));

			this.iWidthTableDefinicion+=Constantes.ISWING_ANCHO_COLUMNA + FuncionesSwing.getValorProporcion(Constantes.ISWING_ANCHO_CONTROL,0);
			//tableColumn.addPropertyChangeListener(new ConfiguracionPunVenPropertyChangeListener());
		} else {
			Funciones2.setTableColumnOcultar(tableColumn);
		}


			tableColumn=this.jTableDatosConfiguracionPunVen.getColumnModel().getColumn(Funciones2.getColumnIndexByName(this.jTableDatosConfiguracionPunVen,ConfiguracionPunVenConstantesFunciones.LABEL_IDTIPODOCUMENTONOTAVENTA));

		if(this.configuracionpunvenConstantesFunciones.mostrarid_tipo_documento_nota_ventaConfiguracionPunVen && Funciones2.permiteMostarParaBusqueda(this.esParaBusquedaForeignKey,ConfiguracionPunVenConstantesFunciones.LABEL_IDTIPODOCUMENTONOTAVENTA,true,iCountNumeroColumnasNormal,iCountNumeroColumnasFk++)) {
			tableColumn.setCellRenderer(new TipoDocumentoTableCell(this.tipodocumentonotaventasForeignKey,this.configuracionpunvenConstantesFunciones.resaltarid_tipo_documento_nota_ventaConfiguracionPunVen,this,this.configuracionpunvenConstantesFunciones.activarid_tipo_documento_nota_ventaConfiguracionPunVen));
			tableColumn.setCellEditor(new TipoDocumentoTableCell(this.tipodocumentonotaventasForeignKey,this.configuracionpunvenConstantesFunciones.resaltarid_tipo_documento_nota_ventaConfiguracionPunVen,this,this.configuracionpunvenConstantesFunciones.activarid_tipo_documento_nota_ventaConfiguracionPunVen,true,"id_tipo_documento_nota_ventaConfiguracionPunVen","BASICO"));

			tableColumn.setPreferredWidth(Constantes.ISWING_ANCHO_COLUMNA + FuncionesSwing.getValorProporcion(Constantes.ISWING_ANCHO_CONTROL,0));
			tableColumn.setWidth(Constantes.ISWING_ANCHO_COLUMNA + FuncionesSwing.getValorProporcion(Constantes.ISWING_ANCHO_CONTROL,0));
			tableColumn.setMinWidth(Constantes.ISWING_ANCHO_COLUMNA + FuncionesSwing.getValorProporcion(Constantes.ISWING_ANCHO_CONTROL,0));
			tableColumn.setMaxWidth(Constantes.ISWING_ANCHO_COLUMNA + FuncionesSwing.getValorProporcion(Constantes.ISWING_ANCHO_CONTROL,0));

			this.iWidthTableDefinicion+=Constantes.ISWING_ANCHO_COLUMNA + FuncionesSwing.getValorProporcion(Constantes.ISWING_ANCHO_CONTROL,0);
			//tableColumn.addPropertyChangeListener(new ConfiguracionPunVenPropertyChangeListener());
		} else {
			Funciones2.setTableColumnOcultar(tableColumn);
		}


			tableColumn=this.jTableDatosConfiguracionPunVen.getColumnModel().getColumn(Funciones2.getColumnIndexByName(this.jTableDatosConfiguracionPunVen,ConfiguracionPunVenConstantesFunciones.LABEL_IDTIPODOCUMENTONOTACREDITO));

		if(this.configuracionpunvenConstantesFunciones.mostrarid_tipo_documento_nota_creditoConfiguracionPunVen && Funciones2.permiteMostarParaBusqueda(this.esParaBusquedaForeignKey,ConfiguracionPunVenConstantesFunciones.LABEL_IDTIPODOCUMENTONOTACREDITO,true,iCountNumeroColumnasNormal,iCountNumeroColumnasFk++)) {
			tableColumn.setCellRenderer(new TipoDocumentoTableCell(this.tipodocumentonotacreditosForeignKey,this.configuracionpunvenConstantesFunciones.resaltarid_tipo_documento_nota_creditoConfiguracionPunVen,this,this.configuracionpunvenConstantesFunciones.activarid_tipo_documento_nota_creditoConfiguracionPunVen));
			tableColumn.setCellEditor(new TipoDocumentoTableCell(this.tipodocumentonotacreditosForeignKey,this.configuracionpunvenConstantesFunciones.resaltarid_tipo_documento_nota_creditoConfiguracionPunVen,this,this.configuracionpunvenConstantesFunciones.activarid_tipo_documento_nota_creditoConfiguracionPunVen,true,"id_tipo_documento_nota_creditoConfiguracionPunVen","BASICO"));

			tableColumn.setPreferredWidth(Constantes.ISWING_ANCHO_COLUMNA + FuncionesSwing.getValorProporcion(Constantes.ISWING_ANCHO_CONTROL,0));
			tableColumn.setWidth(Constantes.ISWING_ANCHO_COLUMNA + FuncionesSwing.getValorProporcion(Constantes.ISWING_ANCHO_CONTROL,0));
			tableColumn.setMinWidth(Constantes.ISWING_ANCHO_COLUMNA + FuncionesSwing.getValorProporcion(Constantes.ISWING_ANCHO_CONTROL,0));
			tableColumn.setMaxWidth(Constantes.ISWING_ANCHO_COLUMNA + FuncionesSwing.getValorProporcion(Constantes.ISWING_ANCHO_CONTROL,0));

			this.iWidthTableDefinicion+=Constantes.ISWING_ANCHO_COLUMNA + FuncionesSwing.getValorProporcion(Constantes.ISWING_ANCHO_CONTROL,0);
			//tableColumn.addPropertyChangeListener(new ConfiguracionPunVenPropertyChangeListener());
		} else {
			Funciones2.setTableColumnOcultar(tableColumn);
		}


			tableColumn=this.jTableDatosConfiguracionPunVen.getColumnModel().getColumn(Funciones2.getColumnIndexByName(this.jTableDatosConfiguracionPunVen,ConfiguracionPunVenConstantesFunciones.LABEL_IDTIPODOCUMENTOTARJETACREDITO));

		if(this.configuracionpunvenConstantesFunciones.mostrarid_tipo_documento_tarjeta_creditoConfiguracionPunVen && Funciones2.permiteMostarParaBusqueda(this.esParaBusquedaForeignKey,ConfiguracionPunVenConstantesFunciones.LABEL_IDTIPODOCUMENTOTARJETACREDITO,true,iCountNumeroColumnasNormal,iCountNumeroColumnasFk++)) {
			tableColumn.setCellRenderer(new TipoDocumentoTableCell(this.tipodocumentotarjetacreditosForeignKey,this.configuracionpunvenConstantesFunciones.resaltarid_tipo_documento_tarjeta_creditoConfiguracionPunVen,this,this.configuracionpunvenConstantesFunciones.activarid_tipo_documento_tarjeta_creditoConfiguracionPunVen));
			tableColumn.setCellEditor(new TipoDocumentoTableCell(this.tipodocumentotarjetacreditosForeignKey,this.configuracionpunvenConstantesFunciones.resaltarid_tipo_documento_tarjeta_creditoConfiguracionPunVen,this,this.configuracionpunvenConstantesFunciones.activarid_tipo_documento_tarjeta_creditoConfiguracionPunVen,true,"id_tipo_documento_tarjeta_creditoConfiguracionPunVen","BASICO"));

			tableColumn.setPreferredWidth(Constantes.ISWING_ANCHO_COLUMNA + FuncionesSwing.getValorProporcion(Constantes.ISWING_ANCHO_CONTROL,0));
			tableColumn.setWidth(Constantes.ISWING_ANCHO_COLUMNA + FuncionesSwing.getValorProporcion(Constantes.ISWING_ANCHO_CONTROL,0));
			tableColumn.setMinWidth(Constantes.ISWING_ANCHO_COLUMNA + FuncionesSwing.getValorProporcion(Constantes.ISWING_ANCHO_CONTROL,0));
			tableColumn.setMaxWidth(Constantes.ISWING_ANCHO_COLUMNA + FuncionesSwing.getValorProporcion(Constantes.ISWING_ANCHO_CONTROL,0));

			this.iWidthTableDefinicion+=Constantes.ISWING_ANCHO_COLUMNA + FuncionesSwing.getValorProporcion(Constantes.ISWING_ANCHO_CONTROL,0);
			//tableColumn.addPropertyChangeListener(new ConfiguracionPunVenPropertyChangeListener());
		} else {
			Funciones2.setTableColumnOcultar(tableColumn);
		}


			tableColumn=this.jTableDatosConfiguracionPunVen.getColumnModel().getColumn(Funciones2.getColumnIndexByName(this.jTableDatosConfiguracionPunVen,ConfiguracionPunVenConstantesFunciones.LABEL_IDFORMATOFACTURA));

		if(this.configuracionpunvenConstantesFunciones.mostrarid_formato_facturaConfiguracionPunVen && Funciones2.permiteMostarParaBusqueda(this.esParaBusquedaForeignKey,ConfiguracionPunVenConstantesFunciones.LABEL_IDFORMATOFACTURA,true,iCountNumeroColumnasNormal,iCountNumeroColumnasFk++)) {
			tableColumn.setCellRenderer(new FormatoTableCell(this.formatofacturasForeignKey,this.configuracionpunvenConstantesFunciones.resaltarid_formato_facturaConfiguracionPunVen,this,this.configuracionpunvenConstantesFunciones.activarid_formato_facturaConfiguracionPunVen));
			tableColumn.setCellEditor(new FormatoTableCell(this.formatofacturasForeignKey,this.configuracionpunvenConstantesFunciones.resaltarid_formato_facturaConfiguracionPunVen,this,this.configuracionpunvenConstantesFunciones.activarid_formato_facturaConfiguracionPunVen,true,"id_formato_facturaConfiguracionPunVen","BASICO"));

			tableColumn.setPreferredWidth(Constantes.ISWING_ANCHO_COLUMNA + FuncionesSwing.getValorProporcion(Constantes.ISWING_ANCHO_CONTROL,0));
			tableColumn.setWidth(Constantes.ISWING_ANCHO_COLUMNA + FuncionesSwing.getValorProporcion(Constantes.ISWING_ANCHO_CONTROL,0));
			tableColumn.setMinWidth(Constantes.ISWING_ANCHO_COLUMNA + FuncionesSwing.getValorProporcion(Constantes.ISWING_ANCHO_CONTROL,0));
			tableColumn.setMaxWidth(Constantes.ISWING_ANCHO_COLUMNA + FuncionesSwing.getValorProporcion(Constantes.ISWING_ANCHO_CONTROL,0));

			this.iWidthTableDefinicion+=Constantes.ISWING_ANCHO_COLUMNA + FuncionesSwing.getValorProporcion(Constantes.ISWING_ANCHO_CONTROL,0);
			//tableColumn.addPropertyChangeListener(new ConfiguracionPunVenPropertyChangeListener());
		} else {
			Funciones2.setTableColumnOcultar(tableColumn);
		}


			tableColumn=this.jTableDatosConfiguracionPunVen.getColumnModel().getColumn(Funciones2.getColumnIndexByName(this.jTableDatosConfiguracionPunVen,ConfiguracionPunVenConstantesFunciones.LABEL_IDFORMATONOTAVENTA));

		if(this.configuracionpunvenConstantesFunciones.mostrarid_formato_nota_ventaConfiguracionPunVen && Funciones2.permiteMostarParaBusqueda(this.esParaBusquedaForeignKey,ConfiguracionPunVenConstantesFunciones.LABEL_IDFORMATONOTAVENTA,true,iCountNumeroColumnasNormal,iCountNumeroColumnasFk++)) {
			tableColumn.setCellRenderer(new FormatoTableCell(this.formatonotaventasForeignKey,this.configuracionpunvenConstantesFunciones.resaltarid_formato_nota_ventaConfiguracionPunVen,this,this.configuracionpunvenConstantesFunciones.activarid_formato_nota_ventaConfiguracionPunVen));
			tableColumn.setCellEditor(new FormatoTableCell(this.formatonotaventasForeignKey,this.configuracionpunvenConstantesFunciones.resaltarid_formato_nota_ventaConfiguracionPunVen,this,this.configuracionpunvenConstantesFunciones.activarid_formato_nota_ventaConfiguracionPunVen,true,"id_formato_nota_ventaConfiguracionPunVen","BASICO"));

			tableColumn.setPreferredWidth(Constantes.ISWING_ANCHO_COLUMNA + FuncionesSwing.getValorProporcion(Constantes.ISWING_ANCHO_CONTROL,0));
			tableColumn.setWidth(Constantes.ISWING_ANCHO_COLUMNA + FuncionesSwing.getValorProporcion(Constantes.ISWING_ANCHO_CONTROL,0));
			tableColumn.setMinWidth(Constantes.ISWING_ANCHO_COLUMNA + FuncionesSwing.getValorProporcion(Constantes.ISWING_ANCHO_CONTROL,0));
			tableColumn.setMaxWidth(Constantes.ISWING_ANCHO_COLUMNA + FuncionesSwing.getValorProporcion(Constantes.ISWING_ANCHO_CONTROL,0));

			this.iWidthTableDefinicion+=Constantes.ISWING_ANCHO_COLUMNA + FuncionesSwing.getValorProporcion(Constantes.ISWING_ANCHO_CONTROL,0);
			//tableColumn.addPropertyChangeListener(new ConfiguracionPunVenPropertyChangeListener());
		} else {
			Funciones2.setTableColumnOcultar(tableColumn);
		}


			tableColumn=this.jTableDatosConfiguracionPunVen.getColumnModel().getColumn(Funciones2.getColumnIndexByName(this.jTableDatosConfiguracionPunVen,ConfiguracionPunVenConstantesFunciones.LABEL_IDFORMATONOTACREDITO));

		if(this.configuracionpunvenConstantesFunciones.mostrarid_formato_nota_creditoConfiguracionPunVen && Funciones2.permiteMostarParaBusqueda(this.esParaBusquedaForeignKey,ConfiguracionPunVenConstantesFunciones.LABEL_IDFORMATONOTACREDITO,true,iCountNumeroColumnasNormal,iCountNumeroColumnasFk++)) {
			tableColumn.setCellRenderer(new FormatoTableCell(this.formatonotacreditosForeignKey,this.configuracionpunvenConstantesFunciones.resaltarid_formato_nota_creditoConfiguracionPunVen,this,this.configuracionpunvenConstantesFunciones.activarid_formato_nota_creditoConfiguracionPunVen));
			tableColumn.setCellEditor(new FormatoTableCell(this.formatonotacreditosForeignKey,this.configuracionpunvenConstantesFunciones.resaltarid_formato_nota_creditoConfiguracionPunVen,this,this.configuracionpunvenConstantesFunciones.activarid_formato_nota_creditoConfiguracionPunVen,true,"id_formato_nota_creditoConfiguracionPunVen","BASICO"));

			tableColumn.setPreferredWidth(Constantes.ISWING_ANCHO_COLUMNA + FuncionesSwing.getValorProporcion(Constantes.ISWING_ANCHO_CONTROL,0));
			tableColumn.setWidth(Constantes.ISWING_ANCHO_COLUMNA + FuncionesSwing.getValorProporcion(Constantes.ISWING_ANCHO_CONTROL,0));
			tableColumn.setMinWidth(Constantes.ISWING_ANCHO_COLUMNA + FuncionesSwing.getValorProporcion(Constantes.ISWING_ANCHO_CONTROL,0));
			tableColumn.setMaxWidth(Constantes.ISWING_ANCHO_COLUMNA + FuncionesSwing.getValorProporcion(Constantes.ISWING_ANCHO_CONTROL,0));

			this.iWidthTableDefinicion+=Constantes.ISWING_ANCHO_COLUMNA + FuncionesSwing.getValorProporcion(Constantes.ISWING_ANCHO_CONTROL,0);
			//tableColumn.addPropertyChangeListener(new ConfiguracionPunVenPropertyChangeListener());
		} else {
			Funciones2.setTableColumnOcultar(tableColumn);
		}


			tableColumn=this.jTableDatosConfiguracionPunVen.getColumnModel().getColumn(Funciones2.getColumnIndexByName(this.jTableDatosConfiguracionPunVen,ConfiguracionPunVenConstantesFunciones.LABEL_IDTRANSACCIONFACTURA));

		if(this.configuracionpunvenConstantesFunciones.mostrarid_transaccion_facturaConfiguracionPunVen && Funciones2.permiteMostarParaBusqueda(this.esParaBusquedaForeignKey,ConfiguracionPunVenConstantesFunciones.LABEL_IDTRANSACCIONFACTURA,true,iCountNumeroColumnasNormal,iCountNumeroColumnasFk++)) {
			tableColumn.setCellRenderer(new TransaccionTableCell(this.transaccionfacturasForeignKey,this.configuracionpunvenConstantesFunciones.resaltarid_transaccion_facturaConfiguracionPunVen,this,this.configuracionpunvenConstantesFunciones.activarid_transaccion_facturaConfiguracionPunVen));
			tableColumn.setCellEditor(new TransaccionTableCell(this.transaccionfacturasForeignKey,this.configuracionpunvenConstantesFunciones.resaltarid_transaccion_facturaConfiguracionPunVen,this,this.configuracionpunvenConstantesFunciones.activarid_transaccion_facturaConfiguracionPunVen,true,"id_transaccion_facturaConfiguracionPunVen","BASICO"));

			tableColumn.setPreferredWidth(Constantes.ISWING_ANCHO_COLUMNA + FuncionesSwing.getValorProporcion(Constantes.ISWING_ANCHO_CONTROL,50));
			tableColumn.setWidth(Constantes.ISWING_ANCHO_COLUMNA + FuncionesSwing.getValorProporcion(Constantes.ISWING_ANCHO_CONTROL,50));
			tableColumn.setMinWidth(Constantes.ISWING_ANCHO_COLUMNA + FuncionesSwing.getValorProporcion(Constantes.ISWING_ANCHO_CONTROL,50));
			tableColumn.setMaxWidth(Constantes.ISWING_ANCHO_COLUMNA + FuncionesSwing.getValorProporcion(Constantes.ISWING_ANCHO_CONTROL,50));

			this.iWidthTableDefinicion+=Constantes.ISWING_ANCHO_COLUMNA + FuncionesSwing.getValorProporcion(Constantes.ISWING_ANCHO_CONTROL,50);
			//tableColumn.addPropertyChangeListener(new ConfiguracionPunVenPropertyChangeListener());
		} else {
			Funciones2.setTableColumnOcultar(tableColumn);
		}


			tableColumn=this.jTableDatosConfiguracionPunVen.getColumnModel().getColumn(Funciones2.getColumnIndexByName(this.jTableDatosConfiguracionPunVen,ConfiguracionPunVenConstantesFunciones.LABEL_IDTRANSACCIONNOTAVENTA));

		if(this.configuracionpunvenConstantesFunciones.mostrarid_transaccion_nota_ventaConfiguracionPunVen && Funciones2.permiteMostarParaBusqueda(this.esParaBusquedaForeignKey,ConfiguracionPunVenConstantesFunciones.LABEL_IDTRANSACCIONNOTAVENTA,true,iCountNumeroColumnasNormal,iCountNumeroColumnasFk++)) {
			tableColumn.setCellRenderer(new TransaccionTableCell(this.transaccionnotaventasForeignKey,this.configuracionpunvenConstantesFunciones.resaltarid_transaccion_nota_ventaConfiguracionPunVen,this,this.configuracionpunvenConstantesFunciones.activarid_transaccion_nota_ventaConfiguracionPunVen));
			tableColumn.setCellEditor(new TransaccionTableCell(this.transaccionnotaventasForeignKey,this.configuracionpunvenConstantesFunciones.resaltarid_transaccion_nota_ventaConfiguracionPunVen,this,this.configuracionpunvenConstantesFunciones.activarid_transaccion_nota_ventaConfiguracionPunVen,true,"id_transaccion_nota_ventaConfiguracionPunVen","BASICO"));

			tableColumn.setPreferredWidth(Constantes.ISWING_ANCHO_COLUMNA + FuncionesSwing.getValorProporcion(Constantes.ISWING_ANCHO_CONTROL,50));
			tableColumn.setWidth(Constantes.ISWING_ANCHO_COLUMNA + FuncionesSwing.getValorProporcion(Constantes.ISWING_ANCHO_CONTROL,50));
			tableColumn.setMinWidth(Constantes.ISWING_ANCHO_COLUMNA + FuncionesSwing.getValorProporcion(Constantes.ISWING_ANCHO_CONTROL,50));
			tableColumn.setMaxWidth(Constantes.ISWING_ANCHO_COLUMNA + FuncionesSwing.getValorProporcion(Constantes.ISWING_ANCHO_CONTROL,50));

			this.iWidthTableDefinicion+=Constantes.ISWING_ANCHO_COLUMNA + FuncionesSwing.getValorProporcion(Constantes.ISWING_ANCHO_CONTROL,50);
			//tableColumn.addPropertyChangeListener(new ConfiguracionPunVenPropertyChangeListener());
		} else {
			Funciones2.setTableColumnOcultar(tableColumn);
		}


			tableColumn=this.jTableDatosConfiguracionPunVen.getColumnModel().getColumn(Funciones2.getColumnIndexByName(this.jTableDatosConfiguracionPunVen,ConfiguracionPunVenConstantesFunciones.LABEL_IDTRANSACCIONNOTACREDITO));

		if(this.configuracionpunvenConstantesFunciones.mostrarid_transaccion_nota_creditoConfiguracionPunVen && Funciones2.permiteMostarParaBusqueda(this.esParaBusquedaForeignKey,ConfiguracionPunVenConstantesFunciones.LABEL_IDTRANSACCIONNOTACREDITO,true,iCountNumeroColumnasNormal,iCountNumeroColumnasFk++)) {
			tableColumn.setCellRenderer(new TransaccionTableCell(this.transaccionnotacreditosForeignKey,this.configuracionpunvenConstantesFunciones.resaltarid_transaccion_nota_creditoConfiguracionPunVen,this,this.configuracionpunvenConstantesFunciones.activarid_transaccion_nota_creditoConfiguracionPunVen));
			tableColumn.setCellEditor(new TransaccionTableCell(this.transaccionnotacreditosForeignKey,this.configuracionpunvenConstantesFunciones.resaltarid_transaccion_nota_creditoConfiguracionPunVen,this,this.configuracionpunvenConstantesFunciones.activarid_transaccion_nota_creditoConfiguracionPunVen,true,"id_transaccion_nota_creditoConfiguracionPunVen","BASICO"));

			tableColumn.setPreferredWidth(Constantes.ISWING_ANCHO_COLUMNA + FuncionesSwing.getValorProporcion(Constantes.ISWING_ANCHO_CONTROL,50));
			tableColumn.setWidth(Constantes.ISWING_ANCHO_COLUMNA + FuncionesSwing.getValorProporcion(Constantes.ISWING_ANCHO_CONTROL,50));
			tableColumn.setMinWidth(Constantes.ISWING_ANCHO_COLUMNA + FuncionesSwing.getValorProporcion(Constantes.ISWING_ANCHO_CONTROL,50));
			tableColumn.setMaxWidth(Constantes.ISWING_ANCHO_COLUMNA + FuncionesSwing.getValorProporcion(Constantes.ISWING_ANCHO_CONTROL,50));

			this.iWidthTableDefinicion+=Constantes.ISWING_ANCHO_COLUMNA + FuncionesSwing.getValorProporcion(Constantes.ISWING_ANCHO_CONTROL,50);
			//tableColumn.addPropertyChangeListener(new ConfiguracionPunVenPropertyChangeListener());
		} else {
			Funciones2.setTableColumnOcultar(tableColumn);
		}


			tableColumn=this.jTableDatosConfiguracionPunVen.getColumnModel().getColumn(Funciones2.getColumnIndexByName(this.jTableDatosConfiguracionPunVen,ConfiguracionPunVenConstantesFunciones.LABEL_IDTRANSACCIONCUENTAFACTURA));

		if(this.configuracionpunvenConstantesFunciones.mostrarid_transaccion_cuenta_facturaConfiguracionPunVen && Funciones2.permiteMostarParaBusqueda(this.esParaBusquedaForeignKey,ConfiguracionPunVenConstantesFunciones.LABEL_IDTRANSACCIONCUENTAFACTURA,true,iCountNumeroColumnasNormal,iCountNumeroColumnasFk++)) {
			tableColumn.setCellRenderer(new TransaccionTableCell(this.transaccioncuentafacturasForeignKey,this.configuracionpunvenConstantesFunciones.resaltarid_transaccion_cuenta_facturaConfiguracionPunVen,this,this.configuracionpunvenConstantesFunciones.activarid_transaccion_cuenta_facturaConfiguracionPunVen));
			tableColumn.setCellEditor(new TransaccionTableCell(this.transaccioncuentafacturasForeignKey,this.configuracionpunvenConstantesFunciones.resaltarid_transaccion_cuenta_facturaConfiguracionPunVen,this,this.configuracionpunvenConstantesFunciones.activarid_transaccion_cuenta_facturaConfiguracionPunVen,true,"id_transaccion_cuenta_facturaConfiguracionPunVen","BASICO"));

			tableColumn.setPreferredWidth(Constantes.ISWING_ANCHO_COLUMNA + FuncionesSwing.getValorProporcion(Constantes.ISWING_ANCHO_CONTROL,50));
			tableColumn.setWidth(Constantes.ISWING_ANCHO_COLUMNA + FuncionesSwing.getValorProporcion(Constantes.ISWING_ANCHO_CONTROL,50));
			tableColumn.setMinWidth(Constantes.ISWING_ANCHO_COLUMNA + FuncionesSwing.getValorProporcion(Constantes.ISWING_ANCHO_CONTROL,50));
			tableColumn.setMaxWidth(Constantes.ISWING_ANCHO_COLUMNA + FuncionesSwing.getValorProporcion(Constantes.ISWING_ANCHO_CONTROL,50));

			this.iWidthTableDefinicion+=Constantes.ISWING_ANCHO_COLUMNA + FuncionesSwing.getValorProporcion(Constantes.ISWING_ANCHO_CONTROL,50);
			//tableColumn.addPropertyChangeListener(new ConfiguracionPunVenPropertyChangeListener());
		} else {
			Funciones2.setTableColumnOcultar(tableColumn);
		}


			tableColumn=this.jTableDatosConfiguracionPunVen.getColumnModel().getColumn(Funciones2.getColumnIndexByName(this.jTableDatosConfiguracionPunVen,ConfiguracionPunVenConstantesFunciones.LABEL_IDTRANSACCIONCUENTANOTAVENTA));

		if(this.configuracionpunvenConstantesFunciones.mostrarid_transaccion_cuenta_nota_ventaConfiguracionPunVen && Funciones2.permiteMostarParaBusqueda(this.esParaBusquedaForeignKey,ConfiguracionPunVenConstantesFunciones.LABEL_IDTRANSACCIONCUENTANOTAVENTA,true,iCountNumeroColumnasNormal,iCountNumeroColumnasFk++)) {
			tableColumn.setCellRenderer(new TransaccionTableCell(this.transaccioncuentanotaventasForeignKey,this.configuracionpunvenConstantesFunciones.resaltarid_transaccion_cuenta_nota_ventaConfiguracionPunVen,this,this.configuracionpunvenConstantesFunciones.activarid_transaccion_cuenta_nota_ventaConfiguracionPunVen));
			tableColumn.setCellEditor(new TransaccionTableCell(this.transaccioncuentanotaventasForeignKey,this.configuracionpunvenConstantesFunciones.resaltarid_transaccion_cuenta_nota_ventaConfiguracionPunVen,this,this.configuracionpunvenConstantesFunciones.activarid_transaccion_cuenta_nota_ventaConfiguracionPunVen,true,"id_transaccion_cuenta_nota_ventaConfiguracionPunVen","BASICO"));

			tableColumn.setPreferredWidth(Constantes.ISWING_ANCHO_COLUMNA + FuncionesSwing.getValorProporcion(Constantes.ISWING_ANCHO_CONTROL,50));
			tableColumn.setWidth(Constantes.ISWING_ANCHO_COLUMNA + FuncionesSwing.getValorProporcion(Constantes.ISWING_ANCHO_CONTROL,50));
			tableColumn.setMinWidth(Constantes.ISWING_ANCHO_COLUMNA + FuncionesSwing.getValorProporcion(Constantes.ISWING_ANCHO_CONTROL,50));
			tableColumn.setMaxWidth(Constantes.ISWING_ANCHO_COLUMNA + FuncionesSwing.getValorProporcion(Constantes.ISWING_ANCHO_CONTROL,50));

			this.iWidthTableDefinicion+=Constantes.ISWING_ANCHO_COLUMNA + FuncionesSwing.getValorProporcion(Constantes.ISWING_ANCHO_CONTROL,50);
			//tableColumn.addPropertyChangeListener(new ConfiguracionPunVenPropertyChangeListener());
		} else {
			Funciones2.setTableColumnOcultar(tableColumn);
		}


			tableColumn=this.jTableDatosConfiguracionPunVen.getColumnModel().getColumn(Funciones2.getColumnIndexByName(this.jTableDatosConfiguracionPunVen,ConfiguracionPunVenConstantesFunciones.LABEL_IDTRANSACCIONCUENTANOTACREDITO));

		if(this.configuracionpunvenConstantesFunciones.mostrarid_transaccion_cuenta_nota_creditoConfiguracionPunVen && Funciones2.permiteMostarParaBusqueda(this.esParaBusquedaForeignKey,ConfiguracionPunVenConstantesFunciones.LABEL_IDTRANSACCIONCUENTANOTACREDITO,true,iCountNumeroColumnasNormal,iCountNumeroColumnasFk++)) {
			tableColumn.setCellRenderer(new TransaccionTableCell(this.transaccioncuentanotacreditosForeignKey,this.configuracionpunvenConstantesFunciones.resaltarid_transaccion_cuenta_nota_creditoConfiguracionPunVen,this,this.configuracionpunvenConstantesFunciones.activarid_transaccion_cuenta_nota_creditoConfiguracionPunVen));
			tableColumn.setCellEditor(new TransaccionTableCell(this.transaccioncuentanotacreditosForeignKey,this.configuracionpunvenConstantesFunciones.resaltarid_transaccion_cuenta_nota_creditoConfiguracionPunVen,this,this.configuracionpunvenConstantesFunciones.activarid_transaccion_cuenta_nota_creditoConfiguracionPunVen,true,"id_transaccion_cuenta_nota_creditoConfiguracionPunVen","BASICO"));

			tableColumn.setPreferredWidth(Constantes.ISWING_ANCHO_COLUMNA + FuncionesSwing.getValorProporcion(Constantes.ISWING_ANCHO_CONTROL,50));
			tableColumn.setWidth(Constantes.ISWING_ANCHO_COLUMNA + FuncionesSwing.getValorProporcion(Constantes.ISWING_ANCHO_CONTROL,50));
			tableColumn.setMinWidth(Constantes.ISWING_ANCHO_COLUMNA + FuncionesSwing.getValorProporcion(Constantes.ISWING_ANCHO_CONTROL,50));
			tableColumn.setMaxWidth(Constantes.ISWING_ANCHO_COLUMNA + FuncionesSwing.getValorProporcion(Constantes.ISWING_ANCHO_CONTROL,50));

			this.iWidthTableDefinicion+=Constantes.ISWING_ANCHO_COLUMNA + FuncionesSwing.getValorProporcion(Constantes.ISWING_ANCHO_CONTROL,50);
			//tableColumn.addPropertyChangeListener(new ConfiguracionPunVenPropertyChangeListener());
		} else {
			Funciones2.setTableColumnOcultar(tableColumn);
		}
			
		} else {
		}			
					
		if(!this.configuracionpunvenSessionBean.getEsGuardarRelacionado()
			&& !this.esParaBusquedaForeignKey) {
			
		}
		
		if(true) {
			String sLabelColumnAccion="Editar";
			String sLabelColumnAccionEli="Eli";
			
			if(this.esParaBusquedaForeignKey)  {
				sLabelColumnAccion="Seleccionar";
				
				//LO MISMO QUE ELSE
				tableColumn= new TableColumn();
				tableColumn.setIdentifier(sLabelColumnAccion);
				tableColumn.setHeaderValue(sLabelColumnAccion);
				tableColumn.setCellRenderer(new IdTableCell(this,false,false,this.configuracionpunvenSessionBean.getEsGuardarRelacionado()));
				tableColumn.setCellEditor(new IdTableCell(this,false,false,this.configuracionpunvenSessionBean.getEsGuardarRelacionado()));
	
				tableColumn.setPreferredWidth(Constantes.ISWING_ANCHO_COLUMNA); 	 
				tableColumn.setWidth(Constantes.ISWING_ANCHO_COLUMNA); 	 
				tableColumn.setMinWidth(Constantes.ISWING_ANCHO_COLUMNA); 
				tableColumn.setMaxWidth(Constantes.ISWING_ANCHO_COLUMNA); 
				
				this.iWidthTableDefinicion+=Constantes.ISWING_ANCHO_COLUMNA;
				
				this.jTableDatosConfiguracionPunVen.addColumn(tableColumn);
			
			} else {				
				
				//LO MISMO QUE IF
				
				tableColumn= new TableColumn();
				tableColumn.setIdentifier(sLabelColumnAccion);
				tableColumn.setHeaderValue(sLabelColumnAccion);
				tableColumn.setCellRenderer(new IdTableCell(this,false,false,this.configuracionpunvenSessionBean.getEsGuardarRelacionado()));
				tableColumn.setCellEditor(new IdTableCell(this,false,false,this.configuracionpunvenSessionBean.getEsGuardarRelacionado()));
		
				tableColumn.setPreferredWidth(Constantes.ISWING_ANCHO_COLUMNA); 	 
				tableColumn.setWidth(Constantes.ISWING_ANCHO_COLUMNA); 	 
				tableColumn.setMinWidth(Constantes.ISWING_ANCHO_COLUMNA); 
				tableColumn.setMaxWidth(Constantes.ISWING_ANCHO_COLUMNA); 
				
				this.iWidthTableDefinicion+=Constantes.ISWING_ANCHO_COLUMNA;
				
				this.jTableDatosConfiguracionPunVen.addColumn(tableColumn);				
					
				//ELIMINAR
				if(this.isPermisoEliminarConfiguracionPunVen && this.isPermisoGuardarCambiosConfiguracionPunVen) {
					tableColumn= new TableColumn();
					tableColumn.setIdentifier(Constantes2.S_ELI);
					tableColumn.setHeaderValue(sLabelColumnAccionEli);
					tableColumn.setCellRenderer(new IdTableCell(this,false,true,this.configuracionpunvenSessionBean.getEsGuardarRelacionado()));
					tableColumn.setCellEditor(new IdTableCell(this,false,true,this.configuracionpunvenSessionBean.getEsGuardarRelacionado()));
			
					tableColumn.setPreferredWidth(65); 	 
					tableColumn.setWidth(65); 	 
					tableColumn.setMinWidth(65); 
					tableColumn.setMaxWidth(65);
					
					this.iWidthTableDefinicion+=65;
						
					this.jTableDatosConfiguracionPunVen.addColumn(tableColumn);
				}
			}			
						
			
			/*
			tableColumn= new TableColumn();
			tableColumn.setIdentifier(Constantes2.S_SELECCIONAR);
			tableColumn.setHeaderValue(Constantes2.S_SELECCIONAR);
			tableColumn.setCellRenderer(new IdSeleccionarTableCell(this));
			tableColumn.setCellEditor(new IdSeleccionarTableCell(this));
			
			tableColumn.setPreferredWidth(30); 	 
			tableColumn.setWidth(30); 	 
			tableColumn.setMinWidth(30); 
			
			this.iWidthTableDefinicion+=30;
			
			this.jTableDatosConfiguracionPunVen.addColumn(tableColumn);
			*/
		}
		
		Integer iUltimaColumna=0;//1
		Integer iNuevaPosicionColumna=0;
		
		
		//PERMITE ELIMINAR SIMPLE
		if(!this.esParaBusquedaForeignKey)  {
			if(this.isPermisoEliminarConfiguracionPunVen && this.isPermisoGuardarCambiosConfiguracionPunVen) {
				iUltimaColumna++;
			}	
		}
		
		//PERMITE EDITAR SIMPLE
		iUltimaColumna++;	
		
				
		
		//MOVIA SELECCIONAR
		//iUltimaColumna++;
		
		if(!this.esParaBusquedaForeignKey)  {
			if(this.isPermisoEliminarConfiguracionPunVen && this.isPermisoGuardarCambiosConfiguracionPunVen) {
				//REUBICA ELIMINAR SIMPLE
				jTableDatosConfiguracionPunVen.moveColumn(this.jTableDatosConfiguracionPunVen.getColumnModel().getColumnCount()-iUltimaColumna, iNuevaPosicionColumna++);//-1,-2 o -3
					
				iUltimaColumna--;
			}
		}
		//REUBICA EDITAR SIMPLE
		jTableDatosConfiguracionPunVen.moveColumn(this.jTableDatosConfiguracionPunVen.getColumnModel().getColumnCount()-iUltimaColumna, iNuevaPosicionColumna++);//-1,-2 o -3				
		
		
		
		
		//REUBICABA SELECCIONAR
		/*
		if(iUltimaColumna>1) {
			iUltimaColumna--;
		}
		
		//iNuevaPosicionColumna++;
			
		//REUBICA SELECCIONAR FILA CHECK
		jTableDatosConfiguracionPunVen.moveColumn(this.jTableDatosConfiguracionPunVen.getColumnModel().getColumnCount()-iUltimaColumna, iNuevaPosicionColumna++);//-1		
		*/
		
		//DEFINEN HEADERS
		final TableCellRenderer tableHeaderDefaultCellRenderer = this.jTableDatosConfiguracionPunVen.getTableHeader().getDefaultRenderer();
		
		this.jTableDatosConfiguracionPunVen.getTableHeader().setDefaultRenderer(new TableCellRendererHeader(this.jTableDatosConfiguracionPunVen,tableHeaderDefaultCellRenderer));
	    
		TableColumn column=null;
		
		if(!ConfiguracionPunVenJInternalFrame.ISBINDING_MANUAL_TABLA) {
			for(int i = 0; i < this.jTableDatosConfiguracionPunVen.getColumnModel().getColumnCount(); i++) { 
				column = this.jTableDatosConfiguracionPunVen.getColumnModel().getColumn(i); 
				
				if(column.getIdentifier()!=null) {
					//SI SE UTILIZA UN HEADER ES GENERICO
					//column.setHeaderRenderer(new HeaderRenderer(column.getIdentifier().toString()));
				}
				
				if(column.getIdentifier()!=null && column.getIdentifier().equals(Constantes2.S_ELI)) {
					continue;
				}
				
				if(column.getIdentifier()!=null && column.getIdentifier().equals(Constantes2.S_SELECCIONAR)) {
					if(!ConfiguracionPunVenJInternalFrame.ISBINDING_MANUAL_TABLA) {
						column.setPreferredWidth(50); 	 
						column.setWidth(50); 	 
						column.setMinWidth(50); 	
						column.setMaxWidth(50); 
						
						this.iWidthTableDefinicion+=50;
					}
					
				} else {
					if(!ConfiguracionPunVenJInternalFrame.ISBINDING_MANUAL_TABLA) {
						column.setPreferredWidth(Constantes.ISWING_ANCHO_COLUMNA); 	 
						column.setWidth(Constantes.ISWING_ANCHO_COLUMNA); 	 
						column.setMinWidth(Constantes.ISWING_ANCHO_COLUMNA); 	
						column.setMaxWidth(Constantes.ISWING_ANCHO_COLUMNA); 	
						
						this.iWidthTableDefinicion+=Constantes.ISWING_ANCHO_COLUMNA;
					}
				}
			}
		}
		
		this.jTableDatosConfiguracionPunVen.setSelectionBackground(FuncionesSwing.getColorSelectedBackground());
		this.jTableDatosConfiguracionPunVen.setSelectionForeground(FuncionesSwing.getColorSelectedForeground());
		
		/*
		this.jTableDatosConfiguracionPunVen.setDefaultRenderer(Object.class, new DefaultTableCellRenderer() {
			private static final long serialVersionUID = 1L;
			
		    @Override
		    public Component getTableCellRendererComponent(JTable table, Object value, boolean isSelected, boolean hasFocus, int row, int column) {
		        final Component component= super.getTableCellRendererComponent(table, value, isSelected, hasFocus, row, column);
		        //POR DEFECTO ES MEJOR, SE PIERDE DATOS AL SELECCIONAR BLANCO LETRAS BLANCAS
				component.setBackground(row % 2 == 0 ? FuncionesSwing.getColorTextFields(Constantes2.S_FONDOCONTROL_COLOR) : Funciones2.getColorFilaTabla2()); //FuncionesSwing.getColorTextFields(Constantes2.S_FONDOCONTROL_COLOR)
				component.setForeground(Funciones2.getColorTextoFilaTabla1());
				
				try {
		        	int iSize=-999;
		        	
		        	if(conTotales) {
						//FILA TOTALES OTRO COLOR, SI TABLA NO ES UNO A UNO
			        	if(Constantes.ISUSAEJBLOGICLAYER) {
							iSize=configuracionpunvenLogic.getConfiguracionPunVens().size()-1;
								
						} else if(Constantes.ISUSAEJBREMOTE || Constantes.ISUSAEJBHOME) {
							iSize=configuracionpunvens.size()-1;
						}
						
						if(iSize==row) {
							component.setBackground(Funciones2.getColorFilaTablaTotales());
						}
		        	}
					
					//POR EFICIENCIA NO UTILIZAR					
					//if (component instanceof JComponent) {
		            //    JComponent jcomponent = (JComponent) component;		                 		                
		        	//}				
					
				} catch (Exception e) {
					e.printStackTrace();
				}
				
		        return component;
		    }
		});
		*/
		
		//ESTA EN LA DEFINICION DE LA TABLA
		//this.jTableDatosConfiguracionPunVen.setRowHeight(Constantes.ISWING_ALTO_FILA_TABLA);
		
		/*
		column=this.jTableDatosConfiguracionPunVen.getColumnModel().getColumn(Funciones2.getColumnIndexByName(this.jTableDatosSistema,Constantes2.S_SELECCIONAR));
		
		if(column!=null) {
			column.setPreferredWidth(25); 	 
			column.setWidth(25); 	 
			column.setMinWidth(25); 	
		}
		*/
			
			//CopyTableToTableTotal();
		} else {
			
			this.actualizarVisualTableDatosConfiguracionPunVen();
			
		}
	}
	
	/*
	//COPY_TABLES
	/* FALTARIA RESOLVER:
	   1 SOLO SCROLL PARA 2 TABLAS
	   COPIA EXACTA DE COLUMNAS DE UNA TABLA A OTRA, SI SE MODIFICA TAMANIO TAMBIEN LA OTRA
	*/
	
	public void jButtonIdActionPerformed(ActionEvent evt,int rowIndex,Boolean esRelaciones,Boolean esEliminar) { 
		try {
			if(!esEliminar) {
				this.estaModoSeleccionar=true;
				
				//this.isEsNuevoConfiguracionPunVen=false;
					
				ConfiguracionPunVenBeanSwingJInternalFrameAdditional.procesarEventosVista(this.parametroGeneralUsuario,this.moduloActual,this.opcionActual,this.usuarioActual,this,FuncionTipo.BEFORE,ControlTipo.FORM,EventoTipo.LOAD,EventoSubTipo.SELECTED,"FORM",this.configuracionpunven,new Object(),this.configuracionpunvenParameterGeneral,this.configuracionpunvenReturnGeneral);
			
				if(this.configuracionpunvenSessionBean.getConGuardarRelaciones()) {
					this.dStart=(double)System.currentTimeMillis();
				}
				
				if(this.jInternalFrameDetalleFormConfiguracionPunVen==null) {
					this.inicializarFormDetalle();
				}
				
				this.inicializarInvalidValues();
				
				int intSelectedRow = 0;
				
				if(rowIndex>=0) {
					intSelectedRow=rowIndex;
					this.jTableDatosConfiguracionPunVen.getSelectionModel().setSelectionInterval(intSelectedRow, intSelectedRow);
				} else {	
					intSelectedRow=this.jTableDatosConfiguracionPunVen.getSelectedRow();	       
				}
				
				//ARCHITECTURE
				if(Constantes.ISUSAEJBLOGICLAYER) {
					this.configuracionpunven =(ConfiguracionPunVen) this.configuracionpunvenLogic.getConfiguracionPunVens().toArray()[this.jTableDatosConfiguracionPunVen.convertRowIndexToModel(intSelectedRow)];
				} else if(Constantes.ISUSAEJBREMOTE || Constantes.ISUSAEJBHOME ) {
					this.configuracionpunven =(ConfiguracionPunVen) this.configuracionpunvens.toArray()[this.jTableDatosConfiguracionPunVen.convertRowIndexToModel(intSelectedRow)];
				}
				//ARCHITECTURE
				
				//PUEDE SER PARA DUPLICADO O NUEVO TABLA
				
				if(this.configuracionpunven.getsType().equals("DUPLICADO")
				   || this.configuracionpunven.getsType().equals("NUEVO_GUARDAR_CAMBIOS")) {
					
					this.isEsNuevoConfiguracionPunVen=true;
				
				} else {
					this.isEsNuevoConfiguracionPunVen=false;	
				}
				
				//CONTROL VERSION ANTERIOR
				/*
				if(!this.configuracionpunvenSessionBean.getEsGuardarRelacionado()) {
					if(this.configuracionpunven.getId()>=0 && !this.configuracionpunven.getIsNew()) {						
						this.isEsNuevoConfiguracionPunVen=false;
						
					} else {
						this.isEsNuevoConfiguracionPunVen=true;
					}
					
				} else {
					//CONTROLAR PARA RELACIONADO
				}
				*/
				
				//ESTABLECE SI ES RELACIONADO O NO 
				this.habilitarDeshabilitarTipoMantenimientoConfiguracionPunVen(esRelaciones);						
				
				this.seleccionarConfiguracionPunVen(evt,null,rowIndex);
				
				//SELECCIONA ACTUAL PERO AUN NO SE HA INGRESADO AL SISTEMA
				//SE DESHABILITA POR GUARDAR CAMBIOS
				/*
				if(this.configuracionpunven.getId()<0) {
					this.isEsNuevoConfiguracionPunVen=true;
				}
				*/
				
				if(!this.esParaBusquedaForeignKey) {
					this.modificarConfiguracionPunVen(evt,rowIndex,esRelaciones);
				} else {
					this.seleccionarConfiguracionPunVen(evt,rowIndex);
				}	
				
				if(this.configuracionpunvenSessionBean.getConGuardarRelaciones()) {
					this.dEnd=(double)System.currentTimeMillis();					
					this.dDif=this.dEnd - this.dStart;
					
					if(Constantes.ISDEVELOPING) {
						System.out.println("Tiempo(ms) Seleccion ConfiguracionPunVen: " + this.dDif); 
					}
				}								
				
				ConfiguracionPunVenBeanSwingJInternalFrameAdditional.procesarEventosVista(this.parametroGeneralUsuario,this.moduloActual,this.opcionActual,this.usuarioActual,this,FuncionTipo.AFTER,ControlTipo.FORM,EventoTipo.LOAD,EventoSubTipo.SELECTED,"FORM",this.configuracionpunven,new Object(),this.configuracionpunvenParameterGeneral,this.configuracionpunvenReturnGeneral);
				
			} else {
				this.estaModoEliminarGuardarCambios=true;
				
				this.seleccionarConfiguracionPunVen(evt,null,rowIndex);
				
				if(this.permiteMantenimiento(this.configuracionpunven)) {
					if(this.configuracionpunven.getId()>0) {
						this.configuracionpunven.setIsDeleted(true);
						
						this.configuracionpunvensEliminados.add(this.configuracionpunven);
					}
					
					if(Constantes.ISUSAEJBLOGICLAYER) {				
						this.configuracionpunvenLogic.getConfiguracionPunVens().remove(this.configuracionpunven);
					} else if(Constantes.ISUSAEJBREMOTE||Constantes.ISUSAEJBHOME) {
						this.configuracionpunvens.remove(this.configuracionpunven);				
					}
					
					
					((ConfiguracionPunVenModel) this.jTableDatosConfiguracionPunVen.getModel()).fireTableRowsDeleted(rowIndex,rowIndex);
					
					this.actualizarFilaTotales();
					
					this.inicializarActualizarBindingTablaConfiguracionPunVen(false);					
				}								
			}
			
		} catch(Exception e) {
			FuncionesSwing.manageException2(this, e,logger,ConfiguracionPunVenConstantesFunciones.CLASSNAME);
			
		} finally {
			this.estaModoSeleccionar=false;				
			this.estaModoEliminarGuardarCambios=false;
		}
	}
	
	
	public void seleccionarConfiguracionPunVen(ActionEvent evt,javax.swing.event.ListSelectionEvent evt2,int rowIndex) throws Exception { 
		try {
			//SI PUEDE SER NUEVO Y SELECCIONAR (PARA DUPLICAR Y NUEVO TABLA)
			//if(!this.isEsNuevoConfiguracionPunVen) {
			
			if(this.jInternalFrameDetalleFormConfiguracionPunVen==null) { //if(!this.conCargarFormDetalle) {
				this.inicializarFormDetalle();
			}
			
				int intSelectedRow = 0;
				
				if(rowIndex>=0) {
					intSelectedRow=rowIndex;
					this.jTableDatosConfiguracionPunVen.getSelectionModel().setSelectionInterval(intSelectedRow, intSelectedRow);
				} else {	
					intSelectedRow=this.jTableDatosConfiguracionPunVen.getSelectedRow();	       
				}
				
				//CUANDO SE RECARGA TABLA TAMBIEN SE SELECCIONA PERO CON -1 POR LO QUE SE NECESITA VALIDAR ANTES
				if(intSelectedRow<0) {
					return;
				}
				
				//ARCHITECTURE
				if(Constantes.ISUSAEJBLOGICLAYER) {
					this.configuracionpunven =(ConfiguracionPunVen) this.configuracionpunvenLogic.getConfiguracionPunVens().toArray()[this.jTableDatosConfiguracionPunVen.convertRowIndexToModel(intSelectedRow)];
				} else if(Constantes.ISUSAEJBREMOTE || Constantes.ISUSAEJBHOME ) {
					this.configuracionpunven =(ConfiguracionPunVen) this.configuracionpunvens.toArray()[this.jTableDatosConfiguracionPunVen.convertRowIndexToModel(intSelectedRow)];
				}
				
				if(ConfiguracionPunVenJInternalFrame.ISBINDING_MANUAL_TABLA) {
					this.setVariablesObjetoActualToFormularioConfiguracionPunVen(this.configuracionpunven);
				}
				
				//ARCHITECTURE
				try {
					

					//Empresa
					if(!this.configuracionpunvenConstantesFunciones.cargarid_empresaConfiguracionPunVen || this.configuracionpunvenConstantesFunciones.event_dependid_empresaConfiguracionPunVen) {
						//this.cargarCombosEmpresasForeignKeyLista(" where id="+this.configuracionpunven.getid_empresa());
									//this.inicializarActualizarBindingConfiguracionPunVen(false,false);
						this.empresasForeignKey=new ArrayList<Empresa>();

						if(configuracionpunven.getEmpresa()!=null) {
							this.empresasForeignKey.add(configuracionpunven.getEmpresa());
						}

						this.addItemDefectoCombosForeignKeyEmpresa();
						this.cargarCombosFrameEmpresasForeignKey("Todos");
					}
					this.setActualEmpresaForeignKey(this.configuracionpunven.getid_empresa(),false,"Formulario");

					//Sucursal
					if(!this.configuracionpunvenConstantesFunciones.cargarid_sucursalConfiguracionPunVen || this.configuracionpunvenConstantesFunciones.event_dependid_sucursalConfiguracionPunVen) {
						//this.cargarCombosSucursalsForeignKeyLista(" where id="+this.configuracionpunven.getid_sucursal());
									//this.inicializarActualizarBindingConfiguracionPunVen(false,false);
						this.sucursalsForeignKey=new ArrayList<Sucursal>();

						if(configuracionpunven.getSucursal()!=null) {
							this.sucursalsForeignKey.add(configuracionpunven.getSucursal());
						}

						this.addItemDefectoCombosForeignKeySucursal();
						this.cargarCombosFrameSucursalsForeignKey("Todos");
					}
					this.setActualSucursalForeignKey(this.configuracionpunven.getid_sucursal(),false,"Formulario");

					//Bodega
					if(!this.configuracionpunvenConstantesFunciones.cargarid_bodegaConfiguracionPunVen || this.configuracionpunvenConstantesFunciones.event_dependid_bodegaConfiguracionPunVen) {
						//this.cargarCombosBodegasForeignKeyLista(" where id="+this.configuracionpunven.getid_bodega());
									//this.inicializarActualizarBindingConfiguracionPunVen(false,false);
						this.bodegasForeignKey=new ArrayList<Bodega>();

						if(configuracionpunven.getBodega()!=null) {
							this.bodegasForeignKey.add(configuracionpunven.getBodega());
						}

						this.addItemDefectoCombosForeignKeyBodega();
						this.cargarCombosFrameBodegasForeignKey("Todos");
					}
					this.setActualBodegaForeignKey(this.configuracionpunven.getid_bodega(),false,"Formulario");

					//CuentaContableEfectivo
					if(!this.configuracionpunvenConstantesFunciones.cargarid_cuenta_contable_efectivoConfiguracionPunVen || this.configuracionpunvenConstantesFunciones.event_dependid_cuenta_contable_efectivoConfiguracionPunVen) {
						//this.cargarCombosCuentaContableEfectivosForeignKeyLista(" where id="+this.configuracionpunven.getid_cuenta_contable_efectivo());
									//this.inicializarActualizarBindingConfiguracionPunVen(false,false);
						this.cuentacontableefectivosForeignKey=new ArrayList<CuentaContable>();

						if(configuracionpunven.getCuentaContableEfectivo()!=null) {
							this.cuentacontableefectivosForeignKey.add(configuracionpunven.getCuentaContableEfectivo());
						}

						this.addItemDefectoCombosForeignKeyCuentaContableEfectivo();
						this.cargarCombosFrameCuentaContableEfectivosForeignKey("Todos");
					}
					this.setActualCuentaContableEfectivoForeignKey(this.configuracionpunven.getid_cuenta_contable_efectivo(),false,"Formulario");

					//CuentaContableIce
					if(!this.configuracionpunvenConstantesFunciones.cargarid_cuenta_contable_iceConfiguracionPunVen || this.configuracionpunvenConstantesFunciones.event_dependid_cuenta_contable_iceConfiguracionPunVen) {
						//this.cargarCombosCuentaContableIcesForeignKeyLista(" where id="+this.configuracionpunven.getid_cuenta_contable_ice());
									//this.inicializarActualizarBindingConfiguracionPunVen(false,false);
						this.cuentacontableicesForeignKey=new ArrayList<CuentaContable>();

						if(configuracionpunven.getCuentaContableIce()!=null) {
							this.cuentacontableicesForeignKey.add(configuracionpunven.getCuentaContableIce());
						}

						this.addItemDefectoCombosForeignKeyCuentaContableIce();
						this.cargarCombosFrameCuentaContableIcesForeignKey("Todos");
					}
					this.setActualCuentaContableIceForeignKey(this.configuracionpunven.getid_cuenta_contable_ice(),false,"Formulario");

					//CuentaContableOtros
					if(!this.configuracionpunvenConstantesFunciones.cargarid_cuenta_contable_otrosConfiguracionPunVen || this.configuracionpunvenConstantesFunciones.event_dependid_cuenta_contable_otrosConfiguracionPunVen) {
						//this.cargarCombosCuentaContableOtrossForeignKeyLista(" where id="+this.configuracionpunven.getid_cuenta_contable_otros());
									//this.inicializarActualizarBindingConfiguracionPunVen(false,false);
						this.cuentacontableotrossForeignKey=new ArrayList<CuentaContable>();

						if(configuracionpunven.getCuentaContableOtros()!=null) {
							this.cuentacontableotrossForeignKey.add(configuracionpunven.getCuentaContableOtros());
						}

						this.addItemDefectoCombosForeignKeyCuentaContableOtros();
						this.cargarCombosFrameCuentaContableOtrossForeignKey("Todos");
					}
					this.setActualCuentaContableOtrosForeignKey(this.configuracionpunven.getid_cuenta_contable_otros(),false,"Formulario");

					//ClienteConsumidorFinal
					if(!this.configuracionpunvenConstantesFunciones.cargarid_cliente_consumidor_finalConfiguracionPunVen || this.configuracionpunvenConstantesFunciones.event_dependid_cliente_consumidor_finalConfiguracionPunVen) {
						//this.cargarCombosClienteConsumidorFinalsForeignKeyLista(" where id="+this.configuracionpunven.getid_cliente_consumidor_final());
									//this.inicializarActualizarBindingConfiguracionPunVen(false,false);
						this.clienteconsumidorfinalsForeignKey=new ArrayList<Cliente>();

						if(configuracionpunven.getClienteConsumidorFinal()!=null) {
							this.clienteconsumidorfinalsForeignKey.add(configuracionpunven.getClienteConsumidorFinal());
						}

						this.addItemDefectoCombosForeignKeyClienteConsumidorFinal();
						this.cargarCombosFrameClienteConsumidorFinalsForeignKey("Todos");
					}
					this.setActualClienteConsumidorFinalForeignKey(this.configuracionpunven.getid_cliente_consumidor_final(),false,"Formulario");

					//TipoDocumentoFactura
					if(!this.configuracionpunvenConstantesFunciones.cargarid_tipo_documento_facturaConfiguracionPunVen || this.configuracionpunvenConstantesFunciones.event_dependid_tipo_documento_facturaConfiguracionPunVen) {
						//this.cargarCombosTipoDocumentoFacturasForeignKeyLista(" where id="+this.configuracionpunven.getid_tipo_documento_factura());
									//this.inicializarActualizarBindingConfiguracionPunVen(false,false);
						this.tipodocumentofacturasForeignKey=new ArrayList<TipoDocumento>();

						if(configuracionpunven.getTipoDocumentoFactura()!=null) {
							this.tipodocumentofacturasForeignKey.add(configuracionpunven.getTipoDocumentoFactura());
						}

						this.addItemDefectoCombosForeignKeyTipoDocumentoFactura();
						this.cargarCombosFrameTipoDocumentoFacturasForeignKey("Todos");
					}
					this.setActualTipoDocumentoFacturaForeignKey(this.configuracionpunven.getid_tipo_documento_factura(),false,"Formulario");

					//TipoDocumentoNotaVenta
					if(!this.configuracionpunvenConstantesFunciones.cargarid_tipo_documento_nota_ventaConfiguracionPunVen || this.configuracionpunvenConstantesFunciones.event_dependid_tipo_documento_nota_ventaConfiguracionPunVen) {
						//this.cargarCombosTipoDocumentoNotaVentasForeignKeyLista(" where id="+this.configuracionpunven.getid_tipo_documento_nota_venta());
									//this.inicializarActualizarBindingConfiguracionPunVen(false,false);
						this.tipodocumentonotaventasForeignKey=new ArrayList<TipoDocumento>();

						if(configuracionpunven.getTipoDocumentoNotaVenta()!=null) {
							this.tipodocumentonotaventasForeignKey.add(configuracionpunven.getTipoDocumentoNotaVenta());
						}

						this.addItemDefectoCombosForeignKeyTipoDocumentoNotaVenta();
						this.cargarCombosFrameTipoDocumentoNotaVentasForeignKey("Todos");
					}
					this.setActualTipoDocumentoNotaVentaForeignKey(this.configuracionpunven.getid_tipo_documento_nota_venta(),false,"Formulario");

					//TipoDocumentoNotaCredito
					if(!this.configuracionpunvenConstantesFunciones.cargarid_tipo_documento_nota_creditoConfiguracionPunVen || this.configuracionpunvenConstantesFunciones.event_dependid_tipo_documento_nota_creditoConfiguracionPunVen) {
						//this.cargarCombosTipoDocumentoNotaCreditosForeignKeyLista(" where id="+this.configuracionpunven.getid_tipo_documento_nota_credito());
									//this.inicializarActualizarBindingConfiguracionPunVen(false,false);
						this.tipodocumentonotacreditosForeignKey=new ArrayList<TipoDocumento>();

						if(configuracionpunven.getTipoDocumentoNotaCredito()!=null) {
							this.tipodocumentonotacreditosForeignKey.add(configuracionpunven.getTipoDocumentoNotaCredito());
						}

						this.addItemDefectoCombosForeignKeyTipoDocumentoNotaCredito();
						this.cargarCombosFrameTipoDocumentoNotaCreditosForeignKey("Todos");
					}
					this.setActualTipoDocumentoNotaCreditoForeignKey(this.configuracionpunven.getid_tipo_documento_nota_credito(),false,"Formulario");

					//TipoDocumentoTarjetaCredito
					if(!this.configuracionpunvenConstantesFunciones.cargarid_tipo_documento_tarjeta_creditoConfiguracionPunVen || this.configuracionpunvenConstantesFunciones.event_dependid_tipo_documento_tarjeta_creditoConfiguracionPunVen) {
						//this.cargarCombosTipoDocumentoTarjetaCreditosForeignKeyLista(" where id="+this.configuracionpunven.getid_tipo_documento_tarjeta_credito());
									//this.inicializarActualizarBindingConfiguracionPunVen(false,false);
						this.tipodocumentotarjetacreditosForeignKey=new ArrayList<TipoDocumento>();

						if(configuracionpunven.getTipoDocumentoTarjetaCredito()!=null) {
							this.tipodocumentotarjetacreditosForeignKey.add(configuracionpunven.getTipoDocumentoTarjetaCredito());
						}

						this.addItemDefectoCombosForeignKeyTipoDocumentoTarjetaCredito();
						this.cargarCombosFrameTipoDocumentoTarjetaCreditosForeignKey("Todos");
					}
					this.setActualTipoDocumentoTarjetaCreditoForeignKey(this.configuracionpunven.getid_tipo_documento_tarjeta_credito(),false,"Formulario");

					//FormatoFactura
					if(!this.configuracionpunvenConstantesFunciones.cargarid_formato_facturaConfiguracionPunVen || this.configuracionpunvenConstantesFunciones.event_dependid_formato_facturaConfiguracionPunVen) {
						//this.cargarCombosFormatoFacturasForeignKeyLista(" where id="+this.configuracionpunven.getid_formato_factura());
									//this.inicializarActualizarBindingConfiguracionPunVen(false,false);
						this.formatofacturasForeignKey=new ArrayList<Formato>();

						if(configuracionpunven.getFormatoFactura()!=null) {
							this.formatofacturasForeignKey.add(configuracionpunven.getFormatoFactura());
						}

						this.addItemDefectoCombosForeignKeyFormatoFactura();
						this.cargarCombosFrameFormatoFacturasForeignKey("Todos");
					}
					this.setActualFormatoFacturaForeignKey(this.configuracionpunven.getid_formato_factura(),false,"Formulario");

					//FormatoNotaVenta
					if(!this.configuracionpunvenConstantesFunciones.cargarid_formato_nota_ventaConfiguracionPunVen || this.configuracionpunvenConstantesFunciones.event_dependid_formato_nota_ventaConfiguracionPunVen) {
						//this.cargarCombosFormatoNotaVentasForeignKeyLista(" where id="+this.configuracionpunven.getid_formato_nota_venta());
									//this.inicializarActualizarBindingConfiguracionPunVen(false,false);
						this.formatonotaventasForeignKey=new ArrayList<Formato>();

						if(configuracionpunven.getFormatoNotaVenta()!=null) {
							this.formatonotaventasForeignKey.add(configuracionpunven.getFormatoNotaVenta());
						}

						this.addItemDefectoCombosForeignKeyFormatoNotaVenta();
						this.cargarCombosFrameFormatoNotaVentasForeignKey("Todos");
					}
					this.setActualFormatoNotaVentaForeignKey(this.configuracionpunven.getid_formato_nota_venta(),false,"Formulario");

					//FormatoNotaCredito
					if(!this.configuracionpunvenConstantesFunciones.cargarid_formato_nota_creditoConfiguracionPunVen || this.configuracionpunvenConstantesFunciones.event_dependid_formato_nota_creditoConfiguracionPunVen) {
						//this.cargarCombosFormatoNotaCreditosForeignKeyLista(" where id="+this.configuracionpunven.getid_formato_nota_credito());
									//this.inicializarActualizarBindingConfiguracionPunVen(false,false);
						this.formatonotacreditosForeignKey=new ArrayList<Formato>();

						if(configuracionpunven.getFormatoNotaCredito()!=null) {
							this.formatonotacreditosForeignKey.add(configuracionpunven.getFormatoNotaCredito());
						}

						this.addItemDefectoCombosForeignKeyFormatoNotaCredito();
						this.cargarCombosFrameFormatoNotaCreditosForeignKey("Todos");
					}
					this.setActualFormatoNotaCreditoForeignKey(this.configuracionpunven.getid_formato_nota_credito(),false,"Formulario");

					//TransaccionFactura
					if(!this.configuracionpunvenConstantesFunciones.cargarid_transaccion_facturaConfiguracionPunVen || this.configuracionpunvenConstantesFunciones.event_dependid_transaccion_facturaConfiguracionPunVen) {
						//this.cargarCombosTransaccionFacturasForeignKeyLista(" where id="+this.configuracionpunven.getid_transaccion_factura());
									//this.inicializarActualizarBindingConfiguracionPunVen(false,false);
						this.transaccionfacturasForeignKey=new ArrayList<Transaccion>();

						if(configuracionpunven.getTransaccionFactura()!=null) {
							this.transaccionfacturasForeignKey.add(configuracionpunven.getTransaccionFactura());
						}

						this.addItemDefectoCombosForeignKeyTransaccionFactura();
						this.cargarCombosFrameTransaccionFacturasForeignKey("Todos");
					}
					this.setActualTransaccionFacturaForeignKey(this.configuracionpunven.getid_transaccion_factura(),false,"Formulario");

					//TransaccionNotaVenta
					if(!this.configuracionpunvenConstantesFunciones.cargarid_transaccion_nota_ventaConfiguracionPunVen || this.configuracionpunvenConstantesFunciones.event_dependid_transaccion_nota_ventaConfiguracionPunVen) {
						//this.cargarCombosTransaccionNotaVentasForeignKeyLista(" where id="+this.configuracionpunven.getid_transaccion_nota_venta());
									//this.inicializarActualizarBindingConfiguracionPunVen(false,false);
						this.transaccionnotaventasForeignKey=new ArrayList<Transaccion>();

						if(configuracionpunven.getTransaccionNotaVenta()!=null) {
							this.transaccionnotaventasForeignKey.add(configuracionpunven.getTransaccionNotaVenta());
						}

						this.addItemDefectoCombosForeignKeyTransaccionNotaVenta();
						this.cargarCombosFrameTransaccionNotaVentasForeignKey("Todos");
					}
					this.setActualTransaccionNotaVentaForeignKey(this.configuracionpunven.getid_transaccion_nota_venta(),false,"Formulario");

					//TransaccionNotaCredito
					if(!this.configuracionpunvenConstantesFunciones.cargarid_transaccion_nota_creditoConfiguracionPunVen || this.configuracionpunvenConstantesFunciones.event_dependid_transaccion_nota_creditoConfiguracionPunVen) {
						//this.cargarCombosTransaccionNotaCreditosForeignKeyLista(" where id="+this.configuracionpunven.getid_transaccion_nota_credito());
									//this.inicializarActualizarBindingConfiguracionPunVen(false,false);
						this.transaccionnotacreditosForeignKey=new ArrayList<Transaccion>();

						if(configuracionpunven.getTransaccionNotaCredito()!=null) {
							this.transaccionnotacreditosForeignKey.add(configuracionpunven.getTransaccionNotaCredito());
						}

						this.addItemDefectoCombosForeignKeyTransaccionNotaCredito();
						this.cargarCombosFrameTransaccionNotaCreditosForeignKey("Todos");
					}
					this.setActualTransaccionNotaCreditoForeignKey(this.configuracionpunven.getid_transaccion_nota_credito(),false,"Formulario");

					//TransaccionCuentaFactura
					if(!this.configuracionpunvenConstantesFunciones.cargarid_transaccion_cuenta_facturaConfiguracionPunVen || this.configuracionpunvenConstantesFunciones.event_dependid_transaccion_cuenta_facturaConfiguracionPunVen) {
						//this.cargarCombosTransaccionCuentaFacturasForeignKeyLista(" where id="+this.configuracionpunven.getid_transaccion_cuenta_factura());
									//this.inicializarActualizarBindingConfiguracionPunVen(false,false);
						this.transaccioncuentafacturasForeignKey=new ArrayList<Transaccion>();

						if(configuracionpunven.getTransaccionCuentaFactura()!=null) {
							this.transaccioncuentafacturasForeignKey.add(configuracionpunven.getTransaccionCuentaFactura());
						}

						this.addItemDefectoCombosForeignKeyTransaccionCuentaFactura();
						this.cargarCombosFrameTransaccionCuentaFacturasForeignKey("Todos");
					}
					this.setActualTransaccionCuentaFacturaForeignKey(this.configuracionpunven.getid_transaccion_cuenta_factura(),false,"Formulario");

					//TransaccionCuentaNotaVenta
					if(!this.configuracionpunvenConstantesFunciones.cargarid_transaccion_cuenta_nota_ventaConfiguracionPunVen || this.configuracionpunvenConstantesFunciones.event_dependid_transaccion_cuenta_nota_ventaConfiguracionPunVen) {
						//this.cargarCombosTransaccionCuentaNotaVentasForeignKeyLista(" where id="+this.configuracionpunven.getid_transaccion_cuenta_nota_venta());
									//this.inicializarActualizarBindingConfiguracionPunVen(false,false);
						this.transaccioncuentanotaventasForeignKey=new ArrayList<Transaccion>();

						if(configuracionpunven.getTransaccionCuentaNotaVenta()!=null) {
							this.transaccioncuentanotaventasForeignKey.add(configuracionpunven.getTransaccionCuentaNotaVenta());
						}

						this.addItemDefectoCombosForeignKeyTransaccionCuentaNotaVenta();
						this.cargarCombosFrameTransaccionCuentaNotaVentasForeignKey("Todos");
					}
					this.setActualTransaccionCuentaNotaVentaForeignKey(this.configuracionpunven.getid_transaccion_cuenta_nota_venta(),false,"Formulario");

					//TransaccionCuentaNotaCredito
					if(!this.configuracionpunvenConstantesFunciones.cargarid_transaccion_cuenta_nota_creditoConfiguracionPunVen || this.configuracionpunvenConstantesFunciones.event_dependid_transaccion_cuenta_nota_creditoConfiguracionPunVen) {
						//this.cargarCombosTransaccionCuentaNotaCreditosForeignKeyLista(" where id="+this.configuracionpunven.getid_transaccion_cuenta_nota_credito());
									//this.inicializarActualizarBindingConfiguracionPunVen(false,false);
						this.transaccioncuentanotacreditosForeignKey=new ArrayList<Transaccion>();

						if(configuracionpunven.getTransaccionCuentaNotaCredito()!=null) {
							this.transaccioncuentanotacreditosForeignKey.add(configuracionpunven.getTransaccionCuentaNotaCredito());
						}

						this.addItemDefectoCombosForeignKeyTransaccionCuentaNotaCredito();
						this.cargarCombosFrameTransaccionCuentaNotaCreditosForeignKey("Todos");
					}
					this.setActualTransaccionCuentaNotaCreditoForeignKey(this.configuracionpunven.getid_transaccion_cuenta_nota_credito(),false,"Formulario");
				} catch(Exception e) {
					throw e;
				}
				
				this.actualizarEstadoCeldasBotonesConfiguracionPunVen("s", this.isGuardarCambiosEnLote, this.isEsMantenimientoRelacionado);
				
				//NO FUNCIONA BINDING PERO SE MANTIENE
				this.inicializarActualizarBindingBotonesConfiguracionPunVen(false) ;
				
				//SI ES MANUAL
				//this.inicializarActualizarBindingBotonesManualConfiguracionPunVen() ;
			//}
		} catch(Exception e) {
			FuncionesSwing.manageException(this, e,logger,ConfiguracionPunVenConstantesFunciones.CLASSNAME);
		}
	}
	
	public void setVariablesObjetoActualToFormularioTodoConfiguracionPunVen(ConfiguracionPunVen configuracionpunven) throws Exception { 
		this.setVariablesObjetoActualToFormularioTodoConfiguracionPunVen(configuracionpunven,false,"NINGUNO");
	}
	
	public void setVariablesObjetoActualToFormularioTodoConfiguracionPunVen(ConfiguracionPunVen configuracionpunven,Boolean conCargarListasDesdeObjetoActual,String sTipoEvento) throws Exception { 
		this.setVariablesObjetoActualToFormularioConfiguracionPunVen(configuracionpunven);
		
		if(conCargarListasDesdeObjetoActual) {
			this.setVariablesObjetoActualToListasForeignKeyConfiguracionPunVen(configuracionpunven,sTipoEvento);
		}
		
		this.setVariablesObjetoActualToFormularioForeignKeyConfiguracionPunVen(configuracionpunven);
	}
	
	public void setVariablesObjetoActualToFormularioConfiguracionPunVen(ConfiguracionPunVen configuracionpunven) throws Exception { 
		try {			
			Image imageActual=null;
			ImageIcon imageIcon = null;
			
			if(this.jInternalFrameDetalleFormConfiguracionPunVen==null) { //if(!this.conCargarFormDetalle) {
				this.inicializarFormDetalle();
			}
			
			
			this.jInternalFrameDetalleFormConfiguracionPunVen.jLabelidConfiguracionPunVen.setText(configuracionpunven.getId().toString());
			
		} catch(Exception e) {
			throw e;
			//FuncionesSwing.manageException(this, e,logger,ConfiguracionPunVenConstantesFunciones.CLASSNAME);
		}
	}
		
	public void actualizarInformacion(String sTipo,ConfiguracionPunVen configuracionpunvenLocal) throws Exception {
		this.actualizarInformacion(sTipo,false,configuracionpunvenLocal);
	}	
	
	public void actualizarInformacion(String sTipo,Boolean conParametroObjeto,ConfiguracionPunVen configuracionpunvenLocal) throws Exception {
		
		if(!conParametroObjeto) {
			if(!this.getEsControlTabla()) {
				configuracionpunvenLocal=this.configuracionpunven;
			} else {
				configuracionpunvenLocal=this.configuracionpunvenAnterior;
			}
		}
		
		if(this.permiteMantenimiento(configuracionpunvenLocal)) {
			if(sTipo.equals("EVENTO_CONTROL")) { // || sTipo.equals("EVENTO_NUEVO")
				if(!this.esControlTabla) {
					this.setVariablesFormularioToObjetoActualTodoConfiguracionPunVen(configuracionpunvenLocal,true);
					
					if(configuracionpunvenSessionBean.getConGuardarRelaciones()) {
						this.actualizarRelaciones(configuracionpunvenLocal);
					}
				}
			
			} else if(sTipo.equals("INFO_PADRE")) {
				
				if(this.configuracionpunvenSessionBean.getEsGuardarRelacionado()) {
					this.actualizarRelacionFkPadreActual(configuracionpunvenLocal);
				}
			}
		}
	}
	
	public void setVariablesFormularioToObjetoActualTodoConfiguracionPunVen(ConfiguracionPunVen configuracionpunven,Boolean conColumnasBase) throws Exception { 
		this.setVariablesFormularioToObjetoActualConfiguracionPunVen(configuracionpunven,conColumnasBase);
		this.setVariablesFormularioToObjetoActualForeignKeysConfiguracionPunVen(configuracionpunven);
	}
	
	public void setVariablesFormularioToObjetoActualConfiguracionPunVen(ConfiguracionPunVen configuracionpunven,Boolean conColumnasBase) throws Exception { 
		this.setVariablesFormularioToObjetoActualConfiguracionPunVen(configuracionpunven,conColumnasBase,true);
	}
	
	public void setVariablesFormularioToObjetoActualConfiguracionPunVen(ConfiguracionPunVen configuracionpunven,Boolean conColumnasBase,Boolean conInicializarInvalidValues) throws Exception { 
		String sMensajeCampoActual="";
		Boolean estaValidado=true;
		try {
			
			if(this.jInternalFrameDetalleFormConfiguracionPunVen==null) { //if(!this.conCargarFormDetalle) {
				this.inicializarFormDetalle();
			}
			
			if(conInicializarInvalidValues) {
				this.inicializarInvalidValues();
			}
			
			

		try {
			if(this.jInternalFrameDetalleFormConfiguracionPunVen.jLabelidConfiguracionPunVen.getText()==null || this.jInternalFrameDetalleFormConfiguracionPunVen.jLabelidConfiguracionPunVen.getText()=="" || this.jInternalFrameDetalleFormConfiguracionPunVen.jLabelidConfiguracionPunVen.getText()=="Id") {
				this.jInternalFrameDetalleFormConfiguracionPunVen.jLabelidConfiguracionPunVen.setText("0");
			}

			if(conColumnasBase) {configuracionpunven.setId(Long.parseLong(this.jInternalFrameDetalleFormConfiguracionPunVen.jLabelidConfiguracionPunVen.getText()));}
		} catch(Exception e) {
			estaValidado=false;
			sMensajeCampoActual+="\r\n"+ConfiguracionPunVenConstantesFunciones.LABEL_ID+"-->"+ConstantesMensajes.SMENSAJEEXCEPCION_VALIDACIONVALOR;FuncionesSwing.mostrarCampoMensajeInvalido(false,this.jInternalFrameDetalleFormConfiguracionPunVen.jLabelIdConfiguracionPunVen,ConstantesMensajes.SMENSAJEEXCEPCION_VALIDACIONVALOR);
		}
			
			if(!estaValidado) {
				throw new Exception(sMensajeCampoActual);
			}
		} catch(NumberFormatException e) {
			throw new Exception(sMensajeCampoActual);
			//FuncionesSwing.manageException(this, e,logger,MovimientoInventarioConstantesFunciones.CLASSNAME);
		} catch(Exception e) {
			throw e;
			//FuncionesSwing.manageException(this, e,logger,ConfiguracionPunVenConstantesFunciones.CLASSNAME);
		}
	}
	
	public void setVariablesForeignKeyObjetoBeanDefectoActualToObjetoActualConfiguracionPunVen(ConfiguracionPunVen configuracionpunvenBean,ConfiguracionPunVen configuracionpunven,Boolean conDefault,Boolean conColumnasBase) throws Exception { 
		try {
			
			if(conDefault || (!conDefault && configuracionpunvenBean.getid_bodega()!=null && !configuracionpunvenBean.getid_bodega().equals(-1L))) {configuracionpunven.setid_bodega(configuracionpunvenBean.getid_bodega());}
			if(conDefault || (!conDefault && configuracionpunvenBean.getid_cuenta_contable_efectivo()!=null && !configuracionpunvenBean.getid_cuenta_contable_efectivo().equals(-1L))) {configuracionpunven.setid_cuenta_contable_efectivo(configuracionpunvenBean.getid_cuenta_contable_efectivo());}
			if(conDefault || (!conDefault && configuracionpunvenBean.getid_cuenta_contable_ice()!=null && !configuracionpunvenBean.getid_cuenta_contable_ice().equals(-1L))) {configuracionpunven.setid_cuenta_contable_ice(configuracionpunvenBean.getid_cuenta_contable_ice());}
			if(conDefault || (!conDefault && configuracionpunvenBean.getid_cuenta_contable_otros()!=null && !configuracionpunvenBean.getid_cuenta_contable_otros().equals(-1L))) {configuracionpunven.setid_cuenta_contable_otros(configuracionpunvenBean.getid_cuenta_contable_otros());}
			if(conDefault || (!conDefault && configuracionpunvenBean.getid_cliente_consumidor_final()!=null && !configuracionpunvenBean.getid_cliente_consumidor_final().equals(-1L))) {configuracionpunven.setid_cliente_consumidor_final(configuracionpunvenBean.getid_cliente_consumidor_final());}
			if(conDefault || (!conDefault && configuracionpunvenBean.getid_tipo_documento_factura()!=null && !configuracionpunvenBean.getid_tipo_documento_factura().equals(-1L))) {configuracionpunven.setid_tipo_documento_factura(configuracionpunvenBean.getid_tipo_documento_factura());}
			if(conDefault || (!conDefault && configuracionpunvenBean.getid_tipo_documento_nota_venta()!=null && !configuracionpunvenBean.getid_tipo_documento_nota_venta().equals(-1L))) {configuracionpunven.setid_tipo_documento_nota_venta(configuracionpunvenBean.getid_tipo_documento_nota_venta());}
			if(conDefault || (!conDefault && configuracionpunvenBean.getid_tipo_documento_nota_credito()!=null && !configuracionpunvenBean.getid_tipo_documento_nota_credito().equals(-1L))) {configuracionpunven.setid_tipo_documento_nota_credito(configuracionpunvenBean.getid_tipo_documento_nota_credito());}
			if(conDefault || (!conDefault && configuracionpunvenBean.getid_tipo_documento_tarjeta_credito()!=null && !configuracionpunvenBean.getid_tipo_documento_tarjeta_credito().equals(-1L))) {configuracionpunven.setid_tipo_documento_tarjeta_credito(configuracionpunvenBean.getid_tipo_documento_tarjeta_credito());}
			if(conDefault || (!conDefault && configuracionpunvenBean.getid_formato_factura()!=null && !configuracionpunvenBean.getid_formato_factura().equals(-1L))) {configuracionpunven.setid_formato_factura(configuracionpunvenBean.getid_formato_factura());}
			if(conDefault || (!conDefault && configuracionpunvenBean.getid_formato_nota_venta()!=null && !configuracionpunvenBean.getid_formato_nota_venta().equals(-1L))) {configuracionpunven.setid_formato_nota_venta(configuracionpunvenBean.getid_formato_nota_venta());}
			if(conDefault || (!conDefault && configuracionpunvenBean.getid_formato_nota_credito()!=null && !configuracionpunvenBean.getid_formato_nota_credito().equals(-1L))) {configuracionpunven.setid_formato_nota_credito(configuracionpunvenBean.getid_formato_nota_credito());}
			if(conDefault || (!conDefault && configuracionpunvenBean.getid_transaccion_factura()!=null && !configuracionpunvenBean.getid_transaccion_factura().equals(-1L))) {configuracionpunven.setid_transaccion_factura(configuracionpunvenBean.getid_transaccion_factura());}
			if(conDefault || (!conDefault && configuracionpunvenBean.getid_transaccion_nota_venta()!=null && !configuracionpunvenBean.getid_transaccion_nota_venta().equals(-1L))) {configuracionpunven.setid_transaccion_nota_venta(configuracionpunvenBean.getid_transaccion_nota_venta());}
			if(conDefault || (!conDefault && configuracionpunvenBean.getid_transaccion_nota_credito()!=null && !configuracionpunvenBean.getid_transaccion_nota_credito().equals(-1L))) {configuracionpunven.setid_transaccion_nota_credito(configuracionpunvenBean.getid_transaccion_nota_credito());}
			if(conDefault || (!conDefault && configuracionpunvenBean.getid_transaccion_cuenta_factura()!=null && !configuracionpunvenBean.getid_transaccion_cuenta_factura().equals(-1L))) {configuracionpunven.setid_transaccion_cuenta_factura(configuracionpunvenBean.getid_transaccion_cuenta_factura());}
			if(conDefault || (!conDefault && configuracionpunvenBean.getid_transaccion_cuenta_nota_venta()!=null && !configuracionpunvenBean.getid_transaccion_cuenta_nota_venta().equals(-1L))) {configuracionpunven.setid_transaccion_cuenta_nota_venta(configuracionpunvenBean.getid_transaccion_cuenta_nota_venta());}
			if(conDefault || (!conDefault && configuracionpunvenBean.getid_transaccion_cuenta_nota_credito()!=null && !configuracionpunvenBean.getid_transaccion_cuenta_nota_credito().equals(-1L))) {configuracionpunven.setid_transaccion_cuenta_nota_credito(configuracionpunvenBean.getid_transaccion_cuenta_nota_credito());}
			
		} catch(Exception e) {
			throw e;
			//FuncionesSwing.manageException(this, e,logger,ConfiguracionPunVenConstantesFunciones.CLASSNAME);
		}
	}
	
	public void setCopiarVariablesObjetosConfiguracionPunVen(ConfiguracionPunVen configuracionpunvenOrigen,ConfiguracionPunVen configuracionpunven,Boolean conDefault,Boolean conColumnasBase) throws Exception { 
		try {
			
			if(conColumnasBase) {if(conDefault || (!conDefault && configuracionpunvenOrigen.getId()!=null && !configuracionpunvenOrigen.getId().equals(0L))) {configuracionpunven.setId(configuracionpunvenOrigen.getId());}}
			if(conDefault || (!conDefault && configuracionpunvenOrigen.getid_bodega()!=null && !configuracionpunvenOrigen.getid_bodega().equals(-1L))) {configuracionpunven.setid_bodega(configuracionpunvenOrigen.getid_bodega());}
			if(conDefault || (!conDefault && configuracionpunvenOrigen.getid_cuenta_contable_efectivo()!=null && !configuracionpunvenOrigen.getid_cuenta_contable_efectivo().equals(-1L))) {configuracionpunven.setid_cuenta_contable_efectivo(configuracionpunvenOrigen.getid_cuenta_contable_efectivo());}
			if(conDefault || (!conDefault && configuracionpunvenOrigen.getid_cuenta_contable_ice()!=null && !configuracionpunvenOrigen.getid_cuenta_contable_ice().equals(-1L))) {configuracionpunven.setid_cuenta_contable_ice(configuracionpunvenOrigen.getid_cuenta_contable_ice());}
			if(conDefault || (!conDefault && configuracionpunvenOrigen.getid_cuenta_contable_otros()!=null && !configuracionpunvenOrigen.getid_cuenta_contable_otros().equals(-1L))) {configuracionpunven.setid_cuenta_contable_otros(configuracionpunvenOrigen.getid_cuenta_contable_otros());}
			if(conDefault || (!conDefault && configuracionpunvenOrigen.getid_cliente_consumidor_final()!=null && !configuracionpunvenOrigen.getid_cliente_consumidor_final().equals(-1L))) {configuracionpunven.setid_cliente_consumidor_final(configuracionpunvenOrigen.getid_cliente_consumidor_final());}
			if(conDefault || (!conDefault && configuracionpunvenOrigen.getid_tipo_documento_factura()!=null && !configuracionpunvenOrigen.getid_tipo_documento_factura().equals(-1L))) {configuracionpunven.setid_tipo_documento_factura(configuracionpunvenOrigen.getid_tipo_documento_factura());}
			if(conDefault || (!conDefault && configuracionpunvenOrigen.getid_tipo_documento_nota_venta()!=null && !configuracionpunvenOrigen.getid_tipo_documento_nota_venta().equals(-1L))) {configuracionpunven.setid_tipo_documento_nota_venta(configuracionpunvenOrigen.getid_tipo_documento_nota_venta());}
			if(conDefault || (!conDefault && configuracionpunvenOrigen.getid_tipo_documento_nota_credito()!=null && !configuracionpunvenOrigen.getid_tipo_documento_nota_credito().equals(-1L))) {configuracionpunven.setid_tipo_documento_nota_credito(configuracionpunvenOrigen.getid_tipo_documento_nota_credito());}
			if(conDefault || (!conDefault && configuracionpunvenOrigen.getid_tipo_documento_tarjeta_credito()!=null && !configuracionpunvenOrigen.getid_tipo_documento_tarjeta_credito().equals(-1L))) {configuracionpunven.setid_tipo_documento_tarjeta_credito(configuracionpunvenOrigen.getid_tipo_documento_tarjeta_credito());}
			if(conDefault || (!conDefault && configuracionpunvenOrigen.getid_formato_factura()!=null && !configuracionpunvenOrigen.getid_formato_factura().equals(-1L))) {configuracionpunven.setid_formato_factura(configuracionpunvenOrigen.getid_formato_factura());}
			if(conDefault || (!conDefault && configuracionpunvenOrigen.getid_formato_nota_venta()!=null && !configuracionpunvenOrigen.getid_formato_nota_venta().equals(-1L))) {configuracionpunven.setid_formato_nota_venta(configuracionpunvenOrigen.getid_formato_nota_venta());}
			if(conDefault || (!conDefault && configuracionpunvenOrigen.getid_formato_nota_credito()!=null && !configuracionpunvenOrigen.getid_formato_nota_credito().equals(-1L))) {configuracionpunven.setid_formato_nota_credito(configuracionpunvenOrigen.getid_formato_nota_credito());}
			if(conDefault || (!conDefault && configuracionpunvenOrigen.getid_transaccion_factura()!=null && !configuracionpunvenOrigen.getid_transaccion_factura().equals(-1L))) {configuracionpunven.setid_transaccion_factura(configuracionpunvenOrigen.getid_transaccion_factura());}
			if(conDefault || (!conDefault && configuracionpunvenOrigen.getid_transaccion_nota_venta()!=null && !configuracionpunvenOrigen.getid_transaccion_nota_venta().equals(-1L))) {configuracionpunven.setid_transaccion_nota_venta(configuracionpunvenOrigen.getid_transaccion_nota_venta());}
			if(conDefault || (!conDefault && configuracionpunvenOrigen.getid_transaccion_nota_credito()!=null && !configuracionpunvenOrigen.getid_transaccion_nota_credito().equals(-1L))) {configuracionpunven.setid_transaccion_nota_credito(configuracionpunvenOrigen.getid_transaccion_nota_credito());}
			if(conDefault || (!conDefault && configuracionpunvenOrigen.getid_transaccion_cuenta_factura()!=null && !configuracionpunvenOrigen.getid_transaccion_cuenta_factura().equals(-1L))) {configuracionpunven.setid_transaccion_cuenta_factura(configuracionpunvenOrigen.getid_transaccion_cuenta_factura());}
			if(conDefault || (!conDefault && configuracionpunvenOrigen.getid_transaccion_cuenta_nota_venta()!=null && !configuracionpunvenOrigen.getid_transaccion_cuenta_nota_venta().equals(-1L))) {configuracionpunven.setid_transaccion_cuenta_nota_venta(configuracionpunvenOrigen.getid_transaccion_cuenta_nota_venta());}
			if(conDefault || (!conDefault && configuracionpunvenOrigen.getid_transaccion_cuenta_nota_credito()!=null && !configuracionpunvenOrigen.getid_transaccion_cuenta_nota_credito().equals(-1L))) {configuracionpunven.setid_transaccion_cuenta_nota_credito(configuracionpunvenOrigen.getid_transaccion_cuenta_nota_credito());}
			
		} catch(Exception e) {
			throw e;
			//FuncionesSwing.manageException(this, e,logger,ConfiguracionPunVenConstantesFunciones.CLASSNAME);
		}
	}
	
	/*
	public void setVariablesObjetoBeanActualToFormularioConfiguracionPunVen(ConfiguracionPunVen configuracionpunven) throws Exception { 
		try {
			
			this.jInternalFrameDetalleFormConfiguracionPunVen.jLabelidConfiguracionPunVen.setText(configuracionpunven.getId().toString());
			
		} catch(Exception e) {
			FuncionesSwing.manageException(this, e,logger,ConfiguracionPunVenConstantesFunciones.CLASSNAME);
		}
	}
	*/
	
	/*
	public void setVariablesObjetoBeanActualToFormularioConfiguracionPunVen(ConfiguracionPunVenBean configuracionpunvenBean) throws Exception { 
		try {
			
			this.jInternalFrameDetalleFormConfiguracionPunVen.jLabelidConfiguracionPunVen.setText(configuracionpunvenBean.getId().toString());
			
		} catch(Exception e) {
			FuncionesSwing.manageException(this, e,logger,ConfiguracionPunVenConstantesFunciones.CLASSNAME);
		}
	}
	*/
	
	/*
	public void setVariablesObjetoReturnGeneralToBeanConfiguracionPunVen(ConfiguracionPunVenParameterReturnGeneral configuracionpunvenReturnGeneral,ConfiguracionPunVenBean configuracionpunvenBean,Boolean conDefault) throws Exception { 
		try {
			ConfiguracionPunVen configuracionpunvenLocal=new ConfiguracionPunVen();
			
			configuracionpunvenLocal=configuracionpunvenReturnGeneral.getConfiguracionPunVen();
			
			
			if(conColumnasBase) {if(conDefault || (!conDefault && configuracionpunvenLocal.getId()!=null && !configuracionpunvenLocal.getId().equals(0L))) {configuracionpunvenBean.setId(configuracionpunvenLocal.getId());}}
			if(conDefault || (!conDefault && configuracionpunvenLocal.getid_bodega()!=null && !configuracionpunvenLocal.getid_bodega().equals(-1L))) {configuracionpunvenBean.setid_bodega(configuracionpunvenLocal.getid_bodega());}
			if(conDefault || (!conDefault && configuracionpunvenLocal.getid_cuenta_contable_efectivo()!=null && !configuracionpunvenLocal.getid_cuenta_contable_efectivo().equals(-1L))) {configuracionpunvenBean.setid_cuenta_contable_efectivo(configuracionpunvenLocal.getid_cuenta_contable_efectivo());}
			if(conDefault || (!conDefault && configuracionpunvenLocal.getid_cuenta_contable_ice()!=null && !configuracionpunvenLocal.getid_cuenta_contable_ice().equals(-1L))) {configuracionpunvenBean.setid_cuenta_contable_ice(configuracionpunvenLocal.getid_cuenta_contable_ice());}
			if(conDefault || (!conDefault && configuracionpunvenLocal.getid_cuenta_contable_otros()!=null && !configuracionpunvenLocal.getid_cuenta_contable_otros().equals(-1L))) {configuracionpunvenBean.setid_cuenta_contable_otros(configuracionpunvenLocal.getid_cuenta_contable_otros());}
			if(conDefault || (!conDefault && configuracionpunvenLocal.getid_cliente_consumidor_final()!=null && !configuracionpunvenLocal.getid_cliente_consumidor_final().equals(-1L))) {configuracionpunvenBean.setid_cliente_consumidor_final(configuracionpunvenLocal.getid_cliente_consumidor_final());}
			if(conDefault || (!conDefault && configuracionpunvenLocal.getid_tipo_documento_factura()!=null && !configuracionpunvenLocal.getid_tipo_documento_factura().equals(-1L))) {configuracionpunvenBean.setid_tipo_documento_factura(configuracionpunvenLocal.getid_tipo_documento_factura());}
			if(conDefault || (!conDefault && configuracionpunvenLocal.getid_tipo_documento_nota_venta()!=null && !configuracionpunvenLocal.getid_tipo_documento_nota_venta().equals(-1L))) {configuracionpunvenBean.setid_tipo_documento_nota_venta(configuracionpunvenLocal.getid_tipo_documento_nota_venta());}
			if(conDefault || (!conDefault && configuracionpunvenLocal.getid_tipo_documento_nota_credito()!=null && !configuracionpunvenLocal.getid_tipo_documento_nota_credito().equals(-1L))) {configuracionpunvenBean.setid_tipo_documento_nota_credito(configuracionpunvenLocal.getid_tipo_documento_nota_credito());}
			if(conDefault || (!conDefault && configuracionpunvenLocal.getid_tipo_documento_tarjeta_credito()!=null && !configuracionpunvenLocal.getid_tipo_documento_tarjeta_credito().equals(-1L))) {configuracionpunvenBean.setid_tipo_documento_tarjeta_credito(configuracionpunvenLocal.getid_tipo_documento_tarjeta_credito());}
			if(conDefault || (!conDefault && configuracionpunvenLocal.getid_formato_factura()!=null && !configuracionpunvenLocal.getid_formato_factura().equals(-1L))) {configuracionpunvenBean.setid_formato_factura(configuracionpunvenLocal.getid_formato_factura());}
			if(conDefault || (!conDefault && configuracionpunvenLocal.getid_formato_nota_venta()!=null && !configuracionpunvenLocal.getid_formato_nota_venta().equals(-1L))) {configuracionpunvenBean.setid_formato_nota_venta(configuracionpunvenLocal.getid_formato_nota_venta());}
			if(conDefault || (!conDefault && configuracionpunvenLocal.getid_formato_nota_credito()!=null && !configuracionpunvenLocal.getid_formato_nota_credito().equals(-1L))) {configuracionpunvenBean.setid_formato_nota_credito(configuracionpunvenLocal.getid_formato_nota_credito());}
			if(conDefault || (!conDefault && configuracionpunvenLocal.getid_transaccion_factura()!=null && !configuracionpunvenLocal.getid_transaccion_factura().equals(-1L))) {configuracionpunvenBean.setid_transaccion_factura(configuracionpunvenLocal.getid_transaccion_factura());}
			if(conDefault || (!conDefault && configuracionpunvenLocal.getid_transaccion_nota_venta()!=null && !configuracionpunvenLocal.getid_transaccion_nota_venta().equals(-1L))) {configuracionpunvenBean.setid_transaccion_nota_venta(configuracionpunvenLocal.getid_transaccion_nota_venta());}
			if(conDefault || (!conDefault && configuracionpunvenLocal.getid_transaccion_nota_credito()!=null && !configuracionpunvenLocal.getid_transaccion_nota_credito().equals(-1L))) {configuracionpunvenBean.setid_transaccion_nota_credito(configuracionpunvenLocal.getid_transaccion_nota_credito());}
			if(conDefault || (!conDefault && configuracionpunvenLocal.getid_transaccion_cuenta_factura()!=null && !configuracionpunvenLocal.getid_transaccion_cuenta_factura().equals(-1L))) {configuracionpunvenBean.setid_transaccion_cuenta_factura(configuracionpunvenLocal.getid_transaccion_cuenta_factura());}
			if(conDefault || (!conDefault && configuracionpunvenLocal.getid_transaccion_cuenta_nota_venta()!=null && !configuracionpunvenLocal.getid_transaccion_cuenta_nota_venta().equals(-1L))) {configuracionpunvenBean.setid_transaccion_cuenta_nota_venta(configuracionpunvenLocal.getid_transaccion_cuenta_nota_venta());}
			if(conDefault || (!conDefault && configuracionpunvenLocal.getid_transaccion_cuenta_nota_credito()!=null && !configuracionpunvenLocal.getid_transaccion_cuenta_nota_credito().equals(-1L))) {configuracionpunvenBean.setid_transaccion_cuenta_nota_credito(configuracionpunvenLocal.getid_transaccion_cuenta_nota_credito());}
			
		} catch(Exception e) {
			FuncionesSwing.manageException(this, e,logger,ConfiguracionPunVenConstantesFunciones.CLASSNAME);
		}
	}
	*/
	
	@SuppressWarnings("rawtypes")
	public static void setActualComboBoxConfiguracionPunVenGenerico(Long idConfiguracionPunVenSeleccionado,JComboBox jComboBoxConfiguracionPunVen,List<ConfiguracionPunVen> configuracionpunvensLocal)throws Exception {
		try {
			ConfiguracionPunVen  configuracionpunvenTemp=null;

			for(ConfiguracionPunVen configuracionpunvenAux:configuracionpunvensLocal) {
				if(configuracionpunvenAux.getId()!=null && configuracionpunvenAux.getId().equals(idConfiguracionPunVenSeleccionado)) {
					configuracionpunvenTemp=configuracionpunvenAux;
					break;
				}
			}

			jComboBoxConfiguracionPunVen.setSelectedItem(configuracionpunvenTemp);

		} catch(Exception e) {
			throw e;
		}
	}
	
	@SuppressWarnings("rawtypes")
	public static void setHotKeysComboBoxConfiguracionPunVenGenerico(JComboBox jComboBoxConfiguracionPunVen,JInternalFrameBase jInternalFrameBase,String sNombreHotKeyAbstractAction,String sTipoBusqueda)throws Exception {
		try {
			//GLOBAL(id_empresa,id_sucursal,id_ejercicio)
			//BASICO(normal)
			//CON_BUSQUEDA(Permite buscar Fk)
			
			String sKeyStrokeName="";
			KeyStroke keyStrokeControl=null;
			
			if(!sTipoBusqueda.equals("GLOBAL")) {
				
				//BUSCAR
				sKeyStrokeName = FuncionesSwing.getKeyNameControl("CONTROL_BUSCAR");
				keyStrokeControl=FuncionesSwing.getKeyStrokeControl("CONTROL_BUSCAR");
				
				jComboBoxConfiguracionPunVen.getInputMap().put(keyStrokeControl, sKeyStrokeName);
				jComboBoxConfiguracionPunVen.getActionMap().put(sKeyStrokeName, new ButtonAbstractAction(jInternalFrameBase,sNombreHotKeyAbstractAction+"Busqueda"));
				//BUSCAR
				
				
				//ACTUALIZAR
				sKeyStrokeName = FuncionesSwing.getKeyNameControl("CONTROL_ACTUALIZAR");
				keyStrokeControl=FuncionesSwing.getKeyStrokeControl("CONTROL_ACTUALIZAR");
				
				jComboBoxConfiguracionPunVen.getInputMap().put(keyStrokeControl, sKeyStrokeName);
				jComboBoxConfiguracionPunVen.getActionMap().put(sKeyStrokeName, new ButtonAbstractAction(jInternalFrameBase,sNombreHotKeyAbstractAction+"Update"));
				//ACTUALIZAR
				
				if(sTipoBusqueda.contains("CON_EVENT_CHANGE")) {
					if(Constantes2.CON_COMBOBOX_ITEMLISTENER) {
						jComboBoxConfiguracionPunVen.addFocusListener(new ComboBoxFocusListener(jInternalFrameBase,sNombreHotKeyAbstractAction));
						jComboBoxConfiguracionPunVen.addActionListener(new ComboBoxActionListener(jInternalFrameBase,sNombreHotKeyAbstractAction));						
					}
					
					/*
					if(Constantes2.CON_COMBOBOX_ITEMLISTENER) {
						jComboBoxConfiguracionPunVen.addItemListener(new ComboBoxItemListener(jInternalFrameBase,sNombreHotKeyAbstractAction));
					} else {
						jComboBoxConfiguracionPunVen.addActionListener(new ComboBoxActionListener(jInternalFrameBase,sNombreHotKeyAbstractAction));
					}
					*/
				}								
				
				//CON_BUSQUEDA								
				if(sTipoBusqueda.contains("CON_BUSQUEDA")) {
					sKeyStrokeName = FuncionesSwing.getKeyNameControl("CONTROL_BUSQUEDA");
					keyStrokeControl=FuncionesSwing.getKeyStrokeControl("CONTROL_BUSQUEDA");
							
					jComboBoxConfiguracionPunVen.getInputMap().put(keyStrokeControl, sKeyStrokeName);
					jComboBoxConfiguracionPunVen.getActionMap().put(sKeyStrokeName, new ButtonAbstractAction(jInternalFrameBase,sNombreHotKeyAbstractAction));
				}
				//CON_BUSQUEDA
				
				
			}
		} catch(Exception e) {
			throw e;
		}
	}
	
	//PARA INICIALIZAR CONTROLES DE TABLA
	@SuppressWarnings("rawtypes")
	public void setHotKeysComboBoxGenerico(JComboBox jComboBox,JInternalFrameBase jInternalFrameBase,String sNombreHotKeyAbstractAction,String sTipoBusqueda) {
		if(sTipoBusqueda.contains("CON_EVENT_CHANGE")) {
			if(Constantes2.CON_COMBOBOX_ITEMLISTENER) {
				jComboBox.addItemListener(new ComboBoxItemListener(jInternalFrameBase,sNombreHotKeyAbstractAction));
				jComboBox.addFocusListener(new ComboBoxFocusListener(jInternalFrameBase,sNombreHotKeyAbstractAction));
			} else {
				jComboBox.addActionListener(new ComboBoxActionListener(jInternalFrameBase,sNombreHotKeyAbstractAction));
				jComboBox.addFocusListener(new ComboBoxFocusListener(jInternalFrameBase,sNombreHotKeyAbstractAction));
			}
		}
	}
	
	//PARA INICIALIZAR CONTROLES DE TABLA
	public void setHotKeysJTextFieldGenerico(JTextField jTextField,JInternalFrameBase jInternalFrameBase,String sNombreHotKeyAbstractAction,String sTipoBusqueda) {
		jTextField.addFocusListener(new TextFieldFocusListener(jInternalFrameBase,sNombreHotKeyAbstractAction));
		jTextField.addActionListener(new TextFieldActionListener(jInternalFrameBase,sNombreHotKeyAbstractAction));
	}
	
	//PARA INICIALIZAR CONTROLES DE TABLA
	public void setHotKeysJTextAreaGenerico(JTextArea jTextArea,JInternalFrameBase jInternalFrameBase,String sNombreHotKeyAbstractAction,String sTipoBusqueda) {
		jTextArea.addFocusListener(new TextAreaFocusListener(jInternalFrameBase,sNombreHotKeyAbstractAction));
		
		//NO EXISTE
		//jTextArea.addActionListener(new TextAreaActionListener(jInternalFrameBase,sNombreHotKeyAbstractAction));
	}
	
	//PARA INICIALIZAR CONTROLES DE TABLA
	public void setHotKeysJLabelGenerico(JLabel jLabel,JInternalFrameBase jInternalFrameBase,String sNombreHotKeyAbstractAction,String sTipoBusqueda) {
		jLabel.addFocusListener(new LabelFocusListener(jInternalFrameBase,sNombreHotKeyAbstractAction));
		
		//NO EXISTE
		//jLabel.addActionListener(new LabelActionListener(jInternalFrameBase,sNombreHotKeyAbstractAction));
	}
	
	//PARA INICIALIZAR CONTROLES DE TABLA
	public void setHotKeysJCheckBoxGenerico(JCheckBox jCheckBox,JInternalFrameBase jInternalFrameBase,String sNombreHotKeyAbstractAction,String sTipoBusqueda) {
		jCheckBox.addFocusListener(new CheckBoxFocusListener(jInternalFrameBase,sNombreHotKeyAbstractAction));
		
		//SI SE DEFINE AL CAMBIAR VALOR, ESTE NUEVO VALOR NO SE ENVIA AL EVENTO
		//jCheckBox.addItemListener(new CheckBoxItemListener(jInternalFrameBase,sNombreHotKeyAbstractAction));
	}
	
	//PARA INICIALIZAR CONTROLES DE TABLA
	public void setHotKeysJDateChooserGenerico(JDateChooser jDateChooser,JInternalFrameBase jInternalFrameBase,String sNombreHotKeyAbstractAction,String sTipoBusqueda) {
		FuncionesSwing.addDateListener(jDateChooser, jInternalFrameBase, sNombreHotKeyAbstractAction);
	}
	
	//PARA INICIALIZAR CONTROLES DE TABLA
	public void setHotKeysJButtonGenerico(JButton jButton,JInternalFrameBase jInternalFrameBase,String sNombreHotKeyAbstractAction,String sTipoBusqueda) {
		jButton.addActionListener(new ButtonActionListener(jInternalFrameBase,sNombreHotKeyAbstractAction));
	}
	
	public void jButtonRelacionActionPerformed(String sTipo,ActionEvent evt,int rowIndex,Boolean conInicializar,Boolean esRelacionado) {
		//ABRIR RELACIONES
		try {
			
		} catch (Exception e) {
			FuncionesSwing.manageException2(this, e,logger,ConfiguracionPunVenConstantesFunciones.CLASSNAME);
		}
	}
	
	public String getDescripcionFk(String sTipo,JTable table,Object value,int intSelectedRow) throws Exception {
		//DESCRIPCIONES FK		
		String sDescripcion="";
		
		if(Constantes.ISUSAEJBLOGICLAYER) {
			configuracionpunven=(ConfiguracionPunVen) configuracionpunvenLogic.getConfiguracionPunVens().toArray()[table.convertRowIndexToModel(intSelectedRow)];
		} else if(Constantes.ISUSAEJBREMOTE) {
			configuracionpunven =(ConfiguracionPunVen) configuracionpunvens.toArray()[table.convertRowIndexToModel(intSelectedRow)];
		}
					
		
		if(sTipo.equals("Empresa")) {
			//sDescripcion=this.getActualEmpresaForeignKeyDescripcion((Long)value);
			if(!configuracionpunven.getIsNew() && !configuracionpunven.getIsChanged() && !configuracionpunven.getIsDeleted()) {
				sDescripcion=configuracionpunven.getempresa_descripcion();
			} else {
				//sDescripcion=this.getActualEmpresaForeignKeyDescripcion((Long)value);
				sDescripcion=configuracionpunven.getempresa_descripcion();
			}
		}

		if(sTipo.equals("Sucursal")) {
			//sDescripcion=this.getActualSucursalForeignKeyDescripcion((Long)value);
			if(!configuracionpunven.getIsNew() && !configuracionpunven.getIsChanged() && !configuracionpunven.getIsDeleted()) {
				sDescripcion=configuracionpunven.getsucursal_descripcion();
			} else {
				//sDescripcion=this.getActualSucursalForeignKeyDescripcion((Long)value);
				sDescripcion=configuracionpunven.getsucursal_descripcion();
			}
		}

		if(sTipo.equals("Bodega")) {
			//sDescripcion=this.getActualBodegaForeignKeyDescripcion((Long)value);
			if(!configuracionpunven.getIsNew() && !configuracionpunven.getIsChanged() && !configuracionpunven.getIsDeleted()) {
				sDescripcion=configuracionpunven.getbodega_descripcion();
			} else {
				//sDescripcion=this.getActualBodegaForeignKeyDescripcion((Long)value);
				sDescripcion=configuracionpunven.getbodega_descripcion();
			}
		}

		if(sTipo.equals("CuentaContableEfectivo")) {
			//sDescripcion=this.getActualCuentaContableEfectivoForeignKeyDescripcion((Long)value);
			if(!configuracionpunven.getIsNew() && !configuracionpunven.getIsChanged() && !configuracionpunven.getIsDeleted()) {
				sDescripcion=configuracionpunven.getcuentacontableefectivo_descripcion();
			} else {
				//sDescripcion=this.getActualCuentaContableEfectivoForeignKeyDescripcion((Long)value);
				sDescripcion=configuracionpunven.getcuentacontableefectivo_descripcion();
			}
		}

		if(sTipo.equals("CuentaContableIce")) {
			//sDescripcion=this.getActualCuentaContableIceForeignKeyDescripcion((Long)value);
			if(!configuracionpunven.getIsNew() && !configuracionpunven.getIsChanged() && !configuracionpunven.getIsDeleted()) {
				sDescripcion=configuracionpunven.getcuentacontableice_descripcion();
			} else {
				//sDescripcion=this.getActualCuentaContableIceForeignKeyDescripcion((Long)value);
				sDescripcion=configuracionpunven.getcuentacontableice_descripcion();
			}
		}

		if(sTipo.equals("CuentaContableOtros")) {
			//sDescripcion=this.getActualCuentaContableOtrosForeignKeyDescripcion((Long)value);
			if(!configuracionpunven.getIsNew() && !configuracionpunven.getIsChanged() && !configuracionpunven.getIsDeleted()) {
				sDescripcion=configuracionpunven.getcuentacontableotros_descripcion();
			} else {
				//sDescripcion=this.getActualCuentaContableOtrosForeignKeyDescripcion((Long)value);
				sDescripcion=configuracionpunven.getcuentacontableotros_descripcion();
			}
		}

		if(sTipo.equals("ClienteConsumidorFinal")) {
			//sDescripcion=this.getActualClienteConsumidorFinalForeignKeyDescripcion((Long)value);
			if(!configuracionpunven.getIsNew() && !configuracionpunven.getIsChanged() && !configuracionpunven.getIsDeleted()) {
				sDescripcion=configuracionpunven.getclienteconsumidorfinal_descripcion();
			} else {
				//sDescripcion=this.getActualClienteConsumidorFinalForeignKeyDescripcion((Long)value);
				sDescripcion=configuracionpunven.getclienteconsumidorfinal_descripcion();
			}
		}

		if(sTipo.equals("TipoDocumentoFactura")) {
			//sDescripcion=this.getActualTipoDocumentoFacturaForeignKeyDescripcion((Long)value);
			if(!configuracionpunven.getIsNew() && !configuracionpunven.getIsChanged() && !configuracionpunven.getIsDeleted()) {
				sDescripcion=configuracionpunven.gettipodocumentofactura_descripcion();
			} else {
				//sDescripcion=this.getActualTipoDocumentoFacturaForeignKeyDescripcion((Long)value);
				sDescripcion=configuracionpunven.gettipodocumentofactura_descripcion();
			}
		}

		if(sTipo.equals("TipoDocumentoNotaVenta")) {
			//sDescripcion=this.getActualTipoDocumentoNotaVentaForeignKeyDescripcion((Long)value);
			if(!configuracionpunven.getIsNew() && !configuracionpunven.getIsChanged() && !configuracionpunven.getIsDeleted()) {
				sDescripcion=configuracionpunven.gettipodocumentonotaventa_descripcion();
			} else {
				//sDescripcion=this.getActualTipoDocumentoNotaVentaForeignKeyDescripcion((Long)value);
				sDescripcion=configuracionpunven.gettipodocumentonotaventa_descripcion();
			}
		}

		if(sTipo.equals("TipoDocumentoNotaCredito")) {
			//sDescripcion=this.getActualTipoDocumentoNotaCreditoForeignKeyDescripcion((Long)value);
			if(!configuracionpunven.getIsNew() && !configuracionpunven.getIsChanged() && !configuracionpunven.getIsDeleted()) {
				sDescripcion=configuracionpunven.gettipodocumentonotacredito_descripcion();
			} else {
				//sDescripcion=this.getActualTipoDocumentoNotaCreditoForeignKeyDescripcion((Long)value);
				sDescripcion=configuracionpunven.gettipodocumentonotacredito_descripcion();
			}
		}

		if(sTipo.equals("TipoDocumentoTarjetaCredito")) {
			//sDescripcion=this.getActualTipoDocumentoTarjetaCreditoForeignKeyDescripcion((Long)value);
			if(!configuracionpunven.getIsNew() && !configuracionpunven.getIsChanged() && !configuracionpunven.getIsDeleted()) {
				sDescripcion=configuracionpunven.gettipodocumentotarjetacredito_descripcion();
			} else {
				//sDescripcion=this.getActualTipoDocumentoTarjetaCreditoForeignKeyDescripcion((Long)value);
				sDescripcion=configuracionpunven.gettipodocumentotarjetacredito_descripcion();
			}
		}

		if(sTipo.equals("FormatoFactura")) {
			//sDescripcion=this.getActualFormatoFacturaForeignKeyDescripcion((Long)value);
			if(!configuracionpunven.getIsNew() && !configuracionpunven.getIsChanged() && !configuracionpunven.getIsDeleted()) {
				sDescripcion=configuracionpunven.getformatofactura_descripcion();
			} else {
				//sDescripcion=this.getActualFormatoFacturaForeignKeyDescripcion((Long)value);
				sDescripcion=configuracionpunven.getformatofactura_descripcion();
			}
		}

		if(sTipo.equals("FormatoNotaVenta")) {
			//sDescripcion=this.getActualFormatoNotaVentaForeignKeyDescripcion((Long)value);
			if(!configuracionpunven.getIsNew() && !configuracionpunven.getIsChanged() && !configuracionpunven.getIsDeleted()) {
				sDescripcion=configuracionpunven.getformatonotaventa_descripcion();
			} else {
				//sDescripcion=this.getActualFormatoNotaVentaForeignKeyDescripcion((Long)value);
				sDescripcion=configuracionpunven.getformatonotaventa_descripcion();
			}
		}

		if(sTipo.equals("FormatoNotaCredito")) {
			//sDescripcion=this.getActualFormatoNotaCreditoForeignKeyDescripcion((Long)value);
			if(!configuracionpunven.getIsNew() && !configuracionpunven.getIsChanged() && !configuracionpunven.getIsDeleted()) {
				sDescripcion=configuracionpunven.getformatonotacredito_descripcion();
			} else {
				//sDescripcion=this.getActualFormatoNotaCreditoForeignKeyDescripcion((Long)value);
				sDescripcion=configuracionpunven.getformatonotacredito_descripcion();
			}
		}

		if(sTipo.equals("TransaccionFactura")) {
			//sDescripcion=this.getActualTransaccionFacturaForeignKeyDescripcion((Long)value);
			if(!configuracionpunven.getIsNew() && !configuracionpunven.getIsChanged() && !configuracionpunven.getIsDeleted()) {
				sDescripcion=configuracionpunven.gettransaccionfactura_descripcion();
			} else {
				//sDescripcion=this.getActualTransaccionFacturaForeignKeyDescripcion((Long)value);
				sDescripcion=configuracionpunven.gettransaccionfactura_descripcion();
			}
		}

		if(sTipo.equals("TransaccionNotaVenta")) {
			//sDescripcion=this.getActualTransaccionNotaVentaForeignKeyDescripcion((Long)value);
			if(!configuracionpunven.getIsNew() && !configuracionpunven.getIsChanged() && !configuracionpunven.getIsDeleted()) {
				sDescripcion=configuracionpunven.gettransaccionnotaventa_descripcion();
			} else {
				//sDescripcion=this.getActualTransaccionNotaVentaForeignKeyDescripcion((Long)value);
				sDescripcion=configuracionpunven.gettransaccionnotaventa_descripcion();
			}
		}

		if(sTipo.equals("TransaccionNotaCredito")) {
			//sDescripcion=this.getActualTransaccionNotaCreditoForeignKeyDescripcion((Long)value);
			if(!configuracionpunven.getIsNew() && !configuracionpunven.getIsChanged() && !configuracionpunven.getIsDeleted()) {
				sDescripcion=configuracionpunven.gettransaccionnotacredito_descripcion();
			} else {
				//sDescripcion=this.getActualTransaccionNotaCreditoForeignKeyDescripcion((Long)value);
				sDescripcion=configuracionpunven.gettransaccionnotacredito_descripcion();
			}
		}

		if(sTipo.equals("TransaccionCuentaFactura")) {
			//sDescripcion=this.getActualTransaccionCuentaFacturaForeignKeyDescripcion((Long)value);
			if(!configuracionpunven.getIsNew() && !configuracionpunven.getIsChanged() && !configuracionpunven.getIsDeleted()) {
				sDescripcion=configuracionpunven.gettransaccioncuentafactura_descripcion();
			} else {
				//sDescripcion=this.getActualTransaccionCuentaFacturaForeignKeyDescripcion((Long)value);
				sDescripcion=configuracionpunven.gettransaccioncuentafactura_descripcion();
			}
		}

		if(sTipo.equals("TransaccionCuentaNotaVenta")) {
			//sDescripcion=this.getActualTransaccionCuentaNotaVentaForeignKeyDescripcion((Long)value);
			if(!configuracionpunven.getIsNew() && !configuracionpunven.getIsChanged() && !configuracionpunven.getIsDeleted()) {
				sDescripcion=configuracionpunven.gettransaccioncuentanotaventa_descripcion();
			} else {
				//sDescripcion=this.getActualTransaccionCuentaNotaVentaForeignKeyDescripcion((Long)value);
				sDescripcion=configuracionpunven.gettransaccioncuentanotaventa_descripcion();
			}
		}

		if(sTipo.equals("TransaccionCuentaNotaCredito")) {
			//sDescripcion=this.getActualTransaccionCuentaNotaCreditoForeignKeyDescripcion((Long)value);
			if(!configuracionpunven.getIsNew() && !configuracionpunven.getIsChanged() && !configuracionpunven.getIsDeleted()) {
				sDescripcion=configuracionpunven.gettransaccioncuentanotacredito_descripcion();
			} else {
				//sDescripcion=this.getActualTransaccionCuentaNotaCreditoForeignKeyDescripcion((Long)value);
				sDescripcion=configuracionpunven.gettransaccioncuentanotacredito_descripcion();
			}
		}

		
		return sDescripcion;
	}
	
	public Color getColorFk(String sTipo,JTable table,Object value,int intSelectedRow) throws Exception {
		//DESCRIPCIONES FK		
		Color color=Color.WHITE;
		
		ConfiguracionPunVen configuracionpunvenRow=new ConfiguracionPunVen();
		
		if(Constantes.ISUSAEJBLOGICLAYER) {
			configuracionpunvenRow=(ConfiguracionPunVen) configuracionpunvenLogic.getConfiguracionPunVens().toArray()[table.convertRowIndexToModel(intSelectedRow)];
		} else if(Constantes.ISUSAEJBREMOTE) {
			configuracionpunvenRow=(ConfiguracionPunVen) configuracionpunvens.toArray()[table.convertRowIndexToModel(intSelectedRow)];
		}
					
		
		
		return color;
	}
	
	
	
	
	
	
	
	public void refrescarBindingTabla(Boolean blnSoloTabla) {
	}
	
	public void inicializarActualizarBindingBotonesManualConfiguracionPunVen(Boolean esSetControles) {						
		if(esSetControles) {
			this.jButtonNuevoConfiguracionPunVen.setVisible((this.isVisibilidadCeldaNuevoConfiguracionPunVen && this.isPermisoNuevoConfiguracionPunVen));			
			this.jButtonDuplicarConfiguracionPunVen.setVisible((this.isVisibilidadCeldaDuplicarConfiguracionPunVen && this.isPermisoDuplicarConfiguracionPunVen));			
			this.jButtonCopiarConfiguracionPunVen.setVisible((this.isVisibilidadCeldaCopiarConfiguracionPunVen && this.isPermisoCopiarConfiguracionPunVen));
			this.jButtonVerFormConfiguracionPunVen.setVisible((this.isVisibilidadCeldaVerFormConfiguracionPunVen && this.isPermisoVerFormConfiguracionPunVen));
			
			this.jButtonAbrirOrderByConfiguracionPunVen.setVisible((this.isVisibilidadCeldaOrdenConfiguracionPunVen && this.isPermisoOrdenConfiguracionPunVen));			
			
			this.jButtonNuevoRelacionesConfiguracionPunVen.setVisible((this.isVisibilidadCeldaNuevoRelacionesConfiguracionPunVen && this.isPermisoNuevoConfiguracionPunVen));			
			this.jButtonNuevoGuardarCambiosConfiguracionPunVen.setVisible((this.isVisibilidadCeldaNuevoConfiguracionPunVen && this.isPermisoNuevoConfiguracionPunVen && this.isPermisoGuardarCambiosConfiguracionPunVen));
			
			if(this.jInternalFrameDetalleFormConfiguracionPunVen!=null) {
			this.jInternalFrameDetalleFormConfiguracionPunVen.jButtonModificarConfiguracionPunVen.setVisible((this.isVisibilidadCeldaModificarConfiguracionPunVen && this.isPermisoActualizarConfiguracionPunVen));	
			this.jInternalFrameDetalleFormConfiguracionPunVen.jButtonActualizarConfiguracionPunVen.setVisible((this.isVisibilidadCeldaActualizarConfiguracionPunVen && this.isPermisoActualizarConfiguracionPunVen));	
			this.jInternalFrameDetalleFormConfiguracionPunVen.jButtonEliminarConfiguracionPunVen.setVisible((this.isVisibilidadCeldaEliminarConfiguracionPunVen && this.isPermisoEliminarConfiguracionPunVen));
			this.jInternalFrameDetalleFormConfiguracionPunVen.jButtonCancelarConfiguracionPunVen.setVisible(this.isVisibilidadCeldaCancelarConfiguracionPunVen);							
			this.jInternalFrameDetalleFormConfiguracionPunVen.jButtonGuardarCambiosConfiguracionPunVen.setVisible((this.isVisibilidadCeldaGuardarConfiguracionPunVen && this.isPermisoGuardarCambiosConfiguracionPunVen));			
			
			}
						
			this.jButtonGuardarCambiosTablaConfiguracionPunVen.setVisible((this.isVisibilidadCeldaGuardarCambiosConfiguracionPunVen && this.isPermisoGuardarCambiosConfiguracionPunVen));							
			
			//TOOLBAR
			
			this.jButtonNuevoToolBarConfiguracionPunVen.setVisible((this.isVisibilidadCeldaNuevoConfiguracionPunVen && this.isPermisoNuevoConfiguracionPunVen));						
			this.jButtonDuplicarToolBarConfiguracionPunVen.setVisible((this.isVisibilidadCeldaDuplicarConfiguracionPunVen && this.isPermisoDuplicarConfiguracionPunVen));						
			this.jButtonCopiarToolBarConfiguracionPunVen.setVisible((this.isVisibilidadCeldaCopiarConfiguracionPunVen && this.isPermisoCopiarConfiguracionPunVen));			
			this.jButtonVerFormToolBarConfiguracionPunVen.setVisible((this.isVisibilidadCeldaVerFormConfiguracionPunVen && this.isPermisoVerFormConfiguracionPunVen));			
			this.jButtonAbrirOrderByToolBarConfiguracionPunVen.setVisible((this.isVisibilidadCeldaOrdenConfiguracionPunVen && this.isPermisoOrdenConfiguracionPunVen));
			this.jButtonNuevoRelacionesToolBarConfiguracionPunVen.setVisible((this.isVisibilidadCeldaNuevoRelacionesConfiguracionPunVen && this.isPermisoNuevoConfiguracionPunVen));			
			this.jButtonNuevoGuardarCambiosToolBarConfiguracionPunVen.setVisible((this.isVisibilidadCeldaNuevoConfiguracionPunVen && this.isPermisoNuevoConfiguracionPunVen && this.isPermisoGuardarCambiosConfiguracionPunVen));			
			
			if(this.jInternalFrameDetalleFormConfiguracionPunVen!=null) {
			this.jInternalFrameDetalleFormConfiguracionPunVen.jButtonModificarToolBarConfiguracionPunVen.setVisible((this.isVisibilidadCeldaModificarConfiguracionPunVen && this.isPermisoActualizarConfiguracionPunVen));	
			this.jInternalFrameDetalleFormConfiguracionPunVen.jButtonActualizarToolBarConfiguracionPunVen.setVisible((this.isVisibilidadCeldaActualizarConfiguracionPunVen  && this.isPermisoActualizarConfiguracionPunVen));	
			this.jInternalFrameDetalleFormConfiguracionPunVen.jButtonEliminarToolBarConfiguracionPunVen.setVisible((this.isVisibilidadCeldaEliminarConfiguracionPunVen && this.isPermisoEliminarConfiguracionPunVen));
			this.jInternalFrameDetalleFormConfiguracionPunVen.jButtonCancelarToolBarConfiguracionPunVen.setVisible(this.isVisibilidadCeldaCancelarConfiguracionPunVen);				
			this.jInternalFrameDetalleFormConfiguracionPunVen.jButtonGuardarCambiosToolBarConfiguracionPunVen.setVisible((this.isVisibilidadCeldaGuardarConfiguracionPunVen && this.isPermisoGuardarCambiosConfiguracionPunVen));									
			}
			
			this.jButtonGuardarCambiosTablaToolBarConfiguracionPunVen.setVisible((this.isVisibilidadCeldaGuardarCambiosConfiguracionPunVen && this.isPermisoGuardarCambiosConfiguracionPunVen));									
			
			//TOOLBAR
			
			//MENUS
			
			this.jMenuItemNuevoConfiguracionPunVen.setVisible((this.isVisibilidadCeldaNuevoConfiguracionPunVen && this.isPermisoNuevoConfiguracionPunVen));			
			this.jMenuItemDuplicarConfiguracionPunVen.setVisible((this.isVisibilidadCeldaDuplicarConfiguracionPunVen && this.isPermisoDuplicarConfiguracionPunVen));			
			this.jMenuItemCopiarConfiguracionPunVen.setVisible((this.isVisibilidadCeldaCopiarConfiguracionPunVen && this.isPermisoCopiarConfiguracionPunVen));			
			this.jMenuItemVerFormConfiguracionPunVen.setVisible((this.isVisibilidadCeldaVerFormConfiguracionPunVen && this.isPermisoVerFormConfiguracionPunVen));			
			this.jMenuItemAbrirOrderByConfiguracionPunVen.setVisible((this.isVisibilidadCeldaOrdenConfiguracionPunVen && this.isPermisoOrdenConfiguracionPunVen));			
			//this.jMenuItemMostrarOcultarConfiguracionPunVen.setVisible((this.isVisibilidadCeldaOrdenConfiguracionPunVen && this.isPermisoOrdenConfiguracionPunVen));
			this.jMenuItemDetalleAbrirOrderByConfiguracionPunVen.setVisible((this.isVisibilidadCeldaOrdenConfiguracionPunVen && this.isPermisoOrdenConfiguracionPunVen));			
			//this.jMenuItemDetalleMostrarOcultarConfiguracionPunVen.setVisible((this.isVisibilidadCeldaOrdenConfiguracionPunVen && this.isPermisoOrdenConfiguracionPunVen));			
			this.jMenuItemNuevoRelacionesConfiguracionPunVen.setVisible((this.isVisibilidadCeldaNuevoRelacionesConfiguracionPunVen && this.isPermisoNuevoConfiguracionPunVen));			
			this.jMenuItemNuevoGuardarCambiosConfiguracionPunVen.setVisible((this.isVisibilidadCeldaNuevoConfiguracionPunVen && this.isPermisoNuevoConfiguracionPunVen && this.isPermisoGuardarCambiosConfiguracionPunVen));									
			
			if(this.jInternalFrameDetalleFormConfiguracionPunVen!=null) {
			this.jInternalFrameDetalleFormConfiguracionPunVen.jMenuItemModificarConfiguracionPunVen.setVisible((this.isVisibilidadCeldaModificarConfiguracionPunVen && this.isPermisoActualizarConfiguracionPunVen));	
			this.jInternalFrameDetalleFormConfiguracionPunVen.jMenuItemActualizarConfiguracionPunVen.setVisible((this.isVisibilidadCeldaActualizarConfiguracionPunVen && this.isPermisoActualizarConfiguracionPunVen));	
			this.jInternalFrameDetalleFormConfiguracionPunVen.jMenuItemEliminarConfiguracionPunVen.setVisible((this.isVisibilidadCeldaEliminarConfiguracionPunVen && this.isPermisoEliminarConfiguracionPunVen));
			this.jInternalFrameDetalleFormConfiguracionPunVen.jMenuItemCancelarConfiguracionPunVen.setVisible(this.isVisibilidadCeldaCancelarConfiguracionPunVen);				
			}
			
			this.jMenuItemGuardarCambiosConfiguracionPunVen.setVisible((this.isVisibilidadCeldaGuardarConfiguracionPunVen && this.isPermisoGuardarCambiosConfiguracionPunVen));						
			this.jMenuItemGuardarCambiosTablaConfiguracionPunVen.setVisible((this.isVisibilidadCeldaGuardarCambiosConfiguracionPunVen && this.isPermisoGuardarCambiosConfiguracionPunVen));						
			
			//MENUS
			
		} else {
			this.isVisibilidadCeldaNuevoConfiguracionPunVen=this.jButtonNuevoConfiguracionPunVen.isVisible();
			this.isVisibilidadCeldaDuplicarConfiguracionPunVen=this.jButtonDuplicarConfiguracionPunVen.isVisible();
			this.isVisibilidadCeldaCopiarConfiguracionPunVen=this.jButtonCopiarConfiguracionPunVen.isVisible();
			this.isVisibilidadCeldaVerFormConfiguracionPunVen=this.jButtonVerFormConfiguracionPunVen.isVisible();
			
			this.isVisibilidadCeldaOrdenConfiguracionPunVen=this.jButtonAbrirOrderByConfiguracionPunVen.isVisible();			
			
			this.isVisibilidadCeldaNuevoRelacionesConfiguracionPunVen=this.jButtonNuevoRelacionesConfiguracionPunVen.isVisible();
			this.isVisibilidadCeldaModificarConfiguracionPunVen=this.jButtonModificarConfiguracionPunVen.isVisible();
			
			if(this.jInternalFrameDetalleFormConfiguracionPunVen!=null) {
			this.isVisibilidadCeldaActualizarConfiguracionPunVen=this.jInternalFrameDetalleFormConfiguracionPunVen.jButtonActualizarConfiguracionPunVen.isVisible();
			this.isVisibilidadCeldaEliminarConfiguracionPunVen=this.jInternalFrameDetalleFormConfiguracionPunVen.jButtonEliminarConfiguracionPunVen.isVisible();
			this.isVisibilidadCeldaCancelarConfiguracionPunVen=this.jInternalFrameDetalleFormConfiguracionPunVen.jButtonCancelarConfiguracionPunVen.isVisible();
			this.isVisibilidadCeldaGuardarConfiguracionPunVen=this.jInternalFrameDetalleFormConfiguracionPunVen.jButtonGuardarCambiosConfiguracionPunVen.isVisible();			
			}
			
			this.isVisibilidadCeldaGuardarCambiosConfiguracionPunVen=this.jButtonGuardarCambiosTablaConfiguracionPunVen.isVisible();
			
			//TOOLBAR
			
			this.isVisibilidadCeldaNuevoConfiguracionPunVen=this.jButtonNuevoToolBarConfiguracionPunVen.isVisible();
			this.isVisibilidadCeldaNuevoRelacionesConfiguracionPunVen=this.jButtonNuevoRelacionesToolBarConfiguracionPunVen.isVisible();
			
			if(this.jInternalFrameDetalleFormConfiguracionPunVen!=null) {
			this.isVisibilidadCeldaModificarConfiguracionPunVen=this.jInternalFrameDetalleFormConfiguracionPunVen.jButtonModificarToolBarConfiguracionPunVen.isVisible();
			this.isVisibilidadCeldaActualizarConfiguracionPunVen=this.jInternalFrameDetalleFormConfiguracionPunVen.jButtonActualizarToolBarConfiguracionPunVen.isVisible();
			this.isVisibilidadCeldaEliminarConfiguracionPunVen=this.jInternalFrameDetalleFormConfiguracionPunVen.jButtonEliminarToolBarConfiguracionPunVen.isVisible();
			this.isVisibilidadCeldaCancelarConfiguracionPunVen=this.jInternalFrameDetalleFormConfiguracionPunVen.jButtonCancelarToolBarConfiguracionPunVen.isVisible();
			}
			
			this.isVisibilidadCeldaGuardarConfiguracionPunVen=this.jButtonGuardarCambiosToolBarConfiguracionPunVen.isVisible();
			this.isVisibilidadCeldaGuardarCambiosConfiguracionPunVen=this.jButtonGuardarCambiosTablaToolBarConfiguracionPunVen.isVisible();						
			
			//TOOLBAR
			
			//MENUS
			
			this.isVisibilidadCeldaNuevoConfiguracionPunVen=this.jMenuItemNuevoConfiguracionPunVen.isVisible();
			this.isVisibilidadCeldaNuevoRelacionesConfiguracionPunVen=this.jMenuItemNuevoRelacionesConfiguracionPunVen.isVisible();
			
			if(this.jInternalFrameDetalleFormConfiguracionPunVen!=null) {
			this.isVisibilidadCeldaModificarConfiguracionPunVen=this.jInternalFrameDetalleFormConfiguracionPunVen.jMenuItemModificarConfiguracionPunVen.isVisible();
			this.isVisibilidadCeldaActualizarConfiguracionPunVen=this.jInternalFrameDetalleFormConfiguracionPunVen.jMenuItemActualizarConfiguracionPunVen.isVisible();
			this.isVisibilidadCeldaEliminarConfiguracionPunVen=this.jInternalFrameDetalleFormConfiguracionPunVen.jMenuItemEliminarConfiguracionPunVen.isVisible();
			this.isVisibilidadCeldaCancelarConfiguracionPunVen=this.jInternalFrameDetalleFormConfiguracionPunVen.jMenuItemCancelarConfiguracionPunVen.isVisible();
			}
			
			this.isVisibilidadCeldaGuardarConfiguracionPunVen=this.jMenuItemGuardarCambiosConfiguracionPunVen.isVisible();
			this.isVisibilidadCeldaGuardarCambiosConfiguracionPunVen=this.jMenuItemGuardarCambiosTablaConfiguracionPunVen.isVisible();						
			
			//MENUS
		}
	}
	
	public void inicializarActualizarBindingBotonesConfiguracionPunVen(Boolean esInicializar) {
		if(ConfiguracionPunVenJInternalFrame.ISBINDING_MANUAL) {			
			if(this.configuracionpunvenSessionBean.getConGuardarRelaciones()) {
				//if(this.configuracionpunvenSessionBean.getEsGuardarRelacionado()) {
				
				this.actualizarEstadoCeldasBotonesConGuardarRelacionesConfiguracionPunVen();
			}
			
			this.inicializarActualizarBindingBotonesManualConfiguracionPunVen(true);
			
		} else {	
		}
	}		
	
	public void inicializarActualizarBindingBotonesPermisosManualConfiguracionPunVen() {
		this.jButtonNuevoConfiguracionPunVen.setVisible(this.isPermisoNuevoConfiguracionPunVen);			
		this.jButtonDuplicarConfiguracionPunVen.setVisible(this.isPermisoDuplicarConfiguracionPunVen);			
		this.jButtonCopiarConfiguracionPunVen.setVisible(this.isPermisoCopiarConfiguracionPunVen);			
		this.jButtonVerFormConfiguracionPunVen.setVisible(this.isPermisoVerFormConfiguracionPunVen);			
		
		this.jButtonAbrirOrderByConfiguracionPunVen.setVisible(this.isPermisoOrdenConfiguracionPunVen);					
		
		this.jButtonNuevoRelacionesConfiguracionPunVen.setVisible(this.isPermisoNuevoConfiguracionPunVen);			
		
		if(this.jInternalFrameDetalleFormConfiguracionPunVen!=null) { //if(this.conCargarFormDetalle) {
			this.jInternalFrameDetalleFormConfiguracionPunVen.jButtonModificarConfiguracionPunVen.setVisible(this.isPermisoActualizarConfiguracionPunVen);	
			this.jInternalFrameDetalleFormConfiguracionPunVen.jButtonActualizarConfiguracionPunVen.setVisible(this.isPermisoActualizarConfiguracionPunVen);	
			this.jInternalFrameDetalleFormConfiguracionPunVen.jButtonEliminarConfiguracionPunVen.setVisible(this.isPermisoEliminarConfiguracionPunVen);
			this.jInternalFrameDetalleFormConfiguracionPunVen.jButtonCancelarConfiguracionPunVen.setVisible(this.isVisibilidadCeldaCancelarConfiguracionPunVen);						
			this.jInternalFrameDetalleFormConfiguracionPunVen.jButtonGuardarCambiosConfiguracionPunVen.setVisible(this.isPermisoGuardarCambiosConfiguracionPunVen);							
		}
		
		this.jButtonGuardarCambiosTablaConfiguracionPunVen.setVisible(this.isPermisoActualizarConfiguracionPunVen);
	}
	
	public void inicializarActualizarBindingBotonesPermisosManualFormDetalleConfiguracionPunVen() {
		this.jInternalFrameDetalleFormConfiguracionPunVen.jButtonModificarConfiguracionPunVen.setVisible(this.isPermisoActualizarConfiguracionPunVen);	
		this.jInternalFrameDetalleFormConfiguracionPunVen.jButtonActualizarConfiguracionPunVen.setVisible(this.isPermisoActualizarConfiguracionPunVen);	
		this.jInternalFrameDetalleFormConfiguracionPunVen.jButtonEliminarConfiguracionPunVen.setVisible(this.isPermisoEliminarConfiguracionPunVen);
		this.jInternalFrameDetalleFormConfiguracionPunVen.jButtonCancelarConfiguracionPunVen.setVisible(this.isVisibilidadCeldaCancelarConfiguracionPunVen);							
		this.jInternalFrameDetalleFormConfiguracionPunVen.jButtonGuardarCambiosConfiguracionPunVen.setVisible((this.isVisibilidadCeldaGuardarConfiguracionPunVen && this.isPermisoGuardarCambiosConfiguracionPunVen));			
	}
	
	public void inicializarActualizarBindingBotonesPermisosConfiguracionPunVen() {
		if(ConfiguracionPunVenJInternalFrame.ISBINDING_MANUAL) {
			this.inicializarActualizarBindingBotonesPermisosManualConfiguracionPunVen();
		} else {
		}
	}
	
	
	public void refrescarBindingBotonesConfiguracionPunVen() {
	}
	
	public void jTableDatosConfiguracionPunVenListSelectionListener(javax.swing.event.ListSelectionEvent evt) throws Exception { 
		try {
			this.seleccionarConfiguracionPunVen(null,evt,-1);
		} catch(Exception e) {
			FuncionesSwing.manageException(this, e,logger,ConfiguracionPunVenConstantesFunciones.CLASSNAME);
		}
	}
	
	
	public void jButtonidConfiguracionPunVenBusquedaActionPerformed(java.awt.event.ActionEvent evt) throws Exception {
		try {

				if(Constantes.ISUSAEJBLOGICLAYER) {
					this.configuracionpunvenLogic.getNewConnexionToDeep("");
				}

				//TOCA TRAER NUEVAMENTE, YA QUE SE PIERDE REGISTRO ACTUAL
				int intSelectedRow = this.jTableDatosConfiguracionPunVen.getSelectedRow();

				if(intSelectedRow>-1) {
					this.setVariablesFormularioToObjetoActualConfiguracionPunVen(this.getconfiguracionpunven(),true);
					this.setVariablesFormularioToObjetoActualForeignKeysConfiguracionPunVen(this.configuracionpunven);
					//ARCHITECTURE
					/*
					if(Constantes.ISUSAEJBLOGICLAYER) {
						this.configuracionpunven =(ConfiguracionPunVen) this.configuracionpunvenLogic.getConfiguracionPunVens().toArray()[this.jTableDatosConfiguracionPunVen.convertRowIndexToModel(intSelectedRow)];
					} else if(Constantes.ISUSAEJBREMOTE || Constantes.ISUSAEJBHOME) {
						this.configuracionpunven =(ConfiguracionPunVen) this.configuracionpunvens.toArray()[this.jTableDatosConfiguracionPunVen.convertRowIndexToModel(intSelectedRow)];
					}
					*/
					//ARCHITECTURE

				} else {
					if(this.configuracionpunven==null) {
						this.configuracionpunven = new ConfiguracionPunVen();
					}

					this.setVariablesFormularioToObjetoActualConfiguracionPunVen(this.configuracionpunven,true);
					this.setVariablesFormularioToObjetoActualForeignKeysConfiguracionPunVen(this.configuracionpunven);
				}

				if(this.configuracionpunven.getId()!=null) {

					this.sAccionBusqueda="Query";

					this.sFinalQueryGeneral=" where id = "+this.configuracionpunven.getId().toString()+" ";

					if(Constantes.ISDEVELOPING) {
						System.out.println(this.sFinalQueryGeneral);
					}

					this.procesarBusqueda(this.sAccionBusqueda);

					this.inicializarActualizarBindingConfiguracionPunVen(false);
				}

				if(Constantes.ISUSAEJBLOGICLAYER) {
					this.configuracionpunvenLogic.commitNewConnexionToDeep();
				}

			} catch(Exception e) {

				if(Constantes.ISUSAEJBLOGICLAYER) {
					this.configuracionpunvenLogic.rollbackNewConnexionToDeep();
				}

				FuncionesSwing.manageException(this, e,logger,ConfiguracionPunVenConstantesFunciones.CLASSNAME);

			} finally {
				if(Constantes.ISUSAEJBLOGICLAYER) {
					this.configuracionpunvenLogic.closeNewConnexionToDeep();
				}

			}
		}

	public void jButtonid_empresaConfiguracionPunVenUpdateActionPerformed(java.awt.event.ActionEvent evt) throws Exception {
		try {

			if(Constantes.ISUSAEJBLOGICLAYER) {
				this.configuracionpunvenLogic.getNewConnexionToDeep("");
			}

			Boolean idTienePermisoempresa=true;

			idTienePermisoempresa=this.tienePermisosUsuarioEnPaginaWebConfiguracionPunVen(EmpresaConstantesFunciones.CLASSNAME);

			if(idTienePermisoempresa) {
				//TOCA TRAER NUEVAMENTE, YA QUE SE PIERDE REGISTRO ACTUAL
				int intSelectedRow = this.jTableDatosConfiguracionPunVen.getSelectedRow();

				if(intSelectedRow<0 && this.jTableDatosConfiguracionPunVen.getRowCount()>0) {
					intSelectedRow =0;
					this.jTableDatosConfiguracionPunVen.setRowSelectionInterval(intSelectedRow,intSelectedRow);
				}
				//ARCHITECTURE
				/*
				if(Constantes.ISUSAEJBLOGICLAYER) {
					this.configuracionpunven =(ConfiguracionPunVen) this.configuracionpunvenLogic.getConfiguracionPunVens().toArray()[this.jTableDatosConfiguracionPunVen.convertRowIndexToModel(intSelectedRow)];
				} else if(Constantes.ISUSAEJBREMOTE || Constantes.ISUSAEJBHOME) {
					this.configuracionpunven =(ConfiguracionPunVen) this.configuracionpunvens.toArray()[this.jTableDatosConfiguracionPunVen.convertRowIndexToModel(intSelectedRow)];
				}
				*/
				//ARCHITECTURE

				this.setVariablesFormularioToObjetoActualConfiguracionPunVen(this.getconfiguracionpunven(),true);
				this.setVariablesFormularioToObjetoActualForeignKeysConfiguracionPunVen(this.configuracionpunven);

				this.empresaBeanSwingJInternalFrame=new EmpresaBeanSwingJInternalFrame(true,true,this.jDesktopPane,this.usuarioActual,this.resumenUsuarioActual,this.moduloActual,this.opcionActual,this.parametroGeneralSg,this.parametroGeneralUsuario,PaginaTipo.AUXILIAR,false,false,false,true);
				this.empresaBeanSwingJInternalFrame.setJInternalFrameParent(this);

				this.empresaBeanSwingJInternalFrame.getEmpresaLogic().setConnexion(this.configuracionpunvenLogic.getConnexion());

				if(this.configuracionpunven.getid_empresa()!=null) {
					this.empresaBeanSwingJInternalFrame.sTipoBusqueda="PorId";
					this.empresaBeanSwingJInternalFrame.setIdActual(this.configuracionpunven.getid_empresa());
					this.empresaBeanSwingJInternalFrame.procesarBusqueda("PorId");
					this.empresaBeanSwingJInternalFrame.setsAccionBusqueda("PorId");
					this.empresaBeanSwingJInternalFrame.inicializarActualizarBindingTablaEmpresa();
				}

				JInternalFrameBase jinternalFrame =this.empresaBeanSwingJInternalFrame;
				jinternalFrame.setAutoscrolls(true);
				//frame.setSize(screenSize.width-inset*7 , screenSize.height-inset*9);
				jinternalFrame.setVisible(true); 


				TitledBorder titledBorderConfiguracionPunVen=(TitledBorder)this.jScrollPanelDatosConfiguracionPunVen.getBorder();
				TitledBorder titledBorderempresa=(TitledBorder)this.empresaBeanSwingJInternalFrame.jScrollPanelDatosEmpresa.getBorder();

				titledBorderempresa.setTitle(titledBorderConfiguracionPunVen.getTitle() + " -> Empresa");


				if(!Constantes.CON_VARIAS_VENTANAS) {
					MainJFrame.cerrarJInternalFramesExistentes(this.jDesktopPane,jinternalFrame);
				}

				this.jDesktopPane.add(jinternalFrame);

				jinternalFrame.setSelected(true);
			} else {
				throw new Exception("NO TIENE PERMISO PARA TRABAJAR CON ESTA INFORMACION");
			}

			if(Constantes.ISUSAEJBLOGICLAYER) {
				this.configuracionpunvenLogic.commitNewConnexionToDeep();
			}


		} catch(Exception e) {

			if(Constantes.ISUSAEJBLOGICLAYER) {
				this.configuracionpunvenLogic.rollbackNewConnexionToDeep();
			}

			FuncionesSwing.manageException(this, e,logger,ConfiguracionPunVenConstantesFunciones.CLASSNAME);

		} finally {
			if(Constantes.ISUSAEJBLOGICLAYER) {
				this.configuracionpunvenLogic.closeNewConnexionToDeep();
			}

		}
	}

	public void jButtonid_empresaConfiguracionPunVenBusquedaActionPerformed(java.awt.event.ActionEvent evt) throws Exception {
		try {

				if(Constantes.ISUSAEJBLOGICLAYER) {
					this.configuracionpunvenLogic.getNewConnexionToDeep("");
				}

				//TOCA TRAER NUEVAMENTE, YA QUE SE PIERDE REGISTRO ACTUAL
				int intSelectedRow = this.jTableDatosConfiguracionPunVen.getSelectedRow();

				if(intSelectedRow>-1) {
					this.setVariablesFormularioToObjetoActualConfiguracionPunVen(this.getconfiguracionpunven(),true);
					this.setVariablesFormularioToObjetoActualForeignKeysConfiguracionPunVen(this.configuracionpunven);
					//ARCHITECTURE
					/*
					if(Constantes.ISUSAEJBLOGICLAYER) {
						this.configuracionpunven =(ConfiguracionPunVen) this.configuracionpunvenLogic.getConfiguracionPunVens().toArray()[this.jTableDatosConfiguracionPunVen.convertRowIndexToModel(intSelectedRow)];
					} else if(Constantes.ISUSAEJBREMOTE || Constantes.ISUSAEJBHOME) {
						this.configuracionpunven =(ConfiguracionPunVen) this.configuracionpunvens.toArray()[this.jTableDatosConfiguracionPunVen.convertRowIndexToModel(intSelectedRow)];
					}
					*/
					//ARCHITECTURE

				} else {
					if(this.configuracionpunven==null) {
						this.configuracionpunven = new ConfiguracionPunVen();
					}

					this.setVariablesFormularioToObjetoActualConfiguracionPunVen(this.configuracionpunven,true);
					this.setVariablesFormularioToObjetoActualForeignKeysConfiguracionPunVen(this.configuracionpunven);
				}

				if(this.configuracionpunven.getid_empresa()!=null) {

					this.sAccionBusqueda="Query";

					this.sFinalQueryGeneral=" where id_empresa = "+this.configuracionpunven.getid_empresa().toString()+" ";

					if(Constantes.ISDEVELOPING) {
						System.out.println(this.sFinalQueryGeneral);
					}

					this.procesarBusqueda(this.sAccionBusqueda);

					this.inicializarActualizarBindingConfiguracionPunVen(false);
				}

				if(Constantes.ISUSAEJBLOGICLAYER) {
					this.configuracionpunvenLogic.commitNewConnexionToDeep();
				}

			} catch(Exception e) {

				if(Constantes.ISUSAEJBLOGICLAYER) {
					this.configuracionpunvenLogic.rollbackNewConnexionToDeep();
				}

				FuncionesSwing.manageException(this, e,logger,ConfiguracionPunVenConstantesFunciones.CLASSNAME);

			} finally {
				if(Constantes.ISUSAEJBLOGICLAYER) {
					this.configuracionpunvenLogic.closeNewConnexionToDeep();
				}

			}
		}

	public void jButtonid_sucursalConfiguracionPunVenUpdateActionPerformed(java.awt.event.ActionEvent evt) throws Exception {
		try {

			if(Constantes.ISUSAEJBLOGICLAYER) {
				this.configuracionpunvenLogic.getNewConnexionToDeep("");
			}

			Boolean idTienePermisosucursal=true;

			idTienePermisosucursal=this.tienePermisosUsuarioEnPaginaWebConfiguracionPunVen(SucursalConstantesFunciones.CLASSNAME);

			if(idTienePermisosucursal) {
				//TOCA TRAER NUEVAMENTE, YA QUE SE PIERDE REGISTRO ACTUAL
				int intSelectedRow = this.jTableDatosConfiguracionPunVen.getSelectedRow();

				if(intSelectedRow<0 && this.jTableDatosConfiguracionPunVen.getRowCount()>0) {
					intSelectedRow =0;
					this.jTableDatosConfiguracionPunVen.setRowSelectionInterval(intSelectedRow,intSelectedRow);
				}
				//ARCHITECTURE
				/*
				if(Constantes.ISUSAEJBLOGICLAYER) {
					this.configuracionpunven =(ConfiguracionPunVen) this.configuracionpunvenLogic.getConfiguracionPunVens().toArray()[this.jTableDatosConfiguracionPunVen.convertRowIndexToModel(intSelectedRow)];
				} else if(Constantes.ISUSAEJBREMOTE || Constantes.ISUSAEJBHOME) {
					this.configuracionpunven =(ConfiguracionPunVen) this.configuracionpunvens.toArray()[this.jTableDatosConfiguracionPunVen.convertRowIndexToModel(intSelectedRow)];
				}
				*/
				//ARCHITECTURE

				this.setVariablesFormularioToObjetoActualConfiguracionPunVen(this.getconfiguracionpunven(),true);
				this.setVariablesFormularioToObjetoActualForeignKeysConfiguracionPunVen(this.configuracionpunven);

				this.sucursalBeanSwingJInternalFrame=new SucursalBeanSwingJInternalFrame(true,true,this.jDesktopPane,this.usuarioActual,this.resumenUsuarioActual,this.moduloActual,this.opcionActual,this.parametroGeneralSg,this.parametroGeneralUsuario,PaginaTipo.AUXILIAR,false,false,false,true);
				this.sucursalBeanSwingJInternalFrame.setJInternalFrameParent(this);

				this.sucursalBeanSwingJInternalFrame.getSucursalLogic().setConnexion(this.configuracionpunvenLogic.getConnexion());

				if(this.configuracionpunven.getid_sucursal()!=null) {
					this.sucursalBeanSwingJInternalFrame.sTipoBusqueda="PorId";
					this.sucursalBeanSwingJInternalFrame.setIdActual(this.configuracionpunven.getid_sucursal());
					this.sucursalBeanSwingJInternalFrame.procesarBusqueda("PorId");
					this.sucursalBeanSwingJInternalFrame.setsAccionBusqueda("PorId");
					this.sucursalBeanSwingJInternalFrame.inicializarActualizarBindingTablaSucursal();
				}

				JInternalFrameBase jinternalFrame =this.sucursalBeanSwingJInternalFrame;
				jinternalFrame.setAutoscrolls(true);
				//frame.setSize(screenSize.width-inset*7 , screenSize.height-inset*9);
				jinternalFrame.setVisible(true); 


				TitledBorder titledBorderConfiguracionPunVen=(TitledBorder)this.jScrollPanelDatosConfiguracionPunVen.getBorder();
				TitledBorder titledBordersucursal=(TitledBorder)this.sucursalBeanSwingJInternalFrame.jScrollPanelDatosSucursal.getBorder();

				titledBordersucursal.setTitle(titledBorderConfiguracionPunVen.getTitle() + " -> Sucursal");


				if(!Constantes.CON_VARIAS_VENTANAS) {
					MainJFrame.cerrarJInternalFramesExistentes(this.jDesktopPane,jinternalFrame);
				}

				this.jDesktopPane.add(jinternalFrame);

				jinternalFrame.setSelected(true);
			} else {
				throw new Exception("NO TIENE PERMISO PARA TRABAJAR CON ESTA INFORMACION");
			}

			if(Constantes.ISUSAEJBLOGICLAYER) {
				this.configuracionpunvenLogic.commitNewConnexionToDeep();
			}


		} catch(Exception e) {

			if(Constantes.ISUSAEJBLOGICLAYER) {
				this.configuracionpunvenLogic.rollbackNewConnexionToDeep();
			}

			FuncionesSwing.manageException(this, e,logger,ConfiguracionPunVenConstantesFunciones.CLASSNAME);

		} finally {
			if(Constantes.ISUSAEJBLOGICLAYER) {
				this.configuracionpunvenLogic.closeNewConnexionToDeep();
			}

		}
	}

	public void jButtonid_sucursalConfiguracionPunVenBusquedaActionPerformed(java.awt.event.ActionEvent evt) throws Exception {
		try {

				if(Constantes.ISUSAEJBLOGICLAYER) {
					this.configuracionpunvenLogic.getNewConnexionToDeep("");
				}

				//TOCA TRAER NUEVAMENTE, YA QUE SE PIERDE REGISTRO ACTUAL
				int intSelectedRow = this.jTableDatosConfiguracionPunVen.getSelectedRow();

				if(intSelectedRow>-1) {
					this.setVariablesFormularioToObjetoActualConfiguracionPunVen(this.getconfiguracionpunven(),true);
					this.setVariablesFormularioToObjetoActualForeignKeysConfiguracionPunVen(this.configuracionpunven);
					//ARCHITECTURE
					/*
					if(Constantes.ISUSAEJBLOGICLAYER) {
						this.configuracionpunven =(ConfiguracionPunVen) this.configuracionpunvenLogic.getConfiguracionPunVens().toArray()[this.jTableDatosConfiguracionPunVen.convertRowIndexToModel(intSelectedRow)];
					} else if(Constantes.ISUSAEJBREMOTE || Constantes.ISUSAEJBHOME) {
						this.configuracionpunven =(ConfiguracionPunVen) this.configuracionpunvens.toArray()[this.jTableDatosConfiguracionPunVen.convertRowIndexToModel(intSelectedRow)];
					}
					*/
					//ARCHITECTURE

				} else {
					if(this.configuracionpunven==null) {
						this.configuracionpunven = new ConfiguracionPunVen();
					}

					this.setVariablesFormularioToObjetoActualConfiguracionPunVen(this.configuracionpunven,true);
					this.setVariablesFormularioToObjetoActualForeignKeysConfiguracionPunVen(this.configuracionpunven);
				}

				if(this.configuracionpunven.getid_sucursal()!=null) {

					this.sAccionBusqueda="Query";

					this.sFinalQueryGeneral=" where id_sucursal = "+this.configuracionpunven.getid_sucursal().toString()+" ";

					if(Constantes.ISDEVELOPING) {
						System.out.println(this.sFinalQueryGeneral);
					}

					this.procesarBusqueda(this.sAccionBusqueda);

					this.inicializarActualizarBindingConfiguracionPunVen(false);
				}

				if(Constantes.ISUSAEJBLOGICLAYER) {
					this.configuracionpunvenLogic.commitNewConnexionToDeep();
				}

			} catch(Exception e) {

				if(Constantes.ISUSAEJBLOGICLAYER) {
					this.configuracionpunvenLogic.rollbackNewConnexionToDeep();
				}

				FuncionesSwing.manageException(this, e,logger,ConfiguracionPunVenConstantesFunciones.CLASSNAME);

			} finally {
				if(Constantes.ISUSAEJBLOGICLAYER) {
					this.configuracionpunvenLogic.closeNewConnexionToDeep();
				}

			}
		}

	public void jButtonid_bodegaConfiguracionPunVenUpdateActionPerformed(java.awt.event.ActionEvent evt) throws Exception {
		try {

			if(Constantes.ISUSAEJBLOGICLAYER) {
				this.configuracionpunvenLogic.getNewConnexionToDeep("");
			}

			Boolean idTienePermisobodega=true;

			idTienePermisobodega=this.tienePermisosUsuarioEnPaginaWebConfiguracionPunVen(BodegaConstantesFunciones.CLASSNAME);

			if(idTienePermisobodega) {
				//TOCA TRAER NUEVAMENTE, YA QUE SE PIERDE REGISTRO ACTUAL
				int intSelectedRow = this.jTableDatosConfiguracionPunVen.getSelectedRow();

				if(intSelectedRow<0 && this.jTableDatosConfiguracionPunVen.getRowCount()>0) {
					intSelectedRow =0;
					this.jTableDatosConfiguracionPunVen.setRowSelectionInterval(intSelectedRow,intSelectedRow);
				}
				//ARCHITECTURE
				/*
				if(Constantes.ISUSAEJBLOGICLAYER) {
					this.configuracionpunven =(ConfiguracionPunVen) this.configuracionpunvenLogic.getConfiguracionPunVens().toArray()[this.jTableDatosConfiguracionPunVen.convertRowIndexToModel(intSelectedRow)];
				} else if(Constantes.ISUSAEJBREMOTE || Constantes.ISUSAEJBHOME) {
					this.configuracionpunven =(ConfiguracionPunVen) this.configuracionpunvens.toArray()[this.jTableDatosConfiguracionPunVen.convertRowIndexToModel(intSelectedRow)];
				}
				*/
				//ARCHITECTURE

				this.setVariablesFormularioToObjetoActualConfiguracionPunVen(this.getconfiguracionpunven(),true);
				this.setVariablesFormularioToObjetoActualForeignKeysConfiguracionPunVen(this.configuracionpunven);

				this.bodegaBeanSwingJInternalFrame=new BodegaBeanSwingJInternalFrame(true,true,this.jDesktopPane,this.usuarioActual,this.resumenUsuarioActual,this.moduloActual,this.opcionActual,this.parametroGeneralSg,this.parametroGeneralUsuario,PaginaTipo.AUXILIAR,false,false,false,true);
				this.bodegaBeanSwingJInternalFrame.setJInternalFrameParent(this);

				this.bodegaBeanSwingJInternalFrame.getBodegaLogic().setConnexion(this.configuracionpunvenLogic.getConnexion());

				if(this.configuracionpunven.getid_bodega()!=null) {
					this.bodegaBeanSwingJInternalFrame.sTipoBusqueda="PorId";
					this.bodegaBeanSwingJInternalFrame.setIdActual(this.configuracionpunven.getid_bodega());
					this.bodegaBeanSwingJInternalFrame.procesarBusqueda("PorId");
					this.bodegaBeanSwingJInternalFrame.setsAccionBusqueda("PorId");
					this.bodegaBeanSwingJInternalFrame.inicializarActualizarBindingTablaBodega();
				}

				JInternalFrameBase jinternalFrame =this.bodegaBeanSwingJInternalFrame;
				jinternalFrame.setAutoscrolls(true);
				//frame.setSize(screenSize.width-inset*7 , screenSize.height-inset*9);
				jinternalFrame.setVisible(true); 


				TitledBorder titledBorderConfiguracionPunVen=(TitledBorder)this.jScrollPanelDatosConfiguracionPunVen.getBorder();
				TitledBorder titledBorderbodega=(TitledBorder)this.bodegaBeanSwingJInternalFrame.jScrollPanelDatosBodega.getBorder();

				titledBorderbodega.setTitle(titledBorderConfiguracionPunVen.getTitle() + " -> Bodega");


				if(!Constantes.CON_VARIAS_VENTANAS) {
					MainJFrame.cerrarJInternalFramesExistentes(this.jDesktopPane,jinternalFrame);
				}

				this.jDesktopPane.add(jinternalFrame);

				jinternalFrame.setSelected(true);
			} else {
				throw new Exception("NO TIENE PERMISO PARA TRABAJAR CON ESTA INFORMACION");
			}

			if(Constantes.ISUSAEJBLOGICLAYER) {
				this.configuracionpunvenLogic.commitNewConnexionToDeep();
			}


		} catch(Exception e) {

			if(Constantes.ISUSAEJBLOGICLAYER) {
				this.configuracionpunvenLogic.rollbackNewConnexionToDeep();
			}

			FuncionesSwing.manageException(this, e,logger,ConfiguracionPunVenConstantesFunciones.CLASSNAME);

		} finally {
			if(Constantes.ISUSAEJBLOGICLAYER) {
				this.configuracionpunvenLogic.closeNewConnexionToDeep();
			}

		}
	}

	public void jButtonid_bodegaConfiguracionPunVenBusquedaActionPerformed(java.awt.event.ActionEvent evt) throws Exception {
		try {

				if(Constantes.ISUSAEJBLOGICLAYER) {
					this.configuracionpunvenLogic.getNewConnexionToDeep("");
				}

				//TOCA TRAER NUEVAMENTE, YA QUE SE PIERDE REGISTRO ACTUAL
				int intSelectedRow = this.jTableDatosConfiguracionPunVen.getSelectedRow();

				if(intSelectedRow>-1) {
					this.setVariablesFormularioToObjetoActualConfiguracionPunVen(this.getconfiguracionpunven(),true);
					this.setVariablesFormularioToObjetoActualForeignKeysConfiguracionPunVen(this.configuracionpunven);
					//ARCHITECTURE
					/*
					if(Constantes.ISUSAEJBLOGICLAYER) {
						this.configuracionpunven =(ConfiguracionPunVen) this.configuracionpunvenLogic.getConfiguracionPunVens().toArray()[this.jTableDatosConfiguracionPunVen.convertRowIndexToModel(intSelectedRow)];
					} else if(Constantes.ISUSAEJBREMOTE || Constantes.ISUSAEJBHOME) {
						this.configuracionpunven =(ConfiguracionPunVen) this.configuracionpunvens.toArray()[this.jTableDatosConfiguracionPunVen.convertRowIndexToModel(intSelectedRow)];
					}
					*/
					//ARCHITECTURE

				} else {
					if(this.configuracionpunven==null) {
						this.configuracionpunven = new ConfiguracionPunVen();
					}

					this.setVariablesFormularioToObjetoActualConfiguracionPunVen(this.configuracionpunven,true);
					this.setVariablesFormularioToObjetoActualForeignKeysConfiguracionPunVen(this.configuracionpunven);
				}

				if(this.configuracionpunven.getid_bodega()!=null) {

					this.sAccionBusqueda="Query";

					this.sFinalQueryGeneral=" where id_bodega = "+this.configuracionpunven.getid_bodega().toString()+" ";

					if(Constantes.ISDEVELOPING) {
						System.out.println(this.sFinalQueryGeneral);
					}

					this.procesarBusqueda(this.sAccionBusqueda);

					this.inicializarActualizarBindingConfiguracionPunVen(false);
				}

				if(Constantes.ISUSAEJBLOGICLAYER) {
					this.configuracionpunvenLogic.commitNewConnexionToDeep();
				}

			} catch(Exception e) {

				if(Constantes.ISUSAEJBLOGICLAYER) {
					this.configuracionpunvenLogic.rollbackNewConnexionToDeep();
				}

				FuncionesSwing.manageException(this, e,logger,ConfiguracionPunVenConstantesFunciones.CLASSNAME);

			} finally {
				if(Constantes.ISUSAEJBLOGICLAYER) {
					this.configuracionpunvenLogic.closeNewConnexionToDeep();
				}

			}
		}

	public void jButtonid_cuenta_contable_efectivoConfiguracionPunVenUpdateActionPerformed(java.awt.event.ActionEvent evt) throws Exception {
		try {

			if(Constantes.ISUSAEJBLOGICLAYER) {
				this.configuracionpunvenLogic.getNewConnexionToDeep("");
			}

			Boolean idTienePermisocuentacontableefectivo=true;

			idTienePermisocuentacontableefectivo=this.tienePermisosUsuarioEnPaginaWebConfiguracionPunVen(CuentaContableConstantesFunciones.CLASSNAME);

			if(idTienePermisocuentacontableefectivo) {
				//TOCA TRAER NUEVAMENTE, YA QUE SE PIERDE REGISTRO ACTUAL
				int intSelectedRow = this.jTableDatosConfiguracionPunVen.getSelectedRow();

				if(intSelectedRow<0 && this.jTableDatosConfiguracionPunVen.getRowCount()>0) {
					intSelectedRow =0;
					this.jTableDatosConfiguracionPunVen.setRowSelectionInterval(intSelectedRow,intSelectedRow);
				}
				//ARCHITECTURE
				/*
				if(Constantes.ISUSAEJBLOGICLAYER) {
					this.configuracionpunven =(ConfiguracionPunVen) this.configuracionpunvenLogic.getConfiguracionPunVens().toArray()[this.jTableDatosConfiguracionPunVen.convertRowIndexToModel(intSelectedRow)];
				} else if(Constantes.ISUSAEJBREMOTE || Constantes.ISUSAEJBHOME) {
					this.configuracionpunven =(ConfiguracionPunVen) this.configuracionpunvens.toArray()[this.jTableDatosConfiguracionPunVen.convertRowIndexToModel(intSelectedRow)];
				}
				*/
				//ARCHITECTURE

				this.setVariablesFormularioToObjetoActualConfiguracionPunVen(this.getconfiguracionpunven(),true);
				this.setVariablesFormularioToObjetoActualForeignKeysConfiguracionPunVen(this.configuracionpunven);

				this.cuentacontableefectivoBeanSwingJInternalFrame=new CuentaContableBeanSwingJInternalFrame(true,true,this.jDesktopPane,this.usuarioActual,this.resumenUsuarioActual,this.moduloActual,this.opcionActual,this.parametroGeneralSg,this.parametroGeneralUsuario,PaginaTipo.AUXILIAR,false,false,false,true);
				this.cuentacontableefectivoBeanSwingJInternalFrame.setJInternalFrameParent(this);

				this.cuentacontableefectivoBeanSwingJInternalFrame.getCuentaContableLogic().setConnexion(this.configuracionpunvenLogic.getConnexion());

				if(this.configuracionpunven.getid_cuenta_contable_efectivo()!=null) {
					this.cuentacontableefectivoBeanSwingJInternalFrame.sTipoBusqueda="PorId";
					this.cuentacontableefectivoBeanSwingJInternalFrame.setIdActual(this.configuracionpunven.getid_cuenta_contable_efectivo());
					this.cuentacontableefectivoBeanSwingJInternalFrame.procesarBusqueda("PorId");
					this.cuentacontableefectivoBeanSwingJInternalFrame.setsAccionBusqueda("PorId");
					this.cuentacontableefectivoBeanSwingJInternalFrame.inicializarActualizarBindingTablaCuentaContable();
				}

				JInternalFrameBase jinternalFrame =this.cuentacontableefectivoBeanSwingJInternalFrame;
				jinternalFrame.setAutoscrolls(true);
				//frame.setSize(screenSize.width-inset*7 , screenSize.height-inset*9);
				jinternalFrame.setVisible(true); 


				TitledBorder titledBorderConfiguracionPunVen=(TitledBorder)this.jScrollPanelDatosConfiguracionPunVen.getBorder();
				TitledBorder titledBordercuentacontableefectivo=(TitledBorder)this.cuentacontableefectivoBeanSwingJInternalFrame.jScrollPanelDatosCuentaContable.getBorder();

				titledBordercuentacontableefectivo.setTitle(titledBorderConfiguracionPunVen.getTitle() + " -> Cuenta Contable");


				if(!Constantes.CON_VARIAS_VENTANAS) {
					MainJFrame.cerrarJInternalFramesExistentes(this.jDesktopPane,jinternalFrame);
				}

				this.jDesktopPane.add(jinternalFrame);

				jinternalFrame.setSelected(true);
			} else {
				throw new Exception("NO TIENE PERMISO PARA TRABAJAR CON ESTA INFORMACION");
			}

			if(Constantes.ISUSAEJBLOGICLAYER) {
				this.configuracionpunvenLogic.commitNewConnexionToDeep();
			}


		} catch(Exception e) {

			if(Constantes.ISUSAEJBLOGICLAYER) {
				this.configuracionpunvenLogic.rollbackNewConnexionToDeep();
			}

			FuncionesSwing.manageException(this, e,logger,ConfiguracionPunVenConstantesFunciones.CLASSNAME);

		} finally {
			if(Constantes.ISUSAEJBLOGICLAYER) {
				this.configuracionpunvenLogic.closeNewConnexionToDeep();
			}

		}
	}

	public void jButtonid_cuenta_contable_efectivoConfiguracionPunVenBusquedaActionPerformed(java.awt.event.ActionEvent evt) throws Exception {
		try {

				if(Constantes.ISUSAEJBLOGICLAYER) {
					this.configuracionpunvenLogic.getNewConnexionToDeep("");
				}

				//TOCA TRAER NUEVAMENTE, YA QUE SE PIERDE REGISTRO ACTUAL
				int intSelectedRow = this.jTableDatosConfiguracionPunVen.getSelectedRow();

				if(intSelectedRow>-1) {
					this.setVariablesFormularioToObjetoActualConfiguracionPunVen(this.getconfiguracionpunven(),true);
					this.setVariablesFormularioToObjetoActualForeignKeysConfiguracionPunVen(this.configuracionpunven);
					//ARCHITECTURE
					/*
					if(Constantes.ISUSAEJBLOGICLAYER) {
						this.configuracionpunven =(ConfiguracionPunVen) this.configuracionpunvenLogic.getConfiguracionPunVens().toArray()[this.jTableDatosConfiguracionPunVen.convertRowIndexToModel(intSelectedRow)];
					} else if(Constantes.ISUSAEJBREMOTE || Constantes.ISUSAEJBHOME) {
						this.configuracionpunven =(ConfiguracionPunVen) this.configuracionpunvens.toArray()[this.jTableDatosConfiguracionPunVen.convertRowIndexToModel(intSelectedRow)];
					}
					*/
					//ARCHITECTURE

				} else {
					if(this.configuracionpunven==null) {
						this.configuracionpunven = new ConfiguracionPunVen();
					}

					this.setVariablesFormularioToObjetoActualConfiguracionPunVen(this.configuracionpunven,true);
					this.setVariablesFormularioToObjetoActualForeignKeysConfiguracionPunVen(this.configuracionpunven);
				}

				if(this.configuracionpunven.getid_cuenta_contable_efectivo()!=null) {

					this.sAccionBusqueda="Query";

					this.sFinalQueryGeneral=" where id_cuenta_contable_efectivo = "+this.configuracionpunven.getid_cuenta_contable_efectivo().toString()+" ";

					if(Constantes.ISDEVELOPING) {
						System.out.println(this.sFinalQueryGeneral);
					}

					this.procesarBusqueda(this.sAccionBusqueda);

					this.inicializarActualizarBindingConfiguracionPunVen(false);
				}

				if(Constantes.ISUSAEJBLOGICLAYER) {
					this.configuracionpunvenLogic.commitNewConnexionToDeep();
				}

			} catch(Exception e) {

				if(Constantes.ISUSAEJBLOGICLAYER) {
					this.configuracionpunvenLogic.rollbackNewConnexionToDeep();
				}

				FuncionesSwing.manageException(this, e,logger,ConfiguracionPunVenConstantesFunciones.CLASSNAME);

			} finally {
				if(Constantes.ISUSAEJBLOGICLAYER) {
					this.configuracionpunvenLogic.closeNewConnexionToDeep();
				}

			}
		}

	public void jButtonid_cuenta_contable_iceConfiguracionPunVenUpdateActionPerformed(java.awt.event.ActionEvent evt) throws Exception {
		try {

			if(Constantes.ISUSAEJBLOGICLAYER) {
				this.configuracionpunvenLogic.getNewConnexionToDeep("");
			}

			Boolean idTienePermisocuentacontableice=true;

			idTienePermisocuentacontableice=this.tienePermisosUsuarioEnPaginaWebConfiguracionPunVen(CuentaContableConstantesFunciones.CLASSNAME);

			if(idTienePermisocuentacontableice) {
				//TOCA TRAER NUEVAMENTE, YA QUE SE PIERDE REGISTRO ACTUAL
				int intSelectedRow = this.jTableDatosConfiguracionPunVen.getSelectedRow();

				if(intSelectedRow<0 && this.jTableDatosConfiguracionPunVen.getRowCount()>0) {
					intSelectedRow =0;
					this.jTableDatosConfiguracionPunVen.setRowSelectionInterval(intSelectedRow,intSelectedRow);
				}
				//ARCHITECTURE
				/*
				if(Constantes.ISUSAEJBLOGICLAYER) {
					this.configuracionpunven =(ConfiguracionPunVen) this.configuracionpunvenLogic.getConfiguracionPunVens().toArray()[this.jTableDatosConfiguracionPunVen.convertRowIndexToModel(intSelectedRow)];
				} else if(Constantes.ISUSAEJBREMOTE || Constantes.ISUSAEJBHOME) {
					this.configuracionpunven =(ConfiguracionPunVen) this.configuracionpunvens.toArray()[this.jTableDatosConfiguracionPunVen.convertRowIndexToModel(intSelectedRow)];
				}
				*/
				//ARCHITECTURE

				this.setVariablesFormularioToObjetoActualConfiguracionPunVen(this.getconfiguracionpunven(),true);
				this.setVariablesFormularioToObjetoActualForeignKeysConfiguracionPunVen(this.configuracionpunven);

				this.cuentacontableiceBeanSwingJInternalFrame=new CuentaContableBeanSwingJInternalFrame(true,true,this.jDesktopPane,this.usuarioActual,this.resumenUsuarioActual,this.moduloActual,this.opcionActual,this.parametroGeneralSg,this.parametroGeneralUsuario,PaginaTipo.AUXILIAR,false,false,false,true);
				this.cuentacontableiceBeanSwingJInternalFrame.setJInternalFrameParent(this);

				this.cuentacontableiceBeanSwingJInternalFrame.getCuentaContableLogic().setConnexion(this.configuracionpunvenLogic.getConnexion());

				if(this.configuracionpunven.getid_cuenta_contable_ice()!=null) {
					this.cuentacontableiceBeanSwingJInternalFrame.sTipoBusqueda="PorId";
					this.cuentacontableiceBeanSwingJInternalFrame.setIdActual(this.configuracionpunven.getid_cuenta_contable_ice());
					this.cuentacontableiceBeanSwingJInternalFrame.procesarBusqueda("PorId");
					this.cuentacontableiceBeanSwingJInternalFrame.setsAccionBusqueda("PorId");
					this.cuentacontableiceBeanSwingJInternalFrame.inicializarActualizarBindingTablaCuentaContable();
				}

				JInternalFrameBase jinternalFrame =this.cuentacontableiceBeanSwingJInternalFrame;
				jinternalFrame.setAutoscrolls(true);
				//frame.setSize(screenSize.width-inset*7 , screenSize.height-inset*9);
				jinternalFrame.setVisible(true); 


				TitledBorder titledBorderConfiguracionPunVen=(TitledBorder)this.jScrollPanelDatosConfiguracionPunVen.getBorder();
				TitledBorder titledBordercuentacontableice=(TitledBorder)this.cuentacontableiceBeanSwingJInternalFrame.jScrollPanelDatosCuentaContable.getBorder();

				titledBordercuentacontableice.setTitle(titledBorderConfiguracionPunVen.getTitle() + " -> Cuenta Contable");


				if(!Constantes.CON_VARIAS_VENTANAS) {
					MainJFrame.cerrarJInternalFramesExistentes(this.jDesktopPane,jinternalFrame);
				}

				this.jDesktopPane.add(jinternalFrame);

				jinternalFrame.setSelected(true);
			} else {
				throw new Exception("NO TIENE PERMISO PARA TRABAJAR CON ESTA INFORMACION");
			}

			if(Constantes.ISUSAEJBLOGICLAYER) {
				this.configuracionpunvenLogic.commitNewConnexionToDeep();
			}


		} catch(Exception e) {

			if(Constantes.ISUSAEJBLOGICLAYER) {
				this.configuracionpunvenLogic.rollbackNewConnexionToDeep();
			}

			FuncionesSwing.manageException(this, e,logger,ConfiguracionPunVenConstantesFunciones.CLASSNAME);

		} finally {
			if(Constantes.ISUSAEJBLOGICLAYER) {
				this.configuracionpunvenLogic.closeNewConnexionToDeep();
			}

		}
	}

	public void jButtonid_cuenta_contable_iceConfiguracionPunVenBusquedaActionPerformed(java.awt.event.ActionEvent evt) throws Exception {
		try {

				if(Constantes.ISUSAEJBLOGICLAYER) {
					this.configuracionpunvenLogic.getNewConnexionToDeep("");
				}

				//TOCA TRAER NUEVAMENTE, YA QUE SE PIERDE REGISTRO ACTUAL
				int intSelectedRow = this.jTableDatosConfiguracionPunVen.getSelectedRow();

				if(intSelectedRow>-1) {
					this.setVariablesFormularioToObjetoActualConfiguracionPunVen(this.getconfiguracionpunven(),true);
					this.setVariablesFormularioToObjetoActualForeignKeysConfiguracionPunVen(this.configuracionpunven);
					//ARCHITECTURE
					/*
					if(Constantes.ISUSAEJBLOGICLAYER) {
						this.configuracionpunven =(ConfiguracionPunVen) this.configuracionpunvenLogic.getConfiguracionPunVens().toArray()[this.jTableDatosConfiguracionPunVen.convertRowIndexToModel(intSelectedRow)];
					} else if(Constantes.ISUSAEJBREMOTE || Constantes.ISUSAEJBHOME) {
						this.configuracionpunven =(ConfiguracionPunVen) this.configuracionpunvens.toArray()[this.jTableDatosConfiguracionPunVen.convertRowIndexToModel(intSelectedRow)];
					}
					*/
					//ARCHITECTURE

				} else {
					if(this.configuracionpunven==null) {
						this.configuracionpunven = new ConfiguracionPunVen();
					}

					this.setVariablesFormularioToObjetoActualConfiguracionPunVen(this.configuracionpunven,true);
					this.setVariablesFormularioToObjetoActualForeignKeysConfiguracionPunVen(this.configuracionpunven);
				}

				if(this.configuracionpunven.getid_cuenta_contable_ice()!=null) {

					this.sAccionBusqueda="Query";

					this.sFinalQueryGeneral=" where id_cuenta_contable_ice = "+this.configuracionpunven.getid_cuenta_contable_ice().toString()+" ";

					if(Constantes.ISDEVELOPING) {
						System.out.println(this.sFinalQueryGeneral);
					}

					this.procesarBusqueda(this.sAccionBusqueda);

					this.inicializarActualizarBindingConfiguracionPunVen(false);
				}

				if(Constantes.ISUSAEJBLOGICLAYER) {
					this.configuracionpunvenLogic.commitNewConnexionToDeep();
				}

			} catch(Exception e) {

				if(Constantes.ISUSAEJBLOGICLAYER) {
					this.configuracionpunvenLogic.rollbackNewConnexionToDeep();
				}

				FuncionesSwing.manageException(this, e,logger,ConfiguracionPunVenConstantesFunciones.CLASSNAME);

			} finally {
				if(Constantes.ISUSAEJBLOGICLAYER) {
					this.configuracionpunvenLogic.closeNewConnexionToDeep();
				}

			}
		}

	public void jButtonid_cuenta_contable_otrosConfiguracionPunVenUpdateActionPerformed(java.awt.event.ActionEvent evt) throws Exception {
		try {

			if(Constantes.ISUSAEJBLOGICLAYER) {
				this.configuracionpunvenLogic.getNewConnexionToDeep("");
			}

			Boolean idTienePermisocuentacontableotros=true;

			idTienePermisocuentacontableotros=this.tienePermisosUsuarioEnPaginaWebConfiguracionPunVen(CuentaContableConstantesFunciones.CLASSNAME);

			if(idTienePermisocuentacontableotros) {
				//TOCA TRAER NUEVAMENTE, YA QUE SE PIERDE REGISTRO ACTUAL
				int intSelectedRow = this.jTableDatosConfiguracionPunVen.getSelectedRow();

				if(intSelectedRow<0 && this.jTableDatosConfiguracionPunVen.getRowCount()>0) {
					intSelectedRow =0;
					this.jTableDatosConfiguracionPunVen.setRowSelectionInterval(intSelectedRow,intSelectedRow);
				}
				//ARCHITECTURE
				/*
				if(Constantes.ISUSAEJBLOGICLAYER) {
					this.configuracionpunven =(ConfiguracionPunVen) this.configuracionpunvenLogic.getConfiguracionPunVens().toArray()[this.jTableDatosConfiguracionPunVen.convertRowIndexToModel(intSelectedRow)];
				} else if(Constantes.ISUSAEJBREMOTE || Constantes.ISUSAEJBHOME) {
					this.configuracionpunven =(ConfiguracionPunVen) this.configuracionpunvens.toArray()[this.jTableDatosConfiguracionPunVen.convertRowIndexToModel(intSelectedRow)];
				}
				*/
				//ARCHITECTURE

				this.setVariablesFormularioToObjetoActualConfiguracionPunVen(this.getconfiguracionpunven(),true);
				this.setVariablesFormularioToObjetoActualForeignKeysConfiguracionPunVen(this.configuracionpunven);

				this.cuentacontableotrosBeanSwingJInternalFrame=new CuentaContableBeanSwingJInternalFrame(true,true,this.jDesktopPane,this.usuarioActual,this.resumenUsuarioActual,this.moduloActual,this.opcionActual,this.parametroGeneralSg,this.parametroGeneralUsuario,PaginaTipo.AUXILIAR,false,false,false,true);
				this.cuentacontableotrosBeanSwingJInternalFrame.setJInternalFrameParent(this);

				this.cuentacontableotrosBeanSwingJInternalFrame.getCuentaContableLogic().setConnexion(this.configuracionpunvenLogic.getConnexion());

				if(this.configuracionpunven.getid_cuenta_contable_otros()!=null) {
					this.cuentacontableotrosBeanSwingJInternalFrame.sTipoBusqueda="PorId";
					this.cuentacontableotrosBeanSwingJInternalFrame.setIdActual(this.configuracionpunven.getid_cuenta_contable_otros());
					this.cuentacontableotrosBeanSwingJInternalFrame.procesarBusqueda("PorId");
					this.cuentacontableotrosBeanSwingJInternalFrame.setsAccionBusqueda("PorId");
					this.cuentacontableotrosBeanSwingJInternalFrame.inicializarActualizarBindingTablaCuentaContable();
				}

				JInternalFrameBase jinternalFrame =this.cuentacontableotrosBeanSwingJInternalFrame;
				jinternalFrame.setAutoscrolls(true);
				//frame.setSize(screenSize.width-inset*7 , screenSize.height-inset*9);
				jinternalFrame.setVisible(true); 


				TitledBorder titledBorderConfiguracionPunVen=(TitledBorder)this.jScrollPanelDatosConfiguracionPunVen.getBorder();
				TitledBorder titledBordercuentacontableotros=(TitledBorder)this.cuentacontableotrosBeanSwingJInternalFrame.jScrollPanelDatosCuentaContable.getBorder();

				titledBordercuentacontableotros.setTitle(titledBorderConfiguracionPunVen.getTitle() + " -> Cuenta Contable");


				if(!Constantes.CON_VARIAS_VENTANAS) {
					MainJFrame.cerrarJInternalFramesExistentes(this.jDesktopPane,jinternalFrame);
				}

				this.jDesktopPane.add(jinternalFrame);

				jinternalFrame.setSelected(true);
			} else {
				throw new Exception("NO TIENE PERMISO PARA TRABAJAR CON ESTA INFORMACION");
			}

			if(Constantes.ISUSAEJBLOGICLAYER) {
				this.configuracionpunvenLogic.commitNewConnexionToDeep();
			}


		} catch(Exception e) {

			if(Constantes.ISUSAEJBLOGICLAYER) {
				this.configuracionpunvenLogic.rollbackNewConnexionToDeep();
			}

			FuncionesSwing.manageException(this, e,logger,ConfiguracionPunVenConstantesFunciones.CLASSNAME);

		} finally {
			if(Constantes.ISUSAEJBLOGICLAYER) {
				this.configuracionpunvenLogic.closeNewConnexionToDeep();
			}

		}
	}

	public void jButtonid_cuenta_contable_otrosConfiguracionPunVenBusquedaActionPerformed(java.awt.event.ActionEvent evt) throws Exception {
		try {

				if(Constantes.ISUSAEJBLOGICLAYER) {
					this.configuracionpunvenLogic.getNewConnexionToDeep("");
				}

				//TOCA TRAER NUEVAMENTE, YA QUE SE PIERDE REGISTRO ACTUAL
				int intSelectedRow = this.jTableDatosConfiguracionPunVen.getSelectedRow();

				if(intSelectedRow>-1) {
					this.setVariablesFormularioToObjetoActualConfiguracionPunVen(this.getconfiguracionpunven(),true);
					this.setVariablesFormularioToObjetoActualForeignKeysConfiguracionPunVen(this.configuracionpunven);
					//ARCHITECTURE
					/*
					if(Constantes.ISUSAEJBLOGICLAYER) {
						this.configuracionpunven =(ConfiguracionPunVen) this.configuracionpunvenLogic.getConfiguracionPunVens().toArray()[this.jTableDatosConfiguracionPunVen.convertRowIndexToModel(intSelectedRow)];
					} else if(Constantes.ISUSAEJBREMOTE || Constantes.ISUSAEJBHOME) {
						this.configuracionpunven =(ConfiguracionPunVen) this.configuracionpunvens.toArray()[this.jTableDatosConfiguracionPunVen.convertRowIndexToModel(intSelectedRow)];
					}
					*/
					//ARCHITECTURE

				} else {
					if(this.configuracionpunven==null) {
						this.configuracionpunven = new ConfiguracionPunVen();
					}

					this.setVariablesFormularioToObjetoActualConfiguracionPunVen(this.configuracionpunven,true);
					this.setVariablesFormularioToObjetoActualForeignKeysConfiguracionPunVen(this.configuracionpunven);
				}

				if(this.configuracionpunven.getid_cuenta_contable_otros()!=null) {

					this.sAccionBusqueda="Query";

					this.sFinalQueryGeneral=" where id_cuenta_contable_otros = "+this.configuracionpunven.getid_cuenta_contable_otros().toString()+" ";

					if(Constantes.ISDEVELOPING) {
						System.out.println(this.sFinalQueryGeneral);
					}

					this.procesarBusqueda(this.sAccionBusqueda);

					this.inicializarActualizarBindingConfiguracionPunVen(false);
				}

				if(Constantes.ISUSAEJBLOGICLAYER) {
					this.configuracionpunvenLogic.commitNewConnexionToDeep();
				}

			} catch(Exception e) {

				if(Constantes.ISUSAEJBLOGICLAYER) {
					this.configuracionpunvenLogic.rollbackNewConnexionToDeep();
				}

				FuncionesSwing.manageException(this, e,logger,ConfiguracionPunVenConstantesFunciones.CLASSNAME);

			} finally {
				if(Constantes.ISUSAEJBLOGICLAYER) {
					this.configuracionpunvenLogic.closeNewConnexionToDeep();
				}

			}
		}

	public void jButtonid_cliente_consumidor_finalConfiguracionPunVenActionPerformed(java.awt.event.ActionEvent evt) throws Exception {
		try {
			this.clienteconsumidorfinalBeanSwingJInternalFrame=new ClienteBeanSwingJInternalFrame(true,true,this.jDesktopPane,this.usuarioActual,this.resumenUsuarioActual,this.moduloActual,this.opcionActual,this.parametroGeneralSg,this.parametroGeneralUsuario,PaginaTipo.BUSQUEDA,false,false,false,true);
			this.clienteconsumidorfinalBeanSwingJInternalFrame.setJInternalFrameParent(this);
			this.clienteconsumidorfinalBeanSwingJInternalFrame.sTipoBusqueda="ClienteConsumidorFinal";

			if(!this.sFinalQueryGeneral_clienteconsumidorfinal.equals("")) {
				this.clienteconsumidorfinalBeanSwingJInternalFrame.setsFinalQueryGeneral(this.sFinalQueryGeneral_clienteconsumidorfinal);
				this.clienteconsumidorfinalBeanSwingJInternalFrame.sAccionBusqueda="Query";


				this.clienteconsumidorfinalBeanSwingJInternalFrame.procesarBusqueda(this.clienteconsumidorfinalBeanSwingJInternalFrame.sAccionBusqueda);
				this.clienteconsumidorfinalBeanSwingJInternalFrame.inicializarActualizarBindingCliente(false);
			}

			if(!this.sFinalQueryComboClienteConsumidorFinal.equals("") && false) {
			}


			JInternalFrameBase jinternalFrame =this.clienteconsumidorfinalBeanSwingJInternalFrame;
			jinternalFrame.setAutoscrolls(true);
			//frame.setSize(screenSize.width-inset*7 , screenSize.height-inset*9);
			jinternalFrame.setVisible(true); 


			TitledBorder titledBorderConfiguracionPunVen=null;
			TitledBorder titledBorderclienteconsumidorfinal=null;

			if(!this.jScrollPanelDatosConfiguracionPunVen.getBorder().getClass().equals(EmptyBorder.class)) {
				titledBorderConfiguracionPunVen=(TitledBorder)this.jScrollPanelDatosConfiguracionPunVen.getBorder();
				titledBorderclienteconsumidorfinal=(TitledBorder)this.clienteconsumidorfinalBeanSwingJInternalFrame.jScrollPanelDatosCliente.getBorder();

				titledBorderclienteconsumidorfinal.setTitle(titledBorderConfiguracionPunVen.getTitle() + " -> Cliente");
			}

			if(!Constantes.CON_VARIAS_VENTANAS) {
				MainJFrame.cerrarJInternalFramesExistentes(this.jDesktopPane,jinternalFrame);
			}

			this.jDesktopPane.add(jinternalFrame);

			jinternalFrame.setSelected(true);

		} catch(Exception e) {
			FuncionesSwing.manageException(this, e,logger,ConfiguracionPunVenConstantesFunciones.CLASSNAME);
		}
	}

	public void jButtonid_cliente_consumidor_finalConfiguracionPunVenUpdateActionPerformed(java.awt.event.ActionEvent evt) throws Exception {
		try {

			if(Constantes.ISUSAEJBLOGICLAYER) {
				this.configuracionpunvenLogic.getNewConnexionToDeep("");
			}

			Boolean idTienePermisoclienteconsumidorfinal=true;

			idTienePermisoclienteconsumidorfinal=this.tienePermisosUsuarioEnPaginaWebConfiguracionPunVen(ClienteConstantesFunciones.CLASSNAME);

			if(idTienePermisoclienteconsumidorfinal) {
				//TOCA TRAER NUEVAMENTE, YA QUE SE PIERDE REGISTRO ACTUAL
				int intSelectedRow = this.jTableDatosConfiguracionPunVen.getSelectedRow();

				if(intSelectedRow<0 && this.jTableDatosConfiguracionPunVen.getRowCount()>0) {
					intSelectedRow =0;
					this.jTableDatosConfiguracionPunVen.setRowSelectionInterval(intSelectedRow,intSelectedRow);
				}
				//ARCHITECTURE
				/*
				if(Constantes.ISUSAEJBLOGICLAYER) {
					this.configuracionpunven =(ConfiguracionPunVen) this.configuracionpunvenLogic.getConfiguracionPunVens().toArray()[this.jTableDatosConfiguracionPunVen.convertRowIndexToModel(intSelectedRow)];
				} else if(Constantes.ISUSAEJBREMOTE || Constantes.ISUSAEJBHOME) {
					this.configuracionpunven =(ConfiguracionPunVen) this.configuracionpunvens.toArray()[this.jTableDatosConfiguracionPunVen.convertRowIndexToModel(intSelectedRow)];
				}
				*/
				//ARCHITECTURE

				this.setVariablesFormularioToObjetoActualConfiguracionPunVen(this.getconfiguracionpunven(),true);
				this.setVariablesFormularioToObjetoActualForeignKeysConfiguracionPunVen(this.configuracionpunven);

				this.clienteconsumidorfinalBeanSwingJInternalFrame=new ClienteBeanSwingJInternalFrame(true,true,this.jDesktopPane,this.usuarioActual,this.resumenUsuarioActual,this.moduloActual,this.opcionActual,this.parametroGeneralSg,this.parametroGeneralUsuario,PaginaTipo.AUXILIAR,false,false,false,true);
				this.clienteconsumidorfinalBeanSwingJInternalFrame.setJInternalFrameParent(this);

				this.clienteconsumidorfinalBeanSwingJInternalFrame.getClienteLogic().setConnexion(this.configuracionpunvenLogic.getConnexion());

				if(this.configuracionpunven.getid_cliente_consumidor_final()!=null) {
					this.clienteconsumidorfinalBeanSwingJInternalFrame.sTipoBusqueda="PorId";
					this.clienteconsumidorfinalBeanSwingJInternalFrame.setIdActual(this.configuracionpunven.getid_cliente_consumidor_final());
					this.clienteconsumidorfinalBeanSwingJInternalFrame.procesarBusqueda("PorId");
					this.clienteconsumidorfinalBeanSwingJInternalFrame.setsAccionBusqueda("PorId");
					this.clienteconsumidorfinalBeanSwingJInternalFrame.inicializarActualizarBindingTablaCliente();
				}

				JInternalFrameBase jinternalFrame =this.clienteconsumidorfinalBeanSwingJInternalFrame;
				jinternalFrame.setAutoscrolls(true);
				//frame.setSize(screenSize.width-inset*7 , screenSize.height-inset*9);
				jinternalFrame.setVisible(true); 


				TitledBorder titledBorderConfiguracionPunVen=(TitledBorder)this.jScrollPanelDatosConfiguracionPunVen.getBorder();
				TitledBorder titledBorderclienteconsumidorfinal=(TitledBorder)this.clienteconsumidorfinalBeanSwingJInternalFrame.jScrollPanelDatosCliente.getBorder();

				titledBorderclienteconsumidorfinal.setTitle(titledBorderConfiguracionPunVen.getTitle() + " -> Cliente");


				if(!Constantes.CON_VARIAS_VENTANAS) {
					MainJFrame.cerrarJInternalFramesExistentes(this.jDesktopPane,jinternalFrame);
				}

				this.jDesktopPane.add(jinternalFrame);

				jinternalFrame.setSelected(true);
			} else {
				throw new Exception("NO TIENE PERMISO PARA TRABAJAR CON ESTA INFORMACION");
			}

			if(Constantes.ISUSAEJBLOGICLAYER) {
				this.configuracionpunvenLogic.commitNewConnexionToDeep();
			}


		} catch(Exception e) {

			if(Constantes.ISUSAEJBLOGICLAYER) {
				this.configuracionpunvenLogic.rollbackNewConnexionToDeep();
			}

			FuncionesSwing.manageException(this, e,logger,ConfiguracionPunVenConstantesFunciones.CLASSNAME);

		} finally {
			if(Constantes.ISUSAEJBLOGICLAYER) {
				this.configuracionpunvenLogic.closeNewConnexionToDeep();
			}

		}
	}

	public void jButtonid_cliente_consumidor_finalConfiguracionPunVenBusquedaActionPerformed(java.awt.event.ActionEvent evt) throws Exception {
		try {

				if(Constantes.ISUSAEJBLOGICLAYER) {
					this.configuracionpunvenLogic.getNewConnexionToDeep("");
				}

				//TOCA TRAER NUEVAMENTE, YA QUE SE PIERDE REGISTRO ACTUAL
				int intSelectedRow = this.jTableDatosConfiguracionPunVen.getSelectedRow();

				if(intSelectedRow>-1) {
					this.setVariablesFormularioToObjetoActualConfiguracionPunVen(this.getconfiguracionpunven(),true);
					this.setVariablesFormularioToObjetoActualForeignKeysConfiguracionPunVen(this.configuracionpunven);
					//ARCHITECTURE
					/*
					if(Constantes.ISUSAEJBLOGICLAYER) {
						this.configuracionpunven =(ConfiguracionPunVen) this.configuracionpunvenLogic.getConfiguracionPunVens().toArray()[this.jTableDatosConfiguracionPunVen.convertRowIndexToModel(intSelectedRow)];
					} else if(Constantes.ISUSAEJBREMOTE || Constantes.ISUSAEJBHOME) {
						this.configuracionpunven =(ConfiguracionPunVen) this.configuracionpunvens.toArray()[this.jTableDatosConfiguracionPunVen.convertRowIndexToModel(intSelectedRow)];
					}
					*/
					//ARCHITECTURE

				} else {
					if(this.configuracionpunven==null) {
						this.configuracionpunven = new ConfiguracionPunVen();
					}

					this.setVariablesFormularioToObjetoActualConfiguracionPunVen(this.configuracionpunven,true);
					this.setVariablesFormularioToObjetoActualForeignKeysConfiguracionPunVen(this.configuracionpunven);
				}

				if(this.configuracionpunven.getid_cliente_consumidor_final()!=null) {

					this.sAccionBusqueda="Query";

					this.sFinalQueryGeneral=" where id_cliente_consumidor_final = "+this.configuracionpunven.getid_cliente_consumidor_final().toString()+" ";

					if(Constantes.ISDEVELOPING) {
						System.out.println(this.sFinalQueryGeneral);
					}

					this.procesarBusqueda(this.sAccionBusqueda);

					this.inicializarActualizarBindingConfiguracionPunVen(false);
				}

				if(Constantes.ISUSAEJBLOGICLAYER) {
					this.configuracionpunvenLogic.commitNewConnexionToDeep();
				}

			} catch(Exception e) {

				if(Constantes.ISUSAEJBLOGICLAYER) {
					this.configuracionpunvenLogic.rollbackNewConnexionToDeep();
				}

				FuncionesSwing.manageException(this, e,logger,ConfiguracionPunVenConstantesFunciones.CLASSNAME);

			} finally {
				if(Constantes.ISUSAEJBLOGICLAYER) {
					this.configuracionpunvenLogic.closeNewConnexionToDeep();
				}

			}
		}

	public void jButtonid_tipo_documento_facturaConfiguracionPunVenUpdateActionPerformed(java.awt.event.ActionEvent evt) throws Exception {
		try {

			if(Constantes.ISUSAEJBLOGICLAYER) {
				this.configuracionpunvenLogic.getNewConnexionToDeep("");
			}

			Boolean idTienePermisotipodocumentofactura=true;

			idTienePermisotipodocumentofactura=this.tienePermisosUsuarioEnPaginaWebConfiguracionPunVen(TipoDocumentoConstantesFunciones.CLASSNAME);

			if(idTienePermisotipodocumentofactura) {
				//TOCA TRAER NUEVAMENTE, YA QUE SE PIERDE REGISTRO ACTUAL
				int intSelectedRow = this.jTableDatosConfiguracionPunVen.getSelectedRow();

				if(intSelectedRow<0 && this.jTableDatosConfiguracionPunVen.getRowCount()>0) {
					intSelectedRow =0;
					this.jTableDatosConfiguracionPunVen.setRowSelectionInterval(intSelectedRow,intSelectedRow);
				}
				//ARCHITECTURE
				/*
				if(Constantes.ISUSAEJBLOGICLAYER) {
					this.configuracionpunven =(ConfiguracionPunVen) this.configuracionpunvenLogic.getConfiguracionPunVens().toArray()[this.jTableDatosConfiguracionPunVen.convertRowIndexToModel(intSelectedRow)];
				} else if(Constantes.ISUSAEJBREMOTE || Constantes.ISUSAEJBHOME) {
					this.configuracionpunven =(ConfiguracionPunVen) this.configuracionpunvens.toArray()[this.jTableDatosConfiguracionPunVen.convertRowIndexToModel(intSelectedRow)];
				}
				*/
				//ARCHITECTURE

				this.setVariablesFormularioToObjetoActualConfiguracionPunVen(this.getconfiguracionpunven(),true);
				this.setVariablesFormularioToObjetoActualForeignKeysConfiguracionPunVen(this.configuracionpunven);

				this.tipodocumentofacturaBeanSwingJInternalFrame=new TipoDocumentoBeanSwingJInternalFrame(true,true,this.jDesktopPane,this.usuarioActual,this.resumenUsuarioActual,this.moduloActual,this.opcionActual,this.parametroGeneralSg,this.parametroGeneralUsuario,PaginaTipo.AUXILIAR,false,false,false,true);
				this.tipodocumentofacturaBeanSwingJInternalFrame.setJInternalFrameParent(this);

				this.tipodocumentofacturaBeanSwingJInternalFrame.getTipoDocumentoLogic().setConnexion(this.configuracionpunvenLogic.getConnexion());

				if(this.configuracionpunven.getid_tipo_documento_factura()!=null) {
					this.tipodocumentofacturaBeanSwingJInternalFrame.sTipoBusqueda="PorId";
					this.tipodocumentofacturaBeanSwingJInternalFrame.setIdActual(this.configuracionpunven.getid_tipo_documento_factura());
					this.tipodocumentofacturaBeanSwingJInternalFrame.procesarBusqueda("PorId");
					this.tipodocumentofacturaBeanSwingJInternalFrame.setsAccionBusqueda("PorId");
					this.tipodocumentofacturaBeanSwingJInternalFrame.inicializarActualizarBindingTablaTipoDocumento();
				}

				JInternalFrameBase jinternalFrame =this.tipodocumentofacturaBeanSwingJInternalFrame;
				jinternalFrame.setAutoscrolls(true);
				//frame.setSize(screenSize.width-inset*7 , screenSize.height-inset*9);
				jinternalFrame.setVisible(true); 


				TitledBorder titledBorderConfiguracionPunVen=(TitledBorder)this.jScrollPanelDatosConfiguracionPunVen.getBorder();
				TitledBorder titledBordertipodocumentofactura=(TitledBorder)this.tipodocumentofacturaBeanSwingJInternalFrame.jScrollPanelDatosTipoDocumento.getBorder();

				titledBordertipodocumentofactura.setTitle(titledBorderConfiguracionPunVen.getTitle() + " -> Tipo Documento");


				if(!Constantes.CON_VARIAS_VENTANAS) {
					MainJFrame.cerrarJInternalFramesExistentes(this.jDesktopPane,jinternalFrame);
				}

				this.jDesktopPane.add(jinternalFrame);

				jinternalFrame.setSelected(true);
			} else {
				throw new Exception("NO TIENE PERMISO PARA TRABAJAR CON ESTA INFORMACION");
			}

			if(Constantes.ISUSAEJBLOGICLAYER) {
				this.configuracionpunvenLogic.commitNewConnexionToDeep();
			}


		} catch(Exception e) {

			if(Constantes.ISUSAEJBLOGICLAYER) {
				this.configuracionpunvenLogic.rollbackNewConnexionToDeep();
			}

			FuncionesSwing.manageException(this, e,logger,ConfiguracionPunVenConstantesFunciones.CLASSNAME);

		} finally {
			if(Constantes.ISUSAEJBLOGICLAYER) {
				this.configuracionpunvenLogic.closeNewConnexionToDeep();
			}

		}
	}

	public void jButtonid_tipo_documento_facturaConfiguracionPunVenBusquedaActionPerformed(java.awt.event.ActionEvent evt) throws Exception {
		try {

				if(Constantes.ISUSAEJBLOGICLAYER) {
					this.configuracionpunvenLogic.getNewConnexionToDeep("");
				}

				//TOCA TRAER NUEVAMENTE, YA QUE SE PIERDE REGISTRO ACTUAL
				int intSelectedRow = this.jTableDatosConfiguracionPunVen.getSelectedRow();

				if(intSelectedRow>-1) {
					this.setVariablesFormularioToObjetoActualConfiguracionPunVen(this.getconfiguracionpunven(),true);
					this.setVariablesFormularioToObjetoActualForeignKeysConfiguracionPunVen(this.configuracionpunven);
					//ARCHITECTURE
					/*
					if(Constantes.ISUSAEJBLOGICLAYER) {
						this.configuracionpunven =(ConfiguracionPunVen) this.configuracionpunvenLogic.getConfiguracionPunVens().toArray()[this.jTableDatosConfiguracionPunVen.convertRowIndexToModel(intSelectedRow)];
					} else if(Constantes.ISUSAEJBREMOTE || Constantes.ISUSAEJBHOME) {
						this.configuracionpunven =(ConfiguracionPunVen) this.configuracionpunvens.toArray()[this.jTableDatosConfiguracionPunVen.convertRowIndexToModel(intSelectedRow)];
					}
					*/
					//ARCHITECTURE

				} else {
					if(this.configuracionpunven==null) {
						this.configuracionpunven = new ConfiguracionPunVen();
					}

					this.setVariablesFormularioToObjetoActualConfiguracionPunVen(this.configuracionpunven,true);
					this.setVariablesFormularioToObjetoActualForeignKeysConfiguracionPunVen(this.configuracionpunven);
				}

				if(this.configuracionpunven.getid_tipo_documento_factura()!=null) {

					this.sAccionBusqueda="Query";

					this.sFinalQueryGeneral=" where id_tipo_documento_factura = "+this.configuracionpunven.getid_tipo_documento_factura().toString()+" ";

					if(Constantes.ISDEVELOPING) {
						System.out.println(this.sFinalQueryGeneral);
					}

					this.procesarBusqueda(this.sAccionBusqueda);

					this.inicializarActualizarBindingConfiguracionPunVen(false);
				}

				if(Constantes.ISUSAEJBLOGICLAYER) {
					this.configuracionpunvenLogic.commitNewConnexionToDeep();
				}

			} catch(Exception e) {

				if(Constantes.ISUSAEJBLOGICLAYER) {
					this.configuracionpunvenLogic.rollbackNewConnexionToDeep();
				}

				FuncionesSwing.manageException(this, e,logger,ConfiguracionPunVenConstantesFunciones.CLASSNAME);

			} finally {
				if(Constantes.ISUSAEJBLOGICLAYER) {
					this.configuracionpunvenLogic.closeNewConnexionToDeep();
				}

			}
		}

	public void jButtonid_tipo_documento_nota_ventaConfiguracionPunVenUpdateActionPerformed(java.awt.event.ActionEvent evt) throws Exception {
		try {

			if(Constantes.ISUSAEJBLOGICLAYER) {
				this.configuracionpunvenLogic.getNewConnexionToDeep("");
			}

			Boolean idTienePermisotipodocumentonotaventa=true;

			idTienePermisotipodocumentonotaventa=this.tienePermisosUsuarioEnPaginaWebConfiguracionPunVen(TipoDocumentoConstantesFunciones.CLASSNAME);

			if(idTienePermisotipodocumentonotaventa) {
				//TOCA TRAER NUEVAMENTE, YA QUE SE PIERDE REGISTRO ACTUAL
				int intSelectedRow = this.jTableDatosConfiguracionPunVen.getSelectedRow();

				if(intSelectedRow<0 && this.jTableDatosConfiguracionPunVen.getRowCount()>0) {
					intSelectedRow =0;
					this.jTableDatosConfiguracionPunVen.setRowSelectionInterval(intSelectedRow,intSelectedRow);
				}
				//ARCHITECTURE
				/*
				if(Constantes.ISUSAEJBLOGICLAYER) {
					this.configuracionpunven =(ConfiguracionPunVen) this.configuracionpunvenLogic.getConfiguracionPunVens().toArray()[this.jTableDatosConfiguracionPunVen.convertRowIndexToModel(intSelectedRow)];
				} else if(Constantes.ISUSAEJBREMOTE || Constantes.ISUSAEJBHOME) {
					this.configuracionpunven =(ConfiguracionPunVen) this.configuracionpunvens.toArray()[this.jTableDatosConfiguracionPunVen.convertRowIndexToModel(intSelectedRow)];
				}
				*/
				//ARCHITECTURE

				this.setVariablesFormularioToObjetoActualConfiguracionPunVen(this.getconfiguracionpunven(),true);
				this.setVariablesFormularioToObjetoActualForeignKeysConfiguracionPunVen(this.configuracionpunven);

				this.tipodocumentonotaventaBeanSwingJInternalFrame=new TipoDocumentoBeanSwingJInternalFrame(true,true,this.jDesktopPane,this.usuarioActual,this.resumenUsuarioActual,this.moduloActual,this.opcionActual,this.parametroGeneralSg,this.parametroGeneralUsuario,PaginaTipo.AUXILIAR,false,false,false,true);
				this.tipodocumentonotaventaBeanSwingJInternalFrame.setJInternalFrameParent(this);

				this.tipodocumentonotaventaBeanSwingJInternalFrame.getTipoDocumentoLogic().setConnexion(this.configuracionpunvenLogic.getConnexion());

				if(this.configuracionpunven.getid_tipo_documento_nota_venta()!=null) {
					this.tipodocumentonotaventaBeanSwingJInternalFrame.sTipoBusqueda="PorId";
					this.tipodocumentonotaventaBeanSwingJInternalFrame.setIdActual(this.configuracionpunven.getid_tipo_documento_nota_venta());
					this.tipodocumentonotaventaBeanSwingJInternalFrame.procesarBusqueda("PorId");
					this.tipodocumentonotaventaBeanSwingJInternalFrame.setsAccionBusqueda("PorId");
					this.tipodocumentonotaventaBeanSwingJInternalFrame.inicializarActualizarBindingTablaTipoDocumento();
				}

				JInternalFrameBase jinternalFrame =this.tipodocumentonotaventaBeanSwingJInternalFrame;
				jinternalFrame.setAutoscrolls(true);
				//frame.setSize(screenSize.width-inset*7 , screenSize.height-inset*9);
				jinternalFrame.setVisible(true); 


				TitledBorder titledBorderConfiguracionPunVen=(TitledBorder)this.jScrollPanelDatosConfiguracionPunVen.getBorder();
				TitledBorder titledBordertipodocumentonotaventa=(TitledBorder)this.tipodocumentonotaventaBeanSwingJInternalFrame.jScrollPanelDatosTipoDocumento.getBorder();

				titledBordertipodocumentonotaventa.setTitle(titledBorderConfiguracionPunVen.getTitle() + " -> Tipo Documento");


				if(!Constantes.CON_VARIAS_VENTANAS) {
					MainJFrame.cerrarJInternalFramesExistentes(this.jDesktopPane,jinternalFrame);
				}

				this.jDesktopPane.add(jinternalFrame);

				jinternalFrame.setSelected(true);
			} else {
				throw new Exception("NO TIENE PERMISO PARA TRABAJAR CON ESTA INFORMACION");
			}

			if(Constantes.ISUSAEJBLOGICLAYER) {
				this.configuracionpunvenLogic.commitNewConnexionToDeep();
			}


		} catch(Exception e) {

			if(Constantes.ISUSAEJBLOGICLAYER) {
				this.configuracionpunvenLogic.rollbackNewConnexionToDeep();
			}

			FuncionesSwing.manageException(this, e,logger,ConfiguracionPunVenConstantesFunciones.CLASSNAME);

		} finally {
			if(Constantes.ISUSAEJBLOGICLAYER) {
				this.configuracionpunvenLogic.closeNewConnexionToDeep();
			}

		}
	}

	public void jButtonid_tipo_documento_nota_ventaConfiguracionPunVenBusquedaActionPerformed(java.awt.event.ActionEvent evt) throws Exception {
		try {

				if(Constantes.ISUSAEJBLOGICLAYER) {
					this.configuracionpunvenLogic.getNewConnexionToDeep("");
				}

				//TOCA TRAER NUEVAMENTE, YA QUE SE PIERDE REGISTRO ACTUAL
				int intSelectedRow = this.jTableDatosConfiguracionPunVen.getSelectedRow();

				if(intSelectedRow>-1) {
					this.setVariablesFormularioToObjetoActualConfiguracionPunVen(this.getconfiguracionpunven(),true);
					this.setVariablesFormularioToObjetoActualForeignKeysConfiguracionPunVen(this.configuracionpunven);
					//ARCHITECTURE
					/*
					if(Constantes.ISUSAEJBLOGICLAYER) {
						this.configuracionpunven =(ConfiguracionPunVen) this.configuracionpunvenLogic.getConfiguracionPunVens().toArray()[this.jTableDatosConfiguracionPunVen.convertRowIndexToModel(intSelectedRow)];
					} else if(Constantes.ISUSAEJBREMOTE || Constantes.ISUSAEJBHOME) {
						this.configuracionpunven =(ConfiguracionPunVen) this.configuracionpunvens.toArray()[this.jTableDatosConfiguracionPunVen.convertRowIndexToModel(intSelectedRow)];
					}
					*/
					//ARCHITECTURE

				} else {
					if(this.configuracionpunven==null) {
						this.configuracionpunven = new ConfiguracionPunVen();
					}

					this.setVariablesFormularioToObjetoActualConfiguracionPunVen(this.configuracionpunven,true);
					this.setVariablesFormularioToObjetoActualForeignKeysConfiguracionPunVen(this.configuracionpunven);
				}

				if(this.configuracionpunven.getid_tipo_documento_nota_venta()!=null) {

					this.sAccionBusqueda="Query";

					this.sFinalQueryGeneral=" where id_tipo_documento_nota_venta = "+this.configuracionpunven.getid_tipo_documento_nota_venta().toString()+" ";

					if(Constantes.ISDEVELOPING) {
						System.out.println(this.sFinalQueryGeneral);
					}

					this.procesarBusqueda(this.sAccionBusqueda);

					this.inicializarActualizarBindingConfiguracionPunVen(false);
				}

				if(Constantes.ISUSAEJBLOGICLAYER) {
					this.configuracionpunvenLogic.commitNewConnexionToDeep();
				}

			} catch(Exception e) {

				if(Constantes.ISUSAEJBLOGICLAYER) {
					this.configuracionpunvenLogic.rollbackNewConnexionToDeep();
				}

				FuncionesSwing.manageException(this, e,logger,ConfiguracionPunVenConstantesFunciones.CLASSNAME);

			} finally {
				if(Constantes.ISUSAEJBLOGICLAYER) {
					this.configuracionpunvenLogic.closeNewConnexionToDeep();
				}

			}
		}

	public void jButtonid_tipo_documento_nota_creditoConfiguracionPunVenUpdateActionPerformed(java.awt.event.ActionEvent evt) throws Exception {
		try {

			if(Constantes.ISUSAEJBLOGICLAYER) {
				this.configuracionpunvenLogic.getNewConnexionToDeep("");
			}

			Boolean idTienePermisotipodocumentonotacredito=true;

			idTienePermisotipodocumentonotacredito=this.tienePermisosUsuarioEnPaginaWebConfiguracionPunVen(TipoDocumentoConstantesFunciones.CLASSNAME);

			if(idTienePermisotipodocumentonotacredito) {
				//TOCA TRAER NUEVAMENTE, YA QUE SE PIERDE REGISTRO ACTUAL
				int intSelectedRow = this.jTableDatosConfiguracionPunVen.getSelectedRow();

				if(intSelectedRow<0 && this.jTableDatosConfiguracionPunVen.getRowCount()>0) {
					intSelectedRow =0;
					this.jTableDatosConfiguracionPunVen.setRowSelectionInterval(intSelectedRow,intSelectedRow);
				}
				//ARCHITECTURE
				/*
				if(Constantes.ISUSAEJBLOGICLAYER) {
					this.configuracionpunven =(ConfiguracionPunVen) this.configuracionpunvenLogic.getConfiguracionPunVens().toArray()[this.jTableDatosConfiguracionPunVen.convertRowIndexToModel(intSelectedRow)];
				} else if(Constantes.ISUSAEJBREMOTE || Constantes.ISUSAEJBHOME) {
					this.configuracionpunven =(ConfiguracionPunVen) this.configuracionpunvens.toArray()[this.jTableDatosConfiguracionPunVen.convertRowIndexToModel(intSelectedRow)];
				}
				*/
				//ARCHITECTURE

				this.setVariablesFormularioToObjetoActualConfiguracionPunVen(this.getconfiguracionpunven(),true);
				this.setVariablesFormularioToObjetoActualForeignKeysConfiguracionPunVen(this.configuracionpunven);

				this.tipodocumentonotacreditoBeanSwingJInternalFrame=new TipoDocumentoBeanSwingJInternalFrame(true,true,this.jDesktopPane,this.usuarioActual,this.resumenUsuarioActual,this.moduloActual,this.opcionActual,this.parametroGeneralSg,this.parametroGeneralUsuario,PaginaTipo.AUXILIAR,false,false,false,true);
				this.tipodocumentonotacreditoBeanSwingJInternalFrame.setJInternalFrameParent(this);

				this.tipodocumentonotacreditoBeanSwingJInternalFrame.getTipoDocumentoLogic().setConnexion(this.configuracionpunvenLogic.getConnexion());

				if(this.configuracionpunven.getid_tipo_documento_nota_credito()!=null) {
					this.tipodocumentonotacreditoBeanSwingJInternalFrame.sTipoBusqueda="PorId";
					this.tipodocumentonotacreditoBeanSwingJInternalFrame.setIdActual(this.configuracionpunven.getid_tipo_documento_nota_credito());
					this.tipodocumentonotacreditoBeanSwingJInternalFrame.procesarBusqueda("PorId");
					this.tipodocumentonotacreditoBeanSwingJInternalFrame.setsAccionBusqueda("PorId");
					this.tipodocumentonotacreditoBeanSwingJInternalFrame.inicializarActualizarBindingTablaTipoDocumento();
				}

				JInternalFrameBase jinternalFrame =this.tipodocumentonotacreditoBeanSwingJInternalFrame;
				jinternalFrame.setAutoscrolls(true);
				//frame.setSize(screenSize.width-inset*7 , screenSize.height-inset*9);
				jinternalFrame.setVisible(true); 


				TitledBorder titledBorderConfiguracionPunVen=(TitledBorder)this.jScrollPanelDatosConfiguracionPunVen.getBorder();
				TitledBorder titledBordertipodocumentonotacredito=(TitledBorder)this.tipodocumentonotacreditoBeanSwingJInternalFrame.jScrollPanelDatosTipoDocumento.getBorder();

				titledBordertipodocumentonotacredito.setTitle(titledBorderConfiguracionPunVen.getTitle() + " -> Tipo Documento");


				if(!Constantes.CON_VARIAS_VENTANAS) {
					MainJFrame.cerrarJInternalFramesExistentes(this.jDesktopPane,jinternalFrame);
				}

				this.jDesktopPane.add(jinternalFrame);

				jinternalFrame.setSelected(true);
			} else {
				throw new Exception("NO TIENE PERMISO PARA TRABAJAR CON ESTA INFORMACION");
			}

			if(Constantes.ISUSAEJBLOGICLAYER) {
				this.configuracionpunvenLogic.commitNewConnexionToDeep();
			}


		} catch(Exception e) {

			if(Constantes.ISUSAEJBLOGICLAYER) {
				this.configuracionpunvenLogic.rollbackNewConnexionToDeep();
			}

			FuncionesSwing.manageException(this, e,logger,ConfiguracionPunVenConstantesFunciones.CLASSNAME);

		} finally {
			if(Constantes.ISUSAEJBLOGICLAYER) {
				this.configuracionpunvenLogic.closeNewConnexionToDeep();
			}

		}
	}

	public void jButtonid_tipo_documento_nota_creditoConfiguracionPunVenBusquedaActionPerformed(java.awt.event.ActionEvent evt) throws Exception {
		try {

				if(Constantes.ISUSAEJBLOGICLAYER) {
					this.configuracionpunvenLogic.getNewConnexionToDeep("");
				}

				//TOCA TRAER NUEVAMENTE, YA QUE SE PIERDE REGISTRO ACTUAL
				int intSelectedRow = this.jTableDatosConfiguracionPunVen.getSelectedRow();

				if(intSelectedRow>-1) {
					this.setVariablesFormularioToObjetoActualConfiguracionPunVen(this.getconfiguracionpunven(),true);
					this.setVariablesFormularioToObjetoActualForeignKeysConfiguracionPunVen(this.configuracionpunven);
					//ARCHITECTURE
					/*
					if(Constantes.ISUSAEJBLOGICLAYER) {
						this.configuracionpunven =(ConfiguracionPunVen) this.configuracionpunvenLogic.getConfiguracionPunVens().toArray()[this.jTableDatosConfiguracionPunVen.convertRowIndexToModel(intSelectedRow)];
					} else if(Constantes.ISUSAEJBREMOTE || Constantes.ISUSAEJBHOME) {
						this.configuracionpunven =(ConfiguracionPunVen) this.configuracionpunvens.toArray()[this.jTableDatosConfiguracionPunVen.convertRowIndexToModel(intSelectedRow)];
					}
					*/
					//ARCHITECTURE

				} else {
					if(this.configuracionpunven==null) {
						this.configuracionpunven = new ConfiguracionPunVen();
					}

					this.setVariablesFormularioToObjetoActualConfiguracionPunVen(this.configuracionpunven,true);
					this.setVariablesFormularioToObjetoActualForeignKeysConfiguracionPunVen(this.configuracionpunven);
				}

				if(this.configuracionpunven.getid_tipo_documento_nota_credito()!=null) {

					this.sAccionBusqueda="Query";

					this.sFinalQueryGeneral=" where id_tipo_documento_nota_credito = "+this.configuracionpunven.getid_tipo_documento_nota_credito().toString()+" ";

					if(Constantes.ISDEVELOPING) {
						System.out.println(this.sFinalQueryGeneral);
					}

					this.procesarBusqueda(this.sAccionBusqueda);

					this.inicializarActualizarBindingConfiguracionPunVen(false);
				}

				if(Constantes.ISUSAEJBLOGICLAYER) {
					this.configuracionpunvenLogic.commitNewConnexionToDeep();
				}

			} catch(Exception e) {

				if(Constantes.ISUSAEJBLOGICLAYER) {
					this.configuracionpunvenLogic.rollbackNewConnexionToDeep();
				}

				FuncionesSwing.manageException(this, e,logger,ConfiguracionPunVenConstantesFunciones.CLASSNAME);

			} finally {
				if(Constantes.ISUSAEJBLOGICLAYER) {
					this.configuracionpunvenLogic.closeNewConnexionToDeep();
				}

			}
		}

	public void jButtonid_tipo_documento_tarjeta_creditoConfiguracionPunVenUpdateActionPerformed(java.awt.event.ActionEvent evt) throws Exception {
		try {

			if(Constantes.ISUSAEJBLOGICLAYER) {
				this.configuracionpunvenLogic.getNewConnexionToDeep("");
			}

			Boolean idTienePermisotipodocumentotarjetacredito=true;

			idTienePermisotipodocumentotarjetacredito=this.tienePermisosUsuarioEnPaginaWebConfiguracionPunVen(TipoDocumentoConstantesFunciones.CLASSNAME);

			if(idTienePermisotipodocumentotarjetacredito) {
				//TOCA TRAER NUEVAMENTE, YA QUE SE PIERDE REGISTRO ACTUAL
				int intSelectedRow = this.jTableDatosConfiguracionPunVen.getSelectedRow();

				if(intSelectedRow<0 && this.jTableDatosConfiguracionPunVen.getRowCount()>0) {
					intSelectedRow =0;
					this.jTableDatosConfiguracionPunVen.setRowSelectionInterval(intSelectedRow,intSelectedRow);
				}
				//ARCHITECTURE
				/*
				if(Constantes.ISUSAEJBLOGICLAYER) {
					this.configuracionpunven =(ConfiguracionPunVen) this.configuracionpunvenLogic.getConfiguracionPunVens().toArray()[this.jTableDatosConfiguracionPunVen.convertRowIndexToModel(intSelectedRow)];
				} else if(Constantes.ISUSAEJBREMOTE || Constantes.ISUSAEJBHOME) {
					this.configuracionpunven =(ConfiguracionPunVen) this.configuracionpunvens.toArray()[this.jTableDatosConfiguracionPunVen.convertRowIndexToModel(intSelectedRow)];
				}
				*/
				//ARCHITECTURE

				this.setVariablesFormularioToObjetoActualConfiguracionPunVen(this.getconfiguracionpunven(),true);
				this.setVariablesFormularioToObjetoActualForeignKeysConfiguracionPunVen(this.configuracionpunven);

				this.tipodocumentotarjetacreditoBeanSwingJInternalFrame=new TipoDocumentoBeanSwingJInternalFrame(true,true,this.jDesktopPane,this.usuarioActual,this.resumenUsuarioActual,this.moduloActual,this.opcionActual,this.parametroGeneralSg,this.parametroGeneralUsuario,PaginaTipo.AUXILIAR,false,false,false,true);
				this.tipodocumentotarjetacreditoBeanSwingJInternalFrame.setJInternalFrameParent(this);

				this.tipodocumentotarjetacreditoBeanSwingJInternalFrame.getTipoDocumentoLogic().setConnexion(this.configuracionpunvenLogic.getConnexion());

				if(this.configuracionpunven.getid_tipo_documento_tarjeta_credito()!=null) {
					this.tipodocumentotarjetacreditoBeanSwingJInternalFrame.sTipoBusqueda="PorId";
					this.tipodocumentotarjetacreditoBeanSwingJInternalFrame.setIdActual(this.configuracionpunven.getid_tipo_documento_tarjeta_credito());
					this.tipodocumentotarjetacreditoBeanSwingJInternalFrame.procesarBusqueda("PorId");
					this.tipodocumentotarjetacreditoBeanSwingJInternalFrame.setsAccionBusqueda("PorId");
					this.tipodocumentotarjetacreditoBeanSwingJInternalFrame.inicializarActualizarBindingTablaTipoDocumento();
				}

				JInternalFrameBase jinternalFrame =this.tipodocumentotarjetacreditoBeanSwingJInternalFrame;
				jinternalFrame.setAutoscrolls(true);
				//frame.setSize(screenSize.width-inset*7 , screenSize.height-inset*9);
				jinternalFrame.setVisible(true); 


				TitledBorder titledBorderConfiguracionPunVen=(TitledBorder)this.jScrollPanelDatosConfiguracionPunVen.getBorder();
				TitledBorder titledBordertipodocumentotarjetacredito=(TitledBorder)this.tipodocumentotarjetacreditoBeanSwingJInternalFrame.jScrollPanelDatosTipoDocumento.getBorder();

				titledBordertipodocumentotarjetacredito.setTitle(titledBorderConfiguracionPunVen.getTitle() + " -> Tipo Documento");


				if(!Constantes.CON_VARIAS_VENTANAS) {
					MainJFrame.cerrarJInternalFramesExistentes(this.jDesktopPane,jinternalFrame);
				}

				this.jDesktopPane.add(jinternalFrame);

				jinternalFrame.setSelected(true);
			} else {
				throw new Exception("NO TIENE PERMISO PARA TRABAJAR CON ESTA INFORMACION");
			}

			if(Constantes.ISUSAEJBLOGICLAYER) {
				this.configuracionpunvenLogic.commitNewConnexionToDeep();
			}


		} catch(Exception e) {

			if(Constantes.ISUSAEJBLOGICLAYER) {
				this.configuracionpunvenLogic.rollbackNewConnexionToDeep();
			}

			FuncionesSwing.manageException(this, e,logger,ConfiguracionPunVenConstantesFunciones.CLASSNAME);

		} finally {
			if(Constantes.ISUSAEJBLOGICLAYER) {
				this.configuracionpunvenLogic.closeNewConnexionToDeep();
			}

		}
	}

	public void jButtonid_tipo_documento_tarjeta_creditoConfiguracionPunVenBusquedaActionPerformed(java.awt.event.ActionEvent evt) throws Exception {
		try {

				if(Constantes.ISUSAEJBLOGICLAYER) {
					this.configuracionpunvenLogic.getNewConnexionToDeep("");
				}

				//TOCA TRAER NUEVAMENTE, YA QUE SE PIERDE REGISTRO ACTUAL
				int intSelectedRow = this.jTableDatosConfiguracionPunVen.getSelectedRow();

				if(intSelectedRow>-1) {
					this.setVariablesFormularioToObjetoActualConfiguracionPunVen(this.getconfiguracionpunven(),true);
					this.setVariablesFormularioToObjetoActualForeignKeysConfiguracionPunVen(this.configuracionpunven);
					//ARCHITECTURE
					/*
					if(Constantes.ISUSAEJBLOGICLAYER) {
						this.configuracionpunven =(ConfiguracionPunVen) this.configuracionpunvenLogic.getConfiguracionPunVens().toArray()[this.jTableDatosConfiguracionPunVen.convertRowIndexToModel(intSelectedRow)];
					} else if(Constantes.ISUSAEJBREMOTE || Constantes.ISUSAEJBHOME) {
						this.configuracionpunven =(ConfiguracionPunVen) this.configuracionpunvens.toArray()[this.jTableDatosConfiguracionPunVen.convertRowIndexToModel(intSelectedRow)];
					}
					*/
					//ARCHITECTURE

				} else {
					if(this.configuracionpunven==null) {
						this.configuracionpunven = new ConfiguracionPunVen();
					}

					this.setVariablesFormularioToObjetoActualConfiguracionPunVen(this.configuracionpunven,true);
					this.setVariablesFormularioToObjetoActualForeignKeysConfiguracionPunVen(this.configuracionpunven);
				}

				if(this.configuracionpunven.getid_tipo_documento_tarjeta_credito()!=null) {

					this.sAccionBusqueda="Query";

					this.sFinalQueryGeneral=" where id_tipo_documento_tarjeta_credito = "+this.configuracionpunven.getid_tipo_documento_tarjeta_credito().toString()+" ";

					if(Constantes.ISDEVELOPING) {
						System.out.println(this.sFinalQueryGeneral);
					}

					this.procesarBusqueda(this.sAccionBusqueda);

					this.inicializarActualizarBindingConfiguracionPunVen(false);
				}

				if(Constantes.ISUSAEJBLOGICLAYER) {
					this.configuracionpunvenLogic.commitNewConnexionToDeep();
				}

			} catch(Exception e) {

				if(Constantes.ISUSAEJBLOGICLAYER) {
					this.configuracionpunvenLogic.rollbackNewConnexionToDeep();
				}

				FuncionesSwing.manageException(this, e,logger,ConfiguracionPunVenConstantesFunciones.CLASSNAME);

			} finally {
				if(Constantes.ISUSAEJBLOGICLAYER) {
					this.configuracionpunvenLogic.closeNewConnexionToDeep();
				}

			}
		}

	public void jButtonid_formato_facturaConfiguracionPunVenUpdateActionPerformed(java.awt.event.ActionEvent evt) throws Exception {
		try {

			if(Constantes.ISUSAEJBLOGICLAYER) {
				this.configuracionpunvenLogic.getNewConnexionToDeep("");
			}

			Boolean idTienePermisoformatofactura=true;

			idTienePermisoformatofactura=this.tienePermisosUsuarioEnPaginaWebConfiguracionPunVen(FormatoConstantesFunciones.CLASSNAME);

			if(idTienePermisoformatofactura) {
				//TOCA TRAER NUEVAMENTE, YA QUE SE PIERDE REGISTRO ACTUAL
				int intSelectedRow = this.jTableDatosConfiguracionPunVen.getSelectedRow();

				if(intSelectedRow<0 && this.jTableDatosConfiguracionPunVen.getRowCount()>0) {
					intSelectedRow =0;
					this.jTableDatosConfiguracionPunVen.setRowSelectionInterval(intSelectedRow,intSelectedRow);
				}
				//ARCHITECTURE
				/*
				if(Constantes.ISUSAEJBLOGICLAYER) {
					this.configuracionpunven =(ConfiguracionPunVen) this.configuracionpunvenLogic.getConfiguracionPunVens().toArray()[this.jTableDatosConfiguracionPunVen.convertRowIndexToModel(intSelectedRow)];
				} else if(Constantes.ISUSAEJBREMOTE || Constantes.ISUSAEJBHOME) {
					this.configuracionpunven =(ConfiguracionPunVen) this.configuracionpunvens.toArray()[this.jTableDatosConfiguracionPunVen.convertRowIndexToModel(intSelectedRow)];
				}
				*/
				//ARCHITECTURE

				this.setVariablesFormularioToObjetoActualConfiguracionPunVen(this.getconfiguracionpunven(),true);
				this.setVariablesFormularioToObjetoActualForeignKeysConfiguracionPunVen(this.configuracionpunven);

				this.formatofacturaBeanSwingJInternalFrame=new FormatoBeanSwingJInternalFrame(true,true,this.jDesktopPane,this.usuarioActual,this.resumenUsuarioActual,this.moduloActual,this.opcionActual,this.parametroGeneralSg,this.parametroGeneralUsuario,PaginaTipo.AUXILIAR,false,false,false,true);
				this.formatofacturaBeanSwingJInternalFrame.setJInternalFrameParent(this);

				this.formatofacturaBeanSwingJInternalFrame.getFormatoLogic().setConnexion(this.configuracionpunvenLogic.getConnexion());

				if(this.configuracionpunven.getid_formato_factura()!=null) {
					this.formatofacturaBeanSwingJInternalFrame.sTipoBusqueda="PorId";
					this.formatofacturaBeanSwingJInternalFrame.setIdActual(this.configuracionpunven.getid_formato_factura());
					this.formatofacturaBeanSwingJInternalFrame.procesarBusqueda("PorId");
					this.formatofacturaBeanSwingJInternalFrame.setsAccionBusqueda("PorId");
					this.formatofacturaBeanSwingJInternalFrame.inicializarActualizarBindingTablaFormato();
				}

				JInternalFrameBase jinternalFrame =this.formatofacturaBeanSwingJInternalFrame;
				jinternalFrame.setAutoscrolls(true);
				//frame.setSize(screenSize.width-inset*7 , screenSize.height-inset*9);
				jinternalFrame.setVisible(true); 


				TitledBorder titledBorderConfiguracionPunVen=(TitledBorder)this.jScrollPanelDatosConfiguracionPunVen.getBorder();
				TitledBorder titledBorderformatofactura=(TitledBorder)this.formatofacturaBeanSwingJInternalFrame.jScrollPanelDatosFormato.getBorder();

				titledBorderformatofactura.setTitle(titledBorderConfiguracionPunVen.getTitle() + " -> Formato");


				if(!Constantes.CON_VARIAS_VENTANAS) {
					MainJFrame.cerrarJInternalFramesExistentes(this.jDesktopPane,jinternalFrame);
				}

				this.jDesktopPane.add(jinternalFrame);

				jinternalFrame.setSelected(true);
			} else {
				throw new Exception("NO TIENE PERMISO PARA TRABAJAR CON ESTA INFORMACION");
			}

			if(Constantes.ISUSAEJBLOGICLAYER) {
				this.configuracionpunvenLogic.commitNewConnexionToDeep();
			}


		} catch(Exception e) {

			if(Constantes.ISUSAEJBLOGICLAYER) {
				this.configuracionpunvenLogic.rollbackNewConnexionToDeep();
			}

			FuncionesSwing.manageException(this, e,logger,ConfiguracionPunVenConstantesFunciones.CLASSNAME);

		} finally {
			if(Constantes.ISUSAEJBLOGICLAYER) {
				this.configuracionpunvenLogic.closeNewConnexionToDeep();
			}

		}
	}

	public void jButtonid_formato_facturaConfiguracionPunVenBusquedaActionPerformed(java.awt.event.ActionEvent evt) throws Exception {
		try {

				if(Constantes.ISUSAEJBLOGICLAYER) {
					this.configuracionpunvenLogic.getNewConnexionToDeep("");
				}

				//TOCA TRAER NUEVAMENTE, YA QUE SE PIERDE REGISTRO ACTUAL
				int intSelectedRow = this.jTableDatosConfiguracionPunVen.getSelectedRow();

				if(intSelectedRow>-1) {
					this.setVariablesFormularioToObjetoActualConfiguracionPunVen(this.getconfiguracionpunven(),true);
					this.setVariablesFormularioToObjetoActualForeignKeysConfiguracionPunVen(this.configuracionpunven);
					//ARCHITECTURE
					/*
					if(Constantes.ISUSAEJBLOGICLAYER) {
						this.configuracionpunven =(ConfiguracionPunVen) this.configuracionpunvenLogic.getConfiguracionPunVens().toArray()[this.jTableDatosConfiguracionPunVen.convertRowIndexToModel(intSelectedRow)];
					} else if(Constantes.ISUSAEJBREMOTE || Constantes.ISUSAEJBHOME) {
						this.configuracionpunven =(ConfiguracionPunVen) this.configuracionpunvens.toArray()[this.jTableDatosConfiguracionPunVen.convertRowIndexToModel(intSelectedRow)];
					}
					*/
					//ARCHITECTURE

				} else {
					if(this.configuracionpunven==null) {
						this.configuracionpunven = new ConfiguracionPunVen();
					}

					this.setVariablesFormularioToObjetoActualConfiguracionPunVen(this.configuracionpunven,true);
					this.setVariablesFormularioToObjetoActualForeignKeysConfiguracionPunVen(this.configuracionpunven);
				}

				if(this.configuracionpunven.getid_formato_factura()!=null) {

					this.sAccionBusqueda="Query";

					this.sFinalQueryGeneral=" where id_formato_factura = "+this.configuracionpunven.getid_formato_factura().toString()+" ";

					if(Constantes.ISDEVELOPING) {
						System.out.println(this.sFinalQueryGeneral);
					}

					this.procesarBusqueda(this.sAccionBusqueda);

					this.inicializarActualizarBindingConfiguracionPunVen(false);
				}

				if(Constantes.ISUSAEJBLOGICLAYER) {
					this.configuracionpunvenLogic.commitNewConnexionToDeep();
				}

			} catch(Exception e) {

				if(Constantes.ISUSAEJBLOGICLAYER) {
					this.configuracionpunvenLogic.rollbackNewConnexionToDeep();
				}

				FuncionesSwing.manageException(this, e,logger,ConfiguracionPunVenConstantesFunciones.CLASSNAME);

			} finally {
				if(Constantes.ISUSAEJBLOGICLAYER) {
					this.configuracionpunvenLogic.closeNewConnexionToDeep();
				}

			}
		}

	public void jButtonid_formato_nota_ventaConfiguracionPunVenUpdateActionPerformed(java.awt.event.ActionEvent evt) throws Exception {
		try {

			if(Constantes.ISUSAEJBLOGICLAYER) {
				this.configuracionpunvenLogic.getNewConnexionToDeep("");
			}

			Boolean idTienePermisoformatonotaventa=true;

			idTienePermisoformatonotaventa=this.tienePermisosUsuarioEnPaginaWebConfiguracionPunVen(FormatoConstantesFunciones.CLASSNAME);

			if(idTienePermisoformatonotaventa) {
				//TOCA TRAER NUEVAMENTE, YA QUE SE PIERDE REGISTRO ACTUAL
				int intSelectedRow = this.jTableDatosConfiguracionPunVen.getSelectedRow();

				if(intSelectedRow<0 && this.jTableDatosConfiguracionPunVen.getRowCount()>0) {
					intSelectedRow =0;
					this.jTableDatosConfiguracionPunVen.setRowSelectionInterval(intSelectedRow,intSelectedRow);
				}
				//ARCHITECTURE
				/*
				if(Constantes.ISUSAEJBLOGICLAYER) {
					this.configuracionpunven =(ConfiguracionPunVen) this.configuracionpunvenLogic.getConfiguracionPunVens().toArray()[this.jTableDatosConfiguracionPunVen.convertRowIndexToModel(intSelectedRow)];
				} else if(Constantes.ISUSAEJBREMOTE || Constantes.ISUSAEJBHOME) {
					this.configuracionpunven =(ConfiguracionPunVen) this.configuracionpunvens.toArray()[this.jTableDatosConfiguracionPunVen.convertRowIndexToModel(intSelectedRow)];
				}
				*/
				//ARCHITECTURE

				this.setVariablesFormularioToObjetoActualConfiguracionPunVen(this.getconfiguracionpunven(),true);
				this.setVariablesFormularioToObjetoActualForeignKeysConfiguracionPunVen(this.configuracionpunven);

				this.formatonotaventaBeanSwingJInternalFrame=new FormatoBeanSwingJInternalFrame(true,true,this.jDesktopPane,this.usuarioActual,this.resumenUsuarioActual,this.moduloActual,this.opcionActual,this.parametroGeneralSg,this.parametroGeneralUsuario,PaginaTipo.AUXILIAR,false,false,false,true);
				this.formatonotaventaBeanSwingJInternalFrame.setJInternalFrameParent(this);

				this.formatonotaventaBeanSwingJInternalFrame.getFormatoLogic().setConnexion(this.configuracionpunvenLogic.getConnexion());

				if(this.configuracionpunven.getid_formato_nota_venta()!=null) {
					this.formatonotaventaBeanSwingJInternalFrame.sTipoBusqueda="PorId";
					this.formatonotaventaBeanSwingJInternalFrame.setIdActual(this.configuracionpunven.getid_formato_nota_venta());
					this.formatonotaventaBeanSwingJInternalFrame.procesarBusqueda("PorId");
					this.formatonotaventaBeanSwingJInternalFrame.setsAccionBusqueda("PorId");
					this.formatonotaventaBeanSwingJInternalFrame.inicializarActualizarBindingTablaFormato();
				}

				JInternalFrameBase jinternalFrame =this.formatonotaventaBeanSwingJInternalFrame;
				jinternalFrame.setAutoscrolls(true);
				//frame.setSize(screenSize.width-inset*7 , screenSize.height-inset*9);
				jinternalFrame.setVisible(true); 


				TitledBorder titledBorderConfiguracionPunVen=(TitledBorder)this.jScrollPanelDatosConfiguracionPunVen.getBorder();
				TitledBorder titledBorderformatonotaventa=(TitledBorder)this.formatonotaventaBeanSwingJInternalFrame.jScrollPanelDatosFormato.getBorder();

				titledBorderformatonotaventa.setTitle(titledBorderConfiguracionPunVen.getTitle() + " -> Formato");


				if(!Constantes.CON_VARIAS_VENTANAS) {
					MainJFrame.cerrarJInternalFramesExistentes(this.jDesktopPane,jinternalFrame);
				}

				this.jDesktopPane.add(jinternalFrame);

				jinternalFrame.setSelected(true);
			} else {
				throw new Exception("NO TIENE PERMISO PARA TRABAJAR CON ESTA INFORMACION");
			}

			if(Constantes.ISUSAEJBLOGICLAYER) {
				this.configuracionpunvenLogic.commitNewConnexionToDeep();
			}


		} catch(Exception e) {

			if(Constantes.ISUSAEJBLOGICLAYER) {
				this.configuracionpunvenLogic.rollbackNewConnexionToDeep();
			}

			FuncionesSwing.manageException(this, e,logger,ConfiguracionPunVenConstantesFunciones.CLASSNAME);

		} finally {
			if(Constantes.ISUSAEJBLOGICLAYER) {
				this.configuracionpunvenLogic.closeNewConnexionToDeep();
			}

		}
	}

	public void jButtonid_formato_nota_ventaConfiguracionPunVenBusquedaActionPerformed(java.awt.event.ActionEvent evt) throws Exception {
		try {

				if(Constantes.ISUSAEJBLOGICLAYER) {
					this.configuracionpunvenLogic.getNewConnexionToDeep("");
				}

				//TOCA TRAER NUEVAMENTE, YA QUE SE PIERDE REGISTRO ACTUAL
				int intSelectedRow = this.jTableDatosConfiguracionPunVen.getSelectedRow();

				if(intSelectedRow>-1) {
					this.setVariablesFormularioToObjetoActualConfiguracionPunVen(this.getconfiguracionpunven(),true);
					this.setVariablesFormularioToObjetoActualForeignKeysConfiguracionPunVen(this.configuracionpunven);
					//ARCHITECTURE
					/*
					if(Constantes.ISUSAEJBLOGICLAYER) {
						this.configuracionpunven =(ConfiguracionPunVen) this.configuracionpunvenLogic.getConfiguracionPunVens().toArray()[this.jTableDatosConfiguracionPunVen.convertRowIndexToModel(intSelectedRow)];
					} else if(Constantes.ISUSAEJBREMOTE || Constantes.ISUSAEJBHOME) {
						this.configuracionpunven =(ConfiguracionPunVen) this.configuracionpunvens.toArray()[this.jTableDatosConfiguracionPunVen.convertRowIndexToModel(intSelectedRow)];
					}
					*/
					//ARCHITECTURE

				} else {
					if(this.configuracionpunven==null) {
						this.configuracionpunven = new ConfiguracionPunVen();
					}

					this.setVariablesFormularioToObjetoActualConfiguracionPunVen(this.configuracionpunven,true);
					this.setVariablesFormularioToObjetoActualForeignKeysConfiguracionPunVen(this.configuracionpunven);
				}

				if(this.configuracionpunven.getid_formato_nota_venta()!=null) {

					this.sAccionBusqueda="Query";

					this.sFinalQueryGeneral=" where id_formato_nota_venta = "+this.configuracionpunven.getid_formato_nota_venta().toString()+" ";

					if(Constantes.ISDEVELOPING) {
						System.out.println(this.sFinalQueryGeneral);
					}

					this.procesarBusqueda(this.sAccionBusqueda);

					this.inicializarActualizarBindingConfiguracionPunVen(false);
				}

				if(Constantes.ISUSAEJBLOGICLAYER) {
					this.configuracionpunvenLogic.commitNewConnexionToDeep();
				}

			} catch(Exception e) {

				if(Constantes.ISUSAEJBLOGICLAYER) {
					this.configuracionpunvenLogic.rollbackNewConnexionToDeep();
				}

				FuncionesSwing.manageException(this, e,logger,ConfiguracionPunVenConstantesFunciones.CLASSNAME);

			} finally {
				if(Constantes.ISUSAEJBLOGICLAYER) {
					this.configuracionpunvenLogic.closeNewConnexionToDeep();
				}

			}
		}

	public void jButtonid_formato_nota_creditoConfiguracionPunVenUpdateActionPerformed(java.awt.event.ActionEvent evt) throws Exception {
		try {

			if(Constantes.ISUSAEJBLOGICLAYER) {
				this.configuracionpunvenLogic.getNewConnexionToDeep("");
			}

			Boolean idTienePermisoformatonotacredito=true;

			idTienePermisoformatonotacredito=this.tienePermisosUsuarioEnPaginaWebConfiguracionPunVen(FormatoConstantesFunciones.CLASSNAME);

			if(idTienePermisoformatonotacredito) {
				//TOCA TRAER NUEVAMENTE, YA QUE SE PIERDE REGISTRO ACTUAL
				int intSelectedRow = this.jTableDatosConfiguracionPunVen.getSelectedRow();

				if(intSelectedRow<0 && this.jTableDatosConfiguracionPunVen.getRowCount()>0) {
					intSelectedRow =0;
					this.jTableDatosConfiguracionPunVen.setRowSelectionInterval(intSelectedRow,intSelectedRow);
				}
				//ARCHITECTURE
				/*
				if(Constantes.ISUSAEJBLOGICLAYER) {
					this.configuracionpunven =(ConfiguracionPunVen) this.configuracionpunvenLogic.getConfiguracionPunVens().toArray()[this.jTableDatosConfiguracionPunVen.convertRowIndexToModel(intSelectedRow)];
				} else if(Constantes.ISUSAEJBREMOTE || Constantes.ISUSAEJBHOME) {
					this.configuracionpunven =(ConfiguracionPunVen) this.configuracionpunvens.toArray()[this.jTableDatosConfiguracionPunVen.convertRowIndexToModel(intSelectedRow)];
				}
				*/
				//ARCHITECTURE

				this.setVariablesFormularioToObjetoActualConfiguracionPunVen(this.getconfiguracionpunven(),true);
				this.setVariablesFormularioToObjetoActualForeignKeysConfiguracionPunVen(this.configuracionpunven);

				this.formatonotacreditoBeanSwingJInternalFrame=new FormatoBeanSwingJInternalFrame(true,true,this.jDesktopPane,this.usuarioActual,this.resumenUsuarioActual,this.moduloActual,this.opcionActual,this.parametroGeneralSg,this.parametroGeneralUsuario,PaginaTipo.AUXILIAR,false,false,false,true);
				this.formatonotacreditoBeanSwingJInternalFrame.setJInternalFrameParent(this);

				this.formatonotacreditoBeanSwingJInternalFrame.getFormatoLogic().setConnexion(this.configuracionpunvenLogic.getConnexion());

				if(this.configuracionpunven.getid_formato_nota_credito()!=null) {
					this.formatonotacreditoBeanSwingJInternalFrame.sTipoBusqueda="PorId";
					this.formatonotacreditoBeanSwingJInternalFrame.setIdActual(this.configuracionpunven.getid_formato_nota_credito());
					this.formatonotacreditoBeanSwingJInternalFrame.procesarBusqueda("PorId");
					this.formatonotacreditoBeanSwingJInternalFrame.setsAccionBusqueda("PorId");
					this.formatonotacreditoBeanSwingJInternalFrame.inicializarActualizarBindingTablaFormato();
				}

				JInternalFrameBase jinternalFrame =this.formatonotacreditoBeanSwingJInternalFrame;
				jinternalFrame.setAutoscrolls(true);
				//frame.setSize(screenSize.width-inset*7 , screenSize.height-inset*9);
				jinternalFrame.setVisible(true); 


				TitledBorder titledBorderConfiguracionPunVen=(TitledBorder)this.jScrollPanelDatosConfiguracionPunVen.getBorder();
				TitledBorder titledBorderformatonotacredito=(TitledBorder)this.formatonotacreditoBeanSwingJInternalFrame.jScrollPanelDatosFormato.getBorder();

				titledBorderformatonotacredito.setTitle(titledBorderConfiguracionPunVen.getTitle() + " -> Formato");


				if(!Constantes.CON_VARIAS_VENTANAS) {
					MainJFrame.cerrarJInternalFramesExistentes(this.jDesktopPane,jinternalFrame);
				}

				this.jDesktopPane.add(jinternalFrame);

				jinternalFrame.setSelected(true);
			} else {
				throw new Exception("NO TIENE PERMISO PARA TRABAJAR CON ESTA INFORMACION");
			}

			if(Constantes.ISUSAEJBLOGICLAYER) {
				this.configuracionpunvenLogic.commitNewConnexionToDeep();
			}


		} catch(Exception e) {

			if(Constantes.ISUSAEJBLOGICLAYER) {
				this.configuracionpunvenLogic.rollbackNewConnexionToDeep();
			}

			FuncionesSwing.manageException(this, e,logger,ConfiguracionPunVenConstantesFunciones.CLASSNAME);

		} finally {
			if(Constantes.ISUSAEJBLOGICLAYER) {
				this.configuracionpunvenLogic.closeNewConnexionToDeep();
			}

		}
	}

	public void jButtonid_formato_nota_creditoConfiguracionPunVenBusquedaActionPerformed(java.awt.event.ActionEvent evt) throws Exception {
		try {

				if(Constantes.ISUSAEJBLOGICLAYER) {
					this.configuracionpunvenLogic.getNewConnexionToDeep("");
				}

				//TOCA TRAER NUEVAMENTE, YA QUE SE PIERDE REGISTRO ACTUAL
				int intSelectedRow = this.jTableDatosConfiguracionPunVen.getSelectedRow();

				if(intSelectedRow>-1) {
					this.setVariablesFormularioToObjetoActualConfiguracionPunVen(this.getconfiguracionpunven(),true);
					this.setVariablesFormularioToObjetoActualForeignKeysConfiguracionPunVen(this.configuracionpunven);
					//ARCHITECTURE
					/*
					if(Constantes.ISUSAEJBLOGICLAYER) {
						this.configuracionpunven =(ConfiguracionPunVen) this.configuracionpunvenLogic.getConfiguracionPunVens().toArray()[this.jTableDatosConfiguracionPunVen.convertRowIndexToModel(intSelectedRow)];
					} else if(Constantes.ISUSAEJBREMOTE || Constantes.ISUSAEJBHOME) {
						this.configuracionpunven =(ConfiguracionPunVen) this.configuracionpunvens.toArray()[this.jTableDatosConfiguracionPunVen.convertRowIndexToModel(intSelectedRow)];
					}
					*/
					//ARCHITECTURE

				} else {
					if(this.configuracionpunven==null) {
						this.configuracionpunven = new ConfiguracionPunVen();
					}

					this.setVariablesFormularioToObjetoActualConfiguracionPunVen(this.configuracionpunven,true);
					this.setVariablesFormularioToObjetoActualForeignKeysConfiguracionPunVen(this.configuracionpunven);
				}

				if(this.configuracionpunven.getid_formato_nota_credito()!=null) {

					this.sAccionBusqueda="Query";

					this.sFinalQueryGeneral=" where id_formato_nota_credito = "+this.configuracionpunven.getid_formato_nota_credito().toString()+" ";

					if(Constantes.ISDEVELOPING) {
						System.out.println(this.sFinalQueryGeneral);
					}

					this.procesarBusqueda(this.sAccionBusqueda);

					this.inicializarActualizarBindingConfiguracionPunVen(false);
				}

				if(Constantes.ISUSAEJBLOGICLAYER) {
					this.configuracionpunvenLogic.commitNewConnexionToDeep();
				}

			} catch(Exception e) {

				if(Constantes.ISUSAEJBLOGICLAYER) {
					this.configuracionpunvenLogic.rollbackNewConnexionToDeep();
				}

				FuncionesSwing.manageException(this, e,logger,ConfiguracionPunVenConstantesFunciones.CLASSNAME);

			} finally {
				if(Constantes.ISUSAEJBLOGICLAYER) {
					this.configuracionpunvenLogic.closeNewConnexionToDeep();
				}

			}
		}

	public void jButtonid_transaccion_facturaConfiguracionPunVenUpdateActionPerformed(java.awt.event.ActionEvent evt) throws Exception {
		try {

			if(Constantes.ISUSAEJBLOGICLAYER) {
				this.configuracionpunvenLogic.getNewConnexionToDeep("");
			}

			Boolean idTienePermisotransaccionfactura=true;

			idTienePermisotransaccionfactura=this.tienePermisosUsuarioEnPaginaWebConfiguracionPunVen(TransaccionConstantesFunciones.CLASSNAME);

			if(idTienePermisotransaccionfactura) {
				//TOCA TRAER NUEVAMENTE, YA QUE SE PIERDE REGISTRO ACTUAL
				int intSelectedRow = this.jTableDatosConfiguracionPunVen.getSelectedRow();

				if(intSelectedRow<0 && this.jTableDatosConfiguracionPunVen.getRowCount()>0) {
					intSelectedRow =0;
					this.jTableDatosConfiguracionPunVen.setRowSelectionInterval(intSelectedRow,intSelectedRow);
				}
				//ARCHITECTURE
				/*
				if(Constantes.ISUSAEJBLOGICLAYER) {
					this.configuracionpunven =(ConfiguracionPunVen) this.configuracionpunvenLogic.getConfiguracionPunVens().toArray()[this.jTableDatosConfiguracionPunVen.convertRowIndexToModel(intSelectedRow)];
				} else if(Constantes.ISUSAEJBREMOTE || Constantes.ISUSAEJBHOME) {
					this.configuracionpunven =(ConfiguracionPunVen) this.configuracionpunvens.toArray()[this.jTableDatosConfiguracionPunVen.convertRowIndexToModel(intSelectedRow)];
				}
				*/
				//ARCHITECTURE

				this.setVariablesFormularioToObjetoActualConfiguracionPunVen(this.getconfiguracionpunven(),true);
				this.setVariablesFormularioToObjetoActualForeignKeysConfiguracionPunVen(this.configuracionpunven);

				this.transaccionfacturaBeanSwingJInternalFrame=new TransaccionBeanSwingJInternalFrame(true,true,this.jDesktopPane,this.usuarioActual,this.resumenUsuarioActual,this.moduloActual,this.opcionActual,this.parametroGeneralSg,this.parametroGeneralUsuario,PaginaTipo.AUXILIAR,false,false,false,true);
				this.transaccionfacturaBeanSwingJInternalFrame.setJInternalFrameParent(this);

				this.transaccionfacturaBeanSwingJInternalFrame.getTransaccionLogic().setConnexion(this.configuracionpunvenLogic.getConnexion());

				if(this.configuracionpunven.getid_transaccion_factura()!=null) {
					this.transaccionfacturaBeanSwingJInternalFrame.sTipoBusqueda="PorId";
					this.transaccionfacturaBeanSwingJInternalFrame.setIdActual(this.configuracionpunven.getid_transaccion_factura());
					this.transaccionfacturaBeanSwingJInternalFrame.procesarBusqueda("PorId");
					this.transaccionfacturaBeanSwingJInternalFrame.setsAccionBusqueda("PorId");
					this.transaccionfacturaBeanSwingJInternalFrame.inicializarActualizarBindingTablaTransaccion();
				}

				JInternalFrameBase jinternalFrame =this.transaccionfacturaBeanSwingJInternalFrame;
				jinternalFrame.setAutoscrolls(true);
				//frame.setSize(screenSize.width-inset*7 , screenSize.height-inset*9);
				jinternalFrame.setVisible(true); 


				TitledBorder titledBorderConfiguracionPunVen=(TitledBorder)this.jScrollPanelDatosConfiguracionPunVen.getBorder();
				TitledBorder titledBordertransaccionfactura=(TitledBorder)this.transaccionfacturaBeanSwingJInternalFrame.jScrollPanelDatosTransaccion.getBorder();

				titledBordertransaccionfactura.setTitle(titledBorderConfiguracionPunVen.getTitle() + " -> Transaccion");


				if(!Constantes.CON_VARIAS_VENTANAS) {
					MainJFrame.cerrarJInternalFramesExistentes(this.jDesktopPane,jinternalFrame);
				}

				this.jDesktopPane.add(jinternalFrame);

				jinternalFrame.setSelected(true);
			} else {
				throw new Exception("NO TIENE PERMISO PARA TRABAJAR CON ESTA INFORMACION");
			}

			if(Constantes.ISUSAEJBLOGICLAYER) {
				this.configuracionpunvenLogic.commitNewConnexionToDeep();
			}


		} catch(Exception e) {

			if(Constantes.ISUSAEJBLOGICLAYER) {
				this.configuracionpunvenLogic.rollbackNewConnexionToDeep();
			}

			FuncionesSwing.manageException(this, e,logger,ConfiguracionPunVenConstantesFunciones.CLASSNAME);

		} finally {
			if(Constantes.ISUSAEJBLOGICLAYER) {
				this.configuracionpunvenLogic.closeNewConnexionToDeep();
			}

		}
	}

	public void jButtonid_transaccion_facturaConfiguracionPunVenBusquedaActionPerformed(java.awt.event.ActionEvent evt) throws Exception {
		try {

				if(Constantes.ISUSAEJBLOGICLAYER) {
					this.configuracionpunvenLogic.getNewConnexionToDeep("");
				}

				//TOCA TRAER NUEVAMENTE, YA QUE SE PIERDE REGISTRO ACTUAL
				int intSelectedRow = this.jTableDatosConfiguracionPunVen.getSelectedRow();

				if(intSelectedRow>-1) {
					this.setVariablesFormularioToObjetoActualConfiguracionPunVen(this.getconfiguracionpunven(),true);
					this.setVariablesFormularioToObjetoActualForeignKeysConfiguracionPunVen(this.configuracionpunven);
					//ARCHITECTURE
					/*
					if(Constantes.ISUSAEJBLOGICLAYER) {
						this.configuracionpunven =(ConfiguracionPunVen) this.configuracionpunvenLogic.getConfiguracionPunVens().toArray()[this.jTableDatosConfiguracionPunVen.convertRowIndexToModel(intSelectedRow)];
					} else if(Constantes.ISUSAEJBREMOTE || Constantes.ISUSAEJBHOME) {
						this.configuracionpunven =(ConfiguracionPunVen) this.configuracionpunvens.toArray()[this.jTableDatosConfiguracionPunVen.convertRowIndexToModel(intSelectedRow)];
					}
					*/
					//ARCHITECTURE

				} else {
					if(this.configuracionpunven==null) {
						this.configuracionpunven = new ConfiguracionPunVen();
					}

					this.setVariablesFormularioToObjetoActualConfiguracionPunVen(this.configuracionpunven,true);
					this.setVariablesFormularioToObjetoActualForeignKeysConfiguracionPunVen(this.configuracionpunven);
				}

				if(this.configuracionpunven.getid_transaccion_factura()!=null) {

					this.sAccionBusqueda="Query";

					this.sFinalQueryGeneral=" where id_transaccion_factura = "+this.configuracionpunven.getid_transaccion_factura().toString()+" ";

					if(Constantes.ISDEVELOPING) {
						System.out.println(this.sFinalQueryGeneral);
					}

					this.procesarBusqueda(this.sAccionBusqueda);

					this.inicializarActualizarBindingConfiguracionPunVen(false);
				}

				if(Constantes.ISUSAEJBLOGICLAYER) {
					this.configuracionpunvenLogic.commitNewConnexionToDeep();
				}

			} catch(Exception e) {

				if(Constantes.ISUSAEJBLOGICLAYER) {
					this.configuracionpunvenLogic.rollbackNewConnexionToDeep();
				}

				FuncionesSwing.manageException(this, e,logger,ConfiguracionPunVenConstantesFunciones.CLASSNAME);

			} finally {
				if(Constantes.ISUSAEJBLOGICLAYER) {
					this.configuracionpunvenLogic.closeNewConnexionToDeep();
				}

			}
		}

	public void jButtonid_transaccion_nota_ventaConfiguracionPunVenUpdateActionPerformed(java.awt.event.ActionEvent evt) throws Exception {
		try {

			if(Constantes.ISUSAEJBLOGICLAYER) {
				this.configuracionpunvenLogic.getNewConnexionToDeep("");
			}

			Boolean idTienePermisotransaccionnotaventa=true;

			idTienePermisotransaccionnotaventa=this.tienePermisosUsuarioEnPaginaWebConfiguracionPunVen(TransaccionConstantesFunciones.CLASSNAME);

			if(idTienePermisotransaccionnotaventa) {
				//TOCA TRAER NUEVAMENTE, YA QUE SE PIERDE REGISTRO ACTUAL
				int intSelectedRow = this.jTableDatosConfiguracionPunVen.getSelectedRow();

				if(intSelectedRow<0 && this.jTableDatosConfiguracionPunVen.getRowCount()>0) {
					intSelectedRow =0;
					this.jTableDatosConfiguracionPunVen.setRowSelectionInterval(intSelectedRow,intSelectedRow);
				}
				//ARCHITECTURE
				/*
				if(Constantes.ISUSAEJBLOGICLAYER) {
					this.configuracionpunven =(ConfiguracionPunVen) this.configuracionpunvenLogic.getConfiguracionPunVens().toArray()[this.jTableDatosConfiguracionPunVen.convertRowIndexToModel(intSelectedRow)];
				} else if(Constantes.ISUSAEJBREMOTE || Constantes.ISUSAEJBHOME) {
					this.configuracionpunven =(ConfiguracionPunVen) this.configuracionpunvens.toArray()[this.jTableDatosConfiguracionPunVen.convertRowIndexToModel(intSelectedRow)];
				}
				*/
				//ARCHITECTURE

				this.setVariablesFormularioToObjetoActualConfiguracionPunVen(this.getconfiguracionpunven(),true);
				this.setVariablesFormularioToObjetoActualForeignKeysConfiguracionPunVen(this.configuracionpunven);

				this.transaccionnotaventaBeanSwingJInternalFrame=new TransaccionBeanSwingJInternalFrame(true,true,this.jDesktopPane,this.usuarioActual,this.resumenUsuarioActual,this.moduloActual,this.opcionActual,this.parametroGeneralSg,this.parametroGeneralUsuario,PaginaTipo.AUXILIAR,false,false,false,true);
				this.transaccionnotaventaBeanSwingJInternalFrame.setJInternalFrameParent(this);

				this.transaccionnotaventaBeanSwingJInternalFrame.getTransaccionLogic().setConnexion(this.configuracionpunvenLogic.getConnexion());

				if(this.configuracionpunven.getid_transaccion_nota_venta()!=null) {
					this.transaccionnotaventaBeanSwingJInternalFrame.sTipoBusqueda="PorId";
					this.transaccionnotaventaBeanSwingJInternalFrame.setIdActual(this.configuracionpunven.getid_transaccion_nota_venta());
					this.transaccionnotaventaBeanSwingJInternalFrame.procesarBusqueda("PorId");
					this.transaccionnotaventaBeanSwingJInternalFrame.setsAccionBusqueda("PorId");
					this.transaccionnotaventaBeanSwingJInternalFrame.inicializarActualizarBindingTablaTransaccion();
				}

				JInternalFrameBase jinternalFrame =this.transaccionnotaventaBeanSwingJInternalFrame;
				jinternalFrame.setAutoscrolls(true);
				//frame.setSize(screenSize.width-inset*7 , screenSize.height-inset*9);
				jinternalFrame.setVisible(true); 


				TitledBorder titledBorderConfiguracionPunVen=(TitledBorder)this.jScrollPanelDatosConfiguracionPunVen.getBorder();
				TitledBorder titledBordertransaccionnotaventa=(TitledBorder)this.transaccionnotaventaBeanSwingJInternalFrame.jScrollPanelDatosTransaccion.getBorder();

				titledBordertransaccionnotaventa.setTitle(titledBorderConfiguracionPunVen.getTitle() + " -> Transaccion");


				if(!Constantes.CON_VARIAS_VENTANAS) {
					MainJFrame.cerrarJInternalFramesExistentes(this.jDesktopPane,jinternalFrame);
				}

				this.jDesktopPane.add(jinternalFrame);

				jinternalFrame.setSelected(true);
			} else {
				throw new Exception("NO TIENE PERMISO PARA TRABAJAR CON ESTA INFORMACION");
			}

			if(Constantes.ISUSAEJBLOGICLAYER) {
				this.configuracionpunvenLogic.commitNewConnexionToDeep();
			}


		} catch(Exception e) {

			if(Constantes.ISUSAEJBLOGICLAYER) {
				this.configuracionpunvenLogic.rollbackNewConnexionToDeep();
			}

			FuncionesSwing.manageException(this, e,logger,ConfiguracionPunVenConstantesFunciones.CLASSNAME);

		} finally {
			if(Constantes.ISUSAEJBLOGICLAYER) {
				this.configuracionpunvenLogic.closeNewConnexionToDeep();
			}

		}
	}

	public void jButtonid_transaccion_nota_ventaConfiguracionPunVenBusquedaActionPerformed(java.awt.event.ActionEvent evt) throws Exception {
		try {

				if(Constantes.ISUSAEJBLOGICLAYER) {
					this.configuracionpunvenLogic.getNewConnexionToDeep("");
				}

				//TOCA TRAER NUEVAMENTE, YA QUE SE PIERDE REGISTRO ACTUAL
				int intSelectedRow = this.jTableDatosConfiguracionPunVen.getSelectedRow();

				if(intSelectedRow>-1) {
					this.setVariablesFormularioToObjetoActualConfiguracionPunVen(this.getconfiguracionpunven(),true);
					this.setVariablesFormularioToObjetoActualForeignKeysConfiguracionPunVen(this.configuracionpunven);
					//ARCHITECTURE
					/*
					if(Constantes.ISUSAEJBLOGICLAYER) {
						this.configuracionpunven =(ConfiguracionPunVen) this.configuracionpunvenLogic.getConfiguracionPunVens().toArray()[this.jTableDatosConfiguracionPunVen.convertRowIndexToModel(intSelectedRow)];
					} else if(Constantes.ISUSAEJBREMOTE || Constantes.ISUSAEJBHOME) {
						this.configuracionpunven =(ConfiguracionPunVen) this.configuracionpunvens.toArray()[this.jTableDatosConfiguracionPunVen.convertRowIndexToModel(intSelectedRow)];
					}
					*/
					//ARCHITECTURE

				} else {
					if(this.configuracionpunven==null) {
						this.configuracionpunven = new ConfiguracionPunVen();
					}

					this.setVariablesFormularioToObjetoActualConfiguracionPunVen(this.configuracionpunven,true);
					this.setVariablesFormularioToObjetoActualForeignKeysConfiguracionPunVen(this.configuracionpunven);
				}

				if(this.configuracionpunven.getid_transaccion_nota_venta()!=null) {

					this.sAccionBusqueda="Query";

					this.sFinalQueryGeneral=" where id_transaccion_nota_venta = "+this.configuracionpunven.getid_transaccion_nota_venta().toString()+" ";

					if(Constantes.ISDEVELOPING) {
						System.out.println(this.sFinalQueryGeneral);
					}

					this.procesarBusqueda(this.sAccionBusqueda);

					this.inicializarActualizarBindingConfiguracionPunVen(false);
				}

				if(Constantes.ISUSAEJBLOGICLAYER) {
					this.configuracionpunvenLogic.commitNewConnexionToDeep();
				}

			} catch(Exception e) {

				if(Constantes.ISUSAEJBLOGICLAYER) {
					this.configuracionpunvenLogic.rollbackNewConnexionToDeep();
				}

				FuncionesSwing.manageException(this, e,logger,ConfiguracionPunVenConstantesFunciones.CLASSNAME);

			} finally {
				if(Constantes.ISUSAEJBLOGICLAYER) {
					this.configuracionpunvenLogic.closeNewConnexionToDeep();
				}

			}
		}

	public void jButtonid_transaccion_nota_creditoConfiguracionPunVenUpdateActionPerformed(java.awt.event.ActionEvent evt) throws Exception {
		try {

			if(Constantes.ISUSAEJBLOGICLAYER) {
				this.configuracionpunvenLogic.getNewConnexionToDeep("");
			}

			Boolean idTienePermisotransaccionnotacredito=true;

			idTienePermisotransaccionnotacredito=this.tienePermisosUsuarioEnPaginaWebConfiguracionPunVen(TransaccionConstantesFunciones.CLASSNAME);

			if(idTienePermisotransaccionnotacredito) {
				//TOCA TRAER NUEVAMENTE, YA QUE SE PIERDE REGISTRO ACTUAL
				int intSelectedRow = this.jTableDatosConfiguracionPunVen.getSelectedRow();

				if(intSelectedRow<0 && this.jTableDatosConfiguracionPunVen.getRowCount()>0) {
					intSelectedRow =0;
					this.jTableDatosConfiguracionPunVen.setRowSelectionInterval(intSelectedRow,intSelectedRow);
				}
				//ARCHITECTURE
				/*
				if(Constantes.ISUSAEJBLOGICLAYER) {
					this.configuracionpunven =(ConfiguracionPunVen) this.configuracionpunvenLogic.getConfiguracionPunVens().toArray()[this.jTableDatosConfiguracionPunVen.convertRowIndexToModel(intSelectedRow)];
				} else if(Constantes.ISUSAEJBREMOTE || Constantes.ISUSAEJBHOME) {
					this.configuracionpunven =(ConfiguracionPunVen) this.configuracionpunvens.toArray()[this.jTableDatosConfiguracionPunVen.convertRowIndexToModel(intSelectedRow)];
				}
				*/
				//ARCHITECTURE

				this.setVariablesFormularioToObjetoActualConfiguracionPunVen(this.getconfiguracionpunven(),true);
				this.setVariablesFormularioToObjetoActualForeignKeysConfiguracionPunVen(this.configuracionpunven);

				this.transaccionnotacreditoBeanSwingJInternalFrame=new TransaccionBeanSwingJInternalFrame(true,true,this.jDesktopPane,this.usuarioActual,this.resumenUsuarioActual,this.moduloActual,this.opcionActual,this.parametroGeneralSg,this.parametroGeneralUsuario,PaginaTipo.AUXILIAR,false,false,false,true);
				this.transaccionnotacreditoBeanSwingJInternalFrame.setJInternalFrameParent(this);

				this.transaccionnotacreditoBeanSwingJInternalFrame.getTransaccionLogic().setConnexion(this.configuracionpunvenLogic.getConnexion());

				if(this.configuracionpunven.getid_transaccion_nota_credito()!=null) {
					this.transaccionnotacreditoBeanSwingJInternalFrame.sTipoBusqueda="PorId";
					this.transaccionnotacreditoBeanSwingJInternalFrame.setIdActual(this.configuracionpunven.getid_transaccion_nota_credito());
					this.transaccionnotacreditoBeanSwingJInternalFrame.procesarBusqueda("PorId");
					this.transaccionnotacreditoBeanSwingJInternalFrame.setsAccionBusqueda("PorId");
					this.transaccionnotacreditoBeanSwingJInternalFrame.inicializarActualizarBindingTablaTransaccion();
				}

				JInternalFrameBase jinternalFrame =this.transaccionnotacreditoBeanSwingJInternalFrame;
				jinternalFrame.setAutoscrolls(true);
				//frame.setSize(screenSize.width-inset*7 , screenSize.height-inset*9);
				jinternalFrame.setVisible(true); 


				TitledBorder titledBorderConfiguracionPunVen=(TitledBorder)this.jScrollPanelDatosConfiguracionPunVen.getBorder();
				TitledBorder titledBordertransaccionnotacredito=(TitledBorder)this.transaccionnotacreditoBeanSwingJInternalFrame.jScrollPanelDatosTransaccion.getBorder();

				titledBordertransaccionnotacredito.setTitle(titledBorderConfiguracionPunVen.getTitle() + " -> Transaccion");


				if(!Constantes.CON_VARIAS_VENTANAS) {
					MainJFrame.cerrarJInternalFramesExistentes(this.jDesktopPane,jinternalFrame);
				}

				this.jDesktopPane.add(jinternalFrame);

				jinternalFrame.setSelected(true);
			} else {
				throw new Exception("NO TIENE PERMISO PARA TRABAJAR CON ESTA INFORMACION");
			}

			if(Constantes.ISUSAEJBLOGICLAYER) {
				this.configuracionpunvenLogic.commitNewConnexionToDeep();
			}


		} catch(Exception e) {

			if(Constantes.ISUSAEJBLOGICLAYER) {
				this.configuracionpunvenLogic.rollbackNewConnexionToDeep();
			}

			FuncionesSwing.manageException(this, e,logger,ConfiguracionPunVenConstantesFunciones.CLASSNAME);

		} finally {
			if(Constantes.ISUSAEJBLOGICLAYER) {
				this.configuracionpunvenLogic.closeNewConnexionToDeep();
			}

		}
	}

	public void jButtonid_transaccion_nota_creditoConfiguracionPunVenBusquedaActionPerformed(java.awt.event.ActionEvent evt) throws Exception {
		try {

				if(Constantes.ISUSAEJBLOGICLAYER) {
					this.configuracionpunvenLogic.getNewConnexionToDeep("");
				}

				//TOCA TRAER NUEVAMENTE, YA QUE SE PIERDE REGISTRO ACTUAL
				int intSelectedRow = this.jTableDatosConfiguracionPunVen.getSelectedRow();

				if(intSelectedRow>-1) {
					this.setVariablesFormularioToObjetoActualConfiguracionPunVen(this.getconfiguracionpunven(),true);
					this.setVariablesFormularioToObjetoActualForeignKeysConfiguracionPunVen(this.configuracionpunven);
					//ARCHITECTURE
					/*
					if(Constantes.ISUSAEJBLOGICLAYER) {
						this.configuracionpunven =(ConfiguracionPunVen) this.configuracionpunvenLogic.getConfiguracionPunVens().toArray()[this.jTableDatosConfiguracionPunVen.convertRowIndexToModel(intSelectedRow)];
					} else if(Constantes.ISUSAEJBREMOTE || Constantes.ISUSAEJBHOME) {
						this.configuracionpunven =(ConfiguracionPunVen) this.configuracionpunvens.toArray()[this.jTableDatosConfiguracionPunVen.convertRowIndexToModel(intSelectedRow)];
					}
					*/
					//ARCHITECTURE

				} else {
					if(this.configuracionpunven==null) {
						this.configuracionpunven = new ConfiguracionPunVen();
					}

					this.setVariablesFormularioToObjetoActualConfiguracionPunVen(this.configuracionpunven,true);
					this.setVariablesFormularioToObjetoActualForeignKeysConfiguracionPunVen(this.configuracionpunven);
				}

				if(this.configuracionpunven.getid_transaccion_nota_credito()!=null) {

					this.sAccionBusqueda="Query";

					this.sFinalQueryGeneral=" where id_transaccion_nota_credito = "+this.configuracionpunven.getid_transaccion_nota_credito().toString()+" ";

					if(Constantes.ISDEVELOPING) {
						System.out.println(this.sFinalQueryGeneral);
					}

					this.procesarBusqueda(this.sAccionBusqueda);

					this.inicializarActualizarBindingConfiguracionPunVen(false);
				}

				if(Constantes.ISUSAEJBLOGICLAYER) {
					this.configuracionpunvenLogic.commitNewConnexionToDeep();
				}

			} catch(Exception e) {

				if(Constantes.ISUSAEJBLOGICLAYER) {
					this.configuracionpunvenLogic.rollbackNewConnexionToDeep();
				}

				FuncionesSwing.manageException(this, e,logger,ConfiguracionPunVenConstantesFunciones.CLASSNAME);

			} finally {
				if(Constantes.ISUSAEJBLOGICLAYER) {
					this.configuracionpunvenLogic.closeNewConnexionToDeep();
				}

			}
		}

	public void jButtonid_transaccion_cuenta_facturaConfiguracionPunVenUpdateActionPerformed(java.awt.event.ActionEvent evt) throws Exception {
		try {

			if(Constantes.ISUSAEJBLOGICLAYER) {
				this.configuracionpunvenLogic.getNewConnexionToDeep("");
			}

			Boolean idTienePermisotransaccioncuentafactura=true;

			idTienePermisotransaccioncuentafactura=this.tienePermisosUsuarioEnPaginaWebConfiguracionPunVen(TransaccionConstantesFunciones.CLASSNAME);

			if(idTienePermisotransaccioncuentafactura) {
				//TOCA TRAER NUEVAMENTE, YA QUE SE PIERDE REGISTRO ACTUAL
				int intSelectedRow = this.jTableDatosConfiguracionPunVen.getSelectedRow();

				if(intSelectedRow<0 && this.jTableDatosConfiguracionPunVen.getRowCount()>0) {
					intSelectedRow =0;
					this.jTableDatosConfiguracionPunVen.setRowSelectionInterval(intSelectedRow,intSelectedRow);
				}
				//ARCHITECTURE
				/*
				if(Constantes.ISUSAEJBLOGICLAYER) {
					this.configuracionpunven =(ConfiguracionPunVen) this.configuracionpunvenLogic.getConfiguracionPunVens().toArray()[this.jTableDatosConfiguracionPunVen.convertRowIndexToModel(intSelectedRow)];
				} else if(Constantes.ISUSAEJBREMOTE || Constantes.ISUSAEJBHOME) {
					this.configuracionpunven =(ConfiguracionPunVen) this.configuracionpunvens.toArray()[this.jTableDatosConfiguracionPunVen.convertRowIndexToModel(intSelectedRow)];
				}
				*/
				//ARCHITECTURE

				this.setVariablesFormularioToObjetoActualConfiguracionPunVen(this.getconfiguracionpunven(),true);
				this.setVariablesFormularioToObjetoActualForeignKeysConfiguracionPunVen(this.configuracionpunven);

				this.transaccioncuentafacturaBeanSwingJInternalFrame=new TransaccionBeanSwingJInternalFrame(true,true,this.jDesktopPane,this.usuarioActual,this.resumenUsuarioActual,this.moduloActual,this.opcionActual,this.parametroGeneralSg,this.parametroGeneralUsuario,PaginaTipo.AUXILIAR,false,false,false,true);
				this.transaccioncuentafacturaBeanSwingJInternalFrame.setJInternalFrameParent(this);

				this.transaccioncuentafacturaBeanSwingJInternalFrame.getTransaccionLogic().setConnexion(this.configuracionpunvenLogic.getConnexion());

				if(this.configuracionpunven.getid_transaccion_cuenta_factura()!=null) {
					this.transaccioncuentafacturaBeanSwingJInternalFrame.sTipoBusqueda="PorId";
					this.transaccioncuentafacturaBeanSwingJInternalFrame.setIdActual(this.configuracionpunven.getid_transaccion_cuenta_factura());
					this.transaccioncuentafacturaBeanSwingJInternalFrame.procesarBusqueda("PorId");
					this.transaccioncuentafacturaBeanSwingJInternalFrame.setsAccionBusqueda("PorId");
					this.transaccioncuentafacturaBeanSwingJInternalFrame.inicializarActualizarBindingTablaTransaccion();
				}

				JInternalFrameBase jinternalFrame =this.transaccioncuentafacturaBeanSwingJInternalFrame;
				jinternalFrame.setAutoscrolls(true);
				//frame.setSize(screenSize.width-inset*7 , screenSize.height-inset*9);
				jinternalFrame.setVisible(true); 


				TitledBorder titledBorderConfiguracionPunVen=(TitledBorder)this.jScrollPanelDatosConfiguracionPunVen.getBorder();
				TitledBorder titledBordertransaccioncuentafactura=(TitledBorder)this.transaccioncuentafacturaBeanSwingJInternalFrame.jScrollPanelDatosTransaccion.getBorder();

				titledBordertransaccioncuentafactura.setTitle(titledBorderConfiguracionPunVen.getTitle() + " -> Transaccion");


				if(!Constantes.CON_VARIAS_VENTANAS) {
					MainJFrame.cerrarJInternalFramesExistentes(this.jDesktopPane,jinternalFrame);
				}

				this.jDesktopPane.add(jinternalFrame);

				jinternalFrame.setSelected(true);
			} else {
				throw new Exception("NO TIENE PERMISO PARA TRABAJAR CON ESTA INFORMACION");
			}

			if(Constantes.ISUSAEJBLOGICLAYER) {
				this.configuracionpunvenLogic.commitNewConnexionToDeep();
			}


		} catch(Exception e) {

			if(Constantes.ISUSAEJBLOGICLAYER) {
				this.configuracionpunvenLogic.rollbackNewConnexionToDeep();
			}

			FuncionesSwing.manageException(this, e,logger,ConfiguracionPunVenConstantesFunciones.CLASSNAME);

		} finally {
			if(Constantes.ISUSAEJBLOGICLAYER) {
				this.configuracionpunvenLogic.closeNewConnexionToDeep();
			}

		}
	}

	public void jButtonid_transaccion_cuenta_facturaConfiguracionPunVenBusquedaActionPerformed(java.awt.event.ActionEvent evt) throws Exception {
		try {

				if(Constantes.ISUSAEJBLOGICLAYER) {
					this.configuracionpunvenLogic.getNewConnexionToDeep("");
				}

				//TOCA TRAER NUEVAMENTE, YA QUE SE PIERDE REGISTRO ACTUAL
				int intSelectedRow = this.jTableDatosConfiguracionPunVen.getSelectedRow();

				if(intSelectedRow>-1) {
					this.setVariablesFormularioToObjetoActualConfiguracionPunVen(this.getconfiguracionpunven(),true);
					this.setVariablesFormularioToObjetoActualForeignKeysConfiguracionPunVen(this.configuracionpunven);
					//ARCHITECTURE
					/*
					if(Constantes.ISUSAEJBLOGICLAYER) {
						this.configuracionpunven =(ConfiguracionPunVen) this.configuracionpunvenLogic.getConfiguracionPunVens().toArray()[this.jTableDatosConfiguracionPunVen.convertRowIndexToModel(intSelectedRow)];
					} else if(Constantes.ISUSAEJBREMOTE || Constantes.ISUSAEJBHOME) {
						this.configuracionpunven =(ConfiguracionPunVen) this.configuracionpunvens.toArray()[this.jTableDatosConfiguracionPunVen.convertRowIndexToModel(intSelectedRow)];
					}
					*/
					//ARCHITECTURE

				} else {
					if(this.configuracionpunven==null) {
						this.configuracionpunven = new ConfiguracionPunVen();
					}

					this.setVariablesFormularioToObjetoActualConfiguracionPunVen(this.configuracionpunven,true);
					this.setVariablesFormularioToObjetoActualForeignKeysConfiguracionPunVen(this.configuracionpunven);
				}

				if(this.configuracionpunven.getid_transaccion_cuenta_factura()!=null) {

					this.sAccionBusqueda="Query";

					this.sFinalQueryGeneral=" where id_transaccion_cuenta_factura = "+this.configuracionpunven.getid_transaccion_cuenta_factura().toString()+" ";

					if(Constantes.ISDEVELOPING) {
						System.out.println(this.sFinalQueryGeneral);
					}

					this.procesarBusqueda(this.sAccionBusqueda);

					this.inicializarActualizarBindingConfiguracionPunVen(false);
				}

				if(Constantes.ISUSAEJBLOGICLAYER) {
					this.configuracionpunvenLogic.commitNewConnexionToDeep();
				}

			} catch(Exception e) {

				if(Constantes.ISUSAEJBLOGICLAYER) {
					this.configuracionpunvenLogic.rollbackNewConnexionToDeep();
				}

				FuncionesSwing.manageException(this, e,logger,ConfiguracionPunVenConstantesFunciones.CLASSNAME);

			} finally {
				if(Constantes.ISUSAEJBLOGICLAYER) {
					this.configuracionpunvenLogic.closeNewConnexionToDeep();
				}

			}
		}

	public void jButtonid_transaccion_cuenta_nota_ventaConfiguracionPunVenUpdateActionPerformed(java.awt.event.ActionEvent evt) throws Exception {
		try {

			if(Constantes.ISUSAEJBLOGICLAYER) {
				this.configuracionpunvenLogic.getNewConnexionToDeep("");
			}

			Boolean idTienePermisotransaccioncuentanotaventa=true;

			idTienePermisotransaccioncuentanotaventa=this.tienePermisosUsuarioEnPaginaWebConfiguracionPunVen(TransaccionConstantesFunciones.CLASSNAME);

			if(idTienePermisotransaccioncuentanotaventa) {
				//TOCA TRAER NUEVAMENTE, YA QUE SE PIERDE REGISTRO ACTUAL
				int intSelectedRow = this.jTableDatosConfiguracionPunVen.getSelectedRow();

				if(intSelectedRow<0 && this.jTableDatosConfiguracionPunVen.getRowCount()>0) {
					intSelectedRow =0;
					this.jTableDatosConfiguracionPunVen.setRowSelectionInterval(intSelectedRow,intSelectedRow);
				}
				//ARCHITECTURE
				/*
				if(Constantes.ISUSAEJBLOGICLAYER) {
					this.configuracionpunven =(ConfiguracionPunVen) this.configuracionpunvenLogic.getConfiguracionPunVens().toArray()[this.jTableDatosConfiguracionPunVen.convertRowIndexToModel(intSelectedRow)];
				} else if(Constantes.ISUSAEJBREMOTE || Constantes.ISUSAEJBHOME) {
					this.configuracionpunven =(ConfiguracionPunVen) this.configuracionpunvens.toArray()[this.jTableDatosConfiguracionPunVen.convertRowIndexToModel(intSelectedRow)];
				}
				*/
				//ARCHITECTURE

				this.setVariablesFormularioToObjetoActualConfiguracionPunVen(this.getconfiguracionpunven(),true);
				this.setVariablesFormularioToObjetoActualForeignKeysConfiguracionPunVen(this.configuracionpunven);

				this.transaccioncuentanotaventaBeanSwingJInternalFrame=new TransaccionBeanSwingJInternalFrame(true,true,this.jDesktopPane,this.usuarioActual,this.resumenUsuarioActual,this.moduloActual,this.opcionActual,this.parametroGeneralSg,this.parametroGeneralUsuario,PaginaTipo.AUXILIAR,false,false,false,true);
				this.transaccioncuentanotaventaBeanSwingJInternalFrame.setJInternalFrameParent(this);

				this.transaccioncuentanotaventaBeanSwingJInternalFrame.getTransaccionLogic().setConnexion(this.configuracionpunvenLogic.getConnexion());

				if(this.configuracionpunven.getid_transaccion_cuenta_nota_venta()!=null) {
					this.transaccioncuentanotaventaBeanSwingJInternalFrame.sTipoBusqueda="PorId";
					this.transaccioncuentanotaventaBeanSwingJInternalFrame.setIdActual(this.configuracionpunven.getid_transaccion_cuenta_nota_venta());
					this.transaccioncuentanotaventaBeanSwingJInternalFrame.procesarBusqueda("PorId");
					this.transaccioncuentanotaventaBeanSwingJInternalFrame.setsAccionBusqueda("PorId");
					this.transaccioncuentanotaventaBeanSwingJInternalFrame.inicializarActualizarBindingTablaTransaccion();
				}

				JInternalFrameBase jinternalFrame =this.transaccioncuentanotaventaBeanSwingJInternalFrame;
				jinternalFrame.setAutoscrolls(true);
				//frame.setSize(screenSize.width-inset*7 , screenSize.height-inset*9);
				jinternalFrame.setVisible(true); 


				TitledBorder titledBorderConfiguracionPunVen=(TitledBorder)this.jScrollPanelDatosConfiguracionPunVen.getBorder();
				TitledBorder titledBordertransaccioncuentanotaventa=(TitledBorder)this.transaccioncuentanotaventaBeanSwingJInternalFrame.jScrollPanelDatosTransaccion.getBorder();

				titledBordertransaccioncuentanotaventa.setTitle(titledBorderConfiguracionPunVen.getTitle() + " -> Transaccion");


				if(!Constantes.CON_VARIAS_VENTANAS) {
					MainJFrame.cerrarJInternalFramesExistentes(this.jDesktopPane,jinternalFrame);
				}

				this.jDesktopPane.add(jinternalFrame);

				jinternalFrame.setSelected(true);
			} else {
				throw new Exception("NO TIENE PERMISO PARA TRABAJAR CON ESTA INFORMACION");
			}

			if(Constantes.ISUSAEJBLOGICLAYER) {
				this.configuracionpunvenLogic.commitNewConnexionToDeep();
			}


		} catch(Exception e) {

			if(Constantes.ISUSAEJBLOGICLAYER) {
				this.configuracionpunvenLogic.rollbackNewConnexionToDeep();
			}

			FuncionesSwing.manageException(this, e,logger,ConfiguracionPunVenConstantesFunciones.CLASSNAME);

		} finally {
			if(Constantes.ISUSAEJBLOGICLAYER) {
				this.configuracionpunvenLogic.closeNewConnexionToDeep();
			}

		}
	}

	public void jButtonid_transaccion_cuenta_nota_ventaConfiguracionPunVenBusquedaActionPerformed(java.awt.event.ActionEvent evt) throws Exception {
		try {

				if(Constantes.ISUSAEJBLOGICLAYER) {
					this.configuracionpunvenLogic.getNewConnexionToDeep("");
				}

				//TOCA TRAER NUEVAMENTE, YA QUE SE PIERDE REGISTRO ACTUAL
				int intSelectedRow = this.jTableDatosConfiguracionPunVen.getSelectedRow();

				if(intSelectedRow>-1) {
					this.setVariablesFormularioToObjetoActualConfiguracionPunVen(this.getconfiguracionpunven(),true);
					this.setVariablesFormularioToObjetoActualForeignKeysConfiguracionPunVen(this.configuracionpunven);
					//ARCHITECTURE
					/*
					if(Constantes.ISUSAEJBLOGICLAYER) {
						this.configuracionpunven =(ConfiguracionPunVen) this.configuracionpunvenLogic.getConfiguracionPunVens().toArray()[this.jTableDatosConfiguracionPunVen.convertRowIndexToModel(intSelectedRow)];
					} else if(Constantes.ISUSAEJBREMOTE || Constantes.ISUSAEJBHOME) {
						this.configuracionpunven =(ConfiguracionPunVen) this.configuracionpunvens.toArray()[this.jTableDatosConfiguracionPunVen.convertRowIndexToModel(intSelectedRow)];
					}
					*/
					//ARCHITECTURE

				} else {
					if(this.configuracionpunven==null) {
						this.configuracionpunven = new ConfiguracionPunVen();
					}

					this.setVariablesFormularioToObjetoActualConfiguracionPunVen(this.configuracionpunven,true);
					this.setVariablesFormularioToObjetoActualForeignKeysConfiguracionPunVen(this.configuracionpunven);
				}

				if(this.configuracionpunven.getid_transaccion_cuenta_nota_venta()!=null) {

					this.sAccionBusqueda="Query";

					this.sFinalQueryGeneral=" where id_transaccion_cuenta_nota_venta = "+this.configuracionpunven.getid_transaccion_cuenta_nota_venta().toString()+" ";

					if(Constantes.ISDEVELOPING) {
						System.out.println(this.sFinalQueryGeneral);
					}

					this.procesarBusqueda(this.sAccionBusqueda);

					this.inicializarActualizarBindingConfiguracionPunVen(false);
				}

				if(Constantes.ISUSAEJBLOGICLAYER) {
					this.configuracionpunvenLogic.commitNewConnexionToDeep();
				}

			} catch(Exception e) {

				if(Constantes.ISUSAEJBLOGICLAYER) {
					this.configuracionpunvenLogic.rollbackNewConnexionToDeep();
				}

				FuncionesSwing.manageException(this, e,logger,ConfiguracionPunVenConstantesFunciones.CLASSNAME);

			} finally {
				if(Constantes.ISUSAEJBLOGICLAYER) {
					this.configuracionpunvenLogic.closeNewConnexionToDeep();
				}

			}
		}

	public void jButtonid_transaccion_cuenta_nota_creditoConfiguracionPunVenUpdateActionPerformed(java.awt.event.ActionEvent evt) throws Exception {
		try {

			if(Constantes.ISUSAEJBLOGICLAYER) {
				this.configuracionpunvenLogic.getNewConnexionToDeep("");
			}

			Boolean idTienePermisotransaccioncuentanotacredito=true;

			idTienePermisotransaccioncuentanotacredito=this.tienePermisosUsuarioEnPaginaWebConfiguracionPunVen(TransaccionConstantesFunciones.CLASSNAME);

			if(idTienePermisotransaccioncuentanotacredito) {
				//TOCA TRAER NUEVAMENTE, YA QUE SE PIERDE REGISTRO ACTUAL
				int intSelectedRow = this.jTableDatosConfiguracionPunVen.getSelectedRow();

				if(intSelectedRow<0 && this.jTableDatosConfiguracionPunVen.getRowCount()>0) {
					intSelectedRow =0;
					this.jTableDatosConfiguracionPunVen.setRowSelectionInterval(intSelectedRow,intSelectedRow);
				}
				//ARCHITECTURE
				/*
				if(Constantes.ISUSAEJBLOGICLAYER) {
					this.configuracionpunven =(ConfiguracionPunVen) this.configuracionpunvenLogic.getConfiguracionPunVens().toArray()[this.jTableDatosConfiguracionPunVen.convertRowIndexToModel(intSelectedRow)];
				} else if(Constantes.ISUSAEJBREMOTE || Constantes.ISUSAEJBHOME) {
					this.configuracionpunven =(ConfiguracionPunVen) this.configuracionpunvens.toArray()[this.jTableDatosConfiguracionPunVen.convertRowIndexToModel(intSelectedRow)];
				}
				*/
				//ARCHITECTURE

				this.setVariablesFormularioToObjetoActualConfiguracionPunVen(this.getconfiguracionpunven(),true);
				this.setVariablesFormularioToObjetoActualForeignKeysConfiguracionPunVen(this.configuracionpunven);

				this.transaccioncuentanotacreditoBeanSwingJInternalFrame=new TransaccionBeanSwingJInternalFrame(true,true,this.jDesktopPane,this.usuarioActual,this.resumenUsuarioActual,this.moduloActual,this.opcionActual,this.parametroGeneralSg,this.parametroGeneralUsuario,PaginaTipo.AUXILIAR,false,false,false,true);
				this.transaccioncuentanotacreditoBeanSwingJInternalFrame.setJInternalFrameParent(this);

				this.transaccioncuentanotacreditoBeanSwingJInternalFrame.getTransaccionLogic().setConnexion(this.configuracionpunvenLogic.getConnexion());

				if(this.configuracionpunven.getid_transaccion_cuenta_nota_credito()!=null) {
					this.transaccioncuentanotacreditoBeanSwingJInternalFrame.sTipoBusqueda="PorId";
					this.transaccioncuentanotacreditoBeanSwingJInternalFrame.setIdActual(this.configuracionpunven.getid_transaccion_cuenta_nota_credito());
					this.transaccioncuentanotacreditoBeanSwingJInternalFrame.procesarBusqueda("PorId");
					this.transaccioncuentanotacreditoBeanSwingJInternalFrame.setsAccionBusqueda("PorId");
					this.transaccioncuentanotacreditoBeanSwingJInternalFrame.inicializarActualizarBindingTablaTransaccion();
				}

				JInternalFrameBase jinternalFrame =this.transaccioncuentanotacreditoBeanSwingJInternalFrame;
				jinternalFrame.setAutoscrolls(true);
				//frame.setSize(screenSize.width-inset*7 , screenSize.height-inset*9);
				jinternalFrame.setVisible(true); 


				TitledBorder titledBorderConfiguracionPunVen=(TitledBorder)this.jScrollPanelDatosConfiguracionPunVen.getBorder();
				TitledBorder titledBordertransaccioncuentanotacredito=(TitledBorder)this.transaccioncuentanotacreditoBeanSwingJInternalFrame.jScrollPanelDatosTransaccion.getBorder();

				titledBordertransaccioncuentanotacredito.setTitle(titledBorderConfiguracionPunVen.getTitle() + " -> Transaccion");


				if(!Constantes.CON_VARIAS_VENTANAS) {
					MainJFrame.cerrarJInternalFramesExistentes(this.jDesktopPane,jinternalFrame);
				}

				this.jDesktopPane.add(jinternalFrame);

				jinternalFrame.setSelected(true);
			} else {
				throw new Exception("NO TIENE PERMISO PARA TRABAJAR CON ESTA INFORMACION");
			}

			if(Constantes.ISUSAEJBLOGICLAYER) {
				this.configuracionpunvenLogic.commitNewConnexionToDeep();
			}


		} catch(Exception e) {

			if(Constantes.ISUSAEJBLOGICLAYER) {
				this.configuracionpunvenLogic.rollbackNewConnexionToDeep();
			}

			FuncionesSwing.manageException(this, e,logger,ConfiguracionPunVenConstantesFunciones.CLASSNAME);

		} finally {
			if(Constantes.ISUSAEJBLOGICLAYER) {
				this.configuracionpunvenLogic.closeNewConnexionToDeep();
			}

		}
	}

	public void jButtonid_transaccion_cuenta_nota_creditoConfiguracionPunVenBusquedaActionPerformed(java.awt.event.ActionEvent evt) throws Exception {
		try {

				if(Constantes.ISUSAEJBLOGICLAYER) {
					this.configuracionpunvenLogic.getNewConnexionToDeep("");
				}

				//TOCA TRAER NUEVAMENTE, YA QUE SE PIERDE REGISTRO ACTUAL
				int intSelectedRow = this.jTableDatosConfiguracionPunVen.getSelectedRow();

				if(intSelectedRow>-1) {
					this.setVariablesFormularioToObjetoActualConfiguracionPunVen(this.getconfiguracionpunven(),true);
					this.setVariablesFormularioToObjetoActualForeignKeysConfiguracionPunVen(this.configuracionpunven);
					//ARCHITECTURE
					/*
					if(Constantes.ISUSAEJBLOGICLAYER) {
						this.configuracionpunven =(ConfiguracionPunVen) this.configuracionpunvenLogic.getConfiguracionPunVens().toArray()[this.jTableDatosConfiguracionPunVen.convertRowIndexToModel(intSelectedRow)];
					} else if(Constantes.ISUSAEJBREMOTE || Constantes.ISUSAEJBHOME) {
						this.configuracionpunven =(ConfiguracionPunVen) this.configuracionpunvens.toArray()[this.jTableDatosConfiguracionPunVen.convertRowIndexToModel(intSelectedRow)];
					}
					*/
					//ARCHITECTURE

				} else {
					if(this.configuracionpunven==null) {
						this.configuracionpunven = new ConfiguracionPunVen();
					}

					this.setVariablesFormularioToObjetoActualConfiguracionPunVen(this.configuracionpunven,true);
					this.setVariablesFormularioToObjetoActualForeignKeysConfiguracionPunVen(this.configuracionpunven);
				}

				if(this.configuracionpunven.getid_transaccion_cuenta_nota_credito()!=null) {

					this.sAccionBusqueda="Query";

					this.sFinalQueryGeneral=" where id_transaccion_cuenta_nota_credito = "+this.configuracionpunven.getid_transaccion_cuenta_nota_credito().toString()+" ";

					if(Constantes.ISDEVELOPING) {
						System.out.println(this.sFinalQueryGeneral);
					}

					this.procesarBusqueda(this.sAccionBusqueda);

					this.inicializarActualizarBindingConfiguracionPunVen(false);
				}

				if(Constantes.ISUSAEJBLOGICLAYER) {
					this.configuracionpunvenLogic.commitNewConnexionToDeep();
				}

			} catch(Exception e) {

				if(Constantes.ISUSAEJBLOGICLAYER) {
					this.configuracionpunvenLogic.rollbackNewConnexionToDeep();
				}

				FuncionesSwing.manageException(this, e,logger,ConfiguracionPunVenConstantesFunciones.CLASSNAME);

			} finally {
				if(Constantes.ISUSAEJBLOGICLAYER) {
					this.configuracionpunvenLogic.closeNewConnexionToDeep();
				}

			}
		}

	
	
	public void jButtonFK_IdBodegaConfiguracionPunVenActionPerformed(ActionEvent evt) throws Exception {
		try {
			if(Constantes.ISUSAEJBLOGICLAYER) {
				this.configuracionpunvenLogic.getNewConnexionToDeep("");
			}

			this.iNumeroPaginacionPagina=0;
			this.inicializarActualizarBindingConfiguracionPunVen(false,false);

			this.getConfiguracionPunVensFK_IdBodega();

			this.inicializarActualizarBindingConfiguracionPunVen(false);

			//if(ConfiguracionPunVenBeanSwingJInternalFrame.ISBINDING_MANUAL) {
			//this.inicializarActualizarBindingConfiguracionPunVen(false,false);
			//}

			if(Constantes.ISUSAEJBLOGICLAYER) {
				this.configuracionpunvenLogic.commitNewConnexionToDeep();
			}
		} catch(Exception e) {
			if(Constantes.ISUSAEJBLOGICLAYER) {
				this.configuracionpunvenLogic.rollbackNewConnexionToDeep();
			}

			FuncionesSwing.manageException(this, e,logger,ConfiguracionPunVenConstantesFunciones.CLASSNAME);

		} finally {
			if(Constantes.ISUSAEJBLOGICLAYER) {
				this.configuracionpunvenLogic.closeNewConnexionToDeep();
			}
		}
	}

	public void jButtonFK_IdClienteConsumidorFinalConfiguracionPunVenActionPerformed(ActionEvent evt) throws Exception {
		try {
			if(Constantes.ISUSAEJBLOGICLAYER) {
				this.configuracionpunvenLogic.getNewConnexionToDeep("");
			}

			this.iNumeroPaginacionPagina=0;
			this.inicializarActualizarBindingConfiguracionPunVen(false,false);

			this.getConfiguracionPunVensFK_IdClienteConsumidorFinal();

			this.inicializarActualizarBindingConfiguracionPunVen(false);

			//if(ConfiguracionPunVenBeanSwingJInternalFrame.ISBINDING_MANUAL) {
			//this.inicializarActualizarBindingConfiguracionPunVen(false,false);
			//}

			if(Constantes.ISUSAEJBLOGICLAYER) {
				this.configuracionpunvenLogic.commitNewConnexionToDeep();
			}
		} catch(Exception e) {
			if(Constantes.ISUSAEJBLOGICLAYER) {
				this.configuracionpunvenLogic.rollbackNewConnexionToDeep();
			}

			FuncionesSwing.manageException(this, e,logger,ConfiguracionPunVenConstantesFunciones.CLASSNAME);

		} finally {
			if(Constantes.ISUSAEJBLOGICLAYER) {
				this.configuracionpunvenLogic.closeNewConnexionToDeep();
			}
		}
	}

	public void jButtonFK_IdCuentaContableEfectivoConfiguracionPunVenActionPerformed(ActionEvent evt) throws Exception {
		try {
			if(Constantes.ISUSAEJBLOGICLAYER) {
				this.configuracionpunvenLogic.getNewConnexionToDeep("");
			}

			this.iNumeroPaginacionPagina=0;
			this.inicializarActualizarBindingConfiguracionPunVen(false,false);

			this.getConfiguracionPunVensFK_IdCuentaContableEfectivo();

			this.inicializarActualizarBindingConfiguracionPunVen(false);

			//if(ConfiguracionPunVenBeanSwingJInternalFrame.ISBINDING_MANUAL) {
			//this.inicializarActualizarBindingConfiguracionPunVen(false,false);
			//}

			if(Constantes.ISUSAEJBLOGICLAYER) {
				this.configuracionpunvenLogic.commitNewConnexionToDeep();
			}
		} catch(Exception e) {
			if(Constantes.ISUSAEJBLOGICLAYER) {
				this.configuracionpunvenLogic.rollbackNewConnexionToDeep();
			}

			FuncionesSwing.manageException(this, e,logger,ConfiguracionPunVenConstantesFunciones.CLASSNAME);

		} finally {
			if(Constantes.ISUSAEJBLOGICLAYER) {
				this.configuracionpunvenLogic.closeNewConnexionToDeep();
			}
		}
	}

	public void jButtonFK_IdCuentaContableIceConfiguracionPunVenActionPerformed(ActionEvent evt) throws Exception {
		try {
			if(Constantes.ISUSAEJBLOGICLAYER) {
				this.configuracionpunvenLogic.getNewConnexionToDeep("");
			}

			this.iNumeroPaginacionPagina=0;
			this.inicializarActualizarBindingConfiguracionPunVen(false,false);

			this.getConfiguracionPunVensFK_IdCuentaContableIce();

			this.inicializarActualizarBindingConfiguracionPunVen(false);

			//if(ConfiguracionPunVenBeanSwingJInternalFrame.ISBINDING_MANUAL) {
			//this.inicializarActualizarBindingConfiguracionPunVen(false,false);
			//}

			if(Constantes.ISUSAEJBLOGICLAYER) {
				this.configuracionpunvenLogic.commitNewConnexionToDeep();
			}
		} catch(Exception e) {
			if(Constantes.ISUSAEJBLOGICLAYER) {
				this.configuracionpunvenLogic.rollbackNewConnexionToDeep();
			}

			FuncionesSwing.manageException(this, e,logger,ConfiguracionPunVenConstantesFunciones.CLASSNAME);

		} finally {
			if(Constantes.ISUSAEJBLOGICLAYER) {
				this.configuracionpunvenLogic.closeNewConnexionToDeep();
			}
		}
	}

	public void jButtonFK_IdCuentaContableOtrosConfiguracionPunVenActionPerformed(ActionEvent evt) throws Exception {
		try {
			if(Constantes.ISUSAEJBLOGICLAYER) {
				this.configuracionpunvenLogic.getNewConnexionToDeep("");
			}

			this.iNumeroPaginacionPagina=0;
			this.inicializarActualizarBindingConfiguracionPunVen(false,false);

			this.getConfiguracionPunVensFK_IdCuentaContableOtros();

			this.inicializarActualizarBindingConfiguracionPunVen(false);

			//if(ConfiguracionPunVenBeanSwingJInternalFrame.ISBINDING_MANUAL) {
			//this.inicializarActualizarBindingConfiguracionPunVen(false,false);
			//}

			if(Constantes.ISUSAEJBLOGICLAYER) {
				this.configuracionpunvenLogic.commitNewConnexionToDeep();
			}
		} catch(Exception e) {
			if(Constantes.ISUSAEJBLOGICLAYER) {
				this.configuracionpunvenLogic.rollbackNewConnexionToDeep();
			}

			FuncionesSwing.manageException(this, e,logger,ConfiguracionPunVenConstantesFunciones.CLASSNAME);

		} finally {
			if(Constantes.ISUSAEJBLOGICLAYER) {
				this.configuracionpunvenLogic.closeNewConnexionToDeep();
			}
		}
	}

	public void jButtonFK_IdEmpresaConfiguracionPunVenActionPerformed(ActionEvent evt) throws Exception {
		try {
			if(Constantes.ISUSAEJBLOGICLAYER) {
				this.configuracionpunvenLogic.getNewConnexionToDeep("");
			}

			this.iNumeroPaginacionPagina=0;
			this.inicializarActualizarBindingConfiguracionPunVen(false,false);

			this.getConfiguracionPunVensFK_IdEmpresa();

			this.inicializarActualizarBindingConfiguracionPunVen(false);

			//if(ConfiguracionPunVenBeanSwingJInternalFrame.ISBINDING_MANUAL) {
			//this.inicializarActualizarBindingConfiguracionPunVen(false,false);
			//}

			if(Constantes.ISUSAEJBLOGICLAYER) {
				this.configuracionpunvenLogic.commitNewConnexionToDeep();
			}
		} catch(Exception e) {
			if(Constantes.ISUSAEJBLOGICLAYER) {
				this.configuracionpunvenLogic.rollbackNewConnexionToDeep();
			}

			FuncionesSwing.manageException(this, e,logger,ConfiguracionPunVenConstantesFunciones.CLASSNAME);

		} finally {
			if(Constantes.ISUSAEJBLOGICLAYER) {
				this.configuracionpunvenLogic.closeNewConnexionToDeep();
			}
		}
	}

	public void jButtonFK_IdFormatoFacturaConfiguracionPunVenActionPerformed(ActionEvent evt) throws Exception {
		try {
			if(Constantes.ISUSAEJBLOGICLAYER) {
				this.configuracionpunvenLogic.getNewConnexionToDeep("");
			}

			this.iNumeroPaginacionPagina=0;
			this.inicializarActualizarBindingConfiguracionPunVen(false,false);

			this.getConfiguracionPunVensFK_IdFormatoFactura();

			this.inicializarActualizarBindingConfiguracionPunVen(false);

			//if(ConfiguracionPunVenBeanSwingJInternalFrame.ISBINDING_MANUAL) {
			//this.inicializarActualizarBindingConfiguracionPunVen(false,false);
			//}

			if(Constantes.ISUSAEJBLOGICLAYER) {
				this.configuracionpunvenLogic.commitNewConnexionToDeep();
			}
		} catch(Exception e) {
			if(Constantes.ISUSAEJBLOGICLAYER) {
				this.configuracionpunvenLogic.rollbackNewConnexionToDeep();
			}

			FuncionesSwing.manageException(this, e,logger,ConfiguracionPunVenConstantesFunciones.CLASSNAME);

		} finally {
			if(Constantes.ISUSAEJBLOGICLAYER) {
				this.configuracionpunvenLogic.closeNewConnexionToDeep();
			}
		}
	}

	public void jButtonFK_IdFormatoNotaCreditoConfiguracionPunVenActionPerformed(ActionEvent evt) throws Exception {
		try {
			if(Constantes.ISUSAEJBLOGICLAYER) {
				this.configuracionpunvenLogic.getNewConnexionToDeep("");
			}

			this.iNumeroPaginacionPagina=0;
			this.inicializarActualizarBindingConfiguracionPunVen(false,false);

			this.getConfiguracionPunVensFK_IdFormatoNotaCredito();

			this.inicializarActualizarBindingConfiguracionPunVen(false);

			//if(ConfiguracionPunVenBeanSwingJInternalFrame.ISBINDING_MANUAL) {
			//this.inicializarActualizarBindingConfiguracionPunVen(false,false);
			//}

			if(Constantes.ISUSAEJBLOGICLAYER) {
				this.configuracionpunvenLogic.commitNewConnexionToDeep();
			}
		} catch(Exception e) {
			if(Constantes.ISUSAEJBLOGICLAYER) {
				this.configuracionpunvenLogic.rollbackNewConnexionToDeep();
			}

			FuncionesSwing.manageException(this, e,logger,ConfiguracionPunVenConstantesFunciones.CLASSNAME);

		} finally {
			if(Constantes.ISUSAEJBLOGICLAYER) {
				this.configuracionpunvenLogic.closeNewConnexionToDeep();
			}
		}
	}

	public void jButtonFK_IdFormatoNotaVentaConfiguracionPunVenActionPerformed(ActionEvent evt) throws Exception {
		try {
			if(Constantes.ISUSAEJBLOGICLAYER) {
				this.configuracionpunvenLogic.getNewConnexionToDeep("");
			}

			this.iNumeroPaginacionPagina=0;
			this.inicializarActualizarBindingConfiguracionPunVen(false,false);

			this.getConfiguracionPunVensFK_IdFormatoNotaVenta();

			this.inicializarActualizarBindingConfiguracionPunVen(false);

			//if(ConfiguracionPunVenBeanSwingJInternalFrame.ISBINDING_MANUAL) {
			//this.inicializarActualizarBindingConfiguracionPunVen(false,false);
			//}

			if(Constantes.ISUSAEJBLOGICLAYER) {
				this.configuracionpunvenLogic.commitNewConnexionToDeep();
			}
		} catch(Exception e) {
			if(Constantes.ISUSAEJBLOGICLAYER) {
				this.configuracionpunvenLogic.rollbackNewConnexionToDeep();
			}

			FuncionesSwing.manageException(this, e,logger,ConfiguracionPunVenConstantesFunciones.CLASSNAME);

		} finally {
			if(Constantes.ISUSAEJBLOGICLAYER) {
				this.configuracionpunvenLogic.closeNewConnexionToDeep();
			}
		}
	}

	public void jButtonFK_IdSucursalConfiguracionPunVenActionPerformed(ActionEvent evt) throws Exception {
		try {
			if(Constantes.ISUSAEJBLOGICLAYER) {
				this.configuracionpunvenLogic.getNewConnexionToDeep("");
			}

			this.iNumeroPaginacionPagina=0;
			this.inicializarActualizarBindingConfiguracionPunVen(false,false);

			this.getConfiguracionPunVensFK_IdSucursal();

			this.inicializarActualizarBindingConfiguracionPunVen(false);

			//if(ConfiguracionPunVenBeanSwingJInternalFrame.ISBINDING_MANUAL) {
			//this.inicializarActualizarBindingConfiguracionPunVen(false,false);
			//}

			if(Constantes.ISUSAEJBLOGICLAYER) {
				this.configuracionpunvenLogic.commitNewConnexionToDeep();
			}
		} catch(Exception e) {
			if(Constantes.ISUSAEJBLOGICLAYER) {
				this.configuracionpunvenLogic.rollbackNewConnexionToDeep();
			}

			FuncionesSwing.manageException(this, e,logger,ConfiguracionPunVenConstantesFunciones.CLASSNAME);

		} finally {
			if(Constantes.ISUSAEJBLOGICLAYER) {
				this.configuracionpunvenLogic.closeNewConnexionToDeep();
			}
		}
	}

	public void jButtonFK_IdTipoDocumentoFacturaConfiguracionPunVenActionPerformed(ActionEvent evt) throws Exception {
		try {
			if(Constantes.ISUSAEJBLOGICLAYER) {
				this.configuracionpunvenLogic.getNewConnexionToDeep("");
			}

			this.iNumeroPaginacionPagina=0;
			this.inicializarActualizarBindingConfiguracionPunVen(false,false);

			this.getConfiguracionPunVensFK_IdTipoDocumentoFactura();

			this.inicializarActualizarBindingConfiguracionPunVen(false);

			//if(ConfiguracionPunVenBeanSwingJInternalFrame.ISBINDING_MANUAL) {
			//this.inicializarActualizarBindingConfiguracionPunVen(false,false);
			//}

			if(Constantes.ISUSAEJBLOGICLAYER) {
				this.configuracionpunvenLogic.commitNewConnexionToDeep();
			}
		} catch(Exception e) {
			if(Constantes.ISUSAEJBLOGICLAYER) {
				this.configuracionpunvenLogic.rollbackNewConnexionToDeep();
			}

			FuncionesSwing.manageException(this, e,logger,ConfiguracionPunVenConstantesFunciones.CLASSNAME);

		} finally {
			if(Constantes.ISUSAEJBLOGICLAYER) {
				this.configuracionpunvenLogic.closeNewConnexionToDeep();
			}
		}
	}

	public void jButtonFK_IdTipoDocumentoNotaCreditoConfiguracionPunVenActionPerformed(ActionEvent evt) throws Exception {
		try {
			if(Constantes.ISUSAEJBLOGICLAYER) {
				this.configuracionpunvenLogic.getNewConnexionToDeep("");
			}

			this.iNumeroPaginacionPagina=0;
			this.inicializarActualizarBindingConfiguracionPunVen(false,false);

			this.getConfiguracionPunVensFK_IdTipoDocumentoNotaCredito();

			this.inicializarActualizarBindingConfiguracionPunVen(false);

			//if(ConfiguracionPunVenBeanSwingJInternalFrame.ISBINDING_MANUAL) {
			//this.inicializarActualizarBindingConfiguracionPunVen(false,false);
			//}

			if(Constantes.ISUSAEJBLOGICLAYER) {
				this.configuracionpunvenLogic.commitNewConnexionToDeep();
			}
		} catch(Exception e) {
			if(Constantes.ISUSAEJBLOGICLAYER) {
				this.configuracionpunvenLogic.rollbackNewConnexionToDeep();
			}

			FuncionesSwing.manageException(this, e,logger,ConfiguracionPunVenConstantesFunciones.CLASSNAME);

		} finally {
			if(Constantes.ISUSAEJBLOGICLAYER) {
				this.configuracionpunvenLogic.closeNewConnexionToDeep();
			}
		}
	}

	public void jButtonFK_IdTipoDocumentoNotaVentaConfiguracionPunVenActionPerformed(ActionEvent evt) throws Exception {
		try {
			if(Constantes.ISUSAEJBLOGICLAYER) {
				this.configuracionpunvenLogic.getNewConnexionToDeep("");
			}

			this.iNumeroPaginacionPagina=0;
			this.inicializarActualizarBindingConfiguracionPunVen(false,false);

			this.getConfiguracionPunVensFK_IdTipoDocumentoNotaVenta();

			this.inicializarActualizarBindingConfiguracionPunVen(false);

			//if(ConfiguracionPunVenBeanSwingJInternalFrame.ISBINDING_MANUAL) {
			//this.inicializarActualizarBindingConfiguracionPunVen(false,false);
			//}

			if(Constantes.ISUSAEJBLOGICLAYER) {
				this.configuracionpunvenLogic.commitNewConnexionToDeep();
			}
		} catch(Exception e) {
			if(Constantes.ISUSAEJBLOGICLAYER) {
				this.configuracionpunvenLogic.rollbackNewConnexionToDeep();
			}

			FuncionesSwing.manageException(this, e,logger,ConfiguracionPunVenConstantesFunciones.CLASSNAME);

		} finally {
			if(Constantes.ISUSAEJBLOGICLAYER) {
				this.configuracionpunvenLogic.closeNewConnexionToDeep();
			}
		}
	}

	public void jButtonFK_IdTipoDocumentoTarjetaCreditoConfiguracionPunVenActionPerformed(ActionEvent evt) throws Exception {
		try {
			if(Constantes.ISUSAEJBLOGICLAYER) {
				this.configuracionpunvenLogic.getNewConnexionToDeep("");
			}

			this.iNumeroPaginacionPagina=0;
			this.inicializarActualizarBindingConfiguracionPunVen(false,false);

			this.getConfiguracionPunVensFK_IdTipoDocumentoTarjetaCredito();

			this.inicializarActualizarBindingConfiguracionPunVen(false);

			//if(ConfiguracionPunVenBeanSwingJInternalFrame.ISBINDING_MANUAL) {
			//this.inicializarActualizarBindingConfiguracionPunVen(false,false);
			//}

			if(Constantes.ISUSAEJBLOGICLAYER) {
				this.configuracionpunvenLogic.commitNewConnexionToDeep();
			}
		} catch(Exception e) {
			if(Constantes.ISUSAEJBLOGICLAYER) {
				this.configuracionpunvenLogic.rollbackNewConnexionToDeep();
			}

			FuncionesSwing.manageException(this, e,logger,ConfiguracionPunVenConstantesFunciones.CLASSNAME);

		} finally {
			if(Constantes.ISUSAEJBLOGICLAYER) {
				this.configuracionpunvenLogic.closeNewConnexionToDeep();
			}
		}
	}

	public void jButtonFK_IdTransaccionCuentaFacturaConfiguracionPunVenActionPerformed(ActionEvent evt) throws Exception {
		try {
			if(Constantes.ISUSAEJBLOGICLAYER) {
				this.configuracionpunvenLogic.getNewConnexionToDeep("");
			}

			this.iNumeroPaginacionPagina=0;
			this.inicializarActualizarBindingConfiguracionPunVen(false,false);

			this.getConfiguracionPunVensFK_IdTransaccionCuentaFactura();

			this.inicializarActualizarBindingConfiguracionPunVen(false);

			//if(ConfiguracionPunVenBeanSwingJInternalFrame.ISBINDING_MANUAL) {
			//this.inicializarActualizarBindingConfiguracionPunVen(false,false);
			//}

			if(Constantes.ISUSAEJBLOGICLAYER) {
				this.configuracionpunvenLogic.commitNewConnexionToDeep();
			}
		} catch(Exception e) {
			if(Constantes.ISUSAEJBLOGICLAYER) {
				this.configuracionpunvenLogic.rollbackNewConnexionToDeep();
			}

			FuncionesSwing.manageException(this, e,logger,ConfiguracionPunVenConstantesFunciones.CLASSNAME);

		} finally {
			if(Constantes.ISUSAEJBLOGICLAYER) {
				this.configuracionpunvenLogic.closeNewConnexionToDeep();
			}
		}
	}

	public void jButtonFK_IdTransaccionCuentaNotaCreditoConfiguracionPunVenActionPerformed(ActionEvent evt) throws Exception {
		try {
			if(Constantes.ISUSAEJBLOGICLAYER) {
				this.configuracionpunvenLogic.getNewConnexionToDeep("");
			}

			this.iNumeroPaginacionPagina=0;
			this.inicializarActualizarBindingConfiguracionPunVen(false,false);

			this.getConfiguracionPunVensFK_IdTransaccionCuentaNotaCredito();

			this.inicializarActualizarBindingConfiguracionPunVen(false);

			//if(ConfiguracionPunVenBeanSwingJInternalFrame.ISBINDING_MANUAL) {
			//this.inicializarActualizarBindingConfiguracionPunVen(false,false);
			//}

			if(Constantes.ISUSAEJBLOGICLAYER) {
				this.configuracionpunvenLogic.commitNewConnexionToDeep();
			}
		} catch(Exception e) {
			if(Constantes.ISUSAEJBLOGICLAYER) {
				this.configuracionpunvenLogic.rollbackNewConnexionToDeep();
			}

			FuncionesSwing.manageException(this, e,logger,ConfiguracionPunVenConstantesFunciones.CLASSNAME);

		} finally {
			if(Constantes.ISUSAEJBLOGICLAYER) {
				this.configuracionpunvenLogic.closeNewConnexionToDeep();
			}
		}
	}

	public void jButtonFK_IdTransaccionCuentaNotaVentaConfiguracionPunVenActionPerformed(ActionEvent evt) throws Exception {
		try {
			if(Constantes.ISUSAEJBLOGICLAYER) {
				this.configuracionpunvenLogic.getNewConnexionToDeep("");
			}

			this.iNumeroPaginacionPagina=0;
			this.inicializarActualizarBindingConfiguracionPunVen(false,false);

			this.getConfiguracionPunVensFK_IdTransaccionCuentaNotaVenta();

			this.inicializarActualizarBindingConfiguracionPunVen(false);

			//if(ConfiguracionPunVenBeanSwingJInternalFrame.ISBINDING_MANUAL) {
			//this.inicializarActualizarBindingConfiguracionPunVen(false,false);
			//}

			if(Constantes.ISUSAEJBLOGICLAYER) {
				this.configuracionpunvenLogic.commitNewConnexionToDeep();
			}
		} catch(Exception e) {
			if(Constantes.ISUSAEJBLOGICLAYER) {
				this.configuracionpunvenLogic.rollbackNewConnexionToDeep();
			}

			FuncionesSwing.manageException(this, e,logger,ConfiguracionPunVenConstantesFunciones.CLASSNAME);

		} finally {
			if(Constantes.ISUSAEJBLOGICLAYER) {
				this.configuracionpunvenLogic.closeNewConnexionToDeep();
			}
		}
	}

	public void jButtonFK_IdTransaccionFacturaConfiguracionPunVenActionPerformed(ActionEvent evt) throws Exception {
		try {
			if(Constantes.ISUSAEJBLOGICLAYER) {
				this.configuracionpunvenLogic.getNewConnexionToDeep("");
			}

			this.iNumeroPaginacionPagina=0;
			this.inicializarActualizarBindingConfiguracionPunVen(false,false);

			this.getConfiguracionPunVensFK_IdTransaccionFactura();

			this.inicializarActualizarBindingConfiguracionPunVen(false);

			//if(ConfiguracionPunVenBeanSwingJInternalFrame.ISBINDING_MANUAL) {
			//this.inicializarActualizarBindingConfiguracionPunVen(false,false);
			//}

			if(Constantes.ISUSAEJBLOGICLAYER) {
				this.configuracionpunvenLogic.commitNewConnexionToDeep();
			}
		} catch(Exception e) {
			if(Constantes.ISUSAEJBLOGICLAYER) {
				this.configuracionpunvenLogic.rollbackNewConnexionToDeep();
			}

			FuncionesSwing.manageException(this, e,logger,ConfiguracionPunVenConstantesFunciones.CLASSNAME);

		} finally {
			if(Constantes.ISUSAEJBLOGICLAYER) {
				this.configuracionpunvenLogic.closeNewConnexionToDeep();
			}
		}
	}

	public void jButtonFK_IdTransaccionNotaCreditoConfiguracionPunVenActionPerformed(ActionEvent evt) throws Exception {
		try {
			if(Constantes.ISUSAEJBLOGICLAYER) {
				this.configuracionpunvenLogic.getNewConnexionToDeep("");
			}

			this.iNumeroPaginacionPagina=0;
			this.inicializarActualizarBindingConfiguracionPunVen(false,false);

			this.getConfiguracionPunVensFK_IdTransaccionNotaCredito();

			this.inicializarActualizarBindingConfiguracionPunVen(false);

			//if(ConfiguracionPunVenBeanSwingJInternalFrame.ISBINDING_MANUAL) {
			//this.inicializarActualizarBindingConfiguracionPunVen(false,false);
			//}

			if(Constantes.ISUSAEJBLOGICLAYER) {
				this.configuracionpunvenLogic.commitNewConnexionToDeep();
			}
		} catch(Exception e) {
			if(Constantes.ISUSAEJBLOGICLAYER) {
				this.configuracionpunvenLogic.rollbackNewConnexionToDeep();
			}

			FuncionesSwing.manageException(this, e,logger,ConfiguracionPunVenConstantesFunciones.CLASSNAME);

		} finally {
			if(Constantes.ISUSAEJBLOGICLAYER) {
				this.configuracionpunvenLogic.closeNewConnexionToDeep();
			}
		}
	}

	public void jButtonFK_IdTransaccionNotaVentaConfiguracionPunVenActionPerformed(ActionEvent evt) throws Exception {
		try {
			if(Constantes.ISUSAEJBLOGICLAYER) {
				this.configuracionpunvenLogic.getNewConnexionToDeep("");
			}

			this.iNumeroPaginacionPagina=0;
			this.inicializarActualizarBindingConfiguracionPunVen(false,false);

			this.getConfiguracionPunVensFK_IdTransaccionNotaVenta();

			this.inicializarActualizarBindingConfiguracionPunVen(false);

			//if(ConfiguracionPunVenBeanSwingJInternalFrame.ISBINDING_MANUAL) {
			//this.inicializarActualizarBindingConfiguracionPunVen(false,false);
			//}

			if(Constantes.ISUSAEJBLOGICLAYER) {
				this.configuracionpunvenLogic.commitNewConnexionToDeep();
			}
		} catch(Exception e) {
			if(Constantes.ISUSAEJBLOGICLAYER) {
				this.configuracionpunvenLogic.rollbackNewConnexionToDeep();
			}

			FuncionesSwing.manageException(this, e,logger,ConfiguracionPunVenConstantesFunciones.CLASSNAME);

		} finally {
			if(Constantes.ISUSAEJBLOGICLAYER) {
				this.configuracionpunvenLogic.closeNewConnexionToDeep();
			}
		}
	}

	
	public void closingInternalFrameConfiguracionPunVen() {
		if(this.jInternalFrameDetalleFormConfiguracionPunVen!=null) {
			
		
		
		}
		
		if(this.jInternalFrameDetalleFormConfiguracionPunVen!=null) {
			this.jInternalFrameDetalleFormConfiguracionPunVen.setVisible(false);	    			
			this.jInternalFrameDetalleFormConfiguracionPunVen.dispose();
			this.jInternalFrameDetalleFormConfiguracionPunVen=null;
		}
		
		
		if(this.jInternalFrameReporteDinamicoConfiguracionPunVen!=null) {
			this.jInternalFrameReporteDinamicoConfiguracionPunVen.setVisible(false);	    			
			this.jInternalFrameReporteDinamicoConfiguracionPunVen.dispose();
			this.jInternalFrameReporteDinamicoConfiguracionPunVen=null;
		}
		
		if(this.jInternalFrameImportacionConfiguracionPunVen!=null) {
			this.jInternalFrameImportacionConfiguracionPunVen.setVisible(false);	    			
			this.jInternalFrameImportacionConfiguracionPunVen.dispose();
			this.jInternalFrameImportacionConfiguracionPunVen=null;
		}		
		
		
		this.setVisible(false);
		this.dispose();
		//this=null;
	}
	
	
	
	public void jButtonActionPerformedGeneral(String sTipo,ActionEvent evt) { 	  
		try {			
			this.startProcessConfiguracionPunVen();
			
			ConfiguracionPunVenBeanSwingJInternalFrameAdditional.procesarEventosVista(this.parametroGeneralUsuario,this.moduloActual,this.opcionActual,this.usuarioActual,this,FuncionTipo.BEFORE,ControlTipo.BUTTON,EventoTipo.CLIC,EventoSubTipo.CLICKED,sTipo,this.configuracionpunven,new Object(),this.configuracionpunvenParameterGeneral,this.configuracionpunvenReturnGeneral);
			
			
			if(sTipo.equals("NuevoConfiguracionPunVen")) {
				jButtonNuevoConfiguracionPunVenActionPerformed(evt,false);
			} else if(sTipo.equals("DuplicarConfiguracionPunVen")) {
				jButtonDuplicarConfiguracionPunVenActionPerformed(evt,false);
			} else if(sTipo.equals("CopiarConfiguracionPunVen")) {
				jButtonCopiarConfiguracionPunVenActionPerformed(evt);
			} else if(sTipo.equals("VerFormConfiguracionPunVen")) {
				jButtonVerFormConfiguracionPunVenActionPerformed(evt);
			} else if(sTipo.equals("NuevoToolBarConfiguracionPunVen")) {
				jButtonNuevoConfiguracionPunVenActionPerformed(evt,false);
			} else if(sTipo.equals("DuplicarToolBarConfiguracionPunVen")) {
				jButtonDuplicarConfiguracionPunVenActionPerformed(evt,false);
			} else if(sTipo.equals("MenuItemNuevoConfiguracionPunVen")) {
				jButtonNuevoConfiguracionPunVenActionPerformed(evt,false);
			} else if(sTipo.equals("MenuItemDuplicarConfiguracionPunVen")) {
				jButtonDuplicarConfiguracionPunVenActionPerformed(evt,false);
			} else if(sTipo.equals("NuevoRelacionesConfiguracionPunVen")) {
				jButtonNuevoConfiguracionPunVenActionPerformed(evt,true);
			} else if(sTipo.equals("NuevoRelacionesToolBarConfiguracionPunVen")) {
				jButtonNuevoConfiguracionPunVenActionPerformed(evt,true);
			} else if(sTipo.equals("MenuItemNuevoRelacionesConfiguracionPunVen")) {
				jButtonNuevoConfiguracionPunVenActionPerformed(evt,true);
			} else if(sTipo.equals("ModificarConfiguracionPunVen")) {
				jButtonModificarConfiguracionPunVenActionPerformed(evt);
			} else if(sTipo.equals("ModificarToolBarConfiguracionPunVen")) {
				jButtonModificarConfiguracionPunVenActionPerformed(evt);
			} else if(sTipo.equals("MenuItemModificarConfiguracionPunVen")) {
				jButtonModificarConfiguracionPunVenActionPerformed(evt);
			} else if(sTipo.equals("ActualizarConfiguracionPunVen")) {
				jButtonActualizarConfiguracionPunVenActionPerformed(evt);
			} else if(sTipo.equals("ActualizarToolBarConfiguracionPunVen")) {
				jButtonActualizarConfiguracionPunVenActionPerformed(evt);
			} else if(sTipo.equals("MenuItemActualizarConfiguracionPunVen")) {
				jButtonActualizarConfiguracionPunVenActionPerformed(evt);
			} else if(sTipo.equals("EliminarConfiguracionPunVen")) {
				jButtonEliminarConfiguracionPunVenActionPerformed(evt);
			} else if(sTipo.equals("EliminarToolBarConfiguracionPunVen")) {
				jButtonEliminarConfiguracionPunVenActionPerformed(evt);
			} else if(sTipo.equals("MenuItemEliminarConfiguracionPunVen")) {
				jButtonEliminarConfiguracionPunVenActionPerformed(evt);
			} else if(sTipo.equals("CancelarConfiguracionPunVen")) {
				jButtonCancelarConfiguracionPunVenActionPerformed(evt);
			} else if(sTipo.equals("CancelarToolBarConfiguracionPunVen")) {
				jButtonCancelarConfiguracionPunVenActionPerformed(evt);
			} else if(sTipo.equals("MenuItemCancelarConfiguracionPunVen")) {
				jButtonCancelarConfiguracionPunVenActionPerformed(evt);
			} else if(sTipo.equals("CerrarConfiguracionPunVen")) {
				jButtonCerrarConfiguracionPunVenActionPerformed(evt);
			} else if(sTipo.equals("CerrarToolBarConfiguracionPunVen")) {
				jButtonCerrarConfiguracionPunVenActionPerformed(evt);
			} else if(sTipo.equals("MenuItemCerrarConfiguracionPunVen")) {
				jButtonCerrarConfiguracionPunVenActionPerformed(evt);
			} else if(sTipo.equals("MostrarOcultarToolBarConfiguracionPunVen")) {
				jButtonMostrarOcultarConfiguracionPunVenActionPerformed(evt);
			} else if(sTipo.equals("MenuItemDetalleCerrarConfiguracionPunVen")) {
				jButtonCancelarConfiguracionPunVenActionPerformed(evt);
			} else if(sTipo.equals("GuardarCambiosConfiguracionPunVen")) {
				jButtonGuardarCambiosConfiguracionPunVenActionPerformed(evt);
			} else if(sTipo.equals("GuardarCambiosToolBarConfiguracionPunVen")) {
				jButtonGuardarCambiosConfiguracionPunVenActionPerformed(evt);
			} else if(sTipo.equals("CopiarToolBarConfiguracionPunVen")) {
				jButtonCopiarConfiguracionPunVenActionPerformed(evt);
			} else if(sTipo.equals("VerFormToolBarConfiguracionPunVen")) {
				jButtonVerFormConfiguracionPunVenActionPerformed(evt);
			} else if(sTipo.equals("MenuItemGuardarCambiosConfiguracionPunVen")) {
				jButtonGuardarCambiosConfiguracionPunVenActionPerformed(evt);
			} else if(sTipo.equals("MenuItemCopiarConfiguracionPunVen")) {
				jButtonCopiarConfiguracionPunVenActionPerformed(evt);
			} else if(sTipo.equals("MenuItemVerFormConfiguracionPunVen")) {
				jButtonVerFormConfiguracionPunVenActionPerformed(evt);
			} else if(sTipo.equals("GuardarCambiosTablaConfiguracionPunVen")) {
				jButtonGuardarCambiosConfiguracionPunVenActionPerformed(evt);
			} else if(sTipo.equals("GuardarCambiosTablaToolBarConfiguracionPunVen")) {
				jButtonGuardarCambiosConfiguracionPunVenActionPerformed(evt);
			} else if(sTipo.equals("MenuItemGuardarCambiosTablaConfiguracionPunVen")) {
				jButtonGuardarCambiosConfiguracionPunVenActionPerformed(evt);
			} else if(sTipo.equals("RecargarInformacionConfiguracionPunVen")) {
				jButtonRecargarInformacionConfiguracionPunVenActionPerformed(evt);
			} else if(sTipo.equals("RecargarInformacionToolBarConfiguracionPunVen")) {
				jButtonRecargarInformacionConfiguracionPunVenActionPerformed(evt);
			} else if(sTipo.equals("MenuItemRecargarInformacionConfiguracionPunVen")) {
				jButtonRecargarInformacionConfiguracionPunVenActionPerformed(evt);
			}
			else if(sTipo.equals("AnterioresConfiguracionPunVen")) {
				jButtonAnterioresConfiguracionPunVenActionPerformed(evt);
			} else if(sTipo.equals("AnterioresToolBarConfiguracionPunVen")) {
				jButtonAnterioresConfiguracionPunVenActionPerformed(evt);
			} else if(sTipo.equals("MenuItemAnterioreConfiguracionPunVen")) {
				jButtonAnterioresConfiguracionPunVenActionPerformed(evt);
			} else if(sTipo.equals("SiguientesConfiguracionPunVen")) {
				jButtonSiguientesConfiguracionPunVenActionPerformed(evt);
			} else if(sTipo.equals("SiguientesToolBarConfiguracionPunVen")) {
				jButtonSiguientesConfiguracionPunVenActionPerformed(evt);
			} else if(sTipo.equals("MenuItemSiguientesConfiguracionPunVen")) {
				jButtonSiguientesConfiguracionPunVenActionPerformed(evt);
			} else if(sTipo.equals("MenuItemAbrirOrderByConfiguracionPunVen") || sTipo.equals("MenuItemDetalleAbrirOrderByConfiguracionPunVen")) {
				jButtonAbrirOrderByConfiguracionPunVenActionPerformed(evt);
			} else if(sTipo.equals("MenuItemMostrarOcultarConfiguracionPunVen") || sTipo.equals("MenuItemDetalleMostrarOcultarConfiguracionPunVen")) {
				jButtonMostrarOcultarConfiguracionPunVenActionPerformed(evt);
			} else if(sTipo.equals("NuevoGuardarCambiosConfiguracionPunVen")) {
				jButtonNuevoGuardarCambiosConfiguracionPunVenActionPerformed(evt);
			} else if(sTipo.equals("NuevoGuardarCambiosToolBarConfiguracionPunVen")) {
				jButtonNuevoGuardarCambiosConfiguracionPunVenActionPerformed(evt);
			} else if(sTipo.equals("MenuItemNuevoGuardarCambiosConfiguracionPunVen")) {
				jButtonNuevoGuardarCambiosConfiguracionPunVenActionPerformed(evt);
			} 
			else if(sTipo.equals("CerrarReporteDinamicoConfiguracionPunVen")) {
				jButtonCerrarReporteDinamicoConfiguracionPunVenActionPerformed(evt);
			} else if(sTipo.equals("GenerarReporteDinamicoConfiguracionPunVen")) {
				jButtonGenerarReporteDinamicoConfiguracionPunVenActionPerformed(evt);
			} else if(sTipo.equals("GenerarExcelReporteDinamicoConfiguracionPunVen")) {
				
				jButtonGenerarExcelReporteDinamicoConfiguracionPunVenActionPerformed(evt);
				
			} else if(sTipo.equals("CerrarImportacionConfiguracionPunVen")) {
				jButtonCerrarImportacionConfiguracionPunVenActionPerformed(evt);
			} else if(sTipo.equals("GenerarImportacionConfiguracionPunVen")) {
				
				jButtonGenerarImportacionConfiguracionPunVenActionPerformed(evt);
				
			} else if(sTipo.equals("AbrirImportacionConfiguracionPunVen")) {
				
				jButtonAbrirImportacionConfiguracionPunVenActionPerformed(evt);
				
			} else if(sTipo.equals("TiposAccionesConfiguracionPunVen")) {
				jComboBoxTiposAccionesConfiguracionPunVenActionListener(evt,false);
			} else if(sTipo.equals("TiposRelacionesConfiguracionPunVen")) {
				jComboBoxTiposRelacionesConfiguracionPunVenActionListener(evt);
			} else if(sTipo.equals("TiposAccionesFormularioConfiguracionPunVen")) {
				jComboBoxTiposAccionesConfiguracionPunVenActionListener(evt,true);
			} else if(sTipo.equals("TiposSeleccionarConfiguracionPunVen")) {
				
				jComboBoxTiposSeleccionarConfiguracionPunVenActionListener(evt);
				
			} else if(sTipo.equals("ValorCampoGeneralConfiguracionPunVen")) {
				jTextFieldValorCampoGeneralConfiguracionPunVenActionListener(evt);
			}
			
			
			else if(sTipo.equals("AbrirOrderByConfiguracionPunVen")) {
				jButtonAbrirOrderByConfiguracionPunVenActionPerformed(evt);
				
			} else if(sTipo.equals("AbrirOrderByToolBarConfiguracionPunVen")) {
				jButtonAbrirOrderByConfiguracionPunVenActionPerformed(evt);
				
			} else if(sTipo.equals("CerrarOrderByConfiguracionPunVen")) {
				jButtonCerrarOrderByConfiguracionPunVenActionPerformed(evt);
			} 
						
			
			//BUSQUEDA GENERAL CAMPO
			else if(sTipo.equals("idConfiguracionPunVenBusqueda")) {
				this.jButtonidConfiguracionPunVenBusquedaActionPerformed(evt);
			}
			//ACTUALIZAR CAMPO
			else if(sTipo.equals("id_empresaConfiguracionPunVenUpdate")) {
				this.jButtonid_empresaConfiguracionPunVenUpdateActionPerformed(evt);
			}
			//BUSQUEDA GENERAL CAMPO
			else if(sTipo.equals("id_empresaConfiguracionPunVenBusqueda")) {
				this.jButtonid_empresaConfiguracionPunVenBusquedaActionPerformed(evt);
			}
			//ACTUALIZAR CAMPO
			else if(sTipo.equals("id_sucursalConfiguracionPunVenUpdate")) {
				this.jButtonid_sucursalConfiguracionPunVenUpdateActionPerformed(evt);
			}
			//BUSQUEDA GENERAL CAMPO
			else if(sTipo.equals("id_sucursalConfiguracionPunVenBusqueda")) {
				this.jButtonid_sucursalConfiguracionPunVenBusquedaActionPerformed(evt);
			}
			//ACTUALIZAR CAMPO
			else if(sTipo.equals("id_bodegaConfiguracionPunVenUpdate")) {
				this.jButtonid_bodegaConfiguracionPunVenUpdateActionPerformed(evt);
			}
			//BUSQUEDA GENERAL CAMPO
			else if(sTipo.equals("id_bodegaConfiguracionPunVenBusqueda")) {
				this.jButtonid_bodegaConfiguracionPunVenBusquedaActionPerformed(evt);
			}
			//ACTUALIZAR CAMPO
			else if(sTipo.equals("id_cuenta_contable_efectivoConfiguracionPunVenUpdate")) {
				this.jButtonid_cuenta_contable_efectivoConfiguracionPunVenUpdateActionPerformed(evt);
			}
			//BUSQUEDA GENERAL CAMPO
			else if(sTipo.equals("id_cuenta_contable_efectivoConfiguracionPunVenBusqueda")) {
				this.jButtonid_cuenta_contable_efectivoConfiguracionPunVenBusquedaActionPerformed(evt);
			}
			//ACTUALIZAR CAMPO
			else if(sTipo.equals("id_cuenta_contable_iceConfiguracionPunVenUpdate")) {
				this.jButtonid_cuenta_contable_iceConfiguracionPunVenUpdateActionPerformed(evt);
			}
			//BUSQUEDA GENERAL CAMPO
			else if(sTipo.equals("id_cuenta_contable_iceConfiguracionPunVenBusqueda")) {
				this.jButtonid_cuenta_contable_iceConfiguracionPunVenBusquedaActionPerformed(evt);
			}
			//ACTUALIZAR CAMPO
			else if(sTipo.equals("id_cuenta_contable_otrosConfiguracionPunVenUpdate")) {
				this.jButtonid_cuenta_contable_otrosConfiguracionPunVenUpdateActionPerformed(evt);
			}
			//BUSQUEDA GENERAL CAMPO
			else if(sTipo.equals("id_cuenta_contable_otrosConfiguracionPunVenBusqueda")) {
				this.jButtonid_cuenta_contable_otrosConfiguracionPunVenBusquedaActionPerformed(evt);
			}
			//BUSQUEDA CAMPO
			else if(sTipo.equals("id_cliente_consumidor_finalConfiguracionPunVen")) {
				this.jButtonid_cliente_consumidor_finalConfiguracionPunVenActionPerformed(evt);
			}
			//ACTUALIZAR CAMPO
			else if(sTipo.equals("id_cliente_consumidor_finalConfiguracionPunVenUpdate")) {
				this.jButtonid_cliente_consumidor_finalConfiguracionPunVenUpdateActionPerformed(evt);
			}
			//BUSQUEDA GENERAL CAMPO
			else if(sTipo.equals("id_cliente_consumidor_finalConfiguracionPunVenBusqueda")) {
				this.jButtonid_cliente_consumidor_finalConfiguracionPunVenBusquedaActionPerformed(evt);
			}
			//ACTUALIZAR CAMPO
			else if(sTipo.equals("id_tipo_documento_facturaConfiguracionPunVenUpdate")) {
				this.jButtonid_tipo_documento_facturaConfiguracionPunVenUpdateActionPerformed(evt);
			}
			//BUSQUEDA GENERAL CAMPO
			else if(sTipo.equals("id_tipo_documento_facturaConfiguracionPunVenBusqueda")) {
				this.jButtonid_tipo_documento_facturaConfiguracionPunVenBusquedaActionPerformed(evt);
			}
			//ACTUALIZAR CAMPO
			else if(sTipo.equals("id_tipo_documento_nota_ventaConfiguracionPunVenUpdate")) {
				this.jButtonid_tipo_documento_nota_ventaConfiguracionPunVenUpdateActionPerformed(evt);
			}
			//BUSQUEDA GENERAL CAMPO
			else if(sTipo.equals("id_tipo_documento_nota_ventaConfiguracionPunVenBusqueda")) {
				this.jButtonid_tipo_documento_nota_ventaConfiguracionPunVenBusquedaActionPerformed(evt);
			}
			//ACTUALIZAR CAMPO
			else if(sTipo.equals("id_tipo_documento_nota_creditoConfiguracionPunVenUpdate")) {
				this.jButtonid_tipo_documento_nota_creditoConfiguracionPunVenUpdateActionPerformed(evt);
			}
			//BUSQUEDA GENERAL CAMPO
			else if(sTipo.equals("id_tipo_documento_nota_creditoConfiguracionPunVenBusqueda")) {
				this.jButtonid_tipo_documento_nota_creditoConfiguracionPunVenBusquedaActionPerformed(evt);
			}
			//ACTUALIZAR CAMPO
			else if(sTipo.equals("id_tipo_documento_tarjeta_creditoConfiguracionPunVenUpdate")) {
				this.jButtonid_tipo_documento_tarjeta_creditoConfiguracionPunVenUpdateActionPerformed(evt);
			}
			//BUSQUEDA GENERAL CAMPO
			else if(sTipo.equals("id_tipo_documento_tarjeta_creditoConfiguracionPunVenBusqueda")) {
				this.jButtonid_tipo_documento_tarjeta_creditoConfiguracionPunVenBusquedaActionPerformed(evt);
			}
			//ACTUALIZAR CAMPO
			else if(sTipo.equals("id_formato_facturaConfiguracionPunVenUpdate")) {
				this.jButtonid_formato_facturaConfiguracionPunVenUpdateActionPerformed(evt);
			}
			//BUSQUEDA GENERAL CAMPO
			else if(sTipo.equals("id_formato_facturaConfiguracionPunVenBusqueda")) {
				this.jButtonid_formato_facturaConfiguracionPunVenBusquedaActionPerformed(evt);
			}
			//ACTUALIZAR CAMPO
			else if(sTipo.equals("id_formato_nota_ventaConfiguracionPunVenUpdate")) {
				this.jButtonid_formato_nota_ventaConfiguracionPunVenUpdateActionPerformed(evt);
			}
			//BUSQUEDA GENERAL CAMPO
			else if(sTipo.equals("id_formato_nota_ventaConfiguracionPunVenBusqueda")) {
				this.jButtonid_formato_nota_ventaConfiguracionPunVenBusquedaActionPerformed(evt);
			}
			//ACTUALIZAR CAMPO
			else if(sTipo.equals("id_formato_nota_creditoConfiguracionPunVenUpdate")) {
				this.jButtonid_formato_nota_creditoConfiguracionPunVenUpdateActionPerformed(evt);
			}
			//BUSQUEDA GENERAL CAMPO
			else if(sTipo.equals("id_formato_nota_creditoConfiguracionPunVenBusqueda")) {
				this.jButtonid_formato_nota_creditoConfiguracionPunVenBusquedaActionPerformed(evt);
			}
			//ACTUALIZAR CAMPO
			else if(sTipo.equals("id_transaccion_facturaConfiguracionPunVenUpdate")) {
				this.jButtonid_transaccion_facturaConfiguracionPunVenUpdateActionPerformed(evt);
			}
			//BUSQUEDA GENERAL CAMPO
			else if(sTipo.equals("id_transaccion_facturaConfiguracionPunVenBusqueda")) {
				this.jButtonid_transaccion_facturaConfiguracionPunVenBusquedaActionPerformed(evt);
			}
			//ACTUALIZAR CAMPO
			else if(sTipo.equals("id_transaccion_nota_ventaConfiguracionPunVenUpdate")) {
				this.jButtonid_transaccion_nota_ventaConfiguracionPunVenUpdateActionPerformed(evt);
			}
			//BUSQUEDA GENERAL CAMPO
			else if(sTipo.equals("id_transaccion_nota_ventaConfiguracionPunVenBusqueda")) {
				this.jButtonid_transaccion_nota_ventaConfiguracionPunVenBusquedaActionPerformed(evt);
			}
			//ACTUALIZAR CAMPO
			else if(sTipo.equals("id_transaccion_nota_creditoConfiguracionPunVenUpdate")) {
				this.jButtonid_transaccion_nota_creditoConfiguracionPunVenUpdateActionPerformed(evt);
			}
			//BUSQUEDA GENERAL CAMPO
			else if(sTipo.equals("id_transaccion_nota_creditoConfiguracionPunVenBusqueda")) {
				this.jButtonid_transaccion_nota_creditoConfiguracionPunVenBusquedaActionPerformed(evt);
			}
			//ACTUALIZAR CAMPO
			else if(sTipo.equals("id_transaccion_cuenta_facturaConfiguracionPunVenUpdate")) {
				this.jButtonid_transaccion_cuenta_facturaConfiguracionPunVenUpdateActionPerformed(evt);
			}
			//BUSQUEDA GENERAL CAMPO
			else if(sTipo.equals("id_transaccion_cuenta_facturaConfiguracionPunVenBusqueda")) {
				this.jButtonid_transaccion_cuenta_facturaConfiguracionPunVenBusquedaActionPerformed(evt);
			}
			//ACTUALIZAR CAMPO
			else if(sTipo.equals("id_transaccion_cuenta_nota_ventaConfiguracionPunVenUpdate")) {
				this.jButtonid_transaccion_cuenta_nota_ventaConfiguracionPunVenUpdateActionPerformed(evt);
			}
			//BUSQUEDA GENERAL CAMPO
			else if(sTipo.equals("id_transaccion_cuenta_nota_ventaConfiguracionPunVenBusqueda")) {
				this.jButtonid_transaccion_cuenta_nota_ventaConfiguracionPunVenBusquedaActionPerformed(evt);
			}
			//ACTUALIZAR CAMPO
			else if(sTipo.equals("id_transaccion_cuenta_nota_creditoConfiguracionPunVenUpdate")) {
				this.jButtonid_transaccion_cuenta_nota_creditoConfiguracionPunVenUpdateActionPerformed(evt);
			}
			//BUSQUEDA GENERAL CAMPO
			else if(sTipo.equals("id_transaccion_cuenta_nota_creditoConfiguracionPunVenBusqueda")) {
				this.jButtonid_transaccion_cuenta_nota_creditoConfiguracionPunVenBusquedaActionPerformed(evt);
			}
			
			
			else if(sTipo.equals("id_cliente_consumidor_finalConfiguracionPunVen")) {
				this.jButtonid_cliente_consumidor_finalConfiguracionPunVenActionPerformed(evt);
			}
			
			
			else if(sTipo.equals("FK_IdBodegaConfiguracionPunVen")) {
				this.jButtonFK_IdBodegaConfiguracionPunVenActionPerformed(evt);
			}
			else if(sTipo.equals("FK_IdClienteConsumidorFinalConfiguracionPunVen")) {
				this.jButtonFK_IdClienteConsumidorFinalConfiguracionPunVenActionPerformed(evt);
			}
			else if(sTipo.equals("FK_IdCuentaContableEfectivoConfiguracionPunVen")) {
				this.jButtonFK_IdCuentaContableEfectivoConfiguracionPunVenActionPerformed(evt);
			}
			else if(sTipo.equals("FK_IdCuentaContableIceConfiguracionPunVen")) {
				this.jButtonFK_IdCuentaContableIceConfiguracionPunVenActionPerformed(evt);
			}
			else if(sTipo.equals("FK_IdCuentaContableOtrosConfiguracionPunVen")) {
				this.jButtonFK_IdCuentaContableOtrosConfiguracionPunVenActionPerformed(evt);
			}
			else if(sTipo.equals("FK_IdFormatoFacturaConfiguracionPunVen")) {
				this.jButtonFK_IdFormatoFacturaConfiguracionPunVenActionPerformed(evt);
			}
			else if(sTipo.equals("FK_IdFormatoNotaCreditoConfiguracionPunVen")) {
				this.jButtonFK_IdFormatoNotaCreditoConfiguracionPunVenActionPerformed(evt);
			}
			else if(sTipo.equals("FK_IdFormatoNotaVentaConfiguracionPunVen")) {
				this.jButtonFK_IdFormatoNotaVentaConfiguracionPunVenActionPerformed(evt);
			}
			else if(sTipo.equals("FK_IdTipoDocumentoFacturaConfiguracionPunVen")) {
				this.jButtonFK_IdTipoDocumentoFacturaConfiguracionPunVenActionPerformed(evt);
			}
			else if(sTipo.equals("FK_IdTipoDocumentoNotaCreditoConfiguracionPunVen")) {
				this.jButtonFK_IdTipoDocumentoNotaCreditoConfiguracionPunVenActionPerformed(evt);
			}
			else if(sTipo.equals("FK_IdTipoDocumentoNotaVentaConfiguracionPunVen")) {
				this.jButtonFK_IdTipoDocumentoNotaVentaConfiguracionPunVenActionPerformed(evt);
			}
			else if(sTipo.equals("FK_IdTipoDocumentoTarjetaCreditoConfiguracionPunVen")) {
				this.jButtonFK_IdTipoDocumentoTarjetaCreditoConfiguracionPunVenActionPerformed(evt);
			}
			else if(sTipo.equals("FK_IdTransaccionCuentaFacturaConfiguracionPunVen")) {
				this.jButtonFK_IdTransaccionCuentaFacturaConfiguracionPunVenActionPerformed(evt);
			}
			else if(sTipo.equals("FK_IdTransaccionCuentaNotaCreditoConfiguracionPunVen")) {
				this.jButtonFK_IdTransaccionCuentaNotaCreditoConfiguracionPunVenActionPerformed(evt);
			}
			else if(sTipo.equals("FK_IdTransaccionCuentaNotaVentaConfiguracionPunVen")) {
				this.jButtonFK_IdTransaccionCuentaNotaVentaConfiguracionPunVenActionPerformed(evt);
			}
			else if(sTipo.equals("FK_IdTransaccionFacturaConfiguracionPunVen")) {
				this.jButtonFK_IdTransaccionFacturaConfiguracionPunVenActionPerformed(evt);
			}
			else if(sTipo.equals("FK_IdTransaccionNotaCreditoConfiguracionPunVen")) {
				this.jButtonFK_IdTransaccionNotaCreditoConfiguracionPunVenActionPerformed(evt);
			}
			else if(sTipo.equals("FK_IdTransaccionNotaVentaConfiguracionPunVen")) {
				this.jButtonFK_IdTransaccionNotaVentaConfiguracionPunVenActionPerformed(evt);
			}
			
			;
			
			
			ConfiguracionPunVenBeanSwingJInternalFrameAdditional.procesarEventosVista(this.parametroGeneralUsuario,this.moduloActual,this.opcionActual,this.usuarioActual,this,FuncionTipo.AFTER,ControlTipo.BUTTON,EventoTipo.CLIC,EventoSubTipo.CLICKED,sTipo,this.configuracionpunven,new Object(),this.configuracionpunvenParameterGeneral,this.configuracionpunvenReturnGeneral);
			
		} catch(Exception e) {
  			FuncionesSwing.manageException2(this, e,logger,ConfiguracionPunVenConstantesFunciones.CLASSNAME);
			
  		} finally {
      		this.finishProcessConfiguracionPunVen();
      	}
    }
	
	//FUNCIONA AL APLASTAR ENTER
	public void jTextFieldActionPerformedGeneral(String sTipo,ActionEvent evt) { 	  
		try {
			if(this.permiteManejarEventosControl()) {
				//SELECCIONA FILA A OBJETO ACTUAL			
				this.seleccionarFilaTablaConfiguracionPunVenActual();
			
				EventoGlobalTipo eventoGlobalTipo=EventoGlobalTipo.CONTROL_CHANGE;
				
				Boolean esControlTabla=false;
				Container containerParent=null;
				JTextField jTextField=null;
				
				
				//PARAMETROS LLAMAR FUNCION PARENT
				GeneralEntityParameterGeneral generalEntityParameterGeneral=new GeneralEntityParameterGeneral();			
				Boolean esUsoDesdeHijoLocal=false;
				Boolean conIrServidorAplicacionParent=false;	
				ArrayList<String> arrClasses=new ArrayList<String>();			
				//PARAMETROS LLAMAR FUNCION PARENT_FIN
				
				/*
				if(this.esUsoDesdeHijo) {
					eventoGlobalTipo=EventoGlobalTipo.FORM_HIJO_ACTUALIZAR;
				}
				*/
				
				ArrayList<Classe> classes=new ArrayList<Classe>();
				
				jTextField=(JTextField)evt.getSource();
				
				containerParent=jTextField.getParent();
						
				if(containerParent!=null && containerParent.getClass().equals(JTableMe.class)) {
					esControlTabla=true;
				}
						
				this.esControlTabla=esControlTabla;
				
				
				this.actualizarInformacion("EVENTO_CONTROL",false,this.configuracionpunven);
				
				this.actualizarInformacion("INFO_PADRE",false,this.configuracionpunven);
				
				ConfiguracionPunVenBeanSwingJInternalFrameAdditional.procesarEventosVista(this.parametroGeneralUsuario,this.moduloActual,this.opcionActual,this.usuarioActual,this,FuncionTipo.BEFORE,ControlTipo.TEXTBOX,EventoTipo.CHANGE,EventoSubTipo.CHANGED,sTipo,this.configuracionpunven,new Object(),this.configuracionpunvenParameterGeneral,this.configuracionpunvenReturnGeneral);
				
				


				
				ConfiguracionPunVenBeanSwingJInternalFrameAdditional.procesarEventosVista(this.parametroGeneralUsuario,this.moduloActual,this.opcionActual,this.usuarioActual,this,FuncionTipo.AFTER,ControlTipo.TEXTBOX,EventoTipo.CHANGE,EventoSubTipo.CHANGED,sTipo,this.configuracionpunven,new Object(),this.configuracionpunvenParameterGeneral,this.configuracionpunvenReturnGeneral);
				
				
				if(esUsoDesdeHijoLocal) {
					Long id=0L;
					
					generalEntityParameterGeneral.setEventoGlobalTipo(EventoGlobalTipo.FORM_HIJO_ACTUALIZAR);
					generalEntityParameterGeneral.setsDominio("Formulario");
					generalEntityParameterGeneral.setsDominioTipo(ConfiguracionPunVen.class.getName());
					
					if(this.jInternalFrameParent!=null) {
						this.jInternalFrameParent.setEventoParentGeneral(esUsoDesdeHijoLocal,"Formulario",ConfiguracionPunVen.class.getName(),sTipo,"TEXTFIELD",esControlTabla,conIrServidorAplicacionParent,
							id,jTextField, EventoGlobalTipo.FORM_HIJO_ACTUALIZAR,ControlTipo.TEXTBOX,EventoTipo.CHANGE,EventoSubTipo.CHANGED,arrClasses,
							evt,generalEntityParameterGeneral,null);
					}
				}			
				}
				
			} catch(Exception e) {
  				FuncionesSwing.manageException2(this, e,logger,ConfiguracionPunVenConstantesFunciones.CLASSNAME);
  			}
    }
	
	public Boolean existeCambioValor(ControlTipo controlTipo,String sTipo) throws Exception {
		Boolean existeCambio=true;
		
		try {
			ConfiguracionPunVen configuracionpunvenLocal=null;
			
			if(!this.getEsControlTabla()) {
				configuracionpunvenLocal=this.configuracionpunven;
			} else {
				configuracionpunvenLocal=this.configuracionpunvenAnterior;
			}
			
			if(controlTipo.equals(ControlTipo.TEXTBOX)) {
				


			}
		
		} catch(Exception e) {
  			FuncionesSwing.manageException2(this, e,logger,ConfiguracionPunVenConstantesFunciones.CLASSNAME);
  		}
		
		return existeCambio;
	}
	
	public void jTextFieldFocusLostGeneral(String sTipo,java.awt.event.FocusEvent evt) { 	  
		try {
			if(this.permiteManejarEventosControl() && this.existeCambioValor(ControlTipo.TEXTBOX,sTipo)) {
				
				EventoGlobalTipo eventoGlobalTipo=EventoGlobalTipo.CONTROL_CHANGE;
				
				Boolean esControlTabla=false;
				JTextField jTextField=null;
				Container containerParent=null;
				Component componentOpposite=null;
				
				//PARAMETROS LLAMAR FUNCION PARENT
				GeneralEntityParameterGeneral generalEntityParameterGeneral=new GeneralEntityParameterGeneral();			
				Boolean esUsoDesdeHijoLocal=false;
				Boolean conIrServidorAplicacionParent=false;	
				ArrayList<String> arrClasses=new ArrayList<String>();			
				//PARAMETROS LLAMAR FUNCION PARENT_FIN
				
				/*
				if(this.esUsoDesdeHijo) {
					eventoGlobalTipo=EventoGlobalTipo.FORM_HIJO_ACTUALIZAR;
				}
				*/
				
				ArrayList<Classe> classes=new ArrayList<Classe>();
				
				jTextField=(JTextField)evt.getSource();
				
				containerParent=jTextField.getParent();
						
				componentOpposite=evt.getOppositeComponent();
				
				if((containerParent!=null && containerParent.getClass().equals(JTableMe.class))
					|| (componentOpposite!=null && componentOpposite.getClass().equals(JTableMe.class))
				) {					
					esControlTabla=true;
				}
				
				this.esControlTabla=esControlTabla;
				
				
				this.actualizarInformacion("EVENTO_CONTROL",false,this.configuracionpunven);
				
				this.actualizarInformacion("INFO_PADRE",false,this.configuracionpunven);
				
				ConfiguracionPunVenBeanSwingJInternalFrameAdditional.procesarEventosVista(this.parametroGeneralUsuario,this.moduloActual,this.opcionActual,this.usuarioActual,this,FuncionTipo.BEFORE,ControlTipo.TEXTBOX,EventoTipo.CHANGE,EventoSubTipo.CHANGED,sTipo,this.configuracionpunven,new Object(),this.configuracionpunvenParameterGeneral,this.configuracionpunvenReturnGeneral);
							
				
				


				
				ConfiguracionPunVenBeanSwingJInternalFrameAdditional.procesarEventosVista(this.parametroGeneralUsuario,this.moduloActual,this.opcionActual,this.usuarioActual,this,FuncionTipo.AFTER,ControlTipo.TEXTBOX,EventoTipo.CHANGE,EventoSubTipo.CHANGED,sTipo,this.configuracionpunven,new Object(),this.configuracionpunvenParameterGeneral,this.configuracionpunvenReturnGeneral);
				
				
				if(esUsoDesdeHijoLocal) {
					Long id=0L;
					
					generalEntityParameterGeneral.setEventoGlobalTipo(EventoGlobalTipo.FORM_HIJO_ACTUALIZAR);
					generalEntityParameterGeneral.setsDominio("Formulario");
					generalEntityParameterGeneral.setsDominioTipo(ConfiguracionPunVen.class.getName());
					
					if(this.jInternalFrameParent!=null) {
						this.jInternalFrameParent.setEventoParentGeneral(esUsoDesdeHijoLocal,"Formulario",ConfiguracionPunVen.class.getName(),sTipo,"TEXTFIELD",esControlTabla,conIrServidorAplicacionParent,
							id,jTextField, EventoGlobalTipo.FORM_HIJO_ACTUALIZAR,ControlTipo.TEXTBOX,EventoTipo.CHANGE,EventoSubTipo.CHANGED,arrClasses,
							evt,generalEntityParameterGeneral,null);
					}
				}			
			}
			
		} catch(Exception e) {
  			FuncionesSwing.manageException2(this, e,logger,ConfiguracionPunVenConstantesFunciones.CLASSNAME);
  		}
    }
	
	public void jTextFieldFocusGainedGeneral(String sTipo,java.awt.event.FocusEvent evt) { 	  
		try {
			//SELECCIONA FILA A OBJETO ACTUAL			
			this.seleccionarFilaTablaConfiguracionPunVenActual();
			
			//SELECCIONA FILA A OBJETO ANTERIOR
			Integer intSelectedRow = this.jTableDatosConfiguracionPunVen.getSelectedRow();
					
			if(intSelectedRow!=null && intSelectedRow>-1) {
				//ARCHITECTURE
				if(Constantes.ISUSAEJBLOGICLAYER) {
					this.configuracionpunvenAnterior =(ConfiguracionPunVen) this.configuracionpunvenLogic.getConfiguracionPunVens().toArray()[this.jTableDatosConfiguracionPunVen.convertRowIndexToModel(intSelectedRow)];
				} else if(Constantes.ISUSAEJBREMOTE || Constantes.ISUSAEJBHOME ) {
					this.configuracionpunvenAnterior =(ConfiguracionPunVen) this.configuracionpunvens.toArray()[this.jTableDatosConfiguracionPunVen.convertRowIndexToModel(intSelectedRow)];
				}
				//ARCHITECTURE
				
				//System.out.println(this.banco);
			}
			
		} catch(Exception e) {
  			FuncionesSwing.manageException2(this, e,logger,ConfiguracionPunVenConstantesFunciones.CLASSNAME);
  		}
    }	
	
	//CUANDO SE CAMBIA ALGUN FORMATO(TIPO DE LETRA,NEGRILLA,ETC)
	public void jTextFieldChangedUpdateGeneral(String sTipo,JTextField jTextField,DocumentEvent evt) { 	  
		try {
			/*
			EventoGlobalTipo eventoGlobalTipo=EventoGlobalTipo.CONTROL_CHANGE;
			
			//System.out.println("UPDATE");
			
			Boolean esControlTabla=false;
			//JTextField jTextField=null;
			Container containerParent=null;
			Component componentOpposite=null;
			
			if(this.esUsoDesdeHijo) {
				eventoGlobalTipo=EventoGlobalTipo.FORM_HIJO_ACTUALIZAR;
			}
			
			ConfiguracionPunVenBeanSwingJInternalFrameAdditional.procesarEventosVista(this.parametroGeneralUsuario,this.moduloActual,this.opcionActual,this.usuarioActual,this,FuncionTipo.BEFORE,ControlTipo.TEXTBOX,EventoTipo.CHANGE,EventoSubTipo.CHANGED,sTipo,this.configuracionpunven,new Object(),this.configuracionpunvenParameterGeneral,this.configuracionpunvenReturnGeneral);
			
			ArrayList<Classe> classes=new ArrayList<Classe>();
			
			//jTextField=(JTextField)evt.getSource();
			
			containerParent=jTextField.getParent();
					
			componentOpposite=null;//evt.getOppositeComponent();
			
			if((containerParent!=null && containerParent.getClass().equals(JTableMe.class))
				|| (componentOpposite!=null && componentOpposite.getClass().equals(JTableMe.class))
			) {					
				esControlTabla=true;
			}
			
			this.esControlTabla=esControlTabla;
			
			


			
			ConfiguracionPunVenBeanSwingJInternalFrameAdditional.procesarEventosVista(this.parametroGeneralUsuario,this.moduloActual,this.opcionActual,this.usuarioActual,this,FuncionTipo.AFTER,ControlTipo.TEXTBOX,EventoTipo.CHANGE,EventoSubTipo.CHANGED,sTipo,this.configuracionpunven,new Object(),this.configuracionpunvenParameterGeneral,this.configuracionpunvenReturnGeneral);
			*/
  		} catch(Exception e) {
  			FuncionesSwing.manageException2(this, e,logger,ConfiguracionPunVenConstantesFunciones.CLASSNAME);
  		}
    }
	
	//CUANDO SE QUITA ALGUN CARACTER
	public void jTextFieldRemoveUpdateGeneral(String sTipo,JTextField jTextField,DocumentEvent evt) { 	  
		try {
			//System.out.println("REMOVE");
			
  		} catch(Exception e) {
  			FuncionesSwing.manageException2(this, e,logger,ConfiguracionPunVenConstantesFunciones.CLASSNAME);
  		}
    }
	
	//CUANDO SE INGRESA ALGUN CARACTER
	public void jTextFieldInsertUpdateGeneral(String sTipo,JTextField jTextField,DocumentEvent evt) { 	  
		try {
			//System.out.println("INSERT");
			
  		} catch(Exception e) {
  			FuncionesSwing.manageException2(this, e,logger,ConfiguracionPunVenConstantesFunciones.CLASSNAME);
  		}
    }
	
	//FUNCIONA AL APLASTAR ENTER
	public void jFormattedTextFieldActionPerformedGeneral(String sTipo,ActionEvent evt) { 	  
		try {
			if(this.permiteManejarEventosControl()) {
				
				//SELECCIONA FILA A OBJETO ACTUAL			
				this.seleccionarFilaTablaConfiguracionPunVenActual();
				
				EventoGlobalTipo eventoGlobalTipo=EventoGlobalTipo.CONTROL_CHANGE;
				
				Boolean esControlTabla=false;
				Container containerParent=null;
				Container containerParentAux=null;
				JFormattedTextField JFormattedTextField=null;
				Component componentOpposite=null;
				
				//PARAMETROS LLAMAR FUNCION PARENT
				GeneralEntityParameterGeneral generalEntityParameterGeneral=new GeneralEntityParameterGeneral();			
				Boolean esUsoDesdeHijoLocal=false;
				Boolean conIrServidorAplicacionParent=false;	
				ArrayList<String> arrClasses=new ArrayList<String>();			
				//PARAMETROS LLAMAR FUNCION PARENT_FIN
				
				/*
				if(this.esUsoDesdeHijo) {
					eventoGlobalTipo=EventoGlobalTipo.FORM_HIJO_ACTUALIZAR;
				}
				*/
				ArrayList<Classe> classes=new ArrayList<Classe>();
				
				JFormattedTextField=(JFormattedTextField)evt.getSource();
				
				containerParentAux=JFormattedTextField.getParent();
				
				if(containerParentAux!=null && containerParentAux.getClass().equals(JDateChooser.class)) {
					containerParent=containerParentAux.getParent();
				}
				
				componentOpposite=null;//evt.getOppositeComponent();
				
				if((containerParent!=null && containerParent.getClass().equals(JTableMe.class))
					|| (componentOpposite!=null && componentOpposite.getClass().equals(JTableMe.class))
				) {					
					esControlTabla=true;
				}
				
				this.esControlTabla=esControlTabla;
				
				
				this.actualizarInformacion("EVENTO_CONTROL",false,this.configuracionpunven);
				
				this.actualizarInformacion("INFO_PADRE",false,this.configuracionpunven);
				
				ConfiguracionPunVenBeanSwingJInternalFrameAdditional.procesarEventosVista(this.parametroGeneralUsuario,this.moduloActual,this.opcionActual,this.usuarioActual,this,FuncionTipo.BEFORE,ControlTipo.DATE,EventoTipo.CHANGE,EventoSubTipo.CHANGED,sTipo,this.configuracionpunven,new Object(),this.configuracionpunvenParameterGeneral,this.configuracionpunvenReturnGeneral);
								
						
				


				
				ConfiguracionPunVenBeanSwingJInternalFrameAdditional.procesarEventosVista(this.parametroGeneralUsuario,this.moduloActual,this.opcionActual,this.usuarioActual,this,FuncionTipo.AFTER,ControlTipo.DATE,EventoTipo.CHANGE,EventoSubTipo.CHANGED,sTipo,this.configuracionpunven,new Object(),this.configuracionpunvenParameterGeneral,this.configuracionpunvenReturnGeneral);
				
				
				if(esUsoDesdeHijoLocal) {
					Long id=0L;
					
					generalEntityParameterGeneral.setEventoGlobalTipo(EventoGlobalTipo.FORM_HIJO_ACTUALIZAR);
					generalEntityParameterGeneral.setsDominio("Formulario");
					generalEntityParameterGeneral.setsDominioTipo(ConfiguracionPunVen.class.getName());
					
					if(this.jInternalFrameParent!=null) {
						this.jInternalFrameParent.setEventoParentGeneral(esUsoDesdeHijoLocal,"Formulario",ConfiguracionPunVen.class.getName(),sTipo,"DATE",esControlTabla,conIrServidorAplicacionParent,
							id,JFormattedTextField, EventoGlobalTipo.FORM_HIJO_ACTUALIZAR,ControlTipo.DATE,EventoTipo.CHANGE,EventoSubTipo.CHANGED,arrClasses,
							evt,generalEntityParameterGeneral,null);
					}
				}			
			}
			
		} catch(Exception e) {
  			FuncionesSwing.manageException2(this, e,logger,ConfiguracionPunVenConstantesFunciones.CLASSNAME);
  		}
    }
	
	public void jFormattedTextFieldFocusLostGeneral(String sTipo,java.awt.event.FocusEvent evt) { 	  
		try {
			if(this.permiteManejarEventosControl() && this.existeCambioValor(ControlTipo.TEXTBOX,sTipo)) {
				EventoGlobalTipo eventoGlobalTipo=EventoGlobalTipo.CONTROL_CHANGE;
				
				Boolean esControlTabla=false;
				JTextField jTextField=null;
				Container containerParent=null;
				Container containerParentAux=null;
				Component componentOpposite=null;
				
				
				//PARAMETROS LLAMAR FUNCION PARENT
				GeneralEntityParameterGeneral generalEntityParameterGeneral=new GeneralEntityParameterGeneral();			
				Boolean esUsoDesdeHijoLocal=false;
				Boolean conIrServidorAplicacionParent=false;	
				ArrayList<String> arrClasses=new ArrayList<String>();			
				//PARAMETROS LLAMAR FUNCION PARENT_FIN
				
				/*
				if(this.esUsoDesdeHijo) {
					eventoGlobalTipo=EventoGlobalTipo.FORM_HIJO_ACTUALIZAR;
				}
				*/
				
				ArrayList<Classe> classes=new ArrayList<Classe>();
				
				jTextField=(JTextField)evt.getSource();
				
				containerParentAux=jTextField.getParent();
						
				if(containerParentAux!=null && containerParentAux.getClass().equals(JDateChooser.class)) {
					containerParent=containerParentAux.getParent();
				}
				
				componentOpposite=evt.getOppositeComponent();
				
				if((containerParent!=null && containerParent.getClass().equals(JTableMe.class))
					|| (componentOpposite!=null && componentOpposite.getClass().equals(JTableMe.class))
				) {					
					esControlTabla=true;
				}
				
				this.esControlTabla=esControlTabla;
				
				
				this.actualizarInformacion("EVENTO_CONTROL",false,this.configuracionpunven);
				
				this.actualizarInformacion("INFO_PADRE",false,this.configuracionpunven);
				
				ConfiguracionPunVenBeanSwingJInternalFrameAdditional.procesarEventosVista(this.parametroGeneralUsuario,this.moduloActual,this.opcionActual,this.usuarioActual,this,FuncionTipo.BEFORE,ControlTipo.DATE,EventoTipo.CHANGE,EventoSubTipo.CHANGED,sTipo,this.configuracionpunven,new Object(),this.configuracionpunvenParameterGeneral,this.configuracionpunvenReturnGeneral);
								
				
				


				
				ConfiguracionPunVenBeanSwingJInternalFrameAdditional.procesarEventosVista(this.parametroGeneralUsuario,this.moduloActual,this.opcionActual,this.usuarioActual,this,FuncionTipo.AFTER,ControlTipo.DATE,EventoTipo.CHANGE,EventoSubTipo.CHANGED,sTipo,this.configuracionpunven,new Object(),this.configuracionpunvenParameterGeneral,this.configuracionpunvenReturnGeneral);
				
				
				if(esUsoDesdeHijoLocal) {
					Long id=0L;
					
					generalEntityParameterGeneral.setEventoGlobalTipo(EventoGlobalTipo.FORM_HIJO_ACTUALIZAR);
					generalEntityParameterGeneral.setsDominio("Formulario");
					generalEntityParameterGeneral.setsDominioTipo(ConfiguracionPunVen.class.getName());
					
					if(this.jInternalFrameParent!=null) {
						this.jInternalFrameParent.setEventoParentGeneral(esUsoDesdeHijoLocal,"Formulario",ConfiguracionPunVen.class.getName(),sTipo,"TEXTFIELD",esControlTabla,conIrServidorAplicacionParent,
							id,jTextField, EventoGlobalTipo.FORM_HIJO_ACTUALIZAR,ControlTipo.TEXTBOX,EventoTipo.CHANGE,EventoSubTipo.CHANGED,arrClasses,
							evt,generalEntityParameterGeneral,null);
					}
				}			
			}
			
		} catch(Exception e) {
  			FuncionesSwing.manageException2(this, e,logger,ConfiguracionPunVenConstantesFunciones.CLASSNAME);
  		}
    }
	
	public void jFormattedTextFieldFocusGainedGeneral(String sTipo,java.awt.event.FocusEvent evt) { 	  
		try {
			//SELECCIONA FILA A OBJETO ACTUAL			
			this.seleccionarFilaTablaConfiguracionPunVenActual();
			
			//SELECCIONA FILA A OBJETO ANTERIOR
			Integer intSelectedRow = this.jTableDatosConfiguracionPunVen.getSelectedRow();
					
			if(intSelectedRow!=null && intSelectedRow>-1) {
				//ARCHITECTURE
				if(Constantes.ISUSAEJBLOGICLAYER) {
					this.configuracionpunvenAnterior =(ConfiguracionPunVen) this.configuracionpunvenLogic.getConfiguracionPunVens().toArray()[this.jTableDatosConfiguracionPunVen.convertRowIndexToModel(intSelectedRow)];
				} else if(Constantes.ISUSAEJBREMOTE || Constantes.ISUSAEJBHOME ) {
					this.configuracionpunvenAnterior =(ConfiguracionPunVen) this.configuracionpunvens.toArray()[this.jTableDatosConfiguracionPunVen.convertRowIndexToModel(intSelectedRow)];
				}
				//ARCHITECTURE
				
				//System.out.println(this.banco);
			}
			
		} catch(Exception e) {
  			FuncionesSwing.manageException2(this, e,logger,ConfiguracionPunVenConstantesFunciones.CLASSNAME);
  		}
    }	
	
	public void jDateChooserFocusLostGeneral(String sTipo,java.awt.event.FocusEvent evt) { 	  
		try {
			if(this.permiteManejarEventosControl() && this.existeCambioValor(ControlTipo.DATE,sTipo)) {
				this.actualizarInformacion("EVENTO_CONTROL",false,this.configuracionpunven);
				
				this.actualizarInformacion("INFO_PADRE",false,this.configuracionpunven);
			}	
		} catch(Exception e) {
  			FuncionesSwing.manageException2(this, e,logger,ConfiguracionPunVenConstantesFunciones.CLASSNAME);
  		}
    }	
	
	public void jDateChooserFocusGainedGeneral(String sTipo,java.awt.event.FocusEvent evt) { 	  
		try {
			//SELECCIONA FILA A OBJETO ACTUAL			
			this.seleccionarFilaTablaConfiguracionPunVenActual();
			
			//SELECCIONA FILA A OBJETO ANTERIOR
			Integer intSelectedRow = this.jTableDatosConfiguracionPunVen.getSelectedRow();
					
			if(intSelectedRow!=null && intSelectedRow>-1) {
				//ARCHITECTURE
				if(Constantes.ISUSAEJBLOGICLAYER) {
					this.configuracionpunvenAnterior =(ConfiguracionPunVen) this.configuracionpunvenLogic.getConfiguracionPunVens().toArray()[this.jTableDatosConfiguracionPunVen.convertRowIndexToModel(intSelectedRow)];
				} else if(Constantes.ISUSAEJBREMOTE || Constantes.ISUSAEJBHOME ) {
					this.configuracionpunvenAnterior =(ConfiguracionPunVen) this.configuracionpunvens.toArray()[this.jTableDatosConfiguracionPunVen.convertRowIndexToModel(intSelectedRow)];
				}
				//ARCHITECTURE
				
				//System.out.println(this.banco);
			}
		} catch(Exception e) {
  			FuncionesSwing.manageException2(this, e,logger,ConfiguracionPunVenConstantesFunciones.CLASSNAME);
  		}
    }	
	
	public void jDateChooserActionPerformedGeneral(String sTipo,ActionEvent evt) { 	  
		try {
			
			//SELECCIONA FILA A OBJETO ACTUAL			
			this.seleccionarFilaTablaConfiguracionPunVenActual();
				
			this.actualizarInformacion("EVENTO_CONTROL",false,this.configuracionpunven);
			
			this.actualizarInformacion("INFO_PADRE",false,this.configuracionpunven);
				
		} catch(Exception e) {
  			FuncionesSwing.manageException2(this, e,logger,ConfiguracionPunVenConstantesFunciones.CLASSNAME);
  		}
    }	
	
	public void jTextAreaFocusLostGeneral(String sTipo,java.awt.event.FocusEvent evt) { 	  
		try {
			if(this.permiteManejarEventosControl() && this.existeCambioValor(ControlTipo.TEXTAREA,sTipo)) {
				EventoGlobalTipo eventoGlobalTipo=EventoGlobalTipo.CONTROL_CHANGE;
				
				Boolean esControlTabla=false;
				JTextArea jTextArea=null;
				Container containerParent=null;
				Component componentOpposite=null;
				
				//PARAMETROS LLAMAR FUNCION PARENT
				GeneralEntityParameterGeneral generalEntityParameterGeneral=new GeneralEntityParameterGeneral();			
				Boolean esUsoDesdeHijoLocal=false;
				Boolean conIrServidorAplicacionParent=false;	
				ArrayList<String> arrClasses=new ArrayList<String>();			
				//PARAMETROS LLAMAR FUNCION PARENT_FIN
				
				/*
				if(this.esUsoDesdeHijo) {
					eventoGlobalTipo=EventoGlobalTipo.FORM_HIJO_ACTUALIZAR;
				}
				*/
				
				ArrayList<Classe> classes=new ArrayList<Classe>();
				
				jTextArea=(JTextArea)evt.getSource();
				
				containerParent=jTextArea.getParent();
				componentOpposite=evt.getOppositeComponent();
				
				if((containerParent!=null && containerParent.getClass().equals(JTableMe.class))
					|| (componentOpposite!=null && componentOpposite.getClass().equals(JTableMe.class))
				) {
					esControlTabla=true;
				}
				
				this.esControlTabla=esControlTabla;
				
				
				this.actualizarInformacion("EVENTO_CONTROL",false,this.configuracionpunven);
				
				this.actualizarInformacion("INFO_PADRE",false,this.configuracionpunven);
				
				ConfiguracionPunVenBeanSwingJInternalFrameAdditional.procesarEventosVista(this.parametroGeneralUsuario,this.moduloActual,this.opcionActual,this.usuarioActual,this,FuncionTipo.BEFORE,ControlTipo.TEXTAREA,EventoTipo.CHANGE,EventoSubTipo.CHANGED,sTipo,this.configuracionpunven,new Object(),this.configuracionpunvenParameterGeneral,this.configuracionpunvenReturnGeneral);
							
				
				


				
				ConfiguracionPunVenBeanSwingJInternalFrameAdditional.procesarEventosVista(this.parametroGeneralUsuario,this.moduloActual,this.opcionActual,this.usuarioActual,this,FuncionTipo.AFTER,ControlTipo.TEXTAREA,EventoTipo.CHANGE,EventoSubTipo.CHANGED,sTipo,this.configuracionpunven,new Object(),this.configuracionpunvenParameterGeneral,this.configuracionpunvenReturnGeneral);
				
				
				if(esUsoDesdeHijoLocal) {
					Long id=0L;
					
					generalEntityParameterGeneral.setEventoGlobalTipo(EventoGlobalTipo.FORM_HIJO_ACTUALIZAR);
					generalEntityParameterGeneral.setsDominio("Formulario");
					generalEntityParameterGeneral.setsDominioTipo(ConfiguracionPunVen.class.getName());
					
					if(this.jInternalFrameParent!=null) {
						this.jInternalFrameParent.setEventoParentGeneral(esUsoDesdeHijoLocal,"Formulario",ConfiguracionPunVen.class.getName(),sTipo,"TEXTAREA",esControlTabla,conIrServidorAplicacionParent,
							id,jTextArea, EventoGlobalTipo.FORM_HIJO_ACTUALIZAR,ControlTipo.TEXTAREA,EventoTipo.CHANGE,EventoSubTipo.CHANGED,arrClasses,
							evt,generalEntityParameterGeneral,null);
					}
				}			
			}
			
		} catch(Exception e) {
  			FuncionesSwing.manageException2(this, e,logger,ConfiguracionPunVenConstantesFunciones.CLASSNAME);
  		}
    }
	
	public void jTextAreaFocusGainedGeneral(String sTipo,java.awt.event.FocusEvent evt) { 	  
		try {
			if(this.permiteManejarEventosControl()) {
				//SELECCIONA FILA A OBJETO ACTUAL			
				this.seleccionarFilaTablaConfiguracionPunVenActual();
			
				//SELECCIONA FILA A OBJETO ANTERIOR
				Integer intSelectedRow = this.jTableDatosConfiguracionPunVen.getSelectedRow();
						
				if(intSelectedRow!=null && intSelectedRow>-1) {
					//ARCHITECTURE
					if(Constantes.ISUSAEJBLOGICLAYER) {
						this.configuracionpunvenAnterior =(ConfiguracionPunVen) this.configuracionpunvenLogic.getConfiguracionPunVens().toArray()[this.jTableDatosConfiguracionPunVen.convertRowIndexToModel(intSelectedRow)];
					} else if(Constantes.ISUSAEJBREMOTE || Constantes.ISUSAEJBHOME ) {
						this.configuracionpunvenAnterior =(ConfiguracionPunVen) this.configuracionpunvens.toArray()[this.jTableDatosConfiguracionPunVen.convertRowIndexToModel(intSelectedRow)];
					}
					//ARCHITECTURE
					
					//System.out.println(this.banco);
				}
			}
		} catch(Exception e) {
  			FuncionesSwing.manageException2(this, e,logger,ConfiguracionPunVenConstantesFunciones.CLASSNAME);
  		}
    }
	
	public void jTextAreaChangedUpdateGeneral(String sTipo,JTextArea jTextArea,DocumentEvent evt) { 	  
		try {
			/*
			EventoGlobalTipo eventoGlobalTipo=EventoGlobalTipo.CONTROL_CHANGE;
			
			//System.out.println("UPDATE");
			
			Boolean esControlTabla=false;
			//JTextArea jTextArea=null;
			Container containerParent=null;
			Component componentOpposite=null;
			
			if(this.esUsoDesdeHijo) {
				eventoGlobalTipo=EventoGlobalTipo.FORM_HIJO_ACTUALIZAR;
			}
			
			ConfiguracionPunVenBeanSwingJInternalFrameAdditional.procesarEventosVista(this.parametroGeneralUsuario,this.moduloActual,this.opcionActual,this.usuarioActual,this,FuncionTipo.BEFORE,ControlTipo.TEXTAREA,EventoTipo.CHANGE,EventoSubTipo.CHANGED,sTipo,this.configuracionpunven,new Object(),this.configuracionpunvenParameterGeneral,this.configuracionpunvenReturnGeneral);
			
			ArrayList<Classe> classes=new ArrayList<Classe>();
			
			//jTextArea=(JTextArea)evt.getSource();
			
			containerParent=jTextArea.getParent();
			componentOpposite=null;//evt.getOppositeComponent();
			
			if((containerParent!=null && containerParent.getClass().equals(JTableMe.class))
				|| (componentOpposite!=null && componentOpposite.getClass().equals(JTableMe.class))
			) {
				esControlTabla=true;
			}
			
			this.esControlTabla=esControlTabla;
			
			


			
			ConfiguracionPunVenBeanSwingJInternalFrameAdditional.procesarEventosVista(this.parametroGeneralUsuario,this.moduloActual,this.opcionActual,this.usuarioActual,this,FuncionTipo.AFTER,ControlTipo.TEXTAREA,EventoTipo.CHANGE,EventoSubTipo.CHANGED,sTipo,this.configuracionpunven,new Object(),this.configuracionpunvenParameterGeneral,this.configuracionpunvenReturnGeneral);
			
			*/
  		} catch(Exception e) {
  			FuncionesSwing.manageException2(this, e,logger,ConfiguracionPunVenConstantesFunciones.CLASSNAME);
  		}
    }
	
	public void jTextAreaRemoveUpdateGeneral(String sTipo,JTextArea jTextArea,DocumentEvent evt) { 	  
		try {
			//System.out.println("REMOVE");
			
  		} catch(Exception e) {
  			FuncionesSwing.manageException2(this, e,logger,ConfiguracionPunVenConstantesFunciones.CLASSNAME);
  		}
    }
	
	public void jTextAreaInsertUpdateGeneral(String sTipo,JTextArea jTextArea,DocumentEvent evt) { 	  
		try {
			
			//System.out.println("INSERT");
			
  		} catch(Exception e) {
  			FuncionesSwing.manageException2(this, e,logger,ConfiguracionPunVenConstantesFunciones.CLASSNAME);
  		}
    }
	
	//NO EXISTE O NO ES APLICABLE
	public void jTextAreaActionPerformedGeneral(String sTipo,ActionEvent evt) { 	  
		try {
			//SELECCIONA FILA A OBJETO ACTUAL			
			this.seleccionarFilaTablaConfiguracionPunVenActual();
			
			this.actualizarInformacion("EVENTO_CONTROL",false,this.configuracionpunven);
			
			this.actualizarInformacion("INFO_PADRE",false,this.configuracionpunven);
				
		} catch(Exception e) {
  			FuncionesSwing.manageException2(this, e,logger,ConfiguracionPunVenConstantesFunciones.CLASSNAME);
  		}
    }
	
	public void jLabelFocusLostGeneral(String sTipo,java.awt.event.FocusEvent evt) { 	  
		try {
			if(this.permiteManejarEventosControl()) {
				EventoGlobalTipo eventoGlobalTipo=EventoGlobalTipo.CONTROL_CHANGE;
				
				Boolean esControlTabla=false;
				JLabel jLabel=null;
				Container containerParent=null;
				Component componentOpposite=null;
				
				
				//PARAMETROS LLAMAR FUNCION PARENT
				GeneralEntityParameterGeneral generalEntityParameterGeneral=new GeneralEntityParameterGeneral();			
				Boolean esUsoDesdeHijoLocal=false;
				Boolean conIrServidorAplicacionParent=false;	
				ArrayList<String> arrClasses=new ArrayList<String>();			
				//PARAMETROS LLAMAR FUNCION PARENT_FIN
				
				
				/*
				if(this.esUsoDesdeHijo) {
					eventoGlobalTipo=EventoGlobalTipo.FORM_HIJO_ACTUALIZAR;
				}
				*/
				
				ArrayList<Classe> classes=new ArrayList<Classe>();
				
				jLabel=(JLabel)evt.getSource();
				
				containerParent=jLabel.getParent();
						
				componentOpposite=evt.getOppositeComponent();
				
				if((containerParent!=null && containerParent.getClass().equals(JTableMe.class))
					|| (componentOpposite!=null && componentOpposite.getClass().equals(JTableMe.class))
				) {					
					esControlTabla=true;
				}
				
				this.esControlTabla=esControlTabla;
				
				
				this.actualizarInformacion("EVENTO_CONTROL",false,this.configuracionpunven);
				
				this.actualizarInformacion("INFO_PADRE",false,this.configuracionpunven);
				
				ConfiguracionPunVenBeanSwingJInternalFrameAdditional.procesarEventosVista(this.parametroGeneralUsuario,this.moduloActual,this.opcionActual,this.usuarioActual,this,FuncionTipo.BEFORE,ControlTipo.TEXTBOX,EventoTipo.CHANGE,EventoSubTipo.CHANGED,sTipo,this.configuracionpunven,new Object(),this.configuracionpunvenParameterGeneral,this.configuracionpunvenReturnGeneral);
								
				
				


				
				ConfiguracionPunVenBeanSwingJInternalFrameAdditional.procesarEventosVista(this.parametroGeneralUsuario,this.moduloActual,this.opcionActual,this.usuarioActual,this,FuncionTipo.AFTER,ControlTipo.TEXTBOX,EventoTipo.CHANGE,EventoSubTipo.CHANGED,sTipo,this.configuracionpunven,new Object(),this.configuracionpunvenParameterGeneral,this.configuracionpunvenReturnGeneral);
				
				
				if(esUsoDesdeHijoLocal) {
					Long id=0L;
					
					generalEntityParameterGeneral.setEventoGlobalTipo(EventoGlobalTipo.FORM_HIJO_ACTUALIZAR);
					generalEntityParameterGeneral.setsDominio("Formulario");
					generalEntityParameterGeneral.setsDominioTipo(ConfiguracionPunVen.class.getName());
					
					if(this.jInternalFrameParent!=null) {
						this.jInternalFrameParent.setEventoParentGeneral(esUsoDesdeHijoLocal,"Formulario",ConfiguracionPunVen.class.getName(),sTipo,"TEXTFIELD",esControlTabla,conIrServidorAplicacionParent,
							id,jLabel, EventoGlobalTipo.FORM_HIJO_ACTUALIZAR,ControlTipo.TEXTBOX,EventoTipo.CHANGE,EventoSubTipo.CHANGED,arrClasses,
							evt,generalEntityParameterGeneral,null);
					}
				}			
			}	
			
		} catch(Exception e) {
  			FuncionesSwing.manageException2(this, e,logger,ConfiguracionPunVenConstantesFunciones.CLASSNAME);
  		}
    }
	
	public void jLabelFocusGainedGeneral(String sTipo,java.awt.event.FocusEvent evt) { 	  
		try {
			//SELECCIONA FILA A OBJETO ACTUAL			
			this.seleccionarFilaTablaConfiguracionPunVenActual();
			
			//SELECCIONA FILA A OBJETO ANTERIOR
			Integer intSelectedRow = this.jTableDatosConfiguracionPunVen.getSelectedRow();
					
			if(intSelectedRow!=null && intSelectedRow>-1) {
				//ARCHITECTURE
				if(Constantes.ISUSAEJBLOGICLAYER) {
					this.configuracionpunvenAnterior =(ConfiguracionPunVen) this.configuracionpunvenLogic.getConfiguracionPunVens().toArray()[this.jTableDatosConfiguracionPunVen.convertRowIndexToModel(intSelectedRow)];
				} else if(Constantes.ISUSAEJBREMOTE || Constantes.ISUSAEJBHOME ) {
					this.configuracionpunvenAnterior =(ConfiguracionPunVen) this.configuracionpunvens.toArray()[this.jTableDatosConfiguracionPunVen.convertRowIndexToModel(intSelectedRow)];
				}
				//ARCHITECTURE
				
				//System.out.println(this.banco);
			}
		} catch(Exception e) {
  			FuncionesSwing.manageException2(this, e,logger,ConfiguracionPunVenConstantesFunciones.CLASSNAME);
  		}
    }
	
	//NO EXISTE O NO ES APLICABLE
	public void jLabelActionPerformedGeneral(String sTipo,ActionEvent evt) { 	  
		try {
			
			//SELECCIONA FILA A OBJETO ACTUAL			
			this.seleccionarFilaTablaConfiguracionPunVenActual();
				
			this.actualizarInformacion("EVENTO_CONTROL",false,this.configuracionpunven);
			
			this.actualizarInformacion("INFO_PADRE",false,this.configuracionpunven);
				
		} catch(Exception e) {
  			FuncionesSwing.manageException2(this, e,logger,ConfiguracionPunVenConstantesFunciones.CLASSNAME);
  		}
    }
	
	public void jCheckBoxItemListenerGeneral(String sTipo,ItemEvent evt) { 	  
		try {
			if(this.permiteManejarEventosControl()) {
				//SELECCIONA FILA A OBJETO ACTUAL			
				this.seleccionarFilaTablaConfiguracionPunVenActual();
				
				EventoGlobalTipo eventoGlobalTipo=EventoGlobalTipo.CONTROL_CHANGE;
				
				Boolean esControlTabla=false;
				JCheckBox jCheckBox=null;
				Container containerParent=null;
				Component componentOpposite=null;
				
							
				//PARAMETROS LLAMAR FUNCION PARENT
				GeneralEntityParameterGeneral generalEntityParameterGeneral=new GeneralEntityParameterGeneral();			
				Boolean esUsoDesdeHijoLocal=false;
				Boolean conIrServidorAplicacionParent=false;	
				ArrayList<String> arrClasses=new ArrayList<String>();			
				//PARAMETROS LLAMAR FUNCION PARENT_FIN
				
				
				/*
				if(this.esUsoDesdeHijo) {
					eventoGlobalTipo=EventoGlobalTipo.FORM_HIJO_ACTUALIZAR;
				}
				*/
				
				ArrayList<Classe> classes=new ArrayList<Classe>();
				
				jCheckBox=(JCheckBox)evt.getSource();
				
				containerParent=jCheckBox.getParent();
						
				componentOpposite=null;//evt.getOppositeComponent();
				
				if((containerParent!=null && containerParent.getClass().equals(JTableMe.class))
					|| (componentOpposite!=null && componentOpposite.getClass().equals(JTableMe.class))
				) {					
					esControlTabla=true;
				}
				
				this.esControlTabla=esControlTabla;
				
				
				this.actualizarInformacion("EVENTO_CONTROL",false,this.configuracionpunven);
				
				this.actualizarInformacion("INFO_PADRE",false,this.configuracionpunven);
				
				ConfiguracionPunVenBeanSwingJInternalFrameAdditional.procesarEventosVista(this.parametroGeneralUsuario,this.moduloActual,this.opcionActual,this.usuarioActual,this,FuncionTipo.BEFORE,ControlTipo.CHECKBOX,EventoTipo.CLIC,EventoSubTipo.CLICKED,sTipo,this.configuracionpunven,new Object(),this.configuracionpunvenParameterGeneral,this.configuracionpunvenReturnGeneral);
												
				
				if(sTipo.equals("SeleccionarTodosConfiguracionPunVen")) {
					jCheckBoxSeleccionarTodosConfiguracionPunVenItemListener(evt);
				
				} else if(sTipo.equals("SeleccionadosConfiguracionPunVen")) {
					jCheckBoxSeleccionadosConfiguracionPunVenItemListener(evt);
				
				} else if(sTipo.equals("NuevoToolBarConfiguracionPunVen")) {
					
				}
				
				


				
				
				ConfiguracionPunVenBeanSwingJInternalFrameAdditional.procesarEventosVista(this.parametroGeneralUsuario,this.moduloActual,this.opcionActual,this.usuarioActual,this,FuncionTipo.AFTER,ControlTipo.CHECKBOX,EventoTipo.CLIC,EventoSubTipo.CLICKED,sTipo,this.configuracionpunven,new Object(),this.configuracionpunvenParameterGeneral,this.configuracionpunvenReturnGeneral);
				
				
				if(esUsoDesdeHijoLocal) {
					Long id=0L;
					
					generalEntityParameterGeneral.setEventoGlobalTipo(EventoGlobalTipo.FORM_HIJO_ACTUALIZAR);
					generalEntityParameterGeneral.setsDominio("Formulario");
					generalEntityParameterGeneral.setsDominioTipo(ConfiguracionPunVen.class.getName());
					
					if(this.jInternalFrameParent!=null) {
						this.jInternalFrameParent.setEventoParentGeneral(esUsoDesdeHijoLocal,"Formulario",ConfiguracionPunVen.class.getName(),sTipo,"TEXTFIELD",esControlTabla,conIrServidorAplicacionParent,
							id,jCheckBox, EventoGlobalTipo.FORM_HIJO_ACTUALIZAR,ControlTipo.CHECKBOX,EventoTipo.CLIC,EventoSubTipo.CLICKED,arrClasses,
							evt,generalEntityParameterGeneral,null);
					}
				}			
			}	
			
  		} catch(Exception e) {
  			FuncionesSwing.manageException2(this, e,logger,ConfiguracionPunVenConstantesFunciones.CLASSNAME);
  		}
    }
	
	public void jCheckBoxFocusLostGeneral(String sTipo,java.awt.event.FocusEvent evt) { 	  
		try {
			if(this.permiteManejarEventosControl() && this.existeCambioValor(ControlTipo.CHECKBOX,sTipo)) {
				EventoGlobalTipo eventoGlobalTipo=EventoGlobalTipo.CONTROL_CHANGE;
				
				Boolean esControlTabla=false;
				JCheckBox jCheckBox=null;
				Container containerParent=null;
				Component componentOpposite=null;
				
				
				//PARAMETROS LLAMAR FUNCION PARENT
				GeneralEntityParameterGeneral generalEntityParameterGeneral=new GeneralEntityParameterGeneral();			
				Boolean esUsoDesdeHijoLocal=false;
				Boolean conIrServidorAplicacionParent=false;	
				ArrayList<String> arrClasses=new ArrayList<String>();			
				//PARAMETROS LLAMAR FUNCION PARENT_FIN
				
				
				ArrayList<Classe> classes=new ArrayList<Classe>();
				
				jCheckBox=(JCheckBox)evt.getSource();
				
				containerParent=jCheckBox.getParent();
						
				componentOpposite=evt.getOppositeComponent();
				
				if((containerParent!=null && containerParent.getClass().equals(JTableMe.class))
					|| (componentOpposite!=null && componentOpposite.getClass().equals(JTableMe.class))
				) {					
					esControlTabla=true;
				}
				
				this.esControlTabla=esControlTabla;
				
				
				/*
				if(this.esUsoDesdeHijo) {
					eventoGlobalTipo=EventoGlobalTipo.FORM_HIJO_ACTUALIZAR;
				}
				*/
				
				//this.actualizarInformacion("EVENTO_CONTROL",false,this.configuracionpunven);
				
				//this.actualizarInformacion("INFO_PADRE",false,this.configuracionpunven);
				
				ConfiguracionPunVenBeanSwingJInternalFrameAdditional.procesarEventosVista(this.parametroGeneralUsuario,this.moduloActual,this.opcionActual,this.usuarioActual,this,FuncionTipo.BEFORE,ControlTipo.CHECKBOX,EventoTipo.CLIC,EventoSubTipo.CLICKED,sTipo,this.configuracionpunven,new Object(),this.configuracionpunvenParameterGeneral,this.configuracionpunvenReturnGeneral);
												
				
				


				
				
				ConfiguracionPunVenBeanSwingJInternalFrameAdditional.procesarEventosVista(this.parametroGeneralUsuario,this.moduloActual,this.opcionActual,this.usuarioActual,this,FuncionTipo.AFTER,ControlTipo.CHECKBOX,EventoTipo.CLIC,EventoSubTipo.CLICKED,sTipo,this.configuracionpunven,new Object(),this.configuracionpunvenParameterGeneral,this.configuracionpunvenReturnGeneral);
				
				
				if(esUsoDesdeHijoLocal) {
					Long id=0L;
				
					generalEntityParameterGeneral.setEventoGlobalTipo(EventoGlobalTipo.FORM_HIJO_ACTUALIZAR);
					generalEntityParameterGeneral.setsDominio("Formulario");
					generalEntityParameterGeneral.setsDominioTipo(ConfiguracionPunVen.class.getName());
					
					if(this.jInternalFrameParent!=null) {
						this.jInternalFrameParent.setEventoParentGeneral(esUsoDesdeHijoLocal,"Formulario",ConfiguracionPunVen.class.getName(),sTipo,"TEXTFIELD",esControlTabla,conIrServidorAplicacionParent,
							id,jCheckBox, EventoGlobalTipo.FORM_HIJO_ACTUALIZAR,ControlTipo.CHECKBOX,EventoTipo.CLIC,EventoSubTipo.CLICKED,arrClasses,
							evt,generalEntityParameterGeneral,null);
					}
				}			
			}
			
  		} catch(Exception e) {
  			FuncionesSwing.manageException2(this, e,logger,ConfiguracionPunVenConstantesFunciones.CLASSNAME);
  		}
    }
	
	public void jCheckBoxFocusGainedGeneral(String sTipo,java.awt.event.FocusEvent evt) { 	  
		try {
			if(this.permiteManejarEventosControl()) {
				//SELECCIONA FILA A OBJETO ACTUAL			
				this.seleccionarFilaTablaConfiguracionPunVenActual();
			
				//SELECCIONA FILA A OBJETO ANTERIOR
				Integer intSelectedRow = this.jTableDatosConfiguracionPunVen.getSelectedRow();
						
				if(intSelectedRow!=null && intSelectedRow>-1) {
					//ARCHITECTURE
					if(Constantes.ISUSAEJBLOGICLAYER) {
						this.configuracionpunvenAnterior =(ConfiguracionPunVen) this.configuracionpunvenLogic.getConfiguracionPunVens().toArray()[this.jTableDatosConfiguracionPunVen.convertRowIndexToModel(intSelectedRow)];
					} else if(Constantes.ISUSAEJBREMOTE || Constantes.ISUSAEJBHOME ) {
						this.configuracionpunvenAnterior =(ConfiguracionPunVen) this.configuracionpunvens.toArray()[this.jTableDatosConfiguracionPunVen.convertRowIndexToModel(intSelectedRow)];
					}
					//ARCHITECTURE
					
					//System.out.println(this.banco);
				}
			}
  		} catch(Exception e) {
  			FuncionesSwing.manageException2(this, e,logger,ConfiguracionPunVenConstantesFunciones.CLASSNAME);
  		}
    }
	
	public void jCheckBoxActionPerformedGeneral(String sTipo,ActionEvent evt) { 	  
		try {
			if(this.permiteManejarEventosControl()) {
				
				//SELECCIONA FILA A OBJETO ACTUAL			
				this.seleccionarFilaTablaConfiguracionPunVenActual();
				
				this.actualizarInformacion("EVENTO_CONTROL",false,this.configuracionpunven);
				
				this.actualizarInformacion("INFO_PADRE",false,this.configuracionpunven);
				
				ConfiguracionPunVenBeanSwingJInternalFrameAdditional.procesarEventosVista(this.parametroGeneralUsuario,this.moduloActual,this.opcionActual,this.usuarioActual,this,FuncionTipo.BEFORE,ControlTipo.CHECKBOX,EventoTipo.CLIC,EventoSubTipo.CLICKED,sTipo,this.configuracionpunven,new Object(),this.configuracionpunvenParameterGeneral,this.configuracionpunvenReturnGeneral);
				
				
				ConfiguracionPunVenBeanSwingJInternalFrameAdditional.procesarEventosVista(this.parametroGeneralUsuario,this.moduloActual,this.opcionActual,this.usuarioActual,this,FuncionTipo.AFTER,ControlTipo.CHECKBOX,EventoTipo.CLIC,EventoSubTipo.CLICKED,sTipo,this.configuracionpunven,new Object(),this.configuracionpunvenParameterGeneral,this.configuracionpunvenReturnGeneral);
			}
			
  		} catch(Exception e) {
  			FuncionesSwing.manageException2(this, e,logger,ConfiguracionPunVenConstantesFunciones.CLASSNAME);
  		}
    }
	
	//NO SE UTILIZA, SE USA EL DE ABAJO, IGUAL SE DEJA EL CODIGO COMO RESPALDO Y ES CASI IGUAL
	//ERROR:SI SE USA,AL HACER CLIC EN EL MISMO ELEMENTO O EJECUTAR SELECTEDITEM, SIEMPRE SE EJECUTA COMO SI ESCOGIERA OTRO ELEMENTO(NO DEBERIA)
	//@SuppressWarnings("rawtypes")
	public void jComboBoxActionPerformedGeneral(String sTipo,ActionEvent evt) {		
		try {
			/*		
			EventoGlobalTipo eventoGlobalTipo=EventoGlobalTipo.CONTROL_CHANGE;
			
			if(this.esUsoDesdeHijo) {
				eventoGlobalTipo=EventoGlobalTipo.FORM_HIJO_ACTUALIZAR;
			}
			
			Container containerParent=null;
			Component componentOpposite=null;
			Boolean esControlTabla=false;
				
			ArrayList<Classe> classes=new ArrayList<Classe>();
			
			ConfiguracionPunVenBeanSwingJInternalFrameAdditional.procesarEventosVista(this.parametroGeneralUsuario,this.moduloActual,this.opcionActual,this.usuarioActual,this,FuncionTipo.BEFORE,ControlTipo.COMBOBOX,EventoTipo.CHANGE,EventoSubTipo.CLICKED,sTipo,this.configuracionpunven,new Object(),this.configuracionpunvenParameterGeneral,this.configuracionpunvenReturnGeneral);
			JComboBox jComboBoxGenerico=null;						
			
			if(evt.getSource().getClass().equals(JComboBox.class)
				|| evt.getSource().getClass().equals(JComboBoxMe.class)) {
					
				jComboBoxGenerico=(JComboBox)evt.getSource();
				
				containerParent=jComboBoxGenerico.getParent();
				
				componentOpposite=null;//evt.getOppositeComponent();
				
				if((containerParent!=null && containerParent.getClass().equals(JTableMe.class))
					|| (componentOpposite!=null && componentOpposite.getClass().equals(JTableMe.class))
				) {					
					esControlTabla=true;
				}
				
				this.esControlTabla=esControlTabla;
			}
			
			String sFinalQueryCombo="";
			
			


			
			ConfiguracionPunVenBeanSwingJInternalFrameAdditional.procesarEventosVista(this.parametroGeneralUsuario,this.moduloActual,this.opcionActual,this.usuarioActual,this,FuncionTipo.AFTER,ControlTipo.COMBOBOX,EventoTipo.CHANGE,EventoSubTipo.CHANGED,sTipo,this.configuracionpunven,new Object(),this.configuracionpunvenParameterGeneral,this.configuracionpunvenReturnGeneral);
			*/						
  		} catch(Exception e) {
  			FuncionesSwing.manageException2(this, e,logger,ConfiguracionPunVenConstantesFunciones.CLASSNAME);
  		}		
    }
	
	@SuppressWarnings("rawtypes")
	public void jComboBoxItemStateChangedGeneral(String sTipo,ItemEvent evt) { 	  
		try {
			if (evt.getStateChange() == ItemEvent.SELECTED && this.permiteManejarEventosControl()) {
				//SELECCIONA FILA A OBJETO ACTUAL			
				this.seleccionarFilaTablaConfiguracionPunVenActual();
			
				//PARAMETROS LLAMAR FUNCION PARENT
				GeneralEntityParameterGeneral generalEntityParameterGeneral=new GeneralEntityParameterGeneral();			
				Boolean esUsoDesdeHijoLocal=false;
				Boolean conIrServidorAplicacionParent=false;	
				ArrayList<String> arrClasses=new ArrayList<String>();			
				//PARAMETROS LLAMAR FUNCION PARENT_FIN
			
			
				EventoGlobalTipo eventoGlobalTipo=EventoGlobalTipo.CONTROL_CHANGE;
				
				/*
				if(this.esUsoDesdeHijo) {
					eventoGlobalTipo=EventoGlobalTipo.FORM_HIJO_ACTUALIZAR;
				}
				*/
				
				Container containerParent=null;
				Component componentOpposite=null;
				Boolean esControlTabla=false;
				
				ArrayList<Classe> classes=new ArrayList<Classe>();
				
				JComboBox jComboBoxGenerico=null;						
				
				if(evt.getSource().getClass().equals(JComboBox.class)
					|| evt.getSource().getClass().equals(JComboBoxMe.class)) {
						
					jComboBoxGenerico=(JComboBox)evt.getSource();
					
					containerParent=jComboBoxGenerico.getParent();
					
					componentOpposite=null;//evt.getOppositeComponent();
					
					if((containerParent!=null && containerParent.getClass().equals(JTableMe.class))
					|| (componentOpposite!=null && componentOpposite.getClass().equals(JTableMe.class))
					) {					
						esControlTabla=true;
					}		
					
					this.esControlTabla=esControlTabla;
				}
				
				
				this.actualizarInformacion("EVENTO_CONTROL",false,this.configuracionpunven);
				
				this.actualizarInformacion("INFO_PADRE",false,this.configuracionpunven);
				
				ConfiguracionPunVenBeanSwingJInternalFrameAdditional.procesarEventosVista(this.parametroGeneralUsuario,this.moduloActual,this.opcionActual,this.usuarioActual,this,FuncionTipo.BEFORE,ControlTipo.COMBOBOX,EventoTipo.CHANGE,EventoSubTipo.CLICKED,sTipo,this.configuracionpunven,new Object(),this.configuracionpunvenParameterGeneral,this.configuracionpunvenReturnGeneral);
				
				
				String sFinalQueryCombo="";
				
				


				
				ConfiguracionPunVenBeanSwingJInternalFrameAdditional.procesarEventosVista(this.parametroGeneralUsuario,this.moduloActual,this.opcionActual,this.usuarioActual,this,FuncionTipo.AFTER,ControlTipo.COMBOBOX,EventoTipo.CHANGE,EventoSubTipo.CHANGED,sTipo,this.configuracionpunven,new Object(),this.configuracionpunvenParameterGeneral,this.configuracionpunvenReturnGeneral);
				
				if(esUsoDesdeHijoLocal) {
					Long id=0L;
				
					generalEntityParameterGeneral.setEventoGlobalTipo(EventoGlobalTipo.FORM_HIJO_ACTUALIZAR);
					generalEntityParameterGeneral.setsDominio("Formulario");
					generalEntityParameterGeneral.setsDominioTipo(ConfiguracionPunVen.class.getName());
								
					if(this.jInternalFrameParent!=null) {
						this.jInternalFrameParent.setEventoParentGeneral(esUsoDesdeHijoLocal,"Formulario",ConfiguracionPunVen.class.getName(),sTipo,"COMBOBOX",esControlTabla,conIrServidorAplicacionParent,
							id,jComboBoxGenerico, EventoGlobalTipo.FORM_HIJO_ACTUALIZAR,ControlTipo.COMBOBOX,EventoTipo.CHANGE,EventoSubTipo.CHANGED,arrClasses,
							evt,generalEntityParameterGeneral,null);
					}
				}			
			}
  		} catch(Exception e) {
  			FuncionesSwing.manageException2(this, e,logger,ConfiguracionPunVenConstantesFunciones.CLASSNAME);
  		}
    }
	
	//@SuppressWarnings("rawtypes")
	public void jComboBoxFocusLostGeneral(String sTipo,java.awt.event.FocusEvent evt) { 	  
		//MANEJADO EN ITEMLISTENER
		/*
		try {
			if(this.permiteManejarEventosControl()) {
				EventoGlobalTipo eventoGlobalTipo=EventoGlobalTipo.CONTROL_CHANGE;
				
				
				//if(this.esUsoDesdeHijo) {
				//	eventoGlobalTipo=EventoGlobalTipo.FORM_HIJO_ACTUALIZAR;
				//}
				
				
				Container containerParent=null;
				Component componentOpposite=null;
				Boolean esControlTabla=false;
				
				ArrayList<Classe> classes=new ArrayList<Classe>();
				
				//PARAMETROS LLAMAR FUNCION PARENT
				GeneralEntityParameterGeneral generalEntityParameterGeneral=new GeneralEntityParameterGeneral();			
				Boolean esUsoDesdeHijoLocal=false;
				Boolean conIrServidorAplicacionParent=false;	
				ArrayList<String> arrClasses=new ArrayList<String>();			
				//PARAMETROS LLAMAR FUNCION PARENT_FIN
			
				this.actualizarInformacion("EVENTO_CONTROL",false,this.configuracionpunven);
				
				this.actualizarInformacion("INFO_PADRE",false,this.configuracionpunven);
				
				ConfiguracionPunVenBeanSwingJInternalFrameAdditional.procesarEventosVista(this.parametroGeneralUsuario,this.moduloActual,this.opcionActual,this.usuarioActual,this,FuncionTipo.BEFORE,ControlTipo.COMBOBOX,EventoTipo.CHANGE,EventoSubTipo.CLICKED,sTipo,this.configuracionpunven,new Object(),this.configuracionpunvenParameterGeneral,this.configuracionpunvenReturnGeneral);
				JComboBox jComboBoxGenerico=null;						
				
				if(evt.getSource().getClass().equals(JComboBox.class)
					|| evt.getSource().getClass().equals(JComboBoxMe.class)) {
						
					jComboBoxGenerico=(JComboBox)evt.getSource();
					
					containerParent=jComboBoxGenerico.getParent();
					
					componentOpposite=evt.getOppositeComponent();
					
					if((containerParent!=null && containerParent.getClass().equals(JTableMe.class))
					|| (componentOpposite!=null && componentOpposite.getClass().equals(JTableMe.class))
					) {					
						esControlTabla=true;
					}
					
					this.esControlTabla=esControlTabla;
				}
				
				String sFinalQueryCombo="";
				
				


				
				ConfiguracionPunVenBeanSwingJInternalFrameAdditional.procesarEventosVista(this.parametroGeneralUsuario,this.moduloActual,this.opcionActual,this.usuarioActual,this,FuncionTipo.AFTER,ControlTipo.COMBOBOX,EventoTipo.CHANGE,EventoSubTipo.CHANGED,sTipo,this.configuracionpunven,new Object(),this.configuracionpunvenParameterGeneral,this.configuracionpunvenReturnGeneral);
				
				
				if(esUsoDesdeHijoLocal) {
					Long id=0L;
					
					generalEntityParameterGeneral.setEventoGlobalTipo(EventoGlobalTipo.FORM_HIJO_ACTUALIZAR);
					generalEntityParameterGeneral.setsDominio("Formulario");
					generalEntityParameterGeneral.setsDominioTipo(ConfiguracionPunVen.class.getName());
				
					if(this.jInternalFrameParent!=null) {
						this.jInternalFrameParent.setEventoParentGeneral(esUsoDesdeHijoLocal,"Formulario",ConfiguracionPunVen.class.getName(),sTipo,"TEXTFIELD",esControlTabla,conIrServidorAplicacionParent,
							id,jComboBoxGenerico, EventoGlobalTipo.FORM_HIJO_ACTUALIZAR,ControlTipo.COMBOBOX,EventoTipo.CHANGE,EventoSubTipo.CHANGED,arrClasses,
							evt,generalEntityParameterGeneral,null);
					}
				}			
			}
			
  		} catch(Exception e) {
  			FuncionesSwing.manageException2(this, e,logger,ConfiguracionPunVenConstantesFunciones.CLASSNAME);
  		}
		
		*/
    }
	
	public void jComboBoxFocusGainedGeneral(String sTipo,java.awt.event.FocusEvent evt) { 	  
		try {
			//SELECCIONA FILA A OBJETO ACTUAL			
			this.seleccionarFilaTablaConfiguracionPunVenActual();
			
			//SELECCIONA FILA A OBJETO ANTERIOR
			Integer intSelectedRow = this.jTableDatosConfiguracionPunVen.getSelectedRow();
					
			if(intSelectedRow!=null && intSelectedRow>-1) {
				//ARCHITECTURE
				if(Constantes.ISUSAEJBLOGICLAYER) {
					this.configuracionpunvenAnterior =(ConfiguracionPunVen) this.configuracionpunvenLogic.getConfiguracionPunVens().toArray()[this.jTableDatosConfiguracionPunVen.convertRowIndexToModel(intSelectedRow)];
				} else if(Constantes.ISUSAEJBREMOTE || Constantes.ISUSAEJBHOME ) {
					this.configuracionpunvenAnterior =(ConfiguracionPunVen) this.configuracionpunvens.toArray()[this.jTableDatosConfiguracionPunVen.convertRowIndexToModel(intSelectedRow)];
				}
				//ARCHITECTURE
				
				//System.out.println(this.banco);
			}
			
		} catch(Exception e) {
  			FuncionesSwing.manageException2(this, e,logger,ConfiguracionPunVenConstantesFunciones.CLASSNAME);
  		}
    }		
	
	public void tableValueChangedGeneral(String sTipo,ListSelectionEvent evt) { 	  
		try {
			if(this.permiteManejarEventosControl()) {
				ConfiguracionPunVenBeanSwingJInternalFrameAdditional.procesarEventosVista(this.parametroGeneralUsuario,this.moduloActual,this.opcionActual,this.usuarioActual,this,FuncionTipo.BEFORE,ControlTipo.TABLE,EventoTipo.CHANGE,EventoSubTipo.CHANGED,sTipo,this.configuracionpunven,new Object(),this.configuracionpunvenParameterGeneral,this.configuracionpunvenReturnGeneral);
				
				if(sTipo.equals("TableDatosSeleccionarConfiguracionPunVen")) {
					//BYDAN_DESHABILITADO
					//try {jTableDatosConfiguracionPunVenListSelectionListener(e);}catch(Exception e1){e1.printStackTrace();}
					
					//SOLO CUANDO MOUSE ES SOLTADO
					if (!evt.getValueIsAdjusting()) {
						//SELECCIONA FILA A OBJETO ACTUAL
						Integer intSelectedRow = this.jTableDatosConfiguracionPunVen.getSelectedRow();
						
						if(intSelectedRow!=null && intSelectedRow>-1) {
							//ARCHITECTURE
							if(Constantes.ISUSAEJBLOGICLAYER) {
								this.configuracionpunven =(ConfiguracionPunVen) this.configuracionpunvenLogic.getConfiguracionPunVens().toArray()[this.jTableDatosConfiguracionPunVen.convertRowIndexToModel(intSelectedRow)];
							} else if(Constantes.ISUSAEJBREMOTE || Constantes.ISUSAEJBHOME ) {
								this.configuracionpunven =(ConfiguracionPunVen) this.configuracionpunvens.toArray()[this.jTableDatosConfiguracionPunVen.convertRowIndexToModel(intSelectedRow)];
							}
							//ARCHITECTURE
							
							//System.out.println(this.configuracionpunven);
						}
					}
					
				} else if(sTipo.equals("jButtonCancelarConfiguracionPunVen")) {
				
				}
				
				ConfiguracionPunVenBeanSwingJInternalFrameAdditional.procesarEventosVista(this.parametroGeneralUsuario,this.moduloActual,this.opcionActual,this.usuarioActual,this,FuncionTipo.AFTER,ControlTipo.TABLE,EventoTipo.CHANGE,EventoSubTipo.CHANGED,sTipo,this.configuracionpunven,new Object(),this.configuracionpunvenParameterGeneral,this.configuracionpunvenReturnGeneral);
			}
			
  		} catch(Exception e) {
  			FuncionesSwing.manageException2(this, e,logger,ConfiguracionPunVenConstantesFunciones.CLASSNAME);
  		}
    }
	
	public void tableMouseAdapterGeneral(String sTipo,MouseEvent evt) { 	  
		try {
			ConfiguracionPunVenBeanSwingJInternalFrameAdditional.procesarEventosVista(this.parametroGeneralUsuario,this.moduloActual,this.opcionActual,this.usuarioActual,this,FuncionTipo.BEFORE,ControlTipo.TABLE,EventoTipo.MOUSE,EventoSubTipo.CLICKED,sTipo,this.configuracionpunven,new Object(),this.configuracionpunvenParameterGeneral,this.configuracionpunvenReturnGeneral);
			
			if(sTipo.equals("DatosSeleccionarConfiguracionPunVen")) {
				if (evt.getClickCount() == 2) {
					jButtonIdActionPerformed(null,jTableDatosConfiguracionPunVen.getSelectedRow(),false,false);
				}	
			} else if(sTipo.equals("jButtonCancelarConfiguracionPunVen")) {
			
			}
			
			ConfiguracionPunVenBeanSwingJInternalFrameAdditional.procesarEventosVista(this.parametroGeneralUsuario,this.moduloActual,this.opcionActual,this.usuarioActual,this,FuncionTipo.AFTER,ControlTipo.TABLE,EventoTipo.MOUSE,EventoSubTipo.CLICKED,sTipo,this.configuracionpunven,new Object(),this.configuracionpunvenParameterGeneral,this.configuracionpunvenReturnGeneral);
  		} catch(Exception e) {
  			FuncionesSwing.manageException2(this, e,logger,ConfiguracionPunVenConstantesFunciones.CLASSNAME);
  		}
    }
	
	;
	
	public void jButtonActionPerformedTecladoGeneral(String sTipo,ActionEvent evt) { 	  
		try {
			this.startProcessConfiguracionPunVen();
			
			ConfiguracionPunVenBeanSwingJInternalFrameAdditional.procesarEventosVista(this.parametroGeneralUsuario,this.moduloActual,this.opcionActual,this.usuarioActual,this,FuncionTipo.BEFORE,ControlTipo.KEY,EventoTipo.CLIC,EventoSubTipo.CLICKED,sTipo,this.configuracionpunven,new Object(),this.configuracionpunvenParameterGeneral,this.configuracionpunvenReturnGeneral);
			
			if(sTipo.equals("NuevoConfiguracionPunVen")) {
				jButtonNuevoConfiguracionPunVenActionPerformed(evt,false);
				
			} else if(sTipo.equals("DuplicarConfiguracionPunVen")) {
				jButtonDuplicarConfiguracionPunVenActionPerformed(evt,false);
				
			} else if(sTipo.equals("CopiarConfiguracionPunVen")) {
				jButtonCopiarConfiguracionPunVenActionPerformed(evt);
				
			} else if(sTipo.equals("VerFormConfiguracionPunVen")) {
				jButtonVerFormConfiguracionPunVenActionPerformed(evt);
				
			} else if(sTipo.equals("NuevoRelacionesConfiguracionPunVen")) {
				jButtonNuevoConfiguracionPunVenActionPerformed(evt,true);
				
			} else if(sTipo.equals("ModificarConfiguracionPunVen")) {
				jButtonModificarConfiguracionPunVenActionPerformed(evt);
				
			} else if(sTipo.equals("ActualizarConfiguracionPunVen")) {
				jButtonActualizarConfiguracionPunVenActionPerformed(evt);
				
			} else if(sTipo.equals("EliminarConfiguracionPunVen")) {
				jButtonEliminarConfiguracionPunVenActionPerformed(evt);
				
			} else if(sTipo.equals("GuardarCambiosTablaConfiguracionPunVen")) {
				jButtonGuardarCambiosConfiguracionPunVenActionPerformed(evt);
				
			} else if(sTipo.equals("CancelarConfiguracionPunVen")) {
				jButtonCancelarConfiguracionPunVenActionPerformed(evt);
				
			} else if(sTipo.equals("CerrarConfiguracionPunVen")) {
				jButtonCerrarConfiguracionPunVenActionPerformed(evt);
				
			} else if(sTipo.equals("GuardarCambiosConfiguracionPunVen")) {
				jButtonGuardarCambiosConfiguracionPunVenActionPerformed(evt);
			
			} else if(sTipo.equals("NuevoGuardarCambiosConfiguracionPunVen")) {
				jButtonNuevoGuardarCambiosConfiguracionPunVenActionPerformed(evt);
			
			} else if(sTipo.equals("AbrirOrderByConfiguracionPunVen")) {
				jButtonAbrirOrderByConfiguracionPunVenActionPerformed(evt);
			
			} else if(sTipo.equals("RecargarInformacionConfiguracionPunVen")) {
				jButtonRecargarInformacionConfiguracionPunVenActionPerformed(evt);
			
			} else if(sTipo.equals("AnterioresConfiguracionPunVen")) {
				jButtonAnterioresConfiguracionPunVenActionPerformed(evt);			
			
			}  else if(sTipo.equals("SiguientesConfiguracionPunVen")) {
				jButtonSiguientesConfiguracionPunVenActionPerformed(evt);			
			} 
			
			
			//BUSQUEDA GENERAL CAMPO
			else if(sTipo.equals("idConfiguracionPunVenBusqueda")) {
				this.jButtonidConfiguracionPunVenBusquedaActionPerformed(evt);
			}
			//ACTUALIZAR CAMPO
			else if(sTipo.equals("id_empresaConfiguracionPunVenUpdate")) {
				this.jButtonid_empresaConfiguracionPunVenUpdateActionPerformed(evt);
			}
			//BUSQUEDA GENERAL CAMPO
			else if(sTipo.equals("id_empresaConfiguracionPunVenBusqueda")) {
				this.jButtonid_empresaConfiguracionPunVenBusquedaActionPerformed(evt);
			}
			//ACTUALIZAR CAMPO
			else if(sTipo.equals("id_sucursalConfiguracionPunVenUpdate")) {
				this.jButtonid_sucursalConfiguracionPunVenUpdateActionPerformed(evt);
			}
			//BUSQUEDA GENERAL CAMPO
			else if(sTipo.equals("id_sucursalConfiguracionPunVenBusqueda")) {
				this.jButtonid_sucursalConfiguracionPunVenBusquedaActionPerformed(evt);
			}
			//ACTUALIZAR CAMPO
			else if(sTipo.equals("id_bodegaConfiguracionPunVenUpdate")) {
				this.jButtonid_bodegaConfiguracionPunVenUpdateActionPerformed(evt);
			}
			//BUSQUEDA GENERAL CAMPO
			else if(sTipo.equals("id_bodegaConfiguracionPunVenBusqueda")) {
				this.jButtonid_bodegaConfiguracionPunVenBusquedaActionPerformed(evt);
			}
			//ACTUALIZAR CAMPO
			else if(sTipo.equals("id_cuenta_contable_efectivoConfiguracionPunVenUpdate")) {
				this.jButtonid_cuenta_contable_efectivoConfiguracionPunVenUpdateActionPerformed(evt);
			}
			//BUSQUEDA GENERAL CAMPO
			else if(sTipo.equals("id_cuenta_contable_efectivoConfiguracionPunVenBusqueda")) {
				this.jButtonid_cuenta_contable_efectivoConfiguracionPunVenBusquedaActionPerformed(evt);
			}
			//ACTUALIZAR CAMPO
			else if(sTipo.equals("id_cuenta_contable_iceConfiguracionPunVenUpdate")) {
				this.jButtonid_cuenta_contable_iceConfiguracionPunVenUpdateActionPerformed(evt);
			}
			//BUSQUEDA GENERAL CAMPO
			else if(sTipo.equals("id_cuenta_contable_iceConfiguracionPunVenBusqueda")) {
				this.jButtonid_cuenta_contable_iceConfiguracionPunVenBusquedaActionPerformed(evt);
			}
			//ACTUALIZAR CAMPO
			else if(sTipo.equals("id_cuenta_contable_otrosConfiguracionPunVenUpdate")) {
				this.jButtonid_cuenta_contable_otrosConfiguracionPunVenUpdateActionPerformed(evt);
			}
			//BUSQUEDA GENERAL CAMPO
			else if(sTipo.equals("id_cuenta_contable_otrosConfiguracionPunVenBusqueda")) {
				this.jButtonid_cuenta_contable_otrosConfiguracionPunVenBusquedaActionPerformed(evt);
			}
			//BUSQUEDA CAMPO
			else if(sTipo.equals("id_cliente_consumidor_finalConfiguracionPunVen")) {
				this.jButtonid_cliente_consumidor_finalConfiguracionPunVenActionPerformed(evt);
			}
			//ACTUALIZAR CAMPO
			else if(sTipo.equals("id_cliente_consumidor_finalConfiguracionPunVenUpdate")) {
				this.jButtonid_cliente_consumidor_finalConfiguracionPunVenUpdateActionPerformed(evt);
			}
			//BUSQUEDA GENERAL CAMPO
			else if(sTipo.equals("id_cliente_consumidor_finalConfiguracionPunVenBusqueda")) {
				this.jButtonid_cliente_consumidor_finalConfiguracionPunVenBusquedaActionPerformed(evt);
			}
			//ACTUALIZAR CAMPO
			else if(sTipo.equals("id_tipo_documento_facturaConfiguracionPunVenUpdate")) {
				this.jButtonid_tipo_documento_facturaConfiguracionPunVenUpdateActionPerformed(evt);
			}
			//BUSQUEDA GENERAL CAMPO
			else if(sTipo.equals("id_tipo_documento_facturaConfiguracionPunVenBusqueda")) {
				this.jButtonid_tipo_documento_facturaConfiguracionPunVenBusquedaActionPerformed(evt);
			}
			//ACTUALIZAR CAMPO
			else if(sTipo.equals("id_tipo_documento_nota_ventaConfiguracionPunVenUpdate")) {
				this.jButtonid_tipo_documento_nota_ventaConfiguracionPunVenUpdateActionPerformed(evt);
			}
			//BUSQUEDA GENERAL CAMPO
			else if(sTipo.equals("id_tipo_documento_nota_ventaConfiguracionPunVenBusqueda")) {
				this.jButtonid_tipo_documento_nota_ventaConfiguracionPunVenBusquedaActionPerformed(evt);
			}
			//ACTUALIZAR CAMPO
			else if(sTipo.equals("id_tipo_documento_nota_creditoConfiguracionPunVenUpdate")) {
				this.jButtonid_tipo_documento_nota_creditoConfiguracionPunVenUpdateActionPerformed(evt);
			}
			//BUSQUEDA GENERAL CAMPO
			else if(sTipo.equals("id_tipo_documento_nota_creditoConfiguracionPunVenBusqueda")) {
				this.jButtonid_tipo_documento_nota_creditoConfiguracionPunVenBusquedaActionPerformed(evt);
			}
			//ACTUALIZAR CAMPO
			else if(sTipo.equals("id_tipo_documento_tarjeta_creditoConfiguracionPunVenUpdate")) {
				this.jButtonid_tipo_documento_tarjeta_creditoConfiguracionPunVenUpdateActionPerformed(evt);
			}
			//BUSQUEDA GENERAL CAMPO
			else if(sTipo.equals("id_tipo_documento_tarjeta_creditoConfiguracionPunVenBusqueda")) {
				this.jButtonid_tipo_documento_tarjeta_creditoConfiguracionPunVenBusquedaActionPerformed(evt);
			}
			//ACTUALIZAR CAMPO
			else if(sTipo.equals("id_formato_facturaConfiguracionPunVenUpdate")) {
				this.jButtonid_formato_facturaConfiguracionPunVenUpdateActionPerformed(evt);
			}
			//BUSQUEDA GENERAL CAMPO
			else if(sTipo.equals("id_formato_facturaConfiguracionPunVenBusqueda")) {
				this.jButtonid_formato_facturaConfiguracionPunVenBusquedaActionPerformed(evt);
			}
			//ACTUALIZAR CAMPO
			else if(sTipo.equals("id_formato_nota_ventaConfiguracionPunVenUpdate")) {
				this.jButtonid_formato_nota_ventaConfiguracionPunVenUpdateActionPerformed(evt);
			}
			//BUSQUEDA GENERAL CAMPO
			else if(sTipo.equals("id_formato_nota_ventaConfiguracionPunVenBusqueda")) {
				this.jButtonid_formato_nota_ventaConfiguracionPunVenBusquedaActionPerformed(evt);
			}
			//ACTUALIZAR CAMPO
			else if(sTipo.equals("id_formato_nota_creditoConfiguracionPunVenUpdate")) {
				this.jButtonid_formato_nota_creditoConfiguracionPunVenUpdateActionPerformed(evt);
			}
			//BUSQUEDA GENERAL CAMPO
			else if(sTipo.equals("id_formato_nota_creditoConfiguracionPunVenBusqueda")) {
				this.jButtonid_formato_nota_creditoConfiguracionPunVenBusquedaActionPerformed(evt);
			}
			//ACTUALIZAR CAMPO
			else if(sTipo.equals("id_transaccion_facturaConfiguracionPunVenUpdate")) {
				this.jButtonid_transaccion_facturaConfiguracionPunVenUpdateActionPerformed(evt);
			}
			//BUSQUEDA GENERAL CAMPO
			else if(sTipo.equals("id_transaccion_facturaConfiguracionPunVenBusqueda")) {
				this.jButtonid_transaccion_facturaConfiguracionPunVenBusquedaActionPerformed(evt);
			}
			//ACTUALIZAR CAMPO
			else if(sTipo.equals("id_transaccion_nota_ventaConfiguracionPunVenUpdate")) {
				this.jButtonid_transaccion_nota_ventaConfiguracionPunVenUpdateActionPerformed(evt);
			}
			//BUSQUEDA GENERAL CAMPO
			else if(sTipo.equals("id_transaccion_nota_ventaConfiguracionPunVenBusqueda")) {
				this.jButtonid_transaccion_nota_ventaConfiguracionPunVenBusquedaActionPerformed(evt);
			}
			//ACTUALIZAR CAMPO
			else if(sTipo.equals("id_transaccion_nota_creditoConfiguracionPunVenUpdate")) {
				this.jButtonid_transaccion_nota_creditoConfiguracionPunVenUpdateActionPerformed(evt);
			}
			//BUSQUEDA GENERAL CAMPO
			else if(sTipo.equals("id_transaccion_nota_creditoConfiguracionPunVenBusqueda")) {
				this.jButtonid_transaccion_nota_creditoConfiguracionPunVenBusquedaActionPerformed(evt);
			}
			//ACTUALIZAR CAMPO
			else if(sTipo.equals("id_transaccion_cuenta_facturaConfiguracionPunVenUpdate")) {
				this.jButtonid_transaccion_cuenta_facturaConfiguracionPunVenUpdateActionPerformed(evt);
			}
			//BUSQUEDA GENERAL CAMPO
			else if(sTipo.equals("id_transaccion_cuenta_facturaConfiguracionPunVenBusqueda")) {
				this.jButtonid_transaccion_cuenta_facturaConfiguracionPunVenBusquedaActionPerformed(evt);
			}
			//ACTUALIZAR CAMPO
			else if(sTipo.equals("id_transaccion_cuenta_nota_ventaConfiguracionPunVenUpdate")) {
				this.jButtonid_transaccion_cuenta_nota_ventaConfiguracionPunVenUpdateActionPerformed(evt);
			}
			//BUSQUEDA GENERAL CAMPO
			else if(sTipo.equals("id_transaccion_cuenta_nota_ventaConfiguracionPunVenBusqueda")) {
				this.jButtonid_transaccion_cuenta_nota_ventaConfiguracionPunVenBusquedaActionPerformed(evt);
			}
			//ACTUALIZAR CAMPO
			else if(sTipo.equals("id_transaccion_cuenta_nota_creditoConfiguracionPunVenUpdate")) {
				this.jButtonid_transaccion_cuenta_nota_creditoConfiguracionPunVenUpdateActionPerformed(evt);
			}
			//BUSQUEDA GENERAL CAMPO
			else if(sTipo.equals("id_transaccion_cuenta_nota_creditoConfiguracionPunVenBusqueda")) {
				this.jButtonid_transaccion_cuenta_nota_creditoConfiguracionPunVenBusquedaActionPerformed(evt);
			}
			
			ConfiguracionPunVenBeanSwingJInternalFrameAdditional.procesarEventosVista(this.parametroGeneralUsuario,this.moduloActual,this.opcionActual,this.usuarioActual,this,FuncionTipo.AFTER,ControlTipo.KEY,EventoTipo.CLIC,EventoSubTipo.CLICKED,sTipo,this.configuracionpunven,new Object(),this.configuracionpunvenParameterGeneral,this.configuracionpunvenReturnGeneral);
  		} catch(Exception e) {
  			FuncionesSwing.manageException2(this, e,logger,ConfiguracionPunVenConstantesFunciones.CLASSNAME);
			
  		}  finally {
      		this.finishProcessConfiguracionPunVen();
      	}
    }
	
	public void internalFrameClosingInternalFrameGeneral(String sTipo,InternalFrameEvent evt) { 	  
		try {
			ConfiguracionPunVenBeanSwingJInternalFrameAdditional.procesarEventosVista(this.parametroGeneralUsuario,this.moduloActual,this.opcionActual,this.usuarioActual,this,FuncionTipo.BEFORE,ControlTipo.WINDOW,EventoTipo.CLIC,EventoSubTipo.CLOSING,sTipo,this.configuracionpunven,new Object(),this.configuracionpunvenParameterGeneral,this.configuracionpunvenReturnGeneral);
			
			if(sTipo.equals("CloseInternalFrameConfiguracionPunVen")) {
				closingInternalFrameConfiguracionPunVen();
				
			} else if(sTipo.equals("jButtonCancelarConfiguracionPunVen")) {
				JInternalFrameBase jInternalFrameDetalleFormConfiguracionPunVen = (JInternalFrameBase)evt.getSource();
	            	
	            ConfiguracionPunVenBeanSwingJInternalFrame jInternalFrameParent=(ConfiguracionPunVenBeanSwingJInternalFrame)jInternalFrameDetalleFormConfiguracionPunVen.getjInternalFrameParent();
	            
				jInternalFrameParent.jButtonCancelarConfiguracionPunVenActionPerformed(null);
			}
			
			ConfiguracionPunVenBeanSwingJInternalFrameAdditional.procesarEventosVista(this.parametroGeneralUsuario,this.moduloActual,this.opcionActual,this.usuarioActual,this,FuncionTipo.AFTER,ControlTipo.WINDOW,EventoTipo.CLIC,EventoSubTipo.CLOSING,sTipo,this.configuracionpunven,new Object(),this.configuracionpunvenParameterGeneral,this.configuracionpunvenReturnGeneral);
  		} catch(Exception e) {
  			FuncionesSwing.manageException2(this, e,logger,ConfiguracionPunVenConstantesFunciones.CLASSNAME);
  		}
    }
	
	public void recargarFormConfiguracionPunVen(String sTipo,String sDominio,EventoGlobalTipo eventoGlobalTipo,ControlTipo controlTipo,EventoTipo eventoTipo,EventoSubTipo eventoSubTipo,String sTipoGeneral,ArrayList<Classe> classes,Boolean conIrServidorAplicacion) throws Exception {
		this.recargarFormConfiguracionPunVen(sTipo,sDominio,eventoGlobalTipo,controlTipo,eventoTipo,eventoSubTipo,sTipoGeneral,classes,conIrServidorAplicacion,false);
	}
	
	public void recargarFormConfiguracionPunVen(String sTipo,String sDominio,EventoGlobalTipo eventoGlobalTipo,ControlTipo controlTipo,EventoTipo eventoTipo,EventoSubTipo eventoSubTipo,String sTipoGeneral,ArrayList<Classe> classes,Boolean conIrServidorAplicacion,Boolean esControlTabla) throws Exception {
		if(this.permiteRecargarForm && this.permiteMantenimiento(this.configuracionpunven)) {
			if(!esControlTabla) {
				if(ConfiguracionPunVenJInternalFrame.ISBINDING_MANUAL_TABLA) {			
					this.setVariablesFormularioToObjetoActualConfiguracionPunVen(this.configuracionpunven,true,false);
					this.setVariablesFormularioToObjetoActualForeignKeysConfiguracionPunVen(this.configuracionpunven);			
				}
				
				if(this.configuracionpunvenSessionBean.getEstaModoGuardarRelaciones()) {
					this.setVariablesFormularioRelacionesToObjetoActualConfiguracionPunVen(this.configuracionpunven,classes);				
				}
			
				if(conIrServidorAplicacion) {
					//ARCHITECTURE
					if(Constantes.ISUSAEJBLOGICLAYER) {						
						this.configuracionpunvenReturnGeneral=configuracionpunvenLogic.procesarEventosConfiguracionPunVensWithConnection(this.parametroGeneralUsuario,this.moduloActual,this.opcionActual,this.usuarioActual,eventoGlobalTipo,controlTipo,eventoTipo,eventoSubTipo,sTipo,this.configuracionpunvenLogic.getConfiguracionPunVens(),this.configuracionpunven,this.configuracionpunvenParameterGeneral,this.isEsNuevoConfiguracionPunVen,classes);//this.configuracionpunvenLogic.getConfiguracionPunVen()//sTipoGeneral
									
					} else if(Constantes.ISUSAEJBREMOTE) {
									
					} else if(Constantes.ISUSAEJBHOME) {
					}
					//ARCHITECTURE
					
					//ACTUALIZA VARIABLES DEFECTO DESDE LOGIC A RETURN GENERAL Y LUEGO A BEAN
					//this.setVariablesObjetoReturnGeneralToBeanConfiguracionPunVen(this.configuracionpunvenReturnGeneral,this.configuracionpunvenBean,false);
						
					//ACTUALIZA VARIABLES RELACIONES DEFECTO DESDE LOGIC A RETURN GENERAL Y LUEGO A BEAN
					if(this.configuracionpunvenSessionBean.getEstaModoGuardarRelaciones()) {
						//this.setVariablesRelacionesObjetoReturnGeneralToBeanConfiguracionPunVen(classes,this.configuracionpunvenReturnGeneral,this.configuracionpunvenBean,false);
					}
						
					if(this.configuracionpunvenReturnGeneral.getConRecargarPropiedades()) {
						//INICIALIZA VARIABLES COMBOS NORMALES (FK)
						this.setVariablesObjetoActualToFormularioForeignKeyConfiguracionPunVen(this.configuracionpunvenReturnGeneral.getConfiguracionPunVen());
							
						//INICIALIZA VARIABLES NORMALES A FORMULARIO(SIN FK)
						this.setVariablesObjetoActualToFormularioConfiguracionPunVen(this.configuracionpunvenReturnGeneral.getConfiguracionPunVen());	
					}
						
					if(this.configuracionpunvenReturnGeneral.getConRecargarRelaciones()) {
						//INICIALIZA VARIABLES RELACIONES A FORMULARIO
						this.setVariablesRelacionesObjetoActualToFormularioConfiguracionPunVen(this.configuracionpunvenReturnGeneral.getConfiguracionPunVen(),classes);//this.configuracionpunvenBean);	
					}									
					
				} else {				
					//INICIALIZA VARIABLES RELACIONES A FORMULARIO
					this.setVariablesRelacionesObjetoActualToFormularioConfiguracionPunVen(this.configuracionpunven,classes);//this.configuracionpunvenBean);									
				}
			
				if(ConfiguracionPunVenJInternalFrame.ISBINDING_MANUAL_TABLA) {
					this.setVariablesFormularioToObjetoActualConfiguracionPunVen(this.configuracionpunven,true,false);
					this.setVariablesFormularioToObjetoActualForeignKeysConfiguracionPunVen(this.configuracionpunven);				
				}
				
			} else {
				
				if(((controlTipo.equals(ControlTipo.TEXTBOX) || controlTipo.equals(ControlTipo.DATE)
					|| controlTipo.equals(ControlTipo.TEXTAREA) || controlTipo.equals(ControlTipo.COMBOBOX)
					)				
					&& eventoTipo.equals(EventoTipo.CHANGE)
					)
					
					|| (controlTipo.equals(ControlTipo.CHECKBOX) && eventoTipo.equals(EventoTipo.CLIC))
					
				) { // && sTipoGeneral.equals("TEXTBOX")
					
					if(this.configuracionpunvenAnterior!=null) {
						this.configuracionpunven=this.configuracionpunvenAnterior;
					}
				}
				
				if(conIrServidorAplicacion) {
					//ARCHITECTURE
					if(Constantes.ISUSAEJBLOGICLAYER) {						
						this.configuracionpunvenReturnGeneral=configuracionpunvenLogic.procesarEventosConfiguracionPunVensWithConnection(this.parametroGeneralUsuario,this.moduloActual,this.opcionActual,this.usuarioActual,eventoGlobalTipo,controlTipo,eventoTipo,eventoSubTipo,sTipo,this.configuracionpunvenLogic.getConfiguracionPunVens(),this.configuracionpunven,this.configuracionpunvenParameterGeneral,this.isEsNuevoConfiguracionPunVen,classes);//this.configuracionpunvenLogic.getConfiguracionPunVen()//sTipoGeneral
									
					} else if(Constantes.ISUSAEJBREMOTE) {
									
					} else if(Constantes.ISUSAEJBHOME) {
					}
					//ARCHITECTURE
				}
				
				//ARCHITECTURE
				if(Constantes.ISUSAEJBLOGICLAYER) {
					//NO ENTENDIBLE PORQUE PONER
					//if(this.configuracionpunvenSessionBean.getEstaModoGuardarRelaciones() 
					//	|| this.configuracionpunvenSessionBean.getEsGuardarRelacionado())	{
						actualizarLista(this.configuracionpunvenReturnGeneral.getConfiguracionPunVen(),configuracionpunvenLogic.getConfiguracionPunVens());
					//}
				} else if(Constantes.ISUSAEJBREMOTE||Constantes.ISUSAEJBHOME) {
					actualizarLista(this.configuracionpunvenReturnGeneral.getConfiguracionPunVen(),this.configuracionpunvens);
				}
				//ARCHITECTURE
				
				//this.jTableDatosConfiguracionPunVen.repaint();
				
				//((AbstractTableModel) this.jTableDatosConfiguracionPunVen.getModel()).fireTableDataChanged();
				
				this.actualizarVisualTableDatosConfiguracionPunVen();
			}
		}
	}
	
	public void actualizarVisualTableDatosConfiguracionPunVen() throws Exception {
		
		ConfiguracionPunVenModel configuracionpunvenModel=(ConfiguracionPunVenModel)this.jTableDatosConfiguracionPunVen.getModel();
		
		if(Constantes.ISUSAEJBLOGICLAYER) {
			configuracionpunvenModel.configuracionpunvens=this.configuracionpunvenLogic.getConfiguracionPunVens();
		
		} else if(Constantes.ISUSAEJBREMOTE || Constantes.ISUSAEJBHOME ) {
			configuracionpunvenModel.configuracionpunvens=this.configuracionpunvens;
		}
		
		
		((ConfiguracionPunVenModel) this.jTableDatosConfiguracionPunVen.getModel()).fireTableDataChanged();
	}
	
	public void actualizarVisualTableDatosEventosVistaConfiguracionPunVen() throws Exception {
		
		//ARCHITECTURE
		if(Constantes.ISUSAEJBLOGICLAYER) {
			this.actualizarLista(this.getconfiguracionpunvenAnterior(),this.configuracionpunvenLogic.getConfiguracionPunVens());
					
		} else if(Constantes.ISUSAEJBREMOTE||Constantes.ISUSAEJBHOME) {
			this.actualizarLista(this.getconfiguracionpunvenAnterior(),this.configuracionpunvens);
		}
		//ARCHITECTURE
						
		this.actualizarFilaTotales();
						
		this.actualizarVisualTableDatosConfiguracionPunVen();	
	}
	
	public void setVariablesRelacionesObjetoActualToFormularioConfiguracionPunVen(ConfiguracionPunVen configuracionpunven,ArrayList<Classe> classes) throws Exception { 
		try {
			
			
		} catch(Exception e) {
			FuncionesSwing.manageException(this, e,logger,ConfiguracionPunVenConstantesFunciones.CLASSNAME);
		}
	}
	
	public void setEventoParentGeneral(Boolean esUsoDesdeHijo,String sDominio,String sDominioTipo,String sTipo,String sTipoGeneral,Boolean esControlTabla,Boolean conIrServidorAplicacion,
						Long id,Component control, EventoGlobalTipo eventoGlobalTipo,ControlTipo controlTipo,EventoTipo eventoTipo,EventoSubTipo eventoSubTipo,ArrayList<String> arrClasses,
						Object evt,GeneralEntityParameterReturnGeneral generalEntityParameterGeneral,Object otro) { 	  
		try {
			
			if(this.permiteManejarEventosControl()) {
				
				//BASE COPIADO DESDE TEXTFIELLOSTFOCUS
				
				//EventoGlobalTipo.FORM_HIJO_ACTUALIZAR;
				Boolean conTodasRelaciones=false;
				
				this.esUsoDesdeHijo=esUsoDesdeHijo;
										
				ConfiguracionPunVenBeanSwingJInternalFrameAdditional.procesarEventosVista(this.parametroGeneralUsuario,this.moduloActual,this.opcionActual,this.usuarioActual,this,FuncionTipo.BEFORE,controlTipo,eventoTipo,eventoSubTipo,sTipo,this.configuracionpunven,new Object(),generalEntityParameterGeneral,this.configuracionpunvenReturnGeneral);
				
				ArrayList<Classe> classes=new ArrayList<Classe>();
				
				for(String sClasse:arrClasses) {
					if(sClasse.equals("TODOS")) {
						conTodasRelaciones=true;
						break;
					}
				}
				
				if(this.configuracionpunvenSessionBean.getConGuardarRelaciones()) {
					if(conTodasRelaciones) {
						classes=ConfiguracionPunVenConstantesFunciones.getClassesRelationshipsOfConfiguracionPunVen(new ArrayList<Classe>(),DeepLoadType.NONE);
					} else {
						classes=ConfiguracionPunVenConstantesFunciones.getClassesRelationshipsFromStringsOfConfiguracionPunVen(arrClasses,DeepLoadType.NONE);
					}
				}
	
				this.classesActual=new ArrayList<Classe>();
				this.classesActual.addAll(classes);
	
				this.recargarFormConfiguracionPunVen(sTipo,sDominio,eventoGlobalTipo,controlTipo,eventoTipo,eventoSubTipo,sTipoGeneral,classes,conIrServidorAplicacion,esControlTabla);
										
				ConfiguracionPunVenBeanSwingJInternalFrameAdditional.procesarEventosVista(this.parametroGeneralUsuario,this.moduloActual,this.opcionActual,this.usuarioActual,this,FuncionTipo.AFTER,controlTipo,eventoTipo,eventoSubTipo,sTipo,this.configuracionpunven,new Object(),generalEntityParameterGeneral,this.configuracionpunvenReturnGeneral);
			}
			
		} catch(Exception e) {
  			FuncionesSwing.manageException2(this, e,logger,ConfiguracionPunVenConstantesFunciones.CLASSNAME);
  		}
    }
	
	/*
	public void setVariablesRelacionesObjetoBeanActualToFormularioConfiguracionPunVen(ConfiguracionPunVenBean configuracionpunvenBean) throws Exception { 
		try {
			
			
		} catch(Exception e) {
			FuncionesSwing.manageException(this, e,logger,ConfiguracionPunVenConstantesFunciones.CLASSNAME);
		}
	}
	*/
	
	/*
	public void setVariablesRelacionesObjetoReturnGeneralToBeanConfiguracionPunVen(ArrayList<Classe> classes,ConfiguracionPunVenReturnGeneral configuracionpunvenReturnGeneral,ConfiguracionPunVenBean configuracionpunvenBean,Boolean conDefault) throws Exception {
		
	}
	*/
	
	public void setVariablesFormularioRelacionesToObjetoActualConfiguracionPunVen(ConfiguracionPunVen configuracionpunven,ArrayList<Classe> classes) throws Exception {
		
	}
	
	public Boolean permiteManejarEventosControl() {
		Boolean permite=true;				
		
		if(this.estaModoNuevo || this.estaModoSeleccionar || this.estaModoEliminarGuardarCambios) {
			permite=false;
			
		} 
		
		//NO DEBE MEZCLARSE CONCEPTOS
		/*	
		if(!paraTabla && !this.permiteMantenimiento(this.configuracionpunven)) {
			System.out.println("ERROR:EL OBJETO ACTUAL NO PUEDE SER FILA TOTALES");
				
			//JOptionPane.showMessageDialog(this,"EL OBJETO ACTUAL NO PUEDE SER FILA TOTALES","EVENTO",JOptionPane.ERROR_MESSAGE);			
		}
		*/
		
		return permite;
	}
	
	public void inicializarFormDetalle() throws Exception {
		
		this.jInternalFrameDetalleFormConfiguracionPunVen = new ConfiguracionPunVenDetalleFormJInternalFrame(jDesktopPane,this.configuracionpunvenSessionBean.getConGuardarRelaciones(),this.configuracionpunvenSessionBean.getEsGuardarRelacionado(),this.cargarRelaciones,usuarioActual,resumenUsuarioActual,moduloActual,opcionActual,parametroGeneralSg,parametroGeneralUsuario,paginaTipo);
		
		this.jDesktopPane.add(this.jInternalFrameDetalleFormConfiguracionPunVen);
		this.jInternalFrameDetalleFormConfiguracionPunVen.setVisible(false);
		this.jInternalFrameDetalleFormConfiguracionPunVen.setSelected(false);						
		
		this.jInternalFrameDetalleFormConfiguracionPunVen.setJInternalFrameParent(this);
		
		this.jInternalFrameDetalleFormConfiguracionPunVen.configuracionpunvenLogic=this.configuracionpunvenLogic;
		
		this.cargarCombosFrameForeignKeyConfiguracionPunVen("Formulario");
		
		this.inicializarActualizarBindingBotonesPermisosManualFormDetalleConfiguracionPunVen();
		this.inicializarActualizarBindingtiposArchivosReportesAccionesManualFormDetalleConfiguracionPunVen();
		
		this.initActionsFormDetalle();		
		
		this.initActionsCombosTodosForeignKeyConfiguracionPunVen("Formulario");
		
		//TALVEZ conSetVariablesGlobales COMO if() 
		this.setVariablesGlobalesCombosForeignKeyConfiguracionPunVen();
		
		this.cargarMenuRelaciones();
		
	}
	
	public void initActionsFormDetalle() {	
		
		this.jInternalFrameDetalleFormConfiguracionPunVen.addInternalFrameListener(new InternalFrameInternalFrameAdapter(this,"jButtonCancelarConfiguracionPunVen"));
		
		this.jInternalFrameDetalleFormConfiguracionPunVen.jButtonModificarConfiguracionPunVen.addActionListener(new ButtonActionListener(this,"ModificarConfiguracionPunVen"));

		
		this.jInternalFrameDetalleFormConfiguracionPunVen.jButtonModificarToolBarConfiguracionPunVen.addActionListener(new ButtonActionListener(this,"ModificarToolBarConfiguracionPunVen"));
					
		this.jInternalFrameDetalleFormConfiguracionPunVen.jMenuItemModificarConfiguracionPunVen.addActionListener(new ButtonActionListener(this,"MenuItemModificarConfiguracionPunVen"));		
		
		
		
		this.jInternalFrameDetalleFormConfiguracionPunVen.jButtonActualizarConfiguracionPunVen.addActionListener (new ButtonActionListener(this,"ActualizarConfiguracionPunVen"));
		
		
		this.jInternalFrameDetalleFormConfiguracionPunVen.jButtonActualizarToolBarConfiguracionPunVen.addActionListener(new ButtonActionListener(this,"ActualizarToolBarConfiguracionPunVen"));
						
		this.jInternalFrameDetalleFormConfiguracionPunVen.jMenuItemActualizarConfiguracionPunVen.addActionListener (new ButtonActionListener(this,"MenuItemActualizarConfiguracionPunVen"));		
		
		
		
		this.jInternalFrameDetalleFormConfiguracionPunVen.jButtonEliminarConfiguracionPunVen.addActionListener (new ButtonActionListener(this,"EliminarConfiguracionPunVen"));
		
		
		this.jInternalFrameDetalleFormConfiguracionPunVen.jButtonEliminarToolBarConfiguracionPunVen.addActionListener (new ButtonActionListener(this,"EliminarToolBarConfiguracionPunVen"));
								
		this.jInternalFrameDetalleFormConfiguracionPunVen.jMenuItemEliminarConfiguracionPunVen.addActionListener (new ButtonActionListener(this,"MenuItemEliminarConfiguracionPunVen"));		
		
		
		
		this.jInternalFrameDetalleFormConfiguracionPunVen.jButtonCancelarConfiguracionPunVen.addActionListener (new ButtonActionListener(this,"CancelarConfiguracionPunVen"));
		
		
		this.jInternalFrameDetalleFormConfiguracionPunVen.jButtonCancelarToolBarConfiguracionPunVen.addActionListener (new ButtonActionListener(this,"CancelarToolBarConfiguracionPunVen"));
					
		this.jInternalFrameDetalleFormConfiguracionPunVen.jMenuItemCancelarConfiguracionPunVen.addActionListener (new ButtonActionListener(this,"MenuItemCancelarConfiguracionPunVen"));		
		
		
		
		
		
		this.jInternalFrameDetalleFormConfiguracionPunVen.jMenuItemDetalleCerrarConfiguracionPunVen.addActionListener (new ButtonActionListener(this,"MenuItemDetalleCerrarConfiguracionPunVen"));		
		
		
		
		this.jInternalFrameDetalleFormConfiguracionPunVen.jButtonGuardarCambiosToolBarConfiguracionPunVen.addActionListener (new ButtonActionListener(this,"GuardarCambiosToolBarConfiguracionPunVen"));
		
		
		
		this.jInternalFrameDetalleFormConfiguracionPunVen.jButtonGuardarCambiosToolBarConfiguracionPunVen.addActionListener (new ButtonActionListener(this,"GuardarCambiosToolBarConfiguracionPunVen"));
		
		
		
		this.jInternalFrameDetalleFormConfiguracionPunVen.jComboBoxTiposAccionesFormularioConfiguracionPunVen.addActionListener (new ButtonActionListener(this,"TiposAccionesFormularioConfiguracionPunVen"));
		
		
				
		
		//BUSQUEDA GENERAL
		this.jInternalFrameDetalleFormConfiguracionPunVen.jButtonidConfiguracionPunVenBusqueda.addActionListener(new ButtonActionListener(this,"idConfiguracionPunVenBusqueda"));
		//ACTUALIZAR FK
		this.jInternalFrameDetalleFormConfiguracionPunVen.jButtonid_empresaConfiguracionPunVenUpdate.addActionListener(new ButtonActionListener(this,"id_empresaConfiguracionPunVenUpdate"));
		//BUSQUEDA GENERAL
		this.jInternalFrameDetalleFormConfiguracionPunVen.jButtonid_empresaConfiguracionPunVenBusqueda.addActionListener(new ButtonActionListener(this,"id_empresaConfiguracionPunVenBusqueda"));
		//ACTUALIZAR FK
		this.jInternalFrameDetalleFormConfiguracionPunVen.jButtonid_sucursalConfiguracionPunVenUpdate.addActionListener(new ButtonActionListener(this,"id_sucursalConfiguracionPunVenUpdate"));
		//BUSQUEDA GENERAL
		this.jInternalFrameDetalleFormConfiguracionPunVen.jButtonid_sucursalConfiguracionPunVenBusqueda.addActionListener(new ButtonActionListener(this,"id_sucursalConfiguracionPunVenBusqueda"));
		//ACTUALIZAR FK
		this.jInternalFrameDetalleFormConfiguracionPunVen.jButtonid_bodegaConfiguracionPunVenUpdate.addActionListener(new ButtonActionListener(this,"id_bodegaConfiguracionPunVenUpdate"));
		//BUSQUEDA GENERAL
		this.jInternalFrameDetalleFormConfiguracionPunVen.jButtonid_bodegaConfiguracionPunVenBusqueda.addActionListener(new ButtonActionListener(this,"id_bodegaConfiguracionPunVenBusqueda"));
		//ACTUALIZAR FK
		this.jInternalFrameDetalleFormConfiguracionPunVen.jButtonid_cuenta_contable_efectivoConfiguracionPunVenUpdate.addActionListener(new ButtonActionListener(this,"id_cuenta_contable_efectivoConfiguracionPunVenUpdate"));
		//BUSQUEDA GENERAL
		this.jInternalFrameDetalleFormConfiguracionPunVen.jButtonid_cuenta_contable_efectivoConfiguracionPunVenBusqueda.addActionListener(new ButtonActionListener(this,"id_cuenta_contable_efectivoConfiguracionPunVenBusqueda"));
		//ACTUALIZAR FK
		this.jInternalFrameDetalleFormConfiguracionPunVen.jButtonid_cuenta_contable_iceConfiguracionPunVenUpdate.addActionListener(new ButtonActionListener(this,"id_cuenta_contable_iceConfiguracionPunVenUpdate"));
		//BUSQUEDA GENERAL
		this.jInternalFrameDetalleFormConfiguracionPunVen.jButtonid_cuenta_contable_iceConfiguracionPunVenBusqueda.addActionListener(new ButtonActionListener(this,"id_cuenta_contable_iceConfiguracionPunVenBusqueda"));
		//ACTUALIZAR FK
		this.jInternalFrameDetalleFormConfiguracionPunVen.jButtonid_cuenta_contable_otrosConfiguracionPunVenUpdate.addActionListener(new ButtonActionListener(this,"id_cuenta_contable_otrosConfiguracionPunVenUpdate"));
		//BUSQUEDA GENERAL
		this.jInternalFrameDetalleFormConfiguracionPunVen.jButtonid_cuenta_contable_otrosConfiguracionPunVenBusqueda.addActionListener(new ButtonActionListener(this,"id_cuenta_contable_otrosConfiguracionPunVenBusqueda"));
		//jButtonid_cliente_consumidor_finalConfiguracionPunVen.addActionListener (
		//	new java.awt.event.ActionListener() {
		//		public void actionPerformed(java.awt.event.ActionEvent evt) {
		//			jButtonid_cliente_consumidor_finalConfiguracionPunVenActionPerformed(evt);
		//		}
		//	}
		//);

		//BUSQUEDA CAMPO
		this.jInternalFrameDetalleFormConfiguracionPunVen.jButtonid_cliente_consumidor_finalConfiguracionPunVen.addActionListener(new ButtonActionListener(this,"id_cliente_consumidor_finalConfiguracionPunVen"));
		//ACTUALIZAR FK
		this.jInternalFrameDetalleFormConfiguracionPunVen.jButtonid_cliente_consumidor_finalConfiguracionPunVenUpdate.addActionListener(new ButtonActionListener(this,"id_cliente_consumidor_finalConfiguracionPunVenUpdate"));
		//BUSQUEDA GENERAL
		this.jInternalFrameDetalleFormConfiguracionPunVen.jButtonid_cliente_consumidor_finalConfiguracionPunVenBusqueda.addActionListener(new ButtonActionListener(this,"id_cliente_consumidor_finalConfiguracionPunVenBusqueda"));
		//ACTUALIZAR FK
		this.jInternalFrameDetalleFormConfiguracionPunVen.jButtonid_tipo_documento_facturaConfiguracionPunVenUpdate.addActionListener(new ButtonActionListener(this,"id_tipo_documento_facturaConfiguracionPunVenUpdate"));
		//BUSQUEDA GENERAL
		this.jInternalFrameDetalleFormConfiguracionPunVen.jButtonid_tipo_documento_facturaConfiguracionPunVenBusqueda.addActionListener(new ButtonActionListener(this,"id_tipo_documento_facturaConfiguracionPunVenBusqueda"));
		//ACTUALIZAR FK
		this.jInternalFrameDetalleFormConfiguracionPunVen.jButtonid_tipo_documento_nota_ventaConfiguracionPunVenUpdate.addActionListener(new ButtonActionListener(this,"id_tipo_documento_nota_ventaConfiguracionPunVenUpdate"));
		//BUSQUEDA GENERAL
		this.jInternalFrameDetalleFormConfiguracionPunVen.jButtonid_tipo_documento_nota_ventaConfiguracionPunVenBusqueda.addActionListener(new ButtonActionListener(this,"id_tipo_documento_nota_ventaConfiguracionPunVenBusqueda"));
		//ACTUALIZAR FK
		this.jInternalFrameDetalleFormConfiguracionPunVen.jButtonid_tipo_documento_nota_creditoConfiguracionPunVenUpdate.addActionListener(new ButtonActionListener(this,"id_tipo_documento_nota_creditoConfiguracionPunVenUpdate"));
		//BUSQUEDA GENERAL
		this.jInternalFrameDetalleFormConfiguracionPunVen.jButtonid_tipo_documento_nota_creditoConfiguracionPunVenBusqueda.addActionListener(new ButtonActionListener(this,"id_tipo_documento_nota_creditoConfiguracionPunVenBusqueda"));
		//ACTUALIZAR FK
		this.jInternalFrameDetalleFormConfiguracionPunVen.jButtonid_tipo_documento_tarjeta_creditoConfiguracionPunVenUpdate.addActionListener(new ButtonActionListener(this,"id_tipo_documento_tarjeta_creditoConfiguracionPunVenUpdate"));
		//BUSQUEDA GENERAL
		this.jInternalFrameDetalleFormConfiguracionPunVen.jButtonid_tipo_documento_tarjeta_creditoConfiguracionPunVenBusqueda.addActionListener(new ButtonActionListener(this,"id_tipo_documento_tarjeta_creditoConfiguracionPunVenBusqueda"));
		//ACTUALIZAR FK
		this.jInternalFrameDetalleFormConfiguracionPunVen.jButtonid_formato_facturaConfiguracionPunVenUpdate.addActionListener(new ButtonActionListener(this,"id_formato_facturaConfiguracionPunVenUpdate"));
		//BUSQUEDA GENERAL
		this.jInternalFrameDetalleFormConfiguracionPunVen.jButtonid_formato_facturaConfiguracionPunVenBusqueda.addActionListener(new ButtonActionListener(this,"id_formato_facturaConfiguracionPunVenBusqueda"));
		//ACTUALIZAR FK
		this.jInternalFrameDetalleFormConfiguracionPunVen.jButtonid_formato_nota_ventaConfiguracionPunVenUpdate.addActionListener(new ButtonActionListener(this,"id_formato_nota_ventaConfiguracionPunVenUpdate"));
		//BUSQUEDA GENERAL
		this.jInternalFrameDetalleFormConfiguracionPunVen.jButtonid_formato_nota_ventaConfiguracionPunVenBusqueda.addActionListener(new ButtonActionListener(this,"id_formato_nota_ventaConfiguracionPunVenBusqueda"));
		//ACTUALIZAR FK
		this.jInternalFrameDetalleFormConfiguracionPunVen.jButtonid_formato_nota_creditoConfiguracionPunVenUpdate.addActionListener(new ButtonActionListener(this,"id_formato_nota_creditoConfiguracionPunVenUpdate"));
		//BUSQUEDA GENERAL
		this.jInternalFrameDetalleFormConfiguracionPunVen.jButtonid_formato_nota_creditoConfiguracionPunVenBusqueda.addActionListener(new ButtonActionListener(this,"id_formato_nota_creditoConfiguracionPunVenBusqueda"));
		//ACTUALIZAR FK
		this.jInternalFrameDetalleFormConfiguracionPunVen.jButtonid_transaccion_facturaConfiguracionPunVenUpdate.addActionListener(new ButtonActionListener(this,"id_transaccion_facturaConfiguracionPunVenUpdate"));
		//BUSQUEDA GENERAL
		this.jInternalFrameDetalleFormConfiguracionPunVen.jButtonid_transaccion_facturaConfiguracionPunVenBusqueda.addActionListener(new ButtonActionListener(this,"id_transaccion_facturaConfiguracionPunVenBusqueda"));
		//ACTUALIZAR FK
		this.jInternalFrameDetalleFormConfiguracionPunVen.jButtonid_transaccion_nota_ventaConfiguracionPunVenUpdate.addActionListener(new ButtonActionListener(this,"id_transaccion_nota_ventaConfiguracionPunVenUpdate"));
		//BUSQUEDA GENERAL
		this.jInternalFrameDetalleFormConfiguracionPunVen.jButtonid_transaccion_nota_ventaConfiguracionPunVenBusqueda.addActionListener(new ButtonActionListener(this,"id_transaccion_nota_ventaConfiguracionPunVenBusqueda"));
		//ACTUALIZAR FK
		this.jInternalFrameDetalleFormConfiguracionPunVen.jButtonid_transaccion_nota_creditoConfiguracionPunVenUpdate.addActionListener(new ButtonActionListener(this,"id_transaccion_nota_creditoConfiguracionPunVenUpdate"));
		//BUSQUEDA GENERAL
		this.jInternalFrameDetalleFormConfiguracionPunVen.jButtonid_transaccion_nota_creditoConfiguracionPunVenBusqueda.addActionListener(new ButtonActionListener(this,"id_transaccion_nota_creditoConfiguracionPunVenBusqueda"));
		//ACTUALIZAR FK
		this.jInternalFrameDetalleFormConfiguracionPunVen.jButtonid_transaccion_cuenta_facturaConfiguracionPunVenUpdate.addActionListener(new ButtonActionListener(this,"id_transaccion_cuenta_facturaConfiguracionPunVenUpdate"));
		//BUSQUEDA GENERAL
		this.jInternalFrameDetalleFormConfiguracionPunVen.jButtonid_transaccion_cuenta_facturaConfiguracionPunVenBusqueda.addActionListener(new ButtonActionListener(this,"id_transaccion_cuenta_facturaConfiguracionPunVenBusqueda"));
		//ACTUALIZAR FK
		this.jInternalFrameDetalleFormConfiguracionPunVen.jButtonid_transaccion_cuenta_nota_ventaConfiguracionPunVenUpdate.addActionListener(new ButtonActionListener(this,"id_transaccion_cuenta_nota_ventaConfiguracionPunVenUpdate"));
		//BUSQUEDA GENERAL
		this.jInternalFrameDetalleFormConfiguracionPunVen.jButtonid_transaccion_cuenta_nota_ventaConfiguracionPunVenBusqueda.addActionListener(new ButtonActionListener(this,"id_transaccion_cuenta_nota_ventaConfiguracionPunVenBusqueda"));
		//ACTUALIZAR FK
		this.jInternalFrameDetalleFormConfiguracionPunVen.jButtonid_transaccion_cuenta_nota_creditoConfiguracionPunVenUpdate.addActionListener(new ButtonActionListener(this,"id_transaccion_cuenta_nota_creditoConfiguracionPunVenUpdate"));
		//BUSQUEDA GENERAL
		this.jInternalFrameDetalleFormConfiguracionPunVen.jButtonid_transaccion_cuenta_nota_creditoConfiguracionPunVenBusqueda.addActionListener(new ButtonActionListener(this,"id_transaccion_cuenta_nota_creditoConfiguracionPunVenBusqueda"));
		
		
		;

		//TABBED PANE RELACIONES
		this.jInternalFrameDetalleFormConfiguracionPunVen.jTabbedPaneRelacionesConfiguracionPunVen.addChangeListener(new TabbedPaneChangeListener(this,"RelacionesConfiguracionPunVen"));
		
		;		
		//TABBED PANE RELACIONES FIN(EXTRA TAB)	
	}
	
	public void initActions() {				
		this.addInternalFrameListener(new InternalFrameInternalFrameAdapter(this,"CloseInternalFrameConfiguracionPunVen"));
		
		if(this.jInternalFrameDetalleFormConfiguracionPunVen!=null) { //if(this.conCargarFormDetalle) {
			this.jInternalFrameDetalleFormConfiguracionPunVen.addInternalFrameListener(new InternalFrameInternalFrameAdapter(this,"jButtonCancelarConfiguracionPunVen"));
		}
		
		this.jTableDatosConfiguracionPunVen.getSelectionModel().addListSelectionListener(new TableListSelectionListener(this,"TableDatosSeleccionarConfiguracionPunVen"));
		
		this.jTableDatosConfiguracionPunVen.addMouseListener(new TableMouseAdapter(this,"DatosSeleccionarConfiguracionPunVen"));
		
		this.jButtonNuevoConfiguracionPunVen.addActionListener(new ButtonActionListener(this,"NuevoConfiguracionPunVen"));
		
		this.jButtonDuplicarConfiguracionPunVen.addActionListener(new ButtonActionListener(this,"DuplicarConfiguracionPunVen"));
		
		this.jButtonCopiarConfiguracionPunVen.addActionListener(new ButtonActionListener(this,"CopiarConfiguracionPunVen"));
		
		this.jButtonVerFormConfiguracionPunVen.addActionListener(new ButtonActionListener(this,"VerFormConfiguracionPunVen"));
		
		
		this.jButtonNuevoToolBarConfiguracionPunVen.addActionListener(new ButtonActionListener(this,"NuevoToolBarConfiguracionPunVen"));
			
		this.jButtonDuplicarToolBarConfiguracionPunVen.addActionListener(new ButtonActionListener(this,"DuplicarToolBarConfiguracionPunVen"));
			
		this.jMenuItemNuevoConfiguracionPunVen.addActionListener (new ButtonActionListener(this,"MenuItemNuevoConfiguracionPunVen"));
			
		this.jMenuItemDuplicarConfiguracionPunVen.addActionListener (new ButtonActionListener(this,"MenuItemDuplicarConfiguracionPunVen"));		
		
		
		this.jButtonNuevoRelacionesConfiguracionPunVen.addActionListener (new ButtonActionListener(this,"NuevoRelacionesConfiguracionPunVen"));
		
		
		this.jButtonNuevoRelacionesToolBarConfiguracionPunVen.addActionListener(new ButtonActionListener(this,"NuevoRelacionesToolBarConfiguracionPunVen"));
			
		this.jMenuItemNuevoRelacionesConfiguracionPunVen.addActionListener(new ButtonActionListener(this,"MenuItemNuevoRelacionesConfiguracionPunVen"));		
		
		
		if(this.jInternalFrameDetalleFormConfiguracionPunVen!=null) { //if(this.conCargarFormDetalle) {
			this.jInternalFrameDetalleFormConfiguracionPunVen.jButtonModificarConfiguracionPunVen.addActionListener(new ButtonActionListener(this,"ModificarConfiguracionPunVen"));
		}
		
		
		if(this.jInternalFrameDetalleFormConfiguracionPunVen!=null) { //if(this.conCargarFormDetalle) {
			this.jInternalFrameDetalleFormConfiguracionPunVen.jButtonModificarToolBarConfiguracionPunVen.addActionListener(new ButtonActionListener(this,"ModificarToolBarConfiguracionPunVen"));
			
			this.jInternalFrameDetalleFormConfiguracionPunVen.jMenuItemModificarConfiguracionPunVen.addActionListener(new ButtonActionListener(this,"MenuItemModificarConfiguracionPunVen"));		
		}
		
		
		if(this.jInternalFrameDetalleFormConfiguracionPunVen!=null) { //if(this.conCargarFormDetalle) {			
			this.jInternalFrameDetalleFormConfiguracionPunVen.jButtonActualizarConfiguracionPunVen.addActionListener (new ButtonActionListener(this,"ActualizarConfiguracionPunVen"));
		}
		
		
		if(this.jInternalFrameDetalleFormConfiguracionPunVen!=null) { //if(this.conCargarFormDetalle) {
			this.jInternalFrameDetalleFormConfiguracionPunVen.jButtonActualizarToolBarConfiguracionPunVen.addActionListener(new ButtonActionListener(this,"ActualizarToolBarConfiguracionPunVen"));
				
			this.jInternalFrameDetalleFormConfiguracionPunVen.jMenuItemActualizarConfiguracionPunVen.addActionListener (new ButtonActionListener(this,"MenuItemActualizarConfiguracionPunVen"));		
		}
		
		
		if(this.jInternalFrameDetalleFormConfiguracionPunVen!=null) { //if(this.conCargarFormDetalle) {
			this.jInternalFrameDetalleFormConfiguracionPunVen.jButtonEliminarConfiguracionPunVen.addActionListener (new ButtonActionListener(this,"EliminarConfiguracionPunVen"));
		}
		
		
		if(this.jInternalFrameDetalleFormConfiguracionPunVen!=null) { //if(this.conCargarFormDetalle) {
			this.jInternalFrameDetalleFormConfiguracionPunVen.jButtonEliminarToolBarConfiguracionPunVen.addActionListener (new ButtonActionListener(this,"EliminarToolBarConfiguracionPunVen"));
						
			this.jInternalFrameDetalleFormConfiguracionPunVen.jMenuItemEliminarConfiguracionPunVen.addActionListener (new ButtonActionListener(this,"MenuItemEliminarConfiguracionPunVen"));		
		}
		
		
		if(this.jInternalFrameDetalleFormConfiguracionPunVen!=null) { //if(this.conCargarFormDetalle) {
			this.jInternalFrameDetalleFormConfiguracionPunVen.jButtonCancelarConfiguracionPunVen.addActionListener (new ButtonActionListener(this,"CancelarConfiguracionPunVen"));
		}
		
		
		if(this.jInternalFrameDetalleFormConfiguracionPunVen!=null) { //if(this.conCargarFormDetalle) {
			this.jInternalFrameDetalleFormConfiguracionPunVen.jButtonCancelarToolBarConfiguracionPunVen.addActionListener (new ButtonActionListener(this,"CancelarToolBarConfiguracionPunVen"));
			
			this.jInternalFrameDetalleFormConfiguracionPunVen.jMenuItemCancelarConfiguracionPunVen.addActionListener (new ButtonActionListener(this,"MenuItemCancelarConfiguracionPunVen"));		
		}
		
		this.jButtonMostrarOcultarTablaToolBarConfiguracionPunVen.addActionListener (new ButtonActionListener(this,"MostrarOcultarToolBarConfiguracionPunVen"));		
		
		
		this.jButtonCerrarConfiguracionPunVen.addActionListener (new ButtonActionListener(this,"CerrarConfiguracionPunVen"));
		
		
		this.jButtonCerrarToolBarConfiguracionPunVen.addActionListener (new ButtonActionListener(this,"CerrarToolBarConfiguracionPunVen"));
			
		this.jMenuItemCerrarConfiguracionPunVen.addActionListener (new ButtonActionListener(this,"MenuItemCerrarConfiguracionPunVen"));
			
		if(this.jInternalFrameDetalleFormConfiguracionPunVen!=null) { //if(this.conCargarFormDetalle) {
			this.jInternalFrameDetalleFormConfiguracionPunVen.jMenuItemDetalleCerrarConfiguracionPunVen.addActionListener (new ButtonActionListener(this,"MenuItemDetalleCerrarConfiguracionPunVen"));		
		}
		
		
		if(this.jInternalFrameDetalleFormConfiguracionPunVen!=null) { //if(this.conCargarFormDetalle) {
			this.jInternalFrameDetalleFormConfiguracionPunVen.jButtonGuardarCambiosConfiguracionPunVen.addActionListener (new ButtonActionListener(this,"GuardarCambiosConfiguracionPunVen"));
		}
		
		
		if(this.jInternalFrameDetalleFormConfiguracionPunVen!=null) { //if(this.conCargarFormDetalle) {
			this.jInternalFrameDetalleFormConfiguracionPunVen.jButtonGuardarCambiosToolBarConfiguracionPunVen.addActionListener (new ButtonActionListener(this,"GuardarCambiosToolBarConfiguracionPunVen"));
		}
		
		this.jButtonCopiarToolBarConfiguracionPunVen.addActionListener (new ButtonActionListener(this,"CopiarToolBarConfiguracionPunVen"));
			
		this.jButtonVerFormToolBarConfiguracionPunVen.addActionListener (new ButtonActionListener(this,"VerFormToolBarConfiguracionPunVen"));
		
		this.jMenuItemGuardarCambiosConfiguracionPunVen.addActionListener (new ButtonActionListener(this,"MenuItemGuardarCambiosConfiguracionPunVen"));
			
		this.jMenuItemCopiarConfiguracionPunVen.addActionListener (new ButtonActionListener(this,"MenuItemCopiarConfiguracionPunVen"));		
		
		this.jMenuItemVerFormConfiguracionPunVen.addActionListener (new ButtonActionListener(this,"MenuItemVerFormConfiguracionPunVen"));		
		
		
		this.jButtonGuardarCambiosTablaConfiguracionPunVen.addActionListener (new ButtonActionListener(this,"GuardarCambiosTablaConfiguracionPunVen"));
		
		
		this.jButtonGuardarCambiosTablaToolBarConfiguracionPunVen.addActionListener (new ButtonActionListener(this,"GuardarCambiosTablaToolBarConfiguracionPunVen"));
			
		this.jMenuItemGuardarCambiosTablaConfiguracionPunVen.addActionListener (new ButtonActionListener(this,"GuardarCambiosTablaConfiguracionPunVen"));		
		
		
		
		this.jButtonRecargarInformacionConfiguracionPunVen.addActionListener (new ButtonActionListener(this,"RecargarInformacionConfiguracionPunVen"));
					
		this.jButtonRecargarInformacionToolBarConfiguracionPunVen.addActionListener (new ButtonActionListener(this,"RecargarInformacionToolBarConfiguracionPunVen"));
		
		this.jMenuItemRecargarInformacionConfiguracionPunVen.addActionListener (new ButtonActionListener(this,"MenuItemRecargarInformacionConfiguracionPunVen"));		
		
		
		
		this.jButtonAnterioresConfiguracionPunVen.addActionListener (new ButtonActionListener(this,"AnterioresConfiguracionPunVen"));
		
		
		this.jButtonAnterioresToolBarConfiguracionPunVen.addActionListener (new ButtonActionListener(this,"AnterioresToolBarConfiguracionPunVen"));
		
		this.jMenuItemAnterioresConfiguracionPunVen.addActionListener (new ButtonActionListener(this,"MenuItemAnterioresConfiguracionPunVen"));		
		
		
		this.jButtonSiguientesConfiguracionPunVen.addActionListener (new ButtonActionListener(this,"SiguientesConfiguracionPunVen"));
		
		
		this.jButtonSiguientesToolBarConfiguracionPunVen.addActionListener (new ButtonActionListener(this,"SiguientesToolBarConfiguracionPunVen"));
			
		this.jMenuItemSiguientesConfiguracionPunVen.addActionListener (new ButtonActionListener(this,"MenuItemSiguientesConfiguracionPunVen"));
			
		this.jMenuItemAbrirOrderByConfiguracionPunVen.addActionListener (new ButtonActionListener(this,"MenuItemAbrirOrderByConfiguracionPunVen"));
			
		this.jMenuItemMostrarOcultarConfiguracionPunVen.addActionListener (new ButtonActionListener(this,"MenuItemMostrarOcultarConfiguracionPunVen"));
			
		this.jMenuItemDetalleAbrirOrderByConfiguracionPunVen.addActionListener (new ButtonActionListener(this,"MenuItemDetalleAbrirOrderByConfiguracionPunVen"));
			
		this.jMenuItemDetalleMostarOcultarConfiguracionPunVen.addActionListener (new ButtonActionListener(this,"MenuItemDetalleMostrarOcultarConfiguracionPunVen"));		
		
		
		this.jButtonNuevoGuardarCambiosConfiguracionPunVen.addActionListener (new ButtonActionListener(this,"NuevoGuardarCambiosConfiguracionPunVen"));
		
		
		this.jButtonNuevoGuardarCambiosToolBarConfiguracionPunVen.addActionListener (new ButtonActionListener(this,"NuevoGuardarCambiosToolBarConfiguracionPunVen"));
			
		this.jMenuItemNuevoGuardarCambiosConfiguracionPunVen.addActionListener (new ButtonActionListener(this,"MenuItemNuevoGuardarCambiosConfiguracionPunVen"));		
		
		
		
		//SELECCIONAR TODOS
		
		this.jCheckBoxSeleccionarTodosConfiguracionPunVen.addItemListener(new CheckBoxItemListener(this,"SeleccionarTodosConfiguracionPunVen"));

		this.jCheckBoxSeleccionadosConfiguracionPunVen.addItemListener(new CheckBoxItemListener(this,"SeleccionadosConfiguracionPunVen"));
		
		if(this.jInternalFrameDetalleFormConfiguracionPunVen!=null) { //if(this.conCargarFormDetalle) {
			this.jInternalFrameDetalleFormConfiguracionPunVen.jComboBoxTiposAccionesFormularioConfiguracionPunVen.addActionListener (new ButtonActionListener(this,"TiposAccionesFormularioConfiguracionPunVen"));
		}
		
		
		this.jComboBoxTiposRelacionesConfiguracionPunVen.addActionListener (new ButtonActionListener(this,"TiposRelacionesConfiguracionPunVen"));
			
		this.jComboBoxTiposAccionesConfiguracionPunVen.addActionListener (new ButtonActionListener(this,"TiposAccionesConfiguracionPunVen"));
					
		this.jComboBoxTiposSeleccionarConfiguracionPunVen.addActionListener (new ButtonActionListener(this,"TiposSeleccionarConfiguracionPunVen"));
			
		this.jTextFieldValorCampoGeneralConfiguracionPunVen.addActionListener (new ButtonActionListener(this,"ValorCampoGeneralConfiguracionPunVen"));		
		
		
		if(this.jInternalFrameDetalleFormConfiguracionPunVen!=null) { //if(this.conCargarFormDetalle) {
		
		
		
		//BUSQUEDA GENERAL
		this.jInternalFrameDetalleFormConfiguracionPunVen.jButtonidConfiguracionPunVenBusqueda.addActionListener(new ButtonActionListener(this,"idConfiguracionPunVenBusqueda"));
		//ACTUALIZAR FK
		this.jInternalFrameDetalleFormConfiguracionPunVen.jButtonid_empresaConfiguracionPunVenUpdate.addActionListener(new ButtonActionListener(this,"id_empresaConfiguracionPunVenUpdate"));
		//BUSQUEDA GENERAL
		this.jInternalFrameDetalleFormConfiguracionPunVen.jButtonid_empresaConfiguracionPunVenBusqueda.addActionListener(new ButtonActionListener(this,"id_empresaConfiguracionPunVenBusqueda"));
		//ACTUALIZAR FK
		this.jInternalFrameDetalleFormConfiguracionPunVen.jButtonid_sucursalConfiguracionPunVenUpdate.addActionListener(new ButtonActionListener(this,"id_sucursalConfiguracionPunVenUpdate"));
		//BUSQUEDA GENERAL
		this.jInternalFrameDetalleFormConfiguracionPunVen.jButtonid_sucursalConfiguracionPunVenBusqueda.addActionListener(new ButtonActionListener(this,"id_sucursalConfiguracionPunVenBusqueda"));
		//ACTUALIZAR FK
		this.jInternalFrameDetalleFormConfiguracionPunVen.jButtonid_bodegaConfiguracionPunVenUpdate.addActionListener(new ButtonActionListener(this,"id_bodegaConfiguracionPunVenUpdate"));
		//BUSQUEDA GENERAL
		this.jInternalFrameDetalleFormConfiguracionPunVen.jButtonid_bodegaConfiguracionPunVenBusqueda.addActionListener(new ButtonActionListener(this,"id_bodegaConfiguracionPunVenBusqueda"));
		//ACTUALIZAR FK
		this.jInternalFrameDetalleFormConfiguracionPunVen.jButtonid_cuenta_contable_efectivoConfiguracionPunVenUpdate.addActionListener(new ButtonActionListener(this,"id_cuenta_contable_efectivoConfiguracionPunVenUpdate"));
		//BUSQUEDA GENERAL
		this.jInternalFrameDetalleFormConfiguracionPunVen.jButtonid_cuenta_contable_efectivoConfiguracionPunVenBusqueda.addActionListener(new ButtonActionListener(this,"id_cuenta_contable_efectivoConfiguracionPunVenBusqueda"));
		//ACTUALIZAR FK
		this.jInternalFrameDetalleFormConfiguracionPunVen.jButtonid_cuenta_contable_iceConfiguracionPunVenUpdate.addActionListener(new ButtonActionListener(this,"id_cuenta_contable_iceConfiguracionPunVenUpdate"));
		//BUSQUEDA GENERAL
		this.jInternalFrameDetalleFormConfiguracionPunVen.jButtonid_cuenta_contable_iceConfiguracionPunVenBusqueda.addActionListener(new ButtonActionListener(this,"id_cuenta_contable_iceConfiguracionPunVenBusqueda"));
		//ACTUALIZAR FK
		this.jInternalFrameDetalleFormConfiguracionPunVen.jButtonid_cuenta_contable_otrosConfiguracionPunVenUpdate.addActionListener(new ButtonActionListener(this,"id_cuenta_contable_otrosConfiguracionPunVenUpdate"));
		//BUSQUEDA GENERAL
		this.jInternalFrameDetalleFormConfiguracionPunVen.jButtonid_cuenta_contable_otrosConfiguracionPunVenBusqueda.addActionListener(new ButtonActionListener(this,"id_cuenta_contable_otrosConfiguracionPunVenBusqueda"));
		//jButtonid_cliente_consumidor_finalConfiguracionPunVen.addActionListener (
		//	new java.awt.event.ActionListener() {
		//		public void actionPerformed(java.awt.event.ActionEvent evt) {
		//			jButtonid_cliente_consumidor_finalConfiguracionPunVenActionPerformed(evt);
		//		}
		//	}
		//);

		//BUSQUEDA CAMPO
		this.jInternalFrameDetalleFormConfiguracionPunVen.jButtonid_cliente_consumidor_finalConfiguracionPunVen.addActionListener(new ButtonActionListener(this,"id_cliente_consumidor_finalConfiguracionPunVen"));
		//ACTUALIZAR FK
		this.jInternalFrameDetalleFormConfiguracionPunVen.jButtonid_cliente_consumidor_finalConfiguracionPunVenUpdate.addActionListener(new ButtonActionListener(this,"id_cliente_consumidor_finalConfiguracionPunVenUpdate"));
		//BUSQUEDA GENERAL
		this.jInternalFrameDetalleFormConfiguracionPunVen.jButtonid_cliente_consumidor_finalConfiguracionPunVenBusqueda.addActionListener(new ButtonActionListener(this,"id_cliente_consumidor_finalConfiguracionPunVenBusqueda"));
		//ACTUALIZAR FK
		this.jInternalFrameDetalleFormConfiguracionPunVen.jButtonid_tipo_documento_facturaConfiguracionPunVenUpdate.addActionListener(new ButtonActionListener(this,"id_tipo_documento_facturaConfiguracionPunVenUpdate"));
		//BUSQUEDA GENERAL
		this.jInternalFrameDetalleFormConfiguracionPunVen.jButtonid_tipo_documento_facturaConfiguracionPunVenBusqueda.addActionListener(new ButtonActionListener(this,"id_tipo_documento_facturaConfiguracionPunVenBusqueda"));
		//ACTUALIZAR FK
		this.jInternalFrameDetalleFormConfiguracionPunVen.jButtonid_tipo_documento_nota_ventaConfiguracionPunVenUpdate.addActionListener(new ButtonActionListener(this,"id_tipo_documento_nota_ventaConfiguracionPunVenUpdate"));
		//BUSQUEDA GENERAL
		this.jInternalFrameDetalleFormConfiguracionPunVen.jButtonid_tipo_documento_nota_ventaConfiguracionPunVenBusqueda.addActionListener(new ButtonActionListener(this,"id_tipo_documento_nota_ventaConfiguracionPunVenBusqueda"));
		//ACTUALIZAR FK
		this.jInternalFrameDetalleFormConfiguracionPunVen.jButtonid_tipo_documento_nota_creditoConfiguracionPunVenUpdate.addActionListener(new ButtonActionListener(this,"id_tipo_documento_nota_creditoConfiguracionPunVenUpdate"));
		//BUSQUEDA GENERAL
		this.jInternalFrameDetalleFormConfiguracionPunVen.jButtonid_tipo_documento_nota_creditoConfiguracionPunVenBusqueda.addActionListener(new ButtonActionListener(this,"id_tipo_documento_nota_creditoConfiguracionPunVenBusqueda"));
		//ACTUALIZAR FK
		this.jInternalFrameDetalleFormConfiguracionPunVen.jButtonid_tipo_documento_tarjeta_creditoConfiguracionPunVenUpdate.addActionListener(new ButtonActionListener(this,"id_tipo_documento_tarjeta_creditoConfiguracionPunVenUpdate"));
		//BUSQUEDA GENERAL
		this.jInternalFrameDetalleFormConfiguracionPunVen.jButtonid_tipo_documento_tarjeta_creditoConfiguracionPunVenBusqueda.addActionListener(new ButtonActionListener(this,"id_tipo_documento_tarjeta_creditoConfiguracionPunVenBusqueda"));
		//ACTUALIZAR FK
		this.jInternalFrameDetalleFormConfiguracionPunVen.jButtonid_formato_facturaConfiguracionPunVenUpdate.addActionListener(new ButtonActionListener(this,"id_formato_facturaConfiguracionPunVenUpdate"));
		//BUSQUEDA GENERAL
		this.jInternalFrameDetalleFormConfiguracionPunVen.jButtonid_formato_facturaConfiguracionPunVenBusqueda.addActionListener(new ButtonActionListener(this,"id_formato_facturaConfiguracionPunVenBusqueda"));
		//ACTUALIZAR FK
		this.jInternalFrameDetalleFormConfiguracionPunVen.jButtonid_formato_nota_ventaConfiguracionPunVenUpdate.addActionListener(new ButtonActionListener(this,"id_formato_nota_ventaConfiguracionPunVenUpdate"));
		//BUSQUEDA GENERAL
		this.jInternalFrameDetalleFormConfiguracionPunVen.jButtonid_formato_nota_ventaConfiguracionPunVenBusqueda.addActionListener(new ButtonActionListener(this,"id_formato_nota_ventaConfiguracionPunVenBusqueda"));
		//ACTUALIZAR FK
		this.jInternalFrameDetalleFormConfiguracionPunVen.jButtonid_formato_nota_creditoConfiguracionPunVenUpdate.addActionListener(new ButtonActionListener(this,"id_formato_nota_creditoConfiguracionPunVenUpdate"));
		//BUSQUEDA GENERAL
		this.jInternalFrameDetalleFormConfiguracionPunVen.jButtonid_formato_nota_creditoConfiguracionPunVenBusqueda.addActionListener(new ButtonActionListener(this,"id_formato_nota_creditoConfiguracionPunVenBusqueda"));
		//ACTUALIZAR FK
		this.jInternalFrameDetalleFormConfiguracionPunVen.jButtonid_transaccion_facturaConfiguracionPunVenUpdate.addActionListener(new ButtonActionListener(this,"id_transaccion_facturaConfiguracionPunVenUpdate"));
		//BUSQUEDA GENERAL
		this.jInternalFrameDetalleFormConfiguracionPunVen.jButtonid_transaccion_facturaConfiguracionPunVenBusqueda.addActionListener(new ButtonActionListener(this,"id_transaccion_facturaConfiguracionPunVenBusqueda"));
		//ACTUALIZAR FK
		this.jInternalFrameDetalleFormConfiguracionPunVen.jButtonid_transaccion_nota_ventaConfiguracionPunVenUpdate.addActionListener(new ButtonActionListener(this,"id_transaccion_nota_ventaConfiguracionPunVenUpdate"));
		//BUSQUEDA GENERAL
		this.jInternalFrameDetalleFormConfiguracionPunVen.jButtonid_transaccion_nota_ventaConfiguracionPunVenBusqueda.addActionListener(new ButtonActionListener(this,"id_transaccion_nota_ventaConfiguracionPunVenBusqueda"));
		//ACTUALIZAR FK
		this.jInternalFrameDetalleFormConfiguracionPunVen.jButtonid_transaccion_nota_creditoConfiguracionPunVenUpdate.addActionListener(new ButtonActionListener(this,"id_transaccion_nota_creditoConfiguracionPunVenUpdate"));
		//BUSQUEDA GENERAL
		this.jInternalFrameDetalleFormConfiguracionPunVen.jButtonid_transaccion_nota_creditoConfiguracionPunVenBusqueda.addActionListener(new ButtonActionListener(this,"id_transaccion_nota_creditoConfiguracionPunVenBusqueda"));
		//ACTUALIZAR FK
		this.jInternalFrameDetalleFormConfiguracionPunVen.jButtonid_transaccion_cuenta_facturaConfiguracionPunVenUpdate.addActionListener(new ButtonActionListener(this,"id_transaccion_cuenta_facturaConfiguracionPunVenUpdate"));
		//BUSQUEDA GENERAL
		this.jInternalFrameDetalleFormConfiguracionPunVen.jButtonid_transaccion_cuenta_facturaConfiguracionPunVenBusqueda.addActionListener(new ButtonActionListener(this,"id_transaccion_cuenta_facturaConfiguracionPunVenBusqueda"));
		//ACTUALIZAR FK
		this.jInternalFrameDetalleFormConfiguracionPunVen.jButtonid_transaccion_cuenta_nota_ventaConfiguracionPunVenUpdate.addActionListener(new ButtonActionListener(this,"id_transaccion_cuenta_nota_ventaConfiguracionPunVenUpdate"));
		//BUSQUEDA GENERAL
		this.jInternalFrameDetalleFormConfiguracionPunVen.jButtonid_transaccion_cuenta_nota_ventaConfiguracionPunVenBusqueda.addActionListener(new ButtonActionListener(this,"id_transaccion_cuenta_nota_ventaConfiguracionPunVenBusqueda"));
		//ACTUALIZAR FK
		this.jInternalFrameDetalleFormConfiguracionPunVen.jButtonid_transaccion_cuenta_nota_creditoConfiguracionPunVenUpdate.addActionListener(new ButtonActionListener(this,"id_transaccion_cuenta_nota_creditoConfiguracionPunVenUpdate"));
		//BUSQUEDA GENERAL
		this.jInternalFrameDetalleFormConfiguracionPunVen.jButtonid_transaccion_cuenta_nota_creditoConfiguracionPunVenBusqueda.addActionListener(new ButtonActionListener(this,"id_transaccion_cuenta_nota_creditoConfiguracionPunVenBusqueda"));
		}
		
		if(!this.conCargarMinimo) {
		//BYDAN_BUSQUEDAS
		
		
			this.jButtonFK_IdBodegaConfiguracionPunVen.addActionListener(new ButtonActionListener(this,"FK_IdBodegaConfiguracionPunVen"));

			this.jButtonFK_IdClienteConsumidorFinalConfiguracionPunVen.addActionListener(new ButtonActionListener(this,"FK_IdClienteConsumidorFinalConfiguracionPunVen"));

			this.jButtonBuscarFK_IdClienteConsumidorFinalid_cliente_consumidor_finalConfiguracionPunVen.addActionListener(new ButtonActionListener(this,"id_cliente_consumidor_finalConfiguracionPunVen"));

			this.jButtonFK_IdCuentaContableEfectivoConfiguracionPunVen.addActionListener(new ButtonActionListener(this,"FK_IdCuentaContableEfectivoConfiguracionPunVen"));

			this.jButtonFK_IdCuentaContableIceConfiguracionPunVen.addActionListener(new ButtonActionListener(this,"FK_IdCuentaContableIceConfiguracionPunVen"));

			this.jButtonFK_IdCuentaContableOtrosConfiguracionPunVen.addActionListener(new ButtonActionListener(this,"FK_IdCuentaContableOtrosConfiguracionPunVen"));

			this.jButtonFK_IdFormatoFacturaConfiguracionPunVen.addActionListener(new ButtonActionListener(this,"FK_IdFormatoFacturaConfiguracionPunVen"));

			this.jButtonFK_IdFormatoNotaCreditoConfiguracionPunVen.addActionListener(new ButtonActionListener(this,"FK_IdFormatoNotaCreditoConfiguracionPunVen"));

			this.jButtonFK_IdFormatoNotaVentaConfiguracionPunVen.addActionListener(new ButtonActionListener(this,"FK_IdFormatoNotaVentaConfiguracionPunVen"));

			this.jButtonFK_IdTipoDocumentoFacturaConfiguracionPunVen.addActionListener(new ButtonActionListener(this,"FK_IdTipoDocumentoFacturaConfiguracionPunVen"));

			this.jButtonFK_IdTipoDocumentoNotaCreditoConfiguracionPunVen.addActionListener(new ButtonActionListener(this,"FK_IdTipoDocumentoNotaCreditoConfiguracionPunVen"));

			this.jButtonFK_IdTipoDocumentoNotaVentaConfiguracionPunVen.addActionListener(new ButtonActionListener(this,"FK_IdTipoDocumentoNotaVentaConfiguracionPunVen"));

			this.jButtonFK_IdTipoDocumentoTarjetaCreditoConfiguracionPunVen.addActionListener(new ButtonActionListener(this,"FK_IdTipoDocumentoTarjetaCreditoConfiguracionPunVen"));

			this.jButtonFK_IdTransaccionCuentaFacturaConfiguracionPunVen.addActionListener(new ButtonActionListener(this,"FK_IdTransaccionCuentaFacturaConfiguracionPunVen"));

			this.jButtonFK_IdTransaccionCuentaNotaCreditoConfiguracionPunVen.addActionListener(new ButtonActionListener(this,"FK_IdTransaccionCuentaNotaCreditoConfiguracionPunVen"));

			this.jButtonFK_IdTransaccionCuentaNotaVentaConfiguracionPunVen.addActionListener(new ButtonActionListener(this,"FK_IdTransaccionCuentaNotaVentaConfiguracionPunVen"));

			this.jButtonFK_IdTransaccionFacturaConfiguracionPunVen.addActionListener(new ButtonActionListener(this,"FK_IdTransaccionFacturaConfiguracionPunVen"));

			this.jButtonFK_IdTransaccionNotaCreditoConfiguracionPunVen.addActionListener(new ButtonActionListener(this,"FK_IdTransaccionNotaCreditoConfiguracionPunVen"));

			this.jButtonFK_IdTransaccionNotaVentaConfiguracionPunVen.addActionListener(new ButtonActionListener(this,"FK_IdTransaccionNotaVentaConfiguracionPunVen"));
		
		
		
			//REPORTE DINAMICO
			
			if(this.jInternalFrameReporteDinamicoConfiguracionPunVen!=null) {
				this.jInternalFrameReporteDinamicoConfiguracionPunVen.getjButtonCerrarReporteDinamico().addActionListener (new ButtonActionListener(this,"CerrarReporteDinamicoConfiguracionPunVen"));
				this.jInternalFrameReporteDinamicoConfiguracionPunVen.getjButtonGenerarReporteDinamico().addActionListener (new ButtonActionListener(this,"GenerarReporteDinamicoConfiguracionPunVen"));
				this.jInternalFrameReporteDinamicoConfiguracionPunVen.getjButtonGenerarExcelReporteDinamico().addActionListener (new ButtonActionListener(this,"GenerarExcelReporteDinamicoConfiguracionPunVen"));
			}
			
			//this.jButtonCerrarReporteDinamicoConfiguracionPunVen.addActionListener (new ButtonActionListener(this,"CerrarReporteDinamicoConfiguracionPunVen"));				
			//this.jButtonGenerarReporteDinamicoConfiguracionPunVen.addActionListener (new ButtonActionListener(this,"GenerarReporteDinamicoConfiguracionPunVen"));
			//this.jButtonGenerarExcelReporteDinamicoConfiguracionPunVen.addActionListener (new ButtonActionListener(this,"GenerarExcelReporteDinamicoConfiguracionPunVen"));
				
				
			//IMPORTACION			
			if(this.jInternalFrameImportacionConfiguracionPunVen!=null) {
				this.jInternalFrameImportacionConfiguracionPunVen.getjButtonCerrarImportacion().addActionListener (new ButtonActionListener(this,"CerrarImportacionConfiguracionPunVen"));
				this.jInternalFrameImportacionConfiguracionPunVen.getjButtonGenerarImportacion().addActionListener (new ButtonActionListener(this,"GenerarImportacionConfiguracionPunVen"));
				this.jInternalFrameImportacionConfiguracionPunVen.getjButtonAbrirImportacion().addActionListener (new ButtonActionListener(this,"AbrirImportacionConfiguracionPunVen"));
			}
			
			//ORDER BY
			this.jButtonAbrirOrderByConfiguracionPunVen.addActionListener (new ButtonActionListener(this,"AbrirOrderByConfiguracionPunVen"));
			
			this.jButtonAbrirOrderByToolBarConfiguracionPunVen.addActionListener (new ButtonActionListener(this,"AbrirOrderByToolBarConfiguracionPunVen"));			
			
			if(this.jInternalFrameOrderByConfiguracionPunVen!=null) {
				this.jInternalFrameOrderByConfiguracionPunVen.getjButtonCerrarOrderBy().addActionListener (new ButtonActionListener(this,"CerrarOrderByConfiguracionPunVen"));				
			}
			
			
		}
		
		
		
		if(!this.conCargarMinimo) {
			if(this.jInternalFrameDetalleFormConfiguracionPunVen!=null) { //if(this.conCargarFormDetalle) {
			;
			}
		}
		
		
		//TABBED PANE RELACIONES
		if(this.jInternalFrameDetalleFormConfiguracionPunVen!=null) { //if(this.conCargarFormDetalle) {
			this.jInternalFrameDetalleFormConfiguracionPunVen.jTabbedPaneRelacionesConfiguracionPunVen.addChangeListener(new TabbedPaneChangeListener(this,"RelacionesConfiguracionPunVen"));
		
		;
		}
		//TABBED PANE RELACIONES FIN(EXTRA TAB)		
	}
	
	/*
	public void initActions() {
		String sMapKey = "";
		InputMap inputMap =null;
		
		this.addInternalFrameListener(new javax.swing.event.InternalFrameAdapter() {
            public void internalFrameClosing(InternalFrameEvent event) {          	
            	try {
            		closingInternalFrameConfiguracionPunVen();
				} catch (Exception e) {
					e.printStackTrace();
				}
            }
        });
		
		this.jInternalFrameDetalleFormConfiguracionPunVen.addInternalFrameListener(new javax.swing.event.InternalFrameAdapter() {
	        public void internalFrameClosing(InternalFrameEvent event) {
	            JInternalFrameBase jInternalFrameDetalleFormConfiguracionPunVen = (JInternalFrameBase)event.getSource();
	            	
	            ConfiguracionPunVenBeanSwingJInternalFrame jInternalFrameParent=(ConfiguracionPunVenBeanSwingJInternalFrame)jInternalFrameDetalleFormConfiguracionPunVen.getjInternalFrameParent();
	                
	            try {
					jInternalFrameParent.jButtonCancelarConfiguracionPunVenActionPerformed(null);
					
					//jInternalFrameParent.dispose();
					//jInternalFrameParent=null;
					
				} catch (Exception e) {
					e.printStackTrace();
				}
	        }
	    });
			
		this.jTableDatosConfiguracionPunVen.getSelectionModel().addListSelectionListener (
	                new ListSelectionListener() {
	                    public void valueChanged(ListSelectionEvent e) {
							//BYDAN_DESHABILITADO
	                    	//try {jTableDatosConfiguracionPunVenListSelectionListener(e);}catch(Exception e1){e1.printStackTrace();}
	                    }
	                }
	     );
		
		this.jTableDatosConfiguracionPunVen.addMouseListener(new MouseAdapter() {
			   public void mouseClicked(MouseEvent evt) {
				      if (evt.getClickCount() == 2) {
				    	  jButtonIdActionPerformed(null,jTableDatosConfiguracionPunVen.getSelectedRow(),false,false);
				      }
				   }
		});
		
		this.jButtonNuevoConfiguracionPunVen.addActionListener (
	          new java.awt.event.ActionListener() {
	              public void actionPerformed(ActionEvent evt) {
	            	  try {jButtonNuevoConfiguracionPunVenActionPerformed(evt,false);}catch(Exception e){e.printStackTrace();}
	              }
	          }
        );
		
		this.jButtonNuevoToolBarConfiguracionPunVen.addActionListener (
	          new java.awt.event.ActionListener() {
	              public void actionPerformed(ActionEvent evt) {
	            	  try {jButtonNuevoConfiguracionPunVenActionPerformed(evt,false);}catch(Exception e){e.printStackTrace();}
	              }
	          }
        );
		
		this.jMenuItemNuevoConfiguracionPunVen.addActionListener (
	          new java.awt.event.ActionListener() {
	              public void actionPerformed(ActionEvent evt) {
	            	  try {jButtonNuevoConfiguracionPunVenActionPerformed(evt,false);}catch(Exception e){e.printStackTrace();}
	              }
	          }
        );
		
		sMapKey = "NuevoConfiguracionPunVen";
		inputMap = this.jButtonNuevoConfiguracionPunVen.getInputMap(JComponent.WHEN_IN_FOCUSED_WINDOW);
		inputMap.put(KeyStroke.getKeyStroke(KeyEvent.VK_N , KeyEvent.CTRL_MASK), sMapKey);
			
		this.jButtonNuevoConfiguracionPunVen.getActionMap().put(sMapKey, new AbstractAction() {
			public static final long serialVersionUID = 1L;
			public void actionPerformed(ActionEvent evt) {
			    try {jButtonNuevoConfiguracionPunVenActionPerformed(evt,false);} catch (Exception e) {e.printStackTrace();}
			}
		});
		
		this.jButtonNuevoRelacionesConfiguracionPunVen.addActionListener (
	          new java.awt.event.ActionListener() {
	              public void actionPerformed(ActionEvent evt) {
	            	  try {jButtonNuevoConfiguracionPunVenActionPerformed(evt,true);}catch(Exception e){e.printStackTrace();}
	              }
	          }
        );
		
		this.jButtonNuevoRelacionesToolBarConfiguracionPunVen.addActionListener (
	          new java.awt.event.ActionListener() {
	              public void actionPerformed(ActionEvent evt) {
	            	  try {jButtonNuevoConfiguracionPunVenActionPerformed(evt,true);}catch(Exception e){e.printStackTrace();}
	              }
	          }
        );
		
		this.jMenuItemNuevoRelacionesConfiguracionPunVen.addActionListener (
	          new java.awt.event.ActionListener() {
	              public void actionPerformed(ActionEvent evt) {
	            	  try {jButtonNuevoConfiguracionPunVenActionPerformed(evt,true);}catch(Exception e){e.printStackTrace();}
	              }
	          }
        );
		
		sMapKey = "NuevoRelacionesConfiguracionPunVen";
		inputMap = this.jButtonNuevoRelacionesConfiguracionPunVen.getInputMap(JComponent.WHEN_IN_FOCUSED_WINDOW);
		inputMap.put(KeyStroke.getKeyStroke(KeyEvent.VK_R , KeyEvent.CTRL_MASK), sMapKey);
			
		this.jButtonNuevoRelacionesConfiguracionPunVen.getActionMap().put(sMapKey, new AbstractAction() {
			public static final long serialVersionUID = 1L;
			public void actionPerformed(ActionEvent evt) {
			    try {jButtonNuevoConfiguracionPunVenActionPerformed(evt,true);} catch (Exception e) {e.printStackTrace();}
			}
		});
		
		this.jButtonModificarConfiguracionPunVen.addActionListener (
	          new java.awt.event.ActionListener() {
	              public void actionPerformed(ActionEvent evt) {
	            	  try {jButtonModificarConfiguracionPunVenActionPerformed(evt);}catch(Exception e){e.printStackTrace();}
	              }
	          }
        );
		
		this.jButtonModificarToolBarConfiguracionPunVen.addActionListener (
	          new java.awt.event.ActionListener() {
	              public void actionPerformed(ActionEvent evt) {
	            	  try {jButtonModificarConfiguracionPunVenActionPerformed(evt);}catch(Exception e){e.printStackTrace();}
	              }
	          }
        );
		
		this.jMenuItemModificarConfiguracionPunVen.addActionListener (
	          new java.awt.event.ActionListener() {
	              public void actionPerformed(ActionEvent evt) {
	            	  try {jButtonModificarConfiguracionPunVenActionPerformed(evt);}catch(Exception e){e.printStackTrace();}
	              }
	          }
        );
		
		sMapKey = "ModificarConfiguracionPunVen";
		inputMap = this.jButtonModificarConfiguracionPunVen.getInputMap(JComponent.WHEN_IN_FOCUSED_WINDOW);
		inputMap.put(KeyStroke.getKeyStroke(KeyEvent.VK_M , KeyEvent.CTRL_MASK), sMapKey);
			
		this.jButtonModificarConfiguracionPunVen.getActionMap().put(sMapKey, new AbstractAction() {
			public static final long serialVersionUID = 1L;
			public void actionPerformed(ActionEvent evt) {
			    try {jButtonModificarConfiguracionPunVenActionPerformed(evt);} catch (Exception e) {e.printStackTrace();}
			}
		});
		
		this.jButtonActualizarConfiguracionPunVen.addActionListener (
	          new java.awt.event.ActionListener() {
	              public void actionPerformed(ActionEvent evt) {
	            	  try {jButtonActualizarConfiguracionPunVenActionPerformed(evt);}catch(Exception e){e.printStackTrace();}
	              }
	          }
        );
		
		this.jButtonActualizarToolBarConfiguracionPunVen.addActionListener (
	          new java.awt.event.ActionListener() {
	              public void actionPerformed(ActionEvent evt) {
	            	  try {jButtonActualizarConfiguracionPunVenActionPerformed(evt);}catch(Exception e){e.printStackTrace();}
	              }
	          }
        );
		
		this.jMenuItemActualizarConfiguracionPunVen.addActionListener (
	          new java.awt.event.ActionListener() {
	              public void actionPerformed(ActionEvent evt) {
	            	  try {jButtonActualizarConfiguracionPunVenActionPerformed(evt);}catch(Exception e){e.printStackTrace();}
	              }
	          }
        );
		
		sMapKey = "ActualizarConfiguracionPunVen";
		inputMap = this.jButtonActualizarConfiguracionPunVen.getInputMap(JComponent.WHEN_IN_FOCUSED_WINDOW);
		inputMap.put(KeyStroke.getKeyStroke(KeyEvent.VK_G , KeyEvent.CTRL_MASK), sMapKey);
			
		this.jButtonActualizarConfiguracionPunVen.getActionMap().put(sMapKey, new AbstractAction() {
			public static final long serialVersionUID = 1L;
			public void actionPerformed(ActionEvent evt) {
			    try {jButtonActualizarConfiguracionPunVenActionPerformed(evt);} catch (Exception e) {e.printStackTrace();}
			}
		});
		
		this.jButtonEliminarConfiguracionPunVen.addActionListener (
	          new java.awt.event.ActionListener() {
	              public void actionPerformed(ActionEvent evt) {
	            	  try {jButtonEliminarConfiguracionPunVenActionPerformed(evt);}catch(Exception e){e.printStackTrace();}
	              }
	          }
        );
		
		this.jButtonEliminarToolBarConfiguracionPunVen.addActionListener (
	          new java.awt.event.ActionListener() {
	              public void actionPerformed(ActionEvent evt) {
	            	  try {jButtonEliminarConfiguracionPunVenActionPerformed(evt);}catch(Exception e){e.printStackTrace();}
	              }
	          }
        );
				
		this.jMenuItemEliminarConfiguracionPunVen.addActionListener (
	          new java.awt.event.ActionListener() {
	              public void actionPerformed(ActionEvent evt) {
	            	  try {jButtonEliminarConfiguracionPunVenActionPerformed(evt);}catch(Exception e){e.printStackTrace();}
	              }
	          }
        );
		
		sMapKey = "EliminarConfiguracionPunVen";
		inputMap = this.jButtonEliminarConfiguracionPunVen.getInputMap(JComponent.WHEN_IN_FOCUSED_WINDOW);
		inputMap.put(KeyStroke.getKeyStroke(KeyEvent.VK_E , KeyEvent.CTRL_MASK), sMapKey);
			
		this.jButtonEliminarConfiguracionPunVen.getActionMap().put(sMapKey, new AbstractAction() {
			public static final long serialVersionUID = 1L;
			public void actionPerformed(ActionEvent evt) {
			    try {jButtonEliminarConfiguracionPunVenActionPerformed(evt);} catch (Exception e) {e.printStackTrace();}
			}
		});
		
		this.jButtonCancelarConfiguracionPunVen.addActionListener (
	          new java.awt.event.ActionListener() {
	              public void actionPerformed(ActionEvent evt) {
	            	  try {jButtonCancelarConfiguracionPunVenActionPerformed(evt);}catch(Exception e){e.printStackTrace();}
	              }
	          }
        );
		
		this.jButtonCancelarToolBarConfiguracionPunVen.addActionListener (
	          new java.awt.event.ActionListener() {
	              public void actionPerformed(ActionEvent evt) {
	            	  try {jButtonCancelarConfiguracionPunVenActionPerformed(evt);}catch(Exception e){e.printStackTrace();}
	              }
	          }
        );
		
		this.jMenuItemCancelarConfiguracionPunVen.addActionListener (
	          new java.awt.event.ActionListener() {
	              public void actionPerformed(ActionEvent evt) {
	            	  try {jButtonCancelarConfiguracionPunVenActionPerformed(evt);}catch(Exception e){e.printStackTrace();}
	              }
	          }
        );
		
		sMapKey = "CancelarConfiguracionPunVen";
		inputMap = this.jButtonCancelarConfiguracionPunVen.getInputMap(JComponent.WHEN_IN_FOCUSED_WINDOW);
		inputMap.put(KeyStroke.getKeyStroke(KeyEvent.VK_Q , KeyEvent.CTRL_MASK), sMapKey);
			
		this.jButtonCancelarConfiguracionPunVen.getActionMap().put(sMapKey, new AbstractAction() {
			public static final long serialVersionUID = 1L;
			public void actionPerformed(ActionEvent evt) {
			    try {jButtonCancelarConfiguracionPunVenActionPerformed(evt);} catch (Exception e) {e.printStackTrace();}
			}
		});
		
		this.jButtonCerrarConfiguracionPunVen.addActionListener (
	          new java.awt.event.ActionListener() {
	              public void actionPerformed(ActionEvent evt) {
	            	  try {jButtonCerrarConfiguracionPunVenActionPerformed(evt);}catch(Exception e){e.printStackTrace();}
	              }
	          }
        );
		
		this.jButtonCerrarToolBarConfiguracionPunVen.addActionListener (
	          new java.awt.event.ActionListener() {
	              public void actionPerformed(ActionEvent evt) {
	            	  try {jButtonCerrarConfiguracionPunVenActionPerformed(evt);}catch(Exception e){e.printStackTrace();}
	              }
	          }
        );
		
		this.jMenuItemCerrarConfiguracionPunVen.addActionListener (
	          new java.awt.event.ActionListener() {
	              public void actionPerformed(ActionEvent evt) {
	            	  try {jButtonCerrarConfiguracionPunVenActionPerformed(evt);}catch(Exception e){e.printStackTrace();}
	              }
	          }
        );
		
		this.jMenuItemDetalleCerrarConfiguracionPunVen.addActionListener (
	          new java.awt.event.ActionListener() {
	              public void actionPerformed(ActionEvent evt) {
	            	  //try {jButtonCerrarConfiguracionPunVenActionPerformed(evt);}catch(Exception e){e.printStackTrace();}
					try {jButtonCancelarConfiguracionPunVenActionPerformed(evt);}catch(Exception e){e.printStackTrace();}
	              }
	          }
        );
		
		sMapKey = "CerrarConfiguracionPunVen";
		inputMap = this.jButtonCerrarConfiguracionPunVen.getInputMap(JComponent.WHEN_IN_FOCUSED_WINDOW);
		inputMap.put(KeyStroke.getKeyStroke(KeyEvent.VK_C , KeyEvent.ALT_MASK), sMapKey);
			
		this.jButtonCerrarConfiguracionPunVen.getActionMap().put(sMapKey, new AbstractAction() {
			public static final long serialVersionUID = 1L;
			public void actionPerformed(ActionEvent evt) {
			    try {jButtonCerrarConfiguracionPunVenActionPerformed(evt);} catch (Exception e) {e.printStackTrace();}
			}
		});
		
		this.jInternalFrameDetalleFormConfiguracionPunVen.jButtonGuardarCambiosConfiguracionPunVen.addActionListener (
	          new java.awt.event.ActionListener() {
	              public void actionPerformed(ActionEvent evt) {
	            	  try {jButtonGuardarCambiosConfiguracionPunVenActionPerformed(evt);}catch(Exception e){e.printStackTrace();}
	              }
	          }
        );
		
		this.jButtonGuardarCambiosToolBarConfiguracionPunVen.addActionListener (
	          new java.awt.event.ActionListener() {
	              public void actionPerformed(ActionEvent evt) {
	            	  try {jButtonGuardarCambiosConfiguracionPunVenActionPerformed(evt);}catch(Exception e){e.printStackTrace();}
	              }
	          }
        );
		
		this.jMenuItemGuardarCambiosConfiguracionPunVen.addActionListener (
	          new java.awt.event.ActionListener() {
	              public void actionPerformed(ActionEvent evt) {
	            	  try {jButtonGuardarCambiosConfiguracionPunVenActionPerformed(evt);}catch(Exception e){e.printStackTrace();}
	              }
	          }
        );
		
		this.jButtonGuardarCambiosTablaConfiguracionPunVen.addActionListener (
	          new java.awt.event.ActionListener() {
	              public void actionPerformed(ActionEvent evt) {
	            	  try {jButtonGuardarCambiosConfiguracionPunVenActionPerformed(evt);}catch(Exception e){e.printStackTrace();}
	              }
	          }
        );
		
		this.jButtonGuardarCambiosTablaToolBarConfiguracionPunVen.addActionListener (
	          new java.awt.event.ActionListener() {
	              public void actionPerformed(ActionEvent evt) {
	            	  try {jButtonGuardarCambiosConfiguracionPunVenActionPerformed(evt);}catch(Exception e){e.printStackTrace();}
	              }
	          }
        );
		
		this.jMenuItemGuardarCambiosTablaConfiguracionPunVen.addActionListener (
	          new java.awt.event.ActionListener() {
	              public void actionPerformed(ActionEvent evt) {
	            	  try {jButtonGuardarCambiosConfiguracionPunVenActionPerformed(evt);}catch(Exception e){e.printStackTrace();}
	              }
	          }
        );
		
		sMapKey = "GuardarCambiosConfiguracionPunVen";
		inputMap = this.jInternalFrameDetalleFormConfiguracionPunVen.jButtonGuardarCambiosConfiguracionPunVen.getInputMap(JComponent.WHEN_IN_FOCUSED_WINDOW);
		inputMap.put(KeyStroke.getKeyStroke(KeyEvent.VK_G , KeyEvent.CTRL_MASK), sMapKey);
			
		this.jInternalFrameDetalleFormConfiguracionPunVen.jButtonGuardarCambiosConfiguracionPunVen.getActionMap().put(sMapKey, new AbstractAction() {
			public static final long serialVersionUID = 1L;
			public void actionPerformed(ActionEvent evt) {
			    try {jButtonGuardarCambiosConfiguracionPunVenActionPerformed(evt);} catch (Exception e) {e.printStackTrace();}
			}
		});
		
		this.jButtonRecargarInformacionConfiguracionPunVen.addActionListener (
	          new java.awt.event.ActionListener() {
	              public void actionPerformed(ActionEvent evt) {
	            	  try {jButtonRecargarInformacionConfiguracionPunVenActionPerformed(evt);}catch(Exception e){e.printStackTrace();}
	              }
	          }
        );
		
		this.jButtonRecargarInformacionToolBarConfiguracionPunVen.addActionListener (
	          new java.awt.event.ActionListener() {
	              public void actionPerformed(ActionEvent evt) {
	            	  try {jButtonRecargarInformacionConfiguracionPunVenActionPerformed(evt);}catch(Exception e){e.printStackTrace();}
	              }
	          }
        );
		
		this.jMenuItemRecargarInformacionConfiguracionPunVen.addActionListener (
	          new java.awt.event.ActionListener() {
	              public void actionPerformed(ActionEvent evt) {
	            	  try {jButtonRecargarInformacionConfiguracionPunVenActionPerformed(evt);}catch(Exception e){e.printStackTrace();}
	              }
	          }
        );
		
		
		this.jButtonAnterioresConfiguracionPunVen.addActionListener (
	          new java.awt.event.ActionListener() {
	              public void actionPerformed(ActionEvent evt) {
	            	  try {jButtonAnterioresConfiguracionPunVenActionPerformed(evt);}catch(Exception e){e.printStackTrace();}
	              }
	          }
        );
		
		this.jButtonAnterioresToolBarConfiguracionPunVen.addActionListener (
	          new java.awt.event.ActionListener() {
	              public void actionPerformed(ActionEvent evt) {
	            	  try {jButtonAnterioresConfiguracionPunVenActionPerformed(evt);}catch(Exception e){e.printStackTrace();}
	              }
	          }
        );
		
		this.jMenuItemAnterioresConfiguracionPunVen.addActionListener (
	          new java.awt.event.ActionListener() {
	              public void actionPerformed(ActionEvent evt) {
	            	  try {jButtonAnterioresConfiguracionPunVenActionPerformed(evt);}catch(Exception e){e.printStackTrace();}
	              }
	          }
        );
		
		this.jButtonSiguientesConfiguracionPunVen.addActionListener (
	          new java.awt.event.ActionListener() {
	              public void actionPerformed(ActionEvent evt) {
	            	  try {jButtonSiguientesConfiguracionPunVenActionPerformed(evt);}catch(Exception e){e.printStackTrace();}
	              }
	          }
        );
		
		this.jButtonSiguientesToolBarConfiguracionPunVen.addActionListener (
	          new java.awt.event.ActionListener() {
	              public void actionPerformed(ActionEvent evt) {
	            	  try {jButtonSiguientesConfiguracionPunVenActionPerformed(evt);}catch(Exception e){e.printStackTrace();}
	              }
	          }
        );
		
		this.jMenuItemSiguientesConfiguracionPunVen.addActionListener (
	          new java.awt.event.ActionListener() {
	              public void actionPerformed(ActionEvent evt) {
	            	  try {jButtonSiguientesConfiguracionPunVenActionPerformed(evt);}catch(Exception e){e.printStackTrace();}
	              }
	          }
        );
		
		this.jButtonNuevoGuardarCambiosConfiguracionPunVen.addActionListener (
	          new java.awt.event.ActionListener() {
	              public void actionPerformed(ActionEvent evt) {
	            	  try {jButtonNuevoGuardarCambiosConfiguracionPunVenActionPerformed(evt);}catch(Exception e){e.printStackTrace();}
	              }
	          }
        );
		
		this.jButtonNuevoGuardarCambiosToolBarConfiguracionPunVen.addActionListener (
	          new java.awt.event.ActionListener() {
	              public void actionPerformed(ActionEvent evt) {
	            	  try {jButtonNuevoGuardarCambiosConfiguracionPunVenActionPerformed(evt);}catch(Exception e){e.printStackTrace();}
	              }
	          }
        );
		
		this.jMenuItemNuevoGuardarCambiosConfiguracionPunVen.addActionListener (
	          new java.awt.event.ActionListener() {
	              public void actionPerformed(ActionEvent evt) {
	            	  try {jButtonNuevoGuardarCambiosConfiguracionPunVenActionPerformed(evt);}catch(Exception e){e.printStackTrace();}
	              }
	          }
        );
		
		
		//SELECCIONAR TODOS
		this.jCheckBoxSeleccionarTodosConfiguracionPunVen.addItemListener(new ItemListener() {		
			public void itemStateChanged(ItemEvent evt) {
				try {jCheckBoxSeleccionarTodosConfiguracionPunVenItemListener(evt);}catch(Exception e){e.printStackTrace();}
			}
		});

		this.jComboBoxTiposAccionesConfiguracionPunVen.addActionListener (new ActionListener () {
			public void actionPerformed(ActionEvent e) {
				try {jComboBoxTiposAccionesConfiguracionPunVenActionListener(e);} catch (Exception e1) { e1.printStackTrace();}
			};
		});
		
		this.jComboBoxTiposSeleccionarConfiguracionPunVen.addActionListener (new ActionListener () {
			public void actionPerformed(ActionEvent e) {
				try {jComboBoxTiposSeleccionarConfiguracionPunVenActionListener(e);} catch (Exception e1) { e1.printStackTrace();}
			};
		});
		
		this.jTextFieldValorCampoGeneralConfiguracionPunVen.addActionListener (new ActionListener () {
			public void actionPerformed(ActionEvent e) {
				try {jTextFieldValorCampoGeneralConfiguracionPunVenActionListener(e);} catch (Exception e1) { e1.printStackTrace();}
			};
		});
		
		
		//BUSQUEDA GENERAL
		this.jInternalFrameDetalleFormConfiguracionPunVen.jButtonidConfiguracionPunVenBusqueda.addActionListener(new ButtonActionListener(this,"idConfiguracionPunVenBusqueda"));
		//ACTUALIZAR FK
		this.jInternalFrameDetalleFormConfiguracionPunVen.jButtonid_empresaConfiguracionPunVenUpdate.addActionListener(new ButtonActionListener(this,"id_empresaConfiguracionPunVenUpdate"));
		//BUSQUEDA GENERAL
		this.jInternalFrameDetalleFormConfiguracionPunVen.jButtonid_empresaConfiguracionPunVenBusqueda.addActionListener(new ButtonActionListener(this,"id_empresaConfiguracionPunVenBusqueda"));
		//ACTUALIZAR FK
		this.jInternalFrameDetalleFormConfiguracionPunVen.jButtonid_sucursalConfiguracionPunVenUpdate.addActionListener(new ButtonActionListener(this,"id_sucursalConfiguracionPunVenUpdate"));
		//BUSQUEDA GENERAL
		this.jInternalFrameDetalleFormConfiguracionPunVen.jButtonid_sucursalConfiguracionPunVenBusqueda.addActionListener(new ButtonActionListener(this,"id_sucursalConfiguracionPunVenBusqueda"));
		//ACTUALIZAR FK
		this.jInternalFrameDetalleFormConfiguracionPunVen.jButtonid_bodegaConfiguracionPunVenUpdate.addActionListener(new ButtonActionListener(this,"id_bodegaConfiguracionPunVenUpdate"));
		//BUSQUEDA GENERAL
		this.jInternalFrameDetalleFormConfiguracionPunVen.jButtonid_bodegaConfiguracionPunVenBusqueda.addActionListener(new ButtonActionListener(this,"id_bodegaConfiguracionPunVenBusqueda"));
		//ACTUALIZAR FK
		this.jInternalFrameDetalleFormConfiguracionPunVen.jButtonid_cuenta_contable_efectivoConfiguracionPunVenUpdate.addActionListener(new ButtonActionListener(this,"id_cuenta_contable_efectivoConfiguracionPunVenUpdate"));
		//BUSQUEDA GENERAL
		this.jInternalFrameDetalleFormConfiguracionPunVen.jButtonid_cuenta_contable_efectivoConfiguracionPunVenBusqueda.addActionListener(new ButtonActionListener(this,"id_cuenta_contable_efectivoConfiguracionPunVenBusqueda"));
		//ACTUALIZAR FK
		this.jInternalFrameDetalleFormConfiguracionPunVen.jButtonid_cuenta_contable_iceConfiguracionPunVenUpdate.addActionListener(new ButtonActionListener(this,"id_cuenta_contable_iceConfiguracionPunVenUpdate"));
		//BUSQUEDA GENERAL
		this.jInternalFrameDetalleFormConfiguracionPunVen.jButtonid_cuenta_contable_iceConfiguracionPunVenBusqueda.addActionListener(new ButtonActionListener(this,"id_cuenta_contable_iceConfiguracionPunVenBusqueda"));
		//ACTUALIZAR FK
		this.jInternalFrameDetalleFormConfiguracionPunVen.jButtonid_cuenta_contable_otrosConfiguracionPunVenUpdate.addActionListener(new ButtonActionListener(this,"id_cuenta_contable_otrosConfiguracionPunVenUpdate"));
		//BUSQUEDA GENERAL
		this.jInternalFrameDetalleFormConfiguracionPunVen.jButtonid_cuenta_contable_otrosConfiguracionPunVenBusqueda.addActionListener(new ButtonActionListener(this,"id_cuenta_contable_otrosConfiguracionPunVenBusqueda"));
		//jButtonid_cliente_consumidor_finalConfiguracionPunVen.addActionListener (
		//	new java.awt.event.ActionListener() {
		//		public void actionPerformed(java.awt.event.ActionEvent evt) {
		//			jButtonid_cliente_consumidor_finalConfiguracionPunVenActionPerformed(evt);
		//		}
		//	}
		//);

		//BUSQUEDA CAMPO
		this.jInternalFrameDetalleFormConfiguracionPunVen.jButtonid_cliente_consumidor_finalConfiguracionPunVen.addActionListener(new ButtonActionListener(this,"id_cliente_consumidor_finalConfiguracionPunVen"));
		//ACTUALIZAR FK
		this.jInternalFrameDetalleFormConfiguracionPunVen.jButtonid_cliente_consumidor_finalConfiguracionPunVenUpdate.addActionListener(new ButtonActionListener(this,"id_cliente_consumidor_finalConfiguracionPunVenUpdate"));
		//BUSQUEDA GENERAL
		this.jInternalFrameDetalleFormConfiguracionPunVen.jButtonid_cliente_consumidor_finalConfiguracionPunVenBusqueda.addActionListener(new ButtonActionListener(this,"id_cliente_consumidor_finalConfiguracionPunVenBusqueda"));
		//ACTUALIZAR FK
		this.jInternalFrameDetalleFormConfiguracionPunVen.jButtonid_tipo_documento_facturaConfiguracionPunVenUpdate.addActionListener(new ButtonActionListener(this,"id_tipo_documento_facturaConfiguracionPunVenUpdate"));
		//BUSQUEDA GENERAL
		this.jInternalFrameDetalleFormConfiguracionPunVen.jButtonid_tipo_documento_facturaConfiguracionPunVenBusqueda.addActionListener(new ButtonActionListener(this,"id_tipo_documento_facturaConfiguracionPunVenBusqueda"));
		//ACTUALIZAR FK
		this.jInternalFrameDetalleFormConfiguracionPunVen.jButtonid_tipo_documento_nota_ventaConfiguracionPunVenUpdate.addActionListener(new ButtonActionListener(this,"id_tipo_documento_nota_ventaConfiguracionPunVenUpdate"));
		//BUSQUEDA GENERAL
		this.jInternalFrameDetalleFormConfiguracionPunVen.jButtonid_tipo_documento_nota_ventaConfiguracionPunVenBusqueda.addActionListener(new ButtonActionListener(this,"id_tipo_documento_nota_ventaConfiguracionPunVenBusqueda"));
		//ACTUALIZAR FK
		this.jInternalFrameDetalleFormConfiguracionPunVen.jButtonid_tipo_documento_nota_creditoConfiguracionPunVenUpdate.addActionListener(new ButtonActionListener(this,"id_tipo_documento_nota_creditoConfiguracionPunVenUpdate"));
		//BUSQUEDA GENERAL
		this.jInternalFrameDetalleFormConfiguracionPunVen.jButtonid_tipo_documento_nota_creditoConfiguracionPunVenBusqueda.addActionListener(new ButtonActionListener(this,"id_tipo_documento_nota_creditoConfiguracionPunVenBusqueda"));
		//ACTUALIZAR FK
		this.jInternalFrameDetalleFormConfiguracionPunVen.jButtonid_tipo_documento_tarjeta_creditoConfiguracionPunVenUpdate.addActionListener(new ButtonActionListener(this,"id_tipo_documento_tarjeta_creditoConfiguracionPunVenUpdate"));
		//BUSQUEDA GENERAL
		this.jInternalFrameDetalleFormConfiguracionPunVen.jButtonid_tipo_documento_tarjeta_creditoConfiguracionPunVenBusqueda.addActionListener(new ButtonActionListener(this,"id_tipo_documento_tarjeta_creditoConfiguracionPunVenBusqueda"));
		//ACTUALIZAR FK
		this.jInternalFrameDetalleFormConfiguracionPunVen.jButtonid_formato_facturaConfiguracionPunVenUpdate.addActionListener(new ButtonActionListener(this,"id_formato_facturaConfiguracionPunVenUpdate"));
		//BUSQUEDA GENERAL
		this.jInternalFrameDetalleFormConfiguracionPunVen.jButtonid_formato_facturaConfiguracionPunVenBusqueda.addActionListener(new ButtonActionListener(this,"id_formato_facturaConfiguracionPunVenBusqueda"));
		//ACTUALIZAR FK
		this.jInternalFrameDetalleFormConfiguracionPunVen.jButtonid_formato_nota_ventaConfiguracionPunVenUpdate.addActionListener(new ButtonActionListener(this,"id_formato_nota_ventaConfiguracionPunVenUpdate"));
		//BUSQUEDA GENERAL
		this.jInternalFrameDetalleFormConfiguracionPunVen.jButtonid_formato_nota_ventaConfiguracionPunVenBusqueda.addActionListener(new ButtonActionListener(this,"id_formato_nota_ventaConfiguracionPunVenBusqueda"));
		//ACTUALIZAR FK
		this.jInternalFrameDetalleFormConfiguracionPunVen.jButtonid_formato_nota_creditoConfiguracionPunVenUpdate.addActionListener(new ButtonActionListener(this,"id_formato_nota_creditoConfiguracionPunVenUpdate"));
		//BUSQUEDA GENERAL
		this.jInternalFrameDetalleFormConfiguracionPunVen.jButtonid_formato_nota_creditoConfiguracionPunVenBusqueda.addActionListener(new ButtonActionListener(this,"id_formato_nota_creditoConfiguracionPunVenBusqueda"));
		//ACTUALIZAR FK
		this.jInternalFrameDetalleFormConfiguracionPunVen.jButtonid_transaccion_facturaConfiguracionPunVenUpdate.addActionListener(new ButtonActionListener(this,"id_transaccion_facturaConfiguracionPunVenUpdate"));
		//BUSQUEDA GENERAL
		this.jInternalFrameDetalleFormConfiguracionPunVen.jButtonid_transaccion_facturaConfiguracionPunVenBusqueda.addActionListener(new ButtonActionListener(this,"id_transaccion_facturaConfiguracionPunVenBusqueda"));
		//ACTUALIZAR FK
		this.jInternalFrameDetalleFormConfiguracionPunVen.jButtonid_transaccion_nota_ventaConfiguracionPunVenUpdate.addActionListener(new ButtonActionListener(this,"id_transaccion_nota_ventaConfiguracionPunVenUpdate"));
		//BUSQUEDA GENERAL
		this.jInternalFrameDetalleFormConfiguracionPunVen.jButtonid_transaccion_nota_ventaConfiguracionPunVenBusqueda.addActionListener(new ButtonActionListener(this,"id_transaccion_nota_ventaConfiguracionPunVenBusqueda"));
		//ACTUALIZAR FK
		this.jInternalFrameDetalleFormConfiguracionPunVen.jButtonid_transaccion_nota_creditoConfiguracionPunVenUpdate.addActionListener(new ButtonActionListener(this,"id_transaccion_nota_creditoConfiguracionPunVenUpdate"));
		//BUSQUEDA GENERAL
		this.jInternalFrameDetalleFormConfiguracionPunVen.jButtonid_transaccion_nota_creditoConfiguracionPunVenBusqueda.addActionListener(new ButtonActionListener(this,"id_transaccion_nota_creditoConfiguracionPunVenBusqueda"));
		//ACTUALIZAR FK
		this.jInternalFrameDetalleFormConfiguracionPunVen.jButtonid_transaccion_cuenta_facturaConfiguracionPunVenUpdate.addActionListener(new ButtonActionListener(this,"id_transaccion_cuenta_facturaConfiguracionPunVenUpdate"));
		//BUSQUEDA GENERAL
		this.jInternalFrameDetalleFormConfiguracionPunVen.jButtonid_transaccion_cuenta_facturaConfiguracionPunVenBusqueda.addActionListener(new ButtonActionListener(this,"id_transaccion_cuenta_facturaConfiguracionPunVenBusqueda"));
		//ACTUALIZAR FK
		this.jInternalFrameDetalleFormConfiguracionPunVen.jButtonid_transaccion_cuenta_nota_ventaConfiguracionPunVenUpdate.addActionListener(new ButtonActionListener(this,"id_transaccion_cuenta_nota_ventaConfiguracionPunVenUpdate"));
		//BUSQUEDA GENERAL
		this.jInternalFrameDetalleFormConfiguracionPunVen.jButtonid_transaccion_cuenta_nota_ventaConfiguracionPunVenBusqueda.addActionListener(new ButtonActionListener(this,"id_transaccion_cuenta_nota_ventaConfiguracionPunVenBusqueda"));
		//ACTUALIZAR FK
		this.jInternalFrameDetalleFormConfiguracionPunVen.jButtonid_transaccion_cuenta_nota_creditoConfiguracionPunVenUpdate.addActionListener(new ButtonActionListener(this,"id_transaccion_cuenta_nota_creditoConfiguracionPunVenUpdate"));
		//BUSQUEDA GENERAL
		this.jInternalFrameDetalleFormConfiguracionPunVen.jButtonid_transaccion_cuenta_nota_creditoConfiguracionPunVenBusqueda.addActionListener(new ButtonActionListener(this,"id_transaccion_cuenta_nota_creditoConfiguracionPunVenBusqueda"));
		
		
		this.jButtonFK_IdBodegaConfiguracionPunVen.addActionListener(new ButtonActionListener(this,"FK_IdBodegaConfiguracionPunVen"));

		this.jButtonFK_IdClienteConsumidorFinalConfiguracionPunVen.addActionListener(new ButtonActionListener(this,"FK_IdClienteConsumidorFinalConfiguracionPunVen"));

		this.jButtonBuscarFK_IdClienteConsumidorFinalid_cliente_consumidor_finalConfiguracionPunVen.addActionListener(new ButtonActionListener(this,"id_cliente_consumidor_finalConfiguracionPunVen"));

		this.jButtonFK_IdCuentaContableEfectivoConfiguracionPunVen.addActionListener(new ButtonActionListener(this,"FK_IdCuentaContableEfectivoConfiguracionPunVen"));

		this.jButtonFK_IdCuentaContableIceConfiguracionPunVen.addActionListener(new ButtonActionListener(this,"FK_IdCuentaContableIceConfiguracionPunVen"));

		this.jButtonFK_IdCuentaContableOtrosConfiguracionPunVen.addActionListener(new ButtonActionListener(this,"FK_IdCuentaContableOtrosConfiguracionPunVen"));

		this.jButtonFK_IdFormatoFacturaConfiguracionPunVen.addActionListener(new ButtonActionListener(this,"FK_IdFormatoFacturaConfiguracionPunVen"));

		this.jButtonFK_IdFormatoNotaCreditoConfiguracionPunVen.addActionListener(new ButtonActionListener(this,"FK_IdFormatoNotaCreditoConfiguracionPunVen"));

		this.jButtonFK_IdFormatoNotaVentaConfiguracionPunVen.addActionListener(new ButtonActionListener(this,"FK_IdFormatoNotaVentaConfiguracionPunVen"));

		this.jButtonFK_IdTipoDocumentoFacturaConfiguracionPunVen.addActionListener(new ButtonActionListener(this,"FK_IdTipoDocumentoFacturaConfiguracionPunVen"));

		this.jButtonFK_IdTipoDocumentoNotaCreditoConfiguracionPunVen.addActionListener(new ButtonActionListener(this,"FK_IdTipoDocumentoNotaCreditoConfiguracionPunVen"));

		this.jButtonFK_IdTipoDocumentoNotaVentaConfiguracionPunVen.addActionListener(new ButtonActionListener(this,"FK_IdTipoDocumentoNotaVentaConfiguracionPunVen"));

		this.jButtonFK_IdTipoDocumentoTarjetaCreditoConfiguracionPunVen.addActionListener(new ButtonActionListener(this,"FK_IdTipoDocumentoTarjetaCreditoConfiguracionPunVen"));

		this.jButtonFK_IdTransaccionCuentaFacturaConfiguracionPunVen.addActionListener(new ButtonActionListener(this,"FK_IdTransaccionCuentaFacturaConfiguracionPunVen"));

		this.jButtonFK_IdTransaccionCuentaNotaCreditoConfiguracionPunVen.addActionListener(new ButtonActionListener(this,"FK_IdTransaccionCuentaNotaCreditoConfiguracionPunVen"));

		this.jButtonFK_IdTransaccionCuentaNotaVentaConfiguracionPunVen.addActionListener(new ButtonActionListener(this,"FK_IdTransaccionCuentaNotaVentaConfiguracionPunVen"));

		this.jButtonFK_IdTransaccionFacturaConfiguracionPunVen.addActionListener(new ButtonActionListener(this,"FK_IdTransaccionFacturaConfiguracionPunVen"));

		this.jButtonFK_IdTransaccionNotaCreditoConfiguracionPunVen.addActionListener(new ButtonActionListener(this,"FK_IdTransaccionNotaCreditoConfiguracionPunVen"));

		this.jButtonFK_IdTransaccionNotaVentaConfiguracionPunVen.addActionListener(new ButtonActionListener(this,"FK_IdTransaccionNotaVentaConfiguracionPunVen"));

		
		//REPORTE DINAMICO
		this.jButtonCerrarReporteDinamicoConfiguracionPunVen.addActionListener (
	          new java.awt.event.ActionListener() {
	              public void actionPerformed(ActionEvent evt) {
	            	  try {jButtonCerrarReporteDinamicoConfiguracionPunVenActionPerformed(evt);}catch(Exception e){e.printStackTrace();}
	              }
	          }
        );
		
		this.jButtonGenerarReporteDinamicoConfiguracionPunVen.addActionListener (
	          new java.awt.event.ActionListener() {
	              public void actionPerformed(ActionEvent evt) {
	            	  try {jButtonGenerarReporteDinamicoConfiguracionPunVenActionPerformed(evt);}catch(Exception e){e.printStackTrace();}
	              }
	          }
        );
		
		this.jButtonGenerarExcelReporteDinamicoConfiguracionPunVen.addActionListener (
	          new java.awt.event.ActionListener() {
	              public void actionPerformed(ActionEvent evt) {
	            	  try {jButtonGenerarExcelReporteDinamicoConfiguracionPunVenActionPerformed(evt);}catch(Exception e){e.printStackTrace();}
	              }
	          }
        );
		
		//IMPORTACION
		this.jButtonCerrarImportacionConfiguracionPunVen.addActionListener (
	          new java.awt.event.ActionListener() {
	              public void actionPerformed(ActionEvent evt) {
	            	  try {jButtonCerrarImportacionConfiguracionPunVenActionPerformed(evt);}catch(Exception e){e.printStackTrace();}
	              }
	          }
        );
		
		this.jButtonGenerarImportacionConfiguracionPunVen.addActionListener (
	          new java.awt.event.ActionListener() {
	              public void actionPerformed(ActionEvent evt) {
	            	  try {jButtonGenerarImportacionConfiguracionPunVenActionPerformed(evt);}catch(Exception e){e.printStackTrace();}
	              }
	          }
        );
		
		this.jButtonAbrirImportacionConfiguracionPunVen.addActionListener (
	          new java.awt.event.ActionListener() {
	              public void actionPerformed(ActionEvent evt) {
	            	  try {jButtonAbrirImportacionConfiguracionPunVenActionPerformed(evt);}catch(Exception e){e.printStackTrace();}
	              }
	          }
        );
	}
	*/
	
	
	public void jComboBoxTiposSeleccionarConfiguracionPunVenActionListener(ActionEvent evt) throws Exception {    		
		try {			
			Reporte reporte=(Reporte)this.jComboBoxTiposSeleccionarConfiguracionPunVen.getSelectedItem();
			
			//if(reporte.getsCodigo().equals("SELECCIONAR")) {
			//}					
		} catch(Exception e) {
			FuncionesSwing.manageException(this, e,logger,ConfiguracionPunVenConstantesFunciones.CLASSNAME);
		}
	}	
	
	
	
	public void seleccionarTodosConfiguracionPunVen(Boolean conSeleccionarTodos) throws Exception {    		
		try {
			if(Constantes.ISUSAEJBLOGICLAYER) {				
				for(ConfiguracionPunVen configuracionpunvenAux:this.configuracionpunvenLogic.getConfiguracionPunVens()) {
					configuracionpunvenAux.setIsSelected(conSeleccionarTodos);
				}			
			} else if(Constantes.ISUSAEJBREMOTE||Constantes.ISUSAEJBHOME) {
				for(ConfiguracionPunVen configuracionpunvenAux:configuracionpunvens) {
					configuracionpunvenAux.setIsSelected(conSeleccionarTodos);
				}
			}
		} catch(Exception e) {
			FuncionesSwing.manageException(this, e,logger,ConfiguracionPunVenConstantesFunciones.CLASSNAME);
		}
	}
	
	public void jCheckBoxSeleccionarTodosConfiguracionPunVenItemListener(ItemEvent evt) throws Exception {    		
		try {			
			this.inicializarActualizarBindingConfiguracionPunVen(false,false);
			
			//JCheckBox jCheckBox=(JCheckBox)evt.getSource();			
			//System.out.println("ok");		
			
			Boolean existe=false;
			
			if(sTipoSeleccionar.equals("COLUMNAS")) {
				existe=true;
				
				if(Constantes.ISUSAEJBLOGICLAYER) {				
					for(ConfiguracionPunVen configuracionpunvenAux:this.configuracionpunvenLogic.getConfiguracionPunVens()) {
						configuracionpunvenAux.setIsSelected(this.isSeleccionarTodos);
					}			
				} else if(Constantes.ISUSAEJBREMOTE||Constantes.ISUSAEJBHOME) {
					for(ConfiguracionPunVen configuracionpunvenAux:configuracionpunvens) {
						configuracionpunvenAux.setIsSelected(this.isSeleccionarTodos);
					}
				}
			} else {
				if(Constantes.ISUSAEJBLOGICLAYER) {
					for(ConfiguracionPunVen configuracionpunvenAux:this.configuracionpunvenLogic.getConfiguracionPunVens()) {
					
					}	
				} else if(Constantes.ISUSAEJBREMOTE||Constantes.ISUSAEJBHOME) {
					for(ConfiguracionPunVen configuracionpunvenAux:configuracionpunvens) {
						
					}
				}
			}
					
			if(existe) {
				this.inicializarActualizarBindingTablaConfiguracionPunVen(false);
			} else {
				JOptionPane.showMessageDialog(this,"NO SE HA SELECCIONADO ALGUNA COLUMNA VALIDA","SELECCIONAR",JOptionPane.ERROR_MESSAGE);
			}	
			
			//TableCellRenderer tableCellRenderer=null;			
			
			//TableCellEditor tableCellEditor=null;						
						
			//FUNCIONA CON MODEL PERO SE DANA MANTENIMIENTO
			/*
			for(int i = 0; i < this.jTableDatosConfiguracionPunVen.getRowCount(); i++) {				
				tableCellRenderer=this.jTableDatosSistema.getCellRenderer(i, 2);
				tableCellEditor=this.jTableDatosSistema.getCellEditor(i, 2);
				
				idSeleccionarTableCell=(IdSeleccionarTableCell)tableCellRenderer;				
				idSeleccionarTableCell.jCheckBoxId.setSelected(jCheckBox.isSelected());
				
				idSeleccionarTableCell=(IdSeleccionarTableCell)tableCellEditor;
				
				if(idSeleccionarTableCell.jCheckBoxId!=null) {
					idSeleccionarTableCell.jCheckBoxId.setSelected(jCheckBox.isSelected());
				}
				
				//System.out.println(idSeleccionarTableCell.valor);
				
				//this.jTableDatosConfiguracionPunVen.getModel().setValueAt(jCheckBox.isSelected(), i, Funciones2.getColumnIndexByName(this.jTableDatosConfiguracionPunVen,Constantes2.S_SELECCIONAR));
		    } 
			*/
					
		} catch(Exception e) {
			FuncionesSwing.manageException(this, e,logger,ConfiguracionPunVenConstantesFunciones.CLASSNAME);
		}
	}
	
	public void jCheckBoxSeleccionadosConfiguracionPunVenItemListener(ItemEvent evt) throws Exception {    		
		try {			
			this.inicializarActualizarBindingConfiguracionPunVen(false,false);
			
			//JCheckBox jCheckBox=(JCheckBox)evt.getSource();			
			//System.out.println("ok");		
			
			Boolean existe=false;
			int[] arrNumRowsSeleccionados=null;
			
			arrNumRowsSeleccionados=this.jTableDatosConfiguracionPunVen.getSelectedRows();
			
			ConfiguracionPunVen configuracionpunvenLocal=new ConfiguracionPunVen();
			
			//this.seleccionarTodosConfiguracionPunVen(false);
			
			for(Integer iNumRowSeleccionado:arrNumRowsSeleccionados) {
				existe=true;
				
				if(Constantes.ISUSAEJBLOGICLAYER) {
					configuracionpunvenLocal =(ConfiguracionPunVen) this.configuracionpunvenLogic.getConfiguracionPunVens().toArray()[this.jTableDatosConfiguracionPunVen.convertRowIndexToModel(iNumRowSeleccionado)];
				} else if(Constantes.ISUSAEJBREMOTE || Constantes.ISUSAEJBHOME) {
					configuracionpunvenLocal =(ConfiguracionPunVen) this.configuracionpunvens.toArray()[this.jTableDatosConfiguracionPunVen.convertRowIndexToModel(iNumRowSeleccionado)];
				}
				
				configuracionpunvenLocal.setIsSelected(this.isSeleccionados);
			}
			
			/*
			if(sTipoSeleccionar.equals("SELECCIONAR")) {
				existe=true;
				
				if(Constantes.ISUSAEJBLOGICLAYER) {				
					for(ConfiguracionPunVen configuracionpunvenAux:this.configuracionpunvenLogic.getConfiguracionPunVens()) {
						configuracionpunvenAux.setIsSelected(this.isSeleccionados);
					}			
				} else if(Constantes.ISUSAEJBREMOTE||Constantes.ISUSAEJBHOME) {
					for(ConfiguracionPunVen configuracionpunvenAux:configuracionpunvens) {
						configuracionpunvenAux.setIsSelected(this.isSeleccionados);
					}
				}
			}
			*/
			
			//if(existe) {
				this.inicializarActualizarBindingTablaConfiguracionPunVen(false);
			/*
			} else {
				JOptionPane.showMessageDialog(this,"NO SE HA SELECCIONADO ALGUNA COLUMNA VALIDA","SELECCIONAR",JOptionPane.ERROR_MESSAGE);
			}	
			*/
			
			
			//TableCellRenderer tableCellRenderer=null;			
			
			//TableCellEditor tableCellEditor=null;						
						
			//FUNCIONA CON MODEL PERO SE DANA MANTENIMIENTO
			/*
			for(int i = 0; i < this.jTableDatosConfiguracionPunVen.getRowCount(); i++) {				
				tableCellRenderer=this.jTableDatosSistema.getCellRenderer(i, 2);
				tableCellEditor=this.jTableDatosSistema.getCellEditor(i, 2);
				
				idSeleccionarTableCell=(IdSeleccionarTableCell)tableCellRenderer;				
				idSeleccionarTableCell.jCheckBoxId.setSelected(jCheckBox.isSelected());
				
				idSeleccionarTableCell=(IdSeleccionarTableCell)tableCellEditor;
				
				if(idSeleccionarTableCell.jCheckBoxId!=null) {
					idSeleccionarTableCell.jCheckBoxId.setSelected(jCheckBox.isSelected());
				}
				
				//System.out.println(idSeleccionarTableCell.valor);
				
				//this.jTableDatosConfiguracionPunVen.getModel().setValueAt(jCheckBox.isSelected(), i, Funciones2.getColumnIndexByName(this.jTableDatosConfiguracionPunVen,Constantes2.S_SELECCIONAR));
		    } 
			*/
					
		} catch(Exception e) {
			FuncionesSwing.manageException(this, e,logger,ConfiguracionPunVenConstantesFunciones.CLASSNAME);
		}
	}
	
	public void jCheckBoxSeleccionarActualConfiguracionPunVenItemListener(ItemEvent evt,Long idActual) throws Exception {    		
		try {
			
		} catch(Exception e) {
			FuncionesSwing.manageException(this, e,logger,ConfiguracionPunVenConstantesFunciones.CLASSNAME);
		}
	}
	
	public void ejecutarAuxiliarConfiguracionPunVenParaAjaxPostBack() throws Exception {    		
		try {
			
		} catch(Exception e) {
			FuncionesSwing.manageException(this, e,logger,ConfiguracionPunVenConstantesFunciones.CLASSNAME);
		}
	}
	
	public void jTextFieldValorCampoGeneralConfiguracionPunVenActionListener(ActionEvent evt) throws Exception {    		
		try {
			this.inicializarActualizarBindingConfiguracionPunVen(false,false);
			
			//System.out.println(this.jTextFieldValorCampoGeneralConfiguracionPunVen.getText());		
			
			Boolean existe=false;
			
			if(Constantes.ISUSAEJBLOGICLAYER) {
				for(ConfiguracionPunVen configuracionpunvenAux:this.configuracionpunvenLogic.getConfiguracionPunVens()) {
				
				}	
			} else if(Constantes.ISUSAEJBREMOTE||Constantes.ISUSAEJBHOME) {
				for(ConfiguracionPunVen configuracionpunvenAux:configuracionpunvens) {
					
				}
			}
								
			if(existe) {
				this.inicializarActualizarBindingTablaConfiguracionPunVen(false);
			} else {
				JOptionPane.showMessageDialog(this,"NO SE HA SELECCIONADO ALGUNA COLUMNA VALIDA","SELECCIONAR",JOptionPane.ERROR_MESSAGE);
			}			
		} catch(Exception e) {
			FuncionesSwing.manageException(this, e,logger,ConfiguracionPunVenConstantesFunciones.CLASSNAME);
		}
	}
	
	public void jComboBoxTiposAccionesConfiguracionPunVenActionListener(ActionEvent evt,Boolean esParaAccionDesdeFormulario) throws Exception {    				
		Boolean conSplash=true;
		
		try {							
		
			this.inicializarActualizarBindingConfiguracionPunVen(false,false);
			
			Reporte reporte=new Reporte();
			
			this.esParaAccionDesdeFormularioConfiguracionPunVen=esParaAccionDesdeFormulario;
			
			if(!esParaAccionDesdeFormulario) {
				
				reporte=(Reporte)this.jComboBoxTiposAccionesConfiguracionPunVen.getSelectedItem();
				
			} else {
				reporte=(Reporte)this.jInternalFrameDetalleFormConfiguracionPunVen.jComboBoxTiposAccionesFormularioConfiguracionPunVen.getSelectedItem();
			}
			String sTipoAccionLocal=this.sTipoAccion;
			
			if(!esParaAccionDesdeFormulario) {
				sTipoAccionLocal=this.sTipoAccion;
			} else {
				sTipoAccionLocal=this.sTipoAccionFormulario;
			}
			
			if(sTipoAccionLocal.equals("GENERAR REPORTE")) {//reporte.getsCodigo().equals("GENERAR REPORTE")) {
				if(this.isPermisoReporteConfiguracionPunVen) {				
					conSplash=true;//false;										
					
					//this.startProcessConfiguracionPunVen(conSplash);
				
					this.generarReporteConfiguracionPunVensSeleccionados();
				} else {
					JOptionPane.showMessageDialog(this,"NO TIENE PERMISO PARA GENERAR REPORTES","REPORTE",JOptionPane.ERROR_MESSAGE);					
				}
				if(!esParaAccionDesdeFormulario) {
					
					this.jComboBoxTiposAccionesConfiguracionPunVen.setSelectedIndex(0);					
					
				} else {
					this.jInternalFrameDetalleFormConfiguracionPunVen.jComboBoxTiposAccionesFormularioConfiguracionPunVen.setSelectedIndex(0);					
				}
			} else if(sTipoAccionLocal.equals("GENERAR REPORTE DINAMICO")) {//reporte.getsCodigo().equals("GENERAR_REPORTE_GROUP_GENERICO")) {
				//SE GENERA REPORTE SEGUN TIPO REPORTE SELECCIONADO
				//this.mostrarReporteDinamicoConfiguracionPunVensSeleccionados();
				//this.jComboBoxTiposAccionesConfiguracionPunVen.setSelectedIndex(0);					
			}  else if(sTipoAccionLocal.equals("GENERAR_REPORTE_GROUP_GENERICO")) {//reporte.getsCodigo().equals("GENERAR_REPORTE_GROUP_GENERICO")) {
				//SE GENERA REPORTE SEGUN TIPO REPORTE SELECCIONADO
				//this.generarReporteGroupGenericoConfiguracionPunVensSeleccionados(false);
				//this.jComboBoxTiposAccionesConfiguracionPunVen.setSelectedIndex(0);					
			} else if(sTipoAccionLocal.equals("GENERAR_REPORTE_TOTALES_GROUP_GENERICO")) {//reporte.getsCodigo().equals("GENERAR_REPORTE_GROUP_GENERICO")) {
				//SE GENERA REPORTE SEGUN TIPO REPORTE SELECCIONADO
				//this.generarReporteGroupGenericoConfiguracionPunVensSeleccionados(true);
				//this.jComboBoxTiposAccionesConfiguracionPunVen.setSelectedIndex(0);					
			} else if(sTipoAccionLocal.equals("EXPORTAR_DATOS")) {//reporte.getsCodigo().equals("GENERAR_REPORTE_GROUP_GENERICO")) {
				//this.startProcessConfiguracionPunVen();
				
				this.exportarConfiguracionPunVensSeleccionados();
				if(!esParaAccionDesdeFormulario) {
					
					this.jComboBoxTiposAccionesConfiguracionPunVen.setSelectedIndex(0);					
					
				} else {
					this.jInternalFrameDetalleFormConfiguracionPunVen.jComboBoxTiposAccionesFormularioConfiguracionPunVen.setSelectedIndex(0);					
				}					
			} else if(sTipoAccionLocal.equals("IMPORTAR_DATOS")) {//reporte.getsCodigo().equals("GENERAR_REPORTE_GROUP_GENERICO")) {
				this.mostrarImportacionConfiguracionPunVens();
				//this.importarConfiguracionPunVens();
				if(!esParaAccionDesdeFormulario) {
					
					this.jComboBoxTiposAccionesConfiguracionPunVen.setSelectedIndex(0);					
					
				} else {
					this.jInternalFrameDetalleFormConfiguracionPunVen.jComboBoxTiposAccionesFormularioConfiguracionPunVen.setSelectedIndex(0);					
				}					
			} else if(sTipoAccionLocal.equals("EXPORTAR_DATOS_EXCEL")) {//reporte.getsCodigo().equals("GENERAR_REPORTE_GROUP_GENERICO")) {
				//this.startProcessConfiguracionPunVen();
				//SE EXPORTA SEGUN TIPO ARCHIVO SELECCIONADO
				//this.exportarExcelConfiguracionPunVensSeleccionados();
				//this.jComboBoxTiposAccionesConfiguracionPunVen.setSelectedIndex(0);					
			}  else if(sTipoAccionLocal.equals("RECARGAR_FK")) {//reporte.getsCodigo().equals("GENERAR_REPORTE_GROUP_GENERICO")) {								
				if(JOptionPane.showConfirmDialog(this, "ESTA SEGURO DE RECARGAR REFERENCIAS ?", "MANTENIMIENTO DE Configuracion Pun Ven", JOptionPane.OK_CANCEL_OPTION) == 0) {
				
				//this.startProcessConfiguracionPunVen();
				
					if(!esParaAccionDesdeFormulario || (esParaAccionDesdeFormulario && this.isEsNuevoConfiguracionPunVen)) {
						this.esRecargarFks=true;
						this.cargarCombosForeignKeyConfiguracionPunVen(false,false,false);
						this.esRecargarFks=false;
						
						JOptionPane.showMessageDialog(this,"PROCESO EJECUTADO CORRECTAMENTE","MANTENIMIENTO DE Configuracion Pun Ven",JOptionPane.INFORMATION_MESSAGE);
					} else {
						JOptionPane.showMessageDialog(this,"ESTE PROCESO SOLO FUNCIONA AL INGRESAR UN NUEVO ELEMENTO","MANTENIMIENTO",JOptionPane.ERROR_MESSAGE);	
					}
					
					
				}
				
				if(!esParaAccionDesdeFormulario) {
					
					this.jComboBoxTiposAccionesConfiguracionPunVen.setSelectedIndex(0);					
					
				} else {
					this.jInternalFrameDetalleFormConfiguracionPunVen.jComboBoxTiposAccionesFormularioConfiguracionPunVen.setSelectedIndex(0);					
				}	
			} 			
			else if(ConfiguracionPunVenBeanSwingJInternalFrame.EsProcesoReporte(reporte.getsCodigo())){
				if(this.isPermisoReporteConfiguracionPunVen) {				
					if(this.tieneElementosSeleccionados()) {
						this.quitarFilaTotales();
						
						conSplash=false;
						
						//this.startProcessConfiguracionPunVen(conSplash);
					
						//this.actualizarParametrosGeneralConfiguracionPunVen();
						
						this.generarReporteProcesoAccionConfiguracionPunVensSeleccionados(reporte.getsCodigo());
						
						if(!esParaAccionDesdeFormulario) {
							
							this.jComboBoxTiposAccionesConfiguracionPunVen.setSelectedIndex(0);					
							
						} else {
							this.jInternalFrameDetalleFormConfiguracionPunVen.jComboBoxTiposAccionesFormularioConfiguracionPunVen.setSelectedIndex(0);					
						}
					} else {
						JOptionPane.showMessageDialog(this,"NO SE HA SELECCIONADO ALGUN ELEMENTO","SELECCIONAR",JOptionPane.ERROR_MESSAGE);
					}
				} else {
					JOptionPane.showMessageDialog(this,"NO TIENE PERMISO PARA GENERAR REPORTES","REPORTE",JOptionPane.ERROR_MESSAGE);					
				}
			} 
			else if(ConfiguracionPunVenBeanSwingJInternalFrameAdditional.EsProcesoAccionNormal(reporte.getsCodigo())){
				if(this.tieneElementosSeleccionados()) {
					this.quitarFilaTotales();
					
					if(JOptionPane.showConfirmDialog(this, "ESTA SEGURO DE PROCESAR "+reporte.getsDescripcion()+" EN PROCESO Configuracion Pun VenES SELECCIONADOS?", "MANTENIMIENTO DE Configuracion Pun Ven", JOptionPane.OK_CANCEL_OPTION) == 0) {
						//this.startProcessConfiguracionPunVen();
				
						this.actualizarParametrosGeneralConfiguracionPunVen();
						
						//ARCHITECTURE
						if(Constantes.ISUSAEJBLOGICLAYER) {						
							this.configuracionpunvenReturnGeneral=configuracionpunvenLogic.procesarAccionConfiguracionPunVensWithConnection(this.parametroGeneralUsuario,this.moduloActual,this.opcionActual,this.usuarioActual,sTipoAccionLocal,this.configuracionpunvenLogic.getConfiguracionPunVens(),this.configuracionpunvenParameterGeneral);
						
						} else if(Constantes.ISUSAEJBREMOTE) {
						
						} else if(Constantes.ISUSAEJBHOME) {
						}
						//ARCHITECTURE
						
						this.procesarConfiguracionPunVenReturnGeneral();
					
					if(!esParaAccionDesdeFormulario) {
						
						this.jComboBoxTiposAccionesConfiguracionPunVen.setSelectedIndex(0);					
						
					} else {
						this.jInternalFrameDetalleFormConfiguracionPunVen.jComboBoxTiposAccionesFormularioConfiguracionPunVen.setSelectedIndex(0);					
					}
					}
				} else {
					JOptionPane.showMessageDialog(this,"NO SE HA SELECCIONADO ALGUN ELEMENTO","SELECCIONAR",JOptionPane.ERROR_MESSAGE);
				}				
			} 
			else {
				if(this.tieneElementosSeleccionados()) {
					this.quitarFilaTotales();
					
					this.actualizarParametrosGeneralConfiguracionPunVen();
					
					ConfiguracionPunVenBeanSwingJInternalFrameAdditional.ProcesarAccion(reporte.getsCodigo(),reporte.getsDescripcion(),this);
					
					this.procesarConfiguracionPunVenReturnGeneral();
					
					if(!esParaAccionDesdeFormulario) {
						
						this.jComboBoxTiposAccionesConfiguracionPunVen.setSelectedIndex(0);					
						
					} else {
						this.jInternalFrameDetalleFormConfiguracionPunVen.jComboBoxTiposAccionesFormularioConfiguracionPunVen.setSelectedIndex(0);					
					}
				} else {
					JOptionPane.showMessageDialog(this,"NO SE HA SELECCIONADO ALGUN ELEMENTO","SELECCIONAR",JOptionPane.ERROR_MESSAGE);
				}
			}
		} catch(Exception e) {
			this.esRecargarFks=false;
			
			FuncionesSwing.manageException(this, e,logger,ConfiguracionPunVenConstantesFunciones.CLASSNAME);
		
		}  finally {
      		//this.finishProcessConfiguracionPunVen(conSplash);
      	}
	}
	
	public void jComboBoxTiposRelacionesConfiguracionPunVenActionListener(ActionEvent evt) throws Exception {    				
		Boolean conSplash=true;
		
		try {			
			this.startProcessConfiguracionPunVen();
			
			if(this.jInternalFrameDetalleFormConfiguracionPunVen==null) { //if(!this.conCargarFormDetalle) {			
				this.inicializarFormDetalle();
			}
			
			ArrayList<ConfiguracionPunVen> configuracionpunvensSeleccionados=new ArrayList<ConfiguracionPunVen>();		
			ConfiguracionPunVen configuracionpunven=new ConfiguracionPunVen();
			
			int rowIndex=-1;//CON ESTO SE DESHABILITA SELECCION POR INDICE
			
			this.inicializarActualizarBindingConfiguracionPunVen(false,false);
			
			Reporte reporte=new Reporte();
			
			
			reporte=(Reporte)this.jComboBoxTiposRelacionesConfiguracionPunVen.getSelectedItem();
			
			
			
			
			configuracionpunvensSeleccionados=this.getConfiguracionPunVensSeleccionados(true);
			//this.sTipoAccion;
			
			if(configuracionpunvensSeleccionados.size()==1) {
				for(ConfiguracionPunVen configuracionpunvenAux:configuracionpunvensSeleccionados) {
					configuracionpunven=configuracionpunvenAux;
				}
				
				if(this.sTipoAccion.equals("NONE")) {
				
				}
				
			} else {
				JOptionPane.showMessageDialog(this,"SELECCIONE SOLO UN REGISTRO","RELACIONES",JOptionPane.ERROR_MESSAGE);
			}
			
		} catch(Exception e) {
			FuncionesSwing.manageException(this, e,logger,ConfiguracionPunVenConstantesFunciones.CLASSNAME);
		
		}  finally {
			this.finishProcessConfiguracionPunVen();
			
      		//this.finishProcessConfiguracionPunVen(conSplash);
      	}
	}
			
	public static Boolean EsProcesoReporte(String sTipoProceso) throws Exception {
		Boolean esProcesoAccionRepoorte=false;

		if(sTipoProceso.contains("REPORTE_")) {
			 esProcesoAccionRepoorte=true;
		}

		return esProcesoAccionRepoorte;
	}
	
	public void procesarConfiguracionPunVenReturnGeneral() throws Exception {
		if(this.configuracionpunvenReturnGeneral.getConRetornoEstaProcesado()) {
			JOptionPane.showMessageDialog(this,this.configuracionpunvenReturnGeneral.getsMensajeProceso(),"PROCESO",JOptionPane.INFORMATION_MESSAGE);
		}
		
		if(this.configuracionpunvenReturnGeneral.getConMostrarMensaje()) {
			JOptionPane.showMessageDialog(this,this.configuracionpunvenReturnGeneral.getsMensajeProceso(),"PROCESO",FuncionesSwing.getColorSelectedBackground(this.configuracionpunvenReturnGeneral.getsTipoMensaje()));
		}
		
		if(this.configuracionpunvenReturnGeneral.getConRecargarInformacion()) {
			this.procesarBusqueda(this.sAccionBusqueda);
			
			this.inicializarActualizarBindingConfiguracionPunVen(false);
		}
		
		if(this.configuracionpunvenReturnGeneral.getConRetornoLista() || this.configuracionpunvenReturnGeneral.getConRetornoObjeto()) {
			if(this.configuracionpunvenReturnGeneral.getConRetornoLista()) {
				//ARCHITECTURE
				if(Constantes.ISUSAEJBLOGICLAYER) {	
					this.configuracionpunvenLogic.setConfiguracionPunVens(this.configuracionpunvenReturnGeneral.getConfiguracionPunVens());
				} else if(Constantes.ISUSAEJBREMOTE) {
				} else if(Constantes.ISUSAEJBHOME) {
				}
				//ARCHITECTURE
			}
			
			if(this.configuracionpunvenReturnGeneral.getConRetornoObjeto()) {
				//ARCHITECTURE
				if(Constantes.ISUSAEJBLOGICLAYER) {	
					this.configuracionpunvenLogic.setConfiguracionPunVen(this.configuracionpunvenReturnGeneral.getConfiguracionPunVen());
				} else if(Constantes.ISUSAEJBREMOTE) {
				} else if(Constantes.ISUSAEJBHOME) {
				}
				//ARCHITECTURE
			}
			
			this.inicializarActualizarBindingConfiguracionPunVen(false);
		}
	}
	
	public void actualizarParametrosGeneralConfiguracionPunVen() throws Exception {
		
		
	}
	
	public ArrayList<ConfiguracionPunVen> getConfiguracionPunVensSeleccionados(Boolean conSeleccionarTodosAutomatico) throws Exception {
		ArrayList<ConfiguracionPunVen> configuracionpunvensSeleccionados=new ArrayList<ConfiguracionPunVen>();
		Boolean existe=false;
		
		if(!this.esParaAccionDesdeFormularioConfiguracionPunVen) {
			if(Constantes.ISUSAEJBLOGICLAYER) {	
				
				for(ConfiguracionPunVen configuracionpunvenAux:configuracionpunvenLogic.getConfiguracionPunVens()) {
					if(configuracionpunvenAux.getIsSelected()) {
						configuracionpunvensSeleccionados.add(configuracionpunvenAux);				
					}
				}
				
			} else if(Constantes.ISUSAEJBREMOTE||Constantes.ISUSAEJBHOME) {
				for(ConfiguracionPunVen configuracionpunvenAux:this.configuracionpunvens) {
					if(configuracionpunvenAux.getIsSelected()) {
						configuracionpunvensSeleccionados.add(configuracionpunvenAux);				
					}
				}
			}
			
			if(configuracionpunvensSeleccionados.size()>0) {
				existe=true;
			}
			
			//SI NO ESTA NINGUNO SELECCIONADO SE SELECCIONA TODOS
			if(!existe) {
				if(conSeleccionarTodosAutomatico) {
					if(Constantes.ISUSAEJBLOGICLAYER) {				
						configuracionpunvensSeleccionados.addAll(this.configuracionpunvenLogic.getConfiguracionPunVens());
					} else if(Constantes.ISUSAEJBREMOTE||Constantes.ISUSAEJBHOME) {
						configuracionpunvensSeleccionados.addAll(this.configuracionpunvens);				
					}
				}
			}
		} else {
			configuracionpunvensSeleccionados.add(this.configuracionpunven);
		}
		
		return configuracionpunvensSeleccionados;
	}
	
	public void actualizarVariablesTipoReporte(Boolean esReporteNormal,Boolean esReporteDinamico,Boolean esReporteAccionProceso,String sPath) {
		if(esReporteNormal) {
			this.sTipoReporteExtra="";
			this.esReporteDinamico=false;
			this.sPathReporteDinamico="";
			this.esReporteAccionProceso=false;
			
		} else if(esReporteAccionProceso) {
			this.sTipoReporteExtra="";
			this.esReporteDinamico=false;
			this.sPathReporteDinamico="";
			this.esReporteAccionProceso=true;
			
		} else if(esReporteDinamico) {
			this.sTipoReporteExtra="";
			this.esReporteDinamico=true;
			this.esReporteAccionProceso=false;
			this.sPathReporteDinamico=sPath.replace(".jrxml",".jasper");			
		}
	}
	
	public void generarReporteConfiguracionPunVensSeleccionados() throws Exception {
		Boolean existe=false;
		
		if(this.sTipoReporte.equals("NORMAL") || this.sTipoReporte.equals("FORMULARIO")) {
			existe=true;								
			this.generarReporteNormalConfiguracionPunVensSeleccionados();
			
		} else if(this.sTipoReporte.equals("DINAMICO")) {
			existe=true;
			this.mostrarReporteDinamicoConfiguracionPunVensSeleccionados();
			
		} else if(this.sTipoReporte.equals("GRUPO_GENERICO")) {
			existe=true;
			this.generarReporteGroupGenericoConfiguracionPunVensSeleccionados(false);
			
		} else if(this.sTipoReporte.equals("TOTALES_GRUPO_GENERICO")) {
			existe=true;
			this.generarReporteGroupGenericoConfiguracionPunVensSeleccionados(true);
		}
		
		if(!existe) {
			JOptionPane.showMessageDialog(this,"SELECCIONE UN TIPO DE REPORTE VALIDO","REPORTE DE Configuracion Pun Ven",JOptionPane.ERROR_MESSAGE);
		}
	}
	
	public void generarReporteRelacionesConfiguracionPunVensSeleccionados() throws Exception {
		ArrayList<ConfiguracionPunVen> configuracionpunvensSeleccionados=new ArrayList<ConfiguracionPunVen>();		
		
		configuracionpunvensSeleccionados=this.getConfiguracionPunVensSeleccionados(true);
		
		this.actualizarVariablesTipoReporte(true,false,false,"");
					
		//this.sTipoReporteExtra="MasterRelaciones";
		
		/*
		this.sTipoReporteExtra="";
		this.esReporteDinamico=false;
		this.sPathReporteDinamico="";
		*/
		
		
		this.generarReporteConfiguracionPunVens("Todos",configuracionpunvensSeleccionados);
		
	}	
	
	public void generarReporteNormalConfiguracionPunVensSeleccionados() throws Exception {
		ArrayList<ConfiguracionPunVen> configuracionpunvensSeleccionados=new ArrayList<ConfiguracionPunVen>();		
		
		configuracionpunvensSeleccionados=this.getConfiguracionPunVensSeleccionados(true);
		
		this.actualizarVariablesTipoReporte(true,false,false,"");
								
		if(this.sTipoReporte.equals("FORMULARIO")) {
			this.sTipoReporteExtra="Vertical";					
		}
		
		/*
		this.sTipoReporteExtra="";
		this.esReporteDinamico=false;
		this.sPathReporteDinamico="";
		*/
		
		this.generarReporteConfiguracionPunVens("Todos",configuracionpunvensSeleccionados);
	}		
	
	public void generarReporteProcesoAccionConfiguracionPunVensSeleccionados(String sProcesoReporte) throws Exception {
		ArrayList<ConfiguracionPunVen> configuracionpunvensSeleccionados=new ArrayList<ConfiguracionPunVen>();
		
		configuracionpunvensSeleccionados=this.getConfiguracionPunVensSeleccionados(true);
		
		this.actualizarVariablesTipoReporte(false,false,true,"");
		
		/*
		this.esReporteDinamico=false;
		this.sPathReporteDinamico="";
		*/
		
		this.sTipoReporteExtra=sProcesoReporte.toLowerCase();
		
		this.esReporteAccionProceso=true;
		this.generarReporteConfiguracionPunVens("Todos",configuracionpunvensSeleccionados);
		this.esReporteAccionProceso=false;
	}
	
	
	public void mostrarReporteDinamicoConfiguracionPunVensSeleccionados() throws Exception {
		ArrayList<ConfiguracionPunVen> configuracionpunvensSeleccionados=new ArrayList<ConfiguracionPunVen>();		
		
		
		this.abrirInicializarFrameReporteDinamicoConfiguracionPunVen();
		
		
		configuracionpunvensSeleccionados=this.getConfiguracionPunVensSeleccionados(true);
		
		this.sTipoReporteExtra="";
		//this.actualizarVariablesTipoReporte(true,false,false,"");
		
		
		this.abrirFrameReporteDinamicoConfiguracionPunVen();
		
		
		//this.generarReporteConfiguracionPunVens("Todos",configuracionpunvensSeleccionados ,configuracionpunvenImplementable,configuracionpunvenImplementableHome);
	}
	
	public void mostrarImportacionConfiguracionPunVens() throws Exception {
		//this.sTipoReporteExtra="";
		//this.actualizarVariablesTipoReporte(true,false,false,"");
		
		
		this.abrirInicializarFrameImportacionConfiguracionPunVen();
		
		this.abrirFrameImportacionConfiguracionPunVen();		
		
			
		//this.generarReporteConfiguracionPunVens("Todos",configuracionpunvensSeleccionados ,configuracionpunvenImplementable,configuracionpunvenImplementableHome);
	}
	
	public void importarConfiguracionPunVens() throws Exception {		
	
	}
	
	public void exportarConfiguracionPunVensSeleccionados() throws Exception {
		Boolean existe=false;
		
		if(this.sTipoArchivoReporte.equals("EXCEL")) {
			existe=true;
			this.exportarExcelConfiguracionPunVensSeleccionados();
			
		} else if(this.sTipoArchivoReporte.equals("TEXTO")) {
			existe=true;
			this.exportarTextoConfiguracionPunVensSeleccionados();
		
		} else if(this.sTipoArchivoReporte.equals("XML")) {
			existe=true;
			this.exportarXmlConfiguracionPunVensSeleccionados();
		} 
		
		if(!existe) {
			JOptionPane.showMessageDialog(this,"SELECCIONE UN TIPO DE ARCHIVO VALIDO","EXPORTACION DE Configuracion Pun Ven",JOptionPane.ERROR_MESSAGE);
		}
	}
	
	public void exportarTextoConfiguracionPunVensSeleccionados() throws Exception {
		ArrayList<ConfiguracionPunVen> configuracionpunvensSeleccionados=new ArrayList<ConfiguracionPunVen>();		
		
		configuracionpunvensSeleccionados=this.getConfiguracionPunVensSeleccionados(true);
		
		String sTipo=Funciones2.getTipoExportar(this.parametroGeneralUsuario);
		Boolean conCabecera=this.parametroGeneralUsuario.getcon_exportar_cabecera();
		String sDelimiter=Funciones2.getTipoDelimiter(this.parametroGeneralUsuario);
		String sPath=this.parametroGeneralUsuario.getpath_exportar()+"configuracionpunven."+"txt";//Funciones2.getTipoExtensionArchivoExportar(this.parametroGeneralUsuario);
		
		String sFilaCabecera="";
		String sFilaDatos="";
		
		BufferedWriter bufferedWriter = null;
		FileWriter fileWriter=null;
		
		fileWriter=new FileWriter(sPath);
		
		bufferedWriter = new BufferedWriter(fileWriter);
		
		try {
			if(conCabecera) {
				sFilaCabecera=this.getFilaCabeceraExportarConfiguracionPunVen(sDelimiter);
				
				bufferedWriter.write(sFilaCabecera);
			}				
			
			for(ConfiguracionPunVen configuracionpunvenAux:configuracionpunvensSeleccionados) {
				sFilaDatos=this.getFilaDatosExportarConfiguracionPunVen(configuracionpunvenAux,sDelimiter);
				
				bufferedWriter.write(sFilaDatos);
				
				//configuracionpunvenAux.setsDetalleGeneralEntityReporte(configuracionpunvenAux.toString());			
			}
			
			bufferedWriter.close();
			
			Constantes2.S_PATH_ULTIMO_ARCHIVO=sPath;
			
			if(this.parametroGeneralUsuario.getcon_mensaje_confirmacion() && !this.configuracionpunvenSessionBean.getEsGuardarRelacionado()) {//Constantes.ISMOSTRARMENSAJESMANTENIMIENTO && 
				JOptionPane.showMessageDialog(this,"EXPORTADO CORRECTAMENTE:"+sPath,"MANTENIMIENTO DE Configuracion Pun Ven",JOptionPane.INFORMATION_MESSAGE);
			}
		} catch (Exception e) {
			throw e;
			
		} finally {
       		if (bufferedWriter != null) {
				bufferedWriter.close();
			}
		}
	}
	
	public String getFilaCabeceraExportarConfiguracionPunVen(String sDelimiter) {
		String sFilaCabecera="";
		
		
		sFilaCabecera+=ConfiguracionPunVenConstantesFunciones.LABEL_ID;

		if(parametroGeneralUsuario.getcon_exportar_campo_version()){
			sFilaCabecera+=sDelimiter;
		sFilaCabecera+=ConfiguracionPunVenConstantesFunciones.LABEL_VERSIONROW;
		}

		sFilaCabecera+=sDelimiter;
		sFilaCabecera+=ConfiguracionPunVenConstantesFunciones.LABEL_IDEMPRESA;
		sFilaCabecera+=sDelimiter;
		sFilaCabecera+=ConfiguracionPunVenConstantesFunciones.LABEL_IDSUCURSAL;
		sFilaCabecera+=sDelimiter;
		sFilaCabecera+=ConfiguracionPunVenConstantesFunciones.LABEL_IDBODEGA;
		sFilaCabecera+=sDelimiter;
		sFilaCabecera+=ConfiguracionPunVenConstantesFunciones.LABEL_IDCUENTACONTABLEEFECTIVO;
		sFilaCabecera+=sDelimiter;
		sFilaCabecera+=ConfiguracionPunVenConstantesFunciones.LABEL_IDCUENTACONTABLEICE;
		sFilaCabecera+=sDelimiter;
		sFilaCabecera+=ConfiguracionPunVenConstantesFunciones.LABEL_IDCUENTACONTABLEOTROS;
		sFilaCabecera+=sDelimiter;
		sFilaCabecera+=ConfiguracionPunVenConstantesFunciones.LABEL_IDCLIENTECONSUMIDORFINAL;
		sFilaCabecera+=sDelimiter;
		sFilaCabecera+=ConfiguracionPunVenConstantesFunciones.LABEL_IDTIPODOCUMENTOFACTURA;
		sFilaCabecera+=sDelimiter;
		sFilaCabecera+=ConfiguracionPunVenConstantesFunciones.LABEL_IDTIPODOCUMENTONOTAVENTA;
		sFilaCabecera+=sDelimiter;
		sFilaCabecera+=ConfiguracionPunVenConstantesFunciones.LABEL_IDTIPODOCUMENTONOTACREDITO;
		sFilaCabecera+=sDelimiter;
		sFilaCabecera+=ConfiguracionPunVenConstantesFunciones.LABEL_IDTIPODOCUMENTOTARJETACREDITO;
		sFilaCabecera+=sDelimiter;
		sFilaCabecera+=ConfiguracionPunVenConstantesFunciones.LABEL_IDFORMATOFACTURA;
		sFilaCabecera+=sDelimiter;
		sFilaCabecera+=ConfiguracionPunVenConstantesFunciones.LABEL_IDFORMATONOTAVENTA;
		sFilaCabecera+=sDelimiter;
		sFilaCabecera+=ConfiguracionPunVenConstantesFunciones.LABEL_IDFORMATONOTACREDITO;
		sFilaCabecera+=sDelimiter;
		sFilaCabecera+=ConfiguracionPunVenConstantesFunciones.LABEL_IDTRANSACCIONFACTURA;
		sFilaCabecera+=sDelimiter;
		sFilaCabecera+=ConfiguracionPunVenConstantesFunciones.LABEL_IDTRANSACCIONNOTAVENTA;
		sFilaCabecera+=sDelimiter;
		sFilaCabecera+=ConfiguracionPunVenConstantesFunciones.LABEL_IDTRANSACCIONNOTACREDITO;
		sFilaCabecera+=sDelimiter;
		sFilaCabecera+=ConfiguracionPunVenConstantesFunciones.LABEL_IDTRANSACCIONCUENTAFACTURA;
		sFilaCabecera+=sDelimiter;
		sFilaCabecera+=ConfiguracionPunVenConstantesFunciones.LABEL_IDTRANSACCIONCUENTANOTAVENTA;
		sFilaCabecera+=sDelimiter;
		sFilaCabecera+=ConfiguracionPunVenConstantesFunciones.LABEL_IDTRANSACCIONCUENTANOTACREDITO;
		
		return sFilaCabecera;
	}
	
	public String getFilaDatosExportarConfiguracionPunVen(ConfiguracionPunVen configuracionpunven,String sDelimiter) {
		String sFilaDatos="";
		
		sFilaDatos+="\r\n";
		
		
		sFilaDatos+=configuracionpunven.getId().toString();

		if(parametroGeneralUsuario.getcon_exportar_campo_version()){
			sFilaDatos+=sDelimiter;
		sFilaDatos+=configuracionpunven.getVersionRow().toString();
		}

		sFilaDatos+=sDelimiter;
		sFilaDatos+=configuracionpunven.getempresa_descripcion();
		sFilaDatos+=sDelimiter;
		sFilaDatos+=configuracionpunven.getsucursal_descripcion();
		sFilaDatos+=sDelimiter;
		sFilaDatos+=configuracionpunven.getbodega_descripcion();
		sFilaDatos+=sDelimiter;
		sFilaDatos+=configuracionpunven.getcuentacontableefectivo_descripcion();
		sFilaDatos+=sDelimiter;
		sFilaDatos+=configuracionpunven.getcuentacontableice_descripcion();
		sFilaDatos+=sDelimiter;
		sFilaDatos+=configuracionpunven.getcuentacontableotros_descripcion();
		sFilaDatos+=sDelimiter;
		sFilaDatos+=configuracionpunven.getclienteconsumidorfinal_descripcion();
		sFilaDatos+=sDelimiter;
		sFilaDatos+=configuracionpunven.gettipodocumentofactura_descripcion();
		sFilaDatos+=sDelimiter;
		sFilaDatos+=configuracionpunven.gettipodocumentonotaventa_descripcion();
		sFilaDatos+=sDelimiter;
		sFilaDatos+=configuracionpunven.gettipodocumentonotacredito_descripcion();
		sFilaDatos+=sDelimiter;
		sFilaDatos+=configuracionpunven.gettipodocumentotarjetacredito_descripcion();
		sFilaDatos+=sDelimiter;
		sFilaDatos+=configuracionpunven.getformatofactura_descripcion();
		sFilaDatos+=sDelimiter;
		sFilaDatos+=configuracionpunven.getformatonotaventa_descripcion();
		sFilaDatos+=sDelimiter;
		sFilaDatos+=configuracionpunven.getformatonotacredito_descripcion();
		sFilaDatos+=sDelimiter;
		sFilaDatos+=configuracionpunven.gettransaccionfactura_descripcion();
		sFilaDatos+=sDelimiter;
		sFilaDatos+=configuracionpunven.gettransaccionnotaventa_descripcion();
		sFilaDatos+=sDelimiter;
		sFilaDatos+=configuracionpunven.gettransaccionnotacredito_descripcion();
		sFilaDatos+=sDelimiter;
		sFilaDatos+=configuracionpunven.gettransaccioncuentafactura_descripcion();
		sFilaDatos+=sDelimiter;
		sFilaDatos+=configuracionpunven.gettransaccioncuentanotaventa_descripcion();
		sFilaDatos+=sDelimiter;
		sFilaDatos+=configuracionpunven.gettransaccioncuentanotacredito_descripcion();
		
		return sFilaDatos;
	}
	
	//@SuppressWarnings("deprecation")
	public void exportarExcelConfiguracionPunVensSeleccionados() throws Exception {
		ArrayList<ConfiguracionPunVen> configuracionpunvensSeleccionados=new ArrayList<ConfiguracionPunVen>();		
		
		configuracionpunvensSeleccionados=this.getConfiguracionPunVensSeleccionados(true);
		
		String sTipo=Funciones2.getTipoExportar(this.parametroGeneralUsuario);
		Boolean conCabecera=this.parametroGeneralUsuario.getcon_exportar_cabecera();
		String sDelimiter=Funciones2.getTipoDelimiter(this.parametroGeneralUsuario);
		String sPath=this.parametroGeneralUsuario.getpath_exportar()+"configuracionpunven.xls";
		
		String sFilaCabecera="";
		String sFilaDatos="";
		
		FileOutputStream fileOutputStream=null;
		
		try {
			HSSFWorkbook workbook = new HSSFWorkbook();
			HSSFSheet sheet = workbook.createSheet("ConfiguracionPunVens");
						
		    			
			Integer iRow=0;
			Integer iCell=0;
			
			HSSFRow row = sheet.createRow(iRow);
			HSSFCell cell = row.createCell(iCell);
			//cell.setCellValue("Blahblah");

			if(conCabecera) {
				this.getFilaCabeceraExportarExcelConfiguracionPunVen(row);				
				iRow++;
			}				
			
			for(ConfiguracionPunVen configuracionpunvenAux:configuracionpunvensSeleccionados) {
				row = sheet.createRow(iRow);
				
				this.getFilaDatosExportarExcelConfiguracionPunVen(configuracionpunvenAux,row);
				
				iRow++;
			}
			
			
			fileOutputStream = new FileOutputStream(new File(sPath));
		    
			workbook.write(fileOutputStream);
			
			//fileOutputStream.close();
			
			Constantes2.S_PATH_ULTIMO_ARCHIVO=sPath;
			
			if(this.parametroGeneralUsuario.getcon_mensaje_confirmacion() && !this.configuracionpunvenSessionBean.getEsGuardarRelacionado()) {//Constantes.ISMOSTRARMENSAJESMANTENIMIENTO && 
				JOptionPane.showMessageDialog(this,"EXPORTADO CORRECTAMENTE:"+sPath,"MANTENIMIENTO DE Configuracion Pun Ven",JOptionPane.INFORMATION_MESSAGE);
			}
		} catch (Exception e) {
			throw e;
			
		} finally {			
       		if (fileOutputStream != null) {
				fileOutputStream.close();
			}			
		}
	}		
	
	public void exportarXmlConfiguracionPunVensSeleccionados() throws Exception {
		ArrayList<ConfiguracionPunVen> configuracionpunvensSeleccionados=new ArrayList<ConfiguracionPunVen>();		
		
		configuracionpunvensSeleccionados=this.getConfiguracionPunVensSeleccionados(true);
		
		//String sTipo=Funciones2.getTipoExportar(this.parametroGeneralUsuario);
		//Boolean conCabecera=this.parametroGeneralUsuario.getcon_exportar_cabecera();
		//String sDelimiter=Funciones2.getTipoDelimiter(this.parametroGeneralUsuario);
		String sPath=this.parametroGeneralUsuario.getpath_exportar()+"configuracionpunven.xml";
		
		String sFilaCabecera="";
		String sFilaDatos="";
		
		DocumentBuilderFactory documentBuilderFactory=null;
		DocumentBuilder documentBuilder =null;
		
		try {
			documentBuilderFactory = DocumentBuilderFactory.newInstance();
			documentBuilder = documentBuilderFactory.newDocumentBuilder();
	
			Document document = documentBuilder.newDocument();
			Element elementRoot = document.createElement("configuracionpunvens");
			
			document.appendChild(elementRoot);
		    			
												
			Element element = null;//document.createElement("configuracionpunven");
			//elementRoot.appendChild(element);
		
			for(ConfiguracionPunVen configuracionpunvenAux:configuracionpunvensSeleccionados) {
				element = document.createElement("configuracionpunven");
				elementRoot.appendChild(element);
			
				this.setFilaDatosExportarXmlConfiguracionPunVen(configuracionpunvenAux,document,element);
			}
			
			TransformerFactory transformerFactory = TransformerFactory.newInstance();
			Transformer transformer = transformerFactory.newTransformer();
			DOMSource domSource = new DOMSource(document);
			
			StreamResult streamResult = new StreamResult(new File(sPath));
	
			transformer.transform(domSource, streamResult);
						
			Constantes2.S_PATH_ULTIMO_ARCHIVO=sPath;
			
			if(this.parametroGeneralUsuario.getcon_mensaje_confirmacion() && !this.configuracionpunvenSessionBean.getEsGuardarRelacionado()) {//Constantes.ISMOSTRARMENSAJESMANTENIMIENTO && 
				JOptionPane.showMessageDialog(this,"EXPORTADO CORRECTAMENTE:"+sPath,"MANTENIMIENTO DE Configuracion Pun Ven",JOptionPane.INFORMATION_MESSAGE);
			}
		} catch (Exception e) {
			throw e;
			
		} finally {			       				
		}
	}	
	
	//@SuppressWarnings("deprecation")
	public void getFilaCabeceraExportarExcelConfiguracionPunVen(HSSFRow row) {
		Integer iColumn=0;
		
		
		HSSFCell cell =null;
		cell = row.createCell(iColumn++);cell.setCellValue(ConfiguracionPunVenConstantesFunciones.LABEL_ID);

		if(parametroGeneralUsuario.getcon_exportar_campo_version()){
		cell = row.createCell(iColumn++);cell.setCellValue(ConfiguracionPunVenConstantesFunciones.LABEL_VERSIONROW);
		}

		cell = row.createCell(iColumn++);cell.setCellValue(ConfiguracionPunVenConstantesFunciones.LABEL_IDEMPRESA);
		cell = row.createCell(iColumn++);cell.setCellValue(ConfiguracionPunVenConstantesFunciones.LABEL_IDSUCURSAL);
		cell = row.createCell(iColumn++);cell.setCellValue(ConfiguracionPunVenConstantesFunciones.LABEL_IDBODEGA);
		cell = row.createCell(iColumn++);cell.setCellValue(ConfiguracionPunVenConstantesFunciones.LABEL_IDCUENTACONTABLEEFECTIVO);
		cell = row.createCell(iColumn++);cell.setCellValue(ConfiguracionPunVenConstantesFunciones.LABEL_IDCUENTACONTABLEICE);
		cell = row.createCell(iColumn++);cell.setCellValue(ConfiguracionPunVenConstantesFunciones.LABEL_IDCUENTACONTABLEOTROS);
		cell = row.createCell(iColumn++);cell.setCellValue(ConfiguracionPunVenConstantesFunciones.LABEL_IDCLIENTECONSUMIDORFINAL);
		cell = row.createCell(iColumn++);cell.setCellValue(ConfiguracionPunVenConstantesFunciones.LABEL_IDTIPODOCUMENTOFACTURA);
		cell = row.createCell(iColumn++);cell.setCellValue(ConfiguracionPunVenConstantesFunciones.LABEL_IDTIPODOCUMENTONOTAVENTA);
		cell = row.createCell(iColumn++);cell.setCellValue(ConfiguracionPunVenConstantesFunciones.LABEL_IDTIPODOCUMENTONOTACREDITO);
		cell = row.createCell(iColumn++);cell.setCellValue(ConfiguracionPunVenConstantesFunciones.LABEL_IDTIPODOCUMENTOTARJETACREDITO);
		cell = row.createCell(iColumn++);cell.setCellValue(ConfiguracionPunVenConstantesFunciones.LABEL_IDFORMATOFACTURA);
		cell = row.createCell(iColumn++);cell.setCellValue(ConfiguracionPunVenConstantesFunciones.LABEL_IDFORMATONOTAVENTA);
		cell = row.createCell(iColumn++);cell.setCellValue(ConfiguracionPunVenConstantesFunciones.LABEL_IDFORMATONOTACREDITO);
		cell = row.createCell(iColumn++);cell.setCellValue(ConfiguracionPunVenConstantesFunciones.LABEL_IDTRANSACCIONFACTURA);
		cell = row.createCell(iColumn++);cell.setCellValue(ConfiguracionPunVenConstantesFunciones.LABEL_IDTRANSACCIONNOTAVENTA);
		cell = row.createCell(iColumn++);cell.setCellValue(ConfiguracionPunVenConstantesFunciones.LABEL_IDTRANSACCIONNOTACREDITO);
		cell = row.createCell(iColumn++);cell.setCellValue(ConfiguracionPunVenConstantesFunciones.LABEL_IDTRANSACCIONCUENTAFACTURA);
		cell = row.createCell(iColumn++);cell.setCellValue(ConfiguracionPunVenConstantesFunciones.LABEL_IDTRANSACCIONCUENTANOTAVENTA);
		cell = row.createCell(iColumn++);cell.setCellValue(ConfiguracionPunVenConstantesFunciones.LABEL_IDTRANSACCIONCUENTANOTACREDITO);
	}
	
	//@SuppressWarnings("deprecation")
	public void getFilaDatosExportarExcelConfiguracionPunVen(ConfiguracionPunVen configuracionpunven,HSSFRow row) {
		Integer iColumn=0;
		
		
		HSSFCell cell =null;
		cell = row.createCell(iColumn++);cell.setCellValue(configuracionpunven.getId());
		cell = row.createCell(iColumn++);cell.setCellValue(configuracionpunven.getempresa_descripcion());
		cell = row.createCell(iColumn++);cell.setCellValue(configuracionpunven.getsucursal_descripcion());
		cell = row.createCell(iColumn++);cell.setCellValue(configuracionpunven.getbodega_descripcion());
		cell = row.createCell(iColumn++);cell.setCellValue(configuracionpunven.getcuentacontableefectivo_descripcion());
		cell = row.createCell(iColumn++);cell.setCellValue(configuracionpunven.getcuentacontableice_descripcion());
		cell = row.createCell(iColumn++);cell.setCellValue(configuracionpunven.getcuentacontableotros_descripcion());
		cell = row.createCell(iColumn++);cell.setCellValue(configuracionpunven.getclienteconsumidorfinal_descripcion());
		cell = row.createCell(iColumn++);cell.setCellValue(configuracionpunven.gettipodocumentofactura_descripcion());
		cell = row.createCell(iColumn++);cell.setCellValue(configuracionpunven.gettipodocumentonotaventa_descripcion());
		cell = row.createCell(iColumn++);cell.setCellValue(configuracionpunven.gettipodocumentonotacredito_descripcion());
		cell = row.createCell(iColumn++);cell.setCellValue(configuracionpunven.gettipodocumentotarjetacredito_descripcion());
		cell = row.createCell(iColumn++);cell.setCellValue(configuracionpunven.getformatofactura_descripcion());
		cell = row.createCell(iColumn++);cell.setCellValue(configuracionpunven.getformatonotaventa_descripcion());
		cell = row.createCell(iColumn++);cell.setCellValue(configuracionpunven.getformatonotacredito_descripcion());
		cell = row.createCell(iColumn++);cell.setCellValue(configuracionpunven.gettransaccionfactura_descripcion());
		cell = row.createCell(iColumn++);cell.setCellValue(configuracionpunven.gettransaccionnotaventa_descripcion());
		cell = row.createCell(iColumn++);cell.setCellValue(configuracionpunven.gettransaccionnotacredito_descripcion());
		cell = row.createCell(iColumn++);cell.setCellValue(configuracionpunven.gettransaccioncuentafactura_descripcion());
		cell = row.createCell(iColumn++);cell.setCellValue(configuracionpunven.gettransaccioncuentanotaventa_descripcion());
		cell = row.createCell(iColumn++);cell.setCellValue(configuracionpunven.gettransaccioncuentanotacredito_descripcion());				
	}
	
	public void setFilaDatosExportarXmlConfiguracionPunVen(ConfiguracionPunVen configuracionpunven,Document document,Element element) {
		/*
		Element lastname = document.createElement("lastname");
		lastname.appendChild(document.createTextNode("mook kim"));
		element.appendChild(lastname);
		*/
		

		Element elementId = document.createElement(ConfiguracionPunVenConstantesFunciones.ID);
		elementId.appendChild(document.createTextNode(configuracionpunven.getId().toString().trim()));
		element.appendChild(elementId);

		if(parametroGeneralUsuario.getcon_exportar_campo_version()){

		Element elementVersionRow = document.createElement(ConfiguracionPunVenConstantesFunciones.VERSIONROW);
		elementVersionRow.appendChild(document.createTextNode(configuracionpunven.getVersionRow().toString().trim()));
		element.appendChild(elementVersionRow);
		}


		Element elementempresa_descripcion = document.createElement(ConfiguracionPunVenConstantesFunciones.IDEMPRESA);
		elementempresa_descripcion.appendChild(document.createTextNode(configuracionpunven.getempresa_descripcion()));
		element.appendChild(elementempresa_descripcion);

		Element elementsucursal_descripcion = document.createElement(ConfiguracionPunVenConstantesFunciones.IDSUCURSAL);
		elementsucursal_descripcion.appendChild(document.createTextNode(configuracionpunven.getsucursal_descripcion()));
		element.appendChild(elementsucursal_descripcion);

		Element elementbodega_descripcion = document.createElement(ConfiguracionPunVenConstantesFunciones.IDBODEGA);
		elementbodega_descripcion.appendChild(document.createTextNode(configuracionpunven.getbodega_descripcion()));
		element.appendChild(elementbodega_descripcion);

		Element elementcuentacontableefectivo_descripcion = document.createElement(ConfiguracionPunVenConstantesFunciones.IDCUENTACONTABLEEFECTIVO);
		elementcuentacontableefectivo_descripcion.appendChild(document.createTextNode(configuracionpunven.getcuentacontableefectivo_descripcion()));
		element.appendChild(elementcuentacontableefectivo_descripcion);

		Element elementcuentacontableice_descripcion = document.createElement(ConfiguracionPunVenConstantesFunciones.IDCUENTACONTABLEICE);
		elementcuentacontableice_descripcion.appendChild(document.createTextNode(configuracionpunven.getcuentacontableice_descripcion()));
		element.appendChild(elementcuentacontableice_descripcion);

		Element elementcuentacontableotros_descripcion = document.createElement(ConfiguracionPunVenConstantesFunciones.IDCUENTACONTABLEOTROS);
		elementcuentacontableotros_descripcion.appendChild(document.createTextNode(configuracionpunven.getcuentacontableotros_descripcion()));
		element.appendChild(elementcuentacontableotros_descripcion);

		Element elementclienteconsumidorfinal_descripcion = document.createElement(ConfiguracionPunVenConstantesFunciones.IDCLIENTECONSUMIDORFINAL);
		elementclienteconsumidorfinal_descripcion.appendChild(document.createTextNode(configuracionpunven.getclienteconsumidorfinal_descripcion()));
		element.appendChild(elementclienteconsumidorfinal_descripcion);

		Element elementtipodocumentofactura_descripcion = document.createElement(ConfiguracionPunVenConstantesFunciones.IDTIPODOCUMENTOFACTURA);
		elementtipodocumentofactura_descripcion.appendChild(document.createTextNode(configuracionpunven.gettipodocumentofactura_descripcion()));
		element.appendChild(elementtipodocumentofactura_descripcion);

		Element elementtipodocumentonotaventa_descripcion = document.createElement(ConfiguracionPunVenConstantesFunciones.IDTIPODOCUMENTONOTAVENTA);
		elementtipodocumentonotaventa_descripcion.appendChild(document.createTextNode(configuracionpunven.gettipodocumentonotaventa_descripcion()));
		element.appendChild(elementtipodocumentonotaventa_descripcion);

		Element elementtipodocumentonotacredito_descripcion = document.createElement(ConfiguracionPunVenConstantesFunciones.IDTIPODOCUMENTONOTACREDITO);
		elementtipodocumentonotacredito_descripcion.appendChild(document.createTextNode(configuracionpunven.gettipodocumentonotacredito_descripcion()));
		element.appendChild(elementtipodocumentonotacredito_descripcion);

		Element elementtipodocumentotarjetacredito_descripcion = document.createElement(ConfiguracionPunVenConstantesFunciones.IDTIPODOCUMENTOTARJETACREDITO);
		elementtipodocumentotarjetacredito_descripcion.appendChild(document.createTextNode(configuracionpunven.gettipodocumentotarjetacredito_descripcion()));
		element.appendChild(elementtipodocumentotarjetacredito_descripcion);

		Element elementformatofactura_descripcion = document.createElement(ConfiguracionPunVenConstantesFunciones.IDFORMATOFACTURA);
		elementformatofactura_descripcion.appendChild(document.createTextNode(configuracionpunven.getformatofactura_descripcion()));
		element.appendChild(elementformatofactura_descripcion);

		Element elementformatonotaventa_descripcion = document.createElement(ConfiguracionPunVenConstantesFunciones.IDFORMATONOTAVENTA);
		elementformatonotaventa_descripcion.appendChild(document.createTextNode(configuracionpunven.getformatonotaventa_descripcion()));
		element.appendChild(elementformatonotaventa_descripcion);

		Element elementformatonotacredito_descripcion = document.createElement(ConfiguracionPunVenConstantesFunciones.IDFORMATONOTACREDITO);
		elementformatonotacredito_descripcion.appendChild(document.createTextNode(configuracionpunven.getformatonotacredito_descripcion()));
		element.appendChild(elementformatonotacredito_descripcion);

		Element elementtransaccionfactura_descripcion = document.createElement(ConfiguracionPunVenConstantesFunciones.IDTRANSACCIONFACTURA);
		elementtransaccionfactura_descripcion.appendChild(document.createTextNode(configuracionpunven.gettransaccionfactura_descripcion()));
		element.appendChild(elementtransaccionfactura_descripcion);

		Element elementtransaccionnotaventa_descripcion = document.createElement(ConfiguracionPunVenConstantesFunciones.IDTRANSACCIONNOTAVENTA);
		elementtransaccionnotaventa_descripcion.appendChild(document.createTextNode(configuracionpunven.gettransaccionnotaventa_descripcion()));
		element.appendChild(elementtransaccionnotaventa_descripcion);

		Element elementtransaccionnotacredito_descripcion = document.createElement(ConfiguracionPunVenConstantesFunciones.IDTRANSACCIONNOTACREDITO);
		elementtransaccionnotacredito_descripcion.appendChild(document.createTextNode(configuracionpunven.gettransaccionnotacredito_descripcion()));
		element.appendChild(elementtransaccionnotacredito_descripcion);

		Element elementtransaccioncuentafactura_descripcion = document.createElement(ConfiguracionPunVenConstantesFunciones.IDTRANSACCIONCUENTAFACTURA);
		elementtransaccioncuentafactura_descripcion.appendChild(document.createTextNode(configuracionpunven.gettransaccioncuentafactura_descripcion()));
		element.appendChild(elementtransaccioncuentafactura_descripcion);

		Element elementtransaccioncuentanotaventa_descripcion = document.createElement(ConfiguracionPunVenConstantesFunciones.IDTRANSACCIONCUENTANOTAVENTA);
		elementtransaccioncuentanotaventa_descripcion.appendChild(document.createTextNode(configuracionpunven.gettransaccioncuentanotaventa_descripcion()));
		element.appendChild(elementtransaccioncuentanotaventa_descripcion);

		Element elementtransaccioncuentanotacredito_descripcion = document.createElement(ConfiguracionPunVenConstantesFunciones.IDTRANSACCIONCUENTANOTACREDITO);
		elementtransaccioncuentanotacredito_descripcion.appendChild(document.createTextNode(configuracionpunven.gettransaccioncuentanotacredito_descripcion()));
		element.appendChild(elementtransaccioncuentanotacredito_descripcion);
	}
	
	public void generarReporteGroupGenericoConfiguracionPunVensSeleccionados(Boolean soloTotales) throws Exception {
		ArrayList<ConfiguracionPunVen> configuracionpunvensSeleccionados=new ArrayList<ConfiguracionPunVen>();
		
		configuracionpunvensSeleccionados=this.getConfiguracionPunVensSeleccionados(true);
		
		this.actualizarVariablesTipoReporte(true,false,false,"");
		
		/*
		this.esReporteDinamico=false;
		this.sPathReporteDinamico="";
		*/
		
		if(!soloTotales) {
			this.sTipoReporteExtra=Constantes2.S_REPORTE_EXTRA_GROUP_GENERICO;
		} else {
			this.sTipoReporteExtra=Constantes2.S_REPORTE_EXTRA_GROUP_TOTALES_GENERICO;
		}
		
		this.setColumnaDescripcionReporteGroupGenericoConfiguracionPunVen(configuracionpunvensSeleccionados);
		
		this.generarReporteConfiguracionPunVens("Todos",configuracionpunvensSeleccionados);
	}
	
	public void setColumnaDescripcionReporteGroupGenericoConfiguracionPunVen(ArrayList<ConfiguracionPunVen> configuracionpunvensSeleccionados) throws Exception {    		
		try {
			//FUNCIONA CON MODEL PERO SE DANA MANTENIMIENTO
			
			Boolean existe=false;
			
			for(ConfiguracionPunVen configuracionpunvenAux:configuracionpunvensSeleccionados) {
				configuracionpunvenAux.setsDetalleGeneralEntityReporte(configuracionpunvenAux.toString());
			
				if(sTipoSeleccionar.equals(ConfiguracionPunVenConstantesFunciones.LABEL_IDEMPRESA)) {
					existe=true;
					configuracionpunvenAux.setsDescripcionGeneralEntityReporte1(configuracionpunvenAux.getempresa_descripcion());
				}
				 else if(sTipoSeleccionar.equals(ConfiguracionPunVenConstantesFunciones.LABEL_IDSUCURSAL)) {
					existe=true;
					configuracionpunvenAux.setsDescripcionGeneralEntityReporte1(configuracionpunvenAux.getsucursal_descripcion());
				}
				 else if(sTipoSeleccionar.equals(ConfiguracionPunVenConstantesFunciones.LABEL_IDBODEGA)) {
					existe=true;
					configuracionpunvenAux.setsDescripcionGeneralEntityReporte1(configuracionpunvenAux.getbodega_descripcion());
				}
				 else if(sTipoSeleccionar.equals(ConfiguracionPunVenConstantesFunciones.LABEL_IDCUENTACONTABLEEFECTIVO)) {
					existe=true;
					configuracionpunvenAux.setsDescripcionGeneralEntityReporte1(configuracionpunvenAux.getcuentacontableefectivo_descripcion());
				}
				 else if(sTipoSeleccionar.equals(ConfiguracionPunVenConstantesFunciones.LABEL_IDCUENTACONTABLEICE)) {
					existe=true;
					configuracionpunvenAux.setsDescripcionGeneralEntityReporte1(configuracionpunvenAux.getcuentacontableice_descripcion());
				}
				 else if(sTipoSeleccionar.equals(ConfiguracionPunVenConstantesFunciones.LABEL_IDCUENTACONTABLEOTROS)) {
					existe=true;
					configuracionpunvenAux.setsDescripcionGeneralEntityReporte1(configuracionpunvenAux.getcuentacontableotros_descripcion());
				}
				 else if(sTipoSeleccionar.equals(ConfiguracionPunVenConstantesFunciones.LABEL_IDCLIENTECONSUMIDORFINAL)) {
					existe=true;
					configuracionpunvenAux.setsDescripcionGeneralEntityReporte1(configuracionpunvenAux.getclienteconsumidorfinal_descripcion());
				}
				 else if(sTipoSeleccionar.equals(ConfiguracionPunVenConstantesFunciones.LABEL_IDTIPODOCUMENTOFACTURA)) {
					existe=true;
					configuracionpunvenAux.setsDescripcionGeneralEntityReporte1(configuracionpunvenAux.gettipodocumentofactura_descripcion());
				}
				 else if(sTipoSeleccionar.equals(ConfiguracionPunVenConstantesFunciones.LABEL_IDTIPODOCUMENTONOTAVENTA)) {
					existe=true;
					configuracionpunvenAux.setsDescripcionGeneralEntityReporte1(configuracionpunvenAux.gettipodocumentonotaventa_descripcion());
				}
				 else if(sTipoSeleccionar.equals(ConfiguracionPunVenConstantesFunciones.LABEL_IDTIPODOCUMENTONOTACREDITO)) {
					existe=true;
					configuracionpunvenAux.setsDescripcionGeneralEntityReporte1(configuracionpunvenAux.gettipodocumentonotacredito_descripcion());
				}
				 else if(sTipoSeleccionar.equals(ConfiguracionPunVenConstantesFunciones.LABEL_IDTIPODOCUMENTOTARJETACREDITO)) {
					existe=true;
					configuracionpunvenAux.setsDescripcionGeneralEntityReporte1(configuracionpunvenAux.gettipodocumentotarjetacredito_descripcion());
				}
				 else if(sTipoSeleccionar.equals(ConfiguracionPunVenConstantesFunciones.LABEL_IDFORMATOFACTURA)) {
					existe=true;
					configuracionpunvenAux.setsDescripcionGeneralEntityReporte1(configuracionpunvenAux.getformatofactura_descripcion());
				}
				 else if(sTipoSeleccionar.equals(ConfiguracionPunVenConstantesFunciones.LABEL_IDFORMATONOTAVENTA)) {
					existe=true;
					configuracionpunvenAux.setsDescripcionGeneralEntityReporte1(configuracionpunvenAux.getformatonotaventa_descripcion());
				}
				 else if(sTipoSeleccionar.equals(ConfiguracionPunVenConstantesFunciones.LABEL_IDFORMATONOTACREDITO)) {
					existe=true;
					configuracionpunvenAux.setsDescripcionGeneralEntityReporte1(configuracionpunvenAux.getformatonotacredito_descripcion());
				}
				 else if(sTipoSeleccionar.equals(ConfiguracionPunVenConstantesFunciones.LABEL_IDTRANSACCIONFACTURA)) {
					existe=true;
					configuracionpunvenAux.setsDescripcionGeneralEntityReporte1(configuracionpunvenAux.gettransaccionfactura_descripcion());
				}
				 else if(sTipoSeleccionar.equals(ConfiguracionPunVenConstantesFunciones.LABEL_IDTRANSACCIONNOTAVENTA)) {
					existe=true;
					configuracionpunvenAux.setsDescripcionGeneralEntityReporte1(configuracionpunvenAux.gettransaccionnotaventa_descripcion());
				}
				 else if(sTipoSeleccionar.equals(ConfiguracionPunVenConstantesFunciones.LABEL_IDTRANSACCIONNOTACREDITO)) {
					existe=true;
					configuracionpunvenAux.setsDescripcionGeneralEntityReporte1(configuracionpunvenAux.gettransaccionnotacredito_descripcion());
				}
				 else if(sTipoSeleccionar.equals(ConfiguracionPunVenConstantesFunciones.LABEL_IDTRANSACCIONCUENTAFACTURA)) {
					existe=true;
					configuracionpunvenAux.setsDescripcionGeneralEntityReporte1(configuracionpunvenAux.gettransaccioncuentafactura_descripcion());
				}
				 else if(sTipoSeleccionar.equals(ConfiguracionPunVenConstantesFunciones.LABEL_IDTRANSACCIONCUENTANOTAVENTA)) {
					existe=true;
					configuracionpunvenAux.setsDescripcionGeneralEntityReporte1(configuracionpunvenAux.gettransaccioncuentanotaventa_descripcion());
				}
				 else if(sTipoSeleccionar.equals(ConfiguracionPunVenConstantesFunciones.LABEL_IDTRANSACCIONCUENTANOTACREDITO)) {
					existe=true;
					configuracionpunvenAux.setsDescripcionGeneralEntityReporte1(configuracionpunvenAux.gettransaccioncuentanotacredito_descripcion());
				}
			}	
											
			if(!existe) {
				JOptionPane.showMessageDialog(this,"NO SE HA SELECCIONADO ALGUNA COLUMNA VALIDA","SELECCIONAR",JOptionPane.ERROR_MESSAGE);
			}										
		} catch(Exception e) {
			FuncionesSwing.manageException(this, e,logger,ConfiguracionPunVenConstantesFunciones.CLASSNAME);
		}
	}
	
	
	public void actualizarEstadoCeldasBotonesConfiguracionPunVen(String sAccion,Boolean isGuardarCambiosEnLote,Boolean isEsMantenimientoRelacionado) throws Exception {
		if(sAccion=="n") {
			if(!this.esParaBusquedaForeignKey) {
				this.isVisibilidadCeldaNuevoConfiguracionPunVen=true;
				this.isVisibilidadCeldaNuevoRelacionesConfiguracionPunVen=true;
				this.isVisibilidadCeldaGuardarCambiosConfiguracionPunVen=true;
			}
			
			this.isVisibilidadCeldaModificarConfiguracionPunVen=false;
			this.isVisibilidadCeldaActualizarConfiguracionPunVen=false;
			this.isVisibilidadCeldaEliminarConfiguracionPunVen=false;
			this.isVisibilidadCeldaCancelarConfiguracionPunVen=false;
			
			if(isEsMantenimientoRelacionado==false) {
				if(isGuardarCambiosEnLote==true) {
					this.isVisibilidadCeldaGuardarConfiguracionPunVen=true;
				} else {
					this.isVisibilidadCeldaGuardarConfiguracionPunVen=false;
				}
			}
		} else if(sAccion=="a") {
			this.isVisibilidadCeldaNuevoConfiguracionPunVen=false;
			this.isVisibilidadCeldaNuevoRelacionesConfiguracionPunVen=false;
			this.isVisibilidadCeldaGuardarCambiosConfiguracionPunVen=false;
			this.isVisibilidadCeldaModificarConfiguracionPunVen=false;
			this.isVisibilidadCeldaActualizarConfiguracionPunVen=true;
			this.isVisibilidadCeldaEliminarConfiguracionPunVen=false;
			this.isVisibilidadCeldaCancelarConfiguracionPunVen=true;
			
			if(isEsMantenimientoRelacionado==false) {
				if(isGuardarCambiosEnLote==true) {
					this.isVisibilidadCeldaGuardarConfiguracionPunVen=true;
				} else {
					this.isVisibilidadCeldaGuardarConfiguracionPunVen=false;
				}
			}
		} else if(sAccion=="ae") {
			this.isVisibilidadCeldaNuevoConfiguracionPunVen=false;
			this.isVisibilidadCeldaNuevoRelacionesConfiguracionPunVen=false;
			this.isVisibilidadCeldaGuardarCambiosConfiguracionPunVen=false;
			this.isVisibilidadCeldaModificarConfiguracionPunVen=false;
			this.isVisibilidadCeldaActualizarConfiguracionPunVen=true;
			this.isVisibilidadCeldaEliminarConfiguracionPunVen=true;
			this.isVisibilidadCeldaCancelarConfiguracionPunVen=true;
			
			if(isEsMantenimientoRelacionado==false) {
				if(isGuardarCambiosEnLote==true) {
					this.isVisibilidadCeldaGuardarConfiguracionPunVen=true;
				} else {
					this.isVisibilidadCeldaGuardarConfiguracionPunVen=false;
				}
			}
		}
		//Para Mantenimientos de tablas relacionados con mas de columnas minimas
		else if(sAccion=="ae2") {
			this.isVisibilidadCeldaNuevoConfiguracionPunVen=false;
			this.isVisibilidadCeldaNuevoRelacionesConfiguracionPunVen=false;
			this.isVisibilidadCeldaGuardarCambiosConfiguracionPunVen=false;
			this.isVisibilidadCeldaModificarConfiguracionPunVen=false;
			this.isVisibilidadCeldaActualizarConfiguracionPunVen=true;
			this.isVisibilidadCeldaEliminarConfiguracionPunVen=false;
			this.isVisibilidadCeldaCancelarConfiguracionPunVen=true;
			
			if(isEsMantenimientoRelacionado==false) {
				if(isGuardarCambiosEnLote==true) {
					this.isVisibilidadCeldaGuardarConfiguracionPunVen=false;
				} else {
					this.isVisibilidadCeldaGuardarConfiguracionPunVen=false;
				}
			}
		} else if(sAccion=="c") {
			this.isVisibilidadCeldaNuevoConfiguracionPunVen=true;
			this.isVisibilidadCeldaNuevoRelacionesConfiguracionPunVen=true;
			this.isVisibilidadCeldaGuardarCambiosConfiguracionPunVen=true;
			this.isVisibilidadCeldaModificarConfiguracionPunVen=false;
			this.isVisibilidadCeldaActualizarConfiguracionPunVen=false;
			this.isVisibilidadCeldaEliminarConfiguracionPunVen=false;
			this.isVisibilidadCeldaCancelarConfiguracionPunVen=false;
			
			if(isEsMantenimientoRelacionado==false) {
				if(isGuardarCambiosEnLote==true) {
					this.isVisibilidadCeldaGuardarConfiguracionPunVen=true;
				} else {
					this.isVisibilidadCeldaGuardarConfiguracionPunVen=false;
				}
			}
		} else if(sAccion=="t") {
			this.isVisibilidadCeldaNuevoConfiguracionPunVen=false;
			this.isVisibilidadCeldaNuevoRelacionesConfiguracionPunVen=false;
			this.isVisibilidadCeldaGuardarCambiosConfiguracionPunVen=false;
			this.isVisibilidadCeldaActualizarConfiguracionPunVen=false;
			this.isVisibilidadCeldaEliminarConfiguracionPunVen=false;
			this.isVisibilidadCeldaCancelarConfiguracionPunVen=false;
			
			if(isEsMantenimientoRelacionado==false) {
				if(isGuardarCambiosEnLote==true) {
					this.isVisibilidadCeldaGuardarConfiguracionPunVen=false;
				} else {
					this.isVisibilidadCeldaGuardarConfiguracionPunVen=false;
				}
			}
		}  else if(sAccion=="s"||sAccion=="s2") {
			this.isVisibilidadCeldaNuevoConfiguracionPunVen=false;
			this.isVisibilidadCeldaNuevoRelacionesConfiguracionPunVen=false;
			this.isVisibilidadCeldaGuardarCambiosConfiguracionPunVen=false;
			this.isVisibilidadCeldaModificarConfiguracionPunVen=true;
			this.isVisibilidadCeldaActualizarConfiguracionPunVen=false;
			this.isVisibilidadCeldaEliminarConfiguracionPunVen=false;
			this.isVisibilidadCeldaCancelarConfiguracionPunVen=true;
			
			if(isEsMantenimientoRelacionado==false) {
				if(isGuardarCambiosEnLote==true) {
					this.isVisibilidadCeldaGuardarConfiguracionPunVen=false;
				} else {
					this.isVisibilidadCeldaGuardarConfiguracionPunVen=false;
				}
			}
		}
		
		//ACTUALIZA VISIBILIDAD PANELES
		if(ConfiguracionPunVenJInternalFrame.CON_DATOS_FRAME && !this.esParaBusquedaForeignKey) {
			//SIEMPRE VISIBLE
			this.isVisibilidadCeldaNuevoConfiguracionPunVen=true;
			this.isVisibilidadCeldaNuevoRelacionesConfiguracionPunVen=true;
			this.isVisibilidadCeldaGuardarCambiosConfiguracionPunVen=true;
		} else {
			this.actualizarEstadoPanelsConfiguracionPunVen(sAccion);						
		}
		
		if(this.esParaBusquedaForeignKey) {
			this.isVisibilidadCeldaCopiarConfiguracionPunVen=false;
			//this.isVisibilidadCeldaVerFormConfiguracionPunVen=false;
			this.isVisibilidadCeldaDuplicarConfiguracionPunVen=false;
		}
		
		//SI ES MANTENIMIENTO RELACIONES
		if(!configuracionpunvenSessionBean.getConGuardarRelaciones()) {
			this.isVisibilidadCeldaNuevoRelacionesConfiguracionPunVen=false;
		} else {
			this.isVisibilidadCeldaNuevoConfiguracionPunVen=false;
			this.isVisibilidadCeldaGuardarCambiosConfiguracionPunVen=false;
		}
		
		//SI ES MANTENIMIENTO RELACIONADO
		if(configuracionpunvenSessionBean.getEsGuardarRelacionado()) {
			if(!configuracionpunvenSessionBean.getConGuardarRelaciones()) {	
				this.isVisibilidadCeldaNuevoRelacionesConfiguracionPunVen=false;												
			}
			
			this.jButtonCerrarConfiguracionPunVen.setVisible(false);
		}
		
		//SI NO TIENE MAXIMO DE RELACIONES PERMITIDAS
		if(!this.conMaximoRelaciones) {
			this.isVisibilidadCeldaNuevoRelacionesConfiguracionPunVen=false;
		}
		
		if(!this.permiteMantenimiento(this.configuracionpunven)) {
			this.isVisibilidadCeldaActualizarConfiguracionPunVen=false;
			this.isVisibilidadCeldaEliminarConfiguracionPunVen=false;
		}
		
		
		
	}
	
	public void actualizarEstadoCeldasBotonesConGuardarRelacionesConfiguracionPunVen() {
	}
	
	public void actualizarEstadoPanelsConfiguracionPunVen(String sAccion) {
		if(sAccion=="n") {
			if(this.jScrollPanelDatosEdicionConfiguracionPunVen!=null) {
				this.jScrollPanelDatosEdicionConfiguracionPunVen.setVisible(false);			
			}
			
			//BYDAN_BUSQUEDAS
			
			if(this.jTabbedPaneBusquedasConfiguracionPunVen!=null) {
				this.jTabbedPaneBusquedasConfiguracionPunVen.setVisible(true);			
			}
			
			
			if(this.jScrollPanelDatosConfiguracionPunVen!=null) {
				this.jScrollPanelDatosConfiguracionPunVen.setVisible(true);
			}
			
			if(this.jPanelPaginacionConfiguracionPunVen!=null) {
				this.jPanelPaginacionConfiguracionPunVen.setVisible(true);
			}
			
			if(this.jPanelParametrosReportesConfiguracionPunVen!=null) {
				this.jPanelParametrosReportesConfiguracionPunVen.setVisible(true);		    
			}
			
		} else if(sAccion=="a") {				
			if(this.jScrollPanelDatosEdicionConfiguracionPunVen!=null) {
				this.jScrollPanelDatosEdicionConfiguracionPunVen.setVisible(true);			
			}
			
			//BYDAN_BUSQUEDAS
			
			if(this.jTabbedPaneBusquedasConfiguracionPunVen!=null) {
				this.jTabbedPaneBusquedasConfiguracionPunVen.setVisible(false);			
			}
			
			
			
			if(this.jScrollPanelDatosConfiguracionPunVen!=null) {
				this.jScrollPanelDatosConfiguracionPunVen.setVisible(false);
			}
			
			if(this.jPanelPaginacionConfiguracionPunVen!=null) {
				this.jPanelPaginacionConfiguracionPunVen.setVisible(false);
			}
			
			if(this.jPanelParametrosReportesConfiguracionPunVen!=null) {
				this.jPanelParametrosReportesConfiguracionPunVen.setVisible(false);
			}
						
		} else if(sAccion=="ae") {		
			if(this.jScrollPanelDatosEdicionConfiguracionPunVen!=null) {
				this.jScrollPanelDatosEdicionConfiguracionPunVen.setVisible(true);		
			}
			
			//BYDAN_BUSQUEDAS
			
			if(this.jTabbedPaneBusquedasConfiguracionPunVen!=null) {
				this.jTabbedPaneBusquedasConfiguracionPunVen.setVisible(false);			
			}
			
			
			if(this.jScrollPanelDatosConfiguracionPunVen!=null) {
				this.jScrollPanelDatosConfiguracionPunVen.setVisible(false);
			}
			
			if(this.jPanelPaginacionConfiguracionPunVen!=null) {
				this.jPanelPaginacionConfiguracionPunVen.setVisible(false);
			}
			
			if(this.jPanelParametrosReportesConfiguracionPunVen!=null) {
				this.jPanelParametrosReportesConfiguracionPunVen.setVisible(false);
			}
						
		}
		//Para Mantenimientos de tablas relacionados con mas de columnas minimas
		else if(sAccion=="ae2") {	
			if(this.jScrollPanelDatosEdicionConfiguracionPunVen!=null) {
				this.jScrollPanelDatosEdicionConfiguracionPunVen.setVisible(true);			
			}
			
			//BYDAN_BUSQUEDAS
			
			if(this.jTabbedPaneBusquedasConfiguracionPunVen!=null) {
				this.jTabbedPaneBusquedasConfiguracionPunVen.setVisible(false);			
			}
			
			
			if(this.jScrollPanelDatosConfiguracionPunVen!=null) {
				this.jScrollPanelDatosConfiguracionPunVen.setVisible(false);
			}
			
			if(this.jPanelPaginacionConfiguracionPunVen!=null) {
				this.jPanelPaginacionConfiguracionPunVen.setVisible(false);
			}
			
			if(this.jPanelParametrosReportesConfiguracionPunVen!=null) {
				this.jPanelParametrosReportesConfiguracionPunVen.setVisible(false);
			}
						
		} else if(sAccion=="c") {	
			if(this.jScrollPanelDatosEdicionConfiguracionPunVen!=null) {
				this.jScrollPanelDatosEdicionConfiguracionPunVen.setVisible(false);			
			}
			
			//BYDAN_BUSQUEDAS
			
			if(this.jTabbedPaneBusquedasConfiguracionPunVen!=null) {
				this.jTabbedPaneBusquedasConfiguracionPunVen.setVisible(true);			
			}
			
			
			if(this.jScrollPanelDatosConfiguracionPunVen!=null) {
				this.jScrollPanelDatosConfiguracionPunVen.setVisible(true);
			}
			
			if(this.jPanelPaginacionConfiguracionPunVen!=null) {
				this.jPanelPaginacionConfiguracionPunVen.setVisible(true);
			}
			
			if(this.jPanelParametrosReportesConfiguracionPunVen!=null) {
				this.jPanelParametrosReportesConfiguracionPunVen.setVisible(true);
			}
						
		} else if(sAccion=="t") {
			
			if(this.jScrollPanelDatosEdicionConfiguracionPunVen!=null) {
				this.jScrollPanelDatosEdicionConfiguracionPunVen.setVisible(false);
			}
			
			//BYDAN_BUSQUEDAS
			
			if(this.jTabbedPaneBusquedasConfiguracionPunVen!=null) {
				this.jTabbedPaneBusquedasConfiguracionPunVen.setVisible(true);			
			}
			
			
			if(this.jScrollPanelDatosConfiguracionPunVen!=null) {
				this.jScrollPanelDatosConfiguracionPunVen.setVisible(true);
			}
			
			if(this.jPanelPaginacionConfiguracionPunVen!=null) {
				this.jPanelPaginacionConfiguracionPunVen.setVisible(true);
			}
			
			if(this.jPanelParametrosReportesConfiguracionPunVen!=null) {
				this.jPanelParametrosReportesConfiguracionPunVen.setVisible(true);
			}
						
		}  else if(sAccion=="s"||sAccion=="s2") {
			if(this.jScrollPanelDatosEdicionConfiguracionPunVen!=null) {
				this.jScrollPanelDatosEdicionConfiguracionPunVen.setVisible(false);
			}
			
			//BYDAN_BUSQUEDAS
			
			if(this.jTabbedPaneBusquedasConfiguracionPunVen!=null) {
				this.jTabbedPaneBusquedasConfiguracionPunVen.setVisible(true);			
			}
			
			
			if(this.jScrollPanelDatosConfiguracionPunVen!=null) {
				this.jScrollPanelDatosConfiguracionPunVen.setVisible(true);
			}
			
			if(this.jPanelPaginacionConfiguracionPunVen!=null) {
				this.jPanelPaginacionConfiguracionPunVen.setVisible(true);
			}
			
			if(this.jPanelParametrosReportesConfiguracionPunVen!=null) {
				this.jPanelParametrosReportesConfiguracionPunVen.setVisible(true);
			}
			
		} 
		
		if(sAccion.equals("relacionado") || this.configuracionpunvenSessionBean.getEsGuardarRelacionado()) {
			if(!this.conCargarMinimo) {
				//BYDAN_BUSQUEDAS
				
				if(this.jTabbedPaneBusquedasConfiguracionPunVen!=null) {
					this.jTabbedPaneBusquedasConfiguracionPunVen.setVisible(false);				
				}
				
			}
			
			if(this.jPanelParametrosReportesConfiguracionPunVen!=null) {
				this.jPanelParametrosReportesConfiguracionPunVen.setVisible(false);
			}
		
		} else if(sAccion.equals("no_relacionado") && !this.configuracionpunvenSessionBean.getEsGuardarRelacionado()) {
			//BYDAN_BUSQUEDAS
			
			if(this.jTabbedPaneBusquedasConfiguracionPunVen!=null) {
				this.jTabbedPaneBusquedasConfiguracionPunVen.setVisible(true);			
			}
			
			if(this.jPanelParametrosReportesConfiguracionPunVen!=null) {
				this.jPanelParametrosReportesConfiguracionPunVen.setVisible(true);
			}
		}
	}	
	
	

	public void setVisibilidadBusquedasParaEmpresa(Boolean isParaEmpresa){
		//BYDAN_BUSQUEDAS
		
		if(!this.conCargarMinimo) {

			Boolean isParaEmpresaNegation=!isParaEmpresa;

			this.isVisibilidadFK_IdBodega=isParaEmpresaNegation;
			if(!this.isVisibilidadFK_IdBodega) {this.jTabbedPaneBusquedasConfiguracionPunVen.remove(jPanelFK_IdBodegaConfiguracionPunVen);}

			this.isVisibilidadFK_IdClienteConsumidorFinal=isParaEmpresaNegation;
			if(!this.isVisibilidadFK_IdClienteConsumidorFinal) {this.jTabbedPaneBusquedasConfiguracionPunVen.remove(jPanelFK_IdClienteConsumidorFinalConfiguracionPunVen);}

			this.isVisibilidadFK_IdCuentaContableEfectivo=isParaEmpresaNegation;
			if(!this.isVisibilidadFK_IdCuentaContableEfectivo) {this.jTabbedPaneBusquedasConfiguracionPunVen.remove(jPanelFK_IdCuentaContableEfectivoConfiguracionPunVen);}

			this.isVisibilidadFK_IdCuentaContableIce=isParaEmpresaNegation;
			if(!this.isVisibilidadFK_IdCuentaContableIce) {this.jTabbedPaneBusquedasConfiguracionPunVen.remove(jPanelFK_IdCuentaContableIceConfiguracionPunVen);}

			this.isVisibilidadFK_IdCuentaContableOtros=isParaEmpresaNegation;
			if(!this.isVisibilidadFK_IdCuentaContableOtros) {this.jTabbedPaneBusquedasConfiguracionPunVen.remove(jPanelFK_IdCuentaContableOtrosConfiguracionPunVen);}

			this.isVisibilidadFK_IdFormatoFactura=isParaEmpresaNegation;
			if(!this.isVisibilidadFK_IdFormatoFactura) {this.jTabbedPaneBusquedasConfiguracionPunVen.remove(jPanelFK_IdFormatoFacturaConfiguracionPunVen);}

			this.isVisibilidadFK_IdFormatoNotaCredito=isParaEmpresaNegation;
			if(!this.isVisibilidadFK_IdFormatoNotaCredito) {this.jTabbedPaneBusquedasConfiguracionPunVen.remove(jPanelFK_IdFormatoNotaCreditoConfiguracionPunVen);}

			this.isVisibilidadFK_IdFormatoNotaVenta=isParaEmpresaNegation;
			if(!this.isVisibilidadFK_IdFormatoNotaVenta) {this.jTabbedPaneBusquedasConfiguracionPunVen.remove(jPanelFK_IdFormatoNotaVentaConfiguracionPunVen);}

			this.isVisibilidadFK_IdTipoDocumentoFactura=isParaEmpresaNegation;
			if(!this.isVisibilidadFK_IdTipoDocumentoFactura) {this.jTabbedPaneBusquedasConfiguracionPunVen.remove(jPanelFK_IdTipoDocumentoFacturaConfiguracionPunVen);}

			this.isVisibilidadFK_IdTipoDocumentoNotaCredito=isParaEmpresaNegation;
			if(!this.isVisibilidadFK_IdTipoDocumentoNotaCredito) {this.jTabbedPaneBusquedasConfiguracionPunVen.remove(jPanelFK_IdTipoDocumentoNotaCreditoConfiguracionPunVen);}

			this.isVisibilidadFK_IdTipoDocumentoNotaVenta=isParaEmpresaNegation;
			if(!this.isVisibilidadFK_IdTipoDocumentoNotaVenta) {this.jTabbedPaneBusquedasConfiguracionPunVen.remove(jPanelFK_IdTipoDocumentoNotaVentaConfiguracionPunVen);}

			this.isVisibilidadFK_IdTipoDocumentoTarjetaCredito=isParaEmpresaNegation;
			if(!this.isVisibilidadFK_IdTipoDocumentoTarjetaCredito) {this.jTabbedPaneBusquedasConfiguracionPunVen.remove(jPanelFK_IdTipoDocumentoTarjetaCreditoConfiguracionPunVen);}

			this.isVisibilidadFK_IdTransaccionCuentaFactura=isParaEmpresaNegation;
			if(!this.isVisibilidadFK_IdTransaccionCuentaFactura) {this.jTabbedPaneBusquedasConfiguracionPunVen.remove(jPanelFK_IdTransaccionCuentaFacturaConfiguracionPunVen);}

			this.isVisibilidadFK_IdTransaccionCuentaNotaCredito=isParaEmpresaNegation;
			if(!this.isVisibilidadFK_IdTransaccionCuentaNotaCredito) {this.jTabbedPaneBusquedasConfiguracionPunVen.remove(jPanelFK_IdTransaccionCuentaNotaCreditoConfiguracionPunVen);}

			this.isVisibilidadFK_IdTransaccionCuentaNotaVenta=isParaEmpresaNegation;
			if(!this.isVisibilidadFK_IdTransaccionCuentaNotaVenta) {this.jTabbedPaneBusquedasConfiguracionPunVen.remove(jPanelFK_IdTransaccionCuentaNotaVentaConfiguracionPunVen);}

			this.isVisibilidadFK_IdTransaccionFactura=isParaEmpresaNegation;
			if(!this.isVisibilidadFK_IdTransaccionFactura) {this.jTabbedPaneBusquedasConfiguracionPunVen.remove(jPanelFK_IdTransaccionFacturaConfiguracionPunVen);}

			this.isVisibilidadFK_IdTransaccionNotaCredito=isParaEmpresaNegation;
			if(!this.isVisibilidadFK_IdTransaccionNotaCredito) {this.jTabbedPaneBusquedasConfiguracionPunVen.remove(jPanelFK_IdTransaccionNotaCreditoConfiguracionPunVen);}

			this.isVisibilidadFK_IdTransaccionNotaVenta=isParaEmpresaNegation;
			if(!this.isVisibilidadFK_IdTransaccionNotaVenta) {this.jTabbedPaneBusquedasConfiguracionPunVen.remove(jPanelFK_IdTransaccionNotaVentaConfiguracionPunVen);}
		}
		
	}

	public void setVisibilidadBusquedasParaSucursal(Boolean isParaSucursal){
		//BYDAN_BUSQUEDAS
		
		if(!this.conCargarMinimo) {

			Boolean isParaSucursalNegation=!isParaSucursal;

			this.isVisibilidadFK_IdBodega=isParaSucursalNegation;
			if(!this.isVisibilidadFK_IdBodega) {this.jTabbedPaneBusquedasConfiguracionPunVen.remove(jPanelFK_IdBodegaConfiguracionPunVen);}

			this.isVisibilidadFK_IdClienteConsumidorFinal=isParaSucursalNegation;
			if(!this.isVisibilidadFK_IdClienteConsumidorFinal) {this.jTabbedPaneBusquedasConfiguracionPunVen.remove(jPanelFK_IdClienteConsumidorFinalConfiguracionPunVen);}

			this.isVisibilidadFK_IdCuentaContableEfectivo=isParaSucursalNegation;
			if(!this.isVisibilidadFK_IdCuentaContableEfectivo) {this.jTabbedPaneBusquedasConfiguracionPunVen.remove(jPanelFK_IdCuentaContableEfectivoConfiguracionPunVen);}

			this.isVisibilidadFK_IdCuentaContableIce=isParaSucursalNegation;
			if(!this.isVisibilidadFK_IdCuentaContableIce) {this.jTabbedPaneBusquedasConfiguracionPunVen.remove(jPanelFK_IdCuentaContableIceConfiguracionPunVen);}

			this.isVisibilidadFK_IdCuentaContableOtros=isParaSucursalNegation;
			if(!this.isVisibilidadFK_IdCuentaContableOtros) {this.jTabbedPaneBusquedasConfiguracionPunVen.remove(jPanelFK_IdCuentaContableOtrosConfiguracionPunVen);}

			this.isVisibilidadFK_IdFormatoFactura=isParaSucursalNegation;
			if(!this.isVisibilidadFK_IdFormatoFactura) {this.jTabbedPaneBusquedasConfiguracionPunVen.remove(jPanelFK_IdFormatoFacturaConfiguracionPunVen);}

			this.isVisibilidadFK_IdFormatoNotaCredito=isParaSucursalNegation;
			if(!this.isVisibilidadFK_IdFormatoNotaCredito) {this.jTabbedPaneBusquedasConfiguracionPunVen.remove(jPanelFK_IdFormatoNotaCreditoConfiguracionPunVen);}

			this.isVisibilidadFK_IdFormatoNotaVenta=isParaSucursalNegation;
			if(!this.isVisibilidadFK_IdFormatoNotaVenta) {this.jTabbedPaneBusquedasConfiguracionPunVen.remove(jPanelFK_IdFormatoNotaVentaConfiguracionPunVen);}

			this.isVisibilidadFK_IdTipoDocumentoFactura=isParaSucursalNegation;
			if(!this.isVisibilidadFK_IdTipoDocumentoFactura) {this.jTabbedPaneBusquedasConfiguracionPunVen.remove(jPanelFK_IdTipoDocumentoFacturaConfiguracionPunVen);}

			this.isVisibilidadFK_IdTipoDocumentoNotaCredito=isParaSucursalNegation;
			if(!this.isVisibilidadFK_IdTipoDocumentoNotaCredito) {this.jTabbedPaneBusquedasConfiguracionPunVen.remove(jPanelFK_IdTipoDocumentoNotaCreditoConfiguracionPunVen);}

			this.isVisibilidadFK_IdTipoDocumentoNotaVenta=isParaSucursalNegation;
			if(!this.isVisibilidadFK_IdTipoDocumentoNotaVenta) {this.jTabbedPaneBusquedasConfiguracionPunVen.remove(jPanelFK_IdTipoDocumentoNotaVentaConfiguracionPunVen);}

			this.isVisibilidadFK_IdTipoDocumentoTarjetaCredito=isParaSucursalNegation;
			if(!this.isVisibilidadFK_IdTipoDocumentoTarjetaCredito) {this.jTabbedPaneBusquedasConfiguracionPunVen.remove(jPanelFK_IdTipoDocumentoTarjetaCreditoConfiguracionPunVen);}

			this.isVisibilidadFK_IdTransaccionCuentaFactura=isParaSucursalNegation;
			if(!this.isVisibilidadFK_IdTransaccionCuentaFactura) {this.jTabbedPaneBusquedasConfiguracionPunVen.remove(jPanelFK_IdTransaccionCuentaFacturaConfiguracionPunVen);}

			this.isVisibilidadFK_IdTransaccionCuentaNotaCredito=isParaSucursalNegation;
			if(!this.isVisibilidadFK_IdTransaccionCuentaNotaCredito) {this.jTabbedPaneBusquedasConfiguracionPunVen.remove(jPanelFK_IdTransaccionCuentaNotaCreditoConfiguracionPunVen);}

			this.isVisibilidadFK_IdTransaccionCuentaNotaVenta=isParaSucursalNegation;
			if(!this.isVisibilidadFK_IdTransaccionCuentaNotaVenta) {this.jTabbedPaneBusquedasConfiguracionPunVen.remove(jPanelFK_IdTransaccionCuentaNotaVentaConfiguracionPunVen);}

			this.isVisibilidadFK_IdTransaccionFactura=isParaSucursalNegation;
			if(!this.isVisibilidadFK_IdTransaccionFactura) {this.jTabbedPaneBusquedasConfiguracionPunVen.remove(jPanelFK_IdTransaccionFacturaConfiguracionPunVen);}

			this.isVisibilidadFK_IdTransaccionNotaCredito=isParaSucursalNegation;
			if(!this.isVisibilidadFK_IdTransaccionNotaCredito) {this.jTabbedPaneBusquedasConfiguracionPunVen.remove(jPanelFK_IdTransaccionNotaCreditoConfiguracionPunVen);}

			this.isVisibilidadFK_IdTransaccionNotaVenta=isParaSucursalNegation;
			if(!this.isVisibilidadFK_IdTransaccionNotaVenta) {this.jTabbedPaneBusquedasConfiguracionPunVen.remove(jPanelFK_IdTransaccionNotaVentaConfiguracionPunVen);}
		}
		
	}

	public void setVisibilidadBusquedasParaBodega(Boolean isParaBodega){
		//BYDAN_BUSQUEDAS
		
		if(!this.conCargarMinimo) {

			Boolean isParaBodegaNegation=!isParaBodega;

			this.isVisibilidadFK_IdBodega=isParaBodega;
			if(!this.isVisibilidadFK_IdBodega) {this.jTabbedPaneBusquedasConfiguracionPunVen.remove(jPanelFK_IdBodegaConfiguracionPunVen);}

			this.isVisibilidadFK_IdClienteConsumidorFinal=isParaBodegaNegation;
			if(!this.isVisibilidadFK_IdClienteConsumidorFinal) {this.jTabbedPaneBusquedasConfiguracionPunVen.remove(jPanelFK_IdClienteConsumidorFinalConfiguracionPunVen);}

			this.isVisibilidadFK_IdCuentaContableEfectivo=isParaBodegaNegation;
			if(!this.isVisibilidadFK_IdCuentaContableEfectivo) {this.jTabbedPaneBusquedasConfiguracionPunVen.remove(jPanelFK_IdCuentaContableEfectivoConfiguracionPunVen);}

			this.isVisibilidadFK_IdCuentaContableIce=isParaBodegaNegation;
			if(!this.isVisibilidadFK_IdCuentaContableIce) {this.jTabbedPaneBusquedasConfiguracionPunVen.remove(jPanelFK_IdCuentaContableIceConfiguracionPunVen);}

			this.isVisibilidadFK_IdCuentaContableOtros=isParaBodegaNegation;
			if(!this.isVisibilidadFK_IdCuentaContableOtros) {this.jTabbedPaneBusquedasConfiguracionPunVen.remove(jPanelFK_IdCuentaContableOtrosConfiguracionPunVen);}

			this.isVisibilidadFK_IdFormatoFactura=isParaBodegaNegation;
			if(!this.isVisibilidadFK_IdFormatoFactura) {this.jTabbedPaneBusquedasConfiguracionPunVen.remove(jPanelFK_IdFormatoFacturaConfiguracionPunVen);}

			this.isVisibilidadFK_IdFormatoNotaCredito=isParaBodegaNegation;
			if(!this.isVisibilidadFK_IdFormatoNotaCredito) {this.jTabbedPaneBusquedasConfiguracionPunVen.remove(jPanelFK_IdFormatoNotaCreditoConfiguracionPunVen);}

			this.isVisibilidadFK_IdFormatoNotaVenta=isParaBodegaNegation;
			if(!this.isVisibilidadFK_IdFormatoNotaVenta) {this.jTabbedPaneBusquedasConfiguracionPunVen.remove(jPanelFK_IdFormatoNotaVentaConfiguracionPunVen);}

			this.isVisibilidadFK_IdTipoDocumentoFactura=isParaBodegaNegation;
			if(!this.isVisibilidadFK_IdTipoDocumentoFactura) {this.jTabbedPaneBusquedasConfiguracionPunVen.remove(jPanelFK_IdTipoDocumentoFacturaConfiguracionPunVen);}

			this.isVisibilidadFK_IdTipoDocumentoNotaCredito=isParaBodegaNegation;
			if(!this.isVisibilidadFK_IdTipoDocumentoNotaCredito) {this.jTabbedPaneBusquedasConfiguracionPunVen.remove(jPanelFK_IdTipoDocumentoNotaCreditoConfiguracionPunVen);}

			this.isVisibilidadFK_IdTipoDocumentoNotaVenta=isParaBodegaNegation;
			if(!this.isVisibilidadFK_IdTipoDocumentoNotaVenta) {this.jTabbedPaneBusquedasConfiguracionPunVen.remove(jPanelFK_IdTipoDocumentoNotaVentaConfiguracionPunVen);}

			this.isVisibilidadFK_IdTipoDocumentoTarjetaCredito=isParaBodegaNegation;
			if(!this.isVisibilidadFK_IdTipoDocumentoTarjetaCredito) {this.jTabbedPaneBusquedasConfiguracionPunVen.remove(jPanelFK_IdTipoDocumentoTarjetaCreditoConfiguracionPunVen);}

			this.isVisibilidadFK_IdTransaccionCuentaFactura=isParaBodegaNegation;
			if(!this.isVisibilidadFK_IdTransaccionCuentaFactura) {this.jTabbedPaneBusquedasConfiguracionPunVen.remove(jPanelFK_IdTransaccionCuentaFacturaConfiguracionPunVen);}

			this.isVisibilidadFK_IdTransaccionCuentaNotaCredito=isParaBodegaNegation;
			if(!this.isVisibilidadFK_IdTransaccionCuentaNotaCredito) {this.jTabbedPaneBusquedasConfiguracionPunVen.remove(jPanelFK_IdTransaccionCuentaNotaCreditoConfiguracionPunVen);}

			this.isVisibilidadFK_IdTransaccionCuentaNotaVenta=isParaBodegaNegation;
			if(!this.isVisibilidadFK_IdTransaccionCuentaNotaVenta) {this.jTabbedPaneBusquedasConfiguracionPunVen.remove(jPanelFK_IdTransaccionCuentaNotaVentaConfiguracionPunVen);}

			this.isVisibilidadFK_IdTransaccionFactura=isParaBodegaNegation;
			if(!this.isVisibilidadFK_IdTransaccionFactura) {this.jTabbedPaneBusquedasConfiguracionPunVen.remove(jPanelFK_IdTransaccionFacturaConfiguracionPunVen);}

			this.isVisibilidadFK_IdTransaccionNotaCredito=isParaBodegaNegation;
			if(!this.isVisibilidadFK_IdTransaccionNotaCredito) {this.jTabbedPaneBusquedasConfiguracionPunVen.remove(jPanelFK_IdTransaccionNotaCreditoConfiguracionPunVen);}

			this.isVisibilidadFK_IdTransaccionNotaVenta=isParaBodegaNegation;
			if(!this.isVisibilidadFK_IdTransaccionNotaVenta) {this.jTabbedPaneBusquedasConfiguracionPunVen.remove(jPanelFK_IdTransaccionNotaVentaConfiguracionPunVen);}
		}
		
	}

	public void setVisibilidadBusquedasParaCuentaContableEfectivo(Boolean isParaCuentaContableEfectivo){
		//BYDAN_BUSQUEDAS
		
		if(!this.conCargarMinimo) {

			Boolean isParaCuentaContableEfectivoNegation=!isParaCuentaContableEfectivo;

			this.isVisibilidadFK_IdBodega=isParaCuentaContableEfectivoNegation;
			if(!this.isVisibilidadFK_IdBodega) {this.jTabbedPaneBusquedasConfiguracionPunVen.remove(jPanelFK_IdBodegaConfiguracionPunVen);}

			this.isVisibilidadFK_IdClienteConsumidorFinal=isParaCuentaContableEfectivoNegation;
			if(!this.isVisibilidadFK_IdClienteConsumidorFinal) {this.jTabbedPaneBusquedasConfiguracionPunVen.remove(jPanelFK_IdClienteConsumidorFinalConfiguracionPunVen);}

			this.isVisibilidadFK_IdCuentaContableEfectivo=isParaCuentaContableEfectivo;
			if(!this.isVisibilidadFK_IdCuentaContableEfectivo) {this.jTabbedPaneBusquedasConfiguracionPunVen.remove(jPanelFK_IdCuentaContableEfectivoConfiguracionPunVen);}

			this.isVisibilidadFK_IdCuentaContableIce=isParaCuentaContableEfectivoNegation;
			if(!this.isVisibilidadFK_IdCuentaContableIce) {this.jTabbedPaneBusquedasConfiguracionPunVen.remove(jPanelFK_IdCuentaContableIceConfiguracionPunVen);}

			this.isVisibilidadFK_IdCuentaContableOtros=isParaCuentaContableEfectivoNegation;
			if(!this.isVisibilidadFK_IdCuentaContableOtros) {this.jTabbedPaneBusquedasConfiguracionPunVen.remove(jPanelFK_IdCuentaContableOtrosConfiguracionPunVen);}

			this.isVisibilidadFK_IdFormatoFactura=isParaCuentaContableEfectivoNegation;
			if(!this.isVisibilidadFK_IdFormatoFactura) {this.jTabbedPaneBusquedasConfiguracionPunVen.remove(jPanelFK_IdFormatoFacturaConfiguracionPunVen);}

			this.isVisibilidadFK_IdFormatoNotaCredito=isParaCuentaContableEfectivoNegation;
			if(!this.isVisibilidadFK_IdFormatoNotaCredito) {this.jTabbedPaneBusquedasConfiguracionPunVen.remove(jPanelFK_IdFormatoNotaCreditoConfiguracionPunVen);}

			this.isVisibilidadFK_IdFormatoNotaVenta=isParaCuentaContableEfectivoNegation;
			if(!this.isVisibilidadFK_IdFormatoNotaVenta) {this.jTabbedPaneBusquedasConfiguracionPunVen.remove(jPanelFK_IdFormatoNotaVentaConfiguracionPunVen);}

			this.isVisibilidadFK_IdTipoDocumentoFactura=isParaCuentaContableEfectivoNegation;
			if(!this.isVisibilidadFK_IdTipoDocumentoFactura) {this.jTabbedPaneBusquedasConfiguracionPunVen.remove(jPanelFK_IdTipoDocumentoFacturaConfiguracionPunVen);}

			this.isVisibilidadFK_IdTipoDocumentoNotaCredito=isParaCuentaContableEfectivoNegation;
			if(!this.isVisibilidadFK_IdTipoDocumentoNotaCredito) {this.jTabbedPaneBusquedasConfiguracionPunVen.remove(jPanelFK_IdTipoDocumentoNotaCreditoConfiguracionPunVen);}

			this.isVisibilidadFK_IdTipoDocumentoNotaVenta=isParaCuentaContableEfectivoNegation;
			if(!this.isVisibilidadFK_IdTipoDocumentoNotaVenta) {this.jTabbedPaneBusquedasConfiguracionPunVen.remove(jPanelFK_IdTipoDocumentoNotaVentaConfiguracionPunVen);}

			this.isVisibilidadFK_IdTipoDocumentoTarjetaCredito=isParaCuentaContableEfectivoNegation;
			if(!this.isVisibilidadFK_IdTipoDocumentoTarjetaCredito) {this.jTabbedPaneBusquedasConfiguracionPunVen.remove(jPanelFK_IdTipoDocumentoTarjetaCreditoConfiguracionPunVen);}

			this.isVisibilidadFK_IdTransaccionCuentaFactura=isParaCuentaContableEfectivoNegation;
			if(!this.isVisibilidadFK_IdTransaccionCuentaFactura) {this.jTabbedPaneBusquedasConfiguracionPunVen.remove(jPanelFK_IdTransaccionCuentaFacturaConfiguracionPunVen);}

			this.isVisibilidadFK_IdTransaccionCuentaNotaCredito=isParaCuentaContableEfectivoNegation;
			if(!this.isVisibilidadFK_IdTransaccionCuentaNotaCredito) {this.jTabbedPaneBusquedasConfiguracionPunVen.remove(jPanelFK_IdTransaccionCuentaNotaCreditoConfiguracionPunVen);}

			this.isVisibilidadFK_IdTransaccionCuentaNotaVenta=isParaCuentaContableEfectivoNegation;
			if(!this.isVisibilidadFK_IdTransaccionCuentaNotaVenta) {this.jTabbedPaneBusquedasConfiguracionPunVen.remove(jPanelFK_IdTransaccionCuentaNotaVentaConfiguracionPunVen);}

			this.isVisibilidadFK_IdTransaccionFactura=isParaCuentaContableEfectivoNegation;
			if(!this.isVisibilidadFK_IdTransaccionFactura) {this.jTabbedPaneBusquedasConfiguracionPunVen.remove(jPanelFK_IdTransaccionFacturaConfiguracionPunVen);}

			this.isVisibilidadFK_IdTransaccionNotaCredito=isParaCuentaContableEfectivoNegation;
			if(!this.isVisibilidadFK_IdTransaccionNotaCredito) {this.jTabbedPaneBusquedasConfiguracionPunVen.remove(jPanelFK_IdTransaccionNotaCreditoConfiguracionPunVen);}

			this.isVisibilidadFK_IdTransaccionNotaVenta=isParaCuentaContableEfectivoNegation;
			if(!this.isVisibilidadFK_IdTransaccionNotaVenta) {this.jTabbedPaneBusquedasConfiguracionPunVen.remove(jPanelFK_IdTransaccionNotaVentaConfiguracionPunVen);}
		}
		
	}

	public void setVisibilidadBusquedasParaCuentaContableIce(Boolean isParaCuentaContableIce){
		//BYDAN_BUSQUEDAS
		
		if(!this.conCargarMinimo) {

			Boolean isParaCuentaContableIceNegation=!isParaCuentaContableIce;

			this.isVisibilidadFK_IdBodega=isParaCuentaContableIceNegation;
			if(!this.isVisibilidadFK_IdBodega) {this.jTabbedPaneBusquedasConfiguracionPunVen.remove(jPanelFK_IdBodegaConfiguracionPunVen);}

			this.isVisibilidadFK_IdClienteConsumidorFinal=isParaCuentaContableIceNegation;
			if(!this.isVisibilidadFK_IdClienteConsumidorFinal) {this.jTabbedPaneBusquedasConfiguracionPunVen.remove(jPanelFK_IdClienteConsumidorFinalConfiguracionPunVen);}

			this.isVisibilidadFK_IdCuentaContableEfectivo=isParaCuentaContableIceNegation;
			if(!this.isVisibilidadFK_IdCuentaContableEfectivo) {this.jTabbedPaneBusquedasConfiguracionPunVen.remove(jPanelFK_IdCuentaContableEfectivoConfiguracionPunVen);}

			this.isVisibilidadFK_IdCuentaContableIce=isParaCuentaContableIce;
			if(!this.isVisibilidadFK_IdCuentaContableIce) {this.jTabbedPaneBusquedasConfiguracionPunVen.remove(jPanelFK_IdCuentaContableIceConfiguracionPunVen);}

			this.isVisibilidadFK_IdCuentaContableOtros=isParaCuentaContableIceNegation;
			if(!this.isVisibilidadFK_IdCuentaContableOtros) {this.jTabbedPaneBusquedasConfiguracionPunVen.remove(jPanelFK_IdCuentaContableOtrosConfiguracionPunVen);}

			this.isVisibilidadFK_IdFormatoFactura=isParaCuentaContableIceNegation;
			if(!this.isVisibilidadFK_IdFormatoFactura) {this.jTabbedPaneBusquedasConfiguracionPunVen.remove(jPanelFK_IdFormatoFacturaConfiguracionPunVen);}

			this.isVisibilidadFK_IdFormatoNotaCredito=isParaCuentaContableIceNegation;
			if(!this.isVisibilidadFK_IdFormatoNotaCredito) {this.jTabbedPaneBusquedasConfiguracionPunVen.remove(jPanelFK_IdFormatoNotaCreditoConfiguracionPunVen);}

			this.isVisibilidadFK_IdFormatoNotaVenta=isParaCuentaContableIceNegation;
			if(!this.isVisibilidadFK_IdFormatoNotaVenta) {this.jTabbedPaneBusquedasConfiguracionPunVen.remove(jPanelFK_IdFormatoNotaVentaConfiguracionPunVen);}

			this.isVisibilidadFK_IdTipoDocumentoFactura=isParaCuentaContableIceNegation;
			if(!this.isVisibilidadFK_IdTipoDocumentoFactura) {this.jTabbedPaneBusquedasConfiguracionPunVen.remove(jPanelFK_IdTipoDocumentoFacturaConfiguracionPunVen);}

			this.isVisibilidadFK_IdTipoDocumentoNotaCredito=isParaCuentaContableIceNegation;
			if(!this.isVisibilidadFK_IdTipoDocumentoNotaCredito) {this.jTabbedPaneBusquedasConfiguracionPunVen.remove(jPanelFK_IdTipoDocumentoNotaCreditoConfiguracionPunVen);}

			this.isVisibilidadFK_IdTipoDocumentoNotaVenta=isParaCuentaContableIceNegation;
			if(!this.isVisibilidadFK_IdTipoDocumentoNotaVenta) {this.jTabbedPaneBusquedasConfiguracionPunVen.remove(jPanelFK_IdTipoDocumentoNotaVentaConfiguracionPunVen);}

			this.isVisibilidadFK_IdTipoDocumentoTarjetaCredito=isParaCuentaContableIceNegation;
			if(!this.isVisibilidadFK_IdTipoDocumentoTarjetaCredito) {this.jTabbedPaneBusquedasConfiguracionPunVen.remove(jPanelFK_IdTipoDocumentoTarjetaCreditoConfiguracionPunVen);}

			this.isVisibilidadFK_IdTransaccionCuentaFactura=isParaCuentaContableIceNegation;
			if(!this.isVisibilidadFK_IdTransaccionCuentaFactura) {this.jTabbedPaneBusquedasConfiguracionPunVen.remove(jPanelFK_IdTransaccionCuentaFacturaConfiguracionPunVen);}

			this.isVisibilidadFK_IdTransaccionCuentaNotaCredito=isParaCuentaContableIceNegation;
			if(!this.isVisibilidadFK_IdTransaccionCuentaNotaCredito) {this.jTabbedPaneBusquedasConfiguracionPunVen.remove(jPanelFK_IdTransaccionCuentaNotaCreditoConfiguracionPunVen);}

			this.isVisibilidadFK_IdTransaccionCuentaNotaVenta=isParaCuentaContableIceNegation;
			if(!this.isVisibilidadFK_IdTransaccionCuentaNotaVenta) {this.jTabbedPaneBusquedasConfiguracionPunVen.remove(jPanelFK_IdTransaccionCuentaNotaVentaConfiguracionPunVen);}

			this.isVisibilidadFK_IdTransaccionFactura=isParaCuentaContableIceNegation;
			if(!this.isVisibilidadFK_IdTransaccionFactura) {this.jTabbedPaneBusquedasConfiguracionPunVen.remove(jPanelFK_IdTransaccionFacturaConfiguracionPunVen);}

			this.isVisibilidadFK_IdTransaccionNotaCredito=isParaCuentaContableIceNegation;
			if(!this.isVisibilidadFK_IdTransaccionNotaCredito) {this.jTabbedPaneBusquedasConfiguracionPunVen.remove(jPanelFK_IdTransaccionNotaCreditoConfiguracionPunVen);}

			this.isVisibilidadFK_IdTransaccionNotaVenta=isParaCuentaContableIceNegation;
			if(!this.isVisibilidadFK_IdTransaccionNotaVenta) {this.jTabbedPaneBusquedasConfiguracionPunVen.remove(jPanelFK_IdTransaccionNotaVentaConfiguracionPunVen);}
		}
		
	}

	public void setVisibilidadBusquedasParaCuentaContableOtros(Boolean isParaCuentaContableOtros){
		//BYDAN_BUSQUEDAS
		
		if(!this.conCargarMinimo) {

			Boolean isParaCuentaContableOtrosNegation=!isParaCuentaContableOtros;

			this.isVisibilidadFK_IdBodega=isParaCuentaContableOtrosNegation;
			if(!this.isVisibilidadFK_IdBodega) {this.jTabbedPaneBusquedasConfiguracionPunVen.remove(jPanelFK_IdBodegaConfiguracionPunVen);}

			this.isVisibilidadFK_IdClienteConsumidorFinal=isParaCuentaContableOtrosNegation;
			if(!this.isVisibilidadFK_IdClienteConsumidorFinal) {this.jTabbedPaneBusquedasConfiguracionPunVen.remove(jPanelFK_IdClienteConsumidorFinalConfiguracionPunVen);}

			this.isVisibilidadFK_IdCuentaContableEfectivo=isParaCuentaContableOtrosNegation;
			if(!this.isVisibilidadFK_IdCuentaContableEfectivo) {this.jTabbedPaneBusquedasConfiguracionPunVen.remove(jPanelFK_IdCuentaContableEfectivoConfiguracionPunVen);}

			this.isVisibilidadFK_IdCuentaContableIce=isParaCuentaContableOtrosNegation;
			if(!this.isVisibilidadFK_IdCuentaContableIce) {this.jTabbedPaneBusquedasConfiguracionPunVen.remove(jPanelFK_IdCuentaContableIceConfiguracionPunVen);}

			this.isVisibilidadFK_IdCuentaContableOtros=isParaCuentaContableOtros;
			if(!this.isVisibilidadFK_IdCuentaContableOtros) {this.jTabbedPaneBusquedasConfiguracionPunVen.remove(jPanelFK_IdCuentaContableOtrosConfiguracionPunVen);}

			this.isVisibilidadFK_IdFormatoFactura=isParaCuentaContableOtrosNegation;
			if(!this.isVisibilidadFK_IdFormatoFactura) {this.jTabbedPaneBusquedasConfiguracionPunVen.remove(jPanelFK_IdFormatoFacturaConfiguracionPunVen);}

			this.isVisibilidadFK_IdFormatoNotaCredito=isParaCuentaContableOtrosNegation;
			if(!this.isVisibilidadFK_IdFormatoNotaCredito) {this.jTabbedPaneBusquedasConfiguracionPunVen.remove(jPanelFK_IdFormatoNotaCreditoConfiguracionPunVen);}

			this.isVisibilidadFK_IdFormatoNotaVenta=isParaCuentaContableOtrosNegation;
			if(!this.isVisibilidadFK_IdFormatoNotaVenta) {this.jTabbedPaneBusquedasConfiguracionPunVen.remove(jPanelFK_IdFormatoNotaVentaConfiguracionPunVen);}

			this.isVisibilidadFK_IdTipoDocumentoFactura=isParaCuentaContableOtrosNegation;
			if(!this.isVisibilidadFK_IdTipoDocumentoFactura) {this.jTabbedPaneBusquedasConfiguracionPunVen.remove(jPanelFK_IdTipoDocumentoFacturaConfiguracionPunVen);}

			this.isVisibilidadFK_IdTipoDocumentoNotaCredito=isParaCuentaContableOtrosNegation;
			if(!this.isVisibilidadFK_IdTipoDocumentoNotaCredito) {this.jTabbedPaneBusquedasConfiguracionPunVen.remove(jPanelFK_IdTipoDocumentoNotaCreditoConfiguracionPunVen);}

			this.isVisibilidadFK_IdTipoDocumentoNotaVenta=isParaCuentaContableOtrosNegation;
			if(!this.isVisibilidadFK_IdTipoDocumentoNotaVenta) {this.jTabbedPaneBusquedasConfiguracionPunVen.remove(jPanelFK_IdTipoDocumentoNotaVentaConfiguracionPunVen);}

			this.isVisibilidadFK_IdTipoDocumentoTarjetaCredito=isParaCuentaContableOtrosNegation;
			if(!this.isVisibilidadFK_IdTipoDocumentoTarjetaCredito) {this.jTabbedPaneBusquedasConfiguracionPunVen.remove(jPanelFK_IdTipoDocumentoTarjetaCreditoConfiguracionPunVen);}

			this.isVisibilidadFK_IdTransaccionCuentaFactura=isParaCuentaContableOtrosNegation;
			if(!this.isVisibilidadFK_IdTransaccionCuentaFactura) {this.jTabbedPaneBusquedasConfiguracionPunVen.remove(jPanelFK_IdTransaccionCuentaFacturaConfiguracionPunVen);}

			this.isVisibilidadFK_IdTransaccionCuentaNotaCredito=isParaCuentaContableOtrosNegation;
			if(!this.isVisibilidadFK_IdTransaccionCuentaNotaCredito) {this.jTabbedPaneBusquedasConfiguracionPunVen.remove(jPanelFK_IdTransaccionCuentaNotaCreditoConfiguracionPunVen);}

			this.isVisibilidadFK_IdTransaccionCuentaNotaVenta=isParaCuentaContableOtrosNegation;
			if(!this.isVisibilidadFK_IdTransaccionCuentaNotaVenta) {this.jTabbedPaneBusquedasConfiguracionPunVen.remove(jPanelFK_IdTransaccionCuentaNotaVentaConfiguracionPunVen);}

			this.isVisibilidadFK_IdTransaccionFactura=isParaCuentaContableOtrosNegation;
			if(!this.isVisibilidadFK_IdTransaccionFactura) {this.jTabbedPaneBusquedasConfiguracionPunVen.remove(jPanelFK_IdTransaccionFacturaConfiguracionPunVen);}

			this.isVisibilidadFK_IdTransaccionNotaCredito=isParaCuentaContableOtrosNegation;
			if(!this.isVisibilidadFK_IdTransaccionNotaCredito) {this.jTabbedPaneBusquedasConfiguracionPunVen.remove(jPanelFK_IdTransaccionNotaCreditoConfiguracionPunVen);}

			this.isVisibilidadFK_IdTransaccionNotaVenta=isParaCuentaContableOtrosNegation;
			if(!this.isVisibilidadFK_IdTransaccionNotaVenta) {this.jTabbedPaneBusquedasConfiguracionPunVen.remove(jPanelFK_IdTransaccionNotaVentaConfiguracionPunVen);}
		}
		
	}

	public void setVisibilidadBusquedasParaClienteConsumidorFinal(Boolean isParaClienteConsumidorFinal){
		//BYDAN_BUSQUEDAS
		
		if(!this.conCargarMinimo) {

			Boolean isParaClienteConsumidorFinalNegation=!isParaClienteConsumidorFinal;

			this.isVisibilidadFK_IdBodega=isParaClienteConsumidorFinalNegation;
			if(!this.isVisibilidadFK_IdBodega) {this.jTabbedPaneBusquedasConfiguracionPunVen.remove(jPanelFK_IdBodegaConfiguracionPunVen);}

			this.isVisibilidadFK_IdClienteConsumidorFinal=isParaClienteConsumidorFinal;
			if(!this.isVisibilidadFK_IdClienteConsumidorFinal) {this.jTabbedPaneBusquedasConfiguracionPunVen.remove(jPanelFK_IdClienteConsumidorFinalConfiguracionPunVen);}

			this.isVisibilidadFK_IdCuentaContableEfectivo=isParaClienteConsumidorFinalNegation;
			if(!this.isVisibilidadFK_IdCuentaContableEfectivo) {this.jTabbedPaneBusquedasConfiguracionPunVen.remove(jPanelFK_IdCuentaContableEfectivoConfiguracionPunVen);}

			this.isVisibilidadFK_IdCuentaContableIce=isParaClienteConsumidorFinalNegation;
			if(!this.isVisibilidadFK_IdCuentaContableIce) {this.jTabbedPaneBusquedasConfiguracionPunVen.remove(jPanelFK_IdCuentaContableIceConfiguracionPunVen);}

			this.isVisibilidadFK_IdCuentaContableOtros=isParaClienteConsumidorFinalNegation;
			if(!this.isVisibilidadFK_IdCuentaContableOtros) {this.jTabbedPaneBusquedasConfiguracionPunVen.remove(jPanelFK_IdCuentaContableOtrosConfiguracionPunVen);}

			this.isVisibilidadFK_IdFormatoFactura=isParaClienteConsumidorFinalNegation;
			if(!this.isVisibilidadFK_IdFormatoFactura) {this.jTabbedPaneBusquedasConfiguracionPunVen.remove(jPanelFK_IdFormatoFacturaConfiguracionPunVen);}

			this.isVisibilidadFK_IdFormatoNotaCredito=isParaClienteConsumidorFinalNegation;
			if(!this.isVisibilidadFK_IdFormatoNotaCredito) {this.jTabbedPaneBusquedasConfiguracionPunVen.remove(jPanelFK_IdFormatoNotaCreditoConfiguracionPunVen);}

			this.isVisibilidadFK_IdFormatoNotaVenta=isParaClienteConsumidorFinalNegation;
			if(!this.isVisibilidadFK_IdFormatoNotaVenta) {this.jTabbedPaneBusquedasConfiguracionPunVen.remove(jPanelFK_IdFormatoNotaVentaConfiguracionPunVen);}

			this.isVisibilidadFK_IdTipoDocumentoFactura=isParaClienteConsumidorFinalNegation;
			if(!this.isVisibilidadFK_IdTipoDocumentoFactura) {this.jTabbedPaneBusquedasConfiguracionPunVen.remove(jPanelFK_IdTipoDocumentoFacturaConfiguracionPunVen);}

			this.isVisibilidadFK_IdTipoDocumentoNotaCredito=isParaClienteConsumidorFinalNegation;
			if(!this.isVisibilidadFK_IdTipoDocumentoNotaCredito) {this.jTabbedPaneBusquedasConfiguracionPunVen.remove(jPanelFK_IdTipoDocumentoNotaCreditoConfiguracionPunVen);}

			this.isVisibilidadFK_IdTipoDocumentoNotaVenta=isParaClienteConsumidorFinalNegation;
			if(!this.isVisibilidadFK_IdTipoDocumentoNotaVenta) {this.jTabbedPaneBusquedasConfiguracionPunVen.remove(jPanelFK_IdTipoDocumentoNotaVentaConfiguracionPunVen);}

			this.isVisibilidadFK_IdTipoDocumentoTarjetaCredito=isParaClienteConsumidorFinalNegation;
			if(!this.isVisibilidadFK_IdTipoDocumentoTarjetaCredito) {this.jTabbedPaneBusquedasConfiguracionPunVen.remove(jPanelFK_IdTipoDocumentoTarjetaCreditoConfiguracionPunVen);}

			this.isVisibilidadFK_IdTransaccionCuentaFactura=isParaClienteConsumidorFinalNegation;
			if(!this.isVisibilidadFK_IdTransaccionCuentaFactura) {this.jTabbedPaneBusquedasConfiguracionPunVen.remove(jPanelFK_IdTransaccionCuentaFacturaConfiguracionPunVen);}

			this.isVisibilidadFK_IdTransaccionCuentaNotaCredito=isParaClienteConsumidorFinalNegation;
			if(!this.isVisibilidadFK_IdTransaccionCuentaNotaCredito) {this.jTabbedPaneBusquedasConfiguracionPunVen.remove(jPanelFK_IdTransaccionCuentaNotaCreditoConfiguracionPunVen);}

			this.isVisibilidadFK_IdTransaccionCuentaNotaVenta=isParaClienteConsumidorFinalNegation;
			if(!this.isVisibilidadFK_IdTransaccionCuentaNotaVenta) {this.jTabbedPaneBusquedasConfiguracionPunVen.remove(jPanelFK_IdTransaccionCuentaNotaVentaConfiguracionPunVen);}

			this.isVisibilidadFK_IdTransaccionFactura=isParaClienteConsumidorFinalNegation;
			if(!this.isVisibilidadFK_IdTransaccionFactura) {this.jTabbedPaneBusquedasConfiguracionPunVen.remove(jPanelFK_IdTransaccionFacturaConfiguracionPunVen);}

			this.isVisibilidadFK_IdTransaccionNotaCredito=isParaClienteConsumidorFinalNegation;
			if(!this.isVisibilidadFK_IdTransaccionNotaCredito) {this.jTabbedPaneBusquedasConfiguracionPunVen.remove(jPanelFK_IdTransaccionNotaCreditoConfiguracionPunVen);}

			this.isVisibilidadFK_IdTransaccionNotaVenta=isParaClienteConsumidorFinalNegation;
			if(!this.isVisibilidadFK_IdTransaccionNotaVenta) {this.jTabbedPaneBusquedasConfiguracionPunVen.remove(jPanelFK_IdTransaccionNotaVentaConfiguracionPunVen);}
		}
		
	}

	public void setVisibilidadBusquedasParaTipoDocumentoFactura(Boolean isParaTipoDocumentoFactura){
		//BYDAN_BUSQUEDAS
		
		if(!this.conCargarMinimo) {

			Boolean isParaTipoDocumentoFacturaNegation=!isParaTipoDocumentoFactura;

			this.isVisibilidadFK_IdBodega=isParaTipoDocumentoFacturaNegation;
			if(!this.isVisibilidadFK_IdBodega) {this.jTabbedPaneBusquedasConfiguracionPunVen.remove(jPanelFK_IdBodegaConfiguracionPunVen);}

			this.isVisibilidadFK_IdClienteConsumidorFinal=isParaTipoDocumentoFacturaNegation;
			if(!this.isVisibilidadFK_IdClienteConsumidorFinal) {this.jTabbedPaneBusquedasConfiguracionPunVen.remove(jPanelFK_IdClienteConsumidorFinalConfiguracionPunVen);}

			this.isVisibilidadFK_IdCuentaContableEfectivo=isParaTipoDocumentoFacturaNegation;
			if(!this.isVisibilidadFK_IdCuentaContableEfectivo) {this.jTabbedPaneBusquedasConfiguracionPunVen.remove(jPanelFK_IdCuentaContableEfectivoConfiguracionPunVen);}

			this.isVisibilidadFK_IdCuentaContableIce=isParaTipoDocumentoFacturaNegation;
			if(!this.isVisibilidadFK_IdCuentaContableIce) {this.jTabbedPaneBusquedasConfiguracionPunVen.remove(jPanelFK_IdCuentaContableIceConfiguracionPunVen);}

			this.isVisibilidadFK_IdCuentaContableOtros=isParaTipoDocumentoFacturaNegation;
			if(!this.isVisibilidadFK_IdCuentaContableOtros) {this.jTabbedPaneBusquedasConfiguracionPunVen.remove(jPanelFK_IdCuentaContableOtrosConfiguracionPunVen);}

			this.isVisibilidadFK_IdFormatoFactura=isParaTipoDocumentoFacturaNegation;
			if(!this.isVisibilidadFK_IdFormatoFactura) {this.jTabbedPaneBusquedasConfiguracionPunVen.remove(jPanelFK_IdFormatoFacturaConfiguracionPunVen);}

			this.isVisibilidadFK_IdFormatoNotaCredito=isParaTipoDocumentoFacturaNegation;
			if(!this.isVisibilidadFK_IdFormatoNotaCredito) {this.jTabbedPaneBusquedasConfiguracionPunVen.remove(jPanelFK_IdFormatoNotaCreditoConfiguracionPunVen);}

			this.isVisibilidadFK_IdFormatoNotaVenta=isParaTipoDocumentoFacturaNegation;
			if(!this.isVisibilidadFK_IdFormatoNotaVenta) {this.jTabbedPaneBusquedasConfiguracionPunVen.remove(jPanelFK_IdFormatoNotaVentaConfiguracionPunVen);}

			this.isVisibilidadFK_IdTipoDocumentoFactura=isParaTipoDocumentoFactura;
			if(!this.isVisibilidadFK_IdTipoDocumentoFactura) {this.jTabbedPaneBusquedasConfiguracionPunVen.remove(jPanelFK_IdTipoDocumentoFacturaConfiguracionPunVen);}

			this.isVisibilidadFK_IdTipoDocumentoNotaCredito=isParaTipoDocumentoFacturaNegation;
			if(!this.isVisibilidadFK_IdTipoDocumentoNotaCredito) {this.jTabbedPaneBusquedasConfiguracionPunVen.remove(jPanelFK_IdTipoDocumentoNotaCreditoConfiguracionPunVen);}

			this.isVisibilidadFK_IdTipoDocumentoNotaVenta=isParaTipoDocumentoFacturaNegation;
			if(!this.isVisibilidadFK_IdTipoDocumentoNotaVenta) {this.jTabbedPaneBusquedasConfiguracionPunVen.remove(jPanelFK_IdTipoDocumentoNotaVentaConfiguracionPunVen);}

			this.isVisibilidadFK_IdTipoDocumentoTarjetaCredito=isParaTipoDocumentoFacturaNegation;
			if(!this.isVisibilidadFK_IdTipoDocumentoTarjetaCredito) {this.jTabbedPaneBusquedasConfiguracionPunVen.remove(jPanelFK_IdTipoDocumentoTarjetaCreditoConfiguracionPunVen);}

			this.isVisibilidadFK_IdTransaccionCuentaFactura=isParaTipoDocumentoFacturaNegation;
			if(!this.isVisibilidadFK_IdTransaccionCuentaFactura) {this.jTabbedPaneBusquedasConfiguracionPunVen.remove(jPanelFK_IdTransaccionCuentaFacturaConfiguracionPunVen);}

			this.isVisibilidadFK_IdTransaccionCuentaNotaCredito=isParaTipoDocumentoFacturaNegation;
			if(!this.isVisibilidadFK_IdTransaccionCuentaNotaCredito) {this.jTabbedPaneBusquedasConfiguracionPunVen.remove(jPanelFK_IdTransaccionCuentaNotaCreditoConfiguracionPunVen);}

			this.isVisibilidadFK_IdTransaccionCuentaNotaVenta=isParaTipoDocumentoFacturaNegation;
			if(!this.isVisibilidadFK_IdTransaccionCuentaNotaVenta) {this.jTabbedPaneBusquedasConfiguracionPunVen.remove(jPanelFK_IdTransaccionCuentaNotaVentaConfiguracionPunVen);}

			this.isVisibilidadFK_IdTransaccionFactura=isParaTipoDocumentoFacturaNegation;
			if(!this.isVisibilidadFK_IdTransaccionFactura) {this.jTabbedPaneBusquedasConfiguracionPunVen.remove(jPanelFK_IdTransaccionFacturaConfiguracionPunVen);}

			this.isVisibilidadFK_IdTransaccionNotaCredito=isParaTipoDocumentoFacturaNegation;
			if(!this.isVisibilidadFK_IdTransaccionNotaCredito) {this.jTabbedPaneBusquedasConfiguracionPunVen.remove(jPanelFK_IdTransaccionNotaCreditoConfiguracionPunVen);}

			this.isVisibilidadFK_IdTransaccionNotaVenta=isParaTipoDocumentoFacturaNegation;
			if(!this.isVisibilidadFK_IdTransaccionNotaVenta) {this.jTabbedPaneBusquedasConfiguracionPunVen.remove(jPanelFK_IdTransaccionNotaVentaConfiguracionPunVen);}
		}
		
	}

	public void setVisibilidadBusquedasParaTipoDocumentoNotaVenta(Boolean isParaTipoDocumentoNotaVenta){
		//BYDAN_BUSQUEDAS
		
		if(!this.conCargarMinimo) {

			Boolean isParaTipoDocumentoNotaVentaNegation=!isParaTipoDocumentoNotaVenta;

			this.isVisibilidadFK_IdBodega=isParaTipoDocumentoNotaVentaNegation;
			if(!this.isVisibilidadFK_IdBodega) {this.jTabbedPaneBusquedasConfiguracionPunVen.remove(jPanelFK_IdBodegaConfiguracionPunVen);}

			this.isVisibilidadFK_IdClienteConsumidorFinal=isParaTipoDocumentoNotaVentaNegation;
			if(!this.isVisibilidadFK_IdClienteConsumidorFinal) {this.jTabbedPaneBusquedasConfiguracionPunVen.remove(jPanelFK_IdClienteConsumidorFinalConfiguracionPunVen);}

			this.isVisibilidadFK_IdCuentaContableEfectivo=isParaTipoDocumentoNotaVentaNegation;
			if(!this.isVisibilidadFK_IdCuentaContableEfectivo) {this.jTabbedPaneBusquedasConfiguracionPunVen.remove(jPanelFK_IdCuentaContableEfectivoConfiguracionPunVen);}

			this.isVisibilidadFK_IdCuentaContableIce=isParaTipoDocumentoNotaVentaNegation;
			if(!this.isVisibilidadFK_IdCuentaContableIce) {this.jTabbedPaneBusquedasConfiguracionPunVen.remove(jPanelFK_IdCuentaContableIceConfiguracionPunVen);}

			this.isVisibilidadFK_IdCuentaContableOtros=isParaTipoDocumentoNotaVentaNegation;
			if(!this.isVisibilidadFK_IdCuentaContableOtros) {this.jTabbedPaneBusquedasConfiguracionPunVen.remove(jPanelFK_IdCuentaContableOtrosConfiguracionPunVen);}

			this.isVisibilidadFK_IdFormatoFactura=isParaTipoDocumentoNotaVentaNegation;
			if(!this.isVisibilidadFK_IdFormatoFactura) {this.jTabbedPaneBusquedasConfiguracionPunVen.remove(jPanelFK_IdFormatoFacturaConfiguracionPunVen);}

			this.isVisibilidadFK_IdFormatoNotaCredito=isParaTipoDocumentoNotaVentaNegation;
			if(!this.isVisibilidadFK_IdFormatoNotaCredito) {this.jTabbedPaneBusquedasConfiguracionPunVen.remove(jPanelFK_IdFormatoNotaCreditoConfiguracionPunVen);}

			this.isVisibilidadFK_IdFormatoNotaVenta=isParaTipoDocumentoNotaVentaNegation;
			if(!this.isVisibilidadFK_IdFormatoNotaVenta) {this.jTabbedPaneBusquedasConfiguracionPunVen.remove(jPanelFK_IdFormatoNotaVentaConfiguracionPunVen);}

			this.isVisibilidadFK_IdTipoDocumentoFactura=isParaTipoDocumentoNotaVentaNegation;
			if(!this.isVisibilidadFK_IdTipoDocumentoFactura) {this.jTabbedPaneBusquedasConfiguracionPunVen.remove(jPanelFK_IdTipoDocumentoFacturaConfiguracionPunVen);}

			this.isVisibilidadFK_IdTipoDocumentoNotaCredito=isParaTipoDocumentoNotaVentaNegation;
			if(!this.isVisibilidadFK_IdTipoDocumentoNotaCredito) {this.jTabbedPaneBusquedasConfiguracionPunVen.remove(jPanelFK_IdTipoDocumentoNotaCreditoConfiguracionPunVen);}

			this.isVisibilidadFK_IdTipoDocumentoNotaVenta=isParaTipoDocumentoNotaVenta;
			if(!this.isVisibilidadFK_IdTipoDocumentoNotaVenta) {this.jTabbedPaneBusquedasConfiguracionPunVen.remove(jPanelFK_IdTipoDocumentoNotaVentaConfiguracionPunVen);}

			this.isVisibilidadFK_IdTipoDocumentoTarjetaCredito=isParaTipoDocumentoNotaVentaNegation;
			if(!this.isVisibilidadFK_IdTipoDocumentoTarjetaCredito) {this.jTabbedPaneBusquedasConfiguracionPunVen.remove(jPanelFK_IdTipoDocumentoTarjetaCreditoConfiguracionPunVen);}

			this.isVisibilidadFK_IdTransaccionCuentaFactura=isParaTipoDocumentoNotaVentaNegation;
			if(!this.isVisibilidadFK_IdTransaccionCuentaFactura) {this.jTabbedPaneBusquedasConfiguracionPunVen.remove(jPanelFK_IdTransaccionCuentaFacturaConfiguracionPunVen);}

			this.isVisibilidadFK_IdTransaccionCuentaNotaCredito=isParaTipoDocumentoNotaVentaNegation;
			if(!this.isVisibilidadFK_IdTransaccionCuentaNotaCredito) {this.jTabbedPaneBusquedasConfiguracionPunVen.remove(jPanelFK_IdTransaccionCuentaNotaCreditoConfiguracionPunVen);}

			this.isVisibilidadFK_IdTransaccionCuentaNotaVenta=isParaTipoDocumentoNotaVentaNegation;
			if(!this.isVisibilidadFK_IdTransaccionCuentaNotaVenta) {this.jTabbedPaneBusquedasConfiguracionPunVen.remove(jPanelFK_IdTransaccionCuentaNotaVentaConfiguracionPunVen);}

			this.isVisibilidadFK_IdTransaccionFactura=isParaTipoDocumentoNotaVentaNegation;
			if(!this.isVisibilidadFK_IdTransaccionFactura) {this.jTabbedPaneBusquedasConfiguracionPunVen.remove(jPanelFK_IdTransaccionFacturaConfiguracionPunVen);}

			this.isVisibilidadFK_IdTransaccionNotaCredito=isParaTipoDocumentoNotaVentaNegation;
			if(!this.isVisibilidadFK_IdTransaccionNotaCredito) {this.jTabbedPaneBusquedasConfiguracionPunVen.remove(jPanelFK_IdTransaccionNotaCreditoConfiguracionPunVen);}

			this.isVisibilidadFK_IdTransaccionNotaVenta=isParaTipoDocumentoNotaVentaNegation;
			if(!this.isVisibilidadFK_IdTransaccionNotaVenta) {this.jTabbedPaneBusquedasConfiguracionPunVen.remove(jPanelFK_IdTransaccionNotaVentaConfiguracionPunVen);}
		}
		
	}

	public void setVisibilidadBusquedasParaTipoDocumentoNotaCredito(Boolean isParaTipoDocumentoNotaCredito){
		//BYDAN_BUSQUEDAS
		
		if(!this.conCargarMinimo) {

			Boolean isParaTipoDocumentoNotaCreditoNegation=!isParaTipoDocumentoNotaCredito;

			this.isVisibilidadFK_IdBodega=isParaTipoDocumentoNotaCreditoNegation;
			if(!this.isVisibilidadFK_IdBodega) {this.jTabbedPaneBusquedasConfiguracionPunVen.remove(jPanelFK_IdBodegaConfiguracionPunVen);}

			this.isVisibilidadFK_IdClienteConsumidorFinal=isParaTipoDocumentoNotaCreditoNegation;
			if(!this.isVisibilidadFK_IdClienteConsumidorFinal) {this.jTabbedPaneBusquedasConfiguracionPunVen.remove(jPanelFK_IdClienteConsumidorFinalConfiguracionPunVen);}

			this.isVisibilidadFK_IdCuentaContableEfectivo=isParaTipoDocumentoNotaCreditoNegation;
			if(!this.isVisibilidadFK_IdCuentaContableEfectivo) {this.jTabbedPaneBusquedasConfiguracionPunVen.remove(jPanelFK_IdCuentaContableEfectivoConfiguracionPunVen);}

			this.isVisibilidadFK_IdCuentaContableIce=isParaTipoDocumentoNotaCreditoNegation;
			if(!this.isVisibilidadFK_IdCuentaContableIce) {this.jTabbedPaneBusquedasConfiguracionPunVen.remove(jPanelFK_IdCuentaContableIceConfiguracionPunVen);}

			this.isVisibilidadFK_IdCuentaContableOtros=isParaTipoDocumentoNotaCreditoNegation;
			if(!this.isVisibilidadFK_IdCuentaContableOtros) {this.jTabbedPaneBusquedasConfiguracionPunVen.remove(jPanelFK_IdCuentaContableOtrosConfiguracionPunVen);}

			this.isVisibilidadFK_IdFormatoFactura=isParaTipoDocumentoNotaCreditoNegation;
			if(!this.isVisibilidadFK_IdFormatoFactura) {this.jTabbedPaneBusquedasConfiguracionPunVen.remove(jPanelFK_IdFormatoFacturaConfiguracionPunVen);}

			this.isVisibilidadFK_IdFormatoNotaCredito=isParaTipoDocumentoNotaCreditoNegation;
			if(!this.isVisibilidadFK_IdFormatoNotaCredito) {this.jTabbedPaneBusquedasConfiguracionPunVen.remove(jPanelFK_IdFormatoNotaCreditoConfiguracionPunVen);}

			this.isVisibilidadFK_IdFormatoNotaVenta=isParaTipoDocumentoNotaCreditoNegation;
			if(!this.isVisibilidadFK_IdFormatoNotaVenta) {this.jTabbedPaneBusquedasConfiguracionPunVen.remove(jPanelFK_IdFormatoNotaVentaConfiguracionPunVen);}

			this.isVisibilidadFK_IdTipoDocumentoFactura=isParaTipoDocumentoNotaCreditoNegation;
			if(!this.isVisibilidadFK_IdTipoDocumentoFactura) {this.jTabbedPaneBusquedasConfiguracionPunVen.remove(jPanelFK_IdTipoDocumentoFacturaConfiguracionPunVen);}

			this.isVisibilidadFK_IdTipoDocumentoNotaCredito=isParaTipoDocumentoNotaCredito;
			if(!this.isVisibilidadFK_IdTipoDocumentoNotaCredito) {this.jTabbedPaneBusquedasConfiguracionPunVen.remove(jPanelFK_IdTipoDocumentoNotaCreditoConfiguracionPunVen);}

			this.isVisibilidadFK_IdTipoDocumentoNotaVenta=isParaTipoDocumentoNotaCreditoNegation;
			if(!this.isVisibilidadFK_IdTipoDocumentoNotaVenta) {this.jTabbedPaneBusquedasConfiguracionPunVen.remove(jPanelFK_IdTipoDocumentoNotaVentaConfiguracionPunVen);}

			this.isVisibilidadFK_IdTipoDocumentoTarjetaCredito=isParaTipoDocumentoNotaCreditoNegation;
			if(!this.isVisibilidadFK_IdTipoDocumentoTarjetaCredito) {this.jTabbedPaneBusquedasConfiguracionPunVen.remove(jPanelFK_IdTipoDocumentoTarjetaCreditoConfiguracionPunVen);}

			this.isVisibilidadFK_IdTransaccionCuentaFactura=isParaTipoDocumentoNotaCreditoNegation;
			if(!this.isVisibilidadFK_IdTransaccionCuentaFactura) {this.jTabbedPaneBusquedasConfiguracionPunVen.remove(jPanelFK_IdTransaccionCuentaFacturaConfiguracionPunVen);}

			this.isVisibilidadFK_IdTransaccionCuentaNotaCredito=isParaTipoDocumentoNotaCreditoNegation;
			if(!this.isVisibilidadFK_IdTransaccionCuentaNotaCredito) {this.jTabbedPaneBusquedasConfiguracionPunVen.remove(jPanelFK_IdTransaccionCuentaNotaCreditoConfiguracionPunVen);}

			this.isVisibilidadFK_IdTransaccionCuentaNotaVenta=isParaTipoDocumentoNotaCreditoNegation;
			if(!this.isVisibilidadFK_IdTransaccionCuentaNotaVenta) {this.jTabbedPaneBusquedasConfiguracionPunVen.remove(jPanelFK_IdTransaccionCuentaNotaVentaConfiguracionPunVen);}

			this.isVisibilidadFK_IdTransaccionFactura=isParaTipoDocumentoNotaCreditoNegation;
			if(!this.isVisibilidadFK_IdTransaccionFactura) {this.jTabbedPaneBusquedasConfiguracionPunVen.remove(jPanelFK_IdTransaccionFacturaConfiguracionPunVen);}

			this.isVisibilidadFK_IdTransaccionNotaCredito=isParaTipoDocumentoNotaCreditoNegation;
			if(!this.isVisibilidadFK_IdTransaccionNotaCredito) {this.jTabbedPaneBusquedasConfiguracionPunVen.remove(jPanelFK_IdTransaccionNotaCreditoConfiguracionPunVen);}

			this.isVisibilidadFK_IdTransaccionNotaVenta=isParaTipoDocumentoNotaCreditoNegation;
			if(!this.isVisibilidadFK_IdTransaccionNotaVenta) {this.jTabbedPaneBusquedasConfiguracionPunVen.remove(jPanelFK_IdTransaccionNotaVentaConfiguracionPunVen);}
		}
		
	}

	public void setVisibilidadBusquedasParaTipoDocumentoTarjetaCredito(Boolean isParaTipoDocumentoTarjetaCredito){
		//BYDAN_BUSQUEDAS
		
		if(!this.conCargarMinimo) {

			Boolean isParaTipoDocumentoTarjetaCreditoNegation=!isParaTipoDocumentoTarjetaCredito;

			this.isVisibilidadFK_IdBodega=isParaTipoDocumentoTarjetaCreditoNegation;
			if(!this.isVisibilidadFK_IdBodega) {this.jTabbedPaneBusquedasConfiguracionPunVen.remove(jPanelFK_IdBodegaConfiguracionPunVen);}

			this.isVisibilidadFK_IdClienteConsumidorFinal=isParaTipoDocumentoTarjetaCreditoNegation;
			if(!this.isVisibilidadFK_IdClienteConsumidorFinal) {this.jTabbedPaneBusquedasConfiguracionPunVen.remove(jPanelFK_IdClienteConsumidorFinalConfiguracionPunVen);}

			this.isVisibilidadFK_IdCuentaContableEfectivo=isParaTipoDocumentoTarjetaCreditoNegation;
			if(!this.isVisibilidadFK_IdCuentaContableEfectivo) {this.jTabbedPaneBusquedasConfiguracionPunVen.remove(jPanelFK_IdCuentaContableEfectivoConfiguracionPunVen);}

			this.isVisibilidadFK_IdCuentaContableIce=isParaTipoDocumentoTarjetaCreditoNegation;
			if(!this.isVisibilidadFK_IdCuentaContableIce) {this.jTabbedPaneBusquedasConfiguracionPunVen.remove(jPanelFK_IdCuentaContableIceConfiguracionPunVen);}

			this.isVisibilidadFK_IdCuentaContableOtros=isParaTipoDocumentoTarjetaCreditoNegation;
			if(!this.isVisibilidadFK_IdCuentaContableOtros) {this.jTabbedPaneBusquedasConfiguracionPunVen.remove(jPanelFK_IdCuentaContableOtrosConfiguracionPunVen);}

			this.isVisibilidadFK_IdFormatoFactura=isParaTipoDocumentoTarjetaCreditoNegation;
			if(!this.isVisibilidadFK_IdFormatoFactura) {this.jTabbedPaneBusquedasConfiguracionPunVen.remove(jPanelFK_IdFormatoFacturaConfiguracionPunVen);}

			this.isVisibilidadFK_IdFormatoNotaCredito=isParaTipoDocumentoTarjetaCreditoNegation;
			if(!this.isVisibilidadFK_IdFormatoNotaCredito) {this.jTabbedPaneBusquedasConfiguracionPunVen.remove(jPanelFK_IdFormatoNotaCreditoConfiguracionPunVen);}

			this.isVisibilidadFK_IdFormatoNotaVenta=isParaTipoDocumentoTarjetaCreditoNegation;
			if(!this.isVisibilidadFK_IdFormatoNotaVenta) {this.jTabbedPaneBusquedasConfiguracionPunVen.remove(jPanelFK_IdFormatoNotaVentaConfiguracionPunVen);}

			this.isVisibilidadFK_IdTipoDocumentoFactura=isParaTipoDocumentoTarjetaCreditoNegation;
			if(!this.isVisibilidadFK_IdTipoDocumentoFactura) {this.jTabbedPaneBusquedasConfiguracionPunVen.remove(jPanelFK_IdTipoDocumentoFacturaConfiguracionPunVen);}

			this.isVisibilidadFK_IdTipoDocumentoNotaCredito=isParaTipoDocumentoTarjetaCreditoNegation;
			if(!this.isVisibilidadFK_IdTipoDocumentoNotaCredito) {this.jTabbedPaneBusquedasConfiguracionPunVen.remove(jPanelFK_IdTipoDocumentoNotaCreditoConfiguracionPunVen);}

			this.isVisibilidadFK_IdTipoDocumentoNotaVenta=isParaTipoDocumentoTarjetaCreditoNegation;
			if(!this.isVisibilidadFK_IdTipoDocumentoNotaVenta) {this.jTabbedPaneBusquedasConfiguracionPunVen.remove(jPanelFK_IdTipoDocumentoNotaVentaConfiguracionPunVen);}

			this.isVisibilidadFK_IdTipoDocumentoTarjetaCredito=isParaTipoDocumentoTarjetaCredito;
			if(!this.isVisibilidadFK_IdTipoDocumentoTarjetaCredito) {this.jTabbedPaneBusquedasConfiguracionPunVen.remove(jPanelFK_IdTipoDocumentoTarjetaCreditoConfiguracionPunVen);}

			this.isVisibilidadFK_IdTransaccionCuentaFactura=isParaTipoDocumentoTarjetaCreditoNegation;
			if(!this.isVisibilidadFK_IdTransaccionCuentaFactura) {this.jTabbedPaneBusquedasConfiguracionPunVen.remove(jPanelFK_IdTransaccionCuentaFacturaConfiguracionPunVen);}

			this.isVisibilidadFK_IdTransaccionCuentaNotaCredito=isParaTipoDocumentoTarjetaCreditoNegation;
			if(!this.isVisibilidadFK_IdTransaccionCuentaNotaCredito) {this.jTabbedPaneBusquedasConfiguracionPunVen.remove(jPanelFK_IdTransaccionCuentaNotaCreditoConfiguracionPunVen);}

			this.isVisibilidadFK_IdTransaccionCuentaNotaVenta=isParaTipoDocumentoTarjetaCreditoNegation;
			if(!this.isVisibilidadFK_IdTransaccionCuentaNotaVenta) {this.jTabbedPaneBusquedasConfiguracionPunVen.remove(jPanelFK_IdTransaccionCuentaNotaVentaConfiguracionPunVen);}

			this.isVisibilidadFK_IdTransaccionFactura=isParaTipoDocumentoTarjetaCreditoNegation;
			if(!this.isVisibilidadFK_IdTransaccionFactura) {this.jTabbedPaneBusquedasConfiguracionPunVen.remove(jPanelFK_IdTransaccionFacturaConfiguracionPunVen);}

			this.isVisibilidadFK_IdTransaccionNotaCredito=isParaTipoDocumentoTarjetaCreditoNegation;
			if(!this.isVisibilidadFK_IdTransaccionNotaCredito) {this.jTabbedPaneBusquedasConfiguracionPunVen.remove(jPanelFK_IdTransaccionNotaCreditoConfiguracionPunVen);}

			this.isVisibilidadFK_IdTransaccionNotaVenta=isParaTipoDocumentoTarjetaCreditoNegation;
			if(!this.isVisibilidadFK_IdTransaccionNotaVenta) {this.jTabbedPaneBusquedasConfiguracionPunVen.remove(jPanelFK_IdTransaccionNotaVentaConfiguracionPunVen);}
		}
		
	}

	public void setVisibilidadBusquedasParaFormatoFactura(Boolean isParaFormatoFactura){
		//BYDAN_BUSQUEDAS
		
		if(!this.conCargarMinimo) {

			Boolean isParaFormatoFacturaNegation=!isParaFormatoFactura;

			this.isVisibilidadFK_IdBodega=isParaFormatoFacturaNegation;
			if(!this.isVisibilidadFK_IdBodega) {this.jTabbedPaneBusquedasConfiguracionPunVen.remove(jPanelFK_IdBodegaConfiguracionPunVen);}

			this.isVisibilidadFK_IdClienteConsumidorFinal=isParaFormatoFacturaNegation;
			if(!this.isVisibilidadFK_IdClienteConsumidorFinal) {this.jTabbedPaneBusquedasConfiguracionPunVen.remove(jPanelFK_IdClienteConsumidorFinalConfiguracionPunVen);}

			this.isVisibilidadFK_IdCuentaContableEfectivo=isParaFormatoFacturaNegation;
			if(!this.isVisibilidadFK_IdCuentaContableEfectivo) {this.jTabbedPaneBusquedasConfiguracionPunVen.remove(jPanelFK_IdCuentaContableEfectivoConfiguracionPunVen);}

			this.isVisibilidadFK_IdCuentaContableIce=isParaFormatoFacturaNegation;
			if(!this.isVisibilidadFK_IdCuentaContableIce) {this.jTabbedPaneBusquedasConfiguracionPunVen.remove(jPanelFK_IdCuentaContableIceConfiguracionPunVen);}

			this.isVisibilidadFK_IdCuentaContableOtros=isParaFormatoFacturaNegation;
			if(!this.isVisibilidadFK_IdCuentaContableOtros) {this.jTabbedPaneBusquedasConfiguracionPunVen.remove(jPanelFK_IdCuentaContableOtrosConfiguracionPunVen);}

			this.isVisibilidadFK_IdFormatoFactura=isParaFormatoFactura;
			if(!this.isVisibilidadFK_IdFormatoFactura) {this.jTabbedPaneBusquedasConfiguracionPunVen.remove(jPanelFK_IdFormatoFacturaConfiguracionPunVen);}

			this.isVisibilidadFK_IdFormatoNotaCredito=isParaFormatoFacturaNegation;
			if(!this.isVisibilidadFK_IdFormatoNotaCredito) {this.jTabbedPaneBusquedasConfiguracionPunVen.remove(jPanelFK_IdFormatoNotaCreditoConfiguracionPunVen);}

			this.isVisibilidadFK_IdFormatoNotaVenta=isParaFormatoFacturaNegation;
			if(!this.isVisibilidadFK_IdFormatoNotaVenta) {this.jTabbedPaneBusquedasConfiguracionPunVen.remove(jPanelFK_IdFormatoNotaVentaConfiguracionPunVen);}

			this.isVisibilidadFK_IdTipoDocumentoFactura=isParaFormatoFacturaNegation;
			if(!this.isVisibilidadFK_IdTipoDocumentoFactura) {this.jTabbedPaneBusquedasConfiguracionPunVen.remove(jPanelFK_IdTipoDocumentoFacturaConfiguracionPunVen);}

			this.isVisibilidadFK_IdTipoDocumentoNotaCredito=isParaFormatoFacturaNegation;
			if(!this.isVisibilidadFK_IdTipoDocumentoNotaCredito) {this.jTabbedPaneBusquedasConfiguracionPunVen.remove(jPanelFK_IdTipoDocumentoNotaCreditoConfiguracionPunVen);}

			this.isVisibilidadFK_IdTipoDocumentoNotaVenta=isParaFormatoFacturaNegation;
			if(!this.isVisibilidadFK_IdTipoDocumentoNotaVenta) {this.jTabbedPaneBusquedasConfiguracionPunVen.remove(jPanelFK_IdTipoDocumentoNotaVentaConfiguracionPunVen);}

			this.isVisibilidadFK_IdTipoDocumentoTarjetaCredito=isParaFormatoFacturaNegation;
			if(!this.isVisibilidadFK_IdTipoDocumentoTarjetaCredito) {this.jTabbedPaneBusquedasConfiguracionPunVen.remove(jPanelFK_IdTipoDocumentoTarjetaCreditoConfiguracionPunVen);}

			this.isVisibilidadFK_IdTransaccionCuentaFactura=isParaFormatoFacturaNegation;
			if(!this.isVisibilidadFK_IdTransaccionCuentaFactura) {this.jTabbedPaneBusquedasConfiguracionPunVen.remove(jPanelFK_IdTransaccionCuentaFacturaConfiguracionPunVen);}

			this.isVisibilidadFK_IdTransaccionCuentaNotaCredito=isParaFormatoFacturaNegation;
			if(!this.isVisibilidadFK_IdTransaccionCuentaNotaCredito) {this.jTabbedPaneBusquedasConfiguracionPunVen.remove(jPanelFK_IdTransaccionCuentaNotaCreditoConfiguracionPunVen);}

			this.isVisibilidadFK_IdTransaccionCuentaNotaVenta=isParaFormatoFacturaNegation;
			if(!this.isVisibilidadFK_IdTransaccionCuentaNotaVenta) {this.jTabbedPaneBusquedasConfiguracionPunVen.remove(jPanelFK_IdTransaccionCuentaNotaVentaConfiguracionPunVen);}

			this.isVisibilidadFK_IdTransaccionFactura=isParaFormatoFacturaNegation;
			if(!this.isVisibilidadFK_IdTransaccionFactura) {this.jTabbedPaneBusquedasConfiguracionPunVen.remove(jPanelFK_IdTransaccionFacturaConfiguracionPunVen);}

			this.isVisibilidadFK_IdTransaccionNotaCredito=isParaFormatoFacturaNegation;
			if(!this.isVisibilidadFK_IdTransaccionNotaCredito) {this.jTabbedPaneBusquedasConfiguracionPunVen.remove(jPanelFK_IdTransaccionNotaCreditoConfiguracionPunVen);}

			this.isVisibilidadFK_IdTransaccionNotaVenta=isParaFormatoFacturaNegation;
			if(!this.isVisibilidadFK_IdTransaccionNotaVenta) {this.jTabbedPaneBusquedasConfiguracionPunVen.remove(jPanelFK_IdTransaccionNotaVentaConfiguracionPunVen);}
		}
		
	}

	public void setVisibilidadBusquedasParaFormatoNotaVenta(Boolean isParaFormatoNotaVenta){
		//BYDAN_BUSQUEDAS
		
		if(!this.conCargarMinimo) {

			Boolean isParaFormatoNotaVentaNegation=!isParaFormatoNotaVenta;

			this.isVisibilidadFK_IdBodega=isParaFormatoNotaVentaNegation;
			if(!this.isVisibilidadFK_IdBodega) {this.jTabbedPaneBusquedasConfiguracionPunVen.remove(jPanelFK_IdBodegaConfiguracionPunVen);}

			this.isVisibilidadFK_IdClienteConsumidorFinal=isParaFormatoNotaVentaNegation;
			if(!this.isVisibilidadFK_IdClienteConsumidorFinal) {this.jTabbedPaneBusquedasConfiguracionPunVen.remove(jPanelFK_IdClienteConsumidorFinalConfiguracionPunVen);}

			this.isVisibilidadFK_IdCuentaContableEfectivo=isParaFormatoNotaVentaNegation;
			if(!this.isVisibilidadFK_IdCuentaContableEfectivo) {this.jTabbedPaneBusquedasConfiguracionPunVen.remove(jPanelFK_IdCuentaContableEfectivoConfiguracionPunVen);}

			this.isVisibilidadFK_IdCuentaContableIce=isParaFormatoNotaVentaNegation;
			if(!this.isVisibilidadFK_IdCuentaContableIce) {this.jTabbedPaneBusquedasConfiguracionPunVen.remove(jPanelFK_IdCuentaContableIceConfiguracionPunVen);}

			this.isVisibilidadFK_IdCuentaContableOtros=isParaFormatoNotaVentaNegation;
			if(!this.isVisibilidadFK_IdCuentaContableOtros) {this.jTabbedPaneBusquedasConfiguracionPunVen.remove(jPanelFK_IdCuentaContableOtrosConfiguracionPunVen);}

			this.isVisibilidadFK_IdFormatoFactura=isParaFormatoNotaVentaNegation;
			if(!this.isVisibilidadFK_IdFormatoFactura) {this.jTabbedPaneBusquedasConfiguracionPunVen.remove(jPanelFK_IdFormatoFacturaConfiguracionPunVen);}

			this.isVisibilidadFK_IdFormatoNotaCredito=isParaFormatoNotaVentaNegation;
			if(!this.isVisibilidadFK_IdFormatoNotaCredito) {this.jTabbedPaneBusquedasConfiguracionPunVen.remove(jPanelFK_IdFormatoNotaCreditoConfiguracionPunVen);}

			this.isVisibilidadFK_IdFormatoNotaVenta=isParaFormatoNotaVenta;
			if(!this.isVisibilidadFK_IdFormatoNotaVenta) {this.jTabbedPaneBusquedasConfiguracionPunVen.remove(jPanelFK_IdFormatoNotaVentaConfiguracionPunVen);}

			this.isVisibilidadFK_IdTipoDocumentoFactura=isParaFormatoNotaVentaNegation;
			if(!this.isVisibilidadFK_IdTipoDocumentoFactura) {this.jTabbedPaneBusquedasConfiguracionPunVen.remove(jPanelFK_IdTipoDocumentoFacturaConfiguracionPunVen);}

			this.isVisibilidadFK_IdTipoDocumentoNotaCredito=isParaFormatoNotaVentaNegation;
			if(!this.isVisibilidadFK_IdTipoDocumentoNotaCredito) {this.jTabbedPaneBusquedasConfiguracionPunVen.remove(jPanelFK_IdTipoDocumentoNotaCreditoConfiguracionPunVen);}

			this.isVisibilidadFK_IdTipoDocumentoNotaVenta=isParaFormatoNotaVentaNegation;
			if(!this.isVisibilidadFK_IdTipoDocumentoNotaVenta) {this.jTabbedPaneBusquedasConfiguracionPunVen.remove(jPanelFK_IdTipoDocumentoNotaVentaConfiguracionPunVen);}

			this.isVisibilidadFK_IdTipoDocumentoTarjetaCredito=isParaFormatoNotaVentaNegation;
			if(!this.isVisibilidadFK_IdTipoDocumentoTarjetaCredito) {this.jTabbedPaneBusquedasConfiguracionPunVen.remove(jPanelFK_IdTipoDocumentoTarjetaCreditoConfiguracionPunVen);}

			this.isVisibilidadFK_IdTransaccionCuentaFactura=isParaFormatoNotaVentaNegation;
			if(!this.isVisibilidadFK_IdTransaccionCuentaFactura) {this.jTabbedPaneBusquedasConfiguracionPunVen.remove(jPanelFK_IdTransaccionCuentaFacturaConfiguracionPunVen);}

			this.isVisibilidadFK_IdTransaccionCuentaNotaCredito=isParaFormatoNotaVentaNegation;
			if(!this.isVisibilidadFK_IdTransaccionCuentaNotaCredito) {this.jTabbedPaneBusquedasConfiguracionPunVen.remove(jPanelFK_IdTransaccionCuentaNotaCreditoConfiguracionPunVen);}

			this.isVisibilidadFK_IdTransaccionCuentaNotaVenta=isParaFormatoNotaVentaNegation;
			if(!this.isVisibilidadFK_IdTransaccionCuentaNotaVenta) {this.jTabbedPaneBusquedasConfiguracionPunVen.remove(jPanelFK_IdTransaccionCuentaNotaVentaConfiguracionPunVen);}

			this.isVisibilidadFK_IdTransaccionFactura=isParaFormatoNotaVentaNegation;
			if(!this.isVisibilidadFK_IdTransaccionFactura) {this.jTabbedPaneBusquedasConfiguracionPunVen.remove(jPanelFK_IdTransaccionFacturaConfiguracionPunVen);}

			this.isVisibilidadFK_IdTransaccionNotaCredito=isParaFormatoNotaVentaNegation;
			if(!this.isVisibilidadFK_IdTransaccionNotaCredito) {this.jTabbedPaneBusquedasConfiguracionPunVen.remove(jPanelFK_IdTransaccionNotaCreditoConfiguracionPunVen);}

			this.isVisibilidadFK_IdTransaccionNotaVenta=isParaFormatoNotaVentaNegation;
			if(!this.isVisibilidadFK_IdTransaccionNotaVenta) {this.jTabbedPaneBusquedasConfiguracionPunVen.remove(jPanelFK_IdTransaccionNotaVentaConfiguracionPunVen);}
		}
		
	}

	public void setVisibilidadBusquedasParaFormatoNotaCredito(Boolean isParaFormatoNotaCredito){
		//BYDAN_BUSQUEDAS
		
		if(!this.conCargarMinimo) {

			Boolean isParaFormatoNotaCreditoNegation=!isParaFormatoNotaCredito;

			this.isVisibilidadFK_IdBodega=isParaFormatoNotaCreditoNegation;
			if(!this.isVisibilidadFK_IdBodega) {this.jTabbedPaneBusquedasConfiguracionPunVen.remove(jPanelFK_IdBodegaConfiguracionPunVen);}

			this.isVisibilidadFK_IdClienteConsumidorFinal=isParaFormatoNotaCreditoNegation;
			if(!this.isVisibilidadFK_IdClienteConsumidorFinal) {this.jTabbedPaneBusquedasConfiguracionPunVen.remove(jPanelFK_IdClienteConsumidorFinalConfiguracionPunVen);}

			this.isVisibilidadFK_IdCuentaContableEfectivo=isParaFormatoNotaCreditoNegation;
			if(!this.isVisibilidadFK_IdCuentaContableEfectivo) {this.jTabbedPaneBusquedasConfiguracionPunVen.remove(jPanelFK_IdCuentaContableEfectivoConfiguracionPunVen);}

			this.isVisibilidadFK_IdCuentaContableIce=isParaFormatoNotaCreditoNegation;
			if(!this.isVisibilidadFK_IdCuentaContableIce) {this.jTabbedPaneBusquedasConfiguracionPunVen.remove(jPanelFK_IdCuentaContableIceConfiguracionPunVen);}

			this.isVisibilidadFK_IdCuentaContableOtros=isParaFormatoNotaCreditoNegation;
			if(!this.isVisibilidadFK_IdCuentaContableOtros) {this.jTabbedPaneBusquedasConfiguracionPunVen.remove(jPanelFK_IdCuentaContableOtrosConfiguracionPunVen);}

			this.isVisibilidadFK_IdFormatoFactura=isParaFormatoNotaCreditoNegation;
			if(!this.isVisibilidadFK_IdFormatoFactura) {this.jTabbedPaneBusquedasConfiguracionPunVen.remove(jPanelFK_IdFormatoFacturaConfiguracionPunVen);}

			this.isVisibilidadFK_IdFormatoNotaCredito=isParaFormatoNotaCredito;
			if(!this.isVisibilidadFK_IdFormatoNotaCredito) {this.jTabbedPaneBusquedasConfiguracionPunVen.remove(jPanelFK_IdFormatoNotaCreditoConfiguracionPunVen);}

			this.isVisibilidadFK_IdFormatoNotaVenta=isParaFormatoNotaCreditoNegation;
			if(!this.isVisibilidadFK_IdFormatoNotaVenta) {this.jTabbedPaneBusquedasConfiguracionPunVen.remove(jPanelFK_IdFormatoNotaVentaConfiguracionPunVen);}

			this.isVisibilidadFK_IdTipoDocumentoFactura=isParaFormatoNotaCreditoNegation;
			if(!this.isVisibilidadFK_IdTipoDocumentoFactura) {this.jTabbedPaneBusquedasConfiguracionPunVen.remove(jPanelFK_IdTipoDocumentoFacturaConfiguracionPunVen);}

			this.isVisibilidadFK_IdTipoDocumentoNotaCredito=isParaFormatoNotaCreditoNegation;
			if(!this.isVisibilidadFK_IdTipoDocumentoNotaCredito) {this.jTabbedPaneBusquedasConfiguracionPunVen.remove(jPanelFK_IdTipoDocumentoNotaCreditoConfiguracionPunVen);}

			this.isVisibilidadFK_IdTipoDocumentoNotaVenta=isParaFormatoNotaCreditoNegation;
			if(!this.isVisibilidadFK_IdTipoDocumentoNotaVenta) {this.jTabbedPaneBusquedasConfiguracionPunVen.remove(jPanelFK_IdTipoDocumentoNotaVentaConfiguracionPunVen);}

			this.isVisibilidadFK_IdTipoDocumentoTarjetaCredito=isParaFormatoNotaCreditoNegation;
			if(!this.isVisibilidadFK_IdTipoDocumentoTarjetaCredito) {this.jTabbedPaneBusquedasConfiguracionPunVen.remove(jPanelFK_IdTipoDocumentoTarjetaCreditoConfiguracionPunVen);}

			this.isVisibilidadFK_IdTransaccionCuentaFactura=isParaFormatoNotaCreditoNegation;
			if(!this.isVisibilidadFK_IdTransaccionCuentaFactura) {this.jTabbedPaneBusquedasConfiguracionPunVen.remove(jPanelFK_IdTransaccionCuentaFacturaConfiguracionPunVen);}

			this.isVisibilidadFK_IdTransaccionCuentaNotaCredito=isParaFormatoNotaCreditoNegation;
			if(!this.isVisibilidadFK_IdTransaccionCuentaNotaCredito) {this.jTabbedPaneBusquedasConfiguracionPunVen.remove(jPanelFK_IdTransaccionCuentaNotaCreditoConfiguracionPunVen);}

			this.isVisibilidadFK_IdTransaccionCuentaNotaVenta=isParaFormatoNotaCreditoNegation;
			if(!this.isVisibilidadFK_IdTransaccionCuentaNotaVenta) {this.jTabbedPaneBusquedasConfiguracionPunVen.remove(jPanelFK_IdTransaccionCuentaNotaVentaConfiguracionPunVen);}

			this.isVisibilidadFK_IdTransaccionFactura=isParaFormatoNotaCreditoNegation;
			if(!this.isVisibilidadFK_IdTransaccionFactura) {this.jTabbedPaneBusquedasConfiguracionPunVen.remove(jPanelFK_IdTransaccionFacturaConfiguracionPunVen);}

			this.isVisibilidadFK_IdTransaccionNotaCredito=isParaFormatoNotaCreditoNegation;
			if(!this.isVisibilidadFK_IdTransaccionNotaCredito) {this.jTabbedPaneBusquedasConfiguracionPunVen.remove(jPanelFK_IdTransaccionNotaCreditoConfiguracionPunVen);}

			this.isVisibilidadFK_IdTransaccionNotaVenta=isParaFormatoNotaCreditoNegation;
			if(!this.isVisibilidadFK_IdTransaccionNotaVenta) {this.jTabbedPaneBusquedasConfiguracionPunVen.remove(jPanelFK_IdTransaccionNotaVentaConfiguracionPunVen);}
		}
		
	}

	public void setVisibilidadBusquedasParaTransaccionFactura(Boolean isParaTransaccionFactura){
		//BYDAN_BUSQUEDAS
		
		if(!this.conCargarMinimo) {

			Boolean isParaTransaccionFacturaNegation=!isParaTransaccionFactura;

			this.isVisibilidadFK_IdBodega=isParaTransaccionFacturaNegation;
			if(!this.isVisibilidadFK_IdBodega) {this.jTabbedPaneBusquedasConfiguracionPunVen.remove(jPanelFK_IdBodegaConfiguracionPunVen);}

			this.isVisibilidadFK_IdClienteConsumidorFinal=isParaTransaccionFacturaNegation;
			if(!this.isVisibilidadFK_IdClienteConsumidorFinal) {this.jTabbedPaneBusquedasConfiguracionPunVen.remove(jPanelFK_IdClienteConsumidorFinalConfiguracionPunVen);}

			this.isVisibilidadFK_IdCuentaContableEfectivo=isParaTransaccionFacturaNegation;
			if(!this.isVisibilidadFK_IdCuentaContableEfectivo) {this.jTabbedPaneBusquedasConfiguracionPunVen.remove(jPanelFK_IdCuentaContableEfectivoConfiguracionPunVen);}

			this.isVisibilidadFK_IdCuentaContableIce=isParaTransaccionFacturaNegation;
			if(!this.isVisibilidadFK_IdCuentaContableIce) {this.jTabbedPaneBusquedasConfiguracionPunVen.remove(jPanelFK_IdCuentaContableIceConfiguracionPunVen);}

			this.isVisibilidadFK_IdCuentaContableOtros=isParaTransaccionFacturaNegation;
			if(!this.isVisibilidadFK_IdCuentaContableOtros) {this.jTabbedPaneBusquedasConfiguracionPunVen.remove(jPanelFK_IdCuentaContableOtrosConfiguracionPunVen);}

			this.isVisibilidadFK_IdFormatoFactura=isParaTransaccionFacturaNegation;
			if(!this.isVisibilidadFK_IdFormatoFactura) {this.jTabbedPaneBusquedasConfiguracionPunVen.remove(jPanelFK_IdFormatoFacturaConfiguracionPunVen);}

			this.isVisibilidadFK_IdFormatoNotaCredito=isParaTransaccionFacturaNegation;
			if(!this.isVisibilidadFK_IdFormatoNotaCredito) {this.jTabbedPaneBusquedasConfiguracionPunVen.remove(jPanelFK_IdFormatoNotaCreditoConfiguracionPunVen);}

			this.isVisibilidadFK_IdFormatoNotaVenta=isParaTransaccionFacturaNegation;
			if(!this.isVisibilidadFK_IdFormatoNotaVenta) {this.jTabbedPaneBusquedasConfiguracionPunVen.remove(jPanelFK_IdFormatoNotaVentaConfiguracionPunVen);}

			this.isVisibilidadFK_IdTipoDocumentoFactura=isParaTransaccionFacturaNegation;
			if(!this.isVisibilidadFK_IdTipoDocumentoFactura) {this.jTabbedPaneBusquedasConfiguracionPunVen.remove(jPanelFK_IdTipoDocumentoFacturaConfiguracionPunVen);}

			this.isVisibilidadFK_IdTipoDocumentoNotaCredito=isParaTransaccionFacturaNegation;
			if(!this.isVisibilidadFK_IdTipoDocumentoNotaCredito) {this.jTabbedPaneBusquedasConfiguracionPunVen.remove(jPanelFK_IdTipoDocumentoNotaCreditoConfiguracionPunVen);}

			this.isVisibilidadFK_IdTipoDocumentoNotaVenta=isParaTransaccionFacturaNegation;
			if(!this.isVisibilidadFK_IdTipoDocumentoNotaVenta) {this.jTabbedPaneBusquedasConfiguracionPunVen.remove(jPanelFK_IdTipoDocumentoNotaVentaConfiguracionPunVen);}

			this.isVisibilidadFK_IdTipoDocumentoTarjetaCredito=isParaTransaccionFacturaNegation;
			if(!this.isVisibilidadFK_IdTipoDocumentoTarjetaCredito) {this.jTabbedPaneBusquedasConfiguracionPunVen.remove(jPanelFK_IdTipoDocumentoTarjetaCreditoConfiguracionPunVen);}

			this.isVisibilidadFK_IdTransaccionCuentaFactura=isParaTransaccionFacturaNegation;
			if(!this.isVisibilidadFK_IdTransaccionCuentaFactura) {this.jTabbedPaneBusquedasConfiguracionPunVen.remove(jPanelFK_IdTransaccionCuentaFacturaConfiguracionPunVen);}

			this.isVisibilidadFK_IdTransaccionCuentaNotaCredito=isParaTransaccionFacturaNegation;
			if(!this.isVisibilidadFK_IdTransaccionCuentaNotaCredito) {this.jTabbedPaneBusquedasConfiguracionPunVen.remove(jPanelFK_IdTransaccionCuentaNotaCreditoConfiguracionPunVen);}

			this.isVisibilidadFK_IdTransaccionCuentaNotaVenta=isParaTransaccionFacturaNegation;
			if(!this.isVisibilidadFK_IdTransaccionCuentaNotaVenta) {this.jTabbedPaneBusquedasConfiguracionPunVen.remove(jPanelFK_IdTransaccionCuentaNotaVentaConfiguracionPunVen);}

			this.isVisibilidadFK_IdTransaccionFactura=isParaTransaccionFactura;
			if(!this.isVisibilidadFK_IdTransaccionFactura) {this.jTabbedPaneBusquedasConfiguracionPunVen.remove(jPanelFK_IdTransaccionFacturaConfiguracionPunVen);}

			this.isVisibilidadFK_IdTransaccionNotaCredito=isParaTransaccionFacturaNegation;
			if(!this.isVisibilidadFK_IdTransaccionNotaCredito) {this.jTabbedPaneBusquedasConfiguracionPunVen.remove(jPanelFK_IdTransaccionNotaCreditoConfiguracionPunVen);}

			this.isVisibilidadFK_IdTransaccionNotaVenta=isParaTransaccionFacturaNegation;
			if(!this.isVisibilidadFK_IdTransaccionNotaVenta) {this.jTabbedPaneBusquedasConfiguracionPunVen.remove(jPanelFK_IdTransaccionNotaVentaConfiguracionPunVen);}
		}
		
	}

	public void setVisibilidadBusquedasParaTransaccionNotaVenta(Boolean isParaTransaccionNotaVenta){
		//BYDAN_BUSQUEDAS
		
		if(!this.conCargarMinimo) {

			Boolean isParaTransaccionNotaVentaNegation=!isParaTransaccionNotaVenta;

			this.isVisibilidadFK_IdBodega=isParaTransaccionNotaVentaNegation;
			if(!this.isVisibilidadFK_IdBodega) {this.jTabbedPaneBusquedasConfiguracionPunVen.remove(jPanelFK_IdBodegaConfiguracionPunVen);}

			this.isVisibilidadFK_IdClienteConsumidorFinal=isParaTransaccionNotaVentaNegation;
			if(!this.isVisibilidadFK_IdClienteConsumidorFinal) {this.jTabbedPaneBusquedasConfiguracionPunVen.remove(jPanelFK_IdClienteConsumidorFinalConfiguracionPunVen);}

			this.isVisibilidadFK_IdCuentaContableEfectivo=isParaTransaccionNotaVentaNegation;
			if(!this.isVisibilidadFK_IdCuentaContableEfectivo) {this.jTabbedPaneBusquedasConfiguracionPunVen.remove(jPanelFK_IdCuentaContableEfectivoConfiguracionPunVen);}

			this.isVisibilidadFK_IdCuentaContableIce=isParaTransaccionNotaVentaNegation;
			if(!this.isVisibilidadFK_IdCuentaContableIce) {this.jTabbedPaneBusquedasConfiguracionPunVen.remove(jPanelFK_IdCuentaContableIceConfiguracionPunVen);}

			this.isVisibilidadFK_IdCuentaContableOtros=isParaTransaccionNotaVentaNegation;
			if(!this.isVisibilidadFK_IdCuentaContableOtros) {this.jTabbedPaneBusquedasConfiguracionPunVen.remove(jPanelFK_IdCuentaContableOtrosConfiguracionPunVen);}

			this.isVisibilidadFK_IdFormatoFactura=isParaTransaccionNotaVentaNegation;
			if(!this.isVisibilidadFK_IdFormatoFactura) {this.jTabbedPaneBusquedasConfiguracionPunVen.remove(jPanelFK_IdFormatoFacturaConfiguracionPunVen);}

			this.isVisibilidadFK_IdFormatoNotaCredito=isParaTransaccionNotaVentaNegation;
			if(!this.isVisibilidadFK_IdFormatoNotaCredito) {this.jTabbedPaneBusquedasConfiguracionPunVen.remove(jPanelFK_IdFormatoNotaCreditoConfiguracionPunVen);}

			this.isVisibilidadFK_IdFormatoNotaVenta=isParaTransaccionNotaVentaNegation;
			if(!this.isVisibilidadFK_IdFormatoNotaVenta) {this.jTabbedPaneBusquedasConfiguracionPunVen.remove(jPanelFK_IdFormatoNotaVentaConfiguracionPunVen);}

			this.isVisibilidadFK_IdTipoDocumentoFactura=isParaTransaccionNotaVentaNegation;
			if(!this.isVisibilidadFK_IdTipoDocumentoFactura) {this.jTabbedPaneBusquedasConfiguracionPunVen.remove(jPanelFK_IdTipoDocumentoFacturaConfiguracionPunVen);}

			this.isVisibilidadFK_IdTipoDocumentoNotaCredito=isParaTransaccionNotaVentaNegation;
			if(!this.isVisibilidadFK_IdTipoDocumentoNotaCredito) {this.jTabbedPaneBusquedasConfiguracionPunVen.remove(jPanelFK_IdTipoDocumentoNotaCreditoConfiguracionPunVen);}

			this.isVisibilidadFK_IdTipoDocumentoNotaVenta=isParaTransaccionNotaVentaNegation;
			if(!this.isVisibilidadFK_IdTipoDocumentoNotaVenta) {this.jTabbedPaneBusquedasConfiguracionPunVen.remove(jPanelFK_IdTipoDocumentoNotaVentaConfiguracionPunVen);}

			this.isVisibilidadFK_IdTipoDocumentoTarjetaCredito=isParaTransaccionNotaVentaNegation;
			if(!this.isVisibilidadFK_IdTipoDocumentoTarjetaCredito) {this.jTabbedPaneBusquedasConfiguracionPunVen.remove(jPanelFK_IdTipoDocumentoTarjetaCreditoConfiguracionPunVen);}

			this.isVisibilidadFK_IdTransaccionCuentaFactura=isParaTransaccionNotaVentaNegation;
			if(!this.isVisibilidadFK_IdTransaccionCuentaFactura) {this.jTabbedPaneBusquedasConfiguracionPunVen.remove(jPanelFK_IdTransaccionCuentaFacturaConfiguracionPunVen);}

			this.isVisibilidadFK_IdTransaccionCuentaNotaCredito=isParaTransaccionNotaVentaNegation;
			if(!this.isVisibilidadFK_IdTransaccionCuentaNotaCredito) {this.jTabbedPaneBusquedasConfiguracionPunVen.remove(jPanelFK_IdTransaccionCuentaNotaCreditoConfiguracionPunVen);}

			this.isVisibilidadFK_IdTransaccionCuentaNotaVenta=isParaTransaccionNotaVentaNegation;
			if(!this.isVisibilidadFK_IdTransaccionCuentaNotaVenta) {this.jTabbedPaneBusquedasConfiguracionPunVen.remove(jPanelFK_IdTransaccionCuentaNotaVentaConfiguracionPunVen);}

			this.isVisibilidadFK_IdTransaccionFactura=isParaTransaccionNotaVentaNegation;
			if(!this.isVisibilidadFK_IdTransaccionFactura) {this.jTabbedPaneBusquedasConfiguracionPunVen.remove(jPanelFK_IdTransaccionFacturaConfiguracionPunVen);}

			this.isVisibilidadFK_IdTransaccionNotaCredito=isParaTransaccionNotaVentaNegation;
			if(!this.isVisibilidadFK_IdTransaccionNotaCredito) {this.jTabbedPaneBusquedasConfiguracionPunVen.remove(jPanelFK_IdTransaccionNotaCreditoConfiguracionPunVen);}

			this.isVisibilidadFK_IdTransaccionNotaVenta=isParaTransaccionNotaVenta;
			if(!this.isVisibilidadFK_IdTransaccionNotaVenta) {this.jTabbedPaneBusquedasConfiguracionPunVen.remove(jPanelFK_IdTransaccionNotaVentaConfiguracionPunVen);}
		}
		
	}

	public void setVisibilidadBusquedasParaTransaccionNotaCredito(Boolean isParaTransaccionNotaCredito){
		//BYDAN_BUSQUEDAS
		
		if(!this.conCargarMinimo) {

			Boolean isParaTransaccionNotaCreditoNegation=!isParaTransaccionNotaCredito;

			this.isVisibilidadFK_IdBodega=isParaTransaccionNotaCreditoNegation;
			if(!this.isVisibilidadFK_IdBodega) {this.jTabbedPaneBusquedasConfiguracionPunVen.remove(jPanelFK_IdBodegaConfiguracionPunVen);}

			this.isVisibilidadFK_IdClienteConsumidorFinal=isParaTransaccionNotaCreditoNegation;
			if(!this.isVisibilidadFK_IdClienteConsumidorFinal) {this.jTabbedPaneBusquedasConfiguracionPunVen.remove(jPanelFK_IdClienteConsumidorFinalConfiguracionPunVen);}

			this.isVisibilidadFK_IdCuentaContableEfectivo=isParaTransaccionNotaCreditoNegation;
			if(!this.isVisibilidadFK_IdCuentaContableEfectivo) {this.jTabbedPaneBusquedasConfiguracionPunVen.remove(jPanelFK_IdCuentaContableEfectivoConfiguracionPunVen);}

			this.isVisibilidadFK_IdCuentaContableIce=isParaTransaccionNotaCreditoNegation;
			if(!this.isVisibilidadFK_IdCuentaContableIce) {this.jTabbedPaneBusquedasConfiguracionPunVen.remove(jPanelFK_IdCuentaContableIceConfiguracionPunVen);}

			this.isVisibilidadFK_IdCuentaContableOtros=isParaTransaccionNotaCreditoNegation;
			if(!this.isVisibilidadFK_IdCuentaContableOtros) {this.jTabbedPaneBusquedasConfiguracionPunVen.remove(jPanelFK_IdCuentaContableOtrosConfiguracionPunVen);}

			this.isVisibilidadFK_IdFormatoFactura=isParaTransaccionNotaCreditoNegation;
			if(!this.isVisibilidadFK_IdFormatoFactura) {this.jTabbedPaneBusquedasConfiguracionPunVen.remove(jPanelFK_IdFormatoFacturaConfiguracionPunVen);}

			this.isVisibilidadFK_IdFormatoNotaCredito=isParaTransaccionNotaCreditoNegation;
			if(!this.isVisibilidadFK_IdFormatoNotaCredito) {this.jTabbedPaneBusquedasConfiguracionPunVen.remove(jPanelFK_IdFormatoNotaCreditoConfiguracionPunVen);}

			this.isVisibilidadFK_IdFormatoNotaVenta=isParaTransaccionNotaCreditoNegation;
			if(!this.isVisibilidadFK_IdFormatoNotaVenta) {this.jTabbedPaneBusquedasConfiguracionPunVen.remove(jPanelFK_IdFormatoNotaVentaConfiguracionPunVen);}

			this.isVisibilidadFK_IdTipoDocumentoFactura=isParaTransaccionNotaCreditoNegation;
			if(!this.isVisibilidadFK_IdTipoDocumentoFactura) {this.jTabbedPaneBusquedasConfiguracionPunVen.remove(jPanelFK_IdTipoDocumentoFacturaConfiguracionPunVen);}

			this.isVisibilidadFK_IdTipoDocumentoNotaCredito=isParaTransaccionNotaCreditoNegation;
			if(!this.isVisibilidadFK_IdTipoDocumentoNotaCredito) {this.jTabbedPaneBusquedasConfiguracionPunVen.remove(jPanelFK_IdTipoDocumentoNotaCreditoConfiguracionPunVen);}

			this.isVisibilidadFK_IdTipoDocumentoNotaVenta=isParaTransaccionNotaCreditoNegation;
			if(!this.isVisibilidadFK_IdTipoDocumentoNotaVenta) {this.jTabbedPaneBusquedasConfiguracionPunVen.remove(jPanelFK_IdTipoDocumentoNotaVentaConfiguracionPunVen);}

			this.isVisibilidadFK_IdTipoDocumentoTarjetaCredito=isParaTransaccionNotaCreditoNegation;
			if(!this.isVisibilidadFK_IdTipoDocumentoTarjetaCredito) {this.jTabbedPaneBusquedasConfiguracionPunVen.remove(jPanelFK_IdTipoDocumentoTarjetaCreditoConfiguracionPunVen);}

			this.isVisibilidadFK_IdTransaccionCuentaFactura=isParaTransaccionNotaCreditoNegation;
			if(!this.isVisibilidadFK_IdTransaccionCuentaFactura) {this.jTabbedPaneBusquedasConfiguracionPunVen.remove(jPanelFK_IdTransaccionCuentaFacturaConfiguracionPunVen);}

			this.isVisibilidadFK_IdTransaccionCuentaNotaCredito=isParaTransaccionNotaCreditoNegation;
			if(!this.isVisibilidadFK_IdTransaccionCuentaNotaCredito) {this.jTabbedPaneBusquedasConfiguracionPunVen.remove(jPanelFK_IdTransaccionCuentaNotaCreditoConfiguracionPunVen);}

			this.isVisibilidadFK_IdTransaccionCuentaNotaVenta=isParaTransaccionNotaCreditoNegation;
			if(!this.isVisibilidadFK_IdTransaccionCuentaNotaVenta) {this.jTabbedPaneBusquedasConfiguracionPunVen.remove(jPanelFK_IdTransaccionCuentaNotaVentaConfiguracionPunVen);}

			this.isVisibilidadFK_IdTransaccionFactura=isParaTransaccionNotaCreditoNegation;
			if(!this.isVisibilidadFK_IdTransaccionFactura) {this.jTabbedPaneBusquedasConfiguracionPunVen.remove(jPanelFK_IdTransaccionFacturaConfiguracionPunVen);}

			this.isVisibilidadFK_IdTransaccionNotaCredito=isParaTransaccionNotaCredito;
			if(!this.isVisibilidadFK_IdTransaccionNotaCredito) {this.jTabbedPaneBusquedasConfiguracionPunVen.remove(jPanelFK_IdTransaccionNotaCreditoConfiguracionPunVen);}

			this.isVisibilidadFK_IdTransaccionNotaVenta=isParaTransaccionNotaCreditoNegation;
			if(!this.isVisibilidadFK_IdTransaccionNotaVenta) {this.jTabbedPaneBusquedasConfiguracionPunVen.remove(jPanelFK_IdTransaccionNotaVentaConfiguracionPunVen);}
		}
		
	}

	public void setVisibilidadBusquedasParaTransaccionCuentaFactura(Boolean isParaTransaccionCuentaFactura){
		//BYDAN_BUSQUEDAS
		
		if(!this.conCargarMinimo) {

			Boolean isParaTransaccionCuentaFacturaNegation=!isParaTransaccionCuentaFactura;

			this.isVisibilidadFK_IdBodega=isParaTransaccionCuentaFacturaNegation;
			if(!this.isVisibilidadFK_IdBodega) {this.jTabbedPaneBusquedasConfiguracionPunVen.remove(jPanelFK_IdBodegaConfiguracionPunVen);}

			this.isVisibilidadFK_IdClienteConsumidorFinal=isParaTransaccionCuentaFacturaNegation;
			if(!this.isVisibilidadFK_IdClienteConsumidorFinal) {this.jTabbedPaneBusquedasConfiguracionPunVen.remove(jPanelFK_IdClienteConsumidorFinalConfiguracionPunVen);}

			this.isVisibilidadFK_IdCuentaContableEfectivo=isParaTransaccionCuentaFacturaNegation;
			if(!this.isVisibilidadFK_IdCuentaContableEfectivo) {this.jTabbedPaneBusquedasConfiguracionPunVen.remove(jPanelFK_IdCuentaContableEfectivoConfiguracionPunVen);}

			this.isVisibilidadFK_IdCuentaContableIce=isParaTransaccionCuentaFacturaNegation;
			if(!this.isVisibilidadFK_IdCuentaContableIce) {this.jTabbedPaneBusquedasConfiguracionPunVen.remove(jPanelFK_IdCuentaContableIceConfiguracionPunVen);}

			this.isVisibilidadFK_IdCuentaContableOtros=isParaTransaccionCuentaFacturaNegation;
			if(!this.isVisibilidadFK_IdCuentaContableOtros) {this.jTabbedPaneBusquedasConfiguracionPunVen.remove(jPanelFK_IdCuentaContableOtrosConfiguracionPunVen);}

			this.isVisibilidadFK_IdFormatoFactura=isParaTransaccionCuentaFacturaNegation;
			if(!this.isVisibilidadFK_IdFormatoFactura) {this.jTabbedPaneBusquedasConfiguracionPunVen.remove(jPanelFK_IdFormatoFacturaConfiguracionPunVen);}

			this.isVisibilidadFK_IdFormatoNotaCredito=isParaTransaccionCuentaFacturaNegation;
			if(!this.isVisibilidadFK_IdFormatoNotaCredito) {this.jTabbedPaneBusquedasConfiguracionPunVen.remove(jPanelFK_IdFormatoNotaCreditoConfiguracionPunVen);}

			this.isVisibilidadFK_IdFormatoNotaVenta=isParaTransaccionCuentaFacturaNegation;
			if(!this.isVisibilidadFK_IdFormatoNotaVenta) {this.jTabbedPaneBusquedasConfiguracionPunVen.remove(jPanelFK_IdFormatoNotaVentaConfiguracionPunVen);}

			this.isVisibilidadFK_IdTipoDocumentoFactura=isParaTransaccionCuentaFacturaNegation;
			if(!this.isVisibilidadFK_IdTipoDocumentoFactura) {this.jTabbedPaneBusquedasConfiguracionPunVen.remove(jPanelFK_IdTipoDocumentoFacturaConfiguracionPunVen);}

			this.isVisibilidadFK_IdTipoDocumentoNotaCredito=isParaTransaccionCuentaFacturaNegation;
			if(!this.isVisibilidadFK_IdTipoDocumentoNotaCredito) {this.jTabbedPaneBusquedasConfiguracionPunVen.remove(jPanelFK_IdTipoDocumentoNotaCreditoConfiguracionPunVen);}

			this.isVisibilidadFK_IdTipoDocumentoNotaVenta=isParaTransaccionCuentaFacturaNegation;
			if(!this.isVisibilidadFK_IdTipoDocumentoNotaVenta) {this.jTabbedPaneBusquedasConfiguracionPunVen.remove(jPanelFK_IdTipoDocumentoNotaVentaConfiguracionPunVen);}

			this.isVisibilidadFK_IdTipoDocumentoTarjetaCredito=isParaTransaccionCuentaFacturaNegation;
			if(!this.isVisibilidadFK_IdTipoDocumentoTarjetaCredito) {this.jTabbedPaneBusquedasConfiguracionPunVen.remove(jPanelFK_IdTipoDocumentoTarjetaCreditoConfiguracionPunVen);}

			this.isVisibilidadFK_IdTransaccionCuentaFactura=isParaTransaccionCuentaFactura;
			if(!this.isVisibilidadFK_IdTransaccionCuentaFactura) {this.jTabbedPaneBusquedasConfiguracionPunVen.remove(jPanelFK_IdTransaccionCuentaFacturaConfiguracionPunVen);}

			this.isVisibilidadFK_IdTransaccionCuentaNotaCredito=isParaTransaccionCuentaFacturaNegation;
			if(!this.isVisibilidadFK_IdTransaccionCuentaNotaCredito) {this.jTabbedPaneBusquedasConfiguracionPunVen.remove(jPanelFK_IdTransaccionCuentaNotaCreditoConfiguracionPunVen);}

			this.isVisibilidadFK_IdTransaccionCuentaNotaVenta=isParaTransaccionCuentaFacturaNegation;
			if(!this.isVisibilidadFK_IdTransaccionCuentaNotaVenta) {this.jTabbedPaneBusquedasConfiguracionPunVen.remove(jPanelFK_IdTransaccionCuentaNotaVentaConfiguracionPunVen);}

			this.isVisibilidadFK_IdTransaccionFactura=isParaTransaccionCuentaFacturaNegation;
			if(!this.isVisibilidadFK_IdTransaccionFactura) {this.jTabbedPaneBusquedasConfiguracionPunVen.remove(jPanelFK_IdTransaccionFacturaConfiguracionPunVen);}

			this.isVisibilidadFK_IdTransaccionNotaCredito=isParaTransaccionCuentaFacturaNegation;
			if(!this.isVisibilidadFK_IdTransaccionNotaCredito) {this.jTabbedPaneBusquedasConfiguracionPunVen.remove(jPanelFK_IdTransaccionNotaCreditoConfiguracionPunVen);}

			this.isVisibilidadFK_IdTransaccionNotaVenta=isParaTransaccionCuentaFacturaNegation;
			if(!this.isVisibilidadFK_IdTransaccionNotaVenta) {this.jTabbedPaneBusquedasConfiguracionPunVen.remove(jPanelFK_IdTransaccionNotaVentaConfiguracionPunVen);}
		}
		
	}

	public void setVisibilidadBusquedasParaTransaccionCuentaNotaVenta(Boolean isParaTransaccionCuentaNotaVenta){
		//BYDAN_BUSQUEDAS
		
		if(!this.conCargarMinimo) {

			Boolean isParaTransaccionCuentaNotaVentaNegation=!isParaTransaccionCuentaNotaVenta;

			this.isVisibilidadFK_IdBodega=isParaTransaccionCuentaNotaVentaNegation;
			if(!this.isVisibilidadFK_IdBodega) {this.jTabbedPaneBusquedasConfiguracionPunVen.remove(jPanelFK_IdBodegaConfiguracionPunVen);}

			this.isVisibilidadFK_IdClienteConsumidorFinal=isParaTransaccionCuentaNotaVentaNegation;
			if(!this.isVisibilidadFK_IdClienteConsumidorFinal) {this.jTabbedPaneBusquedasConfiguracionPunVen.remove(jPanelFK_IdClienteConsumidorFinalConfiguracionPunVen);}

			this.isVisibilidadFK_IdCuentaContableEfectivo=isParaTransaccionCuentaNotaVentaNegation;
			if(!this.isVisibilidadFK_IdCuentaContableEfectivo) {this.jTabbedPaneBusquedasConfiguracionPunVen.remove(jPanelFK_IdCuentaContableEfectivoConfiguracionPunVen);}

			this.isVisibilidadFK_IdCuentaContableIce=isParaTransaccionCuentaNotaVentaNegation;
			if(!this.isVisibilidadFK_IdCuentaContableIce) {this.jTabbedPaneBusquedasConfiguracionPunVen.remove(jPanelFK_IdCuentaContableIceConfiguracionPunVen);}

			this.isVisibilidadFK_IdCuentaContableOtros=isParaTransaccionCuentaNotaVentaNegation;
			if(!this.isVisibilidadFK_IdCuentaContableOtros) {this.jTabbedPaneBusquedasConfiguracionPunVen.remove(jPanelFK_IdCuentaContableOtrosConfiguracionPunVen);}

			this.isVisibilidadFK_IdFormatoFactura=isParaTransaccionCuentaNotaVentaNegation;
			if(!this.isVisibilidadFK_IdFormatoFactura) {this.jTabbedPaneBusquedasConfiguracionPunVen.remove(jPanelFK_IdFormatoFacturaConfiguracionPunVen);}

			this.isVisibilidadFK_IdFormatoNotaCredito=isParaTransaccionCuentaNotaVentaNegation;
			if(!this.isVisibilidadFK_IdFormatoNotaCredito) {this.jTabbedPaneBusquedasConfiguracionPunVen.remove(jPanelFK_IdFormatoNotaCreditoConfiguracionPunVen);}

			this.isVisibilidadFK_IdFormatoNotaVenta=isParaTransaccionCuentaNotaVentaNegation;
			if(!this.isVisibilidadFK_IdFormatoNotaVenta) {this.jTabbedPaneBusquedasConfiguracionPunVen.remove(jPanelFK_IdFormatoNotaVentaConfiguracionPunVen);}

			this.isVisibilidadFK_IdTipoDocumentoFactura=isParaTransaccionCuentaNotaVentaNegation;
			if(!this.isVisibilidadFK_IdTipoDocumentoFactura) {this.jTabbedPaneBusquedasConfiguracionPunVen.remove(jPanelFK_IdTipoDocumentoFacturaConfiguracionPunVen);}

			this.isVisibilidadFK_IdTipoDocumentoNotaCredito=isParaTransaccionCuentaNotaVentaNegation;
			if(!this.isVisibilidadFK_IdTipoDocumentoNotaCredito) {this.jTabbedPaneBusquedasConfiguracionPunVen.remove(jPanelFK_IdTipoDocumentoNotaCreditoConfiguracionPunVen);}

			this.isVisibilidadFK_IdTipoDocumentoNotaVenta=isParaTransaccionCuentaNotaVentaNegation;
			if(!this.isVisibilidadFK_IdTipoDocumentoNotaVenta) {this.jTabbedPaneBusquedasConfiguracionPunVen.remove(jPanelFK_IdTipoDocumentoNotaVentaConfiguracionPunVen);}

			this.isVisibilidadFK_IdTipoDocumentoTarjetaCredito=isParaTransaccionCuentaNotaVentaNegation;
			if(!this.isVisibilidadFK_IdTipoDocumentoTarjetaCredito) {this.jTabbedPaneBusquedasConfiguracionPunVen.remove(jPanelFK_IdTipoDocumentoTarjetaCreditoConfiguracionPunVen);}

			this.isVisibilidadFK_IdTransaccionCuentaFactura=isParaTransaccionCuentaNotaVentaNegation;
			if(!this.isVisibilidadFK_IdTransaccionCuentaFactura) {this.jTabbedPaneBusquedasConfiguracionPunVen.remove(jPanelFK_IdTransaccionCuentaFacturaConfiguracionPunVen);}

			this.isVisibilidadFK_IdTransaccionCuentaNotaCredito=isParaTransaccionCuentaNotaVentaNegation;
			if(!this.isVisibilidadFK_IdTransaccionCuentaNotaCredito) {this.jTabbedPaneBusquedasConfiguracionPunVen.remove(jPanelFK_IdTransaccionCuentaNotaCreditoConfiguracionPunVen);}

			this.isVisibilidadFK_IdTransaccionCuentaNotaVenta=isParaTransaccionCuentaNotaVenta;
			if(!this.isVisibilidadFK_IdTransaccionCuentaNotaVenta) {this.jTabbedPaneBusquedasConfiguracionPunVen.remove(jPanelFK_IdTransaccionCuentaNotaVentaConfiguracionPunVen);}

			this.isVisibilidadFK_IdTransaccionFactura=isParaTransaccionCuentaNotaVentaNegation;
			if(!this.isVisibilidadFK_IdTransaccionFactura) {this.jTabbedPaneBusquedasConfiguracionPunVen.remove(jPanelFK_IdTransaccionFacturaConfiguracionPunVen);}

			this.isVisibilidadFK_IdTransaccionNotaCredito=isParaTransaccionCuentaNotaVentaNegation;
			if(!this.isVisibilidadFK_IdTransaccionNotaCredito) {this.jTabbedPaneBusquedasConfiguracionPunVen.remove(jPanelFK_IdTransaccionNotaCreditoConfiguracionPunVen);}

			this.isVisibilidadFK_IdTransaccionNotaVenta=isParaTransaccionCuentaNotaVentaNegation;
			if(!this.isVisibilidadFK_IdTransaccionNotaVenta) {this.jTabbedPaneBusquedasConfiguracionPunVen.remove(jPanelFK_IdTransaccionNotaVentaConfiguracionPunVen);}
		}
		
	}

	public void setVisibilidadBusquedasParaTransaccionCuentaNotaCredito(Boolean isParaTransaccionCuentaNotaCredito){
		//BYDAN_BUSQUEDAS
		
		if(!this.conCargarMinimo) {

			Boolean isParaTransaccionCuentaNotaCreditoNegation=!isParaTransaccionCuentaNotaCredito;

			this.isVisibilidadFK_IdBodega=isParaTransaccionCuentaNotaCreditoNegation;
			if(!this.isVisibilidadFK_IdBodega) {this.jTabbedPaneBusquedasConfiguracionPunVen.remove(jPanelFK_IdBodegaConfiguracionPunVen);}

			this.isVisibilidadFK_IdClienteConsumidorFinal=isParaTransaccionCuentaNotaCreditoNegation;
			if(!this.isVisibilidadFK_IdClienteConsumidorFinal) {this.jTabbedPaneBusquedasConfiguracionPunVen.remove(jPanelFK_IdClienteConsumidorFinalConfiguracionPunVen);}

			this.isVisibilidadFK_IdCuentaContableEfectivo=isParaTransaccionCuentaNotaCreditoNegation;
			if(!this.isVisibilidadFK_IdCuentaContableEfectivo) {this.jTabbedPaneBusquedasConfiguracionPunVen.remove(jPanelFK_IdCuentaContableEfectivoConfiguracionPunVen);}

			this.isVisibilidadFK_IdCuentaContableIce=isParaTransaccionCuentaNotaCreditoNegation;
			if(!this.isVisibilidadFK_IdCuentaContableIce) {this.jTabbedPaneBusquedasConfiguracionPunVen.remove(jPanelFK_IdCuentaContableIceConfiguracionPunVen);}

			this.isVisibilidadFK_IdCuentaContableOtros=isParaTransaccionCuentaNotaCreditoNegation;
			if(!this.isVisibilidadFK_IdCuentaContableOtros) {this.jTabbedPaneBusquedasConfiguracionPunVen.remove(jPanelFK_IdCuentaContableOtrosConfiguracionPunVen);}

			this.isVisibilidadFK_IdFormatoFactura=isParaTransaccionCuentaNotaCreditoNegation;
			if(!this.isVisibilidadFK_IdFormatoFactura) {this.jTabbedPaneBusquedasConfiguracionPunVen.remove(jPanelFK_IdFormatoFacturaConfiguracionPunVen);}

			this.isVisibilidadFK_IdFormatoNotaCredito=isParaTransaccionCuentaNotaCreditoNegation;
			if(!this.isVisibilidadFK_IdFormatoNotaCredito) {this.jTabbedPaneBusquedasConfiguracionPunVen.remove(jPanelFK_IdFormatoNotaCreditoConfiguracionPunVen);}

			this.isVisibilidadFK_IdFormatoNotaVenta=isParaTransaccionCuentaNotaCreditoNegation;
			if(!this.isVisibilidadFK_IdFormatoNotaVenta) {this.jTabbedPaneBusquedasConfiguracionPunVen.remove(jPanelFK_IdFormatoNotaVentaConfiguracionPunVen);}

			this.isVisibilidadFK_IdTipoDocumentoFactura=isParaTransaccionCuentaNotaCreditoNegation;
			if(!this.isVisibilidadFK_IdTipoDocumentoFactura) {this.jTabbedPaneBusquedasConfiguracionPunVen.remove(jPanelFK_IdTipoDocumentoFacturaConfiguracionPunVen);}

			this.isVisibilidadFK_IdTipoDocumentoNotaCredito=isParaTransaccionCuentaNotaCreditoNegation;
			if(!this.isVisibilidadFK_IdTipoDocumentoNotaCredito) {this.jTabbedPaneBusquedasConfiguracionPunVen.remove(jPanelFK_IdTipoDocumentoNotaCreditoConfiguracionPunVen);}

			this.isVisibilidadFK_IdTipoDocumentoNotaVenta=isParaTransaccionCuentaNotaCreditoNegation;
			if(!this.isVisibilidadFK_IdTipoDocumentoNotaVenta) {this.jTabbedPaneBusquedasConfiguracionPunVen.remove(jPanelFK_IdTipoDocumentoNotaVentaConfiguracionPunVen);}

			this.isVisibilidadFK_IdTipoDocumentoTarjetaCredito=isParaTransaccionCuentaNotaCreditoNegation;
			if(!this.isVisibilidadFK_IdTipoDocumentoTarjetaCredito) {this.jTabbedPaneBusquedasConfiguracionPunVen.remove(jPanelFK_IdTipoDocumentoTarjetaCreditoConfiguracionPunVen);}

			this.isVisibilidadFK_IdTransaccionCuentaFactura=isParaTransaccionCuentaNotaCreditoNegation;
			if(!this.isVisibilidadFK_IdTransaccionCuentaFactura) {this.jTabbedPaneBusquedasConfiguracionPunVen.remove(jPanelFK_IdTransaccionCuentaFacturaConfiguracionPunVen);}

			this.isVisibilidadFK_IdTransaccionCuentaNotaCredito=isParaTransaccionCuentaNotaCredito;
			if(!this.isVisibilidadFK_IdTransaccionCuentaNotaCredito) {this.jTabbedPaneBusquedasConfiguracionPunVen.remove(jPanelFK_IdTransaccionCuentaNotaCreditoConfiguracionPunVen);}

			this.isVisibilidadFK_IdTransaccionCuentaNotaVenta=isParaTransaccionCuentaNotaCreditoNegation;
			if(!this.isVisibilidadFK_IdTransaccionCuentaNotaVenta) {this.jTabbedPaneBusquedasConfiguracionPunVen.remove(jPanelFK_IdTransaccionCuentaNotaVentaConfiguracionPunVen);}

			this.isVisibilidadFK_IdTransaccionFactura=isParaTransaccionCuentaNotaCreditoNegation;
			if(!this.isVisibilidadFK_IdTransaccionFactura) {this.jTabbedPaneBusquedasConfiguracionPunVen.remove(jPanelFK_IdTransaccionFacturaConfiguracionPunVen);}

			this.isVisibilidadFK_IdTransaccionNotaCredito=isParaTransaccionCuentaNotaCreditoNegation;
			if(!this.isVisibilidadFK_IdTransaccionNotaCredito) {this.jTabbedPaneBusquedasConfiguracionPunVen.remove(jPanelFK_IdTransaccionNotaCreditoConfiguracionPunVen);}

			this.isVisibilidadFK_IdTransaccionNotaVenta=isParaTransaccionCuentaNotaCreditoNegation;
			if(!this.isVisibilidadFK_IdTransaccionNotaVenta) {this.jTabbedPaneBusquedasConfiguracionPunVen.remove(jPanelFK_IdTransaccionNotaVentaConfiguracionPunVen);}
		}
		
	}
	
	
	
	

	public String registrarSesionConfiguracionPunVenParaBusquedaClienteConsumidorFinals() throws Exception {
		Boolean isPaginaPopupCliente=false;

		try {

			if(configuracionpunvenSessionBean==null) {
				configuracionpunvenSessionBean=new ConfiguracionPunVenSessionBean();
			}

			if(clienteconsumidorfinalSessionBean==null) {
				clienteconsumidorfinalSessionBean=new ClienteSessionBean();
			}

			clienteconsumidorfinalSessionBean.setsPathNavegacionActual(configuracionpunvenSessionBean.getsPathNavegacionActual()+Constantes.SHTMLFLECHA+ClienteConstantesFunciones.SCLASSWEBTITULO);
			clienteconsumidorfinalSessionBean.setisPermiteRecargarInformacion(false);
			clienteconsumidorfinalSessionBean.setisPaginaPopup(true);
			isPaginaPopupCliente=clienteconsumidorfinalSessionBean.getisPaginaPopup();
			clienteconsumidorfinalSessionBean.setisPaginaPopup(false);
			clienteconsumidorfinalSessionBean.setEstaModoBusqueda(true);
			clienteconsumidorfinalSessionBean.setsFuncionBusquedaRapida("window.opener.configuracionpunvenFuncionGeneral.setCombosCodigoDesdeBusquedaid_cliente_consumidor_final(TO_REPLACE);");
			clienteconsumidorfinalSessionBean.setisPermiteNavegacionHaciaForeignKeyDesdeCliente(true);
			clienteconsumidorfinalSessionBean.setsNombrePaginaNavegacionHaciaForeignKeyDesdeCliente(ConfiguracionPunVenConstantesFunciones.SNOMBREOPCION);
			//clienteSessionBean.setisBusquedaDesdeForeignKeySesionConfiguracionPunVen(true);
			//clienteSessionBean.setlidConfiguracionPunVenActual(this.idConfiguracionPunVenActual);

			configuracionpunvenSessionBean.setisBusquedaDesdeForeignKeySesionForeignKeyConfiguracionPunVen(true);
			configuracionpunvenSessionBean.setlIdConfiguracionPunVenActualForeignKey(this.idConfiguracionPunVenActual);

			String strPagina=Constantes.SNONE;
			SistemaLogicAdditional sistemaLogicAdditional=new SistemaLogicAdditional();

			guardarDatosBusquedaSession();

		} catch(Exception e) {
			FuncionesSwing.manageException(this, e,logger);
		}
			return "";
	}
	
	
	public void guardarDatosBusquedaSession() throws Exception {
		
		//ConfiguracionPunVenSessionBean configuracionpunvenSessionBean=new ConfiguracionPunVenSessionBean();
		
		if(this.configuracionpunvenSessionBean==null) {
			this.configuracionpunvenSessionBean=new ConfiguracionPunVenSessionBean();
		}
		
		this.configuracionpunvenSessionBean.setsUltimaBusquedaConfiguracionPunVen(this.getsAccionBusqueda());
		this.configuracionpunvenSessionBean.setiNumeroPaginacion(this.getiNumeroPaginacion());
		this.configuracionpunvenSessionBean.setiNumeroPaginacionPagina(this.getiNumeroPaginacionPagina());
		
		if(this.getsAccionBusqueda().equals("Todos")) {
			;
		}
		

		else if(this.getsAccionBusqueda().equals("FK_IdBodega")) {
			configuracionpunvenSessionBean.setid_bodega(this.getid_bodegaFK_IdBodega());	
		}
		else if(this.getsAccionBusqueda().equals("FK_IdClienteConsumidorFinal")) {
			configuracionpunvenSessionBean.setid_cliente_consumidor_final(this.getid_cliente_consumidor_finalFK_IdClienteConsumidorFinal());	
		}
		else if(this.getsAccionBusqueda().equals("FK_IdCuentaContableEfectivo")) {
			configuracionpunvenSessionBean.setid_cuenta_contable_efectivo(this.getid_cuenta_contable_efectivoFK_IdCuentaContableEfectivo());	
		}
		else if(this.getsAccionBusqueda().equals("FK_IdCuentaContableIce")) {
			configuracionpunvenSessionBean.setid_cuenta_contable_ice(this.getid_cuenta_contable_iceFK_IdCuentaContableIce());	
		}
		else if(this.getsAccionBusqueda().equals("FK_IdCuentaContableOtros")) {
			configuracionpunvenSessionBean.setid_cuenta_contable_otros(this.getid_cuenta_contable_otrosFK_IdCuentaContableOtros());	
		}
		else if(this.getsAccionBusqueda().equals("FK_IdEmpresa")) {
			configuracionpunvenSessionBean.setid_empresa(this.getid_empresaFK_IdEmpresa());	
		}
		else if(this.getsAccionBusqueda().equals("FK_IdFormatoFactura")) {
			configuracionpunvenSessionBean.setid_formato_factura(this.getid_formato_facturaFK_IdFormatoFactura());	
		}
		else if(this.getsAccionBusqueda().equals("FK_IdFormatoNotaCredito")) {
			configuracionpunvenSessionBean.setid_formato_nota_credito(this.getid_formato_nota_creditoFK_IdFormatoNotaCredito());	
		}
		else if(this.getsAccionBusqueda().equals("FK_IdFormatoNotaVenta")) {
			configuracionpunvenSessionBean.setid_formato_nota_venta(this.getid_formato_nota_ventaFK_IdFormatoNotaVenta());	
		}
		else if(this.getsAccionBusqueda().equals("FK_IdSucursal")) {
			configuracionpunvenSessionBean.setid_sucursal(this.getid_sucursalFK_IdSucursal());	
		}
		else if(this.getsAccionBusqueda().equals("FK_IdTipoDocumentoFactura")) {
			configuracionpunvenSessionBean.setid_tipo_documento_factura(this.getid_tipo_documento_facturaFK_IdTipoDocumentoFactura());	
		}
		else if(this.getsAccionBusqueda().equals("FK_IdTipoDocumentoNotaCredito")) {
			configuracionpunvenSessionBean.setid_tipo_documento_nota_credito(this.getid_tipo_documento_nota_creditoFK_IdTipoDocumentoNotaCredito());	
		}
		else if(this.getsAccionBusqueda().equals("FK_IdTipoDocumentoNotaVenta")) {
			configuracionpunvenSessionBean.setid_tipo_documento_nota_venta(this.getid_tipo_documento_nota_ventaFK_IdTipoDocumentoNotaVenta());	
		}
		else if(this.getsAccionBusqueda().equals("FK_IdTipoDocumentoTarjetaCredito")) {
			configuracionpunvenSessionBean.setid_tipo_documento_tarjeta_credito(this.getid_tipo_documento_tarjeta_creditoFK_IdTipoDocumentoTarjetaCredito());	
		}
		else if(this.getsAccionBusqueda().equals("FK_IdTransaccionCuentaFactura")) {
			configuracionpunvenSessionBean.setid_transaccion_cuenta_factura(this.getid_transaccion_cuenta_facturaFK_IdTransaccionCuentaFactura());	
		}
		else if(this.getsAccionBusqueda().equals("FK_IdTransaccionCuentaNotaCredito")) {
			configuracionpunvenSessionBean.setid_transaccion_cuenta_nota_credito(this.getid_transaccion_cuenta_nota_creditoFK_IdTransaccionCuentaNotaCredito());	
		}
		else if(this.getsAccionBusqueda().equals("FK_IdTransaccionCuentaNotaVenta")) {
			configuracionpunvenSessionBean.setid_transaccion_cuenta_nota_venta(this.getid_transaccion_cuenta_nota_ventaFK_IdTransaccionCuentaNotaVenta());	
		}
		else if(this.getsAccionBusqueda().equals("FK_IdTransaccionFactura")) {
			configuracionpunvenSessionBean.setid_transaccion_factura(this.getid_transaccion_facturaFK_IdTransaccionFactura());	
		}
		else if(this.getsAccionBusqueda().equals("FK_IdTransaccionNotaCredito")) {
			configuracionpunvenSessionBean.setid_transaccion_nota_credito(this.getid_transaccion_nota_creditoFK_IdTransaccionNotaCredito());	
		}
		else if(this.getsAccionBusqueda().equals("FK_IdTransaccionNotaVenta")) {
			configuracionpunvenSessionBean.setid_transaccion_nota_venta(this.getid_transaccion_nota_ventaFK_IdTransaccionNotaVenta());	
		}
		
	}
	
	public void traerDatosBusquedaDesdeSession() throws Exception {
		//ConfiguracionPunVenSessionBean configuracionpunvenSessionBean=new ConfiguracionPunVenSessionBean();
		
		if(this.configuracionpunvenSessionBean==null) {
			this.configuracionpunvenSessionBean=new ConfiguracionPunVenSessionBean();
		}
		
		if(this.configuracionpunvenSessionBean.getsUltimaBusquedaConfiguracionPunVen()!=null&&!this.configuracionpunvenSessionBean.getsUltimaBusquedaConfiguracionPunVen().equals("")) {
			this.setsAccionBusqueda(configuracionpunvenSessionBean.getsUltimaBusquedaConfiguracionPunVen());
			this.setiNumeroPaginacion(configuracionpunvenSessionBean.getiNumeroPaginacion());
			this.setiNumeroPaginacionPagina(configuracionpunvenSessionBean.getiNumeroPaginacionPagina());		
				
			if(this.getsAccionBusqueda().equals("Todos")) {
				;
			}
			

			 else if(this.getsAccionBusqueda().equals("FK_IdBodega")) {
				this.setid_bodegaFK_IdBodega(configuracionpunvenSessionBean.getid_bodega());
				configuracionpunvenSessionBean.setid_bodega(-1L);
			}
			 else if(this.getsAccionBusqueda().equals("FK_IdClienteConsumidorFinal")) {
				this.setid_cliente_consumidor_finalFK_IdClienteConsumidorFinal(configuracionpunvenSessionBean.getid_cliente_consumidor_final());
				configuracionpunvenSessionBean.setid_cliente_consumidor_final(-1L);
			}
			 else if(this.getsAccionBusqueda().equals("FK_IdCuentaContableEfectivo")) {
				this.setid_cuenta_contable_efectivoFK_IdCuentaContableEfectivo(configuracionpunvenSessionBean.getid_cuenta_contable_efectivo());
				configuracionpunvenSessionBean.setid_cuenta_contable_efectivo(-1L);
			}
			 else if(this.getsAccionBusqueda().equals("FK_IdCuentaContableIce")) {
				this.setid_cuenta_contable_iceFK_IdCuentaContableIce(configuracionpunvenSessionBean.getid_cuenta_contable_ice());
				configuracionpunvenSessionBean.setid_cuenta_contable_ice(-1L);
			}
			 else if(this.getsAccionBusqueda().equals("FK_IdCuentaContableOtros")) {
				this.setid_cuenta_contable_otrosFK_IdCuentaContableOtros(configuracionpunvenSessionBean.getid_cuenta_contable_otros());
				configuracionpunvenSessionBean.setid_cuenta_contable_otros(-1L);
			}
			 else if(this.getsAccionBusqueda().equals("FK_IdEmpresa")) {
				this.setid_empresaFK_IdEmpresa(configuracionpunvenSessionBean.getid_empresa());
				configuracionpunvenSessionBean.setid_empresa(-1L);
			}
			 else if(this.getsAccionBusqueda().equals("FK_IdFormatoFactura")) {
				this.setid_formato_facturaFK_IdFormatoFactura(configuracionpunvenSessionBean.getid_formato_factura());
				configuracionpunvenSessionBean.setid_formato_factura(-1L);
			}
			 else if(this.getsAccionBusqueda().equals("FK_IdFormatoNotaCredito")) {
				this.setid_formato_nota_creditoFK_IdFormatoNotaCredito(configuracionpunvenSessionBean.getid_formato_nota_credito());
				configuracionpunvenSessionBean.setid_formato_nota_credito(-1L);
			}
			 else if(this.getsAccionBusqueda().equals("FK_IdFormatoNotaVenta")) {
				this.setid_formato_nota_ventaFK_IdFormatoNotaVenta(configuracionpunvenSessionBean.getid_formato_nota_venta());
				configuracionpunvenSessionBean.setid_formato_nota_venta(-1L);
			}
			 else if(this.getsAccionBusqueda().equals("FK_IdSucursal")) {
				this.setid_sucursalFK_IdSucursal(configuracionpunvenSessionBean.getid_sucursal());
				configuracionpunvenSessionBean.setid_sucursal(-1L);
			}
			 else if(this.getsAccionBusqueda().equals("FK_IdTipoDocumentoFactura")) {
				this.setid_tipo_documento_facturaFK_IdTipoDocumentoFactura(configuracionpunvenSessionBean.getid_tipo_documento_factura());
				configuracionpunvenSessionBean.setid_tipo_documento_factura(-1L);
			}
			 else if(this.getsAccionBusqueda().equals("FK_IdTipoDocumentoNotaCredito")) {
				this.setid_tipo_documento_nota_creditoFK_IdTipoDocumentoNotaCredito(configuracionpunvenSessionBean.getid_tipo_documento_nota_credito());
				configuracionpunvenSessionBean.setid_tipo_documento_nota_credito(-1L);
			}
			 else if(this.getsAccionBusqueda().equals("FK_IdTipoDocumentoNotaVenta")) {
				this.setid_tipo_documento_nota_ventaFK_IdTipoDocumentoNotaVenta(configuracionpunvenSessionBean.getid_tipo_documento_nota_venta());
				configuracionpunvenSessionBean.setid_tipo_documento_nota_venta(-1L);
			}
			 else if(this.getsAccionBusqueda().equals("FK_IdTipoDocumentoTarjetaCredito")) {
				this.setid_tipo_documento_tarjeta_creditoFK_IdTipoDocumentoTarjetaCredito(configuracionpunvenSessionBean.getid_tipo_documento_tarjeta_credito());
				configuracionpunvenSessionBean.setid_tipo_documento_tarjeta_credito(-1L);
			}
			 else if(this.getsAccionBusqueda().equals("FK_IdTransaccionCuentaFactura")) {
				this.setid_transaccion_cuenta_facturaFK_IdTransaccionCuentaFactura(configuracionpunvenSessionBean.getid_transaccion_cuenta_factura());
				configuracionpunvenSessionBean.setid_transaccion_cuenta_factura(-1L);
			}
			 else if(this.getsAccionBusqueda().equals("FK_IdTransaccionCuentaNotaCredito")) {
				this.setid_transaccion_cuenta_nota_creditoFK_IdTransaccionCuentaNotaCredito(configuracionpunvenSessionBean.getid_transaccion_cuenta_nota_credito());
				configuracionpunvenSessionBean.setid_transaccion_cuenta_nota_credito(-1L);
			}
			 else if(this.getsAccionBusqueda().equals("FK_IdTransaccionCuentaNotaVenta")) {
				this.setid_transaccion_cuenta_nota_ventaFK_IdTransaccionCuentaNotaVenta(configuracionpunvenSessionBean.getid_transaccion_cuenta_nota_venta());
				configuracionpunvenSessionBean.setid_transaccion_cuenta_nota_venta(-1L);
			}
			 else if(this.getsAccionBusqueda().equals("FK_IdTransaccionFactura")) {
				this.setid_transaccion_facturaFK_IdTransaccionFactura(configuracionpunvenSessionBean.getid_transaccion_factura());
				configuracionpunvenSessionBean.setid_transaccion_factura(-1L);
			}
			 else if(this.getsAccionBusqueda().equals("FK_IdTransaccionNotaCredito")) {
				this.setid_transaccion_nota_creditoFK_IdTransaccionNotaCredito(configuracionpunvenSessionBean.getid_transaccion_nota_credito());
				configuracionpunvenSessionBean.setid_transaccion_nota_credito(-1L);
			}
			 else if(this.getsAccionBusqueda().equals("FK_IdTransaccionNotaVenta")) {
				this.setid_transaccion_nota_ventaFK_IdTransaccionNotaVenta(configuracionpunvenSessionBean.getid_transaccion_nota_venta());
				configuracionpunvenSessionBean.setid_transaccion_nota_venta(-1L);
			}
		}
		
		this.configuracionpunvenSessionBean.setsUltimaBusquedaConfiguracionPunVen("");
		this.configuracionpunvenSessionBean.setiNumeroPaginacion(ConfiguracionPunVenConstantesFunciones.INUMEROPAGINACION);
		this.configuracionpunvenSessionBean.setiNumeroPaginacionPagina(0);
		
	}
	
	public void procesoActualizarFilaTotales(Boolean esCampoValor,String sTipo) {
		try {
			this.actualizarFilaTotales();
				
			this.traerValoresTablaTotales();
			
			this.inicializarActualizarBindingTablaConfiguracionPunVen(false);
			
			
			
			
		} catch (Exception e) {
			e.printStackTrace();
		}
	}
	
	
	public void updateBusquedasFormularioConfiguracionPunVen() {
		this.updateBorderResaltarBusquedasFormularioConfiguracionPunVen();
		this.updateVisibilidadBusquedasFormularioConfiguracionPunVen();
		this.updateHabilitarBusquedasFormularioConfiguracionPunVen();
	}
	
	public void updateBorderResaltarBusquedasFormularioConfiguracionPunVen() {					
	//BYDAN_BUSQUEDAS
		
	int index=0;
		
	if(this.jTabbedPaneBusquedasConfiguracionPunVen.getComponents().length>0) {
	

		if(this.configuracionpunvenConstantesFunciones.resaltarFK_IdBodegaConfiguracionPunVen!=null) {
			index= this.jTabbedPaneBusquedasConfiguracionPunVen.indexOfComponent(this.jPanelFK_IdBodegaConfiguracionPunVen);
			if(index>-1) {
				JPanel jPanel=(JPanel)this.jTabbedPaneBusquedasConfiguracionPunVen.getComponent(index);
				jPanel.setBorder(this.configuracionpunvenConstantesFunciones.resaltarFK_IdBodegaConfiguracionPunVen);
			}
		}

		if(this.configuracionpunvenConstantesFunciones.resaltarFK_IdClienteConsumidorFinalConfiguracionPunVen!=null) {
			index= this.jTabbedPaneBusquedasConfiguracionPunVen.indexOfComponent(this.jPanelFK_IdClienteConsumidorFinalConfiguracionPunVen);
			if(index>-1) {
				JPanel jPanel=(JPanel)this.jTabbedPaneBusquedasConfiguracionPunVen.getComponent(index);
				jPanel.setBorder(this.configuracionpunvenConstantesFunciones.resaltarFK_IdClienteConsumidorFinalConfiguracionPunVen);
			}
		}

		if(this.configuracionpunvenConstantesFunciones.resaltarFK_IdCuentaContableEfectivoConfiguracionPunVen!=null) {
			index= this.jTabbedPaneBusquedasConfiguracionPunVen.indexOfComponent(this.jPanelFK_IdCuentaContableEfectivoConfiguracionPunVen);
			if(index>-1) {
				JPanel jPanel=(JPanel)this.jTabbedPaneBusquedasConfiguracionPunVen.getComponent(index);
				jPanel.setBorder(this.configuracionpunvenConstantesFunciones.resaltarFK_IdCuentaContableEfectivoConfiguracionPunVen);
			}
		}

		if(this.configuracionpunvenConstantesFunciones.resaltarFK_IdCuentaContableIceConfiguracionPunVen!=null) {
			index= this.jTabbedPaneBusquedasConfiguracionPunVen.indexOfComponent(this.jPanelFK_IdCuentaContableIceConfiguracionPunVen);
			if(index>-1) {
				JPanel jPanel=(JPanel)this.jTabbedPaneBusquedasConfiguracionPunVen.getComponent(index);
				jPanel.setBorder(this.configuracionpunvenConstantesFunciones.resaltarFK_IdCuentaContableIceConfiguracionPunVen);
			}
		}

		if(this.configuracionpunvenConstantesFunciones.resaltarFK_IdCuentaContableOtrosConfiguracionPunVen!=null) {
			index= this.jTabbedPaneBusquedasConfiguracionPunVen.indexOfComponent(this.jPanelFK_IdCuentaContableOtrosConfiguracionPunVen);
			if(index>-1) {
				JPanel jPanel=(JPanel)this.jTabbedPaneBusquedasConfiguracionPunVen.getComponent(index);
				jPanel.setBorder(this.configuracionpunvenConstantesFunciones.resaltarFK_IdCuentaContableOtrosConfiguracionPunVen);
			}
		}

		if(this.configuracionpunvenConstantesFunciones.resaltarFK_IdFormatoFacturaConfiguracionPunVen!=null) {
			index= this.jTabbedPaneBusquedasConfiguracionPunVen.indexOfComponent(this.jPanelFK_IdFormatoFacturaConfiguracionPunVen);
			if(index>-1) {
				JPanel jPanel=(JPanel)this.jTabbedPaneBusquedasConfiguracionPunVen.getComponent(index);
				jPanel.setBorder(this.configuracionpunvenConstantesFunciones.resaltarFK_IdFormatoFacturaConfiguracionPunVen);
			}
		}

		if(this.configuracionpunvenConstantesFunciones.resaltarFK_IdFormatoNotaCreditoConfiguracionPunVen!=null) {
			index= this.jTabbedPaneBusquedasConfiguracionPunVen.indexOfComponent(this.jPanelFK_IdFormatoNotaCreditoConfiguracionPunVen);
			if(index>-1) {
				JPanel jPanel=(JPanel)this.jTabbedPaneBusquedasConfiguracionPunVen.getComponent(index);
				jPanel.setBorder(this.configuracionpunvenConstantesFunciones.resaltarFK_IdFormatoNotaCreditoConfiguracionPunVen);
			}
		}

		if(this.configuracionpunvenConstantesFunciones.resaltarFK_IdFormatoNotaVentaConfiguracionPunVen!=null) {
			index= this.jTabbedPaneBusquedasConfiguracionPunVen.indexOfComponent(this.jPanelFK_IdFormatoNotaVentaConfiguracionPunVen);
			if(index>-1) {
				JPanel jPanel=(JPanel)this.jTabbedPaneBusquedasConfiguracionPunVen.getComponent(index);
				jPanel.setBorder(this.configuracionpunvenConstantesFunciones.resaltarFK_IdFormatoNotaVentaConfiguracionPunVen);
			}
		}

		if(this.configuracionpunvenConstantesFunciones.resaltarFK_IdTipoDocumentoFacturaConfiguracionPunVen!=null) {
			index= this.jTabbedPaneBusquedasConfiguracionPunVen.indexOfComponent(this.jPanelFK_IdTipoDocumentoFacturaConfiguracionPunVen);
			if(index>-1) {
				JPanel jPanel=(JPanel)this.jTabbedPaneBusquedasConfiguracionPunVen.getComponent(index);
				jPanel.setBorder(this.configuracionpunvenConstantesFunciones.resaltarFK_IdTipoDocumentoFacturaConfiguracionPunVen);
			}
		}

		if(this.configuracionpunvenConstantesFunciones.resaltarFK_IdTipoDocumentoNotaCreditoConfiguracionPunVen!=null) {
			index= this.jTabbedPaneBusquedasConfiguracionPunVen.indexOfComponent(this.jPanelFK_IdTipoDocumentoNotaCreditoConfiguracionPunVen);
			if(index>-1) {
				JPanel jPanel=(JPanel)this.jTabbedPaneBusquedasConfiguracionPunVen.getComponent(index);
				jPanel.setBorder(this.configuracionpunvenConstantesFunciones.resaltarFK_IdTipoDocumentoNotaCreditoConfiguracionPunVen);
			}
		}

		if(this.configuracionpunvenConstantesFunciones.resaltarFK_IdTipoDocumentoNotaVentaConfiguracionPunVen!=null) {
			index= this.jTabbedPaneBusquedasConfiguracionPunVen.indexOfComponent(this.jPanelFK_IdTipoDocumentoNotaVentaConfiguracionPunVen);
			if(index>-1) {
				JPanel jPanel=(JPanel)this.jTabbedPaneBusquedasConfiguracionPunVen.getComponent(index);
				jPanel.setBorder(this.configuracionpunvenConstantesFunciones.resaltarFK_IdTipoDocumentoNotaVentaConfiguracionPunVen);
			}
		}

		if(this.configuracionpunvenConstantesFunciones.resaltarFK_IdTipoDocumentoTarjetaCreditoConfiguracionPunVen!=null) {
			index= this.jTabbedPaneBusquedasConfiguracionPunVen.indexOfComponent(this.jPanelFK_IdTipoDocumentoTarjetaCreditoConfiguracionPunVen);
			if(index>-1) {
				JPanel jPanel=(JPanel)this.jTabbedPaneBusquedasConfiguracionPunVen.getComponent(index);
				jPanel.setBorder(this.configuracionpunvenConstantesFunciones.resaltarFK_IdTipoDocumentoTarjetaCreditoConfiguracionPunVen);
			}
		}

		if(this.configuracionpunvenConstantesFunciones.resaltarFK_IdTransaccionCuentaFacturaConfiguracionPunVen!=null) {
			index= this.jTabbedPaneBusquedasConfiguracionPunVen.indexOfComponent(this.jPanelFK_IdTransaccionCuentaFacturaConfiguracionPunVen);
			if(index>-1) {
				JPanel jPanel=(JPanel)this.jTabbedPaneBusquedasConfiguracionPunVen.getComponent(index);
				jPanel.setBorder(this.configuracionpunvenConstantesFunciones.resaltarFK_IdTransaccionCuentaFacturaConfiguracionPunVen);
			}
		}

		if(this.configuracionpunvenConstantesFunciones.resaltarFK_IdTransaccionCuentaNotaCreditoConfiguracionPunVen!=null) {
			index= this.jTabbedPaneBusquedasConfiguracionPunVen.indexOfComponent(this.jPanelFK_IdTransaccionCuentaNotaCreditoConfiguracionPunVen);
			if(index>-1) {
				JPanel jPanel=(JPanel)this.jTabbedPaneBusquedasConfiguracionPunVen.getComponent(index);
				jPanel.setBorder(this.configuracionpunvenConstantesFunciones.resaltarFK_IdTransaccionCuentaNotaCreditoConfiguracionPunVen);
			}
		}

		if(this.configuracionpunvenConstantesFunciones.resaltarFK_IdTransaccionCuentaNotaVentaConfiguracionPunVen!=null) {
			index= this.jTabbedPaneBusquedasConfiguracionPunVen.indexOfComponent(this.jPanelFK_IdTransaccionCuentaNotaVentaConfiguracionPunVen);
			if(index>-1) {
				JPanel jPanel=(JPanel)this.jTabbedPaneBusquedasConfiguracionPunVen.getComponent(index);
				jPanel.setBorder(this.configuracionpunvenConstantesFunciones.resaltarFK_IdTransaccionCuentaNotaVentaConfiguracionPunVen);
			}
		}

		if(this.configuracionpunvenConstantesFunciones.resaltarFK_IdTransaccionFacturaConfiguracionPunVen!=null) {
			index= this.jTabbedPaneBusquedasConfiguracionPunVen.indexOfComponent(this.jPanelFK_IdTransaccionFacturaConfiguracionPunVen);
			if(index>-1) {
				JPanel jPanel=(JPanel)this.jTabbedPaneBusquedasConfiguracionPunVen.getComponent(index);
				jPanel.setBorder(this.configuracionpunvenConstantesFunciones.resaltarFK_IdTransaccionFacturaConfiguracionPunVen);
			}
		}

		if(this.configuracionpunvenConstantesFunciones.resaltarFK_IdTransaccionNotaCreditoConfiguracionPunVen!=null) {
			index= this.jTabbedPaneBusquedasConfiguracionPunVen.indexOfComponent(this.jPanelFK_IdTransaccionNotaCreditoConfiguracionPunVen);
			if(index>-1) {
				JPanel jPanel=(JPanel)this.jTabbedPaneBusquedasConfiguracionPunVen.getComponent(index);
				jPanel.setBorder(this.configuracionpunvenConstantesFunciones.resaltarFK_IdTransaccionNotaCreditoConfiguracionPunVen);
			}
		}

		if(this.configuracionpunvenConstantesFunciones.resaltarFK_IdTransaccionNotaVentaConfiguracionPunVen!=null) {
			index= this.jTabbedPaneBusquedasConfiguracionPunVen.indexOfComponent(this.jPanelFK_IdTransaccionNotaVentaConfiguracionPunVen);
			if(index>-1) {
				JPanel jPanel=(JPanel)this.jTabbedPaneBusquedasConfiguracionPunVen.getComponent(index);
				jPanel.setBorder(this.configuracionpunvenConstantesFunciones.resaltarFK_IdTransaccionNotaVentaConfiguracionPunVen);
			}
		}
	}	
	
	}
	
	public void updateVisibilidadBusquedasFormularioConfiguracionPunVen() {
	//BYDAN_BUSQUEDAS
	
	int index=0;
	JPanel jPanel=null;
		
	if(this.jTabbedPaneBusquedasConfiguracionPunVen.getComponents().length>0) {
	

			index= this.jTabbedPaneBusquedasConfiguracionPunVen.indexOfComponent(this.jPanelFK_IdBodegaConfiguracionPunVen);
			jPanel=(JPanel)this.jTabbedPaneBusquedasConfiguracionPunVen.getComponent(index);
			//NO VALE SOLO PONIENDO VISIBLE=FALSE, HAY QUE USAR REMOVE
			jPanel.setVisible(this.configuracionpunvenConstantesFunciones.mostrarFK_IdBodegaConfiguracionPunVen);
			if(!this.configuracionpunvenConstantesFunciones.mostrarFK_IdBodegaConfiguracionPunVen && index>-1) {
				this.jTabbedPaneBusquedasConfiguracionPunVen.remove(index);
			}

			index= this.jTabbedPaneBusquedasConfiguracionPunVen.indexOfComponent(this.jPanelFK_IdClienteConsumidorFinalConfiguracionPunVen);
			jPanel=(JPanel)this.jTabbedPaneBusquedasConfiguracionPunVen.getComponent(index);
			//NO VALE SOLO PONIENDO VISIBLE=FALSE, HAY QUE USAR REMOVE
			jPanel.setVisible(this.configuracionpunvenConstantesFunciones.mostrarFK_IdClienteConsumidorFinalConfiguracionPunVen);
			if(!this.configuracionpunvenConstantesFunciones.mostrarFK_IdClienteConsumidorFinalConfiguracionPunVen && index>-1) {
				this.jTabbedPaneBusquedasConfiguracionPunVen.remove(index);
			}

			index= this.jTabbedPaneBusquedasConfiguracionPunVen.indexOfComponent(this.jPanelFK_IdCuentaContableEfectivoConfiguracionPunVen);
			jPanel=(JPanel)this.jTabbedPaneBusquedasConfiguracionPunVen.getComponent(index);
			//NO VALE SOLO PONIENDO VISIBLE=FALSE, HAY QUE USAR REMOVE
			jPanel.setVisible(this.configuracionpunvenConstantesFunciones.mostrarFK_IdCuentaContableEfectivoConfiguracionPunVen);
			if(!this.configuracionpunvenConstantesFunciones.mostrarFK_IdCuentaContableEfectivoConfiguracionPunVen && index>-1) {
				this.jTabbedPaneBusquedasConfiguracionPunVen.remove(index);
			}

			index= this.jTabbedPaneBusquedasConfiguracionPunVen.indexOfComponent(this.jPanelFK_IdCuentaContableIceConfiguracionPunVen);
			jPanel=(JPanel)this.jTabbedPaneBusquedasConfiguracionPunVen.getComponent(index);
			//NO VALE SOLO PONIENDO VISIBLE=FALSE, HAY QUE USAR REMOVE
			jPanel.setVisible(this.configuracionpunvenConstantesFunciones.mostrarFK_IdCuentaContableIceConfiguracionPunVen);
			if(!this.configuracionpunvenConstantesFunciones.mostrarFK_IdCuentaContableIceConfiguracionPunVen && index>-1) {
				this.jTabbedPaneBusquedasConfiguracionPunVen.remove(index);
			}

			index= this.jTabbedPaneBusquedasConfiguracionPunVen.indexOfComponent(this.jPanelFK_IdCuentaContableOtrosConfiguracionPunVen);
			jPanel=(JPanel)this.jTabbedPaneBusquedasConfiguracionPunVen.getComponent(index);
			//NO VALE SOLO PONIENDO VISIBLE=FALSE, HAY QUE USAR REMOVE
			jPanel.setVisible(this.configuracionpunvenConstantesFunciones.mostrarFK_IdCuentaContableOtrosConfiguracionPunVen);
			if(!this.configuracionpunvenConstantesFunciones.mostrarFK_IdCuentaContableOtrosConfiguracionPunVen && index>-1) {
				this.jTabbedPaneBusquedasConfiguracionPunVen.remove(index);
			}

			index= this.jTabbedPaneBusquedasConfiguracionPunVen.indexOfComponent(this.jPanelFK_IdFormatoFacturaConfiguracionPunVen);
			jPanel=(JPanel)this.jTabbedPaneBusquedasConfiguracionPunVen.getComponent(index);
			//NO VALE SOLO PONIENDO VISIBLE=FALSE, HAY QUE USAR REMOVE
			jPanel.setVisible(this.configuracionpunvenConstantesFunciones.mostrarFK_IdFormatoFacturaConfiguracionPunVen);
			if(!this.configuracionpunvenConstantesFunciones.mostrarFK_IdFormatoFacturaConfiguracionPunVen && index>-1) {
				this.jTabbedPaneBusquedasConfiguracionPunVen.remove(index);
			}

			index= this.jTabbedPaneBusquedasConfiguracionPunVen.indexOfComponent(this.jPanelFK_IdFormatoNotaCreditoConfiguracionPunVen);
			jPanel=(JPanel)this.jTabbedPaneBusquedasConfiguracionPunVen.getComponent(index);
			//NO VALE SOLO PONIENDO VISIBLE=FALSE, HAY QUE USAR REMOVE
			jPanel.setVisible(this.configuracionpunvenConstantesFunciones.mostrarFK_IdFormatoNotaCreditoConfiguracionPunVen);
			if(!this.configuracionpunvenConstantesFunciones.mostrarFK_IdFormatoNotaCreditoConfiguracionPunVen && index>-1) {
				this.jTabbedPaneBusquedasConfiguracionPunVen.remove(index);
			}

			index= this.jTabbedPaneBusquedasConfiguracionPunVen.indexOfComponent(this.jPanelFK_IdFormatoNotaVentaConfiguracionPunVen);
			jPanel=(JPanel)this.jTabbedPaneBusquedasConfiguracionPunVen.getComponent(index);
			//NO VALE SOLO PONIENDO VISIBLE=FALSE, HAY QUE USAR REMOVE
			jPanel.setVisible(this.configuracionpunvenConstantesFunciones.mostrarFK_IdFormatoNotaVentaConfiguracionPunVen);
			if(!this.configuracionpunvenConstantesFunciones.mostrarFK_IdFormatoNotaVentaConfiguracionPunVen && index>-1) {
				this.jTabbedPaneBusquedasConfiguracionPunVen.remove(index);
			}

			index= this.jTabbedPaneBusquedasConfiguracionPunVen.indexOfComponent(this.jPanelFK_IdTipoDocumentoFacturaConfiguracionPunVen);
			jPanel=(JPanel)this.jTabbedPaneBusquedasConfiguracionPunVen.getComponent(index);
			//NO VALE SOLO PONIENDO VISIBLE=FALSE, HAY QUE USAR REMOVE
			jPanel.setVisible(this.configuracionpunvenConstantesFunciones.mostrarFK_IdTipoDocumentoFacturaConfiguracionPunVen);
			if(!this.configuracionpunvenConstantesFunciones.mostrarFK_IdTipoDocumentoFacturaConfiguracionPunVen && index>-1) {
				this.jTabbedPaneBusquedasConfiguracionPunVen.remove(index);
			}

			index= this.jTabbedPaneBusquedasConfiguracionPunVen.indexOfComponent(this.jPanelFK_IdTipoDocumentoNotaCreditoConfiguracionPunVen);
			jPanel=(JPanel)this.jTabbedPaneBusquedasConfiguracionPunVen.getComponent(index);
			//NO VALE SOLO PONIENDO VISIBLE=FALSE, HAY QUE USAR REMOVE
			jPanel.setVisible(this.configuracionpunvenConstantesFunciones.mostrarFK_IdTipoDocumentoNotaCreditoConfiguracionPunVen);
			if(!this.configuracionpunvenConstantesFunciones.mostrarFK_IdTipoDocumentoNotaCreditoConfiguracionPunVen && index>-1) {
				this.jTabbedPaneBusquedasConfiguracionPunVen.remove(index);
			}

			index= this.jTabbedPaneBusquedasConfiguracionPunVen.indexOfComponent(this.jPanelFK_IdTipoDocumentoNotaVentaConfiguracionPunVen);
			jPanel=(JPanel)this.jTabbedPaneBusquedasConfiguracionPunVen.getComponent(index);
			//NO VALE SOLO PONIENDO VISIBLE=FALSE, HAY QUE USAR REMOVE
			jPanel.setVisible(this.configuracionpunvenConstantesFunciones.mostrarFK_IdTipoDocumentoNotaVentaConfiguracionPunVen);
			if(!this.configuracionpunvenConstantesFunciones.mostrarFK_IdTipoDocumentoNotaVentaConfiguracionPunVen && index>-1) {
				this.jTabbedPaneBusquedasConfiguracionPunVen.remove(index);
			}

			index= this.jTabbedPaneBusquedasConfiguracionPunVen.indexOfComponent(this.jPanelFK_IdTipoDocumentoTarjetaCreditoConfiguracionPunVen);
			jPanel=(JPanel)this.jTabbedPaneBusquedasConfiguracionPunVen.getComponent(index);
			//NO VALE SOLO PONIENDO VISIBLE=FALSE, HAY QUE USAR REMOVE
			jPanel.setVisible(this.configuracionpunvenConstantesFunciones.mostrarFK_IdTipoDocumentoTarjetaCreditoConfiguracionPunVen);
			if(!this.configuracionpunvenConstantesFunciones.mostrarFK_IdTipoDocumentoTarjetaCreditoConfiguracionPunVen && index>-1) {
				this.jTabbedPaneBusquedasConfiguracionPunVen.remove(index);
			}

			index= this.jTabbedPaneBusquedasConfiguracionPunVen.indexOfComponent(this.jPanelFK_IdTransaccionCuentaFacturaConfiguracionPunVen);
			jPanel=(JPanel)this.jTabbedPaneBusquedasConfiguracionPunVen.getComponent(index);
			//NO VALE SOLO PONIENDO VISIBLE=FALSE, HAY QUE USAR REMOVE
			jPanel.setVisible(this.configuracionpunvenConstantesFunciones.mostrarFK_IdTransaccionCuentaFacturaConfiguracionPunVen);
			if(!this.configuracionpunvenConstantesFunciones.mostrarFK_IdTransaccionCuentaFacturaConfiguracionPunVen && index>-1) {
				this.jTabbedPaneBusquedasConfiguracionPunVen.remove(index);
			}

			index= this.jTabbedPaneBusquedasConfiguracionPunVen.indexOfComponent(this.jPanelFK_IdTransaccionCuentaNotaCreditoConfiguracionPunVen);
			jPanel=(JPanel)this.jTabbedPaneBusquedasConfiguracionPunVen.getComponent(index);
			//NO VALE SOLO PONIENDO VISIBLE=FALSE, HAY QUE USAR REMOVE
			jPanel.setVisible(this.configuracionpunvenConstantesFunciones.mostrarFK_IdTransaccionCuentaNotaCreditoConfiguracionPunVen);
			if(!this.configuracionpunvenConstantesFunciones.mostrarFK_IdTransaccionCuentaNotaCreditoConfiguracionPunVen && index>-1) {
				this.jTabbedPaneBusquedasConfiguracionPunVen.remove(index);
			}

			index= this.jTabbedPaneBusquedasConfiguracionPunVen.indexOfComponent(this.jPanelFK_IdTransaccionCuentaNotaVentaConfiguracionPunVen);
			jPanel=(JPanel)this.jTabbedPaneBusquedasConfiguracionPunVen.getComponent(index);
			//NO VALE SOLO PONIENDO VISIBLE=FALSE, HAY QUE USAR REMOVE
			jPanel.setVisible(this.configuracionpunvenConstantesFunciones.mostrarFK_IdTransaccionCuentaNotaVentaConfiguracionPunVen);
			if(!this.configuracionpunvenConstantesFunciones.mostrarFK_IdTransaccionCuentaNotaVentaConfiguracionPunVen && index>-1) {
				this.jTabbedPaneBusquedasConfiguracionPunVen.remove(index);
			}

			index= this.jTabbedPaneBusquedasConfiguracionPunVen.indexOfComponent(this.jPanelFK_IdTransaccionFacturaConfiguracionPunVen);
			jPanel=(JPanel)this.jTabbedPaneBusquedasConfiguracionPunVen.getComponent(index);
			//NO VALE SOLO PONIENDO VISIBLE=FALSE, HAY QUE USAR REMOVE
			jPanel.setVisible(this.configuracionpunvenConstantesFunciones.mostrarFK_IdTransaccionFacturaConfiguracionPunVen);
			if(!this.configuracionpunvenConstantesFunciones.mostrarFK_IdTransaccionFacturaConfiguracionPunVen && index>-1) {
				this.jTabbedPaneBusquedasConfiguracionPunVen.remove(index);
			}

			index= this.jTabbedPaneBusquedasConfiguracionPunVen.indexOfComponent(this.jPanelFK_IdTransaccionNotaCreditoConfiguracionPunVen);
			jPanel=(JPanel)this.jTabbedPaneBusquedasConfiguracionPunVen.getComponent(index);
			//NO VALE SOLO PONIENDO VISIBLE=FALSE, HAY QUE USAR REMOVE
			jPanel.setVisible(this.configuracionpunvenConstantesFunciones.mostrarFK_IdTransaccionNotaCreditoConfiguracionPunVen);
			if(!this.configuracionpunvenConstantesFunciones.mostrarFK_IdTransaccionNotaCreditoConfiguracionPunVen && index>-1) {
				this.jTabbedPaneBusquedasConfiguracionPunVen.remove(index);
			}

			index= this.jTabbedPaneBusquedasConfiguracionPunVen.indexOfComponent(this.jPanelFK_IdTransaccionNotaVentaConfiguracionPunVen);
			jPanel=(JPanel)this.jTabbedPaneBusquedasConfiguracionPunVen.getComponent(index);
			//NO VALE SOLO PONIENDO VISIBLE=FALSE, HAY QUE USAR REMOVE
			jPanel.setVisible(this.configuracionpunvenConstantesFunciones.mostrarFK_IdTransaccionNotaVentaConfiguracionPunVen);
			if(!this.configuracionpunvenConstantesFunciones.mostrarFK_IdTransaccionNotaVentaConfiguracionPunVen && index>-1) {
				this.jTabbedPaneBusquedasConfiguracionPunVen.remove(index);
			}
	}	
	
	}
	
	public void updateHabilitarBusquedasFormularioConfiguracionPunVen() {
	
	//BYDAN_BUSQUEDAS		
		int index=0;
		JPanel jPanel=null;
			
		if(this.jTabbedPaneBusquedasConfiguracionPunVen.getComponents().length>0) {
	

			index= this.jTabbedPaneBusquedasConfiguracionPunVen.indexOfComponent(this.jPanelFK_IdBodegaConfiguracionPunVen);
			if(index>-1) {
				jPanel=(JPanel)this.jTabbedPaneBusquedasConfiguracionPunVen.getComponent(index);
				//ENABLE PANE=FALSE NO FUNCIONA, ENABLEAT SI
				jPanel.setEnabled(this.configuracionpunvenConstantesFunciones.activarFK_IdBodegaConfiguracionPunVen);
				this.jTabbedPaneBusquedasConfiguracionPunVen.setEnabledAt(index,this.configuracionpunvenConstantesFunciones.activarFK_IdBodegaConfiguracionPunVen);
			}

			index= this.jTabbedPaneBusquedasConfiguracionPunVen.indexOfComponent(this.jPanelFK_IdClienteConsumidorFinalConfiguracionPunVen);
			if(index>-1) {
				jPanel=(JPanel)this.jTabbedPaneBusquedasConfiguracionPunVen.getComponent(index);
				//ENABLE PANE=FALSE NO FUNCIONA, ENABLEAT SI
				jPanel.setEnabled(this.configuracionpunvenConstantesFunciones.activarFK_IdClienteConsumidorFinalConfiguracionPunVen);
				this.jTabbedPaneBusquedasConfiguracionPunVen.setEnabledAt(index,this.configuracionpunvenConstantesFunciones.activarFK_IdClienteConsumidorFinalConfiguracionPunVen);
			}

			index= this.jTabbedPaneBusquedasConfiguracionPunVen.indexOfComponent(this.jPanelFK_IdCuentaContableEfectivoConfiguracionPunVen);
			if(index>-1) {
				jPanel=(JPanel)this.jTabbedPaneBusquedasConfiguracionPunVen.getComponent(index);
				//ENABLE PANE=FALSE NO FUNCIONA, ENABLEAT SI
				jPanel.setEnabled(this.configuracionpunvenConstantesFunciones.activarFK_IdCuentaContableEfectivoConfiguracionPunVen);
				this.jTabbedPaneBusquedasConfiguracionPunVen.setEnabledAt(index,this.configuracionpunvenConstantesFunciones.activarFK_IdCuentaContableEfectivoConfiguracionPunVen);
			}

			index= this.jTabbedPaneBusquedasConfiguracionPunVen.indexOfComponent(this.jPanelFK_IdCuentaContableIceConfiguracionPunVen);
			if(index>-1) {
				jPanel=(JPanel)this.jTabbedPaneBusquedasConfiguracionPunVen.getComponent(index);
				//ENABLE PANE=FALSE NO FUNCIONA, ENABLEAT SI
				jPanel.setEnabled(this.configuracionpunvenConstantesFunciones.activarFK_IdCuentaContableIceConfiguracionPunVen);
				this.jTabbedPaneBusquedasConfiguracionPunVen.setEnabledAt(index,this.configuracionpunvenConstantesFunciones.activarFK_IdCuentaContableIceConfiguracionPunVen);
			}

			index= this.jTabbedPaneBusquedasConfiguracionPunVen.indexOfComponent(this.jPanelFK_IdCuentaContableOtrosConfiguracionPunVen);
			if(index>-1) {
				jPanel=(JPanel)this.jTabbedPaneBusquedasConfiguracionPunVen.getComponent(index);
				//ENABLE PANE=FALSE NO FUNCIONA, ENABLEAT SI
				jPanel.setEnabled(this.configuracionpunvenConstantesFunciones.activarFK_IdCuentaContableOtrosConfiguracionPunVen);
				this.jTabbedPaneBusquedasConfiguracionPunVen.setEnabledAt(index,this.configuracionpunvenConstantesFunciones.activarFK_IdCuentaContableOtrosConfiguracionPunVen);
			}

			index= this.jTabbedPaneBusquedasConfiguracionPunVen.indexOfComponent(this.jPanelFK_IdFormatoFacturaConfiguracionPunVen);
			if(index>-1) {
				jPanel=(JPanel)this.jTabbedPaneBusquedasConfiguracionPunVen.getComponent(index);
				//ENABLE PANE=FALSE NO FUNCIONA, ENABLEAT SI
				jPanel.setEnabled(this.configuracionpunvenConstantesFunciones.activarFK_IdFormatoFacturaConfiguracionPunVen);
				this.jTabbedPaneBusquedasConfiguracionPunVen.setEnabledAt(index,this.configuracionpunvenConstantesFunciones.activarFK_IdFormatoFacturaConfiguracionPunVen);
			}

			index= this.jTabbedPaneBusquedasConfiguracionPunVen.indexOfComponent(this.jPanelFK_IdFormatoNotaCreditoConfiguracionPunVen);
			if(index>-1) {
				jPanel=(JPanel)this.jTabbedPaneBusquedasConfiguracionPunVen.getComponent(index);
				//ENABLE PANE=FALSE NO FUNCIONA, ENABLEAT SI
				jPanel.setEnabled(this.configuracionpunvenConstantesFunciones.activarFK_IdFormatoNotaCreditoConfiguracionPunVen);
				this.jTabbedPaneBusquedasConfiguracionPunVen.setEnabledAt(index,this.configuracionpunvenConstantesFunciones.activarFK_IdFormatoNotaCreditoConfiguracionPunVen);
			}

			index= this.jTabbedPaneBusquedasConfiguracionPunVen.indexOfComponent(this.jPanelFK_IdFormatoNotaVentaConfiguracionPunVen);
			if(index>-1) {
				jPanel=(JPanel)this.jTabbedPaneBusquedasConfiguracionPunVen.getComponent(index);
				//ENABLE PANE=FALSE NO FUNCIONA, ENABLEAT SI
				jPanel.setEnabled(this.configuracionpunvenConstantesFunciones.activarFK_IdFormatoNotaVentaConfiguracionPunVen);
				this.jTabbedPaneBusquedasConfiguracionPunVen.setEnabledAt(index,this.configuracionpunvenConstantesFunciones.activarFK_IdFormatoNotaVentaConfiguracionPunVen);
			}

			index= this.jTabbedPaneBusquedasConfiguracionPunVen.indexOfComponent(this.jPanelFK_IdTipoDocumentoFacturaConfiguracionPunVen);
			if(index>-1) {
				jPanel=(JPanel)this.jTabbedPaneBusquedasConfiguracionPunVen.getComponent(index);
				//ENABLE PANE=FALSE NO FUNCIONA, ENABLEAT SI
				jPanel.setEnabled(this.configuracionpunvenConstantesFunciones.activarFK_IdTipoDocumentoFacturaConfiguracionPunVen);
				this.jTabbedPaneBusquedasConfiguracionPunVen.setEnabledAt(index,this.configuracionpunvenConstantesFunciones.activarFK_IdTipoDocumentoFacturaConfiguracionPunVen);
			}

			index= this.jTabbedPaneBusquedasConfiguracionPunVen.indexOfComponent(this.jPanelFK_IdTipoDocumentoNotaCreditoConfiguracionPunVen);
			if(index>-1) {
				jPanel=(JPanel)this.jTabbedPaneBusquedasConfiguracionPunVen.getComponent(index);
				//ENABLE PANE=FALSE NO FUNCIONA, ENABLEAT SI
				jPanel.setEnabled(this.configuracionpunvenConstantesFunciones.activarFK_IdTipoDocumentoNotaCreditoConfiguracionPunVen);
				this.jTabbedPaneBusquedasConfiguracionPunVen.setEnabledAt(index,this.configuracionpunvenConstantesFunciones.activarFK_IdTipoDocumentoNotaCreditoConfiguracionPunVen);
			}

			index= this.jTabbedPaneBusquedasConfiguracionPunVen.indexOfComponent(this.jPanelFK_IdTipoDocumentoNotaVentaConfiguracionPunVen);
			if(index>-1) {
				jPanel=(JPanel)this.jTabbedPaneBusquedasConfiguracionPunVen.getComponent(index);
				//ENABLE PANE=FALSE NO FUNCIONA, ENABLEAT SI
				jPanel.setEnabled(this.configuracionpunvenConstantesFunciones.activarFK_IdTipoDocumentoNotaVentaConfiguracionPunVen);
				this.jTabbedPaneBusquedasConfiguracionPunVen.setEnabledAt(index,this.configuracionpunvenConstantesFunciones.activarFK_IdTipoDocumentoNotaVentaConfiguracionPunVen);
			}

			index= this.jTabbedPaneBusquedasConfiguracionPunVen.indexOfComponent(this.jPanelFK_IdTipoDocumentoTarjetaCreditoConfiguracionPunVen);
			if(index>-1) {
				jPanel=(JPanel)this.jTabbedPaneBusquedasConfiguracionPunVen.getComponent(index);
				//ENABLE PANE=FALSE NO FUNCIONA, ENABLEAT SI
				jPanel.setEnabled(this.configuracionpunvenConstantesFunciones.activarFK_IdTipoDocumentoTarjetaCreditoConfiguracionPunVen);
				this.jTabbedPaneBusquedasConfiguracionPunVen.setEnabledAt(index,this.configuracionpunvenConstantesFunciones.activarFK_IdTipoDocumentoTarjetaCreditoConfiguracionPunVen);
			}

			index= this.jTabbedPaneBusquedasConfiguracionPunVen.indexOfComponent(this.jPanelFK_IdTransaccionCuentaFacturaConfiguracionPunVen);
			if(index>-1) {
				jPanel=(JPanel)this.jTabbedPaneBusquedasConfiguracionPunVen.getComponent(index);
				//ENABLE PANE=FALSE NO FUNCIONA, ENABLEAT SI
				jPanel.setEnabled(this.configuracionpunvenConstantesFunciones.activarFK_IdTransaccionCuentaFacturaConfiguracionPunVen);
				this.jTabbedPaneBusquedasConfiguracionPunVen.setEnabledAt(index,this.configuracionpunvenConstantesFunciones.activarFK_IdTransaccionCuentaFacturaConfiguracionPunVen);
			}

			index= this.jTabbedPaneBusquedasConfiguracionPunVen.indexOfComponent(this.jPanelFK_IdTransaccionCuentaNotaCreditoConfiguracionPunVen);
			if(index>-1) {
				jPanel=(JPanel)this.jTabbedPaneBusquedasConfiguracionPunVen.getComponent(index);
				//ENABLE PANE=FALSE NO FUNCIONA, ENABLEAT SI
				jPanel.setEnabled(this.configuracionpunvenConstantesFunciones.activarFK_IdTransaccionCuentaNotaCreditoConfiguracionPunVen);
				this.jTabbedPaneBusquedasConfiguracionPunVen.setEnabledAt(index,this.configuracionpunvenConstantesFunciones.activarFK_IdTransaccionCuentaNotaCreditoConfiguracionPunVen);
			}

			index= this.jTabbedPaneBusquedasConfiguracionPunVen.indexOfComponent(this.jPanelFK_IdTransaccionCuentaNotaVentaConfiguracionPunVen);
			if(index>-1) {
				jPanel=(JPanel)this.jTabbedPaneBusquedasConfiguracionPunVen.getComponent(index);
				//ENABLE PANE=FALSE NO FUNCIONA, ENABLEAT SI
				jPanel.setEnabled(this.configuracionpunvenConstantesFunciones.activarFK_IdTransaccionCuentaNotaVentaConfiguracionPunVen);
				this.jTabbedPaneBusquedasConfiguracionPunVen.setEnabledAt(index,this.configuracionpunvenConstantesFunciones.activarFK_IdTransaccionCuentaNotaVentaConfiguracionPunVen);
			}

			index= this.jTabbedPaneBusquedasConfiguracionPunVen.indexOfComponent(this.jPanelFK_IdTransaccionFacturaConfiguracionPunVen);
			if(index>-1) {
				jPanel=(JPanel)this.jTabbedPaneBusquedasConfiguracionPunVen.getComponent(index);
				//ENABLE PANE=FALSE NO FUNCIONA, ENABLEAT SI
				jPanel.setEnabled(this.configuracionpunvenConstantesFunciones.activarFK_IdTransaccionFacturaConfiguracionPunVen);
				this.jTabbedPaneBusquedasConfiguracionPunVen.setEnabledAt(index,this.configuracionpunvenConstantesFunciones.activarFK_IdTransaccionFacturaConfiguracionPunVen);
			}

			index= this.jTabbedPaneBusquedasConfiguracionPunVen.indexOfComponent(this.jPanelFK_IdTransaccionNotaCreditoConfiguracionPunVen);
			if(index>-1) {
				jPanel=(JPanel)this.jTabbedPaneBusquedasConfiguracionPunVen.getComponent(index);
				//ENABLE PANE=FALSE NO FUNCIONA, ENABLEAT SI
				jPanel.setEnabled(this.configuracionpunvenConstantesFunciones.activarFK_IdTransaccionNotaCreditoConfiguracionPunVen);
				this.jTabbedPaneBusquedasConfiguracionPunVen.setEnabledAt(index,this.configuracionpunvenConstantesFunciones.activarFK_IdTransaccionNotaCreditoConfiguracionPunVen);
			}

			index= this.jTabbedPaneBusquedasConfiguracionPunVen.indexOfComponent(this.jPanelFK_IdTransaccionNotaVentaConfiguracionPunVen);
			if(index>-1) {
				jPanel=(JPanel)this.jTabbedPaneBusquedasConfiguracionPunVen.getComponent(index);
				//ENABLE PANE=FALSE NO FUNCIONA, ENABLEAT SI
				jPanel.setEnabled(this.configuracionpunvenConstantesFunciones.activarFK_IdTransaccionNotaVentaConfiguracionPunVen);
				this.jTabbedPaneBusquedasConfiguracionPunVen.setEnabledAt(index,this.configuracionpunvenConstantesFunciones.activarFK_IdTransaccionNotaVentaConfiguracionPunVen);
			}
		}	
	
	}
	
	
	public void resaltarPanelBusquedaConfiguracionPunVen(String sTipoBusqueda) {
		Boolean existe=false;
		//BYDAN_BUSQUEDAS
		
		int index=0;
		Border resaltar = Funciones2.getBorderResaltar(this.parametroGeneralUsuario,"TAB");

		if(sTipoBusqueda.equals("FK_IdBodega")) {
			index= this.jTabbedPaneBusquedasConfiguracionPunVen.indexOfComponent(this.jPanelFK_IdBodegaConfiguracionPunVen);

			this.jTabbedPaneBusquedasConfiguracionPunVen.setSelectedIndex(index);

			JPanel jPanel=(JPanel)this.jTabbedPaneBusquedasConfiguracionPunVen.getComponent(index);

			this.configuracionpunvenConstantesFunciones.setResaltarFK_IdBodegaConfiguracionPunVen(resaltar);

			jPanel.setBorder(this.configuracionpunvenConstantesFunciones.resaltarFK_IdBodegaConfiguracionPunVen);
			existe=true;
		}
		else if(sTipoBusqueda.equals("FK_IdClienteConsumidorFinal")) {
			index= this.jTabbedPaneBusquedasConfiguracionPunVen.indexOfComponent(this.jPanelFK_IdClienteConsumidorFinalConfiguracionPunVen);

			this.jTabbedPaneBusquedasConfiguracionPunVen.setSelectedIndex(index);

			JPanel jPanel=(JPanel)this.jTabbedPaneBusquedasConfiguracionPunVen.getComponent(index);

			this.configuracionpunvenConstantesFunciones.setResaltarFK_IdClienteConsumidorFinalConfiguracionPunVen(resaltar);

			jPanel.setBorder(this.configuracionpunvenConstantesFunciones.resaltarFK_IdClienteConsumidorFinalConfiguracionPunVen);
			existe=true;
		}
		else if(sTipoBusqueda.equals("FK_IdCuentaContableEfectivo")) {
			index= this.jTabbedPaneBusquedasConfiguracionPunVen.indexOfComponent(this.jPanelFK_IdCuentaContableEfectivoConfiguracionPunVen);

			this.jTabbedPaneBusquedasConfiguracionPunVen.setSelectedIndex(index);

			JPanel jPanel=(JPanel)this.jTabbedPaneBusquedasConfiguracionPunVen.getComponent(index);

			this.configuracionpunvenConstantesFunciones.setResaltarFK_IdCuentaContableEfectivoConfiguracionPunVen(resaltar);

			jPanel.setBorder(this.configuracionpunvenConstantesFunciones.resaltarFK_IdCuentaContableEfectivoConfiguracionPunVen);
			existe=true;
		}
		else if(sTipoBusqueda.equals("FK_IdCuentaContableIce")) {
			index= this.jTabbedPaneBusquedasConfiguracionPunVen.indexOfComponent(this.jPanelFK_IdCuentaContableIceConfiguracionPunVen);

			this.jTabbedPaneBusquedasConfiguracionPunVen.setSelectedIndex(index);

			JPanel jPanel=(JPanel)this.jTabbedPaneBusquedasConfiguracionPunVen.getComponent(index);

			this.configuracionpunvenConstantesFunciones.setResaltarFK_IdCuentaContableIceConfiguracionPunVen(resaltar);

			jPanel.setBorder(this.configuracionpunvenConstantesFunciones.resaltarFK_IdCuentaContableIceConfiguracionPunVen);
			existe=true;
		}
		else if(sTipoBusqueda.equals("FK_IdCuentaContableOtros")) {
			index= this.jTabbedPaneBusquedasConfiguracionPunVen.indexOfComponent(this.jPanelFK_IdCuentaContableOtrosConfiguracionPunVen);

			this.jTabbedPaneBusquedasConfiguracionPunVen.setSelectedIndex(index);

			JPanel jPanel=(JPanel)this.jTabbedPaneBusquedasConfiguracionPunVen.getComponent(index);

			this.configuracionpunvenConstantesFunciones.setResaltarFK_IdCuentaContableOtrosConfiguracionPunVen(resaltar);

			jPanel.setBorder(this.configuracionpunvenConstantesFunciones.resaltarFK_IdCuentaContableOtrosConfiguracionPunVen);
			existe=true;
		}
		else if(sTipoBusqueda.equals("FK_IdFormatoFactura")) {
			index= this.jTabbedPaneBusquedasConfiguracionPunVen.indexOfComponent(this.jPanelFK_IdFormatoFacturaConfiguracionPunVen);

			this.jTabbedPaneBusquedasConfiguracionPunVen.setSelectedIndex(index);

			JPanel jPanel=(JPanel)this.jTabbedPaneBusquedasConfiguracionPunVen.getComponent(index);

			this.configuracionpunvenConstantesFunciones.setResaltarFK_IdFormatoFacturaConfiguracionPunVen(resaltar);

			jPanel.setBorder(this.configuracionpunvenConstantesFunciones.resaltarFK_IdFormatoFacturaConfiguracionPunVen);
			existe=true;
		}
		else if(sTipoBusqueda.equals("FK_IdFormatoNotaCredito")) {
			index= this.jTabbedPaneBusquedasConfiguracionPunVen.indexOfComponent(this.jPanelFK_IdFormatoNotaCreditoConfiguracionPunVen);

			this.jTabbedPaneBusquedasConfiguracionPunVen.setSelectedIndex(index);

			JPanel jPanel=(JPanel)this.jTabbedPaneBusquedasConfiguracionPunVen.getComponent(index);

			this.configuracionpunvenConstantesFunciones.setResaltarFK_IdFormatoNotaCreditoConfiguracionPunVen(resaltar);

			jPanel.setBorder(this.configuracionpunvenConstantesFunciones.resaltarFK_IdFormatoNotaCreditoConfiguracionPunVen);
			existe=true;
		}
		else if(sTipoBusqueda.equals("FK_IdFormatoNotaVenta")) {
			index= this.jTabbedPaneBusquedasConfiguracionPunVen.indexOfComponent(this.jPanelFK_IdFormatoNotaVentaConfiguracionPunVen);

			this.jTabbedPaneBusquedasConfiguracionPunVen.setSelectedIndex(index);

			JPanel jPanel=(JPanel)this.jTabbedPaneBusquedasConfiguracionPunVen.getComponent(index);

			this.configuracionpunvenConstantesFunciones.setResaltarFK_IdFormatoNotaVentaConfiguracionPunVen(resaltar);

			jPanel.setBorder(this.configuracionpunvenConstantesFunciones.resaltarFK_IdFormatoNotaVentaConfiguracionPunVen);
			existe=true;
		}
		else if(sTipoBusqueda.equals("FK_IdTipoDocumentoFactura")) {
			index= this.jTabbedPaneBusquedasConfiguracionPunVen.indexOfComponent(this.jPanelFK_IdTipoDocumentoFacturaConfiguracionPunVen);

			this.jTabbedPaneBusquedasConfiguracionPunVen.setSelectedIndex(index);

			JPanel jPanel=(JPanel)this.jTabbedPaneBusquedasConfiguracionPunVen.getComponent(index);

			this.configuracionpunvenConstantesFunciones.setResaltarFK_IdTipoDocumentoFacturaConfiguracionPunVen(resaltar);

			jPanel.setBorder(this.configuracionpunvenConstantesFunciones.resaltarFK_IdTipoDocumentoFacturaConfiguracionPunVen);
			existe=true;
		}
		else if(sTipoBusqueda.equals("FK_IdTipoDocumentoNotaCredito")) {
			index= this.jTabbedPaneBusquedasConfiguracionPunVen.indexOfComponent(this.jPanelFK_IdTipoDocumentoNotaCreditoConfiguracionPunVen);

			this.jTabbedPaneBusquedasConfiguracionPunVen.setSelectedIndex(index);

			JPanel jPanel=(JPanel)this.jTabbedPaneBusquedasConfiguracionPunVen.getComponent(index);

			this.configuracionpunvenConstantesFunciones.setResaltarFK_IdTipoDocumentoNotaCreditoConfiguracionPunVen(resaltar);

			jPanel.setBorder(this.configuracionpunvenConstantesFunciones.resaltarFK_IdTipoDocumentoNotaCreditoConfiguracionPunVen);
			existe=true;
		}
		else if(sTipoBusqueda.equals("FK_IdTipoDocumentoNotaVenta")) {
			index= this.jTabbedPaneBusquedasConfiguracionPunVen.indexOfComponent(this.jPanelFK_IdTipoDocumentoNotaVentaConfiguracionPunVen);

			this.jTabbedPaneBusquedasConfiguracionPunVen.setSelectedIndex(index);

			JPanel jPanel=(JPanel)this.jTabbedPaneBusquedasConfiguracionPunVen.getComponent(index);

			this.configuracionpunvenConstantesFunciones.setResaltarFK_IdTipoDocumentoNotaVentaConfiguracionPunVen(resaltar);

			jPanel.setBorder(this.configuracionpunvenConstantesFunciones.resaltarFK_IdTipoDocumentoNotaVentaConfiguracionPunVen);
			existe=true;
		}
		else if(sTipoBusqueda.equals("FK_IdTipoDocumentoTarjetaCredito")) {
			index= this.jTabbedPaneBusquedasConfiguracionPunVen.indexOfComponent(this.jPanelFK_IdTipoDocumentoTarjetaCreditoConfiguracionPunVen);

			this.jTabbedPaneBusquedasConfiguracionPunVen.setSelectedIndex(index);

			JPanel jPanel=(JPanel)this.jTabbedPaneBusquedasConfiguracionPunVen.getComponent(index);

			this.configuracionpunvenConstantesFunciones.setResaltarFK_IdTipoDocumentoTarjetaCreditoConfiguracionPunVen(resaltar);

			jPanel.setBorder(this.configuracionpunvenConstantesFunciones.resaltarFK_IdTipoDocumentoTarjetaCreditoConfiguracionPunVen);
			existe=true;
		}
		else if(sTipoBusqueda.equals("FK_IdTransaccionCuentaFactura")) {
			index= this.jTabbedPaneBusquedasConfiguracionPunVen.indexOfComponent(this.jPanelFK_IdTransaccionCuentaFacturaConfiguracionPunVen);

			this.jTabbedPaneBusquedasConfiguracionPunVen.setSelectedIndex(index);

			JPanel jPanel=(JPanel)this.jTabbedPaneBusquedasConfiguracionPunVen.getComponent(index);

			this.configuracionpunvenConstantesFunciones.setResaltarFK_IdTransaccionCuentaFacturaConfiguracionPunVen(resaltar);

			jPanel.setBorder(this.configuracionpunvenConstantesFunciones.resaltarFK_IdTransaccionCuentaFacturaConfiguracionPunVen);
			existe=true;
		}
		else if(sTipoBusqueda.equals("FK_IdTransaccionCuentaNotaCredito")) {
			index= this.jTabbedPaneBusquedasConfiguracionPunVen.indexOfComponent(this.jPanelFK_IdTransaccionCuentaNotaCreditoConfiguracionPunVen);

			this.jTabbedPaneBusquedasConfiguracionPunVen.setSelectedIndex(index);

			JPanel jPanel=(JPanel)this.jTabbedPaneBusquedasConfiguracionPunVen.getComponent(index);

			this.configuracionpunvenConstantesFunciones.setResaltarFK_IdTransaccionCuentaNotaCreditoConfiguracionPunVen(resaltar);

			jPanel.setBorder(this.configuracionpunvenConstantesFunciones.resaltarFK_IdTransaccionCuentaNotaCreditoConfiguracionPunVen);
			existe=true;
		}
		else if(sTipoBusqueda.equals("FK_IdTransaccionCuentaNotaVenta")) {
			index= this.jTabbedPaneBusquedasConfiguracionPunVen.indexOfComponent(this.jPanelFK_IdTransaccionCuentaNotaVentaConfiguracionPunVen);

			this.jTabbedPaneBusquedasConfiguracionPunVen.setSelectedIndex(index);

			JPanel jPanel=(JPanel)this.jTabbedPaneBusquedasConfiguracionPunVen.getComponent(index);

			this.configuracionpunvenConstantesFunciones.setResaltarFK_IdTransaccionCuentaNotaVentaConfiguracionPunVen(resaltar);

			jPanel.setBorder(this.configuracionpunvenConstantesFunciones.resaltarFK_IdTransaccionCuentaNotaVentaConfiguracionPunVen);
			existe=true;
		}
		else if(sTipoBusqueda.equals("FK_IdTransaccionFactura")) {
			index= this.jTabbedPaneBusquedasConfiguracionPunVen.indexOfComponent(this.jPanelFK_IdTransaccionFacturaConfiguracionPunVen);

			this.jTabbedPaneBusquedasConfiguracionPunVen.setSelectedIndex(index);

			JPanel jPanel=(JPanel)this.jTabbedPaneBusquedasConfiguracionPunVen.getComponent(index);

			this.configuracionpunvenConstantesFunciones.setResaltarFK_IdTransaccionFacturaConfiguracionPunVen(resaltar);

			jPanel.setBorder(this.configuracionpunvenConstantesFunciones.resaltarFK_IdTransaccionFacturaConfiguracionPunVen);
			existe=true;
		}
		else if(sTipoBusqueda.equals("FK_IdTransaccionNotaCredito")) {
			index= this.jTabbedPaneBusquedasConfiguracionPunVen.indexOfComponent(this.jPanelFK_IdTransaccionNotaCreditoConfiguracionPunVen);

			this.jTabbedPaneBusquedasConfiguracionPunVen.setSelectedIndex(index);

			JPanel jPanel=(JPanel)this.jTabbedPaneBusquedasConfiguracionPunVen.getComponent(index);

			this.configuracionpunvenConstantesFunciones.setResaltarFK_IdTransaccionNotaCreditoConfiguracionPunVen(resaltar);

			jPanel.setBorder(this.configuracionpunvenConstantesFunciones.resaltarFK_IdTransaccionNotaCreditoConfiguracionPunVen);
			existe=true;
		}
		else if(sTipoBusqueda.equals("FK_IdTransaccionNotaVenta")) {
			index= this.jTabbedPaneBusquedasConfiguracionPunVen.indexOfComponent(this.jPanelFK_IdTransaccionNotaVentaConfiguracionPunVen);

			this.jTabbedPaneBusquedasConfiguracionPunVen.setSelectedIndex(index);

			JPanel jPanel=(JPanel)this.jTabbedPaneBusquedasConfiguracionPunVen.getComponent(index);

			this.configuracionpunvenConstantesFunciones.setResaltarFK_IdTransaccionNotaVentaConfiguracionPunVen(resaltar);

			jPanel.setBorder(this.configuracionpunvenConstantesFunciones.resaltarFK_IdTransaccionNotaVentaConfiguracionPunVen);
			existe=true;
		}
		

		if(existe) {
			
			this.jTtoolBarConfiguracionPunVen.setBorder(resaltar);
			
		}
	}	
	
	//NO FUNCIONA
	public void windowClosed(WindowEvent e) {	
	}
		
	public void windowClosing(WindowEvent e) {	    	    
	}

	public void windowOpened(WindowEvent e) {	    
	}

	public void windowIconified(WindowEvent e) {	    
	}

	public void windowDeiconified(WindowEvent e) {	    
	}

	public void windowActivated(WindowEvent e) {	    
	}

	public void windowDeactivated(WindowEvent e) {	    
	}

	public void windowGainedFocus(WindowEvent e) {	    
	}

	public void windowLostFocus(WindowEvent e) {	    
	}
	
	public void updateControlesFormularioConfiguracionPunVen() throws Exception {

		if(this.jInternalFrameDetalleFormConfiguracionPunVen==null) { //if(!this.conCargarFormDetalle) {			
			this.inicializarFormDetalle();
		}
		
		this.updateBorderResaltarControlesFormularioConfiguracionPunVen();
		this.updateVisibilidadResaltarControlesFormularioConfiguracionPunVen();
		this.updateHabilitarResaltarControlesFormularioConfiguracionPunVen();
		
	}
	
	public void updateBorderResaltarControlesFormularioConfiguracionPunVen() throws Exception {
		if(this.jInternalFrameDetalleFormConfiguracionPunVen==null) { //if(!this.conCargarFormDetalle) {
			this.inicializarFormDetalle();
		}
		
	
		if(this.configuracionpunvenConstantesFunciones.resaltaridConfiguracionPunVen!=null && this.jInternalFrameDetalleFormConfiguracionPunVen!=null) {this.jInternalFrameDetalleFormConfiguracionPunVen.jLabelidConfiguracionPunVen.setBorder(this.configuracionpunvenConstantesFunciones.resaltaridConfiguracionPunVen);}
		if(this.configuracionpunvenConstantesFunciones.resaltarid_empresaConfiguracionPunVen!=null && this.jInternalFrameDetalleFormConfiguracionPunVen!=null) {this.jInternalFrameDetalleFormConfiguracionPunVen.jComboBoxid_empresaConfiguracionPunVen.setBorder(this.configuracionpunvenConstantesFunciones.resaltarid_empresaConfiguracionPunVen);}
		if(this.configuracionpunvenConstantesFunciones.resaltarid_sucursalConfiguracionPunVen!=null && this.jInternalFrameDetalleFormConfiguracionPunVen!=null) {this.jInternalFrameDetalleFormConfiguracionPunVen.jComboBoxid_sucursalConfiguracionPunVen.setBorder(this.configuracionpunvenConstantesFunciones.resaltarid_sucursalConfiguracionPunVen);}
		if(this.configuracionpunvenConstantesFunciones.resaltarid_bodegaConfiguracionPunVen!=null && this.jInternalFrameDetalleFormConfiguracionPunVen!=null) {this.jInternalFrameDetalleFormConfiguracionPunVen.jComboBoxid_bodegaConfiguracionPunVen.setBorder(this.configuracionpunvenConstantesFunciones.resaltarid_bodegaConfiguracionPunVen);}
		if(this.configuracionpunvenConstantesFunciones.resaltarid_cuenta_contable_efectivoConfiguracionPunVen!=null && this.jInternalFrameDetalleFormConfiguracionPunVen!=null) {this.jInternalFrameDetalleFormConfiguracionPunVen.jComboBoxid_cuenta_contable_efectivoConfiguracionPunVen.setBorder(this.configuracionpunvenConstantesFunciones.resaltarid_cuenta_contable_efectivoConfiguracionPunVen);}
		if(this.configuracionpunvenConstantesFunciones.resaltarid_cuenta_contable_iceConfiguracionPunVen!=null && this.jInternalFrameDetalleFormConfiguracionPunVen!=null) {this.jInternalFrameDetalleFormConfiguracionPunVen.jComboBoxid_cuenta_contable_iceConfiguracionPunVen.setBorder(this.configuracionpunvenConstantesFunciones.resaltarid_cuenta_contable_iceConfiguracionPunVen);}
		if(this.configuracionpunvenConstantesFunciones.resaltarid_cuenta_contable_otrosConfiguracionPunVen!=null && this.jInternalFrameDetalleFormConfiguracionPunVen!=null) {this.jInternalFrameDetalleFormConfiguracionPunVen.jComboBoxid_cuenta_contable_otrosConfiguracionPunVen.setBorder(this.configuracionpunvenConstantesFunciones.resaltarid_cuenta_contable_otrosConfiguracionPunVen);}
		if(this.configuracionpunvenConstantesFunciones.resaltarid_cliente_consumidor_finalConfiguracionPunVen!=null && this.jInternalFrameDetalleFormConfiguracionPunVen!=null) {this.jInternalFrameDetalleFormConfiguracionPunVen.jComboBoxid_cliente_consumidor_finalConfiguracionPunVen.setBorder(this.configuracionpunvenConstantesFunciones.resaltarid_cliente_consumidor_finalConfiguracionPunVen);}
		if(this.configuracionpunvenConstantesFunciones.resaltarid_tipo_documento_facturaConfiguracionPunVen!=null && this.jInternalFrameDetalleFormConfiguracionPunVen!=null) {this.jInternalFrameDetalleFormConfiguracionPunVen.jComboBoxid_tipo_documento_facturaConfiguracionPunVen.setBorder(this.configuracionpunvenConstantesFunciones.resaltarid_tipo_documento_facturaConfiguracionPunVen);}
		if(this.configuracionpunvenConstantesFunciones.resaltarid_tipo_documento_nota_ventaConfiguracionPunVen!=null && this.jInternalFrameDetalleFormConfiguracionPunVen!=null) {this.jInternalFrameDetalleFormConfiguracionPunVen.jComboBoxid_tipo_documento_nota_ventaConfiguracionPunVen.setBorder(this.configuracionpunvenConstantesFunciones.resaltarid_tipo_documento_nota_ventaConfiguracionPunVen);}
		if(this.configuracionpunvenConstantesFunciones.resaltarid_tipo_documento_nota_creditoConfiguracionPunVen!=null && this.jInternalFrameDetalleFormConfiguracionPunVen!=null) {this.jInternalFrameDetalleFormConfiguracionPunVen.jComboBoxid_tipo_documento_nota_creditoConfiguracionPunVen.setBorder(this.configuracionpunvenConstantesFunciones.resaltarid_tipo_documento_nota_creditoConfiguracionPunVen);}
		if(this.configuracionpunvenConstantesFunciones.resaltarid_tipo_documento_tarjeta_creditoConfiguracionPunVen!=null && this.jInternalFrameDetalleFormConfiguracionPunVen!=null) {this.jInternalFrameDetalleFormConfiguracionPunVen.jComboBoxid_tipo_documento_tarjeta_creditoConfiguracionPunVen.setBorder(this.configuracionpunvenConstantesFunciones.resaltarid_tipo_documento_tarjeta_creditoConfiguracionPunVen);}
		if(this.configuracionpunvenConstantesFunciones.resaltarid_formato_facturaConfiguracionPunVen!=null && this.jInternalFrameDetalleFormConfiguracionPunVen!=null) {this.jInternalFrameDetalleFormConfiguracionPunVen.jComboBoxid_formato_facturaConfiguracionPunVen.setBorder(this.configuracionpunvenConstantesFunciones.resaltarid_formato_facturaConfiguracionPunVen);}
		if(this.configuracionpunvenConstantesFunciones.resaltarid_formato_nota_ventaConfiguracionPunVen!=null && this.jInternalFrameDetalleFormConfiguracionPunVen!=null) {this.jInternalFrameDetalleFormConfiguracionPunVen.jComboBoxid_formato_nota_ventaConfiguracionPunVen.setBorder(this.configuracionpunvenConstantesFunciones.resaltarid_formato_nota_ventaConfiguracionPunVen);}
		if(this.configuracionpunvenConstantesFunciones.resaltarid_formato_nota_creditoConfiguracionPunVen!=null && this.jInternalFrameDetalleFormConfiguracionPunVen!=null) {this.jInternalFrameDetalleFormConfiguracionPunVen.jComboBoxid_formato_nota_creditoConfiguracionPunVen.setBorder(this.configuracionpunvenConstantesFunciones.resaltarid_formato_nota_creditoConfiguracionPunVen);}
		if(this.configuracionpunvenConstantesFunciones.resaltarid_transaccion_facturaConfiguracionPunVen!=null && this.jInternalFrameDetalleFormConfiguracionPunVen!=null) {this.jInternalFrameDetalleFormConfiguracionPunVen.jComboBoxid_transaccion_facturaConfiguracionPunVen.setBorder(this.configuracionpunvenConstantesFunciones.resaltarid_transaccion_facturaConfiguracionPunVen);}
		if(this.configuracionpunvenConstantesFunciones.resaltarid_transaccion_nota_ventaConfiguracionPunVen!=null && this.jInternalFrameDetalleFormConfiguracionPunVen!=null) {this.jInternalFrameDetalleFormConfiguracionPunVen.jComboBoxid_transaccion_nota_ventaConfiguracionPunVen.setBorder(this.configuracionpunvenConstantesFunciones.resaltarid_transaccion_nota_ventaConfiguracionPunVen);}
		if(this.configuracionpunvenConstantesFunciones.resaltarid_transaccion_nota_creditoConfiguracionPunVen!=null && this.jInternalFrameDetalleFormConfiguracionPunVen!=null) {this.jInternalFrameDetalleFormConfiguracionPunVen.jComboBoxid_transaccion_nota_creditoConfiguracionPunVen.setBorder(this.configuracionpunvenConstantesFunciones.resaltarid_transaccion_nota_creditoConfiguracionPunVen);}
		if(this.configuracionpunvenConstantesFunciones.resaltarid_transaccion_cuenta_facturaConfiguracionPunVen!=null && this.jInternalFrameDetalleFormConfiguracionPunVen!=null) {this.jInternalFrameDetalleFormConfiguracionPunVen.jComboBoxid_transaccion_cuenta_facturaConfiguracionPunVen.setBorder(this.configuracionpunvenConstantesFunciones.resaltarid_transaccion_cuenta_facturaConfiguracionPunVen);}
		if(this.configuracionpunvenConstantesFunciones.resaltarid_transaccion_cuenta_nota_ventaConfiguracionPunVen!=null && this.jInternalFrameDetalleFormConfiguracionPunVen!=null) {this.jInternalFrameDetalleFormConfiguracionPunVen.jComboBoxid_transaccion_cuenta_nota_ventaConfiguracionPunVen.setBorder(this.configuracionpunvenConstantesFunciones.resaltarid_transaccion_cuenta_nota_ventaConfiguracionPunVen);}
		if(this.configuracionpunvenConstantesFunciones.resaltarid_transaccion_cuenta_nota_creditoConfiguracionPunVen!=null && this.jInternalFrameDetalleFormConfiguracionPunVen!=null) {this.jInternalFrameDetalleFormConfiguracionPunVen.jComboBoxid_transaccion_cuenta_nota_creditoConfiguracionPunVen.setBorder(this.configuracionpunvenConstantesFunciones.resaltarid_transaccion_cuenta_nota_creditoConfiguracionPunVen);}
	}
	
	public void updateVisibilidadResaltarControlesFormularioConfiguracionPunVen() throws Exception {		
		if(this.jInternalFrameDetalleFormConfiguracionPunVen==null) { //if(!this.conCargarFormDetalle) {
			this.inicializarFormDetalle();
		}
		
		if(this.jInternalFrameDetalleFormConfiguracionPunVen!=null) {
	
		//this.jInternalFrameDetalleFormConfiguracionPunVen.jLabelidConfiguracionPunVen.setVisible(this.configuracionpunvenConstantesFunciones.mostraridConfiguracionPunVen);
		this.jInternalFrameDetalleFormConfiguracionPunVen.jPanelidConfiguracionPunVen.setVisible(this.configuracionpunvenConstantesFunciones.mostraridConfiguracionPunVen);
		//this.jInternalFrameDetalleFormConfiguracionPunVen.jComboBoxid_empresaConfiguracionPunVen.setVisible(this.configuracionpunvenConstantesFunciones.mostrarid_empresaConfiguracionPunVen);
		this.jInternalFrameDetalleFormConfiguracionPunVen.jPanelid_empresaConfiguracionPunVen.setVisible(this.configuracionpunvenConstantesFunciones.mostrarid_empresaConfiguracionPunVen);
		//this.jInternalFrameDetalleFormConfiguracionPunVen.jComboBoxid_sucursalConfiguracionPunVen.setVisible(this.configuracionpunvenConstantesFunciones.mostrarid_sucursalConfiguracionPunVen);
		this.jInternalFrameDetalleFormConfiguracionPunVen.jPanelid_sucursalConfiguracionPunVen.setVisible(this.configuracionpunvenConstantesFunciones.mostrarid_sucursalConfiguracionPunVen);
		//this.jInternalFrameDetalleFormConfiguracionPunVen.jComboBoxid_bodegaConfiguracionPunVen.setVisible(this.configuracionpunvenConstantesFunciones.mostrarid_bodegaConfiguracionPunVen);
		this.jInternalFrameDetalleFormConfiguracionPunVen.jPanelid_bodegaConfiguracionPunVen.setVisible(this.configuracionpunvenConstantesFunciones.mostrarid_bodegaConfiguracionPunVen);
		//this.jInternalFrameDetalleFormConfiguracionPunVen.jComboBoxid_cuenta_contable_efectivoConfiguracionPunVen.setVisible(this.configuracionpunvenConstantesFunciones.mostrarid_cuenta_contable_efectivoConfiguracionPunVen);
		this.jInternalFrameDetalleFormConfiguracionPunVen.jPanelid_cuenta_contable_efectivoConfiguracionPunVen.setVisible(this.configuracionpunvenConstantesFunciones.mostrarid_cuenta_contable_efectivoConfiguracionPunVen);
		//this.jInternalFrameDetalleFormConfiguracionPunVen.jComboBoxid_cuenta_contable_iceConfiguracionPunVen.setVisible(this.configuracionpunvenConstantesFunciones.mostrarid_cuenta_contable_iceConfiguracionPunVen);
		this.jInternalFrameDetalleFormConfiguracionPunVen.jPanelid_cuenta_contable_iceConfiguracionPunVen.setVisible(this.configuracionpunvenConstantesFunciones.mostrarid_cuenta_contable_iceConfiguracionPunVen);
		//this.jInternalFrameDetalleFormConfiguracionPunVen.jComboBoxid_cuenta_contable_otrosConfiguracionPunVen.setVisible(this.configuracionpunvenConstantesFunciones.mostrarid_cuenta_contable_otrosConfiguracionPunVen);
		this.jInternalFrameDetalleFormConfiguracionPunVen.jPanelid_cuenta_contable_otrosConfiguracionPunVen.setVisible(this.configuracionpunvenConstantesFunciones.mostrarid_cuenta_contable_otrosConfiguracionPunVen);
		//this.jInternalFrameDetalleFormConfiguracionPunVen.jComboBoxid_cliente_consumidor_finalConfiguracionPunVen.setVisible(this.configuracionpunvenConstantesFunciones.mostrarid_cliente_consumidor_finalConfiguracionPunVen);
		this.jInternalFrameDetalleFormConfiguracionPunVen.jPanelid_cliente_consumidor_finalConfiguracionPunVen.setVisible(this.configuracionpunvenConstantesFunciones.mostrarid_cliente_consumidor_finalConfiguracionPunVen);
			this.jInternalFrameDetalleFormConfiguracionPunVen.jButtonid_cliente_consumidor_finalConfiguracionPunVen.setVisible(this.configuracionpunvenConstantesFunciones.mostrarid_cliente_consumidor_finalConfiguracionPunVen);
		//this.jInternalFrameDetalleFormConfiguracionPunVen.jComboBoxid_tipo_documento_facturaConfiguracionPunVen.setVisible(this.configuracionpunvenConstantesFunciones.mostrarid_tipo_documento_facturaConfiguracionPunVen);
		this.jInternalFrameDetalleFormConfiguracionPunVen.jPanelid_tipo_documento_facturaConfiguracionPunVen.setVisible(this.configuracionpunvenConstantesFunciones.mostrarid_tipo_documento_facturaConfiguracionPunVen);
		//this.jInternalFrameDetalleFormConfiguracionPunVen.jComboBoxid_tipo_documento_nota_ventaConfiguracionPunVen.setVisible(this.configuracionpunvenConstantesFunciones.mostrarid_tipo_documento_nota_ventaConfiguracionPunVen);
		this.jInternalFrameDetalleFormConfiguracionPunVen.jPanelid_tipo_documento_nota_ventaConfiguracionPunVen.setVisible(this.configuracionpunvenConstantesFunciones.mostrarid_tipo_documento_nota_ventaConfiguracionPunVen);
		//this.jInternalFrameDetalleFormConfiguracionPunVen.jComboBoxid_tipo_documento_nota_creditoConfiguracionPunVen.setVisible(this.configuracionpunvenConstantesFunciones.mostrarid_tipo_documento_nota_creditoConfiguracionPunVen);
		this.jInternalFrameDetalleFormConfiguracionPunVen.jPanelid_tipo_documento_nota_creditoConfiguracionPunVen.setVisible(this.configuracionpunvenConstantesFunciones.mostrarid_tipo_documento_nota_creditoConfiguracionPunVen);
		//this.jInternalFrameDetalleFormConfiguracionPunVen.jComboBoxid_tipo_documento_tarjeta_creditoConfiguracionPunVen.setVisible(this.configuracionpunvenConstantesFunciones.mostrarid_tipo_documento_tarjeta_creditoConfiguracionPunVen);
		this.jInternalFrameDetalleFormConfiguracionPunVen.jPanelid_tipo_documento_tarjeta_creditoConfiguracionPunVen.setVisible(this.configuracionpunvenConstantesFunciones.mostrarid_tipo_documento_tarjeta_creditoConfiguracionPunVen);
		//this.jInternalFrameDetalleFormConfiguracionPunVen.jComboBoxid_formato_facturaConfiguracionPunVen.setVisible(this.configuracionpunvenConstantesFunciones.mostrarid_formato_facturaConfiguracionPunVen);
		this.jInternalFrameDetalleFormConfiguracionPunVen.jPanelid_formato_facturaConfiguracionPunVen.setVisible(this.configuracionpunvenConstantesFunciones.mostrarid_formato_facturaConfiguracionPunVen);
		//this.jInternalFrameDetalleFormConfiguracionPunVen.jComboBoxid_formato_nota_ventaConfiguracionPunVen.setVisible(this.configuracionpunvenConstantesFunciones.mostrarid_formato_nota_ventaConfiguracionPunVen);
		this.jInternalFrameDetalleFormConfiguracionPunVen.jPanelid_formato_nota_ventaConfiguracionPunVen.setVisible(this.configuracionpunvenConstantesFunciones.mostrarid_formato_nota_ventaConfiguracionPunVen);
		//this.jInternalFrameDetalleFormConfiguracionPunVen.jComboBoxid_formato_nota_creditoConfiguracionPunVen.setVisible(this.configuracionpunvenConstantesFunciones.mostrarid_formato_nota_creditoConfiguracionPunVen);
		this.jInternalFrameDetalleFormConfiguracionPunVen.jPanelid_formato_nota_creditoConfiguracionPunVen.setVisible(this.configuracionpunvenConstantesFunciones.mostrarid_formato_nota_creditoConfiguracionPunVen);
		//this.jInternalFrameDetalleFormConfiguracionPunVen.jComboBoxid_transaccion_facturaConfiguracionPunVen.setVisible(this.configuracionpunvenConstantesFunciones.mostrarid_transaccion_facturaConfiguracionPunVen);
		this.jInternalFrameDetalleFormConfiguracionPunVen.jPanelid_transaccion_facturaConfiguracionPunVen.setVisible(this.configuracionpunvenConstantesFunciones.mostrarid_transaccion_facturaConfiguracionPunVen);
		//this.jInternalFrameDetalleFormConfiguracionPunVen.jComboBoxid_transaccion_nota_ventaConfiguracionPunVen.setVisible(this.configuracionpunvenConstantesFunciones.mostrarid_transaccion_nota_ventaConfiguracionPunVen);
		this.jInternalFrameDetalleFormConfiguracionPunVen.jPanelid_transaccion_nota_ventaConfiguracionPunVen.setVisible(this.configuracionpunvenConstantesFunciones.mostrarid_transaccion_nota_ventaConfiguracionPunVen);
		//this.jInternalFrameDetalleFormConfiguracionPunVen.jComboBoxid_transaccion_nota_creditoConfiguracionPunVen.setVisible(this.configuracionpunvenConstantesFunciones.mostrarid_transaccion_nota_creditoConfiguracionPunVen);
		this.jInternalFrameDetalleFormConfiguracionPunVen.jPanelid_transaccion_nota_creditoConfiguracionPunVen.setVisible(this.configuracionpunvenConstantesFunciones.mostrarid_transaccion_nota_creditoConfiguracionPunVen);
		//this.jInternalFrameDetalleFormConfiguracionPunVen.jComboBoxid_transaccion_cuenta_facturaConfiguracionPunVen.setVisible(this.configuracionpunvenConstantesFunciones.mostrarid_transaccion_cuenta_facturaConfiguracionPunVen);
		this.jInternalFrameDetalleFormConfiguracionPunVen.jPanelid_transaccion_cuenta_facturaConfiguracionPunVen.setVisible(this.configuracionpunvenConstantesFunciones.mostrarid_transaccion_cuenta_facturaConfiguracionPunVen);
		//this.jInternalFrameDetalleFormConfiguracionPunVen.jComboBoxid_transaccion_cuenta_nota_ventaConfiguracionPunVen.setVisible(this.configuracionpunvenConstantesFunciones.mostrarid_transaccion_cuenta_nota_ventaConfiguracionPunVen);
		this.jInternalFrameDetalleFormConfiguracionPunVen.jPanelid_transaccion_cuenta_nota_ventaConfiguracionPunVen.setVisible(this.configuracionpunvenConstantesFunciones.mostrarid_transaccion_cuenta_nota_ventaConfiguracionPunVen);
		//this.jInternalFrameDetalleFormConfiguracionPunVen.jComboBoxid_transaccion_cuenta_nota_creditoConfiguracionPunVen.setVisible(this.configuracionpunvenConstantesFunciones.mostrarid_transaccion_cuenta_nota_creditoConfiguracionPunVen);
		this.jInternalFrameDetalleFormConfiguracionPunVen.jPanelid_transaccion_cuenta_nota_creditoConfiguracionPunVen.setVisible(this.configuracionpunvenConstantesFunciones.mostrarid_transaccion_cuenta_nota_creditoConfiguracionPunVen);
		}
	}
	
	public void updateHabilitarResaltarControlesFormularioConfiguracionPunVen() throws Exception {
		if(this.jInternalFrameDetalleFormConfiguracionPunVen==null) { //if(!this.conCargarFormDetalle) {
			this.inicializarFormDetalle();
		}
		
		if(this.jInternalFrameDetalleFormConfiguracionPunVen!=null) {
	
		this.jInternalFrameDetalleFormConfiguracionPunVen.jLabelidConfiguracionPunVen.setEnabled(this.configuracionpunvenConstantesFunciones.activaridConfiguracionPunVen);
		this.jInternalFrameDetalleFormConfiguracionPunVen.jComboBoxid_empresaConfiguracionPunVen.setEnabled(this.configuracionpunvenConstantesFunciones.activarid_empresaConfiguracionPunVen);
		this.jInternalFrameDetalleFormConfiguracionPunVen.jComboBoxid_sucursalConfiguracionPunVen.setEnabled(this.configuracionpunvenConstantesFunciones.activarid_sucursalConfiguracionPunVen);
		this.jInternalFrameDetalleFormConfiguracionPunVen.jComboBoxid_bodegaConfiguracionPunVen.setEnabled(this.configuracionpunvenConstantesFunciones.activarid_bodegaConfiguracionPunVen);
		this.jInternalFrameDetalleFormConfiguracionPunVen.jComboBoxid_cuenta_contable_efectivoConfiguracionPunVen.setEnabled(this.configuracionpunvenConstantesFunciones.activarid_cuenta_contable_efectivoConfiguracionPunVen);
		this.jInternalFrameDetalleFormConfiguracionPunVen.jComboBoxid_cuenta_contable_iceConfiguracionPunVen.setEnabled(this.configuracionpunvenConstantesFunciones.activarid_cuenta_contable_iceConfiguracionPunVen);
		this.jInternalFrameDetalleFormConfiguracionPunVen.jComboBoxid_cuenta_contable_otrosConfiguracionPunVen.setEnabled(this.configuracionpunvenConstantesFunciones.activarid_cuenta_contable_otrosConfiguracionPunVen);
		this.jInternalFrameDetalleFormConfiguracionPunVen.jComboBoxid_cliente_consumidor_finalConfiguracionPunVen.setEnabled(this.configuracionpunvenConstantesFunciones.activarid_cliente_consumidor_finalConfiguracionPunVen);
			this.jInternalFrameDetalleFormConfiguracionPunVen.jButtonid_cliente_consumidor_finalConfiguracionPunVen.setEnabled(this.configuracionpunvenConstantesFunciones.activarid_cliente_consumidor_finalConfiguracionPunVen);
		this.jInternalFrameDetalleFormConfiguracionPunVen.jComboBoxid_tipo_documento_facturaConfiguracionPunVen.setEnabled(this.configuracionpunvenConstantesFunciones.activarid_tipo_documento_facturaConfiguracionPunVen);
		this.jInternalFrameDetalleFormConfiguracionPunVen.jComboBoxid_tipo_documento_nota_ventaConfiguracionPunVen.setEnabled(this.configuracionpunvenConstantesFunciones.activarid_tipo_documento_nota_ventaConfiguracionPunVen);
		this.jInternalFrameDetalleFormConfiguracionPunVen.jComboBoxid_tipo_documento_nota_creditoConfiguracionPunVen.setEnabled(this.configuracionpunvenConstantesFunciones.activarid_tipo_documento_nota_creditoConfiguracionPunVen);
		this.jInternalFrameDetalleFormConfiguracionPunVen.jComboBoxid_tipo_documento_tarjeta_creditoConfiguracionPunVen.setEnabled(this.configuracionpunvenConstantesFunciones.activarid_tipo_documento_tarjeta_creditoConfiguracionPunVen);
		this.jInternalFrameDetalleFormConfiguracionPunVen.jComboBoxid_formato_facturaConfiguracionPunVen.setEnabled(this.configuracionpunvenConstantesFunciones.activarid_formato_facturaConfiguracionPunVen);
		this.jInternalFrameDetalleFormConfiguracionPunVen.jComboBoxid_formato_nota_ventaConfiguracionPunVen.setEnabled(this.configuracionpunvenConstantesFunciones.activarid_formato_nota_ventaConfiguracionPunVen);
		this.jInternalFrameDetalleFormConfiguracionPunVen.jComboBoxid_formato_nota_creditoConfiguracionPunVen.setEnabled(this.configuracionpunvenConstantesFunciones.activarid_formato_nota_creditoConfiguracionPunVen);
		this.jInternalFrameDetalleFormConfiguracionPunVen.jComboBoxid_transaccion_facturaConfiguracionPunVen.setEnabled(this.configuracionpunvenConstantesFunciones.activarid_transaccion_facturaConfiguracionPunVen);
		this.jInternalFrameDetalleFormConfiguracionPunVen.jComboBoxid_transaccion_nota_ventaConfiguracionPunVen.setEnabled(this.configuracionpunvenConstantesFunciones.activarid_transaccion_nota_ventaConfiguracionPunVen);
		this.jInternalFrameDetalleFormConfiguracionPunVen.jComboBoxid_transaccion_nota_creditoConfiguracionPunVen.setEnabled(this.configuracionpunvenConstantesFunciones.activarid_transaccion_nota_creditoConfiguracionPunVen);
		this.jInternalFrameDetalleFormConfiguracionPunVen.jComboBoxid_transaccion_cuenta_facturaConfiguracionPunVen.setEnabled(this.configuracionpunvenConstantesFunciones.activarid_transaccion_cuenta_facturaConfiguracionPunVen);
		this.jInternalFrameDetalleFormConfiguracionPunVen.jComboBoxid_transaccion_cuenta_nota_ventaConfiguracionPunVen.setEnabled(this.configuracionpunvenConstantesFunciones.activarid_transaccion_cuenta_nota_ventaConfiguracionPunVen);
		this.jInternalFrameDetalleFormConfiguracionPunVen.jComboBoxid_transaccion_cuenta_nota_creditoConfiguracionPunVen.setEnabled(this.configuracionpunvenConstantesFunciones.activarid_transaccion_cuenta_nota_creditoConfiguracionPunVen);
		}
	}
	
		
}