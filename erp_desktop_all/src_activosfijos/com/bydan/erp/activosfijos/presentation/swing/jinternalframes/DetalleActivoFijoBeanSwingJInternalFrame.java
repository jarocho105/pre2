/*
*AVISO LEGAL
Â© Copyright
*Este programa esta protegido por la ley de derechos de autor.
*La reproduccion o distribucion ilicita de este programa o de cualquiera de
*sus partes esta penado por la ley con severas sanciones civiles y penales,
*y seran objeto de todas las sanciones legales que correspondan.

*Su contenido no puede copiarse para fines comerciales o de otras,
*ni puede mostrarse, incluso en una version modificada, en otros sitios Web.
Solo esta permitido colocar hipervinculos al sitio web.
*/
package com.bydan.erp.activosfijos.presentation.swing.jinternalframes;




import com.bydan.erp.seguridad.business.entity.Usuario;
import com.bydan.erp.seguridad.business.entity.ResumenUsuario;
import com.bydan.erp.seguridad.business.entity.Opcion;
import com.bydan.erp.seguridad.business.entity.PerfilOpcion;
import com.bydan.erp.seguridad.business.entity.PerfilCampo;
import com.bydan.erp.seguridad.business.entity.PerfilAccion;
import com.bydan.erp.seguridad.business.entity.ParametroGeneralSg;
import com.bydan.erp.seguridad.business.entity.ParametroGeneralUsuario;
import com.bydan.erp.seguridad.business.entity.Modulo;
import com.bydan.erp.seguridad.business.entity.Accion;

import com.bydan.erp.seguridad.util.SistemaParameterReturnGeneralAdditional;
import com.bydan.erp.seguridad.util.SistemaParameterReturnGeneral;


//import com.bydan.erp.seguridad.business.entity.PerfilAccion;


import com.bydan.erp.seguridad.util.SistemaConstantesFunciones;
import com.bydan.erp.seguridad.util.SistemaConstantesFuncionesAdditional;
import com.bydan.erp.seguridad.business.logic.SistemaLogicAdditional;

import com.bydan.erp.activosfijos.util.DetalleActivoFijoConstantesFunciones;
import com.bydan.erp.activosfijos.util.DetalleActivoFijoParameterReturnGeneral;
//import com.bydan.erp.activosfijos.util.DetalleActivoFijoParameterGeneral;
//import com.bydan.erp.activosfijos.presentation.report.source.DetalleActivoFijoBean;
import com.bydan.framework.erp.business.dataaccess.ConstantesSql;
import com.bydan.framework.erp.business.entity.Classe;
import com.bydan.framework.erp.business.entity.DatoGeneral;
import com.bydan.framework.erp.business.entity.GeneralEntityParameterGeneral;
import com.bydan.framework.erp.business.entity.OrderBy;
import com.bydan.framework.erp.business.entity.DatoGeneralMinimo;
import com.bydan.framework.erp.business.entity.GeneralEntity;
import com.bydan.framework.erp.business.entity.Mensajes;
import com.bydan.framework.erp.business.entity.GeneralEntityParameterReturnGeneral;
//import com.bydan.framework.erp.business.entity.MaintenanceType;
import com.bydan.framework.erp.util.MaintenanceType;
import com.bydan.framework.erp.util.FuncionesReporte;
import com.bydan.framework.erp.business.logic.DatosCliente;
import com.bydan.framework.erp.business.logic.Pagination;

import com.bydan.erp.activosfijos.presentation.swing.jinternalframes.auxiliar.*;
import com.bydan.framework.erp.presentation.desktop.swing.TablaGeneralTotalModel;
import com.bydan.framework.erp.presentation.desktop.swing.TablaGeneralOrderByModel;
import com.bydan.framework.erp.presentation.desktop.swing.DateConverter;
import com.bydan.framework.erp.presentation.desktop.swing.DateConverterFromDate;
import com.bydan.framework.erp.presentation.desktop.swing.DateRenderer;
import com.bydan.framework.erp.presentation.desktop.swing.DateEditorRenderer;
import com.bydan.framework.erp.presentation.desktop.swing.BooleanRenderer;
import com.bydan.framework.erp.presentation.desktop.swing.BooleanEditorRenderer;
import com.bydan.framework.erp.presentation.desktop.swing.TextFieldRenderer;
import com.bydan.framework.erp.presentation.desktop.swing.RunnableProceso;
import com.bydan.framework.erp.presentation.desktop.swing.*;
//import com.bydan.framework.erp.presentation.desktop.swing.TextFieldEditorRenderer;
import com.bydan.framework.erp.presentation.desktop.swing.HeaderRenderer;
import com.bydan.framework.erp.presentation.desktop.swing.JInternalFrameBase;
import com.bydan.framework.erp.presentation.desktop.swing.FuncionesSwing;
import com.bydan.framework.erp.presentation.desktop.swing.MainJFrame;
import com.bydan.framework.erp.resources.imagenes.AuxiliarImagenes;
import com.bydan.erp.activosfijos.resources.reportes.AuxiliarReportes;


import com.bydan.erp.activosfijos.util.*;
import com.bydan.erp.activosfijos.business.logic.*;

import com.bydan.erp.seguridad.business.logic.*;
import com.bydan.erp.cartera.business.logic.*;
import com.bydan.erp.contabilidad.business.logic.*;
import com.bydan.erp.facturacion.business.logic.*;
import com.bydan.erp.activosfijos.business.logic.*;

//EJB

//PARAMETROS


//EJB PARAMETROS

import com.bydan.framework.erp.business.logic.*;
import com.bydan.framework.erp.util.*;

import com.bydan.erp.activosfijos.business.entity.*;
//import com.bydan.framework.erp.business.entity.ConexionBeanFace;
//import com.bydan.framework.erp.business.entity.Mensajes;


import com.bydan.erp.seguridad.presentation.swing.jinternalframes.*;
import com.bydan.erp.cartera.presentation.swing.jinternalframes.*;
import com.bydan.erp.contabilidad.presentation.swing.jinternalframes.*;
import com.bydan.erp.facturacion.presentation.swing.jinternalframes.*;
import com.bydan.erp.activosfijos.presentation.swing.jinternalframes.*;

import com.bydan.erp.seguridad.presentation.swing.jinternalframes.auxiliar.*;
import com.bydan.erp.cartera.presentation.swing.jinternalframes.auxiliar.*;
import com.bydan.erp.contabilidad.presentation.swing.jinternalframes.auxiliar.*;
import com.bydan.erp.facturacion.presentation.swing.jinternalframes.auxiliar.*;
import com.bydan.erp.activosfijos.presentation.swing.jinternalframes.auxiliar.*;






import javax.imageio.ImageIO;
import java.net.NetworkInterface;
import java.net.InterfaceAddress;
import java.net.InetAddress;
import javax.naming.InitialContext;
import java.lang.Long;
import java.util.Date;
import java.util.Enumeration;
import java.util.Iterator;
import java.util.Set;
import java.util.HashSet;
import java.util.List;
import java.util.ArrayList;
import java.io.Serializable;
import java.util.Hashtable;
import java.util.Collections;
import java.io.File;
import java.io.FileInputStream;
import java.io.BufferedWriter;
import java.io.FileWriter;
import java.io.FileOutputStream;
import java.io.InputStream;
import java.io.BufferedReader;
import java.io.FileReader;
import java.util.HashMap;
import java.util.Map;
import java.io.PrintWriter;
import java.sql.SQLException;

import javax.xml.parsers.DocumentBuilder;
import javax.xml.parsers.DocumentBuilderFactory;
import javax.xml.parsers.ParserConfigurationException;
import javax.xml.transform.stream.StreamSource;

import org.xml.sax.EntityResolver;
import org.xml.sax.InputSource;
import org.xml.sax.SAXException;

import org.w3c.dom.Document;
import org.w3c.dom.Document;
import org.w3c.dom.NodeList;
import org.w3c.dom.Node;
import org.w3c.dom.Element;

import org.apache.poi.hssf.usermodel.HSSFCell;
import org.apache.poi.hssf.usermodel.HSSFRow;
import org.apache.poi.hssf.usermodel.HSSFSheet;
import org.apache.poi.hssf.usermodel.HSSFWorkbook;
import org.apache.poi.xssf.usermodel.XSSFWorkbook;

import org.apache.poi.ss.usermodel.Workbook;
import org.apache.poi.ss.usermodel.Sheet;
import org.apache.poi.ss.usermodel.Row;
import org.apache.poi.ss.usermodel.Cell;
import org.apache.poi.ss.usermodel.CellStyle;
import org.apache.poi.ss.usermodel.IndexedColors;
import org.apache.poi.ss.util.CellRangeAddress;

import javax.xml.transform.Transformer;
import javax.xml.transform.TransformerFactory;
import javax.xml.transform.dom.DOMSource;
import javax.xml.transform.stream.StreamResult;


import net.sf.jasperreports.engine.JRException;
import net.sf.jasperreports.engine.JRRuntimeException;
import net.sf.jasperreports.engine.JasperFillManager;
import net.sf.jasperreports.engine.JasperPrint;
import net.sf.jasperreports.engine.JasperReport;
import net.sf.jasperreports.engine.util.JRLoader;
import net.sf.jasperreports.engine.export.JRHtmlExporter;
import net.sf.jasperreports.j2ee.servlets.BaseHttpServlet;
import net.sf.jasperreports.engine.JRExporterParameter;
import net.sf.jasperreports.engine.data.JRBeanArrayDataSource;
import net.sf.jasperreports.engine.data.JRBeanCollectionDataSource;
import net.sf.jasperreports.view.JasperViewer;

import org.apache.log4j.Logger;

import com.bydan.framework.erp.business.entity.Reporte;


//VALIDACION
import org.hibernate.validator.ClassValidator;
import org.hibernate.validator.InvalidValue;

import net.sf.jasperreports.engine.JREmptyDataSource;
import net.sf.jasperreports.engine.JasperCompileManager;
import net.sf.jasperreports.engine.JasperExportManager;
import net.sf.jasperreports.engine.JasperPrint;
import net.sf.jasperreports.engine.JasperPrintManager;
import net.sf.jasperreports.engine.JasperReport;
import net.sf.jasperreports.engine.JasperRunManager;
import net.sf.jasperreports.engine.export.JExcelApiExporter;
import net.sf.jasperreports.engine.export.JRCsvExporter;
import net.sf.jasperreports.engine.export.JRRtfExporter;
import net.sf.jasperreports.engine.export.JRXlsExporter;
import net.sf.jasperreports.engine.export.JRXlsExporterParameter;
import net.sf.jasperreports.engine.util.JRSaver;
import net.sf.jasperreports.engine.xml.JRXmlWriter;


import com.bydan.erp.activosfijos.presentation.web.jsf.sessionbean.*;

import java.util.EventObject;
import javax.swing.*;
import javax.swing.border.Border;
import javax.swing.border.TitledBorder;
import javax.swing.border.EmptyBorder;
import javax.swing.event.*;
import javax.swing.table.AbstractTableModel;
import javax.swing.table.DefaultTableCellRenderer;
import javax.swing.table.TableColumn;
import javax.swing.table.TableCellEditor;
import javax.swing.table.TableCellRenderer;
import java.awt.*;
import java.awt.event.*;

import org.jdesktop.beansbinding.Binding.SyncFailure;
import org.jdesktop.beansbinding.BindingListener;
import org.jdesktop.beansbinding.Bindings;
import org.jdesktop.beansbinding.BeanProperty;
import org.jdesktop.beansbinding.ELProperty;
import org.jdesktop.beansbinding.AutoBinding.UpdateStrategy;
import org.jdesktop.beansbinding.PropertyStateEvent;
import org.jdesktop.swingbinding.JComboBoxBinding;
import org.jdesktop.swingbinding.SwingBindings;
import java.beans.PropertyChangeListener;
import java.beans.PropertyChangeEvent;

import com.toedter.calendar.JDateChooser;


import com.bydan.erp.seguridad.business.entity.*;
import com.bydan.erp.cartera.business.entity.*;
import com.bydan.erp.contabilidad.business.entity.*;
import com.bydan.erp.facturacion.business.entity.*;
import com.bydan.erp.activosfijos.business.entity.*;
import com.bydan.erp.seguridad.util.*;
import com.bydan.erp.cartera.util.*;
import com.bydan.erp.contabilidad.util.*;
import com.bydan.erp.facturacion.util.*;
import com.bydan.erp.activosfijos.util.*;
import com.bydan.erp.seguridad.presentation.web.jsf.sessionbean.*;
import com.bydan.erp.cartera.presentation.web.jsf.sessionbean.*;
import com.bydan.erp.contabilidad.presentation.web.jsf.sessionbean.*;
import com.bydan.erp.facturacion.presentation.web.jsf.sessionbean.*;
import com.bydan.erp.activosfijos.presentation.web.jsf.sessionbean.*;


@SuppressWarnings("unused")
public class DetalleActivoFijoBeanSwingJInternalFrame extends DetalleActivoFijoJInternalFrame implements WindowListener,WindowFocusListener
{				
	
	public static final long serialVersionUID = 1L;
	
	public static Logger logger = Logger.getLogger(DetalleActivoFijoBeanSwingJInternalFrame.class);  
	
	public static ClassValidator<DetalleActivoFijo> detalleactivofijoValidator = new ClassValidator<DetalleActivoFijo>(DetalleActivoFijo.class);
	
	public InvalidValue[] invalidValues=null;
		

	//Ejb Foreign Keys
	
	public DetalleActivoFijo detalleactivofijo;	
	public DetalleActivoFijo detalleactivofijoAux;
	public DetalleActivoFijo detalleactivofijoAnterior;//USADO PARA MANEJAR FOCUS GAINED,LOST
	public DetalleActivoFijo detalleactivofijoTotales;
	public Long idDetalleActivoFijoActual;
	public Long iIdNuevoDetalleActivoFijo=0L;
	public int rowIndexActual=0;
	
	
	
	
	public String sFinalQueryComboEmpresa="";

	public List<Empresa> empresasForeignKey;

	public List<Empresa> getempresasForeignKey() {
		return empresasForeignKey;
	}

	public void setempresasForeignKey(List<Empresa> empresasForeignKey) {
		this.empresasForeignKey = empresasForeignKey;
	}

	//OBJETO FK ACTUAL
	public Empresa empresaForeignKey;

	public Empresa getempresaForeignKey() {
		return empresaForeignKey;
	}

	public void setempresaForeignKey(Empresa empresaForeignKey) {
		this.empresaForeignKey = empresaForeignKey;
	}

	public String sFinalQueryComboSucursal="";

	public List<Sucursal> sucursalsForeignKey;

	public List<Sucursal> getsucursalsForeignKey() {
		return sucursalsForeignKey;
	}

	public void setsucursalsForeignKey(List<Sucursal> sucursalsForeignKey) {
		this.sucursalsForeignKey = sucursalsForeignKey;
	}

	//OBJETO FK ACTUAL
	public Sucursal sucursalForeignKey;

	public Sucursal getsucursalForeignKey() {
		return sucursalForeignKey;
	}

	public void setsucursalForeignKey(Sucursal sucursalForeignKey) {
		this.sucursalForeignKey = sucursalForeignKey;
	}

	public String sFinalQueryComboDetalleGrupoActivoFijo="";

	public List<DetalleGrupoActivoFijo> detallegrupoactivofijosForeignKey;

	public List<DetalleGrupoActivoFijo> getdetallegrupoactivofijosForeignKey() {
		return detallegrupoactivofijosForeignKey;
	}

	public void setdetallegrupoactivofijosForeignKey(List<DetalleGrupoActivoFijo> detallegrupoactivofijosForeignKey) {
		this.detallegrupoactivofijosForeignKey = detallegrupoactivofijosForeignKey;
	}

	//OBJETO FK ACTUAL
	public DetalleGrupoActivoFijo detallegrupoactivofijoForeignKey;

	public DetalleGrupoActivoFijo getdetallegrupoactivofijoForeignKey() {
		return detallegrupoactivofijoForeignKey;
	}

	public void setdetallegrupoactivofijoForeignKey(DetalleGrupoActivoFijo detallegrupoactivofijoForeignKey) {
		this.detallegrupoactivofijoForeignKey = detallegrupoactivofijoForeignKey;
	}

	public String sFinalQueryComboSubGrupoActivoFijo="";

	public List<SubGrupoActivoFijo> subgrupoactivofijosForeignKey;

	public List<SubGrupoActivoFijo> getsubgrupoactivofijosForeignKey() {
		return subgrupoactivofijosForeignKey;
	}

	public void setsubgrupoactivofijosForeignKey(List<SubGrupoActivoFijo> subgrupoactivofijosForeignKey) {
		this.subgrupoactivofijosForeignKey = subgrupoactivofijosForeignKey;
	}

	//OBJETO FK ACTUAL
	public SubGrupoActivoFijo subgrupoactivofijoForeignKey;

	public SubGrupoActivoFijo getsubgrupoactivofijoForeignKey() {
		return subgrupoactivofijoForeignKey;
	}

	public void setsubgrupoactivofijoForeignKey(SubGrupoActivoFijo subgrupoactivofijoForeignKey) {
		this.subgrupoactivofijoForeignKey = subgrupoactivofijoForeignKey;
	}

	public String sFinalQueryComboTipoRamoActivoFijo="";

	public List<TipoRamoActivoFijo> tiporamoactivofijosForeignKey;

	public List<TipoRamoActivoFijo> gettiporamoactivofijosForeignKey() {
		return tiporamoactivofijosForeignKey;
	}

	public void settiporamoactivofijosForeignKey(List<TipoRamoActivoFijo> tiporamoactivofijosForeignKey) {
		this.tiporamoactivofijosForeignKey = tiporamoactivofijosForeignKey;
	}

	//OBJETO FK ACTUAL
	public TipoRamoActivoFijo tiporamoactivofijoForeignKey;

	public TipoRamoActivoFijo gettiporamoactivofijoForeignKey() {
		return tiporamoactivofijoForeignKey;
	}

	public void settiporamoactivofijoForeignKey(TipoRamoActivoFijo tiporamoactivofijoForeignKey) {
		this.tiporamoactivofijoForeignKey = tiporamoactivofijoForeignKey;
	}

	public String sFinalQueryComboTipoActivoFijoEmpresa="";

	public List<TipoActivoFijoEmpresa> tipoactivofijoempresasForeignKey;

	public List<TipoActivoFijoEmpresa> gettipoactivofijoempresasForeignKey() {
		return tipoactivofijoempresasForeignKey;
	}

	public void settipoactivofijoempresasForeignKey(List<TipoActivoFijoEmpresa> tipoactivofijoempresasForeignKey) {
		this.tipoactivofijoempresasForeignKey = tipoactivofijoempresasForeignKey;
	}

	//OBJETO FK ACTUAL
	public TipoActivoFijoEmpresa tipoactivofijoempresaForeignKey;

	public TipoActivoFijoEmpresa gettipoactivofijoempresaForeignKey() {
		return tipoactivofijoempresaForeignKey;
	}

	public void settipoactivofijoempresaForeignKey(TipoActivoFijoEmpresa tipoactivofijoempresaForeignKey) {
		this.tipoactivofijoempresaForeignKey = tipoactivofijoempresaForeignKey;
	}

	public String sFinalQueryComboTipoDepreciacionEmpresa="";

	public List<TipoDepreciacionEmpresa> tipodepreciacionempresasForeignKey;

	public List<TipoDepreciacionEmpresa> gettipodepreciacionempresasForeignKey() {
		return tipodepreciacionempresasForeignKey;
	}

	public void settipodepreciacionempresasForeignKey(List<TipoDepreciacionEmpresa> tipodepreciacionempresasForeignKey) {
		this.tipodepreciacionempresasForeignKey = tipodepreciacionempresasForeignKey;
	}

	//OBJETO FK ACTUAL
	public TipoDepreciacionEmpresa tipodepreciacionempresaForeignKey;

	public TipoDepreciacionEmpresa gettipodepreciacionempresaForeignKey() {
		return tipodepreciacionempresaForeignKey;
	}

	public void settipodepreciacionempresaForeignKey(TipoDepreciacionEmpresa tipodepreciacionempresaForeignKey) {
		this.tipodepreciacionempresaForeignKey = tipodepreciacionempresaForeignKey;
	}

	public String sFinalQueryComboEstadoActivoFijo="";

	public List<EstadoActivoFijo> estadoactivofijosForeignKey;

	public List<EstadoActivoFijo> getestadoactivofijosForeignKey() {
		return estadoactivofijosForeignKey;
	}

	public void setestadoactivofijosForeignKey(List<EstadoActivoFijo> estadoactivofijosForeignKey) {
		this.estadoactivofijosForeignKey = estadoactivofijosForeignKey;
	}

	//OBJETO FK ACTUAL
	public EstadoActivoFijo estadoactivofijoForeignKey;

	public EstadoActivoFijo getestadoactivofijoForeignKey() {
		return estadoactivofijoForeignKey;
	}

	public void setestadoactivofijoForeignKey(EstadoActivoFijo estadoactivofijoForeignKey) {
		this.estadoactivofijoForeignKey = estadoactivofijoForeignKey;
	}

	public String sFinalQueryComboCliente="";

	public List<Cliente> clientesForeignKey;

	public List<Cliente> getclientesForeignKey() {
		return clientesForeignKey;
	}

	public void setclientesForeignKey(List<Cliente> clientesForeignKey) {
		this.clientesForeignKey = clientesForeignKey;
	}

	//OBJETO FK ACTUAL
	public Cliente clienteForeignKey;

	public Cliente getclienteForeignKey() {
		return clienteForeignKey;
	}

	public void setclienteForeignKey(Cliente clienteForeignKey) {
		this.clienteForeignKey = clienteForeignKey;
	}

	public String sFinalQueryComboPartidaPresu="";

	public List<PartidaPresu> partidapresusForeignKey;

	public List<PartidaPresu> getpartidapresusForeignKey() {
		return partidapresusForeignKey;
	}

	public void setpartidapresusForeignKey(List<PartidaPresu> partidapresusForeignKey) {
		this.partidapresusForeignKey = partidapresusForeignKey;
	}

	//OBJETO FK ACTUAL
	public PartidaPresu partidapresuForeignKey;

	public PartidaPresu getpartidapresuForeignKey() {
		return partidapresuForeignKey;
	}

	public void setpartidapresuForeignKey(PartidaPresu partidapresuForeignKey) {
		this.partidapresuForeignKey = partidapresuForeignKey;
	}

		
	
	
	
	//BUSQUEDA INTERNA FK
	public Long idClienteActual=0L;

	public Long getidClienteActual() {
		return idClienteActual;
	}

	public void setidClienteActual(Long idClienteActual) {
		this.idClienteActual= idClienteActual;
	}
	
	

	public Boolean isTienePermisosMantenimientoActivoFijo=false;

	public Boolean getIsTienePermisosMantenimientoActivoFijo() {
		return isTienePermisosMantenimientoActivoFijo;
	}

	public void setIsTienePermisosMantenimientoActivoFijo(Boolean isTienePermisosMantenimientoActivoFijo) {
		this.isTienePermisosMantenimientoActivoFijo= isTienePermisosMantenimientoActivoFijo;
	}


	public Boolean isTienePermisosServicioTransporte=false;

	public Boolean getIsTienePermisosServicioTransporte() {
		return isTienePermisosServicioTransporte;
	}

	public void setIsTienePermisosServicioTransporte(Boolean isTienePermisosServicioTransporte) {
		this.isTienePermisosServicioTransporte= isTienePermisosServicioTransporte;
	}


	public Boolean isTienePermisosMovimientoActivoFijo=false;

	public Boolean getIsTienePermisosMovimientoActivoFijo() {
		return isTienePermisosMovimientoActivoFijo;
	}

	public void setIsTienePermisosMovimientoActivoFijo(Boolean isTienePermisosMovimientoActivoFijo) {
		this.isTienePermisosMovimientoActivoFijo= isTienePermisosMovimientoActivoFijo;
	}


	public Boolean isTienePermisosVehiculo=false;

	public Boolean getIsTienePermisosVehiculo() {
		return isTienePermisosVehiculo;
	}

	public void setIsTienePermisosVehiculo(Boolean isTienePermisosVehiculo) {
		this.isTienePermisosVehiculo= isTienePermisosVehiculo;
	}


	public Boolean isTienePermisosMetodoDepreciacion=false;

	public Boolean getIsTienePermisosMetodoDepreciacion() {
		return isTienePermisosMetodoDepreciacion;
	}

	public void setIsTienePermisosMetodoDepreciacion(Boolean isTienePermisosMetodoDepreciacion) {
		this.isTienePermisosMetodoDepreciacion= isTienePermisosMetodoDepreciacion;
	}


	public Boolean isTienePermisosResponsableActivoFijo=false;

	public Boolean getIsTienePermisosResponsableActivoFijo() {
		return isTienePermisosResponsableActivoFijo;
	}

	public void setIsTienePermisosResponsableActivoFijo(Boolean isTienePermisosResponsableActivoFijo) {
		this.isTienePermisosResponsableActivoFijo= isTienePermisosResponsableActivoFijo;
	}


	public Boolean isTienePermisosDepreciacionActivoFijo=false;

	public Boolean getIsTienePermisosDepreciacionActivoFijo() {
		return isTienePermisosDepreciacionActivoFijo;
	}

	public void setIsTienePermisosDepreciacionActivoFijo(Boolean isTienePermisosDepreciacionActivoFijo) {
		this.isTienePermisosDepreciacionActivoFijo= isTienePermisosDepreciacionActivoFijo;
	}


	public Boolean isTienePermisosGastoDepreciacionCentroCosto=false;

	public Boolean getIsTienePermisosGastoDepreciacionCentroCosto() {
		return isTienePermisosGastoDepreciacionCentroCosto;
	}

	public void setIsTienePermisosGastoDepreciacionCentroCosto(Boolean isTienePermisosGastoDepreciacionCentroCosto) {
		this.isTienePermisosGastoDepreciacionCentroCosto= isTienePermisosGastoDepreciacionCentroCosto;
	}


	public Boolean isTienePermisosParteActivoFijo=false;

	public Boolean getIsTienePermisosParteActivoFijo() {
		return isTienePermisosParteActivoFijo;
	}

	public void setIsTienePermisosParteActivoFijo(Boolean isTienePermisosParteActivoFijo) {
		this.isTienePermisosParteActivoFijo= isTienePermisosParteActivoFijo;
	}

	
	
	//FALTA:PARA BUSQUEDAS POR CAMPO EN FORMULARIO
	public String sFinalQueryGeneral="";
	public Boolean isEntroOnLoad=false;
	public Boolean isErrorGuardar=false;
	
	public Boolean isGuardarCambiosEnLote=false;
	public Boolean isCargarCombosDependencia=false;
	public Boolean isSeleccionarTodos=false;
	public Boolean isSeleccionados=false;
	public Boolean conGraficoReporte=false;
	
	public Boolean isPostAccionNuevo=false;
	public Boolean isPostAccionSinCerrar=false;
	public Boolean isPostAccionSinMensaje=false;
	
	
	public Boolean esControlTabla=false;
	
	public Boolean isPermisoTodoDetalleActivoFijo;
	public Boolean isPermisoNuevoDetalleActivoFijo;
	public Boolean isPermisoActualizarDetalleActivoFijo;
	public Boolean isPermisoActualizarOriginalDetalleActivoFijo;
	public Boolean isPermisoEliminarDetalleActivoFijo;
	public Boolean isPermisoGuardarCambiosDetalleActivoFijo;
	public Boolean isPermisoConsultaDetalleActivoFijo;
	public Boolean isPermisoBusquedaDetalleActivoFijo;
	public Boolean isPermisoReporteDetalleActivoFijo;
	public Boolean isPermisoPaginacionMedioDetalleActivoFijo;
	public Boolean isPermisoPaginacionAltoDetalleActivoFijo;
	public Boolean isPermisoPaginacionTodoDetalleActivoFijo;
	public Boolean isPermisoCopiarDetalleActivoFijo;
	public Boolean isPermisoVerFormDetalleActivoFijo;
	public Boolean isPermisoDuplicarDetalleActivoFijo;
	public Boolean isPermisoOrdenDetalleActivoFijo;
	
	
	public ArrayList<DatoGeneral> arrDatoGeneral;
	public ArrayList<String> arrDatoGeneralNo;
	ArrayList<Classe> classesActual=new ArrayList<Classe>();
	
	public List<Accion> accions;	
	public List<Accion> accionsFormulario;
	
	
	public ArrayList<DatoGeneralMinimo> arrDatoGeneralMinimos;
	
	public ArrayList<Reporte> tiposArchivosReportes;
	public ArrayList<Reporte> tiposArchivosReportesDinamico;
	public ArrayList<Reporte> tiposReportes;
	public ArrayList<Reporte> tiposReportesDinamico;
	public ArrayList<Reporte> tiposGraficosReportes;
	public ArrayList<Reporte> tiposPaginacion;
	public ArrayList<Reporte> tiposRelaciones;
	public ArrayList<Reporte> tiposAcciones;
	public ArrayList<Reporte> tiposAccionesFormulario;
	public ArrayList<Reporte> tiposSeleccionar;
	
	public ArrayList<Reporte> tiposColumnasSelect;
	public ArrayList<Reporte> tiposRelacionesSelect;
	
	
	public Integer iNumeroPaginacion;
	public Integer iNumeroPaginacionPagina;
	public Pagination pagination;
	public DatosCliente datosCliente;
	public DatosDeep datosDeep;
	public String sTipoArchivoReporte="";
	public String sTipoArchivoReporteDinamico="";
	public String sTipoReporte="";
	public String sTipoReporteDinamico="";
	public String sTipoGraficoReporte="";
	public String sTipoPaginacion="";
	public String sTipoRelacion="";
	public String sTipoAccion="";
	public String sTipoAccionFormulario="";
	public String sTipoSeleccionar="";	
	public String sDetalleReporte="";
	public Boolean isMostrarNumeroPaginacion;
	public String sTipoReporteExtra="";
	public String sValorCampoGeneral="";
	public Boolean esReporteDinamico=false;
	public Boolean esReporteAccionProceso=false;
	public Boolean esRecargarFks=false;
	public String sPathReporteDinamico="";
	
	public DetalleActivoFijoParameterReturnGeneral detalleactivofijoReturnGeneral;
	public DetalleActivoFijoParameterReturnGeneral detalleactivofijoParameterGeneral;
	
	

	public MantenimientoActivoFijoLogic mantenimientoactivofijoLogic=null;

	public MantenimientoActivoFijoLogic getMantenimientoActivoFijoLogic() {
		return mantenimientoactivofijoLogic;
	}

	public void setMantenimientoActivoFijoLogic(MantenimientoActivoFijoLogic mantenimientoactivofijoLogic) {
		this.mantenimientoactivofijoLogic = mantenimientoactivofijoLogic;
	}


	public ServicioTransporteLogic serviciotransporteLogic=null;

	public ServicioTransporteLogic getServicioTransporteLogic() {
		return serviciotransporteLogic;
	}

	public void setServicioTransporteLogic(ServicioTransporteLogic serviciotransporteLogic) {
		this.serviciotransporteLogic = serviciotransporteLogic;
	}


	public MovimientoActivoFijoLogic movimientoactivofijoDestinoLogic=null;

	public MovimientoActivoFijoLogic getMovimientoActivoFijoDestinoLogic() {
		return movimientoactivofijoDestinoLogic;
	}

	public void setMovimientoActivoFijoDestinoLogic(MovimientoActivoFijoLogic movimientoactivofijoDestinoLogic) {
		this.movimientoactivofijoDestinoLogic = movimientoactivofijoDestinoLogic;
	}


	public VehiculoLogic vehiculoLogic=null;

	public VehiculoLogic getVehiculoLogic() {
		return vehiculoLogic;
	}

	public void setVehiculoLogic(VehiculoLogic vehiculoLogic) {
		this.vehiculoLogic = vehiculoLogic;
	}


	public MetodoDepreciacionLogic metododepreciacionLogic=null;

	public MetodoDepreciacionLogic getMetodoDepreciacionLogic() {
		return metododepreciacionLogic;
	}

	public void setMetodoDepreciacionLogic(MetodoDepreciacionLogic metododepreciacionLogic) {
		this.metododepreciacionLogic = metododepreciacionLogic;
	}


	public ResponsableActivoFijoLogic responsableactivofijoLogic=null;

	public ResponsableActivoFijoLogic getResponsableActivoFijoLogic() {
		return responsableactivofijoLogic;
	}

	public void setResponsableActivoFijoLogic(ResponsableActivoFijoLogic responsableactivofijoLogic) {
		this.responsableactivofijoLogic = responsableactivofijoLogic;
	}


	public DepreciacionActivoFijoLogic depreciacionactivofijoLogic=null;

	public DepreciacionActivoFijoLogic getDepreciacionActivoFijoLogic() {
		return depreciacionactivofijoLogic;
	}

	public void setDepreciacionActivoFijoLogic(DepreciacionActivoFijoLogic depreciacionactivofijoLogic) {
		this.depreciacionactivofijoLogic = depreciacionactivofijoLogic;
	}


	public GastoDepreciacionCentroCostoLogic gastodepreciacioncentrocostoLogic=null;

	public GastoDepreciacionCentroCostoLogic getGastoDepreciacionCentroCostoLogic() {
		return gastodepreciacioncentrocostoLogic;
	}

	public void setGastoDepreciacionCentroCostoLogic(GastoDepreciacionCentroCostoLogic gastodepreciacioncentrocostoLogic) {
		this.gastodepreciacioncentrocostoLogic = gastodepreciacioncentrocostoLogic;
	}


	public ParteActivoFijoLogic parteactivofijoLogic=null;

	public ParteActivoFijoLogic getParteActivoFijoLogic() {
		return parteactivofijoLogic;
	}

	public void setParteActivoFijoLogic(ParteActivoFijoLogic parteactivofijoLogic) {
		this.parteactivofijoLogic = parteactivofijoLogic;
	}
 	
	public JasperPrint jasperPrint = null;
	
	public Long lIdUsuarioSesion=0L;				
	
	public Boolean isEsNuevoDetalleActivoFijo=false;
	public Boolean esParaAccionDesdeFormularioDetalleActivoFijo=false;
	public Boolean isEsMantenimientoRelacionesRelacionadoUnico=false;
	public Boolean isEsMantenimientoRelaciones=false;
	public Boolean isEsMantenimientoRelacionado=false;	
	public Boolean isContieneImagenes=false;
		
	//public Boolean conTotales=false; //Viene heredado de JInternalFrameBase
	//public Boolean esParaBusquedaForeignKey=false;
	
	
	protected DetalleActivoFijoSessionBeanAdditional detalleactivofijoSessionBeanAdditional=null;
	
	public DetalleActivoFijoSessionBeanAdditional getDetalleActivoFijoSessionBeanAdditional() {
		return this.detalleactivofijoSessionBeanAdditional;
	}
	
	public void setDetalleActivoFijoSessionBeanAdditional(DetalleActivoFijoSessionBeanAdditional detalleactivofijoSessionBeanAdditional) {
		try {
			this.detalleactivofijoSessionBeanAdditional=detalleactivofijoSessionBeanAdditional;
		} catch(Exception e) {
			;
		}
	}
	
	
	
	
	protected DetalleActivoFijoBeanSwingJInternalFrameAdditional detalleactivofijoBeanSwingJInternalFrameAdditional=null;
	//public class DetalleActivoFijoBeanSwingJInternalFrame
	
	public DetalleActivoFijoBeanSwingJInternalFrameAdditional getDetalleActivoFijoBeanSwingJInternalFrameAdditional() {
		return this.detalleactivofijoBeanSwingJInternalFrameAdditional;
	}
	
	public void setDetalleActivoFijoBeanSwingJInternalFrameAdditional(DetalleActivoFijoBeanSwingJInternalFrameAdditional detalleactivofijoBeanSwingJInternalFrameAdditional) {
		try {
			this.detalleactivofijoBeanSwingJInternalFrameAdditional=detalleactivofijoBeanSwingJInternalFrameAdditional;
		} catch(Exception e) {
			;
		}
	}
	
	
	
	
	//ESTA EN PADRE
	
	//public DetalleActivoFijoLogic detalleactivofijoLogic;
	public SistemaLogicAdditional sistemaLogicAdditional;
	
	
	public DetalleActivoFijo detalleactivofijoBean;
	public DetalleActivoFijoConstantesFunciones detalleactivofijoConstantesFunciones;
	//public DetalleActivoFijoParameterReturnGeneral detalleactivofijoReturnGeneral;
	
	//FK
	
	public EmpresaLogic empresaLogic;
	public SucursalLogic sucursalLogic;
	public DetalleGrupoActivoFijoLogic detallegrupoactivofijoLogic;
	public SubGrupoActivoFijoLogic subgrupoactivofijoLogic;
	public TipoRamoActivoFijoLogic tiporamoactivofijoLogic;
	public TipoActivoFijoEmpresaLogic tipoactivofijoempresaLogic;
	public TipoDepreciacionEmpresaLogic tipodepreciacionempresaLogic;
	public EstadoActivoFijoLogic estadoactivofijoLogic;
	public ClienteLogic clienteLogic;
	public PartidaPresuLogic partidapresuLogic;
	
	//PARAMETROS
	
	
	//public List<DetalleActivoFijo> detalleactivofijos;	
	//public List<DetalleActivoFijo> detalleactivofijosEliminados;
	//public List<DetalleActivoFijo> detalleactivofijosAux;
	
	public String sAccionMantenimiento="";
	public String sAccionBusqueda="";
	public String sAccionAdicional="";
	public String sUltimaBusqueda="";
	
	public Mensaje mensaje;
	
	
	public String sVisibilidadTablaBusquedas="";					
	public String sVisibilidadTablaElementos="";	
	public String sVisibilidadTablaAcciones="";			
	
	public Boolean isVisibilidadCeldaNuevoDetalleActivoFijo=false;
	public Boolean isVisibilidadCeldaDuplicarDetalleActivoFijo=true;
	public Boolean isVisibilidadCeldaCopiarDetalleActivoFijo=true;
	public Boolean isVisibilidadCeldaVerFormDetalleActivoFijo=true;
	public Boolean isVisibilidadCeldaOrdenDetalleActivoFijo=true;
	public Boolean isVisibilidadCeldaNuevoRelacionesDetalleActivoFijo=false;
	public Boolean isVisibilidadCeldaModificarDetalleActivoFijo=false;
	public Boolean isVisibilidadCeldaActualizarDetalleActivoFijo=false;
	public Boolean isVisibilidadCeldaEliminarDetalleActivoFijo=false;
	public Boolean isVisibilidadCeldaCancelarDetalleActivoFijo=false;
	public Boolean isVisibilidadCeldaGuardarDetalleActivoFijo=false;	
	public Boolean isVisibilidadCeldaGuardarCambiosDetalleActivoFijo=false;	
	
	
	public Boolean isVisibilidadFK_IdCliente=false;
	public Boolean isVisibilidadFK_IdDetalleGrupoActivoFijo=false;
	public Boolean isVisibilidadFK_IdEmpresa=false;
	public Boolean isVisibilidadFK_IdEstadoActivoFijo=false;
	public Boolean isVisibilidadFK_IdPartidaPresu=false;
	public Boolean isVisibilidadFK_IdSubGrupoActivoFijo=false;
	public Boolean isVisibilidadFK_IdSucursal=false;
	public Boolean isVisibilidadFK_IdTipoActivoFijoEmpresa=false;
	public Boolean isVisibilidadFK_IdTipoDepreciacionEmpresa=false;
	public Boolean isVisibilidadFK_IdTipoRamoActivoFijo=false;
	
	public Long getiIdNuevoDetalleActivoFijo() {
		return this.iIdNuevoDetalleActivoFijo;
	}

	public void setiIdNuevoDetalleActivoFijo(Long iIdNuevoDetalleActivoFijo) {
		this.iIdNuevoDetalleActivoFijo = iIdNuevoDetalleActivoFijo;
	}
	
	public Long getidDetalleActivoFijoActual() {
		return this.idDetalleActivoFijoActual;
	}

	public void setidDetalleActivoFijoActual(Long idDetalleActivoFijoActual) {
		this.idDetalleActivoFijoActual = idDetalleActivoFijoActual;
	}
	
	public int getrowIndexActual() {
		return this.rowIndexActual;
	}

	public void setrowIndexActual(int rowIndexActual) {
		this.rowIndexActual=rowIndexActual;
	}
	
	
	public DetalleActivoFijo getdetalleactivofijo() {
		return this.detalleactivofijo;
	}

	public void setdetalleactivofijo(DetalleActivoFijo detalleactivofijo) {
		this.detalleactivofijo = detalleactivofijo;
	}
	
	public DetalleActivoFijo getdetalleactivofijoAux() {
		return this.detalleactivofijoAux;
	}

	public void setdetalleactivofijoAux(DetalleActivoFijo detalleactivofijoAux) {
		this.detalleactivofijoAux = detalleactivofijoAux;
	}				
	
	public DetalleActivoFijo getdetalleactivofijoAnterior() {
		return this.detalleactivofijoAnterior;
	}

	public void setdetalleactivofijoAnterior(DetalleActivoFijo detalleactivofijoAnterior) {
		this.detalleactivofijoAnterior = detalleactivofijoAnterior;
	}	
	
	public DetalleActivoFijo getdetalleactivofijoTotales() {
		return this.detalleactivofijoTotales;
	}

	public void setdetalleactivofijoTotales(DetalleActivoFijo detalleactivofijoTotales) {
		this.detalleactivofijoTotales = detalleactivofijoTotales;
	}	
	
	public DetalleActivoFijo getdetalleactivofijoBean() {
		return this.detalleactivofijoBean;
	}

	public void setdetalleactivofijoBean(DetalleActivoFijo detalleactivofijoBean) {
		this.detalleactivofijoBean = detalleactivofijoBean;
	}	
	
	public DetalleActivoFijoParameterReturnGeneral getdetalleactivofijoReturnGeneral() {
		return this.detalleactivofijoReturnGeneral;
	}

	public void setdetalleactivofijoReturnGeneral(DetalleActivoFijoParameterReturnGeneral detalleactivofijoReturnGeneral) {
		this.detalleactivofijoReturnGeneral = detalleactivofijoReturnGeneral;
	}	
	
	
	public Long id_clienteFK_IdCliente=-1L;

	public Long getid_clienteFK_IdCliente() {
		return this.id_clienteFK_IdCliente;
	}

	public void setid_clienteFK_IdCliente(Long id_clienteFK_IdCliente) {
		this.id_clienteFK_IdCliente = id_clienteFK_IdCliente;
	}

	public Long id_detalle_grupo_activo_fijoFK_IdDetalleGrupoActivoFijo=-1L;

	public Long getid_detalle_grupo_activo_fijoFK_IdDetalleGrupoActivoFijo() {
		return this.id_detalle_grupo_activo_fijoFK_IdDetalleGrupoActivoFijo;
	}

	public void setid_detalle_grupo_activo_fijoFK_IdDetalleGrupoActivoFijo(Long id_detalle_grupo_activo_fijoFK_IdDetalleGrupoActivoFijo) {
		this.id_detalle_grupo_activo_fijoFK_IdDetalleGrupoActivoFijo = id_detalle_grupo_activo_fijoFK_IdDetalleGrupoActivoFijo;
	}

	public Long id_empresaFK_IdEmpresa=-1L;

	public Long getid_empresaFK_IdEmpresa() {
		return this.id_empresaFK_IdEmpresa;
	}

	public void setid_empresaFK_IdEmpresa(Long id_empresaFK_IdEmpresa) {
		this.id_empresaFK_IdEmpresa = id_empresaFK_IdEmpresa;
	}

	public Long id_estado_activo_fijoFK_IdEstadoActivoFijo=-1L;

	public Long getid_estado_activo_fijoFK_IdEstadoActivoFijo() {
		return this.id_estado_activo_fijoFK_IdEstadoActivoFijo;
	}

	public void setid_estado_activo_fijoFK_IdEstadoActivoFijo(Long id_estado_activo_fijoFK_IdEstadoActivoFijo) {
		this.id_estado_activo_fijoFK_IdEstadoActivoFijo = id_estado_activo_fijoFK_IdEstadoActivoFijo;
	}

	public Long id_partida_presuFK_IdPartidaPresu=-1L;

	public Long getid_partida_presuFK_IdPartidaPresu() {
		return this.id_partida_presuFK_IdPartidaPresu;
	}

	public void setid_partida_presuFK_IdPartidaPresu(Long id_partida_presuFK_IdPartidaPresu) {
		this.id_partida_presuFK_IdPartidaPresu = id_partida_presuFK_IdPartidaPresu;
	}

	public Long id_sub_grupo_activo_fijoFK_IdSubGrupoActivoFijo=-1L;

	public Long getid_sub_grupo_activo_fijoFK_IdSubGrupoActivoFijo() {
		return this.id_sub_grupo_activo_fijoFK_IdSubGrupoActivoFijo;
	}

	public void setid_sub_grupo_activo_fijoFK_IdSubGrupoActivoFijo(Long id_sub_grupo_activo_fijoFK_IdSubGrupoActivoFijo) {
		this.id_sub_grupo_activo_fijoFK_IdSubGrupoActivoFijo = id_sub_grupo_activo_fijoFK_IdSubGrupoActivoFijo;
	}

	public Long id_sucursalFK_IdSucursal=-1L;

	public Long getid_sucursalFK_IdSucursal() {
		return this.id_sucursalFK_IdSucursal;
	}

	public void setid_sucursalFK_IdSucursal(Long id_sucursalFK_IdSucursal) {
		this.id_sucursalFK_IdSucursal = id_sucursalFK_IdSucursal;
	}

	public Long id_tipo_activo_fijo_empresaFK_IdTipoActivoFijoEmpresa=-1L;

	public Long getid_tipo_activo_fijo_empresaFK_IdTipoActivoFijoEmpresa() {
		return this.id_tipo_activo_fijo_empresaFK_IdTipoActivoFijoEmpresa;
	}

	public void setid_tipo_activo_fijo_empresaFK_IdTipoActivoFijoEmpresa(Long id_tipo_activo_fijo_empresaFK_IdTipoActivoFijoEmpresa) {
		this.id_tipo_activo_fijo_empresaFK_IdTipoActivoFijoEmpresa = id_tipo_activo_fijo_empresaFK_IdTipoActivoFijoEmpresa;
	}

	public Long id_tipo_depreciacion_empresaFK_IdTipoDepreciacionEmpresa=-1L;

	public Long getid_tipo_depreciacion_empresaFK_IdTipoDepreciacionEmpresa() {
		return this.id_tipo_depreciacion_empresaFK_IdTipoDepreciacionEmpresa;
	}

	public void setid_tipo_depreciacion_empresaFK_IdTipoDepreciacionEmpresa(Long id_tipo_depreciacion_empresaFK_IdTipoDepreciacionEmpresa) {
		this.id_tipo_depreciacion_empresaFK_IdTipoDepreciacionEmpresa = id_tipo_depreciacion_empresaFK_IdTipoDepreciacionEmpresa;
	}

	public Long id_tipo_ramo_activo_fijoFK_IdTipoRamoActivoFijo=-1L;

	public Long getid_tipo_ramo_activo_fijoFK_IdTipoRamoActivoFijo() {
		return this.id_tipo_ramo_activo_fijoFK_IdTipoRamoActivoFijo;
	}

	public void setid_tipo_ramo_activo_fijoFK_IdTipoRamoActivoFijo(Long id_tipo_ramo_activo_fijoFK_IdTipoRamoActivoFijo) {
		this.id_tipo_ramo_activo_fijoFK_IdTipoRamoActivoFijo = id_tipo_ramo_activo_fijoFK_IdTipoRamoActivoFijo;
	}

		
	
	//ELEMENTOS TABLAS PARAMETOS
	
	
	
	
	
	
	//ELEMENTOS TABLAS PARAMETOS_FIN
	
	
	public DetalleActivoFijoLogic getDetalleActivoFijoLogic()	{		
		return detalleactivofijoLogic;
	}

	public void setDetalleActivoFijoLogic(DetalleActivoFijoLogic detalleactivofijoLogic) {
		this.detalleactivofijoLogic = detalleactivofijoLogic;
	}
	
	
	public void setsFinalQueryGeneral(String sFinalQueryGeneral) {
		this.sFinalQueryGeneral=sFinalQueryGeneral;
	}
	
	public String getsFinalQueryGeneral() {
		return this.sFinalQueryGeneral;
	}
		
	public Boolean getIsGuardarCambiosEnLote() {
		return isGuardarCambiosEnLote;
	}

	public void setIsGuardarCambiosEnLote(Boolean isGuardarCambiosEnLote) {
		this.isGuardarCambiosEnLote = isGuardarCambiosEnLote;
	}
	
	public Boolean getIsCargarCombosDependencia() {
		return isCargarCombosDependencia;
	}

	public void setIsCargarCombosDependencia(Boolean isCargarCombosDependencia) {
		this.isCargarCombosDependencia = isCargarCombosDependencia;
	}
	
	public Boolean getIsEsNuevoDetalleActivoFijo() {
		return isEsNuevoDetalleActivoFijo;
	}

	public void setIsEsNuevoDetalleActivoFijo(Boolean isEsNuevoDetalleActivoFijo) {
		this.isEsNuevoDetalleActivoFijo = isEsNuevoDetalleActivoFijo;
	}

	public Boolean getEsParaAccionDesdeFormularioDetalleActivoFijo() {
		return esParaAccionDesdeFormularioDetalleActivoFijo;
	}
	
	public void setEsParaAccionDesdeFormularioDetalleActivoFijo(Boolean esParaAccionDesdeFormularioDetalleActivoFijo) {
		this.esParaAccionDesdeFormularioDetalleActivoFijo = esParaAccionDesdeFormularioDetalleActivoFijo;
	}
	
	public Boolean getIsEsMantenimientoRelacionesRelacionadoUnico() {
		return isEsMantenimientoRelacionesRelacionadoUnico;
	}

	public void setIsEsMantenimientoRelacionesRelacionadoUnico(Boolean isEsMantenimientoRelacionesRelacionadoUnico) {
		this.isEsMantenimientoRelacionesRelacionadoUnico = isEsMantenimientoRelacionesRelacionadoUnico;
	}

	public Boolean getIsEsMantenimientoRelaciones() {
		return isEsMantenimientoRelaciones;
	}

	public void setIsEsMantenimientoRelaciones(Boolean isEsMantenimientoRelaciones) {
		this.isEsMantenimientoRelaciones = isEsMantenimientoRelaciones;
	}

	public Boolean getIsEsMantenimientoRelacionado() {
		return isEsMantenimientoRelacionado;
	}

	public void setIsEsMantenimientoRelacionado(Boolean isEsMantenimientoRelacionado) {
		this.isEsMantenimientoRelacionado = isEsMantenimientoRelacionado;
	}

	public Boolean getesParaBusquedaForeignKey() {
		return esParaBusquedaForeignKey;
	}

	public void setesParaBusquedaForeignKey(Boolean esParaBusquedaForeignKey) {
		this.esParaBusquedaForeignKey = esParaBusquedaForeignKey;
	}

	public Boolean getIsContieneImagenes() {
		return isContieneImagenes;
	}

	public void setIsContieneImagenes(Boolean isContieneImagenes) {
		this.isContieneImagenes = isContieneImagenes;
	}		
	
	
	public void cargarCombosEmpresasForeignKeyLista(String sFinalQuery)throws Exception
	{
		try
		{
			this.empresasForeignKey=new ArrayList<Empresa>();

			ArrayList<Classe> clases=new ArrayList<Classe>();
			ArrayList<String> arrClasses=new ArrayList<String>();
			Classe classe=new Classe();
			DatosDeep datosDeep=new DatosDeep(false,DeepLoadType.INCLUDE,clases,"");

			EmpresaLogic empresaLogic=new EmpresaLogic();

			//empresaLogic.getEmpresaDataAccess().setIsForForeingKeyData(true);

			if(this.detalleactivofijoSessionBean==null) {
				this.detalleactivofijoSessionBean=new DetalleActivoFijoSessionBean();
			}

			if(!this.detalleactivofijoSessionBean.getisBusquedaDesdeForeignKeySesionEmpresa()) {
				//ARCHITECTURE
				if(Constantes.ISUSAEJBLOGICLAYER) {
					//empresaLogic.getEmpresaDataAccess().setIsForForeingKeyData(true);

					empresaLogic.getTodosEmpresasWithConnection(sFinalQuery,new Pagination());

					this.empresasForeignKey=empresaLogic.getEmpresas();

				} else if(Constantes.ISUSAEJBREMOTE) {

				} else if(Constantes.ISUSAEJBHOME) {
				}


				//ARCHITECTURE
			} else {
				if(!this.conCargarMinimo) {
					this.setVisibilidadBusquedasParaEmpresa(true);
				}
				//ARCHITECTURE

				if(Constantes.ISUSAEJBLOGICLAYER) {
					empresaLogic.getEntityWithConnection(detalleactivofijoSessionBean.getlidEmpresaActual());
					this.empresasForeignKey.add(empresaLogic.getEmpresa());
				} else if(Constantes.ISUSAEJBREMOTE) {
				} else if(Constantes.ISUSAEJBHOME) {
				}
				//ARCHITECTURE
			}
		}
		catch(Exception e)
		{
			throw e;
		}
	}

	public void cargarCombosSucursalsForeignKeyLista(String sFinalQuery)throws Exception
	{
		try
		{
			this.sucursalsForeignKey=new ArrayList<Sucursal>();

			ArrayList<Classe> clases=new ArrayList<Classe>();
			ArrayList<String> arrClasses=new ArrayList<String>();
			Classe classe=new Classe();
			DatosDeep datosDeep=new DatosDeep(false,DeepLoadType.INCLUDE,clases,"");

			SucursalLogic sucursalLogic=new SucursalLogic();

			//sucursalLogic.getSucursalDataAccess().setIsForForeingKeyData(true);

			if(this.detalleactivofijoSessionBean==null) {
				this.detalleactivofijoSessionBean=new DetalleActivoFijoSessionBean();
			}

			if(!this.detalleactivofijoSessionBean.getisBusquedaDesdeForeignKeySesionSucursal()) {
				//ARCHITECTURE
				if(Constantes.ISUSAEJBLOGICLAYER) {
					//sucursalLogic.getSucursalDataAccess().setIsForForeingKeyData(true);

					sucursalLogic.getTodosSucursalsWithConnection(sFinalQuery,new Pagination());

					this.sucursalsForeignKey=sucursalLogic.getSucursals();

				} else if(Constantes.ISUSAEJBREMOTE) {

				} else if(Constantes.ISUSAEJBHOME) {
				}


				//ARCHITECTURE
			} else {
				if(!this.conCargarMinimo) {
					this.setVisibilidadBusquedasParaSucursal(true);
				}
				//ARCHITECTURE

				if(Constantes.ISUSAEJBLOGICLAYER) {
					sucursalLogic.getEntityWithConnection(detalleactivofijoSessionBean.getlidSucursalActual());
					this.sucursalsForeignKey.add(sucursalLogic.getSucursal());
				} else if(Constantes.ISUSAEJBREMOTE) {
				} else if(Constantes.ISUSAEJBHOME) {
				}
				//ARCHITECTURE
			}
		}
		catch(Exception e)
		{
			throw e;
		}
	}

	public void cargarCombosDetalleGrupoActivoFijosForeignKeyLista(String sFinalQuery)throws Exception
	{
		try
		{
			this.detallegrupoactivofijosForeignKey=new ArrayList<DetalleGrupoActivoFijo>();

			ArrayList<Classe> clases=new ArrayList<Classe>();
			ArrayList<String> arrClasses=new ArrayList<String>();
			Classe classe=new Classe();
			DatosDeep datosDeep=new DatosDeep(false,DeepLoadType.INCLUDE,clases,"");

			DetalleGrupoActivoFijoLogic detallegrupoactivofijoLogic=new DetalleGrupoActivoFijoLogic();

			//detallegrupoactivofijoLogic.getDetalleGrupoActivoFijoDataAccess().setIsForForeingKeyData(true);

			if(this.detalleactivofijoSessionBean==null) {
				this.detalleactivofijoSessionBean=new DetalleActivoFijoSessionBean();
			}

			if(!this.detalleactivofijoSessionBean.getisBusquedaDesdeForeignKeySesionDetalleGrupoActivoFijo()) {
				//ARCHITECTURE
				if(Constantes.ISUSAEJBLOGICLAYER) {
					//detallegrupoactivofijoLogic.getDetalleGrupoActivoFijoDataAccess().setIsForForeingKeyData(true);

					detallegrupoactivofijoLogic.getTodosDetalleGrupoActivoFijosWithConnection(sFinalQuery,new Pagination());

					this.detallegrupoactivofijosForeignKey=detallegrupoactivofijoLogic.getDetalleGrupoActivoFijos();

				} else if(Constantes.ISUSAEJBREMOTE) {

				} else if(Constantes.ISUSAEJBHOME) {
				}


				//ARCHITECTURE
			} else {
				if(!this.conCargarMinimo) {
					this.setVisibilidadBusquedasParaDetalleGrupoActivoFijo(true);
				}
				//ARCHITECTURE

				if(Constantes.ISUSAEJBLOGICLAYER) {
					detallegrupoactivofijoLogic.getEntityWithConnection(detalleactivofijoSessionBean.getlidDetalleGrupoActivoFijoActual());
					this.detallegrupoactivofijosForeignKey.add(detallegrupoactivofijoLogic.getDetalleGrupoActivoFijo());
				} else if(Constantes.ISUSAEJBREMOTE) {
				} else if(Constantes.ISUSAEJBHOME) {
				}
				//ARCHITECTURE
			}
		}
		catch(Exception e)
		{
			throw e;
		}
	}

	public void cargarCombosSubGrupoActivoFijosForeignKeyLista(String sFinalQuery)throws Exception
	{
		try
		{
			this.subgrupoactivofijosForeignKey=new ArrayList<SubGrupoActivoFijo>();

			ArrayList<Classe> clases=new ArrayList<Classe>();
			ArrayList<String> arrClasses=new ArrayList<String>();
			Classe classe=new Classe();
			DatosDeep datosDeep=new DatosDeep(false,DeepLoadType.INCLUDE,clases,"");

			SubGrupoActivoFijoLogic subgrupoactivofijoLogic=new SubGrupoActivoFijoLogic();

			//subgrupoactivofijoLogic.getSubGrupoActivoFijoDataAccess().setIsForForeingKeyData(true);

			if(this.detalleactivofijoSessionBean==null) {
				this.detalleactivofijoSessionBean=new DetalleActivoFijoSessionBean();
			}

			if(!this.detalleactivofijoSessionBean.getisBusquedaDesdeForeignKeySesionSubGrupoActivoFijo()) {
				//ARCHITECTURE
				if(Constantes.ISUSAEJBLOGICLAYER) {
					//subgrupoactivofijoLogic.getSubGrupoActivoFijoDataAccess().setIsForForeingKeyData(true);

					subgrupoactivofijoLogic.getTodosSubGrupoActivoFijosWithConnection(sFinalQuery,new Pagination());

					this.subgrupoactivofijosForeignKey=subgrupoactivofijoLogic.getSubGrupoActivoFijos();

				} else if(Constantes.ISUSAEJBREMOTE) {

				} else if(Constantes.ISUSAEJBHOME) {
				}


				//ARCHITECTURE
			} else {
				if(!this.conCargarMinimo) {
					this.setVisibilidadBusquedasParaSubGrupoActivoFijo(true);
				}
				//ARCHITECTURE

				if(Constantes.ISUSAEJBLOGICLAYER) {
					subgrupoactivofijoLogic.getEntityWithConnection(detalleactivofijoSessionBean.getlidSubGrupoActivoFijoActual());
					this.subgrupoactivofijosForeignKey.add(subgrupoactivofijoLogic.getSubGrupoActivoFijo());
				} else if(Constantes.ISUSAEJBREMOTE) {
				} else if(Constantes.ISUSAEJBHOME) {
				}
				//ARCHITECTURE
			}
		}
		catch(Exception e)
		{
			throw e;
		}
	}

	public void cargarCombosTipoRamoActivoFijosForeignKeyLista(String sFinalQuery)throws Exception
	{
		try
		{
			this.tiporamoactivofijosForeignKey=new ArrayList<TipoRamoActivoFijo>();

			ArrayList<Classe> clases=new ArrayList<Classe>();
			ArrayList<String> arrClasses=new ArrayList<String>();
			Classe classe=new Classe();
			DatosDeep datosDeep=new DatosDeep(false,DeepLoadType.INCLUDE,clases,"");

			TipoRamoActivoFijoLogic tiporamoactivofijoLogic=new TipoRamoActivoFijoLogic();

			//tiporamoactivofijoLogic.getTipoRamoActivoFijoDataAccess().setIsForForeingKeyData(true);

			if(this.detalleactivofijoSessionBean==null) {
				this.detalleactivofijoSessionBean=new DetalleActivoFijoSessionBean();
			}

			if(!this.detalleactivofijoSessionBean.getisBusquedaDesdeForeignKeySesionTipoRamoActivoFijo()) {
				//ARCHITECTURE
				if(Constantes.ISUSAEJBLOGICLAYER) {
					//tiporamoactivofijoLogic.getTipoRamoActivoFijoDataAccess().setIsForForeingKeyData(true);

					tiporamoactivofijoLogic.getTodosTipoRamoActivoFijosWithConnection(sFinalQuery,new Pagination());

					this.tiporamoactivofijosForeignKey=tiporamoactivofijoLogic.getTipoRamoActivoFijos();

				} else if(Constantes.ISUSAEJBREMOTE) {

				} else if(Constantes.ISUSAEJBHOME) {
				}


				//ARCHITECTURE
			} else {
				if(!this.conCargarMinimo) {
					this.setVisibilidadBusquedasParaTipoRamoActivoFijo(true);
				}
				//ARCHITECTURE

				if(Constantes.ISUSAEJBLOGICLAYER) {
					tiporamoactivofijoLogic.getEntityWithConnection(detalleactivofijoSessionBean.getlidTipoRamoActivoFijoActual());
					this.tiporamoactivofijosForeignKey.add(tiporamoactivofijoLogic.getTipoRamoActivoFijo());
				} else if(Constantes.ISUSAEJBREMOTE) {
				} else if(Constantes.ISUSAEJBHOME) {
				}
				//ARCHITECTURE
			}
		}
		catch(Exception e)
		{
			throw e;
		}
	}

	public void cargarCombosTipoActivoFijoEmpresasForeignKeyLista(String sFinalQuery)throws Exception
	{
		try
		{
			this.tipoactivofijoempresasForeignKey=new ArrayList<TipoActivoFijoEmpresa>();

			ArrayList<Classe> clases=new ArrayList<Classe>();
			ArrayList<String> arrClasses=new ArrayList<String>();
			Classe classe=new Classe();
			DatosDeep datosDeep=new DatosDeep(false,DeepLoadType.INCLUDE,clases,"");

			TipoActivoFijoEmpresaLogic tipoactivofijoempresaLogic=new TipoActivoFijoEmpresaLogic();

			//tipoactivofijoempresaLogic.getTipoActivoFijoEmpresaDataAccess().setIsForForeingKeyData(true);

			if(this.detalleactivofijoSessionBean==null) {
				this.detalleactivofijoSessionBean=new DetalleActivoFijoSessionBean();
			}

			if(!this.detalleactivofijoSessionBean.getisBusquedaDesdeForeignKeySesionTipoActivoFijoEmpresa()) {
				//ARCHITECTURE
				if(Constantes.ISUSAEJBLOGICLAYER) {
					//tipoactivofijoempresaLogic.getTipoActivoFijoEmpresaDataAccess().setIsForForeingKeyData(true);

					tipoactivofijoempresaLogic.getTodosTipoActivoFijoEmpresasWithConnection(sFinalQuery,new Pagination());

					this.tipoactivofijoempresasForeignKey=tipoactivofijoempresaLogic.getTipoActivoFijoEmpresas();

				} else if(Constantes.ISUSAEJBREMOTE) {

				} else if(Constantes.ISUSAEJBHOME) {
				}


				//ARCHITECTURE
			} else {
				if(!this.conCargarMinimo) {
					this.setVisibilidadBusquedasParaTipoActivoFijoEmpresa(true);
				}
				//ARCHITECTURE

				if(Constantes.ISUSAEJBLOGICLAYER) {
					tipoactivofijoempresaLogic.getEntityWithConnection(detalleactivofijoSessionBean.getlidTipoActivoFijoEmpresaActual());
					this.tipoactivofijoempresasForeignKey.add(tipoactivofijoempresaLogic.getTipoActivoFijoEmpresa());
				} else if(Constantes.ISUSAEJBREMOTE) {
				} else if(Constantes.ISUSAEJBHOME) {
				}
				//ARCHITECTURE
			}
		}
		catch(Exception e)
		{
			throw e;
		}
	}

	public void cargarCombosTipoDepreciacionEmpresasForeignKeyLista(String sFinalQuery)throws Exception
	{
		try
		{
			this.tipodepreciacionempresasForeignKey=new ArrayList<TipoDepreciacionEmpresa>();

			ArrayList<Classe> clases=new ArrayList<Classe>();
			ArrayList<String> arrClasses=new ArrayList<String>();
			Classe classe=new Classe();
			DatosDeep datosDeep=new DatosDeep(false,DeepLoadType.INCLUDE,clases,"");

			TipoDepreciacionEmpresaLogic tipodepreciacionempresaLogic=new TipoDepreciacionEmpresaLogic();

			//tipodepreciacionempresaLogic.getTipoDepreciacionEmpresaDataAccess().setIsForForeingKeyData(true);

			if(this.detalleactivofijoSessionBean==null) {
				this.detalleactivofijoSessionBean=new DetalleActivoFijoSessionBean();
			}

			if(!this.detalleactivofijoSessionBean.getisBusquedaDesdeForeignKeySesionTipoDepreciacionEmpresa()) {
				//ARCHITECTURE
				if(Constantes.ISUSAEJBLOGICLAYER) {
					//tipodepreciacionempresaLogic.getTipoDepreciacionEmpresaDataAccess().setIsForForeingKeyData(true);

					tipodepreciacionempresaLogic.getTodosTipoDepreciacionEmpresasWithConnection(sFinalQuery,new Pagination());

					this.tipodepreciacionempresasForeignKey=tipodepreciacionempresaLogic.getTipoDepreciacionEmpresas();

				} else if(Constantes.ISUSAEJBREMOTE) {

				} else if(Constantes.ISUSAEJBHOME) {
				}


				//ARCHITECTURE
			} else {
				if(!this.conCargarMinimo) {
					this.setVisibilidadBusquedasParaTipoDepreciacionEmpresa(true);
				}
				//ARCHITECTURE

				if(Constantes.ISUSAEJBLOGICLAYER) {
					tipodepreciacionempresaLogic.getEntityWithConnection(detalleactivofijoSessionBean.getlidTipoDepreciacionEmpresaActual());
					this.tipodepreciacionempresasForeignKey.add(tipodepreciacionempresaLogic.getTipoDepreciacionEmpresa());
				} else if(Constantes.ISUSAEJBREMOTE) {
				} else if(Constantes.ISUSAEJBHOME) {
				}
				//ARCHITECTURE
			}
		}
		catch(Exception e)
		{
			throw e;
		}
	}

	public void cargarCombosEstadoActivoFijosForeignKeyLista(String sFinalQuery)throws Exception
	{
		try
		{
			this.estadoactivofijosForeignKey=new ArrayList<EstadoActivoFijo>();

			ArrayList<Classe> clases=new ArrayList<Classe>();
			ArrayList<String> arrClasses=new ArrayList<String>();
			Classe classe=new Classe();
			DatosDeep datosDeep=new DatosDeep(false,DeepLoadType.INCLUDE,clases,"");

			EstadoActivoFijoLogic estadoactivofijoLogic=new EstadoActivoFijoLogic();

			//estadoactivofijoLogic.getEstadoActivoFijoDataAccess().setIsForForeingKeyData(true);

			if(this.detalleactivofijoSessionBean==null) {
				this.detalleactivofijoSessionBean=new DetalleActivoFijoSessionBean();
			}

			if(!this.detalleactivofijoSessionBean.getisBusquedaDesdeForeignKeySesionEstadoActivoFijo()) {
				//ARCHITECTURE
				if(Constantes.ISUSAEJBLOGICLAYER) {
					//estadoactivofijoLogic.getEstadoActivoFijoDataAccess().setIsForForeingKeyData(true);

					estadoactivofijoLogic.getTodosEstadoActivoFijosWithConnection(sFinalQuery,new Pagination());

					this.estadoactivofijosForeignKey=estadoactivofijoLogic.getEstadoActivoFijos();

				} else if(Constantes.ISUSAEJBREMOTE) {

				} else if(Constantes.ISUSAEJBHOME) {
				}


				//ARCHITECTURE
			} else {
				if(!this.conCargarMinimo) {
					this.setVisibilidadBusquedasParaEstadoActivoFijo(true);
				}
				//ARCHITECTURE

				if(Constantes.ISUSAEJBLOGICLAYER) {
					estadoactivofijoLogic.getEntityWithConnection(detalleactivofijoSessionBean.getlidEstadoActivoFijoActual());
					this.estadoactivofijosForeignKey.add(estadoactivofijoLogic.getEstadoActivoFijo());
				} else if(Constantes.ISUSAEJBREMOTE) {
				} else if(Constantes.ISUSAEJBHOME) {
				}
				//ARCHITECTURE
			}
		}
		catch(Exception e)
		{
			throw e;
		}
	}

	public void cargarCombosClientesForeignKeyLista(String sFinalQuery)throws Exception
	{
		try
		{
			this.clientesForeignKey=new ArrayList<Cliente>();

			ArrayList<Classe> clases=new ArrayList<Classe>();
			ArrayList<String> arrClasses=new ArrayList<String>();
			Classe classe=new Classe();
			DatosDeep datosDeep=new DatosDeep(false,DeepLoadType.INCLUDE,clases,"");

			ClienteLogic clienteLogic=new ClienteLogic();

			//clienteLogic.getClienteDataAccess().setIsForForeingKeyData(true);

			if(this.detalleactivofijoSessionBean==null) {
				this.detalleactivofijoSessionBean=new DetalleActivoFijoSessionBean();
			}

			if(!this.detalleactivofijoSessionBean.getisBusquedaDesdeForeignKeySesionCliente()) {
				//ARCHITECTURE
				if(Constantes.ISUSAEJBLOGICLAYER) {
					//clienteLogic.getClienteDataAccess().setIsForForeingKeyData(true);

					clienteLogic.getTodosClientesWithConnection(sFinalQuery,new Pagination());

					this.clientesForeignKey=clienteLogic.getClientes();

				} else if(Constantes.ISUSAEJBREMOTE) {

				} else if(Constantes.ISUSAEJBHOME) {
				}


				//ARCHITECTURE
			} else {
				if(!this.conCargarMinimo) {
					this.setVisibilidadBusquedasParaCliente(true);
				}
				//ARCHITECTURE

				if(Constantes.ISUSAEJBLOGICLAYER) {
					clienteLogic.getEntityWithConnection(detalleactivofijoSessionBean.getlidClienteActual());
					this.clientesForeignKey.add(clienteLogic.getCliente());
				} else if(Constantes.ISUSAEJBREMOTE) {
				} else if(Constantes.ISUSAEJBHOME) {
				}
				//ARCHITECTURE
			}
		}
		catch(Exception e)
		{
			throw e;
		}
	}

	public void cargarCombosPartidaPresusForeignKeyLista(String sFinalQuery)throws Exception
	{
		try
		{
			this.partidapresusForeignKey=new ArrayList<PartidaPresu>();

			ArrayList<Classe> clases=new ArrayList<Classe>();
			ArrayList<String> arrClasses=new ArrayList<String>();
			Classe classe=new Classe();
			DatosDeep datosDeep=new DatosDeep(false,DeepLoadType.INCLUDE,clases,"");

			PartidaPresuLogic partidapresuLogic=new PartidaPresuLogic();

			//partidapresuLogic.getPartidaPresuDataAccess().setIsForForeingKeyData(true);

			if(this.detalleactivofijoSessionBean==null) {
				this.detalleactivofijoSessionBean=new DetalleActivoFijoSessionBean();
			}

			if(!this.detalleactivofijoSessionBean.getisBusquedaDesdeForeignKeySesionPartidaPresu()) {
				//ARCHITECTURE
				if(Constantes.ISUSAEJBLOGICLAYER) {
					//partidapresuLogic.getPartidaPresuDataAccess().setIsForForeingKeyData(true);

					partidapresuLogic.getTodosPartidaPresusWithConnection(sFinalQuery,new Pagination());

					this.partidapresusForeignKey=partidapresuLogic.getPartidaPresus();

				} else if(Constantes.ISUSAEJBREMOTE) {

				} else if(Constantes.ISUSAEJBHOME) {
				}


				//ARCHITECTURE
			} else {
				if(!this.conCargarMinimo) {
					this.setVisibilidadBusquedasParaPartidaPresu(true);
				}
				//ARCHITECTURE

				if(Constantes.ISUSAEJBLOGICLAYER) {
					partidapresuLogic.getEntityWithConnection(detalleactivofijoSessionBean.getlidPartidaPresuActual());
					this.partidapresusForeignKey.add(partidapresuLogic.getPartidaPresu());
				} else if(Constantes.ISUSAEJBREMOTE) {
				} else if(Constantes.ISUSAEJBHOME) {
				}
				//ARCHITECTURE
			}
		}
		catch(Exception e)
		{
			throw e;
		}
	}

	
	
	public void setActualEmpresaForeignKey(Long idEmpresaSeleccionado,Boolean conCombosBusquedas,String sFormularioTipoBusqueda)throws Exception
	{
		try
		{
			Empresa  empresaTemp=null;

			for(Empresa empresaAux:empresasForeignKey) {
				if(empresaAux.getId()!=null && empresaAux.getId().equals(idEmpresaSeleccionado)) {
					empresaTemp=empresaAux;
					break;
				}
			}

			if(sFormularioTipoBusqueda.equals("Formulario") || sFormularioTipoBusqueda.equals("Todos")){
				if(empresaTemp!=null) {

					if(this.detalleactivofijo!=null) {
						this.detalleactivofijo.setEmpresa(empresaTemp);
					}

					if(this.jInternalFrameDetalleFormDetalleActivoFijo!=null) {
						this.jInternalFrameDetalleFormDetalleActivoFijo.jComboBoxid_empresaDetalleActivoFijo.setSelectedItem(empresaTemp);
					}
				} else {
					//jComboBoxid_empresaDetalleActivoFijo.setSelectedItem(empresaTemp);
					if(this.jInternalFrameDetalleFormDetalleActivoFijo!=null) {
						if(this.jInternalFrameDetalleFormDetalleActivoFijo.jComboBoxid_empresaDetalleActivoFijo.getItemCount()>0) {
							this.jInternalFrameDetalleFormDetalleActivoFijo.jComboBoxid_empresaDetalleActivoFijo.setSelectedIndex(0);
						}
					}
				}
			}

			if(conCombosBusquedas) {

		//BYDAN_BUSQUEDAS
						

					}

		}
		catch(Exception e)
		{
			throw e;
		}
	}

	public String getActualEmpresaForeignKeyDescripcion(Long idEmpresaSeleccionado)throws Exception
	{
		String sDescripcion="";

		try
		{
			Empresa  empresaTemp=null;

			for(Empresa empresaAux:empresasForeignKey) {
				if(empresaAux.getId()!=null && empresaAux.getId().equals(idEmpresaSeleccionado)) {
					empresaTemp=empresaAux;
					break;
				}
			}


			sDescripcion=EmpresaConstantesFunciones.getEmpresaDescripcion(empresaTemp);
		}
		catch(Exception e)
		{
			throw e;
		}

		return sDescripcion;
	}

	@SuppressWarnings("rawtypes")
	public void setActualEmpresaForeignKeyGenerico(Long idEmpresaSeleccionado,JComboBox jComboBoxid_empresaDetalleActivoFijoGenerico)throws Exception
	{
		try
		{
			Empresa  empresaTemp=null;

			for(Empresa empresaAux:empresasForeignKey) {
				if(empresaAux.getId()!=null && empresaAux.getId().equals(idEmpresaSeleccionado)) {
					empresaTemp=empresaAux;
					break;
				}
			}

			if(empresaTemp!=null) {
				jComboBoxid_empresaDetalleActivoFijoGenerico.setSelectedItem(empresaTemp);
			} else {
				if(jComboBoxid_empresaDetalleActivoFijoGenerico!=null && jComboBoxid_empresaDetalleActivoFijoGenerico.getItemCount()>0) {
					jComboBoxid_empresaDetalleActivoFijoGenerico.setSelectedIndex(0);
				}
			}

		}
		catch(Exception e)
		{
			throw e;
		}

	}

	public void setActualSucursalForeignKey(Long idSucursalSeleccionado,Boolean conCombosBusquedas,String sFormularioTipoBusqueda)throws Exception
	{
		try
		{
			Sucursal  sucursalTemp=null;

			for(Sucursal sucursalAux:sucursalsForeignKey) {
				if(sucursalAux.getId()!=null && sucursalAux.getId().equals(idSucursalSeleccionado)) {
					sucursalTemp=sucursalAux;
					break;
				}
			}

			if(sFormularioTipoBusqueda.equals("Formulario") || sFormularioTipoBusqueda.equals("Todos")){
				if(sucursalTemp!=null) {

					if(this.detalleactivofijo!=null) {
						this.detalleactivofijo.setSucursal(sucursalTemp);
					}

					if(this.jInternalFrameDetalleFormDetalleActivoFijo!=null) {
						this.jInternalFrameDetalleFormDetalleActivoFijo.jComboBoxid_sucursalDetalleActivoFijo.setSelectedItem(sucursalTemp);
					}
				} else {
					//jComboBoxid_sucursalDetalleActivoFijo.setSelectedItem(sucursalTemp);
					if(this.jInternalFrameDetalleFormDetalleActivoFijo!=null) {
						if(this.jInternalFrameDetalleFormDetalleActivoFijo.jComboBoxid_sucursalDetalleActivoFijo.getItemCount()>0) {
							this.jInternalFrameDetalleFormDetalleActivoFijo.jComboBoxid_sucursalDetalleActivoFijo.setSelectedIndex(0);
						}
					}
				}
			}

			if(conCombosBusquedas) {

		//BYDAN_BUSQUEDAS
						

					}

		}
		catch(Exception e)
		{
			throw e;
		}
	}

	public String getActualSucursalForeignKeyDescripcion(Long idSucursalSeleccionado)throws Exception
	{
		String sDescripcion="";

		try
		{
			Sucursal  sucursalTemp=null;

			for(Sucursal sucursalAux:sucursalsForeignKey) {
				if(sucursalAux.getId()!=null && sucursalAux.getId().equals(idSucursalSeleccionado)) {
					sucursalTemp=sucursalAux;
					break;
				}
			}


			sDescripcion=SucursalConstantesFunciones.getSucursalDescripcion(sucursalTemp);
		}
		catch(Exception e)
		{
			throw e;
		}

		return sDescripcion;
	}

	@SuppressWarnings("rawtypes")
	public void setActualSucursalForeignKeyGenerico(Long idSucursalSeleccionado,JComboBox jComboBoxid_sucursalDetalleActivoFijoGenerico)throws Exception
	{
		try
		{
			Sucursal  sucursalTemp=null;

			for(Sucursal sucursalAux:sucursalsForeignKey) {
				if(sucursalAux.getId()!=null && sucursalAux.getId().equals(idSucursalSeleccionado)) {
					sucursalTemp=sucursalAux;
					break;
				}
			}

			if(sucursalTemp!=null) {
				jComboBoxid_sucursalDetalleActivoFijoGenerico.setSelectedItem(sucursalTemp);
			} else {
				if(jComboBoxid_sucursalDetalleActivoFijoGenerico!=null && jComboBoxid_sucursalDetalleActivoFijoGenerico.getItemCount()>0) {
					jComboBoxid_sucursalDetalleActivoFijoGenerico.setSelectedIndex(0);
				}
			}

		}
		catch(Exception e)
		{
			throw e;
		}

	}

	public void setActualDetalleGrupoActivoFijoForeignKey(Long idDetalleGrupoActivoFijoSeleccionado,Boolean conCombosBusquedas,String sFormularioTipoBusqueda)throws Exception
	{
		try
		{
			DetalleGrupoActivoFijo  detallegrupoactivofijoTemp=null;

			for(DetalleGrupoActivoFijo detallegrupoactivofijoAux:detallegrupoactivofijosForeignKey) {
				if(detallegrupoactivofijoAux.getId()!=null && detallegrupoactivofijoAux.getId().equals(idDetalleGrupoActivoFijoSeleccionado)) {
					detallegrupoactivofijoTemp=detallegrupoactivofijoAux;
					break;
				}
			}

			if(sFormularioTipoBusqueda.equals("Formulario") || sFormularioTipoBusqueda.equals("Todos")){
				if(detallegrupoactivofijoTemp!=null) {

					if(this.detalleactivofijo!=null) {
						this.detalleactivofijo.setDetalleGrupoActivoFijo(detallegrupoactivofijoTemp);
					}

					if(this.jInternalFrameDetalleFormDetalleActivoFijo!=null) {
						this.jInternalFrameDetalleFormDetalleActivoFijo.jComboBoxid_detalle_grupo_activo_fijoDetalleActivoFijo.setSelectedItem(detallegrupoactivofijoTemp);
					}
				} else {
					//jComboBoxid_detalle_grupo_activo_fijoDetalleActivoFijo.setSelectedItem(detallegrupoactivofijoTemp);
					if(this.jInternalFrameDetalleFormDetalleActivoFijo!=null) {
						if(this.jInternalFrameDetalleFormDetalleActivoFijo.jComboBoxid_detalle_grupo_activo_fijoDetalleActivoFijo.getItemCount()>0) {
							this.jInternalFrameDetalleFormDetalleActivoFijo.jComboBoxid_detalle_grupo_activo_fijoDetalleActivoFijo.setSelectedIndex(0);
						}
					}
				}
			}

			if(conCombosBusquedas) {

		//BYDAN_BUSQUEDAS
						
				if(sFormularioTipoBusqueda.equals("FK_IdDetalleGrupoActivoFijo") || sFormularioTipoBusqueda.equals("Todos")){
					if(detallegrupoactivofijoTemp!=null && jComboBoxid_detalle_grupo_activo_fijoFK_IdDetalleGrupoActivoFijoDetalleActivoFijo!=null) {
						jComboBoxid_detalle_grupo_activo_fijoFK_IdDetalleGrupoActivoFijoDetalleActivoFijo.setSelectedItem(detallegrupoactivofijoTemp);
					} else {
						if(jComboBoxid_detalle_grupo_activo_fijoFK_IdDetalleGrupoActivoFijoDetalleActivoFijo!=null) {
							//jComboBoxid_detalle_grupo_activo_fijoFK_IdDetalleGrupoActivoFijoDetalleActivoFijo.setSelectedItem(detallegrupoactivofijoTemp);
							if(jComboBoxid_detalle_grupo_activo_fijoFK_IdDetalleGrupoActivoFijoDetalleActivoFijo.getItemCount()>0) {
								jComboBoxid_detalle_grupo_activo_fijoFK_IdDetalleGrupoActivoFijoDetalleActivoFijo.setSelectedIndex(0);
							}
						}
					}
				}

					}

		}
		catch(Exception e)
		{
			throw e;
		}
	}

	public String getActualDetalleGrupoActivoFijoForeignKeyDescripcion(Long idDetalleGrupoActivoFijoSeleccionado)throws Exception
	{
		String sDescripcion="";

		try
		{
			DetalleGrupoActivoFijo  detallegrupoactivofijoTemp=null;

			for(DetalleGrupoActivoFijo detallegrupoactivofijoAux:detallegrupoactivofijosForeignKey) {
				if(detallegrupoactivofijoAux.getId()!=null && detallegrupoactivofijoAux.getId().equals(idDetalleGrupoActivoFijoSeleccionado)) {
					detallegrupoactivofijoTemp=detallegrupoactivofijoAux;
					break;
				}
			}


			sDescripcion=DetalleGrupoActivoFijoConstantesFunciones.getDetalleGrupoActivoFijoDescripcion(detallegrupoactivofijoTemp);
		}
		catch(Exception e)
		{
			throw e;
		}

		return sDescripcion;
	}

	@SuppressWarnings("rawtypes")
	public void setActualDetalleGrupoActivoFijoForeignKeyGenerico(Long idDetalleGrupoActivoFijoSeleccionado,JComboBox jComboBoxid_detalle_grupo_activo_fijoDetalleActivoFijoGenerico)throws Exception
	{
		try
		{
			DetalleGrupoActivoFijo  detallegrupoactivofijoTemp=null;

			for(DetalleGrupoActivoFijo detallegrupoactivofijoAux:detallegrupoactivofijosForeignKey) {
				if(detallegrupoactivofijoAux.getId()!=null && detallegrupoactivofijoAux.getId().equals(idDetalleGrupoActivoFijoSeleccionado)) {
					detallegrupoactivofijoTemp=detallegrupoactivofijoAux;
					break;
				}
			}

			if(detallegrupoactivofijoTemp!=null) {
				jComboBoxid_detalle_grupo_activo_fijoDetalleActivoFijoGenerico.setSelectedItem(detallegrupoactivofijoTemp);
			} else {
				if(jComboBoxid_detalle_grupo_activo_fijoDetalleActivoFijoGenerico!=null && jComboBoxid_detalle_grupo_activo_fijoDetalleActivoFijoGenerico.getItemCount()>0) {
					jComboBoxid_detalle_grupo_activo_fijoDetalleActivoFijoGenerico.setSelectedIndex(0);
				}
			}

		}
		catch(Exception e)
		{
			throw e;
		}

	}

	public void setActualSubGrupoActivoFijoForeignKey(Long idSubGrupoActivoFijoSeleccionado,Boolean conCombosBusquedas,String sFormularioTipoBusqueda)throws Exception
	{
		try
		{
			SubGrupoActivoFijo  subgrupoactivofijoTemp=null;

			for(SubGrupoActivoFijo subgrupoactivofijoAux:subgrupoactivofijosForeignKey) {
				if(subgrupoactivofijoAux.getId()!=null && subgrupoactivofijoAux.getId().equals(idSubGrupoActivoFijoSeleccionado)) {
					subgrupoactivofijoTemp=subgrupoactivofijoAux;
					break;
				}
			}

			if(sFormularioTipoBusqueda.equals("Formulario") || sFormularioTipoBusqueda.equals("Todos")){
				if(subgrupoactivofijoTemp!=null) {

					if(this.detalleactivofijo!=null) {
						this.detalleactivofijo.setSubGrupoActivoFijo(subgrupoactivofijoTemp);
					}

					if(this.jInternalFrameDetalleFormDetalleActivoFijo!=null) {
						this.jInternalFrameDetalleFormDetalleActivoFijo.jComboBoxid_sub_grupo_activo_fijoDetalleActivoFijo.setSelectedItem(subgrupoactivofijoTemp);
					}
				} else {
					//jComboBoxid_sub_grupo_activo_fijoDetalleActivoFijo.setSelectedItem(subgrupoactivofijoTemp);
					if(this.jInternalFrameDetalleFormDetalleActivoFijo!=null) {
						if(this.jInternalFrameDetalleFormDetalleActivoFijo.jComboBoxid_sub_grupo_activo_fijoDetalleActivoFijo.getItemCount()>0) {
							this.jInternalFrameDetalleFormDetalleActivoFijo.jComboBoxid_sub_grupo_activo_fijoDetalleActivoFijo.setSelectedIndex(0);
						}
					}
				}
			}

			if(conCombosBusquedas) {

		//BYDAN_BUSQUEDAS
						
				if(sFormularioTipoBusqueda.equals("FK_IdSubGrupoActivoFijo") || sFormularioTipoBusqueda.equals("Todos")){
					if(subgrupoactivofijoTemp!=null && jComboBoxid_sub_grupo_activo_fijoFK_IdSubGrupoActivoFijoDetalleActivoFijo!=null) {
						jComboBoxid_sub_grupo_activo_fijoFK_IdSubGrupoActivoFijoDetalleActivoFijo.setSelectedItem(subgrupoactivofijoTemp);
					} else {
						if(jComboBoxid_sub_grupo_activo_fijoFK_IdSubGrupoActivoFijoDetalleActivoFijo!=null) {
							//jComboBoxid_sub_grupo_activo_fijoFK_IdSubGrupoActivoFijoDetalleActivoFijo.setSelectedItem(subgrupoactivofijoTemp);
							if(jComboBoxid_sub_grupo_activo_fijoFK_IdSubGrupoActivoFijoDetalleActivoFijo.getItemCount()>0) {
								jComboBoxid_sub_grupo_activo_fijoFK_IdSubGrupoActivoFijoDetalleActivoFijo.setSelectedIndex(0);
							}
						}
					}
				}

					}

		}
		catch(Exception e)
		{
			throw e;
		}
	}

	public String getActualSubGrupoActivoFijoForeignKeyDescripcion(Long idSubGrupoActivoFijoSeleccionado)throws Exception
	{
		String sDescripcion="";

		try
		{
			SubGrupoActivoFijo  subgrupoactivofijoTemp=null;

			for(SubGrupoActivoFijo subgrupoactivofijoAux:subgrupoactivofijosForeignKey) {
				if(subgrupoactivofijoAux.getId()!=null && subgrupoactivofijoAux.getId().equals(idSubGrupoActivoFijoSeleccionado)) {
					subgrupoactivofijoTemp=subgrupoactivofijoAux;
					break;
				}
			}


			sDescripcion=SubGrupoActivoFijoConstantesFunciones.getSubGrupoActivoFijoDescripcion(subgrupoactivofijoTemp);
		}
		catch(Exception e)
		{
			throw e;
		}

		return sDescripcion;
	}

	@SuppressWarnings("rawtypes")
	public void setActualSubGrupoActivoFijoForeignKeyGenerico(Long idSubGrupoActivoFijoSeleccionado,JComboBox jComboBoxid_sub_grupo_activo_fijoDetalleActivoFijoGenerico)throws Exception
	{
		try
		{
			SubGrupoActivoFijo  subgrupoactivofijoTemp=null;

			for(SubGrupoActivoFijo subgrupoactivofijoAux:subgrupoactivofijosForeignKey) {
				if(subgrupoactivofijoAux.getId()!=null && subgrupoactivofijoAux.getId().equals(idSubGrupoActivoFijoSeleccionado)) {
					subgrupoactivofijoTemp=subgrupoactivofijoAux;
					break;
				}
			}

			if(subgrupoactivofijoTemp!=null) {
				jComboBoxid_sub_grupo_activo_fijoDetalleActivoFijoGenerico.setSelectedItem(subgrupoactivofijoTemp);
			} else {
				if(jComboBoxid_sub_grupo_activo_fijoDetalleActivoFijoGenerico!=null && jComboBoxid_sub_grupo_activo_fijoDetalleActivoFijoGenerico.getItemCount()>0) {
					jComboBoxid_sub_grupo_activo_fijoDetalleActivoFijoGenerico.setSelectedIndex(0);
				}
			}

		}
		catch(Exception e)
		{
			throw e;
		}

	}

	public void setActualTipoRamoActivoFijoForeignKey(Long idTipoRamoActivoFijoSeleccionado,Boolean conCombosBusquedas,String sFormularioTipoBusqueda)throws Exception
	{
		try
		{
			TipoRamoActivoFijo  tiporamoactivofijoTemp=null;

			for(TipoRamoActivoFijo tiporamoactivofijoAux:tiporamoactivofijosForeignKey) {
				if(tiporamoactivofijoAux.getId()!=null && tiporamoactivofijoAux.getId().equals(idTipoRamoActivoFijoSeleccionado)) {
					tiporamoactivofijoTemp=tiporamoactivofijoAux;
					break;
				}
			}

			if(sFormularioTipoBusqueda.equals("Formulario") || sFormularioTipoBusqueda.equals("Todos")){
				if(tiporamoactivofijoTemp!=null) {

					if(this.detalleactivofijo!=null) {
						this.detalleactivofijo.setTipoRamoActivoFijo(tiporamoactivofijoTemp);
					}

					if(this.jInternalFrameDetalleFormDetalleActivoFijo!=null) {
						this.jInternalFrameDetalleFormDetalleActivoFijo.jComboBoxid_tipo_ramo_activo_fijoDetalleActivoFijo.setSelectedItem(tiporamoactivofijoTemp);
					}
				} else {
					//jComboBoxid_tipo_ramo_activo_fijoDetalleActivoFijo.setSelectedItem(tiporamoactivofijoTemp);
					if(this.jInternalFrameDetalleFormDetalleActivoFijo!=null) {
						if(this.jInternalFrameDetalleFormDetalleActivoFijo.jComboBoxid_tipo_ramo_activo_fijoDetalleActivoFijo.getItemCount()>0) {
							this.jInternalFrameDetalleFormDetalleActivoFijo.jComboBoxid_tipo_ramo_activo_fijoDetalleActivoFijo.setSelectedIndex(0);
						}
					}
				}
			}

			if(conCombosBusquedas) {

		//BYDAN_BUSQUEDAS
						
				if(sFormularioTipoBusqueda.equals("FK_IdTipoRamoActivoFijo") || sFormularioTipoBusqueda.equals("Todos")){
					if(tiporamoactivofijoTemp!=null && jComboBoxid_tipo_ramo_activo_fijoFK_IdTipoRamoActivoFijoDetalleActivoFijo!=null) {
						jComboBoxid_tipo_ramo_activo_fijoFK_IdTipoRamoActivoFijoDetalleActivoFijo.setSelectedItem(tiporamoactivofijoTemp);
					} else {
						if(jComboBoxid_tipo_ramo_activo_fijoFK_IdTipoRamoActivoFijoDetalleActivoFijo!=null) {
							//jComboBoxid_tipo_ramo_activo_fijoFK_IdTipoRamoActivoFijoDetalleActivoFijo.setSelectedItem(tiporamoactivofijoTemp);
							if(jComboBoxid_tipo_ramo_activo_fijoFK_IdTipoRamoActivoFijoDetalleActivoFijo.getItemCount()>0) {
								jComboBoxid_tipo_ramo_activo_fijoFK_IdTipoRamoActivoFijoDetalleActivoFijo.setSelectedIndex(0);
							}
						}
					}
				}

					}

		}
		catch(Exception e)
		{
			throw e;
		}
	}

	public String getActualTipoRamoActivoFijoForeignKeyDescripcion(Long idTipoRamoActivoFijoSeleccionado)throws Exception
	{
		String sDescripcion="";

		try
		{
			TipoRamoActivoFijo  tiporamoactivofijoTemp=null;

			for(TipoRamoActivoFijo tiporamoactivofijoAux:tiporamoactivofijosForeignKey) {
				if(tiporamoactivofijoAux.getId()!=null && tiporamoactivofijoAux.getId().equals(idTipoRamoActivoFijoSeleccionado)) {
					tiporamoactivofijoTemp=tiporamoactivofijoAux;
					break;
				}
			}


			sDescripcion=TipoRamoActivoFijoConstantesFunciones.getTipoRamoActivoFijoDescripcion(tiporamoactivofijoTemp);
		}
		catch(Exception e)
		{
			throw e;
		}

		return sDescripcion;
	}

	@SuppressWarnings("rawtypes")
	public void setActualTipoRamoActivoFijoForeignKeyGenerico(Long idTipoRamoActivoFijoSeleccionado,JComboBox jComboBoxid_tipo_ramo_activo_fijoDetalleActivoFijoGenerico)throws Exception
	{
		try
		{
			TipoRamoActivoFijo  tiporamoactivofijoTemp=null;

			for(TipoRamoActivoFijo tiporamoactivofijoAux:tiporamoactivofijosForeignKey) {
				if(tiporamoactivofijoAux.getId()!=null && tiporamoactivofijoAux.getId().equals(idTipoRamoActivoFijoSeleccionado)) {
					tiporamoactivofijoTemp=tiporamoactivofijoAux;
					break;
				}
			}

			if(tiporamoactivofijoTemp!=null) {
				jComboBoxid_tipo_ramo_activo_fijoDetalleActivoFijoGenerico.setSelectedItem(tiporamoactivofijoTemp);
			} else {
				if(jComboBoxid_tipo_ramo_activo_fijoDetalleActivoFijoGenerico!=null && jComboBoxid_tipo_ramo_activo_fijoDetalleActivoFijoGenerico.getItemCount()>0) {
					jComboBoxid_tipo_ramo_activo_fijoDetalleActivoFijoGenerico.setSelectedIndex(0);
				}
			}

		}
		catch(Exception e)
		{
			throw e;
		}

	}

	public void setActualTipoActivoFijoEmpresaForeignKey(Long idTipoActivoFijoEmpresaSeleccionado,Boolean conCombosBusquedas,String sFormularioTipoBusqueda)throws Exception
	{
		try
		{
			TipoActivoFijoEmpresa  tipoactivofijoempresaTemp=null;

			for(TipoActivoFijoEmpresa tipoactivofijoempresaAux:tipoactivofijoempresasForeignKey) {
				if(tipoactivofijoempresaAux.getId()!=null && tipoactivofijoempresaAux.getId().equals(idTipoActivoFijoEmpresaSeleccionado)) {
					tipoactivofijoempresaTemp=tipoactivofijoempresaAux;
					break;
				}
			}

			if(sFormularioTipoBusqueda.equals("Formulario") || sFormularioTipoBusqueda.equals("Todos")){
				if(tipoactivofijoempresaTemp!=null) {

					if(this.detalleactivofijo!=null) {
						this.detalleactivofijo.setTipoActivoFijoEmpresa(tipoactivofijoempresaTemp);
					}

					if(this.jInternalFrameDetalleFormDetalleActivoFijo!=null) {
						this.jInternalFrameDetalleFormDetalleActivoFijo.jComboBoxid_tipo_activo_fijo_empresaDetalleActivoFijo.setSelectedItem(tipoactivofijoempresaTemp);
					}
				} else {
					//jComboBoxid_tipo_activo_fijo_empresaDetalleActivoFijo.setSelectedItem(tipoactivofijoempresaTemp);
					if(this.jInternalFrameDetalleFormDetalleActivoFijo!=null) {
						if(this.jInternalFrameDetalleFormDetalleActivoFijo.jComboBoxid_tipo_activo_fijo_empresaDetalleActivoFijo.getItemCount()>0) {
							this.jInternalFrameDetalleFormDetalleActivoFijo.jComboBoxid_tipo_activo_fijo_empresaDetalleActivoFijo.setSelectedIndex(0);
						}
					}
				}
			}

			if(conCombosBusquedas) {

		//BYDAN_BUSQUEDAS
						
				if(sFormularioTipoBusqueda.equals("FK_IdTipoActivoFijoEmpresa") || sFormularioTipoBusqueda.equals("Todos")){
					if(tipoactivofijoempresaTemp!=null && jComboBoxid_tipo_activo_fijo_empresaFK_IdTipoActivoFijoEmpresaDetalleActivoFijo!=null) {
						jComboBoxid_tipo_activo_fijo_empresaFK_IdTipoActivoFijoEmpresaDetalleActivoFijo.setSelectedItem(tipoactivofijoempresaTemp);
					} else {
						if(jComboBoxid_tipo_activo_fijo_empresaFK_IdTipoActivoFijoEmpresaDetalleActivoFijo!=null) {
							//jComboBoxid_tipo_activo_fijo_empresaFK_IdTipoActivoFijoEmpresaDetalleActivoFijo.setSelectedItem(tipoactivofijoempresaTemp);
							if(jComboBoxid_tipo_activo_fijo_empresaFK_IdTipoActivoFijoEmpresaDetalleActivoFijo.getItemCount()>0) {
								jComboBoxid_tipo_activo_fijo_empresaFK_IdTipoActivoFijoEmpresaDetalleActivoFijo.setSelectedIndex(0);
							}
						}
					}
				}

					}

		}
		catch(Exception e)
		{
			throw e;
		}
	}

	public String getActualTipoActivoFijoEmpresaForeignKeyDescripcion(Long idTipoActivoFijoEmpresaSeleccionado)throws Exception
	{
		String sDescripcion="";

		try
		{
			TipoActivoFijoEmpresa  tipoactivofijoempresaTemp=null;

			for(TipoActivoFijoEmpresa tipoactivofijoempresaAux:tipoactivofijoempresasForeignKey) {
				if(tipoactivofijoempresaAux.getId()!=null && tipoactivofijoempresaAux.getId().equals(idTipoActivoFijoEmpresaSeleccionado)) {
					tipoactivofijoempresaTemp=tipoactivofijoempresaAux;
					break;
				}
			}


			sDescripcion=TipoActivoFijoEmpresaConstantesFunciones.getTipoActivoFijoEmpresaDescripcion(tipoactivofijoempresaTemp);
		}
		catch(Exception e)
		{
			throw e;
		}

		return sDescripcion;
	}

	@SuppressWarnings("rawtypes")
	public void setActualTipoActivoFijoEmpresaForeignKeyGenerico(Long idTipoActivoFijoEmpresaSeleccionado,JComboBox jComboBoxid_tipo_activo_fijo_empresaDetalleActivoFijoGenerico)throws Exception
	{
		try
		{
			TipoActivoFijoEmpresa  tipoactivofijoempresaTemp=null;

			for(TipoActivoFijoEmpresa tipoactivofijoempresaAux:tipoactivofijoempresasForeignKey) {
				if(tipoactivofijoempresaAux.getId()!=null && tipoactivofijoempresaAux.getId().equals(idTipoActivoFijoEmpresaSeleccionado)) {
					tipoactivofijoempresaTemp=tipoactivofijoempresaAux;
					break;
				}
			}

			if(tipoactivofijoempresaTemp!=null) {
				jComboBoxid_tipo_activo_fijo_empresaDetalleActivoFijoGenerico.setSelectedItem(tipoactivofijoempresaTemp);
			} else {
				if(jComboBoxid_tipo_activo_fijo_empresaDetalleActivoFijoGenerico!=null && jComboBoxid_tipo_activo_fijo_empresaDetalleActivoFijoGenerico.getItemCount()>0) {
					jComboBoxid_tipo_activo_fijo_empresaDetalleActivoFijoGenerico.setSelectedIndex(0);
				}
			}

		}
		catch(Exception e)
		{
			throw e;
		}

	}

	public void setActualTipoDepreciacionEmpresaForeignKey(Long idTipoDepreciacionEmpresaSeleccionado,Boolean conCombosBusquedas,String sFormularioTipoBusqueda)throws Exception
	{
		try
		{
			TipoDepreciacionEmpresa  tipodepreciacionempresaTemp=null;

			for(TipoDepreciacionEmpresa tipodepreciacionempresaAux:tipodepreciacionempresasForeignKey) {
				if(tipodepreciacionempresaAux.getId()!=null && tipodepreciacionempresaAux.getId().equals(idTipoDepreciacionEmpresaSeleccionado)) {
					tipodepreciacionempresaTemp=tipodepreciacionempresaAux;
					break;
				}
			}

			if(sFormularioTipoBusqueda.equals("Formulario") || sFormularioTipoBusqueda.equals("Todos")){
				if(tipodepreciacionempresaTemp!=null) {

					if(this.detalleactivofijo!=null) {
						this.detalleactivofijo.setTipoDepreciacionEmpresa(tipodepreciacionempresaTemp);
					}

					if(this.jInternalFrameDetalleFormDetalleActivoFijo!=null) {
						this.jInternalFrameDetalleFormDetalleActivoFijo.jComboBoxid_tipo_depreciacion_empresaDetalleActivoFijo.setSelectedItem(tipodepreciacionempresaTemp);
					}
				} else {
					//jComboBoxid_tipo_depreciacion_empresaDetalleActivoFijo.setSelectedItem(tipodepreciacionempresaTemp);
					if(this.jInternalFrameDetalleFormDetalleActivoFijo!=null) {
						if(this.jInternalFrameDetalleFormDetalleActivoFijo.jComboBoxid_tipo_depreciacion_empresaDetalleActivoFijo.getItemCount()>0) {
							this.jInternalFrameDetalleFormDetalleActivoFijo.jComboBoxid_tipo_depreciacion_empresaDetalleActivoFijo.setSelectedIndex(0);
						}
					}
				}
			}

			if(conCombosBusquedas) {

		//BYDAN_BUSQUEDAS
						
				if(sFormularioTipoBusqueda.equals("FK_IdTipoDepreciacionEmpresa") || sFormularioTipoBusqueda.equals("Todos")){
					if(tipodepreciacionempresaTemp!=null && jComboBoxid_tipo_depreciacion_empresaFK_IdTipoDepreciacionEmpresaDetalleActivoFijo!=null) {
						jComboBoxid_tipo_depreciacion_empresaFK_IdTipoDepreciacionEmpresaDetalleActivoFijo.setSelectedItem(tipodepreciacionempresaTemp);
					} else {
						if(jComboBoxid_tipo_depreciacion_empresaFK_IdTipoDepreciacionEmpresaDetalleActivoFijo!=null) {
							//jComboBoxid_tipo_depreciacion_empresaFK_IdTipoDepreciacionEmpresaDetalleActivoFijo.setSelectedItem(tipodepreciacionempresaTemp);
							if(jComboBoxid_tipo_depreciacion_empresaFK_IdTipoDepreciacionEmpresaDetalleActivoFijo.getItemCount()>0) {
								jComboBoxid_tipo_depreciacion_empresaFK_IdTipoDepreciacionEmpresaDetalleActivoFijo.setSelectedIndex(0);
							}
						}
					}
				}

					}

		}
		catch(Exception e)
		{
			throw e;
		}
	}

	public String getActualTipoDepreciacionEmpresaForeignKeyDescripcion(Long idTipoDepreciacionEmpresaSeleccionado)throws Exception
	{
		String sDescripcion="";

		try
		{
			TipoDepreciacionEmpresa  tipodepreciacionempresaTemp=null;

			for(TipoDepreciacionEmpresa tipodepreciacionempresaAux:tipodepreciacionempresasForeignKey) {
				if(tipodepreciacionempresaAux.getId()!=null && tipodepreciacionempresaAux.getId().equals(idTipoDepreciacionEmpresaSeleccionado)) {
					tipodepreciacionempresaTemp=tipodepreciacionempresaAux;
					break;
				}
			}


			sDescripcion=TipoDepreciacionEmpresaConstantesFunciones.getTipoDepreciacionEmpresaDescripcion(tipodepreciacionempresaTemp);
		}
		catch(Exception e)
		{
			throw e;
		}

		return sDescripcion;
	}

	@SuppressWarnings("rawtypes")
	public void setActualTipoDepreciacionEmpresaForeignKeyGenerico(Long idTipoDepreciacionEmpresaSeleccionado,JComboBox jComboBoxid_tipo_depreciacion_empresaDetalleActivoFijoGenerico)throws Exception
	{
		try
		{
			TipoDepreciacionEmpresa  tipodepreciacionempresaTemp=null;

			for(TipoDepreciacionEmpresa tipodepreciacionempresaAux:tipodepreciacionempresasForeignKey) {
				if(tipodepreciacionempresaAux.getId()!=null && tipodepreciacionempresaAux.getId().equals(idTipoDepreciacionEmpresaSeleccionado)) {
					tipodepreciacionempresaTemp=tipodepreciacionempresaAux;
					break;
				}
			}

			if(tipodepreciacionempresaTemp!=null) {
				jComboBoxid_tipo_depreciacion_empresaDetalleActivoFijoGenerico.setSelectedItem(tipodepreciacionempresaTemp);
			} else {
				if(jComboBoxid_tipo_depreciacion_empresaDetalleActivoFijoGenerico!=null && jComboBoxid_tipo_depreciacion_empresaDetalleActivoFijoGenerico.getItemCount()>0) {
					jComboBoxid_tipo_depreciacion_empresaDetalleActivoFijoGenerico.setSelectedIndex(0);
				}
			}

		}
		catch(Exception e)
		{
			throw e;
		}

	}

	public void setActualEstadoActivoFijoForeignKey(Long idEstadoActivoFijoSeleccionado,Boolean conCombosBusquedas,String sFormularioTipoBusqueda)throws Exception
	{
		try
		{
			EstadoActivoFijo  estadoactivofijoTemp=null;

			for(EstadoActivoFijo estadoactivofijoAux:estadoactivofijosForeignKey) {
				if(estadoactivofijoAux.getId()!=null && estadoactivofijoAux.getId().equals(idEstadoActivoFijoSeleccionado)) {
					estadoactivofijoTemp=estadoactivofijoAux;
					break;
				}
			}

			if(sFormularioTipoBusqueda.equals("Formulario") || sFormularioTipoBusqueda.equals("Todos")){
				if(estadoactivofijoTemp!=null) {

					if(this.detalleactivofijo!=null) {
						this.detalleactivofijo.setEstadoActivoFijo(estadoactivofijoTemp);
					}

					if(this.jInternalFrameDetalleFormDetalleActivoFijo!=null) {
						this.jInternalFrameDetalleFormDetalleActivoFijo.jComboBoxid_estado_activo_fijoDetalleActivoFijo.setSelectedItem(estadoactivofijoTemp);
					}
				} else {
					//jComboBoxid_estado_activo_fijoDetalleActivoFijo.setSelectedItem(estadoactivofijoTemp);
					if(this.jInternalFrameDetalleFormDetalleActivoFijo!=null) {
						if(this.jInternalFrameDetalleFormDetalleActivoFijo.jComboBoxid_estado_activo_fijoDetalleActivoFijo.getItemCount()>0) {
							this.jInternalFrameDetalleFormDetalleActivoFijo.jComboBoxid_estado_activo_fijoDetalleActivoFijo.setSelectedIndex(0);
						}
					}
				}
			}

			if(conCombosBusquedas) {

		//BYDAN_BUSQUEDAS
						
				if(sFormularioTipoBusqueda.equals("FK_IdEstadoActivoFijo") || sFormularioTipoBusqueda.equals("Todos")){
					if(estadoactivofijoTemp!=null && jComboBoxid_estado_activo_fijoFK_IdEstadoActivoFijoDetalleActivoFijo!=null) {
						jComboBoxid_estado_activo_fijoFK_IdEstadoActivoFijoDetalleActivoFijo.setSelectedItem(estadoactivofijoTemp);
					} else {
						if(jComboBoxid_estado_activo_fijoFK_IdEstadoActivoFijoDetalleActivoFijo!=null) {
							//jComboBoxid_estado_activo_fijoFK_IdEstadoActivoFijoDetalleActivoFijo.setSelectedItem(estadoactivofijoTemp);
							if(jComboBoxid_estado_activo_fijoFK_IdEstadoActivoFijoDetalleActivoFijo.getItemCount()>0) {
								jComboBoxid_estado_activo_fijoFK_IdEstadoActivoFijoDetalleActivoFijo.setSelectedIndex(0);
							}
						}
					}
				}

					}

		}
		catch(Exception e)
		{
			throw e;
		}
	}

	public String getActualEstadoActivoFijoForeignKeyDescripcion(Long idEstadoActivoFijoSeleccionado)throws Exception
	{
		String sDescripcion="";

		try
		{
			EstadoActivoFijo  estadoactivofijoTemp=null;

			for(EstadoActivoFijo estadoactivofijoAux:estadoactivofijosForeignKey) {
				if(estadoactivofijoAux.getId()!=null && estadoactivofijoAux.getId().equals(idEstadoActivoFijoSeleccionado)) {
					estadoactivofijoTemp=estadoactivofijoAux;
					break;
				}
			}


			sDescripcion=EstadoActivoFijoConstantesFunciones.getEstadoActivoFijoDescripcion(estadoactivofijoTemp);
		}
		catch(Exception e)
		{
			throw e;
		}

		return sDescripcion;
	}

	@SuppressWarnings("rawtypes")
	public void setActualEstadoActivoFijoForeignKeyGenerico(Long idEstadoActivoFijoSeleccionado,JComboBox jComboBoxid_estado_activo_fijoDetalleActivoFijoGenerico)throws Exception
	{
		try
		{
			EstadoActivoFijo  estadoactivofijoTemp=null;

			for(EstadoActivoFijo estadoactivofijoAux:estadoactivofijosForeignKey) {
				if(estadoactivofijoAux.getId()!=null && estadoactivofijoAux.getId().equals(idEstadoActivoFijoSeleccionado)) {
					estadoactivofijoTemp=estadoactivofijoAux;
					break;
				}
			}

			if(estadoactivofijoTemp!=null) {
				jComboBoxid_estado_activo_fijoDetalleActivoFijoGenerico.setSelectedItem(estadoactivofijoTemp);
			} else {
				if(jComboBoxid_estado_activo_fijoDetalleActivoFijoGenerico!=null && jComboBoxid_estado_activo_fijoDetalleActivoFijoGenerico.getItemCount()>0) {
					jComboBoxid_estado_activo_fijoDetalleActivoFijoGenerico.setSelectedIndex(0);
				}
			}

		}
		catch(Exception e)
		{
			throw e;
		}

	}

	public void setActualClienteForeignKey(Long idClienteSeleccionado,Boolean conCombosBusquedas,String sFormularioTipoBusqueda)throws Exception
	{
		try
		{
			Cliente  clienteTemp=null;

			for(Cliente clienteAux:clientesForeignKey) {
				if(clienteAux.getId()!=null && clienteAux.getId().equals(idClienteSeleccionado)) {
					clienteTemp=clienteAux;
					break;
				}
			}

			if(sFormularioTipoBusqueda.equals("Formulario") || sFormularioTipoBusqueda.equals("Todos")){
				if(clienteTemp!=null) {

					if(this.detalleactivofijo!=null) {
						this.detalleactivofijo.setCliente(clienteTemp);
					}

					if(this.jInternalFrameDetalleFormDetalleActivoFijo!=null) {
						this.jInternalFrameDetalleFormDetalleActivoFijo.jComboBoxid_clienteDetalleActivoFijo.setSelectedItem(clienteTemp);
					}
				} else {
					//jComboBoxid_clienteDetalleActivoFijo.setSelectedItem(clienteTemp);
					if(this.jInternalFrameDetalleFormDetalleActivoFijo!=null) {
						if(this.jInternalFrameDetalleFormDetalleActivoFijo.jComboBoxid_clienteDetalleActivoFijo.getItemCount()>0) {
							this.jInternalFrameDetalleFormDetalleActivoFijo.jComboBoxid_clienteDetalleActivoFijo.setSelectedIndex(0);
						}
					}
				}
			}

			if(conCombosBusquedas) {

		//BYDAN_BUSQUEDAS
						
				if(sFormularioTipoBusqueda.equals("FK_IdCliente") || sFormularioTipoBusqueda.equals("Todos")){
					if(clienteTemp!=null && jComboBoxid_clienteFK_IdClienteDetalleActivoFijo!=null) {
						jComboBoxid_clienteFK_IdClienteDetalleActivoFijo.setSelectedItem(clienteTemp);
					} else {
						if(jComboBoxid_clienteFK_IdClienteDetalleActivoFijo!=null) {
							//jComboBoxid_clienteFK_IdClienteDetalleActivoFijo.setSelectedItem(clienteTemp);
							if(jComboBoxid_clienteFK_IdClienteDetalleActivoFijo.getItemCount()>0) {
								jComboBoxid_clienteFK_IdClienteDetalleActivoFijo.setSelectedIndex(0);
							}
						}
					}
				}

					}

		}
		catch(Exception e)
		{
			throw e;
		}
	}

	public String getActualClienteForeignKeyDescripcion(Long idClienteSeleccionado)throws Exception
	{
		String sDescripcion="";

		try
		{
			Cliente  clienteTemp=null;

			for(Cliente clienteAux:clientesForeignKey) {
				if(clienteAux.getId()!=null && clienteAux.getId().equals(idClienteSeleccionado)) {
					clienteTemp=clienteAux;
					break;
				}
			}


			sDescripcion=ClienteConstantesFunciones.getClienteDescripcion(clienteTemp);
		}
		catch(Exception e)
		{
			throw e;
		}

		return sDescripcion;
	}

	@SuppressWarnings("rawtypes")
	public void setActualClienteForeignKeyGenerico(Long idClienteSeleccionado,JComboBox jComboBoxid_clienteDetalleActivoFijoGenerico)throws Exception
	{
		try
		{
			Cliente  clienteTemp=null;

			for(Cliente clienteAux:clientesForeignKey) {
				if(clienteAux.getId()!=null && clienteAux.getId().equals(idClienteSeleccionado)) {
					clienteTemp=clienteAux;
					break;
				}
			}

			if(clienteTemp!=null) {
				jComboBoxid_clienteDetalleActivoFijoGenerico.setSelectedItem(clienteTemp);
			} else {
				if(jComboBoxid_clienteDetalleActivoFijoGenerico!=null && jComboBoxid_clienteDetalleActivoFijoGenerico.getItemCount()>0) {
					jComboBoxid_clienteDetalleActivoFijoGenerico.setSelectedIndex(0);
				}
			}

		}
		catch(Exception e)
		{
			throw e;
		}

	}

	public void setActualPartidaPresuForeignKey(Long idPartidaPresuSeleccionado,Boolean conCombosBusquedas,String sFormularioTipoBusqueda)throws Exception
	{
		try
		{
			PartidaPresu  partidapresuTemp=null;

			for(PartidaPresu partidapresuAux:partidapresusForeignKey) {
				if(partidapresuAux.getId()!=null && partidapresuAux.getId().equals(idPartidaPresuSeleccionado)) {
					partidapresuTemp=partidapresuAux;
					break;
				}
			}

			if(sFormularioTipoBusqueda.equals("Formulario") || sFormularioTipoBusqueda.equals("Todos")){
				if(partidapresuTemp!=null) {

					if(this.detalleactivofijo!=null) {
						this.detalleactivofijo.setPartidaPresu(partidapresuTemp);
					}

					if(this.jInternalFrameDetalleFormDetalleActivoFijo!=null) {
						this.jInternalFrameDetalleFormDetalleActivoFijo.jComboBoxid_partida_presuDetalleActivoFijo.setSelectedItem(partidapresuTemp);
					}
				} else {
					//jComboBoxid_partida_presuDetalleActivoFijo.setSelectedItem(partidapresuTemp);
					if(this.jInternalFrameDetalleFormDetalleActivoFijo!=null) {
						if(this.jInternalFrameDetalleFormDetalleActivoFijo.jComboBoxid_partida_presuDetalleActivoFijo.getItemCount()>0) {
							this.jInternalFrameDetalleFormDetalleActivoFijo.jComboBoxid_partida_presuDetalleActivoFijo.setSelectedIndex(0);
						}
					}
				}
			}

			if(conCombosBusquedas) {

		//BYDAN_BUSQUEDAS
						
				if(sFormularioTipoBusqueda.equals("FK_IdPartidaPresu") || sFormularioTipoBusqueda.equals("Todos")){
					if(partidapresuTemp!=null && jComboBoxid_partida_presuFK_IdPartidaPresuDetalleActivoFijo!=null) {
						jComboBoxid_partida_presuFK_IdPartidaPresuDetalleActivoFijo.setSelectedItem(partidapresuTemp);
					} else {
						if(jComboBoxid_partida_presuFK_IdPartidaPresuDetalleActivoFijo!=null) {
							//jComboBoxid_partida_presuFK_IdPartidaPresuDetalleActivoFijo.setSelectedItem(partidapresuTemp);
							if(jComboBoxid_partida_presuFK_IdPartidaPresuDetalleActivoFijo.getItemCount()>0) {
								jComboBoxid_partida_presuFK_IdPartidaPresuDetalleActivoFijo.setSelectedIndex(0);
							}
						}
					}
				}

					}

		}
		catch(Exception e)
		{
			throw e;
		}
	}

	public String getActualPartidaPresuForeignKeyDescripcion(Long idPartidaPresuSeleccionado)throws Exception
	{
		String sDescripcion="";

		try
		{
			PartidaPresu  partidapresuTemp=null;

			for(PartidaPresu partidapresuAux:partidapresusForeignKey) {
				if(partidapresuAux.getId()!=null && partidapresuAux.getId().equals(idPartidaPresuSeleccionado)) {
					partidapresuTemp=partidapresuAux;
					break;
				}
			}


			sDescripcion=PartidaPresuConstantesFunciones.getPartidaPresuDescripcion(partidapresuTemp);
		}
		catch(Exception e)
		{
			throw e;
		}

		return sDescripcion;
	}

	@SuppressWarnings("rawtypes")
	public void setActualPartidaPresuForeignKeyGenerico(Long idPartidaPresuSeleccionado,JComboBox jComboBoxid_partida_presuDetalleActivoFijoGenerico)throws Exception
	{
		try
		{
			PartidaPresu  partidapresuTemp=null;

			for(PartidaPresu partidapresuAux:partidapresusForeignKey) {
				if(partidapresuAux.getId()!=null && partidapresuAux.getId().equals(idPartidaPresuSeleccionado)) {
					partidapresuTemp=partidapresuAux;
					break;
				}
			}

			if(partidapresuTemp!=null) {
				jComboBoxid_partida_presuDetalleActivoFijoGenerico.setSelectedItem(partidapresuTemp);
			} else {
				if(jComboBoxid_partida_presuDetalleActivoFijoGenerico!=null && jComboBoxid_partida_presuDetalleActivoFijoGenerico.getItemCount()>0) {
					jComboBoxid_partida_presuDetalleActivoFijoGenerico.setSelectedIndex(0);
				}
			}

		}
		catch(Exception e)
		{
			throw e;
		}

	}

	
	
	@SuppressWarnings("rawtypes")
	public void setActualParaGuardarEmpresaForeignKey(DetalleActivoFijo detalleactivofijo,JComboBox jComboBoxid_empresaDetalleActivoFijoGenerico)throws Exception
	{
		try
		{
			Empresa  empresaAux=new Empresa();

			if(jComboBoxid_empresaDetalleActivoFijoGenerico==null) {
				empresaAux=(Empresa)this.jInternalFrameDetalleFormDetalleActivoFijo.jComboBoxid_empresaDetalleActivoFijo.getSelectedItem();
			} else {
				empresaAux=(Empresa)jComboBoxid_empresaDetalleActivoFijoGenerico.getSelectedItem();
			}

			if(empresaAux!=null && empresaAux.getId()!=null) {
				detalleactivofijo.setid_empresa(empresaAux.getId());
				detalleactivofijo.setempresa_descripcion(DetalleActivoFijoConstantesFunciones.getEmpresaDescripcion(empresaAux));
				detalleactivofijo.setEmpresa(empresaAux);			}
		}
		catch(Exception e)
		{
			throw e;
		}
	}

	@SuppressWarnings("rawtypes")
	public void setActualParaGuardarSucursalForeignKey(DetalleActivoFijo detalleactivofijo,JComboBox jComboBoxid_sucursalDetalleActivoFijoGenerico)throws Exception
	{
		try
		{
			Sucursal  sucursalAux=new Sucursal();

			if(jComboBoxid_sucursalDetalleActivoFijoGenerico==null) {
				sucursalAux=(Sucursal)this.jInternalFrameDetalleFormDetalleActivoFijo.jComboBoxid_sucursalDetalleActivoFijo.getSelectedItem();
			} else {
				sucursalAux=(Sucursal)jComboBoxid_sucursalDetalleActivoFijoGenerico.getSelectedItem();
			}

			if(sucursalAux!=null && sucursalAux.getId()!=null) {
				detalleactivofijo.setid_sucursal(sucursalAux.getId());
				detalleactivofijo.setsucursal_descripcion(DetalleActivoFijoConstantesFunciones.getSucursalDescripcion(sucursalAux));
				detalleactivofijo.setSucursal(sucursalAux);			}
		}
		catch(Exception e)
		{
			throw e;
		}
	}

	@SuppressWarnings("rawtypes")
	public void setActualParaGuardarDetalleGrupoActivoFijoForeignKey(DetalleActivoFijo detalleactivofijo,JComboBox jComboBoxid_detalle_grupo_activo_fijoDetalleActivoFijoGenerico)throws Exception
	{
		try
		{
			DetalleGrupoActivoFijo  detallegrupoactivofijoAux=new DetalleGrupoActivoFijo();

			if(jComboBoxid_detalle_grupo_activo_fijoDetalleActivoFijoGenerico==null) {
				detallegrupoactivofijoAux=(DetalleGrupoActivoFijo)this.jInternalFrameDetalleFormDetalleActivoFijo.jComboBoxid_detalle_grupo_activo_fijoDetalleActivoFijo.getSelectedItem();
			} else {
				detallegrupoactivofijoAux=(DetalleGrupoActivoFijo)jComboBoxid_detalle_grupo_activo_fijoDetalleActivoFijoGenerico.getSelectedItem();
			}

			if(detallegrupoactivofijoAux!=null && detallegrupoactivofijoAux.getId()!=null) {
				detalleactivofijo.setid_detalle_grupo_activo_fijo(detallegrupoactivofijoAux.getId());
				detalleactivofijo.setdetallegrupoactivofijo_descripcion(DetalleActivoFijoConstantesFunciones.getDetalleGrupoActivoFijoDescripcion(detallegrupoactivofijoAux));
				detalleactivofijo.setDetalleGrupoActivoFijo(detallegrupoactivofijoAux);			}
		}
		catch(Exception e)
		{
			throw e;
		}
	}

	@SuppressWarnings("rawtypes")
	public void setActualParaGuardarSubGrupoActivoFijoForeignKey(DetalleActivoFijo detalleactivofijo,JComboBox jComboBoxid_sub_grupo_activo_fijoDetalleActivoFijoGenerico)throws Exception
	{
		try
		{
			SubGrupoActivoFijo  subgrupoactivofijoAux=new SubGrupoActivoFijo();

			if(jComboBoxid_sub_grupo_activo_fijoDetalleActivoFijoGenerico==null) {
				subgrupoactivofijoAux=(SubGrupoActivoFijo)this.jInternalFrameDetalleFormDetalleActivoFijo.jComboBoxid_sub_grupo_activo_fijoDetalleActivoFijo.getSelectedItem();
			} else {
				subgrupoactivofijoAux=(SubGrupoActivoFijo)jComboBoxid_sub_grupo_activo_fijoDetalleActivoFijoGenerico.getSelectedItem();
			}

			if(subgrupoactivofijoAux!=null && subgrupoactivofijoAux.getId()!=null) {
				detalleactivofijo.setid_sub_grupo_activo_fijo(subgrupoactivofijoAux.getId());
				detalleactivofijo.setsubgrupoactivofijo_descripcion(DetalleActivoFijoConstantesFunciones.getSubGrupoActivoFijoDescripcion(subgrupoactivofijoAux));
				detalleactivofijo.setSubGrupoActivoFijo(subgrupoactivofijoAux);			}
		}
		catch(Exception e)
		{
			throw e;
		}
	}

	@SuppressWarnings("rawtypes")
	public void setActualParaGuardarTipoRamoActivoFijoForeignKey(DetalleActivoFijo detalleactivofijo,JComboBox jComboBoxid_tipo_ramo_activo_fijoDetalleActivoFijoGenerico)throws Exception
	{
		try
		{
			TipoRamoActivoFijo  tiporamoactivofijoAux=new TipoRamoActivoFijo();

			if(jComboBoxid_tipo_ramo_activo_fijoDetalleActivoFijoGenerico==null) {
				tiporamoactivofijoAux=(TipoRamoActivoFijo)this.jInternalFrameDetalleFormDetalleActivoFijo.jComboBoxid_tipo_ramo_activo_fijoDetalleActivoFijo.getSelectedItem();
			} else {
				tiporamoactivofijoAux=(TipoRamoActivoFijo)jComboBoxid_tipo_ramo_activo_fijoDetalleActivoFijoGenerico.getSelectedItem();
			}

			if(tiporamoactivofijoAux!=null && tiporamoactivofijoAux.getId()!=null) {
				detalleactivofijo.setid_tipo_ramo_activo_fijo(tiporamoactivofijoAux.getId());
				detalleactivofijo.settiporamoactivofijo_descripcion(DetalleActivoFijoConstantesFunciones.getTipoRamoActivoFijoDescripcion(tiporamoactivofijoAux));
				detalleactivofijo.setTipoRamoActivoFijo(tiporamoactivofijoAux);			}
		}
		catch(Exception e)
		{
			throw e;
		}
	}

	@SuppressWarnings("rawtypes")
	public void setActualParaGuardarTipoActivoFijoEmpresaForeignKey(DetalleActivoFijo detalleactivofijo,JComboBox jComboBoxid_tipo_activo_fijo_empresaDetalleActivoFijoGenerico)throws Exception
	{
		try
		{
			TipoActivoFijoEmpresa  tipoactivofijoempresaAux=new TipoActivoFijoEmpresa();

			if(jComboBoxid_tipo_activo_fijo_empresaDetalleActivoFijoGenerico==null) {
				tipoactivofijoempresaAux=(TipoActivoFijoEmpresa)this.jInternalFrameDetalleFormDetalleActivoFijo.jComboBoxid_tipo_activo_fijo_empresaDetalleActivoFijo.getSelectedItem();
			} else {
				tipoactivofijoempresaAux=(TipoActivoFijoEmpresa)jComboBoxid_tipo_activo_fijo_empresaDetalleActivoFijoGenerico.getSelectedItem();
			}

			if(tipoactivofijoempresaAux!=null && tipoactivofijoempresaAux.getId()!=null) {
				detalleactivofijo.setid_tipo_activo_fijo_empresa(tipoactivofijoempresaAux.getId());
				detalleactivofijo.settipoactivofijoempresa_descripcion(DetalleActivoFijoConstantesFunciones.getTipoActivoFijoEmpresaDescripcion(tipoactivofijoempresaAux));
				detalleactivofijo.setTipoActivoFijoEmpresa(tipoactivofijoempresaAux);			}
		}
		catch(Exception e)
		{
			throw e;
		}
	}

	@SuppressWarnings("rawtypes")
	public void setActualParaGuardarTipoDepreciacionEmpresaForeignKey(DetalleActivoFijo detalleactivofijo,JComboBox jComboBoxid_tipo_depreciacion_empresaDetalleActivoFijoGenerico)throws Exception
	{
		try
		{
			TipoDepreciacionEmpresa  tipodepreciacionempresaAux=new TipoDepreciacionEmpresa();

			if(jComboBoxid_tipo_depreciacion_empresaDetalleActivoFijoGenerico==null) {
				tipodepreciacionempresaAux=(TipoDepreciacionEmpresa)this.jInternalFrameDetalleFormDetalleActivoFijo.jComboBoxid_tipo_depreciacion_empresaDetalleActivoFijo.getSelectedItem();
			} else {
				tipodepreciacionempresaAux=(TipoDepreciacionEmpresa)jComboBoxid_tipo_depreciacion_empresaDetalleActivoFijoGenerico.getSelectedItem();
			}

			if(tipodepreciacionempresaAux!=null && tipodepreciacionempresaAux.getId()!=null) {
				detalleactivofijo.setid_tipo_depreciacion_empresa(tipodepreciacionempresaAux.getId());
				detalleactivofijo.settipodepreciacionempresa_descripcion(DetalleActivoFijoConstantesFunciones.getTipoDepreciacionEmpresaDescripcion(tipodepreciacionempresaAux));
				detalleactivofijo.setTipoDepreciacionEmpresa(tipodepreciacionempresaAux);			}
		}
		catch(Exception e)
		{
			throw e;
		}
	}

	@SuppressWarnings("rawtypes")
	public void setActualParaGuardarEstadoActivoFijoForeignKey(DetalleActivoFijo detalleactivofijo,JComboBox jComboBoxid_estado_activo_fijoDetalleActivoFijoGenerico)throws Exception
	{
		try
		{
			EstadoActivoFijo  estadoactivofijoAux=new EstadoActivoFijo();

			if(jComboBoxid_estado_activo_fijoDetalleActivoFijoGenerico==null) {
				estadoactivofijoAux=(EstadoActivoFijo)this.jInternalFrameDetalleFormDetalleActivoFijo.jComboBoxid_estado_activo_fijoDetalleActivoFijo.getSelectedItem();
			} else {
				estadoactivofijoAux=(EstadoActivoFijo)jComboBoxid_estado_activo_fijoDetalleActivoFijoGenerico.getSelectedItem();
			}

			if(estadoactivofijoAux!=null && estadoactivofijoAux.getId()!=null) {
				detalleactivofijo.setid_estado_activo_fijo(estadoactivofijoAux.getId());
				detalleactivofijo.setestadoactivofijo_descripcion(DetalleActivoFijoConstantesFunciones.getEstadoActivoFijoDescripcion(estadoactivofijoAux));
				detalleactivofijo.setEstadoActivoFijo(estadoactivofijoAux);			}
		}
		catch(Exception e)
		{
			throw e;
		}
	}

	@SuppressWarnings("rawtypes")
	public void setActualParaGuardarClienteForeignKey(DetalleActivoFijo detalleactivofijo,JComboBox jComboBoxid_clienteDetalleActivoFijoGenerico)throws Exception
	{
		try
		{
			Cliente  clienteAux=new Cliente();

			if(jComboBoxid_clienteDetalleActivoFijoGenerico==null) {
				clienteAux=(Cliente)this.jInternalFrameDetalleFormDetalleActivoFijo.jComboBoxid_clienteDetalleActivoFijo.getSelectedItem();
			} else {
				clienteAux=(Cliente)jComboBoxid_clienteDetalleActivoFijoGenerico.getSelectedItem();
			}

			if(clienteAux!=null && clienteAux.getId()!=null) {
				detalleactivofijo.setid_cliente(clienteAux.getId());
				detalleactivofijo.setcliente_descripcion(DetalleActivoFijoConstantesFunciones.getClienteDescripcion(clienteAux));
				detalleactivofijo.setCliente(clienteAux);			}
		}
		catch(Exception e)
		{
			throw e;
		}
	}

	@SuppressWarnings("rawtypes")
	public void setActualParaGuardarPartidaPresuForeignKey(DetalleActivoFijo detalleactivofijo,JComboBox jComboBoxid_partida_presuDetalleActivoFijoGenerico)throws Exception
	{
		try
		{
			PartidaPresu  partidapresuAux=new PartidaPresu();

			if(jComboBoxid_partida_presuDetalleActivoFijoGenerico==null) {
				partidapresuAux=(PartidaPresu)this.jInternalFrameDetalleFormDetalleActivoFijo.jComboBoxid_partida_presuDetalleActivoFijo.getSelectedItem();
			} else {
				partidapresuAux=(PartidaPresu)jComboBoxid_partida_presuDetalleActivoFijoGenerico.getSelectedItem();
			}

			if(partidapresuAux!=null && partidapresuAux.getId()!=null) {
				detalleactivofijo.setid_partida_presu(partidapresuAux.getId());
				detalleactivofijo.setpartidapresu_descripcion(DetalleActivoFijoConstantesFunciones.getPartidaPresuDescripcion(partidapresuAux));
				detalleactivofijo.setPartidaPresu(partidapresuAux);			}
		}
		catch(Exception e)
		{
			throw e;
		}
	}

	
	


		@SuppressWarnings({ "unchecked", "rawtypes" })
		public void cargarCombosFrameEmpresasForeignKey(String sFormularioTipoBusqueda)throws Exception {
			try {

				JComboBoxBinding jComboBoxBindingEmpresa=null;

				if(sFormularioTipoBusqueda.equals("Formulario") || sFormularioTipoBusqueda.equals("Todos")){

					if(!DetalleActivoFijoJInternalFrame.ISBINDING_MANUAL) {
					} else {
						if(this.jInternalFrameDetalleFormDetalleActivoFijo!=null) { 
							this.jInternalFrameDetalleFormDetalleActivoFijo.jComboBoxid_empresaDetalleActivoFijo.removeAllItems();

							for(Empresa empresa:this.empresasForeignKey) {
								this.jInternalFrameDetalleFormDetalleActivoFijo.jComboBoxid_empresaDetalleActivoFijo.addItem(empresa);
							}
						}
					}

					if(this.jInternalFrameDetalleFormDetalleActivoFijo!=null) { 
					}

					if(!DetalleActivoFijoJInternalFrame.ISBINDING_MANUAL) {
					}
				}


				if(!this.conCargarMinimo) {


				}

			}  catch(Exception e) {
				throw e;
			}
		}

		@SuppressWarnings({ "unchecked", "rawtypes" })
		public void cargarCombosFrameSucursalsForeignKey(String sFormularioTipoBusqueda)throws Exception {
			try {

				JComboBoxBinding jComboBoxBindingSucursal=null;

				if(sFormularioTipoBusqueda.equals("Formulario") || sFormularioTipoBusqueda.equals("Todos")){

					if(!DetalleActivoFijoJInternalFrame.ISBINDING_MANUAL) {
					} else {
						if(this.jInternalFrameDetalleFormDetalleActivoFijo!=null) { 
							this.jInternalFrameDetalleFormDetalleActivoFijo.jComboBoxid_sucursalDetalleActivoFijo.removeAllItems();

							for(Sucursal sucursal:this.sucursalsForeignKey) {
								this.jInternalFrameDetalleFormDetalleActivoFijo.jComboBoxid_sucursalDetalleActivoFijo.addItem(sucursal);
							}
						}
					}

					if(this.jInternalFrameDetalleFormDetalleActivoFijo!=null) { 
					}

					if(!DetalleActivoFijoJInternalFrame.ISBINDING_MANUAL) {
					}
				}


				if(!this.conCargarMinimo) {


				}

			}  catch(Exception e) {
				throw e;
			}
		}

		@SuppressWarnings({ "unchecked", "rawtypes" })
		public void cargarCombosFrameDetalleGrupoActivoFijosForeignKey(String sFormularioTipoBusqueda)throws Exception {
			try {

				JComboBoxBinding jComboBoxBindingDetalleGrupoActivoFijo=null;

				if(sFormularioTipoBusqueda.equals("Formulario") || sFormularioTipoBusqueda.equals("Todos")){

					if(!DetalleActivoFijoJInternalFrame.ISBINDING_MANUAL) {
					} else {
						if(this.jInternalFrameDetalleFormDetalleActivoFijo!=null) { 
							this.jInternalFrameDetalleFormDetalleActivoFijo.jComboBoxid_detalle_grupo_activo_fijoDetalleActivoFijo.removeAllItems();

							for(DetalleGrupoActivoFijo detallegrupoactivofijo:this.detallegrupoactivofijosForeignKey) {
								this.jInternalFrameDetalleFormDetalleActivoFijo.jComboBoxid_detalle_grupo_activo_fijoDetalleActivoFijo.addItem(detallegrupoactivofijo);
							}
						}
					}

					if(this.jInternalFrameDetalleFormDetalleActivoFijo!=null) { 
					}

					if(!DetalleActivoFijoJInternalFrame.ISBINDING_MANUAL) {
					}
				}


				if(!this.conCargarMinimo) {

					if(sFormularioTipoBusqueda.equals("FK_IdDetalleGrupoActivoFijo") || sFormularioTipoBusqueda.equals("Todos")){

						//BYDAN_BUSQUEDAS
						
						if(!DetalleActivoFijoJInternalFrame.ISBINDING_MANUAL) {
						} else {
							this.jComboBoxid_detalle_grupo_activo_fijoFK_IdDetalleGrupoActivoFijoDetalleActivoFijo.removeAllItems();

							for(DetalleGrupoActivoFijo detallegrupoactivofijo:this.detallegrupoactivofijosForeignKey) {
								this.jComboBoxid_detalle_grupo_activo_fijoFK_IdDetalleGrupoActivoFijoDetalleActivoFijo.addItem(detallegrupoactivofijo);
							}
						}

						if(!DetalleActivoFijoJInternalFrame.ISBINDING_MANUAL) {
						}

						
					}

				}

			}  catch(Exception e) {
				throw e;
			}
		}

		@SuppressWarnings({ "unchecked", "rawtypes" })
		public void cargarCombosFrameSubGrupoActivoFijosForeignKey(String sFormularioTipoBusqueda)throws Exception {
			try {

				JComboBoxBinding jComboBoxBindingSubGrupoActivoFijo=null;

				if(sFormularioTipoBusqueda.equals("Formulario") || sFormularioTipoBusqueda.equals("Todos")){

					if(!DetalleActivoFijoJInternalFrame.ISBINDING_MANUAL) {
					} else {
						if(this.jInternalFrameDetalleFormDetalleActivoFijo!=null) { 
							this.jInternalFrameDetalleFormDetalleActivoFijo.jComboBoxid_sub_grupo_activo_fijoDetalleActivoFijo.removeAllItems();

							for(SubGrupoActivoFijo subgrupoactivofijo:this.subgrupoactivofijosForeignKey) {
								this.jInternalFrameDetalleFormDetalleActivoFijo.jComboBoxid_sub_grupo_activo_fijoDetalleActivoFijo.addItem(subgrupoactivofijo);
							}
						}
					}

					if(this.jInternalFrameDetalleFormDetalleActivoFijo!=null) { 
					}

					if(!DetalleActivoFijoJInternalFrame.ISBINDING_MANUAL) {
					}
				}


				if(!this.conCargarMinimo) {

					if(sFormularioTipoBusqueda.equals("FK_IdSubGrupoActivoFijo") || sFormularioTipoBusqueda.equals("Todos")){

						//BYDAN_BUSQUEDAS
						
						if(!DetalleActivoFijoJInternalFrame.ISBINDING_MANUAL) {
						} else {
							this.jComboBoxid_sub_grupo_activo_fijoFK_IdSubGrupoActivoFijoDetalleActivoFijo.removeAllItems();

							for(SubGrupoActivoFijo subgrupoactivofijo:this.subgrupoactivofijosForeignKey) {
								this.jComboBoxid_sub_grupo_activo_fijoFK_IdSubGrupoActivoFijoDetalleActivoFijo.addItem(subgrupoactivofijo);
							}
						}

						if(!DetalleActivoFijoJInternalFrame.ISBINDING_MANUAL) {
						}

						
					}

				}

			}  catch(Exception e) {
				throw e;
			}
		}

		@SuppressWarnings({ "unchecked", "rawtypes" })
		public void cargarCombosFrameTipoRamoActivoFijosForeignKey(String sFormularioTipoBusqueda)throws Exception {
			try {

				JComboBoxBinding jComboBoxBindingTipoRamoActivoFijo=null;

				if(sFormularioTipoBusqueda.equals("Formulario") || sFormularioTipoBusqueda.equals("Todos")){

					if(!DetalleActivoFijoJInternalFrame.ISBINDING_MANUAL) {
					} else {
						if(this.jInternalFrameDetalleFormDetalleActivoFijo!=null) { 
							this.jInternalFrameDetalleFormDetalleActivoFijo.jComboBoxid_tipo_ramo_activo_fijoDetalleActivoFijo.removeAllItems();

							for(TipoRamoActivoFijo tiporamoactivofijo:this.tiporamoactivofijosForeignKey) {
								this.jInternalFrameDetalleFormDetalleActivoFijo.jComboBoxid_tipo_ramo_activo_fijoDetalleActivoFijo.addItem(tiporamoactivofijo);
							}
						}
					}

					if(this.jInternalFrameDetalleFormDetalleActivoFijo!=null) { 
					}

					if(!DetalleActivoFijoJInternalFrame.ISBINDING_MANUAL) {
					}
				}


				if(!this.conCargarMinimo) {

					if(sFormularioTipoBusqueda.equals("FK_IdTipoRamoActivoFijo") || sFormularioTipoBusqueda.equals("Todos")){

						//BYDAN_BUSQUEDAS
						
						if(!DetalleActivoFijoJInternalFrame.ISBINDING_MANUAL) {
						} else {
							this.jComboBoxid_tipo_ramo_activo_fijoFK_IdTipoRamoActivoFijoDetalleActivoFijo.removeAllItems();

							for(TipoRamoActivoFijo tiporamoactivofijo:this.tiporamoactivofijosForeignKey) {
								this.jComboBoxid_tipo_ramo_activo_fijoFK_IdTipoRamoActivoFijoDetalleActivoFijo.addItem(tiporamoactivofijo);
							}
						}

						if(!DetalleActivoFijoJInternalFrame.ISBINDING_MANUAL) {
						}

						
					}

				}

			}  catch(Exception e) {
				throw e;
			}
		}

		@SuppressWarnings({ "unchecked", "rawtypes" })
		public void cargarCombosFrameTipoActivoFijoEmpresasForeignKey(String sFormularioTipoBusqueda)throws Exception {
			try {

				JComboBoxBinding jComboBoxBindingTipoActivoFijoEmpresa=null;

				if(sFormularioTipoBusqueda.equals("Formulario") || sFormularioTipoBusqueda.equals("Todos")){

					if(!DetalleActivoFijoJInternalFrame.ISBINDING_MANUAL) {
					} else {
						if(this.jInternalFrameDetalleFormDetalleActivoFijo!=null) { 
							this.jInternalFrameDetalleFormDetalleActivoFijo.jComboBoxid_tipo_activo_fijo_empresaDetalleActivoFijo.removeAllItems();

							for(TipoActivoFijoEmpresa tipoactivofijoempresa:this.tipoactivofijoempresasForeignKey) {
								this.jInternalFrameDetalleFormDetalleActivoFijo.jComboBoxid_tipo_activo_fijo_empresaDetalleActivoFijo.addItem(tipoactivofijoempresa);
							}
						}
					}

					if(this.jInternalFrameDetalleFormDetalleActivoFijo!=null) { 
					}

					if(!DetalleActivoFijoJInternalFrame.ISBINDING_MANUAL) {
					}
				}


				if(!this.conCargarMinimo) {

					if(sFormularioTipoBusqueda.equals("FK_IdTipoActivoFijoEmpresa") || sFormularioTipoBusqueda.equals("Todos")){

						//BYDAN_BUSQUEDAS
						
						if(!DetalleActivoFijoJInternalFrame.ISBINDING_MANUAL) {
						} else {
							this.jComboBoxid_tipo_activo_fijo_empresaFK_IdTipoActivoFijoEmpresaDetalleActivoFijo.removeAllItems();

							for(TipoActivoFijoEmpresa tipoactivofijoempresa:this.tipoactivofijoempresasForeignKey) {
								this.jComboBoxid_tipo_activo_fijo_empresaFK_IdTipoActivoFijoEmpresaDetalleActivoFijo.addItem(tipoactivofijoempresa);
							}
						}

						if(!DetalleActivoFijoJInternalFrame.ISBINDING_MANUAL) {
						}

						
					}

				}

			}  catch(Exception e) {
				throw e;
			}
		}

		@SuppressWarnings({ "unchecked", "rawtypes" })
		public void cargarCombosFrameTipoDepreciacionEmpresasForeignKey(String sFormularioTipoBusqueda)throws Exception {
			try {

				JComboBoxBinding jComboBoxBindingTipoDepreciacionEmpresa=null;

				if(sFormularioTipoBusqueda.equals("Formulario") || sFormularioTipoBusqueda.equals("Todos")){

					if(!DetalleActivoFijoJInternalFrame.ISBINDING_MANUAL) {
					} else {
						if(this.jInternalFrameDetalleFormDetalleActivoFijo!=null) { 
							this.jInternalFrameDetalleFormDetalleActivoFijo.jComboBoxid_tipo_depreciacion_empresaDetalleActivoFijo.removeAllItems();

							for(TipoDepreciacionEmpresa tipodepreciacionempresa:this.tipodepreciacionempresasForeignKey) {
								this.jInternalFrameDetalleFormDetalleActivoFijo.jComboBoxid_tipo_depreciacion_empresaDetalleActivoFijo.addItem(tipodepreciacionempresa);
							}
						}
					}

					if(this.jInternalFrameDetalleFormDetalleActivoFijo!=null) { 
					}

					if(!DetalleActivoFijoJInternalFrame.ISBINDING_MANUAL) {
					}
				}


				if(!this.conCargarMinimo) {

					if(sFormularioTipoBusqueda.equals("FK_IdTipoDepreciacionEmpresa") || sFormularioTipoBusqueda.equals("Todos")){

						//BYDAN_BUSQUEDAS
						
						if(!DetalleActivoFijoJInternalFrame.ISBINDING_MANUAL) {
						} else {
							this.jComboBoxid_tipo_depreciacion_empresaFK_IdTipoDepreciacionEmpresaDetalleActivoFijo.removeAllItems();

							for(TipoDepreciacionEmpresa tipodepreciacionempresa:this.tipodepreciacionempresasForeignKey) {
								this.jComboBoxid_tipo_depreciacion_empresaFK_IdTipoDepreciacionEmpresaDetalleActivoFijo.addItem(tipodepreciacionempresa);
							}
						}

						if(!DetalleActivoFijoJInternalFrame.ISBINDING_MANUAL) {
						}

						
					}

				}

			}  catch(Exception e) {
				throw e;
			}
		}

		@SuppressWarnings({ "unchecked", "rawtypes" })
		public void cargarCombosFrameEstadoActivoFijosForeignKey(String sFormularioTipoBusqueda)throws Exception {
			try {

				JComboBoxBinding jComboBoxBindingEstadoActivoFijo=null;

				if(sFormularioTipoBusqueda.equals("Formulario") || sFormularioTipoBusqueda.equals("Todos")){

					if(!DetalleActivoFijoJInternalFrame.ISBINDING_MANUAL) {
					} else {
						if(this.jInternalFrameDetalleFormDetalleActivoFijo!=null) { 
							this.jInternalFrameDetalleFormDetalleActivoFijo.jComboBoxid_estado_activo_fijoDetalleActivoFijo.removeAllItems();

							for(EstadoActivoFijo estadoactivofijo:this.estadoactivofijosForeignKey) {
								this.jInternalFrameDetalleFormDetalleActivoFijo.jComboBoxid_estado_activo_fijoDetalleActivoFijo.addItem(estadoactivofijo);
							}
						}
					}

					if(this.jInternalFrameDetalleFormDetalleActivoFijo!=null) { 
					}

					if(!DetalleActivoFijoJInternalFrame.ISBINDING_MANUAL) {
					}
				}


				if(!this.conCargarMinimo) {

					if(sFormularioTipoBusqueda.equals("FK_IdEstadoActivoFijo") || sFormularioTipoBusqueda.equals("Todos")){

						//BYDAN_BUSQUEDAS
						
						if(!DetalleActivoFijoJInternalFrame.ISBINDING_MANUAL) {
						} else {
							this.jComboBoxid_estado_activo_fijoFK_IdEstadoActivoFijoDetalleActivoFijo.removeAllItems();

							for(EstadoActivoFijo estadoactivofijo:this.estadoactivofijosForeignKey) {
								this.jComboBoxid_estado_activo_fijoFK_IdEstadoActivoFijoDetalleActivoFijo.addItem(estadoactivofijo);
							}
						}

						if(!DetalleActivoFijoJInternalFrame.ISBINDING_MANUAL) {
						}

						
					}

				}

			}  catch(Exception e) {
				throw e;
			}
		}

		@SuppressWarnings({ "unchecked", "rawtypes" })
		public void cargarCombosFrameClientesForeignKey(String sFormularioTipoBusqueda)throws Exception {
			try {

				JComboBoxBinding jComboBoxBindingCliente=null;

				if(sFormularioTipoBusqueda.equals("Formulario") || sFormularioTipoBusqueda.equals("Todos")){

					if(!DetalleActivoFijoJInternalFrame.ISBINDING_MANUAL) {
					} else {
						if(this.jInternalFrameDetalleFormDetalleActivoFijo!=null) { 
							this.jInternalFrameDetalleFormDetalleActivoFijo.jComboBoxid_clienteDetalleActivoFijo.removeAllItems();

							for(Cliente cliente:this.clientesForeignKey) {
								this.jInternalFrameDetalleFormDetalleActivoFijo.jComboBoxid_clienteDetalleActivoFijo.addItem(cliente);
							}
						}
					}

					if(this.jInternalFrameDetalleFormDetalleActivoFijo!=null) { 
					}

					if(!DetalleActivoFijoJInternalFrame.ISBINDING_MANUAL) {
					}
				}


				if(!this.conCargarMinimo) {

					if(sFormularioTipoBusqueda.equals("FK_IdCliente") || sFormularioTipoBusqueda.equals("Todos")){

						//BYDAN_BUSQUEDAS
						
						if(!DetalleActivoFijoJInternalFrame.ISBINDING_MANUAL) {
						} else {
							this.jComboBoxid_clienteFK_IdClienteDetalleActivoFijo.removeAllItems();

							for(Cliente cliente:this.clientesForeignKey) {
								this.jComboBoxid_clienteFK_IdClienteDetalleActivoFijo.addItem(cliente);
							}
						}

						if(!DetalleActivoFijoJInternalFrame.ISBINDING_MANUAL) {
						}

						
					}

				}

			}  catch(Exception e) {
				throw e;
			}
		}

		@SuppressWarnings({ "unchecked", "rawtypes" })
		public void cargarCombosFramePartidaPresusForeignKey(String sFormularioTipoBusqueda)throws Exception {
			try {

				JComboBoxBinding jComboBoxBindingPartidaPresu=null;

				if(sFormularioTipoBusqueda.equals("Formulario") || sFormularioTipoBusqueda.equals("Todos")){

					if(!DetalleActivoFijoJInternalFrame.ISBINDING_MANUAL) {
					} else {
						if(this.jInternalFrameDetalleFormDetalleActivoFijo!=null) { 
							this.jInternalFrameDetalleFormDetalleActivoFijo.jComboBoxid_partida_presuDetalleActivoFijo.removeAllItems();

							for(PartidaPresu partidapresu:this.partidapresusForeignKey) {
								this.jInternalFrameDetalleFormDetalleActivoFijo.jComboBoxid_partida_presuDetalleActivoFijo.addItem(partidapresu);
							}
						}
					}

					if(this.jInternalFrameDetalleFormDetalleActivoFijo!=null) { 
					}

					if(!DetalleActivoFijoJInternalFrame.ISBINDING_MANUAL) {
					}
				}


				if(!this.conCargarMinimo) {

					if(sFormularioTipoBusqueda.equals("FK_IdPartidaPresu") || sFormularioTipoBusqueda.equals("Todos")){

						//BYDAN_BUSQUEDAS
						
						if(!DetalleActivoFijoJInternalFrame.ISBINDING_MANUAL) {
						} else {
							this.jComboBoxid_partida_presuFK_IdPartidaPresuDetalleActivoFijo.removeAllItems();

							for(PartidaPresu partidapresu:this.partidapresusForeignKey) {
								this.jComboBoxid_partida_presuFK_IdPartidaPresuDetalleActivoFijo.addItem(partidapresu);
							}
						}

						if(!DetalleActivoFijoJInternalFrame.ISBINDING_MANUAL) {
						}

						
					}

				}

			}  catch(Exception e) {
				throw e;
			}
		}

	


		public void setSelectedItemCombosFrameEmpresaForeignKey(Empresa empresa,int iIndexSelected,Boolean conSelectedIndex,Boolean conFormulario,Boolean conBusqueda)throws Exception {
			try {

				if(conFormulario) {
					if(!conSelectedIndex) {
						if(this.jInternalFrameDetalleFormDetalleActivoFijo!=null) {
							this.jInternalFrameDetalleFormDetalleActivoFijo.jComboBoxid_empresaDetalleActivoFijo.setSelectedItem(empresa);
						}
					} else {
						if(this.jInternalFrameDetalleFormDetalleActivoFijo!=null) {
							this.jInternalFrameDetalleFormDetalleActivoFijo.jComboBoxid_empresaDetalleActivoFijo.setSelectedIndex(iIndexSelected);
						}
					}
				}


				if(!this.conCargarMinimo) {
					if(conBusqueda) {

					//BYDAN_BUSQUEDAS
					

										}
				}
			} catch(Exception e) {
				throw e;
			}
		}

		public void setSelectedItemCombosFrameSucursalForeignKey(Sucursal sucursal,int iIndexSelected,Boolean conSelectedIndex,Boolean conFormulario,Boolean conBusqueda)throws Exception {
			try {

				if(conFormulario) {
					if(!conSelectedIndex) {
						if(this.jInternalFrameDetalleFormDetalleActivoFijo!=null) {
							this.jInternalFrameDetalleFormDetalleActivoFijo.jComboBoxid_sucursalDetalleActivoFijo.setSelectedItem(sucursal);
						}
					} else {
						if(this.jInternalFrameDetalleFormDetalleActivoFijo!=null) {
							this.jInternalFrameDetalleFormDetalleActivoFijo.jComboBoxid_sucursalDetalleActivoFijo.setSelectedIndex(iIndexSelected);
						}
					}
				}


				if(!this.conCargarMinimo) {
					if(conBusqueda) {

					//BYDAN_BUSQUEDAS
					

										}
				}
			} catch(Exception e) {
				throw e;
			}
		}

		public void setSelectedItemCombosFrameDetalleGrupoActivoFijoForeignKey(DetalleGrupoActivoFijo detallegrupoactivofijo,int iIndexSelected,Boolean conSelectedIndex,Boolean conFormulario,Boolean conBusqueda)throws Exception {
			try {

				if(conFormulario) {
					if(!conSelectedIndex) {
						if(this.jInternalFrameDetalleFormDetalleActivoFijo!=null) {
							this.jInternalFrameDetalleFormDetalleActivoFijo.jComboBoxid_detalle_grupo_activo_fijoDetalleActivoFijo.setSelectedItem(detallegrupoactivofijo);
						}
					} else {
						if(this.jInternalFrameDetalleFormDetalleActivoFijo!=null) {
							this.jInternalFrameDetalleFormDetalleActivoFijo.jComboBoxid_detalle_grupo_activo_fijoDetalleActivoFijo.setSelectedIndex(iIndexSelected);
						}
					}
				}


				if(!this.conCargarMinimo) {
					if(conBusqueda) {

					//BYDAN_BUSQUEDAS
					
						if(!conSelectedIndex) {
							this.jComboBoxid_detalle_grupo_activo_fijoFK_IdDetalleGrupoActivoFijoDetalleActivoFijo.setSelectedItem(detallegrupoactivofijo);
						} else {
							this.jComboBoxid_detalle_grupo_activo_fijoFK_IdDetalleGrupoActivoFijoDetalleActivoFijo.setSelectedIndex(iIndexSelected);
						}

										}
				}
			} catch(Exception e) {
				throw e;
			}
		}

		public void setSelectedItemCombosFrameSubGrupoActivoFijoForeignKey(SubGrupoActivoFijo subgrupoactivofijo,int iIndexSelected,Boolean conSelectedIndex,Boolean conFormulario,Boolean conBusqueda)throws Exception {
			try {

				if(conFormulario) {
					if(!conSelectedIndex) {
						if(this.jInternalFrameDetalleFormDetalleActivoFijo!=null) {
							this.jInternalFrameDetalleFormDetalleActivoFijo.jComboBoxid_sub_grupo_activo_fijoDetalleActivoFijo.setSelectedItem(subgrupoactivofijo);
						}
					} else {
						if(this.jInternalFrameDetalleFormDetalleActivoFijo!=null) {
							this.jInternalFrameDetalleFormDetalleActivoFijo.jComboBoxid_sub_grupo_activo_fijoDetalleActivoFijo.setSelectedIndex(iIndexSelected);
						}
					}
				}


				if(!this.conCargarMinimo) {
					if(conBusqueda) {

					//BYDAN_BUSQUEDAS
					
						if(!conSelectedIndex) {
							this.jComboBoxid_sub_grupo_activo_fijoFK_IdSubGrupoActivoFijoDetalleActivoFijo.setSelectedItem(subgrupoactivofijo);
						} else {
							this.jComboBoxid_sub_grupo_activo_fijoFK_IdSubGrupoActivoFijoDetalleActivoFijo.setSelectedIndex(iIndexSelected);
						}

										}
				}
			} catch(Exception e) {
				throw e;
			}
		}

		public void setSelectedItemCombosFrameTipoRamoActivoFijoForeignKey(TipoRamoActivoFijo tiporamoactivofijo,int iIndexSelected,Boolean conSelectedIndex,Boolean conFormulario,Boolean conBusqueda)throws Exception {
			try {

				if(conFormulario) {
					if(!conSelectedIndex) {
						if(this.jInternalFrameDetalleFormDetalleActivoFijo!=null) {
							this.jInternalFrameDetalleFormDetalleActivoFijo.jComboBoxid_tipo_ramo_activo_fijoDetalleActivoFijo.setSelectedItem(tiporamoactivofijo);
						}
					} else {
						if(this.jInternalFrameDetalleFormDetalleActivoFijo!=null) {
							this.jInternalFrameDetalleFormDetalleActivoFijo.jComboBoxid_tipo_ramo_activo_fijoDetalleActivoFijo.setSelectedIndex(iIndexSelected);
						}
					}
				}


				if(!this.conCargarMinimo) {
					if(conBusqueda) {

					//BYDAN_BUSQUEDAS
					
						if(!conSelectedIndex) {
							this.jComboBoxid_tipo_ramo_activo_fijoFK_IdTipoRamoActivoFijoDetalleActivoFijo.setSelectedItem(tiporamoactivofijo);
						} else {
							this.jComboBoxid_tipo_ramo_activo_fijoFK_IdTipoRamoActivoFijoDetalleActivoFijo.setSelectedIndex(iIndexSelected);
						}

										}
				}
			} catch(Exception e) {
				throw e;
			}
		}

		public void setSelectedItemCombosFrameTipoActivoFijoEmpresaForeignKey(TipoActivoFijoEmpresa tipoactivofijoempresa,int iIndexSelected,Boolean conSelectedIndex,Boolean conFormulario,Boolean conBusqueda)throws Exception {
			try {

				if(conFormulario) {
					if(!conSelectedIndex) {
						if(this.jInternalFrameDetalleFormDetalleActivoFijo!=null) {
							this.jInternalFrameDetalleFormDetalleActivoFijo.jComboBoxid_tipo_activo_fijo_empresaDetalleActivoFijo.setSelectedItem(tipoactivofijoempresa);
						}
					} else {
						if(this.jInternalFrameDetalleFormDetalleActivoFijo!=null) {
							this.jInternalFrameDetalleFormDetalleActivoFijo.jComboBoxid_tipo_activo_fijo_empresaDetalleActivoFijo.setSelectedIndex(iIndexSelected);
						}
					}
				}


				if(!this.conCargarMinimo) {
					if(conBusqueda) {

					//BYDAN_BUSQUEDAS
					
						if(!conSelectedIndex) {
							this.jComboBoxid_tipo_activo_fijo_empresaFK_IdTipoActivoFijoEmpresaDetalleActivoFijo.setSelectedItem(tipoactivofijoempresa);
						} else {
							this.jComboBoxid_tipo_activo_fijo_empresaFK_IdTipoActivoFijoEmpresaDetalleActivoFijo.setSelectedIndex(iIndexSelected);
						}

										}
				}
			} catch(Exception e) {
				throw e;
			}
		}

		public void setSelectedItemCombosFrameTipoDepreciacionEmpresaForeignKey(TipoDepreciacionEmpresa tipodepreciacionempresa,int iIndexSelected,Boolean conSelectedIndex,Boolean conFormulario,Boolean conBusqueda)throws Exception {
			try {

				if(conFormulario) {
					if(!conSelectedIndex) {
						if(this.jInternalFrameDetalleFormDetalleActivoFijo!=null) {
							this.jInternalFrameDetalleFormDetalleActivoFijo.jComboBoxid_tipo_depreciacion_empresaDetalleActivoFijo.setSelectedItem(tipodepreciacionempresa);
						}
					} else {
						if(this.jInternalFrameDetalleFormDetalleActivoFijo!=null) {
							this.jInternalFrameDetalleFormDetalleActivoFijo.jComboBoxid_tipo_depreciacion_empresaDetalleActivoFijo.setSelectedIndex(iIndexSelected);
						}
					}
				}


				if(!this.conCargarMinimo) {
					if(conBusqueda) {

					//BYDAN_BUSQUEDAS
					
						if(!conSelectedIndex) {
							this.jComboBoxid_tipo_depreciacion_empresaFK_IdTipoDepreciacionEmpresaDetalleActivoFijo.setSelectedItem(tipodepreciacionempresa);
						} else {
							this.jComboBoxid_tipo_depreciacion_empresaFK_IdTipoDepreciacionEmpresaDetalleActivoFijo.setSelectedIndex(iIndexSelected);
						}

										}
				}
			} catch(Exception e) {
				throw e;
			}
		}

		public void setSelectedItemCombosFrameEstadoActivoFijoForeignKey(EstadoActivoFijo estadoactivofijo,int iIndexSelected,Boolean conSelectedIndex,Boolean conFormulario,Boolean conBusqueda)throws Exception {
			try {

				if(conFormulario) {
					if(!conSelectedIndex) {
						if(this.jInternalFrameDetalleFormDetalleActivoFijo!=null) {
							this.jInternalFrameDetalleFormDetalleActivoFijo.jComboBoxid_estado_activo_fijoDetalleActivoFijo.setSelectedItem(estadoactivofijo);
						}
					} else {
						if(this.jInternalFrameDetalleFormDetalleActivoFijo!=null) {
							this.jInternalFrameDetalleFormDetalleActivoFijo.jComboBoxid_estado_activo_fijoDetalleActivoFijo.setSelectedIndex(iIndexSelected);
						}
					}
				}


				if(!this.conCargarMinimo) {
					if(conBusqueda) {

					//BYDAN_BUSQUEDAS
					
						if(!conSelectedIndex) {
							this.jComboBoxid_estado_activo_fijoFK_IdEstadoActivoFijoDetalleActivoFijo.setSelectedItem(estadoactivofijo);
						} else {
							this.jComboBoxid_estado_activo_fijoFK_IdEstadoActivoFijoDetalleActivoFijo.setSelectedIndex(iIndexSelected);
						}

										}
				}
			} catch(Exception e) {
				throw e;
			}
		}

		public void setSelectedItemCombosFrameClienteForeignKey(Cliente cliente,int iIndexSelected,Boolean conSelectedIndex,Boolean conFormulario,Boolean conBusqueda)throws Exception {
			try {

				if(conFormulario) {
					if(!conSelectedIndex) {
						if(this.jInternalFrameDetalleFormDetalleActivoFijo!=null) {
							this.jInternalFrameDetalleFormDetalleActivoFijo.jComboBoxid_clienteDetalleActivoFijo.setSelectedItem(cliente);
						}
					} else {
						if(this.jInternalFrameDetalleFormDetalleActivoFijo!=null) {
							this.jInternalFrameDetalleFormDetalleActivoFijo.jComboBoxid_clienteDetalleActivoFijo.setSelectedIndex(iIndexSelected);
						}
					}
				}


				if(!this.conCargarMinimo) {
					if(conBusqueda) {

					//BYDAN_BUSQUEDAS
					
						if(!conSelectedIndex) {
							this.jComboBoxid_clienteFK_IdClienteDetalleActivoFijo.setSelectedItem(cliente);
						} else {
							this.jComboBoxid_clienteFK_IdClienteDetalleActivoFijo.setSelectedIndex(iIndexSelected);
						}

										}
				}
			} catch(Exception e) {
				throw e;
			}
		}

		public void setSelectedItemCombosFramePartidaPresuForeignKey(PartidaPresu partidapresu,int iIndexSelected,Boolean conSelectedIndex,Boolean conFormulario,Boolean conBusqueda)throws Exception {
			try {

				if(conFormulario) {
					if(!conSelectedIndex) {
						if(this.jInternalFrameDetalleFormDetalleActivoFijo!=null) {
							this.jInternalFrameDetalleFormDetalleActivoFijo.jComboBoxid_partida_presuDetalleActivoFijo.setSelectedItem(partidapresu);
						}
					} else {
						if(this.jInternalFrameDetalleFormDetalleActivoFijo!=null) {
							this.jInternalFrameDetalleFormDetalleActivoFijo.jComboBoxid_partida_presuDetalleActivoFijo.setSelectedIndex(iIndexSelected);
						}
					}
				}


				if(!this.conCargarMinimo) {
					if(conBusqueda) {

					//BYDAN_BUSQUEDAS
					
						if(!conSelectedIndex) {
							this.jComboBoxid_partida_presuFK_IdPartidaPresuDetalleActivoFijo.setSelectedItem(partidapresu);
						} else {
							this.jComboBoxid_partida_presuFK_IdPartidaPresuDetalleActivoFijo.setSelectedIndex(iIndexSelected);
						}

										}
				}
			} catch(Exception e) {
				throw e;
			}
		}

	


	
	public void refrescarForeignKeysDescripcionesDetalleActivoFijo() throws Exception {
		//SI FUNCIONA DEEPLOAD ESTO VA AL ULTIMO
		if(Constantes.ISUSAEJBLOGICLAYER) {
			DetalleActivoFijoConstantesFunciones.refrescarForeignKeysDescripcionesDetalleActivoFijo(this.detalleactivofijoLogic.getDetalleActivoFijos());
		} else if(Constantes.ISUSAEJBREMOTE || Constantes.ISUSAEJBHOME) {
			DetalleActivoFijoConstantesFunciones.refrescarForeignKeysDescripcionesDetalleActivoFijo(this.detalleactivofijos);
		}
		
		/*
		ArrayList<Classe> classes=new ArrayList<Classe>();
		
		classes.add(new Classe(Empresa.class));
		classes.add(new Classe(Sucursal.class));
		classes.add(new Classe(DetalleGrupoActivoFijo.class));
		classes.add(new Classe(SubGrupoActivoFijo.class));
		classes.add(new Classe(TipoRamoActivoFijo.class));
		classes.add(new Classe(TipoActivoFijoEmpresa.class));
		classes.add(new Classe(TipoDepreciacionEmpresa.class));
		classes.add(new Classe(EstadoActivoFijo.class));
		classes.add(new Classe(Cliente.class));
		classes.add(new Classe(PartidaPresu.class));
			
		if(Constantes.ISUSAEJBLOGICLAYER) {
			//USA LOS OBJETOS DE LOGIC DIRECTAMENTE
			//detalleactivofijoLogic.setDetalleActivoFijos(this.detalleactivofijos);
			detalleactivofijoLogic.deepLoadsWithConnection(false, DeepLoadType.INCLUDE, classes,"");
	
		} else if(Constantes.ISUSAEJBREMOTE) {
		} else if(Constantes.ISUSAEJBHOME) {
		}
		*/				
	}	
	
	
	
	public Integer getiNumeroPaginacion() {
		return iNumeroPaginacion;
	}

	public void setiNumeroPaginacion(Integer iNumeroPaginacion) {
		this.iNumeroPaginacion= iNumeroPaginacion;
	}
	
	public Integer getiNumeroPaginacionPagina() {
		return iNumeroPaginacionPagina;
	}

	public void setiNumeroPaginacionPagina(Integer iNumeroPaginacionPagina) {
		this.iNumeroPaginacionPagina= iNumeroPaginacionPagina;
	}
	
	
	public Boolean getIsSeleccionarTodos() {
		return this.isSeleccionarTodos;
	}

	public void setIsSeleccionarTodos(Boolean isSeleccionarTodos) {
		this.isSeleccionarTodos= isSeleccionarTodos;
	}
	
	public Boolean getEsControlTabla() {
		return this.esControlTabla;
	}

	public void setEsControlTabla(Boolean esControlTabla) {
		this.esControlTabla= esControlTabla;
	}
	
	public Boolean getIsSeleccionados() {
		return this.isSeleccionados;
	}

	public void setIsSeleccionados(Boolean isSeleccionados) {
		this.isSeleccionados= isSeleccionados;
	}
	
	public Boolean getIsPostAccionNuevo() {
		return this.isPostAccionNuevo;
	}

	public void setIsPostAccionNuevo(Boolean isPostAccionNuevo) {
		this.isPostAccionNuevo= isPostAccionNuevo;
	}
	
	public Boolean getIsPostAccionSinCerrar() {
		return this.isPostAccionSinCerrar;
	}

	public void setIsPostAccionSinCerrar(Boolean isPostAccionSinCerrar) {
		this.isPostAccionSinCerrar= isPostAccionSinCerrar;
	}
	
	public Boolean getIsPostAccionSinMensaje() {
		return this.isPostAccionSinMensaje;
	}

	public void setIsPostAccionSinMensaje(Boolean isPostAccionSinMensaje) {
		this.isPostAccionSinMensaje= isPostAccionSinMensaje;
	}
	
	public Boolean getConGraficoReporte() {
		return this.conGraficoReporte;
	}

	public void setConGraficoReporte(Boolean conGraficoReporte) {
		this.conGraficoReporte= conGraficoReporte;
	}
	
	
	public ArrayList<Reporte> gettiposArchivosReportes() {
		return this.tiposArchivosReportes;
	}
	
	public void settiposArchivosReportes(ArrayList<Reporte> tiposArchivosReportes) {
		this.tiposArchivosReportes = tiposArchivosReportes;
	}
	
	//TIPOS ARCHIVOS DINAMICOS
	public ArrayList<Reporte> gettiposArchivosReportesDinamico() {
		return this.tiposArchivosReportesDinamico;
	}
	
	public void settiposArchivosReportesDinamico(ArrayList<Reporte> tiposArchivosReportesDinamico) {
		this.tiposArchivosReportesDinamico = tiposArchivosReportesDinamico;
	}
	
	//TIPOS REPORTES
	public ArrayList<Reporte> gettiposReportes() {
		return this.tiposReportes;
	}
	
	public void settiposReportes(ArrayList<Reporte> tiposReportes) {
		this.tiposReportes = tiposReportes;
	}
	
	//TIPOS REPORTES
	public ArrayList<Reporte> gettiposReportesDinamico() {
		return this.tiposReportesDinamico;
	}
	
	public void settiposReportesDinamico(ArrayList<Reporte> tiposReportesDinamico) {
		this.tiposReportesDinamico = tiposReportesDinamico;
	}
	
	//TIPOS GRAFICOS REPORTES
	public ArrayList<Reporte> gettiposGraficosReportes() {
		return this.tiposGraficosReportes;
	}
	
	public void settiposGraficosReportes(ArrayList<Reporte> tiposGraficosReportes) {
		this.tiposGraficosReportes = tiposGraficosReportes;
	}
	
	public ArrayList<Reporte> gettiposPaginacion() {
		return this.tiposPaginacion;
	}
	
	public void settiposPaginacion(ArrayList<Reporte> tiposPaginacion) {
		this.tiposPaginacion = tiposPaginacion;
	}
	
	public ArrayList<Reporte> gettiposRelaciones() {
		return this.tiposRelaciones;
	}
	
	public void settiposRelaciones(ArrayList<Reporte> tiposRelaciones) {
		this.tiposRelaciones= tiposRelaciones;
	}
	
	public ArrayList<Reporte> gettiposAcciones() {
		return this.tiposAcciones;
	}
	
	public void settiposAcciones(ArrayList<Reporte> tiposAcciones) {
		this.tiposAcciones = tiposAcciones;
	}
	
	public ArrayList<Reporte> gettiposAccionesFormulario() {
		return this.tiposAccionesFormulario;
	}
	
	public void settiposAccionesFormulario(ArrayList<Reporte> tiposAccionesFormulario) {
		this.tiposAccionesFormulario = tiposAccionesFormulario;
	}
	
	public ArrayList<Reporte> gettiposSeleccionar() {
		return this.tiposSeleccionar;
	}
	
	public void settiposSeleccionar(ArrayList<Reporte> tiposSeleccionar) {
		this.tiposSeleccionar = tiposSeleccionar;
	}
	
	public ArrayList<Reporte> gettiposColumnasSelect() {
		return this.tiposColumnasSelect;
	}
	
	public void settiposColumnasSelect(ArrayList<Reporte> tiposColumnasSelect) {
		this.tiposColumnasSelect = tiposColumnasSelect;
	}
		
	public ArrayList<Reporte> gettiposRelacionesSelect() {
		return this.tiposRelacionesSelect;
	}
	
	public void settiposRelacionesSelect(ArrayList<Reporte> tiposRelacionesSelect) {
		this.tiposRelacionesSelect = tiposRelacionesSelect;
	}
	
	public Long getIIdUsuarioSesion() {
		return lIdUsuarioSesion;
	}

	public void setIIdUsuarioSesion(Long lIdUsuarioSesion) {
		this.lIdUsuarioSesion = lIdUsuarioSesion;
	}
	
	
	public List<Accion> getAccions() {
		return this.accions;
	}

	public void setAccions(List<Accion> accions) {
		this.accions = accions;
	}
	
	public List<Accion> getAccionsFormulario() {
		return this.accionsFormulario;
	}

	public void setAccionsFormulario(List<Accion> accionsFormulario) {
		this.accionsFormulario = accionsFormulario;
	}
	
	public String getsAccionMantenimiento() {
		return sAccionMantenimiento;
	}

	public void setsAccionMantenimiento(String sAccionMantenimiento) {
		this.sAccionMantenimiento = sAccionMantenimiento;
	}

	public String getsAccionBusqueda() {
		return sAccionBusqueda;
	}

	public void setsAccionBusqueda(String sAccionBusqueda) {
		this.sAccionBusqueda = sAccionBusqueda;
	}

	public String getsAccionAdicional() {
		return sAccionAdicional;
	}

	public void setsAccionAdicional(String sAccionAdicional) {
		this.sAccionAdicional = sAccionAdicional;
	}

	public String getsUltimaBusqueda() {
		return sUltimaBusqueda;
	}

	public void setsUltimaBusqueda(String sUltimaBusqueda) {
		this.sUltimaBusqueda = sUltimaBusqueda;
	}
	
	public String getsTipoArchivoReporte() {
		return sTipoArchivoReporte;
	}

	public void setsTipoArchivoReporte(String sTipoArchivoReporte) {
		this.sTipoArchivoReporte = sTipoArchivoReporte;
	}
	
	public String getsTipoArchivoReporteDinamico() {
		return sTipoArchivoReporteDinamico;
	}

	public void setsTipoArchivoReporteDinamico(String sTipoArchivoReporteDinamico) {
		this.sTipoArchivoReporteDinamico = sTipoArchivoReporteDinamico;
	}
	
	public String getsTipoReporte() {
		return sTipoReporte;
	}

	public void setsTipoReporte(String sTipoReporte) {
		this.sTipoReporte = sTipoReporte;
	}
	
	public String getsTipoReporteDinamico() {
		return sTipoReporteDinamico;
	}

	public void setsTipoReporteDinamico(String sTipoReporteDinamico) {
		this.sTipoReporteDinamico = sTipoReporteDinamico;
	}
	
	public String getsTipoGraficoReporte() {
		return sTipoGraficoReporte;
	}

	public void setsTipoGraficoReporte(String sTipoGraficoReporte) {
		this.sTipoGraficoReporte = sTipoGraficoReporte;
	}
	
	public String getsTipoPaginacion() {
		return sTipoPaginacion;
	}

	public void setsTipoPaginacion(String sTipoPaginacion) {
		this.sTipoPaginacion = sTipoPaginacion;
	}
	
	public String getsTipoRelacion() {
		return sTipoRelacion;
	}

	public void setsTipoRelacion(String sTipoRelacion) {
		this.sTipoRelacion = sTipoRelacion;
	}
	
	public String getsTipoAccion() {
		return sTipoAccion;
	}

	public void setsTipoAccion(String sTipoAccion) {
		this.sTipoAccion = sTipoAccion;
	}
	
	public String getsTipoAccionFormulario() {
		return sTipoAccionFormulario;
	}

	public void setsTipoAccionFormulario(String sTipoAccionFormulario) {
		this.sTipoAccionFormulario = sTipoAccionFormulario;
	}
	
	public String getsTipoSeleccionar() {
		return sTipoSeleccionar;
	}

	public void setsTipoSeleccionar(String sTipoSeleccionar) {
		this.sTipoSeleccionar = sTipoSeleccionar;
	}
	
	public String getsValorCampoGeneral() {
		return sValorCampoGeneral;
	}

	public void setsValorCampoGeneral(String sValorCampoGeneral) {
		this.sValorCampoGeneral = sValorCampoGeneral;
	}			

	public String getsDetalleReporte() {
		return sDetalleReporte;
	}

	public void setsDetalleReporte(String sDetalleReporte) {
		this.sDetalleReporte = sDetalleReporte;
	}
	
	
	public String getsTipoReporteExtra() {
		return sTipoReporteExtra;
	}

	public void setsTipoReporteExtra(String sTipoReporteExtra) {
		this.sTipoReporteExtra = sTipoReporteExtra;
	}
	
	public Boolean getesReporteDinamico() {
		return esReporteDinamico;
	}	
	
	public void setesReporteDinamico(Boolean esReporteDinamico) {
		this.esReporteDinamico = esReporteDinamico;
	}
	
	public Boolean getesRecargarFks() {
		return esRecargarFks;
	}	
	
	public void setesRecargarFks(Boolean esRecargarFks) {
		this.esRecargarFks = esRecargarFks;
	}
	
	public Boolean getesReporteAccionProceso() {
		return esReporteAccionProceso;
	}	
	
	public void setesReporteAccionProceso(Boolean esReporteAccionProceso) {
		this.esReporteAccionProceso= esReporteAccionProceso;
	}
		
	public DetalleActivoFijoParameterReturnGeneral getDetalleActivoFijoParameterGeneral() {
		return this.detalleactivofijoParameterGeneral;
	}
	
	public void setDetalleActivoFijoParameterGeneral(DetalleActivoFijoParameterReturnGeneral detalleactivofijoParameterGeneral) {
		this.detalleactivofijoParameterGeneral = detalleactivofijoParameterGeneral;
	}
	
	public String getsPathReporteDinamico() {
		return sPathReporteDinamico;
	}

	public void setsPathReporteDinamico(String sPathReporteDinamico) {
		this.sPathReporteDinamico = sPathReporteDinamico;
	}
		
	public Boolean getisMostrarNumeroPaginacion() {
		return isMostrarNumeroPaginacion;
	}

	public void setisMostrarNumeroPaginacion(Boolean isMostrarNumeroPaginacion) {
		this.isMostrarNumeroPaginacion = isMostrarNumeroPaginacion;
	}
	
	public Mensaje getMensaje() {
		return mensaje;
	}

	public void setMensaje(Mensaje mensaje) {
		this.mensaje = mensaje;
	}
	
	public Boolean getIsPermisoTodoDetalleActivoFijo() {
		return isPermisoTodoDetalleActivoFijo;
	}

	public void setIsPermisoTodoDetalleActivoFijo(Boolean isPermisoTodoDetalleActivoFijo) {
		this.isPermisoTodoDetalleActivoFijo = isPermisoTodoDetalleActivoFijo;
	}

	public Boolean getIsPermisoNuevoDetalleActivoFijo() {
		return isPermisoNuevoDetalleActivoFijo;
	}

	public void setIsPermisoNuevoDetalleActivoFijo(Boolean isPermisoNuevoDetalleActivoFijo) {
		this.isPermisoNuevoDetalleActivoFijo = isPermisoNuevoDetalleActivoFijo;
	}

	public Boolean getIsPermisoActualizarDetalleActivoFijo() {
		return isPermisoActualizarDetalleActivoFijo;
	}

	public void setIsPermisoActualizarDetalleActivoFijo(Boolean isPermisoActualizarDetalleActivoFijo) {
		this.isPermisoActualizarDetalleActivoFijo = isPermisoActualizarDetalleActivoFijo;
	}

	public Boolean getIsPermisoEliminarDetalleActivoFijo() {
		return isPermisoEliminarDetalleActivoFijo;
	}

	public void setIsPermisoEliminarDetalleActivoFijo(Boolean isPermisoEliminarDetalleActivoFijo) {
		this.isPermisoEliminarDetalleActivoFijo = isPermisoEliminarDetalleActivoFijo;
	}

	public Boolean getIsPermisoGuardarCambiosDetalleActivoFijo() {
		return isPermisoGuardarCambiosDetalleActivoFijo;
	}

	public void setIsPermisoGuardarCambiosDetalleActivoFijo(Boolean isPermisoGuardarCambiosDetalleActivoFijo) {
		this.isPermisoGuardarCambiosDetalleActivoFijo = isPermisoGuardarCambiosDetalleActivoFijo;
	}
	
	public Boolean getIsPermisoConsultaDetalleActivoFijo() {
		return isPermisoConsultaDetalleActivoFijo;
	}

	public void setIsPermisoConsultaDetalleActivoFijo(Boolean isPermisoConsultaDetalleActivoFijo) {
		this.isPermisoConsultaDetalleActivoFijo = isPermisoConsultaDetalleActivoFijo;
	}

	public Boolean getIsPermisoBusquedaDetalleActivoFijo() {
		return isPermisoBusquedaDetalleActivoFijo;
	}

	public void setIsPermisoBusquedaDetalleActivoFijo(Boolean isPermisoBusquedaDetalleActivoFijo) {
		this.isPermisoBusquedaDetalleActivoFijo = isPermisoBusquedaDetalleActivoFijo;
	}

	public Boolean getIsPermisoReporteDetalleActivoFijo() {
		return isPermisoReporteDetalleActivoFijo;
	}

	public void setIsPermisoReporteDetalleActivoFijo(Boolean isPermisoReporteDetalleActivoFijo) {
		this.isPermisoReporteDetalleActivoFijo = isPermisoReporteDetalleActivoFijo;
	}
	
	public Boolean getIsPermisoPaginacionMedioDetalleActivoFijo() {
		return isPermisoPaginacionMedioDetalleActivoFijo;
	}

	public void setIsPermisoPaginacionMedioDetalleActivoFijo(Boolean isPermisoPaginacionMedioDetalleActivoFijo) {
		this.isPermisoPaginacionMedioDetalleActivoFijo = isPermisoPaginacionMedioDetalleActivoFijo;
	}
	
	public Boolean getIsPermisoPaginacionTodoDetalleActivoFijo() {
		return isPermisoPaginacionTodoDetalleActivoFijo;
	}

	public void setIsPermisoPaginacionTodoDetalleActivoFijo(Boolean isPermisoPaginacionTodoDetalleActivoFijo) {
		this.isPermisoPaginacionTodoDetalleActivoFijo = isPermisoPaginacionTodoDetalleActivoFijo;
	}
	
	public Boolean getIsPermisoPaginacionAltoDetalleActivoFijo() {
		return isPermisoPaginacionAltoDetalleActivoFijo;
	}

	public void setIsPermisoPaginacionAltoDetalleActivoFijo(Boolean isPermisoPaginacionAltoDetalleActivoFijo) {
		this.isPermisoPaginacionAltoDetalleActivoFijo = isPermisoPaginacionAltoDetalleActivoFijo;
	}
	
	public Boolean getIsPermisoCopiarDetalleActivoFijo() {
		return isPermisoCopiarDetalleActivoFijo;
	}

	public void setIsPermisoCopiarDetalleActivoFijo(Boolean isPermisoCopiarDetalleActivoFijo) {
		this.isPermisoCopiarDetalleActivoFijo = isPermisoCopiarDetalleActivoFijo;
	}
	
	public Boolean getIsPermisoVerFormDetalleActivoFijo() {
		return isPermisoVerFormDetalleActivoFijo;
	}

	public void setIsPermisoVerFormDetalleActivoFijo(Boolean isPermisoVerFormDetalleActivoFijo) {
		this.isPermisoVerFormDetalleActivoFijo = isPermisoVerFormDetalleActivoFijo;
	}
	
	public Boolean getIsPermisoDuplicarDetalleActivoFijo() {
		return isPermisoDuplicarDetalleActivoFijo;
	}

	public void setIsPermisoDuplicarDetalleActivoFijo(Boolean isPermisoDuplicarDetalleActivoFijo) {
		this.isPermisoDuplicarDetalleActivoFijo = isPermisoDuplicarDetalleActivoFijo;
	}
	
	public Boolean getIsPermisoOrdenDetalleActivoFijo() {
		return isPermisoOrdenDetalleActivoFijo;
	}

	public void setIsPermisoOrdenDetalleActivoFijo(Boolean isPermisoOrdenDetalleActivoFijo) {
		this.isPermisoOrdenDetalleActivoFijo = isPermisoOrdenDetalleActivoFijo;
	}
	
	public String getsVisibilidadTablaBusquedas() {
		return sVisibilidadTablaBusquedas;
	}

	public void setsVisibilidadTablaBusquedas(String sVisibilidadTablaBusquedas) {
		this.sVisibilidadTablaBusquedas = sVisibilidadTablaBusquedas;
	}
	
	public String getsVisibilidadTablaElementos() {
		return sVisibilidadTablaElementos;
	}

	public void setsVisibilidadTablaElementos(String sVisibilidadTablaElementos) {
		this.sVisibilidadTablaElementos = sVisibilidadTablaElementos;
	}

	public String getsVisibilidadTablaAcciones() {
		return sVisibilidadTablaAcciones;
	}

	public void setsVisibilidadTablaAcciones(String sVisibilidadTablaAcciones) {
		this.sVisibilidadTablaAcciones = sVisibilidadTablaAcciones;
	}
	
	public Boolean getIsVisibilidadCeldaNuevoDetalleActivoFijo() {
		return isVisibilidadCeldaNuevoDetalleActivoFijo;
	}

	public void setIsVisibilidadCeldaNuevoDetalleActivoFijo(Boolean isVisibilidadCeldaNuevoDetalleActivoFijo) {
		this.isVisibilidadCeldaNuevoDetalleActivoFijo = isVisibilidadCeldaNuevoDetalleActivoFijo;
	}
	
	public Boolean getIsVisibilidadCeldaDuplicarDetalleActivoFijo() {
		return isVisibilidadCeldaDuplicarDetalleActivoFijo;
	}

	public void setIsVisibilidadCeldaDuplicarDetalleActivoFijo(Boolean isVisibilidadCeldaDuplicarDetalleActivoFijo) {
		this.isVisibilidadCeldaDuplicarDetalleActivoFijo = isVisibilidadCeldaDuplicarDetalleActivoFijo;
	}
	
	public Boolean getIsVisibilidadCeldaCopiarDetalleActivoFijo() {
		return isVisibilidadCeldaCopiarDetalleActivoFijo;
	}

	public void setIsVisibilidadCeldaCopiarDetalleActivoFijo(Boolean isVisibilidadCeldaCopiarDetalleActivoFijo) {
		this.isVisibilidadCeldaCopiarDetalleActivoFijo = isVisibilidadCeldaCopiarDetalleActivoFijo;
	}
	
	public Boolean getIsVisibilidadCeldaVerFormDetalleActivoFijo() {
		return isVisibilidadCeldaVerFormDetalleActivoFijo;
	}

	public void setIsVisibilidadCeldaVerFormDetalleActivoFijo(Boolean isVisibilidadCeldaVerFormDetalleActivoFijo) {
		this.isVisibilidadCeldaVerFormDetalleActivoFijo = isVisibilidadCeldaVerFormDetalleActivoFijo;
	}
	
	public Boolean getIsVisibilidadCeldaOrdenDetalleActivoFijo() {
		return isVisibilidadCeldaOrdenDetalleActivoFijo;
	}

	public void setIsVisibilidadCeldaOrdenDetalleActivoFijo(Boolean isVisibilidadCeldaOrdenDetalleActivoFijo) {
		this.isVisibilidadCeldaOrdenDetalleActivoFijo = isVisibilidadCeldaOrdenDetalleActivoFijo;
	}
	
	public Boolean getIsVisibilidadCeldaNuevoRelacionesDetalleActivoFijo() {
		return isVisibilidadCeldaNuevoRelacionesDetalleActivoFijo;
	}

	public void setIsVisibilidadCeldaNuevoRelacionesDetalleActivoFijo(Boolean isVisibilidadCeldaNuevoRelacionesDetalleActivoFijo) {
		this.isVisibilidadCeldaNuevoRelacionesDetalleActivoFijo = isVisibilidadCeldaNuevoRelacionesDetalleActivoFijo;
	}
	
	public Boolean getIsVisibilidadCeldaModificarDetalleActivoFijo() {
		return isVisibilidadCeldaModificarDetalleActivoFijo;
	}

	public void setIsVisibilidadCeldaModificarDetalleActivoFijo(Boolean isVisibilidadCeldaModificarDetalleActivoFijo) {
		this.isVisibilidadCeldaModificarDetalleActivoFijo = isVisibilidadCeldaModificarDetalleActivoFijo;
	}
	
	public Boolean getIsVisibilidadCeldaActualizarDetalleActivoFijo() {
		return isVisibilidadCeldaActualizarDetalleActivoFijo;
	}

	public void setIsVisibilidadCeldaActualizarDetalleActivoFijo(Boolean isVisibilidadCeldaActualizarDetalleActivoFijo) {
		this.isVisibilidadCeldaActualizarDetalleActivoFijo = isVisibilidadCeldaActualizarDetalleActivoFijo;
	}

	public Boolean getIsVisibilidadCeldaEliminarDetalleActivoFijo() {
		return isVisibilidadCeldaEliminarDetalleActivoFijo;
	}

	public void setIsVisibilidadCeldaEliminarDetalleActivoFijo(Boolean isVisibilidadCeldaEliminarDetalleActivoFijo) {
		this.isVisibilidadCeldaEliminarDetalleActivoFijo = isVisibilidadCeldaEliminarDetalleActivoFijo;
	}

	public Boolean getIsVisibilidadCeldaCancelarDetalleActivoFijo() {
		return isVisibilidadCeldaCancelarDetalleActivoFijo;
	}

	public void setIsVisibilidadCeldaCancelarDetalleActivoFijo(Boolean isVisibilidadCeldaCancelarDetalleActivoFijo) {
		this.isVisibilidadCeldaCancelarDetalleActivoFijo = isVisibilidadCeldaCancelarDetalleActivoFijo;
	}

	public Boolean getIsVisibilidadCeldaGuardarDetalleActivoFijo() {
		return isVisibilidadCeldaGuardarDetalleActivoFijo;
	}

	public void setIsVisibilidadCeldaGuardarDetalleActivoFijo(Boolean isVisibilidadCeldaGuardarDetalleActivoFijo) {
		this.isVisibilidadCeldaGuardarDetalleActivoFijo = isVisibilidadCeldaGuardarDetalleActivoFijo;
	}
	
	public Boolean getIsVisibilidadCeldaGuardarCambiosDetalleActivoFijo() {
		return isVisibilidadCeldaGuardarCambiosDetalleActivoFijo;
	}

	public void setIsVisibilidadCeldaGuardarCambiosDetalleActivoFijo(Boolean isVisibilidadCeldaGuardarCambiosDetalleActivoFijo) {
		this.isVisibilidadCeldaGuardarCambiosDetalleActivoFijo = isVisibilidadCeldaGuardarCambiosDetalleActivoFijo;
	}
		
	public DetalleActivoFijoSessionBean getdetalleactivofijoSessionBean() {
		return this.detalleactivofijoSessionBean;
	}
	
	public void setdetalleactivofijoSessionBean(DetalleActivoFijoSessionBean detalleactivofijoSessionBean) {
		this.detalleactivofijoSessionBean=detalleactivofijoSessionBean;
	}
	
	
	public Boolean getisVisibilidadFK_IdCliente() {
		return this.isVisibilidadFK_IdCliente;
	}

	public void setisVisibilidadFK_IdCliente(Boolean isVisibilidadFK_IdCliente) {
		this.isVisibilidadFK_IdCliente=isVisibilidadFK_IdCliente;
	}

	public Boolean getisVisibilidadFK_IdDetalleGrupoActivoFijo() {
		return this.isVisibilidadFK_IdDetalleGrupoActivoFijo;
	}

	public void setisVisibilidadFK_IdDetalleGrupoActivoFijo(Boolean isVisibilidadFK_IdDetalleGrupoActivoFijo) {
		this.isVisibilidadFK_IdDetalleGrupoActivoFijo=isVisibilidadFK_IdDetalleGrupoActivoFijo;
	}

	public Boolean getisVisibilidadFK_IdEmpresa() {
		return this.isVisibilidadFK_IdEmpresa;
	}

	public void setisVisibilidadFK_IdEmpresa(Boolean isVisibilidadFK_IdEmpresa) {
		this.isVisibilidadFK_IdEmpresa=isVisibilidadFK_IdEmpresa;
	}

	public Boolean getisVisibilidadFK_IdEstadoActivoFijo() {
		return this.isVisibilidadFK_IdEstadoActivoFijo;
	}

	public void setisVisibilidadFK_IdEstadoActivoFijo(Boolean isVisibilidadFK_IdEstadoActivoFijo) {
		this.isVisibilidadFK_IdEstadoActivoFijo=isVisibilidadFK_IdEstadoActivoFijo;
	}

	public Boolean getisVisibilidadFK_IdPartidaPresu() {
		return this.isVisibilidadFK_IdPartidaPresu;
	}

	public void setisVisibilidadFK_IdPartidaPresu(Boolean isVisibilidadFK_IdPartidaPresu) {
		this.isVisibilidadFK_IdPartidaPresu=isVisibilidadFK_IdPartidaPresu;
	}

	public Boolean getisVisibilidadFK_IdSubGrupoActivoFijo() {
		return this.isVisibilidadFK_IdSubGrupoActivoFijo;
	}

	public void setisVisibilidadFK_IdSubGrupoActivoFijo(Boolean isVisibilidadFK_IdSubGrupoActivoFijo) {
		this.isVisibilidadFK_IdSubGrupoActivoFijo=isVisibilidadFK_IdSubGrupoActivoFijo;
	}

	public Boolean getisVisibilidadFK_IdSucursal() {
		return this.isVisibilidadFK_IdSucursal;
	}

	public void setisVisibilidadFK_IdSucursal(Boolean isVisibilidadFK_IdSucursal) {
		this.isVisibilidadFK_IdSucursal=isVisibilidadFK_IdSucursal;
	}

	public Boolean getisVisibilidadFK_IdTipoActivoFijoEmpresa() {
		return this.isVisibilidadFK_IdTipoActivoFijoEmpresa;
	}

	public void setisVisibilidadFK_IdTipoActivoFijoEmpresa(Boolean isVisibilidadFK_IdTipoActivoFijoEmpresa) {
		this.isVisibilidadFK_IdTipoActivoFijoEmpresa=isVisibilidadFK_IdTipoActivoFijoEmpresa;
	}

	public Boolean getisVisibilidadFK_IdTipoDepreciacionEmpresa() {
		return this.isVisibilidadFK_IdTipoDepreciacionEmpresa;
	}

	public void setisVisibilidadFK_IdTipoDepreciacionEmpresa(Boolean isVisibilidadFK_IdTipoDepreciacionEmpresa) {
		this.isVisibilidadFK_IdTipoDepreciacionEmpresa=isVisibilidadFK_IdTipoDepreciacionEmpresa;
	}

	public Boolean getisVisibilidadFK_IdTipoRamoActivoFijo() {
		return this.isVisibilidadFK_IdTipoRamoActivoFijo;
	}

	public void setisVisibilidadFK_IdTipoRamoActivoFijo(Boolean isVisibilidadFK_IdTipoRamoActivoFijo) {
		this.isVisibilidadFK_IdTipoRamoActivoFijo=isVisibilidadFK_IdTipoRamoActivoFijo;
	}

	
	
	public void setVariablesFormularioToObjetoActualForeignKeysDetalleActivoFijo(DetalleActivoFijo detalleactivofijo)throws Exception {
		try {
			
				this.setActualParaGuardarEmpresaForeignKey(detalleactivofijo,null);
				this.setActualParaGuardarSucursalForeignKey(detalleactivofijo,null);
				this.setActualParaGuardarDetalleGrupoActivoFijoForeignKey(detalleactivofijo,null);
				this.setActualParaGuardarSubGrupoActivoFijoForeignKey(detalleactivofijo,null);
				this.setActualParaGuardarTipoRamoActivoFijoForeignKey(detalleactivofijo,null);
				this.setActualParaGuardarTipoActivoFijoEmpresaForeignKey(detalleactivofijo,null);
				this.setActualParaGuardarTipoDepreciacionEmpresaForeignKey(detalleactivofijo,null);
				this.setActualParaGuardarEstadoActivoFijoForeignKey(detalleactivofijo,null);
				this.setActualParaGuardarClienteForeignKey(detalleactivofijo,null);
				this.setActualParaGuardarPartidaPresuForeignKey(detalleactivofijo,null);
		} catch(Exception e) {
			throw e;
		}
	}
	
	public void cargarLicenciaCliente(DatosCliente datosCliente) throws Exception {
		Boolean existe=false;
			
		try {
				InputStream reportFile=null;
				
				String sPath=this.parametroGeneralUsuario.getpath_exportar()+"erp_bydan/license/license.xml";
				
				reportFile = new FileInputStream(sPath);
				
				Document documentBuilder=null;
				
				if(this.constantes2.DOCUMENT_BUILDER==null) {
					documentBuilder=Funciones2.parseXml(reportFile);
				} else {
					documentBuilder=this.constantes2.DOCUMENT_BUILDER;
				}
				
				//GlobalSeguridad.readXml(documentBuilder);
				
				String sNamePCServerLicencia="";
				String sClaveSistemaLicencia="";
				Date dFechaServerLicencia=null;
				
				//CARGAR ELEMENTOS DE LICENCIA
				NodeList nodeList = documentBuilder.getElementsByTagName("Licencia");
				
				for (int iIndice = 0; iIndice < nodeList.getLength(); iIndice++) {
					Node node = nodeList.item(iIndice);
				
					if (node.getNodeType() == Node.ELEMENT_NODE) {
						Element element = (Element) node;
						 
						sNamePCServerLicencia=element.getElementsByTagName("NombrePc").item(0).getTextContent();
						sClaveSistemaLicencia=element.getElementsByTagName("ClaveSistema").item(0).getTextContent();
						
						existe=true;
						break;
					}
				}														
			
				
			if(existe) {
				datosCliente.setsClaveSistema(sClaveSistemaLicencia);
				
				if(!datosCliente.getsNamePCServer().equals(sNamePCServerLicencia)
					&& !datosCliente.getsNamePCServer().equals("")) {
					
					datosCliente.setsNamePCServer(sNamePCServerLicencia);
				}
			} else {
				throw new Exception("NO EXISTE LICENCIA O NO ESTA BIEN FORMADO");
			}
		} catch(Exception e) {
			throw new Exception("NO EXISTE LICENCIA O NO ESTA BIEN FORMADO");
		}						
	}
	
	public void cargarDatosCliente() throws Exception {
		String sPrimerMacAddress="";		
		String sHostName="";		 
		String sHostIp="";		  
		String sHostUser="";
		
		
		sPrimerMacAddress=FuncionesNetwork.getPrimerMacAddress();		
		sHostName=FuncionesNetwork.getHostName();		 
		sHostIp=FuncionesNetwork.getHostIp();		  
		sHostUser=FuncionesNetwork.getHostUser();
		
		
		this.datosCliente=new DatosCliente();
		if(lIdUsuarioSesion!=null){datosCliente.setIdUsuario(this.lIdUsuarioSesion);}
		
		//SERVIDOR WEB Y TALVEZ SERVIDOR SWING WINDOWS
		this.datosCliente.setsUsuarioPCServer(sHostUser);
		this.datosCliente.setsNamePCServer(sHostName);
		this.datosCliente.setsIPPCServer(sHostIp);
		this.datosCliente.setsMacAddressPCServer(sPrimerMacAddress);
			
			//CLIENTE SWING WINDOWS
			this.datosCliente.setIsClienteWeb(false);
			
			this.datosCliente.setsUsuarioPC(sHostUser);
			this.datosCliente.setsNamePC(sHostName);
			this.datosCliente.setsIPPC(sHostIp);
			this.datosCliente.setsMacAddressPC(sPrimerMacAddress);	
			
			
			//this.cargarLicenciaCliente(this.datosCliente);
			
	}
	
	public void bugActualizarReferenciaActual(DetalleActivoFijo detalleactivofijo,DetalleActivoFijo detalleactivofijoAux) throws Exception {
		//ARCHITECTURE		
		//EL ID NEGATIVO GUARDADO EN ORIGINAL SIRVE PARA VERIFICAR Y ACTUALIZAR EL REGISTRO NUEVO (ID,VERSIONROW)
		this.setCamposBaseDesdeOriginalDetalleActivoFijo(detalleactivofijo);
					
		//POR BUG: EL OBJETO ACTUAL SE PERDIA, POR LO QUE SE GUARDA TAMBIEN VALORES EN AUX Y LUEGO DESPUES DEL MENSAJE SE HACE REFERENCIA EL OBJETO ACTUAL AL AUX
		detalleactivofijoAux.setId(detalleactivofijo.getId());
		detalleactivofijoAux.setVersionRow(detalleactivofijo.getVersionRow());					
	}
	
	public void ejecutarMantenimiento(MaintenanceType maintenanceType)throws Exception {	
		try	{								
			
			//this.startProcessDetalleActivoFijo();
		
			int intSelectedRow = this.jTableDatosDetalleActivoFijo.getSelectedRow();	       
			
			//PUEDE SER -1 CUANDO SE ELIMINA EN GUARDAR CAMBIOS
			if(intSelectedRow>=0 && maintenanceType!=MaintenanceType.GUARDARCAMBIOS) {
				//SE PIEDE INDICE SELECTED CON FILA TOTALES, ASEGURARSE QUE OBJETO ACTUAL ESTE EN FORMULARIO
					
				//ARCHITECTURE
				
				if(Constantes.ISUSAEJBLOGICLAYER) {
					this.detalleactivofijo =(DetalleActivoFijo) this.detalleactivofijoLogic.getDetalleActivoFijos().toArray()[this.jTableDatosDetalleActivoFijo.convertRowIndexToModel(intSelectedRow)];
				} else if(Constantes.ISUSAEJBREMOTE ||Constantes.ISUSAEJBHOME) {
					this.detalleactivofijo =(DetalleActivoFijo) this.detalleactivofijos.toArray()[this.jTableDatosDetalleActivoFijo.convertRowIndexToModel(intSelectedRow)];
				}
				
				//ARCHITECTURE
				
				if(DetalleActivoFijoJInternalFrame.ISBINDING_MANUAL_TABLA) {
					//this.setVariablesFormularioToObjetoActualDetalleActivoFijo(this.detalleactivofijo,true);
				}
				
				this.setVariablesFormularioToObjetoActualForeignKeysDetalleActivoFijo(this.detalleactivofijo);
			}
			
			//LUEGO DE TRAER DATOS CORRESPONDIENTES QUE COINCIDA LISTA TABLA QUITO FILA TOTALES
			if(this.conTotales) {
				//MEJOR LO DEJO, SI EXISTE EXCEPCION SE PIEDE FILA TOTALES Y ORDEN INDICE FILA ACTUAL
				//this.quitarFilaTotales();
			}
			
			this.cargarDatosCliente();
			
			this.datosDeep=new DatosDeep();
			
			//SE CAMBIA ESTADOS CON ERROR, ENTONCES SE EJECUTA ANTES
			//this.invalidValues = detalleactivofijoValidator.getInvalidValues(this.detalleactivofijo);
			
			//if(this.invalidValues==null || this.invalidValues.length<=0) {
			
			detalleactivofijoLogic.setDatosCliente(datosCliente);
			detalleactivofijoLogic.setIsConDeep(false);
			
			if(maintenanceType==MaintenanceType.NUEVO) {
				detalleactivofijoAux=new  DetalleActivoFijo();
				
				detalleactivofijoAux.setIsNew(true);
				detalleactivofijoAux.setIsChanged(true);
				
				detalleactivofijoAux.setDetalleActivoFijoOriginal(this.detalleactivofijo);
				
				detalleactivofijoAux.setId(this.detalleactivofijo.getId());	
				detalleactivofijoAux.setVersionRow(this.detalleactivofijo.getVersionRow());	
				detalleactivofijoAux.setid_empresa(this.detalleactivofijo.getid_empresa());	
				detalleactivofijoAux.setid_sucursal(this.detalleactivofijo.getid_sucursal());	
				detalleactivofijoAux.setid_detalle_grupo_activo_fijo(this.detalleactivofijo.getid_detalle_grupo_activo_fijo());	
				detalleactivofijoAux.setid_sub_grupo_activo_fijo(this.detalleactivofijo.getid_sub_grupo_activo_fijo());	
				detalleactivofijoAux.setid_tipo_ramo_activo_fijo(this.detalleactivofijo.getid_tipo_ramo_activo_fijo());	
				detalleactivofijoAux.setid_tipo_activo_fijo_empresa(this.detalleactivofijo.getid_tipo_activo_fijo_empresa());	
				detalleactivofijoAux.setid_tipo_depreciacion_empresa(this.detalleactivofijo.getid_tipo_depreciacion_empresa());	
				detalleactivofijoAux.setid_estado_activo_fijo(this.detalleactivofijo.getid_estado_activo_fijo());	
				detalleactivofijoAux.setid_cliente(this.detalleactivofijo.getid_cliente());	
				detalleactivofijoAux.setid_partida_presu(this.detalleactivofijo.getid_partida_presu());	
				detalleactivofijoAux.setcodigo(this.detalleactivofijo.getcodigo());	
				detalleactivofijoAux.setnombre(this.detalleactivofijo.getnombre());	
				detalleactivofijoAux.setserie(this.detalleactivofijo.getserie());	
				detalleactivofijoAux.setfecha_compra(this.detalleactivofijo.getfecha_compra());	
				detalleactivofijoAux.setfecha_mantenimiento(this.detalleactivofijo.getfecha_mantenimiento());	
				detalleactivofijoAux.setfecha_correccion(this.detalleactivofijo.getfecha_correccion());	
				detalleactivofijoAux.setfecha_depreciacion(this.detalleactivofijo.getfecha_depreciacion());	
				detalleactivofijoAux.setclave(this.detalleactivofijo.getclave());	
				detalleactivofijoAux.setmarca(this.detalleactivofijo.getmarca());	
				detalleactivofijoAux.setmodelo(this.detalleactivofijo.getmodelo());	
				detalleactivofijoAux.setcolor(this.detalleactivofijo.getcolor());	
				detalleactivofijoAux.setfecha(this.detalleactivofijo.getfecha());	
				detalleactivofijoAux.setvalor_util(this.detalleactivofijo.getvalor_util());	
				detalleactivofijoAux.setcosto_de_compra(this.detalleactivofijo.getcosto_de_compra());	
				detalleactivofijoAux.setvida_util(this.detalleactivofijo.getvida_util());	
				detalleactivofijoAux.setvalor_residual(this.detalleactivofijo.getvalor_residual());	
				detalleactivofijoAux.setcantidad(this.detalleactivofijo.getcantidad());	
				detalleactivofijoAux.setnombre_propietario(this.detalleactivofijo.getnombre_propietario());	
				detalleactivofijoAux.setresponsable(this.detalleactivofijo.getresponsable());	
				detalleactivofijoAux.setpath_foto(this.detalleactivofijo.getpath_foto());	
				detalleactivofijoAux.setnumero_comprobante(this.detalleactivofijo.getnumero_comprobante());	
				detalleactivofijoAux.setreferencia(this.detalleactivofijo.getreferencia());	
				detalleactivofijoAux.setvalor_cotizacion(this.detalleactivofijo.getvalor_cotizacion());	
				detalleactivofijoAux.setcon_partes(this.detalleactivofijo.getcon_partes());	
				detalleactivofijoAux.setcon_garantia(this.detalleactivofijo.getcon_garantia());	
				detalleactivofijoAux.setcon_existencia(this.detalleactivofijo.getcon_existencia());	
				detalleactivofijoAux.setfecha_baja(this.detalleactivofijo.getfecha_baja());	
				detalleactivofijoAux.setpath_foto2(this.detalleactivofijo.getpath_foto2());	
								
				//ARCHITECTURE
				if(Constantes.ISUSAEJBLOGICLAYER) {
					//NO ENTENDIBLE PORQUE PONER
					//if(this.detalleactivofijoSessionBean.getEstaModoGuardarRelaciones() 
					//	|| this.detalleactivofijoSessionBean.getEsGuardarRelacionado())	{
						actualizarLista(detalleactivofijoAux,detalleactivofijoLogic.getDetalleActivoFijos());
					//}
				} else if(Constantes.ISUSAEJBREMOTE||Constantes.ISUSAEJBHOME) {
					actualizarLista(detalleactivofijoAux,detalleactivofijos);
				}
				//ARCHITECTURE
				
				if(!isGuardarCambiosEnLote  && !this.detalleactivofijoSessionBean.getEstaModoGuardarRelaciones() 
						&& !this.detalleactivofijoSessionBean.getEsGuardarRelacionado())	{
					
					//ARCHITECTURE
					if(Constantes.ISUSAEJBLOGICLAYER) {
						detalleactivofijoLogic.saveDetalleActivoFijos();//WithConnection
						//detalleactivofijoLogic.getSetVersionRowDetalleActivoFijos();//WithConnection
					} else if(Constantes.ISUSAEJBREMOTE) {
					} else if(Constantes.ISUSAEJBHOME) {
					}
					//ARCHITECTURE		
					
					//POR BUG: EL OBJETO ACTUAL SE PERDIA, POR LO QUE SE GUARDA TAMBIEN VALORES EN AUX Y LUEGO DESPUES DEL MENSAJE SE HACE REFERENCIA EL OBJETO ACTUAL AL AUX
					this.bugActualizarReferenciaActual(this.detalleactivofijo,detalleactivofijoAux);
					
					this.refrescarForeignKeysDescripcionesDetalleActivoFijo();
				} else {
					//CUANDO ES MANTENIMIENTO MAESTRO DETALLE
					if(this.detalleactivofijoSessionBean.getEstaModoGuardarRelaciones()) {
						//GUARDAR RELACIONES
						//ARCHITECTURE
						if(Constantes.ISUSAEJBLOGICLAYER) {
							
							this.jInternalFrameDetalleFormDetalleActivoFijo.mantenimientoactivofijoBeanSwingJInternalFrame.mantenimientoactivofijoLogic.getMantenimientoActivoFijos().addAll(this.jInternalFrameDetalleFormDetalleActivoFijo.mantenimientoactivofijoBeanSwingJInternalFrame.mantenimientoactivofijosEliminados);
							this.jInternalFrameDetalleFormDetalleActivoFijo.serviciotransporteBeanSwingJInternalFrame.serviciotransporteLogic.getServicioTransportes().addAll(this.jInternalFrameDetalleFormDetalleActivoFijo.serviciotransporteBeanSwingJInternalFrame.serviciotransportesEliminados);
							this.jInternalFrameDetalleFormDetalleActivoFijo.movimientoactivofijoBeanSwingJInternalFrame.movimientoactivofijoLogic.getMovimientoActivoFijos().addAll(this.jInternalFrameDetalleFormDetalleActivoFijo.movimientoactivofijoBeanSwingJInternalFrame.movimientoactivofijosEliminados);
							this.jInternalFrameDetalleFormDetalleActivoFijo.vehiculoBeanSwingJInternalFrame.vehiculoLogic.getVehiculos().addAll(this.jInternalFrameDetalleFormDetalleActivoFijo.vehiculoBeanSwingJInternalFrame.vehiculosEliminados);
							this.jInternalFrameDetalleFormDetalleActivoFijo.metododepreciacionBeanSwingJInternalFrame.metododepreciacionLogic.getMetodoDepreciacions().addAll(this.jInternalFrameDetalleFormDetalleActivoFijo.metododepreciacionBeanSwingJInternalFrame.metododepreciacionsEliminados);
							this.jInternalFrameDetalleFormDetalleActivoFijo.responsableactivofijoBeanSwingJInternalFrame.responsableactivofijoLogic.getResponsableActivoFijos().addAll(this.jInternalFrameDetalleFormDetalleActivoFijo.responsableactivofijoBeanSwingJInternalFrame.responsableactivofijosEliminados);
							this.jInternalFrameDetalleFormDetalleActivoFijo.depreciacionactivofijoBeanSwingJInternalFrame.depreciacionactivofijoLogic.getDepreciacionActivoFijos().addAll(this.jInternalFrameDetalleFormDetalleActivoFijo.depreciacionactivofijoBeanSwingJInternalFrame.depreciacionactivofijosEliminados);
							this.jInternalFrameDetalleFormDetalleActivoFijo.gastodepreciacioncentrocostoBeanSwingJInternalFrame.gastodepreciacioncentrocostoLogic.getGastoDepreciacionCentroCostos().addAll(this.jInternalFrameDetalleFormDetalleActivoFijo.gastodepreciacioncentrocostoBeanSwingJInternalFrame.gastodepreciacioncentrocostosEliminados);
							this.jInternalFrameDetalleFormDetalleActivoFijo.parteactivofijoBeanSwingJInternalFrame.parteactivofijoLogic.getParteActivoFijos().addAll(this.jInternalFrameDetalleFormDetalleActivoFijo.parteactivofijoBeanSwingJInternalFrame.parteactivofijosEliminados);
						} else if(Constantes.ISUSAEJBREMOTE ||Constantes.ISUSAEJBHOME) {
							
							this.jInternalFrameDetalleFormDetalleActivoFijo.mantenimientoactivofijoBeanSwingJInternalFrame.mantenimientoactivofijos.addAll(this.jInternalFrameDetalleFormDetalleActivoFijo.mantenimientoactivofijoBeanSwingJInternalFrame.mantenimientoactivofijosEliminados);
							this.jInternalFrameDetalleFormDetalleActivoFijo.serviciotransporteBeanSwingJInternalFrame.serviciotransportes.addAll(this.jInternalFrameDetalleFormDetalleActivoFijo.serviciotransporteBeanSwingJInternalFrame.serviciotransportesEliminados);
							this.jInternalFrameDetalleFormDetalleActivoFijo.movimientoactivofijoBeanSwingJInternalFrame.movimientoactivofijos.addAll(this.jInternalFrameDetalleFormDetalleActivoFijo.movimientoactivofijoBeanSwingJInternalFrame.movimientoactivofijosEliminados);
							this.jInternalFrameDetalleFormDetalleActivoFijo.vehiculoBeanSwingJInternalFrame.vehiculos.addAll(this.jInternalFrameDetalleFormDetalleActivoFijo.vehiculoBeanSwingJInternalFrame.vehiculosEliminados);
							this.jInternalFrameDetalleFormDetalleActivoFijo.metododepreciacionBeanSwingJInternalFrame.metododepreciacions.addAll(this.jInternalFrameDetalleFormDetalleActivoFijo.metododepreciacionBeanSwingJInternalFrame.metododepreciacionsEliminados);
							this.jInternalFrameDetalleFormDetalleActivoFijo.responsableactivofijoBeanSwingJInternalFrame.responsableactivofijos.addAll(this.jInternalFrameDetalleFormDetalleActivoFijo.responsableactivofijoBeanSwingJInternalFrame.responsableactivofijosEliminados);
							this.jInternalFrameDetalleFormDetalleActivoFijo.depreciacionactivofijoBeanSwingJInternalFrame.depreciacionactivofijos.addAll(this.jInternalFrameDetalleFormDetalleActivoFijo.depreciacionactivofijoBeanSwingJInternalFrame.depreciacionactivofijosEliminados);
							this.jInternalFrameDetalleFormDetalleActivoFijo.gastodepreciacioncentrocostoBeanSwingJInternalFrame.gastodepreciacioncentrocostos.addAll(this.jInternalFrameDetalleFormDetalleActivoFijo.gastodepreciacioncentrocostoBeanSwingJInternalFrame.gastodepreciacioncentrocostosEliminados);
							this.jInternalFrameDetalleFormDetalleActivoFijo.parteactivofijoBeanSwingJInternalFrame.parteactivofijos.addAll(this.jInternalFrameDetalleFormDetalleActivoFijo.parteactivofijoBeanSwingJInternalFrame.parteactivofijosEliminados);
						}
						//ARCHITECTURE	
						
						if(!this.detalleactivofijoSessionBean.getEsGuardarRelacionado()) {
							//QUITAR FILA TOTAL
							//ARCHITECTURE
							if(Constantes.ISUSAEJBLOGICLAYER) {
							
								if(this.jInternalFrameDetalleFormDetalleActivoFijo.mantenimientoactivofijoBeanSwingJInternalFrame!=null && this.jInternalFrameDetalleFormDetalleActivoFijo.mantenimientoactivofijoBeanSwingJInternalFrame.conTotales) {/*this.jInternalFrameDetalleFormDetalleActivoFijo.mantenimientoactivofijoBeanSwingJInternalFrame.quitarFilaTotales();*/}
								if(this.jInternalFrameDetalleFormDetalleActivoFijo.serviciotransporteBeanSwingJInternalFrame!=null && this.jInternalFrameDetalleFormDetalleActivoFijo.serviciotransporteBeanSwingJInternalFrame.conTotales) {/*this.jInternalFrameDetalleFormDetalleActivoFijo.serviciotransporteBeanSwingJInternalFrame.quitarFilaTotales();*/}
									if(this.jInternalFrameDetalleFormDetalleActivoFijo.serviciotransporteBeanSwingJInternalFrame.jInternalFrameDetalleFormServicioTransporte.detalleserviciotransporteBeanSwingJInternalFrame!=null && this.jInternalFrameDetalleFormDetalleActivoFijo.serviciotransporteBeanSwingJInternalFrame.jInternalFrameDetalleFormServicioTransporte.detalleserviciotransporteBeanSwingJInternalFrame.conTotales) {/*this.jInternalFrameDetalleFormDetalleActivoFijo.serviciotransporteBeanSwingJInternalFrame.jInternalFrameDetalleFormServicioTransporte.detalleserviciotransporteBeanSwingJInternalFrame.quitarFilaTotales();*/}
								if(this.jInternalFrameDetalleFormDetalleActivoFijo.movimientoactivofijoBeanSwingJInternalFrame!=null && this.jInternalFrameDetalleFormDetalleActivoFijo.movimientoactivofijoBeanSwingJInternalFrame.conTotales) {/*this.jInternalFrameDetalleFormDetalleActivoFijo.movimientoactivofijoBeanSwingJInternalFrame.quitarFilaTotales();*/}
								if(this.jInternalFrameDetalleFormDetalleActivoFijo.vehiculoBeanSwingJInternalFrame!=null && this.jInternalFrameDetalleFormDetalleActivoFijo.vehiculoBeanSwingJInternalFrame.conTotales) {/*this.jInternalFrameDetalleFormDetalleActivoFijo.vehiculoBeanSwingJInternalFrame.quitarFilaTotales();*/}
									if(this.jInternalFrameDetalleFormDetalleActivoFijo.vehiculoBeanSwingJInternalFrame.jInternalFrameDetalleFormVehiculo.serviciotransporteBeanSwingJInternalFrame!=null && this.jInternalFrameDetalleFormDetalleActivoFijo.vehiculoBeanSwingJInternalFrame.jInternalFrameDetalleFormVehiculo.serviciotransporteBeanSwingJInternalFrame.conTotales) {/*this.jInternalFrameDetalleFormDetalleActivoFijo.vehiculoBeanSwingJInternalFrame.jInternalFrameDetalleFormVehiculo.serviciotransporteBeanSwingJInternalFrame.quitarFilaTotales();*/}
									if(this.jInternalFrameDetalleFormDetalleActivoFijo.vehiculoBeanSwingJInternalFrame.jInternalFrameDetalleFormVehiculo.serviciotransporteBeanSwingJInternalFrame.jInternalFrameDetalleFormServicioTransporte.detalleserviciotransporteBeanSwingJInternalFrame!=null && this.jInternalFrameDetalleFormDetalleActivoFijo.vehiculoBeanSwingJInternalFrame.jInternalFrameDetalleFormVehiculo.serviciotransporteBeanSwingJInternalFrame.jInternalFrameDetalleFormServicioTransporte.detalleserviciotransporteBeanSwingJInternalFrame.conTotales) {/*this.jInternalFrameDetalleFormDetalleActivoFijo.vehiculoBeanSwingJInternalFrame.jInternalFrameDetalleFormVehiculo.serviciotransporteBeanSwingJInternalFrame.jInternalFrameDetalleFormServicioTransporte.detalleserviciotransporteBeanSwingJInternalFrame.quitarFilaTotales();*/}
								if(this.jInternalFrameDetalleFormDetalleActivoFijo.metododepreciacionBeanSwingJInternalFrame!=null && this.jInternalFrameDetalleFormDetalleActivoFijo.metododepreciacionBeanSwingJInternalFrame.conTotales) {/*this.jInternalFrameDetalleFormDetalleActivoFijo.metododepreciacionBeanSwingJInternalFrame.quitarFilaTotales();*/}
								if(this.jInternalFrameDetalleFormDetalleActivoFijo.responsableactivofijoBeanSwingJInternalFrame!=null && this.jInternalFrameDetalleFormDetalleActivoFijo.responsableactivofijoBeanSwingJInternalFrame.conTotales) {/*this.jInternalFrameDetalleFormDetalleActivoFijo.responsableactivofijoBeanSwingJInternalFrame.quitarFilaTotales();*/}
								if(this.jInternalFrameDetalleFormDetalleActivoFijo.depreciacionactivofijoBeanSwingJInternalFrame!=null && this.jInternalFrameDetalleFormDetalleActivoFijo.depreciacionactivofijoBeanSwingJInternalFrame.conTotales) {/*this.jInternalFrameDetalleFormDetalleActivoFijo.depreciacionactivofijoBeanSwingJInternalFrame.quitarFilaTotales();*/}
								if(this.jInternalFrameDetalleFormDetalleActivoFijo.gastodepreciacioncentrocostoBeanSwingJInternalFrame!=null && this.jInternalFrameDetalleFormDetalleActivoFijo.gastodepreciacioncentrocostoBeanSwingJInternalFrame.conTotales) {/*this.jInternalFrameDetalleFormDetalleActivoFijo.gastodepreciacioncentrocostoBeanSwingJInternalFrame.quitarFilaTotales();*/}
								if(this.jInternalFrameDetalleFormDetalleActivoFijo.parteactivofijoBeanSwingJInternalFrame!=null && this.jInternalFrameDetalleFormDetalleActivoFijo.parteactivofijoBeanSwingJInternalFrame.conTotales) {/*this.jInternalFrameDetalleFormDetalleActivoFijo.parteactivofijoBeanSwingJInternalFrame.quitarFilaTotales();*/}
							} else if(Constantes.ISUSAEJBREMOTE ||Constantes.ISUSAEJBHOME) {
							
								if(this.jInternalFrameDetalleFormDetalleActivoFijo.mantenimientoactivofijoBeanSwingJInternalFrame!=null && this.jInternalFrameDetalleFormDetalleActivoFijo.mantenimientoactivofijoBeanSwingJInternalFrame.conTotales) {/*this.jInternalFrameDetalleFormDetalleActivoFijo.mantenimientoactivofijoBeanSwingJInternalFrame.quitarFilaTotales();*/}
								if(this.jInternalFrameDetalleFormDetalleActivoFijo.serviciotransporteBeanSwingJInternalFrame!=null && this.jInternalFrameDetalleFormDetalleActivoFijo.serviciotransporteBeanSwingJInternalFrame.conTotales) {/*this.jInternalFrameDetalleFormDetalleActivoFijo.serviciotransporteBeanSwingJInternalFrame.quitarFilaTotales();*/}
									if(this.jInternalFrameDetalleFormDetalleActivoFijo.serviciotransporteBeanSwingJInternalFrame.jInternalFrameDetalleFormServicioTransporte.detalleserviciotransporteBeanSwingJInternalFrame!=null && this.jInternalFrameDetalleFormDetalleActivoFijo.serviciotransporteBeanSwingJInternalFrame.jInternalFrameDetalleFormServicioTransporte.detalleserviciotransporteBeanSwingJInternalFrame.conTotales) {/*this.jInternalFrameDetalleFormDetalleActivoFijo.serviciotransporteBeanSwingJInternalFrame.jInternalFrameDetalleFormServicioTransporte.detalleserviciotransporteBeanSwingJInternalFrame.quitarFilaTotales();*/}
								if(this.jInternalFrameDetalleFormDetalleActivoFijo.movimientoactivofijoBeanSwingJInternalFrame!=null && this.jInternalFrameDetalleFormDetalleActivoFijo.movimientoactivofijoBeanSwingJInternalFrame.conTotales) {/*this.jInternalFrameDetalleFormDetalleActivoFijo.movimientoactivofijoBeanSwingJInternalFrame.quitarFilaTotales();*/}
								if(this.jInternalFrameDetalleFormDetalleActivoFijo.vehiculoBeanSwingJInternalFrame!=null && this.jInternalFrameDetalleFormDetalleActivoFijo.vehiculoBeanSwingJInternalFrame.conTotales) {/*this.jInternalFrameDetalleFormDetalleActivoFijo.vehiculoBeanSwingJInternalFrame.quitarFilaTotales();*/}
									if(this.jInternalFrameDetalleFormDetalleActivoFijo.vehiculoBeanSwingJInternalFrame.jInternalFrameDetalleFormVehiculo.serviciotransporteBeanSwingJInternalFrame!=null && this.jInternalFrameDetalleFormDetalleActivoFijo.vehiculoBeanSwingJInternalFrame.jInternalFrameDetalleFormVehiculo.serviciotransporteBeanSwingJInternalFrame.conTotales) {/*this.jInternalFrameDetalleFormDetalleActivoFijo.vehiculoBeanSwingJInternalFrame.jInternalFrameDetalleFormVehiculo.serviciotransporteBeanSwingJInternalFrame.quitarFilaTotales();*/}
									if(this.jInternalFrameDetalleFormDetalleActivoFijo.vehiculoBeanSwingJInternalFrame.jInternalFrameDetalleFormVehiculo.serviciotransporteBeanSwingJInternalFrame.jInternalFrameDetalleFormServicioTransporte.detalleserviciotransporteBeanSwingJInternalFrame!=null && this.jInternalFrameDetalleFormDetalleActivoFijo.vehiculoBeanSwingJInternalFrame.jInternalFrameDetalleFormVehiculo.serviciotransporteBeanSwingJInternalFrame.jInternalFrameDetalleFormServicioTransporte.detalleserviciotransporteBeanSwingJInternalFrame.conTotales) {/*this.jInternalFrameDetalleFormDetalleActivoFijo.vehiculoBeanSwingJInternalFrame.jInternalFrameDetalleFormVehiculo.serviciotransporteBeanSwingJInternalFrame.jInternalFrameDetalleFormServicioTransporte.detalleserviciotransporteBeanSwingJInternalFrame.quitarFilaTotales();*/}
								if(this.jInternalFrameDetalleFormDetalleActivoFijo.metododepreciacionBeanSwingJInternalFrame!=null && this.jInternalFrameDetalleFormDetalleActivoFijo.metododepreciacionBeanSwingJInternalFrame.conTotales) {/*this.jInternalFrameDetalleFormDetalleActivoFijo.metododepreciacionBeanSwingJInternalFrame.quitarFilaTotales();*/}
								if(this.jInternalFrameDetalleFormDetalleActivoFijo.responsableactivofijoBeanSwingJInternalFrame!=null && this.jInternalFrameDetalleFormDetalleActivoFijo.responsableactivofijoBeanSwingJInternalFrame.conTotales) {/*this.jInternalFrameDetalleFormDetalleActivoFijo.responsableactivofijoBeanSwingJInternalFrame.quitarFilaTotales();*/}
								if(this.jInternalFrameDetalleFormDetalleActivoFijo.depreciacionactivofijoBeanSwingJInternalFrame!=null && this.jInternalFrameDetalleFormDetalleActivoFijo.depreciacionactivofijoBeanSwingJInternalFrame.conTotales) {/*this.jInternalFrameDetalleFormDetalleActivoFijo.depreciacionactivofijoBeanSwingJInternalFrame.quitarFilaTotales();*/}
								if(this.jInternalFrameDetalleFormDetalleActivoFijo.gastodepreciacioncentrocostoBeanSwingJInternalFrame!=null && this.jInternalFrameDetalleFormDetalleActivoFijo.gastodepreciacioncentrocostoBeanSwingJInternalFrame.conTotales) {/*this.jInternalFrameDetalleFormDetalleActivoFijo.gastodepreciacioncentrocostoBeanSwingJInternalFrame.quitarFilaTotales();*/}
								if(this.jInternalFrameDetalleFormDetalleActivoFijo.parteactivofijoBeanSwingJInternalFrame!=null && this.jInternalFrameDetalleFormDetalleActivoFijo.parteactivofijoBeanSwingJInternalFrame.conTotales) {/*this.jInternalFrameDetalleFormDetalleActivoFijo.parteactivofijoBeanSwingJInternalFrame.quitarFilaTotales();*/}	
							}
							//ARCHITECTURE
												
							//ARCHITECTURE
							if(Constantes.ISUSAEJBLOGICLAYER) {
								detalleactivofijoLogic.saveDetalleActivoFijoRelaciones(detalleactivofijoAux,this.jInternalFrameDetalleFormDetalleActivoFijo.mantenimientoactivofijoBeanSwingJInternalFrame.mantenimientoactivofijoLogic.getMantenimientoActivoFijos(),this.jInternalFrameDetalleFormDetalleActivoFijo.serviciotransporteBeanSwingJInternalFrame.serviciotransporteLogic.getServicioTransportes(),this.jInternalFrameDetalleFormDetalleActivoFijo.movimientoactivofijoBeanSwingJInternalFrame.movimientoactivofijoLogic.getMovimientoActivoFijos(),this.jInternalFrameDetalleFormDetalleActivoFijo.vehiculoBeanSwingJInternalFrame.vehiculoLogic.getVehiculos(),this.jInternalFrameDetalleFormDetalleActivoFijo.metododepreciacionBeanSwingJInternalFrame.metododepreciacionLogic.getMetodoDepreciacions(),this.jInternalFrameDetalleFormDetalleActivoFijo.responsableactivofijoBeanSwingJInternalFrame.responsableactivofijoLogic.getResponsableActivoFijos(),this.jInternalFrameDetalleFormDetalleActivoFijo.depreciacionactivofijoBeanSwingJInternalFrame.depreciacionactivofijoLogic.getDepreciacionActivoFijos(),this.jInternalFrameDetalleFormDetalleActivoFijo.gastodepreciacioncentrocostoBeanSwingJInternalFrame.gastodepreciacioncentrocostoLogic.getGastoDepreciacionCentroCostos(),this.jInternalFrameDetalleFormDetalleActivoFijo.parteactivofijoBeanSwingJInternalFrame.parteactivofijoLogic.getParteActivoFijos());//WithConnection
								//detalleactivofijoLogic.getSetVersionRowDetalleActivoFijos();//WithConnection
							} else if(Constantes.ISUSAEJBREMOTE) {
							} else if(Constantes.ISUSAEJBHOME) {
							}
							//ARCHITECTURE
							
							//POR BUG: EL OBJETO ACTUAL SE PERDIA, POR LO QUE SE GUARDA TAMBIEN VALORES EN AUX Y LUEGO DESPUES DEL MENSAJE SE HACE REFERENCIA EL OBJETO ACTUAL AL AUX
							this.bugActualizarReferenciaActual(this.detalleactivofijo,detalleactivofijoAux);
					
					
							//ARCHITECTURE
							if(Constantes.ISUSAEJBLOGICLAYER) {
								
							this.jInternalFrameDetalleFormDetalleActivoFijo.mantenimientoactivofijoBeanSwingJInternalFrame.mantenimientoactivofijoLogic.setMantenimientoActivoFijos(new ArrayList<MantenimientoActivoFijo>());
							this.jInternalFrameDetalleFormDetalleActivoFijo.serviciotransporteBeanSwingJInternalFrame.serviciotransporteLogic.setServicioTransportes(new ArrayList<ServicioTransporte>());
							this.jInternalFrameDetalleFormDetalleActivoFijo.movimientoactivofijoBeanSwingJInternalFrame.movimientoactivofijoLogic.setMovimientoActivoFijos(new ArrayList<MovimientoActivoFijo>());
							this.jInternalFrameDetalleFormDetalleActivoFijo.vehiculoBeanSwingJInternalFrame.vehiculoLogic.setVehiculos(new ArrayList<Vehiculo>());
							this.jInternalFrameDetalleFormDetalleActivoFijo.metododepreciacionBeanSwingJInternalFrame.metododepreciacionLogic.setMetodoDepreciacions(new ArrayList<MetodoDepreciacion>());
							this.jInternalFrameDetalleFormDetalleActivoFijo.responsableactivofijoBeanSwingJInternalFrame.responsableactivofijoLogic.setResponsableActivoFijos(new ArrayList<ResponsableActivoFijo>());
							this.jInternalFrameDetalleFormDetalleActivoFijo.depreciacionactivofijoBeanSwingJInternalFrame.depreciacionactivofijoLogic.setDepreciacionActivoFijos(new ArrayList<DepreciacionActivoFijo>());
							this.jInternalFrameDetalleFormDetalleActivoFijo.gastodepreciacioncentrocostoBeanSwingJInternalFrame.gastodepreciacioncentrocostoLogic.setGastoDepreciacionCentroCostos(new ArrayList<GastoDepreciacionCentroCosto>());
							this.jInternalFrameDetalleFormDetalleActivoFijo.parteactivofijoBeanSwingJInternalFrame.parteactivofijoLogic.setParteActivoFijos(new ArrayList<ParteActivoFijo>());
							} else if(Constantes.ISUSAEJBREMOTE ||Constantes.ISUSAEJBHOME) {
								
							this.jInternalFrameDetalleFormDetalleActivoFijo.mantenimientoactivofijoBeanSwingJInternalFrame.mantenimientoactivofijos= new ArrayList<MantenimientoActivoFijo>();
							this.jInternalFrameDetalleFormDetalleActivoFijo.serviciotransporteBeanSwingJInternalFrame.serviciotransportes= new ArrayList<ServicioTransporte>();
							this.jInternalFrameDetalleFormDetalleActivoFijo.movimientoactivofijoBeanSwingJInternalFrame.movimientoactivofijos= new ArrayList<MovimientoActivoFijo>();
							this.jInternalFrameDetalleFormDetalleActivoFijo.vehiculoBeanSwingJInternalFrame.vehiculos= new ArrayList<Vehiculo>();
							this.jInternalFrameDetalleFormDetalleActivoFijo.metododepreciacionBeanSwingJInternalFrame.metododepreciacions= new ArrayList<MetodoDepreciacion>();
							this.jInternalFrameDetalleFormDetalleActivoFijo.responsableactivofijoBeanSwingJInternalFrame.responsableactivofijos= new ArrayList<ResponsableActivoFijo>();
							this.jInternalFrameDetalleFormDetalleActivoFijo.depreciacionactivofijoBeanSwingJInternalFrame.depreciacionactivofijos= new ArrayList<DepreciacionActivoFijo>();
							this.jInternalFrameDetalleFormDetalleActivoFijo.gastodepreciacioncentrocostoBeanSwingJInternalFrame.gastodepreciacioncentrocostos= new ArrayList<GastoDepreciacionCentroCosto>();
							this.jInternalFrameDetalleFormDetalleActivoFijo.parteactivofijoBeanSwingJInternalFrame.parteactivofijos= new ArrayList<ParteActivoFijo>();
							}
							//ARCHITECTURE	
						} else {
							
							

							if(this.jInternalFrameDetalleFormDetalleActivoFijo.mantenimientoactivofijoBeanSwingJInternalFrame!=null && this.jInternalFrameDetalleFormDetalleActivoFijo.mantenimientoactivofijoBeanSwingJInternalFrame.conTotales) {this.jInternalFrameDetalleFormDetalleActivoFijo.mantenimientoactivofijoBeanSwingJInternalFrame.quitarFilaTotales();}
							detalleactivofijoAux.setMantenimientoActivoFijos(this.jInternalFrameDetalleFormDetalleActivoFijo.mantenimientoactivofijoBeanSwingJInternalFrame.mantenimientoactivofijoLogic.getMantenimientoActivoFijos());

							if(this.jInternalFrameDetalleFormDetalleActivoFijo.serviciotransporteBeanSwingJInternalFrame!=null && this.jInternalFrameDetalleFormDetalleActivoFijo.serviciotransporteBeanSwingJInternalFrame.conTotales) {this.jInternalFrameDetalleFormDetalleActivoFijo.serviciotransporteBeanSwingJInternalFrame.quitarFilaTotales();}
							detalleactivofijoAux.setServicioTransportes(this.jInternalFrameDetalleFormDetalleActivoFijo.serviciotransporteBeanSwingJInternalFrame.serviciotransporteLogic.getServicioTransportes());

							if(this.jInternalFrameDetalleFormDetalleActivoFijo.movimientoactivofijoBeanSwingJInternalFrame!=null && this.jInternalFrameDetalleFormDetalleActivoFijo.movimientoactivofijoBeanSwingJInternalFrame.conTotales) {this.jInternalFrameDetalleFormDetalleActivoFijo.movimientoactivofijoBeanSwingJInternalFrame.quitarFilaTotales();}
							detalleactivofijoAux.setMovimientoActivoFijoDestinos(this.jInternalFrameDetalleFormDetalleActivoFijo.movimientoactivofijoBeanSwingJInternalFrame.movimientoactivofijoLogic.getMovimientoActivoFijos());

							if(this.jInternalFrameDetalleFormDetalleActivoFijo.vehiculoBeanSwingJInternalFrame!=null && this.jInternalFrameDetalleFormDetalleActivoFijo.vehiculoBeanSwingJInternalFrame.conTotales) {this.jInternalFrameDetalleFormDetalleActivoFijo.vehiculoBeanSwingJInternalFrame.quitarFilaTotales();}
							detalleactivofijoAux.setVehiculos(this.jInternalFrameDetalleFormDetalleActivoFijo.vehiculoBeanSwingJInternalFrame.vehiculoLogic.getVehiculos());

							if(this.jInternalFrameDetalleFormDetalleActivoFijo.metododepreciacionBeanSwingJInternalFrame!=null && this.jInternalFrameDetalleFormDetalleActivoFijo.metododepreciacionBeanSwingJInternalFrame.conTotales) {this.jInternalFrameDetalleFormDetalleActivoFijo.metododepreciacionBeanSwingJInternalFrame.quitarFilaTotales();}
							detalleactivofijoAux.setMetodoDepreciacions(this.jInternalFrameDetalleFormDetalleActivoFijo.metododepreciacionBeanSwingJInternalFrame.metododepreciacionLogic.getMetodoDepreciacions());

							if(this.jInternalFrameDetalleFormDetalleActivoFijo.responsableactivofijoBeanSwingJInternalFrame!=null && this.jInternalFrameDetalleFormDetalleActivoFijo.responsableactivofijoBeanSwingJInternalFrame.conTotales) {this.jInternalFrameDetalleFormDetalleActivoFijo.responsableactivofijoBeanSwingJInternalFrame.quitarFilaTotales();}
							detalleactivofijoAux.setResponsableActivoFijos(this.jInternalFrameDetalleFormDetalleActivoFijo.responsableactivofijoBeanSwingJInternalFrame.responsableactivofijoLogic.getResponsableActivoFijos());

							if(this.jInternalFrameDetalleFormDetalleActivoFijo.depreciacionactivofijoBeanSwingJInternalFrame!=null && this.jInternalFrameDetalleFormDetalleActivoFijo.depreciacionactivofijoBeanSwingJInternalFrame.conTotales) {this.jInternalFrameDetalleFormDetalleActivoFijo.depreciacionactivofijoBeanSwingJInternalFrame.quitarFilaTotales();}
							detalleactivofijoAux.setDepreciacionActivoFijos(this.jInternalFrameDetalleFormDetalleActivoFijo.depreciacionactivofijoBeanSwingJInternalFrame.depreciacionactivofijoLogic.getDepreciacionActivoFijos());

							if(this.jInternalFrameDetalleFormDetalleActivoFijo.gastodepreciacioncentrocostoBeanSwingJInternalFrame!=null && this.jInternalFrameDetalleFormDetalleActivoFijo.gastodepreciacioncentrocostoBeanSwingJInternalFrame.conTotales) {this.jInternalFrameDetalleFormDetalleActivoFijo.gastodepreciacioncentrocostoBeanSwingJInternalFrame.quitarFilaTotales();}
							detalleactivofijoAux.setGastoDepreciacionCentroCostos(this.jInternalFrameDetalleFormDetalleActivoFijo.gastodepreciacioncentrocostoBeanSwingJInternalFrame.gastodepreciacioncentrocostoLogic.getGastoDepreciacionCentroCostos());

							if(this.jInternalFrameDetalleFormDetalleActivoFijo.parteactivofijoBeanSwingJInternalFrame!=null && this.jInternalFrameDetalleFormDetalleActivoFijo.parteactivofijoBeanSwingJInternalFrame.conTotales) {this.jInternalFrameDetalleFormDetalleActivoFijo.parteactivofijoBeanSwingJInternalFrame.quitarFilaTotales();}
							detalleactivofijoAux.setParteActivoFijos(this.jInternalFrameDetalleFormDetalleActivoFijo.parteactivofijoBeanSwingJInternalFrame.parteactivofijoLogic.getParteActivoFijos());
							
							//ARCHITECTURE
							if(Constantes.ISUSAEJBLOGICLAYER) {
								if(this.detalleactivofijoSessionBean.getEstaModoGuardarRelaciones() 
									|| this.detalleactivofijoSessionBean.getEsGuardarRelacionado())	{
									actualizarLista(detalleactivofijoAux,detalleactivofijoLogic.getDetalleActivoFijos());
								}
							} else if(Constantes.ISUSAEJBREMOTE||Constantes.ISUSAEJBHOME) {
								actualizarLista(detalleactivofijoAux,detalleactivofijos);
							}
							//ARCHITECTURE
							
							//AQUI EL ID NEGATIVO ES EL ID BUSCADO, YA QUE NO SE GENERA OTRO EN LA DB POR INGRESAR UNO NUEVO
							//POR BUG: EL OBJETO ACTUAL SE PERDIA, POR LO QUE SE GUARDA TAMBIEN VALORES EN AUX Y LUEGO DESPUES DEL MENSAJE SE HACE REFERENCIA EL OBJETO ACTUAL AL AUX
							//this.bugActualizarReferenciaActual(this.detalleactivofijo,detalleactivofijoAux);												
						}
					}
				}
			} else if(maintenanceType==MaintenanceType.ACTUALIZAR) {
				detalleactivofijoAux=new  DetalleActivoFijo();
				
				//PUEDE QUE SE ACTUALIZE ALGUN REGISTRO NUEVO
				if(!this.detalleactivofijoSessionBean.getEsGuardarRelacionado() 
					|| (this.detalleactivofijoSessionBean.getEsGuardarRelacionado() && this.detalleactivofijo.getId()>=0)) {
						
					detalleactivofijoAux.setIsNew(false);
				}
				
				detalleactivofijoAux.setIsDeleted(false);
			
				detalleactivofijoAux.setId(this.detalleactivofijo.getId());	
				detalleactivofijoAux.setVersionRow(this.detalleactivofijo.getVersionRow());	
				detalleactivofijoAux.setid_empresa(this.detalleactivofijo.getid_empresa());	
				detalleactivofijoAux.setid_sucursal(this.detalleactivofijo.getid_sucursal());	
				detalleactivofijoAux.setid_detalle_grupo_activo_fijo(this.detalleactivofijo.getid_detalle_grupo_activo_fijo());	
				detalleactivofijoAux.setid_sub_grupo_activo_fijo(this.detalleactivofijo.getid_sub_grupo_activo_fijo());	
				detalleactivofijoAux.setid_tipo_ramo_activo_fijo(this.detalleactivofijo.getid_tipo_ramo_activo_fijo());	
				detalleactivofijoAux.setid_tipo_activo_fijo_empresa(this.detalleactivofijo.getid_tipo_activo_fijo_empresa());	
				detalleactivofijoAux.setid_tipo_depreciacion_empresa(this.detalleactivofijo.getid_tipo_depreciacion_empresa());	
				detalleactivofijoAux.setid_estado_activo_fijo(this.detalleactivofijo.getid_estado_activo_fijo());	
				detalleactivofijoAux.setid_cliente(this.detalleactivofijo.getid_cliente());	
				detalleactivofijoAux.setid_partida_presu(this.detalleactivofijo.getid_partida_presu());	
				detalleactivofijoAux.setcodigo(this.detalleactivofijo.getcodigo());	
				detalleactivofijoAux.setnombre(this.detalleactivofijo.getnombre());	
				detalleactivofijoAux.setserie(this.detalleactivofijo.getserie());	
				detalleactivofijoAux.setfecha_compra(this.detalleactivofijo.getfecha_compra());	
				detalleactivofijoAux.setfecha_mantenimiento(this.detalleactivofijo.getfecha_mantenimiento());	
				detalleactivofijoAux.setfecha_correccion(this.detalleactivofijo.getfecha_correccion());	
				detalleactivofijoAux.setfecha_depreciacion(this.detalleactivofijo.getfecha_depreciacion());	
				detalleactivofijoAux.setclave(this.detalleactivofijo.getclave());	
				detalleactivofijoAux.setmarca(this.detalleactivofijo.getmarca());	
				detalleactivofijoAux.setmodelo(this.detalleactivofijo.getmodelo());	
				detalleactivofijoAux.setcolor(this.detalleactivofijo.getcolor());	
				detalleactivofijoAux.setfecha(this.detalleactivofijo.getfecha());	
				detalleactivofijoAux.setvalor_util(this.detalleactivofijo.getvalor_util());	
				detalleactivofijoAux.setcosto_de_compra(this.detalleactivofijo.getcosto_de_compra());	
				detalleactivofijoAux.setvida_util(this.detalleactivofijo.getvida_util());	
				detalleactivofijoAux.setvalor_residual(this.detalleactivofijo.getvalor_residual());	
				detalleactivofijoAux.setcantidad(this.detalleactivofijo.getcantidad());	
				detalleactivofijoAux.setnombre_propietario(this.detalleactivofijo.getnombre_propietario());	
				detalleactivofijoAux.setresponsable(this.detalleactivofijo.getresponsable());	
				detalleactivofijoAux.setpath_foto(this.detalleactivofijo.getpath_foto());	
				detalleactivofijoAux.setnumero_comprobante(this.detalleactivofijo.getnumero_comprobante());	
				detalleactivofijoAux.setreferencia(this.detalleactivofijo.getreferencia());	
				detalleactivofijoAux.setvalor_cotizacion(this.detalleactivofijo.getvalor_cotizacion());	
				detalleactivofijoAux.setcon_partes(this.detalleactivofijo.getcon_partes());	
				detalleactivofijoAux.setcon_garantia(this.detalleactivofijo.getcon_garantia());	
				detalleactivofijoAux.setcon_existencia(this.detalleactivofijo.getcon_existencia());	
				detalleactivofijoAux.setfecha_baja(this.detalleactivofijo.getfecha_baja());	
				detalleactivofijoAux.setpath_foto2(this.detalleactivofijo.getpath_foto2());	
				
				//ARCHITECTURE
				if(Constantes.ISUSAEJBLOGICLAYER) {
					actualizarLista(detalleactivofijoAux,detalleactivofijoLogic.getDetalleActivoFijos());
				} else if(Constantes.ISUSAEJBREMOTE||Constantes.ISUSAEJBHOME) {
					actualizarLista(detalleactivofijoAux,detalleactivofijos);
				}
				//ARCHITECTURE
				
				if(!isGuardarCambiosEnLote && !this.detalleactivofijoSessionBean.getEstaModoGuardarRelaciones() 
						&& !this.detalleactivofijoSessionBean.getEsGuardarRelacionado())	{
					
					//ARCHITECTURE
					if(Constantes.ISUSAEJBLOGICLAYER) {
						detalleactivofijoLogic.saveDetalleActivoFijos();//WithConnection
						//detalleactivofijoLogic.getSetVersionRowDetalleActivoFijos();//WithConnection
					} else if(Constantes.ISUSAEJBREMOTE) {
					} else if(Constantes.ISUSAEJBHOME) {
					}	
					//ARCHITECTURE
					
					//TALVEZ ESTA DEMAS POR SER UPDATE
					//POR BUG: EL OBJETO ACTUAL SE PERDIA, POR LO QUE SE GUARDA TAMBIEN VALORES EN AUX Y LUEGO DESPUES DEL MENSAJE SE HACE REFERENCIA EL OBJETO ACTUAL AL AUX
					this.bugActualizarReferenciaActual(this.detalleactivofijo,detalleactivofijoAux);
					
					this.refrescarForeignKeysDescripcionesDetalleActivoFijo();
				} else {
					//CUANDO ES MANTENIMIENTO MAESTRO DETALLE
					if(this.detalleactivofijoSessionBean.getEstaModoGuardarRelaciones()) {
						//GUARDAR RELACIONES
						//ARCHITECTURE
						if(Constantes.ISUSAEJBLOGICLAYER) {
							
							this.jInternalFrameDetalleFormDetalleActivoFijo.mantenimientoactivofijoBeanSwingJInternalFrame.mantenimientoactivofijoLogic.getMantenimientoActivoFijos().addAll(this.jInternalFrameDetalleFormDetalleActivoFijo.mantenimientoactivofijoBeanSwingJInternalFrame.mantenimientoactivofijosEliminados);
							this.jInternalFrameDetalleFormDetalleActivoFijo.serviciotransporteBeanSwingJInternalFrame.serviciotransporteLogic.getServicioTransportes().addAll(this.jInternalFrameDetalleFormDetalleActivoFijo.serviciotransporteBeanSwingJInternalFrame.serviciotransportesEliminados);
							this.jInternalFrameDetalleFormDetalleActivoFijo.movimientoactivofijoBeanSwingJInternalFrame.movimientoactivofijoLogic.getMovimientoActivoFijos().addAll(this.jInternalFrameDetalleFormDetalleActivoFijo.movimientoactivofijoBeanSwingJInternalFrame.movimientoactivofijosEliminados);
							this.jInternalFrameDetalleFormDetalleActivoFijo.vehiculoBeanSwingJInternalFrame.vehiculoLogic.getVehiculos().addAll(this.jInternalFrameDetalleFormDetalleActivoFijo.vehiculoBeanSwingJInternalFrame.vehiculosEliminados);
							this.jInternalFrameDetalleFormDetalleActivoFijo.metododepreciacionBeanSwingJInternalFrame.metododepreciacionLogic.getMetodoDepreciacions().addAll(this.jInternalFrameDetalleFormDetalleActivoFijo.metododepreciacionBeanSwingJInternalFrame.metododepreciacionsEliminados);
							this.jInternalFrameDetalleFormDetalleActivoFijo.responsableactivofijoBeanSwingJInternalFrame.responsableactivofijoLogic.getResponsableActivoFijos().addAll(this.jInternalFrameDetalleFormDetalleActivoFijo.responsableactivofijoBeanSwingJInternalFrame.responsableactivofijosEliminados);
							this.jInternalFrameDetalleFormDetalleActivoFijo.depreciacionactivofijoBeanSwingJInternalFrame.depreciacionactivofijoLogic.getDepreciacionActivoFijos().addAll(this.jInternalFrameDetalleFormDetalleActivoFijo.depreciacionactivofijoBeanSwingJInternalFrame.depreciacionactivofijosEliminados);
							this.jInternalFrameDetalleFormDetalleActivoFijo.gastodepreciacioncentrocostoBeanSwingJInternalFrame.gastodepreciacioncentrocostoLogic.getGastoDepreciacionCentroCostos().addAll(this.jInternalFrameDetalleFormDetalleActivoFijo.gastodepreciacioncentrocostoBeanSwingJInternalFrame.gastodepreciacioncentrocostosEliminados);
							this.jInternalFrameDetalleFormDetalleActivoFijo.parteactivofijoBeanSwingJInternalFrame.parteactivofijoLogic.getParteActivoFijos().addAll(this.jInternalFrameDetalleFormDetalleActivoFijo.parteactivofijoBeanSwingJInternalFrame.parteactivofijosEliminados);
						} else if(Constantes.ISUSAEJBREMOTE ||Constantes.ISUSAEJBHOME) {
							
							this.jInternalFrameDetalleFormDetalleActivoFijo.mantenimientoactivofijoBeanSwingJInternalFrame.mantenimientoactivofijos.addAll(this.jInternalFrameDetalleFormDetalleActivoFijo.mantenimientoactivofijoBeanSwingJInternalFrame.mantenimientoactivofijosEliminados);
							this.jInternalFrameDetalleFormDetalleActivoFijo.serviciotransporteBeanSwingJInternalFrame.serviciotransportes.addAll(this.jInternalFrameDetalleFormDetalleActivoFijo.serviciotransporteBeanSwingJInternalFrame.serviciotransportesEliminados);
							this.jInternalFrameDetalleFormDetalleActivoFijo.movimientoactivofijoBeanSwingJInternalFrame.movimientoactivofijos.addAll(this.jInternalFrameDetalleFormDetalleActivoFijo.movimientoactivofijoBeanSwingJInternalFrame.movimientoactivofijosEliminados);
							this.jInternalFrameDetalleFormDetalleActivoFijo.vehiculoBeanSwingJInternalFrame.vehiculos.addAll(this.jInternalFrameDetalleFormDetalleActivoFijo.vehiculoBeanSwingJInternalFrame.vehiculosEliminados);
							this.jInternalFrameDetalleFormDetalleActivoFijo.metododepreciacionBeanSwingJInternalFrame.metododepreciacions.addAll(this.jInternalFrameDetalleFormDetalleActivoFijo.metododepreciacionBeanSwingJInternalFrame.metododepreciacionsEliminados);
							this.jInternalFrameDetalleFormDetalleActivoFijo.responsableactivofijoBeanSwingJInternalFrame.responsableactivofijos.addAll(this.jInternalFrameDetalleFormDetalleActivoFijo.responsableactivofijoBeanSwingJInternalFrame.responsableactivofijosEliminados);
							this.jInternalFrameDetalleFormDetalleActivoFijo.depreciacionactivofijoBeanSwingJInternalFrame.depreciacionactivofijos.addAll(this.jInternalFrameDetalleFormDetalleActivoFijo.depreciacionactivofijoBeanSwingJInternalFrame.depreciacionactivofijosEliminados);
							this.jInternalFrameDetalleFormDetalleActivoFijo.gastodepreciacioncentrocostoBeanSwingJInternalFrame.gastodepreciacioncentrocostos.addAll(this.jInternalFrameDetalleFormDetalleActivoFijo.gastodepreciacioncentrocostoBeanSwingJInternalFrame.gastodepreciacioncentrocostosEliminados);
							this.jInternalFrameDetalleFormDetalleActivoFijo.parteactivofijoBeanSwingJInternalFrame.parteactivofijos.addAll(this.jInternalFrameDetalleFormDetalleActivoFijo.parteactivofijoBeanSwingJInternalFrame.parteactivofijosEliminados);
						}
						//ARCHITECTURE
						
						if(!this.detalleactivofijoSessionBean.getEsGuardarRelacionado()) {
							//QUITAR FILA TOTAL
							//ARCHITECTURE
							if(Constantes.ISUSAEJBLOGICLAYER) {
							
								if(this.jInternalFrameDetalleFormDetalleActivoFijo.mantenimientoactivofijoBeanSwingJInternalFrame!=null && this.jInternalFrameDetalleFormDetalleActivoFijo.mantenimientoactivofijoBeanSwingJInternalFrame.conTotales) {/*this.jInternalFrameDetalleFormDetalleActivoFijo.mantenimientoactivofijoBeanSwingJInternalFrame.quitarFilaTotales();*/}
								if(this.jInternalFrameDetalleFormDetalleActivoFijo.serviciotransporteBeanSwingJInternalFrame!=null && this.jInternalFrameDetalleFormDetalleActivoFijo.serviciotransporteBeanSwingJInternalFrame.conTotales) {/*this.jInternalFrameDetalleFormDetalleActivoFijo.serviciotransporteBeanSwingJInternalFrame.quitarFilaTotales();*/}
									if(this.jInternalFrameDetalleFormDetalleActivoFijo.serviciotransporteBeanSwingJInternalFrame.jInternalFrameDetalleFormServicioTransporte.detalleserviciotransporteBeanSwingJInternalFrame!=null && this.jInternalFrameDetalleFormDetalleActivoFijo.serviciotransporteBeanSwingJInternalFrame.jInternalFrameDetalleFormServicioTransporte.detalleserviciotransporteBeanSwingJInternalFrame.conTotales) {/*this.jInternalFrameDetalleFormDetalleActivoFijo.serviciotransporteBeanSwingJInternalFrame.jInternalFrameDetalleFormServicioTransporte.detalleserviciotransporteBeanSwingJInternalFrame.quitarFilaTotales();*/}
								if(this.jInternalFrameDetalleFormDetalleActivoFijo.movimientoactivofijoBeanSwingJInternalFrame!=null && this.jInternalFrameDetalleFormDetalleActivoFijo.movimientoactivofijoBeanSwingJInternalFrame.conTotales) {/*this.jInternalFrameDetalleFormDetalleActivoFijo.movimientoactivofijoBeanSwingJInternalFrame.quitarFilaTotales();*/}
								if(this.jInternalFrameDetalleFormDetalleActivoFijo.vehiculoBeanSwingJInternalFrame!=null && this.jInternalFrameDetalleFormDetalleActivoFijo.vehiculoBeanSwingJInternalFrame.conTotales) {/*this.jInternalFrameDetalleFormDetalleActivoFijo.vehiculoBeanSwingJInternalFrame.quitarFilaTotales();*/}
									if(this.jInternalFrameDetalleFormDetalleActivoFijo.vehiculoBeanSwingJInternalFrame.jInternalFrameDetalleFormVehiculo.serviciotransporteBeanSwingJInternalFrame!=null && this.jInternalFrameDetalleFormDetalleActivoFijo.vehiculoBeanSwingJInternalFrame.jInternalFrameDetalleFormVehiculo.serviciotransporteBeanSwingJInternalFrame.conTotales) {/*this.jInternalFrameDetalleFormDetalleActivoFijo.vehiculoBeanSwingJInternalFrame.jInternalFrameDetalleFormVehiculo.serviciotransporteBeanSwingJInternalFrame.quitarFilaTotales();*/}
									if(this.jInternalFrameDetalleFormDetalleActivoFijo.vehiculoBeanSwingJInternalFrame.jInternalFrameDetalleFormVehiculo.serviciotransporteBeanSwingJInternalFrame.jInternalFrameDetalleFormServicioTransporte.detalleserviciotransporteBeanSwingJInternalFrame!=null && this.jInternalFrameDetalleFormDetalleActivoFijo.vehiculoBeanSwingJInternalFrame.jInternalFrameDetalleFormVehiculo.serviciotransporteBeanSwingJInternalFrame.jInternalFrameDetalleFormServicioTransporte.detalleserviciotransporteBeanSwingJInternalFrame.conTotales) {/*this.jInternalFrameDetalleFormDetalleActivoFijo.vehiculoBeanSwingJInternalFrame.jInternalFrameDetalleFormVehiculo.serviciotransporteBeanSwingJInternalFrame.jInternalFrameDetalleFormServicioTransporte.detalleserviciotransporteBeanSwingJInternalFrame.quitarFilaTotales();*/}
								if(this.jInternalFrameDetalleFormDetalleActivoFijo.metododepreciacionBeanSwingJInternalFrame!=null && this.jInternalFrameDetalleFormDetalleActivoFijo.metododepreciacionBeanSwingJInternalFrame.conTotales) {/*this.jInternalFrameDetalleFormDetalleActivoFijo.metododepreciacionBeanSwingJInternalFrame.quitarFilaTotales();*/}
								if(this.jInternalFrameDetalleFormDetalleActivoFijo.responsableactivofijoBeanSwingJInternalFrame!=null && this.jInternalFrameDetalleFormDetalleActivoFijo.responsableactivofijoBeanSwingJInternalFrame.conTotales) {/*this.jInternalFrameDetalleFormDetalleActivoFijo.responsableactivofijoBeanSwingJInternalFrame.quitarFilaTotales();*/}
								if(this.jInternalFrameDetalleFormDetalleActivoFijo.depreciacionactivofijoBeanSwingJInternalFrame!=null && this.jInternalFrameDetalleFormDetalleActivoFijo.depreciacionactivofijoBeanSwingJInternalFrame.conTotales) {/*this.jInternalFrameDetalleFormDetalleActivoFijo.depreciacionactivofijoBeanSwingJInternalFrame.quitarFilaTotales();*/}
								if(this.jInternalFrameDetalleFormDetalleActivoFijo.gastodepreciacioncentrocostoBeanSwingJInternalFrame!=null && this.jInternalFrameDetalleFormDetalleActivoFijo.gastodepreciacioncentrocostoBeanSwingJInternalFrame.conTotales) {/*this.jInternalFrameDetalleFormDetalleActivoFijo.gastodepreciacioncentrocostoBeanSwingJInternalFrame.quitarFilaTotales();*/}
								if(this.jInternalFrameDetalleFormDetalleActivoFijo.parteactivofijoBeanSwingJInternalFrame!=null && this.jInternalFrameDetalleFormDetalleActivoFijo.parteactivofijoBeanSwingJInternalFrame.conTotales) {/*this.jInternalFrameDetalleFormDetalleActivoFijo.parteactivofijoBeanSwingJInternalFrame.quitarFilaTotales();*/}
							} else if(Constantes.ISUSAEJBREMOTE ||Constantes.ISUSAEJBHOME) {
							
								if(this.jInternalFrameDetalleFormDetalleActivoFijo.mantenimientoactivofijoBeanSwingJInternalFrame!=null && this.jInternalFrameDetalleFormDetalleActivoFijo.mantenimientoactivofijoBeanSwingJInternalFrame.conTotales) {/*this.jInternalFrameDetalleFormDetalleActivoFijo.mantenimientoactivofijoBeanSwingJInternalFrame.quitarFilaTotales();*/}
								if(this.jInternalFrameDetalleFormDetalleActivoFijo.serviciotransporteBeanSwingJInternalFrame!=null && this.jInternalFrameDetalleFormDetalleActivoFijo.serviciotransporteBeanSwingJInternalFrame.conTotales) {/*this.jInternalFrameDetalleFormDetalleActivoFijo.serviciotransporteBeanSwingJInternalFrame.quitarFilaTotales();*/}
									if(this.jInternalFrameDetalleFormDetalleActivoFijo.serviciotransporteBeanSwingJInternalFrame.jInternalFrameDetalleFormServicioTransporte.detalleserviciotransporteBeanSwingJInternalFrame!=null && this.jInternalFrameDetalleFormDetalleActivoFijo.serviciotransporteBeanSwingJInternalFrame.jInternalFrameDetalleFormServicioTransporte.detalleserviciotransporteBeanSwingJInternalFrame.conTotales) {/*this.jInternalFrameDetalleFormDetalleActivoFijo.serviciotransporteBeanSwingJInternalFrame.jInternalFrameDetalleFormServicioTransporte.detalleserviciotransporteBeanSwingJInternalFrame.quitarFilaTotales();*/}
								if(this.jInternalFrameDetalleFormDetalleActivoFijo.movimientoactivofijoBeanSwingJInternalFrame!=null && this.jInternalFrameDetalleFormDetalleActivoFijo.movimientoactivofijoBeanSwingJInternalFrame.conTotales) {/*this.jInternalFrameDetalleFormDetalleActivoFijo.movimientoactivofijoBeanSwingJInternalFrame.quitarFilaTotales();*/}
								if(this.jInternalFrameDetalleFormDetalleActivoFijo.vehiculoBeanSwingJInternalFrame!=null && this.jInternalFrameDetalleFormDetalleActivoFijo.vehiculoBeanSwingJInternalFrame.conTotales) {/*this.jInternalFrameDetalleFormDetalleActivoFijo.vehiculoBeanSwingJInternalFrame.quitarFilaTotales();*/}
									if(this.jInternalFrameDetalleFormDetalleActivoFijo.vehiculoBeanSwingJInternalFrame.jInternalFrameDetalleFormVehiculo.serviciotransporteBeanSwingJInternalFrame!=null && this.jInternalFrameDetalleFormDetalleActivoFijo.vehiculoBeanSwingJInternalFrame.jInternalFrameDetalleFormVehiculo.serviciotransporteBeanSwingJInternalFrame.conTotales) {/*this.jInternalFrameDetalleFormDetalleActivoFijo.vehiculoBeanSwingJInternalFrame.jInternalFrameDetalleFormVehiculo.serviciotransporteBeanSwingJInternalFrame.quitarFilaTotales();*/}
									if(this.jInternalFrameDetalleFormDetalleActivoFijo.vehiculoBeanSwingJInternalFrame.jInternalFrameDetalleFormVehiculo.serviciotransporteBeanSwingJInternalFrame.jInternalFrameDetalleFormServicioTransporte.detalleserviciotransporteBeanSwingJInternalFrame!=null && this.jInternalFrameDetalleFormDetalleActivoFijo.vehiculoBeanSwingJInternalFrame.jInternalFrameDetalleFormVehiculo.serviciotransporteBeanSwingJInternalFrame.jInternalFrameDetalleFormServicioTransporte.detalleserviciotransporteBeanSwingJInternalFrame.conTotales) {/*this.jInternalFrameDetalleFormDetalleActivoFijo.vehiculoBeanSwingJInternalFrame.jInternalFrameDetalleFormVehiculo.serviciotransporteBeanSwingJInternalFrame.jInternalFrameDetalleFormServicioTransporte.detalleserviciotransporteBeanSwingJInternalFrame.quitarFilaTotales();*/}
								if(this.jInternalFrameDetalleFormDetalleActivoFijo.metododepreciacionBeanSwingJInternalFrame!=null && this.jInternalFrameDetalleFormDetalleActivoFijo.metododepreciacionBeanSwingJInternalFrame.conTotales) {/*this.jInternalFrameDetalleFormDetalleActivoFijo.metododepreciacionBeanSwingJInternalFrame.quitarFilaTotales();*/}
								if(this.jInternalFrameDetalleFormDetalleActivoFijo.responsableactivofijoBeanSwingJInternalFrame!=null && this.jInternalFrameDetalleFormDetalleActivoFijo.responsableactivofijoBeanSwingJInternalFrame.conTotales) {/*this.jInternalFrameDetalleFormDetalleActivoFijo.responsableactivofijoBeanSwingJInternalFrame.quitarFilaTotales();*/}
								if(this.jInternalFrameDetalleFormDetalleActivoFijo.depreciacionactivofijoBeanSwingJInternalFrame!=null && this.jInternalFrameDetalleFormDetalleActivoFijo.depreciacionactivofijoBeanSwingJInternalFrame.conTotales) {/*this.jInternalFrameDetalleFormDetalleActivoFijo.depreciacionactivofijoBeanSwingJInternalFrame.quitarFilaTotales();*/}
								if(this.jInternalFrameDetalleFormDetalleActivoFijo.gastodepreciacioncentrocostoBeanSwingJInternalFrame!=null && this.jInternalFrameDetalleFormDetalleActivoFijo.gastodepreciacioncentrocostoBeanSwingJInternalFrame.conTotales) {/*this.jInternalFrameDetalleFormDetalleActivoFijo.gastodepreciacioncentrocostoBeanSwingJInternalFrame.quitarFilaTotales();*/}
								if(this.jInternalFrameDetalleFormDetalleActivoFijo.parteactivofijoBeanSwingJInternalFrame!=null && this.jInternalFrameDetalleFormDetalleActivoFijo.parteactivofijoBeanSwingJInternalFrame.conTotales) {/*this.jInternalFrameDetalleFormDetalleActivoFijo.parteactivofijoBeanSwingJInternalFrame.quitarFilaTotales();*/}	
							}
							//ARCHITECTURE
							
							//ARCHITECTURE
							if(Constantes.ISUSAEJBLOGICLAYER) {
								detalleactivofijoLogic.saveDetalleActivoFijoRelaciones(detalleactivofijoAux,this.jInternalFrameDetalleFormDetalleActivoFijo.mantenimientoactivofijoBeanSwingJInternalFrame.mantenimientoactivofijoLogic.getMantenimientoActivoFijos(),this.jInternalFrameDetalleFormDetalleActivoFijo.serviciotransporteBeanSwingJInternalFrame.serviciotransporteLogic.getServicioTransportes(),this.jInternalFrameDetalleFormDetalleActivoFijo.movimientoactivofijoBeanSwingJInternalFrame.movimientoactivofijoLogic.getMovimientoActivoFijos(),this.jInternalFrameDetalleFormDetalleActivoFijo.vehiculoBeanSwingJInternalFrame.vehiculoLogic.getVehiculos(),this.jInternalFrameDetalleFormDetalleActivoFijo.metododepreciacionBeanSwingJInternalFrame.metododepreciacionLogic.getMetodoDepreciacions(),this.jInternalFrameDetalleFormDetalleActivoFijo.responsableactivofijoBeanSwingJInternalFrame.responsableactivofijoLogic.getResponsableActivoFijos(),this.jInternalFrameDetalleFormDetalleActivoFijo.depreciacionactivofijoBeanSwingJInternalFrame.depreciacionactivofijoLogic.getDepreciacionActivoFijos(),this.jInternalFrameDetalleFormDetalleActivoFijo.gastodepreciacioncentrocostoBeanSwingJInternalFrame.gastodepreciacioncentrocostoLogic.getGastoDepreciacionCentroCostos(),this.jInternalFrameDetalleFormDetalleActivoFijo.parteactivofijoBeanSwingJInternalFrame.parteactivofijoLogic.getParteActivoFijos());//WithConnection
								//detalleactivofijoLogic.getSetVersionRowDetalleActivoFijos();//WithConnection
							} else if(Constantes.ISUSAEJBREMOTE) {
							} else if(Constantes.ISUSAEJBHOME) {
							}
							//ARCHITECTURE
							
							//TALVEZ ESTA DEMAS POR SER UPDATE
							//POR BUG: EL OBJETO ACTUAL SE PERDIA, POR LO QUE SE GUARDA TAMBIEN VALORES EN AUX Y LUEGO DESPUES DEL MENSAJE SE HACE REFERENCIA EL OBJETO ACTUAL AL AUX
							this.bugActualizarReferenciaActual(this.detalleactivofijo,detalleactivofijoAux);
					
							//ARCHITECTURE
							if(Constantes.ISUSAEJBLOGICLAYER) {
								
							this.jInternalFrameDetalleFormDetalleActivoFijo.mantenimientoactivofijoBeanSwingJInternalFrame.mantenimientoactivofijoLogic.setMantenimientoActivoFijos(new ArrayList<MantenimientoActivoFijo>());
							this.jInternalFrameDetalleFormDetalleActivoFijo.serviciotransporteBeanSwingJInternalFrame.serviciotransporteLogic.setServicioTransportes(new ArrayList<ServicioTransporte>());
							this.jInternalFrameDetalleFormDetalleActivoFijo.movimientoactivofijoBeanSwingJInternalFrame.movimientoactivofijoLogic.setMovimientoActivoFijos(new ArrayList<MovimientoActivoFijo>());
							this.jInternalFrameDetalleFormDetalleActivoFijo.vehiculoBeanSwingJInternalFrame.vehiculoLogic.setVehiculos(new ArrayList<Vehiculo>());
							this.jInternalFrameDetalleFormDetalleActivoFijo.metododepreciacionBeanSwingJInternalFrame.metododepreciacionLogic.setMetodoDepreciacions(new ArrayList<MetodoDepreciacion>());
							this.jInternalFrameDetalleFormDetalleActivoFijo.responsableactivofijoBeanSwingJInternalFrame.responsableactivofijoLogic.setResponsableActivoFijos(new ArrayList<ResponsableActivoFijo>());
							this.jInternalFrameDetalleFormDetalleActivoFijo.depreciacionactivofijoBeanSwingJInternalFrame.depreciacionactivofijoLogic.setDepreciacionActivoFijos(new ArrayList<DepreciacionActivoFijo>());
							this.jInternalFrameDetalleFormDetalleActivoFijo.gastodepreciacioncentrocostoBeanSwingJInternalFrame.gastodepreciacioncentrocostoLogic.setGastoDepreciacionCentroCostos(new ArrayList<GastoDepreciacionCentroCosto>());
							this.jInternalFrameDetalleFormDetalleActivoFijo.parteactivofijoBeanSwingJInternalFrame.parteactivofijoLogic.setParteActivoFijos(new ArrayList<ParteActivoFijo>());
							} else if(Constantes.ISUSAEJBREMOTE ||Constantes.ISUSAEJBHOME) {
								
							this.jInternalFrameDetalleFormDetalleActivoFijo.mantenimientoactivofijoBeanSwingJInternalFrame.mantenimientoactivofijos= new ArrayList<MantenimientoActivoFijo>();
							this.jInternalFrameDetalleFormDetalleActivoFijo.serviciotransporteBeanSwingJInternalFrame.serviciotransportes= new ArrayList<ServicioTransporte>();
							this.jInternalFrameDetalleFormDetalleActivoFijo.movimientoactivofijoBeanSwingJInternalFrame.movimientoactivofijos= new ArrayList<MovimientoActivoFijo>();
							this.jInternalFrameDetalleFormDetalleActivoFijo.vehiculoBeanSwingJInternalFrame.vehiculos= new ArrayList<Vehiculo>();
							this.jInternalFrameDetalleFormDetalleActivoFijo.metododepreciacionBeanSwingJInternalFrame.metododepreciacions= new ArrayList<MetodoDepreciacion>();
							this.jInternalFrameDetalleFormDetalleActivoFijo.responsableactivofijoBeanSwingJInternalFrame.responsableactivofijos= new ArrayList<ResponsableActivoFijo>();
							this.jInternalFrameDetalleFormDetalleActivoFijo.depreciacionactivofijoBeanSwingJInternalFrame.depreciacionactivofijos= new ArrayList<DepreciacionActivoFijo>();
							this.jInternalFrameDetalleFormDetalleActivoFijo.gastodepreciacioncentrocostoBeanSwingJInternalFrame.gastodepreciacioncentrocostos= new ArrayList<GastoDepreciacionCentroCosto>();
							this.jInternalFrameDetalleFormDetalleActivoFijo.parteactivofijoBeanSwingJInternalFrame.parteactivofijos= new ArrayList<ParteActivoFijo>();
							}
							//ARCHITECTURE
						} else {
							
							

							if(this.jInternalFrameDetalleFormDetalleActivoFijo.mantenimientoactivofijoBeanSwingJInternalFrame!=null && this.jInternalFrameDetalleFormDetalleActivoFijo.mantenimientoactivofijoBeanSwingJInternalFrame.conTotales) {this.jInternalFrameDetalleFormDetalleActivoFijo.mantenimientoactivofijoBeanSwingJInternalFrame.quitarFilaTotales();}
							detalleactivofijoAux.setMantenimientoActivoFijos(this.jInternalFrameDetalleFormDetalleActivoFijo.mantenimientoactivofijoBeanSwingJInternalFrame.mantenimientoactivofijoLogic.getMantenimientoActivoFijos());

							if(this.jInternalFrameDetalleFormDetalleActivoFijo.serviciotransporteBeanSwingJInternalFrame!=null && this.jInternalFrameDetalleFormDetalleActivoFijo.serviciotransporteBeanSwingJInternalFrame.conTotales) {this.jInternalFrameDetalleFormDetalleActivoFijo.serviciotransporteBeanSwingJInternalFrame.quitarFilaTotales();}
							detalleactivofijoAux.setServicioTransportes(this.jInternalFrameDetalleFormDetalleActivoFijo.serviciotransporteBeanSwingJInternalFrame.serviciotransporteLogic.getServicioTransportes());

							if(this.jInternalFrameDetalleFormDetalleActivoFijo.movimientoactivofijoBeanSwingJInternalFrame!=null && this.jInternalFrameDetalleFormDetalleActivoFijo.movimientoactivofijoBeanSwingJInternalFrame.conTotales) {this.jInternalFrameDetalleFormDetalleActivoFijo.movimientoactivofijoBeanSwingJInternalFrame.quitarFilaTotales();}
							detalleactivofijoAux.setMovimientoActivoFijoDestinos(this.jInternalFrameDetalleFormDetalleActivoFijo.movimientoactivofijoBeanSwingJInternalFrame.movimientoactivofijoLogic.getMovimientoActivoFijos());

							if(this.jInternalFrameDetalleFormDetalleActivoFijo.vehiculoBeanSwingJInternalFrame!=null && this.jInternalFrameDetalleFormDetalleActivoFijo.vehiculoBeanSwingJInternalFrame.conTotales) {this.jInternalFrameDetalleFormDetalleActivoFijo.vehiculoBeanSwingJInternalFrame.quitarFilaTotales();}
							detalleactivofijoAux.setVehiculos(this.jInternalFrameDetalleFormDetalleActivoFijo.vehiculoBeanSwingJInternalFrame.vehiculoLogic.getVehiculos());

							if(this.jInternalFrameDetalleFormDetalleActivoFijo.metododepreciacionBeanSwingJInternalFrame!=null && this.jInternalFrameDetalleFormDetalleActivoFijo.metododepreciacionBeanSwingJInternalFrame.conTotales) {this.jInternalFrameDetalleFormDetalleActivoFijo.metododepreciacionBeanSwingJInternalFrame.quitarFilaTotales();}
							detalleactivofijoAux.setMetodoDepreciacions(this.jInternalFrameDetalleFormDetalleActivoFijo.metododepreciacionBeanSwingJInternalFrame.metododepreciacionLogic.getMetodoDepreciacions());

							if(this.jInternalFrameDetalleFormDetalleActivoFijo.responsableactivofijoBeanSwingJInternalFrame!=null && this.jInternalFrameDetalleFormDetalleActivoFijo.responsableactivofijoBeanSwingJInternalFrame.conTotales) {this.jInternalFrameDetalleFormDetalleActivoFijo.responsableactivofijoBeanSwingJInternalFrame.quitarFilaTotales();}
							detalleactivofijoAux.setResponsableActivoFijos(this.jInternalFrameDetalleFormDetalleActivoFijo.responsableactivofijoBeanSwingJInternalFrame.responsableactivofijoLogic.getResponsableActivoFijos());

							if(this.jInternalFrameDetalleFormDetalleActivoFijo.depreciacionactivofijoBeanSwingJInternalFrame!=null && this.jInternalFrameDetalleFormDetalleActivoFijo.depreciacionactivofijoBeanSwingJInternalFrame.conTotales) {this.jInternalFrameDetalleFormDetalleActivoFijo.depreciacionactivofijoBeanSwingJInternalFrame.quitarFilaTotales();}
							detalleactivofijoAux.setDepreciacionActivoFijos(this.jInternalFrameDetalleFormDetalleActivoFijo.depreciacionactivofijoBeanSwingJInternalFrame.depreciacionactivofijoLogic.getDepreciacionActivoFijos());

							if(this.jInternalFrameDetalleFormDetalleActivoFijo.gastodepreciacioncentrocostoBeanSwingJInternalFrame!=null && this.jInternalFrameDetalleFormDetalleActivoFijo.gastodepreciacioncentrocostoBeanSwingJInternalFrame.conTotales) {this.jInternalFrameDetalleFormDetalleActivoFijo.gastodepreciacioncentrocostoBeanSwingJInternalFrame.quitarFilaTotales();}
							detalleactivofijoAux.setGastoDepreciacionCentroCostos(this.jInternalFrameDetalleFormDetalleActivoFijo.gastodepreciacioncentrocostoBeanSwingJInternalFrame.gastodepreciacioncentrocostoLogic.getGastoDepreciacionCentroCostos());

							if(this.jInternalFrameDetalleFormDetalleActivoFijo.parteactivofijoBeanSwingJInternalFrame!=null && this.jInternalFrameDetalleFormDetalleActivoFijo.parteactivofijoBeanSwingJInternalFrame.conTotales) {this.jInternalFrameDetalleFormDetalleActivoFijo.parteactivofijoBeanSwingJInternalFrame.quitarFilaTotales();}
							detalleactivofijoAux.setParteActivoFijos(this.jInternalFrameDetalleFormDetalleActivoFijo.parteactivofijoBeanSwingJInternalFrame.parteactivofijoLogic.getParteActivoFijos());
							
							//ARCHITECTURE
							if(Constantes.ISUSAEJBLOGICLAYER) {
								if(this.detalleactivofijoSessionBean.getEstaModoGuardarRelaciones() 
									|| this.detalleactivofijoSessionBean.getEsGuardarRelacionado())	{
									actualizarLista(detalleactivofijoAux,detalleactivofijoLogic.getDetalleActivoFijos());
								}
							} else if(Constantes.ISUSAEJBREMOTE||Constantes.ISUSAEJBHOME) {
								actualizarLista(detalleactivofijoAux,detalleactivofijos);
							}
							//ARCHITECTURE
							
							//AQUI EL ID NEGATIVO ES EL ID BUSCADO, YA QUE NO SE GENERA OTRO EN LA DB POR INGRESAR UNO NUEVO							
							//TALVEZ ESTA DEMAS POR SER UPDATE
							//POR BUG: EL OBJETO ACTUAL SE PERDIA, POR LO QUE SE GUARDA TAMBIEN VALORES EN AUX Y LUEGO DESPUES DEL MENSAJE SE HACE REFERENCIA EL OBJETO ACTUAL AL AUX
							//this.bugActualizarReferenciaActual(this.detalleactivofijo,detalleactivofijoAux);
					
						}
					}
				}				
			} else if(maintenanceType==MaintenanceType.ELIMINAR) {
				detalleactivofijoAux=new  DetalleActivoFijo();
				
				detalleactivofijoAux.setIsNew(false);
				detalleactivofijoAux.setIsChanged(false);
				
				detalleactivofijoAux.setIsDeleted(true);
				
				detalleactivofijoAux.setId(this.detalleactivofijo.getId());	
				detalleactivofijoAux.setVersionRow(this.detalleactivofijo.getVersionRow());	
				detalleactivofijoAux.setid_empresa(this.detalleactivofijo.getid_empresa());	
				detalleactivofijoAux.setid_sucursal(this.detalleactivofijo.getid_sucursal());	
				detalleactivofijoAux.setid_detalle_grupo_activo_fijo(this.detalleactivofijo.getid_detalle_grupo_activo_fijo());	
				detalleactivofijoAux.setid_sub_grupo_activo_fijo(this.detalleactivofijo.getid_sub_grupo_activo_fijo());	
				detalleactivofijoAux.setid_tipo_ramo_activo_fijo(this.detalleactivofijo.getid_tipo_ramo_activo_fijo());	
				detalleactivofijoAux.setid_tipo_activo_fijo_empresa(this.detalleactivofijo.getid_tipo_activo_fijo_empresa());	
				detalleactivofijoAux.setid_tipo_depreciacion_empresa(this.detalleactivofijo.getid_tipo_depreciacion_empresa());	
				detalleactivofijoAux.setid_estado_activo_fijo(this.detalleactivofijo.getid_estado_activo_fijo());	
				detalleactivofijoAux.setid_cliente(this.detalleactivofijo.getid_cliente());	
				detalleactivofijoAux.setid_partida_presu(this.detalleactivofijo.getid_partida_presu());	
				detalleactivofijoAux.setcodigo(this.detalleactivofijo.getcodigo());	
				detalleactivofijoAux.setnombre(this.detalleactivofijo.getnombre());	
				detalleactivofijoAux.setserie(this.detalleactivofijo.getserie());	
				detalleactivofijoAux.setfecha_compra(this.detalleactivofijo.getfecha_compra());	
				detalleactivofijoAux.setfecha_mantenimiento(this.detalleactivofijo.getfecha_mantenimiento());	
				detalleactivofijoAux.setfecha_correccion(this.detalleactivofijo.getfecha_correccion());	
				detalleactivofijoAux.setfecha_depreciacion(this.detalleactivofijo.getfecha_depreciacion());	
				detalleactivofijoAux.setclave(this.detalleactivofijo.getclave());	
				detalleactivofijoAux.setmarca(this.detalleactivofijo.getmarca());	
				detalleactivofijoAux.setmodelo(this.detalleactivofijo.getmodelo());	
				detalleactivofijoAux.setcolor(this.detalleactivofijo.getcolor());	
				detalleactivofijoAux.setfecha(this.detalleactivofijo.getfecha());	
				detalleactivofijoAux.setvalor_util(this.detalleactivofijo.getvalor_util());	
				detalleactivofijoAux.setcosto_de_compra(this.detalleactivofijo.getcosto_de_compra());	
				detalleactivofijoAux.setvida_util(this.detalleactivofijo.getvida_util());	
				detalleactivofijoAux.setvalor_residual(this.detalleactivofijo.getvalor_residual());	
				detalleactivofijoAux.setcantidad(this.detalleactivofijo.getcantidad());	
				detalleactivofijoAux.setnombre_propietario(this.detalleactivofijo.getnombre_propietario());	
				detalleactivofijoAux.setresponsable(this.detalleactivofijo.getresponsable());	
				detalleactivofijoAux.setpath_foto(this.detalleactivofijo.getpath_foto());	
				detalleactivofijoAux.setnumero_comprobante(this.detalleactivofijo.getnumero_comprobante());	
				detalleactivofijoAux.setreferencia(this.detalleactivofijo.getreferencia());	
				detalleactivofijoAux.setvalor_cotizacion(this.detalleactivofijo.getvalor_cotizacion());	
				detalleactivofijoAux.setcon_partes(this.detalleactivofijo.getcon_partes());	
				detalleactivofijoAux.setcon_garantia(this.detalleactivofijo.getcon_garantia());	
				detalleactivofijoAux.setcon_existencia(this.detalleactivofijo.getcon_existencia());	
				detalleactivofijoAux.setfecha_baja(this.detalleactivofijo.getfecha_baja());	
				detalleactivofijoAux.setpath_foto2(this.detalleactivofijo.getpath_foto2());	
				
				if(this.detalleactivofijoSessionBean.getEsGuardarRelacionado()) {
					//ELEMENTO ACTUAL NO SE HA INGRESADO AL SISTEMA, NO SE PUEDE ELIMINAR ALGO QUE NO EXISTE
					if(this.detalleactivofijoAux.getId()>=0) {	
						this.detalleactivofijosEliminados.add(detalleactivofijoAux);											
					}
				}
				
				//ARCHITECTURE
				if(Constantes.ISUSAEJBLOGICLAYER) {				
					actualizarLista(detalleactivofijoAux,detalleactivofijoLogic.getDetalleActivoFijos());
				} else if(Constantes.ISUSAEJBREMOTE||Constantes.ISUSAEJBHOME) {
					actualizarLista(detalleactivofijoAux,detalleactivofijos);
				}
				//ARCHITECTURE
				
				
				if(!isGuardarCambiosEnLote && !this.detalleactivofijoSessionBean.getEstaModoGuardarRelaciones() 
						&& !this.detalleactivofijoSessionBean.getEsGuardarRelacionado())	{
					
					//ARCHITECTURE
					if(Constantes.ISUSAEJBLOGICLAYER) {
						detalleactivofijoLogic.saveDetalleActivoFijos();//WithConnection
						//detalleactivofijoLogic.getSetVersionRowDetalleActivoFijos();//WithConnection
					} else if(Constantes.ISUSAEJBREMOTE) {
					} else if(Constantes.ISUSAEJBHOME) {
					}	
					//ARCHITECTURE
				} else {
					//CUANDO ES MANTENIMIENTO MAESTRO DETALLE
					if(this.detalleactivofijoSessionBean.getEstaModoGuardarRelaciones()) {
						//GUARDAR RELACIONES
						//ARCHITECTURE
						if(Constantes.ISUSAEJBLOGICLAYER) {
							
							this.jInternalFrameDetalleFormDetalleActivoFijo.mantenimientoactivofijoBeanSwingJInternalFrame.mantenimientoactivofijoLogic.getMantenimientoActivoFijos().addAll(this.jInternalFrameDetalleFormDetalleActivoFijo.mantenimientoactivofijoBeanSwingJInternalFrame.mantenimientoactivofijosEliminados);
							this.jInternalFrameDetalleFormDetalleActivoFijo.serviciotransporteBeanSwingJInternalFrame.serviciotransporteLogic.getServicioTransportes().addAll(this.jInternalFrameDetalleFormDetalleActivoFijo.serviciotransporteBeanSwingJInternalFrame.serviciotransportesEliminados);
							this.jInternalFrameDetalleFormDetalleActivoFijo.movimientoactivofijoBeanSwingJInternalFrame.movimientoactivofijoLogic.getMovimientoActivoFijos().addAll(this.jInternalFrameDetalleFormDetalleActivoFijo.movimientoactivofijoBeanSwingJInternalFrame.movimientoactivofijosEliminados);
							this.jInternalFrameDetalleFormDetalleActivoFijo.vehiculoBeanSwingJInternalFrame.vehiculoLogic.getVehiculos().addAll(this.jInternalFrameDetalleFormDetalleActivoFijo.vehiculoBeanSwingJInternalFrame.vehiculosEliminados);
							this.jInternalFrameDetalleFormDetalleActivoFijo.metododepreciacionBeanSwingJInternalFrame.metododepreciacionLogic.getMetodoDepreciacions().addAll(this.jInternalFrameDetalleFormDetalleActivoFijo.metododepreciacionBeanSwingJInternalFrame.metododepreciacionsEliminados);
							this.jInternalFrameDetalleFormDetalleActivoFijo.responsableactivofijoBeanSwingJInternalFrame.responsableactivofijoLogic.getResponsableActivoFijos().addAll(this.jInternalFrameDetalleFormDetalleActivoFijo.responsableactivofijoBeanSwingJInternalFrame.responsableactivofijosEliminados);
							this.jInternalFrameDetalleFormDetalleActivoFijo.depreciacionactivofijoBeanSwingJInternalFrame.depreciacionactivofijoLogic.getDepreciacionActivoFijos().addAll(this.jInternalFrameDetalleFormDetalleActivoFijo.depreciacionactivofijoBeanSwingJInternalFrame.depreciacionactivofijosEliminados);
							this.jInternalFrameDetalleFormDetalleActivoFijo.gastodepreciacioncentrocostoBeanSwingJInternalFrame.gastodepreciacioncentrocostoLogic.getGastoDepreciacionCentroCostos().addAll(this.jInternalFrameDetalleFormDetalleActivoFijo.gastodepreciacioncentrocostoBeanSwingJInternalFrame.gastodepreciacioncentrocostosEliminados);
							this.jInternalFrameDetalleFormDetalleActivoFijo.parteactivofijoBeanSwingJInternalFrame.parteactivofijoLogic.getParteActivoFijos().addAll(this.jInternalFrameDetalleFormDetalleActivoFijo.parteactivofijoBeanSwingJInternalFrame.parteactivofijosEliminados);
						} else if(Constantes.ISUSAEJBREMOTE ||Constantes.ISUSAEJBHOME) {
							
							this.jInternalFrameDetalleFormDetalleActivoFijo.mantenimientoactivofijoBeanSwingJInternalFrame.mantenimientoactivofijos.addAll(this.jInternalFrameDetalleFormDetalleActivoFijo.mantenimientoactivofijoBeanSwingJInternalFrame.mantenimientoactivofijosEliminados);
							this.jInternalFrameDetalleFormDetalleActivoFijo.serviciotransporteBeanSwingJInternalFrame.serviciotransportes.addAll(this.jInternalFrameDetalleFormDetalleActivoFijo.serviciotransporteBeanSwingJInternalFrame.serviciotransportesEliminados);
							this.jInternalFrameDetalleFormDetalleActivoFijo.movimientoactivofijoBeanSwingJInternalFrame.movimientoactivofijos.addAll(this.jInternalFrameDetalleFormDetalleActivoFijo.movimientoactivofijoBeanSwingJInternalFrame.movimientoactivofijosEliminados);
							this.jInternalFrameDetalleFormDetalleActivoFijo.vehiculoBeanSwingJInternalFrame.vehiculos.addAll(this.jInternalFrameDetalleFormDetalleActivoFijo.vehiculoBeanSwingJInternalFrame.vehiculosEliminados);
							this.jInternalFrameDetalleFormDetalleActivoFijo.metododepreciacionBeanSwingJInternalFrame.metododepreciacions.addAll(this.jInternalFrameDetalleFormDetalleActivoFijo.metododepreciacionBeanSwingJInternalFrame.metododepreciacionsEliminados);
							this.jInternalFrameDetalleFormDetalleActivoFijo.responsableactivofijoBeanSwingJInternalFrame.responsableactivofijos.addAll(this.jInternalFrameDetalleFormDetalleActivoFijo.responsableactivofijoBeanSwingJInternalFrame.responsableactivofijosEliminados);
							this.jInternalFrameDetalleFormDetalleActivoFijo.depreciacionactivofijoBeanSwingJInternalFrame.depreciacionactivofijos.addAll(this.jInternalFrameDetalleFormDetalleActivoFijo.depreciacionactivofijoBeanSwingJInternalFrame.depreciacionactivofijosEliminados);
							this.jInternalFrameDetalleFormDetalleActivoFijo.gastodepreciacioncentrocostoBeanSwingJInternalFrame.gastodepreciacioncentrocostos.addAll(this.jInternalFrameDetalleFormDetalleActivoFijo.gastodepreciacioncentrocostoBeanSwingJInternalFrame.gastodepreciacioncentrocostosEliminados);
							this.jInternalFrameDetalleFormDetalleActivoFijo.parteactivofijoBeanSwingJInternalFrame.parteactivofijos.addAll(this.jInternalFrameDetalleFormDetalleActivoFijo.parteactivofijoBeanSwingJInternalFrame.parteactivofijosEliminados);
						}
						//ARCHITECTURE
						
						
						if(!this.detalleactivofijoSessionBean.getEsGuardarRelacionado()) {
							//QUITAR FILA TOTAL
							//ARCHITECTURE
							if(Constantes.ISUSAEJBLOGICLAYER) {
							
								if(this.jInternalFrameDetalleFormDetalleActivoFijo.mantenimientoactivofijoBeanSwingJInternalFrame!=null && this.jInternalFrameDetalleFormDetalleActivoFijo.mantenimientoactivofijoBeanSwingJInternalFrame.conTotales) {/*this.jInternalFrameDetalleFormDetalleActivoFijo.mantenimientoactivofijoBeanSwingJInternalFrame.quitarFilaTotales();*/}
								if(this.jInternalFrameDetalleFormDetalleActivoFijo.serviciotransporteBeanSwingJInternalFrame!=null && this.jInternalFrameDetalleFormDetalleActivoFijo.serviciotransporteBeanSwingJInternalFrame.conTotales) {/*this.jInternalFrameDetalleFormDetalleActivoFijo.serviciotransporteBeanSwingJInternalFrame.quitarFilaTotales();*/}
									if(this.jInternalFrameDetalleFormDetalleActivoFijo.serviciotransporteBeanSwingJInternalFrame.jInternalFrameDetalleFormServicioTransporte.detalleserviciotransporteBeanSwingJInternalFrame!=null && this.jInternalFrameDetalleFormDetalleActivoFijo.serviciotransporteBeanSwingJInternalFrame.jInternalFrameDetalleFormServicioTransporte.detalleserviciotransporteBeanSwingJInternalFrame.conTotales) {/*this.jInternalFrameDetalleFormDetalleActivoFijo.serviciotransporteBeanSwingJInternalFrame.jInternalFrameDetalleFormServicioTransporte.detalleserviciotransporteBeanSwingJInternalFrame.quitarFilaTotales();*/}
								if(this.jInternalFrameDetalleFormDetalleActivoFijo.movimientoactivofijoBeanSwingJInternalFrame!=null && this.jInternalFrameDetalleFormDetalleActivoFijo.movimientoactivofijoBeanSwingJInternalFrame.conTotales) {/*this.jInternalFrameDetalleFormDetalleActivoFijo.movimientoactivofijoBeanSwingJInternalFrame.quitarFilaTotales();*/}
								if(this.jInternalFrameDetalleFormDetalleActivoFijo.vehiculoBeanSwingJInternalFrame!=null && this.jInternalFrameDetalleFormDetalleActivoFijo.vehiculoBeanSwingJInternalFrame.conTotales) {/*this.jInternalFrameDetalleFormDetalleActivoFijo.vehiculoBeanSwingJInternalFrame.quitarFilaTotales();*/}
									if(this.jInternalFrameDetalleFormDetalleActivoFijo.vehiculoBeanSwingJInternalFrame.jInternalFrameDetalleFormVehiculo.serviciotransporteBeanSwingJInternalFrame!=null && this.jInternalFrameDetalleFormDetalleActivoFijo.vehiculoBeanSwingJInternalFrame.jInternalFrameDetalleFormVehiculo.serviciotransporteBeanSwingJInternalFrame.conTotales) {/*this.jInternalFrameDetalleFormDetalleActivoFijo.vehiculoBeanSwingJInternalFrame.jInternalFrameDetalleFormVehiculo.serviciotransporteBeanSwingJInternalFrame.quitarFilaTotales();*/}
									if(this.jInternalFrameDetalleFormDetalleActivoFijo.vehiculoBeanSwingJInternalFrame.jInternalFrameDetalleFormVehiculo.serviciotransporteBeanSwingJInternalFrame.jInternalFrameDetalleFormServicioTransporte.detalleserviciotransporteBeanSwingJInternalFrame!=null && this.jInternalFrameDetalleFormDetalleActivoFijo.vehiculoBeanSwingJInternalFrame.jInternalFrameDetalleFormVehiculo.serviciotransporteBeanSwingJInternalFrame.jInternalFrameDetalleFormServicioTransporte.detalleserviciotransporteBeanSwingJInternalFrame.conTotales) {/*this.jInternalFrameDetalleFormDetalleActivoFijo.vehiculoBeanSwingJInternalFrame.jInternalFrameDetalleFormVehiculo.serviciotransporteBeanSwingJInternalFrame.jInternalFrameDetalleFormServicioTransporte.detalleserviciotransporteBeanSwingJInternalFrame.quitarFilaTotales();*/}
								if(this.jInternalFrameDetalleFormDetalleActivoFijo.metododepreciacionBeanSwingJInternalFrame!=null && this.jInternalFrameDetalleFormDetalleActivoFijo.metododepreciacionBeanSwingJInternalFrame.conTotales) {/*this.jInternalFrameDetalleFormDetalleActivoFijo.metododepreciacionBeanSwingJInternalFrame.quitarFilaTotales();*/}
								if(this.jInternalFrameDetalleFormDetalleActivoFijo.responsableactivofijoBeanSwingJInternalFrame!=null && this.jInternalFrameDetalleFormDetalleActivoFijo.responsableactivofijoBeanSwingJInternalFrame.conTotales) {/*this.jInternalFrameDetalleFormDetalleActivoFijo.responsableactivofijoBeanSwingJInternalFrame.quitarFilaTotales();*/}
								if(this.jInternalFrameDetalleFormDetalleActivoFijo.depreciacionactivofijoBeanSwingJInternalFrame!=null && this.jInternalFrameDetalleFormDetalleActivoFijo.depreciacionactivofijoBeanSwingJInternalFrame.conTotales) {/*this.jInternalFrameDetalleFormDetalleActivoFijo.depreciacionactivofijoBeanSwingJInternalFrame.quitarFilaTotales();*/}
								if(this.jInternalFrameDetalleFormDetalleActivoFijo.gastodepreciacioncentrocostoBeanSwingJInternalFrame!=null && this.jInternalFrameDetalleFormDetalleActivoFijo.gastodepreciacioncentrocostoBeanSwingJInternalFrame.conTotales) {/*this.jInternalFrameDetalleFormDetalleActivoFijo.gastodepreciacioncentrocostoBeanSwingJInternalFrame.quitarFilaTotales();*/}
								if(this.jInternalFrameDetalleFormDetalleActivoFijo.parteactivofijoBeanSwingJInternalFrame!=null && this.jInternalFrameDetalleFormDetalleActivoFijo.parteactivofijoBeanSwingJInternalFrame.conTotales) {/*this.jInternalFrameDetalleFormDetalleActivoFijo.parteactivofijoBeanSwingJInternalFrame.quitarFilaTotales();*/}
							} else if(Constantes.ISUSAEJBREMOTE ||Constantes.ISUSAEJBHOME) {
							
								if(this.jInternalFrameDetalleFormDetalleActivoFijo.mantenimientoactivofijoBeanSwingJInternalFrame!=null && this.jInternalFrameDetalleFormDetalleActivoFijo.mantenimientoactivofijoBeanSwingJInternalFrame.conTotales) {/*this.jInternalFrameDetalleFormDetalleActivoFijo.mantenimientoactivofijoBeanSwingJInternalFrame.quitarFilaTotales();*/}
								if(this.jInternalFrameDetalleFormDetalleActivoFijo.serviciotransporteBeanSwingJInternalFrame!=null && this.jInternalFrameDetalleFormDetalleActivoFijo.serviciotransporteBeanSwingJInternalFrame.conTotales) {/*this.jInternalFrameDetalleFormDetalleActivoFijo.serviciotransporteBeanSwingJInternalFrame.quitarFilaTotales();*/}
									if(this.jInternalFrameDetalleFormDetalleActivoFijo.serviciotransporteBeanSwingJInternalFrame.jInternalFrameDetalleFormServicioTransporte.detalleserviciotransporteBeanSwingJInternalFrame!=null && this.jInternalFrameDetalleFormDetalleActivoFijo.serviciotransporteBeanSwingJInternalFrame.jInternalFrameDetalleFormServicioTransporte.detalleserviciotransporteBeanSwingJInternalFrame.conTotales) {/*this.jInternalFrameDetalleFormDetalleActivoFijo.serviciotransporteBeanSwingJInternalFrame.jInternalFrameDetalleFormServicioTransporte.detalleserviciotransporteBeanSwingJInternalFrame.quitarFilaTotales();*/}
								if(this.jInternalFrameDetalleFormDetalleActivoFijo.movimientoactivofijoBeanSwingJInternalFrame!=null && this.jInternalFrameDetalleFormDetalleActivoFijo.movimientoactivofijoBeanSwingJInternalFrame.conTotales) {/*this.jInternalFrameDetalleFormDetalleActivoFijo.movimientoactivofijoBeanSwingJInternalFrame.quitarFilaTotales();*/}
								if(this.jInternalFrameDetalleFormDetalleActivoFijo.vehiculoBeanSwingJInternalFrame!=null && this.jInternalFrameDetalleFormDetalleActivoFijo.vehiculoBeanSwingJInternalFrame.conTotales) {/*this.jInternalFrameDetalleFormDetalleActivoFijo.vehiculoBeanSwingJInternalFrame.quitarFilaTotales();*/}
									if(this.jInternalFrameDetalleFormDetalleActivoFijo.vehiculoBeanSwingJInternalFrame.jInternalFrameDetalleFormVehiculo.serviciotransporteBeanSwingJInternalFrame!=null && this.jInternalFrameDetalleFormDetalleActivoFijo.vehiculoBeanSwingJInternalFrame.jInternalFrameDetalleFormVehiculo.serviciotransporteBeanSwingJInternalFrame.conTotales) {/*this.jInternalFrameDetalleFormDetalleActivoFijo.vehiculoBeanSwingJInternalFrame.jInternalFrameDetalleFormVehiculo.serviciotransporteBeanSwingJInternalFrame.quitarFilaTotales();*/}
									if(this.jInternalFrameDetalleFormDetalleActivoFijo.vehiculoBeanSwingJInternalFrame.jInternalFrameDetalleFormVehiculo.serviciotransporteBeanSwingJInternalFrame.jInternalFrameDetalleFormServicioTransporte.detalleserviciotransporteBeanSwingJInternalFrame!=null && this.jInternalFrameDetalleFormDetalleActivoFijo.vehiculoBeanSwingJInternalFrame.jInternalFrameDetalleFormVehiculo.serviciotransporteBeanSwingJInternalFrame.jInternalFrameDetalleFormServicioTransporte.detalleserviciotransporteBeanSwingJInternalFrame.conTotales) {/*this.jInternalFrameDetalleFormDetalleActivoFijo.vehiculoBeanSwingJInternalFrame.jInternalFrameDetalleFormVehiculo.serviciotransporteBeanSwingJInternalFrame.jInternalFrameDetalleFormServicioTransporte.detalleserviciotransporteBeanSwingJInternalFrame.quitarFilaTotales();*/}
								if(this.jInternalFrameDetalleFormDetalleActivoFijo.metododepreciacionBeanSwingJInternalFrame!=null && this.jInternalFrameDetalleFormDetalleActivoFijo.metododepreciacionBeanSwingJInternalFrame.conTotales) {/*this.jInternalFrameDetalleFormDetalleActivoFijo.metododepreciacionBeanSwingJInternalFrame.quitarFilaTotales();*/}
								if(this.jInternalFrameDetalleFormDetalleActivoFijo.responsableactivofijoBeanSwingJInternalFrame!=null && this.jInternalFrameDetalleFormDetalleActivoFijo.responsableactivofijoBeanSwingJInternalFrame.conTotales) {/*this.jInternalFrameDetalleFormDetalleActivoFijo.responsableactivofijoBeanSwingJInternalFrame.quitarFilaTotales();*/}
								if(this.jInternalFrameDetalleFormDetalleActivoFijo.depreciacionactivofijoBeanSwingJInternalFrame!=null && this.jInternalFrameDetalleFormDetalleActivoFijo.depreciacionactivofijoBeanSwingJInternalFrame.conTotales) {/*this.jInternalFrameDetalleFormDetalleActivoFijo.depreciacionactivofijoBeanSwingJInternalFrame.quitarFilaTotales();*/}
								if(this.jInternalFrameDetalleFormDetalleActivoFijo.gastodepreciacioncentrocostoBeanSwingJInternalFrame!=null && this.jInternalFrameDetalleFormDetalleActivoFijo.gastodepreciacioncentrocostoBeanSwingJInternalFrame.conTotales) {/*this.jInternalFrameDetalleFormDetalleActivoFijo.gastodepreciacioncentrocostoBeanSwingJInternalFrame.quitarFilaTotales();*/}
								if(this.jInternalFrameDetalleFormDetalleActivoFijo.parteactivofijoBeanSwingJInternalFrame!=null && this.jInternalFrameDetalleFormDetalleActivoFijo.parteactivofijoBeanSwingJInternalFrame.conTotales) {/*this.jInternalFrameDetalleFormDetalleActivoFijo.parteactivofijoBeanSwingJInternalFrame.quitarFilaTotales();*/}	
							}
							//ARCHITECTURE
							
							//ARCHITECTURE
							if(Constantes.ISUSAEJBLOGICLAYER) {
								detalleactivofijoLogic.saveDetalleActivoFijoRelaciones(detalleactivofijoAux,this.jInternalFrameDetalleFormDetalleActivoFijo.mantenimientoactivofijoBeanSwingJInternalFrame.mantenimientoactivofijoLogic.getMantenimientoActivoFijos(),this.jInternalFrameDetalleFormDetalleActivoFijo.serviciotransporteBeanSwingJInternalFrame.serviciotransporteLogic.getServicioTransportes(),this.jInternalFrameDetalleFormDetalleActivoFijo.movimientoactivofijoBeanSwingJInternalFrame.movimientoactivofijoLogic.getMovimientoActivoFijos(),this.jInternalFrameDetalleFormDetalleActivoFijo.vehiculoBeanSwingJInternalFrame.vehiculoLogic.getVehiculos(),this.jInternalFrameDetalleFormDetalleActivoFijo.metododepreciacionBeanSwingJInternalFrame.metododepreciacionLogic.getMetodoDepreciacions(),this.jInternalFrameDetalleFormDetalleActivoFijo.responsableactivofijoBeanSwingJInternalFrame.responsableactivofijoLogic.getResponsableActivoFijos(),this.jInternalFrameDetalleFormDetalleActivoFijo.depreciacionactivofijoBeanSwingJInternalFrame.depreciacionactivofijoLogic.getDepreciacionActivoFijos(),this.jInternalFrameDetalleFormDetalleActivoFijo.gastodepreciacioncentrocostoBeanSwingJInternalFrame.gastodepreciacioncentrocostoLogic.getGastoDepreciacionCentroCostos(),this.jInternalFrameDetalleFormDetalleActivoFijo.parteactivofijoBeanSwingJInternalFrame.parteactivofijoLogic.getParteActivoFijos());//WithConnection
								//detalleactivofijoLogic.getSetVersionRowDetalleActivoFijos();//WithConnection
							} else if(Constantes.ISUSAEJBREMOTE) {
							} else if(Constantes.ISUSAEJBHOME) {
							}
							//ARCHITECTURE
							
							//ARCHITECTURE
							if(Constantes.ISUSAEJBLOGICLAYER) {
								
							this.jInternalFrameDetalleFormDetalleActivoFijo.mantenimientoactivofijoBeanSwingJInternalFrame.mantenimientoactivofijoLogic.setMantenimientoActivoFijos(new ArrayList<MantenimientoActivoFijo>());
							this.jInternalFrameDetalleFormDetalleActivoFijo.serviciotransporteBeanSwingJInternalFrame.serviciotransporteLogic.setServicioTransportes(new ArrayList<ServicioTransporte>());
							this.jInternalFrameDetalleFormDetalleActivoFijo.movimientoactivofijoBeanSwingJInternalFrame.movimientoactivofijoLogic.setMovimientoActivoFijos(new ArrayList<MovimientoActivoFijo>());
							this.jInternalFrameDetalleFormDetalleActivoFijo.vehiculoBeanSwingJInternalFrame.vehiculoLogic.setVehiculos(new ArrayList<Vehiculo>());
							this.jInternalFrameDetalleFormDetalleActivoFijo.metododepreciacionBeanSwingJInternalFrame.metododepreciacionLogic.setMetodoDepreciacions(new ArrayList<MetodoDepreciacion>());
							this.jInternalFrameDetalleFormDetalleActivoFijo.responsableactivofijoBeanSwingJInternalFrame.responsableactivofijoLogic.setResponsableActivoFijos(new ArrayList<ResponsableActivoFijo>());
							this.jInternalFrameDetalleFormDetalleActivoFijo.depreciacionactivofijoBeanSwingJInternalFrame.depreciacionactivofijoLogic.setDepreciacionActivoFijos(new ArrayList<DepreciacionActivoFijo>());
							this.jInternalFrameDetalleFormDetalleActivoFijo.gastodepreciacioncentrocostoBeanSwingJInternalFrame.gastodepreciacioncentrocostoLogic.setGastoDepreciacionCentroCostos(new ArrayList<GastoDepreciacionCentroCosto>());
							this.jInternalFrameDetalleFormDetalleActivoFijo.parteactivofijoBeanSwingJInternalFrame.parteactivofijoLogic.setParteActivoFijos(new ArrayList<ParteActivoFijo>());
							} else if(Constantes.ISUSAEJBREMOTE ||Constantes.ISUSAEJBHOME) {
								
							this.jInternalFrameDetalleFormDetalleActivoFijo.mantenimientoactivofijoBeanSwingJInternalFrame.mantenimientoactivofijos= new ArrayList<MantenimientoActivoFijo>();
							this.jInternalFrameDetalleFormDetalleActivoFijo.serviciotransporteBeanSwingJInternalFrame.serviciotransportes= new ArrayList<ServicioTransporte>();
							this.jInternalFrameDetalleFormDetalleActivoFijo.movimientoactivofijoBeanSwingJInternalFrame.movimientoactivofijos= new ArrayList<MovimientoActivoFijo>();
							this.jInternalFrameDetalleFormDetalleActivoFijo.vehiculoBeanSwingJInternalFrame.vehiculos= new ArrayList<Vehiculo>();
							this.jInternalFrameDetalleFormDetalleActivoFijo.metododepreciacionBeanSwingJInternalFrame.metododepreciacions= new ArrayList<MetodoDepreciacion>();
							this.jInternalFrameDetalleFormDetalleActivoFijo.responsableactivofijoBeanSwingJInternalFrame.responsableactivofijos= new ArrayList<ResponsableActivoFijo>();
							this.jInternalFrameDetalleFormDetalleActivoFijo.depreciacionactivofijoBeanSwingJInternalFrame.depreciacionactivofijos= new ArrayList<DepreciacionActivoFijo>();
							this.jInternalFrameDetalleFormDetalleActivoFijo.gastodepreciacioncentrocostoBeanSwingJInternalFrame.gastodepreciacioncentrocostos= new ArrayList<GastoDepreciacionCentroCosto>();
							this.jInternalFrameDetalleFormDetalleActivoFijo.parteactivofijoBeanSwingJInternalFrame.parteactivofijos= new ArrayList<ParteActivoFijo>();
							}
							//ARCHITECTURE
						}
					}  else {
							
						

							if(this.jInternalFrameDetalleFormDetalleActivoFijo.mantenimientoactivofijoBeanSwingJInternalFrame!=null && this.jInternalFrameDetalleFormDetalleActivoFijo.mantenimientoactivofijoBeanSwingJInternalFrame.conTotales) {this.jInternalFrameDetalleFormDetalleActivoFijo.mantenimientoactivofijoBeanSwingJInternalFrame.quitarFilaTotales();}
							detalleactivofijoAux.setMantenimientoActivoFijos(this.jInternalFrameDetalleFormDetalleActivoFijo.mantenimientoactivofijoBeanSwingJInternalFrame.mantenimientoactivofijoLogic.getMantenimientoActivoFijos());

							if(this.jInternalFrameDetalleFormDetalleActivoFijo.serviciotransporteBeanSwingJInternalFrame!=null && this.jInternalFrameDetalleFormDetalleActivoFijo.serviciotransporteBeanSwingJInternalFrame.conTotales) {this.jInternalFrameDetalleFormDetalleActivoFijo.serviciotransporteBeanSwingJInternalFrame.quitarFilaTotales();}
							detalleactivofijoAux.setServicioTransportes(this.jInternalFrameDetalleFormDetalleActivoFijo.serviciotransporteBeanSwingJInternalFrame.serviciotransporteLogic.getServicioTransportes());

							if(this.jInternalFrameDetalleFormDetalleActivoFijo.movimientoactivofijoBeanSwingJInternalFrame!=null && this.jInternalFrameDetalleFormDetalleActivoFijo.movimientoactivofijoBeanSwingJInternalFrame.conTotales) {this.jInternalFrameDetalleFormDetalleActivoFijo.movimientoactivofijoBeanSwingJInternalFrame.quitarFilaTotales();}
							detalleactivofijoAux.setMovimientoActivoFijoDestinos(this.jInternalFrameDetalleFormDetalleActivoFijo.movimientoactivofijoBeanSwingJInternalFrame.movimientoactivofijoLogic.getMovimientoActivoFijos());

							if(this.jInternalFrameDetalleFormDetalleActivoFijo.vehiculoBeanSwingJInternalFrame!=null && this.jInternalFrameDetalleFormDetalleActivoFijo.vehiculoBeanSwingJInternalFrame.conTotales) {this.jInternalFrameDetalleFormDetalleActivoFijo.vehiculoBeanSwingJInternalFrame.quitarFilaTotales();}
							detalleactivofijoAux.setVehiculos(this.jInternalFrameDetalleFormDetalleActivoFijo.vehiculoBeanSwingJInternalFrame.vehiculoLogic.getVehiculos());

							if(this.jInternalFrameDetalleFormDetalleActivoFijo.metododepreciacionBeanSwingJInternalFrame!=null && this.jInternalFrameDetalleFormDetalleActivoFijo.metododepreciacionBeanSwingJInternalFrame.conTotales) {this.jInternalFrameDetalleFormDetalleActivoFijo.metododepreciacionBeanSwingJInternalFrame.quitarFilaTotales();}
							detalleactivofijoAux.setMetodoDepreciacions(this.jInternalFrameDetalleFormDetalleActivoFijo.metododepreciacionBeanSwingJInternalFrame.metododepreciacionLogic.getMetodoDepreciacions());

							if(this.jInternalFrameDetalleFormDetalleActivoFijo.responsableactivofijoBeanSwingJInternalFrame!=null && this.jInternalFrameDetalleFormDetalleActivoFijo.responsableactivofijoBeanSwingJInternalFrame.conTotales) {this.jInternalFrameDetalleFormDetalleActivoFijo.responsableactivofijoBeanSwingJInternalFrame.quitarFilaTotales();}
							detalleactivofijoAux.setResponsableActivoFijos(this.jInternalFrameDetalleFormDetalleActivoFijo.responsableactivofijoBeanSwingJInternalFrame.responsableactivofijoLogic.getResponsableActivoFijos());

							if(this.jInternalFrameDetalleFormDetalleActivoFijo.depreciacionactivofijoBeanSwingJInternalFrame!=null && this.jInternalFrameDetalleFormDetalleActivoFijo.depreciacionactivofijoBeanSwingJInternalFrame.conTotales) {this.jInternalFrameDetalleFormDetalleActivoFijo.depreciacionactivofijoBeanSwingJInternalFrame.quitarFilaTotales();}
							detalleactivofijoAux.setDepreciacionActivoFijos(this.jInternalFrameDetalleFormDetalleActivoFijo.depreciacionactivofijoBeanSwingJInternalFrame.depreciacionactivofijoLogic.getDepreciacionActivoFijos());

							if(this.jInternalFrameDetalleFormDetalleActivoFijo.gastodepreciacioncentrocostoBeanSwingJInternalFrame!=null && this.jInternalFrameDetalleFormDetalleActivoFijo.gastodepreciacioncentrocostoBeanSwingJInternalFrame.conTotales) {this.jInternalFrameDetalleFormDetalleActivoFijo.gastodepreciacioncentrocostoBeanSwingJInternalFrame.quitarFilaTotales();}
							detalleactivofijoAux.setGastoDepreciacionCentroCostos(this.jInternalFrameDetalleFormDetalleActivoFijo.gastodepreciacioncentrocostoBeanSwingJInternalFrame.gastodepreciacioncentrocostoLogic.getGastoDepreciacionCentroCostos());

							if(this.jInternalFrameDetalleFormDetalleActivoFijo.parteactivofijoBeanSwingJInternalFrame!=null && this.jInternalFrameDetalleFormDetalleActivoFijo.parteactivofijoBeanSwingJInternalFrame.conTotales) {this.jInternalFrameDetalleFormDetalleActivoFijo.parteactivofijoBeanSwingJInternalFrame.quitarFilaTotales();}
							detalleactivofijoAux.setParteActivoFijos(this.jInternalFrameDetalleFormDetalleActivoFijo.parteactivofijoBeanSwingJInternalFrame.parteactivofijoLogic.getParteActivoFijos());
								
						//ARCHITECTURE
						if(Constantes.ISUSAEJBLOGICLAYER) {
							if(this.detalleactivofijoSessionBean.getEstaModoGuardarRelaciones() 
								|| this.detalleactivofijoSessionBean.getEsGuardarRelacionado())	{
								actualizarLista(detalleactivofijoAux,detalleactivofijoLogic.getDetalleActivoFijos());
							}
						} else if(Constantes.ISUSAEJBREMOTE||Constantes.ISUSAEJBHOME) {
							actualizarLista(detalleactivofijoAux,detalleactivofijos);
						}
						//ARCHITECTURE
					}
				}				
			} else if(maintenanceType==MaintenanceType.GUARDARCAMBIOS) {		
				
				//ARCHITECTURE
				if(Constantes.ISUSAEJBLOGICLAYER) {
					this.detalleactivofijoLogic.getDetalleActivoFijos().addAll(this.detalleactivofijosEliminados);
					
					detalleactivofijoLogic.saveDetalleActivoFijos();//WithConnection
					//detalleactivofijoLogic.getSetVersionRowDetalleActivoFijos();//WithConnection
				} else if(Constantes.ISUSAEJBREMOTE) {
				} else if(Constantes.ISUSAEJBHOME) {
				}	
				//ARCHITECTURE
				this.refrescarForeignKeysDescripcionesDetalleActivoFijo();
				
				this.detalleactivofijosEliminados= new ArrayList<DetalleActivoFijo>();		
			}
			
			if(this.detalleactivofijoSessionBean.getEsGuardarRelacionado()) {
				 this.crearFilaTotales();
			}
			
			
									
			if(this.parametroGeneralUsuario.getcon_mensaje_confirmacion() && !this.detalleactivofijoSessionBean.getEsGuardarRelacionado()) {//Constantes.ISMOSTRARMENSAJESMANTENIMIENTO && 
				if(!this.isPostAccionSinMensaje) {
					JOptionPane.showMessageDialog(this,"Detalle Activo Fijo GUARDADO CORRECTAMENTE","MANTENIMIENTO DE Detalle Activo Fijo",JOptionPane.INFORMATION_MESSAGE);
					if(maintenanceType==MaintenanceType.NUEVO || maintenanceType==MaintenanceType.ACTUALIZAR) {
						//CUANDO ES NUEVO SE PIERDE REFERENCIA NO SE PORQUE
						this.detalleactivofijo=detalleactivofijoAux;
					}
				}
			}
			
			this.isErrorGuardar=false;
			
			this.inicializarInvalidValues();
		/*
		} else {
			this.mostrarInvalidValues();	
		}
		*/
			
		} catch(Exception e) {
			this.isErrorGuardar=true;
			
			this.crearFilaTotales();
			
			throw e;
		} finally {
      		//this.finishProcessDetalleActivoFijo();
      	}
		
	}	
	
	public void actualizarRelaciones(DetalleActivoFijo detalleactivofijoLocal) throws Exception {
		
		if(this.detalleactivofijoSessionBean.getConGuardarRelaciones()) {			
			
			if(Constantes.ISUSAEJBLOGICLAYER) {
			
				detalleactivofijoLocal.setMantenimientoActivoFijos(this.jInternalFrameDetalleFormDetalleActivoFijo.mantenimientoactivofijoBeanSwingJInternalFrame.mantenimientoactivofijoLogic.getMantenimientoActivoFijos());
				detalleactivofijoLocal.setServicioTransportes(this.jInternalFrameDetalleFormDetalleActivoFijo.serviciotransporteBeanSwingJInternalFrame.serviciotransporteLogic.getServicioTransportes());
				detalleactivofijoLocal.setMovimientoActivoFijoDestinos(this.jInternalFrameDetalleFormDetalleActivoFijo.movimientoactivofijoBeanSwingJInternalFrame.movimientoactivofijoLogic.getMovimientoActivoFijos());
				detalleactivofijoLocal.setVehiculos(this.jInternalFrameDetalleFormDetalleActivoFijo.vehiculoBeanSwingJInternalFrame.vehiculoLogic.getVehiculos());
				detalleactivofijoLocal.setMetodoDepreciacions(this.jInternalFrameDetalleFormDetalleActivoFijo.metododepreciacionBeanSwingJInternalFrame.metododepreciacionLogic.getMetodoDepreciacions());
				detalleactivofijoLocal.setResponsableActivoFijos(this.jInternalFrameDetalleFormDetalleActivoFijo.responsableactivofijoBeanSwingJInternalFrame.responsableactivofijoLogic.getResponsableActivoFijos());
				detalleactivofijoLocal.setDepreciacionActivoFijos(this.jInternalFrameDetalleFormDetalleActivoFijo.depreciacionactivofijoBeanSwingJInternalFrame.depreciacionactivofijoLogic.getDepreciacionActivoFijos());
				detalleactivofijoLocal.setGastoDepreciacionCentroCostos(this.jInternalFrameDetalleFormDetalleActivoFijo.gastodepreciacioncentrocostoBeanSwingJInternalFrame.gastodepreciacioncentrocostoLogic.getGastoDepreciacionCentroCostos());
				detalleactivofijoLocal.setParteActivoFijos(this.jInternalFrameDetalleFormDetalleActivoFijo.parteactivofijoBeanSwingJInternalFrame.parteactivofijoLogic.getParteActivoFijos());
			
			} else {
			
				detalleactivofijoLocal.setMantenimientoActivoFijos(this.jInternalFrameDetalleFormDetalleActivoFijo.mantenimientoactivofijoBeanSwingJInternalFrame.mantenimientoactivofijos);
				detalleactivofijoLocal.setServicioTransportes(this.jInternalFrameDetalleFormDetalleActivoFijo.serviciotransporteBeanSwingJInternalFrame.serviciotransportes);
				detalleactivofijoLocal.setMovimientoActivoFijoDestinos(this.jInternalFrameDetalleFormDetalleActivoFijo.movimientoactivofijoBeanSwingJInternalFrame.movimientoactivofijos);
				detalleactivofijoLocal.setVehiculos(this.jInternalFrameDetalleFormDetalleActivoFijo.vehiculoBeanSwingJInternalFrame.vehiculos);
				detalleactivofijoLocal.setMetodoDepreciacions(this.jInternalFrameDetalleFormDetalleActivoFijo.metododepreciacionBeanSwingJInternalFrame.metododepreciacions);
				detalleactivofijoLocal.setResponsableActivoFijos(this.jInternalFrameDetalleFormDetalleActivoFijo.responsableactivofijoBeanSwingJInternalFrame.responsableactivofijos);
				detalleactivofijoLocal.setDepreciacionActivoFijos(this.jInternalFrameDetalleFormDetalleActivoFijo.depreciacionactivofijoBeanSwingJInternalFrame.depreciacionactivofijos);
				detalleactivofijoLocal.setGastoDepreciacionCentroCostos(this.jInternalFrameDetalleFormDetalleActivoFijo.gastodepreciacioncentrocostoBeanSwingJInternalFrame.gastodepreciacioncentrocostos);
				detalleactivofijoLocal.setParteActivoFijos(this.jInternalFrameDetalleFormDetalleActivoFijo.parteactivofijoBeanSwingJInternalFrame.parteactivofijos);	
			}
		}
	}
	
	public void actualizarRelacionFkPadreActual(DetalleActivoFijo detalleactivofijoLocal) throws Exception {	
		if(this.detalleactivofijoSessionBean.getEsGuardarRelacionado()) {			
			
		
			if(this.jInternalFrameParent.getClass().equals(EmpresaDetalleFormJInternalFrame.class)) {
				EmpresaBeanSwingJInternalFrame empresaBeanSwingJInternalFrameLocal=(EmpresaBeanSwingJInternalFrame) ((EmpresaDetalleFormJInternalFrame) this.jInternalFrameParent).jInternalFrameParent;

				empresaBeanSwingJInternalFrameLocal.setVariablesFormularioToObjetoActualTodoEmpresa(empresaBeanSwingJInternalFrameLocal.getempresa(),true);
				empresaBeanSwingJInternalFrameLocal.actualizarLista(empresaBeanSwingJInternalFrameLocal.empresa,this.empresasForeignKey);

				empresaBeanSwingJInternalFrameLocal.actualizarRelaciones(empresaBeanSwingJInternalFrameLocal.empresa);

				detalleactivofijoLocal.setEmpresa(empresaBeanSwingJInternalFrameLocal.empresa);

				this.addItemDefectoCombosForeignKeyEmpresa();
				this.cargarCombosFrameEmpresasForeignKey("Formulario");
				this.setActualEmpresaForeignKey(empresaBeanSwingJInternalFrameLocal.empresa.getId(),false,"Formulario");
			}
			 else if(this.jInternalFrameParent.getClass().equals(SucursalDetalleFormJInternalFrame.class)) {
				SucursalBeanSwingJInternalFrame sucursalBeanSwingJInternalFrameLocal=(SucursalBeanSwingJInternalFrame) ((SucursalDetalleFormJInternalFrame) this.jInternalFrameParent).jInternalFrameParent;

				sucursalBeanSwingJInternalFrameLocal.setVariablesFormularioToObjetoActualTodoSucursal(sucursalBeanSwingJInternalFrameLocal.getsucursal(),true);
				sucursalBeanSwingJInternalFrameLocal.actualizarLista(sucursalBeanSwingJInternalFrameLocal.sucursal,this.sucursalsForeignKey);

				sucursalBeanSwingJInternalFrameLocal.actualizarRelaciones(sucursalBeanSwingJInternalFrameLocal.sucursal);

				detalleactivofijoLocal.setSucursal(sucursalBeanSwingJInternalFrameLocal.sucursal);

				this.addItemDefectoCombosForeignKeySucursal();
				this.cargarCombosFrameSucursalsForeignKey("Formulario");
				this.setActualSucursalForeignKey(sucursalBeanSwingJInternalFrameLocal.sucursal.getId(),false,"Formulario");
			}
			 else if(this.jInternalFrameParent.getClass().equals(DetalleGrupoActivoFijoDetalleFormJInternalFrame.class)) {
				DetalleGrupoActivoFijoBeanSwingJInternalFrame detallegrupoactivofijoBeanSwingJInternalFrameLocal=(DetalleGrupoActivoFijoBeanSwingJInternalFrame) ((DetalleGrupoActivoFijoDetalleFormJInternalFrame) this.jInternalFrameParent).jInternalFrameParent;

				detallegrupoactivofijoBeanSwingJInternalFrameLocal.setVariablesFormularioToObjetoActualTodoDetalleGrupoActivoFijo(detallegrupoactivofijoBeanSwingJInternalFrameLocal.getdetallegrupoactivofijo(),true);
				detallegrupoactivofijoBeanSwingJInternalFrameLocal.actualizarLista(detallegrupoactivofijoBeanSwingJInternalFrameLocal.detallegrupoactivofijo,this.detallegrupoactivofijosForeignKey);

				detallegrupoactivofijoBeanSwingJInternalFrameLocal.actualizarRelaciones(detallegrupoactivofijoBeanSwingJInternalFrameLocal.detallegrupoactivofijo);

				detalleactivofijoLocal.setDetalleGrupoActivoFijo(detallegrupoactivofijoBeanSwingJInternalFrameLocal.detallegrupoactivofijo);

				this.addItemDefectoCombosForeignKeyDetalleGrupoActivoFijo();
				this.cargarCombosFrameDetalleGrupoActivoFijosForeignKey("Formulario");
				this.setActualDetalleGrupoActivoFijoForeignKey(detallegrupoactivofijoBeanSwingJInternalFrameLocal.detallegrupoactivofijo.getId(),false,"Formulario");
			}
			 else if(this.jInternalFrameParent.getClass().equals(SubGrupoActivoFijoDetalleFormJInternalFrame.class)) {
				SubGrupoActivoFijoBeanSwingJInternalFrame subgrupoactivofijoBeanSwingJInternalFrameLocal=(SubGrupoActivoFijoBeanSwingJInternalFrame) ((SubGrupoActivoFijoDetalleFormJInternalFrame) this.jInternalFrameParent).jInternalFrameParent;

				subgrupoactivofijoBeanSwingJInternalFrameLocal.setVariablesFormularioToObjetoActualTodoSubGrupoActivoFijo(subgrupoactivofijoBeanSwingJInternalFrameLocal.getsubgrupoactivofijo(),true);
				subgrupoactivofijoBeanSwingJInternalFrameLocal.actualizarLista(subgrupoactivofijoBeanSwingJInternalFrameLocal.subgrupoactivofijo,this.subgrupoactivofijosForeignKey);

				subgrupoactivofijoBeanSwingJInternalFrameLocal.actualizarRelaciones(subgrupoactivofijoBeanSwingJInternalFrameLocal.subgrupoactivofijo);

				detalleactivofijoLocal.setSubGrupoActivoFijo(subgrupoactivofijoBeanSwingJInternalFrameLocal.subgrupoactivofijo);

				this.addItemDefectoCombosForeignKeySubGrupoActivoFijo();
				this.cargarCombosFrameSubGrupoActivoFijosForeignKey("Formulario");
				this.setActualSubGrupoActivoFijoForeignKey(subgrupoactivofijoBeanSwingJInternalFrameLocal.subgrupoactivofijo.getId(),false,"Formulario");
			}
			 else if(this.jInternalFrameParent.getClass().equals(TipoRamoActivoFijoDetalleFormJInternalFrame.class)) {
				TipoRamoActivoFijoBeanSwingJInternalFrame tiporamoactivofijoBeanSwingJInternalFrameLocal=(TipoRamoActivoFijoBeanSwingJInternalFrame) ((TipoRamoActivoFijoDetalleFormJInternalFrame) this.jInternalFrameParent).jInternalFrameParent;

				tiporamoactivofijoBeanSwingJInternalFrameLocal.setVariablesFormularioToObjetoActualTodoTipoRamoActivoFijo(tiporamoactivofijoBeanSwingJInternalFrameLocal.gettiporamoactivofijo(),true);
				tiporamoactivofijoBeanSwingJInternalFrameLocal.actualizarLista(tiporamoactivofijoBeanSwingJInternalFrameLocal.tiporamoactivofijo,this.tiporamoactivofijosForeignKey);

				tiporamoactivofijoBeanSwingJInternalFrameLocal.actualizarRelaciones(tiporamoactivofijoBeanSwingJInternalFrameLocal.tiporamoactivofijo);

				detalleactivofijoLocal.setTipoRamoActivoFijo(tiporamoactivofijoBeanSwingJInternalFrameLocal.tiporamoactivofijo);

				this.addItemDefectoCombosForeignKeyTipoRamoActivoFijo();
				this.cargarCombosFrameTipoRamoActivoFijosForeignKey("Formulario");
				this.setActualTipoRamoActivoFijoForeignKey(tiporamoactivofijoBeanSwingJInternalFrameLocal.tiporamoactivofijo.getId(),false,"Formulario");
			}
			 else if(this.jInternalFrameParent.getClass().equals(TipoActivoFijoEmpresaDetalleFormJInternalFrame.class)) {
				TipoActivoFijoEmpresaBeanSwingJInternalFrame tipoactivofijoempresaBeanSwingJInternalFrameLocal=(TipoActivoFijoEmpresaBeanSwingJInternalFrame) ((TipoActivoFijoEmpresaDetalleFormJInternalFrame) this.jInternalFrameParent).jInternalFrameParent;

				tipoactivofijoempresaBeanSwingJInternalFrameLocal.setVariablesFormularioToObjetoActualTodoTipoActivoFijoEmpresa(tipoactivofijoempresaBeanSwingJInternalFrameLocal.gettipoactivofijoempresa(),true);
				tipoactivofijoempresaBeanSwingJInternalFrameLocal.actualizarLista(tipoactivofijoempresaBeanSwingJInternalFrameLocal.tipoactivofijoempresa,this.tipoactivofijoempresasForeignKey);

				tipoactivofijoempresaBeanSwingJInternalFrameLocal.actualizarRelaciones(tipoactivofijoempresaBeanSwingJInternalFrameLocal.tipoactivofijoempresa);

				detalleactivofijoLocal.setTipoActivoFijoEmpresa(tipoactivofijoempresaBeanSwingJInternalFrameLocal.tipoactivofijoempresa);

				this.addItemDefectoCombosForeignKeyTipoActivoFijoEmpresa();
				this.cargarCombosFrameTipoActivoFijoEmpresasForeignKey("Formulario");
				this.setActualTipoActivoFijoEmpresaForeignKey(tipoactivofijoempresaBeanSwingJInternalFrameLocal.tipoactivofijoempresa.getId(),false,"Formulario");
			}
			 else if(this.jInternalFrameParent.getClass().equals(TipoDepreciacionEmpresaDetalleFormJInternalFrame.class)) {
				TipoDepreciacionEmpresaBeanSwingJInternalFrame tipodepreciacionempresaBeanSwingJInternalFrameLocal=(TipoDepreciacionEmpresaBeanSwingJInternalFrame) ((TipoDepreciacionEmpresaDetalleFormJInternalFrame) this.jInternalFrameParent).jInternalFrameParent;

				tipodepreciacionempresaBeanSwingJInternalFrameLocal.setVariablesFormularioToObjetoActualTodoTipoDepreciacionEmpresa(tipodepreciacionempresaBeanSwingJInternalFrameLocal.gettipodepreciacionempresa(),true);
				tipodepreciacionempresaBeanSwingJInternalFrameLocal.actualizarLista(tipodepreciacionempresaBeanSwingJInternalFrameLocal.tipodepreciacionempresa,this.tipodepreciacionempresasForeignKey);

				tipodepreciacionempresaBeanSwingJInternalFrameLocal.actualizarRelaciones(tipodepreciacionempresaBeanSwingJInternalFrameLocal.tipodepreciacionempresa);

				detalleactivofijoLocal.setTipoDepreciacionEmpresa(tipodepreciacionempresaBeanSwingJInternalFrameLocal.tipodepreciacionempresa);

				this.addItemDefectoCombosForeignKeyTipoDepreciacionEmpresa();
				this.cargarCombosFrameTipoDepreciacionEmpresasForeignKey("Formulario");
				this.setActualTipoDepreciacionEmpresaForeignKey(tipodepreciacionempresaBeanSwingJInternalFrameLocal.tipodepreciacionempresa.getId(),false,"Formulario");
			}
			 else if(this.jInternalFrameParent.getClass().equals(EstadoActivoFijoDetalleFormJInternalFrame.class)) {
				EstadoActivoFijoBeanSwingJInternalFrame estadoactivofijoBeanSwingJInternalFrameLocal=(EstadoActivoFijoBeanSwingJInternalFrame) ((EstadoActivoFijoDetalleFormJInternalFrame) this.jInternalFrameParent).jInternalFrameParent;

				estadoactivofijoBeanSwingJInternalFrameLocal.setVariablesFormularioToObjetoActualTodoEstadoActivoFijo(estadoactivofijoBeanSwingJInternalFrameLocal.getestadoactivofijo(),true);
				estadoactivofijoBeanSwingJInternalFrameLocal.actualizarLista(estadoactivofijoBeanSwingJInternalFrameLocal.estadoactivofijo,this.estadoactivofijosForeignKey);

				estadoactivofijoBeanSwingJInternalFrameLocal.actualizarRelaciones(estadoactivofijoBeanSwingJInternalFrameLocal.estadoactivofijo);

				detalleactivofijoLocal.setEstadoActivoFijo(estadoactivofijoBeanSwingJInternalFrameLocal.estadoactivofijo);

				this.addItemDefectoCombosForeignKeyEstadoActivoFijo();
				this.cargarCombosFrameEstadoActivoFijosForeignKey("Formulario");
				this.setActualEstadoActivoFijoForeignKey(estadoactivofijoBeanSwingJInternalFrameLocal.estadoactivofijo.getId(),false,"Formulario");
			}
			 else if(this.jInternalFrameParent.getClass().equals(ClienteDetalleFormJInternalFrame.class)) {
				ClienteBeanSwingJInternalFrame clienteBeanSwingJInternalFrameLocal=(ClienteBeanSwingJInternalFrame) ((ClienteDetalleFormJInternalFrame) this.jInternalFrameParent).jInternalFrameParent;

				clienteBeanSwingJInternalFrameLocal.setVariablesFormularioToObjetoActualTodoCliente(clienteBeanSwingJInternalFrameLocal.getcliente(),true);
				clienteBeanSwingJInternalFrameLocal.actualizarLista(clienteBeanSwingJInternalFrameLocal.cliente,this.clientesForeignKey);

				clienteBeanSwingJInternalFrameLocal.actualizarRelaciones(clienteBeanSwingJInternalFrameLocal.cliente);

				detalleactivofijoLocal.setCliente(clienteBeanSwingJInternalFrameLocal.cliente);

				this.addItemDefectoCombosForeignKeyCliente();
				this.cargarCombosFrameClientesForeignKey("Formulario");
				this.setActualClienteForeignKey(clienteBeanSwingJInternalFrameLocal.cliente.getId(),false,"Formulario");
			}
			 else if(this.jInternalFrameParent.getClass().equals(PartidaPresuDetalleFormJInternalFrame.class)) {
				PartidaPresuBeanSwingJInternalFrame partidapresuBeanSwingJInternalFrameLocal=(PartidaPresuBeanSwingJInternalFrame) ((PartidaPresuDetalleFormJInternalFrame) this.jInternalFrameParent).jInternalFrameParent;

				partidapresuBeanSwingJInternalFrameLocal.setVariablesFormularioToObjetoActualTodoPartidaPresu(partidapresuBeanSwingJInternalFrameLocal.getpartidapresu(),true);
				partidapresuBeanSwingJInternalFrameLocal.actualizarLista(partidapresuBeanSwingJInternalFrameLocal.partidapresu,this.partidapresusForeignKey);

				partidapresuBeanSwingJInternalFrameLocal.actualizarRelaciones(partidapresuBeanSwingJInternalFrameLocal.partidapresu);

				detalleactivofijoLocal.setPartidaPresu(partidapresuBeanSwingJInternalFrameLocal.partidapresu);

				this.addItemDefectoCombosForeignKeyPartidaPresu();
				this.cargarCombosFramePartidaPresusForeignKey("Formulario");
				this.setActualPartidaPresuForeignKey(partidapresuBeanSwingJInternalFrameLocal.partidapresu.getId(),false,"Formulario");
			}
		
		}
	}
	
	public Boolean validarDetalleActivoFijoActual() throws Exception {
		Boolean estaValidado=false;
		this.inicializarInvalidValues();
		
		/*
		int intSelectedRow = this.jTableDatosDetalleActivoFijo.getSelectedRow();
				
		//ARCHITECTURE
		if(Constantes.ISUSAEJBLOGICLAYER) {
			this.detalleactivofijo =(DetalleActivoFijo) this.detalleactivofijoLogic.getDetalleActivoFijos().toArray()[this.jTableDatosDetalleActivoFijo.convertRowIndexToModel(intSelectedRow)];
		} else if(Constantes.ISUSAEJBREMOTE ||Constantes.ISUSAEJBHOME) {
			this.detalleactivofijo =(DetalleActivoFijo) this.detalleactivofijos.toArray()[this.jTableDatosDetalleActivoFijo.convertRowIndexToModel(intSelectedRow)];
		}
		//ARCHITECTURE
		*/
		
		this.invalidValues = detalleactivofijoValidator.getInvalidValues(this.detalleactivofijo);
					
		if(this.invalidValues==null || this.invalidValues.length<=0) {
			estaValidado=true;
		} else {
			this.mostrarInvalidValues();	
		}
		
		return estaValidado;
	}
	
	public void actualizarLista(DetalleActivoFijo detalleactivofijo,List<DetalleActivoFijo> detalleactivofijos) throws Exception {
		try	{		
			DetalleActivoFijoConstantesFunciones.actualizarLista(detalleactivofijo,detalleactivofijos,this.detalleactivofijoSessionBean.getEsGuardarRelacionado());		
		} catch(Exception e) {
			throw e;
		}
	}		
	
	public void actualizarSelectedLista(DetalleActivoFijo detalleactivofijo,List<DetalleActivoFijo> detalleactivofijos) throws Exception {
		try	{			
			DetalleActivoFijoConstantesFunciones.actualizarSelectedLista(detalleactivofijo,detalleactivofijos);
		} catch(Exception e) {
			throw e;
		}
	}	
	
	public Boolean tieneElementosSeleccionados() throws Exception {
		Boolean tiene=false;
		
		List<DetalleActivoFijo> detalleactivofijosLocal=null;
		
		try	{			
			//ARCHITECTURE
			if(Constantes.ISUSAEJBLOGICLAYER) {
				detalleactivofijosLocal=this.detalleactivofijoLogic.getDetalleActivoFijos();
			} else if(Constantes.ISUSAEJBREMOTE || Constantes.ISUSAEJBHOME) {
				detalleactivofijosLocal=this.detalleactivofijos;
			}
			//ARCHITECTURE
		
			for(DetalleActivoFijo detalleactivofijoLocal:detalleactivofijosLocal) {
				if(this.permiteMantenimiento(detalleactivofijoLocal) && detalleactivofijoLocal.getIsSelected()) {
					tiene=true;
					break;
				}
			}
		} catch(Exception e) {
			throw e;
		}
		
		return tiene;
	}			
	
	public void mostrarInvalidValues() throws Exception {
		String sMensaje="";
				
		for (InvalidValue invalidValue : this.invalidValues) {
			sMensaje+="\r\n"+DetalleActivoFijoConstantesFunciones.getDetalleActivoFijoLabelDesdeNombre(invalidValue.getPropertyName())+"->"+invalidValue.getMessage();
			
			//MOSTRAR CAMPOS INVALIDOS
			if(invalidValue.getPropertyName().equals(DetalleActivoFijoConstantesFunciones.IDEMPRESA)) {FuncionesSwing.mostrarCampoMensajeInvalido(false,this.jInternalFrameDetalleFormDetalleActivoFijo.jLabelid_empresaDetalleActivoFijo,invalidValue.getMessage());}
			if(invalidValue.getPropertyName().equals(DetalleActivoFijoConstantesFunciones.IDSUCURSAL)) {FuncionesSwing.mostrarCampoMensajeInvalido(false,this.jInternalFrameDetalleFormDetalleActivoFijo.jLabelid_sucursalDetalleActivoFijo,invalidValue.getMessage());}
			if(invalidValue.getPropertyName().equals(DetalleActivoFijoConstantesFunciones.IDDETALLEGRUPOACTIVOFIJO)) {FuncionesSwing.mostrarCampoMensajeInvalido(false,this.jInternalFrameDetalleFormDetalleActivoFijo.jLabelid_detalle_grupo_activo_fijoDetalleActivoFijo,invalidValue.getMessage());}
			if(invalidValue.getPropertyName().equals(DetalleActivoFijoConstantesFunciones.IDSUBGRUPOACTIVOFIJO)) {FuncionesSwing.mostrarCampoMensajeInvalido(false,this.jInternalFrameDetalleFormDetalleActivoFijo.jLabelid_sub_grupo_activo_fijoDetalleActivoFijo,invalidValue.getMessage());}
			if(invalidValue.getPropertyName().equals(DetalleActivoFijoConstantesFunciones.IDTIPORAMOACTIVOFIJO)) {FuncionesSwing.mostrarCampoMensajeInvalido(false,this.jInternalFrameDetalleFormDetalleActivoFijo.jLabelid_tipo_ramo_activo_fijoDetalleActivoFijo,invalidValue.getMessage());}
			if(invalidValue.getPropertyName().equals(DetalleActivoFijoConstantesFunciones.IDTIPOACTIVOFIJOEMPRESA)) {FuncionesSwing.mostrarCampoMensajeInvalido(false,this.jInternalFrameDetalleFormDetalleActivoFijo.jLabelid_tipo_activo_fijo_empresaDetalleActivoFijo,invalidValue.getMessage());}
			if(invalidValue.getPropertyName().equals(DetalleActivoFijoConstantesFunciones.IDTIPODEPRECIACIONEMPRESA)) {FuncionesSwing.mostrarCampoMensajeInvalido(false,this.jInternalFrameDetalleFormDetalleActivoFijo.jLabelid_tipo_depreciacion_empresaDetalleActivoFijo,invalidValue.getMessage());}
			if(invalidValue.getPropertyName().equals(DetalleActivoFijoConstantesFunciones.IDESTADOACTIVOFIJO)) {FuncionesSwing.mostrarCampoMensajeInvalido(false,this.jInternalFrameDetalleFormDetalleActivoFijo.jLabelid_estado_activo_fijoDetalleActivoFijo,invalidValue.getMessage());}
			if(invalidValue.getPropertyName().equals(DetalleActivoFijoConstantesFunciones.IDCLIENTE)) {FuncionesSwing.mostrarCampoMensajeInvalido(false,this.jInternalFrameDetalleFormDetalleActivoFijo.jLabelid_clienteDetalleActivoFijo,invalidValue.getMessage());}
			if(invalidValue.getPropertyName().equals(DetalleActivoFijoConstantesFunciones.IDPARTIDAPRESU)) {FuncionesSwing.mostrarCampoMensajeInvalido(false,this.jInternalFrameDetalleFormDetalleActivoFijo.jLabelid_partida_presuDetalleActivoFijo,invalidValue.getMessage());}
			if(invalidValue.getPropertyName().equals(DetalleActivoFijoConstantesFunciones.CODIGO)) {FuncionesSwing.mostrarCampoMensajeInvalido(false,this.jInternalFrameDetalleFormDetalleActivoFijo.jLabelcodigoDetalleActivoFijo,invalidValue.getMessage());}
			if(invalidValue.getPropertyName().equals(DetalleActivoFijoConstantesFunciones.NOMBRE)) {FuncionesSwing.mostrarCampoMensajeInvalido(false,this.jInternalFrameDetalleFormDetalleActivoFijo.jLabelnombreDetalleActivoFijo,invalidValue.getMessage());}
			if(invalidValue.getPropertyName().equals(DetalleActivoFijoConstantesFunciones.SERIE)) {FuncionesSwing.mostrarCampoMensajeInvalido(false,this.jInternalFrameDetalleFormDetalleActivoFijo.jLabelserieDetalleActivoFijo,invalidValue.getMessage());}
			if(invalidValue.getPropertyName().equals(DetalleActivoFijoConstantesFunciones.FECHACOMPRA)) {FuncionesSwing.mostrarCampoMensajeInvalido(false,this.jInternalFrameDetalleFormDetalleActivoFijo.jLabelfecha_compraDetalleActivoFijo,invalidValue.getMessage());}
			if(invalidValue.getPropertyName().equals(DetalleActivoFijoConstantesFunciones.FECHAMANTENIMIENTO)) {FuncionesSwing.mostrarCampoMensajeInvalido(false,this.jInternalFrameDetalleFormDetalleActivoFijo.jLabelfecha_mantenimientoDetalleActivoFijo,invalidValue.getMessage());}
			if(invalidValue.getPropertyName().equals(DetalleActivoFijoConstantesFunciones.FECHACORRECCION)) {FuncionesSwing.mostrarCampoMensajeInvalido(false,this.jInternalFrameDetalleFormDetalleActivoFijo.jLabelfecha_correccionDetalleActivoFijo,invalidValue.getMessage());}
			if(invalidValue.getPropertyName().equals(DetalleActivoFijoConstantesFunciones.FECHADEPRECIACION)) {FuncionesSwing.mostrarCampoMensajeInvalido(false,this.jInternalFrameDetalleFormDetalleActivoFijo.jLabelfecha_depreciacionDetalleActivoFijo,invalidValue.getMessage());}
			if(invalidValue.getPropertyName().equals(DetalleActivoFijoConstantesFunciones.CLAVE)) {FuncionesSwing.mostrarCampoMensajeInvalido(false,this.jInternalFrameDetalleFormDetalleActivoFijo.jLabelclaveDetalleActivoFijo,invalidValue.getMessage());}
			if(invalidValue.getPropertyName().equals(DetalleActivoFijoConstantesFunciones.MARCA)) {FuncionesSwing.mostrarCampoMensajeInvalido(false,this.jInternalFrameDetalleFormDetalleActivoFijo.jLabelmarcaDetalleActivoFijo,invalidValue.getMessage());}
			if(invalidValue.getPropertyName().equals(DetalleActivoFijoConstantesFunciones.MODELO)) {FuncionesSwing.mostrarCampoMensajeInvalido(false,this.jInternalFrameDetalleFormDetalleActivoFijo.jLabelmodeloDetalleActivoFijo,invalidValue.getMessage());}
			if(invalidValue.getPropertyName().equals(DetalleActivoFijoConstantesFunciones.COLOR)) {FuncionesSwing.mostrarCampoMensajeInvalido(false,this.jInternalFrameDetalleFormDetalleActivoFijo.jLabelcolorDetalleActivoFijo,invalidValue.getMessage());}
			if(invalidValue.getPropertyName().equals(DetalleActivoFijoConstantesFunciones.FECHA)) {FuncionesSwing.mostrarCampoMensajeInvalido(false,this.jInternalFrameDetalleFormDetalleActivoFijo.jLabelfechaDetalleActivoFijo,invalidValue.getMessage());}
			if(invalidValue.getPropertyName().equals(DetalleActivoFijoConstantesFunciones.VALORUTIL)) {FuncionesSwing.mostrarCampoMensajeInvalido(false,this.jInternalFrameDetalleFormDetalleActivoFijo.jLabelvalor_utilDetalleActivoFijo,invalidValue.getMessage());}
			if(invalidValue.getPropertyName().equals(DetalleActivoFijoConstantesFunciones.COSTODECOMPRA)) {FuncionesSwing.mostrarCampoMensajeInvalido(false,this.jInternalFrameDetalleFormDetalleActivoFijo.jLabelcosto_de_compraDetalleActivoFijo,invalidValue.getMessage());}
			if(invalidValue.getPropertyName().equals(DetalleActivoFijoConstantesFunciones.VIDAUTIL)) {FuncionesSwing.mostrarCampoMensajeInvalido(false,this.jInternalFrameDetalleFormDetalleActivoFijo.jLabelvida_utilDetalleActivoFijo,invalidValue.getMessage());}
			if(invalidValue.getPropertyName().equals(DetalleActivoFijoConstantesFunciones.VALORRESIDUAL)) {FuncionesSwing.mostrarCampoMensajeInvalido(false,this.jInternalFrameDetalleFormDetalleActivoFijo.jLabelvalor_residualDetalleActivoFijo,invalidValue.getMessage());}
			if(invalidValue.getPropertyName().equals(DetalleActivoFijoConstantesFunciones.CANTIDAD)) {FuncionesSwing.mostrarCampoMensajeInvalido(false,this.jInternalFrameDetalleFormDetalleActivoFijo.jLabelcantidadDetalleActivoFijo,invalidValue.getMessage());}
			if(invalidValue.getPropertyName().equals(DetalleActivoFijoConstantesFunciones.NOMBREPROPIETARIO)) {FuncionesSwing.mostrarCampoMensajeInvalido(false,this.jInternalFrameDetalleFormDetalleActivoFijo.jLabelnombre_propietarioDetalleActivoFijo,invalidValue.getMessage());}
			if(invalidValue.getPropertyName().equals(DetalleActivoFijoConstantesFunciones.RESPONSABLE)) {FuncionesSwing.mostrarCampoMensajeInvalido(false,this.jInternalFrameDetalleFormDetalleActivoFijo.jLabelresponsableDetalleActivoFijo,invalidValue.getMessage());}
			if(invalidValue.getPropertyName().equals(DetalleActivoFijoConstantesFunciones.PATHFOTO)) {FuncionesSwing.mostrarCampoMensajeInvalido(false,this.jInternalFrameDetalleFormDetalleActivoFijo.jLabelpath_fotoDetalleActivoFijo,invalidValue.getMessage());}
			if(invalidValue.getPropertyName().equals(DetalleActivoFijoConstantesFunciones.NUMEROCOMPROBANTE)) {FuncionesSwing.mostrarCampoMensajeInvalido(false,this.jInternalFrameDetalleFormDetalleActivoFijo.jLabelnumero_comprobanteDetalleActivoFijo,invalidValue.getMessage());}
			if(invalidValue.getPropertyName().equals(DetalleActivoFijoConstantesFunciones.REFERENCIA)) {FuncionesSwing.mostrarCampoMensajeInvalido(false,this.jInternalFrameDetalleFormDetalleActivoFijo.jLabelreferenciaDetalleActivoFijo,invalidValue.getMessage());}
			if(invalidValue.getPropertyName().equals(DetalleActivoFijoConstantesFunciones.VALORCOTIZACION)) {FuncionesSwing.mostrarCampoMensajeInvalido(false,this.jInternalFrameDetalleFormDetalleActivoFijo.jLabelvalor_cotizacionDetalleActivoFijo,invalidValue.getMessage());}
			if(invalidValue.getPropertyName().equals(DetalleActivoFijoConstantesFunciones.CONPARTES)) {FuncionesSwing.mostrarCampoMensajeInvalido(false,this.jInternalFrameDetalleFormDetalleActivoFijo.jLabelcon_partesDetalleActivoFijo,invalidValue.getMessage());}
			if(invalidValue.getPropertyName().equals(DetalleActivoFijoConstantesFunciones.CONGARANTIA)) {FuncionesSwing.mostrarCampoMensajeInvalido(false,this.jInternalFrameDetalleFormDetalleActivoFijo.jLabelcon_garantiaDetalleActivoFijo,invalidValue.getMessage());}
			if(invalidValue.getPropertyName().equals(DetalleActivoFijoConstantesFunciones.CONEXISTENCIA)) {FuncionesSwing.mostrarCampoMensajeInvalido(false,this.jInternalFrameDetalleFormDetalleActivoFijo.jLabelcon_existenciaDetalleActivoFijo,invalidValue.getMessage());}
			if(invalidValue.getPropertyName().equals(DetalleActivoFijoConstantesFunciones.FECHABAJA)) {FuncionesSwing.mostrarCampoMensajeInvalido(false,this.jInternalFrameDetalleFormDetalleActivoFijo.jLabelfecha_bajaDetalleActivoFijo,invalidValue.getMessage());}
			if(invalidValue.getPropertyName().equals(DetalleActivoFijoConstantesFunciones.PATHFOTO2)) {FuncionesSwing.mostrarCampoMensajeInvalido(false,this.jInternalFrameDetalleFormDetalleActivoFijo.jLabelpath_foto2DetalleActivoFijo,invalidValue.getMessage());}
        }
		
		
		if(!sMensaje.equals("")) {
			//JOptionPane.showMessageDialog(this,sMensaje,"VALIDACION ",JOptionPane.ERROR_MESSAGE);
			throw new Exception(sMensaje);			
		}
		
		/*
		System.out.println(invalidValue);
        System.out.println("message=" + invalidValue.getMessage());
        System.out.println("propertyName=" + invalidValue.getPropertyName());
        System.out.println("propertyPath=" + invalidValue.getPropertyPath());
        System.out.println("value=" + invalidValue.getValue());
        */
	}		
	
	public void inicializarInvalidValues() throws Exception {
		String sMensaje="";	
		
		if(this.jInternalFrameDetalleFormDetalleActivoFijo!=null) {
		
		//MOSTRAR CAMPOS INVALIDOS
		FuncionesSwing.mostrarCampoMensajeInvalido(true,this.jInternalFrameDetalleFormDetalleActivoFijo.jLabelid_empresaDetalleActivoFijo,"");
		FuncionesSwing.mostrarCampoMensajeInvalido(true,this.jInternalFrameDetalleFormDetalleActivoFijo.jLabelid_sucursalDetalleActivoFijo,"");
		FuncionesSwing.mostrarCampoMensajeInvalido(true,this.jInternalFrameDetalleFormDetalleActivoFijo.jLabelid_detalle_grupo_activo_fijoDetalleActivoFijo,"");
		FuncionesSwing.mostrarCampoMensajeInvalido(true,this.jInternalFrameDetalleFormDetalleActivoFijo.jLabelid_sub_grupo_activo_fijoDetalleActivoFijo,"");
		FuncionesSwing.mostrarCampoMensajeInvalido(true,this.jInternalFrameDetalleFormDetalleActivoFijo.jLabelid_tipo_ramo_activo_fijoDetalleActivoFijo,"");
		FuncionesSwing.mostrarCampoMensajeInvalido(true,this.jInternalFrameDetalleFormDetalleActivoFijo.jLabelid_tipo_activo_fijo_empresaDetalleActivoFijo,"");
		FuncionesSwing.mostrarCampoMensajeInvalido(true,this.jInternalFrameDetalleFormDetalleActivoFijo.jLabelid_tipo_depreciacion_empresaDetalleActivoFijo,"");
		FuncionesSwing.mostrarCampoMensajeInvalido(true,this.jInternalFrameDetalleFormDetalleActivoFijo.jLabelid_estado_activo_fijoDetalleActivoFijo,"");
		FuncionesSwing.mostrarCampoMensajeInvalido(true,this.jInternalFrameDetalleFormDetalleActivoFijo.jLabelid_clienteDetalleActivoFijo,"");
		FuncionesSwing.mostrarCampoMensajeInvalido(true,this.jInternalFrameDetalleFormDetalleActivoFijo.jLabelid_partida_presuDetalleActivoFijo,"");
		FuncionesSwing.mostrarCampoMensajeInvalido(true,this.jInternalFrameDetalleFormDetalleActivoFijo.jLabelcodigoDetalleActivoFijo,"");
		FuncionesSwing.mostrarCampoMensajeInvalido(true,this.jInternalFrameDetalleFormDetalleActivoFijo.jLabelnombreDetalleActivoFijo,"");
		FuncionesSwing.mostrarCampoMensajeInvalido(true,this.jInternalFrameDetalleFormDetalleActivoFijo.jLabelserieDetalleActivoFijo,"");
		FuncionesSwing.mostrarCampoMensajeInvalido(true,this.jInternalFrameDetalleFormDetalleActivoFijo.jLabelfecha_compraDetalleActivoFijo,"");
		FuncionesSwing.mostrarCampoMensajeInvalido(true,this.jInternalFrameDetalleFormDetalleActivoFijo.jLabelfecha_mantenimientoDetalleActivoFijo,"");
		FuncionesSwing.mostrarCampoMensajeInvalido(true,this.jInternalFrameDetalleFormDetalleActivoFijo.jLabelfecha_correccionDetalleActivoFijo,"");
		FuncionesSwing.mostrarCampoMensajeInvalido(true,this.jInternalFrameDetalleFormDetalleActivoFijo.jLabelfecha_depreciacionDetalleActivoFijo,"");
		FuncionesSwing.mostrarCampoMensajeInvalido(true,this.jInternalFrameDetalleFormDetalleActivoFijo.jLabelclaveDetalleActivoFijo,"");
		FuncionesSwing.mostrarCampoMensajeInvalido(true,this.jInternalFrameDetalleFormDetalleActivoFijo.jLabelmarcaDetalleActivoFijo,"");
		FuncionesSwing.mostrarCampoMensajeInvalido(true,this.jInternalFrameDetalleFormDetalleActivoFijo.jLabelmodeloDetalleActivoFijo,"");
		FuncionesSwing.mostrarCampoMensajeInvalido(true,this.jInternalFrameDetalleFormDetalleActivoFijo.jLabelcolorDetalleActivoFijo,"");
		FuncionesSwing.mostrarCampoMensajeInvalido(true,this.jInternalFrameDetalleFormDetalleActivoFijo.jLabelfechaDetalleActivoFijo,"");
		FuncionesSwing.mostrarCampoMensajeInvalido(true,this.jInternalFrameDetalleFormDetalleActivoFijo.jLabelvalor_utilDetalleActivoFijo,"");
		FuncionesSwing.mostrarCampoMensajeInvalido(true,this.jInternalFrameDetalleFormDetalleActivoFijo.jLabelcosto_de_compraDetalleActivoFijo,"");
		FuncionesSwing.mostrarCampoMensajeInvalido(true,this.jInternalFrameDetalleFormDetalleActivoFijo.jLabelvida_utilDetalleActivoFijo,"");
		FuncionesSwing.mostrarCampoMensajeInvalido(true,this.jInternalFrameDetalleFormDetalleActivoFijo.jLabelvalor_residualDetalleActivoFijo,"");
		FuncionesSwing.mostrarCampoMensajeInvalido(true,this.jInternalFrameDetalleFormDetalleActivoFijo.jLabelcantidadDetalleActivoFijo,"");
		FuncionesSwing.mostrarCampoMensajeInvalido(true,this.jInternalFrameDetalleFormDetalleActivoFijo.jLabelnombre_propietarioDetalleActivoFijo,"");
		FuncionesSwing.mostrarCampoMensajeInvalido(true,this.jInternalFrameDetalleFormDetalleActivoFijo.jLabelresponsableDetalleActivoFijo,"");
		FuncionesSwing.mostrarCampoMensajeInvalido(true,this.jInternalFrameDetalleFormDetalleActivoFijo.jLabelpath_fotoDetalleActivoFijo,"");
		FuncionesSwing.mostrarCampoMensajeInvalido(true,this.jInternalFrameDetalleFormDetalleActivoFijo.jLabelnumero_comprobanteDetalleActivoFijo,"");
		FuncionesSwing.mostrarCampoMensajeInvalido(true,this.jInternalFrameDetalleFormDetalleActivoFijo.jLabelreferenciaDetalleActivoFijo,"");
		FuncionesSwing.mostrarCampoMensajeInvalido(true,this.jInternalFrameDetalleFormDetalleActivoFijo.jLabelvalor_cotizacionDetalleActivoFijo,"");
		FuncionesSwing.mostrarCampoMensajeInvalido(true,this.jInternalFrameDetalleFormDetalleActivoFijo.jLabelcon_partesDetalleActivoFijo,"");
		FuncionesSwing.mostrarCampoMensajeInvalido(true,this.jInternalFrameDetalleFormDetalleActivoFijo.jLabelcon_garantiaDetalleActivoFijo,"");
		FuncionesSwing.mostrarCampoMensajeInvalido(true,this.jInternalFrameDetalleFormDetalleActivoFijo.jLabelcon_existenciaDetalleActivoFijo,"");
		FuncionesSwing.mostrarCampoMensajeInvalido(true,this.jInternalFrameDetalleFormDetalleActivoFijo.jLabelfecha_bajaDetalleActivoFijo,"");
		FuncionesSwing.mostrarCampoMensajeInvalido(true,this.jInternalFrameDetalleFormDetalleActivoFijo.jLabelpath_foto2DetalleActivoFijo,"");
		
		}
	}
	
	
	
	public void actualizarObjetoPadreFk(String sTipo)  throws Exception {
		if(sTipo.equals("XXXAuxiliar")) {
		
		}
		
		 else  if(sTipo.equals("MantenimientoActivoFijo")) {
			if(this.detalleactivofijo==null) {
				this.detalleactivofijo= new DetalleActivoFijo();
			}

			if(this.detalleactivofijoSessionBean.getConGuardarRelaciones()) { //&& this.isEsNuevoDetalleActivoFijo
				this.setVariablesFormularioToObjetoActualDetalleActivoFijo(this.detalleactivofijo,true);//false
				this.setVariablesFormularioToObjetoActualForeignKeysDetalleActivoFijo(this.detalleactivofijo);

				this.jInternalFrameDetalleFormDetalleActivoFijo.mantenimientoactivofijoBeanSwingJInternalFrame.getmantenimientoactivofijo().setDetalleActivoFijo(this.detalleactivofijo);
			}

			return;
		}
		 else  if(sTipo.equals("ServicioTransporte")) {
			if(this.detalleactivofijo==null) {
				this.detalleactivofijo= new DetalleActivoFijo();
			}

			if(this.detalleactivofijoSessionBean.getConGuardarRelaciones()) { //&& this.isEsNuevoDetalleActivoFijo
				this.setVariablesFormularioToObjetoActualDetalleActivoFijo(this.detalleactivofijo,true);//false
				this.setVariablesFormularioToObjetoActualForeignKeysDetalleActivoFijo(this.detalleactivofijo);

				this.jInternalFrameDetalleFormDetalleActivoFijo.serviciotransporteBeanSwingJInternalFrame.getserviciotransporte().setDetalleActivoFijo(this.detalleactivofijo);
			}

			return;
		}
		 else  if(sTipo.equals("MovimientoActivoFijo")) {
			if(this.detalleactivofijo==null) {
				this.detalleactivofijo= new DetalleActivoFijo();
			}

			if(this.detalleactivofijoSessionBean.getConGuardarRelaciones()) { //&& this.isEsNuevoDetalleActivoFijo
				this.setVariablesFormularioToObjetoActualDetalleActivoFijo(this.detalleactivofijo,true);//false
				this.setVariablesFormularioToObjetoActualForeignKeysDetalleActivoFijo(this.detalleactivofijo);

				this.jInternalFrameDetalleFormDetalleActivoFijo.movimientoactivofijoBeanSwingJInternalFrame.getmovimientoactivofijo().setDetalleActivoFijoDestino(this.detalleactivofijo);
			}

			return;
		}
		 else  if(sTipo.equals("Vehiculo")) {
			if(this.detalleactivofijo==null) {
				this.detalleactivofijo= new DetalleActivoFijo();
			}

			if(this.detalleactivofijoSessionBean.getConGuardarRelaciones()) { //&& this.isEsNuevoDetalleActivoFijo
				this.setVariablesFormularioToObjetoActualDetalleActivoFijo(this.detalleactivofijo,true);//false
				this.setVariablesFormularioToObjetoActualForeignKeysDetalleActivoFijo(this.detalleactivofijo);

				this.jInternalFrameDetalleFormDetalleActivoFijo.vehiculoBeanSwingJInternalFrame.getvehiculo().setDetalleActivoFijo(this.detalleactivofijo);
			}

			return;
		}
		 else  if(sTipo.equals("MetodoDepreciacion")) {
			if(this.detalleactivofijo==null) {
				this.detalleactivofijo= new DetalleActivoFijo();
			}

			if(this.detalleactivofijoSessionBean.getConGuardarRelaciones()) { //&& this.isEsNuevoDetalleActivoFijo
				this.setVariablesFormularioToObjetoActualDetalleActivoFijo(this.detalleactivofijo,true);//false
				this.setVariablesFormularioToObjetoActualForeignKeysDetalleActivoFijo(this.detalleactivofijo);

				this.jInternalFrameDetalleFormDetalleActivoFijo.metododepreciacionBeanSwingJInternalFrame.getmetododepreciacion().setDetalleActivoFijo(this.detalleactivofijo);
			}

			return;
		}
		 else  if(sTipo.equals("ResponsableActivoFijo")) {
			if(this.detalleactivofijo==null) {
				this.detalleactivofijo= new DetalleActivoFijo();
			}

			if(this.detalleactivofijoSessionBean.getConGuardarRelaciones()) { //&& this.isEsNuevoDetalleActivoFijo
				this.setVariablesFormularioToObjetoActualDetalleActivoFijo(this.detalleactivofijo,true);//false
				this.setVariablesFormularioToObjetoActualForeignKeysDetalleActivoFijo(this.detalleactivofijo);

				this.jInternalFrameDetalleFormDetalleActivoFijo.responsableactivofijoBeanSwingJInternalFrame.getresponsableactivofijo().setDetalleActivoFijo(this.detalleactivofijo);
			}

			return;
		}
		 else  if(sTipo.equals("DepreciacionActivoFijo")) {
			if(this.detalleactivofijo==null) {
				this.detalleactivofijo= new DetalleActivoFijo();
			}

			if(this.detalleactivofijoSessionBean.getConGuardarRelaciones()) { //&& this.isEsNuevoDetalleActivoFijo
				this.setVariablesFormularioToObjetoActualDetalleActivoFijo(this.detalleactivofijo,true);//false
				this.setVariablesFormularioToObjetoActualForeignKeysDetalleActivoFijo(this.detalleactivofijo);

				this.jInternalFrameDetalleFormDetalleActivoFijo.depreciacionactivofijoBeanSwingJInternalFrame.getdepreciacionactivofijo().setDetalleActivoFijo(this.detalleactivofijo);
			}

			return;
		}
		 else  if(sTipo.equals("GastoDepreciacionCentroCosto")) {
			if(this.detalleactivofijo==null) {
				this.detalleactivofijo= new DetalleActivoFijo();
			}

			if(this.detalleactivofijoSessionBean.getConGuardarRelaciones()) { //&& this.isEsNuevoDetalleActivoFijo
				this.setVariablesFormularioToObjetoActualDetalleActivoFijo(this.detalleactivofijo,true);//false
				this.setVariablesFormularioToObjetoActualForeignKeysDetalleActivoFijo(this.detalleactivofijo);

				this.jInternalFrameDetalleFormDetalleActivoFijo.gastodepreciacioncentrocostoBeanSwingJInternalFrame.getgastodepreciacioncentrocosto().setDetalleActivoFijo(this.detalleactivofijo);
			}

			return;
		}
		 else  if(sTipo.equals("ParteActivoFijo")) {
			if(this.detalleactivofijo==null) {
				this.detalleactivofijo= new DetalleActivoFijo();
			}

			if(this.detalleactivofijoSessionBean.getConGuardarRelaciones()) { //&& this.isEsNuevoDetalleActivoFijo
				this.setVariablesFormularioToObjetoActualDetalleActivoFijo(this.detalleactivofijo,true);//false
				this.setVariablesFormularioToObjetoActualForeignKeysDetalleActivoFijo(this.detalleactivofijo);

				this.jInternalFrameDetalleFormDetalleActivoFijo.parteactivofijoBeanSwingJInternalFrame.getparteactivofijo().setDetalleActivoFijo(this.detalleactivofijo);
			}

			return;
		}
	}
	
	public void nuevoPreparar() throws Exception {
		this.nuevoPreparar(false);
	}
	
	public void nuevoPreparar(Boolean esNuevoGuardarCambios) throws Exception {
		this.iIdNuevoDetalleActivoFijo--;	
		
		
		this.detalleactivofijoAux=new DetalleActivoFijo();
		
		this.detalleactivofijoAux.setId(this.iIdNuevoDetalleActivoFijo);
		this.detalleactivofijoAux.setIsChanged(true);
		
		//ARCHITECTURE
		if(Constantes.ISUSAEJBLOGICLAYER) {
			this.detalleactivofijoLogic.getDetalleActivoFijos().add(this.detalleactivofijoAux);
		} else if(Constantes.ISUSAEJBREMOTE || Constantes.ISUSAEJBHOME) {
			this.detalleactivofijos.add(this.detalleactivofijoAux);
		}
		//ARCHITECTURE
		
		this.detalleactivofijo=this.detalleactivofijoAux;
		
		if(DetalleActivoFijoJInternalFrame.ISBINDING_MANUAL_TABLA) {
			this.setVariablesObjetoActualToFormularioDetalleActivoFijo(this.detalleactivofijo);
			this.setVariablesObjetoActualToFormularioForeignKeyDetalleActivoFijo(this.detalleactivofijo);
		}
				
		//this.setDefaultControlesDetalleActivoFijo();
		
		this.inicializarInvalidValues();
				
		//SELECCIONA ITEM DEFECTO-->SET O SELECTED INDEX
		this.setItemDefectoCombosForeignKeyDetalleActivoFijo();
		
		
		//INICIALIZA VARIABLES COMBOS GLOBALES A FORMULARIO(ParametroGeneralUsuario)
		this.setVariablesGlobalesCombosForeignKeyDetalleActivoFijo();
		
		//INICIALIZA VARIABLES COMBOS GLOBALES AUXILIARES A FORMULARIO(Anio,Mes)
		//this.setVariablesGlobalesAuxiliaresCombosForeignKeyDetalleActivoFijo();
		
		//SI TIENE FOREIGN KEY CON CAMPO esDefecto=true, SE ACTUALIZA A OBJETO ACTUAL
		this.setVariablesForeignKeyObjetoBeanDefectoActualToObjetoActualDetalleActivoFijo(this.detalleactivofijoBean,this.detalleactivofijo,false,false);
		
		//ACTUALIZA VALORES PARA EL OBJETO ACTUAL ANTES DE ENVIARLO A ACTUALIZAR
		this.setVariablesFormularioToObjetoActualForeignKeysDetalleActivoFijo(this.detalleactivofijo);
				
		ArrayList<Classe> classes=new ArrayList<Classe>();
		
		if(this.jInternalFrameParent!=null) {
			this.jInternalFrameParent.actualizarObjetoPadreFk(DetalleActivoFijoConstantesFunciones.CLASSNAME);
		}	
		
		
		if(this.detalleactivofijoSessionBean.getConGuardarRelaciones()) {
			classes=DetalleActivoFijoConstantesFunciones.getClassesRelationshipsOfDetalleActivoFijo(new ArrayList<Classe>(),DeepLoadType.NONE);
		}
		
		this.classesActual=new ArrayList<Classe>();
		this.classesActual.addAll(classes);
				
		//ARCHITECTURE
		if(Constantes.ISUSAEJBLOGICLAYER) {						
			this.detalleactivofijoReturnGeneral=detalleactivofijoLogic.procesarEventosDetalleActivoFijosWithConnection(this.parametroGeneralUsuario,this.moduloActual,this.opcionActual,this.usuarioActual,EventoGlobalTipo.FORM_RECARGAR,ControlTipo.FORM,EventoTipo.LOAD,EventoSubTipo.NEW,"FORM",this.detalleactivofijoLogic.getDetalleActivoFijos(),this.detalleactivofijo,this.detalleactivofijoParameterGeneral,this.isEsNuevoDetalleActivoFijo,classes);//this.detalleactivofijoLogic.getDetalleActivoFijo()
						
		} else if(Constantes.ISUSAEJBREMOTE) {
						
		} else if(Constantes.ISUSAEJBHOME) {
		}
		//ARCHITECTURE
		
		//ACTUALIZA VARIABLES DEFECTO DESDE LOGIC A RETURN GENERAL Y LUEGO A BEAN
		//this.setVariablesObjetoReturnGeneralToBeanDetalleActivoFijo(this.detalleactivofijoReturnGeneral,this.detalleactivofijoBean,false);
		
		if(this.detalleactivofijoReturnGeneral.getConRecargarPropiedades()) {
			//INICIALIZA VARIABLES COMBOS NORMALES (FK)
			this.setVariablesObjetoActualToFormularioForeignKeyDetalleActivoFijo(this.detalleactivofijoReturnGeneral.getDetalleActivoFijo());
			
			//INICIALIZA VARIABLES NORMALES A FORMULARIO(SIN FK)
			this.setVariablesObjetoActualToFormularioDetalleActivoFijo(this.detalleactivofijoReturnGeneral.getDetalleActivoFijo());
		}
		
		if(this.detalleactivofijoReturnGeneral.getConRecargarRelaciones()) {
			//INICIALIZA VARIABLES RELACIONES A FORMULARIO
			this.setVariablesRelacionesObjetoActualToFormularioDetalleActivoFijo(this.detalleactivofijoReturnGeneral.getDetalleActivoFijo(),classes);//this.detalleactivofijoBean);	
		}
			
		//ACTUALIZA VARIABLES FORMULARIO A OBJETO ACTUAL (PARA NUEVO TABLA O GUARDAR CAMBIOS
		if(esNuevoGuardarCambios) {
			this.setVariablesFormularioToObjetoActualDetalleActivoFijo(this.detalleactivofijo,false);
		}
		
		//INICIALIZA VARIABLES COMBOS DEFAULT DEL PROYECTO(|DEFAULT para FK)
		//this.setVariablesDefaultCombosForeignKeyDetalleActivoFijo();
		
		//INICIALIZA VARIABLES COMBOS PARAMETRO DEL PROYECTO(|VALORPARAM Era para ParametroModulo, ahora en logic)
		//this.setVariablesParametroCombosForeignKeyDetalleActivoFijo();						
		
		if(!esNuevoGuardarCambios) {
			//INICIALIZA VARIABLES POR OPCION MENU
			this.arrDatoGeneral= new  ArrayList<DatoGeneral>();
			this.arrDatoGeneralNo= new  ArrayList<String>();
			
			DetalleActivoFijoBeanSwingJInternalFrameAdditional.RecargarFormDetalleActivoFijo(this,"NUEVO_PREPARAR","",this.arrDatoGeneral);
		
			//NO FUNCIONA BINDINGS			
			this.inicializarActualizarBindingDetalleActivoFijo(false);
						
			if(detalleactivofijoSessionBean.getConGuardarRelaciones()) {
				//DEBERIA YA ESTAR CARGADO LOS COMBOS Y SI SE NECESITA ALGO MAS SE DEBE CREAR FUNCION LIMITADA
				//SI DEBE TRAER Y RESETEAR TABLA
				

				if(this.jInternalFrameDetalleFormDetalleActivoFijo.mantenimientoactivofijoBeanSwingJInternalFrame!=null && this.jInternalFrameDetalleFormDetalleActivoFijo.mantenimientoactivofijoBeanSwingJInternalFrame.mantenimientoactivofijoSessionBean.getEsGuardarRelacionado() && MantenimientoActivoFijoJInternalFrame.ESTA_CARGADO_PORPARTE) {
					this.jButtonMantenimientoActivoFijoActionPerformed(null,-1,false,true,null);
				}

				if(this.jInternalFrameDetalleFormDetalleActivoFijo.serviciotransporteBeanSwingJInternalFrame!=null && this.jInternalFrameDetalleFormDetalleActivoFijo.serviciotransporteBeanSwingJInternalFrame.serviciotransporteSessionBean.getEsGuardarRelacionado() && ServicioTransporteJInternalFrame.ESTA_CARGADO_PORPARTE) {
					this.jButtonServicioTransporteActionPerformed(null,-1,false,true,null);
				}

				if(this.jInternalFrameDetalleFormDetalleActivoFijo.movimientoactivofijoBeanSwingJInternalFrame!=null && this.jInternalFrameDetalleFormDetalleActivoFijo.movimientoactivofijoBeanSwingJInternalFrame.movimientoactivofijoSessionBean.getEsGuardarRelacionado() && MovimientoActivoFijoJInternalFrame.ESTA_CARGADO_PORPARTE) {
					this.jButtonMovimientoActivoFijoActionPerformed(null,-1,false,true,null);
				}

				if(this.jInternalFrameDetalleFormDetalleActivoFijo.vehiculoBeanSwingJInternalFrame!=null && this.jInternalFrameDetalleFormDetalleActivoFijo.vehiculoBeanSwingJInternalFrame.vehiculoSessionBean.getEsGuardarRelacionado() && VehiculoJInternalFrame.ESTA_CARGADO_PORPARTE) {
					this.jButtonVehiculoActionPerformed(null,-1,false,true,null);
				}

				if(this.jInternalFrameDetalleFormDetalleActivoFijo.metododepreciacionBeanSwingJInternalFrame!=null && this.jInternalFrameDetalleFormDetalleActivoFijo.metododepreciacionBeanSwingJInternalFrame.metododepreciacionSessionBean.getEsGuardarRelacionado() && MetodoDepreciacionJInternalFrame.ESTA_CARGADO_PORPARTE) {
					this.jButtonMetodoDepreciacionActionPerformed(null,-1,false,true,null);
				}

				if(this.jInternalFrameDetalleFormDetalleActivoFijo.responsableactivofijoBeanSwingJInternalFrame!=null && this.jInternalFrameDetalleFormDetalleActivoFijo.responsableactivofijoBeanSwingJInternalFrame.responsableactivofijoSessionBean.getEsGuardarRelacionado() && ResponsableActivoFijoJInternalFrame.ESTA_CARGADO_PORPARTE) {
					this.jButtonResponsableActivoFijoActionPerformed(null,-1,false,true,null);
				}

				if(this.jInternalFrameDetalleFormDetalleActivoFijo.depreciacionactivofijoBeanSwingJInternalFrame!=null && this.jInternalFrameDetalleFormDetalleActivoFijo.depreciacionactivofijoBeanSwingJInternalFrame.depreciacionactivofijoSessionBean.getEsGuardarRelacionado() && DepreciacionActivoFijoJInternalFrame.ESTA_CARGADO_PORPARTE) {
					this.jButtonDepreciacionActivoFijoActionPerformed(null,-1,false,true,null);
				}

				if(this.jInternalFrameDetalleFormDetalleActivoFijo.gastodepreciacioncentrocostoBeanSwingJInternalFrame!=null && this.jInternalFrameDetalleFormDetalleActivoFijo.gastodepreciacioncentrocostoBeanSwingJInternalFrame.gastodepreciacioncentrocostoSessionBean.getEsGuardarRelacionado() && GastoDepreciacionCentroCostoJInternalFrame.ESTA_CARGADO_PORPARTE) {
					this.jButtonGastoDepreciacionCentroCostoActionPerformed(null,-1,false,true,null);
				}

				if(this.jInternalFrameDetalleFormDetalleActivoFijo.parteactivofijoBeanSwingJInternalFrame!=null && this.jInternalFrameDetalleFormDetalleActivoFijo.parteactivofijoBeanSwingJInternalFrame.parteactivofijoSessionBean.getEsGuardarRelacionado() && ParteActivoFijoJInternalFrame.ESTA_CARGADO_PORPARTE) {
					this.jButtonParteActivoFijoActionPerformed(null,-1,false,true,null);
				}				
			}
				
			//SI ES MANUAL
			if(DetalleActivoFijoJInternalFrame.ISBINDING_MANUAL) {
				//this.inicializarActualizarBindingManualDetalleActivoFijo();
			}
			
			this.actualizarVisualTableDatosDetalleActivoFijo();
			
			this.jTableDatosDetalleActivoFijo.setRowSelectionInterval(this.getIndiceNuevoDetalleActivoFijo(), this.getIndiceNuevoDetalleActivoFijo());
			
			this.seleccionarFilaTablaDetalleActivoFijoActual();
						
			this.actualizarEstadoCeldasBotonesDetalleActivoFijo("a", isGuardarCambiosEnLote, isEsMantenimientoRelacionado);			
		
		}		
	}
	
	public void habilitarDeshabilitarControlesDetalleActivoFijo(Boolean isHabilitar) throws Exception {
		
		this.jInternalFrameDetalleFormDetalleActivoFijo.jTextFieldcodigoDetalleActivoFijo.setEnabled(isHabilitar && this.detalleactivofijoConstantesFunciones.activarcodigoDetalleActivoFijo);
		this.jInternalFrameDetalleFormDetalleActivoFijo.jTextAreanombreDetalleActivoFijo.setEnabled(isHabilitar && this.detalleactivofijoConstantesFunciones.activarnombreDetalleActivoFijo);
		this.jInternalFrameDetalleFormDetalleActivoFijo.jTextFieldserieDetalleActivoFijo.setEnabled(isHabilitar && this.detalleactivofijoConstantesFunciones.activarserieDetalleActivoFijo);
		this.jInternalFrameDetalleFormDetalleActivoFijo.jDateChooserfecha_compraDetalleActivoFijo.setEnabled(isHabilitar && this.detalleactivofijoConstantesFunciones.activarfecha_compraDetalleActivoFijo);
		this.jInternalFrameDetalleFormDetalleActivoFijo.jDateChooserfecha_mantenimientoDetalleActivoFijo.setEnabled(isHabilitar && this.detalleactivofijoConstantesFunciones.activarfecha_mantenimientoDetalleActivoFijo);
		this.jInternalFrameDetalleFormDetalleActivoFijo.jDateChooserfecha_correccionDetalleActivoFijo.setEnabled(isHabilitar && this.detalleactivofijoConstantesFunciones.activarfecha_correccionDetalleActivoFijo);
		this.jInternalFrameDetalleFormDetalleActivoFijo.jDateChooserfecha_depreciacionDetalleActivoFijo.setEnabled(isHabilitar && this.detalleactivofijoConstantesFunciones.activarfecha_depreciacionDetalleActivoFijo);
		this.jInternalFrameDetalleFormDetalleActivoFijo.jTextFieldclaveDetalleActivoFijo.setEnabled(isHabilitar && this.detalleactivofijoConstantesFunciones.activarclaveDetalleActivoFijo);
		this.jInternalFrameDetalleFormDetalleActivoFijo.jTextAreamarcaDetalleActivoFijo.setEnabled(isHabilitar && this.detalleactivofijoConstantesFunciones.activarmarcaDetalleActivoFijo);
		this.jInternalFrameDetalleFormDetalleActivoFijo.jTextAreamodeloDetalleActivoFijo.setEnabled(isHabilitar && this.detalleactivofijoConstantesFunciones.activarmodeloDetalleActivoFijo);
		this.jInternalFrameDetalleFormDetalleActivoFijo.jTextFieldcolorDetalleActivoFijo.setEnabled(isHabilitar && this.detalleactivofijoConstantesFunciones.activarcolorDetalleActivoFijo);
		this.jInternalFrameDetalleFormDetalleActivoFijo.jDateChooserfechaDetalleActivoFijo.setEnabled(isHabilitar && this.detalleactivofijoConstantesFunciones.activarfechaDetalleActivoFijo);
		this.jInternalFrameDetalleFormDetalleActivoFijo.jTextFieldvalor_utilDetalleActivoFijo.setEnabled(isHabilitar && this.detalleactivofijoConstantesFunciones.activarvalor_utilDetalleActivoFijo);
		this.jInternalFrameDetalleFormDetalleActivoFijo.jTextFieldcosto_de_compraDetalleActivoFijo.setEnabled(isHabilitar && this.detalleactivofijoConstantesFunciones.activarcosto_de_compraDetalleActivoFijo);
		this.jInternalFrameDetalleFormDetalleActivoFijo.jTextFieldvida_utilDetalleActivoFijo.setEnabled(isHabilitar && this.detalleactivofijoConstantesFunciones.activarvida_utilDetalleActivoFijo);
		this.jInternalFrameDetalleFormDetalleActivoFijo.jTextFieldvalor_residualDetalleActivoFijo.setEnabled(isHabilitar && this.detalleactivofijoConstantesFunciones.activarvalor_residualDetalleActivoFijo);
		this.jInternalFrameDetalleFormDetalleActivoFijo.jTextFieldcantidadDetalleActivoFijo.setEnabled(isHabilitar && this.detalleactivofijoConstantesFunciones.activarcantidadDetalleActivoFijo);
		this.jInternalFrameDetalleFormDetalleActivoFijo.jTextAreanombre_propietarioDetalleActivoFijo.setEnabled(isHabilitar && this.detalleactivofijoConstantesFunciones.activarnombre_propietarioDetalleActivoFijo);
		this.jInternalFrameDetalleFormDetalleActivoFijo.jTextArearesponsableDetalleActivoFijo.setEnabled(isHabilitar && this.detalleactivofijoConstantesFunciones.activarresponsableDetalleActivoFijo);
		this.jInternalFrameDetalleFormDetalleActivoFijo.jTextAreapath_fotoDetalleActivoFijo.setEnabled(isHabilitar && this.detalleactivofijoConstantesFunciones.activarpath_fotoDetalleActivoFijo);
		this.jInternalFrameDetalleFormDetalleActivoFijo.jTextFieldnumero_comprobanteDetalleActivoFijo.setEnabled(isHabilitar && this.detalleactivofijoConstantesFunciones.activarnumero_comprobanteDetalleActivoFijo);
		this.jInternalFrameDetalleFormDetalleActivoFijo.jTextAreareferenciaDetalleActivoFijo.setEnabled(isHabilitar && this.detalleactivofijoConstantesFunciones.activarreferenciaDetalleActivoFijo);
		this.jInternalFrameDetalleFormDetalleActivoFijo.jTextFieldvalor_cotizacionDetalleActivoFijo.setEnabled(isHabilitar && this.detalleactivofijoConstantesFunciones.activarvalor_cotizacionDetalleActivoFijo);
		this.jInternalFrameDetalleFormDetalleActivoFijo.jCheckBoxcon_partesDetalleActivoFijo.setEnabled(isHabilitar && this.detalleactivofijoConstantesFunciones.activarcon_partesDetalleActivoFijo);
		this.jInternalFrameDetalleFormDetalleActivoFijo.jCheckBoxcon_garantiaDetalleActivoFijo.setEnabled(isHabilitar && this.detalleactivofijoConstantesFunciones.activarcon_garantiaDetalleActivoFijo);
		this.jInternalFrameDetalleFormDetalleActivoFijo.jCheckBoxcon_existenciaDetalleActivoFijo.setEnabled(isHabilitar && this.detalleactivofijoConstantesFunciones.activarcon_existenciaDetalleActivoFijo);
		this.jInternalFrameDetalleFormDetalleActivoFijo.jDateChooserfecha_bajaDetalleActivoFijo.setEnabled(isHabilitar && this.detalleactivofijoConstantesFunciones.activarfecha_bajaDetalleActivoFijo);
		this.jInternalFrameDetalleFormDetalleActivoFijo.jTextAreapath_foto2DetalleActivoFijo.setEnabled(isHabilitar && this.detalleactivofijoConstantesFunciones.activarpath_foto2DetalleActivoFijo);	
		//
		this.jInternalFrameDetalleFormDetalleActivoFijo.jComboBoxid_empresaDetalleActivoFijo.setEnabled(isHabilitar && this.detalleactivofijoConstantesFunciones.activarid_empresaDetalleActivoFijo);//
		this.jInternalFrameDetalleFormDetalleActivoFijo.jComboBoxid_sucursalDetalleActivoFijo.setEnabled(isHabilitar && this.detalleactivofijoConstantesFunciones.activarid_sucursalDetalleActivoFijo);
		this.jInternalFrameDetalleFormDetalleActivoFijo.jComboBoxid_detalle_grupo_activo_fijoDetalleActivoFijo.setEnabled(isHabilitar && this.detalleactivofijoConstantesFunciones.activarid_detalle_grupo_activo_fijoDetalleActivoFijo);
		this.jInternalFrameDetalleFormDetalleActivoFijo.jComboBoxid_sub_grupo_activo_fijoDetalleActivoFijo.setEnabled(isHabilitar && this.detalleactivofijoConstantesFunciones.activarid_sub_grupo_activo_fijoDetalleActivoFijo);
		this.jInternalFrameDetalleFormDetalleActivoFijo.jComboBoxid_tipo_ramo_activo_fijoDetalleActivoFijo.setEnabled(isHabilitar && this.detalleactivofijoConstantesFunciones.activarid_tipo_ramo_activo_fijoDetalleActivoFijo);
		this.jInternalFrameDetalleFormDetalleActivoFijo.jComboBoxid_tipo_activo_fijo_empresaDetalleActivoFijo.setEnabled(isHabilitar && this.detalleactivofijoConstantesFunciones.activarid_tipo_activo_fijo_empresaDetalleActivoFijo);
		this.jInternalFrameDetalleFormDetalleActivoFijo.jComboBoxid_tipo_depreciacion_empresaDetalleActivoFijo.setEnabled(isHabilitar && this.detalleactivofijoConstantesFunciones.activarid_tipo_depreciacion_empresaDetalleActivoFijo);
		this.jInternalFrameDetalleFormDetalleActivoFijo.jComboBoxid_estado_activo_fijoDetalleActivoFijo.setEnabled(isHabilitar && this.detalleactivofijoConstantesFunciones.activarid_estado_activo_fijoDetalleActivoFijo);
		this.jInternalFrameDetalleFormDetalleActivoFijo.jComboBoxid_clienteDetalleActivoFijo.setEnabled(isHabilitar && this.detalleactivofijoConstantesFunciones.activarid_clienteDetalleActivoFijo);
		this.jInternalFrameDetalleFormDetalleActivoFijo.jComboBoxid_partida_presuDetalleActivoFijo.setEnabled(isHabilitar && this.detalleactivofijoConstantesFunciones.activarid_partida_presuDetalleActivoFijo);
	};
	
	public void setDefaultControlesDetalleActivoFijo() throws Exception {
			
	};
	
	
	public void habilitarDeshabilitarTipoMantenimientoDetalleActivoFijo(Boolean esRelaciones) throws Exception {
		if(esRelaciones) {
			//this.detalleactivofijoSessionBean.setConGuardarRelaciones(true);			
			this.detalleactivofijoSessionBean.setEstaModoGuardarRelaciones(true);				
			this.jInternalFrameDetalleFormDetalleActivoFijo.jTabbedPaneRelacionesDetalleActivoFijo.setVisible(true);
			
			

			if(this.jInternalFrameDetalleFormDetalleActivoFijo.mantenimientoactivofijoBeanSwingJInternalFrame!=null) {
				this.jInternalFrameDetalleFormDetalleActivoFijo.mantenimientoactivofijoBeanSwingJInternalFrame.mantenimientoactivofijoSessionBean.setEsGuardarRelacionado(true);
				//this.jInternalFrameDetalleFormDetalleActivoFijo.mantenimientoactivofijoBeanSwingJInternalFrame.getContentPane().setVisible(true);
			}

			if(this.jInternalFrameDetalleFormDetalleActivoFijo.serviciotransporteBeanSwingJInternalFrame!=null) {
				this.jInternalFrameDetalleFormDetalleActivoFijo.serviciotransporteBeanSwingJInternalFrame.serviciotransporteSessionBean.setEsGuardarRelacionado(true);
				//this.jInternalFrameDetalleFormDetalleActivoFijo.serviciotransporteBeanSwingJInternalFrame.getContentPane().setVisible(true);
			}

			if(this.jInternalFrameDetalleFormDetalleActivoFijo.movimientoactivofijoBeanSwingJInternalFrame!=null) {
				this.jInternalFrameDetalleFormDetalleActivoFijo.movimientoactivofijoBeanSwingJInternalFrame.movimientoactivofijoSessionBean.setEsGuardarRelacionado(true);
				//this.jInternalFrameDetalleFormDetalleActivoFijo.movimientoactivofijoBeanSwingJInternalFrame.getContentPane().setVisible(true);
			}

			if(this.jInternalFrameDetalleFormDetalleActivoFijo.vehiculoBeanSwingJInternalFrame!=null) {
				this.jInternalFrameDetalleFormDetalleActivoFijo.vehiculoBeanSwingJInternalFrame.vehiculoSessionBean.setEsGuardarRelacionado(true);
				//this.jInternalFrameDetalleFormDetalleActivoFijo.vehiculoBeanSwingJInternalFrame.getContentPane().setVisible(true);
			}

			if(this.jInternalFrameDetalleFormDetalleActivoFijo.metododepreciacionBeanSwingJInternalFrame!=null) {
				this.jInternalFrameDetalleFormDetalleActivoFijo.metododepreciacionBeanSwingJInternalFrame.metododepreciacionSessionBean.setEsGuardarRelacionado(true);
				//this.jInternalFrameDetalleFormDetalleActivoFijo.metododepreciacionBeanSwingJInternalFrame.getContentPane().setVisible(true);
			}

			if(this.jInternalFrameDetalleFormDetalleActivoFijo.responsableactivofijoBeanSwingJInternalFrame!=null) {
				this.jInternalFrameDetalleFormDetalleActivoFijo.responsableactivofijoBeanSwingJInternalFrame.responsableactivofijoSessionBean.setEsGuardarRelacionado(true);
				//this.jInternalFrameDetalleFormDetalleActivoFijo.responsableactivofijoBeanSwingJInternalFrame.getContentPane().setVisible(true);
			}

			if(this.jInternalFrameDetalleFormDetalleActivoFijo.depreciacionactivofijoBeanSwingJInternalFrame!=null) {
				this.jInternalFrameDetalleFormDetalleActivoFijo.depreciacionactivofijoBeanSwingJInternalFrame.depreciacionactivofijoSessionBean.setEsGuardarRelacionado(true);
				//this.jInternalFrameDetalleFormDetalleActivoFijo.depreciacionactivofijoBeanSwingJInternalFrame.getContentPane().setVisible(true);
			}

			if(this.jInternalFrameDetalleFormDetalleActivoFijo.gastodepreciacioncentrocostoBeanSwingJInternalFrame!=null) {
				this.jInternalFrameDetalleFormDetalleActivoFijo.gastodepreciacioncentrocostoBeanSwingJInternalFrame.gastodepreciacioncentrocostoSessionBean.setEsGuardarRelacionado(true);
				//this.jInternalFrameDetalleFormDetalleActivoFijo.gastodepreciacioncentrocostoBeanSwingJInternalFrame.getContentPane().setVisible(true);
			}

			if(this.jInternalFrameDetalleFormDetalleActivoFijo.parteactivofijoBeanSwingJInternalFrame!=null) {
				this.jInternalFrameDetalleFormDetalleActivoFijo.parteactivofijoBeanSwingJInternalFrame.parteactivofijoSessionBean.setEsGuardarRelacionado(true);
				//this.jInternalFrameDetalleFormDetalleActivoFijo.parteactivofijoBeanSwingJInternalFrame.getContentPane().setVisible(true);
			}		
		} else {
			//this.detalleactivofijoSessionBean.setConGuardarRelaciones(false);			
			this.detalleactivofijoSessionBean.setEstaModoGuardarRelaciones(false);						
			this.jInternalFrameDetalleFormDetalleActivoFijo.jTabbedPaneRelacionesDetalleActivoFijo.setVisible(false);
			
			

			if(this.jInternalFrameDetalleFormDetalleActivoFijo.mantenimientoactivofijoBeanSwingJInternalFrame!=null) {
				this.jInternalFrameDetalleFormDetalleActivoFijo.mantenimientoactivofijoBeanSwingJInternalFrame.mantenimientoactivofijoSessionBean.setEsGuardarRelacionado(false);
				//this.jInternalFrameDetalleFormDetalleActivoFijo.mantenimientoactivofijoBeanSwingJInternalFrame.getContentPane().setVisible(false);
			}

			if(this.jInternalFrameDetalleFormDetalleActivoFijo.serviciotransporteBeanSwingJInternalFrame!=null) {
				this.jInternalFrameDetalleFormDetalleActivoFijo.serviciotransporteBeanSwingJInternalFrame.serviciotransporteSessionBean.setEsGuardarRelacionado(false);
				//this.jInternalFrameDetalleFormDetalleActivoFijo.serviciotransporteBeanSwingJInternalFrame.getContentPane().setVisible(false);
			}

			if(this.jInternalFrameDetalleFormDetalleActivoFijo.movimientoactivofijoBeanSwingJInternalFrame!=null) {
				this.jInternalFrameDetalleFormDetalleActivoFijo.movimientoactivofijoBeanSwingJInternalFrame.movimientoactivofijoSessionBean.setEsGuardarRelacionado(false);
				//this.jInternalFrameDetalleFormDetalleActivoFijo.movimientoactivofijoBeanSwingJInternalFrame.getContentPane().setVisible(false);
			}

			if(this.jInternalFrameDetalleFormDetalleActivoFijo.vehiculoBeanSwingJInternalFrame!=null) {
				this.jInternalFrameDetalleFormDetalleActivoFijo.vehiculoBeanSwingJInternalFrame.vehiculoSessionBean.setEsGuardarRelacionado(false);
				//this.jInternalFrameDetalleFormDetalleActivoFijo.vehiculoBeanSwingJInternalFrame.getContentPane().setVisible(false);
			}

			if(this.jInternalFrameDetalleFormDetalleActivoFijo.metododepreciacionBeanSwingJInternalFrame!=null) {
				this.jInternalFrameDetalleFormDetalleActivoFijo.metododepreciacionBeanSwingJInternalFrame.metododepreciacionSessionBean.setEsGuardarRelacionado(false);
				//this.jInternalFrameDetalleFormDetalleActivoFijo.metododepreciacionBeanSwingJInternalFrame.getContentPane().setVisible(false);
			}

			if(this.jInternalFrameDetalleFormDetalleActivoFijo.responsableactivofijoBeanSwingJInternalFrame!=null) {
				this.jInternalFrameDetalleFormDetalleActivoFijo.responsableactivofijoBeanSwingJInternalFrame.responsableactivofijoSessionBean.setEsGuardarRelacionado(false);
				//this.jInternalFrameDetalleFormDetalleActivoFijo.responsableactivofijoBeanSwingJInternalFrame.getContentPane().setVisible(false);
			}

			if(this.jInternalFrameDetalleFormDetalleActivoFijo.depreciacionactivofijoBeanSwingJInternalFrame!=null) {
				this.jInternalFrameDetalleFormDetalleActivoFijo.depreciacionactivofijoBeanSwingJInternalFrame.depreciacionactivofijoSessionBean.setEsGuardarRelacionado(false);
				//this.jInternalFrameDetalleFormDetalleActivoFijo.depreciacionactivofijoBeanSwingJInternalFrame.getContentPane().setVisible(false);
			}

			if(this.jInternalFrameDetalleFormDetalleActivoFijo.gastodepreciacioncentrocostoBeanSwingJInternalFrame!=null) {
				this.jInternalFrameDetalleFormDetalleActivoFijo.gastodepreciacioncentrocostoBeanSwingJInternalFrame.gastodepreciacioncentrocostoSessionBean.setEsGuardarRelacionado(false);
				//this.jInternalFrameDetalleFormDetalleActivoFijo.gastodepreciacioncentrocostoBeanSwingJInternalFrame.getContentPane().setVisible(false);
			}

			if(this.jInternalFrameDetalleFormDetalleActivoFijo.parteactivofijoBeanSwingJInternalFrame!=null) {
				this.jInternalFrameDetalleFormDetalleActivoFijo.parteactivofijoBeanSwingJInternalFrame.parteactivofijoSessionBean.setEsGuardarRelacionado(false);
				//this.jInternalFrameDetalleFormDetalleActivoFijo.parteactivofijoBeanSwingJInternalFrame.getContentPane().setVisible(false);
			}
		}
	};
	
	public int getIndiceNuevoDetalleActivoFijo() throws Exception {
		int iIndice=0;
		Boolean existe=false;
		
		//ARCHITECTURE
		if(Constantes.ISUSAEJBLOGICLAYER) {
			for(DetalleActivoFijo detalleactivofijoAux:this.detalleactivofijoLogic.getDetalleActivoFijos()) {
				if(detalleactivofijoAux.getId().equals(this.iIdNuevoDetalleActivoFijo)) {
					existe=true;
					break;
				}
				
				iIndice++;
			}
		} else if(Constantes.ISUSAEJBREMOTE || Constantes.ISUSAEJBHOME) {
			for(DetalleActivoFijo detalleactivofijoAux:this.detalleactivofijos) {
				if(detalleactivofijoAux.getId().equals(this.iIdNuevoDetalleActivoFijo)) {
					existe=true;
					break;
				}
				
				iIndice++;
			}
		}
		//ARCHITECTURE
		
		if(!existe) {
			//SI NO EXISTE TOMA LA ULTIMA FILA
			iIndice=iIndice-1;
		}
		
		return iIndice;
	}
	
	public int getIndiceActualDetalleActivoFijo(DetalleActivoFijo detalleactivofijo,Integer iIndiceActual) throws Exception {
		Integer iIndice=0;
		Boolean existe=false;
		
		//ARCHITECTURE
		if(Constantes.ISUSAEJBLOGICLAYER) {
			for(DetalleActivoFijo detalleactivofijoAux:this.detalleactivofijoLogic.getDetalleActivoFijos()) {
				if(detalleactivofijoAux.getId().equals(detalleactivofijo.getId())) {
					existe=true;
					break;
				}
				
				iIndice++;
			}
		} else if(Constantes.ISUSAEJBREMOTE || Constantes.ISUSAEJBHOME) {
			for(DetalleActivoFijo detalleactivofijoAux:this.detalleactivofijos) {
				if(detalleactivofijoAux.getId().equals(detalleactivofijo.getId())) {
					existe=true;
					break;
				}
				
				iIndice++;
			}
		}
		//ARCHITECTURE
		
		if(!existe) {
			//SI NO EXISTE TOMA LA ULTIMA FILA
			iIndice=iIndiceActual;
		}
		
		return iIndice;
	}
	
	public void setCamposBaseDesdeOriginalDetalleActivoFijo(DetalleActivoFijo detalleactivofijoOriginal) throws Exception {
		Boolean existe=false;
		
		//ARCHITECTURE
		if(Constantes.ISUSAEJBLOGICLAYER) {
			for(DetalleActivoFijo detalleactivofijoAux:this.detalleactivofijoLogic.getDetalleActivoFijos()) {
				if(detalleactivofijoAux.getDetalleActivoFijoOriginal().getId().equals(detalleactivofijoOriginal.getId())) {
					existe=true;
					detalleactivofijoOriginal.setId(detalleactivofijoAux.getId());
					detalleactivofijoOriginal.setVersionRow(detalleactivofijoAux.getVersionRow());
					break;
				}
				
			}
		} else if(Constantes.ISUSAEJBREMOTE || Constantes.ISUSAEJBHOME) {
			for(DetalleActivoFijo detalleactivofijoAux:this.detalleactivofijos) {
				if(detalleactivofijoAux.getDetalleActivoFijoOriginal().getId().equals(detalleactivofijoOriginal.getId())) {
					existe=true;
					detalleactivofijoOriginal.setId(detalleactivofijoAux.getId());
					detalleactivofijoOriginal.setVersionRow(detalleactivofijoAux.getVersionRow());
					break;
				}				
			}
		}
		//ARCHITECTURE
		
		if(!existe) {
			//SI NO EXISTE TOMA LA ULTIMA FILA
		}
	}
	
	public void cancelarNuevosDetalleActivoFijo(Boolean esParaCancelar) throws Exception {
		detalleactivofijosAux=new ArrayList<DetalleActivoFijo>();
		detalleactivofijoAux=new DetalleActivoFijo();
		
		if(!this.detalleactivofijoSessionBean.getEsGuardarRelacionado()) {
			if(Constantes.ISUSAEJBLOGICLAYER) {
				for(DetalleActivoFijo detalleactivofijoAux:this.detalleactivofijoLogic.getDetalleActivoFijos()) {
					if(detalleactivofijoAux.getId()<0) {
						detalleactivofijosAux.add(detalleactivofijoAux);
					}		
				}
				this.iIdNuevoDetalleActivoFijo=0L;
				this.detalleactivofijoLogic.getDetalleActivoFijos().removeAll(detalleactivofijosAux);
					
			} else if(Constantes.ISUSAEJBREMOTE||Constantes.ISUSAEJBHOME) {
				for(DetalleActivoFijo detalleactivofijoAux:this.detalleactivofijos) {
					if(detalleactivofijoAux.getId()<0) {
						detalleactivofijosAux.add(detalleactivofijoAux);
					}		
				}
				this.iIdNuevoDetalleActivoFijo=0L;
				this.detalleactivofijos.removeAll(detalleactivofijosAux);
			}	
		} else {			
			if(Constantes.ISUSAEJBLOGICLAYER) {
				if(esParaCancelar && this.isEsNuevoDetalleActivoFijo 
					&& this.detalleactivofijoLogic.getDetalleActivoFijos().size()>0
					) {
					detalleactivofijoAux=this.detalleactivofijoLogic.getDetalleActivoFijos().get(this.detalleactivofijoLogic.getDetalleActivoFijos().size() - 1);
				
					if(detalleactivofijoAux.getId()<0) {
						this.detalleactivofijoLogic.getDetalleActivoFijos().remove(detalleactivofijoAux);
					}
				}
			} else if(Constantes.ISUSAEJBREMOTE||Constantes.ISUSAEJBHOME) {
				if(esParaCancelar && this.isEsNuevoDetalleActivoFijo && this.detalleactivofijos.size()>0) {
					detalleactivofijoAux=this.detalleactivofijos.get(this.detalleactivofijos.size() - 1);
				
					if(detalleactivofijoAux.getId()<0) {
						this.detalleactivofijos.remove(detalleactivofijoAux);
					}
				}
			}	
		}
	}
	
	public void cancelarNuevoDetalleActivoFijo(Boolean esParaCancelar) throws Exception {
		if(Constantes.ISUSAEJBLOGICLAYER) {
			if(detalleactivofijo.getId()<0) {
				this.detalleactivofijoLogic.getDetalleActivoFijos().remove(this.detalleactivofijo);
			}					
		} else if(Constantes.ISUSAEJBREMOTE||Constantes.ISUSAEJBHOME) {
			if(detalleactivofijo.getId()<0) {
				this.detalleactivofijos.remove(this.detalleactivofijo);
			}
		}			
	}
	
	public void setEstadosInicialesDetalleActivoFijo(List<DetalleActivoFijo> detalleactivofijosAux) throws Exception {
		DetalleActivoFijoConstantesFunciones.setEstadosInicialesDetalleActivoFijo(detalleactivofijosAux);
	}
	
	public void setEstadosInicialesDetalleActivoFijo(DetalleActivoFijo detalleactivofijoAux) throws Exception {
		DetalleActivoFijoConstantesFunciones.setEstadosInicialesDetalleActivoFijo(detalleactivofijoAux);		
	}
	
	public void nuevo() throws Exception {
		try	{
			//ESTA VALIDADO EN FUNCION ACTUALIZAR
			//if(this.validarDetalleActivoFijoActual()) {
				this.ejecutarMantenimiento(MaintenanceType.NUEVO);
				
				this.actualizarEstadoCeldasBotonesDetalleActivoFijo("n", isGuardarCambiosEnLote, isEsMantenimientoRelacionado);
				
			//}
		} catch(Exception e) {
			throw e;
			//FuncionesSwing.manageException(this, e,logger,DetalleActivoFijoConstantesFunciones.CLASSNAME);
		}
	}
	
	public void actualizar() throws Exception {
		try	{
			if(this.validarDetalleActivoFijoActual()) {
				if(!this.isEsNuevoDetalleActivoFijo) {
					this.ejecutarMantenimiento(MaintenanceType.ACTUALIZAR);
					
					this.actualizarEstadoCeldasBotonesDetalleActivoFijo("n", isGuardarCambiosEnLote, isEsMantenimientoRelacionado);
					
				} else {					
					this.nuevo();
					this.isEsNuevoDetalleActivoFijo=false;
				}
				
				//SE CANCELA AL FINAL DEL PROCESO JBUTTONACTUALIZAR
				//this.cancelar(false);
			}		
		} catch(Exception e) {
			throw e;
			//FuncionesSwing.manageException(this, e,logger,DetalleActivoFijoConstantesFunciones.CLASSNAME);
		}
	}
	
	public void eliminar() throws Exception {
		try	{	
			if(this.validarDetalleActivoFijoActual()) {
				if(JOptionPane.showConfirmDialog(this, "ESTA SEGURO DE ELIMINAR EL/LA Detalle Activo Fijo ?", "MANTENIMIENTO DE Detalle Activo Fijo", JOptionPane.OK_CANCEL_OPTION) == 0) {
					this.ejecutarMantenimiento(MaintenanceType.ELIMINAR);			
					this.actualizarEstadoCeldasBotonesDetalleActivoFijo("n", isGuardarCambiosEnLote, isEsMantenimientoRelacionado);			
				}
			
			}
		} catch(Exception e) {
			throw e;
			//FuncionesSwing.manageException(this, e,logger,DetalleActivoFijoConstantesFunciones.CLASSNAME);
		}
	}
	
	public void guardarCambios() throws Exception {
		try	{
			this.ejecutarMantenimiento(MaintenanceType.GUARDARCAMBIOS);
			
		} catch(Exception e) {
			FuncionesSwing.manageException(this, e,logger,DetalleActivoFijoConstantesFunciones.CLASSNAME);
		}
	}
	
	public void seleccionarAsignar(DetalleActivoFijo detalleactivofijo) throws Exception {
		DetalleActivoFijoConstantesFunciones.seleccionarAsignar(this.detalleactivofijo,detalleactivofijo);
	}
	
	public void seleccionar() throws Exception {
		try	{
			//ACTUALIZO EL PERMISO ACTUALIZAR CON EL PERMISO ACTUALIZAR ORIGINAL ESTE PERMISO SE UTILIZA PARA EL NUEVO TAMBIEN
			this.isPermisoActualizarDetalleActivoFijo=this.isPermisoActualizarOriginalDetalleActivoFijo;
			
			
			this.seleccionarAsignar(detalleactivofijo);
			
			

			idClienteActual=detalleactivofijo.getid_cliente();
			this.seleccionarClienteActual();
			
			this.arrDatoGeneral= new  ArrayList<DatoGeneral>();
			this.arrDatoGeneralNo= new  ArrayList<String>();
			
			DetalleActivoFijoConstantesFunciones.quitarEspaciosDetalleActivoFijo(this.detalleactivofijo,this.arrDatoGeneral);
			
			
			this.actualizarEstadoCeldasBotonesDetalleActivoFijo("ae", isGuardarCambiosEnLote, isEsMantenimientoRelacionado);
			
						
		} catch(Exception e) {
			FuncionesSwing.manageException(this, e,logger,DetalleActivoFijoConstantesFunciones.CLASSNAME);
		}
	}
	
	public void seleccionarBusqueda(Long id) throws Exception {
		try	{
			this.detalleactivofijoSessionBean.setsFuncionBusquedaRapida(this.detalleactivofijoSessionBean.getsFuncionBusquedaRapida().replace("TO_REPLACE", id.toString()));
			
		} catch(Exception e) {
			FuncionesSwing.manageException(this, e,logger,DetalleActivoFijoConstantesFunciones.CLASSNAME);
		}
	}
	
	
	//BUSQUEDA INTERNA FK
	public void seleccionarClienteActual() throws Exception {
		try	{
			Cliente clienteAux=new Cliente();

			if(this.idClienteActual != null && this.idClienteActual>0) {
				//ARCHITECTURE
				if(Constantes.ISUSAEJBLOGICLAYER) {
					clienteLogic.getEntityWithConnection(this.idClienteActual);
					clienteAux= clienteLogic.getCliente();
				} else if(Constantes.ISUSAEJBREMOTE) {
				} else if(Constantes.ISUSAEJBHOME) {
				}
				//ARCHITECTURE

				clientesForeignKey=new ArrayList<Cliente>();
				clientesForeignKey.add(clienteAux);
			}

		} catch(Exception e) {
			FuncionesSwing.manageException(this, e,logger);
		}
	}
	
	public void cancelar() throws Exception {
		this.cancelar(true);
	}
	
	public void cancelar(Boolean esParaCancelar) throws Exception {
		try {
														
			
			//SE UTILIZA COLUMNA ELIMINAR EN TABLA
			if(this.isEsNuevoDetalleActivoFijo) {
				//NO CANCELA TODOS NUEVOS POR FUNCIONALIDAD GUARDAR CAMBIOS
				//this.cancelarNuevosDetalleActivoFijo(esParaCancelar);				
				this.cancelarNuevoDetalleActivoFijo(esParaCancelar);								
			}
			
			this.detalleactivofijo=new DetalleActivoFijo();
			
			this.inicializarDetalleActivoFijo();
			
			this.actualizarEstadoCeldasBotonesDetalleActivoFijo("n", isGuardarCambiosEnLote, isEsMantenimientoRelacionado);			
		
		} catch(Exception e) {
			FuncionesSwing.manageException(this, e,logger,DetalleActivoFijoConstantesFunciones.CLASSNAME);
		}
	}
	
	public void inicializarDetalleActivoFijo() throws Exception {
		try {
			DetalleActivoFijoConstantesFunciones.inicializarDetalleActivoFijo(this.detalleactivofijo);
			
			} catch(Exception e) {
			throw e;
		}
	}
	
	public void anteriores()throws Exception {
		try	{
			//this.iNumeroPaginacionPagina=this.iNumeroPaginacionPagina-this.iNumeroPaginacion;
			
			if(this.iNumeroPaginacionPagina-this.iNumeroPaginacion<this.iNumeroPaginacion) {
				this.iNumeroPaginacionPagina=0;		
			} else {
				this.iNumeroPaginacionPagina=this.iNumeroPaginacionPagina-this.iNumeroPaginacion;
			}
			
			this.procesarBusqueda(this.sAccionBusqueda);
			
		} catch(Exception e) {
			FuncionesSwing.manageException(this, e,logger,DetalleActivoFijoConstantesFunciones.CLASSNAME);
		}
	}
	
	public void siguientes()throws Exception {
		try	{			
			if(this.detalleactivofijoLogic.getDetalleActivoFijos().size()>0) {
					
				this.iNumeroPaginacionPagina=this.iNumeroPaginacionPagina+this.iNumeroPaginacion;
			}
				
			this.procesarBusqueda(this.sAccionBusqueda);
			
		} catch(Exception e) {
			FuncionesSwing.manageException(this, e,logger,DetalleActivoFijoConstantesFunciones.CLASSNAME);
		}
	}		
	
	public void generarReporteDetalleActivoFijos(String sAccionBusqueda,List<DetalleActivoFijo> detalleactivofijosParaReportes) throws Exception {
		//HttpSession httpSession = httpServletRequest.getSession();
		Long iIdUsuarioSesion=0L;	
		
		
		if(usuarioActual==null) {
			this.usuarioActual=new Usuario();
		}
		
		iIdUsuarioSesion=usuarioActual.getId();
		
		String sPathReportes="";
		
		InputStream reportFile=null;
		InputStream imageFile=null;
			
		imageFile=AuxiliarImagenes.class.getResourceAsStream("LogoReporte.jpg");			
				
		
		String sPathReporteFinal="";
		
		if(!esReporteAccionProceso) {
			if(!this.sTipoReporte.equals("RELACIONES")) {//!isEsReporteRelaciones
				if(!this.esReporteDinamico) {
					sPathReporteFinal="DetalleActivoFijo"+this.sTipoReporteExtra+"Design.jasper";
					reportFile = AuxiliarReportes.class.getResourceAsStream(sPathReporteFinal);	
				} else {
					sPathReporteFinal=this.sPathReporteDinamico;
					reportFile = new FileInputStream(sPathReporteFinal);
				}
			} else {
				sPathReporteFinal="DetalleActivoFijoMasterRelaciones"+this.sTipoReporteExtra+"Design.jasper";
				reportFile = AuxiliarReportes.class.getResourceAsStream(sPathReporteFinal);
				//sPathReportes=reportFile.getPath().replace("DetalleActivoFijoMasterRelacionesDesign.jasper", "");
			}
		} else {
				sPathReporteFinal="DetalleActivoFijo"+this.sTipoReporteExtra+"Design.jasper";
				reportFile = AuxiliarReportes.class.getResourceAsStream(sPathReporteFinal);	
		}
		
		if(reportFile==null) {
			throw new JRRuntimeException(sPathReporteFinal+" no existe");
		}
		
		String sUsuario="";
		
		if(usuarioActual!=null) {
			sUsuario=usuarioActual.getuser_name();
		}
		
		Map<String, Object> parameters = new HashMap<String, Object>();
		parameters.put("usuario", sUsuario);
		
		parameters.put("titulo", Funciones.GetTituloSistemaReporte(this.parametroGeneralSg,this.moduloActual,this.usuarioActual));
		parameters.put("subtitulo", "Reporte De  Detalle Activo Fijos");		
		parameters.put("busquedapor", DetalleActivoFijoConstantesFunciones.getNombreIndice(sAccionBusqueda)+sDetalleReporte);
		
		
		if(this.sTipoReporte.equals("RELACIONES")) {//isEsReporteRelaciones
			parameters.put("SUBREPORT_DIR", sPathReportes);
		}
		
		parameters.put("con_grafico", this.conGraficoReporte);
		
		JasperReport jasperReport = (JasperReport)JRLoader.loadObject(reportFile);
				
		this.cargarDatosCliente();
		
		ArrayList<Classe> classes=new ArrayList<Classe>();		
		
		if(this.sTipoReporte.equals("RELACIONES")) {//isEsReporteRelaciones
			
			classes.add(new Classe(MantenimientoActivoFijo.class));
			classes.add(new Classe(ServicioTransporte.class));
			classes.add(new Classe(MovimientoActivoFijo.class));
			classes.add(new Classe(Vehiculo.class));
			classes.add(new Classe(MetodoDepreciacion.class));
			classes.add(new Classe(ResponsableActivoFijo.class));
			classes.add(new Classe(DepreciacionActivoFijo.class));
			classes.add(new Classe(GastoDepreciacionCentroCosto.class));
			classes.add(new Classe(ParteActivoFijo.class));
			
			//ARCHITECTURE
			if(Constantes.ISUSAEJBLOGICLAYER) {		
				try	{
					
					DetalleActivoFijoLogic detalleactivofijoLogicAuxiliar=new DetalleActivoFijoLogic();
					detalleactivofijoLogicAuxiliar.setDatosCliente(detalleactivofijoLogic.getDatosCliente());				
					detalleactivofijoLogicAuxiliar.setDetalleActivoFijos(detalleactivofijosParaReportes);
					
					detalleactivofijoLogicAuxiliar.cargarRelacionesLoteForeignKeyDetalleActivoFijoWithConnection(); //deepLoadsWithConnection(false, DeepLoadType.INCLUDE, classes, "");
					
					detalleactivofijosParaReportes=detalleactivofijoLogicAuxiliar.getDetalleActivoFijos();
					
					//detalleactivofijoLogic.getNewConnexionToDeep();
					
					//for (DetalleActivoFijo detalleactivofijo:detalleactivofijosParaReportes) {
					//	detalleactivofijoLogic.deepLoad(detalleactivofijo, false, DeepLoadType.INCLUDE, classes);
					//}						
					//detalleactivofijoLogic.commitNewConnexionToDeep();
					
						
				} catch(Exception e) {
					throw e;
					
				} finally {
					//detalleactivofijoLogic.closeNewConnexionToDeep();
				}
			} else if(Constantes.ISUSAEJBREMOTE) {
			} else if(Constantes.ISUSAEJBHOME) {
			}
			//ARCHITECTURE		
			
		
			
			

			InputStream reportFileMantenimientoActivoFijo = AuxiliarReportes.class.getResourceAsStream("MantenimientoActivoFijoDetalleRelacionesDesign.jasper");
			parameters.put("subreport_mantenimientoactivofijo", reportFileMantenimientoActivoFijo);

			InputStream reportFileServicioTransporte = AuxiliarReportes.class.getResourceAsStream("ServicioTransporteDetalleRelacionesDesign.jasper");
			parameters.put("subreport_serviciotransporte", reportFileServicioTransporte);

			InputStream reportFileMovimientoActivoFijo = AuxiliarReportes.class.getResourceAsStream("MovimientoActivoFijoDetalleRelacionesDesign.jasper");
			parameters.put("subreport_movimientoactivofijo", reportFileMovimientoActivoFijo);

			InputStream reportFileVehiculo = AuxiliarReportes.class.getResourceAsStream("VehiculoDetalleRelacionesDesign.jasper");
			parameters.put("subreport_vehiculo", reportFileVehiculo);

			InputStream reportFileMetodoDepreciacion = AuxiliarReportes.class.getResourceAsStream("MetodoDepreciacionDetalleRelacionesDesign.jasper");
			parameters.put("subreport_metododepreciacion", reportFileMetodoDepreciacion);

			InputStream reportFileResponsableActivoFijo = AuxiliarReportes.class.getResourceAsStream("ResponsableActivoFijoDetalleRelacionesDesign.jasper");
			parameters.put("subreport_responsableactivofijo", reportFileResponsableActivoFijo);

			InputStream reportFileDepreciacionActivoFijo = AuxiliarReportes.class.getResourceAsStream("DepreciacionActivoFijoDetalleRelacionesDesign.jasper");
			parameters.put("subreport_depreciacionactivofijo", reportFileDepreciacionActivoFijo);

			InputStream reportFileGastoDepreciacionCentroCosto = AuxiliarReportes.class.getResourceAsStream("GastoDepreciacionCentroCostoDetalleRelacionesDesign.jasper");
			parameters.put("subreport_gastodepreciacioncentrocosto", reportFileGastoDepreciacionCentroCosto);

			InputStream reportFileParteActivoFijo = AuxiliarReportes.class.getResourceAsStream("ParteActivoFijoDetalleRelacionesDesign.jasper");
			parameters.put("subreport_parteactivofijo", reportFileParteActivoFijo);
		} else {
			//FK DEBERIA TRAERSE DE ANTEMANO
			
		}
								
		
		//CLASSES PARA REPORTES OBJETOS RELACIONADOS
		if(!this.sTipoReporte.equals("RELACIONES")) {//!isEsReporteRelaciones
			classes=new ArrayList<Classe>();
		}
		
		JRBeanArrayDataSource jrbeanArrayDataSourceDetalleActivoFijo=null;
		
		if(this.sTipoReporteExtra!=null && !this.sTipoReporteExtra.equals("")) {
			DetalleActivoFijoConstantesFunciones.S_TIPOREPORTE_EXTRA=this.sTipoReporteExtra;
		} else {
			DetalleActivoFijoConstantesFunciones.S_TIPOREPORTE_EXTRA="";
		}
		
		jrbeanArrayDataSourceDetalleActivoFijo=new JRBeanArrayDataSource(DetalleActivoFijoJInternalFrame.TraerDetalleActivoFijoBeans(detalleactivofijosParaReportes,classes).toArray());
		
		jasperPrint = JasperFillManager.fillReport(jasperReport,parameters,jrbeanArrayDataSourceDetalleActivoFijo);
				
		
		String sPathDest=Constantes.SUNIDAD_ARCHIVOS+":/"+Constantes.SCONTEXTSERVER+"/"+DetalleActivoFijoConstantesFunciones.SCHEMA+"/reportes";
		
		File filePathDest = new File(sPathDest);
		
		if(!filePathDest.exists()) {
			filePathDest.mkdirs();				
		}
				
		String sDestFileName=sPathDest+"/"+DetalleActivoFijoConstantesFunciones.CLASSNAME;
				
		if(this.sTipoArchivoReporte=="VISUALIZAR") {
			JasperViewer jasperViewer = new JasperViewer(jasperPrint,false) ;
			jasperViewer.setVisible(true) ; 

		} else if(this.sTipoArchivoReporte=="HTML"||this.sTipoArchivoReporte=="PDF"||this.sTipoArchivoReporte=="XML") {	
			//JasperFillManager.fillReportToFile(reportFile.getAbsolutePath(),parameters, new JRBeanArrayDataSource(DetalleActivoFijoBean.TraerDetalleActivoFijoBeans(detalleactivofijosParaReportes).toArray()));
							
			if(this.sTipoArchivoReporte=="HTML") {
				sDestFileName+=".html";
				JasperExportManager.exportReportToHtmlFile(jasperPrint,sDestFileName);
					
			} else if(this.sTipoArchivoReporte=="PDF") {
				sDestFileName+=".pdf";
				JasperExportManager.exportReportToPdfFile(jasperPrint,sDestFileName);
			} else {
				sDestFileName+=".xml";
				JasperExportManager.exportReportToXmlFile(jasperPrint,sDestFileName, false);
			}	
			
		} else if(this.sTipoArchivoReporte=="WORD"||this.sTipoArchivoReporte=="EXCEL") {
				
			if(this.sTipoArchivoReporte=="WORD") {
				sDestFileName+=".rtf";
					
				JRRtfExporter exporter = new JRRtfExporter();
		
				exporter.setParameter(JRExporterParameter.JASPER_PRINT, jasperPrint);
				exporter.setParameter(JRExporterParameter.OUTPUT_FILE_NAME, sDestFileName);
		
				exporter.exportReport();
				
			} else	{
				sDestFileName+=".xls";
					
				JRXlsExporter exporterXls = new JRXlsExporter();
		
				exporterXls.setParameter(JRExporterParameter.JASPER_PRINT, jasperPrint);
				exporterXls.setParameter(JRExporterParameter.OUTPUT_FILE_NAME, sDestFileName);
				exporterXls.setParameter(JRXlsExporterParameter.IS_ONE_PAGE_PER_SHEET, Boolean.TRUE);
		
				exporterXls.exportReport();
			}
			
		} else if(this.sTipoArchivoReporte=="EXCEL2"||this.sTipoArchivoReporte=="EXCEL2_2") {
			//sDestFileName+=".xlsx";
			
			if(this.sTipoReporte.equals("NORMAL")) {
				this.generarExcelReporteDetalleActivoFijos(sAccionBusqueda,sTipoArchivoReporte,detalleactivofijosParaReportes);
			
			} else if(this.sTipoReporte.equals("FORMULARIO")){
				this.generarExcelReporteVerticalDetalleActivoFijos(sAccionBusqueda,sTipoArchivoReporte,detalleactivofijosParaReportes,false);
			
			} else if(this.sTipoReporte.equals("DINAMICO")){
				
				if(this.sTipoReporteDinamico.equals("NORMAL")) {
					
					this.jButtonGenerarExcelReporteDinamicoDetalleActivoFijoActionPerformed(null);
					//this.generarExcelReporteDetalleActivoFijos(sAccionBusqueda,sTipoArchivoReporte,detalleactivofijosParaReportes);
					
				
				} else if(this.sTipoReporteDinamico.equals("FORMULARIO")){
					this.generarExcelReporteVerticalDetalleActivoFijos(sAccionBusqueda,sTipoArchivoReporte,detalleactivofijosParaReportes,true);
				
				} else if(this.sTipoReporteDinamico.equals("RELACIONES")){
					this.generarExcelReporteRelacionesDetalleActivoFijos(sAccionBusqueda,sTipoArchivoReporte,detalleactivofijosParaReportes,true);
				}
				
			} else if(this.sTipoReporte.equals("RELACIONES")){
				this.generarExcelReporteRelacionesDetalleActivoFijos(sAccionBusqueda,sTipoArchivoReporte,detalleactivofijosParaReportes,false);
			}
		}
		
		if(this.sTipoArchivoReporte=="HTML"||this.sTipoArchivoReporte=="PDF"||this.sTipoArchivoReporte=="XML"||this.sTipoArchivoReporte=="WORD"||this.sTipoArchivoReporte=="EXCEL") {				
			JOptionPane.showMessageDialog(this,"REPORTE "+sDestFileName+" GENERADO SATISFACTORIAMENTE","REPORTES ",JOptionPane.INFORMATION_MESSAGE);
		}
	}
	
	public void generarExcelReporteDetalleActivoFijos(String sAccionBusqueda,String sTipoArchivoReporte,List<DetalleActivoFijo> detalleactivofijosParaReportes) throws Exception {
	 	Workbook workbook = null;
		String sPath=this.parametroGeneralUsuario.getpath_exportar()+"detalleactivofijo";
		
		if(sTipoArchivoReporte=="EXCEL2") {
			workbook = new HSSFWorkbook();
			sPath+=".xls";
		
		} else if(sTipoArchivoReporte=="EXCEL2_2") {
			workbook = new XSSFWorkbook();
			sPath+=".xlsx";			
		}
		
		
		
		Sheet sheet = workbook.createSheet("DetalleActivoFijos");
         
        int iRow = 0;
		int iCell = 0;
		Row row =null;
		Cell cell=null;
		
		row = sheet.createRow(iRow++);
		
		this.generarExcelReporteHeaderDetalleActivoFijo("NORMAL",row,workbook);
		
		CellStyle cellStyleData = Funciones2.getStyleTitulo(workbook,"ZEBRA");
		CellStyle cellStyleDataAux=null;
		
		int i=0;
		
      	for(DetalleActivoFijo detalleactivofijo : detalleactivofijosParaReportes) {            
			row = sheet.createRow(iRow++);
			iCell = 0;
			
			cellStyleDataAux=null;
			
			if(i%2==0) {
				cellStyleDataAux=cellStyleData;
			}
			
			DetalleActivoFijoConstantesFunciones.generarExcelReporteDataDetalleActivoFijo("NORMAL",row,workbook,detalleactivofijo,cellStyleDataAux);
		
			
			/*
            Cell cell0 = row.createCell(0);
            cell0.setCellValue(country.getName());
            Cell cell1 = row.createCell(1);
            cell1.setCellValue(country.getShortCode());
			*/
			
			i++;
        }
        
		
        FileOutputStream fileOutputStream = new FileOutputStream(sPath);
		
        workbook.write(fileOutputStream);
		
        fileOutputStream.close();
		
		Constantes2.S_PATH_ULTIMO_ARCHIVO=sPath;
			
		if(this.parametroGeneralUsuario.getcon_mensaje_confirmacion() && !this.detalleactivofijoSessionBean.getEsGuardarRelacionado()) {//Constantes.ISMOSTRARMENSAJESMANTENIMIENTO && 
			JOptionPane.showMessageDialog(this,"EXPORTADO CORRECTAMENTE:"+sPath,"MANTENIMIENTO DE Detalle Activo Fijo",JOptionPane.INFORMATION_MESSAGE);
		}
	}
	
	public void generarExcelReporteHeaderDetalleActivoFijo(String sTipo,Row row,Workbook workbook) {
		
		DetalleActivoFijoConstantesFunciones.generarExcelReporteHeaderDetalleActivoFijo(sTipo,row,workbook);
		
		/*
		Cell cell=null;
		int iCell=0;
		
		CellStyle cellStyle = workbook.createCellStyle();
		cellStyle.setFillBackgroundColor(IndexedColors.GREEN.getIndex());
		cellStyle.setFillPattern(CellStyle.ALIGN_FILL);
		*/
		
	}
	
	public void generarExcelReporteVerticalDetalleActivoFijos(String sAccionBusqueda,String sTipoArchivoReporte,List<DetalleActivoFijo> detalleactivofijosParaReportes,Boolean paraDinamico) throws Exception {
	 	Workbook workbook = null;
		String sPath=this.parametroGeneralUsuario.getpath_exportar()+"detalleactivofijo_vertical";
		
		if(sTipoArchivoReporte=="EXCEL2") {
			workbook = new HSSFWorkbook();
			sPath+=".xls";
		
		} else if(sTipoArchivoReporte=="EXCEL2_2") {
			workbook = new XSSFWorkbook();
			sPath+=".xlsx";			
		}
		
		
		
		Sheet sheet = workbook.createSheet("DetalleActivoFijos");
         
        int iRow = 0;
		int iRowLast = 0;
		int iCell = 0;
		Row row =null;
		Cell cell=null;
		
		row = sheet.createRow(iRow++);
		
		CellStyle cellStyle = Funciones2.getStyleTitulo(workbook,"ZEBRA");;
		
		CellStyle cellStyleTitulo = Funciones2.getStyleTitulo(workbook,"PRINCIPAL_VERTICAL");
		
		
		for(DetalleActivoFijo detalleactivofijo : detalleactivofijosParaReportes) {
			row = sheet.createRow(iRow++);
			iRowLast=iRow - 1;
			
			cell = row.createCell(0);
			cell.setCellValue(DetalleActivoFijoConstantesFunciones.getDetalleActivoFijoDescripcion(detalleactivofijo));
			cell.setCellStyle(cellStyleTitulo);
			
			sheet.addMergedRegion(new CellRangeAddress(iRowLast,iRowLast,0,2));			
	
			


			if(!paraDinamico || (paraDinamico && this.existeColumnaReporteDinamico(DetalleActivoFijoConstantesFunciones.LABEL_IDEMPRESA))) {
				row = sheet.createRow(iRow++);

				cell = row.createCell(0);
				cell.setCellValue(DetalleActivoFijoConstantesFunciones.LABEL_IDEMPRESA);
				cell.setCellStyle(cellStyle);

				cell = row.createCell(1);
				cell.setCellValue(detalleactivofijo.getempresa_descripcion());


			}


			if(!paraDinamico || (paraDinamico && this.existeColumnaReporteDinamico(DetalleActivoFijoConstantesFunciones.LABEL_IDSUCURSAL))) {
				row = sheet.createRow(iRow++);

				cell = row.createCell(0);
				cell.setCellValue(DetalleActivoFijoConstantesFunciones.LABEL_IDSUCURSAL);
				cell.setCellStyle(cellStyle);

				cell = row.createCell(1);
				cell.setCellValue(detalleactivofijo.getsucursal_descripcion());


			}


			if(!paraDinamico || (paraDinamico && this.existeColumnaReporteDinamico(DetalleActivoFijoConstantesFunciones.LABEL_IDDETALLEGRUPOACTIVOFIJO))) {
				row = sheet.createRow(iRow++);

				cell = row.createCell(0);
				cell.setCellValue(DetalleActivoFijoConstantesFunciones.LABEL_IDDETALLEGRUPOACTIVOFIJO);
				cell.setCellStyle(cellStyle);

				cell = row.createCell(1);
				cell.setCellValue(detalleactivofijo.getdetallegrupoactivofijo_descripcion());


			}


			if(!paraDinamico || (paraDinamico && this.existeColumnaReporteDinamico(DetalleActivoFijoConstantesFunciones.LABEL_IDSUBGRUPOACTIVOFIJO))) {
				row = sheet.createRow(iRow++);

				cell = row.createCell(0);
				cell.setCellValue(DetalleActivoFijoConstantesFunciones.LABEL_IDSUBGRUPOACTIVOFIJO);
				cell.setCellStyle(cellStyle);

				cell = row.createCell(1);
				cell.setCellValue(detalleactivofijo.getsubgrupoactivofijo_descripcion());


			}


			if(!paraDinamico || (paraDinamico && this.existeColumnaReporteDinamico(DetalleActivoFijoConstantesFunciones.LABEL_IDTIPORAMOACTIVOFIJO))) {
				row = sheet.createRow(iRow++);

				cell = row.createCell(0);
				cell.setCellValue(DetalleActivoFijoConstantesFunciones.LABEL_IDTIPORAMOACTIVOFIJO);
				cell.setCellStyle(cellStyle);

				cell = row.createCell(1);
				cell.setCellValue(detalleactivofijo.gettiporamoactivofijo_descripcion());


			}


			if(!paraDinamico || (paraDinamico && this.existeColumnaReporteDinamico(DetalleActivoFijoConstantesFunciones.LABEL_IDTIPOACTIVOFIJOEMPRESA))) {
				row = sheet.createRow(iRow++);

				cell = row.createCell(0);
				cell.setCellValue(DetalleActivoFijoConstantesFunciones.LABEL_IDTIPOACTIVOFIJOEMPRESA);
				cell.setCellStyle(cellStyle);

				cell = row.createCell(1);
				cell.setCellValue(detalleactivofijo.gettipoactivofijoempresa_descripcion());


			}


			if(!paraDinamico || (paraDinamico && this.existeColumnaReporteDinamico(DetalleActivoFijoConstantesFunciones.LABEL_IDTIPODEPRECIACIONEMPRESA))) {
				row = sheet.createRow(iRow++);

				cell = row.createCell(0);
				cell.setCellValue(DetalleActivoFijoConstantesFunciones.LABEL_IDTIPODEPRECIACIONEMPRESA);
				cell.setCellStyle(cellStyle);

				cell = row.createCell(1);
				cell.setCellValue(detalleactivofijo.gettipodepreciacionempresa_descripcion());


			}


			if(!paraDinamico || (paraDinamico && this.existeColumnaReporteDinamico(DetalleActivoFijoConstantesFunciones.LABEL_IDESTADOACTIVOFIJO))) {
				row = sheet.createRow(iRow++);

				cell = row.createCell(0);
				cell.setCellValue(DetalleActivoFijoConstantesFunciones.LABEL_IDESTADOACTIVOFIJO);
				cell.setCellStyle(cellStyle);

				cell = row.createCell(1);
				cell.setCellValue(detalleactivofijo.getestadoactivofijo_descripcion());


			}


			if(!paraDinamico || (paraDinamico && this.existeColumnaReporteDinamico(DetalleActivoFijoConstantesFunciones.LABEL_IDCLIENTE))) {
				row = sheet.createRow(iRow++);

				cell = row.createCell(0);
				cell.setCellValue(DetalleActivoFijoConstantesFunciones.LABEL_IDCLIENTE);
				cell.setCellStyle(cellStyle);

				cell = row.createCell(1);
				cell.setCellValue(detalleactivofijo.getcliente_descripcion());


			}


			if(!paraDinamico || (paraDinamico && this.existeColumnaReporteDinamico(DetalleActivoFijoConstantesFunciones.LABEL_IDPARTIDAPRESU))) {
				row = sheet.createRow(iRow++);

				cell = row.createCell(0);
				cell.setCellValue(DetalleActivoFijoConstantesFunciones.LABEL_IDPARTIDAPRESU);
				cell.setCellStyle(cellStyle);

				cell = row.createCell(1);
				cell.setCellValue(detalleactivofijo.getpartidapresu_descripcion());


			}


			if(!paraDinamico || (paraDinamico && this.existeColumnaReporteDinamico(DetalleActivoFijoConstantesFunciones.LABEL_CODIGO))) {
				row = sheet.createRow(iRow++);

				cell = row.createCell(0);
				cell.setCellValue(DetalleActivoFijoConstantesFunciones.LABEL_CODIGO);
				cell.setCellStyle(cellStyle);

				cell = row.createCell(1);
				cell.setCellValue(detalleactivofijo.getcodigo());


			}


			if(!paraDinamico || (paraDinamico && this.existeColumnaReporteDinamico(DetalleActivoFijoConstantesFunciones.LABEL_NOMBRE))) {
				row = sheet.createRow(iRow++);

				cell = row.createCell(0);
				cell.setCellValue(DetalleActivoFijoConstantesFunciones.LABEL_NOMBRE);
				cell.setCellStyle(cellStyle);

				cell = row.createCell(1);
				cell.setCellValue(detalleactivofijo.getnombre());


			}


			if(!paraDinamico || (paraDinamico && this.existeColumnaReporteDinamico(DetalleActivoFijoConstantesFunciones.LABEL_SERIE))) {
				row = sheet.createRow(iRow++);

				cell = row.createCell(0);
				cell.setCellValue(DetalleActivoFijoConstantesFunciones.LABEL_SERIE);
				cell.setCellStyle(cellStyle);

				cell = row.createCell(1);
				cell.setCellValue(detalleactivofijo.getserie());


			}


			if(!paraDinamico || (paraDinamico && this.existeColumnaReporteDinamico(DetalleActivoFijoConstantesFunciones.LABEL_FECHACOMPRA))) {
				row = sheet.createRow(iRow++);

				cell = row.createCell(0);
				cell.setCellValue(DetalleActivoFijoConstantesFunciones.LABEL_FECHACOMPRA);
				cell.setCellStyle(cellStyle);

				cell = row.createCell(1);
				cell.setCellValue(detalleactivofijo.getfecha_compra());


			}


			if(!paraDinamico || (paraDinamico && this.existeColumnaReporteDinamico(DetalleActivoFijoConstantesFunciones.LABEL_FECHAMANTENIMIENTO))) {
				row = sheet.createRow(iRow++);

				cell = row.createCell(0);
				cell.setCellValue(DetalleActivoFijoConstantesFunciones.LABEL_FECHAMANTENIMIENTO);
				cell.setCellStyle(cellStyle);

				cell = row.createCell(1);
				cell.setCellValue(detalleactivofijo.getfecha_mantenimiento());


			}


			if(!paraDinamico || (paraDinamico && this.existeColumnaReporteDinamico(DetalleActivoFijoConstantesFunciones.LABEL_FECHACORRECCION))) {
				row = sheet.createRow(iRow++);

				cell = row.createCell(0);
				cell.setCellValue(DetalleActivoFijoConstantesFunciones.LABEL_FECHACORRECCION);
				cell.setCellStyle(cellStyle);

				cell = row.createCell(1);
				cell.setCellValue(detalleactivofijo.getfecha_correccion());


			}


			if(!paraDinamico || (paraDinamico && this.existeColumnaReporteDinamico(DetalleActivoFijoConstantesFunciones.LABEL_FECHADEPRECIACION))) {
				row = sheet.createRow(iRow++);

				cell = row.createCell(0);
				cell.setCellValue(DetalleActivoFijoConstantesFunciones.LABEL_FECHADEPRECIACION);
				cell.setCellStyle(cellStyle);

				cell = row.createCell(1);
				cell.setCellValue(detalleactivofijo.getfecha_depreciacion());


			}


			if(!paraDinamico || (paraDinamico && this.existeColumnaReporteDinamico(DetalleActivoFijoConstantesFunciones.LABEL_CLAVE))) {
				row = sheet.createRow(iRow++);

				cell = row.createCell(0);
				cell.setCellValue(DetalleActivoFijoConstantesFunciones.LABEL_CLAVE);
				cell.setCellStyle(cellStyle);

				cell = row.createCell(1);
				cell.setCellValue(detalleactivofijo.getclave());


			}


			if(!paraDinamico || (paraDinamico && this.existeColumnaReporteDinamico(DetalleActivoFijoConstantesFunciones.LABEL_MARCA))) {
				row = sheet.createRow(iRow++);

				cell = row.createCell(0);
				cell.setCellValue(DetalleActivoFijoConstantesFunciones.LABEL_MARCA);
				cell.setCellStyle(cellStyle);

				cell = row.createCell(1);
				cell.setCellValue(detalleactivofijo.getmarca());


			}


			if(!paraDinamico || (paraDinamico && this.existeColumnaReporteDinamico(DetalleActivoFijoConstantesFunciones.LABEL_MODELO))) {
				row = sheet.createRow(iRow++);

				cell = row.createCell(0);
				cell.setCellValue(DetalleActivoFijoConstantesFunciones.LABEL_MODELO);
				cell.setCellStyle(cellStyle);

				cell = row.createCell(1);
				cell.setCellValue(detalleactivofijo.getmodelo());


			}


			if(!paraDinamico || (paraDinamico && this.existeColumnaReporteDinamico(DetalleActivoFijoConstantesFunciones.LABEL_COLOR))) {
				row = sheet.createRow(iRow++);

				cell = row.createCell(0);
				cell.setCellValue(DetalleActivoFijoConstantesFunciones.LABEL_COLOR);
				cell.setCellStyle(cellStyle);

				cell = row.createCell(1);
				cell.setCellValue(detalleactivofijo.getcolor());


			}


			if(!paraDinamico || (paraDinamico && this.existeColumnaReporteDinamico(DetalleActivoFijoConstantesFunciones.LABEL_FECHA))) {
				row = sheet.createRow(iRow++);

				cell = row.createCell(0);
				cell.setCellValue(DetalleActivoFijoConstantesFunciones.LABEL_FECHA);
				cell.setCellStyle(cellStyle);

				cell = row.createCell(1);
				cell.setCellValue(detalleactivofijo.getfecha());


			}


			if(!paraDinamico || (paraDinamico && this.existeColumnaReporteDinamico(DetalleActivoFijoConstantesFunciones.LABEL_VALORUTIL))) {
				row = sheet.createRow(iRow++);

				cell = row.createCell(0);
				cell.setCellValue(DetalleActivoFijoConstantesFunciones.LABEL_VALORUTIL);
				cell.setCellStyle(cellStyle);

				cell = row.createCell(1);
				cell.setCellValue(detalleactivofijo.getvalor_util());


			}


			if(!paraDinamico || (paraDinamico && this.existeColumnaReporteDinamico(DetalleActivoFijoConstantesFunciones.LABEL_COSTODECOMPRA))) {
				row = sheet.createRow(iRow++);

				cell = row.createCell(0);
				cell.setCellValue(DetalleActivoFijoConstantesFunciones.LABEL_COSTODECOMPRA);
				cell.setCellStyle(cellStyle);

				cell = row.createCell(1);
				cell.setCellValue(detalleactivofijo.getcosto_de_compra());


			}


			if(!paraDinamico || (paraDinamico && this.existeColumnaReporteDinamico(DetalleActivoFijoConstantesFunciones.LABEL_VIDAUTIL))) {
				row = sheet.createRow(iRow++);

				cell = row.createCell(0);
				cell.setCellValue(DetalleActivoFijoConstantesFunciones.LABEL_VIDAUTIL);
				cell.setCellStyle(cellStyle);

				cell = row.createCell(1);
				cell.setCellValue(detalleactivofijo.getvida_util());


			}


			if(!paraDinamico || (paraDinamico && this.existeColumnaReporteDinamico(DetalleActivoFijoConstantesFunciones.LABEL_VALORRESIDUAL))) {
				row = sheet.createRow(iRow++);

				cell = row.createCell(0);
				cell.setCellValue(DetalleActivoFijoConstantesFunciones.LABEL_VALORRESIDUAL);
				cell.setCellStyle(cellStyle);

				cell = row.createCell(1);
				cell.setCellValue(detalleactivofijo.getvalor_residual());


			}


			if(!paraDinamico || (paraDinamico && this.existeColumnaReporteDinamico(DetalleActivoFijoConstantesFunciones.LABEL_CANTIDAD))) {
				row = sheet.createRow(iRow++);

				cell = row.createCell(0);
				cell.setCellValue(DetalleActivoFijoConstantesFunciones.LABEL_CANTIDAD);
				cell.setCellStyle(cellStyle);

				cell = row.createCell(1);
				cell.setCellValue(detalleactivofijo.getcantidad());


			}


			if(!paraDinamico || (paraDinamico && this.existeColumnaReporteDinamico(DetalleActivoFijoConstantesFunciones.LABEL_NOMBREPROPIETARIO))) {
				row = sheet.createRow(iRow++);

				cell = row.createCell(0);
				cell.setCellValue(DetalleActivoFijoConstantesFunciones.LABEL_NOMBREPROPIETARIO);
				cell.setCellStyle(cellStyle);

				cell = row.createCell(1);
				cell.setCellValue(detalleactivofijo.getnombre_propietario());


			}


			if(!paraDinamico || (paraDinamico && this.existeColumnaReporteDinamico(DetalleActivoFijoConstantesFunciones.LABEL_RESPONSABLE))) {
				row = sheet.createRow(iRow++);

				cell = row.createCell(0);
				cell.setCellValue(DetalleActivoFijoConstantesFunciones.LABEL_RESPONSABLE);
				cell.setCellStyle(cellStyle);

				cell = row.createCell(1);
				cell.setCellValue(detalleactivofijo.getresponsable());


			}


			if(!paraDinamico || (paraDinamico && this.existeColumnaReporteDinamico(DetalleActivoFijoConstantesFunciones.LABEL_PATHFOTO))) {
				row = sheet.createRow(iRow++);

				cell = row.createCell(0);
				cell.setCellValue(DetalleActivoFijoConstantesFunciones.LABEL_PATHFOTO);
				cell.setCellStyle(cellStyle);

				cell = row.createCell(1);
				cell.setCellValue(detalleactivofijo.getpath_foto());


			}


			if(!paraDinamico || (paraDinamico && this.existeColumnaReporteDinamico(DetalleActivoFijoConstantesFunciones.LABEL_NUMEROCOMPROBANTE))) {
				row = sheet.createRow(iRow++);

				cell = row.createCell(0);
				cell.setCellValue(DetalleActivoFijoConstantesFunciones.LABEL_NUMEROCOMPROBANTE);
				cell.setCellStyle(cellStyle);

				cell = row.createCell(1);
				cell.setCellValue(detalleactivofijo.getnumero_comprobante());


			}


			if(!paraDinamico || (paraDinamico && this.existeColumnaReporteDinamico(DetalleActivoFijoConstantesFunciones.LABEL_REFERENCIA))) {
				row = sheet.createRow(iRow++);

				cell = row.createCell(0);
				cell.setCellValue(DetalleActivoFijoConstantesFunciones.LABEL_REFERENCIA);
				cell.setCellStyle(cellStyle);

				cell = row.createCell(1);
				cell.setCellValue(detalleactivofijo.getreferencia());


			}


			if(!paraDinamico || (paraDinamico && this.existeColumnaReporteDinamico(DetalleActivoFijoConstantesFunciones.LABEL_VALORCOTIZACION))) {
				row = sheet.createRow(iRow++);

				cell = row.createCell(0);
				cell.setCellValue(DetalleActivoFijoConstantesFunciones.LABEL_VALORCOTIZACION);
				cell.setCellStyle(cellStyle);

				cell = row.createCell(1);
				cell.setCellValue(detalleactivofijo.getvalor_cotizacion());


			}


			if(!paraDinamico || (paraDinamico && this.existeColumnaReporteDinamico(DetalleActivoFijoConstantesFunciones.LABEL_CONPARTES))) {
				row = sheet.createRow(iRow++);

				cell = row.createCell(0);
				cell.setCellValue(DetalleActivoFijoConstantesFunciones.LABEL_CONPARTES);
				cell.setCellStyle(cellStyle);

				cell = row.createCell(1);
				cell.setCellValue(Funciones2.getDescripcionBoolean(detalleactivofijo.getcon_partes()));


			}


			if(!paraDinamico || (paraDinamico && this.existeColumnaReporteDinamico(DetalleActivoFijoConstantesFunciones.LABEL_CONGARANTIA))) {
				row = sheet.createRow(iRow++);

				cell = row.createCell(0);
				cell.setCellValue(DetalleActivoFijoConstantesFunciones.LABEL_CONGARANTIA);
				cell.setCellStyle(cellStyle);

				cell = row.createCell(1);
				cell.setCellValue(Funciones2.getDescripcionBoolean(detalleactivofijo.getcon_garantia()));


			}


			if(!paraDinamico || (paraDinamico && this.existeColumnaReporteDinamico(DetalleActivoFijoConstantesFunciones.LABEL_CONEXISTENCIA))) {
				row = sheet.createRow(iRow++);

				cell = row.createCell(0);
				cell.setCellValue(DetalleActivoFijoConstantesFunciones.LABEL_CONEXISTENCIA);
				cell.setCellStyle(cellStyle);

				cell = row.createCell(1);
				cell.setCellValue(Funciones2.getDescripcionBoolean(detalleactivofijo.getcon_existencia()));


			}


			if(!paraDinamico || (paraDinamico && this.existeColumnaReporteDinamico(DetalleActivoFijoConstantesFunciones.LABEL_FECHABAJA))) {
				row = sheet.createRow(iRow++);

				cell = row.createCell(0);
				cell.setCellValue(DetalleActivoFijoConstantesFunciones.LABEL_FECHABAJA);
				cell.setCellStyle(cellStyle);

				cell = row.createCell(1);
				cell.setCellValue(detalleactivofijo.getfecha_baja());


			}


			if(!paraDinamico || (paraDinamico && this.existeColumnaReporteDinamico(DetalleActivoFijoConstantesFunciones.LABEL_PATHFOTO2))) {
				row = sheet.createRow(iRow++);

				cell = row.createCell(0);
				cell.setCellValue(DetalleActivoFijoConstantesFunciones.LABEL_PATHFOTO2);
				cell.setCellStyle(cellStyle);

				cell = row.createCell(1);
				cell.setCellValue(detalleactivofijo.getpath_foto2());


			}						
        }
        
		
        FileOutputStream fileOutputStream = new FileOutputStream(sPath);
		
        workbook.write(fileOutputStream);
		
        fileOutputStream.close();
		
		Constantes2.S_PATH_ULTIMO_ARCHIVO=sPath;
			
		if(this.parametroGeneralUsuario.getcon_mensaje_confirmacion() && !this.detalleactivofijoSessionBean.getEsGuardarRelacionado()) {//Constantes.ISMOSTRARMENSAJESMANTENIMIENTO && 
			JOptionPane.showMessageDialog(this,"EXPORTADO CORRECTAMENTE:"+sPath,"MANTENIMIENTO DE Detalle Activo Fijo",JOptionPane.INFORMATION_MESSAGE);
		}
	}
	
	public void generarExcelReporteRelacionesDetalleActivoFijos(String sAccionBusqueda,String sTipoArchivoReporte,List<DetalleActivoFijo> detalleactivofijosParaReportes,Boolean paraDinamico) throws Exception {
		
		ArrayList<Classe> classes=new ArrayList<Classe>();
		List<DetalleActivoFijo> detalleactivofijosRespaldo=null;
		
		classes=DetalleActivoFijoConstantesFunciones.getClassesRelationshipsOfDetalleActivoFijo(new ArrayList<Classe>(),DeepLoadType.NONE,false);
					
		this.datosDeep=new DatosDeep();
		
		this.datosDeep.setIsDeep(false);
		this.datosDeep.setDeepLoadType(DeepLoadType.INCLUDE);
		this.datosDeep.setClases(classes);
			
		this.datosCliente.setDatosDeepParametros(false, DeepLoadType.INCLUDE, classes, "");
		this.datosCliente.setIsConDeep(true);	
		this.datosCliente.setIsConExportar(false);
		
						
		this.detalleactivofijoLogic.setDatosCliente(this.datosCliente);
		this.detalleactivofijoLogic.setDatosDeep(this.datosDeep);
		this.detalleactivofijoLogic.setIsConDeep(true);
		
		detalleactivofijosRespaldo=this.detalleactivofijoLogic.getDetalleActivoFijos();
		
		this.detalleactivofijoLogic.setDetalleActivoFijos(detalleactivofijosParaReportes);	
		this.detalleactivofijoLogic.deepLoadsWithConnection(false, DeepLoadType.INCLUDE, classes,"");
		
		detalleactivofijosParaReportes=this.detalleactivofijoLogic.getDetalleActivoFijos();
		this.detalleactivofijoLogic.setDetalleActivoFijos(detalleactivofijosRespaldo);
		
		
	 	Workbook workbook = null;
		String sPath=this.parametroGeneralUsuario.getpath_exportar()+"detalleactivofijo_relacion";
		
		if(sTipoArchivoReporte=="EXCEL2") {
			workbook = new HSSFWorkbook();
			sPath+=".xls";
		
		} else if(sTipoArchivoReporte=="EXCEL2_2") {
			workbook = new XSSFWorkbook();
			sPath+=".xlsx";			
		}
		
		
		
		Sheet sheet = workbook.createSheet("DetalleActivoFijos");
         
        int iRow = 0;
		int iRowLast = 0;
		int iCell = 0;
		Row row =null;
		Cell cell=null;
		
		row = sheet.createRow(iRow++);
		
		this.generarExcelReporteHeaderDetalleActivoFijo("NORMAL",row,workbook);
		
		int i=0;
		int i2=0;
		
		CellStyle cellStyleData = Funciones2.getStyleTitulo(workbook,"ZEBRA");
		CellStyle cellStyleDataTitulo = Funciones2.getStyleTitulo(workbook,"PRINCIPAL");
		CellStyle cellStyleDataZebra = Funciones2.getStyleTitulo(workbook,"ZEBRA");
		CellStyle cellStyleDataAux =null;
		CellStyle cellStyleDataAuxHijo =null;
		
		for(DetalleActivoFijo detalleactivofijo : detalleactivofijosParaReportes) {			
			if(i!=0) {
				row = sheet.createRow(iRow++);				
				this.generarExcelReporteHeaderDetalleActivoFijo("NORMAL",row,workbook);
			}
			
			cellStyleDataAux=null;
			
			if(i%2==0) {
				//cellStyleDataAux=cellStyleData;
			}
			
			row = sheet.createRow(iRow++);						
			DetalleActivoFijoConstantesFunciones.generarExcelReporteDataDetalleActivoFijo("NORMAL",row,workbook,detalleactivofijo,cellStyleDataAux);
		
			
			


				//MantenimientoActivoFijo
			if(!paraDinamico || (paraDinamico && this.existeRelacionReporteDinamico(MantenimientoActivoFijoConstantesFunciones.SCLASSWEBTITULO))) {

				if(detalleactivofijo.getMantenimientoActivoFijos()!=null && detalleactivofijo.getMantenimientoActivoFijos().size()>0) {
					row = sheet.createRow(iRow++);

					iCell=1;iRowLast=iRow-1; cell = row.createCell(iCell++);cell.setCellStyle(cellStyleDataTitulo);sheet.addMergedRegion(new CellRangeAddress(iRowLast,iRowLast,1,5));
					cell.setCellValue(MantenimientoActivoFijoConstantesFunciones.SCLASSWEBTITULO);

					row = sheet.createRow(iRow++);
					MantenimientoActivoFijoConstantesFunciones.generarExcelReporteHeaderMantenimientoActivoFijo("RELACIONADO",row,workbook);
				}

				if(detalleactivofijo.getMantenimientoActivoFijos()!=null) {
					i2=0;
					for(MantenimientoActivoFijo mantenimientoactivofijo : detalleactivofijo.getMantenimientoActivoFijos()) {
						row = sheet.createRow(iRow++);

						cellStyleDataAuxHijo=null;
						if(i2%2==0) {
							cellStyleDataAuxHijo=cellStyleData;
						}

						MantenimientoActivoFijoConstantesFunciones.generarExcelReporteDataMantenimientoActivoFijo("RELACIONADO",row,workbook,mantenimientoactivofijo,cellStyleDataAuxHijo);
						i2++;
					}
				}
			}


				//ServicioTransporte
			if(!paraDinamico || (paraDinamico && this.existeRelacionReporteDinamico(ServicioTransporteConstantesFunciones.SCLASSWEBTITULO))) {

				if(detalleactivofijo.getServicioTransportes()!=null && detalleactivofijo.getServicioTransportes().size()>0) {
					row = sheet.createRow(iRow++);

					iCell=1;iRowLast=iRow-1; cell = row.createCell(iCell++);cell.setCellStyle(cellStyleDataTitulo);sheet.addMergedRegion(new CellRangeAddress(iRowLast,iRowLast,1,5));
					cell.setCellValue(ServicioTransporteConstantesFunciones.SCLASSWEBTITULO);

					row = sheet.createRow(iRow++);
					ServicioTransporteConstantesFunciones.generarExcelReporteHeaderServicioTransporte("RELACIONADO",row,workbook);
				}

				if(detalleactivofijo.getServicioTransportes()!=null) {
					i2=0;
					for(ServicioTransporte serviciotransporte : detalleactivofijo.getServicioTransportes()) {
						row = sheet.createRow(iRow++);

						cellStyleDataAuxHijo=null;
						if(i2%2==0) {
							cellStyleDataAuxHijo=cellStyleData;
						}

						ServicioTransporteConstantesFunciones.generarExcelReporteDataServicioTransporte("RELACIONADO",row,workbook,serviciotransporte,cellStyleDataAuxHijo);
						i2++;
					}
				}
			}


				//MovimientoActivoFijo
			if(!paraDinamico || (paraDinamico && this.existeRelacionReporteDinamico(MovimientoActivoFijoConstantesFunciones.SCLASSWEBTITULO))) {

				if(detalleactivofijo.getMovimientoActivoFijoDestinos()!=null && detalleactivofijo.getMovimientoActivoFijoDestinos().size()>0) {
					row = sheet.createRow(iRow++);

					iCell=1;iRowLast=iRow-1; cell = row.createCell(iCell++);cell.setCellStyle(cellStyleDataTitulo);sheet.addMergedRegion(new CellRangeAddress(iRowLast,iRowLast,1,5));
					cell.setCellValue(MovimientoActivoFijoConstantesFunciones.SCLASSWEBTITULO);

					row = sheet.createRow(iRow++);
					MovimientoActivoFijoConstantesFunciones.generarExcelReporteHeaderMovimientoActivoFijo("RELACIONADO",row,workbook);
				}

				if(detalleactivofijo.getMovimientoActivoFijoDestinos()!=null) {
					i2=0;
					for(MovimientoActivoFijo movimientoactivofijo : detalleactivofijo.getMovimientoActivoFijoDestinos()) {
						row = sheet.createRow(iRow++);

						cellStyleDataAuxHijo=null;
						if(i2%2==0) {
							cellStyleDataAuxHijo=cellStyleData;
						}

						MovimientoActivoFijoConstantesFunciones.generarExcelReporteDataMovimientoActivoFijo("RELACIONADO",row,workbook,movimientoactivofijo,cellStyleDataAuxHijo);
						i2++;
					}
				}
			}


				//Vehiculo
			if(!paraDinamico || (paraDinamico && this.existeRelacionReporteDinamico(VehiculoConstantesFunciones.SCLASSWEBTITULO))) {

				if(detalleactivofijo.getVehiculos()!=null && detalleactivofijo.getVehiculos().size()>0) {
					row = sheet.createRow(iRow++);

					iCell=1;iRowLast=iRow-1; cell = row.createCell(iCell++);cell.setCellStyle(cellStyleDataTitulo);sheet.addMergedRegion(new CellRangeAddress(iRowLast,iRowLast,1,5));
					cell.setCellValue(VehiculoConstantesFunciones.SCLASSWEBTITULO);

					row = sheet.createRow(iRow++);
					VehiculoConstantesFunciones.generarExcelReporteHeaderVehiculo("RELACIONADO",row,workbook);
				}

				if(detalleactivofijo.getVehiculos()!=null) {
					i2=0;
					for(Vehiculo vehiculo : detalleactivofijo.getVehiculos()) {
						row = sheet.createRow(iRow++);

						cellStyleDataAuxHijo=null;
						if(i2%2==0) {
							cellStyleDataAuxHijo=cellStyleData;
						}

						VehiculoConstantesFunciones.generarExcelReporteDataVehiculo("RELACIONADO",row,workbook,vehiculo,cellStyleDataAuxHijo);
						i2++;
					}
				}
			}


				//MetodoDepreciacion
			if(!paraDinamico || (paraDinamico && this.existeRelacionReporteDinamico(MetodoDepreciacionConstantesFunciones.SCLASSWEBTITULO))) {

				if(detalleactivofijo.getMetodoDepreciacions()!=null && detalleactivofijo.getMetodoDepreciacions().size()>0) {
					row = sheet.createRow(iRow++);

					iCell=1;iRowLast=iRow-1; cell = row.createCell(iCell++);cell.setCellStyle(cellStyleDataTitulo);sheet.addMergedRegion(new CellRangeAddress(iRowLast,iRowLast,1,5));
					cell.setCellValue(MetodoDepreciacionConstantesFunciones.SCLASSWEBTITULO);

					row = sheet.createRow(iRow++);
					MetodoDepreciacionConstantesFunciones.generarExcelReporteHeaderMetodoDepreciacion("RELACIONADO",row,workbook);
				}

				if(detalleactivofijo.getMetodoDepreciacions()!=null) {
					i2=0;
					for(MetodoDepreciacion metododepreciacion : detalleactivofijo.getMetodoDepreciacions()) {
						row = sheet.createRow(iRow++);

						cellStyleDataAuxHijo=null;
						if(i2%2==0) {
							cellStyleDataAuxHijo=cellStyleData;
						}

						MetodoDepreciacionConstantesFunciones.generarExcelReporteDataMetodoDepreciacion("RELACIONADO",row,workbook,metododepreciacion,cellStyleDataAuxHijo);
						i2++;
					}
				}
			}


				//ResponsableActivoFijo
			if(!paraDinamico || (paraDinamico && this.existeRelacionReporteDinamico(ResponsableActivoFijoConstantesFunciones.SCLASSWEBTITULO))) {

				if(detalleactivofijo.getResponsableActivoFijos()!=null && detalleactivofijo.getResponsableActivoFijos().size()>0) {
					row = sheet.createRow(iRow++);

					iCell=1;iRowLast=iRow-1; cell = row.createCell(iCell++);cell.setCellStyle(cellStyleDataTitulo);sheet.addMergedRegion(new CellRangeAddress(iRowLast,iRowLast,1,5));
					cell.setCellValue(ResponsableActivoFijoConstantesFunciones.SCLASSWEBTITULO);

					row = sheet.createRow(iRow++);
					ResponsableActivoFijoConstantesFunciones.generarExcelReporteHeaderResponsableActivoFijo("RELACIONADO",row,workbook);
				}

				if(detalleactivofijo.getResponsableActivoFijos()!=null) {
					i2=0;
					for(ResponsableActivoFijo responsableactivofijo : detalleactivofijo.getResponsableActivoFijos()) {
						row = sheet.createRow(iRow++);

						cellStyleDataAuxHijo=null;
						if(i2%2==0) {
							cellStyleDataAuxHijo=cellStyleData;
						}

						ResponsableActivoFijoConstantesFunciones.generarExcelReporteDataResponsableActivoFijo("RELACIONADO",row,workbook,responsableactivofijo,cellStyleDataAuxHijo);
						i2++;
					}
				}
			}


				//DepreciacionActivoFijo
			if(!paraDinamico || (paraDinamico && this.existeRelacionReporteDinamico(DepreciacionActivoFijoConstantesFunciones.SCLASSWEBTITULO))) {

				if(detalleactivofijo.getDepreciacionActivoFijos()!=null && detalleactivofijo.getDepreciacionActivoFijos().size()>0) {
					row = sheet.createRow(iRow++);

					iCell=1;iRowLast=iRow-1; cell = row.createCell(iCell++);cell.setCellStyle(cellStyleDataTitulo);sheet.addMergedRegion(new CellRangeAddress(iRowLast,iRowLast,1,5));
					cell.setCellValue(DepreciacionActivoFijoConstantesFunciones.SCLASSWEBTITULO);

					row = sheet.createRow(iRow++);
					DepreciacionActivoFijoConstantesFunciones.generarExcelReporteHeaderDepreciacionActivoFijo("RELACIONADO",row,workbook);
				}

				if(detalleactivofijo.getDepreciacionActivoFijos()!=null) {
					i2=0;
					for(DepreciacionActivoFijo depreciacionactivofijo : detalleactivofijo.getDepreciacionActivoFijos()) {
						row = sheet.createRow(iRow++);

						cellStyleDataAuxHijo=null;
						if(i2%2==0) {
							cellStyleDataAuxHijo=cellStyleData;
						}

						DepreciacionActivoFijoConstantesFunciones.generarExcelReporteDataDepreciacionActivoFijo("RELACIONADO",row,workbook,depreciacionactivofijo,cellStyleDataAuxHijo);
						i2++;
					}
				}
			}


				//GastoDepreciacionCentroCosto
			if(!paraDinamico || (paraDinamico && this.existeRelacionReporteDinamico(GastoDepreciacionCentroCostoConstantesFunciones.SCLASSWEBTITULO))) {

				if(detalleactivofijo.getGastoDepreciacionCentroCostos()!=null && detalleactivofijo.getGastoDepreciacionCentroCostos().size()>0) {
					row = sheet.createRow(iRow++);

					iCell=1;iRowLast=iRow-1; cell = row.createCell(iCell++);cell.setCellStyle(cellStyleDataTitulo);sheet.addMergedRegion(new CellRangeAddress(iRowLast,iRowLast,1,5));
					cell.setCellValue(GastoDepreciacionCentroCostoConstantesFunciones.SCLASSWEBTITULO);

					row = sheet.createRow(iRow++);
					GastoDepreciacionCentroCostoConstantesFunciones.generarExcelReporteHeaderGastoDepreciacionCentroCosto("RELACIONADO",row,workbook);
				}

				if(detalleactivofijo.getGastoDepreciacionCentroCostos()!=null) {
					i2=0;
					for(GastoDepreciacionCentroCosto gastodepreciacioncentrocosto : detalleactivofijo.getGastoDepreciacionCentroCostos()) {
						row = sheet.createRow(iRow++);

						cellStyleDataAuxHijo=null;
						if(i2%2==0) {
							cellStyleDataAuxHijo=cellStyleData;
						}

						GastoDepreciacionCentroCostoConstantesFunciones.generarExcelReporteDataGastoDepreciacionCentroCosto("RELACIONADO",row,workbook,gastodepreciacioncentrocosto,cellStyleDataAuxHijo);
						i2++;
					}
				}
			}


				//ParteActivoFijo
			if(!paraDinamico || (paraDinamico && this.existeRelacionReporteDinamico(ParteActivoFijoConstantesFunciones.SCLASSWEBTITULO))) {

				if(detalleactivofijo.getParteActivoFijos()!=null && detalleactivofijo.getParteActivoFijos().size()>0) {
					row = sheet.createRow(iRow++);

					iCell=1;iRowLast=iRow-1; cell = row.createCell(iCell++);cell.setCellStyle(cellStyleDataTitulo);sheet.addMergedRegion(new CellRangeAddress(iRowLast,iRowLast,1,5));
					cell.setCellValue(ParteActivoFijoConstantesFunciones.SCLASSWEBTITULO);

					row = sheet.createRow(iRow++);
					ParteActivoFijoConstantesFunciones.generarExcelReporteHeaderParteActivoFijo("RELACIONADO",row,workbook);
				}

				if(detalleactivofijo.getParteActivoFijos()!=null) {
					i2=0;
					for(ParteActivoFijo parteactivofijo : detalleactivofijo.getParteActivoFijos()) {
						row = sheet.createRow(iRow++);

						cellStyleDataAuxHijo=null;
						if(i2%2==0) {
							cellStyleDataAuxHijo=cellStyleData;
						}

						ParteActivoFijoConstantesFunciones.generarExcelReporteDataParteActivoFijo("RELACIONADO",row,workbook,parteactivofijo,cellStyleDataAuxHijo);
						i2++;
					}
				}
			}
			
			i++;
        }
        
		/*
		row = sheet.createRow(iRow++);
		iRowLast=iRow - 1;
			
		cell = row.createCell(0);
		cell.setCellValue(DetalleActivoFijoConstantesFunciones.getDetalleActivoFijoDescripcion(detalleactivofijo));
		cell.setCellStyle(cellStyleTitulo);
			
		sheet.addMergedRegion(new CellRangeAddress(iRowLast,iRowLast,0,2));			
		*/
		
			
		
        FileOutputStream fileOutputStream = new FileOutputStream(sPath);
		
        workbook.write(fileOutputStream);
		
        fileOutputStream.close();
		
		Constantes2.S_PATH_ULTIMO_ARCHIVO=sPath;
			
		if(this.parametroGeneralUsuario.getcon_mensaje_confirmacion() && !this.detalleactivofijoSessionBean.getEsGuardarRelacionado()) {//Constantes.ISMOSTRARMENSAJESMANTENIMIENTO && 
			JOptionPane.showMessageDialog(this,"EXPORTADO CORRECTAMENTE:"+sPath,"MANTENIMIENTO DE Detalle Activo Fijo",JOptionPane.INFORMATION_MESSAGE);
		}
	}
	
	
	public Boolean existeColumnaReporteDinamico(String sColumna) {
		Boolean existe=false;
		
		Reporte reporte=new Reporte();
		
		
		for(int index:this.jInternalFrameReporteDinamicoDetalleActivoFijo.getjListColumnasSelectReporte().getSelectedIndices()) {
			reporte=(Reporte)this.jInternalFrameReporteDinamicoDetalleActivoFijo.getjListColumnasSelectReporte().getModel().getElementAt(index);
			
			if(sColumna.equals(reporte.getsCodigo())) {
				existe=true;
				break;
			}
		
		}
		
		
		return existe;
	}
	
	public Boolean existeRelacionReporteDinamico(String sColumna) {
		Boolean existe=false;
		
		Reporte reporte=new Reporte();
		
		
		for(int index:this.jInternalFrameReporteDinamicoDetalleActivoFijo.getjListRelacionesSelectReporte().getSelectedIndices()) {
			reporte=(Reporte)this.jInternalFrameReporteDinamicoDetalleActivoFijo.getjListRelacionesSelectReporte().getModel().getElementAt(index);
			
			if(sColumna.equals(reporte.getsCodigo())) {
				existe=true;
				break;
			}
		
		}
		
		
		return existe;
	}
	
	public void startProcessDetalleActivoFijo() throws Exception {		
		this.startProcessDetalleActivoFijo(true);
	}
	
	public void startProcessDetalleActivoFijo(Boolean conSplash) throws Exception {		
		//FuncionesSwing.enableDisablePanels(false,this.jTabbedPaneBusquedasDetalleActivoFijo ,this.jPanelParametrosReportesDetalleActivoFijo, this.jScrollPanelDatosDetalleActivoFijo,this.jPanelPaginacionDetalleActivoFijo, this.jScrollPanelDatosEdicionDetalleActivoFijo, this.jPanelAccionesDetalleActivoFijo,this.jPanelAccionesFormularioDetalleActivoFijo,this.jmenuBarDetalleActivoFijo,this.jmenuBarDetalleDetalleActivoFijo,this.jTtoolBarDetalleActivoFijo,this.jTtoolBarDetalleDetalleActivoFijo);		
		
		final JTabbedPane jTabbedPaneBusquedasDetalleActivoFijo=this.jTabbedPaneBusquedasDetalleActivoFijo; 
		
		final JPanel jPanelParametrosReportesDetalleActivoFijo=this.jPanelParametrosReportesDetalleActivoFijo;
		//final JScrollPane jScrollPanelDatosDetalleActivoFijo=this.jScrollPanelDatosDetalleActivoFijo;
		final JTable jTableDatosDetalleActivoFijo=this.jTableDatosDetalleActivoFijo;		
		final JPanel jPanelPaginacionDetalleActivoFijo=this.jPanelPaginacionDetalleActivoFijo;
		//final JScrollPane jScrollPanelDatosEdicionDetalleActivoFijo=this.jScrollPanelDatosEdicionDetalleActivoFijo;
		final JPanel jPanelAccionesDetalleActivoFijo=this.jPanelAccionesDetalleActivoFijo;
		
		JPanel jPanelCamposAuxiliarDetalleActivoFijo=new JPanelMe();
		JPanel jPanelAccionesFormularioAuxiliarDetalleActivoFijo=new JPanelMe();
		
		if(this.jInternalFrameDetalleFormDetalleActivoFijo!=null) {
			jPanelCamposAuxiliarDetalleActivoFijo=this.jInternalFrameDetalleFormDetalleActivoFijo.jPanelCamposDetalleActivoFijo;
			jPanelAccionesFormularioAuxiliarDetalleActivoFijo=this.jInternalFrameDetalleFormDetalleActivoFijo.jPanelAccionesFormularioDetalleActivoFijo;
		}
		
		final JPanel jPanelCamposDetalleActivoFijo=jPanelCamposAuxiliarDetalleActivoFijo;
		final JPanel jPanelAccionesFormularioDetalleActivoFijo=jPanelAccionesFormularioAuxiliarDetalleActivoFijo;
		
		
		final JMenuBar jmenuBarDetalleActivoFijo=this.jmenuBarDetalleActivoFijo;
		final JToolBar jTtoolBarDetalleActivoFijo=this.jTtoolBarDetalleActivoFijo;		
		
		
		JMenuBar jmenuBarDetalleAuxiliarDetalleActivoFijo=new JMenuBar();
		JToolBar jTtoolBarDetalleAuxiliarDetalleActivoFijo=new JToolBar();		
		
		if(this.jInternalFrameDetalleFormDetalleActivoFijo!=null) {
			jmenuBarDetalleAuxiliarDetalleActivoFijo=this.jInternalFrameDetalleFormDetalleActivoFijo.jmenuBarDetalleDetalleActivoFijo;
			jTtoolBarDetalleAuxiliarDetalleActivoFijo=this.jInternalFrameDetalleFormDetalleActivoFijo.jTtoolBarDetalleDetalleActivoFijo;
		}
		
		final JMenuBar jmenuBarDetalleDetalleActivoFijo=jmenuBarDetalleAuxiliarDetalleActivoFijo;
		final JToolBar jTtoolBarDetalleDetalleActivoFijo=jTtoolBarDetalleAuxiliarDetalleActivoFijo;		
		
		
		
		
		
		if(Constantes2.CON_PROCESO_HILO) {
			Thread threadRunnableProcess;
			ProcessRunnable processRunnable;
			
			processRunnable=new ProcessRunnable();
			
			processRunnable.setsTipo("START");
			processRunnable.setDesktop(jDesktopPane);
			processRunnable.setModuloActual(moduloActual);
			processRunnable.setModuloUsuarioSeleccionado(moduloActual);
			processRunnable.setOpcionActual(opcionActual);
			processRunnable.setParametroGeneralSg(parametroGeneralSg);
			processRunnable.setParametroGeneralUsuario(parametroGeneralUsuario);
			processRunnable.setResumenUsuarioActual(resumenUsuarioActual);
			processRunnable.setUsuarioActual(usuarioActual);
			
			processRunnable.jTabbedPaneBusquedas=jTabbedPaneBusquedasDetalleActivoFijo;
			processRunnable.jPanelParametrosReportes=jPanelParametrosReportesDetalleActivoFijo;
			processRunnable.jTableDatos=jTableDatosDetalleActivoFijo;
			processRunnable.jPanelCampos=jPanelCamposDetalleActivoFijo;
			processRunnable.jPanelPaginacion=jPanelPaginacionDetalleActivoFijo;
			processRunnable.jPanelAcciones=jPanelAccionesDetalleActivoFijo;
			processRunnable.jPanelAccionesFormulario=jPanelAccionesFormularioDetalleActivoFijo;
			
			
			processRunnable.jmenuBar=jmenuBarDetalleActivoFijo;
			processRunnable.jmenuBarDetalle=jmenuBarDetalleDetalleActivoFijo;
			processRunnable.jTtoolBar=jTtoolBarDetalleActivoFijo;
			processRunnable.jTtoolBarDetalle=jTtoolBarDetalleDetalleActivoFijo;
			processRunnable.jInternalFrameBase=this;
			
			//processRunnable.CargarObjetosRendimientoCriticoModuloInventario();
			
			
			threadRunnableProcess=new Thread(processRunnable);//.start();
					
			threadRunnableProcess.start();
			
		} else {
			FuncionesSwing.enableDisablePanels(false,jTabbedPaneBusquedasDetalleActivoFijo ,jPanelParametrosReportesDetalleActivoFijo,jTableDatosDetalleActivoFijo, /*jScrollPanelDatosDetalleActivoFijo,*/jPanelCamposDetalleActivoFijo,jPanelPaginacionDetalleActivoFijo, /*jScrollPanelDatosEdicionDetalleActivoFijo,*/ jPanelAccionesDetalleActivoFijo,jPanelAccionesFormularioDetalleActivoFijo,jmenuBarDetalleActivoFijo,jmenuBarDetalleDetalleActivoFijo,jTtoolBarDetalleActivoFijo,jTtoolBarDetalleDetalleActivoFijo);
		
			startProcess();//this.
		}
						
		/*
		if(conSplash) {
			SwingUtilities.invokeLater(new Runnable() {
			      public void run() {
			    	  try {
							FuncionesSwing.enableDisablePanels(false,jTabbedPaneBusquedasDetalleActivoFijo ,jPanelParametrosReportesDetalleActivoFijo, jScrollPanelDatosDetalleActivoFijo,jPanelPaginacionDetalleActivoFijo, jScrollPanelDatosEdicionDetalleActivoFijo, jPanelAccionesDetalleActivoFijo,jPanelAccionesFormularioDetalleActivoFijo,jmenuBarDetalleActivoFijo,jmenuBarDetalleDetalleActivoFijo,jTtoolBarDetalleActivoFijo,jTtoolBarDetalleDetalleActivoFijo);
						
							startProcess();//this.
							
						} catch (Exception e) {
							// TODO Auto-generated catch block
							e.printStackTrace();
						}
			      }
			});
		}
		*/
	}
	
	public void finishProcessDetalleActivoFijo() {// throws Exception 
		this.finishProcessDetalleActivoFijo(true);
	}
	
	public void finishProcessDetalleActivoFijo(Boolean conSplash) {// throws Exception 
		//FuncionesSwing.enableDisablePanels(true,this.jTabbedPaneBusquedasDetalleActivoFijo ,this.jPanelParametrosReportesDetalleActivoFijo, this.jScrollPanelDatosDetalleActivoFijo,this.jPanelPaginacionDetalleActivoFijo, this.jScrollPanelDatosEdicionDetalleActivoFijo, this.jPanelAccionesDetalleActivoFijo,this.jPanelAccionesFormularioDetalleActivoFijo,this.jmenuBarDetalleActivoFijo,this.jmenuBarDetalleDetalleActivoFijo,this.jTtoolBarDetalleActivoFijo,this.jTtoolBarDetalleDetalleActivoFijo);		
		
		final JTabbedPane jTabbedPaneBusquedasDetalleActivoFijo=this.jTabbedPaneBusquedasDetalleActivoFijo; 
		
		final JPanel jPanelParametrosReportesDetalleActivoFijo=this.jPanelParametrosReportesDetalleActivoFijo;
		//final JScrollPane jScrollPanelDatosDetalleActivoFijo=this.jScrollPanelDatosDetalleActivoFijo;
		final JTable jTableDatosDetalleActivoFijo=this.jTableDatosDetalleActivoFijo;		
		final JPanel jPanelPaginacionDetalleActivoFijo=this.jPanelPaginacionDetalleActivoFijo;
		//final JScrollPane jScrollPanelDatosEdicionDetalleActivoFijo=this.jScrollPanelDatosEdicionDetalleActivoFijo;
		final JPanel jPanelAccionesDetalleActivoFijo=this.jPanelAccionesDetalleActivoFijo;
		
		JPanel jPanelCamposAuxiliarDetalleActivoFijo=new JPanel();
		JPanel jPanelAccionesFormularioAuxiliarDetalleActivoFijo=new JPanel();
		
		if(this.jInternalFrameDetalleFormDetalleActivoFijo!=null) {
			jPanelCamposAuxiliarDetalleActivoFijo=this.jInternalFrameDetalleFormDetalleActivoFijo.jPanelCamposDetalleActivoFijo;
			jPanelAccionesFormularioAuxiliarDetalleActivoFijo=this.jInternalFrameDetalleFormDetalleActivoFijo.jPanelAccionesFormularioDetalleActivoFijo;
		}
		
		final JPanel jPanelCamposDetalleActivoFijo=jPanelCamposAuxiliarDetalleActivoFijo;
		final JPanel jPanelAccionesFormularioDetalleActivoFijo=jPanelAccionesFormularioAuxiliarDetalleActivoFijo;
		
		
		final JMenuBar jmenuBarDetalleActivoFijo=this.jmenuBarDetalleActivoFijo;		
		final JToolBar jTtoolBarDetalleActivoFijo=this.jTtoolBarDetalleActivoFijo;
				
		JMenuBar jmenuBarDetalleAuxiliarDetalleActivoFijo=new JMenuBar();
		JToolBar jTtoolBarDetalleAuxiliarDetalleActivoFijo=new JToolBar();
		
		if(this.jInternalFrameDetalleFormDetalleActivoFijo!=null) {
			jmenuBarDetalleAuxiliarDetalleActivoFijo=this.jInternalFrameDetalleFormDetalleActivoFijo.jmenuBarDetalleDetalleActivoFijo;
			jTtoolBarDetalleAuxiliarDetalleActivoFijo=this.jInternalFrameDetalleFormDetalleActivoFijo.jTtoolBarDetalleDetalleActivoFijo;		
		}
		
		final JMenuBar jmenuBarDetalleDetalleActivoFijo=jmenuBarDetalleAuxiliarDetalleActivoFijo;
		final JToolBar jTtoolBarDetalleDetalleActivoFijo=jTtoolBarDetalleAuxiliarDetalleActivoFijo;
		
		
		
		if(Constantes2.CON_PROCESO_HILO) {
			Thread threadRunnableProcess;
			ProcessRunnable processRunnable;
			
			processRunnable=new ProcessRunnable();
			
			processRunnable.setsTipo("END");
			processRunnable.setDesktop(jDesktopPane);
			processRunnable.setModuloActual(moduloActual);
			processRunnable.setModuloUsuarioSeleccionado(moduloActual);
			processRunnable.setOpcionActual(opcionActual);
			processRunnable.setParametroGeneralSg(parametroGeneralSg);
			processRunnable.setParametroGeneralUsuario(parametroGeneralUsuario);
			processRunnable.setResumenUsuarioActual(resumenUsuarioActual);
			processRunnable.setUsuarioActual(usuarioActual);
			
			processRunnable.jTabbedPaneBusquedas=jTabbedPaneBusquedasDetalleActivoFijo;
			processRunnable.jPanelParametrosReportes=jPanelParametrosReportesDetalleActivoFijo;
			processRunnable.jTableDatos=jTableDatosDetalleActivoFijo;
			processRunnable.jPanelCampos=jPanelCamposDetalleActivoFijo;
			processRunnable.jPanelPaginacion=jPanelPaginacionDetalleActivoFijo;
			processRunnable.jPanelAcciones=jPanelAccionesDetalleActivoFijo;
			processRunnable.jPanelAccionesFormulario=jPanelAccionesFormularioDetalleActivoFijo;
			
			
			processRunnable.jmenuBar=jmenuBarDetalleActivoFijo;
			processRunnable.jmenuBarDetalle=jmenuBarDetalleDetalleActivoFijo;
			processRunnable.jTtoolBar=jTtoolBarDetalleActivoFijo;
			processRunnable.jTtoolBarDetalle=jTtoolBarDetalleDetalleActivoFijo;
			processRunnable.jInternalFrameBase=this;
			
			//processRunnable.CargarObjetosRendimientoCriticoModuloInventario();
			
			
			threadRunnableProcess=new Thread(processRunnable);//.start();
					
			threadRunnableProcess.start();
			
		} else {
			if(conSplash) {
				SwingUtilities.invokeLater(new RunnableProceso(true,this,jTabbedPaneBusquedasDetalleActivoFijo ,jPanelParametrosReportesDetalleActivoFijo, jTableDatosDetalleActivoFijo,/*jScrollPanelDatosDetalleActivoFijo,*/jPanelCamposDetalleActivoFijo,jPanelPaginacionDetalleActivoFijo, /*jScrollPanelDatosEdicionDetalleActivoFijo,*/ jPanelAccionesDetalleActivoFijo,jPanelAccionesFormularioDetalleActivoFijo,jmenuBarDetalleActivoFijo,jmenuBarDetalleDetalleActivoFijo,jTtoolBarDetalleActivoFijo,jTtoolBarDetalleDetalleActivoFijo));
			}
		}						
	}
	
	/*
	public void habilitarDeshabilitarControlesDetalleActivoFijo(Boolean esHabilitar,Boolean conDetalle) {
		this.habilitarDeshabilitarToolBarDetalleActivoFijo(esHabilitar,conDetalle);
		this.habilitarDeshabilitarMenuDetalleActivoFijo(esHabilitar,conDetalle);
	}
	
	public void habilitarDeshabilitarToolBarDetalleActivoFijo(Boolean esHabilitar,Boolean conDetalle) {
		FuncionesSwing.enableDisableComponents(this.jTtoolBarDetalleActivoFijo,esHabilitar,1,1);
		
		if(conDetalle) {
			FuncionesSwing.enableDisableComponents(this.jTtoolBarDetalleDetalleActivoFijo,esHabilitar,1,1);
		}
	}
	
	public void habilitarDeshabilitarMenuDetalleActivoFijo(Boolean esHabilitar,Boolean conDetalle) {
		FuncionesSwing.enableDisableComponents(this.jmenuBarDetalleActivoFijo,esHabilitar,1,1);
		
		if(conDetalle) {
			FuncionesSwing.enableDisableComponents(this.jmenuBarDetalleDetalleActivoFijo,esHabilitar,1,1);
		}
	}
	*/
	
	
	
	public void procesarBusqueda(String sAccionBusqueda) throws Exception {		
		String  finalQueryPaginacion=this.detalleactivofijoConstantesFunciones.getsFinalQueryDetalleActivoFijo();
		String  finalQueryPaginacionTodos=this.detalleactivofijoConstantesFunciones.getsFinalQueryDetalleActivoFijo();
		
		Boolean esBusqueda=false;
		
		this.actualizarVariablesTipoReporte(true,false,false,"");
		/*
		this.sTipoReporteExtra="";
		this.esReporteDinamico=false;
		this.sPathReporteDinamico="";
		*/
		
		if(!sAccionBusqueda.equals("Todos"))	{
			esBusqueda=true;
		}
		
		this.arrDatoGeneral= new  ArrayList<DatoGeneral>();
		this.arrDatoGeneralNo= new  ArrayList<String>();
		
		ArrayList<String> arrColumnasGlobalesNo=DetalleActivoFijoConstantesFunciones.getArrayColumnasGlobalesNoDetalleActivoFijo(this.arrDatoGeneral);
		ArrayList<String> arrColumnasGlobales=DetalleActivoFijoConstantesFunciones.getArrayColumnasGlobalesDetalleActivoFijo(this.arrDatoGeneral,arrColumnasGlobalesNo);
		
			
		String  finalQueryGlobal="";
		
		finalQueryGlobal=Funciones.GetWhereGlobalConstants(this.parametroGeneralUsuario,this.moduloActual,!esBusqueda,esBusqueda,arrColumnasGlobales,DetalleActivoFijoConstantesFunciones.TABLENAME);
		
		String sOrderBy="";
		
		
		sOrderBy=Funciones2.getFinalQueryOrderBy(this.arrOrderBy);
		
		
		if(!sOrderBy.equals("")) {			
			finalQueryPaginacion=sOrderBy;
			finalQueryPaginacionTodos=sOrderBy;
		}
		
		
		//INICIALIZA ELIMINADOS
		this.detalleactivofijosEliminados= new ArrayList<DetalleActivoFijo>();
		
		if(!this.isEntroOnLoad) {
			this.onLoad();
		}/* else {
			this.isEntroOnLoad=false;
		}*/
		
		
		
				
		try	{		
			
			//this.startProcessDetalleActivoFijo();
		
				///*DetalleActivoFijoSessionBean*/this.detalleactivofijoSessionBean=new DetalleActivoFijoSessionBean();
			
			if(this.detalleactivofijoSessionBean==null) {
				this.detalleactivofijoSessionBean=new DetalleActivoFijoSessionBean();
			}
			
			//ACTUALIZA EL TAMANIO DE PAGINACION DESDE EL COMBO
			if(this.sTipoPaginacion!=null && !this.sTipoPaginacion.equals("")) {
				if(!this.sTipoPaginacion.equals("TODOS")) {
					this.iNumeroPaginacion=Integer.parseInt(this.sTipoPaginacion);
				} else {
					this.iNumeroPaginacion=-1;
					this.iNumeroPaginacionPagina=-1;
				}
			} else {
				if(this.iNumeroPaginacion==null || (this.iNumeroPaginacion!=null && this.iNumeroPaginacion<=0)) {
					this.iNumeroPaginacion=DetalleActivoFijoConstantesFunciones.INUMEROPAGINACION;
				}
			}
			
			this.pagination=new Pagination();
			this.pagination.setiFirstResult(this.iNumeroPaginacionPagina);
			this.pagination.setiMaxResults(this.iNumeroPaginacion);
			
			this.cargarDatosCliente();
			
			ArrayList<Classe> classes=new ArrayList<Classe>();
			
			classes=DetalleActivoFijoConstantesFunciones.getClassesForeignKeysOfDetalleActivoFijo(new ArrayList<Classe>(),DeepLoadType.NONE);
			
		
			this.datosDeep=new DatosDeep();
			this.datosDeep.setIsDeep(false);
			this.datosDeep.setDeepLoadType(DeepLoadType.INCLUDE);
			this.datosDeep.setClases(classes);
			
			this.datosCliente.setDatosDeepParametros(false, DeepLoadType.INCLUDE, classes, "");
			this.datosCliente.setIsConDeep(true);
			
			if(false) {//this.conExportar
				this.datosCliente.setIsConExportar(true);
				this.datosCliente.setDatosExportarParametros(Funciones2.getTipoExportar(this.parametroGeneralUsuario),this.parametroGeneralUsuario.getcon_exportar_cabecera(),Funciones2.getTipoDelimiter(this.parametroGeneralUsuario),this.parametroGeneralUsuario.getpath_exportar()+"/detalleactivofijo."+Funciones2.getTipoExtensionArchivoExportar(this.parametroGeneralUsuario));
			} else {
				this.datosCliente.setIsConExportar(false);
			}
			
			detalleactivofijosAux= new ArrayList<DetalleActivoFijo>();
			
				
			detalleactivofijoLogic.setDatosCliente(this.datosCliente);
			detalleactivofijoLogic.setDatosDeep(this.datosDeep);
			detalleactivofijoLogic.setIsConDeep(true);
			
			
			detalleactivofijoLogic.getDetalleActivoFijoDataAccess().setIsForForeingsKeysDataRelationships(true);
			
			if(sAccionBusqueda.equals("Todos") || sAccionBusqueda.equals("Query"))	{	
				if(sAccionBusqueda.equals("Todos")) {
					//FALTA:PARA BUSQUEDAS POR CAMPO EN FORMULARIO
					//this.sFinalQueryGeneral="";
				}
				
				//ARCHITECTURE
				if(Constantes.ISUSAEJBLOGICLAYER) {	
					finalQueryGlobal=Funciones.GetFinalQueryAppendBusqueda(finalQueryGlobal, this.sFinalQueryGeneral,finalQueryPaginacionTodos );
					
					detalleactivofijoLogic.getTodosDetalleActivoFijos(finalQueryGlobal,pagination);
					
					//detalleactivofijoLogic.getTodosDetalleActivoFijosWithConnection(finalQueryGlobal,pagination);										
				
				} else if(Constantes.ISUSAEJBREMOTE) {
				} else if(Constantes.ISUSAEJBHOME) {
				}
				//ARCHITECTURE
				
				if(detalleactivofijoLogic.getDetalleActivoFijos()==null|| detalleactivofijoLogic.getDetalleActivoFijos().size()==0)	{
					
				
				}
				
				if(false && sTipoArchivoReporte!=""&&sTipoArchivoReporte!=null) {//this.isTipoArchivoReporte
					if(false) {//isMostrarTodosResultadosReporte
						this.pagination.setiFirstResult(-1);
						this.pagination.setiMaxResults(-1);
						
						//ARCHITECTURE
						if(Constantes.ISUSAEJBLOGICLAYER) {	
							detalleactivofijosAux= new ArrayList<DetalleActivoFijo>();
							detalleactivofijosAux.addAll(detalleactivofijoLogic.getDetalleActivoFijos());						
						} else if(Constantes.ISUSAEJBREMOTE || Constantes.ISUSAEJBHOME) {
							detalleactivofijosAux= new ArrayList<DetalleActivoFijo>();
							detalleactivofijosAux.addAll(detalleactivofijos);
						}
						//ARCHITECTURE
						
						//ARCHITECTURE
						if(Constantes.ISUSAEJBLOGICLAYER) {	
							detalleactivofijoLogic.getTodosDetalleActivoFijos(finalQueryGlobal+"",this.pagination);												
							
							//detalleactivofijoLogic.getTodosDetalleActivoFijosWithConnection(finalQueryGlobal+"",this.pagination);												
						} else if(Constantes.ISUSAEJBREMOTE) {
						} else if(Constantes.ISUSAEJBHOME) {
						}
						//ARCHITECTURE
						
					}
					
					this.generarReporteDetalleActivoFijos("Todos",detalleactivofijoLogic.getDetalleActivoFijos() );
					
					if(false) {//isMostrarTodosResultadosReporte						
						//ARCHITECTURE
						if(Constantes.ISUSAEJBLOGICLAYER) {	
							detalleactivofijoLogic.setDetalleActivoFijos(new ArrayList<DetalleActivoFijo>());					
							detalleactivofijoLogic.getDetalleActivoFijos().addAll(detalleactivofijosAux);
						} else if(Constantes.ISUSAEJBREMOTE || Constantes.ISUSAEJBHOME) {
							detalleactivofijos=new ArrayList<DetalleActivoFijo>();
							detalleactivofijos.addAll(detalleactivofijosAux);
						}
						//ARCHITECTURE
						
						this.pagination.setiFirstResult(this.iNumeroPaginacionPagina);
						this.pagination.setiMaxResults(this.iNumeroPaginacion);														
					}
				}
			}
			else if(sAccionBusqueda.equals("PorId")) {
				Long idDetalleActivoFijo=0L;
				
				if(this.idActual!=null && this.idActual!=0L) {
					idDetalleActivoFijo=this.idActual;
				
				} else if(this.idDetalleActivoFijoActual!=null && this.idDetalleActivoFijoActual!=0L) {
					idDetalleActivoFijo=idDetalleActivoFijoActual;
				}
				
					
				this.sDetalleReporte=DetalleActivoFijoConstantesFunciones.getDetalleIndicePorId(idDetalleActivoFijo);
				
				this.detalleactivofijos=new ArrayList<DetalleActivoFijo>();
				
				//ARCHITECTURE
				if(Constantes.ISUSAEJBLOGICLAYER) {					
					detalleactivofijoLogic.getEntity(idDetalleActivoFijo);
					
					//detalleactivofijoLogic.getEntityWithConnection(idDetalleActivoFijo);
				} else if(Constantes.ISUSAEJBREMOTE) {
				} else if(Constantes.ISUSAEJBHOME) {
				}
				//ARCHITECTURE
								
				if(Constantes.ISUSAEJBLOGICLAYER) {
					detalleactivofijoLogic.setDetalleActivoFijos(new ArrayList<DetalleActivoFijo>());
					detalleactivofijoLogic.getDetalleActivoFijos().add(detalleactivofijoLogic.getDetalleActivoFijo());
				
				} else if(Constantes.ISUSAEJBREMOTE || Constantes.ISUSAEJBHOME) {
					this.detalleactivofijos=new ArrayList<DetalleActivoFijo>();
					this.detalleactivofijos.add(detalleactivofijo);
				}
				
				if(detalleactivofijoLogic.getDetalleActivoFijo()==null)	{
					
				
				}			
			}
			
		
			else if(sAccionBusqueda.equals("FK_IdCliente")) {
				this.sDetalleReporte=DetalleActivoFijoConstantesFunciones.getDetalleIndiceFK_IdCliente(id_clienteFK_IdCliente);

				
				//ARCHITECTURE
				if(Constantes.ISUSAEJBLOGICLAYER) {

					finalQueryGlobal=Funciones.GetFinalQueryAppendBusqueda(finalQueryGlobal, this.sFinalQueryGeneral,finalQueryPaginacion);

					detalleactivofijoLogic.getDetalleActivoFijosFK_IdCliente(finalQueryGlobal,pagination,id_clienteFK_IdCliente);
				} else if(Constantes.ISUSAEJBREMOTE) {
				this.sDetalleReporte=DetalleActivoFijoConstantesFunciones.getDetalleIndiceFK_IdCliente(id_clienteFK_IdCliente);

				
				} else if(Constantes.ISUSAEJBHOME) {
				this.sDetalleReporte=DetalleActivoFijoConstantesFunciones.getDetalleIndiceFK_IdCliente(id_clienteFK_IdCliente);

				
				}
				//ARCHITECTURE

				Boolean isNoExiste=false;
				//ARCHITECTURE
				if(Constantes.ISUSAEJBLOGICLAYER) {
					isNoExiste=detalleactivofijoLogic.getDetalleActivoFijos()==null||detalleactivofijoLogic.getDetalleActivoFijos().size()==0;
				} else if(Constantes.ISUSAEJBREMOTE||Constantes.ISUSAEJBHOME) {
					isNoExiste=detalleactivofijos==null|| detalleactivofijos.size()==0;
				}
				//ARCHITECTURE

		if(false && sTipoArchivoReporte!=""&&sTipoArchivoReporte!=null) {//this.isTipoArchivoReporte
			if(false) {//isMostrarTodosResultadosReporte
				this.pagination.setiFirstResult(-1);
				this.pagination.setiMaxResults(-1);

				//ARCHITECTURE
				if(Constantes.ISUSAEJBLOGICLAYER) {
						detalleactivofijosAux=new ArrayList<DetalleActivoFijo>();
						detalleactivofijosAux.addAll(detalleactivofijoLogic.getDetalleActivoFijos());
				} else if(Constantes.ISUSAEJBREMOTE || Constantes.ISUSAEJBHOME) {
							detalleactivofijosAux=new ArrayList<DetalleActivoFijo>();
							detalleactivofijosAux.addAll(detalleactivofijos);
				}
				//ARCHITECTURE
								
				
				//ARCHITECTURE
				if(Constantes.ISUSAEJBLOGICLAYER) {
							finalQueryGlobal=Funciones.GetFinalQueryAppendBusqueda(finalQueryGlobal, this.sFinalQueryGeneral,"");
							detalleactivofijoLogic.getDetalleActivoFijosFK_IdCliente(finalQueryGlobal,pagination,id_clienteFK_IdCliente);
				} else if(Constantes.ISUSAEJBREMOTE) {
				this.sDetalleReporte=DetalleActivoFijoConstantesFunciones.getDetalleIndiceFK_IdCliente(id_clienteFK_IdCliente);
						
				} else if(Constantes.ISUSAEJBHOME) {
				this.sDetalleReporte=DetalleActivoFijoConstantesFunciones.getDetalleIndiceFK_IdCliente(id_clienteFK_IdCliente);
						
				}
				//ARCHITECTURE
					}
				//ARCHITECTURE
				if(Constantes.ISUSAEJBLOGICLAYER) {
					generarReporteDetalleActivoFijos("FK_IdCliente",detalleactivofijoLogic.getDetalleActivoFijos());
				} else if(Constantes.ISUSAEJBREMOTE || Constantes.ISUSAEJBHOME) {
					generarReporteDetalleActivoFijos("FK_IdCliente",detalleactivofijos);
				}
				//ARCHITECTURE

					if(false) {//isMostrarTodosResultadosReporte
						this.pagination.setiFirstResult(this.iNumeroPaginacionPagina);
						this.pagination.setiMaxResults(this.iNumeroPaginacion);

						//ARCHITECTURE
						if(Constantes.ISUSAEJBLOGICLAYER) {
						detalleactivofijoLogic.setDetalleActivoFijos(new ArrayList<DetalleActivoFijo>());
						detalleactivofijoLogic.getDetalleActivoFijos().addAll(detalleactivofijosAux);
						} else if(Constantes.ISUSAEJBREMOTE || Constantes.ISUSAEJBHOME) {
							detalleactivofijos=new ArrayList<DetalleActivoFijo>();
							detalleactivofijos.addAll(detalleactivofijosAux);
						}
						//ARCHITECTURE
					}
				}

			}
			else if(sAccionBusqueda.equals("FK_IdDetalleGrupoActivoFijo")) {
				this.sDetalleReporte=DetalleActivoFijoConstantesFunciones.getDetalleIndiceFK_IdDetalleGrupoActivoFijo(id_detalle_grupo_activo_fijoFK_IdDetalleGrupoActivoFijo);

				
				//ARCHITECTURE
				if(Constantes.ISUSAEJBLOGICLAYER) {

					finalQueryGlobal=Funciones.GetFinalQueryAppendBusqueda(finalQueryGlobal, this.sFinalQueryGeneral,finalQueryPaginacion);

					detalleactivofijoLogic.getDetalleActivoFijosFK_IdDetalleGrupoActivoFijo(finalQueryGlobal,pagination,id_detalle_grupo_activo_fijoFK_IdDetalleGrupoActivoFijo);
				} else if(Constantes.ISUSAEJBREMOTE) {
				this.sDetalleReporte=DetalleActivoFijoConstantesFunciones.getDetalleIndiceFK_IdDetalleGrupoActivoFijo(id_detalle_grupo_activo_fijoFK_IdDetalleGrupoActivoFijo);

				
				} else if(Constantes.ISUSAEJBHOME) {
				this.sDetalleReporte=DetalleActivoFijoConstantesFunciones.getDetalleIndiceFK_IdDetalleGrupoActivoFijo(id_detalle_grupo_activo_fijoFK_IdDetalleGrupoActivoFijo);

				
				}
				//ARCHITECTURE

				Boolean isNoExiste=false;
				//ARCHITECTURE
				if(Constantes.ISUSAEJBLOGICLAYER) {
					isNoExiste=detalleactivofijoLogic.getDetalleActivoFijos()==null||detalleactivofijoLogic.getDetalleActivoFijos().size()==0;
				} else if(Constantes.ISUSAEJBREMOTE||Constantes.ISUSAEJBHOME) {
					isNoExiste=detalleactivofijos==null|| detalleactivofijos.size()==0;
				}
				//ARCHITECTURE

		if(false && sTipoArchivoReporte!=""&&sTipoArchivoReporte!=null) {//this.isTipoArchivoReporte
			if(false) {//isMostrarTodosResultadosReporte
				this.pagination.setiFirstResult(-1);
				this.pagination.setiMaxResults(-1);

				//ARCHITECTURE
				if(Constantes.ISUSAEJBLOGICLAYER) {
						detalleactivofijosAux=new ArrayList<DetalleActivoFijo>();
						detalleactivofijosAux.addAll(detalleactivofijoLogic.getDetalleActivoFijos());
				} else if(Constantes.ISUSAEJBREMOTE || Constantes.ISUSAEJBHOME) {
							detalleactivofijosAux=new ArrayList<DetalleActivoFijo>();
							detalleactivofijosAux.addAll(detalleactivofijos);
				}
				//ARCHITECTURE
								
				
				//ARCHITECTURE
				if(Constantes.ISUSAEJBLOGICLAYER) {
							finalQueryGlobal=Funciones.GetFinalQueryAppendBusqueda(finalQueryGlobal, this.sFinalQueryGeneral,"");
							detalleactivofijoLogic.getDetalleActivoFijosFK_IdDetalleGrupoActivoFijo(finalQueryGlobal,pagination,id_detalle_grupo_activo_fijoFK_IdDetalleGrupoActivoFijo);
				} else if(Constantes.ISUSAEJBREMOTE) {
				this.sDetalleReporte=DetalleActivoFijoConstantesFunciones.getDetalleIndiceFK_IdDetalleGrupoActivoFijo(id_detalle_grupo_activo_fijoFK_IdDetalleGrupoActivoFijo);
						
				} else if(Constantes.ISUSAEJBHOME) {
				this.sDetalleReporte=DetalleActivoFijoConstantesFunciones.getDetalleIndiceFK_IdDetalleGrupoActivoFijo(id_detalle_grupo_activo_fijoFK_IdDetalleGrupoActivoFijo);
						
				}
				//ARCHITECTURE
					}
				//ARCHITECTURE
				if(Constantes.ISUSAEJBLOGICLAYER) {
					generarReporteDetalleActivoFijos("FK_IdDetalleGrupoActivoFijo",detalleactivofijoLogic.getDetalleActivoFijos());
				} else if(Constantes.ISUSAEJBREMOTE || Constantes.ISUSAEJBHOME) {
					generarReporteDetalleActivoFijos("FK_IdDetalleGrupoActivoFijo",detalleactivofijos);
				}
				//ARCHITECTURE

					if(false) {//isMostrarTodosResultadosReporte
						this.pagination.setiFirstResult(this.iNumeroPaginacionPagina);
						this.pagination.setiMaxResults(this.iNumeroPaginacion);

						//ARCHITECTURE
						if(Constantes.ISUSAEJBLOGICLAYER) {
						detalleactivofijoLogic.setDetalleActivoFijos(new ArrayList<DetalleActivoFijo>());
						detalleactivofijoLogic.getDetalleActivoFijos().addAll(detalleactivofijosAux);
						} else if(Constantes.ISUSAEJBREMOTE || Constantes.ISUSAEJBHOME) {
							detalleactivofijos=new ArrayList<DetalleActivoFijo>();
							detalleactivofijos.addAll(detalleactivofijosAux);
						}
						//ARCHITECTURE
					}
				}

			}
			else if(sAccionBusqueda.equals("FK_IdEmpresa")) {
				this.sDetalleReporte=DetalleActivoFijoConstantesFunciones.getDetalleIndiceFK_IdEmpresa(id_empresaFK_IdEmpresa);

				
				//ARCHITECTURE
				if(Constantes.ISUSAEJBLOGICLAYER) {

					finalQueryGlobal=Funciones.GetFinalQueryAppendBusqueda(finalQueryGlobal, this.sFinalQueryGeneral,finalQueryPaginacion);

					detalleactivofijoLogic.getDetalleActivoFijosFK_IdEmpresa(finalQueryGlobal,pagination,id_empresaFK_IdEmpresa);
				} else if(Constantes.ISUSAEJBREMOTE) {
				this.sDetalleReporte=DetalleActivoFijoConstantesFunciones.getDetalleIndiceFK_IdEmpresa(id_empresaFK_IdEmpresa);

				
				} else if(Constantes.ISUSAEJBHOME) {
				this.sDetalleReporte=DetalleActivoFijoConstantesFunciones.getDetalleIndiceFK_IdEmpresa(id_empresaFK_IdEmpresa);

				
				}
				//ARCHITECTURE

				Boolean isNoExiste=false;
				//ARCHITECTURE
				if(Constantes.ISUSAEJBLOGICLAYER) {
					isNoExiste=detalleactivofijoLogic.getDetalleActivoFijos()==null||detalleactivofijoLogic.getDetalleActivoFijos().size()==0;
				} else if(Constantes.ISUSAEJBREMOTE||Constantes.ISUSAEJBHOME) {
					isNoExiste=detalleactivofijos==null|| detalleactivofijos.size()==0;
				}
				//ARCHITECTURE

		if(false && sTipoArchivoReporte!=""&&sTipoArchivoReporte!=null) {//this.isTipoArchivoReporte
			if(false) {//isMostrarTodosResultadosReporte
				this.pagination.setiFirstResult(-1);
				this.pagination.setiMaxResults(-1);

				//ARCHITECTURE
				if(Constantes.ISUSAEJBLOGICLAYER) {
						detalleactivofijosAux=new ArrayList<DetalleActivoFijo>();
						detalleactivofijosAux.addAll(detalleactivofijoLogic.getDetalleActivoFijos());
				} else if(Constantes.ISUSAEJBREMOTE || Constantes.ISUSAEJBHOME) {
							detalleactivofijosAux=new ArrayList<DetalleActivoFijo>();
							detalleactivofijosAux.addAll(detalleactivofijos);
				}
				//ARCHITECTURE
								
				
				//ARCHITECTURE
				if(Constantes.ISUSAEJBLOGICLAYER) {
							finalQueryGlobal=Funciones.GetFinalQueryAppendBusqueda(finalQueryGlobal, this.sFinalQueryGeneral,"");
							detalleactivofijoLogic.getDetalleActivoFijosFK_IdEmpresa(finalQueryGlobal,pagination,id_empresaFK_IdEmpresa);
				} else if(Constantes.ISUSAEJBREMOTE) {
				this.sDetalleReporte=DetalleActivoFijoConstantesFunciones.getDetalleIndiceFK_IdEmpresa(id_empresaFK_IdEmpresa);
						
				} else if(Constantes.ISUSAEJBHOME) {
				this.sDetalleReporte=DetalleActivoFijoConstantesFunciones.getDetalleIndiceFK_IdEmpresa(id_empresaFK_IdEmpresa);
						
				}
				//ARCHITECTURE
					}
				//ARCHITECTURE
				if(Constantes.ISUSAEJBLOGICLAYER) {
					generarReporteDetalleActivoFijos("FK_IdEmpresa",detalleactivofijoLogic.getDetalleActivoFijos());
				} else if(Constantes.ISUSAEJBREMOTE || Constantes.ISUSAEJBHOME) {
					generarReporteDetalleActivoFijos("FK_IdEmpresa",detalleactivofijos);
				}
				//ARCHITECTURE

					if(false) {//isMostrarTodosResultadosReporte
						this.pagination.setiFirstResult(this.iNumeroPaginacionPagina);
						this.pagination.setiMaxResults(this.iNumeroPaginacion);

						//ARCHITECTURE
						if(Constantes.ISUSAEJBLOGICLAYER) {
						detalleactivofijoLogic.setDetalleActivoFijos(new ArrayList<DetalleActivoFijo>());
						detalleactivofijoLogic.getDetalleActivoFijos().addAll(detalleactivofijosAux);
						} else if(Constantes.ISUSAEJBREMOTE || Constantes.ISUSAEJBHOME) {
							detalleactivofijos=new ArrayList<DetalleActivoFijo>();
							detalleactivofijos.addAll(detalleactivofijosAux);
						}
						//ARCHITECTURE
					}
				}

			}
			else if(sAccionBusqueda.equals("FK_IdEstadoActivoFijo")) {
				this.sDetalleReporte=DetalleActivoFijoConstantesFunciones.getDetalleIndiceFK_IdEstadoActivoFijo(id_estado_activo_fijoFK_IdEstadoActivoFijo);

				
				//ARCHITECTURE
				if(Constantes.ISUSAEJBLOGICLAYER) {

					finalQueryGlobal=Funciones.GetFinalQueryAppendBusqueda(finalQueryGlobal, this.sFinalQueryGeneral,finalQueryPaginacion);

					detalleactivofijoLogic.getDetalleActivoFijosFK_IdEstadoActivoFijo(finalQueryGlobal,pagination,id_estado_activo_fijoFK_IdEstadoActivoFijo);
				} else if(Constantes.ISUSAEJBREMOTE) {
				this.sDetalleReporte=DetalleActivoFijoConstantesFunciones.getDetalleIndiceFK_IdEstadoActivoFijo(id_estado_activo_fijoFK_IdEstadoActivoFijo);

				
				} else if(Constantes.ISUSAEJBHOME) {
				this.sDetalleReporte=DetalleActivoFijoConstantesFunciones.getDetalleIndiceFK_IdEstadoActivoFijo(id_estado_activo_fijoFK_IdEstadoActivoFijo);

				
				}
				//ARCHITECTURE

				Boolean isNoExiste=false;
				//ARCHITECTURE
				if(Constantes.ISUSAEJBLOGICLAYER) {
					isNoExiste=detalleactivofijoLogic.getDetalleActivoFijos()==null||detalleactivofijoLogic.getDetalleActivoFijos().size()==0;
				} else if(Constantes.ISUSAEJBREMOTE||Constantes.ISUSAEJBHOME) {
					isNoExiste=detalleactivofijos==null|| detalleactivofijos.size()==0;
				}
				//ARCHITECTURE

		if(false && sTipoArchivoReporte!=""&&sTipoArchivoReporte!=null) {//this.isTipoArchivoReporte
			if(false) {//isMostrarTodosResultadosReporte
				this.pagination.setiFirstResult(-1);
				this.pagination.setiMaxResults(-1);

				//ARCHITECTURE
				if(Constantes.ISUSAEJBLOGICLAYER) {
						detalleactivofijosAux=new ArrayList<DetalleActivoFijo>();
						detalleactivofijosAux.addAll(detalleactivofijoLogic.getDetalleActivoFijos());
				} else if(Constantes.ISUSAEJBREMOTE || Constantes.ISUSAEJBHOME) {
							detalleactivofijosAux=new ArrayList<DetalleActivoFijo>();
							detalleactivofijosAux.addAll(detalleactivofijos);
				}
				//ARCHITECTURE
								
				
				//ARCHITECTURE
				if(Constantes.ISUSAEJBLOGICLAYER) {
							finalQueryGlobal=Funciones.GetFinalQueryAppendBusqueda(finalQueryGlobal, this.sFinalQueryGeneral,"");
							detalleactivofijoLogic.getDetalleActivoFijosFK_IdEstadoActivoFijo(finalQueryGlobal,pagination,id_estado_activo_fijoFK_IdEstadoActivoFijo);
				} else if(Constantes.ISUSAEJBREMOTE) {
				this.sDetalleReporte=DetalleActivoFijoConstantesFunciones.getDetalleIndiceFK_IdEstadoActivoFijo(id_estado_activo_fijoFK_IdEstadoActivoFijo);
						
				} else if(Constantes.ISUSAEJBHOME) {
				this.sDetalleReporte=DetalleActivoFijoConstantesFunciones.getDetalleIndiceFK_IdEstadoActivoFijo(id_estado_activo_fijoFK_IdEstadoActivoFijo);
						
				}
				//ARCHITECTURE
					}
				//ARCHITECTURE
				if(Constantes.ISUSAEJBLOGICLAYER) {
					generarReporteDetalleActivoFijos("FK_IdEstadoActivoFijo",detalleactivofijoLogic.getDetalleActivoFijos());
				} else if(Constantes.ISUSAEJBREMOTE || Constantes.ISUSAEJBHOME) {
					generarReporteDetalleActivoFijos("FK_IdEstadoActivoFijo",detalleactivofijos);
				}
				//ARCHITECTURE

					if(false) {//isMostrarTodosResultadosReporte
						this.pagination.setiFirstResult(this.iNumeroPaginacionPagina);
						this.pagination.setiMaxResults(this.iNumeroPaginacion);

						//ARCHITECTURE
						if(Constantes.ISUSAEJBLOGICLAYER) {
						detalleactivofijoLogic.setDetalleActivoFijos(new ArrayList<DetalleActivoFijo>());
						detalleactivofijoLogic.getDetalleActivoFijos().addAll(detalleactivofijosAux);
						} else if(Constantes.ISUSAEJBREMOTE || Constantes.ISUSAEJBHOME) {
							detalleactivofijos=new ArrayList<DetalleActivoFijo>();
							detalleactivofijos.addAll(detalleactivofijosAux);
						}
						//ARCHITECTURE
					}
				}

			}
			else if(sAccionBusqueda.equals("FK_IdPartidaPresu")) {
				this.sDetalleReporte=DetalleActivoFijoConstantesFunciones.getDetalleIndiceFK_IdPartidaPresu(id_partida_presuFK_IdPartidaPresu);

				
				//ARCHITECTURE
				if(Constantes.ISUSAEJBLOGICLAYER) {

					finalQueryGlobal=Funciones.GetFinalQueryAppendBusqueda(finalQueryGlobal, this.sFinalQueryGeneral,finalQueryPaginacion);

					detalleactivofijoLogic.getDetalleActivoFijosFK_IdPartidaPresu(finalQueryGlobal,pagination,id_partida_presuFK_IdPartidaPresu);
				} else if(Constantes.ISUSAEJBREMOTE) {
				this.sDetalleReporte=DetalleActivoFijoConstantesFunciones.getDetalleIndiceFK_IdPartidaPresu(id_partida_presuFK_IdPartidaPresu);

				
				} else if(Constantes.ISUSAEJBHOME) {
				this.sDetalleReporte=DetalleActivoFijoConstantesFunciones.getDetalleIndiceFK_IdPartidaPresu(id_partida_presuFK_IdPartidaPresu);

				
				}
				//ARCHITECTURE

				Boolean isNoExiste=false;
				//ARCHITECTURE
				if(Constantes.ISUSAEJBLOGICLAYER) {
					isNoExiste=detalleactivofijoLogic.getDetalleActivoFijos()==null||detalleactivofijoLogic.getDetalleActivoFijos().size()==0;
				} else if(Constantes.ISUSAEJBREMOTE||Constantes.ISUSAEJBHOME) {
					isNoExiste=detalleactivofijos==null|| detalleactivofijos.size()==0;
				}
				//ARCHITECTURE

		if(false && sTipoArchivoReporte!=""&&sTipoArchivoReporte!=null) {//this.isTipoArchivoReporte
			if(false) {//isMostrarTodosResultadosReporte
				this.pagination.setiFirstResult(-1);
				this.pagination.setiMaxResults(-1);

				//ARCHITECTURE
				if(Constantes.ISUSAEJBLOGICLAYER) {
						detalleactivofijosAux=new ArrayList<DetalleActivoFijo>();
						detalleactivofijosAux.addAll(detalleactivofijoLogic.getDetalleActivoFijos());
				} else if(Constantes.ISUSAEJBREMOTE || Constantes.ISUSAEJBHOME) {
							detalleactivofijosAux=new ArrayList<DetalleActivoFijo>();
							detalleactivofijosAux.addAll(detalleactivofijos);
				}
				//ARCHITECTURE
								
				
				//ARCHITECTURE
				if(Constantes.ISUSAEJBLOGICLAYER) {
							finalQueryGlobal=Funciones.GetFinalQueryAppendBusqueda(finalQueryGlobal, this.sFinalQueryGeneral,"");
							detalleactivofijoLogic.getDetalleActivoFijosFK_IdPartidaPresu(finalQueryGlobal,pagination,id_partida_presuFK_IdPartidaPresu);
				} else if(Constantes.ISUSAEJBREMOTE) {
				this.sDetalleReporte=DetalleActivoFijoConstantesFunciones.getDetalleIndiceFK_IdPartidaPresu(id_partida_presuFK_IdPartidaPresu);
						
				} else if(Constantes.ISUSAEJBHOME) {
				this.sDetalleReporte=DetalleActivoFijoConstantesFunciones.getDetalleIndiceFK_IdPartidaPresu(id_partida_presuFK_IdPartidaPresu);
						
				}
				//ARCHITECTURE
					}
				//ARCHITECTURE
				if(Constantes.ISUSAEJBLOGICLAYER) {
					generarReporteDetalleActivoFijos("FK_IdPartidaPresu",detalleactivofijoLogic.getDetalleActivoFijos());
				} else if(Constantes.ISUSAEJBREMOTE || Constantes.ISUSAEJBHOME) {
					generarReporteDetalleActivoFijos("FK_IdPartidaPresu",detalleactivofijos);
				}
				//ARCHITECTURE

					if(false) {//isMostrarTodosResultadosReporte
						this.pagination.setiFirstResult(this.iNumeroPaginacionPagina);
						this.pagination.setiMaxResults(this.iNumeroPaginacion);

						//ARCHITECTURE
						if(Constantes.ISUSAEJBLOGICLAYER) {
						detalleactivofijoLogic.setDetalleActivoFijos(new ArrayList<DetalleActivoFijo>());
						detalleactivofijoLogic.getDetalleActivoFijos().addAll(detalleactivofijosAux);
						} else if(Constantes.ISUSAEJBREMOTE || Constantes.ISUSAEJBHOME) {
							detalleactivofijos=new ArrayList<DetalleActivoFijo>();
							detalleactivofijos.addAll(detalleactivofijosAux);
						}
						//ARCHITECTURE
					}
				}

			}
			else if(sAccionBusqueda.equals("FK_IdSubGrupoActivoFijo")) {
				this.sDetalleReporte=DetalleActivoFijoConstantesFunciones.getDetalleIndiceFK_IdSubGrupoActivoFijo(id_sub_grupo_activo_fijoFK_IdSubGrupoActivoFijo);

				
				//ARCHITECTURE
				if(Constantes.ISUSAEJBLOGICLAYER) {

					finalQueryGlobal=Funciones.GetFinalQueryAppendBusqueda(finalQueryGlobal, this.sFinalQueryGeneral,finalQueryPaginacion);

					detalleactivofijoLogic.getDetalleActivoFijosFK_IdSubGrupoActivoFijo(finalQueryGlobal,pagination,id_sub_grupo_activo_fijoFK_IdSubGrupoActivoFijo);
				} else if(Constantes.ISUSAEJBREMOTE) {
				this.sDetalleReporte=DetalleActivoFijoConstantesFunciones.getDetalleIndiceFK_IdSubGrupoActivoFijo(id_sub_grupo_activo_fijoFK_IdSubGrupoActivoFijo);

				
				} else if(Constantes.ISUSAEJBHOME) {
				this.sDetalleReporte=DetalleActivoFijoConstantesFunciones.getDetalleIndiceFK_IdSubGrupoActivoFijo(id_sub_grupo_activo_fijoFK_IdSubGrupoActivoFijo);

				
				}
				//ARCHITECTURE

				Boolean isNoExiste=false;
				//ARCHITECTURE
				if(Constantes.ISUSAEJBLOGICLAYER) {
					isNoExiste=detalleactivofijoLogic.getDetalleActivoFijos()==null||detalleactivofijoLogic.getDetalleActivoFijos().size()==0;
				} else if(Constantes.ISUSAEJBREMOTE||Constantes.ISUSAEJBHOME) {
					isNoExiste=detalleactivofijos==null|| detalleactivofijos.size()==0;
				}
				//ARCHITECTURE

		if(false && sTipoArchivoReporte!=""&&sTipoArchivoReporte!=null) {//this.isTipoArchivoReporte
			if(false) {//isMostrarTodosResultadosReporte
				this.pagination.setiFirstResult(-1);
				this.pagination.setiMaxResults(-1);

				//ARCHITECTURE
				if(Constantes.ISUSAEJBLOGICLAYER) {
						detalleactivofijosAux=new ArrayList<DetalleActivoFijo>();
						detalleactivofijosAux.addAll(detalleactivofijoLogic.getDetalleActivoFijos());
				} else if(Constantes.ISUSAEJBREMOTE || Constantes.ISUSAEJBHOME) {
							detalleactivofijosAux=new ArrayList<DetalleActivoFijo>();
							detalleactivofijosAux.addAll(detalleactivofijos);
				}
				//ARCHITECTURE
								
				
				//ARCHITECTURE
				if(Constantes.ISUSAEJBLOGICLAYER) {
							finalQueryGlobal=Funciones.GetFinalQueryAppendBusqueda(finalQueryGlobal, this.sFinalQueryGeneral,"");
							detalleactivofijoLogic.getDetalleActivoFijosFK_IdSubGrupoActivoFijo(finalQueryGlobal,pagination,id_sub_grupo_activo_fijoFK_IdSubGrupoActivoFijo);
				} else if(Constantes.ISUSAEJBREMOTE) {
				this.sDetalleReporte=DetalleActivoFijoConstantesFunciones.getDetalleIndiceFK_IdSubGrupoActivoFijo(id_sub_grupo_activo_fijoFK_IdSubGrupoActivoFijo);
						
				} else if(Constantes.ISUSAEJBHOME) {
				this.sDetalleReporte=DetalleActivoFijoConstantesFunciones.getDetalleIndiceFK_IdSubGrupoActivoFijo(id_sub_grupo_activo_fijoFK_IdSubGrupoActivoFijo);
						
				}
				//ARCHITECTURE
					}
				//ARCHITECTURE
				if(Constantes.ISUSAEJBLOGICLAYER) {
					generarReporteDetalleActivoFijos("FK_IdSubGrupoActivoFijo",detalleactivofijoLogic.getDetalleActivoFijos());
				} else if(Constantes.ISUSAEJBREMOTE || Constantes.ISUSAEJBHOME) {
					generarReporteDetalleActivoFijos("FK_IdSubGrupoActivoFijo",detalleactivofijos);
				}
				//ARCHITECTURE

					if(false) {//isMostrarTodosResultadosReporte
						this.pagination.setiFirstResult(this.iNumeroPaginacionPagina);
						this.pagination.setiMaxResults(this.iNumeroPaginacion);

						//ARCHITECTURE
						if(Constantes.ISUSAEJBLOGICLAYER) {
						detalleactivofijoLogic.setDetalleActivoFijos(new ArrayList<DetalleActivoFijo>());
						detalleactivofijoLogic.getDetalleActivoFijos().addAll(detalleactivofijosAux);
						} else if(Constantes.ISUSAEJBREMOTE || Constantes.ISUSAEJBHOME) {
							detalleactivofijos=new ArrayList<DetalleActivoFijo>();
							detalleactivofijos.addAll(detalleactivofijosAux);
						}
						//ARCHITECTURE
					}
				}

			}
			else if(sAccionBusqueda.equals("FK_IdSucursal")) {
				this.sDetalleReporte=DetalleActivoFijoConstantesFunciones.getDetalleIndiceFK_IdSucursal(id_sucursalFK_IdSucursal);

				
				//ARCHITECTURE
				if(Constantes.ISUSAEJBLOGICLAYER) {

					finalQueryGlobal=Funciones.GetFinalQueryAppendBusqueda(finalQueryGlobal, this.sFinalQueryGeneral,finalQueryPaginacion);

					detalleactivofijoLogic.getDetalleActivoFijosFK_IdSucursal(finalQueryGlobal,pagination,id_sucursalFK_IdSucursal);
				} else if(Constantes.ISUSAEJBREMOTE) {
				this.sDetalleReporte=DetalleActivoFijoConstantesFunciones.getDetalleIndiceFK_IdSucursal(id_sucursalFK_IdSucursal);

				
				} else if(Constantes.ISUSAEJBHOME) {
				this.sDetalleReporte=DetalleActivoFijoConstantesFunciones.getDetalleIndiceFK_IdSucursal(id_sucursalFK_IdSucursal);

				
				}
				//ARCHITECTURE

				Boolean isNoExiste=false;
				//ARCHITECTURE
				if(Constantes.ISUSAEJBLOGICLAYER) {
					isNoExiste=detalleactivofijoLogic.getDetalleActivoFijos()==null||detalleactivofijoLogic.getDetalleActivoFijos().size()==0;
				} else if(Constantes.ISUSAEJBREMOTE||Constantes.ISUSAEJBHOME) {
					isNoExiste=detalleactivofijos==null|| detalleactivofijos.size()==0;
				}
				//ARCHITECTURE

		if(false && sTipoArchivoReporte!=""&&sTipoArchivoReporte!=null) {//this.isTipoArchivoReporte
			if(false) {//isMostrarTodosResultadosReporte
				this.pagination.setiFirstResult(-1);
				this.pagination.setiMaxResults(-1);

				//ARCHITECTURE
				if(Constantes.ISUSAEJBLOGICLAYER) {
						detalleactivofijosAux=new ArrayList<DetalleActivoFijo>();
						detalleactivofijosAux.addAll(detalleactivofijoLogic.getDetalleActivoFijos());
				} else if(Constantes.ISUSAEJBREMOTE || Constantes.ISUSAEJBHOME) {
							detalleactivofijosAux=new ArrayList<DetalleActivoFijo>();
							detalleactivofijosAux.addAll(detalleactivofijos);
				}
				//ARCHITECTURE
								
				
				//ARCHITECTURE
				if(Constantes.ISUSAEJBLOGICLAYER) {
							finalQueryGlobal=Funciones.GetFinalQueryAppendBusqueda(finalQueryGlobal, this.sFinalQueryGeneral,"");
							detalleactivofijoLogic.getDetalleActivoFijosFK_IdSucursal(finalQueryGlobal,pagination,id_sucursalFK_IdSucursal);
				} else if(Constantes.ISUSAEJBREMOTE) {
				this.sDetalleReporte=DetalleActivoFijoConstantesFunciones.getDetalleIndiceFK_IdSucursal(id_sucursalFK_IdSucursal);
						
				} else if(Constantes.ISUSAEJBHOME) {
				this.sDetalleReporte=DetalleActivoFijoConstantesFunciones.getDetalleIndiceFK_IdSucursal(id_sucursalFK_IdSucursal);
						
				}
				//ARCHITECTURE
					}
				//ARCHITECTURE
				if(Constantes.ISUSAEJBLOGICLAYER) {
					generarReporteDetalleActivoFijos("FK_IdSucursal",detalleactivofijoLogic.getDetalleActivoFijos());
				} else if(Constantes.ISUSAEJBREMOTE || Constantes.ISUSAEJBHOME) {
					generarReporteDetalleActivoFijos("FK_IdSucursal",detalleactivofijos);
				}
				//ARCHITECTURE

					if(false) {//isMostrarTodosResultadosReporte
						this.pagination.setiFirstResult(this.iNumeroPaginacionPagina);
						this.pagination.setiMaxResults(this.iNumeroPaginacion);

						//ARCHITECTURE
						if(Constantes.ISUSAEJBLOGICLAYER) {
						detalleactivofijoLogic.setDetalleActivoFijos(new ArrayList<DetalleActivoFijo>());
						detalleactivofijoLogic.getDetalleActivoFijos().addAll(detalleactivofijosAux);
						} else if(Constantes.ISUSAEJBREMOTE || Constantes.ISUSAEJBHOME) {
							detalleactivofijos=new ArrayList<DetalleActivoFijo>();
							detalleactivofijos.addAll(detalleactivofijosAux);
						}
						//ARCHITECTURE
					}
				}

			}
			else if(sAccionBusqueda.equals("FK_IdTipoActivoFijoEmpresa")) {
				this.sDetalleReporte=DetalleActivoFijoConstantesFunciones.getDetalleIndiceFK_IdTipoActivoFijoEmpresa(id_tipo_activo_fijo_empresaFK_IdTipoActivoFijoEmpresa);

				
				//ARCHITECTURE
				if(Constantes.ISUSAEJBLOGICLAYER) {

					finalQueryGlobal=Funciones.GetFinalQueryAppendBusqueda(finalQueryGlobal, this.sFinalQueryGeneral,finalQueryPaginacion);

					detalleactivofijoLogic.getDetalleActivoFijosFK_IdTipoActivoFijoEmpresa(finalQueryGlobal,pagination,id_tipo_activo_fijo_empresaFK_IdTipoActivoFijoEmpresa);
				} else if(Constantes.ISUSAEJBREMOTE) {
				this.sDetalleReporte=DetalleActivoFijoConstantesFunciones.getDetalleIndiceFK_IdTipoActivoFijoEmpresa(id_tipo_activo_fijo_empresaFK_IdTipoActivoFijoEmpresa);

				
				} else if(Constantes.ISUSAEJBHOME) {
				this.sDetalleReporte=DetalleActivoFijoConstantesFunciones.getDetalleIndiceFK_IdTipoActivoFijoEmpresa(id_tipo_activo_fijo_empresaFK_IdTipoActivoFijoEmpresa);

				
				}
				//ARCHITECTURE

				Boolean isNoExiste=false;
				//ARCHITECTURE
				if(Constantes.ISUSAEJBLOGICLAYER) {
					isNoExiste=detalleactivofijoLogic.getDetalleActivoFijos()==null||detalleactivofijoLogic.getDetalleActivoFijos().size()==0;
				} else if(Constantes.ISUSAEJBREMOTE||Constantes.ISUSAEJBHOME) {
					isNoExiste=detalleactivofijos==null|| detalleactivofijos.size()==0;
				}
				//ARCHITECTURE

		if(false && sTipoArchivoReporte!=""&&sTipoArchivoReporte!=null) {//this.isTipoArchivoReporte
			if(false) {//isMostrarTodosResultadosReporte
				this.pagination.setiFirstResult(-1);
				this.pagination.setiMaxResults(-1);

				//ARCHITECTURE
				if(Constantes.ISUSAEJBLOGICLAYER) {
						detalleactivofijosAux=new ArrayList<DetalleActivoFijo>();
						detalleactivofijosAux.addAll(detalleactivofijoLogic.getDetalleActivoFijos());
				} else if(Constantes.ISUSAEJBREMOTE || Constantes.ISUSAEJBHOME) {
							detalleactivofijosAux=new ArrayList<DetalleActivoFijo>();
							detalleactivofijosAux.addAll(detalleactivofijos);
				}
				//ARCHITECTURE
								
				
				//ARCHITECTURE
				if(Constantes.ISUSAEJBLOGICLAYER) {
							finalQueryGlobal=Funciones.GetFinalQueryAppendBusqueda(finalQueryGlobal, this.sFinalQueryGeneral,"");
							detalleactivofijoLogic.getDetalleActivoFijosFK_IdTipoActivoFijoEmpresa(finalQueryGlobal,pagination,id_tipo_activo_fijo_empresaFK_IdTipoActivoFijoEmpresa);
				} else if(Constantes.ISUSAEJBREMOTE) {
				this.sDetalleReporte=DetalleActivoFijoConstantesFunciones.getDetalleIndiceFK_IdTipoActivoFijoEmpresa(id_tipo_activo_fijo_empresaFK_IdTipoActivoFijoEmpresa);
						
				} else if(Constantes.ISUSAEJBHOME) {
				this.sDetalleReporte=DetalleActivoFijoConstantesFunciones.getDetalleIndiceFK_IdTipoActivoFijoEmpresa(id_tipo_activo_fijo_empresaFK_IdTipoActivoFijoEmpresa);
						
				}
				//ARCHITECTURE
					}
				//ARCHITECTURE
				if(Constantes.ISUSAEJBLOGICLAYER) {
					generarReporteDetalleActivoFijos("FK_IdTipoActivoFijoEmpresa",detalleactivofijoLogic.getDetalleActivoFijos());
				} else if(Constantes.ISUSAEJBREMOTE || Constantes.ISUSAEJBHOME) {
					generarReporteDetalleActivoFijos("FK_IdTipoActivoFijoEmpresa",detalleactivofijos);
				}
				//ARCHITECTURE

					if(false) {//isMostrarTodosResultadosReporte
						this.pagination.setiFirstResult(this.iNumeroPaginacionPagina);
						this.pagination.setiMaxResults(this.iNumeroPaginacion);

						//ARCHITECTURE
						if(Constantes.ISUSAEJBLOGICLAYER) {
						detalleactivofijoLogic.setDetalleActivoFijos(new ArrayList<DetalleActivoFijo>());
						detalleactivofijoLogic.getDetalleActivoFijos().addAll(detalleactivofijosAux);
						} else if(Constantes.ISUSAEJBREMOTE || Constantes.ISUSAEJBHOME) {
							detalleactivofijos=new ArrayList<DetalleActivoFijo>();
							detalleactivofijos.addAll(detalleactivofijosAux);
						}
						//ARCHITECTURE
					}
				}

			}
			else if(sAccionBusqueda.equals("FK_IdTipoDepreciacionEmpresa")) {
				this.sDetalleReporte=DetalleActivoFijoConstantesFunciones.getDetalleIndiceFK_IdTipoDepreciacionEmpresa(id_tipo_depreciacion_empresaFK_IdTipoDepreciacionEmpresa);

				
				//ARCHITECTURE
				if(Constantes.ISUSAEJBLOGICLAYER) {

					finalQueryGlobal=Funciones.GetFinalQueryAppendBusqueda(finalQueryGlobal, this.sFinalQueryGeneral,finalQueryPaginacion);

					detalleactivofijoLogic.getDetalleActivoFijosFK_IdTipoDepreciacionEmpresa(finalQueryGlobal,pagination,id_tipo_depreciacion_empresaFK_IdTipoDepreciacionEmpresa);
				} else if(Constantes.ISUSAEJBREMOTE) {
				this.sDetalleReporte=DetalleActivoFijoConstantesFunciones.getDetalleIndiceFK_IdTipoDepreciacionEmpresa(id_tipo_depreciacion_empresaFK_IdTipoDepreciacionEmpresa);

				
				} else if(Constantes.ISUSAEJBHOME) {
				this.sDetalleReporte=DetalleActivoFijoConstantesFunciones.getDetalleIndiceFK_IdTipoDepreciacionEmpresa(id_tipo_depreciacion_empresaFK_IdTipoDepreciacionEmpresa);

				
				}
				//ARCHITECTURE

				Boolean isNoExiste=false;
				//ARCHITECTURE
				if(Constantes.ISUSAEJBLOGICLAYER) {
					isNoExiste=detalleactivofijoLogic.getDetalleActivoFijos()==null||detalleactivofijoLogic.getDetalleActivoFijos().size()==0;
				} else if(Constantes.ISUSAEJBREMOTE||Constantes.ISUSAEJBHOME) {
					isNoExiste=detalleactivofijos==null|| detalleactivofijos.size()==0;
				}
				//ARCHITECTURE

		if(false && sTipoArchivoReporte!=""&&sTipoArchivoReporte!=null) {//this.isTipoArchivoReporte
			if(false) {//isMostrarTodosResultadosReporte
				this.pagination.setiFirstResult(-1);
				this.pagination.setiMaxResults(-1);

				//ARCHITECTURE
				if(Constantes.ISUSAEJBLOGICLAYER) {
						detalleactivofijosAux=new ArrayList<DetalleActivoFijo>();
						detalleactivofijosAux.addAll(detalleactivofijoLogic.getDetalleActivoFijos());
				} else if(Constantes.ISUSAEJBREMOTE || Constantes.ISUSAEJBHOME) {
							detalleactivofijosAux=new ArrayList<DetalleActivoFijo>();
							detalleactivofijosAux.addAll(detalleactivofijos);
				}
				//ARCHITECTURE
								
				
				//ARCHITECTURE
				if(Constantes.ISUSAEJBLOGICLAYER) {
							finalQueryGlobal=Funciones.GetFinalQueryAppendBusqueda(finalQueryGlobal, this.sFinalQueryGeneral,"");
							detalleactivofijoLogic.getDetalleActivoFijosFK_IdTipoDepreciacionEmpresa(finalQueryGlobal,pagination,id_tipo_depreciacion_empresaFK_IdTipoDepreciacionEmpresa);
				} else if(Constantes.ISUSAEJBREMOTE) {
				this.sDetalleReporte=DetalleActivoFijoConstantesFunciones.getDetalleIndiceFK_IdTipoDepreciacionEmpresa(id_tipo_depreciacion_empresaFK_IdTipoDepreciacionEmpresa);
						
				} else if(Constantes.ISUSAEJBHOME) {
				this.sDetalleReporte=DetalleActivoFijoConstantesFunciones.getDetalleIndiceFK_IdTipoDepreciacionEmpresa(id_tipo_depreciacion_empresaFK_IdTipoDepreciacionEmpresa);
						
				}
				//ARCHITECTURE
					}
				//ARCHITECTURE
				if(Constantes.ISUSAEJBLOGICLAYER) {
					generarReporteDetalleActivoFijos("FK_IdTipoDepreciacionEmpresa",detalleactivofijoLogic.getDetalleActivoFijos());
				} else if(Constantes.ISUSAEJBREMOTE || Constantes.ISUSAEJBHOME) {
					generarReporteDetalleActivoFijos("FK_IdTipoDepreciacionEmpresa",detalleactivofijos);
				}
				//ARCHITECTURE

					if(false) {//isMostrarTodosResultadosReporte
						this.pagination.setiFirstResult(this.iNumeroPaginacionPagina);
						this.pagination.setiMaxResults(this.iNumeroPaginacion);

						//ARCHITECTURE
						if(Constantes.ISUSAEJBLOGICLAYER) {
						detalleactivofijoLogic.setDetalleActivoFijos(new ArrayList<DetalleActivoFijo>());
						detalleactivofijoLogic.getDetalleActivoFijos().addAll(detalleactivofijosAux);
						} else if(Constantes.ISUSAEJBREMOTE || Constantes.ISUSAEJBHOME) {
							detalleactivofijos=new ArrayList<DetalleActivoFijo>();
							detalleactivofijos.addAll(detalleactivofijosAux);
						}
						//ARCHITECTURE
					}
				}

			}
			else if(sAccionBusqueda.equals("FK_IdTipoRamoActivoFijo")) {
				this.sDetalleReporte=DetalleActivoFijoConstantesFunciones.getDetalleIndiceFK_IdTipoRamoActivoFijo(id_tipo_ramo_activo_fijoFK_IdTipoRamoActivoFijo);

				
				//ARCHITECTURE
				if(Constantes.ISUSAEJBLOGICLAYER) {

					finalQueryGlobal=Funciones.GetFinalQueryAppendBusqueda(finalQueryGlobal, this.sFinalQueryGeneral,finalQueryPaginacion);

					detalleactivofijoLogic.getDetalleActivoFijosFK_IdTipoRamoActivoFijo(finalQueryGlobal,pagination,id_tipo_ramo_activo_fijoFK_IdTipoRamoActivoFijo);
				} else if(Constantes.ISUSAEJBREMOTE) {
				this.sDetalleReporte=DetalleActivoFijoConstantesFunciones.getDetalleIndiceFK_IdTipoRamoActivoFijo(id_tipo_ramo_activo_fijoFK_IdTipoRamoActivoFijo);

				
				} else if(Constantes.ISUSAEJBHOME) {
				this.sDetalleReporte=DetalleActivoFijoConstantesFunciones.getDetalleIndiceFK_IdTipoRamoActivoFijo(id_tipo_ramo_activo_fijoFK_IdTipoRamoActivoFijo);

				
				}
				//ARCHITECTURE

				Boolean isNoExiste=false;
				//ARCHITECTURE
				if(Constantes.ISUSAEJBLOGICLAYER) {
					isNoExiste=detalleactivofijoLogic.getDetalleActivoFijos()==null||detalleactivofijoLogic.getDetalleActivoFijos().size()==0;
				} else if(Constantes.ISUSAEJBREMOTE||Constantes.ISUSAEJBHOME) {
					isNoExiste=detalleactivofijos==null|| detalleactivofijos.size()==0;
				}
				//ARCHITECTURE

		if(false && sTipoArchivoReporte!=""&&sTipoArchivoReporte!=null) {//this.isTipoArchivoReporte
			if(false) {//isMostrarTodosResultadosReporte
				this.pagination.setiFirstResult(-1);
				this.pagination.setiMaxResults(-1);

				//ARCHITECTURE
				if(Constantes.ISUSAEJBLOGICLAYER) {
						detalleactivofijosAux=new ArrayList<DetalleActivoFijo>();
						detalleactivofijosAux.addAll(detalleactivofijoLogic.getDetalleActivoFijos());
				} else if(Constantes.ISUSAEJBREMOTE || Constantes.ISUSAEJBHOME) {
							detalleactivofijosAux=new ArrayList<DetalleActivoFijo>();
							detalleactivofijosAux.addAll(detalleactivofijos);
				}
				//ARCHITECTURE
								
				
				//ARCHITECTURE
				if(Constantes.ISUSAEJBLOGICLAYER) {
							finalQueryGlobal=Funciones.GetFinalQueryAppendBusqueda(finalQueryGlobal, this.sFinalQueryGeneral,"");
							detalleactivofijoLogic.getDetalleActivoFijosFK_IdTipoRamoActivoFijo(finalQueryGlobal,pagination,id_tipo_ramo_activo_fijoFK_IdTipoRamoActivoFijo);
				} else if(Constantes.ISUSAEJBREMOTE) {
				this.sDetalleReporte=DetalleActivoFijoConstantesFunciones.getDetalleIndiceFK_IdTipoRamoActivoFijo(id_tipo_ramo_activo_fijoFK_IdTipoRamoActivoFijo);
						
				} else if(Constantes.ISUSAEJBHOME) {
				this.sDetalleReporte=DetalleActivoFijoConstantesFunciones.getDetalleIndiceFK_IdTipoRamoActivoFijo(id_tipo_ramo_activo_fijoFK_IdTipoRamoActivoFijo);
						
				}
				//ARCHITECTURE
					}
				//ARCHITECTURE
				if(Constantes.ISUSAEJBLOGICLAYER) {
					generarReporteDetalleActivoFijos("FK_IdTipoRamoActivoFijo",detalleactivofijoLogic.getDetalleActivoFijos());
				} else if(Constantes.ISUSAEJBREMOTE || Constantes.ISUSAEJBHOME) {
					generarReporteDetalleActivoFijos("FK_IdTipoRamoActivoFijo",detalleactivofijos);
				}
				//ARCHITECTURE

					if(false) {//isMostrarTodosResultadosReporte
						this.pagination.setiFirstResult(this.iNumeroPaginacionPagina);
						this.pagination.setiMaxResults(this.iNumeroPaginacion);

						//ARCHITECTURE
						if(Constantes.ISUSAEJBLOGICLAYER) {
						detalleactivofijoLogic.setDetalleActivoFijos(new ArrayList<DetalleActivoFijo>());
						detalleactivofijoLogic.getDetalleActivoFijos().addAll(detalleactivofijosAux);
						} else if(Constantes.ISUSAEJBREMOTE || Constantes.ISUSAEJBHOME) {
							detalleactivofijos=new ArrayList<DetalleActivoFijo>();
							detalleactivofijos.addAll(detalleactivofijosAux);
						}
						//ARCHITECTURE
					}
				}

			} 
		
		
		
		this.redimensionarTablaDatos();
		//this.refrescarForeignKeysDescripcionesDetalleActivoFijo();
		
		
		if(this.conTotales) {
			this.crearFilaTotales();
		}		
		} catch (JRException e) {
			throw e;
		} catch(Exception e) {
			throw e;
      	} finally {
      		//this.finishProcessDetalleActivoFijo();
      	}
		
	}				
	
	public void redimensionarTablaDatos() throws Exception {
		int iSizeTabla=0;
				
		iSizeTabla=this.getSizeTablaDatos();
		
		//ARCHITECTURE
		/*
		if(Constantes.ISUSAEJBLOGICLAYER) {	
			iSizeTabla=detalleactivofijoLogic.getDetalleActivoFijos().size();
		} else if(Constantes.ISUSAEJBREMOTE || Constantes.ISUSAEJBHOME) {
			iSizeTabla=detalleactivofijos.size();
		}
		*/
		//ARCHITECTURE
											
		this.redimensionarTablaDatos(iSizeTabla);		
	}
	
	public Integer getSizeTablaDatos() throws Exception {
		Integer iSizeTabla=0;
				
		//ARCHITECTURE
		if(Constantes.ISUSAEJBLOGICLAYER) {	
			iSizeTabla=detalleactivofijoLogic.getDetalleActivoFijos().size();
		} else if(Constantes.ISUSAEJBREMOTE || Constantes.ISUSAEJBHOME) {
			iSizeTabla=detalleactivofijos.size();
		}
		//ARCHITECTURE
											
		return iSizeTabla;		
	}
	
			
	public Boolean permiteMantenimiento(DetalleActivoFijo detalleactivofijo) {
		Boolean permite=true;
		
		if(this.detalleactivofijo.getsType().equals(Constantes2.S_TOTALES)) {
			permite=false;
		}
		
		return permite;
	}
	
	public void traerValoresTablaTotales() throws Exception {
	}
	
	
	public void traerValoresTablaOrderBy() throws Exception {
		if(Constantes.ISUSAEJBLOGICLAYER) {
			this.arrOrderBy=DetalleActivoFijoConstantesFunciones.getOrderByListaDetalleActivoFijo();							
		} else if(Constantes.ISUSAEJBREMOTE || Constantes.ISUSAEJBHOME) {
			this.arrOrderBy=DetalleActivoFijoConstantesFunciones.getOrderByListaDetalleActivoFijo();
		}		
	}
	
	
	public Boolean existeFilaTotales() throws Exception {
		Boolean existe=false;
		
		if(Constantes.ISUSAEJBLOGICLAYER) {
			for(DetalleActivoFijo detalleactivofijo:detalleactivofijoLogic.getDetalleActivoFijos()) {
				if(detalleactivofijo.getsType().equals(Constantes2.S_TOTALES)) {
					detalleactivofijoTotales=detalleactivofijo;
					existe=true;
					break;
				}
			}
								
		} else if(Constantes.ISUSAEJBREMOTE || Constantes.ISUSAEJBHOME) {
			for(DetalleActivoFijo detalleactivofijo:this.detalleactivofijos) {
				if(detalleactivofijo.getsType().equals(Constantes2.S_TOTALES)) {
					detalleactivofijoTotales=detalleactivofijo;
					existe=true;
					break;
				}
			}
		}
		
		return existe;
	}
	
	public void crearFilaTotales() throws Exception {
		Boolean existe=false;
		
		existe=this.existeFilaTotales();
		
		if(!existe) {
			//SI NO ES UNO A UNO SE CREA FILA TOTALES
			this.detalleactivofijoAux=new DetalleActivoFijo();
			this.detalleactivofijoAux.setsType(Constantes2.S_TOTALES);
			this.detalleactivofijoAux.setIsNew(false);
			this.detalleactivofijoAux.setIsChanged(false);
			this.detalleactivofijoAux.setIsDeleted(false);
				
			if(Constantes.ISUSAEJBLOGICLAYER) {
				DetalleActivoFijoConstantesFunciones.TotalizarValoresFilaDetalleActivoFijo(this.detalleactivofijoLogic.getDetalleActivoFijos(),this.detalleactivofijoAux);
				
				this.detalleactivofijoLogic.getDetalleActivoFijos().add(this.detalleactivofijoAux);
				
			} else if(Constantes.ISUSAEJBREMOTE || Constantes.ISUSAEJBHOME) {
				DetalleActivoFijoConstantesFunciones.TotalizarValoresFilaDetalleActivoFijo(this.detalleactivofijos,this.detalleactivofijoAux);
				
				this.detalleactivofijos.add(this.detalleactivofijoAux);
			}
		}
	}
	
	public void quitarFilaTotales() throws Exception {
		detalleactivofijoTotales=new DetalleActivoFijo();
		Boolean existe=false;
		
		if(Constantes.ISUSAEJBLOGICLAYER) {
			existe=this.existeFilaTotales();
			
			if(existe) {
				this.detalleactivofijoLogic.getDetalleActivoFijos().remove(detalleactivofijoTotales);
			}			
		} else if(Constantes.ISUSAEJBREMOTE || Constantes.ISUSAEJBHOME) {
			existe=this.existeFilaTotales();
			
			if(existe) {
				this.detalleactivofijos.remove(detalleactivofijoTotales);
			}
		}
	}
	
	public void actualizarFilaTotales() throws Exception {
		detalleactivofijoTotales=new DetalleActivoFijo();
		Boolean existe=false;
		
		if(Constantes.ISUSAEJBLOGICLAYER) {
			for(DetalleActivoFijo detalleactivofijo:detalleactivofijoLogic.getDetalleActivoFijos()) {
				if(detalleactivofijo.getsType().equals(Constantes2.S_TOTALES)) {
					detalleactivofijoTotales=detalleactivofijo;
					existe=true;
					break;
				}
			}
			
			if(existe) {
				DetalleActivoFijoConstantesFunciones.TotalizarValoresFilaDetalleActivoFijo(this.detalleactivofijoLogic.getDetalleActivoFijos(),detalleactivofijoTotales);
			}			
		} else if(Constantes.ISUSAEJBREMOTE || Constantes.ISUSAEJBHOME) {
			for(DetalleActivoFijo detalleactivofijo:this.detalleactivofijos) {
				if(detalleactivofijo.getsType().equals(Constantes2.S_TOTALES)) {
					detalleactivofijoTotales=detalleactivofijo;
					existe=true;
					break;
				}
			}
			
			if(existe) {
				DetalleActivoFijoConstantesFunciones.TotalizarValoresFilaDetalleActivoFijo(this.detalleactivofijos,detalleactivofijoTotales);
			}
		}
	}		
	
	public void recargarInformacion()throws Exception {
		try {
			sAccionBusqueda="Todos";
			this.iNumeroPaginacionPagina=0;
			
			this.procesarBusqueda(sAccionBusqueda);
			
		} catch(Exception e) {
			FuncionesSwing.manageException(this, e,logger,DetalleActivoFijoConstantesFunciones.CLASSNAME);
		}	
	}		
	
	
	public void getDetalleActivoFijosFK_IdCliente()throws Exception {
		try {
			sAccionBusqueda="FK_IdCliente";
			this.iNumeroPaginacionPagina=0;
			this.procesarBusqueda(sAccionBusqueda);

		} catch(Exception e) {
			FuncionesSwing.manageException(this, e,logger);
		}
	}

	public void getDetalleActivoFijosFK_IdDetalleGrupoActivoFijo()throws Exception {
		try {
			sAccionBusqueda="FK_IdDetalleGrupoActivoFijo";
			this.iNumeroPaginacionPagina=0;
			this.procesarBusqueda(sAccionBusqueda);

		} catch(Exception e) {
			FuncionesSwing.manageException(this, e,logger);
		}
	}

	public void getDetalleActivoFijosFK_IdEmpresa()throws Exception {
		try {
			sAccionBusqueda="FK_IdEmpresa";
			this.iNumeroPaginacionPagina=0;
			this.procesarBusqueda(sAccionBusqueda);

		} catch(Exception e) {
			FuncionesSwing.manageException(this, e,logger);
		}
	}

	public void getDetalleActivoFijosFK_IdEstadoActivoFijo()throws Exception {
		try {
			sAccionBusqueda="FK_IdEstadoActivoFijo";
			this.iNumeroPaginacionPagina=0;
			this.procesarBusqueda(sAccionBusqueda);

		} catch(Exception e) {
			FuncionesSwing.manageException(this, e,logger);
		}
	}

	public void getDetalleActivoFijosFK_IdPartidaPresu()throws Exception {
		try {
			sAccionBusqueda="FK_IdPartidaPresu";
			this.iNumeroPaginacionPagina=0;
			this.procesarBusqueda(sAccionBusqueda);

		} catch(Exception e) {
			FuncionesSwing.manageException(this, e,logger);
		}
	}

	public void getDetalleActivoFijosFK_IdSubGrupoActivoFijo()throws Exception {
		try {
			sAccionBusqueda="FK_IdSubGrupoActivoFijo";
			this.iNumeroPaginacionPagina=0;
			this.procesarBusqueda(sAccionBusqueda);

		} catch(Exception e) {
			FuncionesSwing.manageException(this, e,logger);
		}
	}

	public void getDetalleActivoFijosFK_IdSucursal()throws Exception {
		try {
			sAccionBusqueda="FK_IdSucursal";
			this.iNumeroPaginacionPagina=0;
			this.procesarBusqueda(sAccionBusqueda);

		} catch(Exception e) {
			FuncionesSwing.manageException(this, e,logger);
		}
	}

	public void getDetalleActivoFijosFK_IdTipoActivoFijoEmpresa()throws Exception {
		try {
			sAccionBusqueda="FK_IdTipoActivoFijoEmpresa";
			this.iNumeroPaginacionPagina=0;
			this.procesarBusqueda(sAccionBusqueda);

		} catch(Exception e) {
			FuncionesSwing.manageException(this, e,logger);
		}
	}

	public void getDetalleActivoFijosFK_IdTipoDepreciacionEmpresa()throws Exception {
		try {
			sAccionBusqueda="FK_IdTipoDepreciacionEmpresa";
			this.iNumeroPaginacionPagina=0;
			this.procesarBusqueda(sAccionBusqueda);

		} catch(Exception e) {
			FuncionesSwing.manageException(this, e,logger);
		}
	}

	public void getDetalleActivoFijosFK_IdTipoRamoActivoFijo()throws Exception {
		try {
			sAccionBusqueda="FK_IdTipoRamoActivoFijo";
			this.iNumeroPaginacionPagina=0;
			this.procesarBusqueda(sAccionBusqueda);

		} catch(Exception e) {
			FuncionesSwing.manageException(this, e,logger);
		}
	}

	
	
	public void getDetalleActivoFijosFK_IdCliente(String sFinalQuery,Long id_cliente)throws Exception {
		try {
			
			this.pagination=new Pagination();
			this.pagination.setiFirstResult(this.iNumeroPaginacionPagina);
			this.pagination.setiMaxResults(this.iNumeroPaginacion);

				//ARCHITECTURE
				if(Constantes.ISUSAEJBLOGICLAYER) {
					detalleactivofijoLogic.getDetalleActivoFijosFK_IdCliente(sFinalQuery,this.pagination,id_cliente);
				
				} else if(Constantes.ISUSAEJBREMOTE) {
				
				} else if(Constantes.ISUSAEJBHOME) {
				
				}
				//ARCHITECTURE
		} catch(Exception e) {
			throw e;
		}
	}

	public void getDetalleActivoFijosFK_IdDetalleGrupoActivoFijo(String sFinalQuery,Long id_detalle_grupo_activo_fijo)throws Exception {
		try {
			
			this.pagination=new Pagination();
			this.pagination.setiFirstResult(this.iNumeroPaginacionPagina);
			this.pagination.setiMaxResults(this.iNumeroPaginacion);

				//ARCHITECTURE
				if(Constantes.ISUSAEJBLOGICLAYER) {
					detalleactivofijoLogic.getDetalleActivoFijosFK_IdDetalleGrupoActivoFijo(sFinalQuery,this.pagination,id_detalle_grupo_activo_fijo);
				
				} else if(Constantes.ISUSAEJBREMOTE) {
				
				} else if(Constantes.ISUSAEJBHOME) {
				
				}
				//ARCHITECTURE
		} catch(Exception e) {
			throw e;
		}
	}

	public void getDetalleActivoFijosFK_IdEmpresa(String sFinalQuery,Long id_empresa)throws Exception {
		try {
			
			this.pagination=new Pagination();
			this.pagination.setiFirstResult(this.iNumeroPaginacionPagina);
			this.pagination.setiMaxResults(this.iNumeroPaginacion);

				//ARCHITECTURE
				if(Constantes.ISUSAEJBLOGICLAYER) {
					detalleactivofijoLogic.getDetalleActivoFijosFK_IdEmpresa(sFinalQuery,this.pagination,id_empresa);
				
				} else if(Constantes.ISUSAEJBREMOTE) {
				
				} else if(Constantes.ISUSAEJBHOME) {
				
				}
				//ARCHITECTURE
		} catch(Exception e) {
			throw e;
		}
	}

	public void getDetalleActivoFijosFK_IdEstadoActivoFijo(String sFinalQuery,Long id_estado_activo_fijo)throws Exception {
		try {
			
			this.pagination=new Pagination();
			this.pagination.setiFirstResult(this.iNumeroPaginacionPagina);
			this.pagination.setiMaxResults(this.iNumeroPaginacion);

				//ARCHITECTURE
				if(Constantes.ISUSAEJBLOGICLAYER) {
					detalleactivofijoLogic.getDetalleActivoFijosFK_IdEstadoActivoFijo(sFinalQuery,this.pagination,id_estado_activo_fijo);
				
				} else if(Constantes.ISUSAEJBREMOTE) {
				
				} else if(Constantes.ISUSAEJBHOME) {
				
				}
				//ARCHITECTURE
		} catch(Exception e) {
			throw e;
		}
	}

	public void getDetalleActivoFijosFK_IdPartidaPresu(String sFinalQuery,Long id_partida_presu)throws Exception {
		try {
			
			this.pagination=new Pagination();
			this.pagination.setiFirstResult(this.iNumeroPaginacionPagina);
			this.pagination.setiMaxResults(this.iNumeroPaginacion);

				//ARCHITECTURE
				if(Constantes.ISUSAEJBLOGICLAYER) {
					detalleactivofijoLogic.getDetalleActivoFijosFK_IdPartidaPresu(sFinalQuery,this.pagination,id_partida_presu);
				
				} else if(Constantes.ISUSAEJBREMOTE) {
				
				} else if(Constantes.ISUSAEJBHOME) {
				
				}
				//ARCHITECTURE
		} catch(Exception e) {
			throw e;
		}
	}

	public void getDetalleActivoFijosFK_IdSubGrupoActivoFijo(String sFinalQuery,Long id_sub_grupo_activo_fijo)throws Exception {
		try {
			
			this.pagination=new Pagination();
			this.pagination.setiFirstResult(this.iNumeroPaginacionPagina);
			this.pagination.setiMaxResults(this.iNumeroPaginacion);

				//ARCHITECTURE
				if(Constantes.ISUSAEJBLOGICLAYER) {
					detalleactivofijoLogic.getDetalleActivoFijosFK_IdSubGrupoActivoFijo(sFinalQuery,this.pagination,id_sub_grupo_activo_fijo);
				
				} else if(Constantes.ISUSAEJBREMOTE) {
				
				} else if(Constantes.ISUSAEJBHOME) {
				
				}
				//ARCHITECTURE
		} catch(Exception e) {
			throw e;
		}
	}

	public void getDetalleActivoFijosFK_IdSucursal(String sFinalQuery,Long id_sucursal)throws Exception {
		try {
			
			this.pagination=new Pagination();
			this.pagination.setiFirstResult(this.iNumeroPaginacionPagina);
			this.pagination.setiMaxResults(this.iNumeroPaginacion);

				//ARCHITECTURE
				if(Constantes.ISUSAEJBLOGICLAYER) {
					detalleactivofijoLogic.getDetalleActivoFijosFK_IdSucursal(sFinalQuery,this.pagination,id_sucursal);
				
				} else if(Constantes.ISUSAEJBREMOTE) {
				
				} else if(Constantes.ISUSAEJBHOME) {
				
				}
				//ARCHITECTURE
		} catch(Exception e) {
			throw e;
		}
	}

	public void getDetalleActivoFijosFK_IdTipoActivoFijoEmpresa(String sFinalQuery,Long id_tipo_activo_fijo_empresa)throws Exception {
		try {
			
			this.pagination=new Pagination();
			this.pagination.setiFirstResult(this.iNumeroPaginacionPagina);
			this.pagination.setiMaxResults(this.iNumeroPaginacion);

				//ARCHITECTURE
				if(Constantes.ISUSAEJBLOGICLAYER) {
					detalleactivofijoLogic.getDetalleActivoFijosFK_IdTipoActivoFijoEmpresa(sFinalQuery,this.pagination,id_tipo_activo_fijo_empresa);
				
				} else if(Constantes.ISUSAEJBREMOTE) {
				
				} else if(Constantes.ISUSAEJBHOME) {
				
				}
				//ARCHITECTURE
		} catch(Exception e) {
			throw e;
		}
	}

	public void getDetalleActivoFijosFK_IdTipoDepreciacionEmpresa(String sFinalQuery,Long id_tipo_depreciacion_empresa)throws Exception {
		try {
			
			this.pagination=new Pagination();
			this.pagination.setiFirstResult(this.iNumeroPaginacionPagina);
			this.pagination.setiMaxResults(this.iNumeroPaginacion);

				//ARCHITECTURE
				if(Constantes.ISUSAEJBLOGICLAYER) {
					detalleactivofijoLogic.getDetalleActivoFijosFK_IdTipoDepreciacionEmpresa(sFinalQuery,this.pagination,id_tipo_depreciacion_empresa);
				
				} else if(Constantes.ISUSAEJBREMOTE) {
				
				} else if(Constantes.ISUSAEJBHOME) {
				
				}
				//ARCHITECTURE
		} catch(Exception e) {
			throw e;
		}
	}

	public void getDetalleActivoFijosFK_IdTipoRamoActivoFijo(String sFinalQuery,Long id_tipo_ramo_activo_fijo)throws Exception {
		try {
			
			this.pagination=new Pagination();
			this.pagination.setiFirstResult(this.iNumeroPaginacionPagina);
			this.pagination.setiMaxResults(this.iNumeroPaginacion);

				//ARCHITECTURE
				if(Constantes.ISUSAEJBLOGICLAYER) {
					detalleactivofijoLogic.getDetalleActivoFijosFK_IdTipoRamoActivoFijo(sFinalQuery,this.pagination,id_tipo_ramo_activo_fijo);
				
				} else if(Constantes.ISUSAEJBREMOTE) {
				
				} else if(Constantes.ISUSAEJBHOME) {
				
				}
				//ARCHITECTURE
		} catch(Exception e) {
			throw e;
		}
	}

	
	public void onLoad()throws Exception {		
		try {		
			isEntroOnLoad=true;
			//INTENTA TRAER DATOS DE BUSQUEDA ANTERIOR
			this.traerDatosBusquedaDesdeSession();
					
			//SINO SE CUMPLE VIENE DE PADRE FOREIGN O BUSQUEDA ANTIGUA
			if(this.sAccionBusqueda.equals("")) {
				this.sAccionBusqueda="Todos";
			}
								
			this.procesarBusqueda(sAccionBusqueda);
			
		} catch (Exception e) {
			throw e;
		}
	}		
	
	public void inicializarPermisosDetalleActivoFijo() {
		this.isPermisoTodoDetalleActivoFijo=false;
		this.isPermisoNuevoDetalleActivoFijo=false;
		this.isPermisoActualizarDetalleActivoFijo=false;
		this.isPermisoActualizarOriginalDetalleActivoFijo=false;
		this.isPermisoEliminarDetalleActivoFijo=false;
		this.isPermisoGuardarCambiosDetalleActivoFijo=false;
		this.isPermisoConsultaDetalleActivoFijo=false;
		this.isPermisoBusquedaDetalleActivoFijo=false;
		this.isPermisoReporteDetalleActivoFijo=false;		
		this.isPermisoOrdenDetalleActivoFijo=false;		
		this.isPermisoPaginacionMedioDetalleActivoFijo=false;		
		this.isPermisoPaginacionAltoDetalleActivoFijo=false;
		this.isPermisoPaginacionTodoDetalleActivoFijo=false;
		this.isPermisoCopiarDetalleActivoFijo=false;		
		this.isPermisoVerFormDetalleActivoFijo=false;		
		this.isPermisoDuplicarDetalleActivoFijo=false;		
		this.isPermisoOrdenDetalleActivoFijo=false;		
	}
	
	public void setPermisosUsuarioDetalleActivoFijo(Boolean isPermiso) {
		this.isPermisoTodoDetalleActivoFijo=isPermiso;
		this.isPermisoNuevoDetalleActivoFijo=isPermiso;
		this.isPermisoActualizarDetalleActivoFijo=isPermiso;
		this.isPermisoActualizarOriginalDetalleActivoFijo=isPermiso;
		this.isPermisoEliminarDetalleActivoFijo=isPermiso;
		this.isPermisoGuardarCambiosDetalleActivoFijo=isPermiso;
		this.isPermisoConsultaDetalleActivoFijo=isPermiso;
		this.isPermisoBusquedaDetalleActivoFijo=isPermiso;
		this.isPermisoReporteDetalleActivoFijo=isPermiso;
		this.isPermisoOrdenDetalleActivoFijo=isPermiso;		
		this.isPermisoPaginacionMedioDetalleActivoFijo=isPermiso;		
		this.isPermisoPaginacionAltoDetalleActivoFijo=isPermiso;		
		this.isPermisoPaginacionTodoDetalleActivoFijo=isPermiso;		
		this.isPermisoCopiarDetalleActivoFijo=isPermiso;		
		this.isPermisoVerFormDetalleActivoFijo=isPermiso;		
		this.isPermisoDuplicarDetalleActivoFijo=isPermiso;
		this.isPermisoOrdenDetalleActivoFijo=isPermiso;
	}
	
	public void setPermisosMantenimientoUsuarioDetalleActivoFijo(Boolean isPermiso) {
		//this.isPermisoTodoDetalleActivoFijo=isPermiso;
		this.isPermisoNuevoDetalleActivoFijo=isPermiso;
		this.isPermisoActualizarDetalleActivoFijo=isPermiso;
		this.isPermisoActualizarOriginalDetalleActivoFijo=isPermiso;
		this.isPermisoEliminarDetalleActivoFijo=isPermiso;
		this.isPermisoGuardarCambiosDetalleActivoFijo=isPermiso;
		//this.isPermisoConsultaDetalleActivoFijo=isPermiso;
		//this.isPermisoBusquedaDetalleActivoFijo=isPermiso;
		//this.isPermisoReporteDetalleActivoFijo=isPermiso;
		//this.isPermisoOrdenDetalleActivoFijo=isPermiso;		
		//this.isPermisoPaginacionMedioDetalleActivoFijo=isPermiso;		
		//this.isPermisoPaginacionAltoDetalleActivoFijo=isPermiso;		
		//this.isPermisoPaginacionTodoDetalleActivoFijo=isPermiso;		
		//this.isPermisoCopiarDetalleActivoFijo=isPermiso;		
		//this.isPermisoDuplicarDetalleActivoFijo=isPermiso;
		//this.isPermisoOrdenDetalleActivoFijo=isPermiso;
	}
	
	public void inicializarSetPermisosUsuarioDetalleActivoFijoClasesRelacionadas() throws Exception {
		ArrayList<String> arrPaginas=new ArrayList<String>();		
		ArrayList<Opcion> opcionsFinal=new ArrayList<Opcion>();	
		
		arrPaginas.add(MantenimientoActivoFijoConstantesFunciones.SNOMBREOPCION);
		arrPaginas.add(ServicioTransporteConstantesFunciones.SNOMBREOPCION);
		arrPaginas.add(MovimientoActivoFijoConstantesFunciones.SNOMBREOPCION);
		arrPaginas.add(VehiculoConstantesFunciones.SNOMBREOPCION);
		arrPaginas.add(MetodoDepreciacionConstantesFunciones.SNOMBREOPCION);
		arrPaginas.add(ResponsableActivoFijoConstantesFunciones.SNOMBREOPCION);
		arrPaginas.add(DepreciacionActivoFijoConstantesFunciones.SNOMBREOPCION);
		arrPaginas.add(GastoDepreciacionCentroCostoConstantesFunciones.SNOMBREOPCION);
		arrPaginas.add(ParteActivoFijoConstantesFunciones.SNOMBREOPCION);
		
		if(DetalleActivoFijoJInternalFrame.CON_LLAMADA_SIMPLE) {
			this.opcionsRelacionadas.addAll(this.sistemaReturnGeneral.getOpcionsRelacionadas());
			
		} else {
			if(Constantes.ISUSAEJBLOGICLAYER) {
				opcionsFinal=sistemaLogicAdditional.tienePermisosOpcionesEnPaginaWeb(this.usuarioActual, Constantes.LIDSISTEMAACTUAL, arrPaginas);
			} else if(Constantes.ISUSAEJBREMOTE) {
			} else if(Constantes.ISUSAEJBHOME) {
			}
			
			this.opcionsRelacionadas.addAll(opcionsFinal);
		}
		
		

		this.isTienePermisosMantenimientoActivoFijo=false;
		this.isTienePermisosMantenimientoActivoFijo=this.verificarGetPermisosUsuarioOpcionDetalleActivoFijoClaseRelacionada(this.opcionsRelacionadas,MantenimientoActivoFijoConstantesFunciones.SNOMBREOPCION);

		this.isTienePermisosServicioTransporte=false;
		this.isTienePermisosServicioTransporte=this.verificarGetPermisosUsuarioOpcionDetalleActivoFijoClaseRelacionada(this.opcionsRelacionadas,ServicioTransporteConstantesFunciones.SNOMBREOPCION);

		this.isTienePermisosMovimientoActivoFijo=false;
		this.isTienePermisosMovimientoActivoFijo=this.verificarGetPermisosUsuarioOpcionDetalleActivoFijoClaseRelacionada(this.opcionsRelacionadas,MovimientoActivoFijoConstantesFunciones.SNOMBREOPCION);

		this.isTienePermisosVehiculo=false;
		this.isTienePermisosVehiculo=this.verificarGetPermisosUsuarioOpcionDetalleActivoFijoClaseRelacionada(this.opcionsRelacionadas,VehiculoConstantesFunciones.SNOMBREOPCION);

		this.isTienePermisosMetodoDepreciacion=false;
		this.isTienePermisosMetodoDepreciacion=this.verificarGetPermisosUsuarioOpcionDetalleActivoFijoClaseRelacionada(this.opcionsRelacionadas,MetodoDepreciacionConstantesFunciones.SNOMBREOPCION);

		this.isTienePermisosResponsableActivoFijo=false;
		this.isTienePermisosResponsableActivoFijo=this.verificarGetPermisosUsuarioOpcionDetalleActivoFijoClaseRelacionada(this.opcionsRelacionadas,ResponsableActivoFijoConstantesFunciones.SNOMBREOPCION);

		this.isTienePermisosDepreciacionActivoFijo=false;
		this.isTienePermisosDepreciacionActivoFijo=this.verificarGetPermisosUsuarioOpcionDetalleActivoFijoClaseRelacionada(this.opcionsRelacionadas,DepreciacionActivoFijoConstantesFunciones.SNOMBREOPCION);

		this.isTienePermisosGastoDepreciacionCentroCosto=false;
		this.isTienePermisosGastoDepreciacionCentroCosto=this.verificarGetPermisosUsuarioOpcionDetalleActivoFijoClaseRelacionada(this.opcionsRelacionadas,GastoDepreciacionCentroCostoConstantesFunciones.SNOMBREOPCION);

		this.isTienePermisosParteActivoFijo=false;
		this.isTienePermisosParteActivoFijo=this.verificarGetPermisosUsuarioOpcionDetalleActivoFijoClaseRelacionada(this.opcionsRelacionadas,ParteActivoFijoConstantesFunciones.SNOMBREOPCION);
		
	}
	
	public Boolean tienePermisosUsuarioEnPaginaWebDetalleActivoFijo(String sPagina) throws Exception {
		Boolean tienePermisos=false;
		
		if(Constantes.ISUSAEJBLOGICLAYER) {
			tienePermisos=sistemaLogicAdditional.tienePermisosEnPaginaWeb(this.usuarioActual, Constantes.LIDSISTEMAACTUAL, sPagina);
		} else if(Constantes.ISUSAEJBREMOTE) {
		} else if(Constantes.ISUSAEJBHOME) {
		}
		
		return tienePermisos;
	}
	
	public void inicializarSetPermisosUsuarioDetalleActivoFijoClasesRelacionadas(Boolean conPermiso) throws Exception {
		
		this.isTienePermisosMantenimientoActivoFijo=conPermiso;
		this.isTienePermisosServicioTransporte=conPermiso;
		this.isTienePermisosMovimientoActivoFijo=conPermiso;
		this.isTienePermisosVehiculo=conPermiso;
		this.isTienePermisosMetodoDepreciacion=conPermiso;
		this.isTienePermisosResponsableActivoFijo=conPermiso;
		this.isTienePermisosDepreciacionActivoFijo=conPermiso;
		this.isTienePermisosGastoDepreciacionCentroCosto=conPermiso;
		this.isTienePermisosParteActivoFijo=conPermiso;
	}
	
	public Boolean verificarGetPermisosUsuarioDetalleActivoFijoClaseRelacionada(ArrayList<String> arrPaginasFinal,String sPaginaActual) throws Exception {
		Boolean verificado=false;
		
		verificado=Funciones2.verificarGetPermisosUsuarioClaseRelacionada(arrPaginasFinal,sPaginaActual);				
		
		return verificado;
	}
	
	public Boolean verificarGetPermisosUsuarioOpcionDetalleActivoFijoClaseRelacionada(List<Opcion> opcionsFinal,String sPaginaActual) throws Exception {
		Boolean verificado=false;
		
		verificado=Funciones2.verificarGetPermisosUsuarioOpcionClaseRelacionada(opcionsFinal,sPaginaActual);				
		
		return verificado;
	}
	
	public void actualizarTabsSetPermisosUsuarioDetalleActivoFijoClasesRelacionadas() throws Exception {
		

		if(!this.isTienePermisosMantenimientoActivoFijo && this.jInternalFrameDetalleFormDetalleActivoFijo!=null && this.jInternalFrameDetalleFormDetalleActivoFijo.mantenimientoactivofijoBeanSwingJInternalFrame!=null) {
			this.jInternalFrameDetalleFormDetalleActivoFijo.jTabbedPaneRelacionesDetalleActivoFijo.remove(this.jInternalFrameDetalleFormDetalleActivoFijo.mantenimientoactivofijoBeanSwingJInternalFrame.getContentPane());
		}

		if(!this.isTienePermisosServicioTransporte && this.jInternalFrameDetalleFormDetalleActivoFijo!=null && this.jInternalFrameDetalleFormDetalleActivoFijo.serviciotransporteBeanSwingJInternalFrame!=null) {
			this.jInternalFrameDetalleFormDetalleActivoFijo.jTabbedPaneRelacionesDetalleActivoFijo.remove(this.jInternalFrameDetalleFormDetalleActivoFijo.serviciotransporteBeanSwingJInternalFrame.getContentPane());
		}

		if(!this.isTienePermisosMovimientoActivoFijo && this.jInternalFrameDetalleFormDetalleActivoFijo!=null && this.jInternalFrameDetalleFormDetalleActivoFijo.movimientoactivofijoBeanSwingJInternalFrame!=null) {
			this.jInternalFrameDetalleFormDetalleActivoFijo.jTabbedPaneRelacionesDetalleActivoFijo.remove(this.jInternalFrameDetalleFormDetalleActivoFijo.movimientoactivofijoBeanSwingJInternalFrame.getContentPane());
		}

		if(!this.isTienePermisosVehiculo && this.jInternalFrameDetalleFormDetalleActivoFijo!=null && this.jInternalFrameDetalleFormDetalleActivoFijo.vehiculoBeanSwingJInternalFrame!=null) {
			this.jInternalFrameDetalleFormDetalleActivoFijo.jTabbedPaneRelacionesDetalleActivoFijo.remove(this.jInternalFrameDetalleFormDetalleActivoFijo.vehiculoBeanSwingJInternalFrame.getContentPane());
		}

		if(!this.isTienePermisosMetodoDepreciacion && this.jInternalFrameDetalleFormDetalleActivoFijo!=null && this.jInternalFrameDetalleFormDetalleActivoFijo.metododepreciacionBeanSwingJInternalFrame!=null) {
			this.jInternalFrameDetalleFormDetalleActivoFijo.jTabbedPaneRelacionesDetalleActivoFijo.remove(this.jInternalFrameDetalleFormDetalleActivoFijo.metododepreciacionBeanSwingJInternalFrame.getContentPane());
		}

		if(!this.isTienePermisosResponsableActivoFijo && this.jInternalFrameDetalleFormDetalleActivoFijo!=null && this.jInternalFrameDetalleFormDetalleActivoFijo.responsableactivofijoBeanSwingJInternalFrame!=null) {
			this.jInternalFrameDetalleFormDetalleActivoFijo.jTabbedPaneRelacionesDetalleActivoFijo.remove(this.jInternalFrameDetalleFormDetalleActivoFijo.responsableactivofijoBeanSwingJInternalFrame.getContentPane());
		}

		if(!this.isTienePermisosDepreciacionActivoFijo && this.jInternalFrameDetalleFormDetalleActivoFijo!=null && this.jInternalFrameDetalleFormDetalleActivoFijo.depreciacionactivofijoBeanSwingJInternalFrame!=null) {
			this.jInternalFrameDetalleFormDetalleActivoFijo.jTabbedPaneRelacionesDetalleActivoFijo.remove(this.jInternalFrameDetalleFormDetalleActivoFijo.depreciacionactivofijoBeanSwingJInternalFrame.getContentPane());
		}

		if(!this.isTienePermisosGastoDepreciacionCentroCosto && this.jInternalFrameDetalleFormDetalleActivoFijo!=null && this.jInternalFrameDetalleFormDetalleActivoFijo.gastodepreciacioncentrocostoBeanSwingJInternalFrame!=null) {
			this.jInternalFrameDetalleFormDetalleActivoFijo.jTabbedPaneRelacionesDetalleActivoFijo.remove(this.jInternalFrameDetalleFormDetalleActivoFijo.gastodepreciacioncentrocostoBeanSwingJInternalFrame.getContentPane());
		}

		if(!this.isTienePermisosParteActivoFijo && this.jInternalFrameDetalleFormDetalleActivoFijo!=null && this.jInternalFrameDetalleFormDetalleActivoFijo.parteactivofijoBeanSwingJInternalFrame!=null) {
			this.jInternalFrameDetalleFormDetalleActivoFijo.jTabbedPaneRelacionesDetalleActivoFijo.remove(this.jInternalFrameDetalleFormDetalleActivoFijo.parteactivofijoBeanSwingJInternalFrame.getContentPane());
		}
	}
	
	public void setPermisosUsuarioDetalleActivoFijo() throws Exception {
		
		PerfilOpcion perfilOpcionUsuario=new PerfilOpcion();		
		Long idOpcion=this.opcionActual.getId();
		
		if(DetalleActivoFijoJInternalFrame.CON_LLAMADA_SIMPLE) {
			perfilOpcionUsuario=this.sistemaReturnGeneral.getPerfilOpcion();
			
		} else {
			if(this.detalleactivofijoSessionBean.getEsGuardarRelacionado()) {
				idOpcion=0L;
			}
			
			if(Constantes.ISUSAEJBLOGICLAYER) {	
				perfilOpcionUsuario=sistemaLogicAdditional.traerPermisosPaginaWebPerfilOpcion(this.usuarioActual, Constantes.LIDSISTEMAACTUAL, DetalleActivoFijoConstantesFunciones.SNOMBREOPCION,idOpcion);				
			} else if(Constantes.ISUSAEJBREMOTE) {
			} else if(Constantes.ISUSAEJBHOME) {
			}
		}
		
		if(perfilOpcionUsuario!=null && perfilOpcionUsuario.getId()>0) {
			this.isPermisoNuevoDetalleActivoFijo=perfilOpcionUsuario.getingreso()||perfilOpcionUsuario.gettodo();
			this.isPermisoActualizarDetalleActivoFijo=perfilOpcionUsuario.getmodificacion()||perfilOpcionUsuario.gettodo();
			this.isPermisoActualizarOriginalDetalleActivoFijo=this.isPermisoActualizarDetalleActivoFijo;
			this.isPermisoEliminarDetalleActivoFijo=perfilOpcionUsuario.geteliminacion()||perfilOpcionUsuario.gettodo();
			this.isPermisoGuardarCambiosDetalleActivoFijo=perfilOpcionUsuario.getguardar_cambios()||perfilOpcionUsuario.gettodo();
			this.isPermisoConsultaDetalleActivoFijo=perfilOpcionUsuario.getconsulta()||perfilOpcionUsuario.gettodo();
			this.isPermisoBusquedaDetalleActivoFijo=perfilOpcionUsuario.getbusqueda()||perfilOpcionUsuario.gettodo();
			this.isPermisoTodoDetalleActivoFijo=perfilOpcionUsuario.gettodo()||perfilOpcionUsuario.gettodo();
			this.isPermisoReporteDetalleActivoFijo=perfilOpcionUsuario.getreporte()||perfilOpcionUsuario.gettodo();
			this.isPermisoOrdenDetalleActivoFijo=perfilOpcionUsuario.getorden()||perfilOpcionUsuario.gettodo();
			this.isPermisoPaginacionMedioDetalleActivoFijo=perfilOpcionUsuario.getpaginacion_medio()||perfilOpcionUsuario.gettodo();
			this.isPermisoPaginacionAltoDetalleActivoFijo=perfilOpcionUsuario.getpaginacion_alto()||perfilOpcionUsuario.gettodo();
			this.isPermisoPaginacionTodoDetalleActivoFijo=perfilOpcionUsuario.getpaginacion_todo()||perfilOpcionUsuario.gettodo();
			this.isPermisoCopiarDetalleActivoFijo=perfilOpcionUsuario.getcopiar()||perfilOpcionUsuario.gettodo();
			this.isPermisoVerFormDetalleActivoFijo=true;//perfilOpcionUsuario.getver_form()||perfilOpcionUsuario.gettodo();
			this.isPermisoDuplicarDetalleActivoFijo=perfilOpcionUsuario.getduplicar()||perfilOpcionUsuario.gettodo();
			this.isPermisoOrdenDetalleActivoFijo=perfilOpcionUsuario.getorden()||perfilOpcionUsuario.gettodo();
			
			if(this.detalleactivofijoSessionBean.getEsGuardarRelacionado()) {
				this.opcionActual.setId(perfilOpcionUsuario.getid_opcion());
				
				this.jTableDatosDetalleActivoFijo.setToolTipText(this.jTableDatosDetalleActivoFijo.getToolTipText()+"_"+perfilOpcionUsuario.getid_opcion());		
			}
		} else {
			this.setPermisosUsuarioDetalleActivoFijo(false);
		}
		
		//SI SE NECESITA PONER TODOS LOS PERMISOS POR DEFECTO
		//
		
	}
	
	public void setAccionesUsuarioDetalleActivoFijo(Boolean esParaAccionesFormulario) throws Exception {		
		Reporte reporte=null;
		
		if(!esParaAccionesFormulario) {
			this.accions=new ArrayList<Accion>();
			
			if(DetalleActivoFijoJInternalFrame.CON_LLAMADA_SIMPLE) {
				this.accions=this.sistemaReturnGeneral.getAccions();
				
				
			} else {
				if(Constantes.ISUSAEJBLOGICLAYER) {	
					this.accions=sistemaLogicAdditional.getAccionesUsuario(this.usuarioActual,this.opcionActual,false);				
				} else if(Constantes.ISUSAEJBREMOTE) {
				} else if(Constantes.ISUSAEJBHOME) {
				}
			}
			
			if(this.accions.size()>0) {			
				for(Accion accion:this.accions) {
					reporte=new Reporte();
					reporte.setsCodigo(accion.getcodigo());
					reporte.setsDescripcion(accion.getnombre());
		
		
					this.tiposAcciones.add(reporte);
				}
			}	
			
			

			reporte=new Reporte();
			reporte.setsCodigo("");
			reporte.setsDescripcion("");

			this.tiposAcciones.add(reporte);
			
		} else {
			//ACCIONES FORMULARIO
			this.accionsFormulario=new ArrayList<Accion>();
			
			if(DetalleActivoFijoJInternalFrame.CON_LLAMADA_SIMPLE) {
				this.accionsFormulario=this.sistemaReturnGeneral.getAccionsFormulario();
			
			} else {
				if(Constantes.ISUSAEJBLOGICLAYER) {	
					this.accionsFormulario=sistemaLogicAdditional.getAccionesUsuario(this.usuarioActual,this.opcionActual,true);				
				} else if(Constantes.ISUSAEJBREMOTE) {
				} else if(Constantes.ISUSAEJBHOME) {
				}
			}
			
			if(this.accionsFormulario.size()>0) {			
				for(Accion accion:this.accionsFormulario) {
					reporte=new Reporte();
					reporte.setsCodigo(accion.getcodigo());
					reporte.setsDescripcion(accion.getnombre());
					
					this.tiposAccionesFormulario.add(reporte);
				}
			}	
			
			

			reporte=new Reporte();
			reporte.setsCodigo("");
			reporte.setsDescripcion("");

			this.tiposAccionesFormulario.add(reporte);
		}				
	}	 	
	
	public void setRelacionesUsuarioDetalleActivoFijo() throws Exception {
		Reporte reporte=null;
		
		

		if(this.isTienePermisosMantenimientoActivoFijo && this.detalleactivofijoConstantesFunciones.mostrarMantenimientoActivoFijoDetalleActivoFijo && !DetalleActivoFijoConstantesFunciones.ISGUARDARREL) {

			reporte=new Reporte();
			reporte.setsCodigo("Mantenimiento Activo Fijo");
			reporte.setsDescripcion("Mantenimiento Activo Fijo");
			this.tiposRelaciones.add(reporte);
		}

		if(this.isTienePermisosServicioTransporte && this.detalleactivofijoConstantesFunciones.mostrarServicioTransporteDetalleActivoFijo && !DetalleActivoFijoConstantesFunciones.ISGUARDARREL) {

			reporte=new Reporte();
			reporte.setsCodigo("Servicio Transporte");
			reporte.setsDescripcion("Servicio Transporte");
			this.tiposRelaciones.add(reporte);
		}

		if(this.isTienePermisosMovimientoActivoFijo && this.detalleactivofijoConstantesFunciones.mostrarMovimientoActivoFijoDetalleActivoFijo && !DetalleActivoFijoConstantesFunciones.ISGUARDARREL) {

			reporte=new Reporte();
			reporte.setsCodigo("Movimiento Activo Fijo");
			reporte.setsDescripcion("Movimiento Activo Fijo");
			this.tiposRelaciones.add(reporte);
		}

		if(this.isTienePermisosVehiculo && this.detalleactivofijoConstantesFunciones.mostrarVehiculoDetalleActivoFijo && !DetalleActivoFijoConstantesFunciones.ISGUARDARREL) {

			reporte=new Reporte();
			reporte.setsCodigo("Vehiculo");
			reporte.setsDescripcion("Vehiculo");
			this.tiposRelaciones.add(reporte);
		}

		if(this.isTienePermisosMetodoDepreciacion && this.detalleactivofijoConstantesFunciones.mostrarMetodoDepreciacionDetalleActivoFijo && !DetalleActivoFijoConstantesFunciones.ISGUARDARREL) {

			reporte=new Reporte();
			reporte.setsCodigo("Metodo Depreciacion");
			reporte.setsDescripcion("Metodo Depreciacion");
			this.tiposRelaciones.add(reporte);
		}

		if(this.isTienePermisosResponsableActivoFijo && this.detalleactivofijoConstantesFunciones.mostrarResponsableActivoFijoDetalleActivoFijo && !DetalleActivoFijoConstantesFunciones.ISGUARDARREL) {

			reporte=new Reporte();
			reporte.setsCodigo("Responsable Activo Fijo");
			reporte.setsDescripcion("Responsable Activo Fijo");
			this.tiposRelaciones.add(reporte);
		}

		if(this.isTienePermisosDepreciacionActivoFijo && this.detalleactivofijoConstantesFunciones.mostrarDepreciacionActivoFijoDetalleActivoFijo && !DetalleActivoFijoConstantesFunciones.ISGUARDARREL) {

			reporte=new Reporte();
			reporte.setsCodigo("Depreciacion Activo Fijo");
			reporte.setsDescripcion("Depreciacion Activo Fijo");
			this.tiposRelaciones.add(reporte);
		}

		if(this.isTienePermisosGastoDepreciacionCentroCosto && this.detalleactivofijoConstantesFunciones.mostrarGastoDepreciacionCentroCostoDetalleActivoFijo && !DetalleActivoFijoConstantesFunciones.ISGUARDARREL) {

			reporte=new Reporte();
			reporte.setsCodigo("Gasto Depreciacion Centro Costo");
			reporte.setsDescripcion("Gasto Depreciacion Centro Costo");
			this.tiposRelaciones.add(reporte);
		}

		if(this.isTienePermisosParteActivoFijo && this.detalleactivofijoConstantesFunciones.mostrarParteActivoFijoDetalleActivoFijo && !DetalleActivoFijoConstantesFunciones.ISGUARDARREL) {

			reporte=new Reporte();
			reporte.setsCodigo("Parte Activo Fijo");
			reporte.setsDescripcion("Parte Activo Fijo");
			this.tiposRelaciones.add(reporte);
		}
		
		
		//ORDENAR ALFABETICAMENTE
		Collections.sort(this.tiposRelaciones, new ReporteComparator());
		/*
		reporte=new Reporte();
		reporte.setsCodigo(accion.getcodigo());
		reporte.setsDescripcion(accion.getnombre());
			
		this.tiposRelaciones.add(reporte);
		*/
	}	
	
		
	@SuppressWarnings({ "unchecked", "rawtypes" } )
	public void inicializarCombosForeignKeyDetalleActivoFijoListas()throws Exception {
		try	{						
			
				this.empresasForeignKey=new ArrayList();
				this.sucursalsForeignKey=new ArrayList();
				this.detallegrupoactivofijosForeignKey=new ArrayList();
				this.subgrupoactivofijosForeignKey=new ArrayList();
				this.tiporamoactivofijosForeignKey=new ArrayList();
				this.tipoactivofijoempresasForeignKey=new ArrayList();
				this.tipodepreciacionempresasForeignKey=new ArrayList();
				this.estadoactivofijosForeignKey=new ArrayList();
				this.clientesForeignKey=new ArrayList();
				this.partidapresusForeignKey=new ArrayList();
		} catch(Exception e) {
			throw e;
		}		
	}
	
	public void cargarCombosTodosForeignKeyDetalleActivoFijoListas(Boolean cargarCombosDependencia)throws Exception {
		try	{
			
			ArrayList<String> arrColumnasGlobales=new ArrayList<String>();
			String  finalQueryGlobal="";
			String sFinalQueryCombo="";
			
			Modulo  moduloActualAux=new Modulo();
			
			if(DetalleActivoFijoJInternalFrame.ISLOAD_FKLOTE) {
				this.cargarCombosLoteForeignKeyDetalleActivoFijoListas(false);
			} else {
			
				this.cargarCombosForeignKeyEmpresaListas(cargarCombosDependencia,sFinalQueryCombo);
				this.cargarCombosForeignKeySucursalListas(cargarCombosDependencia,sFinalQueryCombo);
				this.cargarCombosForeignKeyDetalleGrupoActivoFijoListas(cargarCombosDependencia,sFinalQueryCombo);
				this.cargarCombosForeignKeySubGrupoActivoFijoListas(cargarCombosDependencia,sFinalQueryCombo);
				this.cargarCombosForeignKeyTipoRamoActivoFijoListas(cargarCombosDependencia,sFinalQueryCombo);
				this.cargarCombosForeignKeyTipoActivoFijoEmpresaListas(cargarCombosDependencia,sFinalQueryCombo);
				this.cargarCombosForeignKeyTipoDepreciacionEmpresaListas(cargarCombosDependencia,sFinalQueryCombo);
				this.cargarCombosForeignKeyEstadoActivoFijoListas(cargarCombosDependencia,sFinalQueryCombo);
				this.cargarCombosForeignKeyClienteListas(cargarCombosDependencia,sFinalQueryCombo);
				this.cargarCombosForeignKeyPartidaPresuListas(cargarCombosDependencia,sFinalQueryCombo);
			}
		} catch(Exception e) {
			throw e;
		}		
	}		
	
	

	public void cargarCombosForeignKeyEmpresaListas(Boolean cargarCombosDependencia,String sFinalQuery)throws Exception {
		try	{
			ArrayList<String> arrColumnasGlobales=new ArrayList<String>();

			String  finalQueryGlobal="";

			Modulo  moduloActualAux=new Modulo();

			if((this.empresasForeignKey==null||this.empresasForeignKey.size()<=0)) {
				this.arrDatoGeneral= new  ArrayList<DatoGeneral>();
				this.arrDatoGeneralNo= new  ArrayList<String>();

				arrColumnasGlobales=EmpresaConstantesFunciones.getArrayColumnasGlobalesEmpresa(this.arrDatoGeneral,this.arrDatoGeneralNo);
				finalQueryGlobal=Funciones.GetWhereGlobalConstants(this.parametroGeneralUsuario,this.moduloActual,true,false,arrColumnasGlobales,EmpresaConstantesFunciones.TABLENAME);

				finalQueryGlobal=Funciones.GetFinalQueryAppend(finalQueryGlobal, sFinalQuery);
				finalQueryGlobal=Funciones.GetFinalQueryAppend(finalQueryGlobal, "");

				finalQueryGlobal+=EmpresaConstantesFunciones.SFINALQUERY;

				this.cargarCombosEmpresasForeignKeyLista(finalQueryGlobal);
			}

		} catch(Exception e) {
			throw e;
		}
	}

	public void cargarCombosForeignKeySucursalListas(Boolean cargarCombosDependencia,String sFinalQuery)throws Exception {
		try	{
			ArrayList<String> arrColumnasGlobales=new ArrayList<String>();

			String  finalQueryGlobal="";

			Modulo  moduloActualAux=new Modulo();

			if((this.sucursalsForeignKey==null||this.sucursalsForeignKey.size()<=0)) {
				this.arrDatoGeneral= new  ArrayList<DatoGeneral>();
				this.arrDatoGeneralNo= new  ArrayList<String>();

				arrColumnasGlobales=SucursalConstantesFunciones.getArrayColumnasGlobalesSucursal(this.arrDatoGeneral,this.arrDatoGeneralNo);
				finalQueryGlobal=Funciones.GetWhereGlobalConstants(this.parametroGeneralUsuario,this.moduloActual,true,false,arrColumnasGlobales,SucursalConstantesFunciones.TABLENAME);

				finalQueryGlobal=Funciones.GetFinalQueryAppend(finalQueryGlobal, sFinalQuery);
				finalQueryGlobal=Funciones.GetFinalQueryAppend(finalQueryGlobal, "");

				finalQueryGlobal+=SucursalConstantesFunciones.SFINALQUERY;

				this.cargarCombosSucursalsForeignKeyLista(finalQueryGlobal);
			}

		} catch(Exception e) {
			throw e;
		}
	}

	public void cargarCombosForeignKeyDetalleGrupoActivoFijoListas(Boolean cargarCombosDependencia,String sFinalQuery)throws Exception {
		try	{
			ArrayList<String> arrColumnasGlobales=new ArrayList<String>();

			String  finalQueryGlobal="";

			Modulo  moduloActualAux=new Modulo();

			if((this.detallegrupoactivofijosForeignKey==null||this.detallegrupoactivofijosForeignKey.size()<=0)) {
				this.arrDatoGeneral= new  ArrayList<DatoGeneral>();
				this.arrDatoGeneralNo= new  ArrayList<String>();

				arrColumnasGlobales=DetalleGrupoActivoFijoConstantesFunciones.getArrayColumnasGlobalesDetalleGrupoActivoFijo(this.arrDatoGeneral,this.arrDatoGeneralNo);
				finalQueryGlobal=Funciones.GetWhereGlobalConstants(this.parametroGeneralUsuario,this.moduloActual,true,false,arrColumnasGlobales,DetalleGrupoActivoFijoConstantesFunciones.TABLENAME);

				finalQueryGlobal=Funciones.GetFinalQueryAppend(finalQueryGlobal, sFinalQuery);
				finalQueryGlobal=Funciones.GetFinalQueryAppend(finalQueryGlobal, "");

				finalQueryGlobal+=DetalleGrupoActivoFijoConstantesFunciones.SFINALQUERY;

				this.cargarCombosDetalleGrupoActivoFijosForeignKeyLista(finalQueryGlobal);
			}

		} catch(Exception e) {
			throw e;
		}
	}

	public void cargarCombosForeignKeySubGrupoActivoFijoListas(Boolean cargarCombosDependencia,String sFinalQuery)throws Exception {
		try	{
			ArrayList<String> arrColumnasGlobales=new ArrayList<String>();

			String  finalQueryGlobal="";

			Modulo  moduloActualAux=new Modulo();

			if(cargarCombosDependencia && (this.subgrupoactivofijosForeignKey==null||this.subgrupoactivofijosForeignKey.size()<=0)) {
				this.arrDatoGeneral= new  ArrayList<DatoGeneral>();
				this.arrDatoGeneralNo= new  ArrayList<String>();

				arrColumnasGlobales=SubGrupoActivoFijoConstantesFunciones.getArrayColumnasGlobalesSubGrupoActivoFijo(this.arrDatoGeneral,this.arrDatoGeneralNo);
				finalQueryGlobal=Funciones.GetWhereGlobalConstants(this.parametroGeneralUsuario,this.moduloActual,true,false,arrColumnasGlobales,SubGrupoActivoFijoConstantesFunciones.TABLENAME);

				finalQueryGlobal=Funciones.GetFinalQueryAppend(finalQueryGlobal, sFinalQuery);
				finalQueryGlobal=Funciones.GetFinalQueryAppend(finalQueryGlobal, "");

				finalQueryGlobal+=SubGrupoActivoFijoConstantesFunciones.SFINALQUERY;

				this.cargarCombosSubGrupoActivoFijosForeignKeyLista(finalQueryGlobal);
			}

		} catch(Exception e) {
			throw e;
		}
	}

	public void cargarCombosForeignKeyTipoRamoActivoFijoListas(Boolean cargarCombosDependencia,String sFinalQuery)throws Exception {
		try	{
			ArrayList<String> arrColumnasGlobales=new ArrayList<String>();

			String  finalQueryGlobal="";

			Modulo  moduloActualAux=new Modulo();

			if((this.tiporamoactivofijosForeignKey==null||this.tiporamoactivofijosForeignKey.size()<=0)) {
				this.arrDatoGeneral= new  ArrayList<DatoGeneral>();
				this.arrDatoGeneralNo= new  ArrayList<String>();

				arrColumnasGlobales=TipoRamoActivoFijoConstantesFunciones.getArrayColumnasGlobalesTipoRamoActivoFijo(this.arrDatoGeneral,this.arrDatoGeneralNo);
				finalQueryGlobal=Funciones.GetWhereGlobalConstants(this.parametroGeneralUsuario,this.moduloActual,true,false,arrColumnasGlobales,TipoRamoActivoFijoConstantesFunciones.TABLENAME);

				finalQueryGlobal=Funciones.GetFinalQueryAppend(finalQueryGlobal, sFinalQuery);
				finalQueryGlobal=Funciones.GetFinalQueryAppend(finalQueryGlobal, "");

				finalQueryGlobal+=TipoRamoActivoFijoConstantesFunciones.SFINALQUERY;

				this.cargarCombosTipoRamoActivoFijosForeignKeyLista(finalQueryGlobal);
			}

		} catch(Exception e) {
			throw e;
		}
	}

	public void cargarCombosForeignKeyTipoActivoFijoEmpresaListas(Boolean cargarCombosDependencia,String sFinalQuery)throws Exception {
		try	{
			ArrayList<String> arrColumnasGlobales=new ArrayList<String>();

			String  finalQueryGlobal="";

			Modulo  moduloActualAux=new Modulo();

			if((this.tipoactivofijoempresasForeignKey==null||this.tipoactivofijoempresasForeignKey.size()<=0)) {
				this.arrDatoGeneral= new  ArrayList<DatoGeneral>();
				this.arrDatoGeneralNo= new  ArrayList<String>();

				arrColumnasGlobales=TipoActivoFijoEmpresaConstantesFunciones.getArrayColumnasGlobalesTipoActivoFijoEmpresa(this.arrDatoGeneral,this.arrDatoGeneralNo);
				finalQueryGlobal=Funciones.GetWhereGlobalConstants(this.parametroGeneralUsuario,this.moduloActual,true,false,arrColumnasGlobales,TipoActivoFijoEmpresaConstantesFunciones.TABLENAME);

				finalQueryGlobal=Funciones.GetFinalQueryAppend(finalQueryGlobal, sFinalQuery);
				finalQueryGlobal=Funciones.GetFinalQueryAppend(finalQueryGlobal, "");

				finalQueryGlobal+=TipoActivoFijoEmpresaConstantesFunciones.SFINALQUERY;

				this.cargarCombosTipoActivoFijoEmpresasForeignKeyLista(finalQueryGlobal);
			}

		} catch(Exception e) {
			throw e;
		}
	}

	public void cargarCombosForeignKeyTipoDepreciacionEmpresaListas(Boolean cargarCombosDependencia,String sFinalQuery)throws Exception {
		try	{
			ArrayList<String> arrColumnasGlobales=new ArrayList<String>();

			String  finalQueryGlobal="";

			Modulo  moduloActualAux=new Modulo();

			if((this.tipodepreciacionempresasForeignKey==null||this.tipodepreciacionempresasForeignKey.size()<=0)) {
				this.arrDatoGeneral= new  ArrayList<DatoGeneral>();
				this.arrDatoGeneralNo= new  ArrayList<String>();

				arrColumnasGlobales=TipoDepreciacionEmpresaConstantesFunciones.getArrayColumnasGlobalesTipoDepreciacionEmpresa(this.arrDatoGeneral,this.arrDatoGeneralNo);
				finalQueryGlobal=Funciones.GetWhereGlobalConstants(this.parametroGeneralUsuario,this.moduloActual,true,false,arrColumnasGlobales,TipoDepreciacionEmpresaConstantesFunciones.TABLENAME);

				finalQueryGlobal=Funciones.GetFinalQueryAppend(finalQueryGlobal, sFinalQuery);
				finalQueryGlobal=Funciones.GetFinalQueryAppend(finalQueryGlobal, "");

				finalQueryGlobal+=TipoDepreciacionEmpresaConstantesFunciones.SFINALQUERY;

				this.cargarCombosTipoDepreciacionEmpresasForeignKeyLista(finalQueryGlobal);
			}

		} catch(Exception e) {
			throw e;
		}
	}

	public void cargarCombosForeignKeyEstadoActivoFijoListas(Boolean cargarCombosDependencia,String sFinalQuery)throws Exception {
		try	{
			ArrayList<String> arrColumnasGlobales=new ArrayList<String>();

			String  finalQueryGlobal="";

			Modulo  moduloActualAux=new Modulo();

			if((this.estadoactivofijosForeignKey==null||this.estadoactivofijosForeignKey.size()<=0)) {
				this.arrDatoGeneral= new  ArrayList<DatoGeneral>();
				this.arrDatoGeneralNo= new  ArrayList<String>();

				arrColumnasGlobales=EstadoActivoFijoConstantesFunciones.getArrayColumnasGlobalesEstadoActivoFijo(this.arrDatoGeneral,this.arrDatoGeneralNo);
				finalQueryGlobal=Funciones.GetWhereGlobalConstants(this.parametroGeneralUsuario,this.moduloActual,true,false,arrColumnasGlobales,EstadoActivoFijoConstantesFunciones.TABLENAME);

				finalQueryGlobal=Funciones.GetFinalQueryAppend(finalQueryGlobal, sFinalQuery);
				finalQueryGlobal=Funciones.GetFinalQueryAppend(finalQueryGlobal, "");

				finalQueryGlobal+=EstadoActivoFijoConstantesFunciones.SFINALQUERY;

				this.cargarCombosEstadoActivoFijosForeignKeyLista(finalQueryGlobal);
			}

		} catch(Exception e) {
			throw e;
		}
	}

	public void cargarCombosForeignKeyClienteListas(Boolean cargarCombosDependencia,String sFinalQuery)throws Exception {
		try	{
			ArrayList<String> arrColumnasGlobales=new ArrayList<String>();

			String  finalQueryGlobal="";

			Modulo  moduloActualAux=new Modulo();

			if((this.clientesForeignKey==null||this.clientesForeignKey.size()<=0)) {
				this.arrDatoGeneral= new  ArrayList<DatoGeneral>();
				this.arrDatoGeneralNo= new  ArrayList<String>();

				arrColumnasGlobales=ClienteConstantesFunciones.getArrayColumnasGlobalesCliente(this.arrDatoGeneral,this.arrDatoGeneralNo);
				finalQueryGlobal=Funciones.GetWhereGlobalConstants(this.parametroGeneralUsuario,this.moduloActual,true,false,arrColumnasGlobales,ClienteConstantesFunciones.TABLENAME);

				finalQueryGlobal=Funciones.GetFinalQueryAppend(finalQueryGlobal, sFinalQuery);
				finalQueryGlobal=Funciones.GetFinalQueryAppend(finalQueryGlobal, "");

				finalQueryGlobal+=ClienteConstantesFunciones.SFINALQUERY;

				this.cargarCombosClientesForeignKeyLista(finalQueryGlobal);
			}

		} catch(Exception e) {
			throw e;
		}
	}

	public void cargarCombosForeignKeyPartidaPresuListas(Boolean cargarCombosDependencia,String sFinalQuery)throws Exception {
		try	{
			ArrayList<String> arrColumnasGlobales=new ArrayList<String>();

			String  finalQueryGlobal="";

			Modulo  moduloActualAux=new Modulo();

			if((this.partidapresusForeignKey==null||this.partidapresusForeignKey.size()<=0)) {
				this.arrDatoGeneral= new  ArrayList<DatoGeneral>();
				this.arrDatoGeneralNo= new  ArrayList<String>();

				arrColumnasGlobales=PartidaPresuConstantesFunciones.getArrayColumnasGlobalesPartidaPresu(this.arrDatoGeneral,this.arrDatoGeneralNo);
				finalQueryGlobal=Funciones.GetWhereGlobalConstants(this.parametroGeneralUsuario,this.moduloActual,true,false,arrColumnasGlobales,PartidaPresuConstantesFunciones.TABLENAME);

				finalQueryGlobal=Funciones.GetFinalQueryAppend(finalQueryGlobal, sFinalQuery);
				finalQueryGlobal=Funciones.GetFinalQueryAppend(finalQueryGlobal, "");

				finalQueryGlobal+=PartidaPresuConstantesFunciones.SFINALQUERY;

				this.cargarCombosPartidaPresusForeignKeyLista(finalQueryGlobal);
			}

		} catch(Exception e) {
			throw e;
		}
	}
	
	public void cargarCombosLoteForeignKeyDetalleActivoFijoListas(Boolean cargarCombosDependencia)throws Exception {
		try	{
			
			ArrayList<String> arrColumnasGlobales=new ArrayList<String>();
			String  finalQueryGlobal="";
			
			Modulo  moduloActualAux=new Modulo();
			
			
			DetalleActivoFijoParameterReturnGeneral detalleactivofijoReturnGeneral=new DetalleActivoFijoParameterReturnGeneral();
						
			


				String finalQueryGlobalEmpresa="";

				if(((this.empresasForeignKey==null||this.empresasForeignKey.size()<=0) && this.detalleactivofijoConstantesFunciones.cargarid_empresaDetalleActivoFijo)
					 || (this.esRecargarFks && this.detalleactivofijoConstantesFunciones.cargarid_empresaDetalleActivoFijo)) {

					if(!this.detalleactivofijoSessionBean.getisBusquedaDesdeForeignKeySesionEmpresa()) {

						this.arrDatoGeneral= new  ArrayList<DatoGeneral>();
						this.arrDatoGeneralNo= new  ArrayList<String>();


						arrColumnasGlobales=EmpresaConstantesFunciones.getArrayColumnasGlobalesEmpresa(this.arrDatoGeneral,this.arrDatoGeneralNo);
						finalQueryGlobalEmpresa=Funciones.GetWhereGlobalConstants(this.parametroGeneralUsuario,this.moduloActual,true,false,arrColumnasGlobales,EmpresaConstantesFunciones.TABLENAME);

						finalQueryGlobalEmpresa=Funciones.GetFinalQueryAppend(finalQueryGlobalEmpresa, "");
						finalQueryGlobalEmpresa+=EmpresaConstantesFunciones.SFINALQUERY;

						//this.cargarCombosEmpresasForeignKeyLista(finalQueryGlobal);
					} else {
						finalQueryGlobalEmpresa=" WHERE " + ConstantesSql.ID + "="+detalleactivofijoSessionBean.getlidEmpresaActual();
					}
				} else {
					finalQueryGlobalEmpresa="NONE";
				}


				String finalQueryGlobalSucursal="";

				if(((this.sucursalsForeignKey==null||this.sucursalsForeignKey.size()<=0) && this.detalleactivofijoConstantesFunciones.cargarid_sucursalDetalleActivoFijo)
					 || (this.esRecargarFks && this.detalleactivofijoConstantesFunciones.cargarid_sucursalDetalleActivoFijo)) {

					if(!this.detalleactivofijoSessionBean.getisBusquedaDesdeForeignKeySesionSucursal()) {

						this.arrDatoGeneral= new  ArrayList<DatoGeneral>();
						this.arrDatoGeneralNo= new  ArrayList<String>();


						arrColumnasGlobales=SucursalConstantesFunciones.getArrayColumnasGlobalesSucursal(this.arrDatoGeneral,this.arrDatoGeneralNo);
						finalQueryGlobalSucursal=Funciones.GetWhereGlobalConstants(this.parametroGeneralUsuario,this.moduloActual,true,false,arrColumnasGlobales,SucursalConstantesFunciones.TABLENAME);

						finalQueryGlobalSucursal=Funciones.GetFinalQueryAppend(finalQueryGlobalSucursal, "");
						finalQueryGlobalSucursal+=SucursalConstantesFunciones.SFINALQUERY;

						//this.cargarCombosSucursalsForeignKeyLista(finalQueryGlobal);
					} else {
						finalQueryGlobalSucursal=" WHERE " + ConstantesSql.ID + "="+detalleactivofijoSessionBean.getlidSucursalActual();
					}
				} else {
					finalQueryGlobalSucursal="NONE";
				}


				String finalQueryGlobalDetalleGrupoActivoFijo="";

				if(((this.detallegrupoactivofijosForeignKey==null||this.detallegrupoactivofijosForeignKey.size()<=0) && this.detalleactivofijoConstantesFunciones.cargarid_detalle_grupo_activo_fijoDetalleActivoFijo)
					 || (this.esRecargarFks && this.detalleactivofijoConstantesFunciones.cargarid_detalle_grupo_activo_fijoDetalleActivoFijo)) {

					if(!this.detalleactivofijoSessionBean.getisBusquedaDesdeForeignKeySesionDetalleGrupoActivoFijo()) {

						this.arrDatoGeneral= new  ArrayList<DatoGeneral>();
						this.arrDatoGeneralNo= new  ArrayList<String>();


						arrColumnasGlobales=DetalleGrupoActivoFijoConstantesFunciones.getArrayColumnasGlobalesDetalleGrupoActivoFijo(this.arrDatoGeneral,this.arrDatoGeneralNo);
						finalQueryGlobalDetalleGrupoActivoFijo=Funciones.GetWhereGlobalConstants(this.parametroGeneralUsuario,this.moduloActual,true,false,arrColumnasGlobales,DetalleGrupoActivoFijoConstantesFunciones.TABLENAME);

						finalQueryGlobalDetalleGrupoActivoFijo=Funciones.GetFinalQueryAppend(finalQueryGlobalDetalleGrupoActivoFijo, "");
						finalQueryGlobalDetalleGrupoActivoFijo+=DetalleGrupoActivoFijoConstantesFunciones.SFINALQUERY;

						//this.cargarCombosDetalleGrupoActivoFijosForeignKeyLista(finalQueryGlobal);
					} else {
						finalQueryGlobalDetalleGrupoActivoFijo=" WHERE " + ConstantesSql.ID + "="+detalleactivofijoSessionBean.getlidDetalleGrupoActivoFijoActual();
					}
				} else {
					finalQueryGlobalDetalleGrupoActivoFijo="NONE";
				}


				String finalQueryGlobalSubGrupoActivoFijo="";

				if(cargarCombosDependencia && ((this.subgrupoactivofijosForeignKey==null||this.subgrupoactivofijosForeignKey.size()<=0) && this.detalleactivofijoConstantesFunciones.cargarid_sub_grupo_activo_fijoDetalleActivoFijo)
					 || (this.esRecargarFks && this.detalleactivofijoConstantesFunciones.cargarid_sub_grupo_activo_fijoDetalleActivoFijo)) {

					if(!this.detalleactivofijoSessionBean.getisBusquedaDesdeForeignKeySesionSubGrupoActivoFijo()) {

						this.arrDatoGeneral= new  ArrayList<DatoGeneral>();
						this.arrDatoGeneralNo= new  ArrayList<String>();


						arrColumnasGlobales=SubGrupoActivoFijoConstantesFunciones.getArrayColumnasGlobalesSubGrupoActivoFijo(this.arrDatoGeneral,this.arrDatoGeneralNo);
						finalQueryGlobalSubGrupoActivoFijo=Funciones.GetWhereGlobalConstants(this.parametroGeneralUsuario,this.moduloActual,true,false,arrColumnasGlobales,SubGrupoActivoFijoConstantesFunciones.TABLENAME);

						finalQueryGlobalSubGrupoActivoFijo=Funciones.GetFinalQueryAppend(finalQueryGlobalSubGrupoActivoFijo, "");
						finalQueryGlobalSubGrupoActivoFijo+=SubGrupoActivoFijoConstantesFunciones.SFINALQUERY;

						//this.cargarCombosSubGrupoActivoFijosForeignKeyLista(finalQueryGlobal);
					} else {
						finalQueryGlobalSubGrupoActivoFijo=" WHERE " + ConstantesSql.ID + "="+detalleactivofijoSessionBean.getlidSubGrupoActivoFijoActual();
					}
				} else {
					finalQueryGlobalSubGrupoActivoFijo="NONE";
				}


				String finalQueryGlobalTipoRamoActivoFijo="";

				if(((this.tiporamoactivofijosForeignKey==null||this.tiporamoactivofijosForeignKey.size()<=0) && this.detalleactivofijoConstantesFunciones.cargarid_tipo_ramo_activo_fijoDetalleActivoFijo)
					 || (this.esRecargarFks && this.detalleactivofijoConstantesFunciones.cargarid_tipo_ramo_activo_fijoDetalleActivoFijo)) {

					if(!this.detalleactivofijoSessionBean.getisBusquedaDesdeForeignKeySesionTipoRamoActivoFijo()) {

						this.arrDatoGeneral= new  ArrayList<DatoGeneral>();
						this.arrDatoGeneralNo= new  ArrayList<String>();


						arrColumnasGlobales=TipoRamoActivoFijoConstantesFunciones.getArrayColumnasGlobalesTipoRamoActivoFijo(this.arrDatoGeneral,this.arrDatoGeneralNo);
						finalQueryGlobalTipoRamoActivoFijo=Funciones.GetWhereGlobalConstants(this.parametroGeneralUsuario,this.moduloActual,true,false,arrColumnasGlobales,TipoRamoActivoFijoConstantesFunciones.TABLENAME);

						finalQueryGlobalTipoRamoActivoFijo=Funciones.GetFinalQueryAppend(finalQueryGlobalTipoRamoActivoFijo, "");
						finalQueryGlobalTipoRamoActivoFijo+=TipoRamoActivoFijoConstantesFunciones.SFINALQUERY;

						//this.cargarCombosTipoRamoActivoFijosForeignKeyLista(finalQueryGlobal);
					} else {
						finalQueryGlobalTipoRamoActivoFijo=" WHERE " + ConstantesSql.ID + "="+detalleactivofijoSessionBean.getlidTipoRamoActivoFijoActual();
					}
				} else {
					finalQueryGlobalTipoRamoActivoFijo="NONE";
				}


				String finalQueryGlobalTipoActivoFijoEmpresa="";

				if(((this.tipoactivofijoempresasForeignKey==null||this.tipoactivofijoempresasForeignKey.size()<=0) && this.detalleactivofijoConstantesFunciones.cargarid_tipo_activo_fijo_empresaDetalleActivoFijo)
					 || (this.esRecargarFks && this.detalleactivofijoConstantesFunciones.cargarid_tipo_activo_fijo_empresaDetalleActivoFijo)) {

					if(!this.detalleactivofijoSessionBean.getisBusquedaDesdeForeignKeySesionTipoActivoFijoEmpresa()) {

						this.arrDatoGeneral= new  ArrayList<DatoGeneral>();
						this.arrDatoGeneralNo= new  ArrayList<String>();


						arrColumnasGlobales=TipoActivoFijoEmpresaConstantesFunciones.getArrayColumnasGlobalesTipoActivoFijoEmpresa(this.arrDatoGeneral,this.arrDatoGeneralNo);
						finalQueryGlobalTipoActivoFijoEmpresa=Funciones.GetWhereGlobalConstants(this.parametroGeneralUsuario,this.moduloActual,true,false,arrColumnasGlobales,TipoActivoFijoEmpresaConstantesFunciones.TABLENAME);

						finalQueryGlobalTipoActivoFijoEmpresa=Funciones.GetFinalQueryAppend(finalQueryGlobalTipoActivoFijoEmpresa, "");
						finalQueryGlobalTipoActivoFijoEmpresa+=TipoActivoFijoEmpresaConstantesFunciones.SFINALQUERY;

						//this.cargarCombosTipoActivoFijoEmpresasForeignKeyLista(finalQueryGlobal);
					} else {
						finalQueryGlobalTipoActivoFijoEmpresa=" WHERE " + ConstantesSql.ID + "="+detalleactivofijoSessionBean.getlidTipoActivoFijoEmpresaActual();
					}
				} else {
					finalQueryGlobalTipoActivoFijoEmpresa="NONE";
				}


				String finalQueryGlobalTipoDepreciacionEmpresa="";

				if(((this.tipodepreciacionempresasForeignKey==null||this.tipodepreciacionempresasForeignKey.size()<=0) && this.detalleactivofijoConstantesFunciones.cargarid_tipo_depreciacion_empresaDetalleActivoFijo)
					 || (this.esRecargarFks && this.detalleactivofijoConstantesFunciones.cargarid_tipo_depreciacion_empresaDetalleActivoFijo)) {

					if(!this.detalleactivofijoSessionBean.getisBusquedaDesdeForeignKeySesionTipoDepreciacionEmpresa()) {

						this.arrDatoGeneral= new  ArrayList<DatoGeneral>();
						this.arrDatoGeneralNo= new  ArrayList<String>();


						arrColumnasGlobales=TipoDepreciacionEmpresaConstantesFunciones.getArrayColumnasGlobalesTipoDepreciacionEmpresa(this.arrDatoGeneral,this.arrDatoGeneralNo);
						finalQueryGlobalTipoDepreciacionEmpresa=Funciones.GetWhereGlobalConstants(this.parametroGeneralUsuario,this.moduloActual,true,false,arrColumnasGlobales,TipoDepreciacionEmpresaConstantesFunciones.TABLENAME);

						finalQueryGlobalTipoDepreciacionEmpresa=Funciones.GetFinalQueryAppend(finalQueryGlobalTipoDepreciacionEmpresa, "");
						finalQueryGlobalTipoDepreciacionEmpresa+=TipoDepreciacionEmpresaConstantesFunciones.SFINALQUERY;

						//this.cargarCombosTipoDepreciacionEmpresasForeignKeyLista(finalQueryGlobal);
					} else {
						finalQueryGlobalTipoDepreciacionEmpresa=" WHERE " + ConstantesSql.ID + "="+detalleactivofijoSessionBean.getlidTipoDepreciacionEmpresaActual();
					}
				} else {
					finalQueryGlobalTipoDepreciacionEmpresa="NONE";
				}


				String finalQueryGlobalEstadoActivoFijo="";

				if(((this.estadoactivofijosForeignKey==null||this.estadoactivofijosForeignKey.size()<=0) && this.detalleactivofijoConstantesFunciones.cargarid_estado_activo_fijoDetalleActivoFijo)
					 || (this.esRecargarFks && this.detalleactivofijoConstantesFunciones.cargarid_estado_activo_fijoDetalleActivoFijo)) {

					if(!this.detalleactivofijoSessionBean.getisBusquedaDesdeForeignKeySesionEstadoActivoFijo()) {

						this.arrDatoGeneral= new  ArrayList<DatoGeneral>();
						this.arrDatoGeneralNo= new  ArrayList<String>();


						arrColumnasGlobales=EstadoActivoFijoConstantesFunciones.getArrayColumnasGlobalesEstadoActivoFijo(this.arrDatoGeneral,this.arrDatoGeneralNo);
						finalQueryGlobalEstadoActivoFijo=Funciones.GetWhereGlobalConstants(this.parametroGeneralUsuario,this.moduloActual,true,false,arrColumnasGlobales,EstadoActivoFijoConstantesFunciones.TABLENAME);

						finalQueryGlobalEstadoActivoFijo=Funciones.GetFinalQueryAppend(finalQueryGlobalEstadoActivoFijo, "");
						finalQueryGlobalEstadoActivoFijo+=EstadoActivoFijoConstantesFunciones.SFINALQUERY;

						//this.cargarCombosEstadoActivoFijosForeignKeyLista(finalQueryGlobal);
					} else {
						finalQueryGlobalEstadoActivoFijo=" WHERE " + ConstantesSql.ID + "="+detalleactivofijoSessionBean.getlidEstadoActivoFijoActual();
					}
				} else {
					finalQueryGlobalEstadoActivoFijo="NONE";
				}


				String finalQueryGlobalCliente="";

				if(((this.clientesForeignKey==null||this.clientesForeignKey.size()<=0) && this.detalleactivofijoConstantesFunciones.cargarid_clienteDetalleActivoFijo)
					 || (this.esRecargarFks && this.detalleactivofijoConstantesFunciones.cargarid_clienteDetalleActivoFijo)) {

					if(!this.detalleactivofijoSessionBean.getisBusquedaDesdeForeignKeySesionCliente()) {

						this.arrDatoGeneral= new  ArrayList<DatoGeneral>();
						this.arrDatoGeneralNo= new  ArrayList<String>();


						arrColumnasGlobales=ClienteConstantesFunciones.getArrayColumnasGlobalesCliente(this.arrDatoGeneral,this.arrDatoGeneralNo);
						finalQueryGlobalCliente=Funciones.GetWhereGlobalConstants(this.parametroGeneralUsuario,this.moduloActual,true,false,arrColumnasGlobales,ClienteConstantesFunciones.TABLENAME);

						finalQueryGlobalCliente=Funciones.GetFinalQueryAppend(finalQueryGlobalCliente, "");
						finalQueryGlobalCliente+=ClienteConstantesFunciones.SFINALQUERY;

						//this.cargarCombosClientesForeignKeyLista(finalQueryGlobal);
					} else {
						finalQueryGlobalCliente=" WHERE " + ConstantesSql.ID + "="+detalleactivofijoSessionBean.getlidClienteActual();
					}
				} else {
					finalQueryGlobalCliente="NONE";
				}


				String finalQueryGlobalPartidaPresu="";

				if(((this.partidapresusForeignKey==null||this.partidapresusForeignKey.size()<=0) && this.detalleactivofijoConstantesFunciones.cargarid_partida_presuDetalleActivoFijo)
					 || (this.esRecargarFks && this.detalleactivofijoConstantesFunciones.cargarid_partida_presuDetalleActivoFijo)) {

					if(!this.detalleactivofijoSessionBean.getisBusquedaDesdeForeignKeySesionPartidaPresu()) {

						this.arrDatoGeneral= new  ArrayList<DatoGeneral>();
						this.arrDatoGeneralNo= new  ArrayList<String>();


						arrColumnasGlobales=PartidaPresuConstantesFunciones.getArrayColumnasGlobalesPartidaPresu(this.arrDatoGeneral,this.arrDatoGeneralNo);
						finalQueryGlobalPartidaPresu=Funciones.GetWhereGlobalConstants(this.parametroGeneralUsuario,this.moduloActual,true,false,arrColumnasGlobales,PartidaPresuConstantesFunciones.TABLENAME);

						finalQueryGlobalPartidaPresu=Funciones.GetFinalQueryAppend(finalQueryGlobalPartidaPresu, "");
						finalQueryGlobalPartidaPresu+=PartidaPresuConstantesFunciones.SFINALQUERY;

						//this.cargarCombosPartidaPresusForeignKeyLista(finalQueryGlobal);
					} else {
						finalQueryGlobalPartidaPresu=" WHERE " + ConstantesSql.ID + "="+detalleactivofijoSessionBean.getlidPartidaPresuActual();
					}
				} else {
					finalQueryGlobalPartidaPresu="NONE";
				}
			
			//ARCHITECTURE			
			if(Constantes.ISUSAEJBLOGICLAYER) {	
				detalleactivofijoReturnGeneral=detalleactivofijoLogic.cargarCombosLoteForeignKeyDetalleActivoFijo(finalQueryGlobalEmpresa,finalQueryGlobalSucursal,finalQueryGlobalDetalleGrupoActivoFijo,finalQueryGlobalSubGrupoActivoFijo,finalQueryGlobalTipoRamoActivoFijo,finalQueryGlobalTipoActivoFijoEmpresa,finalQueryGlobalTipoDepreciacionEmpresa,finalQueryGlobalEstadoActivoFijo,finalQueryGlobalCliente,finalQueryGlobalPartidaPresu);//WithConnection
			} else if(Constantes.ISUSAEJBREMOTE) {
			} else if(Constantes.ISUSAEJBHOME) {
			}			
			//ARCHITECTURE
			
			

			if(!finalQueryGlobalEmpresa.equals("NONE")) {
				this.empresasForeignKey=detalleactivofijoReturnGeneral.getempresasForeignKey();
			}

			if(!finalQueryGlobalSucursal.equals("NONE")) {
				this.sucursalsForeignKey=detalleactivofijoReturnGeneral.getsucursalsForeignKey();
			}

			if(!finalQueryGlobalDetalleGrupoActivoFijo.equals("NONE")) {
				this.detallegrupoactivofijosForeignKey=detalleactivofijoReturnGeneral.getdetallegrupoactivofijosForeignKey();
			}

			if(!finalQueryGlobalSubGrupoActivoFijo.equals("NONE")) {
				this.subgrupoactivofijosForeignKey=detalleactivofijoReturnGeneral.getsubgrupoactivofijosForeignKey();
			}

			if(!finalQueryGlobalTipoRamoActivoFijo.equals("NONE")) {
				this.tiporamoactivofijosForeignKey=detalleactivofijoReturnGeneral.gettiporamoactivofijosForeignKey();
			}

			if(!finalQueryGlobalTipoActivoFijoEmpresa.equals("NONE")) {
				this.tipoactivofijoempresasForeignKey=detalleactivofijoReturnGeneral.gettipoactivofijoempresasForeignKey();
			}

			if(!finalQueryGlobalTipoDepreciacionEmpresa.equals("NONE")) {
				this.tipodepreciacionempresasForeignKey=detalleactivofijoReturnGeneral.gettipodepreciacionempresasForeignKey();
			}

			if(!finalQueryGlobalEstadoActivoFijo.equals("NONE")) {
				this.estadoactivofijosForeignKey=detalleactivofijoReturnGeneral.getestadoactivofijosForeignKey();
			}

			if(!finalQueryGlobalCliente.equals("NONE")) {
				this.clientesForeignKey=detalleactivofijoReturnGeneral.getclientesForeignKey();
			}

			if(!finalQueryGlobalPartidaPresu.equals("NONE")) {
				this.partidapresusForeignKey=detalleactivofijoReturnGeneral.getpartidapresusForeignKey();
			}
			
			
		} catch(Exception e) {
			throw e;
		}		
	}
	
	public void addItemDefectoCombosTodosForeignKeyDetalleActivoFijo()throws Exception {
		try {
			
			this.addItemDefectoCombosForeignKeyEmpresa();
			this.addItemDefectoCombosForeignKeySucursal();
			this.addItemDefectoCombosForeignKeyDetalleGrupoActivoFijo();
			this.addItemDefectoCombosForeignKeySubGrupoActivoFijo();
			this.addItemDefectoCombosForeignKeyTipoRamoActivoFijo();
			this.addItemDefectoCombosForeignKeyTipoActivoFijoEmpresa();
			this.addItemDefectoCombosForeignKeyTipoDepreciacionEmpresa();
			this.addItemDefectoCombosForeignKeyEstadoActivoFijo();
			this.addItemDefectoCombosForeignKeyCliente();
			this.addItemDefectoCombosForeignKeyPartidaPresu();
		} catch(Exception e) {
			throw e;
		}		
	}
	
	



	public void addItemDefectoCombosForeignKeyEmpresa()throws Exception {
		try {
			if(this.detalleactivofijoSessionBean==null) {
				this.detalleactivofijoSessionBean=new DetalleActivoFijoSessionBean();
			}

			if(!this.detalleactivofijoSessionBean.getisBusquedaDesdeForeignKeySesionEmpresa()) {
				Empresa empresa=new Empresa();
				EmpresaConstantesFunciones.setEmpresaDescripcion(empresa,Constantes.SMENSAJE_ESCOJA_OPCION);
				empresa.setId(null);

				if(!EmpresaConstantesFunciones.ExisteEnLista(this.empresasForeignKey,empresa,true)) {

					this.empresasForeignKey.add(0,empresa);
				}
			}
		} catch(Exception e) {
			throw e;
		}
	}

	public void addItemDefectoCombosForeignKeySucursal()throws Exception {
		try {

			if(!this.detalleactivofijoSessionBean.getisBusquedaDesdeForeignKeySesionSucursal()) {
				Sucursal sucursal=new Sucursal();
				SucursalConstantesFunciones.setSucursalDescripcion(sucursal,Constantes.SMENSAJE_ESCOJA_OPCION);
				sucursal.setId(null);

				if(!SucursalConstantesFunciones.ExisteEnLista(this.sucursalsForeignKey,sucursal,true)) {

					this.sucursalsForeignKey.add(0,sucursal);
				}
			}
		} catch(Exception e) {
			throw e;
		}
	}

	public void addItemDefectoCombosForeignKeyDetalleGrupoActivoFijo()throws Exception {
		try {

			if(!this.detalleactivofijoSessionBean.getisBusquedaDesdeForeignKeySesionDetalleGrupoActivoFijo()) {
				DetalleGrupoActivoFijo detallegrupoactivofijo=new DetalleGrupoActivoFijo();
				DetalleGrupoActivoFijoConstantesFunciones.setDetalleGrupoActivoFijoDescripcion(detallegrupoactivofijo,Constantes.SMENSAJE_ESCOJA_OPCION);
				detallegrupoactivofijo.setId(null);

				if(!DetalleGrupoActivoFijoConstantesFunciones.ExisteEnLista(this.detallegrupoactivofijosForeignKey,detallegrupoactivofijo,true)) {

					this.detallegrupoactivofijosForeignKey.add(0,detallegrupoactivofijo);
				}
			}
		} catch(Exception e) {
			throw e;
		}
	}

	public void addItemDefectoCombosForeignKeySubGrupoActivoFijo()throws Exception {
		try {

			if(!this.detalleactivofijoSessionBean.getisBusquedaDesdeForeignKeySesionSubGrupoActivoFijo()) {
				SubGrupoActivoFijo subgrupoactivofijo=new SubGrupoActivoFijo();
				SubGrupoActivoFijoConstantesFunciones.setSubGrupoActivoFijoDescripcion(subgrupoactivofijo,Constantes.SMENSAJE_ESCOJA_OPCION);
				subgrupoactivofijo.setId(null);

				if(!SubGrupoActivoFijoConstantesFunciones.ExisteEnLista(this.subgrupoactivofijosForeignKey,subgrupoactivofijo,true)) {

					this.subgrupoactivofijosForeignKey.add(0,subgrupoactivofijo);
				}
			}
		} catch(Exception e) {
			throw e;
		}
	}

	public void addItemDefectoCombosForeignKeyTipoRamoActivoFijo()throws Exception {
		try {

			if(!this.detalleactivofijoSessionBean.getisBusquedaDesdeForeignKeySesionTipoRamoActivoFijo()) {
				TipoRamoActivoFijo tiporamoactivofijo=new TipoRamoActivoFijo();
				TipoRamoActivoFijoConstantesFunciones.setTipoRamoActivoFijoDescripcion(tiporamoactivofijo,Constantes.SMENSAJE_ESCOJA_OPCION);
				tiporamoactivofijo.setId(null);

				if(!TipoRamoActivoFijoConstantesFunciones.ExisteEnLista(this.tiporamoactivofijosForeignKey,tiporamoactivofijo,true)) {

					this.tiporamoactivofijosForeignKey.add(0,tiporamoactivofijo);
				}
			}
		} catch(Exception e) {
			throw e;
		}
	}

	public void addItemDefectoCombosForeignKeyTipoActivoFijoEmpresa()throws Exception {
		try {

			if(!this.detalleactivofijoSessionBean.getisBusquedaDesdeForeignKeySesionTipoActivoFijoEmpresa()) {
				TipoActivoFijoEmpresa tipoactivofijoempresa=new TipoActivoFijoEmpresa();
				TipoActivoFijoEmpresaConstantesFunciones.setTipoActivoFijoEmpresaDescripcion(tipoactivofijoempresa,Constantes.SMENSAJE_ESCOJA_OPCION);
				tipoactivofijoempresa.setId(null);

				if(!TipoActivoFijoEmpresaConstantesFunciones.ExisteEnLista(this.tipoactivofijoempresasForeignKey,tipoactivofijoempresa,true)) {

					this.tipoactivofijoempresasForeignKey.add(0,tipoactivofijoempresa);
				}
			}
		} catch(Exception e) {
			throw e;
		}
	}

	public void addItemDefectoCombosForeignKeyTipoDepreciacionEmpresa()throws Exception {
		try {

			if(!this.detalleactivofijoSessionBean.getisBusquedaDesdeForeignKeySesionTipoDepreciacionEmpresa()) {
				TipoDepreciacionEmpresa tipodepreciacionempresa=new TipoDepreciacionEmpresa();
				TipoDepreciacionEmpresaConstantesFunciones.setTipoDepreciacionEmpresaDescripcion(tipodepreciacionempresa,Constantes.SMENSAJE_ESCOJA_OPCION);
				tipodepreciacionempresa.setId(null);

				if(!TipoDepreciacionEmpresaConstantesFunciones.ExisteEnLista(this.tipodepreciacionempresasForeignKey,tipodepreciacionempresa,true)) {

					this.tipodepreciacionempresasForeignKey.add(0,tipodepreciacionempresa);
				}
			}
		} catch(Exception e) {
			throw e;
		}
	}

	public void addItemDefectoCombosForeignKeyEstadoActivoFijo()throws Exception {
		try {

			if(!this.detalleactivofijoSessionBean.getisBusquedaDesdeForeignKeySesionEstadoActivoFijo()) {
				EstadoActivoFijo estadoactivofijo=new EstadoActivoFijo();
				EstadoActivoFijoConstantesFunciones.setEstadoActivoFijoDescripcion(estadoactivofijo,Constantes.SMENSAJE_ESCOJA_OPCION);
				estadoactivofijo.setId(null);

				if(!EstadoActivoFijoConstantesFunciones.ExisteEnLista(this.estadoactivofijosForeignKey,estadoactivofijo,true)) {

					this.estadoactivofijosForeignKey.add(0,estadoactivofijo);
				}
			}
		} catch(Exception e) {
			throw e;
		}
	}

	public void addItemDefectoCombosForeignKeyCliente()throws Exception {
		try {

			if(!this.detalleactivofijoSessionBean.getisBusquedaDesdeForeignKeySesionCliente()) {
				Cliente cliente=new Cliente();
				ClienteConstantesFunciones.setClienteDescripcion(cliente,Constantes.SMENSAJE_ESCOJA_OPCION);
				cliente.setId(null);

				if(!ClienteConstantesFunciones.ExisteEnLista(this.clientesForeignKey,cliente,true)) {

					this.clientesForeignKey.add(0,cliente);
				}
			}
		} catch(Exception e) {
			throw e;
		}
	}

	public void addItemDefectoCombosForeignKeyPartidaPresu()throws Exception {
		try {

			if(!this.detalleactivofijoSessionBean.getisBusquedaDesdeForeignKeySesionPartidaPresu()) {
				PartidaPresu partidapresu=new PartidaPresu();
				PartidaPresuConstantesFunciones.setPartidaPresuDescripcion(partidapresu,Constantes.SMENSAJE_ESCOJA_OPCION);
				partidapresu.setId(null);

				if(!PartidaPresuConstantesFunciones.ExisteEnLista(this.partidapresusForeignKey,partidapresu,true)) {

					this.partidapresusForeignKey.add(0,partidapresu);
				}
			}
		} catch(Exception e) {
			throw e;
		}
	}
	
	public void initActionsCombosTodosForeignKeyDetalleActivoFijo()throws Exception {
		try {
			
			this.initActionsCombosForeignKeyDetalleGrupoActivoFijo("Todos");
		} catch(Exception e) {
			throw e;
		}		
	}
	
	public void initActionsCombosTodosForeignKeyDetalleActivoFijo(String sFormularioTipoBusqueda)throws Exception {
		try {
			
			this.initActionsCombosForeignKeyDetalleGrupoActivoFijo(sFormularioTipoBusqueda);
		} catch(Exception e) {
			throw e;
		}		
	}
	
	



	@SuppressWarnings("rawtypes")
	public void procesarActionsCombosForeignKeyDetalleGrupoActivoFijo(JComboBox jComboBoxDetalleGrupoActivoFijoGenerico,String sFormularioTipoBusqueda)throws Exception {
		try {
			String sFinalQueryCombo="";
			DetalleGrupoActivoFijo detallegrupoactivofijoLocal=(DetalleGrupoActivoFijo)jComboBoxDetalleGrupoActivoFijoGenerico.getSelectedItem();

			if(detallegrupoactivofijoLocal!=null  && detallegrupoactivofijoLocal.getId()!=null  && detallegrupoactivofijoLocal.getId()>0) {
				sFinalQueryCombo="  WHERE  id_detalle_grupo_activo_fijo="+detallegrupoactivofijoLocal.getId();
			}
			//REDEFINE

			//COPIA PARA VENTANA BUSQUEDA
			this.sFinalQueryComboSubGrupoActivoFijo=sFinalQueryCombo;

			this.subgrupoactivofijosForeignKey=new ArrayList<SubGrupoActivoFijo>();
			this.cargarCombosForeignKeySubGrupoActivoFijo(true,false,false,sFinalQueryCombo,sFormularioTipoBusqueda);
		} catch(Exception e) {
			throw e;
		}
	}
	
	



	public void initActionsCombosForeignKeyDetalleGrupoActivoFijo(String sFormularioTipoBusqueda)throws Exception {
		try {
			if(sFormularioTipoBusqueda.equals("Todos") || sFormularioTipoBusqueda.equals("Formulario")) {
				if(Constantes2.CON_COMBOBOX_ITEMLISTENER) {
					if(this.jInternalFrameDetalleFormDetalleActivoFijo!=null) {
						this.jInternalFrameDetalleFormDetalleActivoFijo.jComboBoxid_detalle_grupo_activo_fijoDetalleActivoFijo.addItemListener(new ComboBoxItemListener(this,"id_detalle_grupo_activo_fijoDetalleActivoFijo"));
						this.jInternalFrameDetalleFormDetalleActivoFijo.jComboBoxid_detalle_grupo_activo_fijoDetalleActivoFijo.addFocusListener(new ComboBoxFocusListener(this,"id_detalle_grupo_activo_fijoDetalleActivoFijo"));
					}
				} else {
					if(this.jInternalFrameDetalleFormDetalleActivoFijo!=null) {
						this.jInternalFrameDetalleFormDetalleActivoFijo.jComboBoxid_detalle_grupo_activo_fijoDetalleActivoFijo.addActionListener(new ComboBoxActionListener(this,"id_detalle_grupo_activo_fijoDetalleActivoFijo"));
						this.jInternalFrameDetalleFormDetalleActivoFijo.jComboBoxid_detalle_grupo_activo_fijoDetalleActivoFijo.addFocusListener(new ComboBoxFocusListener(this,"id_detalle_grupo_activo_fijoDetalleActivoFijo"));
					}
				}
			}

			if(sFormularioTipoBusqueda.equals("Todos")) {

				if(!this.conCargarMinimo) {
				
					if(Constantes2.CON_COMBOBOX_ITEMLISTENER) {
						this.jComboBoxid_detalle_grupo_activo_fijoFK_IdDetalleGrupoActivoFijoDetalleActivoFijo.addItemListener(new ComboBoxItemListener(this,"jComboBoxid_detalle_grupo_activo_fijoFK_IdDetalleGrupoActivoFijoDetalleActivoFijo"));

						this.jComboBoxid_detalle_grupo_activo_fijoFK_IdDetalleGrupoActivoFijoDetalleActivoFijo.addFocusListener(new ComboBoxFocusListener(this,"jComboBoxid_detalle_grupo_activo_fijoFK_IdDetalleGrupoActivoFijoDetalleActivoFijo"));

					} else {
						this.jComboBoxid_detalle_grupo_activo_fijoFK_IdDetalleGrupoActivoFijoDetalleActivoFijo.addActionListener(new ComboBoxActionListener(this,"jComboBoxid_detalle_grupo_activo_fijoFK_IdDetalleGrupoActivoFijoDetalleActivoFijo"));

						this.jComboBoxid_detalle_grupo_activo_fijoFK_IdDetalleGrupoActivoFijoDetalleActivoFijo.addFocusListener(new ComboBoxFocusListener(this,"jComboBoxid_detalle_grupo_activo_fijoFK_IdDetalleGrupoActivoFijoDetalleActivoFijo"));

					}
			
				}
			}
		} catch(Exception e) {
			throw e;
		}
	}
	
	public void setVariablesGlobalesCombosForeignKeyDetalleActivoFijo()throws Exception {	
		try {
			if(this.parametroGeneralUsuario!=null && this.parametroGeneralUsuario.getId()>0) {
			
				this.setActualEmpresaForeignKey(this.parametroGeneralUsuario.getid_empresa(),false,"Formulario");
				this.setActualSucursalForeignKey(this.parametroGeneralUsuario.getid_sucursal(),false,"Formulario");
			
			
				this.detalleactivofijo.setfecha_compra(this.parametroGeneralUsuario.getfecha_sistema());
				this.detalleactivofijo.setfecha_mantenimiento(this.parametroGeneralUsuario.getfecha_sistema());
				this.detalleactivofijo.setfecha_correccion(this.parametroGeneralUsuario.getfecha_sistema());
				this.detalleactivofijo.setfecha_depreciacion(this.parametroGeneralUsuario.getfecha_sistema());
				this.detalleactivofijo.setfecha(this.parametroGeneralUsuario.getfecha_sistema());
				this.detalleactivofijo.setfecha_baja(this.parametroGeneralUsuario.getfecha_sistema());
			}
			
			//INICIALIZA VARIABLES COMBOS GLOBALES AUXILIARES A FORMULARIO(Anio,Mes)
			this.setVariablesGlobalesAuxiliaresCombosForeignKeyDetalleActivoFijo();
		
		} catch(Exception e) {
			throw e;
		}
	}
	
	public void setVariablesObjetoActualToFormularioForeignKeyDetalleActivoFijo(DetalleActivoFijo detalleactivofijo)throws Exception {	
		try {
			
			this.setActualDetalleGrupoActivoFijoForeignKey(detalleactivofijo.getid_detalle_grupo_activo_fijo(),false,"Formulario");
			this.setActualSubGrupoActivoFijoForeignKey(detalleactivofijo.getid_sub_grupo_activo_fijo(),false,"Formulario");
			this.setActualTipoRamoActivoFijoForeignKey(detalleactivofijo.getid_tipo_ramo_activo_fijo(),false,"Formulario");
			this.setActualTipoActivoFijoEmpresaForeignKey(detalleactivofijo.getid_tipo_activo_fijo_empresa(),false,"Formulario");
			this.setActualTipoDepreciacionEmpresaForeignKey(detalleactivofijo.getid_tipo_depreciacion_empresa(),false,"Formulario");
			this.setActualEstadoActivoFijoForeignKey(detalleactivofijo.getid_estado_activo_fijo(),false,"Formulario");
			this.setActualClienteForeignKey(detalleactivofijo.getid_cliente(),false,"Formulario");
			this.setActualPartidaPresuForeignKey(detalleactivofijo.getid_partida_presu(),false,"Formulario");			
		} catch(Exception e) {
			throw e;
		}
	}
	
	public void setVariablesObjetoActualToListasForeignKeyDetalleActivoFijo(DetalleActivoFijo detalleactivofijo,String sTipoEvento)throws Exception {	
		try {
			
			

				if(detalleactivofijo.getCliente()!=null && !sTipoEvento.equals("id_clienteDetalleActivoFijo")) { //sTipoEvento Evita Bucle Infinito

					this.clientesForeignKey=new ArrayList<Cliente>();
					this.clientesForeignKey.add(detalleactivofijo.getCliente());

					this.addItemDefectoCombosForeignKeyCliente();
					this.cargarCombosFrameClientesForeignKey("Todos");
				}
			
		} catch(Exception e) {
			throw e;
		}
	}
	
	/*
	public void setVariablesCombosFromBeanForeignKeyDetalleActivoFijo()throws Exception {	
		try {
			
			this.setActualDetalleGrupoActivoFijoForeignKey(this.detalleactivofijoConstantesFunciones.getid_detalle_grupo_activo_fijo(),false,"Formulario");
			this.setActualSubGrupoActivoFijoForeignKey(this.detalleactivofijoConstantesFunciones.getid_sub_grupo_activo_fijo(),false,"Formulario");
			this.setActualTipoRamoActivoFijoForeignKey(this.detalleactivofijoConstantesFunciones.getid_tipo_ramo_activo_fijo(),false,"Formulario");
			this.setActualTipoActivoFijoEmpresaForeignKey(this.detalleactivofijoConstantesFunciones.getid_tipo_activo_fijo_empresa(),false,"Formulario");
			this.setActualTipoDepreciacionEmpresaForeignKey(this.detalleactivofijoConstantesFunciones.getid_tipo_depreciacion_empresa(),false,"Formulario");
			this.setActualEstadoActivoFijoForeignKey(this.detalleactivofijoConstantesFunciones.getid_estado_activo_fijo(),false,"Formulario");
			this.setActualClienteForeignKey(this.detalleactivofijoConstantesFunciones.getid_cliente(),false,"Formulario");
			this.setActualPartidaPresuForeignKey(this.detalleactivofijoConstantesFunciones.getid_partida_presu(),false,"Formulario");			
		} catch(Exception e) {
			throw e;
		}
	}
	*/
	
	public void setVariablesGlobalesAuxiliaresCombosForeignKeyDetalleActivoFijo()throws Exception {	
		try {
			
		
		} catch(Exception e) {
			throw e;
		}
	}
	
	public void setVariablesDefaultCombosForeignKeyDetalleActivoFijo()throws Exception {	
		try {
			
		} catch(Exception e) {
			throw e;
		}
	}
	
	public void setVariablesParametroCombosForeignKeyDetalleActivoFijo()throws Exception {	
		try {
			
		} catch(Exception e) {
			throw e;
		}
	}		
	
	public void cargarCombosParametroDetalleActivoFijo()throws Exception {
		try	{
			ArrayList<String> arrColumnasGlobales=new ArrayList<String>();
			String  finalQueryGlobal="";
			
			//this.cargarDatosCliente();
			
			
			
		} catch(Exception e) {
			throw e;
		}		
	}
		
	public void cargarCombosFrameForeignKeyDetalleActivoFijo()throws Exception {
		try {
			

			this.cargarCombosFrameEmpresasForeignKey("Todos");
			this.cargarCombosFrameSucursalsForeignKey("Todos");
			this.cargarCombosFrameDetalleGrupoActivoFijosForeignKey("Todos");
			this.cargarCombosFrameSubGrupoActivoFijosForeignKey("Todos");
			this.cargarCombosFrameTipoRamoActivoFijosForeignKey("Todos");
			this.cargarCombosFrameTipoActivoFijoEmpresasForeignKey("Todos");
			this.cargarCombosFrameTipoDepreciacionEmpresasForeignKey("Todos");
			this.cargarCombosFrameEstadoActivoFijosForeignKey("Todos");
			this.cargarCombosFrameClientesForeignKey("Todos");
			this.cargarCombosFramePartidaPresusForeignKey("Todos");

		} catch(Exception e) {
			throw e;
		}		
	}		
	
	public void cargarCombosFrameForeignKeyDetalleActivoFijo(String sFormularioTipoBusqueda)throws Exception {
		try {
			

			this.cargarCombosFrameEmpresasForeignKey(sFormularioTipoBusqueda);
			this.cargarCombosFrameSucursalsForeignKey(sFormularioTipoBusqueda);
			this.cargarCombosFrameDetalleGrupoActivoFijosForeignKey(sFormularioTipoBusqueda);
			this.cargarCombosFrameSubGrupoActivoFijosForeignKey(sFormularioTipoBusqueda);
			this.cargarCombosFrameTipoRamoActivoFijosForeignKey(sFormularioTipoBusqueda);
			this.cargarCombosFrameTipoActivoFijoEmpresasForeignKey(sFormularioTipoBusqueda);
			this.cargarCombosFrameTipoDepreciacionEmpresasForeignKey(sFormularioTipoBusqueda);
			this.cargarCombosFrameEstadoActivoFijosForeignKey(sFormularioTipoBusqueda);
			this.cargarCombosFrameClientesForeignKey(sFormularioTipoBusqueda);
			this.cargarCombosFramePartidaPresusForeignKey(sFormularioTipoBusqueda);

		} catch(Exception e) {
			throw e;
		}		
	}	
	
	public void setItemDefectoCombosForeignKeyDetalleActivoFijo()throws Exception {
		try {
			



			if(this.jInternalFrameDetalleFormDetalleActivoFijo.jComboBoxid_empresaDetalleActivoFijo!=null && this.jInternalFrameDetalleFormDetalleActivoFijo.jComboBoxid_empresaDetalleActivoFijo.getItemCount()>0) {
				this.jInternalFrameDetalleFormDetalleActivoFijo.jComboBoxid_empresaDetalleActivoFijo.setSelectedIndex(0);
			}

			if(this.jInternalFrameDetalleFormDetalleActivoFijo.jComboBoxid_sucursalDetalleActivoFijo!=null && this.jInternalFrameDetalleFormDetalleActivoFijo.jComboBoxid_sucursalDetalleActivoFijo.getItemCount()>0) {
				this.jInternalFrameDetalleFormDetalleActivoFijo.jComboBoxid_sucursalDetalleActivoFijo.setSelectedIndex(0);
			}

			if(this.jInternalFrameDetalleFormDetalleActivoFijo.jComboBoxid_detalle_grupo_activo_fijoDetalleActivoFijo!=null && this.jInternalFrameDetalleFormDetalleActivoFijo.jComboBoxid_detalle_grupo_activo_fijoDetalleActivoFijo.getItemCount()>0) {
				this.jInternalFrameDetalleFormDetalleActivoFijo.jComboBoxid_detalle_grupo_activo_fijoDetalleActivoFijo.setSelectedIndex(0);
			}

			if(this.jInternalFrameDetalleFormDetalleActivoFijo.jComboBoxid_sub_grupo_activo_fijoDetalleActivoFijo!=null && this.jInternalFrameDetalleFormDetalleActivoFijo.jComboBoxid_sub_grupo_activo_fijoDetalleActivoFijo.getItemCount()>0) {
				this.jInternalFrameDetalleFormDetalleActivoFijo.jComboBoxid_sub_grupo_activo_fijoDetalleActivoFijo.setSelectedIndex(0);
			}

			if(this.jInternalFrameDetalleFormDetalleActivoFijo.jComboBoxid_tipo_ramo_activo_fijoDetalleActivoFijo!=null && this.jInternalFrameDetalleFormDetalleActivoFijo.jComboBoxid_tipo_ramo_activo_fijoDetalleActivoFijo.getItemCount()>0) {
				this.jInternalFrameDetalleFormDetalleActivoFijo.jComboBoxid_tipo_ramo_activo_fijoDetalleActivoFijo.setSelectedIndex(0);
			}

			if(this.jInternalFrameDetalleFormDetalleActivoFijo.jComboBoxid_tipo_activo_fijo_empresaDetalleActivoFijo!=null && this.jInternalFrameDetalleFormDetalleActivoFijo.jComboBoxid_tipo_activo_fijo_empresaDetalleActivoFijo.getItemCount()>0) {
				this.jInternalFrameDetalleFormDetalleActivoFijo.jComboBoxid_tipo_activo_fijo_empresaDetalleActivoFijo.setSelectedIndex(0);
			}

			if(this.jInternalFrameDetalleFormDetalleActivoFijo.jComboBoxid_tipo_depreciacion_empresaDetalleActivoFijo!=null && this.jInternalFrameDetalleFormDetalleActivoFijo.jComboBoxid_tipo_depreciacion_empresaDetalleActivoFijo.getItemCount()>0) {
				this.jInternalFrameDetalleFormDetalleActivoFijo.jComboBoxid_tipo_depreciacion_empresaDetalleActivoFijo.setSelectedIndex(0);
			}

			if(this.jInternalFrameDetalleFormDetalleActivoFijo.jComboBoxid_estado_activo_fijoDetalleActivoFijo!=null && this.jInternalFrameDetalleFormDetalleActivoFijo.jComboBoxid_estado_activo_fijoDetalleActivoFijo.getItemCount()>0) {
				this.jInternalFrameDetalleFormDetalleActivoFijo.jComboBoxid_estado_activo_fijoDetalleActivoFijo.setSelectedIndex(0);
			}

			if(this.jInternalFrameDetalleFormDetalleActivoFijo.jComboBoxid_clienteDetalleActivoFijo!=null && this.jInternalFrameDetalleFormDetalleActivoFijo.jComboBoxid_clienteDetalleActivoFijo.getItemCount()>0) {
				this.jInternalFrameDetalleFormDetalleActivoFijo.jComboBoxid_clienteDetalleActivoFijo.setSelectedIndex(0);
			}

			if(this.jInternalFrameDetalleFormDetalleActivoFijo.jComboBoxid_partida_presuDetalleActivoFijo!=null && this.jInternalFrameDetalleFormDetalleActivoFijo.jComboBoxid_partida_presuDetalleActivoFijo.getItemCount()>0) {
				this.jInternalFrameDetalleFormDetalleActivoFijo.jComboBoxid_partida_presuDetalleActivoFijo.setSelectedIndex(0);
			}
		} catch(Exception e) {
			throw e;
		}		
	}		
	
	





	public void recargarFormDetalleActivoFijoDetalleGrupoActivoFijo(JComboBox<?> jComboBoxGenericoDetalleGrupoActivoFijo,String sFormularioTipoBusqueda) throws Exception {

		this.recargarFormDetalleActivoFijoid_sub_grupo_activo_fijo(jComboBoxGenericoDetalleGrupoActivoFijo,sFormularioTipoBusqueda,"DetalleGrupoActivoFijo",false);
	}














	
	



	public void recargarFormDetalleActivoFijoid_sub_grupo_activo_fijo(JComboBox<?> jComboBoxGenericoSubGrupoActivoFijo,String sFormularioTipoBusqueda,String sTipoComboOrigen,Boolean conIrServidorAplicacion) throws Exception {
		try {

			String sFinalQuery="";

			if(sTipoComboOrigen.equals("DetalleGrupoActivoFijo")){
				this.setActualParaGuardarDetalleGrupoActivoFijoForeignKey(this.detalleactivofijo,jComboBoxGenericoSubGrupoActivoFijo);
			}

			if(this.detalleactivofijo.getid_detalle_grupo_activo_fijo()!=null && this.detalleactivofijo.getid_detalle_grupo_activo_fijo()!=0L) {
				sFinalQuery+="  WHERE  id_detalle_grupo_activo_fijo="+this.detalleactivofijo.getid_detalle_grupo_activo_fijo();
			} else {
				sFinalQuery+="  WHERE  id_detalle_grupo_activo_fijo=-1";
			}



			//BUCLE RECURSIVO
			this.setActualSubGrupoActivoFijoForeignKey(this.detalleactivofijo.getid_detalle_grupo_activo_fijo(),true,sFormularioTipoBusqueda);

			this.cargarCombosSubGrupoActivoFijosForeignKeyLista(sFinalQuery);

			this.cargarCombosFrameSubGrupoActivoFijosForeignKey(sFormularioTipoBusqueda);

		} catch(Exception e) {
			FuncionesSwing.manageException(this, e,logger);
		}
	}

	public DetalleActivoFijoBeanSwingJInternalFrame() throws Exception {
		super(false,PaginaTipo.PRINCIPAL);
	}
	
	public DetalleActivoFijoBeanSwingJInternalFrame(Boolean cargarRelaciones,PaginaTipo paginaTipo) throws Exception {
		super(cargarRelaciones,paginaTipo);
	}
	
	public DetalleActivoFijoBeanSwingJInternalFrame(Boolean conGuardarRelaciones,Boolean esGuardarRelacionado,Boolean cargarRelaciones,PaginaTipo paginaTipo) throws Exception {
		super(cargarRelaciones,paginaTipo);
		
		this.detalleactivofijoSessionBean=new DetalleActivoFijoSessionBean(); 
		this.detalleactivofijoConstantesFunciones=new DetalleActivoFijoConstantesFunciones(); 
		this.detalleactivofijoBean=new DetalleActivoFijo();//(this.detalleactivofijoConstantesFunciones); 		
		this.detalleactivofijoReturnGeneral=new DetalleActivoFijoParameterReturnGeneral(); 
		
		this.detalleactivofijoSessionBean.setConGuardarRelaciones(conGuardarRelaciones);
		this.detalleactivofijoSessionBean.setEsGuardarRelacionado(esGuardarRelacionado);
				
	}
	
	public DetalleActivoFijoBeanSwingJInternalFrame(Boolean blncargarCombostrForeignKey,Boolean blnCargarInformacionInicial,JDesktopPane jdesktopPane,Usuario usuarioActual,ResumenUsuario resumenUsuarioActual,Modulo moduloActual,Opcion opcionActual,ParametroGeneralSg parametroGeneralSg,ParametroGeneralUsuario parametroGeneralUsuario,Boolean conGuardarRelaciones,Boolean esGuardarRelacionado,Boolean cargarRelaciones,Boolean cargarTodosDatos,PaginaTipo paginaTipo) throws Exception {
		this(blncargarCombostrForeignKey,blnCargarInformacionInicial,jdesktopPane,usuarioActual,resumenUsuarioActual,moduloActual,opcionActual,parametroGeneralSg,parametroGeneralUsuario,paginaTipo,conGuardarRelaciones,esGuardarRelacionado,cargarRelaciones,cargarTodosDatos);
	}
		
	public DetalleActivoFijoBeanSwingJInternalFrame(Boolean blncargarCombostrForeignKey,Boolean blnCargarInformacionInicial,JDesktopPane jdesktopPane,Usuario usuarioActual,ResumenUsuario resumenUsuarioActual,Modulo moduloActual,Opcion opcionActual,ParametroGeneralSg parametroGeneralSg,ParametroGeneralUsuario parametroGeneralUsuario,Boolean cargarRelaciones,Boolean cargarTodosDatos,PaginaTipo paginaTipo) throws Exception {
		this(blncargarCombostrForeignKey,blnCargarInformacionInicial,jdesktopPane,usuarioActual,resumenUsuarioActual,moduloActual,opcionActual,parametroGeneralSg,parametroGeneralUsuario,paginaTipo,false,false,cargarRelaciones,cargarTodosDatos);
	}	
	
	public DetalleActivoFijoBeanSwingJInternalFrame(Boolean blncargarCombostrForeignKey,Boolean blnCargarInformacionInicial,JDesktopPane jdesktopPane,Usuario usuarioActual,ResumenUsuario resumenUsuarioActual,Modulo moduloActual,Opcion opcionActual,ParametroGeneralSg parametroGeneralSg,ParametroGeneralUsuario parametroGeneralUsuario,PaginaTipo paginaTipo,Boolean conGuardarRelaciones,Boolean esGuardarRelacionado,Boolean cargarRelaciones,Boolean cargarTodosDatos) throws Exception //Boolean esParaBusquedaForeignKey
    {
		super(jdesktopPane,conGuardarRelaciones,esGuardarRelacionado,cargarRelaciones,usuarioActual,resumenUsuarioActual,moduloActual,opcionActual,parametroGeneralSg,parametroGeneralUsuario,paginaTipo);
		
		try {
			
			this.permiteRecargarForm=false;
			
			this.startProcessDetalleActivoFijo(true);
			
			Boolean esParaBusquedaForeignKey=false;//ANTES USADO COMO PARAMETRO DEL CONSTRUCTOR
			
			if(paginaTipo.equals(PaginaTipo.BUSQUEDA)) {
				esParaBusquedaForeignKey=true;
			}
			
			
			
			//SE ASIGNA EN CLASE PADRE
			/*
			this.parametroGeneralSg=parametroGeneralSg;		
			this.parametroGeneralUsuario=parametroGeneralUsuario;	
			this.usuarioActual=usuarioActual;
			this.moduloActual=moduloActual;
			*/						
			
			long start_time=0;
			long end_time=0;
			
			if(Constantes2.ISDEVELOPING2) {
				start_time = System.currentTimeMillis();
			}
			
			if(!cargarTodosDatos) {
				this.sAccionBusqueda="NINGUNO";
			}
			
			this.detalleactivofijoConstantesFunciones=new DetalleActivoFijoConstantesFunciones(); 
			this.detalleactivofijoBean=new DetalleActivoFijo();//this.detalleactivofijoConstantesFunciones); 			
			this.detalleactivofijoReturnGeneral=new DetalleActivoFijoParameterReturnGeneral(); 
		
			DetalleActivoFijoBeanSwingJInternalFrameAdditional.CargaInicialInicio(this, "NORMAL", null);
			
			this.setTitle(Funciones.GetTituloSistema(this.parametroGeneralSg,this.moduloActual,this.usuarioActual,"Detalle Activo Fijo Mantenimiento",paginaTipo));			
			
			this.conTotales=false;
			
			this.conTotales=true;
			
			
			this.detalleactivofijo=new DetalleActivoFijo();
			this.detalleactivofijos = new ArrayList<DetalleActivoFijo>();
			this.detalleactivofijosAux = new ArrayList<DetalleActivoFijo>();
			
			if(Constantes.ISUSAEJBLOGICLAYER) {
				this.detalleactivofijoLogic=new DetalleActivoFijoLogic();
				this.detalleactivofijoLogic.getNewConnexionToDeep("");
			}
			
			//this.detalleactivofijoSessionBean.setConGuardarRelaciones(conGuardarRelaciones);
			//this.detalleactivofijoSessionBean.setEsGuardarRelacionado(esGuardarRelacionado);
			
			this.jDesktopPane=jdesktopPane;
			
			if(this.jDesktopPane.getClass().equals(JDesktopPaneMe.class)) {
				this.constantes2=((JDesktopPaneMe)this.jDesktopPane).constantes2;
			}
			
			if(!Constantes.CON_VARIAS_VENTANAS) {
    			MainJFrame.cerrarJInternalFramesExistentes(this.jDesktopPane,this.jInternalFrameDetalleFormDetalleActivoFijo);
				
				if(!this.conCargarMinimo) {
					
					if(this.jInternalFrameReporteDinamicoDetalleActivoFijo!=null) {
						MainJFrame.cerrarJInternalFramesExistentes(this.jDesktopPane,this.jInternalFrameReporteDinamicoDetalleActivoFijo);	
					}
					
					if(this.jInternalFrameImportacionDetalleActivoFijo!=null) {
						MainJFrame.cerrarJInternalFramesExistentes(this.jDesktopPane,this.jInternalFrameImportacionDetalleActivoFijo);							
					}
					
				}
				
				
				if(!this.conCargarMinimo) {
					
					if(this.jInternalFrameOrderByDetalleActivoFijo!=null) {
						MainJFrame.cerrarJInternalFramesExistentes(this.jDesktopPane,this.jInternalFrameOrderByDetalleActivoFijo);					
					}
					
				}
			}
			
			//DETALLE DATOS
			if(this.jInternalFrameDetalleFormDetalleActivoFijo!=null) { //this.conCargarFormDetalle) {
				this.jDesktopPane.add(this.jInternalFrameDetalleFormDetalleActivoFijo);
				this.jInternalFrameDetalleFormDetalleActivoFijo.setVisible(false);
				this.jInternalFrameDetalleFormDetalleActivoFijo.setSelected(false);						
			}
			
			if(!this.conCargarMinimo) {
				
				//REPORTE DINAMICO
				if(this.jInternalFrameReporteDinamicoDetalleActivoFijo!=null) {
					this.jDesktopPane.add(this.jInternalFrameReporteDinamicoDetalleActivoFijo);
					this.jInternalFrameReporteDinamicoDetalleActivoFijo.setVisible(false);
					this.jInternalFrameReporteDinamicoDetalleActivoFijo.setSelected(false);
				}
				
				//IMPORTACION
				if(this.jInternalFrameImportacionDetalleActivoFijo!=null) {
					this.jDesktopPane.add(this.jInternalFrameImportacionDetalleActivoFijo);
					this.jInternalFrameImportacionDetalleActivoFijo.setVisible(false);
					this.jInternalFrameImportacionDetalleActivoFijo.setSelected(false);
				}
				
				
			}
			
			
			if(!this.conCargarMinimo) {
				
				if(this.jInternalFrameOrderByDetalleActivoFijo!=null) {
					this.jDesktopPane.add(this.jInternalFrameOrderByDetalleActivoFijo);
					this.jInternalFrameOrderByDetalleActivoFijo.setVisible(false);
					this.jInternalFrameOrderByDetalleActivoFijo.setSelected(false);				
				}
				
			}
			
			
			//this.esParaBusquedaForeignKey=false;
			this.esParaBusquedaForeignKey=esParaBusquedaForeignKey;
			
			this.invalidValues=new InvalidValue[0];
			
			
			
			this.idDetalleActivoFijoActual=0L;
			this.rowIndexActual=0;
			
			
			this.iNumeroPaginacionPagina=0;
			this.iNumeroPaginacion=DetalleActivoFijoConstantesFunciones.INUMEROPAGINACION;
			this.pagination=new Pagination();
			this.datosCliente=new DatosCliente();
			this.lIdUsuarioSesion=0L;	
			this.sTipoArchivoReporte="";
			this.sTipoArchivoReporteDinamico="";
			this.sTipoReporte="";
			this.sTipoReporteDinamico="";
			this.sTipoPaginacion="";
			this.sTipoRelacion="";
			this.sTipoAccion="";
			this.sTipoAccionFormulario="";
			this.sTipoSeleccionar="";			
			this.sDetalleReporte="";
			this.sTipoReporteExtra="";
			this.sValorCampoGeneral="";
			this.sPathReporteDinamico="";			
			
			this.isMostrarNumeroPaginacion=false;
			this.isSeleccionarTodos=false;
			this.isSeleccionados=false;
			this.conGraficoReporte=false;
			this.isPostAccionNuevo=false;
			this.isPostAccionSinCerrar=false;
			this.isPostAccionSinMensaje=false;
			this.esReporteDinamico=false;
			this.esRecargarFks=false;
			this.esReporteAccionProceso=false;
			
			this.detalleactivofijoReturnGeneral=new DetalleActivoFijoParameterReturnGeneral();
			
			this.detalleactivofijoParameterGeneral=new DetalleActivoFijoParameterReturnGeneral();
			
			
			
			this.sistemaLogicAdditional=new SistemaLogicAdditional();
			
			this.sistemaLogicAdditional.setConnexion(this.detalleactivofijoLogic.getConnexion());			
			
			
			
			
			
			
			
			//VERIFICAR GLOBAL
			this.cargarDatosCliente();			
			
			
			if(!this.detalleactivofijoSessionBean.getEsGuardarRelacionado()) {
				if(Constantes.ISUSAEJBLOGICLAYER) {	
					if(!sistemaLogicAdditional.validarLicenciaCliente(this.datosCliente,this.moduloActual,this.usuarioActual)) {
					 	this.setVisible(false);
						throw new Exception(Mensajes.SERROR_CONTROLGLOBAL);
					}
					
				} else if(Constantes.ISUSAEJBREMOTE) {
					
				} else if(Constantes.ISUSAEJBHOME) {
				}
			}			
			
			//VERIFICAR GLOBAL
			
			//VERIFICAR SESSION ACTUAL
			//this.cargarDatosCliente();
			
			this.sistemaReturnGeneral=new SistemaParameterReturnGeneral();
			
			SistemaParameterReturnGeneralAdditional.inicializarSinSeguridad(this.sistemaReturnGeneral);
			
			if(DetalleActivoFijoJInternalFrame.CON_LLAMADA_SIMPLE) {
				if(this.detalleactivofijoSessionBean.getEsGuardarRelacionado()) {
					this.opcionActual.setId(0L);
					
					//idOpcion=0L;					
				}
				
				ArrayList<String> arrPaginas=new ArrayList<String>();		
				ArrayList<Opcion> opcionsFinal=new ArrayList<Opcion>();	
				
				arrPaginas.add(MantenimientoActivoFijoConstantesFunciones.SNOMBREOPCION);
				arrPaginas.add(ServicioTransporteConstantesFunciones.SNOMBREOPCION);
				arrPaginas.add(MovimientoActivoFijoConstantesFunciones.SNOMBREOPCION);
				arrPaginas.add(VehiculoConstantesFunciones.SNOMBREOPCION);
				arrPaginas.add(MetodoDepreciacionConstantesFunciones.SNOMBREOPCION);
				arrPaginas.add(ResponsableActivoFijoConstantesFunciones.SNOMBREOPCION);
				arrPaginas.add(DepreciacionActivoFijoConstantesFunciones.SNOMBREOPCION);
				arrPaginas.add(GastoDepreciacionCentroCostoConstantesFunciones.SNOMBREOPCION);
				arrPaginas.add(ParteActivoFijoConstantesFunciones.SNOMBREOPCION);
		
				if(Constantes.ISUSAEJBLOGICLAYER) {	
					//this.sistemaReturnGeneral=sistemaLogicAdditional.validarCargarSesionUsuarioActualWithConnection(this.usuarioActual,this.datosCliente,this.resumenUsuarioActual,Constantes.LIDSISTEMAACTUAL,DetalleActivoFijoConstantesFunciones.SNOMBREOPCION,this.opcionActual,this.detalleactivofijoSessionBean.getEsGuardarRelacionado(),this.detalleactivofijoSessionBean.getConGuardarRelaciones(),arrPaginas);
					
					this.sistemaReturnGeneral=sistemaLogicAdditional.validarCargarSesionUsuarioActual(this.usuarioActual,this.datosCliente,this.resumenUsuarioActual,Constantes.LIDSISTEMAACTUAL,DetalleActivoFijoConstantesFunciones.SNOMBREOPCION,this.opcionActual,this.detalleactivofijoSessionBean.getEsGuardarRelacionado(),this.detalleactivofijoSessionBean.getConGuardarRelaciones(),arrPaginas);
					
					if(!this.sistemaReturnGeneral.getEsValidado()) {
					 	this.setVisible(false);
						throw new Exception(Mensajes.SERROR_SESIONACTUAL);
					}
				} else if(Constantes.ISUSAEJBREMOTE) {
				} else if(Constantes.ISUSAEJBHOME) {
					//FALTA
				}
			} else { 
				if(Constantes.ISUSAEJBLOGICLAYER) {	
					if(!sistemaLogicAdditional.validarSesionUsuarioActual(this.usuarioActual,this.datosCliente,this.resumenUsuarioActual)) {
					 	this.setVisible(false);
						throw new Exception(Mensajes.SERROR_SESIONACTUAL);
					}
				
				} else if(Constantes.ISUSAEJBREMOTE) {
					
				} else if(Constantes.ISUSAEJBHOME) {
				}
			} 
			//VERIFICAR SESSION ACTUAL
			
			
			this.sVisibilidadTablaBusquedas="table-row";
			this.sVisibilidadTablaElementos="none";
			this.sVisibilidadTablaAcciones="none";
			
			this.isVisibilidadCeldaNuevoDetalleActivoFijo=false;
			this.isVisibilidadCeldaDuplicarDetalleActivoFijo=true;
			this.isVisibilidadCeldaCopiarDetalleActivoFijo=true;
			this.isVisibilidadCeldaVerFormDetalleActivoFijo=true;
			this.isVisibilidadCeldaOrdenDetalleActivoFijo=true;
			this.isVisibilidadCeldaNuevoRelacionesDetalleActivoFijo=false;
			this.isVisibilidadCeldaModificarDetalleActivoFijo=false;
			this.isVisibilidadCeldaActualizarDetalleActivoFijo=false;
			this.isVisibilidadCeldaEliminarDetalleActivoFijo=false;
			this.isVisibilidadCeldaCancelarDetalleActivoFijo=false;
			this.isVisibilidadCeldaGuardarDetalleActivoFijo=false;
			this.isVisibilidadCeldaGuardarCambiosDetalleActivoFijo=false;
			
			
			this.isVisibilidadFK_IdCliente=true;
			this.isVisibilidadFK_IdDetalleGrupoActivoFijo=true;
			this.isVisibilidadFK_IdEmpresa=true;
			this.isVisibilidadFK_IdEstadoActivoFijo=true;
			this.isVisibilidadFK_IdPartidaPresu=true;
			this.isVisibilidadFK_IdSubGrupoActivoFijo=true;
			this.isVisibilidadFK_IdSucursal=true;
			this.isVisibilidadFK_IdTipoActivoFijoEmpresa=true;
			this.isVisibilidadFK_IdTipoDepreciacionEmpresa=true;
			this.isVisibilidadFK_IdTipoRamoActivoFijo=true;
			
			//ELEMENTOS TABLAS PARAMETOS
			
			
			
			//ELEMENTOS TABLAS PARAMETOS_FIN
			
			//this.actualizarEstadoCeldasBotonesDetalleActivoFijo("n", isGuardarCambiosEnLote, isEsMantenimientoRelacionado);
						
			
			
			this.inicializarPermisosDetalleActivoFijo();
			
			//INICIALIZAR FALSE, TALVEZ COMENTAR
			this.setPermisosUsuarioDetalleActivoFijo(false);
			
			this.setPermisosUsuarioDetalleActivoFijo();
			
			
			
			//FUNCIONALIDAD_RELACIONADO
			if(!this.detalleactivofijoSessionBean.getEsGuardarRelacionado() 
				|| (this.detalleactivofijoSessionBean.getEsGuardarRelacionado() && this.detalleactivofijoSessionBean.getConGuardarRelaciones())) {
				
				this.inicializarSetPermisosUsuarioDetalleActivoFijoClasesRelacionadas();
			}
			
			if(this.detalleactivofijoSessionBean.getConGuardarRelaciones()) {
				this.actualizarTabsSetPermisosUsuarioDetalleActivoFijoClasesRelacionadas();
			}
			
			
			
			//SOLO SE EJECUTA LA PRIMERA VEZ, BINDINGS SI FUNCIONA
			if(!DetalleActivoFijoJInternalFrame.ISBINDING_MANUAL) {
				this.inicializarActualizarBindingBotonesPermisosDetalleActivoFijo();
			} else {
				this.inicializarActualizarBindingBotonesPermisosManualDetalleActivoFijo();
			}
			
			if(!this.isPermisoBusquedaDetalleActivoFijo) {
				//BYDAN_BUSQUEDAS
				
				this.jTabbedPaneBusquedasDetalleActivoFijo.setVisible(false);				
				
			}
			
			
			
			//FUNCIONALIDAD_RELACIONADO
			if(!this.detalleactivofijoSessionBean.getEsGuardarRelacionado()) {				
				this.tiposArchivosReportes=Funciones.getListTiposArchivosReportes();
				this.tiposArchivosReportesDinamico=Funciones.getListTiposArchivosReportes();
				this.tiposReportes=Funciones.getListTiposReportes(true);
				this.tiposReportesDinamico=Funciones.getListTiposReportesDinamico(true);
				
				
				this.tiposReportes.add(new Reporte("RELACIONES","RELACIONES"));
				this.tiposReportesDinamico.add(new Reporte("RELACIONES","RELACIONES"));
				
				this.tiposGraficosReportes=Funciones2.getListTiposGraficosReportes();
				this.tiposPaginacion=Funciones2.getListTiposPaginacion(this.isPermisoPaginacionMedioDetalleActivoFijo,this.isPermisoPaginacionMedioDetalleActivoFijo,this.isPermisoPaginacionTodoDetalleActivoFijo);
				this.tiposSeleccionar=Funciones2.getListTiposSeleccionar();
				this.tiposSeleccionar.addAll(DetalleActivoFijoConstantesFunciones.getTiposSeleccionarDetalleActivoFijo());
				
				this.tiposColumnasSelect=DetalleActivoFijoConstantesFunciones.getTiposSeleccionarDetalleActivoFijo(true);
				
				this.tiposRelacionesSelect=new ArrayList<Reporte>();								
				
				this.cargarTiposRelacionesSelectDetalleActivoFijo();				
				//this.tiposRelacionesSelect=DetalleActivoFijoConstantesFunciones.getTiposRelacionesDetalleActivoFijo(true);
				
			} else {
				this.tiposArchivosReportes=new ArrayList<Reporte>();
				this.tiposArchivosReportesDinamico=new ArrayList<Reporte>();
				this.tiposReportes=new ArrayList<Reporte>();
				this.tiposReportesDinamico=new ArrayList<Reporte>();
				this.tiposGraficosReportes=new ArrayList<Reporte>();
				this.tiposPaginacion=new ArrayList<Reporte>();
				this.tiposSeleccionar=new ArrayList<Reporte>();			
				this.tiposColumnasSelect=new ArrayList<Reporte>();	
				this.tiposRelacionesSelect=new ArrayList<Reporte>();	
			}
						
			
			//FUNCIONALIDAD_RELACIONADO
			//if(!this.detalleactivofijoSessionBean.getEsGuardarRelacionado()) {
				//SE ENCUENTRA MAS ADELANTE CON ACCIONES POR USUARIO
				//ACCIONES GENERALES Y POR USUARIO
				this.tiposRelaciones=Funciones2.getListTiposRelaciones();
				this.setRelacionesUsuarioDetalleActivoFijo();
				
				this.tiposAcciones=Funciones2.getListTiposAcciones(true,false,true);
				this.setAccionesUsuarioDetalleActivoFijo(false);	
				
				this.tiposAccionesFormulario=Funciones2.getListTiposAccionesFormulario(true,false,true);							
				this.setAccionesUsuarioDetalleActivoFijo(true);	
				
				this.inicializarActualizarBindingtiposArchivosReportesAccionesDetalleActivoFijo() ;
			
			/*
			} else {
				this.tiposAcciones=new ArrayList<Reporte>();
				this.tiposAccionesFormulario=new ArrayList<Reporte>();
			}
			*/						
			
			this.inicializarInvalidValues();
						
			this.arrDatoGeneral= new  ArrayList<DatoGeneral>();
			this.arrDatoGeneralNo= new  ArrayList<String>();
			
			
			
			this.arrOrderBy= new  ArrayList<OrderBy>();
			
			
			this.arrDatoGeneralMinimos= new  ArrayList<DatoGeneralMinimo>();
			
			
			this.traerValoresTablaOrderBy();			
			
			
			this.isGuardarCambiosEnLote=false;
			this.isCargarCombosDependencia=false;
			
			
			this.mantenimientoactivofijoLogic=new MantenimientoActivoFijoLogic();
			this.serviciotransporteLogic=new ServicioTransporteLogic();
			this.movimientoactivofijoDestinoLogic=new MovimientoActivoFijoLogic();
			this.vehiculoLogic=new VehiculoLogic();
			this.metododepreciacionLogic=new MetodoDepreciacionLogic();
			this.responsableactivofijoLogic=new ResponsableActivoFijoLogic();
			this.depreciacionactivofijoLogic=new DepreciacionActivoFijoLogic();
			this.gastodepreciacioncentrocostoLogic=new GastoDepreciacionCentroCostoLogic();
			this.parteactivofijoLogic=new ParteActivoFijoLogic(); 
			jasperPrint = null;												
			
			//FK
			
			this.empresaLogic=new EmpresaLogic();
			this.sucursalLogic=new SucursalLogic();
			this.detallegrupoactivofijoLogic=new DetalleGrupoActivoFijoLogic();
			this.subgrupoactivofijoLogic=new SubGrupoActivoFijoLogic();
			this.tiporamoactivofijoLogic=new TipoRamoActivoFijoLogic();
			this.tipoactivofijoempresaLogic=new TipoActivoFijoEmpresaLogic();
			this.tipodepreciacionempresaLogic=new TipoDepreciacionEmpresaLogic();
			this.estadoactivofijoLogic=new EstadoActivoFijoLogic();
			this.clienteLogic=new ClienteLogic();
			this.partidapresuLogic=new PartidaPresuLogic();
			
			//PARAMETROS
			
			
			/*
			if(Constantes.ISUSAEJBREMOTE || Constantes.ISUSAEJBHOME) {		
				hashtableEnv =  Funciones.getHashtableEnv();		
				initialContext = new InitialContext(hashtableEnv);	
			}
			*/
			/*
			if(Constantes.ISUSAEJBREMOTE) {
				detalleactivofijoImplementable= (DetalleActivoFijoImplementable) initialContext.lookup(Constantes.SEJBPACKAGE+Constantes.SEJBSEPARATOR+DetalleActivoFijoConstantesFunciones.SEJBNAME+Constantes.SEJBSEPARATOR+Constantes.SEJBREMOTE);
			} else if(Constantes.ISUSAEJBHOME) {
				detalleactivofijoImplementableHome= (DetalleActivoFijoImplementableHome) initialContext.lookup(Constantes.SEJBPACKAGE+Constantes.SEJBSEPARATOR+DetalleActivoFijoConstantesFunciones.SEJBNAME+Constantes.SEJBSEPARATOR+Constantes.SEJBLOCAL);
			}			
			*/
			
			
			this.detalleactivofijos= new ArrayList<DetalleActivoFijo>();
			this.detalleactivofijosEliminados= new ArrayList<DetalleActivoFijo>();
						
			this.isEsNuevoDetalleActivoFijo=false;
			this.esParaAccionDesdeFormularioDetalleActivoFijo=false;
			this.isEsMantenimientoRelacionesRelacionadoUnico=false;
			this.isEsMantenimientoRelaciones=false;
			this.isEsMantenimientoRelacionado=false;
			this.isContieneImagenes=false;
			
			
			
			
			//BUSQUEDA INTERNA FK
			this.idClienteActual=0L;
			
			//INICIALIZAR LISTAS FK
			
			this.empresasForeignKey=new ArrayList<Empresa>() ;
			this.sucursalsForeignKey=new ArrayList<Sucursal>() ;
			this.detallegrupoactivofijosForeignKey=new ArrayList<DetalleGrupoActivoFijo>() ;
			this.subgrupoactivofijosForeignKey=new ArrayList<SubGrupoActivoFijo>() ;
			this.tiporamoactivofijosForeignKey=new ArrayList<TipoRamoActivoFijo>() ;
			this.tipoactivofijoempresasForeignKey=new ArrayList<TipoActivoFijoEmpresa>() ;
			this.tipodepreciacionempresasForeignKey=new ArrayList<TipoDepreciacionEmpresa>() ;
			this.estadoactivofijosForeignKey=new ArrayList<EstadoActivoFijo>() ;
			this.clientesForeignKey=new ArrayList<Cliente>() ;
			this.partidapresusForeignKey=new ArrayList<PartidaPresu>() ;
			
			
			
			
			if(blncargarCombostrForeignKey) {
				this.cargarCombosForeignKeyDetalleActivoFijo(this.isCargarCombosDependencia);
			}
			
			this.cargarCombosParametroDetalleActivoFijo();
			
			
			
			
			
			//FUNCIONALIDAD_RELACIONADO
			if(!this.detalleactivofijoSessionBean.getEsGuardarRelacionado()) {
				this.onLoad();
			}
						
			DetalleActivoFijoBeanSwingJInternalFrameAdditional.RecargarVentanaSegunOpcion(this,opcionActual);
			
			/*
			if(blnCargarInformacionInicial) {
				this.recargarInformacion();
			}
			*/
			//this.iNumeroPaginacionPagina=0;
			//this.iNumeroPaginacion=DetalleActivoFijoConstantesFunciones.INUMEROPAGINACION;
			
			this.actualizarEstadoCeldasBotonesDetalleActivoFijo("n", isGuardarCambiosEnLote, isEsMantenimientoRelacionado);
			//SOLO LA PRIMERA VEZ HACE LOS BINDINGS, SOLO AHI FUNCIONA
			this.inicializarActualizarBindingDetalleActivoFijo(true); 
			
			//SE REDIMENSIONA SINO NO SE ACTUALIZA
			this.redimensionarTablaDatos();
			
			
			this.initActions();
			
			;
						
			if(this.jInternalFrameDetalleFormDetalleActivoFijo!=null) {//if(this.conCargarFormDetalle) {
				this.cargarMenuRelaciones();
			}
			
			//OBLIGA CARGAR DETALLE, MEJOR DESHABILITAR, FALTA TALVEZ PONER EN SELECCIONAR
			//MAYBE
			//this.updateControlesFormularioDetalleActivoFijo();
			
			if(!this.conCargarMinimo) {
				this.updateBusquedasFormularioDetalleActivoFijo();
			}
			
			DetalleActivoFijoBeanSwingJInternalFrameAdditional.CargaInicial(this, "NORMAL", null);
			
			
			//SE REALIZA ESTO PARA QUE SE PUEDA RECORRER TAB SIN IMPORTAR ORDEN
			Boolean existeTabBusqueda=false;
			
			if(!this.conCargarMinimo) {
				//BYDAN_BUSQUEDAS
				
				
				for(int i=0; i<this.jTabbedPaneBusquedasDetalleActivoFijo.getTabCount(); i++) {
					this.jTabbedPaneBusquedasDetalleActivoFijo.setSelectedIndex(i);
						
					if(!existeTabBusqueda) {
						existeTabBusqueda=true;
					}
				}
					
				if(existeTabBusqueda) {
					this.jTabbedPaneBusquedasDetalleActivoFijo.setSelectedIndex(0);
				}	
				
				
			}
			
			
			if(Constantes.ISUSAEJBLOGICLAYER) {
				this.detalleactivofijoLogic.commitNewConnexionToDeep();
			}
			
			
			if(Constantes2.ISDEVELOPING2) {
				end_time = System.currentTimeMillis();			
				String sTipo="Load Ventana";
				Funciones2.getMensajeTiempoEjecucion(start_time, end_time, sTipo,false);
			}  
			
			this.finishProcessDetalleActivoFijo(true);
			
			this.dEnd=(double)System.currentTimeMillis();
			
			this.dDif=this.dEnd - this.dStart;
			
			if(Constantes.ISDEVELOPING) {
				System.out.println("Tiempo(ms) Carga DetalleActivoFijo: " + this.dDif); 
			}
			
			this.permiteRecargarForm=true;
			
		} catch(Exception e) {
			
			if(Constantes.ISUSAEJBLOGICLAYER) {
				this.detalleactivofijoLogic.rollbackNewConnexionToDeep();
			}
			
			FuncionesSwing.manageException(this, e,logger,DetalleActivoFijoConstantesFunciones.CLASSNAME);
		
		} finally {
			if(Constantes.ISUSAEJBLOGICLAYER) {
				this.detalleactivofijoLogic.closeNewConnexionToDeep();
			}
		}	 
    }
	
	public void cargarTiposRelacionesSelectDetalleActivoFijo() {
		Reporte reporte=new Reporte();
		
	

		reporte=new Reporte();
		reporte.setsCodigo(MantenimientoActivoFijoConstantesFunciones.SCLASSWEBTITULO);
		reporte.setsDescripcion(MantenimientoActivoFijoConstantesFunciones.SCLASSWEBTITULO);
		this.tiposRelacionesSelect.add(reporte);

		reporte=new Reporte();
		reporte.setsCodigo(ServicioTransporteConstantesFunciones.SCLASSWEBTITULO);
		reporte.setsDescripcion(ServicioTransporteConstantesFunciones.SCLASSWEBTITULO);
		this.tiposRelacionesSelect.add(reporte);

		reporte=new Reporte();
		reporte.setsCodigo(MovimientoActivoFijoConstantesFunciones.SCLASSWEBTITULO);
		reporte.setsDescripcion(MovimientoActivoFijoConstantesFunciones.SCLASSWEBTITULO);
		this.tiposRelacionesSelect.add(reporte);

		reporte=new Reporte();
		reporte.setsCodigo(VehiculoConstantesFunciones.SCLASSWEBTITULO);
		reporte.setsDescripcion(VehiculoConstantesFunciones.SCLASSWEBTITULO);
		this.tiposRelacionesSelect.add(reporte);

		reporte=new Reporte();
		reporte.setsCodigo(MetodoDepreciacionConstantesFunciones.SCLASSWEBTITULO);
		reporte.setsDescripcion(MetodoDepreciacionConstantesFunciones.SCLASSWEBTITULO);
		this.tiposRelacionesSelect.add(reporte);

		reporte=new Reporte();
		reporte.setsCodigo(ResponsableActivoFijoConstantesFunciones.SCLASSWEBTITULO);
		reporte.setsDescripcion(ResponsableActivoFijoConstantesFunciones.SCLASSWEBTITULO);
		this.tiposRelacionesSelect.add(reporte);

		reporte=new Reporte();
		reporte.setsCodigo(DepreciacionActivoFijoConstantesFunciones.SCLASSWEBTITULO);
		reporte.setsDescripcion(DepreciacionActivoFijoConstantesFunciones.SCLASSWEBTITULO);
		this.tiposRelacionesSelect.add(reporte);

		reporte=new Reporte();
		reporte.setsCodigo(GastoDepreciacionCentroCostoConstantesFunciones.SCLASSWEBTITULO);
		reporte.setsDescripcion(GastoDepreciacionCentroCostoConstantesFunciones.SCLASSWEBTITULO);
		this.tiposRelacionesSelect.add(reporte);

		reporte=new Reporte();
		reporte.setsCodigo(ParteActivoFijoConstantesFunciones.SCLASSWEBTITULO);
		reporte.setsDescripcion(ParteActivoFijoConstantesFunciones.SCLASSWEBTITULO);
		this.tiposRelacionesSelect.add(reporte);
	}
	
	
	
	public void jTabbedPaneChangeListenerGeneral(String sTipo,ChangeEvent evt) { 	  
		Boolean procesaCargarParteTab=false;
			
		try {
			int iIndex=0;		    			
			String sTitle="";
			
			//TABBED PANE RELACIONES
			if(sTipo.equals("RelacionesDetalleActivoFijo")) {
				iIndex=this.jInternalFrameDetalleFormDetalleActivoFijo.jTabbedPaneRelacionesDetalleActivoFijo.getSelectedIndex();		    
			
				sTitle=this.jInternalFrameDetalleFormDetalleActivoFijo.jTabbedPaneRelacionesDetalleActivoFijo.getTitleAt(iIndex);
				
				Integer intSelectedRow = 0;	
			
				intSelectedRow = this.jTableDatosDetalleActivoFijo.getSelectedRow();	
				
				

				if(sTitle.equals("Depreciacion Activo Fijos")) {
					if(!DepreciacionActivoFijoJInternalFrame.ESTA_CARGADO_PORPARTE) {
						procesaCargarParteTab=true;
						this.startProcessDetalleActivoFijo();

						this.cargarParteTabPanelRelacionadaDepreciacionActivoFijo(iIndex,intSelectedRow);
					}
					
				}

				if(sTitle.equals("Gasto Depreciacion Centro Costos")) {
					if(!GastoDepreciacionCentroCostoJInternalFrame.ESTA_CARGADO_PORPARTE) {
						procesaCargarParteTab=true;
						this.startProcessDetalleActivoFijo();

						this.cargarParteTabPanelRelacionadaGastoDepreciacionCentroCosto(iIndex,intSelectedRow);
					}
					
				}

				if(sTitle.equals("Mantenimiento Activo Fijos")) {
					if(!MantenimientoActivoFijoJInternalFrame.ESTA_CARGADO_PORPARTE) {
						procesaCargarParteTab=true;
						this.startProcessDetalleActivoFijo();

						this.cargarParteTabPanelRelacionadaMantenimientoActivoFijo(iIndex,intSelectedRow);
					}
					
				}

				if(sTitle.equals("Metodo Depreciaciones")) {
					if(!MetodoDepreciacionJInternalFrame.ESTA_CARGADO_PORPARTE) {
						procesaCargarParteTab=true;
						this.startProcessDetalleActivoFijo();

						this.cargarParteTabPanelRelacionadaMetodoDepreciacion(iIndex,intSelectedRow);
					}
					
				}

				if(sTitle.equals("Movimiento Activo Fijos")) {
					if(!MovimientoActivoFijoJInternalFrame.ESTA_CARGADO_PORPARTE) {
						procesaCargarParteTab=true;
						this.startProcessDetalleActivoFijo();

						this.cargarParteTabPanelRelacionadaMovimientoActivoFijo(iIndex,intSelectedRow);
					}
					
				}

				if(sTitle.equals("Parte Activo Fijos")) {
					if(!ParteActivoFijoJInternalFrame.ESTA_CARGADO_PORPARTE) {
						procesaCargarParteTab=true;
						this.startProcessDetalleActivoFijo();

						this.cargarParteTabPanelRelacionadaParteActivoFijo(iIndex,intSelectedRow);
					}
					
				}

				if(sTitle.equals("Responsable Activo Fijos")) {
					if(!ResponsableActivoFijoJInternalFrame.ESTA_CARGADO_PORPARTE) {
						procesaCargarParteTab=true;
						this.startProcessDetalleActivoFijo();

						this.cargarParteTabPanelRelacionadaResponsableActivoFijo(iIndex,intSelectedRow);
					}
					
				}

				if(sTitle.equals("Servicio Transportes")) {
					if(!ServicioTransporteJInternalFrame.ESTA_CARGADO_PORPARTE) {
						procesaCargarParteTab=true;
						this.startProcessDetalleActivoFijo();

						this.cargarParteTabPanelRelacionadaServicioTransporte(iIndex,intSelectedRow);
					}
					
				}

				if(sTitle.equals("Vehiculos")) {
					if(!VehiculoJInternalFrame.ESTA_CARGADO_PORPARTE) {
						procesaCargarParteTab=true;
						this.startProcessDetalleActivoFijo();

						this.cargarParteTabPanelRelacionadaVehiculo(iIndex,intSelectedRow);
					}
					
				}
				
			}
			
			//TABBED PANE RELACIONES FIN(EXTRA TAB)
			;
			
  		} catch(Exception e) {
  			e.printStackTrace();
  		} finally {
			if(procesaCargarParteTab) {				
				this.finishProcessDetalleActivoFijo();	
			}
		}
    }
	
	

	public void cargarParteTabPanelRelacionadaDepreciacionActivoFijo(int iIndex,int intSelectedRow) throws Exception {
		this.jInternalFrameDetalleFormDetalleActivoFijo.cargarSessionConBeanSwingJInternalFrameDepreciacionActivoFijo(false,true,iIndex);
		this.jButtonDepreciacionActivoFijoActionPerformed(null,intSelectedRow,false,true,null);
		this.redimensionarTablaPanelRelacionadaDepreciacionActivoFijo();

		//this.jTabbedPaneRelacionesDetalleActivoFijo.updateUI();
		//this.jTabbedPaneRelacionesDetalleActivoFijo.removeTabAt(iIndex);
		//this.jTabbedPaneRelacionesDetalleActivoFijo.setSelectedIndex(iIndex);


	}

	public void cargarParteTabPanelRelacionadaGastoDepreciacionCentroCosto(int iIndex,int intSelectedRow) throws Exception {
		this.jInternalFrameDetalleFormDetalleActivoFijo.cargarSessionConBeanSwingJInternalFrameGastoDepreciacionCentroCosto(false,true,iIndex);
		this.jButtonGastoDepreciacionCentroCostoActionPerformed(null,intSelectedRow,false,true,null);
		this.redimensionarTablaPanelRelacionadaGastoDepreciacionCentroCosto();

		//this.jTabbedPaneRelacionesDetalleActivoFijo.updateUI();
		//this.jTabbedPaneRelacionesDetalleActivoFijo.removeTabAt(iIndex);
		//this.jTabbedPaneRelacionesDetalleActivoFijo.setSelectedIndex(iIndex);


	}

	public void cargarParteTabPanelRelacionadaMantenimientoActivoFijo(int iIndex,int intSelectedRow) throws Exception {
		this.jInternalFrameDetalleFormDetalleActivoFijo.cargarSessionConBeanSwingJInternalFrameMantenimientoActivoFijo(false,true,iIndex);
		this.jButtonMantenimientoActivoFijoActionPerformed(null,intSelectedRow,false,true,null);
		this.redimensionarTablaPanelRelacionadaMantenimientoActivoFijo();

		//this.jTabbedPaneRelacionesDetalleActivoFijo.updateUI();
		//this.jTabbedPaneRelacionesDetalleActivoFijo.removeTabAt(iIndex);
		//this.jTabbedPaneRelacionesDetalleActivoFijo.setSelectedIndex(iIndex);


	}

	public void cargarParteTabPanelRelacionadaMetodoDepreciacion(int iIndex,int intSelectedRow) throws Exception {
		this.jInternalFrameDetalleFormDetalleActivoFijo.cargarSessionConBeanSwingJInternalFrameMetodoDepreciacion(false,true,iIndex);
		this.jButtonMetodoDepreciacionActionPerformed(null,intSelectedRow,false,true,null);
		this.redimensionarTablaPanelRelacionadaMetodoDepreciacion();

		//this.jTabbedPaneRelacionesDetalleActivoFijo.updateUI();
		//this.jTabbedPaneRelacionesDetalleActivoFijo.removeTabAt(iIndex);
		//this.jTabbedPaneRelacionesDetalleActivoFijo.setSelectedIndex(iIndex);


	}

	public void cargarParteTabPanelRelacionadaMovimientoActivoFijo(int iIndex,int intSelectedRow) throws Exception {
		this.jInternalFrameDetalleFormDetalleActivoFijo.cargarSessionConBeanSwingJInternalFrameMovimientoActivoFijo(false,true,iIndex);
		this.jButtonMovimientoActivoFijoActionPerformed(null,intSelectedRow,false,true,null);
		this.redimensionarTablaPanelRelacionadaMovimientoActivoFijo();

		//this.jTabbedPaneRelacionesDetalleActivoFijo.updateUI();
		//this.jTabbedPaneRelacionesDetalleActivoFijo.removeTabAt(iIndex);
		//this.jTabbedPaneRelacionesDetalleActivoFijo.setSelectedIndex(iIndex);


	}

	public void cargarParteTabPanelRelacionadaParteActivoFijo(int iIndex,int intSelectedRow) throws Exception {
		this.jInternalFrameDetalleFormDetalleActivoFijo.cargarSessionConBeanSwingJInternalFrameParteActivoFijo(false,true,iIndex);
		this.jButtonParteActivoFijoActionPerformed(null,intSelectedRow,false,true,null);
		this.redimensionarTablaPanelRelacionadaParteActivoFijo();

		//this.jTabbedPaneRelacionesDetalleActivoFijo.updateUI();
		//this.jTabbedPaneRelacionesDetalleActivoFijo.removeTabAt(iIndex);
		//this.jTabbedPaneRelacionesDetalleActivoFijo.setSelectedIndex(iIndex);


	}

	public void cargarParteTabPanelRelacionadaResponsableActivoFijo(int iIndex,int intSelectedRow) throws Exception {
		this.jInternalFrameDetalleFormDetalleActivoFijo.cargarSessionConBeanSwingJInternalFrameResponsableActivoFijo(false,true,iIndex);
		this.jButtonResponsableActivoFijoActionPerformed(null,intSelectedRow,false,true,null);
		this.redimensionarTablaPanelRelacionadaResponsableActivoFijo();

		//this.jTabbedPaneRelacionesDetalleActivoFijo.updateUI();
		//this.jTabbedPaneRelacionesDetalleActivoFijo.removeTabAt(iIndex);
		//this.jTabbedPaneRelacionesDetalleActivoFijo.setSelectedIndex(iIndex);


	}

	public void cargarParteTabPanelRelacionadaServicioTransporte(int iIndex,int intSelectedRow) throws Exception {
		this.jInternalFrameDetalleFormDetalleActivoFijo.cargarSessionConBeanSwingJInternalFrameServicioTransporte(false,true,iIndex);
		this.jButtonServicioTransporteActionPerformed(null,intSelectedRow,false,true,null);
		this.redimensionarTablaPanelRelacionadaServicioTransporte();

		//this.jTabbedPaneRelacionesDetalleActivoFijo.updateUI();
		//this.jTabbedPaneRelacionesDetalleActivoFijo.removeTabAt(iIndex);
		//this.jTabbedPaneRelacionesDetalleActivoFijo.setSelectedIndex(iIndex);


	}

	public void cargarParteTabPanelRelacionadaVehiculo(int iIndex,int intSelectedRow) throws Exception {
		this.jInternalFrameDetalleFormDetalleActivoFijo.cargarSessionConBeanSwingJInternalFrameVehiculo(false,true,iIndex);
		this.jButtonVehiculoActionPerformed(null,intSelectedRow,false,true,null);
		this.redimensionarTablaPanelRelacionadaVehiculo();

		//this.jTabbedPaneRelacionesDetalleActivoFijo.updateUI();
		//this.jTabbedPaneRelacionesDetalleActivoFijo.removeTabAt(iIndex);
		//this.jTabbedPaneRelacionesDetalleActivoFijo.setSelectedIndex(iIndex);


	}
	
	public void jButtonRelacionActionPerformedGeneral(String sTipo,ActionEvent evt) { 	  
		try {
			
				 if(sTipo.equals("MantenimientoActivoFijo")) {
				int row=this.jTableDatosDetalleActivoFijo.getSelectedRow();
				jButtonMantenimientoActivoFijoActionPerformed(evt,row,true,false,null);
				}
				 else  if(sTipo.equals("ServicioTransporte")) {
				int row=this.jTableDatosDetalleActivoFijo.getSelectedRow();
				jButtonServicioTransporteActionPerformed(evt,row,true,false,null);
				}
				 else  if(sTipo.equals("MovimientoActivoFijo")) {
				int row=this.jTableDatosDetalleActivoFijo.getSelectedRow();
				jButtonMovimientoActivoFijoActionPerformed(evt,row,true,false,null);
				}
				 else  if(sTipo.equals("Vehiculo")) {
				int row=this.jTableDatosDetalleActivoFijo.getSelectedRow();
				jButtonVehiculoActionPerformed(evt,row,true,false,null);
				}
				 else  if(sTipo.equals("MetodoDepreciacion")) {
				int row=this.jTableDatosDetalleActivoFijo.getSelectedRow();
				jButtonMetodoDepreciacionActionPerformed(evt,row,true,false,null);
				}
				 else  if(sTipo.equals("ResponsableActivoFijo")) {
				int row=this.jTableDatosDetalleActivoFijo.getSelectedRow();
				jButtonResponsableActivoFijoActionPerformed(evt,row,true,false,null);
				}
				 else  if(sTipo.equals("DepreciacionActivoFijo")) {
				int row=this.jTableDatosDetalleActivoFijo.getSelectedRow();
				jButtonDepreciacionActivoFijoActionPerformed(evt,row,true,false,null);
				}
				 else  if(sTipo.equals("GastoDepreciacionCentroCosto")) {
				int row=this.jTableDatosDetalleActivoFijo.getSelectedRow();
				jButtonGastoDepreciacionCentroCostoActionPerformed(evt,row,true,false,null);
				}
				 else  if(sTipo.equals("ParteActivoFijo")) {
				int row=this.jTableDatosDetalleActivoFijo.getSelectedRow();
				jButtonParteActivoFijoActionPerformed(evt,row,true,false,null);
				}
  		} catch(Exception e) {
  			e.printStackTrace();
  		}
    }
	
	public void cargarMenuRelaciones() {	
		JMenuItem jmenuItem= new JMenuItem("General");
		String sLabelMenu="";
		
		if(!this.detalleactivofijoSessionBean.getEsGuardarRelacionado()) {
			for(Reporte reporte:this.tiposRelaciones) {
			

				if(reporte.getsCodigo().equals("Mantenimiento Activo Fijo")) {

					if(this.isTienePermisosMantenimientoActivoFijo && this.detalleactivofijoConstantesFunciones.mostrarMantenimientoActivoFijoDetalleActivoFijo && !DetalleActivoFijoConstantesFunciones.ISGUARDARREL) {
						if(Constantes.ISDEVELOPING) {
							sLabelMenu="Mantenimiento Activo Fijos"+"("+MantenimientoActivoFijoConstantesFunciones.CLASSNAME+")";
						}

						jmenuItem = new JMenuItem(sLabelMenu);
						//jmenuItem.setMnemonic(KeyEvent.VK_S);
						//jmenuItem.setAccelerator(KeyStroke.getKeyStroke(KeyEvent.VK_S, ActionEvent.ALT_MASK));
						jmenuItem.setActionCommand("Mantenimiento Activo Fijos");

						if(detalleactivofijoConstantesFunciones.resaltarMantenimientoActivoFijoDetalleActivoFijo!=null) {
							jmenuItem.setBorderPainted(true);
							jmenuItem.setBorder(detalleactivofijoConstantesFunciones.resaltarMantenimientoActivoFijoDetalleActivoFijo);
						}

						jmenuItem.setEnabled(this.detalleactivofijoConstantesFunciones.activarMantenimientoActivoFijoDetalleActivoFijo);

						jmenuItem.addActionListener (new MenuItemRelacionActionListener(this,"MantenimientoActivoFijo"));

						

						this.jInternalFrameDetalleFormDetalleActivoFijo.jmenuDetalleDetalleActivoFijo.add(jmenuItem);

						
					}

					continue;
				}

				if(reporte.getsCodigo().equals("Servicio Transporte")) {

					if(this.isTienePermisosServicioTransporte && this.detalleactivofijoConstantesFunciones.mostrarServicioTransporteDetalleActivoFijo && !DetalleActivoFijoConstantesFunciones.ISGUARDARREL) {
						if(Constantes.ISDEVELOPING) {
							sLabelMenu="Servicio Transportes"+"("+ServicioTransporteConstantesFunciones.CLASSNAME+")";
						}

						jmenuItem = new JMenuItem(sLabelMenu);
						//jmenuItem.setMnemonic(KeyEvent.VK_S);
						//jmenuItem.setAccelerator(KeyStroke.getKeyStroke(KeyEvent.VK_S, ActionEvent.ALT_MASK));
						jmenuItem.setActionCommand("Servicio Transportes");

						if(detalleactivofijoConstantesFunciones.resaltarServicioTransporteDetalleActivoFijo!=null) {
							jmenuItem.setBorderPainted(true);
							jmenuItem.setBorder(detalleactivofijoConstantesFunciones.resaltarServicioTransporteDetalleActivoFijo);
						}

						jmenuItem.setEnabled(this.detalleactivofijoConstantesFunciones.activarServicioTransporteDetalleActivoFijo);

						jmenuItem.addActionListener (new MenuItemRelacionActionListener(this,"ServicioTransporte"));

						

						this.jInternalFrameDetalleFormDetalleActivoFijo.jmenuDetalleDetalleActivoFijo.add(jmenuItem);

						
					}

					continue;
				}

				if(reporte.getsCodigo().equals("Movimiento Activo Fijo")) {

					if(this.isTienePermisosMovimientoActivoFijo && this.detalleactivofijoConstantesFunciones.mostrarMovimientoActivoFijoDetalleActivoFijo && !DetalleActivoFijoConstantesFunciones.ISGUARDARREL) {
						if(Constantes.ISDEVELOPING) {
							sLabelMenu="Movimiento Activo Fijos"+"("+MovimientoActivoFijoConstantesFunciones.CLASSNAME+")";
						}

						jmenuItem = new JMenuItem(sLabelMenu);
						//jmenuItem.setMnemonic(KeyEvent.VK_S);
						//jmenuItem.setAccelerator(KeyStroke.getKeyStroke(KeyEvent.VK_S, ActionEvent.ALT_MASK));
						jmenuItem.setActionCommand("Movimiento Activo Fijos");

						if(detalleactivofijoConstantesFunciones.resaltarMovimientoActivoFijoDetalleActivoFijo!=null) {
							jmenuItem.setBorderPainted(true);
							jmenuItem.setBorder(detalleactivofijoConstantesFunciones.resaltarMovimientoActivoFijoDetalleActivoFijo);
						}

						jmenuItem.setEnabled(this.detalleactivofijoConstantesFunciones.activarMovimientoActivoFijoDetalleActivoFijo);

						jmenuItem.addActionListener (new MenuItemRelacionActionListener(this,"MovimientoActivoFijo"));

						

						this.jInternalFrameDetalleFormDetalleActivoFijo.jmenuDetalleDetalleActivoFijo.add(jmenuItem);

						
					}

					continue;
				}

				if(reporte.getsCodigo().equals("Vehiculo")) {

					if(this.isTienePermisosVehiculo && this.detalleactivofijoConstantesFunciones.mostrarVehiculoDetalleActivoFijo && !DetalleActivoFijoConstantesFunciones.ISGUARDARREL) {
						if(Constantes.ISDEVELOPING) {
							sLabelMenu="Vehiculos"+"("+VehiculoConstantesFunciones.CLASSNAME+")";
						}

						jmenuItem = new JMenuItem(sLabelMenu);
						//jmenuItem.setMnemonic(KeyEvent.VK_S);
						//jmenuItem.setAccelerator(KeyStroke.getKeyStroke(KeyEvent.VK_S, ActionEvent.ALT_MASK));
						jmenuItem.setActionCommand("Vehiculos");

						if(detalleactivofijoConstantesFunciones.resaltarVehiculoDetalleActivoFijo!=null) {
							jmenuItem.setBorderPainted(true);
							jmenuItem.setBorder(detalleactivofijoConstantesFunciones.resaltarVehiculoDetalleActivoFijo);
						}

						jmenuItem.setEnabled(this.detalleactivofijoConstantesFunciones.activarVehiculoDetalleActivoFijo);

						jmenuItem.addActionListener (new MenuItemRelacionActionListener(this,"Vehiculo"));

						

						this.jInternalFrameDetalleFormDetalleActivoFijo.jmenuDetalleDetalleActivoFijo.add(jmenuItem);

						
					}

					continue;
				}

				if(reporte.getsCodigo().equals("Metodo Depreciacion")) {

					if(this.isTienePermisosMetodoDepreciacion && this.detalleactivofijoConstantesFunciones.mostrarMetodoDepreciacionDetalleActivoFijo && !DetalleActivoFijoConstantesFunciones.ISGUARDARREL) {
						if(Constantes.ISDEVELOPING) {
							sLabelMenu="Metodo Depreciaciones"+"("+MetodoDepreciacionConstantesFunciones.CLASSNAME+")";
						}

						jmenuItem = new JMenuItem(sLabelMenu);
						//jmenuItem.setMnemonic(KeyEvent.VK_S);
						//jmenuItem.setAccelerator(KeyStroke.getKeyStroke(KeyEvent.VK_S, ActionEvent.ALT_MASK));
						jmenuItem.setActionCommand("Metodo Depreciaciones");

						if(detalleactivofijoConstantesFunciones.resaltarMetodoDepreciacionDetalleActivoFijo!=null) {
							jmenuItem.setBorderPainted(true);
							jmenuItem.setBorder(detalleactivofijoConstantesFunciones.resaltarMetodoDepreciacionDetalleActivoFijo);
						}

						jmenuItem.setEnabled(this.detalleactivofijoConstantesFunciones.activarMetodoDepreciacionDetalleActivoFijo);

						jmenuItem.addActionListener (new MenuItemRelacionActionListener(this,"MetodoDepreciacion"));

						

						this.jInternalFrameDetalleFormDetalleActivoFijo.jmenuDetalleDetalleActivoFijo.add(jmenuItem);

						
					}

					continue;
				}

				if(reporte.getsCodigo().equals("Responsable Activo Fijo")) {

					if(this.isTienePermisosResponsableActivoFijo && this.detalleactivofijoConstantesFunciones.mostrarResponsableActivoFijoDetalleActivoFijo && !DetalleActivoFijoConstantesFunciones.ISGUARDARREL) {
						if(Constantes.ISDEVELOPING) {
							sLabelMenu="Responsable Activo Fijos"+"("+ResponsableActivoFijoConstantesFunciones.CLASSNAME+")";
						}

						jmenuItem = new JMenuItem(sLabelMenu);
						//jmenuItem.setMnemonic(KeyEvent.VK_S);
						//jmenuItem.setAccelerator(KeyStroke.getKeyStroke(KeyEvent.VK_S, ActionEvent.ALT_MASK));
						jmenuItem.setActionCommand("Responsable Activo Fijos");

						if(detalleactivofijoConstantesFunciones.resaltarResponsableActivoFijoDetalleActivoFijo!=null) {
							jmenuItem.setBorderPainted(true);
							jmenuItem.setBorder(detalleactivofijoConstantesFunciones.resaltarResponsableActivoFijoDetalleActivoFijo);
						}

						jmenuItem.setEnabled(this.detalleactivofijoConstantesFunciones.activarResponsableActivoFijoDetalleActivoFijo);

						jmenuItem.addActionListener (new MenuItemRelacionActionListener(this,"ResponsableActivoFijo"));

						

						this.jInternalFrameDetalleFormDetalleActivoFijo.jmenuDetalleDetalleActivoFijo.add(jmenuItem);

						
					}

					continue;
				}

				if(reporte.getsCodigo().equals("Depreciacion Activo Fijo")) {

					if(this.isTienePermisosDepreciacionActivoFijo && this.detalleactivofijoConstantesFunciones.mostrarDepreciacionActivoFijoDetalleActivoFijo && !DetalleActivoFijoConstantesFunciones.ISGUARDARREL) {
						if(Constantes.ISDEVELOPING) {
							sLabelMenu="Depreciacion Activo Fijos"+"("+DepreciacionActivoFijoConstantesFunciones.CLASSNAME+")";
						}

						jmenuItem = new JMenuItem(sLabelMenu);
						//jmenuItem.setMnemonic(KeyEvent.VK_S);
						//jmenuItem.setAccelerator(KeyStroke.getKeyStroke(KeyEvent.VK_S, ActionEvent.ALT_MASK));
						jmenuItem.setActionCommand("Depreciacion Activo Fijos");

						if(detalleactivofijoConstantesFunciones.resaltarDepreciacionActivoFijoDetalleActivoFijo!=null) {
							jmenuItem.setBorderPainted(true);
							jmenuItem.setBorder(detalleactivofijoConstantesFunciones.resaltarDepreciacionActivoFijoDetalleActivoFijo);
						}

						jmenuItem.setEnabled(this.detalleactivofijoConstantesFunciones.activarDepreciacionActivoFijoDetalleActivoFijo);

						jmenuItem.addActionListener (new MenuItemRelacionActionListener(this,"DepreciacionActivoFijo"));

						

						this.jInternalFrameDetalleFormDetalleActivoFijo.jmenuDetalleDetalleActivoFijo.add(jmenuItem);

						
					}

					continue;
				}

				if(reporte.getsCodigo().equals("Gasto Depreciacion Centro Costo")) {

					if(this.isTienePermisosGastoDepreciacionCentroCosto && this.detalleactivofijoConstantesFunciones.mostrarGastoDepreciacionCentroCostoDetalleActivoFijo && !DetalleActivoFijoConstantesFunciones.ISGUARDARREL) {
						if(Constantes.ISDEVELOPING) {
							sLabelMenu="Gasto Depreciacion Centro Costos"+"("+GastoDepreciacionCentroCostoConstantesFunciones.CLASSNAME+")";
						}

						jmenuItem = new JMenuItem(sLabelMenu);
						//jmenuItem.setMnemonic(KeyEvent.VK_S);
						//jmenuItem.setAccelerator(KeyStroke.getKeyStroke(KeyEvent.VK_S, ActionEvent.ALT_MASK));
						jmenuItem.setActionCommand("Gasto Depreciacion Centro Costos");

						if(detalleactivofijoConstantesFunciones.resaltarGastoDepreciacionCentroCostoDetalleActivoFijo!=null) {
							jmenuItem.setBorderPainted(true);
							jmenuItem.setBorder(detalleactivofijoConstantesFunciones.resaltarGastoDepreciacionCentroCostoDetalleActivoFijo);
						}

						jmenuItem.setEnabled(this.detalleactivofijoConstantesFunciones.activarGastoDepreciacionCentroCostoDetalleActivoFijo);

						jmenuItem.addActionListener (new MenuItemRelacionActionListener(this,"GastoDepreciacionCentroCosto"));

						

						this.jInternalFrameDetalleFormDetalleActivoFijo.jmenuDetalleDetalleActivoFijo.add(jmenuItem);

						
					}

					continue;
				}

				if(reporte.getsCodigo().equals("Parte Activo Fijo")) {

					if(this.isTienePermisosParteActivoFijo && this.detalleactivofijoConstantesFunciones.mostrarParteActivoFijoDetalleActivoFijo && !DetalleActivoFijoConstantesFunciones.ISGUARDARREL) {
						if(Constantes.ISDEVELOPING) {
							sLabelMenu="Parte Activo Fijos"+"("+ParteActivoFijoConstantesFunciones.CLASSNAME+")";
						}

						jmenuItem = new JMenuItem(sLabelMenu);
						//jmenuItem.setMnemonic(KeyEvent.VK_S);
						//jmenuItem.setAccelerator(KeyStroke.getKeyStroke(KeyEvent.VK_S, ActionEvent.ALT_MASK));
						jmenuItem.setActionCommand("Parte Activo Fijos");

						if(detalleactivofijoConstantesFunciones.resaltarParteActivoFijoDetalleActivoFijo!=null) {
							jmenuItem.setBorderPainted(true);
							jmenuItem.setBorder(detalleactivofijoConstantesFunciones.resaltarParteActivoFijoDetalleActivoFijo);
						}

						jmenuItem.setEnabled(this.detalleactivofijoConstantesFunciones.activarParteActivoFijoDetalleActivoFijo);

						jmenuItem.addActionListener (new MenuItemRelacionActionListener(this,"ParteActivoFijo"));

						

						this.jInternalFrameDetalleFormDetalleActivoFijo.jmenuDetalleDetalleActivoFijo.add(jmenuItem);

						
					}

					continue;
				}
			}
		}
	}		
	
	public void cargarCombosForeignKeyDetalleActivoFijo(Boolean cargarCombosDependencia) throws Exception {   
		this.cargarCombosForeignKeyDetalleActivoFijo(cargarCombosDependencia,true,true);
	}
	
	//CARGAR COMBOS EN LOTE
	public void cargarCombosForeignKeyDetalleActivoFijo(Boolean cargarCombosDependencia,Boolean conInitActions,Boolean conSetVariablesGlobales) throws Exception {   
		this.cargarCombosTodosForeignKeyDetalleActivoFijoListas(cargarCombosDependencia);
				
		this.addItemDefectoCombosTodosForeignKeyDetalleActivoFijo();
		
		this.cargarCombosFrameForeignKeyDetalleActivoFijo();						
		
		if(conInitActions) {
			this.initActionsCombosTodosForeignKeyDetalleActivoFijo();
		}
		
		if(conSetVariablesGlobales) {
			this.setVariablesGlobalesCombosForeignKeyDetalleActivoFijo();
		}
	}
	
	

	public void cargarCombosForeignKeyDetalleGrupoActivoFijo(Boolean cargarCombosDependencia,Boolean conInitActions,Boolean conSetVariablesGlobales,String sFinalQueryCombo,String sFormularioTipoBusqueda) throws Exception {
		try {
				this.cargarCombosForeignKeyDetalleGrupoActivoFijoListas(cargarCombosDependencia,sFinalQueryCombo);
				this.addItemDefectoCombosForeignKeyDetalleGrupoActivoFijo();
				this.cargarCombosFrameDetalleGrupoActivoFijosForeignKey(sFormularioTipoBusqueda);

				if(conInitActions) {
					this.initActionsCombosForeignKeyDetalleGrupoActivoFijo("Todos");
				}

			this.recargarComboTablaDetalleGrupoActivoFijo(this.detallegrupoactivofijosForeignKey);

		} catch(Exception e) {
			throw e;
		}
	}

	public void cargarCombosForeignKeySubGrupoActivoFijo(Boolean cargarCombosDependencia,Boolean conInitActions,Boolean conSetVariablesGlobales,String sFinalQueryCombo,String sFormularioTipoBusqueda) throws Exception {
		try {
				this.cargarCombosForeignKeySubGrupoActivoFijoListas(cargarCombosDependencia,sFinalQueryCombo);
				this.addItemDefectoCombosForeignKeySubGrupoActivoFijo();
				this.cargarCombosFrameSubGrupoActivoFijosForeignKey(sFormularioTipoBusqueda);

				if(conInitActions) {
					this.initActionsCombosForeignKeyDetalleGrupoActivoFijo("Todos");
				}

			this.recargarComboTablaSubGrupoActivoFijo(this.subgrupoactivofijosForeignKey);

		} catch(Exception e) {
			throw e;
		}
	}

	public void cargarCombosForeignKeyTipoRamoActivoFijo(Boolean cargarCombosDependencia,Boolean conInitActions,Boolean conSetVariablesGlobales,String sFinalQueryCombo,String sFormularioTipoBusqueda) throws Exception {
		try {
				this.cargarCombosForeignKeyTipoRamoActivoFijoListas(cargarCombosDependencia,sFinalQueryCombo);
				this.addItemDefectoCombosForeignKeyTipoRamoActivoFijo();
				this.cargarCombosFrameTipoRamoActivoFijosForeignKey(sFormularioTipoBusqueda);

				if(conInitActions) {
					this.initActionsCombosForeignKeyDetalleGrupoActivoFijo("Todos");
				}

			this.recargarComboTablaTipoRamoActivoFijo(this.tiporamoactivofijosForeignKey);

		} catch(Exception e) {
			throw e;
		}
	}

	public void cargarCombosForeignKeyTipoActivoFijoEmpresa(Boolean cargarCombosDependencia,Boolean conInitActions,Boolean conSetVariablesGlobales,String sFinalQueryCombo,String sFormularioTipoBusqueda) throws Exception {
		try {
				this.cargarCombosForeignKeyTipoActivoFijoEmpresaListas(cargarCombosDependencia,sFinalQueryCombo);
				this.addItemDefectoCombosForeignKeyTipoActivoFijoEmpresa();
				this.cargarCombosFrameTipoActivoFijoEmpresasForeignKey(sFormularioTipoBusqueda);

				if(conInitActions) {
					this.initActionsCombosForeignKeyDetalleGrupoActivoFijo("Todos");
				}

			this.recargarComboTablaTipoActivoFijoEmpresa(this.tipoactivofijoempresasForeignKey);

		} catch(Exception e) {
			throw e;
		}
	}

	public void cargarCombosForeignKeyTipoDepreciacionEmpresa(Boolean cargarCombosDependencia,Boolean conInitActions,Boolean conSetVariablesGlobales,String sFinalQueryCombo,String sFormularioTipoBusqueda) throws Exception {
		try {
				this.cargarCombosForeignKeyTipoDepreciacionEmpresaListas(cargarCombosDependencia,sFinalQueryCombo);
				this.addItemDefectoCombosForeignKeyTipoDepreciacionEmpresa();
				this.cargarCombosFrameTipoDepreciacionEmpresasForeignKey(sFormularioTipoBusqueda);

				if(conInitActions) {
					this.initActionsCombosForeignKeyDetalleGrupoActivoFijo("Todos");
				}

			this.recargarComboTablaTipoDepreciacionEmpresa(this.tipodepreciacionempresasForeignKey);

		} catch(Exception e) {
			throw e;
		}
	}

	public void cargarCombosForeignKeyEstadoActivoFijo(Boolean cargarCombosDependencia,Boolean conInitActions,Boolean conSetVariablesGlobales,String sFinalQueryCombo,String sFormularioTipoBusqueda) throws Exception {
		try {
				this.cargarCombosForeignKeyEstadoActivoFijoListas(cargarCombosDependencia,sFinalQueryCombo);
				this.addItemDefectoCombosForeignKeyEstadoActivoFijo();
				this.cargarCombosFrameEstadoActivoFijosForeignKey(sFormularioTipoBusqueda);

				if(conInitActions) {
					this.initActionsCombosForeignKeyDetalleGrupoActivoFijo("Todos");
				}

			this.recargarComboTablaEstadoActivoFijo(this.estadoactivofijosForeignKey);

		} catch(Exception e) {
			throw e;
		}
	}

	public void cargarCombosForeignKeyCliente(Boolean cargarCombosDependencia,Boolean conInitActions,Boolean conSetVariablesGlobales,String sFinalQueryCombo,String sFormularioTipoBusqueda) throws Exception {
		try {
				this.cargarCombosForeignKeyClienteListas(cargarCombosDependencia,sFinalQueryCombo);
				this.addItemDefectoCombosForeignKeyCliente();
				this.cargarCombosFrameClientesForeignKey(sFormularioTipoBusqueda);

				if(conInitActions) {
					this.initActionsCombosForeignKeyDetalleGrupoActivoFijo("Todos");
				}

			this.recargarComboTablaCliente(this.clientesForeignKey);

		} catch(Exception e) {
			throw e;
		}
	}

	public void cargarCombosForeignKeyPartidaPresu(Boolean cargarCombosDependencia,Boolean conInitActions,Boolean conSetVariablesGlobales,String sFinalQueryCombo,String sFormularioTipoBusqueda) throws Exception {
		try {
				this.cargarCombosForeignKeyPartidaPresuListas(cargarCombosDependencia,sFinalQueryCombo);
				this.addItemDefectoCombosForeignKeyPartidaPresu();
				this.cargarCombosFramePartidaPresusForeignKey(sFormularioTipoBusqueda);

				if(conInitActions) {
					this.initActionsCombosForeignKeyDetalleGrupoActivoFijo("Todos");
				}

			this.recargarComboTablaPartidaPresu(this.partidapresusForeignKey);

		} catch(Exception e) {
			throw e;
		}
	}
	
	public void jButtonNuevoDetalleActivoFijoActionPerformed(ActionEvent evt,Boolean esRelaciones) throws Exception {   
		try {
			EventoGlobalTipo eventoGlobalTipo=EventoGlobalTipo.FORM_RECARGAR;
			String sTipo="NUEVO_NORMAL";
			
			this.estaModoNuevo=true;
			
			if(this.detalleactivofijoSessionBean.getConGuardarRelaciones()) {
				this.dStart=(double)System.currentTimeMillis();
			}
				
			//if(this.esUsoDesdeHijo) {
			//	eventoGlobalTipo=EventoGlobalTipo.FORM_HIJO_ACTUALIZAR;
			//}
											
			if(this.jInternalFrameDetalleFormDetalleActivoFijo==null) { //if(!this.conCargarFormDetalle) {
				this.inicializarFormDetalle();
			}			
				
			DetalleActivoFijoBeanSwingJInternalFrameAdditional.procesarEventosVista(this.parametroGeneralUsuario,this.moduloActual,this.opcionActual,this.usuarioActual,this,FuncionTipo.BEFORE,ControlTipo.FORM,EventoTipo.LOAD,EventoSubTipo.NEW,"FORM",this.detalleactivofijo,new Object(),this.detalleactivofijoParameterGeneral,this.detalleactivofijoReturnGeneral);
			
			
			if(jTableDatosDetalleActivoFijo.getRowCount()>=1) {
				jTableDatosDetalleActivoFijo.removeRowSelectionInterval(0, jTableDatosDetalleActivoFijo.getRowCount()-1);						
			}
			
			this.isEsNuevoDetalleActivoFijo=true;
			
			//ESTABLECE SI ES RELACIONADO O NO 
			this.habilitarDeshabilitarTipoMantenimientoDetalleActivoFijo(esRelaciones);
			
			this.nuevoPreparar(false); 
			this.habilitarDeshabilitarControlesDetalleActivoFijo(true);			
			//this.detalleactivofijo=new DetalleActivoFijo();
			//this.detalleactivofijo.setIsChanged(true);
			
			//NO FUNCIONA BINDINGS
			this.inicializarActualizarBindingBotonesDetalleActivoFijo(false) ;						
			 
			//SI ES MANUAL
			//this.inicializarActualizarBindingBotonesManualDetalleActivoFijo() ;
			
			if(DetalleActivoFijoJInternalFrame.CON_DATOS_FRAME) {
				this.abrirFrameDetalleDetalleActivoFijo(esRelaciones);
			}
					
			//Se Duplica, sin sentido
			//this.actualizarInformacion("EVENTO_NUEVO",false,this.detalleactivofijo);	
			this.actualizarInformacion("INFO_PADRE",false,this.detalleactivofijo);				
			
			DetalleActivoFijoBeanSwingJInternalFrameAdditional.procesarEventosVista(this.parametroGeneralUsuario,this.moduloActual,this.opcionActual,this.usuarioActual,this,FuncionTipo.AFTER,ControlTipo.FORM,EventoTipo.LOAD,EventoSubTipo.NEW,"FORM",this.detalleactivofijo,new Object(),this.detalleactivofijoParameterGeneral,this.detalleactivofijoReturnGeneral);
			
			if(this.detalleactivofijoSessionBean.getConGuardarRelaciones()) {
				this.dEnd=(double)System.currentTimeMillis();					
				this.dDif=this.dEnd - this.dStart;
					
				if(Constantes.ISDEVELOPING) {
					System.out.println("Tiempo(ms) Nuevo Preparar DetalleActivoFijo: " + this.dDif); 
				}
			}
			
			//false para que pueda generar eventos
			this.estaModoNuevo=false;
							
			//Con this.estaModoNuevo=false;, se permite actualizar y usar eventos control al mismo tiempo (FuncionTipo.LAST)			
			DetalleActivoFijoBeanSwingJInternalFrameAdditional.procesarEventosVista(this.parametroGeneralUsuario,this.moduloActual,this.opcionActual,this.usuarioActual,this,FuncionTipo.LAST,ControlTipo.FORM,EventoTipo.CLIC,EventoSubTipo.NEW,sTipo,this.detalleactivofijo,new Object(),this.detalleactivofijoParameterGeneral,this.detalleactivofijoReturnGeneral);
			
		} catch(Exception e) {									
			FuncionesSwing.manageException(this, e,logger,DetalleActivoFijoConstantesFunciones.CLASSNAME);
			
		} finally {
			this.estaModoNuevo=false;			
		}
	}
	
	public void jButtonDuplicarDetalleActivoFijoActionPerformed(ActionEvent evt,Boolean esRelaciones) throws Exception {   
		try {
			Boolean soloDuplicarUno=false;
			Boolean conSeleccionarFilaTabla=false;
			
			this.estaModoNuevo=true;
			this.estaModoDuplicar=true;
			
			ArrayList<DetalleActivoFijo> detalleactivofijosSeleccionados=new ArrayList<DetalleActivoFijo>();
			int intSelectedRow =-1;
			Integer iNumRowsSeleccionados=0;
			int[] arrNumRowsSeleccionados=null;
			
			//NO SE TOMA EN CUENTA, SI LOS SELECCIONADOS
			if(conSeleccionarFilaTabla) {
				arrNumRowsSeleccionados=this.jTableDatosDetalleActivoFijo.getSelectedRows();
				iNumRowsSeleccionados=this.jTableDatosDetalleActivoFijo.getSelectedRows().length;			
			}
			
			detalleactivofijosSeleccionados=this.getDetalleActivoFijosSeleccionados(false);
				
			if((soloDuplicarUno && iNumRowsSeleccionados.equals(1)) || !soloDuplicarUno) {
				//LO HACE NUEVOPREPARAR
				//this.iIdNuevoDetalleActivoFijo--;			
				//DetalleActivoFijo detalleactivofijoAux= new DetalleActivoFijo();			
				//detalleactivofijoAux.setId(this.iIdNuevoDetalleActivoFijo);																
				
				//NO SE TOMA EN CUENTA, SI LOS SELECCIONADOS
				//DetalleActivoFijo detalleactivofijoOrigen=new DetalleActivoFijo();
				//for(Integer iNumRowSeleccionado:arrNumRowsSeleccionados) {				
				
				for(DetalleActivoFijo detalleactivofijoOrigen : detalleactivofijosSeleccionados) {
					if(conSeleccionarFilaTabla) {
						if(!soloDuplicarUno) {
							//NO SE TOMA EN CUENTA, SI LOS SELECCIONADOS
							//intSelectedRow =iNumRowSeleccionado;
						} else {
							intSelectedRow = this.jTableDatosDetalleActivoFijo.getSelectedRow();
						}
						
						//ARCHITECTURE
						if(Constantes.ISUSAEJBLOGICLAYER) {
							detalleactivofijoOrigen =(DetalleActivoFijo) this.detalleactivofijoLogic.getDetalleActivoFijos().toArray()[this.jTableDatosDetalleActivoFijo.convertRowIndexToModel(intSelectedRow)];
						} else if(Constantes.ISUSAEJBREMOTE || Constantes.ISUSAEJBHOME) {
							detalleactivofijoOrigen =(DetalleActivoFijo) this.detalleactivofijos.toArray()[this.jTableDatosDetalleActivoFijo.convertRowIndexToModel(intSelectedRow)];
						}
					}
					
					this.aumentarTamanioFilaNuevaTablaDetalleActivoFijo();
					
					if(this.conTotales) {
						this.quitarFilaTotales();
					}
					
					this.nuevoPreparar(true);
					
					this.detalleactivofijo.setsType("DUPLICADO");
					
					this.setCopiarVariablesObjetosDetalleActivoFijo(detalleactivofijoOrigen,this.detalleactivofijo,true,true);
					
					this.setVariablesFormularioToObjetoActualForeignKeysDetalleActivoFijo(this.detalleactivofijo);
					
					//LO HACE NUEVOPREPARAR
					/*
					if(Constantes.ISUSAEJBLOGICLAYER) {				
						this.detalleactivofijoLogic.getDetalleActivoFijos().add(this.detalleactivofijoAux);
					} else if(Constantes.ISUSAEJBREMOTE||Constantes.ISUSAEJBHOME) {
						this.detalleactivofijos.add(this.detalleactivofijoAux);				
					}
					*/
				}
				
				this.inicializarActualizarBindingTablaDetalleActivoFijo(false);
				
				this.jTableDatosDetalleActivoFijo.setRowSelectionInterval(this.getIndiceNuevoDetalleActivoFijo(), this.getIndiceNuevoDetalleActivoFijo());
				
				int iLastRow =  this.jTableDatosDetalleActivoFijo.getRowCount () - 1;
				Rectangle rectangle = this.jTableDatosDetalleActivoFijo.getCellRect(iLastRow, 0, true);
				
				this.jTableDatosDetalleActivoFijo.scrollRectToVisible(rectangle);
				
				//FILA TOTALES
				if(this.conTotales) {
					this.crearFilaTotales();
					
					this.inicializarActualizarBindingTablaDetalleActivoFijo(false);
				}
			} else {
				throw new Exception("DEBE ESTAR SELECCIONADO 1 REGISTRO");
			}
			
		} catch(Exception e) {			
			FuncionesSwing.manageException(this, e,logger,DetalleActivoFijoConstantesFunciones.CLASSNAME);
		
		} finally {
			this.estaModoNuevo=false;
			this.estaModoDuplicar=false;
		}
	}
	
	public void jButtonCopiarDetalleActivoFijoActionPerformed(ActionEvent evt) throws Exception {   
		try {
			
			Boolean conSeleccionarFilaTabla=false;
			Integer iNumRowsSeleccionados=0;
			int[] intSelectedRows =null;
			int intSelectedRow =0;
			
			this.estaModoCopiar=true;
			
			ArrayList<DetalleActivoFijo> detalleactivofijosSeleccionados=new ArrayList<DetalleActivoFijo>();									
		
			DetalleActivoFijo detalleactivofijoOrigen=new DetalleActivoFijo();
			DetalleActivoFijo detalleactivofijoDestino=new DetalleActivoFijo();
				
			detalleactivofijosSeleccionados=this.getDetalleActivoFijosSeleccionados(false);
			
			if(conSeleccionarFilaTabla) {
				iNumRowsSeleccionados=this.jTableDatosDetalleActivoFijo.getSelectedRows().length;	
			}
			
			if(iNumRowsSeleccionados.equals(2) || detalleactivofijosSeleccionados.size()==2) {
				if(conSeleccionarFilaTabla) {
					intSelectedRows =this.jTableDatosDetalleActivoFijo.getSelectedRows();
					intSelectedRow = intSelectedRows[0];	
									
					//ARCHITECTURE
					if(Constantes.ISUSAEJBLOGICLAYER) {
						detalleactivofijoOrigen =(DetalleActivoFijo) this.detalleactivofijoLogic.getDetalleActivoFijos().toArray()[this.jTableDatosDetalleActivoFijo.convertRowIndexToModel(intSelectedRow)];
					} else if(Constantes.ISUSAEJBREMOTE || Constantes.ISUSAEJBHOME) {
						detalleactivofijoOrigen =(DetalleActivoFijo) this.detalleactivofijos.toArray()[this.jTableDatosDetalleActivoFijo.convertRowIndexToModel(intSelectedRow)];
					}
					//ARCHITECTURE
					
					intSelectedRow = intSelectedRows[1];
					
					//ARCHITECTURE
					if(Constantes.ISUSAEJBLOGICLAYER) {
						detalleactivofijoDestino =(DetalleActivoFijo) this.detalleactivofijoLogic.getDetalleActivoFijos().toArray()[this.jTableDatosDetalleActivoFijo.convertRowIndexToModel(intSelectedRow)];
					} else if(Constantes.ISUSAEJBREMOTE || Constantes.ISUSAEJBHOME) {
						detalleactivofijoDestino =(DetalleActivoFijo) this.detalleactivofijos.toArray()[this.jTableDatosDetalleActivoFijo.convertRowIndexToModel(intSelectedRow)];
					}
					//ARCHITECTURE
				}
				
				detalleactivofijoOrigen =detalleactivofijosSeleccionados.get(0);
				detalleactivofijoDestino =detalleactivofijosSeleccionados.get(1);
				
				this.setCopiarVariablesObjetosDetalleActivoFijo(detalleactivofijoOrigen,detalleactivofijoDestino,true,false);
				
				detalleactivofijoDestino.setsType("DUPLICADO");
				
				//ARCHITECTURE
				if(Constantes.ISUSAEJBLOGICLAYER) {
					actualizarLista(detalleactivofijoDestino,detalleactivofijoLogic.getDetalleActivoFijos());					
				} else if(Constantes.ISUSAEJBREMOTE||Constantes.ISUSAEJBHOME) {
					actualizarLista(detalleactivofijoDestino,detalleactivofijos);
				}
				//ARCHITECTURE
				
				this.inicializarActualizarBindingTablaDetalleActivoFijo(false);
				
				//this.jTableDatosDetalleActivoFijo.setRowSelectionInterval(this.getIndiceNuevoDetalleActivoFijo(), this.getIndiceNuevoDetalleActivoFijo());
				
				int iLastRow =  this.jTableDatosDetalleActivoFijo.getRowCount () - 1;
				Rectangle rectangle = this.jTableDatosDetalleActivoFijo.getCellRect(iLastRow, 0, true);
				
				this.jTableDatosDetalleActivoFijo.scrollRectToVisible(rectangle);
				
				//FILA TOTALES
				if(this.conTotales) {
					//this.crearFilaTotales();
					
					this.inicializarActualizarBindingTablaDetalleActivoFijo(false);
				}
			} else {
				throw new Exception("DEBEN ESTAR SELECCIONADOS 2 REGISTROS");
			}
		} catch(Exception e) {
			FuncionesSwing.manageException(this, e,logger,DetalleActivoFijoConstantesFunciones.CLASSNAME);
		
		}  finally {
			this.estaModoCopiar=false;
		}
	}
	
	public void jButtonVerFormDetalleActivoFijoActionPerformed(ActionEvent evt) throws Exception {   
		try {
			
			if(this.jInternalFrameDetalleFormDetalleActivoFijo==null) { //if(!this.conCargarFormDetalle) {
				this.inicializarFormDetalle();
			}
			
			this.jInternalFrameDetalleFormDetalleActivoFijo.setSelected(true);
			
		} catch(Exception e) {
			FuncionesSwing.manageException(this, e,logger,DetalleActivoFijoConstantesFunciones.CLASSNAME);
		}
	}
	
	public void jButtonMostrarOcultarDetalleActivoFijoActionPerformed(ActionEvent evt) throws Exception {   
		try {
			Boolean isVisible=this.jPanelParametrosReportesDetalleActivoFijo.isVisible();
			
			//BYDAN_BUSQUEDAS
			
			this.jTabbedPaneBusquedasDetalleActivoFijo.setVisible(!isVisible);			
			
			
			this.jPanelParametrosReportesDetalleActivoFijo.setVisible(!isVisible);
			this.jPanelPaginacionDetalleActivoFijo.setVisible(!isVisible);
			this.jPanelAccionesDetalleActivoFijo.setVisible(!isVisible);
							
		} catch(Exception e) {
			FuncionesSwing.manageException(this, e,logger,DetalleActivoFijoConstantesFunciones.CLASSNAME);
		}
	}
	
	public void jButtonCerrarDetalleActivoFijoActionPerformed(ActionEvent evt) throws Exception {   
		try {
			this.closingInternalFrameDetalleActivoFijo();
			
			//if(this.jInternalFrameParent==null) {
				//this.dispose();
			/*} else {
				this.setVisible(false);
	        	this.setSelected(false);	
			}*/			
		} catch(Exception e) {
			FuncionesSwing.manageException(this, e,logger,DetalleActivoFijoConstantesFunciones.CLASSNAME);
		}
	}
	
	public void jButtonCerrarReporteDinamicoDetalleActivoFijoActionPerformed(ActionEvent evt) throws Exception {   
		try {
			
			this.cerrarFrameReporteDinamicoDetalleActivoFijo();
			
						
		} catch(Exception e) {
			FuncionesSwing.manageException(this, e,logger,DetalleActivoFijoConstantesFunciones.CLASSNAME);
		}
	}
	
	public void jButtonCerrarImportacionDetalleActivoFijoActionPerformed(ActionEvent evt) throws Exception {   
		try {
			
			this.cerrarFrameImportacionDetalleActivoFijo();
			
						
		} catch(Exception e) {
			FuncionesSwing.manageException(this, e,logger,DetalleActivoFijoConstantesFunciones.CLASSNAME);
		}
	}
	
	
	public void jButtonAbrirOrderByDetalleActivoFijoActionPerformed(ActionEvent evt) throws Exception {   
		try {
			
			
			this.abrirInicializarFrameOrderByDetalleActivoFijo();
			
			this.abrirFrameOrderByDetalleActivoFijo();
			
			
		} catch(Exception e) {
			FuncionesSwing.manageException(this, e,logger,DetalleActivoFijoConstantesFunciones.CLASSNAME);
		}
	}
	
	public void jButtonCerrarOrderByDetalleActivoFijoActionPerformed(ActionEvent evt) throws Exception {   
		try {
			
			this.cerrarFrameOrderByDetalleActivoFijo();
			
						
		} catch(Exception e) {
			FuncionesSwing.manageException(this, e,logger,DetalleActivoFijoConstantesFunciones.CLASSNAME);
		}
	}
	
	public void abrirFrameDetalleDetalleActivoFijo(Boolean esRelaciones) throws Exception {	    	        
	    try {
			//CAUSA PROBLEMAS, SE ADICIONA EN CONSTRUCTOR, LUEGO SOLO VISIBLE true y false
			//this.jDesktopPane.add(jInternalFrameDetalleFormDetalleActivoFijo);
			
			if(!esRelaciones) {
				if(this.jInternalFrameDetalleFormDetalleActivoFijo.isMaximum()) {
					this.jInternalFrameDetalleFormDetalleActivoFijo.setMaximum(false);
				}								
				
	    		this.jInternalFrameDetalleFormDetalleActivoFijo.setSize(this.jInternalFrameDetalleFormDetalleActivoFijo.iWidthFormulario,this.jInternalFrameDetalleFormDetalleActivoFijo.iHeightFormulario);
	    	} else {
				if(this.iWidthScroll<this.jInternalFrameDetalleFormDetalleActivoFijo.iWidthFormularioMaximo) {
	    			this.jInternalFrameDetalleFormDetalleActivoFijo.setSize(this.iWidthScroll,this.iHeightScroll);
				} else {
					if(!this.jInternalFrameDetalleFormDetalleActivoFijo.isMaximum()) {
						this.jInternalFrameDetalleFormDetalleActivoFijo.setMaximum(true);
					}
				}
				
				if(this.jInternalFrameDetalleFormDetalleActivoFijo.jContentPaneDetalleDetalleActivoFijo.getWidth() > this.getWidth()) {
					this.jInternalFrameDetalleFormDetalleActivoFijo.jTabbedPaneRelacionesDetalleActivoFijo.setMinimumSize(new Dimension(this.jInternalFrameDetalleFormDetalleActivoFijo.jContentPaneDetalleDetalleActivoFijo.getWidth(),DetalleActivoFijoConstantesFunciones.ALTO_TABPANE_RELACIONES));
					this.jInternalFrameDetalleFormDetalleActivoFijo.jTabbedPaneRelacionesDetalleActivoFijo.setMaximumSize(new Dimension(this.jInternalFrameDetalleFormDetalleActivoFijo.jContentPaneDetalleDetalleActivoFijo.getWidth(),DetalleActivoFijoConstantesFunciones.ALTO_TABPANE_RELACIONES));
					this.jInternalFrameDetalleFormDetalleActivoFijo.jTabbedPaneRelacionesDetalleActivoFijo.setPreferredSize(new Dimension(this.jInternalFrameDetalleFormDetalleActivoFijo.jContentPaneDetalleDetalleActivoFijo.getWidth(),DetalleActivoFijoConstantesFunciones.ALTO_TABPANE_RELACIONES));
					
					Dimension dimension=new Dimension(); 
					
					

					if(DepreciacionActivoFijoJInternalFrame.ESTA_CARGADO_PORPARTE) {
						this.redimensionarTablaPanelRelacionadaDepreciacionActivoFijo();
					}

					if(GastoDepreciacionCentroCostoJInternalFrame.ESTA_CARGADO_PORPARTE) {
						this.redimensionarTablaPanelRelacionadaGastoDepreciacionCentroCosto();
					}

					if(MantenimientoActivoFijoJInternalFrame.ESTA_CARGADO_PORPARTE) {
						this.redimensionarTablaPanelRelacionadaMantenimientoActivoFijo();
					}

					if(MetodoDepreciacionJInternalFrame.ESTA_CARGADO_PORPARTE) {
						this.redimensionarTablaPanelRelacionadaMetodoDepreciacion();
					}

					if(MovimientoActivoFijoJInternalFrame.ESTA_CARGADO_PORPARTE) {
						this.redimensionarTablaPanelRelacionadaMovimientoActivoFijo();
					}

					if(ParteActivoFijoJInternalFrame.ESTA_CARGADO_PORPARTE) {
						this.redimensionarTablaPanelRelacionadaParteActivoFijo();
					}

					if(ResponsableActivoFijoJInternalFrame.ESTA_CARGADO_PORPARTE) {
						this.redimensionarTablaPanelRelacionadaResponsableActivoFijo();
					}

					if(ServicioTransporteJInternalFrame.ESTA_CARGADO_PORPARTE) {
						this.redimensionarTablaPanelRelacionadaServicioTransporte();
					}

					if(VehiculoJInternalFrame.ESTA_CARGADO_PORPARTE) {
						this.redimensionarTablaPanelRelacionadaVehiculo();
					}
					
				}
	    	}
			
		
	       	this.jInternalFrameDetalleFormDetalleActivoFijo.setVisible(true);
	        this.jInternalFrameDetalleFormDetalleActivoFijo.setSelected(true);
		
	    } catch (final java.beans.PropertyVetoException e) {
		
			FuncionesSwing.manageException(this, e,logger,DetalleActivoFijoConstantesFunciones.CLASSNAME);
	    }
	}
	
	
	public void abrirInicializarFrameOrderByDetalleActivoFijo() throws Exception {	    	        
	    try {
			if(this.jInternalFrameOrderByDetalleActivoFijo==null) {
				
				if(!this.conCargarMinimo) {
					this.jInternalFrameOrderByDetalleActivoFijo=new OrderByJInternalFrame(STIPO_TAMANIO_GENERAL,this.jButtonAbrirOrderByDetalleActivoFijo,false,this);
				} else {
					this.jInternalFrameOrderByDetalleActivoFijo=new OrderByJInternalFrame(STIPO_TAMANIO_GENERAL,this.jButtonAbrirOrderByDetalleActivoFijo,true,this);
				}
				
				this.jDesktopPane.add(this.jInternalFrameOrderByDetalleActivoFijo);
				this.jInternalFrameOrderByDetalleActivoFijo.setVisible(false);
				this.jInternalFrameOrderByDetalleActivoFijo.setSelected(false);
				
				this.jInternalFrameOrderByDetalleActivoFijo.getjButtonCerrarOrderBy().addActionListener (new ButtonActionListener(this,"CerrarOrderByDetalleActivoFijo"));
				
				this.inicializarActualizarBindingTablaOrderByDetalleActivoFijo();
			}
		} catch (final Exception e) {
			
		}
	}
	
	
	
	public void abrirInicializarFrameImportacionDetalleActivoFijo() throws Exception {	    	        
	    try {
			if(this.jInternalFrameImportacionDetalleActivoFijo==null) {
				
				this.jInternalFrameImportacionDetalleActivoFijo=new ImportacionJInternalFrame(DetalleActivoFijoConstantesFunciones.SCLASSWEBTITULO,this);			
				
				MainJFrame.cerrarJInternalFramesExistentes(this.jDesktopPane,this.jInternalFrameImportacionDetalleActivoFijo);							
				
				this.jDesktopPane.add(this.jInternalFrameImportacionDetalleActivoFijo);
				this.jInternalFrameImportacionDetalleActivoFijo.setVisible(false);
				this.jInternalFrameImportacionDetalleActivoFijo.setSelected(false);


				this.jInternalFrameImportacionDetalleActivoFijo.getjButtonCerrarImportacion().addActionListener (new ButtonActionListener(this,"CerrarImportacionDetalleActivoFijo"));
				this.jInternalFrameImportacionDetalleActivoFijo.getjButtonGenerarImportacion().addActionListener (new ButtonActionListener(this,"GenerarImportacionDetalleActivoFijo"));
				this.jInternalFrameImportacionDetalleActivoFijo.getjButtonAbrirImportacion().addActionListener (new ButtonActionListener(this,"AbrirImportacionDetalleActivoFijo"));


			}
		} catch (final Exception e) {
			
		}
	}		
	
	
	
	public void abrirInicializarFrameReporteDinamicoDetalleActivoFijo() throws Exception {	    	        
	    try {
			
			if(this.jInternalFrameReporteDinamicoDetalleActivoFijo==null) {
				this.jInternalFrameReporteDinamicoDetalleActivoFijo=new ReporteDinamicoJInternalFrame(DetalleActivoFijoConstantesFunciones.SCLASSWEBTITULO,this);	
				
				MainJFrame.cerrarJInternalFramesExistentes(this.jDesktopPane,this.jInternalFrameReporteDinamicoDetalleActivoFijo);	
	
	
				this.jDesktopPane.add(this.jInternalFrameReporteDinamicoDetalleActivoFijo);
				this.jInternalFrameReporteDinamicoDetalleActivoFijo.setVisible(false);
				this.jInternalFrameReporteDinamicoDetalleActivoFijo.setSelected(false);
	
	
	
				this.jInternalFrameReporteDinamicoDetalleActivoFijo.getjButtonCerrarReporteDinamico().addActionListener (new ButtonActionListener(this,"CerrarReporteDinamicoDetalleActivoFijo"));
				this.jInternalFrameReporteDinamicoDetalleActivoFijo.getjButtonGenerarReporteDinamico().addActionListener (new ButtonActionListener(this,"GenerarReporteDinamicoDetalleActivoFijo"));
				this.jInternalFrameReporteDinamicoDetalleActivoFijo.getjButtonGenerarExcelReporteDinamico().addActionListener (new ButtonActionListener(this,"GenerarExcelReporteDinamicoDetalleActivoFijo"));
	
				this.inicializarActualizarBindingtiposArchivosReportesDinamicoAccionesManualDetalleActivoFijo();
			}

		} catch (final Exception e) {
			
		}
	}	
	
	
	
		

	public void redimensionarTablaPanelRelacionadaDepreciacionActivoFijo() {
		Dimension dimension=new Dimension();

		dimension=this.jInternalFrameDetalleFormDetalleActivoFijo.depreciacionactivofijoBeanSwingJInternalFrame.jScrollPanelDatosDepreciacionActivoFijo.getPreferredSize();
		dimension.setSize(this.jInternalFrameDetalleFormDetalleActivoFijo.jContentPaneDetalleDetalleActivoFijo.getWidth(),dimension.getHeight());

		this.jInternalFrameDetalleFormDetalleActivoFijo.depreciacionactivofijoBeanSwingJInternalFrame.jScrollPanelDatosDepreciacionActivoFijo.setMinimumSize(dimension);
		this.jInternalFrameDetalleFormDetalleActivoFijo.depreciacionactivofijoBeanSwingJInternalFrame.jScrollPanelDatosDepreciacionActivoFijo.setMaximumSize(dimension);
		this.jInternalFrameDetalleFormDetalleActivoFijo.depreciacionactivofijoBeanSwingJInternalFrame.jScrollPanelDatosDepreciacionActivoFijo.setPreferredSize(dimension);


	}

	public void redimensionarTablaPanelRelacionadaGastoDepreciacionCentroCosto() {
		Dimension dimension=new Dimension();

		dimension=this.jInternalFrameDetalleFormDetalleActivoFijo.gastodepreciacioncentrocostoBeanSwingJInternalFrame.jScrollPanelDatosGastoDepreciacionCentroCosto.getPreferredSize();
		dimension.setSize(this.jInternalFrameDetalleFormDetalleActivoFijo.jContentPaneDetalleDetalleActivoFijo.getWidth(),dimension.getHeight());

		this.jInternalFrameDetalleFormDetalleActivoFijo.gastodepreciacioncentrocostoBeanSwingJInternalFrame.jScrollPanelDatosGastoDepreciacionCentroCosto.setMinimumSize(dimension);
		this.jInternalFrameDetalleFormDetalleActivoFijo.gastodepreciacioncentrocostoBeanSwingJInternalFrame.jScrollPanelDatosGastoDepreciacionCentroCosto.setMaximumSize(dimension);
		this.jInternalFrameDetalleFormDetalleActivoFijo.gastodepreciacioncentrocostoBeanSwingJInternalFrame.jScrollPanelDatosGastoDepreciacionCentroCosto.setPreferredSize(dimension);


	}

	public void redimensionarTablaPanelRelacionadaMantenimientoActivoFijo() {
		Dimension dimension=new Dimension();

		dimension=this.jInternalFrameDetalleFormDetalleActivoFijo.mantenimientoactivofijoBeanSwingJInternalFrame.jScrollPanelDatosMantenimientoActivoFijo.getPreferredSize();
		dimension.setSize(this.jInternalFrameDetalleFormDetalleActivoFijo.jContentPaneDetalleDetalleActivoFijo.getWidth(),dimension.getHeight());

		this.jInternalFrameDetalleFormDetalleActivoFijo.mantenimientoactivofijoBeanSwingJInternalFrame.jScrollPanelDatosMantenimientoActivoFijo.setMinimumSize(dimension);
		this.jInternalFrameDetalleFormDetalleActivoFijo.mantenimientoactivofijoBeanSwingJInternalFrame.jScrollPanelDatosMantenimientoActivoFijo.setMaximumSize(dimension);
		this.jInternalFrameDetalleFormDetalleActivoFijo.mantenimientoactivofijoBeanSwingJInternalFrame.jScrollPanelDatosMantenimientoActivoFijo.setPreferredSize(dimension);


	}

	public void redimensionarTablaPanelRelacionadaMetodoDepreciacion() {
		Dimension dimension=new Dimension();

		dimension=this.jInternalFrameDetalleFormDetalleActivoFijo.metododepreciacionBeanSwingJInternalFrame.jScrollPanelDatosMetodoDepreciacion.getPreferredSize();
		dimension.setSize(this.jInternalFrameDetalleFormDetalleActivoFijo.jContentPaneDetalleDetalleActivoFijo.getWidth(),dimension.getHeight());

		this.jInternalFrameDetalleFormDetalleActivoFijo.metododepreciacionBeanSwingJInternalFrame.jScrollPanelDatosMetodoDepreciacion.setMinimumSize(dimension);
		this.jInternalFrameDetalleFormDetalleActivoFijo.metododepreciacionBeanSwingJInternalFrame.jScrollPanelDatosMetodoDepreciacion.setMaximumSize(dimension);
		this.jInternalFrameDetalleFormDetalleActivoFijo.metododepreciacionBeanSwingJInternalFrame.jScrollPanelDatosMetodoDepreciacion.setPreferredSize(dimension);


	}

	public void redimensionarTablaPanelRelacionadaMovimientoActivoFijo() {
		Dimension dimension=new Dimension();

		dimension=this.jInternalFrameDetalleFormDetalleActivoFijo.movimientoactivofijoBeanSwingJInternalFrame.jScrollPanelDatosMovimientoActivoFijo.getPreferredSize();
		dimension.setSize(this.jInternalFrameDetalleFormDetalleActivoFijo.jContentPaneDetalleDetalleActivoFijo.getWidth(),dimension.getHeight());

		this.jInternalFrameDetalleFormDetalleActivoFijo.movimientoactivofijoBeanSwingJInternalFrame.jScrollPanelDatosMovimientoActivoFijo.setMinimumSize(dimension);
		this.jInternalFrameDetalleFormDetalleActivoFijo.movimientoactivofijoBeanSwingJInternalFrame.jScrollPanelDatosMovimientoActivoFijo.setMaximumSize(dimension);
		this.jInternalFrameDetalleFormDetalleActivoFijo.movimientoactivofijoBeanSwingJInternalFrame.jScrollPanelDatosMovimientoActivoFijo.setPreferredSize(dimension);


	}

	public void redimensionarTablaPanelRelacionadaParteActivoFijo() {
		Dimension dimension=new Dimension();

		dimension=this.jInternalFrameDetalleFormDetalleActivoFijo.parteactivofijoBeanSwingJInternalFrame.jScrollPanelDatosParteActivoFijo.getPreferredSize();
		dimension.setSize(this.jInternalFrameDetalleFormDetalleActivoFijo.jContentPaneDetalleDetalleActivoFijo.getWidth(),dimension.getHeight());

		this.jInternalFrameDetalleFormDetalleActivoFijo.parteactivofijoBeanSwingJInternalFrame.jScrollPanelDatosParteActivoFijo.setMinimumSize(dimension);
		this.jInternalFrameDetalleFormDetalleActivoFijo.parteactivofijoBeanSwingJInternalFrame.jScrollPanelDatosParteActivoFijo.setMaximumSize(dimension);
		this.jInternalFrameDetalleFormDetalleActivoFijo.parteactivofijoBeanSwingJInternalFrame.jScrollPanelDatosParteActivoFijo.setPreferredSize(dimension);


	}

	public void redimensionarTablaPanelRelacionadaResponsableActivoFijo() {
		Dimension dimension=new Dimension();

		dimension=this.jInternalFrameDetalleFormDetalleActivoFijo.responsableactivofijoBeanSwingJInternalFrame.jScrollPanelDatosResponsableActivoFijo.getPreferredSize();
		dimension.setSize(this.jInternalFrameDetalleFormDetalleActivoFijo.jContentPaneDetalleDetalleActivoFijo.getWidth(),dimension.getHeight());

		this.jInternalFrameDetalleFormDetalleActivoFijo.responsableactivofijoBeanSwingJInternalFrame.jScrollPanelDatosResponsableActivoFijo.setMinimumSize(dimension);
		this.jInternalFrameDetalleFormDetalleActivoFijo.responsableactivofijoBeanSwingJInternalFrame.jScrollPanelDatosResponsableActivoFijo.setMaximumSize(dimension);
		this.jInternalFrameDetalleFormDetalleActivoFijo.responsableactivofijoBeanSwingJInternalFrame.jScrollPanelDatosResponsableActivoFijo.setPreferredSize(dimension);


	}

	public void redimensionarTablaPanelRelacionadaServicioTransporte() {
		Dimension dimension=new Dimension();

		dimension=this.jInternalFrameDetalleFormDetalleActivoFijo.serviciotransporteBeanSwingJInternalFrame.jScrollPanelDatosServicioTransporte.getPreferredSize();
		dimension.setSize(this.jInternalFrameDetalleFormDetalleActivoFijo.jContentPaneDetalleDetalleActivoFijo.getWidth(),dimension.getHeight());

		this.jInternalFrameDetalleFormDetalleActivoFijo.serviciotransporteBeanSwingJInternalFrame.jScrollPanelDatosServicioTransporte.setMinimumSize(dimension);
		this.jInternalFrameDetalleFormDetalleActivoFijo.serviciotransporteBeanSwingJInternalFrame.jScrollPanelDatosServicioTransporte.setMaximumSize(dimension);
		this.jInternalFrameDetalleFormDetalleActivoFijo.serviciotransporteBeanSwingJInternalFrame.jScrollPanelDatosServicioTransporte.setPreferredSize(dimension);


	}

	public void redimensionarTablaPanelRelacionadaVehiculo() {
		Dimension dimension=new Dimension();

		dimension=this.jInternalFrameDetalleFormDetalleActivoFijo.vehiculoBeanSwingJInternalFrame.jScrollPanelDatosVehiculo.getPreferredSize();
		dimension.setSize(this.jInternalFrameDetalleFormDetalleActivoFijo.jContentPaneDetalleDetalleActivoFijo.getWidth(),dimension.getHeight());

		this.jInternalFrameDetalleFormDetalleActivoFijo.vehiculoBeanSwingJInternalFrame.jScrollPanelDatosVehiculo.setMinimumSize(dimension);
		this.jInternalFrameDetalleFormDetalleActivoFijo.vehiculoBeanSwingJInternalFrame.jScrollPanelDatosVehiculo.setMaximumSize(dimension);
		this.jInternalFrameDetalleFormDetalleActivoFijo.vehiculoBeanSwingJInternalFrame.jScrollPanelDatosVehiculo.setPreferredSize(dimension);


	}
					
	public void cerrarFrameDetalleDetalleActivoFijo() throws Exception {	    	        
	    try {
			//this.jDesktopPane.add(jInternalFrameDetalleFormDetalleActivoFijo);
			
	       	this.jInternalFrameDetalleFormDetalleActivoFijo.setVisible(false);
	        this.jInternalFrameDetalleFormDetalleActivoFijo.setSelected(false);
			
			//this.jInternalFrameDetalleFormDetalleActivoFijo.dispose();
			//this.jInternalFrameDetalleFormDetalleActivoFijo=null;
			
	    } catch (final java.beans.PropertyVetoException e) {
		
			FuncionesSwing.manageException(this, e,logger,DetalleActivoFijoConstantesFunciones.CLASSNAME);
	    }
	}
	
	
	public void abrirFrameReporteDinamicoDetalleActivoFijo() throws Exception {	    	        
	    try {
			
			this.jInternalFrameReporteDinamicoDetalleActivoFijo.setVisible(true);
	        this.jInternalFrameReporteDinamicoDetalleActivoFijo.setSelected(true);			
			
	    } catch (final java.beans.PropertyVetoException e) {
		
			FuncionesSwing.manageException(this, e,logger,DetalleActivoFijoConstantesFunciones.CLASSNAME);
	    }		
	}
	
	
	
	public void abrirFrameImportacionDetalleActivoFijo() throws Exception {	    	        		
	    try {			
			this.jInternalFrameImportacionDetalleActivoFijo.setVisible(true);
	        this.jInternalFrameImportacionDetalleActivoFijo.setSelected(true);			
			
	    } catch (final java.beans.PropertyVetoException e) {
		
			FuncionesSwing.manageException(this, e,logger,DetalleActivoFijoConstantesFunciones.CLASSNAME);
	    }		
	}	
	
	
	
	
	
	public void abrirFrameOrderByDetalleActivoFijo() throws Exception {	    	        		
	    try {
			this.jInternalFrameOrderByDetalleActivoFijo.setVisible(true);
	        this.jInternalFrameOrderByDetalleActivoFijo.setSelected(true);			
			
	    } catch (final java.beans.PropertyVetoException e) {
		
			FuncionesSwing.manageException(this, e,logger,DetalleActivoFijoConstantesFunciones.CLASSNAME);
	    }		
	}
	
	
	
	public void cerrarFrameOrderByDetalleActivoFijo() throws Exception {	    	        		
	    try {			
			this.jInternalFrameOrderByDetalleActivoFijo.setVisible(false);
	        this.jInternalFrameOrderByDetalleActivoFijo.setSelected(false);			
		
	    } catch (final java.beans.PropertyVetoException e) {
		
			FuncionesSwing.manageException(this, e,logger,DetalleActivoFijoConstantesFunciones.CLASSNAME);
	    }		
	}
	
	
	
	public void cerrarFrameReporteDinamicoDetalleActivoFijo() throws Exception {			
	    try {
			this.jInternalFrameReporteDinamicoDetalleActivoFijo.setVisible(false);
	        this.jInternalFrameReporteDinamicoDetalleActivoFijo.setSelected(false);			
		
	    } catch (final java.beans.PropertyVetoException e) {
		
			FuncionesSwing.manageException(this, e,logger,DetalleActivoFijoConstantesFunciones.CLASSNAME);
	    }		
	}
	
	
	
	public void cerrarFrameImportacionDetalleActivoFijo() throws Exception {	    	        		
	    try {
			this.jInternalFrameImportacionDetalleActivoFijo.setVisible(false);
	        this.jInternalFrameImportacionDetalleActivoFijo.setSelected(false);
		
	    } catch (final java.beans.PropertyVetoException e) {
		
			FuncionesSwing.manageException(this, e,logger,DetalleActivoFijoConstantesFunciones.CLASSNAME);
	    }		
	}
	
	
	
	
	public void jButtonModificarDetalleActivoFijoActionPerformed(ActionEvent evt) throws Exception {   
		try {
			this.modificarDetalleActivoFijo(evt,-1,false);
		
		} catch(Exception e) {
			FuncionesSwing.manageException(this, e,logger,DetalleActivoFijoConstantesFunciones.CLASSNAME);
		}
	}
	
	public void modificarDetalleActivoFijo(ActionEvent evt,int rowIndex,Boolean esRelaciones) throws Exception {   
		try {
			int intSelectedRow = 0;	
			
			if(rowIndex>=0) {
				intSelectedRow=rowIndex;
			} else {
				intSelectedRow = this.jTableDatosDetalleActivoFijo.getSelectedRow();
			}
			
			this.habilitarDeshabilitarControlesDetalleActivoFijo(true);
			//this.isEsNuevoDetalleActivoFijo=false;
			
			//ARCHITECTURE
			if(Constantes.ISUSAEJBLOGICLAYER) {
				this.detalleactivofijo =(DetalleActivoFijo) this.detalleactivofijoLogic.getDetalleActivoFijos().toArray()[this.jTableDatosDetalleActivoFijo.convertRowIndexToModel(intSelectedRow)];
			} else if(Constantes.ISUSAEJBREMOTE || Constantes.ISUSAEJBHOME ) {
				this.detalleactivofijo =(DetalleActivoFijo) this.detalleactivofijos.toArray()[this.jTableDatosDetalleActivoFijo.convertRowIndexToModel(intSelectedRow)];
			}
			//ARCHITECTURE
			
			this.actualizarEstadoCeldasBotonesDetalleActivoFijo("ae", isGuardarCambiosEnLote, isEsMantenimientoRelacionado);
			
			//NO FUNCIONA BINDINGS
			this.inicializarActualizarBindingBotonesDetalleActivoFijo(false) ;
			
			if(detalleactivofijoSessionBean.getConGuardarRelaciones()) {
			

				if(this.jInternalFrameDetalleFormDetalleActivoFijo.mantenimientoactivofijoBeanSwingJInternalFrame!=null && this.jInternalFrameDetalleFormDetalleActivoFijo.mantenimientoactivofijoBeanSwingJInternalFrame.mantenimientoactivofijoSessionBean.getEsGuardarRelacionado() && MantenimientoActivoFijoJInternalFrame.ESTA_CARGADO_PORPARTE) {
					this.jButtonMantenimientoActivoFijoActionPerformed(null,intSelectedRow,false,true,null);
				}

				if(this.jInternalFrameDetalleFormDetalleActivoFijo.serviciotransporteBeanSwingJInternalFrame!=null && this.jInternalFrameDetalleFormDetalleActivoFijo.serviciotransporteBeanSwingJInternalFrame.serviciotransporteSessionBean.getEsGuardarRelacionado() && ServicioTransporteJInternalFrame.ESTA_CARGADO_PORPARTE) {
					this.jButtonServicioTransporteActionPerformed(null,intSelectedRow,false,true,null);
				}

				if(this.jInternalFrameDetalleFormDetalleActivoFijo.movimientoactivofijoBeanSwingJInternalFrame!=null && this.jInternalFrameDetalleFormDetalleActivoFijo.movimientoactivofijoBeanSwingJInternalFrame.movimientoactivofijoSessionBean.getEsGuardarRelacionado() && MovimientoActivoFijoJInternalFrame.ESTA_CARGADO_PORPARTE) {
					this.jButtonMovimientoActivoFijoActionPerformed(null,intSelectedRow,false,true,null);
				}

				if(this.jInternalFrameDetalleFormDetalleActivoFijo.vehiculoBeanSwingJInternalFrame!=null && this.jInternalFrameDetalleFormDetalleActivoFijo.vehiculoBeanSwingJInternalFrame.vehiculoSessionBean.getEsGuardarRelacionado() && VehiculoJInternalFrame.ESTA_CARGADO_PORPARTE) {
					this.jButtonVehiculoActionPerformed(null,intSelectedRow,false,true,null);
				}

				if(this.jInternalFrameDetalleFormDetalleActivoFijo.metododepreciacionBeanSwingJInternalFrame!=null && this.jInternalFrameDetalleFormDetalleActivoFijo.metododepreciacionBeanSwingJInternalFrame.metododepreciacionSessionBean.getEsGuardarRelacionado() && MetodoDepreciacionJInternalFrame.ESTA_CARGADO_PORPARTE) {
					this.jButtonMetodoDepreciacionActionPerformed(null,intSelectedRow,false,true,null);
				}

				if(this.jInternalFrameDetalleFormDetalleActivoFijo.responsableactivofijoBeanSwingJInternalFrame!=null && this.jInternalFrameDetalleFormDetalleActivoFijo.responsableactivofijoBeanSwingJInternalFrame.responsableactivofijoSessionBean.getEsGuardarRelacionado() && ResponsableActivoFijoJInternalFrame.ESTA_CARGADO_PORPARTE) {
					this.jButtonResponsableActivoFijoActionPerformed(null,intSelectedRow,false,true,null);
				}

				if(this.jInternalFrameDetalleFormDetalleActivoFijo.depreciacionactivofijoBeanSwingJInternalFrame!=null && this.jInternalFrameDetalleFormDetalleActivoFijo.depreciacionactivofijoBeanSwingJInternalFrame.depreciacionactivofijoSessionBean.getEsGuardarRelacionado() && DepreciacionActivoFijoJInternalFrame.ESTA_CARGADO_PORPARTE) {
					this.jButtonDepreciacionActivoFijoActionPerformed(null,intSelectedRow,false,true,null);
				}

				if(this.jInternalFrameDetalleFormDetalleActivoFijo.gastodepreciacioncentrocostoBeanSwingJInternalFrame!=null && this.jInternalFrameDetalleFormDetalleActivoFijo.gastodepreciacioncentrocostoBeanSwingJInternalFrame.gastodepreciacioncentrocostoSessionBean.getEsGuardarRelacionado() && GastoDepreciacionCentroCostoJInternalFrame.ESTA_CARGADO_PORPARTE) {
					this.jButtonGastoDepreciacionCentroCostoActionPerformed(null,intSelectedRow,false,true,null);
				}

				if(this.jInternalFrameDetalleFormDetalleActivoFijo.parteactivofijoBeanSwingJInternalFrame!=null && this.jInternalFrameDetalleFormDetalleActivoFijo.parteactivofijoBeanSwingJInternalFrame.parteactivofijoSessionBean.getEsGuardarRelacionado() && ParteActivoFijoJInternalFrame.ESTA_CARGADO_PORPARTE) {
					this.jButtonParteActivoFijoActionPerformed(null,intSelectedRow,false,true,null);
				}
			}
			
			if(DetalleActivoFijoJInternalFrame.CON_DATOS_FRAME) {
				this.abrirFrameDetalleDetalleActivoFijo(esRelaciones);
			}
			
			//SI ES MANUAL
			//this.inicializarActualizarBindingBotonesManualDetalleActivoFijo(false) ;
		
		} catch(Exception e) {
			FuncionesSwing.manageException(this, e,logger,DetalleActivoFijoConstantesFunciones.CLASSNAME);
		}
	}
	
	public void seleccionarFilaTablaDetalleActivoFijoActual() { 	  
		try {
			//SELECCIONA FILA A OBJETO ACTUAL
			Integer intSelectedRow = this.jTableDatosDetalleActivoFijo.getSelectedRow();
					
			if(intSelectedRow!=null && intSelectedRow>-1) {
				//ARCHITECTURE
				if(Constantes.ISUSAEJBLOGICLAYER) {
					this.detalleactivofijo =(DetalleActivoFijo) this.detalleactivofijoLogic.getDetalleActivoFijos().toArray()[this.jTableDatosDetalleActivoFijo.convertRowIndexToModel(intSelectedRow)];
				} else if(Constantes.ISUSAEJBREMOTE || Constantes.ISUSAEJBHOME ) {
					this.detalleactivofijo =(DetalleActivoFijo) this.detalleactivofijos.toArray()[this.jTableDatosDetalleActivoFijo.convertRowIndexToModel(intSelectedRow)];
				}
				//ARCHITECTURE
				
				//System.out.println(this.banco);
			}
			
		} catch(Exception e) {
  			FuncionesSwing.manageException2(this, e,logger,DetalleActivoFijoConstantesFunciones.CLASSNAME);
  		}
    }	
	
	public void seleccionarDetalleActivoFijo(ActionEvent evt,int rowIndex) throws Exception {   
		try {
			
			if(this.jInternalFrameDetalleFormDetalleActivoFijo==null) { //if(!this.conCargarFormDetalle) {
				this.inicializarFormDetalle();
			}
			
			int intSelectedRow = 0;	
			
			if(rowIndex>=0) {
				intSelectedRow=rowIndex;
			} else {
				intSelectedRow = this.jTableDatosDetalleActivoFijo.getSelectedRow();
			}
			
			//this.habilitarDeshabilitarControlesDetalleActivoFijo(true);
			//this.isEsNuevoDetalleActivoFijo=false;
			
			//ARCHITECTURE
			if(Constantes.ISUSAEJBLOGICLAYER) {
				this.detalleactivofijo =(DetalleActivoFijo) this.detalleactivofijoLogic.getDetalleActivoFijos().toArray()[this.jTableDatosDetalleActivoFijo.convertRowIndexToModel(intSelectedRow)];
			} else if(Constantes.ISUSAEJBREMOTE || Constantes.ISUSAEJBHOME ) {
				this.detalleactivofijo =(DetalleActivoFijo) this.detalleactivofijos.toArray()[this.jTableDatosDetalleActivoFijo.convertRowIndexToModel(intSelectedRow)];
			}
			//ARCHITECTURE
			
			this.jInternalFrameParent.setIdCombosCodigoDesdeBusquedaForeignKey(this.detalleactivofijo.getId(),this.sTipoBusqueda);
			
			this.dispose();
			
			//this.actualizarEstadoCeldasBotonesDetalleActivoFijo("ae", isGuardarCambiosEnLote, isEsMantenimientoRelacionado);
			
			//NO FUNCIONA BINDINGS
			/*
			this.inicializarActualizarBindingBotonesDetalleActivoFijo(false) ;
			
			if(DetalleActivoFijoJInternalFrame.CON_DATOS_FRAME) {
				this.abrirFrameDetalleDetalleActivoFijo(esRelaciones);
			}
			*/
			
			//SI ES MANUAL
			//this.inicializarActualizarBindingBotonesManualDetalleActivoFijo(false) ;
		
		} catch(Exception e) {
			FuncionesSwing.manageException(this, e,logger,DetalleActivoFijoConstantesFunciones.CLASSNAME);
		}
	}		
	
	public void setIdCombosCodigoDesdeBusquedaForeignKey(Long id,String sType)throws Exception{
		
		try {
			
			if(sType.equals("Cliente")) {
				if(!this.detalleactivofijoConstantesFunciones.cargarid_clienteDetalleActivoFijo) {
					this.cargarCombosClientesForeignKeyLista(" where id="+id);
					//this.inicializarActualizarBindingDetalleActivoFijo(false,false);
					this.cargarCombosFrameClientesForeignKey("Todos");
				}

				this.setCombosCodigoDesdeBusquedaid_cliente (id);

				this.recargarComboTablaCliente(this.clientesForeignKey);

			}
		} catch(Exception e) {
			throw e;
		}
	}
	
			
	
	public void recargarComboTablaDetalleGrupoActivoFijo(List<DetalleGrupoActivoFijo> detallegrupoactivofijosForeignKey)throws Exception{
		TableColumn tableColumnDetalleGrupoActivoFijo=this.jTableDatosDetalleActivoFijo.getColumnModel().getColumn(Funciones2.getColumnIndexByName(this.jTableDatosDetalleActivoFijo,DetalleActivoFijoConstantesFunciones.LABEL_IDDETALLEGRUPOACTIVOFIJO));
		TableCellEditor tableCellEditorDetalleGrupoActivoFijo =tableColumnDetalleGrupoActivoFijo.getCellEditor();

		DetalleGrupoActivoFijoTableCell detallegrupoactivofijoTableCellFk=(DetalleGrupoActivoFijoTableCell)tableCellEditorDetalleGrupoActivoFijo;

		if(detallegrupoactivofijoTableCellFk!=null) {
			detallegrupoactivofijoTableCellFk.setdetallegrupoactivofijosForeignKey(detallegrupoactivofijosForeignKey);
		}


		//SIEMPRE rowActual<0 , NO USADO POR EL MOMENTO
		//COMBO DE FILA ACTUAL SE ACTUALIZA, LOS DEMAS USAN EL ANTERIOR COMBO
		//int intSelectedRow = -1;
		//intSelectedRow=this.jTableDatosDetalleActivoFijo.getSelectedRow();

		//if(intSelectedRow<=0) {
			//detallegrupoactivofijoTableCellFk.setRowActual(intSelectedRow);
			//detallegrupoactivofijoTableCellFk.setdetallegrupoactivofijosForeignKeyActual(detallegrupoactivofijosForeignKey);
		//}


		if(detallegrupoactivofijoTableCellFk!=null) {
			detallegrupoactivofijoTableCellFk.RecargarDetalleGrupoActivoFijosForeignKey();
			//ACTUALIZA COMBOS DE TABLA-FIN
		}

	}	
	
	
	public void recargarComboTablaSubGrupoActivoFijo(List<SubGrupoActivoFijo> subgrupoactivofijosForeignKey)throws Exception{
		TableColumn tableColumnSubGrupoActivoFijo=this.jTableDatosDetalleActivoFijo.getColumnModel().getColumn(Funciones2.getColumnIndexByName(this.jTableDatosDetalleActivoFijo,DetalleActivoFijoConstantesFunciones.LABEL_IDSUBGRUPOACTIVOFIJO));
		TableCellEditor tableCellEditorSubGrupoActivoFijo =tableColumnSubGrupoActivoFijo.getCellEditor();

		SubGrupoActivoFijoTableCell subgrupoactivofijoTableCellFk=(SubGrupoActivoFijoTableCell)tableCellEditorSubGrupoActivoFijo;

		if(subgrupoactivofijoTableCellFk!=null) {
			subgrupoactivofijoTableCellFk.setsubgrupoactivofijosForeignKey(subgrupoactivofijosForeignKey);
		}


		//SIEMPRE rowActual<0 , NO USADO POR EL MOMENTO
		//COMBO DE FILA ACTUAL SE ACTUALIZA, LOS DEMAS USAN EL ANTERIOR COMBO
		//int intSelectedRow = -1;
		//intSelectedRow=this.jTableDatosDetalleActivoFijo.getSelectedRow();

		//if(intSelectedRow<=0) {
			//subgrupoactivofijoTableCellFk.setRowActual(intSelectedRow);
			//subgrupoactivofijoTableCellFk.setsubgrupoactivofijosForeignKeyActual(subgrupoactivofijosForeignKey);
		//}


		if(subgrupoactivofijoTableCellFk!=null) {
			subgrupoactivofijoTableCellFk.RecargarSubGrupoActivoFijosForeignKey();
			//ACTUALIZA COMBOS DE TABLA-FIN
		}

	}	
	
	
	public void recargarComboTablaTipoRamoActivoFijo(List<TipoRamoActivoFijo> tiporamoactivofijosForeignKey)throws Exception{
		TableColumn tableColumnTipoRamoActivoFijo=this.jTableDatosDetalleActivoFijo.getColumnModel().getColumn(Funciones2.getColumnIndexByName(this.jTableDatosDetalleActivoFijo,DetalleActivoFijoConstantesFunciones.LABEL_IDTIPORAMOACTIVOFIJO));
		TableCellEditor tableCellEditorTipoRamoActivoFijo =tableColumnTipoRamoActivoFijo.getCellEditor();

		TipoRamoActivoFijoTableCell tiporamoactivofijoTableCellFk=(TipoRamoActivoFijoTableCell)tableCellEditorTipoRamoActivoFijo;

		if(tiporamoactivofijoTableCellFk!=null) {
			tiporamoactivofijoTableCellFk.settiporamoactivofijosForeignKey(tiporamoactivofijosForeignKey);
		}


		//SIEMPRE rowActual<0 , NO USADO POR EL MOMENTO
		//COMBO DE FILA ACTUAL SE ACTUALIZA, LOS DEMAS USAN EL ANTERIOR COMBO
		//int intSelectedRow = -1;
		//intSelectedRow=this.jTableDatosDetalleActivoFijo.getSelectedRow();

		//if(intSelectedRow<=0) {
			//tiporamoactivofijoTableCellFk.setRowActual(intSelectedRow);
			//tiporamoactivofijoTableCellFk.settiporamoactivofijosForeignKeyActual(tiporamoactivofijosForeignKey);
		//}


		if(tiporamoactivofijoTableCellFk!=null) {
			tiporamoactivofijoTableCellFk.RecargarTipoRamoActivoFijosForeignKey();
			//ACTUALIZA COMBOS DE TABLA-FIN
		}

	}	
	
	
	public void recargarComboTablaTipoActivoFijoEmpresa(List<TipoActivoFijoEmpresa> tipoactivofijoempresasForeignKey)throws Exception{
		TableColumn tableColumnTipoActivoFijoEmpresa=this.jTableDatosDetalleActivoFijo.getColumnModel().getColumn(Funciones2.getColumnIndexByName(this.jTableDatosDetalleActivoFijo,DetalleActivoFijoConstantesFunciones.LABEL_IDTIPOACTIVOFIJOEMPRESA));
		TableCellEditor tableCellEditorTipoActivoFijoEmpresa =tableColumnTipoActivoFijoEmpresa.getCellEditor();

		TipoActivoFijoEmpresaTableCell tipoactivofijoempresaTableCellFk=(TipoActivoFijoEmpresaTableCell)tableCellEditorTipoActivoFijoEmpresa;

		if(tipoactivofijoempresaTableCellFk!=null) {
			tipoactivofijoempresaTableCellFk.settipoactivofijoempresasForeignKey(tipoactivofijoempresasForeignKey);
		}


		//SIEMPRE rowActual<0 , NO USADO POR EL MOMENTO
		//COMBO DE FILA ACTUAL SE ACTUALIZA, LOS DEMAS USAN EL ANTERIOR COMBO
		//int intSelectedRow = -1;
		//intSelectedRow=this.jTableDatosDetalleActivoFijo.getSelectedRow();

		//if(intSelectedRow<=0) {
			//tipoactivofijoempresaTableCellFk.setRowActual(intSelectedRow);
			//tipoactivofijoempresaTableCellFk.settipoactivofijoempresasForeignKeyActual(tipoactivofijoempresasForeignKey);
		//}


		if(tipoactivofijoempresaTableCellFk!=null) {
			tipoactivofijoempresaTableCellFk.RecargarTipoActivoFijoEmpresasForeignKey();
			//ACTUALIZA COMBOS DE TABLA-FIN
		}

	}	
	
	
	public void recargarComboTablaTipoDepreciacionEmpresa(List<TipoDepreciacionEmpresa> tipodepreciacionempresasForeignKey)throws Exception{
		TableColumn tableColumnTipoDepreciacionEmpresa=this.jTableDatosDetalleActivoFijo.getColumnModel().getColumn(Funciones2.getColumnIndexByName(this.jTableDatosDetalleActivoFijo,DetalleActivoFijoConstantesFunciones.LABEL_IDTIPODEPRECIACIONEMPRESA));
		TableCellEditor tableCellEditorTipoDepreciacionEmpresa =tableColumnTipoDepreciacionEmpresa.getCellEditor();

		TipoDepreciacionEmpresaTableCell tipodepreciacionempresaTableCellFk=(TipoDepreciacionEmpresaTableCell)tableCellEditorTipoDepreciacionEmpresa;

		if(tipodepreciacionempresaTableCellFk!=null) {
			tipodepreciacionempresaTableCellFk.settipodepreciacionempresasForeignKey(tipodepreciacionempresasForeignKey);
		}


		//SIEMPRE rowActual<0 , NO USADO POR EL MOMENTO
		//COMBO DE FILA ACTUAL SE ACTUALIZA, LOS DEMAS USAN EL ANTERIOR COMBO
		//int intSelectedRow = -1;
		//intSelectedRow=this.jTableDatosDetalleActivoFijo.getSelectedRow();

		//if(intSelectedRow<=0) {
			//tipodepreciacionempresaTableCellFk.setRowActual(intSelectedRow);
			//tipodepreciacionempresaTableCellFk.settipodepreciacionempresasForeignKeyActual(tipodepreciacionempresasForeignKey);
		//}


		if(tipodepreciacionempresaTableCellFk!=null) {
			tipodepreciacionempresaTableCellFk.RecargarTipoDepreciacionEmpresasForeignKey();
			//ACTUALIZA COMBOS DE TABLA-FIN
		}

	}	
	
	
	public void recargarComboTablaEstadoActivoFijo(List<EstadoActivoFijo> estadoactivofijosForeignKey)throws Exception{
		TableColumn tableColumnEstadoActivoFijo=this.jTableDatosDetalleActivoFijo.getColumnModel().getColumn(Funciones2.getColumnIndexByName(this.jTableDatosDetalleActivoFijo,DetalleActivoFijoConstantesFunciones.LABEL_IDESTADOACTIVOFIJO));
		TableCellEditor tableCellEditorEstadoActivoFijo =tableColumnEstadoActivoFijo.getCellEditor();

		EstadoActivoFijoTableCell estadoactivofijoTableCellFk=(EstadoActivoFijoTableCell)tableCellEditorEstadoActivoFijo;

		if(estadoactivofijoTableCellFk!=null) {
			estadoactivofijoTableCellFk.setestadoactivofijosForeignKey(estadoactivofijosForeignKey);
		}


		//SIEMPRE rowActual<0 , NO USADO POR EL MOMENTO
		//COMBO DE FILA ACTUAL SE ACTUALIZA, LOS DEMAS USAN EL ANTERIOR COMBO
		//int intSelectedRow = -1;
		//intSelectedRow=this.jTableDatosDetalleActivoFijo.getSelectedRow();

		//if(intSelectedRow<=0) {
			//estadoactivofijoTableCellFk.setRowActual(intSelectedRow);
			//estadoactivofijoTableCellFk.setestadoactivofijosForeignKeyActual(estadoactivofijosForeignKey);
		//}


		if(estadoactivofijoTableCellFk!=null) {
			estadoactivofijoTableCellFk.RecargarEstadoActivoFijosForeignKey();
			//ACTUALIZA COMBOS DE TABLA-FIN
		}

	}	
	
	
	public void recargarComboTablaCliente(List<Cliente> clientesForeignKey)throws Exception{
		TableColumn tableColumnCliente=this.jTableDatosDetalleActivoFijo.getColumnModel().getColumn(Funciones2.getColumnIndexByName(this.jTableDatosDetalleActivoFijo,DetalleActivoFijoConstantesFunciones.LABEL_IDCLIENTE));
		TableCellEditor tableCellEditorCliente =tableColumnCliente.getCellEditor();

		ClienteTableCell clienteTableCellFk=(ClienteTableCell)tableCellEditorCliente;

		if(clienteTableCellFk!=null) {
			clienteTableCellFk.setclientesForeignKey(clientesForeignKey);
		}


		//SIEMPRE rowActual<0 , NO USADO POR EL MOMENTO
		//COMBO DE FILA ACTUAL SE ACTUALIZA, LOS DEMAS USAN EL ANTERIOR COMBO
		//int intSelectedRow = -1;
		//intSelectedRow=this.jTableDatosDetalleActivoFijo.getSelectedRow();

		//if(intSelectedRow<=0) {
			//clienteTableCellFk.setRowActual(intSelectedRow);
			//clienteTableCellFk.setclientesForeignKeyActual(clientesForeignKey);
		//}


		if(clienteTableCellFk!=null) {
			clienteTableCellFk.RecargarClientesForeignKey();
			//ACTUALIZA COMBOS DE TABLA-FIN
		}

	}	
	
	
	public void recargarComboTablaPartidaPresu(List<PartidaPresu> partidapresusForeignKey)throws Exception{
		TableColumn tableColumnPartidaPresu=this.jTableDatosDetalleActivoFijo.getColumnModel().getColumn(Funciones2.getColumnIndexByName(this.jTableDatosDetalleActivoFijo,DetalleActivoFijoConstantesFunciones.LABEL_IDPARTIDAPRESU));
		TableCellEditor tableCellEditorPartidaPresu =tableColumnPartidaPresu.getCellEditor();

		PartidaPresuTableCell partidapresuTableCellFk=(PartidaPresuTableCell)tableCellEditorPartidaPresu;

		if(partidapresuTableCellFk!=null) {
			partidapresuTableCellFk.setpartidapresusForeignKey(partidapresusForeignKey);
		}


		//SIEMPRE rowActual<0 , NO USADO POR EL MOMENTO
		//COMBO DE FILA ACTUAL SE ACTUALIZA, LOS DEMAS USAN EL ANTERIOR COMBO
		//int intSelectedRow = -1;
		//intSelectedRow=this.jTableDatosDetalleActivoFijo.getSelectedRow();

		//if(intSelectedRow<=0) {
			//partidapresuTableCellFk.setRowActual(intSelectedRow);
			//partidapresuTableCellFk.setpartidapresusForeignKeyActual(partidapresusForeignKey);
		//}


		if(partidapresuTableCellFk!=null) {
			partidapresuTableCellFk.RecargarPartidaPresusForeignKey();
			//ACTUALIZA COMBOS DE TABLA-FIN
		}

	}	
	
	
	

	public void setCombosCodigoDesdeBusquedaid_cliente (Long id) throws Exception {
		this.setActualClienteForeignKey(id,true,"Todos");

	};
	
	public void jButtonActualizarDetalleActivoFijoActionPerformed(ActionEvent evt) throws Exception {   
		try	{
			if(Constantes.ISUSAEJBLOGICLAYER) {
				this.detalleactivofijoLogic.getNewConnexionToDeep("");
			}
			
			this.inicializarActualizarBindingParametrosReportesDetalleActivoFijo(false);
			
			//if(!this.isEsNuevoDetalleActivoFijo) {								
				int intSelectedRow = this.jTableDatosDetalleActivoFijo.getSelectedRow();	
				
				//SE PIEDE INDICE SELECTED CON FILA TOTALES, ASEGURARSE QUE OBJETO ACTUAL ESTE EN FORMULARIO
				
				//ARCHITECTURE
				if(Constantes.ISUSAEJBLOGICLAYER) {
					this.detalleactivofijo =(DetalleActivoFijo) this.detalleactivofijoLogic.getDetalleActivoFijos().toArray()[this.jTableDatosDetalleActivoFijo.convertRowIndexToModel(intSelectedRow)];
				} else if(Constantes.ISUSAEJBREMOTE || Constantes.ISUSAEJBHOME) {
					this.detalleactivofijo =(DetalleActivoFijo) this.detalleactivofijos.toArray()[this.jTableDatosDetalleActivoFijo.convertRowIndexToModel(intSelectedRow)];
				}
				//ARCHITECTURE
				
			//}
				
			if(DetalleActivoFijoJInternalFrame.ISBINDING_MANUAL_TABLA) {
				this.setVariablesFormularioToObjetoActualDetalleActivoFijo(this.detalleactivofijo,true);
				this.setVariablesFormularioToObjetoActualForeignKeysDetalleActivoFijo(this.detalleactivofijo);
				
			}
			
			if(this.permiteMantenimiento(this.detalleactivofijo)) {	
				this.actualizar();
				
				if(!this.isGuardarCambiosEnLote && !this.detalleactivofijoSessionBean.getEsGuardarRelacionado()) {
					this.procesarBusqueda(sAccionBusqueda);
					
					this.isEsNuevoDetalleActivoFijo=true;
					this.inicializarActualizarBindingTablaDetalleActivoFijo(false);
					this.isEsNuevoDetalleActivoFijo=false;
				
				} else {					
					
					//PARA RELACIONADO ACTUALIZAR FILA TOTALES
					this.isEsNuevoDetalleActivoFijo=true;
					this.procesoActualizarFilaTotales(false,"MANTENIMIENTO");
					this.isEsNuevoDetalleActivoFijo=false;
				}
						
								
				//NO FUNCIONA BINDINGS
				this.inicializarActualizarBindingBotonesDetalleActivoFijo(false);
				
				//SI ES MANUAL
				//this.inicializarActualizarBindingBotonesManualDetalleActivoFijo(false);
				
				this.habilitarDeshabilitarControlesDetalleActivoFijo(false);
			
												
				
				if(DetalleActivoFijoJInternalFrame.CON_DATOS_FRAME) {
					if(!this.isPostAccionSinCerrar) {
						this.cerrarFrameDetalleDetalleActivoFijo();
					}
				}
				
				if(this.isPostAccionNuevo) {
					this.jButtonNuevoDetalleActivoFijoActionPerformed(evt,detalleactivofijoSessionBean.getConGuardarRelaciones());
				} else {
					if(this.isPostAccionSinCerrar) {
						Integer intSelectedRowActual=this.getIndiceActualDetalleActivoFijo(this.detalleactivofijo,intSelectedRow);
						
						if(intSelectedRow>-1) {
							this.jTableDatosDetalleActivoFijo.setRowSelectionInterval(intSelectedRowActual, intSelectedRowActual);
							this.jButtonIdActionPerformed(evt,intSelectedRowActual,detalleactivofijoSessionBean.getConGuardarRelaciones(),false);
						}
					}
				}
				
				this.cancelar(false);
				
			} else {
				JOptionPane.showMessageDialog(this,"ESTE REGISTRO NO PUEDE ACTUALIZARSE","EDITAR",JOptionPane.ERROR_MESSAGE);
			}
			
			if(Constantes.ISUSAEJBLOGICLAYER) {
				this.detalleactivofijoLogic.commitNewConnexionToDeep();
			}
			
			
			if(this.jInternalFrameParent!=null) { //&& this.isEsMantenimientoRelacionado) {
				Boolean esUsoDesdeHijoLocal=true;
				String sTipo="Formulario";
				Boolean conIrServidorAplicacionParent=false;
				Long id=this.detalleactivofijo.getId();
				ArrayList<String> arrClasses=new ArrayList<String>();
				
				GeneralEntityParameterGeneral generalEntityParameterGeneral=new GeneralEntityParameterGeneral();
				
				generalEntityParameterGeneral.setEventoGlobalTipo(EventoGlobalTipo.FORM_HIJO_ACTUALIZAR);
				generalEntityParameterGeneral.setsDominio("Formulario");
				generalEntityParameterGeneral.setsDominioTipo(DetalleActivoFijo.class.getName());
				
				this.jInternalFrameParent.setEventoParentGeneral(esUsoDesdeHijoLocal,"Formulario",DetalleActivoFijo.class.getName(),sTipo,"FORMULARIO",esControlTabla,conIrServidorAplicacionParent,
					id,this, EventoGlobalTipo.FORM_HIJO_ACTUALIZAR,ControlTipo.FORM,EventoTipo.CHANGE,EventoSubTipo.CHANGED,arrClasses,
					evt,generalEntityParameterGeneral,this);
			}
			
		} catch(Exception e) {
			if(Constantes.ISUSAEJBLOGICLAYER) {
				this.detalleactivofijoLogic.rollbackNewConnexionToDeep();
			}
			
			FuncionesSwing.manageException(this, e,logger,DetalleActivoFijoConstantesFunciones.CLASSNAME);
		
		} finally {
			if(Constantes.ISUSAEJBLOGICLAYER) {
				this.detalleactivofijoLogic.closeNewConnexionToDeep();
			}
		}
	}
	
	public void jButtonEliminarDetalleActivoFijoActionPerformed(ActionEvent evt) throws Exception {   
		try	{
			
			if(Constantes.ISUSAEJBLOGICLAYER) {
				this.detalleactivofijoLogic.getNewConnexionToDeep("");
			}
			
			int intSelectedRow = this.jTableDatosDetalleActivoFijo.getSelectedRow();	       
							
			//ARCHITECTURE
			if(Constantes.ISUSAEJBLOGICLAYER) {
				this.detalleactivofijo =(DetalleActivoFijo) this.detalleactivofijoLogic.getDetalleActivoFijos().toArray()[this.jTableDatosDetalleActivoFijo.convertRowIndexToModel(intSelectedRow)];
				this.detalleactivofijo.setIsDeleted(true);
			} else if(Constantes.ISUSAEJBREMOTE || Constantes.ISUSAEJBHOME ) {
				this.detalleactivofijo =(DetalleActivoFijo) this.detalleactivofijos.toArray()[this.jTableDatosDetalleActivoFijo.convertRowIndexToModel(intSelectedRow)];
				this.detalleactivofijo.setIsDeleted(true);
			}
			//ARCHITECTURE
			
			if(this.permiteMantenimiento(this.detalleactivofijo)) {
				this.eliminar();
				
				if(!this.isGuardarCambiosEnLote && !this.detalleactivofijoSessionBean.getEsGuardarRelacionado()) {
					this.procesarBusqueda(sAccionBusqueda);
				}
				
				((DetalleActivoFijoModel) this.jTableDatosDetalleActivoFijo.getModel()).fireTableRowsDeleted(intSelectedRow,intSelectedRow);
				
				this.isEsNuevoDetalleActivoFijo=true;
				this.inicializarActualizarBindingTablaDetalleActivoFijo(false);
				this.isEsNuevoDetalleActivoFijo=false;									
					
				//NO FUNCIONA BINDINGS
				this.inicializarActualizarBindingBotonesDetalleActivoFijo(false);
				
				//SI ES MANUAL
				//this.inicializarActualizarBindingBotonesManualDetalleActivoFijo(false);
				
				this.habilitarDeshabilitarControlesDetalleActivoFijo(false);
				
				
				
				if(DetalleActivoFijoJInternalFrame.CON_DATOS_FRAME) {
					this.cerrarFrameDetalleDetalleActivoFijo();
				}
			} else {
				JOptionPane.showMessageDialog(this,"ESTE REGISTRO NO PUEDE ACTUALIZARSE","EDITAR",JOptionPane.ERROR_MESSAGE);
			}	
			
			if(Constantes.ISUSAEJBLOGICLAYER) {
				this.detalleactivofijoLogic.commitNewConnexionToDeep();
			}
			
		} catch(Exception e) {
			
			if(Constantes.ISUSAEJBLOGICLAYER) {
				this.detalleactivofijoLogic.rollbackNewConnexionToDeep();
			}

			FuncionesSwing.manageException(this, e,logger,DetalleActivoFijoConstantesFunciones.CLASSNAME);
		
		} finally {
			if(Constantes.ISUSAEJBLOGICLAYER) {
				this.detalleactivofijoLogic.closeNewConnexionToDeep();
			}
		}		
	}
		
	public void jButtonCancelarDetalleActivoFijoActionPerformed(ActionEvent evt) throws Exception {                                         	   	       
	  	try {
			if(jTableDatosDetalleActivoFijo.getRowCount()>=1) {
				jTableDatosDetalleActivoFijo.removeRowSelectionInterval(0, jTableDatosDetalleActivoFijo.getRowCount()-1);						
			}
						
			this.invalidValues=new InvalidValue[0];
			this.habilitarDeshabilitarControlesDetalleActivoFijo(false);
			this.cancelar(true);			
			this.inicializarActualizarBindingTablaDetalleActivoFijo(false);
			
			//NO FUNCIONA BINDINGS
			this.inicializarActualizarBindingBotonesDetalleActivoFijo(false) ;
			
			//SI ES MANUAL
			//this.inicializarActualizarBindingBotonesManualDetalleActivoFijo(false) ;
			
			this.isEsNuevoDetalleActivoFijo=false;
			
			if(DetalleActivoFijoJInternalFrame.CON_DATOS_FRAME) {
				this.cerrarFrameDetalleDetalleActivoFijo();
			}
			
		} catch(Exception e) {
			FuncionesSwing.manageException(this, e,logger,DetalleActivoFijoConstantesFunciones.CLASSNAME);
		}
	}
	
	public void jButtonGuardarCambiosDetalleActivoFijoActionPerformed(ActionEvent evt) throws Exception {    		
		try	{
			
			if(Constantes.ISUSAEJBLOGICLAYER) {
				this.detalleactivofijoLogic.getNewConnexionToDeep("");
			}
			
			//this.estaModoGuardarCambios=true;
			
	    	this.guardarCambios();
			
			if(!this.isErrorGuardar) {
				this.procesarBusqueda(this.sAccionBusqueda);
				
				//NO FUNCIONA BINDINGS
				this.inicializarActualizarBindingDetalleActivoFijo(false);
				
				//SI ES MANUAL
				if(DetalleActivoFijoJInternalFrame.ISBINDING_MANUAL) {				
					//this.inicializarActualizarBindingManualDetalleActivoFijo();				
				}
			}
			
			if(Constantes.ISUSAEJBLOGICLAYER) {
				this.detalleactivofijoLogic.commitNewConnexionToDeep();
			}
			
		} catch(Exception e) {
			if(Constantes.ISUSAEJBLOGICLAYER) {
				this.detalleactivofijoLogic.rollbackNewConnexionToDeep();
			}

			FuncionesSwing.manageException(this, e,logger,DetalleActivoFijoConstantesFunciones.CLASSNAME);
		
		} finally {
			if(Constantes.ISUSAEJBLOGICLAYER) {
				this.detalleactivofijoLogic.closeNewConnexionToDeep();
			}
			
			//this.estaModoGuardarCambios=false;
		}
	}
	
	public void jButtonNuevoGuardarCambiosDetalleActivoFijoActionPerformed(ActionEvent evt) throws Exception {    		
		try	{
			
			this.estaModoNuevo=true;
			this.estaModoNuevoGuardarCambios=true;
			
			//LO HACE NUEVOPREPARAR
			//this.iIdNuevoDetalleActivoFijo--;			
			//DetalleActivoFijo detalleactivofijoAux= new DetalleActivoFijo();			
			//detalleactivofijoAux.setId(this.iIdNuevoDetalleActivoFijo);
			
			if(this.jInternalFrameDetalleFormDetalleActivoFijo==null) { //if(!this.conCargarFormDetalle) {
				this.inicializarFormDetalle();
			}
			
			this.aumentarTamanioFilaNuevaTablaDetalleActivoFijo();
			
			if(this.conTotales) {
				this.quitarFilaTotales();
			}
			
			this.nuevoPreparar(true);
			
			this.setVariablesFormularioToObjetoActualForeignKeysDetalleActivoFijo(this.detalleactivofijo);
			
			this.detalleactivofijo.setsType("NUEVO_GUARDAR_CAMBIOS");
			
			//LO HACE NUEVOPREPARAR
			/*
			if(Constantes.ISUSAEJBLOGICLAYER) {				
				this.detalleactivofijoLogic.getDetalleActivoFijos().add(this.detalleactivofijoAux);
			} else if(Constantes.ISUSAEJBREMOTE||Constantes.ISUSAEJBHOME) {
				this.detalleactivofijos.add(this.detalleactivofijoAux);				
			}
			*/
			
			this.inicializarActualizarBindingTablaDetalleActivoFijo(false);
			
			this.jTableDatosDetalleActivoFijo.setRowSelectionInterval(this.getIndiceNuevoDetalleActivoFijo(), this.getIndiceNuevoDetalleActivoFijo());
			
			int iLastRow =  this.jTableDatosDetalleActivoFijo.getRowCount () - 1;
			Rectangle rectangle = this.jTableDatosDetalleActivoFijo.getCellRect(iLastRow, 0, true);
			
			this.jTableDatosDetalleActivoFijo.scrollRectToVisible(rectangle);
			
			//FILA TOTALES
			if(this.conTotales) {
				this.crearFilaTotales();
				
				this.inicializarActualizarBindingTablaDetalleActivoFijo(false);
			}

		} catch(Exception e) {									
			FuncionesSwing.manageException(this, e,logger,DetalleActivoFijoConstantesFunciones.CLASSNAME);
			
		} finally {
			this.estaModoNuevo=false;
			this.estaModoNuevoGuardarCambios=false;
		}
	}		
	
	public void jButtonRecargarInformacionDetalleActivoFijoActionPerformed(ActionEvent evt) throws Exception {    		
		try {
			this.iNumeroPaginacionPagina=0;
			
			if(Constantes.ISUSAEJBLOGICLAYER) {
				this.detalleactivofijoLogic.getNewConnexionToDeep("");
			}
			
			this.inicializarActualizarBindingDetalleActivoFijo(false,false);
			
	    	this.recargarInformacion();
			
			//NO FUNCIONA BINDINGS
			this.inicializarActualizarBindingDetalleActivoFijo(false);
			
			//SI ES MANUAL
			if(DetalleActivoFijoJInternalFrame.ISBINDING_MANUAL) {
				//this.inicializarActualizarBindingManualDetalleActivoFijo();
			}
			
			//this.abrirFrameTreeDetalleActivoFijo();
			
			if(Constantes.ISUSAEJBLOGICLAYER) {
				this.detalleactivofijoLogic.commitNewConnexionToDeep();
			}
			
		} catch(Exception e) {
			if(Constantes.ISUSAEJBLOGICLAYER) {
				this.detalleactivofijoLogic.rollbackNewConnexionToDeep();
			}
			
			FuncionesSwing.manageException(this, e,logger,DetalleActivoFijoConstantesFunciones.CLASSNAME);
		
		} finally {
			if(Constantes.ISUSAEJBLOGICLAYER) {
				this.detalleactivofijoLogic.closeNewConnexionToDeep();
			}
		}	
	}
	
	
	public void jButtonGenerarImportacionDetalleActivoFijoActionPerformed(ActionEvent evt) throws Exception {    				
		BufferedReader bufferedReader = null;
		String sXmlStringFile="";
		String sPath="";
		this.arrDatoGeneralMinimos= new  ArrayList<DatoGeneralMinimo>();
		DatoGeneralMinimo datoGeneralMinimo=new DatoGeneralMinimo();
		String sLine="";
		
		try {			
			if(JOptionPane.showConfirmDialog(this, "ESTA SEGURO DE PROCESAR IMPORTACION DE Detalle Activo FijoS ?", "MANTENIMIENTO DE Detalle Activo Fijo", JOptionPane.OK_CANCEL_OPTION) == 0) {
				bufferedReader = new BufferedReader(new FileReader(this.jInternalFrameImportacionDetalleActivoFijo.getFileImportacion().getAbsolutePath()));
								
				while ((sLine = bufferedReader.readLine()) != null) {
					datoGeneralMinimo=new DatoGeneralMinimo();
					datoGeneralMinimo.setsDescripcion(sLine);
					
					this.arrDatoGeneralMinimos.add(datoGeneralMinimo);
				}
				
				this.actualizarParametrosGeneralDetalleActivoFijo();
						
				//ARCHITECTURE
				if(Constantes.ISUSAEJBLOGICLAYER) {						
					this.detalleactivofijoReturnGeneral=detalleactivofijoLogic.procesarImportacionDetalleActivoFijosWithConnection(this.parametroGeneralUsuario,this.moduloActual,this.opcionActual,this.usuarioActual,this.arrDatoGeneralMinimos,this.detalleactivofijoParameterGeneral);
						
				} else if(Constantes.ISUSAEJBREMOTE) {
						
				} else if(Constantes.ISUSAEJBHOME) {
				}
				//ARCHITECTURE
						
				this.procesarDetalleActivoFijoReturnGeneral();
			}
		} catch(Exception e) {
			FuncionesSwing.manageException(this, e,logger,DetalleActivoFijoConstantesFunciones.CLASSNAME);
		
		} finally {			
			if (bufferedReader != null) {
				bufferedReader.close();
			}	
		}				
	}
	
	
	
	public void jButtonAbrirImportacionDetalleActivoFijoActionPerformed(ActionEvent evt) throws Exception {    				
		BufferedWriter bufferedWriter = null;
		String sXmlStringFile="";
		String sPath="";
		
		try {
			int iReturnArchivo = this.jInternalFrameImportacionDetalleActivoFijo.getjFileChooserImportacion().showOpenDialog(this);
 
            if (iReturnArchivo == JFileChooser.APPROVE_OPTION) {
            	this.jInternalFrameImportacionDetalleActivoFijo.setFileImportacion(this.jInternalFrameImportacionDetalleActivoFijo.getjFileChooserImportacion().getSelectedFile());
            	
				this.jInternalFrameImportacionDetalleActivoFijo.getjTextFieldPathArchivoImportacion().setText(this.jInternalFrameImportacionDetalleActivoFijo.getFileImportacion().getName());
				
				//System.out.println("ARCHIVO ESCOGIDO: "+this.fileImportacionDetalleActivoFijo.getName());
				
            } else {
                //System.out.println("CANCELAR SELECCION");
				this.jInternalFrameImportacionDetalleActivoFijo.getjTextFieldPathArchivoImportacion().setText("SELECCION CANCELADA");
            }			
		} catch(Exception e) {
			FuncionesSwing.manageException(this, e,logger,DetalleActivoFijoConstantesFunciones.CLASSNAME);
		
		} finally {			
			if (bufferedWriter != null) {
				bufferedWriter.close();
			}	
		}		
	}
	
	
	public void jButtonGenerarReporteDinamicoDetalleActivoFijoActionPerformed(ActionEvent evt) throws Exception {    		
		BufferedWriter bufferedWriter = null;
		String sXmlStringFile="";
		String sPath="";
		
		try {	
		
		ArrayList<DetalleActivoFijo> detalleactivofijosSeleccionados=new ArrayList<DetalleActivoFijo>();		

		detalleactivofijosSeleccionados=this.getDetalleActivoFijosSeleccionados(true);
		
		
		this.sTipoReporteDinamico=((Reporte)this.jInternalFrameReporteDinamicoDetalleActivoFijo.getjComboBoxTiposReportesDinamico().getSelectedItem()).getsCodigo();
		
		this.sTipoArchivoReporteDinamico=((Reporte)this.jInternalFrameReporteDinamicoDetalleActivoFijo.getjComboBoxTiposArchivosReportesDinamico().getSelectedItem()).getsCodigo();			
		
		
		this.sTipoArchivoReporte=this.sTipoArchivoReporteDinamico;
		
		//this.sTipoReporteExtra="Base";
		
			InputStream reportFile=null;
			InputStream imageFile=null;
			
			imageFile=AuxiliarImagenes.class.getResourceAsStream("LogoReporte.jpg");			
				
		
		
			reportFile = AuxiliarReportes.class.getResourceAsStream("DetalleActivoFijoBaseDesign.jrxml");	
			
			sPath=this.parametroGeneralUsuario.getpath_exportar()+"DetalleActivoFijoBaseDesign.jrxml";
			
			sXmlStringFile=Funciones2.getStringFromInputStream(reportFile);
						
			bufferedWriter = new BufferedWriter(new FileWriter(sPath));
			
			
			sXmlStringFile=this.actualizarReporteDinamico(sXmlStringFile);
			
			
			bufferedWriter.write(sXmlStringFile);
			
			bufferedWriter.close();
			
			try{JasperCompileManager.compileReportToFile(sPath);}catch(Exception e){e.printStackTrace();}
			
			this.actualizarVariablesTipoReporte(false,true,false,sPath);
			
			/*
			this.esReporteDinamico=true;
			this.sPathReporteDinamico=sPath.replace(".jrxml",".jasper");
			this.sTipoReporteExtra="";
			*/
			
			this.generarReporteDetalleActivoFijos("Todos",detalleactivofijosSeleccionados );

			if(this.parametroGeneralUsuario.getcon_mensaje_confirmacion() && !this.detalleactivofijoSessionBean.getEsGuardarRelacionado()) {//Constantes.ISMOSTRARMENSAJESMANTENIMIENTO && 
				//DEBE APARECER EL REPORTE DIRECTAMENTE
				//JOptionPane.showMessageDialog(this,"GENERADO CORRECTAMENTE:"+sPath,"MANTENIMIENTO DE Detalle Activo Fijo",JOptionPane.INFORMATION_MESSAGE);
			}
			
		} catch(Exception e) {
			FuncionesSwing.manageException(this, e,logger,DetalleActivoFijoConstantesFunciones.CLASSNAME);
		
		} finally {			
			if (bufferedWriter != null) {
				bufferedWriter.close();
			}	
		}
	}		
	
	
	public String actualizarReporteDinamico(String sXmlStringFile) {				
		Reporte reporte=new Reporte();
		Integer iAnchoMaximoVertical=535;//781,782
		Integer iAnchoMaximoHorizontal=782;
		Integer iAnchoSum=0;
		Integer iAnchoColumna=0;
		
		Integer iAnchoMargenes=60;
		String sWidthGrafico="535";
		
		for(int index:this.jInternalFrameReporteDinamicoDetalleActivoFijo.getjListColumnasSelectReporte().getSelectedIndices()) {
			reporte=(Reporte)this.jInternalFrameReporteDinamicoDetalleActivoFijo.getjListColumnasSelectReporte().getModel().getElementAt(index);
			
			switch(reporte.getsCodigo()) {
				
				case DetalleActivoFijoConstantesFunciones.LABEL_IDEMPRESA:
					iAnchoColumna=100;

					if(iAnchoSum+iAnchoColumna<=iAnchoMaximoHorizontal) {
						sXmlStringFile=sXmlStringFile.replace("<!--col_Empresa_col", "");
						sXmlStringFile=sXmlStringFile.replace("col_Empresa_col-->", "");

						sXmlStringFile=sXmlStringFile.replace("colancho_Empresa_colancho", iAnchoColumna.toString());
						sXmlStringFile=sXmlStringFile.replace("colx_Empresa_colx", iAnchoSum.toString());

						iAnchoSum+=iAnchoColumna;
					}

					break;

				case DetalleActivoFijoConstantesFunciones.LABEL_IDSUCURSAL:
					iAnchoColumna=100;

					if(iAnchoSum+iAnchoColumna<=iAnchoMaximoHorizontal) {
						sXmlStringFile=sXmlStringFile.replace("<!--col_Sucursal_col", "");
						sXmlStringFile=sXmlStringFile.replace("col_Sucursal_col-->", "");

						sXmlStringFile=sXmlStringFile.replace("colancho_Sucursal_colancho", iAnchoColumna.toString());
						sXmlStringFile=sXmlStringFile.replace("colx_Sucursal_colx", iAnchoSum.toString());

						iAnchoSum+=iAnchoColumna;
					}

					break;

				case DetalleActivoFijoConstantesFunciones.LABEL_IDDETALLEGRUPOACTIVOFIJO:
					iAnchoColumna=100;

					if(iAnchoSum+iAnchoColumna<=iAnchoMaximoHorizontal) {
						sXmlStringFile=sXmlStringFile.replace("<!--col_DetalleGrupoActivoFijo_col", "");
						sXmlStringFile=sXmlStringFile.replace("col_DetalleGrupoActivoFijo_col-->", "");

						sXmlStringFile=sXmlStringFile.replace("colancho_DetalleGrupoActivoFijo_colancho", iAnchoColumna.toString());
						sXmlStringFile=sXmlStringFile.replace("colx_DetalleGrupoActivoFijo_colx", iAnchoSum.toString());

						iAnchoSum+=iAnchoColumna;
					}

					break;

				case DetalleActivoFijoConstantesFunciones.LABEL_IDSUBGRUPOACTIVOFIJO:
					iAnchoColumna=100;

					if(iAnchoSum+iAnchoColumna<=iAnchoMaximoHorizontal) {
						sXmlStringFile=sXmlStringFile.replace("<!--col_SubGrupoActivoFijo_col", "");
						sXmlStringFile=sXmlStringFile.replace("col_SubGrupoActivoFijo_col-->", "");

						sXmlStringFile=sXmlStringFile.replace("colancho_SubGrupoActivoFijo_colancho", iAnchoColumna.toString());
						sXmlStringFile=sXmlStringFile.replace("colx_SubGrupoActivoFijo_colx", iAnchoSum.toString());

						iAnchoSum+=iAnchoColumna;
					}

					break;

				case DetalleActivoFijoConstantesFunciones.LABEL_IDTIPORAMOACTIVOFIJO:
					iAnchoColumna=100;

					if(iAnchoSum+iAnchoColumna<=iAnchoMaximoHorizontal) {
						sXmlStringFile=sXmlStringFile.replace("<!--col_TipoRamoActivoFijo_col", "");
						sXmlStringFile=sXmlStringFile.replace("col_TipoRamoActivoFijo_col-->", "");

						sXmlStringFile=sXmlStringFile.replace("colancho_TipoRamoActivoFijo_colancho", iAnchoColumna.toString());
						sXmlStringFile=sXmlStringFile.replace("colx_TipoRamoActivoFijo_colx", iAnchoSum.toString());

						iAnchoSum+=iAnchoColumna;
					}

					break;

				case DetalleActivoFijoConstantesFunciones.LABEL_IDTIPOACTIVOFIJOEMPRESA:
					iAnchoColumna=100;

					if(iAnchoSum+iAnchoColumna<=iAnchoMaximoHorizontal) {
						sXmlStringFile=sXmlStringFile.replace("<!--col_TipoActivoFijoEmpresa_col", "");
						sXmlStringFile=sXmlStringFile.replace("col_TipoActivoFijoEmpresa_col-->", "");

						sXmlStringFile=sXmlStringFile.replace("colancho_TipoActivoFijoEmpresa_colancho", iAnchoColumna.toString());
						sXmlStringFile=sXmlStringFile.replace("colx_TipoActivoFijoEmpresa_colx", iAnchoSum.toString());

						iAnchoSum+=iAnchoColumna;
					}

					break;

				case DetalleActivoFijoConstantesFunciones.LABEL_IDTIPODEPRECIACIONEMPRESA:
					iAnchoColumna=100;

					if(iAnchoSum+iAnchoColumna<=iAnchoMaximoHorizontal) {
						sXmlStringFile=sXmlStringFile.replace("<!--col_TipoDepreciacionEmpresa_col", "");
						sXmlStringFile=sXmlStringFile.replace("col_TipoDepreciacionEmpresa_col-->", "");

						sXmlStringFile=sXmlStringFile.replace("colancho_TipoDepreciacionEmpresa_colancho", iAnchoColumna.toString());
						sXmlStringFile=sXmlStringFile.replace("colx_TipoDepreciacionEmpresa_colx", iAnchoSum.toString());

						iAnchoSum+=iAnchoColumna;
					}

					break;

				case DetalleActivoFijoConstantesFunciones.LABEL_IDESTADOACTIVOFIJO:
					iAnchoColumna=100;

					if(iAnchoSum+iAnchoColumna<=iAnchoMaximoHorizontal) {
						sXmlStringFile=sXmlStringFile.replace("<!--col_EstadoActivoFijo_col", "");
						sXmlStringFile=sXmlStringFile.replace("col_EstadoActivoFijo_col-->", "");

						sXmlStringFile=sXmlStringFile.replace("colancho_EstadoActivoFijo_colancho", iAnchoColumna.toString());
						sXmlStringFile=sXmlStringFile.replace("colx_EstadoActivoFijo_colx", iAnchoSum.toString());

						iAnchoSum+=iAnchoColumna;
					}

					break;

				case DetalleActivoFijoConstantesFunciones.LABEL_IDCLIENTE:
					iAnchoColumna=100;

					if(iAnchoSum+iAnchoColumna<=iAnchoMaximoHorizontal) {
						sXmlStringFile=sXmlStringFile.replace("<!--col_Cliente_col", "");
						sXmlStringFile=sXmlStringFile.replace("col_Cliente_col-->", "");

						sXmlStringFile=sXmlStringFile.replace("colancho_Cliente_colancho", iAnchoColumna.toString());
						sXmlStringFile=sXmlStringFile.replace("colx_Cliente_colx", iAnchoSum.toString());

						iAnchoSum+=iAnchoColumna;
					}

					break;

				case DetalleActivoFijoConstantesFunciones.LABEL_IDPARTIDAPRESU:
					iAnchoColumna=100;

					if(iAnchoSum+iAnchoColumna<=iAnchoMaximoHorizontal) {
						sXmlStringFile=sXmlStringFile.replace("<!--col_PartidaPresu_col", "");
						sXmlStringFile=sXmlStringFile.replace("col_PartidaPresu_col-->", "");

						sXmlStringFile=sXmlStringFile.replace("colancho_PartidaPresu_colancho", iAnchoColumna.toString());
						sXmlStringFile=sXmlStringFile.replace("colx_PartidaPresu_colx", iAnchoSum.toString());

						iAnchoSum+=iAnchoColumna;
					}

					break;

				case DetalleActivoFijoConstantesFunciones.LABEL_CODIGO:
					iAnchoColumna=100;

					if(iAnchoSum+iAnchoColumna<=iAnchoMaximoHorizontal) {
						sXmlStringFile=sXmlStringFile.replace("<!--col_digo_col", "");
						sXmlStringFile=sXmlStringFile.replace("col_digo_col-->", "");

						sXmlStringFile=sXmlStringFile.replace("colancho_digo_colancho", iAnchoColumna.toString());
						sXmlStringFile=sXmlStringFile.replace("colx_digo_colx", iAnchoSum.toString());

						iAnchoSum+=iAnchoColumna;
					}

					break;

				case DetalleActivoFijoConstantesFunciones.LABEL_NOMBRE:
					iAnchoColumna=100;

					if(iAnchoSum+iAnchoColumna<=iAnchoMaximoHorizontal) {
						sXmlStringFile=sXmlStringFile.replace("<!--col_mbre_col", "");
						sXmlStringFile=sXmlStringFile.replace("col_mbre_col-->", "");

						sXmlStringFile=sXmlStringFile.replace("colancho_mbre_colancho", iAnchoColumna.toString());
						sXmlStringFile=sXmlStringFile.replace("colx_mbre_colx", iAnchoSum.toString());

						iAnchoSum+=iAnchoColumna;
					}

					break;

				case DetalleActivoFijoConstantesFunciones.LABEL_SERIE:
					iAnchoColumna=100;

					if(iAnchoSum+iAnchoColumna<=iAnchoMaximoHorizontal) {
						sXmlStringFile=sXmlStringFile.replace("<!--col_rie_col", "");
						sXmlStringFile=sXmlStringFile.replace("col_rie_col-->", "");

						sXmlStringFile=sXmlStringFile.replace("colancho_rie_colancho", iAnchoColumna.toString());
						sXmlStringFile=sXmlStringFile.replace("colx_rie_colx", iAnchoSum.toString());

						iAnchoSum+=iAnchoColumna;
					}

					break;

				case DetalleActivoFijoConstantesFunciones.LABEL_FECHACOMPRA:
					iAnchoColumna=50;

					if(iAnchoSum+iAnchoColumna<=iAnchoMaximoHorizontal) {
						sXmlStringFile=sXmlStringFile.replace("<!--col_chaCompra_col", "");
						sXmlStringFile=sXmlStringFile.replace("col_chaCompra_col-->", "");

						sXmlStringFile=sXmlStringFile.replace("colancho_chaCompra_colancho", iAnchoColumna.toString());
						sXmlStringFile=sXmlStringFile.replace("colx_chaCompra_colx", iAnchoSum.toString());

						iAnchoSum+=iAnchoColumna;
					}

					break;

				case DetalleActivoFijoConstantesFunciones.LABEL_FECHAMANTENIMIENTO:
					iAnchoColumna=50;

					if(iAnchoSum+iAnchoColumna<=iAnchoMaximoHorizontal) {
						sXmlStringFile=sXmlStringFile.replace("<!--col_chaMantenimiento_col", "");
						sXmlStringFile=sXmlStringFile.replace("col_chaMantenimiento_col-->", "");

						sXmlStringFile=sXmlStringFile.replace("colancho_chaMantenimiento_colancho", iAnchoColumna.toString());
						sXmlStringFile=sXmlStringFile.replace("colx_chaMantenimiento_colx", iAnchoSum.toString());

						iAnchoSum+=iAnchoColumna;
					}

					break;

				case DetalleActivoFijoConstantesFunciones.LABEL_FECHACORRECCION:
					iAnchoColumna=50;

					if(iAnchoSum+iAnchoColumna<=iAnchoMaximoHorizontal) {
						sXmlStringFile=sXmlStringFile.replace("<!--col_chaCorreccion_col", "");
						sXmlStringFile=sXmlStringFile.replace("col_chaCorreccion_col-->", "");

						sXmlStringFile=sXmlStringFile.replace("colancho_chaCorreccion_colancho", iAnchoColumna.toString());
						sXmlStringFile=sXmlStringFile.replace("colx_chaCorreccion_colx", iAnchoSum.toString());

						iAnchoSum+=iAnchoColumna;
					}

					break;

				case DetalleActivoFijoConstantesFunciones.LABEL_FECHADEPRECIACION:
					iAnchoColumna=50;

					if(iAnchoSum+iAnchoColumna<=iAnchoMaximoHorizontal) {
						sXmlStringFile=sXmlStringFile.replace("<!--col_chaDepreciacion_col", "");
						sXmlStringFile=sXmlStringFile.replace("col_chaDepreciacion_col-->", "");

						sXmlStringFile=sXmlStringFile.replace("colancho_chaDepreciacion_colancho", iAnchoColumna.toString());
						sXmlStringFile=sXmlStringFile.replace("colx_chaDepreciacion_colx", iAnchoSum.toString());

						iAnchoSum+=iAnchoColumna;
					}

					break;

				case DetalleActivoFijoConstantesFunciones.LABEL_CLAVE:
					iAnchoColumna=100;

					if(iAnchoSum+iAnchoColumna<=iAnchoMaximoHorizontal) {
						sXmlStringFile=sXmlStringFile.replace("<!--col_ave_col", "");
						sXmlStringFile=sXmlStringFile.replace("col_ave_col-->", "");

						sXmlStringFile=sXmlStringFile.replace("colancho_ave_colancho", iAnchoColumna.toString());
						sXmlStringFile=sXmlStringFile.replace("colx_ave_colx", iAnchoSum.toString());

						iAnchoSum+=iAnchoColumna;
					}

					break;

				case DetalleActivoFijoConstantesFunciones.LABEL_MARCA:
					iAnchoColumna=100;

					if(iAnchoSum+iAnchoColumna<=iAnchoMaximoHorizontal) {
						sXmlStringFile=sXmlStringFile.replace("<!--col_rca_col", "");
						sXmlStringFile=sXmlStringFile.replace("col_rca_col-->", "");

						sXmlStringFile=sXmlStringFile.replace("colancho_rca_colancho", iAnchoColumna.toString());
						sXmlStringFile=sXmlStringFile.replace("colx_rca_colx", iAnchoSum.toString());

						iAnchoSum+=iAnchoColumna;
					}

					break;

				case DetalleActivoFijoConstantesFunciones.LABEL_MODELO:
					iAnchoColumna=100;

					if(iAnchoSum+iAnchoColumna<=iAnchoMaximoHorizontal) {
						sXmlStringFile=sXmlStringFile.replace("<!--col_delo_col", "");
						sXmlStringFile=sXmlStringFile.replace("col_delo_col-->", "");

						sXmlStringFile=sXmlStringFile.replace("colancho_delo_colancho", iAnchoColumna.toString());
						sXmlStringFile=sXmlStringFile.replace("colx_delo_colx", iAnchoSum.toString());

						iAnchoSum+=iAnchoColumna;
					}

					break;

				case DetalleActivoFijoConstantesFunciones.LABEL_COLOR:
					iAnchoColumna=100;

					if(iAnchoSum+iAnchoColumna<=iAnchoMaximoHorizontal) {
						sXmlStringFile=sXmlStringFile.replace("<!--col_lor_col", "");
						sXmlStringFile=sXmlStringFile.replace("col_lor_col-->", "");

						sXmlStringFile=sXmlStringFile.replace("colancho_lor_colancho", iAnchoColumna.toString());
						sXmlStringFile=sXmlStringFile.replace("colx_lor_colx", iAnchoSum.toString());

						iAnchoSum+=iAnchoColumna;
					}

					break;

				case DetalleActivoFijoConstantesFunciones.LABEL_FECHA:
					iAnchoColumna=50;

					if(iAnchoSum+iAnchoColumna<=iAnchoMaximoHorizontal) {
						sXmlStringFile=sXmlStringFile.replace("<!--col_cha_col", "");
						sXmlStringFile=sXmlStringFile.replace("col_cha_col-->", "");

						sXmlStringFile=sXmlStringFile.replace("colancho_cha_colancho", iAnchoColumna.toString());
						sXmlStringFile=sXmlStringFile.replace("colx_cha_colx", iAnchoSum.toString());

						iAnchoSum+=iAnchoColumna;
					}

					break;

				case DetalleActivoFijoConstantesFunciones.LABEL_VALORUTIL:
					iAnchoColumna=50;

					if(iAnchoSum+iAnchoColumna<=iAnchoMaximoHorizontal) {
						sXmlStringFile=sXmlStringFile.replace("<!--col_lorUtil_col", "");
						sXmlStringFile=sXmlStringFile.replace("col_lorUtil_col-->", "");

						sXmlStringFile=sXmlStringFile.replace("colancho_lorUtil_colancho", iAnchoColumna.toString());
						sXmlStringFile=sXmlStringFile.replace("colx_lorUtil_colx", iAnchoSum.toString());

						iAnchoSum+=iAnchoColumna;
					}

					break;

				case DetalleActivoFijoConstantesFunciones.LABEL_COSTODECOMPRA:
					iAnchoColumna=50;

					if(iAnchoSum+iAnchoColumna<=iAnchoMaximoHorizontal) {
						sXmlStringFile=sXmlStringFile.replace("<!--col_stoDeCompra_col", "");
						sXmlStringFile=sXmlStringFile.replace("col_stoDeCompra_col-->", "");

						sXmlStringFile=sXmlStringFile.replace("colancho_stoDeCompra_colancho", iAnchoColumna.toString());
						sXmlStringFile=sXmlStringFile.replace("colx_stoDeCompra_colx", iAnchoSum.toString());

						iAnchoSum+=iAnchoColumna;
					}

					break;

				case DetalleActivoFijoConstantesFunciones.LABEL_VIDAUTIL:
					iAnchoColumna=50;

					if(iAnchoSum+iAnchoColumna<=iAnchoMaximoHorizontal) {
						sXmlStringFile=sXmlStringFile.replace("<!--col_daUtil_col", "");
						sXmlStringFile=sXmlStringFile.replace("col_daUtil_col-->", "");

						sXmlStringFile=sXmlStringFile.replace("colancho_daUtil_colancho", iAnchoColumna.toString());
						sXmlStringFile=sXmlStringFile.replace("colx_daUtil_colx", iAnchoSum.toString());

						iAnchoSum+=iAnchoColumna;
					}

					break;

				case DetalleActivoFijoConstantesFunciones.LABEL_VALORRESIDUAL:
					iAnchoColumna=50;

					if(iAnchoSum+iAnchoColumna<=iAnchoMaximoHorizontal) {
						sXmlStringFile=sXmlStringFile.replace("<!--col_lorResidual_col", "");
						sXmlStringFile=sXmlStringFile.replace("col_lorResidual_col-->", "");

						sXmlStringFile=sXmlStringFile.replace("colancho_lorResidual_colancho", iAnchoColumna.toString());
						sXmlStringFile=sXmlStringFile.replace("colx_lorResidual_colx", iAnchoSum.toString());

						iAnchoSum+=iAnchoColumna;
					}

					break;

				case DetalleActivoFijoConstantesFunciones.LABEL_CANTIDAD:
					iAnchoColumna=50;

					if(iAnchoSum+iAnchoColumna<=iAnchoMaximoHorizontal) {
						sXmlStringFile=sXmlStringFile.replace("<!--col_ntidad_col", "");
						sXmlStringFile=sXmlStringFile.replace("col_ntidad_col-->", "");

						sXmlStringFile=sXmlStringFile.replace("colancho_ntidad_colancho", iAnchoColumna.toString());
						sXmlStringFile=sXmlStringFile.replace("colx_ntidad_colx", iAnchoSum.toString());

						iAnchoSum+=iAnchoColumna;
					}

					break;

				case DetalleActivoFijoConstantesFunciones.LABEL_NOMBREPROPIETARIO:
					iAnchoColumna=100;

					if(iAnchoSum+iAnchoColumna<=iAnchoMaximoHorizontal) {
						sXmlStringFile=sXmlStringFile.replace("<!--col_mbrePropietario_col", "");
						sXmlStringFile=sXmlStringFile.replace("col_mbrePropietario_col-->", "");

						sXmlStringFile=sXmlStringFile.replace("colancho_mbrePropietario_colancho", iAnchoColumna.toString());
						sXmlStringFile=sXmlStringFile.replace("colx_mbrePropietario_colx", iAnchoSum.toString());

						iAnchoSum+=iAnchoColumna;
					}

					break;

				case DetalleActivoFijoConstantesFunciones.LABEL_RESPONSABLE:
					iAnchoColumna=100;

					if(iAnchoSum+iAnchoColumna<=iAnchoMaximoHorizontal) {
						sXmlStringFile=sXmlStringFile.replace("<!--col_sponsable_col", "");
						sXmlStringFile=sXmlStringFile.replace("col_sponsable_col-->", "");

						sXmlStringFile=sXmlStringFile.replace("colancho_sponsable_colancho", iAnchoColumna.toString());
						sXmlStringFile=sXmlStringFile.replace("colx_sponsable_colx", iAnchoSum.toString());

						iAnchoSum+=iAnchoColumna;
					}

					break;

				case DetalleActivoFijoConstantesFunciones.LABEL_PATHFOTO:
					iAnchoColumna=100;

					if(iAnchoSum+iAnchoColumna<=iAnchoMaximoHorizontal) {
						sXmlStringFile=sXmlStringFile.replace("<!--col_thFoto_col", "");
						sXmlStringFile=sXmlStringFile.replace("col_thFoto_col-->", "");

						sXmlStringFile=sXmlStringFile.replace("colancho_thFoto_colancho", iAnchoColumna.toString());
						sXmlStringFile=sXmlStringFile.replace("colx_thFoto_colx", iAnchoSum.toString());

						iAnchoSum+=iAnchoColumna;
					}

					break;

				case DetalleActivoFijoConstantesFunciones.LABEL_NUMEROCOMPROBANTE:
					iAnchoColumna=100;

					if(iAnchoSum+iAnchoColumna<=iAnchoMaximoHorizontal) {
						sXmlStringFile=sXmlStringFile.replace("<!--col_meroComprobante_col", "");
						sXmlStringFile=sXmlStringFile.replace("col_meroComprobante_col-->", "");

						sXmlStringFile=sXmlStringFile.replace("colancho_meroComprobante_colancho", iAnchoColumna.toString());
						sXmlStringFile=sXmlStringFile.replace("colx_meroComprobante_colx", iAnchoSum.toString());

						iAnchoSum+=iAnchoColumna;
					}

					break;

				case DetalleActivoFijoConstantesFunciones.LABEL_REFERENCIA:
					iAnchoColumna=100;

					if(iAnchoSum+iAnchoColumna<=iAnchoMaximoHorizontal) {
						sXmlStringFile=sXmlStringFile.replace("<!--col_ferencia_col", "");
						sXmlStringFile=sXmlStringFile.replace("col_ferencia_col-->", "");

						sXmlStringFile=sXmlStringFile.replace("colancho_ferencia_colancho", iAnchoColumna.toString());
						sXmlStringFile=sXmlStringFile.replace("colx_ferencia_colx", iAnchoSum.toString());

						iAnchoSum+=iAnchoColumna;
					}

					break;

				case DetalleActivoFijoConstantesFunciones.LABEL_VALORCOTIZACION:
					iAnchoColumna=50;

					if(iAnchoSum+iAnchoColumna<=iAnchoMaximoHorizontal) {
						sXmlStringFile=sXmlStringFile.replace("<!--col_lorCotizacion_col", "");
						sXmlStringFile=sXmlStringFile.replace("col_lorCotizacion_col-->", "");

						sXmlStringFile=sXmlStringFile.replace("colancho_lorCotizacion_colancho", iAnchoColumna.toString());
						sXmlStringFile=sXmlStringFile.replace("colx_lorCotizacion_colx", iAnchoSum.toString());

						iAnchoSum+=iAnchoColumna;
					}

					break;

				case DetalleActivoFijoConstantesFunciones.LABEL_CONPARTES:
					iAnchoColumna=50;

					if(iAnchoSum+iAnchoColumna<=iAnchoMaximoHorizontal) {
						sXmlStringFile=sXmlStringFile.replace("<!--col_nPartes_col", "");
						sXmlStringFile=sXmlStringFile.replace("col_nPartes_col-->", "");

						sXmlStringFile=sXmlStringFile.replace("colancho_nPartes_colancho", iAnchoColumna.toString());
						sXmlStringFile=sXmlStringFile.replace("colx_nPartes_colx", iAnchoSum.toString());

						iAnchoSum+=iAnchoColumna;
					}

					break;

				case DetalleActivoFijoConstantesFunciones.LABEL_CONGARANTIA:
					iAnchoColumna=50;

					if(iAnchoSum+iAnchoColumna<=iAnchoMaximoHorizontal) {
						sXmlStringFile=sXmlStringFile.replace("<!--col_nGarantia_col", "");
						sXmlStringFile=sXmlStringFile.replace("col_nGarantia_col-->", "");

						sXmlStringFile=sXmlStringFile.replace("colancho_nGarantia_colancho", iAnchoColumna.toString());
						sXmlStringFile=sXmlStringFile.replace("colx_nGarantia_colx", iAnchoSum.toString());

						iAnchoSum+=iAnchoColumna;
					}

					break;

				case DetalleActivoFijoConstantesFunciones.LABEL_CONEXISTENCIA:
					iAnchoColumna=50;

					if(iAnchoSum+iAnchoColumna<=iAnchoMaximoHorizontal) {
						sXmlStringFile=sXmlStringFile.replace("<!--col_nExistencia_col", "");
						sXmlStringFile=sXmlStringFile.replace("col_nExistencia_col-->", "");

						sXmlStringFile=sXmlStringFile.replace("colancho_nExistencia_colancho", iAnchoColumna.toString());
						sXmlStringFile=sXmlStringFile.replace("colx_nExistencia_colx", iAnchoSum.toString());

						iAnchoSum+=iAnchoColumna;
					}

					break;

				case DetalleActivoFijoConstantesFunciones.LABEL_FECHABAJA:
					iAnchoColumna=50;

					if(iAnchoSum+iAnchoColumna<=iAnchoMaximoHorizontal) {
						sXmlStringFile=sXmlStringFile.replace("<!--col_chaBaja_col", "");
						sXmlStringFile=sXmlStringFile.replace("col_chaBaja_col-->", "");

						sXmlStringFile=sXmlStringFile.replace("colancho_chaBaja_colancho", iAnchoColumna.toString());
						sXmlStringFile=sXmlStringFile.replace("colx_chaBaja_colx", iAnchoSum.toString());

						iAnchoSum+=iAnchoColumna;
					}

					break;

				case DetalleActivoFijoConstantesFunciones.LABEL_PATHFOTO2:
					iAnchoColumna=100;

					if(iAnchoSum+iAnchoColumna<=iAnchoMaximoHorizontal) {
						sXmlStringFile=sXmlStringFile.replace("<!--col_thFoto2_col", "");
						sXmlStringFile=sXmlStringFile.replace("col_thFoto2_col-->", "");

						sXmlStringFile=sXmlStringFile.replace("colancho_thFoto2_colancho", iAnchoColumna.toString());
						sXmlStringFile=sXmlStringFile.replace("colx_thFoto2_colx", iAnchoSum.toString());

						iAnchoSum+=iAnchoColumna;
					}

					break;
					
				default :
					break;
			}
		}
		
		iAnchoSum+=iAnchoMargenes;
		
		if(iAnchoSum>iAnchoMaximoVertical) {
			sXmlStringFile=sXmlStringFile.replace("595", "842");
			//sXmlStringFile=sXmlStringFile.replace("842", "595");
			sXmlStringFile=sXmlStringFile.replace("535", "782");
			sXmlStringFile=sXmlStringFile.replace("Portrait", "Landscape");			
			sWidthGrafico="782";
		
		} else {
			sXmlStringFile=sXmlStringFile.replace("842", "595");
			//sXmlStringFile=sXmlStringFile.replace("595", "842");
			sXmlStringFile=sXmlStringFile.replace("782", "535");
			sXmlStringFile=sXmlStringFile.replace("Landscape", "Portrait");
			sWidthGrafico="535";
		}
		
		if(this.jInternalFrameReporteDinamicoDetalleActivoFijo.getjCheckBoxConGraficoDinamico().isSelected()) {
			sXmlStringFile=this.actualizarGraficoReporteDinamico(sXmlStringFile,sWidthGrafico);
		} else {
			sXmlStringFile=sXmlStringFile.replace("colancho_summary_colancho", "30");
		}
		
		return sXmlStringFile;
	}
	
	
	
	public String actualizarGraficoReporteDinamico(String sXmlStringFile,String sWidthGrafico) {		
		String strGrafico="";		
		String sTipo="NORMAL";
		String strCategorySeries="";
		String sNombreCampoCategoria="";
		String sNombreCampoCategoriaValor="";
		Reporte reporte=new Reporte();
		Reporte reporteCategoriaValor=new Reporte();
		Reporte reporteTipoGraficoReporte=new Reporte();
		Boolean existe=false;
		
		sXmlStringFile=sXmlStringFile.replace("colancho_summary_colancho", "280");
		
		//CATEGORIA GRAFICO				
		reporte=((Reporte)this.jInternalFrameReporteDinamicoDetalleActivoFijo.getjComboBoxColumnaCategoriaGrafico().getSelectedItem());
				
		//TIPO GRAFICO REPORTE
		reporteTipoGraficoReporte=((Reporte)this.jInternalFrameReporteDinamicoDetalleActivoFijo.getjComboBoxTiposGraficosReportesDinamico().getSelectedItem());
		
		String sTipoGraficoReporte=reporteTipoGraficoReporte.getsCodigo();
		
		switch(reporte.getsCodigo()) {
			
				case DetalleActivoFijoConstantesFunciones.LABEL_IDEMPRESA:
					sNombreCampoCategoria="id_empresa";
					break;

				case DetalleActivoFijoConstantesFunciones.LABEL_IDSUCURSAL:
					sNombreCampoCategoria="id_sucursal";
					break;

				case DetalleActivoFijoConstantesFunciones.LABEL_IDDETALLEGRUPOACTIVOFIJO:
					sNombreCampoCategoria="id_detalle_grupo_activo_fijo";
					break;

				case DetalleActivoFijoConstantesFunciones.LABEL_IDSUBGRUPOACTIVOFIJO:
					sNombreCampoCategoria="id_sub_grupo_activo_fijo";
					break;

				case DetalleActivoFijoConstantesFunciones.LABEL_IDTIPORAMOACTIVOFIJO:
					sNombreCampoCategoria="id_tipo_ramo_activo_fijo";
					break;

				case DetalleActivoFijoConstantesFunciones.LABEL_IDTIPOACTIVOFIJOEMPRESA:
					sNombreCampoCategoria="id_tipo_activo_fijo_empresa";
					break;

				case DetalleActivoFijoConstantesFunciones.LABEL_IDTIPODEPRECIACIONEMPRESA:
					sNombreCampoCategoria="id_tipo_depreciacion_empresa";
					break;

				case DetalleActivoFijoConstantesFunciones.LABEL_IDESTADOACTIVOFIJO:
					sNombreCampoCategoria="id_estado_activo_fijo";
					break;

				case DetalleActivoFijoConstantesFunciones.LABEL_IDCLIENTE:
					sNombreCampoCategoria="id_cliente";
					break;

				case DetalleActivoFijoConstantesFunciones.LABEL_IDPARTIDAPRESU:
					sNombreCampoCategoria="id_partida_presu";
					break;

				case DetalleActivoFijoConstantesFunciones.LABEL_CODIGO:
					sNombreCampoCategoria="codigo";
					break;

				case DetalleActivoFijoConstantesFunciones.LABEL_NOMBRE:
					sNombreCampoCategoria="nombre";
					break;

				case DetalleActivoFijoConstantesFunciones.LABEL_SERIE:
					sNombreCampoCategoria="serie";
					break;

				case DetalleActivoFijoConstantesFunciones.LABEL_FECHACOMPRA:
					sNombreCampoCategoria="fecha_compra";
					break;

				case DetalleActivoFijoConstantesFunciones.LABEL_FECHAMANTENIMIENTO:
					sNombreCampoCategoria="fecha_mantenimiento";
					break;

				case DetalleActivoFijoConstantesFunciones.LABEL_FECHACORRECCION:
					sNombreCampoCategoria="fecha_correccion";
					break;

				case DetalleActivoFijoConstantesFunciones.LABEL_FECHADEPRECIACION:
					sNombreCampoCategoria="fecha_depreciacion";
					break;

				case DetalleActivoFijoConstantesFunciones.LABEL_CLAVE:
					sNombreCampoCategoria="clave";
					break;

				case DetalleActivoFijoConstantesFunciones.LABEL_MARCA:
					sNombreCampoCategoria="marca";
					break;

				case DetalleActivoFijoConstantesFunciones.LABEL_MODELO:
					sNombreCampoCategoria="modelo";
					break;

				case DetalleActivoFijoConstantesFunciones.LABEL_COLOR:
					sNombreCampoCategoria="color";
					break;

				case DetalleActivoFijoConstantesFunciones.LABEL_FECHA:
					sNombreCampoCategoria="fecha";
					break;

				case DetalleActivoFijoConstantesFunciones.LABEL_VALORUTIL:
					sNombreCampoCategoria="valor_util";
					break;

				case DetalleActivoFijoConstantesFunciones.LABEL_COSTODECOMPRA:
					sNombreCampoCategoria="costo_de_compra";
					break;

				case DetalleActivoFijoConstantesFunciones.LABEL_VIDAUTIL:
					sNombreCampoCategoria="vida_util";
					break;

				case DetalleActivoFijoConstantesFunciones.LABEL_VALORRESIDUAL:
					sNombreCampoCategoria="valor_residual";
					break;

				case DetalleActivoFijoConstantesFunciones.LABEL_CANTIDAD:
					sNombreCampoCategoria="cantidad";
					break;

				case DetalleActivoFijoConstantesFunciones.LABEL_NOMBREPROPIETARIO:
					sNombreCampoCategoria="nombre_propietario";
					break;

				case DetalleActivoFijoConstantesFunciones.LABEL_RESPONSABLE:
					sNombreCampoCategoria="responsable";
					break;

				case DetalleActivoFijoConstantesFunciones.LABEL_PATHFOTO:
					sNombreCampoCategoria="path_foto";
					break;

				case DetalleActivoFijoConstantesFunciones.LABEL_NUMEROCOMPROBANTE:
					sNombreCampoCategoria="numero_comprobante";
					break;

				case DetalleActivoFijoConstantesFunciones.LABEL_REFERENCIA:
					sNombreCampoCategoria="referencia";
					break;

				case DetalleActivoFijoConstantesFunciones.LABEL_VALORCOTIZACION:
					sNombreCampoCategoria="valor_cotizacion";
					break;

				case DetalleActivoFijoConstantesFunciones.LABEL_CONPARTES:
					sNombreCampoCategoria="con_partes";
					break;

				case DetalleActivoFijoConstantesFunciones.LABEL_CONGARANTIA:
					sNombreCampoCategoria="con_garantia";
					break;

				case DetalleActivoFijoConstantesFunciones.LABEL_CONEXISTENCIA:
					sNombreCampoCategoria="con_existencia";
					break;

				case DetalleActivoFijoConstantesFunciones.LABEL_FECHABAJA:
					sNombreCampoCategoria="fecha_baja";
					break;

				case DetalleActivoFijoConstantesFunciones.LABEL_PATHFOTO2:
					sNombreCampoCategoria="path_foto2";
					break;
					
			default :
				break;
		}		
		//CATEGORIA GRAFICO
		
		//CATEGORIA VALOR				
		reporteCategoriaValor=((Reporte)this.jInternalFrameReporteDinamicoDetalleActivoFijo.getjComboBoxColumnaCategoriaValor().getSelectedItem());
		
		switch(reporteCategoriaValor.getsCodigo()) {
			
				case DetalleActivoFijoConstantesFunciones.LABEL_IDEMPRESA:
					sNombreCampoCategoriaValor="id_empresa";
					break;

				case DetalleActivoFijoConstantesFunciones.LABEL_IDSUCURSAL:
					sNombreCampoCategoriaValor="id_sucursal";
					break;

				case DetalleActivoFijoConstantesFunciones.LABEL_IDDETALLEGRUPOACTIVOFIJO:
					sNombreCampoCategoriaValor="id_detalle_grupo_activo_fijo";
					break;

				case DetalleActivoFijoConstantesFunciones.LABEL_IDSUBGRUPOACTIVOFIJO:
					sNombreCampoCategoriaValor="id_sub_grupo_activo_fijo";
					break;

				case DetalleActivoFijoConstantesFunciones.LABEL_IDTIPORAMOACTIVOFIJO:
					sNombreCampoCategoriaValor="id_tipo_ramo_activo_fijo";
					break;

				case DetalleActivoFijoConstantesFunciones.LABEL_IDTIPOACTIVOFIJOEMPRESA:
					sNombreCampoCategoriaValor="id_tipo_activo_fijo_empresa";
					break;

				case DetalleActivoFijoConstantesFunciones.LABEL_IDTIPODEPRECIACIONEMPRESA:
					sNombreCampoCategoriaValor="id_tipo_depreciacion_empresa";
					break;

				case DetalleActivoFijoConstantesFunciones.LABEL_IDESTADOACTIVOFIJO:
					sNombreCampoCategoriaValor="id_estado_activo_fijo";
					break;

				case DetalleActivoFijoConstantesFunciones.LABEL_IDCLIENTE:
					sNombreCampoCategoriaValor="id_cliente";
					break;

				case DetalleActivoFijoConstantesFunciones.LABEL_IDPARTIDAPRESU:
					sNombreCampoCategoriaValor="id_partida_presu";
					break;

				case DetalleActivoFijoConstantesFunciones.LABEL_CODIGO:
					sNombreCampoCategoriaValor="codigo";
					break;

				case DetalleActivoFijoConstantesFunciones.LABEL_NOMBRE:
					sNombreCampoCategoriaValor="nombre";
					break;

				case DetalleActivoFijoConstantesFunciones.LABEL_SERIE:
					sNombreCampoCategoriaValor="serie";
					break;

				case DetalleActivoFijoConstantesFunciones.LABEL_FECHACOMPRA:
					sNombreCampoCategoriaValor="fecha_compra";
					break;

				case DetalleActivoFijoConstantesFunciones.LABEL_FECHAMANTENIMIENTO:
					sNombreCampoCategoriaValor="fecha_mantenimiento";
					break;

				case DetalleActivoFijoConstantesFunciones.LABEL_FECHACORRECCION:
					sNombreCampoCategoriaValor="fecha_correccion";
					break;

				case DetalleActivoFijoConstantesFunciones.LABEL_FECHADEPRECIACION:
					sNombreCampoCategoriaValor="fecha_depreciacion";
					break;

				case DetalleActivoFijoConstantesFunciones.LABEL_CLAVE:
					sNombreCampoCategoriaValor="clave";
					break;

				case DetalleActivoFijoConstantesFunciones.LABEL_MARCA:
					sNombreCampoCategoriaValor="marca";
					break;

				case DetalleActivoFijoConstantesFunciones.LABEL_MODELO:
					sNombreCampoCategoriaValor="modelo";
					break;

				case DetalleActivoFijoConstantesFunciones.LABEL_COLOR:
					sNombreCampoCategoriaValor="color";
					break;

				case DetalleActivoFijoConstantesFunciones.LABEL_FECHA:
					sNombreCampoCategoriaValor="fecha";
					break;

				case DetalleActivoFijoConstantesFunciones.LABEL_VALORUTIL:
					sNombreCampoCategoriaValor="valor_util";
					break;

				case DetalleActivoFijoConstantesFunciones.LABEL_COSTODECOMPRA:
					sNombreCampoCategoriaValor="costo_de_compra";
					break;

				case DetalleActivoFijoConstantesFunciones.LABEL_VIDAUTIL:
					sNombreCampoCategoriaValor="vida_util";
					break;

				case DetalleActivoFijoConstantesFunciones.LABEL_VALORRESIDUAL:
					sNombreCampoCategoriaValor="valor_residual";
					break;

				case DetalleActivoFijoConstantesFunciones.LABEL_CANTIDAD:
					sNombreCampoCategoriaValor="cantidad";
					break;

				case DetalleActivoFijoConstantesFunciones.LABEL_NOMBREPROPIETARIO:
					sNombreCampoCategoriaValor="nombre_propietario";
					break;

				case DetalleActivoFijoConstantesFunciones.LABEL_RESPONSABLE:
					sNombreCampoCategoriaValor="responsable";
					break;

				case DetalleActivoFijoConstantesFunciones.LABEL_PATHFOTO:
					sNombreCampoCategoriaValor="path_foto";
					break;

				case DetalleActivoFijoConstantesFunciones.LABEL_NUMEROCOMPROBANTE:
					sNombreCampoCategoriaValor="numero_comprobante";
					break;

				case DetalleActivoFijoConstantesFunciones.LABEL_REFERENCIA:
					sNombreCampoCategoriaValor="referencia";
					break;

				case DetalleActivoFijoConstantesFunciones.LABEL_VALORCOTIZACION:
					sNombreCampoCategoriaValor="valor_cotizacion";
					break;

				case DetalleActivoFijoConstantesFunciones.LABEL_CONPARTES:
					sNombreCampoCategoriaValor="con_partes";
					break;

				case DetalleActivoFijoConstantesFunciones.LABEL_CONGARANTIA:
					sNombreCampoCategoriaValor="con_garantia";
					break;

				case DetalleActivoFijoConstantesFunciones.LABEL_CONEXISTENCIA:
					sNombreCampoCategoriaValor="con_existencia";
					break;

				case DetalleActivoFijoConstantesFunciones.LABEL_FECHABAJA:
					sNombreCampoCategoriaValor="fecha_baja";
					break;

				case DetalleActivoFijoConstantesFunciones.LABEL_PATHFOTO2:
					sNombreCampoCategoriaValor="path_foto2";
					break;
					
			default :
				break;
		}	
		//CATEGORIA VALOR
		
		//VALORES GRAFICO
		for(int index:this.jInternalFrameReporteDinamicoDetalleActivoFijo.getjListColumnasValoresGrafico().getSelectedIndices()) {
			reporte=(Reporte)this.jInternalFrameReporteDinamicoDetalleActivoFijo.getjListColumnasValoresGrafico().getModel().getElementAt(index);
			
			switch(reporte.getsCodigo()) {
				
				case DetalleActivoFijoConstantesFunciones.LABEL_IDEMPRESA:
					strCategorySeries+=FuncionesReporte.getStringCategoryGraficoNormalReporte(sTipoGraficoReporte,"Empresa",sNombreCampoCategoria,sNombreCampoCategoriaValor,"id_empresa");
					break;

				case DetalleActivoFijoConstantesFunciones.LABEL_IDSUCURSAL:
					strCategorySeries+=FuncionesReporte.getStringCategoryGraficoNormalReporte(sTipoGraficoReporte,"Sucursal",sNombreCampoCategoria,sNombreCampoCategoriaValor,"id_sucursal");
					break;

				case DetalleActivoFijoConstantesFunciones.LABEL_IDDETALLEGRUPOACTIVOFIJO:
					strCategorySeries+=FuncionesReporte.getStringCategoryGraficoNormalReporte(sTipoGraficoReporte,"Detalle Grupo Activo Fijo",sNombreCampoCategoria,sNombreCampoCategoriaValor,"id_detalle_grupo_activo_fijo");
					break;

				case DetalleActivoFijoConstantesFunciones.LABEL_IDSUBGRUPOACTIVOFIJO:
					strCategorySeries+=FuncionesReporte.getStringCategoryGraficoNormalReporte(sTipoGraficoReporte,"Sub Grupo Activo Fijo",sNombreCampoCategoria,sNombreCampoCategoriaValor,"id_sub_grupo_activo_fijo");
					break;

				case DetalleActivoFijoConstantesFunciones.LABEL_IDTIPORAMOACTIVOFIJO:
					strCategorySeries+=FuncionesReporte.getStringCategoryGraficoNormalReporte(sTipoGraficoReporte,"Tipo Ramo Activo Fijo",sNombreCampoCategoria,sNombreCampoCategoriaValor,"id_tipo_ramo_activo_fijo");
					break;

				case DetalleActivoFijoConstantesFunciones.LABEL_IDTIPOACTIVOFIJOEMPRESA:
					strCategorySeries+=FuncionesReporte.getStringCategoryGraficoNormalReporte(sTipoGraficoReporte,"Tipo Activo Fijo Empresa",sNombreCampoCategoria,sNombreCampoCategoriaValor,"id_tipo_activo_fijo_empresa");
					break;

				case DetalleActivoFijoConstantesFunciones.LABEL_IDTIPODEPRECIACIONEMPRESA:
					strCategorySeries+=FuncionesReporte.getStringCategoryGraficoNormalReporte(sTipoGraficoReporte,"Tipo Depreciacion Empresa",sNombreCampoCategoria,sNombreCampoCategoriaValor,"id_tipo_depreciacion_empresa");
					break;

				case DetalleActivoFijoConstantesFunciones.LABEL_IDESTADOACTIVOFIJO:
					strCategorySeries+=FuncionesReporte.getStringCategoryGraficoNormalReporte(sTipoGraficoReporte,"Estado Activo Fijo",sNombreCampoCategoria,sNombreCampoCategoriaValor,"id_estado_activo_fijo");
					break;

				case DetalleActivoFijoConstantesFunciones.LABEL_IDCLIENTE:
					strCategorySeries+=FuncionesReporte.getStringCategoryGraficoNormalReporte(sTipoGraficoReporte,"Cliente",sNombreCampoCategoria,sNombreCampoCategoriaValor,"id_cliente");
					break;

				case DetalleActivoFijoConstantesFunciones.LABEL_IDPARTIDAPRESU:
					strCategorySeries+=FuncionesReporte.getStringCategoryGraficoNormalReporte(sTipoGraficoReporte,"Parta Presu",sNombreCampoCategoria,sNombreCampoCategoriaValor,"id_partida_presu");
					break;

				case DetalleActivoFijoConstantesFunciones.LABEL_CODIGO:
					strCategorySeries+=FuncionesReporte.getStringCategoryGraficoNormalReporte(sTipoGraficoReporte,"Codigo",sNombreCampoCategoria,sNombreCampoCategoriaValor,"codigo");
					break;

				case DetalleActivoFijoConstantesFunciones.LABEL_NOMBRE:
					strCategorySeries+=FuncionesReporte.getStringCategoryGraficoNormalReporte(sTipoGraficoReporte,"Nombre",sNombreCampoCategoria,sNombreCampoCategoriaValor,"nombre");
					break;

				case DetalleActivoFijoConstantesFunciones.LABEL_SERIE:
					strCategorySeries+=FuncionesReporte.getStringCategoryGraficoNormalReporte(sTipoGraficoReporte,"Serie",sNombreCampoCategoria,sNombreCampoCategoriaValor,"serie");
					break;

				case DetalleActivoFijoConstantesFunciones.LABEL_FECHACOMPRA:
					strCategorySeries+=FuncionesReporte.getStringCategoryGraficoNormalReporte(sTipoGraficoReporte,"Fecha Compra",sNombreCampoCategoria,sNombreCampoCategoriaValor,"fecha_compra");
					break;

				case DetalleActivoFijoConstantesFunciones.LABEL_FECHAMANTENIMIENTO:
					strCategorySeries+=FuncionesReporte.getStringCategoryGraficoNormalReporte(sTipoGraficoReporte,"Fecha Mantenimiento",sNombreCampoCategoria,sNombreCampoCategoriaValor,"fecha_mantenimiento");
					break;

				case DetalleActivoFijoConstantesFunciones.LABEL_FECHACORRECCION:
					strCategorySeries+=FuncionesReporte.getStringCategoryGraficoNormalReporte(sTipoGraficoReporte,"Fecha Correccion",sNombreCampoCategoria,sNombreCampoCategoriaValor,"fecha_correccion");
					break;

				case DetalleActivoFijoConstantesFunciones.LABEL_FECHADEPRECIACION:
					strCategorySeries+=FuncionesReporte.getStringCategoryGraficoNormalReporte(sTipoGraficoReporte,"Fecha Depreciacion",sNombreCampoCategoria,sNombreCampoCategoriaValor,"fecha_depreciacion");
					break;

				case DetalleActivoFijoConstantesFunciones.LABEL_CLAVE:
					strCategorySeries+=FuncionesReporte.getStringCategoryGraficoNormalReporte(sTipoGraficoReporte,"Clave",sNombreCampoCategoria,sNombreCampoCategoriaValor,"clave");
					break;

				case DetalleActivoFijoConstantesFunciones.LABEL_MARCA:
					strCategorySeries+=FuncionesReporte.getStringCategoryGraficoNormalReporte(sTipoGraficoReporte,"Marca",sNombreCampoCategoria,sNombreCampoCategoriaValor,"marca");
					break;

				case DetalleActivoFijoConstantesFunciones.LABEL_MODELO:
					strCategorySeries+=FuncionesReporte.getStringCategoryGraficoNormalReporte(sTipoGraficoReporte,"Modelo",sNombreCampoCategoria,sNombreCampoCategoriaValor,"modelo");
					break;

				case DetalleActivoFijoConstantesFunciones.LABEL_COLOR:
					strCategorySeries+=FuncionesReporte.getStringCategoryGraficoNormalReporte(sTipoGraficoReporte,"Color",sNombreCampoCategoria,sNombreCampoCategoriaValor,"color");
					break;

				case DetalleActivoFijoConstantesFunciones.LABEL_FECHA:
					strCategorySeries+=FuncionesReporte.getStringCategoryGraficoNormalReporte(sTipoGraficoReporte,"Fecha",sNombreCampoCategoria,sNombreCampoCategoriaValor,"fecha");
					break;

				case DetalleActivoFijoConstantesFunciones.LABEL_VALORUTIL:
					strCategorySeries+=FuncionesReporte.getStringCategoryGraficoNormalReporte(sTipoGraficoReporte,"Valor Util",sNombreCampoCategoria,sNombreCampoCategoriaValor,"valor_util");
					break;

				case DetalleActivoFijoConstantesFunciones.LABEL_COSTODECOMPRA:
					strCategorySeries+=FuncionesReporte.getStringCategoryGraficoNormalReporte(sTipoGraficoReporte,"Costo De Compra",sNombreCampoCategoria,sNombreCampoCategoriaValor,"costo_de_compra");
					break;

				case DetalleActivoFijoConstantesFunciones.LABEL_VIDAUTIL:
					strCategorySeries+=FuncionesReporte.getStringCategoryGraficoNormalReporte(sTipoGraficoReporte,"Vida Util",sNombreCampoCategoria,sNombreCampoCategoriaValor,"vida_util");
					break;

				case DetalleActivoFijoConstantesFunciones.LABEL_VALORRESIDUAL:
					strCategorySeries+=FuncionesReporte.getStringCategoryGraficoNormalReporte(sTipoGraficoReporte,"Valor Residual",sNombreCampoCategoria,sNombreCampoCategoriaValor,"valor_residual");
					break;

				case DetalleActivoFijoConstantesFunciones.LABEL_CANTIDAD:
					strCategorySeries+=FuncionesReporte.getStringCategoryGraficoNormalReporte(sTipoGraficoReporte,"Cantidad",sNombreCampoCategoria,sNombreCampoCategoriaValor,"cantidad");
					break;

				case DetalleActivoFijoConstantesFunciones.LABEL_NOMBREPROPIETARIO:
					strCategorySeries+=FuncionesReporte.getStringCategoryGraficoNormalReporte(sTipoGraficoReporte,"Nombre Propietario",sNombreCampoCategoria,sNombreCampoCategoriaValor,"nombre_propietario");
					break;

				case DetalleActivoFijoConstantesFunciones.LABEL_RESPONSABLE:
					strCategorySeries+=FuncionesReporte.getStringCategoryGraficoNormalReporte(sTipoGraficoReporte,"Responsable Propietario",sNombreCampoCategoria,sNombreCampoCategoriaValor,"responsable");
					break;

				case DetalleActivoFijoConstantesFunciones.LABEL_PATHFOTO:
					strCategorySeries+=FuncionesReporte.getStringCategoryGraficoNormalReporte(sTipoGraficoReporte,"Path Foto",sNombreCampoCategoria,sNombreCampoCategoriaValor,"path_foto");
					break;

				case DetalleActivoFijoConstantesFunciones.LABEL_NUMEROCOMPROBANTE:
					strCategorySeries+=FuncionesReporte.getStringCategoryGraficoNormalReporte(sTipoGraficoReporte,"Numero Comprobante",sNombreCampoCategoria,sNombreCampoCategoriaValor,"numero_comprobante");
					break;

				case DetalleActivoFijoConstantesFunciones.LABEL_REFERENCIA:
					strCategorySeries+=FuncionesReporte.getStringCategoryGraficoNormalReporte(sTipoGraficoReporte,"Referencia",sNombreCampoCategoria,sNombreCampoCategoriaValor,"referencia");
					break;

				case DetalleActivoFijoConstantesFunciones.LABEL_VALORCOTIZACION:
					strCategorySeries+=FuncionesReporte.getStringCategoryGraficoNormalReporte(sTipoGraficoReporte,"Valor Cotizacion",sNombreCampoCategoria,sNombreCampoCategoriaValor,"valor_cotizacion");
					break;

				case DetalleActivoFijoConstantesFunciones.LABEL_CONPARTES:
					strCategorySeries+=FuncionesReporte.getStringCategoryGraficoNormalReporte(sTipoGraficoReporte,"Con Partes",sNombreCampoCategoria,sNombreCampoCategoriaValor,"con_partes");
					break;

				case DetalleActivoFijoConstantesFunciones.LABEL_CONGARANTIA:
					strCategorySeries+=FuncionesReporte.getStringCategoryGraficoNormalReporte(sTipoGraficoReporte,"Con Garantia",sNombreCampoCategoria,sNombreCampoCategoriaValor,"con_garantia");
					break;

				case DetalleActivoFijoConstantesFunciones.LABEL_CONEXISTENCIA:
					strCategorySeries+=FuncionesReporte.getStringCategoryGraficoNormalReporte(sTipoGraficoReporte,"Con Existencia",sNombreCampoCategoria,sNombreCampoCategoriaValor,"con_existencia");
					break;

				case DetalleActivoFijoConstantesFunciones.LABEL_FECHABAJA:
					strCategorySeries+=FuncionesReporte.getStringCategoryGraficoNormalReporte(sTipoGraficoReporte,"Fecha Baja",sNombreCampoCategoria,sNombreCampoCategoriaValor,"fecha_baja");
					break;

				case DetalleActivoFijoConstantesFunciones.LABEL_PATHFOTO2:
					strCategorySeries+=FuncionesReporte.getStringCategoryGraficoNormalReporte(sTipoGraficoReporte,"Path Foto2",sNombreCampoCategoria,sNombreCampoCategoriaValor,"path_foto2");
					break;
					
				default :
					break;
			}
		}
		//VALORES GRAFICO
		//if(sTipoGraficoReporte.equals("BARRAS") || sTipoGraficoReporte.equals("BARRAS_3D") || sTipoGraficoReporte.equals("BARRAS_XY") ||
		//   sTipoGraficoReporte.equals("PASTEL") || sTipoGraficoReporte.equals("PASTEL_3D") || sTipoGraficoReporte.equals("APILADO")) {
			
			existe=true;
			strGrafico=FuncionesReporte.getStringGraficoReporte(sTipoGraficoReporte,sWidthGrafico,strCategorySeries);			
		//}
		
		if(existe) {
			sXmlStringFile=sXmlStringFile.replace("<!--GRAFICO-->", strGrafico);
		}												
		
		return sXmlStringFile;
	}
	
	
	//@SuppressWarnings("deprecation")
	
	public void jButtonGenerarExcelReporteDinamicoDetalleActivoFijoActionPerformed(ActionEvent evt) throws Exception {		
		ArrayList<DetalleActivoFijo> detalleactivofijosSeleccionados=new ArrayList<DetalleActivoFijo>();		
		
		detalleactivofijosSeleccionados=this.getDetalleActivoFijosSeleccionados(true);
		
		String sTipo=Funciones2.getTipoExportar(this.parametroGeneralUsuario);
		Boolean conCabecera=this.parametroGeneralUsuario.getcon_exportar_cabecera();
		String sDelimiter=Funciones2.getTipoDelimiter(this.parametroGeneralUsuario);
		String sPath=this.parametroGeneralUsuario.getpath_exportar()+"detalleactivofijo";//.xls";
		
		String sFilaCabecera="";
		String sFilaDatos="";
		
		Boolean existeFilas=false;
		
		Workbook workbook = null;
		FileOutputStream fileOutputStream=null;
		Reporte reporte=new Reporte();
		
		try {
			
			if(sTipoArchivoReporte=="EXCEL2") {
				workbook = new HSSFWorkbook();
				sPath+=".xls";
			
			} else if(sTipoArchivoReporte=="EXCEL2_2") {
				workbook = new XSSFWorkbook();
				sPath+=".xlsx";			
			}
		
			Sheet sheet = workbook.createSheet("DetalleActivoFijos");
						
		    			
			Integer iRow=0;
			Integer iCell=0;
			
			Row row = sheet.createRow(iRow);
			Cell cell = row.createCell(iCell);
			//cell.setCellValue("Blahblah");
			
			for(int index:this.jInternalFrameReporteDinamicoDetalleActivoFijo.getjListColumnasSelectReporte().getSelectedIndices()) {
				reporte=(Reporte)this.jInternalFrameReporteDinamicoDetalleActivoFijo.getjListColumnasSelectReporte().getModel().getElementAt(index);
				
				switch(reporte.getsCodigo()) {
					
				case DetalleActivoFijoConstantesFunciones.LABEL_IDEMPRESA:
					iRow=0;

					if(!existeFilas) {row = sheet.createRow(iRow);} else {row=sheet.getRow(iRow);}

					cell = row.createCell(iCell);
					cell.setCellValue(DetalleActivoFijoConstantesFunciones.LABEL_IDEMPRESA);
					iRow++;

					for(DetalleActivoFijo detalleactivofijo:detalleactivofijosSeleccionados) {
						if(!existeFilas) {row = sheet.createRow(iRow);} else {row=sheet.getRow(iRow);}

						cell = row.createCell(iCell);
						cell.setCellValue(detalleactivofijo.getempresa_descripcion());
						iRow++;
					}

					existeFilas=true;
					iCell++;
					break;

				case DetalleActivoFijoConstantesFunciones.LABEL_IDSUCURSAL:
					iRow=0;

					if(!existeFilas) {row = sheet.createRow(iRow);} else {row=sheet.getRow(iRow);}

					cell = row.createCell(iCell);
					cell.setCellValue(DetalleActivoFijoConstantesFunciones.LABEL_IDSUCURSAL);
					iRow++;

					for(DetalleActivoFijo detalleactivofijo:detalleactivofijosSeleccionados) {
						if(!existeFilas) {row = sheet.createRow(iRow);} else {row=sheet.getRow(iRow);}

						cell = row.createCell(iCell);
						cell.setCellValue(detalleactivofijo.getsucursal_descripcion());
						iRow++;
					}

					existeFilas=true;
					iCell++;
					break;

				case DetalleActivoFijoConstantesFunciones.LABEL_IDDETALLEGRUPOACTIVOFIJO:
					iRow=0;

					if(!existeFilas) {row = sheet.createRow(iRow);} else {row=sheet.getRow(iRow);}

					cell = row.createCell(iCell);
					cell.setCellValue(DetalleActivoFijoConstantesFunciones.LABEL_IDDETALLEGRUPOACTIVOFIJO);
					iRow++;

					for(DetalleActivoFijo detalleactivofijo:detalleactivofijosSeleccionados) {
						if(!existeFilas) {row = sheet.createRow(iRow);} else {row=sheet.getRow(iRow);}

						cell = row.createCell(iCell);
						cell.setCellValue(detalleactivofijo.getdetallegrupoactivofijo_descripcion());
						iRow++;
					}

					existeFilas=true;
					iCell++;
					break;

				case DetalleActivoFijoConstantesFunciones.LABEL_IDSUBGRUPOACTIVOFIJO:
					iRow=0;

					if(!existeFilas) {row = sheet.createRow(iRow);} else {row=sheet.getRow(iRow);}

					cell = row.createCell(iCell);
					cell.setCellValue(DetalleActivoFijoConstantesFunciones.LABEL_IDSUBGRUPOACTIVOFIJO);
					iRow++;

					for(DetalleActivoFijo detalleactivofijo:detalleactivofijosSeleccionados) {
						if(!existeFilas) {row = sheet.createRow(iRow);} else {row=sheet.getRow(iRow);}

						cell = row.createCell(iCell);
						cell.setCellValue(detalleactivofijo.getsubgrupoactivofijo_descripcion());
						iRow++;
					}

					existeFilas=true;
					iCell++;
					break;

				case DetalleActivoFijoConstantesFunciones.LABEL_IDTIPORAMOACTIVOFIJO:
					iRow=0;

					if(!existeFilas) {row = sheet.createRow(iRow);} else {row=sheet.getRow(iRow);}

					cell = row.createCell(iCell);
					cell.setCellValue(DetalleActivoFijoConstantesFunciones.LABEL_IDTIPORAMOACTIVOFIJO);
					iRow++;

					for(DetalleActivoFijo detalleactivofijo:detalleactivofijosSeleccionados) {
						if(!existeFilas) {row = sheet.createRow(iRow);} else {row=sheet.getRow(iRow);}

						cell = row.createCell(iCell);
						cell.setCellValue(detalleactivofijo.gettiporamoactivofijo_descripcion());
						iRow++;
					}

					existeFilas=true;
					iCell++;
					break;

				case DetalleActivoFijoConstantesFunciones.LABEL_IDTIPOACTIVOFIJOEMPRESA:
					iRow=0;

					if(!existeFilas) {row = sheet.createRow(iRow);} else {row=sheet.getRow(iRow);}

					cell = row.createCell(iCell);
					cell.setCellValue(DetalleActivoFijoConstantesFunciones.LABEL_IDTIPOACTIVOFIJOEMPRESA);
					iRow++;

					for(DetalleActivoFijo detalleactivofijo:detalleactivofijosSeleccionados) {
						if(!existeFilas) {row = sheet.createRow(iRow);} else {row=sheet.getRow(iRow);}

						cell = row.createCell(iCell);
						cell.setCellValue(detalleactivofijo.gettipoactivofijoempresa_descripcion());
						iRow++;
					}

					existeFilas=true;
					iCell++;
					break;

				case DetalleActivoFijoConstantesFunciones.LABEL_IDTIPODEPRECIACIONEMPRESA:
					iRow=0;

					if(!existeFilas) {row = sheet.createRow(iRow);} else {row=sheet.getRow(iRow);}

					cell = row.createCell(iCell);
					cell.setCellValue(DetalleActivoFijoConstantesFunciones.LABEL_IDTIPODEPRECIACIONEMPRESA);
					iRow++;

					for(DetalleActivoFijo detalleactivofijo:detalleactivofijosSeleccionados) {
						if(!existeFilas) {row = sheet.createRow(iRow);} else {row=sheet.getRow(iRow);}

						cell = row.createCell(iCell);
						cell.setCellValue(detalleactivofijo.gettipodepreciacionempresa_descripcion());
						iRow++;
					}

					existeFilas=true;
					iCell++;
					break;

				case DetalleActivoFijoConstantesFunciones.LABEL_IDESTADOACTIVOFIJO:
					iRow=0;

					if(!existeFilas) {row = sheet.createRow(iRow);} else {row=sheet.getRow(iRow);}

					cell = row.createCell(iCell);
					cell.setCellValue(DetalleActivoFijoConstantesFunciones.LABEL_IDESTADOACTIVOFIJO);
					iRow++;

					for(DetalleActivoFijo detalleactivofijo:detalleactivofijosSeleccionados) {
						if(!existeFilas) {row = sheet.createRow(iRow);} else {row=sheet.getRow(iRow);}

						cell = row.createCell(iCell);
						cell.setCellValue(detalleactivofijo.getestadoactivofijo_descripcion());
						iRow++;
					}

					existeFilas=true;
					iCell++;
					break;

				case DetalleActivoFijoConstantesFunciones.LABEL_IDCLIENTE:
					iRow=0;

					if(!existeFilas) {row = sheet.createRow(iRow);} else {row=sheet.getRow(iRow);}

					cell = row.createCell(iCell);
					cell.setCellValue(DetalleActivoFijoConstantesFunciones.LABEL_IDCLIENTE);
					iRow++;

					for(DetalleActivoFijo detalleactivofijo:detalleactivofijosSeleccionados) {
						if(!existeFilas) {row = sheet.createRow(iRow);} else {row=sheet.getRow(iRow);}

						cell = row.createCell(iCell);
						cell.setCellValue(detalleactivofijo.getcliente_descripcion());
						iRow++;
					}

					existeFilas=true;
					iCell++;
					break;

				case DetalleActivoFijoConstantesFunciones.LABEL_IDPARTIDAPRESU:
					iRow=0;

					if(!existeFilas) {row = sheet.createRow(iRow);} else {row=sheet.getRow(iRow);}

					cell = row.createCell(iCell);
					cell.setCellValue(DetalleActivoFijoConstantesFunciones.LABEL_IDPARTIDAPRESU);
					iRow++;

					for(DetalleActivoFijo detalleactivofijo:detalleactivofijosSeleccionados) {
						if(!existeFilas) {row = sheet.createRow(iRow);} else {row=sheet.getRow(iRow);}

						cell = row.createCell(iCell);
						cell.setCellValue(detalleactivofijo.getpartidapresu_descripcion());
						iRow++;
					}

					existeFilas=true;
					iCell++;
					break;

				case DetalleActivoFijoConstantesFunciones.LABEL_CODIGO:
					iRow=0;

					if(!existeFilas) {row = sheet.createRow(iRow);} else {row=sheet.getRow(iRow);}

					cell = row.createCell(iCell);
					cell.setCellValue(DetalleActivoFijoConstantesFunciones.LABEL_CODIGO);
					iRow++;

					for(DetalleActivoFijo detalleactivofijo:detalleactivofijosSeleccionados) {
						if(!existeFilas) {row = sheet.createRow(iRow);} else {row=sheet.getRow(iRow);}

						cell = row.createCell(iCell);
						cell.setCellValue(detalleactivofijo.getcodigo());
						iRow++;
					}

					existeFilas=true;
					iCell++;
					break;

				case DetalleActivoFijoConstantesFunciones.LABEL_NOMBRE:
					iRow=0;

					if(!existeFilas) {row = sheet.createRow(iRow);} else {row=sheet.getRow(iRow);}

					cell = row.createCell(iCell);
					cell.setCellValue(DetalleActivoFijoConstantesFunciones.LABEL_NOMBRE);
					iRow++;

					for(DetalleActivoFijo detalleactivofijo:detalleactivofijosSeleccionados) {
						if(!existeFilas) {row = sheet.createRow(iRow);} else {row=sheet.getRow(iRow);}

						cell = row.createCell(iCell);
						cell.setCellValue(detalleactivofijo.getnombre());
						iRow++;
					}

					existeFilas=true;
					iCell++;
					break;

				case DetalleActivoFijoConstantesFunciones.LABEL_SERIE:
					iRow=0;

					if(!existeFilas) {row = sheet.createRow(iRow);} else {row=sheet.getRow(iRow);}

					cell = row.createCell(iCell);
					cell.setCellValue(DetalleActivoFijoConstantesFunciones.LABEL_SERIE);
					iRow++;

					for(DetalleActivoFijo detalleactivofijo:detalleactivofijosSeleccionados) {
						if(!existeFilas) {row = sheet.createRow(iRow);} else {row=sheet.getRow(iRow);}

						cell = row.createCell(iCell);
						cell.setCellValue(detalleactivofijo.getserie());
						iRow++;
					}

					existeFilas=true;
					iCell++;
					break;

				case DetalleActivoFijoConstantesFunciones.LABEL_FECHACOMPRA:
					iRow=0;

					if(!existeFilas) {row = sheet.createRow(iRow);} else {row=sheet.getRow(iRow);}

					cell = row.createCell(iCell);
					cell.setCellValue(DetalleActivoFijoConstantesFunciones.LABEL_FECHACOMPRA);
					iRow++;

					for(DetalleActivoFijo detalleactivofijo:detalleactivofijosSeleccionados) {
						if(!existeFilas) {row = sheet.createRow(iRow);} else {row=sheet.getRow(iRow);}

						cell = row.createCell(iCell);
						cell.setCellValue(detalleactivofijo.getfecha_compra());
						iRow++;
					}

					existeFilas=true;
					iCell++;
					break;

				case DetalleActivoFijoConstantesFunciones.LABEL_FECHAMANTENIMIENTO:
					iRow=0;

					if(!existeFilas) {row = sheet.createRow(iRow);} else {row=sheet.getRow(iRow);}

					cell = row.createCell(iCell);
					cell.setCellValue(DetalleActivoFijoConstantesFunciones.LABEL_FECHAMANTENIMIENTO);
					iRow++;

					for(DetalleActivoFijo detalleactivofijo:detalleactivofijosSeleccionados) {
						if(!existeFilas) {row = sheet.createRow(iRow);} else {row=sheet.getRow(iRow);}

						cell = row.createCell(iCell);
						cell.setCellValue(detalleactivofijo.getfecha_mantenimiento());
						iRow++;
					}

					existeFilas=true;
					iCell++;
					break;

				case DetalleActivoFijoConstantesFunciones.LABEL_FECHACORRECCION:
					iRow=0;

					if(!existeFilas) {row = sheet.createRow(iRow);} else {row=sheet.getRow(iRow);}

					cell = row.createCell(iCell);
					cell.setCellValue(DetalleActivoFijoConstantesFunciones.LABEL_FECHACORRECCION);
					iRow++;

					for(DetalleActivoFijo detalleactivofijo:detalleactivofijosSeleccionados) {
						if(!existeFilas) {row = sheet.createRow(iRow);} else {row=sheet.getRow(iRow);}

						cell = row.createCell(iCell);
						cell.setCellValue(detalleactivofijo.getfecha_correccion());
						iRow++;
					}

					existeFilas=true;
					iCell++;
					break;

				case DetalleActivoFijoConstantesFunciones.LABEL_FECHADEPRECIACION:
					iRow=0;

					if(!existeFilas) {row = sheet.createRow(iRow);} else {row=sheet.getRow(iRow);}

					cell = row.createCell(iCell);
					cell.setCellValue(DetalleActivoFijoConstantesFunciones.LABEL_FECHADEPRECIACION);
					iRow++;

					for(DetalleActivoFijo detalleactivofijo:detalleactivofijosSeleccionados) {
						if(!existeFilas) {row = sheet.createRow(iRow);} else {row=sheet.getRow(iRow);}

						cell = row.createCell(iCell);
						cell.setCellValue(detalleactivofijo.getfecha_depreciacion());
						iRow++;
					}

					existeFilas=true;
					iCell++;
					break;

				case DetalleActivoFijoConstantesFunciones.LABEL_CLAVE:
					iRow=0;

					if(!existeFilas) {row = sheet.createRow(iRow);} else {row=sheet.getRow(iRow);}

					cell = row.createCell(iCell);
					cell.setCellValue(DetalleActivoFijoConstantesFunciones.LABEL_CLAVE);
					iRow++;

					for(DetalleActivoFijo detalleactivofijo:detalleactivofijosSeleccionados) {
						if(!existeFilas) {row = sheet.createRow(iRow);} else {row=sheet.getRow(iRow);}

						cell = row.createCell(iCell);
						cell.setCellValue(detalleactivofijo.getclave());
						iRow++;
					}

					existeFilas=true;
					iCell++;
					break;

				case DetalleActivoFijoConstantesFunciones.LABEL_MARCA:
					iRow=0;

					if(!existeFilas) {row = sheet.createRow(iRow);} else {row=sheet.getRow(iRow);}

					cell = row.createCell(iCell);
					cell.setCellValue(DetalleActivoFijoConstantesFunciones.LABEL_MARCA);
					iRow++;

					for(DetalleActivoFijo detalleactivofijo:detalleactivofijosSeleccionados) {
						if(!existeFilas) {row = sheet.createRow(iRow);} else {row=sheet.getRow(iRow);}

						cell = row.createCell(iCell);
						cell.setCellValue(detalleactivofijo.getmarca());
						iRow++;
					}

					existeFilas=true;
					iCell++;
					break;

				case DetalleActivoFijoConstantesFunciones.LABEL_MODELO:
					iRow=0;

					if(!existeFilas) {row = sheet.createRow(iRow);} else {row=sheet.getRow(iRow);}

					cell = row.createCell(iCell);
					cell.setCellValue(DetalleActivoFijoConstantesFunciones.LABEL_MODELO);
					iRow++;

					for(DetalleActivoFijo detalleactivofijo:detalleactivofijosSeleccionados) {
						if(!existeFilas) {row = sheet.createRow(iRow);} else {row=sheet.getRow(iRow);}

						cell = row.createCell(iCell);
						cell.setCellValue(detalleactivofijo.getmodelo());
						iRow++;
					}

					existeFilas=true;
					iCell++;
					break;

				case DetalleActivoFijoConstantesFunciones.LABEL_COLOR:
					iRow=0;

					if(!existeFilas) {row = sheet.createRow(iRow);} else {row=sheet.getRow(iRow);}

					cell = row.createCell(iCell);
					cell.setCellValue(DetalleActivoFijoConstantesFunciones.LABEL_COLOR);
					iRow++;

					for(DetalleActivoFijo detalleactivofijo:detalleactivofijosSeleccionados) {
						if(!existeFilas) {row = sheet.createRow(iRow);} else {row=sheet.getRow(iRow);}

						cell = row.createCell(iCell);
						cell.setCellValue(detalleactivofijo.getcolor());
						iRow++;
					}

					existeFilas=true;
					iCell++;
					break;

				case DetalleActivoFijoConstantesFunciones.LABEL_FECHA:
					iRow=0;

					if(!existeFilas) {row = sheet.createRow(iRow);} else {row=sheet.getRow(iRow);}

					cell = row.createCell(iCell);
					cell.setCellValue(DetalleActivoFijoConstantesFunciones.LABEL_FECHA);
					iRow++;

					for(DetalleActivoFijo detalleactivofijo:detalleactivofijosSeleccionados) {
						if(!existeFilas) {row = sheet.createRow(iRow);} else {row=sheet.getRow(iRow);}

						cell = row.createCell(iCell);
						cell.setCellValue(detalleactivofijo.getfecha());
						iRow++;
					}

					existeFilas=true;
					iCell++;
					break;

				case DetalleActivoFijoConstantesFunciones.LABEL_VALORUTIL:
					iRow=0;

					if(!existeFilas) {row = sheet.createRow(iRow);} else {row=sheet.getRow(iRow);}

					cell = row.createCell(iCell);
					cell.setCellValue(DetalleActivoFijoConstantesFunciones.LABEL_VALORUTIL);
					iRow++;

					for(DetalleActivoFijo detalleactivofijo:detalleactivofijosSeleccionados) {
						if(!existeFilas) {row = sheet.createRow(iRow);} else {row=sheet.getRow(iRow);}

						cell = row.createCell(iCell);
						cell.setCellValue(detalleactivofijo.getvalor_util());
						iRow++;
					}

					existeFilas=true;
					iCell++;
					break;

				case DetalleActivoFijoConstantesFunciones.LABEL_COSTODECOMPRA:
					iRow=0;

					if(!existeFilas) {row = sheet.createRow(iRow);} else {row=sheet.getRow(iRow);}

					cell = row.createCell(iCell);
					cell.setCellValue(DetalleActivoFijoConstantesFunciones.LABEL_COSTODECOMPRA);
					iRow++;

					for(DetalleActivoFijo detalleactivofijo:detalleactivofijosSeleccionados) {
						if(!existeFilas) {row = sheet.createRow(iRow);} else {row=sheet.getRow(iRow);}

						cell = row.createCell(iCell);
						cell.setCellValue(detalleactivofijo.getcosto_de_compra());
						iRow++;
					}

					existeFilas=true;
					iCell++;
					break;

				case DetalleActivoFijoConstantesFunciones.LABEL_VIDAUTIL:
					iRow=0;

					if(!existeFilas) {row = sheet.createRow(iRow);} else {row=sheet.getRow(iRow);}

					cell = row.createCell(iCell);
					cell.setCellValue(DetalleActivoFijoConstantesFunciones.LABEL_VIDAUTIL);
					iRow++;

					for(DetalleActivoFijo detalleactivofijo:detalleactivofijosSeleccionados) {
						if(!existeFilas) {row = sheet.createRow(iRow);} else {row=sheet.getRow(iRow);}

						cell = row.createCell(iCell);
						cell.setCellValue(detalleactivofijo.getvida_util());
						iRow++;
					}

					existeFilas=true;
					iCell++;
					break;

				case DetalleActivoFijoConstantesFunciones.LABEL_VALORRESIDUAL:
					iRow=0;

					if(!existeFilas) {row = sheet.createRow(iRow);} else {row=sheet.getRow(iRow);}

					cell = row.createCell(iCell);
					cell.setCellValue(DetalleActivoFijoConstantesFunciones.LABEL_VALORRESIDUAL);
					iRow++;

					for(DetalleActivoFijo detalleactivofijo:detalleactivofijosSeleccionados) {
						if(!existeFilas) {row = sheet.createRow(iRow);} else {row=sheet.getRow(iRow);}

						cell = row.createCell(iCell);
						cell.setCellValue(detalleactivofijo.getvalor_residual());
						iRow++;
					}

					existeFilas=true;
					iCell++;
					break;

				case DetalleActivoFijoConstantesFunciones.LABEL_CANTIDAD:
					iRow=0;

					if(!existeFilas) {row = sheet.createRow(iRow);} else {row=sheet.getRow(iRow);}

					cell = row.createCell(iCell);
					cell.setCellValue(DetalleActivoFijoConstantesFunciones.LABEL_CANTIDAD);
					iRow++;

					for(DetalleActivoFijo detalleactivofijo:detalleactivofijosSeleccionados) {
						if(!existeFilas) {row = sheet.createRow(iRow);} else {row=sheet.getRow(iRow);}

						cell = row.createCell(iCell);
						cell.setCellValue(detalleactivofijo.getcantidad());
						iRow++;
					}

					existeFilas=true;
					iCell++;
					break;

				case DetalleActivoFijoConstantesFunciones.LABEL_NOMBREPROPIETARIO:
					iRow=0;

					if(!existeFilas) {row = sheet.createRow(iRow);} else {row=sheet.getRow(iRow);}

					cell = row.createCell(iCell);
					cell.setCellValue(DetalleActivoFijoConstantesFunciones.LABEL_NOMBREPROPIETARIO);
					iRow++;

					for(DetalleActivoFijo detalleactivofijo:detalleactivofijosSeleccionados) {
						if(!existeFilas) {row = sheet.createRow(iRow);} else {row=sheet.getRow(iRow);}

						cell = row.createCell(iCell);
						cell.setCellValue(detalleactivofijo.getnombre_propietario());
						iRow++;
					}

					existeFilas=true;
					iCell++;
					break;

				case DetalleActivoFijoConstantesFunciones.LABEL_RESPONSABLE:
					iRow=0;

					if(!existeFilas) {row = sheet.createRow(iRow);} else {row=sheet.getRow(iRow);}

					cell = row.createCell(iCell);
					cell.setCellValue(DetalleActivoFijoConstantesFunciones.LABEL_RESPONSABLE);
					iRow++;

					for(DetalleActivoFijo detalleactivofijo:detalleactivofijosSeleccionados) {
						if(!existeFilas) {row = sheet.createRow(iRow);} else {row=sheet.getRow(iRow);}

						cell = row.createCell(iCell);
						cell.setCellValue(detalleactivofijo.getresponsable());
						iRow++;
					}

					existeFilas=true;
					iCell++;
					break;

				case DetalleActivoFijoConstantesFunciones.LABEL_PATHFOTO:
					iRow=0;

					if(!existeFilas) {row = sheet.createRow(iRow);} else {row=sheet.getRow(iRow);}

					cell = row.createCell(iCell);
					cell.setCellValue(DetalleActivoFijoConstantesFunciones.LABEL_PATHFOTO);
					iRow++;

					for(DetalleActivoFijo detalleactivofijo:detalleactivofijosSeleccionados) {
						if(!existeFilas) {row = sheet.createRow(iRow);} else {row=sheet.getRow(iRow);}

						cell = row.createCell(iCell);
						cell.setCellValue(detalleactivofijo.getpath_foto());
						iRow++;
					}

					existeFilas=true;
					iCell++;
					break;

				case DetalleActivoFijoConstantesFunciones.LABEL_NUMEROCOMPROBANTE:
					iRow=0;

					if(!existeFilas) {row = sheet.createRow(iRow);} else {row=sheet.getRow(iRow);}

					cell = row.createCell(iCell);
					cell.setCellValue(DetalleActivoFijoConstantesFunciones.LABEL_NUMEROCOMPROBANTE);
					iRow++;

					for(DetalleActivoFijo detalleactivofijo:detalleactivofijosSeleccionados) {
						if(!existeFilas) {row = sheet.createRow(iRow);} else {row=sheet.getRow(iRow);}

						cell = row.createCell(iCell);
						cell.setCellValue(detalleactivofijo.getnumero_comprobante());
						iRow++;
					}

					existeFilas=true;
					iCell++;
					break;

				case DetalleActivoFijoConstantesFunciones.LABEL_REFERENCIA:
					iRow=0;

					if(!existeFilas) {row = sheet.createRow(iRow);} else {row=sheet.getRow(iRow);}

					cell = row.createCell(iCell);
					cell.setCellValue(DetalleActivoFijoConstantesFunciones.LABEL_REFERENCIA);
					iRow++;

					for(DetalleActivoFijo detalleactivofijo:detalleactivofijosSeleccionados) {
						if(!existeFilas) {row = sheet.createRow(iRow);} else {row=sheet.getRow(iRow);}

						cell = row.createCell(iCell);
						cell.setCellValue(detalleactivofijo.getreferencia());
						iRow++;
					}

					existeFilas=true;
					iCell++;
					break;

				case DetalleActivoFijoConstantesFunciones.LABEL_VALORCOTIZACION:
					iRow=0;

					if(!existeFilas) {row = sheet.createRow(iRow);} else {row=sheet.getRow(iRow);}

					cell = row.createCell(iCell);
					cell.setCellValue(DetalleActivoFijoConstantesFunciones.LABEL_VALORCOTIZACION);
					iRow++;

					for(DetalleActivoFijo detalleactivofijo:detalleactivofijosSeleccionados) {
						if(!existeFilas) {row = sheet.createRow(iRow);} else {row=sheet.getRow(iRow);}

						cell = row.createCell(iCell);
						cell.setCellValue(detalleactivofijo.getvalor_cotizacion());
						iRow++;
					}

					existeFilas=true;
					iCell++;
					break;

				case DetalleActivoFijoConstantesFunciones.LABEL_CONPARTES:
					iRow=0;

					if(!existeFilas) {row = sheet.createRow(iRow);} else {row=sheet.getRow(iRow);}

					cell = row.createCell(iCell);
					cell.setCellValue(DetalleActivoFijoConstantesFunciones.LABEL_CONPARTES);
					iRow++;

					for(DetalleActivoFijo detalleactivofijo:detalleactivofijosSeleccionados) {
						if(!existeFilas) {row = sheet.createRow(iRow);} else {row=sheet.getRow(iRow);}

						cell = row.createCell(iCell);
						cell.setCellValue(detalleactivofijo.getcon_partes());
						iRow++;
					}

					existeFilas=true;
					iCell++;
					break;

				case DetalleActivoFijoConstantesFunciones.LABEL_CONGARANTIA:
					iRow=0;

					if(!existeFilas) {row = sheet.createRow(iRow);} else {row=sheet.getRow(iRow);}

					cell = row.createCell(iCell);
					cell.setCellValue(DetalleActivoFijoConstantesFunciones.LABEL_CONGARANTIA);
					iRow++;

					for(DetalleActivoFijo detalleactivofijo:detalleactivofijosSeleccionados) {
						if(!existeFilas) {row = sheet.createRow(iRow);} else {row=sheet.getRow(iRow);}

						cell = row.createCell(iCell);
						cell.setCellValue(detalleactivofijo.getcon_garantia());
						iRow++;
					}

					existeFilas=true;
					iCell++;
					break;

				case DetalleActivoFijoConstantesFunciones.LABEL_CONEXISTENCIA:
					iRow=0;

					if(!existeFilas) {row = sheet.createRow(iRow);} else {row=sheet.getRow(iRow);}

					cell = row.createCell(iCell);
					cell.setCellValue(DetalleActivoFijoConstantesFunciones.LABEL_CONEXISTENCIA);
					iRow++;

					for(DetalleActivoFijo detalleactivofijo:detalleactivofijosSeleccionados) {
						if(!existeFilas) {row = sheet.createRow(iRow);} else {row=sheet.getRow(iRow);}

						cell = row.createCell(iCell);
						cell.setCellValue(detalleactivofijo.getcon_existencia());
						iRow++;
					}

					existeFilas=true;
					iCell++;
					break;

				case DetalleActivoFijoConstantesFunciones.LABEL_FECHABAJA:
					iRow=0;

					if(!existeFilas) {row = sheet.createRow(iRow);} else {row=sheet.getRow(iRow);}

					cell = row.createCell(iCell);
					cell.setCellValue(DetalleActivoFijoConstantesFunciones.LABEL_FECHABAJA);
					iRow++;

					for(DetalleActivoFijo detalleactivofijo:detalleactivofijosSeleccionados) {
						if(!existeFilas) {row = sheet.createRow(iRow);} else {row=sheet.getRow(iRow);}

						cell = row.createCell(iCell);
						cell.setCellValue(detalleactivofijo.getfecha_baja());
						iRow++;
					}

					existeFilas=true;
					iCell++;
					break;

				case DetalleActivoFijoConstantesFunciones.LABEL_PATHFOTO2:
					iRow=0;

					if(!existeFilas) {row = sheet.createRow(iRow);} else {row=sheet.getRow(iRow);}

					cell = row.createCell(iCell);
					cell.setCellValue(DetalleActivoFijoConstantesFunciones.LABEL_PATHFOTO2);
					iRow++;

					for(DetalleActivoFijo detalleactivofijo:detalleactivofijosSeleccionados) {
						if(!existeFilas) {row = sheet.createRow(iRow);} else {row=sheet.getRow(iRow);}

						cell = row.createCell(iCell);
						cell.setCellValue(detalleactivofijo.getpath_foto2());
						iRow++;
					}

					existeFilas=true;
					iCell++;
					break;
					
					default :
						break;
				}
			}
			
			
			//if(conCabecera) {
			//	this.getFilaCabeceraExportarExcelDetalleActivoFijo(row);				
			//	iRow++;
			//}				
			
			//for(DetalleActivoFijo detalleactivofijoAux:detalleactivofijosSeleccionados) {
			//	row = sheet.createRow(iRow);
				
			//	this.getFilaDatosExportarExcelDetalleActivoFijo(detalleactivofijoAux,row);
				
			//	iRow++;
			//}
			
			
			
			fileOutputStream = new FileOutputStream(new File(sPath));
		    
			workbook.write(fileOutputStream);
			
			//fileOutputStream.close();
			
			Constantes2.S_PATH_ULTIMO_ARCHIVO=sPath;
			
			if(this.parametroGeneralUsuario.getcon_mensaje_confirmacion() && !this.detalleactivofijoSessionBean.getEsGuardarRelacionado()) {//Constantes.ISMOSTRARMENSAJESMANTENIMIENTO && 
				JOptionPane.showMessageDialog(this,"EXPORTADO CORRECTAMENTE:"+sPath,"MANTENIMIENTO DE Detalle Activo Fijo",JOptionPane.INFORMATION_MESSAGE);
			}
		} catch (Exception e) {
			throw e;
			
		} finally {			
       		if (fileOutputStream != null) {
				fileOutputStream.close();
			}			
		}				
	}	
	
	
	
	
	public void buscarPorId(Long idActual) throws Exception {    		
		try {
			if(Constantes.ISUSAEJBLOGICLAYER) {
				this.detalleactivofijoLogic.getNewConnexionToDeep("");
			}
			
			this.idActual=idActual;
			this.iNumeroPaginacionPagina=0;
			
			this.procesarBusqueda("PorId");
				    	
			//NO FUNCIONA BINDINGS
			this.inicializarActualizarBindingDetalleActivoFijo(false);
			
			//SI ES MANUAL
			if(DetalleActivoFijoJInternalFrame.ISBINDING_MANUAL) {
				//this.inicializarActualizarBindingManualDetalleActivoFijo();
			}	
			
			if(Constantes.ISUSAEJBLOGICLAYER) {
				this.detalleactivofijoLogic.commitNewConnexionToDeep();
			}
			
		} catch(Exception e) {
			
			if(Constantes.ISUSAEJBLOGICLAYER) {
				this.detalleactivofijoLogic.rollbackNewConnexionToDeep();
			}
			
			FuncionesSwing.manageException(this, e,logger);
			
		} finally {
			if(Constantes.ISUSAEJBLOGICLAYER) {
				this.detalleactivofijoLogic.closeNewConnexionToDeep();
			}
		}
	}
	
	public void jButtonAnterioresDetalleActivoFijoActionPerformed(ActionEvent evt) throws Exception {    		
		try	{
			//this.iNumeroPaginacion-=this.iNumeroPaginacion;
			/*
			if(this.iNumeroPaginacion<0) {
				this.iNumeroPaginacion=0;
			}
			*/
			//this.iNumeroPaginacionPagina=10;			
			
			if(Constantes.ISUSAEJBLOGICLAYER) {
				this.detalleactivofijoLogic.getNewConnexionToDeep("");
			}
			
			this.anteriores();
			
			//NO FUNCIONA BINDINGS
			this.inicializarActualizarBindingDetalleActivoFijo(false);
			
			//SI ES MANUAL
			if(DetalleActivoFijoJInternalFrame.ISBINDING_MANUAL) {
	    		//this.inicializarActualizarBindingManualDetalleActivoFijo();
			}
			
			if(Constantes.ISUSAEJBLOGICLAYER) {
				this.detalleactivofijoLogic.commitNewConnexionToDeep();
			}
			
		} catch(Exception e) {
			if(Constantes.ISUSAEJBLOGICLAYER) {
				this.detalleactivofijoLogic.rollbackNewConnexionToDeep();
			}
			
			FuncionesSwing.manageException(this, e,logger,DetalleActivoFijoConstantesFunciones.CLASSNAME);
		
		} finally {
			if(Constantes.ISUSAEJBLOGICLAYER) {
				this.detalleactivofijoLogic.closeNewConnexionToDeep();
			}
		}
	}
	
	public void jButtonSiguientesDetalleActivoFijoActionPerformed(ActionEvent evt) throws Exception {    		
		try	{
			//this.iNumeroPaginacion+=this.iNumeroPaginacion;
			//this.iNumeroPaginacionPagina=10;			
			
			if(Constantes.ISUSAEJBLOGICLAYER) {
				this.detalleactivofijoLogic.getNewConnexionToDeep("");
			}
			
			this.siguientes();
			
			//NO FUNCIONA BINDINGS
			this.inicializarActualizarBindingDetalleActivoFijo(false);
			
			//SI ES MANUAL
			if(DetalleActivoFijoJInternalFrame.ISBINDING_MANUAL) {
	    		//this.inicializarActualizarBindingManualDetalleActivoFijo();
			}		
			
			if(Constantes.ISUSAEJBLOGICLAYER) {
				this.detalleactivofijoLogic.commitNewConnexionToDeep();
			}
			
		} catch(Exception e) {
			if(Constantes.ISUSAEJBLOGICLAYER) {
				this.detalleactivofijoLogic.rollbackNewConnexionToDeep();
			}
			
			FuncionesSwing.manageException(this, e,logger,DetalleActivoFijoConstantesFunciones.CLASSNAME);
		
		} finally {
			if(Constantes.ISUSAEJBLOGICLAYER) {
				this.detalleactivofijoLogic.closeNewConnexionToDeep();
			}
		}
	}
	
	public void aumentarTamanioFilaNuevaTablaDetalleActivoFijo() throws Exception {		
		Dimension dimensionMinimum=this.jTableDatosDetalleActivoFijo.getMinimumSize();
		Dimension dimensionMaximum=this.jTableDatosDetalleActivoFijo.getMaximumSize();
		Dimension dimensionPreferred=this.jTableDatosDetalleActivoFijo.getPreferredSize();
	
		double iHeightConFilaNueva=dimensionPreferred.getHeight();
		
		iHeightConFilaNueva+=this.jTableDatosDetalleActivoFijo.getRowHeight();
		
		dimensionMinimum.setSize(dimensionMinimum.getWidth(),iHeightConFilaNueva);
		dimensionMaximum.setSize(dimensionMaximum.getWidth(),iHeightConFilaNueva);
		dimensionPreferred.setSize(dimensionPreferred.getWidth(),iHeightConFilaNueva);
		
		this.jTableDatosDetalleActivoFijo.setMinimumSize(dimensionMinimum);
		this.jTableDatosDetalleActivoFijo.setMaximumSize(dimensionMaximum);
		this.jTableDatosDetalleActivoFijo.setPreferredSize(dimensionPreferred);	
	}
	
	public void inicializarActualizarBindingDetalleActivoFijo(Boolean esInicializar) throws Exception {
		this.inicializarActualizarBindingDetalleActivoFijo(esInicializar,true);
	}
	
	public void inicializarActualizarBindingDetalleActivoFijo(Boolean esInicializar,Boolean conTabla) throws Exception {		
		if(conTabla) {
			this.inicializarActualizarBindingTablaDetalleActivoFijo(esInicializar);
		}
		
		this.inicializarActualizarBindingBotonesDetalleActivoFijo(esInicializar);
		
		//FUNCIONALIDAD_RELACIONADO
		if(!this.detalleactivofijoSessionBean.getEsGuardarRelacionado()) {
			try{this.inicializarActualizarBindingBusquedasDetalleActivoFijo(esInicializar);}catch(Exception e){e.printStackTrace();}
			
			//this.inicializarActualizarBindingtiposArchivosReportesAccionesDetalleActivoFijo(esInicializar) ;
			
			this.inicializarActualizarBindingParametrosReportesDetalleActivoFijo(esInicializar) ;
		}
		
		if(esInicializar) {
			if( !DetalleActivoFijoJInternalFrame.ISBINDING_MANUAL_TABLA ||
			   	!DetalleActivoFijoJInternalFrame.ISBINDING_MANUAL) {
			   	
			}
		}
	}
	
	public void inicializarActualizarBindingManualDetalleActivoFijo() throws Exception {		
		//NO SE NECESITA HACER BINDING OTRA VEZ
		//this.inicializarActualizarBindingTablaDetalleActivoFijo();
		
		this.inicializarActualizarBindingBotonesManualDetalleActivoFijo(true);
		
		//FUNCIONALIDAD_RELACIONADO
		if(!this.detalleactivofijoSessionBean.getEsGuardarRelacionado()) {
			
			this.inicializarActualizarBindingBusquedasManualDetalleActivoFijo();			
			
			
			//this.inicializarActualizarBindingtiposArchivosReportesAccionesDetalleActivoFijo() ;
			
			this.inicializarActualizarBindingParametrosReportesPostAccionesManualDetalleActivoFijo(false) ;			
			
		}
	}
	
	public void inicializarActualizarBindingParametrosReportesPostAccionesManualDetalleActivoFijo(Boolean esSetControles) throws Exception {
		try	{					
			if(!esSetControles) {
				this.isSeleccionarTodos=this.jCheckBoxSeleccionarTodosDetalleActivoFijo.isSelected();
				this.isSeleccionados=this.jCheckBoxSeleccionadosDetalleActivoFijo.isSelected();
				
				
				this.conGraficoReporte=this.jCheckBoxConGraficoReporteDetalleActivoFijo.isSelected();															
				
				
				if(this.jInternalFrameDetalleFormDetalleActivoFijo!=null) {
				this.isPostAccionNuevo=this.jInternalFrameDetalleFormDetalleActivoFijo.jCheckBoxPostAccionNuevoDetalleActivoFijo.isSelected();
				this.isPostAccionSinCerrar=this.jInternalFrameDetalleFormDetalleActivoFijo.jCheckBoxPostAccionSinCerrarDetalleActivoFijo.isSelected();
				this.isPostAccionSinMensaje=this.jInternalFrameDetalleFormDetalleActivoFijo.jCheckBoxPostAccionSinMensajeDetalleActivoFijo.isSelected();
				}
			
			} else {
				this.jCheckBoxSeleccionarTodosDetalleActivoFijo.setSelected(this.isSeleccionarTodos);
				this.jCheckBoxSeleccionadosDetalleActivoFijo.setSelected(this.isSeleccionados);
				
				
				this.jCheckBoxConGraficoReporteDetalleActivoFijo.setSelected(this.conGraficoReporte);				
				
				
				if(this.jInternalFrameDetalleFormDetalleActivoFijo!=null) {
				this.jInternalFrameDetalleFormDetalleActivoFijo.jCheckBoxPostAccionNuevoDetalleActivoFijo.setSelected(this.isPostAccionNuevo);
				this.jInternalFrameDetalleFormDetalleActivoFijo.jCheckBoxPostAccionSinCerrarDetalleActivoFijo.setSelected(this.isPostAccionSinCerrar);
				this.jInternalFrameDetalleFormDetalleActivoFijo.jCheckBoxPostAccionSinMensajeDetalleActivoFijo.setSelected(this.isPostAccionSinMensaje);
				}
			}
			
			
			if(this.jComboBoxTiposPaginacionDetalleActivoFijo.getSelectedItem()!=null) {
				this.sTipoPaginacion=((Reporte)this.jComboBoxTiposPaginacionDetalleActivoFijo.getSelectedItem()).getsCodigo();			
			}
			
			
			
			if(this.jInternalFrameDetalleFormDetalleActivoFijo!=null) {
			this.sTipoAccionFormulario=((Reporte)this.jInternalFrameDetalleFormDetalleActivoFijo.jComboBoxTiposAccionesFormularioDetalleActivoFijo.getSelectedItem()).getsCodigo();
			}
			
			
			
			if(!this.conCargarMinimo) {
				this.sTipoArchivoReporte=((Reporte)this.jComboBoxTiposArchivosReportesDetalleActivoFijo.getSelectedItem()).getsCodigo();			
				
				if(this.jInternalFrameReporteDinamicoDetalleActivoFijo!=null) {
					this.sTipoArchivoReporteDinamico=((Reporte)this.jInternalFrameReporteDinamicoDetalleActivoFijo.getjComboBoxTiposArchivosReportesDinamico().getSelectedItem()).getsCodigo();			
				}
				
				this.sTipoRelacion=((Reporte)this.jComboBoxTiposRelacionesDetalleActivoFijo.getSelectedItem()).getsCodigo();
									
				this.sTipoAccion=((Reporte)this.jComboBoxTiposAccionesDetalleActivoFijo.getSelectedItem()).getsCodigo();
													
				this.sTipoSeleccionar=((Reporte)this.jComboBoxTiposSeleccionarDetalleActivoFijo.getSelectedItem()).getsCodigo();
									
				this.sTipoReporte=((Reporte)this.jComboBoxTiposReportesDetalleActivoFijo.getSelectedItem()).getsCodigo();							
					
				if(this.jInternalFrameReporteDinamicoDetalleActivoFijo!=null) {
					this.sTipoReporteDinamico=((Reporte)this.jInternalFrameReporteDinamicoDetalleActivoFijo.getjComboBoxTiposReportesDinamico().getSelectedItem()).getsCodigo();							
				}
				
				this.sTipoGraficoReporte=((Reporte)this.jComboBoxTiposGraficosReportesDetalleActivoFijo.getSelectedItem()).getsCodigo();											
			}			
			
			this.sValorCampoGeneral=this.jTextFieldValorCampoGeneralDetalleActivoFijo.getText();						
			
			
			
		} catch(Exception e) {
			throw e;
		}
	}
	
	public void inicializarActualizarBindingParametrosReportesDetalleActivoFijo(Boolean esInicializar) throws Exception {
		try	{	
			if(DetalleActivoFijoJInternalFrame.ISBINDING_MANUAL) {
				this. inicializarActualizarBindingParametrosReportesPostAccionesManualDetalleActivoFijo(false);
			} else {
			}
		} catch(Exception e) {
			throw e;
		}
	}	
	
	public void inicializarActualizarBindingtiposArchivosReportesAccionesDetalleActivoFijo() throws Exception {
		try	{
			if(DetalleActivoFijoJInternalFrame.ISBINDING_MANUAL) {
				this.inicializarActualizarBindingtiposArchivosReportesAccionesManualDetalleActivoFijo();
			} else {
			}
		} catch(Exception e) {
			throw e;
		}
	}
	
	@SuppressWarnings("unchecked")
	public void inicializarActualizarBindingtiposArchivosReportesAccionesManualFormDetalleDetalleActivoFijo() throws Exception {
		//TIPOS ACCIONES FORMULARIO	
		this.jInternalFrameDetalleFormDetalleActivoFijo.jComboBoxTiposAccionesFormularioDetalleActivoFijo.removeAllItems();
				
		for(Reporte reporte:this.tiposAccionesFormulario) {
			this.jInternalFrameDetalleFormDetalleActivoFijo.jComboBoxTiposAccionesFormularioDetalleActivoFijo.addItem(reporte);
		}
		
		//TIPOS ACCIONES FORMULARIO
	}
	
	@SuppressWarnings("unchecked")
	public void inicializarActualizarBindingtiposArchivosReportesAccionesManualDetalleActivoFijo() throws Exception {
		try	{
			
			//TIPOS ARCHIVOS REPORTES
			this.jComboBoxTiposArchivosReportesDetalleActivoFijo.removeAllItems();
				
			for(Reporte reporte:this.tiposArchivosReportes) {
				this.jComboBoxTiposArchivosReportesDetalleActivoFijo.addItem(reporte);
			}
			
			
				
			//TIPOS REPORTES
			this.jComboBoxTiposReportesDetalleActivoFijo.removeAllItems();
				
			for(Reporte reporte:this.tiposReportes) {
				this.jComboBoxTiposReportesDetalleActivoFijo.addItem(reporte);
			}
			
			
			//TIPOS GRAFICOS REPORTES
			this.jComboBoxTiposGraficosReportesDetalleActivoFijo.removeAllItems();
				
			for(Reporte reporte:this.tiposGraficosReportes) {
				this.jComboBoxTiposGraficosReportesDetalleActivoFijo.addItem(reporte);
			}
			
			
			//TIPOS PAGINACION
			this.jComboBoxTiposPaginacionDetalleActivoFijo.removeAllItems();
				
			for(Reporte reporte:this.tiposPaginacion) {
				this.jComboBoxTiposPaginacionDetalleActivoFijo.addItem(reporte);
			}
			
			
			if(!this.detalleactivofijoSessionBean.getEsGuardarRelacionado()) {
				this.jComboBoxTiposPaginacionDetalleActivoFijo.setSelectedItem(Funciones2.getTipoPaginacionDefecto("NORMAL",this.tiposPaginacion));
			} else {
				this.jComboBoxTiposPaginacionDetalleActivoFijo.setSelectedItem(Funciones2.getTipoPaginacionDefecto("RELACIONADO",this.tiposPaginacion));
			}
				
				
			//TIPOS ACCIONES	
			this.jComboBoxTiposRelacionesDetalleActivoFijo.removeAllItems();
				
			for(Reporte reporte:this.tiposRelaciones) {
				this.jComboBoxTiposRelacionesDetalleActivoFijo.addItem(reporte);
			}
			
			//TIPOS ACCIONES
				
				
			//TIPOS ACCIONES	
			this.jComboBoxTiposAccionesDetalleActivoFijo.removeAllItems();
				
			for(Reporte reporte:this.tiposAcciones) {
				this.jComboBoxTiposAccionesDetalleActivoFijo.addItem(reporte);
			}
			
			//TIPOS ACCIONES			
			
			
			
			//TIPOS ACCIONES FORMULARIO	
			if(this.jInternalFrameDetalleFormDetalleActivoFijo!=null) { //if(this.conCargarFormDetalle) {
				this.jInternalFrameDetalleFormDetalleActivoFijo.jComboBoxTiposAccionesFormularioDetalleActivoFijo.removeAllItems();
				
				for(Reporte reporte:this.tiposAccionesFormulario) {
					this.jInternalFrameDetalleFormDetalleActivoFijo.jComboBoxTiposAccionesFormularioDetalleActivoFijo.addItem(reporte);
				}
				
			}
			//TIPOS ACCIONES FORMULARIO
			
			
			
			//TIPOS SELECCIONAR
			this.jComboBoxTiposSeleccionarDetalleActivoFijo.removeAllItems();
				
			for(Reporte reporte:this.tiposSeleccionar) {
				this.jComboBoxTiposSeleccionarDetalleActivoFijo.addItem(reporte);
			}
			
			
			if(this.tiposSeleccionar!=null && this.tiposSeleccionar.size()>1) {
				this.jComboBoxTiposSeleccionarDetalleActivoFijo.setSelectedIndex(1);
			}
				
			//REPORTE DINAMICO
			this.inicializarActualizarBindingtiposArchivosReportesDinamicoAccionesManualDetalleActivoFijo();
							
			//TIPOS COLUMNAS SELECT
			//TIPOS SELECCIONAR
			
			
		} catch(Exception e) {
			throw e;
		}
	}		
	
	
	@SuppressWarnings("unchecked")
	public void inicializarActualizarBindingtiposArchivosReportesDinamicoAccionesManualDetalleActivoFijo() throws Exception {
		try	{
			DefaultListModel<Reporte> defaultListModel=new DefaultListModel<Reporte>();
			
			
			//TIPOS ARCHIVOS REPORTES DINAMICO
			if(this.jInternalFrameReporteDinamicoDetalleActivoFijo!=null) {
				this.jInternalFrameReporteDinamicoDetalleActivoFijo.getjComboBoxTiposArchivosReportesDinamico().removeAllItems();
					
				for(Reporte reporte:this.tiposArchivosReportesDinamico) {
					this.jInternalFrameReporteDinamicoDetalleActivoFijo.getjComboBoxTiposArchivosReportesDinamico().addItem(reporte);
				}
				
			}
			
			//TIPOS REPORTES DINAMICO
			if(this.jInternalFrameReporteDinamicoDetalleActivoFijo!=null) {
				this.jInternalFrameReporteDinamicoDetalleActivoFijo.getjComboBoxTiposReportesDinamico().removeAllItems();
					
				for(Reporte reporte:this.tiposReportesDinamico) {
					this.jInternalFrameReporteDinamicoDetalleActivoFijo.getjComboBoxTiposReportesDinamico().addItem(reporte);
				}
				
			}
			
			defaultListModel=new DefaultListModel<Reporte>();
			
			if(this.jInternalFrameReporteDinamicoDetalleActivoFijo!=null) {
				
				if(this.jInternalFrameReporteDinamicoDetalleActivoFijo.getjListColumnasSelectReporte()!=null) {
					this.jInternalFrameReporteDinamicoDetalleActivoFijo.getjListColumnasSelectReporte().removeAll();
						
					for(Reporte reporte:this.tiposColumnasSelect) {
						defaultListModel.addElement(reporte);
					}						
						
					this.jInternalFrameReporteDinamicoDetalleActivoFijo.getjListColumnasSelectReporte().setModel(defaultListModel);									
						
				}	
					
				//TIPOS RELACIONES SELECT
				//TIPOS SELECCIONAR
				defaultListModel=new DefaultListModel<Reporte>();
				if(this.jInternalFrameReporteDinamicoDetalleActivoFijo.getjListRelacionesSelectReporte()!=null) {
					this.jInternalFrameReporteDinamicoDetalleActivoFijo.getjListRelacionesSelectReporte().removeAll();
						
					for(Reporte reporte:this.tiposRelacionesSelect) {
						defaultListModel.addElement(reporte);
					}						
						
					this.jInternalFrameReporteDinamicoDetalleActivoFijo.getjListRelacionesSelectReporte().setModel(defaultListModel);									
						
				}	
				
				
				//TIPOS COLUMNAS CATEGORIA DINAMICO
				if(this.jInternalFrameReporteDinamicoDetalleActivoFijo.getjComboBoxColumnaCategoriaGrafico()!=null) {
					this.jInternalFrameReporteDinamicoDetalleActivoFijo.getjComboBoxColumnaCategoriaGrafico().removeAllItems();
						
					ArrayList<Reporte> tiposColumnasCategoria=DetalleActivoFijoConstantesFunciones.getTiposSeleccionarDetalleActivoFijo(true,true,false,true,true);
						
					for(Reporte reporte:tiposColumnasCategoria) {//this.tiposSeleccionar
						this.jInternalFrameReporteDinamicoDetalleActivoFijo.getjComboBoxColumnaCategoriaGrafico().addItem(reporte);
					}
					
				}
					
				//TIPOS COLUMNAS CATEGORIA VALOR DINAMICO
				if(this.jInternalFrameReporteDinamicoDetalleActivoFijo.getjComboBoxColumnaCategoriaValor()!=null) {
					this.jInternalFrameReporteDinamicoDetalleActivoFijo.getjComboBoxColumnaCategoriaValor().removeAllItems();
						
					ArrayList<Reporte> tiposColumnasCategoriaValor=DetalleActivoFijoConstantesFunciones.getTiposSeleccionarDetalleActivoFijo(false,false,true,false,false);
						
					for(Reporte reporte:tiposColumnasCategoriaValor) {//this.tiposSeleccionar
						this.jInternalFrameReporteDinamicoDetalleActivoFijo.getjComboBoxColumnaCategoriaValor().addItem(reporte);
					}
					
				}
					
				//TIPOS COLUMNAS VALOR
				defaultListModel=new DefaultListModel<Reporte>();
					
				if(this.jInternalFrameReporteDinamicoDetalleActivoFijo.getjListColumnasValoresGrafico()!=null) {
					this.jInternalFrameReporteDinamicoDetalleActivoFijo.getjListColumnasValoresGrafico().removeAll();
						
					ArrayList<Reporte> tiposColumnasValor=DetalleActivoFijoConstantesFunciones.getTiposSeleccionarDetalleActivoFijo(false,false,true,false,false);
						
					for(Reporte reporte:tiposColumnasValor) {//this.tiposSeleccionar
						defaultListModel.addElement(reporte);
					}						
						
					this.jInternalFrameReporteDinamicoDetalleActivoFijo.getjListColumnasValoresGrafico().setModel(defaultListModel);									
						
				}
					
				//TIPOS GRAFICOS REPORTES DINAMICOS
				if(this.jInternalFrameReporteDinamicoDetalleActivoFijo.getjComboBoxTiposGraficosReportesDinamico()!=null) {
					this.jInternalFrameReporteDinamicoDetalleActivoFijo.getjComboBoxTiposGraficosReportesDinamico().removeAllItems();
						
					for(Reporte reporte:this.tiposGraficosReportes) {
						this.jInternalFrameReporteDinamicoDetalleActivoFijo.getjComboBoxTiposGraficosReportesDinamico().addItem(reporte);
					}
					
				}
			
			
			}
		} catch(Exception e) {
			throw e;
		}
	}	
	
	
	
	public void inicializarActualizarBindingBusquedasManualDetalleActivoFijo()  throws Exception {				
		//BYDAN_BUSQUEDAS		
		
		if(this.jComboBoxid_clienteFK_IdClienteDetalleActivoFijo.getSelectedItem()!=null){this.id_clienteFK_IdCliente=((Cliente)this.jComboBoxid_clienteFK_IdClienteDetalleActivoFijo.getSelectedItem()).getId();}
		if(this.jComboBoxid_detalle_grupo_activo_fijoFK_IdDetalleGrupoActivoFijoDetalleActivoFijo.getSelectedItem()!=null){this.id_detalle_grupo_activo_fijoFK_IdDetalleGrupoActivoFijo=((DetalleGrupoActivoFijo)this.jComboBoxid_detalle_grupo_activo_fijoFK_IdDetalleGrupoActivoFijoDetalleActivoFijo.getSelectedItem()).getId();}
		if(this.jComboBoxid_estado_activo_fijoFK_IdEstadoActivoFijoDetalleActivoFijo.getSelectedItem()!=null){this.id_estado_activo_fijoFK_IdEstadoActivoFijo=((EstadoActivoFijo)this.jComboBoxid_estado_activo_fijoFK_IdEstadoActivoFijoDetalleActivoFijo.getSelectedItem()).getId();}
		if(this.jComboBoxid_partida_presuFK_IdPartidaPresuDetalleActivoFijo.getSelectedItem()!=null){this.id_partida_presuFK_IdPartidaPresu=((PartidaPresu)this.jComboBoxid_partida_presuFK_IdPartidaPresuDetalleActivoFijo.getSelectedItem()).getId();}
		if(this.jComboBoxid_sub_grupo_activo_fijoFK_IdSubGrupoActivoFijoDetalleActivoFijo.getSelectedItem()!=null){this.id_sub_grupo_activo_fijoFK_IdSubGrupoActivoFijo=((SubGrupoActivoFijo)this.jComboBoxid_sub_grupo_activo_fijoFK_IdSubGrupoActivoFijoDetalleActivoFijo.getSelectedItem()).getId();}
		if(this.jComboBoxid_tipo_activo_fijo_empresaFK_IdTipoActivoFijoEmpresaDetalleActivoFijo.getSelectedItem()!=null){this.id_tipo_activo_fijo_empresaFK_IdTipoActivoFijoEmpresa=((TipoActivoFijoEmpresa)this.jComboBoxid_tipo_activo_fijo_empresaFK_IdTipoActivoFijoEmpresaDetalleActivoFijo.getSelectedItem()).getId();}
		if(this.jComboBoxid_tipo_depreciacion_empresaFK_IdTipoDepreciacionEmpresaDetalleActivoFijo.getSelectedItem()!=null){this.id_tipo_depreciacion_empresaFK_IdTipoDepreciacionEmpresa=((TipoDepreciacionEmpresa)this.jComboBoxid_tipo_depreciacion_empresaFK_IdTipoDepreciacionEmpresaDetalleActivoFijo.getSelectedItem()).getId();}
		if(this.jComboBoxid_tipo_ramo_activo_fijoFK_IdTipoRamoActivoFijoDetalleActivoFijo.getSelectedItem()!=null){this.id_tipo_ramo_activo_fijoFK_IdTipoRamoActivoFijo=((TipoRamoActivoFijo)this.jComboBoxid_tipo_ramo_activo_fijoFK_IdTipoRamoActivoFijoDetalleActivoFijo.getSelectedItem()).getId();}
		
	}
	
	
	
	
	public void inicializarActualizarBindingBusquedasDetalleActivoFijo(Boolean esInicializar) throws Exception {				
		if(DetalleActivoFijoJInternalFrame.ISBINDING_MANUAL) {
			
			this.inicializarActualizarBindingBusquedasManualDetalleActivoFijo();			
			
		} else {
		}
	}		
		
	public void inicializarActualizarBindingTablaDetalleActivoFijo() throws Exception {
		this.inicializarActualizarBindingTablaDetalleActivoFijo(false);
	}
	
	
	public void inicializarActualizarBindingTablaOrderByDetalleActivoFijo() {
		//TABLA OrderBy	
		TableColumn tableColumn=new TableColumn();
		Integer iWidthTableDefinicionOrderBy=0;			
			
		this.jInternalFrameOrderByDetalleActivoFijo.getjTableDatosOrderBy().setModel(new TablaGeneralOrderByModel(this.arrOrderBy));
					
		//DEFINIR RENDERERS OrderBy
		tableColumn=this.jInternalFrameOrderByDetalleActivoFijo.getjTableDatosOrderBy().getColumnModel().getColumn(Funciones2.getColumnIndexByName(this.jInternalFrameOrderByDetalleActivoFijo.getjTableDatosOrderBy(),OrderBy.ISSELECTED));			
		//tableColumn.addPropertyChangeListener(new DetalleActivoFijoPropertyChangeListener());
					
		tableColumn.setPreferredWidth(50); 	 
		tableColumn.setWidth(50); 	 
		tableColumn.setMinWidth(50);
		tableColumn.setMaxWidth(50);
				
		iWidthTableDefinicionOrderBy+=50;
					
		tableColumn=this.jInternalFrameOrderByDetalleActivoFijo.getjTableDatosOrderBy().getColumnModel().getColumn(Funciones2.getColumnIndexByName(this.jInternalFrameOrderByDetalleActivoFijo.getjTableDatosOrderBy(),OrderBy.NOMBRE));
		//tableColumn.addPropertyChangeListener(new DetalleActivoFijoPropertyChangeListener());
					
		tableColumn.setPreferredWidth(150); 	 
		tableColumn.setWidth(150); 	 
		tableColumn.setMinWidth(150);
		tableColumn.setMaxWidth(150);
				
		iWidthTableDefinicionOrderBy+=150;
					
		//tableColumn=this.jTableDatosDetalleActivoFijoOrderBy.getColumnModel().getColumn(Funciones2.getColumnIndexByName(this.jTableDatosDetalleActivoFijoOrderBy,OrderBy.NOMBREDB));			
		////tableColumn.addPropertyChangeListener(new DetalleActivoFijoPropertyChangeListener());
								
		tableColumn=this.jInternalFrameOrderByDetalleActivoFijo.getjTableDatosOrderBy().getColumnModel().getColumn(Funciones2.getColumnIndexByName(this.jInternalFrameOrderByDetalleActivoFijo.getjTableDatosOrderBy(),OrderBy.ESDESC));
		//tableColumn.addPropertyChangeListener(new DetalleActivoFijoPropertyChangeListener());
												
		tableColumn.setPreferredWidth(50); 	 
		tableColumn.setWidth(50); 	 
		tableColumn.setMinWidth(50);
		tableColumn.setMaxWidth(50);
				
		((AbstractTableModel) this.jInternalFrameOrderByDetalleActivoFijo.getjTableDatosOrderBy().getModel()).fireTableDataChanged();
				
		iWidthTableDefinicionOrderBy+=50;
	}
	
	
	
	public void inicializarActualizarBindingTablaDetalleActivoFijo(Boolean esInicializar) throws Exception {
		Boolean isNoExiste=false;
		Integer iCountNumeroColumnasNormal=0;
		Integer iCountNumeroColumnasFk=0;
		
		this.iWidthTableDefinicion=0;
		
		int iSizeTabla=0;
		
		iSizeTabla=this.getSizeTablaDatos();
		
	if(esInicializar || ConstantesSwing.FORZAR_INICIALIZAR_TABLA) {//esInicializar
		//ARCHITECTURE
		if(Constantes.ISUSAEJBLOGICLAYER) {
			isNoExiste=detalleactivofijoLogic.getDetalleActivoFijos().size()==0;
		} else if(Constantes.ISUSAEJBREMOTE || Constantes.ISUSAEJBHOME) {
			isNoExiste=detalleactivofijos.size()==0;
		}
		//ARCHITECTURE
			
		if(isNoExiste) {
			if(this.iNumeroPaginacion-this.iNumeroPaginacion>0) {
				this.iNumeroPaginacion-=this.iNumeroPaginacion;
			}
		}
		
		TableColumn tableColumn=new TableColumn();
		
		if(DetalleActivoFijoJInternalFrame.ISBINDING_MANUAL_TABLA) {
			
			//ARCHITECTURE
			if(Constantes.ISUSAEJBLOGICLAYER) {
				this.jTableDatosDetalleActivoFijo.setModel(new DetalleActivoFijoModel(this.detalleactivofijoLogic.getDetalleActivoFijos(),this));
			} else if(Constantes.ISUSAEJBREMOTE || Constantes.ISUSAEJBHOME ) {
				this.jTableDatosDetalleActivoFijo.setModel(new DetalleActivoFijoModel(this.detalleactivofijos,this));
			}
			//ARCHITECTURE
			
							
			
			
			if(this.jInternalFrameOrderByDetalleActivoFijo!=null && this.jInternalFrameOrderByDetalleActivoFijo.getjTableDatosOrderBy()!=null) {
				this.inicializarActualizarBindingTablaOrderByDetalleActivoFijo();
			}
			
								
			//DEFINIR RENDERERS
			tableColumn=this.jTableDatosDetalleActivoFijo.getColumnModel().getColumn(Funciones2.getColumnIndexByName(this.jTableDatosDetalleActivoFijo,Constantes2.S_SELECCIONAR));
			//tableColumn.addPropertyChangeListener(new DetalleActivoFijoPropertyChangeListener());
			tableColumn.setCellRenderer(new BooleanRenderer(true,"Seleccionar "+DetalleActivoFijoConstantesFunciones.SCLASSWEBTITULO,detalleactivofijoConstantesFunciones.resaltarSeleccionarDetalleActivoFijo,iSizeTabla,true,false,"","",this));
			tableColumn.setCellEditor(new BooleanEditorRenderer(true,"Seleccionar "+DetalleActivoFijoConstantesFunciones.SCLASSWEBTITULO,detalleactivofijoConstantesFunciones.resaltarSeleccionarDetalleActivoFijo,false,"","",this));			
			
			tableColumn.setPreferredWidth(50); 	 
			tableColumn.setWidth(50); 	 
			tableColumn.setMinWidth(50); 
			tableColumn.setMaxWidth(50); 
			
			this.iWidthTableDefinicion+=50;
			
			


			tableColumn=this.jTableDatosDetalleActivoFijo.getColumnModel().getColumn(Funciones2.getColumnIndexByName(this.jTableDatosDetalleActivoFijo,DetalleActivoFijoConstantesFunciones.LABEL_ID));

		if(this.detalleactivofijoConstantesFunciones.mostraridDetalleActivoFijo && Funciones2.permiteMostarParaBusqueda(this.esParaBusquedaForeignKey,DetalleActivoFijoConstantesFunciones.LABEL_ID,false,iCountNumeroColumnasNormal++,iCountNumeroColumnasFk)) {
			tableColumn.setCellRenderer(new TextFieldRenderer(this.detalleactivofijoConstantesFunciones.resaltaridDetalleActivoFijo,this.detalleactivofijoConstantesFunciones.activaridDetalleActivoFijo,iSizeTabla,this,true,"idDetalleActivoFijo","BASICO"));
			tableColumn.setCellEditor(new TextFieldEditorRenderer(this.detalleactivofijoConstantesFunciones.resaltaridDetalleActivoFijo,this.detalleactivofijoConstantesFunciones.activaridDetalleActivoFijo,this,true,"idDetalleActivoFijo","BASICO",false));

			tableColumn.setPreferredWidth(50);
			tableColumn.setWidth(50);
			tableColumn.setMinWidth(50);
			tableColumn.setMaxWidth(50);

			this.iWidthTableDefinicion+=50;
		} else {
			Funciones2.setTableColumnOcultar(tableColumn);
		}


			tableColumn=this.jTableDatosDetalleActivoFijo.getColumnModel().getColumn(Funciones2.getColumnIndexByName(this.jTableDatosDetalleActivoFijo,DetalleActivoFijoConstantesFunciones.LABEL_IDEMPRESA));

		if(this.detalleactivofijoConstantesFunciones.mostrarid_empresaDetalleActivoFijo && Funciones2.permiteMostarParaBusqueda(this.esParaBusquedaForeignKey,DetalleActivoFijoConstantesFunciones.LABEL_IDEMPRESA,true,iCountNumeroColumnasNormal,iCountNumeroColumnasFk++) && Constantes.ISDEVELOPING) {
			tableColumn.setCellRenderer(new EmpresaTableCell(this.empresasForeignKey,this.detalleactivofijoConstantesFunciones.resaltarid_empresaDetalleActivoFijo,this,this.detalleactivofijoConstantesFunciones.activarid_empresaDetalleActivoFijo,iSizeTabla));
			tableColumn.setCellEditor(new EmpresaTableCell(this.empresasForeignKey,this.detalleactivofijoConstantesFunciones.resaltarid_empresaDetalleActivoFijo,this,this.detalleactivofijoConstantesFunciones.activarid_empresaDetalleActivoFijo,false,"id_empresaDetalleActivoFijo","GLOBAL"));

			tableColumn.setPreferredWidth(Constantes.ISWING_ANCHO_COLUMNA + FuncionesSwing.getValorProporcion(Constantes.ISWING_ANCHO_CONTROL,0));
			tableColumn.setWidth(Constantes.ISWING_ANCHO_COLUMNA + FuncionesSwing.getValorProporcion(Constantes.ISWING_ANCHO_CONTROL,0));
			tableColumn.setMinWidth(Constantes.ISWING_ANCHO_COLUMNA + FuncionesSwing.getValorProporcion(Constantes.ISWING_ANCHO_CONTROL,0));
			tableColumn.setMaxWidth(Constantes.ISWING_ANCHO_COLUMNA + FuncionesSwing.getValorProporcion(Constantes.ISWING_ANCHO_CONTROL,0));

			this.iWidthTableDefinicion+=Constantes.ISWING_ANCHO_COLUMNA + FuncionesSwing.getValorProporcion(Constantes.ISWING_ANCHO_CONTROL,0);
			//tableColumn.addPropertyChangeListener(new DetalleActivoFijoPropertyChangeListener());
		} else {
			Funciones2.setTableColumnOcultar(tableColumn);
		}


			tableColumn=this.jTableDatosDetalleActivoFijo.getColumnModel().getColumn(Funciones2.getColumnIndexByName(this.jTableDatosDetalleActivoFijo,DetalleActivoFijoConstantesFunciones.LABEL_IDSUCURSAL));

		if(this.detalleactivofijoConstantesFunciones.mostrarid_sucursalDetalleActivoFijo && Funciones2.permiteMostarParaBusqueda(this.esParaBusquedaForeignKey,DetalleActivoFijoConstantesFunciones.LABEL_IDSUCURSAL,true,iCountNumeroColumnasNormal,iCountNumeroColumnasFk++) && Constantes.ISDEVELOPING) {
			tableColumn.setCellRenderer(new SucursalTableCell(this.sucursalsForeignKey,this.detalleactivofijoConstantesFunciones.resaltarid_sucursalDetalleActivoFijo,this,this.detalleactivofijoConstantesFunciones.activarid_sucursalDetalleActivoFijo,iSizeTabla));
			tableColumn.setCellEditor(new SucursalTableCell(this.sucursalsForeignKey,this.detalleactivofijoConstantesFunciones.resaltarid_sucursalDetalleActivoFijo,this,this.detalleactivofijoConstantesFunciones.activarid_sucursalDetalleActivoFijo,false,"id_sucursalDetalleActivoFijo","GLOBAL"));

			tableColumn.setPreferredWidth(Constantes.ISWING_ANCHO_COLUMNA + FuncionesSwing.getValorProporcion(Constantes.ISWING_ANCHO_CONTROL,0));
			tableColumn.setWidth(Constantes.ISWING_ANCHO_COLUMNA + FuncionesSwing.getValorProporcion(Constantes.ISWING_ANCHO_CONTROL,0));
			tableColumn.setMinWidth(Constantes.ISWING_ANCHO_COLUMNA + FuncionesSwing.getValorProporcion(Constantes.ISWING_ANCHO_CONTROL,0));
			tableColumn.setMaxWidth(Constantes.ISWING_ANCHO_COLUMNA + FuncionesSwing.getValorProporcion(Constantes.ISWING_ANCHO_CONTROL,0));

			this.iWidthTableDefinicion+=Constantes.ISWING_ANCHO_COLUMNA + FuncionesSwing.getValorProporcion(Constantes.ISWING_ANCHO_CONTROL,0);
			//tableColumn.addPropertyChangeListener(new DetalleActivoFijoPropertyChangeListener());
		} else {
			Funciones2.setTableColumnOcultar(tableColumn);
		}


			tableColumn=this.jTableDatosDetalleActivoFijo.getColumnModel().getColumn(Funciones2.getColumnIndexByName(this.jTableDatosDetalleActivoFijo,DetalleActivoFijoConstantesFunciones.LABEL_IDDETALLEGRUPOACTIVOFIJO));

		if(this.detalleactivofijoConstantesFunciones.mostrarid_detalle_grupo_activo_fijoDetalleActivoFijo && Funciones2.permiteMostarParaBusqueda(this.esParaBusquedaForeignKey,DetalleActivoFijoConstantesFunciones.LABEL_IDDETALLEGRUPOACTIVOFIJO,true,iCountNumeroColumnasNormal,iCountNumeroColumnasFk++)) {
			tableColumn.setCellRenderer(new DetalleGrupoActivoFijoTableCell(this.detallegrupoactivofijosForeignKey,this.detalleactivofijoConstantesFunciones.resaltarid_detalle_grupo_activo_fijoDetalleActivoFijo,this,this.detalleactivofijoConstantesFunciones.activarid_detalle_grupo_activo_fijoDetalleActivoFijo,iSizeTabla));
			tableColumn.setCellEditor(new DetalleGrupoActivoFijoTableCell(this.detallegrupoactivofijosForeignKey,this.detalleactivofijoConstantesFunciones.resaltarid_detalle_grupo_activo_fijoDetalleActivoFijo,this,this.detalleactivofijoConstantesFunciones.activarid_detalle_grupo_activo_fijoDetalleActivoFijo,true,"id_detalle_grupo_activo_fijoDetalleActivoFijo","BASICO-CON_EVENT_CHANGE"));

			tableColumn.setPreferredWidth(Constantes.ISWING_ANCHO_COLUMNA + FuncionesSwing.getValorProporcion(Constantes.ISWING_ANCHO_CONTROL,0));
			tableColumn.setWidth(Constantes.ISWING_ANCHO_COLUMNA + FuncionesSwing.getValorProporcion(Constantes.ISWING_ANCHO_CONTROL,0));
			tableColumn.setMinWidth(Constantes.ISWING_ANCHO_COLUMNA + FuncionesSwing.getValorProporcion(Constantes.ISWING_ANCHO_CONTROL,0));
			tableColumn.setMaxWidth(Constantes.ISWING_ANCHO_COLUMNA + FuncionesSwing.getValorProporcion(Constantes.ISWING_ANCHO_CONTROL,0));

			this.iWidthTableDefinicion+=Constantes.ISWING_ANCHO_COLUMNA + FuncionesSwing.getValorProporcion(Constantes.ISWING_ANCHO_CONTROL,0);
			//tableColumn.addPropertyChangeListener(new DetalleActivoFijoPropertyChangeListener());
		} else {
			Funciones2.setTableColumnOcultar(tableColumn);
		}


			tableColumn=this.jTableDatosDetalleActivoFijo.getColumnModel().getColumn(Funciones2.getColumnIndexByName(this.jTableDatosDetalleActivoFijo,DetalleActivoFijoConstantesFunciones.LABEL_IDSUBGRUPOACTIVOFIJO));

		if(this.detalleactivofijoConstantesFunciones.mostrarid_sub_grupo_activo_fijoDetalleActivoFijo && Funciones2.permiteMostarParaBusqueda(this.esParaBusquedaForeignKey,DetalleActivoFijoConstantesFunciones.LABEL_IDSUBGRUPOACTIVOFIJO,true,iCountNumeroColumnasNormal,iCountNumeroColumnasFk++)) {
			tableColumn.setCellRenderer(new SubGrupoActivoFijoTableCell(this.subgrupoactivofijosForeignKey,this.detalleactivofijoConstantesFunciones.resaltarid_sub_grupo_activo_fijoDetalleActivoFijo,this,this.detalleactivofijoConstantesFunciones.activarid_sub_grupo_activo_fijoDetalleActivoFijo,iSizeTabla));
			tableColumn.setCellEditor(new SubGrupoActivoFijoTableCell(this.subgrupoactivofijosForeignKey,this.detalleactivofijoConstantesFunciones.resaltarid_sub_grupo_activo_fijoDetalleActivoFijo,this,this.detalleactivofijoConstantesFunciones.activarid_sub_grupo_activo_fijoDetalleActivoFijo,true,"id_sub_grupo_activo_fijoDetalleActivoFijo","BASICO"));

			tableColumn.setPreferredWidth(Constantes.ISWING_ANCHO_COLUMNA + FuncionesSwing.getValorProporcion(Constantes.ISWING_ANCHO_CONTROL,0));
			tableColumn.setWidth(Constantes.ISWING_ANCHO_COLUMNA + FuncionesSwing.getValorProporcion(Constantes.ISWING_ANCHO_CONTROL,0));
			tableColumn.setMinWidth(Constantes.ISWING_ANCHO_COLUMNA + FuncionesSwing.getValorProporcion(Constantes.ISWING_ANCHO_CONTROL,0));
			tableColumn.setMaxWidth(Constantes.ISWING_ANCHO_COLUMNA + FuncionesSwing.getValorProporcion(Constantes.ISWING_ANCHO_CONTROL,0));

			this.iWidthTableDefinicion+=Constantes.ISWING_ANCHO_COLUMNA + FuncionesSwing.getValorProporcion(Constantes.ISWING_ANCHO_CONTROL,0);
			//tableColumn.addPropertyChangeListener(new DetalleActivoFijoPropertyChangeListener());
		} else {
			Funciones2.setTableColumnOcultar(tableColumn);
		}


			tableColumn=this.jTableDatosDetalleActivoFijo.getColumnModel().getColumn(Funciones2.getColumnIndexByName(this.jTableDatosDetalleActivoFijo,DetalleActivoFijoConstantesFunciones.LABEL_IDTIPORAMOACTIVOFIJO));

		if(this.detalleactivofijoConstantesFunciones.mostrarid_tipo_ramo_activo_fijoDetalleActivoFijo && Funciones2.permiteMostarParaBusqueda(this.esParaBusquedaForeignKey,DetalleActivoFijoConstantesFunciones.LABEL_IDTIPORAMOACTIVOFIJO,true,iCountNumeroColumnasNormal,iCountNumeroColumnasFk++)) {
			tableColumn.setCellRenderer(new TipoRamoActivoFijoTableCell(this.tiporamoactivofijosForeignKey,this.detalleactivofijoConstantesFunciones.resaltarid_tipo_ramo_activo_fijoDetalleActivoFijo,this,this.detalleactivofijoConstantesFunciones.activarid_tipo_ramo_activo_fijoDetalleActivoFijo,iSizeTabla));
			tableColumn.setCellEditor(new TipoRamoActivoFijoTableCell(this.tiporamoactivofijosForeignKey,this.detalleactivofijoConstantesFunciones.resaltarid_tipo_ramo_activo_fijoDetalleActivoFijo,this,this.detalleactivofijoConstantesFunciones.activarid_tipo_ramo_activo_fijoDetalleActivoFijo,true,"id_tipo_ramo_activo_fijoDetalleActivoFijo","BASICO"));

			tableColumn.setPreferredWidth(Constantes.ISWING_ANCHO_COLUMNA + FuncionesSwing.getValorProporcion(Constantes.ISWING_ANCHO_CONTROL,0));
			tableColumn.setWidth(Constantes.ISWING_ANCHO_COLUMNA + FuncionesSwing.getValorProporcion(Constantes.ISWING_ANCHO_CONTROL,0));
			tableColumn.setMinWidth(Constantes.ISWING_ANCHO_COLUMNA + FuncionesSwing.getValorProporcion(Constantes.ISWING_ANCHO_CONTROL,0));
			tableColumn.setMaxWidth(Constantes.ISWING_ANCHO_COLUMNA + FuncionesSwing.getValorProporcion(Constantes.ISWING_ANCHO_CONTROL,0));

			this.iWidthTableDefinicion+=Constantes.ISWING_ANCHO_COLUMNA + FuncionesSwing.getValorProporcion(Constantes.ISWING_ANCHO_CONTROL,0);
			//tableColumn.addPropertyChangeListener(new DetalleActivoFijoPropertyChangeListener());
		} else {
			Funciones2.setTableColumnOcultar(tableColumn);
		}


			tableColumn=this.jTableDatosDetalleActivoFijo.getColumnModel().getColumn(Funciones2.getColumnIndexByName(this.jTableDatosDetalleActivoFijo,DetalleActivoFijoConstantesFunciones.LABEL_IDTIPOACTIVOFIJOEMPRESA));

		if(this.detalleactivofijoConstantesFunciones.mostrarid_tipo_activo_fijo_empresaDetalleActivoFijo && Funciones2.permiteMostarParaBusqueda(this.esParaBusquedaForeignKey,DetalleActivoFijoConstantesFunciones.LABEL_IDTIPOACTIVOFIJOEMPRESA,true,iCountNumeroColumnasNormal,iCountNumeroColumnasFk++)) {
			tableColumn.setCellRenderer(new TipoActivoFijoEmpresaTableCell(this.tipoactivofijoempresasForeignKey,this.detalleactivofijoConstantesFunciones.resaltarid_tipo_activo_fijo_empresaDetalleActivoFijo,this,this.detalleactivofijoConstantesFunciones.activarid_tipo_activo_fijo_empresaDetalleActivoFijo,iSizeTabla));
			tableColumn.setCellEditor(new TipoActivoFijoEmpresaTableCell(this.tipoactivofijoempresasForeignKey,this.detalleactivofijoConstantesFunciones.resaltarid_tipo_activo_fijo_empresaDetalleActivoFijo,this,this.detalleactivofijoConstantesFunciones.activarid_tipo_activo_fijo_empresaDetalleActivoFijo,true,"id_tipo_activo_fijo_empresaDetalleActivoFijo","BASICO"));

			tableColumn.setPreferredWidth(Constantes.ISWING_ANCHO_COLUMNA + FuncionesSwing.getValorProporcion(Constantes.ISWING_ANCHO_CONTROL,0));
			tableColumn.setWidth(Constantes.ISWING_ANCHO_COLUMNA + FuncionesSwing.getValorProporcion(Constantes.ISWING_ANCHO_CONTROL,0));
			tableColumn.setMinWidth(Constantes.ISWING_ANCHO_COLUMNA + FuncionesSwing.getValorProporcion(Constantes.ISWING_ANCHO_CONTROL,0));
			tableColumn.setMaxWidth(Constantes.ISWING_ANCHO_COLUMNA + FuncionesSwing.getValorProporcion(Constantes.ISWING_ANCHO_CONTROL,0));

			this.iWidthTableDefinicion+=Constantes.ISWING_ANCHO_COLUMNA + FuncionesSwing.getValorProporcion(Constantes.ISWING_ANCHO_CONTROL,0);
			//tableColumn.addPropertyChangeListener(new DetalleActivoFijoPropertyChangeListener());
		} else {
			Funciones2.setTableColumnOcultar(tableColumn);
		}


			tableColumn=this.jTableDatosDetalleActivoFijo.getColumnModel().getColumn(Funciones2.getColumnIndexByName(this.jTableDatosDetalleActivoFijo,DetalleActivoFijoConstantesFunciones.LABEL_IDTIPODEPRECIACIONEMPRESA));

		if(this.detalleactivofijoConstantesFunciones.mostrarid_tipo_depreciacion_empresaDetalleActivoFijo && Funciones2.permiteMostarParaBusqueda(this.esParaBusquedaForeignKey,DetalleActivoFijoConstantesFunciones.LABEL_IDTIPODEPRECIACIONEMPRESA,true,iCountNumeroColumnasNormal,iCountNumeroColumnasFk++)) {
			tableColumn.setCellRenderer(new TipoDepreciacionEmpresaTableCell(this.tipodepreciacionempresasForeignKey,this.detalleactivofijoConstantesFunciones.resaltarid_tipo_depreciacion_empresaDetalleActivoFijo,this,this.detalleactivofijoConstantesFunciones.activarid_tipo_depreciacion_empresaDetalleActivoFijo,iSizeTabla));
			tableColumn.setCellEditor(new TipoDepreciacionEmpresaTableCell(this.tipodepreciacionempresasForeignKey,this.detalleactivofijoConstantesFunciones.resaltarid_tipo_depreciacion_empresaDetalleActivoFijo,this,this.detalleactivofijoConstantesFunciones.activarid_tipo_depreciacion_empresaDetalleActivoFijo,true,"id_tipo_depreciacion_empresaDetalleActivoFijo","BASICO"));

			tableColumn.setPreferredWidth(Constantes.ISWING_ANCHO_COLUMNA + FuncionesSwing.getValorProporcion(Constantes.ISWING_ANCHO_CONTROL,0));
			tableColumn.setWidth(Constantes.ISWING_ANCHO_COLUMNA + FuncionesSwing.getValorProporcion(Constantes.ISWING_ANCHO_CONTROL,0));
			tableColumn.setMinWidth(Constantes.ISWING_ANCHO_COLUMNA + FuncionesSwing.getValorProporcion(Constantes.ISWING_ANCHO_CONTROL,0));
			tableColumn.setMaxWidth(Constantes.ISWING_ANCHO_COLUMNA + FuncionesSwing.getValorProporcion(Constantes.ISWING_ANCHO_CONTROL,0));

			this.iWidthTableDefinicion+=Constantes.ISWING_ANCHO_COLUMNA + FuncionesSwing.getValorProporcion(Constantes.ISWING_ANCHO_CONTROL,0);
			//tableColumn.addPropertyChangeListener(new DetalleActivoFijoPropertyChangeListener());
		} else {
			Funciones2.setTableColumnOcultar(tableColumn);
		}


			tableColumn=this.jTableDatosDetalleActivoFijo.getColumnModel().getColumn(Funciones2.getColumnIndexByName(this.jTableDatosDetalleActivoFijo,DetalleActivoFijoConstantesFunciones.LABEL_IDESTADOACTIVOFIJO));

		if(this.detalleactivofijoConstantesFunciones.mostrarid_estado_activo_fijoDetalleActivoFijo && Funciones2.permiteMostarParaBusqueda(this.esParaBusquedaForeignKey,DetalleActivoFijoConstantesFunciones.LABEL_IDESTADOACTIVOFIJO,true,iCountNumeroColumnasNormal,iCountNumeroColumnasFk++)) {
			tableColumn.setCellRenderer(new EstadoActivoFijoTableCell(this.estadoactivofijosForeignKey,this.detalleactivofijoConstantesFunciones.resaltarid_estado_activo_fijoDetalleActivoFijo,this,this.detalleactivofijoConstantesFunciones.activarid_estado_activo_fijoDetalleActivoFijo,iSizeTabla));
			tableColumn.setCellEditor(new EstadoActivoFijoTableCell(this.estadoactivofijosForeignKey,this.detalleactivofijoConstantesFunciones.resaltarid_estado_activo_fijoDetalleActivoFijo,this,this.detalleactivofijoConstantesFunciones.activarid_estado_activo_fijoDetalleActivoFijo,true,"id_estado_activo_fijoDetalleActivoFijo","BASICO"));

			tableColumn.setPreferredWidth(Constantes.ISWING_ANCHO_COLUMNA + FuncionesSwing.getValorProporcion(Constantes.ISWING_ANCHO_CONTROL,0));
			tableColumn.setWidth(Constantes.ISWING_ANCHO_COLUMNA + FuncionesSwing.getValorProporcion(Constantes.ISWING_ANCHO_CONTROL,0));
			tableColumn.setMinWidth(Constantes.ISWING_ANCHO_COLUMNA + FuncionesSwing.getValorProporcion(Constantes.ISWING_ANCHO_CONTROL,0));
			tableColumn.setMaxWidth(Constantes.ISWING_ANCHO_COLUMNA + FuncionesSwing.getValorProporcion(Constantes.ISWING_ANCHO_CONTROL,0));

			this.iWidthTableDefinicion+=Constantes.ISWING_ANCHO_COLUMNA + FuncionesSwing.getValorProporcion(Constantes.ISWING_ANCHO_CONTROL,0);
			//tableColumn.addPropertyChangeListener(new DetalleActivoFijoPropertyChangeListener());
		} else {
			Funciones2.setTableColumnOcultar(tableColumn);
		}


			tableColumn=this.jTableDatosDetalleActivoFijo.getColumnModel().getColumn(Funciones2.getColumnIndexByName(this.jTableDatosDetalleActivoFijo,DetalleActivoFijoConstantesFunciones.LABEL_IDCLIENTE));

		if(this.detalleactivofijoConstantesFunciones.mostrarid_clienteDetalleActivoFijo && Funciones2.permiteMostarParaBusqueda(this.esParaBusquedaForeignKey,DetalleActivoFijoConstantesFunciones.LABEL_IDCLIENTE,true,iCountNumeroColumnasNormal,iCountNumeroColumnasFk++)) {
			tableColumn.setCellRenderer(new ClienteTableCell(this.clientesForeignKey,this.detalleactivofijoConstantesFunciones.resaltarid_clienteDetalleActivoFijo,this,this.detalleactivofijoConstantesFunciones.activarid_clienteDetalleActivoFijo,iSizeTabla));
			tableColumn.setCellEditor(new ClienteTableCell(this.clientesForeignKey,this.detalleactivofijoConstantesFunciones.resaltarid_clienteDetalleActivoFijo,this,this.detalleactivofijoConstantesFunciones.activarid_clienteDetalleActivoFijo,true,"id_clienteDetalleActivoFijo","CON_BUSQUEDA"));

			tableColumn.setPreferredWidth(Constantes.ISWING_ANCHO_COLUMNA + FuncionesSwing.getValorProporcion(Constantes.ISWING_ANCHO_CONTROL,75));
			tableColumn.setWidth(Constantes.ISWING_ANCHO_COLUMNA + FuncionesSwing.getValorProporcion(Constantes.ISWING_ANCHO_CONTROL,75));
			tableColumn.setMinWidth(Constantes.ISWING_ANCHO_COLUMNA + FuncionesSwing.getValorProporcion(Constantes.ISWING_ANCHO_CONTROL,75));
			tableColumn.setMaxWidth(Constantes.ISWING_ANCHO_COLUMNA + FuncionesSwing.getValorProporcion(Constantes.ISWING_ANCHO_CONTROL,75));

			this.iWidthTableDefinicion+=Constantes.ISWING_ANCHO_COLUMNA + FuncionesSwing.getValorProporcion(Constantes.ISWING_ANCHO_CONTROL,75);
			//tableColumn.addPropertyChangeListener(new DetalleActivoFijoPropertyChangeListener());
		} else {
			Funciones2.setTableColumnOcultar(tableColumn);
		}


			tableColumn=this.jTableDatosDetalleActivoFijo.getColumnModel().getColumn(Funciones2.getColumnIndexByName(this.jTableDatosDetalleActivoFijo,DetalleActivoFijoConstantesFunciones.LABEL_IDPARTIDAPRESU));

		if(this.detalleactivofijoConstantesFunciones.mostrarid_partida_presuDetalleActivoFijo && Funciones2.permiteMostarParaBusqueda(this.esParaBusquedaForeignKey,DetalleActivoFijoConstantesFunciones.LABEL_IDPARTIDAPRESU,true,iCountNumeroColumnasNormal,iCountNumeroColumnasFk++)) {
			tableColumn.setCellRenderer(new PartidaPresuTableCell(this.partidapresusForeignKey,this.detalleactivofijoConstantesFunciones.resaltarid_partida_presuDetalleActivoFijo,this,this.detalleactivofijoConstantesFunciones.activarid_partida_presuDetalleActivoFijo,iSizeTabla));
			tableColumn.setCellEditor(new PartidaPresuTableCell(this.partidapresusForeignKey,this.detalleactivofijoConstantesFunciones.resaltarid_partida_presuDetalleActivoFijo,this,this.detalleactivofijoConstantesFunciones.activarid_partida_presuDetalleActivoFijo,true,"id_partida_presuDetalleActivoFijo","BASICO"));

			tableColumn.setPreferredWidth(Constantes.ISWING_ANCHO_COLUMNA + FuncionesSwing.getValorProporcion(Constantes.ISWING_ANCHO_CONTROL,0));
			tableColumn.setWidth(Constantes.ISWING_ANCHO_COLUMNA + FuncionesSwing.getValorProporcion(Constantes.ISWING_ANCHO_CONTROL,0));
			tableColumn.setMinWidth(Constantes.ISWING_ANCHO_COLUMNA + FuncionesSwing.getValorProporcion(Constantes.ISWING_ANCHO_CONTROL,0));
			tableColumn.setMaxWidth(Constantes.ISWING_ANCHO_COLUMNA + FuncionesSwing.getValorProporcion(Constantes.ISWING_ANCHO_CONTROL,0));

			this.iWidthTableDefinicion+=Constantes.ISWING_ANCHO_COLUMNA + FuncionesSwing.getValorProporcion(Constantes.ISWING_ANCHO_CONTROL,0);
			//tableColumn.addPropertyChangeListener(new DetalleActivoFijoPropertyChangeListener());
		} else {
			Funciones2.setTableColumnOcultar(tableColumn);
		}


			tableColumn=this.jTableDatosDetalleActivoFijo.getColumnModel().getColumn(Funciones2.getColumnIndexByName(this.jTableDatosDetalleActivoFijo,DetalleActivoFijoConstantesFunciones.LABEL_CODIGO));

		if(this.detalleactivofijoConstantesFunciones.mostrarcodigoDetalleActivoFijo && Funciones2.permiteMostarParaBusqueda(this.esParaBusquedaForeignKey,DetalleActivoFijoConstantesFunciones.LABEL_CODIGO,false,iCountNumeroColumnasNormal++,iCountNumeroColumnasFk)) {
			tableColumn.setCellRenderer(new LabelRenderer(this.detalleactivofijoConstantesFunciones.resaltarcodigoDetalleActivoFijo,this.detalleactivofijoConstantesFunciones.activarcodigoDetalleActivoFijo,iSizeTabla,this,true,"codigoDetalleActivoFijo","BASICO"));
			tableColumn.setCellEditor(new TextFieldEditorRenderer(this.detalleactivofijoConstantesFunciones.resaltarcodigoDetalleActivoFijo,this.detalleactivofijoConstantesFunciones.activarcodigoDetalleActivoFijo,this,true,"codigoDetalleActivoFijo","BASICO",false));

			tableColumn.setPreferredWidth(Constantes.ISWING_ANCHO_COLUMNA + FuncionesSwing.getValorProporcion(Constantes.ISWING_ANCHO_CONTROL,0));
			tableColumn.setWidth(Constantes.ISWING_ANCHO_COLUMNA + FuncionesSwing.getValorProporcion(Constantes.ISWING_ANCHO_CONTROL,0));
			tableColumn.setMinWidth(Constantes.ISWING_ANCHO_COLUMNA + FuncionesSwing.getValorProporcion(Constantes.ISWING_ANCHO_CONTROL,0));
			tableColumn.setMaxWidth(Constantes.ISWING_ANCHO_COLUMNA + FuncionesSwing.getValorProporcion(Constantes.ISWING_ANCHO_CONTROL,0));

			this.iWidthTableDefinicion+=Constantes.ISWING_ANCHO_COLUMNA + FuncionesSwing.getValorProporcion(Constantes.ISWING_ANCHO_CONTROL,0);
			//tableColumn.addPropertyChangeListener(new DetalleActivoFijoPropertyChangeListener());
		} else {
			Funciones2.setTableColumnOcultar(tableColumn);
		}


			tableColumn=this.jTableDatosDetalleActivoFijo.getColumnModel().getColumn(Funciones2.getColumnIndexByName(this.jTableDatosDetalleActivoFijo,DetalleActivoFijoConstantesFunciones.LABEL_NOMBRE));

		if(this.detalleactivofijoConstantesFunciones.mostrarnombreDetalleActivoFijo && Funciones2.permiteMostarParaBusqueda(this.esParaBusquedaForeignKey,DetalleActivoFijoConstantesFunciones.LABEL_NOMBRE,false,iCountNumeroColumnasNormal++,iCountNumeroColumnasFk)) {
			tableColumn.setCellRenderer(new LabelRenderer(this.detalleactivofijoConstantesFunciones.resaltarnombreDetalleActivoFijo,this.detalleactivofijoConstantesFunciones.activarnombreDetalleActivoFijo,iSizeTabla,this,true,"nombreDetalleActivoFijo","BASICO"));
			tableColumn.setCellEditor(new TextFieldEditorRenderer(this.detalleactivofijoConstantesFunciones.resaltarnombreDetalleActivoFijo,this.detalleactivofijoConstantesFunciones.activarnombreDetalleActivoFijo,this,true,"nombreDetalleActivoFijo","BASICO",false));

			tableColumn.setPreferredWidth(Constantes.ISWING_ANCHO_COLUMNA + FuncionesSwing.getValorProporcion(Constantes.ISWING_ANCHO_CONTROL,0));
			tableColumn.setWidth(Constantes.ISWING_ANCHO_COLUMNA + FuncionesSwing.getValorProporcion(Constantes.ISWING_ANCHO_CONTROL,0));
			tableColumn.setMinWidth(Constantes.ISWING_ANCHO_COLUMNA + FuncionesSwing.getValorProporcion(Constantes.ISWING_ANCHO_CONTROL,0));
			tableColumn.setMaxWidth(Constantes.ISWING_ANCHO_COLUMNA + FuncionesSwing.getValorProporcion(Constantes.ISWING_ANCHO_CONTROL,0));

			this.iWidthTableDefinicion+=Constantes.ISWING_ANCHO_COLUMNA + FuncionesSwing.getValorProporcion(Constantes.ISWING_ANCHO_CONTROL,0);
			//tableColumn.addPropertyChangeListener(new DetalleActivoFijoPropertyChangeListener());
		} else {
			Funciones2.setTableColumnOcultar(tableColumn);
		}


			tableColumn=this.jTableDatosDetalleActivoFijo.getColumnModel().getColumn(Funciones2.getColumnIndexByName(this.jTableDatosDetalleActivoFijo,DetalleActivoFijoConstantesFunciones.LABEL_SERIE));

		if(this.detalleactivofijoConstantesFunciones.mostrarserieDetalleActivoFijo && Funciones2.permiteMostarParaBusqueda(this.esParaBusquedaForeignKey,DetalleActivoFijoConstantesFunciones.LABEL_SERIE,false,iCountNumeroColumnasNormal++,iCountNumeroColumnasFk)) {
			tableColumn.setCellRenderer(new LabelRenderer(this.detalleactivofijoConstantesFunciones.resaltarserieDetalleActivoFijo,this.detalleactivofijoConstantesFunciones.activarserieDetalleActivoFijo,iSizeTabla,this,true,"serieDetalleActivoFijo","BASICO"));
			tableColumn.setCellEditor(new TextFieldEditorRenderer(this.detalleactivofijoConstantesFunciones.resaltarserieDetalleActivoFijo,this.detalleactivofijoConstantesFunciones.activarserieDetalleActivoFijo,this,true,"serieDetalleActivoFijo","BASICO",false));

			tableColumn.setPreferredWidth(Constantes.ISWING_ANCHO_COLUMNA + FuncionesSwing.getValorProporcion(Constantes.ISWING_ANCHO_CONTROL,0));
			tableColumn.setWidth(Constantes.ISWING_ANCHO_COLUMNA + FuncionesSwing.getValorProporcion(Constantes.ISWING_ANCHO_CONTROL,0));
			tableColumn.setMinWidth(Constantes.ISWING_ANCHO_COLUMNA + FuncionesSwing.getValorProporcion(Constantes.ISWING_ANCHO_CONTROL,0));
			tableColumn.setMaxWidth(Constantes.ISWING_ANCHO_COLUMNA + FuncionesSwing.getValorProporcion(Constantes.ISWING_ANCHO_CONTROL,0));

			this.iWidthTableDefinicion+=Constantes.ISWING_ANCHO_COLUMNA + FuncionesSwing.getValorProporcion(Constantes.ISWING_ANCHO_CONTROL,0);
			//tableColumn.addPropertyChangeListener(new DetalleActivoFijoPropertyChangeListener());
		} else {
			Funciones2.setTableColumnOcultar(tableColumn);
		}


			tableColumn=this.jTableDatosDetalleActivoFijo.getColumnModel().getColumn(Funciones2.getColumnIndexByName(this.jTableDatosDetalleActivoFijo,DetalleActivoFijoConstantesFunciones.LABEL_FECHACOMPRA));

		if(this.detalleactivofijoConstantesFunciones.mostrarfecha_compraDetalleActivoFijo && Funciones2.permiteMostarParaBusqueda(this.esParaBusquedaForeignKey,DetalleActivoFijoConstantesFunciones.LABEL_FECHACOMPRA,false,iCountNumeroColumnasNormal++,iCountNumeroColumnasFk)) {
			tableColumn.setCellRenderer(new DateRenderer(this.detalleactivofijoConstantesFunciones.resaltarfecha_compraDetalleActivoFijo,this.detalleactivofijoConstantesFunciones.activarfecha_compraDetalleActivoFijo,iSizeTabla,this,true,"fecha_compraDetalleActivoFijo","BASICO"));
			tableColumn.setCellEditor(new DateEditorRenderer(this.detalleactivofijoConstantesFunciones.resaltarfecha_compraDetalleActivoFijo,this.detalleactivofijoConstantesFunciones.activarfecha_compraDetalleActivoFijo,this,true,"fecha_compraDetalleActivoFijo","BASICO"));

			tableColumn.setPreferredWidth(Constantes.ISWING_ANCHO_COLUMNA + FuncionesSwing.getValorProporcion(Constantes.ISWING_ANCHO_CONTROL,30));
			tableColumn.setWidth(Constantes.ISWING_ANCHO_COLUMNA + FuncionesSwing.getValorProporcion(Constantes.ISWING_ANCHO_CONTROL,30));
			tableColumn.setMinWidth(Constantes.ISWING_ANCHO_COLUMNA + FuncionesSwing.getValorProporcion(Constantes.ISWING_ANCHO_CONTROL,30));
			tableColumn.setMaxWidth(Constantes.ISWING_ANCHO_COLUMNA + FuncionesSwing.getValorProporcion(Constantes.ISWING_ANCHO_CONTROL,30));

			this.iWidthTableDefinicion+=Constantes.ISWING_ANCHO_COLUMNA + FuncionesSwing.getValorProporcion(Constantes.ISWING_ANCHO_CONTROL,30);
			//tableColumn.addPropertyChangeListener(new DetalleActivoFijoPropertyChangeListener());
		} else {
			Funciones2.setTableColumnOcultar(tableColumn);
		}


			tableColumn=this.jTableDatosDetalleActivoFijo.getColumnModel().getColumn(Funciones2.getColumnIndexByName(this.jTableDatosDetalleActivoFijo,DetalleActivoFijoConstantesFunciones.LABEL_FECHAMANTENIMIENTO));

		if(this.detalleactivofijoConstantesFunciones.mostrarfecha_mantenimientoDetalleActivoFijo && Funciones2.permiteMostarParaBusqueda(this.esParaBusquedaForeignKey,DetalleActivoFijoConstantesFunciones.LABEL_FECHAMANTENIMIENTO,false,iCountNumeroColumnasNormal++,iCountNumeroColumnasFk)) {
			tableColumn.setCellRenderer(new DateRenderer(this.detalleactivofijoConstantesFunciones.resaltarfecha_mantenimientoDetalleActivoFijo,this.detalleactivofijoConstantesFunciones.activarfecha_mantenimientoDetalleActivoFijo,iSizeTabla,this,true,"fecha_mantenimientoDetalleActivoFijo","BASICO"));
			tableColumn.setCellEditor(new DateEditorRenderer(this.detalleactivofijoConstantesFunciones.resaltarfecha_mantenimientoDetalleActivoFijo,this.detalleactivofijoConstantesFunciones.activarfecha_mantenimientoDetalleActivoFijo,this,true,"fecha_mantenimientoDetalleActivoFijo","BASICO"));

			tableColumn.setPreferredWidth(Constantes.ISWING_ANCHO_COLUMNA + FuncionesSwing.getValorProporcion(Constantes.ISWING_ANCHO_CONTROL,30));
			tableColumn.setWidth(Constantes.ISWING_ANCHO_COLUMNA + FuncionesSwing.getValorProporcion(Constantes.ISWING_ANCHO_CONTROL,30));
			tableColumn.setMinWidth(Constantes.ISWING_ANCHO_COLUMNA + FuncionesSwing.getValorProporcion(Constantes.ISWING_ANCHO_CONTROL,30));
			tableColumn.setMaxWidth(Constantes.ISWING_ANCHO_COLUMNA + FuncionesSwing.getValorProporcion(Constantes.ISWING_ANCHO_CONTROL,30));

			this.iWidthTableDefinicion+=Constantes.ISWING_ANCHO_COLUMNA + FuncionesSwing.getValorProporcion(Constantes.ISWING_ANCHO_CONTROL,30);
			//tableColumn.addPropertyChangeListener(new DetalleActivoFijoPropertyChangeListener());
		} else {
			Funciones2.setTableColumnOcultar(tableColumn);
		}


			tableColumn=this.jTableDatosDetalleActivoFijo.getColumnModel().getColumn(Funciones2.getColumnIndexByName(this.jTableDatosDetalleActivoFijo,DetalleActivoFijoConstantesFunciones.LABEL_FECHACORRECCION));

		if(this.detalleactivofijoConstantesFunciones.mostrarfecha_correccionDetalleActivoFijo && Funciones2.permiteMostarParaBusqueda(this.esParaBusquedaForeignKey,DetalleActivoFijoConstantesFunciones.LABEL_FECHACORRECCION,false,iCountNumeroColumnasNormal++,iCountNumeroColumnasFk)) {
			tableColumn.setCellRenderer(new DateRenderer(this.detalleactivofijoConstantesFunciones.resaltarfecha_correccionDetalleActivoFijo,this.detalleactivofijoConstantesFunciones.activarfecha_correccionDetalleActivoFijo,iSizeTabla,this,true,"fecha_correccionDetalleActivoFijo","BASICO"));
			tableColumn.setCellEditor(new DateEditorRenderer(this.detalleactivofijoConstantesFunciones.resaltarfecha_correccionDetalleActivoFijo,this.detalleactivofijoConstantesFunciones.activarfecha_correccionDetalleActivoFijo,this,true,"fecha_correccionDetalleActivoFijo","BASICO"));

			tableColumn.setPreferredWidth(Constantes.ISWING_ANCHO_COLUMNA + FuncionesSwing.getValorProporcion(Constantes.ISWING_ANCHO_CONTROL,30));
			tableColumn.setWidth(Constantes.ISWING_ANCHO_COLUMNA + FuncionesSwing.getValorProporcion(Constantes.ISWING_ANCHO_CONTROL,30));
			tableColumn.setMinWidth(Constantes.ISWING_ANCHO_COLUMNA + FuncionesSwing.getValorProporcion(Constantes.ISWING_ANCHO_CONTROL,30));
			tableColumn.setMaxWidth(Constantes.ISWING_ANCHO_COLUMNA + FuncionesSwing.getValorProporcion(Constantes.ISWING_ANCHO_CONTROL,30));

			this.iWidthTableDefinicion+=Constantes.ISWING_ANCHO_COLUMNA + FuncionesSwing.getValorProporcion(Constantes.ISWING_ANCHO_CONTROL,30);
			//tableColumn.addPropertyChangeListener(new DetalleActivoFijoPropertyChangeListener());
		} else {
			Funciones2.setTableColumnOcultar(tableColumn);
		}


			tableColumn=this.jTableDatosDetalleActivoFijo.getColumnModel().getColumn(Funciones2.getColumnIndexByName(this.jTableDatosDetalleActivoFijo,DetalleActivoFijoConstantesFunciones.LABEL_FECHADEPRECIACION));

		if(this.detalleactivofijoConstantesFunciones.mostrarfecha_depreciacionDetalleActivoFijo && Funciones2.permiteMostarParaBusqueda(this.esParaBusquedaForeignKey,DetalleActivoFijoConstantesFunciones.LABEL_FECHADEPRECIACION,false,iCountNumeroColumnasNormal++,iCountNumeroColumnasFk)) {
			tableColumn.setCellRenderer(new DateRenderer(this.detalleactivofijoConstantesFunciones.resaltarfecha_depreciacionDetalleActivoFijo,this.detalleactivofijoConstantesFunciones.activarfecha_depreciacionDetalleActivoFijo,iSizeTabla,this,true,"fecha_depreciacionDetalleActivoFijo","BASICO"));
			tableColumn.setCellEditor(new DateEditorRenderer(this.detalleactivofijoConstantesFunciones.resaltarfecha_depreciacionDetalleActivoFijo,this.detalleactivofijoConstantesFunciones.activarfecha_depreciacionDetalleActivoFijo,this,true,"fecha_depreciacionDetalleActivoFijo","BASICO"));

			tableColumn.setPreferredWidth(Constantes.ISWING_ANCHO_COLUMNA + FuncionesSwing.getValorProporcion(Constantes.ISWING_ANCHO_CONTROL,30));
			tableColumn.setWidth(Constantes.ISWING_ANCHO_COLUMNA + FuncionesSwing.getValorProporcion(Constantes.ISWING_ANCHO_CONTROL,30));
			tableColumn.setMinWidth(Constantes.ISWING_ANCHO_COLUMNA + FuncionesSwing.getValorProporcion(Constantes.ISWING_ANCHO_CONTROL,30));
			tableColumn.setMaxWidth(Constantes.ISWING_ANCHO_COLUMNA + FuncionesSwing.getValorProporcion(Constantes.ISWING_ANCHO_CONTROL,30));

			this.iWidthTableDefinicion+=Constantes.ISWING_ANCHO_COLUMNA + FuncionesSwing.getValorProporcion(Constantes.ISWING_ANCHO_CONTROL,30);
			//tableColumn.addPropertyChangeListener(new DetalleActivoFijoPropertyChangeListener());
		} else {
			Funciones2.setTableColumnOcultar(tableColumn);
		}


			tableColumn=this.jTableDatosDetalleActivoFijo.getColumnModel().getColumn(Funciones2.getColumnIndexByName(this.jTableDatosDetalleActivoFijo,DetalleActivoFijoConstantesFunciones.LABEL_CLAVE));

		if(this.detalleactivofijoConstantesFunciones.mostrarclaveDetalleActivoFijo && Funciones2.permiteMostarParaBusqueda(this.esParaBusquedaForeignKey,DetalleActivoFijoConstantesFunciones.LABEL_CLAVE,false,iCountNumeroColumnasNormal++,iCountNumeroColumnasFk)) {
			tableColumn.setCellRenderer(new LabelRenderer(this.detalleactivofijoConstantesFunciones.resaltarclaveDetalleActivoFijo,this.detalleactivofijoConstantesFunciones.activarclaveDetalleActivoFijo,iSizeTabla,this,true,"claveDetalleActivoFijo","BASICO"));
			tableColumn.setCellEditor(new TextFieldEditorRenderer(this.detalleactivofijoConstantesFunciones.resaltarclaveDetalleActivoFijo,this.detalleactivofijoConstantesFunciones.activarclaveDetalleActivoFijo,this,true,"claveDetalleActivoFijo","BASICO",false));

			tableColumn.setPreferredWidth(Constantes.ISWING_ANCHO_COLUMNA + FuncionesSwing.getValorProporcion(Constantes.ISWING_ANCHO_CONTROL,0));
			tableColumn.setWidth(Constantes.ISWING_ANCHO_COLUMNA + FuncionesSwing.getValorProporcion(Constantes.ISWING_ANCHO_CONTROL,0));
			tableColumn.setMinWidth(Constantes.ISWING_ANCHO_COLUMNA + FuncionesSwing.getValorProporcion(Constantes.ISWING_ANCHO_CONTROL,0));
			tableColumn.setMaxWidth(Constantes.ISWING_ANCHO_COLUMNA + FuncionesSwing.getValorProporcion(Constantes.ISWING_ANCHO_CONTROL,0));

			this.iWidthTableDefinicion+=Constantes.ISWING_ANCHO_COLUMNA + FuncionesSwing.getValorProporcion(Constantes.ISWING_ANCHO_CONTROL,0);
			//tableColumn.addPropertyChangeListener(new DetalleActivoFijoPropertyChangeListener());
		} else {
			Funciones2.setTableColumnOcultar(tableColumn);
		}


			tableColumn=this.jTableDatosDetalleActivoFijo.getColumnModel().getColumn(Funciones2.getColumnIndexByName(this.jTableDatosDetalleActivoFijo,DetalleActivoFijoConstantesFunciones.LABEL_MARCA));

		if(this.detalleactivofijoConstantesFunciones.mostrarmarcaDetalleActivoFijo && Funciones2.permiteMostarParaBusqueda(this.esParaBusquedaForeignKey,DetalleActivoFijoConstantesFunciones.LABEL_MARCA,false,iCountNumeroColumnasNormal++,iCountNumeroColumnasFk)) {
			tableColumn.setCellRenderer(new LabelRenderer(this.detalleactivofijoConstantesFunciones.resaltarmarcaDetalleActivoFijo,this.detalleactivofijoConstantesFunciones.activarmarcaDetalleActivoFijo,iSizeTabla,this,true,"marcaDetalleActivoFijo","BASICO"));
			tableColumn.setCellEditor(new TextFieldEditorRenderer(this.detalleactivofijoConstantesFunciones.resaltarmarcaDetalleActivoFijo,this.detalleactivofijoConstantesFunciones.activarmarcaDetalleActivoFijo,this,true,"marcaDetalleActivoFijo","BASICO",false));

			tableColumn.setPreferredWidth(Constantes.ISWING_ANCHO_COLUMNA + FuncionesSwing.getValorProporcion(Constantes.ISWING_ANCHO_CONTROL,0));
			tableColumn.setWidth(Constantes.ISWING_ANCHO_COLUMNA + FuncionesSwing.getValorProporcion(Constantes.ISWING_ANCHO_CONTROL,0));
			tableColumn.setMinWidth(Constantes.ISWING_ANCHO_COLUMNA + FuncionesSwing.getValorProporcion(Constantes.ISWING_ANCHO_CONTROL,0));
			tableColumn.setMaxWidth(Constantes.ISWING_ANCHO_COLUMNA + FuncionesSwing.getValorProporcion(Constantes.ISWING_ANCHO_CONTROL,0));

			this.iWidthTableDefinicion+=Constantes.ISWING_ANCHO_COLUMNA + FuncionesSwing.getValorProporcion(Constantes.ISWING_ANCHO_CONTROL,0);
			//tableColumn.addPropertyChangeListener(new DetalleActivoFijoPropertyChangeListener());
		} else {
			Funciones2.setTableColumnOcultar(tableColumn);
		}


			tableColumn=this.jTableDatosDetalleActivoFijo.getColumnModel().getColumn(Funciones2.getColumnIndexByName(this.jTableDatosDetalleActivoFijo,DetalleActivoFijoConstantesFunciones.LABEL_MODELO));

		if(this.detalleactivofijoConstantesFunciones.mostrarmodeloDetalleActivoFijo && Funciones2.permiteMostarParaBusqueda(this.esParaBusquedaForeignKey,DetalleActivoFijoConstantesFunciones.LABEL_MODELO,false,iCountNumeroColumnasNormal++,iCountNumeroColumnasFk)) {
			tableColumn.setCellRenderer(new LabelRenderer(this.detalleactivofijoConstantesFunciones.resaltarmodeloDetalleActivoFijo,this.detalleactivofijoConstantesFunciones.activarmodeloDetalleActivoFijo,iSizeTabla,this,true,"modeloDetalleActivoFijo","BASICO"));
			tableColumn.setCellEditor(new TextFieldEditorRenderer(this.detalleactivofijoConstantesFunciones.resaltarmodeloDetalleActivoFijo,this.detalleactivofijoConstantesFunciones.activarmodeloDetalleActivoFijo,this,true,"modeloDetalleActivoFijo","BASICO",false));

			tableColumn.setPreferredWidth(Constantes.ISWING_ANCHO_COLUMNA + FuncionesSwing.getValorProporcion(Constantes.ISWING_ANCHO_CONTROL,0));
			tableColumn.setWidth(Constantes.ISWING_ANCHO_COLUMNA + FuncionesSwing.getValorProporcion(Constantes.ISWING_ANCHO_CONTROL,0));
			tableColumn.setMinWidth(Constantes.ISWING_ANCHO_COLUMNA + FuncionesSwing.getValorProporcion(Constantes.ISWING_ANCHO_CONTROL,0));
			tableColumn.setMaxWidth(Constantes.ISWING_ANCHO_COLUMNA + FuncionesSwing.getValorProporcion(Constantes.ISWING_ANCHO_CONTROL,0));

			this.iWidthTableDefinicion+=Constantes.ISWING_ANCHO_COLUMNA + FuncionesSwing.getValorProporcion(Constantes.ISWING_ANCHO_CONTROL,0);
			//tableColumn.addPropertyChangeListener(new DetalleActivoFijoPropertyChangeListener());
		} else {
			Funciones2.setTableColumnOcultar(tableColumn);
		}


			tableColumn=this.jTableDatosDetalleActivoFijo.getColumnModel().getColumn(Funciones2.getColumnIndexByName(this.jTableDatosDetalleActivoFijo,DetalleActivoFijoConstantesFunciones.LABEL_COLOR));

		if(this.detalleactivofijoConstantesFunciones.mostrarcolorDetalleActivoFijo && Funciones2.permiteMostarParaBusqueda(this.esParaBusquedaForeignKey,DetalleActivoFijoConstantesFunciones.LABEL_COLOR,false,iCountNumeroColumnasNormal++,iCountNumeroColumnasFk)) {
			tableColumn.setCellRenderer(new LabelRenderer(this.detalleactivofijoConstantesFunciones.resaltarcolorDetalleActivoFijo,this.detalleactivofijoConstantesFunciones.activarcolorDetalleActivoFijo,iSizeTabla,this,true,"colorDetalleActivoFijo","BASICO"));
			tableColumn.setCellEditor(new TextFieldEditorRenderer(this.detalleactivofijoConstantesFunciones.resaltarcolorDetalleActivoFijo,this.detalleactivofijoConstantesFunciones.activarcolorDetalleActivoFijo,this,true,"colorDetalleActivoFijo","BASICO",false));

			tableColumn.setPreferredWidth(Constantes.ISWING_ANCHO_COLUMNA + FuncionesSwing.getValorProporcion(Constantes.ISWING_ANCHO_CONTROL,0));
			tableColumn.setWidth(Constantes.ISWING_ANCHO_COLUMNA + FuncionesSwing.getValorProporcion(Constantes.ISWING_ANCHO_CONTROL,0));
			tableColumn.setMinWidth(Constantes.ISWING_ANCHO_COLUMNA + FuncionesSwing.getValorProporcion(Constantes.ISWING_ANCHO_CONTROL,0));
			tableColumn.setMaxWidth(Constantes.ISWING_ANCHO_COLUMNA + FuncionesSwing.getValorProporcion(Constantes.ISWING_ANCHO_CONTROL,0));

			this.iWidthTableDefinicion+=Constantes.ISWING_ANCHO_COLUMNA + FuncionesSwing.getValorProporcion(Constantes.ISWING_ANCHO_CONTROL,0);
			//tableColumn.addPropertyChangeListener(new DetalleActivoFijoPropertyChangeListener());
		} else {
			Funciones2.setTableColumnOcultar(tableColumn);
		}


			tableColumn=this.jTableDatosDetalleActivoFijo.getColumnModel().getColumn(Funciones2.getColumnIndexByName(this.jTableDatosDetalleActivoFijo,DetalleActivoFijoConstantesFunciones.LABEL_FECHA));

		if(this.detalleactivofijoConstantesFunciones.mostrarfechaDetalleActivoFijo && Funciones2.permiteMostarParaBusqueda(this.esParaBusquedaForeignKey,DetalleActivoFijoConstantesFunciones.LABEL_FECHA,false,iCountNumeroColumnasNormal++,iCountNumeroColumnasFk)) {
			tableColumn.setCellRenderer(new DateRenderer(this.detalleactivofijoConstantesFunciones.resaltarfechaDetalleActivoFijo,this.detalleactivofijoConstantesFunciones.activarfechaDetalleActivoFijo,iSizeTabla,this,true,"fechaDetalleActivoFijo","BASICO"));
			tableColumn.setCellEditor(new DateEditorRenderer(this.detalleactivofijoConstantesFunciones.resaltarfechaDetalleActivoFijo,this.detalleactivofijoConstantesFunciones.activarfechaDetalleActivoFijo,this,true,"fechaDetalleActivoFijo","BASICO"));

			tableColumn.setPreferredWidth(Constantes.ISWING_ANCHO_COLUMNA + FuncionesSwing.getValorProporcion(Constantes.ISWING_ANCHO_CONTROL,30));
			tableColumn.setWidth(Constantes.ISWING_ANCHO_COLUMNA + FuncionesSwing.getValorProporcion(Constantes.ISWING_ANCHO_CONTROL,30));
			tableColumn.setMinWidth(Constantes.ISWING_ANCHO_COLUMNA + FuncionesSwing.getValorProporcion(Constantes.ISWING_ANCHO_CONTROL,30));
			tableColumn.setMaxWidth(Constantes.ISWING_ANCHO_COLUMNA + FuncionesSwing.getValorProporcion(Constantes.ISWING_ANCHO_CONTROL,30));

			this.iWidthTableDefinicion+=Constantes.ISWING_ANCHO_COLUMNA + FuncionesSwing.getValorProporcion(Constantes.ISWING_ANCHO_CONTROL,30);
			//tableColumn.addPropertyChangeListener(new DetalleActivoFijoPropertyChangeListener());
		} else {
			Funciones2.setTableColumnOcultar(tableColumn);
		}


			tableColumn=this.jTableDatosDetalleActivoFijo.getColumnModel().getColumn(Funciones2.getColumnIndexByName(this.jTableDatosDetalleActivoFijo,DetalleActivoFijoConstantesFunciones.LABEL_VALORUTIL));

		if(this.detalleactivofijoConstantesFunciones.mostrarvalor_utilDetalleActivoFijo && Funciones2.permiteMostarParaBusqueda(this.esParaBusquedaForeignKey,DetalleActivoFijoConstantesFunciones.LABEL_VALORUTIL,false,iCountNumeroColumnasNormal++,iCountNumeroColumnasFk)) {
			tableColumn.setCellRenderer(new TextFieldRenderer(this.detalleactivofijoConstantesFunciones.resaltarvalor_utilDetalleActivoFijo,this.detalleactivofijoConstantesFunciones.activarvalor_utilDetalleActivoFijo,iSizeTabla,this,true,"valor_utilDetalleActivoFijo","BASICO"));
			tableColumn.setCellEditor(new TextFieldEditorRenderer(this.detalleactivofijoConstantesFunciones.resaltarvalor_utilDetalleActivoFijo,this.detalleactivofijoConstantesFunciones.activarvalor_utilDetalleActivoFijo,this,true,"valor_utilDetalleActivoFijo","BASICO",false));

			tableColumn.setPreferredWidth(Constantes.ISWING_ANCHO_COLUMNA);
			tableColumn.setWidth(Constantes.ISWING_ANCHO_COLUMNA);
			tableColumn.setMinWidth(Constantes.ISWING_ANCHO_COLUMNA);
			tableColumn.setMaxWidth(Constantes.ISWING_ANCHO_COLUMNA);

			this.iWidthTableDefinicion+=Constantes.ISWING_ANCHO_COLUMNA;
			//tableColumn.addPropertyChangeListener(new DetalleActivoFijoPropertyChangeListener());
		} else {
			Funciones2.setTableColumnOcultar(tableColumn);
		}


			tableColumn=this.jTableDatosDetalleActivoFijo.getColumnModel().getColumn(Funciones2.getColumnIndexByName(this.jTableDatosDetalleActivoFijo,DetalleActivoFijoConstantesFunciones.LABEL_COSTODECOMPRA));

		if(this.detalleactivofijoConstantesFunciones.mostrarcosto_de_compraDetalleActivoFijo && Funciones2.permiteMostarParaBusqueda(this.esParaBusquedaForeignKey,DetalleActivoFijoConstantesFunciones.LABEL_COSTODECOMPRA,false,iCountNumeroColumnasNormal++,iCountNumeroColumnasFk)) {
			tableColumn.setCellRenderer(new TextFieldRenderer(this.detalleactivofijoConstantesFunciones.resaltarcosto_de_compraDetalleActivoFijo,this.detalleactivofijoConstantesFunciones.activarcosto_de_compraDetalleActivoFijo,iSizeTabla,this,true,"costo_de_compraDetalleActivoFijo","BASICO"));
			tableColumn.setCellEditor(new TextFieldEditorRenderer(this.detalleactivofijoConstantesFunciones.resaltarcosto_de_compraDetalleActivoFijo,this.detalleactivofijoConstantesFunciones.activarcosto_de_compraDetalleActivoFijo,this,true,"costo_de_compraDetalleActivoFijo","BASICO",false));

			tableColumn.setPreferredWidth(Constantes.ISWING_ANCHO_COLUMNA);
			tableColumn.setWidth(Constantes.ISWING_ANCHO_COLUMNA);
			tableColumn.setMinWidth(Constantes.ISWING_ANCHO_COLUMNA);
			tableColumn.setMaxWidth(Constantes.ISWING_ANCHO_COLUMNA);

			this.iWidthTableDefinicion+=Constantes.ISWING_ANCHO_COLUMNA;
			//tableColumn.addPropertyChangeListener(new DetalleActivoFijoPropertyChangeListener());
		} else {
			Funciones2.setTableColumnOcultar(tableColumn);
		}


			tableColumn=this.jTableDatosDetalleActivoFijo.getColumnModel().getColumn(Funciones2.getColumnIndexByName(this.jTableDatosDetalleActivoFijo,DetalleActivoFijoConstantesFunciones.LABEL_VIDAUTIL));

		if(this.detalleactivofijoConstantesFunciones.mostrarvida_utilDetalleActivoFijo && Funciones2.permiteMostarParaBusqueda(this.esParaBusquedaForeignKey,DetalleActivoFijoConstantesFunciones.LABEL_VIDAUTIL,false,iCountNumeroColumnasNormal++,iCountNumeroColumnasFk)) {
			tableColumn.setCellRenderer(new TextFieldRenderer(this.detalleactivofijoConstantesFunciones.resaltarvida_utilDetalleActivoFijo,this.detalleactivofijoConstantesFunciones.activarvida_utilDetalleActivoFijo,iSizeTabla,this,true,"vida_utilDetalleActivoFijo","BASICO"));
			tableColumn.setCellEditor(new TextFieldEditorRenderer(this.detalleactivofijoConstantesFunciones.resaltarvida_utilDetalleActivoFijo,this.detalleactivofijoConstantesFunciones.activarvida_utilDetalleActivoFijo,this,true,"vida_utilDetalleActivoFijo","BASICO",false));

			tableColumn.setPreferredWidth(Constantes.ISWING_ANCHO_COLUMNA);
			tableColumn.setWidth(Constantes.ISWING_ANCHO_COLUMNA);
			tableColumn.setMinWidth(Constantes.ISWING_ANCHO_COLUMNA);
			tableColumn.setMaxWidth(Constantes.ISWING_ANCHO_COLUMNA);

			this.iWidthTableDefinicion+=Constantes.ISWING_ANCHO_COLUMNA;
			//tableColumn.addPropertyChangeListener(new DetalleActivoFijoPropertyChangeListener());
		} else {
			Funciones2.setTableColumnOcultar(tableColumn);
		}


			tableColumn=this.jTableDatosDetalleActivoFijo.getColumnModel().getColumn(Funciones2.getColumnIndexByName(this.jTableDatosDetalleActivoFijo,DetalleActivoFijoConstantesFunciones.LABEL_VALORRESIDUAL));

		if(this.detalleactivofijoConstantesFunciones.mostrarvalor_residualDetalleActivoFijo && Funciones2.permiteMostarParaBusqueda(this.esParaBusquedaForeignKey,DetalleActivoFijoConstantesFunciones.LABEL_VALORRESIDUAL,false,iCountNumeroColumnasNormal++,iCountNumeroColumnasFk)) {
			tableColumn.setCellRenderer(new TextFieldRenderer(this.detalleactivofijoConstantesFunciones.resaltarvalor_residualDetalleActivoFijo,this.detalleactivofijoConstantesFunciones.activarvalor_residualDetalleActivoFijo,iSizeTabla,this,true,"valor_residualDetalleActivoFijo","BASICO"));
			tableColumn.setCellEditor(new TextFieldEditorRenderer(this.detalleactivofijoConstantesFunciones.resaltarvalor_residualDetalleActivoFijo,this.detalleactivofijoConstantesFunciones.activarvalor_residualDetalleActivoFijo,this,true,"valor_residualDetalleActivoFijo","BASICO",false));

			tableColumn.setPreferredWidth(Constantes.ISWING_ANCHO_COLUMNA);
			tableColumn.setWidth(Constantes.ISWING_ANCHO_COLUMNA);
			tableColumn.setMinWidth(Constantes.ISWING_ANCHO_COLUMNA);
			tableColumn.setMaxWidth(Constantes.ISWING_ANCHO_COLUMNA);

			this.iWidthTableDefinicion+=Constantes.ISWING_ANCHO_COLUMNA;
			//tableColumn.addPropertyChangeListener(new DetalleActivoFijoPropertyChangeListener());
		} else {
			Funciones2.setTableColumnOcultar(tableColumn);
		}


			tableColumn=this.jTableDatosDetalleActivoFijo.getColumnModel().getColumn(Funciones2.getColumnIndexByName(this.jTableDatosDetalleActivoFijo,DetalleActivoFijoConstantesFunciones.LABEL_CANTIDAD));

		if(this.detalleactivofijoConstantesFunciones.mostrarcantidadDetalleActivoFijo && Funciones2.permiteMostarParaBusqueda(this.esParaBusquedaForeignKey,DetalleActivoFijoConstantesFunciones.LABEL_CANTIDAD,false,iCountNumeroColumnasNormal++,iCountNumeroColumnasFk)) {
			tableColumn.setCellRenderer(new TextFieldRenderer(this.detalleactivofijoConstantesFunciones.resaltarcantidadDetalleActivoFijo,this.detalleactivofijoConstantesFunciones.activarcantidadDetalleActivoFijo,iSizeTabla,this,true,"cantidadDetalleActivoFijo","BASICO"));
			tableColumn.setCellEditor(new TextFieldEditorRenderer(this.detalleactivofijoConstantesFunciones.resaltarcantidadDetalleActivoFijo,this.detalleactivofijoConstantesFunciones.activarcantidadDetalleActivoFijo,this,true,"cantidadDetalleActivoFijo","BASICO",false));

			tableColumn.setPreferredWidth(Constantes.ISWING_ANCHO_COLUMNA);
			tableColumn.setWidth(Constantes.ISWING_ANCHO_COLUMNA);
			tableColumn.setMinWidth(Constantes.ISWING_ANCHO_COLUMNA);
			tableColumn.setMaxWidth(Constantes.ISWING_ANCHO_COLUMNA);

			this.iWidthTableDefinicion+=Constantes.ISWING_ANCHO_COLUMNA;
			//tableColumn.addPropertyChangeListener(new DetalleActivoFijoPropertyChangeListener());
		} else {
			Funciones2.setTableColumnOcultar(tableColumn);
		}


			tableColumn=this.jTableDatosDetalleActivoFijo.getColumnModel().getColumn(Funciones2.getColumnIndexByName(this.jTableDatosDetalleActivoFijo,DetalleActivoFijoConstantesFunciones.LABEL_NOMBREPROPIETARIO));

		if(this.detalleactivofijoConstantesFunciones.mostrarnombre_propietarioDetalleActivoFijo && Funciones2.permiteMostarParaBusqueda(this.esParaBusquedaForeignKey,DetalleActivoFijoConstantesFunciones.LABEL_NOMBREPROPIETARIO,false,iCountNumeroColumnasNormal++,iCountNumeroColumnasFk)) {
			tableColumn.setCellRenderer(new LabelRenderer(this.detalleactivofijoConstantesFunciones.resaltarnombre_propietarioDetalleActivoFijo,this.detalleactivofijoConstantesFunciones.activarnombre_propietarioDetalleActivoFijo,iSizeTabla,this,true,"nombre_propietarioDetalleActivoFijo","BASICO"));
			tableColumn.setCellEditor(new TextFieldEditorRenderer(this.detalleactivofijoConstantesFunciones.resaltarnombre_propietarioDetalleActivoFijo,this.detalleactivofijoConstantesFunciones.activarnombre_propietarioDetalleActivoFijo,this,true,"nombre_propietarioDetalleActivoFijo","BASICO",false));

			tableColumn.setPreferredWidth(Constantes.ISWING_ANCHO_COLUMNA + FuncionesSwing.getValorProporcion(Constantes.ISWING_ANCHO_CONTROL,0));
			tableColumn.setWidth(Constantes.ISWING_ANCHO_COLUMNA + FuncionesSwing.getValorProporcion(Constantes.ISWING_ANCHO_CONTROL,0));
			tableColumn.setMinWidth(Constantes.ISWING_ANCHO_COLUMNA + FuncionesSwing.getValorProporcion(Constantes.ISWING_ANCHO_CONTROL,0));
			tableColumn.setMaxWidth(Constantes.ISWING_ANCHO_COLUMNA + FuncionesSwing.getValorProporcion(Constantes.ISWING_ANCHO_CONTROL,0));

			this.iWidthTableDefinicion+=Constantes.ISWING_ANCHO_COLUMNA + FuncionesSwing.getValorProporcion(Constantes.ISWING_ANCHO_CONTROL,0);
			//tableColumn.addPropertyChangeListener(new DetalleActivoFijoPropertyChangeListener());
		} else {
			Funciones2.setTableColumnOcultar(tableColumn);
		}


			tableColumn=this.jTableDatosDetalleActivoFijo.getColumnModel().getColumn(Funciones2.getColumnIndexByName(this.jTableDatosDetalleActivoFijo,DetalleActivoFijoConstantesFunciones.LABEL_RESPONSABLE));

		if(this.detalleactivofijoConstantesFunciones.mostrarresponsableDetalleActivoFijo && Funciones2.permiteMostarParaBusqueda(this.esParaBusquedaForeignKey,DetalleActivoFijoConstantesFunciones.LABEL_RESPONSABLE,false,iCountNumeroColumnasNormal++,iCountNumeroColumnasFk)) {
			tableColumn.setCellRenderer(new LabelRenderer(this.detalleactivofijoConstantesFunciones.resaltarresponsableDetalleActivoFijo,this.detalleactivofijoConstantesFunciones.activarresponsableDetalleActivoFijo,iSizeTabla,this,true,"responsableDetalleActivoFijo","BASICO"));
			tableColumn.setCellEditor(new TextFieldEditorRenderer(this.detalleactivofijoConstantesFunciones.resaltarresponsableDetalleActivoFijo,this.detalleactivofijoConstantesFunciones.activarresponsableDetalleActivoFijo,this,true,"responsableDetalleActivoFijo","BASICO",false));

			tableColumn.setPreferredWidth(Constantes.ISWING_ANCHO_COLUMNA + FuncionesSwing.getValorProporcion(Constantes.ISWING_ANCHO_CONTROL,0));
			tableColumn.setWidth(Constantes.ISWING_ANCHO_COLUMNA + FuncionesSwing.getValorProporcion(Constantes.ISWING_ANCHO_CONTROL,0));
			tableColumn.setMinWidth(Constantes.ISWING_ANCHO_COLUMNA + FuncionesSwing.getValorProporcion(Constantes.ISWING_ANCHO_CONTROL,0));
			tableColumn.setMaxWidth(Constantes.ISWING_ANCHO_COLUMNA + FuncionesSwing.getValorProporcion(Constantes.ISWING_ANCHO_CONTROL,0));

			this.iWidthTableDefinicion+=Constantes.ISWING_ANCHO_COLUMNA + FuncionesSwing.getValorProporcion(Constantes.ISWING_ANCHO_CONTROL,0);
			//tableColumn.addPropertyChangeListener(new DetalleActivoFijoPropertyChangeListener());
		} else {
			Funciones2.setTableColumnOcultar(tableColumn);
		}


			tableColumn=this.jTableDatosDetalleActivoFijo.getColumnModel().getColumn(Funciones2.getColumnIndexByName(this.jTableDatosDetalleActivoFijo,DetalleActivoFijoConstantesFunciones.LABEL_PATHFOTO));

		if(this.detalleactivofijoConstantesFunciones.mostrarpath_fotoDetalleActivoFijo && Funciones2.permiteMostarParaBusqueda(this.esParaBusquedaForeignKey,DetalleActivoFijoConstantesFunciones.LABEL_PATHFOTO,false,iCountNumeroColumnasNormal++,iCountNumeroColumnasFk)) {
			tableColumn.setCellRenderer(new LabelRenderer(this.detalleactivofijoConstantesFunciones.resaltarpath_fotoDetalleActivoFijo,this.detalleactivofijoConstantesFunciones.activarpath_fotoDetalleActivoFijo,iSizeTabla,this,true,"path_fotoDetalleActivoFijo","BASICO"));
			tableColumn.setCellEditor(new TextFieldEditorRenderer(this.detalleactivofijoConstantesFunciones.resaltarpath_fotoDetalleActivoFijo,this.detalleactivofijoConstantesFunciones.activarpath_fotoDetalleActivoFijo,this,true,"path_fotoDetalleActivoFijo","BASICO",false));

			tableColumn.setPreferredWidth(Constantes.ISWING_ANCHO_COLUMNA + FuncionesSwing.getValorProporcion(Constantes.ISWING_ANCHO_CONTROL,0));
			tableColumn.setWidth(Constantes.ISWING_ANCHO_COLUMNA + FuncionesSwing.getValorProporcion(Constantes.ISWING_ANCHO_CONTROL,0));
			tableColumn.setMinWidth(Constantes.ISWING_ANCHO_COLUMNA + FuncionesSwing.getValorProporcion(Constantes.ISWING_ANCHO_CONTROL,0));
			tableColumn.setMaxWidth(Constantes.ISWING_ANCHO_COLUMNA + FuncionesSwing.getValorProporcion(Constantes.ISWING_ANCHO_CONTROL,0));

			this.iWidthTableDefinicion+=Constantes.ISWING_ANCHO_COLUMNA + FuncionesSwing.getValorProporcion(Constantes.ISWING_ANCHO_CONTROL,0);
			//tableColumn.addPropertyChangeListener(new DetalleActivoFijoPropertyChangeListener());
		} else {
			Funciones2.setTableColumnOcultar(tableColumn);
		}


			tableColumn=this.jTableDatosDetalleActivoFijo.getColumnModel().getColumn(Funciones2.getColumnIndexByName(this.jTableDatosDetalleActivoFijo,DetalleActivoFijoConstantesFunciones.LABEL_NUMEROCOMPROBANTE));

		if(this.detalleactivofijoConstantesFunciones.mostrarnumero_comprobanteDetalleActivoFijo && Funciones2.permiteMostarParaBusqueda(this.esParaBusquedaForeignKey,DetalleActivoFijoConstantesFunciones.LABEL_NUMEROCOMPROBANTE,false,iCountNumeroColumnasNormal++,iCountNumeroColumnasFk)) {
			tableColumn.setCellRenderer(new LabelRenderer(this.detalleactivofijoConstantesFunciones.resaltarnumero_comprobanteDetalleActivoFijo,this.detalleactivofijoConstantesFunciones.activarnumero_comprobanteDetalleActivoFijo,iSizeTabla,this,true,"numero_comprobanteDetalleActivoFijo","BASICO"));
			tableColumn.setCellEditor(new TextFieldEditorRenderer(this.detalleactivofijoConstantesFunciones.resaltarnumero_comprobanteDetalleActivoFijo,this.detalleactivofijoConstantesFunciones.activarnumero_comprobanteDetalleActivoFijo,this,true,"numero_comprobanteDetalleActivoFijo","BASICO",false));

			tableColumn.setPreferredWidth(Constantes.ISWING_ANCHO_COLUMNA + FuncionesSwing.getValorProporcion(Constantes.ISWING_ANCHO_CONTROL,0));
			tableColumn.setWidth(Constantes.ISWING_ANCHO_COLUMNA + FuncionesSwing.getValorProporcion(Constantes.ISWING_ANCHO_CONTROL,0));
			tableColumn.setMinWidth(Constantes.ISWING_ANCHO_COLUMNA + FuncionesSwing.getValorProporcion(Constantes.ISWING_ANCHO_CONTROL,0));
			tableColumn.setMaxWidth(Constantes.ISWING_ANCHO_COLUMNA + FuncionesSwing.getValorProporcion(Constantes.ISWING_ANCHO_CONTROL,0));

			this.iWidthTableDefinicion+=Constantes.ISWING_ANCHO_COLUMNA + FuncionesSwing.getValorProporcion(Constantes.ISWING_ANCHO_CONTROL,0);
			//tableColumn.addPropertyChangeListener(new DetalleActivoFijoPropertyChangeListener());
		} else {
			Funciones2.setTableColumnOcultar(tableColumn);
		}


			tableColumn=this.jTableDatosDetalleActivoFijo.getColumnModel().getColumn(Funciones2.getColumnIndexByName(this.jTableDatosDetalleActivoFijo,DetalleActivoFijoConstantesFunciones.LABEL_REFERENCIA));

		if(this.detalleactivofijoConstantesFunciones.mostrarreferenciaDetalleActivoFijo && Funciones2.permiteMostarParaBusqueda(this.esParaBusquedaForeignKey,DetalleActivoFijoConstantesFunciones.LABEL_REFERENCIA,false,iCountNumeroColumnasNormal++,iCountNumeroColumnasFk)) {
			tableColumn.setCellRenderer(new LabelRenderer(this.detalleactivofijoConstantesFunciones.resaltarreferenciaDetalleActivoFijo,this.detalleactivofijoConstantesFunciones.activarreferenciaDetalleActivoFijo,iSizeTabla,this,true,"referenciaDetalleActivoFijo","BASICO"));
			tableColumn.setCellEditor(new TextFieldEditorRenderer(this.detalleactivofijoConstantesFunciones.resaltarreferenciaDetalleActivoFijo,this.detalleactivofijoConstantesFunciones.activarreferenciaDetalleActivoFijo,this,true,"referenciaDetalleActivoFijo","BASICO",false));

			tableColumn.setPreferredWidth(Constantes.ISWING_ANCHO_COLUMNA + FuncionesSwing.getValorProporcion(Constantes.ISWING_ANCHO_CONTROL,0));
			tableColumn.setWidth(Constantes.ISWING_ANCHO_COLUMNA + FuncionesSwing.getValorProporcion(Constantes.ISWING_ANCHO_CONTROL,0));
			tableColumn.setMinWidth(Constantes.ISWING_ANCHO_COLUMNA + FuncionesSwing.getValorProporcion(Constantes.ISWING_ANCHO_CONTROL,0));
			tableColumn.setMaxWidth(Constantes.ISWING_ANCHO_COLUMNA + FuncionesSwing.getValorProporcion(Constantes.ISWING_ANCHO_CONTROL,0));

			this.iWidthTableDefinicion+=Constantes.ISWING_ANCHO_COLUMNA + FuncionesSwing.getValorProporcion(Constantes.ISWING_ANCHO_CONTROL,0);
			//tableColumn.addPropertyChangeListener(new DetalleActivoFijoPropertyChangeListener());
		} else {
			Funciones2.setTableColumnOcultar(tableColumn);
		}


			tableColumn=this.jTableDatosDetalleActivoFijo.getColumnModel().getColumn(Funciones2.getColumnIndexByName(this.jTableDatosDetalleActivoFijo,DetalleActivoFijoConstantesFunciones.LABEL_VALORCOTIZACION));

		if(this.detalleactivofijoConstantesFunciones.mostrarvalor_cotizacionDetalleActivoFijo && Funciones2.permiteMostarParaBusqueda(this.esParaBusquedaForeignKey,DetalleActivoFijoConstantesFunciones.LABEL_VALORCOTIZACION,false,iCountNumeroColumnasNormal++,iCountNumeroColumnasFk)) {
			tableColumn.setCellRenderer(new TextFieldRenderer(this.detalleactivofijoConstantesFunciones.resaltarvalor_cotizacionDetalleActivoFijo,this.detalleactivofijoConstantesFunciones.activarvalor_cotizacionDetalleActivoFijo,iSizeTabla,this,true,"valor_cotizacionDetalleActivoFijo","BASICO"));
			tableColumn.setCellEditor(new TextFieldEditorRenderer(this.detalleactivofijoConstantesFunciones.resaltarvalor_cotizacionDetalleActivoFijo,this.detalleactivofijoConstantesFunciones.activarvalor_cotizacionDetalleActivoFijo,this,true,"valor_cotizacionDetalleActivoFijo","BASICO",false));

			tableColumn.setPreferredWidth(Constantes.ISWING_ANCHO_COLUMNA);
			tableColumn.setWidth(Constantes.ISWING_ANCHO_COLUMNA);
			tableColumn.setMinWidth(Constantes.ISWING_ANCHO_COLUMNA);
			tableColumn.setMaxWidth(Constantes.ISWING_ANCHO_COLUMNA);

			this.iWidthTableDefinicion+=Constantes.ISWING_ANCHO_COLUMNA;
			//tableColumn.addPropertyChangeListener(new DetalleActivoFijoPropertyChangeListener());
		} else {
			Funciones2.setTableColumnOcultar(tableColumn);
		}


			tableColumn=this.jTableDatosDetalleActivoFijo.getColumnModel().getColumn(Funciones2.getColumnIndexByName(this.jTableDatosDetalleActivoFijo,DetalleActivoFijoConstantesFunciones.LABEL_CONPARTES));

		if(this.detalleactivofijoConstantesFunciones.mostrarcon_partesDetalleActivoFijo && Funciones2.permiteMostarParaBusqueda(this.esParaBusquedaForeignKey,DetalleActivoFijoConstantesFunciones.LABEL_CONPARTES,false,iCountNumeroColumnasNormal++,iCountNumeroColumnasFk)) {
			tableColumn.setCellRenderer(new BooleanRenderer(this.detalleactivofijoConstantesFunciones.resaltarcon_partesDetalleActivoFijo,this.detalleactivofijoConstantesFunciones.activarcon_partesDetalleActivoFijo,iSizeTabla));
			tableColumn.setCellEditor(new BooleanEditorRenderer(this.detalleactivofijoConstantesFunciones.resaltarcon_partesDetalleActivoFijo,this.detalleactivofijoConstantesFunciones.activarcon_partesDetalleActivoFijo,this,true,"con_partesDetalleActivoFijo","BASICO"));

			tableColumn.setPreferredWidth(Constantes.ISWING_ANCHO_COLUMNA);
			tableColumn.setWidth(Constantes.ISWING_ANCHO_COLUMNA);
			tableColumn.setMinWidth(Constantes.ISWING_ANCHO_COLUMNA);
			tableColumn.setMaxWidth(Constantes.ISWING_ANCHO_COLUMNA);

			this.iWidthTableDefinicion+=Constantes.ISWING_ANCHO_COLUMNA;
			//tableColumn.addPropertyChangeListener(new DetalleActivoFijoPropertyChangeListener());
		} else {
			Funciones2.setTableColumnOcultar(tableColumn);
		}


			tableColumn=this.jTableDatosDetalleActivoFijo.getColumnModel().getColumn(Funciones2.getColumnIndexByName(this.jTableDatosDetalleActivoFijo,DetalleActivoFijoConstantesFunciones.LABEL_CONGARANTIA));

		if(this.detalleactivofijoConstantesFunciones.mostrarcon_garantiaDetalleActivoFijo && Funciones2.permiteMostarParaBusqueda(this.esParaBusquedaForeignKey,DetalleActivoFijoConstantesFunciones.LABEL_CONGARANTIA,false,iCountNumeroColumnasNormal++,iCountNumeroColumnasFk)) {
			tableColumn.setCellRenderer(new BooleanRenderer(this.detalleactivofijoConstantesFunciones.resaltarcon_garantiaDetalleActivoFijo,this.detalleactivofijoConstantesFunciones.activarcon_garantiaDetalleActivoFijo,iSizeTabla));
			tableColumn.setCellEditor(new BooleanEditorRenderer(this.detalleactivofijoConstantesFunciones.resaltarcon_garantiaDetalleActivoFijo,this.detalleactivofijoConstantesFunciones.activarcon_garantiaDetalleActivoFijo,this,true,"con_garantiaDetalleActivoFijo","BASICO"));

			tableColumn.setPreferredWidth(Constantes.ISWING_ANCHO_COLUMNA);
			tableColumn.setWidth(Constantes.ISWING_ANCHO_COLUMNA);
			tableColumn.setMinWidth(Constantes.ISWING_ANCHO_COLUMNA);
			tableColumn.setMaxWidth(Constantes.ISWING_ANCHO_COLUMNA);

			this.iWidthTableDefinicion+=Constantes.ISWING_ANCHO_COLUMNA;
			//tableColumn.addPropertyChangeListener(new DetalleActivoFijoPropertyChangeListener());
		} else {
			Funciones2.setTableColumnOcultar(tableColumn);
		}


			tableColumn=this.jTableDatosDetalleActivoFijo.getColumnModel().getColumn(Funciones2.getColumnIndexByName(this.jTableDatosDetalleActivoFijo,DetalleActivoFijoConstantesFunciones.LABEL_CONEXISTENCIA));

		if(this.detalleactivofijoConstantesFunciones.mostrarcon_existenciaDetalleActivoFijo && Funciones2.permiteMostarParaBusqueda(this.esParaBusquedaForeignKey,DetalleActivoFijoConstantesFunciones.LABEL_CONEXISTENCIA,false,iCountNumeroColumnasNormal++,iCountNumeroColumnasFk)) {
			tableColumn.setCellRenderer(new BooleanRenderer(this.detalleactivofijoConstantesFunciones.resaltarcon_existenciaDetalleActivoFijo,this.detalleactivofijoConstantesFunciones.activarcon_existenciaDetalleActivoFijo,iSizeTabla));
			tableColumn.setCellEditor(new BooleanEditorRenderer(this.detalleactivofijoConstantesFunciones.resaltarcon_existenciaDetalleActivoFijo,this.detalleactivofijoConstantesFunciones.activarcon_existenciaDetalleActivoFijo,this,true,"con_existenciaDetalleActivoFijo","BASICO"));

			tableColumn.setPreferredWidth(Constantes.ISWING_ANCHO_COLUMNA);
			tableColumn.setWidth(Constantes.ISWING_ANCHO_COLUMNA);
			tableColumn.setMinWidth(Constantes.ISWING_ANCHO_COLUMNA);
			tableColumn.setMaxWidth(Constantes.ISWING_ANCHO_COLUMNA);

			this.iWidthTableDefinicion+=Constantes.ISWING_ANCHO_COLUMNA;
			//tableColumn.addPropertyChangeListener(new DetalleActivoFijoPropertyChangeListener());
		} else {
			Funciones2.setTableColumnOcultar(tableColumn);
		}


			tableColumn=this.jTableDatosDetalleActivoFijo.getColumnModel().getColumn(Funciones2.getColumnIndexByName(this.jTableDatosDetalleActivoFijo,DetalleActivoFijoConstantesFunciones.LABEL_FECHABAJA));

		if(this.detalleactivofijoConstantesFunciones.mostrarfecha_bajaDetalleActivoFijo && Funciones2.permiteMostarParaBusqueda(this.esParaBusquedaForeignKey,DetalleActivoFijoConstantesFunciones.LABEL_FECHABAJA,false,iCountNumeroColumnasNormal++,iCountNumeroColumnasFk)) {
			tableColumn.setCellRenderer(new DateRenderer(this.detalleactivofijoConstantesFunciones.resaltarfecha_bajaDetalleActivoFijo,this.detalleactivofijoConstantesFunciones.activarfecha_bajaDetalleActivoFijo,iSizeTabla,this,true,"fecha_bajaDetalleActivoFijo","BASICO"));
			tableColumn.setCellEditor(new DateEditorRenderer(this.detalleactivofijoConstantesFunciones.resaltarfecha_bajaDetalleActivoFijo,this.detalleactivofijoConstantesFunciones.activarfecha_bajaDetalleActivoFijo,this,true,"fecha_bajaDetalleActivoFijo","BASICO"));

			tableColumn.setPreferredWidth(Constantes.ISWING_ANCHO_COLUMNA + FuncionesSwing.getValorProporcion(Constantes.ISWING_ANCHO_CONTROL,30));
			tableColumn.setWidth(Constantes.ISWING_ANCHO_COLUMNA + FuncionesSwing.getValorProporcion(Constantes.ISWING_ANCHO_CONTROL,30));
			tableColumn.setMinWidth(Constantes.ISWING_ANCHO_COLUMNA + FuncionesSwing.getValorProporcion(Constantes.ISWING_ANCHO_CONTROL,30));
			tableColumn.setMaxWidth(Constantes.ISWING_ANCHO_COLUMNA + FuncionesSwing.getValorProporcion(Constantes.ISWING_ANCHO_CONTROL,30));

			this.iWidthTableDefinicion+=Constantes.ISWING_ANCHO_COLUMNA + FuncionesSwing.getValorProporcion(Constantes.ISWING_ANCHO_CONTROL,30);
			//tableColumn.addPropertyChangeListener(new DetalleActivoFijoPropertyChangeListener());
		} else {
			Funciones2.setTableColumnOcultar(tableColumn);
		}


			tableColumn=this.jTableDatosDetalleActivoFijo.getColumnModel().getColumn(Funciones2.getColumnIndexByName(this.jTableDatosDetalleActivoFijo,DetalleActivoFijoConstantesFunciones.LABEL_PATHFOTO2));

		if(this.detalleactivofijoConstantesFunciones.mostrarpath_foto2DetalleActivoFijo && Funciones2.permiteMostarParaBusqueda(this.esParaBusquedaForeignKey,DetalleActivoFijoConstantesFunciones.LABEL_PATHFOTO2,false,iCountNumeroColumnasNormal++,iCountNumeroColumnasFk)) {
			tableColumn.setCellRenderer(new LabelRenderer(this.detalleactivofijoConstantesFunciones.resaltarpath_foto2DetalleActivoFijo,this.detalleactivofijoConstantesFunciones.activarpath_foto2DetalleActivoFijo,iSizeTabla,this,true,"path_foto2DetalleActivoFijo","BASICO"));
			tableColumn.setCellEditor(new TextFieldEditorRenderer(this.detalleactivofijoConstantesFunciones.resaltarpath_foto2DetalleActivoFijo,this.detalleactivofijoConstantesFunciones.activarpath_foto2DetalleActivoFijo,this,true,"path_foto2DetalleActivoFijo","BASICO",false));

			tableColumn.setPreferredWidth(Constantes.ISWING_ANCHO_COLUMNA + FuncionesSwing.getValorProporcion(Constantes.ISWING_ANCHO_CONTROL,0));
			tableColumn.setWidth(Constantes.ISWING_ANCHO_COLUMNA + FuncionesSwing.getValorProporcion(Constantes.ISWING_ANCHO_CONTROL,0));
			tableColumn.setMinWidth(Constantes.ISWING_ANCHO_COLUMNA + FuncionesSwing.getValorProporcion(Constantes.ISWING_ANCHO_CONTROL,0));
			tableColumn.setMaxWidth(Constantes.ISWING_ANCHO_COLUMNA + FuncionesSwing.getValorProporcion(Constantes.ISWING_ANCHO_CONTROL,0));

			this.iWidthTableDefinicion+=Constantes.ISWING_ANCHO_COLUMNA + FuncionesSwing.getValorProporcion(Constantes.ISWING_ANCHO_CONTROL,0);
			//tableColumn.addPropertyChangeListener(new DetalleActivoFijoPropertyChangeListener());
		} else {
			Funciones2.setTableColumnOcultar(tableColumn);
		}
			
		} else {
		}			
					
		if(!this.detalleactivofijoSessionBean.getEsGuardarRelacionado()
			&& !this.esParaBusquedaForeignKey) {
			

			if(this.isTienePermisosMantenimientoActivoFijo && this.detalleactivofijoConstantesFunciones.mostrarMantenimientoActivoFijoDetalleActivoFijo && !DetalleActivoFijoConstantesFunciones.ISGUARDARREL) {
				tableColumn= new TableColumn();
				tableColumn.setIdentifier("Mantenimiento Activo Fijos");
				tableColumn.setHeaderValue("Mantenimiento Activo Fijos");
				tableColumn.setCellRenderer(new MantenimientoActivoFijoTableCell(detalleactivofijoConstantesFunciones.resaltarMantenimientoActivoFijoDetalleActivoFijo,this,this.detalleactivofijoConstantesFunciones.activarMantenimientoActivoFijoDetalleActivoFijo));
				tableColumn.setCellEditor(new MantenimientoActivoFijoTableCell(detalleactivofijoConstantesFunciones.resaltarMantenimientoActivoFijoDetalleActivoFijo,this,this.detalleactivofijoConstantesFunciones.activarMantenimientoActivoFijoDetalleActivoFijo));

				tableColumn.setPreferredWidth(Constantes.ISWING_ANCHO_CONTROL + FuncionesSwing.getValorProporcion(Constantes.ISWING_ANCHO_CONTROL,0));
				tableColumn.setWidth(Constantes.ISWING_ANCHO_CONTROL + FuncionesSwing.getValorProporcion(Constantes.ISWING_ANCHO_CONTROL,0));
				tableColumn.setMinWidth(Constantes.ISWING_ANCHO_CONTROL + FuncionesSwing.getValorProporcion(Constantes.ISWING_ANCHO_CONTROL,0));

				this.iWidthTableDefinicion+=Constantes.ISWING_ANCHO_CONTROL + FuncionesSwing.getValorProporcion(Constantes.ISWING_ANCHO_CONTROL,0);

				this.jTableDatosDetalleActivoFijo.addColumn(tableColumn);
			}

			if(this.isTienePermisosServicioTransporte && this.detalleactivofijoConstantesFunciones.mostrarServicioTransporteDetalleActivoFijo && !DetalleActivoFijoConstantesFunciones.ISGUARDARREL) {
				tableColumn= new TableColumn();
				tableColumn.setIdentifier("Servicio Transportes");
				tableColumn.setHeaderValue("Servicio Transportes");
				tableColumn.setCellRenderer(new ServicioTransporteTableCell(detalleactivofijoConstantesFunciones.resaltarServicioTransporteDetalleActivoFijo,this,this.detalleactivofijoConstantesFunciones.activarServicioTransporteDetalleActivoFijo));
				tableColumn.setCellEditor(new ServicioTransporteTableCell(detalleactivofijoConstantesFunciones.resaltarServicioTransporteDetalleActivoFijo,this,this.detalleactivofijoConstantesFunciones.activarServicioTransporteDetalleActivoFijo));

				tableColumn.setPreferredWidth(Constantes.ISWING_ANCHO_CONTROL + FuncionesSwing.getValorProporcion(Constantes.ISWING_ANCHO_CONTROL,0));
				tableColumn.setWidth(Constantes.ISWING_ANCHO_CONTROL + FuncionesSwing.getValorProporcion(Constantes.ISWING_ANCHO_CONTROL,0));
				tableColumn.setMinWidth(Constantes.ISWING_ANCHO_CONTROL + FuncionesSwing.getValorProporcion(Constantes.ISWING_ANCHO_CONTROL,0));

				this.iWidthTableDefinicion+=Constantes.ISWING_ANCHO_CONTROL + FuncionesSwing.getValorProporcion(Constantes.ISWING_ANCHO_CONTROL,0);

				this.jTableDatosDetalleActivoFijo.addColumn(tableColumn);
			}

			if(this.isTienePermisosMovimientoActivoFijo && this.detalleactivofijoConstantesFunciones.mostrarMovimientoActivoFijoDetalleActivoFijo && !DetalleActivoFijoConstantesFunciones.ISGUARDARREL) {
				tableColumn= new TableColumn();
				tableColumn.setIdentifier("Movimiento Activo Fijos");
				tableColumn.setHeaderValue("Movimiento Activo Fijos");
				tableColumn.setCellRenderer(new MovimientoActivoFijoTableCell(detalleactivofijoConstantesFunciones.resaltarMovimientoActivoFijoDetalleActivoFijo,this,this.detalleactivofijoConstantesFunciones.activarMovimientoActivoFijoDetalleActivoFijo));
				tableColumn.setCellEditor(new MovimientoActivoFijoTableCell(detalleactivofijoConstantesFunciones.resaltarMovimientoActivoFijoDetalleActivoFijo,this,this.detalleactivofijoConstantesFunciones.activarMovimientoActivoFijoDetalleActivoFijo));

				tableColumn.setPreferredWidth(Constantes.ISWING_ANCHO_CONTROL + FuncionesSwing.getValorProporcion(Constantes.ISWING_ANCHO_CONTROL,0));
				tableColumn.setWidth(Constantes.ISWING_ANCHO_CONTROL + FuncionesSwing.getValorProporcion(Constantes.ISWING_ANCHO_CONTROL,0));
				tableColumn.setMinWidth(Constantes.ISWING_ANCHO_CONTROL + FuncionesSwing.getValorProporcion(Constantes.ISWING_ANCHO_CONTROL,0));

				this.iWidthTableDefinicion+=Constantes.ISWING_ANCHO_CONTROL + FuncionesSwing.getValorProporcion(Constantes.ISWING_ANCHO_CONTROL,0);

				this.jTableDatosDetalleActivoFijo.addColumn(tableColumn);
			}

			if(this.isTienePermisosVehiculo && this.detalleactivofijoConstantesFunciones.mostrarVehiculoDetalleActivoFijo && !DetalleActivoFijoConstantesFunciones.ISGUARDARREL) {
				tableColumn= new TableColumn();
				tableColumn.setIdentifier("Vehiculos");
				tableColumn.setHeaderValue("Vehiculos");
				tableColumn.setCellRenderer(new VehiculoTableCell(detalleactivofijoConstantesFunciones.resaltarVehiculoDetalleActivoFijo,this,this.detalleactivofijoConstantesFunciones.activarVehiculoDetalleActivoFijo));
				tableColumn.setCellEditor(new VehiculoTableCell(detalleactivofijoConstantesFunciones.resaltarVehiculoDetalleActivoFijo,this,this.detalleactivofijoConstantesFunciones.activarVehiculoDetalleActivoFijo));

				tableColumn.setPreferredWidth(Constantes.ISWING_ANCHO_CONTROL + FuncionesSwing.getValorProporcion(Constantes.ISWING_ANCHO_CONTROL,0));
				tableColumn.setWidth(Constantes.ISWING_ANCHO_CONTROL + FuncionesSwing.getValorProporcion(Constantes.ISWING_ANCHO_CONTROL,0));
				tableColumn.setMinWidth(Constantes.ISWING_ANCHO_CONTROL + FuncionesSwing.getValorProporcion(Constantes.ISWING_ANCHO_CONTROL,0));

				this.iWidthTableDefinicion+=Constantes.ISWING_ANCHO_CONTROL + FuncionesSwing.getValorProporcion(Constantes.ISWING_ANCHO_CONTROL,0);

				this.jTableDatosDetalleActivoFijo.addColumn(tableColumn);
			}

			if(this.isTienePermisosMetodoDepreciacion && this.detalleactivofijoConstantesFunciones.mostrarMetodoDepreciacionDetalleActivoFijo && !DetalleActivoFijoConstantesFunciones.ISGUARDARREL) {
				tableColumn= new TableColumn();
				tableColumn.setIdentifier("Metodo Depreciaciones");
				tableColumn.setHeaderValue("Metodo Depreciaciones");
				tableColumn.setCellRenderer(new MetodoDepreciacionTableCell(detalleactivofijoConstantesFunciones.resaltarMetodoDepreciacionDetalleActivoFijo,this,this.detalleactivofijoConstantesFunciones.activarMetodoDepreciacionDetalleActivoFijo));
				tableColumn.setCellEditor(new MetodoDepreciacionTableCell(detalleactivofijoConstantesFunciones.resaltarMetodoDepreciacionDetalleActivoFijo,this,this.detalleactivofijoConstantesFunciones.activarMetodoDepreciacionDetalleActivoFijo));

				tableColumn.setPreferredWidth(Constantes.ISWING_ANCHO_CONTROL + FuncionesSwing.getValorProporcion(Constantes.ISWING_ANCHO_CONTROL,0));
				tableColumn.setWidth(Constantes.ISWING_ANCHO_CONTROL + FuncionesSwing.getValorProporcion(Constantes.ISWING_ANCHO_CONTROL,0));
				tableColumn.setMinWidth(Constantes.ISWING_ANCHO_CONTROL + FuncionesSwing.getValorProporcion(Constantes.ISWING_ANCHO_CONTROL,0));

				this.iWidthTableDefinicion+=Constantes.ISWING_ANCHO_CONTROL + FuncionesSwing.getValorProporcion(Constantes.ISWING_ANCHO_CONTROL,0);

				this.jTableDatosDetalleActivoFijo.addColumn(tableColumn);
			}

			if(this.isTienePermisosResponsableActivoFijo && this.detalleactivofijoConstantesFunciones.mostrarResponsableActivoFijoDetalleActivoFijo && !DetalleActivoFijoConstantesFunciones.ISGUARDARREL) {
				tableColumn= new TableColumn();
				tableColumn.setIdentifier("Responsable Activo Fijos");
				tableColumn.setHeaderValue("Responsable Activo Fijos");
				tableColumn.setCellRenderer(new ResponsableActivoFijoTableCell(detalleactivofijoConstantesFunciones.resaltarResponsableActivoFijoDetalleActivoFijo,this,this.detalleactivofijoConstantesFunciones.activarResponsableActivoFijoDetalleActivoFijo));
				tableColumn.setCellEditor(new ResponsableActivoFijoTableCell(detalleactivofijoConstantesFunciones.resaltarResponsableActivoFijoDetalleActivoFijo,this,this.detalleactivofijoConstantesFunciones.activarResponsableActivoFijoDetalleActivoFijo));

				tableColumn.setPreferredWidth(Constantes.ISWING_ANCHO_CONTROL + FuncionesSwing.getValorProporcion(Constantes.ISWING_ANCHO_CONTROL,0));
				tableColumn.setWidth(Constantes.ISWING_ANCHO_CONTROL + FuncionesSwing.getValorProporcion(Constantes.ISWING_ANCHO_CONTROL,0));
				tableColumn.setMinWidth(Constantes.ISWING_ANCHO_CONTROL + FuncionesSwing.getValorProporcion(Constantes.ISWING_ANCHO_CONTROL,0));

				this.iWidthTableDefinicion+=Constantes.ISWING_ANCHO_CONTROL + FuncionesSwing.getValorProporcion(Constantes.ISWING_ANCHO_CONTROL,0);

				this.jTableDatosDetalleActivoFijo.addColumn(tableColumn);
			}

			if(this.isTienePermisosDepreciacionActivoFijo && this.detalleactivofijoConstantesFunciones.mostrarDepreciacionActivoFijoDetalleActivoFijo && !DetalleActivoFijoConstantesFunciones.ISGUARDARREL) {
				tableColumn= new TableColumn();
				tableColumn.setIdentifier("Depreciacion Activo Fijos");
				tableColumn.setHeaderValue("Depreciacion Activo Fijos");
				tableColumn.setCellRenderer(new DepreciacionActivoFijoTableCell(detalleactivofijoConstantesFunciones.resaltarDepreciacionActivoFijoDetalleActivoFijo,this,this.detalleactivofijoConstantesFunciones.activarDepreciacionActivoFijoDetalleActivoFijo));
				tableColumn.setCellEditor(new DepreciacionActivoFijoTableCell(detalleactivofijoConstantesFunciones.resaltarDepreciacionActivoFijoDetalleActivoFijo,this,this.detalleactivofijoConstantesFunciones.activarDepreciacionActivoFijoDetalleActivoFijo));

				tableColumn.setPreferredWidth(Constantes.ISWING_ANCHO_CONTROL + FuncionesSwing.getValorProporcion(Constantes.ISWING_ANCHO_CONTROL,0));
				tableColumn.setWidth(Constantes.ISWING_ANCHO_CONTROL + FuncionesSwing.getValorProporcion(Constantes.ISWING_ANCHO_CONTROL,0));
				tableColumn.setMinWidth(Constantes.ISWING_ANCHO_CONTROL + FuncionesSwing.getValorProporcion(Constantes.ISWING_ANCHO_CONTROL,0));

				this.iWidthTableDefinicion+=Constantes.ISWING_ANCHO_CONTROL + FuncionesSwing.getValorProporcion(Constantes.ISWING_ANCHO_CONTROL,0);

				this.jTableDatosDetalleActivoFijo.addColumn(tableColumn);
			}

			if(this.isTienePermisosGastoDepreciacionCentroCosto && this.detalleactivofijoConstantesFunciones.mostrarGastoDepreciacionCentroCostoDetalleActivoFijo && !DetalleActivoFijoConstantesFunciones.ISGUARDARREL) {
				tableColumn= new TableColumn();
				tableColumn.setIdentifier("Gasto Depreciacion Centro Costos");
				tableColumn.setHeaderValue("Gasto Depreciacion Centro Costos");
				tableColumn.setCellRenderer(new GastoDepreciacionCentroCostoTableCell(detalleactivofijoConstantesFunciones.resaltarGastoDepreciacionCentroCostoDetalleActivoFijo,this,this.detalleactivofijoConstantesFunciones.activarGastoDepreciacionCentroCostoDetalleActivoFijo));
				tableColumn.setCellEditor(new GastoDepreciacionCentroCostoTableCell(detalleactivofijoConstantesFunciones.resaltarGastoDepreciacionCentroCostoDetalleActivoFijo,this,this.detalleactivofijoConstantesFunciones.activarGastoDepreciacionCentroCostoDetalleActivoFijo));

				tableColumn.setPreferredWidth(Constantes.ISWING_ANCHO_CONTROL + FuncionesSwing.getValorProporcion(Constantes.ISWING_ANCHO_CONTROL,0));
				tableColumn.setWidth(Constantes.ISWING_ANCHO_CONTROL + FuncionesSwing.getValorProporcion(Constantes.ISWING_ANCHO_CONTROL,0));
				tableColumn.setMinWidth(Constantes.ISWING_ANCHO_CONTROL + FuncionesSwing.getValorProporcion(Constantes.ISWING_ANCHO_CONTROL,0));

				this.iWidthTableDefinicion+=Constantes.ISWING_ANCHO_CONTROL + FuncionesSwing.getValorProporcion(Constantes.ISWING_ANCHO_CONTROL,0);

				this.jTableDatosDetalleActivoFijo.addColumn(tableColumn);
			}

			if(this.isTienePermisosParteActivoFijo && this.detalleactivofijoConstantesFunciones.mostrarParteActivoFijoDetalleActivoFijo && !DetalleActivoFijoConstantesFunciones.ISGUARDARREL) {
				tableColumn= new TableColumn();
				tableColumn.setIdentifier("Parte Activo Fijos");
				tableColumn.setHeaderValue("Parte Activo Fijos");
				tableColumn.setCellRenderer(new ParteActivoFijoTableCell(detalleactivofijoConstantesFunciones.resaltarParteActivoFijoDetalleActivoFijo,this,this.detalleactivofijoConstantesFunciones.activarParteActivoFijoDetalleActivoFijo));
				tableColumn.setCellEditor(new ParteActivoFijoTableCell(detalleactivofijoConstantesFunciones.resaltarParteActivoFijoDetalleActivoFijo,this,this.detalleactivofijoConstantesFunciones.activarParteActivoFijoDetalleActivoFijo));

				tableColumn.setPreferredWidth(Constantes.ISWING_ANCHO_CONTROL + FuncionesSwing.getValorProporcion(Constantes.ISWING_ANCHO_CONTROL,0));
				tableColumn.setWidth(Constantes.ISWING_ANCHO_CONTROL + FuncionesSwing.getValorProporcion(Constantes.ISWING_ANCHO_CONTROL,0));
				tableColumn.setMinWidth(Constantes.ISWING_ANCHO_CONTROL + FuncionesSwing.getValorProporcion(Constantes.ISWING_ANCHO_CONTROL,0));

				this.iWidthTableDefinicion+=Constantes.ISWING_ANCHO_CONTROL + FuncionesSwing.getValorProporcion(Constantes.ISWING_ANCHO_CONTROL,0);

				this.jTableDatosDetalleActivoFijo.addColumn(tableColumn);
			}
		}
		
		if(true) {
			String sLabelColumnAccion="Editar";
			String sLabelColumnAccionEli="Eli";
			
			if(this.esParaBusquedaForeignKey)  {
				sLabelColumnAccion="Seleccionar";
				
				//LO MISMO QUE ELSE
				tableColumn= new TableColumn();
				tableColumn.setIdentifier(sLabelColumnAccion);
				tableColumn.setHeaderValue(sLabelColumnAccion);
				tableColumn.setCellRenderer(new IdTableCell(this,false,false,this.detalleactivofijoSessionBean.getEsGuardarRelacionado(),iSizeTabla));
				tableColumn.setCellEditor(new IdTableCell(this,false,false,this.detalleactivofijoSessionBean.getEsGuardarRelacionado(),iSizeTabla));
	
				tableColumn.setPreferredWidth(Constantes.ISWING_ANCHO_COLUMNA); 	 
				tableColumn.setWidth(Constantes.ISWING_ANCHO_COLUMNA); 	 
				tableColumn.setMinWidth(Constantes.ISWING_ANCHO_COLUMNA); 
				tableColumn.setMaxWidth(Constantes.ISWING_ANCHO_COLUMNA); 
				
				this.iWidthTableDefinicion+=Constantes.ISWING_ANCHO_COLUMNA;
				
				this.jTableDatosDetalleActivoFijo.addColumn(tableColumn);
			
			} else {				
				
				//LO MISMO QUE IF
				
				tableColumn= new TableColumn();
				tableColumn.setIdentifier(sLabelColumnAccion);
				tableColumn.setHeaderValue(sLabelColumnAccion);
				tableColumn.setCellRenderer(new IdTableCell(this,false,false,this.detalleactivofijoSessionBean.getEsGuardarRelacionado(),iSizeTabla));
				tableColumn.setCellEditor(new IdTableCell(this,false,false,this.detalleactivofijoSessionBean.getEsGuardarRelacionado(),iSizeTabla));
		
				tableColumn.setPreferredWidth(Constantes.ISWING_ANCHO_COLUMNA); 	 
				tableColumn.setWidth(Constantes.ISWING_ANCHO_COLUMNA); 	 
				tableColumn.setMinWidth(Constantes.ISWING_ANCHO_COLUMNA); 
				tableColumn.setMaxWidth(Constantes.ISWING_ANCHO_COLUMNA); 
				
				this.iWidthTableDefinicion+=Constantes.ISWING_ANCHO_COLUMNA;
				
				this.jTableDatosDetalleActivoFijo.addColumn(tableColumn);				
					
				//ELIMINAR
				if(this.isPermisoEliminarDetalleActivoFijo && this.isPermisoGuardarCambiosDetalleActivoFijo) {
					tableColumn= new TableColumn();
					tableColumn.setIdentifier(Constantes2.S_ELI);
					tableColumn.setHeaderValue(sLabelColumnAccionEli);
					tableColumn.setCellRenderer(new IdTableCell(this,false,true,this.detalleactivofijoSessionBean.getEsGuardarRelacionado(),iSizeTabla));
					tableColumn.setCellEditor(new IdTableCell(this,false,true,this.detalleactivofijoSessionBean.getEsGuardarRelacionado(),iSizeTabla));
			
					tableColumn.setPreferredWidth(65); 	 
					tableColumn.setWidth(65); 	 
					tableColumn.setMinWidth(65); 
					tableColumn.setMaxWidth(65);
					
					this.iWidthTableDefinicion+=65;
						
					this.jTableDatosDetalleActivoFijo.addColumn(tableColumn);
				}
			}			
						
			if(this.conMaximoRelaciones && this.detalleactivofijoSessionBean.getConGuardarRelaciones()) {
				if(this.conFuncionalidadRelaciones) {
					tableColumn= new TableColumn();
					tableColumn.setIdentifier("Editar Rel");
					tableColumn.setHeaderValue("Editar Rel");
					tableColumn.setCellRenderer(new IdTableCell(this,true,false,iSizeTabla));
					tableColumn.setCellEditor(new IdTableCell(this,true,false,iSizeTabla));
		
					tableColumn.setPreferredWidth(Constantes.ISWING_ANCHO_COLUMNA); 	 
					tableColumn.setWidth(Constantes.ISWING_ANCHO_COLUMNA); 	 
					tableColumn.setMinWidth(Constantes.ISWING_ANCHO_COLUMNA); 
					tableColumn.setMaxWidth(Constantes.ISWING_ANCHO_COLUMNA); 
					
					this.iWidthTableDefinicion+=Constantes.ISWING_ANCHO_COLUMNA;
				
					this.jTableDatosDetalleActivoFijo.addColumn(tableColumn);
				}
			}
			
			/*
			tableColumn= new TableColumn();
			tableColumn.setIdentifier(Constantes2.S_SELECCIONAR);
			tableColumn.setHeaderValue(Constantes2.S_SELECCIONAR);
			tableColumn.setCellRenderer(new IdSeleccionarTableCell(this));
			tableColumn.setCellEditor(new IdSeleccionarTableCell(this));
			
			tableColumn.setPreferredWidth(30); 	 
			tableColumn.setWidth(30); 	 
			tableColumn.setMinWidth(30); 
			
			this.iWidthTableDefinicion+=30;
			
			this.jTableDatosDetalleActivoFijo.addColumn(tableColumn);
			*/
		}
		
		Integer iUltimaColumna=0;//1
		Integer iNuevaPosicionColumna=0;
		
		
		//PERMITE ELIMINAR SIMPLE
		if(!this.esParaBusquedaForeignKey)  {
			if(this.isPermisoEliminarDetalleActivoFijo && this.isPermisoGuardarCambiosDetalleActivoFijo) {
				iUltimaColumna++;
			}	
		}
		
		//PERMITE EDITAR SIMPLE
		iUltimaColumna++;	
		
				
		if(this.conFuncionalidadRelaciones) {
			if(this.conMaximoRelaciones && this.detalleactivofijoSessionBean.getConGuardarRelaciones()) {			
				//PERMITE EDITAR RELACIONES
				iUltimaColumna++;//2
			}
		}
		
		//MOVIA SELECCIONAR
		//iUltimaColumna++;
		
		if(!this.esParaBusquedaForeignKey)  {
			if(this.isPermisoEliminarDetalleActivoFijo && this.isPermisoGuardarCambiosDetalleActivoFijo) {
				//REUBICA ELIMINAR SIMPLE
				jTableDatosDetalleActivoFijo.moveColumn(this.jTableDatosDetalleActivoFijo.getColumnModel().getColumnCount()-iUltimaColumna, iNuevaPosicionColumna++);//-1,-2 o -3
					
				iUltimaColumna--;
			}
		}
		//REUBICA EDITAR SIMPLE
		jTableDatosDetalleActivoFijo.moveColumn(this.jTableDatosDetalleActivoFijo.getColumnModel().getColumnCount()-iUltimaColumna, iNuevaPosicionColumna++);//-1,-2 o -3				
		
		
		if(this.conFuncionalidadRelaciones) {
			if(this.conMaximoRelaciones && this.detalleactivofijoSessionBean.getConGuardarRelaciones()) {	
				if(iUltimaColumna>1) {
					iUltimaColumna--;
				}
				
				//iNuevaPosicionColumna++;
				
				//REUBICA EDITAR RELACIONES
				jTableDatosDetalleActivoFijo.moveColumn(this.jTableDatosDetalleActivoFijo.getColumnModel().getColumnCount()-iUltimaColumna, iNuevaPosicionColumna++);//-1
			}
		}
		
		
		//REUBICABA SELECCIONAR
		/*
		if(iUltimaColumna>1) {
			iUltimaColumna--;
		}
		
		//iNuevaPosicionColumna++;
			
		//REUBICA SELECCIONAR FILA CHECK
		jTableDatosDetalleActivoFijo.moveColumn(this.jTableDatosDetalleActivoFijo.getColumnModel().getColumnCount()-iUltimaColumna, iNuevaPosicionColumna++);//-1		
		*/
		
		//DEFINEN HEADERS
		final TableCellRenderer tableHeaderDefaultCellRenderer = this.jTableDatosDetalleActivoFijo.getTableHeader().getDefaultRenderer();
		
		this.jTableDatosDetalleActivoFijo.getTableHeader().setDefaultRenderer(new TableCellRendererHeader(this.jTableDatosDetalleActivoFijo,tableHeaderDefaultCellRenderer));
	    
		TableColumn column=null;
		
		if(!DetalleActivoFijoJInternalFrame.ISBINDING_MANUAL_TABLA) {
			for(int i = 0; i < this.jTableDatosDetalleActivoFijo.getColumnModel().getColumnCount(); i++) { 
				column = this.jTableDatosDetalleActivoFijo.getColumnModel().getColumn(i); 
				
				if(column.getIdentifier()!=null) {
					//SI SE UTILIZA UN HEADER ES GENERICO
					//column.setHeaderRenderer(new HeaderRenderer(column.getIdentifier().toString()));
				}
				
				if(column.getIdentifier()!=null && column.getIdentifier().equals(Constantes2.S_ELI)) {
					continue;
				}
				
				if(column.getIdentifier()!=null && column.getIdentifier().equals(Constantes2.S_SELECCIONAR)) {
					if(!DetalleActivoFijoJInternalFrame.ISBINDING_MANUAL_TABLA) {
						column.setPreferredWidth(50); 	 
						column.setWidth(50); 	 
						column.setMinWidth(50); 	
						column.setMaxWidth(50); 
						
						this.iWidthTableDefinicion+=50;
					}
					
				} else {
					if(!DetalleActivoFijoJInternalFrame.ISBINDING_MANUAL_TABLA) {
						column.setPreferredWidth(Constantes.ISWING_ANCHO_COLUMNA); 	 
						column.setWidth(Constantes.ISWING_ANCHO_COLUMNA); 	 
						column.setMinWidth(Constantes.ISWING_ANCHO_COLUMNA); 	
						column.setMaxWidth(Constantes.ISWING_ANCHO_COLUMNA); 	
						
						this.iWidthTableDefinicion+=Constantes.ISWING_ANCHO_COLUMNA;
					}
				}
			}
		}
		
		this.jTableDatosDetalleActivoFijo.setSelectionBackground(FuncionesSwing.getColorSelectedBackground());
		this.jTableDatosDetalleActivoFijo.setSelectionForeground(FuncionesSwing.getColorSelectedForeground());
		
		/*
		this.jTableDatosDetalleActivoFijo.setDefaultRenderer(Object.class, new DefaultTableCellRenderer() {
			private static final long serialVersionUID = 1L;
			
		    @Override
		    public Component getTableCellRendererComponent(JTable table, Object value, boolean isSelected, boolean hasFocus, int row, int column) {
		        final Component component= super.getTableCellRendererComponent(table, value, isSelected, hasFocus, row, column);
		        //POR DEFECTO ES MEJOR, SE PIERDE DATOS AL SELECCIONAR BLANCO LETRAS BLANCAS
				component.setBackground(row % 2 == 0 ? FuncionesSwing.getColorTextFields(Constantes2.S_FONDOCONTROL_COLOR) : Funciones2.getColorFilaTabla2()); //FuncionesSwing.getColorTextFields(Constantes2.S_FONDOCONTROL_COLOR)
				component.setForeground(Funciones2.getColorTextoFilaTabla1());
				
				try {
		        	int iSize=-999;
		        	
		        	if(conTotales) {
						//FILA TOTALES OTRO COLOR, SI TABLA NO ES UNO A UNO
			        	if(Constantes.ISUSAEJBLOGICLAYER) {
							iSize=detalleactivofijoLogic.getDetalleActivoFijos().size()-1;
								
						} else if(Constantes.ISUSAEJBREMOTE || Constantes.ISUSAEJBHOME) {
							iSize=detalleactivofijos.size()-1;
						}
						
						if(iSize==row) {
							component.setBackground(Funciones2.getColorFilaTablaTotales());
						}
		        	}
					
					//POR EFICIENCIA NO UTILIZAR					
					//if (component instanceof JComponent) {
		            //    JComponent jcomponent = (JComponent) component;		                 		                
		        	//}				
					
				} catch (Exception e) {
					e.printStackTrace();
				}
				
		        return component;
		    }
		});
		*/
		
		//ESTA EN LA DEFINICION DE LA TABLA
		//this.jTableDatosDetalleActivoFijo.setRowHeight(Constantes.ISWING_ALTO_FILA_TABLA);
		
		/*
		column=this.jTableDatosDetalleActivoFijo.getColumnModel().getColumn(Funciones2.getColumnIndexByName(this.jTableDatosSistema,Constantes2.S_SELECCIONAR));
		
		if(column!=null) {
			column.setPreferredWidth(25); 	 
			column.setWidth(25); 	 
			column.setMinWidth(25); 	
		}
		*/
			
			//CopyTableToTableTotal();
		} else {
			
			this.actualizarVisualTableDatosDetalleActivoFijo();
			
		}
	}
	
	/*
	//COPY_TABLES
	/* FALTARIA RESOLVER:
	   1 SOLO SCROLL PARA 2 TABLAS
	   COPIA EXACTA DE COLUMNAS DE UNA TABLA A OTRA, SI SE MODIFICA TAMANIO TAMBIEN LA OTRA
	*/
	
	public void jButtonIdActionPerformed(ActionEvent evt,int rowIndex,Boolean esRelaciones,Boolean esEliminar) { 
		try {
			if(!esEliminar) {
				this.estaModoSeleccionar=true;
				
				//this.isEsNuevoDetalleActivoFijo=false;
					
				DetalleActivoFijoBeanSwingJInternalFrameAdditional.procesarEventosVista(this.parametroGeneralUsuario,this.moduloActual,this.opcionActual,this.usuarioActual,this,FuncionTipo.BEFORE,ControlTipo.FORM,EventoTipo.LOAD,EventoSubTipo.SELECTED,"FORM",this.detalleactivofijo,new Object(),this.detalleactivofijoParameterGeneral,this.detalleactivofijoReturnGeneral);
			
				if(this.detalleactivofijoSessionBean.getConGuardarRelaciones()) {
					this.dStart=(double)System.currentTimeMillis();
				}
				
				if(this.jInternalFrameDetalleFormDetalleActivoFijo==null) {
					this.inicializarFormDetalle();
				}
				
				this.inicializarInvalidValues();
				
				int intSelectedRow = 0;
				
				if(rowIndex>=0) {
					intSelectedRow=rowIndex;
					this.jTableDatosDetalleActivoFijo.getSelectionModel().setSelectionInterval(intSelectedRow, intSelectedRow);
				} else {	
					intSelectedRow=this.jTableDatosDetalleActivoFijo.getSelectedRow();	       
				}
				
				//ARCHITECTURE
				if(Constantes.ISUSAEJBLOGICLAYER) {
					this.detalleactivofijo =(DetalleActivoFijo) this.detalleactivofijoLogic.getDetalleActivoFijos().toArray()[this.jTableDatosDetalleActivoFijo.convertRowIndexToModel(intSelectedRow)];
				} else if(Constantes.ISUSAEJBREMOTE || Constantes.ISUSAEJBHOME ) {
					this.detalleactivofijo =(DetalleActivoFijo) this.detalleactivofijos.toArray()[this.jTableDatosDetalleActivoFijo.convertRowIndexToModel(intSelectedRow)];
				}
				//ARCHITECTURE
				
				//PUEDE SER PARA DUPLICADO O NUEVO TABLA
				
				if(this.detalleactivofijo.getsType().equals("DUPLICADO")
				   || this.detalleactivofijo.getsType().equals("NUEVO_GUARDAR_CAMBIOS")) {
					
					this.isEsNuevoDetalleActivoFijo=true;
				
				} else {
					this.isEsNuevoDetalleActivoFijo=false;	
				}
				
				//CONTROL VERSION ANTERIOR
				/*
				if(!this.detalleactivofijoSessionBean.getEsGuardarRelacionado()) {
					if(this.detalleactivofijo.getId()>=0 && !this.detalleactivofijo.getIsNew()) {						
						this.isEsNuevoDetalleActivoFijo=false;
						
					} else {
						this.isEsNuevoDetalleActivoFijo=true;
					}
					
				} else {
					//CONTROLAR PARA RELACIONADO
				}
				*/
				
				//ESTABLECE SI ES RELACIONADO O NO 
				this.habilitarDeshabilitarTipoMantenimientoDetalleActivoFijo(esRelaciones);						
				
				this.seleccionarDetalleActivoFijo(evt,null,rowIndex);
				
				//SELECCIONA ACTUAL PERO AUN NO SE HA INGRESADO AL SISTEMA
				//SE DESHABILITA POR GUARDAR CAMBIOS
				/*
				if(this.detalleactivofijo.getId()<0) {
					this.isEsNuevoDetalleActivoFijo=true;
				}
				*/
				
				if(!this.esParaBusquedaForeignKey) {
					this.modificarDetalleActivoFijo(evt,rowIndex,esRelaciones);
				} else {
					this.seleccionarDetalleActivoFijo(evt,rowIndex);
				}	
				
				if(this.detalleactivofijoSessionBean.getConGuardarRelaciones()) {
					this.dEnd=(double)System.currentTimeMillis();					
					this.dDif=this.dEnd - this.dStart;
					
					if(Constantes.ISDEVELOPING) {
						System.out.println("Tiempo(ms) Seleccion DetalleActivoFijo: " + this.dDif); 
					}
				}								
				
				DetalleActivoFijoBeanSwingJInternalFrameAdditional.procesarEventosVista(this.parametroGeneralUsuario,this.moduloActual,this.opcionActual,this.usuarioActual,this,FuncionTipo.AFTER,ControlTipo.FORM,EventoTipo.LOAD,EventoSubTipo.SELECTED,"FORM",this.detalleactivofijo,new Object(),this.detalleactivofijoParameterGeneral,this.detalleactivofijoReturnGeneral);
				
			} else {
				this.estaModoEliminarGuardarCambios=true;
				
				this.seleccionarDetalleActivoFijo(evt,null,rowIndex);
				
				if(this.permiteMantenimiento(this.detalleactivofijo)) {
					if(this.detalleactivofijo.getId()>0) {
						this.detalleactivofijo.setIsDeleted(true);
						
						this.detalleactivofijosEliminados.add(this.detalleactivofijo);
					}
					
					if(Constantes.ISUSAEJBLOGICLAYER) {				
						this.detalleactivofijoLogic.getDetalleActivoFijos().remove(this.detalleactivofijo);
					} else if(Constantes.ISUSAEJBREMOTE||Constantes.ISUSAEJBHOME) {
						this.detalleactivofijos.remove(this.detalleactivofijo);				
					}
					
					
					((DetalleActivoFijoModel) this.jTableDatosDetalleActivoFijo.getModel()).fireTableRowsDeleted(rowIndex,rowIndex);
					
					this.actualizarFilaTotales();
					
					this.inicializarActualizarBindingTablaDetalleActivoFijo(false);					
				}								
			}
			
		} catch(Exception e) {
			FuncionesSwing.manageException2(this, e,logger,DetalleActivoFijoConstantesFunciones.CLASSNAME);
			
		} finally {
			this.estaModoSeleccionar=false;				
			this.estaModoEliminarGuardarCambios=false;
		}
	}
	
	
	public void seleccionarDetalleActivoFijo(ActionEvent evt,javax.swing.event.ListSelectionEvent evt2,int rowIndex) throws Exception { 
		try {
			//SI PUEDE SER NUEVO Y SELECCIONAR (PARA DUPLICAR Y NUEVO TABLA)
			//if(!this.isEsNuevoDetalleActivoFijo) {
			
			if(this.jInternalFrameDetalleFormDetalleActivoFijo==null) { //if(!this.conCargarFormDetalle) {
				this.inicializarFormDetalle();
			}
			
				int intSelectedRow = 0;
				
				if(rowIndex>=0) {
					intSelectedRow=rowIndex;
					this.jTableDatosDetalleActivoFijo.getSelectionModel().setSelectionInterval(intSelectedRow, intSelectedRow);
				} else {	
					intSelectedRow=this.jTableDatosDetalleActivoFijo.getSelectedRow();	       
				}
				
				//CUANDO SE RECARGA TABLA TAMBIEN SE SELECCIONA PERO CON -1 POR LO QUE SE NECESITA VALIDAR ANTES
				if(intSelectedRow<0) {
					return;
				}
				
				//ARCHITECTURE
				if(Constantes.ISUSAEJBLOGICLAYER) {
					this.detalleactivofijo =(DetalleActivoFijo) this.detalleactivofijoLogic.getDetalleActivoFijos().toArray()[this.jTableDatosDetalleActivoFijo.convertRowIndexToModel(intSelectedRow)];
				} else if(Constantes.ISUSAEJBREMOTE || Constantes.ISUSAEJBHOME ) {
					this.detalleactivofijo =(DetalleActivoFijo) this.detalleactivofijos.toArray()[this.jTableDatosDetalleActivoFijo.convertRowIndexToModel(intSelectedRow)];
				}
				
				if(DetalleActivoFijoJInternalFrame.ISBINDING_MANUAL_TABLA) {
					this.setVariablesObjetoActualToFormularioDetalleActivoFijo(this.detalleactivofijo);
				}
				
				//ARCHITECTURE
				try {
					

					//Empresa
					if(!this.detalleactivofijoConstantesFunciones.cargarid_empresaDetalleActivoFijo || this.detalleactivofijoConstantesFunciones.event_dependid_empresaDetalleActivoFijo) {
						//this.cargarCombosEmpresasForeignKeyLista(" where id="+this.detalleactivofijo.getid_empresa());
									//this.inicializarActualizarBindingDetalleActivoFijo(false,false);
						this.empresasForeignKey=new ArrayList<Empresa>();

						if(detalleactivofijo.getEmpresa()!=null) {
							this.empresasForeignKey.add(detalleactivofijo.getEmpresa());
						}

						this.addItemDefectoCombosForeignKeyEmpresa();
						this.cargarCombosFrameEmpresasForeignKey("Todos");
					}
					this.setActualEmpresaForeignKey(this.detalleactivofijo.getid_empresa(),false,"Formulario");

					//Sucursal
					if(!this.detalleactivofijoConstantesFunciones.cargarid_sucursalDetalleActivoFijo || this.detalleactivofijoConstantesFunciones.event_dependid_sucursalDetalleActivoFijo) {
						//this.cargarCombosSucursalsForeignKeyLista(" where id="+this.detalleactivofijo.getid_sucursal());
									//this.inicializarActualizarBindingDetalleActivoFijo(false,false);
						this.sucursalsForeignKey=new ArrayList<Sucursal>();

						if(detalleactivofijo.getSucursal()!=null) {
							this.sucursalsForeignKey.add(detalleactivofijo.getSucursal());
						}

						this.addItemDefectoCombosForeignKeySucursal();
						this.cargarCombosFrameSucursalsForeignKey("Todos");
					}
					this.setActualSucursalForeignKey(this.detalleactivofijo.getid_sucursal(),false,"Formulario");

					//DetalleGrupoActivoFijo
					if(!this.detalleactivofijoConstantesFunciones.cargarid_detalle_grupo_activo_fijoDetalleActivoFijo || this.detalleactivofijoConstantesFunciones.event_dependid_detalle_grupo_activo_fijoDetalleActivoFijo) {
						//this.cargarCombosDetalleGrupoActivoFijosForeignKeyLista(" where id="+this.detalleactivofijo.getid_detalle_grupo_activo_fijo());
									//this.inicializarActualizarBindingDetalleActivoFijo(false,false);
						this.detallegrupoactivofijosForeignKey=new ArrayList<DetalleGrupoActivoFijo>();

						if(detalleactivofijo.getDetalleGrupoActivoFijo()!=null) {
							this.detallegrupoactivofijosForeignKey.add(detalleactivofijo.getDetalleGrupoActivoFijo());
						}

						this.addItemDefectoCombosForeignKeyDetalleGrupoActivoFijo();
						this.cargarCombosFrameDetalleGrupoActivoFijosForeignKey("Todos");
					}
					this.setActualDetalleGrupoActivoFijoForeignKey(this.detalleactivofijo.getid_detalle_grupo_activo_fijo(),false,"Formulario");

					//SubGrupoActivoFijo
					if(!this.detalleactivofijoConstantesFunciones.cargarid_sub_grupo_activo_fijoDetalleActivoFijo || this.detalleactivofijoConstantesFunciones.event_dependid_sub_grupo_activo_fijoDetalleActivoFijo) {
						//this.cargarCombosSubGrupoActivoFijosForeignKeyLista(" where id="+this.detalleactivofijo.getid_sub_grupo_activo_fijo());
									//this.inicializarActualizarBindingDetalleActivoFijo(false,false);
						this.subgrupoactivofijosForeignKey=new ArrayList<SubGrupoActivoFijo>();

						if(detalleactivofijo.getSubGrupoActivoFijo()!=null) {
							this.subgrupoactivofijosForeignKey.add(detalleactivofijo.getSubGrupoActivoFijo());
						}

						this.addItemDefectoCombosForeignKeySubGrupoActivoFijo();
						this.cargarCombosFrameSubGrupoActivoFijosForeignKey("Todos");
					}
					this.setActualSubGrupoActivoFijoForeignKey(this.detalleactivofijo.getid_sub_grupo_activo_fijo(),false,"Formulario");

					//TipoRamoActivoFijo
					if(!this.detalleactivofijoConstantesFunciones.cargarid_tipo_ramo_activo_fijoDetalleActivoFijo || this.detalleactivofijoConstantesFunciones.event_dependid_tipo_ramo_activo_fijoDetalleActivoFijo) {
						//this.cargarCombosTipoRamoActivoFijosForeignKeyLista(" where id="+this.detalleactivofijo.getid_tipo_ramo_activo_fijo());
									//this.inicializarActualizarBindingDetalleActivoFijo(false,false);
						this.tiporamoactivofijosForeignKey=new ArrayList<TipoRamoActivoFijo>();

						if(detalleactivofijo.getTipoRamoActivoFijo()!=null) {
							this.tiporamoactivofijosForeignKey.add(detalleactivofijo.getTipoRamoActivoFijo());
						}

						this.addItemDefectoCombosForeignKeyTipoRamoActivoFijo();
						this.cargarCombosFrameTipoRamoActivoFijosForeignKey("Todos");
					}
					this.setActualTipoRamoActivoFijoForeignKey(this.detalleactivofijo.getid_tipo_ramo_activo_fijo(),false,"Formulario");

					//TipoActivoFijoEmpresa
					if(!this.detalleactivofijoConstantesFunciones.cargarid_tipo_activo_fijo_empresaDetalleActivoFijo || this.detalleactivofijoConstantesFunciones.event_dependid_tipo_activo_fijo_empresaDetalleActivoFijo) {
						//this.cargarCombosTipoActivoFijoEmpresasForeignKeyLista(" where id="+this.detalleactivofijo.getid_tipo_activo_fijo_empresa());
									//this.inicializarActualizarBindingDetalleActivoFijo(false,false);
						this.tipoactivofijoempresasForeignKey=new ArrayList<TipoActivoFijoEmpresa>();

						if(detalleactivofijo.getTipoActivoFijoEmpresa()!=null) {
							this.tipoactivofijoempresasForeignKey.add(detalleactivofijo.getTipoActivoFijoEmpresa());
						}

						this.addItemDefectoCombosForeignKeyTipoActivoFijoEmpresa();
						this.cargarCombosFrameTipoActivoFijoEmpresasForeignKey("Todos");
					}
					this.setActualTipoActivoFijoEmpresaForeignKey(this.detalleactivofijo.getid_tipo_activo_fijo_empresa(),false,"Formulario");

					//TipoDepreciacionEmpresa
					if(!this.detalleactivofijoConstantesFunciones.cargarid_tipo_depreciacion_empresaDetalleActivoFijo || this.detalleactivofijoConstantesFunciones.event_dependid_tipo_depreciacion_empresaDetalleActivoFijo) {
						//this.cargarCombosTipoDepreciacionEmpresasForeignKeyLista(" where id="+this.detalleactivofijo.getid_tipo_depreciacion_empresa());
									//this.inicializarActualizarBindingDetalleActivoFijo(false,false);
						this.tipodepreciacionempresasForeignKey=new ArrayList<TipoDepreciacionEmpresa>();

						if(detalleactivofijo.getTipoDepreciacionEmpresa()!=null) {
							this.tipodepreciacionempresasForeignKey.add(detalleactivofijo.getTipoDepreciacionEmpresa());
						}

						this.addItemDefectoCombosForeignKeyTipoDepreciacionEmpresa();
						this.cargarCombosFrameTipoDepreciacionEmpresasForeignKey("Todos");
					}
					this.setActualTipoDepreciacionEmpresaForeignKey(this.detalleactivofijo.getid_tipo_depreciacion_empresa(),false,"Formulario");

					//EstadoActivoFijo
					if(!this.detalleactivofijoConstantesFunciones.cargarid_estado_activo_fijoDetalleActivoFijo || this.detalleactivofijoConstantesFunciones.event_dependid_estado_activo_fijoDetalleActivoFijo) {
						//this.cargarCombosEstadoActivoFijosForeignKeyLista(" where id="+this.detalleactivofijo.getid_estado_activo_fijo());
									//this.inicializarActualizarBindingDetalleActivoFijo(false,false);
						this.estadoactivofijosForeignKey=new ArrayList<EstadoActivoFijo>();

						if(detalleactivofijo.getEstadoActivoFijo()!=null) {
							this.estadoactivofijosForeignKey.add(detalleactivofijo.getEstadoActivoFijo());
						}

						this.addItemDefectoCombosForeignKeyEstadoActivoFijo();
						this.cargarCombosFrameEstadoActivoFijosForeignKey("Todos");
					}
					this.setActualEstadoActivoFijoForeignKey(this.detalleactivofijo.getid_estado_activo_fijo(),false,"Formulario");

					//Cliente
					if(!this.detalleactivofijoConstantesFunciones.cargarid_clienteDetalleActivoFijo || this.detalleactivofijoConstantesFunciones.event_dependid_clienteDetalleActivoFijo) {
						//this.cargarCombosClientesForeignKeyLista(" where id="+this.detalleactivofijo.getid_cliente());
									//this.inicializarActualizarBindingDetalleActivoFijo(false,false);
						this.clientesForeignKey=new ArrayList<Cliente>();

						if(detalleactivofijo.getCliente()!=null) {
							this.clientesForeignKey.add(detalleactivofijo.getCliente());
						}

						this.addItemDefectoCombosForeignKeyCliente();
						this.cargarCombosFrameClientesForeignKey("Todos");
					}
					this.setActualClienteForeignKey(this.detalleactivofijo.getid_cliente(),false,"Formulario");

					//PartidaPresu
					if(!this.detalleactivofijoConstantesFunciones.cargarid_partida_presuDetalleActivoFijo || this.detalleactivofijoConstantesFunciones.event_dependid_partida_presuDetalleActivoFijo) {
						//this.cargarCombosPartidaPresusForeignKeyLista(" where id="+this.detalleactivofijo.getid_partida_presu());
									//this.inicializarActualizarBindingDetalleActivoFijo(false,false);
						this.partidapresusForeignKey=new ArrayList<PartidaPresu>();

						if(detalleactivofijo.getPartidaPresu()!=null) {
							this.partidapresusForeignKey.add(detalleactivofijo.getPartidaPresu());
						}

						this.addItemDefectoCombosForeignKeyPartidaPresu();
						this.cargarCombosFramePartidaPresusForeignKey("Todos");
					}
					this.setActualPartidaPresuForeignKey(this.detalleactivofijo.getid_partida_presu(),false,"Formulario");
				} catch(Exception e) {
					throw e;
				}
				
				this.actualizarEstadoCeldasBotonesDetalleActivoFijo("s", this.isGuardarCambiosEnLote, this.isEsMantenimientoRelacionado);
				
				//NO FUNCIONA BINDING PERO SE MANTIENE
				this.inicializarActualizarBindingBotonesDetalleActivoFijo(false) ;
				
				//SI ES MANUAL
				//this.inicializarActualizarBindingBotonesManualDetalleActivoFijo() ;
			//}
		} catch(Exception e) {
			FuncionesSwing.manageException(this, e,logger,DetalleActivoFijoConstantesFunciones.CLASSNAME);
		}
	}
	
	public void setVariablesObjetoActualToFormularioTodoDetalleActivoFijo(DetalleActivoFijo detalleactivofijo) throws Exception { 
		this.setVariablesObjetoActualToFormularioTodoDetalleActivoFijo(detalleactivofijo,false,"NINGUNO");
	}
	
	public void setVariablesObjetoActualToFormularioTodoDetalleActivoFijo(DetalleActivoFijo detalleactivofijo,Boolean conCargarListasDesdeObjetoActual,String sTipoEvento) throws Exception { 
		this.setVariablesObjetoActualToFormularioDetalleActivoFijo(detalleactivofijo);
		
		if(conCargarListasDesdeObjetoActual) {
			this.setVariablesObjetoActualToListasForeignKeyDetalleActivoFijo(detalleactivofijo,sTipoEvento);
		}
		
		this.setVariablesObjetoActualToFormularioForeignKeyDetalleActivoFijo(detalleactivofijo);
	}
	
	public void setVariablesObjetoActualToFormularioDetalleActivoFijo(DetalleActivoFijo detalleactivofijo) throws Exception { 
		try {			
			Image imageActual=null;
			ImageIcon imageIcon = null;
			
			if(this.jInternalFrameDetalleFormDetalleActivoFijo==null) { //if(!this.conCargarFormDetalle) {
				this.inicializarFormDetalle();
			}
			
			
			this.jInternalFrameDetalleFormDetalleActivoFijo.jLabelidDetalleActivoFijo.setText(detalleactivofijo.getId().toString());
			this.jInternalFrameDetalleFormDetalleActivoFijo.jTextFieldcodigoDetalleActivoFijo.setText(detalleactivofijo.getcodigo());
			this.jInternalFrameDetalleFormDetalleActivoFijo.jTextAreanombreDetalleActivoFijo.setText(detalleactivofijo.getnombre());
			this.jInternalFrameDetalleFormDetalleActivoFijo.jTextFieldserieDetalleActivoFijo.setText(detalleactivofijo.getserie());
			this.jInternalFrameDetalleFormDetalleActivoFijo.jDateChooserfecha_compraDetalleActivoFijo.setDate(detalleactivofijo.getfecha_compra());
			this.jInternalFrameDetalleFormDetalleActivoFijo.jDateChooserfecha_mantenimientoDetalleActivoFijo.setDate(detalleactivofijo.getfecha_mantenimiento());
			this.jInternalFrameDetalleFormDetalleActivoFijo.jDateChooserfecha_correccionDetalleActivoFijo.setDate(detalleactivofijo.getfecha_correccion());
			this.jInternalFrameDetalleFormDetalleActivoFijo.jDateChooserfecha_depreciacionDetalleActivoFijo.setDate(detalleactivofijo.getfecha_depreciacion());
			this.jInternalFrameDetalleFormDetalleActivoFijo.jTextFieldclaveDetalleActivoFijo.setText(detalleactivofijo.getclave());
			this.jInternalFrameDetalleFormDetalleActivoFijo.jTextAreamarcaDetalleActivoFijo.setText(detalleactivofijo.getmarca());
			this.jInternalFrameDetalleFormDetalleActivoFijo.jTextAreamodeloDetalleActivoFijo.setText(detalleactivofijo.getmodelo());
			this.jInternalFrameDetalleFormDetalleActivoFijo.jTextFieldcolorDetalleActivoFijo.setText(detalleactivofijo.getcolor());
			this.jInternalFrameDetalleFormDetalleActivoFijo.jDateChooserfechaDetalleActivoFijo.setDate(detalleactivofijo.getfecha());
			this.jInternalFrameDetalleFormDetalleActivoFijo.jTextFieldvalor_utilDetalleActivoFijo.setText(detalleactivofijo.getvalor_util().toString());
			this.jInternalFrameDetalleFormDetalleActivoFijo.jTextFieldcosto_de_compraDetalleActivoFijo.setText(detalleactivofijo.getcosto_de_compra().toString());
			this.jInternalFrameDetalleFormDetalleActivoFijo.jTextFieldvida_utilDetalleActivoFijo.setText(detalleactivofijo.getvida_util().toString());
			this.jInternalFrameDetalleFormDetalleActivoFijo.jTextFieldvalor_residualDetalleActivoFijo.setText(detalleactivofijo.getvalor_residual().toString());
			this.jInternalFrameDetalleFormDetalleActivoFijo.jTextFieldcantidadDetalleActivoFijo.setText(detalleactivofijo.getcantidad().toString());
			this.jInternalFrameDetalleFormDetalleActivoFijo.jTextAreanombre_propietarioDetalleActivoFijo.setText(detalleactivofijo.getnombre_propietario());
			this.jInternalFrameDetalleFormDetalleActivoFijo.jTextArearesponsableDetalleActivoFijo.setText(detalleactivofijo.getresponsable());
			this.jInternalFrameDetalleFormDetalleActivoFijo.jTextAreapath_fotoDetalleActivoFijo.setText(detalleactivofijo.getpath_foto());
			this.jInternalFrameDetalleFormDetalleActivoFijo.jTextFieldnumero_comprobanteDetalleActivoFijo.setText(detalleactivofijo.getnumero_comprobante());
			this.jInternalFrameDetalleFormDetalleActivoFijo.jTextAreareferenciaDetalleActivoFijo.setText(detalleactivofijo.getreferencia());
			this.jInternalFrameDetalleFormDetalleActivoFijo.jTextFieldvalor_cotizacionDetalleActivoFijo.setText(detalleactivofijo.getvalor_cotizacion().toString());
			this.jInternalFrameDetalleFormDetalleActivoFijo.jCheckBoxcon_partesDetalleActivoFijo.setSelected(detalleactivofijo.getcon_partes());
			this.jInternalFrameDetalleFormDetalleActivoFijo.jCheckBoxcon_garantiaDetalleActivoFijo.setSelected(detalleactivofijo.getcon_garantia());
			this.jInternalFrameDetalleFormDetalleActivoFijo.jCheckBoxcon_existenciaDetalleActivoFijo.setSelected(detalleactivofijo.getcon_existencia());
			this.jInternalFrameDetalleFormDetalleActivoFijo.jDateChooserfecha_bajaDetalleActivoFijo.setDate(detalleactivofijo.getfecha_baja());
			this.jInternalFrameDetalleFormDetalleActivoFijo.jTextAreapath_foto2DetalleActivoFijo.setText(detalleactivofijo.getpath_foto2());
			
		} catch(Exception e) {
			throw e;
			//FuncionesSwing.manageException(this, e,logger,DetalleActivoFijoConstantesFunciones.CLASSNAME);
		}
	}
		
	public void actualizarInformacion(String sTipo,DetalleActivoFijo detalleactivofijoLocal) throws Exception {
		this.actualizarInformacion(sTipo,false,detalleactivofijoLocal);
	}	
	
	public void actualizarInformacion(String sTipo,Boolean conParametroObjeto,DetalleActivoFijo detalleactivofijoLocal) throws Exception {
		
		if(!conParametroObjeto) {
			if(!this.getEsControlTabla()) {
				detalleactivofijoLocal=this.detalleactivofijo;
			} else {
				detalleactivofijoLocal=this.detalleactivofijoAnterior;
			}
		}
		
		if(this.permiteMantenimiento(detalleactivofijoLocal)) {
			if(sTipo.equals("EVENTO_CONTROL")) { // || sTipo.equals("EVENTO_NUEVO")
				if(!this.esControlTabla) {
					this.setVariablesFormularioToObjetoActualTodoDetalleActivoFijo(detalleactivofijoLocal,true);
					
					if(detalleactivofijoSessionBean.getConGuardarRelaciones()) {
						this.actualizarRelaciones(detalleactivofijoLocal);
					}
				}
			
			} else if(sTipo.equals("INFO_PADRE")) {
				
				if(this.detalleactivofijoSessionBean.getEsGuardarRelacionado()) {
					this.actualizarRelacionFkPadreActual(detalleactivofijoLocal);
				}
			}
		}
	}
	
	public void setVariablesFormularioToObjetoActualTodoDetalleActivoFijo(DetalleActivoFijo detalleactivofijo,Boolean conColumnasBase) throws Exception { 
		this.setVariablesFormularioToObjetoActualDetalleActivoFijo(detalleactivofijo,conColumnasBase);
		this.setVariablesFormularioToObjetoActualForeignKeysDetalleActivoFijo(detalleactivofijo);
	}
	
	public void setVariablesFormularioToObjetoActualDetalleActivoFijo(DetalleActivoFijo detalleactivofijo,Boolean conColumnasBase) throws Exception { 
		this.setVariablesFormularioToObjetoActualDetalleActivoFijo(detalleactivofijo,conColumnasBase,true);
	}
	
	public void setVariablesFormularioToObjetoActualDetalleActivoFijo(DetalleActivoFijo detalleactivofijo,Boolean conColumnasBase,Boolean conInicializarInvalidValues) throws Exception { 
		String sMensajeCampoActual="";
		Boolean estaValidado=true;
		try {
			
			if(this.jInternalFrameDetalleFormDetalleActivoFijo==null) { //if(!this.conCargarFormDetalle) {
				this.inicializarFormDetalle();
			}
			
			if(conInicializarInvalidValues) {
				this.inicializarInvalidValues();
			}
			
			

		try {
			if(this.jInternalFrameDetalleFormDetalleActivoFijo.jLabelidDetalleActivoFijo.getText()==null || this.jInternalFrameDetalleFormDetalleActivoFijo.jLabelidDetalleActivoFijo.getText()=="" || this.jInternalFrameDetalleFormDetalleActivoFijo.jLabelidDetalleActivoFijo.getText()=="Id") {
				this.jInternalFrameDetalleFormDetalleActivoFijo.jLabelidDetalleActivoFijo.setText("0");
			}

			if(conColumnasBase) {detalleactivofijo.setId(Long.parseLong(this.jInternalFrameDetalleFormDetalleActivoFijo.jLabelidDetalleActivoFijo.getText()));}
		} catch(Exception e) {
			estaValidado=false;
			sMensajeCampoActual+="\r\n"+DetalleActivoFijoConstantesFunciones.LABEL_ID+"-->"+ConstantesMensajes.SMENSAJEEXCEPCION_VALIDACIONVALOR;FuncionesSwing.mostrarCampoMensajeInvalido(false,this.jInternalFrameDetalleFormDetalleActivoFijo.jLabelIdDetalleActivoFijo,ConstantesMensajes.SMENSAJEEXCEPCION_VALIDACIONVALOR);
		}

		try {
			detalleactivofijo.setcodigo(this.jInternalFrameDetalleFormDetalleActivoFijo.jTextFieldcodigoDetalleActivoFijo.getText());
		} catch(Exception e) {
			estaValidado=false;
			sMensajeCampoActual+="\r\n"+DetalleActivoFijoConstantesFunciones.LABEL_CODIGO+"-->"+ConstantesMensajes.SMENSAJEEXCEPCION_VALIDACIONVALOR;FuncionesSwing.mostrarCampoMensajeInvalido(false,this.jInternalFrameDetalleFormDetalleActivoFijo.jLabelcodigoDetalleActivoFijo,ConstantesMensajes.SMENSAJEEXCEPCION_VALIDACIONVALOR);
		}

		try {
			detalleactivofijo.setnombre(this.jInternalFrameDetalleFormDetalleActivoFijo.jTextAreanombreDetalleActivoFijo.getText());
		} catch(Exception e) {
			estaValidado=false;
			sMensajeCampoActual+="\r\n"+DetalleActivoFijoConstantesFunciones.LABEL_NOMBRE+"-->"+ConstantesMensajes.SMENSAJEEXCEPCION_VALIDACIONVALOR;FuncionesSwing.mostrarCampoMensajeInvalido(false,this.jInternalFrameDetalleFormDetalleActivoFijo.jLabelnombreDetalleActivoFijo,ConstantesMensajes.SMENSAJEEXCEPCION_VALIDACIONVALOR);
		}

		try {
			detalleactivofijo.setserie(this.jInternalFrameDetalleFormDetalleActivoFijo.jTextFieldserieDetalleActivoFijo.getText());
		} catch(Exception e) {
			estaValidado=false;
			sMensajeCampoActual+="\r\n"+DetalleActivoFijoConstantesFunciones.LABEL_SERIE+"-->"+ConstantesMensajes.SMENSAJEEXCEPCION_VALIDACIONVALOR;FuncionesSwing.mostrarCampoMensajeInvalido(false,this.jInternalFrameDetalleFormDetalleActivoFijo.jLabelserieDetalleActivoFijo,ConstantesMensajes.SMENSAJEEXCEPCION_VALIDACIONVALOR);
		}

		try {
			detalleactivofijo.setfecha_compra(this.jInternalFrameDetalleFormDetalleActivoFijo.jDateChooserfecha_compraDetalleActivoFijo.getDate());
		} catch(Exception e) {
			estaValidado=false;
			sMensajeCampoActual+="\r\n"+DetalleActivoFijoConstantesFunciones.LABEL_FECHACOMPRA+"-->"+ConstantesMensajes.SMENSAJEEXCEPCION_VALIDACIONVALOR;FuncionesSwing.mostrarCampoMensajeInvalido(false,this.jInternalFrameDetalleFormDetalleActivoFijo.jLabelfecha_compraDetalleActivoFijo,ConstantesMensajes.SMENSAJEEXCEPCION_VALIDACIONVALOR);
		}

		try {
			detalleactivofijo.setfecha_mantenimiento(this.jInternalFrameDetalleFormDetalleActivoFijo.jDateChooserfecha_mantenimientoDetalleActivoFijo.getDate());
		} catch(Exception e) {
			estaValidado=false;
			sMensajeCampoActual+="\r\n"+DetalleActivoFijoConstantesFunciones.LABEL_FECHAMANTENIMIENTO+"-->"+ConstantesMensajes.SMENSAJEEXCEPCION_VALIDACIONVALOR;FuncionesSwing.mostrarCampoMensajeInvalido(false,this.jInternalFrameDetalleFormDetalleActivoFijo.jLabelfecha_mantenimientoDetalleActivoFijo,ConstantesMensajes.SMENSAJEEXCEPCION_VALIDACIONVALOR);
		}

		try {
			detalleactivofijo.setfecha_correccion(this.jInternalFrameDetalleFormDetalleActivoFijo.jDateChooserfecha_correccionDetalleActivoFijo.getDate());
		} catch(Exception e) {
			estaValidado=false;
			sMensajeCampoActual+="\r\n"+DetalleActivoFijoConstantesFunciones.LABEL_FECHACORRECCION+"-->"+ConstantesMensajes.SMENSAJEEXCEPCION_VALIDACIONVALOR;FuncionesSwing.mostrarCampoMensajeInvalido(false,this.jInternalFrameDetalleFormDetalleActivoFijo.jLabelfecha_correccionDetalleActivoFijo,ConstantesMensajes.SMENSAJEEXCEPCION_VALIDACIONVALOR);
		}

		try {
			detalleactivofijo.setfecha_depreciacion(this.jInternalFrameDetalleFormDetalleActivoFijo.jDateChooserfecha_depreciacionDetalleActivoFijo.getDate());
		} catch(Exception e) {
			estaValidado=false;
			sMensajeCampoActual+="\r\n"+DetalleActivoFijoConstantesFunciones.LABEL_FECHADEPRECIACION+"-->"+ConstantesMensajes.SMENSAJEEXCEPCION_VALIDACIONVALOR;FuncionesSwing.mostrarCampoMensajeInvalido(false,this.jInternalFrameDetalleFormDetalleActivoFijo.jLabelfecha_depreciacionDetalleActivoFijo,ConstantesMensajes.SMENSAJEEXCEPCION_VALIDACIONVALOR);
		}

		try {
			detalleactivofijo.setclave(this.jInternalFrameDetalleFormDetalleActivoFijo.jTextFieldclaveDetalleActivoFijo.getText());
		} catch(Exception e) {
			estaValidado=false;
			sMensajeCampoActual+="\r\n"+DetalleActivoFijoConstantesFunciones.LABEL_CLAVE+"-->"+ConstantesMensajes.SMENSAJEEXCEPCION_VALIDACIONVALOR;FuncionesSwing.mostrarCampoMensajeInvalido(false,this.jInternalFrameDetalleFormDetalleActivoFijo.jLabelclaveDetalleActivoFijo,ConstantesMensajes.SMENSAJEEXCEPCION_VALIDACIONVALOR);
		}

		try {
			detalleactivofijo.setmarca(this.jInternalFrameDetalleFormDetalleActivoFijo.jTextAreamarcaDetalleActivoFijo.getText());
		} catch(Exception e) {
			estaValidado=false;
			sMensajeCampoActual+="\r\n"+DetalleActivoFijoConstantesFunciones.LABEL_MARCA+"-->"+ConstantesMensajes.SMENSAJEEXCEPCION_VALIDACIONVALOR;FuncionesSwing.mostrarCampoMensajeInvalido(false,this.jInternalFrameDetalleFormDetalleActivoFijo.jLabelmarcaDetalleActivoFijo,ConstantesMensajes.SMENSAJEEXCEPCION_VALIDACIONVALOR);
		}

		try {
			detalleactivofijo.setmodelo(this.jInternalFrameDetalleFormDetalleActivoFijo.jTextAreamodeloDetalleActivoFijo.getText());
		} catch(Exception e) {
			estaValidado=false;
			sMensajeCampoActual+="\r\n"+DetalleActivoFijoConstantesFunciones.LABEL_MODELO+"-->"+ConstantesMensajes.SMENSAJEEXCEPCION_VALIDACIONVALOR;FuncionesSwing.mostrarCampoMensajeInvalido(false,this.jInternalFrameDetalleFormDetalleActivoFijo.jLabelmodeloDetalleActivoFijo,ConstantesMensajes.SMENSAJEEXCEPCION_VALIDACIONVALOR);
		}

		try {
			detalleactivofijo.setcolor(this.jInternalFrameDetalleFormDetalleActivoFijo.jTextFieldcolorDetalleActivoFijo.getText());
		} catch(Exception e) {
			estaValidado=false;
			sMensajeCampoActual+="\r\n"+DetalleActivoFijoConstantesFunciones.LABEL_COLOR+"-->"+ConstantesMensajes.SMENSAJEEXCEPCION_VALIDACIONVALOR;FuncionesSwing.mostrarCampoMensajeInvalido(false,this.jInternalFrameDetalleFormDetalleActivoFijo.jLabelcolorDetalleActivoFijo,ConstantesMensajes.SMENSAJEEXCEPCION_VALIDACIONVALOR);
		}

		try {
			detalleactivofijo.setfecha(this.jInternalFrameDetalleFormDetalleActivoFijo.jDateChooserfechaDetalleActivoFijo.getDate());
		} catch(Exception e) {
			estaValidado=false;
			sMensajeCampoActual+="\r\n"+DetalleActivoFijoConstantesFunciones.LABEL_FECHA+"-->"+ConstantesMensajes.SMENSAJEEXCEPCION_VALIDACIONVALOR;FuncionesSwing.mostrarCampoMensajeInvalido(false,this.jInternalFrameDetalleFormDetalleActivoFijo.jLabelfechaDetalleActivoFijo,ConstantesMensajes.SMENSAJEEXCEPCION_VALIDACIONVALOR);
		}

		try {
			detalleactivofijo.setvalor_util(Double.parseDouble(this.jInternalFrameDetalleFormDetalleActivoFijo.jTextFieldvalor_utilDetalleActivoFijo.getText()));
		} catch(Exception e) {
			estaValidado=false;
			sMensajeCampoActual+="\r\n"+DetalleActivoFijoConstantesFunciones.LABEL_VALORUTIL+"-->"+ConstantesMensajes.SMENSAJEEXCEPCION_VALIDACIONVALOR;FuncionesSwing.mostrarCampoMensajeInvalido(false,this.jInternalFrameDetalleFormDetalleActivoFijo.jLabelvalor_utilDetalleActivoFijo,ConstantesMensajes.SMENSAJEEXCEPCION_VALIDACIONVALOR);
		}

		try {
			detalleactivofijo.setcosto_de_compra(Double.parseDouble(this.jInternalFrameDetalleFormDetalleActivoFijo.jTextFieldcosto_de_compraDetalleActivoFijo.getText()));
		} catch(Exception e) {
			estaValidado=false;
			sMensajeCampoActual+="\r\n"+DetalleActivoFijoConstantesFunciones.LABEL_COSTODECOMPRA+"-->"+ConstantesMensajes.SMENSAJEEXCEPCION_VALIDACIONVALOR;FuncionesSwing.mostrarCampoMensajeInvalido(false,this.jInternalFrameDetalleFormDetalleActivoFijo.jLabelcosto_de_compraDetalleActivoFijo,ConstantesMensajes.SMENSAJEEXCEPCION_VALIDACIONVALOR);
		}

		try {
			detalleactivofijo.setvida_util(Double.parseDouble(this.jInternalFrameDetalleFormDetalleActivoFijo.jTextFieldvida_utilDetalleActivoFijo.getText()));
		} catch(Exception e) {
			estaValidado=false;
			sMensajeCampoActual+="\r\n"+DetalleActivoFijoConstantesFunciones.LABEL_VIDAUTIL+"-->"+ConstantesMensajes.SMENSAJEEXCEPCION_VALIDACIONVALOR;FuncionesSwing.mostrarCampoMensajeInvalido(false,this.jInternalFrameDetalleFormDetalleActivoFijo.jLabelvida_utilDetalleActivoFijo,ConstantesMensajes.SMENSAJEEXCEPCION_VALIDACIONVALOR);
		}

		try {
			detalleactivofijo.setvalor_residual(Double.parseDouble(this.jInternalFrameDetalleFormDetalleActivoFijo.jTextFieldvalor_residualDetalleActivoFijo.getText()));
		} catch(Exception e) {
			estaValidado=false;
			sMensajeCampoActual+="\r\n"+DetalleActivoFijoConstantesFunciones.LABEL_VALORRESIDUAL+"-->"+ConstantesMensajes.SMENSAJEEXCEPCION_VALIDACIONVALOR;FuncionesSwing.mostrarCampoMensajeInvalido(false,this.jInternalFrameDetalleFormDetalleActivoFijo.jLabelvalor_residualDetalleActivoFijo,ConstantesMensajes.SMENSAJEEXCEPCION_VALIDACIONVALOR);
		}

		try {
			detalleactivofijo.setcantidad(Integer.parseInt(this.jInternalFrameDetalleFormDetalleActivoFijo.jTextFieldcantidadDetalleActivoFijo.getText()));
		} catch(Exception e) {
			estaValidado=false;
			sMensajeCampoActual+="\r\n"+DetalleActivoFijoConstantesFunciones.LABEL_CANTIDAD+"-->"+ConstantesMensajes.SMENSAJEEXCEPCION_VALIDACIONVALOR;FuncionesSwing.mostrarCampoMensajeInvalido(false,this.jInternalFrameDetalleFormDetalleActivoFijo.jLabelcantidadDetalleActivoFijo,ConstantesMensajes.SMENSAJEEXCEPCION_VALIDACIONVALOR);
		}

		try {
			detalleactivofijo.setnombre_propietario(this.jInternalFrameDetalleFormDetalleActivoFijo.jTextAreanombre_propietarioDetalleActivoFijo.getText());
		} catch(Exception e) {
			estaValidado=false;
			sMensajeCampoActual+="\r\n"+DetalleActivoFijoConstantesFunciones.LABEL_NOMBREPROPIETARIO+"-->"+ConstantesMensajes.SMENSAJEEXCEPCION_VALIDACIONVALOR;FuncionesSwing.mostrarCampoMensajeInvalido(false,this.jInternalFrameDetalleFormDetalleActivoFijo.jLabelnombre_propietarioDetalleActivoFijo,ConstantesMensajes.SMENSAJEEXCEPCION_VALIDACIONVALOR);
		}

		try {
			detalleactivofijo.setresponsable(this.jInternalFrameDetalleFormDetalleActivoFijo.jTextArearesponsableDetalleActivoFijo.getText());
		} catch(Exception e) {
			estaValidado=false;
			sMensajeCampoActual+="\r\n"+DetalleActivoFijoConstantesFunciones.LABEL_RESPONSABLE+"-->"+ConstantesMensajes.SMENSAJEEXCEPCION_VALIDACIONVALOR;FuncionesSwing.mostrarCampoMensajeInvalido(false,this.jInternalFrameDetalleFormDetalleActivoFijo.jLabelresponsableDetalleActivoFijo,ConstantesMensajes.SMENSAJEEXCEPCION_VALIDACIONVALOR);
		}

		try {
			detalleactivofijo.setpath_foto(this.jInternalFrameDetalleFormDetalleActivoFijo.jTextAreapath_fotoDetalleActivoFijo.getText());
		} catch(Exception e) {
			estaValidado=false;
			sMensajeCampoActual+="\r\n"+DetalleActivoFijoConstantesFunciones.LABEL_PATHFOTO+"-->"+ConstantesMensajes.SMENSAJEEXCEPCION_VALIDACIONVALOR;FuncionesSwing.mostrarCampoMensajeInvalido(false,this.jInternalFrameDetalleFormDetalleActivoFijo.jLabelpath_fotoDetalleActivoFijo,ConstantesMensajes.SMENSAJEEXCEPCION_VALIDACIONVALOR);
		}

		try {
			detalleactivofijo.setnumero_comprobante(this.jInternalFrameDetalleFormDetalleActivoFijo.jTextFieldnumero_comprobanteDetalleActivoFijo.getText());
		} catch(Exception e) {
			estaValidado=false;
			sMensajeCampoActual+="\r\n"+DetalleActivoFijoConstantesFunciones.LABEL_NUMEROCOMPROBANTE+"-->"+ConstantesMensajes.SMENSAJEEXCEPCION_VALIDACIONVALOR;FuncionesSwing.mostrarCampoMensajeInvalido(false,this.jInternalFrameDetalleFormDetalleActivoFijo.jLabelnumero_comprobanteDetalleActivoFijo,ConstantesMensajes.SMENSAJEEXCEPCION_VALIDACIONVALOR);
		}

		try {
			detalleactivofijo.setreferencia(this.jInternalFrameDetalleFormDetalleActivoFijo.jTextAreareferenciaDetalleActivoFijo.getText());
		} catch(Exception e) {
			estaValidado=false;
			sMensajeCampoActual+="\r\n"+DetalleActivoFijoConstantesFunciones.LABEL_REFERENCIA+"-->"+ConstantesMensajes.SMENSAJEEXCEPCION_VALIDACIONVALOR;FuncionesSwing.mostrarCampoMensajeInvalido(false,this.jInternalFrameDetalleFormDetalleActivoFijo.jLabelreferenciaDetalleActivoFijo,ConstantesMensajes.SMENSAJEEXCEPCION_VALIDACIONVALOR);
		}

		try {
			detalleactivofijo.setvalor_cotizacion(Double.parseDouble(this.jInternalFrameDetalleFormDetalleActivoFijo.jTextFieldvalor_cotizacionDetalleActivoFijo.getText()));
		} catch(Exception e) {
			estaValidado=false;
			sMensajeCampoActual+="\r\n"+DetalleActivoFijoConstantesFunciones.LABEL_VALORCOTIZACION+"-->"+ConstantesMensajes.SMENSAJEEXCEPCION_VALIDACIONVALOR;FuncionesSwing.mostrarCampoMensajeInvalido(false,this.jInternalFrameDetalleFormDetalleActivoFijo.jLabelvalor_cotizacionDetalleActivoFijo,ConstantesMensajes.SMENSAJEEXCEPCION_VALIDACIONVALOR);
		}

		try {
			detalleactivofijo.setcon_partes(this.jInternalFrameDetalleFormDetalleActivoFijo.jCheckBoxcon_partesDetalleActivoFijo.isSelected());
		} catch(Exception e) {
			estaValidado=false;
			sMensajeCampoActual+="\r\n"+DetalleActivoFijoConstantesFunciones.LABEL_CONPARTES+"-->"+ConstantesMensajes.SMENSAJEEXCEPCION_VALIDACIONVALOR;FuncionesSwing.mostrarCampoMensajeInvalido(false,this.jInternalFrameDetalleFormDetalleActivoFijo.jLabelcon_partesDetalleActivoFijo,ConstantesMensajes.SMENSAJEEXCEPCION_VALIDACIONVALOR);
		}

		try {
			detalleactivofijo.setcon_garantia(this.jInternalFrameDetalleFormDetalleActivoFijo.jCheckBoxcon_garantiaDetalleActivoFijo.isSelected());
		} catch(Exception e) {
			estaValidado=false;
			sMensajeCampoActual+="\r\n"+DetalleActivoFijoConstantesFunciones.LABEL_CONGARANTIA+"-->"+ConstantesMensajes.SMENSAJEEXCEPCION_VALIDACIONVALOR;FuncionesSwing.mostrarCampoMensajeInvalido(false,this.jInternalFrameDetalleFormDetalleActivoFijo.jLabelcon_garantiaDetalleActivoFijo,ConstantesMensajes.SMENSAJEEXCEPCION_VALIDACIONVALOR);
		}

		try {
			detalleactivofijo.setcon_existencia(this.jInternalFrameDetalleFormDetalleActivoFijo.jCheckBoxcon_existenciaDetalleActivoFijo.isSelected());
		} catch(Exception e) {
			estaValidado=false;
			sMensajeCampoActual+="\r\n"+DetalleActivoFijoConstantesFunciones.LABEL_CONEXISTENCIA+"-->"+ConstantesMensajes.SMENSAJEEXCEPCION_VALIDACIONVALOR;FuncionesSwing.mostrarCampoMensajeInvalido(false,this.jInternalFrameDetalleFormDetalleActivoFijo.jLabelcon_existenciaDetalleActivoFijo,ConstantesMensajes.SMENSAJEEXCEPCION_VALIDACIONVALOR);
		}

		try {
			detalleactivofijo.setfecha_baja(this.jInternalFrameDetalleFormDetalleActivoFijo.jDateChooserfecha_bajaDetalleActivoFijo.getDate());
		} catch(Exception e) {
			estaValidado=false;
			sMensajeCampoActual+="\r\n"+DetalleActivoFijoConstantesFunciones.LABEL_FECHABAJA+"-->"+ConstantesMensajes.SMENSAJEEXCEPCION_VALIDACIONVALOR;FuncionesSwing.mostrarCampoMensajeInvalido(false,this.jInternalFrameDetalleFormDetalleActivoFijo.jLabelfecha_bajaDetalleActivoFijo,ConstantesMensajes.SMENSAJEEXCEPCION_VALIDACIONVALOR);
		}

		try {
			detalleactivofijo.setpath_foto2(this.jInternalFrameDetalleFormDetalleActivoFijo.jTextAreapath_foto2DetalleActivoFijo.getText());
		} catch(Exception e) {
			estaValidado=false;
			sMensajeCampoActual+="\r\n"+DetalleActivoFijoConstantesFunciones.LABEL_PATHFOTO2+"-->"+ConstantesMensajes.SMENSAJEEXCEPCION_VALIDACIONVALOR;FuncionesSwing.mostrarCampoMensajeInvalido(false,this.jInternalFrameDetalleFormDetalleActivoFijo.jLabelpath_foto2DetalleActivoFijo,ConstantesMensajes.SMENSAJEEXCEPCION_VALIDACIONVALOR);
		}
			
			if(!estaValidado) {
				throw new Exception(sMensajeCampoActual);
			}
		} catch(NumberFormatException e) {
			throw new Exception(sMensajeCampoActual);
			//FuncionesSwing.manageException(this, e,logger,MovimientoInventarioConstantesFunciones.CLASSNAME);
		} catch(Exception e) {
			throw e;
			//FuncionesSwing.manageException(this, e,logger,DetalleActivoFijoConstantesFunciones.CLASSNAME);
		}
	}
	
	public void setVariablesForeignKeyObjetoBeanDefectoActualToObjetoActualDetalleActivoFijo(DetalleActivoFijo detalleactivofijoBean,DetalleActivoFijo detalleactivofijo,Boolean conDefault,Boolean conColumnasBase) throws Exception { 
		try {
			
			if(conDefault || (!conDefault && detalleactivofijoBean.getid_detalle_grupo_activo_fijo()!=null && !detalleactivofijoBean.getid_detalle_grupo_activo_fijo().equals(-1L))) {detalleactivofijo.setid_detalle_grupo_activo_fijo(detalleactivofijoBean.getid_detalle_grupo_activo_fijo());}
			if(conDefault || (!conDefault && detalleactivofijoBean.getid_sub_grupo_activo_fijo()!=null && !detalleactivofijoBean.getid_sub_grupo_activo_fijo().equals(-1L))) {detalleactivofijo.setid_sub_grupo_activo_fijo(detalleactivofijoBean.getid_sub_grupo_activo_fijo());}
			if(conDefault || (!conDefault && detalleactivofijoBean.getid_tipo_ramo_activo_fijo()!=null && !detalleactivofijoBean.getid_tipo_ramo_activo_fijo().equals(-1L))) {detalleactivofijo.setid_tipo_ramo_activo_fijo(detalleactivofijoBean.getid_tipo_ramo_activo_fijo());}
			if(conDefault || (!conDefault && detalleactivofijoBean.getid_tipo_activo_fijo_empresa()!=null && !detalleactivofijoBean.getid_tipo_activo_fijo_empresa().equals(-1L))) {detalleactivofijo.setid_tipo_activo_fijo_empresa(detalleactivofijoBean.getid_tipo_activo_fijo_empresa());}
			if(conDefault || (!conDefault && detalleactivofijoBean.getid_tipo_depreciacion_empresa()!=null && !detalleactivofijoBean.getid_tipo_depreciacion_empresa().equals(-1L))) {detalleactivofijo.setid_tipo_depreciacion_empresa(detalleactivofijoBean.getid_tipo_depreciacion_empresa());}
			if(conDefault || (!conDefault && detalleactivofijoBean.getid_estado_activo_fijo()!=null && !detalleactivofijoBean.getid_estado_activo_fijo().equals(-1L))) {detalleactivofijo.setid_estado_activo_fijo(detalleactivofijoBean.getid_estado_activo_fijo());}
			if(conDefault || (!conDefault && detalleactivofijoBean.getid_cliente()!=null && !detalleactivofijoBean.getid_cliente().equals(-1L))) {detalleactivofijo.setid_cliente(detalleactivofijoBean.getid_cliente());}
			if(conDefault || (!conDefault && detalleactivofijoBean.getid_partida_presu()!=null && !detalleactivofijoBean.getid_partida_presu().equals(-1L))) {detalleactivofijo.setid_partida_presu(detalleactivofijoBean.getid_partida_presu());}
			
		} catch(Exception e) {
			throw e;
			//FuncionesSwing.manageException(this, e,logger,DetalleActivoFijoConstantesFunciones.CLASSNAME);
		}
	}
	
	public void setCopiarVariablesObjetosDetalleActivoFijo(DetalleActivoFijo detalleactivofijoOrigen,DetalleActivoFijo detalleactivofijo,Boolean conDefault,Boolean conColumnasBase) throws Exception { 
		try {
			
			if(conColumnasBase) {if(conDefault || (!conDefault && detalleactivofijoOrigen.getId()!=null && !detalleactivofijoOrigen.getId().equals(0L))) {detalleactivofijo.setId(detalleactivofijoOrigen.getId());}}
			if(conDefault || (!conDefault && detalleactivofijoOrigen.getid_detalle_grupo_activo_fijo()!=null && !detalleactivofijoOrigen.getid_detalle_grupo_activo_fijo().equals(-1L))) {detalleactivofijo.setid_detalle_grupo_activo_fijo(detalleactivofijoOrigen.getid_detalle_grupo_activo_fijo());}
			if(conDefault || (!conDefault && detalleactivofijoOrigen.getid_sub_grupo_activo_fijo()!=null && !detalleactivofijoOrigen.getid_sub_grupo_activo_fijo().equals(-1L))) {detalleactivofijo.setid_sub_grupo_activo_fijo(detalleactivofijoOrigen.getid_sub_grupo_activo_fijo());}
			if(conDefault || (!conDefault && detalleactivofijoOrigen.getid_tipo_ramo_activo_fijo()!=null && !detalleactivofijoOrigen.getid_tipo_ramo_activo_fijo().equals(-1L))) {detalleactivofijo.setid_tipo_ramo_activo_fijo(detalleactivofijoOrigen.getid_tipo_ramo_activo_fijo());}
			if(conDefault || (!conDefault && detalleactivofijoOrigen.getid_tipo_activo_fijo_empresa()!=null && !detalleactivofijoOrigen.getid_tipo_activo_fijo_empresa().equals(-1L))) {detalleactivofijo.setid_tipo_activo_fijo_empresa(detalleactivofijoOrigen.getid_tipo_activo_fijo_empresa());}
			if(conDefault || (!conDefault && detalleactivofijoOrigen.getid_tipo_depreciacion_empresa()!=null && !detalleactivofijoOrigen.getid_tipo_depreciacion_empresa().equals(-1L))) {detalleactivofijo.setid_tipo_depreciacion_empresa(detalleactivofijoOrigen.getid_tipo_depreciacion_empresa());}
			if(conDefault || (!conDefault && detalleactivofijoOrigen.getid_estado_activo_fijo()!=null && !detalleactivofijoOrigen.getid_estado_activo_fijo().equals(-1L))) {detalleactivofijo.setid_estado_activo_fijo(detalleactivofijoOrigen.getid_estado_activo_fijo());}
			if(conDefault || (!conDefault && detalleactivofijoOrigen.getid_cliente()!=null && !detalleactivofijoOrigen.getid_cliente().equals(-1L))) {detalleactivofijo.setid_cliente(detalleactivofijoOrigen.getid_cliente());}
			if(conDefault || (!conDefault && detalleactivofijoOrigen.getid_partida_presu()!=null && !detalleactivofijoOrigen.getid_partida_presu().equals(-1L))) {detalleactivofijo.setid_partida_presu(detalleactivofijoOrigen.getid_partida_presu());}
			if(conDefault || (!conDefault && detalleactivofijoOrigen.getcodigo()!=null && !detalleactivofijoOrigen.getcodigo().equals(""))) {detalleactivofijo.setcodigo(detalleactivofijoOrigen.getcodigo());}
			if(conDefault || (!conDefault && detalleactivofijoOrigen.getnombre()!=null && !detalleactivofijoOrigen.getnombre().equals(""))) {detalleactivofijo.setnombre(detalleactivofijoOrigen.getnombre());}
			if(conDefault || (!conDefault && detalleactivofijoOrigen.getserie()!=null && !detalleactivofijoOrigen.getserie().equals(""))) {detalleactivofijo.setserie(detalleactivofijoOrigen.getserie());}
			if(conDefault || (!conDefault && detalleactivofijoOrigen.getfecha_compra()!=null && !detalleactivofijoOrigen.getfecha_compra().equals(new Date()))) {detalleactivofijo.setfecha_compra(detalleactivofijoOrigen.getfecha_compra());}
			if(conDefault || (!conDefault && detalleactivofijoOrigen.getfecha_mantenimiento()!=null && !detalleactivofijoOrigen.getfecha_mantenimiento().equals(new Date()))) {detalleactivofijo.setfecha_mantenimiento(detalleactivofijoOrigen.getfecha_mantenimiento());}
			if(conDefault || (!conDefault && detalleactivofijoOrigen.getfecha_correccion()!=null && !detalleactivofijoOrigen.getfecha_correccion().equals(new Date()))) {detalleactivofijo.setfecha_correccion(detalleactivofijoOrigen.getfecha_correccion());}
			if(conDefault || (!conDefault && detalleactivofijoOrigen.getfecha_depreciacion()!=null && !detalleactivofijoOrigen.getfecha_depreciacion().equals(new Date()))) {detalleactivofijo.setfecha_depreciacion(detalleactivofijoOrigen.getfecha_depreciacion());}
			if(conDefault || (!conDefault && detalleactivofijoOrigen.getclave()!=null && !detalleactivofijoOrigen.getclave().equals(""))) {detalleactivofijo.setclave(detalleactivofijoOrigen.getclave());}
			if(conDefault || (!conDefault && detalleactivofijoOrigen.getmarca()!=null && !detalleactivofijoOrigen.getmarca().equals(""))) {detalleactivofijo.setmarca(detalleactivofijoOrigen.getmarca());}
			if(conDefault || (!conDefault && detalleactivofijoOrigen.getmodelo()!=null && !detalleactivofijoOrigen.getmodelo().equals(""))) {detalleactivofijo.setmodelo(detalleactivofijoOrigen.getmodelo());}
			if(conDefault || (!conDefault && detalleactivofijoOrigen.getcolor()!=null && !detalleactivofijoOrigen.getcolor().equals(""))) {detalleactivofijo.setcolor(detalleactivofijoOrigen.getcolor());}
			if(conDefault || (!conDefault && detalleactivofijoOrigen.getfecha()!=null && !detalleactivofijoOrigen.getfecha().equals(new Date()))) {detalleactivofijo.setfecha(detalleactivofijoOrigen.getfecha());}
			if(conDefault || (!conDefault && detalleactivofijoOrigen.getvalor_util()!=null && !detalleactivofijoOrigen.getvalor_util().equals(0.0))) {detalleactivofijo.setvalor_util(detalleactivofijoOrigen.getvalor_util());}
			if(conDefault || (!conDefault && detalleactivofijoOrigen.getcosto_de_compra()!=null && !detalleactivofijoOrigen.getcosto_de_compra().equals(0.0))) {detalleactivofijo.setcosto_de_compra(detalleactivofijoOrigen.getcosto_de_compra());}
			if(conDefault || (!conDefault && detalleactivofijoOrigen.getvida_util()!=null && !detalleactivofijoOrigen.getvida_util().equals(0.0))) {detalleactivofijo.setvida_util(detalleactivofijoOrigen.getvida_util());}
			if(conDefault || (!conDefault && detalleactivofijoOrigen.getvalor_residual()!=null && !detalleactivofijoOrigen.getvalor_residual().equals(0.0))) {detalleactivofijo.setvalor_residual(detalleactivofijoOrigen.getvalor_residual());}
			if(conDefault || (!conDefault && detalleactivofijoOrigen.getcantidad()!=null && !detalleactivofijoOrigen.getcantidad().equals(0))) {detalleactivofijo.setcantidad(detalleactivofijoOrigen.getcantidad());}
			if(conDefault || (!conDefault && detalleactivofijoOrigen.getnombre_propietario()!=null && !detalleactivofijoOrigen.getnombre_propietario().equals(""))) {detalleactivofijo.setnombre_propietario(detalleactivofijoOrigen.getnombre_propietario());}
			if(conDefault || (!conDefault && detalleactivofijoOrigen.getresponsable()!=null && !detalleactivofijoOrigen.getresponsable().equals(""))) {detalleactivofijo.setresponsable(detalleactivofijoOrigen.getresponsable());}
			if(conDefault || (!conDefault && detalleactivofijoOrigen.getpath_foto()!=null && !detalleactivofijoOrigen.getpath_foto().equals(""))) {detalleactivofijo.setpath_foto(detalleactivofijoOrigen.getpath_foto());}
			if(conDefault || (!conDefault && detalleactivofijoOrigen.getnumero_comprobante()!=null && !detalleactivofijoOrigen.getnumero_comprobante().equals(""))) {detalleactivofijo.setnumero_comprobante(detalleactivofijoOrigen.getnumero_comprobante());}
			if(conDefault || (!conDefault && detalleactivofijoOrigen.getreferencia()!=null && !detalleactivofijoOrigen.getreferencia().equals(""))) {detalleactivofijo.setreferencia(detalleactivofijoOrigen.getreferencia());}
			if(conDefault || (!conDefault && detalleactivofijoOrigen.getvalor_cotizacion()!=null && !detalleactivofijoOrigen.getvalor_cotizacion().equals(0.0))) {detalleactivofijo.setvalor_cotizacion(detalleactivofijoOrigen.getvalor_cotizacion());}
			if(conDefault || (!conDefault && detalleactivofijoOrigen.getcon_partes()!=null && !detalleactivofijoOrigen.getcon_partes().equals(false))) {detalleactivofijo.setcon_partes(detalleactivofijoOrigen.getcon_partes());}
			if(conDefault || (!conDefault && detalleactivofijoOrigen.getcon_garantia()!=null && !detalleactivofijoOrigen.getcon_garantia().equals(false))) {detalleactivofijo.setcon_garantia(detalleactivofijoOrigen.getcon_garantia());}
			if(conDefault || (!conDefault && detalleactivofijoOrigen.getcon_existencia()!=null && !detalleactivofijoOrigen.getcon_existencia().equals(false))) {detalleactivofijo.setcon_existencia(detalleactivofijoOrigen.getcon_existencia());}
			if(conDefault || (!conDefault && detalleactivofijoOrigen.getfecha_baja()!=null && !detalleactivofijoOrigen.getfecha_baja().equals(new Date()))) {detalleactivofijo.setfecha_baja(detalleactivofijoOrigen.getfecha_baja());}
			if(conDefault || (!conDefault && detalleactivofijoOrigen.getpath_foto2()!=null && !detalleactivofijoOrigen.getpath_foto2().equals(""))) {detalleactivofijo.setpath_foto2(detalleactivofijoOrigen.getpath_foto2());}
			
		} catch(Exception e) {
			throw e;
			//FuncionesSwing.manageException(this, e,logger,DetalleActivoFijoConstantesFunciones.CLASSNAME);
		}
	}
	
	/*
	public void setVariablesObjetoBeanActualToFormularioDetalleActivoFijo(DetalleActivoFijo detalleactivofijo) throws Exception { 
		try {
			
			this.jInternalFrameDetalleFormDetalleActivoFijo.jLabelidDetalleActivoFijo.setText(detalleactivofijo.getId().toString());
			this.jInternalFrameDetalleFormDetalleActivoFijo.jTextFieldcodigoDetalleActivoFijo.setText(detalleactivofijo.getcodigo());
			this.jInternalFrameDetalleFormDetalleActivoFijo.jTextAreanombreDetalleActivoFijo.setText(detalleactivofijo.getnombre());
			this.jInternalFrameDetalleFormDetalleActivoFijo.jTextFieldserieDetalleActivoFijo.setText(detalleactivofijo.getserie());
			this.jInternalFrameDetalleFormDetalleActivoFijo.jDateChooserfecha_compraDetalleActivoFijo.setDate(detalleactivofijo.getfecha_compra());
			this.jInternalFrameDetalleFormDetalleActivoFijo.jDateChooserfecha_mantenimientoDetalleActivoFijo.setDate(detalleactivofijo.getfecha_mantenimiento());
			this.jInternalFrameDetalleFormDetalleActivoFijo.jDateChooserfecha_correccionDetalleActivoFijo.setDate(detalleactivofijo.getfecha_correccion());
			this.jInternalFrameDetalleFormDetalleActivoFijo.jDateChooserfecha_depreciacionDetalleActivoFijo.setDate(detalleactivofijo.getfecha_depreciacion());
			this.jInternalFrameDetalleFormDetalleActivoFijo.jTextFieldclaveDetalleActivoFijo.setText(detalleactivofijo.getclave());
			this.jInternalFrameDetalleFormDetalleActivoFijo.jTextAreamarcaDetalleActivoFijo.setText(detalleactivofijo.getmarca());
			this.jInternalFrameDetalleFormDetalleActivoFijo.jTextAreamodeloDetalleActivoFijo.setText(detalleactivofijo.getmodelo());
			this.jInternalFrameDetalleFormDetalleActivoFijo.jTextFieldcolorDetalleActivoFijo.setText(detalleactivofijo.getcolor());
			this.jInternalFrameDetalleFormDetalleActivoFijo.jDateChooserfechaDetalleActivoFijo.setDate(detalleactivofijo.getfecha());
			this.jInternalFrameDetalleFormDetalleActivoFijo.jTextFieldvalor_utilDetalleActivoFijo.setText(detalleactivofijo.getvalor_util().toString());
			this.jInternalFrameDetalleFormDetalleActivoFijo.jTextFieldcosto_de_compraDetalleActivoFijo.setText(detalleactivofijo.getcosto_de_compra().toString());
			this.jInternalFrameDetalleFormDetalleActivoFijo.jTextFieldvida_utilDetalleActivoFijo.setText(detalleactivofijo.getvida_util().toString());
			this.jInternalFrameDetalleFormDetalleActivoFijo.jTextFieldvalor_residualDetalleActivoFijo.setText(detalleactivofijo.getvalor_residual().toString());
			this.jInternalFrameDetalleFormDetalleActivoFijo.jTextFieldcantidadDetalleActivoFijo.setText(detalleactivofijo.getcantidad().toString());
			this.jInternalFrameDetalleFormDetalleActivoFijo.jTextAreanombre_propietarioDetalleActivoFijo.setText(detalleactivofijo.getnombre_propietario());
			this.jInternalFrameDetalleFormDetalleActivoFijo.jTextArearesponsableDetalleActivoFijo.setText(detalleactivofijo.getresponsable());
			this.jInternalFrameDetalleFormDetalleActivoFijo.jTextAreapath_fotoDetalleActivoFijo.setText(detalleactivofijo.getpath_foto());
			this.jInternalFrameDetalleFormDetalleActivoFijo.jTextFieldnumero_comprobanteDetalleActivoFijo.setText(detalleactivofijo.getnumero_comprobante());
			this.jInternalFrameDetalleFormDetalleActivoFijo.jTextAreareferenciaDetalleActivoFijo.setText(detalleactivofijo.getreferencia());
			this.jInternalFrameDetalleFormDetalleActivoFijo.jTextFieldvalor_cotizacionDetalleActivoFijo.setText(detalleactivofijo.getvalor_cotizacion().toString());
			this.jInternalFrameDetalleFormDetalleActivoFijo.jCheckBoxcon_partesDetalleActivoFijo.setSelected(detalleactivofijo.getcon_partes());
			this.jInternalFrameDetalleFormDetalleActivoFijo.jCheckBoxcon_garantiaDetalleActivoFijo.setSelected(detalleactivofijo.getcon_garantia());
			this.jInternalFrameDetalleFormDetalleActivoFijo.jCheckBoxcon_existenciaDetalleActivoFijo.setSelected(detalleactivofijo.getcon_existencia());
			this.jInternalFrameDetalleFormDetalleActivoFijo.jDateChooserfecha_bajaDetalleActivoFijo.setDate(detalleactivofijo.getfecha_baja());
			this.jInternalFrameDetalleFormDetalleActivoFijo.jTextAreapath_foto2DetalleActivoFijo.setText(detalleactivofijo.getpath_foto2());
			
		} catch(Exception e) {
			FuncionesSwing.manageException(this, e,logger,DetalleActivoFijoConstantesFunciones.CLASSNAME);
		}
	}
	*/
	
	/*
	public void setVariablesObjetoBeanActualToFormularioDetalleActivoFijo(DetalleActivoFijoBean detalleactivofijoBean) throws Exception { 
		try {
			
			this.jInternalFrameDetalleFormDetalleActivoFijo.jLabelidDetalleActivoFijo.setText(detalleactivofijoBean.getId().toString());
			this.jInternalFrameDetalleFormDetalleActivoFijo.jTextFieldcodigoDetalleActivoFijo.setText(detalleactivofijoBean.getcodigo());
			this.jInternalFrameDetalleFormDetalleActivoFijo.jTextAreanombreDetalleActivoFijo.setText(detalleactivofijoBean.getnombre());
			this.jInternalFrameDetalleFormDetalleActivoFijo.jTextFieldserieDetalleActivoFijo.setText(detalleactivofijoBean.getserie());
			this.jInternalFrameDetalleFormDetalleActivoFijo.jDateChooserfecha_compraDetalleActivoFijo.setDate(detalleactivofijoBean.getfecha_compra());
			this.jInternalFrameDetalleFormDetalleActivoFijo.jDateChooserfecha_mantenimientoDetalleActivoFijo.setDate(detalleactivofijoBean.getfecha_mantenimiento());
			this.jInternalFrameDetalleFormDetalleActivoFijo.jDateChooserfecha_correccionDetalleActivoFijo.setDate(detalleactivofijoBean.getfecha_correccion());
			this.jInternalFrameDetalleFormDetalleActivoFijo.jDateChooserfecha_depreciacionDetalleActivoFijo.setDate(detalleactivofijoBean.getfecha_depreciacion());
			this.jInternalFrameDetalleFormDetalleActivoFijo.jTextFieldclaveDetalleActivoFijo.setText(detalleactivofijoBean.getclave());
			this.jInternalFrameDetalleFormDetalleActivoFijo.jTextAreamarcaDetalleActivoFijo.setText(detalleactivofijoBean.getmarca());
			this.jInternalFrameDetalleFormDetalleActivoFijo.jTextAreamodeloDetalleActivoFijo.setText(detalleactivofijoBean.getmodelo());
			this.jInternalFrameDetalleFormDetalleActivoFijo.jTextFieldcolorDetalleActivoFijo.setText(detalleactivofijoBean.getcolor());
			this.jInternalFrameDetalleFormDetalleActivoFijo.jDateChooserfechaDetalleActivoFijo.setDate(detalleactivofijoBean.getfecha());
			this.jInternalFrameDetalleFormDetalleActivoFijo.jTextFieldvalor_utilDetalleActivoFijo.setText(detalleactivofijoBean.getvalor_util().toString());
			this.jInternalFrameDetalleFormDetalleActivoFijo.jTextFieldcosto_de_compraDetalleActivoFijo.setText(detalleactivofijoBean.getcosto_de_compra().toString());
			this.jInternalFrameDetalleFormDetalleActivoFijo.jTextFieldvida_utilDetalleActivoFijo.setText(detalleactivofijoBean.getvida_util().toString());
			this.jInternalFrameDetalleFormDetalleActivoFijo.jTextFieldvalor_residualDetalleActivoFijo.setText(detalleactivofijoBean.getvalor_residual().toString());
			this.jInternalFrameDetalleFormDetalleActivoFijo.jTextFieldcantidadDetalleActivoFijo.setText(detalleactivofijoBean.getcantidad().toString());
			this.jInternalFrameDetalleFormDetalleActivoFijo.jTextAreanombre_propietarioDetalleActivoFijo.setText(detalleactivofijoBean.getnombre_propietario());
			this.jInternalFrameDetalleFormDetalleActivoFijo.jTextArearesponsableDetalleActivoFijo.setText(detalleactivofijoBean.getresponsable());
			this.jInternalFrameDetalleFormDetalleActivoFijo.jTextAreapath_fotoDetalleActivoFijo.setText(detalleactivofijoBean.getpath_foto());
			this.jInternalFrameDetalleFormDetalleActivoFijo.jTextFieldnumero_comprobanteDetalleActivoFijo.setText(detalleactivofijoBean.getnumero_comprobante());
			this.jInternalFrameDetalleFormDetalleActivoFijo.jTextAreareferenciaDetalleActivoFijo.setText(detalleactivofijoBean.getreferencia());
			this.jInternalFrameDetalleFormDetalleActivoFijo.jTextFieldvalor_cotizacionDetalleActivoFijo.setText(detalleactivofijoBean.getvalor_cotizacion().toString());
			this.jInternalFrameDetalleFormDetalleActivoFijo.jCheckBoxcon_partesDetalleActivoFijo.setSelected(detalleactivofijoBean.getcon_partes());
			this.jInternalFrameDetalleFormDetalleActivoFijo.jCheckBoxcon_garantiaDetalleActivoFijo.setSelected(detalleactivofijoBean.getcon_garantia());
			this.jInternalFrameDetalleFormDetalleActivoFijo.jCheckBoxcon_existenciaDetalleActivoFijo.setSelected(detalleactivofijoBean.getcon_existencia());
			this.jInternalFrameDetalleFormDetalleActivoFijo.jDateChooserfecha_bajaDetalleActivoFijo.setDate(detalleactivofijoBean.getfecha_baja());
			this.jInternalFrameDetalleFormDetalleActivoFijo.jTextAreapath_foto2DetalleActivoFijo.setText(detalleactivofijoBean.getpath_foto2());
			
		} catch(Exception e) {
			FuncionesSwing.manageException(this, e,logger,DetalleActivoFijoConstantesFunciones.CLASSNAME);
		}
	}
	*/
	
	/*
	public void setVariablesObjetoReturnGeneralToBeanDetalleActivoFijo(DetalleActivoFijoParameterReturnGeneral detalleactivofijoReturnGeneral,DetalleActivoFijoBean detalleactivofijoBean,Boolean conDefault) throws Exception { 
		try {
			DetalleActivoFijo detalleactivofijoLocal=new DetalleActivoFijo();
			
			detalleactivofijoLocal=detalleactivofijoReturnGeneral.getDetalleActivoFijo();
			
			
			if(conColumnasBase) {if(conDefault || (!conDefault && detalleactivofijoLocal.getId()!=null && !detalleactivofijoLocal.getId().equals(0L))) {detalleactivofijoBean.setId(detalleactivofijoLocal.getId());}}
			if(conDefault || (!conDefault && detalleactivofijoLocal.getid_detalle_grupo_activo_fijo()!=null && !detalleactivofijoLocal.getid_detalle_grupo_activo_fijo().equals(-1L))) {detalleactivofijoBean.setid_detalle_grupo_activo_fijo(detalleactivofijoLocal.getid_detalle_grupo_activo_fijo());}
			if(conDefault || (!conDefault && detalleactivofijoLocal.getid_sub_grupo_activo_fijo()!=null && !detalleactivofijoLocal.getid_sub_grupo_activo_fijo().equals(-1L))) {detalleactivofijoBean.setid_sub_grupo_activo_fijo(detalleactivofijoLocal.getid_sub_grupo_activo_fijo());}
			if(conDefault || (!conDefault && detalleactivofijoLocal.getid_tipo_ramo_activo_fijo()!=null && !detalleactivofijoLocal.getid_tipo_ramo_activo_fijo().equals(-1L))) {detalleactivofijoBean.setid_tipo_ramo_activo_fijo(detalleactivofijoLocal.getid_tipo_ramo_activo_fijo());}
			if(conDefault || (!conDefault && detalleactivofijoLocal.getid_tipo_activo_fijo_empresa()!=null && !detalleactivofijoLocal.getid_tipo_activo_fijo_empresa().equals(-1L))) {detalleactivofijoBean.setid_tipo_activo_fijo_empresa(detalleactivofijoLocal.getid_tipo_activo_fijo_empresa());}
			if(conDefault || (!conDefault && detalleactivofijoLocal.getid_tipo_depreciacion_empresa()!=null && !detalleactivofijoLocal.getid_tipo_depreciacion_empresa().equals(-1L))) {detalleactivofijoBean.setid_tipo_depreciacion_empresa(detalleactivofijoLocal.getid_tipo_depreciacion_empresa());}
			if(conDefault || (!conDefault && detalleactivofijoLocal.getid_estado_activo_fijo()!=null && !detalleactivofijoLocal.getid_estado_activo_fijo().equals(-1L))) {detalleactivofijoBean.setid_estado_activo_fijo(detalleactivofijoLocal.getid_estado_activo_fijo());}
			if(conDefault || (!conDefault && detalleactivofijoLocal.getid_cliente()!=null && !detalleactivofijoLocal.getid_cliente().equals(-1L))) {detalleactivofijoBean.setid_cliente(detalleactivofijoLocal.getid_cliente());}
			if(conDefault || (!conDefault && detalleactivofijoLocal.getid_partida_presu()!=null && !detalleactivofijoLocal.getid_partida_presu().equals(-1L))) {detalleactivofijoBean.setid_partida_presu(detalleactivofijoLocal.getid_partida_presu());}
			if(conDefault || (!conDefault && detalleactivofijoLocal.getcodigo()!=null && !detalleactivofijoLocal.getcodigo().equals(""))) {detalleactivofijoBean.setcodigo(detalleactivofijoLocal.getcodigo());}
			if(conDefault || (!conDefault && detalleactivofijoLocal.getnombre()!=null && !detalleactivofijoLocal.getnombre().equals(""))) {detalleactivofijoBean.setnombre(detalleactivofijoLocal.getnombre());}
			if(conDefault || (!conDefault && detalleactivofijoLocal.getserie()!=null && !detalleactivofijoLocal.getserie().equals(""))) {detalleactivofijoBean.setserie(detalleactivofijoLocal.getserie());}
			if(conDefault || (!conDefault && detalleactivofijoLocal.getfecha_compra()!=null && !detalleactivofijoLocal.getfecha_compra().equals(new Date()))) {detalleactivofijoBean.setfecha_compra(detalleactivofijoLocal.getfecha_compra());}
			if(conDefault || (!conDefault && detalleactivofijoLocal.getfecha_mantenimiento()!=null && !detalleactivofijoLocal.getfecha_mantenimiento().equals(new Date()))) {detalleactivofijoBean.setfecha_mantenimiento(detalleactivofijoLocal.getfecha_mantenimiento());}
			if(conDefault || (!conDefault && detalleactivofijoLocal.getfecha_correccion()!=null && !detalleactivofijoLocal.getfecha_correccion().equals(new Date()))) {detalleactivofijoBean.setfecha_correccion(detalleactivofijoLocal.getfecha_correccion());}
			if(conDefault || (!conDefault && detalleactivofijoLocal.getfecha_depreciacion()!=null && !detalleactivofijoLocal.getfecha_depreciacion().equals(new Date()))) {detalleactivofijoBean.setfecha_depreciacion(detalleactivofijoLocal.getfecha_depreciacion());}
			if(conDefault || (!conDefault && detalleactivofijoLocal.getclave()!=null && !detalleactivofijoLocal.getclave().equals(""))) {detalleactivofijoBean.setclave(detalleactivofijoLocal.getclave());}
			if(conDefault || (!conDefault && detalleactivofijoLocal.getmarca()!=null && !detalleactivofijoLocal.getmarca().equals(""))) {detalleactivofijoBean.setmarca(detalleactivofijoLocal.getmarca());}
			if(conDefault || (!conDefault && detalleactivofijoLocal.getmodelo()!=null && !detalleactivofijoLocal.getmodelo().equals(""))) {detalleactivofijoBean.setmodelo(detalleactivofijoLocal.getmodelo());}
			if(conDefault || (!conDefault && detalleactivofijoLocal.getcolor()!=null && !detalleactivofijoLocal.getcolor().equals(""))) {detalleactivofijoBean.setcolor(detalleactivofijoLocal.getcolor());}
			if(conDefault || (!conDefault && detalleactivofijoLocal.getfecha()!=null && !detalleactivofijoLocal.getfecha().equals(new Date()))) {detalleactivofijoBean.setfecha(detalleactivofijoLocal.getfecha());}
			if(conDefault || (!conDefault && detalleactivofijoLocal.getvalor_util()!=null && !detalleactivofijoLocal.getvalor_util().equals(0.0))) {detalleactivofijoBean.setvalor_util(detalleactivofijoLocal.getvalor_util());}
			if(conDefault || (!conDefault && detalleactivofijoLocal.getcosto_de_compra()!=null && !detalleactivofijoLocal.getcosto_de_compra().equals(0.0))) {detalleactivofijoBean.setcosto_de_compra(detalleactivofijoLocal.getcosto_de_compra());}
			if(conDefault || (!conDefault && detalleactivofijoLocal.getvida_util()!=null && !detalleactivofijoLocal.getvida_util().equals(0.0))) {detalleactivofijoBean.setvida_util(detalleactivofijoLocal.getvida_util());}
			if(conDefault || (!conDefault && detalleactivofijoLocal.getvalor_residual()!=null && !detalleactivofijoLocal.getvalor_residual().equals(0.0))) {detalleactivofijoBean.setvalor_residual(detalleactivofijoLocal.getvalor_residual());}
			if(conDefault || (!conDefault && detalleactivofijoLocal.getcantidad()!=null && !detalleactivofijoLocal.getcantidad().equals(0))) {detalleactivofijoBean.setcantidad(detalleactivofijoLocal.getcantidad());}
			if(conDefault || (!conDefault && detalleactivofijoLocal.getnombre_propietario()!=null && !detalleactivofijoLocal.getnombre_propietario().equals(""))) {detalleactivofijoBean.setnombre_propietario(detalleactivofijoLocal.getnombre_propietario());}
			if(conDefault || (!conDefault && detalleactivofijoLocal.getresponsable()!=null && !detalleactivofijoLocal.getresponsable().equals(""))) {detalleactivofijoBean.setresponsable(detalleactivofijoLocal.getresponsable());}
			if(conDefault || (!conDefault && detalleactivofijoLocal.getpath_foto()!=null && !detalleactivofijoLocal.getpath_foto().equals(""))) {detalleactivofijoBean.setpath_foto(detalleactivofijoLocal.getpath_foto());}
			if(conDefault || (!conDefault && detalleactivofijoLocal.getnumero_comprobante()!=null && !detalleactivofijoLocal.getnumero_comprobante().equals(""))) {detalleactivofijoBean.setnumero_comprobante(detalleactivofijoLocal.getnumero_comprobante());}
			if(conDefault || (!conDefault && detalleactivofijoLocal.getreferencia()!=null && !detalleactivofijoLocal.getreferencia().equals(""))) {detalleactivofijoBean.setreferencia(detalleactivofijoLocal.getreferencia());}
			if(conDefault || (!conDefault && detalleactivofijoLocal.getvalor_cotizacion()!=null && !detalleactivofijoLocal.getvalor_cotizacion().equals(0.0))) {detalleactivofijoBean.setvalor_cotizacion(detalleactivofijoLocal.getvalor_cotizacion());}
			if(conDefault || (!conDefault && detalleactivofijoLocal.getcon_partes()!=null && !detalleactivofijoLocal.getcon_partes().equals(false))) {detalleactivofijoBean.setcon_partes(detalleactivofijoLocal.getcon_partes());}
			if(conDefault || (!conDefault && detalleactivofijoLocal.getcon_garantia()!=null && !detalleactivofijoLocal.getcon_garantia().equals(false))) {detalleactivofijoBean.setcon_garantia(detalleactivofijoLocal.getcon_garantia());}
			if(conDefault || (!conDefault && detalleactivofijoLocal.getcon_existencia()!=null && !detalleactivofijoLocal.getcon_existencia().equals(false))) {detalleactivofijoBean.setcon_existencia(detalleactivofijoLocal.getcon_existencia());}
			if(conDefault || (!conDefault && detalleactivofijoLocal.getfecha_baja()!=null && !detalleactivofijoLocal.getfecha_baja().equals(new Date()))) {detalleactivofijoBean.setfecha_baja(detalleactivofijoLocal.getfecha_baja());}
			if(conDefault || (!conDefault && detalleactivofijoLocal.getpath_foto2()!=null && !detalleactivofijoLocal.getpath_foto2().equals(""))) {detalleactivofijoBean.setpath_foto2(detalleactivofijoLocal.getpath_foto2());}
			
		} catch(Exception e) {
			FuncionesSwing.manageException(this, e,logger,DetalleActivoFijoConstantesFunciones.CLASSNAME);
		}
	}
	*/
	
	@SuppressWarnings("rawtypes")
	public static void setActualComboBoxDetalleActivoFijoGenerico(Long idDetalleActivoFijoSeleccionado,JComboBox jComboBoxDetalleActivoFijo,List<DetalleActivoFijo> detalleactivofijosLocal)throws Exception {
		try {
			DetalleActivoFijo  detalleactivofijoTemp=null;

			for(DetalleActivoFijo detalleactivofijoAux:detalleactivofijosLocal) {
				if(detalleactivofijoAux.getId()!=null && detalleactivofijoAux.getId().equals(idDetalleActivoFijoSeleccionado)) {
					detalleactivofijoTemp=detalleactivofijoAux;
					break;
				}
			}

			jComboBoxDetalleActivoFijo.setSelectedItem(detalleactivofijoTemp);

		} catch(Exception e) {
			throw e;
		}
	}
	
	@SuppressWarnings("rawtypes")
	public static void setHotKeysComboBoxDetalleActivoFijoGenerico(JComboBox jComboBoxDetalleActivoFijo,JInternalFrameBase jInternalFrameBase,String sNombreHotKeyAbstractAction,String sTipoBusqueda)throws Exception {
		try {
			//GLOBAL(id_empresa,id_sucursal,id_ejercicio)
			//BASICO(normal)
			//CON_BUSQUEDA(Permite buscar Fk)
			
			String sKeyStrokeName="";
			KeyStroke keyStrokeControl=null;
			
			if(!sTipoBusqueda.equals("GLOBAL")) {
				
				//BUSCAR
				sKeyStrokeName = FuncionesSwing.getKeyNameControl("CONTROL_BUSCAR");
				keyStrokeControl=FuncionesSwing.getKeyStrokeControl("CONTROL_BUSCAR");
				
				jComboBoxDetalleActivoFijo.getInputMap().put(keyStrokeControl, sKeyStrokeName);
				jComboBoxDetalleActivoFijo.getActionMap().put(sKeyStrokeName, new ButtonAbstractAction(jInternalFrameBase,sNombreHotKeyAbstractAction+"Busqueda"));
				//BUSCAR
				
				
				//ACTUALIZAR
				sKeyStrokeName = FuncionesSwing.getKeyNameControl("CONTROL_ACTUALIZAR");
				keyStrokeControl=FuncionesSwing.getKeyStrokeControl("CONTROL_ACTUALIZAR");
				
				jComboBoxDetalleActivoFijo.getInputMap().put(keyStrokeControl, sKeyStrokeName);
				jComboBoxDetalleActivoFijo.getActionMap().put(sKeyStrokeName, new ButtonAbstractAction(jInternalFrameBase,sNombreHotKeyAbstractAction+"Update"));
				//ACTUALIZAR
				
				if(sTipoBusqueda.contains("CON_EVENT_CHANGE")) {
					if(Constantes2.CON_COMBOBOX_ITEMLISTENER) {
						jComboBoxDetalleActivoFijo.addFocusListener(new ComboBoxFocusListener(jInternalFrameBase,sNombreHotKeyAbstractAction));
						jComboBoxDetalleActivoFijo.addActionListener(new ComboBoxActionListener(jInternalFrameBase,sNombreHotKeyAbstractAction));						
					}
					
					/*
					if(Constantes2.CON_COMBOBOX_ITEMLISTENER) {
						jComboBoxDetalleActivoFijo.addItemListener(new ComboBoxItemListener(jInternalFrameBase,sNombreHotKeyAbstractAction));
					} else {
						jComboBoxDetalleActivoFijo.addActionListener(new ComboBoxActionListener(jInternalFrameBase,sNombreHotKeyAbstractAction));
					}
					*/
				}								
				
				//CON_BUSQUEDA								
				if(sTipoBusqueda.contains("CON_BUSQUEDA")) {
					sKeyStrokeName = FuncionesSwing.getKeyNameControl("CONTROL_BUSQUEDA");
					keyStrokeControl=FuncionesSwing.getKeyStrokeControl("CONTROL_BUSQUEDA");
							
					jComboBoxDetalleActivoFijo.getInputMap().put(keyStrokeControl, sKeyStrokeName);
					jComboBoxDetalleActivoFijo.getActionMap().put(sKeyStrokeName, new ButtonAbstractAction(jInternalFrameBase,sNombreHotKeyAbstractAction));
				}
				//CON_BUSQUEDA
				
				
			}
		} catch(Exception e) {
			throw e;
		}
	}
	
	//PARA INICIALIZAR CONTROLES DE TABLA
	@SuppressWarnings("rawtypes")
	public void setHotKeysComboBoxGenerico(JComboBox jComboBox,JInternalFrameBase jInternalFrameBase,String sNombreHotKeyAbstractAction,String sTipoBusqueda) {
		if(sTipoBusqueda.contains("CON_EVENT_CHANGE")) {
			if(Constantes2.CON_COMBOBOX_ITEMLISTENER) {
				jComboBox.addItemListener(new ComboBoxItemListener(jInternalFrameBase,sNombreHotKeyAbstractAction));
				jComboBox.addFocusListener(new ComboBoxFocusListener(jInternalFrameBase,sNombreHotKeyAbstractAction));
			} else {
				jComboBox.addActionListener(new ComboBoxActionListener(jInternalFrameBase,sNombreHotKeyAbstractAction));
				jComboBox.addFocusListener(new ComboBoxFocusListener(jInternalFrameBase,sNombreHotKeyAbstractAction));
			}
		}
	}
	
	//PARA INICIALIZAR CONTROLES DE TABLA
	public void setHotKeysJTextFieldGenerico(JTextField jTextField,JInternalFrameBase jInternalFrameBase,String sNombreHotKeyAbstractAction,String sTipoBusqueda) {
		jTextField.addFocusListener(new TextFieldFocusListener(jInternalFrameBase,sNombreHotKeyAbstractAction));
		jTextField.addActionListener(new TextFieldActionListener(jInternalFrameBase,sNombreHotKeyAbstractAction));
	}
	
	//PARA INICIALIZAR CONTROLES DE TABLA
	public void setHotKeysJTextAreaGenerico(JTextArea jTextArea,JInternalFrameBase jInternalFrameBase,String sNombreHotKeyAbstractAction,String sTipoBusqueda) {
		jTextArea.addFocusListener(new TextAreaFocusListener(jInternalFrameBase,sNombreHotKeyAbstractAction));
		
		//NO EXISTE
		//jTextArea.addActionListener(new TextAreaActionListener(jInternalFrameBase,sNombreHotKeyAbstractAction));
	}
	
	//PARA INICIALIZAR CONTROLES DE TABLA
	public void setHotKeysJLabelGenerico(JLabel jLabel,JInternalFrameBase jInternalFrameBase,String sNombreHotKeyAbstractAction,String sTipoBusqueda) {
		jLabel.addFocusListener(new LabelFocusListener(jInternalFrameBase,sNombreHotKeyAbstractAction));
		
		//NO EXISTE
		//jLabel.addActionListener(new LabelActionListener(jInternalFrameBase,sNombreHotKeyAbstractAction));
	}
	
	//PARA INICIALIZAR CONTROLES DE TABLA
	public void setHotKeysJCheckBoxGenerico(JCheckBox jCheckBox,JInternalFrameBase jInternalFrameBase,String sNombreHotKeyAbstractAction,String sTipoBusqueda) {
		jCheckBox.addFocusListener(new CheckBoxFocusListener(jInternalFrameBase,sNombreHotKeyAbstractAction));
		
		//SI SE DEFINE AL CAMBIAR VALOR, ESTE NUEVO VALOR NO SE ENVIA AL EVENTO
		//jCheckBox.addItemListener(new CheckBoxItemListener(jInternalFrameBase,sNombreHotKeyAbstractAction));
	}
	
	//PARA INICIALIZAR CONTROLES DE TABLA
	public void setHotKeysJDateChooserGenerico(JDateChooser jDateChooser,JInternalFrameBase jInternalFrameBase,String sNombreHotKeyAbstractAction,String sTipoBusqueda) {
		FuncionesSwing.addDateListener(jDateChooser, jInternalFrameBase, sNombreHotKeyAbstractAction);
	}
	
	//PARA INICIALIZAR CONTROLES DE TABLA
	public void setHotKeysJButtonGenerico(JButton jButton,JInternalFrameBase jInternalFrameBase,String sNombreHotKeyAbstractAction,String sTipoBusqueda) {
		jButton.addActionListener(new ButtonActionListener(jInternalFrameBase,sNombreHotKeyAbstractAction));
	}
	
	public void jButtonRelacionActionPerformed(String sTipo,ActionEvent evt,int rowIndex,Boolean conInicializar,Boolean esRelacionado) {
		//ABRIR RELACIONES
		try {
			
		if(sTipo.equals("MantenimientoActivoFijo")) {
			jButtonMantenimientoActivoFijoActionPerformed(evt,rowIndex,true,false,null);
		}
		 else if(sTipo.equals("ServicioTransporte")) {
			jButtonServicioTransporteActionPerformed(evt,rowIndex,true,false,null);
		}
		 else if(sTipo.equals("MovimientoActivoFijo")) {
			jButtonMovimientoActivoFijoActionPerformed(evt,rowIndex,true,false,null);
		}
		 else if(sTipo.equals("Vehiculo")) {
			jButtonVehiculoActionPerformed(evt,rowIndex,true,false,null);
		}
		 else if(sTipo.equals("MetodoDepreciacion")) {
			jButtonMetodoDepreciacionActionPerformed(evt,rowIndex,true,false,null);
		}
		 else if(sTipo.equals("ResponsableActivoFijo")) {
			jButtonResponsableActivoFijoActionPerformed(evt,rowIndex,true,false,null);
		}
		 else if(sTipo.equals("DepreciacionActivoFijo")) {
			jButtonDepreciacionActivoFijoActionPerformed(evt,rowIndex,true,false,null);
		}
		 else if(sTipo.equals("GastoDepreciacionCentroCosto")) {
			jButtonGastoDepreciacionCentroCostoActionPerformed(evt,rowIndex,true,false,null);
		}
		 else if(sTipo.equals("ParteActivoFijo")) {
			jButtonParteActivoFijoActionPerformed(evt,rowIndex,true,false,null);
		}
		} catch (Exception e) {
			FuncionesSwing.manageException2(this, e,logger,DetalleActivoFijoConstantesFunciones.CLASSNAME);
		}
	}
	
	public String getDescripcionFk(String sTipo,JTable table,Object value,int intSelectedRow) throws Exception {
		//DESCRIPCIONES FK		
		String sDescripcion="";
		
		if(Constantes.ISUSAEJBLOGICLAYER) {
			detalleactivofijo=(DetalleActivoFijo) detalleactivofijoLogic.getDetalleActivoFijos().toArray()[table.convertRowIndexToModel(intSelectedRow)];
		} else if(Constantes.ISUSAEJBREMOTE) {
			detalleactivofijo =(DetalleActivoFijo) detalleactivofijos.toArray()[table.convertRowIndexToModel(intSelectedRow)];
		}
					
		
		if(sTipo.equals("Empresa")) {
			//sDescripcion=this.getActualEmpresaForeignKeyDescripcion((Long)value);
			if(!detalleactivofijo.getIsNew() && !detalleactivofijo.getIsChanged() && !detalleactivofijo.getIsDeleted()) {
				sDescripcion=detalleactivofijo.getempresa_descripcion();
			} else {
				//sDescripcion=this.getActualEmpresaForeignKeyDescripcion((Long)value);
				sDescripcion=detalleactivofijo.getempresa_descripcion();
			}
		}

		if(sTipo.equals("Sucursal")) {
			//sDescripcion=this.getActualSucursalForeignKeyDescripcion((Long)value);
			if(!detalleactivofijo.getIsNew() && !detalleactivofijo.getIsChanged() && !detalleactivofijo.getIsDeleted()) {
				sDescripcion=detalleactivofijo.getsucursal_descripcion();
			} else {
				//sDescripcion=this.getActualSucursalForeignKeyDescripcion((Long)value);
				sDescripcion=detalleactivofijo.getsucursal_descripcion();
			}
		}

		if(sTipo.equals("DetalleGrupoActivoFijo")) {
			//sDescripcion=this.getActualDetalleGrupoActivoFijoForeignKeyDescripcion((Long)value);
			if(!detalleactivofijo.getIsNew() && !detalleactivofijo.getIsChanged() && !detalleactivofijo.getIsDeleted()) {
				sDescripcion=detalleactivofijo.getdetallegrupoactivofijo_descripcion();
			} else {
				//sDescripcion=this.getActualDetalleGrupoActivoFijoForeignKeyDescripcion((Long)value);
				sDescripcion=detalleactivofijo.getdetallegrupoactivofijo_descripcion();
			}
		}

		if(sTipo.equals("SubGrupoActivoFijo")) {
			//sDescripcion=this.getActualSubGrupoActivoFijoForeignKeyDescripcion((Long)value);
			if(!detalleactivofijo.getIsNew() && !detalleactivofijo.getIsChanged() && !detalleactivofijo.getIsDeleted()) {
				sDescripcion=detalleactivofijo.getsubgrupoactivofijo_descripcion();
			} else {
				//ES DEPENDIENTE, SE FORZA DESDE DESCRIPCION
				sDescripcion=detalleactivofijo.getsubgrupoactivofijo_descripcion();
			}
		}

		if(sTipo.equals("TipoRamoActivoFijo")) {
			//sDescripcion=this.getActualTipoRamoActivoFijoForeignKeyDescripcion((Long)value);
			if(!detalleactivofijo.getIsNew() && !detalleactivofijo.getIsChanged() && !detalleactivofijo.getIsDeleted()) {
				sDescripcion=detalleactivofijo.gettiporamoactivofijo_descripcion();
			} else {
				//sDescripcion=this.getActualTipoRamoActivoFijoForeignKeyDescripcion((Long)value);
				sDescripcion=detalleactivofijo.gettiporamoactivofijo_descripcion();
			}
		}

		if(sTipo.equals("TipoActivoFijoEmpresa")) {
			//sDescripcion=this.getActualTipoActivoFijoEmpresaForeignKeyDescripcion((Long)value);
			if(!detalleactivofijo.getIsNew() && !detalleactivofijo.getIsChanged() && !detalleactivofijo.getIsDeleted()) {
				sDescripcion=detalleactivofijo.gettipoactivofijoempresa_descripcion();
			} else {
				//sDescripcion=this.getActualTipoActivoFijoEmpresaForeignKeyDescripcion((Long)value);
				sDescripcion=detalleactivofijo.gettipoactivofijoempresa_descripcion();
			}
		}

		if(sTipo.equals("TipoDepreciacionEmpresa")) {
			//sDescripcion=this.getActualTipoDepreciacionEmpresaForeignKeyDescripcion((Long)value);
			if(!detalleactivofijo.getIsNew() && !detalleactivofijo.getIsChanged() && !detalleactivofijo.getIsDeleted()) {
				sDescripcion=detalleactivofijo.gettipodepreciacionempresa_descripcion();
			} else {
				//sDescripcion=this.getActualTipoDepreciacionEmpresaForeignKeyDescripcion((Long)value);
				sDescripcion=detalleactivofijo.gettipodepreciacionempresa_descripcion();
			}
		}

		if(sTipo.equals("EstadoActivoFijo")) {
			//sDescripcion=this.getActualEstadoActivoFijoForeignKeyDescripcion((Long)value);
			if(!detalleactivofijo.getIsNew() && !detalleactivofijo.getIsChanged() && !detalleactivofijo.getIsDeleted()) {
				sDescripcion=detalleactivofijo.getestadoactivofijo_descripcion();
			} else {
				//sDescripcion=this.getActualEstadoActivoFijoForeignKeyDescripcion((Long)value);
				sDescripcion=detalleactivofijo.getestadoactivofijo_descripcion();
			}
		}

		if(sTipo.equals("Cliente")) {
			//sDescripcion=this.getActualClienteForeignKeyDescripcion((Long)value);
			if(!detalleactivofijo.getIsNew() && !detalleactivofijo.getIsChanged() && !detalleactivofijo.getIsDeleted()) {
				sDescripcion=detalleactivofijo.getcliente_descripcion();
			} else {
				//sDescripcion=this.getActualClienteForeignKeyDescripcion((Long)value);
				sDescripcion=detalleactivofijo.getcliente_descripcion();
			}
		}

		if(sTipo.equals("PartidaPresu")) {
			//sDescripcion=this.getActualPartidaPresuForeignKeyDescripcion((Long)value);
			if(!detalleactivofijo.getIsNew() && !detalleactivofijo.getIsChanged() && !detalleactivofijo.getIsDeleted()) {
				sDescripcion=detalleactivofijo.getpartidapresu_descripcion();
			} else {
				//sDescripcion=this.getActualPartidaPresuForeignKeyDescripcion((Long)value);
				sDescripcion=detalleactivofijo.getpartidapresu_descripcion();
			}
		}

		
		return sDescripcion;
	}
	
	public Color getColorFk(String sTipo,JTable table,Object value,int intSelectedRow) throws Exception {
		//DESCRIPCIONES FK		
		Color color=Color.WHITE;
		
		DetalleActivoFijo detalleactivofijoRow=new DetalleActivoFijo();
		
		if(Constantes.ISUSAEJBLOGICLAYER) {
			detalleactivofijoRow=(DetalleActivoFijo) detalleactivofijoLogic.getDetalleActivoFijos().toArray()[table.convertRowIndexToModel(intSelectedRow)];
		} else if(Constantes.ISUSAEJBREMOTE) {
			detalleactivofijoRow=(DetalleActivoFijo) detalleactivofijos.toArray()[table.convertRowIndexToModel(intSelectedRow)];
		}
					
		
		
		return color;
	}
	
	
	
	
	public void jButtonMantenimientoActivoFijoActionPerformed(ActionEvent evt,int rowIndex,Boolean conInicializar,Boolean esRelacionado,DetalleActivoFijo detalleactivofijo) throws Exception {
			try {

				if(this.jInternalFrameDetalleFormDetalleActivoFijo==null) {
					this.inicializarFormDetalle();
				}

				if(Constantes.ISUSAEJBLOGICLAYER) {
					this.detalleactivofijoLogic.getNewConnexionToDeep("");
				}

				int intSelectedRow =rowIndex;

				if(intSelectedRow!=-1) {
					//ARCHITECTURE
					if(Constantes.ISUSAEJBLOGICLAYER) {
						this.detalleactivofijo = (DetalleActivoFijo)this.detalleactivofijoLogic.getDetalleActivoFijos().toArray()[this.jTableDatosDetalleActivoFijo.convertRowIndexToModel(intSelectedRow)];
					} else if(Constantes.ISUSAEJBREMOTE) {
						this.detalleactivofijo = (DetalleActivoFijo)this.detalleactivofijos.toArray()[this.jTableDatosDetalleActivoFijo.convertRowIndexToModel(intSelectedRow)];
					}
					//ARCHITECTURE
				} else {
					if(detalleactivofijo!=null) {
						this.detalleactivofijo = detalleactivofijo;
					} else {
						this.detalleactivofijo = new DetalleActivoFijo();
					}
				}

				if(this.isTienePermisosMantenimientoActivoFijo && this.permiteMantenimiento(this.detalleactivofijo)) {
					MantenimientoActivoFijoBeanSwingJInternalFrame mantenimientoactivofijoBeanSwingJInternalFrame=null;

					if(conInicializar) {
						this.jInternalFrameDetalleFormDetalleActivoFijo.mantenimientoactivofijoBeanSwingJInternalFramePopup=new MantenimientoActivoFijoBeanSwingJInternalFrame(false,false,this.jDesktopPane,this.usuarioActual,this.resumenUsuarioActual,this.moduloActual,this.opcionActual,this.parametroGeneralSg,this.parametroGeneralUsuario,PaginaTipo.SECUNDARIO,false,false,true,false);
						this.jInternalFrameDetalleFormDetalleActivoFijo.mantenimientoactivofijoBeanSwingJInternalFramePopup.setJInternalFrameParent(this);

						mantenimientoactivofijoBeanSwingJInternalFrame=this.jInternalFrameDetalleFormDetalleActivoFijo.mantenimientoactivofijoBeanSwingJInternalFramePopup;
					} else {
						mantenimientoactivofijoBeanSwingJInternalFrame=this.jInternalFrameDetalleFormDetalleActivoFijo.mantenimientoactivofijoBeanSwingJInternalFrame;
					}

					List<DetalleActivoFijo> detalleactivofijos=new ArrayList<DetalleActivoFijo>();
					detalleactivofijos.add(this.detalleactivofijo);
					if(!esRelacionado) {
						//mantenimientoactivofijoBeanSwingJInternalFrame.mantenimientoactivofijoSessionBean.setConGuardarRelaciones(false);
						//mantenimientoactivofijoBeanSwingJInternalFrame.mantenimientoactivofijoSessionBean.setEsGuardarRelacionado(false);
					}

					//DESHABILITA TEMPORALMENTE EVENTOS CHANGE DE TEXTOS,COMBOS,ETC
					mantenimientoactivofijoBeanSwingJInternalFrame.estaModoSeleccionar=true;
					this.jInternalFrameDetalleFormDetalleActivoFijo.cargarMantenimientoActivoFijoBeanSwingJInternalFrame(detalleactivofijos,this.detalleactivofijo,mantenimientoactivofijoBeanSwingJInternalFrame,/*conInicializar,*/mantenimientoactivofijoBeanSwingJInternalFrame.mantenimientoactivofijoSessionBean.getConGuardarRelaciones(),mantenimientoactivofijoBeanSwingJInternalFrame.mantenimientoactivofijoSessionBean.getEsGuardarRelacionado());
					mantenimientoactivofijoBeanSwingJInternalFrame.estaModoSeleccionar=false;


					if(!esRelacionado) {
						mantenimientoactivofijoBeanSwingJInternalFrame.actualizarEstadoPanelsMantenimientoActivoFijo("no_relacionado");

						mantenimientoactivofijoBeanSwingJInternalFrame.redimensionarTablaDatosConTamanio(MantenimientoActivoFijoConstantesFunciones.ITAMANIOFILATABLA + (MantenimientoActivoFijoConstantesFunciones.ITAMANIOFILATABLA/2));

						mantenimientoactivofijoBeanSwingJInternalFrame.setLocation(xOffset*(openFrameCount + Constantes.INUM_MAX_VENTANAS_REL_X), yOffset*(openFrameCount+Constantes.INUM_MAX_VENTANAS_REL_Y));

						TitledBorder titledBorderDetalleActivoFijo=(TitledBorder)this.jScrollPanelDatosDetalleActivoFijo.getBorder();
						TitledBorder titledBorderMantenimientoActivoFijo=(TitledBorder)mantenimientoactivofijoBeanSwingJInternalFrame.jScrollPanelDatosMantenimientoActivoFijo.getBorder();

						titledBorderMantenimientoActivoFijo.setTitle(titledBorderDetalleActivoFijo.getTitle() + " -> Mantenimiento Activo Fijo");

						if(!Constantes.CON_VARIAS_VENTANAS) {
							MainJFrame.cerrarJInternalFramesExistentes(this.jDesktopPane,mantenimientoactivofijoBeanSwingJInternalFrame);
						}

						mantenimientoactivofijoBeanSwingJInternalFrame.setVisible(true);

						this.jDesktopPane.add(mantenimientoactivofijoBeanSwingJInternalFrame);

						mantenimientoactivofijoBeanSwingJInternalFrame.setSelected(true);
					}

				} else {
					if(!this.detalleactivofijoSessionBean.getConGuardarRelaciones()) {
						JOptionPane.showMessageDialog(this,"NO TIENE PERMISOS PARA USAR LA FUNCIONALIDAD DE Mantenimiento Activo Fijo",Constantes.SERROR,JOptionPane.ERROR_MESSAGE);
					}
				}
				if(Constantes.ISUSAEJBLOGICLAYER) {
					this.detalleactivofijoLogic.commitNewConnexionToDeep();
				}

			}

			catch(Exception e) {
				if(Constantes.ISUSAEJBLOGICLAYER) {
					this.detalleactivofijoLogic.rollbackNewConnexionToDeep();
				}


				FuncionesSwing.manageException2(this, e,logger,DetalleActivoFijoConstantesFunciones.CLASSNAME);
			} finally { 
				if(Constantes.ISUSAEJBLOGICLAYER) {
					this.detalleactivofijoLogic.closeNewConnexionToDeep();
				}

			}
		}

	public void jButtonServicioTransporteActionPerformed(ActionEvent evt,int rowIndex,Boolean conInicializar,Boolean esRelacionado,DetalleActivoFijo detalleactivofijo) throws Exception {
			try {

				if(this.jInternalFrameDetalleFormDetalleActivoFijo==null) {
					this.inicializarFormDetalle();
				}

				if(Constantes.ISUSAEJBLOGICLAYER) {
					this.detalleactivofijoLogic.getNewConnexionToDeep("");
				}

				int intSelectedRow =rowIndex;

				if(intSelectedRow!=-1) {
					//ARCHITECTURE
					if(Constantes.ISUSAEJBLOGICLAYER) {
						this.detalleactivofijo = (DetalleActivoFijo)this.detalleactivofijoLogic.getDetalleActivoFijos().toArray()[this.jTableDatosDetalleActivoFijo.convertRowIndexToModel(intSelectedRow)];
					} else if(Constantes.ISUSAEJBREMOTE) {
						this.detalleactivofijo = (DetalleActivoFijo)this.detalleactivofijos.toArray()[this.jTableDatosDetalleActivoFijo.convertRowIndexToModel(intSelectedRow)];
					}
					//ARCHITECTURE
				} else {
					if(detalleactivofijo!=null) {
						this.detalleactivofijo = detalleactivofijo;
					} else {
						this.detalleactivofijo = new DetalleActivoFijo();
					}
				}

				if(this.isTienePermisosServicioTransporte && this.permiteMantenimiento(this.detalleactivofijo)) {
					ServicioTransporteBeanSwingJInternalFrame serviciotransporteBeanSwingJInternalFrame=null;

					if(conInicializar) {
						this.jInternalFrameDetalleFormDetalleActivoFijo.serviciotransporteBeanSwingJInternalFramePopup=new ServicioTransporteBeanSwingJInternalFrame(false,false,this.jDesktopPane,this.usuarioActual,this.resumenUsuarioActual,this.moduloActual,this.opcionActual,this.parametroGeneralSg,this.parametroGeneralUsuario,PaginaTipo.SECUNDARIO,false,false,true,false);
						this.jInternalFrameDetalleFormDetalleActivoFijo.serviciotransporteBeanSwingJInternalFramePopup.setJInternalFrameParent(this);

						serviciotransporteBeanSwingJInternalFrame=this.jInternalFrameDetalleFormDetalleActivoFijo.serviciotransporteBeanSwingJInternalFramePopup;
					} else {
						serviciotransporteBeanSwingJInternalFrame=this.jInternalFrameDetalleFormDetalleActivoFijo.serviciotransporteBeanSwingJInternalFrame;
					}

					List<DetalleActivoFijo> detalleactivofijos=new ArrayList<DetalleActivoFijo>();
					detalleactivofijos.add(this.detalleactivofijo);
					if(!esRelacionado) {
						//serviciotransporteBeanSwingJInternalFrame.serviciotransporteSessionBean.setConGuardarRelaciones(false);
						//serviciotransporteBeanSwingJInternalFrame.serviciotransporteSessionBean.setEsGuardarRelacionado(false);
					}

					//DESHABILITA TEMPORALMENTE EVENTOS CHANGE DE TEXTOS,COMBOS,ETC
					serviciotransporteBeanSwingJInternalFrame.estaModoSeleccionar=true;
					this.jInternalFrameDetalleFormDetalleActivoFijo.cargarServicioTransporteBeanSwingJInternalFrame(detalleactivofijos,this.detalleactivofijo,serviciotransporteBeanSwingJInternalFrame,/*conInicializar,*/serviciotransporteBeanSwingJInternalFrame.serviciotransporteSessionBean.getConGuardarRelaciones(),serviciotransporteBeanSwingJInternalFrame.serviciotransporteSessionBean.getEsGuardarRelacionado());
					serviciotransporteBeanSwingJInternalFrame.estaModoSeleccionar=false;


					if(!esRelacionado) {
						serviciotransporteBeanSwingJInternalFrame.actualizarEstadoPanelsServicioTransporte("no_relacionado");

						serviciotransporteBeanSwingJInternalFrame.redimensionarTablaDatosConTamanio(ServicioTransporteConstantesFunciones.ITAMANIOFILATABLA + (ServicioTransporteConstantesFunciones.ITAMANIOFILATABLA/2));

						serviciotransporteBeanSwingJInternalFrame.setLocation(xOffset*(openFrameCount + Constantes.INUM_MAX_VENTANAS_REL_X), yOffset*(openFrameCount+Constantes.INUM_MAX_VENTANAS_REL_Y));

						TitledBorder titledBorderDetalleActivoFijo=(TitledBorder)this.jScrollPanelDatosDetalleActivoFijo.getBorder();
						TitledBorder titledBorderServicioTransporte=(TitledBorder)serviciotransporteBeanSwingJInternalFrame.jScrollPanelDatosServicioTransporte.getBorder();

						titledBorderServicioTransporte.setTitle(titledBorderDetalleActivoFijo.getTitle() + " -> Servicio Transporte");

						if(!Constantes.CON_VARIAS_VENTANAS) {
							MainJFrame.cerrarJInternalFramesExistentes(this.jDesktopPane,serviciotransporteBeanSwingJInternalFrame);
						}

						serviciotransporteBeanSwingJInternalFrame.setVisible(true);

						this.jDesktopPane.add(serviciotransporteBeanSwingJInternalFrame);

						serviciotransporteBeanSwingJInternalFrame.setSelected(true);
					}

				} else {
					if(!this.detalleactivofijoSessionBean.getConGuardarRelaciones()) {
						JOptionPane.showMessageDialog(this,"NO TIENE PERMISOS PARA USAR LA FUNCIONALIDAD DE Servicio Transporte",Constantes.SERROR,JOptionPane.ERROR_MESSAGE);
					}
				}
				if(Constantes.ISUSAEJBLOGICLAYER) {
					this.detalleactivofijoLogic.commitNewConnexionToDeep();
				}

			}

			catch(Exception e) {
				if(Constantes.ISUSAEJBLOGICLAYER) {
					this.detalleactivofijoLogic.rollbackNewConnexionToDeep();
				}


				FuncionesSwing.manageException2(this, e,logger,DetalleActivoFijoConstantesFunciones.CLASSNAME);
			} finally { 
				if(Constantes.ISUSAEJBLOGICLAYER) {
					this.detalleactivofijoLogic.closeNewConnexionToDeep();
				}

			}
		}

	public void jButtonMovimientoActivoFijoActionPerformed(ActionEvent evt,int rowIndex,Boolean conInicializar,Boolean esRelacionado,DetalleActivoFijo detalleactivofijo) throws Exception {
			try {

				if(this.jInternalFrameDetalleFormDetalleActivoFijo==null) {
					this.inicializarFormDetalle();
				}

				if(Constantes.ISUSAEJBLOGICLAYER) {
					this.detalleactivofijoLogic.getNewConnexionToDeep("");
				}

				int intSelectedRow =rowIndex;

				if(intSelectedRow!=-1) {
					//ARCHITECTURE
					if(Constantes.ISUSAEJBLOGICLAYER) {
						this.detalleactivofijo = (DetalleActivoFijo)this.detalleactivofijoLogic.getDetalleActivoFijos().toArray()[this.jTableDatosDetalleActivoFijo.convertRowIndexToModel(intSelectedRow)];
					} else if(Constantes.ISUSAEJBREMOTE) {
						this.detalleactivofijo = (DetalleActivoFijo)this.detalleactivofijos.toArray()[this.jTableDatosDetalleActivoFijo.convertRowIndexToModel(intSelectedRow)];
					}
					//ARCHITECTURE
				} else {
					if(detalleactivofijo!=null) {
						this.detalleactivofijo = detalleactivofijo;
					} else {
						this.detalleactivofijo = new DetalleActivoFijo();
					}
				}

				if(this.isTienePermisosMovimientoActivoFijo && this.permiteMantenimiento(this.detalleactivofijo)) {
					MovimientoActivoFijoBeanSwingJInternalFrame movimientoactivofijoBeanSwingJInternalFrame=null;

					if(conInicializar) {
						this.jInternalFrameDetalleFormDetalleActivoFijo.movimientoactivofijoBeanSwingJInternalFramePopup=new MovimientoActivoFijoBeanSwingJInternalFrame(false,false,this.jDesktopPane,this.usuarioActual,this.resumenUsuarioActual,this.moduloActual,this.opcionActual,this.parametroGeneralSg,this.parametroGeneralUsuario,PaginaTipo.SECUNDARIO,false,false,true,false);
						this.jInternalFrameDetalleFormDetalleActivoFijo.movimientoactivofijoBeanSwingJInternalFramePopup.setJInternalFrameParent(this);

						movimientoactivofijoBeanSwingJInternalFrame=this.jInternalFrameDetalleFormDetalleActivoFijo.movimientoactivofijoBeanSwingJInternalFramePopup;
					} else {
						movimientoactivofijoBeanSwingJInternalFrame=this.jInternalFrameDetalleFormDetalleActivoFijo.movimientoactivofijoBeanSwingJInternalFrame;
					}

					List<DetalleActivoFijo> detalleactivofijos=new ArrayList<DetalleActivoFijo>();
					detalleactivofijos.add(this.detalleactivofijo);
					if(!esRelacionado) {
						//movimientoactivofijoBeanSwingJInternalFrame.movimientoactivofijoSessionBean.setConGuardarRelaciones(false);
						//movimientoactivofijoBeanSwingJInternalFrame.movimientoactivofijoSessionBean.setEsGuardarRelacionado(false);
					}

					//DESHABILITA TEMPORALMENTE EVENTOS CHANGE DE TEXTOS,COMBOS,ETC
					movimientoactivofijoBeanSwingJInternalFrame.estaModoSeleccionar=true;
					this.jInternalFrameDetalleFormDetalleActivoFijo.cargarMovimientoActivoFijoBeanSwingJInternalFrame(detalleactivofijos,this.detalleactivofijo,movimientoactivofijoBeanSwingJInternalFrame,/*conInicializar,*/movimientoactivofijoBeanSwingJInternalFrame.movimientoactivofijoSessionBean.getConGuardarRelaciones(),movimientoactivofijoBeanSwingJInternalFrame.movimientoactivofijoSessionBean.getEsGuardarRelacionado());
					movimientoactivofijoBeanSwingJInternalFrame.estaModoSeleccionar=false;


					if(!esRelacionado) {
						movimientoactivofijoBeanSwingJInternalFrame.actualizarEstadoPanelsMovimientoActivoFijo("no_relacionado");

						movimientoactivofijoBeanSwingJInternalFrame.redimensionarTablaDatosConTamanio(MovimientoActivoFijoConstantesFunciones.ITAMANIOFILATABLA + (MovimientoActivoFijoConstantesFunciones.ITAMANIOFILATABLA/2));

						movimientoactivofijoBeanSwingJInternalFrame.setLocation(xOffset*(openFrameCount + Constantes.INUM_MAX_VENTANAS_REL_X), yOffset*(openFrameCount+Constantes.INUM_MAX_VENTANAS_REL_Y));

						TitledBorder titledBorderDetalleActivoFijo=(TitledBorder)this.jScrollPanelDatosDetalleActivoFijo.getBorder();
						TitledBorder titledBorderMovimientoActivoFijo=(TitledBorder)movimientoactivofijoBeanSwingJInternalFrame.jScrollPanelDatosMovimientoActivoFijo.getBorder();

						titledBorderMovimientoActivoFijo.setTitle(titledBorderDetalleActivoFijo.getTitle() + " -> Movimiento Activo Fijo");

						if(!Constantes.CON_VARIAS_VENTANAS) {
							MainJFrame.cerrarJInternalFramesExistentes(this.jDesktopPane,movimientoactivofijoBeanSwingJInternalFrame);
						}

						movimientoactivofijoBeanSwingJInternalFrame.setVisible(true);

						this.jDesktopPane.add(movimientoactivofijoBeanSwingJInternalFrame);

						movimientoactivofijoBeanSwingJInternalFrame.setSelected(true);
					}

				} else {
					if(!this.detalleactivofijoSessionBean.getConGuardarRelaciones()) {
						JOptionPane.showMessageDialog(this,"NO TIENE PERMISOS PARA USAR LA FUNCIONALIDAD DE Movimiento Activo Fijo",Constantes.SERROR,JOptionPane.ERROR_MESSAGE);
					}
				}
				if(Constantes.ISUSAEJBLOGICLAYER) {
					this.detalleactivofijoLogic.commitNewConnexionToDeep();
				}

			}

			catch(Exception e) {
				if(Constantes.ISUSAEJBLOGICLAYER) {
					this.detalleactivofijoLogic.rollbackNewConnexionToDeep();
				}


				FuncionesSwing.manageException2(this, e,logger,DetalleActivoFijoConstantesFunciones.CLASSNAME);
			} finally { 
				if(Constantes.ISUSAEJBLOGICLAYER) {
					this.detalleactivofijoLogic.closeNewConnexionToDeep();
				}

			}
		}

	public void jButtonVehiculoActionPerformed(ActionEvent evt,int rowIndex,Boolean conInicializar,Boolean esRelacionado,DetalleActivoFijo detalleactivofijo) throws Exception {
			try {

				if(this.jInternalFrameDetalleFormDetalleActivoFijo==null) {
					this.inicializarFormDetalle();
				}

				if(Constantes.ISUSAEJBLOGICLAYER) {
					this.detalleactivofijoLogic.getNewConnexionToDeep("");
				}

				int intSelectedRow =rowIndex;

				if(intSelectedRow!=-1) {
					//ARCHITECTURE
					if(Constantes.ISUSAEJBLOGICLAYER) {
						this.detalleactivofijo = (DetalleActivoFijo)this.detalleactivofijoLogic.getDetalleActivoFijos().toArray()[this.jTableDatosDetalleActivoFijo.convertRowIndexToModel(intSelectedRow)];
					} else if(Constantes.ISUSAEJBREMOTE) {
						this.detalleactivofijo = (DetalleActivoFijo)this.detalleactivofijos.toArray()[this.jTableDatosDetalleActivoFijo.convertRowIndexToModel(intSelectedRow)];
					}
					//ARCHITECTURE
				} else {
					if(detalleactivofijo!=null) {
						this.detalleactivofijo = detalleactivofijo;
					} else {
						this.detalleactivofijo = new DetalleActivoFijo();
					}
				}

				if(this.isTienePermisosVehiculo && this.permiteMantenimiento(this.detalleactivofijo)) {
					VehiculoBeanSwingJInternalFrame vehiculoBeanSwingJInternalFrame=null;

					if(conInicializar) {
						this.jInternalFrameDetalleFormDetalleActivoFijo.vehiculoBeanSwingJInternalFramePopup=new VehiculoBeanSwingJInternalFrame(false,false,this.jDesktopPane,this.usuarioActual,this.resumenUsuarioActual,this.moduloActual,this.opcionActual,this.parametroGeneralSg,this.parametroGeneralUsuario,PaginaTipo.SECUNDARIO,false,false,true,false);
						this.jInternalFrameDetalleFormDetalleActivoFijo.vehiculoBeanSwingJInternalFramePopup.setJInternalFrameParent(this);

						vehiculoBeanSwingJInternalFrame=this.jInternalFrameDetalleFormDetalleActivoFijo.vehiculoBeanSwingJInternalFramePopup;
					} else {
						vehiculoBeanSwingJInternalFrame=this.jInternalFrameDetalleFormDetalleActivoFijo.vehiculoBeanSwingJInternalFrame;
					}

					List<DetalleActivoFijo> detalleactivofijos=new ArrayList<DetalleActivoFijo>();
					detalleactivofijos.add(this.detalleactivofijo);
					if(!esRelacionado) {
						//vehiculoBeanSwingJInternalFrame.vehiculoSessionBean.setConGuardarRelaciones(false);
						//vehiculoBeanSwingJInternalFrame.vehiculoSessionBean.setEsGuardarRelacionado(false);
					}

					//DESHABILITA TEMPORALMENTE EVENTOS CHANGE DE TEXTOS,COMBOS,ETC
					vehiculoBeanSwingJInternalFrame.estaModoSeleccionar=true;
					this.jInternalFrameDetalleFormDetalleActivoFijo.cargarVehiculoBeanSwingJInternalFrame(detalleactivofijos,this.detalleactivofijo,vehiculoBeanSwingJInternalFrame,/*conInicializar,*/vehiculoBeanSwingJInternalFrame.vehiculoSessionBean.getConGuardarRelaciones(),vehiculoBeanSwingJInternalFrame.vehiculoSessionBean.getEsGuardarRelacionado());
					vehiculoBeanSwingJInternalFrame.estaModoSeleccionar=false;


					if(!esRelacionado) {
						vehiculoBeanSwingJInternalFrame.actualizarEstadoPanelsVehiculo("no_relacionado");

						vehiculoBeanSwingJInternalFrame.redimensionarTablaDatosConTamanio(VehiculoConstantesFunciones.ITAMANIOFILATABLA + (VehiculoConstantesFunciones.ITAMANIOFILATABLA/2));

						vehiculoBeanSwingJInternalFrame.setLocation(xOffset*(openFrameCount + Constantes.INUM_MAX_VENTANAS_REL_X), yOffset*(openFrameCount+Constantes.INUM_MAX_VENTANAS_REL_Y));

						TitledBorder titledBorderDetalleActivoFijo=(TitledBorder)this.jScrollPanelDatosDetalleActivoFijo.getBorder();
						TitledBorder titledBorderVehiculo=(TitledBorder)vehiculoBeanSwingJInternalFrame.jScrollPanelDatosVehiculo.getBorder();

						titledBorderVehiculo.setTitle(titledBorderDetalleActivoFijo.getTitle() + " -> Vehiculo");

						if(!Constantes.CON_VARIAS_VENTANAS) {
							MainJFrame.cerrarJInternalFramesExistentes(this.jDesktopPane,vehiculoBeanSwingJInternalFrame);
						}

						vehiculoBeanSwingJInternalFrame.setVisible(true);

						this.jDesktopPane.add(vehiculoBeanSwingJInternalFrame);

						vehiculoBeanSwingJInternalFrame.setSelected(true);
					}

				} else {
					if(!this.detalleactivofijoSessionBean.getConGuardarRelaciones()) {
						JOptionPane.showMessageDialog(this,"NO TIENE PERMISOS PARA USAR LA FUNCIONALIDAD DE Vehiculo",Constantes.SERROR,JOptionPane.ERROR_MESSAGE);
					}
				}
				if(Constantes.ISUSAEJBLOGICLAYER) {
					this.detalleactivofijoLogic.commitNewConnexionToDeep();
				}

			}

			catch(Exception e) {
				if(Constantes.ISUSAEJBLOGICLAYER) {
					this.detalleactivofijoLogic.rollbackNewConnexionToDeep();
				}


				FuncionesSwing.manageException2(this, e,logger,DetalleActivoFijoConstantesFunciones.CLASSNAME);
			} finally { 
				if(Constantes.ISUSAEJBLOGICLAYER) {
					this.detalleactivofijoLogic.closeNewConnexionToDeep();
				}

			}
		}

	public void jButtonMetodoDepreciacionActionPerformed(ActionEvent evt,int rowIndex,Boolean conInicializar,Boolean esRelacionado,DetalleActivoFijo detalleactivofijo) throws Exception {
			try {

				if(this.jInternalFrameDetalleFormDetalleActivoFijo==null) {
					this.inicializarFormDetalle();
				}

				if(Constantes.ISUSAEJBLOGICLAYER) {
					this.detalleactivofijoLogic.getNewConnexionToDeep("");
				}

				int intSelectedRow =rowIndex;

				if(intSelectedRow!=-1) {
					//ARCHITECTURE
					if(Constantes.ISUSAEJBLOGICLAYER) {
						this.detalleactivofijo = (DetalleActivoFijo)this.detalleactivofijoLogic.getDetalleActivoFijos().toArray()[this.jTableDatosDetalleActivoFijo.convertRowIndexToModel(intSelectedRow)];
					} else if(Constantes.ISUSAEJBREMOTE) {
						this.detalleactivofijo = (DetalleActivoFijo)this.detalleactivofijos.toArray()[this.jTableDatosDetalleActivoFijo.convertRowIndexToModel(intSelectedRow)];
					}
					//ARCHITECTURE
				} else {
					if(detalleactivofijo!=null) {
						this.detalleactivofijo = detalleactivofijo;
					} else {
						this.detalleactivofijo = new DetalleActivoFijo();
					}
				}

				if(this.isTienePermisosMetodoDepreciacion && this.permiteMantenimiento(this.detalleactivofijo)) {
					MetodoDepreciacionBeanSwingJInternalFrame metododepreciacionBeanSwingJInternalFrame=null;

					if(conInicializar) {
						this.jInternalFrameDetalleFormDetalleActivoFijo.metododepreciacionBeanSwingJInternalFramePopup=new MetodoDepreciacionBeanSwingJInternalFrame(false,false,this.jDesktopPane,this.usuarioActual,this.resumenUsuarioActual,this.moduloActual,this.opcionActual,this.parametroGeneralSg,this.parametroGeneralUsuario,PaginaTipo.SECUNDARIO,false,false,true,false);
						this.jInternalFrameDetalleFormDetalleActivoFijo.metododepreciacionBeanSwingJInternalFramePopup.setJInternalFrameParent(this);

						metododepreciacionBeanSwingJInternalFrame=this.jInternalFrameDetalleFormDetalleActivoFijo.metododepreciacionBeanSwingJInternalFramePopup;
					} else {
						metododepreciacionBeanSwingJInternalFrame=this.jInternalFrameDetalleFormDetalleActivoFijo.metododepreciacionBeanSwingJInternalFrame;
					}

					List<DetalleActivoFijo> detalleactivofijos=new ArrayList<DetalleActivoFijo>();
					detalleactivofijos.add(this.detalleactivofijo);
					if(!esRelacionado) {
						//metododepreciacionBeanSwingJInternalFrame.metododepreciacionSessionBean.setConGuardarRelaciones(false);
						//metododepreciacionBeanSwingJInternalFrame.metododepreciacionSessionBean.setEsGuardarRelacionado(false);
					}

					//DESHABILITA TEMPORALMENTE EVENTOS CHANGE DE TEXTOS,COMBOS,ETC
					metododepreciacionBeanSwingJInternalFrame.estaModoSeleccionar=true;
					this.jInternalFrameDetalleFormDetalleActivoFijo.cargarMetodoDepreciacionBeanSwingJInternalFrame(detalleactivofijos,this.detalleactivofijo,metododepreciacionBeanSwingJInternalFrame,/*conInicializar,*/metododepreciacionBeanSwingJInternalFrame.metododepreciacionSessionBean.getConGuardarRelaciones(),metododepreciacionBeanSwingJInternalFrame.metododepreciacionSessionBean.getEsGuardarRelacionado());
					metododepreciacionBeanSwingJInternalFrame.estaModoSeleccionar=false;


					if(!esRelacionado) {
						metododepreciacionBeanSwingJInternalFrame.actualizarEstadoPanelsMetodoDepreciacion("no_relacionado");

						metododepreciacionBeanSwingJInternalFrame.redimensionarTablaDatosConTamanio(MetodoDepreciacionConstantesFunciones.ITAMANIOFILATABLA + (MetodoDepreciacionConstantesFunciones.ITAMANIOFILATABLA/2));

						metododepreciacionBeanSwingJInternalFrame.setLocation(xOffset*(openFrameCount + Constantes.INUM_MAX_VENTANAS_REL_X), yOffset*(openFrameCount+Constantes.INUM_MAX_VENTANAS_REL_Y));

						TitledBorder titledBorderDetalleActivoFijo=(TitledBorder)this.jScrollPanelDatosDetalleActivoFijo.getBorder();
						TitledBorder titledBorderMetodoDepreciacion=(TitledBorder)metododepreciacionBeanSwingJInternalFrame.jScrollPanelDatosMetodoDepreciacion.getBorder();

						titledBorderMetodoDepreciacion.setTitle(titledBorderDetalleActivoFijo.getTitle() + " -> Metodo Depreciacion");

						if(!Constantes.CON_VARIAS_VENTANAS) {
							MainJFrame.cerrarJInternalFramesExistentes(this.jDesktopPane,metododepreciacionBeanSwingJInternalFrame);
						}

						metododepreciacionBeanSwingJInternalFrame.setVisible(true);

						this.jDesktopPane.add(metododepreciacionBeanSwingJInternalFrame);

						metododepreciacionBeanSwingJInternalFrame.setSelected(true);
					}

				} else {
					if(!this.detalleactivofijoSessionBean.getConGuardarRelaciones()) {
						JOptionPane.showMessageDialog(this,"NO TIENE PERMISOS PARA USAR LA FUNCIONALIDAD DE Metodo Depreciacion",Constantes.SERROR,JOptionPane.ERROR_MESSAGE);
					}
				}
				if(Constantes.ISUSAEJBLOGICLAYER) {
					this.detalleactivofijoLogic.commitNewConnexionToDeep();
				}

			}

			catch(Exception e) {
				if(Constantes.ISUSAEJBLOGICLAYER) {
					this.detalleactivofijoLogic.rollbackNewConnexionToDeep();
				}


				FuncionesSwing.manageException2(this, e,logger,DetalleActivoFijoConstantesFunciones.CLASSNAME);
			} finally { 
				if(Constantes.ISUSAEJBLOGICLAYER) {
					this.detalleactivofijoLogic.closeNewConnexionToDeep();
				}

			}
		}

	public void jButtonResponsableActivoFijoActionPerformed(ActionEvent evt,int rowIndex,Boolean conInicializar,Boolean esRelacionado,DetalleActivoFijo detalleactivofijo) throws Exception {
			try {

				if(this.jInternalFrameDetalleFormDetalleActivoFijo==null) {
					this.inicializarFormDetalle();
				}

				if(Constantes.ISUSAEJBLOGICLAYER) {
					this.detalleactivofijoLogic.getNewConnexionToDeep("");
				}

				int intSelectedRow =rowIndex;

				if(intSelectedRow!=-1) {
					//ARCHITECTURE
					if(Constantes.ISUSAEJBLOGICLAYER) {
						this.detalleactivofijo = (DetalleActivoFijo)this.detalleactivofijoLogic.getDetalleActivoFijos().toArray()[this.jTableDatosDetalleActivoFijo.convertRowIndexToModel(intSelectedRow)];
					} else if(Constantes.ISUSAEJBREMOTE) {
						this.detalleactivofijo = (DetalleActivoFijo)this.detalleactivofijos.toArray()[this.jTableDatosDetalleActivoFijo.convertRowIndexToModel(intSelectedRow)];
					}
					//ARCHITECTURE
				} else {
					if(detalleactivofijo!=null) {
						this.detalleactivofijo = detalleactivofijo;
					} else {
						this.detalleactivofijo = new DetalleActivoFijo();
					}
				}

				if(this.isTienePermisosResponsableActivoFijo && this.permiteMantenimiento(this.detalleactivofijo)) {
					ResponsableActivoFijoBeanSwingJInternalFrame responsableactivofijoBeanSwingJInternalFrame=null;

					if(conInicializar) {
						this.jInternalFrameDetalleFormDetalleActivoFijo.responsableactivofijoBeanSwingJInternalFramePopup=new ResponsableActivoFijoBeanSwingJInternalFrame(false,false,this.jDesktopPane,this.usuarioActual,this.resumenUsuarioActual,this.moduloActual,this.opcionActual,this.parametroGeneralSg,this.parametroGeneralUsuario,PaginaTipo.SECUNDARIO,false,false,true,false);
						this.jInternalFrameDetalleFormDetalleActivoFijo.responsableactivofijoBeanSwingJInternalFramePopup.setJInternalFrameParent(this);

						responsableactivofijoBeanSwingJInternalFrame=this.jInternalFrameDetalleFormDetalleActivoFijo.responsableactivofijoBeanSwingJInternalFramePopup;
					} else {
						responsableactivofijoBeanSwingJInternalFrame=this.jInternalFrameDetalleFormDetalleActivoFijo.responsableactivofijoBeanSwingJInternalFrame;
					}

					List<DetalleActivoFijo> detalleactivofijos=new ArrayList<DetalleActivoFijo>();
					detalleactivofijos.add(this.detalleactivofijo);
					if(!esRelacionado) {
						//responsableactivofijoBeanSwingJInternalFrame.responsableactivofijoSessionBean.setConGuardarRelaciones(false);
						//responsableactivofijoBeanSwingJInternalFrame.responsableactivofijoSessionBean.setEsGuardarRelacionado(false);
					}

					//DESHABILITA TEMPORALMENTE EVENTOS CHANGE DE TEXTOS,COMBOS,ETC
					responsableactivofijoBeanSwingJInternalFrame.estaModoSeleccionar=true;
					this.jInternalFrameDetalleFormDetalleActivoFijo.cargarResponsableActivoFijoBeanSwingJInternalFrame(detalleactivofijos,this.detalleactivofijo,responsableactivofijoBeanSwingJInternalFrame,/*conInicializar,*/responsableactivofijoBeanSwingJInternalFrame.responsableactivofijoSessionBean.getConGuardarRelaciones(),responsableactivofijoBeanSwingJInternalFrame.responsableactivofijoSessionBean.getEsGuardarRelacionado());
					responsableactivofijoBeanSwingJInternalFrame.estaModoSeleccionar=false;


					if(!esRelacionado) {
						responsableactivofijoBeanSwingJInternalFrame.actualizarEstadoPanelsResponsableActivoFijo("no_relacionado");

						responsableactivofijoBeanSwingJInternalFrame.redimensionarTablaDatosConTamanio(ResponsableActivoFijoConstantesFunciones.ITAMANIOFILATABLA + (ResponsableActivoFijoConstantesFunciones.ITAMANIOFILATABLA/2));

						responsableactivofijoBeanSwingJInternalFrame.setLocation(xOffset*(openFrameCount + Constantes.INUM_MAX_VENTANAS_REL_X), yOffset*(openFrameCount+Constantes.INUM_MAX_VENTANAS_REL_Y));

						TitledBorder titledBorderDetalleActivoFijo=(TitledBorder)this.jScrollPanelDatosDetalleActivoFijo.getBorder();
						TitledBorder titledBorderResponsableActivoFijo=(TitledBorder)responsableactivofijoBeanSwingJInternalFrame.jScrollPanelDatosResponsableActivoFijo.getBorder();

						titledBorderResponsableActivoFijo.setTitle(titledBorderDetalleActivoFijo.getTitle() + " -> Responsable Activo Fijo");

						if(!Constantes.CON_VARIAS_VENTANAS) {
							MainJFrame.cerrarJInternalFramesExistentes(this.jDesktopPane,responsableactivofijoBeanSwingJInternalFrame);
						}

						responsableactivofijoBeanSwingJInternalFrame.setVisible(true);

						this.jDesktopPane.add(responsableactivofijoBeanSwingJInternalFrame);

						responsableactivofijoBeanSwingJInternalFrame.setSelected(true);
					}

				} else {
					if(!this.detalleactivofijoSessionBean.getConGuardarRelaciones()) {
						JOptionPane.showMessageDialog(this,"NO TIENE PERMISOS PARA USAR LA FUNCIONALIDAD DE Responsable Activo Fijo",Constantes.SERROR,JOptionPane.ERROR_MESSAGE);
					}
				}
				if(Constantes.ISUSAEJBLOGICLAYER) {
					this.detalleactivofijoLogic.commitNewConnexionToDeep();
				}

			}

			catch(Exception e) {
				if(Constantes.ISUSAEJBLOGICLAYER) {
					this.detalleactivofijoLogic.rollbackNewConnexionToDeep();
				}


				FuncionesSwing.manageException2(this, e,logger,DetalleActivoFijoConstantesFunciones.CLASSNAME);
			} finally { 
				if(Constantes.ISUSAEJBLOGICLAYER) {
					this.detalleactivofijoLogic.closeNewConnexionToDeep();
				}

			}
		}

	public void jButtonDepreciacionActivoFijoActionPerformed(ActionEvent evt,int rowIndex,Boolean conInicializar,Boolean esRelacionado,DetalleActivoFijo detalleactivofijo) throws Exception {
			try {

				if(this.jInternalFrameDetalleFormDetalleActivoFijo==null) {
					this.inicializarFormDetalle();
				}

				if(Constantes.ISUSAEJBLOGICLAYER) {
					this.detalleactivofijoLogic.getNewConnexionToDeep("");
				}

				int intSelectedRow =rowIndex;

				if(intSelectedRow!=-1) {
					//ARCHITECTURE
					if(Constantes.ISUSAEJBLOGICLAYER) {
						this.detalleactivofijo = (DetalleActivoFijo)this.detalleactivofijoLogic.getDetalleActivoFijos().toArray()[this.jTableDatosDetalleActivoFijo.convertRowIndexToModel(intSelectedRow)];
					} else if(Constantes.ISUSAEJBREMOTE) {
						this.detalleactivofijo = (DetalleActivoFijo)this.detalleactivofijos.toArray()[this.jTableDatosDetalleActivoFijo.convertRowIndexToModel(intSelectedRow)];
					}
					//ARCHITECTURE
				} else {
					if(detalleactivofijo!=null) {
						this.detalleactivofijo = detalleactivofijo;
					} else {
						this.detalleactivofijo = new DetalleActivoFijo();
					}
				}

				if(this.isTienePermisosDepreciacionActivoFijo && this.permiteMantenimiento(this.detalleactivofijo)) {
					DepreciacionActivoFijoBeanSwingJInternalFrame depreciacionactivofijoBeanSwingJInternalFrame=null;

					if(conInicializar) {
						this.jInternalFrameDetalleFormDetalleActivoFijo.depreciacionactivofijoBeanSwingJInternalFramePopup=new DepreciacionActivoFijoBeanSwingJInternalFrame(false,false,this.jDesktopPane,this.usuarioActual,this.resumenUsuarioActual,this.moduloActual,this.opcionActual,this.parametroGeneralSg,this.parametroGeneralUsuario,PaginaTipo.SECUNDARIO,false,false,true,false);
						this.jInternalFrameDetalleFormDetalleActivoFijo.depreciacionactivofijoBeanSwingJInternalFramePopup.setJInternalFrameParent(this);

						depreciacionactivofijoBeanSwingJInternalFrame=this.jInternalFrameDetalleFormDetalleActivoFijo.depreciacionactivofijoBeanSwingJInternalFramePopup;
					} else {
						depreciacionactivofijoBeanSwingJInternalFrame=this.jInternalFrameDetalleFormDetalleActivoFijo.depreciacionactivofijoBeanSwingJInternalFrame;
					}

					List<DetalleActivoFijo> detalleactivofijos=new ArrayList<DetalleActivoFijo>();
					detalleactivofijos.add(this.detalleactivofijo);
					if(!esRelacionado) {
						//depreciacionactivofijoBeanSwingJInternalFrame.depreciacionactivofijoSessionBean.setConGuardarRelaciones(false);
						//depreciacionactivofijoBeanSwingJInternalFrame.depreciacionactivofijoSessionBean.setEsGuardarRelacionado(false);
					}

					//DESHABILITA TEMPORALMENTE EVENTOS CHANGE DE TEXTOS,COMBOS,ETC
					depreciacionactivofijoBeanSwingJInternalFrame.estaModoSeleccionar=true;
					this.jInternalFrameDetalleFormDetalleActivoFijo.cargarDepreciacionActivoFijoBeanSwingJInternalFrame(detalleactivofijos,this.detalleactivofijo,depreciacionactivofijoBeanSwingJInternalFrame,/*conInicializar,*/depreciacionactivofijoBeanSwingJInternalFrame.depreciacionactivofijoSessionBean.getConGuardarRelaciones(),depreciacionactivofijoBeanSwingJInternalFrame.depreciacionactivofijoSessionBean.getEsGuardarRelacionado());
					depreciacionactivofijoBeanSwingJInternalFrame.estaModoSeleccionar=false;


					if(!esRelacionado) {
						depreciacionactivofijoBeanSwingJInternalFrame.actualizarEstadoPanelsDepreciacionActivoFijo("no_relacionado");

						depreciacionactivofijoBeanSwingJInternalFrame.redimensionarTablaDatosConTamanio(DepreciacionActivoFijoConstantesFunciones.ITAMANIOFILATABLA + (DepreciacionActivoFijoConstantesFunciones.ITAMANIOFILATABLA/2));

						depreciacionactivofijoBeanSwingJInternalFrame.setLocation(xOffset*(openFrameCount + Constantes.INUM_MAX_VENTANAS_REL_X), yOffset*(openFrameCount+Constantes.INUM_MAX_VENTANAS_REL_Y));

						TitledBorder titledBorderDetalleActivoFijo=(TitledBorder)this.jScrollPanelDatosDetalleActivoFijo.getBorder();
						TitledBorder titledBorderDepreciacionActivoFijo=(TitledBorder)depreciacionactivofijoBeanSwingJInternalFrame.jScrollPanelDatosDepreciacionActivoFijo.getBorder();

						titledBorderDepreciacionActivoFijo.setTitle(titledBorderDetalleActivoFijo.getTitle() + " -> Depreciacion Activo Fijo");

						if(!Constantes.CON_VARIAS_VENTANAS) {
							MainJFrame.cerrarJInternalFramesExistentes(this.jDesktopPane,depreciacionactivofijoBeanSwingJInternalFrame);
						}

						depreciacionactivofijoBeanSwingJInternalFrame.setVisible(true);

						this.jDesktopPane.add(depreciacionactivofijoBeanSwingJInternalFrame);

						depreciacionactivofijoBeanSwingJInternalFrame.setSelected(true);
					}

				} else {
					if(!this.detalleactivofijoSessionBean.getConGuardarRelaciones()) {
						JOptionPane.showMessageDialog(this,"NO TIENE PERMISOS PARA USAR LA FUNCIONALIDAD DE Depreciacion Activo Fijo",Constantes.SERROR,JOptionPane.ERROR_MESSAGE);
					}
				}
				if(Constantes.ISUSAEJBLOGICLAYER) {
					this.detalleactivofijoLogic.commitNewConnexionToDeep();
				}

			}

			catch(Exception e) {
				if(Constantes.ISUSAEJBLOGICLAYER) {
					this.detalleactivofijoLogic.rollbackNewConnexionToDeep();
				}


				FuncionesSwing.manageException2(this, e,logger,DetalleActivoFijoConstantesFunciones.CLASSNAME);
			} finally { 
				if(Constantes.ISUSAEJBLOGICLAYER) {
					this.detalleactivofijoLogic.closeNewConnexionToDeep();
				}

			}
		}

	public void jButtonGastoDepreciacionCentroCostoActionPerformed(ActionEvent evt,int rowIndex,Boolean conInicializar,Boolean esRelacionado,DetalleActivoFijo detalleactivofijo) throws Exception {
			try {

				if(this.jInternalFrameDetalleFormDetalleActivoFijo==null) {
					this.inicializarFormDetalle();
				}

				if(Constantes.ISUSAEJBLOGICLAYER) {
					this.detalleactivofijoLogic.getNewConnexionToDeep("");
				}

				int intSelectedRow =rowIndex;

				if(intSelectedRow!=-1) {
					//ARCHITECTURE
					if(Constantes.ISUSAEJBLOGICLAYER) {
						this.detalleactivofijo = (DetalleActivoFijo)this.detalleactivofijoLogic.getDetalleActivoFijos().toArray()[this.jTableDatosDetalleActivoFijo.convertRowIndexToModel(intSelectedRow)];
					} else if(Constantes.ISUSAEJBREMOTE) {
						this.detalleactivofijo = (DetalleActivoFijo)this.detalleactivofijos.toArray()[this.jTableDatosDetalleActivoFijo.convertRowIndexToModel(intSelectedRow)];
					}
					//ARCHITECTURE
				} else {
					if(detalleactivofijo!=null) {
						this.detalleactivofijo = detalleactivofijo;
					} else {
						this.detalleactivofijo = new DetalleActivoFijo();
					}
				}

				if(this.isTienePermisosGastoDepreciacionCentroCosto && this.permiteMantenimiento(this.detalleactivofijo)) {
					GastoDepreciacionCentroCostoBeanSwingJInternalFrame gastodepreciacioncentrocostoBeanSwingJInternalFrame=null;

					if(conInicializar) {
						this.jInternalFrameDetalleFormDetalleActivoFijo.gastodepreciacioncentrocostoBeanSwingJInternalFramePopup=new GastoDepreciacionCentroCostoBeanSwingJInternalFrame(false,false,this.jDesktopPane,this.usuarioActual,this.resumenUsuarioActual,this.moduloActual,this.opcionActual,this.parametroGeneralSg,this.parametroGeneralUsuario,PaginaTipo.SECUNDARIO,false,false,true,false);
						this.jInternalFrameDetalleFormDetalleActivoFijo.gastodepreciacioncentrocostoBeanSwingJInternalFramePopup.setJInternalFrameParent(this);

						gastodepreciacioncentrocostoBeanSwingJInternalFrame=this.jInternalFrameDetalleFormDetalleActivoFijo.gastodepreciacioncentrocostoBeanSwingJInternalFramePopup;
					} else {
						gastodepreciacioncentrocostoBeanSwingJInternalFrame=this.jInternalFrameDetalleFormDetalleActivoFijo.gastodepreciacioncentrocostoBeanSwingJInternalFrame;
					}

					List<DetalleActivoFijo> detalleactivofijos=new ArrayList<DetalleActivoFijo>();
					detalleactivofijos.add(this.detalleactivofijo);
					if(!esRelacionado) {
						//gastodepreciacioncentrocostoBeanSwingJInternalFrame.gastodepreciacioncentrocostoSessionBean.setConGuardarRelaciones(false);
						//gastodepreciacioncentrocostoBeanSwingJInternalFrame.gastodepreciacioncentrocostoSessionBean.setEsGuardarRelacionado(false);
					}

					//DESHABILITA TEMPORALMENTE EVENTOS CHANGE DE TEXTOS,COMBOS,ETC
					gastodepreciacioncentrocostoBeanSwingJInternalFrame.estaModoSeleccionar=true;
					this.jInternalFrameDetalleFormDetalleActivoFijo.cargarGastoDepreciacionCentroCostoBeanSwingJInternalFrame(detalleactivofijos,this.detalleactivofijo,gastodepreciacioncentrocostoBeanSwingJInternalFrame,/*conInicializar,*/gastodepreciacioncentrocostoBeanSwingJInternalFrame.gastodepreciacioncentrocostoSessionBean.getConGuardarRelaciones(),gastodepreciacioncentrocostoBeanSwingJInternalFrame.gastodepreciacioncentrocostoSessionBean.getEsGuardarRelacionado());
					gastodepreciacioncentrocostoBeanSwingJInternalFrame.estaModoSeleccionar=false;


					if(!esRelacionado) {
						gastodepreciacioncentrocostoBeanSwingJInternalFrame.actualizarEstadoPanelsGastoDepreciacionCentroCosto("no_relacionado");

						gastodepreciacioncentrocostoBeanSwingJInternalFrame.redimensionarTablaDatosConTamanio(GastoDepreciacionCentroCostoConstantesFunciones.ITAMANIOFILATABLA + (GastoDepreciacionCentroCostoConstantesFunciones.ITAMANIOFILATABLA/2));

						gastodepreciacioncentrocostoBeanSwingJInternalFrame.setLocation(xOffset*(openFrameCount + Constantes.INUM_MAX_VENTANAS_REL_X), yOffset*(openFrameCount+Constantes.INUM_MAX_VENTANAS_REL_Y));

						TitledBorder titledBorderDetalleActivoFijo=(TitledBorder)this.jScrollPanelDatosDetalleActivoFijo.getBorder();
						TitledBorder titledBorderGastoDepreciacionCentroCosto=(TitledBorder)gastodepreciacioncentrocostoBeanSwingJInternalFrame.jScrollPanelDatosGastoDepreciacionCentroCosto.getBorder();

						titledBorderGastoDepreciacionCentroCosto.setTitle(titledBorderDetalleActivoFijo.getTitle() + " -> Gasto Depreciacion Centro Costo");

						if(!Constantes.CON_VARIAS_VENTANAS) {
							MainJFrame.cerrarJInternalFramesExistentes(this.jDesktopPane,gastodepreciacioncentrocostoBeanSwingJInternalFrame);
						}

						gastodepreciacioncentrocostoBeanSwingJInternalFrame.setVisible(true);

						this.jDesktopPane.add(gastodepreciacioncentrocostoBeanSwingJInternalFrame);

						gastodepreciacioncentrocostoBeanSwingJInternalFrame.setSelected(true);
					}

				} else {
					if(!this.detalleactivofijoSessionBean.getConGuardarRelaciones()) {
						JOptionPane.showMessageDialog(this,"NO TIENE PERMISOS PARA USAR LA FUNCIONALIDAD DE Gasto Depreciacion Centro Costo",Constantes.SERROR,JOptionPane.ERROR_MESSAGE);
					}
				}
				if(Constantes.ISUSAEJBLOGICLAYER) {
					this.detalleactivofijoLogic.commitNewConnexionToDeep();
				}

			}

			catch(Exception e) {
				if(Constantes.ISUSAEJBLOGICLAYER) {
					this.detalleactivofijoLogic.rollbackNewConnexionToDeep();
				}


				FuncionesSwing.manageException2(this, e,logger,DetalleActivoFijoConstantesFunciones.CLASSNAME);
			} finally { 
				if(Constantes.ISUSAEJBLOGICLAYER) {
					this.detalleactivofijoLogic.closeNewConnexionToDeep();
				}

			}
		}

	public void jButtonParteActivoFijoActionPerformed(ActionEvent evt,int rowIndex,Boolean conInicializar,Boolean esRelacionado,DetalleActivoFijo detalleactivofijo) throws Exception {
			try {

				if(this.jInternalFrameDetalleFormDetalleActivoFijo==null) {
					this.inicializarFormDetalle();
				}

				if(Constantes.ISUSAEJBLOGICLAYER) {
					this.detalleactivofijoLogic.getNewConnexionToDeep("");
				}

				int intSelectedRow =rowIndex;

				if(intSelectedRow!=-1) {
					//ARCHITECTURE
					if(Constantes.ISUSAEJBLOGICLAYER) {
						this.detalleactivofijo = (DetalleActivoFijo)this.detalleactivofijoLogic.getDetalleActivoFijos().toArray()[this.jTableDatosDetalleActivoFijo.convertRowIndexToModel(intSelectedRow)];
					} else if(Constantes.ISUSAEJBREMOTE) {
						this.detalleactivofijo = (DetalleActivoFijo)this.detalleactivofijos.toArray()[this.jTableDatosDetalleActivoFijo.convertRowIndexToModel(intSelectedRow)];
					}
					//ARCHITECTURE
				} else {
					if(detalleactivofijo!=null) {
						this.detalleactivofijo = detalleactivofijo;
					} else {
						this.detalleactivofijo = new DetalleActivoFijo();
					}
				}

				if(this.isTienePermisosParteActivoFijo && this.permiteMantenimiento(this.detalleactivofijo)) {
					ParteActivoFijoBeanSwingJInternalFrame parteactivofijoBeanSwingJInternalFrame=null;

					if(conInicializar) {
						this.jInternalFrameDetalleFormDetalleActivoFijo.parteactivofijoBeanSwingJInternalFramePopup=new ParteActivoFijoBeanSwingJInternalFrame(false,false,this.jDesktopPane,this.usuarioActual,this.resumenUsuarioActual,this.moduloActual,this.opcionActual,this.parametroGeneralSg,this.parametroGeneralUsuario,PaginaTipo.SECUNDARIO,false,false,true,false);
						this.jInternalFrameDetalleFormDetalleActivoFijo.parteactivofijoBeanSwingJInternalFramePopup.setJInternalFrameParent(this);

						parteactivofijoBeanSwingJInternalFrame=this.jInternalFrameDetalleFormDetalleActivoFijo.parteactivofijoBeanSwingJInternalFramePopup;
					} else {
						parteactivofijoBeanSwingJInternalFrame=this.jInternalFrameDetalleFormDetalleActivoFijo.parteactivofijoBeanSwingJInternalFrame;
					}

					List<DetalleActivoFijo> detalleactivofijos=new ArrayList<DetalleActivoFijo>();
					detalleactivofijos.add(this.detalleactivofijo);
					if(!esRelacionado) {
						//parteactivofijoBeanSwingJInternalFrame.parteactivofijoSessionBean.setConGuardarRelaciones(false);
						//parteactivofijoBeanSwingJInternalFrame.parteactivofijoSessionBean.setEsGuardarRelacionado(false);
					}

					//DESHABILITA TEMPORALMENTE EVENTOS CHANGE DE TEXTOS,COMBOS,ETC
					parteactivofijoBeanSwingJInternalFrame.estaModoSeleccionar=true;
					this.jInternalFrameDetalleFormDetalleActivoFijo.cargarParteActivoFijoBeanSwingJInternalFrame(detalleactivofijos,this.detalleactivofijo,parteactivofijoBeanSwingJInternalFrame,/*conInicializar,*/parteactivofijoBeanSwingJInternalFrame.parteactivofijoSessionBean.getConGuardarRelaciones(),parteactivofijoBeanSwingJInternalFrame.parteactivofijoSessionBean.getEsGuardarRelacionado());
					parteactivofijoBeanSwingJInternalFrame.estaModoSeleccionar=false;


					if(!esRelacionado) {
						parteactivofijoBeanSwingJInternalFrame.actualizarEstadoPanelsParteActivoFijo("no_relacionado");

						parteactivofijoBeanSwingJInternalFrame.redimensionarTablaDatosConTamanio(ParteActivoFijoConstantesFunciones.ITAMANIOFILATABLA + (ParteActivoFijoConstantesFunciones.ITAMANIOFILATABLA/2));

						parteactivofijoBeanSwingJInternalFrame.setLocation(xOffset*(openFrameCount + Constantes.INUM_MAX_VENTANAS_REL_X), yOffset*(openFrameCount+Constantes.INUM_MAX_VENTANAS_REL_Y));

						TitledBorder titledBorderDetalleActivoFijo=(TitledBorder)this.jScrollPanelDatosDetalleActivoFijo.getBorder();
						TitledBorder titledBorderParteActivoFijo=(TitledBorder)parteactivofijoBeanSwingJInternalFrame.jScrollPanelDatosParteActivoFijo.getBorder();

						titledBorderParteActivoFijo.setTitle(titledBorderDetalleActivoFijo.getTitle() + " -> Parte Activo Fijo");

						if(!Constantes.CON_VARIAS_VENTANAS) {
							MainJFrame.cerrarJInternalFramesExistentes(this.jDesktopPane,parteactivofijoBeanSwingJInternalFrame);
						}

						parteactivofijoBeanSwingJInternalFrame.setVisible(true);

						this.jDesktopPane.add(parteactivofijoBeanSwingJInternalFrame);

						parteactivofijoBeanSwingJInternalFrame.setSelected(true);
					}

				} else {
					if(!this.detalleactivofijoSessionBean.getConGuardarRelaciones()) {
						JOptionPane.showMessageDialog(this,"NO TIENE PERMISOS PARA USAR LA FUNCIONALIDAD DE Parte Activo Fijo",Constantes.SERROR,JOptionPane.ERROR_MESSAGE);
					}
				}
				if(Constantes.ISUSAEJBLOGICLAYER) {
					this.detalleactivofijoLogic.commitNewConnexionToDeep();
				}

			}

			catch(Exception e) {
				if(Constantes.ISUSAEJBLOGICLAYER) {
					this.detalleactivofijoLogic.rollbackNewConnexionToDeep();
				}


				FuncionesSwing.manageException2(this, e,logger,DetalleActivoFijoConstantesFunciones.CLASSNAME);
			} finally { 
				if(Constantes.ISUSAEJBLOGICLAYER) {
					this.detalleactivofijoLogic.closeNewConnexionToDeep();
				}

			}
		}

	
	
	
	public void refrescarBindingTabla(Boolean blnSoloTabla) {
	}
	
	public void inicializarActualizarBindingBotonesManualDetalleActivoFijo(Boolean esSetControles) {						
		if(esSetControles) {
			this.jButtonNuevoDetalleActivoFijo.setVisible((this.isVisibilidadCeldaNuevoDetalleActivoFijo && this.isPermisoNuevoDetalleActivoFijo));			
			this.jButtonDuplicarDetalleActivoFijo.setVisible((this.isVisibilidadCeldaDuplicarDetalleActivoFijo && this.isPermisoDuplicarDetalleActivoFijo));			
			this.jButtonCopiarDetalleActivoFijo.setVisible((this.isVisibilidadCeldaCopiarDetalleActivoFijo && this.isPermisoCopiarDetalleActivoFijo));
			this.jButtonVerFormDetalleActivoFijo.setVisible((this.isVisibilidadCeldaVerFormDetalleActivoFijo && this.isPermisoVerFormDetalleActivoFijo));
			
			this.jButtonAbrirOrderByDetalleActivoFijo.setVisible((this.isVisibilidadCeldaOrdenDetalleActivoFijo && this.isPermisoOrdenDetalleActivoFijo));			
			
			this.jButtonNuevoRelacionesDetalleActivoFijo.setVisible((this.isVisibilidadCeldaNuevoRelacionesDetalleActivoFijo && this.isPermisoNuevoDetalleActivoFijo));			
			this.jButtonNuevoGuardarCambiosDetalleActivoFijo.setVisible((this.isVisibilidadCeldaNuevoDetalleActivoFijo && this.isPermisoNuevoDetalleActivoFijo && this.isPermisoGuardarCambiosDetalleActivoFijo));
			
			if(this.jInternalFrameDetalleFormDetalleActivoFijo!=null) {
			this.jInternalFrameDetalleFormDetalleActivoFijo.jButtonModificarDetalleActivoFijo.setVisible((this.isVisibilidadCeldaModificarDetalleActivoFijo && this.isPermisoActualizarDetalleActivoFijo));	
			this.jInternalFrameDetalleFormDetalleActivoFijo.jButtonActualizarDetalleActivoFijo.setVisible((this.isVisibilidadCeldaActualizarDetalleActivoFijo && this.isPermisoActualizarDetalleActivoFijo));	
			this.jInternalFrameDetalleFormDetalleActivoFijo.jButtonEliminarDetalleActivoFijo.setVisible((this.isVisibilidadCeldaEliminarDetalleActivoFijo && this.isPermisoEliminarDetalleActivoFijo));
			this.jInternalFrameDetalleFormDetalleActivoFijo.jButtonCancelarDetalleActivoFijo.setVisible(this.isVisibilidadCeldaCancelarDetalleActivoFijo);							
			this.jInternalFrameDetalleFormDetalleActivoFijo.jButtonGuardarCambiosDetalleActivoFijo.setVisible((this.isVisibilidadCeldaGuardarDetalleActivoFijo && this.isPermisoGuardarCambiosDetalleActivoFijo));			
			
			}
						
			this.jButtonGuardarCambiosTablaDetalleActivoFijo.setVisible((this.isVisibilidadCeldaGuardarCambiosDetalleActivoFijo && this.isPermisoGuardarCambiosDetalleActivoFijo));							
			
			//TOOLBAR
			
			this.jButtonNuevoToolBarDetalleActivoFijo.setVisible((this.isVisibilidadCeldaNuevoDetalleActivoFijo && this.isPermisoNuevoDetalleActivoFijo));						
			this.jButtonDuplicarToolBarDetalleActivoFijo.setVisible((this.isVisibilidadCeldaDuplicarDetalleActivoFijo && this.isPermisoDuplicarDetalleActivoFijo));						
			this.jButtonCopiarToolBarDetalleActivoFijo.setVisible((this.isVisibilidadCeldaCopiarDetalleActivoFijo && this.isPermisoCopiarDetalleActivoFijo));			
			this.jButtonVerFormToolBarDetalleActivoFijo.setVisible((this.isVisibilidadCeldaVerFormDetalleActivoFijo && this.isPermisoVerFormDetalleActivoFijo));			
			this.jButtonAbrirOrderByToolBarDetalleActivoFijo.setVisible((this.isVisibilidadCeldaOrdenDetalleActivoFijo && this.isPermisoOrdenDetalleActivoFijo));
			this.jButtonNuevoRelacionesToolBarDetalleActivoFijo.setVisible((this.isVisibilidadCeldaNuevoRelacionesDetalleActivoFijo && this.isPermisoNuevoDetalleActivoFijo));			
			this.jButtonNuevoGuardarCambiosToolBarDetalleActivoFijo.setVisible((this.isVisibilidadCeldaNuevoDetalleActivoFijo && this.isPermisoNuevoDetalleActivoFijo && this.isPermisoGuardarCambiosDetalleActivoFijo));			
			
			if(this.jInternalFrameDetalleFormDetalleActivoFijo!=null) {
			this.jInternalFrameDetalleFormDetalleActivoFijo.jButtonModificarToolBarDetalleActivoFijo.setVisible((this.isVisibilidadCeldaModificarDetalleActivoFijo && this.isPermisoActualizarDetalleActivoFijo));	
			this.jInternalFrameDetalleFormDetalleActivoFijo.jButtonActualizarToolBarDetalleActivoFijo.setVisible((this.isVisibilidadCeldaActualizarDetalleActivoFijo  && this.isPermisoActualizarDetalleActivoFijo));	
			this.jInternalFrameDetalleFormDetalleActivoFijo.jButtonEliminarToolBarDetalleActivoFijo.setVisible((this.isVisibilidadCeldaEliminarDetalleActivoFijo && this.isPermisoEliminarDetalleActivoFijo));
			this.jInternalFrameDetalleFormDetalleActivoFijo.jButtonCancelarToolBarDetalleActivoFijo.setVisible(this.isVisibilidadCeldaCancelarDetalleActivoFijo);				
			this.jInternalFrameDetalleFormDetalleActivoFijo.jButtonGuardarCambiosToolBarDetalleActivoFijo.setVisible((this.isVisibilidadCeldaGuardarDetalleActivoFijo && this.isPermisoGuardarCambiosDetalleActivoFijo));									
			}
			
			this.jButtonGuardarCambiosTablaToolBarDetalleActivoFijo.setVisible((this.isVisibilidadCeldaGuardarCambiosDetalleActivoFijo && this.isPermisoGuardarCambiosDetalleActivoFijo));									
			
			//TOOLBAR
			
			//MENUS
			
			this.jMenuItemNuevoDetalleActivoFijo.setVisible((this.isVisibilidadCeldaNuevoDetalleActivoFijo && this.isPermisoNuevoDetalleActivoFijo));			
			this.jMenuItemDuplicarDetalleActivoFijo.setVisible((this.isVisibilidadCeldaDuplicarDetalleActivoFijo && this.isPermisoDuplicarDetalleActivoFijo));			
			this.jMenuItemCopiarDetalleActivoFijo.setVisible((this.isVisibilidadCeldaCopiarDetalleActivoFijo && this.isPermisoCopiarDetalleActivoFijo));			
			this.jMenuItemVerFormDetalleActivoFijo.setVisible((this.isVisibilidadCeldaVerFormDetalleActivoFijo && this.isPermisoVerFormDetalleActivoFijo));			
			this.jMenuItemAbrirOrderByDetalleActivoFijo.setVisible((this.isVisibilidadCeldaOrdenDetalleActivoFijo && this.isPermisoOrdenDetalleActivoFijo));			
			//this.jMenuItemMostrarOcultarDetalleActivoFijo.setVisible((this.isVisibilidadCeldaOrdenDetalleActivoFijo && this.isPermisoOrdenDetalleActivoFijo));
			this.jMenuItemDetalleAbrirOrderByDetalleActivoFijo.setVisible((this.isVisibilidadCeldaOrdenDetalleActivoFijo && this.isPermisoOrdenDetalleActivoFijo));			
			//this.jMenuItemDetalleMostrarOcultarDetalleActivoFijo.setVisible((this.isVisibilidadCeldaOrdenDetalleActivoFijo && this.isPermisoOrdenDetalleActivoFijo));			
			this.jMenuItemNuevoRelacionesDetalleActivoFijo.setVisible((this.isVisibilidadCeldaNuevoRelacionesDetalleActivoFijo && this.isPermisoNuevoDetalleActivoFijo));			
			this.jMenuItemNuevoGuardarCambiosDetalleActivoFijo.setVisible((this.isVisibilidadCeldaNuevoDetalleActivoFijo && this.isPermisoNuevoDetalleActivoFijo && this.isPermisoGuardarCambiosDetalleActivoFijo));									
			
			if(this.jInternalFrameDetalleFormDetalleActivoFijo!=null) {
			this.jInternalFrameDetalleFormDetalleActivoFijo.jMenuItemModificarDetalleActivoFijo.setVisible((this.isVisibilidadCeldaModificarDetalleActivoFijo && this.isPermisoActualizarDetalleActivoFijo));	
			this.jInternalFrameDetalleFormDetalleActivoFijo.jMenuItemActualizarDetalleActivoFijo.setVisible((this.isVisibilidadCeldaActualizarDetalleActivoFijo && this.isPermisoActualizarDetalleActivoFijo));	
			this.jInternalFrameDetalleFormDetalleActivoFijo.jMenuItemEliminarDetalleActivoFijo.setVisible((this.isVisibilidadCeldaEliminarDetalleActivoFijo && this.isPermisoEliminarDetalleActivoFijo));
			this.jInternalFrameDetalleFormDetalleActivoFijo.jMenuItemCancelarDetalleActivoFijo.setVisible(this.isVisibilidadCeldaCancelarDetalleActivoFijo);				
			}
			
			this.jMenuItemGuardarCambiosDetalleActivoFijo.setVisible((this.isVisibilidadCeldaGuardarDetalleActivoFijo && this.isPermisoGuardarCambiosDetalleActivoFijo));						
			this.jMenuItemGuardarCambiosTablaDetalleActivoFijo.setVisible((this.isVisibilidadCeldaGuardarCambiosDetalleActivoFijo && this.isPermisoGuardarCambiosDetalleActivoFijo));						
			
			//MENUS
			
		} else {
			this.isVisibilidadCeldaNuevoDetalleActivoFijo=this.jButtonNuevoDetalleActivoFijo.isVisible();
			this.isVisibilidadCeldaDuplicarDetalleActivoFijo=this.jButtonDuplicarDetalleActivoFijo.isVisible();
			this.isVisibilidadCeldaCopiarDetalleActivoFijo=this.jButtonCopiarDetalleActivoFijo.isVisible();
			this.isVisibilidadCeldaVerFormDetalleActivoFijo=this.jButtonVerFormDetalleActivoFijo.isVisible();
			
			this.isVisibilidadCeldaOrdenDetalleActivoFijo=this.jButtonAbrirOrderByDetalleActivoFijo.isVisible();			
			
			this.isVisibilidadCeldaNuevoRelacionesDetalleActivoFijo=this.jButtonNuevoRelacionesDetalleActivoFijo.isVisible();
			this.isVisibilidadCeldaModificarDetalleActivoFijo=this.jButtonModificarDetalleActivoFijo.isVisible();
			
			if(this.jInternalFrameDetalleFormDetalleActivoFijo!=null) {
			this.isVisibilidadCeldaActualizarDetalleActivoFijo=this.jInternalFrameDetalleFormDetalleActivoFijo.jButtonActualizarDetalleActivoFijo.isVisible();
			this.isVisibilidadCeldaEliminarDetalleActivoFijo=this.jInternalFrameDetalleFormDetalleActivoFijo.jButtonEliminarDetalleActivoFijo.isVisible();
			this.isVisibilidadCeldaCancelarDetalleActivoFijo=this.jInternalFrameDetalleFormDetalleActivoFijo.jButtonCancelarDetalleActivoFijo.isVisible();
			this.isVisibilidadCeldaGuardarDetalleActivoFijo=this.jInternalFrameDetalleFormDetalleActivoFijo.jButtonGuardarCambiosDetalleActivoFijo.isVisible();			
			}
			
			this.isVisibilidadCeldaGuardarCambiosDetalleActivoFijo=this.jButtonGuardarCambiosTablaDetalleActivoFijo.isVisible();
			
			//TOOLBAR
			
			this.isVisibilidadCeldaNuevoDetalleActivoFijo=this.jButtonNuevoToolBarDetalleActivoFijo.isVisible();
			this.isVisibilidadCeldaNuevoRelacionesDetalleActivoFijo=this.jButtonNuevoRelacionesToolBarDetalleActivoFijo.isVisible();
			
			if(this.jInternalFrameDetalleFormDetalleActivoFijo!=null) {
			this.isVisibilidadCeldaModificarDetalleActivoFijo=this.jInternalFrameDetalleFormDetalleActivoFijo.jButtonModificarToolBarDetalleActivoFijo.isVisible();
			this.isVisibilidadCeldaActualizarDetalleActivoFijo=this.jInternalFrameDetalleFormDetalleActivoFijo.jButtonActualizarToolBarDetalleActivoFijo.isVisible();
			this.isVisibilidadCeldaEliminarDetalleActivoFijo=this.jInternalFrameDetalleFormDetalleActivoFijo.jButtonEliminarToolBarDetalleActivoFijo.isVisible();
			this.isVisibilidadCeldaCancelarDetalleActivoFijo=this.jInternalFrameDetalleFormDetalleActivoFijo.jButtonCancelarToolBarDetalleActivoFijo.isVisible();
			}
			
			this.isVisibilidadCeldaGuardarDetalleActivoFijo=this.jButtonGuardarCambiosToolBarDetalleActivoFijo.isVisible();
			this.isVisibilidadCeldaGuardarCambiosDetalleActivoFijo=this.jButtonGuardarCambiosTablaToolBarDetalleActivoFijo.isVisible();						
			
			//TOOLBAR
			
			//MENUS
			
			this.isVisibilidadCeldaNuevoDetalleActivoFijo=this.jMenuItemNuevoDetalleActivoFijo.isVisible();
			this.isVisibilidadCeldaNuevoRelacionesDetalleActivoFijo=this.jMenuItemNuevoRelacionesDetalleActivoFijo.isVisible();
			
			if(this.jInternalFrameDetalleFormDetalleActivoFijo!=null) {
			this.isVisibilidadCeldaModificarDetalleActivoFijo=this.jInternalFrameDetalleFormDetalleActivoFijo.jMenuItemModificarDetalleActivoFijo.isVisible();
			this.isVisibilidadCeldaActualizarDetalleActivoFijo=this.jInternalFrameDetalleFormDetalleActivoFijo.jMenuItemActualizarDetalleActivoFijo.isVisible();
			this.isVisibilidadCeldaEliminarDetalleActivoFijo=this.jInternalFrameDetalleFormDetalleActivoFijo.jMenuItemEliminarDetalleActivoFijo.isVisible();
			this.isVisibilidadCeldaCancelarDetalleActivoFijo=this.jInternalFrameDetalleFormDetalleActivoFijo.jMenuItemCancelarDetalleActivoFijo.isVisible();
			}
			
			this.isVisibilidadCeldaGuardarDetalleActivoFijo=this.jMenuItemGuardarCambiosDetalleActivoFijo.isVisible();
			this.isVisibilidadCeldaGuardarCambiosDetalleActivoFijo=this.jMenuItemGuardarCambiosTablaDetalleActivoFijo.isVisible();						
			
			//MENUS
		}
	}
	
	public void inicializarActualizarBindingBotonesDetalleActivoFijo(Boolean esInicializar) {
		if(DetalleActivoFijoJInternalFrame.ISBINDING_MANUAL) {			
			if(this.detalleactivofijoSessionBean.getConGuardarRelaciones()) {
				//if(this.detalleactivofijoSessionBean.getEsGuardarRelacionado()) {
				
				this.actualizarEstadoCeldasBotonesConGuardarRelacionesDetalleActivoFijo();
			}
			
			this.inicializarActualizarBindingBotonesManualDetalleActivoFijo(true);
			
		} else {	
		}
	}		
	
	public void inicializarActualizarBindingBotonesPermisosManualDetalleActivoFijo() {
		this.jButtonNuevoDetalleActivoFijo.setVisible(this.isPermisoNuevoDetalleActivoFijo);			
		this.jButtonDuplicarDetalleActivoFijo.setVisible(this.isPermisoDuplicarDetalleActivoFijo);			
		this.jButtonCopiarDetalleActivoFijo.setVisible(this.isPermisoCopiarDetalleActivoFijo);			
		this.jButtonVerFormDetalleActivoFijo.setVisible(this.isPermisoVerFormDetalleActivoFijo);			
		
		this.jButtonAbrirOrderByDetalleActivoFijo.setVisible(this.isPermisoOrdenDetalleActivoFijo);					
		
		this.jButtonNuevoRelacionesDetalleActivoFijo.setVisible(this.isPermisoNuevoDetalleActivoFijo);			
		
		if(this.jInternalFrameDetalleFormDetalleActivoFijo!=null) { //if(this.conCargarFormDetalle) {
			this.jInternalFrameDetalleFormDetalleActivoFijo.jButtonModificarDetalleActivoFijo.setVisible(this.isPermisoActualizarDetalleActivoFijo);	
			this.jInternalFrameDetalleFormDetalleActivoFijo.jButtonActualizarDetalleActivoFijo.setVisible(this.isPermisoActualizarDetalleActivoFijo);	
			this.jInternalFrameDetalleFormDetalleActivoFijo.jButtonEliminarDetalleActivoFijo.setVisible(this.isPermisoEliminarDetalleActivoFijo);
			this.jInternalFrameDetalleFormDetalleActivoFijo.jButtonCancelarDetalleActivoFijo.setVisible(this.isVisibilidadCeldaCancelarDetalleActivoFijo);						
			this.jInternalFrameDetalleFormDetalleActivoFijo.jButtonGuardarCambiosDetalleActivoFijo.setVisible(this.isPermisoGuardarCambiosDetalleActivoFijo);							
		}
		
		this.jButtonGuardarCambiosTablaDetalleActivoFijo.setVisible(this.isPermisoActualizarDetalleActivoFijo);
	}
	
	public void inicializarActualizarBindingBotonesPermisosManualFormDetalleDetalleActivoFijo() {
		this.jInternalFrameDetalleFormDetalleActivoFijo.jButtonModificarDetalleActivoFijo.setVisible(this.isPermisoActualizarDetalleActivoFijo);	
		this.jInternalFrameDetalleFormDetalleActivoFijo.jButtonActualizarDetalleActivoFijo.setVisible(this.isPermisoActualizarDetalleActivoFijo);	
		this.jInternalFrameDetalleFormDetalleActivoFijo.jButtonEliminarDetalleActivoFijo.setVisible(this.isPermisoEliminarDetalleActivoFijo);
		this.jInternalFrameDetalleFormDetalleActivoFijo.jButtonCancelarDetalleActivoFijo.setVisible(this.isVisibilidadCeldaCancelarDetalleActivoFijo);							
		this.jInternalFrameDetalleFormDetalleActivoFijo.jButtonGuardarCambiosDetalleActivoFijo.setVisible((this.isVisibilidadCeldaGuardarDetalleActivoFijo && this.isPermisoGuardarCambiosDetalleActivoFijo));			
	}
	
	public void inicializarActualizarBindingBotonesPermisosDetalleActivoFijo() {
		if(DetalleActivoFijoJInternalFrame.ISBINDING_MANUAL) {
			this.inicializarActualizarBindingBotonesPermisosManualDetalleActivoFijo();
		} else {
		}
	}
	
	
	public void refrescarBindingBotonesDetalleActivoFijo() {
	}
	
	public void jTableDatosDetalleActivoFijoListSelectionListener(javax.swing.event.ListSelectionEvent evt) throws Exception { 
		try {
			this.seleccionarDetalleActivoFijo(null,evt,-1);
		} catch(Exception e) {
			FuncionesSwing.manageException(this, e,logger,DetalleActivoFijoConstantesFunciones.CLASSNAME);
		}
	}
	
	
	public void jButtonidDetalleActivoFijoBusquedaActionPerformed(java.awt.event.ActionEvent evt) throws Exception {
		try {

				if(Constantes.ISUSAEJBLOGICLAYER) {
					this.detalleactivofijoLogic.getNewConnexionToDeep("");
				}

				//TOCA TRAER NUEVAMENTE, YA QUE SE PIERDE REGISTRO ACTUAL
				int intSelectedRow = this.jTableDatosDetalleActivoFijo.getSelectedRow();

				if(intSelectedRow>-1) {
					this.setVariablesFormularioToObjetoActualDetalleActivoFijo(this.getdetalleactivofijo(),true);
					this.setVariablesFormularioToObjetoActualForeignKeysDetalleActivoFijo(this.detalleactivofijo);
					//ARCHITECTURE
					/*
					if(Constantes.ISUSAEJBLOGICLAYER) {
						this.detalleactivofijo =(DetalleActivoFijo) this.detalleactivofijoLogic.getDetalleActivoFijos().toArray()[this.jTableDatosDetalleActivoFijo.convertRowIndexToModel(intSelectedRow)];
					} else if(Constantes.ISUSAEJBREMOTE || Constantes.ISUSAEJBHOME) {
						this.detalleactivofijo =(DetalleActivoFijo) this.detalleactivofijos.toArray()[this.jTableDatosDetalleActivoFijo.convertRowIndexToModel(intSelectedRow)];
					}
					*/
					//ARCHITECTURE

				} else {
					if(this.detalleactivofijo==null) {
						this.detalleactivofijo = new DetalleActivoFijo();
					}

					this.setVariablesFormularioToObjetoActualDetalleActivoFijo(this.detalleactivofijo,true);
					this.setVariablesFormularioToObjetoActualForeignKeysDetalleActivoFijo(this.detalleactivofijo);
				}

				if(this.detalleactivofijo.getId()!=null) {

					this.sAccionBusqueda="Query";

					this.sFinalQueryGeneral=" where id = "+this.detalleactivofijo.getId().toString()+" ";

					if(Constantes.ISDEVELOPING) {
						System.out.println(this.sFinalQueryGeneral);
					}

					this.procesarBusqueda(this.sAccionBusqueda);

					this.inicializarActualizarBindingDetalleActivoFijo(false);
				}

				if(Constantes.ISUSAEJBLOGICLAYER) {
					this.detalleactivofijoLogic.commitNewConnexionToDeep();
				}

			} catch(Exception e) {

				if(Constantes.ISUSAEJBLOGICLAYER) {
					this.detalleactivofijoLogic.rollbackNewConnexionToDeep();
				}

				FuncionesSwing.manageException(this, e,logger,DetalleActivoFijoConstantesFunciones.CLASSNAME);

			} finally {
				if(Constantes.ISUSAEJBLOGICLAYER) {
					this.detalleactivofijoLogic.closeNewConnexionToDeep();
				}

			}
		}

	public void jButtonid_empresaDetalleActivoFijoUpdateActionPerformed(java.awt.event.ActionEvent evt) throws Exception {
		try {

			if(Constantes.ISUSAEJBLOGICLAYER) {
				this.detalleactivofijoLogic.getNewConnexionToDeep("");
			}

			Boolean idTienePermisoempresa=true;

			idTienePermisoempresa=this.tienePermisosUsuarioEnPaginaWebDetalleActivoFijo(EmpresaConstantesFunciones.CLASSNAME);

			if(idTienePermisoempresa) {
				//TOCA TRAER NUEVAMENTE, YA QUE SE PIERDE REGISTRO ACTUAL
				int intSelectedRow = this.jTableDatosDetalleActivoFijo.getSelectedRow();

				if(intSelectedRow<0 && this.jTableDatosDetalleActivoFijo.getRowCount()>0) {
					intSelectedRow =0;
					this.jTableDatosDetalleActivoFijo.setRowSelectionInterval(intSelectedRow,intSelectedRow);
				}
				//ARCHITECTURE
				/*
				if(Constantes.ISUSAEJBLOGICLAYER) {
					this.detalleactivofijo =(DetalleActivoFijo) this.detalleactivofijoLogic.getDetalleActivoFijos().toArray()[this.jTableDatosDetalleActivoFijo.convertRowIndexToModel(intSelectedRow)];
				} else if(Constantes.ISUSAEJBREMOTE || Constantes.ISUSAEJBHOME) {
					this.detalleactivofijo =(DetalleActivoFijo) this.detalleactivofijos.toArray()[this.jTableDatosDetalleActivoFijo.convertRowIndexToModel(intSelectedRow)];
				}
				*/
				//ARCHITECTURE

				this.setVariablesFormularioToObjetoActualDetalleActivoFijo(this.getdetalleactivofijo(),true);
				this.setVariablesFormularioToObjetoActualForeignKeysDetalleActivoFijo(this.detalleactivofijo);

				this.empresaBeanSwingJInternalFrame=new EmpresaBeanSwingJInternalFrame(true,true,this.jDesktopPane,this.usuarioActual,this.resumenUsuarioActual,this.moduloActual,this.opcionActual,this.parametroGeneralSg,this.parametroGeneralUsuario,PaginaTipo.AUXILIAR,false,false,false,true);
				this.empresaBeanSwingJInternalFrame.setJInternalFrameParent(this);

				this.empresaBeanSwingJInternalFrame.getEmpresaLogic().setConnexion(this.detalleactivofijoLogic.getConnexion());

				if(this.detalleactivofijo.getid_empresa()!=null) {
					this.empresaBeanSwingJInternalFrame.sTipoBusqueda="PorId";
					this.empresaBeanSwingJInternalFrame.setIdActual(this.detalleactivofijo.getid_empresa());
					this.empresaBeanSwingJInternalFrame.procesarBusqueda("PorId");
					this.empresaBeanSwingJInternalFrame.setsAccionBusqueda("PorId");
					this.empresaBeanSwingJInternalFrame.inicializarActualizarBindingTablaEmpresa();
				}

				JInternalFrameBase jinternalFrame =this.empresaBeanSwingJInternalFrame;
				jinternalFrame.setAutoscrolls(true);
				//frame.setSize(screenSize.width-inset*7 , screenSize.height-inset*9);
				jinternalFrame.setVisible(true); 


				TitledBorder titledBorderDetalleActivoFijo=(TitledBorder)this.jScrollPanelDatosDetalleActivoFijo.getBorder();
				TitledBorder titledBorderempresa=(TitledBorder)this.empresaBeanSwingJInternalFrame.jScrollPanelDatosEmpresa.getBorder();

				titledBorderempresa.setTitle(titledBorderDetalleActivoFijo.getTitle() + " -> Empresa");


				if(!Constantes.CON_VARIAS_VENTANAS) {
					MainJFrame.cerrarJInternalFramesExistentes(this.jDesktopPane,jinternalFrame);
				}

				this.jDesktopPane.add(jinternalFrame);

				jinternalFrame.setSelected(true);
			} else {
				throw new Exception("NO TIENE PERMISO PARA TRABAJAR CON ESTA INFORMACION");
			}

			if(Constantes.ISUSAEJBLOGICLAYER) {
				this.detalleactivofijoLogic.commitNewConnexionToDeep();
			}


		} catch(Exception e) {

			if(Constantes.ISUSAEJBLOGICLAYER) {
				this.detalleactivofijoLogic.rollbackNewConnexionToDeep();
			}

			FuncionesSwing.manageException(this, e,logger,DetalleActivoFijoConstantesFunciones.CLASSNAME);

		} finally {
			if(Constantes.ISUSAEJBLOGICLAYER) {
				this.detalleactivofijoLogic.closeNewConnexionToDeep();
			}

		}
	}

	public void jButtonid_empresaDetalleActivoFijoBusquedaActionPerformed(java.awt.event.ActionEvent evt) throws Exception {
		try {

				if(Constantes.ISUSAEJBLOGICLAYER) {
					this.detalleactivofijoLogic.getNewConnexionToDeep("");
				}

				//TOCA TRAER NUEVAMENTE, YA QUE SE PIERDE REGISTRO ACTUAL
				int intSelectedRow = this.jTableDatosDetalleActivoFijo.getSelectedRow();

				if(intSelectedRow>-1) {
					this.setVariablesFormularioToObjetoActualDetalleActivoFijo(this.getdetalleactivofijo(),true);
					this.setVariablesFormularioToObjetoActualForeignKeysDetalleActivoFijo(this.detalleactivofijo);
					//ARCHITECTURE
					/*
					if(Constantes.ISUSAEJBLOGICLAYER) {
						this.detalleactivofijo =(DetalleActivoFijo) this.detalleactivofijoLogic.getDetalleActivoFijos().toArray()[this.jTableDatosDetalleActivoFijo.convertRowIndexToModel(intSelectedRow)];
					} else if(Constantes.ISUSAEJBREMOTE || Constantes.ISUSAEJBHOME) {
						this.detalleactivofijo =(DetalleActivoFijo) this.detalleactivofijos.toArray()[this.jTableDatosDetalleActivoFijo.convertRowIndexToModel(intSelectedRow)];
					}
					*/
					//ARCHITECTURE

				} else {
					if(this.detalleactivofijo==null) {
						this.detalleactivofijo = new DetalleActivoFijo();
					}

					this.setVariablesFormularioToObjetoActualDetalleActivoFijo(this.detalleactivofijo,true);
					this.setVariablesFormularioToObjetoActualForeignKeysDetalleActivoFijo(this.detalleactivofijo);
				}

				if(this.detalleactivofijo.getid_empresa()!=null) {

					this.sAccionBusqueda="Query";

					this.sFinalQueryGeneral=" where id_empresa = "+this.detalleactivofijo.getid_empresa().toString()+" ";

					if(Constantes.ISDEVELOPING) {
						System.out.println(this.sFinalQueryGeneral);
					}

					this.procesarBusqueda(this.sAccionBusqueda);

					this.inicializarActualizarBindingDetalleActivoFijo(false);
				}

				if(Constantes.ISUSAEJBLOGICLAYER) {
					this.detalleactivofijoLogic.commitNewConnexionToDeep();
				}

			} catch(Exception e) {

				if(Constantes.ISUSAEJBLOGICLAYER) {
					this.detalleactivofijoLogic.rollbackNewConnexionToDeep();
				}

				FuncionesSwing.manageException(this, e,logger,DetalleActivoFijoConstantesFunciones.CLASSNAME);

			} finally {
				if(Constantes.ISUSAEJBLOGICLAYER) {
					this.detalleactivofijoLogic.closeNewConnexionToDeep();
				}

			}
		}

	public void jButtonid_sucursalDetalleActivoFijoUpdateActionPerformed(java.awt.event.ActionEvent evt) throws Exception {
		try {

			if(Constantes.ISUSAEJBLOGICLAYER) {
				this.detalleactivofijoLogic.getNewConnexionToDeep("");
			}

			Boolean idTienePermisosucursal=true;

			idTienePermisosucursal=this.tienePermisosUsuarioEnPaginaWebDetalleActivoFijo(SucursalConstantesFunciones.CLASSNAME);

			if(idTienePermisosucursal) {
				//TOCA TRAER NUEVAMENTE, YA QUE SE PIERDE REGISTRO ACTUAL
				int intSelectedRow = this.jTableDatosDetalleActivoFijo.getSelectedRow();

				if(intSelectedRow<0 && this.jTableDatosDetalleActivoFijo.getRowCount()>0) {
					intSelectedRow =0;
					this.jTableDatosDetalleActivoFijo.setRowSelectionInterval(intSelectedRow,intSelectedRow);
				}
				//ARCHITECTURE
				/*
				if(Constantes.ISUSAEJBLOGICLAYER) {
					this.detalleactivofijo =(DetalleActivoFijo) this.detalleactivofijoLogic.getDetalleActivoFijos().toArray()[this.jTableDatosDetalleActivoFijo.convertRowIndexToModel(intSelectedRow)];
				} else if(Constantes.ISUSAEJBREMOTE || Constantes.ISUSAEJBHOME) {
					this.detalleactivofijo =(DetalleActivoFijo) this.detalleactivofijos.toArray()[this.jTableDatosDetalleActivoFijo.convertRowIndexToModel(intSelectedRow)];
				}
				*/
				//ARCHITECTURE

				this.setVariablesFormularioToObjetoActualDetalleActivoFijo(this.getdetalleactivofijo(),true);
				this.setVariablesFormularioToObjetoActualForeignKeysDetalleActivoFijo(this.detalleactivofijo);

				this.sucursalBeanSwingJInternalFrame=new SucursalBeanSwingJInternalFrame(true,true,this.jDesktopPane,this.usuarioActual,this.resumenUsuarioActual,this.moduloActual,this.opcionActual,this.parametroGeneralSg,this.parametroGeneralUsuario,PaginaTipo.AUXILIAR,false,false,false,true);
				this.sucursalBeanSwingJInternalFrame.setJInternalFrameParent(this);

				this.sucursalBeanSwingJInternalFrame.getSucursalLogic().setConnexion(this.detalleactivofijoLogic.getConnexion());

				if(this.detalleactivofijo.getid_sucursal()!=null) {
					this.sucursalBeanSwingJInternalFrame.sTipoBusqueda="PorId";
					this.sucursalBeanSwingJInternalFrame.setIdActual(this.detalleactivofijo.getid_sucursal());
					this.sucursalBeanSwingJInternalFrame.procesarBusqueda("PorId");
					this.sucursalBeanSwingJInternalFrame.setsAccionBusqueda("PorId");
					this.sucursalBeanSwingJInternalFrame.inicializarActualizarBindingTablaSucursal();
				}

				JInternalFrameBase jinternalFrame =this.sucursalBeanSwingJInternalFrame;
				jinternalFrame.setAutoscrolls(true);
				//frame.setSize(screenSize.width-inset*7 , screenSize.height-inset*9);
				jinternalFrame.setVisible(true); 


				TitledBorder titledBorderDetalleActivoFijo=(TitledBorder)this.jScrollPanelDatosDetalleActivoFijo.getBorder();
				TitledBorder titledBordersucursal=(TitledBorder)this.sucursalBeanSwingJInternalFrame.jScrollPanelDatosSucursal.getBorder();

				titledBordersucursal.setTitle(titledBorderDetalleActivoFijo.getTitle() + " -> Sucursal");


				if(!Constantes.CON_VARIAS_VENTANAS) {
					MainJFrame.cerrarJInternalFramesExistentes(this.jDesktopPane,jinternalFrame);
				}

				this.jDesktopPane.add(jinternalFrame);

				jinternalFrame.setSelected(true);
			} else {
				throw new Exception("NO TIENE PERMISO PARA TRABAJAR CON ESTA INFORMACION");
			}

			if(Constantes.ISUSAEJBLOGICLAYER) {
				this.detalleactivofijoLogic.commitNewConnexionToDeep();
			}


		} catch(Exception e) {

			if(Constantes.ISUSAEJBLOGICLAYER) {
				this.detalleactivofijoLogic.rollbackNewConnexionToDeep();
			}

			FuncionesSwing.manageException(this, e,logger,DetalleActivoFijoConstantesFunciones.CLASSNAME);

		} finally {
			if(Constantes.ISUSAEJBLOGICLAYER) {
				this.detalleactivofijoLogic.closeNewConnexionToDeep();
			}

		}
	}

	public void jButtonid_sucursalDetalleActivoFijoBusquedaActionPerformed(java.awt.event.ActionEvent evt) throws Exception {
		try {

				if(Constantes.ISUSAEJBLOGICLAYER) {
					this.detalleactivofijoLogic.getNewConnexionToDeep("");
				}

				//TOCA TRAER NUEVAMENTE, YA QUE SE PIERDE REGISTRO ACTUAL
				int intSelectedRow = this.jTableDatosDetalleActivoFijo.getSelectedRow();

				if(intSelectedRow>-1) {
					this.setVariablesFormularioToObjetoActualDetalleActivoFijo(this.getdetalleactivofijo(),true);
					this.setVariablesFormularioToObjetoActualForeignKeysDetalleActivoFijo(this.detalleactivofijo);
					//ARCHITECTURE
					/*
					if(Constantes.ISUSAEJBLOGICLAYER) {
						this.detalleactivofijo =(DetalleActivoFijo) this.detalleactivofijoLogic.getDetalleActivoFijos().toArray()[this.jTableDatosDetalleActivoFijo.convertRowIndexToModel(intSelectedRow)];
					} else if(Constantes.ISUSAEJBREMOTE || Constantes.ISUSAEJBHOME) {
						this.detalleactivofijo =(DetalleActivoFijo) this.detalleactivofijos.toArray()[this.jTableDatosDetalleActivoFijo.convertRowIndexToModel(intSelectedRow)];
					}
					*/
					//ARCHITECTURE

				} else {
					if(this.detalleactivofijo==null) {
						this.detalleactivofijo = new DetalleActivoFijo();
					}

					this.setVariablesFormularioToObjetoActualDetalleActivoFijo(this.detalleactivofijo,true);
					this.setVariablesFormularioToObjetoActualForeignKeysDetalleActivoFijo(this.detalleactivofijo);
				}

				if(this.detalleactivofijo.getid_sucursal()!=null) {

					this.sAccionBusqueda="Query";

					this.sFinalQueryGeneral=" where id_sucursal = "+this.detalleactivofijo.getid_sucursal().toString()+" ";

					if(Constantes.ISDEVELOPING) {
						System.out.println(this.sFinalQueryGeneral);
					}

					this.procesarBusqueda(this.sAccionBusqueda);

					this.inicializarActualizarBindingDetalleActivoFijo(false);
				}

				if(Constantes.ISUSAEJBLOGICLAYER) {
					this.detalleactivofijoLogic.commitNewConnexionToDeep();
				}

			} catch(Exception e) {

				if(Constantes.ISUSAEJBLOGICLAYER) {
					this.detalleactivofijoLogic.rollbackNewConnexionToDeep();
				}

				FuncionesSwing.manageException(this, e,logger,DetalleActivoFijoConstantesFunciones.CLASSNAME);

			} finally {
				if(Constantes.ISUSAEJBLOGICLAYER) {
					this.detalleactivofijoLogic.closeNewConnexionToDeep();
				}

			}
		}

	public void jButtonid_detalle_grupo_activo_fijoDetalleActivoFijoUpdateActionPerformed(java.awt.event.ActionEvent evt) throws Exception {
		try {

			if(Constantes.ISUSAEJBLOGICLAYER) {
				this.detalleactivofijoLogic.getNewConnexionToDeep("");
			}

			Boolean idTienePermisodetallegrupoactivofijo=true;

			idTienePermisodetallegrupoactivofijo=this.tienePermisosUsuarioEnPaginaWebDetalleActivoFijo(DetalleGrupoActivoFijoConstantesFunciones.CLASSNAME);

			if(idTienePermisodetallegrupoactivofijo) {
				//TOCA TRAER NUEVAMENTE, YA QUE SE PIERDE REGISTRO ACTUAL
				int intSelectedRow = this.jTableDatosDetalleActivoFijo.getSelectedRow();

				if(intSelectedRow<0 && this.jTableDatosDetalleActivoFijo.getRowCount()>0) {
					intSelectedRow =0;
					this.jTableDatosDetalleActivoFijo.setRowSelectionInterval(intSelectedRow,intSelectedRow);
				}
				//ARCHITECTURE
				/*
				if(Constantes.ISUSAEJBLOGICLAYER) {
					this.detalleactivofijo =(DetalleActivoFijo) this.detalleactivofijoLogic.getDetalleActivoFijos().toArray()[this.jTableDatosDetalleActivoFijo.convertRowIndexToModel(intSelectedRow)];
				} else if(Constantes.ISUSAEJBREMOTE || Constantes.ISUSAEJBHOME) {
					this.detalleactivofijo =(DetalleActivoFijo) this.detalleactivofijos.toArray()[this.jTableDatosDetalleActivoFijo.convertRowIndexToModel(intSelectedRow)];
				}
				*/
				//ARCHITECTURE

				this.setVariablesFormularioToObjetoActualDetalleActivoFijo(this.getdetalleactivofijo(),true);
				this.setVariablesFormularioToObjetoActualForeignKeysDetalleActivoFijo(this.detalleactivofijo);

				this.detallegrupoactivofijoBeanSwingJInternalFrame=new DetalleGrupoActivoFijoBeanSwingJInternalFrame(true,true,this.jDesktopPane,this.usuarioActual,this.resumenUsuarioActual,this.moduloActual,this.opcionActual,this.parametroGeneralSg,this.parametroGeneralUsuario,PaginaTipo.AUXILIAR,false,false,false,true);
				this.detallegrupoactivofijoBeanSwingJInternalFrame.setJInternalFrameParent(this);

				this.detallegrupoactivofijoBeanSwingJInternalFrame.getDetalleGrupoActivoFijoLogic().setConnexion(this.detalleactivofijoLogic.getConnexion());

				if(this.detalleactivofijo.getid_detalle_grupo_activo_fijo()!=null) {
					this.detallegrupoactivofijoBeanSwingJInternalFrame.sTipoBusqueda="PorId";
					this.detallegrupoactivofijoBeanSwingJInternalFrame.setIdActual(this.detalleactivofijo.getid_detalle_grupo_activo_fijo());
					this.detallegrupoactivofijoBeanSwingJInternalFrame.procesarBusqueda("PorId");
					this.detallegrupoactivofijoBeanSwingJInternalFrame.setsAccionBusqueda("PorId");
					this.detallegrupoactivofijoBeanSwingJInternalFrame.inicializarActualizarBindingTablaDetalleGrupoActivoFijo();
				}

				JInternalFrameBase jinternalFrame =this.detallegrupoactivofijoBeanSwingJInternalFrame;
				jinternalFrame.setAutoscrolls(true);
				//frame.setSize(screenSize.width-inset*7 , screenSize.height-inset*9);
				jinternalFrame.setVisible(true); 


				TitledBorder titledBorderDetalleActivoFijo=(TitledBorder)this.jScrollPanelDatosDetalleActivoFijo.getBorder();
				TitledBorder titledBorderdetallegrupoactivofijo=(TitledBorder)this.detallegrupoactivofijoBeanSwingJInternalFrame.jScrollPanelDatosDetalleGrupoActivoFijo.getBorder();

				titledBorderdetallegrupoactivofijo.setTitle(titledBorderDetalleActivoFijo.getTitle() + " -> Detalle Grupo Activo Fijo");


				if(!Constantes.CON_VARIAS_VENTANAS) {
					MainJFrame.cerrarJInternalFramesExistentes(this.jDesktopPane,jinternalFrame);
				}

				this.jDesktopPane.add(jinternalFrame);

				jinternalFrame.setSelected(true);
			} else {
				throw new Exception("NO TIENE PERMISO PARA TRABAJAR CON ESTA INFORMACION");
			}

			if(Constantes.ISUSAEJBLOGICLAYER) {
				this.detalleactivofijoLogic.commitNewConnexionToDeep();
			}


		} catch(Exception e) {

			if(Constantes.ISUSAEJBLOGICLAYER) {
				this.detalleactivofijoLogic.rollbackNewConnexionToDeep();
			}

			FuncionesSwing.manageException(this, e,logger,DetalleActivoFijoConstantesFunciones.CLASSNAME);

		} finally {
			if(Constantes.ISUSAEJBLOGICLAYER) {
				this.detalleactivofijoLogic.closeNewConnexionToDeep();
			}

		}
	}

	public void jButtonid_detalle_grupo_activo_fijoDetalleActivoFijoBusquedaActionPerformed(java.awt.event.ActionEvent evt) throws Exception {
		try {

				if(Constantes.ISUSAEJBLOGICLAYER) {
					this.detalleactivofijoLogic.getNewConnexionToDeep("");
				}

				//TOCA TRAER NUEVAMENTE, YA QUE SE PIERDE REGISTRO ACTUAL
				int intSelectedRow = this.jTableDatosDetalleActivoFijo.getSelectedRow();

				if(intSelectedRow>-1) {
					this.setVariablesFormularioToObjetoActualDetalleActivoFijo(this.getdetalleactivofijo(),true);
					this.setVariablesFormularioToObjetoActualForeignKeysDetalleActivoFijo(this.detalleactivofijo);
					//ARCHITECTURE
					/*
					if(Constantes.ISUSAEJBLOGICLAYER) {
						this.detalleactivofijo =(DetalleActivoFijo) this.detalleactivofijoLogic.getDetalleActivoFijos().toArray()[this.jTableDatosDetalleActivoFijo.convertRowIndexToModel(intSelectedRow)];
					} else if(Constantes.ISUSAEJBREMOTE || Constantes.ISUSAEJBHOME) {
						this.detalleactivofijo =(DetalleActivoFijo) this.detalleactivofijos.toArray()[this.jTableDatosDetalleActivoFijo.convertRowIndexToModel(intSelectedRow)];
					}
					*/
					//ARCHITECTURE

				} else {
					if(this.detalleactivofijo==null) {
						this.detalleactivofijo = new DetalleActivoFijo();
					}

					this.setVariablesFormularioToObjetoActualDetalleActivoFijo(this.detalleactivofijo,true);
					this.setVariablesFormularioToObjetoActualForeignKeysDetalleActivoFijo(this.detalleactivofijo);
				}

				if(this.detalleactivofijo.getid_detalle_grupo_activo_fijo()!=null) {

					this.sAccionBusqueda="Query";

					this.sFinalQueryGeneral=" where id_detalle_grupo_activo_fijo = "+this.detalleactivofijo.getid_detalle_grupo_activo_fijo().toString()+" ";

					if(Constantes.ISDEVELOPING) {
						System.out.println(this.sFinalQueryGeneral);
					}

					this.procesarBusqueda(this.sAccionBusqueda);

					this.inicializarActualizarBindingDetalleActivoFijo(false);
				}

				if(Constantes.ISUSAEJBLOGICLAYER) {
					this.detalleactivofijoLogic.commitNewConnexionToDeep();
				}

			} catch(Exception e) {

				if(Constantes.ISUSAEJBLOGICLAYER) {
					this.detalleactivofijoLogic.rollbackNewConnexionToDeep();
				}

				FuncionesSwing.manageException(this, e,logger,DetalleActivoFijoConstantesFunciones.CLASSNAME);

			} finally {
				if(Constantes.ISUSAEJBLOGICLAYER) {
					this.detalleactivofijoLogic.closeNewConnexionToDeep();
				}

			}
		}

	public void jButtonid_sub_grupo_activo_fijoDetalleActivoFijoUpdateActionPerformed(java.awt.event.ActionEvent evt) throws Exception {
		try {

			if(Constantes.ISUSAEJBLOGICLAYER) {
				this.detalleactivofijoLogic.getNewConnexionToDeep("");
			}

			Boolean idTienePermisosubgrupoactivofijo=true;

			idTienePermisosubgrupoactivofijo=this.tienePermisosUsuarioEnPaginaWebDetalleActivoFijo(SubGrupoActivoFijoConstantesFunciones.CLASSNAME);

			if(idTienePermisosubgrupoactivofijo) {
				//TOCA TRAER NUEVAMENTE, YA QUE SE PIERDE REGISTRO ACTUAL
				int intSelectedRow = this.jTableDatosDetalleActivoFijo.getSelectedRow();

				if(intSelectedRow<0 && this.jTableDatosDetalleActivoFijo.getRowCount()>0) {
					intSelectedRow =0;
					this.jTableDatosDetalleActivoFijo.setRowSelectionInterval(intSelectedRow,intSelectedRow);
				}
				//ARCHITECTURE
				/*
				if(Constantes.ISUSAEJBLOGICLAYER) {
					this.detalleactivofijo =(DetalleActivoFijo) this.detalleactivofijoLogic.getDetalleActivoFijos().toArray()[this.jTableDatosDetalleActivoFijo.convertRowIndexToModel(intSelectedRow)];
				} else if(Constantes.ISUSAEJBREMOTE || Constantes.ISUSAEJBHOME) {
					this.detalleactivofijo =(DetalleActivoFijo) this.detalleactivofijos.toArray()[this.jTableDatosDetalleActivoFijo.convertRowIndexToModel(intSelectedRow)];
				}
				*/
				//ARCHITECTURE

				this.setVariablesFormularioToObjetoActualDetalleActivoFijo(this.getdetalleactivofijo(),true);
				this.setVariablesFormularioToObjetoActualForeignKeysDetalleActivoFijo(this.detalleactivofijo);

				this.subgrupoactivofijoBeanSwingJInternalFrame=new SubGrupoActivoFijoBeanSwingJInternalFrame(true,true,this.jDesktopPane,this.usuarioActual,this.resumenUsuarioActual,this.moduloActual,this.opcionActual,this.parametroGeneralSg,this.parametroGeneralUsuario,PaginaTipo.AUXILIAR,false,false,false,true);
				this.subgrupoactivofijoBeanSwingJInternalFrame.setJInternalFrameParent(this);

				this.subgrupoactivofijoBeanSwingJInternalFrame.getSubGrupoActivoFijoLogic().setConnexion(this.detalleactivofijoLogic.getConnexion());

				if(this.detalleactivofijo.getid_sub_grupo_activo_fijo()!=null) {
					this.subgrupoactivofijoBeanSwingJInternalFrame.sTipoBusqueda="PorId";
					this.subgrupoactivofijoBeanSwingJInternalFrame.setIdActual(this.detalleactivofijo.getid_sub_grupo_activo_fijo());
					this.subgrupoactivofijoBeanSwingJInternalFrame.procesarBusqueda("PorId");
					this.subgrupoactivofijoBeanSwingJInternalFrame.setsAccionBusqueda("PorId");
					this.subgrupoactivofijoBeanSwingJInternalFrame.inicializarActualizarBindingTablaSubGrupoActivoFijo();
				}

				JInternalFrameBase jinternalFrame =this.subgrupoactivofijoBeanSwingJInternalFrame;
				jinternalFrame.setAutoscrolls(true);
				//frame.setSize(screenSize.width-inset*7 , screenSize.height-inset*9);
				jinternalFrame.setVisible(true); 


				TitledBorder titledBorderDetalleActivoFijo=(TitledBorder)this.jScrollPanelDatosDetalleActivoFijo.getBorder();
				TitledBorder titledBordersubgrupoactivofijo=(TitledBorder)this.subgrupoactivofijoBeanSwingJInternalFrame.jScrollPanelDatosSubGrupoActivoFijo.getBorder();

				titledBordersubgrupoactivofijo.setTitle(titledBorderDetalleActivoFijo.getTitle() + " -> Sub Grupo Activo Fijo");


				if(!Constantes.CON_VARIAS_VENTANAS) {
					MainJFrame.cerrarJInternalFramesExistentes(this.jDesktopPane,jinternalFrame);
				}

				this.jDesktopPane.add(jinternalFrame);

				jinternalFrame.setSelected(true);
			} else {
				throw new Exception("NO TIENE PERMISO PARA TRABAJAR CON ESTA INFORMACION");
			}

			if(Constantes.ISUSAEJBLOGICLAYER) {
				this.detalleactivofijoLogic.commitNewConnexionToDeep();
			}


		} catch(Exception e) {

			if(Constantes.ISUSAEJBLOGICLAYER) {
				this.detalleactivofijoLogic.rollbackNewConnexionToDeep();
			}

			FuncionesSwing.manageException(this, e,logger,DetalleActivoFijoConstantesFunciones.CLASSNAME);

		} finally {
			if(Constantes.ISUSAEJBLOGICLAYER) {
				this.detalleactivofijoLogic.closeNewConnexionToDeep();
			}

		}
	}

	public void jButtonid_sub_grupo_activo_fijoDetalleActivoFijoBusquedaActionPerformed(java.awt.event.ActionEvent evt) throws Exception {
		try {

				if(Constantes.ISUSAEJBLOGICLAYER) {
					this.detalleactivofijoLogic.getNewConnexionToDeep("");
				}

				//TOCA TRAER NUEVAMENTE, YA QUE SE PIERDE REGISTRO ACTUAL
				int intSelectedRow = this.jTableDatosDetalleActivoFijo.getSelectedRow();

				if(intSelectedRow>-1) {
					this.setVariablesFormularioToObjetoActualDetalleActivoFijo(this.getdetalleactivofijo(),true);
					this.setVariablesFormularioToObjetoActualForeignKeysDetalleActivoFijo(this.detalleactivofijo);
					//ARCHITECTURE
					/*
					if(Constantes.ISUSAEJBLOGICLAYER) {
						this.detalleactivofijo =(DetalleActivoFijo) this.detalleactivofijoLogic.getDetalleActivoFijos().toArray()[this.jTableDatosDetalleActivoFijo.convertRowIndexToModel(intSelectedRow)];
					} else if(Constantes.ISUSAEJBREMOTE || Constantes.ISUSAEJBHOME) {
						this.detalleactivofijo =(DetalleActivoFijo) this.detalleactivofijos.toArray()[this.jTableDatosDetalleActivoFijo.convertRowIndexToModel(intSelectedRow)];
					}
					*/
					//ARCHITECTURE

				} else {
					if(this.detalleactivofijo==null) {
						this.detalleactivofijo = new DetalleActivoFijo();
					}

					this.setVariablesFormularioToObjetoActualDetalleActivoFijo(this.detalleactivofijo,true);
					this.setVariablesFormularioToObjetoActualForeignKeysDetalleActivoFijo(this.detalleactivofijo);
				}

				if(this.detalleactivofijo.getid_sub_grupo_activo_fijo()!=null) {

					this.sAccionBusqueda="Query";

					this.sFinalQueryGeneral=" where id_sub_grupo_activo_fijo = "+this.detalleactivofijo.getid_sub_grupo_activo_fijo().toString()+" ";

					if(Constantes.ISDEVELOPING) {
						System.out.println(this.sFinalQueryGeneral);
					}

					this.procesarBusqueda(this.sAccionBusqueda);

					this.inicializarActualizarBindingDetalleActivoFijo(false);
				}

				if(Constantes.ISUSAEJBLOGICLAYER) {
					this.detalleactivofijoLogic.commitNewConnexionToDeep();
				}

			} catch(Exception e) {

				if(Constantes.ISUSAEJBLOGICLAYER) {
					this.detalleactivofijoLogic.rollbackNewConnexionToDeep();
				}

				FuncionesSwing.manageException(this, e,logger,DetalleActivoFijoConstantesFunciones.CLASSNAME);

			} finally {
				if(Constantes.ISUSAEJBLOGICLAYER) {
					this.detalleactivofijoLogic.closeNewConnexionToDeep();
				}

			}
		}

	public void jButtonid_tipo_ramo_activo_fijoDetalleActivoFijoUpdateActionPerformed(java.awt.event.ActionEvent evt) throws Exception {
		try {

			if(Constantes.ISUSAEJBLOGICLAYER) {
				this.detalleactivofijoLogic.getNewConnexionToDeep("");
			}

			Boolean idTienePermisotiporamoactivofijo=true;

			idTienePermisotiporamoactivofijo=this.tienePermisosUsuarioEnPaginaWebDetalleActivoFijo(TipoRamoActivoFijoConstantesFunciones.CLASSNAME);

			if(idTienePermisotiporamoactivofijo) {
				//TOCA TRAER NUEVAMENTE, YA QUE SE PIERDE REGISTRO ACTUAL
				int intSelectedRow = this.jTableDatosDetalleActivoFijo.getSelectedRow();

				if(intSelectedRow<0 && this.jTableDatosDetalleActivoFijo.getRowCount()>0) {
					intSelectedRow =0;
					this.jTableDatosDetalleActivoFijo.setRowSelectionInterval(intSelectedRow,intSelectedRow);
				}
				//ARCHITECTURE
				/*
				if(Constantes.ISUSAEJBLOGICLAYER) {
					this.detalleactivofijo =(DetalleActivoFijo) this.detalleactivofijoLogic.getDetalleActivoFijos().toArray()[this.jTableDatosDetalleActivoFijo.convertRowIndexToModel(intSelectedRow)];
				} else if(Constantes.ISUSAEJBREMOTE || Constantes.ISUSAEJBHOME) {
					this.detalleactivofijo =(DetalleActivoFijo) this.detalleactivofijos.toArray()[this.jTableDatosDetalleActivoFijo.convertRowIndexToModel(intSelectedRow)];
				}
				*/
				//ARCHITECTURE

				this.setVariablesFormularioToObjetoActualDetalleActivoFijo(this.getdetalleactivofijo(),true);
				this.setVariablesFormularioToObjetoActualForeignKeysDetalleActivoFijo(this.detalleactivofijo);

				this.tiporamoactivofijoBeanSwingJInternalFrame=new TipoRamoActivoFijoBeanSwingJInternalFrame(true,true,this.jDesktopPane,this.usuarioActual,this.resumenUsuarioActual,this.moduloActual,this.opcionActual,this.parametroGeneralSg,this.parametroGeneralUsuario,PaginaTipo.AUXILIAR,false,false,false,true);
				this.tiporamoactivofijoBeanSwingJInternalFrame.setJInternalFrameParent(this);

				this.tiporamoactivofijoBeanSwingJInternalFrame.getTipoRamoActivoFijoLogic().setConnexion(this.detalleactivofijoLogic.getConnexion());

				if(this.detalleactivofijo.getid_tipo_ramo_activo_fijo()!=null) {
					this.tiporamoactivofijoBeanSwingJInternalFrame.sTipoBusqueda="PorId";
					this.tiporamoactivofijoBeanSwingJInternalFrame.setIdActual(this.detalleactivofijo.getid_tipo_ramo_activo_fijo());
					this.tiporamoactivofijoBeanSwingJInternalFrame.procesarBusqueda("PorId");
					this.tiporamoactivofijoBeanSwingJInternalFrame.setsAccionBusqueda("PorId");
					this.tiporamoactivofijoBeanSwingJInternalFrame.inicializarActualizarBindingTablaTipoRamoActivoFijo();
				}

				JInternalFrameBase jinternalFrame =this.tiporamoactivofijoBeanSwingJInternalFrame;
				jinternalFrame.setAutoscrolls(true);
				//frame.setSize(screenSize.width-inset*7 , screenSize.height-inset*9);
				jinternalFrame.setVisible(true); 


				TitledBorder titledBorderDetalleActivoFijo=(TitledBorder)this.jScrollPanelDatosDetalleActivoFijo.getBorder();
				TitledBorder titledBordertiporamoactivofijo=(TitledBorder)this.tiporamoactivofijoBeanSwingJInternalFrame.jScrollPanelDatosTipoRamoActivoFijo.getBorder();

				titledBordertiporamoactivofijo.setTitle(titledBorderDetalleActivoFijo.getTitle() + " -> Tipo Ramo Activo Fijo");


				if(!Constantes.CON_VARIAS_VENTANAS) {
					MainJFrame.cerrarJInternalFramesExistentes(this.jDesktopPane,jinternalFrame);
				}

				this.jDesktopPane.add(jinternalFrame);

				jinternalFrame.setSelected(true);
			} else {
				throw new Exception("NO TIENE PERMISO PARA TRABAJAR CON ESTA INFORMACION");
			}

			if(Constantes.ISUSAEJBLOGICLAYER) {
				this.detalleactivofijoLogic.commitNewConnexionToDeep();
			}


		} catch(Exception e) {

			if(Constantes.ISUSAEJBLOGICLAYER) {
				this.detalleactivofijoLogic.rollbackNewConnexionToDeep();
			}

			FuncionesSwing.manageException(this, e,logger,DetalleActivoFijoConstantesFunciones.CLASSNAME);

		} finally {
			if(Constantes.ISUSAEJBLOGICLAYER) {
				this.detalleactivofijoLogic.closeNewConnexionToDeep();
			}

		}
	}

	public void jButtonid_tipo_ramo_activo_fijoDetalleActivoFijoBusquedaActionPerformed(java.awt.event.ActionEvent evt) throws Exception {
		try {

				if(Constantes.ISUSAEJBLOGICLAYER) {
					this.detalleactivofijoLogic.getNewConnexionToDeep("");
				}

				//TOCA TRAER NUEVAMENTE, YA QUE SE PIERDE REGISTRO ACTUAL
				int intSelectedRow = this.jTableDatosDetalleActivoFijo.getSelectedRow();

				if(intSelectedRow>-1) {
					this.setVariablesFormularioToObjetoActualDetalleActivoFijo(this.getdetalleactivofijo(),true);
					this.setVariablesFormularioToObjetoActualForeignKeysDetalleActivoFijo(this.detalleactivofijo);
					//ARCHITECTURE
					/*
					if(Constantes.ISUSAEJBLOGICLAYER) {
						this.detalleactivofijo =(DetalleActivoFijo) this.detalleactivofijoLogic.getDetalleActivoFijos().toArray()[this.jTableDatosDetalleActivoFijo.convertRowIndexToModel(intSelectedRow)];
					} else if(Constantes.ISUSAEJBREMOTE || Constantes.ISUSAEJBHOME) {
						this.detalleactivofijo =(DetalleActivoFijo) this.detalleactivofijos.toArray()[this.jTableDatosDetalleActivoFijo.convertRowIndexToModel(intSelectedRow)];
					}
					*/
					//ARCHITECTURE

				} else {
					if(this.detalleactivofijo==null) {
						this.detalleactivofijo = new DetalleActivoFijo();
					}

					this.setVariablesFormularioToObjetoActualDetalleActivoFijo(this.detalleactivofijo,true);
					this.setVariablesFormularioToObjetoActualForeignKeysDetalleActivoFijo(this.detalleactivofijo);
				}

				if(this.detalleactivofijo.getid_tipo_ramo_activo_fijo()!=null) {

					this.sAccionBusqueda="Query";

					this.sFinalQueryGeneral=" where id_tipo_ramo_activo_fijo = "+this.detalleactivofijo.getid_tipo_ramo_activo_fijo().toString()+" ";

					if(Constantes.ISDEVELOPING) {
						System.out.println(this.sFinalQueryGeneral);
					}

					this.procesarBusqueda(this.sAccionBusqueda);

					this.inicializarActualizarBindingDetalleActivoFijo(false);
				}

				if(Constantes.ISUSAEJBLOGICLAYER) {
					this.detalleactivofijoLogic.commitNewConnexionToDeep();
				}

			} catch(Exception e) {

				if(Constantes.ISUSAEJBLOGICLAYER) {
					this.detalleactivofijoLogic.rollbackNewConnexionToDeep();
				}

				FuncionesSwing.manageException(this, e,logger,DetalleActivoFijoConstantesFunciones.CLASSNAME);

			} finally {
				if(Constantes.ISUSAEJBLOGICLAYER) {
					this.detalleactivofijoLogic.closeNewConnexionToDeep();
				}

			}
		}

	public void jButtonid_tipo_activo_fijo_empresaDetalleActivoFijoUpdateActionPerformed(java.awt.event.ActionEvent evt) throws Exception {
		try {

			if(Constantes.ISUSAEJBLOGICLAYER) {
				this.detalleactivofijoLogic.getNewConnexionToDeep("");
			}

			Boolean idTienePermisotipoactivofijoempresa=true;

			idTienePermisotipoactivofijoempresa=this.tienePermisosUsuarioEnPaginaWebDetalleActivoFijo(TipoActivoFijoEmpresaConstantesFunciones.CLASSNAME);

			if(idTienePermisotipoactivofijoempresa) {
				//TOCA TRAER NUEVAMENTE, YA QUE SE PIERDE REGISTRO ACTUAL
				int intSelectedRow = this.jTableDatosDetalleActivoFijo.getSelectedRow();

				if(intSelectedRow<0 && this.jTableDatosDetalleActivoFijo.getRowCount()>0) {
					intSelectedRow =0;
					this.jTableDatosDetalleActivoFijo.setRowSelectionInterval(intSelectedRow,intSelectedRow);
				}
				//ARCHITECTURE
				/*
				if(Constantes.ISUSAEJBLOGICLAYER) {
					this.detalleactivofijo =(DetalleActivoFijo) this.detalleactivofijoLogic.getDetalleActivoFijos().toArray()[this.jTableDatosDetalleActivoFijo.convertRowIndexToModel(intSelectedRow)];
				} else if(Constantes.ISUSAEJBREMOTE || Constantes.ISUSAEJBHOME) {
					this.detalleactivofijo =(DetalleActivoFijo) this.detalleactivofijos.toArray()[this.jTableDatosDetalleActivoFijo.convertRowIndexToModel(intSelectedRow)];
				}
				*/
				//ARCHITECTURE

				this.setVariablesFormularioToObjetoActualDetalleActivoFijo(this.getdetalleactivofijo(),true);
				this.setVariablesFormularioToObjetoActualForeignKeysDetalleActivoFijo(this.detalleactivofijo);

				this.tipoactivofijoempresaBeanSwingJInternalFrame=new TipoActivoFijoEmpresaBeanSwingJInternalFrame(true,true,this.jDesktopPane,this.usuarioActual,this.resumenUsuarioActual,this.moduloActual,this.opcionActual,this.parametroGeneralSg,this.parametroGeneralUsuario,PaginaTipo.AUXILIAR,false,false,false,true);
				this.tipoactivofijoempresaBeanSwingJInternalFrame.setJInternalFrameParent(this);

				this.tipoactivofijoempresaBeanSwingJInternalFrame.getTipoActivoFijoEmpresaLogic().setConnexion(this.detalleactivofijoLogic.getConnexion());

				if(this.detalleactivofijo.getid_tipo_activo_fijo_empresa()!=null) {
					this.tipoactivofijoempresaBeanSwingJInternalFrame.sTipoBusqueda="PorId";
					this.tipoactivofijoempresaBeanSwingJInternalFrame.setIdActual(this.detalleactivofijo.getid_tipo_activo_fijo_empresa());
					this.tipoactivofijoempresaBeanSwingJInternalFrame.procesarBusqueda("PorId");
					this.tipoactivofijoempresaBeanSwingJInternalFrame.setsAccionBusqueda("PorId");
					this.tipoactivofijoempresaBeanSwingJInternalFrame.inicializarActualizarBindingTablaTipoActivoFijoEmpresa();
				}

				JInternalFrameBase jinternalFrame =this.tipoactivofijoempresaBeanSwingJInternalFrame;
				jinternalFrame.setAutoscrolls(true);
				//frame.setSize(screenSize.width-inset*7 , screenSize.height-inset*9);
				jinternalFrame.setVisible(true); 


				TitledBorder titledBorderDetalleActivoFijo=(TitledBorder)this.jScrollPanelDatosDetalleActivoFijo.getBorder();
				TitledBorder titledBordertipoactivofijoempresa=(TitledBorder)this.tipoactivofijoempresaBeanSwingJInternalFrame.jScrollPanelDatosTipoActivoFijoEmpresa.getBorder();

				titledBordertipoactivofijoempresa.setTitle(titledBorderDetalleActivoFijo.getTitle() + " -> Tipo Activo Fijo Empresa");


				if(!Constantes.CON_VARIAS_VENTANAS) {
					MainJFrame.cerrarJInternalFramesExistentes(this.jDesktopPane,jinternalFrame);
				}

				this.jDesktopPane.add(jinternalFrame);

				jinternalFrame.setSelected(true);
			} else {
				throw new Exception("NO TIENE PERMISO PARA TRABAJAR CON ESTA INFORMACION");
			}

			if(Constantes.ISUSAEJBLOGICLAYER) {
				this.detalleactivofijoLogic.commitNewConnexionToDeep();
			}


		} catch(Exception e) {

			if(Constantes.ISUSAEJBLOGICLAYER) {
				this.detalleactivofijoLogic.rollbackNewConnexionToDeep();
			}

			FuncionesSwing.manageException(this, e,logger,DetalleActivoFijoConstantesFunciones.CLASSNAME);

		} finally {
			if(Constantes.ISUSAEJBLOGICLAYER) {
				this.detalleactivofijoLogic.closeNewConnexionToDeep();
			}

		}
	}

	public void jButtonid_tipo_activo_fijo_empresaDetalleActivoFijoBusquedaActionPerformed(java.awt.event.ActionEvent evt) throws Exception {
		try {

				if(Constantes.ISUSAEJBLOGICLAYER) {
					this.detalleactivofijoLogic.getNewConnexionToDeep("");
				}

				//TOCA TRAER NUEVAMENTE, YA QUE SE PIERDE REGISTRO ACTUAL
				int intSelectedRow = this.jTableDatosDetalleActivoFijo.getSelectedRow();

				if(intSelectedRow>-1) {
					this.setVariablesFormularioToObjetoActualDetalleActivoFijo(this.getdetalleactivofijo(),true);
					this.setVariablesFormularioToObjetoActualForeignKeysDetalleActivoFijo(this.detalleactivofijo);
					//ARCHITECTURE
					/*
					if(Constantes.ISUSAEJBLOGICLAYER) {
						this.detalleactivofijo =(DetalleActivoFijo) this.detalleactivofijoLogic.getDetalleActivoFijos().toArray()[this.jTableDatosDetalleActivoFijo.convertRowIndexToModel(intSelectedRow)];
					} else if(Constantes.ISUSAEJBREMOTE || Constantes.ISUSAEJBHOME) {
						this.detalleactivofijo =(DetalleActivoFijo) this.detalleactivofijos.toArray()[this.jTableDatosDetalleActivoFijo.convertRowIndexToModel(intSelectedRow)];
					}
					*/
					//ARCHITECTURE

				} else {
					if(this.detalleactivofijo==null) {
						this.detalleactivofijo = new DetalleActivoFijo();
					}

					this.setVariablesFormularioToObjetoActualDetalleActivoFijo(this.detalleactivofijo,true);
					this.setVariablesFormularioToObjetoActualForeignKeysDetalleActivoFijo(this.detalleactivofijo);
				}

				if(this.detalleactivofijo.getid_tipo_activo_fijo_empresa()!=null) {

					this.sAccionBusqueda="Query";

					this.sFinalQueryGeneral=" where id_tipo_activo_fijo_empresa = "+this.detalleactivofijo.getid_tipo_activo_fijo_empresa().toString()+" ";

					if(Constantes.ISDEVELOPING) {
						System.out.println(this.sFinalQueryGeneral);
					}

					this.procesarBusqueda(this.sAccionBusqueda);

					this.inicializarActualizarBindingDetalleActivoFijo(false);
				}

				if(Constantes.ISUSAEJBLOGICLAYER) {
					this.detalleactivofijoLogic.commitNewConnexionToDeep();
				}

			} catch(Exception e) {

				if(Constantes.ISUSAEJBLOGICLAYER) {
					this.detalleactivofijoLogic.rollbackNewConnexionToDeep();
				}

				FuncionesSwing.manageException(this, e,logger,DetalleActivoFijoConstantesFunciones.CLASSNAME);

			} finally {
				if(Constantes.ISUSAEJBLOGICLAYER) {
					this.detalleactivofijoLogic.closeNewConnexionToDeep();
				}

			}
		}

	public void jButtonid_tipo_depreciacion_empresaDetalleActivoFijoUpdateActionPerformed(java.awt.event.ActionEvent evt) throws Exception {
		try {

			if(Constantes.ISUSAEJBLOGICLAYER) {
				this.detalleactivofijoLogic.getNewConnexionToDeep("");
			}

			Boolean idTienePermisotipodepreciacionempresa=true;

			idTienePermisotipodepreciacionempresa=this.tienePermisosUsuarioEnPaginaWebDetalleActivoFijo(TipoDepreciacionEmpresaConstantesFunciones.CLASSNAME);

			if(idTienePermisotipodepreciacionempresa) {
				//TOCA TRAER NUEVAMENTE, YA QUE SE PIERDE REGISTRO ACTUAL
				int intSelectedRow = this.jTableDatosDetalleActivoFijo.getSelectedRow();

				if(intSelectedRow<0 && this.jTableDatosDetalleActivoFijo.getRowCount()>0) {
					intSelectedRow =0;
					this.jTableDatosDetalleActivoFijo.setRowSelectionInterval(intSelectedRow,intSelectedRow);
				}
				//ARCHITECTURE
				/*
				if(Constantes.ISUSAEJBLOGICLAYER) {
					this.detalleactivofijo =(DetalleActivoFijo) this.detalleactivofijoLogic.getDetalleActivoFijos().toArray()[this.jTableDatosDetalleActivoFijo.convertRowIndexToModel(intSelectedRow)];
				} else if(Constantes.ISUSAEJBREMOTE || Constantes.ISUSAEJBHOME) {
					this.detalleactivofijo =(DetalleActivoFijo) this.detalleactivofijos.toArray()[this.jTableDatosDetalleActivoFijo.convertRowIndexToModel(intSelectedRow)];
				}
				*/
				//ARCHITECTURE

				this.setVariablesFormularioToObjetoActualDetalleActivoFijo(this.getdetalleactivofijo(),true);
				this.setVariablesFormularioToObjetoActualForeignKeysDetalleActivoFijo(this.detalleactivofijo);

				this.tipodepreciacionempresaBeanSwingJInternalFrame=new TipoDepreciacionEmpresaBeanSwingJInternalFrame(true,true,this.jDesktopPane,this.usuarioActual,this.resumenUsuarioActual,this.moduloActual,this.opcionActual,this.parametroGeneralSg,this.parametroGeneralUsuario,PaginaTipo.AUXILIAR,false,false,false,true);
				this.tipodepreciacionempresaBeanSwingJInternalFrame.setJInternalFrameParent(this);

				this.tipodepreciacionempresaBeanSwingJInternalFrame.getTipoDepreciacionEmpresaLogic().setConnexion(this.detalleactivofijoLogic.getConnexion());

				if(this.detalleactivofijo.getid_tipo_depreciacion_empresa()!=null) {
					this.tipodepreciacionempresaBeanSwingJInternalFrame.sTipoBusqueda="PorId";
					this.tipodepreciacionempresaBeanSwingJInternalFrame.setIdActual(this.detalleactivofijo.getid_tipo_depreciacion_empresa());
					this.tipodepreciacionempresaBeanSwingJInternalFrame.procesarBusqueda("PorId");
					this.tipodepreciacionempresaBeanSwingJInternalFrame.setsAccionBusqueda("PorId");
					this.tipodepreciacionempresaBeanSwingJInternalFrame.inicializarActualizarBindingTablaTipoDepreciacionEmpresa();
				}

				JInternalFrameBase jinternalFrame =this.tipodepreciacionempresaBeanSwingJInternalFrame;
				jinternalFrame.setAutoscrolls(true);
				//frame.setSize(screenSize.width-inset*7 , screenSize.height-inset*9);
				jinternalFrame.setVisible(true); 


				TitledBorder titledBorderDetalleActivoFijo=(TitledBorder)this.jScrollPanelDatosDetalleActivoFijo.getBorder();
				TitledBorder titledBordertipodepreciacionempresa=(TitledBorder)this.tipodepreciacionempresaBeanSwingJInternalFrame.jScrollPanelDatosTipoDepreciacionEmpresa.getBorder();

				titledBordertipodepreciacionempresa.setTitle(titledBorderDetalleActivoFijo.getTitle() + " -> Tipo Depreciacion Empresa");


				if(!Constantes.CON_VARIAS_VENTANAS) {
					MainJFrame.cerrarJInternalFramesExistentes(this.jDesktopPane,jinternalFrame);
				}

				this.jDesktopPane.add(jinternalFrame);

				jinternalFrame.setSelected(true);
			} else {
				throw new Exception("NO TIENE PERMISO PARA TRABAJAR CON ESTA INFORMACION");
			}

			if(Constantes.ISUSAEJBLOGICLAYER) {
				this.detalleactivofijoLogic.commitNewConnexionToDeep();
			}


		} catch(Exception e) {

			if(Constantes.ISUSAEJBLOGICLAYER) {
				this.detalleactivofijoLogic.rollbackNewConnexionToDeep();
			}

			FuncionesSwing.manageException(this, e,logger,DetalleActivoFijoConstantesFunciones.CLASSNAME);

		} finally {
			if(Constantes.ISUSAEJBLOGICLAYER) {
				this.detalleactivofijoLogic.closeNewConnexionToDeep();
			}

		}
	}

	public void jButtonid_tipo_depreciacion_empresaDetalleActivoFijoBusquedaActionPerformed(java.awt.event.ActionEvent evt) throws Exception {
		try {

				if(Constantes.ISUSAEJBLOGICLAYER) {
					this.detalleactivofijoLogic.getNewConnexionToDeep("");
				}

				//TOCA TRAER NUEVAMENTE, YA QUE SE PIERDE REGISTRO ACTUAL
				int intSelectedRow = this.jTableDatosDetalleActivoFijo.getSelectedRow();

				if(intSelectedRow>-1) {
					this.setVariablesFormularioToObjetoActualDetalleActivoFijo(this.getdetalleactivofijo(),true);
					this.setVariablesFormularioToObjetoActualForeignKeysDetalleActivoFijo(this.detalleactivofijo);
					//ARCHITECTURE
					/*
					if(Constantes.ISUSAEJBLOGICLAYER) {
						this.detalleactivofijo =(DetalleActivoFijo) this.detalleactivofijoLogic.getDetalleActivoFijos().toArray()[this.jTableDatosDetalleActivoFijo.convertRowIndexToModel(intSelectedRow)];
					} else if(Constantes.ISUSAEJBREMOTE || Constantes.ISUSAEJBHOME) {
						this.detalleactivofijo =(DetalleActivoFijo) this.detalleactivofijos.toArray()[this.jTableDatosDetalleActivoFijo.convertRowIndexToModel(intSelectedRow)];
					}
					*/
					//ARCHITECTURE

				} else {
					if(this.detalleactivofijo==null) {
						this.detalleactivofijo = new DetalleActivoFijo();
					}

					this.setVariablesFormularioToObjetoActualDetalleActivoFijo(this.detalleactivofijo,true);
					this.setVariablesFormularioToObjetoActualForeignKeysDetalleActivoFijo(this.detalleactivofijo);
				}

				if(this.detalleactivofijo.getid_tipo_depreciacion_empresa()!=null) {

					this.sAccionBusqueda="Query";

					this.sFinalQueryGeneral=" where id_tipo_depreciacion_empresa = "+this.detalleactivofijo.getid_tipo_depreciacion_empresa().toString()+" ";

					if(Constantes.ISDEVELOPING) {
						System.out.println(this.sFinalQueryGeneral);
					}

					this.procesarBusqueda(this.sAccionBusqueda);

					this.inicializarActualizarBindingDetalleActivoFijo(false);
				}

				if(Constantes.ISUSAEJBLOGICLAYER) {
					this.detalleactivofijoLogic.commitNewConnexionToDeep();
				}

			} catch(Exception e) {

				if(Constantes.ISUSAEJBLOGICLAYER) {
					this.detalleactivofijoLogic.rollbackNewConnexionToDeep();
				}

				FuncionesSwing.manageException(this, e,logger,DetalleActivoFijoConstantesFunciones.CLASSNAME);

			} finally {
				if(Constantes.ISUSAEJBLOGICLAYER) {
					this.detalleactivofijoLogic.closeNewConnexionToDeep();
				}

			}
		}

	public void jButtonid_estado_activo_fijoDetalleActivoFijoUpdateActionPerformed(java.awt.event.ActionEvent evt) throws Exception {
		try {

			if(Constantes.ISUSAEJBLOGICLAYER) {
				this.detalleactivofijoLogic.getNewConnexionToDeep("");
			}

			Boolean idTienePermisoestadoactivofijo=true;

			idTienePermisoestadoactivofijo=this.tienePermisosUsuarioEnPaginaWebDetalleActivoFijo(EstadoActivoFijoConstantesFunciones.CLASSNAME);

			if(idTienePermisoestadoactivofijo) {
				//TOCA TRAER NUEVAMENTE, YA QUE SE PIERDE REGISTRO ACTUAL
				int intSelectedRow = this.jTableDatosDetalleActivoFijo.getSelectedRow();

				if(intSelectedRow<0 && this.jTableDatosDetalleActivoFijo.getRowCount()>0) {
					intSelectedRow =0;
					this.jTableDatosDetalleActivoFijo.setRowSelectionInterval(intSelectedRow,intSelectedRow);
				}
				//ARCHITECTURE
				/*
				if(Constantes.ISUSAEJBLOGICLAYER) {
					this.detalleactivofijo =(DetalleActivoFijo) this.detalleactivofijoLogic.getDetalleActivoFijos().toArray()[this.jTableDatosDetalleActivoFijo.convertRowIndexToModel(intSelectedRow)];
				} else if(Constantes.ISUSAEJBREMOTE || Constantes.ISUSAEJBHOME) {
					this.detalleactivofijo =(DetalleActivoFijo) this.detalleactivofijos.toArray()[this.jTableDatosDetalleActivoFijo.convertRowIndexToModel(intSelectedRow)];
				}
				*/
				//ARCHITECTURE

				this.setVariablesFormularioToObjetoActualDetalleActivoFijo(this.getdetalleactivofijo(),true);
				this.setVariablesFormularioToObjetoActualForeignKeysDetalleActivoFijo(this.detalleactivofijo);

				this.estadoactivofijoBeanSwingJInternalFrame=new EstadoActivoFijoBeanSwingJInternalFrame(true,true,this.jDesktopPane,this.usuarioActual,this.resumenUsuarioActual,this.moduloActual,this.opcionActual,this.parametroGeneralSg,this.parametroGeneralUsuario,PaginaTipo.AUXILIAR,false,false,false,true);
				this.estadoactivofijoBeanSwingJInternalFrame.setJInternalFrameParent(this);

				this.estadoactivofijoBeanSwingJInternalFrame.getEstadoActivoFijoLogic().setConnexion(this.detalleactivofijoLogic.getConnexion());

				if(this.detalleactivofijo.getid_estado_activo_fijo()!=null) {
					this.estadoactivofijoBeanSwingJInternalFrame.sTipoBusqueda="PorId";
					this.estadoactivofijoBeanSwingJInternalFrame.setIdActual(this.detalleactivofijo.getid_estado_activo_fijo());
					this.estadoactivofijoBeanSwingJInternalFrame.procesarBusqueda("PorId");
					this.estadoactivofijoBeanSwingJInternalFrame.setsAccionBusqueda("PorId");
					this.estadoactivofijoBeanSwingJInternalFrame.inicializarActualizarBindingTablaEstadoActivoFijo();
				}

				JInternalFrameBase jinternalFrame =this.estadoactivofijoBeanSwingJInternalFrame;
				jinternalFrame.setAutoscrolls(true);
				//frame.setSize(screenSize.width-inset*7 , screenSize.height-inset*9);
				jinternalFrame.setVisible(true); 


				TitledBorder titledBorderDetalleActivoFijo=(TitledBorder)this.jScrollPanelDatosDetalleActivoFijo.getBorder();
				TitledBorder titledBorderestadoactivofijo=(TitledBorder)this.estadoactivofijoBeanSwingJInternalFrame.jScrollPanelDatosEstadoActivoFijo.getBorder();

				titledBorderestadoactivofijo.setTitle(titledBorderDetalleActivoFijo.getTitle() + " -> Estado Activo Fijo");


				if(!Constantes.CON_VARIAS_VENTANAS) {
					MainJFrame.cerrarJInternalFramesExistentes(this.jDesktopPane,jinternalFrame);
				}

				this.jDesktopPane.add(jinternalFrame);

				jinternalFrame.setSelected(true);
			} else {
				throw new Exception("NO TIENE PERMISO PARA TRABAJAR CON ESTA INFORMACION");
			}

			if(Constantes.ISUSAEJBLOGICLAYER) {
				this.detalleactivofijoLogic.commitNewConnexionToDeep();
			}


		} catch(Exception e) {

			if(Constantes.ISUSAEJBLOGICLAYER) {
				this.detalleactivofijoLogic.rollbackNewConnexionToDeep();
			}

			FuncionesSwing.manageException(this, e,logger,DetalleActivoFijoConstantesFunciones.CLASSNAME);

		} finally {
			if(Constantes.ISUSAEJBLOGICLAYER) {
				this.detalleactivofijoLogic.closeNewConnexionToDeep();
			}

		}
	}

	public void jButtonid_estado_activo_fijoDetalleActivoFijoBusquedaActionPerformed(java.awt.event.ActionEvent evt) throws Exception {
		try {

				if(Constantes.ISUSAEJBLOGICLAYER) {
					this.detalleactivofijoLogic.getNewConnexionToDeep("");
				}

				//TOCA TRAER NUEVAMENTE, YA QUE SE PIERDE REGISTRO ACTUAL
				int intSelectedRow = this.jTableDatosDetalleActivoFijo.getSelectedRow();

				if(intSelectedRow>-1) {
					this.setVariablesFormularioToObjetoActualDetalleActivoFijo(this.getdetalleactivofijo(),true);
					this.setVariablesFormularioToObjetoActualForeignKeysDetalleActivoFijo(this.detalleactivofijo);
					//ARCHITECTURE
					/*
					if(Constantes.ISUSAEJBLOGICLAYER) {
						this.detalleactivofijo =(DetalleActivoFijo) this.detalleactivofijoLogic.getDetalleActivoFijos().toArray()[this.jTableDatosDetalleActivoFijo.convertRowIndexToModel(intSelectedRow)];
					} else if(Constantes.ISUSAEJBREMOTE || Constantes.ISUSAEJBHOME) {
						this.detalleactivofijo =(DetalleActivoFijo) this.detalleactivofijos.toArray()[this.jTableDatosDetalleActivoFijo.convertRowIndexToModel(intSelectedRow)];
					}
					*/
					//ARCHITECTURE

				} else {
					if(this.detalleactivofijo==null) {
						this.detalleactivofijo = new DetalleActivoFijo();
					}

					this.setVariablesFormularioToObjetoActualDetalleActivoFijo(this.detalleactivofijo,true);
					this.setVariablesFormularioToObjetoActualForeignKeysDetalleActivoFijo(this.detalleactivofijo);
				}

				if(this.detalleactivofijo.getid_estado_activo_fijo()!=null) {

					this.sAccionBusqueda="Query";

					this.sFinalQueryGeneral=" where id_estado_activo_fijo = "+this.detalleactivofijo.getid_estado_activo_fijo().toString()+" ";

					if(Constantes.ISDEVELOPING) {
						System.out.println(this.sFinalQueryGeneral);
					}

					this.procesarBusqueda(this.sAccionBusqueda);

					this.inicializarActualizarBindingDetalleActivoFijo(false);
				}

				if(Constantes.ISUSAEJBLOGICLAYER) {
					this.detalleactivofijoLogic.commitNewConnexionToDeep();
				}

			} catch(Exception e) {

				if(Constantes.ISUSAEJBLOGICLAYER) {
					this.detalleactivofijoLogic.rollbackNewConnexionToDeep();
				}

				FuncionesSwing.manageException(this, e,logger,DetalleActivoFijoConstantesFunciones.CLASSNAME);

			} finally {
				if(Constantes.ISUSAEJBLOGICLAYER) {
					this.detalleactivofijoLogic.closeNewConnexionToDeep();
				}

			}
		}

	public void jButtonid_clienteDetalleActivoFijoActionPerformed(java.awt.event.ActionEvent evt) throws Exception {
		try {
			this.clienteBeanSwingJInternalFrame=new ClienteBeanSwingJInternalFrame(true,true,this.jDesktopPane,this.usuarioActual,this.resumenUsuarioActual,this.moduloActual,this.opcionActual,this.parametroGeneralSg,this.parametroGeneralUsuario,PaginaTipo.BUSQUEDA,false,false,false,true);
			this.clienteBeanSwingJInternalFrame.setJInternalFrameParent(this);
			this.clienteBeanSwingJInternalFrame.sTipoBusqueda="Cliente";

			if(!this.sFinalQueryGeneral_cliente.equals("")) {
				this.clienteBeanSwingJInternalFrame.setsFinalQueryGeneral(this.sFinalQueryGeneral_cliente);
				this.clienteBeanSwingJInternalFrame.sAccionBusqueda="Query";


				this.clienteBeanSwingJInternalFrame.procesarBusqueda(this.clienteBeanSwingJInternalFrame.sAccionBusqueda);
				this.clienteBeanSwingJInternalFrame.inicializarActualizarBindingCliente(false);
			}

			if(!this.sFinalQueryComboCliente.equals("") && false) {
			}


			JInternalFrameBase jinternalFrame =this.clienteBeanSwingJInternalFrame;
			jinternalFrame.setAutoscrolls(true);
			//frame.setSize(screenSize.width-inset*7 , screenSize.height-inset*9);
			jinternalFrame.setVisible(true); 


			TitledBorder titledBorderDetalleActivoFijo=null;
			TitledBorder titledBordercliente=null;

			if(!this.jScrollPanelDatosDetalleActivoFijo.getBorder().getClass().equals(EmptyBorder.class)) {
				titledBorderDetalleActivoFijo=(TitledBorder)this.jScrollPanelDatosDetalleActivoFijo.getBorder();
				titledBordercliente=(TitledBorder)this.clienteBeanSwingJInternalFrame.jScrollPanelDatosCliente.getBorder();

				titledBordercliente.setTitle(titledBorderDetalleActivoFijo.getTitle() + " -> Cliente");
			}

			if(!Constantes.CON_VARIAS_VENTANAS) {
				MainJFrame.cerrarJInternalFramesExistentes(this.jDesktopPane,jinternalFrame);
			}

			this.jDesktopPane.add(jinternalFrame);

			jinternalFrame.setSelected(true);

		} catch(Exception e) {
			FuncionesSwing.manageException(this, e,logger,DetalleActivoFijoConstantesFunciones.CLASSNAME);
		}
	}

	public void jButtonid_clienteDetalleActivoFijoUpdateActionPerformed(java.awt.event.ActionEvent evt) throws Exception {
		try {

			if(Constantes.ISUSAEJBLOGICLAYER) {
				this.detalleactivofijoLogic.getNewConnexionToDeep("");
			}

			Boolean idTienePermisocliente=true;

			idTienePermisocliente=this.tienePermisosUsuarioEnPaginaWebDetalleActivoFijo(ClienteConstantesFunciones.CLASSNAME);

			if(idTienePermisocliente) {
				//TOCA TRAER NUEVAMENTE, YA QUE SE PIERDE REGISTRO ACTUAL
				int intSelectedRow = this.jTableDatosDetalleActivoFijo.getSelectedRow();

				if(intSelectedRow<0 && this.jTableDatosDetalleActivoFijo.getRowCount()>0) {
					intSelectedRow =0;
					this.jTableDatosDetalleActivoFijo.setRowSelectionInterval(intSelectedRow,intSelectedRow);
				}
				//ARCHITECTURE
				/*
				if(Constantes.ISUSAEJBLOGICLAYER) {
					this.detalleactivofijo =(DetalleActivoFijo) this.detalleactivofijoLogic.getDetalleActivoFijos().toArray()[this.jTableDatosDetalleActivoFijo.convertRowIndexToModel(intSelectedRow)];
				} else if(Constantes.ISUSAEJBREMOTE || Constantes.ISUSAEJBHOME) {
					this.detalleactivofijo =(DetalleActivoFijo) this.detalleactivofijos.toArray()[this.jTableDatosDetalleActivoFijo.convertRowIndexToModel(intSelectedRow)];
				}
				*/
				//ARCHITECTURE

				this.setVariablesFormularioToObjetoActualDetalleActivoFijo(this.getdetalleactivofijo(),true);
				this.setVariablesFormularioToObjetoActualForeignKeysDetalleActivoFijo(this.detalleactivofijo);

				this.clienteBeanSwingJInternalFrame=new ClienteBeanSwingJInternalFrame(true,true,this.jDesktopPane,this.usuarioActual,this.resumenUsuarioActual,this.moduloActual,this.opcionActual,this.parametroGeneralSg,this.parametroGeneralUsuario,PaginaTipo.AUXILIAR,false,false,false,true);
				this.clienteBeanSwingJInternalFrame.setJInternalFrameParent(this);

				this.clienteBeanSwingJInternalFrame.getClienteLogic().setConnexion(this.detalleactivofijoLogic.getConnexion());

				if(this.detalleactivofijo.getid_cliente()!=null) {
					this.clienteBeanSwingJInternalFrame.sTipoBusqueda="PorId";
					this.clienteBeanSwingJInternalFrame.setIdActual(this.detalleactivofijo.getid_cliente());
					this.clienteBeanSwingJInternalFrame.procesarBusqueda("PorId");
					this.clienteBeanSwingJInternalFrame.setsAccionBusqueda("PorId");
					this.clienteBeanSwingJInternalFrame.inicializarActualizarBindingTablaCliente();
				}

				JInternalFrameBase jinternalFrame =this.clienteBeanSwingJInternalFrame;
				jinternalFrame.setAutoscrolls(true);
				//frame.setSize(screenSize.width-inset*7 , screenSize.height-inset*9);
				jinternalFrame.setVisible(true); 


				TitledBorder titledBorderDetalleActivoFijo=(TitledBorder)this.jScrollPanelDatosDetalleActivoFijo.getBorder();
				TitledBorder titledBordercliente=(TitledBorder)this.clienteBeanSwingJInternalFrame.jScrollPanelDatosCliente.getBorder();

				titledBordercliente.setTitle(titledBorderDetalleActivoFijo.getTitle() + " -> Cliente");


				if(!Constantes.CON_VARIAS_VENTANAS) {
					MainJFrame.cerrarJInternalFramesExistentes(this.jDesktopPane,jinternalFrame);
				}

				this.jDesktopPane.add(jinternalFrame);

				jinternalFrame.setSelected(true);
			} else {
				throw new Exception("NO TIENE PERMISO PARA TRABAJAR CON ESTA INFORMACION");
			}

			if(Constantes.ISUSAEJBLOGICLAYER) {
				this.detalleactivofijoLogic.commitNewConnexionToDeep();
			}


		} catch(Exception e) {

			if(Constantes.ISUSAEJBLOGICLAYER) {
				this.detalleactivofijoLogic.rollbackNewConnexionToDeep();
			}

			FuncionesSwing.manageException(this, e,logger,DetalleActivoFijoConstantesFunciones.CLASSNAME);

		} finally {
			if(Constantes.ISUSAEJBLOGICLAYER) {
				this.detalleactivofijoLogic.closeNewConnexionToDeep();
			}

		}
	}

	public void jButtonid_clienteDetalleActivoFijoBusquedaActionPerformed(java.awt.event.ActionEvent evt) throws Exception {
		try {

				if(Constantes.ISUSAEJBLOGICLAYER) {
					this.detalleactivofijoLogic.getNewConnexionToDeep("");
				}

				//TOCA TRAER NUEVAMENTE, YA QUE SE PIERDE REGISTRO ACTUAL
				int intSelectedRow = this.jTableDatosDetalleActivoFijo.getSelectedRow();

				if(intSelectedRow>-1) {
					this.setVariablesFormularioToObjetoActualDetalleActivoFijo(this.getdetalleactivofijo(),true);
					this.setVariablesFormularioToObjetoActualForeignKeysDetalleActivoFijo(this.detalleactivofijo);
					//ARCHITECTURE
					/*
					if(Constantes.ISUSAEJBLOGICLAYER) {
						this.detalleactivofijo =(DetalleActivoFijo) this.detalleactivofijoLogic.getDetalleActivoFijos().toArray()[this.jTableDatosDetalleActivoFijo.convertRowIndexToModel(intSelectedRow)];
					} else if(Constantes.ISUSAEJBREMOTE || Constantes.ISUSAEJBHOME) {
						this.detalleactivofijo =(DetalleActivoFijo) this.detalleactivofijos.toArray()[this.jTableDatosDetalleActivoFijo.convertRowIndexToModel(intSelectedRow)];
					}
					*/
					//ARCHITECTURE

				} else {
					if(this.detalleactivofijo==null) {
						this.detalleactivofijo = new DetalleActivoFijo();
					}

					this.setVariablesFormularioToObjetoActualDetalleActivoFijo(this.detalleactivofijo,true);
					this.setVariablesFormularioToObjetoActualForeignKeysDetalleActivoFijo(this.detalleactivofijo);
				}

				if(this.detalleactivofijo.getid_cliente()!=null) {

					this.sAccionBusqueda="Query";

					this.sFinalQueryGeneral=" where id_cliente = "+this.detalleactivofijo.getid_cliente().toString()+" ";

					if(Constantes.ISDEVELOPING) {
						System.out.println(this.sFinalQueryGeneral);
					}

					this.procesarBusqueda(this.sAccionBusqueda);

					this.inicializarActualizarBindingDetalleActivoFijo(false);
				}

				if(Constantes.ISUSAEJBLOGICLAYER) {
					this.detalleactivofijoLogic.commitNewConnexionToDeep();
				}

			} catch(Exception e) {

				if(Constantes.ISUSAEJBLOGICLAYER) {
					this.detalleactivofijoLogic.rollbackNewConnexionToDeep();
				}

				FuncionesSwing.manageException(this, e,logger,DetalleActivoFijoConstantesFunciones.CLASSNAME);

			} finally {
				if(Constantes.ISUSAEJBLOGICLAYER) {
					this.detalleactivofijoLogic.closeNewConnexionToDeep();
				}

			}
		}

	public void jButtonid_partida_presuDetalleActivoFijoUpdateActionPerformed(java.awt.event.ActionEvent evt) throws Exception {
		try {

			if(Constantes.ISUSAEJBLOGICLAYER) {
				this.detalleactivofijoLogic.getNewConnexionToDeep("");
			}

			Boolean idTienePermisopartidapresu=true;

			idTienePermisopartidapresu=this.tienePermisosUsuarioEnPaginaWebDetalleActivoFijo(PartidaPresuConstantesFunciones.CLASSNAME);

			if(idTienePermisopartidapresu) {
				//TOCA TRAER NUEVAMENTE, YA QUE SE PIERDE REGISTRO ACTUAL
				int intSelectedRow = this.jTableDatosDetalleActivoFijo.getSelectedRow();

				if(intSelectedRow<0 && this.jTableDatosDetalleActivoFijo.getRowCount()>0) {
					intSelectedRow =0;
					this.jTableDatosDetalleActivoFijo.setRowSelectionInterval(intSelectedRow,intSelectedRow);
				}
				//ARCHITECTURE
				/*
				if(Constantes.ISUSAEJBLOGICLAYER) {
					this.detalleactivofijo =(DetalleActivoFijo) this.detalleactivofijoLogic.getDetalleActivoFijos().toArray()[this.jTableDatosDetalleActivoFijo.convertRowIndexToModel(intSelectedRow)];
				} else if(Constantes.ISUSAEJBREMOTE || Constantes.ISUSAEJBHOME) {
					this.detalleactivofijo =(DetalleActivoFijo) this.detalleactivofijos.toArray()[this.jTableDatosDetalleActivoFijo.convertRowIndexToModel(intSelectedRow)];
				}
				*/
				//ARCHITECTURE

				this.setVariablesFormularioToObjetoActualDetalleActivoFijo(this.getdetalleactivofijo(),true);
				this.setVariablesFormularioToObjetoActualForeignKeysDetalleActivoFijo(this.detalleactivofijo);

				this.partidapresuBeanSwingJInternalFrame=new PartidaPresuBeanSwingJInternalFrame(true,true,this.jDesktopPane,this.usuarioActual,this.resumenUsuarioActual,this.moduloActual,this.opcionActual,this.parametroGeneralSg,this.parametroGeneralUsuario,PaginaTipo.AUXILIAR,false,false,false,true);
				this.partidapresuBeanSwingJInternalFrame.setJInternalFrameParent(this);

				this.partidapresuBeanSwingJInternalFrame.getPartidaPresuLogic().setConnexion(this.detalleactivofijoLogic.getConnexion());

				if(this.detalleactivofijo.getid_partida_presu()!=null) {
					this.partidapresuBeanSwingJInternalFrame.sTipoBusqueda="PorId";
					this.partidapresuBeanSwingJInternalFrame.setIdActual(this.detalleactivofijo.getid_partida_presu());
					this.partidapresuBeanSwingJInternalFrame.procesarBusqueda("PorId");
					this.partidapresuBeanSwingJInternalFrame.setsAccionBusqueda("PorId");
					this.partidapresuBeanSwingJInternalFrame.inicializarActualizarBindingTablaPartidaPresu();
				}

				JInternalFrameBase jinternalFrame =this.partidapresuBeanSwingJInternalFrame;
				jinternalFrame.setAutoscrolls(true);
				//frame.setSize(screenSize.width-inset*7 , screenSize.height-inset*9);
				jinternalFrame.setVisible(true); 


				TitledBorder titledBorderDetalleActivoFijo=(TitledBorder)this.jScrollPanelDatosDetalleActivoFijo.getBorder();
				TitledBorder titledBorderpartidapresu=(TitledBorder)this.partidapresuBeanSwingJInternalFrame.jScrollPanelDatosPartidaPresu.getBorder();

				titledBorderpartidapresu.setTitle(titledBorderDetalleActivoFijo.getTitle() + " -> Partida Presupuestaria");


				if(!Constantes.CON_VARIAS_VENTANAS) {
					MainJFrame.cerrarJInternalFramesExistentes(this.jDesktopPane,jinternalFrame);
				}

				this.jDesktopPane.add(jinternalFrame);

				jinternalFrame.setSelected(true);
			} else {
				throw new Exception("NO TIENE PERMISO PARA TRABAJAR CON ESTA INFORMACION");
			}

			if(Constantes.ISUSAEJBLOGICLAYER) {
				this.detalleactivofijoLogic.commitNewConnexionToDeep();
			}


		} catch(Exception e) {

			if(Constantes.ISUSAEJBLOGICLAYER) {
				this.detalleactivofijoLogic.rollbackNewConnexionToDeep();
			}

			FuncionesSwing.manageException(this, e,logger,DetalleActivoFijoConstantesFunciones.CLASSNAME);

		} finally {
			if(Constantes.ISUSAEJBLOGICLAYER) {
				this.detalleactivofijoLogic.closeNewConnexionToDeep();
			}

		}
	}

	public void jButtonid_partida_presuDetalleActivoFijoBusquedaActionPerformed(java.awt.event.ActionEvent evt) throws Exception {
		try {

				if(Constantes.ISUSAEJBLOGICLAYER) {
					this.detalleactivofijoLogic.getNewConnexionToDeep("");
				}

				//TOCA TRAER NUEVAMENTE, YA QUE SE PIERDE REGISTRO ACTUAL
				int intSelectedRow = this.jTableDatosDetalleActivoFijo.getSelectedRow();

				if(intSelectedRow>-1) {
					this.setVariablesFormularioToObjetoActualDetalleActivoFijo(this.getdetalleactivofijo(),true);
					this.setVariablesFormularioToObjetoActualForeignKeysDetalleActivoFijo(this.detalleactivofijo);
					//ARCHITECTURE
					/*
					if(Constantes.ISUSAEJBLOGICLAYER) {
						this.detalleactivofijo =(DetalleActivoFijo) this.detalleactivofijoLogic.getDetalleActivoFijos().toArray()[this.jTableDatosDetalleActivoFijo.convertRowIndexToModel(intSelectedRow)];
					} else if(Constantes.ISUSAEJBREMOTE || Constantes.ISUSAEJBHOME) {
						this.detalleactivofijo =(DetalleActivoFijo) this.detalleactivofijos.toArray()[this.jTableDatosDetalleActivoFijo.convertRowIndexToModel(intSelectedRow)];
					}
					*/
					//ARCHITECTURE

				} else {
					if(this.detalleactivofijo==null) {
						this.detalleactivofijo = new DetalleActivoFijo();
					}

					this.setVariablesFormularioToObjetoActualDetalleActivoFijo(this.detalleactivofijo,true);
					this.setVariablesFormularioToObjetoActualForeignKeysDetalleActivoFijo(this.detalleactivofijo);
				}

				if(this.detalleactivofijo.getid_partida_presu()!=null) {

					this.sAccionBusqueda="Query";

					this.sFinalQueryGeneral=" where id_partida_presu = "+this.detalleactivofijo.getid_partida_presu().toString()+" ";

					if(Constantes.ISDEVELOPING) {
						System.out.println(this.sFinalQueryGeneral);
					}

					this.procesarBusqueda(this.sAccionBusqueda);

					this.inicializarActualizarBindingDetalleActivoFijo(false);
				}

				if(Constantes.ISUSAEJBLOGICLAYER) {
					this.detalleactivofijoLogic.commitNewConnexionToDeep();
				}

			} catch(Exception e) {

				if(Constantes.ISUSAEJBLOGICLAYER) {
					this.detalleactivofijoLogic.rollbackNewConnexionToDeep();
				}

				FuncionesSwing.manageException(this, e,logger,DetalleActivoFijoConstantesFunciones.CLASSNAME);

			} finally {
				if(Constantes.ISUSAEJBLOGICLAYER) {
					this.detalleactivofijoLogic.closeNewConnexionToDeep();
				}

			}
		}

	public void jButtoncodigoDetalleActivoFijoBusquedaActionPerformed(java.awt.event.ActionEvent evt) throws Exception {
		try {

				if(Constantes.ISUSAEJBLOGICLAYER) {
					this.detalleactivofijoLogic.getNewConnexionToDeep("");
				}

				//TOCA TRAER NUEVAMENTE, YA QUE SE PIERDE REGISTRO ACTUAL
				int intSelectedRow = this.jTableDatosDetalleActivoFijo.getSelectedRow();

				if(intSelectedRow>-1) {
					this.setVariablesFormularioToObjetoActualDetalleActivoFijo(this.getdetalleactivofijo(),true);
					this.setVariablesFormularioToObjetoActualForeignKeysDetalleActivoFijo(this.detalleactivofijo);
					//ARCHITECTURE
					/*
					if(Constantes.ISUSAEJBLOGICLAYER) {
						this.detalleactivofijo =(DetalleActivoFijo) this.detalleactivofijoLogic.getDetalleActivoFijos().toArray()[this.jTableDatosDetalleActivoFijo.convertRowIndexToModel(intSelectedRow)];
					} else if(Constantes.ISUSAEJBREMOTE || Constantes.ISUSAEJBHOME) {
						this.detalleactivofijo =(DetalleActivoFijo) this.detalleactivofijos.toArray()[this.jTableDatosDetalleActivoFijo.convertRowIndexToModel(intSelectedRow)];
					}
					*/
					//ARCHITECTURE

				} else {
					if(this.detalleactivofijo==null) {
						this.detalleactivofijo = new DetalleActivoFijo();
					}

					this.setVariablesFormularioToObjetoActualDetalleActivoFijo(this.detalleactivofijo,true);
					this.setVariablesFormularioToObjetoActualForeignKeysDetalleActivoFijo(this.detalleactivofijo);
				}

				if(this.detalleactivofijo.getcodigo()!=null) {

					this.sAccionBusqueda="Query";

					this.sFinalQueryGeneral=" where codigo like '%"+this.detalleactivofijo.getcodigo()+"%' ";

					if(Constantes.ISDEVELOPING) {
						System.out.println(this.sFinalQueryGeneral);
					}

					this.procesarBusqueda(this.sAccionBusqueda);

					this.inicializarActualizarBindingDetalleActivoFijo(false);
				}

				if(Constantes.ISUSAEJBLOGICLAYER) {
					this.detalleactivofijoLogic.commitNewConnexionToDeep();
				}

			} catch(Exception e) {

				if(Constantes.ISUSAEJBLOGICLAYER) {
					this.detalleactivofijoLogic.rollbackNewConnexionToDeep();
				}

				FuncionesSwing.manageException(this, e,logger,DetalleActivoFijoConstantesFunciones.CLASSNAME);

			} finally {
				if(Constantes.ISUSAEJBLOGICLAYER) {
					this.detalleactivofijoLogic.closeNewConnexionToDeep();
				}

			}
		}

	public void jButtonnombreDetalleActivoFijoBusquedaActionPerformed(java.awt.event.ActionEvent evt) throws Exception {
		try {

				if(Constantes.ISUSAEJBLOGICLAYER) {
					this.detalleactivofijoLogic.getNewConnexionToDeep("");
				}

				//TOCA TRAER NUEVAMENTE, YA QUE SE PIERDE REGISTRO ACTUAL
				int intSelectedRow = this.jTableDatosDetalleActivoFijo.getSelectedRow();

				if(intSelectedRow>-1) {
					this.setVariablesFormularioToObjetoActualDetalleActivoFijo(this.getdetalleactivofijo(),true);
					this.setVariablesFormularioToObjetoActualForeignKeysDetalleActivoFijo(this.detalleactivofijo);
					//ARCHITECTURE
					/*
					if(Constantes.ISUSAEJBLOGICLAYER) {
						this.detalleactivofijo =(DetalleActivoFijo) this.detalleactivofijoLogic.getDetalleActivoFijos().toArray()[this.jTableDatosDetalleActivoFijo.convertRowIndexToModel(intSelectedRow)];
					} else if(Constantes.ISUSAEJBREMOTE || Constantes.ISUSAEJBHOME) {
						this.detalleactivofijo =(DetalleActivoFijo) this.detalleactivofijos.toArray()[this.jTableDatosDetalleActivoFijo.convertRowIndexToModel(intSelectedRow)];
					}
					*/
					//ARCHITECTURE

				} else {
					if(this.detalleactivofijo==null) {
						this.detalleactivofijo = new DetalleActivoFijo();
					}

					this.setVariablesFormularioToObjetoActualDetalleActivoFijo(this.detalleactivofijo,true);
					this.setVariablesFormularioToObjetoActualForeignKeysDetalleActivoFijo(this.detalleactivofijo);
				}

				if(this.detalleactivofijo.getnombre()!=null) {

					this.sAccionBusqueda="Query";

					this.sFinalQueryGeneral=" where nombre like '%"+this.detalleactivofijo.getnombre()+"%' ";

					if(Constantes.ISDEVELOPING) {
						System.out.println(this.sFinalQueryGeneral);
					}

					this.procesarBusqueda(this.sAccionBusqueda);

					this.inicializarActualizarBindingDetalleActivoFijo(false);
				}

				if(Constantes.ISUSAEJBLOGICLAYER) {
					this.detalleactivofijoLogic.commitNewConnexionToDeep();
				}

			} catch(Exception e) {

				if(Constantes.ISUSAEJBLOGICLAYER) {
					this.detalleactivofijoLogic.rollbackNewConnexionToDeep();
				}

				FuncionesSwing.manageException(this, e,logger,DetalleActivoFijoConstantesFunciones.CLASSNAME);

			} finally {
				if(Constantes.ISUSAEJBLOGICLAYER) {
					this.detalleactivofijoLogic.closeNewConnexionToDeep();
				}

			}
		}

	public void jButtonserieDetalleActivoFijoBusquedaActionPerformed(java.awt.event.ActionEvent evt) throws Exception {
		try {

				if(Constantes.ISUSAEJBLOGICLAYER) {
					this.detalleactivofijoLogic.getNewConnexionToDeep("");
				}

				//TOCA TRAER NUEVAMENTE, YA QUE SE PIERDE REGISTRO ACTUAL
				int intSelectedRow = this.jTableDatosDetalleActivoFijo.getSelectedRow();

				if(intSelectedRow>-1) {
					this.setVariablesFormularioToObjetoActualDetalleActivoFijo(this.getdetalleactivofijo(),true);
					this.setVariablesFormularioToObjetoActualForeignKeysDetalleActivoFijo(this.detalleactivofijo);
					//ARCHITECTURE
					/*
					if(Constantes.ISUSAEJBLOGICLAYER) {
						this.detalleactivofijo =(DetalleActivoFijo) this.detalleactivofijoLogic.getDetalleActivoFijos().toArray()[this.jTableDatosDetalleActivoFijo.convertRowIndexToModel(intSelectedRow)];
					} else if(Constantes.ISUSAEJBREMOTE || Constantes.ISUSAEJBHOME) {
						this.detalleactivofijo =(DetalleActivoFijo) this.detalleactivofijos.toArray()[this.jTableDatosDetalleActivoFijo.convertRowIndexToModel(intSelectedRow)];
					}
					*/
					//ARCHITECTURE

				} else {
					if(this.detalleactivofijo==null) {
						this.detalleactivofijo = new DetalleActivoFijo();
					}

					this.setVariablesFormularioToObjetoActualDetalleActivoFijo(this.detalleactivofijo,true);
					this.setVariablesFormularioToObjetoActualForeignKeysDetalleActivoFijo(this.detalleactivofijo);
				}

				if(this.detalleactivofijo.getserie()!=null) {

					this.sAccionBusqueda="Query";

					this.sFinalQueryGeneral=" where serie like '%"+this.detalleactivofijo.getserie()+"%' ";

					if(Constantes.ISDEVELOPING) {
						System.out.println(this.sFinalQueryGeneral);
					}

					this.procesarBusqueda(this.sAccionBusqueda);

					this.inicializarActualizarBindingDetalleActivoFijo(false);
				}

				if(Constantes.ISUSAEJBLOGICLAYER) {
					this.detalleactivofijoLogic.commitNewConnexionToDeep();
				}

			} catch(Exception e) {

				if(Constantes.ISUSAEJBLOGICLAYER) {
					this.detalleactivofijoLogic.rollbackNewConnexionToDeep();
				}

				FuncionesSwing.manageException(this, e,logger,DetalleActivoFijoConstantesFunciones.CLASSNAME);

			} finally {
				if(Constantes.ISUSAEJBLOGICLAYER) {
					this.detalleactivofijoLogic.closeNewConnexionToDeep();
				}

			}
		}

	public void jButtonfecha_compraDetalleActivoFijoBusquedaActionPerformed(java.awt.event.ActionEvent evt) throws Exception {
		try {

				if(Constantes.ISUSAEJBLOGICLAYER) {
					this.detalleactivofijoLogic.getNewConnexionToDeep("");
				}

				//TOCA TRAER NUEVAMENTE, YA QUE SE PIERDE REGISTRO ACTUAL
				int intSelectedRow = this.jTableDatosDetalleActivoFijo.getSelectedRow();

				if(intSelectedRow>-1) {
					this.setVariablesFormularioToObjetoActualDetalleActivoFijo(this.getdetalleactivofijo(),true);
					this.setVariablesFormularioToObjetoActualForeignKeysDetalleActivoFijo(this.detalleactivofijo);
					//ARCHITECTURE
					/*
					if(Constantes.ISUSAEJBLOGICLAYER) {
						this.detalleactivofijo =(DetalleActivoFijo) this.detalleactivofijoLogic.getDetalleActivoFijos().toArray()[this.jTableDatosDetalleActivoFijo.convertRowIndexToModel(intSelectedRow)];
					} else if(Constantes.ISUSAEJBREMOTE || Constantes.ISUSAEJBHOME) {
						this.detalleactivofijo =(DetalleActivoFijo) this.detalleactivofijos.toArray()[this.jTableDatosDetalleActivoFijo.convertRowIndexToModel(intSelectedRow)];
					}
					*/
					//ARCHITECTURE

				} else {
					if(this.detalleactivofijo==null) {
						this.detalleactivofijo = new DetalleActivoFijo();
					}

					this.setVariablesFormularioToObjetoActualDetalleActivoFijo(this.detalleactivofijo,true);
					this.setVariablesFormularioToObjetoActualForeignKeysDetalleActivoFijo(this.detalleactivofijo);
				}

				if(this.detalleactivofijo.getfecha_compra()!=null) {

					this.sAccionBusqueda="Query";

					this.sFinalQueryGeneral=" where fecha_compra = '"+Funciones2.getStringPostgresDate(this.detalleactivofijo.getfecha_compra())+"' ";

					if(Constantes.ISDEVELOPING) {
						System.out.println(this.sFinalQueryGeneral);
					}

					this.procesarBusqueda(this.sAccionBusqueda);

					this.inicializarActualizarBindingDetalleActivoFijo(false);
				}

				if(Constantes.ISUSAEJBLOGICLAYER) {
					this.detalleactivofijoLogic.commitNewConnexionToDeep();
				}

			} catch(Exception e) {

				if(Constantes.ISUSAEJBLOGICLAYER) {
					this.detalleactivofijoLogic.rollbackNewConnexionToDeep();
				}

				FuncionesSwing.manageException(this, e,logger,DetalleActivoFijoConstantesFunciones.CLASSNAME);

			} finally {
				if(Constantes.ISUSAEJBLOGICLAYER) {
					this.detalleactivofijoLogic.closeNewConnexionToDeep();
				}

			}
		}

	public void jButtonfecha_mantenimientoDetalleActivoFijoBusquedaActionPerformed(java.awt.event.ActionEvent evt) throws Exception {
		try {

				if(Constantes.ISUSAEJBLOGICLAYER) {
					this.detalleactivofijoLogic.getNewConnexionToDeep("");
				}

				//TOCA TRAER NUEVAMENTE, YA QUE SE PIERDE REGISTRO ACTUAL
				int intSelectedRow = this.jTableDatosDetalleActivoFijo.getSelectedRow();

				if(intSelectedRow>-1) {
					this.setVariablesFormularioToObjetoActualDetalleActivoFijo(this.getdetalleactivofijo(),true);
					this.setVariablesFormularioToObjetoActualForeignKeysDetalleActivoFijo(this.detalleactivofijo);
					//ARCHITECTURE
					/*
					if(Constantes.ISUSAEJBLOGICLAYER) {
						this.detalleactivofijo =(DetalleActivoFijo) this.detalleactivofijoLogic.getDetalleActivoFijos().toArray()[this.jTableDatosDetalleActivoFijo.convertRowIndexToModel(intSelectedRow)];
					} else if(Constantes.ISUSAEJBREMOTE || Constantes.ISUSAEJBHOME) {
						this.detalleactivofijo =(DetalleActivoFijo) this.detalleactivofijos.toArray()[this.jTableDatosDetalleActivoFijo.convertRowIndexToModel(intSelectedRow)];
					}
					*/
					//ARCHITECTURE

				} else {
					if(this.detalleactivofijo==null) {
						this.detalleactivofijo = new DetalleActivoFijo();
					}

					this.setVariablesFormularioToObjetoActualDetalleActivoFijo(this.detalleactivofijo,true);
					this.setVariablesFormularioToObjetoActualForeignKeysDetalleActivoFijo(this.detalleactivofijo);
				}

				if(this.detalleactivofijo.getfecha_mantenimiento()!=null) {

					this.sAccionBusqueda="Query";

					this.sFinalQueryGeneral=" where fecha_mantenimiento = '"+Funciones2.getStringPostgresDate(this.detalleactivofijo.getfecha_mantenimiento())+"' ";

					if(Constantes.ISDEVELOPING) {
						System.out.println(this.sFinalQueryGeneral);
					}

					this.procesarBusqueda(this.sAccionBusqueda);

					this.inicializarActualizarBindingDetalleActivoFijo(false);
				}

				if(Constantes.ISUSAEJBLOGICLAYER) {
					this.detalleactivofijoLogic.commitNewConnexionToDeep();
				}

			} catch(Exception e) {

				if(Constantes.ISUSAEJBLOGICLAYER) {
					this.detalleactivofijoLogic.rollbackNewConnexionToDeep();
				}

				FuncionesSwing.manageException(this, e,logger,DetalleActivoFijoConstantesFunciones.CLASSNAME);

			} finally {
				if(Constantes.ISUSAEJBLOGICLAYER) {
					this.detalleactivofijoLogic.closeNewConnexionToDeep();
				}

			}
		}

	public void jButtonfecha_correccionDetalleActivoFijoBusquedaActionPerformed(java.awt.event.ActionEvent evt) throws Exception {
		try {

				if(Constantes.ISUSAEJBLOGICLAYER) {
					this.detalleactivofijoLogic.getNewConnexionToDeep("");
				}

				//TOCA TRAER NUEVAMENTE, YA QUE SE PIERDE REGISTRO ACTUAL
				int intSelectedRow = this.jTableDatosDetalleActivoFijo.getSelectedRow();

				if(intSelectedRow>-1) {
					this.setVariablesFormularioToObjetoActualDetalleActivoFijo(this.getdetalleactivofijo(),true);
					this.setVariablesFormularioToObjetoActualForeignKeysDetalleActivoFijo(this.detalleactivofijo);
					//ARCHITECTURE
					/*
					if(Constantes.ISUSAEJBLOGICLAYER) {
						this.detalleactivofijo =(DetalleActivoFijo) this.detalleactivofijoLogic.getDetalleActivoFijos().toArray()[this.jTableDatosDetalleActivoFijo.convertRowIndexToModel(intSelectedRow)];
					} else if(Constantes.ISUSAEJBREMOTE || Constantes.ISUSAEJBHOME) {
						this.detalleactivofijo =(DetalleActivoFijo) this.detalleactivofijos.toArray()[this.jTableDatosDetalleActivoFijo.convertRowIndexToModel(intSelectedRow)];
					}
					*/
					//ARCHITECTURE

				} else {
					if(this.detalleactivofijo==null) {
						this.detalleactivofijo = new DetalleActivoFijo();
					}

					this.setVariablesFormularioToObjetoActualDetalleActivoFijo(this.detalleactivofijo,true);
					this.setVariablesFormularioToObjetoActualForeignKeysDetalleActivoFijo(this.detalleactivofijo);
				}

				if(this.detalleactivofijo.getfecha_correccion()!=null) {

					this.sAccionBusqueda="Query";

					this.sFinalQueryGeneral=" where fecha_correccion = '"+Funciones2.getStringPostgresDate(this.detalleactivofijo.getfecha_correccion())+"' ";

					if(Constantes.ISDEVELOPING) {
						System.out.println(this.sFinalQueryGeneral);
					}

					this.procesarBusqueda(this.sAccionBusqueda);

					this.inicializarActualizarBindingDetalleActivoFijo(false);
				}

				if(Constantes.ISUSAEJBLOGICLAYER) {
					this.detalleactivofijoLogic.commitNewConnexionToDeep();
				}

			} catch(Exception e) {

				if(Constantes.ISUSAEJBLOGICLAYER) {
					this.detalleactivofijoLogic.rollbackNewConnexionToDeep();
				}

				FuncionesSwing.manageException(this, e,logger,DetalleActivoFijoConstantesFunciones.CLASSNAME);

			} finally {
				if(Constantes.ISUSAEJBLOGICLAYER) {
					this.detalleactivofijoLogic.closeNewConnexionToDeep();
				}

			}
		}

	public void jButtonfecha_depreciacionDetalleActivoFijoBusquedaActionPerformed(java.awt.event.ActionEvent evt) throws Exception {
		try {

				if(Constantes.ISUSAEJBLOGICLAYER) {
					this.detalleactivofijoLogic.getNewConnexionToDeep("");
				}

				//TOCA TRAER NUEVAMENTE, YA QUE SE PIERDE REGISTRO ACTUAL
				int intSelectedRow = this.jTableDatosDetalleActivoFijo.getSelectedRow();

				if(intSelectedRow>-1) {
					this.setVariablesFormularioToObjetoActualDetalleActivoFijo(this.getdetalleactivofijo(),true);
					this.setVariablesFormularioToObjetoActualForeignKeysDetalleActivoFijo(this.detalleactivofijo);
					//ARCHITECTURE
					/*
					if(Constantes.ISUSAEJBLOGICLAYER) {
						this.detalleactivofijo =(DetalleActivoFijo) this.detalleactivofijoLogic.getDetalleActivoFijos().toArray()[this.jTableDatosDetalleActivoFijo.convertRowIndexToModel(intSelectedRow)];
					} else if(Constantes.ISUSAEJBREMOTE || Constantes.ISUSAEJBHOME) {
						this.detalleactivofijo =(DetalleActivoFijo) this.detalleactivofijos.toArray()[this.jTableDatosDetalleActivoFijo.convertRowIndexToModel(intSelectedRow)];
					}
					*/
					//ARCHITECTURE

				} else {
					if(this.detalleactivofijo==null) {
						this.detalleactivofijo = new DetalleActivoFijo();
					}

					this.setVariablesFormularioToObjetoActualDetalleActivoFijo(this.detalleactivofijo,true);
					this.setVariablesFormularioToObjetoActualForeignKeysDetalleActivoFijo(this.detalleactivofijo);
				}

				if(this.detalleactivofijo.getfecha_depreciacion()!=null) {

					this.sAccionBusqueda="Query";

					this.sFinalQueryGeneral=" where fecha_depreciacion = '"+Funciones2.getStringPostgresDate(this.detalleactivofijo.getfecha_depreciacion())+"' ";

					if(Constantes.ISDEVELOPING) {
						System.out.println(this.sFinalQueryGeneral);
					}

					this.procesarBusqueda(this.sAccionBusqueda);

					this.inicializarActualizarBindingDetalleActivoFijo(false);
				}

				if(Constantes.ISUSAEJBLOGICLAYER) {
					this.detalleactivofijoLogic.commitNewConnexionToDeep();
				}

			} catch(Exception e) {

				if(Constantes.ISUSAEJBLOGICLAYER) {
					this.detalleactivofijoLogic.rollbackNewConnexionToDeep();
				}

				FuncionesSwing.manageException(this, e,logger,DetalleActivoFijoConstantesFunciones.CLASSNAME);

			} finally {
				if(Constantes.ISUSAEJBLOGICLAYER) {
					this.detalleactivofijoLogic.closeNewConnexionToDeep();
				}

			}
		}

	public void jButtonclaveDetalleActivoFijoBusquedaActionPerformed(java.awt.event.ActionEvent evt) throws Exception {
		try {

				if(Constantes.ISUSAEJBLOGICLAYER) {
					this.detalleactivofijoLogic.getNewConnexionToDeep("");
				}

				//TOCA TRAER NUEVAMENTE, YA QUE SE PIERDE REGISTRO ACTUAL
				int intSelectedRow = this.jTableDatosDetalleActivoFijo.getSelectedRow();

				if(intSelectedRow>-1) {
					this.setVariablesFormularioToObjetoActualDetalleActivoFijo(this.getdetalleactivofijo(),true);
					this.setVariablesFormularioToObjetoActualForeignKeysDetalleActivoFijo(this.detalleactivofijo);
					//ARCHITECTURE
					/*
					if(Constantes.ISUSAEJBLOGICLAYER) {
						this.detalleactivofijo =(DetalleActivoFijo) this.detalleactivofijoLogic.getDetalleActivoFijos().toArray()[this.jTableDatosDetalleActivoFijo.convertRowIndexToModel(intSelectedRow)];
					} else if(Constantes.ISUSAEJBREMOTE || Constantes.ISUSAEJBHOME) {
						this.detalleactivofijo =(DetalleActivoFijo) this.detalleactivofijos.toArray()[this.jTableDatosDetalleActivoFijo.convertRowIndexToModel(intSelectedRow)];
					}
					*/
					//ARCHITECTURE

				} else {
					if(this.detalleactivofijo==null) {
						this.detalleactivofijo = new DetalleActivoFijo();
					}

					this.setVariablesFormularioToObjetoActualDetalleActivoFijo(this.detalleactivofijo,true);
					this.setVariablesFormularioToObjetoActualForeignKeysDetalleActivoFijo(this.detalleactivofijo);
				}

				if(this.detalleactivofijo.getclave()!=null) {

					this.sAccionBusqueda="Query";

					this.sFinalQueryGeneral=" where clave like '%"+this.detalleactivofijo.getclave()+"%' ";

					if(Constantes.ISDEVELOPING) {
						System.out.println(this.sFinalQueryGeneral);
					}

					this.procesarBusqueda(this.sAccionBusqueda);

					this.inicializarActualizarBindingDetalleActivoFijo(false);
				}

				if(Constantes.ISUSAEJBLOGICLAYER) {
					this.detalleactivofijoLogic.commitNewConnexionToDeep();
				}

			} catch(Exception e) {

				if(Constantes.ISUSAEJBLOGICLAYER) {
					this.detalleactivofijoLogic.rollbackNewConnexionToDeep();
				}

				FuncionesSwing.manageException(this, e,logger,DetalleActivoFijoConstantesFunciones.CLASSNAME);

			} finally {
				if(Constantes.ISUSAEJBLOGICLAYER) {
					this.detalleactivofijoLogic.closeNewConnexionToDeep();
				}

			}
		}

	public void jButtonmarcaDetalleActivoFijoBusquedaActionPerformed(java.awt.event.ActionEvent evt) throws Exception {
		try {

				if(Constantes.ISUSAEJBLOGICLAYER) {
					this.detalleactivofijoLogic.getNewConnexionToDeep("");
				}

				//TOCA TRAER NUEVAMENTE, YA QUE SE PIERDE REGISTRO ACTUAL
				int intSelectedRow = this.jTableDatosDetalleActivoFijo.getSelectedRow();

				if(intSelectedRow>-1) {
					this.setVariablesFormularioToObjetoActualDetalleActivoFijo(this.getdetalleactivofijo(),true);
					this.setVariablesFormularioToObjetoActualForeignKeysDetalleActivoFijo(this.detalleactivofijo);
					//ARCHITECTURE
					/*
					if(Constantes.ISUSAEJBLOGICLAYER) {
						this.detalleactivofijo =(DetalleActivoFijo) this.detalleactivofijoLogic.getDetalleActivoFijos().toArray()[this.jTableDatosDetalleActivoFijo.convertRowIndexToModel(intSelectedRow)];
					} else if(Constantes.ISUSAEJBREMOTE || Constantes.ISUSAEJBHOME) {
						this.detalleactivofijo =(DetalleActivoFijo) this.detalleactivofijos.toArray()[this.jTableDatosDetalleActivoFijo.convertRowIndexToModel(intSelectedRow)];
					}
					*/
					//ARCHITECTURE

				} else {
					if(this.detalleactivofijo==null) {
						this.detalleactivofijo = new DetalleActivoFijo();
					}

					this.setVariablesFormularioToObjetoActualDetalleActivoFijo(this.detalleactivofijo,true);
					this.setVariablesFormularioToObjetoActualForeignKeysDetalleActivoFijo(this.detalleactivofijo);
				}

				if(this.detalleactivofijo.getmarca()!=null) {

					this.sAccionBusqueda="Query";

					this.sFinalQueryGeneral=" where marca like '%"+this.detalleactivofijo.getmarca()+"%' ";

					if(Constantes.ISDEVELOPING) {
						System.out.println(this.sFinalQueryGeneral);
					}

					this.procesarBusqueda(this.sAccionBusqueda);

					this.inicializarActualizarBindingDetalleActivoFijo(false);
				}

				if(Constantes.ISUSAEJBLOGICLAYER) {
					this.detalleactivofijoLogic.commitNewConnexionToDeep();
				}

			} catch(Exception e) {

				if(Constantes.ISUSAEJBLOGICLAYER) {
					this.detalleactivofijoLogic.rollbackNewConnexionToDeep();
				}

				FuncionesSwing.manageException(this, e,logger,DetalleActivoFijoConstantesFunciones.CLASSNAME);

			} finally {
				if(Constantes.ISUSAEJBLOGICLAYER) {
					this.detalleactivofijoLogic.closeNewConnexionToDeep();
				}

			}
		}

	public void jButtonmodeloDetalleActivoFijoBusquedaActionPerformed(java.awt.event.ActionEvent evt) throws Exception {
		try {

				if(Constantes.ISUSAEJBLOGICLAYER) {
					this.detalleactivofijoLogic.getNewConnexionToDeep("");
				}

				//TOCA TRAER NUEVAMENTE, YA QUE SE PIERDE REGISTRO ACTUAL
				int intSelectedRow = this.jTableDatosDetalleActivoFijo.getSelectedRow();

				if(intSelectedRow>-1) {
					this.setVariablesFormularioToObjetoActualDetalleActivoFijo(this.getdetalleactivofijo(),true);
					this.setVariablesFormularioToObjetoActualForeignKeysDetalleActivoFijo(this.detalleactivofijo);
					//ARCHITECTURE
					/*
					if(Constantes.ISUSAEJBLOGICLAYER) {
						this.detalleactivofijo =(DetalleActivoFijo) this.detalleactivofijoLogic.getDetalleActivoFijos().toArray()[this.jTableDatosDetalleActivoFijo.convertRowIndexToModel(intSelectedRow)];
					} else if(Constantes.ISUSAEJBREMOTE || Constantes.ISUSAEJBHOME) {
						this.detalleactivofijo =(DetalleActivoFijo) this.detalleactivofijos.toArray()[this.jTableDatosDetalleActivoFijo.convertRowIndexToModel(intSelectedRow)];
					}
					*/
					//ARCHITECTURE

				} else {
					if(this.detalleactivofijo==null) {
						this.detalleactivofijo = new DetalleActivoFijo();
					}

					this.setVariablesFormularioToObjetoActualDetalleActivoFijo(this.detalleactivofijo,true);
					this.setVariablesFormularioToObjetoActualForeignKeysDetalleActivoFijo(this.detalleactivofijo);
				}

				if(this.detalleactivofijo.getmodelo()!=null) {

					this.sAccionBusqueda="Query";

					this.sFinalQueryGeneral=" where modelo like '%"+this.detalleactivofijo.getmodelo()+"%' ";

					if(Constantes.ISDEVELOPING) {
						System.out.println(this.sFinalQueryGeneral);
					}

					this.procesarBusqueda(this.sAccionBusqueda);

					this.inicializarActualizarBindingDetalleActivoFijo(false);
				}

				if(Constantes.ISUSAEJBLOGICLAYER) {
					this.detalleactivofijoLogic.commitNewConnexionToDeep();
				}

			} catch(Exception e) {

				if(Constantes.ISUSAEJBLOGICLAYER) {
					this.detalleactivofijoLogic.rollbackNewConnexionToDeep();
				}

				FuncionesSwing.manageException(this, e,logger,DetalleActivoFijoConstantesFunciones.CLASSNAME);

			} finally {
				if(Constantes.ISUSAEJBLOGICLAYER) {
					this.detalleactivofijoLogic.closeNewConnexionToDeep();
				}

			}
		}

	public void jButtoncolorDetalleActivoFijoBusquedaActionPerformed(java.awt.event.ActionEvent evt) throws Exception {
		try {

				if(Constantes.ISUSAEJBLOGICLAYER) {
					this.detalleactivofijoLogic.getNewConnexionToDeep("");
				}

				//TOCA TRAER NUEVAMENTE, YA QUE SE PIERDE REGISTRO ACTUAL
				int intSelectedRow = this.jTableDatosDetalleActivoFijo.getSelectedRow();

				if(intSelectedRow>-1) {
					this.setVariablesFormularioToObjetoActualDetalleActivoFijo(this.getdetalleactivofijo(),true);
					this.setVariablesFormularioToObjetoActualForeignKeysDetalleActivoFijo(this.detalleactivofijo);
					//ARCHITECTURE
					/*
					if(Constantes.ISUSAEJBLOGICLAYER) {
						this.detalleactivofijo =(DetalleActivoFijo) this.detalleactivofijoLogic.getDetalleActivoFijos().toArray()[this.jTableDatosDetalleActivoFijo.convertRowIndexToModel(intSelectedRow)];
					} else if(Constantes.ISUSAEJBREMOTE || Constantes.ISUSAEJBHOME) {
						this.detalleactivofijo =(DetalleActivoFijo) this.detalleactivofijos.toArray()[this.jTableDatosDetalleActivoFijo.convertRowIndexToModel(intSelectedRow)];
					}
					*/
					//ARCHITECTURE

				} else {
					if(this.detalleactivofijo==null) {
						this.detalleactivofijo = new DetalleActivoFijo();
					}

					this.setVariablesFormularioToObjetoActualDetalleActivoFijo(this.detalleactivofijo,true);
					this.setVariablesFormularioToObjetoActualForeignKeysDetalleActivoFijo(this.detalleactivofijo);
				}

				if(this.detalleactivofijo.getcolor()!=null) {

					this.sAccionBusqueda="Query";

					this.sFinalQueryGeneral=" where color like '%"+this.detalleactivofijo.getcolor()+"%' ";

					if(Constantes.ISDEVELOPING) {
						System.out.println(this.sFinalQueryGeneral);
					}

					this.procesarBusqueda(this.sAccionBusqueda);

					this.inicializarActualizarBindingDetalleActivoFijo(false);
				}

				if(Constantes.ISUSAEJBLOGICLAYER) {
					this.detalleactivofijoLogic.commitNewConnexionToDeep();
				}

			} catch(Exception e) {

				if(Constantes.ISUSAEJBLOGICLAYER) {
					this.detalleactivofijoLogic.rollbackNewConnexionToDeep();
				}

				FuncionesSwing.manageException(this, e,logger,DetalleActivoFijoConstantesFunciones.CLASSNAME);

			} finally {
				if(Constantes.ISUSAEJBLOGICLAYER) {
					this.detalleactivofijoLogic.closeNewConnexionToDeep();
				}

			}
		}

	public void jButtonfechaDetalleActivoFijoBusquedaActionPerformed(java.awt.event.ActionEvent evt) throws Exception {
		try {

				if(Constantes.ISUSAEJBLOGICLAYER) {
					this.detalleactivofijoLogic.getNewConnexionToDeep("");
				}

				//TOCA TRAER NUEVAMENTE, YA QUE SE PIERDE REGISTRO ACTUAL
				int intSelectedRow = this.jTableDatosDetalleActivoFijo.getSelectedRow();

				if(intSelectedRow>-1) {
					this.setVariablesFormularioToObjetoActualDetalleActivoFijo(this.getdetalleactivofijo(),true);
					this.setVariablesFormularioToObjetoActualForeignKeysDetalleActivoFijo(this.detalleactivofijo);
					//ARCHITECTURE
					/*
					if(Constantes.ISUSAEJBLOGICLAYER) {
						this.detalleactivofijo =(DetalleActivoFijo) this.detalleactivofijoLogic.getDetalleActivoFijos().toArray()[this.jTableDatosDetalleActivoFijo.convertRowIndexToModel(intSelectedRow)];
					} else if(Constantes.ISUSAEJBREMOTE || Constantes.ISUSAEJBHOME) {
						this.detalleactivofijo =(DetalleActivoFijo) this.detalleactivofijos.toArray()[this.jTableDatosDetalleActivoFijo.convertRowIndexToModel(intSelectedRow)];
					}
					*/
					//ARCHITECTURE

				} else {
					if(this.detalleactivofijo==null) {
						this.detalleactivofijo = new DetalleActivoFijo();
					}

					this.setVariablesFormularioToObjetoActualDetalleActivoFijo(this.detalleactivofijo,true);
					this.setVariablesFormularioToObjetoActualForeignKeysDetalleActivoFijo(this.detalleactivofijo);
				}

				if(this.detalleactivofijo.getfecha()!=null) {

					this.sAccionBusqueda="Query";

					this.sFinalQueryGeneral=" where fecha = '"+Funciones2.getStringPostgresDate(this.detalleactivofijo.getfecha())+"' ";

					if(Constantes.ISDEVELOPING) {
						System.out.println(this.sFinalQueryGeneral);
					}

					this.procesarBusqueda(this.sAccionBusqueda);

					this.inicializarActualizarBindingDetalleActivoFijo(false);
				}

				if(Constantes.ISUSAEJBLOGICLAYER) {
					this.detalleactivofijoLogic.commitNewConnexionToDeep();
				}

			} catch(Exception e) {

				if(Constantes.ISUSAEJBLOGICLAYER) {
					this.detalleactivofijoLogic.rollbackNewConnexionToDeep();
				}

				FuncionesSwing.manageException(this, e,logger,DetalleActivoFijoConstantesFunciones.CLASSNAME);

			} finally {
				if(Constantes.ISUSAEJBLOGICLAYER) {
					this.detalleactivofijoLogic.closeNewConnexionToDeep();
				}

			}
		}

	public void jButtonvalor_utilDetalleActivoFijoBusquedaActionPerformed(java.awt.event.ActionEvent evt) throws Exception {
		try {

				if(Constantes.ISUSAEJBLOGICLAYER) {
					this.detalleactivofijoLogic.getNewConnexionToDeep("");
				}

				//TOCA TRAER NUEVAMENTE, YA QUE SE PIERDE REGISTRO ACTUAL
				int intSelectedRow = this.jTableDatosDetalleActivoFijo.getSelectedRow();

				if(intSelectedRow>-1) {
					this.setVariablesFormularioToObjetoActualDetalleActivoFijo(this.getdetalleactivofijo(),true);
					this.setVariablesFormularioToObjetoActualForeignKeysDetalleActivoFijo(this.detalleactivofijo);
					//ARCHITECTURE
					/*
					if(Constantes.ISUSAEJBLOGICLAYER) {
						this.detalleactivofijo =(DetalleActivoFijo) this.detalleactivofijoLogic.getDetalleActivoFijos().toArray()[this.jTableDatosDetalleActivoFijo.convertRowIndexToModel(intSelectedRow)];
					} else if(Constantes.ISUSAEJBREMOTE || Constantes.ISUSAEJBHOME) {
						this.detalleactivofijo =(DetalleActivoFijo) this.detalleactivofijos.toArray()[this.jTableDatosDetalleActivoFijo.convertRowIndexToModel(intSelectedRow)];
					}
					*/
					//ARCHITECTURE

				} else {
					if(this.detalleactivofijo==null) {
						this.detalleactivofijo = new DetalleActivoFijo();
					}

					this.setVariablesFormularioToObjetoActualDetalleActivoFijo(this.detalleactivofijo,true);
					this.setVariablesFormularioToObjetoActualForeignKeysDetalleActivoFijo(this.detalleactivofijo);
				}

				if(this.detalleactivofijo.getvalor_util()!=null) {

					this.sAccionBusqueda="Query";

					this.sFinalQueryGeneral=" where valor_util = "+this.detalleactivofijo.getvalor_util().toString()+" ";

					if(Constantes.ISDEVELOPING) {
						System.out.println(this.sFinalQueryGeneral);
					}

					this.procesarBusqueda(this.sAccionBusqueda);

					this.inicializarActualizarBindingDetalleActivoFijo(false);
				}

				if(Constantes.ISUSAEJBLOGICLAYER) {
					this.detalleactivofijoLogic.commitNewConnexionToDeep();
				}

			} catch(Exception e) {

				if(Constantes.ISUSAEJBLOGICLAYER) {
					this.detalleactivofijoLogic.rollbackNewConnexionToDeep();
				}

				FuncionesSwing.manageException(this, e,logger,DetalleActivoFijoConstantesFunciones.CLASSNAME);

			} finally {
				if(Constantes.ISUSAEJBLOGICLAYER) {
					this.detalleactivofijoLogic.closeNewConnexionToDeep();
				}

			}
		}

	public void jButtoncosto_de_compraDetalleActivoFijoBusquedaActionPerformed(java.awt.event.ActionEvent evt) throws Exception {
		try {

				if(Constantes.ISUSAEJBLOGICLAYER) {
					this.detalleactivofijoLogic.getNewConnexionToDeep("");
				}

				//TOCA TRAER NUEVAMENTE, YA QUE SE PIERDE REGISTRO ACTUAL
				int intSelectedRow = this.jTableDatosDetalleActivoFijo.getSelectedRow();

				if(intSelectedRow>-1) {
					this.setVariablesFormularioToObjetoActualDetalleActivoFijo(this.getdetalleactivofijo(),true);
					this.setVariablesFormularioToObjetoActualForeignKeysDetalleActivoFijo(this.detalleactivofijo);
					//ARCHITECTURE
					/*
					if(Constantes.ISUSAEJBLOGICLAYER) {
						this.detalleactivofijo =(DetalleActivoFijo) this.detalleactivofijoLogic.getDetalleActivoFijos().toArray()[this.jTableDatosDetalleActivoFijo.convertRowIndexToModel(intSelectedRow)];
					} else if(Constantes.ISUSAEJBREMOTE || Constantes.ISUSAEJBHOME) {
						this.detalleactivofijo =(DetalleActivoFijo) this.detalleactivofijos.toArray()[this.jTableDatosDetalleActivoFijo.convertRowIndexToModel(intSelectedRow)];
					}
					*/
					//ARCHITECTURE

				} else {
					if(this.detalleactivofijo==null) {
						this.detalleactivofijo = new DetalleActivoFijo();
					}

					this.setVariablesFormularioToObjetoActualDetalleActivoFijo(this.detalleactivofijo,true);
					this.setVariablesFormularioToObjetoActualForeignKeysDetalleActivoFijo(this.detalleactivofijo);
				}

				if(this.detalleactivofijo.getcosto_de_compra()!=null) {

					this.sAccionBusqueda="Query";

					this.sFinalQueryGeneral=" where costo_de_compra = "+this.detalleactivofijo.getcosto_de_compra().toString()+" ";

					if(Constantes.ISDEVELOPING) {
						System.out.println(this.sFinalQueryGeneral);
					}

					this.procesarBusqueda(this.sAccionBusqueda);

					this.inicializarActualizarBindingDetalleActivoFijo(false);
				}

				if(Constantes.ISUSAEJBLOGICLAYER) {
					this.detalleactivofijoLogic.commitNewConnexionToDeep();
				}

			} catch(Exception e) {

				if(Constantes.ISUSAEJBLOGICLAYER) {
					this.detalleactivofijoLogic.rollbackNewConnexionToDeep();
				}

				FuncionesSwing.manageException(this, e,logger,DetalleActivoFijoConstantesFunciones.CLASSNAME);

			} finally {
				if(Constantes.ISUSAEJBLOGICLAYER) {
					this.detalleactivofijoLogic.closeNewConnexionToDeep();
				}

			}
		}

	public void jButtonvida_utilDetalleActivoFijoBusquedaActionPerformed(java.awt.event.ActionEvent evt) throws Exception {
		try {

				if(Constantes.ISUSAEJBLOGICLAYER) {
					this.detalleactivofijoLogic.getNewConnexionToDeep("");
				}

				//TOCA TRAER NUEVAMENTE, YA QUE SE PIERDE REGISTRO ACTUAL
				int intSelectedRow = this.jTableDatosDetalleActivoFijo.getSelectedRow();

				if(intSelectedRow>-1) {
					this.setVariablesFormularioToObjetoActualDetalleActivoFijo(this.getdetalleactivofijo(),true);
					this.setVariablesFormularioToObjetoActualForeignKeysDetalleActivoFijo(this.detalleactivofijo);
					//ARCHITECTURE
					/*
					if(Constantes.ISUSAEJBLOGICLAYER) {
						this.detalleactivofijo =(DetalleActivoFijo) this.detalleactivofijoLogic.getDetalleActivoFijos().toArray()[this.jTableDatosDetalleActivoFijo.convertRowIndexToModel(intSelectedRow)];
					} else if(Constantes.ISUSAEJBREMOTE || Constantes.ISUSAEJBHOME) {
						this.detalleactivofijo =(DetalleActivoFijo) this.detalleactivofijos.toArray()[this.jTableDatosDetalleActivoFijo.convertRowIndexToModel(intSelectedRow)];
					}
					*/
					//ARCHITECTURE

				} else {
					if(this.detalleactivofijo==null) {
						this.detalleactivofijo = new DetalleActivoFijo();
					}

					this.setVariablesFormularioToObjetoActualDetalleActivoFijo(this.detalleactivofijo,true);
					this.setVariablesFormularioToObjetoActualForeignKeysDetalleActivoFijo(this.detalleactivofijo);
				}

				if(this.detalleactivofijo.getvida_util()!=null) {

					this.sAccionBusqueda="Query";

					this.sFinalQueryGeneral=" where vida_util = "+this.detalleactivofijo.getvida_util().toString()+" ";

					if(Constantes.ISDEVELOPING) {
						System.out.println(this.sFinalQueryGeneral);
					}

					this.procesarBusqueda(this.sAccionBusqueda);

					this.inicializarActualizarBindingDetalleActivoFijo(false);
				}

				if(Constantes.ISUSAEJBLOGICLAYER) {
					this.detalleactivofijoLogic.commitNewConnexionToDeep();
				}

			} catch(Exception e) {

				if(Constantes.ISUSAEJBLOGICLAYER) {
					this.detalleactivofijoLogic.rollbackNewConnexionToDeep();
				}

				FuncionesSwing.manageException(this, e,logger,DetalleActivoFijoConstantesFunciones.CLASSNAME);

			} finally {
				if(Constantes.ISUSAEJBLOGICLAYER) {
					this.detalleactivofijoLogic.closeNewConnexionToDeep();
				}

			}
		}

	public void jButtonvalor_residualDetalleActivoFijoBusquedaActionPerformed(java.awt.event.ActionEvent evt) throws Exception {
		try {

				if(Constantes.ISUSAEJBLOGICLAYER) {
					this.detalleactivofijoLogic.getNewConnexionToDeep("");
				}

				//TOCA TRAER NUEVAMENTE, YA QUE SE PIERDE REGISTRO ACTUAL
				int intSelectedRow = this.jTableDatosDetalleActivoFijo.getSelectedRow();

				if(intSelectedRow>-1) {
					this.setVariablesFormularioToObjetoActualDetalleActivoFijo(this.getdetalleactivofijo(),true);
					this.setVariablesFormularioToObjetoActualForeignKeysDetalleActivoFijo(this.detalleactivofijo);
					//ARCHITECTURE
					/*
					if(Constantes.ISUSAEJBLOGICLAYER) {
						this.detalleactivofijo =(DetalleActivoFijo) this.detalleactivofijoLogic.getDetalleActivoFijos().toArray()[this.jTableDatosDetalleActivoFijo.convertRowIndexToModel(intSelectedRow)];
					} else if(Constantes.ISUSAEJBREMOTE || Constantes.ISUSAEJBHOME) {
						this.detalleactivofijo =(DetalleActivoFijo) this.detalleactivofijos.toArray()[this.jTableDatosDetalleActivoFijo.convertRowIndexToModel(intSelectedRow)];
					}
					*/
					//ARCHITECTURE

				} else {
					if(this.detalleactivofijo==null) {
						this.detalleactivofijo = new DetalleActivoFijo();
					}

					this.setVariablesFormularioToObjetoActualDetalleActivoFijo(this.detalleactivofijo,true);
					this.setVariablesFormularioToObjetoActualForeignKeysDetalleActivoFijo(this.detalleactivofijo);
				}

				if(this.detalleactivofijo.getvalor_residual()!=null) {

					this.sAccionBusqueda="Query";

					this.sFinalQueryGeneral=" where valor_residual = "+this.detalleactivofijo.getvalor_residual().toString()+" ";

					if(Constantes.ISDEVELOPING) {
						System.out.println(this.sFinalQueryGeneral);
					}

					this.procesarBusqueda(this.sAccionBusqueda);

					this.inicializarActualizarBindingDetalleActivoFijo(false);
				}

				if(Constantes.ISUSAEJBLOGICLAYER) {
					this.detalleactivofijoLogic.commitNewConnexionToDeep();
				}

			} catch(Exception e) {

				if(Constantes.ISUSAEJBLOGICLAYER) {
					this.detalleactivofijoLogic.rollbackNewConnexionToDeep();
				}

				FuncionesSwing.manageException(this, e,logger,DetalleActivoFijoConstantesFunciones.CLASSNAME);

			} finally {
				if(Constantes.ISUSAEJBLOGICLAYER) {
					this.detalleactivofijoLogic.closeNewConnexionToDeep();
				}

			}
		}

	public void jButtoncantidadDetalleActivoFijoBusquedaActionPerformed(java.awt.event.ActionEvent evt) throws Exception {
		try {

				if(Constantes.ISUSAEJBLOGICLAYER) {
					this.detalleactivofijoLogic.getNewConnexionToDeep("");
				}

				//TOCA TRAER NUEVAMENTE, YA QUE SE PIERDE REGISTRO ACTUAL
				int intSelectedRow = this.jTableDatosDetalleActivoFijo.getSelectedRow();

				if(intSelectedRow>-1) {
					this.setVariablesFormularioToObjetoActualDetalleActivoFijo(this.getdetalleactivofijo(),true);
					this.setVariablesFormularioToObjetoActualForeignKeysDetalleActivoFijo(this.detalleactivofijo);
					//ARCHITECTURE
					/*
					if(Constantes.ISUSAEJBLOGICLAYER) {
						this.detalleactivofijo =(DetalleActivoFijo) this.detalleactivofijoLogic.getDetalleActivoFijos().toArray()[this.jTableDatosDetalleActivoFijo.convertRowIndexToModel(intSelectedRow)];
					} else if(Constantes.ISUSAEJBREMOTE || Constantes.ISUSAEJBHOME) {
						this.detalleactivofijo =(DetalleActivoFijo) this.detalleactivofijos.toArray()[this.jTableDatosDetalleActivoFijo.convertRowIndexToModel(intSelectedRow)];
					}
					*/
					//ARCHITECTURE

				} else {
					if(this.detalleactivofijo==null) {
						this.detalleactivofijo = new DetalleActivoFijo();
					}

					this.setVariablesFormularioToObjetoActualDetalleActivoFijo(this.detalleactivofijo,true);
					this.setVariablesFormularioToObjetoActualForeignKeysDetalleActivoFijo(this.detalleactivofijo);
				}

				if(this.detalleactivofijo.getcantidad()!=null) {

					this.sAccionBusqueda="Query";

					this.sFinalQueryGeneral=" where cantidad = "+this.detalleactivofijo.getcantidad().toString()+" ";

					if(Constantes.ISDEVELOPING) {
						System.out.println(this.sFinalQueryGeneral);
					}

					this.procesarBusqueda(this.sAccionBusqueda);

					this.inicializarActualizarBindingDetalleActivoFijo(false);
				}

				if(Constantes.ISUSAEJBLOGICLAYER) {
					this.detalleactivofijoLogic.commitNewConnexionToDeep();
				}

			} catch(Exception e) {

				if(Constantes.ISUSAEJBLOGICLAYER) {
					this.detalleactivofijoLogic.rollbackNewConnexionToDeep();
				}

				FuncionesSwing.manageException(this, e,logger,DetalleActivoFijoConstantesFunciones.CLASSNAME);

			} finally {
				if(Constantes.ISUSAEJBLOGICLAYER) {
					this.detalleactivofijoLogic.closeNewConnexionToDeep();
				}

			}
		}

	public void jButtonnombre_propietarioDetalleActivoFijoBusquedaActionPerformed(java.awt.event.ActionEvent evt) throws Exception {
		try {

				if(Constantes.ISUSAEJBLOGICLAYER) {
					this.detalleactivofijoLogic.getNewConnexionToDeep("");
				}

				//TOCA TRAER NUEVAMENTE, YA QUE SE PIERDE REGISTRO ACTUAL
				int intSelectedRow = this.jTableDatosDetalleActivoFijo.getSelectedRow();

				if(intSelectedRow>-1) {
					this.setVariablesFormularioToObjetoActualDetalleActivoFijo(this.getdetalleactivofijo(),true);
					this.setVariablesFormularioToObjetoActualForeignKeysDetalleActivoFijo(this.detalleactivofijo);
					//ARCHITECTURE
					/*
					if(Constantes.ISUSAEJBLOGICLAYER) {
						this.detalleactivofijo =(DetalleActivoFijo) this.detalleactivofijoLogic.getDetalleActivoFijos().toArray()[this.jTableDatosDetalleActivoFijo.convertRowIndexToModel(intSelectedRow)];
					} else if(Constantes.ISUSAEJBREMOTE || Constantes.ISUSAEJBHOME) {
						this.detalleactivofijo =(DetalleActivoFijo) this.detalleactivofijos.toArray()[this.jTableDatosDetalleActivoFijo.convertRowIndexToModel(intSelectedRow)];
					}
					*/
					//ARCHITECTURE

				} else {
					if(this.detalleactivofijo==null) {
						this.detalleactivofijo = new DetalleActivoFijo();
					}

					this.setVariablesFormularioToObjetoActualDetalleActivoFijo(this.detalleactivofijo,true);
					this.setVariablesFormularioToObjetoActualForeignKeysDetalleActivoFijo(this.detalleactivofijo);
				}

				if(this.detalleactivofijo.getnombre_propietario()!=null) {

					this.sAccionBusqueda="Query";

					this.sFinalQueryGeneral=" where nombre_propietario like '%"+this.detalleactivofijo.getnombre_propietario()+"%' ";

					if(Constantes.ISDEVELOPING) {
						System.out.println(this.sFinalQueryGeneral);
					}

					this.procesarBusqueda(this.sAccionBusqueda);

					this.inicializarActualizarBindingDetalleActivoFijo(false);
				}

				if(Constantes.ISUSAEJBLOGICLAYER) {
					this.detalleactivofijoLogic.commitNewConnexionToDeep();
				}

			} catch(Exception e) {

				if(Constantes.ISUSAEJBLOGICLAYER) {
					this.detalleactivofijoLogic.rollbackNewConnexionToDeep();
				}

				FuncionesSwing.manageException(this, e,logger,DetalleActivoFijoConstantesFunciones.CLASSNAME);

			} finally {
				if(Constantes.ISUSAEJBLOGICLAYER) {
					this.detalleactivofijoLogic.closeNewConnexionToDeep();
				}

			}
		}

	public void jButtonresponsableDetalleActivoFijoBusquedaActionPerformed(java.awt.event.ActionEvent evt) throws Exception {
		try {

				if(Constantes.ISUSAEJBLOGICLAYER) {
					this.detalleactivofijoLogic.getNewConnexionToDeep("");
				}

				//TOCA TRAER NUEVAMENTE, YA QUE SE PIERDE REGISTRO ACTUAL
				int intSelectedRow = this.jTableDatosDetalleActivoFijo.getSelectedRow();

				if(intSelectedRow>-1) {
					this.setVariablesFormularioToObjetoActualDetalleActivoFijo(this.getdetalleactivofijo(),true);
					this.setVariablesFormularioToObjetoActualForeignKeysDetalleActivoFijo(this.detalleactivofijo);
					//ARCHITECTURE
					/*
					if(Constantes.ISUSAEJBLOGICLAYER) {
						this.detalleactivofijo =(DetalleActivoFijo) this.detalleactivofijoLogic.getDetalleActivoFijos().toArray()[this.jTableDatosDetalleActivoFijo.convertRowIndexToModel(intSelectedRow)];
					} else if(Constantes.ISUSAEJBREMOTE || Constantes.ISUSAEJBHOME) {
						this.detalleactivofijo =(DetalleActivoFijo) this.detalleactivofijos.toArray()[this.jTableDatosDetalleActivoFijo.convertRowIndexToModel(intSelectedRow)];
					}
					*/
					//ARCHITECTURE

				} else {
					if(this.detalleactivofijo==null) {
						this.detalleactivofijo = new DetalleActivoFijo();
					}

					this.setVariablesFormularioToObjetoActualDetalleActivoFijo(this.detalleactivofijo,true);
					this.setVariablesFormularioToObjetoActualForeignKeysDetalleActivoFijo(this.detalleactivofijo);
				}

				if(this.detalleactivofijo.getresponsable()!=null) {

					this.sAccionBusqueda="Query";

					this.sFinalQueryGeneral=" where responsable like '%"+this.detalleactivofijo.getresponsable()+"%' ";

					if(Constantes.ISDEVELOPING) {
						System.out.println(this.sFinalQueryGeneral);
					}

					this.procesarBusqueda(this.sAccionBusqueda);

					this.inicializarActualizarBindingDetalleActivoFijo(false);
				}

				if(Constantes.ISUSAEJBLOGICLAYER) {
					this.detalleactivofijoLogic.commitNewConnexionToDeep();
				}

			} catch(Exception e) {

				if(Constantes.ISUSAEJBLOGICLAYER) {
					this.detalleactivofijoLogic.rollbackNewConnexionToDeep();
				}

				FuncionesSwing.manageException(this, e,logger,DetalleActivoFijoConstantesFunciones.CLASSNAME);

			} finally {
				if(Constantes.ISUSAEJBLOGICLAYER) {
					this.detalleactivofijoLogic.closeNewConnexionToDeep();
				}

			}
		}

	public void jButtonpath_fotoDetalleActivoFijoBusquedaActionPerformed(java.awt.event.ActionEvent evt) throws Exception {
		try {

				if(Constantes.ISUSAEJBLOGICLAYER) {
					this.detalleactivofijoLogic.getNewConnexionToDeep("");
				}

				//TOCA TRAER NUEVAMENTE, YA QUE SE PIERDE REGISTRO ACTUAL
				int intSelectedRow = this.jTableDatosDetalleActivoFijo.getSelectedRow();

				if(intSelectedRow>-1) {
					this.setVariablesFormularioToObjetoActualDetalleActivoFijo(this.getdetalleactivofijo(),true);
					this.setVariablesFormularioToObjetoActualForeignKeysDetalleActivoFijo(this.detalleactivofijo);
					//ARCHITECTURE
					/*
					if(Constantes.ISUSAEJBLOGICLAYER) {
						this.detalleactivofijo =(DetalleActivoFijo) this.detalleactivofijoLogic.getDetalleActivoFijos().toArray()[this.jTableDatosDetalleActivoFijo.convertRowIndexToModel(intSelectedRow)];
					} else if(Constantes.ISUSAEJBREMOTE || Constantes.ISUSAEJBHOME) {
						this.detalleactivofijo =(DetalleActivoFijo) this.detalleactivofijos.toArray()[this.jTableDatosDetalleActivoFijo.convertRowIndexToModel(intSelectedRow)];
					}
					*/
					//ARCHITECTURE

				} else {
					if(this.detalleactivofijo==null) {
						this.detalleactivofijo = new DetalleActivoFijo();
					}

					this.setVariablesFormularioToObjetoActualDetalleActivoFijo(this.detalleactivofijo,true);
					this.setVariablesFormularioToObjetoActualForeignKeysDetalleActivoFijo(this.detalleactivofijo);
				}

				if(this.detalleactivofijo.getpath_foto()!=null) {

					this.sAccionBusqueda="Query";

					this.sFinalQueryGeneral=" where path_foto like '%"+this.detalleactivofijo.getpath_foto()+"%' ";

					if(Constantes.ISDEVELOPING) {
						System.out.println(this.sFinalQueryGeneral);
					}

					this.procesarBusqueda(this.sAccionBusqueda);

					this.inicializarActualizarBindingDetalleActivoFijo(false);
				}

				if(Constantes.ISUSAEJBLOGICLAYER) {
					this.detalleactivofijoLogic.commitNewConnexionToDeep();
				}

			} catch(Exception e) {

				if(Constantes.ISUSAEJBLOGICLAYER) {
					this.detalleactivofijoLogic.rollbackNewConnexionToDeep();
				}

				FuncionesSwing.manageException(this, e,logger,DetalleActivoFijoConstantesFunciones.CLASSNAME);

			} finally {
				if(Constantes.ISUSAEJBLOGICLAYER) {
					this.detalleactivofijoLogic.closeNewConnexionToDeep();
				}

			}
		}

	public void jButtonnumero_comprobanteDetalleActivoFijoBusquedaActionPerformed(java.awt.event.ActionEvent evt) throws Exception {
		try {

				if(Constantes.ISUSAEJBLOGICLAYER) {
					this.detalleactivofijoLogic.getNewConnexionToDeep("");
				}

				//TOCA TRAER NUEVAMENTE, YA QUE SE PIERDE REGISTRO ACTUAL
				int intSelectedRow = this.jTableDatosDetalleActivoFijo.getSelectedRow();

				if(intSelectedRow>-1) {
					this.setVariablesFormularioToObjetoActualDetalleActivoFijo(this.getdetalleactivofijo(),true);
					this.setVariablesFormularioToObjetoActualForeignKeysDetalleActivoFijo(this.detalleactivofijo);
					//ARCHITECTURE
					/*
					if(Constantes.ISUSAEJBLOGICLAYER) {
						this.detalleactivofijo =(DetalleActivoFijo) this.detalleactivofijoLogic.getDetalleActivoFijos().toArray()[this.jTableDatosDetalleActivoFijo.convertRowIndexToModel(intSelectedRow)];
					} else if(Constantes.ISUSAEJBREMOTE || Constantes.ISUSAEJBHOME) {
						this.detalleactivofijo =(DetalleActivoFijo) this.detalleactivofijos.toArray()[this.jTableDatosDetalleActivoFijo.convertRowIndexToModel(intSelectedRow)];
					}
					*/
					//ARCHITECTURE

				} else {
					if(this.detalleactivofijo==null) {
						this.detalleactivofijo = new DetalleActivoFijo();
					}

					this.setVariablesFormularioToObjetoActualDetalleActivoFijo(this.detalleactivofijo,true);
					this.setVariablesFormularioToObjetoActualForeignKeysDetalleActivoFijo(this.detalleactivofijo);
				}

				if(this.detalleactivofijo.getnumero_comprobante()!=null) {

					this.sAccionBusqueda="Query";

					this.sFinalQueryGeneral=" where numero_comprobante like '%"+this.detalleactivofijo.getnumero_comprobante()+"%' ";

					if(Constantes.ISDEVELOPING) {
						System.out.println(this.sFinalQueryGeneral);
					}

					this.procesarBusqueda(this.sAccionBusqueda);

					this.inicializarActualizarBindingDetalleActivoFijo(false);
				}

				if(Constantes.ISUSAEJBLOGICLAYER) {
					this.detalleactivofijoLogic.commitNewConnexionToDeep();
				}

			} catch(Exception e) {

				if(Constantes.ISUSAEJBLOGICLAYER) {
					this.detalleactivofijoLogic.rollbackNewConnexionToDeep();
				}

				FuncionesSwing.manageException(this, e,logger,DetalleActivoFijoConstantesFunciones.CLASSNAME);

			} finally {
				if(Constantes.ISUSAEJBLOGICLAYER) {
					this.detalleactivofijoLogic.closeNewConnexionToDeep();
				}

			}
		}

	public void jButtonreferenciaDetalleActivoFijoBusquedaActionPerformed(java.awt.event.ActionEvent evt) throws Exception {
		try {

				if(Constantes.ISUSAEJBLOGICLAYER) {
					this.detalleactivofijoLogic.getNewConnexionToDeep("");
				}

				//TOCA TRAER NUEVAMENTE, YA QUE SE PIERDE REGISTRO ACTUAL
				int intSelectedRow = this.jTableDatosDetalleActivoFijo.getSelectedRow();

				if(intSelectedRow>-1) {
					this.setVariablesFormularioToObjetoActualDetalleActivoFijo(this.getdetalleactivofijo(),true);
					this.setVariablesFormularioToObjetoActualForeignKeysDetalleActivoFijo(this.detalleactivofijo);
					//ARCHITECTURE
					/*
					if(Constantes.ISUSAEJBLOGICLAYER) {
						this.detalleactivofijo =(DetalleActivoFijo) this.detalleactivofijoLogic.getDetalleActivoFijos().toArray()[this.jTableDatosDetalleActivoFijo.convertRowIndexToModel(intSelectedRow)];
					} else if(Constantes.ISUSAEJBREMOTE || Constantes.ISUSAEJBHOME) {
						this.detalleactivofijo =(DetalleActivoFijo) this.detalleactivofijos.toArray()[this.jTableDatosDetalleActivoFijo.convertRowIndexToModel(intSelectedRow)];
					}
					*/
					//ARCHITECTURE

				} else {
					if(this.detalleactivofijo==null) {
						this.detalleactivofijo = new DetalleActivoFijo();
					}

					this.setVariablesFormularioToObjetoActualDetalleActivoFijo(this.detalleactivofijo,true);
					this.setVariablesFormularioToObjetoActualForeignKeysDetalleActivoFijo(this.detalleactivofijo);
				}

				if(this.detalleactivofijo.getreferencia()!=null) {

					this.sAccionBusqueda="Query";

					this.sFinalQueryGeneral=" where referencia like '%"+this.detalleactivofijo.getreferencia()+"%' ";

					if(Constantes.ISDEVELOPING) {
						System.out.println(this.sFinalQueryGeneral);
					}

					this.procesarBusqueda(this.sAccionBusqueda);

					this.inicializarActualizarBindingDetalleActivoFijo(false);
				}

				if(Constantes.ISUSAEJBLOGICLAYER) {
					this.detalleactivofijoLogic.commitNewConnexionToDeep();
				}

			} catch(Exception e) {

				if(Constantes.ISUSAEJBLOGICLAYER) {
					this.detalleactivofijoLogic.rollbackNewConnexionToDeep();
				}

				FuncionesSwing.manageException(this, e,logger,DetalleActivoFijoConstantesFunciones.CLASSNAME);

			} finally {
				if(Constantes.ISUSAEJBLOGICLAYER) {
					this.detalleactivofijoLogic.closeNewConnexionToDeep();
				}

			}
		}

	public void jButtonvalor_cotizacionDetalleActivoFijoBusquedaActionPerformed(java.awt.event.ActionEvent evt) throws Exception {
		try {

				if(Constantes.ISUSAEJBLOGICLAYER) {
					this.detalleactivofijoLogic.getNewConnexionToDeep("");
				}

				//TOCA TRAER NUEVAMENTE, YA QUE SE PIERDE REGISTRO ACTUAL
				int intSelectedRow = this.jTableDatosDetalleActivoFijo.getSelectedRow();

				if(intSelectedRow>-1) {
					this.setVariablesFormularioToObjetoActualDetalleActivoFijo(this.getdetalleactivofijo(),true);
					this.setVariablesFormularioToObjetoActualForeignKeysDetalleActivoFijo(this.detalleactivofijo);
					//ARCHITECTURE
					/*
					if(Constantes.ISUSAEJBLOGICLAYER) {
						this.detalleactivofijo =(DetalleActivoFijo) this.detalleactivofijoLogic.getDetalleActivoFijos().toArray()[this.jTableDatosDetalleActivoFijo.convertRowIndexToModel(intSelectedRow)];
					} else if(Constantes.ISUSAEJBREMOTE || Constantes.ISUSAEJBHOME) {
						this.detalleactivofijo =(DetalleActivoFijo) this.detalleactivofijos.toArray()[this.jTableDatosDetalleActivoFijo.convertRowIndexToModel(intSelectedRow)];
					}
					*/
					//ARCHITECTURE

				} else {
					if(this.detalleactivofijo==null) {
						this.detalleactivofijo = new DetalleActivoFijo();
					}

					this.setVariablesFormularioToObjetoActualDetalleActivoFijo(this.detalleactivofijo,true);
					this.setVariablesFormularioToObjetoActualForeignKeysDetalleActivoFijo(this.detalleactivofijo);
				}

				if(this.detalleactivofijo.getvalor_cotizacion()!=null) {

					this.sAccionBusqueda="Query";

					this.sFinalQueryGeneral=" where valor_cotizacion = "+this.detalleactivofijo.getvalor_cotizacion().toString()+" ";

					if(Constantes.ISDEVELOPING) {
						System.out.println(this.sFinalQueryGeneral);
					}

					this.procesarBusqueda(this.sAccionBusqueda);

					this.inicializarActualizarBindingDetalleActivoFijo(false);
				}

				if(Constantes.ISUSAEJBLOGICLAYER) {
					this.detalleactivofijoLogic.commitNewConnexionToDeep();
				}

			} catch(Exception e) {

				if(Constantes.ISUSAEJBLOGICLAYER) {
					this.detalleactivofijoLogic.rollbackNewConnexionToDeep();
				}

				FuncionesSwing.manageException(this, e,logger,DetalleActivoFijoConstantesFunciones.CLASSNAME);

			} finally {
				if(Constantes.ISUSAEJBLOGICLAYER) {
					this.detalleactivofijoLogic.closeNewConnexionToDeep();
				}

			}
		}

	public void jButtoncon_partesDetalleActivoFijoBusquedaActionPerformed(java.awt.event.ActionEvent evt) throws Exception {
		try {

				if(Constantes.ISUSAEJBLOGICLAYER) {
					this.detalleactivofijoLogic.getNewConnexionToDeep("");
				}

				//TOCA TRAER NUEVAMENTE, YA QUE SE PIERDE REGISTRO ACTUAL
				int intSelectedRow = this.jTableDatosDetalleActivoFijo.getSelectedRow();

				if(intSelectedRow>-1) {
					this.setVariablesFormularioToObjetoActualDetalleActivoFijo(this.getdetalleactivofijo(),true);
					this.setVariablesFormularioToObjetoActualForeignKeysDetalleActivoFijo(this.detalleactivofijo);
					//ARCHITECTURE
					/*
					if(Constantes.ISUSAEJBLOGICLAYER) {
						this.detalleactivofijo =(DetalleActivoFijo) this.detalleactivofijoLogic.getDetalleActivoFijos().toArray()[this.jTableDatosDetalleActivoFijo.convertRowIndexToModel(intSelectedRow)];
					} else if(Constantes.ISUSAEJBREMOTE || Constantes.ISUSAEJBHOME) {
						this.detalleactivofijo =(DetalleActivoFijo) this.detalleactivofijos.toArray()[this.jTableDatosDetalleActivoFijo.convertRowIndexToModel(intSelectedRow)];
					}
					*/
					//ARCHITECTURE

				} else {
					if(this.detalleactivofijo==null) {
						this.detalleactivofijo = new DetalleActivoFijo();
					}

					this.setVariablesFormularioToObjetoActualDetalleActivoFijo(this.detalleactivofijo,true);
					this.setVariablesFormularioToObjetoActualForeignKeysDetalleActivoFijo(this.detalleactivofijo);
				}

				if(this.detalleactivofijo.getcon_partes()!=null) {

					this.sAccionBusqueda="Query";

					this.sFinalQueryGeneral=" where con_partes = "+this.detalleactivofijo.getcon_partes().toString()+" ";

					if(Constantes.ISDEVELOPING) {
						System.out.println(this.sFinalQueryGeneral);
					}

					this.procesarBusqueda(this.sAccionBusqueda);

					this.inicializarActualizarBindingDetalleActivoFijo(false);
				}

				if(Constantes.ISUSAEJBLOGICLAYER) {
					this.detalleactivofijoLogic.commitNewConnexionToDeep();
				}

			} catch(Exception e) {

				if(Constantes.ISUSAEJBLOGICLAYER) {
					this.detalleactivofijoLogic.rollbackNewConnexionToDeep();
				}

				FuncionesSwing.manageException(this, e,logger,DetalleActivoFijoConstantesFunciones.CLASSNAME);

			} finally {
				if(Constantes.ISUSAEJBLOGICLAYER) {
					this.detalleactivofijoLogic.closeNewConnexionToDeep();
				}

			}
		}

	public void jButtoncon_garantiaDetalleActivoFijoBusquedaActionPerformed(java.awt.event.ActionEvent evt) throws Exception {
		try {

				if(Constantes.ISUSAEJBLOGICLAYER) {
					this.detalleactivofijoLogic.getNewConnexionToDeep("");
				}

				//TOCA TRAER NUEVAMENTE, YA QUE SE PIERDE REGISTRO ACTUAL
				int intSelectedRow = this.jTableDatosDetalleActivoFijo.getSelectedRow();

				if(intSelectedRow>-1) {
					this.setVariablesFormularioToObjetoActualDetalleActivoFijo(this.getdetalleactivofijo(),true);
					this.setVariablesFormularioToObjetoActualForeignKeysDetalleActivoFijo(this.detalleactivofijo);
					//ARCHITECTURE
					/*
					if(Constantes.ISUSAEJBLOGICLAYER) {
						this.detalleactivofijo =(DetalleActivoFijo) this.detalleactivofijoLogic.getDetalleActivoFijos().toArray()[this.jTableDatosDetalleActivoFijo.convertRowIndexToModel(intSelectedRow)];
					} else if(Constantes.ISUSAEJBREMOTE || Constantes.ISUSAEJBHOME) {
						this.detalleactivofijo =(DetalleActivoFijo) this.detalleactivofijos.toArray()[this.jTableDatosDetalleActivoFijo.convertRowIndexToModel(intSelectedRow)];
					}
					*/
					//ARCHITECTURE

				} else {
					if(this.detalleactivofijo==null) {
						this.detalleactivofijo = new DetalleActivoFijo();
					}

					this.setVariablesFormularioToObjetoActualDetalleActivoFijo(this.detalleactivofijo,true);
					this.setVariablesFormularioToObjetoActualForeignKeysDetalleActivoFijo(this.detalleactivofijo);
				}

				if(this.detalleactivofijo.getcon_garantia()!=null) {

					this.sAccionBusqueda="Query";

					this.sFinalQueryGeneral=" where con_garantia = "+this.detalleactivofijo.getcon_garantia().toString()+" ";

					if(Constantes.ISDEVELOPING) {
						System.out.println(this.sFinalQueryGeneral);
					}

					this.procesarBusqueda(this.sAccionBusqueda);

					this.inicializarActualizarBindingDetalleActivoFijo(false);
				}

				if(Constantes.ISUSAEJBLOGICLAYER) {
					this.detalleactivofijoLogic.commitNewConnexionToDeep();
				}

			} catch(Exception e) {

				if(Constantes.ISUSAEJBLOGICLAYER) {
					this.detalleactivofijoLogic.rollbackNewConnexionToDeep();
				}

				FuncionesSwing.manageException(this, e,logger,DetalleActivoFijoConstantesFunciones.CLASSNAME);

			} finally {
				if(Constantes.ISUSAEJBLOGICLAYER) {
					this.detalleactivofijoLogic.closeNewConnexionToDeep();
				}

			}
		}

	public void jButtoncon_existenciaDetalleActivoFijoBusquedaActionPerformed(java.awt.event.ActionEvent evt) throws Exception {
		try {

				if(Constantes.ISUSAEJBLOGICLAYER) {
					this.detalleactivofijoLogic.getNewConnexionToDeep("");
				}

				//TOCA TRAER NUEVAMENTE, YA QUE SE PIERDE REGISTRO ACTUAL
				int intSelectedRow = this.jTableDatosDetalleActivoFijo.getSelectedRow();

				if(intSelectedRow>-1) {
					this.setVariablesFormularioToObjetoActualDetalleActivoFijo(this.getdetalleactivofijo(),true);
					this.setVariablesFormularioToObjetoActualForeignKeysDetalleActivoFijo(this.detalleactivofijo);
					//ARCHITECTURE
					/*
					if(Constantes.ISUSAEJBLOGICLAYER) {
						this.detalleactivofijo =(DetalleActivoFijo) this.detalleactivofijoLogic.getDetalleActivoFijos().toArray()[this.jTableDatosDetalleActivoFijo.convertRowIndexToModel(intSelectedRow)];
					} else if(Constantes.ISUSAEJBREMOTE || Constantes.ISUSAEJBHOME) {
						this.detalleactivofijo =(DetalleActivoFijo) this.detalleactivofijos.toArray()[this.jTableDatosDetalleActivoFijo.convertRowIndexToModel(intSelectedRow)];
					}
					*/
					//ARCHITECTURE

				} else {
					if(this.detalleactivofijo==null) {
						this.detalleactivofijo = new DetalleActivoFijo();
					}

					this.setVariablesFormularioToObjetoActualDetalleActivoFijo(this.detalleactivofijo,true);
					this.setVariablesFormularioToObjetoActualForeignKeysDetalleActivoFijo(this.detalleactivofijo);
				}

				if(this.detalleactivofijo.getcon_existencia()!=null) {

					this.sAccionBusqueda="Query";

					this.sFinalQueryGeneral=" where con_existencia = "+this.detalleactivofijo.getcon_existencia().toString()+" ";

					if(Constantes.ISDEVELOPING) {
						System.out.println(this.sFinalQueryGeneral);
					}

					this.procesarBusqueda(this.sAccionBusqueda);

					this.inicializarActualizarBindingDetalleActivoFijo(false);
				}

				if(Constantes.ISUSAEJBLOGICLAYER) {
					this.detalleactivofijoLogic.commitNewConnexionToDeep();
				}

			} catch(Exception e) {

				if(Constantes.ISUSAEJBLOGICLAYER) {
					this.detalleactivofijoLogic.rollbackNewConnexionToDeep();
				}

				FuncionesSwing.manageException(this, e,logger,DetalleActivoFijoConstantesFunciones.CLASSNAME);

			} finally {
				if(Constantes.ISUSAEJBLOGICLAYER) {
					this.detalleactivofijoLogic.closeNewConnexionToDeep();
				}

			}
		}

	public void jButtonfecha_bajaDetalleActivoFijoBusquedaActionPerformed(java.awt.event.ActionEvent evt) throws Exception {
		try {

				if(Constantes.ISUSAEJBLOGICLAYER) {
					this.detalleactivofijoLogic.getNewConnexionToDeep("");
				}

				//TOCA TRAER NUEVAMENTE, YA QUE SE PIERDE REGISTRO ACTUAL
				int intSelectedRow = this.jTableDatosDetalleActivoFijo.getSelectedRow();

				if(intSelectedRow>-1) {
					this.setVariablesFormularioToObjetoActualDetalleActivoFijo(this.getdetalleactivofijo(),true);
					this.setVariablesFormularioToObjetoActualForeignKeysDetalleActivoFijo(this.detalleactivofijo);
					//ARCHITECTURE
					/*
					if(Constantes.ISUSAEJBLOGICLAYER) {
						this.detalleactivofijo =(DetalleActivoFijo) this.detalleactivofijoLogic.getDetalleActivoFijos().toArray()[this.jTableDatosDetalleActivoFijo.convertRowIndexToModel(intSelectedRow)];
					} else if(Constantes.ISUSAEJBREMOTE || Constantes.ISUSAEJBHOME) {
						this.detalleactivofijo =(DetalleActivoFijo) this.detalleactivofijos.toArray()[this.jTableDatosDetalleActivoFijo.convertRowIndexToModel(intSelectedRow)];
					}
					*/
					//ARCHITECTURE

				} else {
					if(this.detalleactivofijo==null) {
						this.detalleactivofijo = new DetalleActivoFijo();
					}

					this.setVariablesFormularioToObjetoActualDetalleActivoFijo(this.detalleactivofijo,true);
					this.setVariablesFormularioToObjetoActualForeignKeysDetalleActivoFijo(this.detalleactivofijo);
				}

				if(this.detalleactivofijo.getfecha_baja()!=null) {

					this.sAccionBusqueda="Query";

					this.sFinalQueryGeneral=" where fecha_baja = '"+Funciones2.getStringPostgresDate(this.detalleactivofijo.getfecha_baja())+"' ";

					if(Constantes.ISDEVELOPING) {
						System.out.println(this.sFinalQueryGeneral);
					}

					this.procesarBusqueda(this.sAccionBusqueda);

					this.inicializarActualizarBindingDetalleActivoFijo(false);
				}

				if(Constantes.ISUSAEJBLOGICLAYER) {
					this.detalleactivofijoLogic.commitNewConnexionToDeep();
				}

			} catch(Exception e) {

				if(Constantes.ISUSAEJBLOGICLAYER) {
					this.detalleactivofijoLogic.rollbackNewConnexionToDeep();
				}

				FuncionesSwing.manageException(this, e,logger,DetalleActivoFijoConstantesFunciones.CLASSNAME);

			} finally {
				if(Constantes.ISUSAEJBLOGICLAYER) {
					this.detalleactivofijoLogic.closeNewConnexionToDeep();
				}

			}
		}

	public void jButtonpath_foto2DetalleActivoFijoBusquedaActionPerformed(java.awt.event.ActionEvent evt) throws Exception {
		try {

				if(Constantes.ISUSAEJBLOGICLAYER) {
					this.detalleactivofijoLogic.getNewConnexionToDeep("");
				}

				//TOCA TRAER NUEVAMENTE, YA QUE SE PIERDE REGISTRO ACTUAL
				int intSelectedRow = this.jTableDatosDetalleActivoFijo.getSelectedRow();

				if(intSelectedRow>-1) {
					this.setVariablesFormularioToObjetoActualDetalleActivoFijo(this.getdetalleactivofijo(),true);
					this.setVariablesFormularioToObjetoActualForeignKeysDetalleActivoFijo(this.detalleactivofijo);
					//ARCHITECTURE
					/*
					if(Constantes.ISUSAEJBLOGICLAYER) {
						this.detalleactivofijo =(DetalleActivoFijo) this.detalleactivofijoLogic.getDetalleActivoFijos().toArray()[this.jTableDatosDetalleActivoFijo.convertRowIndexToModel(intSelectedRow)];
					} else if(Constantes.ISUSAEJBREMOTE || Constantes.ISUSAEJBHOME) {
						this.detalleactivofijo =(DetalleActivoFijo) this.detalleactivofijos.toArray()[this.jTableDatosDetalleActivoFijo.convertRowIndexToModel(intSelectedRow)];
					}
					*/
					//ARCHITECTURE

				} else {
					if(this.detalleactivofijo==null) {
						this.detalleactivofijo = new DetalleActivoFijo();
					}

					this.setVariablesFormularioToObjetoActualDetalleActivoFijo(this.detalleactivofijo,true);
					this.setVariablesFormularioToObjetoActualForeignKeysDetalleActivoFijo(this.detalleactivofijo);
				}

				if(this.detalleactivofijo.getpath_foto2()!=null) {

					this.sAccionBusqueda="Query";

					this.sFinalQueryGeneral=" where path_foto2 like '%"+this.detalleactivofijo.getpath_foto2()+"%' ";

					if(Constantes.ISDEVELOPING) {
						System.out.println(this.sFinalQueryGeneral);
					}

					this.procesarBusqueda(this.sAccionBusqueda);

					this.inicializarActualizarBindingDetalleActivoFijo(false);
				}

				if(Constantes.ISUSAEJBLOGICLAYER) {
					this.detalleactivofijoLogic.commitNewConnexionToDeep();
				}

			} catch(Exception e) {

				if(Constantes.ISUSAEJBLOGICLAYER) {
					this.detalleactivofijoLogic.rollbackNewConnexionToDeep();
				}

				FuncionesSwing.manageException(this, e,logger,DetalleActivoFijoConstantesFunciones.CLASSNAME);

			} finally {
				if(Constantes.ISUSAEJBLOGICLAYER) {
					this.detalleactivofijoLogic.closeNewConnexionToDeep();
				}

			}
		}

	
	
	public void jButtonFK_IdClienteDetalleActivoFijoActionPerformed(ActionEvent evt) throws Exception {
		try {
			if(Constantes.ISUSAEJBLOGICLAYER) {
				this.detalleactivofijoLogic.getNewConnexionToDeep("");
			}

			this.iNumeroPaginacionPagina=0;
			this.inicializarActualizarBindingDetalleActivoFijo(false,false);

			this.getDetalleActivoFijosFK_IdCliente();

			this.inicializarActualizarBindingDetalleActivoFijo(false);

			//if(DetalleActivoFijoBeanSwingJInternalFrame.ISBINDING_MANUAL) {
			//this.inicializarActualizarBindingDetalleActivoFijo(false,false);
			//}

			if(Constantes.ISUSAEJBLOGICLAYER) {
				this.detalleactivofijoLogic.commitNewConnexionToDeep();
			}
		} catch(Exception e) {
			if(Constantes.ISUSAEJBLOGICLAYER) {
				this.detalleactivofijoLogic.rollbackNewConnexionToDeep();
			}

			FuncionesSwing.manageException(this, e,logger,DetalleActivoFijoConstantesFunciones.CLASSNAME);

		} finally {
			if(Constantes.ISUSAEJBLOGICLAYER) {
				this.detalleactivofijoLogic.closeNewConnexionToDeep();
			}
		}
	}

	public void jButtonFK_IdDetalleGrupoActivoFijoDetalleActivoFijoActionPerformed(ActionEvent evt) throws Exception {
		try {
			if(Constantes.ISUSAEJBLOGICLAYER) {
				this.detalleactivofijoLogic.getNewConnexionToDeep("");
			}

			this.iNumeroPaginacionPagina=0;
			this.inicializarActualizarBindingDetalleActivoFijo(false,false);

			this.getDetalleActivoFijosFK_IdDetalleGrupoActivoFijo();

			this.inicializarActualizarBindingDetalleActivoFijo(false);

			//if(DetalleActivoFijoBeanSwingJInternalFrame.ISBINDING_MANUAL) {
			//this.inicializarActualizarBindingDetalleActivoFijo(false,false);
			//}

			if(Constantes.ISUSAEJBLOGICLAYER) {
				this.detalleactivofijoLogic.commitNewConnexionToDeep();
			}
		} catch(Exception e) {
			if(Constantes.ISUSAEJBLOGICLAYER) {
				this.detalleactivofijoLogic.rollbackNewConnexionToDeep();
			}

			FuncionesSwing.manageException(this, e,logger,DetalleActivoFijoConstantesFunciones.CLASSNAME);

		} finally {
			if(Constantes.ISUSAEJBLOGICLAYER) {
				this.detalleactivofijoLogic.closeNewConnexionToDeep();
			}
		}
	}

	public void jButtonFK_IdEmpresaDetalleActivoFijoActionPerformed(ActionEvent evt) throws Exception {
		try {
			if(Constantes.ISUSAEJBLOGICLAYER) {
				this.detalleactivofijoLogic.getNewConnexionToDeep("");
			}

			this.iNumeroPaginacionPagina=0;
			this.inicializarActualizarBindingDetalleActivoFijo(false,false);

			this.getDetalleActivoFijosFK_IdEmpresa();

			this.inicializarActualizarBindingDetalleActivoFijo(false);

			//if(DetalleActivoFijoBeanSwingJInternalFrame.ISBINDING_MANUAL) {
			//this.inicializarActualizarBindingDetalleActivoFijo(false,false);
			//}

			if(Constantes.ISUSAEJBLOGICLAYER) {
				this.detalleactivofijoLogic.commitNewConnexionToDeep();
			}
		} catch(Exception e) {
			if(Constantes.ISUSAEJBLOGICLAYER) {
				this.detalleactivofijoLogic.rollbackNewConnexionToDeep();
			}

			FuncionesSwing.manageException(this, e,logger,DetalleActivoFijoConstantesFunciones.CLASSNAME);

		} finally {
			if(Constantes.ISUSAEJBLOGICLAYER) {
				this.detalleactivofijoLogic.closeNewConnexionToDeep();
			}
		}
	}

	public void jButtonFK_IdEstadoActivoFijoDetalleActivoFijoActionPerformed(ActionEvent evt) throws Exception {
		try {
			if(Constantes.ISUSAEJBLOGICLAYER) {
				this.detalleactivofijoLogic.getNewConnexionToDeep("");
			}

			this.iNumeroPaginacionPagina=0;
			this.inicializarActualizarBindingDetalleActivoFijo(false,false);

			this.getDetalleActivoFijosFK_IdEstadoActivoFijo();

			this.inicializarActualizarBindingDetalleActivoFijo(false);

			//if(DetalleActivoFijoBeanSwingJInternalFrame.ISBINDING_MANUAL) {
			//this.inicializarActualizarBindingDetalleActivoFijo(false,false);
			//}

			if(Constantes.ISUSAEJBLOGICLAYER) {
				this.detalleactivofijoLogic.commitNewConnexionToDeep();
			}
		} catch(Exception e) {
			if(Constantes.ISUSAEJBLOGICLAYER) {
				this.detalleactivofijoLogic.rollbackNewConnexionToDeep();
			}

			FuncionesSwing.manageException(this, e,logger,DetalleActivoFijoConstantesFunciones.CLASSNAME);

		} finally {
			if(Constantes.ISUSAEJBLOGICLAYER) {
				this.detalleactivofijoLogic.closeNewConnexionToDeep();
			}
		}
	}

	public void jButtonFK_IdPartidaPresuDetalleActivoFijoActionPerformed(ActionEvent evt) throws Exception {
		try {
			if(Constantes.ISUSAEJBLOGICLAYER) {
				this.detalleactivofijoLogic.getNewConnexionToDeep("");
			}

			this.iNumeroPaginacionPagina=0;
			this.inicializarActualizarBindingDetalleActivoFijo(false,false);

			this.getDetalleActivoFijosFK_IdPartidaPresu();

			this.inicializarActualizarBindingDetalleActivoFijo(false);

			//if(DetalleActivoFijoBeanSwingJInternalFrame.ISBINDING_MANUAL) {
			//this.inicializarActualizarBindingDetalleActivoFijo(false,false);
			//}

			if(Constantes.ISUSAEJBLOGICLAYER) {
				this.detalleactivofijoLogic.commitNewConnexionToDeep();
			}
		} catch(Exception e) {
			if(Constantes.ISUSAEJBLOGICLAYER) {
				this.detalleactivofijoLogic.rollbackNewConnexionToDeep();
			}

			FuncionesSwing.manageException(this, e,logger,DetalleActivoFijoConstantesFunciones.CLASSNAME);

		} finally {
			if(Constantes.ISUSAEJBLOGICLAYER) {
				this.detalleactivofijoLogic.closeNewConnexionToDeep();
			}
		}
	}

	public void jButtonFK_IdSubGrupoActivoFijoDetalleActivoFijoActionPerformed(ActionEvent evt) throws Exception {
		try {
			if(Constantes.ISUSAEJBLOGICLAYER) {
				this.detalleactivofijoLogic.getNewConnexionToDeep("");
			}

			this.iNumeroPaginacionPagina=0;
			this.inicializarActualizarBindingDetalleActivoFijo(false,false);

			this.getDetalleActivoFijosFK_IdSubGrupoActivoFijo();

			this.inicializarActualizarBindingDetalleActivoFijo(false);

			//if(DetalleActivoFijoBeanSwingJInternalFrame.ISBINDING_MANUAL) {
			//this.inicializarActualizarBindingDetalleActivoFijo(false,false);
			//}

			if(Constantes.ISUSAEJBLOGICLAYER) {
				this.detalleactivofijoLogic.commitNewConnexionToDeep();
			}
		} catch(Exception e) {
			if(Constantes.ISUSAEJBLOGICLAYER) {
				this.detalleactivofijoLogic.rollbackNewConnexionToDeep();
			}

			FuncionesSwing.manageException(this, e,logger,DetalleActivoFijoConstantesFunciones.CLASSNAME);

		} finally {
			if(Constantes.ISUSAEJBLOGICLAYER) {
				this.detalleactivofijoLogic.closeNewConnexionToDeep();
			}
		}
	}

	public void jButtonFK_IdSucursalDetalleActivoFijoActionPerformed(ActionEvent evt) throws Exception {
		try {
			if(Constantes.ISUSAEJBLOGICLAYER) {
				this.detalleactivofijoLogic.getNewConnexionToDeep("");
			}

			this.iNumeroPaginacionPagina=0;
			this.inicializarActualizarBindingDetalleActivoFijo(false,false);

			this.getDetalleActivoFijosFK_IdSucursal();

			this.inicializarActualizarBindingDetalleActivoFijo(false);

			//if(DetalleActivoFijoBeanSwingJInternalFrame.ISBINDING_MANUAL) {
			//this.inicializarActualizarBindingDetalleActivoFijo(false,false);
			//}

			if(Constantes.ISUSAEJBLOGICLAYER) {
				this.detalleactivofijoLogic.commitNewConnexionToDeep();
			}
		} catch(Exception e) {
			if(Constantes.ISUSAEJBLOGICLAYER) {
				this.detalleactivofijoLogic.rollbackNewConnexionToDeep();
			}

			FuncionesSwing.manageException(this, e,logger,DetalleActivoFijoConstantesFunciones.CLASSNAME);

		} finally {
			if(Constantes.ISUSAEJBLOGICLAYER) {
				this.detalleactivofijoLogic.closeNewConnexionToDeep();
			}
		}
	}

	public void jButtonFK_IdTipoActivoFijoEmpresaDetalleActivoFijoActionPerformed(ActionEvent evt) throws Exception {
		try {
			if(Constantes.ISUSAEJBLOGICLAYER) {
				this.detalleactivofijoLogic.getNewConnexionToDeep("");
			}

			this.iNumeroPaginacionPagina=0;
			this.inicializarActualizarBindingDetalleActivoFijo(false,false);

			this.getDetalleActivoFijosFK_IdTipoActivoFijoEmpresa();

			this.inicializarActualizarBindingDetalleActivoFijo(false);

			//if(DetalleActivoFijoBeanSwingJInternalFrame.ISBINDING_MANUAL) {
			//this.inicializarActualizarBindingDetalleActivoFijo(false,false);
			//}

			if(Constantes.ISUSAEJBLOGICLAYER) {
				this.detalleactivofijoLogic.commitNewConnexionToDeep();
			}
		} catch(Exception e) {
			if(Constantes.ISUSAEJBLOGICLAYER) {
				this.detalleactivofijoLogic.rollbackNewConnexionToDeep();
			}

			FuncionesSwing.manageException(this, e,logger,DetalleActivoFijoConstantesFunciones.CLASSNAME);

		} finally {
			if(Constantes.ISUSAEJBLOGICLAYER) {
				this.detalleactivofijoLogic.closeNewConnexionToDeep();
			}
		}
	}

	public void jButtonFK_IdTipoDepreciacionEmpresaDetalleActivoFijoActionPerformed(ActionEvent evt) throws Exception {
		try {
			if(Constantes.ISUSAEJBLOGICLAYER) {
				this.detalleactivofijoLogic.getNewConnexionToDeep("");
			}

			this.iNumeroPaginacionPagina=0;
			this.inicializarActualizarBindingDetalleActivoFijo(false,false);

			this.getDetalleActivoFijosFK_IdTipoDepreciacionEmpresa();

			this.inicializarActualizarBindingDetalleActivoFijo(false);

			//if(DetalleActivoFijoBeanSwingJInternalFrame.ISBINDING_MANUAL) {
			//this.inicializarActualizarBindingDetalleActivoFijo(false,false);
			//}

			if(Constantes.ISUSAEJBLOGICLAYER) {
				this.detalleactivofijoLogic.commitNewConnexionToDeep();
			}
		} catch(Exception e) {
			if(Constantes.ISUSAEJBLOGICLAYER) {
				this.detalleactivofijoLogic.rollbackNewConnexionToDeep();
			}

			FuncionesSwing.manageException(this, e,logger,DetalleActivoFijoConstantesFunciones.CLASSNAME);

		} finally {
			if(Constantes.ISUSAEJBLOGICLAYER) {
				this.detalleactivofijoLogic.closeNewConnexionToDeep();
			}
		}
	}

	public void jButtonFK_IdTipoRamoActivoFijoDetalleActivoFijoActionPerformed(ActionEvent evt) throws Exception {
		try {
			if(Constantes.ISUSAEJBLOGICLAYER) {
				this.detalleactivofijoLogic.getNewConnexionToDeep("");
			}

			this.iNumeroPaginacionPagina=0;
			this.inicializarActualizarBindingDetalleActivoFijo(false,false);

			this.getDetalleActivoFijosFK_IdTipoRamoActivoFijo();

			this.inicializarActualizarBindingDetalleActivoFijo(false);

			//if(DetalleActivoFijoBeanSwingJInternalFrame.ISBINDING_MANUAL) {
			//this.inicializarActualizarBindingDetalleActivoFijo(false,false);
			//}

			if(Constantes.ISUSAEJBLOGICLAYER) {
				this.detalleactivofijoLogic.commitNewConnexionToDeep();
			}
		} catch(Exception e) {
			if(Constantes.ISUSAEJBLOGICLAYER) {
				this.detalleactivofijoLogic.rollbackNewConnexionToDeep();
			}

			FuncionesSwing.manageException(this, e,logger,DetalleActivoFijoConstantesFunciones.CLASSNAME);

		} finally {
			if(Constantes.ISUSAEJBLOGICLAYER) {
				this.detalleactivofijoLogic.closeNewConnexionToDeep();
			}
		}
	}

	
	public void closingInternalFrameDetalleActivoFijo() {
		if(this.jInternalFrameDetalleFormDetalleActivoFijo!=null) {
		

		if(this.jInternalFrameDetalleFormDetalleActivoFijo.mantenimientoactivofijoBeanSwingJInternalFrame!=null) {
			this.jInternalFrameDetalleFormDetalleActivoFijo.mantenimientoactivofijoBeanSwingJInternalFrame.setVisible(false);
			this.jInternalFrameDetalleFormDetalleActivoFijo.mantenimientoactivofijoBeanSwingJInternalFrame.dispose();
			this.jInternalFrameDetalleFormDetalleActivoFijo.mantenimientoactivofijoBeanSwingJInternalFrame=null;
		}

		if(this.jInternalFrameDetalleFormDetalleActivoFijo.mantenimientoactivofijoBeanSwingJInternalFramePopup!=null) {
			this.jInternalFrameDetalleFormDetalleActivoFijo.mantenimientoactivofijoBeanSwingJInternalFramePopup.setVisible(false);
			this.jInternalFrameDetalleFormDetalleActivoFijo.mantenimientoactivofijoBeanSwingJInternalFramePopup.dispose();
			this.jInternalFrameDetalleFormDetalleActivoFijo.mantenimientoactivofijoBeanSwingJInternalFramePopup=null;
		}

		if(this.jInternalFrameDetalleFormDetalleActivoFijo.serviciotransporteBeanSwingJInternalFrame!=null) {
			this.jInternalFrameDetalleFormDetalleActivoFijo.serviciotransporteBeanSwingJInternalFrame.setVisible(false);
			this.jInternalFrameDetalleFormDetalleActivoFijo.serviciotransporteBeanSwingJInternalFrame.dispose();
			this.jInternalFrameDetalleFormDetalleActivoFijo.serviciotransporteBeanSwingJInternalFrame=null;
		}

		if(this.jInternalFrameDetalleFormDetalleActivoFijo.serviciotransporteBeanSwingJInternalFramePopup!=null) {
			this.jInternalFrameDetalleFormDetalleActivoFijo.serviciotransporteBeanSwingJInternalFramePopup.setVisible(false);
			this.jInternalFrameDetalleFormDetalleActivoFijo.serviciotransporteBeanSwingJInternalFramePopup.dispose();
			this.jInternalFrameDetalleFormDetalleActivoFijo.serviciotransporteBeanSwingJInternalFramePopup=null;
		}

		if(this.jInternalFrameDetalleFormDetalleActivoFijo.movimientoactivofijoBeanSwingJInternalFrame!=null) {
			this.jInternalFrameDetalleFormDetalleActivoFijo.movimientoactivofijoBeanSwingJInternalFrame.setVisible(false);
			this.jInternalFrameDetalleFormDetalleActivoFijo.movimientoactivofijoBeanSwingJInternalFrame.dispose();
			this.jInternalFrameDetalleFormDetalleActivoFijo.movimientoactivofijoBeanSwingJInternalFrame=null;
		}

		if(this.jInternalFrameDetalleFormDetalleActivoFijo.movimientoactivofijoBeanSwingJInternalFramePopup!=null) {
			this.jInternalFrameDetalleFormDetalleActivoFijo.movimientoactivofijoBeanSwingJInternalFramePopup.setVisible(false);
			this.jInternalFrameDetalleFormDetalleActivoFijo.movimientoactivofijoBeanSwingJInternalFramePopup.dispose();
			this.jInternalFrameDetalleFormDetalleActivoFijo.movimientoactivofijoBeanSwingJInternalFramePopup=null;
		}

		if(this.jInternalFrameDetalleFormDetalleActivoFijo.vehiculoBeanSwingJInternalFrame!=null) {
			this.jInternalFrameDetalleFormDetalleActivoFijo.vehiculoBeanSwingJInternalFrame.setVisible(false);
			this.jInternalFrameDetalleFormDetalleActivoFijo.vehiculoBeanSwingJInternalFrame.dispose();
			this.jInternalFrameDetalleFormDetalleActivoFijo.vehiculoBeanSwingJInternalFrame=null;
		}

		if(this.jInternalFrameDetalleFormDetalleActivoFijo.vehiculoBeanSwingJInternalFramePopup!=null) {
			this.jInternalFrameDetalleFormDetalleActivoFijo.vehiculoBeanSwingJInternalFramePopup.setVisible(false);
			this.jInternalFrameDetalleFormDetalleActivoFijo.vehiculoBeanSwingJInternalFramePopup.dispose();
			this.jInternalFrameDetalleFormDetalleActivoFijo.vehiculoBeanSwingJInternalFramePopup=null;
		}

		if(this.jInternalFrameDetalleFormDetalleActivoFijo.metododepreciacionBeanSwingJInternalFrame!=null) {
			this.jInternalFrameDetalleFormDetalleActivoFijo.metododepreciacionBeanSwingJInternalFrame.setVisible(false);
			this.jInternalFrameDetalleFormDetalleActivoFijo.metododepreciacionBeanSwingJInternalFrame.dispose();
			this.jInternalFrameDetalleFormDetalleActivoFijo.metododepreciacionBeanSwingJInternalFrame=null;
		}

		if(this.jInternalFrameDetalleFormDetalleActivoFijo.metododepreciacionBeanSwingJInternalFramePopup!=null) {
			this.jInternalFrameDetalleFormDetalleActivoFijo.metododepreciacionBeanSwingJInternalFramePopup.setVisible(false);
			this.jInternalFrameDetalleFormDetalleActivoFijo.metododepreciacionBeanSwingJInternalFramePopup.dispose();
			this.jInternalFrameDetalleFormDetalleActivoFijo.metododepreciacionBeanSwingJInternalFramePopup=null;
		}

		if(this.jInternalFrameDetalleFormDetalleActivoFijo.responsableactivofijoBeanSwingJInternalFrame!=null) {
			this.jInternalFrameDetalleFormDetalleActivoFijo.responsableactivofijoBeanSwingJInternalFrame.setVisible(false);
			this.jInternalFrameDetalleFormDetalleActivoFijo.responsableactivofijoBeanSwingJInternalFrame.dispose();
			this.jInternalFrameDetalleFormDetalleActivoFijo.responsableactivofijoBeanSwingJInternalFrame=null;
		}

		if(this.jInternalFrameDetalleFormDetalleActivoFijo.responsableactivofijoBeanSwingJInternalFramePopup!=null) {
			this.jInternalFrameDetalleFormDetalleActivoFijo.responsableactivofijoBeanSwingJInternalFramePopup.setVisible(false);
			this.jInternalFrameDetalleFormDetalleActivoFijo.responsableactivofijoBeanSwingJInternalFramePopup.dispose();
			this.jInternalFrameDetalleFormDetalleActivoFijo.responsableactivofijoBeanSwingJInternalFramePopup=null;
		}

		if(this.jInternalFrameDetalleFormDetalleActivoFijo.depreciacionactivofijoBeanSwingJInternalFrame!=null) {
			this.jInternalFrameDetalleFormDetalleActivoFijo.depreciacionactivofijoBeanSwingJInternalFrame.setVisible(false);
			this.jInternalFrameDetalleFormDetalleActivoFijo.depreciacionactivofijoBeanSwingJInternalFrame.dispose();
			this.jInternalFrameDetalleFormDetalleActivoFijo.depreciacionactivofijoBeanSwingJInternalFrame=null;
		}

		if(this.jInternalFrameDetalleFormDetalleActivoFijo.depreciacionactivofijoBeanSwingJInternalFramePopup!=null) {
			this.jInternalFrameDetalleFormDetalleActivoFijo.depreciacionactivofijoBeanSwingJInternalFramePopup.setVisible(false);
			this.jInternalFrameDetalleFormDetalleActivoFijo.depreciacionactivofijoBeanSwingJInternalFramePopup.dispose();
			this.jInternalFrameDetalleFormDetalleActivoFijo.depreciacionactivofijoBeanSwingJInternalFramePopup=null;
		}

		if(this.jInternalFrameDetalleFormDetalleActivoFijo.gastodepreciacioncentrocostoBeanSwingJInternalFrame!=null) {
			this.jInternalFrameDetalleFormDetalleActivoFijo.gastodepreciacioncentrocostoBeanSwingJInternalFrame.setVisible(false);
			this.jInternalFrameDetalleFormDetalleActivoFijo.gastodepreciacioncentrocostoBeanSwingJInternalFrame.dispose();
			this.jInternalFrameDetalleFormDetalleActivoFijo.gastodepreciacioncentrocostoBeanSwingJInternalFrame=null;
		}

		if(this.jInternalFrameDetalleFormDetalleActivoFijo.gastodepreciacioncentrocostoBeanSwingJInternalFramePopup!=null) {
			this.jInternalFrameDetalleFormDetalleActivoFijo.gastodepreciacioncentrocostoBeanSwingJInternalFramePopup.setVisible(false);
			this.jInternalFrameDetalleFormDetalleActivoFijo.gastodepreciacioncentrocostoBeanSwingJInternalFramePopup.dispose();
			this.jInternalFrameDetalleFormDetalleActivoFijo.gastodepreciacioncentrocostoBeanSwingJInternalFramePopup=null;
		}

		if(this.jInternalFrameDetalleFormDetalleActivoFijo.parteactivofijoBeanSwingJInternalFrame!=null) {
			this.jInternalFrameDetalleFormDetalleActivoFijo.parteactivofijoBeanSwingJInternalFrame.setVisible(false);
			this.jInternalFrameDetalleFormDetalleActivoFijo.parteactivofijoBeanSwingJInternalFrame.dispose();
			this.jInternalFrameDetalleFormDetalleActivoFijo.parteactivofijoBeanSwingJInternalFrame=null;
		}

		if(this.jInternalFrameDetalleFormDetalleActivoFijo.parteactivofijoBeanSwingJInternalFramePopup!=null) {
			this.jInternalFrameDetalleFormDetalleActivoFijo.parteactivofijoBeanSwingJInternalFramePopup.setVisible(false);
			this.jInternalFrameDetalleFormDetalleActivoFijo.parteactivofijoBeanSwingJInternalFramePopup.dispose();
			this.jInternalFrameDetalleFormDetalleActivoFijo.parteactivofijoBeanSwingJInternalFramePopup=null;
		}	
		
		
		}
		
		if(this.jInternalFrameDetalleFormDetalleActivoFijo!=null) {
			this.jInternalFrameDetalleFormDetalleActivoFijo.setVisible(false);	    			
			this.jInternalFrameDetalleFormDetalleActivoFijo.dispose();
			this.jInternalFrameDetalleFormDetalleActivoFijo=null;
		}
		
		
		if(this.jInternalFrameReporteDinamicoDetalleActivoFijo!=null) {
			this.jInternalFrameReporteDinamicoDetalleActivoFijo.setVisible(false);	    			
			this.jInternalFrameReporteDinamicoDetalleActivoFijo.dispose();
			this.jInternalFrameReporteDinamicoDetalleActivoFijo=null;
		}
		
		if(this.jInternalFrameImportacionDetalleActivoFijo!=null) {
			this.jInternalFrameImportacionDetalleActivoFijo.setVisible(false);	    			
			this.jInternalFrameImportacionDetalleActivoFijo.dispose();
			this.jInternalFrameImportacionDetalleActivoFijo=null;
		}		
		
		
		this.setVisible(false);
		this.dispose();
		//this=null;
	}
	
	
	
	public void jButtonActionPerformedGeneral(String sTipo,ActionEvent evt) { 	  
		try {			
			this.startProcessDetalleActivoFijo();
			
			DetalleActivoFijoBeanSwingJInternalFrameAdditional.procesarEventosVista(this.parametroGeneralUsuario,this.moduloActual,this.opcionActual,this.usuarioActual,this,FuncionTipo.BEFORE,ControlTipo.BUTTON,EventoTipo.CLIC,EventoSubTipo.CLICKED,sTipo,this.detalleactivofijo,new Object(),this.detalleactivofijoParameterGeneral,this.detalleactivofijoReturnGeneral);
			
			
			if(sTipo.equals("NuevoDetalleActivoFijo")) {
				jButtonNuevoDetalleActivoFijoActionPerformed(evt,false);
			} else if(sTipo.equals("DuplicarDetalleActivoFijo")) {
				jButtonDuplicarDetalleActivoFijoActionPerformed(evt,false);
			} else if(sTipo.equals("CopiarDetalleActivoFijo")) {
				jButtonCopiarDetalleActivoFijoActionPerformed(evt);
			} else if(sTipo.equals("VerFormDetalleActivoFijo")) {
				jButtonVerFormDetalleActivoFijoActionPerformed(evt);
			} else if(sTipo.equals("NuevoToolBarDetalleActivoFijo")) {
				jButtonNuevoDetalleActivoFijoActionPerformed(evt,false);
			} else if(sTipo.equals("DuplicarToolBarDetalleActivoFijo")) {
				jButtonDuplicarDetalleActivoFijoActionPerformed(evt,false);
			} else if(sTipo.equals("MenuItemNuevoDetalleActivoFijo")) {
				jButtonNuevoDetalleActivoFijoActionPerformed(evt,false);
			} else if(sTipo.equals("MenuItemDuplicarDetalleActivoFijo")) {
				jButtonDuplicarDetalleActivoFijoActionPerformed(evt,false);
			} else if(sTipo.equals("NuevoRelacionesDetalleActivoFijo")) {
				jButtonNuevoDetalleActivoFijoActionPerformed(evt,true);
			} else if(sTipo.equals("NuevoRelacionesToolBarDetalleActivoFijo")) {
				jButtonNuevoDetalleActivoFijoActionPerformed(evt,true);
			} else if(sTipo.equals("MenuItemNuevoRelacionesDetalleActivoFijo")) {
				jButtonNuevoDetalleActivoFijoActionPerformed(evt,true);
			} else if(sTipo.equals("ModificarDetalleActivoFijo")) {
				jButtonModificarDetalleActivoFijoActionPerformed(evt);
			} else if(sTipo.equals("ModificarToolBarDetalleActivoFijo")) {
				jButtonModificarDetalleActivoFijoActionPerformed(evt);
			} else if(sTipo.equals("MenuItemModificarDetalleActivoFijo")) {
				jButtonModificarDetalleActivoFijoActionPerformed(evt);
			} else if(sTipo.equals("ActualizarDetalleActivoFijo")) {
				jButtonActualizarDetalleActivoFijoActionPerformed(evt);
			} else if(sTipo.equals("ActualizarToolBarDetalleActivoFijo")) {
				jButtonActualizarDetalleActivoFijoActionPerformed(evt);
			} else if(sTipo.equals("MenuItemActualizarDetalleActivoFijo")) {
				jButtonActualizarDetalleActivoFijoActionPerformed(evt);
			} else if(sTipo.equals("EliminarDetalleActivoFijo")) {
				jButtonEliminarDetalleActivoFijoActionPerformed(evt);
			} else if(sTipo.equals("EliminarToolBarDetalleActivoFijo")) {
				jButtonEliminarDetalleActivoFijoActionPerformed(evt);
			} else if(sTipo.equals("MenuItemEliminarDetalleActivoFijo")) {
				jButtonEliminarDetalleActivoFijoActionPerformed(evt);
			} else if(sTipo.equals("CancelarDetalleActivoFijo")) {
				jButtonCancelarDetalleActivoFijoActionPerformed(evt);
			} else if(sTipo.equals("CancelarToolBarDetalleActivoFijo")) {
				jButtonCancelarDetalleActivoFijoActionPerformed(evt);
			} else if(sTipo.equals("MenuItemCancelarDetalleActivoFijo")) {
				jButtonCancelarDetalleActivoFijoActionPerformed(evt);
			} else if(sTipo.equals("CerrarDetalleActivoFijo")) {
				jButtonCerrarDetalleActivoFijoActionPerformed(evt);
			} else if(sTipo.equals("CerrarToolBarDetalleActivoFijo")) {
				jButtonCerrarDetalleActivoFijoActionPerformed(evt);
			} else if(sTipo.equals("MenuItemCerrarDetalleActivoFijo")) {
				jButtonCerrarDetalleActivoFijoActionPerformed(evt);
			} else if(sTipo.equals("MostrarOcultarToolBarDetalleActivoFijo")) {
				jButtonMostrarOcultarDetalleActivoFijoActionPerformed(evt);
			} else if(sTipo.equals("MenuItemDetalleCerrarDetalleActivoFijo")) {
				jButtonCancelarDetalleActivoFijoActionPerformed(evt);
			} else if(sTipo.equals("GuardarCambiosDetalleActivoFijo")) {
				jButtonGuardarCambiosDetalleActivoFijoActionPerformed(evt);
			} else if(sTipo.equals("GuardarCambiosToolBarDetalleActivoFijo")) {
				jButtonGuardarCambiosDetalleActivoFijoActionPerformed(evt);
			} else if(sTipo.equals("CopiarToolBarDetalleActivoFijo")) {
				jButtonCopiarDetalleActivoFijoActionPerformed(evt);
			} else if(sTipo.equals("VerFormToolBarDetalleActivoFijo")) {
				jButtonVerFormDetalleActivoFijoActionPerformed(evt);
			} else if(sTipo.equals("MenuItemGuardarCambiosDetalleActivoFijo")) {
				jButtonGuardarCambiosDetalleActivoFijoActionPerformed(evt);
			} else if(sTipo.equals("MenuItemCopiarDetalleActivoFijo")) {
				jButtonCopiarDetalleActivoFijoActionPerformed(evt);
			} else if(sTipo.equals("MenuItemVerFormDetalleActivoFijo")) {
				jButtonVerFormDetalleActivoFijoActionPerformed(evt);
			} else if(sTipo.equals("GuardarCambiosTablaDetalleActivoFijo")) {
				jButtonGuardarCambiosDetalleActivoFijoActionPerformed(evt);
			} else if(sTipo.equals("GuardarCambiosTablaToolBarDetalleActivoFijo")) {
				jButtonGuardarCambiosDetalleActivoFijoActionPerformed(evt);
			} else if(sTipo.equals("MenuItemGuardarCambiosTablaDetalleActivoFijo")) {
				jButtonGuardarCambiosDetalleActivoFijoActionPerformed(evt);
			} else if(sTipo.equals("RecargarInformacionDetalleActivoFijo")) {
				jButtonRecargarInformacionDetalleActivoFijoActionPerformed(evt);
			} else if(sTipo.equals("RecargarInformacionToolBarDetalleActivoFijo")) {
				jButtonRecargarInformacionDetalleActivoFijoActionPerformed(evt);
			} else if(sTipo.equals("MenuItemRecargarInformacionDetalleActivoFijo")) {
				jButtonRecargarInformacionDetalleActivoFijoActionPerformed(evt);
			}
			else if(sTipo.equals("AnterioresDetalleActivoFijo")) {
				jButtonAnterioresDetalleActivoFijoActionPerformed(evt);
			} else if(sTipo.equals("AnterioresToolBarDetalleActivoFijo")) {
				jButtonAnterioresDetalleActivoFijoActionPerformed(evt);
			} else if(sTipo.equals("MenuItemAnterioreDetalleActivoFijo")) {
				jButtonAnterioresDetalleActivoFijoActionPerformed(evt);
			} else if(sTipo.equals("SiguientesDetalleActivoFijo")) {
				jButtonSiguientesDetalleActivoFijoActionPerformed(evt);
			} else if(sTipo.equals("SiguientesToolBarDetalleActivoFijo")) {
				jButtonSiguientesDetalleActivoFijoActionPerformed(evt);
			} else if(sTipo.equals("MenuItemSiguientesDetalleActivoFijo")) {
				jButtonSiguientesDetalleActivoFijoActionPerformed(evt);
			} else if(sTipo.equals("MenuItemAbrirOrderByDetalleActivoFijo") || sTipo.equals("MenuItemDetalleAbrirOrderByDetalleActivoFijo")) {
				jButtonAbrirOrderByDetalleActivoFijoActionPerformed(evt);
			} else if(sTipo.equals("MenuItemMostrarOcultarDetalleActivoFijo") || sTipo.equals("MenuItemDetalleMostrarOcultarDetalleActivoFijo")) {
				jButtonMostrarOcultarDetalleActivoFijoActionPerformed(evt);
			} else if(sTipo.equals("NuevoGuardarCambiosDetalleActivoFijo")) {
				jButtonNuevoGuardarCambiosDetalleActivoFijoActionPerformed(evt);
			} else if(sTipo.equals("NuevoGuardarCambiosToolBarDetalleActivoFijo")) {
				jButtonNuevoGuardarCambiosDetalleActivoFijoActionPerformed(evt);
			} else if(sTipo.equals("MenuItemNuevoGuardarCambiosDetalleActivoFijo")) {
				jButtonNuevoGuardarCambiosDetalleActivoFijoActionPerformed(evt);
			} 
			else if(sTipo.equals("CerrarReporteDinamicoDetalleActivoFijo")) {
				jButtonCerrarReporteDinamicoDetalleActivoFijoActionPerformed(evt);
			} else if(sTipo.equals("GenerarReporteDinamicoDetalleActivoFijo")) {
				jButtonGenerarReporteDinamicoDetalleActivoFijoActionPerformed(evt);
			} else if(sTipo.equals("GenerarExcelReporteDinamicoDetalleActivoFijo")) {
				
				jButtonGenerarExcelReporteDinamicoDetalleActivoFijoActionPerformed(evt);
				
			} else if(sTipo.equals("CerrarImportacionDetalleActivoFijo")) {
				jButtonCerrarImportacionDetalleActivoFijoActionPerformed(evt);
			} else if(sTipo.equals("GenerarImportacionDetalleActivoFijo")) {
				
				jButtonGenerarImportacionDetalleActivoFijoActionPerformed(evt);
				
			} else if(sTipo.equals("AbrirImportacionDetalleActivoFijo")) {
				
				jButtonAbrirImportacionDetalleActivoFijoActionPerformed(evt);
				
			} else if(sTipo.equals("TiposAccionesDetalleActivoFijo")) {
				jComboBoxTiposAccionesDetalleActivoFijoActionListener(evt,false);
			} else if(sTipo.equals("TiposRelacionesDetalleActivoFijo")) {
				jComboBoxTiposRelacionesDetalleActivoFijoActionListener(evt);
			} else if(sTipo.equals("TiposAccionesFormularioDetalleActivoFijo")) {
				jComboBoxTiposAccionesDetalleActivoFijoActionListener(evt,true);
			} else if(sTipo.equals("TiposSeleccionarDetalleActivoFijo")) {
				
				jComboBoxTiposSeleccionarDetalleActivoFijoActionListener(evt);
				
			} else if(sTipo.equals("ValorCampoGeneralDetalleActivoFijo")) {
				jTextFieldValorCampoGeneralDetalleActivoFijoActionListener(evt);
			}
			
			
			else if(sTipo.equals("AbrirOrderByDetalleActivoFijo")) {
				jButtonAbrirOrderByDetalleActivoFijoActionPerformed(evt);
				
			} else if(sTipo.equals("AbrirOrderByToolBarDetalleActivoFijo")) {
				jButtonAbrirOrderByDetalleActivoFijoActionPerformed(evt);
				
			} else if(sTipo.equals("CerrarOrderByDetalleActivoFijo")) {
				jButtonCerrarOrderByDetalleActivoFijoActionPerformed(evt);
			} 
						
			
			//BUSQUEDA GENERAL CAMPO
			else if(sTipo.equals("idDetalleActivoFijoBusqueda")) {
				this.jButtonidDetalleActivoFijoBusquedaActionPerformed(evt);
			}
			//ACTUALIZAR CAMPO
			else if(sTipo.equals("id_empresaDetalleActivoFijoUpdate")) {
				this.jButtonid_empresaDetalleActivoFijoUpdateActionPerformed(evt);
			}
			//BUSQUEDA GENERAL CAMPO
			else if(sTipo.equals("id_empresaDetalleActivoFijoBusqueda")) {
				this.jButtonid_empresaDetalleActivoFijoBusquedaActionPerformed(evt);
			}
			//ACTUALIZAR CAMPO
			else if(sTipo.equals("id_sucursalDetalleActivoFijoUpdate")) {
				this.jButtonid_sucursalDetalleActivoFijoUpdateActionPerformed(evt);
			}
			//BUSQUEDA GENERAL CAMPO
			else if(sTipo.equals("id_sucursalDetalleActivoFijoBusqueda")) {
				this.jButtonid_sucursalDetalleActivoFijoBusquedaActionPerformed(evt);
			}
			//ACTUALIZAR CAMPO
			else if(sTipo.equals("id_detalle_grupo_activo_fijoDetalleActivoFijoUpdate")) {
				this.jButtonid_detalle_grupo_activo_fijoDetalleActivoFijoUpdateActionPerformed(evt);
			}
			//BUSQUEDA GENERAL CAMPO
			else if(sTipo.equals("id_detalle_grupo_activo_fijoDetalleActivoFijoBusqueda")) {
				this.jButtonid_detalle_grupo_activo_fijoDetalleActivoFijoBusquedaActionPerformed(evt);
			}
			//ACTUALIZAR CAMPO
			else if(sTipo.equals("id_sub_grupo_activo_fijoDetalleActivoFijoUpdate")) {
				this.jButtonid_sub_grupo_activo_fijoDetalleActivoFijoUpdateActionPerformed(evt);
			}
			//BUSQUEDA GENERAL CAMPO
			else if(sTipo.equals("id_sub_grupo_activo_fijoDetalleActivoFijoBusqueda")) {
				this.jButtonid_sub_grupo_activo_fijoDetalleActivoFijoBusquedaActionPerformed(evt);
			}
			//ACTUALIZAR CAMPO
			else if(sTipo.equals("id_tipo_ramo_activo_fijoDetalleActivoFijoUpdate")) {
				this.jButtonid_tipo_ramo_activo_fijoDetalleActivoFijoUpdateActionPerformed(evt);
			}
			//BUSQUEDA GENERAL CAMPO
			else if(sTipo.equals("id_tipo_ramo_activo_fijoDetalleActivoFijoBusqueda")) {
				this.jButtonid_tipo_ramo_activo_fijoDetalleActivoFijoBusquedaActionPerformed(evt);
			}
			//ACTUALIZAR CAMPO
			else if(sTipo.equals("id_tipo_activo_fijo_empresaDetalleActivoFijoUpdate")) {
				this.jButtonid_tipo_activo_fijo_empresaDetalleActivoFijoUpdateActionPerformed(evt);
			}
			//BUSQUEDA GENERAL CAMPO
			else if(sTipo.equals("id_tipo_activo_fijo_empresaDetalleActivoFijoBusqueda")) {
				this.jButtonid_tipo_activo_fijo_empresaDetalleActivoFijoBusquedaActionPerformed(evt);
			}
			//ACTUALIZAR CAMPO
			else if(sTipo.equals("id_tipo_depreciacion_empresaDetalleActivoFijoUpdate")) {
				this.jButtonid_tipo_depreciacion_empresaDetalleActivoFijoUpdateActionPerformed(evt);
			}
			//BUSQUEDA GENERAL CAMPO
			else if(sTipo.equals("id_tipo_depreciacion_empresaDetalleActivoFijoBusqueda")) {
				this.jButtonid_tipo_depreciacion_empresaDetalleActivoFijoBusquedaActionPerformed(evt);
			}
			//ACTUALIZAR CAMPO
			else if(sTipo.equals("id_estado_activo_fijoDetalleActivoFijoUpdate")) {
				this.jButtonid_estado_activo_fijoDetalleActivoFijoUpdateActionPerformed(evt);
			}
			//BUSQUEDA GENERAL CAMPO
			else if(sTipo.equals("id_estado_activo_fijoDetalleActivoFijoBusqueda")) {
				this.jButtonid_estado_activo_fijoDetalleActivoFijoBusquedaActionPerformed(evt);
			}
			//BUSQUEDA CAMPO
			else if(sTipo.equals("id_clienteDetalleActivoFijo")) {
				this.jButtonid_clienteDetalleActivoFijoActionPerformed(evt);
			}
			//ACTUALIZAR CAMPO
			else if(sTipo.equals("id_clienteDetalleActivoFijoUpdate")) {
				this.jButtonid_clienteDetalleActivoFijoUpdateActionPerformed(evt);
			}
			//BUSQUEDA GENERAL CAMPO
			else if(sTipo.equals("id_clienteDetalleActivoFijoBusqueda")) {
				this.jButtonid_clienteDetalleActivoFijoBusquedaActionPerformed(evt);
			}
			//ACTUALIZAR CAMPO
			else if(sTipo.equals("id_partida_presuDetalleActivoFijoUpdate")) {
				this.jButtonid_partida_presuDetalleActivoFijoUpdateActionPerformed(evt);
			}
			//BUSQUEDA GENERAL CAMPO
			else if(sTipo.equals("id_partida_presuDetalleActivoFijoBusqueda")) {
				this.jButtonid_partida_presuDetalleActivoFijoBusquedaActionPerformed(evt);
			}
			//BUSQUEDA GENERAL CAMPO
			else if(sTipo.equals("codigoDetalleActivoFijoBusqueda")) {
				this.jButtoncodigoDetalleActivoFijoBusquedaActionPerformed(evt);
			}
			//BUSQUEDA GENERAL CAMPO
			else if(sTipo.equals("nombreDetalleActivoFijoBusqueda")) {
				this.jButtonnombreDetalleActivoFijoBusquedaActionPerformed(evt);
			}
			//BUSQUEDA GENERAL CAMPO
			else if(sTipo.equals("serieDetalleActivoFijoBusqueda")) {
				this.jButtonserieDetalleActivoFijoBusquedaActionPerformed(evt);
			}
			//BUSQUEDA GENERAL CAMPO
			else if(sTipo.equals("fecha_compraDetalleActivoFijoBusqueda")) {
				this.jButtonfecha_compraDetalleActivoFijoBusquedaActionPerformed(evt);
			}
			//BUSQUEDA GENERAL CAMPO
			else if(sTipo.equals("fecha_mantenimientoDetalleActivoFijoBusqueda")) {
				this.jButtonfecha_mantenimientoDetalleActivoFijoBusquedaActionPerformed(evt);
			}
			//BUSQUEDA GENERAL CAMPO
			else if(sTipo.equals("fecha_correccionDetalleActivoFijoBusqueda")) {
				this.jButtonfecha_correccionDetalleActivoFijoBusquedaActionPerformed(evt);
			}
			//BUSQUEDA GENERAL CAMPO
			else if(sTipo.equals("fecha_depreciacionDetalleActivoFijoBusqueda")) {
				this.jButtonfecha_depreciacionDetalleActivoFijoBusquedaActionPerformed(evt);
			}
			//BUSQUEDA GENERAL CAMPO
			else if(sTipo.equals("claveDetalleActivoFijoBusqueda")) {
				this.jButtonclaveDetalleActivoFijoBusquedaActionPerformed(evt);
			}
			//BUSQUEDA GENERAL CAMPO
			else if(sTipo.equals("marcaDetalleActivoFijoBusqueda")) {
				this.jButtonmarcaDetalleActivoFijoBusquedaActionPerformed(evt);
			}
			//BUSQUEDA GENERAL CAMPO
			else if(sTipo.equals("modeloDetalleActivoFijoBusqueda")) {
				this.jButtonmodeloDetalleActivoFijoBusquedaActionPerformed(evt);
			}
			//BUSQUEDA GENERAL CAMPO
			else if(sTipo.equals("colorDetalleActivoFijoBusqueda")) {
				this.jButtoncolorDetalleActivoFijoBusquedaActionPerformed(evt);
			}
			//BUSQUEDA GENERAL CAMPO
			else if(sTipo.equals("fechaDetalleActivoFijoBusqueda")) {
				this.jButtonfechaDetalleActivoFijoBusquedaActionPerformed(evt);
			}
			//BUSQUEDA GENERAL CAMPO
			else if(sTipo.equals("valor_utilDetalleActivoFijoBusqueda")) {
				this.jButtonvalor_utilDetalleActivoFijoBusquedaActionPerformed(evt);
			}
			//BUSQUEDA GENERAL CAMPO
			else if(sTipo.equals("costo_de_compraDetalleActivoFijoBusqueda")) {
				this.jButtoncosto_de_compraDetalleActivoFijoBusquedaActionPerformed(evt);
			}
			//BUSQUEDA GENERAL CAMPO
			else if(sTipo.equals("vida_utilDetalleActivoFijoBusqueda")) {
				this.jButtonvida_utilDetalleActivoFijoBusquedaActionPerformed(evt);
			}
			//BUSQUEDA GENERAL CAMPO
			else if(sTipo.equals("valor_residualDetalleActivoFijoBusqueda")) {
				this.jButtonvalor_residualDetalleActivoFijoBusquedaActionPerformed(evt);
			}
			//BUSQUEDA GENERAL CAMPO
			else if(sTipo.equals("cantidadDetalleActivoFijoBusqueda")) {
				this.jButtoncantidadDetalleActivoFijoBusquedaActionPerformed(evt);
			}
			//BUSQUEDA GENERAL CAMPO
			else if(sTipo.equals("nombre_propietarioDetalleActivoFijoBusqueda")) {
				this.jButtonnombre_propietarioDetalleActivoFijoBusquedaActionPerformed(evt);
			}
			//BUSQUEDA GENERAL CAMPO
			else if(sTipo.equals("responsableDetalleActivoFijoBusqueda")) {
				this.jButtonresponsableDetalleActivoFijoBusquedaActionPerformed(evt);
			}
			//BUSQUEDA GENERAL CAMPO
			else if(sTipo.equals("path_fotoDetalleActivoFijoBusqueda")) {
				this.jButtonpath_fotoDetalleActivoFijoBusquedaActionPerformed(evt);
			}
			//BUSQUEDA GENERAL CAMPO
			else if(sTipo.equals("numero_comprobanteDetalleActivoFijoBusqueda")) {
				this.jButtonnumero_comprobanteDetalleActivoFijoBusquedaActionPerformed(evt);
			}
			//BUSQUEDA GENERAL CAMPO
			else if(sTipo.equals("referenciaDetalleActivoFijoBusqueda")) {
				this.jButtonreferenciaDetalleActivoFijoBusquedaActionPerformed(evt);
			}
			//BUSQUEDA GENERAL CAMPO
			else if(sTipo.equals("valor_cotizacionDetalleActivoFijoBusqueda")) {
				this.jButtonvalor_cotizacionDetalleActivoFijoBusquedaActionPerformed(evt);
			}
			//BUSQUEDA GENERAL CAMPO
			else if(sTipo.equals("con_partesDetalleActivoFijoBusqueda")) {
				this.jButtoncon_partesDetalleActivoFijoBusquedaActionPerformed(evt);
			}
			//BUSQUEDA GENERAL CAMPO
			else if(sTipo.equals("con_garantiaDetalleActivoFijoBusqueda")) {
				this.jButtoncon_garantiaDetalleActivoFijoBusquedaActionPerformed(evt);
			}
			//BUSQUEDA GENERAL CAMPO
			else if(sTipo.equals("con_existenciaDetalleActivoFijoBusqueda")) {
				this.jButtoncon_existenciaDetalleActivoFijoBusquedaActionPerformed(evt);
			}
			//BUSQUEDA GENERAL CAMPO
			else if(sTipo.equals("fecha_bajaDetalleActivoFijoBusqueda")) {
				this.jButtonfecha_bajaDetalleActivoFijoBusquedaActionPerformed(evt);
			}
			//BUSQUEDA GENERAL CAMPO
			else if(sTipo.equals("path_foto2DetalleActivoFijoBusqueda")) {
				this.jButtonpath_foto2DetalleActivoFijoBusquedaActionPerformed(evt);
			}
			
			
			else if(sTipo.equals("id_clienteDetalleActivoFijo")) {
				this.jButtonid_clienteDetalleActivoFijoActionPerformed(evt);
			}
			
			
			else if(sTipo.equals("FK_IdClienteDetalleActivoFijo")) {
				this.jButtonFK_IdClienteDetalleActivoFijoActionPerformed(evt);
			}
			else if(sTipo.equals("FK_IdDetalleGrupoActivoFijoDetalleActivoFijo")) {
				this.jButtonFK_IdDetalleGrupoActivoFijoDetalleActivoFijoActionPerformed(evt);
			}
			else if(sTipo.equals("FK_IdEstadoActivoFijoDetalleActivoFijo")) {
				this.jButtonFK_IdEstadoActivoFijoDetalleActivoFijoActionPerformed(evt);
			}
			else if(sTipo.equals("FK_IdPartidaPresuDetalleActivoFijo")) {
				this.jButtonFK_IdPartidaPresuDetalleActivoFijoActionPerformed(evt);
			}
			else if(sTipo.equals("FK_IdSubGrupoActivoFijoDetalleActivoFijo")) {
				this.jButtonFK_IdSubGrupoActivoFijoDetalleActivoFijoActionPerformed(evt);
			}
			else if(sTipo.equals("FK_IdTipoActivoFijoEmpresaDetalleActivoFijo")) {
				this.jButtonFK_IdTipoActivoFijoEmpresaDetalleActivoFijoActionPerformed(evt);
			}
			else if(sTipo.equals("FK_IdTipoDepreciacionEmpresaDetalleActivoFijo")) {
				this.jButtonFK_IdTipoDepreciacionEmpresaDetalleActivoFijoActionPerformed(evt);
			}
			else if(sTipo.equals("FK_IdTipoRamoActivoFijoDetalleActivoFijo")) {
				this.jButtonFK_IdTipoRamoActivoFijoDetalleActivoFijoActionPerformed(evt);
			}
			
			;
			
			
			DetalleActivoFijoBeanSwingJInternalFrameAdditional.procesarEventosVista(this.parametroGeneralUsuario,this.moduloActual,this.opcionActual,this.usuarioActual,this,FuncionTipo.AFTER,ControlTipo.BUTTON,EventoTipo.CLIC,EventoSubTipo.CLICKED,sTipo,this.detalleactivofijo,new Object(),this.detalleactivofijoParameterGeneral,this.detalleactivofijoReturnGeneral);
			
		} catch(Exception e) {
  			FuncionesSwing.manageException2(this, e,logger,DetalleActivoFijoConstantesFunciones.CLASSNAME);
			
  		} finally {
      		this.finishProcessDetalleActivoFijo();
      	}
    }
	
	//FUNCIONA AL APLASTAR ENTER
	public void jTextFieldActionPerformedGeneral(String sTipo,ActionEvent evt) { 	  
		try {
			if(this.permiteManejarEventosControl()) {
				//SELECCIONA FILA A OBJETO ACTUAL			
				this.seleccionarFilaTablaDetalleActivoFijoActual();
			
				EventoGlobalTipo eventoGlobalTipo=EventoGlobalTipo.CONTROL_CHANGE;
				
				Boolean esControlTabla=false;
				Container containerParent=null;
				JTextField jTextField=null;
				
				
				//PARAMETROS LLAMAR FUNCION PARENT
				GeneralEntityParameterGeneral generalEntityParameterGeneral=new GeneralEntityParameterGeneral();			
				Boolean esUsoDesdeHijoLocal=false;
				Boolean conIrServidorAplicacionParent=false;	
				ArrayList<String> arrClasses=new ArrayList<String>();			
				//PARAMETROS LLAMAR FUNCION PARENT_FIN
				
				/*
				if(this.esUsoDesdeHijo) {
					eventoGlobalTipo=EventoGlobalTipo.FORM_HIJO_ACTUALIZAR;
				}
				*/
				
				ArrayList<Classe> classes=new ArrayList<Classe>();
				
				jTextField=(JTextField)evt.getSource();
				
				containerParent=jTextField.getParent();
						
				if(containerParent!=null && containerParent.getClass().equals(JTableMe.class)) {
					esControlTabla=true;
				}
						
				this.esControlTabla=esControlTabla;
				
				
				this.actualizarInformacion("EVENTO_CONTROL",false,this.detalleactivofijo);
				
				this.actualizarInformacion("INFO_PADRE",false,this.detalleactivofijo);
				
				DetalleActivoFijoBeanSwingJInternalFrameAdditional.procesarEventosVista(this.parametroGeneralUsuario,this.moduloActual,this.opcionActual,this.usuarioActual,this,FuncionTipo.BEFORE,ControlTipo.TEXTBOX,EventoTipo.CHANGE,EventoSubTipo.CHANGED,sTipo,this.detalleactivofijo,new Object(),this.detalleactivofijoParameterGeneral,this.detalleactivofijoReturnGeneral);
				
				


				
				DetalleActivoFijoBeanSwingJInternalFrameAdditional.procesarEventosVista(this.parametroGeneralUsuario,this.moduloActual,this.opcionActual,this.usuarioActual,this,FuncionTipo.AFTER,ControlTipo.TEXTBOX,EventoTipo.CHANGE,EventoSubTipo.CHANGED,sTipo,this.detalleactivofijo,new Object(),this.detalleactivofijoParameterGeneral,this.detalleactivofijoReturnGeneral);
				
				
				if(esUsoDesdeHijoLocal) {
					Long id=0L;
					
					generalEntityParameterGeneral.setEventoGlobalTipo(EventoGlobalTipo.FORM_HIJO_ACTUALIZAR);
					generalEntityParameterGeneral.setsDominio("Formulario");
					generalEntityParameterGeneral.setsDominioTipo(DetalleActivoFijo.class.getName());
					
					if(this.jInternalFrameParent!=null) {
						this.jInternalFrameParent.setEventoParentGeneral(esUsoDesdeHijoLocal,"Formulario",DetalleActivoFijo.class.getName(),sTipo,"TEXTFIELD",esControlTabla,conIrServidorAplicacionParent,
							id,jTextField, EventoGlobalTipo.FORM_HIJO_ACTUALIZAR,ControlTipo.TEXTBOX,EventoTipo.CHANGE,EventoSubTipo.CHANGED,arrClasses,
							evt,generalEntityParameterGeneral,null);
					}
				}			
				}
				
			} catch(Exception e) {
  				FuncionesSwing.manageException2(this, e,logger,DetalleActivoFijoConstantesFunciones.CLASSNAME);
  			}
    }
	
	public Boolean existeCambioValor(ControlTipo controlTipo,String sTipo) throws Exception {
		Boolean existeCambio=true;
		
		try {
			DetalleActivoFijo detalleactivofijoLocal=null;
			
			if(!this.getEsControlTabla()) {
				detalleactivofijoLocal=this.detalleactivofijo;
			} else {
				detalleactivofijoLocal=this.detalleactivofijoAnterior;
			}
			
			if(controlTipo.equals(ControlTipo.TEXTBOX)) {
				


			}
		
		} catch(Exception e) {
  			FuncionesSwing.manageException2(this, e,logger,DetalleActivoFijoConstantesFunciones.CLASSNAME);
  		}
		
		return existeCambio;
	}
	
	public void jTextFieldFocusLostGeneral(String sTipo,java.awt.event.FocusEvent evt) { 	  
		try {
			if(this.permiteManejarEventosControl() && this.existeCambioValor(ControlTipo.TEXTBOX,sTipo)) {
				
				EventoGlobalTipo eventoGlobalTipo=EventoGlobalTipo.CONTROL_CHANGE;
				
				Boolean esControlTabla=false;
				JTextField jTextField=null;
				Container containerParent=null;
				Component componentOpposite=null;
				
				//PARAMETROS LLAMAR FUNCION PARENT
				GeneralEntityParameterGeneral generalEntityParameterGeneral=new GeneralEntityParameterGeneral();			
				Boolean esUsoDesdeHijoLocal=false;
				Boolean conIrServidorAplicacionParent=false;	
				ArrayList<String> arrClasses=new ArrayList<String>();			
				//PARAMETROS LLAMAR FUNCION PARENT_FIN
				
				/*
				if(this.esUsoDesdeHijo) {
					eventoGlobalTipo=EventoGlobalTipo.FORM_HIJO_ACTUALIZAR;
				}
				*/
				
				ArrayList<Classe> classes=new ArrayList<Classe>();
				
				jTextField=(JTextField)evt.getSource();
				
				containerParent=jTextField.getParent();
						
				componentOpposite=evt.getOppositeComponent();
				
				if((containerParent!=null && containerParent.getClass().equals(JTableMe.class))
					|| (componentOpposite!=null && componentOpposite.getClass().equals(JTableMe.class))
				) {					
					esControlTabla=true;
				}
				
				this.esControlTabla=esControlTabla;
				
				
				this.actualizarInformacion("EVENTO_CONTROL",false,this.detalleactivofijo);
				
				this.actualizarInformacion("INFO_PADRE",false,this.detalleactivofijo);
				
				DetalleActivoFijoBeanSwingJInternalFrameAdditional.procesarEventosVista(this.parametroGeneralUsuario,this.moduloActual,this.opcionActual,this.usuarioActual,this,FuncionTipo.BEFORE,ControlTipo.TEXTBOX,EventoTipo.CHANGE,EventoSubTipo.CHANGED,sTipo,this.detalleactivofijo,new Object(),this.detalleactivofijoParameterGeneral,this.detalleactivofijoReturnGeneral);
							
				
				


				
				DetalleActivoFijoBeanSwingJInternalFrameAdditional.procesarEventosVista(this.parametroGeneralUsuario,this.moduloActual,this.opcionActual,this.usuarioActual,this,FuncionTipo.AFTER,ControlTipo.TEXTBOX,EventoTipo.CHANGE,EventoSubTipo.CHANGED,sTipo,this.detalleactivofijo,new Object(),this.detalleactivofijoParameterGeneral,this.detalleactivofijoReturnGeneral);
				
				
				if(esUsoDesdeHijoLocal) {
					Long id=0L;
					
					generalEntityParameterGeneral.setEventoGlobalTipo(EventoGlobalTipo.FORM_HIJO_ACTUALIZAR);
					generalEntityParameterGeneral.setsDominio("Formulario");
					generalEntityParameterGeneral.setsDominioTipo(DetalleActivoFijo.class.getName());
					
					if(this.jInternalFrameParent!=null) {
						this.jInternalFrameParent.setEventoParentGeneral(esUsoDesdeHijoLocal,"Formulario",DetalleActivoFijo.class.getName(),sTipo,"TEXTFIELD",esControlTabla,conIrServidorAplicacionParent,
							id,jTextField, EventoGlobalTipo.FORM_HIJO_ACTUALIZAR,ControlTipo.TEXTBOX,EventoTipo.CHANGE,EventoSubTipo.CHANGED,arrClasses,
							evt,generalEntityParameterGeneral,null);
					}
				}			
			}
			
		} catch(Exception e) {
  			FuncionesSwing.manageException2(this, e,logger,DetalleActivoFijoConstantesFunciones.CLASSNAME);
  		}
    }
	
	public void jTextFieldFocusGainedGeneral(String sTipo,java.awt.event.FocusEvent evt) { 	  
		try {
			//SELECCIONA FILA A OBJETO ACTUAL			
			this.seleccionarFilaTablaDetalleActivoFijoActual();
			
			//SELECCIONA FILA A OBJETO ANTERIOR
			Integer intSelectedRow = this.jTableDatosDetalleActivoFijo.getSelectedRow();
					
			if(intSelectedRow!=null && intSelectedRow>-1) {
				//ARCHITECTURE
				if(Constantes.ISUSAEJBLOGICLAYER) {
					this.detalleactivofijoAnterior =(DetalleActivoFijo) this.detalleactivofijoLogic.getDetalleActivoFijos().toArray()[this.jTableDatosDetalleActivoFijo.convertRowIndexToModel(intSelectedRow)];
				} else if(Constantes.ISUSAEJBREMOTE || Constantes.ISUSAEJBHOME ) {
					this.detalleactivofijoAnterior =(DetalleActivoFijo) this.detalleactivofijos.toArray()[this.jTableDatosDetalleActivoFijo.convertRowIndexToModel(intSelectedRow)];
				}
				//ARCHITECTURE
				
				//System.out.println(this.banco);
			}
			
		} catch(Exception e) {
  			FuncionesSwing.manageException2(this, e,logger,DetalleActivoFijoConstantesFunciones.CLASSNAME);
  		}
    }	
	
	//CUANDO SE CAMBIA ALGUN FORMATO(TIPO DE LETRA,NEGRILLA,ETC)
	public void jTextFieldChangedUpdateGeneral(String sTipo,JTextField jTextField,DocumentEvent evt) { 	  
		try {
			/*
			EventoGlobalTipo eventoGlobalTipo=EventoGlobalTipo.CONTROL_CHANGE;
			
			//System.out.println("UPDATE");
			
			Boolean esControlTabla=false;
			//JTextField jTextField=null;
			Container containerParent=null;
			Component componentOpposite=null;
			
			if(this.esUsoDesdeHijo) {
				eventoGlobalTipo=EventoGlobalTipo.FORM_HIJO_ACTUALIZAR;
			}
			
			DetalleActivoFijoBeanSwingJInternalFrameAdditional.procesarEventosVista(this.parametroGeneralUsuario,this.moduloActual,this.opcionActual,this.usuarioActual,this,FuncionTipo.BEFORE,ControlTipo.TEXTBOX,EventoTipo.CHANGE,EventoSubTipo.CHANGED,sTipo,this.detalleactivofijo,new Object(),this.detalleactivofijoParameterGeneral,this.detalleactivofijoReturnGeneral);
			
			ArrayList<Classe> classes=new ArrayList<Classe>();
			
			//jTextField=(JTextField)evt.getSource();
			
			containerParent=jTextField.getParent();
					
			componentOpposite=null;//evt.getOppositeComponent();
			
			if((containerParent!=null && containerParent.getClass().equals(JTableMe.class))
				|| (componentOpposite!=null && componentOpposite.getClass().equals(JTableMe.class))
			) {					
				esControlTabla=true;
			}
			
			this.esControlTabla=esControlTabla;
			
			


			
			DetalleActivoFijoBeanSwingJInternalFrameAdditional.procesarEventosVista(this.parametroGeneralUsuario,this.moduloActual,this.opcionActual,this.usuarioActual,this,FuncionTipo.AFTER,ControlTipo.TEXTBOX,EventoTipo.CHANGE,EventoSubTipo.CHANGED,sTipo,this.detalleactivofijo,new Object(),this.detalleactivofijoParameterGeneral,this.detalleactivofijoReturnGeneral);
			*/
  		} catch(Exception e) {
  			FuncionesSwing.manageException2(this, e,logger,DetalleActivoFijoConstantesFunciones.CLASSNAME);
  		}
    }
	
	//CUANDO SE QUITA ALGUN CARACTER
	public void jTextFieldRemoveUpdateGeneral(String sTipo,JTextField jTextField,DocumentEvent evt) { 	  
		try {
			//System.out.println("REMOVE");
			
  		} catch(Exception e) {
  			FuncionesSwing.manageException2(this, e,logger,DetalleActivoFijoConstantesFunciones.CLASSNAME);
  		}
    }
	
	//CUANDO SE INGRESA ALGUN CARACTER
	public void jTextFieldInsertUpdateGeneral(String sTipo,JTextField jTextField,DocumentEvent evt) { 	  
		try {
			//System.out.println("INSERT");
			
  		} catch(Exception e) {
  			FuncionesSwing.manageException2(this, e,logger,DetalleActivoFijoConstantesFunciones.CLASSNAME);
  		}
    }
	
	//FUNCIONA AL APLASTAR ENTER
	public void jFormattedTextFieldActionPerformedGeneral(String sTipo,ActionEvent evt) { 	  
		try {
			if(this.permiteManejarEventosControl()) {
				
				//SELECCIONA FILA A OBJETO ACTUAL			
				this.seleccionarFilaTablaDetalleActivoFijoActual();
				
				EventoGlobalTipo eventoGlobalTipo=EventoGlobalTipo.CONTROL_CHANGE;
				
				Boolean esControlTabla=false;
				Container containerParent=null;
				Container containerParentAux=null;
				JFormattedTextField JFormattedTextField=null;
				Component componentOpposite=null;
				
				//PARAMETROS LLAMAR FUNCION PARENT
				GeneralEntityParameterGeneral generalEntityParameterGeneral=new GeneralEntityParameterGeneral();			
				Boolean esUsoDesdeHijoLocal=false;
				Boolean conIrServidorAplicacionParent=false;	
				ArrayList<String> arrClasses=new ArrayList<String>();			
				//PARAMETROS LLAMAR FUNCION PARENT_FIN
				
				/*
				if(this.esUsoDesdeHijo) {
					eventoGlobalTipo=EventoGlobalTipo.FORM_HIJO_ACTUALIZAR;
				}
				*/
				ArrayList<Classe> classes=new ArrayList<Classe>();
				
				JFormattedTextField=(JFormattedTextField)evt.getSource();
				
				containerParentAux=JFormattedTextField.getParent();
				
				if(containerParentAux!=null && containerParentAux.getClass().equals(JDateChooser.class)) {
					containerParent=containerParentAux.getParent();
				}
				
				componentOpposite=null;//evt.getOppositeComponent();
				
				if((containerParent!=null && containerParent.getClass().equals(JTableMe.class))
					|| (componentOpposite!=null && componentOpposite.getClass().equals(JTableMe.class))
				) {					
					esControlTabla=true;
				}
				
				this.esControlTabla=esControlTabla;
				
				
				this.actualizarInformacion("EVENTO_CONTROL",false,this.detalleactivofijo);
				
				this.actualizarInformacion("INFO_PADRE",false,this.detalleactivofijo);
				
				DetalleActivoFijoBeanSwingJInternalFrameAdditional.procesarEventosVista(this.parametroGeneralUsuario,this.moduloActual,this.opcionActual,this.usuarioActual,this,FuncionTipo.BEFORE,ControlTipo.DATE,EventoTipo.CHANGE,EventoSubTipo.CHANGED,sTipo,this.detalleactivofijo,new Object(),this.detalleactivofijoParameterGeneral,this.detalleactivofijoReturnGeneral);
								
						
				


				
				DetalleActivoFijoBeanSwingJInternalFrameAdditional.procesarEventosVista(this.parametroGeneralUsuario,this.moduloActual,this.opcionActual,this.usuarioActual,this,FuncionTipo.AFTER,ControlTipo.DATE,EventoTipo.CHANGE,EventoSubTipo.CHANGED,sTipo,this.detalleactivofijo,new Object(),this.detalleactivofijoParameterGeneral,this.detalleactivofijoReturnGeneral);
				
				
				if(esUsoDesdeHijoLocal) {
					Long id=0L;
					
					generalEntityParameterGeneral.setEventoGlobalTipo(EventoGlobalTipo.FORM_HIJO_ACTUALIZAR);
					generalEntityParameterGeneral.setsDominio("Formulario");
					generalEntityParameterGeneral.setsDominioTipo(DetalleActivoFijo.class.getName());
					
					if(this.jInternalFrameParent!=null) {
						this.jInternalFrameParent.setEventoParentGeneral(esUsoDesdeHijoLocal,"Formulario",DetalleActivoFijo.class.getName(),sTipo,"DATE",esControlTabla,conIrServidorAplicacionParent,
							id,JFormattedTextField, EventoGlobalTipo.FORM_HIJO_ACTUALIZAR,ControlTipo.DATE,EventoTipo.CHANGE,EventoSubTipo.CHANGED,arrClasses,
							evt,generalEntityParameterGeneral,null);
					}
				}			
			}
			
		} catch(Exception e) {
  			FuncionesSwing.manageException2(this, e,logger,DetalleActivoFijoConstantesFunciones.CLASSNAME);
  		}
    }
	
	public void jFormattedTextFieldFocusLostGeneral(String sTipo,java.awt.event.FocusEvent evt) { 	  
		try {
			if(this.permiteManejarEventosControl() && this.existeCambioValor(ControlTipo.TEXTBOX,sTipo)) {
				EventoGlobalTipo eventoGlobalTipo=EventoGlobalTipo.CONTROL_CHANGE;
				
				Boolean esControlTabla=false;
				JTextField jTextField=null;
				Container containerParent=null;
				Container containerParentAux=null;
				Component componentOpposite=null;
				
				
				//PARAMETROS LLAMAR FUNCION PARENT
				GeneralEntityParameterGeneral generalEntityParameterGeneral=new GeneralEntityParameterGeneral();			
				Boolean esUsoDesdeHijoLocal=false;
				Boolean conIrServidorAplicacionParent=false;	
				ArrayList<String> arrClasses=new ArrayList<String>();			
				//PARAMETROS LLAMAR FUNCION PARENT_FIN
				
				/*
				if(this.esUsoDesdeHijo) {
					eventoGlobalTipo=EventoGlobalTipo.FORM_HIJO_ACTUALIZAR;
				}
				*/
				
				ArrayList<Classe> classes=new ArrayList<Classe>();
				
				jTextField=(JTextField)evt.getSource();
				
				containerParentAux=jTextField.getParent();
						
				if(containerParentAux!=null && containerParentAux.getClass().equals(JDateChooser.class)) {
					containerParent=containerParentAux.getParent();
				}
				
				componentOpposite=evt.getOppositeComponent();
				
				if((containerParent!=null && containerParent.getClass().equals(JTableMe.class))
					|| (componentOpposite!=null && componentOpposite.getClass().equals(JTableMe.class))
				) {					
					esControlTabla=true;
				}
				
				this.esControlTabla=esControlTabla;
				
				
				this.actualizarInformacion("EVENTO_CONTROL",false,this.detalleactivofijo);
				
				this.actualizarInformacion("INFO_PADRE",false,this.detalleactivofijo);
				
				DetalleActivoFijoBeanSwingJInternalFrameAdditional.procesarEventosVista(this.parametroGeneralUsuario,this.moduloActual,this.opcionActual,this.usuarioActual,this,FuncionTipo.BEFORE,ControlTipo.DATE,EventoTipo.CHANGE,EventoSubTipo.CHANGED,sTipo,this.detalleactivofijo,new Object(),this.detalleactivofijoParameterGeneral,this.detalleactivofijoReturnGeneral);
								
				
				


				
				DetalleActivoFijoBeanSwingJInternalFrameAdditional.procesarEventosVista(this.parametroGeneralUsuario,this.moduloActual,this.opcionActual,this.usuarioActual,this,FuncionTipo.AFTER,ControlTipo.DATE,EventoTipo.CHANGE,EventoSubTipo.CHANGED,sTipo,this.detalleactivofijo,new Object(),this.detalleactivofijoParameterGeneral,this.detalleactivofijoReturnGeneral);
				
				
				if(esUsoDesdeHijoLocal) {
					Long id=0L;
					
					generalEntityParameterGeneral.setEventoGlobalTipo(EventoGlobalTipo.FORM_HIJO_ACTUALIZAR);
					generalEntityParameterGeneral.setsDominio("Formulario");
					generalEntityParameterGeneral.setsDominioTipo(DetalleActivoFijo.class.getName());
					
					if(this.jInternalFrameParent!=null) {
						this.jInternalFrameParent.setEventoParentGeneral(esUsoDesdeHijoLocal,"Formulario",DetalleActivoFijo.class.getName(),sTipo,"TEXTFIELD",esControlTabla,conIrServidorAplicacionParent,
							id,jTextField, EventoGlobalTipo.FORM_HIJO_ACTUALIZAR,ControlTipo.TEXTBOX,EventoTipo.CHANGE,EventoSubTipo.CHANGED,arrClasses,
							evt,generalEntityParameterGeneral,null);
					}
				}			
			}
			
		} catch(Exception e) {
  			FuncionesSwing.manageException2(this, e,logger,DetalleActivoFijoConstantesFunciones.CLASSNAME);
  		}
    }
	
	public void jFormattedTextFieldFocusGainedGeneral(String sTipo,java.awt.event.FocusEvent evt) { 	  
		try {
			//SELECCIONA FILA A OBJETO ACTUAL			
			this.seleccionarFilaTablaDetalleActivoFijoActual();
			
			//SELECCIONA FILA A OBJETO ANTERIOR
			Integer intSelectedRow = this.jTableDatosDetalleActivoFijo.getSelectedRow();
					
			if(intSelectedRow!=null && intSelectedRow>-1) {
				//ARCHITECTURE
				if(Constantes.ISUSAEJBLOGICLAYER) {
					this.detalleactivofijoAnterior =(DetalleActivoFijo) this.detalleactivofijoLogic.getDetalleActivoFijos().toArray()[this.jTableDatosDetalleActivoFijo.convertRowIndexToModel(intSelectedRow)];
				} else if(Constantes.ISUSAEJBREMOTE || Constantes.ISUSAEJBHOME ) {
					this.detalleactivofijoAnterior =(DetalleActivoFijo) this.detalleactivofijos.toArray()[this.jTableDatosDetalleActivoFijo.convertRowIndexToModel(intSelectedRow)];
				}
				//ARCHITECTURE
				
				//System.out.println(this.banco);
			}
			
		} catch(Exception e) {
  			FuncionesSwing.manageException2(this, e,logger,DetalleActivoFijoConstantesFunciones.CLASSNAME);
  		}
    }	
	
	public void jDateChooserFocusLostGeneral(String sTipo,java.awt.event.FocusEvent evt) { 	  
		try {
			if(this.permiteManejarEventosControl() && this.existeCambioValor(ControlTipo.DATE,sTipo)) {
				this.actualizarInformacion("EVENTO_CONTROL",false,this.detalleactivofijo);
				
				this.actualizarInformacion("INFO_PADRE",false,this.detalleactivofijo);
			}	
		} catch(Exception e) {
  			FuncionesSwing.manageException2(this, e,logger,DetalleActivoFijoConstantesFunciones.CLASSNAME);
  		}
    }	
	
	public void jDateChooserFocusGainedGeneral(String sTipo,java.awt.event.FocusEvent evt) { 	  
		try {
			//SELECCIONA FILA A OBJETO ACTUAL			
			this.seleccionarFilaTablaDetalleActivoFijoActual();
			
			//SELECCIONA FILA A OBJETO ANTERIOR
			Integer intSelectedRow = this.jTableDatosDetalleActivoFijo.getSelectedRow();
					
			if(intSelectedRow!=null && intSelectedRow>-1) {
				//ARCHITECTURE
				if(Constantes.ISUSAEJBLOGICLAYER) {
					this.detalleactivofijoAnterior =(DetalleActivoFijo) this.detalleactivofijoLogic.getDetalleActivoFijos().toArray()[this.jTableDatosDetalleActivoFijo.convertRowIndexToModel(intSelectedRow)];
				} else if(Constantes.ISUSAEJBREMOTE || Constantes.ISUSAEJBHOME ) {
					this.detalleactivofijoAnterior =(DetalleActivoFijo) this.detalleactivofijos.toArray()[this.jTableDatosDetalleActivoFijo.convertRowIndexToModel(intSelectedRow)];
				}
				//ARCHITECTURE
				
				//System.out.println(this.banco);
			}
		} catch(Exception e) {
  			FuncionesSwing.manageException2(this, e,logger,DetalleActivoFijoConstantesFunciones.CLASSNAME);
  		}
    }	
	
	public void jDateChooserActionPerformedGeneral(String sTipo,ActionEvent evt) { 	  
		try {
			
			//SELECCIONA FILA A OBJETO ACTUAL			
			this.seleccionarFilaTablaDetalleActivoFijoActual();
				
			this.actualizarInformacion("EVENTO_CONTROL",false,this.detalleactivofijo);
			
			this.actualizarInformacion("INFO_PADRE",false,this.detalleactivofijo);
				
		} catch(Exception e) {
  			FuncionesSwing.manageException2(this, e,logger,DetalleActivoFijoConstantesFunciones.CLASSNAME);
  		}
    }	
	
	public void jTextAreaFocusLostGeneral(String sTipo,java.awt.event.FocusEvent evt) { 	  
		try {
			if(this.permiteManejarEventosControl() && this.existeCambioValor(ControlTipo.TEXTAREA,sTipo)) {
				EventoGlobalTipo eventoGlobalTipo=EventoGlobalTipo.CONTROL_CHANGE;
				
				Boolean esControlTabla=false;
				JTextArea jTextArea=null;
				Container containerParent=null;
				Component componentOpposite=null;
				
				//PARAMETROS LLAMAR FUNCION PARENT
				GeneralEntityParameterGeneral generalEntityParameterGeneral=new GeneralEntityParameterGeneral();			
				Boolean esUsoDesdeHijoLocal=false;
				Boolean conIrServidorAplicacionParent=false;	
				ArrayList<String> arrClasses=new ArrayList<String>();			
				//PARAMETROS LLAMAR FUNCION PARENT_FIN
				
				/*
				if(this.esUsoDesdeHijo) {
					eventoGlobalTipo=EventoGlobalTipo.FORM_HIJO_ACTUALIZAR;
				}
				*/
				
				ArrayList<Classe> classes=new ArrayList<Classe>();
				
				jTextArea=(JTextArea)evt.getSource();
				
				containerParent=jTextArea.getParent();
				componentOpposite=evt.getOppositeComponent();
				
				if((containerParent!=null && containerParent.getClass().equals(JTableMe.class))
					|| (componentOpposite!=null && componentOpposite.getClass().equals(JTableMe.class))
				) {
					esControlTabla=true;
				}
				
				this.esControlTabla=esControlTabla;
				
				
				this.actualizarInformacion("EVENTO_CONTROL",false,this.detalleactivofijo);
				
				this.actualizarInformacion("INFO_PADRE",false,this.detalleactivofijo);
				
				DetalleActivoFijoBeanSwingJInternalFrameAdditional.procesarEventosVista(this.parametroGeneralUsuario,this.moduloActual,this.opcionActual,this.usuarioActual,this,FuncionTipo.BEFORE,ControlTipo.TEXTAREA,EventoTipo.CHANGE,EventoSubTipo.CHANGED,sTipo,this.detalleactivofijo,new Object(),this.detalleactivofijoParameterGeneral,this.detalleactivofijoReturnGeneral);
							
				
				


				
				DetalleActivoFijoBeanSwingJInternalFrameAdditional.procesarEventosVista(this.parametroGeneralUsuario,this.moduloActual,this.opcionActual,this.usuarioActual,this,FuncionTipo.AFTER,ControlTipo.TEXTAREA,EventoTipo.CHANGE,EventoSubTipo.CHANGED,sTipo,this.detalleactivofijo,new Object(),this.detalleactivofijoParameterGeneral,this.detalleactivofijoReturnGeneral);
				
				
				if(esUsoDesdeHijoLocal) {
					Long id=0L;
					
					generalEntityParameterGeneral.setEventoGlobalTipo(EventoGlobalTipo.FORM_HIJO_ACTUALIZAR);
					generalEntityParameterGeneral.setsDominio("Formulario");
					generalEntityParameterGeneral.setsDominioTipo(DetalleActivoFijo.class.getName());
					
					if(this.jInternalFrameParent!=null) {
						this.jInternalFrameParent.setEventoParentGeneral(esUsoDesdeHijoLocal,"Formulario",DetalleActivoFijo.class.getName(),sTipo,"TEXTAREA",esControlTabla,conIrServidorAplicacionParent,
							id,jTextArea, EventoGlobalTipo.FORM_HIJO_ACTUALIZAR,ControlTipo.TEXTAREA,EventoTipo.CHANGE,EventoSubTipo.CHANGED,arrClasses,
							evt,generalEntityParameterGeneral,null);
					}
				}			
			}
			
		} catch(Exception e) {
  			FuncionesSwing.manageException2(this, e,logger,DetalleActivoFijoConstantesFunciones.CLASSNAME);
  		}
    }
	
	public void jTextAreaFocusGainedGeneral(String sTipo,java.awt.event.FocusEvent evt) { 	  
		try {
			if(this.permiteManejarEventosControl()) {
				//SELECCIONA FILA A OBJETO ACTUAL			
				this.seleccionarFilaTablaDetalleActivoFijoActual();
			
				//SELECCIONA FILA A OBJETO ANTERIOR
				Integer intSelectedRow = this.jTableDatosDetalleActivoFijo.getSelectedRow();
						
				if(intSelectedRow!=null && intSelectedRow>-1) {
					//ARCHITECTURE
					if(Constantes.ISUSAEJBLOGICLAYER) {
						this.detalleactivofijoAnterior =(DetalleActivoFijo) this.detalleactivofijoLogic.getDetalleActivoFijos().toArray()[this.jTableDatosDetalleActivoFijo.convertRowIndexToModel(intSelectedRow)];
					} else if(Constantes.ISUSAEJBREMOTE || Constantes.ISUSAEJBHOME ) {
						this.detalleactivofijoAnterior =(DetalleActivoFijo) this.detalleactivofijos.toArray()[this.jTableDatosDetalleActivoFijo.convertRowIndexToModel(intSelectedRow)];
					}
					//ARCHITECTURE
					
					//System.out.println(this.banco);
				}
			}
		} catch(Exception e) {
  			FuncionesSwing.manageException2(this, e,logger,DetalleActivoFijoConstantesFunciones.CLASSNAME);
  		}
    }
	
	public void jTextAreaChangedUpdateGeneral(String sTipo,JTextArea jTextArea,DocumentEvent evt) { 	  
		try {
			/*
			EventoGlobalTipo eventoGlobalTipo=EventoGlobalTipo.CONTROL_CHANGE;
			
			//System.out.println("UPDATE");
			
			Boolean esControlTabla=false;
			//JTextArea jTextArea=null;
			Container containerParent=null;
			Component componentOpposite=null;
			
			if(this.esUsoDesdeHijo) {
				eventoGlobalTipo=EventoGlobalTipo.FORM_HIJO_ACTUALIZAR;
			}
			
			DetalleActivoFijoBeanSwingJInternalFrameAdditional.procesarEventosVista(this.parametroGeneralUsuario,this.moduloActual,this.opcionActual,this.usuarioActual,this,FuncionTipo.BEFORE,ControlTipo.TEXTAREA,EventoTipo.CHANGE,EventoSubTipo.CHANGED,sTipo,this.detalleactivofijo,new Object(),this.detalleactivofijoParameterGeneral,this.detalleactivofijoReturnGeneral);
			
			ArrayList<Classe> classes=new ArrayList<Classe>();
			
			//jTextArea=(JTextArea)evt.getSource();
			
			containerParent=jTextArea.getParent();
			componentOpposite=null;//evt.getOppositeComponent();
			
			if((containerParent!=null && containerParent.getClass().equals(JTableMe.class))
				|| (componentOpposite!=null && componentOpposite.getClass().equals(JTableMe.class))
			) {
				esControlTabla=true;
			}
			
			this.esControlTabla=esControlTabla;
			
			


			
			DetalleActivoFijoBeanSwingJInternalFrameAdditional.procesarEventosVista(this.parametroGeneralUsuario,this.moduloActual,this.opcionActual,this.usuarioActual,this,FuncionTipo.AFTER,ControlTipo.TEXTAREA,EventoTipo.CHANGE,EventoSubTipo.CHANGED,sTipo,this.detalleactivofijo,new Object(),this.detalleactivofijoParameterGeneral,this.detalleactivofijoReturnGeneral);
			
			*/
  		} catch(Exception e) {
  			FuncionesSwing.manageException2(this, e,logger,DetalleActivoFijoConstantesFunciones.CLASSNAME);
  		}
    }
	
	public void jTextAreaRemoveUpdateGeneral(String sTipo,JTextArea jTextArea,DocumentEvent evt) { 	  
		try {
			//System.out.println("REMOVE");
			
  		} catch(Exception e) {
  			FuncionesSwing.manageException2(this, e,logger,DetalleActivoFijoConstantesFunciones.CLASSNAME);
  		}
    }
	
	public void jTextAreaInsertUpdateGeneral(String sTipo,JTextArea jTextArea,DocumentEvent evt) { 	  
		try {
			
			//System.out.println("INSERT");
			
  		} catch(Exception e) {
  			FuncionesSwing.manageException2(this, e,logger,DetalleActivoFijoConstantesFunciones.CLASSNAME);
  		}
    }
	
	//NO EXISTE O NO ES APLICABLE
	public void jTextAreaActionPerformedGeneral(String sTipo,ActionEvent evt) { 	  
		try {
			//SELECCIONA FILA A OBJETO ACTUAL			
			this.seleccionarFilaTablaDetalleActivoFijoActual();
			
			this.actualizarInformacion("EVENTO_CONTROL",false,this.detalleactivofijo);
			
			this.actualizarInformacion("INFO_PADRE",false,this.detalleactivofijo);
				
		} catch(Exception e) {
  			FuncionesSwing.manageException2(this, e,logger,DetalleActivoFijoConstantesFunciones.CLASSNAME);
  		}
    }
	
	public void jLabelFocusLostGeneral(String sTipo,java.awt.event.FocusEvent evt) { 	  
		try {
			if(this.permiteManejarEventosControl()) {
				EventoGlobalTipo eventoGlobalTipo=EventoGlobalTipo.CONTROL_CHANGE;
				
				Boolean esControlTabla=false;
				JLabel jLabel=null;
				Container containerParent=null;
				Component componentOpposite=null;
				
				
				//PARAMETROS LLAMAR FUNCION PARENT
				GeneralEntityParameterGeneral generalEntityParameterGeneral=new GeneralEntityParameterGeneral();			
				Boolean esUsoDesdeHijoLocal=false;
				Boolean conIrServidorAplicacionParent=false;	
				ArrayList<String> arrClasses=new ArrayList<String>();			
				//PARAMETROS LLAMAR FUNCION PARENT_FIN
				
				
				/*
				if(this.esUsoDesdeHijo) {
					eventoGlobalTipo=EventoGlobalTipo.FORM_HIJO_ACTUALIZAR;
				}
				*/
				
				ArrayList<Classe> classes=new ArrayList<Classe>();
				
				jLabel=(JLabel)evt.getSource();
				
				containerParent=jLabel.getParent();
						
				componentOpposite=evt.getOppositeComponent();
				
				if((containerParent!=null && containerParent.getClass().equals(JTableMe.class))
					|| (componentOpposite!=null && componentOpposite.getClass().equals(JTableMe.class))
				) {					
					esControlTabla=true;
				}
				
				this.esControlTabla=esControlTabla;
				
				
				this.actualizarInformacion("EVENTO_CONTROL",false,this.detalleactivofijo);
				
				this.actualizarInformacion("INFO_PADRE",false,this.detalleactivofijo);
				
				DetalleActivoFijoBeanSwingJInternalFrameAdditional.procesarEventosVista(this.parametroGeneralUsuario,this.moduloActual,this.opcionActual,this.usuarioActual,this,FuncionTipo.BEFORE,ControlTipo.TEXTBOX,EventoTipo.CHANGE,EventoSubTipo.CHANGED,sTipo,this.detalleactivofijo,new Object(),this.detalleactivofijoParameterGeneral,this.detalleactivofijoReturnGeneral);
								
				
				


				
				DetalleActivoFijoBeanSwingJInternalFrameAdditional.procesarEventosVista(this.parametroGeneralUsuario,this.moduloActual,this.opcionActual,this.usuarioActual,this,FuncionTipo.AFTER,ControlTipo.TEXTBOX,EventoTipo.CHANGE,EventoSubTipo.CHANGED,sTipo,this.detalleactivofijo,new Object(),this.detalleactivofijoParameterGeneral,this.detalleactivofijoReturnGeneral);
				
				
				if(esUsoDesdeHijoLocal) {
					Long id=0L;
					
					generalEntityParameterGeneral.setEventoGlobalTipo(EventoGlobalTipo.FORM_HIJO_ACTUALIZAR);
					generalEntityParameterGeneral.setsDominio("Formulario");
					generalEntityParameterGeneral.setsDominioTipo(DetalleActivoFijo.class.getName());
					
					if(this.jInternalFrameParent!=null) {
						this.jInternalFrameParent.setEventoParentGeneral(esUsoDesdeHijoLocal,"Formulario",DetalleActivoFijo.class.getName(),sTipo,"TEXTFIELD",esControlTabla,conIrServidorAplicacionParent,
							id,jLabel, EventoGlobalTipo.FORM_HIJO_ACTUALIZAR,ControlTipo.TEXTBOX,EventoTipo.CHANGE,EventoSubTipo.CHANGED,arrClasses,
							evt,generalEntityParameterGeneral,null);
					}
				}			
			}	
			
		} catch(Exception e) {
  			FuncionesSwing.manageException2(this, e,logger,DetalleActivoFijoConstantesFunciones.CLASSNAME);
  		}
    }
	
	public void jLabelFocusGainedGeneral(String sTipo,java.awt.event.FocusEvent evt) { 	  
		try {
			//SELECCIONA FILA A OBJETO ACTUAL			
			this.seleccionarFilaTablaDetalleActivoFijoActual();
			
			//SELECCIONA FILA A OBJETO ANTERIOR
			Integer intSelectedRow = this.jTableDatosDetalleActivoFijo.getSelectedRow();
					
			if(intSelectedRow!=null && intSelectedRow>-1) {
				//ARCHITECTURE
				if(Constantes.ISUSAEJBLOGICLAYER) {
					this.detalleactivofijoAnterior =(DetalleActivoFijo) this.detalleactivofijoLogic.getDetalleActivoFijos().toArray()[this.jTableDatosDetalleActivoFijo.convertRowIndexToModel(intSelectedRow)];
				} else if(Constantes.ISUSAEJBREMOTE || Constantes.ISUSAEJBHOME ) {
					this.detalleactivofijoAnterior =(DetalleActivoFijo) this.detalleactivofijos.toArray()[this.jTableDatosDetalleActivoFijo.convertRowIndexToModel(intSelectedRow)];
				}
				//ARCHITECTURE
				
				//System.out.println(this.banco);
			}
		} catch(Exception e) {
  			FuncionesSwing.manageException2(this, e,logger,DetalleActivoFijoConstantesFunciones.CLASSNAME);
  		}
    }
	
	//NO EXISTE O NO ES APLICABLE
	public void jLabelActionPerformedGeneral(String sTipo,ActionEvent evt) { 	  
		try {
			
			//SELECCIONA FILA A OBJETO ACTUAL			
			this.seleccionarFilaTablaDetalleActivoFijoActual();
				
			this.actualizarInformacion("EVENTO_CONTROL",false,this.detalleactivofijo);
			
			this.actualizarInformacion("INFO_PADRE",false,this.detalleactivofijo);
				
		} catch(Exception e) {
  			FuncionesSwing.manageException2(this, e,logger,DetalleActivoFijoConstantesFunciones.CLASSNAME);
  		}
    }
	
	public void jCheckBoxItemListenerGeneral(String sTipo,ItemEvent evt) { 	  
		try {
			if(this.permiteManejarEventosControl()) {
				//SELECCIONA FILA A OBJETO ACTUAL			
				this.seleccionarFilaTablaDetalleActivoFijoActual();
				
				EventoGlobalTipo eventoGlobalTipo=EventoGlobalTipo.CONTROL_CHANGE;
				
				Boolean esControlTabla=false;
				JCheckBox jCheckBox=null;
				Container containerParent=null;
				Component componentOpposite=null;
				
							
				//PARAMETROS LLAMAR FUNCION PARENT
				GeneralEntityParameterGeneral generalEntityParameterGeneral=new GeneralEntityParameterGeneral();			
				Boolean esUsoDesdeHijoLocal=false;
				Boolean conIrServidorAplicacionParent=false;	
				ArrayList<String> arrClasses=new ArrayList<String>();			
				//PARAMETROS LLAMAR FUNCION PARENT_FIN
				
				
				/*
				if(this.esUsoDesdeHijo) {
					eventoGlobalTipo=EventoGlobalTipo.FORM_HIJO_ACTUALIZAR;
				}
				*/
				
				ArrayList<Classe> classes=new ArrayList<Classe>();
				
				jCheckBox=(JCheckBox)evt.getSource();
				
				containerParent=jCheckBox.getParent();
						
				componentOpposite=null;//evt.getOppositeComponent();
				
				if((containerParent!=null && containerParent.getClass().equals(JTableMe.class))
					|| (componentOpposite!=null && componentOpposite.getClass().equals(JTableMe.class))
				) {					
					esControlTabla=true;
				}
				
				this.esControlTabla=esControlTabla;
				
				
				this.actualizarInformacion("EVENTO_CONTROL",false,this.detalleactivofijo);
				
				this.actualizarInformacion("INFO_PADRE",false,this.detalleactivofijo);
				
				DetalleActivoFijoBeanSwingJInternalFrameAdditional.procesarEventosVista(this.parametroGeneralUsuario,this.moduloActual,this.opcionActual,this.usuarioActual,this,FuncionTipo.BEFORE,ControlTipo.CHECKBOX,EventoTipo.CLIC,EventoSubTipo.CLICKED,sTipo,this.detalleactivofijo,new Object(),this.detalleactivofijoParameterGeneral,this.detalleactivofijoReturnGeneral);
												
				
				if(sTipo.equals("SeleccionarTodosDetalleActivoFijo")) {
					jCheckBoxSeleccionarTodosDetalleActivoFijoItemListener(evt);
				
				} else if(sTipo.equals("SeleccionadosDetalleActivoFijo")) {
					jCheckBoxSeleccionadosDetalleActivoFijoItemListener(evt);
				
				} else if(sTipo.equals("NuevoToolBarDetalleActivoFijo")) {
					
				}
				
				


				
				
				DetalleActivoFijoBeanSwingJInternalFrameAdditional.procesarEventosVista(this.parametroGeneralUsuario,this.moduloActual,this.opcionActual,this.usuarioActual,this,FuncionTipo.AFTER,ControlTipo.CHECKBOX,EventoTipo.CLIC,EventoSubTipo.CLICKED,sTipo,this.detalleactivofijo,new Object(),this.detalleactivofijoParameterGeneral,this.detalleactivofijoReturnGeneral);
				
				
				if(esUsoDesdeHijoLocal) {
					Long id=0L;
					
					generalEntityParameterGeneral.setEventoGlobalTipo(EventoGlobalTipo.FORM_HIJO_ACTUALIZAR);
					generalEntityParameterGeneral.setsDominio("Formulario");
					generalEntityParameterGeneral.setsDominioTipo(DetalleActivoFijo.class.getName());
					
					if(this.jInternalFrameParent!=null) {
						this.jInternalFrameParent.setEventoParentGeneral(esUsoDesdeHijoLocal,"Formulario",DetalleActivoFijo.class.getName(),sTipo,"TEXTFIELD",esControlTabla,conIrServidorAplicacionParent,
							id,jCheckBox, EventoGlobalTipo.FORM_HIJO_ACTUALIZAR,ControlTipo.CHECKBOX,EventoTipo.CLIC,EventoSubTipo.CLICKED,arrClasses,
							evt,generalEntityParameterGeneral,null);
					}
				}			
			}	
			
  		} catch(Exception e) {
  			FuncionesSwing.manageException2(this, e,logger,DetalleActivoFijoConstantesFunciones.CLASSNAME);
  		}
    }
	
	public void jCheckBoxFocusLostGeneral(String sTipo,java.awt.event.FocusEvent evt) { 	  
		try {
			if(this.permiteManejarEventosControl() && this.existeCambioValor(ControlTipo.CHECKBOX,sTipo)) {
				EventoGlobalTipo eventoGlobalTipo=EventoGlobalTipo.CONTROL_CHANGE;
				
				Boolean esControlTabla=false;
				JCheckBox jCheckBox=null;
				Container containerParent=null;
				Component componentOpposite=null;
				
				
				//PARAMETROS LLAMAR FUNCION PARENT
				GeneralEntityParameterGeneral generalEntityParameterGeneral=new GeneralEntityParameterGeneral();			
				Boolean esUsoDesdeHijoLocal=false;
				Boolean conIrServidorAplicacionParent=false;	
				ArrayList<String> arrClasses=new ArrayList<String>();			
				//PARAMETROS LLAMAR FUNCION PARENT_FIN
				
				
				ArrayList<Classe> classes=new ArrayList<Classe>();
				
				jCheckBox=(JCheckBox)evt.getSource();
				
				containerParent=jCheckBox.getParent();
						
				componentOpposite=evt.getOppositeComponent();
				
				if((containerParent!=null && containerParent.getClass().equals(JTableMe.class))
					|| (componentOpposite!=null && componentOpposite.getClass().equals(JTableMe.class))
				) {					
					esControlTabla=true;
				}
				
				this.esControlTabla=esControlTabla;
				
				
				/*
				if(this.esUsoDesdeHijo) {
					eventoGlobalTipo=EventoGlobalTipo.FORM_HIJO_ACTUALIZAR;
				}
				*/
				
				//this.actualizarInformacion("EVENTO_CONTROL",false,this.detalleactivofijo);
				
				//this.actualizarInformacion("INFO_PADRE",false,this.detalleactivofijo);
				
				DetalleActivoFijoBeanSwingJInternalFrameAdditional.procesarEventosVista(this.parametroGeneralUsuario,this.moduloActual,this.opcionActual,this.usuarioActual,this,FuncionTipo.BEFORE,ControlTipo.CHECKBOX,EventoTipo.CLIC,EventoSubTipo.CLICKED,sTipo,this.detalleactivofijo,new Object(),this.detalleactivofijoParameterGeneral,this.detalleactivofijoReturnGeneral);
												
				
				


				
				
				DetalleActivoFijoBeanSwingJInternalFrameAdditional.procesarEventosVista(this.parametroGeneralUsuario,this.moduloActual,this.opcionActual,this.usuarioActual,this,FuncionTipo.AFTER,ControlTipo.CHECKBOX,EventoTipo.CLIC,EventoSubTipo.CLICKED,sTipo,this.detalleactivofijo,new Object(),this.detalleactivofijoParameterGeneral,this.detalleactivofijoReturnGeneral);
				
				
				if(esUsoDesdeHijoLocal) {
					Long id=0L;
				
					generalEntityParameterGeneral.setEventoGlobalTipo(EventoGlobalTipo.FORM_HIJO_ACTUALIZAR);
					generalEntityParameterGeneral.setsDominio("Formulario");
					generalEntityParameterGeneral.setsDominioTipo(DetalleActivoFijo.class.getName());
					
					if(this.jInternalFrameParent!=null) {
						this.jInternalFrameParent.setEventoParentGeneral(esUsoDesdeHijoLocal,"Formulario",DetalleActivoFijo.class.getName(),sTipo,"TEXTFIELD",esControlTabla,conIrServidorAplicacionParent,
							id,jCheckBox, EventoGlobalTipo.FORM_HIJO_ACTUALIZAR,ControlTipo.CHECKBOX,EventoTipo.CLIC,EventoSubTipo.CLICKED,arrClasses,
							evt,generalEntityParameterGeneral,null);
					}
				}			
			}
			
  		} catch(Exception e) {
  			FuncionesSwing.manageException2(this, e,logger,DetalleActivoFijoConstantesFunciones.CLASSNAME);
  		}
    }
	
	public void jCheckBoxFocusGainedGeneral(String sTipo,java.awt.event.FocusEvent evt) { 	  
		try {
			if(this.permiteManejarEventosControl()) {
				//SELECCIONA FILA A OBJETO ACTUAL			
				this.seleccionarFilaTablaDetalleActivoFijoActual();
			
				//SELECCIONA FILA A OBJETO ANTERIOR
				Integer intSelectedRow = this.jTableDatosDetalleActivoFijo.getSelectedRow();
						
				if(intSelectedRow!=null && intSelectedRow>-1) {
					//ARCHITECTURE
					if(Constantes.ISUSAEJBLOGICLAYER) {
						this.detalleactivofijoAnterior =(DetalleActivoFijo) this.detalleactivofijoLogic.getDetalleActivoFijos().toArray()[this.jTableDatosDetalleActivoFijo.convertRowIndexToModel(intSelectedRow)];
					} else if(Constantes.ISUSAEJBREMOTE || Constantes.ISUSAEJBHOME ) {
						this.detalleactivofijoAnterior =(DetalleActivoFijo) this.detalleactivofijos.toArray()[this.jTableDatosDetalleActivoFijo.convertRowIndexToModel(intSelectedRow)];
					}
					//ARCHITECTURE
					
					//System.out.println(this.banco);
				}
			}
  		} catch(Exception e) {
  			FuncionesSwing.manageException2(this, e,logger,DetalleActivoFijoConstantesFunciones.CLASSNAME);
  		}
    }
	
	public void jCheckBoxActionPerformedGeneral(String sTipo,ActionEvent evt) { 	  
		try {
			if(this.permiteManejarEventosControl()) {
				
				//SELECCIONA FILA A OBJETO ACTUAL			
				this.seleccionarFilaTablaDetalleActivoFijoActual();
				
				this.actualizarInformacion("EVENTO_CONTROL",false,this.detalleactivofijo);
				
				this.actualizarInformacion("INFO_PADRE",false,this.detalleactivofijo);
				
				DetalleActivoFijoBeanSwingJInternalFrameAdditional.procesarEventosVista(this.parametroGeneralUsuario,this.moduloActual,this.opcionActual,this.usuarioActual,this,FuncionTipo.BEFORE,ControlTipo.CHECKBOX,EventoTipo.CLIC,EventoSubTipo.CLICKED,sTipo,this.detalleactivofijo,new Object(),this.detalleactivofijoParameterGeneral,this.detalleactivofijoReturnGeneral);
				
				
				DetalleActivoFijoBeanSwingJInternalFrameAdditional.procesarEventosVista(this.parametroGeneralUsuario,this.moduloActual,this.opcionActual,this.usuarioActual,this,FuncionTipo.AFTER,ControlTipo.CHECKBOX,EventoTipo.CLIC,EventoSubTipo.CLICKED,sTipo,this.detalleactivofijo,new Object(),this.detalleactivofijoParameterGeneral,this.detalleactivofijoReturnGeneral);
			}
			
  		} catch(Exception e) {
  			FuncionesSwing.manageException2(this, e,logger,DetalleActivoFijoConstantesFunciones.CLASSNAME);
  		}
    }
	
	//NO SE UTILIZA, SE USA EL DE ABAJO, IGUAL SE DEJA EL CODIGO COMO RESPALDO Y ES CASI IGUAL
	//ERROR:SI SE USA,AL HACER CLIC EN EL MISMO ELEMENTO O EJECUTAR SELECTEDITEM, SIEMPRE SE EJECUTA COMO SI ESCOGIERA OTRO ELEMENTO(NO DEBERIA)
	//@SuppressWarnings("rawtypes")
	public void jComboBoxActionPerformedGeneral(String sTipo,ActionEvent evt) {		
		try {
			/*		
			EventoGlobalTipo eventoGlobalTipo=EventoGlobalTipo.CONTROL_CHANGE;
			
			if(this.esUsoDesdeHijo) {
				eventoGlobalTipo=EventoGlobalTipo.FORM_HIJO_ACTUALIZAR;
			}
			
			Container containerParent=null;
			Component componentOpposite=null;
			Boolean esControlTabla=false;
				
			ArrayList<Classe> classes=new ArrayList<Classe>();
			
			DetalleActivoFijoBeanSwingJInternalFrameAdditional.procesarEventosVista(this.parametroGeneralUsuario,this.moduloActual,this.opcionActual,this.usuarioActual,this,FuncionTipo.BEFORE,ControlTipo.COMBOBOX,EventoTipo.CHANGE,EventoSubTipo.CLICKED,sTipo,this.detalleactivofijo,new Object(),this.detalleactivofijoParameterGeneral,this.detalleactivofijoReturnGeneral);
			JComboBox jComboBoxGenerico=null;						
			
			if(evt.getSource().getClass().equals(JComboBox.class)
				|| evt.getSource().getClass().equals(JComboBoxMe.class)) {
					
				jComboBoxGenerico=(JComboBox)evt.getSource();
				
				containerParent=jComboBoxGenerico.getParent();
				
				componentOpposite=null;//evt.getOppositeComponent();
				
				if((containerParent!=null && containerParent.getClass().equals(JTableMe.class))
					|| (componentOpposite!=null && componentOpposite.getClass().equals(JTableMe.class))
				) {					
					esControlTabla=true;
				}
				
				this.esControlTabla=esControlTabla;
			}
			
			String sFinalQueryCombo="";
			
			


			if(sTipo.equals("id_detalle_grupo_activo_fijoDetalleActivoFijo")) {
				if(jComboBoxGenerico==null) {
					jComboBoxGenerico=this.jInternalFrameDetalleFormDetalleActivoFijo.jComboBoxid_detalle_grupo_activo_fijoDetalleActivoFijo;
				}

				if(this.detalleactivofijoSessionBean.getConGuardarRelaciones()) {
					//classes=DetalleActivoFijoConstantesFunciones.getClassesRelationshipsOfDetalleActivoFijo(new ArrayList<Classe>(),DeepLoadType.NONE);
				}


				this.procesarActionsCombosForeignKeyDetalleGrupoActivoFijo(jComboBoxGenerico,"Formulario");

				this.recargarFormDetalleActivoFijo(sTipo,"Formulario",eventoGlobalTipo,ControlTipo.COMBOBOX,EventoTipo.CHANGE,EventoSubTipo.CHANGED,"COMBOBOX",classes,false,esControlTabla);
			}
			 else if(sTipo.equals("jComboBoxid_detalle_grupo_activo_fijoFK_IdDetalleGrupoActivoFijoDetalleActivoFijo")) {
				this.procesarActionsCombosForeignKeyDetalleGrupoActivoFijo(jComboBoxid_detalle_grupo_activo_fijoFK_IdDetalleGrupoActivoFijoDetalleActivoFijo,"FK_IdDetalleGrupoActivoFijo");
				//recargarFormDetalleActivoFijoDetalleGrupoActivoFijo(jComboBoxid_detalle_grupo_activo_fijoFK_IdDetalleGrupoActivoFijoDetalleActivoFijo,"FK_IdDetalleGrupoActivoFijo");
			}
			
			DetalleActivoFijoBeanSwingJInternalFrameAdditional.procesarEventosVista(this.parametroGeneralUsuario,this.moduloActual,this.opcionActual,this.usuarioActual,this,FuncionTipo.AFTER,ControlTipo.COMBOBOX,EventoTipo.CHANGE,EventoSubTipo.CHANGED,sTipo,this.detalleactivofijo,new Object(),this.detalleactivofijoParameterGeneral,this.detalleactivofijoReturnGeneral);
			*/						
  		} catch(Exception e) {
  			FuncionesSwing.manageException2(this, e,logger,DetalleActivoFijoConstantesFunciones.CLASSNAME);
  		}		
    }
	
	@SuppressWarnings("rawtypes")
	public void jComboBoxItemStateChangedGeneral(String sTipo,ItemEvent evt) { 	  
		try {
			if (evt.getStateChange() == ItemEvent.SELECTED && this.permiteManejarEventosControl()) {
				//SELECCIONA FILA A OBJETO ACTUAL			
				this.seleccionarFilaTablaDetalleActivoFijoActual();
			
				//PARAMETROS LLAMAR FUNCION PARENT
				GeneralEntityParameterGeneral generalEntityParameterGeneral=new GeneralEntityParameterGeneral();			
				Boolean esUsoDesdeHijoLocal=false;
				Boolean conIrServidorAplicacionParent=false;	
				ArrayList<String> arrClasses=new ArrayList<String>();			
				//PARAMETROS LLAMAR FUNCION PARENT_FIN
			
			
				EventoGlobalTipo eventoGlobalTipo=EventoGlobalTipo.CONTROL_CHANGE;
				
				/*
				if(this.esUsoDesdeHijo) {
					eventoGlobalTipo=EventoGlobalTipo.FORM_HIJO_ACTUALIZAR;
				}
				*/
				
				Container containerParent=null;
				Component componentOpposite=null;
				Boolean esControlTabla=false;
				
				ArrayList<Classe> classes=new ArrayList<Classe>();
				
				JComboBox jComboBoxGenerico=null;						
				
				if(evt.getSource().getClass().equals(JComboBox.class)
					|| evt.getSource().getClass().equals(JComboBoxMe.class)) {
						
					jComboBoxGenerico=(JComboBox)evt.getSource();
					
					containerParent=jComboBoxGenerico.getParent();
					
					componentOpposite=null;//evt.getOppositeComponent();
					
					if((containerParent!=null && containerParent.getClass().equals(JTableMe.class))
					|| (componentOpposite!=null && componentOpposite.getClass().equals(JTableMe.class))
					) {					
						esControlTabla=true;
					}		
					
					this.esControlTabla=esControlTabla;
				}
				
				
				this.actualizarInformacion("EVENTO_CONTROL",false,this.detalleactivofijo);
				
				this.actualizarInformacion("INFO_PADRE",false,this.detalleactivofijo);
				
				DetalleActivoFijoBeanSwingJInternalFrameAdditional.procesarEventosVista(this.parametroGeneralUsuario,this.moduloActual,this.opcionActual,this.usuarioActual,this,FuncionTipo.BEFORE,ControlTipo.COMBOBOX,EventoTipo.CHANGE,EventoSubTipo.CLICKED,sTipo,this.detalleactivofijo,new Object(),this.detalleactivofijoParameterGeneral,this.detalleactivofijoReturnGeneral);
				
				
				String sFinalQueryCombo="";
				
				


			if(sTipo.equals("id_detalle_grupo_activo_fijoDetalleActivoFijo")) {
				if(jComboBoxGenerico==null) {
					jComboBoxGenerico=this.jInternalFrameDetalleFormDetalleActivoFijo.jComboBoxid_detalle_grupo_activo_fijoDetalleActivoFijo;
				}

				if(this.detalleactivofijoSessionBean.getConGuardarRelaciones()) {
					//classes=DetalleActivoFijoConstantesFunciones.getClassesRelationshipsOfDetalleActivoFijo(new ArrayList<Classe>(),DeepLoadType.NONE);
				}


				this.procesarActionsCombosForeignKeyDetalleGrupoActivoFijo(jComboBoxGenerico,"Formulario");

				this.recargarFormDetalleActivoFijo(sTipo,"Formulario",eventoGlobalTipo,ControlTipo.COMBOBOX,EventoTipo.CHANGE,EventoSubTipo.CHANGED,"COMBOBOX",classes,false,esControlTabla);
			}
			 else if(sTipo.equals("jComboBoxid_detalle_grupo_activo_fijoFK_IdDetalleGrupoActivoFijoDetalleActivoFijo")) {
				this.procesarActionsCombosForeignKeyDetalleGrupoActivoFijo(jComboBoxid_detalle_grupo_activo_fijoFK_IdDetalleGrupoActivoFijoDetalleActivoFijo,"FK_IdDetalleGrupoActivoFijo");
				//recargarFormDetalleActivoFijoDetalleGrupoActivoFijo(jComboBoxid_detalle_grupo_activo_fijoFK_IdDetalleGrupoActivoFijoDetalleActivoFijo,"FK_IdDetalleGrupoActivoFijo");
			}
				
				DetalleActivoFijoBeanSwingJInternalFrameAdditional.procesarEventosVista(this.parametroGeneralUsuario,this.moduloActual,this.opcionActual,this.usuarioActual,this,FuncionTipo.AFTER,ControlTipo.COMBOBOX,EventoTipo.CHANGE,EventoSubTipo.CHANGED,sTipo,this.detalleactivofijo,new Object(),this.detalleactivofijoParameterGeneral,this.detalleactivofijoReturnGeneral);
				
				if(esUsoDesdeHijoLocal) {
					Long id=0L;
				
					generalEntityParameterGeneral.setEventoGlobalTipo(EventoGlobalTipo.FORM_HIJO_ACTUALIZAR);
					generalEntityParameterGeneral.setsDominio("Formulario");
					generalEntityParameterGeneral.setsDominioTipo(DetalleActivoFijo.class.getName());
								
					if(this.jInternalFrameParent!=null) {
						this.jInternalFrameParent.setEventoParentGeneral(esUsoDesdeHijoLocal,"Formulario",DetalleActivoFijo.class.getName(),sTipo,"COMBOBOX",esControlTabla,conIrServidorAplicacionParent,
							id,jComboBoxGenerico, EventoGlobalTipo.FORM_HIJO_ACTUALIZAR,ControlTipo.COMBOBOX,EventoTipo.CHANGE,EventoSubTipo.CHANGED,arrClasses,
							evt,generalEntityParameterGeneral,null);
					}
				}			
			}
  		} catch(Exception e) {
  			FuncionesSwing.manageException2(this, e,logger,DetalleActivoFijoConstantesFunciones.CLASSNAME);
  		}
    }
	
	//@SuppressWarnings("rawtypes")
	public void jComboBoxFocusLostGeneral(String sTipo,java.awt.event.FocusEvent evt) { 	  
		//MANEJADO EN ITEMLISTENER
		/*
		try {
			if(this.permiteManejarEventosControl()) {
				EventoGlobalTipo eventoGlobalTipo=EventoGlobalTipo.CONTROL_CHANGE;
				
				
				//if(this.esUsoDesdeHijo) {
				//	eventoGlobalTipo=EventoGlobalTipo.FORM_HIJO_ACTUALIZAR;
				//}
				
				
				Container containerParent=null;
				Component componentOpposite=null;
				Boolean esControlTabla=false;
				
				ArrayList<Classe> classes=new ArrayList<Classe>();
				
				//PARAMETROS LLAMAR FUNCION PARENT
				GeneralEntityParameterGeneral generalEntityParameterGeneral=new GeneralEntityParameterGeneral();			
				Boolean esUsoDesdeHijoLocal=false;
				Boolean conIrServidorAplicacionParent=false;	
				ArrayList<String> arrClasses=new ArrayList<String>();			
				//PARAMETROS LLAMAR FUNCION PARENT_FIN
			
				this.actualizarInformacion("EVENTO_CONTROL",false,this.detalleactivofijo);
				
				this.actualizarInformacion("INFO_PADRE",false,this.detalleactivofijo);
				
				DetalleActivoFijoBeanSwingJInternalFrameAdditional.procesarEventosVista(this.parametroGeneralUsuario,this.moduloActual,this.opcionActual,this.usuarioActual,this,FuncionTipo.BEFORE,ControlTipo.COMBOBOX,EventoTipo.CHANGE,EventoSubTipo.CLICKED,sTipo,this.detalleactivofijo,new Object(),this.detalleactivofijoParameterGeneral,this.detalleactivofijoReturnGeneral);
				JComboBox jComboBoxGenerico=null;						
				
				if(evt.getSource().getClass().equals(JComboBox.class)
					|| evt.getSource().getClass().equals(JComboBoxMe.class)) {
						
					jComboBoxGenerico=(JComboBox)evt.getSource();
					
					containerParent=jComboBoxGenerico.getParent();
					
					componentOpposite=evt.getOppositeComponent();
					
					if((containerParent!=null && containerParent.getClass().equals(JTableMe.class))
					|| (componentOpposite!=null && componentOpposite.getClass().equals(JTableMe.class))
					) {					
						esControlTabla=true;
					}
					
					this.esControlTabla=esControlTabla;
				}
				
				String sFinalQueryCombo="";
				
				


			if(sTipo.equals("id_detalle_grupo_activo_fijoDetalleActivoFijo")) {
				if(jComboBoxGenerico==null) {
					jComboBoxGenerico=this.jInternalFrameDetalleFormDetalleActivoFijo.jComboBoxid_detalle_grupo_activo_fijoDetalleActivoFijo;
				}

				if(this.detalleactivofijoSessionBean.getConGuardarRelaciones()) {
					//classes=DetalleActivoFijoConstantesFunciones.getClassesRelationshipsOfDetalleActivoFijo(new ArrayList<Classe>(),DeepLoadType.NONE);
				}


				this.procesarActionsCombosForeignKeyDetalleGrupoActivoFijo(jComboBoxGenerico,"Formulario");

				this.recargarFormDetalleActivoFijo(sTipo,"Formulario",eventoGlobalTipo,ControlTipo.COMBOBOX,EventoTipo.CHANGE,EventoSubTipo.CHANGED,"COMBOBOX",classes,false,esControlTabla);
			}
			 else if(sTipo.equals("jComboBoxid_detalle_grupo_activo_fijoFK_IdDetalleGrupoActivoFijoDetalleActivoFijo")) {
				this.procesarActionsCombosForeignKeyDetalleGrupoActivoFijo(jComboBoxid_detalle_grupo_activo_fijoFK_IdDetalleGrupoActivoFijoDetalleActivoFijo,"FK_IdDetalleGrupoActivoFijo");
				//recargarFormDetalleActivoFijoDetalleGrupoActivoFijo(jComboBoxid_detalle_grupo_activo_fijoFK_IdDetalleGrupoActivoFijoDetalleActivoFijo,"FK_IdDetalleGrupoActivoFijo");
			}
				
				DetalleActivoFijoBeanSwingJInternalFrameAdditional.procesarEventosVista(this.parametroGeneralUsuario,this.moduloActual,this.opcionActual,this.usuarioActual,this,FuncionTipo.AFTER,ControlTipo.COMBOBOX,EventoTipo.CHANGE,EventoSubTipo.CHANGED,sTipo,this.detalleactivofijo,new Object(),this.detalleactivofijoParameterGeneral,this.detalleactivofijoReturnGeneral);
				
				
				if(esUsoDesdeHijoLocal) {
					Long id=0L;
					
					generalEntityParameterGeneral.setEventoGlobalTipo(EventoGlobalTipo.FORM_HIJO_ACTUALIZAR);
					generalEntityParameterGeneral.setsDominio("Formulario");
					generalEntityParameterGeneral.setsDominioTipo(DetalleActivoFijo.class.getName());
				
					if(this.jInternalFrameParent!=null) {
						this.jInternalFrameParent.setEventoParentGeneral(esUsoDesdeHijoLocal,"Formulario",DetalleActivoFijo.class.getName(),sTipo,"TEXTFIELD",esControlTabla,conIrServidorAplicacionParent,
							id,jComboBoxGenerico, EventoGlobalTipo.FORM_HIJO_ACTUALIZAR,ControlTipo.COMBOBOX,EventoTipo.CHANGE,EventoSubTipo.CHANGED,arrClasses,
							evt,generalEntityParameterGeneral,null);
					}
				}			
			}
			
  		} catch(Exception e) {
  			FuncionesSwing.manageException2(this, e,logger,DetalleActivoFijoConstantesFunciones.CLASSNAME);
  		}
		
		*/
    }
	
	public void jComboBoxFocusGainedGeneral(String sTipo,java.awt.event.FocusEvent evt) { 	  
		try {
			//SELECCIONA FILA A OBJETO ACTUAL			
			this.seleccionarFilaTablaDetalleActivoFijoActual();
			
			//SELECCIONA FILA A OBJETO ANTERIOR
			Integer intSelectedRow = this.jTableDatosDetalleActivoFijo.getSelectedRow();
					
			if(intSelectedRow!=null && intSelectedRow>-1) {
				//ARCHITECTURE
				if(Constantes.ISUSAEJBLOGICLAYER) {
					this.detalleactivofijoAnterior =(DetalleActivoFijo) this.detalleactivofijoLogic.getDetalleActivoFijos().toArray()[this.jTableDatosDetalleActivoFijo.convertRowIndexToModel(intSelectedRow)];
				} else if(Constantes.ISUSAEJBREMOTE || Constantes.ISUSAEJBHOME ) {
					this.detalleactivofijoAnterior =(DetalleActivoFijo) this.detalleactivofijos.toArray()[this.jTableDatosDetalleActivoFijo.convertRowIndexToModel(intSelectedRow)];
				}
				//ARCHITECTURE
				
				//System.out.println(this.banco);
			}
			
		} catch(Exception e) {
  			FuncionesSwing.manageException2(this, e,logger,DetalleActivoFijoConstantesFunciones.CLASSNAME);
  		}
    }		
	
	public void tableValueChangedGeneral(String sTipo,ListSelectionEvent evt) { 	  
		try {
			if(this.permiteManejarEventosControl()) {
				DetalleActivoFijoBeanSwingJInternalFrameAdditional.procesarEventosVista(this.parametroGeneralUsuario,this.moduloActual,this.opcionActual,this.usuarioActual,this,FuncionTipo.BEFORE,ControlTipo.TABLE,EventoTipo.CHANGE,EventoSubTipo.CHANGED,sTipo,this.detalleactivofijo,new Object(),this.detalleactivofijoParameterGeneral,this.detalleactivofijoReturnGeneral);
				
				if(sTipo.equals("TableDatosSeleccionarDetalleActivoFijo")) {
					//BYDAN_DESHABILITADO
					//try {jTableDatosDetalleActivoFijoListSelectionListener(e);}catch(Exception e1){e1.printStackTrace();}
					
					//SOLO CUANDO MOUSE ES SOLTADO
					if (!evt.getValueIsAdjusting()) {
						//SELECCIONA FILA A OBJETO ACTUAL
						Integer intSelectedRow = this.jTableDatosDetalleActivoFijo.getSelectedRow();
						
						if(intSelectedRow!=null && intSelectedRow>-1) {
							//ARCHITECTURE
							if(Constantes.ISUSAEJBLOGICLAYER) {
								this.detalleactivofijo =(DetalleActivoFijo) this.detalleactivofijoLogic.getDetalleActivoFijos().toArray()[this.jTableDatosDetalleActivoFijo.convertRowIndexToModel(intSelectedRow)];
							} else if(Constantes.ISUSAEJBREMOTE || Constantes.ISUSAEJBHOME ) {
								this.detalleactivofijo =(DetalleActivoFijo) this.detalleactivofijos.toArray()[this.jTableDatosDetalleActivoFijo.convertRowIndexToModel(intSelectedRow)];
							}
							//ARCHITECTURE
							
							//System.out.println(this.detalleactivofijo);
						}
					}
					
				} else if(sTipo.equals("jButtonCancelarDetalleActivoFijo")) {
				
				}
				
				DetalleActivoFijoBeanSwingJInternalFrameAdditional.procesarEventosVista(this.parametroGeneralUsuario,this.moduloActual,this.opcionActual,this.usuarioActual,this,FuncionTipo.AFTER,ControlTipo.TABLE,EventoTipo.CHANGE,EventoSubTipo.CHANGED,sTipo,this.detalleactivofijo,new Object(),this.detalleactivofijoParameterGeneral,this.detalleactivofijoReturnGeneral);
			}
			
  		} catch(Exception e) {
  			FuncionesSwing.manageException2(this, e,logger,DetalleActivoFijoConstantesFunciones.CLASSNAME);
  		}
    }
	
	public void tableMouseAdapterGeneral(String sTipo,MouseEvent evt) { 	  
		try {
			DetalleActivoFijoBeanSwingJInternalFrameAdditional.procesarEventosVista(this.parametroGeneralUsuario,this.moduloActual,this.opcionActual,this.usuarioActual,this,FuncionTipo.BEFORE,ControlTipo.TABLE,EventoTipo.MOUSE,EventoSubTipo.CLICKED,sTipo,this.detalleactivofijo,new Object(),this.detalleactivofijoParameterGeneral,this.detalleactivofijoReturnGeneral);
			
			if(sTipo.equals("DatosSeleccionarDetalleActivoFijo")) {
				if (evt.getClickCount() == 2) {
					jButtonIdActionPerformed(null,jTableDatosDetalleActivoFijo.getSelectedRow(),false,false);
				}	
			} else if(sTipo.equals("jButtonCancelarDetalleActivoFijo")) {
			
			}
			
			DetalleActivoFijoBeanSwingJInternalFrameAdditional.procesarEventosVista(this.parametroGeneralUsuario,this.moduloActual,this.opcionActual,this.usuarioActual,this,FuncionTipo.AFTER,ControlTipo.TABLE,EventoTipo.MOUSE,EventoSubTipo.CLICKED,sTipo,this.detalleactivofijo,new Object(),this.detalleactivofijoParameterGeneral,this.detalleactivofijoReturnGeneral);
  		} catch(Exception e) {
  			FuncionesSwing.manageException2(this, e,logger,DetalleActivoFijoConstantesFunciones.CLASSNAME);
  		}
    }
	
	;
	
	public void jButtonActionPerformedTecladoGeneral(String sTipo,ActionEvent evt) { 	  
		try {
			this.startProcessDetalleActivoFijo();
			
			DetalleActivoFijoBeanSwingJInternalFrameAdditional.procesarEventosVista(this.parametroGeneralUsuario,this.moduloActual,this.opcionActual,this.usuarioActual,this,FuncionTipo.BEFORE,ControlTipo.KEY,EventoTipo.CLIC,EventoSubTipo.CLICKED,sTipo,this.detalleactivofijo,new Object(),this.detalleactivofijoParameterGeneral,this.detalleactivofijoReturnGeneral);
			
			if(sTipo.equals("NuevoDetalleActivoFijo")) {
				jButtonNuevoDetalleActivoFijoActionPerformed(evt,false);
				
			} else if(sTipo.equals("DuplicarDetalleActivoFijo")) {
				jButtonDuplicarDetalleActivoFijoActionPerformed(evt,false);
				
			} else if(sTipo.equals("CopiarDetalleActivoFijo")) {
				jButtonCopiarDetalleActivoFijoActionPerformed(evt);
				
			} else if(sTipo.equals("VerFormDetalleActivoFijo")) {
				jButtonVerFormDetalleActivoFijoActionPerformed(evt);
				
			} else if(sTipo.equals("NuevoRelacionesDetalleActivoFijo")) {
				jButtonNuevoDetalleActivoFijoActionPerformed(evt,true);
				
			} else if(sTipo.equals("ModificarDetalleActivoFijo")) {
				jButtonModificarDetalleActivoFijoActionPerformed(evt);
				
			} else if(sTipo.equals("ActualizarDetalleActivoFijo")) {
				jButtonActualizarDetalleActivoFijoActionPerformed(evt);
				
			} else if(sTipo.equals("EliminarDetalleActivoFijo")) {
				jButtonEliminarDetalleActivoFijoActionPerformed(evt);
				
			} else if(sTipo.equals("GuardarCambiosTablaDetalleActivoFijo")) {
				jButtonGuardarCambiosDetalleActivoFijoActionPerformed(evt);
				
			} else if(sTipo.equals("CancelarDetalleActivoFijo")) {
				jButtonCancelarDetalleActivoFijoActionPerformed(evt);
				
			} else if(sTipo.equals("CerrarDetalleActivoFijo")) {
				jButtonCerrarDetalleActivoFijoActionPerformed(evt);
				
			} else if(sTipo.equals("GuardarCambiosDetalleActivoFijo")) {
				jButtonGuardarCambiosDetalleActivoFijoActionPerformed(evt);
			
			} else if(sTipo.equals("NuevoGuardarCambiosDetalleActivoFijo")) {
				jButtonNuevoGuardarCambiosDetalleActivoFijoActionPerformed(evt);
			
			} else if(sTipo.equals("AbrirOrderByDetalleActivoFijo")) {
				jButtonAbrirOrderByDetalleActivoFijoActionPerformed(evt);
			
			} else if(sTipo.equals("RecargarInformacionDetalleActivoFijo")) {
				jButtonRecargarInformacionDetalleActivoFijoActionPerformed(evt);
			
			} else if(sTipo.equals("AnterioresDetalleActivoFijo")) {
				jButtonAnterioresDetalleActivoFijoActionPerformed(evt);			
			
			}  else if(sTipo.equals("SiguientesDetalleActivoFijo")) {
				jButtonSiguientesDetalleActivoFijoActionPerformed(evt);			
			} 
			
			
			//BUSQUEDA GENERAL CAMPO
			else if(sTipo.equals("idDetalleActivoFijoBusqueda")) {
				this.jButtonidDetalleActivoFijoBusquedaActionPerformed(evt);
			}
			//ACTUALIZAR CAMPO
			else if(sTipo.equals("id_empresaDetalleActivoFijoUpdate")) {
				this.jButtonid_empresaDetalleActivoFijoUpdateActionPerformed(evt);
			}
			//BUSQUEDA GENERAL CAMPO
			else if(sTipo.equals("id_empresaDetalleActivoFijoBusqueda")) {
				this.jButtonid_empresaDetalleActivoFijoBusquedaActionPerformed(evt);
			}
			//ACTUALIZAR CAMPO
			else if(sTipo.equals("id_sucursalDetalleActivoFijoUpdate")) {
				this.jButtonid_sucursalDetalleActivoFijoUpdateActionPerformed(evt);
			}
			//BUSQUEDA GENERAL CAMPO
			else if(sTipo.equals("id_sucursalDetalleActivoFijoBusqueda")) {
				this.jButtonid_sucursalDetalleActivoFijoBusquedaActionPerformed(evt);
			}
			//ACTUALIZAR CAMPO
			else if(sTipo.equals("id_detalle_grupo_activo_fijoDetalleActivoFijoUpdate")) {
				this.jButtonid_detalle_grupo_activo_fijoDetalleActivoFijoUpdateActionPerformed(evt);
			}
			//BUSQUEDA GENERAL CAMPO
			else if(sTipo.equals("id_detalle_grupo_activo_fijoDetalleActivoFijoBusqueda")) {
				this.jButtonid_detalle_grupo_activo_fijoDetalleActivoFijoBusquedaActionPerformed(evt);
			}
			//ACTUALIZAR CAMPO
			else if(sTipo.equals("id_sub_grupo_activo_fijoDetalleActivoFijoUpdate")) {
				this.jButtonid_sub_grupo_activo_fijoDetalleActivoFijoUpdateActionPerformed(evt);
			}
			//BUSQUEDA GENERAL CAMPO
			else if(sTipo.equals("id_sub_grupo_activo_fijoDetalleActivoFijoBusqueda")) {
				this.jButtonid_sub_grupo_activo_fijoDetalleActivoFijoBusquedaActionPerformed(evt);
			}
			//ACTUALIZAR CAMPO
			else if(sTipo.equals("id_tipo_ramo_activo_fijoDetalleActivoFijoUpdate")) {
				this.jButtonid_tipo_ramo_activo_fijoDetalleActivoFijoUpdateActionPerformed(evt);
			}
			//BUSQUEDA GENERAL CAMPO
			else if(sTipo.equals("id_tipo_ramo_activo_fijoDetalleActivoFijoBusqueda")) {
				this.jButtonid_tipo_ramo_activo_fijoDetalleActivoFijoBusquedaActionPerformed(evt);
			}
			//ACTUALIZAR CAMPO
			else if(sTipo.equals("id_tipo_activo_fijo_empresaDetalleActivoFijoUpdate")) {
				this.jButtonid_tipo_activo_fijo_empresaDetalleActivoFijoUpdateActionPerformed(evt);
			}
			//BUSQUEDA GENERAL CAMPO
			else if(sTipo.equals("id_tipo_activo_fijo_empresaDetalleActivoFijoBusqueda")) {
				this.jButtonid_tipo_activo_fijo_empresaDetalleActivoFijoBusquedaActionPerformed(evt);
			}
			//ACTUALIZAR CAMPO
			else if(sTipo.equals("id_tipo_depreciacion_empresaDetalleActivoFijoUpdate")) {
				this.jButtonid_tipo_depreciacion_empresaDetalleActivoFijoUpdateActionPerformed(evt);
			}
			//BUSQUEDA GENERAL CAMPO
			else if(sTipo.equals("id_tipo_depreciacion_empresaDetalleActivoFijoBusqueda")) {
				this.jButtonid_tipo_depreciacion_empresaDetalleActivoFijoBusquedaActionPerformed(evt);
			}
			//ACTUALIZAR CAMPO
			else if(sTipo.equals("id_estado_activo_fijoDetalleActivoFijoUpdate")) {
				this.jButtonid_estado_activo_fijoDetalleActivoFijoUpdateActionPerformed(evt);
			}
			//BUSQUEDA GENERAL CAMPO
			else if(sTipo.equals("id_estado_activo_fijoDetalleActivoFijoBusqueda")) {
				this.jButtonid_estado_activo_fijoDetalleActivoFijoBusquedaActionPerformed(evt);
			}
			//BUSQUEDA CAMPO
			else if(sTipo.equals("id_clienteDetalleActivoFijo")) {
				this.jButtonid_clienteDetalleActivoFijoActionPerformed(evt);
			}
			//ACTUALIZAR CAMPO
			else if(sTipo.equals("id_clienteDetalleActivoFijoUpdate")) {
				this.jButtonid_clienteDetalleActivoFijoUpdateActionPerformed(evt);
			}
			//BUSQUEDA GENERAL CAMPO
			else if(sTipo.equals("id_clienteDetalleActivoFijoBusqueda")) {
				this.jButtonid_clienteDetalleActivoFijoBusquedaActionPerformed(evt);
			}
			//ACTUALIZAR CAMPO
			else if(sTipo.equals("id_partida_presuDetalleActivoFijoUpdate")) {
				this.jButtonid_partida_presuDetalleActivoFijoUpdateActionPerformed(evt);
			}
			//BUSQUEDA GENERAL CAMPO
			else if(sTipo.equals("id_partida_presuDetalleActivoFijoBusqueda")) {
				this.jButtonid_partida_presuDetalleActivoFijoBusquedaActionPerformed(evt);
			}
			//BUSQUEDA GENERAL CAMPO
			else if(sTipo.equals("codigoDetalleActivoFijoBusqueda")) {
				this.jButtoncodigoDetalleActivoFijoBusquedaActionPerformed(evt);
			}
			//BUSQUEDA GENERAL CAMPO
			else if(sTipo.equals("nombreDetalleActivoFijoBusqueda")) {
				this.jButtonnombreDetalleActivoFijoBusquedaActionPerformed(evt);
			}
			//BUSQUEDA GENERAL CAMPO
			else if(sTipo.equals("serieDetalleActivoFijoBusqueda")) {
				this.jButtonserieDetalleActivoFijoBusquedaActionPerformed(evt);
			}
			//BUSQUEDA GENERAL CAMPO
			else if(sTipo.equals("fecha_compraDetalleActivoFijoBusqueda")) {
				this.jButtonfecha_compraDetalleActivoFijoBusquedaActionPerformed(evt);
			}
			//BUSQUEDA GENERAL CAMPO
			else if(sTipo.equals("fecha_mantenimientoDetalleActivoFijoBusqueda")) {
				this.jButtonfecha_mantenimientoDetalleActivoFijoBusquedaActionPerformed(evt);
			}
			//BUSQUEDA GENERAL CAMPO
			else if(sTipo.equals("fecha_correccionDetalleActivoFijoBusqueda")) {
				this.jButtonfecha_correccionDetalleActivoFijoBusquedaActionPerformed(evt);
			}
			//BUSQUEDA GENERAL CAMPO
			else if(sTipo.equals("fecha_depreciacionDetalleActivoFijoBusqueda")) {
				this.jButtonfecha_depreciacionDetalleActivoFijoBusquedaActionPerformed(evt);
			}
			//BUSQUEDA GENERAL CAMPO
			else if(sTipo.equals("claveDetalleActivoFijoBusqueda")) {
				this.jButtonclaveDetalleActivoFijoBusquedaActionPerformed(evt);
			}
			//BUSQUEDA GENERAL CAMPO
			else if(sTipo.equals("marcaDetalleActivoFijoBusqueda")) {
				this.jButtonmarcaDetalleActivoFijoBusquedaActionPerformed(evt);
			}
			//BUSQUEDA GENERAL CAMPO
			else if(sTipo.equals("modeloDetalleActivoFijoBusqueda")) {
				this.jButtonmodeloDetalleActivoFijoBusquedaActionPerformed(evt);
			}
			//BUSQUEDA GENERAL CAMPO
			else if(sTipo.equals("colorDetalleActivoFijoBusqueda")) {
				this.jButtoncolorDetalleActivoFijoBusquedaActionPerformed(evt);
			}
			//BUSQUEDA GENERAL CAMPO
			else if(sTipo.equals("fechaDetalleActivoFijoBusqueda")) {
				this.jButtonfechaDetalleActivoFijoBusquedaActionPerformed(evt);
			}
			//BUSQUEDA GENERAL CAMPO
			else if(sTipo.equals("valor_utilDetalleActivoFijoBusqueda")) {
				this.jButtonvalor_utilDetalleActivoFijoBusquedaActionPerformed(evt);
			}
			//BUSQUEDA GENERAL CAMPO
			else if(sTipo.equals("costo_de_compraDetalleActivoFijoBusqueda")) {
				this.jButtoncosto_de_compraDetalleActivoFijoBusquedaActionPerformed(evt);
			}
			//BUSQUEDA GENERAL CAMPO
			else if(sTipo.equals("vida_utilDetalleActivoFijoBusqueda")) {
				this.jButtonvida_utilDetalleActivoFijoBusquedaActionPerformed(evt);
			}
			//BUSQUEDA GENERAL CAMPO
			else if(sTipo.equals("valor_residualDetalleActivoFijoBusqueda")) {
				this.jButtonvalor_residualDetalleActivoFijoBusquedaActionPerformed(evt);
			}
			//BUSQUEDA GENERAL CAMPO
			else if(sTipo.equals("cantidadDetalleActivoFijoBusqueda")) {
				this.jButtoncantidadDetalleActivoFijoBusquedaActionPerformed(evt);
			}
			//BUSQUEDA GENERAL CAMPO
			else if(sTipo.equals("nombre_propietarioDetalleActivoFijoBusqueda")) {
				this.jButtonnombre_propietarioDetalleActivoFijoBusquedaActionPerformed(evt);
			}
			//BUSQUEDA GENERAL CAMPO
			else if(sTipo.equals("responsableDetalleActivoFijoBusqueda")) {
				this.jButtonresponsableDetalleActivoFijoBusquedaActionPerformed(evt);
			}
			//BUSQUEDA GENERAL CAMPO
			else if(sTipo.equals("path_fotoDetalleActivoFijoBusqueda")) {
				this.jButtonpath_fotoDetalleActivoFijoBusquedaActionPerformed(evt);
			}
			//BUSQUEDA GENERAL CAMPO
			else if(sTipo.equals("numero_comprobanteDetalleActivoFijoBusqueda")) {
				this.jButtonnumero_comprobanteDetalleActivoFijoBusquedaActionPerformed(evt);
			}
			//BUSQUEDA GENERAL CAMPO
			else if(sTipo.equals("referenciaDetalleActivoFijoBusqueda")) {
				this.jButtonreferenciaDetalleActivoFijoBusquedaActionPerformed(evt);
			}
			//BUSQUEDA GENERAL CAMPO
			else if(sTipo.equals("valor_cotizacionDetalleActivoFijoBusqueda")) {
				this.jButtonvalor_cotizacionDetalleActivoFijoBusquedaActionPerformed(evt);
			}
			//BUSQUEDA GENERAL CAMPO
			else if(sTipo.equals("con_partesDetalleActivoFijoBusqueda")) {
				this.jButtoncon_partesDetalleActivoFijoBusquedaActionPerformed(evt);
			}
			//BUSQUEDA GENERAL CAMPO
			else if(sTipo.equals("con_garantiaDetalleActivoFijoBusqueda")) {
				this.jButtoncon_garantiaDetalleActivoFijoBusquedaActionPerformed(evt);
			}
			//BUSQUEDA GENERAL CAMPO
			else if(sTipo.equals("con_existenciaDetalleActivoFijoBusqueda")) {
				this.jButtoncon_existenciaDetalleActivoFijoBusquedaActionPerformed(evt);
			}
			//BUSQUEDA GENERAL CAMPO
			else if(sTipo.equals("fecha_bajaDetalleActivoFijoBusqueda")) {
				this.jButtonfecha_bajaDetalleActivoFijoBusquedaActionPerformed(evt);
			}
			//BUSQUEDA GENERAL CAMPO
			else if(sTipo.equals("path_foto2DetalleActivoFijoBusqueda")) {
				this.jButtonpath_foto2DetalleActivoFijoBusquedaActionPerformed(evt);
			}
			
			DetalleActivoFijoBeanSwingJInternalFrameAdditional.procesarEventosVista(this.parametroGeneralUsuario,this.moduloActual,this.opcionActual,this.usuarioActual,this,FuncionTipo.AFTER,ControlTipo.KEY,EventoTipo.CLIC,EventoSubTipo.CLICKED,sTipo,this.detalleactivofijo,new Object(),this.detalleactivofijoParameterGeneral,this.detalleactivofijoReturnGeneral);
  		} catch(Exception e) {
  			FuncionesSwing.manageException2(this, e,logger,DetalleActivoFijoConstantesFunciones.CLASSNAME);
			
  		}  finally {
      		this.finishProcessDetalleActivoFijo();
      	}
    }
	
	public void internalFrameClosingInternalFrameGeneral(String sTipo,InternalFrameEvent evt) { 	  
		try {
			DetalleActivoFijoBeanSwingJInternalFrameAdditional.procesarEventosVista(this.parametroGeneralUsuario,this.moduloActual,this.opcionActual,this.usuarioActual,this,FuncionTipo.BEFORE,ControlTipo.WINDOW,EventoTipo.CLIC,EventoSubTipo.CLOSING,sTipo,this.detalleactivofijo,new Object(),this.detalleactivofijoParameterGeneral,this.detalleactivofijoReturnGeneral);
			
			if(sTipo.equals("CloseInternalFrameDetalleActivoFijo")) {
				closingInternalFrameDetalleActivoFijo();
				
			} else if(sTipo.equals("jButtonCancelarDetalleActivoFijo")) {
				JInternalFrameBase jInternalFrameDetalleFormDetalleActivoFijo = (JInternalFrameBase)evt.getSource();
	            	
	            DetalleActivoFijoBeanSwingJInternalFrame jInternalFrameParent=(DetalleActivoFijoBeanSwingJInternalFrame)jInternalFrameDetalleFormDetalleActivoFijo.getjInternalFrameParent();
	            
				jInternalFrameParent.jButtonCancelarDetalleActivoFijoActionPerformed(null);
			}
			
			DetalleActivoFijoBeanSwingJInternalFrameAdditional.procesarEventosVista(this.parametroGeneralUsuario,this.moduloActual,this.opcionActual,this.usuarioActual,this,FuncionTipo.AFTER,ControlTipo.WINDOW,EventoTipo.CLIC,EventoSubTipo.CLOSING,sTipo,this.detalleactivofijo,new Object(),this.detalleactivofijoParameterGeneral,this.detalleactivofijoReturnGeneral);
  		} catch(Exception e) {
  			FuncionesSwing.manageException2(this, e,logger,DetalleActivoFijoConstantesFunciones.CLASSNAME);
  		}
    }
	
	public void recargarFormDetalleActivoFijo(String sTipo,String sDominio,EventoGlobalTipo eventoGlobalTipo,ControlTipo controlTipo,EventoTipo eventoTipo,EventoSubTipo eventoSubTipo,String sTipoGeneral,ArrayList<Classe> classes,Boolean conIrServidorAplicacion) throws Exception {
		this.recargarFormDetalleActivoFijo(sTipo,sDominio,eventoGlobalTipo,controlTipo,eventoTipo,eventoSubTipo,sTipoGeneral,classes,conIrServidorAplicacion,false);
	}
	
	public void recargarFormDetalleActivoFijo(String sTipo,String sDominio,EventoGlobalTipo eventoGlobalTipo,ControlTipo controlTipo,EventoTipo eventoTipo,EventoSubTipo eventoSubTipo,String sTipoGeneral,ArrayList<Classe> classes,Boolean conIrServidorAplicacion,Boolean esControlTabla) throws Exception {
		if(this.permiteRecargarForm && this.permiteMantenimiento(this.detalleactivofijo)) {
			if(!esControlTabla) {
				if(DetalleActivoFijoJInternalFrame.ISBINDING_MANUAL_TABLA) {			
					this.setVariablesFormularioToObjetoActualDetalleActivoFijo(this.detalleactivofijo,true,false);
					this.setVariablesFormularioToObjetoActualForeignKeysDetalleActivoFijo(this.detalleactivofijo);			
				}
				
				if(this.detalleactivofijoSessionBean.getEstaModoGuardarRelaciones()) {
					this.setVariablesFormularioRelacionesToObjetoActualDetalleActivoFijo(this.detalleactivofijo,classes);				
				}
			
				if(conIrServidorAplicacion) {
					//ARCHITECTURE
					if(Constantes.ISUSAEJBLOGICLAYER) {						
						this.detalleactivofijoReturnGeneral=detalleactivofijoLogic.procesarEventosDetalleActivoFijosWithConnection(this.parametroGeneralUsuario,this.moduloActual,this.opcionActual,this.usuarioActual,eventoGlobalTipo,controlTipo,eventoTipo,eventoSubTipo,sTipo,this.detalleactivofijoLogic.getDetalleActivoFijos(),this.detalleactivofijo,this.detalleactivofijoParameterGeneral,this.isEsNuevoDetalleActivoFijo,classes);//this.detalleactivofijoLogic.getDetalleActivoFijo()//sTipoGeneral
									
					} else if(Constantes.ISUSAEJBREMOTE) {
									
					} else if(Constantes.ISUSAEJBHOME) {
					}
					//ARCHITECTURE
					
					//ACTUALIZA VARIABLES DEFECTO DESDE LOGIC A RETURN GENERAL Y LUEGO A BEAN
					//this.setVariablesObjetoReturnGeneralToBeanDetalleActivoFijo(this.detalleactivofijoReturnGeneral,this.detalleactivofijoBean,false);
						
					//ACTUALIZA VARIABLES RELACIONES DEFECTO DESDE LOGIC A RETURN GENERAL Y LUEGO A BEAN
					if(this.detalleactivofijoSessionBean.getEstaModoGuardarRelaciones()) {
						//this.setVariablesRelacionesObjetoReturnGeneralToBeanDetalleActivoFijo(classes,this.detalleactivofijoReturnGeneral,this.detalleactivofijoBean,false);
					}
						
					if(this.detalleactivofijoReturnGeneral.getConRecargarPropiedades()) {
						//INICIALIZA VARIABLES COMBOS NORMALES (FK)
						this.setVariablesObjetoActualToFormularioForeignKeyDetalleActivoFijo(this.detalleactivofijoReturnGeneral.getDetalleActivoFijo());
							
						//INICIALIZA VARIABLES NORMALES A FORMULARIO(SIN FK)
						this.setVariablesObjetoActualToFormularioDetalleActivoFijo(this.detalleactivofijoReturnGeneral.getDetalleActivoFijo());	
					}
						
					if(this.detalleactivofijoReturnGeneral.getConRecargarRelaciones()) {
						//INICIALIZA VARIABLES RELACIONES A FORMULARIO
						this.setVariablesRelacionesObjetoActualToFormularioDetalleActivoFijo(this.detalleactivofijoReturnGeneral.getDetalleActivoFijo(),classes);//this.detalleactivofijoBean);	
					}									
					
				} else {				
					//INICIALIZA VARIABLES RELACIONES A FORMULARIO
					this.setVariablesRelacionesObjetoActualToFormularioDetalleActivoFijo(this.detalleactivofijo,classes);//this.detalleactivofijoBean);									
				}
			
				if(DetalleActivoFijoJInternalFrame.ISBINDING_MANUAL_TABLA) {
					this.setVariablesFormularioToObjetoActualDetalleActivoFijo(this.detalleactivofijo,true,false);
					this.setVariablesFormularioToObjetoActualForeignKeysDetalleActivoFijo(this.detalleactivofijo);				
				}
				
			} else {
				
				if(((controlTipo.equals(ControlTipo.TEXTBOX) || controlTipo.equals(ControlTipo.DATE)
					|| controlTipo.equals(ControlTipo.TEXTAREA) || controlTipo.equals(ControlTipo.COMBOBOX)
					)				
					&& eventoTipo.equals(EventoTipo.CHANGE)
					)
					
					|| (controlTipo.equals(ControlTipo.CHECKBOX) && eventoTipo.equals(EventoTipo.CLIC))
					
				) { // && sTipoGeneral.equals("TEXTBOX")
					
					if(this.detalleactivofijoAnterior!=null) {
						this.detalleactivofijo=this.detalleactivofijoAnterior;
					}
				}
				
				if(conIrServidorAplicacion) {
					//ARCHITECTURE
					if(Constantes.ISUSAEJBLOGICLAYER) {						
						this.detalleactivofijoReturnGeneral=detalleactivofijoLogic.procesarEventosDetalleActivoFijosWithConnection(this.parametroGeneralUsuario,this.moduloActual,this.opcionActual,this.usuarioActual,eventoGlobalTipo,controlTipo,eventoTipo,eventoSubTipo,sTipo,this.detalleactivofijoLogic.getDetalleActivoFijos(),this.detalleactivofijo,this.detalleactivofijoParameterGeneral,this.isEsNuevoDetalleActivoFijo,classes);//this.detalleactivofijoLogic.getDetalleActivoFijo()//sTipoGeneral
									
					} else if(Constantes.ISUSAEJBREMOTE) {
									
					} else if(Constantes.ISUSAEJBHOME) {
					}
					//ARCHITECTURE
				}
				
				//ARCHITECTURE
				if(Constantes.ISUSAEJBLOGICLAYER) {
					//NO ENTENDIBLE PORQUE PONER
					//if(this.detalleactivofijoSessionBean.getEstaModoGuardarRelaciones() 
					//	|| this.detalleactivofijoSessionBean.getEsGuardarRelacionado())	{
						actualizarLista(this.detalleactivofijoReturnGeneral.getDetalleActivoFijo(),detalleactivofijoLogic.getDetalleActivoFijos());
					//}
				} else if(Constantes.ISUSAEJBREMOTE||Constantes.ISUSAEJBHOME) {
					actualizarLista(this.detalleactivofijoReturnGeneral.getDetalleActivoFijo(),this.detalleactivofijos);
				}
				//ARCHITECTURE
				
				//this.jTableDatosDetalleActivoFijo.repaint();
				
				//((AbstractTableModel) this.jTableDatosDetalleActivoFijo.getModel()).fireTableDataChanged();
				
				this.actualizarVisualTableDatosDetalleActivoFijo();
			}
		}
	}
	
	public void actualizarVisualTableDatosDetalleActivoFijo() throws Exception {
		
		DetalleActivoFijoModel detalleactivofijoModel=(DetalleActivoFijoModel)this.jTableDatosDetalleActivoFijo.getModel();
		
		if(Constantes.ISUSAEJBLOGICLAYER) {
			detalleactivofijoModel.detalleactivofijos=this.detalleactivofijoLogic.getDetalleActivoFijos();
		
		} else if(Constantes.ISUSAEJBREMOTE || Constantes.ISUSAEJBHOME ) {
			detalleactivofijoModel.detalleactivofijos=this.detalleactivofijos;
		}
		
		
		((DetalleActivoFijoModel) this.jTableDatosDetalleActivoFijo.getModel()).fireTableDataChanged();
	}
	
	public void actualizarVisualTableDatosEventosVistaDetalleActivoFijo() throws Exception {
		
		//ARCHITECTURE
		if(Constantes.ISUSAEJBLOGICLAYER) {
			this.actualizarLista(this.getdetalleactivofijoAnterior(),this.detalleactivofijoLogic.getDetalleActivoFijos());
					
		} else if(Constantes.ISUSAEJBREMOTE||Constantes.ISUSAEJBHOME) {
			this.actualizarLista(this.getdetalleactivofijoAnterior(),this.detalleactivofijos);
		}
		//ARCHITECTURE
						
		this.actualizarFilaTotales();
						
		this.actualizarVisualTableDatosDetalleActivoFijo();	
	}
	
	public void setVariablesRelacionesObjetoActualToFormularioDetalleActivoFijo(DetalleActivoFijo detalleactivofijo,ArrayList<Classe> classes) throws Exception { 
		try {
			
			for(Classe clas:classes) {
				if(clas.clas.equals(MantenimientoActivoFijo.class)) {
					this.jInternalFrameDetalleFormDetalleActivoFijo.mantenimientoactivofijoBeanSwingJInternalFrame.mantenimientoactivofijoLogic.setMantenimientoActivoFijos(detalleactivofijo.getMantenimientoActivoFijos());
					this.jInternalFrameDetalleFormDetalleActivoFijo.mantenimientoactivofijoBeanSwingJInternalFrame.inicializarActualizarBindingTablaMantenimientoActivoFijo(false);
					break;
				}
			}
			for(Classe clas:classes) {
				if(clas.clas.equals(ServicioTransporte.class)) {
					this.jInternalFrameDetalleFormDetalleActivoFijo.serviciotransporteBeanSwingJInternalFrame.serviciotransporteLogic.setServicioTransportes(detalleactivofijo.getServicioTransportes());
					this.jInternalFrameDetalleFormDetalleActivoFijo.serviciotransporteBeanSwingJInternalFrame.inicializarActualizarBindingTablaServicioTransporte(false);
					break;
				}
			}
			for(Classe clas:classes) {
				if(clas.clas.equals(MovimientoActivoFijo.class)) {
					this.jInternalFrameDetalleFormDetalleActivoFijo.movimientoactivofijoBeanSwingJInternalFrame.movimientoactivofijoLogic.setMovimientoActivoFijos(detalleactivofijo.getMovimientoActivoFijoDestinos());
					this.jInternalFrameDetalleFormDetalleActivoFijo.movimientoactivofijoBeanSwingJInternalFrame.inicializarActualizarBindingTablaMovimientoActivoFijo(false);
					break;
				}
			}
			for(Classe clas:classes) {
				if(clas.clas.equals(Vehiculo.class)) {
					this.jInternalFrameDetalleFormDetalleActivoFijo.vehiculoBeanSwingJInternalFrame.vehiculoLogic.setVehiculos(detalleactivofijo.getVehiculos());
					this.jInternalFrameDetalleFormDetalleActivoFijo.vehiculoBeanSwingJInternalFrame.inicializarActualizarBindingTablaVehiculo(false);
					break;
				}
			}
			for(Classe clas:classes) {
				if(clas.clas.equals(MetodoDepreciacion.class)) {
					this.jInternalFrameDetalleFormDetalleActivoFijo.metododepreciacionBeanSwingJInternalFrame.metododepreciacionLogic.setMetodoDepreciacions(detalleactivofijo.getMetodoDepreciacions());
					this.jInternalFrameDetalleFormDetalleActivoFijo.metododepreciacionBeanSwingJInternalFrame.inicializarActualizarBindingTablaMetodoDepreciacion(false);
					break;
				}
			}
			for(Classe clas:classes) {
				if(clas.clas.equals(ResponsableActivoFijo.class)) {
					this.jInternalFrameDetalleFormDetalleActivoFijo.responsableactivofijoBeanSwingJInternalFrame.responsableactivofijoLogic.setResponsableActivoFijos(detalleactivofijo.getResponsableActivoFijos());
					this.jInternalFrameDetalleFormDetalleActivoFijo.responsableactivofijoBeanSwingJInternalFrame.inicializarActualizarBindingTablaResponsableActivoFijo(false);
					break;
				}
			}
			for(Classe clas:classes) {
				if(clas.clas.equals(DepreciacionActivoFijo.class)) {
					this.jInternalFrameDetalleFormDetalleActivoFijo.depreciacionactivofijoBeanSwingJInternalFrame.depreciacionactivofijoLogic.setDepreciacionActivoFijos(detalleactivofijo.getDepreciacionActivoFijos());
					this.jInternalFrameDetalleFormDetalleActivoFijo.depreciacionactivofijoBeanSwingJInternalFrame.inicializarActualizarBindingTablaDepreciacionActivoFijo(false);
					break;
				}
			}
			for(Classe clas:classes) {
				if(clas.clas.equals(GastoDepreciacionCentroCosto.class)) {
					this.jInternalFrameDetalleFormDetalleActivoFijo.gastodepreciacioncentrocostoBeanSwingJInternalFrame.gastodepreciacioncentrocostoLogic.setGastoDepreciacionCentroCostos(detalleactivofijo.getGastoDepreciacionCentroCostos());
					this.jInternalFrameDetalleFormDetalleActivoFijo.gastodepreciacioncentrocostoBeanSwingJInternalFrame.inicializarActualizarBindingTablaGastoDepreciacionCentroCosto(false);
					break;
				}
			}
			for(Classe clas:classes) {
				if(clas.clas.equals(ParteActivoFijo.class)) {
					this.jInternalFrameDetalleFormDetalleActivoFijo.parteactivofijoBeanSwingJInternalFrame.parteactivofijoLogic.setParteActivoFijos(detalleactivofijo.getParteActivoFijos());
					this.jInternalFrameDetalleFormDetalleActivoFijo.parteactivofijoBeanSwingJInternalFrame.inicializarActualizarBindingTablaParteActivoFijo(false);
					break;
				}
			}
			
		} catch(Exception e) {
			FuncionesSwing.manageException(this, e,logger,DetalleActivoFijoConstantesFunciones.CLASSNAME);
		}
	}
	
	public void setEventoParentGeneral(Boolean esUsoDesdeHijo,String sDominio,String sDominioTipo,String sTipo,String sTipoGeneral,Boolean esControlTabla,Boolean conIrServidorAplicacion,
						Long id,Component control, EventoGlobalTipo eventoGlobalTipo,ControlTipo controlTipo,EventoTipo eventoTipo,EventoSubTipo eventoSubTipo,ArrayList<String> arrClasses,
						Object evt,GeneralEntityParameterReturnGeneral generalEntityParameterGeneral,Object otro) { 	  
		try {
			
			if(this.permiteManejarEventosControl()) {
				
				//BASE COPIADO DESDE TEXTFIELLOSTFOCUS
				
				//EventoGlobalTipo.FORM_HIJO_ACTUALIZAR;
				Boolean conTodasRelaciones=false;
				
				this.esUsoDesdeHijo=esUsoDesdeHijo;
										
				DetalleActivoFijoBeanSwingJInternalFrameAdditional.procesarEventosVista(this.parametroGeneralUsuario,this.moduloActual,this.opcionActual,this.usuarioActual,this,FuncionTipo.BEFORE,controlTipo,eventoTipo,eventoSubTipo,sTipo,this.detalleactivofijo,new Object(),generalEntityParameterGeneral,this.detalleactivofijoReturnGeneral);
				
				ArrayList<Classe> classes=new ArrayList<Classe>();
				
				for(String sClasse:arrClasses) {
					if(sClasse.equals("TODOS")) {
						conTodasRelaciones=true;
						break;
					}
				}
				
				if(this.detalleactivofijoSessionBean.getConGuardarRelaciones()) {
					if(conTodasRelaciones) {
						classes=DetalleActivoFijoConstantesFunciones.getClassesRelationshipsOfDetalleActivoFijo(new ArrayList<Classe>(),DeepLoadType.NONE);
					} else {
						classes=DetalleActivoFijoConstantesFunciones.getClassesRelationshipsFromStringsOfDetalleActivoFijo(arrClasses,DeepLoadType.NONE);
					}
				}
	
				this.classesActual=new ArrayList<Classe>();
				this.classesActual.addAll(classes);
	
				this.recargarFormDetalleActivoFijo(sTipo,sDominio,eventoGlobalTipo,controlTipo,eventoTipo,eventoSubTipo,sTipoGeneral,classes,conIrServidorAplicacion,esControlTabla);
										
				DetalleActivoFijoBeanSwingJInternalFrameAdditional.procesarEventosVista(this.parametroGeneralUsuario,this.moduloActual,this.opcionActual,this.usuarioActual,this,FuncionTipo.AFTER,controlTipo,eventoTipo,eventoSubTipo,sTipo,this.detalleactivofijo,new Object(),generalEntityParameterGeneral,this.detalleactivofijoReturnGeneral);
			}
			
		} catch(Exception e) {
  			FuncionesSwing.manageException2(this, e,logger,DetalleActivoFijoConstantesFunciones.CLASSNAME);
  		}
    }
	
	/*
	public void setVariablesRelacionesObjetoBeanActualToFormularioDetalleActivoFijo(DetalleActivoFijoBean detalleactivofijoBean) throws Exception { 
		try {
			
			for(Classe clas:classes) {
				if(clas.clas.equals(MantenimientoActivoFijo.class)) {
					this.jInternalFrameDetalleFormDetalleActivoFijo.mantenimientoactivofijoBeanSwingJInternalFrame.mantenimientoactivofijoLogic.setMantenimientoActivoFijos(detalleactivofijo.getMantenimientoActivoFijos());
					this.jInternalFrameDetalleFormDetalleActivoFijo.mantenimientoactivofijoBeanSwingJInternalFrame.inicializarActualizarBindingTablaMantenimientoActivoFijo(false);
					break;
				}
			}
			for(Classe clas:classes) {
				if(clas.clas.equals(ServicioTransporte.class)) {
					this.jInternalFrameDetalleFormDetalleActivoFijo.serviciotransporteBeanSwingJInternalFrame.serviciotransporteLogic.setServicioTransportes(detalleactivofijo.getServicioTransportes());
					this.jInternalFrameDetalleFormDetalleActivoFijo.serviciotransporteBeanSwingJInternalFrame.inicializarActualizarBindingTablaServicioTransporte(false);
					break;
				}
			}
			for(Classe clas:classes) {
				if(clas.clas.equals(MovimientoActivoFijo.class)) {
					this.jInternalFrameDetalleFormDetalleActivoFijo.movimientoactivofijoBeanSwingJInternalFrame.movimientoactivofijoLogic.setMovimientoActivoFijos(detalleactivofijo.getMovimientoActivoFijoDestinos());
					this.jInternalFrameDetalleFormDetalleActivoFijo.movimientoactivofijoBeanSwingJInternalFrame.inicializarActualizarBindingTablaMovimientoActivoFijo(false);
					break;
				}
			}
			for(Classe clas:classes) {
				if(clas.clas.equals(Vehiculo.class)) {
					this.jInternalFrameDetalleFormDetalleActivoFijo.vehiculoBeanSwingJInternalFrame.vehiculoLogic.setVehiculos(detalleactivofijo.getVehiculos());
					this.jInternalFrameDetalleFormDetalleActivoFijo.vehiculoBeanSwingJInternalFrame.inicializarActualizarBindingTablaVehiculo(false);
					break;
				}
			}
			for(Classe clas:classes) {
				if(clas.clas.equals(MetodoDepreciacion.class)) {
					this.jInternalFrameDetalleFormDetalleActivoFijo.metododepreciacionBeanSwingJInternalFrame.metododepreciacionLogic.setMetodoDepreciacions(detalleactivofijo.getMetodoDepreciacions());
					this.jInternalFrameDetalleFormDetalleActivoFijo.metododepreciacionBeanSwingJInternalFrame.inicializarActualizarBindingTablaMetodoDepreciacion(false);
					break;
				}
			}
			for(Classe clas:classes) {
				if(clas.clas.equals(ResponsableActivoFijo.class)) {
					this.jInternalFrameDetalleFormDetalleActivoFijo.responsableactivofijoBeanSwingJInternalFrame.responsableactivofijoLogic.setResponsableActivoFijos(detalleactivofijo.getResponsableActivoFijos());
					this.jInternalFrameDetalleFormDetalleActivoFijo.responsableactivofijoBeanSwingJInternalFrame.inicializarActualizarBindingTablaResponsableActivoFijo(false);
					break;
				}
			}
			for(Classe clas:classes) {
				if(clas.clas.equals(DepreciacionActivoFijo.class)) {
					this.jInternalFrameDetalleFormDetalleActivoFijo.depreciacionactivofijoBeanSwingJInternalFrame.depreciacionactivofijoLogic.setDepreciacionActivoFijos(detalleactivofijo.getDepreciacionActivoFijos());
					this.jInternalFrameDetalleFormDetalleActivoFijo.depreciacionactivofijoBeanSwingJInternalFrame.inicializarActualizarBindingTablaDepreciacionActivoFijo(false);
					break;
				}
			}
			for(Classe clas:classes) {
				if(clas.clas.equals(GastoDepreciacionCentroCosto.class)) {
					this.jInternalFrameDetalleFormDetalleActivoFijo.gastodepreciacioncentrocostoBeanSwingJInternalFrame.gastodepreciacioncentrocostoLogic.setGastoDepreciacionCentroCostos(detalleactivofijo.getGastoDepreciacionCentroCostos());
					this.jInternalFrameDetalleFormDetalleActivoFijo.gastodepreciacioncentrocostoBeanSwingJInternalFrame.inicializarActualizarBindingTablaGastoDepreciacionCentroCosto(false);
					break;
				}
			}
			for(Classe clas:classes) {
				if(clas.clas.equals(ParteActivoFijo.class)) {
					this.jInternalFrameDetalleFormDetalleActivoFijo.parteactivofijoBeanSwingJInternalFrame.parteactivofijoLogic.setParteActivoFijos(detalleactivofijo.getParteActivoFijos());
					this.jInternalFrameDetalleFormDetalleActivoFijo.parteactivofijoBeanSwingJInternalFrame.inicializarActualizarBindingTablaParteActivoFijo(false);
					break;
				}
			}
			
		} catch(Exception e) {
			FuncionesSwing.manageException(this, e,logger,DetalleActivoFijoConstantesFunciones.CLASSNAME);
		}
	}
	*/
	
	/*
	public void setVariablesRelacionesObjetoReturnGeneralToBeanDetalleActivoFijo(ArrayList<Classe> classes,DetalleActivoFijoReturnGeneral detalleactivofijoReturnGeneral,DetalleActivoFijoBean detalleactivofijoBean,Boolean conDefault) throws Exception {
		
			this.detalleactivofijoBean.setMantenimientoActivoFijos(detalleactivofijoReturnGeneral.getDetalleActivoFijo().getMantenimientoActivoFijos());
			this.detalleactivofijoBean.setServicioTransportes(detalleactivofijoReturnGeneral.getDetalleActivoFijo().getServicioTransportes());
			this.detalleactivofijoBean.setMovimientoActivoFijos(detalleactivofijoReturnGeneral.getDetalleActivoFijo().getMovimientoActivoFijos());
			this.detalleactivofijoBean.setVehiculos(detalleactivofijoReturnGeneral.getDetalleActivoFijo().getVehiculos());
			this.detalleactivofijoBean.setMetodoDepreciacions(detalleactivofijoReturnGeneral.getDetalleActivoFijo().getMetodoDepreciacions());
			this.detalleactivofijoBean.setResponsableActivoFijos(detalleactivofijoReturnGeneral.getDetalleActivoFijo().getResponsableActivoFijos());
			this.detalleactivofijoBean.setDepreciacionActivoFijos(detalleactivofijoReturnGeneral.getDetalleActivoFijo().getDepreciacionActivoFijos());
			this.detalleactivofijoBean.setGastoDepreciacionCentroCostos(detalleactivofijoReturnGeneral.getDetalleActivoFijo().getGastoDepreciacionCentroCostos());
			this.detalleactivofijoBean.setParteActivoFijos(detalleactivofijoReturnGeneral.getDetalleActivoFijo().getParteActivoFijos());
	}
	*/
	
	public void setVariablesFormularioRelacionesToObjetoActualDetalleActivoFijo(DetalleActivoFijo detalleactivofijo,ArrayList<Classe> classes) throws Exception {
		
			for(Classe clas:classes) {
				if(clas.clas.equals(MantenimientoActivoFijo.class)) {
					detalleactivofijo.setMantenimientoActivoFijos(this.jInternalFrameDetalleFormDetalleActivoFijo.mantenimientoactivofijoBeanSwingJInternalFrame.mantenimientoactivofijoLogic.getMantenimientoActivoFijos());
					break;
				}
			}
			for(Classe clas:classes) {
				if(clas.clas.equals(ServicioTransporte.class)) {
					detalleactivofijo.setServicioTransportes(this.jInternalFrameDetalleFormDetalleActivoFijo.serviciotransporteBeanSwingJInternalFrame.serviciotransporteLogic.getServicioTransportes());
					break;
				}
			}
			for(Classe clas:classes) {
				if(clas.clas.equals(MovimientoActivoFijo.class)) {
					detalleactivofijo.setMovimientoActivoFijoDestinos(this.jInternalFrameDetalleFormDetalleActivoFijo.movimientoactivofijoBeanSwingJInternalFrame.movimientoactivofijoLogic.getMovimientoActivoFijos());
					break;
				}
			}
			for(Classe clas:classes) {
				if(clas.clas.equals(Vehiculo.class)) {
					detalleactivofijo.setVehiculos(this.jInternalFrameDetalleFormDetalleActivoFijo.vehiculoBeanSwingJInternalFrame.vehiculoLogic.getVehiculos());
					break;
				}
			}
			for(Classe clas:classes) {
				if(clas.clas.equals(MetodoDepreciacion.class)) {
					detalleactivofijo.setMetodoDepreciacions(this.jInternalFrameDetalleFormDetalleActivoFijo.metododepreciacionBeanSwingJInternalFrame.metododepreciacionLogic.getMetodoDepreciacions());
					break;
				}
			}
			for(Classe clas:classes) {
				if(clas.clas.equals(ResponsableActivoFijo.class)) {
					detalleactivofijo.setResponsableActivoFijos(this.jInternalFrameDetalleFormDetalleActivoFijo.responsableactivofijoBeanSwingJInternalFrame.responsableactivofijoLogic.getResponsableActivoFijos());
					break;
				}
			}
			for(Classe clas:classes) {
				if(clas.clas.equals(DepreciacionActivoFijo.class)) {
					detalleactivofijo.setDepreciacionActivoFijos(this.jInternalFrameDetalleFormDetalleActivoFijo.depreciacionactivofijoBeanSwingJInternalFrame.depreciacionactivofijoLogic.getDepreciacionActivoFijos());
					break;
				}
			}
			for(Classe clas:classes) {
				if(clas.clas.equals(GastoDepreciacionCentroCosto.class)) {
					detalleactivofijo.setGastoDepreciacionCentroCostos(this.jInternalFrameDetalleFormDetalleActivoFijo.gastodepreciacioncentrocostoBeanSwingJInternalFrame.gastodepreciacioncentrocostoLogic.getGastoDepreciacionCentroCostos());
					break;
				}
			}
			for(Classe clas:classes) {
				if(clas.clas.equals(ParteActivoFijo.class)) {
					detalleactivofijo.setParteActivoFijos(this.jInternalFrameDetalleFormDetalleActivoFijo.parteactivofijoBeanSwingJInternalFrame.parteactivofijoLogic.getParteActivoFijos());
					break;
				}
			}
	}
	
	public Boolean permiteManejarEventosControl() {
		Boolean permite=true;				
		
		if(this.estaModoNuevo || this.estaModoSeleccionar || this.estaModoEliminarGuardarCambios) {
			permite=false;
			
		} 
		
		//NO DEBE MEZCLARSE CONCEPTOS
		/*	
		if(!paraTabla && !this.permiteMantenimiento(this.detalleactivofijo)) {
			System.out.println("ERROR:EL OBJETO ACTUAL NO PUEDE SER FILA TOTALES");
				
			//JOptionPane.showMessageDialog(this,"EL OBJETO ACTUAL NO PUEDE SER FILA TOTALES","EVENTO",JOptionPane.ERROR_MESSAGE);			
		}
		*/
		
		return permite;
	}
	
	public void inicializarFormDetalle() throws Exception {
		
		this.jInternalFrameDetalleFormDetalleActivoFijo = new DetalleActivoFijoDetalleFormJInternalFrame(jDesktopPane,this.detalleactivofijoSessionBean.getConGuardarRelaciones(),this.detalleactivofijoSessionBean.getEsGuardarRelacionado(),this.cargarRelaciones,usuarioActual,resumenUsuarioActual,moduloActual,opcionActual,parametroGeneralSg,parametroGeneralUsuario,paginaTipo);
		
		this.jDesktopPane.add(this.jInternalFrameDetalleFormDetalleActivoFijo);
		this.jInternalFrameDetalleFormDetalleActivoFijo.setVisible(false);
		this.jInternalFrameDetalleFormDetalleActivoFijo.setSelected(false);						
		
		this.jInternalFrameDetalleFormDetalleActivoFijo.setJInternalFrameParent(this);
		
		this.jInternalFrameDetalleFormDetalleActivoFijo.detalleactivofijoLogic=this.detalleactivofijoLogic;
		
		this.cargarCombosFrameForeignKeyDetalleActivoFijo("Formulario");
		
		this.inicializarActualizarBindingBotonesPermisosManualFormDetalleDetalleActivoFijo();
		this.inicializarActualizarBindingtiposArchivosReportesAccionesManualFormDetalleDetalleActivoFijo();
		
		this.initActionsFormDetalle();		
		
		this.initActionsCombosTodosForeignKeyDetalleActivoFijo("Formulario");
		
		//TALVEZ conSetVariablesGlobales COMO if() 
		this.setVariablesGlobalesCombosForeignKeyDetalleActivoFijo();
		
		this.cargarMenuRelaciones();
		
	}
	
	public void initActionsFormDetalle() {	
		
		this.jInternalFrameDetalleFormDetalleActivoFijo.addInternalFrameListener(new InternalFrameInternalFrameAdapter(this,"jButtonCancelarDetalleActivoFijo"));
		
		this.jInternalFrameDetalleFormDetalleActivoFijo.jButtonModificarDetalleActivoFijo.addActionListener(new ButtonActionListener(this,"ModificarDetalleActivoFijo"));

		
		this.jInternalFrameDetalleFormDetalleActivoFijo.jButtonModificarToolBarDetalleActivoFijo.addActionListener(new ButtonActionListener(this,"ModificarToolBarDetalleActivoFijo"));
					
		this.jInternalFrameDetalleFormDetalleActivoFijo.jMenuItemModificarDetalleActivoFijo.addActionListener(new ButtonActionListener(this,"MenuItemModificarDetalleActivoFijo"));		
		
		
		
		this.jInternalFrameDetalleFormDetalleActivoFijo.jButtonActualizarDetalleActivoFijo.addActionListener (new ButtonActionListener(this,"ActualizarDetalleActivoFijo"));
		
		
		this.jInternalFrameDetalleFormDetalleActivoFijo.jButtonActualizarToolBarDetalleActivoFijo.addActionListener(new ButtonActionListener(this,"ActualizarToolBarDetalleActivoFijo"));
						
		this.jInternalFrameDetalleFormDetalleActivoFijo.jMenuItemActualizarDetalleActivoFijo.addActionListener (new ButtonActionListener(this,"MenuItemActualizarDetalleActivoFijo"));		
		
		
		
		this.jInternalFrameDetalleFormDetalleActivoFijo.jButtonEliminarDetalleActivoFijo.addActionListener (new ButtonActionListener(this,"EliminarDetalleActivoFijo"));
		
		
		this.jInternalFrameDetalleFormDetalleActivoFijo.jButtonEliminarToolBarDetalleActivoFijo.addActionListener (new ButtonActionListener(this,"EliminarToolBarDetalleActivoFijo"));
								
		this.jInternalFrameDetalleFormDetalleActivoFijo.jMenuItemEliminarDetalleActivoFijo.addActionListener (new ButtonActionListener(this,"MenuItemEliminarDetalleActivoFijo"));		
		
		
		
		this.jInternalFrameDetalleFormDetalleActivoFijo.jButtonCancelarDetalleActivoFijo.addActionListener (new ButtonActionListener(this,"CancelarDetalleActivoFijo"));
		
		
		this.jInternalFrameDetalleFormDetalleActivoFijo.jButtonCancelarToolBarDetalleActivoFijo.addActionListener (new ButtonActionListener(this,"CancelarToolBarDetalleActivoFijo"));
					
		this.jInternalFrameDetalleFormDetalleActivoFijo.jMenuItemCancelarDetalleActivoFijo.addActionListener (new ButtonActionListener(this,"MenuItemCancelarDetalleActivoFijo"));		
		
		
		
		
		
		this.jInternalFrameDetalleFormDetalleActivoFijo.jMenuItemDetalleCerrarDetalleActivoFijo.addActionListener (new ButtonActionListener(this,"MenuItemDetalleCerrarDetalleActivoFijo"));		
		
		
		
		this.jInternalFrameDetalleFormDetalleActivoFijo.jButtonGuardarCambiosToolBarDetalleActivoFijo.addActionListener (new ButtonActionListener(this,"GuardarCambiosToolBarDetalleActivoFijo"));
		
		
		
		this.jInternalFrameDetalleFormDetalleActivoFijo.jButtonGuardarCambiosToolBarDetalleActivoFijo.addActionListener (new ButtonActionListener(this,"GuardarCambiosToolBarDetalleActivoFijo"));
		
		
		
		this.jInternalFrameDetalleFormDetalleActivoFijo.jComboBoxTiposAccionesFormularioDetalleActivoFijo.addActionListener (new ButtonActionListener(this,"TiposAccionesFormularioDetalleActivoFijo"));
		
		
				
		
		//BUSQUEDA GENERAL
		this.jInternalFrameDetalleFormDetalleActivoFijo.jButtonidDetalleActivoFijoBusqueda.addActionListener(new ButtonActionListener(this,"idDetalleActivoFijoBusqueda"));
		//ACTUALIZAR FK
		this.jInternalFrameDetalleFormDetalleActivoFijo.jButtonid_empresaDetalleActivoFijoUpdate.addActionListener(new ButtonActionListener(this,"id_empresaDetalleActivoFijoUpdate"));
		//BUSQUEDA GENERAL
		this.jInternalFrameDetalleFormDetalleActivoFijo.jButtonid_empresaDetalleActivoFijoBusqueda.addActionListener(new ButtonActionListener(this,"id_empresaDetalleActivoFijoBusqueda"));
		//ACTUALIZAR FK
		this.jInternalFrameDetalleFormDetalleActivoFijo.jButtonid_sucursalDetalleActivoFijoUpdate.addActionListener(new ButtonActionListener(this,"id_sucursalDetalleActivoFijoUpdate"));
		//BUSQUEDA GENERAL
		this.jInternalFrameDetalleFormDetalleActivoFijo.jButtonid_sucursalDetalleActivoFijoBusqueda.addActionListener(new ButtonActionListener(this,"id_sucursalDetalleActivoFijoBusqueda"));
		//ACTUALIZAR FK
		this.jInternalFrameDetalleFormDetalleActivoFijo.jButtonid_detalle_grupo_activo_fijoDetalleActivoFijoUpdate.addActionListener(new ButtonActionListener(this,"id_detalle_grupo_activo_fijoDetalleActivoFijoUpdate"));
		//BUSQUEDA GENERAL
		this.jInternalFrameDetalleFormDetalleActivoFijo.jButtonid_detalle_grupo_activo_fijoDetalleActivoFijoBusqueda.addActionListener(new ButtonActionListener(this,"id_detalle_grupo_activo_fijoDetalleActivoFijoBusqueda"));
		//ACTUALIZAR FK
		this.jInternalFrameDetalleFormDetalleActivoFijo.jButtonid_sub_grupo_activo_fijoDetalleActivoFijoUpdate.addActionListener(new ButtonActionListener(this,"id_sub_grupo_activo_fijoDetalleActivoFijoUpdate"));
		//BUSQUEDA GENERAL
		this.jInternalFrameDetalleFormDetalleActivoFijo.jButtonid_sub_grupo_activo_fijoDetalleActivoFijoBusqueda.addActionListener(new ButtonActionListener(this,"id_sub_grupo_activo_fijoDetalleActivoFijoBusqueda"));
		//ACTUALIZAR FK
		this.jInternalFrameDetalleFormDetalleActivoFijo.jButtonid_tipo_ramo_activo_fijoDetalleActivoFijoUpdate.addActionListener(new ButtonActionListener(this,"id_tipo_ramo_activo_fijoDetalleActivoFijoUpdate"));
		//BUSQUEDA GENERAL
		this.jInternalFrameDetalleFormDetalleActivoFijo.jButtonid_tipo_ramo_activo_fijoDetalleActivoFijoBusqueda.addActionListener(new ButtonActionListener(this,"id_tipo_ramo_activo_fijoDetalleActivoFijoBusqueda"));
		//ACTUALIZAR FK
		this.jInternalFrameDetalleFormDetalleActivoFijo.jButtonid_tipo_activo_fijo_empresaDetalleActivoFijoUpdate.addActionListener(new ButtonActionListener(this,"id_tipo_activo_fijo_empresaDetalleActivoFijoUpdate"));
		//BUSQUEDA GENERAL
		this.jInternalFrameDetalleFormDetalleActivoFijo.jButtonid_tipo_activo_fijo_empresaDetalleActivoFijoBusqueda.addActionListener(new ButtonActionListener(this,"id_tipo_activo_fijo_empresaDetalleActivoFijoBusqueda"));
		//ACTUALIZAR FK
		this.jInternalFrameDetalleFormDetalleActivoFijo.jButtonid_tipo_depreciacion_empresaDetalleActivoFijoUpdate.addActionListener(new ButtonActionListener(this,"id_tipo_depreciacion_empresaDetalleActivoFijoUpdate"));
		//BUSQUEDA GENERAL
		this.jInternalFrameDetalleFormDetalleActivoFijo.jButtonid_tipo_depreciacion_empresaDetalleActivoFijoBusqueda.addActionListener(new ButtonActionListener(this,"id_tipo_depreciacion_empresaDetalleActivoFijoBusqueda"));
		//ACTUALIZAR FK
		this.jInternalFrameDetalleFormDetalleActivoFijo.jButtonid_estado_activo_fijoDetalleActivoFijoUpdate.addActionListener(new ButtonActionListener(this,"id_estado_activo_fijoDetalleActivoFijoUpdate"));
		//BUSQUEDA GENERAL
		this.jInternalFrameDetalleFormDetalleActivoFijo.jButtonid_estado_activo_fijoDetalleActivoFijoBusqueda.addActionListener(new ButtonActionListener(this,"id_estado_activo_fijoDetalleActivoFijoBusqueda"));
		//jButtonid_clienteDetalleActivoFijo.addActionListener (
		//	new java.awt.event.ActionListener() {
		//		public void actionPerformed(java.awt.event.ActionEvent evt) {
		//			jButtonid_clienteDetalleActivoFijoActionPerformed(evt);
		//		}
		//	}
		//);

		//BUSQUEDA CAMPO
		this.jInternalFrameDetalleFormDetalleActivoFijo.jButtonid_clienteDetalleActivoFijo.addActionListener(new ButtonActionListener(this,"id_clienteDetalleActivoFijo"));
		//ACTUALIZAR FK
		this.jInternalFrameDetalleFormDetalleActivoFijo.jButtonid_clienteDetalleActivoFijoUpdate.addActionListener(new ButtonActionListener(this,"id_clienteDetalleActivoFijoUpdate"));
		//BUSQUEDA GENERAL
		this.jInternalFrameDetalleFormDetalleActivoFijo.jButtonid_clienteDetalleActivoFijoBusqueda.addActionListener(new ButtonActionListener(this,"id_clienteDetalleActivoFijoBusqueda"));
		//ACTUALIZAR FK
		this.jInternalFrameDetalleFormDetalleActivoFijo.jButtonid_partida_presuDetalleActivoFijoUpdate.addActionListener(new ButtonActionListener(this,"id_partida_presuDetalleActivoFijoUpdate"));
		//BUSQUEDA GENERAL
		this.jInternalFrameDetalleFormDetalleActivoFijo.jButtonid_partida_presuDetalleActivoFijoBusqueda.addActionListener(new ButtonActionListener(this,"id_partida_presuDetalleActivoFijoBusqueda"));
		//BUSQUEDA GENERAL
		this.jInternalFrameDetalleFormDetalleActivoFijo.jButtoncodigoDetalleActivoFijoBusqueda.addActionListener(new ButtonActionListener(this,"codigoDetalleActivoFijoBusqueda"));
		//BUSQUEDA GENERAL
		this.jInternalFrameDetalleFormDetalleActivoFijo.jButtonnombreDetalleActivoFijoBusqueda.addActionListener(new ButtonActionListener(this,"nombreDetalleActivoFijoBusqueda"));
		//BUSQUEDA GENERAL
		this.jInternalFrameDetalleFormDetalleActivoFijo.jButtonserieDetalleActivoFijoBusqueda.addActionListener(new ButtonActionListener(this,"serieDetalleActivoFijoBusqueda"));
		//BUSQUEDA GENERAL
		this.jInternalFrameDetalleFormDetalleActivoFijo.jButtonfecha_compraDetalleActivoFijoBusqueda.addActionListener(new ButtonActionListener(this,"fecha_compraDetalleActivoFijoBusqueda"));
		//BUSQUEDA GENERAL
		this.jInternalFrameDetalleFormDetalleActivoFijo.jButtonfecha_mantenimientoDetalleActivoFijoBusqueda.addActionListener(new ButtonActionListener(this,"fecha_mantenimientoDetalleActivoFijoBusqueda"));
		//BUSQUEDA GENERAL
		this.jInternalFrameDetalleFormDetalleActivoFijo.jButtonfecha_correccionDetalleActivoFijoBusqueda.addActionListener(new ButtonActionListener(this,"fecha_correccionDetalleActivoFijoBusqueda"));
		//BUSQUEDA GENERAL
		this.jInternalFrameDetalleFormDetalleActivoFijo.jButtonfecha_depreciacionDetalleActivoFijoBusqueda.addActionListener(new ButtonActionListener(this,"fecha_depreciacionDetalleActivoFijoBusqueda"));
		//BUSQUEDA GENERAL
		this.jInternalFrameDetalleFormDetalleActivoFijo.jButtonclaveDetalleActivoFijoBusqueda.addActionListener(new ButtonActionListener(this,"claveDetalleActivoFijoBusqueda"));
		//BUSQUEDA GENERAL
		this.jInternalFrameDetalleFormDetalleActivoFijo.jButtonmarcaDetalleActivoFijoBusqueda.addActionListener(new ButtonActionListener(this,"marcaDetalleActivoFijoBusqueda"));
		//BUSQUEDA GENERAL
		this.jInternalFrameDetalleFormDetalleActivoFijo.jButtonmodeloDetalleActivoFijoBusqueda.addActionListener(new ButtonActionListener(this,"modeloDetalleActivoFijoBusqueda"));
		//BUSQUEDA GENERAL
		this.jInternalFrameDetalleFormDetalleActivoFijo.jButtoncolorDetalleActivoFijoBusqueda.addActionListener(new ButtonActionListener(this,"colorDetalleActivoFijoBusqueda"));
		//BUSQUEDA GENERAL
		this.jInternalFrameDetalleFormDetalleActivoFijo.jButtonfechaDetalleActivoFijoBusqueda.addActionListener(new ButtonActionListener(this,"fechaDetalleActivoFijoBusqueda"));
		//BUSQUEDA GENERAL
		this.jInternalFrameDetalleFormDetalleActivoFijo.jButtonvalor_utilDetalleActivoFijoBusqueda.addActionListener(new ButtonActionListener(this,"valor_utilDetalleActivoFijoBusqueda"));
		//BUSQUEDA GENERAL
		this.jInternalFrameDetalleFormDetalleActivoFijo.jButtoncosto_de_compraDetalleActivoFijoBusqueda.addActionListener(new ButtonActionListener(this,"costo_de_compraDetalleActivoFijoBusqueda"));
		//BUSQUEDA GENERAL
		this.jInternalFrameDetalleFormDetalleActivoFijo.jButtonvida_utilDetalleActivoFijoBusqueda.addActionListener(new ButtonActionListener(this,"vida_utilDetalleActivoFijoBusqueda"));
		//BUSQUEDA GENERAL
		this.jInternalFrameDetalleFormDetalleActivoFijo.jButtonvalor_residualDetalleActivoFijoBusqueda.addActionListener(new ButtonActionListener(this,"valor_residualDetalleActivoFijoBusqueda"));
		//BUSQUEDA GENERAL
		this.jInternalFrameDetalleFormDetalleActivoFijo.jButtoncantidadDetalleActivoFijoBusqueda.addActionListener(new ButtonActionListener(this,"cantidadDetalleActivoFijoBusqueda"));
		//BUSQUEDA GENERAL
		this.jInternalFrameDetalleFormDetalleActivoFijo.jButtonnombre_propietarioDetalleActivoFijoBusqueda.addActionListener(new ButtonActionListener(this,"nombre_propietarioDetalleActivoFijoBusqueda"));
		//BUSQUEDA GENERAL
		this.jInternalFrameDetalleFormDetalleActivoFijo.jButtonresponsableDetalleActivoFijoBusqueda.addActionListener(new ButtonActionListener(this,"responsableDetalleActivoFijoBusqueda"));
		//BUSQUEDA GENERAL
		this.jInternalFrameDetalleFormDetalleActivoFijo.jButtonpath_fotoDetalleActivoFijoBusqueda.addActionListener(new ButtonActionListener(this,"path_fotoDetalleActivoFijoBusqueda"));
		//BUSQUEDA GENERAL
		this.jInternalFrameDetalleFormDetalleActivoFijo.jButtonnumero_comprobanteDetalleActivoFijoBusqueda.addActionListener(new ButtonActionListener(this,"numero_comprobanteDetalleActivoFijoBusqueda"));
		//BUSQUEDA GENERAL
		this.jInternalFrameDetalleFormDetalleActivoFijo.jButtonreferenciaDetalleActivoFijoBusqueda.addActionListener(new ButtonActionListener(this,"referenciaDetalleActivoFijoBusqueda"));
		//BUSQUEDA GENERAL
		this.jInternalFrameDetalleFormDetalleActivoFijo.jButtonvalor_cotizacionDetalleActivoFijoBusqueda.addActionListener(new ButtonActionListener(this,"valor_cotizacionDetalleActivoFijoBusqueda"));
		//BUSQUEDA GENERAL
		this.jInternalFrameDetalleFormDetalleActivoFijo.jButtoncon_partesDetalleActivoFijoBusqueda.addActionListener(new ButtonActionListener(this,"con_partesDetalleActivoFijoBusqueda"));
		//BUSQUEDA GENERAL
		this.jInternalFrameDetalleFormDetalleActivoFijo.jButtoncon_garantiaDetalleActivoFijoBusqueda.addActionListener(new ButtonActionListener(this,"con_garantiaDetalleActivoFijoBusqueda"));
		//BUSQUEDA GENERAL
		this.jInternalFrameDetalleFormDetalleActivoFijo.jButtoncon_existenciaDetalleActivoFijoBusqueda.addActionListener(new ButtonActionListener(this,"con_existenciaDetalleActivoFijoBusqueda"));
		//BUSQUEDA GENERAL
		this.jInternalFrameDetalleFormDetalleActivoFijo.jButtonfecha_bajaDetalleActivoFijoBusqueda.addActionListener(new ButtonActionListener(this,"fecha_bajaDetalleActivoFijoBusqueda"));
		//BUSQUEDA GENERAL
		this.jInternalFrameDetalleFormDetalleActivoFijo.jButtonpath_foto2DetalleActivoFijoBusqueda.addActionListener(new ButtonActionListener(this,"path_foto2DetalleActivoFijoBusqueda"));
		
		
		;

		//TABBED PANE RELACIONES
		this.jInternalFrameDetalleFormDetalleActivoFijo.jTabbedPaneRelacionesDetalleActivoFijo.addChangeListener(new TabbedPaneChangeListener(this,"RelacionesDetalleActivoFijo"));
		
		;		
		//TABBED PANE RELACIONES FIN(EXTRA TAB)	
	}
	
	public void initActions() {				
		this.addInternalFrameListener(new InternalFrameInternalFrameAdapter(this,"CloseInternalFrameDetalleActivoFijo"));
		
		if(this.jInternalFrameDetalleFormDetalleActivoFijo!=null) { //if(this.conCargarFormDetalle) {
			this.jInternalFrameDetalleFormDetalleActivoFijo.addInternalFrameListener(new InternalFrameInternalFrameAdapter(this,"jButtonCancelarDetalleActivoFijo"));
		}
		
		this.jTableDatosDetalleActivoFijo.getSelectionModel().addListSelectionListener(new TableListSelectionListener(this,"TableDatosSeleccionarDetalleActivoFijo"));
		
		this.jTableDatosDetalleActivoFijo.addMouseListener(new TableMouseAdapter(this,"DatosSeleccionarDetalleActivoFijo"));
		
		this.jButtonNuevoDetalleActivoFijo.addActionListener(new ButtonActionListener(this,"NuevoDetalleActivoFijo"));
		
		this.jButtonDuplicarDetalleActivoFijo.addActionListener(new ButtonActionListener(this,"DuplicarDetalleActivoFijo"));
		
		this.jButtonCopiarDetalleActivoFijo.addActionListener(new ButtonActionListener(this,"CopiarDetalleActivoFijo"));
		
		this.jButtonVerFormDetalleActivoFijo.addActionListener(new ButtonActionListener(this,"VerFormDetalleActivoFijo"));
		
		
		this.jButtonNuevoToolBarDetalleActivoFijo.addActionListener(new ButtonActionListener(this,"NuevoToolBarDetalleActivoFijo"));
			
		this.jButtonDuplicarToolBarDetalleActivoFijo.addActionListener(new ButtonActionListener(this,"DuplicarToolBarDetalleActivoFijo"));
			
		this.jMenuItemNuevoDetalleActivoFijo.addActionListener (new ButtonActionListener(this,"MenuItemNuevoDetalleActivoFijo"));
			
		this.jMenuItemDuplicarDetalleActivoFijo.addActionListener (new ButtonActionListener(this,"MenuItemDuplicarDetalleActivoFijo"));		
		
		
		this.jButtonNuevoRelacionesDetalleActivoFijo.addActionListener (new ButtonActionListener(this,"NuevoRelacionesDetalleActivoFijo"));
		
		
		this.jButtonNuevoRelacionesToolBarDetalleActivoFijo.addActionListener(new ButtonActionListener(this,"NuevoRelacionesToolBarDetalleActivoFijo"));
			
		this.jMenuItemNuevoRelacionesDetalleActivoFijo.addActionListener(new ButtonActionListener(this,"MenuItemNuevoRelacionesDetalleActivoFijo"));		
		
		
		if(this.jInternalFrameDetalleFormDetalleActivoFijo!=null) { //if(this.conCargarFormDetalle) {
			this.jInternalFrameDetalleFormDetalleActivoFijo.jButtonModificarDetalleActivoFijo.addActionListener(new ButtonActionListener(this,"ModificarDetalleActivoFijo"));
		}
		
		
		if(this.jInternalFrameDetalleFormDetalleActivoFijo!=null) { //if(this.conCargarFormDetalle) {
			this.jInternalFrameDetalleFormDetalleActivoFijo.jButtonModificarToolBarDetalleActivoFijo.addActionListener(new ButtonActionListener(this,"ModificarToolBarDetalleActivoFijo"));
			
			this.jInternalFrameDetalleFormDetalleActivoFijo.jMenuItemModificarDetalleActivoFijo.addActionListener(new ButtonActionListener(this,"MenuItemModificarDetalleActivoFijo"));		
		}
		
		
		if(this.jInternalFrameDetalleFormDetalleActivoFijo!=null) { //if(this.conCargarFormDetalle) {			
			this.jInternalFrameDetalleFormDetalleActivoFijo.jButtonActualizarDetalleActivoFijo.addActionListener (new ButtonActionListener(this,"ActualizarDetalleActivoFijo"));
		}
		
		
		if(this.jInternalFrameDetalleFormDetalleActivoFijo!=null) { //if(this.conCargarFormDetalle) {
			this.jInternalFrameDetalleFormDetalleActivoFijo.jButtonActualizarToolBarDetalleActivoFijo.addActionListener(new ButtonActionListener(this,"ActualizarToolBarDetalleActivoFijo"));
				
			this.jInternalFrameDetalleFormDetalleActivoFijo.jMenuItemActualizarDetalleActivoFijo.addActionListener (new ButtonActionListener(this,"MenuItemActualizarDetalleActivoFijo"));		
		}
		
		
		if(this.jInternalFrameDetalleFormDetalleActivoFijo!=null) { //if(this.conCargarFormDetalle) {
			this.jInternalFrameDetalleFormDetalleActivoFijo.jButtonEliminarDetalleActivoFijo.addActionListener (new ButtonActionListener(this,"EliminarDetalleActivoFijo"));
		}
		
		
		if(this.jInternalFrameDetalleFormDetalleActivoFijo!=null) { //if(this.conCargarFormDetalle) {
			this.jInternalFrameDetalleFormDetalleActivoFijo.jButtonEliminarToolBarDetalleActivoFijo.addActionListener (new ButtonActionListener(this,"EliminarToolBarDetalleActivoFijo"));
						
			this.jInternalFrameDetalleFormDetalleActivoFijo.jMenuItemEliminarDetalleActivoFijo.addActionListener (new ButtonActionListener(this,"MenuItemEliminarDetalleActivoFijo"));		
		}
		
		
		if(this.jInternalFrameDetalleFormDetalleActivoFijo!=null) { //if(this.conCargarFormDetalle) {
			this.jInternalFrameDetalleFormDetalleActivoFijo.jButtonCancelarDetalleActivoFijo.addActionListener (new ButtonActionListener(this,"CancelarDetalleActivoFijo"));
		}
		
		
		if(this.jInternalFrameDetalleFormDetalleActivoFijo!=null) { //if(this.conCargarFormDetalle) {
			this.jInternalFrameDetalleFormDetalleActivoFijo.jButtonCancelarToolBarDetalleActivoFijo.addActionListener (new ButtonActionListener(this,"CancelarToolBarDetalleActivoFijo"));
			
			this.jInternalFrameDetalleFormDetalleActivoFijo.jMenuItemCancelarDetalleActivoFijo.addActionListener (new ButtonActionListener(this,"MenuItemCancelarDetalleActivoFijo"));		
		}
		
		this.jButtonMostrarOcultarTablaToolBarDetalleActivoFijo.addActionListener (new ButtonActionListener(this,"MostrarOcultarToolBarDetalleActivoFijo"));		
		
		
		this.jButtonCerrarDetalleActivoFijo.addActionListener (new ButtonActionListener(this,"CerrarDetalleActivoFijo"));
		
		
		this.jButtonCerrarToolBarDetalleActivoFijo.addActionListener (new ButtonActionListener(this,"CerrarToolBarDetalleActivoFijo"));
			
		this.jMenuItemCerrarDetalleActivoFijo.addActionListener (new ButtonActionListener(this,"MenuItemCerrarDetalleActivoFijo"));
			
		if(this.jInternalFrameDetalleFormDetalleActivoFijo!=null) { //if(this.conCargarFormDetalle) {
			this.jInternalFrameDetalleFormDetalleActivoFijo.jMenuItemDetalleCerrarDetalleActivoFijo.addActionListener (new ButtonActionListener(this,"MenuItemDetalleCerrarDetalleActivoFijo"));		
		}
		
		
		if(this.jInternalFrameDetalleFormDetalleActivoFijo!=null) { //if(this.conCargarFormDetalle) {
			this.jInternalFrameDetalleFormDetalleActivoFijo.jButtonGuardarCambiosDetalleActivoFijo.addActionListener (new ButtonActionListener(this,"GuardarCambiosDetalleActivoFijo"));
		}
		
		
		if(this.jInternalFrameDetalleFormDetalleActivoFijo!=null) { //if(this.conCargarFormDetalle) {
			this.jInternalFrameDetalleFormDetalleActivoFijo.jButtonGuardarCambiosToolBarDetalleActivoFijo.addActionListener (new ButtonActionListener(this,"GuardarCambiosToolBarDetalleActivoFijo"));
		}
		
		this.jButtonCopiarToolBarDetalleActivoFijo.addActionListener (new ButtonActionListener(this,"CopiarToolBarDetalleActivoFijo"));
			
		this.jButtonVerFormToolBarDetalleActivoFijo.addActionListener (new ButtonActionListener(this,"VerFormToolBarDetalleActivoFijo"));
		
		this.jMenuItemGuardarCambiosDetalleActivoFijo.addActionListener (new ButtonActionListener(this,"MenuItemGuardarCambiosDetalleActivoFijo"));
			
		this.jMenuItemCopiarDetalleActivoFijo.addActionListener (new ButtonActionListener(this,"MenuItemCopiarDetalleActivoFijo"));		
		
		this.jMenuItemVerFormDetalleActivoFijo.addActionListener (new ButtonActionListener(this,"MenuItemVerFormDetalleActivoFijo"));		
		
		
		this.jButtonGuardarCambiosTablaDetalleActivoFijo.addActionListener (new ButtonActionListener(this,"GuardarCambiosTablaDetalleActivoFijo"));
		
		
		this.jButtonGuardarCambiosTablaToolBarDetalleActivoFijo.addActionListener (new ButtonActionListener(this,"GuardarCambiosTablaToolBarDetalleActivoFijo"));
			
		this.jMenuItemGuardarCambiosTablaDetalleActivoFijo.addActionListener (new ButtonActionListener(this,"GuardarCambiosTablaDetalleActivoFijo"));		
		
		
		
		this.jButtonRecargarInformacionDetalleActivoFijo.addActionListener (new ButtonActionListener(this,"RecargarInformacionDetalleActivoFijo"));
					
		this.jButtonRecargarInformacionToolBarDetalleActivoFijo.addActionListener (new ButtonActionListener(this,"RecargarInformacionToolBarDetalleActivoFijo"));
		
		this.jMenuItemRecargarInformacionDetalleActivoFijo.addActionListener (new ButtonActionListener(this,"MenuItemRecargarInformacionDetalleActivoFijo"));		
		
		
		
		this.jButtonAnterioresDetalleActivoFijo.addActionListener (new ButtonActionListener(this,"AnterioresDetalleActivoFijo"));
		
		
		this.jButtonAnterioresToolBarDetalleActivoFijo.addActionListener (new ButtonActionListener(this,"AnterioresToolBarDetalleActivoFijo"));
		
		this.jMenuItemAnterioresDetalleActivoFijo.addActionListener (new ButtonActionListener(this,"MenuItemAnterioresDetalleActivoFijo"));		
		
		
		this.jButtonSiguientesDetalleActivoFijo.addActionListener (new ButtonActionListener(this,"SiguientesDetalleActivoFijo"));
		
		
		this.jButtonSiguientesToolBarDetalleActivoFijo.addActionListener (new ButtonActionListener(this,"SiguientesToolBarDetalleActivoFijo"));
			
		this.jMenuItemSiguientesDetalleActivoFijo.addActionListener (new ButtonActionListener(this,"MenuItemSiguientesDetalleActivoFijo"));
			
		this.jMenuItemAbrirOrderByDetalleActivoFijo.addActionListener (new ButtonActionListener(this,"MenuItemAbrirOrderByDetalleActivoFijo"));
			
		this.jMenuItemMostrarOcultarDetalleActivoFijo.addActionListener (new ButtonActionListener(this,"MenuItemMostrarOcultarDetalleActivoFijo"));
			
		this.jMenuItemDetalleAbrirOrderByDetalleActivoFijo.addActionListener (new ButtonActionListener(this,"MenuItemDetalleAbrirOrderByDetalleActivoFijo"));
			
		this.jMenuItemDetalleMostarOcultarDetalleActivoFijo.addActionListener (new ButtonActionListener(this,"MenuItemDetalleMostrarOcultarDetalleActivoFijo"));		
		
		
		this.jButtonNuevoGuardarCambiosDetalleActivoFijo.addActionListener (new ButtonActionListener(this,"NuevoGuardarCambiosDetalleActivoFijo"));
		
		
		this.jButtonNuevoGuardarCambiosToolBarDetalleActivoFijo.addActionListener (new ButtonActionListener(this,"NuevoGuardarCambiosToolBarDetalleActivoFijo"));
			
		this.jMenuItemNuevoGuardarCambiosDetalleActivoFijo.addActionListener (new ButtonActionListener(this,"MenuItemNuevoGuardarCambiosDetalleActivoFijo"));		
		
		
		
		//SELECCIONAR TODOS
		
		this.jCheckBoxSeleccionarTodosDetalleActivoFijo.addItemListener(new CheckBoxItemListener(this,"SeleccionarTodosDetalleActivoFijo"));

		this.jCheckBoxSeleccionadosDetalleActivoFijo.addItemListener(new CheckBoxItemListener(this,"SeleccionadosDetalleActivoFijo"));
		
		if(this.jInternalFrameDetalleFormDetalleActivoFijo!=null) { //if(this.conCargarFormDetalle) {
			this.jInternalFrameDetalleFormDetalleActivoFijo.jComboBoxTiposAccionesFormularioDetalleActivoFijo.addActionListener (new ButtonActionListener(this,"TiposAccionesFormularioDetalleActivoFijo"));
		}
		
		
		this.jComboBoxTiposRelacionesDetalleActivoFijo.addActionListener (new ButtonActionListener(this,"TiposRelacionesDetalleActivoFijo"));
			
		this.jComboBoxTiposAccionesDetalleActivoFijo.addActionListener (new ButtonActionListener(this,"TiposAccionesDetalleActivoFijo"));
					
		this.jComboBoxTiposSeleccionarDetalleActivoFijo.addActionListener (new ButtonActionListener(this,"TiposSeleccionarDetalleActivoFijo"));
			
		this.jTextFieldValorCampoGeneralDetalleActivoFijo.addActionListener (new ButtonActionListener(this,"ValorCampoGeneralDetalleActivoFijo"));		
		
		
		if(this.jInternalFrameDetalleFormDetalleActivoFijo!=null) { //if(this.conCargarFormDetalle) {
		
		
		
		//BUSQUEDA GENERAL
		this.jInternalFrameDetalleFormDetalleActivoFijo.jButtonidDetalleActivoFijoBusqueda.addActionListener(new ButtonActionListener(this,"idDetalleActivoFijoBusqueda"));
		//ACTUALIZAR FK
		this.jInternalFrameDetalleFormDetalleActivoFijo.jButtonid_empresaDetalleActivoFijoUpdate.addActionListener(new ButtonActionListener(this,"id_empresaDetalleActivoFijoUpdate"));
		//BUSQUEDA GENERAL
		this.jInternalFrameDetalleFormDetalleActivoFijo.jButtonid_empresaDetalleActivoFijoBusqueda.addActionListener(new ButtonActionListener(this,"id_empresaDetalleActivoFijoBusqueda"));
		//ACTUALIZAR FK
		this.jInternalFrameDetalleFormDetalleActivoFijo.jButtonid_sucursalDetalleActivoFijoUpdate.addActionListener(new ButtonActionListener(this,"id_sucursalDetalleActivoFijoUpdate"));
		//BUSQUEDA GENERAL
		this.jInternalFrameDetalleFormDetalleActivoFijo.jButtonid_sucursalDetalleActivoFijoBusqueda.addActionListener(new ButtonActionListener(this,"id_sucursalDetalleActivoFijoBusqueda"));
		//ACTUALIZAR FK
		this.jInternalFrameDetalleFormDetalleActivoFijo.jButtonid_detalle_grupo_activo_fijoDetalleActivoFijoUpdate.addActionListener(new ButtonActionListener(this,"id_detalle_grupo_activo_fijoDetalleActivoFijoUpdate"));
		//BUSQUEDA GENERAL
		this.jInternalFrameDetalleFormDetalleActivoFijo.jButtonid_detalle_grupo_activo_fijoDetalleActivoFijoBusqueda.addActionListener(new ButtonActionListener(this,"id_detalle_grupo_activo_fijoDetalleActivoFijoBusqueda"));
		//ACTUALIZAR FK
		this.jInternalFrameDetalleFormDetalleActivoFijo.jButtonid_sub_grupo_activo_fijoDetalleActivoFijoUpdate.addActionListener(new ButtonActionListener(this,"id_sub_grupo_activo_fijoDetalleActivoFijoUpdate"));
		//BUSQUEDA GENERAL
		this.jInternalFrameDetalleFormDetalleActivoFijo.jButtonid_sub_grupo_activo_fijoDetalleActivoFijoBusqueda.addActionListener(new ButtonActionListener(this,"id_sub_grupo_activo_fijoDetalleActivoFijoBusqueda"));
		//ACTUALIZAR FK
		this.jInternalFrameDetalleFormDetalleActivoFijo.jButtonid_tipo_ramo_activo_fijoDetalleActivoFijoUpdate.addActionListener(new ButtonActionListener(this,"id_tipo_ramo_activo_fijoDetalleActivoFijoUpdate"));
		//BUSQUEDA GENERAL
		this.jInternalFrameDetalleFormDetalleActivoFijo.jButtonid_tipo_ramo_activo_fijoDetalleActivoFijoBusqueda.addActionListener(new ButtonActionListener(this,"id_tipo_ramo_activo_fijoDetalleActivoFijoBusqueda"));
		//ACTUALIZAR FK
		this.jInternalFrameDetalleFormDetalleActivoFijo.jButtonid_tipo_activo_fijo_empresaDetalleActivoFijoUpdate.addActionListener(new ButtonActionListener(this,"id_tipo_activo_fijo_empresaDetalleActivoFijoUpdate"));
		//BUSQUEDA GENERAL
		this.jInternalFrameDetalleFormDetalleActivoFijo.jButtonid_tipo_activo_fijo_empresaDetalleActivoFijoBusqueda.addActionListener(new ButtonActionListener(this,"id_tipo_activo_fijo_empresaDetalleActivoFijoBusqueda"));
		//ACTUALIZAR FK
		this.jInternalFrameDetalleFormDetalleActivoFijo.jButtonid_tipo_depreciacion_empresaDetalleActivoFijoUpdate.addActionListener(new ButtonActionListener(this,"id_tipo_depreciacion_empresaDetalleActivoFijoUpdate"));
		//BUSQUEDA GENERAL
		this.jInternalFrameDetalleFormDetalleActivoFijo.jButtonid_tipo_depreciacion_empresaDetalleActivoFijoBusqueda.addActionListener(new ButtonActionListener(this,"id_tipo_depreciacion_empresaDetalleActivoFijoBusqueda"));
		//ACTUALIZAR FK
		this.jInternalFrameDetalleFormDetalleActivoFijo.jButtonid_estado_activo_fijoDetalleActivoFijoUpdate.addActionListener(new ButtonActionListener(this,"id_estado_activo_fijoDetalleActivoFijoUpdate"));
		//BUSQUEDA GENERAL
		this.jInternalFrameDetalleFormDetalleActivoFijo.jButtonid_estado_activo_fijoDetalleActivoFijoBusqueda.addActionListener(new ButtonActionListener(this,"id_estado_activo_fijoDetalleActivoFijoBusqueda"));
		//jButtonid_clienteDetalleActivoFijo.addActionListener (
		//	new java.awt.event.ActionListener() {
		//		public void actionPerformed(java.awt.event.ActionEvent evt) {
		//			jButtonid_clienteDetalleActivoFijoActionPerformed(evt);
		//		}
		//	}
		//);

		//BUSQUEDA CAMPO
		this.jInternalFrameDetalleFormDetalleActivoFijo.jButtonid_clienteDetalleActivoFijo.addActionListener(new ButtonActionListener(this,"id_clienteDetalleActivoFijo"));
		//ACTUALIZAR FK
		this.jInternalFrameDetalleFormDetalleActivoFijo.jButtonid_clienteDetalleActivoFijoUpdate.addActionListener(new ButtonActionListener(this,"id_clienteDetalleActivoFijoUpdate"));
		//BUSQUEDA GENERAL
		this.jInternalFrameDetalleFormDetalleActivoFijo.jButtonid_clienteDetalleActivoFijoBusqueda.addActionListener(new ButtonActionListener(this,"id_clienteDetalleActivoFijoBusqueda"));
		//ACTUALIZAR FK
		this.jInternalFrameDetalleFormDetalleActivoFijo.jButtonid_partida_presuDetalleActivoFijoUpdate.addActionListener(new ButtonActionListener(this,"id_partida_presuDetalleActivoFijoUpdate"));
		//BUSQUEDA GENERAL
		this.jInternalFrameDetalleFormDetalleActivoFijo.jButtonid_partida_presuDetalleActivoFijoBusqueda.addActionListener(new ButtonActionListener(this,"id_partida_presuDetalleActivoFijoBusqueda"));
		//BUSQUEDA GENERAL
		this.jInternalFrameDetalleFormDetalleActivoFijo.jButtoncodigoDetalleActivoFijoBusqueda.addActionListener(new ButtonActionListener(this,"codigoDetalleActivoFijoBusqueda"));
		//BUSQUEDA GENERAL
		this.jInternalFrameDetalleFormDetalleActivoFijo.jButtonnombreDetalleActivoFijoBusqueda.addActionListener(new ButtonActionListener(this,"nombreDetalleActivoFijoBusqueda"));
		//BUSQUEDA GENERAL
		this.jInternalFrameDetalleFormDetalleActivoFijo.jButtonserieDetalleActivoFijoBusqueda.addActionListener(new ButtonActionListener(this,"serieDetalleActivoFijoBusqueda"));
		//BUSQUEDA GENERAL
		this.jInternalFrameDetalleFormDetalleActivoFijo.jButtonfecha_compraDetalleActivoFijoBusqueda.addActionListener(new ButtonActionListener(this,"fecha_compraDetalleActivoFijoBusqueda"));
		//BUSQUEDA GENERAL
		this.jInternalFrameDetalleFormDetalleActivoFijo.jButtonfecha_mantenimientoDetalleActivoFijoBusqueda.addActionListener(new ButtonActionListener(this,"fecha_mantenimientoDetalleActivoFijoBusqueda"));
		//BUSQUEDA GENERAL
		this.jInternalFrameDetalleFormDetalleActivoFijo.jButtonfecha_correccionDetalleActivoFijoBusqueda.addActionListener(new ButtonActionListener(this,"fecha_correccionDetalleActivoFijoBusqueda"));
		//BUSQUEDA GENERAL
		this.jInternalFrameDetalleFormDetalleActivoFijo.jButtonfecha_depreciacionDetalleActivoFijoBusqueda.addActionListener(new ButtonActionListener(this,"fecha_depreciacionDetalleActivoFijoBusqueda"));
		//BUSQUEDA GENERAL
		this.jInternalFrameDetalleFormDetalleActivoFijo.jButtonclaveDetalleActivoFijoBusqueda.addActionListener(new ButtonActionListener(this,"claveDetalleActivoFijoBusqueda"));
		//BUSQUEDA GENERAL
		this.jInternalFrameDetalleFormDetalleActivoFijo.jButtonmarcaDetalleActivoFijoBusqueda.addActionListener(new ButtonActionListener(this,"marcaDetalleActivoFijoBusqueda"));
		//BUSQUEDA GENERAL
		this.jInternalFrameDetalleFormDetalleActivoFijo.jButtonmodeloDetalleActivoFijoBusqueda.addActionListener(new ButtonActionListener(this,"modeloDetalleActivoFijoBusqueda"));
		//BUSQUEDA GENERAL
		this.jInternalFrameDetalleFormDetalleActivoFijo.jButtoncolorDetalleActivoFijoBusqueda.addActionListener(new ButtonActionListener(this,"colorDetalleActivoFijoBusqueda"));
		//BUSQUEDA GENERAL
		this.jInternalFrameDetalleFormDetalleActivoFijo.jButtonfechaDetalleActivoFijoBusqueda.addActionListener(new ButtonActionListener(this,"fechaDetalleActivoFijoBusqueda"));
		//BUSQUEDA GENERAL
		this.jInternalFrameDetalleFormDetalleActivoFijo.jButtonvalor_utilDetalleActivoFijoBusqueda.addActionListener(new ButtonActionListener(this,"valor_utilDetalleActivoFijoBusqueda"));
		//BUSQUEDA GENERAL
		this.jInternalFrameDetalleFormDetalleActivoFijo.jButtoncosto_de_compraDetalleActivoFijoBusqueda.addActionListener(new ButtonActionListener(this,"costo_de_compraDetalleActivoFijoBusqueda"));
		//BUSQUEDA GENERAL
		this.jInternalFrameDetalleFormDetalleActivoFijo.jButtonvida_utilDetalleActivoFijoBusqueda.addActionListener(new ButtonActionListener(this,"vida_utilDetalleActivoFijoBusqueda"));
		//BUSQUEDA GENERAL
		this.jInternalFrameDetalleFormDetalleActivoFijo.jButtonvalor_residualDetalleActivoFijoBusqueda.addActionListener(new ButtonActionListener(this,"valor_residualDetalleActivoFijoBusqueda"));
		//BUSQUEDA GENERAL
		this.jInternalFrameDetalleFormDetalleActivoFijo.jButtoncantidadDetalleActivoFijoBusqueda.addActionListener(new ButtonActionListener(this,"cantidadDetalleActivoFijoBusqueda"));
		//BUSQUEDA GENERAL
		this.jInternalFrameDetalleFormDetalleActivoFijo.jButtonnombre_propietarioDetalleActivoFijoBusqueda.addActionListener(new ButtonActionListener(this,"nombre_propietarioDetalleActivoFijoBusqueda"));
		//BUSQUEDA GENERAL
		this.jInternalFrameDetalleFormDetalleActivoFijo.jButtonresponsableDetalleActivoFijoBusqueda.addActionListener(new ButtonActionListener(this,"responsableDetalleActivoFijoBusqueda"));
		//BUSQUEDA GENERAL
		this.jInternalFrameDetalleFormDetalleActivoFijo.jButtonpath_fotoDetalleActivoFijoBusqueda.addActionListener(new ButtonActionListener(this,"path_fotoDetalleActivoFijoBusqueda"));
		//BUSQUEDA GENERAL
		this.jInternalFrameDetalleFormDetalleActivoFijo.jButtonnumero_comprobanteDetalleActivoFijoBusqueda.addActionListener(new ButtonActionListener(this,"numero_comprobanteDetalleActivoFijoBusqueda"));
		//BUSQUEDA GENERAL
		this.jInternalFrameDetalleFormDetalleActivoFijo.jButtonreferenciaDetalleActivoFijoBusqueda.addActionListener(new ButtonActionListener(this,"referenciaDetalleActivoFijoBusqueda"));
		//BUSQUEDA GENERAL
		this.jInternalFrameDetalleFormDetalleActivoFijo.jButtonvalor_cotizacionDetalleActivoFijoBusqueda.addActionListener(new ButtonActionListener(this,"valor_cotizacionDetalleActivoFijoBusqueda"));
		//BUSQUEDA GENERAL
		this.jInternalFrameDetalleFormDetalleActivoFijo.jButtoncon_partesDetalleActivoFijoBusqueda.addActionListener(new ButtonActionListener(this,"con_partesDetalleActivoFijoBusqueda"));
		//BUSQUEDA GENERAL
		this.jInternalFrameDetalleFormDetalleActivoFijo.jButtoncon_garantiaDetalleActivoFijoBusqueda.addActionListener(new ButtonActionListener(this,"con_garantiaDetalleActivoFijoBusqueda"));
		//BUSQUEDA GENERAL
		this.jInternalFrameDetalleFormDetalleActivoFijo.jButtoncon_existenciaDetalleActivoFijoBusqueda.addActionListener(new ButtonActionListener(this,"con_existenciaDetalleActivoFijoBusqueda"));
		//BUSQUEDA GENERAL
		this.jInternalFrameDetalleFormDetalleActivoFijo.jButtonfecha_bajaDetalleActivoFijoBusqueda.addActionListener(new ButtonActionListener(this,"fecha_bajaDetalleActivoFijoBusqueda"));
		//BUSQUEDA GENERAL
		this.jInternalFrameDetalleFormDetalleActivoFijo.jButtonpath_foto2DetalleActivoFijoBusqueda.addActionListener(new ButtonActionListener(this,"path_foto2DetalleActivoFijoBusqueda"));
		}
		
		if(!this.conCargarMinimo) {
		//BYDAN_BUSQUEDAS
		
		
			this.jButtonFK_IdClienteDetalleActivoFijo.addActionListener(new ButtonActionListener(this,"FK_IdClienteDetalleActivoFijo"));

			this.jButtonBuscarFK_IdClienteid_clienteDetalleActivoFijo.addActionListener(new ButtonActionListener(this,"id_clienteDetalleActivoFijo"));

			this.jButtonFK_IdDetalleGrupoActivoFijoDetalleActivoFijo.addActionListener(new ButtonActionListener(this,"FK_IdDetalleGrupoActivoFijoDetalleActivoFijo"));

			this.jButtonFK_IdEstadoActivoFijoDetalleActivoFijo.addActionListener(new ButtonActionListener(this,"FK_IdEstadoActivoFijoDetalleActivoFijo"));

			this.jButtonFK_IdPartidaPresuDetalleActivoFijo.addActionListener(new ButtonActionListener(this,"FK_IdPartidaPresuDetalleActivoFijo"));

			this.jButtonFK_IdSubGrupoActivoFijoDetalleActivoFijo.addActionListener(new ButtonActionListener(this,"FK_IdSubGrupoActivoFijoDetalleActivoFijo"));

			this.jButtonFK_IdTipoActivoFijoEmpresaDetalleActivoFijo.addActionListener(new ButtonActionListener(this,"FK_IdTipoActivoFijoEmpresaDetalleActivoFijo"));

			this.jButtonFK_IdTipoDepreciacionEmpresaDetalleActivoFijo.addActionListener(new ButtonActionListener(this,"FK_IdTipoDepreciacionEmpresaDetalleActivoFijo"));

			this.jButtonFK_IdTipoRamoActivoFijoDetalleActivoFijo.addActionListener(new ButtonActionListener(this,"FK_IdTipoRamoActivoFijoDetalleActivoFijo"));
		
		
		
			//REPORTE DINAMICO
			
			if(this.jInternalFrameReporteDinamicoDetalleActivoFijo!=null) {
				this.jInternalFrameReporteDinamicoDetalleActivoFijo.getjButtonCerrarReporteDinamico().addActionListener (new ButtonActionListener(this,"CerrarReporteDinamicoDetalleActivoFijo"));
				this.jInternalFrameReporteDinamicoDetalleActivoFijo.getjButtonGenerarReporteDinamico().addActionListener (new ButtonActionListener(this,"GenerarReporteDinamicoDetalleActivoFijo"));
				this.jInternalFrameReporteDinamicoDetalleActivoFijo.getjButtonGenerarExcelReporteDinamico().addActionListener (new ButtonActionListener(this,"GenerarExcelReporteDinamicoDetalleActivoFijo"));
			}
			
			//this.jButtonCerrarReporteDinamicoDetalleActivoFijo.addActionListener (new ButtonActionListener(this,"CerrarReporteDinamicoDetalleActivoFijo"));				
			//this.jButtonGenerarReporteDinamicoDetalleActivoFijo.addActionListener (new ButtonActionListener(this,"GenerarReporteDinamicoDetalleActivoFijo"));
			//this.jButtonGenerarExcelReporteDinamicoDetalleActivoFijo.addActionListener (new ButtonActionListener(this,"GenerarExcelReporteDinamicoDetalleActivoFijo"));
				
				
			//IMPORTACION			
			if(this.jInternalFrameImportacionDetalleActivoFijo!=null) {
				this.jInternalFrameImportacionDetalleActivoFijo.getjButtonCerrarImportacion().addActionListener (new ButtonActionListener(this,"CerrarImportacionDetalleActivoFijo"));
				this.jInternalFrameImportacionDetalleActivoFijo.getjButtonGenerarImportacion().addActionListener (new ButtonActionListener(this,"GenerarImportacionDetalleActivoFijo"));
				this.jInternalFrameImportacionDetalleActivoFijo.getjButtonAbrirImportacion().addActionListener (new ButtonActionListener(this,"AbrirImportacionDetalleActivoFijo"));
			}
			
			//ORDER BY
			this.jButtonAbrirOrderByDetalleActivoFijo.addActionListener (new ButtonActionListener(this,"AbrirOrderByDetalleActivoFijo"));
			
			this.jButtonAbrirOrderByToolBarDetalleActivoFijo.addActionListener (new ButtonActionListener(this,"AbrirOrderByToolBarDetalleActivoFijo"));			
			
			if(this.jInternalFrameOrderByDetalleActivoFijo!=null) {
				this.jInternalFrameOrderByDetalleActivoFijo.getjButtonCerrarOrderBy().addActionListener (new ButtonActionListener(this,"CerrarOrderByDetalleActivoFijo"));				
			}
			
			
		}
		
		
		
		if(!this.conCargarMinimo) {
			if(this.jInternalFrameDetalleFormDetalleActivoFijo!=null) { //if(this.conCargarFormDetalle) {
			;
			}
		}
		
		
		//TABBED PANE RELACIONES
		if(this.jInternalFrameDetalleFormDetalleActivoFijo!=null) { //if(this.conCargarFormDetalle) {
			this.jInternalFrameDetalleFormDetalleActivoFijo.jTabbedPaneRelacionesDetalleActivoFijo.addChangeListener(new TabbedPaneChangeListener(this,"RelacionesDetalleActivoFijo"));
		
		;
		}
		//TABBED PANE RELACIONES FIN(EXTRA TAB)		
	}
	
	/*
	public void initActions() {
		String sMapKey = "";
		InputMap inputMap =null;
		
		this.addInternalFrameListener(new javax.swing.event.InternalFrameAdapter() {
            public void internalFrameClosing(InternalFrameEvent event) {          	
            	try {
            		closingInternalFrameDetalleActivoFijo();
				} catch (Exception e) {
					e.printStackTrace();
				}
            }
        });
		
		this.jInternalFrameDetalleFormDetalleActivoFijo.addInternalFrameListener(new javax.swing.event.InternalFrameAdapter() {
	        public void internalFrameClosing(InternalFrameEvent event) {
	            JInternalFrameBase jInternalFrameDetalleFormDetalleActivoFijo = (JInternalFrameBase)event.getSource();
	            	
	            DetalleActivoFijoBeanSwingJInternalFrame jInternalFrameParent=(DetalleActivoFijoBeanSwingJInternalFrame)jInternalFrameDetalleFormDetalleActivoFijo.getjInternalFrameParent();
	                
	            try {
					jInternalFrameParent.jButtonCancelarDetalleActivoFijoActionPerformed(null);
					
					//jInternalFrameParent.dispose();
					//jInternalFrameParent=null;
					
				} catch (Exception e) {
					e.printStackTrace();
				}
	        }
	    });
			
		this.jTableDatosDetalleActivoFijo.getSelectionModel().addListSelectionListener (
	                new ListSelectionListener() {
	                    public void valueChanged(ListSelectionEvent e) {
							//BYDAN_DESHABILITADO
	                    	//try {jTableDatosDetalleActivoFijoListSelectionListener(e);}catch(Exception e1){e1.printStackTrace();}
	                    }
	                }
	     );
		
		this.jTableDatosDetalleActivoFijo.addMouseListener(new MouseAdapter() {
			   public void mouseClicked(MouseEvent evt) {
				      if (evt.getClickCount() == 2) {
				    	  jButtonIdActionPerformed(null,jTableDatosDetalleActivoFijo.getSelectedRow(),false,false);
				      }
				   }
		});
		
		this.jButtonNuevoDetalleActivoFijo.addActionListener (
	          new java.awt.event.ActionListener() {
	              public void actionPerformed(ActionEvent evt) {
	            	  try {jButtonNuevoDetalleActivoFijoActionPerformed(evt,false);}catch(Exception e){e.printStackTrace();}
	              }
	          }
        );
		
		this.jButtonNuevoToolBarDetalleActivoFijo.addActionListener (
	          new java.awt.event.ActionListener() {
	              public void actionPerformed(ActionEvent evt) {
	            	  try {jButtonNuevoDetalleActivoFijoActionPerformed(evt,false);}catch(Exception e){e.printStackTrace();}
	              }
	          }
        );
		
		this.jMenuItemNuevoDetalleActivoFijo.addActionListener (
	          new java.awt.event.ActionListener() {
	              public void actionPerformed(ActionEvent evt) {
	            	  try {jButtonNuevoDetalleActivoFijoActionPerformed(evt,false);}catch(Exception e){e.printStackTrace();}
	              }
	          }
        );
		
		sMapKey = "NuevoDetalleActivoFijo";
		inputMap = this.jButtonNuevoDetalleActivoFijo.getInputMap(JComponent.WHEN_IN_FOCUSED_WINDOW);
		inputMap.put(KeyStroke.getKeyStroke(KeyEvent.VK_N , KeyEvent.CTRL_MASK), sMapKey);
			
		this.jButtonNuevoDetalleActivoFijo.getActionMap().put(sMapKey, new AbstractAction() {
			public static final long serialVersionUID = 1L;
			public void actionPerformed(ActionEvent evt) {
			    try {jButtonNuevoDetalleActivoFijoActionPerformed(evt,false);} catch (Exception e) {e.printStackTrace();}
			}
		});
		
		this.jButtonNuevoRelacionesDetalleActivoFijo.addActionListener (
	          new java.awt.event.ActionListener() {
	              public void actionPerformed(ActionEvent evt) {
	            	  try {jButtonNuevoDetalleActivoFijoActionPerformed(evt,true);}catch(Exception e){e.printStackTrace();}
	              }
	          }
        );
		
		this.jButtonNuevoRelacionesToolBarDetalleActivoFijo.addActionListener (
	          new java.awt.event.ActionListener() {
	              public void actionPerformed(ActionEvent evt) {
	            	  try {jButtonNuevoDetalleActivoFijoActionPerformed(evt,true);}catch(Exception e){e.printStackTrace();}
	              }
	          }
        );
		
		this.jMenuItemNuevoRelacionesDetalleActivoFijo.addActionListener (
	          new java.awt.event.ActionListener() {
	              public void actionPerformed(ActionEvent evt) {
	            	  try {jButtonNuevoDetalleActivoFijoActionPerformed(evt,true);}catch(Exception e){e.printStackTrace();}
	              }
	          }
        );
		
		sMapKey = "NuevoRelacionesDetalleActivoFijo";
		inputMap = this.jButtonNuevoRelacionesDetalleActivoFijo.getInputMap(JComponent.WHEN_IN_FOCUSED_WINDOW);
		inputMap.put(KeyStroke.getKeyStroke(KeyEvent.VK_R , KeyEvent.CTRL_MASK), sMapKey);
			
		this.jButtonNuevoRelacionesDetalleActivoFijo.getActionMap().put(sMapKey, new AbstractAction() {
			public static final long serialVersionUID = 1L;
			public void actionPerformed(ActionEvent evt) {
			    try {jButtonNuevoDetalleActivoFijoActionPerformed(evt,true);} catch (Exception e) {e.printStackTrace();}
			}
		});
		
		this.jButtonModificarDetalleActivoFijo.addActionListener (
	          new java.awt.event.ActionListener() {
	              public void actionPerformed(ActionEvent evt) {
	            	  try {jButtonModificarDetalleActivoFijoActionPerformed(evt);}catch(Exception e){e.printStackTrace();}
	              }
	          }
        );
		
		this.jButtonModificarToolBarDetalleActivoFijo.addActionListener (
	          new java.awt.event.ActionListener() {
	              public void actionPerformed(ActionEvent evt) {
	            	  try {jButtonModificarDetalleActivoFijoActionPerformed(evt);}catch(Exception e){e.printStackTrace();}
	              }
	          }
        );
		
		this.jMenuItemModificarDetalleActivoFijo.addActionListener (
	          new java.awt.event.ActionListener() {
	              public void actionPerformed(ActionEvent evt) {
	            	  try {jButtonModificarDetalleActivoFijoActionPerformed(evt);}catch(Exception e){e.printStackTrace();}
	              }
	          }
        );
		
		sMapKey = "ModificarDetalleActivoFijo";
		inputMap = this.jButtonModificarDetalleActivoFijo.getInputMap(JComponent.WHEN_IN_FOCUSED_WINDOW);
		inputMap.put(KeyStroke.getKeyStroke(KeyEvent.VK_M , KeyEvent.CTRL_MASK), sMapKey);
			
		this.jButtonModificarDetalleActivoFijo.getActionMap().put(sMapKey, new AbstractAction() {
			public static final long serialVersionUID = 1L;
			public void actionPerformed(ActionEvent evt) {
			    try {jButtonModificarDetalleActivoFijoActionPerformed(evt);} catch (Exception e) {e.printStackTrace();}
			}
		});
		
		this.jButtonActualizarDetalleActivoFijo.addActionListener (
	          new java.awt.event.ActionListener() {
	              public void actionPerformed(ActionEvent evt) {
	            	  try {jButtonActualizarDetalleActivoFijoActionPerformed(evt);}catch(Exception e){e.printStackTrace();}
	              }
	          }
        );
		
		this.jButtonActualizarToolBarDetalleActivoFijo.addActionListener (
	          new java.awt.event.ActionListener() {
	              public void actionPerformed(ActionEvent evt) {
	            	  try {jButtonActualizarDetalleActivoFijoActionPerformed(evt);}catch(Exception e){e.printStackTrace();}
	              }
	          }
        );
		
		this.jMenuItemActualizarDetalleActivoFijo.addActionListener (
	          new java.awt.event.ActionListener() {
	              public void actionPerformed(ActionEvent evt) {
	            	  try {jButtonActualizarDetalleActivoFijoActionPerformed(evt);}catch(Exception e){e.printStackTrace();}
	              }
	          }
        );
		
		sMapKey = "ActualizarDetalleActivoFijo";
		inputMap = this.jButtonActualizarDetalleActivoFijo.getInputMap(JComponent.WHEN_IN_FOCUSED_WINDOW);
		inputMap.put(KeyStroke.getKeyStroke(KeyEvent.VK_G , KeyEvent.CTRL_MASK), sMapKey);
			
		this.jButtonActualizarDetalleActivoFijo.getActionMap().put(sMapKey, new AbstractAction() {
			public static final long serialVersionUID = 1L;
			public void actionPerformed(ActionEvent evt) {
			    try {jButtonActualizarDetalleActivoFijoActionPerformed(evt);} catch (Exception e) {e.printStackTrace();}
			}
		});
		
		this.jButtonEliminarDetalleActivoFijo.addActionListener (
	          new java.awt.event.ActionListener() {
	              public void actionPerformed(ActionEvent evt) {
	            	  try {jButtonEliminarDetalleActivoFijoActionPerformed(evt);}catch(Exception e){e.printStackTrace();}
	              }
	          }
        );
		
		this.jButtonEliminarToolBarDetalleActivoFijo.addActionListener (
	          new java.awt.event.ActionListener() {
	              public void actionPerformed(ActionEvent evt) {
	            	  try {jButtonEliminarDetalleActivoFijoActionPerformed(evt);}catch(Exception e){e.printStackTrace();}
	              }
	          }
        );
				
		this.jMenuItemEliminarDetalleActivoFijo.addActionListener (
	          new java.awt.event.ActionListener() {
	              public void actionPerformed(ActionEvent evt) {
	            	  try {jButtonEliminarDetalleActivoFijoActionPerformed(evt);}catch(Exception e){e.printStackTrace();}
	              }
	          }
        );
		
		sMapKey = "EliminarDetalleActivoFijo";
		inputMap = this.jButtonEliminarDetalleActivoFijo.getInputMap(JComponent.WHEN_IN_FOCUSED_WINDOW);
		inputMap.put(KeyStroke.getKeyStroke(KeyEvent.VK_E , KeyEvent.CTRL_MASK), sMapKey);
			
		this.jButtonEliminarDetalleActivoFijo.getActionMap().put(sMapKey, new AbstractAction() {
			public static final long serialVersionUID = 1L;
			public void actionPerformed(ActionEvent evt) {
			    try {jButtonEliminarDetalleActivoFijoActionPerformed(evt);} catch (Exception e) {e.printStackTrace();}
			}
		});
		
		this.jButtonCancelarDetalleActivoFijo.addActionListener (
	          new java.awt.event.ActionListener() {
	              public void actionPerformed(ActionEvent evt) {
	            	  try {jButtonCancelarDetalleActivoFijoActionPerformed(evt);}catch(Exception e){e.printStackTrace();}
	              }
	          }
        );
		
		this.jButtonCancelarToolBarDetalleActivoFijo.addActionListener (
	          new java.awt.event.ActionListener() {
	              public void actionPerformed(ActionEvent evt) {
	            	  try {jButtonCancelarDetalleActivoFijoActionPerformed(evt);}catch(Exception e){e.printStackTrace();}
	              }
	          }
        );
		
		this.jMenuItemCancelarDetalleActivoFijo.addActionListener (
	          new java.awt.event.ActionListener() {
	              public void actionPerformed(ActionEvent evt) {
	            	  try {jButtonCancelarDetalleActivoFijoActionPerformed(evt);}catch(Exception e){e.printStackTrace();}
	              }
	          }
        );
		
		sMapKey = "CancelarDetalleActivoFijo";
		inputMap = this.jButtonCancelarDetalleActivoFijo.getInputMap(JComponent.WHEN_IN_FOCUSED_WINDOW);
		inputMap.put(KeyStroke.getKeyStroke(KeyEvent.VK_Q , KeyEvent.CTRL_MASK), sMapKey);
			
		this.jButtonCancelarDetalleActivoFijo.getActionMap().put(sMapKey, new AbstractAction() {
			public static final long serialVersionUID = 1L;
			public void actionPerformed(ActionEvent evt) {
			    try {jButtonCancelarDetalleActivoFijoActionPerformed(evt);} catch (Exception e) {e.printStackTrace();}
			}
		});
		
		this.jButtonCerrarDetalleActivoFijo.addActionListener (
	          new java.awt.event.ActionListener() {
	              public void actionPerformed(ActionEvent evt) {
	            	  try {jButtonCerrarDetalleActivoFijoActionPerformed(evt);}catch(Exception e){e.printStackTrace();}
	              }
	          }
        );
		
		this.jButtonCerrarToolBarDetalleActivoFijo.addActionListener (
	          new java.awt.event.ActionListener() {
	              public void actionPerformed(ActionEvent evt) {
	            	  try {jButtonCerrarDetalleActivoFijoActionPerformed(evt);}catch(Exception e){e.printStackTrace();}
	              }
	          }
        );
		
		this.jMenuItemCerrarDetalleActivoFijo.addActionListener (
	          new java.awt.event.ActionListener() {
	              public void actionPerformed(ActionEvent evt) {
	            	  try {jButtonCerrarDetalleActivoFijoActionPerformed(evt);}catch(Exception e){e.printStackTrace();}
	              }
	          }
        );
		
		this.jMenuItemDetalleCerrarDetalleActivoFijo.addActionListener (
	          new java.awt.event.ActionListener() {
	              public void actionPerformed(ActionEvent evt) {
	            	  //try {jButtonCerrarDetalleActivoFijoActionPerformed(evt);}catch(Exception e){e.printStackTrace();}
					try {jButtonCancelarDetalleActivoFijoActionPerformed(evt);}catch(Exception e){e.printStackTrace();}
	              }
	          }
        );
		
		sMapKey = "CerrarDetalleActivoFijo";
		inputMap = this.jButtonCerrarDetalleActivoFijo.getInputMap(JComponent.WHEN_IN_FOCUSED_WINDOW);
		inputMap.put(KeyStroke.getKeyStroke(KeyEvent.VK_C , KeyEvent.ALT_MASK), sMapKey);
			
		this.jButtonCerrarDetalleActivoFijo.getActionMap().put(sMapKey, new AbstractAction() {
			public static final long serialVersionUID = 1L;
			public void actionPerformed(ActionEvent evt) {
			    try {jButtonCerrarDetalleActivoFijoActionPerformed(evt);} catch (Exception e) {e.printStackTrace();}
			}
		});
		
		this.jInternalFrameDetalleFormDetalleActivoFijo.jButtonGuardarCambiosDetalleActivoFijo.addActionListener (
	          new java.awt.event.ActionListener() {
	              public void actionPerformed(ActionEvent evt) {
	            	  try {jButtonGuardarCambiosDetalleActivoFijoActionPerformed(evt);}catch(Exception e){e.printStackTrace();}
	              }
	          }
        );
		
		this.jButtonGuardarCambiosToolBarDetalleActivoFijo.addActionListener (
	          new java.awt.event.ActionListener() {
	              public void actionPerformed(ActionEvent evt) {
	            	  try {jButtonGuardarCambiosDetalleActivoFijoActionPerformed(evt);}catch(Exception e){e.printStackTrace();}
	              }
	          }
        );
		
		this.jMenuItemGuardarCambiosDetalleActivoFijo.addActionListener (
	          new java.awt.event.ActionListener() {
	              public void actionPerformed(ActionEvent evt) {
	            	  try {jButtonGuardarCambiosDetalleActivoFijoActionPerformed(evt);}catch(Exception e){e.printStackTrace();}
	              }
	          }
        );
		
		this.jButtonGuardarCambiosTablaDetalleActivoFijo.addActionListener (
	          new java.awt.event.ActionListener() {
	              public void actionPerformed(ActionEvent evt) {
	            	  try {jButtonGuardarCambiosDetalleActivoFijoActionPerformed(evt);}catch(Exception e){e.printStackTrace();}
	              }
	          }
        );
		
		this.jButtonGuardarCambiosTablaToolBarDetalleActivoFijo.addActionListener (
	          new java.awt.event.ActionListener() {
	              public void actionPerformed(ActionEvent evt) {
	            	  try {jButtonGuardarCambiosDetalleActivoFijoActionPerformed(evt);}catch(Exception e){e.printStackTrace();}
	              }
	          }
        );
		
		this.jMenuItemGuardarCambiosTablaDetalleActivoFijo.addActionListener (
	          new java.awt.event.ActionListener() {
	              public void actionPerformed(ActionEvent evt) {
	            	  try {jButtonGuardarCambiosDetalleActivoFijoActionPerformed(evt);}catch(Exception e){e.printStackTrace();}
	              }
	          }
        );
		
		sMapKey = "GuardarCambiosDetalleActivoFijo";
		inputMap = this.jInternalFrameDetalleFormDetalleActivoFijo.jButtonGuardarCambiosDetalleActivoFijo.getInputMap(JComponent.WHEN_IN_FOCUSED_WINDOW);
		inputMap.put(KeyStroke.getKeyStroke(KeyEvent.VK_G , KeyEvent.CTRL_MASK), sMapKey);
			
		this.jInternalFrameDetalleFormDetalleActivoFijo.jButtonGuardarCambiosDetalleActivoFijo.getActionMap().put(sMapKey, new AbstractAction() {
			public static final long serialVersionUID = 1L;
			public void actionPerformed(ActionEvent evt) {
			    try {jButtonGuardarCambiosDetalleActivoFijoActionPerformed(evt);} catch (Exception e) {e.printStackTrace();}
			}
		});
		
		this.jButtonRecargarInformacionDetalleActivoFijo.addActionListener (
	          new java.awt.event.ActionListener() {
	              public void actionPerformed(ActionEvent evt) {
	            	  try {jButtonRecargarInformacionDetalleActivoFijoActionPerformed(evt);}catch(Exception e){e.printStackTrace();}
	              }
	          }
        );
		
		this.jButtonRecargarInformacionToolBarDetalleActivoFijo.addActionListener (
	          new java.awt.event.ActionListener() {
	              public void actionPerformed(ActionEvent evt) {
	            	  try {jButtonRecargarInformacionDetalleActivoFijoActionPerformed(evt);}catch(Exception e){e.printStackTrace();}
	              }
	          }
        );
		
		this.jMenuItemRecargarInformacionDetalleActivoFijo.addActionListener (
	          new java.awt.event.ActionListener() {
	              public void actionPerformed(ActionEvent evt) {
	            	  try {jButtonRecargarInformacionDetalleActivoFijoActionPerformed(evt);}catch(Exception e){e.printStackTrace();}
	              }
	          }
        );
		
		
		this.jButtonAnterioresDetalleActivoFijo.addActionListener (
	          new java.awt.event.ActionListener() {
	              public void actionPerformed(ActionEvent evt) {
	            	  try {jButtonAnterioresDetalleActivoFijoActionPerformed(evt);}catch(Exception e){e.printStackTrace();}
	              }
	          }
        );
		
		this.jButtonAnterioresToolBarDetalleActivoFijo.addActionListener (
	          new java.awt.event.ActionListener() {
	              public void actionPerformed(ActionEvent evt) {
	            	  try {jButtonAnterioresDetalleActivoFijoActionPerformed(evt);}catch(Exception e){e.printStackTrace();}
	              }
	          }
        );
		
		this.jMenuItemAnterioresDetalleActivoFijo.addActionListener (
	          new java.awt.event.ActionListener() {
	              public void actionPerformed(ActionEvent evt) {
	            	  try {jButtonAnterioresDetalleActivoFijoActionPerformed(evt);}catch(Exception e){e.printStackTrace();}
	              }
	          }
        );
		
		this.jButtonSiguientesDetalleActivoFijo.addActionListener (
	          new java.awt.event.ActionListener() {
	              public void actionPerformed(ActionEvent evt) {
	            	  try {jButtonSiguientesDetalleActivoFijoActionPerformed(evt);}catch(Exception e){e.printStackTrace();}
	              }
	          }
        );
		
		this.jButtonSiguientesToolBarDetalleActivoFijo.addActionListener (
	          new java.awt.event.ActionListener() {
	              public void actionPerformed(ActionEvent evt) {
	            	  try {jButtonSiguientesDetalleActivoFijoActionPerformed(evt);}catch(Exception e){e.printStackTrace();}
	              }
	          }
        );
		
		this.jMenuItemSiguientesDetalleActivoFijo.addActionListener (
	          new java.awt.event.ActionListener() {
	              public void actionPerformed(ActionEvent evt) {
	            	  try {jButtonSiguientesDetalleActivoFijoActionPerformed(evt);}catch(Exception e){e.printStackTrace();}
	              }
	          }
        );
		
		this.jButtonNuevoGuardarCambiosDetalleActivoFijo.addActionListener (
	          new java.awt.event.ActionListener() {
	              public void actionPerformed(ActionEvent evt) {
	            	  try {jButtonNuevoGuardarCambiosDetalleActivoFijoActionPerformed(evt);}catch(Exception e){e.printStackTrace();}
	              }
	          }
        );
		
		this.jButtonNuevoGuardarCambiosToolBarDetalleActivoFijo.addActionListener (
	          new java.awt.event.ActionListener() {
	              public void actionPerformed(ActionEvent evt) {
	            	  try {jButtonNuevoGuardarCambiosDetalleActivoFijoActionPerformed(evt);}catch(Exception e){e.printStackTrace();}
	              }
	          }
        );
		
		this.jMenuItemNuevoGuardarCambiosDetalleActivoFijo.addActionListener (
	          new java.awt.event.ActionListener() {
	              public void actionPerformed(ActionEvent evt) {
	            	  try {jButtonNuevoGuardarCambiosDetalleActivoFijoActionPerformed(evt);}catch(Exception e){e.printStackTrace();}
	              }
	          }
        );
		
		
		//SELECCIONAR TODOS
		this.jCheckBoxSeleccionarTodosDetalleActivoFijo.addItemListener(new ItemListener() {		
			public void itemStateChanged(ItemEvent evt) {
				try {jCheckBoxSeleccionarTodosDetalleActivoFijoItemListener(evt);}catch(Exception e){e.printStackTrace();}
			}
		});

		this.jComboBoxTiposAccionesDetalleActivoFijo.addActionListener (new ActionListener () {
			public void actionPerformed(ActionEvent e) {
				try {jComboBoxTiposAccionesDetalleActivoFijoActionListener(e);} catch (Exception e1) { e1.printStackTrace();}
			};
		});
		
		this.jComboBoxTiposSeleccionarDetalleActivoFijo.addActionListener (new ActionListener () {
			public void actionPerformed(ActionEvent e) {
				try {jComboBoxTiposSeleccionarDetalleActivoFijoActionListener(e);} catch (Exception e1) { e1.printStackTrace();}
			};
		});
		
		this.jTextFieldValorCampoGeneralDetalleActivoFijo.addActionListener (new ActionListener () {
			public void actionPerformed(ActionEvent e) {
				try {jTextFieldValorCampoGeneralDetalleActivoFijoActionListener(e);} catch (Exception e1) { e1.printStackTrace();}
			};
		});
		
		
		//BUSQUEDA GENERAL
		this.jInternalFrameDetalleFormDetalleActivoFijo.jButtonidDetalleActivoFijoBusqueda.addActionListener(new ButtonActionListener(this,"idDetalleActivoFijoBusqueda"));
		//ACTUALIZAR FK
		this.jInternalFrameDetalleFormDetalleActivoFijo.jButtonid_empresaDetalleActivoFijoUpdate.addActionListener(new ButtonActionListener(this,"id_empresaDetalleActivoFijoUpdate"));
		//BUSQUEDA GENERAL
		this.jInternalFrameDetalleFormDetalleActivoFijo.jButtonid_empresaDetalleActivoFijoBusqueda.addActionListener(new ButtonActionListener(this,"id_empresaDetalleActivoFijoBusqueda"));
		//ACTUALIZAR FK
		this.jInternalFrameDetalleFormDetalleActivoFijo.jButtonid_sucursalDetalleActivoFijoUpdate.addActionListener(new ButtonActionListener(this,"id_sucursalDetalleActivoFijoUpdate"));
		//BUSQUEDA GENERAL
		this.jInternalFrameDetalleFormDetalleActivoFijo.jButtonid_sucursalDetalleActivoFijoBusqueda.addActionListener(new ButtonActionListener(this,"id_sucursalDetalleActivoFijoBusqueda"));
		//ACTUALIZAR FK
		this.jInternalFrameDetalleFormDetalleActivoFijo.jButtonid_detalle_grupo_activo_fijoDetalleActivoFijoUpdate.addActionListener(new ButtonActionListener(this,"id_detalle_grupo_activo_fijoDetalleActivoFijoUpdate"));
		//BUSQUEDA GENERAL
		this.jInternalFrameDetalleFormDetalleActivoFijo.jButtonid_detalle_grupo_activo_fijoDetalleActivoFijoBusqueda.addActionListener(new ButtonActionListener(this,"id_detalle_grupo_activo_fijoDetalleActivoFijoBusqueda"));
		//ACTUALIZAR FK
		this.jInternalFrameDetalleFormDetalleActivoFijo.jButtonid_sub_grupo_activo_fijoDetalleActivoFijoUpdate.addActionListener(new ButtonActionListener(this,"id_sub_grupo_activo_fijoDetalleActivoFijoUpdate"));
		//BUSQUEDA GENERAL
		this.jInternalFrameDetalleFormDetalleActivoFijo.jButtonid_sub_grupo_activo_fijoDetalleActivoFijoBusqueda.addActionListener(new ButtonActionListener(this,"id_sub_grupo_activo_fijoDetalleActivoFijoBusqueda"));
		//ACTUALIZAR FK
		this.jInternalFrameDetalleFormDetalleActivoFijo.jButtonid_tipo_ramo_activo_fijoDetalleActivoFijoUpdate.addActionListener(new ButtonActionListener(this,"id_tipo_ramo_activo_fijoDetalleActivoFijoUpdate"));
		//BUSQUEDA GENERAL
		this.jInternalFrameDetalleFormDetalleActivoFijo.jButtonid_tipo_ramo_activo_fijoDetalleActivoFijoBusqueda.addActionListener(new ButtonActionListener(this,"id_tipo_ramo_activo_fijoDetalleActivoFijoBusqueda"));
		//ACTUALIZAR FK
		this.jInternalFrameDetalleFormDetalleActivoFijo.jButtonid_tipo_activo_fijo_empresaDetalleActivoFijoUpdate.addActionListener(new ButtonActionListener(this,"id_tipo_activo_fijo_empresaDetalleActivoFijoUpdate"));
		//BUSQUEDA GENERAL
		this.jInternalFrameDetalleFormDetalleActivoFijo.jButtonid_tipo_activo_fijo_empresaDetalleActivoFijoBusqueda.addActionListener(new ButtonActionListener(this,"id_tipo_activo_fijo_empresaDetalleActivoFijoBusqueda"));
		//ACTUALIZAR FK
		this.jInternalFrameDetalleFormDetalleActivoFijo.jButtonid_tipo_depreciacion_empresaDetalleActivoFijoUpdate.addActionListener(new ButtonActionListener(this,"id_tipo_depreciacion_empresaDetalleActivoFijoUpdate"));
		//BUSQUEDA GENERAL
		this.jInternalFrameDetalleFormDetalleActivoFijo.jButtonid_tipo_depreciacion_empresaDetalleActivoFijoBusqueda.addActionListener(new ButtonActionListener(this,"id_tipo_depreciacion_empresaDetalleActivoFijoBusqueda"));
		//ACTUALIZAR FK
		this.jInternalFrameDetalleFormDetalleActivoFijo.jButtonid_estado_activo_fijoDetalleActivoFijoUpdate.addActionListener(new ButtonActionListener(this,"id_estado_activo_fijoDetalleActivoFijoUpdate"));
		//BUSQUEDA GENERAL
		this.jInternalFrameDetalleFormDetalleActivoFijo.jButtonid_estado_activo_fijoDetalleActivoFijoBusqueda.addActionListener(new ButtonActionListener(this,"id_estado_activo_fijoDetalleActivoFijoBusqueda"));
		//jButtonid_clienteDetalleActivoFijo.addActionListener (
		//	new java.awt.event.ActionListener() {
		//		public void actionPerformed(java.awt.event.ActionEvent evt) {
		//			jButtonid_clienteDetalleActivoFijoActionPerformed(evt);
		//		}
		//	}
		//);

		//BUSQUEDA CAMPO
		this.jInternalFrameDetalleFormDetalleActivoFijo.jButtonid_clienteDetalleActivoFijo.addActionListener(new ButtonActionListener(this,"id_clienteDetalleActivoFijo"));
		//ACTUALIZAR FK
		this.jInternalFrameDetalleFormDetalleActivoFijo.jButtonid_clienteDetalleActivoFijoUpdate.addActionListener(new ButtonActionListener(this,"id_clienteDetalleActivoFijoUpdate"));
		//BUSQUEDA GENERAL
		this.jInternalFrameDetalleFormDetalleActivoFijo.jButtonid_clienteDetalleActivoFijoBusqueda.addActionListener(new ButtonActionListener(this,"id_clienteDetalleActivoFijoBusqueda"));
		//ACTUALIZAR FK
		this.jInternalFrameDetalleFormDetalleActivoFijo.jButtonid_partida_presuDetalleActivoFijoUpdate.addActionListener(new ButtonActionListener(this,"id_partida_presuDetalleActivoFijoUpdate"));
		//BUSQUEDA GENERAL
		this.jInternalFrameDetalleFormDetalleActivoFijo.jButtonid_partida_presuDetalleActivoFijoBusqueda.addActionListener(new ButtonActionListener(this,"id_partida_presuDetalleActivoFijoBusqueda"));
		//BUSQUEDA GENERAL
		this.jInternalFrameDetalleFormDetalleActivoFijo.jButtoncodigoDetalleActivoFijoBusqueda.addActionListener(new ButtonActionListener(this,"codigoDetalleActivoFijoBusqueda"));
		//BUSQUEDA GENERAL
		this.jInternalFrameDetalleFormDetalleActivoFijo.jButtonnombreDetalleActivoFijoBusqueda.addActionListener(new ButtonActionListener(this,"nombreDetalleActivoFijoBusqueda"));
		//BUSQUEDA GENERAL
		this.jInternalFrameDetalleFormDetalleActivoFijo.jButtonserieDetalleActivoFijoBusqueda.addActionListener(new ButtonActionListener(this,"serieDetalleActivoFijoBusqueda"));
		//BUSQUEDA GENERAL
		this.jInternalFrameDetalleFormDetalleActivoFijo.jButtonfecha_compraDetalleActivoFijoBusqueda.addActionListener(new ButtonActionListener(this,"fecha_compraDetalleActivoFijoBusqueda"));
		//BUSQUEDA GENERAL
		this.jInternalFrameDetalleFormDetalleActivoFijo.jButtonfecha_mantenimientoDetalleActivoFijoBusqueda.addActionListener(new ButtonActionListener(this,"fecha_mantenimientoDetalleActivoFijoBusqueda"));
		//BUSQUEDA GENERAL
		this.jInternalFrameDetalleFormDetalleActivoFijo.jButtonfecha_correccionDetalleActivoFijoBusqueda.addActionListener(new ButtonActionListener(this,"fecha_correccionDetalleActivoFijoBusqueda"));
		//BUSQUEDA GENERAL
		this.jInternalFrameDetalleFormDetalleActivoFijo.jButtonfecha_depreciacionDetalleActivoFijoBusqueda.addActionListener(new ButtonActionListener(this,"fecha_depreciacionDetalleActivoFijoBusqueda"));
		//BUSQUEDA GENERAL
		this.jInternalFrameDetalleFormDetalleActivoFijo.jButtonclaveDetalleActivoFijoBusqueda.addActionListener(new ButtonActionListener(this,"claveDetalleActivoFijoBusqueda"));
		//BUSQUEDA GENERAL
		this.jInternalFrameDetalleFormDetalleActivoFijo.jButtonmarcaDetalleActivoFijoBusqueda.addActionListener(new ButtonActionListener(this,"marcaDetalleActivoFijoBusqueda"));
		//BUSQUEDA GENERAL
		this.jInternalFrameDetalleFormDetalleActivoFijo.jButtonmodeloDetalleActivoFijoBusqueda.addActionListener(new ButtonActionListener(this,"modeloDetalleActivoFijoBusqueda"));
		//BUSQUEDA GENERAL
		this.jInternalFrameDetalleFormDetalleActivoFijo.jButtoncolorDetalleActivoFijoBusqueda.addActionListener(new ButtonActionListener(this,"colorDetalleActivoFijoBusqueda"));
		//BUSQUEDA GENERAL
		this.jInternalFrameDetalleFormDetalleActivoFijo.jButtonfechaDetalleActivoFijoBusqueda.addActionListener(new ButtonActionListener(this,"fechaDetalleActivoFijoBusqueda"));
		//BUSQUEDA GENERAL
		this.jInternalFrameDetalleFormDetalleActivoFijo.jButtonvalor_utilDetalleActivoFijoBusqueda.addActionListener(new ButtonActionListener(this,"valor_utilDetalleActivoFijoBusqueda"));
		//BUSQUEDA GENERAL
		this.jInternalFrameDetalleFormDetalleActivoFijo.jButtoncosto_de_compraDetalleActivoFijoBusqueda.addActionListener(new ButtonActionListener(this,"costo_de_compraDetalleActivoFijoBusqueda"));
		//BUSQUEDA GENERAL
		this.jInternalFrameDetalleFormDetalleActivoFijo.jButtonvida_utilDetalleActivoFijoBusqueda.addActionListener(new ButtonActionListener(this,"vida_utilDetalleActivoFijoBusqueda"));
		//BUSQUEDA GENERAL
		this.jInternalFrameDetalleFormDetalleActivoFijo.jButtonvalor_residualDetalleActivoFijoBusqueda.addActionListener(new ButtonActionListener(this,"valor_residualDetalleActivoFijoBusqueda"));
		//BUSQUEDA GENERAL
		this.jInternalFrameDetalleFormDetalleActivoFijo.jButtoncantidadDetalleActivoFijoBusqueda.addActionListener(new ButtonActionListener(this,"cantidadDetalleActivoFijoBusqueda"));
		//BUSQUEDA GENERAL
		this.jInternalFrameDetalleFormDetalleActivoFijo.jButtonnombre_propietarioDetalleActivoFijoBusqueda.addActionListener(new ButtonActionListener(this,"nombre_propietarioDetalleActivoFijoBusqueda"));
		//BUSQUEDA GENERAL
		this.jInternalFrameDetalleFormDetalleActivoFijo.jButtonresponsableDetalleActivoFijoBusqueda.addActionListener(new ButtonActionListener(this,"responsableDetalleActivoFijoBusqueda"));
		//BUSQUEDA GENERAL
		this.jInternalFrameDetalleFormDetalleActivoFijo.jButtonpath_fotoDetalleActivoFijoBusqueda.addActionListener(new ButtonActionListener(this,"path_fotoDetalleActivoFijoBusqueda"));
		//BUSQUEDA GENERAL
		this.jInternalFrameDetalleFormDetalleActivoFijo.jButtonnumero_comprobanteDetalleActivoFijoBusqueda.addActionListener(new ButtonActionListener(this,"numero_comprobanteDetalleActivoFijoBusqueda"));
		//BUSQUEDA GENERAL
		this.jInternalFrameDetalleFormDetalleActivoFijo.jButtonreferenciaDetalleActivoFijoBusqueda.addActionListener(new ButtonActionListener(this,"referenciaDetalleActivoFijoBusqueda"));
		//BUSQUEDA GENERAL
		this.jInternalFrameDetalleFormDetalleActivoFijo.jButtonvalor_cotizacionDetalleActivoFijoBusqueda.addActionListener(new ButtonActionListener(this,"valor_cotizacionDetalleActivoFijoBusqueda"));
		//BUSQUEDA GENERAL
		this.jInternalFrameDetalleFormDetalleActivoFijo.jButtoncon_partesDetalleActivoFijoBusqueda.addActionListener(new ButtonActionListener(this,"con_partesDetalleActivoFijoBusqueda"));
		//BUSQUEDA GENERAL
		this.jInternalFrameDetalleFormDetalleActivoFijo.jButtoncon_garantiaDetalleActivoFijoBusqueda.addActionListener(new ButtonActionListener(this,"con_garantiaDetalleActivoFijoBusqueda"));
		//BUSQUEDA GENERAL
		this.jInternalFrameDetalleFormDetalleActivoFijo.jButtoncon_existenciaDetalleActivoFijoBusqueda.addActionListener(new ButtonActionListener(this,"con_existenciaDetalleActivoFijoBusqueda"));
		//BUSQUEDA GENERAL
		this.jInternalFrameDetalleFormDetalleActivoFijo.jButtonfecha_bajaDetalleActivoFijoBusqueda.addActionListener(new ButtonActionListener(this,"fecha_bajaDetalleActivoFijoBusqueda"));
		//BUSQUEDA GENERAL
		this.jInternalFrameDetalleFormDetalleActivoFijo.jButtonpath_foto2DetalleActivoFijoBusqueda.addActionListener(new ButtonActionListener(this,"path_foto2DetalleActivoFijoBusqueda"));
		
		
		this.jButtonFK_IdClienteDetalleActivoFijo.addActionListener(new ButtonActionListener(this,"FK_IdClienteDetalleActivoFijo"));

		this.jButtonBuscarFK_IdClienteid_clienteDetalleActivoFijo.addActionListener(new ButtonActionListener(this,"id_clienteDetalleActivoFijo"));

		this.jButtonFK_IdDetalleGrupoActivoFijoDetalleActivoFijo.addActionListener(new ButtonActionListener(this,"FK_IdDetalleGrupoActivoFijoDetalleActivoFijo"));

		this.jButtonFK_IdEstadoActivoFijoDetalleActivoFijo.addActionListener(new ButtonActionListener(this,"FK_IdEstadoActivoFijoDetalleActivoFijo"));

		this.jButtonFK_IdPartidaPresuDetalleActivoFijo.addActionListener(new ButtonActionListener(this,"FK_IdPartidaPresuDetalleActivoFijo"));

		this.jButtonFK_IdSubGrupoActivoFijoDetalleActivoFijo.addActionListener(new ButtonActionListener(this,"FK_IdSubGrupoActivoFijoDetalleActivoFijo"));

		this.jButtonFK_IdTipoActivoFijoEmpresaDetalleActivoFijo.addActionListener(new ButtonActionListener(this,"FK_IdTipoActivoFijoEmpresaDetalleActivoFijo"));

		this.jButtonFK_IdTipoDepreciacionEmpresaDetalleActivoFijo.addActionListener(new ButtonActionListener(this,"FK_IdTipoDepreciacionEmpresaDetalleActivoFijo"));

		this.jButtonFK_IdTipoRamoActivoFijoDetalleActivoFijo.addActionListener(new ButtonActionListener(this,"FK_IdTipoRamoActivoFijoDetalleActivoFijo"));

		
		//REPORTE DINAMICO
		this.jButtonCerrarReporteDinamicoDetalleActivoFijo.addActionListener (
	          new java.awt.event.ActionListener() {
	              public void actionPerformed(ActionEvent evt) {
	            	  try {jButtonCerrarReporteDinamicoDetalleActivoFijoActionPerformed(evt);}catch(Exception e){e.printStackTrace();}
	              }
	          }
        );
		
		this.jButtonGenerarReporteDinamicoDetalleActivoFijo.addActionListener (
	          new java.awt.event.ActionListener() {
	              public void actionPerformed(ActionEvent evt) {
	            	  try {jButtonGenerarReporteDinamicoDetalleActivoFijoActionPerformed(evt);}catch(Exception e){e.printStackTrace();}
	              }
	          }
        );
		
		this.jButtonGenerarExcelReporteDinamicoDetalleActivoFijo.addActionListener (
	          new java.awt.event.ActionListener() {
	              public void actionPerformed(ActionEvent evt) {
	            	  try {jButtonGenerarExcelReporteDinamicoDetalleActivoFijoActionPerformed(evt);}catch(Exception e){e.printStackTrace();}
	              }
	          }
        );
		
		//IMPORTACION
		this.jButtonCerrarImportacionDetalleActivoFijo.addActionListener (
	          new java.awt.event.ActionListener() {
	              public void actionPerformed(ActionEvent evt) {
	            	  try {jButtonCerrarImportacionDetalleActivoFijoActionPerformed(evt);}catch(Exception e){e.printStackTrace();}
	              }
	          }
        );
		
		this.jButtonGenerarImportacionDetalleActivoFijo.addActionListener (
	          new java.awt.event.ActionListener() {
	              public void actionPerformed(ActionEvent evt) {
	            	  try {jButtonGenerarImportacionDetalleActivoFijoActionPerformed(evt);}catch(Exception e){e.printStackTrace();}
	              }
	          }
        );
		
		this.jButtonAbrirImportacionDetalleActivoFijo.addActionListener (
	          new java.awt.event.ActionListener() {
	              public void actionPerformed(ActionEvent evt) {
	            	  try {jButtonAbrirImportacionDetalleActivoFijoActionPerformed(evt);}catch(Exception e){e.printStackTrace();}
	              }
	          }
        );
	}
	*/
	
	
	public void jComboBoxTiposSeleccionarDetalleActivoFijoActionListener(ActionEvent evt) throws Exception {    		
		try {			
			Reporte reporte=(Reporte)this.jComboBoxTiposSeleccionarDetalleActivoFijo.getSelectedItem();
			
			//if(reporte.getsCodigo().equals("SELECCIONAR")) {
			//}					
		} catch(Exception e) {
			FuncionesSwing.manageException(this, e,logger,DetalleActivoFijoConstantesFunciones.CLASSNAME);
		}
	}	
	
	
	
	public void seleccionarTodosDetalleActivoFijo(Boolean conSeleccionarTodos) throws Exception {    		
		try {
			if(Constantes.ISUSAEJBLOGICLAYER) {				
				for(DetalleActivoFijo detalleactivofijoAux:this.detalleactivofijoLogic.getDetalleActivoFijos()) {
					detalleactivofijoAux.setIsSelected(conSeleccionarTodos);
				}			
			} else if(Constantes.ISUSAEJBREMOTE||Constantes.ISUSAEJBHOME) {
				for(DetalleActivoFijo detalleactivofijoAux:detalleactivofijos) {
					detalleactivofijoAux.setIsSelected(conSeleccionarTodos);
				}
			}
		} catch(Exception e) {
			FuncionesSwing.manageException(this, e,logger,DetalleActivoFijoConstantesFunciones.CLASSNAME);
		}
	}
	
	public void jCheckBoxSeleccionarTodosDetalleActivoFijoItemListener(ItemEvent evt) throws Exception {    		
		try {			
			this.inicializarActualizarBindingDetalleActivoFijo(false,false);
			
			//JCheckBox jCheckBox=(JCheckBox)evt.getSource();			
			//System.out.println("ok");		
			
			Boolean existe=false;
			
			if(sTipoSeleccionar.equals("COLUMNAS")) {
				existe=true;
				
				if(Constantes.ISUSAEJBLOGICLAYER) {				
					for(DetalleActivoFijo detalleactivofijoAux:this.detalleactivofijoLogic.getDetalleActivoFijos()) {
						detalleactivofijoAux.setIsSelected(this.isSeleccionarTodos);
					}			
				} else if(Constantes.ISUSAEJBREMOTE||Constantes.ISUSAEJBHOME) {
					for(DetalleActivoFijo detalleactivofijoAux:detalleactivofijos) {
						detalleactivofijoAux.setIsSelected(this.isSeleccionarTodos);
					}
				}
			} else {
				if(Constantes.ISUSAEJBLOGICLAYER) {
					for(DetalleActivoFijo detalleactivofijoAux:this.detalleactivofijoLogic.getDetalleActivoFijos()) {
					
						if(sTipoSeleccionar.equals(DetalleActivoFijoConstantesFunciones.LABEL_CONPARTES)) {
							existe=true;
							detalleactivofijoAux.setcon_partes(this.isSeleccionarTodos);
						}
						 else if(sTipoSeleccionar.equals(DetalleActivoFijoConstantesFunciones.LABEL_CONGARANTIA)) {
							existe=true;
							detalleactivofijoAux.setcon_garantia(this.isSeleccionarTodos);
						}
						 else if(sTipoSeleccionar.equals(DetalleActivoFijoConstantesFunciones.LABEL_CONEXISTENCIA)) {
							existe=true;
							detalleactivofijoAux.setcon_existencia(this.isSeleccionarTodos);
						}
					}	
				} else if(Constantes.ISUSAEJBREMOTE||Constantes.ISUSAEJBHOME) {
					for(DetalleActivoFijo detalleactivofijoAux:detalleactivofijos) {
						
						if(sTipoSeleccionar.equals(DetalleActivoFijoConstantesFunciones.LABEL_CONPARTES)) {
							existe=true;
							detalleactivofijoAux.setcon_partes(this.isSeleccionarTodos);
						}
						 else if(sTipoSeleccionar.equals(DetalleActivoFijoConstantesFunciones.LABEL_CONGARANTIA)) {
							existe=true;
							detalleactivofijoAux.setcon_garantia(this.isSeleccionarTodos);
						}
						 else if(sTipoSeleccionar.equals(DetalleActivoFijoConstantesFunciones.LABEL_CONEXISTENCIA)) {
							existe=true;
							detalleactivofijoAux.setcon_existencia(this.isSeleccionarTodos);
						}
					}
				}
			}
					
			if(existe) {
				this.inicializarActualizarBindingTablaDetalleActivoFijo(false);
			} else {
				JOptionPane.showMessageDialog(this,"NO SE HA SELECCIONADO ALGUNA COLUMNA VALIDA","SELECCIONAR",JOptionPane.ERROR_MESSAGE);
			}	
			
			//TableCellRenderer tableCellRenderer=null;			
			
			//TableCellEditor tableCellEditor=null;						
						
			//FUNCIONA CON MODEL PERO SE DANA MANTENIMIENTO
			/*
			for(int i = 0; i < this.jTableDatosDetalleActivoFijo.getRowCount(); i++) {				
				tableCellRenderer=this.jTableDatosSistema.getCellRenderer(i, 2);
				tableCellEditor=this.jTableDatosSistema.getCellEditor(i, 2);
				
				idSeleccionarTableCell=(IdSeleccionarTableCell)tableCellRenderer;				
				idSeleccionarTableCell.jCheckBoxId.setSelected(jCheckBox.isSelected());
				
				idSeleccionarTableCell=(IdSeleccionarTableCell)tableCellEditor;
				
				if(idSeleccionarTableCell.jCheckBoxId!=null) {
					idSeleccionarTableCell.jCheckBoxId.setSelected(jCheckBox.isSelected());
				}
				
				//System.out.println(idSeleccionarTableCell.valor);
				
				//this.jTableDatosDetalleActivoFijo.getModel().setValueAt(jCheckBox.isSelected(), i, Funciones2.getColumnIndexByName(this.jTableDatosDetalleActivoFijo,Constantes2.S_SELECCIONAR));
		    } 
			*/
					
		} catch(Exception e) {
			FuncionesSwing.manageException(this, e,logger,DetalleActivoFijoConstantesFunciones.CLASSNAME);
		}
	}
	
	public void jCheckBoxSeleccionadosDetalleActivoFijoItemListener(ItemEvent evt) throws Exception {    		
		try {			
			this.inicializarActualizarBindingDetalleActivoFijo(false,false);
			
			//JCheckBox jCheckBox=(JCheckBox)evt.getSource();			
			//System.out.println("ok");		
			
			Boolean existe=false;
			int[] arrNumRowsSeleccionados=null;
			
			arrNumRowsSeleccionados=this.jTableDatosDetalleActivoFijo.getSelectedRows();
			
			DetalleActivoFijo detalleactivofijoLocal=new DetalleActivoFijo();
			
			//this.seleccionarTodosDetalleActivoFijo(false);
			
			for(Integer iNumRowSeleccionado:arrNumRowsSeleccionados) {
				existe=true;
				
				if(Constantes.ISUSAEJBLOGICLAYER) {
					detalleactivofijoLocal =(DetalleActivoFijo) this.detalleactivofijoLogic.getDetalleActivoFijos().toArray()[this.jTableDatosDetalleActivoFijo.convertRowIndexToModel(iNumRowSeleccionado)];
				} else if(Constantes.ISUSAEJBREMOTE || Constantes.ISUSAEJBHOME) {
					detalleactivofijoLocal =(DetalleActivoFijo) this.detalleactivofijos.toArray()[this.jTableDatosDetalleActivoFijo.convertRowIndexToModel(iNumRowSeleccionado)];
				}
				
				detalleactivofijoLocal.setIsSelected(this.isSeleccionados);
			}
			
			/*
			if(sTipoSeleccionar.equals("SELECCIONAR")) {
				existe=true;
				
				if(Constantes.ISUSAEJBLOGICLAYER) {				
					for(DetalleActivoFijo detalleactivofijoAux:this.detalleactivofijoLogic.getDetalleActivoFijos()) {
						detalleactivofijoAux.setIsSelected(this.isSeleccionados);
					}			
				} else if(Constantes.ISUSAEJBREMOTE||Constantes.ISUSAEJBHOME) {
					for(DetalleActivoFijo detalleactivofijoAux:detalleactivofijos) {
						detalleactivofijoAux.setIsSelected(this.isSeleccionados);
					}
				}
			}
			*/
			
			//if(existe) {
				this.inicializarActualizarBindingTablaDetalleActivoFijo(false);
			/*
			} else {
				JOptionPane.showMessageDialog(this,"NO SE HA SELECCIONADO ALGUNA COLUMNA VALIDA","SELECCIONAR",JOptionPane.ERROR_MESSAGE);
			}	
			*/
			
			
			//TableCellRenderer tableCellRenderer=null;			
			
			//TableCellEditor tableCellEditor=null;						
						
			//FUNCIONA CON MODEL PERO SE DANA MANTENIMIENTO
			/*
			for(int i = 0; i < this.jTableDatosDetalleActivoFijo.getRowCount(); i++) {				
				tableCellRenderer=this.jTableDatosSistema.getCellRenderer(i, 2);
				tableCellEditor=this.jTableDatosSistema.getCellEditor(i, 2);
				
				idSeleccionarTableCell=(IdSeleccionarTableCell)tableCellRenderer;				
				idSeleccionarTableCell.jCheckBoxId.setSelected(jCheckBox.isSelected());
				
				idSeleccionarTableCell=(IdSeleccionarTableCell)tableCellEditor;
				
				if(idSeleccionarTableCell.jCheckBoxId!=null) {
					idSeleccionarTableCell.jCheckBoxId.setSelected(jCheckBox.isSelected());
				}
				
				//System.out.println(idSeleccionarTableCell.valor);
				
				//this.jTableDatosDetalleActivoFijo.getModel().setValueAt(jCheckBox.isSelected(), i, Funciones2.getColumnIndexByName(this.jTableDatosDetalleActivoFijo,Constantes2.S_SELECCIONAR));
		    } 
			*/
					
		} catch(Exception e) {
			FuncionesSwing.manageException(this, e,logger,DetalleActivoFijoConstantesFunciones.CLASSNAME);
		}
	}
	
	public void jCheckBoxSeleccionarActualDetalleActivoFijoItemListener(ItemEvent evt,Long idActual) throws Exception {    		
		try {
			
		} catch(Exception e) {
			FuncionesSwing.manageException(this, e,logger,DetalleActivoFijoConstantesFunciones.CLASSNAME);
		}
	}
	
	public void ejecutarAuxiliarDetalleActivoFijoParaAjaxPostBack() throws Exception {    		
		try {
			
		} catch(Exception e) {
			FuncionesSwing.manageException(this, e,logger,DetalleActivoFijoConstantesFunciones.CLASSNAME);
		}
	}
	
	public void jTextFieldValorCampoGeneralDetalleActivoFijoActionListener(ActionEvent evt) throws Exception {    		
		try {
			this.inicializarActualizarBindingDetalleActivoFijo(false,false);
			
			//System.out.println(this.jTextFieldValorCampoGeneralDetalleActivoFijo.getText());		
			
			Boolean existe=false;
			
			if(Constantes.ISUSAEJBLOGICLAYER) {
				for(DetalleActivoFijo detalleactivofijoAux:this.detalleactivofijoLogic.getDetalleActivoFijos()) {
				
						if(sTipoSeleccionar.equals(DetalleActivoFijoConstantesFunciones.LABEL_CODIGO)) {
							existe=true;
							detalleactivofijoAux.setcodigo(this.sValorCampoGeneral);
						}
						 else if(sTipoSeleccionar.equals(DetalleActivoFijoConstantesFunciones.LABEL_NOMBRE)) {
							existe=true;
							detalleactivofijoAux.setnombre(this.sValorCampoGeneral);
						}
						 else if(sTipoSeleccionar.equals(DetalleActivoFijoConstantesFunciones.LABEL_SERIE)) {
							existe=true;
							detalleactivofijoAux.setserie(this.sValorCampoGeneral);
						}
						 else if(sTipoSeleccionar.equals(DetalleActivoFijoConstantesFunciones.LABEL_FECHACOMPRA)) {
							existe=true;
							detalleactivofijoAux.setfecha_compra(Funciones.ConvertToDate(this.sValorCampoGeneral));
						}
						 else if(sTipoSeleccionar.equals(DetalleActivoFijoConstantesFunciones.LABEL_FECHAMANTENIMIENTO)) {
							existe=true;
							detalleactivofijoAux.setfecha_mantenimiento(Funciones.ConvertToDate(this.sValorCampoGeneral));
						}
						 else if(sTipoSeleccionar.equals(DetalleActivoFijoConstantesFunciones.LABEL_FECHACORRECCION)) {
							existe=true;
							detalleactivofijoAux.setfecha_correccion(Funciones.ConvertToDate(this.sValorCampoGeneral));
						}
						 else if(sTipoSeleccionar.equals(DetalleActivoFijoConstantesFunciones.LABEL_FECHADEPRECIACION)) {
							existe=true;
							detalleactivofijoAux.setfecha_depreciacion(Funciones.ConvertToDate(this.sValorCampoGeneral));
						}
						 else if(sTipoSeleccionar.equals(DetalleActivoFijoConstantesFunciones.LABEL_CLAVE)) {
							existe=true;
							detalleactivofijoAux.setclave(this.sValorCampoGeneral);
						}
						 else if(sTipoSeleccionar.equals(DetalleActivoFijoConstantesFunciones.LABEL_MARCA)) {
							existe=true;
							detalleactivofijoAux.setmarca(this.sValorCampoGeneral);
						}
						 else if(sTipoSeleccionar.equals(DetalleActivoFijoConstantesFunciones.LABEL_MODELO)) {
							existe=true;
							detalleactivofijoAux.setmodelo(this.sValorCampoGeneral);
						}
						 else if(sTipoSeleccionar.equals(DetalleActivoFijoConstantesFunciones.LABEL_COLOR)) {
							existe=true;
							detalleactivofijoAux.setcolor(this.sValorCampoGeneral);
						}
						 else if(sTipoSeleccionar.equals(DetalleActivoFijoConstantesFunciones.LABEL_FECHA)) {
							existe=true;
							detalleactivofijoAux.setfecha(Funciones.ConvertToDate(this.sValorCampoGeneral));
						}
						 else if(sTipoSeleccionar.equals(DetalleActivoFijoConstantesFunciones.LABEL_VALORUTIL)) {
							existe=true;
							detalleactivofijoAux.setvalor_util(Double.parseDouble(this.sValorCampoGeneral));
						}
						 else if(sTipoSeleccionar.equals(DetalleActivoFijoConstantesFunciones.LABEL_COSTODECOMPRA)) {
							existe=true;
							detalleactivofijoAux.setcosto_de_compra(Double.parseDouble(this.sValorCampoGeneral));
						}
						 else if(sTipoSeleccionar.equals(DetalleActivoFijoConstantesFunciones.LABEL_VIDAUTIL)) {
							existe=true;
							detalleactivofijoAux.setvida_util(Double.parseDouble(this.sValorCampoGeneral));
						}
						 else if(sTipoSeleccionar.equals(DetalleActivoFijoConstantesFunciones.LABEL_VALORRESIDUAL)) {
							existe=true;
							detalleactivofijoAux.setvalor_residual(Double.parseDouble(this.sValorCampoGeneral));
						}
						 else if(sTipoSeleccionar.equals(DetalleActivoFijoConstantesFunciones.LABEL_CANTIDAD)) {
							existe=true;
							detalleactivofijoAux.setcantidad(Integer.parseInt(this.sValorCampoGeneral));
						}
						 else if(sTipoSeleccionar.equals(DetalleActivoFijoConstantesFunciones.LABEL_NOMBREPROPIETARIO)) {
							existe=true;
							detalleactivofijoAux.setnombre_propietario(this.sValorCampoGeneral);
						}
						 else if(sTipoSeleccionar.equals(DetalleActivoFijoConstantesFunciones.LABEL_RESPONSABLE)) {
							existe=true;
							detalleactivofijoAux.setresponsable(this.sValorCampoGeneral);
						}
						 else if(sTipoSeleccionar.equals(DetalleActivoFijoConstantesFunciones.LABEL_PATHFOTO)) {
							existe=true;
							detalleactivofijoAux.setpath_foto(this.sValorCampoGeneral);
						}
						 else if(sTipoSeleccionar.equals(DetalleActivoFijoConstantesFunciones.LABEL_NUMEROCOMPROBANTE)) {
							existe=true;
							detalleactivofijoAux.setnumero_comprobante(this.sValorCampoGeneral);
						}
						 else if(sTipoSeleccionar.equals(DetalleActivoFijoConstantesFunciones.LABEL_REFERENCIA)) {
							existe=true;
							detalleactivofijoAux.setreferencia(this.sValorCampoGeneral);
						}
						 else if(sTipoSeleccionar.equals(DetalleActivoFijoConstantesFunciones.LABEL_VALORCOTIZACION)) {
							existe=true;
							detalleactivofijoAux.setvalor_cotizacion(Double.parseDouble(this.sValorCampoGeneral));
						}
						 else if(sTipoSeleccionar.equals(DetalleActivoFijoConstantesFunciones.LABEL_FECHABAJA)) {
							existe=true;
							detalleactivofijoAux.setfecha_baja(Funciones.ConvertToDate(this.sValorCampoGeneral));
						}
						 else if(sTipoSeleccionar.equals(DetalleActivoFijoConstantesFunciones.LABEL_PATHFOTO2)) {
							existe=true;
							detalleactivofijoAux.setpath_foto2(this.sValorCampoGeneral);
						}
				}	
			} else if(Constantes.ISUSAEJBREMOTE||Constantes.ISUSAEJBHOME) {
				for(DetalleActivoFijo detalleactivofijoAux:detalleactivofijos) {
					
						if(sTipoSeleccionar.equals(DetalleActivoFijoConstantesFunciones.LABEL_CODIGO)) {
							existe=true;
							detalleactivofijoAux.setcodigo(this.sValorCampoGeneral);
						}
						 else if(sTipoSeleccionar.equals(DetalleActivoFijoConstantesFunciones.LABEL_NOMBRE)) {
							existe=true;
							detalleactivofijoAux.setnombre(this.sValorCampoGeneral);
						}
						 else if(sTipoSeleccionar.equals(DetalleActivoFijoConstantesFunciones.LABEL_SERIE)) {
							existe=true;
							detalleactivofijoAux.setserie(this.sValorCampoGeneral);
						}
						 else if(sTipoSeleccionar.equals(DetalleActivoFijoConstantesFunciones.LABEL_FECHACOMPRA)) {
							existe=true;
							detalleactivofijoAux.setfecha_compra(Funciones.ConvertToDate(this.sValorCampoGeneral));
						}
						 else if(sTipoSeleccionar.equals(DetalleActivoFijoConstantesFunciones.LABEL_FECHAMANTENIMIENTO)) {
							existe=true;
							detalleactivofijoAux.setfecha_mantenimiento(Funciones.ConvertToDate(this.sValorCampoGeneral));
						}
						 else if(sTipoSeleccionar.equals(DetalleActivoFijoConstantesFunciones.LABEL_FECHACORRECCION)) {
							existe=true;
							detalleactivofijoAux.setfecha_correccion(Funciones.ConvertToDate(this.sValorCampoGeneral));
						}
						 else if(sTipoSeleccionar.equals(DetalleActivoFijoConstantesFunciones.LABEL_FECHADEPRECIACION)) {
							existe=true;
							detalleactivofijoAux.setfecha_depreciacion(Funciones.ConvertToDate(this.sValorCampoGeneral));
						}
						 else if(sTipoSeleccionar.equals(DetalleActivoFijoConstantesFunciones.LABEL_CLAVE)) {
							existe=true;
							detalleactivofijoAux.setclave(this.sValorCampoGeneral);
						}
						 else if(sTipoSeleccionar.equals(DetalleActivoFijoConstantesFunciones.LABEL_MARCA)) {
							existe=true;
							detalleactivofijoAux.setmarca(this.sValorCampoGeneral);
						}
						 else if(sTipoSeleccionar.equals(DetalleActivoFijoConstantesFunciones.LABEL_MODELO)) {
							existe=true;
							detalleactivofijoAux.setmodelo(this.sValorCampoGeneral);
						}
						 else if(sTipoSeleccionar.equals(DetalleActivoFijoConstantesFunciones.LABEL_COLOR)) {
							existe=true;
							detalleactivofijoAux.setcolor(this.sValorCampoGeneral);
						}
						 else if(sTipoSeleccionar.equals(DetalleActivoFijoConstantesFunciones.LABEL_FECHA)) {
							existe=true;
							detalleactivofijoAux.setfecha(Funciones.ConvertToDate(this.sValorCampoGeneral));
						}
						 else if(sTipoSeleccionar.equals(DetalleActivoFijoConstantesFunciones.LABEL_VALORUTIL)) {
							existe=true;
							detalleactivofijoAux.setvalor_util(Double.parseDouble(this.sValorCampoGeneral));
						}
						 else if(sTipoSeleccionar.equals(DetalleActivoFijoConstantesFunciones.LABEL_COSTODECOMPRA)) {
							existe=true;
							detalleactivofijoAux.setcosto_de_compra(Double.parseDouble(this.sValorCampoGeneral));
						}
						 else if(sTipoSeleccionar.equals(DetalleActivoFijoConstantesFunciones.LABEL_VIDAUTIL)) {
							existe=true;
							detalleactivofijoAux.setvida_util(Double.parseDouble(this.sValorCampoGeneral));
						}
						 else if(sTipoSeleccionar.equals(DetalleActivoFijoConstantesFunciones.LABEL_VALORRESIDUAL)) {
							existe=true;
							detalleactivofijoAux.setvalor_residual(Double.parseDouble(this.sValorCampoGeneral));
						}
						 else if(sTipoSeleccionar.equals(DetalleActivoFijoConstantesFunciones.LABEL_CANTIDAD)) {
							existe=true;
							detalleactivofijoAux.setcantidad(Integer.parseInt(this.sValorCampoGeneral));
						}
						 else if(sTipoSeleccionar.equals(DetalleActivoFijoConstantesFunciones.LABEL_NOMBREPROPIETARIO)) {
							existe=true;
							detalleactivofijoAux.setnombre_propietario(this.sValorCampoGeneral);
						}
						 else if(sTipoSeleccionar.equals(DetalleActivoFijoConstantesFunciones.LABEL_RESPONSABLE)) {
							existe=true;
							detalleactivofijoAux.setresponsable(this.sValorCampoGeneral);
						}
						 else if(sTipoSeleccionar.equals(DetalleActivoFijoConstantesFunciones.LABEL_PATHFOTO)) {
							existe=true;
							detalleactivofijoAux.setpath_foto(this.sValorCampoGeneral);
						}
						 else if(sTipoSeleccionar.equals(DetalleActivoFijoConstantesFunciones.LABEL_NUMEROCOMPROBANTE)) {
							existe=true;
							detalleactivofijoAux.setnumero_comprobante(this.sValorCampoGeneral);
						}
						 else if(sTipoSeleccionar.equals(DetalleActivoFijoConstantesFunciones.LABEL_REFERENCIA)) {
							existe=true;
							detalleactivofijoAux.setreferencia(this.sValorCampoGeneral);
						}
						 else if(sTipoSeleccionar.equals(DetalleActivoFijoConstantesFunciones.LABEL_VALORCOTIZACION)) {
							existe=true;
							detalleactivofijoAux.setvalor_cotizacion(Double.parseDouble(this.sValorCampoGeneral));
						}
						 else if(sTipoSeleccionar.equals(DetalleActivoFijoConstantesFunciones.LABEL_FECHABAJA)) {
							existe=true;
							detalleactivofijoAux.setfecha_baja(Funciones.ConvertToDate(this.sValorCampoGeneral));
						}
						 else if(sTipoSeleccionar.equals(DetalleActivoFijoConstantesFunciones.LABEL_PATHFOTO2)) {
							existe=true;
							detalleactivofijoAux.setpath_foto2(this.sValorCampoGeneral);
						}
				}
			}
								
			if(existe) {
				this.inicializarActualizarBindingTablaDetalleActivoFijo(false);
			} else {
				JOptionPane.showMessageDialog(this,"NO SE HA SELECCIONADO ALGUNA COLUMNA VALIDA","SELECCIONAR",JOptionPane.ERROR_MESSAGE);
			}			
		} catch(Exception e) {
			FuncionesSwing.manageException(this, e,logger,DetalleActivoFijoConstantesFunciones.CLASSNAME);
		}
	}
	
	public void jComboBoxTiposAccionesDetalleActivoFijoActionListener(ActionEvent evt,Boolean esParaAccionDesdeFormulario) throws Exception {    				
		Boolean conSplash=true;
		
		try {							
		
			this.inicializarActualizarBindingDetalleActivoFijo(false,false);
			
			Reporte reporte=new Reporte();
			
			this.esParaAccionDesdeFormularioDetalleActivoFijo=esParaAccionDesdeFormulario;
			
			if(!esParaAccionDesdeFormulario) {
				
				reporte=(Reporte)this.jComboBoxTiposAccionesDetalleActivoFijo.getSelectedItem();
				
			} else {
				reporte=(Reporte)this.jInternalFrameDetalleFormDetalleActivoFijo.jComboBoxTiposAccionesFormularioDetalleActivoFijo.getSelectedItem();
			}
			String sTipoAccionLocal=this.sTipoAccion;
			
			if(!esParaAccionDesdeFormulario) {
				sTipoAccionLocal=this.sTipoAccion;
			} else {
				sTipoAccionLocal=this.sTipoAccionFormulario;
			}
			
			if(sTipoAccionLocal.equals("GENERAR REPORTE")) {//reporte.getsCodigo().equals("GENERAR REPORTE")) {
				if(this.isPermisoReporteDetalleActivoFijo) {				
					conSplash=true;//false;										
					
					//this.startProcessDetalleActivoFijo(conSplash);
				
					this.generarReporteDetalleActivoFijosSeleccionados();
				} else {
					JOptionPane.showMessageDialog(this,"NO TIENE PERMISO PARA GENERAR REPORTES","REPORTE",JOptionPane.ERROR_MESSAGE);					
				}
				if(!esParaAccionDesdeFormulario) {
					
					this.jComboBoxTiposAccionesDetalleActivoFijo.setSelectedIndex(0);					
					
				} else {
					this.jInternalFrameDetalleFormDetalleActivoFijo.jComboBoxTiposAccionesFormularioDetalleActivoFijo.setSelectedIndex(0);					
				}
			} else if(sTipoAccionLocal.equals("GENERAR REPORTE DINAMICO")) {//reporte.getsCodigo().equals("GENERAR_REPORTE_GROUP_GENERICO")) {
				//SE GENERA REPORTE SEGUN TIPO REPORTE SELECCIONADO
				//this.mostrarReporteDinamicoDetalleActivoFijosSeleccionados();
				//this.jComboBoxTiposAccionesDetalleActivoFijo.setSelectedIndex(0);					
			}  else if(sTipoAccionLocal.equals("GENERAR_REPORTE_GROUP_GENERICO")) {//reporte.getsCodigo().equals("GENERAR_REPORTE_GROUP_GENERICO")) {
				//SE GENERA REPORTE SEGUN TIPO REPORTE SELECCIONADO
				//this.generarReporteGroupGenericoDetalleActivoFijosSeleccionados(false);
				//this.jComboBoxTiposAccionesDetalleActivoFijo.setSelectedIndex(0);					
			} else if(sTipoAccionLocal.equals("GENERAR_REPORTE_TOTALES_GROUP_GENERICO")) {//reporte.getsCodigo().equals("GENERAR_REPORTE_GROUP_GENERICO")) {
				//SE GENERA REPORTE SEGUN TIPO REPORTE SELECCIONADO
				//this.generarReporteGroupGenericoDetalleActivoFijosSeleccionados(true);
				//this.jComboBoxTiposAccionesDetalleActivoFijo.setSelectedIndex(0);					
			} else if(sTipoAccionLocal.equals("EXPORTAR_DATOS")) {//reporte.getsCodigo().equals("GENERAR_REPORTE_GROUP_GENERICO")) {
				//this.startProcessDetalleActivoFijo();
				
				this.exportarDetalleActivoFijosSeleccionados();
				if(!esParaAccionDesdeFormulario) {
					
					this.jComboBoxTiposAccionesDetalleActivoFijo.setSelectedIndex(0);					
					
				} else {
					this.jInternalFrameDetalleFormDetalleActivoFijo.jComboBoxTiposAccionesFormularioDetalleActivoFijo.setSelectedIndex(0);					
				}					
			} else if(sTipoAccionLocal.equals("IMPORTAR_DATOS")) {//reporte.getsCodigo().equals("GENERAR_REPORTE_GROUP_GENERICO")) {
				this.mostrarImportacionDetalleActivoFijos();
				//this.importarDetalleActivoFijos();
				if(!esParaAccionDesdeFormulario) {
					
					this.jComboBoxTiposAccionesDetalleActivoFijo.setSelectedIndex(0);					
					
				} else {
					this.jInternalFrameDetalleFormDetalleActivoFijo.jComboBoxTiposAccionesFormularioDetalleActivoFijo.setSelectedIndex(0);					
				}					
			} else if(sTipoAccionLocal.equals("EXPORTAR_DATOS_EXCEL")) {//reporte.getsCodigo().equals("GENERAR_REPORTE_GROUP_GENERICO")) {
				//this.startProcessDetalleActivoFijo();
				//SE EXPORTA SEGUN TIPO ARCHIVO SELECCIONADO
				//this.exportarExcelDetalleActivoFijosSeleccionados();
				//this.jComboBoxTiposAccionesDetalleActivoFijo.setSelectedIndex(0);					
			}  else if(sTipoAccionLocal.equals("RECARGAR_FK")) {//reporte.getsCodigo().equals("GENERAR_REPORTE_GROUP_GENERICO")) {								
				if(JOptionPane.showConfirmDialog(this, "ESTA SEGURO DE RECARGAR REFERENCIAS ?", "MANTENIMIENTO DE Detalle Activo Fijo", JOptionPane.OK_CANCEL_OPTION) == 0) {
				
				//this.startProcessDetalleActivoFijo();
				
					if(!esParaAccionDesdeFormulario || (esParaAccionDesdeFormulario && this.isEsNuevoDetalleActivoFijo)) {
						this.esRecargarFks=true;
						this.cargarCombosForeignKeyDetalleActivoFijo(false,false,false);
						this.esRecargarFks=false;
						
						JOptionPane.showMessageDialog(this,"PROCESO EJECUTADO CORRECTAMENTE","MANTENIMIENTO DE Detalle Activo Fijo",JOptionPane.INFORMATION_MESSAGE);
					} else {
						JOptionPane.showMessageDialog(this,"ESTE PROCESO SOLO FUNCIONA AL INGRESAR UN NUEVO ELEMENTO","MANTENIMIENTO",JOptionPane.ERROR_MESSAGE);	
					}
					
					
				}
				
				if(!esParaAccionDesdeFormulario) {
					
					this.jComboBoxTiposAccionesDetalleActivoFijo.setSelectedIndex(0);					
					
				} else {
					this.jInternalFrameDetalleFormDetalleActivoFijo.jComboBoxTiposAccionesFormularioDetalleActivoFijo.setSelectedIndex(0);					
				}	
			} 			
			else if(DetalleActivoFijoBeanSwingJInternalFrame.EsProcesoReporte(reporte.getsCodigo())){
				if(this.isPermisoReporteDetalleActivoFijo) {				
					if(this.tieneElementosSeleccionados()) {
						this.quitarFilaTotales();
						
						conSplash=false;
						
						//this.startProcessDetalleActivoFijo(conSplash);
					
						//this.actualizarParametrosGeneralDetalleActivoFijo();
						
						this.generarReporteProcesoAccionDetalleActivoFijosSeleccionados(reporte.getsCodigo());
						
						if(!esParaAccionDesdeFormulario) {
							
							this.jComboBoxTiposAccionesDetalleActivoFijo.setSelectedIndex(0);					
							
						} else {
							this.jInternalFrameDetalleFormDetalleActivoFijo.jComboBoxTiposAccionesFormularioDetalleActivoFijo.setSelectedIndex(0);					
						}
					} else {
						JOptionPane.showMessageDialog(this,"NO SE HA SELECCIONADO ALGUN ELEMENTO","SELECCIONAR",JOptionPane.ERROR_MESSAGE);
					}
				} else {
					JOptionPane.showMessageDialog(this,"NO TIENE PERMISO PARA GENERAR REPORTES","REPORTE",JOptionPane.ERROR_MESSAGE);					
				}
			} 
			else if(DetalleActivoFijoBeanSwingJInternalFrameAdditional.EsProcesoAccionNormal(reporte.getsCodigo())){
				if(this.tieneElementosSeleccionados()) {
					this.quitarFilaTotales();
					
					if(JOptionPane.showConfirmDialog(this, "ESTA SEGURO DE PROCESAR "+reporte.getsDescripcion()+" EN PROCESO Detalle Activo FijoS SELECCIONADOS?", "MANTENIMIENTO DE Detalle Activo Fijo", JOptionPane.OK_CANCEL_OPTION) == 0) {
						//this.startProcessDetalleActivoFijo();
				
						this.actualizarParametrosGeneralDetalleActivoFijo();
						
						//ARCHITECTURE
						if(Constantes.ISUSAEJBLOGICLAYER) {						
							this.detalleactivofijoReturnGeneral=detalleactivofijoLogic.procesarAccionDetalleActivoFijosWithConnection(this.parametroGeneralUsuario,this.moduloActual,this.opcionActual,this.usuarioActual,sTipoAccionLocal,this.detalleactivofijoLogic.getDetalleActivoFijos(),this.detalleactivofijoParameterGeneral);
						
						} else if(Constantes.ISUSAEJBREMOTE) {
						
						} else if(Constantes.ISUSAEJBHOME) {
						}
						//ARCHITECTURE
						
						this.procesarDetalleActivoFijoReturnGeneral();
					
					if(!esParaAccionDesdeFormulario) {
						
						this.jComboBoxTiposAccionesDetalleActivoFijo.setSelectedIndex(0);					
						
					} else {
						this.jInternalFrameDetalleFormDetalleActivoFijo.jComboBoxTiposAccionesFormularioDetalleActivoFijo.setSelectedIndex(0);					
					}
					}
				} else {
					JOptionPane.showMessageDialog(this,"NO SE HA SELECCIONADO ALGUN ELEMENTO","SELECCIONAR",JOptionPane.ERROR_MESSAGE);
				}				
			} 
			else {
				if(this.tieneElementosSeleccionados()) {
					this.quitarFilaTotales();
					
					this.actualizarParametrosGeneralDetalleActivoFijo();
					
					DetalleActivoFijoBeanSwingJInternalFrameAdditional.ProcesarAccion(reporte.getsCodigo(),reporte.getsDescripcion(),this);
					
					this.procesarDetalleActivoFijoReturnGeneral();
					
					if(!esParaAccionDesdeFormulario) {
						
						this.jComboBoxTiposAccionesDetalleActivoFijo.setSelectedIndex(0);					
						
					} else {
						this.jInternalFrameDetalleFormDetalleActivoFijo.jComboBoxTiposAccionesFormularioDetalleActivoFijo.setSelectedIndex(0);					
					}
				} else {
					JOptionPane.showMessageDialog(this,"NO SE HA SELECCIONADO ALGUN ELEMENTO","SELECCIONAR",JOptionPane.ERROR_MESSAGE);
				}
			}
		} catch(Exception e) {
			this.esRecargarFks=false;
			
			FuncionesSwing.manageException(this, e,logger,DetalleActivoFijoConstantesFunciones.CLASSNAME);
		
		}  finally {
      		//this.finishProcessDetalleActivoFijo(conSplash);
      	}
	}
	
	public void jComboBoxTiposRelacionesDetalleActivoFijoActionListener(ActionEvent evt) throws Exception {    				
		Boolean conSplash=true;
		
		try {			
			this.startProcessDetalleActivoFijo();
			
			if(this.jInternalFrameDetalleFormDetalleActivoFijo==null) { //if(!this.conCargarFormDetalle) {			
				this.inicializarFormDetalle();
			}
			
			ArrayList<DetalleActivoFijo> detalleactivofijosSeleccionados=new ArrayList<DetalleActivoFijo>();		
			DetalleActivoFijo detalleactivofijo=new DetalleActivoFijo();
			
			int rowIndex=-1;//CON ESTO SE DESHABILITA SELECCION POR INDICE
			
			this.inicializarActualizarBindingDetalleActivoFijo(false,false);
			
			Reporte reporte=new Reporte();
			
			
			reporte=(Reporte)this.jComboBoxTiposRelacionesDetalleActivoFijo.getSelectedItem();
			
			
			
			
			detalleactivofijosSeleccionados=this.getDetalleActivoFijosSeleccionados(true);
			//this.sTipoAccion;
			
			if(detalleactivofijosSeleccionados.size()==1) {
				for(DetalleActivoFijo detalleactivofijoAux:detalleactivofijosSeleccionados) {
					detalleactivofijo=detalleactivofijoAux;
				}
				
				if(this.sTipoAccion.equals("NONE")) {
				
				}
				
				else if(this.sTipoRelacion.equals("Mantenimiento Activo Fijo")) {
					jButtonMantenimientoActivoFijoActionPerformed(null,rowIndex,true,false,detalleactivofijo);
				}
				else if(this.sTipoRelacion.equals("Servicio Transporte")) {
					jButtonServicioTransporteActionPerformed(null,rowIndex,true,false,detalleactivofijo);
				}
				else if(this.sTipoRelacion.equals("Movimiento Activo Fijo")) {
					jButtonMovimientoActivoFijoActionPerformed(null,rowIndex,true,false,detalleactivofijo);
				}
				else if(this.sTipoRelacion.equals("Vehiculo")) {
					jButtonVehiculoActionPerformed(null,rowIndex,true,false,detalleactivofijo);
				}
				else if(this.sTipoRelacion.equals("Metodo Depreciacion")) {
					jButtonMetodoDepreciacionActionPerformed(null,rowIndex,true,false,detalleactivofijo);
				}
				else if(this.sTipoRelacion.equals("Responsable Activo Fijo")) {
					jButtonResponsableActivoFijoActionPerformed(null,rowIndex,true,false,detalleactivofijo);
				}
				else if(this.sTipoRelacion.equals("Depreciacion Activo Fijo")) {
					jButtonDepreciacionActivoFijoActionPerformed(null,rowIndex,true,false,detalleactivofijo);
				}
				else if(this.sTipoRelacion.equals("Gasto Depreciacion Centro Costo")) {
					jButtonGastoDepreciacionCentroCostoActionPerformed(null,rowIndex,true,false,detalleactivofijo);
				}
				else if(this.sTipoRelacion.equals("Parte Activo Fijo")) {
					jButtonParteActivoFijoActionPerformed(null,rowIndex,true,false,detalleactivofijo);
				}
			} else {
				JOptionPane.showMessageDialog(this,"SELECCIONE SOLO UN REGISTRO","RELACIONES",JOptionPane.ERROR_MESSAGE);
			}
			
		} catch(Exception e) {
			FuncionesSwing.manageException(this, e,logger,DetalleActivoFijoConstantesFunciones.CLASSNAME);
		
		}  finally {
			this.finishProcessDetalleActivoFijo();
			
      		//this.finishProcessDetalleActivoFijo(conSplash);
      	}
	}
			
	public static Boolean EsProcesoReporte(String sTipoProceso) throws Exception {
		Boolean esProcesoAccionRepoorte=false;

		if(sTipoProceso.contains("REPORTE_")) {
			 esProcesoAccionRepoorte=true;
		}

		return esProcesoAccionRepoorte;
	}
	
	public void procesarDetalleActivoFijoReturnGeneral() throws Exception {
		if(this.detalleactivofijoReturnGeneral.getConRetornoEstaProcesado()) {
			JOptionPane.showMessageDialog(this,this.detalleactivofijoReturnGeneral.getsMensajeProceso(),"PROCESO",JOptionPane.INFORMATION_MESSAGE);
		}
		
		if(this.detalleactivofijoReturnGeneral.getConMostrarMensaje()) {
			JOptionPane.showMessageDialog(this,this.detalleactivofijoReturnGeneral.getsMensajeProceso(),"PROCESO",FuncionesSwing.getColorSelectedBackground(this.detalleactivofijoReturnGeneral.getsTipoMensaje()));
		}
		
		if(this.detalleactivofijoReturnGeneral.getConRecargarInformacion()) {
			this.procesarBusqueda(this.sAccionBusqueda);
			
			this.inicializarActualizarBindingDetalleActivoFijo(false);
		}
		
		if(this.detalleactivofijoReturnGeneral.getConRetornoLista() || this.detalleactivofijoReturnGeneral.getConRetornoObjeto()) {
			if(this.detalleactivofijoReturnGeneral.getConRetornoLista()) {
				//ARCHITECTURE
				if(Constantes.ISUSAEJBLOGICLAYER) {	
					this.detalleactivofijoLogic.setDetalleActivoFijos(this.detalleactivofijoReturnGeneral.getDetalleActivoFijos());
				} else if(Constantes.ISUSAEJBREMOTE) {
				} else if(Constantes.ISUSAEJBHOME) {
				}
				//ARCHITECTURE
			}
			
			if(this.detalleactivofijoReturnGeneral.getConRetornoObjeto()) {
				//ARCHITECTURE
				if(Constantes.ISUSAEJBLOGICLAYER) {	
					this.detalleactivofijoLogic.setDetalleActivoFijo(this.detalleactivofijoReturnGeneral.getDetalleActivoFijo());
				} else if(Constantes.ISUSAEJBREMOTE) {
				} else if(Constantes.ISUSAEJBHOME) {
				}
				//ARCHITECTURE
			}
			
			this.inicializarActualizarBindingDetalleActivoFijo(false);
		}
	}
	
	public void actualizarParametrosGeneralDetalleActivoFijo() throws Exception {
		
		
	}
	
	public ArrayList<DetalleActivoFijo> getDetalleActivoFijosSeleccionados(Boolean conSeleccionarTodosAutomatico) throws Exception {
		ArrayList<DetalleActivoFijo> detalleactivofijosSeleccionados=new ArrayList<DetalleActivoFijo>();
		Boolean existe=false;
		
		if(!this.esParaAccionDesdeFormularioDetalleActivoFijo) {
			if(Constantes.ISUSAEJBLOGICLAYER) {	
				
				for(DetalleActivoFijo detalleactivofijoAux:detalleactivofijoLogic.getDetalleActivoFijos()) {
					if(detalleactivofijoAux.getIsSelected()) {
						detalleactivofijosSeleccionados.add(detalleactivofijoAux);				
					}
				}
				
			} else if(Constantes.ISUSAEJBREMOTE||Constantes.ISUSAEJBHOME) {
				for(DetalleActivoFijo detalleactivofijoAux:this.detalleactivofijos) {
					if(detalleactivofijoAux.getIsSelected()) {
						detalleactivofijosSeleccionados.add(detalleactivofijoAux);				
					}
				}
			}
			
			if(detalleactivofijosSeleccionados.size()>0) {
				existe=true;
			}
			
			//SI NO ESTA NINGUNO SELECCIONADO SE SELECCIONA TODOS
			if(!existe) {
				if(conSeleccionarTodosAutomatico) {
					if(Constantes.ISUSAEJBLOGICLAYER) {				
						detalleactivofijosSeleccionados.addAll(this.detalleactivofijoLogic.getDetalleActivoFijos());
					} else if(Constantes.ISUSAEJBREMOTE||Constantes.ISUSAEJBHOME) {
						detalleactivofijosSeleccionados.addAll(this.detalleactivofijos);				
					}
				}
			}
		} else {
			detalleactivofijosSeleccionados.add(this.detalleactivofijo);
		}
		
		return detalleactivofijosSeleccionados;
	}
	
	public void actualizarVariablesTipoReporte(Boolean esReporteNormal,Boolean esReporteDinamico,Boolean esReporteAccionProceso,String sPath) {
		if(esReporteNormal) {
			this.sTipoReporteExtra="";
			this.esReporteDinamico=false;
			this.sPathReporteDinamico="";
			this.esReporteAccionProceso=false;
			
		} else if(esReporteAccionProceso) {
			this.sTipoReporteExtra="";
			this.esReporteDinamico=false;
			this.sPathReporteDinamico="";
			this.esReporteAccionProceso=true;
			
		} else if(esReporteDinamico) {
			this.sTipoReporteExtra="";
			this.esReporteDinamico=true;
			this.esReporteAccionProceso=false;
			this.sPathReporteDinamico=sPath.replace(".jrxml",".jasper");			
		}
	}
	
	public void generarReporteDetalleActivoFijosSeleccionados() throws Exception {
		Boolean existe=false;
		
		if(this.sTipoReporte.equals("NORMAL") || this.sTipoReporte.equals("FORMULARIO")) {
			existe=true;								
			this.generarReporteNormalDetalleActivoFijosSeleccionados();
			
		} else if(this.sTipoReporte.equals("DINAMICO")) {
			existe=true;
			this.mostrarReporteDinamicoDetalleActivoFijosSeleccionados();
			
		} else if(this.sTipoReporte.equals("GRUPO_GENERICO")) {
			existe=true;
			this.generarReporteGroupGenericoDetalleActivoFijosSeleccionados(false);
			
		} else if(this.sTipoReporte.equals("TOTALES_GRUPO_GENERICO")) {
			existe=true;
			this.generarReporteGroupGenericoDetalleActivoFijosSeleccionados(true);
		}
		else if(this.sTipoReporte.equals("RELACIONES")) {
			//SI SE GENERA REPORTE RELACIONES
			existe=true;
			this.generarReporteRelacionesDetalleActivoFijosSeleccionados();
		}					
		
		if(!existe) {
			JOptionPane.showMessageDialog(this,"SELECCIONE UN TIPO DE REPORTE VALIDO","REPORTE DE Detalle Activo Fijo",JOptionPane.ERROR_MESSAGE);
		}
	}
	
	public void generarReporteRelacionesDetalleActivoFijosSeleccionados() throws Exception {
		ArrayList<DetalleActivoFijo> detalleactivofijosSeleccionados=new ArrayList<DetalleActivoFijo>();		
		
		detalleactivofijosSeleccionados=this.getDetalleActivoFijosSeleccionados(true);
		
		this.actualizarVariablesTipoReporte(true,false,false,"");
					
		//this.sTipoReporteExtra="MasterRelaciones";
		
		/*
		this.sTipoReporteExtra="";
		this.esReporteDinamico=false;
		this.sPathReporteDinamico="";
		*/
		
		
		this.generarReporteDetalleActivoFijos("Todos",detalleactivofijosSeleccionados);
		
	}	
	
	public void generarReporteNormalDetalleActivoFijosSeleccionados() throws Exception {
		ArrayList<DetalleActivoFijo> detalleactivofijosSeleccionados=new ArrayList<DetalleActivoFijo>();		
		
		detalleactivofijosSeleccionados=this.getDetalleActivoFijosSeleccionados(true);
		
		this.actualizarVariablesTipoReporte(true,false,false,"");
								
		if(this.sTipoReporte.equals("FORMULARIO")) {
			this.sTipoReporteExtra="Vertical";					
		}
		
		/*
		this.sTipoReporteExtra="";
		this.esReporteDinamico=false;
		this.sPathReporteDinamico="";
		*/
		
		this.generarReporteDetalleActivoFijos("Todos",detalleactivofijosSeleccionados);
	}		
	
	public void generarReporteProcesoAccionDetalleActivoFijosSeleccionados(String sProcesoReporte) throws Exception {
		ArrayList<DetalleActivoFijo> detalleactivofijosSeleccionados=new ArrayList<DetalleActivoFijo>();
		
		detalleactivofijosSeleccionados=this.getDetalleActivoFijosSeleccionados(true);
		
		this.actualizarVariablesTipoReporte(false,false,true,"");
		
		/*
		this.esReporteDinamico=false;
		this.sPathReporteDinamico="";
		*/
		
		this.sTipoReporteExtra=sProcesoReporte.toLowerCase();
		
		this.esReporteAccionProceso=true;
		this.generarReporteDetalleActivoFijos("Todos",detalleactivofijosSeleccionados);
		this.esReporteAccionProceso=false;
	}
	
	
	public void mostrarReporteDinamicoDetalleActivoFijosSeleccionados() throws Exception {
		ArrayList<DetalleActivoFijo> detalleactivofijosSeleccionados=new ArrayList<DetalleActivoFijo>();		
		
		
		this.abrirInicializarFrameReporteDinamicoDetalleActivoFijo();
		
		
		detalleactivofijosSeleccionados=this.getDetalleActivoFijosSeleccionados(true);
		
		this.sTipoReporteExtra="";
		//this.actualizarVariablesTipoReporte(true,false,false,"");
		
		
		this.abrirFrameReporteDinamicoDetalleActivoFijo();
		
		
		//this.generarReporteDetalleActivoFijos("Todos",detalleactivofijosSeleccionados ,detalleactivofijoImplementable,detalleactivofijoImplementableHome);
	}
	
	public void mostrarImportacionDetalleActivoFijos() throws Exception {
		//this.sTipoReporteExtra="";
		//this.actualizarVariablesTipoReporte(true,false,false,"");
		
		
		this.abrirInicializarFrameImportacionDetalleActivoFijo();
		
		this.abrirFrameImportacionDetalleActivoFijo();		
		
			
		//this.generarReporteDetalleActivoFijos("Todos",detalleactivofijosSeleccionados ,detalleactivofijoImplementable,detalleactivofijoImplementableHome);
	}
	
	public void importarDetalleActivoFijos() throws Exception {		
	
	}
	
	public void exportarDetalleActivoFijosSeleccionados() throws Exception {
		Boolean existe=false;
		
		if(this.sTipoArchivoReporte.equals("EXCEL")) {
			existe=true;
			this.exportarExcelDetalleActivoFijosSeleccionados();
			
		} else if(this.sTipoArchivoReporte.equals("TEXTO")) {
			existe=true;
			this.exportarTextoDetalleActivoFijosSeleccionados();
		
		} else if(this.sTipoArchivoReporte.equals("XML")) {
			existe=true;
			this.exportarXmlDetalleActivoFijosSeleccionados();
		} 
		
		if(!existe) {
			JOptionPane.showMessageDialog(this,"SELECCIONE UN TIPO DE ARCHIVO VALIDO","EXPORTACION DE Detalle Activo Fijo",JOptionPane.ERROR_MESSAGE);
		}
	}
	
	public void exportarTextoDetalleActivoFijosSeleccionados() throws Exception {
		ArrayList<DetalleActivoFijo> detalleactivofijosSeleccionados=new ArrayList<DetalleActivoFijo>();		
		
		detalleactivofijosSeleccionados=this.getDetalleActivoFijosSeleccionados(true);
		
		String sTipo=Funciones2.getTipoExportar(this.parametroGeneralUsuario);
		Boolean conCabecera=this.parametroGeneralUsuario.getcon_exportar_cabecera();
		String sDelimiter=Funciones2.getTipoDelimiter(this.parametroGeneralUsuario);
		String sPath=this.parametroGeneralUsuario.getpath_exportar()+"detalleactivofijo."+"txt";//Funciones2.getTipoExtensionArchivoExportar(this.parametroGeneralUsuario);
		
		String sFilaCabecera="";
		String sFilaDatos="";
		
		BufferedWriter bufferedWriter = null;
		FileWriter fileWriter=null;
		
		fileWriter=new FileWriter(sPath);
		
		bufferedWriter = new BufferedWriter(fileWriter);
		
		try {
			if(conCabecera) {
				sFilaCabecera=this.getFilaCabeceraExportarDetalleActivoFijo(sDelimiter);
				
				bufferedWriter.write(sFilaCabecera);
			}				
			
			for(DetalleActivoFijo detalleactivofijoAux:detalleactivofijosSeleccionados) {
				sFilaDatos=this.getFilaDatosExportarDetalleActivoFijo(detalleactivofijoAux,sDelimiter);
				
				bufferedWriter.write(sFilaDatos);
				
				//detalleactivofijoAux.setsDetalleGeneralEntityReporte(detalleactivofijoAux.toString());			
			}
			
			bufferedWriter.close();
			
			Constantes2.S_PATH_ULTIMO_ARCHIVO=sPath;
			
			if(this.parametroGeneralUsuario.getcon_mensaje_confirmacion() && !this.detalleactivofijoSessionBean.getEsGuardarRelacionado()) {//Constantes.ISMOSTRARMENSAJESMANTENIMIENTO && 
				JOptionPane.showMessageDialog(this,"EXPORTADO CORRECTAMENTE:"+sPath,"MANTENIMIENTO DE Detalle Activo Fijo",JOptionPane.INFORMATION_MESSAGE);
			}
		} catch (Exception e) {
			throw e;
			
		} finally {
       		if (bufferedWriter != null) {
				bufferedWriter.close();
			}
		}
	}
	
	public String getFilaCabeceraExportarDetalleActivoFijo(String sDelimiter) {
		String sFilaCabecera="";
		
		
		sFilaCabecera+=DetalleActivoFijoConstantesFunciones.LABEL_ID;

		if(parametroGeneralUsuario.getcon_exportar_campo_version()){
			sFilaCabecera+=sDelimiter;
		sFilaCabecera+=DetalleActivoFijoConstantesFunciones.LABEL_VERSIONROW;
		}

		sFilaCabecera+=sDelimiter;
		sFilaCabecera+=DetalleActivoFijoConstantesFunciones.LABEL_IDEMPRESA;
		sFilaCabecera+=sDelimiter;
		sFilaCabecera+=DetalleActivoFijoConstantesFunciones.LABEL_IDSUCURSAL;
		sFilaCabecera+=sDelimiter;
		sFilaCabecera+=DetalleActivoFijoConstantesFunciones.LABEL_IDDETALLEGRUPOACTIVOFIJO;
		sFilaCabecera+=sDelimiter;
		sFilaCabecera+=DetalleActivoFijoConstantesFunciones.LABEL_IDSUBGRUPOACTIVOFIJO;
		sFilaCabecera+=sDelimiter;
		sFilaCabecera+=DetalleActivoFijoConstantesFunciones.LABEL_IDTIPORAMOACTIVOFIJO;
		sFilaCabecera+=sDelimiter;
		sFilaCabecera+=DetalleActivoFijoConstantesFunciones.LABEL_IDTIPOACTIVOFIJOEMPRESA;
		sFilaCabecera+=sDelimiter;
		sFilaCabecera+=DetalleActivoFijoConstantesFunciones.LABEL_IDTIPODEPRECIACIONEMPRESA;
		sFilaCabecera+=sDelimiter;
		sFilaCabecera+=DetalleActivoFijoConstantesFunciones.LABEL_IDESTADOACTIVOFIJO;
		sFilaCabecera+=sDelimiter;
		sFilaCabecera+=DetalleActivoFijoConstantesFunciones.LABEL_IDCLIENTE;
		sFilaCabecera+=sDelimiter;
		sFilaCabecera+=DetalleActivoFijoConstantesFunciones.LABEL_IDPARTIDAPRESU;
		sFilaCabecera+=sDelimiter;
		sFilaCabecera+=DetalleActivoFijoConstantesFunciones.LABEL_CODIGO;
		sFilaCabecera+=sDelimiter;
		sFilaCabecera+=DetalleActivoFijoConstantesFunciones.LABEL_NOMBRE;
		sFilaCabecera+=sDelimiter;
		sFilaCabecera+=DetalleActivoFijoConstantesFunciones.LABEL_SERIE;
		sFilaCabecera+=sDelimiter;
		sFilaCabecera+=DetalleActivoFijoConstantesFunciones.LABEL_FECHACOMPRA;
		sFilaCabecera+=sDelimiter;
		sFilaCabecera+=DetalleActivoFijoConstantesFunciones.LABEL_FECHAMANTENIMIENTO;
		sFilaCabecera+=sDelimiter;
		sFilaCabecera+=DetalleActivoFijoConstantesFunciones.LABEL_FECHACORRECCION;
		sFilaCabecera+=sDelimiter;
		sFilaCabecera+=DetalleActivoFijoConstantesFunciones.LABEL_FECHADEPRECIACION;
		sFilaCabecera+=sDelimiter;
		sFilaCabecera+=DetalleActivoFijoConstantesFunciones.LABEL_CLAVE;
		sFilaCabecera+=sDelimiter;
		sFilaCabecera+=DetalleActivoFijoConstantesFunciones.LABEL_MARCA;
		sFilaCabecera+=sDelimiter;
		sFilaCabecera+=DetalleActivoFijoConstantesFunciones.LABEL_MODELO;
		sFilaCabecera+=sDelimiter;
		sFilaCabecera+=DetalleActivoFijoConstantesFunciones.LABEL_COLOR;
		sFilaCabecera+=sDelimiter;
		sFilaCabecera+=DetalleActivoFijoConstantesFunciones.LABEL_FECHA;
		sFilaCabecera+=sDelimiter;
		sFilaCabecera+=DetalleActivoFijoConstantesFunciones.LABEL_VALORUTIL;
		sFilaCabecera+=sDelimiter;
		sFilaCabecera+=DetalleActivoFijoConstantesFunciones.LABEL_COSTODECOMPRA;
		sFilaCabecera+=sDelimiter;
		sFilaCabecera+=DetalleActivoFijoConstantesFunciones.LABEL_VIDAUTIL;
		sFilaCabecera+=sDelimiter;
		sFilaCabecera+=DetalleActivoFijoConstantesFunciones.LABEL_VALORRESIDUAL;
		sFilaCabecera+=sDelimiter;
		sFilaCabecera+=DetalleActivoFijoConstantesFunciones.LABEL_CANTIDAD;
		sFilaCabecera+=sDelimiter;
		sFilaCabecera+=DetalleActivoFijoConstantesFunciones.LABEL_NOMBREPROPIETARIO;
		sFilaCabecera+=sDelimiter;
		sFilaCabecera+=DetalleActivoFijoConstantesFunciones.LABEL_RESPONSABLE;
		sFilaCabecera+=sDelimiter;
		sFilaCabecera+=DetalleActivoFijoConstantesFunciones.LABEL_PATHFOTO;
		sFilaCabecera+=sDelimiter;
		sFilaCabecera+=DetalleActivoFijoConstantesFunciones.LABEL_NUMEROCOMPROBANTE;
		sFilaCabecera+=sDelimiter;
		sFilaCabecera+=DetalleActivoFijoConstantesFunciones.LABEL_REFERENCIA;
		sFilaCabecera+=sDelimiter;
		sFilaCabecera+=DetalleActivoFijoConstantesFunciones.LABEL_VALORCOTIZACION;
		sFilaCabecera+=sDelimiter;
		sFilaCabecera+=DetalleActivoFijoConstantesFunciones.LABEL_CONPARTES;
		sFilaCabecera+=sDelimiter;
		sFilaCabecera+=DetalleActivoFijoConstantesFunciones.LABEL_CONGARANTIA;
		sFilaCabecera+=sDelimiter;
		sFilaCabecera+=DetalleActivoFijoConstantesFunciones.LABEL_CONEXISTENCIA;
		sFilaCabecera+=sDelimiter;
		sFilaCabecera+=DetalleActivoFijoConstantesFunciones.LABEL_FECHABAJA;
		sFilaCabecera+=sDelimiter;
		sFilaCabecera+=DetalleActivoFijoConstantesFunciones.LABEL_PATHFOTO2;
		
		return sFilaCabecera;
	}
	
	public String getFilaDatosExportarDetalleActivoFijo(DetalleActivoFijo detalleactivofijo,String sDelimiter) {
		String sFilaDatos="";
		
		sFilaDatos+="\r\n";
		
		
		sFilaDatos+=detalleactivofijo.getId().toString();

		if(parametroGeneralUsuario.getcon_exportar_campo_version()){
			sFilaDatos+=sDelimiter;
		sFilaDatos+=detalleactivofijo.getVersionRow().toString();
		}

		sFilaDatos+=sDelimiter;
		sFilaDatos+=detalleactivofijo.getempresa_descripcion();
		sFilaDatos+=sDelimiter;
		sFilaDatos+=detalleactivofijo.getsucursal_descripcion();
		sFilaDatos+=sDelimiter;
		sFilaDatos+=detalleactivofijo.getdetallegrupoactivofijo_descripcion();
		sFilaDatos+=sDelimiter;
		sFilaDatos+=detalleactivofijo.getsubgrupoactivofijo_descripcion();
		sFilaDatos+=sDelimiter;
		sFilaDatos+=detalleactivofijo.gettiporamoactivofijo_descripcion();
		sFilaDatos+=sDelimiter;
		sFilaDatos+=detalleactivofijo.gettipoactivofijoempresa_descripcion();
		sFilaDatos+=sDelimiter;
		sFilaDatos+=detalleactivofijo.gettipodepreciacionempresa_descripcion();
		sFilaDatos+=sDelimiter;
		sFilaDatos+=detalleactivofijo.getestadoactivofijo_descripcion();
		sFilaDatos+=sDelimiter;
		sFilaDatos+=detalleactivofijo.getcliente_descripcion();
		sFilaDatos+=sDelimiter;
		sFilaDatos+=detalleactivofijo.getpartidapresu_descripcion();
		sFilaDatos+=sDelimiter;
		sFilaDatos+=detalleactivofijo.getcodigo();
		sFilaDatos+=sDelimiter;
		sFilaDatos+=detalleactivofijo.getnombre();
		sFilaDatos+=sDelimiter;
		sFilaDatos+=detalleactivofijo.getserie();
		sFilaDatos+=sDelimiter;
		sFilaDatos+=detalleactivofijo.getfecha_compra().toString();
		sFilaDatos+=sDelimiter;
		sFilaDatos+=detalleactivofijo.getfecha_mantenimiento().toString();
		sFilaDatos+=sDelimiter;
		sFilaDatos+=detalleactivofijo.getfecha_correccion().toString();
		sFilaDatos+=sDelimiter;
		sFilaDatos+=detalleactivofijo.getfecha_depreciacion().toString();
		sFilaDatos+=sDelimiter;
		sFilaDatos+=detalleactivofijo.getclave();
		sFilaDatos+=sDelimiter;
		sFilaDatos+=detalleactivofijo.getmarca();
		sFilaDatos+=sDelimiter;
		sFilaDatos+=detalleactivofijo.getmodelo();
		sFilaDatos+=sDelimiter;
		sFilaDatos+=detalleactivofijo.getcolor();
		sFilaDatos+=sDelimiter;
		sFilaDatos+=detalleactivofijo.getfecha().toString();
		sFilaDatos+=sDelimiter;
		sFilaDatos+=detalleactivofijo.getvalor_util().toString();
		sFilaDatos+=sDelimiter;
		sFilaDatos+=detalleactivofijo.getcosto_de_compra().toString();
		sFilaDatos+=sDelimiter;
		sFilaDatos+=detalleactivofijo.getvida_util().toString();
		sFilaDatos+=sDelimiter;
		sFilaDatos+=detalleactivofijo.getvalor_residual().toString();
		sFilaDatos+=sDelimiter;
		sFilaDatos+=detalleactivofijo.getcantidad().toString();
		sFilaDatos+=sDelimiter;
		sFilaDatos+=detalleactivofijo.getnombre_propietario();
		sFilaDatos+=sDelimiter;
		sFilaDatos+=detalleactivofijo.getresponsable();
		sFilaDatos+=sDelimiter;
		sFilaDatos+=detalleactivofijo.getpath_foto();
		sFilaDatos+=sDelimiter;
		sFilaDatos+=detalleactivofijo.getnumero_comprobante();
		sFilaDatos+=sDelimiter;
		sFilaDatos+=detalleactivofijo.getreferencia();
		sFilaDatos+=sDelimiter;
		sFilaDatos+=detalleactivofijo.getvalor_cotizacion().toString();
		sFilaDatos+=sDelimiter;
		sFilaDatos+=detalleactivofijo.getcon_partes().toString();
		sFilaDatos+=sDelimiter;
		sFilaDatos+=detalleactivofijo.getcon_garantia().toString();
		sFilaDatos+=sDelimiter;
		sFilaDatos+=detalleactivofijo.getcon_existencia().toString();
		sFilaDatos+=sDelimiter;
		sFilaDatos+=detalleactivofijo.getfecha_baja().toString();
		sFilaDatos+=sDelimiter;
		sFilaDatos+=detalleactivofijo.getpath_foto2();
		
		return sFilaDatos;
	}
	
	//@SuppressWarnings("deprecation")
	public void exportarExcelDetalleActivoFijosSeleccionados() throws Exception {
		ArrayList<DetalleActivoFijo> detalleactivofijosSeleccionados=new ArrayList<DetalleActivoFijo>();		
		
		detalleactivofijosSeleccionados=this.getDetalleActivoFijosSeleccionados(true);
		
		String sTipo=Funciones2.getTipoExportar(this.parametroGeneralUsuario);
		Boolean conCabecera=this.parametroGeneralUsuario.getcon_exportar_cabecera();
		String sDelimiter=Funciones2.getTipoDelimiter(this.parametroGeneralUsuario);
		String sPath=this.parametroGeneralUsuario.getpath_exportar()+"detalleactivofijo.xls";
		
		String sFilaCabecera="";
		String sFilaDatos="";
		
		FileOutputStream fileOutputStream=null;
		
		try {
			HSSFWorkbook workbook = new HSSFWorkbook();
			HSSFSheet sheet = workbook.createSheet("DetalleActivoFijos");
						
		    			
			Integer iRow=0;
			Integer iCell=0;
			
			HSSFRow row = sheet.createRow(iRow);
			HSSFCell cell = row.createCell(iCell);
			//cell.setCellValue("Blahblah");

			if(conCabecera) {
				this.getFilaCabeceraExportarExcelDetalleActivoFijo(row);				
				iRow++;
			}				
			
			for(DetalleActivoFijo detalleactivofijoAux:detalleactivofijosSeleccionados) {
				row = sheet.createRow(iRow);
				
				this.getFilaDatosExportarExcelDetalleActivoFijo(detalleactivofijoAux,row);
				
				iRow++;
			}
			
			
			fileOutputStream = new FileOutputStream(new File(sPath));
		    
			workbook.write(fileOutputStream);
			
			//fileOutputStream.close();
			
			Constantes2.S_PATH_ULTIMO_ARCHIVO=sPath;
			
			if(this.parametroGeneralUsuario.getcon_mensaje_confirmacion() && !this.detalleactivofijoSessionBean.getEsGuardarRelacionado()) {//Constantes.ISMOSTRARMENSAJESMANTENIMIENTO && 
				JOptionPane.showMessageDialog(this,"EXPORTADO CORRECTAMENTE:"+sPath,"MANTENIMIENTO DE Detalle Activo Fijo",JOptionPane.INFORMATION_MESSAGE);
			}
		} catch (Exception e) {
			throw e;
			
		} finally {			
       		if (fileOutputStream != null) {
				fileOutputStream.close();
			}			
		}
	}		
	
	public void exportarXmlDetalleActivoFijosSeleccionados() throws Exception {
		ArrayList<DetalleActivoFijo> detalleactivofijosSeleccionados=new ArrayList<DetalleActivoFijo>();		
		
		detalleactivofijosSeleccionados=this.getDetalleActivoFijosSeleccionados(true);
		
		//String sTipo=Funciones2.getTipoExportar(this.parametroGeneralUsuario);
		//Boolean conCabecera=this.parametroGeneralUsuario.getcon_exportar_cabecera();
		//String sDelimiter=Funciones2.getTipoDelimiter(this.parametroGeneralUsuario);
		String sPath=this.parametroGeneralUsuario.getpath_exportar()+"detalleactivofijo.xml";
		
		String sFilaCabecera="";
		String sFilaDatos="";
		
		DocumentBuilderFactory documentBuilderFactory=null;
		DocumentBuilder documentBuilder =null;
		
		try {
			documentBuilderFactory = DocumentBuilderFactory.newInstance();
			documentBuilder = documentBuilderFactory.newDocumentBuilder();
	
			Document document = documentBuilder.newDocument();
			Element elementRoot = document.createElement("detalleactivofijos");
			
			document.appendChild(elementRoot);
		    			
												
			Element element = null;//document.createElement("detalleactivofijo");
			//elementRoot.appendChild(element);
		
			for(DetalleActivoFijo detalleactivofijoAux:detalleactivofijosSeleccionados) {
				element = document.createElement("detalleactivofijo");
				elementRoot.appendChild(element);
			
				this.setFilaDatosExportarXmlDetalleActivoFijo(detalleactivofijoAux,document,element);
			}
			
			TransformerFactory transformerFactory = TransformerFactory.newInstance();
			Transformer transformer = transformerFactory.newTransformer();
			DOMSource domSource = new DOMSource(document);
			
			StreamResult streamResult = new StreamResult(new File(sPath));
	
			transformer.transform(domSource, streamResult);
						
			Constantes2.S_PATH_ULTIMO_ARCHIVO=sPath;
			
			if(this.parametroGeneralUsuario.getcon_mensaje_confirmacion() && !this.detalleactivofijoSessionBean.getEsGuardarRelacionado()) {//Constantes.ISMOSTRARMENSAJESMANTENIMIENTO && 
				JOptionPane.showMessageDialog(this,"EXPORTADO CORRECTAMENTE:"+sPath,"MANTENIMIENTO DE Detalle Activo Fijo",JOptionPane.INFORMATION_MESSAGE);
			}
		} catch (Exception e) {
			throw e;
			
		} finally {			       				
		}
	}	
	
	//@SuppressWarnings("deprecation")
	public void getFilaCabeceraExportarExcelDetalleActivoFijo(HSSFRow row) {
		Integer iColumn=0;
		
		
		HSSFCell cell =null;
		cell = row.createCell(iColumn++);cell.setCellValue(DetalleActivoFijoConstantesFunciones.LABEL_ID);

		if(parametroGeneralUsuario.getcon_exportar_campo_version()){
		cell = row.createCell(iColumn++);cell.setCellValue(DetalleActivoFijoConstantesFunciones.LABEL_VERSIONROW);
		}

		cell = row.createCell(iColumn++);cell.setCellValue(DetalleActivoFijoConstantesFunciones.LABEL_IDEMPRESA);
		cell = row.createCell(iColumn++);cell.setCellValue(DetalleActivoFijoConstantesFunciones.LABEL_IDSUCURSAL);
		cell = row.createCell(iColumn++);cell.setCellValue(DetalleActivoFijoConstantesFunciones.LABEL_IDDETALLEGRUPOACTIVOFIJO);
		cell = row.createCell(iColumn++);cell.setCellValue(DetalleActivoFijoConstantesFunciones.LABEL_IDSUBGRUPOACTIVOFIJO);
		cell = row.createCell(iColumn++);cell.setCellValue(DetalleActivoFijoConstantesFunciones.LABEL_IDTIPORAMOACTIVOFIJO);
		cell = row.createCell(iColumn++);cell.setCellValue(DetalleActivoFijoConstantesFunciones.LABEL_IDTIPOACTIVOFIJOEMPRESA);
		cell = row.createCell(iColumn++);cell.setCellValue(DetalleActivoFijoConstantesFunciones.LABEL_IDTIPODEPRECIACIONEMPRESA);
		cell = row.createCell(iColumn++);cell.setCellValue(DetalleActivoFijoConstantesFunciones.LABEL_IDESTADOACTIVOFIJO);
		cell = row.createCell(iColumn++);cell.setCellValue(DetalleActivoFijoConstantesFunciones.LABEL_IDCLIENTE);
		cell = row.createCell(iColumn++);cell.setCellValue(DetalleActivoFijoConstantesFunciones.LABEL_IDPARTIDAPRESU);
		cell = row.createCell(iColumn++);cell.setCellValue(DetalleActivoFijoConstantesFunciones.LABEL_CODIGO);
		cell = row.createCell(iColumn++);cell.setCellValue(DetalleActivoFijoConstantesFunciones.LABEL_NOMBRE);
		cell = row.createCell(iColumn++);cell.setCellValue(DetalleActivoFijoConstantesFunciones.LABEL_SERIE);
		cell = row.createCell(iColumn++);cell.setCellValue(DetalleActivoFijoConstantesFunciones.LABEL_FECHACOMPRA);
		cell = row.createCell(iColumn++);cell.setCellValue(DetalleActivoFijoConstantesFunciones.LABEL_FECHAMANTENIMIENTO);
		cell = row.createCell(iColumn++);cell.setCellValue(DetalleActivoFijoConstantesFunciones.LABEL_FECHACORRECCION);
		cell = row.createCell(iColumn++);cell.setCellValue(DetalleActivoFijoConstantesFunciones.LABEL_FECHADEPRECIACION);
		cell = row.createCell(iColumn++);cell.setCellValue(DetalleActivoFijoConstantesFunciones.LABEL_CLAVE);
		cell = row.createCell(iColumn++);cell.setCellValue(DetalleActivoFijoConstantesFunciones.LABEL_MARCA);
		cell = row.createCell(iColumn++);cell.setCellValue(DetalleActivoFijoConstantesFunciones.LABEL_MODELO);
		cell = row.createCell(iColumn++);cell.setCellValue(DetalleActivoFijoConstantesFunciones.LABEL_COLOR);
		cell = row.createCell(iColumn++);cell.setCellValue(DetalleActivoFijoConstantesFunciones.LABEL_FECHA);
		cell = row.createCell(iColumn++);cell.setCellValue(DetalleActivoFijoConstantesFunciones.LABEL_VALORUTIL);
		cell = row.createCell(iColumn++);cell.setCellValue(DetalleActivoFijoConstantesFunciones.LABEL_COSTODECOMPRA);
		cell = row.createCell(iColumn++);cell.setCellValue(DetalleActivoFijoConstantesFunciones.LABEL_VIDAUTIL);
		cell = row.createCell(iColumn++);cell.setCellValue(DetalleActivoFijoConstantesFunciones.LABEL_VALORRESIDUAL);
		cell = row.createCell(iColumn++);cell.setCellValue(DetalleActivoFijoConstantesFunciones.LABEL_CANTIDAD);
		cell = row.createCell(iColumn++);cell.setCellValue(DetalleActivoFijoConstantesFunciones.LABEL_NOMBREPROPIETARIO);
		cell = row.createCell(iColumn++);cell.setCellValue(DetalleActivoFijoConstantesFunciones.LABEL_RESPONSABLE);
		cell = row.createCell(iColumn++);cell.setCellValue(DetalleActivoFijoConstantesFunciones.LABEL_PATHFOTO);
		cell = row.createCell(iColumn++);cell.setCellValue(DetalleActivoFijoConstantesFunciones.LABEL_NUMEROCOMPROBANTE);
		cell = row.createCell(iColumn++);cell.setCellValue(DetalleActivoFijoConstantesFunciones.LABEL_REFERENCIA);
		cell = row.createCell(iColumn++);cell.setCellValue(DetalleActivoFijoConstantesFunciones.LABEL_VALORCOTIZACION);
		cell = row.createCell(iColumn++);cell.setCellValue(DetalleActivoFijoConstantesFunciones.LABEL_CONPARTES);
		cell = row.createCell(iColumn++);cell.setCellValue(DetalleActivoFijoConstantesFunciones.LABEL_CONGARANTIA);
		cell = row.createCell(iColumn++);cell.setCellValue(DetalleActivoFijoConstantesFunciones.LABEL_CONEXISTENCIA);
		cell = row.createCell(iColumn++);cell.setCellValue(DetalleActivoFijoConstantesFunciones.LABEL_FECHABAJA);
		cell = row.createCell(iColumn++);cell.setCellValue(DetalleActivoFijoConstantesFunciones.LABEL_PATHFOTO2);
	}
	
	//@SuppressWarnings("deprecation")
	public void getFilaDatosExportarExcelDetalleActivoFijo(DetalleActivoFijo detalleactivofijo,HSSFRow row) {
		Integer iColumn=0;
		
		
		HSSFCell cell =null;
		cell = row.createCell(iColumn++);cell.setCellValue(detalleactivofijo.getId());
		cell = row.createCell(iColumn++);cell.setCellValue(detalleactivofijo.getempresa_descripcion());
		cell = row.createCell(iColumn++);cell.setCellValue(detalleactivofijo.getsucursal_descripcion());
		cell = row.createCell(iColumn++);cell.setCellValue(detalleactivofijo.getdetallegrupoactivofijo_descripcion());
		cell = row.createCell(iColumn++);cell.setCellValue(detalleactivofijo.getsubgrupoactivofijo_descripcion());
		cell = row.createCell(iColumn++);cell.setCellValue(detalleactivofijo.gettiporamoactivofijo_descripcion());
		cell = row.createCell(iColumn++);cell.setCellValue(detalleactivofijo.gettipoactivofijoempresa_descripcion());
		cell = row.createCell(iColumn++);cell.setCellValue(detalleactivofijo.gettipodepreciacionempresa_descripcion());
		cell = row.createCell(iColumn++);cell.setCellValue(detalleactivofijo.getestadoactivofijo_descripcion());
		cell = row.createCell(iColumn++);cell.setCellValue(detalleactivofijo.getcliente_descripcion());
		cell = row.createCell(iColumn++);cell.setCellValue(detalleactivofijo.getpartidapresu_descripcion());
		cell = row.createCell(iColumn++);cell.setCellValue(detalleactivofijo.getcodigo());
		cell = row.createCell(iColumn++);cell.setCellValue(detalleactivofijo.getnombre());
		cell = row.createCell(iColumn++);cell.setCellValue(detalleactivofijo.getserie());
		cell = row.createCell(iColumn++);cell.setCellValue(detalleactivofijo.getfecha_compra());
		cell = row.createCell(iColumn++);cell.setCellValue(detalleactivofijo.getfecha_mantenimiento());
		cell = row.createCell(iColumn++);cell.setCellValue(detalleactivofijo.getfecha_correccion());
		cell = row.createCell(iColumn++);cell.setCellValue(detalleactivofijo.getfecha_depreciacion());
		cell = row.createCell(iColumn++);cell.setCellValue(detalleactivofijo.getclave());
		cell = row.createCell(iColumn++);cell.setCellValue(detalleactivofijo.getmarca());
		cell = row.createCell(iColumn++);cell.setCellValue(detalleactivofijo.getmodelo());
		cell = row.createCell(iColumn++);cell.setCellValue(detalleactivofijo.getcolor());
		cell = row.createCell(iColumn++);cell.setCellValue(detalleactivofijo.getfecha());
		cell = row.createCell(iColumn++);cell.setCellValue(detalleactivofijo.getvalor_util());
		cell = row.createCell(iColumn++);cell.setCellValue(detalleactivofijo.getcosto_de_compra());
		cell = row.createCell(iColumn++);cell.setCellValue(detalleactivofijo.getvida_util());
		cell = row.createCell(iColumn++);cell.setCellValue(detalleactivofijo.getvalor_residual());
		cell = row.createCell(iColumn++);cell.setCellValue(detalleactivofijo.getcantidad());
		cell = row.createCell(iColumn++);cell.setCellValue(detalleactivofijo.getnombre_propietario());
		cell = row.createCell(iColumn++);cell.setCellValue(detalleactivofijo.getresponsable());
		cell = row.createCell(iColumn++);cell.setCellValue(detalleactivofijo.getpath_foto());
		cell = row.createCell(iColumn++);cell.setCellValue(detalleactivofijo.getnumero_comprobante());
		cell = row.createCell(iColumn++);cell.setCellValue(detalleactivofijo.getreferencia());
		cell = row.createCell(iColumn++);cell.setCellValue(detalleactivofijo.getvalor_cotizacion());
		cell = row.createCell(iColumn++);cell.setCellValue(detalleactivofijo.getcon_partes());
		cell = row.createCell(iColumn++);cell.setCellValue(detalleactivofijo.getcon_garantia());
		cell = row.createCell(iColumn++);cell.setCellValue(detalleactivofijo.getcon_existencia());
		cell = row.createCell(iColumn++);cell.setCellValue(detalleactivofijo.getfecha_baja());
		cell = row.createCell(iColumn++);cell.setCellValue(detalleactivofijo.getpath_foto2());				
	}
	
	public void setFilaDatosExportarXmlDetalleActivoFijo(DetalleActivoFijo detalleactivofijo,Document document,Element element) {
		/*
		Element lastname = document.createElement("lastname");
		lastname.appendChild(document.createTextNode("mook kim"));
		element.appendChild(lastname);
		*/
		

		Element elementId = document.createElement(DetalleActivoFijoConstantesFunciones.ID);
		elementId.appendChild(document.createTextNode(detalleactivofijo.getId().toString().trim()));
		element.appendChild(elementId);

		if(parametroGeneralUsuario.getcon_exportar_campo_version()){

		Element elementVersionRow = document.createElement(DetalleActivoFijoConstantesFunciones.VERSIONROW);
		elementVersionRow.appendChild(document.createTextNode(detalleactivofijo.getVersionRow().toString().trim()));
		element.appendChild(elementVersionRow);
		}


		Element elementempresa_descripcion = document.createElement(DetalleActivoFijoConstantesFunciones.IDEMPRESA);
		elementempresa_descripcion.appendChild(document.createTextNode(detalleactivofijo.getempresa_descripcion()));
		element.appendChild(elementempresa_descripcion);

		Element elementsucursal_descripcion = document.createElement(DetalleActivoFijoConstantesFunciones.IDSUCURSAL);
		elementsucursal_descripcion.appendChild(document.createTextNode(detalleactivofijo.getsucursal_descripcion()));
		element.appendChild(elementsucursal_descripcion);

		Element elementdetallegrupoactivofijo_descripcion = document.createElement(DetalleActivoFijoConstantesFunciones.IDDETALLEGRUPOACTIVOFIJO);
		elementdetallegrupoactivofijo_descripcion.appendChild(document.createTextNode(detalleactivofijo.getdetallegrupoactivofijo_descripcion()));
		element.appendChild(elementdetallegrupoactivofijo_descripcion);

		Element elementsubgrupoactivofijo_descripcion = document.createElement(DetalleActivoFijoConstantesFunciones.IDSUBGRUPOACTIVOFIJO);
		elementsubgrupoactivofijo_descripcion.appendChild(document.createTextNode(detalleactivofijo.getsubgrupoactivofijo_descripcion()));
		element.appendChild(elementsubgrupoactivofijo_descripcion);

		Element elementtiporamoactivofijo_descripcion = document.createElement(DetalleActivoFijoConstantesFunciones.IDTIPORAMOACTIVOFIJO);
		elementtiporamoactivofijo_descripcion.appendChild(document.createTextNode(detalleactivofijo.gettiporamoactivofijo_descripcion()));
		element.appendChild(elementtiporamoactivofijo_descripcion);

		Element elementtipoactivofijoempresa_descripcion = document.createElement(DetalleActivoFijoConstantesFunciones.IDTIPOACTIVOFIJOEMPRESA);
		elementtipoactivofijoempresa_descripcion.appendChild(document.createTextNode(detalleactivofijo.gettipoactivofijoempresa_descripcion()));
		element.appendChild(elementtipoactivofijoempresa_descripcion);

		Element elementtipodepreciacionempresa_descripcion = document.createElement(DetalleActivoFijoConstantesFunciones.IDTIPODEPRECIACIONEMPRESA);
		elementtipodepreciacionempresa_descripcion.appendChild(document.createTextNode(detalleactivofijo.gettipodepreciacionempresa_descripcion()));
		element.appendChild(elementtipodepreciacionempresa_descripcion);

		Element elementestadoactivofijo_descripcion = document.createElement(DetalleActivoFijoConstantesFunciones.IDESTADOACTIVOFIJO);
		elementestadoactivofijo_descripcion.appendChild(document.createTextNode(detalleactivofijo.getestadoactivofijo_descripcion()));
		element.appendChild(elementestadoactivofijo_descripcion);

		Element elementcliente_descripcion = document.createElement(DetalleActivoFijoConstantesFunciones.IDCLIENTE);
		elementcliente_descripcion.appendChild(document.createTextNode(detalleactivofijo.getcliente_descripcion()));
		element.appendChild(elementcliente_descripcion);

		Element elementpartidapresu_descripcion = document.createElement(DetalleActivoFijoConstantesFunciones.IDPARTIDAPRESU);
		elementpartidapresu_descripcion.appendChild(document.createTextNode(detalleactivofijo.getpartidapresu_descripcion()));
		element.appendChild(elementpartidapresu_descripcion);

		Element elementcodigo = document.createElement(DetalleActivoFijoConstantesFunciones.CODIGO);
		elementcodigo.appendChild(document.createTextNode(detalleactivofijo.getcodigo().trim()));
		element.appendChild(elementcodigo);

		Element elementnombre = document.createElement(DetalleActivoFijoConstantesFunciones.NOMBRE);
		elementnombre.appendChild(document.createTextNode(detalleactivofijo.getnombre().trim()));
		element.appendChild(elementnombre);

		Element elementserie = document.createElement(DetalleActivoFijoConstantesFunciones.SERIE);
		elementserie.appendChild(document.createTextNode(detalleactivofijo.getserie().trim()));
		element.appendChild(elementserie);

		Element elementfecha_compra = document.createElement(DetalleActivoFijoConstantesFunciones.FECHACOMPRA);
		elementfecha_compra.appendChild(document.createTextNode(detalleactivofijo.getfecha_compra().toString().trim()));
		element.appendChild(elementfecha_compra);

		Element elementfecha_mantenimiento = document.createElement(DetalleActivoFijoConstantesFunciones.FECHAMANTENIMIENTO);
		elementfecha_mantenimiento.appendChild(document.createTextNode(detalleactivofijo.getfecha_mantenimiento().toString().trim()));
		element.appendChild(elementfecha_mantenimiento);

		Element elementfecha_correccion = document.createElement(DetalleActivoFijoConstantesFunciones.FECHACORRECCION);
		elementfecha_correccion.appendChild(document.createTextNode(detalleactivofijo.getfecha_correccion().toString().trim()));
		element.appendChild(elementfecha_correccion);

		Element elementfecha_depreciacion = document.createElement(DetalleActivoFijoConstantesFunciones.FECHADEPRECIACION);
		elementfecha_depreciacion.appendChild(document.createTextNode(detalleactivofijo.getfecha_depreciacion().toString().trim()));
		element.appendChild(elementfecha_depreciacion);

		Element elementclave = document.createElement(DetalleActivoFijoConstantesFunciones.CLAVE);
		elementclave.appendChild(document.createTextNode(detalleactivofijo.getclave().trim()));
		element.appendChild(elementclave);

		Element elementmarca = document.createElement(DetalleActivoFijoConstantesFunciones.MARCA);
		elementmarca.appendChild(document.createTextNode(detalleactivofijo.getmarca().trim()));
		element.appendChild(elementmarca);

		Element elementmodelo = document.createElement(DetalleActivoFijoConstantesFunciones.MODELO);
		elementmodelo.appendChild(document.createTextNode(detalleactivofijo.getmodelo().trim()));
		element.appendChild(elementmodelo);

		Element elementcolor = document.createElement(DetalleActivoFijoConstantesFunciones.COLOR);
		elementcolor.appendChild(document.createTextNode(detalleactivofijo.getcolor().trim()));
		element.appendChild(elementcolor);

		Element elementfecha = document.createElement(DetalleActivoFijoConstantesFunciones.FECHA);
		elementfecha.appendChild(document.createTextNode(detalleactivofijo.getfecha().toString().trim()));
		element.appendChild(elementfecha);

		Element elementvalor_util = document.createElement(DetalleActivoFijoConstantesFunciones.VALORUTIL);
		elementvalor_util.appendChild(document.createTextNode(detalleactivofijo.getvalor_util().toString().trim()));
		element.appendChild(elementvalor_util);

		Element elementcosto_de_compra = document.createElement(DetalleActivoFijoConstantesFunciones.COSTODECOMPRA);
		elementcosto_de_compra.appendChild(document.createTextNode(detalleactivofijo.getcosto_de_compra().toString().trim()));
		element.appendChild(elementcosto_de_compra);

		Element elementvida_util = document.createElement(DetalleActivoFijoConstantesFunciones.VIDAUTIL);
		elementvida_util.appendChild(document.createTextNode(detalleactivofijo.getvida_util().toString().trim()));
		element.appendChild(elementvida_util);

		Element elementvalor_residual = document.createElement(DetalleActivoFijoConstantesFunciones.VALORRESIDUAL);
		elementvalor_residual.appendChild(document.createTextNode(detalleactivofijo.getvalor_residual().toString().trim()));
		element.appendChild(elementvalor_residual);

		Element elementcantidad = document.createElement(DetalleActivoFijoConstantesFunciones.CANTIDAD);
		elementcantidad.appendChild(document.createTextNode(detalleactivofijo.getcantidad().toString().trim()));
		element.appendChild(elementcantidad);

		Element elementnombre_propietario = document.createElement(DetalleActivoFijoConstantesFunciones.NOMBREPROPIETARIO);
		elementnombre_propietario.appendChild(document.createTextNode(detalleactivofijo.getnombre_propietario().trim()));
		element.appendChild(elementnombre_propietario);

		Element elementresponsable = document.createElement(DetalleActivoFijoConstantesFunciones.RESPONSABLE);
		elementresponsable.appendChild(document.createTextNode(detalleactivofijo.getresponsable().trim()));
		element.appendChild(elementresponsable);

		Element elementpath_foto = document.createElement(DetalleActivoFijoConstantesFunciones.PATHFOTO);
		elementpath_foto.appendChild(document.createTextNode(detalleactivofijo.getpath_foto().trim()));
		element.appendChild(elementpath_foto);

		Element elementnumero_comprobante = document.createElement(DetalleActivoFijoConstantesFunciones.NUMEROCOMPROBANTE);
		elementnumero_comprobante.appendChild(document.createTextNode(detalleactivofijo.getnumero_comprobante().trim()));
		element.appendChild(elementnumero_comprobante);

		Element elementreferencia = document.createElement(DetalleActivoFijoConstantesFunciones.REFERENCIA);
		elementreferencia.appendChild(document.createTextNode(detalleactivofijo.getreferencia().trim()));
		element.appendChild(elementreferencia);

		Element elementvalor_cotizacion = document.createElement(DetalleActivoFijoConstantesFunciones.VALORCOTIZACION);
		elementvalor_cotizacion.appendChild(document.createTextNode(detalleactivofijo.getvalor_cotizacion().toString().trim()));
		element.appendChild(elementvalor_cotizacion);

		Element elementcon_partes = document.createElement(DetalleActivoFijoConstantesFunciones.CONPARTES);
		elementcon_partes.appendChild(document.createTextNode(detalleactivofijo.getcon_partes().toString().trim()));
		element.appendChild(elementcon_partes);

		Element elementcon_garantia = document.createElement(DetalleActivoFijoConstantesFunciones.CONGARANTIA);
		elementcon_garantia.appendChild(document.createTextNode(detalleactivofijo.getcon_garantia().toString().trim()));
		element.appendChild(elementcon_garantia);

		Element elementcon_existencia = document.createElement(DetalleActivoFijoConstantesFunciones.CONEXISTENCIA);
		elementcon_existencia.appendChild(document.createTextNode(detalleactivofijo.getcon_existencia().toString().trim()));
		element.appendChild(elementcon_existencia);

		Element elementfecha_baja = document.createElement(DetalleActivoFijoConstantesFunciones.FECHABAJA);
		elementfecha_baja.appendChild(document.createTextNode(detalleactivofijo.getfecha_baja().toString().trim()));
		element.appendChild(elementfecha_baja);

		Element elementpath_foto2 = document.createElement(DetalleActivoFijoConstantesFunciones.PATHFOTO2);
		elementpath_foto2.appendChild(document.createTextNode(detalleactivofijo.getpath_foto2().trim()));
		element.appendChild(elementpath_foto2);
	}
	
	public void generarReporteGroupGenericoDetalleActivoFijosSeleccionados(Boolean soloTotales) throws Exception {
		ArrayList<DetalleActivoFijo> detalleactivofijosSeleccionados=new ArrayList<DetalleActivoFijo>();
		
		detalleactivofijosSeleccionados=this.getDetalleActivoFijosSeleccionados(true);
		
		this.actualizarVariablesTipoReporte(true,false,false,"");
		
		/*
		this.esReporteDinamico=false;
		this.sPathReporteDinamico="";
		*/
		
		if(!soloTotales) {
			this.sTipoReporteExtra=Constantes2.S_REPORTE_EXTRA_GROUP_GENERICO;
		} else {
			this.sTipoReporteExtra=Constantes2.S_REPORTE_EXTRA_GROUP_TOTALES_GENERICO;
		}
		
		this.setColumnaDescripcionReporteGroupGenericoDetalleActivoFijo(detalleactivofijosSeleccionados);
		
		this.generarReporteDetalleActivoFijos("Todos",detalleactivofijosSeleccionados);
	}
	
	public void setColumnaDescripcionReporteGroupGenericoDetalleActivoFijo(ArrayList<DetalleActivoFijo> detalleactivofijosSeleccionados) throws Exception {    		
		try {
			//FUNCIONA CON MODEL PERO SE DANA MANTENIMIENTO
			
			Boolean existe=false;
			
			for(DetalleActivoFijo detalleactivofijoAux:detalleactivofijosSeleccionados) {
				detalleactivofijoAux.setsDetalleGeneralEntityReporte(detalleactivofijoAux.toString());
			
				if(sTipoSeleccionar.equals(DetalleActivoFijoConstantesFunciones.LABEL_IDEMPRESA)) {
					existe=true;
					detalleactivofijoAux.setsDescripcionGeneralEntityReporte1(detalleactivofijoAux.getempresa_descripcion());
				}
				 else if(sTipoSeleccionar.equals(DetalleActivoFijoConstantesFunciones.LABEL_IDSUCURSAL)) {
					existe=true;
					detalleactivofijoAux.setsDescripcionGeneralEntityReporte1(detalleactivofijoAux.getsucursal_descripcion());
				}
				 else if(sTipoSeleccionar.equals(DetalleActivoFijoConstantesFunciones.LABEL_IDDETALLEGRUPOACTIVOFIJO)) {
					existe=true;
					detalleactivofijoAux.setsDescripcionGeneralEntityReporte1(detalleactivofijoAux.getdetallegrupoactivofijo_descripcion());
				}
				 else if(sTipoSeleccionar.equals(DetalleActivoFijoConstantesFunciones.LABEL_IDSUBGRUPOACTIVOFIJO)) {
					existe=true;
					detalleactivofijoAux.setsDescripcionGeneralEntityReporte1(detalleactivofijoAux.getsubgrupoactivofijo_descripcion());
				}
				 else if(sTipoSeleccionar.equals(DetalleActivoFijoConstantesFunciones.LABEL_IDTIPORAMOACTIVOFIJO)) {
					existe=true;
					detalleactivofijoAux.setsDescripcionGeneralEntityReporte1(detalleactivofijoAux.gettiporamoactivofijo_descripcion());
				}
				 else if(sTipoSeleccionar.equals(DetalleActivoFijoConstantesFunciones.LABEL_IDTIPOACTIVOFIJOEMPRESA)) {
					existe=true;
					detalleactivofijoAux.setsDescripcionGeneralEntityReporte1(detalleactivofijoAux.gettipoactivofijoempresa_descripcion());
				}
				 else if(sTipoSeleccionar.equals(DetalleActivoFijoConstantesFunciones.LABEL_IDTIPODEPRECIACIONEMPRESA)) {
					existe=true;
					detalleactivofijoAux.setsDescripcionGeneralEntityReporte1(detalleactivofijoAux.gettipodepreciacionempresa_descripcion());
				}
				 else if(sTipoSeleccionar.equals(DetalleActivoFijoConstantesFunciones.LABEL_IDESTADOACTIVOFIJO)) {
					existe=true;
					detalleactivofijoAux.setsDescripcionGeneralEntityReporte1(detalleactivofijoAux.getestadoactivofijo_descripcion());
				}
				 else if(sTipoSeleccionar.equals(DetalleActivoFijoConstantesFunciones.LABEL_IDCLIENTE)) {
					existe=true;
					detalleactivofijoAux.setsDescripcionGeneralEntityReporte1(detalleactivofijoAux.getcliente_descripcion());
				}
				 else if(sTipoSeleccionar.equals(DetalleActivoFijoConstantesFunciones.LABEL_IDPARTIDAPRESU)) {
					existe=true;
					detalleactivofijoAux.setsDescripcionGeneralEntityReporte1(detalleactivofijoAux.getpartidapresu_descripcion());
				}
				 else if(sTipoSeleccionar.equals(DetalleActivoFijoConstantesFunciones.LABEL_CODIGO)) {
					existe=true;
					detalleactivofijoAux.setsDescripcionGeneralEntityReporte1(detalleactivofijoAux.getcodigo());
				}
				 else if(sTipoSeleccionar.equals(DetalleActivoFijoConstantesFunciones.LABEL_NOMBRE)) {
					existe=true;
					detalleactivofijoAux.setsDescripcionGeneralEntityReporte1(detalleactivofijoAux.getnombre());
				}
				 else if(sTipoSeleccionar.equals(DetalleActivoFijoConstantesFunciones.LABEL_SERIE)) {
					existe=true;
					detalleactivofijoAux.setsDescripcionGeneralEntityReporte1(detalleactivofijoAux.getserie());
				}
				 else if(sTipoSeleccionar.equals(DetalleActivoFijoConstantesFunciones.LABEL_FECHACOMPRA)) {
					existe=true;
					detalleactivofijoAux.setsDescripcionGeneralEntityReporte1(Funciones2.getStringPostgresDate(detalleactivofijoAux.getfecha_compra()));
				}
				 else if(sTipoSeleccionar.equals(DetalleActivoFijoConstantesFunciones.LABEL_FECHAMANTENIMIENTO)) {
					existe=true;
					detalleactivofijoAux.setsDescripcionGeneralEntityReporte1(Funciones2.getStringPostgresDate(detalleactivofijoAux.getfecha_mantenimiento()));
				}
				 else if(sTipoSeleccionar.equals(DetalleActivoFijoConstantesFunciones.LABEL_FECHACORRECCION)) {
					existe=true;
					detalleactivofijoAux.setsDescripcionGeneralEntityReporte1(Funciones2.getStringPostgresDate(detalleactivofijoAux.getfecha_correccion()));
				}
				 else if(sTipoSeleccionar.equals(DetalleActivoFijoConstantesFunciones.LABEL_FECHADEPRECIACION)) {
					existe=true;
					detalleactivofijoAux.setsDescripcionGeneralEntityReporte1(Funciones2.getStringPostgresDate(detalleactivofijoAux.getfecha_depreciacion()));
				}
				 else if(sTipoSeleccionar.equals(DetalleActivoFijoConstantesFunciones.LABEL_CLAVE)) {
					existe=true;
					detalleactivofijoAux.setsDescripcionGeneralEntityReporte1(detalleactivofijoAux.getclave());
				}
				 else if(sTipoSeleccionar.equals(DetalleActivoFijoConstantesFunciones.LABEL_MARCA)) {
					existe=true;
					detalleactivofijoAux.setsDescripcionGeneralEntityReporte1(detalleactivofijoAux.getmarca());
				}
				 else if(sTipoSeleccionar.equals(DetalleActivoFijoConstantesFunciones.LABEL_MODELO)) {
					existe=true;
					detalleactivofijoAux.setsDescripcionGeneralEntityReporte1(detalleactivofijoAux.getmodelo());
				}
				 else if(sTipoSeleccionar.equals(DetalleActivoFijoConstantesFunciones.LABEL_COLOR)) {
					existe=true;
					detalleactivofijoAux.setsDescripcionGeneralEntityReporte1(detalleactivofijoAux.getcolor());
				}
				 else if(sTipoSeleccionar.equals(DetalleActivoFijoConstantesFunciones.LABEL_FECHA)) {
					existe=true;
					detalleactivofijoAux.setsDescripcionGeneralEntityReporte1(Funciones2.getStringPostgresDate(detalleactivofijoAux.getfecha()));
				}
				 else if(sTipoSeleccionar.equals(DetalleActivoFijoConstantesFunciones.LABEL_CANTIDAD)) {
					existe=true;
					detalleactivofijoAux.setsDescripcionGeneralEntityReporte1(detalleactivofijoAux.getcantidad().toString());
				}
				 else if(sTipoSeleccionar.equals(DetalleActivoFijoConstantesFunciones.LABEL_NOMBREPROPIETARIO)) {
					existe=true;
					detalleactivofijoAux.setsDescripcionGeneralEntityReporte1(detalleactivofijoAux.getnombre_propietario());
				}
				 else if(sTipoSeleccionar.equals(DetalleActivoFijoConstantesFunciones.LABEL_RESPONSABLE)) {
					existe=true;
					detalleactivofijoAux.setsDescripcionGeneralEntityReporte1(detalleactivofijoAux.getresponsable());
				}
				 else if(sTipoSeleccionar.equals(DetalleActivoFijoConstantesFunciones.LABEL_PATHFOTO)) {
					existe=true;
					detalleactivofijoAux.setsDescripcionGeneralEntityReporte1(detalleactivofijoAux.getpath_foto());
				}
				 else if(sTipoSeleccionar.equals(DetalleActivoFijoConstantesFunciones.LABEL_NUMEROCOMPROBANTE)) {
					existe=true;
					detalleactivofijoAux.setsDescripcionGeneralEntityReporte1(detalleactivofijoAux.getnumero_comprobante());
				}
				 else if(sTipoSeleccionar.equals(DetalleActivoFijoConstantesFunciones.LABEL_REFERENCIA)) {
					existe=true;
					detalleactivofijoAux.setsDescripcionGeneralEntityReporte1(detalleactivofijoAux.getreferencia());
				}
				 else if(sTipoSeleccionar.equals(DetalleActivoFijoConstantesFunciones.LABEL_CONPARTES)) {
					existe=true;
					detalleactivofijoAux.setsDescripcionGeneralEntityReporte1(Funciones2.getDescripcionBoolean(detalleactivofijoAux.getcon_partes()));
				}
				 else if(sTipoSeleccionar.equals(DetalleActivoFijoConstantesFunciones.LABEL_CONGARANTIA)) {
					existe=true;
					detalleactivofijoAux.setsDescripcionGeneralEntityReporte1(Funciones2.getDescripcionBoolean(detalleactivofijoAux.getcon_garantia()));
				}
				 else if(sTipoSeleccionar.equals(DetalleActivoFijoConstantesFunciones.LABEL_CONEXISTENCIA)) {
					existe=true;
					detalleactivofijoAux.setsDescripcionGeneralEntityReporte1(Funciones2.getDescripcionBoolean(detalleactivofijoAux.getcon_existencia()));
				}
				 else if(sTipoSeleccionar.equals(DetalleActivoFijoConstantesFunciones.LABEL_FECHABAJA)) {
					existe=true;
					detalleactivofijoAux.setsDescripcionGeneralEntityReporte1(Funciones2.getStringPostgresDate(detalleactivofijoAux.getfecha_baja()));
				}
				 else if(sTipoSeleccionar.equals(DetalleActivoFijoConstantesFunciones.LABEL_PATHFOTO2)) {
					existe=true;
					detalleactivofijoAux.setsDescripcionGeneralEntityReporte1(detalleactivofijoAux.getpath_foto2());
				}
			}	
											
			if(!existe) {
				JOptionPane.showMessageDialog(this,"NO SE HA SELECCIONADO ALGUNA COLUMNA VALIDA","SELECCIONAR",JOptionPane.ERROR_MESSAGE);
			}										
		} catch(Exception e) {
			FuncionesSwing.manageException(this, e,logger,DetalleActivoFijoConstantesFunciones.CLASSNAME);
		}
	}
	
	
	public void actualizarEstadoCeldasBotonesDetalleActivoFijo(String sAccion,Boolean isGuardarCambiosEnLote,Boolean isEsMantenimientoRelacionado) throws Exception {
		if(sAccion=="n") {
			if(!this.esParaBusquedaForeignKey) {
				this.isVisibilidadCeldaNuevoDetalleActivoFijo=true;
				this.isVisibilidadCeldaNuevoRelacionesDetalleActivoFijo=true;
				this.isVisibilidadCeldaGuardarCambiosDetalleActivoFijo=true;
			}
			
			this.isVisibilidadCeldaModificarDetalleActivoFijo=false;
			this.isVisibilidadCeldaActualizarDetalleActivoFijo=false;
			this.isVisibilidadCeldaEliminarDetalleActivoFijo=false;
			this.isVisibilidadCeldaCancelarDetalleActivoFijo=false;
			
			if(isEsMantenimientoRelacionado==false) {
				if(isGuardarCambiosEnLote==true) {
					this.isVisibilidadCeldaGuardarDetalleActivoFijo=true;
				} else {
					this.isVisibilidadCeldaGuardarDetalleActivoFijo=false;
				}
			}
		} else if(sAccion=="a") {
			this.isVisibilidadCeldaNuevoDetalleActivoFijo=false;
			this.isVisibilidadCeldaNuevoRelacionesDetalleActivoFijo=false;
			this.isVisibilidadCeldaGuardarCambiosDetalleActivoFijo=false;
			this.isVisibilidadCeldaModificarDetalleActivoFijo=false;
			this.isVisibilidadCeldaActualizarDetalleActivoFijo=true;
			this.isVisibilidadCeldaEliminarDetalleActivoFijo=false;
			this.isVisibilidadCeldaCancelarDetalleActivoFijo=true;
			
			if(isEsMantenimientoRelacionado==false) {
				if(isGuardarCambiosEnLote==true) {
					this.isVisibilidadCeldaGuardarDetalleActivoFijo=true;
				} else {
					this.isVisibilidadCeldaGuardarDetalleActivoFijo=false;
				}
			}
		} else if(sAccion=="ae") {
			this.isVisibilidadCeldaNuevoDetalleActivoFijo=false;
			this.isVisibilidadCeldaNuevoRelacionesDetalleActivoFijo=false;
			this.isVisibilidadCeldaGuardarCambiosDetalleActivoFijo=false;
			this.isVisibilidadCeldaModificarDetalleActivoFijo=false;
			this.isVisibilidadCeldaActualizarDetalleActivoFijo=true;
			this.isVisibilidadCeldaEliminarDetalleActivoFijo=true;
			this.isVisibilidadCeldaCancelarDetalleActivoFijo=true;
			
			if(isEsMantenimientoRelacionado==false) {
				if(isGuardarCambiosEnLote==true) {
					this.isVisibilidadCeldaGuardarDetalleActivoFijo=true;
				} else {
					this.isVisibilidadCeldaGuardarDetalleActivoFijo=false;
				}
			}
		}
		//Para Mantenimientos de tablas relacionados con mas de columnas minimas
		else if(sAccion=="ae2") {
			this.isVisibilidadCeldaNuevoDetalleActivoFijo=false;
			this.isVisibilidadCeldaNuevoRelacionesDetalleActivoFijo=false;
			this.isVisibilidadCeldaGuardarCambiosDetalleActivoFijo=false;
			this.isVisibilidadCeldaModificarDetalleActivoFijo=false;
			this.isVisibilidadCeldaActualizarDetalleActivoFijo=true;
			this.isVisibilidadCeldaEliminarDetalleActivoFijo=false;
			this.isVisibilidadCeldaCancelarDetalleActivoFijo=true;
			
			if(isEsMantenimientoRelacionado==false) {
				if(isGuardarCambiosEnLote==true) {
					this.isVisibilidadCeldaGuardarDetalleActivoFijo=false;
				} else {
					this.isVisibilidadCeldaGuardarDetalleActivoFijo=false;
				}
			}
		} else if(sAccion=="c") {
			this.isVisibilidadCeldaNuevoDetalleActivoFijo=true;
			this.isVisibilidadCeldaNuevoRelacionesDetalleActivoFijo=true;
			this.isVisibilidadCeldaGuardarCambiosDetalleActivoFijo=true;
			this.isVisibilidadCeldaModificarDetalleActivoFijo=false;
			this.isVisibilidadCeldaActualizarDetalleActivoFijo=false;
			this.isVisibilidadCeldaEliminarDetalleActivoFijo=false;
			this.isVisibilidadCeldaCancelarDetalleActivoFijo=false;
			
			if(isEsMantenimientoRelacionado==false) {
				if(isGuardarCambiosEnLote==true) {
					this.isVisibilidadCeldaGuardarDetalleActivoFijo=true;
				} else {
					this.isVisibilidadCeldaGuardarDetalleActivoFijo=false;
				}
			}
		} else if(sAccion=="t") {
			this.isVisibilidadCeldaNuevoDetalleActivoFijo=false;
			this.isVisibilidadCeldaNuevoRelacionesDetalleActivoFijo=false;
			this.isVisibilidadCeldaGuardarCambiosDetalleActivoFijo=false;
			this.isVisibilidadCeldaActualizarDetalleActivoFijo=false;
			this.isVisibilidadCeldaEliminarDetalleActivoFijo=false;
			this.isVisibilidadCeldaCancelarDetalleActivoFijo=false;
			
			if(isEsMantenimientoRelacionado==false) {
				if(isGuardarCambiosEnLote==true) {
					this.isVisibilidadCeldaGuardarDetalleActivoFijo=false;
				} else {
					this.isVisibilidadCeldaGuardarDetalleActivoFijo=false;
				}
			}
		}  else if(sAccion=="s"||sAccion=="s2") {
			this.isVisibilidadCeldaNuevoDetalleActivoFijo=false;
			this.isVisibilidadCeldaNuevoRelacionesDetalleActivoFijo=false;
			this.isVisibilidadCeldaGuardarCambiosDetalleActivoFijo=false;
			this.isVisibilidadCeldaModificarDetalleActivoFijo=true;
			this.isVisibilidadCeldaActualizarDetalleActivoFijo=false;
			this.isVisibilidadCeldaEliminarDetalleActivoFijo=false;
			this.isVisibilidadCeldaCancelarDetalleActivoFijo=true;
			
			if(isEsMantenimientoRelacionado==false) {
				if(isGuardarCambiosEnLote==true) {
					this.isVisibilidadCeldaGuardarDetalleActivoFijo=false;
				} else {
					this.isVisibilidadCeldaGuardarDetalleActivoFijo=false;
				}
			}
		}
		
		//ACTUALIZA VISIBILIDAD PANELES
		if(DetalleActivoFijoJInternalFrame.CON_DATOS_FRAME && !this.esParaBusquedaForeignKey) {
			//SIEMPRE VISIBLE
			this.isVisibilidadCeldaNuevoDetalleActivoFijo=true;
			this.isVisibilidadCeldaNuevoRelacionesDetalleActivoFijo=true;
			this.isVisibilidadCeldaGuardarCambiosDetalleActivoFijo=true;
		} else {
			this.actualizarEstadoPanelsDetalleActivoFijo(sAccion);						
		}
		
		if(this.esParaBusquedaForeignKey) {
			this.isVisibilidadCeldaCopiarDetalleActivoFijo=false;
			//this.isVisibilidadCeldaVerFormDetalleActivoFijo=false;
			this.isVisibilidadCeldaDuplicarDetalleActivoFijo=false;
		}
		
		//SI ES MANTENIMIENTO RELACIONES
		if(!detalleactivofijoSessionBean.getConGuardarRelaciones()) {
			this.isVisibilidadCeldaNuevoRelacionesDetalleActivoFijo=false;
		} else {
			this.isVisibilidadCeldaNuevoDetalleActivoFijo=false;
			this.isVisibilidadCeldaGuardarCambiosDetalleActivoFijo=false;
		}
		
		//SI ES MANTENIMIENTO RELACIONADO
		if(detalleactivofijoSessionBean.getEsGuardarRelacionado()) {
			if(!detalleactivofijoSessionBean.getConGuardarRelaciones()) {	
				this.isVisibilidadCeldaNuevoRelacionesDetalleActivoFijo=false;												
			}
			
			this.jButtonCerrarDetalleActivoFijo.setVisible(false);
		}
		
		//SI NO TIENE MAXIMO DE RELACIONES PERMITIDAS
		if(!this.conMaximoRelaciones) {
			this.isVisibilidadCeldaNuevoRelacionesDetalleActivoFijo=false;
		}
		
		if(!this.permiteMantenimiento(this.detalleactivofijo)) {
			this.isVisibilidadCeldaActualizarDetalleActivoFijo=false;
			this.isVisibilidadCeldaEliminarDetalleActivoFijo=false;
		}
		
		
		
	}
	
	public void actualizarEstadoCeldasBotonesConGuardarRelacionesDetalleActivoFijo() {
		this.isVisibilidadCeldaNuevoDetalleActivoFijo=false;
		this.isVisibilidadCeldaGuardarCambiosDetalleActivoFijo=false;
	}
	
	public void actualizarEstadoPanelsDetalleActivoFijo(String sAccion) {
		if(sAccion=="n") {
			if(this.jScrollPanelDatosEdicionDetalleActivoFijo!=null) {
				this.jScrollPanelDatosEdicionDetalleActivoFijo.setVisible(false);			
			}
			
			//BYDAN_BUSQUEDAS
			
			if(this.jTabbedPaneBusquedasDetalleActivoFijo!=null) {
				this.jTabbedPaneBusquedasDetalleActivoFijo.setVisible(true);			
			}
			
			
			if(this.jScrollPanelDatosDetalleActivoFijo!=null) {
				this.jScrollPanelDatosDetalleActivoFijo.setVisible(true);
			}
			
			if(this.jPanelPaginacionDetalleActivoFijo!=null) {
				this.jPanelPaginacionDetalleActivoFijo.setVisible(true);
			}
			
			if(this.jPanelParametrosReportesDetalleActivoFijo!=null) {
				this.jPanelParametrosReportesDetalleActivoFijo.setVisible(true);		    
			}
			
		} else if(sAccion=="a") {				
			if(this.jScrollPanelDatosEdicionDetalleActivoFijo!=null) {
				this.jScrollPanelDatosEdicionDetalleActivoFijo.setVisible(true);			
			}
			
			//BYDAN_BUSQUEDAS
			
			if(this.jTabbedPaneBusquedasDetalleActivoFijo!=null) {
				this.jTabbedPaneBusquedasDetalleActivoFijo.setVisible(false);			
			}
			
			
			
			if(this.jScrollPanelDatosDetalleActivoFijo!=null) {
				this.jScrollPanelDatosDetalleActivoFijo.setVisible(false);
			}
			
			if(this.jPanelPaginacionDetalleActivoFijo!=null) {
				this.jPanelPaginacionDetalleActivoFijo.setVisible(false);
			}
			
			if(this.jPanelParametrosReportesDetalleActivoFijo!=null) {
				this.jPanelParametrosReportesDetalleActivoFijo.setVisible(false);
			}
						
		} else if(sAccion=="ae") {		
			if(this.jScrollPanelDatosEdicionDetalleActivoFijo!=null) {
				this.jScrollPanelDatosEdicionDetalleActivoFijo.setVisible(true);		
			}
			
			//BYDAN_BUSQUEDAS
			
			if(this.jTabbedPaneBusquedasDetalleActivoFijo!=null) {
				this.jTabbedPaneBusquedasDetalleActivoFijo.setVisible(false);			
			}
			
			
			if(this.jScrollPanelDatosDetalleActivoFijo!=null) {
				this.jScrollPanelDatosDetalleActivoFijo.setVisible(false);
			}
			
			if(this.jPanelPaginacionDetalleActivoFijo!=null) {
				this.jPanelPaginacionDetalleActivoFijo.setVisible(false);
			}
			
			if(this.jPanelParametrosReportesDetalleActivoFijo!=null) {
				this.jPanelParametrosReportesDetalleActivoFijo.setVisible(false);
			}
						
		}
		//Para Mantenimientos de tablas relacionados con mas de columnas minimas
		else if(sAccion=="ae2") {	
			if(this.jScrollPanelDatosEdicionDetalleActivoFijo!=null) {
				this.jScrollPanelDatosEdicionDetalleActivoFijo.setVisible(true);			
			}
			
			//BYDAN_BUSQUEDAS
			
			if(this.jTabbedPaneBusquedasDetalleActivoFijo!=null) {
				this.jTabbedPaneBusquedasDetalleActivoFijo.setVisible(false);			
			}
			
			
			if(this.jScrollPanelDatosDetalleActivoFijo!=null) {
				this.jScrollPanelDatosDetalleActivoFijo.setVisible(false);
			}
			
			if(this.jPanelPaginacionDetalleActivoFijo!=null) {
				this.jPanelPaginacionDetalleActivoFijo.setVisible(false);
			}
			
			if(this.jPanelParametrosReportesDetalleActivoFijo!=null) {
				this.jPanelParametrosReportesDetalleActivoFijo.setVisible(false);
			}
						
		} else if(sAccion=="c") {	
			if(this.jScrollPanelDatosEdicionDetalleActivoFijo!=null) {
				this.jScrollPanelDatosEdicionDetalleActivoFijo.setVisible(false);			
			}
			
			//BYDAN_BUSQUEDAS
			
			if(this.jTabbedPaneBusquedasDetalleActivoFijo!=null) {
				this.jTabbedPaneBusquedasDetalleActivoFijo.setVisible(true);			
			}
			
			
			if(this.jScrollPanelDatosDetalleActivoFijo!=null) {
				this.jScrollPanelDatosDetalleActivoFijo.setVisible(true);
			}
			
			if(this.jPanelPaginacionDetalleActivoFijo!=null) {
				this.jPanelPaginacionDetalleActivoFijo.setVisible(true);
			}
			
			if(this.jPanelParametrosReportesDetalleActivoFijo!=null) {
				this.jPanelParametrosReportesDetalleActivoFijo.setVisible(true);
			}
						
		} else if(sAccion=="t") {
			
			if(this.jScrollPanelDatosEdicionDetalleActivoFijo!=null) {
				this.jScrollPanelDatosEdicionDetalleActivoFijo.setVisible(false);
			}
			
			//BYDAN_BUSQUEDAS
			
			if(this.jTabbedPaneBusquedasDetalleActivoFijo!=null) {
				this.jTabbedPaneBusquedasDetalleActivoFijo.setVisible(true);			
			}
			
			
			if(this.jScrollPanelDatosDetalleActivoFijo!=null) {
				this.jScrollPanelDatosDetalleActivoFijo.setVisible(true);
			}
			
			if(this.jPanelPaginacionDetalleActivoFijo!=null) {
				this.jPanelPaginacionDetalleActivoFijo.setVisible(true);
			}
			
			if(this.jPanelParametrosReportesDetalleActivoFijo!=null) {
				this.jPanelParametrosReportesDetalleActivoFijo.setVisible(true);
			}
						
		}  else if(sAccion=="s"||sAccion=="s2") {
			if(this.jScrollPanelDatosEdicionDetalleActivoFijo!=null) {
				this.jScrollPanelDatosEdicionDetalleActivoFijo.setVisible(false);
			}
			
			//BYDAN_BUSQUEDAS
			
			if(this.jTabbedPaneBusquedasDetalleActivoFijo!=null) {
				this.jTabbedPaneBusquedasDetalleActivoFijo.setVisible(true);			
			}
			
			
			if(this.jScrollPanelDatosDetalleActivoFijo!=null) {
				this.jScrollPanelDatosDetalleActivoFijo.setVisible(true);
			}
			
			if(this.jPanelPaginacionDetalleActivoFijo!=null) {
				this.jPanelPaginacionDetalleActivoFijo.setVisible(true);
			}
			
			if(this.jPanelParametrosReportesDetalleActivoFijo!=null) {
				this.jPanelParametrosReportesDetalleActivoFijo.setVisible(true);
			}
			
		} 
		
		if(sAccion.equals("relacionado") || this.detalleactivofijoSessionBean.getEsGuardarRelacionado()) {
			if(!this.conCargarMinimo) {
				//BYDAN_BUSQUEDAS
				
				if(this.jTabbedPaneBusquedasDetalleActivoFijo!=null) {
					this.jTabbedPaneBusquedasDetalleActivoFijo.setVisible(false);				
				}
				
			}
			
			if(this.jPanelParametrosReportesDetalleActivoFijo!=null) {
				this.jPanelParametrosReportesDetalleActivoFijo.setVisible(false);
			}
		
		} else if(sAccion.equals("no_relacionado") && !this.detalleactivofijoSessionBean.getEsGuardarRelacionado()) {
			//BYDAN_BUSQUEDAS
			
			if(this.jTabbedPaneBusquedasDetalleActivoFijo!=null) {
				this.jTabbedPaneBusquedasDetalleActivoFijo.setVisible(true);			
			}
			
			if(this.jPanelParametrosReportesDetalleActivoFijo!=null) {
				this.jPanelParametrosReportesDetalleActivoFijo.setVisible(true);
			}
		}
	}	
	
	

	public void setVisibilidadBusquedasParaEmpresa(Boolean isParaEmpresa){
		//BYDAN_BUSQUEDAS
		
		if(!this.conCargarMinimo) {

			Boolean isParaEmpresaNegation=!isParaEmpresa;

			this.isVisibilidadFK_IdCliente=isParaEmpresaNegation;
			if(!this.isVisibilidadFK_IdCliente) {this.jTabbedPaneBusquedasDetalleActivoFijo.remove(jPanelFK_IdClienteDetalleActivoFijo);}

			this.isVisibilidadFK_IdDetalleGrupoActivoFijo=isParaEmpresaNegation;
			if(!this.isVisibilidadFK_IdDetalleGrupoActivoFijo) {this.jTabbedPaneBusquedasDetalleActivoFijo.remove(jPanelFK_IdDetalleGrupoActivoFijoDetalleActivoFijo);}

			this.isVisibilidadFK_IdEstadoActivoFijo=isParaEmpresaNegation;
			if(!this.isVisibilidadFK_IdEstadoActivoFijo) {this.jTabbedPaneBusquedasDetalleActivoFijo.remove(jPanelFK_IdEstadoActivoFijoDetalleActivoFijo);}

			this.isVisibilidadFK_IdPartidaPresu=isParaEmpresaNegation;
			if(!this.isVisibilidadFK_IdPartidaPresu) {this.jTabbedPaneBusquedasDetalleActivoFijo.remove(jPanelFK_IdPartidaPresuDetalleActivoFijo);}

			this.isVisibilidadFK_IdSubGrupoActivoFijo=isParaEmpresaNegation;
			if(!this.isVisibilidadFK_IdSubGrupoActivoFijo) {this.jTabbedPaneBusquedasDetalleActivoFijo.remove(jPanelFK_IdSubGrupoActivoFijoDetalleActivoFijo);}

			this.isVisibilidadFK_IdTipoActivoFijoEmpresa=isParaEmpresaNegation;
			if(!this.isVisibilidadFK_IdTipoActivoFijoEmpresa) {this.jTabbedPaneBusquedasDetalleActivoFijo.remove(jPanelFK_IdTipoActivoFijoEmpresaDetalleActivoFijo);}

			this.isVisibilidadFK_IdTipoDepreciacionEmpresa=isParaEmpresaNegation;
			if(!this.isVisibilidadFK_IdTipoDepreciacionEmpresa) {this.jTabbedPaneBusquedasDetalleActivoFijo.remove(jPanelFK_IdTipoDepreciacionEmpresaDetalleActivoFijo);}

			this.isVisibilidadFK_IdTipoRamoActivoFijo=isParaEmpresaNegation;
			if(!this.isVisibilidadFK_IdTipoRamoActivoFijo) {this.jTabbedPaneBusquedasDetalleActivoFijo.remove(jPanelFK_IdTipoRamoActivoFijoDetalleActivoFijo);}
		}
		
	}

	public void setVisibilidadBusquedasParaSucursal(Boolean isParaSucursal){
		//BYDAN_BUSQUEDAS
		
		if(!this.conCargarMinimo) {

			Boolean isParaSucursalNegation=!isParaSucursal;

			this.isVisibilidadFK_IdCliente=isParaSucursalNegation;
			if(!this.isVisibilidadFK_IdCliente) {this.jTabbedPaneBusquedasDetalleActivoFijo.remove(jPanelFK_IdClienteDetalleActivoFijo);}

			this.isVisibilidadFK_IdDetalleGrupoActivoFijo=isParaSucursalNegation;
			if(!this.isVisibilidadFK_IdDetalleGrupoActivoFijo) {this.jTabbedPaneBusquedasDetalleActivoFijo.remove(jPanelFK_IdDetalleGrupoActivoFijoDetalleActivoFijo);}

			this.isVisibilidadFK_IdEstadoActivoFijo=isParaSucursalNegation;
			if(!this.isVisibilidadFK_IdEstadoActivoFijo) {this.jTabbedPaneBusquedasDetalleActivoFijo.remove(jPanelFK_IdEstadoActivoFijoDetalleActivoFijo);}

			this.isVisibilidadFK_IdPartidaPresu=isParaSucursalNegation;
			if(!this.isVisibilidadFK_IdPartidaPresu) {this.jTabbedPaneBusquedasDetalleActivoFijo.remove(jPanelFK_IdPartidaPresuDetalleActivoFijo);}

			this.isVisibilidadFK_IdSubGrupoActivoFijo=isParaSucursalNegation;
			if(!this.isVisibilidadFK_IdSubGrupoActivoFijo) {this.jTabbedPaneBusquedasDetalleActivoFijo.remove(jPanelFK_IdSubGrupoActivoFijoDetalleActivoFijo);}

			this.isVisibilidadFK_IdTipoActivoFijoEmpresa=isParaSucursalNegation;
			if(!this.isVisibilidadFK_IdTipoActivoFijoEmpresa) {this.jTabbedPaneBusquedasDetalleActivoFijo.remove(jPanelFK_IdTipoActivoFijoEmpresaDetalleActivoFijo);}

			this.isVisibilidadFK_IdTipoDepreciacionEmpresa=isParaSucursalNegation;
			if(!this.isVisibilidadFK_IdTipoDepreciacionEmpresa) {this.jTabbedPaneBusquedasDetalleActivoFijo.remove(jPanelFK_IdTipoDepreciacionEmpresaDetalleActivoFijo);}

			this.isVisibilidadFK_IdTipoRamoActivoFijo=isParaSucursalNegation;
			if(!this.isVisibilidadFK_IdTipoRamoActivoFijo) {this.jTabbedPaneBusquedasDetalleActivoFijo.remove(jPanelFK_IdTipoRamoActivoFijoDetalleActivoFijo);}
		}
		
	}

	public void setVisibilidadBusquedasParaDetalleGrupoActivoFijo(Boolean isParaDetalleGrupoActivoFijo){
		//BYDAN_BUSQUEDAS
		
		if(!this.conCargarMinimo) {

			Boolean isParaDetalleGrupoActivoFijoNegation=!isParaDetalleGrupoActivoFijo;

			this.isVisibilidadFK_IdCliente=isParaDetalleGrupoActivoFijoNegation;
			if(!this.isVisibilidadFK_IdCliente) {this.jTabbedPaneBusquedasDetalleActivoFijo.remove(jPanelFK_IdClienteDetalleActivoFijo);}

			this.isVisibilidadFK_IdDetalleGrupoActivoFijo=isParaDetalleGrupoActivoFijo;
			if(!this.isVisibilidadFK_IdDetalleGrupoActivoFijo) {this.jTabbedPaneBusquedasDetalleActivoFijo.remove(jPanelFK_IdDetalleGrupoActivoFijoDetalleActivoFijo);}

			this.isVisibilidadFK_IdEstadoActivoFijo=isParaDetalleGrupoActivoFijoNegation;
			if(!this.isVisibilidadFK_IdEstadoActivoFijo) {this.jTabbedPaneBusquedasDetalleActivoFijo.remove(jPanelFK_IdEstadoActivoFijoDetalleActivoFijo);}

			this.isVisibilidadFK_IdPartidaPresu=isParaDetalleGrupoActivoFijoNegation;
			if(!this.isVisibilidadFK_IdPartidaPresu) {this.jTabbedPaneBusquedasDetalleActivoFijo.remove(jPanelFK_IdPartidaPresuDetalleActivoFijo);}

			this.isVisibilidadFK_IdSubGrupoActivoFijo=isParaDetalleGrupoActivoFijoNegation;
			if(!this.isVisibilidadFK_IdSubGrupoActivoFijo) {this.jTabbedPaneBusquedasDetalleActivoFijo.remove(jPanelFK_IdSubGrupoActivoFijoDetalleActivoFijo);}

			this.isVisibilidadFK_IdTipoActivoFijoEmpresa=isParaDetalleGrupoActivoFijoNegation;
			if(!this.isVisibilidadFK_IdTipoActivoFijoEmpresa) {this.jTabbedPaneBusquedasDetalleActivoFijo.remove(jPanelFK_IdTipoActivoFijoEmpresaDetalleActivoFijo);}

			this.isVisibilidadFK_IdTipoDepreciacionEmpresa=isParaDetalleGrupoActivoFijoNegation;
			if(!this.isVisibilidadFK_IdTipoDepreciacionEmpresa) {this.jTabbedPaneBusquedasDetalleActivoFijo.remove(jPanelFK_IdTipoDepreciacionEmpresaDetalleActivoFijo);}

			this.isVisibilidadFK_IdTipoRamoActivoFijo=isParaDetalleGrupoActivoFijoNegation;
			if(!this.isVisibilidadFK_IdTipoRamoActivoFijo) {this.jTabbedPaneBusquedasDetalleActivoFijo.remove(jPanelFK_IdTipoRamoActivoFijoDetalleActivoFijo);}
		}
		
	}

	public void setVisibilidadBusquedasParaSubGrupoActivoFijo(Boolean isParaSubGrupoActivoFijo){
		//BYDAN_BUSQUEDAS
		
		if(!this.conCargarMinimo) {

			Boolean isParaSubGrupoActivoFijoNegation=!isParaSubGrupoActivoFijo;

			this.isVisibilidadFK_IdCliente=isParaSubGrupoActivoFijoNegation;
			if(!this.isVisibilidadFK_IdCliente) {this.jTabbedPaneBusquedasDetalleActivoFijo.remove(jPanelFK_IdClienteDetalleActivoFijo);}

			this.isVisibilidadFK_IdDetalleGrupoActivoFijo=isParaSubGrupoActivoFijoNegation;
			if(!this.isVisibilidadFK_IdDetalleGrupoActivoFijo) {this.jTabbedPaneBusquedasDetalleActivoFijo.remove(jPanelFK_IdDetalleGrupoActivoFijoDetalleActivoFijo);}

			this.isVisibilidadFK_IdEstadoActivoFijo=isParaSubGrupoActivoFijoNegation;
			if(!this.isVisibilidadFK_IdEstadoActivoFijo) {this.jTabbedPaneBusquedasDetalleActivoFijo.remove(jPanelFK_IdEstadoActivoFijoDetalleActivoFijo);}

			this.isVisibilidadFK_IdPartidaPresu=isParaSubGrupoActivoFijoNegation;
			if(!this.isVisibilidadFK_IdPartidaPresu) {this.jTabbedPaneBusquedasDetalleActivoFijo.remove(jPanelFK_IdPartidaPresuDetalleActivoFijo);}

			this.isVisibilidadFK_IdSubGrupoActivoFijo=isParaSubGrupoActivoFijo;
			if(!this.isVisibilidadFK_IdSubGrupoActivoFijo) {this.jTabbedPaneBusquedasDetalleActivoFijo.remove(jPanelFK_IdSubGrupoActivoFijoDetalleActivoFijo);}

			this.isVisibilidadFK_IdTipoActivoFijoEmpresa=isParaSubGrupoActivoFijoNegation;
			if(!this.isVisibilidadFK_IdTipoActivoFijoEmpresa) {this.jTabbedPaneBusquedasDetalleActivoFijo.remove(jPanelFK_IdTipoActivoFijoEmpresaDetalleActivoFijo);}

			this.isVisibilidadFK_IdTipoDepreciacionEmpresa=isParaSubGrupoActivoFijoNegation;
			if(!this.isVisibilidadFK_IdTipoDepreciacionEmpresa) {this.jTabbedPaneBusquedasDetalleActivoFijo.remove(jPanelFK_IdTipoDepreciacionEmpresaDetalleActivoFijo);}

			this.isVisibilidadFK_IdTipoRamoActivoFijo=isParaSubGrupoActivoFijoNegation;
			if(!this.isVisibilidadFK_IdTipoRamoActivoFijo) {this.jTabbedPaneBusquedasDetalleActivoFijo.remove(jPanelFK_IdTipoRamoActivoFijoDetalleActivoFijo);}
		}
		
	}

	public void setVisibilidadBusquedasParaTipoRamoActivoFijo(Boolean isParaTipoRamoActivoFijo){
		//BYDAN_BUSQUEDAS
		
		if(!this.conCargarMinimo) {

			Boolean isParaTipoRamoActivoFijoNegation=!isParaTipoRamoActivoFijo;

			this.isVisibilidadFK_IdCliente=isParaTipoRamoActivoFijoNegation;
			if(!this.isVisibilidadFK_IdCliente) {this.jTabbedPaneBusquedasDetalleActivoFijo.remove(jPanelFK_IdClienteDetalleActivoFijo);}

			this.isVisibilidadFK_IdDetalleGrupoActivoFijo=isParaTipoRamoActivoFijoNegation;
			if(!this.isVisibilidadFK_IdDetalleGrupoActivoFijo) {this.jTabbedPaneBusquedasDetalleActivoFijo.remove(jPanelFK_IdDetalleGrupoActivoFijoDetalleActivoFijo);}

			this.isVisibilidadFK_IdEstadoActivoFijo=isParaTipoRamoActivoFijoNegation;
			if(!this.isVisibilidadFK_IdEstadoActivoFijo) {this.jTabbedPaneBusquedasDetalleActivoFijo.remove(jPanelFK_IdEstadoActivoFijoDetalleActivoFijo);}

			this.isVisibilidadFK_IdPartidaPresu=isParaTipoRamoActivoFijoNegation;
			if(!this.isVisibilidadFK_IdPartidaPresu) {this.jTabbedPaneBusquedasDetalleActivoFijo.remove(jPanelFK_IdPartidaPresuDetalleActivoFijo);}

			this.isVisibilidadFK_IdSubGrupoActivoFijo=isParaTipoRamoActivoFijoNegation;
			if(!this.isVisibilidadFK_IdSubGrupoActivoFijo) {this.jTabbedPaneBusquedasDetalleActivoFijo.remove(jPanelFK_IdSubGrupoActivoFijoDetalleActivoFijo);}

			this.isVisibilidadFK_IdTipoActivoFijoEmpresa=isParaTipoRamoActivoFijoNegation;
			if(!this.isVisibilidadFK_IdTipoActivoFijoEmpresa) {this.jTabbedPaneBusquedasDetalleActivoFijo.remove(jPanelFK_IdTipoActivoFijoEmpresaDetalleActivoFijo);}

			this.isVisibilidadFK_IdTipoDepreciacionEmpresa=isParaTipoRamoActivoFijoNegation;
			if(!this.isVisibilidadFK_IdTipoDepreciacionEmpresa) {this.jTabbedPaneBusquedasDetalleActivoFijo.remove(jPanelFK_IdTipoDepreciacionEmpresaDetalleActivoFijo);}

			this.isVisibilidadFK_IdTipoRamoActivoFijo=isParaTipoRamoActivoFijo;
			if(!this.isVisibilidadFK_IdTipoRamoActivoFijo) {this.jTabbedPaneBusquedasDetalleActivoFijo.remove(jPanelFK_IdTipoRamoActivoFijoDetalleActivoFijo);}
		}
		
	}

	public void setVisibilidadBusquedasParaTipoActivoFijoEmpresa(Boolean isParaTipoActivoFijoEmpresa){
		//BYDAN_BUSQUEDAS
		
		if(!this.conCargarMinimo) {

			Boolean isParaTipoActivoFijoEmpresaNegation=!isParaTipoActivoFijoEmpresa;

			this.isVisibilidadFK_IdCliente=isParaTipoActivoFijoEmpresaNegation;
			if(!this.isVisibilidadFK_IdCliente) {this.jTabbedPaneBusquedasDetalleActivoFijo.remove(jPanelFK_IdClienteDetalleActivoFijo);}

			this.isVisibilidadFK_IdDetalleGrupoActivoFijo=isParaTipoActivoFijoEmpresaNegation;
			if(!this.isVisibilidadFK_IdDetalleGrupoActivoFijo) {this.jTabbedPaneBusquedasDetalleActivoFijo.remove(jPanelFK_IdDetalleGrupoActivoFijoDetalleActivoFijo);}

			this.isVisibilidadFK_IdEstadoActivoFijo=isParaTipoActivoFijoEmpresaNegation;
			if(!this.isVisibilidadFK_IdEstadoActivoFijo) {this.jTabbedPaneBusquedasDetalleActivoFijo.remove(jPanelFK_IdEstadoActivoFijoDetalleActivoFijo);}

			this.isVisibilidadFK_IdPartidaPresu=isParaTipoActivoFijoEmpresaNegation;
			if(!this.isVisibilidadFK_IdPartidaPresu) {this.jTabbedPaneBusquedasDetalleActivoFijo.remove(jPanelFK_IdPartidaPresuDetalleActivoFijo);}

			this.isVisibilidadFK_IdSubGrupoActivoFijo=isParaTipoActivoFijoEmpresaNegation;
			if(!this.isVisibilidadFK_IdSubGrupoActivoFijo) {this.jTabbedPaneBusquedasDetalleActivoFijo.remove(jPanelFK_IdSubGrupoActivoFijoDetalleActivoFijo);}

			this.isVisibilidadFK_IdTipoActivoFijoEmpresa=isParaTipoActivoFijoEmpresa;
			if(!this.isVisibilidadFK_IdTipoActivoFijoEmpresa) {this.jTabbedPaneBusquedasDetalleActivoFijo.remove(jPanelFK_IdTipoActivoFijoEmpresaDetalleActivoFijo);}

			this.isVisibilidadFK_IdTipoDepreciacionEmpresa=isParaTipoActivoFijoEmpresaNegation;
			if(!this.isVisibilidadFK_IdTipoDepreciacionEmpresa) {this.jTabbedPaneBusquedasDetalleActivoFijo.remove(jPanelFK_IdTipoDepreciacionEmpresaDetalleActivoFijo);}

			this.isVisibilidadFK_IdTipoRamoActivoFijo=isParaTipoActivoFijoEmpresaNegation;
			if(!this.isVisibilidadFK_IdTipoRamoActivoFijo) {this.jTabbedPaneBusquedasDetalleActivoFijo.remove(jPanelFK_IdTipoRamoActivoFijoDetalleActivoFijo);}
		}
		
	}

	public void setVisibilidadBusquedasParaTipoDepreciacionEmpresa(Boolean isParaTipoDepreciacionEmpresa){
		//BYDAN_BUSQUEDAS
		
		if(!this.conCargarMinimo) {

			Boolean isParaTipoDepreciacionEmpresaNegation=!isParaTipoDepreciacionEmpresa;

			this.isVisibilidadFK_IdCliente=isParaTipoDepreciacionEmpresaNegation;
			if(!this.isVisibilidadFK_IdCliente) {this.jTabbedPaneBusquedasDetalleActivoFijo.remove(jPanelFK_IdClienteDetalleActivoFijo);}

			this.isVisibilidadFK_IdDetalleGrupoActivoFijo=isParaTipoDepreciacionEmpresaNegation;
			if(!this.isVisibilidadFK_IdDetalleGrupoActivoFijo) {this.jTabbedPaneBusquedasDetalleActivoFijo.remove(jPanelFK_IdDetalleGrupoActivoFijoDetalleActivoFijo);}

			this.isVisibilidadFK_IdEstadoActivoFijo=isParaTipoDepreciacionEmpresaNegation;
			if(!this.isVisibilidadFK_IdEstadoActivoFijo) {this.jTabbedPaneBusquedasDetalleActivoFijo.remove(jPanelFK_IdEstadoActivoFijoDetalleActivoFijo);}

			this.isVisibilidadFK_IdPartidaPresu=isParaTipoDepreciacionEmpresaNegation;
			if(!this.isVisibilidadFK_IdPartidaPresu) {this.jTabbedPaneBusquedasDetalleActivoFijo.remove(jPanelFK_IdPartidaPresuDetalleActivoFijo);}

			this.isVisibilidadFK_IdSubGrupoActivoFijo=isParaTipoDepreciacionEmpresaNegation;
			if(!this.isVisibilidadFK_IdSubGrupoActivoFijo) {this.jTabbedPaneBusquedasDetalleActivoFijo.remove(jPanelFK_IdSubGrupoActivoFijoDetalleActivoFijo);}

			this.isVisibilidadFK_IdTipoActivoFijoEmpresa=isParaTipoDepreciacionEmpresaNegation;
			if(!this.isVisibilidadFK_IdTipoActivoFijoEmpresa) {this.jTabbedPaneBusquedasDetalleActivoFijo.remove(jPanelFK_IdTipoActivoFijoEmpresaDetalleActivoFijo);}

			this.isVisibilidadFK_IdTipoDepreciacionEmpresa=isParaTipoDepreciacionEmpresa;
			if(!this.isVisibilidadFK_IdTipoDepreciacionEmpresa) {this.jTabbedPaneBusquedasDetalleActivoFijo.remove(jPanelFK_IdTipoDepreciacionEmpresaDetalleActivoFijo);}

			this.isVisibilidadFK_IdTipoRamoActivoFijo=isParaTipoDepreciacionEmpresaNegation;
			if(!this.isVisibilidadFK_IdTipoRamoActivoFijo) {this.jTabbedPaneBusquedasDetalleActivoFijo.remove(jPanelFK_IdTipoRamoActivoFijoDetalleActivoFijo);}
		}
		
	}

	public void setVisibilidadBusquedasParaEstadoActivoFijo(Boolean isParaEstadoActivoFijo){
		//BYDAN_BUSQUEDAS
		
		if(!this.conCargarMinimo) {

			Boolean isParaEstadoActivoFijoNegation=!isParaEstadoActivoFijo;

			this.isVisibilidadFK_IdCliente=isParaEstadoActivoFijoNegation;
			if(!this.isVisibilidadFK_IdCliente) {this.jTabbedPaneBusquedasDetalleActivoFijo.remove(jPanelFK_IdClienteDetalleActivoFijo);}

			this.isVisibilidadFK_IdDetalleGrupoActivoFijo=isParaEstadoActivoFijoNegation;
			if(!this.isVisibilidadFK_IdDetalleGrupoActivoFijo) {this.jTabbedPaneBusquedasDetalleActivoFijo.remove(jPanelFK_IdDetalleGrupoActivoFijoDetalleActivoFijo);}

			this.isVisibilidadFK_IdEstadoActivoFijo=isParaEstadoActivoFijo;
			if(!this.isVisibilidadFK_IdEstadoActivoFijo) {this.jTabbedPaneBusquedasDetalleActivoFijo.remove(jPanelFK_IdEstadoActivoFijoDetalleActivoFijo);}

			this.isVisibilidadFK_IdPartidaPresu=isParaEstadoActivoFijoNegation;
			if(!this.isVisibilidadFK_IdPartidaPresu) {this.jTabbedPaneBusquedasDetalleActivoFijo.remove(jPanelFK_IdPartidaPresuDetalleActivoFijo);}

			this.isVisibilidadFK_IdSubGrupoActivoFijo=isParaEstadoActivoFijoNegation;
			if(!this.isVisibilidadFK_IdSubGrupoActivoFijo) {this.jTabbedPaneBusquedasDetalleActivoFijo.remove(jPanelFK_IdSubGrupoActivoFijoDetalleActivoFijo);}

			this.isVisibilidadFK_IdTipoActivoFijoEmpresa=isParaEstadoActivoFijoNegation;
			if(!this.isVisibilidadFK_IdTipoActivoFijoEmpresa) {this.jTabbedPaneBusquedasDetalleActivoFijo.remove(jPanelFK_IdTipoActivoFijoEmpresaDetalleActivoFijo);}

			this.isVisibilidadFK_IdTipoDepreciacionEmpresa=isParaEstadoActivoFijoNegation;
			if(!this.isVisibilidadFK_IdTipoDepreciacionEmpresa) {this.jTabbedPaneBusquedasDetalleActivoFijo.remove(jPanelFK_IdTipoDepreciacionEmpresaDetalleActivoFijo);}

			this.isVisibilidadFK_IdTipoRamoActivoFijo=isParaEstadoActivoFijoNegation;
			if(!this.isVisibilidadFK_IdTipoRamoActivoFijo) {this.jTabbedPaneBusquedasDetalleActivoFijo.remove(jPanelFK_IdTipoRamoActivoFijoDetalleActivoFijo);}
		}
		
	}

	public void setVisibilidadBusquedasParaCliente(Boolean isParaCliente){
		//BYDAN_BUSQUEDAS
		
		if(!this.conCargarMinimo) {

			Boolean isParaClienteNegation=!isParaCliente;

			this.isVisibilidadFK_IdCliente=isParaCliente;
			if(!this.isVisibilidadFK_IdCliente) {this.jTabbedPaneBusquedasDetalleActivoFijo.remove(jPanelFK_IdClienteDetalleActivoFijo);}

			this.isVisibilidadFK_IdDetalleGrupoActivoFijo=isParaClienteNegation;
			if(!this.isVisibilidadFK_IdDetalleGrupoActivoFijo) {this.jTabbedPaneBusquedasDetalleActivoFijo.remove(jPanelFK_IdDetalleGrupoActivoFijoDetalleActivoFijo);}

			this.isVisibilidadFK_IdEstadoActivoFijo=isParaClienteNegation;
			if(!this.isVisibilidadFK_IdEstadoActivoFijo) {this.jTabbedPaneBusquedasDetalleActivoFijo.remove(jPanelFK_IdEstadoActivoFijoDetalleActivoFijo);}

			this.isVisibilidadFK_IdPartidaPresu=isParaClienteNegation;
			if(!this.isVisibilidadFK_IdPartidaPresu) {this.jTabbedPaneBusquedasDetalleActivoFijo.remove(jPanelFK_IdPartidaPresuDetalleActivoFijo);}

			this.isVisibilidadFK_IdSubGrupoActivoFijo=isParaClienteNegation;
			if(!this.isVisibilidadFK_IdSubGrupoActivoFijo) {this.jTabbedPaneBusquedasDetalleActivoFijo.remove(jPanelFK_IdSubGrupoActivoFijoDetalleActivoFijo);}

			this.isVisibilidadFK_IdTipoActivoFijoEmpresa=isParaClienteNegation;
			if(!this.isVisibilidadFK_IdTipoActivoFijoEmpresa) {this.jTabbedPaneBusquedasDetalleActivoFijo.remove(jPanelFK_IdTipoActivoFijoEmpresaDetalleActivoFijo);}

			this.isVisibilidadFK_IdTipoDepreciacionEmpresa=isParaClienteNegation;
			if(!this.isVisibilidadFK_IdTipoDepreciacionEmpresa) {this.jTabbedPaneBusquedasDetalleActivoFijo.remove(jPanelFK_IdTipoDepreciacionEmpresaDetalleActivoFijo);}

			this.isVisibilidadFK_IdTipoRamoActivoFijo=isParaClienteNegation;
			if(!this.isVisibilidadFK_IdTipoRamoActivoFijo) {this.jTabbedPaneBusquedasDetalleActivoFijo.remove(jPanelFK_IdTipoRamoActivoFijoDetalleActivoFijo);}
		}
		
	}

	public void setVisibilidadBusquedasParaPartidaPresu(Boolean isParaPartidaPresu){
		//BYDAN_BUSQUEDAS
		
		if(!this.conCargarMinimo) {

			Boolean isParaPartidaPresuNegation=!isParaPartidaPresu;

			this.isVisibilidadFK_IdCliente=isParaPartidaPresuNegation;
			if(!this.isVisibilidadFK_IdCliente) {this.jTabbedPaneBusquedasDetalleActivoFijo.remove(jPanelFK_IdClienteDetalleActivoFijo);}

			this.isVisibilidadFK_IdDetalleGrupoActivoFijo=isParaPartidaPresuNegation;
			if(!this.isVisibilidadFK_IdDetalleGrupoActivoFijo) {this.jTabbedPaneBusquedasDetalleActivoFijo.remove(jPanelFK_IdDetalleGrupoActivoFijoDetalleActivoFijo);}

			this.isVisibilidadFK_IdEstadoActivoFijo=isParaPartidaPresuNegation;
			if(!this.isVisibilidadFK_IdEstadoActivoFijo) {this.jTabbedPaneBusquedasDetalleActivoFijo.remove(jPanelFK_IdEstadoActivoFijoDetalleActivoFijo);}

			this.isVisibilidadFK_IdPartidaPresu=isParaPartidaPresu;
			if(!this.isVisibilidadFK_IdPartidaPresu) {this.jTabbedPaneBusquedasDetalleActivoFijo.remove(jPanelFK_IdPartidaPresuDetalleActivoFijo);}

			this.isVisibilidadFK_IdSubGrupoActivoFijo=isParaPartidaPresuNegation;
			if(!this.isVisibilidadFK_IdSubGrupoActivoFijo) {this.jTabbedPaneBusquedasDetalleActivoFijo.remove(jPanelFK_IdSubGrupoActivoFijoDetalleActivoFijo);}

			this.isVisibilidadFK_IdTipoActivoFijoEmpresa=isParaPartidaPresuNegation;
			if(!this.isVisibilidadFK_IdTipoActivoFijoEmpresa) {this.jTabbedPaneBusquedasDetalleActivoFijo.remove(jPanelFK_IdTipoActivoFijoEmpresaDetalleActivoFijo);}

			this.isVisibilidadFK_IdTipoDepreciacionEmpresa=isParaPartidaPresuNegation;
			if(!this.isVisibilidadFK_IdTipoDepreciacionEmpresa) {this.jTabbedPaneBusquedasDetalleActivoFijo.remove(jPanelFK_IdTipoDepreciacionEmpresaDetalleActivoFijo);}

			this.isVisibilidadFK_IdTipoRamoActivoFijo=isParaPartidaPresuNegation;
			if(!this.isVisibilidadFK_IdTipoRamoActivoFijo) {this.jTabbedPaneBusquedasDetalleActivoFijo.remove(jPanelFK_IdTipoRamoActivoFijoDetalleActivoFijo);}
		}
		
	}
	
	

	public String registrarSesionDetalleActivoFijoParaMantenimientoActivoFijos() throws Exception {
		Boolean isPaginaPopupMantenimientoActivoFijo=false;

		try {

			if(this.detalleactivofijoSessionBean==null) {
				this.detalleactivofijoSessionBean=new DetalleActivoFijoSessionBean();
			}

			if(this.jInternalFrameDetalleFormDetalleActivoFijo.mantenimientoactivofijoSessionBean==null) {
				this.jInternalFrameDetalleFormDetalleActivoFijo.mantenimientoactivofijoSessionBean=new MantenimientoActivoFijoSessionBean();
			}

			this.jInternalFrameDetalleFormDetalleActivoFijo.mantenimientoactivofijoSessionBean.setsPathNavegacionActual(detalleactivofijoSessionBean.getsPathNavegacionActual()+Constantes.SHTMLFLECHA+MantenimientoActivoFijoConstantesFunciones.SCLASSWEBTITULO);
			this.jInternalFrameDetalleFormDetalleActivoFijo.mantenimientoactivofijoSessionBean.setisPermiteRecargarInformacion(false);
			isPaginaPopupMantenimientoActivoFijo=this.jInternalFrameDetalleFormDetalleActivoFijo.mantenimientoactivofijoSessionBean.getisPaginaPopup();
			this.jInternalFrameDetalleFormDetalleActivoFijo.mantenimientoactivofijoSessionBean.setisPermiteNavegacionHaciaForeignKeyDesdeMantenimientoActivoFijo(true);
			this.jInternalFrameDetalleFormDetalleActivoFijo.mantenimientoactivofijoSessionBean.setsNombrePaginaNavegacionHaciaForeignKeyDesdeMantenimientoActivoFijo(DetalleActivoFijoConstantesFunciones.SNOMBREOPCION);
			this.jInternalFrameDetalleFormDetalleActivoFijo.mantenimientoactivofijoSessionBean.setisBusquedaDesdeForeignKeySesionDetalleActivoFijo(true);
			this.jInternalFrameDetalleFormDetalleActivoFijo.mantenimientoactivofijoSessionBean.setlidDetalleActivoFijoActual(this.idDetalleActivoFijoActual);

			detalleactivofijoSessionBean.setisBusquedaDesdeForeignKeySesionForeignKeyDetalleActivoFijo(true);
			detalleactivofijoSessionBean.setlIdDetalleActivoFijoActualForeignKey(this.idDetalleActivoFijoActual);

			String strPagina=Constantes.SNONE;
			SistemaLogicAdditional sistemaLogicAdditional=new SistemaLogicAdditional();

			guardarDatosBusquedaSession();

		} catch(Exception e) {
			FuncionesSwing.manageException(this, e,logger);
		}

		return "";
	}

	public String registrarSesionDetalleActivoFijoParaServicioTransportes() throws Exception {
		Boolean isPaginaPopupServicioTransporte=false;

		try {

			if(this.detalleactivofijoSessionBean==null) {
				this.detalleactivofijoSessionBean=new DetalleActivoFijoSessionBean();
			}

			if(this.jInternalFrameDetalleFormDetalleActivoFijo.serviciotransporteSessionBean==null) {
				this.jInternalFrameDetalleFormDetalleActivoFijo.serviciotransporteSessionBean=new ServicioTransporteSessionBean();
			}

			this.jInternalFrameDetalleFormDetalleActivoFijo.serviciotransporteSessionBean.setsPathNavegacionActual(detalleactivofijoSessionBean.getsPathNavegacionActual()+Constantes.SHTMLFLECHA+ServicioTransporteConstantesFunciones.SCLASSWEBTITULO);
			this.jInternalFrameDetalleFormDetalleActivoFijo.serviciotransporteSessionBean.setisPermiteRecargarInformacion(false);
			isPaginaPopupServicioTransporte=this.jInternalFrameDetalleFormDetalleActivoFijo.serviciotransporteSessionBean.getisPaginaPopup();
			this.jInternalFrameDetalleFormDetalleActivoFijo.serviciotransporteSessionBean.setisPermiteNavegacionHaciaForeignKeyDesdeServicioTransporte(true);
			this.jInternalFrameDetalleFormDetalleActivoFijo.serviciotransporteSessionBean.setsNombrePaginaNavegacionHaciaForeignKeyDesdeServicioTransporte(DetalleActivoFijoConstantesFunciones.SNOMBREOPCION);
			this.jInternalFrameDetalleFormDetalleActivoFijo.serviciotransporteSessionBean.setisBusquedaDesdeForeignKeySesionDetalleActivoFijo(true);
			this.jInternalFrameDetalleFormDetalleActivoFijo.serviciotransporteSessionBean.setlidDetalleActivoFijoActual(this.idDetalleActivoFijoActual);

			detalleactivofijoSessionBean.setisBusquedaDesdeForeignKeySesionForeignKeyDetalleActivoFijo(true);
			detalleactivofijoSessionBean.setlIdDetalleActivoFijoActualForeignKey(this.idDetalleActivoFijoActual);

			String strPagina=Constantes.SNONE;
			SistemaLogicAdditional sistemaLogicAdditional=new SistemaLogicAdditional();

			guardarDatosBusquedaSession();

		} catch(Exception e) {
			FuncionesSwing.manageException(this, e,logger);
		}

		return "";
	}

	public String registrarSesionDetalleActivoFijoDestinoParaMovimientoActivoFijos() throws Exception {
		Boolean isPaginaPopupMovimientoActivoFijo=false;

		try {

			if(this.detalleactivofijoSessionBean==null) {
				this.detalleactivofijoSessionBean=new DetalleActivoFijoSessionBean();
			}

			if(this.jInternalFrameDetalleFormDetalleActivoFijo.movimientoactivofijoSessionBean==null) {
				this.jInternalFrameDetalleFormDetalleActivoFijo.movimientoactivofijoSessionBean=new MovimientoActivoFijoSessionBean();
			}

			this.jInternalFrameDetalleFormDetalleActivoFijo.movimientoactivofijoSessionBean.setsPathNavegacionActual(detalleactivofijoSessionBean.getsPathNavegacionActual()+Constantes.SHTMLFLECHA+MovimientoActivoFijoConstantesFunciones.SCLASSWEBTITULO);
			this.jInternalFrameDetalleFormDetalleActivoFijo.movimientoactivofijoSessionBean.setisPermiteRecargarInformacion(false);
			isPaginaPopupMovimientoActivoFijo=this.jInternalFrameDetalleFormDetalleActivoFijo.movimientoactivofijoSessionBean.getisPaginaPopup();
			this.jInternalFrameDetalleFormDetalleActivoFijo.movimientoactivofijoSessionBean.setisPermiteNavegacionHaciaForeignKeyDesdeMovimientoActivoFijo(true);
			this.jInternalFrameDetalleFormDetalleActivoFijo.movimientoactivofijoSessionBean.setsNombrePaginaNavegacionHaciaForeignKeyDesdeMovimientoActivoFijo(DetalleActivoFijoConstantesFunciones.SNOMBREOPCION);
			this.jInternalFrameDetalleFormDetalleActivoFijo.movimientoactivofijoSessionBean.setisBusquedaDesdeForeignKeySesionDetalleActivoFijoDestino(true);
			this.jInternalFrameDetalleFormDetalleActivoFijo.movimientoactivofijoSessionBean.setlidDetalleActivoFijoDestinoActual(this.idDetalleActivoFijoActual);

			detalleactivofijoSessionBean.setisBusquedaDesdeForeignKeySesionForeignKeyDetalleActivoFijo(true);
			detalleactivofijoSessionBean.setlIdDetalleActivoFijoActualForeignKey(this.idDetalleActivoFijoActual);

			String strPagina=Constantes.SNONE;
			SistemaLogicAdditional sistemaLogicAdditional=new SistemaLogicAdditional();

			guardarDatosBusquedaSession();

		} catch(Exception e) {
			FuncionesSwing.manageException(this, e,logger);
		}

		return "";
	}

	public String registrarSesionDetalleActivoFijoParaVehiculos() throws Exception {
		Boolean isPaginaPopupVehiculo=false;

		try {

			if(this.detalleactivofijoSessionBean==null) {
				this.detalleactivofijoSessionBean=new DetalleActivoFijoSessionBean();
			}

			if(this.jInternalFrameDetalleFormDetalleActivoFijo.vehiculoSessionBean==null) {
				this.jInternalFrameDetalleFormDetalleActivoFijo.vehiculoSessionBean=new VehiculoSessionBean();
			}

			this.jInternalFrameDetalleFormDetalleActivoFijo.vehiculoSessionBean.setsPathNavegacionActual(detalleactivofijoSessionBean.getsPathNavegacionActual()+Constantes.SHTMLFLECHA+VehiculoConstantesFunciones.SCLASSWEBTITULO);
			this.jInternalFrameDetalleFormDetalleActivoFijo.vehiculoSessionBean.setisPermiteRecargarInformacion(false);
			isPaginaPopupVehiculo=this.jInternalFrameDetalleFormDetalleActivoFijo.vehiculoSessionBean.getisPaginaPopup();
			this.jInternalFrameDetalleFormDetalleActivoFijo.vehiculoSessionBean.setisPermiteNavegacionHaciaForeignKeyDesdeVehiculo(true);
			this.jInternalFrameDetalleFormDetalleActivoFijo.vehiculoSessionBean.setsNombrePaginaNavegacionHaciaForeignKeyDesdeVehiculo(DetalleActivoFijoConstantesFunciones.SNOMBREOPCION);
			this.jInternalFrameDetalleFormDetalleActivoFijo.vehiculoSessionBean.setisBusquedaDesdeForeignKeySesionDetalleActivoFijo(true);
			this.jInternalFrameDetalleFormDetalleActivoFijo.vehiculoSessionBean.setlidDetalleActivoFijoActual(this.idDetalleActivoFijoActual);

			detalleactivofijoSessionBean.setisBusquedaDesdeForeignKeySesionForeignKeyDetalleActivoFijo(true);
			detalleactivofijoSessionBean.setlIdDetalleActivoFijoActualForeignKey(this.idDetalleActivoFijoActual);

			String strPagina=Constantes.SNONE;
			SistemaLogicAdditional sistemaLogicAdditional=new SistemaLogicAdditional();

			guardarDatosBusquedaSession();

		} catch(Exception e) {
			FuncionesSwing.manageException(this, e,logger);
		}

		return "";
	}

	public String registrarSesionDetalleActivoFijoParaMetodoDepreciaciones() throws Exception {
		Boolean isPaginaPopupMetodoDepreciacion=false;

		try {

			if(this.detalleactivofijoSessionBean==null) {
				this.detalleactivofijoSessionBean=new DetalleActivoFijoSessionBean();
			}

			if(this.jInternalFrameDetalleFormDetalleActivoFijo.metododepreciacionSessionBean==null) {
				this.jInternalFrameDetalleFormDetalleActivoFijo.metododepreciacionSessionBean=new MetodoDepreciacionSessionBean();
			}

			this.jInternalFrameDetalleFormDetalleActivoFijo.metododepreciacionSessionBean.setsPathNavegacionActual(detalleactivofijoSessionBean.getsPathNavegacionActual()+Constantes.SHTMLFLECHA+MetodoDepreciacionConstantesFunciones.SCLASSWEBTITULO);
			this.jInternalFrameDetalleFormDetalleActivoFijo.metododepreciacionSessionBean.setisPermiteRecargarInformacion(false);
			isPaginaPopupMetodoDepreciacion=this.jInternalFrameDetalleFormDetalleActivoFijo.metododepreciacionSessionBean.getisPaginaPopup();
			this.jInternalFrameDetalleFormDetalleActivoFijo.metododepreciacionSessionBean.setisPermiteNavegacionHaciaForeignKeyDesdeMetodoDepreciacion(true);
			this.jInternalFrameDetalleFormDetalleActivoFijo.metododepreciacionSessionBean.setsNombrePaginaNavegacionHaciaForeignKeyDesdeMetodoDepreciacion(DetalleActivoFijoConstantesFunciones.SNOMBREOPCION);
			this.jInternalFrameDetalleFormDetalleActivoFijo.metododepreciacionSessionBean.setisBusquedaDesdeForeignKeySesionDetalleActivoFijo(true);
			this.jInternalFrameDetalleFormDetalleActivoFijo.metododepreciacionSessionBean.setlidDetalleActivoFijoActual(this.idDetalleActivoFijoActual);

			detalleactivofijoSessionBean.setisBusquedaDesdeForeignKeySesionForeignKeyDetalleActivoFijo(true);
			detalleactivofijoSessionBean.setlIdDetalleActivoFijoActualForeignKey(this.idDetalleActivoFijoActual);

			String strPagina=Constantes.SNONE;
			SistemaLogicAdditional sistemaLogicAdditional=new SistemaLogicAdditional();

			guardarDatosBusquedaSession();

		} catch(Exception e) {
			FuncionesSwing.manageException(this, e,logger);
		}

		return "";
	}

	public String registrarSesionDetalleActivoFijoParaResponsableActivoFijos() throws Exception {
		Boolean isPaginaPopupResponsableActivoFijo=false;

		try {

			if(this.detalleactivofijoSessionBean==null) {
				this.detalleactivofijoSessionBean=new DetalleActivoFijoSessionBean();
			}

			if(this.jInternalFrameDetalleFormDetalleActivoFijo.responsableactivofijoSessionBean==null) {
				this.jInternalFrameDetalleFormDetalleActivoFijo.responsableactivofijoSessionBean=new ResponsableActivoFijoSessionBean();
			}

			this.jInternalFrameDetalleFormDetalleActivoFijo.responsableactivofijoSessionBean.setsPathNavegacionActual(detalleactivofijoSessionBean.getsPathNavegacionActual()+Constantes.SHTMLFLECHA+ResponsableActivoFijoConstantesFunciones.SCLASSWEBTITULO);
			this.jInternalFrameDetalleFormDetalleActivoFijo.responsableactivofijoSessionBean.setisPermiteRecargarInformacion(false);
			isPaginaPopupResponsableActivoFijo=this.jInternalFrameDetalleFormDetalleActivoFijo.responsableactivofijoSessionBean.getisPaginaPopup();
			this.jInternalFrameDetalleFormDetalleActivoFijo.responsableactivofijoSessionBean.setisPermiteNavegacionHaciaForeignKeyDesdeResponsableActivoFijo(true);
			this.jInternalFrameDetalleFormDetalleActivoFijo.responsableactivofijoSessionBean.setsNombrePaginaNavegacionHaciaForeignKeyDesdeResponsableActivoFijo(DetalleActivoFijoConstantesFunciones.SNOMBREOPCION);
			this.jInternalFrameDetalleFormDetalleActivoFijo.responsableactivofijoSessionBean.setisBusquedaDesdeForeignKeySesionDetalleActivoFijo(true);
			this.jInternalFrameDetalleFormDetalleActivoFijo.responsableactivofijoSessionBean.setlidDetalleActivoFijoActual(this.idDetalleActivoFijoActual);

			detalleactivofijoSessionBean.setisBusquedaDesdeForeignKeySesionForeignKeyDetalleActivoFijo(true);
			detalleactivofijoSessionBean.setlIdDetalleActivoFijoActualForeignKey(this.idDetalleActivoFijoActual);

			String strPagina=Constantes.SNONE;
			SistemaLogicAdditional sistemaLogicAdditional=new SistemaLogicAdditional();

			guardarDatosBusquedaSession();

		} catch(Exception e) {
			FuncionesSwing.manageException(this, e,logger);
		}

		return "";
	}

	public String registrarSesionDetalleActivoFijoParaDepreciacionActivoFijos() throws Exception {
		Boolean isPaginaPopupDepreciacionActivoFijo=false;

		try {

			if(this.detalleactivofijoSessionBean==null) {
				this.detalleactivofijoSessionBean=new DetalleActivoFijoSessionBean();
			}

			if(this.jInternalFrameDetalleFormDetalleActivoFijo.depreciacionactivofijoSessionBean==null) {
				this.jInternalFrameDetalleFormDetalleActivoFijo.depreciacionactivofijoSessionBean=new DepreciacionActivoFijoSessionBean();
			}

			this.jInternalFrameDetalleFormDetalleActivoFijo.depreciacionactivofijoSessionBean.setsPathNavegacionActual(detalleactivofijoSessionBean.getsPathNavegacionActual()+Constantes.SHTMLFLECHA+DepreciacionActivoFijoConstantesFunciones.SCLASSWEBTITULO);
			this.jInternalFrameDetalleFormDetalleActivoFijo.depreciacionactivofijoSessionBean.setisPermiteRecargarInformacion(false);
			isPaginaPopupDepreciacionActivoFijo=this.jInternalFrameDetalleFormDetalleActivoFijo.depreciacionactivofijoSessionBean.getisPaginaPopup();
			this.jInternalFrameDetalleFormDetalleActivoFijo.depreciacionactivofijoSessionBean.setisPermiteNavegacionHaciaForeignKeyDesdeDepreciacionActivoFijo(true);
			this.jInternalFrameDetalleFormDetalleActivoFijo.depreciacionactivofijoSessionBean.setsNombrePaginaNavegacionHaciaForeignKeyDesdeDepreciacionActivoFijo(DetalleActivoFijoConstantesFunciones.SNOMBREOPCION);
			this.jInternalFrameDetalleFormDetalleActivoFijo.depreciacionactivofijoSessionBean.setisBusquedaDesdeForeignKeySesionDetalleActivoFijo(true);
			this.jInternalFrameDetalleFormDetalleActivoFijo.depreciacionactivofijoSessionBean.setlidDetalleActivoFijoActual(this.idDetalleActivoFijoActual);

			detalleactivofijoSessionBean.setisBusquedaDesdeForeignKeySesionForeignKeyDetalleActivoFijo(true);
			detalleactivofijoSessionBean.setlIdDetalleActivoFijoActualForeignKey(this.idDetalleActivoFijoActual);

			String strPagina=Constantes.SNONE;
			SistemaLogicAdditional sistemaLogicAdditional=new SistemaLogicAdditional();

			guardarDatosBusquedaSession();

		} catch(Exception e) {
			FuncionesSwing.manageException(this, e,logger);
		}

		return "";
	}

	public String registrarSesionDetalleActivoFijoParaGastoDepreciacionCentroCostos() throws Exception {
		Boolean isPaginaPopupGastoDepreciacionCentroCosto=false;

		try {

			if(this.detalleactivofijoSessionBean==null) {
				this.detalleactivofijoSessionBean=new DetalleActivoFijoSessionBean();
			}

			if(this.jInternalFrameDetalleFormDetalleActivoFijo.gastodepreciacioncentrocostoSessionBean==null) {
				this.jInternalFrameDetalleFormDetalleActivoFijo.gastodepreciacioncentrocostoSessionBean=new GastoDepreciacionCentroCostoSessionBean();
			}

			this.jInternalFrameDetalleFormDetalleActivoFijo.gastodepreciacioncentrocostoSessionBean.setsPathNavegacionActual(detalleactivofijoSessionBean.getsPathNavegacionActual()+Constantes.SHTMLFLECHA+GastoDepreciacionCentroCostoConstantesFunciones.SCLASSWEBTITULO);
			this.jInternalFrameDetalleFormDetalleActivoFijo.gastodepreciacioncentrocostoSessionBean.setisPermiteRecargarInformacion(false);
			isPaginaPopupGastoDepreciacionCentroCosto=this.jInternalFrameDetalleFormDetalleActivoFijo.gastodepreciacioncentrocostoSessionBean.getisPaginaPopup();
			this.jInternalFrameDetalleFormDetalleActivoFijo.gastodepreciacioncentrocostoSessionBean.setisPermiteNavegacionHaciaForeignKeyDesdeGastoDepreciacionCentroCosto(true);
			this.jInternalFrameDetalleFormDetalleActivoFijo.gastodepreciacioncentrocostoSessionBean.setsNombrePaginaNavegacionHaciaForeignKeyDesdeGastoDepreciacionCentroCosto(DetalleActivoFijoConstantesFunciones.SNOMBREOPCION);
			this.jInternalFrameDetalleFormDetalleActivoFijo.gastodepreciacioncentrocostoSessionBean.setisBusquedaDesdeForeignKeySesionDetalleActivoFijo(true);
			this.jInternalFrameDetalleFormDetalleActivoFijo.gastodepreciacioncentrocostoSessionBean.setlidDetalleActivoFijoActual(this.idDetalleActivoFijoActual);

			detalleactivofijoSessionBean.setisBusquedaDesdeForeignKeySesionForeignKeyDetalleActivoFijo(true);
			detalleactivofijoSessionBean.setlIdDetalleActivoFijoActualForeignKey(this.idDetalleActivoFijoActual);

			String strPagina=Constantes.SNONE;
			SistemaLogicAdditional sistemaLogicAdditional=new SistemaLogicAdditional();

			guardarDatosBusquedaSession();

		} catch(Exception e) {
			FuncionesSwing.manageException(this, e,logger);
		}

		return "";
	}

	public String registrarSesionDetalleActivoFijoParaParteActivoFijos() throws Exception {
		Boolean isPaginaPopupParteActivoFijo=false;

		try {

			if(this.detalleactivofijoSessionBean==null) {
				this.detalleactivofijoSessionBean=new DetalleActivoFijoSessionBean();
			}

			if(this.jInternalFrameDetalleFormDetalleActivoFijo.parteactivofijoSessionBean==null) {
				this.jInternalFrameDetalleFormDetalleActivoFijo.parteactivofijoSessionBean=new ParteActivoFijoSessionBean();
			}

			this.jInternalFrameDetalleFormDetalleActivoFijo.parteactivofijoSessionBean.setsPathNavegacionActual(detalleactivofijoSessionBean.getsPathNavegacionActual()+Constantes.SHTMLFLECHA+ParteActivoFijoConstantesFunciones.SCLASSWEBTITULO);
			this.jInternalFrameDetalleFormDetalleActivoFijo.parteactivofijoSessionBean.setisPermiteRecargarInformacion(false);
			isPaginaPopupParteActivoFijo=this.jInternalFrameDetalleFormDetalleActivoFijo.parteactivofijoSessionBean.getisPaginaPopup();
			this.jInternalFrameDetalleFormDetalleActivoFijo.parteactivofijoSessionBean.setisPermiteNavegacionHaciaForeignKeyDesdeParteActivoFijo(true);
			this.jInternalFrameDetalleFormDetalleActivoFijo.parteactivofijoSessionBean.setsNombrePaginaNavegacionHaciaForeignKeyDesdeParteActivoFijo(DetalleActivoFijoConstantesFunciones.SNOMBREOPCION);
			this.jInternalFrameDetalleFormDetalleActivoFijo.parteactivofijoSessionBean.setisBusquedaDesdeForeignKeySesionDetalleActivoFijo(true);
			this.jInternalFrameDetalleFormDetalleActivoFijo.parteactivofijoSessionBean.setlidDetalleActivoFijoActual(this.idDetalleActivoFijoActual);

			detalleactivofijoSessionBean.setisBusquedaDesdeForeignKeySesionForeignKeyDetalleActivoFijo(true);
			detalleactivofijoSessionBean.setlIdDetalleActivoFijoActualForeignKey(this.idDetalleActivoFijoActual);

			String strPagina=Constantes.SNONE;
			SistemaLogicAdditional sistemaLogicAdditional=new SistemaLogicAdditional();

			guardarDatosBusquedaSession();

		} catch(Exception e) {
			FuncionesSwing.manageException(this, e,logger);
		}

		return "";
	}
	
	

	public String registrarSesionDetalleActivoFijoParaBusquedaClientes() throws Exception {
		Boolean isPaginaPopupCliente=false;

		try {

			if(detalleactivofijoSessionBean==null) {
				detalleactivofijoSessionBean=new DetalleActivoFijoSessionBean();
			}

			if(clienteSessionBean==null) {
				clienteSessionBean=new ClienteSessionBean();
			}

			clienteSessionBean.setsPathNavegacionActual(detalleactivofijoSessionBean.getsPathNavegacionActual()+Constantes.SHTMLFLECHA+ClienteConstantesFunciones.SCLASSWEBTITULO);
			clienteSessionBean.setisPermiteRecargarInformacion(false);
			clienteSessionBean.setisPaginaPopup(true);
			isPaginaPopupCliente=clienteSessionBean.getisPaginaPopup();
			clienteSessionBean.setisPaginaPopup(false);
			clienteSessionBean.setEstaModoBusqueda(true);
			clienteSessionBean.setsFuncionBusquedaRapida("window.opener.detalleactivofijoFuncionGeneral.setCombosCodigoDesdeBusquedaid_cliente(TO_REPLACE);");
			clienteSessionBean.setisPermiteNavegacionHaciaForeignKeyDesdeCliente(true);
			clienteSessionBean.setsNombrePaginaNavegacionHaciaForeignKeyDesdeCliente(DetalleActivoFijoConstantesFunciones.SNOMBREOPCION);
			//clienteSessionBean.setisBusquedaDesdeForeignKeySesionDetalleActivoFijo(true);
			//clienteSessionBean.setlidDetalleActivoFijoActual(this.idDetalleActivoFijoActual);

			detalleactivofijoSessionBean.setisBusquedaDesdeForeignKeySesionForeignKeyDetalleActivoFijo(true);
			detalleactivofijoSessionBean.setlIdDetalleActivoFijoActualForeignKey(this.idDetalleActivoFijoActual);

			String strPagina=Constantes.SNONE;
			SistemaLogicAdditional sistemaLogicAdditional=new SistemaLogicAdditional();

			guardarDatosBusquedaSession();

		} catch(Exception e) {
			FuncionesSwing.manageException(this, e,logger);
		}
			return "";
	}
	
	
	public void guardarDatosBusquedaSession() throws Exception {
		
		//DetalleActivoFijoSessionBean detalleactivofijoSessionBean=new DetalleActivoFijoSessionBean();
		
		if(this.detalleactivofijoSessionBean==null) {
			this.detalleactivofijoSessionBean=new DetalleActivoFijoSessionBean();
		}
		
		this.detalleactivofijoSessionBean.setsUltimaBusquedaDetalleActivoFijo(this.getsAccionBusqueda());
		this.detalleactivofijoSessionBean.setiNumeroPaginacion(this.getiNumeroPaginacion());
		this.detalleactivofijoSessionBean.setiNumeroPaginacionPagina(this.getiNumeroPaginacionPagina());
		
		if(this.getsAccionBusqueda().equals("Todos")) {
			;
		}
		

		else if(this.getsAccionBusqueda().equals("FK_IdCliente")) {
			detalleactivofijoSessionBean.setid_cliente(this.getid_clienteFK_IdCliente());	
		}
		else if(this.getsAccionBusqueda().equals("FK_IdDetalleGrupoActivoFijo")) {
			detalleactivofijoSessionBean.setid_detalle_grupo_activo_fijo(this.getid_detalle_grupo_activo_fijoFK_IdDetalleGrupoActivoFijo());	
		}
		else if(this.getsAccionBusqueda().equals("FK_IdEmpresa")) {
			detalleactivofijoSessionBean.setid_empresa(this.getid_empresaFK_IdEmpresa());	
		}
		else if(this.getsAccionBusqueda().equals("FK_IdEstadoActivoFijo")) {
			detalleactivofijoSessionBean.setid_estado_activo_fijo(this.getid_estado_activo_fijoFK_IdEstadoActivoFijo());	
		}
		else if(this.getsAccionBusqueda().equals("FK_IdPartidaPresu")) {
			detalleactivofijoSessionBean.setid_partida_presu(this.getid_partida_presuFK_IdPartidaPresu());	
		}
		else if(this.getsAccionBusqueda().equals("FK_IdSubGrupoActivoFijo")) {
			detalleactivofijoSessionBean.setid_sub_grupo_activo_fijo(this.getid_sub_grupo_activo_fijoFK_IdSubGrupoActivoFijo());	
		}
		else if(this.getsAccionBusqueda().equals("FK_IdSucursal")) {
			detalleactivofijoSessionBean.setid_sucursal(this.getid_sucursalFK_IdSucursal());	
		}
		else if(this.getsAccionBusqueda().equals("FK_IdTipoActivoFijoEmpresa")) {
			detalleactivofijoSessionBean.setid_tipo_activo_fijo_empresa(this.getid_tipo_activo_fijo_empresaFK_IdTipoActivoFijoEmpresa());	
		}
		else if(this.getsAccionBusqueda().equals("FK_IdTipoDepreciacionEmpresa")) {
			detalleactivofijoSessionBean.setid_tipo_depreciacion_empresa(this.getid_tipo_depreciacion_empresaFK_IdTipoDepreciacionEmpresa());	
		}
		else if(this.getsAccionBusqueda().equals("FK_IdTipoRamoActivoFijo")) {
			detalleactivofijoSessionBean.setid_tipo_ramo_activo_fijo(this.getid_tipo_ramo_activo_fijoFK_IdTipoRamoActivoFijo());	
		}
		
	}
	
	public void traerDatosBusquedaDesdeSession() throws Exception {
		//DetalleActivoFijoSessionBean detalleactivofijoSessionBean=new DetalleActivoFijoSessionBean();
		
		if(this.detalleactivofijoSessionBean==null) {
			this.detalleactivofijoSessionBean=new DetalleActivoFijoSessionBean();
		}
		
		if(this.detalleactivofijoSessionBean.getsUltimaBusquedaDetalleActivoFijo()!=null&&!this.detalleactivofijoSessionBean.getsUltimaBusquedaDetalleActivoFijo().equals("")) {
			this.setsAccionBusqueda(detalleactivofijoSessionBean.getsUltimaBusquedaDetalleActivoFijo());
			this.setiNumeroPaginacion(detalleactivofijoSessionBean.getiNumeroPaginacion());
			this.setiNumeroPaginacionPagina(detalleactivofijoSessionBean.getiNumeroPaginacionPagina());		
				
			if(this.getsAccionBusqueda().equals("Todos")) {
				;
			}
			

			 else if(this.getsAccionBusqueda().equals("FK_IdCliente")) {
				this.setid_clienteFK_IdCliente(detalleactivofijoSessionBean.getid_cliente());
				detalleactivofijoSessionBean.setid_cliente(-1L);
			}
			 else if(this.getsAccionBusqueda().equals("FK_IdDetalleGrupoActivoFijo")) {
				this.setid_detalle_grupo_activo_fijoFK_IdDetalleGrupoActivoFijo(detalleactivofijoSessionBean.getid_detalle_grupo_activo_fijo());
				detalleactivofijoSessionBean.setid_detalle_grupo_activo_fijo(-1L);
			}
			 else if(this.getsAccionBusqueda().equals("FK_IdEmpresa")) {
				this.setid_empresaFK_IdEmpresa(detalleactivofijoSessionBean.getid_empresa());
				detalleactivofijoSessionBean.setid_empresa(-1L);
			}
			 else if(this.getsAccionBusqueda().equals("FK_IdEstadoActivoFijo")) {
				this.setid_estado_activo_fijoFK_IdEstadoActivoFijo(detalleactivofijoSessionBean.getid_estado_activo_fijo());
				detalleactivofijoSessionBean.setid_estado_activo_fijo(-1L);
			}
			 else if(this.getsAccionBusqueda().equals("FK_IdPartidaPresu")) {
				this.setid_partida_presuFK_IdPartidaPresu(detalleactivofijoSessionBean.getid_partida_presu());
				detalleactivofijoSessionBean.setid_partida_presu(-1L);
			}
			 else if(this.getsAccionBusqueda().equals("FK_IdSubGrupoActivoFijo")) {
				this.setid_sub_grupo_activo_fijoFK_IdSubGrupoActivoFijo(detalleactivofijoSessionBean.getid_sub_grupo_activo_fijo());
				detalleactivofijoSessionBean.setid_sub_grupo_activo_fijo(-1L);
			}
			 else if(this.getsAccionBusqueda().equals("FK_IdSucursal")) {
				this.setid_sucursalFK_IdSucursal(detalleactivofijoSessionBean.getid_sucursal());
				detalleactivofijoSessionBean.setid_sucursal(-1L);
			}
			 else if(this.getsAccionBusqueda().equals("FK_IdTipoActivoFijoEmpresa")) {
				this.setid_tipo_activo_fijo_empresaFK_IdTipoActivoFijoEmpresa(detalleactivofijoSessionBean.getid_tipo_activo_fijo_empresa());
				detalleactivofijoSessionBean.setid_tipo_activo_fijo_empresa(-1L);
			}
			 else if(this.getsAccionBusqueda().equals("FK_IdTipoDepreciacionEmpresa")) {
				this.setid_tipo_depreciacion_empresaFK_IdTipoDepreciacionEmpresa(detalleactivofijoSessionBean.getid_tipo_depreciacion_empresa());
				detalleactivofijoSessionBean.setid_tipo_depreciacion_empresa(-1L);
			}
			 else if(this.getsAccionBusqueda().equals("FK_IdTipoRamoActivoFijo")) {
				this.setid_tipo_ramo_activo_fijoFK_IdTipoRamoActivoFijo(detalleactivofijoSessionBean.getid_tipo_ramo_activo_fijo());
				detalleactivofijoSessionBean.setid_tipo_ramo_activo_fijo(-1L);
			}
		}
		
		this.detalleactivofijoSessionBean.setsUltimaBusquedaDetalleActivoFijo("");
		this.detalleactivofijoSessionBean.setiNumeroPaginacion(DetalleActivoFijoConstantesFunciones.INUMEROPAGINACION);
		this.detalleactivofijoSessionBean.setiNumeroPaginacionPagina(0);
		
	}
	
	public void procesoActualizarFilaTotales(Boolean esCampoValor,String sTipo) {
		try {
			this.actualizarFilaTotales();
				
			this.traerValoresTablaTotales();
			
			this.inicializarActualizarBindingTablaDetalleActivoFijo(false);
			
			
			
			
		} catch (Exception e) {
			e.printStackTrace();
		}
	}
	
	
	public void updateBusquedasFormularioDetalleActivoFijo() {
		this.updateBorderResaltarBusquedasFormularioDetalleActivoFijo();
		this.updateVisibilidadBusquedasFormularioDetalleActivoFijo();
		this.updateHabilitarBusquedasFormularioDetalleActivoFijo();
	}
	
	public void updateBorderResaltarBusquedasFormularioDetalleActivoFijo() {					
	//BYDAN_BUSQUEDAS
		
	int index=0;
		
	if(this.jTabbedPaneBusquedasDetalleActivoFijo.getComponents().length>0) {
	

		if(this.detalleactivofijoConstantesFunciones.resaltarFK_IdClienteDetalleActivoFijo!=null) {
			index= this.jTabbedPaneBusquedasDetalleActivoFijo.indexOfComponent(this.jPanelFK_IdClienteDetalleActivoFijo);
			if(index>-1) {
				JPanel jPanel=(JPanel)this.jTabbedPaneBusquedasDetalleActivoFijo.getComponent(index);
				jPanel.setBorder(this.detalleactivofijoConstantesFunciones.resaltarFK_IdClienteDetalleActivoFijo);
			}
		}

		if(this.detalleactivofijoConstantesFunciones.resaltarFK_IdDetalleGrupoActivoFijoDetalleActivoFijo!=null) {
			index= this.jTabbedPaneBusquedasDetalleActivoFijo.indexOfComponent(this.jPanelFK_IdDetalleGrupoActivoFijoDetalleActivoFijo);
			if(index>-1) {
				JPanel jPanel=(JPanel)this.jTabbedPaneBusquedasDetalleActivoFijo.getComponent(index);
				jPanel.setBorder(this.detalleactivofijoConstantesFunciones.resaltarFK_IdDetalleGrupoActivoFijoDetalleActivoFijo);
			}
		}

		if(this.detalleactivofijoConstantesFunciones.resaltarFK_IdEstadoActivoFijoDetalleActivoFijo!=null) {
			index= this.jTabbedPaneBusquedasDetalleActivoFijo.indexOfComponent(this.jPanelFK_IdEstadoActivoFijoDetalleActivoFijo);
			if(index>-1) {
				JPanel jPanel=(JPanel)this.jTabbedPaneBusquedasDetalleActivoFijo.getComponent(index);
				jPanel.setBorder(this.detalleactivofijoConstantesFunciones.resaltarFK_IdEstadoActivoFijoDetalleActivoFijo);
			}
		}

		if(this.detalleactivofijoConstantesFunciones.resaltarFK_IdPartidaPresuDetalleActivoFijo!=null) {
			index= this.jTabbedPaneBusquedasDetalleActivoFijo.indexOfComponent(this.jPanelFK_IdPartidaPresuDetalleActivoFijo);
			if(index>-1) {
				JPanel jPanel=(JPanel)this.jTabbedPaneBusquedasDetalleActivoFijo.getComponent(index);
				jPanel.setBorder(this.detalleactivofijoConstantesFunciones.resaltarFK_IdPartidaPresuDetalleActivoFijo);
			}
		}

		if(this.detalleactivofijoConstantesFunciones.resaltarFK_IdSubGrupoActivoFijoDetalleActivoFijo!=null) {
			index= this.jTabbedPaneBusquedasDetalleActivoFijo.indexOfComponent(this.jPanelFK_IdSubGrupoActivoFijoDetalleActivoFijo);
			if(index>-1) {
				JPanel jPanel=(JPanel)this.jTabbedPaneBusquedasDetalleActivoFijo.getComponent(index);
				jPanel.setBorder(this.detalleactivofijoConstantesFunciones.resaltarFK_IdSubGrupoActivoFijoDetalleActivoFijo);
			}
		}

		if(this.detalleactivofijoConstantesFunciones.resaltarFK_IdTipoActivoFijoEmpresaDetalleActivoFijo!=null) {
			index= this.jTabbedPaneBusquedasDetalleActivoFijo.indexOfComponent(this.jPanelFK_IdTipoActivoFijoEmpresaDetalleActivoFijo);
			if(index>-1) {
				JPanel jPanel=(JPanel)this.jTabbedPaneBusquedasDetalleActivoFijo.getComponent(index);
				jPanel.setBorder(this.detalleactivofijoConstantesFunciones.resaltarFK_IdTipoActivoFijoEmpresaDetalleActivoFijo);
			}
		}

		if(this.detalleactivofijoConstantesFunciones.resaltarFK_IdTipoDepreciacionEmpresaDetalleActivoFijo!=null) {
			index= this.jTabbedPaneBusquedasDetalleActivoFijo.indexOfComponent(this.jPanelFK_IdTipoDepreciacionEmpresaDetalleActivoFijo);
			if(index>-1) {
				JPanel jPanel=(JPanel)this.jTabbedPaneBusquedasDetalleActivoFijo.getComponent(index);
				jPanel.setBorder(this.detalleactivofijoConstantesFunciones.resaltarFK_IdTipoDepreciacionEmpresaDetalleActivoFijo);
			}
		}

		if(this.detalleactivofijoConstantesFunciones.resaltarFK_IdTipoRamoActivoFijoDetalleActivoFijo!=null) {
			index= this.jTabbedPaneBusquedasDetalleActivoFijo.indexOfComponent(this.jPanelFK_IdTipoRamoActivoFijoDetalleActivoFijo);
			if(index>-1) {
				JPanel jPanel=(JPanel)this.jTabbedPaneBusquedasDetalleActivoFijo.getComponent(index);
				jPanel.setBorder(this.detalleactivofijoConstantesFunciones.resaltarFK_IdTipoRamoActivoFijoDetalleActivoFijo);
			}
		}
	}	
	
	}
	
	public void updateVisibilidadBusquedasFormularioDetalleActivoFijo() {
	//BYDAN_BUSQUEDAS
	
	int index=0;
	JPanel jPanel=null;
		
	if(this.jTabbedPaneBusquedasDetalleActivoFijo.getComponents().length>0) {
	

			index= this.jTabbedPaneBusquedasDetalleActivoFijo.indexOfComponent(this.jPanelFK_IdClienteDetalleActivoFijo);
			jPanel=(JPanel)this.jTabbedPaneBusquedasDetalleActivoFijo.getComponent(index);
			//NO VALE SOLO PONIENDO VISIBLE=FALSE, HAY QUE USAR REMOVE
			jPanel.setVisible(this.detalleactivofijoConstantesFunciones.mostrarFK_IdClienteDetalleActivoFijo);
			if(!this.detalleactivofijoConstantesFunciones.mostrarFK_IdClienteDetalleActivoFijo && index>-1) {
				this.jTabbedPaneBusquedasDetalleActivoFijo.remove(index);
			}

			index= this.jTabbedPaneBusquedasDetalleActivoFijo.indexOfComponent(this.jPanelFK_IdDetalleGrupoActivoFijoDetalleActivoFijo);
			jPanel=(JPanel)this.jTabbedPaneBusquedasDetalleActivoFijo.getComponent(index);
			//NO VALE SOLO PONIENDO VISIBLE=FALSE, HAY QUE USAR REMOVE
			jPanel.setVisible(this.detalleactivofijoConstantesFunciones.mostrarFK_IdDetalleGrupoActivoFijoDetalleActivoFijo);
			if(!this.detalleactivofijoConstantesFunciones.mostrarFK_IdDetalleGrupoActivoFijoDetalleActivoFijo && index>-1) {
				this.jTabbedPaneBusquedasDetalleActivoFijo.remove(index);
			}

			index= this.jTabbedPaneBusquedasDetalleActivoFijo.indexOfComponent(this.jPanelFK_IdEstadoActivoFijoDetalleActivoFijo);
			jPanel=(JPanel)this.jTabbedPaneBusquedasDetalleActivoFijo.getComponent(index);
			//NO VALE SOLO PONIENDO VISIBLE=FALSE, HAY QUE USAR REMOVE
			jPanel.setVisible(this.detalleactivofijoConstantesFunciones.mostrarFK_IdEstadoActivoFijoDetalleActivoFijo);
			if(!this.detalleactivofijoConstantesFunciones.mostrarFK_IdEstadoActivoFijoDetalleActivoFijo && index>-1) {
				this.jTabbedPaneBusquedasDetalleActivoFijo.remove(index);
			}

			index= this.jTabbedPaneBusquedasDetalleActivoFijo.indexOfComponent(this.jPanelFK_IdPartidaPresuDetalleActivoFijo);
			jPanel=(JPanel)this.jTabbedPaneBusquedasDetalleActivoFijo.getComponent(index);
			//NO VALE SOLO PONIENDO VISIBLE=FALSE, HAY QUE USAR REMOVE
			jPanel.setVisible(this.detalleactivofijoConstantesFunciones.mostrarFK_IdPartidaPresuDetalleActivoFijo);
			if(!this.detalleactivofijoConstantesFunciones.mostrarFK_IdPartidaPresuDetalleActivoFijo && index>-1) {
				this.jTabbedPaneBusquedasDetalleActivoFijo.remove(index);
			}

			index= this.jTabbedPaneBusquedasDetalleActivoFijo.indexOfComponent(this.jPanelFK_IdSubGrupoActivoFijoDetalleActivoFijo);
			jPanel=(JPanel)this.jTabbedPaneBusquedasDetalleActivoFijo.getComponent(index);
			//NO VALE SOLO PONIENDO VISIBLE=FALSE, HAY QUE USAR REMOVE
			jPanel.setVisible(this.detalleactivofijoConstantesFunciones.mostrarFK_IdSubGrupoActivoFijoDetalleActivoFijo);
			if(!this.detalleactivofijoConstantesFunciones.mostrarFK_IdSubGrupoActivoFijoDetalleActivoFijo && index>-1) {
				this.jTabbedPaneBusquedasDetalleActivoFijo.remove(index);
			}

			index= this.jTabbedPaneBusquedasDetalleActivoFijo.indexOfComponent(this.jPanelFK_IdTipoActivoFijoEmpresaDetalleActivoFijo);
			jPanel=(JPanel)this.jTabbedPaneBusquedasDetalleActivoFijo.getComponent(index);
			//NO VALE SOLO PONIENDO VISIBLE=FALSE, HAY QUE USAR REMOVE
			jPanel.setVisible(this.detalleactivofijoConstantesFunciones.mostrarFK_IdTipoActivoFijoEmpresaDetalleActivoFijo);
			if(!this.detalleactivofijoConstantesFunciones.mostrarFK_IdTipoActivoFijoEmpresaDetalleActivoFijo && index>-1) {
				this.jTabbedPaneBusquedasDetalleActivoFijo.remove(index);
			}

			index= this.jTabbedPaneBusquedasDetalleActivoFijo.indexOfComponent(this.jPanelFK_IdTipoDepreciacionEmpresaDetalleActivoFijo);
			jPanel=(JPanel)this.jTabbedPaneBusquedasDetalleActivoFijo.getComponent(index);
			//NO VALE SOLO PONIENDO VISIBLE=FALSE, HAY QUE USAR REMOVE
			jPanel.setVisible(this.detalleactivofijoConstantesFunciones.mostrarFK_IdTipoDepreciacionEmpresaDetalleActivoFijo);
			if(!this.detalleactivofijoConstantesFunciones.mostrarFK_IdTipoDepreciacionEmpresaDetalleActivoFijo && index>-1) {
				this.jTabbedPaneBusquedasDetalleActivoFijo.remove(index);
			}

			index= this.jTabbedPaneBusquedasDetalleActivoFijo.indexOfComponent(this.jPanelFK_IdTipoRamoActivoFijoDetalleActivoFijo);
			jPanel=(JPanel)this.jTabbedPaneBusquedasDetalleActivoFijo.getComponent(index);
			//NO VALE SOLO PONIENDO VISIBLE=FALSE, HAY QUE USAR REMOVE
			jPanel.setVisible(this.detalleactivofijoConstantesFunciones.mostrarFK_IdTipoRamoActivoFijoDetalleActivoFijo);
			if(!this.detalleactivofijoConstantesFunciones.mostrarFK_IdTipoRamoActivoFijoDetalleActivoFijo && index>-1) {
				this.jTabbedPaneBusquedasDetalleActivoFijo.remove(index);
			}
	}	
	
	}
	
	public void updateHabilitarBusquedasFormularioDetalleActivoFijo() {
	
	//BYDAN_BUSQUEDAS		
		int index=0;
		JPanel jPanel=null;
			
		if(this.jTabbedPaneBusquedasDetalleActivoFijo.getComponents().length>0) {
	

			index= this.jTabbedPaneBusquedasDetalleActivoFijo.indexOfComponent(this.jPanelFK_IdClienteDetalleActivoFijo);
			if(index>-1) {
				jPanel=(JPanel)this.jTabbedPaneBusquedasDetalleActivoFijo.getComponent(index);
				//ENABLE PANE=FALSE NO FUNCIONA, ENABLEAT SI
				jPanel.setEnabled(this.detalleactivofijoConstantesFunciones.activarFK_IdClienteDetalleActivoFijo);
				this.jTabbedPaneBusquedasDetalleActivoFijo.setEnabledAt(index,this.detalleactivofijoConstantesFunciones.activarFK_IdClienteDetalleActivoFijo);
			}

			index= this.jTabbedPaneBusquedasDetalleActivoFijo.indexOfComponent(this.jPanelFK_IdDetalleGrupoActivoFijoDetalleActivoFijo);
			if(index>-1) {
				jPanel=(JPanel)this.jTabbedPaneBusquedasDetalleActivoFijo.getComponent(index);
				//ENABLE PANE=FALSE NO FUNCIONA, ENABLEAT SI
				jPanel.setEnabled(this.detalleactivofijoConstantesFunciones.activarFK_IdDetalleGrupoActivoFijoDetalleActivoFijo);
				this.jTabbedPaneBusquedasDetalleActivoFijo.setEnabledAt(index,this.detalleactivofijoConstantesFunciones.activarFK_IdDetalleGrupoActivoFijoDetalleActivoFijo);
			}

			index= this.jTabbedPaneBusquedasDetalleActivoFijo.indexOfComponent(this.jPanelFK_IdEstadoActivoFijoDetalleActivoFijo);
			if(index>-1) {
				jPanel=(JPanel)this.jTabbedPaneBusquedasDetalleActivoFijo.getComponent(index);
				//ENABLE PANE=FALSE NO FUNCIONA, ENABLEAT SI
				jPanel.setEnabled(this.detalleactivofijoConstantesFunciones.activarFK_IdEstadoActivoFijoDetalleActivoFijo);
				this.jTabbedPaneBusquedasDetalleActivoFijo.setEnabledAt(index,this.detalleactivofijoConstantesFunciones.activarFK_IdEstadoActivoFijoDetalleActivoFijo);
			}

			index= this.jTabbedPaneBusquedasDetalleActivoFijo.indexOfComponent(this.jPanelFK_IdPartidaPresuDetalleActivoFijo);
			if(index>-1) {
				jPanel=(JPanel)this.jTabbedPaneBusquedasDetalleActivoFijo.getComponent(index);
				//ENABLE PANE=FALSE NO FUNCIONA, ENABLEAT SI
				jPanel.setEnabled(this.detalleactivofijoConstantesFunciones.activarFK_IdPartidaPresuDetalleActivoFijo);
				this.jTabbedPaneBusquedasDetalleActivoFijo.setEnabledAt(index,this.detalleactivofijoConstantesFunciones.activarFK_IdPartidaPresuDetalleActivoFijo);
			}

			index= this.jTabbedPaneBusquedasDetalleActivoFijo.indexOfComponent(this.jPanelFK_IdSubGrupoActivoFijoDetalleActivoFijo);
			if(index>-1) {
				jPanel=(JPanel)this.jTabbedPaneBusquedasDetalleActivoFijo.getComponent(index);
				//ENABLE PANE=FALSE NO FUNCIONA, ENABLEAT SI
				jPanel.setEnabled(this.detalleactivofijoConstantesFunciones.activarFK_IdSubGrupoActivoFijoDetalleActivoFijo);
				this.jTabbedPaneBusquedasDetalleActivoFijo.setEnabledAt(index,this.detalleactivofijoConstantesFunciones.activarFK_IdSubGrupoActivoFijoDetalleActivoFijo);
			}

			index= this.jTabbedPaneBusquedasDetalleActivoFijo.indexOfComponent(this.jPanelFK_IdTipoActivoFijoEmpresaDetalleActivoFijo);
			if(index>-1) {
				jPanel=(JPanel)this.jTabbedPaneBusquedasDetalleActivoFijo.getComponent(index);
				//ENABLE PANE=FALSE NO FUNCIONA, ENABLEAT SI
				jPanel.setEnabled(this.detalleactivofijoConstantesFunciones.activarFK_IdTipoActivoFijoEmpresaDetalleActivoFijo);
				this.jTabbedPaneBusquedasDetalleActivoFijo.setEnabledAt(index,this.detalleactivofijoConstantesFunciones.activarFK_IdTipoActivoFijoEmpresaDetalleActivoFijo);
			}

			index= this.jTabbedPaneBusquedasDetalleActivoFijo.indexOfComponent(this.jPanelFK_IdTipoDepreciacionEmpresaDetalleActivoFijo);
			if(index>-1) {
				jPanel=(JPanel)this.jTabbedPaneBusquedasDetalleActivoFijo.getComponent(index);
				//ENABLE PANE=FALSE NO FUNCIONA, ENABLEAT SI
				jPanel.setEnabled(this.detalleactivofijoConstantesFunciones.activarFK_IdTipoDepreciacionEmpresaDetalleActivoFijo);
				this.jTabbedPaneBusquedasDetalleActivoFijo.setEnabledAt(index,this.detalleactivofijoConstantesFunciones.activarFK_IdTipoDepreciacionEmpresaDetalleActivoFijo);
			}

			index= this.jTabbedPaneBusquedasDetalleActivoFijo.indexOfComponent(this.jPanelFK_IdTipoRamoActivoFijoDetalleActivoFijo);
			if(index>-1) {
				jPanel=(JPanel)this.jTabbedPaneBusquedasDetalleActivoFijo.getComponent(index);
				//ENABLE PANE=FALSE NO FUNCIONA, ENABLEAT SI
				jPanel.setEnabled(this.detalleactivofijoConstantesFunciones.activarFK_IdTipoRamoActivoFijoDetalleActivoFijo);
				this.jTabbedPaneBusquedasDetalleActivoFijo.setEnabledAt(index,this.detalleactivofijoConstantesFunciones.activarFK_IdTipoRamoActivoFijoDetalleActivoFijo);
			}
		}	
	
	}
	
	
	public void resaltarPanelBusquedaDetalleActivoFijo(String sTipoBusqueda) {
		Boolean existe=false;
		//BYDAN_BUSQUEDAS
		
		int index=0;
		Border resaltar = Funciones2.getBorderResaltar(this.parametroGeneralUsuario,"TAB");

		if(sTipoBusqueda.equals("FK_IdCliente")) {
			index= this.jTabbedPaneBusquedasDetalleActivoFijo.indexOfComponent(this.jPanelFK_IdClienteDetalleActivoFijo);

			this.jTabbedPaneBusquedasDetalleActivoFijo.setSelectedIndex(index);

			JPanel jPanel=(JPanel)this.jTabbedPaneBusquedasDetalleActivoFijo.getComponent(index);

			this.detalleactivofijoConstantesFunciones.setResaltarFK_IdClienteDetalleActivoFijo(resaltar);

			jPanel.setBorder(this.detalleactivofijoConstantesFunciones.resaltarFK_IdClienteDetalleActivoFijo);
			existe=true;
		}
		else if(sTipoBusqueda.equals("FK_IdDetalleGrupoActivoFijo")) {
			index= this.jTabbedPaneBusquedasDetalleActivoFijo.indexOfComponent(this.jPanelFK_IdDetalleGrupoActivoFijoDetalleActivoFijo);

			this.jTabbedPaneBusquedasDetalleActivoFijo.setSelectedIndex(index);

			JPanel jPanel=(JPanel)this.jTabbedPaneBusquedasDetalleActivoFijo.getComponent(index);

			this.detalleactivofijoConstantesFunciones.setResaltarFK_IdDetalleGrupoActivoFijoDetalleActivoFijo(resaltar);

			jPanel.setBorder(this.detalleactivofijoConstantesFunciones.resaltarFK_IdDetalleGrupoActivoFijoDetalleActivoFijo);
			existe=true;
		}
		else if(sTipoBusqueda.equals("FK_IdEstadoActivoFijo")) {
			index= this.jTabbedPaneBusquedasDetalleActivoFijo.indexOfComponent(this.jPanelFK_IdEstadoActivoFijoDetalleActivoFijo);

			this.jTabbedPaneBusquedasDetalleActivoFijo.setSelectedIndex(index);

			JPanel jPanel=(JPanel)this.jTabbedPaneBusquedasDetalleActivoFijo.getComponent(index);

			this.detalleactivofijoConstantesFunciones.setResaltarFK_IdEstadoActivoFijoDetalleActivoFijo(resaltar);

			jPanel.setBorder(this.detalleactivofijoConstantesFunciones.resaltarFK_IdEstadoActivoFijoDetalleActivoFijo);
			existe=true;
		}
		else if(sTipoBusqueda.equals("FK_IdPartidaPresu")) {
			index= this.jTabbedPaneBusquedasDetalleActivoFijo.indexOfComponent(this.jPanelFK_IdPartidaPresuDetalleActivoFijo);

			this.jTabbedPaneBusquedasDetalleActivoFijo.setSelectedIndex(index);

			JPanel jPanel=(JPanel)this.jTabbedPaneBusquedasDetalleActivoFijo.getComponent(index);

			this.detalleactivofijoConstantesFunciones.setResaltarFK_IdPartidaPresuDetalleActivoFijo(resaltar);

			jPanel.setBorder(this.detalleactivofijoConstantesFunciones.resaltarFK_IdPartidaPresuDetalleActivoFijo);
			existe=true;
		}
		else if(sTipoBusqueda.equals("FK_IdSubGrupoActivoFijo")) {
			index= this.jTabbedPaneBusquedasDetalleActivoFijo.indexOfComponent(this.jPanelFK_IdSubGrupoActivoFijoDetalleActivoFijo);

			this.jTabbedPaneBusquedasDetalleActivoFijo.setSelectedIndex(index);

			JPanel jPanel=(JPanel)this.jTabbedPaneBusquedasDetalleActivoFijo.getComponent(index);

			this.detalleactivofijoConstantesFunciones.setResaltarFK_IdSubGrupoActivoFijoDetalleActivoFijo(resaltar);

			jPanel.setBorder(this.detalleactivofijoConstantesFunciones.resaltarFK_IdSubGrupoActivoFijoDetalleActivoFijo);
			existe=true;
		}
		else if(sTipoBusqueda.equals("FK_IdTipoActivoFijoEmpresa")) {
			index= this.jTabbedPaneBusquedasDetalleActivoFijo.indexOfComponent(this.jPanelFK_IdTipoActivoFijoEmpresaDetalleActivoFijo);

			this.jTabbedPaneBusquedasDetalleActivoFijo.setSelectedIndex(index);

			JPanel jPanel=(JPanel)this.jTabbedPaneBusquedasDetalleActivoFijo.getComponent(index);

			this.detalleactivofijoConstantesFunciones.setResaltarFK_IdTipoActivoFijoEmpresaDetalleActivoFijo(resaltar);

			jPanel.setBorder(this.detalleactivofijoConstantesFunciones.resaltarFK_IdTipoActivoFijoEmpresaDetalleActivoFijo);
			existe=true;
		}
		else if(sTipoBusqueda.equals("FK_IdTipoDepreciacionEmpresa")) {
			index= this.jTabbedPaneBusquedasDetalleActivoFijo.indexOfComponent(this.jPanelFK_IdTipoDepreciacionEmpresaDetalleActivoFijo);

			this.jTabbedPaneBusquedasDetalleActivoFijo.setSelectedIndex(index);

			JPanel jPanel=(JPanel)this.jTabbedPaneBusquedasDetalleActivoFijo.getComponent(index);

			this.detalleactivofijoConstantesFunciones.setResaltarFK_IdTipoDepreciacionEmpresaDetalleActivoFijo(resaltar);

			jPanel.setBorder(this.detalleactivofijoConstantesFunciones.resaltarFK_IdTipoDepreciacionEmpresaDetalleActivoFijo);
			existe=true;
		}
		else if(sTipoBusqueda.equals("FK_IdTipoRamoActivoFijo")) {
			index= this.jTabbedPaneBusquedasDetalleActivoFijo.indexOfComponent(this.jPanelFK_IdTipoRamoActivoFijoDetalleActivoFijo);

			this.jTabbedPaneBusquedasDetalleActivoFijo.setSelectedIndex(index);

			JPanel jPanel=(JPanel)this.jTabbedPaneBusquedasDetalleActivoFijo.getComponent(index);

			this.detalleactivofijoConstantesFunciones.setResaltarFK_IdTipoRamoActivoFijoDetalleActivoFijo(resaltar);

			jPanel.setBorder(this.detalleactivofijoConstantesFunciones.resaltarFK_IdTipoRamoActivoFijoDetalleActivoFijo);
			existe=true;
		}
		

		if(existe) {
			
			this.jTtoolBarDetalleActivoFijo.setBorder(resaltar);
			
		}
	}	
	
	//NO FUNCIONA
	public void windowClosed(WindowEvent e) {	
	}
		
	public void windowClosing(WindowEvent e) {	    	    
	}

	public void windowOpened(WindowEvent e) {	    
	}

	public void windowIconified(WindowEvent e) {	    
	}

	public void windowDeiconified(WindowEvent e) {	    
	}

	public void windowActivated(WindowEvent e) {	    
	}

	public void windowDeactivated(WindowEvent e) {	    
	}

	public void windowGainedFocus(WindowEvent e) {	    
	}

	public void windowLostFocus(WindowEvent e) {	    
	}
	
	public void updateControlesFormularioDetalleActivoFijo() throws Exception {

		if(this.jInternalFrameDetalleFormDetalleActivoFijo==null) { //if(!this.conCargarFormDetalle) {			
			this.inicializarFormDetalle();
		}
		
		this.updateBorderResaltarControlesFormularioDetalleActivoFijo();
		this.updateVisibilidadResaltarControlesFormularioDetalleActivoFijo();
		this.updateHabilitarResaltarControlesFormularioDetalleActivoFijo();
		
	}
	
	public void updateBorderResaltarControlesFormularioDetalleActivoFijo() throws Exception {
		if(this.jInternalFrameDetalleFormDetalleActivoFijo==null) { //if(!this.conCargarFormDetalle) {
			this.inicializarFormDetalle();
		}
		
	
		if(this.detalleactivofijoConstantesFunciones.resaltaridDetalleActivoFijo!=null && this.jInternalFrameDetalleFormDetalleActivoFijo!=null) {this.jInternalFrameDetalleFormDetalleActivoFijo.jLabelidDetalleActivoFijo.setBorder(this.detalleactivofijoConstantesFunciones.resaltaridDetalleActivoFijo);}
		if(this.detalleactivofijoConstantesFunciones.resaltarid_empresaDetalleActivoFijo!=null && this.jInternalFrameDetalleFormDetalleActivoFijo!=null) {this.jInternalFrameDetalleFormDetalleActivoFijo.jComboBoxid_empresaDetalleActivoFijo.setBorder(this.detalleactivofijoConstantesFunciones.resaltarid_empresaDetalleActivoFijo);}
		if(this.detalleactivofijoConstantesFunciones.resaltarid_sucursalDetalleActivoFijo!=null && this.jInternalFrameDetalleFormDetalleActivoFijo!=null) {this.jInternalFrameDetalleFormDetalleActivoFijo.jComboBoxid_sucursalDetalleActivoFijo.setBorder(this.detalleactivofijoConstantesFunciones.resaltarid_sucursalDetalleActivoFijo);}
		if(this.detalleactivofijoConstantesFunciones.resaltarid_detalle_grupo_activo_fijoDetalleActivoFijo!=null && this.jInternalFrameDetalleFormDetalleActivoFijo!=null) {this.jInternalFrameDetalleFormDetalleActivoFijo.jComboBoxid_detalle_grupo_activo_fijoDetalleActivoFijo.setBorder(this.detalleactivofijoConstantesFunciones.resaltarid_detalle_grupo_activo_fijoDetalleActivoFijo);}
		if(this.detalleactivofijoConstantesFunciones.resaltarid_sub_grupo_activo_fijoDetalleActivoFijo!=null && this.jInternalFrameDetalleFormDetalleActivoFijo!=null) {this.jInternalFrameDetalleFormDetalleActivoFijo.jComboBoxid_sub_grupo_activo_fijoDetalleActivoFijo.setBorder(this.detalleactivofijoConstantesFunciones.resaltarid_sub_grupo_activo_fijoDetalleActivoFijo);}
		if(this.detalleactivofijoConstantesFunciones.resaltarid_tipo_ramo_activo_fijoDetalleActivoFijo!=null && this.jInternalFrameDetalleFormDetalleActivoFijo!=null) {this.jInternalFrameDetalleFormDetalleActivoFijo.jComboBoxid_tipo_ramo_activo_fijoDetalleActivoFijo.setBorder(this.detalleactivofijoConstantesFunciones.resaltarid_tipo_ramo_activo_fijoDetalleActivoFijo);}
		if(this.detalleactivofijoConstantesFunciones.resaltarid_tipo_activo_fijo_empresaDetalleActivoFijo!=null && this.jInternalFrameDetalleFormDetalleActivoFijo!=null) {this.jInternalFrameDetalleFormDetalleActivoFijo.jComboBoxid_tipo_activo_fijo_empresaDetalleActivoFijo.setBorder(this.detalleactivofijoConstantesFunciones.resaltarid_tipo_activo_fijo_empresaDetalleActivoFijo);}
		if(this.detalleactivofijoConstantesFunciones.resaltarid_tipo_depreciacion_empresaDetalleActivoFijo!=null && this.jInternalFrameDetalleFormDetalleActivoFijo!=null) {this.jInternalFrameDetalleFormDetalleActivoFijo.jComboBoxid_tipo_depreciacion_empresaDetalleActivoFijo.setBorder(this.detalleactivofijoConstantesFunciones.resaltarid_tipo_depreciacion_empresaDetalleActivoFijo);}
		if(this.detalleactivofijoConstantesFunciones.resaltarid_estado_activo_fijoDetalleActivoFijo!=null && this.jInternalFrameDetalleFormDetalleActivoFijo!=null) {this.jInternalFrameDetalleFormDetalleActivoFijo.jComboBoxid_estado_activo_fijoDetalleActivoFijo.setBorder(this.detalleactivofijoConstantesFunciones.resaltarid_estado_activo_fijoDetalleActivoFijo);}
		if(this.detalleactivofijoConstantesFunciones.resaltarid_clienteDetalleActivoFijo!=null && this.jInternalFrameDetalleFormDetalleActivoFijo!=null) {this.jInternalFrameDetalleFormDetalleActivoFijo.jComboBoxid_clienteDetalleActivoFijo.setBorder(this.detalleactivofijoConstantesFunciones.resaltarid_clienteDetalleActivoFijo);}
		if(this.detalleactivofijoConstantesFunciones.resaltarid_partida_presuDetalleActivoFijo!=null && this.jInternalFrameDetalleFormDetalleActivoFijo!=null) {this.jInternalFrameDetalleFormDetalleActivoFijo.jComboBoxid_partida_presuDetalleActivoFijo.setBorder(this.detalleactivofijoConstantesFunciones.resaltarid_partida_presuDetalleActivoFijo);}
		if(this.detalleactivofijoConstantesFunciones.resaltarcodigoDetalleActivoFijo!=null && this.jInternalFrameDetalleFormDetalleActivoFijo!=null) {this.jInternalFrameDetalleFormDetalleActivoFijo.jTextFieldcodigoDetalleActivoFijo.setBorder(this.detalleactivofijoConstantesFunciones.resaltarcodigoDetalleActivoFijo);}
		if(this.detalleactivofijoConstantesFunciones.resaltarnombreDetalleActivoFijo!=null && this.jInternalFrameDetalleFormDetalleActivoFijo!=null) {this.jInternalFrameDetalleFormDetalleActivoFijo.jTextAreanombreDetalleActivoFijo.setBorder(this.detalleactivofijoConstantesFunciones.resaltarnombreDetalleActivoFijo);}
		if(this.detalleactivofijoConstantesFunciones.resaltarserieDetalleActivoFijo!=null && this.jInternalFrameDetalleFormDetalleActivoFijo!=null) {this.jInternalFrameDetalleFormDetalleActivoFijo.jTextFieldserieDetalleActivoFijo.setBorder(this.detalleactivofijoConstantesFunciones.resaltarserieDetalleActivoFijo);}
		if(this.detalleactivofijoConstantesFunciones.resaltarfecha_compraDetalleActivoFijo!=null && this.jInternalFrameDetalleFormDetalleActivoFijo!=null) {this.jInternalFrameDetalleFormDetalleActivoFijo.jDateChooserfecha_compraDetalleActivoFijo.setBorder(this.detalleactivofijoConstantesFunciones.resaltarfecha_compraDetalleActivoFijo);}
		if(this.detalleactivofijoConstantesFunciones.resaltarfecha_mantenimientoDetalleActivoFijo!=null && this.jInternalFrameDetalleFormDetalleActivoFijo!=null) {this.jInternalFrameDetalleFormDetalleActivoFijo.jDateChooserfecha_mantenimientoDetalleActivoFijo.setBorder(this.detalleactivofijoConstantesFunciones.resaltarfecha_mantenimientoDetalleActivoFijo);}
		if(this.detalleactivofijoConstantesFunciones.resaltarfecha_correccionDetalleActivoFijo!=null && this.jInternalFrameDetalleFormDetalleActivoFijo!=null) {this.jInternalFrameDetalleFormDetalleActivoFijo.jDateChooserfecha_correccionDetalleActivoFijo.setBorder(this.detalleactivofijoConstantesFunciones.resaltarfecha_correccionDetalleActivoFijo);}
		if(this.detalleactivofijoConstantesFunciones.resaltarfecha_depreciacionDetalleActivoFijo!=null && this.jInternalFrameDetalleFormDetalleActivoFijo!=null) {this.jInternalFrameDetalleFormDetalleActivoFijo.jDateChooserfecha_depreciacionDetalleActivoFijo.setBorder(this.detalleactivofijoConstantesFunciones.resaltarfecha_depreciacionDetalleActivoFijo);}
		if(this.detalleactivofijoConstantesFunciones.resaltarclaveDetalleActivoFijo!=null && this.jInternalFrameDetalleFormDetalleActivoFijo!=null) {this.jInternalFrameDetalleFormDetalleActivoFijo.jTextFieldclaveDetalleActivoFijo.setBorder(this.detalleactivofijoConstantesFunciones.resaltarclaveDetalleActivoFijo);}
		if(this.detalleactivofijoConstantesFunciones.resaltarmarcaDetalleActivoFijo!=null && this.jInternalFrameDetalleFormDetalleActivoFijo!=null) {this.jInternalFrameDetalleFormDetalleActivoFijo.jTextAreamarcaDetalleActivoFijo.setBorder(this.detalleactivofijoConstantesFunciones.resaltarmarcaDetalleActivoFijo);}
		if(this.detalleactivofijoConstantesFunciones.resaltarmodeloDetalleActivoFijo!=null && this.jInternalFrameDetalleFormDetalleActivoFijo!=null) {this.jInternalFrameDetalleFormDetalleActivoFijo.jTextAreamodeloDetalleActivoFijo.setBorder(this.detalleactivofijoConstantesFunciones.resaltarmodeloDetalleActivoFijo);}
		if(this.detalleactivofijoConstantesFunciones.resaltarcolorDetalleActivoFijo!=null && this.jInternalFrameDetalleFormDetalleActivoFijo!=null) {this.jInternalFrameDetalleFormDetalleActivoFijo.jTextFieldcolorDetalleActivoFijo.setBorder(this.detalleactivofijoConstantesFunciones.resaltarcolorDetalleActivoFijo);}
		if(this.detalleactivofijoConstantesFunciones.resaltarfechaDetalleActivoFijo!=null && this.jInternalFrameDetalleFormDetalleActivoFijo!=null) {this.jInternalFrameDetalleFormDetalleActivoFijo.jDateChooserfechaDetalleActivoFijo.setBorder(this.detalleactivofijoConstantesFunciones.resaltarfechaDetalleActivoFijo);}
		if(this.detalleactivofijoConstantesFunciones.resaltarvalor_utilDetalleActivoFijo!=null && this.jInternalFrameDetalleFormDetalleActivoFijo!=null) {this.jInternalFrameDetalleFormDetalleActivoFijo.jTextFieldvalor_utilDetalleActivoFijo.setBorder(this.detalleactivofijoConstantesFunciones.resaltarvalor_utilDetalleActivoFijo);}
		if(this.detalleactivofijoConstantesFunciones.resaltarcosto_de_compraDetalleActivoFijo!=null && this.jInternalFrameDetalleFormDetalleActivoFijo!=null) {this.jInternalFrameDetalleFormDetalleActivoFijo.jTextFieldcosto_de_compraDetalleActivoFijo.setBorder(this.detalleactivofijoConstantesFunciones.resaltarcosto_de_compraDetalleActivoFijo);}
		if(this.detalleactivofijoConstantesFunciones.resaltarvida_utilDetalleActivoFijo!=null && this.jInternalFrameDetalleFormDetalleActivoFijo!=null) {this.jInternalFrameDetalleFormDetalleActivoFijo.jTextFieldvida_utilDetalleActivoFijo.setBorder(this.detalleactivofijoConstantesFunciones.resaltarvida_utilDetalleActivoFijo);}
		if(this.detalleactivofijoConstantesFunciones.resaltarvalor_residualDetalleActivoFijo!=null && this.jInternalFrameDetalleFormDetalleActivoFijo!=null) {this.jInternalFrameDetalleFormDetalleActivoFijo.jTextFieldvalor_residualDetalleActivoFijo.setBorder(this.detalleactivofijoConstantesFunciones.resaltarvalor_residualDetalleActivoFijo);}
		if(this.detalleactivofijoConstantesFunciones.resaltarcantidadDetalleActivoFijo!=null && this.jInternalFrameDetalleFormDetalleActivoFijo!=null) {this.jInternalFrameDetalleFormDetalleActivoFijo.jTextFieldcantidadDetalleActivoFijo.setBorder(this.detalleactivofijoConstantesFunciones.resaltarcantidadDetalleActivoFijo);}
		if(this.detalleactivofijoConstantesFunciones.resaltarnombre_propietarioDetalleActivoFijo!=null && this.jInternalFrameDetalleFormDetalleActivoFijo!=null) {this.jInternalFrameDetalleFormDetalleActivoFijo.jTextAreanombre_propietarioDetalleActivoFijo.setBorder(this.detalleactivofijoConstantesFunciones.resaltarnombre_propietarioDetalleActivoFijo);}
		if(this.detalleactivofijoConstantesFunciones.resaltarresponsableDetalleActivoFijo!=null && this.jInternalFrameDetalleFormDetalleActivoFijo!=null) {this.jInternalFrameDetalleFormDetalleActivoFijo.jTextArearesponsableDetalleActivoFijo.setBorder(this.detalleactivofijoConstantesFunciones.resaltarresponsableDetalleActivoFijo);}
		if(this.detalleactivofijoConstantesFunciones.resaltarpath_fotoDetalleActivoFijo!=null && this.jInternalFrameDetalleFormDetalleActivoFijo!=null) {this.jInternalFrameDetalleFormDetalleActivoFijo.jTextAreapath_fotoDetalleActivoFijo.setBorder(this.detalleactivofijoConstantesFunciones.resaltarpath_fotoDetalleActivoFijo);}
		if(this.detalleactivofijoConstantesFunciones.resaltarnumero_comprobanteDetalleActivoFijo!=null && this.jInternalFrameDetalleFormDetalleActivoFijo!=null) {this.jInternalFrameDetalleFormDetalleActivoFijo.jTextFieldnumero_comprobanteDetalleActivoFijo.setBorder(this.detalleactivofijoConstantesFunciones.resaltarnumero_comprobanteDetalleActivoFijo);}
		if(this.detalleactivofijoConstantesFunciones.resaltarreferenciaDetalleActivoFijo!=null && this.jInternalFrameDetalleFormDetalleActivoFijo!=null) {this.jInternalFrameDetalleFormDetalleActivoFijo.jTextAreareferenciaDetalleActivoFijo.setBorder(this.detalleactivofijoConstantesFunciones.resaltarreferenciaDetalleActivoFijo);}
		if(this.detalleactivofijoConstantesFunciones.resaltarvalor_cotizacionDetalleActivoFijo!=null && this.jInternalFrameDetalleFormDetalleActivoFijo!=null) {this.jInternalFrameDetalleFormDetalleActivoFijo.jTextFieldvalor_cotizacionDetalleActivoFijo.setBorder(this.detalleactivofijoConstantesFunciones.resaltarvalor_cotizacionDetalleActivoFijo);}
		if(this.detalleactivofijoConstantesFunciones.resaltarcon_partesDetalleActivoFijo!=null && this.jInternalFrameDetalleFormDetalleActivoFijo!=null) {this.jInternalFrameDetalleFormDetalleActivoFijo.jCheckBoxcon_partesDetalleActivoFijo.setBorderPainted(true);this.jInternalFrameDetalleFormDetalleActivoFijo.jCheckBoxcon_partesDetalleActivoFijo.setBorder(this.detalleactivofijoConstantesFunciones.resaltarcon_partesDetalleActivoFijo);}
		if(this.detalleactivofijoConstantesFunciones.resaltarcon_garantiaDetalleActivoFijo!=null && this.jInternalFrameDetalleFormDetalleActivoFijo!=null) {this.jInternalFrameDetalleFormDetalleActivoFijo.jCheckBoxcon_garantiaDetalleActivoFijo.setBorderPainted(true);this.jInternalFrameDetalleFormDetalleActivoFijo.jCheckBoxcon_garantiaDetalleActivoFijo.setBorder(this.detalleactivofijoConstantesFunciones.resaltarcon_garantiaDetalleActivoFijo);}
		if(this.detalleactivofijoConstantesFunciones.resaltarcon_existenciaDetalleActivoFijo!=null && this.jInternalFrameDetalleFormDetalleActivoFijo!=null) {this.jInternalFrameDetalleFormDetalleActivoFijo.jCheckBoxcon_existenciaDetalleActivoFijo.setBorderPainted(true);this.jInternalFrameDetalleFormDetalleActivoFijo.jCheckBoxcon_existenciaDetalleActivoFijo.setBorder(this.detalleactivofijoConstantesFunciones.resaltarcon_existenciaDetalleActivoFijo);}
		if(this.detalleactivofijoConstantesFunciones.resaltarfecha_bajaDetalleActivoFijo!=null && this.jInternalFrameDetalleFormDetalleActivoFijo!=null) {this.jInternalFrameDetalleFormDetalleActivoFijo.jDateChooserfecha_bajaDetalleActivoFijo.setBorder(this.detalleactivofijoConstantesFunciones.resaltarfecha_bajaDetalleActivoFijo);}
		if(this.detalleactivofijoConstantesFunciones.resaltarpath_foto2DetalleActivoFijo!=null && this.jInternalFrameDetalleFormDetalleActivoFijo!=null) {this.jInternalFrameDetalleFormDetalleActivoFijo.jTextAreapath_foto2DetalleActivoFijo.setBorder(this.detalleactivofijoConstantesFunciones.resaltarpath_foto2DetalleActivoFijo);}
	}
	
	public void updateVisibilidadResaltarControlesFormularioDetalleActivoFijo() throws Exception {		
		if(this.jInternalFrameDetalleFormDetalleActivoFijo==null) { //if(!this.conCargarFormDetalle) {
			this.inicializarFormDetalle();
		}
		
		if(this.jInternalFrameDetalleFormDetalleActivoFijo!=null) {
	
		//this.jInternalFrameDetalleFormDetalleActivoFijo.jLabelidDetalleActivoFijo.setVisible(this.detalleactivofijoConstantesFunciones.mostraridDetalleActivoFijo);
		this.jInternalFrameDetalleFormDetalleActivoFijo.jPanelidDetalleActivoFijo.setVisible(this.detalleactivofijoConstantesFunciones.mostraridDetalleActivoFijo);
		//this.jInternalFrameDetalleFormDetalleActivoFijo.jComboBoxid_empresaDetalleActivoFijo.setVisible(this.detalleactivofijoConstantesFunciones.mostrarid_empresaDetalleActivoFijo);
		this.jInternalFrameDetalleFormDetalleActivoFijo.jPanelid_empresaDetalleActivoFijo.setVisible(this.detalleactivofijoConstantesFunciones.mostrarid_empresaDetalleActivoFijo);
		//this.jInternalFrameDetalleFormDetalleActivoFijo.jComboBoxid_sucursalDetalleActivoFijo.setVisible(this.detalleactivofijoConstantesFunciones.mostrarid_sucursalDetalleActivoFijo);
		this.jInternalFrameDetalleFormDetalleActivoFijo.jPanelid_sucursalDetalleActivoFijo.setVisible(this.detalleactivofijoConstantesFunciones.mostrarid_sucursalDetalleActivoFijo);
		//this.jInternalFrameDetalleFormDetalleActivoFijo.jComboBoxid_detalle_grupo_activo_fijoDetalleActivoFijo.setVisible(this.detalleactivofijoConstantesFunciones.mostrarid_detalle_grupo_activo_fijoDetalleActivoFijo);
		this.jInternalFrameDetalleFormDetalleActivoFijo.jPanelid_detalle_grupo_activo_fijoDetalleActivoFijo.setVisible(this.detalleactivofijoConstantesFunciones.mostrarid_detalle_grupo_activo_fijoDetalleActivoFijo);
		//this.jInternalFrameDetalleFormDetalleActivoFijo.jComboBoxid_sub_grupo_activo_fijoDetalleActivoFijo.setVisible(this.detalleactivofijoConstantesFunciones.mostrarid_sub_grupo_activo_fijoDetalleActivoFijo);
		this.jInternalFrameDetalleFormDetalleActivoFijo.jPanelid_sub_grupo_activo_fijoDetalleActivoFijo.setVisible(this.detalleactivofijoConstantesFunciones.mostrarid_sub_grupo_activo_fijoDetalleActivoFijo);
		//this.jInternalFrameDetalleFormDetalleActivoFijo.jComboBoxid_tipo_ramo_activo_fijoDetalleActivoFijo.setVisible(this.detalleactivofijoConstantesFunciones.mostrarid_tipo_ramo_activo_fijoDetalleActivoFijo);
		this.jInternalFrameDetalleFormDetalleActivoFijo.jPanelid_tipo_ramo_activo_fijoDetalleActivoFijo.setVisible(this.detalleactivofijoConstantesFunciones.mostrarid_tipo_ramo_activo_fijoDetalleActivoFijo);
		//this.jInternalFrameDetalleFormDetalleActivoFijo.jComboBoxid_tipo_activo_fijo_empresaDetalleActivoFijo.setVisible(this.detalleactivofijoConstantesFunciones.mostrarid_tipo_activo_fijo_empresaDetalleActivoFijo);
		this.jInternalFrameDetalleFormDetalleActivoFijo.jPanelid_tipo_activo_fijo_empresaDetalleActivoFijo.setVisible(this.detalleactivofijoConstantesFunciones.mostrarid_tipo_activo_fijo_empresaDetalleActivoFijo);
		//this.jInternalFrameDetalleFormDetalleActivoFijo.jComboBoxid_tipo_depreciacion_empresaDetalleActivoFijo.setVisible(this.detalleactivofijoConstantesFunciones.mostrarid_tipo_depreciacion_empresaDetalleActivoFijo);
		this.jInternalFrameDetalleFormDetalleActivoFijo.jPanelid_tipo_depreciacion_empresaDetalleActivoFijo.setVisible(this.detalleactivofijoConstantesFunciones.mostrarid_tipo_depreciacion_empresaDetalleActivoFijo);
		//this.jInternalFrameDetalleFormDetalleActivoFijo.jComboBoxid_estado_activo_fijoDetalleActivoFijo.setVisible(this.detalleactivofijoConstantesFunciones.mostrarid_estado_activo_fijoDetalleActivoFijo);
		this.jInternalFrameDetalleFormDetalleActivoFijo.jPanelid_estado_activo_fijoDetalleActivoFijo.setVisible(this.detalleactivofijoConstantesFunciones.mostrarid_estado_activo_fijoDetalleActivoFijo);
		//this.jInternalFrameDetalleFormDetalleActivoFijo.jComboBoxid_clienteDetalleActivoFijo.setVisible(this.detalleactivofijoConstantesFunciones.mostrarid_clienteDetalleActivoFijo);
		this.jInternalFrameDetalleFormDetalleActivoFijo.jPanelid_clienteDetalleActivoFijo.setVisible(this.detalleactivofijoConstantesFunciones.mostrarid_clienteDetalleActivoFijo);
			this.jInternalFrameDetalleFormDetalleActivoFijo.jButtonid_clienteDetalleActivoFijo.setVisible(this.detalleactivofijoConstantesFunciones.mostrarid_clienteDetalleActivoFijo);
		//this.jInternalFrameDetalleFormDetalleActivoFijo.jComboBoxid_partida_presuDetalleActivoFijo.setVisible(this.detalleactivofijoConstantesFunciones.mostrarid_partida_presuDetalleActivoFijo);
		this.jInternalFrameDetalleFormDetalleActivoFijo.jPanelid_partida_presuDetalleActivoFijo.setVisible(this.detalleactivofijoConstantesFunciones.mostrarid_partida_presuDetalleActivoFijo);
		//this.jInternalFrameDetalleFormDetalleActivoFijo.jTextFieldcodigoDetalleActivoFijo.setVisible(this.detalleactivofijoConstantesFunciones.mostrarcodigoDetalleActivoFijo);
		this.jInternalFrameDetalleFormDetalleActivoFijo.jPanelcodigoDetalleActivoFijo.setVisible(this.detalleactivofijoConstantesFunciones.mostrarcodigoDetalleActivoFijo);
		//this.jInternalFrameDetalleFormDetalleActivoFijo.jTextAreanombreDetalleActivoFijo.setVisible(this.detalleactivofijoConstantesFunciones.mostrarnombreDetalleActivoFijo);
		this.jInternalFrameDetalleFormDetalleActivoFijo.jPanelnombreDetalleActivoFijo.setVisible(this.detalleactivofijoConstantesFunciones.mostrarnombreDetalleActivoFijo);
		//this.jInternalFrameDetalleFormDetalleActivoFijo.jTextFieldserieDetalleActivoFijo.setVisible(this.detalleactivofijoConstantesFunciones.mostrarserieDetalleActivoFijo);
		this.jInternalFrameDetalleFormDetalleActivoFijo.jPanelserieDetalleActivoFijo.setVisible(this.detalleactivofijoConstantesFunciones.mostrarserieDetalleActivoFijo);
		//this.jInternalFrameDetalleFormDetalleActivoFijo.jDateChooserfecha_compraDetalleActivoFijo.setVisible(this.detalleactivofijoConstantesFunciones.mostrarfecha_compraDetalleActivoFijo);
		this.jInternalFrameDetalleFormDetalleActivoFijo.jPanelfecha_compraDetalleActivoFijo.setVisible(this.detalleactivofijoConstantesFunciones.mostrarfecha_compraDetalleActivoFijo);
		//this.jInternalFrameDetalleFormDetalleActivoFijo.jDateChooserfecha_mantenimientoDetalleActivoFijo.setVisible(this.detalleactivofijoConstantesFunciones.mostrarfecha_mantenimientoDetalleActivoFijo);
		this.jInternalFrameDetalleFormDetalleActivoFijo.jPanelfecha_mantenimientoDetalleActivoFijo.setVisible(this.detalleactivofijoConstantesFunciones.mostrarfecha_mantenimientoDetalleActivoFijo);
		//this.jInternalFrameDetalleFormDetalleActivoFijo.jDateChooserfecha_correccionDetalleActivoFijo.setVisible(this.detalleactivofijoConstantesFunciones.mostrarfecha_correccionDetalleActivoFijo);
		this.jInternalFrameDetalleFormDetalleActivoFijo.jPanelfecha_correccionDetalleActivoFijo.setVisible(this.detalleactivofijoConstantesFunciones.mostrarfecha_correccionDetalleActivoFijo);
		//this.jInternalFrameDetalleFormDetalleActivoFijo.jDateChooserfecha_depreciacionDetalleActivoFijo.setVisible(this.detalleactivofijoConstantesFunciones.mostrarfecha_depreciacionDetalleActivoFijo);
		this.jInternalFrameDetalleFormDetalleActivoFijo.jPanelfecha_depreciacionDetalleActivoFijo.setVisible(this.detalleactivofijoConstantesFunciones.mostrarfecha_depreciacionDetalleActivoFijo);
		//this.jInternalFrameDetalleFormDetalleActivoFijo.jTextFieldclaveDetalleActivoFijo.setVisible(this.detalleactivofijoConstantesFunciones.mostrarclaveDetalleActivoFijo);
		this.jInternalFrameDetalleFormDetalleActivoFijo.jPanelclaveDetalleActivoFijo.setVisible(this.detalleactivofijoConstantesFunciones.mostrarclaveDetalleActivoFijo);
		//this.jInternalFrameDetalleFormDetalleActivoFijo.jTextAreamarcaDetalleActivoFijo.setVisible(this.detalleactivofijoConstantesFunciones.mostrarmarcaDetalleActivoFijo);
		this.jInternalFrameDetalleFormDetalleActivoFijo.jPanelmarcaDetalleActivoFijo.setVisible(this.detalleactivofijoConstantesFunciones.mostrarmarcaDetalleActivoFijo);
		//this.jInternalFrameDetalleFormDetalleActivoFijo.jTextAreamodeloDetalleActivoFijo.setVisible(this.detalleactivofijoConstantesFunciones.mostrarmodeloDetalleActivoFijo);
		this.jInternalFrameDetalleFormDetalleActivoFijo.jPanelmodeloDetalleActivoFijo.setVisible(this.detalleactivofijoConstantesFunciones.mostrarmodeloDetalleActivoFijo);
		//this.jInternalFrameDetalleFormDetalleActivoFijo.jTextFieldcolorDetalleActivoFijo.setVisible(this.detalleactivofijoConstantesFunciones.mostrarcolorDetalleActivoFijo);
		this.jInternalFrameDetalleFormDetalleActivoFijo.jPanelcolorDetalleActivoFijo.setVisible(this.detalleactivofijoConstantesFunciones.mostrarcolorDetalleActivoFijo);
		//this.jInternalFrameDetalleFormDetalleActivoFijo.jDateChooserfechaDetalleActivoFijo.setVisible(this.detalleactivofijoConstantesFunciones.mostrarfechaDetalleActivoFijo);
		this.jInternalFrameDetalleFormDetalleActivoFijo.jPanelfechaDetalleActivoFijo.setVisible(this.detalleactivofijoConstantesFunciones.mostrarfechaDetalleActivoFijo);
		//this.jInternalFrameDetalleFormDetalleActivoFijo.jTextFieldvalor_utilDetalleActivoFijo.setVisible(this.detalleactivofijoConstantesFunciones.mostrarvalor_utilDetalleActivoFijo);
		this.jInternalFrameDetalleFormDetalleActivoFijo.jPanelvalor_utilDetalleActivoFijo.setVisible(this.detalleactivofijoConstantesFunciones.mostrarvalor_utilDetalleActivoFijo);
		//this.jInternalFrameDetalleFormDetalleActivoFijo.jTextFieldcosto_de_compraDetalleActivoFijo.setVisible(this.detalleactivofijoConstantesFunciones.mostrarcosto_de_compraDetalleActivoFijo);
		this.jInternalFrameDetalleFormDetalleActivoFijo.jPanelcosto_de_compraDetalleActivoFijo.setVisible(this.detalleactivofijoConstantesFunciones.mostrarcosto_de_compraDetalleActivoFijo);
		//this.jInternalFrameDetalleFormDetalleActivoFijo.jTextFieldvida_utilDetalleActivoFijo.setVisible(this.detalleactivofijoConstantesFunciones.mostrarvida_utilDetalleActivoFijo);
		this.jInternalFrameDetalleFormDetalleActivoFijo.jPanelvida_utilDetalleActivoFijo.setVisible(this.detalleactivofijoConstantesFunciones.mostrarvida_utilDetalleActivoFijo);
		//this.jInternalFrameDetalleFormDetalleActivoFijo.jTextFieldvalor_residualDetalleActivoFijo.setVisible(this.detalleactivofijoConstantesFunciones.mostrarvalor_residualDetalleActivoFijo);
		this.jInternalFrameDetalleFormDetalleActivoFijo.jPanelvalor_residualDetalleActivoFijo.setVisible(this.detalleactivofijoConstantesFunciones.mostrarvalor_residualDetalleActivoFijo);
		//this.jInternalFrameDetalleFormDetalleActivoFijo.jTextFieldcantidadDetalleActivoFijo.setVisible(this.detalleactivofijoConstantesFunciones.mostrarcantidadDetalleActivoFijo);
		this.jInternalFrameDetalleFormDetalleActivoFijo.jPanelcantidadDetalleActivoFijo.setVisible(this.detalleactivofijoConstantesFunciones.mostrarcantidadDetalleActivoFijo);
		//this.jInternalFrameDetalleFormDetalleActivoFijo.jTextAreanombre_propietarioDetalleActivoFijo.setVisible(this.detalleactivofijoConstantesFunciones.mostrarnombre_propietarioDetalleActivoFijo);
		this.jInternalFrameDetalleFormDetalleActivoFijo.jPanelnombre_propietarioDetalleActivoFijo.setVisible(this.detalleactivofijoConstantesFunciones.mostrarnombre_propietarioDetalleActivoFijo);
		//this.jInternalFrameDetalleFormDetalleActivoFijo.jTextArearesponsableDetalleActivoFijo.setVisible(this.detalleactivofijoConstantesFunciones.mostrarresponsableDetalleActivoFijo);
		this.jInternalFrameDetalleFormDetalleActivoFijo.jPanelresponsableDetalleActivoFijo.setVisible(this.detalleactivofijoConstantesFunciones.mostrarresponsableDetalleActivoFijo);
		//this.jInternalFrameDetalleFormDetalleActivoFijo.jTextAreapath_fotoDetalleActivoFijo.setVisible(this.detalleactivofijoConstantesFunciones.mostrarpath_fotoDetalleActivoFijo);
		this.jInternalFrameDetalleFormDetalleActivoFijo.jPanelpath_fotoDetalleActivoFijo.setVisible(this.detalleactivofijoConstantesFunciones.mostrarpath_fotoDetalleActivoFijo);
		//this.jInternalFrameDetalleFormDetalleActivoFijo.jTextFieldnumero_comprobanteDetalleActivoFijo.setVisible(this.detalleactivofijoConstantesFunciones.mostrarnumero_comprobanteDetalleActivoFijo);
		this.jInternalFrameDetalleFormDetalleActivoFijo.jPanelnumero_comprobanteDetalleActivoFijo.setVisible(this.detalleactivofijoConstantesFunciones.mostrarnumero_comprobanteDetalleActivoFijo);
		//this.jInternalFrameDetalleFormDetalleActivoFijo.jTextAreareferenciaDetalleActivoFijo.setVisible(this.detalleactivofijoConstantesFunciones.mostrarreferenciaDetalleActivoFijo);
		this.jInternalFrameDetalleFormDetalleActivoFijo.jPanelreferenciaDetalleActivoFijo.setVisible(this.detalleactivofijoConstantesFunciones.mostrarreferenciaDetalleActivoFijo);
		//this.jInternalFrameDetalleFormDetalleActivoFijo.jTextFieldvalor_cotizacionDetalleActivoFijo.setVisible(this.detalleactivofijoConstantesFunciones.mostrarvalor_cotizacionDetalleActivoFijo);
		this.jInternalFrameDetalleFormDetalleActivoFijo.jPanelvalor_cotizacionDetalleActivoFijo.setVisible(this.detalleactivofijoConstantesFunciones.mostrarvalor_cotizacionDetalleActivoFijo);
		//this.jInternalFrameDetalleFormDetalleActivoFijo.jCheckBoxcon_partesDetalleActivoFijo.setVisible(this.detalleactivofijoConstantesFunciones.mostrarcon_partesDetalleActivoFijo);
		this.jInternalFrameDetalleFormDetalleActivoFijo.jPanelcon_partesDetalleActivoFijo.setVisible(this.detalleactivofijoConstantesFunciones.mostrarcon_partesDetalleActivoFijo);
		//this.jInternalFrameDetalleFormDetalleActivoFijo.jCheckBoxcon_garantiaDetalleActivoFijo.setVisible(this.detalleactivofijoConstantesFunciones.mostrarcon_garantiaDetalleActivoFijo);
		this.jInternalFrameDetalleFormDetalleActivoFijo.jPanelcon_garantiaDetalleActivoFijo.setVisible(this.detalleactivofijoConstantesFunciones.mostrarcon_garantiaDetalleActivoFijo);
		//this.jInternalFrameDetalleFormDetalleActivoFijo.jCheckBoxcon_existenciaDetalleActivoFijo.setVisible(this.detalleactivofijoConstantesFunciones.mostrarcon_existenciaDetalleActivoFijo);
		this.jInternalFrameDetalleFormDetalleActivoFijo.jPanelcon_existenciaDetalleActivoFijo.setVisible(this.detalleactivofijoConstantesFunciones.mostrarcon_existenciaDetalleActivoFijo);
		//this.jInternalFrameDetalleFormDetalleActivoFijo.jDateChooserfecha_bajaDetalleActivoFijo.setVisible(this.detalleactivofijoConstantesFunciones.mostrarfecha_bajaDetalleActivoFijo);
		this.jInternalFrameDetalleFormDetalleActivoFijo.jPanelfecha_bajaDetalleActivoFijo.setVisible(this.detalleactivofijoConstantesFunciones.mostrarfecha_bajaDetalleActivoFijo);
		//this.jInternalFrameDetalleFormDetalleActivoFijo.jTextAreapath_foto2DetalleActivoFijo.setVisible(this.detalleactivofijoConstantesFunciones.mostrarpath_foto2DetalleActivoFijo);
		this.jInternalFrameDetalleFormDetalleActivoFijo.jPanelpath_foto2DetalleActivoFijo.setVisible(this.detalleactivofijoConstantesFunciones.mostrarpath_foto2DetalleActivoFijo);
		}
	}
	
	public void updateHabilitarResaltarControlesFormularioDetalleActivoFijo() throws Exception {
		if(this.jInternalFrameDetalleFormDetalleActivoFijo==null) { //if(!this.conCargarFormDetalle) {
			this.inicializarFormDetalle();
		}
		
		if(this.jInternalFrameDetalleFormDetalleActivoFijo!=null) {
	
		this.jInternalFrameDetalleFormDetalleActivoFijo.jLabelidDetalleActivoFijo.setEnabled(this.detalleactivofijoConstantesFunciones.activaridDetalleActivoFijo);
		this.jInternalFrameDetalleFormDetalleActivoFijo.jComboBoxid_empresaDetalleActivoFijo.setEnabled(this.detalleactivofijoConstantesFunciones.activarid_empresaDetalleActivoFijo);
		this.jInternalFrameDetalleFormDetalleActivoFijo.jComboBoxid_sucursalDetalleActivoFijo.setEnabled(this.detalleactivofijoConstantesFunciones.activarid_sucursalDetalleActivoFijo);
		this.jInternalFrameDetalleFormDetalleActivoFijo.jComboBoxid_detalle_grupo_activo_fijoDetalleActivoFijo.setEnabled(this.detalleactivofijoConstantesFunciones.activarid_detalle_grupo_activo_fijoDetalleActivoFijo);
		this.jInternalFrameDetalleFormDetalleActivoFijo.jComboBoxid_sub_grupo_activo_fijoDetalleActivoFijo.setEnabled(this.detalleactivofijoConstantesFunciones.activarid_sub_grupo_activo_fijoDetalleActivoFijo);
		this.jInternalFrameDetalleFormDetalleActivoFijo.jComboBoxid_tipo_ramo_activo_fijoDetalleActivoFijo.setEnabled(this.detalleactivofijoConstantesFunciones.activarid_tipo_ramo_activo_fijoDetalleActivoFijo);
		this.jInternalFrameDetalleFormDetalleActivoFijo.jComboBoxid_tipo_activo_fijo_empresaDetalleActivoFijo.setEnabled(this.detalleactivofijoConstantesFunciones.activarid_tipo_activo_fijo_empresaDetalleActivoFijo);
		this.jInternalFrameDetalleFormDetalleActivoFijo.jComboBoxid_tipo_depreciacion_empresaDetalleActivoFijo.setEnabled(this.detalleactivofijoConstantesFunciones.activarid_tipo_depreciacion_empresaDetalleActivoFijo);
		this.jInternalFrameDetalleFormDetalleActivoFijo.jComboBoxid_estado_activo_fijoDetalleActivoFijo.setEnabled(this.detalleactivofijoConstantesFunciones.activarid_estado_activo_fijoDetalleActivoFijo);
		this.jInternalFrameDetalleFormDetalleActivoFijo.jComboBoxid_clienteDetalleActivoFijo.setEnabled(this.detalleactivofijoConstantesFunciones.activarid_clienteDetalleActivoFijo);
			this.jInternalFrameDetalleFormDetalleActivoFijo.jButtonid_clienteDetalleActivoFijo.setEnabled(this.detalleactivofijoConstantesFunciones.activarid_clienteDetalleActivoFijo);
		this.jInternalFrameDetalleFormDetalleActivoFijo.jComboBoxid_partida_presuDetalleActivoFijo.setEnabled(this.detalleactivofijoConstantesFunciones.activarid_partida_presuDetalleActivoFijo);
		this.jInternalFrameDetalleFormDetalleActivoFijo.jTextFieldcodigoDetalleActivoFijo.setEnabled(this.detalleactivofijoConstantesFunciones.activarcodigoDetalleActivoFijo);
		this.jInternalFrameDetalleFormDetalleActivoFijo.jTextAreanombreDetalleActivoFijo.setEnabled(this.detalleactivofijoConstantesFunciones.activarnombreDetalleActivoFijo);
		this.jInternalFrameDetalleFormDetalleActivoFijo.jTextFieldserieDetalleActivoFijo.setEnabled(this.detalleactivofijoConstantesFunciones.activarserieDetalleActivoFijo);
		this.jInternalFrameDetalleFormDetalleActivoFijo.jDateChooserfecha_compraDetalleActivoFijo.setEnabled(this.detalleactivofijoConstantesFunciones.activarfecha_compraDetalleActivoFijo);
		this.jInternalFrameDetalleFormDetalleActivoFijo.jDateChooserfecha_mantenimientoDetalleActivoFijo.setEnabled(this.detalleactivofijoConstantesFunciones.activarfecha_mantenimientoDetalleActivoFijo);
		this.jInternalFrameDetalleFormDetalleActivoFijo.jDateChooserfecha_correccionDetalleActivoFijo.setEnabled(this.detalleactivofijoConstantesFunciones.activarfecha_correccionDetalleActivoFijo);
		this.jInternalFrameDetalleFormDetalleActivoFijo.jDateChooserfecha_depreciacionDetalleActivoFijo.setEnabled(this.detalleactivofijoConstantesFunciones.activarfecha_depreciacionDetalleActivoFijo);
		this.jInternalFrameDetalleFormDetalleActivoFijo.jTextFieldclaveDetalleActivoFijo.setEnabled(this.detalleactivofijoConstantesFunciones.activarclaveDetalleActivoFijo);
		this.jInternalFrameDetalleFormDetalleActivoFijo.jTextAreamarcaDetalleActivoFijo.setEnabled(this.detalleactivofijoConstantesFunciones.activarmarcaDetalleActivoFijo);
		this.jInternalFrameDetalleFormDetalleActivoFijo.jTextAreamodeloDetalleActivoFijo.setEnabled(this.detalleactivofijoConstantesFunciones.activarmodeloDetalleActivoFijo);
		this.jInternalFrameDetalleFormDetalleActivoFijo.jTextFieldcolorDetalleActivoFijo.setEnabled(this.detalleactivofijoConstantesFunciones.activarcolorDetalleActivoFijo);
		this.jInternalFrameDetalleFormDetalleActivoFijo.jDateChooserfechaDetalleActivoFijo.setEnabled(this.detalleactivofijoConstantesFunciones.activarfechaDetalleActivoFijo);
		this.jInternalFrameDetalleFormDetalleActivoFijo.jTextFieldvalor_utilDetalleActivoFijo.setEnabled(this.detalleactivofijoConstantesFunciones.activarvalor_utilDetalleActivoFijo);
		this.jInternalFrameDetalleFormDetalleActivoFijo.jTextFieldcosto_de_compraDetalleActivoFijo.setEnabled(this.detalleactivofijoConstantesFunciones.activarcosto_de_compraDetalleActivoFijo);
		this.jInternalFrameDetalleFormDetalleActivoFijo.jTextFieldvida_utilDetalleActivoFijo.setEnabled(this.detalleactivofijoConstantesFunciones.activarvida_utilDetalleActivoFijo);
		this.jInternalFrameDetalleFormDetalleActivoFijo.jTextFieldvalor_residualDetalleActivoFijo.setEnabled(this.detalleactivofijoConstantesFunciones.activarvalor_residualDetalleActivoFijo);
		this.jInternalFrameDetalleFormDetalleActivoFijo.jTextFieldcantidadDetalleActivoFijo.setEnabled(this.detalleactivofijoConstantesFunciones.activarcantidadDetalleActivoFijo);
		this.jInternalFrameDetalleFormDetalleActivoFijo.jTextAreanombre_propietarioDetalleActivoFijo.setEnabled(this.detalleactivofijoConstantesFunciones.activarnombre_propietarioDetalleActivoFijo);
		this.jInternalFrameDetalleFormDetalleActivoFijo.jTextArearesponsableDetalleActivoFijo.setEnabled(this.detalleactivofijoConstantesFunciones.activarresponsableDetalleActivoFijo);
		this.jInternalFrameDetalleFormDetalleActivoFijo.jTextAreapath_fotoDetalleActivoFijo.setEnabled(this.detalleactivofijoConstantesFunciones.activarpath_fotoDetalleActivoFijo);
		this.jInternalFrameDetalleFormDetalleActivoFijo.jTextFieldnumero_comprobanteDetalleActivoFijo.setEnabled(this.detalleactivofijoConstantesFunciones.activarnumero_comprobanteDetalleActivoFijo);
		this.jInternalFrameDetalleFormDetalleActivoFijo.jTextAreareferenciaDetalleActivoFijo.setEnabled(this.detalleactivofijoConstantesFunciones.activarreferenciaDetalleActivoFijo);
		this.jInternalFrameDetalleFormDetalleActivoFijo.jTextFieldvalor_cotizacionDetalleActivoFijo.setEnabled(this.detalleactivofijoConstantesFunciones.activarvalor_cotizacionDetalleActivoFijo);
		this.jInternalFrameDetalleFormDetalleActivoFijo.jCheckBoxcon_partesDetalleActivoFijo.setEnabled(this.detalleactivofijoConstantesFunciones.activarcon_partesDetalleActivoFijo);
		this.jInternalFrameDetalleFormDetalleActivoFijo.jCheckBoxcon_garantiaDetalleActivoFijo.setEnabled(this.detalleactivofijoConstantesFunciones.activarcon_garantiaDetalleActivoFijo);
		this.jInternalFrameDetalleFormDetalleActivoFijo.jCheckBoxcon_existenciaDetalleActivoFijo.setEnabled(this.detalleactivofijoConstantesFunciones.activarcon_existenciaDetalleActivoFijo);
		this.jInternalFrameDetalleFormDetalleActivoFijo.jDateChooserfecha_bajaDetalleActivoFijo.setEnabled(this.detalleactivofijoConstantesFunciones.activarfecha_bajaDetalleActivoFijo);
		this.jInternalFrameDetalleFormDetalleActivoFijo.jTextAreapath_foto2DetalleActivoFijo.setEnabled(this.detalleactivofijoConstantesFunciones.activarpath_foto2DetalleActivoFijo);
		}
	}
	
		
}