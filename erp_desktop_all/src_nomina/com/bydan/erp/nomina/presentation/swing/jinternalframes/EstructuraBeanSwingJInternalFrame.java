/*
*AVISO LEGAL
Â© Copyright
*Este programa esta protegido por la ley de derechos de autor.
*La reproduccion o distribucion ilicita de este programa o de cualquiera de
*sus partes esta penado por la ley con severas sanciones civiles y penales,
*y seran objeto de todas las sanciones legales que correspondan.

*Su contenido no puede copiarse para fines comerciales o de otras,
*ni puede mostrarse, incluso en una version modificada, en otros sitios Web.
Solo esta permitido colocar hipervinculos al sitio web.
*/
package com.bydan.erp.nomina.presentation.swing.jinternalframes;




import com.bydan.erp.seguridad.business.entity.Usuario;
import com.bydan.erp.seguridad.business.entity.ResumenUsuario;
import com.bydan.erp.seguridad.business.entity.Opcion;
import com.bydan.erp.seguridad.business.entity.PerfilOpcion;
import com.bydan.erp.seguridad.business.entity.PerfilCampo;
import com.bydan.erp.seguridad.business.entity.PerfilAccion;
import com.bydan.erp.seguridad.business.entity.ParametroGeneralSg;
import com.bydan.erp.seguridad.business.entity.ParametroGeneralUsuario;
import com.bydan.erp.seguridad.business.entity.Modulo;
import com.bydan.erp.seguridad.business.entity.Accion;

import com.bydan.erp.seguridad.util.SistemaParameterReturnGeneralAdditional;
import com.bydan.erp.seguridad.util.SistemaParameterReturnGeneral;


//import com.bydan.erp.seguridad.business.entity.PerfilAccion;


import com.bydan.erp.seguridad.util.SistemaConstantesFunciones;
import com.bydan.erp.seguridad.util.SistemaConstantesFuncionesAdditional;
import com.bydan.erp.seguridad.business.logic.SistemaLogicAdditional;

import com.bydan.erp.nomina.util.EstructuraConstantesFunciones;
import com.bydan.erp.nomina.util.EstructuraParameterReturnGeneral;
//import com.bydan.erp.nomina.util.EstructuraParameterGeneral;
//import com.bydan.erp.nomina.presentation.report.source.EstructuraBean;
import com.bydan.framework.erp.business.dataaccess.ConstantesSql;
import com.bydan.framework.erp.business.entity.Classe;
import com.bydan.framework.erp.business.entity.DatoGeneral;
import com.bydan.framework.erp.business.entity.GeneralEntityParameterGeneral;
import com.bydan.framework.erp.business.entity.OrderBy;
import com.bydan.framework.erp.business.entity.DatoGeneralMinimo;
import com.bydan.framework.erp.business.entity.GeneralEntity;
import com.bydan.framework.erp.business.entity.Mensajes;
import com.bydan.framework.erp.business.entity.GeneralEntityParameterReturnGeneral;
//import com.bydan.framework.erp.business.entity.MaintenanceType;
import com.bydan.framework.erp.util.MaintenanceType;
import com.bydan.framework.erp.util.FuncionesReporte;
import com.bydan.framework.erp.business.logic.DatosCliente;
import com.bydan.framework.erp.business.logic.Pagination;

import com.bydan.erp.nomina.presentation.swing.jinternalframes.auxiliar.*;
import com.bydan.framework.erp.presentation.desktop.swing.TablaGeneralTotalModel;
import com.bydan.framework.erp.presentation.desktop.swing.TablaGeneralOrderByModel;
import com.bydan.framework.erp.presentation.desktop.swing.DateConverter;
import com.bydan.framework.erp.presentation.desktop.swing.DateConverterFromDate;
import com.bydan.framework.erp.presentation.desktop.swing.DateRenderer;
import com.bydan.framework.erp.presentation.desktop.swing.DateEditorRenderer;
import com.bydan.framework.erp.presentation.desktop.swing.BooleanRenderer;
import com.bydan.framework.erp.presentation.desktop.swing.BooleanEditorRenderer;
import com.bydan.framework.erp.presentation.desktop.swing.TextFieldRenderer;
import com.bydan.framework.erp.presentation.desktop.swing.RunnableProceso;
import com.bydan.framework.erp.presentation.desktop.swing.*;
//import com.bydan.framework.erp.presentation.desktop.swing.TextFieldEditorRenderer;
import com.bydan.framework.erp.presentation.desktop.swing.HeaderRenderer;
import com.bydan.framework.erp.presentation.desktop.swing.JInternalFrameBase;
import com.bydan.framework.erp.presentation.desktop.swing.FuncionesSwing;
import com.bydan.framework.erp.presentation.desktop.swing.MainJFrame;
import com.bydan.framework.erp.resources.imagenes.AuxiliarImagenes;
import com.bydan.erp.nomina.resources.reportes.AuxiliarReportes;


import com.bydan.erp.nomina.util.*;
import com.bydan.erp.nomina.business.logic.*;

import com.bydan.erp.seguridad.business.logic.*;
import com.bydan.erp.contabilidad.business.logic.*;
import com.bydan.erp.inventario.business.logic.*;
import com.bydan.erp.tesoreria.business.logic.*;
import com.bydan.erp.cartera.business.logic.*;
import com.bydan.erp.activosfijos.business.logic.*;

//EJB

//PARAMETROS


//EJB PARAMETROS

import com.bydan.framework.erp.business.logic.*;
import com.bydan.framework.erp.util.*;

import com.bydan.erp.nomina.business.entity.*;
//import com.bydan.framework.erp.business.entity.ConexionBeanFace;
//import com.bydan.framework.erp.business.entity.Mensajes;


import com.bydan.erp.seguridad.presentation.swing.jinternalframes.*;
import com.bydan.erp.contabilidad.presentation.swing.jinternalframes.*;
import com.bydan.erp.inventario.presentation.swing.jinternalframes.*;
import com.bydan.erp.tesoreria.presentation.swing.jinternalframes.*;
import com.bydan.erp.cartera.presentation.swing.jinternalframes.*;
import com.bydan.erp.activosfijos.presentation.swing.jinternalframes.*;

import com.bydan.erp.seguridad.presentation.swing.jinternalframes.auxiliar.*;
import com.bydan.erp.contabilidad.presentation.swing.jinternalframes.auxiliar.*;
import com.bydan.erp.inventario.presentation.swing.jinternalframes.auxiliar.*;
import com.bydan.erp.tesoreria.presentation.swing.jinternalframes.auxiliar.*;
import com.bydan.erp.cartera.presentation.swing.jinternalframes.auxiliar.*;
import com.bydan.erp.activosfijos.presentation.swing.jinternalframes.auxiliar.*;






import javax.imageio.ImageIO;
import java.net.NetworkInterface;
import java.net.InterfaceAddress;
import java.net.InetAddress;
import javax.naming.InitialContext;
import java.lang.Long;
import java.util.Date;
import java.util.Enumeration;
import java.util.Iterator;
import java.util.Set;
import java.util.HashSet;
import java.util.List;
import java.util.ArrayList;
import java.io.Serializable;
import java.util.Hashtable;
import java.util.Collections;
import java.io.File;
import java.io.FileInputStream;
import java.io.BufferedWriter;
import java.io.FileWriter;
import java.io.FileOutputStream;
import java.io.InputStream;
import java.io.BufferedReader;
import java.io.FileReader;
import java.util.HashMap;
import java.util.Map;
import java.io.PrintWriter;
import java.sql.SQLException;

import javax.xml.parsers.DocumentBuilder;
import javax.xml.parsers.DocumentBuilderFactory;
import javax.xml.parsers.ParserConfigurationException;
import javax.xml.transform.stream.StreamSource;

import org.xml.sax.EntityResolver;
import org.xml.sax.InputSource;
import org.xml.sax.SAXException;

import org.w3c.dom.Document;
import org.w3c.dom.Document;
import org.w3c.dom.NodeList;
import org.w3c.dom.Node;
import org.w3c.dom.Element;

import org.apache.poi.hssf.usermodel.HSSFCell;
import org.apache.poi.hssf.usermodel.HSSFRow;
import org.apache.poi.hssf.usermodel.HSSFSheet;
import org.apache.poi.hssf.usermodel.HSSFWorkbook;
import org.apache.poi.xssf.usermodel.XSSFWorkbook;

import org.apache.poi.ss.usermodel.Workbook;
import org.apache.poi.ss.usermodel.Sheet;
import org.apache.poi.ss.usermodel.Row;
import org.apache.poi.ss.usermodel.Cell;
import org.apache.poi.ss.usermodel.CellStyle;
import org.apache.poi.ss.usermodel.IndexedColors;
import org.apache.poi.ss.util.CellRangeAddress;

import javax.xml.transform.Transformer;
import javax.xml.transform.TransformerFactory;
import javax.xml.transform.dom.DOMSource;
import javax.xml.transform.stream.StreamResult;


import net.sf.jasperreports.engine.JRException;
import net.sf.jasperreports.engine.JRRuntimeException;
import net.sf.jasperreports.engine.JasperFillManager;
import net.sf.jasperreports.engine.JasperPrint;
import net.sf.jasperreports.engine.JasperReport;
import net.sf.jasperreports.engine.util.JRLoader;
import net.sf.jasperreports.engine.export.JRHtmlExporter;
import net.sf.jasperreports.j2ee.servlets.BaseHttpServlet;
import net.sf.jasperreports.engine.JRExporterParameter;
import net.sf.jasperreports.engine.data.JRBeanArrayDataSource;
import net.sf.jasperreports.engine.data.JRBeanCollectionDataSource;
import net.sf.jasperreports.view.JasperViewer;

import org.apache.log4j.Logger;

import com.bydan.framework.erp.business.entity.Reporte;


//VALIDACION
import org.hibernate.validator.ClassValidator;
import org.hibernate.validator.InvalidValue;

import net.sf.jasperreports.engine.JREmptyDataSource;
import net.sf.jasperreports.engine.JasperCompileManager;
import net.sf.jasperreports.engine.JasperExportManager;
import net.sf.jasperreports.engine.JasperPrint;
import net.sf.jasperreports.engine.JasperPrintManager;
import net.sf.jasperreports.engine.JasperReport;
import net.sf.jasperreports.engine.JasperRunManager;
import net.sf.jasperreports.engine.export.JExcelApiExporter;
import net.sf.jasperreports.engine.export.JRCsvExporter;
import net.sf.jasperreports.engine.export.JRRtfExporter;
import net.sf.jasperreports.engine.export.JRXlsExporter;
import net.sf.jasperreports.engine.export.JRXlsExporterParameter;
import net.sf.jasperreports.engine.util.JRSaver;
import net.sf.jasperreports.engine.xml.JRXmlWriter;


import com.bydan.erp.nomina.presentation.web.jsf.sessionbean.*;

import java.util.EventObject;
import javax.swing.*;
import javax.swing.border.Border;
import javax.swing.border.TitledBorder;
import javax.swing.border.EmptyBorder;
import javax.swing.event.*;
import javax.swing.table.AbstractTableModel;
import javax.swing.table.DefaultTableCellRenderer;
import javax.swing.table.TableColumn;
import javax.swing.table.TableCellEditor;
import javax.swing.table.TableCellRenderer;
import java.awt.*;
import java.awt.event.*;

import org.jdesktop.beansbinding.Binding.SyncFailure;
import org.jdesktop.beansbinding.BindingListener;
import org.jdesktop.beansbinding.Bindings;
import org.jdesktop.beansbinding.BeanProperty;
import org.jdesktop.beansbinding.ELProperty;
import org.jdesktop.beansbinding.AutoBinding.UpdateStrategy;
import org.jdesktop.beansbinding.PropertyStateEvent;
import org.jdesktop.swingbinding.JComboBoxBinding;
import org.jdesktop.swingbinding.SwingBindings;
import java.beans.PropertyChangeListener;
import java.beans.PropertyChangeEvent;

import com.toedter.calendar.JDateChooser;


import com.bydan.erp.seguridad.business.entity.*;
import com.bydan.erp.contabilidad.business.entity.*;
import com.bydan.erp.inventario.business.entity.*;
import com.bydan.erp.tesoreria.business.entity.*;
import com.bydan.erp.cartera.business.entity.*;
import com.bydan.erp.activosfijos.business.entity.*;
import com.bydan.erp.seguridad.util.*;
import com.bydan.erp.contabilidad.util.*;
import com.bydan.erp.inventario.util.*;
import com.bydan.erp.tesoreria.util.*;
import com.bydan.erp.cartera.util.*;
import com.bydan.erp.activosfijos.util.*;
import com.bydan.erp.seguridad.presentation.web.jsf.sessionbean.*;
import com.bydan.erp.contabilidad.presentation.web.jsf.sessionbean.*;
import com.bydan.erp.inventario.presentation.web.jsf.sessionbean.*;
import com.bydan.erp.tesoreria.presentation.web.jsf.sessionbean.*;
import com.bydan.erp.cartera.presentation.web.jsf.sessionbean.*;
import com.bydan.erp.activosfijos.presentation.web.jsf.sessionbean.*;


@SuppressWarnings("unused")
public class EstructuraBeanSwingJInternalFrame extends EstructuraJInternalFrame implements WindowListener,WindowFocusListener
{				
	
	public static final long serialVersionUID = 1L;
	
	public static Logger logger = Logger.getLogger(EstructuraBeanSwingJInternalFrame.class);  
	
	public static ClassValidator<Estructura> estructuraValidator = new ClassValidator<Estructura>(Estructura.class);
	
	public InvalidValue[] invalidValues=null;
		

	//Ejb Foreign Keys
	
	public Estructura estructura;	
	public Estructura estructuraAux;
	public Estructura estructuraAnterior;//USADO PARA MANEJAR FOCUS GAINED,LOST
	public Estructura estructuraTotales;
	public Long idEstructuraActual;
	public Long iIdNuevoEstructura=0L;
	public int rowIndexActual=0;
	
	
	
	
	public String sFinalQueryComboEmpresa="";

	public List<Empresa> empresasForeignKey;

	public List<Empresa> getempresasForeignKey() {
		return empresasForeignKey;
	}

	public void setempresasForeignKey(List<Empresa> empresasForeignKey) {
		this.empresasForeignKey = empresasForeignKey;
	}

	//OBJETO FK ACTUAL
	public Empresa empresaForeignKey;

	public Empresa getempresaForeignKey() {
		return empresaForeignKey;
	}

	public void setempresaForeignKey(Empresa empresaForeignKey) {
		this.empresaForeignKey = empresaForeignKey;
	}

	public String sFinalQueryComboSucursal="";

	public List<Sucursal> sucursalsForeignKey;

	public List<Sucursal> getsucursalsForeignKey() {
		return sucursalsForeignKey;
	}

	public void setsucursalsForeignKey(List<Sucursal> sucursalsForeignKey) {
		this.sucursalsForeignKey = sucursalsForeignKey;
	}

	//OBJETO FK ACTUAL
	public Sucursal sucursalForeignKey;

	public Sucursal getsucursalForeignKey() {
		return sucursalForeignKey;
	}

	public void setsucursalForeignKey(Sucursal sucursalForeignKey) {
		this.sucursalForeignKey = sucursalForeignKey;
	}

	public String sFinalQueryComboEstructura="";

	public List<Estructura> estructurasForeignKey;

	public List<Estructura> getestructurasForeignKey() {
		return estructurasForeignKey;
	}

	public void setestructurasForeignKey(List<Estructura> estructurasForeignKey) {
		this.estructurasForeignKey = estructurasForeignKey;
	}

	//OBJETO FK ACTUAL
	public Estructura estructuraForeignKey;

	public Estructura getestructuraForeignKey() {
		return estructuraForeignKey;
	}

	public void setestructuraForeignKey(Estructura estructuraForeignKey) {
		this.estructuraForeignKey = estructuraForeignKey;
	}

	public String sFinalQueryComboTipoPago_NM="";

	public List<TipoPago_NM> tipopago_nmsForeignKey;

	public List<TipoPago_NM> gettipopago_nmsForeignKey() {
		return tipopago_nmsForeignKey;
	}

	public void settipopago_nmsForeignKey(List<TipoPago_NM> tipopago_nmsForeignKey) {
		this.tipopago_nmsForeignKey = tipopago_nmsForeignKey;
	}

	//OBJETO FK ACTUAL
	public TipoPago_NM tipopago_nmForeignKey;

	public TipoPago_NM gettipopago_nmForeignKey() {
		return tipopago_nmForeignKey;
	}

	public void settipopago_nmForeignKey(TipoPago_NM tipopago_nmForeignKey) {
		this.tipopago_nmForeignKey = tipopago_nmForeignKey;
	}

	public String sFinalQueryComboNumeroPatronal="";

	public List<NumeroPatronal> numeropatronalsForeignKey;

	public List<NumeroPatronal> getnumeropatronalsForeignKey() {
		return numeropatronalsForeignKey;
	}

	public void setnumeropatronalsForeignKey(List<NumeroPatronal> numeropatronalsForeignKey) {
		this.numeropatronalsForeignKey = numeropatronalsForeignKey;
	}

	//OBJETO FK ACTUAL
	public NumeroPatronal numeropatronalForeignKey;

	public NumeroPatronal getnumeropatronalForeignKey() {
		return numeropatronalForeignKey;
	}

	public void setnumeropatronalForeignKey(NumeroPatronal numeropatronalForeignKey) {
		this.numeropatronalForeignKey = numeropatronalForeignKey;
	}

	public String sFinalQueryComboCuentaContable="";

	public List<CuentaContable> cuentacontablesForeignKey;

	public List<CuentaContable> getcuentacontablesForeignKey() {
		return cuentacontablesForeignKey;
	}

	public void setcuentacontablesForeignKey(List<CuentaContable> cuentacontablesForeignKey) {
		this.cuentacontablesForeignKey = cuentacontablesForeignKey;
	}

	//OBJETO FK ACTUAL
	public CuentaContable cuentacontableForeignKey;

	public CuentaContable getcuentacontableForeignKey() {
		return cuentacontableForeignKey;
	}

	public void setcuentacontableForeignKey(CuentaContable cuentacontableForeignKey) {
		this.cuentacontableForeignKey = cuentacontableForeignKey;
	}

	public String sFinalQueryComboTipoEstructura="";

	public List<TipoEstructura> tipoestructurasForeignKey;

	public List<TipoEstructura> gettipoestructurasForeignKey() {
		return tipoestructurasForeignKey;
	}

	public void settipoestructurasForeignKey(List<TipoEstructura> tipoestructurasForeignKey) {
		this.tipoestructurasForeignKey = tipoestructurasForeignKey;
	}

	//OBJETO FK ACTUAL
	public TipoEstructura tipoestructuraForeignKey;

	public TipoEstructura gettipoestructuraForeignKey() {
		return tipoestructuraForeignKey;
	}

	public void settipoestructuraForeignKey(TipoEstructura tipoestructuraForeignKey) {
		this.tipoestructuraForeignKey = tipoestructuraForeignKey;
	}

	public String sFinalQueryComboPais="";

	public List<Pais> paissForeignKey;

	public List<Pais> getpaissForeignKey() {
		return paissForeignKey;
	}

	public void setpaissForeignKey(List<Pais> paissForeignKey) {
		this.paissForeignKey = paissForeignKey;
	}

	//OBJETO FK ACTUAL
	public Pais paisForeignKey;

	public Pais getpaisForeignKey() {
		return paisForeignKey;
	}

	public void setpaisForeignKey(Pais paisForeignKey) {
		this.paisForeignKey = paisForeignKey;
	}

	public String sFinalQueryComboCiudad="";

	public List<Ciudad> ciudadsForeignKey;

	public List<Ciudad> getciudadsForeignKey() {
		return ciudadsForeignKey;
	}

	public void setciudadsForeignKey(List<Ciudad> ciudadsForeignKey) {
		this.ciudadsForeignKey = ciudadsForeignKey;
	}

	//OBJETO FK ACTUAL
	public Ciudad ciudadForeignKey;

	public Ciudad getciudadForeignKey() {
		return ciudadForeignKey;
	}

	public void setciudadForeignKey(Ciudad ciudadForeignKey) {
		this.ciudadForeignKey = ciudadForeignKey;
	}

		
	
	
	
	//BUSQUEDA INTERNA FK
	public Long idCuentaContableActual=0L;

	public Long getidCuentaContableActual() {
		return idCuentaContableActual;
	}

	public void setidCuentaContableActual(Long idCuentaContableActual) {
		this.idCuentaContableActual= idCuentaContableActual;
	}
	
	

	public Boolean isTienePermisosCentroCostoEstructura=false;

	public Boolean getIsTienePermisosCentroCostoEstructura() {
		return isTienePermisosCentroCostoEstructura;
	}

	public void setIsTienePermisosCentroCostoEstructura(Boolean isTienePermisosCentroCostoEstructura) {
		this.isTienePermisosCentroCostoEstructura= isTienePermisosCentroCostoEstructura;
	}


	public Boolean isTienePermisosPlaniVacacion=false;

	public Boolean getIsTienePermisosPlaniVacacion() {
		return isTienePermisosPlaniVacacion;
	}

	public void setIsTienePermisosPlaniVacacion(Boolean isTienePermisosPlaniVacacion) {
		this.isTienePermisosPlaniVacacion= isTienePermisosPlaniVacacion;
	}


	public Boolean isTienePermisosAsistenciaMensual=false;

	public Boolean getIsTienePermisosAsistenciaMensual() {
		return isTienePermisosAsistenciaMensual;
	}

	public void setIsTienePermisosAsistenciaMensual(Boolean isTienePermisosAsistenciaMensual) {
		this.isTienePermisosAsistenciaMensual= isTienePermisosAsistenciaMensual;
	}


	public Boolean isTienePermisosEmpleadoProcesoRubro=false;

	public Boolean getIsTienePermisosEmpleadoProcesoRubro() {
		return isTienePermisosEmpleadoProcesoRubro;
	}

	public void setIsTienePermisosEmpleadoProcesoRubro(Boolean isTienePermisosEmpleadoProcesoRubro) {
		this.isTienePermisosEmpleadoProcesoRubro= isTienePermisosEmpleadoProcesoRubro;
	}


	public Boolean isTienePermisosEmpleadoPagoRubro=false;

	public Boolean getIsTienePermisosEmpleadoPagoRubro() {
		return isTienePermisosEmpleadoPagoRubro;
	}

	public void setIsTienePermisosEmpleadoPagoRubro(Boolean isTienePermisosEmpleadoPagoRubro) {
		this.isTienePermisosEmpleadoPagoRubro= isTienePermisosEmpleadoPagoRubro;
	}


	public Boolean isTienePermisosProvisionEmpleado=false;

	public Boolean getIsTienePermisosProvisionEmpleado() {
		return isTienePermisosProvisionEmpleado;
	}

	public void setIsTienePermisosProvisionEmpleado(Boolean isTienePermisosProvisionEmpleado) {
		this.isTienePermisosProvisionEmpleado= isTienePermisosProvisionEmpleado;
	}


	public Boolean isTienePermisosEmpleado=false;

	public Boolean getIsTienePermisosEmpleado() {
		return isTienePermisosEmpleado;
	}

	public void setIsTienePermisosEmpleado(Boolean isTienePermisosEmpleado) {
		this.isTienePermisosEmpleado= isTienePermisosEmpleado;
	}


	public Boolean isTienePermisosEstructura=false;

	public Boolean getIsTienePermisosEstructura() {
		return isTienePermisosEstructura;
	}

	public void setIsTienePermisosEstructura(Boolean isTienePermisosEstructura) {
		this.isTienePermisosEstructura= isTienePermisosEstructura;
	}


	public Boolean isTienePermisosEvaluacionEmpleado=false;

	public Boolean getIsTienePermisosEvaluacionEmpleado() {
		return isTienePermisosEvaluacionEmpleado;
	}

	public void setIsTienePermisosEvaluacionEmpleado(Boolean isTienePermisosEvaluacionEmpleado) {
		this.isTienePermisosEvaluacionEmpleado= isTienePermisosEvaluacionEmpleado;
	}


	public Boolean isTienePermisosEmpleadoImpuestoRenta=false;

	public Boolean getIsTienePermisosEmpleadoImpuestoRenta() {
		return isTienePermisosEmpleadoImpuestoRenta;
	}

	public void setIsTienePermisosEmpleadoImpuestoRenta(Boolean isTienePermisosEmpleadoImpuestoRenta) {
		this.isTienePermisosEmpleadoImpuestoRenta= isTienePermisosEmpleadoImpuestoRenta;
	}


	public Boolean isTienePermisosRubroEstructura=false;

	public Boolean getIsTienePermisosRubroEstructura() {
		return isTienePermisosRubroEstructura;
	}

	public void setIsTienePermisosRubroEstructura(Boolean isTienePermisosRubroEstructura) {
		this.isTienePermisosRubroEstructura= isTienePermisosRubroEstructura;
	}


	public Boolean isTienePermisosCierreRolMensual=false;

	public Boolean getIsTienePermisosCierreRolMensual() {
		return isTienePermisosCierreRolMensual;
	}

	public void setIsTienePermisosCierreRolMensual(Boolean isTienePermisosCierreRolMensual) {
		this.isTienePermisosCierreRolMensual= isTienePermisosCierreRolMensual;
	}


	public Boolean isTienePermisosFormatoNomi=false;

	public Boolean getIsTienePermisosFormatoNomi() {
		return isTienePermisosFormatoNomi;
	}

	public void setIsTienePermisosFormatoNomi(Boolean isTienePermisosFormatoNomi) {
		this.isTienePermisosFormatoNomi= isTienePermisosFormatoNomi;
	}


	public Boolean isTienePermisosEmpleadoEstructura=false;

	public Boolean getIsTienePermisosEmpleadoEstructura() {
		return isTienePermisosEmpleadoEstructura;
	}

	public void setIsTienePermisosEmpleadoEstructura(Boolean isTienePermisosEmpleadoEstructura) {
		this.isTienePermisosEmpleadoEstructura= isTienePermisosEmpleadoEstructura;
	}


	public Boolean isTienePermisosHistorialPagoNomi=false;

	public Boolean getIsTienePermisosHistorialPagoNomi() {
		return isTienePermisosHistorialPagoNomi;
	}

	public void setIsTienePermisosHistorialPagoNomi(Boolean isTienePermisosHistorialPagoNomi) {
		this.isTienePermisosHistorialPagoNomi= isTienePermisosHistorialPagoNomi;
	}


	public Boolean isTienePermisosAsistenciaDiaria=false;

	public Boolean getIsTienePermisosAsistenciaDiaria() {
		return isTienePermisosAsistenciaDiaria;
	}

	public void setIsTienePermisosAsistenciaDiaria(Boolean isTienePermisosAsistenciaDiaria) {
		this.isTienePermisosAsistenciaDiaria= isTienePermisosAsistenciaDiaria;
	}


	public Boolean isTienePermisosFuncionEstruc=false;

	public Boolean getIsTienePermisosFuncionEstruc() {
		return isTienePermisosFuncionEstruc;
	}

	public void setIsTienePermisosFuncionEstruc(Boolean isTienePermisosFuncionEstruc) {
		this.isTienePermisosFuncionEstruc= isTienePermisosFuncionEstruc;
	}


	public Boolean isTienePermisosSolicitudReemplazo=false;

	public Boolean getIsTienePermisosSolicitudReemplazo() {
		return isTienePermisosSolicitudReemplazo;
	}

	public void setIsTienePermisosSolicitudReemplazo(Boolean isTienePermisosSolicitudReemplazo) {
		this.isTienePermisosSolicitudReemplazo= isTienePermisosSolicitudReemplazo;
	}


	public Boolean isTienePermisosSolicitudHoraExtra=false;

	public Boolean getIsTienePermisosSolicitudHoraExtra() {
		return isTienePermisosSolicitudHoraExtra;
	}

	public void setIsTienePermisosSolicitudHoraExtra(Boolean isTienePermisosSolicitudHoraExtra) {
		this.isTienePermisosSolicitudHoraExtra= isTienePermisosSolicitudHoraExtra;
	}


	public Boolean isTienePermisosEvaluacionNomi=false;

	public Boolean getIsTienePermisosEvaluacionNomi() {
		return isTienePermisosEvaluacionNomi;
	}

	public void setIsTienePermisosEvaluacionNomi(Boolean isTienePermisosEvaluacionNomi) {
		this.isTienePermisosEvaluacionNomi= isTienePermisosEvaluacionNomi;
	}


	public Boolean isTienePermisosSolicitudVacacion=false;

	public Boolean getIsTienePermisosSolicitudVacacion() {
		return isTienePermisosSolicitudVacacion;
	}

	public void setIsTienePermisosSolicitudVacacion(Boolean isTienePermisosSolicitudVacacion) {
		this.isTienePermisosSolicitudVacacion= isTienePermisosSolicitudVacacion;
	}


	public Boolean isTienePermisosResponsableActivoFijo=false;

	public Boolean getIsTienePermisosResponsableActivoFijo() {
		return isTienePermisosResponsableActivoFijo;
	}

	public void setIsTienePermisosResponsableActivoFijo(Boolean isTienePermisosResponsableActivoFijo) {
		this.isTienePermisosResponsableActivoFijo= isTienePermisosResponsableActivoFijo;
	}


	public Boolean isTienePermisosRubroEmpleaCuentaContable=false;

	public Boolean getIsTienePermisosRubroEmpleaCuentaContable() {
		return isTienePermisosRubroEmpleaCuentaContable;
	}

	public void setIsTienePermisosRubroEmpleaCuentaContable(Boolean isTienePermisosRubroEmpleaCuentaContable) {
		this.isTienePermisosRubroEmpleaCuentaContable= isTienePermisosRubroEmpleaCuentaContable;
	}

	
	
	//FALTA:PARA BUSQUEDAS POR CAMPO EN FORMULARIO
	public String sFinalQueryGeneral="";
	public Boolean isEntroOnLoad=false;
	public Boolean isErrorGuardar=false;
	
	public Boolean isGuardarCambiosEnLote=false;
	public Boolean isCargarCombosDependencia=false;
	public Boolean isSeleccionarTodos=false;
	public Boolean isSeleccionados=false;
	public Boolean conGraficoReporte=false;
	
	public Boolean isPostAccionNuevo=false;
	public Boolean isPostAccionSinCerrar=false;
	public Boolean isPostAccionSinMensaje=false;
	
	
	public Boolean esControlTabla=false;
	
	public Boolean isPermisoTodoEstructura;
	public Boolean isPermisoNuevoEstructura;
	public Boolean isPermisoActualizarEstructura;
	public Boolean isPermisoActualizarOriginalEstructura;
	public Boolean isPermisoEliminarEstructura;
	public Boolean isPermisoGuardarCambiosEstructura;
	public Boolean isPermisoConsultaEstructura;
	public Boolean isPermisoBusquedaEstructura;
	public Boolean isPermisoReporteEstructura;
	public Boolean isPermisoPaginacionMedioEstructura;
	public Boolean isPermisoPaginacionAltoEstructura;
	public Boolean isPermisoPaginacionTodoEstructura;
	public Boolean isPermisoCopiarEstructura;
	public Boolean isPermisoVerFormEstructura;
	public Boolean isPermisoDuplicarEstructura;
	public Boolean isPermisoOrdenEstructura;
	
	public List<Estructura> estructurasArbol;
	
	public ArrayList<DatoGeneral> arrDatoGeneral;
	public ArrayList<String> arrDatoGeneralNo;
	ArrayList<Classe> classesActual=new ArrayList<Classe>();
	
	public List<Accion> accions;	
	public List<Accion> accionsFormulario;
	
	
	public ArrayList<DatoGeneralMinimo> arrDatoGeneralMinimos;
	
	public ArrayList<Reporte> tiposArchivosReportes;
	public ArrayList<Reporte> tiposArchivosReportesDinamico;
	public ArrayList<Reporte> tiposReportes;
	public ArrayList<Reporte> tiposReportesDinamico;
	public ArrayList<Reporte> tiposGraficosReportes;
	public ArrayList<Reporte> tiposPaginacion;
	public ArrayList<Reporte> tiposRelaciones;
	public ArrayList<Reporte> tiposAcciones;
	public ArrayList<Reporte> tiposAccionesFormulario;
	public ArrayList<Reporte> tiposSeleccionar;
	
	public ArrayList<Reporte> tiposColumnasSelect;
	public ArrayList<Reporte> tiposRelacionesSelect;
	
	
	public Integer iNumeroPaginacion;
	public Integer iNumeroPaginacionPagina;
	public Pagination pagination;
	public DatosCliente datosCliente;
	public DatosDeep datosDeep;
	public String sTipoArchivoReporte="";
	public String sTipoArchivoReporteDinamico="";
	public String sTipoReporte="";
	public String sTipoReporteDinamico="";
	public String sTipoGraficoReporte="";
	public String sTipoPaginacion="";
	public String sTipoRelacion="";
	public String sTipoAccion="";
	public String sTipoAccionFormulario="";
	public String sTipoSeleccionar="";	
	public String sDetalleReporte="";
	public Boolean isMostrarNumeroPaginacion;
	public String sTipoReporteExtra="";
	public String sValorCampoGeneral="";
	public Boolean esReporteDinamico=false;
	public Boolean esReporteAccionProceso=false;
	public Boolean esRecargarFks=false;
	public String sPathReporteDinamico="";
	
	public EstructuraParameterReturnGeneral estructuraReturnGeneral;
	public EstructuraParameterReturnGeneral estructuraParameterGeneral;
	
	

	public CentroCostoEstructuraLogic centrocostoestructuraLogic=null;

	public CentroCostoEstructuraLogic getCentroCostoEstructuraLogic() {
		return centrocostoestructuraLogic;
	}

	public void setCentroCostoEstructuraLogic(CentroCostoEstructuraLogic centrocostoestructuraLogic) {
		this.centrocostoestructuraLogic = centrocostoestructuraLogic;
	}


	public PlaniVacacionLogic planivacacionCargoLogic=null;

	public PlaniVacacionLogic getPlaniVacacionCargoLogic() {
		return planivacacionCargoLogic;
	}

	public void setPlaniVacacionCargoLogic(PlaniVacacionLogic planivacacionCargoLogic) {
		this.planivacacionCargoLogic = planivacacionCargoLogic;
	}


	public AsistenciaMensualLogic asistenciamensualLogic=null;

	public AsistenciaMensualLogic getAsistenciaMensualLogic() {
		return asistenciamensualLogic;
	}

	public void setAsistenciaMensualLogic(AsistenciaMensualLogic asistenciamensualLogic) {
		this.asistenciamensualLogic = asistenciamensualLogic;
	}


	public EmpleadoProcesoRubroLogic empleadoprocesorubroLogic=null;

	public EmpleadoProcesoRubroLogic getEmpleadoProcesoRubroLogic() {
		return empleadoprocesorubroLogic;
	}

	public void setEmpleadoProcesoRubroLogic(EmpleadoProcesoRubroLogic empleadoprocesorubroLogic) {
		this.empleadoprocesorubroLogic = empleadoprocesorubroLogic;
	}


	public EmpleadoPagoRubroLogic empleadopagorubroLogic=null;

	public EmpleadoPagoRubroLogic getEmpleadoPagoRubroLogic() {
		return empleadopagorubroLogic;
	}

	public void setEmpleadoPagoRubroLogic(EmpleadoPagoRubroLogic empleadopagorubroLogic) {
		this.empleadopagorubroLogic = empleadopagorubroLogic;
	}


	public ProvisionEmpleadoLogic provisionempleadoLogic=null;

	public ProvisionEmpleadoLogic getProvisionEmpleadoLogic() {
		return provisionempleadoLogic;
	}

	public void setProvisionEmpleadoLogic(ProvisionEmpleadoLogic provisionempleadoLogic) {
		this.provisionempleadoLogic = provisionempleadoLogic;
	}


	public EmpleadoLogic empleadoLogic=null;

	public EmpleadoLogic getEmpleadoLogic() {
		return empleadoLogic;
	}

	public void setEmpleadoLogic(EmpleadoLogic empleadoLogic) {
		this.empleadoLogic = empleadoLogic;
	}


	public EvaluacionEmpleadoLogic evaluacionempleadoLogic=null;

	public EvaluacionEmpleadoLogic getEvaluacionEmpleadoLogic() {
		return evaluacionempleadoLogic;
	}

	public void setEvaluacionEmpleadoLogic(EvaluacionEmpleadoLogic evaluacionempleadoLogic) {
		this.evaluacionempleadoLogic = evaluacionempleadoLogic;
	}


	public EmpleadoImpuestoRentaLogic empleadoimpuestorentaLogic=null;

	public EmpleadoImpuestoRentaLogic getEmpleadoImpuestoRentaLogic() {
		return empleadoimpuestorentaLogic;
	}

	public void setEmpleadoImpuestoRentaLogic(EmpleadoImpuestoRentaLogic empleadoimpuestorentaLogic) {
		this.empleadoimpuestorentaLogic = empleadoimpuestorentaLogic;
	}


	public RubroEstructuraLogic rubroestructuraLogic=null;

	public RubroEstructuraLogic getRubroEstructuraLogic() {
		return rubroestructuraLogic;
	}

	public void setRubroEstructuraLogic(RubroEstructuraLogic rubroestructuraLogic) {
		this.rubroestructuraLogic = rubroestructuraLogic;
	}


	public CierreRolMensualLogic cierrerolmensualLogic=null;

	public CierreRolMensualLogic getCierreRolMensualLogic() {
		return cierrerolmensualLogic;
	}

	public void setCierreRolMensualLogic(CierreRolMensualLogic cierrerolmensualLogic) {
		this.cierrerolmensualLogic = cierrerolmensualLogic;
	}


	public FormatoNomiLogic formatonomiLogic=null;

	public FormatoNomiLogic getFormatoNomiLogic() {
		return formatonomiLogic;
	}

	public void setFormatoNomiLogic(FormatoNomiLogic formatonomiLogic) {
		this.formatonomiLogic = formatonomiLogic;
	}


	public EmpleadoEstructuraLogic empleadoestructuraLogic=null;

	public EmpleadoEstructuraLogic getEmpleadoEstructuraLogic() {
		return empleadoestructuraLogic;
	}

	public void setEmpleadoEstructuraLogic(EmpleadoEstructuraLogic empleadoestructuraLogic) {
		this.empleadoestructuraLogic = empleadoestructuraLogic;
	}


	public HistorialPagoNomiLogic historialpagonomiLogic=null;

	public HistorialPagoNomiLogic getHistorialPagoNomiLogic() {
		return historialpagonomiLogic;
	}

	public void setHistorialPagoNomiLogic(HistorialPagoNomiLogic historialpagonomiLogic) {
		this.historialpagonomiLogic = historialpagonomiLogic;
	}


	public AsistenciaDiariaLogic asistenciadiariaLogic=null;

	public AsistenciaDiariaLogic getAsistenciaDiariaLogic() {
		return asistenciadiariaLogic;
	}

	public void setAsistenciaDiariaLogic(AsistenciaDiariaLogic asistenciadiariaLogic) {
		this.asistenciadiariaLogic = asistenciadiariaLogic;
	}


	public FuncionEstrucLogic funcionestrucLogic=null;

	public FuncionEstrucLogic getFuncionEstrucLogic() {
		return funcionestrucLogic;
	}

	public void setFuncionEstrucLogic(FuncionEstrucLogic funcionestrucLogic) {
		this.funcionestrucLogic = funcionestrucLogic;
	}


	public SolicitudReemplazoLogic solicitudreemplazoLogic=null;

	public SolicitudReemplazoLogic getSolicitudReemplazoLogic() {
		return solicitudreemplazoLogic;
	}

	public void setSolicitudReemplazoLogic(SolicitudReemplazoLogic solicitudreemplazoLogic) {
		this.solicitudreemplazoLogic = solicitudreemplazoLogic;
	}


	public SolicitudHoraExtraLogic solicitudhoraextraLogic=null;

	public SolicitudHoraExtraLogic getSolicitudHoraExtraLogic() {
		return solicitudhoraextraLogic;
	}

	public void setSolicitudHoraExtraLogic(SolicitudHoraExtraLogic solicitudhoraextraLogic) {
		this.solicitudhoraextraLogic = solicitudhoraextraLogic;
	}


	public EvaluacionNomiLogic evaluacionnomiLogic=null;

	public EvaluacionNomiLogic getEvaluacionNomiLogic() {
		return evaluacionnomiLogic;
	}

	public void setEvaluacionNomiLogic(EvaluacionNomiLogic evaluacionnomiLogic) {
		this.evaluacionnomiLogic = evaluacionnomiLogic;
	}


	public SolicitudVacacionLogic solicitudvacacionLogic=null;

	public SolicitudVacacionLogic getSolicitudVacacionLogic() {
		return solicitudvacacionLogic;
	}

	public void setSolicitudVacacionLogic(SolicitudVacacionLogic solicitudvacacionLogic) {
		this.solicitudvacacionLogic = solicitudvacacionLogic;
	}


	public ResponsableActivoFijoLogic responsableactivofijoLogic=null;

	public ResponsableActivoFijoLogic getResponsableActivoFijoLogic() {
		return responsableactivofijoLogic;
	}

	public void setResponsableActivoFijoLogic(ResponsableActivoFijoLogic responsableactivofijoLogic) {
		this.responsableactivofijoLogic = responsableactivofijoLogic;
	}


	public RubroEmpleaCuentaContableLogic rubroempleacuentacontableLogic=null;

	public RubroEmpleaCuentaContableLogic getRubroEmpleaCuentaContableLogic() {
		return rubroempleacuentacontableLogic;
	}

	public void setRubroEmpleaCuentaContableLogic(RubroEmpleaCuentaContableLogic rubroempleacuentacontableLogic) {
		this.rubroempleacuentacontableLogic = rubroempleacuentacontableLogic;
	}
 	
	public JasperPrint jasperPrint = null;
	
	public Long lIdUsuarioSesion=0L;				
	
	public Boolean isEsNuevoEstructura=false;
	public Boolean esParaAccionDesdeFormularioEstructura=false;
	public Boolean isEsMantenimientoRelacionesRelacionadoUnico=false;
	public Boolean isEsMantenimientoRelaciones=false;
	public Boolean isEsMantenimientoRelacionado=false;	
	public Boolean isContieneImagenes=false;
		
	//public Boolean conTotales=false; //Viene heredado de JInternalFrameBase
	//public Boolean esParaBusquedaForeignKey=false;
	
	
	protected EstructuraSessionBeanAdditional estructuraSessionBeanAdditional=null;
	
	public EstructuraSessionBeanAdditional getEstructuraSessionBeanAdditional() {
		return this.estructuraSessionBeanAdditional;
	}
	
	public void setEstructuraSessionBeanAdditional(EstructuraSessionBeanAdditional estructuraSessionBeanAdditional) {
		try {
			this.estructuraSessionBeanAdditional=estructuraSessionBeanAdditional;
		} catch(Exception e) {
			;
		}
	}
	
	
	
	
	protected EstructuraBeanSwingJInternalFrameAdditional estructuraBeanSwingJInternalFrameAdditional=null;
	//public class EstructuraBeanSwingJInternalFrame
	
	public EstructuraBeanSwingJInternalFrameAdditional getEstructuraBeanSwingJInternalFrameAdditional() {
		return this.estructuraBeanSwingJInternalFrameAdditional;
	}
	
	public void setEstructuraBeanSwingJInternalFrameAdditional(EstructuraBeanSwingJInternalFrameAdditional estructuraBeanSwingJInternalFrameAdditional) {
		try {
			this.estructuraBeanSwingJInternalFrameAdditional=estructuraBeanSwingJInternalFrameAdditional;
		} catch(Exception e) {
			;
		}
	}
	
	
	
	
	//ESTA EN PADRE
	
	//public EstructuraLogic estructuraLogic;
	public SistemaLogicAdditional sistemaLogicAdditional;
	
	
	public Estructura estructuraBean;
	public EstructuraConstantesFunciones estructuraConstantesFunciones;
	//public EstructuraParameterReturnGeneral estructuraReturnGeneral;
	
	//FK
	
	public EmpresaLogic empresaLogic;
	public SucursalLogic sucursalLogic;
	public TipoPago_NMLogic tipopago_nmLogic;
	public NumeroPatronalLogic numeropatronalLogic;
	public CuentaContableLogic cuentacontableLogic;
	public TipoEstructuraLogic tipoestructuraLogic;
	public PaisLogic paisLogic;
	public CiudadLogic ciudadLogic;
	
	//PARAMETROS
	
	
	//public List<Estructura> estructuras;	
	//public List<Estructura> estructurasEliminados;
	//public List<Estructura> estructurasAux;
	
	public String sAccionMantenimiento="";
	public String sAccionBusqueda="";
	public String sAccionAdicional="";
	public String sUltimaBusqueda="";
	
	public Mensaje mensaje;
	
	
	public String sVisibilidadTablaBusquedas="";					
	public String sVisibilidadTablaElementos="";	
	public String sVisibilidadTablaAcciones="";			
	
	public Boolean isVisibilidadCeldaNuevoEstructura=false;
	public Boolean isVisibilidadCeldaDuplicarEstructura=true;
	public Boolean isVisibilidadCeldaCopiarEstructura=true;
	public Boolean isVisibilidadCeldaVerFormEstructura=true;
	public Boolean isVisibilidadCeldaOrdenEstructura=true;
	public Boolean isVisibilidadCeldaNuevoRelacionesEstructura=false;
	public Boolean isVisibilidadCeldaModificarEstructura=false;
	public Boolean isVisibilidadCeldaActualizarEstructura=false;
	public Boolean isVisibilidadCeldaEliminarEstructura=false;
	public Boolean isVisibilidadCeldaCancelarEstructura=false;
	public Boolean isVisibilidadCeldaGuardarEstructura=false;	
	public Boolean isVisibilidadCeldaGuardarCambiosEstructura=false;	
	
	
	public Boolean isVisibilidadFK_IdCiudad=false;
	public Boolean isVisibilidadFK_IdCuentaContable=false;
	public Boolean isVisibilidadFK_IdEmpresa=false;
	public Boolean isVisibilidadFK_IdEstructura=false;
	public Boolean isVisibilidadFK_IdNumeroPatronal=false;
	public Boolean isVisibilidadFK_IdPais=false;
	public Boolean isVisibilidadFK_IdSucursal=false;
	public Boolean isVisibilidadFK_IdTipoEstructura=false;
	public Boolean isVisibilidadFK_IdTipoPago_NM=false;
	
	public Long getiIdNuevoEstructura() {
		return this.iIdNuevoEstructura;
	}

	public void setiIdNuevoEstructura(Long iIdNuevoEstructura) {
		this.iIdNuevoEstructura = iIdNuevoEstructura;
	}
	
	public Long getidEstructuraActual() {
		return this.idEstructuraActual;
	}

	public void setidEstructuraActual(Long idEstructuraActual) {
		this.idEstructuraActual = idEstructuraActual;
	}
	
	public int getrowIndexActual() {
		return this.rowIndexActual;
	}

	public void setrowIndexActual(int rowIndexActual) {
		this.rowIndexActual=rowIndexActual;
	}
	
	
	public Estructura getestructura() {
		return this.estructura;
	}

	public void setestructura(Estructura estructura) {
		this.estructura = estructura;
	}
	
	public Estructura getestructuraAux() {
		return this.estructuraAux;
	}

	public void setestructuraAux(Estructura estructuraAux) {
		this.estructuraAux = estructuraAux;
	}				
	
	public Estructura getestructuraAnterior() {
		return this.estructuraAnterior;
	}

	public void setestructuraAnterior(Estructura estructuraAnterior) {
		this.estructuraAnterior = estructuraAnterior;
	}	
	
	public Estructura getestructuraTotales() {
		return this.estructuraTotales;
	}

	public void setestructuraTotales(Estructura estructuraTotales) {
		this.estructuraTotales = estructuraTotales;
	}	
	
	public Estructura getestructuraBean() {
		return this.estructuraBean;
	}

	public void setestructuraBean(Estructura estructuraBean) {
		this.estructuraBean = estructuraBean;
	}	
	
	public EstructuraParameterReturnGeneral getestructuraReturnGeneral() {
		return this.estructuraReturnGeneral;
	}

	public void setestructuraReturnGeneral(EstructuraParameterReturnGeneral estructuraReturnGeneral) {
		this.estructuraReturnGeneral = estructuraReturnGeneral;
	}	
	
	
	public Long id_ciudadFK_IdCiudad=-1L;

	public Long getid_ciudadFK_IdCiudad() {
		return this.id_ciudadFK_IdCiudad;
	}

	public void setid_ciudadFK_IdCiudad(Long id_ciudadFK_IdCiudad) {
		this.id_ciudadFK_IdCiudad = id_ciudadFK_IdCiudad;
	}

	public Long id_cuenta_contableFK_IdCuentaContable=-1L;

	public Long getid_cuenta_contableFK_IdCuentaContable() {
		return this.id_cuenta_contableFK_IdCuentaContable;
	}

	public void setid_cuenta_contableFK_IdCuentaContable(Long id_cuenta_contableFK_IdCuentaContable) {
		this.id_cuenta_contableFK_IdCuentaContable = id_cuenta_contableFK_IdCuentaContable;
	}

	public Long id_empresaFK_IdEmpresa=-1L;

	public Long getid_empresaFK_IdEmpresa() {
		return this.id_empresaFK_IdEmpresa;
	}

	public void setid_empresaFK_IdEmpresa(Long id_empresaFK_IdEmpresa) {
		this.id_empresaFK_IdEmpresa = id_empresaFK_IdEmpresa;
	}

	public Long id_estructuraFK_IdEstructura=null;

	public Long getid_estructuraFK_IdEstructura() {
		return this.id_estructuraFK_IdEstructura;
	}

	public void setid_estructuraFK_IdEstructura(Long id_estructuraFK_IdEstructura) {
		this.id_estructuraFK_IdEstructura = id_estructuraFK_IdEstructura;
	}

	public Long id_numero_patronalFK_IdNumeroPatronal=-1L;

	public Long getid_numero_patronalFK_IdNumeroPatronal() {
		return this.id_numero_patronalFK_IdNumeroPatronal;
	}

	public void setid_numero_patronalFK_IdNumeroPatronal(Long id_numero_patronalFK_IdNumeroPatronal) {
		this.id_numero_patronalFK_IdNumeroPatronal = id_numero_patronalFK_IdNumeroPatronal;
	}

	public Long id_paisFK_IdPais=-1L;

	public Long getid_paisFK_IdPais() {
		return this.id_paisFK_IdPais;
	}

	public void setid_paisFK_IdPais(Long id_paisFK_IdPais) {
		this.id_paisFK_IdPais = id_paisFK_IdPais;
	}

	public Long id_sucursalFK_IdSucursal=-1L;

	public Long getid_sucursalFK_IdSucursal() {
		return this.id_sucursalFK_IdSucursal;
	}

	public void setid_sucursalFK_IdSucursal(Long id_sucursalFK_IdSucursal) {
		this.id_sucursalFK_IdSucursal = id_sucursalFK_IdSucursal;
	}

	public Long id_tipo_estructuraFK_IdTipoEstructura=-1L;

	public Long getid_tipo_estructuraFK_IdTipoEstructura() {
		return this.id_tipo_estructuraFK_IdTipoEstructura;
	}

	public void setid_tipo_estructuraFK_IdTipoEstructura(Long id_tipo_estructuraFK_IdTipoEstructura) {
		this.id_tipo_estructuraFK_IdTipoEstructura = id_tipo_estructuraFK_IdTipoEstructura;
	}

	public Long id_tipo_pago__n_mFK_IdTipoPago_NM=-1L;

	public Long getid_tipo_pago__n_mFK_IdTipoPago_NM() {
		return this.id_tipo_pago__n_mFK_IdTipoPago_NM;
	}

	public void setid_tipo_pago__n_mFK_IdTipoPago_NM(Long id_tipo_pago__n_mFK_IdTipoPago_NM) {
		this.id_tipo_pago__n_mFK_IdTipoPago_NM = id_tipo_pago__n_mFK_IdTipoPago_NM;
	}

		
	
	//ELEMENTOS TABLAS PARAMETOS
	
	
	
	
	
	
	//ELEMENTOS TABLAS PARAMETOS_FIN
	
	
	public EstructuraLogic getEstructuraLogic()	{		
		return estructuraLogic;
	}

	public void setEstructuraLogic(EstructuraLogic estructuraLogic) {
		this.estructuraLogic = estructuraLogic;
	}
	
	
	public void setsFinalQueryGeneral(String sFinalQueryGeneral) {
		this.sFinalQueryGeneral=sFinalQueryGeneral;
	}
	
	public String getsFinalQueryGeneral() {
		return this.sFinalQueryGeneral;
	}
		
	public Boolean getIsGuardarCambiosEnLote() {
		return isGuardarCambiosEnLote;
	}

	public void setIsGuardarCambiosEnLote(Boolean isGuardarCambiosEnLote) {
		this.isGuardarCambiosEnLote = isGuardarCambiosEnLote;
	}
	
	public Boolean getIsCargarCombosDependencia() {
		return isCargarCombosDependencia;
	}

	public void setIsCargarCombosDependencia(Boolean isCargarCombosDependencia) {
		this.isCargarCombosDependencia = isCargarCombosDependencia;
	}
	
	public Boolean getIsEsNuevoEstructura() {
		return isEsNuevoEstructura;
	}

	public void setIsEsNuevoEstructura(Boolean isEsNuevoEstructura) {
		this.isEsNuevoEstructura = isEsNuevoEstructura;
	}

	public Boolean getEsParaAccionDesdeFormularioEstructura() {
		return esParaAccionDesdeFormularioEstructura;
	}
	
	public void setEsParaAccionDesdeFormularioEstructura(Boolean esParaAccionDesdeFormularioEstructura) {
		this.esParaAccionDesdeFormularioEstructura = esParaAccionDesdeFormularioEstructura;
	}
	
	public Boolean getIsEsMantenimientoRelacionesRelacionadoUnico() {
		return isEsMantenimientoRelacionesRelacionadoUnico;
	}

	public void setIsEsMantenimientoRelacionesRelacionadoUnico(Boolean isEsMantenimientoRelacionesRelacionadoUnico) {
		this.isEsMantenimientoRelacionesRelacionadoUnico = isEsMantenimientoRelacionesRelacionadoUnico;
	}

	public Boolean getIsEsMantenimientoRelaciones() {
		return isEsMantenimientoRelaciones;
	}

	public void setIsEsMantenimientoRelaciones(Boolean isEsMantenimientoRelaciones) {
		this.isEsMantenimientoRelaciones = isEsMantenimientoRelaciones;
	}

	public Boolean getIsEsMantenimientoRelacionado() {
		return isEsMantenimientoRelacionado;
	}

	public void setIsEsMantenimientoRelacionado(Boolean isEsMantenimientoRelacionado) {
		this.isEsMantenimientoRelacionado = isEsMantenimientoRelacionado;
	}

	public Boolean getesParaBusquedaForeignKey() {
		return esParaBusquedaForeignKey;
	}

	public void setesParaBusquedaForeignKey(Boolean esParaBusquedaForeignKey) {
		this.esParaBusquedaForeignKey = esParaBusquedaForeignKey;
	}

	public Boolean getIsContieneImagenes() {
		return isContieneImagenes;
	}

	public void setIsContieneImagenes(Boolean isContieneImagenes) {
		this.isContieneImagenes = isContieneImagenes;
	}		
	
	
	public void cargarCombosEmpresasForeignKeyLista(String sFinalQuery)throws Exception
	{
		try
		{
			this.empresasForeignKey=new ArrayList<Empresa>();

			ArrayList<Classe> clases=new ArrayList<Classe>();
			ArrayList<String> arrClasses=new ArrayList<String>();
			Classe classe=new Classe();
			DatosDeep datosDeep=new DatosDeep(false,DeepLoadType.INCLUDE,clases,"");

			EmpresaLogic empresaLogic=new EmpresaLogic();

			//empresaLogic.getEmpresaDataAccess().setIsForForeingKeyData(true);

			if(this.estructuraSessionBean==null) {
				this.estructuraSessionBean=new EstructuraSessionBean();
			}

			if(!this.estructuraSessionBean.getisBusquedaDesdeForeignKeySesionEmpresa()) {
				//ARCHITECTURE
				if(Constantes.ISUSAEJBLOGICLAYER) {
					//empresaLogic.getEmpresaDataAccess().setIsForForeingKeyData(true);

					empresaLogic.getTodosEmpresasWithConnection(sFinalQuery,new Pagination());

					this.empresasForeignKey=empresaLogic.getEmpresas();

				} else if(Constantes.ISUSAEJBREMOTE) {

				} else if(Constantes.ISUSAEJBHOME) {
				}


				//ARCHITECTURE
			} else {
				if(!this.conCargarMinimo) {
					this.setVisibilidadBusquedasParaEmpresa(true);
				}
				//ARCHITECTURE

				if(Constantes.ISUSAEJBLOGICLAYER) {
					empresaLogic.getEntityWithConnection(estructuraSessionBean.getlidEmpresaActual());
					this.empresasForeignKey.add(empresaLogic.getEmpresa());
				} else if(Constantes.ISUSAEJBREMOTE) {
				} else if(Constantes.ISUSAEJBHOME) {
				}
				//ARCHITECTURE
			}
		}
		catch(Exception e)
		{
			throw e;
		}
	}

	public void cargarCombosSucursalsForeignKeyLista(String sFinalQuery)throws Exception
	{
		try
		{
			this.sucursalsForeignKey=new ArrayList<Sucursal>();

			ArrayList<Classe> clases=new ArrayList<Classe>();
			ArrayList<String> arrClasses=new ArrayList<String>();
			Classe classe=new Classe();
			DatosDeep datosDeep=new DatosDeep(false,DeepLoadType.INCLUDE,clases,"");

			SucursalLogic sucursalLogic=new SucursalLogic();

			//sucursalLogic.getSucursalDataAccess().setIsForForeingKeyData(true);

			if(this.estructuraSessionBean==null) {
				this.estructuraSessionBean=new EstructuraSessionBean();
			}

			if(!this.estructuraSessionBean.getisBusquedaDesdeForeignKeySesionSucursal()) {
				//ARCHITECTURE
				if(Constantes.ISUSAEJBLOGICLAYER) {
					//sucursalLogic.getSucursalDataAccess().setIsForForeingKeyData(true);

					sucursalLogic.getTodosSucursalsWithConnection(sFinalQuery,new Pagination());

					this.sucursalsForeignKey=sucursalLogic.getSucursals();

				} else if(Constantes.ISUSAEJBREMOTE) {

				} else if(Constantes.ISUSAEJBHOME) {
				}


				//ARCHITECTURE
			} else {
				if(!this.conCargarMinimo) {
					this.setVisibilidadBusquedasParaSucursal(true);
				}
				//ARCHITECTURE

				if(Constantes.ISUSAEJBLOGICLAYER) {
					sucursalLogic.getEntityWithConnection(estructuraSessionBean.getlidSucursalActual());
					this.sucursalsForeignKey.add(sucursalLogic.getSucursal());
				} else if(Constantes.ISUSAEJBREMOTE) {
				} else if(Constantes.ISUSAEJBHOME) {
				}
				//ARCHITECTURE
			}
		}
		catch(Exception e)
		{
			throw e;
		}
	}

	public void cargarCombosEstructurasForeignKeyLista(String sFinalQuery)throws Exception
	{
		try
		{
			this.estructurasForeignKey=new ArrayList<Estructura>();

			ArrayList<Classe> clases=new ArrayList<Classe>();
			ArrayList<String> arrClasses=new ArrayList<String>();
			Classe classe=new Classe();
			DatosDeep datosDeep=new DatosDeep(false,DeepLoadType.INCLUDE,clases,"");

			EstructuraLogic estructuraLogic=new EstructuraLogic();

			//estructuraLogic.getEstructuraDataAccess().setIsForForeingKeyData(true);

			if(this.estructuraSessionBean==null) {
				this.estructuraSessionBean=new EstructuraSessionBean();
			}

			if(!this.estructuraSessionBean.getisBusquedaDesdeForeignKeySesionEstructura()) {
				//ARCHITECTURE
				if(Constantes.ISUSAEJBLOGICLAYER) {
					//estructuraLogic.getEstructuraDataAccess().setIsForForeingKeyData(true);

					estructuraLogic.getTodosEstructurasWithConnection(sFinalQuery,new Pagination());

					this.estructurasForeignKey=estructuraLogic.getEstructuras();

				} else if(Constantes.ISUSAEJBREMOTE) {

				} else if(Constantes.ISUSAEJBHOME) {
				}


				//ARCHITECTURE
			} else {
				if(!this.conCargarMinimo) {
					this.setVisibilidadBusquedasParaEstructura(true);
				}
				//ARCHITECTURE

				if(Constantes.ISUSAEJBLOGICLAYER) {
					estructuraLogic.getEntityWithConnection(estructuraSessionBean.getlidEstructuraActual());
					this.estructurasForeignKey.add(estructuraLogic.getEstructura());
				} else if(Constantes.ISUSAEJBREMOTE) {
				} else if(Constantes.ISUSAEJBHOME) {
				}
				//ARCHITECTURE
			}
		}
		catch(Exception e)
		{
			throw e;
		}
	}

	public void cargarCombosTipoPago_NMsForeignKeyLista(String sFinalQuery)throws Exception
	{
		try
		{
			this.tipopago_nmsForeignKey=new ArrayList<TipoPago_NM>();

			ArrayList<Classe> clases=new ArrayList<Classe>();
			ArrayList<String> arrClasses=new ArrayList<String>();
			Classe classe=new Classe();
			DatosDeep datosDeep=new DatosDeep(false,DeepLoadType.INCLUDE,clases,"");

			TipoPago_NMLogic tipopago_nmLogic=new TipoPago_NMLogic();

			//tipopago_nmLogic.getTipoPago_NMDataAccess().setIsForForeingKeyData(true);

			if(this.estructuraSessionBean==null) {
				this.estructuraSessionBean=new EstructuraSessionBean();
			}

			if(!this.estructuraSessionBean.getisBusquedaDesdeForeignKeySesionTipoPago_NM()) {
				//ARCHITECTURE
				if(Constantes.ISUSAEJBLOGICLAYER) {
					//tipopago_nmLogic.getTipoPago_NMDataAccess().setIsForForeingKeyData(true);

					tipopago_nmLogic.getTodosTipoPago_NMsWithConnection(sFinalQuery,new Pagination());

					this.tipopago_nmsForeignKey=tipopago_nmLogic.getTipoPago_NMs();

				} else if(Constantes.ISUSAEJBREMOTE) {

				} else if(Constantes.ISUSAEJBHOME) {
				}


				//ARCHITECTURE
			} else {
				if(!this.conCargarMinimo) {
					this.setVisibilidadBusquedasParaTipoPago_NM(true);
				}
				//ARCHITECTURE

				if(Constantes.ISUSAEJBLOGICLAYER) {
					tipopago_nmLogic.getEntityWithConnection(estructuraSessionBean.getlidTipoPago_NMActual());
					this.tipopago_nmsForeignKey.add(tipopago_nmLogic.getTipoPago_NM());
				} else if(Constantes.ISUSAEJBREMOTE) {
				} else if(Constantes.ISUSAEJBHOME) {
				}
				//ARCHITECTURE
			}
		}
		catch(Exception e)
		{
			throw e;
		}
	}

	public void cargarCombosNumeroPatronalsForeignKeyLista(String sFinalQuery)throws Exception
	{
		try
		{
			this.numeropatronalsForeignKey=new ArrayList<NumeroPatronal>();

			ArrayList<Classe> clases=new ArrayList<Classe>();
			ArrayList<String> arrClasses=new ArrayList<String>();
			Classe classe=new Classe();
			DatosDeep datosDeep=new DatosDeep(false,DeepLoadType.INCLUDE,clases,"");

			NumeroPatronalLogic numeropatronalLogic=new NumeroPatronalLogic();

			//numeropatronalLogic.getNumeroPatronalDataAccess().setIsForForeingKeyData(true);

			if(this.estructuraSessionBean==null) {
				this.estructuraSessionBean=new EstructuraSessionBean();
			}

			if(!this.estructuraSessionBean.getisBusquedaDesdeForeignKeySesionNumeroPatronal()) {
				//ARCHITECTURE
				if(Constantes.ISUSAEJBLOGICLAYER) {
					//numeropatronalLogic.getNumeroPatronalDataAccess().setIsForForeingKeyData(true);

					numeropatronalLogic.getTodosNumeroPatronalsWithConnection(sFinalQuery,new Pagination());

					this.numeropatronalsForeignKey=numeropatronalLogic.getNumeroPatronals();

				} else if(Constantes.ISUSAEJBREMOTE) {

				} else if(Constantes.ISUSAEJBHOME) {
				}


				//ARCHITECTURE
			} else {
				if(!this.conCargarMinimo) {
					this.setVisibilidadBusquedasParaNumeroPatronal(true);
				}
				//ARCHITECTURE

				if(Constantes.ISUSAEJBLOGICLAYER) {
					numeropatronalLogic.getEntityWithConnection(estructuraSessionBean.getlidNumeroPatronalActual());
					this.numeropatronalsForeignKey.add(numeropatronalLogic.getNumeroPatronal());
				} else if(Constantes.ISUSAEJBREMOTE) {
				} else if(Constantes.ISUSAEJBHOME) {
				}
				//ARCHITECTURE
			}
		}
		catch(Exception e)
		{
			throw e;
		}
	}

	public void cargarCombosCuentaContablesForeignKeyLista(String sFinalQuery)throws Exception
	{
		try
		{
			this.cuentacontablesForeignKey=new ArrayList<CuentaContable>();

			ArrayList<Classe> clases=new ArrayList<Classe>();
			ArrayList<String> arrClasses=new ArrayList<String>();
			Classe classe=new Classe();
			DatosDeep datosDeep=new DatosDeep(false,DeepLoadType.INCLUDE,clases,"");

			CuentaContableLogic cuentacontableLogic=new CuentaContableLogic();

			//cuentacontableLogic.getCuentaContableDataAccess().setIsForForeingKeyData(true);

			if(this.estructuraSessionBean==null) {
				this.estructuraSessionBean=new EstructuraSessionBean();
			}

			if(!this.estructuraSessionBean.getisBusquedaDesdeForeignKeySesionCuentaContable()) {
				//ARCHITECTURE
				if(Constantes.ISUSAEJBLOGICLAYER) {
					//cuentacontableLogic.getCuentaContableDataAccess().setIsForForeingKeyData(true);

					cuentacontableLogic.getTodosCuentaContablesWithConnection(sFinalQuery,new Pagination());

					this.cuentacontablesForeignKey=cuentacontableLogic.getCuentaContables();

				} else if(Constantes.ISUSAEJBREMOTE) {

				} else if(Constantes.ISUSAEJBHOME) {
				}


				//ARCHITECTURE
			} else {
				if(!this.conCargarMinimo) {
					this.setVisibilidadBusquedasParaCuentaContable(true);
				}
				//ARCHITECTURE

				if(Constantes.ISUSAEJBLOGICLAYER) {
					cuentacontableLogic.getEntityWithConnection(estructuraSessionBean.getlidCuentaContableActual());
					this.cuentacontablesForeignKey.add(cuentacontableLogic.getCuentaContable());
				} else if(Constantes.ISUSAEJBREMOTE) {
				} else if(Constantes.ISUSAEJBHOME) {
				}
				//ARCHITECTURE
			}
		}
		catch(Exception e)
		{
			throw e;
		}
	}

	public void cargarCombosTipoEstructurasForeignKeyLista(String sFinalQuery)throws Exception
	{
		try
		{
			this.tipoestructurasForeignKey=new ArrayList<TipoEstructura>();

			ArrayList<Classe> clases=new ArrayList<Classe>();
			ArrayList<String> arrClasses=new ArrayList<String>();
			Classe classe=new Classe();
			DatosDeep datosDeep=new DatosDeep(false,DeepLoadType.INCLUDE,clases,"");

			TipoEstructuraLogic tipoestructuraLogic=new TipoEstructuraLogic();

			//tipoestructuraLogic.getTipoEstructuraDataAccess().setIsForForeingKeyData(true);

			if(this.estructuraSessionBean==null) {
				this.estructuraSessionBean=new EstructuraSessionBean();
			}

			if(!this.estructuraSessionBean.getisBusquedaDesdeForeignKeySesionTipoEstructura()) {
				//ARCHITECTURE
				if(Constantes.ISUSAEJBLOGICLAYER) {
					//tipoestructuraLogic.getTipoEstructuraDataAccess().setIsForForeingKeyData(true);

					tipoestructuraLogic.getTodosTipoEstructurasWithConnection(sFinalQuery,new Pagination());

					this.tipoestructurasForeignKey=tipoestructuraLogic.getTipoEstructuras();

				} else if(Constantes.ISUSAEJBREMOTE) {

				} else if(Constantes.ISUSAEJBHOME) {
				}


				//ARCHITECTURE
			} else {
				if(!this.conCargarMinimo) {
					this.setVisibilidadBusquedasParaTipoEstructura(true);
				}
				//ARCHITECTURE

				if(Constantes.ISUSAEJBLOGICLAYER) {
					tipoestructuraLogic.getEntityWithConnection(estructuraSessionBean.getlidTipoEstructuraActual());
					this.tipoestructurasForeignKey.add(tipoestructuraLogic.getTipoEstructura());
				} else if(Constantes.ISUSAEJBREMOTE) {
				} else if(Constantes.ISUSAEJBHOME) {
				}
				//ARCHITECTURE
			}
		}
		catch(Exception e)
		{
			throw e;
		}
	}

	public void cargarCombosPaissForeignKeyLista(String sFinalQuery)throws Exception
	{
		try
		{
			this.paissForeignKey=new ArrayList<Pais>();

			ArrayList<Classe> clases=new ArrayList<Classe>();
			ArrayList<String> arrClasses=new ArrayList<String>();
			Classe classe=new Classe();
			DatosDeep datosDeep=new DatosDeep(false,DeepLoadType.INCLUDE,clases,"");

			PaisLogic paisLogic=new PaisLogic();

			//paisLogic.getPaisDataAccess().setIsForForeingKeyData(true);

			if(this.estructuraSessionBean==null) {
				this.estructuraSessionBean=new EstructuraSessionBean();
			}

			if(!this.estructuraSessionBean.getisBusquedaDesdeForeignKeySesionPais()) {
				//ARCHITECTURE
				if(Constantes.ISUSAEJBLOGICLAYER) {
					//paisLogic.getPaisDataAccess().setIsForForeingKeyData(true);

					paisLogic.getTodosPaissWithConnection(sFinalQuery,new Pagination());

					this.paissForeignKey=paisLogic.getPaiss();

				} else if(Constantes.ISUSAEJBREMOTE) {

				} else if(Constantes.ISUSAEJBHOME) {
				}


				//ARCHITECTURE
			} else {
				if(!this.conCargarMinimo) {
					this.setVisibilidadBusquedasParaPais(true);
				}
				//ARCHITECTURE

				if(Constantes.ISUSAEJBLOGICLAYER) {
					paisLogic.getEntityWithConnection(estructuraSessionBean.getlidPaisActual());
					this.paissForeignKey.add(paisLogic.getPais());
				} else if(Constantes.ISUSAEJBREMOTE) {
				} else if(Constantes.ISUSAEJBHOME) {
				}
				//ARCHITECTURE
			}
		}
		catch(Exception e)
		{
			throw e;
		}
	}

	public void cargarCombosCiudadsForeignKeyLista(String sFinalQuery)throws Exception
	{
		try
		{
			this.ciudadsForeignKey=new ArrayList<Ciudad>();

			ArrayList<Classe> clases=new ArrayList<Classe>();
			ArrayList<String> arrClasses=new ArrayList<String>();
			Classe classe=new Classe();
			DatosDeep datosDeep=new DatosDeep(false,DeepLoadType.INCLUDE,clases,"");

			CiudadLogic ciudadLogic=new CiudadLogic();

			//ciudadLogic.getCiudadDataAccess().setIsForForeingKeyData(true);

			if(this.estructuraSessionBean==null) {
				this.estructuraSessionBean=new EstructuraSessionBean();
			}

			if(!this.estructuraSessionBean.getisBusquedaDesdeForeignKeySesionCiudad()) {
				//ARCHITECTURE
				if(Constantes.ISUSAEJBLOGICLAYER) {
					//ciudadLogic.getCiudadDataAccess().setIsForForeingKeyData(true);

					ciudadLogic.getTodosCiudadsWithConnection(sFinalQuery,new Pagination());

					this.ciudadsForeignKey=ciudadLogic.getCiudads();

				} else if(Constantes.ISUSAEJBREMOTE) {

				} else if(Constantes.ISUSAEJBHOME) {
				}


				//ARCHITECTURE
			} else {
				if(!this.conCargarMinimo) {
					this.setVisibilidadBusquedasParaCiudad(true);
				}
				//ARCHITECTURE

				if(Constantes.ISUSAEJBLOGICLAYER) {
					ciudadLogic.getEntityWithConnection(estructuraSessionBean.getlidCiudadActual());
					this.ciudadsForeignKey.add(ciudadLogic.getCiudad());
				} else if(Constantes.ISUSAEJBREMOTE) {
				} else if(Constantes.ISUSAEJBHOME) {
				}
				//ARCHITECTURE
			}
		}
		catch(Exception e)
		{
			throw e;
		}
	}

	
	
	public void setActualEmpresaForeignKey(Long idEmpresaSeleccionado,Boolean conCombosBusquedas,String sFormularioTipoBusqueda)throws Exception
	{
		try
		{
			Empresa  empresaTemp=null;

			for(Empresa empresaAux:empresasForeignKey) {
				if(empresaAux.getId()!=null && empresaAux.getId().equals(idEmpresaSeleccionado)) {
					empresaTemp=empresaAux;
					break;
				}
			}

			if(sFormularioTipoBusqueda.equals("Formulario") || sFormularioTipoBusqueda.equals("Todos")){
				if(empresaTemp!=null) {

					if(this.estructura!=null) {
						this.estructura.setEmpresa(empresaTemp);
					}

					if(this.jInternalFrameDetalleFormEstructura!=null) {
						this.jInternalFrameDetalleFormEstructura.jComboBoxid_empresaEstructura.setSelectedItem(empresaTemp);
					}
				} else {
					//jComboBoxid_empresaEstructura.setSelectedItem(empresaTemp);
					if(this.jInternalFrameDetalleFormEstructura!=null) {
						if(this.jInternalFrameDetalleFormEstructura.jComboBoxid_empresaEstructura.getItemCount()>0) {
							this.jInternalFrameDetalleFormEstructura.jComboBoxid_empresaEstructura.setSelectedIndex(0);
						}
					}
				}
			}

			if(conCombosBusquedas) {

		//BYDAN_BUSQUEDAS
						

					}

		}
		catch(Exception e)
		{
			throw e;
		}
	}

	public String getActualEmpresaForeignKeyDescripcion(Long idEmpresaSeleccionado)throws Exception
	{
		String sDescripcion="";

		try
		{
			Empresa  empresaTemp=null;

			for(Empresa empresaAux:empresasForeignKey) {
				if(empresaAux.getId()!=null && empresaAux.getId().equals(idEmpresaSeleccionado)) {
					empresaTemp=empresaAux;
					break;
				}
			}


			sDescripcion=EmpresaConstantesFunciones.getEmpresaDescripcion(empresaTemp);
		}
		catch(Exception e)
		{
			throw e;
		}

		return sDescripcion;
	}

	@SuppressWarnings("rawtypes")
	public void setActualEmpresaForeignKeyGenerico(Long idEmpresaSeleccionado,JComboBox jComboBoxid_empresaEstructuraGenerico)throws Exception
	{
		try
		{
			Empresa  empresaTemp=null;

			for(Empresa empresaAux:empresasForeignKey) {
				if(empresaAux.getId()!=null && empresaAux.getId().equals(idEmpresaSeleccionado)) {
					empresaTemp=empresaAux;
					break;
				}
			}

			if(empresaTemp!=null) {
				jComboBoxid_empresaEstructuraGenerico.setSelectedItem(empresaTemp);
			} else {
				if(jComboBoxid_empresaEstructuraGenerico!=null && jComboBoxid_empresaEstructuraGenerico.getItemCount()>0) {
					jComboBoxid_empresaEstructuraGenerico.setSelectedIndex(0);
				}
			}

		}
		catch(Exception e)
		{
			throw e;
		}

	}

	public void setActualSucursalForeignKey(Long idSucursalSeleccionado,Boolean conCombosBusquedas,String sFormularioTipoBusqueda)throws Exception
	{
		try
		{
			Sucursal  sucursalTemp=null;

			for(Sucursal sucursalAux:sucursalsForeignKey) {
				if(sucursalAux.getId()!=null && sucursalAux.getId().equals(idSucursalSeleccionado)) {
					sucursalTemp=sucursalAux;
					break;
				}
			}

			if(sFormularioTipoBusqueda.equals("Formulario") || sFormularioTipoBusqueda.equals("Todos")){
				if(sucursalTemp!=null) {

					if(this.estructura!=null) {
						this.estructura.setSucursal(sucursalTemp);
					}

					if(this.jInternalFrameDetalleFormEstructura!=null) {
						this.jInternalFrameDetalleFormEstructura.jComboBoxid_sucursalEstructura.setSelectedItem(sucursalTemp);
					}
				} else {
					//jComboBoxid_sucursalEstructura.setSelectedItem(sucursalTemp);
					if(this.jInternalFrameDetalleFormEstructura!=null) {
						if(this.jInternalFrameDetalleFormEstructura.jComboBoxid_sucursalEstructura.getItemCount()>0) {
							this.jInternalFrameDetalleFormEstructura.jComboBoxid_sucursalEstructura.setSelectedIndex(0);
						}
					}
				}
			}

			if(conCombosBusquedas) {

		//BYDAN_BUSQUEDAS
						

					}

		}
		catch(Exception e)
		{
			throw e;
		}
	}

	public String getActualSucursalForeignKeyDescripcion(Long idSucursalSeleccionado)throws Exception
	{
		String sDescripcion="";

		try
		{
			Sucursal  sucursalTemp=null;

			for(Sucursal sucursalAux:sucursalsForeignKey) {
				if(sucursalAux.getId()!=null && sucursalAux.getId().equals(idSucursalSeleccionado)) {
					sucursalTemp=sucursalAux;
					break;
				}
			}


			sDescripcion=SucursalConstantesFunciones.getSucursalDescripcion(sucursalTemp);
		}
		catch(Exception e)
		{
			throw e;
		}

		return sDescripcion;
	}

	@SuppressWarnings("rawtypes")
	public void setActualSucursalForeignKeyGenerico(Long idSucursalSeleccionado,JComboBox jComboBoxid_sucursalEstructuraGenerico)throws Exception
	{
		try
		{
			Sucursal  sucursalTemp=null;

			for(Sucursal sucursalAux:sucursalsForeignKey) {
				if(sucursalAux.getId()!=null && sucursalAux.getId().equals(idSucursalSeleccionado)) {
					sucursalTemp=sucursalAux;
					break;
				}
			}

			if(sucursalTemp!=null) {
				jComboBoxid_sucursalEstructuraGenerico.setSelectedItem(sucursalTemp);
			} else {
				if(jComboBoxid_sucursalEstructuraGenerico!=null && jComboBoxid_sucursalEstructuraGenerico.getItemCount()>0) {
					jComboBoxid_sucursalEstructuraGenerico.setSelectedIndex(0);
				}
			}

		}
		catch(Exception e)
		{
			throw e;
		}

	}

	public void setActualEstructuraForeignKey(Long idEstructuraSeleccionado,Boolean conCombosBusquedas,String sFormularioTipoBusqueda)throws Exception
	{
		try
		{
			Estructura  estructuraTemp=null;

			for(Estructura estructuraAux:estructurasForeignKey) {
				if(estructuraAux.getId()!=null && estructuraAux.getId().equals(idEstructuraSeleccionado)) {
					estructuraTemp=estructuraAux;
					break;
				}
			}

			if(sFormularioTipoBusqueda.equals("Formulario") || sFormularioTipoBusqueda.equals("Todos")){
				if(estructuraTemp!=null) {

					if(this.estructura!=null) {
						this.estructura.setEstructura(estructuraTemp);
					}

					if(this.jInternalFrameDetalleFormEstructura!=null) {
						this.jInternalFrameDetalleFormEstructura.jComboBoxid_estructuraEstructura.setSelectedItem(estructuraTemp);
					}
				} else {
					//jComboBoxid_estructuraEstructura.setSelectedItem(estructuraTemp);
					if(this.jInternalFrameDetalleFormEstructura!=null) {
						if(this.jInternalFrameDetalleFormEstructura.jComboBoxid_estructuraEstructura.getItemCount()>0) {
							this.jInternalFrameDetalleFormEstructura.jComboBoxid_estructuraEstructura.setSelectedIndex(0);
						}
					}
				}
			}

			if(conCombosBusquedas) {

		//BYDAN_BUSQUEDAS
						
				if(sFormularioTipoBusqueda.equals("FK_IdEstructura") || sFormularioTipoBusqueda.equals("Todos")){
					if(estructuraTemp!=null && jComboBoxid_estructuraFK_IdEstructuraEstructura!=null) {
						jComboBoxid_estructuraFK_IdEstructuraEstructura.setSelectedItem(estructuraTemp);
					} else {
						if(jComboBoxid_estructuraFK_IdEstructuraEstructura!=null) {
							//jComboBoxid_estructuraFK_IdEstructuraEstructura.setSelectedItem(estructuraTemp);
							if(jComboBoxid_estructuraFK_IdEstructuraEstructura.getItemCount()>0) {
								jComboBoxid_estructuraFK_IdEstructuraEstructura.setSelectedIndex(0);
							}
						}
					}
				}

					}

		}
		catch(Exception e)
		{
			throw e;
		}
	}

	public String getActualEstructuraForeignKeyDescripcion(Long idEstructuraSeleccionado)throws Exception
	{
		String sDescripcion="";

		try
		{
			Estructura  estructuraTemp=null;

			for(Estructura estructuraAux:estructurasForeignKey) {
				if(estructuraAux.getId()!=null && estructuraAux.getId().equals(idEstructuraSeleccionado)) {
					estructuraTemp=estructuraAux;
					break;
				}
			}


			sDescripcion=EstructuraConstantesFunciones.getEstructuraDescripcion(estructuraTemp);
		}
		catch(Exception e)
		{
			throw e;
		}

		return sDescripcion;
	}

	@SuppressWarnings("rawtypes")
	public void setActualEstructuraForeignKeyGenerico(Long idEstructuraSeleccionado,JComboBox jComboBoxid_estructuraEstructuraGenerico)throws Exception
	{
		try
		{
			Estructura  estructuraTemp=null;

			for(Estructura estructuraAux:estructurasForeignKey) {
				if(estructuraAux.getId()!=null && estructuraAux.getId().equals(idEstructuraSeleccionado)) {
					estructuraTemp=estructuraAux;
					break;
				}
			}

			if(estructuraTemp!=null) {
				jComboBoxid_estructuraEstructuraGenerico.setSelectedItem(estructuraTemp);
			} else {
				if(jComboBoxid_estructuraEstructuraGenerico!=null && jComboBoxid_estructuraEstructuraGenerico.getItemCount()>0) {
					jComboBoxid_estructuraEstructuraGenerico.setSelectedIndex(0);
				}
			}

		}
		catch(Exception e)
		{
			throw e;
		}

	}

	public void setActualTipoPago_NMForeignKey(Long idTipoPago_NMSeleccionado,Boolean conCombosBusquedas,String sFormularioTipoBusqueda)throws Exception
	{
		try
		{
			TipoPago_NM  tipopago_nmTemp=null;

			for(TipoPago_NM tipopago_nmAux:tipopago_nmsForeignKey) {
				if(tipopago_nmAux.getId()!=null && tipopago_nmAux.getId().equals(idTipoPago_NMSeleccionado)) {
					tipopago_nmTemp=tipopago_nmAux;
					break;
				}
			}

			if(sFormularioTipoBusqueda.equals("Formulario") || sFormularioTipoBusqueda.equals("Todos")){
				if(tipopago_nmTemp!=null) {

					if(this.estructura!=null) {
						this.estructura.setTipoPago_NM(tipopago_nmTemp);
					}

					if(this.jInternalFrameDetalleFormEstructura!=null) {
						this.jInternalFrameDetalleFormEstructura.jComboBoxid_tipo_pago__n_mEstructura.setSelectedItem(tipopago_nmTemp);
					}
				} else {
					//jComboBoxid_tipo_pago__n_mEstructura.setSelectedItem(tipopago_nmTemp);
					if(this.jInternalFrameDetalleFormEstructura!=null) {
						if(this.jInternalFrameDetalleFormEstructura.jComboBoxid_tipo_pago__n_mEstructura.getItemCount()>0) {
							this.jInternalFrameDetalleFormEstructura.jComboBoxid_tipo_pago__n_mEstructura.setSelectedIndex(0);
						}
					}
				}
			}

			if(conCombosBusquedas) {

		//BYDAN_BUSQUEDAS
						
				if(sFormularioTipoBusqueda.equals("FK_IdTipoPago_NM") || sFormularioTipoBusqueda.equals("Todos")){
					if(tipopago_nmTemp!=null && jComboBoxid_tipo_pago__n_mFK_IdTipoPago_NMEstructura!=null) {
						jComboBoxid_tipo_pago__n_mFK_IdTipoPago_NMEstructura.setSelectedItem(tipopago_nmTemp);
					} else {
						if(jComboBoxid_tipo_pago__n_mFK_IdTipoPago_NMEstructura!=null) {
							//jComboBoxid_tipo_pago__n_mFK_IdTipoPago_NMEstructura.setSelectedItem(tipopago_nmTemp);
							if(jComboBoxid_tipo_pago__n_mFK_IdTipoPago_NMEstructura.getItemCount()>0) {
								jComboBoxid_tipo_pago__n_mFK_IdTipoPago_NMEstructura.setSelectedIndex(0);
							}
						}
					}
				}

					}

		}
		catch(Exception e)
		{
			throw e;
		}
	}

	public String getActualTipoPago_NMForeignKeyDescripcion(Long idTipoPago_NMSeleccionado)throws Exception
	{
		String sDescripcion="";

		try
		{
			TipoPago_NM  tipopago_nmTemp=null;

			for(TipoPago_NM tipopago_nmAux:tipopago_nmsForeignKey) {
				if(tipopago_nmAux.getId()!=null && tipopago_nmAux.getId().equals(idTipoPago_NMSeleccionado)) {
					tipopago_nmTemp=tipopago_nmAux;
					break;
				}
			}


			sDescripcion=TipoPago_NMConstantesFunciones.getTipoPago_NMDescripcion(tipopago_nmTemp);
		}
		catch(Exception e)
		{
			throw e;
		}

		return sDescripcion;
	}

	@SuppressWarnings("rawtypes")
	public void setActualTipoPago_NMForeignKeyGenerico(Long idTipoPago_NMSeleccionado,JComboBox jComboBoxid_tipo_pago__n_mEstructuraGenerico)throws Exception
	{
		try
		{
			TipoPago_NM  tipopago_nmTemp=null;

			for(TipoPago_NM tipopago_nmAux:tipopago_nmsForeignKey) {
				if(tipopago_nmAux.getId()!=null && tipopago_nmAux.getId().equals(idTipoPago_NMSeleccionado)) {
					tipopago_nmTemp=tipopago_nmAux;
					break;
				}
			}

			if(tipopago_nmTemp!=null) {
				jComboBoxid_tipo_pago__n_mEstructuraGenerico.setSelectedItem(tipopago_nmTemp);
			} else {
				if(jComboBoxid_tipo_pago__n_mEstructuraGenerico!=null && jComboBoxid_tipo_pago__n_mEstructuraGenerico.getItemCount()>0) {
					jComboBoxid_tipo_pago__n_mEstructuraGenerico.setSelectedIndex(0);
				}
			}

		}
		catch(Exception e)
		{
			throw e;
		}

	}

	public void setActualNumeroPatronalForeignKey(Long idNumeroPatronalSeleccionado,Boolean conCombosBusquedas,String sFormularioTipoBusqueda)throws Exception
	{
		try
		{
			NumeroPatronal  numeropatronalTemp=null;

			for(NumeroPatronal numeropatronalAux:numeropatronalsForeignKey) {
				if(numeropatronalAux.getId()!=null && numeropatronalAux.getId().equals(idNumeroPatronalSeleccionado)) {
					numeropatronalTemp=numeropatronalAux;
					break;
				}
			}

			if(sFormularioTipoBusqueda.equals("Formulario") || sFormularioTipoBusqueda.equals("Todos")){
				if(numeropatronalTemp!=null) {

					if(this.estructura!=null) {
						this.estructura.setNumeroPatronal(numeropatronalTemp);
					}

					if(this.jInternalFrameDetalleFormEstructura!=null) {
						this.jInternalFrameDetalleFormEstructura.jComboBoxid_numero_patronalEstructura.setSelectedItem(numeropatronalTemp);
					}
				} else {
					//jComboBoxid_numero_patronalEstructura.setSelectedItem(numeropatronalTemp);
					if(this.jInternalFrameDetalleFormEstructura!=null) {
						if(this.jInternalFrameDetalleFormEstructura.jComboBoxid_numero_patronalEstructura.getItemCount()>0) {
							this.jInternalFrameDetalleFormEstructura.jComboBoxid_numero_patronalEstructura.setSelectedIndex(0);
						}
					}
				}
			}

			if(conCombosBusquedas) {

		//BYDAN_BUSQUEDAS
						
				if(sFormularioTipoBusqueda.equals("FK_IdNumeroPatronal") || sFormularioTipoBusqueda.equals("Todos")){
					if(numeropatronalTemp!=null && jComboBoxid_numero_patronalFK_IdNumeroPatronalEstructura!=null) {
						jComboBoxid_numero_patronalFK_IdNumeroPatronalEstructura.setSelectedItem(numeropatronalTemp);
					} else {
						if(jComboBoxid_numero_patronalFK_IdNumeroPatronalEstructura!=null) {
							//jComboBoxid_numero_patronalFK_IdNumeroPatronalEstructura.setSelectedItem(numeropatronalTemp);
							if(jComboBoxid_numero_patronalFK_IdNumeroPatronalEstructura.getItemCount()>0) {
								jComboBoxid_numero_patronalFK_IdNumeroPatronalEstructura.setSelectedIndex(0);
							}
						}
					}
				}

					}

		}
		catch(Exception e)
		{
			throw e;
		}
	}

	public String getActualNumeroPatronalForeignKeyDescripcion(Long idNumeroPatronalSeleccionado)throws Exception
	{
		String sDescripcion="";

		try
		{
			NumeroPatronal  numeropatronalTemp=null;

			for(NumeroPatronal numeropatronalAux:numeropatronalsForeignKey) {
				if(numeropatronalAux.getId()!=null && numeropatronalAux.getId().equals(idNumeroPatronalSeleccionado)) {
					numeropatronalTemp=numeropatronalAux;
					break;
				}
			}


			sDescripcion=NumeroPatronalConstantesFunciones.getNumeroPatronalDescripcion(numeropatronalTemp);
		}
		catch(Exception e)
		{
			throw e;
		}

		return sDescripcion;
	}

	@SuppressWarnings("rawtypes")
	public void setActualNumeroPatronalForeignKeyGenerico(Long idNumeroPatronalSeleccionado,JComboBox jComboBoxid_numero_patronalEstructuraGenerico)throws Exception
	{
		try
		{
			NumeroPatronal  numeropatronalTemp=null;

			for(NumeroPatronal numeropatronalAux:numeropatronalsForeignKey) {
				if(numeropatronalAux.getId()!=null && numeropatronalAux.getId().equals(idNumeroPatronalSeleccionado)) {
					numeropatronalTemp=numeropatronalAux;
					break;
				}
			}

			if(numeropatronalTemp!=null) {
				jComboBoxid_numero_patronalEstructuraGenerico.setSelectedItem(numeropatronalTemp);
			} else {
				if(jComboBoxid_numero_patronalEstructuraGenerico!=null && jComboBoxid_numero_patronalEstructuraGenerico.getItemCount()>0) {
					jComboBoxid_numero_patronalEstructuraGenerico.setSelectedIndex(0);
				}
			}

		}
		catch(Exception e)
		{
			throw e;
		}

	}

	public void setActualCuentaContableForeignKey(Long idCuentaContableSeleccionado,Boolean conCombosBusquedas,String sFormularioTipoBusqueda)throws Exception
	{
		try
		{
			CuentaContable  cuentacontableTemp=null;

			for(CuentaContable cuentacontableAux:cuentacontablesForeignKey) {
				if(cuentacontableAux.getId()!=null && cuentacontableAux.getId().equals(idCuentaContableSeleccionado)) {
					cuentacontableTemp=cuentacontableAux;
					break;
				}
			}

			if(sFormularioTipoBusqueda.equals("Formulario") || sFormularioTipoBusqueda.equals("Todos")){
				if(cuentacontableTemp!=null) {

					if(this.estructura!=null) {
						this.estructura.setCuentaContable(cuentacontableTemp);
					}

					if(this.jInternalFrameDetalleFormEstructura!=null) {
						this.jInternalFrameDetalleFormEstructura.jComboBoxid_cuenta_contableEstructura.setSelectedItem(cuentacontableTemp);
					}
				} else {
					//jComboBoxid_cuenta_contableEstructura.setSelectedItem(cuentacontableTemp);
					if(this.jInternalFrameDetalleFormEstructura!=null) {
						if(this.jInternalFrameDetalleFormEstructura.jComboBoxid_cuenta_contableEstructura.getItemCount()>0) {
							this.jInternalFrameDetalleFormEstructura.jComboBoxid_cuenta_contableEstructura.setSelectedIndex(0);
						}
					}
				}
			}

			if(conCombosBusquedas) {

		//BYDAN_BUSQUEDAS
						
				if(sFormularioTipoBusqueda.equals("FK_IdCuentaContable") || sFormularioTipoBusqueda.equals("Todos")){
					if(cuentacontableTemp!=null && jComboBoxid_cuenta_contableFK_IdCuentaContableEstructura!=null) {
						jComboBoxid_cuenta_contableFK_IdCuentaContableEstructura.setSelectedItem(cuentacontableTemp);
					} else {
						if(jComboBoxid_cuenta_contableFK_IdCuentaContableEstructura!=null) {
							//jComboBoxid_cuenta_contableFK_IdCuentaContableEstructura.setSelectedItem(cuentacontableTemp);
							if(jComboBoxid_cuenta_contableFK_IdCuentaContableEstructura.getItemCount()>0) {
								jComboBoxid_cuenta_contableFK_IdCuentaContableEstructura.setSelectedIndex(0);
							}
						}
					}
				}

					}

		}
		catch(Exception e)
		{
			throw e;
		}
	}

	public String getActualCuentaContableForeignKeyDescripcion(Long idCuentaContableSeleccionado)throws Exception
	{
		String sDescripcion="";

		try
		{
			CuentaContable  cuentacontableTemp=null;

			for(CuentaContable cuentacontableAux:cuentacontablesForeignKey) {
				if(cuentacontableAux.getId()!=null && cuentacontableAux.getId().equals(idCuentaContableSeleccionado)) {
					cuentacontableTemp=cuentacontableAux;
					break;
				}
			}


			sDescripcion=CuentaContableConstantesFunciones.getCuentaContableDescripcion(cuentacontableTemp);
		}
		catch(Exception e)
		{
			throw e;
		}

		return sDescripcion;
	}

	@SuppressWarnings("rawtypes")
	public void setActualCuentaContableForeignKeyGenerico(Long idCuentaContableSeleccionado,JComboBox jComboBoxid_cuenta_contableEstructuraGenerico)throws Exception
	{
		try
		{
			CuentaContable  cuentacontableTemp=null;

			for(CuentaContable cuentacontableAux:cuentacontablesForeignKey) {
				if(cuentacontableAux.getId()!=null && cuentacontableAux.getId().equals(idCuentaContableSeleccionado)) {
					cuentacontableTemp=cuentacontableAux;
					break;
				}
			}

			if(cuentacontableTemp!=null) {
				jComboBoxid_cuenta_contableEstructuraGenerico.setSelectedItem(cuentacontableTemp);
			} else {
				if(jComboBoxid_cuenta_contableEstructuraGenerico!=null && jComboBoxid_cuenta_contableEstructuraGenerico.getItemCount()>0) {
					jComboBoxid_cuenta_contableEstructuraGenerico.setSelectedIndex(0);
				}
			}

		}
		catch(Exception e)
		{
			throw e;
		}

	}

	public void setActualTipoEstructuraForeignKey(Long idTipoEstructuraSeleccionado,Boolean conCombosBusquedas,String sFormularioTipoBusqueda)throws Exception
	{
		try
		{
			TipoEstructura  tipoestructuraTemp=null;

			for(TipoEstructura tipoestructuraAux:tipoestructurasForeignKey) {
				if(tipoestructuraAux.getId()!=null && tipoestructuraAux.getId().equals(idTipoEstructuraSeleccionado)) {
					tipoestructuraTemp=tipoestructuraAux;
					break;
				}
			}

			if(sFormularioTipoBusqueda.equals("Formulario") || sFormularioTipoBusqueda.equals("Todos")){
				if(tipoestructuraTemp!=null) {

					if(this.estructura!=null) {
						this.estructura.setTipoEstructura(tipoestructuraTemp);
					}

					if(this.jInternalFrameDetalleFormEstructura!=null) {
						this.jInternalFrameDetalleFormEstructura.jComboBoxid_tipo_estructuraEstructura.setSelectedItem(tipoestructuraTemp);
					}
				} else {
					//jComboBoxid_tipo_estructuraEstructura.setSelectedItem(tipoestructuraTemp);
					if(this.jInternalFrameDetalleFormEstructura!=null) {
						if(this.jInternalFrameDetalleFormEstructura.jComboBoxid_tipo_estructuraEstructura.getItemCount()>0) {
							this.jInternalFrameDetalleFormEstructura.jComboBoxid_tipo_estructuraEstructura.setSelectedIndex(0);
						}
					}
				}
			}

			if(conCombosBusquedas) {

		//BYDAN_BUSQUEDAS
						
				if(sFormularioTipoBusqueda.equals("FK_IdTipoEstructura") || sFormularioTipoBusqueda.equals("Todos")){
					if(tipoestructuraTemp!=null && jComboBoxid_tipo_estructuraFK_IdTipoEstructuraEstructura!=null) {
						jComboBoxid_tipo_estructuraFK_IdTipoEstructuraEstructura.setSelectedItem(tipoestructuraTemp);
					} else {
						if(jComboBoxid_tipo_estructuraFK_IdTipoEstructuraEstructura!=null) {
							//jComboBoxid_tipo_estructuraFK_IdTipoEstructuraEstructura.setSelectedItem(tipoestructuraTemp);
							if(jComboBoxid_tipo_estructuraFK_IdTipoEstructuraEstructura.getItemCount()>0) {
								jComboBoxid_tipo_estructuraFK_IdTipoEstructuraEstructura.setSelectedIndex(0);
							}
						}
					}
				}

					}

		}
		catch(Exception e)
		{
			throw e;
		}
	}

	public String getActualTipoEstructuraForeignKeyDescripcion(Long idTipoEstructuraSeleccionado)throws Exception
	{
		String sDescripcion="";

		try
		{
			TipoEstructura  tipoestructuraTemp=null;

			for(TipoEstructura tipoestructuraAux:tipoestructurasForeignKey) {
				if(tipoestructuraAux.getId()!=null && tipoestructuraAux.getId().equals(idTipoEstructuraSeleccionado)) {
					tipoestructuraTemp=tipoestructuraAux;
					break;
				}
			}


			sDescripcion=TipoEstructuraConstantesFunciones.getTipoEstructuraDescripcion(tipoestructuraTemp);
		}
		catch(Exception e)
		{
			throw e;
		}

		return sDescripcion;
	}

	@SuppressWarnings("rawtypes")
	public void setActualTipoEstructuraForeignKeyGenerico(Long idTipoEstructuraSeleccionado,JComboBox jComboBoxid_tipo_estructuraEstructuraGenerico)throws Exception
	{
		try
		{
			TipoEstructura  tipoestructuraTemp=null;

			for(TipoEstructura tipoestructuraAux:tipoestructurasForeignKey) {
				if(tipoestructuraAux.getId()!=null && tipoestructuraAux.getId().equals(idTipoEstructuraSeleccionado)) {
					tipoestructuraTemp=tipoestructuraAux;
					break;
				}
			}

			if(tipoestructuraTemp!=null) {
				jComboBoxid_tipo_estructuraEstructuraGenerico.setSelectedItem(tipoestructuraTemp);
			} else {
				if(jComboBoxid_tipo_estructuraEstructuraGenerico!=null && jComboBoxid_tipo_estructuraEstructuraGenerico.getItemCount()>0) {
					jComboBoxid_tipo_estructuraEstructuraGenerico.setSelectedIndex(0);
				}
			}

		}
		catch(Exception e)
		{
			throw e;
		}

	}

	public void setActualPaisForeignKey(Long idPaisSeleccionado,Boolean conCombosBusquedas,String sFormularioTipoBusqueda)throws Exception
	{
		try
		{
			Pais  paisTemp=null;

			for(Pais paisAux:paissForeignKey) {
				if(paisAux.getId()!=null && paisAux.getId().equals(idPaisSeleccionado)) {
					paisTemp=paisAux;
					break;
				}
			}

			if(sFormularioTipoBusqueda.equals("Formulario") || sFormularioTipoBusqueda.equals("Todos")){
				if(paisTemp!=null) {

					if(this.estructura!=null) {
						this.estructura.setPais(paisTemp);
					}

					if(this.jInternalFrameDetalleFormEstructura!=null) {
						this.jInternalFrameDetalleFormEstructura.jComboBoxid_paisEstructura.setSelectedItem(paisTemp);
					}
				} else {
					//jComboBoxid_paisEstructura.setSelectedItem(paisTemp);
					if(this.jInternalFrameDetalleFormEstructura!=null) {
						if(this.jInternalFrameDetalleFormEstructura.jComboBoxid_paisEstructura.getItemCount()>0) {
							this.jInternalFrameDetalleFormEstructura.jComboBoxid_paisEstructura.setSelectedIndex(0);
						}
					}
				}
			}

			if(conCombosBusquedas) {

		//BYDAN_BUSQUEDAS
						
				if(sFormularioTipoBusqueda.equals("FK_IdPais") || sFormularioTipoBusqueda.equals("Todos")){
					if(paisTemp!=null && jComboBoxid_paisFK_IdPaisEstructura!=null) {
						jComboBoxid_paisFK_IdPaisEstructura.setSelectedItem(paisTemp);
					} else {
						if(jComboBoxid_paisFK_IdPaisEstructura!=null) {
							//jComboBoxid_paisFK_IdPaisEstructura.setSelectedItem(paisTemp);
							if(jComboBoxid_paisFK_IdPaisEstructura.getItemCount()>0) {
								jComboBoxid_paisFK_IdPaisEstructura.setSelectedIndex(0);
							}
						}
					}
				}

					}

		}
		catch(Exception e)
		{
			throw e;
		}
	}

	public String getActualPaisForeignKeyDescripcion(Long idPaisSeleccionado)throws Exception
	{
		String sDescripcion="";

		try
		{
			Pais  paisTemp=null;

			for(Pais paisAux:paissForeignKey) {
				if(paisAux.getId()!=null && paisAux.getId().equals(idPaisSeleccionado)) {
					paisTemp=paisAux;
					break;
				}
			}


			sDescripcion=PaisConstantesFunciones.getPaisDescripcion(paisTemp);
		}
		catch(Exception e)
		{
			throw e;
		}

		return sDescripcion;
	}

	@SuppressWarnings("rawtypes")
	public void setActualPaisForeignKeyGenerico(Long idPaisSeleccionado,JComboBox jComboBoxid_paisEstructuraGenerico)throws Exception
	{
		try
		{
			Pais  paisTemp=null;

			for(Pais paisAux:paissForeignKey) {
				if(paisAux.getId()!=null && paisAux.getId().equals(idPaisSeleccionado)) {
					paisTemp=paisAux;
					break;
				}
			}

			if(paisTemp!=null) {
				jComboBoxid_paisEstructuraGenerico.setSelectedItem(paisTemp);
			} else {
				if(jComboBoxid_paisEstructuraGenerico!=null && jComboBoxid_paisEstructuraGenerico.getItemCount()>0) {
					jComboBoxid_paisEstructuraGenerico.setSelectedIndex(0);
				}
			}

		}
		catch(Exception e)
		{
			throw e;
		}

	}

	public void setActualCiudadForeignKey(Long idCiudadSeleccionado,Boolean conCombosBusquedas,String sFormularioTipoBusqueda)throws Exception
	{
		try
		{
			Ciudad  ciudadTemp=null;

			for(Ciudad ciudadAux:ciudadsForeignKey) {
				if(ciudadAux.getId()!=null && ciudadAux.getId().equals(idCiudadSeleccionado)) {
					ciudadTemp=ciudadAux;
					break;
				}
			}

			if(sFormularioTipoBusqueda.equals("Formulario") || sFormularioTipoBusqueda.equals("Todos")){
				if(ciudadTemp!=null) {

					if(this.estructura!=null) {
						this.estructura.setCiudad(ciudadTemp);
					}

					if(this.jInternalFrameDetalleFormEstructura!=null) {
						this.jInternalFrameDetalleFormEstructura.jComboBoxid_ciudadEstructura.setSelectedItem(ciudadTemp);
					}
				} else {
					//jComboBoxid_ciudadEstructura.setSelectedItem(ciudadTemp);
					if(this.jInternalFrameDetalleFormEstructura!=null) {
						if(this.jInternalFrameDetalleFormEstructura.jComboBoxid_ciudadEstructura.getItemCount()>0) {
							this.jInternalFrameDetalleFormEstructura.jComboBoxid_ciudadEstructura.setSelectedIndex(0);
						}
					}
				}
			}

			if(conCombosBusquedas) {

		//BYDAN_BUSQUEDAS
						
				if(sFormularioTipoBusqueda.equals("FK_IdCiudad") || sFormularioTipoBusqueda.equals("Todos")){
					if(ciudadTemp!=null && jComboBoxid_ciudadFK_IdCiudadEstructura!=null) {
						jComboBoxid_ciudadFK_IdCiudadEstructura.setSelectedItem(ciudadTemp);
					} else {
						if(jComboBoxid_ciudadFK_IdCiudadEstructura!=null) {
							//jComboBoxid_ciudadFK_IdCiudadEstructura.setSelectedItem(ciudadTemp);
							if(jComboBoxid_ciudadFK_IdCiudadEstructura.getItemCount()>0) {
								jComboBoxid_ciudadFK_IdCiudadEstructura.setSelectedIndex(0);
							}
						}
					}
				}

					}

		}
		catch(Exception e)
		{
			throw e;
		}
	}

	public String getActualCiudadForeignKeyDescripcion(Long idCiudadSeleccionado)throws Exception
	{
		String sDescripcion="";

		try
		{
			Ciudad  ciudadTemp=null;

			for(Ciudad ciudadAux:ciudadsForeignKey) {
				if(ciudadAux.getId()!=null && ciudadAux.getId().equals(idCiudadSeleccionado)) {
					ciudadTemp=ciudadAux;
					break;
				}
			}


			sDescripcion=CiudadConstantesFunciones.getCiudadDescripcion(ciudadTemp);
		}
		catch(Exception e)
		{
			throw e;
		}

		return sDescripcion;
	}

	@SuppressWarnings("rawtypes")
	public void setActualCiudadForeignKeyGenerico(Long idCiudadSeleccionado,JComboBox jComboBoxid_ciudadEstructuraGenerico)throws Exception
	{
		try
		{
			Ciudad  ciudadTemp=null;

			for(Ciudad ciudadAux:ciudadsForeignKey) {
				if(ciudadAux.getId()!=null && ciudadAux.getId().equals(idCiudadSeleccionado)) {
					ciudadTemp=ciudadAux;
					break;
				}
			}

			if(ciudadTemp!=null) {
				jComboBoxid_ciudadEstructuraGenerico.setSelectedItem(ciudadTemp);
			} else {
				if(jComboBoxid_ciudadEstructuraGenerico!=null && jComboBoxid_ciudadEstructuraGenerico.getItemCount()>0) {
					jComboBoxid_ciudadEstructuraGenerico.setSelectedIndex(0);
				}
			}

		}
		catch(Exception e)
		{
			throw e;
		}

	}

	
	
	@SuppressWarnings("rawtypes")
	public void setActualParaGuardarEmpresaForeignKey(Estructura estructura,JComboBox jComboBoxid_empresaEstructuraGenerico)throws Exception
	{
		try
		{
			Empresa  empresaAux=new Empresa();

			if(jComboBoxid_empresaEstructuraGenerico==null) {
				empresaAux=(Empresa)this.jInternalFrameDetalleFormEstructura.jComboBoxid_empresaEstructura.getSelectedItem();
			} else {
				empresaAux=(Empresa)jComboBoxid_empresaEstructuraGenerico.getSelectedItem();
			}

			if(empresaAux!=null && empresaAux.getId()!=null) {
				estructura.setid_empresa(empresaAux.getId());
				estructura.setempresa_descripcion(EstructuraConstantesFunciones.getEmpresaDescripcion(empresaAux));
				estructura.setEmpresa(empresaAux);			}
		}
		catch(Exception e)
		{
			throw e;
		}
	}

	@SuppressWarnings("rawtypes")
	public void setActualParaGuardarSucursalForeignKey(Estructura estructura,JComboBox jComboBoxid_sucursalEstructuraGenerico)throws Exception
	{
		try
		{
			Sucursal  sucursalAux=new Sucursal();

			if(jComboBoxid_sucursalEstructuraGenerico==null) {
				sucursalAux=(Sucursal)this.jInternalFrameDetalleFormEstructura.jComboBoxid_sucursalEstructura.getSelectedItem();
			} else {
				sucursalAux=(Sucursal)jComboBoxid_sucursalEstructuraGenerico.getSelectedItem();
			}

			if(sucursalAux!=null && sucursalAux.getId()!=null) {
				estructura.setid_sucursal(sucursalAux.getId());
				estructura.setsucursal_descripcion(EstructuraConstantesFunciones.getSucursalDescripcion(sucursalAux));
				estructura.setSucursal(sucursalAux);			}
		}
		catch(Exception e)
		{
			throw e;
		}
	}

	@SuppressWarnings("rawtypes")
	public void setActualParaGuardarEstructuraForeignKey(Estructura estructura,JComboBox jComboBoxid_estructuraEstructuraGenerico)throws Exception
	{
		try
		{
			Estructura  estructuraAux=new Estructura();

			if(jComboBoxid_estructuraEstructuraGenerico==null) {
				estructuraAux=(Estructura)this.jInternalFrameDetalleFormEstructura.jComboBoxid_estructuraEstructura.getSelectedItem();
			} else {
				estructuraAux=(Estructura)jComboBoxid_estructuraEstructuraGenerico.getSelectedItem();
			}

			if(estructuraAux!=null) {
				estructura.setid_estructura(estructuraAux.getId());
				estructura.setestructura_descripcion(EstructuraConstantesFunciones.getEstructuraDescripcion(estructuraAux));
				estructura.setEstructura(estructuraAux);			}
		}
		catch(Exception e)
		{
			throw e;
		}
	}

	@SuppressWarnings("rawtypes")
	public void setActualParaGuardarTipoPago_NMForeignKey(Estructura estructura,JComboBox jComboBoxid_tipo_pago__n_mEstructuraGenerico)throws Exception
	{
		try
		{
			TipoPago_NM  tipopago_nmAux=new TipoPago_NM();

			if(jComboBoxid_tipo_pago__n_mEstructuraGenerico==null) {
				tipopago_nmAux=(TipoPago_NM)this.jInternalFrameDetalleFormEstructura.jComboBoxid_tipo_pago__n_mEstructura.getSelectedItem();
			} else {
				tipopago_nmAux=(TipoPago_NM)jComboBoxid_tipo_pago__n_mEstructuraGenerico.getSelectedItem();
			}

			if(tipopago_nmAux!=null && tipopago_nmAux.getId()!=null) {
				estructura.setid_tipo_pago__n_m(tipopago_nmAux.getId());
				estructura.settipopago_nm_descripcion(EstructuraConstantesFunciones.getTipoPago_NMDescripcion(tipopago_nmAux));
				estructura.setTipoPago_NM(tipopago_nmAux);			}
		}
		catch(Exception e)
		{
			throw e;
		}
	}

	@SuppressWarnings("rawtypes")
	public void setActualParaGuardarNumeroPatronalForeignKey(Estructura estructura,JComboBox jComboBoxid_numero_patronalEstructuraGenerico)throws Exception
	{
		try
		{
			NumeroPatronal  numeropatronalAux=new NumeroPatronal();

			if(jComboBoxid_numero_patronalEstructuraGenerico==null) {
				numeropatronalAux=(NumeroPatronal)this.jInternalFrameDetalleFormEstructura.jComboBoxid_numero_patronalEstructura.getSelectedItem();
			} else {
				numeropatronalAux=(NumeroPatronal)jComboBoxid_numero_patronalEstructuraGenerico.getSelectedItem();
			}

			if(numeropatronalAux!=null && numeropatronalAux.getId()!=null) {
				estructura.setid_numero_patronal(numeropatronalAux.getId());
				estructura.setnumeropatronal_descripcion(EstructuraConstantesFunciones.getNumeroPatronalDescripcion(numeropatronalAux));
				estructura.setNumeroPatronal(numeropatronalAux);			}
		}
		catch(Exception e)
		{
			throw e;
		}
	}

	@SuppressWarnings("rawtypes")
	public void setActualParaGuardarCuentaContableForeignKey(Estructura estructura,JComboBox jComboBoxid_cuenta_contableEstructuraGenerico)throws Exception
	{
		try
		{
			CuentaContable  cuentacontableAux=new CuentaContable();

			if(jComboBoxid_cuenta_contableEstructuraGenerico==null) {
				cuentacontableAux=(CuentaContable)this.jInternalFrameDetalleFormEstructura.jComboBoxid_cuenta_contableEstructura.getSelectedItem();
			} else {
				cuentacontableAux=(CuentaContable)jComboBoxid_cuenta_contableEstructuraGenerico.getSelectedItem();
			}

			if(cuentacontableAux!=null && cuentacontableAux.getId()!=null) {
				estructura.setid_cuenta_contable(cuentacontableAux.getId());
				estructura.setcuentacontable_descripcion(EstructuraConstantesFunciones.getCuentaContableDescripcion(cuentacontableAux));
				estructura.setCuentaContable(cuentacontableAux);			}
		}
		catch(Exception e)
		{
			throw e;
		}
	}

	@SuppressWarnings("rawtypes")
	public void setActualParaGuardarTipoEstructuraForeignKey(Estructura estructura,JComboBox jComboBoxid_tipo_estructuraEstructuraGenerico)throws Exception
	{
		try
		{
			TipoEstructura  tipoestructuraAux=new TipoEstructura();

			if(jComboBoxid_tipo_estructuraEstructuraGenerico==null) {
				tipoestructuraAux=(TipoEstructura)this.jInternalFrameDetalleFormEstructura.jComboBoxid_tipo_estructuraEstructura.getSelectedItem();
			} else {
				tipoestructuraAux=(TipoEstructura)jComboBoxid_tipo_estructuraEstructuraGenerico.getSelectedItem();
			}

			if(tipoestructuraAux!=null && tipoestructuraAux.getId()!=null) {
				estructura.setid_tipo_estructura(tipoestructuraAux.getId());
				estructura.settipoestructura_descripcion(EstructuraConstantesFunciones.getTipoEstructuraDescripcion(tipoestructuraAux));
				estructura.setTipoEstructura(tipoestructuraAux);			}
		}
		catch(Exception e)
		{
			throw e;
		}
	}

	@SuppressWarnings("rawtypes")
	public void setActualParaGuardarPaisForeignKey(Estructura estructura,JComboBox jComboBoxid_paisEstructuraGenerico)throws Exception
	{
		try
		{
			Pais  paisAux=new Pais();

			if(jComboBoxid_paisEstructuraGenerico==null) {
				paisAux=(Pais)this.jInternalFrameDetalleFormEstructura.jComboBoxid_paisEstructura.getSelectedItem();
			} else {
				paisAux=(Pais)jComboBoxid_paisEstructuraGenerico.getSelectedItem();
			}

			if(paisAux!=null && paisAux.getId()!=null) {
				estructura.setid_pais(paisAux.getId());
				estructura.setpais_descripcion(EstructuraConstantesFunciones.getPaisDescripcion(paisAux));
				estructura.setPais(paisAux);			}
		}
		catch(Exception e)
		{
			throw e;
		}
	}

	@SuppressWarnings("rawtypes")
	public void setActualParaGuardarCiudadForeignKey(Estructura estructura,JComboBox jComboBoxid_ciudadEstructuraGenerico)throws Exception
	{
		try
		{
			Ciudad  ciudadAux=new Ciudad();

			if(jComboBoxid_ciudadEstructuraGenerico==null) {
				ciudadAux=(Ciudad)this.jInternalFrameDetalleFormEstructura.jComboBoxid_ciudadEstructura.getSelectedItem();
			} else {
				ciudadAux=(Ciudad)jComboBoxid_ciudadEstructuraGenerico.getSelectedItem();
			}

			if(ciudadAux!=null && ciudadAux.getId()!=null) {
				estructura.setid_ciudad(ciudadAux.getId());
				estructura.setciudad_descripcion(EstructuraConstantesFunciones.getCiudadDescripcion(ciudadAux));
				estructura.setCiudad(ciudadAux);			}
		}
		catch(Exception e)
		{
			throw e;
		}
	}

	
	


		@SuppressWarnings({ "unchecked", "rawtypes" })
		public void cargarCombosFrameEmpresasForeignKey(String sFormularioTipoBusqueda)throws Exception {
			try {

				JComboBoxBinding jComboBoxBindingEmpresa=null;

				if(sFormularioTipoBusqueda.equals("Formulario") || sFormularioTipoBusqueda.equals("Todos")){

					if(!EstructuraJInternalFrame.ISBINDING_MANUAL) {
					} else {
						if(this.jInternalFrameDetalleFormEstructura!=null) { 
							this.jInternalFrameDetalleFormEstructura.jComboBoxid_empresaEstructura.removeAllItems();

							for(Empresa empresa:this.empresasForeignKey) {
								this.jInternalFrameDetalleFormEstructura.jComboBoxid_empresaEstructura.addItem(empresa);
							}
						}
					}

					if(this.jInternalFrameDetalleFormEstructura!=null) { 
					}

					if(!EstructuraJInternalFrame.ISBINDING_MANUAL) {
					}
				}


				if(!this.conCargarMinimo) {


				}

			}  catch(Exception e) {
				throw e;
			}
		}

		@SuppressWarnings({ "unchecked", "rawtypes" })
		public void cargarCombosFrameSucursalsForeignKey(String sFormularioTipoBusqueda)throws Exception {
			try {

				JComboBoxBinding jComboBoxBindingSucursal=null;

				if(sFormularioTipoBusqueda.equals("Formulario") || sFormularioTipoBusqueda.equals("Todos")){

					if(!EstructuraJInternalFrame.ISBINDING_MANUAL) {
					} else {
						if(this.jInternalFrameDetalleFormEstructura!=null) { 
							this.jInternalFrameDetalleFormEstructura.jComboBoxid_sucursalEstructura.removeAllItems();

							for(Sucursal sucursal:this.sucursalsForeignKey) {
								this.jInternalFrameDetalleFormEstructura.jComboBoxid_sucursalEstructura.addItem(sucursal);
							}
						}
					}

					if(this.jInternalFrameDetalleFormEstructura!=null) { 
					}

					if(!EstructuraJInternalFrame.ISBINDING_MANUAL) {
					}
				}


				if(!this.conCargarMinimo) {


				}

			}  catch(Exception e) {
				throw e;
			}
		}

		@SuppressWarnings({ "unchecked", "rawtypes" })
		public void cargarCombosFrameEstructurasForeignKey(String sFormularioTipoBusqueda)throws Exception {
			try {

				JComboBoxBinding jComboBoxBindingEstructura=null;

				if(sFormularioTipoBusqueda.equals("Formulario") || sFormularioTipoBusqueda.equals("Todos")){

					if(!EstructuraJInternalFrame.ISBINDING_MANUAL) {
					} else {
						if(this.jInternalFrameDetalleFormEstructura!=null) { 
							this.jInternalFrameDetalleFormEstructura.jComboBoxid_estructuraEstructura.removeAllItems();

							for(Estructura estructura:this.estructurasForeignKey) {
								this.jInternalFrameDetalleFormEstructura.jComboBoxid_estructuraEstructura.addItem(estructura);
							}
						}
					}

					if(this.jInternalFrameDetalleFormEstructura!=null) { 
					}

					if(!EstructuraJInternalFrame.ISBINDING_MANUAL) {
					}
				}


				if(!this.conCargarMinimo) {

					if(sFormularioTipoBusqueda.equals("FK_IdEstructura") || sFormularioTipoBusqueda.equals("Todos")){

						//BYDAN_BUSQUEDAS
						
						if(!EstructuraJInternalFrame.ISBINDING_MANUAL) {
						} else {
							this.jComboBoxid_estructuraFK_IdEstructuraEstructura.removeAllItems();

							for(Estructura estructura:this.estructurasForeignKey) {
								this.jComboBoxid_estructuraFK_IdEstructuraEstructura.addItem(estructura);
							}
						}

						if(!EstructuraJInternalFrame.ISBINDING_MANUAL) {
						}

						
					}

				}

			}  catch(Exception e) {
				throw e;
			}
		}

		@SuppressWarnings({ "unchecked", "rawtypes" })
		public void cargarCombosFrameTipoPago_NMsForeignKey(String sFormularioTipoBusqueda)throws Exception {
			try {

				JComboBoxBinding jComboBoxBindingTipoPago_NM=null;

				if(sFormularioTipoBusqueda.equals("Formulario") || sFormularioTipoBusqueda.equals("Todos")){

					if(!EstructuraJInternalFrame.ISBINDING_MANUAL) {
					} else {
						if(this.jInternalFrameDetalleFormEstructura!=null) { 
							this.jInternalFrameDetalleFormEstructura.jComboBoxid_tipo_pago__n_mEstructura.removeAllItems();

							for(TipoPago_NM tipopago_nm:this.tipopago_nmsForeignKey) {
								this.jInternalFrameDetalleFormEstructura.jComboBoxid_tipo_pago__n_mEstructura.addItem(tipopago_nm);
							}
						}
					}

					if(this.jInternalFrameDetalleFormEstructura!=null) { 
					}

					if(!EstructuraJInternalFrame.ISBINDING_MANUAL) {
					}
				}


				if(!this.conCargarMinimo) {

					if(sFormularioTipoBusqueda.equals("FK_IdTipoPago_NM") || sFormularioTipoBusqueda.equals("Todos")){

						//BYDAN_BUSQUEDAS
						
						if(!EstructuraJInternalFrame.ISBINDING_MANUAL) {
						} else {
							this.jComboBoxid_tipo_pago__n_mFK_IdTipoPago_NMEstructura.removeAllItems();

							for(TipoPago_NM tipopago_nm:this.tipopago_nmsForeignKey) {
								this.jComboBoxid_tipo_pago__n_mFK_IdTipoPago_NMEstructura.addItem(tipopago_nm);
							}
						}

						if(!EstructuraJInternalFrame.ISBINDING_MANUAL) {
						}

						
					}

				}

			}  catch(Exception e) {
				throw e;
			}
		}

		@SuppressWarnings({ "unchecked", "rawtypes" })
		public void cargarCombosFrameNumeroPatronalsForeignKey(String sFormularioTipoBusqueda)throws Exception {
			try {

				JComboBoxBinding jComboBoxBindingNumeroPatronal=null;

				if(sFormularioTipoBusqueda.equals("Formulario") || sFormularioTipoBusqueda.equals("Todos")){

					if(!EstructuraJInternalFrame.ISBINDING_MANUAL) {
					} else {
						if(this.jInternalFrameDetalleFormEstructura!=null) { 
							this.jInternalFrameDetalleFormEstructura.jComboBoxid_numero_patronalEstructura.removeAllItems();

							for(NumeroPatronal numeropatronal:this.numeropatronalsForeignKey) {
								this.jInternalFrameDetalleFormEstructura.jComboBoxid_numero_patronalEstructura.addItem(numeropatronal);
							}
						}
					}

					if(this.jInternalFrameDetalleFormEstructura!=null) { 
					}

					if(!EstructuraJInternalFrame.ISBINDING_MANUAL) {
					}
				}


				if(!this.conCargarMinimo) {

					if(sFormularioTipoBusqueda.equals("FK_IdNumeroPatronal") || sFormularioTipoBusqueda.equals("Todos")){

						//BYDAN_BUSQUEDAS
						
						if(!EstructuraJInternalFrame.ISBINDING_MANUAL) {
						} else {
							this.jComboBoxid_numero_patronalFK_IdNumeroPatronalEstructura.removeAllItems();

							for(NumeroPatronal numeropatronal:this.numeropatronalsForeignKey) {
								this.jComboBoxid_numero_patronalFK_IdNumeroPatronalEstructura.addItem(numeropatronal);
							}
						}

						if(!EstructuraJInternalFrame.ISBINDING_MANUAL) {
						}

						
					}

				}

			}  catch(Exception e) {
				throw e;
			}
		}

		@SuppressWarnings({ "unchecked", "rawtypes" })
		public void cargarCombosFrameCuentaContablesForeignKey(String sFormularioTipoBusqueda)throws Exception {
			try {

				JComboBoxBinding jComboBoxBindingCuentaContable=null;

				if(sFormularioTipoBusqueda.equals("Formulario") || sFormularioTipoBusqueda.equals("Todos")){

					if(!EstructuraJInternalFrame.ISBINDING_MANUAL) {
					} else {
						if(this.jInternalFrameDetalleFormEstructura!=null) { 
							this.jInternalFrameDetalleFormEstructura.jComboBoxid_cuenta_contableEstructura.removeAllItems();

							for(CuentaContable cuentacontable:this.cuentacontablesForeignKey) {
								this.jInternalFrameDetalleFormEstructura.jComboBoxid_cuenta_contableEstructura.addItem(cuentacontable);
							}
						}
					}

					if(this.jInternalFrameDetalleFormEstructura!=null) { 
					}

					if(!EstructuraJInternalFrame.ISBINDING_MANUAL) {
					}
				}


				if(!this.conCargarMinimo) {

					if(sFormularioTipoBusqueda.equals("FK_IdCuentaContable") || sFormularioTipoBusqueda.equals("Todos")){

						//BYDAN_BUSQUEDAS
						
						if(!EstructuraJInternalFrame.ISBINDING_MANUAL) {
						} else {
							this.jComboBoxid_cuenta_contableFK_IdCuentaContableEstructura.removeAllItems();

							for(CuentaContable cuentacontable:this.cuentacontablesForeignKey) {
								this.jComboBoxid_cuenta_contableFK_IdCuentaContableEstructura.addItem(cuentacontable);
							}
						}

						if(!EstructuraJInternalFrame.ISBINDING_MANUAL) {
						}

						
					}

				}

			}  catch(Exception e) {
				throw e;
			}
		}

		@SuppressWarnings({ "unchecked", "rawtypes" })
		public void cargarCombosFrameTipoEstructurasForeignKey(String sFormularioTipoBusqueda)throws Exception {
			try {

				JComboBoxBinding jComboBoxBindingTipoEstructura=null;

				if(sFormularioTipoBusqueda.equals("Formulario") || sFormularioTipoBusqueda.equals("Todos")){

					if(!EstructuraJInternalFrame.ISBINDING_MANUAL) {
					} else {
						if(this.jInternalFrameDetalleFormEstructura!=null) { 
							this.jInternalFrameDetalleFormEstructura.jComboBoxid_tipo_estructuraEstructura.removeAllItems();

							for(TipoEstructura tipoestructura:this.tipoestructurasForeignKey) {
								this.jInternalFrameDetalleFormEstructura.jComboBoxid_tipo_estructuraEstructura.addItem(tipoestructura);
							}
						}
					}

					if(this.jInternalFrameDetalleFormEstructura!=null) { 
					}

					if(!EstructuraJInternalFrame.ISBINDING_MANUAL) {
					}
				}


				if(!this.conCargarMinimo) {

					if(sFormularioTipoBusqueda.equals("FK_IdTipoEstructura") || sFormularioTipoBusqueda.equals("Todos")){

						//BYDAN_BUSQUEDAS
						
						if(!EstructuraJInternalFrame.ISBINDING_MANUAL) {
						} else {
							this.jComboBoxid_tipo_estructuraFK_IdTipoEstructuraEstructura.removeAllItems();

							for(TipoEstructura tipoestructura:this.tipoestructurasForeignKey) {
								this.jComboBoxid_tipo_estructuraFK_IdTipoEstructuraEstructura.addItem(tipoestructura);
							}
						}

						if(!EstructuraJInternalFrame.ISBINDING_MANUAL) {
						}

						
					}

				}

			}  catch(Exception e) {
				throw e;
			}
		}

		@SuppressWarnings({ "unchecked", "rawtypes" })
		public void cargarCombosFramePaissForeignKey(String sFormularioTipoBusqueda)throws Exception {
			try {

				JComboBoxBinding jComboBoxBindingPais=null;

				if(sFormularioTipoBusqueda.equals("Formulario") || sFormularioTipoBusqueda.equals("Todos")){

					if(!EstructuraJInternalFrame.ISBINDING_MANUAL) {
					} else {
						if(this.jInternalFrameDetalleFormEstructura!=null) { 
							this.jInternalFrameDetalleFormEstructura.jComboBoxid_paisEstructura.removeAllItems();

							for(Pais pais:this.paissForeignKey) {
								this.jInternalFrameDetalleFormEstructura.jComboBoxid_paisEstructura.addItem(pais);
							}
						}
					}

					if(this.jInternalFrameDetalleFormEstructura!=null) { 
					}

					if(!EstructuraJInternalFrame.ISBINDING_MANUAL) {
					}
				}


				if(!this.conCargarMinimo) {

					if(sFormularioTipoBusqueda.equals("FK_IdPais") || sFormularioTipoBusqueda.equals("Todos")){

						//BYDAN_BUSQUEDAS
						
						if(!EstructuraJInternalFrame.ISBINDING_MANUAL) {
						} else {
							this.jComboBoxid_paisFK_IdPaisEstructura.removeAllItems();

							for(Pais pais:this.paissForeignKey) {
								this.jComboBoxid_paisFK_IdPaisEstructura.addItem(pais);
							}
						}

						if(!EstructuraJInternalFrame.ISBINDING_MANUAL) {
						}

						
					}

				}

			}  catch(Exception e) {
				throw e;
			}
		}

		@SuppressWarnings({ "unchecked", "rawtypes" })
		public void cargarCombosFrameCiudadsForeignKey(String sFormularioTipoBusqueda)throws Exception {
			try {

				JComboBoxBinding jComboBoxBindingCiudad=null;

				if(sFormularioTipoBusqueda.equals("Formulario") || sFormularioTipoBusqueda.equals("Todos")){

					if(!EstructuraJInternalFrame.ISBINDING_MANUAL) {
					} else {
						if(this.jInternalFrameDetalleFormEstructura!=null) { 
							this.jInternalFrameDetalleFormEstructura.jComboBoxid_ciudadEstructura.removeAllItems();

							for(Ciudad ciudad:this.ciudadsForeignKey) {
								this.jInternalFrameDetalleFormEstructura.jComboBoxid_ciudadEstructura.addItem(ciudad);
							}
						}
					}

					if(this.jInternalFrameDetalleFormEstructura!=null) { 
					}

					if(!EstructuraJInternalFrame.ISBINDING_MANUAL) {
					}
				}


				if(!this.conCargarMinimo) {

					if(sFormularioTipoBusqueda.equals("FK_IdCiudad") || sFormularioTipoBusqueda.equals("Todos")){

						//BYDAN_BUSQUEDAS
						
						if(!EstructuraJInternalFrame.ISBINDING_MANUAL) {
						} else {
							this.jComboBoxid_ciudadFK_IdCiudadEstructura.removeAllItems();

							for(Ciudad ciudad:this.ciudadsForeignKey) {
								this.jComboBoxid_ciudadFK_IdCiudadEstructura.addItem(ciudad);
							}
						}

						if(!EstructuraJInternalFrame.ISBINDING_MANUAL) {
						}

						
					}

				}

			}  catch(Exception e) {
				throw e;
			}
		}

	


		public void setSelectedItemCombosFrameEmpresaForeignKey(Empresa empresa,int iIndexSelected,Boolean conSelectedIndex,Boolean conFormulario,Boolean conBusqueda)throws Exception {
			try {

				if(conFormulario) {
					if(!conSelectedIndex) {
						if(this.jInternalFrameDetalleFormEstructura!=null) {
							this.jInternalFrameDetalleFormEstructura.jComboBoxid_empresaEstructura.setSelectedItem(empresa);
						}
					} else {
						if(this.jInternalFrameDetalleFormEstructura!=null) {
							this.jInternalFrameDetalleFormEstructura.jComboBoxid_empresaEstructura.setSelectedIndex(iIndexSelected);
						}
					}
				}


				if(!this.conCargarMinimo) {
					if(conBusqueda) {

					//BYDAN_BUSQUEDAS
					

										}
				}
			} catch(Exception e) {
				throw e;
			}
		}

		public void setSelectedItemCombosFrameSucursalForeignKey(Sucursal sucursal,int iIndexSelected,Boolean conSelectedIndex,Boolean conFormulario,Boolean conBusqueda)throws Exception {
			try {

				if(conFormulario) {
					if(!conSelectedIndex) {
						if(this.jInternalFrameDetalleFormEstructura!=null) {
							this.jInternalFrameDetalleFormEstructura.jComboBoxid_sucursalEstructura.setSelectedItem(sucursal);
						}
					} else {
						if(this.jInternalFrameDetalleFormEstructura!=null) {
							this.jInternalFrameDetalleFormEstructura.jComboBoxid_sucursalEstructura.setSelectedIndex(iIndexSelected);
						}
					}
				}


				if(!this.conCargarMinimo) {
					if(conBusqueda) {

					//BYDAN_BUSQUEDAS
					

										}
				}
			} catch(Exception e) {
				throw e;
			}
		}

		public void setSelectedItemCombosFrameEstructuraForeignKey(Estructura estructura,int iIndexSelected,Boolean conSelectedIndex,Boolean conFormulario,Boolean conBusqueda)throws Exception {
			try {

				if(conFormulario) {
					if(!conSelectedIndex) {
						if(this.jInternalFrameDetalleFormEstructura!=null) {
							this.jInternalFrameDetalleFormEstructura.jComboBoxid_estructuraEstructura.setSelectedItem(estructura);
						}
					} else {
						if(this.jInternalFrameDetalleFormEstructura!=null) {
							this.jInternalFrameDetalleFormEstructura.jComboBoxid_estructuraEstructura.setSelectedIndex(iIndexSelected);
						}
					}
				}


				if(!this.conCargarMinimo) {
					if(conBusqueda) {

					//BYDAN_BUSQUEDAS
					
						if(!conSelectedIndex) {
							this.jComboBoxid_estructuraFK_IdEstructuraEstructura.setSelectedItem(estructura);
						} else {
							this.jComboBoxid_estructuraFK_IdEstructuraEstructura.setSelectedIndex(iIndexSelected);
						}

										}
				}
			} catch(Exception e) {
				throw e;
			}
		}

		public void setSelectedItemCombosFrameTipoPago_NMForeignKey(TipoPago_NM tipopago_nm,int iIndexSelected,Boolean conSelectedIndex,Boolean conFormulario,Boolean conBusqueda)throws Exception {
			try {

				if(conFormulario) {
					if(!conSelectedIndex) {
						if(this.jInternalFrameDetalleFormEstructura!=null) {
							this.jInternalFrameDetalleFormEstructura.jComboBoxid_tipo_pago__n_mEstructura.setSelectedItem(tipopago_nm);
						}
					} else {
						if(this.jInternalFrameDetalleFormEstructura!=null) {
							this.jInternalFrameDetalleFormEstructura.jComboBoxid_tipo_pago__n_mEstructura.setSelectedIndex(iIndexSelected);
						}
					}
				}


				if(!this.conCargarMinimo) {
					if(conBusqueda) {

					//BYDAN_BUSQUEDAS
					
						if(!conSelectedIndex) {
							this.jComboBoxid_tipo_pago__n_mFK_IdTipoPago_NMEstructura.setSelectedItem(tipopago_nm);
						} else {
							this.jComboBoxid_tipo_pago__n_mFK_IdTipoPago_NMEstructura.setSelectedIndex(iIndexSelected);
						}

										}
				}
			} catch(Exception e) {
				throw e;
			}
		}

		public void setSelectedItemCombosFrameNumeroPatronalForeignKey(NumeroPatronal numeropatronal,int iIndexSelected,Boolean conSelectedIndex,Boolean conFormulario,Boolean conBusqueda)throws Exception {
			try {

				if(conFormulario) {
					if(!conSelectedIndex) {
						if(this.jInternalFrameDetalleFormEstructura!=null) {
							this.jInternalFrameDetalleFormEstructura.jComboBoxid_numero_patronalEstructura.setSelectedItem(numeropatronal);
						}
					} else {
						if(this.jInternalFrameDetalleFormEstructura!=null) {
							this.jInternalFrameDetalleFormEstructura.jComboBoxid_numero_patronalEstructura.setSelectedIndex(iIndexSelected);
						}
					}
				}


				if(!this.conCargarMinimo) {
					if(conBusqueda) {

					//BYDAN_BUSQUEDAS
					
						if(!conSelectedIndex) {
							this.jComboBoxid_numero_patronalFK_IdNumeroPatronalEstructura.setSelectedItem(numeropatronal);
						} else {
							this.jComboBoxid_numero_patronalFK_IdNumeroPatronalEstructura.setSelectedIndex(iIndexSelected);
						}

										}
				}
			} catch(Exception e) {
				throw e;
			}
		}

		public void setSelectedItemCombosFrameCuentaContableForeignKey(CuentaContable cuentacontable,int iIndexSelected,Boolean conSelectedIndex,Boolean conFormulario,Boolean conBusqueda)throws Exception {
			try {

				if(conFormulario) {
					if(!conSelectedIndex) {
						if(this.jInternalFrameDetalleFormEstructura!=null) {
							this.jInternalFrameDetalleFormEstructura.jComboBoxid_cuenta_contableEstructura.setSelectedItem(cuentacontable);
						}
					} else {
						if(this.jInternalFrameDetalleFormEstructura!=null) {
							this.jInternalFrameDetalleFormEstructura.jComboBoxid_cuenta_contableEstructura.setSelectedIndex(iIndexSelected);
						}
					}
				}


				if(!this.conCargarMinimo) {
					if(conBusqueda) {

					//BYDAN_BUSQUEDAS
					
						if(!conSelectedIndex) {
							this.jComboBoxid_cuenta_contableFK_IdCuentaContableEstructura.setSelectedItem(cuentacontable);
						} else {
							this.jComboBoxid_cuenta_contableFK_IdCuentaContableEstructura.setSelectedIndex(iIndexSelected);
						}

										}
				}
			} catch(Exception e) {
				throw e;
			}
		}

		public void setSelectedItemCombosFrameTipoEstructuraForeignKey(TipoEstructura tipoestructura,int iIndexSelected,Boolean conSelectedIndex,Boolean conFormulario,Boolean conBusqueda)throws Exception {
			try {

				if(conFormulario) {
					if(!conSelectedIndex) {
						if(this.jInternalFrameDetalleFormEstructura!=null) {
							this.jInternalFrameDetalleFormEstructura.jComboBoxid_tipo_estructuraEstructura.setSelectedItem(tipoestructura);
						}
					} else {
						if(this.jInternalFrameDetalleFormEstructura!=null) {
							this.jInternalFrameDetalleFormEstructura.jComboBoxid_tipo_estructuraEstructura.setSelectedIndex(iIndexSelected);
						}
					}
				}


				if(!this.conCargarMinimo) {
					if(conBusqueda) {

					//BYDAN_BUSQUEDAS
					
						if(!conSelectedIndex) {
							this.jComboBoxid_tipo_estructuraFK_IdTipoEstructuraEstructura.setSelectedItem(tipoestructura);
						} else {
							this.jComboBoxid_tipo_estructuraFK_IdTipoEstructuraEstructura.setSelectedIndex(iIndexSelected);
						}

										}
				}
			} catch(Exception e) {
				throw e;
			}
		}

		public void setSelectedItemCombosFramePaisForeignKey(Pais pais,int iIndexSelected,Boolean conSelectedIndex,Boolean conFormulario,Boolean conBusqueda)throws Exception {
			try {

				if(conFormulario) {
					if(!conSelectedIndex) {
						if(this.jInternalFrameDetalleFormEstructura!=null) {
							this.jInternalFrameDetalleFormEstructura.jComboBoxid_paisEstructura.setSelectedItem(pais);
						}
					} else {
						if(this.jInternalFrameDetalleFormEstructura!=null) {
							this.jInternalFrameDetalleFormEstructura.jComboBoxid_paisEstructura.setSelectedIndex(iIndexSelected);
						}
					}
				}


				if(!this.conCargarMinimo) {
					if(conBusqueda) {

					//BYDAN_BUSQUEDAS
					
						if(!conSelectedIndex) {
							this.jComboBoxid_paisFK_IdPaisEstructura.setSelectedItem(pais);
						} else {
							this.jComboBoxid_paisFK_IdPaisEstructura.setSelectedIndex(iIndexSelected);
						}

										}
				}
			} catch(Exception e) {
				throw e;
			}
		}

		public void setSelectedItemCombosFrameCiudadForeignKey(Ciudad ciudad,int iIndexSelected,Boolean conSelectedIndex,Boolean conFormulario,Boolean conBusqueda)throws Exception {
			try {

				if(conFormulario) {
					if(!conSelectedIndex) {
						if(this.jInternalFrameDetalleFormEstructura!=null) {
							this.jInternalFrameDetalleFormEstructura.jComboBoxid_ciudadEstructura.setSelectedItem(ciudad);
						}
					} else {
						if(this.jInternalFrameDetalleFormEstructura!=null) {
							this.jInternalFrameDetalleFormEstructura.jComboBoxid_ciudadEstructura.setSelectedIndex(iIndexSelected);
						}
					}
				}


				if(!this.conCargarMinimo) {
					if(conBusqueda) {

					//BYDAN_BUSQUEDAS
					
						if(!conSelectedIndex) {
							this.jComboBoxid_ciudadFK_IdCiudadEstructura.setSelectedItem(ciudad);
						} else {
							this.jComboBoxid_ciudadFK_IdCiudadEstructura.setSelectedIndex(iIndexSelected);
						}

										}
				}
			} catch(Exception e) {
				throw e;
			}
		}

	


	
	public void refrescarForeignKeysDescripcionesEstructura() throws Exception {
		//SI FUNCIONA DEEPLOAD ESTO VA AL ULTIMO
		if(Constantes.ISUSAEJBLOGICLAYER) {
			EstructuraConstantesFunciones.refrescarForeignKeysDescripcionesEstructura(this.estructuraLogic.getEstructuras());
		} else if(Constantes.ISUSAEJBREMOTE || Constantes.ISUSAEJBHOME) {
			EstructuraConstantesFunciones.refrescarForeignKeysDescripcionesEstructura(this.estructuras);
		}
		
		/*
		ArrayList<Classe> classes=new ArrayList<Classe>();
		
		classes.add(new Classe(Empresa.class));
		classes.add(new Classe(Sucursal.class));
		classes.add(new Classe(Estructura.class));
		classes.add(new Classe(TipoPago_NM.class));
		classes.add(new Classe(NumeroPatronal.class));
		classes.add(new Classe(CuentaContable.class));
		classes.add(new Classe(TipoEstructura.class));
		classes.add(new Classe(Pais.class));
		classes.add(new Classe(Ciudad.class));
			
		if(Constantes.ISUSAEJBLOGICLAYER) {
			//USA LOS OBJETOS DE LOGIC DIRECTAMENTE
			//estructuraLogic.setEstructuras(this.estructuras);
			estructuraLogic.deepLoadsWithConnection(false, DeepLoadType.INCLUDE, classes,"");
	
		} else if(Constantes.ISUSAEJBREMOTE) {
		} else if(Constantes.ISUSAEJBHOME) {
		}
		*/				
	}	
	
	
	
	public Integer getiNumeroPaginacion() {
		return iNumeroPaginacion;
	}

	public void setiNumeroPaginacion(Integer iNumeroPaginacion) {
		this.iNumeroPaginacion= iNumeroPaginacion;
	}
	
	public Integer getiNumeroPaginacionPagina() {
		return iNumeroPaginacionPagina;
	}

	public void setiNumeroPaginacionPagina(Integer iNumeroPaginacionPagina) {
		this.iNumeroPaginacionPagina= iNumeroPaginacionPagina;
	}
	
	
	public Boolean getIsSeleccionarTodos() {
		return this.isSeleccionarTodos;
	}

	public void setIsSeleccionarTodos(Boolean isSeleccionarTodos) {
		this.isSeleccionarTodos= isSeleccionarTodos;
	}
	
	public Boolean getEsControlTabla() {
		return this.esControlTabla;
	}

	public void setEsControlTabla(Boolean esControlTabla) {
		this.esControlTabla= esControlTabla;
	}
	
	public Boolean getIsSeleccionados() {
		return this.isSeleccionados;
	}

	public void setIsSeleccionados(Boolean isSeleccionados) {
		this.isSeleccionados= isSeleccionados;
	}
	
	public Boolean getIsPostAccionNuevo() {
		return this.isPostAccionNuevo;
	}

	public void setIsPostAccionNuevo(Boolean isPostAccionNuevo) {
		this.isPostAccionNuevo= isPostAccionNuevo;
	}
	
	public Boolean getIsPostAccionSinCerrar() {
		return this.isPostAccionSinCerrar;
	}

	public void setIsPostAccionSinCerrar(Boolean isPostAccionSinCerrar) {
		this.isPostAccionSinCerrar= isPostAccionSinCerrar;
	}
	
	public Boolean getIsPostAccionSinMensaje() {
		return this.isPostAccionSinMensaje;
	}

	public void setIsPostAccionSinMensaje(Boolean isPostAccionSinMensaje) {
		this.isPostAccionSinMensaje= isPostAccionSinMensaje;
	}
	
	public Boolean getConGraficoReporte() {
		return this.conGraficoReporte;
	}

	public void setConGraficoReporte(Boolean conGraficoReporte) {
		this.conGraficoReporte= conGraficoReporte;
	}
	
	
	public ArrayList<Reporte> gettiposArchivosReportes() {
		return this.tiposArchivosReportes;
	}
	
	public void settiposArchivosReportes(ArrayList<Reporte> tiposArchivosReportes) {
		this.tiposArchivosReportes = tiposArchivosReportes;
	}
	
	//TIPOS ARCHIVOS DINAMICOS
	public ArrayList<Reporte> gettiposArchivosReportesDinamico() {
		return this.tiposArchivosReportesDinamico;
	}
	
	public void settiposArchivosReportesDinamico(ArrayList<Reporte> tiposArchivosReportesDinamico) {
		this.tiposArchivosReportesDinamico = tiposArchivosReportesDinamico;
	}
	
	//TIPOS REPORTES
	public ArrayList<Reporte> gettiposReportes() {
		return this.tiposReportes;
	}
	
	public void settiposReportes(ArrayList<Reporte> tiposReportes) {
		this.tiposReportes = tiposReportes;
	}
	
	//TIPOS REPORTES
	public ArrayList<Reporte> gettiposReportesDinamico() {
		return this.tiposReportesDinamico;
	}
	
	public void settiposReportesDinamico(ArrayList<Reporte> tiposReportesDinamico) {
		this.tiposReportesDinamico = tiposReportesDinamico;
	}
	
	//TIPOS GRAFICOS REPORTES
	public ArrayList<Reporte> gettiposGraficosReportes() {
		return this.tiposGraficosReportes;
	}
	
	public void settiposGraficosReportes(ArrayList<Reporte> tiposGraficosReportes) {
		this.tiposGraficosReportes = tiposGraficosReportes;
	}
	
	public ArrayList<Reporte> gettiposPaginacion() {
		return this.tiposPaginacion;
	}
	
	public void settiposPaginacion(ArrayList<Reporte> tiposPaginacion) {
		this.tiposPaginacion = tiposPaginacion;
	}
	
	public ArrayList<Reporte> gettiposRelaciones() {
		return this.tiposRelaciones;
	}
	
	public void settiposRelaciones(ArrayList<Reporte> tiposRelaciones) {
		this.tiposRelaciones= tiposRelaciones;
	}
	
	public ArrayList<Reporte> gettiposAcciones() {
		return this.tiposAcciones;
	}
	
	public void settiposAcciones(ArrayList<Reporte> tiposAcciones) {
		this.tiposAcciones = tiposAcciones;
	}
	
	public ArrayList<Reporte> gettiposAccionesFormulario() {
		return this.tiposAccionesFormulario;
	}
	
	public void settiposAccionesFormulario(ArrayList<Reporte> tiposAccionesFormulario) {
		this.tiposAccionesFormulario = tiposAccionesFormulario;
	}
	
	public ArrayList<Reporte> gettiposSeleccionar() {
		return this.tiposSeleccionar;
	}
	
	public void settiposSeleccionar(ArrayList<Reporte> tiposSeleccionar) {
		this.tiposSeleccionar = tiposSeleccionar;
	}
	
	public ArrayList<Reporte> gettiposColumnasSelect() {
		return this.tiposColumnasSelect;
	}
	
	public void settiposColumnasSelect(ArrayList<Reporte> tiposColumnasSelect) {
		this.tiposColumnasSelect = tiposColumnasSelect;
	}
		
	public ArrayList<Reporte> gettiposRelacionesSelect() {
		return this.tiposRelacionesSelect;
	}
	
	public void settiposRelacionesSelect(ArrayList<Reporte> tiposRelacionesSelect) {
		this.tiposRelacionesSelect = tiposRelacionesSelect;
	}
	
	public Long getIIdUsuarioSesion() {
		return lIdUsuarioSesion;
	}

	public void setIIdUsuarioSesion(Long lIdUsuarioSesion) {
		this.lIdUsuarioSesion = lIdUsuarioSesion;
	}
	
	
	public List<Accion> getAccions() {
		return this.accions;
	}

	public void setAccions(List<Accion> accions) {
		this.accions = accions;
	}
	
	public List<Accion> getAccionsFormulario() {
		return this.accionsFormulario;
	}

	public void setAccionsFormulario(List<Accion> accionsFormulario) {
		this.accionsFormulario = accionsFormulario;
	}
	
	public String getsAccionMantenimiento() {
		return sAccionMantenimiento;
	}

	public void setsAccionMantenimiento(String sAccionMantenimiento) {
		this.sAccionMantenimiento = sAccionMantenimiento;
	}

	public String getsAccionBusqueda() {
		return sAccionBusqueda;
	}

	public void setsAccionBusqueda(String sAccionBusqueda) {
		this.sAccionBusqueda = sAccionBusqueda;
	}

	public String getsAccionAdicional() {
		return sAccionAdicional;
	}

	public void setsAccionAdicional(String sAccionAdicional) {
		this.sAccionAdicional = sAccionAdicional;
	}

	public String getsUltimaBusqueda() {
		return sUltimaBusqueda;
	}

	public void setsUltimaBusqueda(String sUltimaBusqueda) {
		this.sUltimaBusqueda = sUltimaBusqueda;
	}
	
	public String getsTipoArchivoReporte() {
		return sTipoArchivoReporte;
	}

	public void setsTipoArchivoReporte(String sTipoArchivoReporte) {
		this.sTipoArchivoReporte = sTipoArchivoReporte;
	}
	
	public String getsTipoArchivoReporteDinamico() {
		return sTipoArchivoReporteDinamico;
	}

	public void setsTipoArchivoReporteDinamico(String sTipoArchivoReporteDinamico) {
		this.sTipoArchivoReporteDinamico = sTipoArchivoReporteDinamico;
	}
	
	public String getsTipoReporte() {
		return sTipoReporte;
	}

	public void setsTipoReporte(String sTipoReporte) {
		this.sTipoReporte = sTipoReporte;
	}
	
	public String getsTipoReporteDinamico() {
		return sTipoReporteDinamico;
	}

	public void setsTipoReporteDinamico(String sTipoReporteDinamico) {
		this.sTipoReporteDinamico = sTipoReporteDinamico;
	}
	
	public String getsTipoGraficoReporte() {
		return sTipoGraficoReporte;
	}

	public void setsTipoGraficoReporte(String sTipoGraficoReporte) {
		this.sTipoGraficoReporte = sTipoGraficoReporte;
	}
	
	public String getsTipoPaginacion() {
		return sTipoPaginacion;
	}

	public void setsTipoPaginacion(String sTipoPaginacion) {
		this.sTipoPaginacion = sTipoPaginacion;
	}
	
	public String getsTipoRelacion() {
		return sTipoRelacion;
	}

	public void setsTipoRelacion(String sTipoRelacion) {
		this.sTipoRelacion = sTipoRelacion;
	}
	
	public String getsTipoAccion() {
		return sTipoAccion;
	}

	public void setsTipoAccion(String sTipoAccion) {
		this.sTipoAccion = sTipoAccion;
	}
	
	public String getsTipoAccionFormulario() {
		return sTipoAccionFormulario;
	}

	public void setsTipoAccionFormulario(String sTipoAccionFormulario) {
		this.sTipoAccionFormulario = sTipoAccionFormulario;
	}
	
	public String getsTipoSeleccionar() {
		return sTipoSeleccionar;
	}

	public void setsTipoSeleccionar(String sTipoSeleccionar) {
		this.sTipoSeleccionar = sTipoSeleccionar;
	}
	
	public String getsValorCampoGeneral() {
		return sValorCampoGeneral;
	}

	public void setsValorCampoGeneral(String sValorCampoGeneral) {
		this.sValorCampoGeneral = sValorCampoGeneral;
	}			

	public String getsDetalleReporte() {
		return sDetalleReporte;
	}

	public void setsDetalleReporte(String sDetalleReporte) {
		this.sDetalleReporte = sDetalleReporte;
	}
	
	
	public String getsTipoReporteExtra() {
		return sTipoReporteExtra;
	}

	public void setsTipoReporteExtra(String sTipoReporteExtra) {
		this.sTipoReporteExtra = sTipoReporteExtra;
	}
	
	public Boolean getesReporteDinamico() {
		return esReporteDinamico;
	}	
	
	public void setesReporteDinamico(Boolean esReporteDinamico) {
		this.esReporteDinamico = esReporteDinamico;
	}
	
	public Boolean getesRecargarFks() {
		return esRecargarFks;
	}	
	
	public void setesRecargarFks(Boolean esRecargarFks) {
		this.esRecargarFks = esRecargarFks;
	}
	
	public Boolean getesReporteAccionProceso() {
		return esReporteAccionProceso;
	}	
	
	public void setesReporteAccionProceso(Boolean esReporteAccionProceso) {
		this.esReporteAccionProceso= esReporteAccionProceso;
	}
		
	public EstructuraParameterReturnGeneral getEstructuraParameterGeneral() {
		return this.estructuraParameterGeneral;
	}
	
	public void setEstructuraParameterGeneral(EstructuraParameterReturnGeneral estructuraParameterGeneral) {
		this.estructuraParameterGeneral = estructuraParameterGeneral;
	}
	
	public String getsPathReporteDinamico() {
		return sPathReporteDinamico;
	}

	public void setsPathReporteDinamico(String sPathReporteDinamico) {
		this.sPathReporteDinamico = sPathReporteDinamico;
	}
		
	public Boolean getisMostrarNumeroPaginacion() {
		return isMostrarNumeroPaginacion;
	}

	public void setisMostrarNumeroPaginacion(Boolean isMostrarNumeroPaginacion) {
		this.isMostrarNumeroPaginacion = isMostrarNumeroPaginacion;
	}
	
	public Mensaje getMensaje() {
		return mensaje;
	}

	public void setMensaje(Mensaje mensaje) {
		this.mensaje = mensaje;
	}
	
	public Boolean getIsPermisoTodoEstructura() {
		return isPermisoTodoEstructura;
	}

	public void setIsPermisoTodoEstructura(Boolean isPermisoTodoEstructura) {
		this.isPermisoTodoEstructura = isPermisoTodoEstructura;
	}

	public Boolean getIsPermisoNuevoEstructura() {
		return isPermisoNuevoEstructura;
	}

	public void setIsPermisoNuevoEstructura(Boolean isPermisoNuevoEstructura) {
		this.isPermisoNuevoEstructura = isPermisoNuevoEstructura;
	}

	public Boolean getIsPermisoActualizarEstructura() {
		return isPermisoActualizarEstructura;
	}

	public void setIsPermisoActualizarEstructura(Boolean isPermisoActualizarEstructura) {
		this.isPermisoActualizarEstructura = isPermisoActualizarEstructura;
	}

	public Boolean getIsPermisoEliminarEstructura() {
		return isPermisoEliminarEstructura;
	}

	public void setIsPermisoEliminarEstructura(Boolean isPermisoEliminarEstructura) {
		this.isPermisoEliminarEstructura = isPermisoEliminarEstructura;
	}

	public Boolean getIsPermisoGuardarCambiosEstructura() {
		return isPermisoGuardarCambiosEstructura;
	}

	public void setIsPermisoGuardarCambiosEstructura(Boolean isPermisoGuardarCambiosEstructura) {
		this.isPermisoGuardarCambiosEstructura = isPermisoGuardarCambiosEstructura;
	}
	
	public Boolean getIsPermisoConsultaEstructura() {
		return isPermisoConsultaEstructura;
	}

	public void setIsPermisoConsultaEstructura(Boolean isPermisoConsultaEstructura) {
		this.isPermisoConsultaEstructura = isPermisoConsultaEstructura;
	}

	public Boolean getIsPermisoBusquedaEstructura() {
		return isPermisoBusquedaEstructura;
	}

	public void setIsPermisoBusquedaEstructura(Boolean isPermisoBusquedaEstructura) {
		this.isPermisoBusquedaEstructura = isPermisoBusquedaEstructura;
	}

	public Boolean getIsPermisoReporteEstructura() {
		return isPermisoReporteEstructura;
	}

	public void setIsPermisoReporteEstructura(Boolean isPermisoReporteEstructura) {
		this.isPermisoReporteEstructura = isPermisoReporteEstructura;
	}
	
	public Boolean getIsPermisoPaginacionMedioEstructura() {
		return isPermisoPaginacionMedioEstructura;
	}

	public void setIsPermisoPaginacionMedioEstructura(Boolean isPermisoPaginacionMedioEstructura) {
		this.isPermisoPaginacionMedioEstructura = isPermisoPaginacionMedioEstructura;
	}
	
	public Boolean getIsPermisoPaginacionTodoEstructura() {
		return isPermisoPaginacionTodoEstructura;
	}

	public void setIsPermisoPaginacionTodoEstructura(Boolean isPermisoPaginacionTodoEstructura) {
		this.isPermisoPaginacionTodoEstructura = isPermisoPaginacionTodoEstructura;
	}
	
	public Boolean getIsPermisoPaginacionAltoEstructura() {
		return isPermisoPaginacionAltoEstructura;
	}

	public void setIsPermisoPaginacionAltoEstructura(Boolean isPermisoPaginacionAltoEstructura) {
		this.isPermisoPaginacionAltoEstructura = isPermisoPaginacionAltoEstructura;
	}
	
	public Boolean getIsPermisoCopiarEstructura() {
		return isPermisoCopiarEstructura;
	}

	public void setIsPermisoCopiarEstructura(Boolean isPermisoCopiarEstructura) {
		this.isPermisoCopiarEstructura = isPermisoCopiarEstructura;
	}
	
	public Boolean getIsPermisoVerFormEstructura() {
		return isPermisoVerFormEstructura;
	}

	public void setIsPermisoVerFormEstructura(Boolean isPermisoVerFormEstructura) {
		this.isPermisoVerFormEstructura = isPermisoVerFormEstructura;
	}
	
	public Boolean getIsPermisoDuplicarEstructura() {
		return isPermisoDuplicarEstructura;
	}

	public void setIsPermisoDuplicarEstructura(Boolean isPermisoDuplicarEstructura) {
		this.isPermisoDuplicarEstructura = isPermisoDuplicarEstructura;
	}
	
	public Boolean getIsPermisoOrdenEstructura() {
		return isPermisoOrdenEstructura;
	}

	public void setIsPermisoOrdenEstructura(Boolean isPermisoOrdenEstructura) {
		this.isPermisoOrdenEstructura = isPermisoOrdenEstructura;
	}
	
	public String getsVisibilidadTablaBusquedas() {
		return sVisibilidadTablaBusquedas;
	}

	public void setsVisibilidadTablaBusquedas(String sVisibilidadTablaBusquedas) {
		this.sVisibilidadTablaBusquedas = sVisibilidadTablaBusquedas;
	}
	
	public String getsVisibilidadTablaElementos() {
		return sVisibilidadTablaElementos;
	}

	public void setsVisibilidadTablaElementos(String sVisibilidadTablaElementos) {
		this.sVisibilidadTablaElementos = sVisibilidadTablaElementos;
	}

	public String getsVisibilidadTablaAcciones() {
		return sVisibilidadTablaAcciones;
	}

	public void setsVisibilidadTablaAcciones(String sVisibilidadTablaAcciones) {
		this.sVisibilidadTablaAcciones = sVisibilidadTablaAcciones;
	}
	
	public Boolean getIsVisibilidadCeldaNuevoEstructura() {
		return isVisibilidadCeldaNuevoEstructura;
	}

	public void setIsVisibilidadCeldaNuevoEstructura(Boolean isVisibilidadCeldaNuevoEstructura) {
		this.isVisibilidadCeldaNuevoEstructura = isVisibilidadCeldaNuevoEstructura;
	}
	
	public Boolean getIsVisibilidadCeldaDuplicarEstructura() {
		return isVisibilidadCeldaDuplicarEstructura;
	}

	public void setIsVisibilidadCeldaDuplicarEstructura(Boolean isVisibilidadCeldaDuplicarEstructura) {
		this.isVisibilidadCeldaDuplicarEstructura = isVisibilidadCeldaDuplicarEstructura;
	}
	
	public Boolean getIsVisibilidadCeldaCopiarEstructura() {
		return isVisibilidadCeldaCopiarEstructura;
	}

	public void setIsVisibilidadCeldaCopiarEstructura(Boolean isVisibilidadCeldaCopiarEstructura) {
		this.isVisibilidadCeldaCopiarEstructura = isVisibilidadCeldaCopiarEstructura;
	}
	
	public Boolean getIsVisibilidadCeldaVerFormEstructura() {
		return isVisibilidadCeldaVerFormEstructura;
	}

	public void setIsVisibilidadCeldaVerFormEstructura(Boolean isVisibilidadCeldaVerFormEstructura) {
		this.isVisibilidadCeldaVerFormEstructura = isVisibilidadCeldaVerFormEstructura;
	}
	
	public Boolean getIsVisibilidadCeldaOrdenEstructura() {
		return isVisibilidadCeldaOrdenEstructura;
	}

	public void setIsVisibilidadCeldaOrdenEstructura(Boolean isVisibilidadCeldaOrdenEstructura) {
		this.isVisibilidadCeldaOrdenEstructura = isVisibilidadCeldaOrdenEstructura;
	}
	
	public Boolean getIsVisibilidadCeldaNuevoRelacionesEstructura() {
		return isVisibilidadCeldaNuevoRelacionesEstructura;
	}

	public void setIsVisibilidadCeldaNuevoRelacionesEstructura(Boolean isVisibilidadCeldaNuevoRelacionesEstructura) {
		this.isVisibilidadCeldaNuevoRelacionesEstructura = isVisibilidadCeldaNuevoRelacionesEstructura;
	}
	
	public Boolean getIsVisibilidadCeldaModificarEstructura() {
		return isVisibilidadCeldaModificarEstructura;
	}

	public void setIsVisibilidadCeldaModificarEstructura(Boolean isVisibilidadCeldaModificarEstructura) {
		this.isVisibilidadCeldaModificarEstructura = isVisibilidadCeldaModificarEstructura;
	}
	
	public Boolean getIsVisibilidadCeldaActualizarEstructura() {
		return isVisibilidadCeldaActualizarEstructura;
	}

	public void setIsVisibilidadCeldaActualizarEstructura(Boolean isVisibilidadCeldaActualizarEstructura) {
		this.isVisibilidadCeldaActualizarEstructura = isVisibilidadCeldaActualizarEstructura;
	}

	public Boolean getIsVisibilidadCeldaEliminarEstructura() {
		return isVisibilidadCeldaEliminarEstructura;
	}

	public void setIsVisibilidadCeldaEliminarEstructura(Boolean isVisibilidadCeldaEliminarEstructura) {
		this.isVisibilidadCeldaEliminarEstructura = isVisibilidadCeldaEliminarEstructura;
	}

	public Boolean getIsVisibilidadCeldaCancelarEstructura() {
		return isVisibilidadCeldaCancelarEstructura;
	}

	public void setIsVisibilidadCeldaCancelarEstructura(Boolean isVisibilidadCeldaCancelarEstructura) {
		this.isVisibilidadCeldaCancelarEstructura = isVisibilidadCeldaCancelarEstructura;
	}

	public Boolean getIsVisibilidadCeldaGuardarEstructura() {
		return isVisibilidadCeldaGuardarEstructura;
	}

	public void setIsVisibilidadCeldaGuardarEstructura(Boolean isVisibilidadCeldaGuardarEstructura) {
		this.isVisibilidadCeldaGuardarEstructura = isVisibilidadCeldaGuardarEstructura;
	}
	
	public Boolean getIsVisibilidadCeldaGuardarCambiosEstructura() {
		return isVisibilidadCeldaGuardarCambiosEstructura;
	}

	public void setIsVisibilidadCeldaGuardarCambiosEstructura(Boolean isVisibilidadCeldaGuardarCambiosEstructura) {
		this.isVisibilidadCeldaGuardarCambiosEstructura = isVisibilidadCeldaGuardarCambiosEstructura;
	}
		
	public EstructuraSessionBean getestructuraSessionBean() {
		return this.estructuraSessionBean;
	}
	
	public void setestructuraSessionBean(EstructuraSessionBean estructuraSessionBean) {
		this.estructuraSessionBean=estructuraSessionBean;
	}
	
	
	public Boolean getisVisibilidadFK_IdCiudad() {
		return this.isVisibilidadFK_IdCiudad;
	}

	public void setisVisibilidadFK_IdCiudad(Boolean isVisibilidadFK_IdCiudad) {
		this.isVisibilidadFK_IdCiudad=isVisibilidadFK_IdCiudad;
	}

	public Boolean getisVisibilidadFK_IdCuentaContable() {
		return this.isVisibilidadFK_IdCuentaContable;
	}

	public void setisVisibilidadFK_IdCuentaContable(Boolean isVisibilidadFK_IdCuentaContable) {
		this.isVisibilidadFK_IdCuentaContable=isVisibilidadFK_IdCuentaContable;
	}

	public Boolean getisVisibilidadFK_IdEmpresa() {
		return this.isVisibilidadFK_IdEmpresa;
	}

	public void setisVisibilidadFK_IdEmpresa(Boolean isVisibilidadFK_IdEmpresa) {
		this.isVisibilidadFK_IdEmpresa=isVisibilidadFK_IdEmpresa;
	}

	public Boolean getisVisibilidadFK_IdEstructura() {
		return this.isVisibilidadFK_IdEstructura;
	}

	public void setisVisibilidadFK_IdEstructura(Boolean isVisibilidadFK_IdEstructura) {
		this.isVisibilidadFK_IdEstructura=isVisibilidadFK_IdEstructura;
	}

	public Boolean getisVisibilidadFK_IdNumeroPatronal() {
		return this.isVisibilidadFK_IdNumeroPatronal;
	}

	public void setisVisibilidadFK_IdNumeroPatronal(Boolean isVisibilidadFK_IdNumeroPatronal) {
		this.isVisibilidadFK_IdNumeroPatronal=isVisibilidadFK_IdNumeroPatronal;
	}

	public Boolean getisVisibilidadFK_IdPais() {
		return this.isVisibilidadFK_IdPais;
	}

	public void setisVisibilidadFK_IdPais(Boolean isVisibilidadFK_IdPais) {
		this.isVisibilidadFK_IdPais=isVisibilidadFK_IdPais;
	}

	public Boolean getisVisibilidadFK_IdSucursal() {
		return this.isVisibilidadFK_IdSucursal;
	}

	public void setisVisibilidadFK_IdSucursal(Boolean isVisibilidadFK_IdSucursal) {
		this.isVisibilidadFK_IdSucursal=isVisibilidadFK_IdSucursal;
	}

	public Boolean getisVisibilidadFK_IdTipoEstructura() {
		return this.isVisibilidadFK_IdTipoEstructura;
	}

	public void setisVisibilidadFK_IdTipoEstructura(Boolean isVisibilidadFK_IdTipoEstructura) {
		this.isVisibilidadFK_IdTipoEstructura=isVisibilidadFK_IdTipoEstructura;
	}

	public Boolean getisVisibilidadFK_IdTipoPago_NM() {
		return this.isVisibilidadFK_IdTipoPago_NM;
	}

	public void setisVisibilidadFK_IdTipoPago_NM(Boolean isVisibilidadFK_IdTipoPago_NM) {
		this.isVisibilidadFK_IdTipoPago_NM=isVisibilidadFK_IdTipoPago_NM;
	}

	
	
	public void setVariablesFormularioToObjetoActualForeignKeysEstructura(Estructura estructura)throws Exception {
		try {
			
				this.setActualParaGuardarEmpresaForeignKey(estructura,null);
				this.setActualParaGuardarSucursalForeignKey(estructura,null);
				this.setActualParaGuardarEstructuraForeignKey(estructura,null);
				this.setActualParaGuardarTipoPago_NMForeignKey(estructura,null);
				this.setActualParaGuardarNumeroPatronalForeignKey(estructura,null);
				this.setActualParaGuardarCuentaContableForeignKey(estructura,null);
				this.setActualParaGuardarTipoEstructuraForeignKey(estructura,null);
				this.setActualParaGuardarPaisForeignKey(estructura,null);
				this.setActualParaGuardarCiudadForeignKey(estructura,null);
		} catch(Exception e) {
			throw e;
		}
	}
	
	public void cargarLicenciaCliente(DatosCliente datosCliente) throws Exception {
		Boolean existe=false;
			
		try {
				InputStream reportFile=null;
				
				String sPath=this.parametroGeneralUsuario.getpath_exportar()+"erp_bydan/license/license.xml";
				
				reportFile = new FileInputStream(sPath);
				
				Document documentBuilder=null;
				
				if(this.constantes2.DOCUMENT_BUILDER==null) {
					documentBuilder=Funciones2.parseXml(reportFile);
				} else {
					documentBuilder=this.constantes2.DOCUMENT_BUILDER;
				}
				
				//GlobalSeguridad.readXml(documentBuilder);
				
				String sNamePCServerLicencia="";
				String sClaveSistemaLicencia="";
				Date dFechaServerLicencia=null;
				
				//CARGAR ELEMENTOS DE LICENCIA
				NodeList nodeList = documentBuilder.getElementsByTagName("Licencia");
				
				for (int iIndice = 0; iIndice < nodeList.getLength(); iIndice++) {
					Node node = nodeList.item(iIndice);
				
					if (node.getNodeType() == Node.ELEMENT_NODE) {
						Element element = (Element) node;
						 
						sNamePCServerLicencia=element.getElementsByTagName("NombrePc").item(0).getTextContent();
						sClaveSistemaLicencia=element.getElementsByTagName("ClaveSistema").item(0).getTextContent();
						
						existe=true;
						break;
					}
				}														
			
				
			if(existe) {
				datosCliente.setsClaveSistema(sClaveSistemaLicencia);
				
				if(!datosCliente.getsNamePCServer().equals(sNamePCServerLicencia)
					&& !datosCliente.getsNamePCServer().equals("")) {
					
					datosCliente.setsNamePCServer(sNamePCServerLicencia);
				}
			} else {
				throw new Exception("NO EXISTE LICENCIA O NO ESTA BIEN FORMADO");
			}
		} catch(Exception e) {
			throw new Exception("NO EXISTE LICENCIA O NO ESTA BIEN FORMADO");
		}						
	}
	
	public void cargarDatosCliente() throws Exception {
		String sPrimerMacAddress="";		
		String sHostName="";		 
		String sHostIp="";		  
		String sHostUser="";
		
		
		sPrimerMacAddress=FuncionesNetwork.getPrimerMacAddress();		
		sHostName=FuncionesNetwork.getHostName();		 
		sHostIp=FuncionesNetwork.getHostIp();		  
		sHostUser=FuncionesNetwork.getHostUser();
		
		
		this.datosCliente=new DatosCliente();
		if(lIdUsuarioSesion!=null){datosCliente.setIdUsuario(this.lIdUsuarioSesion);}
		
		//SERVIDOR WEB Y TALVEZ SERVIDOR SWING WINDOWS
		this.datosCliente.setsUsuarioPCServer(sHostUser);
		this.datosCliente.setsNamePCServer(sHostName);
		this.datosCliente.setsIPPCServer(sHostIp);
		this.datosCliente.setsMacAddressPCServer(sPrimerMacAddress);
			
			//CLIENTE SWING WINDOWS
			this.datosCliente.setIsClienteWeb(false);
			
			this.datosCliente.setsUsuarioPC(sHostUser);
			this.datosCliente.setsNamePC(sHostName);
			this.datosCliente.setsIPPC(sHostIp);
			this.datosCliente.setsMacAddressPC(sPrimerMacAddress);	
			
			
			//this.cargarLicenciaCliente(this.datosCliente);
			
	}
	
	public void bugActualizarReferenciaActual(Estructura estructura,Estructura estructuraAux) throws Exception {
		//ARCHITECTURE		
		//EL ID NEGATIVO GUARDADO EN ORIGINAL SIRVE PARA VERIFICAR Y ACTUALIZAR EL REGISTRO NUEVO (ID,VERSIONROW)
		this.setCamposBaseDesdeOriginalEstructura(estructura);
					
		//POR BUG: EL OBJETO ACTUAL SE PERDIA, POR LO QUE SE GUARDA TAMBIEN VALORES EN AUX Y LUEGO DESPUES DEL MENSAJE SE HACE REFERENCIA EL OBJETO ACTUAL AL AUX
		estructuraAux.setId(estructura.getId());
		estructuraAux.setVersionRow(estructura.getVersionRow());					
	}
	
	public void ejecutarMantenimiento(MaintenanceType maintenanceType)throws Exception {	
		try	{								
			
			//this.startProcessEstructura();
		
			int intSelectedRow = this.jTableDatosEstructura.getSelectedRow();	       
			
			//PUEDE SER -1 CUANDO SE ELIMINA EN GUARDAR CAMBIOS
			if(intSelectedRow>=0 && maintenanceType!=MaintenanceType.GUARDARCAMBIOS) {
				//SE PIEDE INDICE SELECTED CON FILA TOTALES, ASEGURARSE QUE OBJETO ACTUAL ESTE EN FORMULARIO
					
				//ARCHITECTURE
				
				if(Constantes.ISUSAEJBLOGICLAYER) {
					this.estructura =(Estructura) this.estructuraLogic.getEstructuras().toArray()[this.jTableDatosEstructura.convertRowIndexToModel(intSelectedRow)];
				} else if(Constantes.ISUSAEJBREMOTE ||Constantes.ISUSAEJBHOME) {
					this.estructura =(Estructura) this.estructuras.toArray()[this.jTableDatosEstructura.convertRowIndexToModel(intSelectedRow)];
				}
				
				//ARCHITECTURE
				
				if(EstructuraJInternalFrame.ISBINDING_MANUAL_TABLA) {
					//this.setVariablesFormularioToObjetoActualEstructura(this.estructura,true);
				}
				
				this.setVariablesFormularioToObjetoActualForeignKeysEstructura(this.estructura);
			}
			
			//LUEGO DE TRAER DATOS CORRESPONDIENTES QUE COINCIDA LISTA TABLA QUITO FILA TOTALES
			if(this.conTotales) {
				//MEJOR LO DEJO, SI EXISTE EXCEPCION SE PIEDE FILA TOTALES Y ORDEN INDICE FILA ACTUAL
				//this.quitarFilaTotales();
			}
			
			this.cargarDatosCliente();
			
			this.datosDeep=new DatosDeep();
			
			//SE CAMBIA ESTADOS CON ERROR, ENTONCES SE EJECUTA ANTES
			//this.invalidValues = estructuraValidator.getInvalidValues(this.estructura);
			
			//if(this.invalidValues==null || this.invalidValues.length<=0) {
			
			estructuraLogic.setDatosCliente(datosCliente);
			estructuraLogic.setIsConDeep(false);
			
			if(maintenanceType==MaintenanceType.NUEVO) {
				estructuraAux=new  Estructura();
				
				estructuraAux.setIsNew(true);
				estructuraAux.setIsChanged(true);
				
				estructuraAux.setEstructuraOriginal(this.estructura);
				
				estructuraAux.setId(this.estructura.getId());	
				estructuraAux.setVersionRow(this.estructura.getVersionRow());	
				estructuraAux.setid_empresa(this.estructura.getid_empresa());	
				estructuraAux.setid_sucursal(this.estructura.getid_sucursal());	
				estructuraAux.setid_estructura(this.estructura.getid_estructura());	
				estructuraAux.setid_tipo_pago__n_m(this.estructura.getid_tipo_pago__n_m());	
				estructuraAux.setid_numero_patronal(this.estructura.getid_numero_patronal());	
				estructuraAux.setid_cuenta_contable(this.estructura.getid_cuenta_contable());	
				estructuraAux.setid_tipo_estructura(this.estructura.getid_tipo_estructura());	
				estructuraAux.setid_pais(this.estructura.getid_pais());	
				estructuraAux.setid_ciudad(this.estructura.getid_ciudad());	
				estructuraAux.setcodigo(this.estructura.getcodigo());	
				estructuraAux.setnumero(this.estructura.getnumero());	
				estructuraAux.setvalor_anticipo(this.estructura.getvalor_anticipo());	
				estructuraAux.setporcentaje_anticipo(this.estructura.getporcentaje_anticipo());	
				estructuraAux.setnombre(this.estructura.getnombre());	
				estructuraAux.setes_jefe(this.estructura.getes_jefe());	
				estructuraAux.setes_anual(this.estructura.getes_anual());	
				estructuraAux.setporcentaje(this.estructura.getporcentaje());	
				estructuraAux.setvalor(this.estructura.getvalor());	
								
				//ARCHITECTURE
				if(Constantes.ISUSAEJBLOGICLAYER) {
					//NO ENTENDIBLE PORQUE PONER
					//if(this.estructuraSessionBean.getEstaModoGuardarRelaciones() 
					//	|| this.estructuraSessionBean.getEsGuardarRelacionado())	{
						actualizarLista(estructuraAux,estructuraLogic.getEstructuras());
					//}
				} else if(Constantes.ISUSAEJBREMOTE||Constantes.ISUSAEJBHOME) {
					actualizarLista(estructuraAux,estructuras);
				}
				//ARCHITECTURE
				
				if(!isGuardarCambiosEnLote  && !this.estructuraSessionBean.getEstaModoGuardarRelaciones() 
						&& !this.estructuraSessionBean.getEsGuardarRelacionado())	{
					
					//ARCHITECTURE
					if(Constantes.ISUSAEJBLOGICLAYER) {
						estructuraLogic.saveEstructuras();//WithConnection
						//estructuraLogic.getSetVersionRowEstructuras();//WithConnection
					} else if(Constantes.ISUSAEJBREMOTE) {
					} else if(Constantes.ISUSAEJBHOME) {
					}
					//ARCHITECTURE		
					
					//POR BUG: EL OBJETO ACTUAL SE PERDIA, POR LO QUE SE GUARDA TAMBIEN VALORES EN AUX Y LUEGO DESPUES DEL MENSAJE SE HACE REFERENCIA EL OBJETO ACTUAL AL AUX
					this.bugActualizarReferenciaActual(this.estructura,estructuraAux);
					
					this.refrescarForeignKeysDescripcionesEstructura();
				} else {
					//CUANDO ES MANTENIMIENTO MAESTRO DETALLE
					if(this.estructuraSessionBean.getEstaModoGuardarRelaciones()) {
						//GUARDAR RELACIONES
						//ARCHITECTURE
						if(Constantes.ISUSAEJBLOGICLAYER) {
							
							this.jInternalFrameDetalleFormEstructura.centrocostoestructuraBeanSwingJInternalFrame.centrocostoestructuraLogic.getCentroCostoEstructuras().addAll(this.jInternalFrameDetalleFormEstructura.centrocostoestructuraBeanSwingJInternalFrame.centrocostoestructurasEliminados);
							this.jInternalFrameDetalleFormEstructura.planivacacionBeanSwingJInternalFrame.planivacacionLogic.getPlaniVacacions().addAll(this.jInternalFrameDetalleFormEstructura.planivacacionBeanSwingJInternalFrame.planivacacionsEliminados);
							this.jInternalFrameDetalleFormEstructura.asistenciamensualBeanSwingJInternalFrame.asistenciamensualLogic.getAsistenciaMensuals().addAll(this.jInternalFrameDetalleFormEstructura.asistenciamensualBeanSwingJInternalFrame.asistenciamensualsEliminados);
							this.jInternalFrameDetalleFormEstructura.empleadoprocesorubroBeanSwingJInternalFrame.empleadoprocesorubroLogic.getEmpleadoProcesoRubros().addAll(this.jInternalFrameDetalleFormEstructura.empleadoprocesorubroBeanSwingJInternalFrame.empleadoprocesorubrosEliminados);
							this.jInternalFrameDetalleFormEstructura.empleadopagorubroBeanSwingJInternalFrame.empleadopagorubroLogic.getEmpleadoPagoRubros().addAll(this.jInternalFrameDetalleFormEstructura.empleadopagorubroBeanSwingJInternalFrame.empleadopagorubrosEliminados);
							this.jInternalFrameDetalleFormEstructura.provisionempleadoBeanSwingJInternalFrame.provisionempleadoLogic.getProvisionEmpleados().addAll(this.jInternalFrameDetalleFormEstructura.provisionempleadoBeanSwingJInternalFrame.provisionempleadosEliminados);
							this.jInternalFrameDetalleFormEstructura.empleadoBeanSwingJInternalFrame.empleadoLogic.getEmpleados().addAll(this.jInternalFrameDetalleFormEstructura.empleadoBeanSwingJInternalFrame.empleadosEliminados);
							this.jInternalFrameDetalleFormEstructura.estructuraBeanSwingJInternalFrame.estructuraLogic.getEstructuras().addAll(this.jInternalFrameDetalleFormEstructura.estructuraBeanSwingJInternalFrame.estructurasEliminados);
							this.jInternalFrameDetalleFormEstructura.evaluacionempleadoBeanSwingJInternalFrame.evaluacionempleadoLogic.getEvaluacionEmpleados().addAll(this.jInternalFrameDetalleFormEstructura.evaluacionempleadoBeanSwingJInternalFrame.evaluacionempleadosEliminados);
							this.jInternalFrameDetalleFormEstructura.empleadoimpuestorentaBeanSwingJInternalFrame.empleadoimpuestorentaLogic.getEmpleadoImpuestoRentas().addAll(this.jInternalFrameDetalleFormEstructura.empleadoimpuestorentaBeanSwingJInternalFrame.empleadoimpuestorentasEliminados);
							this.jInternalFrameDetalleFormEstructura.rubroestructuraBeanSwingJInternalFrame.rubroestructuraLogic.getRubroEstructuras().addAll(this.jInternalFrameDetalleFormEstructura.rubroestructuraBeanSwingJInternalFrame.rubroestructurasEliminados);
							this.jInternalFrameDetalleFormEstructura.cierrerolmensualBeanSwingJInternalFrame.cierrerolmensualLogic.getCierreRolMensuals().addAll(this.jInternalFrameDetalleFormEstructura.cierrerolmensualBeanSwingJInternalFrame.cierrerolmensualsEliminados);
							this.jInternalFrameDetalleFormEstructura.formatonomiBeanSwingJInternalFrame.formatonomiLogic.getFormatoNomis().addAll(this.jInternalFrameDetalleFormEstructura.formatonomiBeanSwingJInternalFrame.formatonomisEliminados);
							this.jInternalFrameDetalleFormEstructura.empleadoestructuraBeanSwingJInternalFrame.empleadoestructuraLogic.getEmpleadoEstructuras().addAll(this.jInternalFrameDetalleFormEstructura.empleadoestructuraBeanSwingJInternalFrame.empleadoestructurasEliminados);
							this.jInternalFrameDetalleFormEstructura.historialpagonomiBeanSwingJInternalFrame.historialpagonomiLogic.getHistorialPagoNomis().addAll(this.jInternalFrameDetalleFormEstructura.historialpagonomiBeanSwingJInternalFrame.historialpagonomisEliminados);
							this.jInternalFrameDetalleFormEstructura.asistenciadiariaBeanSwingJInternalFrame.asistenciadiariaLogic.getAsistenciaDiarias().addAll(this.jInternalFrameDetalleFormEstructura.asistenciadiariaBeanSwingJInternalFrame.asistenciadiariasEliminados);
							this.jInternalFrameDetalleFormEstructura.funcionestrucBeanSwingJInternalFrame.funcionestrucLogic.getFuncionEstrucs().addAll(this.jInternalFrameDetalleFormEstructura.funcionestrucBeanSwingJInternalFrame.funcionestrucsEliminados);
							this.jInternalFrameDetalleFormEstructura.solicitudreemplazoBeanSwingJInternalFrame.solicitudreemplazoLogic.getSolicitudReemplazos().addAll(this.jInternalFrameDetalleFormEstructura.solicitudreemplazoBeanSwingJInternalFrame.solicitudreemplazosEliminados);
							this.jInternalFrameDetalleFormEstructura.solicitudhoraextraBeanSwingJInternalFrame.solicitudhoraextraLogic.getSolicitudHoraExtras().addAll(this.jInternalFrameDetalleFormEstructura.solicitudhoraextraBeanSwingJInternalFrame.solicitudhoraextrasEliminados);
							this.jInternalFrameDetalleFormEstructura.evaluacionnomiBeanSwingJInternalFrame.evaluacionnomiLogic.getEvaluacionNomis().addAll(this.jInternalFrameDetalleFormEstructura.evaluacionnomiBeanSwingJInternalFrame.evaluacionnomisEliminados);
							this.jInternalFrameDetalleFormEstructura.solicitudvacacionBeanSwingJInternalFrame.solicitudvacacionLogic.getSolicitudVacacions().addAll(this.jInternalFrameDetalleFormEstructura.solicitudvacacionBeanSwingJInternalFrame.solicitudvacacionsEliminados);
							this.jInternalFrameDetalleFormEstructura.responsableactivofijoBeanSwingJInternalFrame.responsableactivofijoLogic.getResponsableActivoFijos().addAll(this.jInternalFrameDetalleFormEstructura.responsableactivofijoBeanSwingJInternalFrame.responsableactivofijosEliminados);
							this.jInternalFrameDetalleFormEstructura.rubroempleacuentacontableBeanSwingJInternalFrame.rubroempleacuentacontableLogic.getRubroEmpleaCuentaContables().addAll(this.jInternalFrameDetalleFormEstructura.rubroempleacuentacontableBeanSwingJInternalFrame.rubroempleacuentacontablesEliminados);
						} else if(Constantes.ISUSAEJBREMOTE ||Constantes.ISUSAEJBHOME) {
							
							this.jInternalFrameDetalleFormEstructura.centrocostoestructuraBeanSwingJInternalFrame.centrocostoestructuras.addAll(this.jInternalFrameDetalleFormEstructura.centrocostoestructuraBeanSwingJInternalFrame.centrocostoestructurasEliminados);
							this.jInternalFrameDetalleFormEstructura.planivacacionBeanSwingJInternalFrame.planivacacions.addAll(this.jInternalFrameDetalleFormEstructura.planivacacionBeanSwingJInternalFrame.planivacacionsEliminados);
							this.jInternalFrameDetalleFormEstructura.asistenciamensualBeanSwingJInternalFrame.asistenciamensuals.addAll(this.jInternalFrameDetalleFormEstructura.asistenciamensualBeanSwingJInternalFrame.asistenciamensualsEliminados);
							this.jInternalFrameDetalleFormEstructura.empleadoprocesorubroBeanSwingJInternalFrame.empleadoprocesorubros.addAll(this.jInternalFrameDetalleFormEstructura.empleadoprocesorubroBeanSwingJInternalFrame.empleadoprocesorubrosEliminados);
							this.jInternalFrameDetalleFormEstructura.empleadopagorubroBeanSwingJInternalFrame.empleadopagorubros.addAll(this.jInternalFrameDetalleFormEstructura.empleadopagorubroBeanSwingJInternalFrame.empleadopagorubrosEliminados);
							this.jInternalFrameDetalleFormEstructura.provisionempleadoBeanSwingJInternalFrame.provisionempleados.addAll(this.jInternalFrameDetalleFormEstructura.provisionempleadoBeanSwingJInternalFrame.provisionempleadosEliminados);
							this.jInternalFrameDetalleFormEstructura.empleadoBeanSwingJInternalFrame.empleados.addAll(this.jInternalFrameDetalleFormEstructura.empleadoBeanSwingJInternalFrame.empleadosEliminados);
							this.jInternalFrameDetalleFormEstructura.estructuraBeanSwingJInternalFrame.estructuras.addAll(this.jInternalFrameDetalleFormEstructura.estructuraBeanSwingJInternalFrame.estructurasEliminados);
							this.jInternalFrameDetalleFormEstructura.evaluacionempleadoBeanSwingJInternalFrame.evaluacionempleados.addAll(this.jInternalFrameDetalleFormEstructura.evaluacionempleadoBeanSwingJInternalFrame.evaluacionempleadosEliminados);
							this.jInternalFrameDetalleFormEstructura.empleadoimpuestorentaBeanSwingJInternalFrame.empleadoimpuestorentas.addAll(this.jInternalFrameDetalleFormEstructura.empleadoimpuestorentaBeanSwingJInternalFrame.empleadoimpuestorentasEliminados);
							this.jInternalFrameDetalleFormEstructura.rubroestructuraBeanSwingJInternalFrame.rubroestructuras.addAll(this.jInternalFrameDetalleFormEstructura.rubroestructuraBeanSwingJInternalFrame.rubroestructurasEliminados);
							this.jInternalFrameDetalleFormEstructura.cierrerolmensualBeanSwingJInternalFrame.cierrerolmensuals.addAll(this.jInternalFrameDetalleFormEstructura.cierrerolmensualBeanSwingJInternalFrame.cierrerolmensualsEliminados);
							this.jInternalFrameDetalleFormEstructura.formatonomiBeanSwingJInternalFrame.formatonomis.addAll(this.jInternalFrameDetalleFormEstructura.formatonomiBeanSwingJInternalFrame.formatonomisEliminados);
							this.jInternalFrameDetalleFormEstructura.empleadoestructuraBeanSwingJInternalFrame.empleadoestructuras.addAll(this.jInternalFrameDetalleFormEstructura.empleadoestructuraBeanSwingJInternalFrame.empleadoestructurasEliminados);
							this.jInternalFrameDetalleFormEstructura.historialpagonomiBeanSwingJInternalFrame.historialpagonomis.addAll(this.jInternalFrameDetalleFormEstructura.historialpagonomiBeanSwingJInternalFrame.historialpagonomisEliminados);
							this.jInternalFrameDetalleFormEstructura.asistenciadiariaBeanSwingJInternalFrame.asistenciadiarias.addAll(this.jInternalFrameDetalleFormEstructura.asistenciadiariaBeanSwingJInternalFrame.asistenciadiariasEliminados);
							this.jInternalFrameDetalleFormEstructura.funcionestrucBeanSwingJInternalFrame.funcionestrucs.addAll(this.jInternalFrameDetalleFormEstructura.funcionestrucBeanSwingJInternalFrame.funcionestrucsEliminados);
							this.jInternalFrameDetalleFormEstructura.solicitudreemplazoBeanSwingJInternalFrame.solicitudreemplazos.addAll(this.jInternalFrameDetalleFormEstructura.solicitudreemplazoBeanSwingJInternalFrame.solicitudreemplazosEliminados);
							this.jInternalFrameDetalleFormEstructura.solicitudhoraextraBeanSwingJInternalFrame.solicitudhoraextras.addAll(this.jInternalFrameDetalleFormEstructura.solicitudhoraextraBeanSwingJInternalFrame.solicitudhoraextrasEliminados);
							this.jInternalFrameDetalleFormEstructura.evaluacionnomiBeanSwingJInternalFrame.evaluacionnomis.addAll(this.jInternalFrameDetalleFormEstructura.evaluacionnomiBeanSwingJInternalFrame.evaluacionnomisEliminados);
							this.jInternalFrameDetalleFormEstructura.solicitudvacacionBeanSwingJInternalFrame.solicitudvacacions.addAll(this.jInternalFrameDetalleFormEstructura.solicitudvacacionBeanSwingJInternalFrame.solicitudvacacionsEliminados);
							this.jInternalFrameDetalleFormEstructura.responsableactivofijoBeanSwingJInternalFrame.responsableactivofijos.addAll(this.jInternalFrameDetalleFormEstructura.responsableactivofijoBeanSwingJInternalFrame.responsableactivofijosEliminados);
							this.jInternalFrameDetalleFormEstructura.rubroempleacuentacontableBeanSwingJInternalFrame.rubroempleacuentacontables.addAll(this.jInternalFrameDetalleFormEstructura.rubroempleacuentacontableBeanSwingJInternalFrame.rubroempleacuentacontablesEliminados);
						}
						//ARCHITECTURE	
						
						if(!this.estructuraSessionBean.getEsGuardarRelacionado()) {
							//QUITAR FILA TOTAL
							//ARCHITECTURE
							if(Constantes.ISUSAEJBLOGICLAYER) {
							
								if(this.jInternalFrameDetalleFormEstructura.centrocostoestructuraBeanSwingJInternalFrame!=null && this.jInternalFrameDetalleFormEstructura.centrocostoestructuraBeanSwingJInternalFrame.conTotales) {/*this.jInternalFrameDetalleFormEstructura.centrocostoestructuraBeanSwingJInternalFrame.quitarFilaTotales();*/}
								if(this.jInternalFrameDetalleFormEstructura.planivacacionBeanSwingJInternalFrame!=null && this.jInternalFrameDetalleFormEstructura.planivacacionBeanSwingJInternalFrame.conTotales) {/*this.jInternalFrameDetalleFormEstructura.planivacacionBeanSwingJInternalFrame.quitarFilaTotales();*/}
								if(this.jInternalFrameDetalleFormEstructura.asistenciamensualBeanSwingJInternalFrame!=null && this.jInternalFrameDetalleFormEstructura.asistenciamensualBeanSwingJInternalFrame.conTotales) {/*this.jInternalFrameDetalleFormEstructura.asistenciamensualBeanSwingJInternalFrame.quitarFilaTotales();*/}
								if(this.jInternalFrameDetalleFormEstructura.empleadoprocesorubroBeanSwingJInternalFrame!=null && this.jInternalFrameDetalleFormEstructura.empleadoprocesorubroBeanSwingJInternalFrame.conTotales) {/*this.jInternalFrameDetalleFormEstructura.empleadoprocesorubroBeanSwingJInternalFrame.quitarFilaTotales();*/}
								if(this.jInternalFrameDetalleFormEstructura.empleadopagorubroBeanSwingJInternalFrame!=null && this.jInternalFrameDetalleFormEstructura.empleadopagorubroBeanSwingJInternalFrame.conTotales) {/*this.jInternalFrameDetalleFormEstructura.empleadopagorubroBeanSwingJInternalFrame.quitarFilaTotales();*/}
								if(this.jInternalFrameDetalleFormEstructura.provisionempleadoBeanSwingJInternalFrame!=null && this.jInternalFrameDetalleFormEstructura.provisionempleadoBeanSwingJInternalFrame.conTotales) {/*this.jInternalFrameDetalleFormEstructura.provisionempleadoBeanSwingJInternalFrame.quitarFilaTotales();*/}
								if(this.jInternalFrameDetalleFormEstructura.empleadoBeanSwingJInternalFrame!=null && this.jInternalFrameDetalleFormEstructura.empleadoBeanSwingJInternalFrame.conTotales) {/*this.jInternalFrameDetalleFormEstructura.empleadoBeanSwingJInternalFrame.quitarFilaTotales();*/}
								if(this.jInternalFrameDetalleFormEstructura.estructuraBeanSwingJInternalFrame!=null && this.jInternalFrameDetalleFormEstructura.estructuraBeanSwingJInternalFrame.conTotales) {/*this.jInternalFrameDetalleFormEstructura.estructuraBeanSwingJInternalFrame.quitarFilaTotales();*/}
								if(this.jInternalFrameDetalleFormEstructura.evaluacionempleadoBeanSwingJInternalFrame!=null && this.jInternalFrameDetalleFormEstructura.evaluacionempleadoBeanSwingJInternalFrame.conTotales) {/*this.jInternalFrameDetalleFormEstructura.evaluacionempleadoBeanSwingJInternalFrame.quitarFilaTotales();*/}
									if(this.jInternalFrameDetalleFormEstructura.evaluacionempleadoBeanSwingJInternalFrame.jInternalFrameDetalleFormEvaluacionEmpleado.calificacionempleadoBeanSwingJInternalFrame!=null && this.jInternalFrameDetalleFormEstructura.evaluacionempleadoBeanSwingJInternalFrame.jInternalFrameDetalleFormEvaluacionEmpleado.calificacionempleadoBeanSwingJInternalFrame.conTotales) {/*this.jInternalFrameDetalleFormEstructura.evaluacionempleadoBeanSwingJInternalFrame.jInternalFrameDetalleFormEvaluacionEmpleado.calificacionempleadoBeanSwingJInternalFrame.quitarFilaTotales();*/}
								if(this.jInternalFrameDetalleFormEstructura.empleadoimpuestorentaBeanSwingJInternalFrame!=null && this.jInternalFrameDetalleFormEstructura.empleadoimpuestorentaBeanSwingJInternalFrame.conTotales) {/*this.jInternalFrameDetalleFormEstructura.empleadoimpuestorentaBeanSwingJInternalFrame.quitarFilaTotales();*/}
								if(this.jInternalFrameDetalleFormEstructura.rubroestructuraBeanSwingJInternalFrame!=null && this.jInternalFrameDetalleFormEstructura.rubroestructuraBeanSwingJInternalFrame.conTotales) {/*this.jInternalFrameDetalleFormEstructura.rubroestructuraBeanSwingJInternalFrame.quitarFilaTotales();*/}
								if(this.jInternalFrameDetalleFormEstructura.cierrerolmensualBeanSwingJInternalFrame!=null && this.jInternalFrameDetalleFormEstructura.cierrerolmensualBeanSwingJInternalFrame.conTotales) {/*this.jInternalFrameDetalleFormEstructura.cierrerolmensualBeanSwingJInternalFrame.quitarFilaTotales();*/}
								if(this.jInternalFrameDetalleFormEstructura.formatonomiBeanSwingJInternalFrame!=null && this.jInternalFrameDetalleFormEstructura.formatonomiBeanSwingJInternalFrame.conTotales) {/*this.jInternalFrameDetalleFormEstructura.formatonomiBeanSwingJInternalFrame.quitarFilaTotales();*/}
									if(this.jInternalFrameDetalleFormEstructura.formatonomiBeanSwingJInternalFrame.jInternalFrameDetalleFormFormatoNomi.formatonomipreguntanomiBeanSwingJInternalFrame!=null && this.jInternalFrameDetalleFormEstructura.formatonomiBeanSwingJInternalFrame.jInternalFrameDetalleFormFormatoNomi.formatonomipreguntanomiBeanSwingJInternalFrame.conTotales) {/*this.jInternalFrameDetalleFormEstructura.formatonomiBeanSwingJInternalFrame.jInternalFrameDetalleFormFormatoNomi.formatonomipreguntanomiBeanSwingJInternalFrame.quitarFilaTotales();*/}
									if(this.jInternalFrameDetalleFormEstructura.formatonomiBeanSwingJInternalFrame.jInternalFrameDetalleFormFormatoNomi.formatonomipreguntanomiBeanSwingJInternalFrame.jInternalFrameDetalleFormFormatoNomiPreguntaNomi.calificacionempleadoBeanSwingJInternalFrame!=null && this.jInternalFrameDetalleFormEstructura.formatonomiBeanSwingJInternalFrame.jInternalFrameDetalleFormFormatoNomi.formatonomipreguntanomiBeanSwingJInternalFrame.jInternalFrameDetalleFormFormatoNomiPreguntaNomi.calificacionempleadoBeanSwingJInternalFrame.conTotales) {/*this.jInternalFrameDetalleFormEstructura.formatonomiBeanSwingJInternalFrame.jInternalFrameDetalleFormFormatoNomi.formatonomipreguntanomiBeanSwingJInternalFrame.jInternalFrameDetalleFormFormatoNomiPreguntaNomi.calificacionempleadoBeanSwingJInternalFrame.quitarFilaTotales();*/}
									if(this.jInternalFrameDetalleFormEstructura.formatonomiBeanSwingJInternalFrame.jInternalFrameDetalleFormFormatoNomi.formatonomifactornomiBeanSwingJInternalFrame!=null && this.jInternalFrameDetalleFormEstructura.formatonomiBeanSwingJInternalFrame.jInternalFrameDetalleFormFormatoNomi.formatonomifactornomiBeanSwingJInternalFrame.conTotales) {/*this.jInternalFrameDetalleFormEstructura.formatonomiBeanSwingJInternalFrame.jInternalFrameDetalleFormFormatoNomi.formatonomifactornomiBeanSwingJInternalFrame.quitarFilaTotales();*/}
									if(this.jInternalFrameDetalleFormEstructura.formatonomiBeanSwingJInternalFrame.jInternalFrameDetalleFormFormatoNomi.formatonomifactornomiBeanSwingJInternalFrame.jInternalFrameDetalleFormFormatoNomiFactorNomi.calificacionempleadoBeanSwingJInternalFrame!=null && this.jInternalFrameDetalleFormEstructura.formatonomiBeanSwingJInternalFrame.jInternalFrameDetalleFormFormatoNomi.formatonomifactornomiBeanSwingJInternalFrame.jInternalFrameDetalleFormFormatoNomiFactorNomi.calificacionempleadoBeanSwingJInternalFrame.conTotales) {/*this.jInternalFrameDetalleFormEstructura.formatonomiBeanSwingJInternalFrame.jInternalFrameDetalleFormFormatoNomi.formatonomifactornomiBeanSwingJInternalFrame.jInternalFrameDetalleFormFormatoNomiFactorNomi.calificacionempleadoBeanSwingJInternalFrame.quitarFilaTotales();*/}
									if(this.jInternalFrameDetalleFormEstructura.formatonomiBeanSwingJInternalFrame.jInternalFrameDetalleFormFormatoNomi.evaluacionnomiBeanSwingJInternalFrame!=null && this.jInternalFrameDetalleFormEstructura.formatonomiBeanSwingJInternalFrame.jInternalFrameDetalleFormFormatoNomi.evaluacionnomiBeanSwingJInternalFrame.conTotales) {/*this.jInternalFrameDetalleFormEstructura.formatonomiBeanSwingJInternalFrame.jInternalFrameDetalleFormFormatoNomi.evaluacionnomiBeanSwingJInternalFrame.quitarFilaTotales();*/}
									if(this.jInternalFrameDetalleFormEstructura.formatonomiBeanSwingJInternalFrame.jInternalFrameDetalleFormFormatoNomi.evaluacionnomiBeanSwingJInternalFrame.jInternalFrameDetalleFormEvaluacionNomi.detalleevaluacionnomiBeanSwingJInternalFrame!=null && this.jInternalFrameDetalleFormEstructura.formatonomiBeanSwingJInternalFrame.jInternalFrameDetalleFormFormatoNomi.evaluacionnomiBeanSwingJInternalFrame.jInternalFrameDetalleFormEvaluacionNomi.detalleevaluacionnomiBeanSwingJInternalFrame.conTotales) {/*this.jInternalFrameDetalleFormEstructura.formatonomiBeanSwingJInternalFrame.jInternalFrameDetalleFormFormatoNomi.evaluacionnomiBeanSwingJInternalFrame.jInternalFrameDetalleFormEvaluacionNomi.detalleevaluacionnomiBeanSwingJInternalFrame.quitarFilaTotales();*/}
									if(this.jInternalFrameDetalleFormEstructura.formatonomiBeanSwingJInternalFrame.jInternalFrameDetalleFormFormatoNomi.detalleevaluacionnomiBeanSwingJInternalFrame!=null && this.jInternalFrameDetalleFormEstructura.formatonomiBeanSwingJInternalFrame.jInternalFrameDetalleFormFormatoNomi.detalleevaluacionnomiBeanSwingJInternalFrame.conTotales) {/*this.jInternalFrameDetalleFormEstructura.formatonomiBeanSwingJInternalFrame.jInternalFrameDetalleFormFormatoNomi.detalleevaluacionnomiBeanSwingJInternalFrame.quitarFilaTotales();*/}
								if(this.jInternalFrameDetalleFormEstructura.empleadoestructuraBeanSwingJInternalFrame!=null && this.jInternalFrameDetalleFormEstructura.empleadoestructuraBeanSwingJInternalFrame.conTotales) {/*this.jInternalFrameDetalleFormEstructura.empleadoestructuraBeanSwingJInternalFrame.quitarFilaTotales();*/}
								if(this.jInternalFrameDetalleFormEstructura.historialpagonomiBeanSwingJInternalFrame!=null && this.jInternalFrameDetalleFormEstructura.historialpagonomiBeanSwingJInternalFrame.conTotales) {/*this.jInternalFrameDetalleFormEstructura.historialpagonomiBeanSwingJInternalFrame.quitarFilaTotales();*/}
								if(this.jInternalFrameDetalleFormEstructura.asistenciadiariaBeanSwingJInternalFrame!=null && this.jInternalFrameDetalleFormEstructura.asistenciadiariaBeanSwingJInternalFrame.conTotales) {/*this.jInternalFrameDetalleFormEstructura.asistenciadiariaBeanSwingJInternalFrame.quitarFilaTotales();*/}
								if(this.jInternalFrameDetalleFormEstructura.funcionestrucBeanSwingJInternalFrame!=null && this.jInternalFrameDetalleFormEstructura.funcionestrucBeanSwingJInternalFrame.conTotales) {/*this.jInternalFrameDetalleFormEstructura.funcionestrucBeanSwingJInternalFrame.quitarFilaTotales();*/}
								if(this.jInternalFrameDetalleFormEstructura.solicitudreemplazoBeanSwingJInternalFrame!=null && this.jInternalFrameDetalleFormEstructura.solicitudreemplazoBeanSwingJInternalFrame.conTotales) {/*this.jInternalFrameDetalleFormEstructura.solicitudreemplazoBeanSwingJInternalFrame.quitarFilaTotales();*/}
								if(this.jInternalFrameDetalleFormEstructura.solicitudhoraextraBeanSwingJInternalFrame!=null && this.jInternalFrameDetalleFormEstructura.solicitudhoraextraBeanSwingJInternalFrame.conTotales) {/*this.jInternalFrameDetalleFormEstructura.solicitudhoraextraBeanSwingJInternalFrame.quitarFilaTotales();*/}
								if(this.jInternalFrameDetalleFormEstructura.evaluacionnomiBeanSwingJInternalFrame!=null && this.jInternalFrameDetalleFormEstructura.evaluacionnomiBeanSwingJInternalFrame.conTotales) {/*this.jInternalFrameDetalleFormEstructura.evaluacionnomiBeanSwingJInternalFrame.quitarFilaTotales();*/}
									if(this.jInternalFrameDetalleFormEstructura.evaluacionnomiBeanSwingJInternalFrame.jInternalFrameDetalleFormEvaluacionNomi.detalleevaluacionnomiBeanSwingJInternalFrame!=null && this.jInternalFrameDetalleFormEstructura.evaluacionnomiBeanSwingJInternalFrame.jInternalFrameDetalleFormEvaluacionNomi.detalleevaluacionnomiBeanSwingJInternalFrame.conTotales) {/*this.jInternalFrameDetalleFormEstructura.evaluacionnomiBeanSwingJInternalFrame.jInternalFrameDetalleFormEvaluacionNomi.detalleevaluacionnomiBeanSwingJInternalFrame.quitarFilaTotales();*/}
								if(this.jInternalFrameDetalleFormEstructura.solicitudvacacionBeanSwingJInternalFrame!=null && this.jInternalFrameDetalleFormEstructura.solicitudvacacionBeanSwingJInternalFrame.conTotales) {/*this.jInternalFrameDetalleFormEstructura.solicitudvacacionBeanSwingJInternalFrame.quitarFilaTotales();*/}
								if(this.jInternalFrameDetalleFormEstructura.responsableactivofijoBeanSwingJInternalFrame!=null && this.jInternalFrameDetalleFormEstructura.responsableactivofijoBeanSwingJInternalFrame.conTotales) {/*this.jInternalFrameDetalleFormEstructura.responsableactivofijoBeanSwingJInternalFrame.quitarFilaTotales();*/}
								if(this.jInternalFrameDetalleFormEstructura.rubroempleacuentacontableBeanSwingJInternalFrame!=null && this.jInternalFrameDetalleFormEstructura.rubroempleacuentacontableBeanSwingJInternalFrame.conTotales) {/*this.jInternalFrameDetalleFormEstructura.rubroempleacuentacontableBeanSwingJInternalFrame.quitarFilaTotales();*/}
							} else if(Constantes.ISUSAEJBREMOTE ||Constantes.ISUSAEJBHOME) {
							
								if(this.jInternalFrameDetalleFormEstructura.centrocostoestructuraBeanSwingJInternalFrame!=null && this.jInternalFrameDetalleFormEstructura.centrocostoestructuraBeanSwingJInternalFrame.conTotales) {/*this.jInternalFrameDetalleFormEstructura.centrocostoestructuraBeanSwingJInternalFrame.quitarFilaTotales();*/}
								if(this.jInternalFrameDetalleFormEstructura.planivacacionBeanSwingJInternalFrame!=null && this.jInternalFrameDetalleFormEstructura.planivacacionBeanSwingJInternalFrame.conTotales) {/*this.jInternalFrameDetalleFormEstructura.planivacacionBeanSwingJInternalFrame.quitarFilaTotales();*/}
								if(this.jInternalFrameDetalleFormEstructura.asistenciamensualBeanSwingJInternalFrame!=null && this.jInternalFrameDetalleFormEstructura.asistenciamensualBeanSwingJInternalFrame.conTotales) {/*this.jInternalFrameDetalleFormEstructura.asistenciamensualBeanSwingJInternalFrame.quitarFilaTotales();*/}
								if(this.jInternalFrameDetalleFormEstructura.empleadoprocesorubroBeanSwingJInternalFrame!=null && this.jInternalFrameDetalleFormEstructura.empleadoprocesorubroBeanSwingJInternalFrame.conTotales) {/*this.jInternalFrameDetalleFormEstructura.empleadoprocesorubroBeanSwingJInternalFrame.quitarFilaTotales();*/}
								if(this.jInternalFrameDetalleFormEstructura.empleadopagorubroBeanSwingJInternalFrame!=null && this.jInternalFrameDetalleFormEstructura.empleadopagorubroBeanSwingJInternalFrame.conTotales) {/*this.jInternalFrameDetalleFormEstructura.empleadopagorubroBeanSwingJInternalFrame.quitarFilaTotales();*/}
								if(this.jInternalFrameDetalleFormEstructura.provisionempleadoBeanSwingJInternalFrame!=null && this.jInternalFrameDetalleFormEstructura.provisionempleadoBeanSwingJInternalFrame.conTotales) {/*this.jInternalFrameDetalleFormEstructura.provisionempleadoBeanSwingJInternalFrame.quitarFilaTotales();*/}
								if(this.jInternalFrameDetalleFormEstructura.empleadoBeanSwingJInternalFrame!=null && this.jInternalFrameDetalleFormEstructura.empleadoBeanSwingJInternalFrame.conTotales) {/*this.jInternalFrameDetalleFormEstructura.empleadoBeanSwingJInternalFrame.quitarFilaTotales();*/}
								if(this.jInternalFrameDetalleFormEstructura.estructuraBeanSwingJInternalFrame!=null && this.jInternalFrameDetalleFormEstructura.estructuraBeanSwingJInternalFrame.conTotales) {/*this.jInternalFrameDetalleFormEstructura.estructuraBeanSwingJInternalFrame.quitarFilaTotales();*/}
								if(this.jInternalFrameDetalleFormEstructura.evaluacionempleadoBeanSwingJInternalFrame!=null && this.jInternalFrameDetalleFormEstructura.evaluacionempleadoBeanSwingJInternalFrame.conTotales) {/*this.jInternalFrameDetalleFormEstructura.evaluacionempleadoBeanSwingJInternalFrame.quitarFilaTotales();*/}
									if(this.jInternalFrameDetalleFormEstructura.evaluacionempleadoBeanSwingJInternalFrame.jInternalFrameDetalleFormEvaluacionEmpleado.calificacionempleadoBeanSwingJInternalFrame!=null && this.jInternalFrameDetalleFormEstructura.evaluacionempleadoBeanSwingJInternalFrame.jInternalFrameDetalleFormEvaluacionEmpleado.calificacionempleadoBeanSwingJInternalFrame.conTotales) {/*this.jInternalFrameDetalleFormEstructura.evaluacionempleadoBeanSwingJInternalFrame.jInternalFrameDetalleFormEvaluacionEmpleado.calificacionempleadoBeanSwingJInternalFrame.quitarFilaTotales();*/}
								if(this.jInternalFrameDetalleFormEstructura.empleadoimpuestorentaBeanSwingJInternalFrame!=null && this.jInternalFrameDetalleFormEstructura.empleadoimpuestorentaBeanSwingJInternalFrame.conTotales) {/*this.jInternalFrameDetalleFormEstructura.empleadoimpuestorentaBeanSwingJInternalFrame.quitarFilaTotales();*/}
								if(this.jInternalFrameDetalleFormEstructura.rubroestructuraBeanSwingJInternalFrame!=null && this.jInternalFrameDetalleFormEstructura.rubroestructuraBeanSwingJInternalFrame.conTotales) {/*this.jInternalFrameDetalleFormEstructura.rubroestructuraBeanSwingJInternalFrame.quitarFilaTotales();*/}
								if(this.jInternalFrameDetalleFormEstructura.cierrerolmensualBeanSwingJInternalFrame!=null && this.jInternalFrameDetalleFormEstructura.cierrerolmensualBeanSwingJInternalFrame.conTotales) {/*this.jInternalFrameDetalleFormEstructura.cierrerolmensualBeanSwingJInternalFrame.quitarFilaTotales();*/}
								if(this.jInternalFrameDetalleFormEstructura.formatonomiBeanSwingJInternalFrame!=null && this.jInternalFrameDetalleFormEstructura.formatonomiBeanSwingJInternalFrame.conTotales) {/*this.jInternalFrameDetalleFormEstructura.formatonomiBeanSwingJInternalFrame.quitarFilaTotales();*/}
									if(this.jInternalFrameDetalleFormEstructura.formatonomiBeanSwingJInternalFrame.jInternalFrameDetalleFormFormatoNomi.formatonomipreguntanomiBeanSwingJInternalFrame!=null && this.jInternalFrameDetalleFormEstructura.formatonomiBeanSwingJInternalFrame.jInternalFrameDetalleFormFormatoNomi.formatonomipreguntanomiBeanSwingJInternalFrame.conTotales) {/*this.jInternalFrameDetalleFormEstructura.formatonomiBeanSwingJInternalFrame.jInternalFrameDetalleFormFormatoNomi.formatonomipreguntanomiBeanSwingJInternalFrame.quitarFilaTotales();*/}
									if(this.jInternalFrameDetalleFormEstructura.formatonomiBeanSwingJInternalFrame.jInternalFrameDetalleFormFormatoNomi.formatonomipreguntanomiBeanSwingJInternalFrame.jInternalFrameDetalleFormFormatoNomiPreguntaNomi.calificacionempleadoBeanSwingJInternalFrame!=null && this.jInternalFrameDetalleFormEstructura.formatonomiBeanSwingJInternalFrame.jInternalFrameDetalleFormFormatoNomi.formatonomipreguntanomiBeanSwingJInternalFrame.jInternalFrameDetalleFormFormatoNomiPreguntaNomi.calificacionempleadoBeanSwingJInternalFrame.conTotales) {/*this.jInternalFrameDetalleFormEstructura.formatonomiBeanSwingJInternalFrame.jInternalFrameDetalleFormFormatoNomi.formatonomipreguntanomiBeanSwingJInternalFrame.jInternalFrameDetalleFormFormatoNomiPreguntaNomi.calificacionempleadoBeanSwingJInternalFrame.quitarFilaTotales();*/}
									if(this.jInternalFrameDetalleFormEstructura.formatonomiBeanSwingJInternalFrame.jInternalFrameDetalleFormFormatoNomi.formatonomifactornomiBeanSwingJInternalFrame!=null && this.jInternalFrameDetalleFormEstructura.formatonomiBeanSwingJInternalFrame.jInternalFrameDetalleFormFormatoNomi.formatonomifactornomiBeanSwingJInternalFrame.conTotales) {/*this.jInternalFrameDetalleFormEstructura.formatonomiBeanSwingJInternalFrame.jInternalFrameDetalleFormFormatoNomi.formatonomifactornomiBeanSwingJInternalFrame.quitarFilaTotales();*/}
									if(this.jInternalFrameDetalleFormEstructura.formatonomiBeanSwingJInternalFrame.jInternalFrameDetalleFormFormatoNomi.formatonomifactornomiBeanSwingJInternalFrame.jInternalFrameDetalleFormFormatoNomiFactorNomi.calificacionempleadoBeanSwingJInternalFrame!=null && this.jInternalFrameDetalleFormEstructura.formatonomiBeanSwingJInternalFrame.jInternalFrameDetalleFormFormatoNomi.formatonomifactornomiBeanSwingJInternalFrame.jInternalFrameDetalleFormFormatoNomiFactorNomi.calificacionempleadoBeanSwingJInternalFrame.conTotales) {/*this.jInternalFrameDetalleFormEstructura.formatonomiBeanSwingJInternalFrame.jInternalFrameDetalleFormFormatoNomi.formatonomifactornomiBeanSwingJInternalFrame.jInternalFrameDetalleFormFormatoNomiFactorNomi.calificacionempleadoBeanSwingJInternalFrame.quitarFilaTotales();*/}
									if(this.jInternalFrameDetalleFormEstructura.formatonomiBeanSwingJInternalFrame.jInternalFrameDetalleFormFormatoNomi.evaluacionnomiBeanSwingJInternalFrame!=null && this.jInternalFrameDetalleFormEstructura.formatonomiBeanSwingJInternalFrame.jInternalFrameDetalleFormFormatoNomi.evaluacionnomiBeanSwingJInternalFrame.conTotales) {/*this.jInternalFrameDetalleFormEstructura.formatonomiBeanSwingJInternalFrame.jInternalFrameDetalleFormFormatoNomi.evaluacionnomiBeanSwingJInternalFrame.quitarFilaTotales();*/}
									if(this.jInternalFrameDetalleFormEstructura.formatonomiBeanSwingJInternalFrame.jInternalFrameDetalleFormFormatoNomi.evaluacionnomiBeanSwingJInternalFrame.jInternalFrameDetalleFormEvaluacionNomi.detalleevaluacionnomiBeanSwingJInternalFrame!=null && this.jInternalFrameDetalleFormEstructura.formatonomiBeanSwingJInternalFrame.jInternalFrameDetalleFormFormatoNomi.evaluacionnomiBeanSwingJInternalFrame.jInternalFrameDetalleFormEvaluacionNomi.detalleevaluacionnomiBeanSwingJInternalFrame.conTotales) {/*this.jInternalFrameDetalleFormEstructura.formatonomiBeanSwingJInternalFrame.jInternalFrameDetalleFormFormatoNomi.evaluacionnomiBeanSwingJInternalFrame.jInternalFrameDetalleFormEvaluacionNomi.detalleevaluacionnomiBeanSwingJInternalFrame.quitarFilaTotales();*/}
									if(this.jInternalFrameDetalleFormEstructura.formatonomiBeanSwingJInternalFrame.jInternalFrameDetalleFormFormatoNomi.detalleevaluacionnomiBeanSwingJInternalFrame!=null && this.jInternalFrameDetalleFormEstructura.formatonomiBeanSwingJInternalFrame.jInternalFrameDetalleFormFormatoNomi.detalleevaluacionnomiBeanSwingJInternalFrame.conTotales) {/*this.jInternalFrameDetalleFormEstructura.formatonomiBeanSwingJInternalFrame.jInternalFrameDetalleFormFormatoNomi.detalleevaluacionnomiBeanSwingJInternalFrame.quitarFilaTotales();*/}
								if(this.jInternalFrameDetalleFormEstructura.empleadoestructuraBeanSwingJInternalFrame!=null && this.jInternalFrameDetalleFormEstructura.empleadoestructuraBeanSwingJInternalFrame.conTotales) {/*this.jInternalFrameDetalleFormEstructura.empleadoestructuraBeanSwingJInternalFrame.quitarFilaTotales();*/}
								if(this.jInternalFrameDetalleFormEstructura.historialpagonomiBeanSwingJInternalFrame!=null && this.jInternalFrameDetalleFormEstructura.historialpagonomiBeanSwingJInternalFrame.conTotales) {/*this.jInternalFrameDetalleFormEstructura.historialpagonomiBeanSwingJInternalFrame.quitarFilaTotales();*/}
								if(this.jInternalFrameDetalleFormEstructura.asistenciadiariaBeanSwingJInternalFrame!=null && this.jInternalFrameDetalleFormEstructura.asistenciadiariaBeanSwingJInternalFrame.conTotales) {/*this.jInternalFrameDetalleFormEstructura.asistenciadiariaBeanSwingJInternalFrame.quitarFilaTotales();*/}
								if(this.jInternalFrameDetalleFormEstructura.funcionestrucBeanSwingJInternalFrame!=null && this.jInternalFrameDetalleFormEstructura.funcionestrucBeanSwingJInternalFrame.conTotales) {/*this.jInternalFrameDetalleFormEstructura.funcionestrucBeanSwingJInternalFrame.quitarFilaTotales();*/}
								if(this.jInternalFrameDetalleFormEstructura.solicitudreemplazoBeanSwingJInternalFrame!=null && this.jInternalFrameDetalleFormEstructura.solicitudreemplazoBeanSwingJInternalFrame.conTotales) {/*this.jInternalFrameDetalleFormEstructura.solicitudreemplazoBeanSwingJInternalFrame.quitarFilaTotales();*/}
								if(this.jInternalFrameDetalleFormEstructura.solicitudhoraextraBeanSwingJInternalFrame!=null && this.jInternalFrameDetalleFormEstructura.solicitudhoraextraBeanSwingJInternalFrame.conTotales) {/*this.jInternalFrameDetalleFormEstructura.solicitudhoraextraBeanSwingJInternalFrame.quitarFilaTotales();*/}
								if(this.jInternalFrameDetalleFormEstructura.evaluacionnomiBeanSwingJInternalFrame!=null && this.jInternalFrameDetalleFormEstructura.evaluacionnomiBeanSwingJInternalFrame.conTotales) {/*this.jInternalFrameDetalleFormEstructura.evaluacionnomiBeanSwingJInternalFrame.quitarFilaTotales();*/}
									if(this.jInternalFrameDetalleFormEstructura.evaluacionnomiBeanSwingJInternalFrame.jInternalFrameDetalleFormEvaluacionNomi.detalleevaluacionnomiBeanSwingJInternalFrame!=null && this.jInternalFrameDetalleFormEstructura.evaluacionnomiBeanSwingJInternalFrame.jInternalFrameDetalleFormEvaluacionNomi.detalleevaluacionnomiBeanSwingJInternalFrame.conTotales) {/*this.jInternalFrameDetalleFormEstructura.evaluacionnomiBeanSwingJInternalFrame.jInternalFrameDetalleFormEvaluacionNomi.detalleevaluacionnomiBeanSwingJInternalFrame.quitarFilaTotales();*/}
								if(this.jInternalFrameDetalleFormEstructura.solicitudvacacionBeanSwingJInternalFrame!=null && this.jInternalFrameDetalleFormEstructura.solicitudvacacionBeanSwingJInternalFrame.conTotales) {/*this.jInternalFrameDetalleFormEstructura.solicitudvacacionBeanSwingJInternalFrame.quitarFilaTotales();*/}
								if(this.jInternalFrameDetalleFormEstructura.responsableactivofijoBeanSwingJInternalFrame!=null && this.jInternalFrameDetalleFormEstructura.responsableactivofijoBeanSwingJInternalFrame.conTotales) {/*this.jInternalFrameDetalleFormEstructura.responsableactivofijoBeanSwingJInternalFrame.quitarFilaTotales();*/}
								if(this.jInternalFrameDetalleFormEstructura.rubroempleacuentacontableBeanSwingJInternalFrame!=null && this.jInternalFrameDetalleFormEstructura.rubroempleacuentacontableBeanSwingJInternalFrame.conTotales) {/*this.jInternalFrameDetalleFormEstructura.rubroempleacuentacontableBeanSwingJInternalFrame.quitarFilaTotales();*/}	
							}
							//ARCHITECTURE
												
							//ARCHITECTURE
							if(Constantes.ISUSAEJBLOGICLAYER) {
								estructuraLogic.saveEstructuraRelaciones(estructuraAux,this.jInternalFrameDetalleFormEstructura.centrocostoestructuraBeanSwingJInternalFrame.centrocostoestructuraLogic.getCentroCostoEstructuras(),this.jInternalFrameDetalleFormEstructura.planivacacionBeanSwingJInternalFrame.planivacacionLogic.getPlaniVacacions(),this.jInternalFrameDetalleFormEstructura.asistenciamensualBeanSwingJInternalFrame.asistenciamensualLogic.getAsistenciaMensuals(),this.jInternalFrameDetalleFormEstructura.empleadoprocesorubroBeanSwingJInternalFrame.empleadoprocesorubroLogic.getEmpleadoProcesoRubros(),this.jInternalFrameDetalleFormEstructura.empleadopagorubroBeanSwingJInternalFrame.empleadopagorubroLogic.getEmpleadoPagoRubros(),this.jInternalFrameDetalleFormEstructura.provisionempleadoBeanSwingJInternalFrame.provisionempleadoLogic.getProvisionEmpleados(),this.jInternalFrameDetalleFormEstructura.empleadoBeanSwingJInternalFrame.empleadoLogic.getEmpleados(),this.jInternalFrameDetalleFormEstructura.estructuraBeanSwingJInternalFrame.estructuraLogic.getEstructuras(),this.jInternalFrameDetalleFormEstructura.evaluacionempleadoBeanSwingJInternalFrame.evaluacionempleadoLogic.getEvaluacionEmpleados(),this.jInternalFrameDetalleFormEstructura.empleadoimpuestorentaBeanSwingJInternalFrame.empleadoimpuestorentaLogic.getEmpleadoImpuestoRentas(),this.jInternalFrameDetalleFormEstructura.rubroestructuraBeanSwingJInternalFrame.rubroestructuraLogic.getRubroEstructuras(),this.jInternalFrameDetalleFormEstructura.cierrerolmensualBeanSwingJInternalFrame.cierrerolmensualLogic.getCierreRolMensuals(),this.jInternalFrameDetalleFormEstructura.formatonomiBeanSwingJInternalFrame.formatonomiLogic.getFormatoNomis(),this.jInternalFrameDetalleFormEstructura.empleadoestructuraBeanSwingJInternalFrame.empleadoestructuraLogic.getEmpleadoEstructuras(),this.jInternalFrameDetalleFormEstructura.historialpagonomiBeanSwingJInternalFrame.historialpagonomiLogic.getHistorialPagoNomis(),this.jInternalFrameDetalleFormEstructura.asistenciadiariaBeanSwingJInternalFrame.asistenciadiariaLogic.getAsistenciaDiarias(),this.jInternalFrameDetalleFormEstructura.funcionestrucBeanSwingJInternalFrame.funcionestrucLogic.getFuncionEstrucs(),this.jInternalFrameDetalleFormEstructura.solicitudreemplazoBeanSwingJInternalFrame.solicitudreemplazoLogic.getSolicitudReemplazos(),this.jInternalFrameDetalleFormEstructura.solicitudhoraextraBeanSwingJInternalFrame.solicitudhoraextraLogic.getSolicitudHoraExtras(),this.jInternalFrameDetalleFormEstructura.evaluacionnomiBeanSwingJInternalFrame.evaluacionnomiLogic.getEvaluacionNomis(),this.jInternalFrameDetalleFormEstructura.solicitudvacacionBeanSwingJInternalFrame.solicitudvacacionLogic.getSolicitudVacacions(),this.jInternalFrameDetalleFormEstructura.responsableactivofijoBeanSwingJInternalFrame.responsableactivofijoLogic.getResponsableActivoFijos(),this.jInternalFrameDetalleFormEstructura.rubroempleacuentacontableBeanSwingJInternalFrame.rubroempleacuentacontableLogic.getRubroEmpleaCuentaContables());//WithConnection
								//estructuraLogic.getSetVersionRowEstructuras();//WithConnection
							} else if(Constantes.ISUSAEJBREMOTE) {
							} else if(Constantes.ISUSAEJBHOME) {
							}
							//ARCHITECTURE
							
							//POR BUG: EL OBJETO ACTUAL SE PERDIA, POR LO QUE SE GUARDA TAMBIEN VALORES EN AUX Y LUEGO DESPUES DEL MENSAJE SE HACE REFERENCIA EL OBJETO ACTUAL AL AUX
							this.bugActualizarReferenciaActual(this.estructura,estructuraAux);
					
					
							//ARCHITECTURE
							if(Constantes.ISUSAEJBLOGICLAYER) {
								
							this.jInternalFrameDetalleFormEstructura.centrocostoestructuraBeanSwingJInternalFrame.centrocostoestructuraLogic.setCentroCostoEstructuras(new ArrayList<CentroCostoEstructura>());
							this.jInternalFrameDetalleFormEstructura.planivacacionBeanSwingJInternalFrame.planivacacionLogic.setPlaniVacacions(new ArrayList<PlaniVacacion>());
							this.jInternalFrameDetalleFormEstructura.asistenciamensualBeanSwingJInternalFrame.asistenciamensualLogic.setAsistenciaMensuals(new ArrayList<AsistenciaMensual>());
							this.jInternalFrameDetalleFormEstructura.empleadoprocesorubroBeanSwingJInternalFrame.empleadoprocesorubroLogic.setEmpleadoProcesoRubros(new ArrayList<EmpleadoProcesoRubro>());
							this.jInternalFrameDetalleFormEstructura.empleadopagorubroBeanSwingJInternalFrame.empleadopagorubroLogic.setEmpleadoPagoRubros(new ArrayList<EmpleadoPagoRubro>());
							this.jInternalFrameDetalleFormEstructura.provisionempleadoBeanSwingJInternalFrame.provisionempleadoLogic.setProvisionEmpleados(new ArrayList<ProvisionEmpleado>());
							this.jInternalFrameDetalleFormEstructura.empleadoBeanSwingJInternalFrame.empleadoLogic.setEmpleados(new ArrayList<Empleado>());
							this.jInternalFrameDetalleFormEstructura.estructuraBeanSwingJInternalFrame.estructuraLogic.setEstructuras(new ArrayList<Estructura>());
							this.jInternalFrameDetalleFormEstructura.evaluacionempleadoBeanSwingJInternalFrame.evaluacionempleadoLogic.setEvaluacionEmpleados(new ArrayList<EvaluacionEmpleado>());
							this.jInternalFrameDetalleFormEstructura.empleadoimpuestorentaBeanSwingJInternalFrame.empleadoimpuestorentaLogic.setEmpleadoImpuestoRentas(new ArrayList<EmpleadoImpuestoRenta>());
							this.jInternalFrameDetalleFormEstructura.rubroestructuraBeanSwingJInternalFrame.rubroestructuraLogic.setRubroEstructuras(new ArrayList<RubroEstructura>());
							this.jInternalFrameDetalleFormEstructura.cierrerolmensualBeanSwingJInternalFrame.cierrerolmensualLogic.setCierreRolMensuals(new ArrayList<CierreRolMensual>());
							this.jInternalFrameDetalleFormEstructura.formatonomiBeanSwingJInternalFrame.formatonomiLogic.setFormatoNomis(new ArrayList<FormatoNomi>());
							this.jInternalFrameDetalleFormEstructura.empleadoestructuraBeanSwingJInternalFrame.empleadoestructuraLogic.setEmpleadoEstructuras(new ArrayList<EmpleadoEstructura>());
							this.jInternalFrameDetalleFormEstructura.historialpagonomiBeanSwingJInternalFrame.historialpagonomiLogic.setHistorialPagoNomis(new ArrayList<HistorialPagoNomi>());
							this.jInternalFrameDetalleFormEstructura.asistenciadiariaBeanSwingJInternalFrame.asistenciadiariaLogic.setAsistenciaDiarias(new ArrayList<AsistenciaDiaria>());
							this.jInternalFrameDetalleFormEstructura.funcionestrucBeanSwingJInternalFrame.funcionestrucLogic.setFuncionEstrucs(new ArrayList<FuncionEstruc>());
							this.jInternalFrameDetalleFormEstructura.solicitudreemplazoBeanSwingJInternalFrame.solicitudreemplazoLogic.setSolicitudReemplazos(new ArrayList<SolicitudReemplazo>());
							this.jInternalFrameDetalleFormEstructura.solicitudhoraextraBeanSwingJInternalFrame.solicitudhoraextraLogic.setSolicitudHoraExtras(new ArrayList<SolicitudHoraExtra>());
							this.jInternalFrameDetalleFormEstructura.evaluacionnomiBeanSwingJInternalFrame.evaluacionnomiLogic.setEvaluacionNomis(new ArrayList<EvaluacionNomi>());
							this.jInternalFrameDetalleFormEstructura.solicitudvacacionBeanSwingJInternalFrame.solicitudvacacionLogic.setSolicitudVacacions(new ArrayList<SolicitudVacacion>());
							this.jInternalFrameDetalleFormEstructura.responsableactivofijoBeanSwingJInternalFrame.responsableactivofijoLogic.setResponsableActivoFijos(new ArrayList<ResponsableActivoFijo>());
							this.jInternalFrameDetalleFormEstructura.rubroempleacuentacontableBeanSwingJInternalFrame.rubroempleacuentacontableLogic.setRubroEmpleaCuentaContables(new ArrayList<RubroEmpleaCuentaContable>());
							} else if(Constantes.ISUSAEJBREMOTE ||Constantes.ISUSAEJBHOME) {
								
							this.jInternalFrameDetalleFormEstructura.centrocostoestructuraBeanSwingJInternalFrame.centrocostoestructuras= new ArrayList<CentroCostoEstructura>();
							this.jInternalFrameDetalleFormEstructura.planivacacionBeanSwingJInternalFrame.planivacacions= new ArrayList<PlaniVacacion>();
							this.jInternalFrameDetalleFormEstructura.asistenciamensualBeanSwingJInternalFrame.asistenciamensuals= new ArrayList<AsistenciaMensual>();
							this.jInternalFrameDetalleFormEstructura.empleadoprocesorubroBeanSwingJInternalFrame.empleadoprocesorubros= new ArrayList<EmpleadoProcesoRubro>();
							this.jInternalFrameDetalleFormEstructura.empleadopagorubroBeanSwingJInternalFrame.empleadopagorubros= new ArrayList<EmpleadoPagoRubro>();
							this.jInternalFrameDetalleFormEstructura.provisionempleadoBeanSwingJInternalFrame.provisionempleados= new ArrayList<ProvisionEmpleado>();
							this.jInternalFrameDetalleFormEstructura.empleadoBeanSwingJInternalFrame.empleados= new ArrayList<Empleado>();
							this.jInternalFrameDetalleFormEstructura.estructuraBeanSwingJInternalFrame.estructuras= new ArrayList<Estructura>();
							this.jInternalFrameDetalleFormEstructura.evaluacionempleadoBeanSwingJInternalFrame.evaluacionempleados= new ArrayList<EvaluacionEmpleado>();
							this.jInternalFrameDetalleFormEstructura.empleadoimpuestorentaBeanSwingJInternalFrame.empleadoimpuestorentas= new ArrayList<EmpleadoImpuestoRenta>();
							this.jInternalFrameDetalleFormEstructura.rubroestructuraBeanSwingJInternalFrame.rubroestructuras= new ArrayList<RubroEstructura>();
							this.jInternalFrameDetalleFormEstructura.cierrerolmensualBeanSwingJInternalFrame.cierrerolmensuals= new ArrayList<CierreRolMensual>();
							this.jInternalFrameDetalleFormEstructura.formatonomiBeanSwingJInternalFrame.formatonomis= new ArrayList<FormatoNomi>();
							this.jInternalFrameDetalleFormEstructura.empleadoestructuraBeanSwingJInternalFrame.empleadoestructuras= new ArrayList<EmpleadoEstructura>();
							this.jInternalFrameDetalleFormEstructura.historialpagonomiBeanSwingJInternalFrame.historialpagonomis= new ArrayList<HistorialPagoNomi>();
							this.jInternalFrameDetalleFormEstructura.asistenciadiariaBeanSwingJInternalFrame.asistenciadiarias= new ArrayList<AsistenciaDiaria>();
							this.jInternalFrameDetalleFormEstructura.funcionestrucBeanSwingJInternalFrame.funcionestrucs= new ArrayList<FuncionEstruc>();
							this.jInternalFrameDetalleFormEstructura.solicitudreemplazoBeanSwingJInternalFrame.solicitudreemplazos= new ArrayList<SolicitudReemplazo>();
							this.jInternalFrameDetalleFormEstructura.solicitudhoraextraBeanSwingJInternalFrame.solicitudhoraextras= new ArrayList<SolicitudHoraExtra>();
							this.jInternalFrameDetalleFormEstructura.evaluacionnomiBeanSwingJInternalFrame.evaluacionnomis= new ArrayList<EvaluacionNomi>();
							this.jInternalFrameDetalleFormEstructura.solicitudvacacionBeanSwingJInternalFrame.solicitudvacacions= new ArrayList<SolicitudVacacion>();
							this.jInternalFrameDetalleFormEstructura.responsableactivofijoBeanSwingJInternalFrame.responsableactivofijos= new ArrayList<ResponsableActivoFijo>();
							this.jInternalFrameDetalleFormEstructura.rubroempleacuentacontableBeanSwingJInternalFrame.rubroempleacuentacontables= new ArrayList<RubroEmpleaCuentaContable>();
							}
							//ARCHITECTURE	
						} else {
							
							

							if(this.jInternalFrameDetalleFormEstructura.centrocostoestructuraBeanSwingJInternalFrame!=null && this.jInternalFrameDetalleFormEstructura.centrocostoestructuraBeanSwingJInternalFrame.conTotales) {this.jInternalFrameDetalleFormEstructura.centrocostoestructuraBeanSwingJInternalFrame.quitarFilaTotales();}
							estructuraAux.setCentroCostoEstructuras(this.jInternalFrameDetalleFormEstructura.centrocostoestructuraBeanSwingJInternalFrame.centrocostoestructuraLogic.getCentroCostoEstructuras());

							if(this.jInternalFrameDetalleFormEstructura.planivacacionBeanSwingJInternalFrame!=null && this.jInternalFrameDetalleFormEstructura.planivacacionBeanSwingJInternalFrame.conTotales) {this.jInternalFrameDetalleFormEstructura.planivacacionBeanSwingJInternalFrame.quitarFilaTotales();}
							estructuraAux.setPlaniVacacionCargos(this.jInternalFrameDetalleFormEstructura.planivacacionBeanSwingJInternalFrame.planivacacionLogic.getPlaniVacacions());

							if(this.jInternalFrameDetalleFormEstructura.asistenciamensualBeanSwingJInternalFrame!=null && this.jInternalFrameDetalleFormEstructura.asistenciamensualBeanSwingJInternalFrame.conTotales) {this.jInternalFrameDetalleFormEstructura.asistenciamensualBeanSwingJInternalFrame.quitarFilaTotales();}
							estructuraAux.setAsistenciaMensuals(this.jInternalFrameDetalleFormEstructura.asistenciamensualBeanSwingJInternalFrame.asistenciamensualLogic.getAsistenciaMensuals());

							if(this.jInternalFrameDetalleFormEstructura.empleadoprocesorubroBeanSwingJInternalFrame!=null && this.jInternalFrameDetalleFormEstructura.empleadoprocesorubroBeanSwingJInternalFrame.conTotales) {this.jInternalFrameDetalleFormEstructura.empleadoprocesorubroBeanSwingJInternalFrame.quitarFilaTotales();}
							estructuraAux.setEmpleadoProcesoRubros(this.jInternalFrameDetalleFormEstructura.empleadoprocesorubroBeanSwingJInternalFrame.empleadoprocesorubroLogic.getEmpleadoProcesoRubros());

							if(this.jInternalFrameDetalleFormEstructura.empleadopagorubroBeanSwingJInternalFrame!=null && this.jInternalFrameDetalleFormEstructura.empleadopagorubroBeanSwingJInternalFrame.conTotales) {this.jInternalFrameDetalleFormEstructura.empleadopagorubroBeanSwingJInternalFrame.quitarFilaTotales();}
							estructuraAux.setEmpleadoPagoRubros(this.jInternalFrameDetalleFormEstructura.empleadopagorubroBeanSwingJInternalFrame.empleadopagorubroLogic.getEmpleadoPagoRubros());

							if(this.jInternalFrameDetalleFormEstructura.provisionempleadoBeanSwingJInternalFrame!=null && this.jInternalFrameDetalleFormEstructura.provisionempleadoBeanSwingJInternalFrame.conTotales) {this.jInternalFrameDetalleFormEstructura.provisionempleadoBeanSwingJInternalFrame.quitarFilaTotales();}
							estructuraAux.setProvisionEmpleados(this.jInternalFrameDetalleFormEstructura.provisionempleadoBeanSwingJInternalFrame.provisionempleadoLogic.getProvisionEmpleados());

							if(this.jInternalFrameDetalleFormEstructura.empleadoBeanSwingJInternalFrame!=null && this.jInternalFrameDetalleFormEstructura.empleadoBeanSwingJInternalFrame.conTotales) {this.jInternalFrameDetalleFormEstructura.empleadoBeanSwingJInternalFrame.quitarFilaTotales();}
							estructuraAux.setEmpleados(this.jInternalFrameDetalleFormEstructura.empleadoBeanSwingJInternalFrame.empleadoLogic.getEmpleados());

							if(this.jInternalFrameDetalleFormEstructura.estructuraBeanSwingJInternalFrame!=null && this.jInternalFrameDetalleFormEstructura.estructuraBeanSwingJInternalFrame.conTotales) {this.jInternalFrameDetalleFormEstructura.estructuraBeanSwingJInternalFrame.quitarFilaTotales();}
							estructuraAux.setEstructuras(this.jInternalFrameDetalleFormEstructura.estructuraBeanSwingJInternalFrame.estructuraLogic.getEstructuras());

							if(this.jInternalFrameDetalleFormEstructura.evaluacionempleadoBeanSwingJInternalFrame!=null && this.jInternalFrameDetalleFormEstructura.evaluacionempleadoBeanSwingJInternalFrame.conTotales) {this.jInternalFrameDetalleFormEstructura.evaluacionempleadoBeanSwingJInternalFrame.quitarFilaTotales();}
							estructuraAux.setEvaluacionEmpleados(this.jInternalFrameDetalleFormEstructura.evaluacionempleadoBeanSwingJInternalFrame.evaluacionempleadoLogic.getEvaluacionEmpleados());

							if(this.jInternalFrameDetalleFormEstructura.empleadoimpuestorentaBeanSwingJInternalFrame!=null && this.jInternalFrameDetalleFormEstructura.empleadoimpuestorentaBeanSwingJInternalFrame.conTotales) {this.jInternalFrameDetalleFormEstructura.empleadoimpuestorentaBeanSwingJInternalFrame.quitarFilaTotales();}
							estructuraAux.setEmpleadoImpuestoRentas(this.jInternalFrameDetalleFormEstructura.empleadoimpuestorentaBeanSwingJInternalFrame.empleadoimpuestorentaLogic.getEmpleadoImpuestoRentas());

							if(this.jInternalFrameDetalleFormEstructura.rubroestructuraBeanSwingJInternalFrame!=null && this.jInternalFrameDetalleFormEstructura.rubroestructuraBeanSwingJInternalFrame.conTotales) {this.jInternalFrameDetalleFormEstructura.rubroestructuraBeanSwingJInternalFrame.quitarFilaTotales();}
							estructuraAux.setRubroEstructuras(this.jInternalFrameDetalleFormEstructura.rubroestructuraBeanSwingJInternalFrame.rubroestructuraLogic.getRubroEstructuras());

							if(this.jInternalFrameDetalleFormEstructura.cierrerolmensualBeanSwingJInternalFrame!=null && this.jInternalFrameDetalleFormEstructura.cierrerolmensualBeanSwingJInternalFrame.conTotales) {this.jInternalFrameDetalleFormEstructura.cierrerolmensualBeanSwingJInternalFrame.quitarFilaTotales();}
							estructuraAux.setCierreRolMensuals(this.jInternalFrameDetalleFormEstructura.cierrerolmensualBeanSwingJInternalFrame.cierrerolmensualLogic.getCierreRolMensuals());

							if(this.jInternalFrameDetalleFormEstructura.formatonomiBeanSwingJInternalFrame!=null && this.jInternalFrameDetalleFormEstructura.formatonomiBeanSwingJInternalFrame.conTotales) {this.jInternalFrameDetalleFormEstructura.formatonomiBeanSwingJInternalFrame.quitarFilaTotales();}
							estructuraAux.setFormatoNomis(this.jInternalFrameDetalleFormEstructura.formatonomiBeanSwingJInternalFrame.formatonomiLogic.getFormatoNomis());

							if(this.jInternalFrameDetalleFormEstructura.empleadoestructuraBeanSwingJInternalFrame!=null && this.jInternalFrameDetalleFormEstructura.empleadoestructuraBeanSwingJInternalFrame.conTotales) {this.jInternalFrameDetalleFormEstructura.empleadoestructuraBeanSwingJInternalFrame.quitarFilaTotales();}
							estructuraAux.setEmpleadoEstructuras(this.jInternalFrameDetalleFormEstructura.empleadoestructuraBeanSwingJInternalFrame.empleadoestructuraLogic.getEmpleadoEstructuras());

							if(this.jInternalFrameDetalleFormEstructura.historialpagonomiBeanSwingJInternalFrame!=null && this.jInternalFrameDetalleFormEstructura.historialpagonomiBeanSwingJInternalFrame.conTotales) {this.jInternalFrameDetalleFormEstructura.historialpagonomiBeanSwingJInternalFrame.quitarFilaTotales();}
							estructuraAux.setHistorialPagoNomis(this.jInternalFrameDetalleFormEstructura.historialpagonomiBeanSwingJInternalFrame.historialpagonomiLogic.getHistorialPagoNomis());

							if(this.jInternalFrameDetalleFormEstructura.asistenciadiariaBeanSwingJInternalFrame!=null && this.jInternalFrameDetalleFormEstructura.asistenciadiariaBeanSwingJInternalFrame.conTotales) {this.jInternalFrameDetalleFormEstructura.asistenciadiariaBeanSwingJInternalFrame.quitarFilaTotales();}
							estructuraAux.setAsistenciaDiarias(this.jInternalFrameDetalleFormEstructura.asistenciadiariaBeanSwingJInternalFrame.asistenciadiariaLogic.getAsistenciaDiarias());

							if(this.jInternalFrameDetalleFormEstructura.funcionestrucBeanSwingJInternalFrame!=null && this.jInternalFrameDetalleFormEstructura.funcionestrucBeanSwingJInternalFrame.conTotales) {this.jInternalFrameDetalleFormEstructura.funcionestrucBeanSwingJInternalFrame.quitarFilaTotales();}
							estructuraAux.setFuncionEstrucs(this.jInternalFrameDetalleFormEstructura.funcionestrucBeanSwingJInternalFrame.funcionestrucLogic.getFuncionEstrucs());

							if(this.jInternalFrameDetalleFormEstructura.solicitudreemplazoBeanSwingJInternalFrame!=null && this.jInternalFrameDetalleFormEstructura.solicitudreemplazoBeanSwingJInternalFrame.conTotales) {this.jInternalFrameDetalleFormEstructura.solicitudreemplazoBeanSwingJInternalFrame.quitarFilaTotales();}
							estructuraAux.setSolicitudReemplazos(this.jInternalFrameDetalleFormEstructura.solicitudreemplazoBeanSwingJInternalFrame.solicitudreemplazoLogic.getSolicitudReemplazos());

							if(this.jInternalFrameDetalleFormEstructura.solicitudhoraextraBeanSwingJInternalFrame!=null && this.jInternalFrameDetalleFormEstructura.solicitudhoraextraBeanSwingJInternalFrame.conTotales) {this.jInternalFrameDetalleFormEstructura.solicitudhoraextraBeanSwingJInternalFrame.quitarFilaTotales();}
							estructuraAux.setSolicitudHoraExtras(this.jInternalFrameDetalleFormEstructura.solicitudhoraextraBeanSwingJInternalFrame.solicitudhoraextraLogic.getSolicitudHoraExtras());

							if(this.jInternalFrameDetalleFormEstructura.evaluacionnomiBeanSwingJInternalFrame!=null && this.jInternalFrameDetalleFormEstructura.evaluacionnomiBeanSwingJInternalFrame.conTotales) {this.jInternalFrameDetalleFormEstructura.evaluacionnomiBeanSwingJInternalFrame.quitarFilaTotales();}
							estructuraAux.setEvaluacionNomis(this.jInternalFrameDetalleFormEstructura.evaluacionnomiBeanSwingJInternalFrame.evaluacionnomiLogic.getEvaluacionNomis());

							if(this.jInternalFrameDetalleFormEstructura.solicitudvacacionBeanSwingJInternalFrame!=null && this.jInternalFrameDetalleFormEstructura.solicitudvacacionBeanSwingJInternalFrame.conTotales) {this.jInternalFrameDetalleFormEstructura.solicitudvacacionBeanSwingJInternalFrame.quitarFilaTotales();}
							estructuraAux.setSolicitudVacacions(this.jInternalFrameDetalleFormEstructura.solicitudvacacionBeanSwingJInternalFrame.solicitudvacacionLogic.getSolicitudVacacions());

							if(this.jInternalFrameDetalleFormEstructura.responsableactivofijoBeanSwingJInternalFrame!=null && this.jInternalFrameDetalleFormEstructura.responsableactivofijoBeanSwingJInternalFrame.conTotales) {this.jInternalFrameDetalleFormEstructura.responsableactivofijoBeanSwingJInternalFrame.quitarFilaTotales();}
							estructuraAux.setResponsableActivoFijos(this.jInternalFrameDetalleFormEstructura.responsableactivofijoBeanSwingJInternalFrame.responsableactivofijoLogic.getResponsableActivoFijos());

							if(this.jInternalFrameDetalleFormEstructura.rubroempleacuentacontableBeanSwingJInternalFrame!=null && this.jInternalFrameDetalleFormEstructura.rubroempleacuentacontableBeanSwingJInternalFrame.conTotales) {this.jInternalFrameDetalleFormEstructura.rubroempleacuentacontableBeanSwingJInternalFrame.quitarFilaTotales();}
							estructuraAux.setRubroEmpleaCuentaContables(this.jInternalFrameDetalleFormEstructura.rubroempleacuentacontableBeanSwingJInternalFrame.rubroempleacuentacontableLogic.getRubroEmpleaCuentaContables());
							
							//ARCHITECTURE
							if(Constantes.ISUSAEJBLOGICLAYER) {
								if(this.estructuraSessionBean.getEstaModoGuardarRelaciones() 
									|| this.estructuraSessionBean.getEsGuardarRelacionado())	{
									actualizarLista(estructuraAux,estructuraLogic.getEstructuras());
								}
							} else if(Constantes.ISUSAEJBREMOTE||Constantes.ISUSAEJBHOME) {
								actualizarLista(estructuraAux,estructuras);
							}
							//ARCHITECTURE
							
							//AQUI EL ID NEGATIVO ES EL ID BUSCADO, YA QUE NO SE GENERA OTRO EN LA DB POR INGRESAR UNO NUEVO
							//POR BUG: EL OBJETO ACTUAL SE PERDIA, POR LO QUE SE GUARDA TAMBIEN VALORES EN AUX Y LUEGO DESPUES DEL MENSAJE SE HACE REFERENCIA EL OBJETO ACTUAL AL AUX
							//this.bugActualizarReferenciaActual(this.estructura,estructuraAux);												
						}
					}
				}
			} else if(maintenanceType==MaintenanceType.ACTUALIZAR) {
				estructuraAux=new  Estructura();
				
				//PUEDE QUE SE ACTUALIZE ALGUN REGISTRO NUEVO
				if(!this.estructuraSessionBean.getEsGuardarRelacionado() 
					|| (this.estructuraSessionBean.getEsGuardarRelacionado() && this.estructura.getId()>=0)) {
						
					estructuraAux.setIsNew(false);
				}
				
				estructuraAux.setIsDeleted(false);
			
				estructuraAux.setId(this.estructura.getId());	
				estructuraAux.setVersionRow(this.estructura.getVersionRow());	
				estructuraAux.setid_empresa(this.estructura.getid_empresa());	
				estructuraAux.setid_sucursal(this.estructura.getid_sucursal());	
				estructuraAux.setid_estructura(this.estructura.getid_estructura());	
				estructuraAux.setid_tipo_pago__n_m(this.estructura.getid_tipo_pago__n_m());	
				estructuraAux.setid_numero_patronal(this.estructura.getid_numero_patronal());	
				estructuraAux.setid_cuenta_contable(this.estructura.getid_cuenta_contable());	
				estructuraAux.setid_tipo_estructura(this.estructura.getid_tipo_estructura());	
				estructuraAux.setid_pais(this.estructura.getid_pais());	
				estructuraAux.setid_ciudad(this.estructura.getid_ciudad());	
				estructuraAux.setcodigo(this.estructura.getcodigo());	
				estructuraAux.setnumero(this.estructura.getnumero());	
				estructuraAux.setvalor_anticipo(this.estructura.getvalor_anticipo());	
				estructuraAux.setporcentaje_anticipo(this.estructura.getporcentaje_anticipo());	
				estructuraAux.setnombre(this.estructura.getnombre());	
				estructuraAux.setes_jefe(this.estructura.getes_jefe());	
				estructuraAux.setes_anual(this.estructura.getes_anual());	
				estructuraAux.setporcentaje(this.estructura.getporcentaje());	
				estructuraAux.setvalor(this.estructura.getvalor());	
				
				//ARCHITECTURE
				if(Constantes.ISUSAEJBLOGICLAYER) {
					actualizarLista(estructuraAux,estructuraLogic.getEstructuras());
				} else if(Constantes.ISUSAEJBREMOTE||Constantes.ISUSAEJBHOME) {
					actualizarLista(estructuraAux,estructuras);
				}
				//ARCHITECTURE
				
				if(!isGuardarCambiosEnLote && !this.estructuraSessionBean.getEstaModoGuardarRelaciones() 
						&& !this.estructuraSessionBean.getEsGuardarRelacionado())	{
					
					//ARCHITECTURE
					if(Constantes.ISUSAEJBLOGICLAYER) {
						estructuraLogic.saveEstructuras();//WithConnection
						//estructuraLogic.getSetVersionRowEstructuras();//WithConnection
					} else if(Constantes.ISUSAEJBREMOTE) {
					} else if(Constantes.ISUSAEJBHOME) {
					}	
					//ARCHITECTURE
					
					//TALVEZ ESTA DEMAS POR SER UPDATE
					//POR BUG: EL OBJETO ACTUAL SE PERDIA, POR LO QUE SE GUARDA TAMBIEN VALORES EN AUX Y LUEGO DESPUES DEL MENSAJE SE HACE REFERENCIA EL OBJETO ACTUAL AL AUX
					this.bugActualizarReferenciaActual(this.estructura,estructuraAux);
					
					this.refrescarForeignKeysDescripcionesEstructura();
				} else {
					//CUANDO ES MANTENIMIENTO MAESTRO DETALLE
					if(this.estructuraSessionBean.getEstaModoGuardarRelaciones()) {
						//GUARDAR RELACIONES
						//ARCHITECTURE
						if(Constantes.ISUSAEJBLOGICLAYER) {
							
							this.jInternalFrameDetalleFormEstructura.centrocostoestructuraBeanSwingJInternalFrame.centrocostoestructuraLogic.getCentroCostoEstructuras().addAll(this.jInternalFrameDetalleFormEstructura.centrocostoestructuraBeanSwingJInternalFrame.centrocostoestructurasEliminados);
							this.jInternalFrameDetalleFormEstructura.planivacacionBeanSwingJInternalFrame.planivacacionLogic.getPlaniVacacions().addAll(this.jInternalFrameDetalleFormEstructura.planivacacionBeanSwingJInternalFrame.planivacacionsEliminados);
							this.jInternalFrameDetalleFormEstructura.asistenciamensualBeanSwingJInternalFrame.asistenciamensualLogic.getAsistenciaMensuals().addAll(this.jInternalFrameDetalleFormEstructura.asistenciamensualBeanSwingJInternalFrame.asistenciamensualsEliminados);
							this.jInternalFrameDetalleFormEstructura.empleadoprocesorubroBeanSwingJInternalFrame.empleadoprocesorubroLogic.getEmpleadoProcesoRubros().addAll(this.jInternalFrameDetalleFormEstructura.empleadoprocesorubroBeanSwingJInternalFrame.empleadoprocesorubrosEliminados);
							this.jInternalFrameDetalleFormEstructura.empleadopagorubroBeanSwingJInternalFrame.empleadopagorubroLogic.getEmpleadoPagoRubros().addAll(this.jInternalFrameDetalleFormEstructura.empleadopagorubroBeanSwingJInternalFrame.empleadopagorubrosEliminados);
							this.jInternalFrameDetalleFormEstructura.provisionempleadoBeanSwingJInternalFrame.provisionempleadoLogic.getProvisionEmpleados().addAll(this.jInternalFrameDetalleFormEstructura.provisionempleadoBeanSwingJInternalFrame.provisionempleadosEliminados);
							this.jInternalFrameDetalleFormEstructura.empleadoBeanSwingJInternalFrame.empleadoLogic.getEmpleados().addAll(this.jInternalFrameDetalleFormEstructura.empleadoBeanSwingJInternalFrame.empleadosEliminados);
							this.jInternalFrameDetalleFormEstructura.estructuraBeanSwingJInternalFrame.estructuraLogic.getEstructuras().addAll(this.jInternalFrameDetalleFormEstructura.estructuraBeanSwingJInternalFrame.estructurasEliminados);
							this.jInternalFrameDetalleFormEstructura.evaluacionempleadoBeanSwingJInternalFrame.evaluacionempleadoLogic.getEvaluacionEmpleados().addAll(this.jInternalFrameDetalleFormEstructura.evaluacionempleadoBeanSwingJInternalFrame.evaluacionempleadosEliminados);
							this.jInternalFrameDetalleFormEstructura.empleadoimpuestorentaBeanSwingJInternalFrame.empleadoimpuestorentaLogic.getEmpleadoImpuestoRentas().addAll(this.jInternalFrameDetalleFormEstructura.empleadoimpuestorentaBeanSwingJInternalFrame.empleadoimpuestorentasEliminados);
							this.jInternalFrameDetalleFormEstructura.rubroestructuraBeanSwingJInternalFrame.rubroestructuraLogic.getRubroEstructuras().addAll(this.jInternalFrameDetalleFormEstructura.rubroestructuraBeanSwingJInternalFrame.rubroestructurasEliminados);
							this.jInternalFrameDetalleFormEstructura.cierrerolmensualBeanSwingJInternalFrame.cierrerolmensualLogic.getCierreRolMensuals().addAll(this.jInternalFrameDetalleFormEstructura.cierrerolmensualBeanSwingJInternalFrame.cierrerolmensualsEliminados);
							this.jInternalFrameDetalleFormEstructura.formatonomiBeanSwingJInternalFrame.formatonomiLogic.getFormatoNomis().addAll(this.jInternalFrameDetalleFormEstructura.formatonomiBeanSwingJInternalFrame.formatonomisEliminados);
							this.jInternalFrameDetalleFormEstructura.empleadoestructuraBeanSwingJInternalFrame.empleadoestructuraLogic.getEmpleadoEstructuras().addAll(this.jInternalFrameDetalleFormEstructura.empleadoestructuraBeanSwingJInternalFrame.empleadoestructurasEliminados);
							this.jInternalFrameDetalleFormEstructura.historialpagonomiBeanSwingJInternalFrame.historialpagonomiLogic.getHistorialPagoNomis().addAll(this.jInternalFrameDetalleFormEstructura.historialpagonomiBeanSwingJInternalFrame.historialpagonomisEliminados);
							this.jInternalFrameDetalleFormEstructura.asistenciadiariaBeanSwingJInternalFrame.asistenciadiariaLogic.getAsistenciaDiarias().addAll(this.jInternalFrameDetalleFormEstructura.asistenciadiariaBeanSwingJInternalFrame.asistenciadiariasEliminados);
							this.jInternalFrameDetalleFormEstructura.funcionestrucBeanSwingJInternalFrame.funcionestrucLogic.getFuncionEstrucs().addAll(this.jInternalFrameDetalleFormEstructura.funcionestrucBeanSwingJInternalFrame.funcionestrucsEliminados);
							this.jInternalFrameDetalleFormEstructura.solicitudreemplazoBeanSwingJInternalFrame.solicitudreemplazoLogic.getSolicitudReemplazos().addAll(this.jInternalFrameDetalleFormEstructura.solicitudreemplazoBeanSwingJInternalFrame.solicitudreemplazosEliminados);
							this.jInternalFrameDetalleFormEstructura.solicitudhoraextraBeanSwingJInternalFrame.solicitudhoraextraLogic.getSolicitudHoraExtras().addAll(this.jInternalFrameDetalleFormEstructura.solicitudhoraextraBeanSwingJInternalFrame.solicitudhoraextrasEliminados);
							this.jInternalFrameDetalleFormEstructura.evaluacionnomiBeanSwingJInternalFrame.evaluacionnomiLogic.getEvaluacionNomis().addAll(this.jInternalFrameDetalleFormEstructura.evaluacionnomiBeanSwingJInternalFrame.evaluacionnomisEliminados);
							this.jInternalFrameDetalleFormEstructura.solicitudvacacionBeanSwingJInternalFrame.solicitudvacacionLogic.getSolicitudVacacions().addAll(this.jInternalFrameDetalleFormEstructura.solicitudvacacionBeanSwingJInternalFrame.solicitudvacacionsEliminados);
							this.jInternalFrameDetalleFormEstructura.responsableactivofijoBeanSwingJInternalFrame.responsableactivofijoLogic.getResponsableActivoFijos().addAll(this.jInternalFrameDetalleFormEstructura.responsableactivofijoBeanSwingJInternalFrame.responsableactivofijosEliminados);
							this.jInternalFrameDetalleFormEstructura.rubroempleacuentacontableBeanSwingJInternalFrame.rubroempleacuentacontableLogic.getRubroEmpleaCuentaContables().addAll(this.jInternalFrameDetalleFormEstructura.rubroempleacuentacontableBeanSwingJInternalFrame.rubroempleacuentacontablesEliminados);
						} else if(Constantes.ISUSAEJBREMOTE ||Constantes.ISUSAEJBHOME) {
							
							this.jInternalFrameDetalleFormEstructura.centrocostoestructuraBeanSwingJInternalFrame.centrocostoestructuras.addAll(this.jInternalFrameDetalleFormEstructura.centrocostoestructuraBeanSwingJInternalFrame.centrocostoestructurasEliminados);
							this.jInternalFrameDetalleFormEstructura.planivacacionBeanSwingJInternalFrame.planivacacions.addAll(this.jInternalFrameDetalleFormEstructura.planivacacionBeanSwingJInternalFrame.planivacacionsEliminados);
							this.jInternalFrameDetalleFormEstructura.asistenciamensualBeanSwingJInternalFrame.asistenciamensuals.addAll(this.jInternalFrameDetalleFormEstructura.asistenciamensualBeanSwingJInternalFrame.asistenciamensualsEliminados);
							this.jInternalFrameDetalleFormEstructura.empleadoprocesorubroBeanSwingJInternalFrame.empleadoprocesorubros.addAll(this.jInternalFrameDetalleFormEstructura.empleadoprocesorubroBeanSwingJInternalFrame.empleadoprocesorubrosEliminados);
							this.jInternalFrameDetalleFormEstructura.empleadopagorubroBeanSwingJInternalFrame.empleadopagorubros.addAll(this.jInternalFrameDetalleFormEstructura.empleadopagorubroBeanSwingJInternalFrame.empleadopagorubrosEliminados);
							this.jInternalFrameDetalleFormEstructura.provisionempleadoBeanSwingJInternalFrame.provisionempleados.addAll(this.jInternalFrameDetalleFormEstructura.provisionempleadoBeanSwingJInternalFrame.provisionempleadosEliminados);
							this.jInternalFrameDetalleFormEstructura.empleadoBeanSwingJInternalFrame.empleados.addAll(this.jInternalFrameDetalleFormEstructura.empleadoBeanSwingJInternalFrame.empleadosEliminados);
							this.jInternalFrameDetalleFormEstructura.estructuraBeanSwingJInternalFrame.estructuras.addAll(this.jInternalFrameDetalleFormEstructura.estructuraBeanSwingJInternalFrame.estructurasEliminados);
							this.jInternalFrameDetalleFormEstructura.evaluacionempleadoBeanSwingJInternalFrame.evaluacionempleados.addAll(this.jInternalFrameDetalleFormEstructura.evaluacionempleadoBeanSwingJInternalFrame.evaluacionempleadosEliminados);
							this.jInternalFrameDetalleFormEstructura.empleadoimpuestorentaBeanSwingJInternalFrame.empleadoimpuestorentas.addAll(this.jInternalFrameDetalleFormEstructura.empleadoimpuestorentaBeanSwingJInternalFrame.empleadoimpuestorentasEliminados);
							this.jInternalFrameDetalleFormEstructura.rubroestructuraBeanSwingJInternalFrame.rubroestructuras.addAll(this.jInternalFrameDetalleFormEstructura.rubroestructuraBeanSwingJInternalFrame.rubroestructurasEliminados);
							this.jInternalFrameDetalleFormEstructura.cierrerolmensualBeanSwingJInternalFrame.cierrerolmensuals.addAll(this.jInternalFrameDetalleFormEstructura.cierrerolmensualBeanSwingJInternalFrame.cierrerolmensualsEliminados);
							this.jInternalFrameDetalleFormEstructura.formatonomiBeanSwingJInternalFrame.formatonomis.addAll(this.jInternalFrameDetalleFormEstructura.formatonomiBeanSwingJInternalFrame.formatonomisEliminados);
							this.jInternalFrameDetalleFormEstructura.empleadoestructuraBeanSwingJInternalFrame.empleadoestructuras.addAll(this.jInternalFrameDetalleFormEstructura.empleadoestructuraBeanSwingJInternalFrame.empleadoestructurasEliminados);
							this.jInternalFrameDetalleFormEstructura.historialpagonomiBeanSwingJInternalFrame.historialpagonomis.addAll(this.jInternalFrameDetalleFormEstructura.historialpagonomiBeanSwingJInternalFrame.historialpagonomisEliminados);
							this.jInternalFrameDetalleFormEstructura.asistenciadiariaBeanSwingJInternalFrame.asistenciadiarias.addAll(this.jInternalFrameDetalleFormEstructura.asistenciadiariaBeanSwingJInternalFrame.asistenciadiariasEliminados);
							this.jInternalFrameDetalleFormEstructura.funcionestrucBeanSwingJInternalFrame.funcionestrucs.addAll(this.jInternalFrameDetalleFormEstructura.funcionestrucBeanSwingJInternalFrame.funcionestrucsEliminados);
							this.jInternalFrameDetalleFormEstructura.solicitudreemplazoBeanSwingJInternalFrame.solicitudreemplazos.addAll(this.jInternalFrameDetalleFormEstructura.solicitudreemplazoBeanSwingJInternalFrame.solicitudreemplazosEliminados);
							this.jInternalFrameDetalleFormEstructura.solicitudhoraextraBeanSwingJInternalFrame.solicitudhoraextras.addAll(this.jInternalFrameDetalleFormEstructura.solicitudhoraextraBeanSwingJInternalFrame.solicitudhoraextrasEliminados);
							this.jInternalFrameDetalleFormEstructura.evaluacionnomiBeanSwingJInternalFrame.evaluacionnomis.addAll(this.jInternalFrameDetalleFormEstructura.evaluacionnomiBeanSwingJInternalFrame.evaluacionnomisEliminados);
							this.jInternalFrameDetalleFormEstructura.solicitudvacacionBeanSwingJInternalFrame.solicitudvacacions.addAll(this.jInternalFrameDetalleFormEstructura.solicitudvacacionBeanSwingJInternalFrame.solicitudvacacionsEliminados);
							this.jInternalFrameDetalleFormEstructura.responsableactivofijoBeanSwingJInternalFrame.responsableactivofijos.addAll(this.jInternalFrameDetalleFormEstructura.responsableactivofijoBeanSwingJInternalFrame.responsableactivofijosEliminados);
							this.jInternalFrameDetalleFormEstructura.rubroempleacuentacontableBeanSwingJInternalFrame.rubroempleacuentacontables.addAll(this.jInternalFrameDetalleFormEstructura.rubroempleacuentacontableBeanSwingJInternalFrame.rubroempleacuentacontablesEliminados);
						}
						//ARCHITECTURE
						
						if(!this.estructuraSessionBean.getEsGuardarRelacionado()) {
							//QUITAR FILA TOTAL
							//ARCHITECTURE
							if(Constantes.ISUSAEJBLOGICLAYER) {
							
								if(this.jInternalFrameDetalleFormEstructura.centrocostoestructuraBeanSwingJInternalFrame!=null && this.jInternalFrameDetalleFormEstructura.centrocostoestructuraBeanSwingJInternalFrame.conTotales) {/*this.jInternalFrameDetalleFormEstructura.centrocostoestructuraBeanSwingJInternalFrame.quitarFilaTotales();*/}
								if(this.jInternalFrameDetalleFormEstructura.planivacacionBeanSwingJInternalFrame!=null && this.jInternalFrameDetalleFormEstructura.planivacacionBeanSwingJInternalFrame.conTotales) {/*this.jInternalFrameDetalleFormEstructura.planivacacionBeanSwingJInternalFrame.quitarFilaTotales();*/}
								if(this.jInternalFrameDetalleFormEstructura.asistenciamensualBeanSwingJInternalFrame!=null && this.jInternalFrameDetalleFormEstructura.asistenciamensualBeanSwingJInternalFrame.conTotales) {/*this.jInternalFrameDetalleFormEstructura.asistenciamensualBeanSwingJInternalFrame.quitarFilaTotales();*/}
								if(this.jInternalFrameDetalleFormEstructura.empleadoprocesorubroBeanSwingJInternalFrame!=null && this.jInternalFrameDetalleFormEstructura.empleadoprocesorubroBeanSwingJInternalFrame.conTotales) {/*this.jInternalFrameDetalleFormEstructura.empleadoprocesorubroBeanSwingJInternalFrame.quitarFilaTotales();*/}
								if(this.jInternalFrameDetalleFormEstructura.empleadopagorubroBeanSwingJInternalFrame!=null && this.jInternalFrameDetalleFormEstructura.empleadopagorubroBeanSwingJInternalFrame.conTotales) {/*this.jInternalFrameDetalleFormEstructura.empleadopagorubroBeanSwingJInternalFrame.quitarFilaTotales();*/}
								if(this.jInternalFrameDetalleFormEstructura.provisionempleadoBeanSwingJInternalFrame!=null && this.jInternalFrameDetalleFormEstructura.provisionempleadoBeanSwingJInternalFrame.conTotales) {/*this.jInternalFrameDetalleFormEstructura.provisionempleadoBeanSwingJInternalFrame.quitarFilaTotales();*/}
								if(this.jInternalFrameDetalleFormEstructura.empleadoBeanSwingJInternalFrame!=null && this.jInternalFrameDetalleFormEstructura.empleadoBeanSwingJInternalFrame.conTotales) {/*this.jInternalFrameDetalleFormEstructura.empleadoBeanSwingJInternalFrame.quitarFilaTotales();*/}
								if(this.jInternalFrameDetalleFormEstructura.estructuraBeanSwingJInternalFrame!=null && this.jInternalFrameDetalleFormEstructura.estructuraBeanSwingJInternalFrame.conTotales) {/*this.jInternalFrameDetalleFormEstructura.estructuraBeanSwingJInternalFrame.quitarFilaTotales();*/}
								if(this.jInternalFrameDetalleFormEstructura.evaluacionempleadoBeanSwingJInternalFrame!=null && this.jInternalFrameDetalleFormEstructura.evaluacionempleadoBeanSwingJInternalFrame.conTotales) {/*this.jInternalFrameDetalleFormEstructura.evaluacionempleadoBeanSwingJInternalFrame.quitarFilaTotales();*/}
									if(this.jInternalFrameDetalleFormEstructura.evaluacionempleadoBeanSwingJInternalFrame.jInternalFrameDetalleFormEvaluacionEmpleado.calificacionempleadoBeanSwingJInternalFrame!=null && this.jInternalFrameDetalleFormEstructura.evaluacionempleadoBeanSwingJInternalFrame.jInternalFrameDetalleFormEvaluacionEmpleado.calificacionempleadoBeanSwingJInternalFrame.conTotales) {/*this.jInternalFrameDetalleFormEstructura.evaluacionempleadoBeanSwingJInternalFrame.jInternalFrameDetalleFormEvaluacionEmpleado.calificacionempleadoBeanSwingJInternalFrame.quitarFilaTotales();*/}
								if(this.jInternalFrameDetalleFormEstructura.empleadoimpuestorentaBeanSwingJInternalFrame!=null && this.jInternalFrameDetalleFormEstructura.empleadoimpuestorentaBeanSwingJInternalFrame.conTotales) {/*this.jInternalFrameDetalleFormEstructura.empleadoimpuestorentaBeanSwingJInternalFrame.quitarFilaTotales();*/}
								if(this.jInternalFrameDetalleFormEstructura.rubroestructuraBeanSwingJInternalFrame!=null && this.jInternalFrameDetalleFormEstructura.rubroestructuraBeanSwingJInternalFrame.conTotales) {/*this.jInternalFrameDetalleFormEstructura.rubroestructuraBeanSwingJInternalFrame.quitarFilaTotales();*/}
								if(this.jInternalFrameDetalleFormEstructura.cierrerolmensualBeanSwingJInternalFrame!=null && this.jInternalFrameDetalleFormEstructura.cierrerolmensualBeanSwingJInternalFrame.conTotales) {/*this.jInternalFrameDetalleFormEstructura.cierrerolmensualBeanSwingJInternalFrame.quitarFilaTotales();*/}
								if(this.jInternalFrameDetalleFormEstructura.formatonomiBeanSwingJInternalFrame!=null && this.jInternalFrameDetalleFormEstructura.formatonomiBeanSwingJInternalFrame.conTotales) {/*this.jInternalFrameDetalleFormEstructura.formatonomiBeanSwingJInternalFrame.quitarFilaTotales();*/}
									if(this.jInternalFrameDetalleFormEstructura.formatonomiBeanSwingJInternalFrame.jInternalFrameDetalleFormFormatoNomi.formatonomipreguntanomiBeanSwingJInternalFrame!=null && this.jInternalFrameDetalleFormEstructura.formatonomiBeanSwingJInternalFrame.jInternalFrameDetalleFormFormatoNomi.formatonomipreguntanomiBeanSwingJInternalFrame.conTotales) {/*this.jInternalFrameDetalleFormEstructura.formatonomiBeanSwingJInternalFrame.jInternalFrameDetalleFormFormatoNomi.formatonomipreguntanomiBeanSwingJInternalFrame.quitarFilaTotales();*/}
									if(this.jInternalFrameDetalleFormEstructura.formatonomiBeanSwingJInternalFrame.jInternalFrameDetalleFormFormatoNomi.formatonomipreguntanomiBeanSwingJInternalFrame.jInternalFrameDetalleFormFormatoNomiPreguntaNomi.calificacionempleadoBeanSwingJInternalFrame!=null && this.jInternalFrameDetalleFormEstructura.formatonomiBeanSwingJInternalFrame.jInternalFrameDetalleFormFormatoNomi.formatonomipreguntanomiBeanSwingJInternalFrame.jInternalFrameDetalleFormFormatoNomiPreguntaNomi.calificacionempleadoBeanSwingJInternalFrame.conTotales) {/*this.jInternalFrameDetalleFormEstructura.formatonomiBeanSwingJInternalFrame.jInternalFrameDetalleFormFormatoNomi.formatonomipreguntanomiBeanSwingJInternalFrame.jInternalFrameDetalleFormFormatoNomiPreguntaNomi.calificacionempleadoBeanSwingJInternalFrame.quitarFilaTotales();*/}
									if(this.jInternalFrameDetalleFormEstructura.formatonomiBeanSwingJInternalFrame.jInternalFrameDetalleFormFormatoNomi.formatonomifactornomiBeanSwingJInternalFrame!=null && this.jInternalFrameDetalleFormEstructura.formatonomiBeanSwingJInternalFrame.jInternalFrameDetalleFormFormatoNomi.formatonomifactornomiBeanSwingJInternalFrame.conTotales) {/*this.jInternalFrameDetalleFormEstructura.formatonomiBeanSwingJInternalFrame.jInternalFrameDetalleFormFormatoNomi.formatonomifactornomiBeanSwingJInternalFrame.quitarFilaTotales();*/}
									if(this.jInternalFrameDetalleFormEstructura.formatonomiBeanSwingJInternalFrame.jInternalFrameDetalleFormFormatoNomi.formatonomifactornomiBeanSwingJInternalFrame.jInternalFrameDetalleFormFormatoNomiFactorNomi.calificacionempleadoBeanSwingJInternalFrame!=null && this.jInternalFrameDetalleFormEstructura.formatonomiBeanSwingJInternalFrame.jInternalFrameDetalleFormFormatoNomi.formatonomifactornomiBeanSwingJInternalFrame.jInternalFrameDetalleFormFormatoNomiFactorNomi.calificacionempleadoBeanSwingJInternalFrame.conTotales) {/*this.jInternalFrameDetalleFormEstructura.formatonomiBeanSwingJInternalFrame.jInternalFrameDetalleFormFormatoNomi.formatonomifactornomiBeanSwingJInternalFrame.jInternalFrameDetalleFormFormatoNomiFactorNomi.calificacionempleadoBeanSwingJInternalFrame.quitarFilaTotales();*/}
									if(this.jInternalFrameDetalleFormEstructura.formatonomiBeanSwingJInternalFrame.jInternalFrameDetalleFormFormatoNomi.evaluacionnomiBeanSwingJInternalFrame!=null && this.jInternalFrameDetalleFormEstructura.formatonomiBeanSwingJInternalFrame.jInternalFrameDetalleFormFormatoNomi.evaluacionnomiBeanSwingJInternalFrame.conTotales) {/*this.jInternalFrameDetalleFormEstructura.formatonomiBeanSwingJInternalFrame.jInternalFrameDetalleFormFormatoNomi.evaluacionnomiBeanSwingJInternalFrame.quitarFilaTotales();*/}
									if(this.jInternalFrameDetalleFormEstructura.formatonomiBeanSwingJInternalFrame.jInternalFrameDetalleFormFormatoNomi.evaluacionnomiBeanSwingJInternalFrame.jInternalFrameDetalleFormEvaluacionNomi.detalleevaluacionnomiBeanSwingJInternalFrame!=null && this.jInternalFrameDetalleFormEstructura.formatonomiBeanSwingJInternalFrame.jInternalFrameDetalleFormFormatoNomi.evaluacionnomiBeanSwingJInternalFrame.jInternalFrameDetalleFormEvaluacionNomi.detalleevaluacionnomiBeanSwingJInternalFrame.conTotales) {/*this.jInternalFrameDetalleFormEstructura.formatonomiBeanSwingJInternalFrame.jInternalFrameDetalleFormFormatoNomi.evaluacionnomiBeanSwingJInternalFrame.jInternalFrameDetalleFormEvaluacionNomi.detalleevaluacionnomiBeanSwingJInternalFrame.quitarFilaTotales();*/}
									if(this.jInternalFrameDetalleFormEstructura.formatonomiBeanSwingJInternalFrame.jInternalFrameDetalleFormFormatoNomi.detalleevaluacionnomiBeanSwingJInternalFrame!=null && this.jInternalFrameDetalleFormEstructura.formatonomiBeanSwingJInternalFrame.jInternalFrameDetalleFormFormatoNomi.detalleevaluacionnomiBeanSwingJInternalFrame.conTotales) {/*this.jInternalFrameDetalleFormEstructura.formatonomiBeanSwingJInternalFrame.jInternalFrameDetalleFormFormatoNomi.detalleevaluacionnomiBeanSwingJInternalFrame.quitarFilaTotales();*/}
								if(this.jInternalFrameDetalleFormEstructura.empleadoestructuraBeanSwingJInternalFrame!=null && this.jInternalFrameDetalleFormEstructura.empleadoestructuraBeanSwingJInternalFrame.conTotales) {/*this.jInternalFrameDetalleFormEstructura.empleadoestructuraBeanSwingJInternalFrame.quitarFilaTotales();*/}
								if(this.jInternalFrameDetalleFormEstructura.historialpagonomiBeanSwingJInternalFrame!=null && this.jInternalFrameDetalleFormEstructura.historialpagonomiBeanSwingJInternalFrame.conTotales) {/*this.jInternalFrameDetalleFormEstructura.historialpagonomiBeanSwingJInternalFrame.quitarFilaTotales();*/}
								if(this.jInternalFrameDetalleFormEstructura.asistenciadiariaBeanSwingJInternalFrame!=null && this.jInternalFrameDetalleFormEstructura.asistenciadiariaBeanSwingJInternalFrame.conTotales) {/*this.jInternalFrameDetalleFormEstructura.asistenciadiariaBeanSwingJInternalFrame.quitarFilaTotales();*/}
								if(this.jInternalFrameDetalleFormEstructura.funcionestrucBeanSwingJInternalFrame!=null && this.jInternalFrameDetalleFormEstructura.funcionestrucBeanSwingJInternalFrame.conTotales) {/*this.jInternalFrameDetalleFormEstructura.funcionestrucBeanSwingJInternalFrame.quitarFilaTotales();*/}
								if(this.jInternalFrameDetalleFormEstructura.solicitudreemplazoBeanSwingJInternalFrame!=null && this.jInternalFrameDetalleFormEstructura.solicitudreemplazoBeanSwingJInternalFrame.conTotales) {/*this.jInternalFrameDetalleFormEstructura.solicitudreemplazoBeanSwingJInternalFrame.quitarFilaTotales();*/}
								if(this.jInternalFrameDetalleFormEstructura.solicitudhoraextraBeanSwingJInternalFrame!=null && this.jInternalFrameDetalleFormEstructura.solicitudhoraextraBeanSwingJInternalFrame.conTotales) {/*this.jInternalFrameDetalleFormEstructura.solicitudhoraextraBeanSwingJInternalFrame.quitarFilaTotales();*/}
								if(this.jInternalFrameDetalleFormEstructura.evaluacionnomiBeanSwingJInternalFrame!=null && this.jInternalFrameDetalleFormEstructura.evaluacionnomiBeanSwingJInternalFrame.conTotales) {/*this.jInternalFrameDetalleFormEstructura.evaluacionnomiBeanSwingJInternalFrame.quitarFilaTotales();*/}
									if(this.jInternalFrameDetalleFormEstructura.evaluacionnomiBeanSwingJInternalFrame.jInternalFrameDetalleFormEvaluacionNomi.detalleevaluacionnomiBeanSwingJInternalFrame!=null && this.jInternalFrameDetalleFormEstructura.evaluacionnomiBeanSwingJInternalFrame.jInternalFrameDetalleFormEvaluacionNomi.detalleevaluacionnomiBeanSwingJInternalFrame.conTotales) {/*this.jInternalFrameDetalleFormEstructura.evaluacionnomiBeanSwingJInternalFrame.jInternalFrameDetalleFormEvaluacionNomi.detalleevaluacionnomiBeanSwingJInternalFrame.quitarFilaTotales();*/}
								if(this.jInternalFrameDetalleFormEstructura.solicitudvacacionBeanSwingJInternalFrame!=null && this.jInternalFrameDetalleFormEstructura.solicitudvacacionBeanSwingJInternalFrame.conTotales) {/*this.jInternalFrameDetalleFormEstructura.solicitudvacacionBeanSwingJInternalFrame.quitarFilaTotales();*/}
								if(this.jInternalFrameDetalleFormEstructura.responsableactivofijoBeanSwingJInternalFrame!=null && this.jInternalFrameDetalleFormEstructura.responsableactivofijoBeanSwingJInternalFrame.conTotales) {/*this.jInternalFrameDetalleFormEstructura.responsableactivofijoBeanSwingJInternalFrame.quitarFilaTotales();*/}
								if(this.jInternalFrameDetalleFormEstructura.rubroempleacuentacontableBeanSwingJInternalFrame!=null && this.jInternalFrameDetalleFormEstructura.rubroempleacuentacontableBeanSwingJInternalFrame.conTotales) {/*this.jInternalFrameDetalleFormEstructura.rubroempleacuentacontableBeanSwingJInternalFrame.quitarFilaTotales();*/}
							} else if(Constantes.ISUSAEJBREMOTE ||Constantes.ISUSAEJBHOME) {
							
								if(this.jInternalFrameDetalleFormEstructura.centrocostoestructuraBeanSwingJInternalFrame!=null && this.jInternalFrameDetalleFormEstructura.centrocostoestructuraBeanSwingJInternalFrame.conTotales) {/*this.jInternalFrameDetalleFormEstructura.centrocostoestructuraBeanSwingJInternalFrame.quitarFilaTotales();*/}
								if(this.jInternalFrameDetalleFormEstructura.planivacacionBeanSwingJInternalFrame!=null && this.jInternalFrameDetalleFormEstructura.planivacacionBeanSwingJInternalFrame.conTotales) {/*this.jInternalFrameDetalleFormEstructura.planivacacionBeanSwingJInternalFrame.quitarFilaTotales();*/}
								if(this.jInternalFrameDetalleFormEstructura.asistenciamensualBeanSwingJInternalFrame!=null && this.jInternalFrameDetalleFormEstructura.asistenciamensualBeanSwingJInternalFrame.conTotales) {/*this.jInternalFrameDetalleFormEstructura.asistenciamensualBeanSwingJInternalFrame.quitarFilaTotales();*/}
								if(this.jInternalFrameDetalleFormEstructura.empleadoprocesorubroBeanSwingJInternalFrame!=null && this.jInternalFrameDetalleFormEstructura.empleadoprocesorubroBeanSwingJInternalFrame.conTotales) {/*this.jInternalFrameDetalleFormEstructura.empleadoprocesorubroBeanSwingJInternalFrame.quitarFilaTotales();*/}
								if(this.jInternalFrameDetalleFormEstructura.empleadopagorubroBeanSwingJInternalFrame!=null && this.jInternalFrameDetalleFormEstructura.empleadopagorubroBeanSwingJInternalFrame.conTotales) {/*this.jInternalFrameDetalleFormEstructura.empleadopagorubroBeanSwingJInternalFrame.quitarFilaTotales();*/}
								if(this.jInternalFrameDetalleFormEstructura.provisionempleadoBeanSwingJInternalFrame!=null && this.jInternalFrameDetalleFormEstructura.provisionempleadoBeanSwingJInternalFrame.conTotales) {/*this.jInternalFrameDetalleFormEstructura.provisionempleadoBeanSwingJInternalFrame.quitarFilaTotales();*/}
								if(this.jInternalFrameDetalleFormEstructura.empleadoBeanSwingJInternalFrame!=null && this.jInternalFrameDetalleFormEstructura.empleadoBeanSwingJInternalFrame.conTotales) {/*this.jInternalFrameDetalleFormEstructura.empleadoBeanSwingJInternalFrame.quitarFilaTotales();*/}
								if(this.jInternalFrameDetalleFormEstructura.estructuraBeanSwingJInternalFrame!=null && this.jInternalFrameDetalleFormEstructura.estructuraBeanSwingJInternalFrame.conTotales) {/*this.jInternalFrameDetalleFormEstructura.estructuraBeanSwingJInternalFrame.quitarFilaTotales();*/}
								if(this.jInternalFrameDetalleFormEstructura.evaluacionempleadoBeanSwingJInternalFrame!=null && this.jInternalFrameDetalleFormEstructura.evaluacionempleadoBeanSwingJInternalFrame.conTotales) {/*this.jInternalFrameDetalleFormEstructura.evaluacionempleadoBeanSwingJInternalFrame.quitarFilaTotales();*/}
									if(this.jInternalFrameDetalleFormEstructura.evaluacionempleadoBeanSwingJInternalFrame.jInternalFrameDetalleFormEvaluacionEmpleado.calificacionempleadoBeanSwingJInternalFrame!=null && this.jInternalFrameDetalleFormEstructura.evaluacionempleadoBeanSwingJInternalFrame.jInternalFrameDetalleFormEvaluacionEmpleado.calificacionempleadoBeanSwingJInternalFrame.conTotales) {/*this.jInternalFrameDetalleFormEstructura.evaluacionempleadoBeanSwingJInternalFrame.jInternalFrameDetalleFormEvaluacionEmpleado.calificacionempleadoBeanSwingJInternalFrame.quitarFilaTotales();*/}
								if(this.jInternalFrameDetalleFormEstructura.empleadoimpuestorentaBeanSwingJInternalFrame!=null && this.jInternalFrameDetalleFormEstructura.empleadoimpuestorentaBeanSwingJInternalFrame.conTotales) {/*this.jInternalFrameDetalleFormEstructura.empleadoimpuestorentaBeanSwingJInternalFrame.quitarFilaTotales();*/}
								if(this.jInternalFrameDetalleFormEstructura.rubroestructuraBeanSwingJInternalFrame!=null && this.jInternalFrameDetalleFormEstructura.rubroestructuraBeanSwingJInternalFrame.conTotales) {/*this.jInternalFrameDetalleFormEstructura.rubroestructuraBeanSwingJInternalFrame.quitarFilaTotales();*/}
								if(this.jInternalFrameDetalleFormEstructura.cierrerolmensualBeanSwingJInternalFrame!=null && this.jInternalFrameDetalleFormEstructura.cierrerolmensualBeanSwingJInternalFrame.conTotales) {/*this.jInternalFrameDetalleFormEstructura.cierrerolmensualBeanSwingJInternalFrame.quitarFilaTotales();*/}
								if(this.jInternalFrameDetalleFormEstructura.formatonomiBeanSwingJInternalFrame!=null && this.jInternalFrameDetalleFormEstructura.formatonomiBeanSwingJInternalFrame.conTotales) {/*this.jInternalFrameDetalleFormEstructura.formatonomiBeanSwingJInternalFrame.quitarFilaTotales();*/}
									if(this.jInternalFrameDetalleFormEstructura.formatonomiBeanSwingJInternalFrame.jInternalFrameDetalleFormFormatoNomi.formatonomipreguntanomiBeanSwingJInternalFrame!=null && this.jInternalFrameDetalleFormEstructura.formatonomiBeanSwingJInternalFrame.jInternalFrameDetalleFormFormatoNomi.formatonomipreguntanomiBeanSwingJInternalFrame.conTotales) {/*this.jInternalFrameDetalleFormEstructura.formatonomiBeanSwingJInternalFrame.jInternalFrameDetalleFormFormatoNomi.formatonomipreguntanomiBeanSwingJInternalFrame.quitarFilaTotales();*/}
									if(this.jInternalFrameDetalleFormEstructura.formatonomiBeanSwingJInternalFrame.jInternalFrameDetalleFormFormatoNomi.formatonomipreguntanomiBeanSwingJInternalFrame.jInternalFrameDetalleFormFormatoNomiPreguntaNomi.calificacionempleadoBeanSwingJInternalFrame!=null && this.jInternalFrameDetalleFormEstructura.formatonomiBeanSwingJInternalFrame.jInternalFrameDetalleFormFormatoNomi.formatonomipreguntanomiBeanSwingJInternalFrame.jInternalFrameDetalleFormFormatoNomiPreguntaNomi.calificacionempleadoBeanSwingJInternalFrame.conTotales) {/*this.jInternalFrameDetalleFormEstructura.formatonomiBeanSwingJInternalFrame.jInternalFrameDetalleFormFormatoNomi.formatonomipreguntanomiBeanSwingJInternalFrame.jInternalFrameDetalleFormFormatoNomiPreguntaNomi.calificacionempleadoBeanSwingJInternalFrame.quitarFilaTotales();*/}
									if(this.jInternalFrameDetalleFormEstructura.formatonomiBeanSwingJInternalFrame.jInternalFrameDetalleFormFormatoNomi.formatonomifactornomiBeanSwingJInternalFrame!=null && this.jInternalFrameDetalleFormEstructura.formatonomiBeanSwingJInternalFrame.jInternalFrameDetalleFormFormatoNomi.formatonomifactornomiBeanSwingJInternalFrame.conTotales) {/*this.jInternalFrameDetalleFormEstructura.formatonomiBeanSwingJInternalFrame.jInternalFrameDetalleFormFormatoNomi.formatonomifactornomiBeanSwingJInternalFrame.quitarFilaTotales();*/}
									if(this.jInternalFrameDetalleFormEstructura.formatonomiBeanSwingJInternalFrame.jInternalFrameDetalleFormFormatoNomi.formatonomifactornomiBeanSwingJInternalFrame.jInternalFrameDetalleFormFormatoNomiFactorNomi.calificacionempleadoBeanSwingJInternalFrame!=null && this.jInternalFrameDetalleFormEstructura.formatonomiBeanSwingJInternalFrame.jInternalFrameDetalleFormFormatoNomi.formatonomifactornomiBeanSwingJInternalFrame.jInternalFrameDetalleFormFormatoNomiFactorNomi.calificacionempleadoBeanSwingJInternalFrame.conTotales) {/*this.jInternalFrameDetalleFormEstructura.formatonomiBeanSwingJInternalFrame.jInternalFrameDetalleFormFormatoNomi.formatonomifactornomiBeanSwingJInternalFrame.jInternalFrameDetalleFormFormatoNomiFactorNomi.calificacionempleadoBeanSwingJInternalFrame.quitarFilaTotales();*/}
									if(this.jInternalFrameDetalleFormEstructura.formatonomiBeanSwingJInternalFrame.jInternalFrameDetalleFormFormatoNomi.evaluacionnomiBeanSwingJInternalFrame!=null && this.jInternalFrameDetalleFormEstructura.formatonomiBeanSwingJInternalFrame.jInternalFrameDetalleFormFormatoNomi.evaluacionnomiBeanSwingJInternalFrame.conTotales) {/*this.jInternalFrameDetalleFormEstructura.formatonomiBeanSwingJInternalFrame.jInternalFrameDetalleFormFormatoNomi.evaluacionnomiBeanSwingJInternalFrame.quitarFilaTotales();*/}
									if(this.jInternalFrameDetalleFormEstructura.formatonomiBeanSwingJInternalFrame.jInternalFrameDetalleFormFormatoNomi.evaluacionnomiBeanSwingJInternalFrame.jInternalFrameDetalleFormEvaluacionNomi.detalleevaluacionnomiBeanSwingJInternalFrame!=null && this.jInternalFrameDetalleFormEstructura.formatonomiBeanSwingJInternalFrame.jInternalFrameDetalleFormFormatoNomi.evaluacionnomiBeanSwingJInternalFrame.jInternalFrameDetalleFormEvaluacionNomi.detalleevaluacionnomiBeanSwingJInternalFrame.conTotales) {/*this.jInternalFrameDetalleFormEstructura.formatonomiBeanSwingJInternalFrame.jInternalFrameDetalleFormFormatoNomi.evaluacionnomiBeanSwingJInternalFrame.jInternalFrameDetalleFormEvaluacionNomi.detalleevaluacionnomiBeanSwingJInternalFrame.quitarFilaTotales();*/}
									if(this.jInternalFrameDetalleFormEstructura.formatonomiBeanSwingJInternalFrame.jInternalFrameDetalleFormFormatoNomi.detalleevaluacionnomiBeanSwingJInternalFrame!=null && this.jInternalFrameDetalleFormEstructura.formatonomiBeanSwingJInternalFrame.jInternalFrameDetalleFormFormatoNomi.detalleevaluacionnomiBeanSwingJInternalFrame.conTotales) {/*this.jInternalFrameDetalleFormEstructura.formatonomiBeanSwingJInternalFrame.jInternalFrameDetalleFormFormatoNomi.detalleevaluacionnomiBeanSwingJInternalFrame.quitarFilaTotales();*/}
								if(this.jInternalFrameDetalleFormEstructura.empleadoestructuraBeanSwingJInternalFrame!=null && this.jInternalFrameDetalleFormEstructura.empleadoestructuraBeanSwingJInternalFrame.conTotales) {/*this.jInternalFrameDetalleFormEstructura.empleadoestructuraBeanSwingJInternalFrame.quitarFilaTotales();*/}
								if(this.jInternalFrameDetalleFormEstructura.historialpagonomiBeanSwingJInternalFrame!=null && this.jInternalFrameDetalleFormEstructura.historialpagonomiBeanSwingJInternalFrame.conTotales) {/*this.jInternalFrameDetalleFormEstructura.historialpagonomiBeanSwingJInternalFrame.quitarFilaTotales();*/}
								if(this.jInternalFrameDetalleFormEstructura.asistenciadiariaBeanSwingJInternalFrame!=null && this.jInternalFrameDetalleFormEstructura.asistenciadiariaBeanSwingJInternalFrame.conTotales) {/*this.jInternalFrameDetalleFormEstructura.asistenciadiariaBeanSwingJInternalFrame.quitarFilaTotales();*/}
								if(this.jInternalFrameDetalleFormEstructura.funcionestrucBeanSwingJInternalFrame!=null && this.jInternalFrameDetalleFormEstructura.funcionestrucBeanSwingJInternalFrame.conTotales) {/*this.jInternalFrameDetalleFormEstructura.funcionestrucBeanSwingJInternalFrame.quitarFilaTotales();*/}
								if(this.jInternalFrameDetalleFormEstructura.solicitudreemplazoBeanSwingJInternalFrame!=null && this.jInternalFrameDetalleFormEstructura.solicitudreemplazoBeanSwingJInternalFrame.conTotales) {/*this.jInternalFrameDetalleFormEstructura.solicitudreemplazoBeanSwingJInternalFrame.quitarFilaTotales();*/}
								if(this.jInternalFrameDetalleFormEstructura.solicitudhoraextraBeanSwingJInternalFrame!=null && this.jInternalFrameDetalleFormEstructura.solicitudhoraextraBeanSwingJInternalFrame.conTotales) {/*this.jInternalFrameDetalleFormEstructura.solicitudhoraextraBeanSwingJInternalFrame.quitarFilaTotales();*/}
								if(this.jInternalFrameDetalleFormEstructura.evaluacionnomiBeanSwingJInternalFrame!=null && this.jInternalFrameDetalleFormEstructura.evaluacionnomiBeanSwingJInternalFrame.conTotales) {/*this.jInternalFrameDetalleFormEstructura.evaluacionnomiBeanSwingJInternalFrame.quitarFilaTotales();*/}
									if(this.jInternalFrameDetalleFormEstructura.evaluacionnomiBeanSwingJInternalFrame.jInternalFrameDetalleFormEvaluacionNomi.detalleevaluacionnomiBeanSwingJInternalFrame!=null && this.jInternalFrameDetalleFormEstructura.evaluacionnomiBeanSwingJInternalFrame.jInternalFrameDetalleFormEvaluacionNomi.detalleevaluacionnomiBeanSwingJInternalFrame.conTotales) {/*this.jInternalFrameDetalleFormEstructura.evaluacionnomiBeanSwingJInternalFrame.jInternalFrameDetalleFormEvaluacionNomi.detalleevaluacionnomiBeanSwingJInternalFrame.quitarFilaTotales();*/}
								if(this.jInternalFrameDetalleFormEstructura.solicitudvacacionBeanSwingJInternalFrame!=null && this.jInternalFrameDetalleFormEstructura.solicitudvacacionBeanSwingJInternalFrame.conTotales) {/*this.jInternalFrameDetalleFormEstructura.solicitudvacacionBeanSwingJInternalFrame.quitarFilaTotales();*/}
								if(this.jInternalFrameDetalleFormEstructura.responsableactivofijoBeanSwingJInternalFrame!=null && this.jInternalFrameDetalleFormEstructura.responsableactivofijoBeanSwingJInternalFrame.conTotales) {/*this.jInternalFrameDetalleFormEstructura.responsableactivofijoBeanSwingJInternalFrame.quitarFilaTotales();*/}
								if(this.jInternalFrameDetalleFormEstructura.rubroempleacuentacontableBeanSwingJInternalFrame!=null && this.jInternalFrameDetalleFormEstructura.rubroempleacuentacontableBeanSwingJInternalFrame.conTotales) {/*this.jInternalFrameDetalleFormEstructura.rubroempleacuentacontableBeanSwingJInternalFrame.quitarFilaTotales();*/}	
							}
							//ARCHITECTURE
							
							//ARCHITECTURE
							if(Constantes.ISUSAEJBLOGICLAYER) {
								estructuraLogic.saveEstructuraRelaciones(estructuraAux,this.jInternalFrameDetalleFormEstructura.centrocostoestructuraBeanSwingJInternalFrame.centrocostoestructuraLogic.getCentroCostoEstructuras(),this.jInternalFrameDetalleFormEstructura.planivacacionBeanSwingJInternalFrame.planivacacionLogic.getPlaniVacacions(),this.jInternalFrameDetalleFormEstructura.asistenciamensualBeanSwingJInternalFrame.asistenciamensualLogic.getAsistenciaMensuals(),this.jInternalFrameDetalleFormEstructura.empleadoprocesorubroBeanSwingJInternalFrame.empleadoprocesorubroLogic.getEmpleadoProcesoRubros(),this.jInternalFrameDetalleFormEstructura.empleadopagorubroBeanSwingJInternalFrame.empleadopagorubroLogic.getEmpleadoPagoRubros(),this.jInternalFrameDetalleFormEstructura.provisionempleadoBeanSwingJInternalFrame.provisionempleadoLogic.getProvisionEmpleados(),this.jInternalFrameDetalleFormEstructura.empleadoBeanSwingJInternalFrame.empleadoLogic.getEmpleados(),this.jInternalFrameDetalleFormEstructura.estructuraBeanSwingJInternalFrame.estructuraLogic.getEstructuras(),this.jInternalFrameDetalleFormEstructura.evaluacionempleadoBeanSwingJInternalFrame.evaluacionempleadoLogic.getEvaluacionEmpleados(),this.jInternalFrameDetalleFormEstructura.empleadoimpuestorentaBeanSwingJInternalFrame.empleadoimpuestorentaLogic.getEmpleadoImpuestoRentas(),this.jInternalFrameDetalleFormEstructura.rubroestructuraBeanSwingJInternalFrame.rubroestructuraLogic.getRubroEstructuras(),this.jInternalFrameDetalleFormEstructura.cierrerolmensualBeanSwingJInternalFrame.cierrerolmensualLogic.getCierreRolMensuals(),this.jInternalFrameDetalleFormEstructura.formatonomiBeanSwingJInternalFrame.formatonomiLogic.getFormatoNomis(),this.jInternalFrameDetalleFormEstructura.empleadoestructuraBeanSwingJInternalFrame.empleadoestructuraLogic.getEmpleadoEstructuras(),this.jInternalFrameDetalleFormEstructura.historialpagonomiBeanSwingJInternalFrame.historialpagonomiLogic.getHistorialPagoNomis(),this.jInternalFrameDetalleFormEstructura.asistenciadiariaBeanSwingJInternalFrame.asistenciadiariaLogic.getAsistenciaDiarias(),this.jInternalFrameDetalleFormEstructura.funcionestrucBeanSwingJInternalFrame.funcionestrucLogic.getFuncionEstrucs(),this.jInternalFrameDetalleFormEstructura.solicitudreemplazoBeanSwingJInternalFrame.solicitudreemplazoLogic.getSolicitudReemplazos(),this.jInternalFrameDetalleFormEstructura.solicitudhoraextraBeanSwingJInternalFrame.solicitudhoraextraLogic.getSolicitudHoraExtras(),this.jInternalFrameDetalleFormEstructura.evaluacionnomiBeanSwingJInternalFrame.evaluacionnomiLogic.getEvaluacionNomis(),this.jInternalFrameDetalleFormEstructura.solicitudvacacionBeanSwingJInternalFrame.solicitudvacacionLogic.getSolicitudVacacions(),this.jInternalFrameDetalleFormEstructura.responsableactivofijoBeanSwingJInternalFrame.responsableactivofijoLogic.getResponsableActivoFijos(),this.jInternalFrameDetalleFormEstructura.rubroempleacuentacontableBeanSwingJInternalFrame.rubroempleacuentacontableLogic.getRubroEmpleaCuentaContables());//WithConnection
								//estructuraLogic.getSetVersionRowEstructuras();//WithConnection
							} else if(Constantes.ISUSAEJBREMOTE) {
							} else if(Constantes.ISUSAEJBHOME) {
							}
							//ARCHITECTURE
							
							//TALVEZ ESTA DEMAS POR SER UPDATE
							//POR BUG: EL OBJETO ACTUAL SE PERDIA, POR LO QUE SE GUARDA TAMBIEN VALORES EN AUX Y LUEGO DESPUES DEL MENSAJE SE HACE REFERENCIA EL OBJETO ACTUAL AL AUX
							this.bugActualizarReferenciaActual(this.estructura,estructuraAux);
					
							//ARCHITECTURE
							if(Constantes.ISUSAEJBLOGICLAYER) {
								
							this.jInternalFrameDetalleFormEstructura.centrocostoestructuraBeanSwingJInternalFrame.centrocostoestructuraLogic.setCentroCostoEstructuras(new ArrayList<CentroCostoEstructura>());
							this.jInternalFrameDetalleFormEstructura.planivacacionBeanSwingJInternalFrame.planivacacionLogic.setPlaniVacacions(new ArrayList<PlaniVacacion>());
							this.jInternalFrameDetalleFormEstructura.asistenciamensualBeanSwingJInternalFrame.asistenciamensualLogic.setAsistenciaMensuals(new ArrayList<AsistenciaMensual>());
							this.jInternalFrameDetalleFormEstructura.empleadoprocesorubroBeanSwingJInternalFrame.empleadoprocesorubroLogic.setEmpleadoProcesoRubros(new ArrayList<EmpleadoProcesoRubro>());
							this.jInternalFrameDetalleFormEstructura.empleadopagorubroBeanSwingJInternalFrame.empleadopagorubroLogic.setEmpleadoPagoRubros(new ArrayList<EmpleadoPagoRubro>());
							this.jInternalFrameDetalleFormEstructura.provisionempleadoBeanSwingJInternalFrame.provisionempleadoLogic.setProvisionEmpleados(new ArrayList<ProvisionEmpleado>());
							this.jInternalFrameDetalleFormEstructura.empleadoBeanSwingJInternalFrame.empleadoLogic.setEmpleados(new ArrayList<Empleado>());
							this.jInternalFrameDetalleFormEstructura.estructuraBeanSwingJInternalFrame.estructuraLogic.setEstructuras(new ArrayList<Estructura>());
							this.jInternalFrameDetalleFormEstructura.evaluacionempleadoBeanSwingJInternalFrame.evaluacionempleadoLogic.setEvaluacionEmpleados(new ArrayList<EvaluacionEmpleado>());
							this.jInternalFrameDetalleFormEstructura.empleadoimpuestorentaBeanSwingJInternalFrame.empleadoimpuestorentaLogic.setEmpleadoImpuestoRentas(new ArrayList<EmpleadoImpuestoRenta>());
							this.jInternalFrameDetalleFormEstructura.rubroestructuraBeanSwingJInternalFrame.rubroestructuraLogic.setRubroEstructuras(new ArrayList<RubroEstructura>());
							this.jInternalFrameDetalleFormEstructura.cierrerolmensualBeanSwingJInternalFrame.cierrerolmensualLogic.setCierreRolMensuals(new ArrayList<CierreRolMensual>());
							this.jInternalFrameDetalleFormEstructura.formatonomiBeanSwingJInternalFrame.formatonomiLogic.setFormatoNomis(new ArrayList<FormatoNomi>());
							this.jInternalFrameDetalleFormEstructura.empleadoestructuraBeanSwingJInternalFrame.empleadoestructuraLogic.setEmpleadoEstructuras(new ArrayList<EmpleadoEstructura>());
							this.jInternalFrameDetalleFormEstructura.historialpagonomiBeanSwingJInternalFrame.historialpagonomiLogic.setHistorialPagoNomis(new ArrayList<HistorialPagoNomi>());
							this.jInternalFrameDetalleFormEstructura.asistenciadiariaBeanSwingJInternalFrame.asistenciadiariaLogic.setAsistenciaDiarias(new ArrayList<AsistenciaDiaria>());
							this.jInternalFrameDetalleFormEstructura.funcionestrucBeanSwingJInternalFrame.funcionestrucLogic.setFuncionEstrucs(new ArrayList<FuncionEstruc>());
							this.jInternalFrameDetalleFormEstructura.solicitudreemplazoBeanSwingJInternalFrame.solicitudreemplazoLogic.setSolicitudReemplazos(new ArrayList<SolicitudReemplazo>());
							this.jInternalFrameDetalleFormEstructura.solicitudhoraextraBeanSwingJInternalFrame.solicitudhoraextraLogic.setSolicitudHoraExtras(new ArrayList<SolicitudHoraExtra>());
							this.jInternalFrameDetalleFormEstructura.evaluacionnomiBeanSwingJInternalFrame.evaluacionnomiLogic.setEvaluacionNomis(new ArrayList<EvaluacionNomi>());
							this.jInternalFrameDetalleFormEstructura.solicitudvacacionBeanSwingJInternalFrame.solicitudvacacionLogic.setSolicitudVacacions(new ArrayList<SolicitudVacacion>());
							this.jInternalFrameDetalleFormEstructura.responsableactivofijoBeanSwingJInternalFrame.responsableactivofijoLogic.setResponsableActivoFijos(new ArrayList<ResponsableActivoFijo>());
							this.jInternalFrameDetalleFormEstructura.rubroempleacuentacontableBeanSwingJInternalFrame.rubroempleacuentacontableLogic.setRubroEmpleaCuentaContables(new ArrayList<RubroEmpleaCuentaContable>());
							} else if(Constantes.ISUSAEJBREMOTE ||Constantes.ISUSAEJBHOME) {
								
							this.jInternalFrameDetalleFormEstructura.centrocostoestructuraBeanSwingJInternalFrame.centrocostoestructuras= new ArrayList<CentroCostoEstructura>();
							this.jInternalFrameDetalleFormEstructura.planivacacionBeanSwingJInternalFrame.planivacacions= new ArrayList<PlaniVacacion>();
							this.jInternalFrameDetalleFormEstructura.asistenciamensualBeanSwingJInternalFrame.asistenciamensuals= new ArrayList<AsistenciaMensual>();
							this.jInternalFrameDetalleFormEstructura.empleadoprocesorubroBeanSwingJInternalFrame.empleadoprocesorubros= new ArrayList<EmpleadoProcesoRubro>();
							this.jInternalFrameDetalleFormEstructura.empleadopagorubroBeanSwingJInternalFrame.empleadopagorubros= new ArrayList<EmpleadoPagoRubro>();
							this.jInternalFrameDetalleFormEstructura.provisionempleadoBeanSwingJInternalFrame.provisionempleados= new ArrayList<ProvisionEmpleado>();
							this.jInternalFrameDetalleFormEstructura.empleadoBeanSwingJInternalFrame.empleados= new ArrayList<Empleado>();
							this.jInternalFrameDetalleFormEstructura.estructuraBeanSwingJInternalFrame.estructuras= new ArrayList<Estructura>();
							this.jInternalFrameDetalleFormEstructura.evaluacionempleadoBeanSwingJInternalFrame.evaluacionempleados= new ArrayList<EvaluacionEmpleado>();
							this.jInternalFrameDetalleFormEstructura.empleadoimpuestorentaBeanSwingJInternalFrame.empleadoimpuestorentas= new ArrayList<EmpleadoImpuestoRenta>();
							this.jInternalFrameDetalleFormEstructura.rubroestructuraBeanSwingJInternalFrame.rubroestructuras= new ArrayList<RubroEstructura>();
							this.jInternalFrameDetalleFormEstructura.cierrerolmensualBeanSwingJInternalFrame.cierrerolmensuals= new ArrayList<CierreRolMensual>();
							this.jInternalFrameDetalleFormEstructura.formatonomiBeanSwingJInternalFrame.formatonomis= new ArrayList<FormatoNomi>();
							this.jInternalFrameDetalleFormEstructura.empleadoestructuraBeanSwingJInternalFrame.empleadoestructuras= new ArrayList<EmpleadoEstructura>();
							this.jInternalFrameDetalleFormEstructura.historialpagonomiBeanSwingJInternalFrame.historialpagonomis= new ArrayList<HistorialPagoNomi>();
							this.jInternalFrameDetalleFormEstructura.asistenciadiariaBeanSwingJInternalFrame.asistenciadiarias= new ArrayList<AsistenciaDiaria>();
							this.jInternalFrameDetalleFormEstructura.funcionestrucBeanSwingJInternalFrame.funcionestrucs= new ArrayList<FuncionEstruc>();
							this.jInternalFrameDetalleFormEstructura.solicitudreemplazoBeanSwingJInternalFrame.solicitudreemplazos= new ArrayList<SolicitudReemplazo>();
							this.jInternalFrameDetalleFormEstructura.solicitudhoraextraBeanSwingJInternalFrame.solicitudhoraextras= new ArrayList<SolicitudHoraExtra>();
							this.jInternalFrameDetalleFormEstructura.evaluacionnomiBeanSwingJInternalFrame.evaluacionnomis= new ArrayList<EvaluacionNomi>();
							this.jInternalFrameDetalleFormEstructura.solicitudvacacionBeanSwingJInternalFrame.solicitudvacacions= new ArrayList<SolicitudVacacion>();
							this.jInternalFrameDetalleFormEstructura.responsableactivofijoBeanSwingJInternalFrame.responsableactivofijos= new ArrayList<ResponsableActivoFijo>();
							this.jInternalFrameDetalleFormEstructura.rubroempleacuentacontableBeanSwingJInternalFrame.rubroempleacuentacontables= new ArrayList<RubroEmpleaCuentaContable>();
							}
							//ARCHITECTURE
						} else {
							
							

							if(this.jInternalFrameDetalleFormEstructura.centrocostoestructuraBeanSwingJInternalFrame!=null && this.jInternalFrameDetalleFormEstructura.centrocostoestructuraBeanSwingJInternalFrame.conTotales) {this.jInternalFrameDetalleFormEstructura.centrocostoestructuraBeanSwingJInternalFrame.quitarFilaTotales();}
							estructuraAux.setCentroCostoEstructuras(this.jInternalFrameDetalleFormEstructura.centrocostoestructuraBeanSwingJInternalFrame.centrocostoestructuraLogic.getCentroCostoEstructuras());

							if(this.jInternalFrameDetalleFormEstructura.planivacacionBeanSwingJInternalFrame!=null && this.jInternalFrameDetalleFormEstructura.planivacacionBeanSwingJInternalFrame.conTotales) {this.jInternalFrameDetalleFormEstructura.planivacacionBeanSwingJInternalFrame.quitarFilaTotales();}
							estructuraAux.setPlaniVacacionCargos(this.jInternalFrameDetalleFormEstructura.planivacacionBeanSwingJInternalFrame.planivacacionLogic.getPlaniVacacions());

							if(this.jInternalFrameDetalleFormEstructura.asistenciamensualBeanSwingJInternalFrame!=null && this.jInternalFrameDetalleFormEstructura.asistenciamensualBeanSwingJInternalFrame.conTotales) {this.jInternalFrameDetalleFormEstructura.asistenciamensualBeanSwingJInternalFrame.quitarFilaTotales();}
							estructuraAux.setAsistenciaMensuals(this.jInternalFrameDetalleFormEstructura.asistenciamensualBeanSwingJInternalFrame.asistenciamensualLogic.getAsistenciaMensuals());

							if(this.jInternalFrameDetalleFormEstructura.empleadoprocesorubroBeanSwingJInternalFrame!=null && this.jInternalFrameDetalleFormEstructura.empleadoprocesorubroBeanSwingJInternalFrame.conTotales) {this.jInternalFrameDetalleFormEstructura.empleadoprocesorubroBeanSwingJInternalFrame.quitarFilaTotales();}
							estructuraAux.setEmpleadoProcesoRubros(this.jInternalFrameDetalleFormEstructura.empleadoprocesorubroBeanSwingJInternalFrame.empleadoprocesorubroLogic.getEmpleadoProcesoRubros());

							if(this.jInternalFrameDetalleFormEstructura.empleadopagorubroBeanSwingJInternalFrame!=null && this.jInternalFrameDetalleFormEstructura.empleadopagorubroBeanSwingJInternalFrame.conTotales) {this.jInternalFrameDetalleFormEstructura.empleadopagorubroBeanSwingJInternalFrame.quitarFilaTotales();}
							estructuraAux.setEmpleadoPagoRubros(this.jInternalFrameDetalleFormEstructura.empleadopagorubroBeanSwingJInternalFrame.empleadopagorubroLogic.getEmpleadoPagoRubros());

							if(this.jInternalFrameDetalleFormEstructura.provisionempleadoBeanSwingJInternalFrame!=null && this.jInternalFrameDetalleFormEstructura.provisionempleadoBeanSwingJInternalFrame.conTotales) {this.jInternalFrameDetalleFormEstructura.provisionempleadoBeanSwingJInternalFrame.quitarFilaTotales();}
							estructuraAux.setProvisionEmpleados(this.jInternalFrameDetalleFormEstructura.provisionempleadoBeanSwingJInternalFrame.provisionempleadoLogic.getProvisionEmpleados());

							if(this.jInternalFrameDetalleFormEstructura.empleadoBeanSwingJInternalFrame!=null && this.jInternalFrameDetalleFormEstructura.empleadoBeanSwingJInternalFrame.conTotales) {this.jInternalFrameDetalleFormEstructura.empleadoBeanSwingJInternalFrame.quitarFilaTotales();}
							estructuraAux.setEmpleados(this.jInternalFrameDetalleFormEstructura.empleadoBeanSwingJInternalFrame.empleadoLogic.getEmpleados());

							if(this.jInternalFrameDetalleFormEstructura.estructuraBeanSwingJInternalFrame!=null && this.jInternalFrameDetalleFormEstructura.estructuraBeanSwingJInternalFrame.conTotales) {this.jInternalFrameDetalleFormEstructura.estructuraBeanSwingJInternalFrame.quitarFilaTotales();}
							estructuraAux.setEstructuras(this.jInternalFrameDetalleFormEstructura.estructuraBeanSwingJInternalFrame.estructuraLogic.getEstructuras());

							if(this.jInternalFrameDetalleFormEstructura.evaluacionempleadoBeanSwingJInternalFrame!=null && this.jInternalFrameDetalleFormEstructura.evaluacionempleadoBeanSwingJInternalFrame.conTotales) {this.jInternalFrameDetalleFormEstructura.evaluacionempleadoBeanSwingJInternalFrame.quitarFilaTotales();}
							estructuraAux.setEvaluacionEmpleados(this.jInternalFrameDetalleFormEstructura.evaluacionempleadoBeanSwingJInternalFrame.evaluacionempleadoLogic.getEvaluacionEmpleados());

							if(this.jInternalFrameDetalleFormEstructura.empleadoimpuestorentaBeanSwingJInternalFrame!=null && this.jInternalFrameDetalleFormEstructura.empleadoimpuestorentaBeanSwingJInternalFrame.conTotales) {this.jInternalFrameDetalleFormEstructura.empleadoimpuestorentaBeanSwingJInternalFrame.quitarFilaTotales();}
							estructuraAux.setEmpleadoImpuestoRentas(this.jInternalFrameDetalleFormEstructura.empleadoimpuestorentaBeanSwingJInternalFrame.empleadoimpuestorentaLogic.getEmpleadoImpuestoRentas());

							if(this.jInternalFrameDetalleFormEstructura.rubroestructuraBeanSwingJInternalFrame!=null && this.jInternalFrameDetalleFormEstructura.rubroestructuraBeanSwingJInternalFrame.conTotales) {this.jInternalFrameDetalleFormEstructura.rubroestructuraBeanSwingJInternalFrame.quitarFilaTotales();}
							estructuraAux.setRubroEstructuras(this.jInternalFrameDetalleFormEstructura.rubroestructuraBeanSwingJInternalFrame.rubroestructuraLogic.getRubroEstructuras());

							if(this.jInternalFrameDetalleFormEstructura.cierrerolmensualBeanSwingJInternalFrame!=null && this.jInternalFrameDetalleFormEstructura.cierrerolmensualBeanSwingJInternalFrame.conTotales) {this.jInternalFrameDetalleFormEstructura.cierrerolmensualBeanSwingJInternalFrame.quitarFilaTotales();}
							estructuraAux.setCierreRolMensuals(this.jInternalFrameDetalleFormEstructura.cierrerolmensualBeanSwingJInternalFrame.cierrerolmensualLogic.getCierreRolMensuals());

							if(this.jInternalFrameDetalleFormEstructura.formatonomiBeanSwingJInternalFrame!=null && this.jInternalFrameDetalleFormEstructura.formatonomiBeanSwingJInternalFrame.conTotales) {this.jInternalFrameDetalleFormEstructura.formatonomiBeanSwingJInternalFrame.quitarFilaTotales();}
							estructuraAux.setFormatoNomis(this.jInternalFrameDetalleFormEstructura.formatonomiBeanSwingJInternalFrame.formatonomiLogic.getFormatoNomis());

							if(this.jInternalFrameDetalleFormEstructura.empleadoestructuraBeanSwingJInternalFrame!=null && this.jInternalFrameDetalleFormEstructura.empleadoestructuraBeanSwingJInternalFrame.conTotales) {this.jInternalFrameDetalleFormEstructura.empleadoestructuraBeanSwingJInternalFrame.quitarFilaTotales();}
							estructuraAux.setEmpleadoEstructuras(this.jInternalFrameDetalleFormEstructura.empleadoestructuraBeanSwingJInternalFrame.empleadoestructuraLogic.getEmpleadoEstructuras());

							if(this.jInternalFrameDetalleFormEstructura.historialpagonomiBeanSwingJInternalFrame!=null && this.jInternalFrameDetalleFormEstructura.historialpagonomiBeanSwingJInternalFrame.conTotales) {this.jInternalFrameDetalleFormEstructura.historialpagonomiBeanSwingJInternalFrame.quitarFilaTotales();}
							estructuraAux.setHistorialPagoNomis(this.jInternalFrameDetalleFormEstructura.historialpagonomiBeanSwingJInternalFrame.historialpagonomiLogic.getHistorialPagoNomis());

							if(this.jInternalFrameDetalleFormEstructura.asistenciadiariaBeanSwingJInternalFrame!=null && this.jInternalFrameDetalleFormEstructura.asistenciadiariaBeanSwingJInternalFrame.conTotales) {this.jInternalFrameDetalleFormEstructura.asistenciadiariaBeanSwingJInternalFrame.quitarFilaTotales();}
							estructuraAux.setAsistenciaDiarias(this.jInternalFrameDetalleFormEstructura.asistenciadiariaBeanSwingJInternalFrame.asistenciadiariaLogic.getAsistenciaDiarias());

							if(this.jInternalFrameDetalleFormEstructura.funcionestrucBeanSwingJInternalFrame!=null && this.jInternalFrameDetalleFormEstructura.funcionestrucBeanSwingJInternalFrame.conTotales) {this.jInternalFrameDetalleFormEstructura.funcionestrucBeanSwingJInternalFrame.quitarFilaTotales();}
							estructuraAux.setFuncionEstrucs(this.jInternalFrameDetalleFormEstructura.funcionestrucBeanSwingJInternalFrame.funcionestrucLogic.getFuncionEstrucs());

							if(this.jInternalFrameDetalleFormEstructura.solicitudreemplazoBeanSwingJInternalFrame!=null && this.jInternalFrameDetalleFormEstructura.solicitudreemplazoBeanSwingJInternalFrame.conTotales) {this.jInternalFrameDetalleFormEstructura.solicitudreemplazoBeanSwingJInternalFrame.quitarFilaTotales();}
							estructuraAux.setSolicitudReemplazos(this.jInternalFrameDetalleFormEstructura.solicitudreemplazoBeanSwingJInternalFrame.solicitudreemplazoLogic.getSolicitudReemplazos());

							if(this.jInternalFrameDetalleFormEstructura.solicitudhoraextraBeanSwingJInternalFrame!=null && this.jInternalFrameDetalleFormEstructura.solicitudhoraextraBeanSwingJInternalFrame.conTotales) {this.jInternalFrameDetalleFormEstructura.solicitudhoraextraBeanSwingJInternalFrame.quitarFilaTotales();}
							estructuraAux.setSolicitudHoraExtras(this.jInternalFrameDetalleFormEstructura.solicitudhoraextraBeanSwingJInternalFrame.solicitudhoraextraLogic.getSolicitudHoraExtras());

							if(this.jInternalFrameDetalleFormEstructura.evaluacionnomiBeanSwingJInternalFrame!=null && this.jInternalFrameDetalleFormEstructura.evaluacionnomiBeanSwingJInternalFrame.conTotales) {this.jInternalFrameDetalleFormEstructura.evaluacionnomiBeanSwingJInternalFrame.quitarFilaTotales();}
							estructuraAux.setEvaluacionNomis(this.jInternalFrameDetalleFormEstructura.evaluacionnomiBeanSwingJInternalFrame.evaluacionnomiLogic.getEvaluacionNomis());

							if(this.jInternalFrameDetalleFormEstructura.solicitudvacacionBeanSwingJInternalFrame!=null && this.jInternalFrameDetalleFormEstructura.solicitudvacacionBeanSwingJInternalFrame.conTotales) {this.jInternalFrameDetalleFormEstructura.solicitudvacacionBeanSwingJInternalFrame.quitarFilaTotales();}
							estructuraAux.setSolicitudVacacions(this.jInternalFrameDetalleFormEstructura.solicitudvacacionBeanSwingJInternalFrame.solicitudvacacionLogic.getSolicitudVacacions());

							if(this.jInternalFrameDetalleFormEstructura.responsableactivofijoBeanSwingJInternalFrame!=null && this.jInternalFrameDetalleFormEstructura.responsableactivofijoBeanSwingJInternalFrame.conTotales) {this.jInternalFrameDetalleFormEstructura.responsableactivofijoBeanSwingJInternalFrame.quitarFilaTotales();}
							estructuraAux.setResponsableActivoFijos(this.jInternalFrameDetalleFormEstructura.responsableactivofijoBeanSwingJInternalFrame.responsableactivofijoLogic.getResponsableActivoFijos());

							if(this.jInternalFrameDetalleFormEstructura.rubroempleacuentacontableBeanSwingJInternalFrame!=null && this.jInternalFrameDetalleFormEstructura.rubroempleacuentacontableBeanSwingJInternalFrame.conTotales) {this.jInternalFrameDetalleFormEstructura.rubroempleacuentacontableBeanSwingJInternalFrame.quitarFilaTotales();}
							estructuraAux.setRubroEmpleaCuentaContables(this.jInternalFrameDetalleFormEstructura.rubroempleacuentacontableBeanSwingJInternalFrame.rubroempleacuentacontableLogic.getRubroEmpleaCuentaContables());
							
							//ARCHITECTURE
							if(Constantes.ISUSAEJBLOGICLAYER) {
								if(this.estructuraSessionBean.getEstaModoGuardarRelaciones() 
									|| this.estructuraSessionBean.getEsGuardarRelacionado())	{
									actualizarLista(estructuraAux,estructuraLogic.getEstructuras());
								}
							} else if(Constantes.ISUSAEJBREMOTE||Constantes.ISUSAEJBHOME) {
								actualizarLista(estructuraAux,estructuras);
							}
							//ARCHITECTURE
							
							//AQUI EL ID NEGATIVO ES EL ID BUSCADO, YA QUE NO SE GENERA OTRO EN LA DB POR INGRESAR UNO NUEVO							
							//TALVEZ ESTA DEMAS POR SER UPDATE
							//POR BUG: EL OBJETO ACTUAL SE PERDIA, POR LO QUE SE GUARDA TAMBIEN VALORES EN AUX Y LUEGO DESPUES DEL MENSAJE SE HACE REFERENCIA EL OBJETO ACTUAL AL AUX
							//this.bugActualizarReferenciaActual(this.estructura,estructuraAux);
					
						}
					}
				}				
			} else if(maintenanceType==MaintenanceType.ELIMINAR) {
				estructuraAux=new  Estructura();
				
				estructuraAux.setIsNew(false);
				estructuraAux.setIsChanged(false);
				
				estructuraAux.setIsDeleted(true);
				
				estructuraAux.setId(this.estructura.getId());	
				estructuraAux.setVersionRow(this.estructura.getVersionRow());	
				estructuraAux.setid_empresa(this.estructura.getid_empresa());	
				estructuraAux.setid_sucursal(this.estructura.getid_sucursal());	
				estructuraAux.setid_estructura(this.estructura.getid_estructura());	
				estructuraAux.setid_tipo_pago__n_m(this.estructura.getid_tipo_pago__n_m());	
				estructuraAux.setid_numero_patronal(this.estructura.getid_numero_patronal());	
				estructuraAux.setid_cuenta_contable(this.estructura.getid_cuenta_contable());	
				estructuraAux.setid_tipo_estructura(this.estructura.getid_tipo_estructura());	
				estructuraAux.setid_pais(this.estructura.getid_pais());	
				estructuraAux.setid_ciudad(this.estructura.getid_ciudad());	
				estructuraAux.setcodigo(this.estructura.getcodigo());	
				estructuraAux.setnumero(this.estructura.getnumero());	
				estructuraAux.setvalor_anticipo(this.estructura.getvalor_anticipo());	
				estructuraAux.setporcentaje_anticipo(this.estructura.getporcentaje_anticipo());	
				estructuraAux.setnombre(this.estructura.getnombre());	
				estructuraAux.setes_jefe(this.estructura.getes_jefe());	
				estructuraAux.setes_anual(this.estructura.getes_anual());	
				estructuraAux.setporcentaje(this.estructura.getporcentaje());	
				estructuraAux.setvalor(this.estructura.getvalor());	
				
				if(this.estructuraSessionBean.getEsGuardarRelacionado()) {
					//ELEMENTO ACTUAL NO SE HA INGRESADO AL SISTEMA, NO SE PUEDE ELIMINAR ALGO QUE NO EXISTE
					if(this.estructuraAux.getId()>=0) {	
						this.estructurasEliminados.add(estructuraAux);											
					}
				}
				
				//ARCHITECTURE
				if(Constantes.ISUSAEJBLOGICLAYER) {				
					actualizarLista(estructuraAux,estructuraLogic.getEstructuras());
				} else if(Constantes.ISUSAEJBREMOTE||Constantes.ISUSAEJBHOME) {
					actualizarLista(estructuraAux,estructuras);
				}
				//ARCHITECTURE
				
				
				if(!isGuardarCambiosEnLote && !this.estructuraSessionBean.getEstaModoGuardarRelaciones() 
						&& !this.estructuraSessionBean.getEsGuardarRelacionado())	{
					
					//ARCHITECTURE
					if(Constantes.ISUSAEJBLOGICLAYER) {
						estructuraLogic.saveEstructuras();//WithConnection
						//estructuraLogic.getSetVersionRowEstructuras();//WithConnection
					} else if(Constantes.ISUSAEJBREMOTE) {
					} else if(Constantes.ISUSAEJBHOME) {
					}	
					//ARCHITECTURE
				} else {
					//CUANDO ES MANTENIMIENTO MAESTRO DETALLE
					if(this.estructuraSessionBean.getEstaModoGuardarRelaciones()) {
						//GUARDAR RELACIONES
						//ARCHITECTURE
						if(Constantes.ISUSAEJBLOGICLAYER) {
							
							this.jInternalFrameDetalleFormEstructura.centrocostoestructuraBeanSwingJInternalFrame.centrocostoestructuraLogic.getCentroCostoEstructuras().addAll(this.jInternalFrameDetalleFormEstructura.centrocostoestructuraBeanSwingJInternalFrame.centrocostoestructurasEliminados);
							this.jInternalFrameDetalleFormEstructura.planivacacionBeanSwingJInternalFrame.planivacacionLogic.getPlaniVacacions().addAll(this.jInternalFrameDetalleFormEstructura.planivacacionBeanSwingJInternalFrame.planivacacionsEliminados);
							this.jInternalFrameDetalleFormEstructura.asistenciamensualBeanSwingJInternalFrame.asistenciamensualLogic.getAsistenciaMensuals().addAll(this.jInternalFrameDetalleFormEstructura.asistenciamensualBeanSwingJInternalFrame.asistenciamensualsEliminados);
							this.jInternalFrameDetalleFormEstructura.empleadoprocesorubroBeanSwingJInternalFrame.empleadoprocesorubroLogic.getEmpleadoProcesoRubros().addAll(this.jInternalFrameDetalleFormEstructura.empleadoprocesorubroBeanSwingJInternalFrame.empleadoprocesorubrosEliminados);
							this.jInternalFrameDetalleFormEstructura.empleadopagorubroBeanSwingJInternalFrame.empleadopagorubroLogic.getEmpleadoPagoRubros().addAll(this.jInternalFrameDetalleFormEstructura.empleadopagorubroBeanSwingJInternalFrame.empleadopagorubrosEliminados);
							this.jInternalFrameDetalleFormEstructura.provisionempleadoBeanSwingJInternalFrame.provisionempleadoLogic.getProvisionEmpleados().addAll(this.jInternalFrameDetalleFormEstructura.provisionempleadoBeanSwingJInternalFrame.provisionempleadosEliminados);
							this.jInternalFrameDetalleFormEstructura.empleadoBeanSwingJInternalFrame.empleadoLogic.getEmpleados().addAll(this.jInternalFrameDetalleFormEstructura.empleadoBeanSwingJInternalFrame.empleadosEliminados);
							this.jInternalFrameDetalleFormEstructura.estructuraBeanSwingJInternalFrame.estructuraLogic.getEstructuras().addAll(this.jInternalFrameDetalleFormEstructura.estructuraBeanSwingJInternalFrame.estructurasEliminados);
							this.jInternalFrameDetalleFormEstructura.evaluacionempleadoBeanSwingJInternalFrame.evaluacionempleadoLogic.getEvaluacionEmpleados().addAll(this.jInternalFrameDetalleFormEstructura.evaluacionempleadoBeanSwingJInternalFrame.evaluacionempleadosEliminados);
							this.jInternalFrameDetalleFormEstructura.empleadoimpuestorentaBeanSwingJInternalFrame.empleadoimpuestorentaLogic.getEmpleadoImpuestoRentas().addAll(this.jInternalFrameDetalleFormEstructura.empleadoimpuestorentaBeanSwingJInternalFrame.empleadoimpuestorentasEliminados);
							this.jInternalFrameDetalleFormEstructura.rubroestructuraBeanSwingJInternalFrame.rubroestructuraLogic.getRubroEstructuras().addAll(this.jInternalFrameDetalleFormEstructura.rubroestructuraBeanSwingJInternalFrame.rubroestructurasEliminados);
							this.jInternalFrameDetalleFormEstructura.cierrerolmensualBeanSwingJInternalFrame.cierrerolmensualLogic.getCierreRolMensuals().addAll(this.jInternalFrameDetalleFormEstructura.cierrerolmensualBeanSwingJInternalFrame.cierrerolmensualsEliminados);
							this.jInternalFrameDetalleFormEstructura.formatonomiBeanSwingJInternalFrame.formatonomiLogic.getFormatoNomis().addAll(this.jInternalFrameDetalleFormEstructura.formatonomiBeanSwingJInternalFrame.formatonomisEliminados);
							this.jInternalFrameDetalleFormEstructura.empleadoestructuraBeanSwingJInternalFrame.empleadoestructuraLogic.getEmpleadoEstructuras().addAll(this.jInternalFrameDetalleFormEstructura.empleadoestructuraBeanSwingJInternalFrame.empleadoestructurasEliminados);
							this.jInternalFrameDetalleFormEstructura.historialpagonomiBeanSwingJInternalFrame.historialpagonomiLogic.getHistorialPagoNomis().addAll(this.jInternalFrameDetalleFormEstructura.historialpagonomiBeanSwingJInternalFrame.historialpagonomisEliminados);
							this.jInternalFrameDetalleFormEstructura.asistenciadiariaBeanSwingJInternalFrame.asistenciadiariaLogic.getAsistenciaDiarias().addAll(this.jInternalFrameDetalleFormEstructura.asistenciadiariaBeanSwingJInternalFrame.asistenciadiariasEliminados);
							this.jInternalFrameDetalleFormEstructura.funcionestrucBeanSwingJInternalFrame.funcionestrucLogic.getFuncionEstrucs().addAll(this.jInternalFrameDetalleFormEstructura.funcionestrucBeanSwingJInternalFrame.funcionestrucsEliminados);
							this.jInternalFrameDetalleFormEstructura.solicitudreemplazoBeanSwingJInternalFrame.solicitudreemplazoLogic.getSolicitudReemplazos().addAll(this.jInternalFrameDetalleFormEstructura.solicitudreemplazoBeanSwingJInternalFrame.solicitudreemplazosEliminados);
							this.jInternalFrameDetalleFormEstructura.solicitudhoraextraBeanSwingJInternalFrame.solicitudhoraextraLogic.getSolicitudHoraExtras().addAll(this.jInternalFrameDetalleFormEstructura.solicitudhoraextraBeanSwingJInternalFrame.solicitudhoraextrasEliminados);
							this.jInternalFrameDetalleFormEstructura.evaluacionnomiBeanSwingJInternalFrame.evaluacionnomiLogic.getEvaluacionNomis().addAll(this.jInternalFrameDetalleFormEstructura.evaluacionnomiBeanSwingJInternalFrame.evaluacionnomisEliminados);
							this.jInternalFrameDetalleFormEstructura.solicitudvacacionBeanSwingJInternalFrame.solicitudvacacionLogic.getSolicitudVacacions().addAll(this.jInternalFrameDetalleFormEstructura.solicitudvacacionBeanSwingJInternalFrame.solicitudvacacionsEliminados);
							this.jInternalFrameDetalleFormEstructura.responsableactivofijoBeanSwingJInternalFrame.responsableactivofijoLogic.getResponsableActivoFijos().addAll(this.jInternalFrameDetalleFormEstructura.responsableactivofijoBeanSwingJInternalFrame.responsableactivofijosEliminados);
							this.jInternalFrameDetalleFormEstructura.rubroempleacuentacontableBeanSwingJInternalFrame.rubroempleacuentacontableLogic.getRubroEmpleaCuentaContables().addAll(this.jInternalFrameDetalleFormEstructura.rubroempleacuentacontableBeanSwingJInternalFrame.rubroempleacuentacontablesEliminados);
						} else if(Constantes.ISUSAEJBREMOTE ||Constantes.ISUSAEJBHOME) {
							
							this.jInternalFrameDetalleFormEstructura.centrocostoestructuraBeanSwingJInternalFrame.centrocostoestructuras.addAll(this.jInternalFrameDetalleFormEstructura.centrocostoestructuraBeanSwingJInternalFrame.centrocostoestructurasEliminados);
							this.jInternalFrameDetalleFormEstructura.planivacacionBeanSwingJInternalFrame.planivacacions.addAll(this.jInternalFrameDetalleFormEstructura.planivacacionBeanSwingJInternalFrame.planivacacionsEliminados);
							this.jInternalFrameDetalleFormEstructura.asistenciamensualBeanSwingJInternalFrame.asistenciamensuals.addAll(this.jInternalFrameDetalleFormEstructura.asistenciamensualBeanSwingJInternalFrame.asistenciamensualsEliminados);
							this.jInternalFrameDetalleFormEstructura.empleadoprocesorubroBeanSwingJInternalFrame.empleadoprocesorubros.addAll(this.jInternalFrameDetalleFormEstructura.empleadoprocesorubroBeanSwingJInternalFrame.empleadoprocesorubrosEliminados);
							this.jInternalFrameDetalleFormEstructura.empleadopagorubroBeanSwingJInternalFrame.empleadopagorubros.addAll(this.jInternalFrameDetalleFormEstructura.empleadopagorubroBeanSwingJInternalFrame.empleadopagorubrosEliminados);
							this.jInternalFrameDetalleFormEstructura.provisionempleadoBeanSwingJInternalFrame.provisionempleados.addAll(this.jInternalFrameDetalleFormEstructura.provisionempleadoBeanSwingJInternalFrame.provisionempleadosEliminados);
							this.jInternalFrameDetalleFormEstructura.empleadoBeanSwingJInternalFrame.empleados.addAll(this.jInternalFrameDetalleFormEstructura.empleadoBeanSwingJInternalFrame.empleadosEliminados);
							this.jInternalFrameDetalleFormEstructura.estructuraBeanSwingJInternalFrame.estructuras.addAll(this.jInternalFrameDetalleFormEstructura.estructuraBeanSwingJInternalFrame.estructurasEliminados);
							this.jInternalFrameDetalleFormEstructura.evaluacionempleadoBeanSwingJInternalFrame.evaluacionempleados.addAll(this.jInternalFrameDetalleFormEstructura.evaluacionempleadoBeanSwingJInternalFrame.evaluacionempleadosEliminados);
							this.jInternalFrameDetalleFormEstructura.empleadoimpuestorentaBeanSwingJInternalFrame.empleadoimpuestorentas.addAll(this.jInternalFrameDetalleFormEstructura.empleadoimpuestorentaBeanSwingJInternalFrame.empleadoimpuestorentasEliminados);
							this.jInternalFrameDetalleFormEstructura.rubroestructuraBeanSwingJInternalFrame.rubroestructuras.addAll(this.jInternalFrameDetalleFormEstructura.rubroestructuraBeanSwingJInternalFrame.rubroestructurasEliminados);
							this.jInternalFrameDetalleFormEstructura.cierrerolmensualBeanSwingJInternalFrame.cierrerolmensuals.addAll(this.jInternalFrameDetalleFormEstructura.cierrerolmensualBeanSwingJInternalFrame.cierrerolmensualsEliminados);
							this.jInternalFrameDetalleFormEstructura.formatonomiBeanSwingJInternalFrame.formatonomis.addAll(this.jInternalFrameDetalleFormEstructura.formatonomiBeanSwingJInternalFrame.formatonomisEliminados);
							this.jInternalFrameDetalleFormEstructura.empleadoestructuraBeanSwingJInternalFrame.empleadoestructuras.addAll(this.jInternalFrameDetalleFormEstructura.empleadoestructuraBeanSwingJInternalFrame.empleadoestructurasEliminados);
							this.jInternalFrameDetalleFormEstructura.historialpagonomiBeanSwingJInternalFrame.historialpagonomis.addAll(this.jInternalFrameDetalleFormEstructura.historialpagonomiBeanSwingJInternalFrame.historialpagonomisEliminados);
							this.jInternalFrameDetalleFormEstructura.asistenciadiariaBeanSwingJInternalFrame.asistenciadiarias.addAll(this.jInternalFrameDetalleFormEstructura.asistenciadiariaBeanSwingJInternalFrame.asistenciadiariasEliminados);
							this.jInternalFrameDetalleFormEstructura.funcionestrucBeanSwingJInternalFrame.funcionestrucs.addAll(this.jInternalFrameDetalleFormEstructura.funcionestrucBeanSwingJInternalFrame.funcionestrucsEliminados);
							this.jInternalFrameDetalleFormEstructura.solicitudreemplazoBeanSwingJInternalFrame.solicitudreemplazos.addAll(this.jInternalFrameDetalleFormEstructura.solicitudreemplazoBeanSwingJInternalFrame.solicitudreemplazosEliminados);
							this.jInternalFrameDetalleFormEstructura.solicitudhoraextraBeanSwingJInternalFrame.solicitudhoraextras.addAll(this.jInternalFrameDetalleFormEstructura.solicitudhoraextraBeanSwingJInternalFrame.solicitudhoraextrasEliminados);
							this.jInternalFrameDetalleFormEstructura.evaluacionnomiBeanSwingJInternalFrame.evaluacionnomis.addAll(this.jInternalFrameDetalleFormEstructura.evaluacionnomiBeanSwingJInternalFrame.evaluacionnomisEliminados);
							this.jInternalFrameDetalleFormEstructura.solicitudvacacionBeanSwingJInternalFrame.solicitudvacacions.addAll(this.jInternalFrameDetalleFormEstructura.solicitudvacacionBeanSwingJInternalFrame.solicitudvacacionsEliminados);
							this.jInternalFrameDetalleFormEstructura.responsableactivofijoBeanSwingJInternalFrame.responsableactivofijos.addAll(this.jInternalFrameDetalleFormEstructura.responsableactivofijoBeanSwingJInternalFrame.responsableactivofijosEliminados);
							this.jInternalFrameDetalleFormEstructura.rubroempleacuentacontableBeanSwingJInternalFrame.rubroempleacuentacontables.addAll(this.jInternalFrameDetalleFormEstructura.rubroempleacuentacontableBeanSwingJInternalFrame.rubroempleacuentacontablesEliminados);
						}
						//ARCHITECTURE
						
						
						if(!this.estructuraSessionBean.getEsGuardarRelacionado()) {
							//QUITAR FILA TOTAL
							//ARCHITECTURE
							if(Constantes.ISUSAEJBLOGICLAYER) {
							
								if(this.jInternalFrameDetalleFormEstructura.centrocostoestructuraBeanSwingJInternalFrame!=null && this.jInternalFrameDetalleFormEstructura.centrocostoestructuraBeanSwingJInternalFrame.conTotales) {/*this.jInternalFrameDetalleFormEstructura.centrocostoestructuraBeanSwingJInternalFrame.quitarFilaTotales();*/}
								if(this.jInternalFrameDetalleFormEstructura.planivacacionBeanSwingJInternalFrame!=null && this.jInternalFrameDetalleFormEstructura.planivacacionBeanSwingJInternalFrame.conTotales) {/*this.jInternalFrameDetalleFormEstructura.planivacacionBeanSwingJInternalFrame.quitarFilaTotales();*/}
								if(this.jInternalFrameDetalleFormEstructura.asistenciamensualBeanSwingJInternalFrame!=null && this.jInternalFrameDetalleFormEstructura.asistenciamensualBeanSwingJInternalFrame.conTotales) {/*this.jInternalFrameDetalleFormEstructura.asistenciamensualBeanSwingJInternalFrame.quitarFilaTotales();*/}
								if(this.jInternalFrameDetalleFormEstructura.empleadoprocesorubroBeanSwingJInternalFrame!=null && this.jInternalFrameDetalleFormEstructura.empleadoprocesorubroBeanSwingJInternalFrame.conTotales) {/*this.jInternalFrameDetalleFormEstructura.empleadoprocesorubroBeanSwingJInternalFrame.quitarFilaTotales();*/}
								if(this.jInternalFrameDetalleFormEstructura.empleadopagorubroBeanSwingJInternalFrame!=null && this.jInternalFrameDetalleFormEstructura.empleadopagorubroBeanSwingJInternalFrame.conTotales) {/*this.jInternalFrameDetalleFormEstructura.empleadopagorubroBeanSwingJInternalFrame.quitarFilaTotales();*/}
								if(this.jInternalFrameDetalleFormEstructura.provisionempleadoBeanSwingJInternalFrame!=null && this.jInternalFrameDetalleFormEstructura.provisionempleadoBeanSwingJInternalFrame.conTotales) {/*this.jInternalFrameDetalleFormEstructura.provisionempleadoBeanSwingJInternalFrame.quitarFilaTotales();*/}
								if(this.jInternalFrameDetalleFormEstructura.empleadoBeanSwingJInternalFrame!=null && this.jInternalFrameDetalleFormEstructura.empleadoBeanSwingJInternalFrame.conTotales) {/*this.jInternalFrameDetalleFormEstructura.empleadoBeanSwingJInternalFrame.quitarFilaTotales();*/}
								if(this.jInternalFrameDetalleFormEstructura.estructuraBeanSwingJInternalFrame!=null && this.jInternalFrameDetalleFormEstructura.estructuraBeanSwingJInternalFrame.conTotales) {/*this.jInternalFrameDetalleFormEstructura.estructuraBeanSwingJInternalFrame.quitarFilaTotales();*/}
								if(this.jInternalFrameDetalleFormEstructura.evaluacionempleadoBeanSwingJInternalFrame!=null && this.jInternalFrameDetalleFormEstructura.evaluacionempleadoBeanSwingJInternalFrame.conTotales) {/*this.jInternalFrameDetalleFormEstructura.evaluacionempleadoBeanSwingJInternalFrame.quitarFilaTotales();*/}
									if(this.jInternalFrameDetalleFormEstructura.evaluacionempleadoBeanSwingJInternalFrame.jInternalFrameDetalleFormEvaluacionEmpleado.calificacionempleadoBeanSwingJInternalFrame!=null && this.jInternalFrameDetalleFormEstructura.evaluacionempleadoBeanSwingJInternalFrame.jInternalFrameDetalleFormEvaluacionEmpleado.calificacionempleadoBeanSwingJInternalFrame.conTotales) {/*this.jInternalFrameDetalleFormEstructura.evaluacionempleadoBeanSwingJInternalFrame.jInternalFrameDetalleFormEvaluacionEmpleado.calificacionempleadoBeanSwingJInternalFrame.quitarFilaTotales();*/}
								if(this.jInternalFrameDetalleFormEstructura.empleadoimpuestorentaBeanSwingJInternalFrame!=null && this.jInternalFrameDetalleFormEstructura.empleadoimpuestorentaBeanSwingJInternalFrame.conTotales) {/*this.jInternalFrameDetalleFormEstructura.empleadoimpuestorentaBeanSwingJInternalFrame.quitarFilaTotales();*/}
								if(this.jInternalFrameDetalleFormEstructura.rubroestructuraBeanSwingJInternalFrame!=null && this.jInternalFrameDetalleFormEstructura.rubroestructuraBeanSwingJInternalFrame.conTotales) {/*this.jInternalFrameDetalleFormEstructura.rubroestructuraBeanSwingJInternalFrame.quitarFilaTotales();*/}
								if(this.jInternalFrameDetalleFormEstructura.cierrerolmensualBeanSwingJInternalFrame!=null && this.jInternalFrameDetalleFormEstructura.cierrerolmensualBeanSwingJInternalFrame.conTotales) {/*this.jInternalFrameDetalleFormEstructura.cierrerolmensualBeanSwingJInternalFrame.quitarFilaTotales();*/}
								if(this.jInternalFrameDetalleFormEstructura.formatonomiBeanSwingJInternalFrame!=null && this.jInternalFrameDetalleFormEstructura.formatonomiBeanSwingJInternalFrame.conTotales) {/*this.jInternalFrameDetalleFormEstructura.formatonomiBeanSwingJInternalFrame.quitarFilaTotales();*/}
									if(this.jInternalFrameDetalleFormEstructura.formatonomiBeanSwingJInternalFrame.jInternalFrameDetalleFormFormatoNomi.formatonomipreguntanomiBeanSwingJInternalFrame!=null && this.jInternalFrameDetalleFormEstructura.formatonomiBeanSwingJInternalFrame.jInternalFrameDetalleFormFormatoNomi.formatonomipreguntanomiBeanSwingJInternalFrame.conTotales) {/*this.jInternalFrameDetalleFormEstructura.formatonomiBeanSwingJInternalFrame.jInternalFrameDetalleFormFormatoNomi.formatonomipreguntanomiBeanSwingJInternalFrame.quitarFilaTotales();*/}
									if(this.jInternalFrameDetalleFormEstructura.formatonomiBeanSwingJInternalFrame.jInternalFrameDetalleFormFormatoNomi.formatonomipreguntanomiBeanSwingJInternalFrame.jInternalFrameDetalleFormFormatoNomiPreguntaNomi.calificacionempleadoBeanSwingJInternalFrame!=null && this.jInternalFrameDetalleFormEstructura.formatonomiBeanSwingJInternalFrame.jInternalFrameDetalleFormFormatoNomi.formatonomipreguntanomiBeanSwingJInternalFrame.jInternalFrameDetalleFormFormatoNomiPreguntaNomi.calificacionempleadoBeanSwingJInternalFrame.conTotales) {/*this.jInternalFrameDetalleFormEstructura.formatonomiBeanSwingJInternalFrame.jInternalFrameDetalleFormFormatoNomi.formatonomipreguntanomiBeanSwingJInternalFrame.jInternalFrameDetalleFormFormatoNomiPreguntaNomi.calificacionempleadoBeanSwingJInternalFrame.quitarFilaTotales();*/}
									if(this.jInternalFrameDetalleFormEstructura.formatonomiBeanSwingJInternalFrame.jInternalFrameDetalleFormFormatoNomi.formatonomifactornomiBeanSwingJInternalFrame!=null && this.jInternalFrameDetalleFormEstructura.formatonomiBeanSwingJInternalFrame.jInternalFrameDetalleFormFormatoNomi.formatonomifactornomiBeanSwingJInternalFrame.conTotales) {/*this.jInternalFrameDetalleFormEstructura.formatonomiBeanSwingJInternalFrame.jInternalFrameDetalleFormFormatoNomi.formatonomifactornomiBeanSwingJInternalFrame.quitarFilaTotales();*/}
									if(this.jInternalFrameDetalleFormEstructura.formatonomiBeanSwingJInternalFrame.jInternalFrameDetalleFormFormatoNomi.formatonomifactornomiBeanSwingJInternalFrame.jInternalFrameDetalleFormFormatoNomiFactorNomi.calificacionempleadoBeanSwingJInternalFrame!=null && this.jInternalFrameDetalleFormEstructura.formatonomiBeanSwingJInternalFrame.jInternalFrameDetalleFormFormatoNomi.formatonomifactornomiBeanSwingJInternalFrame.jInternalFrameDetalleFormFormatoNomiFactorNomi.calificacionempleadoBeanSwingJInternalFrame.conTotales) {/*this.jInternalFrameDetalleFormEstructura.formatonomiBeanSwingJInternalFrame.jInternalFrameDetalleFormFormatoNomi.formatonomifactornomiBeanSwingJInternalFrame.jInternalFrameDetalleFormFormatoNomiFactorNomi.calificacionempleadoBeanSwingJInternalFrame.quitarFilaTotales();*/}
									if(this.jInternalFrameDetalleFormEstructura.formatonomiBeanSwingJInternalFrame.jInternalFrameDetalleFormFormatoNomi.evaluacionnomiBeanSwingJInternalFrame!=null && this.jInternalFrameDetalleFormEstructura.formatonomiBeanSwingJInternalFrame.jInternalFrameDetalleFormFormatoNomi.evaluacionnomiBeanSwingJInternalFrame.conTotales) {/*this.jInternalFrameDetalleFormEstructura.formatonomiBeanSwingJInternalFrame.jInternalFrameDetalleFormFormatoNomi.evaluacionnomiBeanSwingJInternalFrame.quitarFilaTotales();*/}
									if(this.jInternalFrameDetalleFormEstructura.formatonomiBeanSwingJInternalFrame.jInternalFrameDetalleFormFormatoNomi.evaluacionnomiBeanSwingJInternalFrame.jInternalFrameDetalleFormEvaluacionNomi.detalleevaluacionnomiBeanSwingJInternalFrame!=null && this.jInternalFrameDetalleFormEstructura.formatonomiBeanSwingJInternalFrame.jInternalFrameDetalleFormFormatoNomi.evaluacionnomiBeanSwingJInternalFrame.jInternalFrameDetalleFormEvaluacionNomi.detalleevaluacionnomiBeanSwingJInternalFrame.conTotales) {/*this.jInternalFrameDetalleFormEstructura.formatonomiBeanSwingJInternalFrame.jInternalFrameDetalleFormFormatoNomi.evaluacionnomiBeanSwingJInternalFrame.jInternalFrameDetalleFormEvaluacionNomi.detalleevaluacionnomiBeanSwingJInternalFrame.quitarFilaTotales();*/}
									if(this.jInternalFrameDetalleFormEstructura.formatonomiBeanSwingJInternalFrame.jInternalFrameDetalleFormFormatoNomi.detalleevaluacionnomiBeanSwingJInternalFrame!=null && this.jInternalFrameDetalleFormEstructura.formatonomiBeanSwingJInternalFrame.jInternalFrameDetalleFormFormatoNomi.detalleevaluacionnomiBeanSwingJInternalFrame.conTotales) {/*this.jInternalFrameDetalleFormEstructura.formatonomiBeanSwingJInternalFrame.jInternalFrameDetalleFormFormatoNomi.detalleevaluacionnomiBeanSwingJInternalFrame.quitarFilaTotales();*/}
								if(this.jInternalFrameDetalleFormEstructura.empleadoestructuraBeanSwingJInternalFrame!=null && this.jInternalFrameDetalleFormEstructura.empleadoestructuraBeanSwingJInternalFrame.conTotales) {/*this.jInternalFrameDetalleFormEstructura.empleadoestructuraBeanSwingJInternalFrame.quitarFilaTotales();*/}
								if(this.jInternalFrameDetalleFormEstructura.historialpagonomiBeanSwingJInternalFrame!=null && this.jInternalFrameDetalleFormEstructura.historialpagonomiBeanSwingJInternalFrame.conTotales) {/*this.jInternalFrameDetalleFormEstructura.historialpagonomiBeanSwingJInternalFrame.quitarFilaTotales();*/}
								if(this.jInternalFrameDetalleFormEstructura.asistenciadiariaBeanSwingJInternalFrame!=null && this.jInternalFrameDetalleFormEstructura.asistenciadiariaBeanSwingJInternalFrame.conTotales) {/*this.jInternalFrameDetalleFormEstructura.asistenciadiariaBeanSwingJInternalFrame.quitarFilaTotales();*/}
								if(this.jInternalFrameDetalleFormEstructura.funcionestrucBeanSwingJInternalFrame!=null && this.jInternalFrameDetalleFormEstructura.funcionestrucBeanSwingJInternalFrame.conTotales) {/*this.jInternalFrameDetalleFormEstructura.funcionestrucBeanSwingJInternalFrame.quitarFilaTotales();*/}
								if(this.jInternalFrameDetalleFormEstructura.solicitudreemplazoBeanSwingJInternalFrame!=null && this.jInternalFrameDetalleFormEstructura.solicitudreemplazoBeanSwingJInternalFrame.conTotales) {/*this.jInternalFrameDetalleFormEstructura.solicitudreemplazoBeanSwingJInternalFrame.quitarFilaTotales();*/}
								if(this.jInternalFrameDetalleFormEstructura.solicitudhoraextraBeanSwingJInternalFrame!=null && this.jInternalFrameDetalleFormEstructura.solicitudhoraextraBeanSwingJInternalFrame.conTotales) {/*this.jInternalFrameDetalleFormEstructura.solicitudhoraextraBeanSwingJInternalFrame.quitarFilaTotales();*/}
								if(this.jInternalFrameDetalleFormEstructura.evaluacionnomiBeanSwingJInternalFrame!=null && this.jInternalFrameDetalleFormEstructura.evaluacionnomiBeanSwingJInternalFrame.conTotales) {/*this.jInternalFrameDetalleFormEstructura.evaluacionnomiBeanSwingJInternalFrame.quitarFilaTotales();*/}
									if(this.jInternalFrameDetalleFormEstructura.evaluacionnomiBeanSwingJInternalFrame.jInternalFrameDetalleFormEvaluacionNomi.detalleevaluacionnomiBeanSwingJInternalFrame!=null && this.jInternalFrameDetalleFormEstructura.evaluacionnomiBeanSwingJInternalFrame.jInternalFrameDetalleFormEvaluacionNomi.detalleevaluacionnomiBeanSwingJInternalFrame.conTotales) {/*this.jInternalFrameDetalleFormEstructura.evaluacionnomiBeanSwingJInternalFrame.jInternalFrameDetalleFormEvaluacionNomi.detalleevaluacionnomiBeanSwingJInternalFrame.quitarFilaTotales();*/}
								if(this.jInternalFrameDetalleFormEstructura.solicitudvacacionBeanSwingJInternalFrame!=null && this.jInternalFrameDetalleFormEstructura.solicitudvacacionBeanSwingJInternalFrame.conTotales) {/*this.jInternalFrameDetalleFormEstructura.solicitudvacacionBeanSwingJInternalFrame.quitarFilaTotales();*/}
								if(this.jInternalFrameDetalleFormEstructura.responsableactivofijoBeanSwingJInternalFrame!=null && this.jInternalFrameDetalleFormEstructura.responsableactivofijoBeanSwingJInternalFrame.conTotales) {/*this.jInternalFrameDetalleFormEstructura.responsableactivofijoBeanSwingJInternalFrame.quitarFilaTotales();*/}
								if(this.jInternalFrameDetalleFormEstructura.rubroempleacuentacontableBeanSwingJInternalFrame!=null && this.jInternalFrameDetalleFormEstructura.rubroempleacuentacontableBeanSwingJInternalFrame.conTotales) {/*this.jInternalFrameDetalleFormEstructura.rubroempleacuentacontableBeanSwingJInternalFrame.quitarFilaTotales();*/}
							} else if(Constantes.ISUSAEJBREMOTE ||Constantes.ISUSAEJBHOME) {
							
								if(this.jInternalFrameDetalleFormEstructura.centrocostoestructuraBeanSwingJInternalFrame!=null && this.jInternalFrameDetalleFormEstructura.centrocostoestructuraBeanSwingJInternalFrame.conTotales) {/*this.jInternalFrameDetalleFormEstructura.centrocostoestructuraBeanSwingJInternalFrame.quitarFilaTotales();*/}
								if(this.jInternalFrameDetalleFormEstructura.planivacacionBeanSwingJInternalFrame!=null && this.jInternalFrameDetalleFormEstructura.planivacacionBeanSwingJInternalFrame.conTotales) {/*this.jInternalFrameDetalleFormEstructura.planivacacionBeanSwingJInternalFrame.quitarFilaTotales();*/}
								if(this.jInternalFrameDetalleFormEstructura.asistenciamensualBeanSwingJInternalFrame!=null && this.jInternalFrameDetalleFormEstructura.asistenciamensualBeanSwingJInternalFrame.conTotales) {/*this.jInternalFrameDetalleFormEstructura.asistenciamensualBeanSwingJInternalFrame.quitarFilaTotales();*/}
								if(this.jInternalFrameDetalleFormEstructura.empleadoprocesorubroBeanSwingJInternalFrame!=null && this.jInternalFrameDetalleFormEstructura.empleadoprocesorubroBeanSwingJInternalFrame.conTotales) {/*this.jInternalFrameDetalleFormEstructura.empleadoprocesorubroBeanSwingJInternalFrame.quitarFilaTotales();*/}
								if(this.jInternalFrameDetalleFormEstructura.empleadopagorubroBeanSwingJInternalFrame!=null && this.jInternalFrameDetalleFormEstructura.empleadopagorubroBeanSwingJInternalFrame.conTotales) {/*this.jInternalFrameDetalleFormEstructura.empleadopagorubroBeanSwingJInternalFrame.quitarFilaTotales();*/}
								if(this.jInternalFrameDetalleFormEstructura.provisionempleadoBeanSwingJInternalFrame!=null && this.jInternalFrameDetalleFormEstructura.provisionempleadoBeanSwingJInternalFrame.conTotales) {/*this.jInternalFrameDetalleFormEstructura.provisionempleadoBeanSwingJInternalFrame.quitarFilaTotales();*/}
								if(this.jInternalFrameDetalleFormEstructura.empleadoBeanSwingJInternalFrame!=null && this.jInternalFrameDetalleFormEstructura.empleadoBeanSwingJInternalFrame.conTotales) {/*this.jInternalFrameDetalleFormEstructura.empleadoBeanSwingJInternalFrame.quitarFilaTotales();*/}
								if(this.jInternalFrameDetalleFormEstructura.estructuraBeanSwingJInternalFrame!=null && this.jInternalFrameDetalleFormEstructura.estructuraBeanSwingJInternalFrame.conTotales) {/*this.jInternalFrameDetalleFormEstructura.estructuraBeanSwingJInternalFrame.quitarFilaTotales();*/}
								if(this.jInternalFrameDetalleFormEstructura.evaluacionempleadoBeanSwingJInternalFrame!=null && this.jInternalFrameDetalleFormEstructura.evaluacionempleadoBeanSwingJInternalFrame.conTotales) {/*this.jInternalFrameDetalleFormEstructura.evaluacionempleadoBeanSwingJInternalFrame.quitarFilaTotales();*/}
									if(this.jInternalFrameDetalleFormEstructura.evaluacionempleadoBeanSwingJInternalFrame.jInternalFrameDetalleFormEvaluacionEmpleado.calificacionempleadoBeanSwingJInternalFrame!=null && this.jInternalFrameDetalleFormEstructura.evaluacionempleadoBeanSwingJInternalFrame.jInternalFrameDetalleFormEvaluacionEmpleado.calificacionempleadoBeanSwingJInternalFrame.conTotales) {/*this.jInternalFrameDetalleFormEstructura.evaluacionempleadoBeanSwingJInternalFrame.jInternalFrameDetalleFormEvaluacionEmpleado.calificacionempleadoBeanSwingJInternalFrame.quitarFilaTotales();*/}
								if(this.jInternalFrameDetalleFormEstructura.empleadoimpuestorentaBeanSwingJInternalFrame!=null && this.jInternalFrameDetalleFormEstructura.empleadoimpuestorentaBeanSwingJInternalFrame.conTotales) {/*this.jInternalFrameDetalleFormEstructura.empleadoimpuestorentaBeanSwingJInternalFrame.quitarFilaTotales();*/}
								if(this.jInternalFrameDetalleFormEstructura.rubroestructuraBeanSwingJInternalFrame!=null && this.jInternalFrameDetalleFormEstructura.rubroestructuraBeanSwingJInternalFrame.conTotales) {/*this.jInternalFrameDetalleFormEstructura.rubroestructuraBeanSwingJInternalFrame.quitarFilaTotales();*/}
								if(this.jInternalFrameDetalleFormEstructura.cierrerolmensualBeanSwingJInternalFrame!=null && this.jInternalFrameDetalleFormEstructura.cierrerolmensualBeanSwingJInternalFrame.conTotales) {/*this.jInternalFrameDetalleFormEstructura.cierrerolmensualBeanSwingJInternalFrame.quitarFilaTotales();*/}
								if(this.jInternalFrameDetalleFormEstructura.formatonomiBeanSwingJInternalFrame!=null && this.jInternalFrameDetalleFormEstructura.formatonomiBeanSwingJInternalFrame.conTotales) {/*this.jInternalFrameDetalleFormEstructura.formatonomiBeanSwingJInternalFrame.quitarFilaTotales();*/}
									if(this.jInternalFrameDetalleFormEstructura.formatonomiBeanSwingJInternalFrame.jInternalFrameDetalleFormFormatoNomi.formatonomipreguntanomiBeanSwingJInternalFrame!=null && this.jInternalFrameDetalleFormEstructura.formatonomiBeanSwingJInternalFrame.jInternalFrameDetalleFormFormatoNomi.formatonomipreguntanomiBeanSwingJInternalFrame.conTotales) {/*this.jInternalFrameDetalleFormEstructura.formatonomiBeanSwingJInternalFrame.jInternalFrameDetalleFormFormatoNomi.formatonomipreguntanomiBeanSwingJInternalFrame.quitarFilaTotales();*/}
									if(this.jInternalFrameDetalleFormEstructura.formatonomiBeanSwingJInternalFrame.jInternalFrameDetalleFormFormatoNomi.formatonomipreguntanomiBeanSwingJInternalFrame.jInternalFrameDetalleFormFormatoNomiPreguntaNomi.calificacionempleadoBeanSwingJInternalFrame!=null && this.jInternalFrameDetalleFormEstructura.formatonomiBeanSwingJInternalFrame.jInternalFrameDetalleFormFormatoNomi.formatonomipreguntanomiBeanSwingJInternalFrame.jInternalFrameDetalleFormFormatoNomiPreguntaNomi.calificacionempleadoBeanSwingJInternalFrame.conTotales) {/*this.jInternalFrameDetalleFormEstructura.formatonomiBeanSwingJInternalFrame.jInternalFrameDetalleFormFormatoNomi.formatonomipreguntanomiBeanSwingJInternalFrame.jInternalFrameDetalleFormFormatoNomiPreguntaNomi.calificacionempleadoBeanSwingJInternalFrame.quitarFilaTotales();*/}
									if(this.jInternalFrameDetalleFormEstructura.formatonomiBeanSwingJInternalFrame.jInternalFrameDetalleFormFormatoNomi.formatonomifactornomiBeanSwingJInternalFrame!=null && this.jInternalFrameDetalleFormEstructura.formatonomiBeanSwingJInternalFrame.jInternalFrameDetalleFormFormatoNomi.formatonomifactornomiBeanSwingJInternalFrame.conTotales) {/*this.jInternalFrameDetalleFormEstructura.formatonomiBeanSwingJInternalFrame.jInternalFrameDetalleFormFormatoNomi.formatonomifactornomiBeanSwingJInternalFrame.quitarFilaTotales();*/}
									if(this.jInternalFrameDetalleFormEstructura.formatonomiBeanSwingJInternalFrame.jInternalFrameDetalleFormFormatoNomi.formatonomifactornomiBeanSwingJInternalFrame.jInternalFrameDetalleFormFormatoNomiFactorNomi.calificacionempleadoBeanSwingJInternalFrame!=null && this.jInternalFrameDetalleFormEstructura.formatonomiBeanSwingJInternalFrame.jInternalFrameDetalleFormFormatoNomi.formatonomifactornomiBeanSwingJInternalFrame.jInternalFrameDetalleFormFormatoNomiFactorNomi.calificacionempleadoBeanSwingJInternalFrame.conTotales) {/*this.jInternalFrameDetalleFormEstructura.formatonomiBeanSwingJInternalFrame.jInternalFrameDetalleFormFormatoNomi.formatonomifactornomiBeanSwingJInternalFrame.jInternalFrameDetalleFormFormatoNomiFactorNomi.calificacionempleadoBeanSwingJInternalFrame.quitarFilaTotales();*/}
									if(this.jInternalFrameDetalleFormEstructura.formatonomiBeanSwingJInternalFrame.jInternalFrameDetalleFormFormatoNomi.evaluacionnomiBeanSwingJInternalFrame!=null && this.jInternalFrameDetalleFormEstructura.formatonomiBeanSwingJInternalFrame.jInternalFrameDetalleFormFormatoNomi.evaluacionnomiBeanSwingJInternalFrame.conTotales) {/*this.jInternalFrameDetalleFormEstructura.formatonomiBeanSwingJInternalFrame.jInternalFrameDetalleFormFormatoNomi.evaluacionnomiBeanSwingJInternalFrame.quitarFilaTotales();*/}
									if(this.jInternalFrameDetalleFormEstructura.formatonomiBeanSwingJInternalFrame.jInternalFrameDetalleFormFormatoNomi.evaluacionnomiBeanSwingJInternalFrame.jInternalFrameDetalleFormEvaluacionNomi.detalleevaluacionnomiBeanSwingJInternalFrame!=null && this.jInternalFrameDetalleFormEstructura.formatonomiBeanSwingJInternalFrame.jInternalFrameDetalleFormFormatoNomi.evaluacionnomiBeanSwingJInternalFrame.jInternalFrameDetalleFormEvaluacionNomi.detalleevaluacionnomiBeanSwingJInternalFrame.conTotales) {/*this.jInternalFrameDetalleFormEstructura.formatonomiBeanSwingJInternalFrame.jInternalFrameDetalleFormFormatoNomi.evaluacionnomiBeanSwingJInternalFrame.jInternalFrameDetalleFormEvaluacionNomi.detalleevaluacionnomiBeanSwingJInternalFrame.quitarFilaTotales();*/}
									if(this.jInternalFrameDetalleFormEstructura.formatonomiBeanSwingJInternalFrame.jInternalFrameDetalleFormFormatoNomi.detalleevaluacionnomiBeanSwingJInternalFrame!=null && this.jInternalFrameDetalleFormEstructura.formatonomiBeanSwingJInternalFrame.jInternalFrameDetalleFormFormatoNomi.detalleevaluacionnomiBeanSwingJInternalFrame.conTotales) {/*this.jInternalFrameDetalleFormEstructura.formatonomiBeanSwingJInternalFrame.jInternalFrameDetalleFormFormatoNomi.detalleevaluacionnomiBeanSwingJInternalFrame.quitarFilaTotales();*/}
								if(this.jInternalFrameDetalleFormEstructura.empleadoestructuraBeanSwingJInternalFrame!=null && this.jInternalFrameDetalleFormEstructura.empleadoestructuraBeanSwingJInternalFrame.conTotales) {/*this.jInternalFrameDetalleFormEstructura.empleadoestructuraBeanSwingJInternalFrame.quitarFilaTotales();*/}
								if(this.jInternalFrameDetalleFormEstructura.historialpagonomiBeanSwingJInternalFrame!=null && this.jInternalFrameDetalleFormEstructura.historialpagonomiBeanSwingJInternalFrame.conTotales) {/*this.jInternalFrameDetalleFormEstructura.historialpagonomiBeanSwingJInternalFrame.quitarFilaTotales();*/}
								if(this.jInternalFrameDetalleFormEstructura.asistenciadiariaBeanSwingJInternalFrame!=null && this.jInternalFrameDetalleFormEstructura.asistenciadiariaBeanSwingJInternalFrame.conTotales) {/*this.jInternalFrameDetalleFormEstructura.asistenciadiariaBeanSwingJInternalFrame.quitarFilaTotales();*/}
								if(this.jInternalFrameDetalleFormEstructura.funcionestrucBeanSwingJInternalFrame!=null && this.jInternalFrameDetalleFormEstructura.funcionestrucBeanSwingJInternalFrame.conTotales) {/*this.jInternalFrameDetalleFormEstructura.funcionestrucBeanSwingJInternalFrame.quitarFilaTotales();*/}
								if(this.jInternalFrameDetalleFormEstructura.solicitudreemplazoBeanSwingJInternalFrame!=null && this.jInternalFrameDetalleFormEstructura.solicitudreemplazoBeanSwingJInternalFrame.conTotales) {/*this.jInternalFrameDetalleFormEstructura.solicitudreemplazoBeanSwingJInternalFrame.quitarFilaTotales();*/}
								if(this.jInternalFrameDetalleFormEstructura.solicitudhoraextraBeanSwingJInternalFrame!=null && this.jInternalFrameDetalleFormEstructura.solicitudhoraextraBeanSwingJInternalFrame.conTotales) {/*this.jInternalFrameDetalleFormEstructura.solicitudhoraextraBeanSwingJInternalFrame.quitarFilaTotales();*/}
								if(this.jInternalFrameDetalleFormEstructura.evaluacionnomiBeanSwingJInternalFrame!=null && this.jInternalFrameDetalleFormEstructura.evaluacionnomiBeanSwingJInternalFrame.conTotales) {/*this.jInternalFrameDetalleFormEstructura.evaluacionnomiBeanSwingJInternalFrame.quitarFilaTotales();*/}
									if(this.jInternalFrameDetalleFormEstructura.evaluacionnomiBeanSwingJInternalFrame.jInternalFrameDetalleFormEvaluacionNomi.detalleevaluacionnomiBeanSwingJInternalFrame!=null && this.jInternalFrameDetalleFormEstructura.evaluacionnomiBeanSwingJInternalFrame.jInternalFrameDetalleFormEvaluacionNomi.detalleevaluacionnomiBeanSwingJInternalFrame.conTotales) {/*this.jInternalFrameDetalleFormEstructura.evaluacionnomiBeanSwingJInternalFrame.jInternalFrameDetalleFormEvaluacionNomi.detalleevaluacionnomiBeanSwingJInternalFrame.quitarFilaTotales();*/}
								if(this.jInternalFrameDetalleFormEstructura.solicitudvacacionBeanSwingJInternalFrame!=null && this.jInternalFrameDetalleFormEstructura.solicitudvacacionBeanSwingJInternalFrame.conTotales) {/*this.jInternalFrameDetalleFormEstructura.solicitudvacacionBeanSwingJInternalFrame.quitarFilaTotales();*/}
								if(this.jInternalFrameDetalleFormEstructura.responsableactivofijoBeanSwingJInternalFrame!=null && this.jInternalFrameDetalleFormEstructura.responsableactivofijoBeanSwingJInternalFrame.conTotales) {/*this.jInternalFrameDetalleFormEstructura.responsableactivofijoBeanSwingJInternalFrame.quitarFilaTotales();*/}
								if(this.jInternalFrameDetalleFormEstructura.rubroempleacuentacontableBeanSwingJInternalFrame!=null && this.jInternalFrameDetalleFormEstructura.rubroempleacuentacontableBeanSwingJInternalFrame.conTotales) {/*this.jInternalFrameDetalleFormEstructura.rubroempleacuentacontableBeanSwingJInternalFrame.quitarFilaTotales();*/}	
							}
							//ARCHITECTURE
							
							//ARCHITECTURE
							if(Constantes.ISUSAEJBLOGICLAYER) {
								estructuraLogic.saveEstructuraRelaciones(estructuraAux,this.jInternalFrameDetalleFormEstructura.centrocostoestructuraBeanSwingJInternalFrame.centrocostoestructuraLogic.getCentroCostoEstructuras(),this.jInternalFrameDetalleFormEstructura.planivacacionBeanSwingJInternalFrame.planivacacionLogic.getPlaniVacacions(),this.jInternalFrameDetalleFormEstructura.asistenciamensualBeanSwingJInternalFrame.asistenciamensualLogic.getAsistenciaMensuals(),this.jInternalFrameDetalleFormEstructura.empleadoprocesorubroBeanSwingJInternalFrame.empleadoprocesorubroLogic.getEmpleadoProcesoRubros(),this.jInternalFrameDetalleFormEstructura.empleadopagorubroBeanSwingJInternalFrame.empleadopagorubroLogic.getEmpleadoPagoRubros(),this.jInternalFrameDetalleFormEstructura.provisionempleadoBeanSwingJInternalFrame.provisionempleadoLogic.getProvisionEmpleados(),this.jInternalFrameDetalleFormEstructura.empleadoBeanSwingJInternalFrame.empleadoLogic.getEmpleados(),this.jInternalFrameDetalleFormEstructura.estructuraBeanSwingJInternalFrame.estructuraLogic.getEstructuras(),this.jInternalFrameDetalleFormEstructura.evaluacionempleadoBeanSwingJInternalFrame.evaluacionempleadoLogic.getEvaluacionEmpleados(),this.jInternalFrameDetalleFormEstructura.empleadoimpuestorentaBeanSwingJInternalFrame.empleadoimpuestorentaLogic.getEmpleadoImpuestoRentas(),this.jInternalFrameDetalleFormEstructura.rubroestructuraBeanSwingJInternalFrame.rubroestructuraLogic.getRubroEstructuras(),this.jInternalFrameDetalleFormEstructura.cierrerolmensualBeanSwingJInternalFrame.cierrerolmensualLogic.getCierreRolMensuals(),this.jInternalFrameDetalleFormEstructura.formatonomiBeanSwingJInternalFrame.formatonomiLogic.getFormatoNomis(),this.jInternalFrameDetalleFormEstructura.empleadoestructuraBeanSwingJInternalFrame.empleadoestructuraLogic.getEmpleadoEstructuras(),this.jInternalFrameDetalleFormEstructura.historialpagonomiBeanSwingJInternalFrame.historialpagonomiLogic.getHistorialPagoNomis(),this.jInternalFrameDetalleFormEstructura.asistenciadiariaBeanSwingJInternalFrame.asistenciadiariaLogic.getAsistenciaDiarias(),this.jInternalFrameDetalleFormEstructura.funcionestrucBeanSwingJInternalFrame.funcionestrucLogic.getFuncionEstrucs(),this.jInternalFrameDetalleFormEstructura.solicitudreemplazoBeanSwingJInternalFrame.solicitudreemplazoLogic.getSolicitudReemplazos(),this.jInternalFrameDetalleFormEstructura.solicitudhoraextraBeanSwingJInternalFrame.solicitudhoraextraLogic.getSolicitudHoraExtras(),this.jInternalFrameDetalleFormEstructura.evaluacionnomiBeanSwingJInternalFrame.evaluacionnomiLogic.getEvaluacionNomis(),this.jInternalFrameDetalleFormEstructura.solicitudvacacionBeanSwingJInternalFrame.solicitudvacacionLogic.getSolicitudVacacions(),this.jInternalFrameDetalleFormEstructura.responsableactivofijoBeanSwingJInternalFrame.responsableactivofijoLogic.getResponsableActivoFijos(),this.jInternalFrameDetalleFormEstructura.rubroempleacuentacontableBeanSwingJInternalFrame.rubroempleacuentacontableLogic.getRubroEmpleaCuentaContables());//WithConnection
								//estructuraLogic.getSetVersionRowEstructuras();//WithConnection
							} else if(Constantes.ISUSAEJBREMOTE) {
							} else if(Constantes.ISUSAEJBHOME) {
							}
							//ARCHITECTURE
							
							//ARCHITECTURE
							if(Constantes.ISUSAEJBLOGICLAYER) {
								
							this.jInternalFrameDetalleFormEstructura.centrocostoestructuraBeanSwingJInternalFrame.centrocostoestructuraLogic.setCentroCostoEstructuras(new ArrayList<CentroCostoEstructura>());
							this.jInternalFrameDetalleFormEstructura.planivacacionBeanSwingJInternalFrame.planivacacionLogic.setPlaniVacacions(new ArrayList<PlaniVacacion>());
							this.jInternalFrameDetalleFormEstructura.asistenciamensualBeanSwingJInternalFrame.asistenciamensualLogic.setAsistenciaMensuals(new ArrayList<AsistenciaMensual>());
							this.jInternalFrameDetalleFormEstructura.empleadoprocesorubroBeanSwingJInternalFrame.empleadoprocesorubroLogic.setEmpleadoProcesoRubros(new ArrayList<EmpleadoProcesoRubro>());
							this.jInternalFrameDetalleFormEstructura.empleadopagorubroBeanSwingJInternalFrame.empleadopagorubroLogic.setEmpleadoPagoRubros(new ArrayList<EmpleadoPagoRubro>());
							this.jInternalFrameDetalleFormEstructura.provisionempleadoBeanSwingJInternalFrame.provisionempleadoLogic.setProvisionEmpleados(new ArrayList<ProvisionEmpleado>());
							this.jInternalFrameDetalleFormEstructura.empleadoBeanSwingJInternalFrame.empleadoLogic.setEmpleados(new ArrayList<Empleado>());
							this.jInternalFrameDetalleFormEstructura.estructuraBeanSwingJInternalFrame.estructuraLogic.setEstructuras(new ArrayList<Estructura>());
							this.jInternalFrameDetalleFormEstructura.evaluacionempleadoBeanSwingJInternalFrame.evaluacionempleadoLogic.setEvaluacionEmpleados(new ArrayList<EvaluacionEmpleado>());
							this.jInternalFrameDetalleFormEstructura.empleadoimpuestorentaBeanSwingJInternalFrame.empleadoimpuestorentaLogic.setEmpleadoImpuestoRentas(new ArrayList<EmpleadoImpuestoRenta>());
							this.jInternalFrameDetalleFormEstructura.rubroestructuraBeanSwingJInternalFrame.rubroestructuraLogic.setRubroEstructuras(new ArrayList<RubroEstructura>());
							this.jInternalFrameDetalleFormEstructura.cierrerolmensualBeanSwingJInternalFrame.cierrerolmensualLogic.setCierreRolMensuals(new ArrayList<CierreRolMensual>());
							this.jInternalFrameDetalleFormEstructura.formatonomiBeanSwingJInternalFrame.formatonomiLogic.setFormatoNomis(new ArrayList<FormatoNomi>());
							this.jInternalFrameDetalleFormEstructura.empleadoestructuraBeanSwingJInternalFrame.empleadoestructuraLogic.setEmpleadoEstructuras(new ArrayList<EmpleadoEstructura>());
							this.jInternalFrameDetalleFormEstructura.historialpagonomiBeanSwingJInternalFrame.historialpagonomiLogic.setHistorialPagoNomis(new ArrayList<HistorialPagoNomi>());
							this.jInternalFrameDetalleFormEstructura.asistenciadiariaBeanSwingJInternalFrame.asistenciadiariaLogic.setAsistenciaDiarias(new ArrayList<AsistenciaDiaria>());
							this.jInternalFrameDetalleFormEstructura.funcionestrucBeanSwingJInternalFrame.funcionestrucLogic.setFuncionEstrucs(new ArrayList<FuncionEstruc>());
							this.jInternalFrameDetalleFormEstructura.solicitudreemplazoBeanSwingJInternalFrame.solicitudreemplazoLogic.setSolicitudReemplazos(new ArrayList<SolicitudReemplazo>());
							this.jInternalFrameDetalleFormEstructura.solicitudhoraextraBeanSwingJInternalFrame.solicitudhoraextraLogic.setSolicitudHoraExtras(new ArrayList<SolicitudHoraExtra>());
							this.jInternalFrameDetalleFormEstructura.evaluacionnomiBeanSwingJInternalFrame.evaluacionnomiLogic.setEvaluacionNomis(new ArrayList<EvaluacionNomi>());
							this.jInternalFrameDetalleFormEstructura.solicitudvacacionBeanSwingJInternalFrame.solicitudvacacionLogic.setSolicitudVacacions(new ArrayList<SolicitudVacacion>());
							this.jInternalFrameDetalleFormEstructura.responsableactivofijoBeanSwingJInternalFrame.responsableactivofijoLogic.setResponsableActivoFijos(new ArrayList<ResponsableActivoFijo>());
							this.jInternalFrameDetalleFormEstructura.rubroempleacuentacontableBeanSwingJInternalFrame.rubroempleacuentacontableLogic.setRubroEmpleaCuentaContables(new ArrayList<RubroEmpleaCuentaContable>());
							} else if(Constantes.ISUSAEJBREMOTE ||Constantes.ISUSAEJBHOME) {
								
							this.jInternalFrameDetalleFormEstructura.centrocostoestructuraBeanSwingJInternalFrame.centrocostoestructuras= new ArrayList<CentroCostoEstructura>();
							this.jInternalFrameDetalleFormEstructura.planivacacionBeanSwingJInternalFrame.planivacacions= new ArrayList<PlaniVacacion>();
							this.jInternalFrameDetalleFormEstructura.asistenciamensualBeanSwingJInternalFrame.asistenciamensuals= new ArrayList<AsistenciaMensual>();
							this.jInternalFrameDetalleFormEstructura.empleadoprocesorubroBeanSwingJInternalFrame.empleadoprocesorubros= new ArrayList<EmpleadoProcesoRubro>();
							this.jInternalFrameDetalleFormEstructura.empleadopagorubroBeanSwingJInternalFrame.empleadopagorubros= new ArrayList<EmpleadoPagoRubro>();
							this.jInternalFrameDetalleFormEstructura.provisionempleadoBeanSwingJInternalFrame.provisionempleados= new ArrayList<ProvisionEmpleado>();
							this.jInternalFrameDetalleFormEstructura.empleadoBeanSwingJInternalFrame.empleados= new ArrayList<Empleado>();
							this.jInternalFrameDetalleFormEstructura.estructuraBeanSwingJInternalFrame.estructuras= new ArrayList<Estructura>();
							this.jInternalFrameDetalleFormEstructura.evaluacionempleadoBeanSwingJInternalFrame.evaluacionempleados= new ArrayList<EvaluacionEmpleado>();
							this.jInternalFrameDetalleFormEstructura.empleadoimpuestorentaBeanSwingJInternalFrame.empleadoimpuestorentas= new ArrayList<EmpleadoImpuestoRenta>();
							this.jInternalFrameDetalleFormEstructura.rubroestructuraBeanSwingJInternalFrame.rubroestructuras= new ArrayList<RubroEstructura>();
							this.jInternalFrameDetalleFormEstructura.cierrerolmensualBeanSwingJInternalFrame.cierrerolmensuals= new ArrayList<CierreRolMensual>();
							this.jInternalFrameDetalleFormEstructura.formatonomiBeanSwingJInternalFrame.formatonomis= new ArrayList<FormatoNomi>();
							this.jInternalFrameDetalleFormEstructura.empleadoestructuraBeanSwingJInternalFrame.empleadoestructuras= new ArrayList<EmpleadoEstructura>();
							this.jInternalFrameDetalleFormEstructura.historialpagonomiBeanSwingJInternalFrame.historialpagonomis= new ArrayList<HistorialPagoNomi>();
							this.jInternalFrameDetalleFormEstructura.asistenciadiariaBeanSwingJInternalFrame.asistenciadiarias= new ArrayList<AsistenciaDiaria>();
							this.jInternalFrameDetalleFormEstructura.funcionestrucBeanSwingJInternalFrame.funcionestrucs= new ArrayList<FuncionEstruc>();
							this.jInternalFrameDetalleFormEstructura.solicitudreemplazoBeanSwingJInternalFrame.solicitudreemplazos= new ArrayList<SolicitudReemplazo>();
							this.jInternalFrameDetalleFormEstructura.solicitudhoraextraBeanSwingJInternalFrame.solicitudhoraextras= new ArrayList<SolicitudHoraExtra>();
							this.jInternalFrameDetalleFormEstructura.evaluacionnomiBeanSwingJInternalFrame.evaluacionnomis= new ArrayList<EvaluacionNomi>();
							this.jInternalFrameDetalleFormEstructura.solicitudvacacionBeanSwingJInternalFrame.solicitudvacacions= new ArrayList<SolicitudVacacion>();
							this.jInternalFrameDetalleFormEstructura.responsableactivofijoBeanSwingJInternalFrame.responsableactivofijos= new ArrayList<ResponsableActivoFijo>();
							this.jInternalFrameDetalleFormEstructura.rubroempleacuentacontableBeanSwingJInternalFrame.rubroempleacuentacontables= new ArrayList<RubroEmpleaCuentaContable>();
							}
							//ARCHITECTURE
						}
					}  else {
							
						

							if(this.jInternalFrameDetalleFormEstructura.centrocostoestructuraBeanSwingJInternalFrame!=null && this.jInternalFrameDetalleFormEstructura.centrocostoestructuraBeanSwingJInternalFrame.conTotales) {this.jInternalFrameDetalleFormEstructura.centrocostoestructuraBeanSwingJInternalFrame.quitarFilaTotales();}
							estructuraAux.setCentroCostoEstructuras(this.jInternalFrameDetalleFormEstructura.centrocostoestructuraBeanSwingJInternalFrame.centrocostoestructuraLogic.getCentroCostoEstructuras());

							if(this.jInternalFrameDetalleFormEstructura.planivacacionBeanSwingJInternalFrame!=null && this.jInternalFrameDetalleFormEstructura.planivacacionBeanSwingJInternalFrame.conTotales) {this.jInternalFrameDetalleFormEstructura.planivacacionBeanSwingJInternalFrame.quitarFilaTotales();}
							estructuraAux.setPlaniVacacionCargos(this.jInternalFrameDetalleFormEstructura.planivacacionBeanSwingJInternalFrame.planivacacionLogic.getPlaniVacacions());

							if(this.jInternalFrameDetalleFormEstructura.asistenciamensualBeanSwingJInternalFrame!=null && this.jInternalFrameDetalleFormEstructura.asistenciamensualBeanSwingJInternalFrame.conTotales) {this.jInternalFrameDetalleFormEstructura.asistenciamensualBeanSwingJInternalFrame.quitarFilaTotales();}
							estructuraAux.setAsistenciaMensuals(this.jInternalFrameDetalleFormEstructura.asistenciamensualBeanSwingJInternalFrame.asistenciamensualLogic.getAsistenciaMensuals());

							if(this.jInternalFrameDetalleFormEstructura.empleadoprocesorubroBeanSwingJInternalFrame!=null && this.jInternalFrameDetalleFormEstructura.empleadoprocesorubroBeanSwingJInternalFrame.conTotales) {this.jInternalFrameDetalleFormEstructura.empleadoprocesorubroBeanSwingJInternalFrame.quitarFilaTotales();}
							estructuraAux.setEmpleadoProcesoRubros(this.jInternalFrameDetalleFormEstructura.empleadoprocesorubroBeanSwingJInternalFrame.empleadoprocesorubroLogic.getEmpleadoProcesoRubros());

							if(this.jInternalFrameDetalleFormEstructura.empleadopagorubroBeanSwingJInternalFrame!=null && this.jInternalFrameDetalleFormEstructura.empleadopagorubroBeanSwingJInternalFrame.conTotales) {this.jInternalFrameDetalleFormEstructura.empleadopagorubroBeanSwingJInternalFrame.quitarFilaTotales();}
							estructuraAux.setEmpleadoPagoRubros(this.jInternalFrameDetalleFormEstructura.empleadopagorubroBeanSwingJInternalFrame.empleadopagorubroLogic.getEmpleadoPagoRubros());

							if(this.jInternalFrameDetalleFormEstructura.provisionempleadoBeanSwingJInternalFrame!=null && this.jInternalFrameDetalleFormEstructura.provisionempleadoBeanSwingJInternalFrame.conTotales) {this.jInternalFrameDetalleFormEstructura.provisionempleadoBeanSwingJInternalFrame.quitarFilaTotales();}
							estructuraAux.setProvisionEmpleados(this.jInternalFrameDetalleFormEstructura.provisionempleadoBeanSwingJInternalFrame.provisionempleadoLogic.getProvisionEmpleados());

							if(this.jInternalFrameDetalleFormEstructura.empleadoBeanSwingJInternalFrame!=null && this.jInternalFrameDetalleFormEstructura.empleadoBeanSwingJInternalFrame.conTotales) {this.jInternalFrameDetalleFormEstructura.empleadoBeanSwingJInternalFrame.quitarFilaTotales();}
							estructuraAux.setEmpleados(this.jInternalFrameDetalleFormEstructura.empleadoBeanSwingJInternalFrame.empleadoLogic.getEmpleados());

							if(this.jInternalFrameDetalleFormEstructura.estructuraBeanSwingJInternalFrame!=null && this.jInternalFrameDetalleFormEstructura.estructuraBeanSwingJInternalFrame.conTotales) {this.jInternalFrameDetalleFormEstructura.estructuraBeanSwingJInternalFrame.quitarFilaTotales();}
							estructuraAux.setEstructuras(this.jInternalFrameDetalleFormEstructura.estructuraBeanSwingJInternalFrame.estructuraLogic.getEstructuras());

							if(this.jInternalFrameDetalleFormEstructura.evaluacionempleadoBeanSwingJInternalFrame!=null && this.jInternalFrameDetalleFormEstructura.evaluacionempleadoBeanSwingJInternalFrame.conTotales) {this.jInternalFrameDetalleFormEstructura.evaluacionempleadoBeanSwingJInternalFrame.quitarFilaTotales();}
							estructuraAux.setEvaluacionEmpleados(this.jInternalFrameDetalleFormEstructura.evaluacionempleadoBeanSwingJInternalFrame.evaluacionempleadoLogic.getEvaluacionEmpleados());

							if(this.jInternalFrameDetalleFormEstructura.empleadoimpuestorentaBeanSwingJInternalFrame!=null && this.jInternalFrameDetalleFormEstructura.empleadoimpuestorentaBeanSwingJInternalFrame.conTotales) {this.jInternalFrameDetalleFormEstructura.empleadoimpuestorentaBeanSwingJInternalFrame.quitarFilaTotales();}
							estructuraAux.setEmpleadoImpuestoRentas(this.jInternalFrameDetalleFormEstructura.empleadoimpuestorentaBeanSwingJInternalFrame.empleadoimpuestorentaLogic.getEmpleadoImpuestoRentas());

							if(this.jInternalFrameDetalleFormEstructura.rubroestructuraBeanSwingJInternalFrame!=null && this.jInternalFrameDetalleFormEstructura.rubroestructuraBeanSwingJInternalFrame.conTotales) {this.jInternalFrameDetalleFormEstructura.rubroestructuraBeanSwingJInternalFrame.quitarFilaTotales();}
							estructuraAux.setRubroEstructuras(this.jInternalFrameDetalleFormEstructura.rubroestructuraBeanSwingJInternalFrame.rubroestructuraLogic.getRubroEstructuras());

							if(this.jInternalFrameDetalleFormEstructura.cierrerolmensualBeanSwingJInternalFrame!=null && this.jInternalFrameDetalleFormEstructura.cierrerolmensualBeanSwingJInternalFrame.conTotales) {this.jInternalFrameDetalleFormEstructura.cierrerolmensualBeanSwingJInternalFrame.quitarFilaTotales();}
							estructuraAux.setCierreRolMensuals(this.jInternalFrameDetalleFormEstructura.cierrerolmensualBeanSwingJInternalFrame.cierrerolmensualLogic.getCierreRolMensuals());

							if(this.jInternalFrameDetalleFormEstructura.formatonomiBeanSwingJInternalFrame!=null && this.jInternalFrameDetalleFormEstructura.formatonomiBeanSwingJInternalFrame.conTotales) {this.jInternalFrameDetalleFormEstructura.formatonomiBeanSwingJInternalFrame.quitarFilaTotales();}
							estructuraAux.setFormatoNomis(this.jInternalFrameDetalleFormEstructura.formatonomiBeanSwingJInternalFrame.formatonomiLogic.getFormatoNomis());

							if(this.jInternalFrameDetalleFormEstructura.empleadoestructuraBeanSwingJInternalFrame!=null && this.jInternalFrameDetalleFormEstructura.empleadoestructuraBeanSwingJInternalFrame.conTotales) {this.jInternalFrameDetalleFormEstructura.empleadoestructuraBeanSwingJInternalFrame.quitarFilaTotales();}
							estructuraAux.setEmpleadoEstructuras(this.jInternalFrameDetalleFormEstructura.empleadoestructuraBeanSwingJInternalFrame.empleadoestructuraLogic.getEmpleadoEstructuras());

							if(this.jInternalFrameDetalleFormEstructura.historialpagonomiBeanSwingJInternalFrame!=null && this.jInternalFrameDetalleFormEstructura.historialpagonomiBeanSwingJInternalFrame.conTotales) {this.jInternalFrameDetalleFormEstructura.historialpagonomiBeanSwingJInternalFrame.quitarFilaTotales();}
							estructuraAux.setHistorialPagoNomis(this.jInternalFrameDetalleFormEstructura.historialpagonomiBeanSwingJInternalFrame.historialpagonomiLogic.getHistorialPagoNomis());

							if(this.jInternalFrameDetalleFormEstructura.asistenciadiariaBeanSwingJInternalFrame!=null && this.jInternalFrameDetalleFormEstructura.asistenciadiariaBeanSwingJInternalFrame.conTotales) {this.jInternalFrameDetalleFormEstructura.asistenciadiariaBeanSwingJInternalFrame.quitarFilaTotales();}
							estructuraAux.setAsistenciaDiarias(this.jInternalFrameDetalleFormEstructura.asistenciadiariaBeanSwingJInternalFrame.asistenciadiariaLogic.getAsistenciaDiarias());

							if(this.jInternalFrameDetalleFormEstructura.funcionestrucBeanSwingJInternalFrame!=null && this.jInternalFrameDetalleFormEstructura.funcionestrucBeanSwingJInternalFrame.conTotales) {this.jInternalFrameDetalleFormEstructura.funcionestrucBeanSwingJInternalFrame.quitarFilaTotales();}
							estructuraAux.setFuncionEstrucs(this.jInternalFrameDetalleFormEstructura.funcionestrucBeanSwingJInternalFrame.funcionestrucLogic.getFuncionEstrucs());

							if(this.jInternalFrameDetalleFormEstructura.solicitudreemplazoBeanSwingJInternalFrame!=null && this.jInternalFrameDetalleFormEstructura.solicitudreemplazoBeanSwingJInternalFrame.conTotales) {this.jInternalFrameDetalleFormEstructura.solicitudreemplazoBeanSwingJInternalFrame.quitarFilaTotales();}
							estructuraAux.setSolicitudReemplazos(this.jInternalFrameDetalleFormEstructura.solicitudreemplazoBeanSwingJInternalFrame.solicitudreemplazoLogic.getSolicitudReemplazos());

							if(this.jInternalFrameDetalleFormEstructura.solicitudhoraextraBeanSwingJInternalFrame!=null && this.jInternalFrameDetalleFormEstructura.solicitudhoraextraBeanSwingJInternalFrame.conTotales) {this.jInternalFrameDetalleFormEstructura.solicitudhoraextraBeanSwingJInternalFrame.quitarFilaTotales();}
							estructuraAux.setSolicitudHoraExtras(this.jInternalFrameDetalleFormEstructura.solicitudhoraextraBeanSwingJInternalFrame.solicitudhoraextraLogic.getSolicitudHoraExtras());

							if(this.jInternalFrameDetalleFormEstructura.evaluacionnomiBeanSwingJInternalFrame!=null && this.jInternalFrameDetalleFormEstructura.evaluacionnomiBeanSwingJInternalFrame.conTotales) {this.jInternalFrameDetalleFormEstructura.evaluacionnomiBeanSwingJInternalFrame.quitarFilaTotales();}
							estructuraAux.setEvaluacionNomis(this.jInternalFrameDetalleFormEstructura.evaluacionnomiBeanSwingJInternalFrame.evaluacionnomiLogic.getEvaluacionNomis());

							if(this.jInternalFrameDetalleFormEstructura.solicitudvacacionBeanSwingJInternalFrame!=null && this.jInternalFrameDetalleFormEstructura.solicitudvacacionBeanSwingJInternalFrame.conTotales) {this.jInternalFrameDetalleFormEstructura.solicitudvacacionBeanSwingJInternalFrame.quitarFilaTotales();}
							estructuraAux.setSolicitudVacacions(this.jInternalFrameDetalleFormEstructura.solicitudvacacionBeanSwingJInternalFrame.solicitudvacacionLogic.getSolicitudVacacions());

							if(this.jInternalFrameDetalleFormEstructura.responsableactivofijoBeanSwingJInternalFrame!=null && this.jInternalFrameDetalleFormEstructura.responsableactivofijoBeanSwingJInternalFrame.conTotales) {this.jInternalFrameDetalleFormEstructura.responsableactivofijoBeanSwingJInternalFrame.quitarFilaTotales();}
							estructuraAux.setResponsableActivoFijos(this.jInternalFrameDetalleFormEstructura.responsableactivofijoBeanSwingJInternalFrame.responsableactivofijoLogic.getResponsableActivoFijos());

							if(this.jInternalFrameDetalleFormEstructura.rubroempleacuentacontableBeanSwingJInternalFrame!=null && this.jInternalFrameDetalleFormEstructura.rubroempleacuentacontableBeanSwingJInternalFrame.conTotales) {this.jInternalFrameDetalleFormEstructura.rubroempleacuentacontableBeanSwingJInternalFrame.quitarFilaTotales();}
							estructuraAux.setRubroEmpleaCuentaContables(this.jInternalFrameDetalleFormEstructura.rubroempleacuentacontableBeanSwingJInternalFrame.rubroempleacuentacontableLogic.getRubroEmpleaCuentaContables());
								
						//ARCHITECTURE
						if(Constantes.ISUSAEJBLOGICLAYER) {
							if(this.estructuraSessionBean.getEstaModoGuardarRelaciones() 
								|| this.estructuraSessionBean.getEsGuardarRelacionado())	{
								actualizarLista(estructuraAux,estructuraLogic.getEstructuras());
							}
						} else if(Constantes.ISUSAEJBREMOTE||Constantes.ISUSAEJBHOME) {
							actualizarLista(estructuraAux,estructuras);
						}
						//ARCHITECTURE
					}
				}				
			} else if(maintenanceType==MaintenanceType.GUARDARCAMBIOS) {		
				
				//ARCHITECTURE
				if(Constantes.ISUSAEJBLOGICLAYER) {
					this.estructuraLogic.getEstructuras().addAll(this.estructurasEliminados);
					
					estructuraLogic.saveEstructuras();//WithConnection
					//estructuraLogic.getSetVersionRowEstructuras();//WithConnection
				} else if(Constantes.ISUSAEJBREMOTE) {
				} else if(Constantes.ISUSAEJBHOME) {
				}	
				//ARCHITECTURE
				this.refrescarForeignKeysDescripcionesEstructura();
				
				this.estructurasEliminados= new ArrayList<Estructura>();		
			}
			
			if(this.estructuraSessionBean.getEsGuardarRelacionado()) {
				 this.crearFilaTotales();
			}
			
			
			//ACTUALIZA ARBOL
			this.getTodosEstructuraArbol();
			
			//TO_OPTIMIZE POR TIPO FK NO TODOS
			this.inicializarCombosForeignKeyEstructuraListas();
			
			this.cargarCombosForeignKeyEstructura(false);
									
			if(this.parametroGeneralUsuario.getcon_mensaje_confirmacion() && !this.estructuraSessionBean.getEsGuardarRelacionado()) {//Constantes.ISMOSTRARMENSAJESMANTENIMIENTO && 
				if(!this.isPostAccionSinMensaje) {
					JOptionPane.showMessageDialog(this,"Estructura GUARDADO CORRECTAMENTE","MANTENIMIENTO DE Estructura",JOptionPane.INFORMATION_MESSAGE);
					if(maintenanceType==MaintenanceType.NUEVO || maintenanceType==MaintenanceType.ACTUALIZAR) {
						//CUANDO ES NUEVO SE PIERDE REFERENCIA NO SE PORQUE
						this.estructura=estructuraAux;
					}
				}
			}
			
			this.isErrorGuardar=false;
			
			this.inicializarInvalidValues();
		/*
		} else {
			this.mostrarInvalidValues();	
		}
		*/
			
		} catch(Exception e) {
			this.isErrorGuardar=true;
			
			this.crearFilaTotales();
			
			throw e;
		} finally {
      		//this.finishProcessEstructura();
      	}
		
	}	
	
	public void actualizarRelaciones(Estructura estructuraLocal) throws Exception {
		
		if(this.estructuraSessionBean.getConGuardarRelaciones()) {			
			
			if(Constantes.ISUSAEJBLOGICLAYER) {
			
				estructuraLocal.setCentroCostoEstructuras(this.jInternalFrameDetalleFormEstructura.centrocostoestructuraBeanSwingJInternalFrame.centrocostoestructuraLogic.getCentroCostoEstructuras());
				estructuraLocal.setPlaniVacacionCargos(this.jInternalFrameDetalleFormEstructura.planivacacionBeanSwingJInternalFrame.planivacacionLogic.getPlaniVacacions());
				estructuraLocal.setAsistenciaMensuals(this.jInternalFrameDetalleFormEstructura.asistenciamensualBeanSwingJInternalFrame.asistenciamensualLogic.getAsistenciaMensuals());
				estructuraLocal.setEmpleadoProcesoRubros(this.jInternalFrameDetalleFormEstructura.empleadoprocesorubroBeanSwingJInternalFrame.empleadoprocesorubroLogic.getEmpleadoProcesoRubros());
				estructuraLocal.setEmpleadoPagoRubros(this.jInternalFrameDetalleFormEstructura.empleadopagorubroBeanSwingJInternalFrame.empleadopagorubroLogic.getEmpleadoPagoRubros());
				estructuraLocal.setProvisionEmpleados(this.jInternalFrameDetalleFormEstructura.provisionempleadoBeanSwingJInternalFrame.provisionempleadoLogic.getProvisionEmpleados());
				estructuraLocal.setEmpleados(this.jInternalFrameDetalleFormEstructura.empleadoBeanSwingJInternalFrame.empleadoLogic.getEmpleados());
				estructuraLocal.setEstructuras(this.jInternalFrameDetalleFormEstructura.estructuraBeanSwingJInternalFrame.estructuraLogic.getEstructuras());
				estructuraLocal.setEvaluacionEmpleados(this.jInternalFrameDetalleFormEstructura.evaluacionempleadoBeanSwingJInternalFrame.evaluacionempleadoLogic.getEvaluacionEmpleados());
				estructuraLocal.setEmpleadoImpuestoRentas(this.jInternalFrameDetalleFormEstructura.empleadoimpuestorentaBeanSwingJInternalFrame.empleadoimpuestorentaLogic.getEmpleadoImpuestoRentas());
				estructuraLocal.setRubroEstructuras(this.jInternalFrameDetalleFormEstructura.rubroestructuraBeanSwingJInternalFrame.rubroestructuraLogic.getRubroEstructuras());
				estructuraLocal.setCierreRolMensuals(this.jInternalFrameDetalleFormEstructura.cierrerolmensualBeanSwingJInternalFrame.cierrerolmensualLogic.getCierreRolMensuals());
				estructuraLocal.setFormatoNomis(this.jInternalFrameDetalleFormEstructura.formatonomiBeanSwingJInternalFrame.formatonomiLogic.getFormatoNomis());
				estructuraLocal.setEmpleadoEstructuras(this.jInternalFrameDetalleFormEstructura.empleadoestructuraBeanSwingJInternalFrame.empleadoestructuraLogic.getEmpleadoEstructuras());
				estructuraLocal.setHistorialPagoNomis(this.jInternalFrameDetalleFormEstructura.historialpagonomiBeanSwingJInternalFrame.historialpagonomiLogic.getHistorialPagoNomis());
				estructuraLocal.setAsistenciaDiarias(this.jInternalFrameDetalleFormEstructura.asistenciadiariaBeanSwingJInternalFrame.asistenciadiariaLogic.getAsistenciaDiarias());
				estructuraLocal.setFuncionEstrucs(this.jInternalFrameDetalleFormEstructura.funcionestrucBeanSwingJInternalFrame.funcionestrucLogic.getFuncionEstrucs());
				estructuraLocal.setSolicitudReemplazos(this.jInternalFrameDetalleFormEstructura.solicitudreemplazoBeanSwingJInternalFrame.solicitudreemplazoLogic.getSolicitudReemplazos());
				estructuraLocal.setSolicitudHoraExtras(this.jInternalFrameDetalleFormEstructura.solicitudhoraextraBeanSwingJInternalFrame.solicitudhoraextraLogic.getSolicitudHoraExtras());
				estructuraLocal.setEvaluacionNomis(this.jInternalFrameDetalleFormEstructura.evaluacionnomiBeanSwingJInternalFrame.evaluacionnomiLogic.getEvaluacionNomis());
				estructuraLocal.setSolicitudVacacions(this.jInternalFrameDetalleFormEstructura.solicitudvacacionBeanSwingJInternalFrame.solicitudvacacionLogic.getSolicitudVacacions());
				estructuraLocal.setResponsableActivoFijos(this.jInternalFrameDetalleFormEstructura.responsableactivofijoBeanSwingJInternalFrame.responsableactivofijoLogic.getResponsableActivoFijos());
				estructuraLocal.setRubroEmpleaCuentaContables(this.jInternalFrameDetalleFormEstructura.rubroempleacuentacontableBeanSwingJInternalFrame.rubroempleacuentacontableLogic.getRubroEmpleaCuentaContables());
			
			} else {
			
				estructuraLocal.setCentroCostoEstructuras(this.jInternalFrameDetalleFormEstructura.centrocostoestructuraBeanSwingJInternalFrame.centrocostoestructuras);
				estructuraLocal.setPlaniVacacionCargos(this.jInternalFrameDetalleFormEstructura.planivacacionBeanSwingJInternalFrame.planivacacions);
				estructuraLocal.setAsistenciaMensuals(this.jInternalFrameDetalleFormEstructura.asistenciamensualBeanSwingJInternalFrame.asistenciamensuals);
				estructuraLocal.setEmpleadoProcesoRubros(this.jInternalFrameDetalleFormEstructura.empleadoprocesorubroBeanSwingJInternalFrame.empleadoprocesorubros);
				estructuraLocal.setEmpleadoPagoRubros(this.jInternalFrameDetalleFormEstructura.empleadopagorubroBeanSwingJInternalFrame.empleadopagorubros);
				estructuraLocal.setProvisionEmpleados(this.jInternalFrameDetalleFormEstructura.provisionempleadoBeanSwingJInternalFrame.provisionempleados);
				estructuraLocal.setEmpleados(this.jInternalFrameDetalleFormEstructura.empleadoBeanSwingJInternalFrame.empleados);
				estructuraLocal.setEstructuras(this.jInternalFrameDetalleFormEstructura.estructuraBeanSwingJInternalFrame.estructuras);
				estructuraLocal.setEvaluacionEmpleados(this.jInternalFrameDetalleFormEstructura.evaluacionempleadoBeanSwingJInternalFrame.evaluacionempleados);
				estructuraLocal.setEmpleadoImpuestoRentas(this.jInternalFrameDetalleFormEstructura.empleadoimpuestorentaBeanSwingJInternalFrame.empleadoimpuestorentas);
				estructuraLocal.setRubroEstructuras(this.jInternalFrameDetalleFormEstructura.rubroestructuraBeanSwingJInternalFrame.rubroestructuras);
				estructuraLocal.setCierreRolMensuals(this.jInternalFrameDetalleFormEstructura.cierrerolmensualBeanSwingJInternalFrame.cierrerolmensuals);
				estructuraLocal.setFormatoNomis(this.jInternalFrameDetalleFormEstructura.formatonomiBeanSwingJInternalFrame.formatonomis);
				estructuraLocal.setEmpleadoEstructuras(this.jInternalFrameDetalleFormEstructura.empleadoestructuraBeanSwingJInternalFrame.empleadoestructuras);
				estructuraLocal.setHistorialPagoNomis(this.jInternalFrameDetalleFormEstructura.historialpagonomiBeanSwingJInternalFrame.historialpagonomis);
				estructuraLocal.setAsistenciaDiarias(this.jInternalFrameDetalleFormEstructura.asistenciadiariaBeanSwingJInternalFrame.asistenciadiarias);
				estructuraLocal.setFuncionEstrucs(this.jInternalFrameDetalleFormEstructura.funcionestrucBeanSwingJInternalFrame.funcionestrucs);
				estructuraLocal.setSolicitudReemplazos(this.jInternalFrameDetalleFormEstructura.solicitudreemplazoBeanSwingJInternalFrame.solicitudreemplazos);
				estructuraLocal.setSolicitudHoraExtras(this.jInternalFrameDetalleFormEstructura.solicitudhoraextraBeanSwingJInternalFrame.solicitudhoraextras);
				estructuraLocal.setEvaluacionNomis(this.jInternalFrameDetalleFormEstructura.evaluacionnomiBeanSwingJInternalFrame.evaluacionnomis);
				estructuraLocal.setSolicitudVacacions(this.jInternalFrameDetalleFormEstructura.solicitudvacacionBeanSwingJInternalFrame.solicitudvacacions);
				estructuraLocal.setResponsableActivoFijos(this.jInternalFrameDetalleFormEstructura.responsableactivofijoBeanSwingJInternalFrame.responsableactivofijos);
				estructuraLocal.setRubroEmpleaCuentaContables(this.jInternalFrameDetalleFormEstructura.rubroempleacuentacontableBeanSwingJInternalFrame.rubroempleacuentacontables);	
			}
		}
	}
	
	public void actualizarRelacionFkPadreActual(Estructura estructuraLocal) throws Exception {	
		if(this.estructuraSessionBean.getEsGuardarRelacionado()) {			
			
		
			if(this.jInternalFrameParent.getClass().equals(EmpresaDetalleFormJInternalFrame.class)) {
				EmpresaBeanSwingJInternalFrame empresaBeanSwingJInternalFrameLocal=(EmpresaBeanSwingJInternalFrame) ((EmpresaDetalleFormJInternalFrame) this.jInternalFrameParent).jInternalFrameParent;

				empresaBeanSwingJInternalFrameLocal.setVariablesFormularioToObjetoActualTodoEmpresa(empresaBeanSwingJInternalFrameLocal.getempresa(),true);
				empresaBeanSwingJInternalFrameLocal.actualizarLista(empresaBeanSwingJInternalFrameLocal.empresa,this.empresasForeignKey);

				empresaBeanSwingJInternalFrameLocal.actualizarRelaciones(empresaBeanSwingJInternalFrameLocal.empresa);

				estructuraLocal.setEmpresa(empresaBeanSwingJInternalFrameLocal.empresa);

				this.addItemDefectoCombosForeignKeyEmpresa();
				this.cargarCombosFrameEmpresasForeignKey("Formulario");
				this.setActualEmpresaForeignKey(empresaBeanSwingJInternalFrameLocal.empresa.getId(),false,"Formulario");
			}
			 else if(this.jInternalFrameParent.getClass().equals(SucursalDetalleFormJInternalFrame.class)) {
				SucursalBeanSwingJInternalFrame sucursalBeanSwingJInternalFrameLocal=(SucursalBeanSwingJInternalFrame) ((SucursalDetalleFormJInternalFrame) this.jInternalFrameParent).jInternalFrameParent;

				sucursalBeanSwingJInternalFrameLocal.setVariablesFormularioToObjetoActualTodoSucursal(sucursalBeanSwingJInternalFrameLocal.getsucursal(),true);
				sucursalBeanSwingJInternalFrameLocal.actualizarLista(sucursalBeanSwingJInternalFrameLocal.sucursal,this.sucursalsForeignKey);

				sucursalBeanSwingJInternalFrameLocal.actualizarRelaciones(sucursalBeanSwingJInternalFrameLocal.sucursal);

				estructuraLocal.setSucursal(sucursalBeanSwingJInternalFrameLocal.sucursal);

				this.addItemDefectoCombosForeignKeySucursal();
				this.cargarCombosFrameSucursalsForeignKey("Formulario");
				this.setActualSucursalForeignKey(sucursalBeanSwingJInternalFrameLocal.sucursal.getId(),false,"Formulario");
			}
			 else if(this.jInternalFrameParent.getClass().equals(EstructuraDetalleFormJInternalFrame.class)) {
				EstructuraBeanSwingJInternalFrame estructuraBeanSwingJInternalFrameLocal=(EstructuraBeanSwingJInternalFrame) ((EstructuraDetalleFormJInternalFrame) this.jInternalFrameParent).jInternalFrameParent;

				estructuraBeanSwingJInternalFrameLocal.setVariablesFormularioToObjetoActualTodoEstructura(estructuraBeanSwingJInternalFrameLocal.getestructura(),true);
				estructuraBeanSwingJInternalFrameLocal.actualizarLista(estructuraBeanSwingJInternalFrameLocal.estructura,this.estructurasForeignKey);

				estructuraBeanSwingJInternalFrameLocal.actualizarRelaciones(estructuraBeanSwingJInternalFrameLocal.estructura);

				estructuraLocal.setEstructura(estructuraBeanSwingJInternalFrameLocal.estructura);

				this.addItemDefectoCombosForeignKeyEstructura();
				this.cargarCombosFrameEstructurasForeignKey("Formulario");
				this.setActualEstructuraForeignKey(estructuraBeanSwingJInternalFrameLocal.estructura.getId(),false,"Formulario");
			}
			 else if(this.jInternalFrameParent.getClass().equals(TipoPago_NMDetalleFormJInternalFrame.class)) {
				TipoPago_NMBeanSwingJInternalFrame tipopago_nmBeanSwingJInternalFrameLocal=(TipoPago_NMBeanSwingJInternalFrame) ((TipoPago_NMDetalleFormJInternalFrame) this.jInternalFrameParent).jInternalFrameParent;

				tipopago_nmBeanSwingJInternalFrameLocal.setVariablesFormularioToObjetoActualTodoTipoPago_NM(tipopago_nmBeanSwingJInternalFrameLocal.gettipopago_nm(),true);
				tipopago_nmBeanSwingJInternalFrameLocal.actualizarLista(tipopago_nmBeanSwingJInternalFrameLocal.tipopago_nm,this.tipopago_nmsForeignKey);

				tipopago_nmBeanSwingJInternalFrameLocal.actualizarRelaciones(tipopago_nmBeanSwingJInternalFrameLocal.tipopago_nm);

				estructuraLocal.setTipoPago_NM(tipopago_nmBeanSwingJInternalFrameLocal.tipopago_nm);

				this.addItemDefectoCombosForeignKeyTipoPago_NM();
				this.cargarCombosFrameTipoPago_NMsForeignKey("Formulario");
				this.setActualTipoPago_NMForeignKey(tipopago_nmBeanSwingJInternalFrameLocal.tipopago_nm.getId(),false,"Formulario");
			}
			 else if(this.jInternalFrameParent.getClass().equals(NumeroPatronalDetalleFormJInternalFrame.class)) {
				NumeroPatronalBeanSwingJInternalFrame numeropatronalBeanSwingJInternalFrameLocal=(NumeroPatronalBeanSwingJInternalFrame) ((NumeroPatronalDetalleFormJInternalFrame) this.jInternalFrameParent).jInternalFrameParent;

				numeropatronalBeanSwingJInternalFrameLocal.setVariablesFormularioToObjetoActualTodoNumeroPatronal(numeropatronalBeanSwingJInternalFrameLocal.getnumeropatronal(),true);
				numeropatronalBeanSwingJInternalFrameLocal.actualizarLista(numeropatronalBeanSwingJInternalFrameLocal.numeropatronal,this.numeropatronalsForeignKey);

				numeropatronalBeanSwingJInternalFrameLocal.actualizarRelaciones(numeropatronalBeanSwingJInternalFrameLocal.numeropatronal);

				estructuraLocal.setNumeroPatronal(numeropatronalBeanSwingJInternalFrameLocal.numeropatronal);

				this.addItemDefectoCombosForeignKeyNumeroPatronal();
				this.cargarCombosFrameNumeroPatronalsForeignKey("Formulario");
				this.setActualNumeroPatronalForeignKey(numeropatronalBeanSwingJInternalFrameLocal.numeropatronal.getId(),false,"Formulario");
			}
			 else if(this.jInternalFrameParent.getClass().equals(CuentaContableDetalleFormJInternalFrame.class)) {
				CuentaContableBeanSwingJInternalFrame cuentacontableBeanSwingJInternalFrameLocal=(CuentaContableBeanSwingJInternalFrame) ((CuentaContableDetalleFormJInternalFrame) this.jInternalFrameParent).jInternalFrameParent;

				cuentacontableBeanSwingJInternalFrameLocal.setVariablesFormularioToObjetoActualTodoCuentaContable(cuentacontableBeanSwingJInternalFrameLocal.getcuentacontable(),true);
				cuentacontableBeanSwingJInternalFrameLocal.actualizarLista(cuentacontableBeanSwingJInternalFrameLocal.cuentacontable,this.cuentacontablesForeignKey);

				cuentacontableBeanSwingJInternalFrameLocal.actualizarRelaciones(cuentacontableBeanSwingJInternalFrameLocal.cuentacontable);

				estructuraLocal.setCuentaContable(cuentacontableBeanSwingJInternalFrameLocal.cuentacontable);

				this.addItemDefectoCombosForeignKeyCuentaContable();
				this.cargarCombosFrameCuentaContablesForeignKey("Formulario");
				this.setActualCuentaContableForeignKey(cuentacontableBeanSwingJInternalFrameLocal.cuentacontable.getId(),false,"Formulario");
			}
			 else if(this.jInternalFrameParent.getClass().equals(TipoEstructuraDetalleFormJInternalFrame.class)) {
				TipoEstructuraBeanSwingJInternalFrame tipoestructuraBeanSwingJInternalFrameLocal=(TipoEstructuraBeanSwingJInternalFrame) ((TipoEstructuraDetalleFormJInternalFrame) this.jInternalFrameParent).jInternalFrameParent;

				tipoestructuraBeanSwingJInternalFrameLocal.setVariablesFormularioToObjetoActualTodoTipoEstructura(tipoestructuraBeanSwingJInternalFrameLocal.gettipoestructura(),true);
				tipoestructuraBeanSwingJInternalFrameLocal.actualizarLista(tipoestructuraBeanSwingJInternalFrameLocal.tipoestructura,this.tipoestructurasForeignKey);

				tipoestructuraBeanSwingJInternalFrameLocal.actualizarRelaciones(tipoestructuraBeanSwingJInternalFrameLocal.tipoestructura);

				estructuraLocal.setTipoEstructura(tipoestructuraBeanSwingJInternalFrameLocal.tipoestructura);

				this.addItemDefectoCombosForeignKeyTipoEstructura();
				this.cargarCombosFrameTipoEstructurasForeignKey("Formulario");
				this.setActualTipoEstructuraForeignKey(tipoestructuraBeanSwingJInternalFrameLocal.tipoestructura.getId(),false,"Formulario");
			}
			 else if(this.jInternalFrameParent.getClass().equals(PaisDetalleFormJInternalFrame.class)) {
				PaisBeanSwingJInternalFrame paisBeanSwingJInternalFrameLocal=(PaisBeanSwingJInternalFrame) ((PaisDetalleFormJInternalFrame) this.jInternalFrameParent).jInternalFrameParent;

				paisBeanSwingJInternalFrameLocal.setVariablesFormularioToObjetoActualTodoPais(paisBeanSwingJInternalFrameLocal.getpais(),true);
				paisBeanSwingJInternalFrameLocal.actualizarLista(paisBeanSwingJInternalFrameLocal.pais,this.paissForeignKey);

				paisBeanSwingJInternalFrameLocal.actualizarRelaciones(paisBeanSwingJInternalFrameLocal.pais);

				estructuraLocal.setPais(paisBeanSwingJInternalFrameLocal.pais);

				this.addItemDefectoCombosForeignKeyPais();
				this.cargarCombosFramePaissForeignKey("Formulario");
				this.setActualPaisForeignKey(paisBeanSwingJInternalFrameLocal.pais.getId(),false,"Formulario");
			}
			 else if(this.jInternalFrameParent.getClass().equals(CiudadDetalleFormJInternalFrame.class)) {
				CiudadBeanSwingJInternalFrame ciudadBeanSwingJInternalFrameLocal=(CiudadBeanSwingJInternalFrame) ((CiudadDetalleFormJInternalFrame) this.jInternalFrameParent).jInternalFrameParent;

				ciudadBeanSwingJInternalFrameLocal.setVariablesFormularioToObjetoActualTodoCiudad(ciudadBeanSwingJInternalFrameLocal.getciudad(),true);
				ciudadBeanSwingJInternalFrameLocal.actualizarLista(ciudadBeanSwingJInternalFrameLocal.ciudad,this.ciudadsForeignKey);

				ciudadBeanSwingJInternalFrameLocal.actualizarRelaciones(ciudadBeanSwingJInternalFrameLocal.ciudad);

				estructuraLocal.setCiudad(ciudadBeanSwingJInternalFrameLocal.ciudad);

				this.addItemDefectoCombosForeignKeyCiudad();
				this.cargarCombosFrameCiudadsForeignKey("Formulario");
				this.setActualCiudadForeignKey(ciudadBeanSwingJInternalFrameLocal.ciudad.getId(),false,"Formulario");
			}
		
		}
	}
	
	public Boolean validarEstructuraActual() throws Exception {
		Boolean estaValidado=false;
		this.inicializarInvalidValues();
		
		/*
		int intSelectedRow = this.jTableDatosEstructura.getSelectedRow();
				
		//ARCHITECTURE
		if(Constantes.ISUSAEJBLOGICLAYER) {
			this.estructura =(Estructura) this.estructuraLogic.getEstructuras().toArray()[this.jTableDatosEstructura.convertRowIndexToModel(intSelectedRow)];
		} else if(Constantes.ISUSAEJBREMOTE ||Constantes.ISUSAEJBHOME) {
			this.estructura =(Estructura) this.estructuras.toArray()[this.jTableDatosEstructura.convertRowIndexToModel(intSelectedRow)];
		}
		//ARCHITECTURE
		*/
		
		this.invalidValues = estructuraValidator.getInvalidValues(this.estructura);
					
		if(this.invalidValues==null || this.invalidValues.length<=0) {
			estaValidado=true;
		} else {
			this.mostrarInvalidValues();	
		}
		
		return estaValidado;
	}
	
	public void actualizarLista(Estructura estructura,List<Estructura> estructuras) throws Exception {
		try	{		
			EstructuraConstantesFunciones.actualizarLista(estructura,estructuras,this.estructuraSessionBean.getEsGuardarRelacionado());		
		} catch(Exception e) {
			throw e;
		}
	}		
	
	public void actualizarSelectedLista(Estructura estructura,List<Estructura> estructuras) throws Exception {
		try	{			
			EstructuraConstantesFunciones.actualizarSelectedLista(estructura,estructuras);
		} catch(Exception e) {
			throw e;
		}
	}	
	
	public Boolean tieneElementosSeleccionados() throws Exception {
		Boolean tiene=false;
		
		List<Estructura> estructurasLocal=null;
		
		try	{			
			//ARCHITECTURE
			if(Constantes.ISUSAEJBLOGICLAYER) {
				estructurasLocal=this.estructuraLogic.getEstructuras();
			} else if(Constantes.ISUSAEJBREMOTE || Constantes.ISUSAEJBHOME) {
				estructurasLocal=this.estructuras;
			}
			//ARCHITECTURE
		
			for(Estructura estructuraLocal:estructurasLocal) {
				if(this.permiteMantenimiento(estructuraLocal) && estructuraLocal.getIsSelected()) {
					tiene=true;
					break;
				}
			}
		} catch(Exception e) {
			throw e;
		}
		
		return tiene;
	}			
	
	public void mostrarInvalidValues() throws Exception {
		String sMensaje="";
				
		for (InvalidValue invalidValue : this.invalidValues) {
			sMensaje+="\r\n"+EstructuraConstantesFunciones.getEstructuraLabelDesdeNombre(invalidValue.getPropertyName())+"->"+invalidValue.getMessage();
			
			//MOSTRAR CAMPOS INVALIDOS
			if(invalidValue.getPropertyName().equals(EstructuraConstantesFunciones.IDEMPRESA)) {FuncionesSwing.mostrarCampoMensajeInvalido(false,this.jInternalFrameDetalleFormEstructura.jLabelid_empresaEstructura,invalidValue.getMessage());}
			if(invalidValue.getPropertyName().equals(EstructuraConstantesFunciones.IDSUCURSAL)) {FuncionesSwing.mostrarCampoMensajeInvalido(false,this.jInternalFrameDetalleFormEstructura.jLabelid_sucursalEstructura,invalidValue.getMessage());}
			if(invalidValue.getPropertyName().equals(EstructuraConstantesFunciones.IDESTRUCTURA)) {FuncionesSwing.mostrarCampoMensajeInvalido(false,this.jInternalFrameDetalleFormEstructura.jLabelid_estructuraEstructura,invalidValue.getMessage());}
			if(invalidValue.getPropertyName().equals(EstructuraConstantesFunciones.IDTIPOPAGO_NM)) {FuncionesSwing.mostrarCampoMensajeInvalido(false,this.jInternalFrameDetalleFormEstructura.jLabelid_tipo_pago__n_mEstructura,invalidValue.getMessage());}
			if(invalidValue.getPropertyName().equals(EstructuraConstantesFunciones.IDNUMEROPATRONAL)) {FuncionesSwing.mostrarCampoMensajeInvalido(false,this.jInternalFrameDetalleFormEstructura.jLabelid_numero_patronalEstructura,invalidValue.getMessage());}
			if(invalidValue.getPropertyName().equals(EstructuraConstantesFunciones.IDCUENTACONTABLE)) {FuncionesSwing.mostrarCampoMensajeInvalido(false,this.jInternalFrameDetalleFormEstructura.jLabelid_cuenta_contableEstructura,invalidValue.getMessage());}
			if(invalidValue.getPropertyName().equals(EstructuraConstantesFunciones.IDTIPOESTRUCTURA)) {FuncionesSwing.mostrarCampoMensajeInvalido(false,this.jInternalFrameDetalleFormEstructura.jLabelid_tipo_estructuraEstructura,invalidValue.getMessage());}
			if(invalidValue.getPropertyName().equals(EstructuraConstantesFunciones.IDPAIS)) {FuncionesSwing.mostrarCampoMensajeInvalido(false,this.jInternalFrameDetalleFormEstructura.jLabelid_paisEstructura,invalidValue.getMessage());}
			if(invalidValue.getPropertyName().equals(EstructuraConstantesFunciones.IDCIUDAD)) {FuncionesSwing.mostrarCampoMensajeInvalido(false,this.jInternalFrameDetalleFormEstructura.jLabelid_ciudadEstructura,invalidValue.getMessage());}
			if(invalidValue.getPropertyName().equals(EstructuraConstantesFunciones.CODIGO)) {FuncionesSwing.mostrarCampoMensajeInvalido(false,this.jInternalFrameDetalleFormEstructura.jLabelcodigoEstructura,invalidValue.getMessage());}
			if(invalidValue.getPropertyName().equals(EstructuraConstantesFunciones.NUMERO)) {FuncionesSwing.mostrarCampoMensajeInvalido(false,this.jInternalFrameDetalleFormEstructura.jLabelnumeroEstructura,invalidValue.getMessage());}
			if(invalidValue.getPropertyName().equals(EstructuraConstantesFunciones.VALORANTICIPO)) {FuncionesSwing.mostrarCampoMensajeInvalido(false,this.jInternalFrameDetalleFormEstructura.jLabelvalor_anticipoEstructura,invalidValue.getMessage());}
			if(invalidValue.getPropertyName().equals(EstructuraConstantesFunciones.PORCENTAJEANTICIPO)) {FuncionesSwing.mostrarCampoMensajeInvalido(false,this.jInternalFrameDetalleFormEstructura.jLabelporcentaje_anticipoEstructura,invalidValue.getMessage());}
			if(invalidValue.getPropertyName().equals(EstructuraConstantesFunciones.NOMBRE)) {FuncionesSwing.mostrarCampoMensajeInvalido(false,this.jInternalFrameDetalleFormEstructura.jLabelnombreEstructura,invalidValue.getMessage());}
			if(invalidValue.getPropertyName().equals(EstructuraConstantesFunciones.ESJEFE)) {FuncionesSwing.mostrarCampoMensajeInvalido(false,this.jInternalFrameDetalleFormEstructura.jLabeles_jefeEstructura,invalidValue.getMessage());}
			if(invalidValue.getPropertyName().equals(EstructuraConstantesFunciones.ESANUAL)) {FuncionesSwing.mostrarCampoMensajeInvalido(false,this.jInternalFrameDetalleFormEstructura.jLabeles_anualEstructura,invalidValue.getMessage());}
			if(invalidValue.getPropertyName().equals(EstructuraConstantesFunciones.PORCENTAJE)) {FuncionesSwing.mostrarCampoMensajeInvalido(false,this.jInternalFrameDetalleFormEstructura.jLabelporcentajeEstructura,invalidValue.getMessage());}
			if(invalidValue.getPropertyName().equals(EstructuraConstantesFunciones.VALOR)) {FuncionesSwing.mostrarCampoMensajeInvalido(false,this.jInternalFrameDetalleFormEstructura.jLabelvalorEstructura,invalidValue.getMessage());}
        }
		
		
		if(!sMensaje.equals("")) {
			//JOptionPane.showMessageDialog(this,sMensaje,"VALIDACION ",JOptionPane.ERROR_MESSAGE);
			throw new Exception(sMensaje);			
		}
		
		/*
		System.out.println(invalidValue);
        System.out.println("message=" + invalidValue.getMessage());
        System.out.println("propertyName=" + invalidValue.getPropertyName());
        System.out.println("propertyPath=" + invalidValue.getPropertyPath());
        System.out.println("value=" + invalidValue.getValue());
        */
	}		
	
	public void inicializarInvalidValues() throws Exception {
		String sMensaje="";	
		
		if(this.jInternalFrameDetalleFormEstructura!=null) {
		
		//MOSTRAR CAMPOS INVALIDOS
		FuncionesSwing.mostrarCampoMensajeInvalido(true,this.jInternalFrameDetalleFormEstructura.jLabelid_empresaEstructura,"");
		FuncionesSwing.mostrarCampoMensajeInvalido(true,this.jInternalFrameDetalleFormEstructura.jLabelid_sucursalEstructura,"");
		FuncionesSwing.mostrarCampoMensajeInvalido(true,this.jInternalFrameDetalleFormEstructura.jLabelid_estructuraEstructura,"");
		FuncionesSwing.mostrarCampoMensajeInvalido(true,this.jInternalFrameDetalleFormEstructura.jLabelid_tipo_pago__n_mEstructura,"");
		FuncionesSwing.mostrarCampoMensajeInvalido(true,this.jInternalFrameDetalleFormEstructura.jLabelid_numero_patronalEstructura,"");
		FuncionesSwing.mostrarCampoMensajeInvalido(true,this.jInternalFrameDetalleFormEstructura.jLabelid_cuenta_contableEstructura,"");
		FuncionesSwing.mostrarCampoMensajeInvalido(true,this.jInternalFrameDetalleFormEstructura.jLabelid_tipo_estructuraEstructura,"");
		FuncionesSwing.mostrarCampoMensajeInvalido(true,this.jInternalFrameDetalleFormEstructura.jLabelid_paisEstructura,"");
		FuncionesSwing.mostrarCampoMensajeInvalido(true,this.jInternalFrameDetalleFormEstructura.jLabelid_ciudadEstructura,"");
		FuncionesSwing.mostrarCampoMensajeInvalido(true,this.jInternalFrameDetalleFormEstructura.jLabelcodigoEstructura,"");
		FuncionesSwing.mostrarCampoMensajeInvalido(true,this.jInternalFrameDetalleFormEstructura.jLabelnumeroEstructura,"");
		FuncionesSwing.mostrarCampoMensajeInvalido(true,this.jInternalFrameDetalleFormEstructura.jLabelvalor_anticipoEstructura,"");
		FuncionesSwing.mostrarCampoMensajeInvalido(true,this.jInternalFrameDetalleFormEstructura.jLabelporcentaje_anticipoEstructura,"");
		FuncionesSwing.mostrarCampoMensajeInvalido(true,this.jInternalFrameDetalleFormEstructura.jLabelnombreEstructura,"");
		FuncionesSwing.mostrarCampoMensajeInvalido(true,this.jInternalFrameDetalleFormEstructura.jLabeles_jefeEstructura,"");
		FuncionesSwing.mostrarCampoMensajeInvalido(true,this.jInternalFrameDetalleFormEstructura.jLabeles_anualEstructura,"");
		FuncionesSwing.mostrarCampoMensajeInvalido(true,this.jInternalFrameDetalleFormEstructura.jLabelporcentajeEstructura,"");
		FuncionesSwing.mostrarCampoMensajeInvalido(true,this.jInternalFrameDetalleFormEstructura.jLabelvalorEstructura,"");
		
		}
	}
	
	
	
	public void actualizarObjetoPadreFk(String sTipo)  throws Exception {
		if(sTipo.equals("XXXAuxiliar")) {
		
		}
		
		 else  if(sTipo.equals("CentroCostoEstructura")) {
			if(this.estructura==null) {
				this.estructura= new Estructura();
			}

			if(this.estructuraSessionBean.getConGuardarRelaciones()) { //&& this.isEsNuevoEstructura
				this.setVariablesFormularioToObjetoActualEstructura(this.estructura,true);//false
				this.setVariablesFormularioToObjetoActualForeignKeysEstructura(this.estructura);

				this.jInternalFrameDetalleFormEstructura.centrocostoestructuraBeanSwingJInternalFrame.getcentrocostoestructura().setEstructura(this.estructura);
			}

			return;
		}
		 else  if(sTipo.equals("PlaniVacacion")) {
			if(this.estructura==null) {
				this.estructura= new Estructura();
			}

			if(this.estructuraSessionBean.getConGuardarRelaciones()) { //&& this.isEsNuevoEstructura
				this.setVariablesFormularioToObjetoActualEstructura(this.estructura,true);//false
				this.setVariablesFormularioToObjetoActualForeignKeysEstructura(this.estructura);

				this.jInternalFrameDetalleFormEstructura.planivacacionBeanSwingJInternalFrame.getplanivacacion().setEstructuraCargo(this.estructura);
			}

			return;
		}
		 else  if(sTipo.equals("AsistenciaMensual")) {
			if(this.estructura==null) {
				this.estructura= new Estructura();
			}

			if(this.estructuraSessionBean.getConGuardarRelaciones()) { //&& this.isEsNuevoEstructura
				this.setVariablesFormularioToObjetoActualEstructura(this.estructura,true);//false
				this.setVariablesFormularioToObjetoActualForeignKeysEstructura(this.estructura);

				this.jInternalFrameDetalleFormEstructura.asistenciamensualBeanSwingJInternalFrame.getasistenciamensual().setEstructura(this.estructura);
			}

			return;
		}
		 else  if(sTipo.equals("EmpleadoProcesoRubro")) {
			if(this.estructura==null) {
				this.estructura= new Estructura();
			}

			if(this.estructuraSessionBean.getConGuardarRelaciones()) { //&& this.isEsNuevoEstructura
				this.setVariablesFormularioToObjetoActualEstructura(this.estructura,true);//false
				this.setVariablesFormularioToObjetoActualForeignKeysEstructura(this.estructura);

				this.jInternalFrameDetalleFormEstructura.empleadoprocesorubroBeanSwingJInternalFrame.getempleadoprocesorubro().setEstructura(this.estructura);
			}

			return;
		}
		 else  if(sTipo.equals("EmpleadoPagoRubro")) {
			if(this.estructura==null) {
				this.estructura= new Estructura();
			}

			if(this.estructuraSessionBean.getConGuardarRelaciones()) { //&& this.isEsNuevoEstructura
				this.setVariablesFormularioToObjetoActualEstructura(this.estructura,true);//false
				this.setVariablesFormularioToObjetoActualForeignKeysEstructura(this.estructura);

				this.jInternalFrameDetalleFormEstructura.empleadopagorubroBeanSwingJInternalFrame.getempleadopagorubro().setEstructura(this.estructura);
			}

			return;
		}
		 else  if(sTipo.equals("ProvisionEmpleado")) {
			if(this.estructura==null) {
				this.estructura= new Estructura();
			}

			if(this.estructuraSessionBean.getConGuardarRelaciones()) { //&& this.isEsNuevoEstructura
				this.setVariablesFormularioToObjetoActualEstructura(this.estructura,true);//false
				this.setVariablesFormularioToObjetoActualForeignKeysEstructura(this.estructura);

				this.jInternalFrameDetalleFormEstructura.provisionempleadoBeanSwingJInternalFrame.getprovisionempleado().setEstructura(this.estructura);
			}

			return;
		}
		 else  if(sTipo.equals("Empleado")) {
			if(this.estructura==null) {
				this.estructura= new Estructura();
			}

			if(this.estructuraSessionBean.getConGuardarRelaciones()) { //&& this.isEsNuevoEstructura
				this.setVariablesFormularioToObjetoActualEstructura(this.estructura,true);//false
				this.setVariablesFormularioToObjetoActualForeignKeysEstructura(this.estructura);

				this.jInternalFrameDetalleFormEstructura.empleadoBeanSwingJInternalFrame.getempleado().setEstructura(this.estructura);
			}

			return;
		}
		 else  if(sTipo.equals("Estructura")) {
			if(this.estructura==null) {
				this.estructura= new Estructura();
			}

			if(this.estructuraSessionBean.getConGuardarRelaciones()) { //&& this.isEsNuevoEstructura
				this.setVariablesFormularioToObjetoActualEstructura(this.estructura,true);//false
				this.setVariablesFormularioToObjetoActualForeignKeysEstructura(this.estructura);

				this.jInternalFrameDetalleFormEstructura.estructuraBeanSwingJInternalFrame.getestructura().setEstructura(this.estructura);
			}

			return;
		}
		 else  if(sTipo.equals("EvaluacionEmpleado")) {
			if(this.estructura==null) {
				this.estructura= new Estructura();
			}

			if(this.estructuraSessionBean.getConGuardarRelaciones()) { //&& this.isEsNuevoEstructura
				this.setVariablesFormularioToObjetoActualEstructura(this.estructura,true);//false
				this.setVariablesFormularioToObjetoActualForeignKeysEstructura(this.estructura);

				this.jInternalFrameDetalleFormEstructura.evaluacionempleadoBeanSwingJInternalFrame.getevaluacionempleado().setEstructura(this.estructura);
			}

			return;
		}
		 else  if(sTipo.equals("EmpleadoImpuestoRenta")) {
			if(this.estructura==null) {
				this.estructura= new Estructura();
			}

			if(this.estructuraSessionBean.getConGuardarRelaciones()) { //&& this.isEsNuevoEstructura
				this.setVariablesFormularioToObjetoActualEstructura(this.estructura,true);//false
				this.setVariablesFormularioToObjetoActualForeignKeysEstructura(this.estructura);

				this.jInternalFrameDetalleFormEstructura.empleadoimpuestorentaBeanSwingJInternalFrame.getempleadoimpuestorenta().setEstructura(this.estructura);
			}

			return;
		}
		 else  if(sTipo.equals("RubroEstructura")) {
			if(this.estructura==null) {
				this.estructura= new Estructura();
			}

			if(this.estructuraSessionBean.getConGuardarRelaciones()) { //&& this.isEsNuevoEstructura
				this.setVariablesFormularioToObjetoActualEstructura(this.estructura,true);//false
				this.setVariablesFormularioToObjetoActualForeignKeysEstructura(this.estructura);

				this.jInternalFrameDetalleFormEstructura.rubroestructuraBeanSwingJInternalFrame.getrubroestructura().setEstructura(this.estructura);
			}

			return;
		}
		 else  if(sTipo.equals("CierreRolMensual")) {
			if(this.estructura==null) {
				this.estructura= new Estructura();
			}

			if(this.estructuraSessionBean.getConGuardarRelaciones()) { //&& this.isEsNuevoEstructura
				this.setVariablesFormularioToObjetoActualEstructura(this.estructura,true);//false
				this.setVariablesFormularioToObjetoActualForeignKeysEstructura(this.estructura);

				this.jInternalFrameDetalleFormEstructura.cierrerolmensualBeanSwingJInternalFrame.getcierrerolmensual().setEstructura(this.estructura);
			}

			return;
		}
		 else  if(sTipo.equals("FormatoNomi")) {
			if(this.estructura==null) {
				this.estructura= new Estructura();
			}

			if(this.estructuraSessionBean.getConGuardarRelaciones()) { //&& this.isEsNuevoEstructura
				this.setVariablesFormularioToObjetoActualEstructura(this.estructura,true);//false
				this.setVariablesFormularioToObjetoActualForeignKeysEstructura(this.estructura);

				this.jInternalFrameDetalleFormEstructura.formatonomiBeanSwingJInternalFrame.getformatonomi().setEstructura(this.estructura);
			}

			return;
		}
		 else  if(sTipo.equals("EmpleadoEstructura")) {
			if(this.estructura==null) {
				this.estructura= new Estructura();
			}

			if(this.estructuraSessionBean.getConGuardarRelaciones()) { //&& this.isEsNuevoEstructura
				this.setVariablesFormularioToObjetoActualEstructura(this.estructura,true);//false
				this.setVariablesFormularioToObjetoActualForeignKeysEstructura(this.estructura);

				this.jInternalFrameDetalleFormEstructura.empleadoestructuraBeanSwingJInternalFrame.getempleadoestructura().setEstructura(this.estructura);
			}

			return;
		}
		 else  if(sTipo.equals("HistorialPagoNomi")) {
			if(this.estructura==null) {
				this.estructura= new Estructura();
			}

			if(this.estructuraSessionBean.getConGuardarRelaciones()) { //&& this.isEsNuevoEstructura
				this.setVariablesFormularioToObjetoActualEstructura(this.estructura,true);//false
				this.setVariablesFormularioToObjetoActualForeignKeysEstructura(this.estructura);

				this.jInternalFrameDetalleFormEstructura.historialpagonomiBeanSwingJInternalFrame.gethistorialpagonomi().setEstructura(this.estructura);
			}

			return;
		}
		 else  if(sTipo.equals("AsistenciaDiaria")) {
			if(this.estructura==null) {
				this.estructura= new Estructura();
			}

			if(this.estructuraSessionBean.getConGuardarRelaciones()) { //&& this.isEsNuevoEstructura
				this.setVariablesFormularioToObjetoActualEstructura(this.estructura,true);//false
				this.setVariablesFormularioToObjetoActualForeignKeysEstructura(this.estructura);

				this.jInternalFrameDetalleFormEstructura.asistenciadiariaBeanSwingJInternalFrame.getasistenciadiaria().setEstructura(this.estructura);
			}

			return;
		}
		 else  if(sTipo.equals("FuncionEstruc")) {
			if(this.estructura==null) {
				this.estructura= new Estructura();
			}

			if(this.estructuraSessionBean.getConGuardarRelaciones()) { //&& this.isEsNuevoEstructura
				this.setVariablesFormularioToObjetoActualEstructura(this.estructura,true);//false
				this.setVariablesFormularioToObjetoActualForeignKeysEstructura(this.estructura);

				this.jInternalFrameDetalleFormEstructura.funcionestrucBeanSwingJInternalFrame.getfuncionestruc().setEstructura(this.estructura);
			}

			return;
		}
		 else  if(sTipo.equals("SolicitudReemplazo")) {
			if(this.estructura==null) {
				this.estructura= new Estructura();
			}

			if(this.estructuraSessionBean.getConGuardarRelaciones()) { //&& this.isEsNuevoEstructura
				this.setVariablesFormularioToObjetoActualEstructura(this.estructura,true);//false
				this.setVariablesFormularioToObjetoActualForeignKeysEstructura(this.estructura);

				this.jInternalFrameDetalleFormEstructura.solicitudreemplazoBeanSwingJInternalFrame.getsolicitudreemplazo().setEstructura(this.estructura);
			}

			return;
		}
		 else  if(sTipo.equals("SolicitudHoraExtra")) {
			if(this.estructura==null) {
				this.estructura= new Estructura();
			}

			if(this.estructuraSessionBean.getConGuardarRelaciones()) { //&& this.isEsNuevoEstructura
				this.setVariablesFormularioToObjetoActualEstructura(this.estructura,true);//false
				this.setVariablesFormularioToObjetoActualForeignKeysEstructura(this.estructura);

				this.jInternalFrameDetalleFormEstructura.solicitudhoraextraBeanSwingJInternalFrame.getsolicitudhoraextra().setEstructura(this.estructura);
			}

			return;
		}
		 else  if(sTipo.equals("EvaluacionNomi")) {
			if(this.estructura==null) {
				this.estructura= new Estructura();
			}

			if(this.estructuraSessionBean.getConGuardarRelaciones()) { //&& this.isEsNuevoEstructura
				this.setVariablesFormularioToObjetoActualEstructura(this.estructura,true);//false
				this.setVariablesFormularioToObjetoActualForeignKeysEstructura(this.estructura);

				this.jInternalFrameDetalleFormEstructura.evaluacionnomiBeanSwingJInternalFrame.getevaluacionnomi().setEstructura(this.estructura);
			}

			return;
		}
		 else  if(sTipo.equals("SolicitudVacacion")) {
			if(this.estructura==null) {
				this.estructura= new Estructura();
			}

			if(this.estructuraSessionBean.getConGuardarRelaciones()) { //&& this.isEsNuevoEstructura
				this.setVariablesFormularioToObjetoActualEstructura(this.estructura,true);//false
				this.setVariablesFormularioToObjetoActualForeignKeysEstructura(this.estructura);

				this.jInternalFrameDetalleFormEstructura.solicitudvacacionBeanSwingJInternalFrame.getsolicitudvacacion().setEstructura(this.estructura);
			}

			return;
		}
		 else  if(sTipo.equals("ResponsableActivoFijo")) {
			if(this.estructura==null) {
				this.estructura= new Estructura();
			}

			if(this.estructuraSessionBean.getConGuardarRelaciones()) { //&& this.isEsNuevoEstructura
				this.setVariablesFormularioToObjetoActualEstructura(this.estructura,true);//false
				this.setVariablesFormularioToObjetoActualForeignKeysEstructura(this.estructura);

				this.jInternalFrameDetalleFormEstructura.responsableactivofijoBeanSwingJInternalFrame.getresponsableactivofijo().setEstructura(this.estructura);
			}

			return;
		}
		 else  if(sTipo.equals("RubroEmpleaCuentaContable")) {
			if(this.estructura==null) {
				this.estructura= new Estructura();
			}

			if(this.estructuraSessionBean.getConGuardarRelaciones()) { //&& this.isEsNuevoEstructura
				this.setVariablesFormularioToObjetoActualEstructura(this.estructura,true);//false
				this.setVariablesFormularioToObjetoActualForeignKeysEstructura(this.estructura);

				this.jInternalFrameDetalleFormEstructura.rubroempleacuentacontableBeanSwingJInternalFrame.getrubroempleacuentacontable().setEstructura(this.estructura);
			}

			return;
		}
	}
	
	public void nuevoPreparar() throws Exception {
		this.nuevoPreparar(false);
	}
	
	public void nuevoPreparar(Boolean esNuevoGuardarCambios) throws Exception {
		this.iIdNuevoEstructura--;	
		
		
		this.estructuraAux=new Estructura();
		
		this.estructuraAux.setId(this.iIdNuevoEstructura);
		this.estructuraAux.setIsChanged(true);
		
		//ARCHITECTURE
		if(Constantes.ISUSAEJBLOGICLAYER) {
			this.estructuraLogic.getEstructuras().add(this.estructuraAux);
		} else if(Constantes.ISUSAEJBREMOTE || Constantes.ISUSAEJBHOME) {
			this.estructuras.add(this.estructuraAux);
		}
		//ARCHITECTURE
		
		this.estructura=this.estructuraAux;
		
		if(EstructuraJInternalFrame.ISBINDING_MANUAL_TABLA) {
			this.setVariablesObjetoActualToFormularioEstructura(this.estructura);
			this.setVariablesObjetoActualToFormularioForeignKeyEstructura(this.estructura);
		}
				
		//this.setDefaultControlesEstructura();
		
		this.inicializarInvalidValues();
				
		//SELECCIONA ITEM DEFECTO-->SET O SELECTED INDEX
		this.setItemDefectoCombosForeignKeyEstructura();
		
		
		//INICIALIZA VARIABLES COMBOS GLOBALES A FORMULARIO(ParametroGeneralUsuario)
		this.setVariablesGlobalesCombosForeignKeyEstructura();
		
		//INICIALIZA VARIABLES COMBOS GLOBALES AUXILIARES A FORMULARIO(Anio,Mes)
		//this.setVariablesGlobalesAuxiliaresCombosForeignKeyEstructura();
		
		//SI TIENE FOREIGN KEY CON CAMPO esDefecto=true, SE ACTUALIZA A OBJETO ACTUAL
		this.setVariablesForeignKeyObjetoBeanDefectoActualToObjetoActualEstructura(this.estructuraBean,this.estructura,false,false);
		
		//ACTUALIZA VALORES PARA EL OBJETO ACTUAL ANTES DE ENVIARLO A ACTUALIZAR
		this.setVariablesFormularioToObjetoActualForeignKeysEstructura(this.estructura);
				
		ArrayList<Classe> classes=new ArrayList<Classe>();
		
		if(this.jInternalFrameParent!=null) {
			this.jInternalFrameParent.actualizarObjetoPadreFk(EstructuraConstantesFunciones.CLASSNAME);
		}	
		
		
		if(this.estructuraSessionBean.getConGuardarRelaciones()) {
			classes=EstructuraConstantesFunciones.getClassesRelationshipsOfEstructura(new ArrayList<Classe>(),DeepLoadType.NONE);
		}
		
		this.classesActual=new ArrayList<Classe>();
		this.classesActual.addAll(classes);
				
		//ARCHITECTURE
		if(Constantes.ISUSAEJBLOGICLAYER) {						
			this.estructuraReturnGeneral=estructuraLogic.procesarEventosEstructurasWithConnection(this.parametroGeneralUsuario,this.moduloActual,this.opcionActual,this.usuarioActual,EventoGlobalTipo.FORM_RECARGAR,ControlTipo.FORM,EventoTipo.LOAD,EventoSubTipo.NEW,"FORM",this.estructuraLogic.getEstructuras(),this.estructura,this.estructuraParameterGeneral,this.isEsNuevoEstructura,classes);//this.estructuraLogic.getEstructura()
						
		} else if(Constantes.ISUSAEJBREMOTE) {
						
		} else if(Constantes.ISUSAEJBHOME) {
		}
		//ARCHITECTURE
		
		//ACTUALIZA VARIABLES DEFECTO DESDE LOGIC A RETURN GENERAL Y LUEGO A BEAN
		//this.setVariablesObjetoReturnGeneralToBeanEstructura(this.estructuraReturnGeneral,this.estructuraBean,false);
		
		if(this.estructuraReturnGeneral.getConRecargarPropiedades()) {
			//INICIALIZA VARIABLES COMBOS NORMALES (FK)
			this.setVariablesObjetoActualToFormularioForeignKeyEstructura(this.estructuraReturnGeneral.getEstructura());
			
			//INICIALIZA VARIABLES NORMALES A FORMULARIO(SIN FK)
			this.setVariablesObjetoActualToFormularioEstructura(this.estructuraReturnGeneral.getEstructura());
		}
		
		if(this.estructuraReturnGeneral.getConRecargarRelaciones()) {
			//INICIALIZA VARIABLES RELACIONES A FORMULARIO
			this.setVariablesRelacionesObjetoActualToFormularioEstructura(this.estructuraReturnGeneral.getEstructura(),classes);//this.estructuraBean);	
		}
			
		//ACTUALIZA VARIABLES FORMULARIO A OBJETO ACTUAL (PARA NUEVO TABLA O GUARDAR CAMBIOS
		if(esNuevoGuardarCambios) {
			this.setVariablesFormularioToObjetoActualEstructura(this.estructura,false);
		}
		
		//INICIALIZA VARIABLES COMBOS DEFAULT DEL PROYECTO(|DEFAULT para FK)
		//this.setVariablesDefaultCombosForeignKeyEstructura();
		
		//INICIALIZA VARIABLES COMBOS PARAMETRO DEL PROYECTO(|VALORPARAM Era para ParametroModulo, ahora en logic)
		//this.setVariablesParametroCombosForeignKeyEstructura();						
		
		if(!esNuevoGuardarCambios) {
			//INICIALIZA VARIABLES POR OPCION MENU
			this.arrDatoGeneral= new  ArrayList<DatoGeneral>();
			this.arrDatoGeneralNo= new  ArrayList<String>();
			
			EstructuraBeanSwingJInternalFrameAdditional.RecargarFormEstructura(this,"NUEVO_PREPARAR","",this.arrDatoGeneral);
		
			//NO FUNCIONA BINDINGS			
			this.inicializarActualizarBindingEstructura(false);
						
			if(estructuraSessionBean.getConGuardarRelaciones()) {
				//DEBERIA YA ESTAR CARGADO LOS COMBOS Y SI SE NECESITA ALGO MAS SE DEBE CREAR FUNCION LIMITADA
				//SI DEBE TRAER Y RESETEAR TABLA
				

				if(this.jInternalFrameDetalleFormEstructura.centrocostoestructuraBeanSwingJInternalFrame!=null && this.jInternalFrameDetalleFormEstructura.centrocostoestructuraBeanSwingJInternalFrame.centrocostoestructuraSessionBean.getEsGuardarRelacionado() && CentroCostoEstructuraJInternalFrame.ESTA_CARGADO_PORPARTE) {
					this.jButtonCentroCostoEstructuraActionPerformed(null,-1,false,true,null);
				}

				if(this.jInternalFrameDetalleFormEstructura.planivacacionBeanSwingJInternalFrame!=null && this.jInternalFrameDetalleFormEstructura.planivacacionBeanSwingJInternalFrame.planivacacionSessionBean.getEsGuardarRelacionado() && PlaniVacacionJInternalFrame.ESTA_CARGADO_PORPARTE) {
					this.jButtonPlaniVacacionActionPerformed(null,-1,false,true,null);
				}

				if(this.jInternalFrameDetalleFormEstructura.asistenciamensualBeanSwingJInternalFrame!=null && this.jInternalFrameDetalleFormEstructura.asistenciamensualBeanSwingJInternalFrame.asistenciamensualSessionBean.getEsGuardarRelacionado() && AsistenciaMensualJInternalFrame.ESTA_CARGADO_PORPARTE) {
					this.jButtonAsistenciaMensualActionPerformed(null,-1,false,true,null);
				}

				if(this.jInternalFrameDetalleFormEstructura.empleadoprocesorubroBeanSwingJInternalFrame!=null && this.jInternalFrameDetalleFormEstructura.empleadoprocesorubroBeanSwingJInternalFrame.empleadoprocesorubroSessionBean.getEsGuardarRelacionado() && EmpleadoProcesoRubroJInternalFrame.ESTA_CARGADO_PORPARTE) {
					this.jButtonEmpleadoProcesoRubroActionPerformed(null,-1,false,true,null);
				}

				if(this.jInternalFrameDetalleFormEstructura.empleadopagorubroBeanSwingJInternalFrame!=null && this.jInternalFrameDetalleFormEstructura.empleadopagorubroBeanSwingJInternalFrame.empleadopagorubroSessionBean.getEsGuardarRelacionado() && EmpleadoPagoRubroJInternalFrame.ESTA_CARGADO_PORPARTE) {
					this.jButtonEmpleadoPagoRubroActionPerformed(null,-1,false,true,null);
				}

				if(this.jInternalFrameDetalleFormEstructura.provisionempleadoBeanSwingJInternalFrame!=null && this.jInternalFrameDetalleFormEstructura.provisionempleadoBeanSwingJInternalFrame.provisionempleadoSessionBean.getEsGuardarRelacionado() && ProvisionEmpleadoJInternalFrame.ESTA_CARGADO_PORPARTE) {
					this.jButtonProvisionEmpleadoActionPerformed(null,-1,false,true,null);
				}

				if(this.jInternalFrameDetalleFormEstructura.empleadoBeanSwingJInternalFrame!=null && this.jInternalFrameDetalleFormEstructura.empleadoBeanSwingJInternalFrame.empleadoSessionBean.getEsGuardarRelacionado() && EmpleadoJInternalFrame.ESTA_CARGADO_PORPARTE) {
					this.jButtonEmpleadoActionPerformed(null,-1,false,true,null);
				}

				if(this.jInternalFrameDetalleFormEstructura.estructuraBeanSwingJInternalFrame!=null && this.jInternalFrameDetalleFormEstructura.estructuraBeanSwingJInternalFrame.estructuraSessionBean.getEsGuardarRelacionado() && EstructuraJInternalFrame.ESTA_CARGADO_PORPARTE) {
					this.jButtonEstructuraActionPerformed(null,-1,false,true,null);
				}

				if(this.jInternalFrameDetalleFormEstructura.evaluacionempleadoBeanSwingJInternalFrame!=null && this.jInternalFrameDetalleFormEstructura.evaluacionempleadoBeanSwingJInternalFrame.evaluacionempleadoSessionBean.getEsGuardarRelacionado() && EvaluacionEmpleadoJInternalFrame.ESTA_CARGADO_PORPARTE) {
					this.jButtonEvaluacionEmpleadoActionPerformed(null,-1,false,true,null);
				}

				if(this.jInternalFrameDetalleFormEstructura.empleadoimpuestorentaBeanSwingJInternalFrame!=null && this.jInternalFrameDetalleFormEstructura.empleadoimpuestorentaBeanSwingJInternalFrame.empleadoimpuestorentaSessionBean.getEsGuardarRelacionado() && EmpleadoImpuestoRentaJInternalFrame.ESTA_CARGADO_PORPARTE) {
					this.jButtonEmpleadoImpuestoRentaActionPerformed(null,-1,false,true,null);
				}

				if(this.jInternalFrameDetalleFormEstructura.rubroestructuraBeanSwingJInternalFrame!=null && this.jInternalFrameDetalleFormEstructura.rubroestructuraBeanSwingJInternalFrame.rubroestructuraSessionBean.getEsGuardarRelacionado() && RubroEstructuraJInternalFrame.ESTA_CARGADO_PORPARTE) {
					this.jButtonRubroEstructuraActionPerformed(null,-1,false,true,null);
				}

				if(this.jInternalFrameDetalleFormEstructura.cierrerolmensualBeanSwingJInternalFrame!=null && this.jInternalFrameDetalleFormEstructura.cierrerolmensualBeanSwingJInternalFrame.cierrerolmensualSessionBean.getEsGuardarRelacionado() && CierreRolMensualJInternalFrame.ESTA_CARGADO_PORPARTE) {
					this.jButtonCierreRolMensualActionPerformed(null,-1,false,true,null);
				}

				if(this.jInternalFrameDetalleFormEstructura.formatonomiBeanSwingJInternalFrame!=null && this.jInternalFrameDetalleFormEstructura.formatonomiBeanSwingJInternalFrame.formatonomiSessionBean.getEsGuardarRelacionado() && FormatoNomiJInternalFrame.ESTA_CARGADO_PORPARTE) {
					this.jButtonFormatoNomiActionPerformed(null,-1,false,true,null);
				}

				if(this.jInternalFrameDetalleFormEstructura.empleadoestructuraBeanSwingJInternalFrame!=null && this.jInternalFrameDetalleFormEstructura.empleadoestructuraBeanSwingJInternalFrame.empleadoestructuraSessionBean.getEsGuardarRelacionado() && EmpleadoEstructuraJInternalFrame.ESTA_CARGADO_PORPARTE) {
					this.jButtonEmpleadoEstructuraActionPerformed(null,-1,false,true,null);
				}

				if(this.jInternalFrameDetalleFormEstructura.historialpagonomiBeanSwingJInternalFrame!=null && this.jInternalFrameDetalleFormEstructura.historialpagonomiBeanSwingJInternalFrame.historialpagonomiSessionBean.getEsGuardarRelacionado() && HistorialPagoNomiJInternalFrame.ESTA_CARGADO_PORPARTE) {
					this.jButtonHistorialPagoNomiActionPerformed(null,-1,false,true,null);
				}

				if(this.jInternalFrameDetalleFormEstructura.asistenciadiariaBeanSwingJInternalFrame!=null && this.jInternalFrameDetalleFormEstructura.asistenciadiariaBeanSwingJInternalFrame.asistenciadiariaSessionBean.getEsGuardarRelacionado() && AsistenciaDiariaJInternalFrame.ESTA_CARGADO_PORPARTE) {
					this.jButtonAsistenciaDiariaActionPerformed(null,-1,false,true,null);
				}

				if(this.jInternalFrameDetalleFormEstructura.funcionestrucBeanSwingJInternalFrame!=null && this.jInternalFrameDetalleFormEstructura.funcionestrucBeanSwingJInternalFrame.funcionestrucSessionBean.getEsGuardarRelacionado() && FuncionEstrucJInternalFrame.ESTA_CARGADO_PORPARTE) {
					this.jButtonFuncionEstrucActionPerformed(null,-1,false,true,null);
				}

				if(this.jInternalFrameDetalleFormEstructura.solicitudreemplazoBeanSwingJInternalFrame!=null && this.jInternalFrameDetalleFormEstructura.solicitudreemplazoBeanSwingJInternalFrame.solicitudreemplazoSessionBean.getEsGuardarRelacionado() && SolicitudReemplazoJInternalFrame.ESTA_CARGADO_PORPARTE) {
					this.jButtonSolicitudReemplazoActionPerformed(null,-1,false,true,null);
				}

				if(this.jInternalFrameDetalleFormEstructura.solicitudhoraextraBeanSwingJInternalFrame!=null && this.jInternalFrameDetalleFormEstructura.solicitudhoraextraBeanSwingJInternalFrame.solicitudhoraextraSessionBean.getEsGuardarRelacionado() && SolicitudHoraExtraJInternalFrame.ESTA_CARGADO_PORPARTE) {
					this.jButtonSolicitudHoraExtraActionPerformed(null,-1,false,true,null);
				}

				if(this.jInternalFrameDetalleFormEstructura.evaluacionnomiBeanSwingJInternalFrame!=null && this.jInternalFrameDetalleFormEstructura.evaluacionnomiBeanSwingJInternalFrame.evaluacionnomiSessionBean.getEsGuardarRelacionado() && EvaluacionNomiJInternalFrame.ESTA_CARGADO_PORPARTE) {
					this.jButtonEvaluacionNomiActionPerformed(null,-1,false,true,null);
				}

				if(this.jInternalFrameDetalleFormEstructura.solicitudvacacionBeanSwingJInternalFrame!=null && this.jInternalFrameDetalleFormEstructura.solicitudvacacionBeanSwingJInternalFrame.solicitudvacacionSessionBean.getEsGuardarRelacionado() && SolicitudVacacionJInternalFrame.ESTA_CARGADO_PORPARTE) {
					this.jButtonSolicitudVacacionActionPerformed(null,-1,false,true,null);
				}

				if(this.jInternalFrameDetalleFormEstructura.responsableactivofijoBeanSwingJInternalFrame!=null && this.jInternalFrameDetalleFormEstructura.responsableactivofijoBeanSwingJInternalFrame.responsableactivofijoSessionBean.getEsGuardarRelacionado() && ResponsableActivoFijoJInternalFrame.ESTA_CARGADO_PORPARTE) {
					this.jButtonResponsableActivoFijoActionPerformed(null,-1,false,true,null);
				}

				if(this.jInternalFrameDetalleFormEstructura.rubroempleacuentacontableBeanSwingJInternalFrame!=null && this.jInternalFrameDetalleFormEstructura.rubroempleacuentacontableBeanSwingJInternalFrame.rubroempleacuentacontableSessionBean.getEsGuardarRelacionado() && RubroEmpleaCuentaContableJInternalFrame.ESTA_CARGADO_PORPARTE) {
					this.jButtonRubroEmpleaCuentaContableActionPerformed(null,-1,false,true,null);
				}				
			}
				
			//SI ES MANUAL
			if(EstructuraJInternalFrame.ISBINDING_MANUAL) {
				//this.inicializarActualizarBindingManualEstructura();
			}
			
			this.actualizarVisualTableDatosEstructura();
			
			this.jTableDatosEstructura.setRowSelectionInterval(this.getIndiceNuevoEstructura(), this.getIndiceNuevoEstructura());
			
			this.seleccionarFilaTablaEstructuraActual();
						
			this.actualizarEstadoCeldasBotonesEstructura("a", isGuardarCambiosEnLote, isEsMantenimientoRelacionado);			
		
		}		
	}
	
	public void habilitarDeshabilitarControlesEstructura(Boolean isHabilitar) throws Exception {
		
		this.jInternalFrameDetalleFormEstructura.jTextFieldcodigoEstructura.setEnabled(isHabilitar && this.estructuraConstantesFunciones.activarcodigoEstructura);
		this.jInternalFrameDetalleFormEstructura.jTextFieldnumeroEstructura.setEnabled(isHabilitar && this.estructuraConstantesFunciones.activarnumeroEstructura);
		this.jInternalFrameDetalleFormEstructura.jTextFieldvalor_anticipoEstructura.setEnabled(isHabilitar && this.estructuraConstantesFunciones.activarvalor_anticipoEstructura);
		this.jInternalFrameDetalleFormEstructura.jTextFieldporcentaje_anticipoEstructura.setEnabled(isHabilitar && this.estructuraConstantesFunciones.activarporcentaje_anticipoEstructura);
		this.jInternalFrameDetalleFormEstructura.jTextAreanombreEstructura.setEnabled(isHabilitar && this.estructuraConstantesFunciones.activarnombreEstructura);
		this.jInternalFrameDetalleFormEstructura.jCheckBoxes_jefeEstructura.setEnabled(isHabilitar && this.estructuraConstantesFunciones.activares_jefeEstructura);
		this.jInternalFrameDetalleFormEstructura.jCheckBoxes_anualEstructura.setEnabled(isHabilitar && this.estructuraConstantesFunciones.activares_anualEstructura);
		this.jInternalFrameDetalleFormEstructura.jTextFieldporcentajeEstructura.setEnabled(isHabilitar && this.estructuraConstantesFunciones.activarporcentajeEstructura);
		this.jInternalFrameDetalleFormEstructura.jTextFieldvalorEstructura.setEnabled(isHabilitar && this.estructuraConstantesFunciones.activarvalorEstructura);	
		//
		this.jInternalFrameDetalleFormEstructura.jComboBoxid_empresaEstructura.setEnabled(isHabilitar && this.estructuraConstantesFunciones.activarid_empresaEstructura);//
		this.jInternalFrameDetalleFormEstructura.jComboBoxid_sucursalEstructura.setEnabled(isHabilitar && this.estructuraConstantesFunciones.activarid_sucursalEstructura);
		this.jInternalFrameDetalleFormEstructura.jComboBoxid_estructuraEstructura.setEnabled(isHabilitar && this.estructuraConstantesFunciones.activarid_estructuraEstructura);
		this.jInternalFrameDetalleFormEstructura.jComboBoxid_tipo_pago__n_mEstructura.setEnabled(isHabilitar && this.estructuraConstantesFunciones.activarid_tipo_pago__n_mEstructura);
		this.jInternalFrameDetalleFormEstructura.jComboBoxid_numero_patronalEstructura.setEnabled(isHabilitar && this.estructuraConstantesFunciones.activarid_numero_patronalEstructura);
		this.jInternalFrameDetalleFormEstructura.jComboBoxid_cuenta_contableEstructura.setEnabled(isHabilitar && this.estructuraConstantesFunciones.activarid_cuenta_contableEstructura);
		this.jInternalFrameDetalleFormEstructura.jComboBoxid_tipo_estructuraEstructura.setEnabled(isHabilitar && this.estructuraConstantesFunciones.activarid_tipo_estructuraEstructura);
		this.jInternalFrameDetalleFormEstructura.jComboBoxid_paisEstructura.setEnabled(isHabilitar && this.estructuraConstantesFunciones.activarid_paisEstructura);
		this.jInternalFrameDetalleFormEstructura.jComboBoxid_ciudadEstructura.setEnabled(isHabilitar && this.estructuraConstantesFunciones.activarid_ciudadEstructura);
	};
	
	public void setDefaultControlesEstructura() throws Exception {
			
	};
	
	
	public void habilitarDeshabilitarTipoMantenimientoEstructura(Boolean esRelaciones) throws Exception {
		if(esRelaciones) {
			//this.estructuraSessionBean.setConGuardarRelaciones(true);			
			this.estructuraSessionBean.setEstaModoGuardarRelaciones(true);				
			this.jInternalFrameDetalleFormEstructura.jTabbedPaneRelacionesEstructura.setVisible(true);
			
			

			if(this.jInternalFrameDetalleFormEstructura.centrocostoestructuraBeanSwingJInternalFrame!=null) {
				this.jInternalFrameDetalleFormEstructura.centrocostoestructuraBeanSwingJInternalFrame.centrocostoestructuraSessionBean.setEsGuardarRelacionado(true);
				//this.jInternalFrameDetalleFormEstructura.centrocostoestructuraBeanSwingJInternalFrame.getContentPane().setVisible(true);
			}

			if(this.jInternalFrameDetalleFormEstructura.planivacacionBeanSwingJInternalFrame!=null) {
				this.jInternalFrameDetalleFormEstructura.planivacacionBeanSwingJInternalFrame.planivacacionSessionBean.setEsGuardarRelacionado(true);
				//this.jInternalFrameDetalleFormEstructura.planivacacionBeanSwingJInternalFrame.getContentPane().setVisible(true);
			}

			if(this.jInternalFrameDetalleFormEstructura.asistenciamensualBeanSwingJInternalFrame!=null) {
				this.jInternalFrameDetalleFormEstructura.asistenciamensualBeanSwingJInternalFrame.asistenciamensualSessionBean.setEsGuardarRelacionado(true);
				//this.jInternalFrameDetalleFormEstructura.asistenciamensualBeanSwingJInternalFrame.getContentPane().setVisible(true);
			}

			if(this.jInternalFrameDetalleFormEstructura.empleadoprocesorubroBeanSwingJInternalFrame!=null) {
				this.jInternalFrameDetalleFormEstructura.empleadoprocesorubroBeanSwingJInternalFrame.empleadoprocesorubroSessionBean.setEsGuardarRelacionado(true);
				//this.jInternalFrameDetalleFormEstructura.empleadoprocesorubroBeanSwingJInternalFrame.getContentPane().setVisible(true);
			}

			if(this.jInternalFrameDetalleFormEstructura.empleadopagorubroBeanSwingJInternalFrame!=null) {
				this.jInternalFrameDetalleFormEstructura.empleadopagorubroBeanSwingJInternalFrame.empleadopagorubroSessionBean.setEsGuardarRelacionado(true);
				//this.jInternalFrameDetalleFormEstructura.empleadopagorubroBeanSwingJInternalFrame.getContentPane().setVisible(true);
			}

			if(this.jInternalFrameDetalleFormEstructura.provisionempleadoBeanSwingJInternalFrame!=null) {
				this.jInternalFrameDetalleFormEstructura.provisionempleadoBeanSwingJInternalFrame.provisionempleadoSessionBean.setEsGuardarRelacionado(true);
				//this.jInternalFrameDetalleFormEstructura.provisionempleadoBeanSwingJInternalFrame.getContentPane().setVisible(true);
			}

			if(this.jInternalFrameDetalleFormEstructura.empleadoBeanSwingJInternalFrame!=null) {
				this.jInternalFrameDetalleFormEstructura.empleadoBeanSwingJInternalFrame.empleadoSessionBean.setEsGuardarRelacionado(true);
				//this.jInternalFrameDetalleFormEstructura.empleadoBeanSwingJInternalFrame.getContentPane().setVisible(true);
			}

			if(this.jInternalFrameDetalleFormEstructura.estructuraBeanSwingJInternalFrame!=null) {
				this.jInternalFrameDetalleFormEstructura.estructuraBeanSwingJInternalFrame.estructuraSessionBean.setEsGuardarRelacionado(true);
				//this.jInternalFrameDetalleFormEstructura.estructuraBeanSwingJInternalFrame.getContentPane().setVisible(true);
			}

			if(this.jInternalFrameDetalleFormEstructura.evaluacionempleadoBeanSwingJInternalFrame!=null) {
				this.jInternalFrameDetalleFormEstructura.evaluacionempleadoBeanSwingJInternalFrame.evaluacionempleadoSessionBean.setEsGuardarRelacionado(true);
				//this.jInternalFrameDetalleFormEstructura.evaluacionempleadoBeanSwingJInternalFrame.getContentPane().setVisible(true);
			}

			if(this.jInternalFrameDetalleFormEstructura.empleadoimpuestorentaBeanSwingJInternalFrame!=null) {
				this.jInternalFrameDetalleFormEstructura.empleadoimpuestorentaBeanSwingJInternalFrame.empleadoimpuestorentaSessionBean.setEsGuardarRelacionado(true);
				//this.jInternalFrameDetalleFormEstructura.empleadoimpuestorentaBeanSwingJInternalFrame.getContentPane().setVisible(true);
			}

			if(this.jInternalFrameDetalleFormEstructura.rubroestructuraBeanSwingJInternalFrame!=null) {
				this.jInternalFrameDetalleFormEstructura.rubroestructuraBeanSwingJInternalFrame.rubroestructuraSessionBean.setEsGuardarRelacionado(true);
				//this.jInternalFrameDetalleFormEstructura.rubroestructuraBeanSwingJInternalFrame.getContentPane().setVisible(true);
			}

			if(this.jInternalFrameDetalleFormEstructura.cierrerolmensualBeanSwingJInternalFrame!=null) {
				this.jInternalFrameDetalleFormEstructura.cierrerolmensualBeanSwingJInternalFrame.cierrerolmensualSessionBean.setEsGuardarRelacionado(true);
				//this.jInternalFrameDetalleFormEstructura.cierrerolmensualBeanSwingJInternalFrame.getContentPane().setVisible(true);
			}

			if(this.jInternalFrameDetalleFormEstructura.formatonomiBeanSwingJInternalFrame!=null) {
				this.jInternalFrameDetalleFormEstructura.formatonomiBeanSwingJInternalFrame.formatonomiSessionBean.setEsGuardarRelacionado(true);
				//this.jInternalFrameDetalleFormEstructura.formatonomiBeanSwingJInternalFrame.getContentPane().setVisible(true);
			}

			if(this.jInternalFrameDetalleFormEstructura.empleadoestructuraBeanSwingJInternalFrame!=null) {
				this.jInternalFrameDetalleFormEstructura.empleadoestructuraBeanSwingJInternalFrame.empleadoestructuraSessionBean.setEsGuardarRelacionado(true);
				//this.jInternalFrameDetalleFormEstructura.empleadoestructuraBeanSwingJInternalFrame.getContentPane().setVisible(true);
			}

			if(this.jInternalFrameDetalleFormEstructura.historialpagonomiBeanSwingJInternalFrame!=null) {
				this.jInternalFrameDetalleFormEstructura.historialpagonomiBeanSwingJInternalFrame.historialpagonomiSessionBean.setEsGuardarRelacionado(true);
				//this.jInternalFrameDetalleFormEstructura.historialpagonomiBeanSwingJInternalFrame.getContentPane().setVisible(true);
			}

			if(this.jInternalFrameDetalleFormEstructura.asistenciadiariaBeanSwingJInternalFrame!=null) {
				this.jInternalFrameDetalleFormEstructura.asistenciadiariaBeanSwingJInternalFrame.asistenciadiariaSessionBean.setEsGuardarRelacionado(true);
				//this.jInternalFrameDetalleFormEstructura.asistenciadiariaBeanSwingJInternalFrame.getContentPane().setVisible(true);
			}

			if(this.jInternalFrameDetalleFormEstructura.funcionestrucBeanSwingJInternalFrame!=null) {
				this.jInternalFrameDetalleFormEstructura.funcionestrucBeanSwingJInternalFrame.funcionestrucSessionBean.setEsGuardarRelacionado(true);
				//this.jInternalFrameDetalleFormEstructura.funcionestrucBeanSwingJInternalFrame.getContentPane().setVisible(true);
			}

			if(this.jInternalFrameDetalleFormEstructura.solicitudreemplazoBeanSwingJInternalFrame!=null) {
				this.jInternalFrameDetalleFormEstructura.solicitudreemplazoBeanSwingJInternalFrame.solicitudreemplazoSessionBean.setEsGuardarRelacionado(true);
				//this.jInternalFrameDetalleFormEstructura.solicitudreemplazoBeanSwingJInternalFrame.getContentPane().setVisible(true);
			}

			if(this.jInternalFrameDetalleFormEstructura.solicitudhoraextraBeanSwingJInternalFrame!=null) {
				this.jInternalFrameDetalleFormEstructura.solicitudhoraextraBeanSwingJInternalFrame.solicitudhoraextraSessionBean.setEsGuardarRelacionado(true);
				//this.jInternalFrameDetalleFormEstructura.solicitudhoraextraBeanSwingJInternalFrame.getContentPane().setVisible(true);
			}

			if(this.jInternalFrameDetalleFormEstructura.evaluacionnomiBeanSwingJInternalFrame!=null) {
				this.jInternalFrameDetalleFormEstructura.evaluacionnomiBeanSwingJInternalFrame.evaluacionnomiSessionBean.setEsGuardarRelacionado(true);
				//this.jInternalFrameDetalleFormEstructura.evaluacionnomiBeanSwingJInternalFrame.getContentPane().setVisible(true);
			}

			if(this.jInternalFrameDetalleFormEstructura.solicitudvacacionBeanSwingJInternalFrame!=null) {
				this.jInternalFrameDetalleFormEstructura.solicitudvacacionBeanSwingJInternalFrame.solicitudvacacionSessionBean.setEsGuardarRelacionado(true);
				//this.jInternalFrameDetalleFormEstructura.solicitudvacacionBeanSwingJInternalFrame.getContentPane().setVisible(true);
			}

			if(this.jInternalFrameDetalleFormEstructura.responsableactivofijoBeanSwingJInternalFrame!=null) {
				this.jInternalFrameDetalleFormEstructura.responsableactivofijoBeanSwingJInternalFrame.responsableactivofijoSessionBean.setEsGuardarRelacionado(true);
				//this.jInternalFrameDetalleFormEstructura.responsableactivofijoBeanSwingJInternalFrame.getContentPane().setVisible(true);
			}

			if(this.jInternalFrameDetalleFormEstructura.rubroempleacuentacontableBeanSwingJInternalFrame!=null) {
				this.jInternalFrameDetalleFormEstructura.rubroempleacuentacontableBeanSwingJInternalFrame.rubroempleacuentacontableSessionBean.setEsGuardarRelacionado(true);
				//this.jInternalFrameDetalleFormEstructura.rubroempleacuentacontableBeanSwingJInternalFrame.getContentPane().setVisible(true);
			}		
		} else {
			//this.estructuraSessionBean.setConGuardarRelaciones(false);			
			this.estructuraSessionBean.setEstaModoGuardarRelaciones(false);						
			this.jInternalFrameDetalleFormEstructura.jTabbedPaneRelacionesEstructura.setVisible(false);
			
			

			if(this.jInternalFrameDetalleFormEstructura.centrocostoestructuraBeanSwingJInternalFrame!=null) {
				this.jInternalFrameDetalleFormEstructura.centrocostoestructuraBeanSwingJInternalFrame.centrocostoestructuraSessionBean.setEsGuardarRelacionado(false);
				//this.jInternalFrameDetalleFormEstructura.centrocostoestructuraBeanSwingJInternalFrame.getContentPane().setVisible(false);
			}

			if(this.jInternalFrameDetalleFormEstructura.planivacacionBeanSwingJInternalFrame!=null) {
				this.jInternalFrameDetalleFormEstructura.planivacacionBeanSwingJInternalFrame.planivacacionSessionBean.setEsGuardarRelacionado(false);
				//this.jInternalFrameDetalleFormEstructura.planivacacionBeanSwingJInternalFrame.getContentPane().setVisible(false);
			}

			if(this.jInternalFrameDetalleFormEstructura.asistenciamensualBeanSwingJInternalFrame!=null) {
				this.jInternalFrameDetalleFormEstructura.asistenciamensualBeanSwingJInternalFrame.asistenciamensualSessionBean.setEsGuardarRelacionado(false);
				//this.jInternalFrameDetalleFormEstructura.asistenciamensualBeanSwingJInternalFrame.getContentPane().setVisible(false);
			}

			if(this.jInternalFrameDetalleFormEstructura.empleadoprocesorubroBeanSwingJInternalFrame!=null) {
				this.jInternalFrameDetalleFormEstructura.empleadoprocesorubroBeanSwingJInternalFrame.empleadoprocesorubroSessionBean.setEsGuardarRelacionado(false);
				//this.jInternalFrameDetalleFormEstructura.empleadoprocesorubroBeanSwingJInternalFrame.getContentPane().setVisible(false);
			}

			if(this.jInternalFrameDetalleFormEstructura.empleadopagorubroBeanSwingJInternalFrame!=null) {
				this.jInternalFrameDetalleFormEstructura.empleadopagorubroBeanSwingJInternalFrame.empleadopagorubroSessionBean.setEsGuardarRelacionado(false);
				//this.jInternalFrameDetalleFormEstructura.empleadopagorubroBeanSwingJInternalFrame.getContentPane().setVisible(false);
			}

			if(this.jInternalFrameDetalleFormEstructura.provisionempleadoBeanSwingJInternalFrame!=null) {
				this.jInternalFrameDetalleFormEstructura.provisionempleadoBeanSwingJInternalFrame.provisionempleadoSessionBean.setEsGuardarRelacionado(false);
				//this.jInternalFrameDetalleFormEstructura.provisionempleadoBeanSwingJInternalFrame.getContentPane().setVisible(false);
			}

			if(this.jInternalFrameDetalleFormEstructura.empleadoBeanSwingJInternalFrame!=null) {
				this.jInternalFrameDetalleFormEstructura.empleadoBeanSwingJInternalFrame.empleadoSessionBean.setEsGuardarRelacionado(false);
				//this.jInternalFrameDetalleFormEstructura.empleadoBeanSwingJInternalFrame.getContentPane().setVisible(false);
			}

			if(this.jInternalFrameDetalleFormEstructura.estructuraBeanSwingJInternalFrame!=null) {
				this.jInternalFrameDetalleFormEstructura.estructuraBeanSwingJInternalFrame.estructuraSessionBean.setEsGuardarRelacionado(false);
				//this.jInternalFrameDetalleFormEstructura.estructuraBeanSwingJInternalFrame.getContentPane().setVisible(false);
			}

			if(this.jInternalFrameDetalleFormEstructura.evaluacionempleadoBeanSwingJInternalFrame!=null) {
				this.jInternalFrameDetalleFormEstructura.evaluacionempleadoBeanSwingJInternalFrame.evaluacionempleadoSessionBean.setEsGuardarRelacionado(false);
				//this.jInternalFrameDetalleFormEstructura.evaluacionempleadoBeanSwingJInternalFrame.getContentPane().setVisible(false);
			}

			if(this.jInternalFrameDetalleFormEstructura.empleadoimpuestorentaBeanSwingJInternalFrame!=null) {
				this.jInternalFrameDetalleFormEstructura.empleadoimpuestorentaBeanSwingJInternalFrame.empleadoimpuestorentaSessionBean.setEsGuardarRelacionado(false);
				//this.jInternalFrameDetalleFormEstructura.empleadoimpuestorentaBeanSwingJInternalFrame.getContentPane().setVisible(false);
			}

			if(this.jInternalFrameDetalleFormEstructura.rubroestructuraBeanSwingJInternalFrame!=null) {
				this.jInternalFrameDetalleFormEstructura.rubroestructuraBeanSwingJInternalFrame.rubroestructuraSessionBean.setEsGuardarRelacionado(false);
				//this.jInternalFrameDetalleFormEstructura.rubroestructuraBeanSwingJInternalFrame.getContentPane().setVisible(false);
			}

			if(this.jInternalFrameDetalleFormEstructura.cierrerolmensualBeanSwingJInternalFrame!=null) {
				this.jInternalFrameDetalleFormEstructura.cierrerolmensualBeanSwingJInternalFrame.cierrerolmensualSessionBean.setEsGuardarRelacionado(false);
				//this.jInternalFrameDetalleFormEstructura.cierrerolmensualBeanSwingJInternalFrame.getContentPane().setVisible(false);
			}

			if(this.jInternalFrameDetalleFormEstructura.formatonomiBeanSwingJInternalFrame!=null) {
				this.jInternalFrameDetalleFormEstructura.formatonomiBeanSwingJInternalFrame.formatonomiSessionBean.setEsGuardarRelacionado(false);
				//this.jInternalFrameDetalleFormEstructura.formatonomiBeanSwingJInternalFrame.getContentPane().setVisible(false);
			}

			if(this.jInternalFrameDetalleFormEstructura.empleadoestructuraBeanSwingJInternalFrame!=null) {
				this.jInternalFrameDetalleFormEstructura.empleadoestructuraBeanSwingJInternalFrame.empleadoestructuraSessionBean.setEsGuardarRelacionado(false);
				//this.jInternalFrameDetalleFormEstructura.empleadoestructuraBeanSwingJInternalFrame.getContentPane().setVisible(false);
			}

			if(this.jInternalFrameDetalleFormEstructura.historialpagonomiBeanSwingJInternalFrame!=null) {
				this.jInternalFrameDetalleFormEstructura.historialpagonomiBeanSwingJInternalFrame.historialpagonomiSessionBean.setEsGuardarRelacionado(false);
				//this.jInternalFrameDetalleFormEstructura.historialpagonomiBeanSwingJInternalFrame.getContentPane().setVisible(false);
			}

			if(this.jInternalFrameDetalleFormEstructura.asistenciadiariaBeanSwingJInternalFrame!=null) {
				this.jInternalFrameDetalleFormEstructura.asistenciadiariaBeanSwingJInternalFrame.asistenciadiariaSessionBean.setEsGuardarRelacionado(false);
				//this.jInternalFrameDetalleFormEstructura.asistenciadiariaBeanSwingJInternalFrame.getContentPane().setVisible(false);
			}

			if(this.jInternalFrameDetalleFormEstructura.funcionestrucBeanSwingJInternalFrame!=null) {
				this.jInternalFrameDetalleFormEstructura.funcionestrucBeanSwingJInternalFrame.funcionestrucSessionBean.setEsGuardarRelacionado(false);
				//this.jInternalFrameDetalleFormEstructura.funcionestrucBeanSwingJInternalFrame.getContentPane().setVisible(false);
			}

			if(this.jInternalFrameDetalleFormEstructura.solicitudreemplazoBeanSwingJInternalFrame!=null) {
				this.jInternalFrameDetalleFormEstructura.solicitudreemplazoBeanSwingJInternalFrame.solicitudreemplazoSessionBean.setEsGuardarRelacionado(false);
				//this.jInternalFrameDetalleFormEstructura.solicitudreemplazoBeanSwingJInternalFrame.getContentPane().setVisible(false);
			}

			if(this.jInternalFrameDetalleFormEstructura.solicitudhoraextraBeanSwingJInternalFrame!=null) {
				this.jInternalFrameDetalleFormEstructura.solicitudhoraextraBeanSwingJInternalFrame.solicitudhoraextraSessionBean.setEsGuardarRelacionado(false);
				//this.jInternalFrameDetalleFormEstructura.solicitudhoraextraBeanSwingJInternalFrame.getContentPane().setVisible(false);
			}

			if(this.jInternalFrameDetalleFormEstructura.evaluacionnomiBeanSwingJInternalFrame!=null) {
				this.jInternalFrameDetalleFormEstructura.evaluacionnomiBeanSwingJInternalFrame.evaluacionnomiSessionBean.setEsGuardarRelacionado(false);
				//this.jInternalFrameDetalleFormEstructura.evaluacionnomiBeanSwingJInternalFrame.getContentPane().setVisible(false);
			}

			if(this.jInternalFrameDetalleFormEstructura.solicitudvacacionBeanSwingJInternalFrame!=null) {
				this.jInternalFrameDetalleFormEstructura.solicitudvacacionBeanSwingJInternalFrame.solicitudvacacionSessionBean.setEsGuardarRelacionado(false);
				//this.jInternalFrameDetalleFormEstructura.solicitudvacacionBeanSwingJInternalFrame.getContentPane().setVisible(false);
			}

			if(this.jInternalFrameDetalleFormEstructura.responsableactivofijoBeanSwingJInternalFrame!=null) {
				this.jInternalFrameDetalleFormEstructura.responsableactivofijoBeanSwingJInternalFrame.responsableactivofijoSessionBean.setEsGuardarRelacionado(false);
				//this.jInternalFrameDetalleFormEstructura.responsableactivofijoBeanSwingJInternalFrame.getContentPane().setVisible(false);
			}

			if(this.jInternalFrameDetalleFormEstructura.rubroempleacuentacontableBeanSwingJInternalFrame!=null) {
				this.jInternalFrameDetalleFormEstructura.rubroempleacuentacontableBeanSwingJInternalFrame.rubroempleacuentacontableSessionBean.setEsGuardarRelacionado(false);
				//this.jInternalFrameDetalleFormEstructura.rubroempleacuentacontableBeanSwingJInternalFrame.getContentPane().setVisible(false);
			}
		}
	};
	
	public int getIndiceNuevoEstructura() throws Exception {
		int iIndice=0;
		Boolean existe=false;
		
		//ARCHITECTURE
		if(Constantes.ISUSAEJBLOGICLAYER) {
			for(Estructura estructuraAux:this.estructuraLogic.getEstructuras()) {
				if(estructuraAux.getId().equals(this.iIdNuevoEstructura)) {
					existe=true;
					break;
				}
				
				iIndice++;
			}
		} else if(Constantes.ISUSAEJBREMOTE || Constantes.ISUSAEJBHOME) {
			for(Estructura estructuraAux:this.estructuras) {
				if(estructuraAux.getId().equals(this.iIdNuevoEstructura)) {
					existe=true;
					break;
				}
				
				iIndice++;
			}
		}
		//ARCHITECTURE
		
		if(!existe) {
			//SI NO EXISTE TOMA LA ULTIMA FILA
			iIndice=iIndice-1;
		}
		
		return iIndice;
	}
	
	public int getIndiceActualEstructura(Estructura estructura,Integer iIndiceActual) throws Exception {
		Integer iIndice=0;
		Boolean existe=false;
		
		//ARCHITECTURE
		if(Constantes.ISUSAEJBLOGICLAYER) {
			for(Estructura estructuraAux:this.estructuraLogic.getEstructuras()) {
				if(estructuraAux.getId().equals(estructura.getId())) {
					existe=true;
					break;
				}
				
				iIndice++;
			}
		} else if(Constantes.ISUSAEJBREMOTE || Constantes.ISUSAEJBHOME) {
			for(Estructura estructuraAux:this.estructuras) {
				if(estructuraAux.getId().equals(estructura.getId())) {
					existe=true;
					break;
				}
				
				iIndice++;
			}
		}
		//ARCHITECTURE
		
		if(!existe) {
			//SI NO EXISTE TOMA LA ULTIMA FILA
			iIndice=iIndiceActual;
		}
		
		return iIndice;
	}
	
	public void setCamposBaseDesdeOriginalEstructura(Estructura estructuraOriginal) throws Exception {
		Boolean existe=false;
		
		//ARCHITECTURE
		if(Constantes.ISUSAEJBLOGICLAYER) {
			for(Estructura estructuraAux:this.estructuraLogic.getEstructuras()) {
				if(estructuraAux.getEstructuraOriginal().getId().equals(estructuraOriginal.getId())) {
					existe=true;
					estructuraOriginal.setId(estructuraAux.getId());
					estructuraOriginal.setVersionRow(estructuraAux.getVersionRow());
					break;
				}
				
			}
		} else if(Constantes.ISUSAEJBREMOTE || Constantes.ISUSAEJBHOME) {
			for(Estructura estructuraAux:this.estructuras) {
				if(estructuraAux.getEstructuraOriginal().getId().equals(estructuraOriginal.getId())) {
					existe=true;
					estructuraOriginal.setId(estructuraAux.getId());
					estructuraOriginal.setVersionRow(estructuraAux.getVersionRow());
					break;
				}				
			}
		}
		//ARCHITECTURE
		
		if(!existe) {
			//SI NO EXISTE TOMA LA ULTIMA FILA
		}
	}
	
	public void cancelarNuevosEstructura(Boolean esParaCancelar) throws Exception {
		estructurasAux=new ArrayList<Estructura>();
		estructuraAux=new Estructura();
		
		if(!this.estructuraSessionBean.getEsGuardarRelacionado()) {
			if(Constantes.ISUSAEJBLOGICLAYER) {
				for(Estructura estructuraAux:this.estructuraLogic.getEstructuras()) {
					if(estructuraAux.getId()<0) {
						estructurasAux.add(estructuraAux);
					}		
				}
				this.iIdNuevoEstructura=0L;
				this.estructuraLogic.getEstructuras().removeAll(estructurasAux);
					
			} else if(Constantes.ISUSAEJBREMOTE||Constantes.ISUSAEJBHOME) {
				for(Estructura estructuraAux:this.estructuras) {
					if(estructuraAux.getId()<0) {
						estructurasAux.add(estructuraAux);
					}		
				}
				this.iIdNuevoEstructura=0L;
				this.estructuras.removeAll(estructurasAux);
			}	
		} else {			
			if(Constantes.ISUSAEJBLOGICLAYER) {
				if(esParaCancelar && this.isEsNuevoEstructura 
					&& this.estructuraLogic.getEstructuras().size()>0
					) {
					estructuraAux=this.estructuraLogic.getEstructuras().get(this.estructuraLogic.getEstructuras().size() - 1);
				
					if(estructuraAux.getId()<0) {
						this.estructuraLogic.getEstructuras().remove(estructuraAux);
					}
				}
			} else if(Constantes.ISUSAEJBREMOTE||Constantes.ISUSAEJBHOME) {
				if(esParaCancelar && this.isEsNuevoEstructura && this.estructuras.size()>0) {
					estructuraAux=this.estructuras.get(this.estructuras.size() - 1);
				
					if(estructuraAux.getId()<0) {
						this.estructuras.remove(estructuraAux);
					}
				}
			}	
		}
	}
	
	public void cancelarNuevoEstructura(Boolean esParaCancelar) throws Exception {
		if(Constantes.ISUSAEJBLOGICLAYER) {
			if(estructura.getId()<0) {
				this.estructuraLogic.getEstructuras().remove(this.estructura);
			}					
		} else if(Constantes.ISUSAEJBREMOTE||Constantes.ISUSAEJBHOME) {
			if(estructura.getId()<0) {
				this.estructuras.remove(this.estructura);
			}
		}			
	}
	
	public void setEstadosInicialesEstructura(List<Estructura> estructurasAux) throws Exception {
		EstructuraConstantesFunciones.setEstadosInicialesEstructura(estructurasAux);
	}
	
	public void setEstadosInicialesEstructura(Estructura estructuraAux) throws Exception {
		EstructuraConstantesFunciones.setEstadosInicialesEstructura(estructuraAux);		
	}
	
	public void nuevo() throws Exception {
		try	{
			//ESTA VALIDADO EN FUNCION ACTUALIZAR
			//if(this.validarEstructuraActual()) {
				this.ejecutarMantenimiento(MaintenanceType.NUEVO);
				
				this.actualizarEstadoCeldasBotonesEstructura("n", isGuardarCambiosEnLote, isEsMantenimientoRelacionado);
				
			//}
		} catch(Exception e) {
			throw e;
			//FuncionesSwing.manageException(this, e,logger,EstructuraConstantesFunciones.CLASSNAME);
		}
	}
	
	public void actualizar() throws Exception {
		try	{
			if(this.validarEstructuraActual()) {
				if(!this.isEsNuevoEstructura) {
					this.ejecutarMantenimiento(MaintenanceType.ACTUALIZAR);
					
					this.actualizarEstadoCeldasBotonesEstructura("n", isGuardarCambiosEnLote, isEsMantenimientoRelacionado);
					
				} else {					
					this.nuevo();
					this.isEsNuevoEstructura=false;
				}
				
				//SE CANCELA AL FINAL DEL PROCESO JBUTTONACTUALIZAR
				//this.cancelar(false);
			}		
		} catch(Exception e) {
			throw e;
			//FuncionesSwing.manageException(this, e,logger,EstructuraConstantesFunciones.CLASSNAME);
		}
	}
	
	public void eliminar() throws Exception {
		try	{	
			if(this.validarEstructuraActual()) {
				if(JOptionPane.showConfirmDialog(this, "ESTA SEGURO DE ELIMINAR EL/LA Estructura ?", "MANTENIMIENTO DE Estructura", JOptionPane.OK_CANCEL_OPTION) == 0) {
					this.ejecutarMantenimiento(MaintenanceType.ELIMINAR);			
					this.actualizarEstadoCeldasBotonesEstructura("n", isGuardarCambiosEnLote, isEsMantenimientoRelacionado);			
				}
			
			}
		} catch(Exception e) {
			throw e;
			//FuncionesSwing.manageException(this, e,logger,EstructuraConstantesFunciones.CLASSNAME);
		}
	}
	
	public void guardarCambios() throws Exception {
		try	{
			this.ejecutarMantenimiento(MaintenanceType.GUARDARCAMBIOS);
			
		} catch(Exception e) {
			FuncionesSwing.manageException(this, e,logger,EstructuraConstantesFunciones.CLASSNAME);
		}
	}
	
	public void seleccionarAsignar(Estructura estructura) throws Exception {
		EstructuraConstantesFunciones.seleccionarAsignar(this.estructura,estructura);
	}
	
	public void seleccionar() throws Exception {
		try	{
			//ACTUALIZO EL PERMISO ACTUALIZAR CON EL PERMISO ACTUALIZAR ORIGINAL ESTE PERMISO SE UTILIZA PARA EL NUEVO TAMBIEN
			this.isPermisoActualizarEstructura=this.isPermisoActualizarOriginalEstructura;
			
			
			this.seleccionarAsignar(estructura);
			
			

			idCuentaContableActual=estructura.getid_cuenta_contable();
			this.seleccionarCuentaContableActual();
			
			this.arrDatoGeneral= new  ArrayList<DatoGeneral>();
			this.arrDatoGeneralNo= new  ArrayList<String>();
			
			EstructuraConstantesFunciones.quitarEspaciosEstructura(this.estructura,this.arrDatoGeneral);
			
			
			this.actualizarEstadoCeldasBotonesEstructura("ae", isGuardarCambiosEnLote, isEsMantenimientoRelacionado);
			
						
		} catch(Exception e) {
			FuncionesSwing.manageException(this, e,logger,EstructuraConstantesFunciones.CLASSNAME);
		}
	}
	
	public void seleccionarBusqueda(Long id) throws Exception {
		try	{
			this.estructuraSessionBean.setsFuncionBusquedaRapida(this.estructuraSessionBean.getsFuncionBusquedaRapida().replace("TO_REPLACE", id.toString()));
			
		} catch(Exception e) {
			FuncionesSwing.manageException(this, e,logger,EstructuraConstantesFunciones.CLASSNAME);
		}
	}
	
	
	//BUSQUEDA INTERNA FK
	public void seleccionarCuentaContableActual() throws Exception {
		try	{
			CuentaContable cuentacontableAux=new CuentaContable();

			if(this.idCuentaContableActual != null && this.idCuentaContableActual>0) {
				//ARCHITECTURE
				if(Constantes.ISUSAEJBLOGICLAYER) {
					cuentacontableLogic.getEntityWithConnection(this.idCuentaContableActual);
					cuentacontableAux= cuentacontableLogic.getCuentaContable();
				} else if(Constantes.ISUSAEJBREMOTE) {
				} else if(Constantes.ISUSAEJBHOME) {
				}
				//ARCHITECTURE

				cuentacontablesForeignKey=new ArrayList<CuentaContable>();
				cuentacontablesForeignKey.add(cuentacontableAux);
			}

		} catch(Exception e) {
			FuncionesSwing.manageException(this, e,logger);
		}
	}
	
	public void cancelar() throws Exception {
		this.cancelar(true);
	}
	
	public void cancelar(Boolean esParaCancelar) throws Exception {
		try {
														
			
			//SE UTILIZA COLUMNA ELIMINAR EN TABLA
			if(this.isEsNuevoEstructura) {
				//NO CANCELA TODOS NUEVOS POR FUNCIONALIDAD GUARDAR CAMBIOS
				//this.cancelarNuevosEstructura(esParaCancelar);				
				this.cancelarNuevoEstructura(esParaCancelar);								
			}
			
			this.estructura=new Estructura();
			
			this.inicializarEstructura();
			
			this.actualizarEstadoCeldasBotonesEstructura("n", isGuardarCambiosEnLote, isEsMantenimientoRelacionado);			
		
		} catch(Exception e) {
			FuncionesSwing.manageException(this, e,logger,EstructuraConstantesFunciones.CLASSNAME);
		}
	}
	
	public void inicializarEstructura() throws Exception {
		try {
			EstructuraConstantesFunciones.inicializarEstructura(this.estructura);
			
			} catch(Exception e) {
			throw e;
		}
	}
	
	public void anteriores()throws Exception {
		try	{
			//this.iNumeroPaginacionPagina=this.iNumeroPaginacionPagina-this.iNumeroPaginacion;
			
			if(this.iNumeroPaginacionPagina-this.iNumeroPaginacion<this.iNumeroPaginacion) {
				this.iNumeroPaginacionPagina=0;		
			} else {
				this.iNumeroPaginacionPagina=this.iNumeroPaginacionPagina-this.iNumeroPaginacion;
			}
			
			this.procesarBusqueda(this.sAccionBusqueda);
			
		} catch(Exception e) {
			FuncionesSwing.manageException(this, e,logger,EstructuraConstantesFunciones.CLASSNAME);
		}
	}
	
	public void siguientes()throws Exception {
		try	{			
			if(this.estructuraLogic.getEstructuras().size()>0) {
					
				this.iNumeroPaginacionPagina=this.iNumeroPaginacionPagina+this.iNumeroPaginacion;
			}
				
			this.procesarBusqueda(this.sAccionBusqueda);
			
		} catch(Exception e) {
			FuncionesSwing.manageException(this, e,logger,EstructuraConstantesFunciones.CLASSNAME);
		}
	}		
	
	public void generarReporteEstructuras(String sAccionBusqueda,List<Estructura> estructurasParaReportes) throws Exception {
		//HttpSession httpSession = httpServletRequest.getSession();
		Long iIdUsuarioSesion=0L;	
		
		
		if(usuarioActual==null) {
			this.usuarioActual=new Usuario();
		}
		
		iIdUsuarioSesion=usuarioActual.getId();
		
		String sPathReportes="";
		
		InputStream reportFile=null;
		InputStream imageFile=null;
			
		imageFile=AuxiliarImagenes.class.getResourceAsStream("LogoReporte.jpg");			
				
		
		String sPathReporteFinal="";
		
		if(!esReporteAccionProceso) {
			if(!this.sTipoReporte.equals("RELACIONES")) {//!isEsReporteRelaciones
				if(!this.esReporteDinamico) {
					sPathReporteFinal="Estructura"+this.sTipoReporteExtra+"Design.jasper";
					reportFile = AuxiliarReportes.class.getResourceAsStream(sPathReporteFinal);	
				} else {
					sPathReporteFinal=this.sPathReporteDinamico;
					reportFile = new FileInputStream(sPathReporteFinal);
				}
			} else {
				sPathReporteFinal="EstructuraMasterRelaciones"+this.sTipoReporteExtra+"Design.jasper";
				reportFile = AuxiliarReportes.class.getResourceAsStream(sPathReporteFinal);
				//sPathReportes=reportFile.getPath().replace("EstructuraMasterRelacionesDesign.jasper", "");
			}
		} else {
				sPathReporteFinal="Estructura"+this.sTipoReporteExtra+"Design.jasper";
				reportFile = AuxiliarReportes.class.getResourceAsStream(sPathReporteFinal);	
		}
		
		if(reportFile==null) {
			throw new JRRuntimeException(sPathReporteFinal+" no existe");
		}
		
		String sUsuario="";
		
		if(usuarioActual!=null) {
			sUsuario=usuarioActual.getuser_name();
		}
		
		Map<String, Object> parameters = new HashMap<String, Object>();
		parameters.put("usuario", sUsuario);
		
		parameters.put("titulo", Funciones.GetTituloSistemaReporte(this.parametroGeneralSg,this.moduloActual,this.usuarioActual));
		parameters.put("subtitulo", "Reporte De  Estructuras");		
		parameters.put("busquedapor", EstructuraConstantesFunciones.getNombreIndice(sAccionBusqueda)+sDetalleReporte);
		
		
		if(this.sTipoReporte.equals("RELACIONES")) {//isEsReporteRelaciones
			parameters.put("SUBREPORT_DIR", sPathReportes);
		}
		
		parameters.put("con_grafico", this.conGraficoReporte);
		
		JasperReport jasperReport = (JasperReport)JRLoader.loadObject(reportFile);
				
		this.cargarDatosCliente();
		
		ArrayList<Classe> classes=new ArrayList<Classe>();		
		
		if(this.sTipoReporte.equals("RELACIONES")) {//isEsReporteRelaciones
			
			classes.add(new Classe(CentroCostoEstructura.class));
			classes.add(new Classe(PlaniVacacion.class));
			classes.add(new Classe(AsistenciaMensual.class));
			classes.add(new Classe(EmpleadoProcesoRubro.class));
			classes.add(new Classe(EmpleadoPagoRubro.class));
			classes.add(new Classe(ProvisionEmpleado.class));
			classes.add(new Classe(Empleado.class));
			classes.add(new Classe(Estructura.class));
			classes.add(new Classe(EvaluacionEmpleado.class));
			classes.add(new Classe(EmpleadoImpuestoRenta.class));
			classes.add(new Classe(RubroEstructura.class));
			classes.add(new Classe(CierreRolMensual.class));
			classes.add(new Classe(FormatoNomi.class));
			classes.add(new Classe(EmpleadoEstructura.class));
			classes.add(new Classe(HistorialPagoNomi.class));
			classes.add(new Classe(AsistenciaDiaria.class));
			classes.add(new Classe(FuncionEstruc.class));
			classes.add(new Classe(SolicitudReemplazo.class));
			classes.add(new Classe(SolicitudHoraExtra.class));
			classes.add(new Classe(EvaluacionNomi.class));
			classes.add(new Classe(SolicitudVacacion.class));
			classes.add(new Classe(ResponsableActivoFijo.class));
			classes.add(new Classe(RubroEmpleaCuentaContable.class));
			
			//ARCHITECTURE
			if(Constantes.ISUSAEJBLOGICLAYER) {		
				try	{
					
					EstructuraLogic estructuraLogicAuxiliar=new EstructuraLogic();
					estructuraLogicAuxiliar.setDatosCliente(estructuraLogic.getDatosCliente());				
					estructuraLogicAuxiliar.setEstructuras(estructurasParaReportes);
					
					estructuraLogicAuxiliar.cargarRelacionesLoteForeignKeyEstructuraWithConnection(); //deepLoadsWithConnection(false, DeepLoadType.INCLUDE, classes, "");
					
					estructurasParaReportes=estructuraLogicAuxiliar.getEstructuras();
					
					//estructuraLogic.getNewConnexionToDeep();
					
					//for (Estructura estructura:estructurasParaReportes) {
					//	estructuraLogic.deepLoad(estructura, false, DeepLoadType.INCLUDE, classes);
					//}						
					//estructuraLogic.commitNewConnexionToDeep();
					
						
				} catch(Exception e) {
					throw e;
					
				} finally {
					//estructuraLogic.closeNewConnexionToDeep();
				}
			} else if(Constantes.ISUSAEJBREMOTE) {
			} else if(Constantes.ISUSAEJBHOME) {
			}
			//ARCHITECTURE		
			
		
			
			

			InputStream reportFileCentroCostoEstructura = AuxiliarReportes.class.getResourceAsStream("CentroCostoEstructuraDetalleRelacionesDesign.jasper");
			parameters.put("subreport_centrocostoestructura", reportFileCentroCostoEstructura);

			InputStream reportFilePlaniVacacion = AuxiliarReportes.class.getResourceAsStream("PlaniVacacionDetalleRelacionesDesign.jasper");
			parameters.put("subreport_planivacacion", reportFilePlaniVacacion);

			InputStream reportFileAsistenciaMensual = AuxiliarReportes.class.getResourceAsStream("AsistenciaMensualDetalleRelacionesDesign.jasper");
			parameters.put("subreport_asistenciamensual", reportFileAsistenciaMensual);

			InputStream reportFileEmpleadoProcesoRubro = AuxiliarReportes.class.getResourceAsStream("EmpleadoProcesoRubroDetalleRelacionesDesign.jasper");
			parameters.put("subreport_empleadoprocesorubro", reportFileEmpleadoProcesoRubro);

			InputStream reportFileEmpleadoPagoRubro = AuxiliarReportes.class.getResourceAsStream("EmpleadoPagoRubroDetalleRelacionesDesign.jasper");
			parameters.put("subreport_empleadopagorubro", reportFileEmpleadoPagoRubro);

			InputStream reportFileProvisionEmpleado = AuxiliarReportes.class.getResourceAsStream("ProvisionEmpleadoDetalleRelacionesDesign.jasper");
			parameters.put("subreport_provisionempleado", reportFileProvisionEmpleado);

			InputStream reportFileEmpleado = AuxiliarReportes.class.getResourceAsStream("EmpleadoDetalleRelacionesDesign.jasper");
			parameters.put("subreport_empleado", reportFileEmpleado);

			InputStream reportFileEstructura = AuxiliarReportes.class.getResourceAsStream("EstructuraDetalleRelacionesDesign.jasper");
			parameters.put("subreport_estructura", reportFileEstructura);

			InputStream reportFileEvaluacionEmpleado = AuxiliarReportes.class.getResourceAsStream("EvaluacionEmpleadoDetalleRelacionesDesign.jasper");
			parameters.put("subreport_evaluacionempleado", reportFileEvaluacionEmpleado);

			InputStream reportFileEmpleadoImpuestoRenta = AuxiliarReportes.class.getResourceAsStream("EmpleadoImpuestoRentaDetalleRelacionesDesign.jasper");
			parameters.put("subreport_empleadoimpuestorenta", reportFileEmpleadoImpuestoRenta);

			InputStream reportFileRubroEstructura = AuxiliarReportes.class.getResourceAsStream("RubroEstructuraDetalleRelacionesDesign.jasper");
			parameters.put("subreport_rubroestructura", reportFileRubroEstructura);

			InputStream reportFileCierreRolMensual = AuxiliarReportes.class.getResourceAsStream("CierreRolMensualDetalleRelacionesDesign.jasper");
			parameters.put("subreport_cierrerolmensual", reportFileCierreRolMensual);

			InputStream reportFileFormatoNomi = AuxiliarReportes.class.getResourceAsStream("FormatoNomiDetalleRelacionesDesign.jasper");
			parameters.put("subreport_formatonomi", reportFileFormatoNomi);

			InputStream reportFileEmpleadoEstructura = AuxiliarReportes.class.getResourceAsStream("EmpleadoEstructuraDetalleRelacionesDesign.jasper");
			parameters.put("subreport_empleadoestructura", reportFileEmpleadoEstructura);

			InputStream reportFileHistorialPagoNomi = AuxiliarReportes.class.getResourceAsStream("HistorialPagoNomiDetalleRelacionesDesign.jasper");
			parameters.put("subreport_historialpagonomi", reportFileHistorialPagoNomi);

			InputStream reportFileAsistenciaDiaria = AuxiliarReportes.class.getResourceAsStream("AsistenciaDiariaDetalleRelacionesDesign.jasper");
			parameters.put("subreport_asistenciadiaria", reportFileAsistenciaDiaria);

			InputStream reportFileFuncionEstruc = AuxiliarReportes.class.getResourceAsStream("FuncionEstrucDetalleRelacionesDesign.jasper");
			parameters.put("subreport_funcionestruc", reportFileFuncionEstruc);

			InputStream reportFileSolicitudReemplazo = AuxiliarReportes.class.getResourceAsStream("SolicitudReemplazoDetalleRelacionesDesign.jasper");
			parameters.put("subreport_solicitudreemplazo", reportFileSolicitudReemplazo);

			InputStream reportFileSolicitudHoraExtra = AuxiliarReportes.class.getResourceAsStream("SolicitudHoraExtraDetalleRelacionesDesign.jasper");
			parameters.put("subreport_solicitudhoraextra", reportFileSolicitudHoraExtra);

			InputStream reportFileEvaluacionNomi = AuxiliarReportes.class.getResourceAsStream("EvaluacionNomiDetalleRelacionesDesign.jasper");
			parameters.put("subreport_evaluacionnomi", reportFileEvaluacionNomi);

			InputStream reportFileSolicitudVacacion = AuxiliarReportes.class.getResourceAsStream("SolicitudVacacionDetalleRelacionesDesign.jasper");
			parameters.put("subreport_solicitudvacacion", reportFileSolicitudVacacion);

			InputStream reportFileResponsableActivoFijo = AuxiliarReportes.class.getResourceAsStream("ResponsableActivoFijoDetalleRelacionesDesign.jasper");
			parameters.put("subreport_responsableactivofijo", reportFileResponsableActivoFijo);

			InputStream reportFileRubroEmpleaCuentaContable = AuxiliarReportes.class.getResourceAsStream("RubroEmpleaCuentaContableDetalleRelacionesDesign.jasper");
			parameters.put("subreport_rubroempleacuentacontable", reportFileRubroEmpleaCuentaContable);
		} else {
			//FK DEBERIA TRAERSE DE ANTEMANO
			
		}
								
		
		//CLASSES PARA REPORTES OBJETOS RELACIONADOS
		if(!this.sTipoReporte.equals("RELACIONES")) {//!isEsReporteRelaciones
			classes=new ArrayList<Classe>();
		}
		
		JRBeanArrayDataSource jrbeanArrayDataSourceEstructura=null;
		
		if(this.sTipoReporteExtra!=null && !this.sTipoReporteExtra.equals("")) {
			EstructuraConstantesFunciones.S_TIPOREPORTE_EXTRA=this.sTipoReporteExtra;
		} else {
			EstructuraConstantesFunciones.S_TIPOREPORTE_EXTRA="";
		}
		
		jrbeanArrayDataSourceEstructura=new JRBeanArrayDataSource(EstructuraJInternalFrame.TraerEstructuraBeans(estructurasParaReportes,classes).toArray());
		
		jasperPrint = JasperFillManager.fillReport(jasperReport,parameters,jrbeanArrayDataSourceEstructura);
				
		
		String sPathDest=Constantes.SUNIDAD_ARCHIVOS+":/"+Constantes.SCONTEXTSERVER+"/"+EstructuraConstantesFunciones.SCHEMA+"/reportes";
		
		File filePathDest = new File(sPathDest);
		
		if(!filePathDest.exists()) {
			filePathDest.mkdirs();				
		}
				
		String sDestFileName=sPathDest+"/"+EstructuraConstantesFunciones.CLASSNAME;
				
		if(this.sTipoArchivoReporte=="VISUALIZAR") {
			JasperViewer jasperViewer = new JasperViewer(jasperPrint,false) ;
			jasperViewer.setVisible(true) ; 

		} else if(this.sTipoArchivoReporte=="HTML"||this.sTipoArchivoReporte=="PDF"||this.sTipoArchivoReporte=="XML") {	
			//JasperFillManager.fillReportToFile(reportFile.getAbsolutePath(),parameters, new JRBeanArrayDataSource(EstructuraBean.TraerEstructuraBeans(estructurasParaReportes).toArray()));
							
			if(this.sTipoArchivoReporte=="HTML") {
				sDestFileName+=".html";
				JasperExportManager.exportReportToHtmlFile(jasperPrint,sDestFileName);
					
			} else if(this.sTipoArchivoReporte=="PDF") {
				sDestFileName+=".pdf";
				JasperExportManager.exportReportToPdfFile(jasperPrint,sDestFileName);
			} else {
				sDestFileName+=".xml";
				JasperExportManager.exportReportToXmlFile(jasperPrint,sDestFileName, false);
			}	
			
		} else if(this.sTipoArchivoReporte=="WORD"||this.sTipoArchivoReporte=="EXCEL") {
				
			if(this.sTipoArchivoReporte=="WORD") {
				sDestFileName+=".rtf";
					
				JRRtfExporter exporter = new JRRtfExporter();
		
				exporter.setParameter(JRExporterParameter.JASPER_PRINT, jasperPrint);
				exporter.setParameter(JRExporterParameter.OUTPUT_FILE_NAME, sDestFileName);
		
				exporter.exportReport();
				
			} else	{
				sDestFileName+=".xls";
					
				JRXlsExporter exporterXls = new JRXlsExporter();
		
				exporterXls.setParameter(JRExporterParameter.JASPER_PRINT, jasperPrint);
				exporterXls.setParameter(JRExporterParameter.OUTPUT_FILE_NAME, sDestFileName);
				exporterXls.setParameter(JRXlsExporterParameter.IS_ONE_PAGE_PER_SHEET, Boolean.TRUE);
		
				exporterXls.exportReport();
			}
			
		} else if(this.sTipoArchivoReporte=="EXCEL2"||this.sTipoArchivoReporte=="EXCEL2_2") {
			//sDestFileName+=".xlsx";
			
			if(this.sTipoReporte.equals("NORMAL")) {
				this.generarExcelReporteEstructuras(sAccionBusqueda,sTipoArchivoReporte,estructurasParaReportes);
			
			} else if(this.sTipoReporte.equals("FORMULARIO")){
				this.generarExcelReporteVerticalEstructuras(sAccionBusqueda,sTipoArchivoReporte,estructurasParaReportes,false);
			
			} else if(this.sTipoReporte.equals("DINAMICO")){
				
				if(this.sTipoReporteDinamico.equals("NORMAL")) {
					
					this.jButtonGenerarExcelReporteDinamicoEstructuraActionPerformed(null);
					//this.generarExcelReporteEstructuras(sAccionBusqueda,sTipoArchivoReporte,estructurasParaReportes);
					
				
				} else if(this.sTipoReporteDinamico.equals("FORMULARIO")){
					this.generarExcelReporteVerticalEstructuras(sAccionBusqueda,sTipoArchivoReporte,estructurasParaReportes,true);
				
				} else if(this.sTipoReporteDinamico.equals("RELACIONES")){
					this.generarExcelReporteRelacionesEstructuras(sAccionBusqueda,sTipoArchivoReporte,estructurasParaReportes,true);
				}
				
			} else if(this.sTipoReporte.equals("RELACIONES")){
				this.generarExcelReporteRelacionesEstructuras(sAccionBusqueda,sTipoArchivoReporte,estructurasParaReportes,false);
			}
		}
		
		if(this.sTipoArchivoReporte=="HTML"||this.sTipoArchivoReporte=="PDF"||this.sTipoArchivoReporte=="XML"||this.sTipoArchivoReporte=="WORD"||this.sTipoArchivoReporte=="EXCEL") {				
			JOptionPane.showMessageDialog(this,"REPORTE "+sDestFileName+" GENERADO SATISFACTORIAMENTE","REPORTES ",JOptionPane.INFORMATION_MESSAGE);
		}
	}
	
	public void generarExcelReporteEstructuras(String sAccionBusqueda,String sTipoArchivoReporte,List<Estructura> estructurasParaReportes) throws Exception {
	 	Workbook workbook = null;
		String sPath=this.parametroGeneralUsuario.getpath_exportar()+"estructura";
		
		if(sTipoArchivoReporte=="EXCEL2") {
			workbook = new HSSFWorkbook();
			sPath+=".xls";
		
		} else if(sTipoArchivoReporte=="EXCEL2_2") {
			workbook = new XSSFWorkbook();
			sPath+=".xlsx";			
		}
		
		
		
		Sheet sheet = workbook.createSheet("Estructuras");
         
        int iRow = 0;
		int iCell = 0;
		Row row =null;
		Cell cell=null;
		
		row = sheet.createRow(iRow++);
		
		this.generarExcelReporteHeaderEstructura("NORMAL",row,workbook);
		
		CellStyle cellStyleData = Funciones2.getStyleTitulo(workbook,"ZEBRA");
		CellStyle cellStyleDataAux=null;
		
		int i=0;
		
      	for(Estructura estructura : estructurasParaReportes) {            
			row = sheet.createRow(iRow++);
			iCell = 0;
			
			cellStyleDataAux=null;
			
			if(i%2==0) {
				cellStyleDataAux=cellStyleData;
			}
			
			EstructuraConstantesFunciones.generarExcelReporteDataEstructura("NORMAL",row,workbook,estructura,cellStyleDataAux);
		
			
			/*
            Cell cell0 = row.createCell(0);
            cell0.setCellValue(country.getName());
            Cell cell1 = row.createCell(1);
            cell1.setCellValue(country.getShortCode());
			*/
			
			i++;
        }
        
		
        FileOutputStream fileOutputStream = new FileOutputStream(sPath);
		
        workbook.write(fileOutputStream);
		
        fileOutputStream.close();
		
		Constantes2.S_PATH_ULTIMO_ARCHIVO=sPath;
			
		if(this.parametroGeneralUsuario.getcon_mensaje_confirmacion() && !this.estructuraSessionBean.getEsGuardarRelacionado()) {//Constantes.ISMOSTRARMENSAJESMANTENIMIENTO && 
			JOptionPane.showMessageDialog(this,"EXPORTADO CORRECTAMENTE:"+sPath,"MANTENIMIENTO DE Estructura",JOptionPane.INFORMATION_MESSAGE);
		}
	}
	
	public void generarExcelReporteHeaderEstructura(String sTipo,Row row,Workbook workbook) {
		
		EstructuraConstantesFunciones.generarExcelReporteHeaderEstructura(sTipo,row,workbook);
		
		/*
		Cell cell=null;
		int iCell=0;
		
		CellStyle cellStyle = workbook.createCellStyle();
		cellStyle.setFillBackgroundColor(IndexedColors.GREEN.getIndex());
		cellStyle.setFillPattern(CellStyle.ALIGN_FILL);
		*/
		
	}
	
	public void generarExcelReporteVerticalEstructuras(String sAccionBusqueda,String sTipoArchivoReporte,List<Estructura> estructurasParaReportes,Boolean paraDinamico) throws Exception {
	 	Workbook workbook = null;
		String sPath=this.parametroGeneralUsuario.getpath_exportar()+"estructura_vertical";
		
		if(sTipoArchivoReporte=="EXCEL2") {
			workbook = new HSSFWorkbook();
			sPath+=".xls";
		
		} else if(sTipoArchivoReporte=="EXCEL2_2") {
			workbook = new XSSFWorkbook();
			sPath+=".xlsx";			
		}
		
		
		
		Sheet sheet = workbook.createSheet("Estructuras");
         
        int iRow = 0;
		int iRowLast = 0;
		int iCell = 0;
		Row row =null;
		Cell cell=null;
		
		row = sheet.createRow(iRow++);
		
		CellStyle cellStyle = Funciones2.getStyleTitulo(workbook,"ZEBRA");;
		
		CellStyle cellStyleTitulo = Funciones2.getStyleTitulo(workbook,"PRINCIPAL_VERTICAL");
		
		
		for(Estructura estructura : estructurasParaReportes) {
			row = sheet.createRow(iRow++);
			iRowLast=iRow - 1;
			
			cell = row.createCell(0);
			cell.setCellValue(EstructuraConstantesFunciones.getEstructuraDescripcion(estructura));
			cell.setCellStyle(cellStyleTitulo);
			
			sheet.addMergedRegion(new CellRangeAddress(iRowLast,iRowLast,0,2));			
	
			


			if(!paraDinamico || (paraDinamico && this.existeColumnaReporteDinamico(EstructuraConstantesFunciones.LABEL_IDEMPRESA))) {
				row = sheet.createRow(iRow++);

				cell = row.createCell(0);
				cell.setCellValue(EstructuraConstantesFunciones.LABEL_IDEMPRESA);
				cell.setCellStyle(cellStyle);

				cell = row.createCell(1);
				cell.setCellValue(estructura.getempresa_descripcion());


			}


			if(!paraDinamico || (paraDinamico && this.existeColumnaReporteDinamico(EstructuraConstantesFunciones.LABEL_IDSUCURSAL))) {
				row = sheet.createRow(iRow++);

				cell = row.createCell(0);
				cell.setCellValue(EstructuraConstantesFunciones.LABEL_IDSUCURSAL);
				cell.setCellStyle(cellStyle);

				cell = row.createCell(1);
				cell.setCellValue(estructura.getsucursal_descripcion());


			}


			if(!paraDinamico || (paraDinamico && this.existeColumnaReporteDinamico(EstructuraConstantesFunciones.LABEL_IDESTRUCTURA))) {
				row = sheet.createRow(iRow++);

				cell = row.createCell(0);
				cell.setCellValue(EstructuraConstantesFunciones.LABEL_IDESTRUCTURA);
				cell.setCellStyle(cellStyle);

				cell = row.createCell(1);
				cell.setCellValue(estructura.getestructura_descripcion());


			}


			if(!paraDinamico || (paraDinamico && this.existeColumnaReporteDinamico(EstructuraConstantesFunciones.LABEL_IDTIPOPAGO_NM))) {
				row = sheet.createRow(iRow++);

				cell = row.createCell(0);
				cell.setCellValue(EstructuraConstantesFunciones.LABEL_IDTIPOPAGO_NM);
				cell.setCellStyle(cellStyle);

				cell = row.createCell(1);
				cell.setCellValue(estructura.gettipopago_nm_descripcion());


			}


			if(!paraDinamico || (paraDinamico && this.existeColumnaReporteDinamico(EstructuraConstantesFunciones.LABEL_IDNUMEROPATRONAL))) {
				row = sheet.createRow(iRow++);

				cell = row.createCell(0);
				cell.setCellValue(EstructuraConstantesFunciones.LABEL_IDNUMEROPATRONAL);
				cell.setCellStyle(cellStyle);

				cell = row.createCell(1);
				cell.setCellValue(estructura.getnumeropatronal_descripcion());


			}


			if(!paraDinamico || (paraDinamico && this.existeColumnaReporteDinamico(EstructuraConstantesFunciones.LABEL_IDCUENTACONTABLE))) {
				row = sheet.createRow(iRow++);

				cell = row.createCell(0);
				cell.setCellValue(EstructuraConstantesFunciones.LABEL_IDCUENTACONTABLE);
				cell.setCellStyle(cellStyle);

				cell = row.createCell(1);
				cell.setCellValue(estructura.getcuentacontable_descripcion());


			}


			if(!paraDinamico || (paraDinamico && this.existeColumnaReporteDinamico(EstructuraConstantesFunciones.LABEL_IDTIPOESTRUCTURA))) {
				row = sheet.createRow(iRow++);

				cell = row.createCell(0);
				cell.setCellValue(EstructuraConstantesFunciones.LABEL_IDTIPOESTRUCTURA);
				cell.setCellStyle(cellStyle);

				cell = row.createCell(1);
				cell.setCellValue(estructura.gettipoestructura_descripcion());


			}


			if(!paraDinamico || (paraDinamico && this.existeColumnaReporteDinamico(EstructuraConstantesFunciones.LABEL_IDPAIS))) {
				row = sheet.createRow(iRow++);

				cell = row.createCell(0);
				cell.setCellValue(EstructuraConstantesFunciones.LABEL_IDPAIS);
				cell.setCellStyle(cellStyle);

				cell = row.createCell(1);
				cell.setCellValue(estructura.getpais_descripcion());


			}


			if(!paraDinamico || (paraDinamico && this.existeColumnaReporteDinamico(EstructuraConstantesFunciones.LABEL_IDCIUDAD))) {
				row = sheet.createRow(iRow++);

				cell = row.createCell(0);
				cell.setCellValue(EstructuraConstantesFunciones.LABEL_IDCIUDAD);
				cell.setCellStyle(cellStyle);

				cell = row.createCell(1);
				cell.setCellValue(estructura.getciudad_descripcion());


			}


			if(!paraDinamico || (paraDinamico && this.existeColumnaReporteDinamico(EstructuraConstantesFunciones.LABEL_CODIGO))) {
				row = sheet.createRow(iRow++);

				cell = row.createCell(0);
				cell.setCellValue(EstructuraConstantesFunciones.LABEL_CODIGO);
				cell.setCellStyle(cellStyle);

				cell = row.createCell(1);
				cell.setCellValue(estructura.getcodigo());


			}


			if(!paraDinamico || (paraDinamico && this.existeColumnaReporteDinamico(EstructuraConstantesFunciones.LABEL_NUMERO))) {
				row = sheet.createRow(iRow++);

				cell = row.createCell(0);
				cell.setCellValue(EstructuraConstantesFunciones.LABEL_NUMERO);
				cell.setCellStyle(cellStyle);

				cell = row.createCell(1);
				cell.setCellValue(estructura.getnumero());


			}


			if(!paraDinamico || (paraDinamico && this.existeColumnaReporteDinamico(EstructuraConstantesFunciones.LABEL_VALORANTICIPO))) {
				row = sheet.createRow(iRow++);

				cell = row.createCell(0);
				cell.setCellValue(EstructuraConstantesFunciones.LABEL_VALORANTICIPO);
				cell.setCellStyle(cellStyle);

				cell = row.createCell(1);
				cell.setCellValue(estructura.getvalor_anticipo());


			}


			if(!paraDinamico || (paraDinamico && this.existeColumnaReporteDinamico(EstructuraConstantesFunciones.LABEL_PORCENTAJEANTICIPO))) {
				row = sheet.createRow(iRow++);

				cell = row.createCell(0);
				cell.setCellValue(EstructuraConstantesFunciones.LABEL_PORCENTAJEANTICIPO);
				cell.setCellStyle(cellStyle);

				cell = row.createCell(1);
				cell.setCellValue(estructura.getporcentaje_anticipo());


			}


			if(!paraDinamico || (paraDinamico && this.existeColumnaReporteDinamico(EstructuraConstantesFunciones.LABEL_NOMBRE))) {
				row = sheet.createRow(iRow++);

				cell = row.createCell(0);
				cell.setCellValue(EstructuraConstantesFunciones.LABEL_NOMBRE);
				cell.setCellStyle(cellStyle);

				cell = row.createCell(1);
				cell.setCellValue(estructura.getnombre());


			}


			if(!paraDinamico || (paraDinamico && this.existeColumnaReporteDinamico(EstructuraConstantesFunciones.LABEL_ESJEFE))) {
				row = sheet.createRow(iRow++);

				cell = row.createCell(0);
				cell.setCellValue(EstructuraConstantesFunciones.LABEL_ESJEFE);
				cell.setCellStyle(cellStyle);

				cell = row.createCell(1);
				cell.setCellValue(Funciones2.getDescripcionBoolean(estructura.getes_jefe()));


			}


			if(!paraDinamico || (paraDinamico && this.existeColumnaReporteDinamico(EstructuraConstantesFunciones.LABEL_ESANUAL))) {
				row = sheet.createRow(iRow++);

				cell = row.createCell(0);
				cell.setCellValue(EstructuraConstantesFunciones.LABEL_ESANUAL);
				cell.setCellStyle(cellStyle);

				cell = row.createCell(1);
				cell.setCellValue(Funciones2.getDescripcionBoolean(estructura.getes_anual()));


			}


			if(!paraDinamico || (paraDinamico && this.existeColumnaReporteDinamico(EstructuraConstantesFunciones.LABEL_PORCENTAJE))) {
				row = sheet.createRow(iRow++);

				cell = row.createCell(0);
				cell.setCellValue(EstructuraConstantesFunciones.LABEL_PORCENTAJE);
				cell.setCellStyle(cellStyle);

				cell = row.createCell(1);
				cell.setCellValue(estructura.getporcentaje());


			}


			if(!paraDinamico || (paraDinamico && this.existeColumnaReporteDinamico(EstructuraConstantesFunciones.LABEL_VALOR))) {
				row = sheet.createRow(iRow++);

				cell = row.createCell(0);
				cell.setCellValue(EstructuraConstantesFunciones.LABEL_VALOR);
				cell.setCellStyle(cellStyle);

				cell = row.createCell(1);
				cell.setCellValue(estructura.getvalor());


			}						
        }
        
		
        FileOutputStream fileOutputStream = new FileOutputStream(sPath);
		
        workbook.write(fileOutputStream);
		
        fileOutputStream.close();
		
		Constantes2.S_PATH_ULTIMO_ARCHIVO=sPath;
			
		if(this.parametroGeneralUsuario.getcon_mensaje_confirmacion() && !this.estructuraSessionBean.getEsGuardarRelacionado()) {//Constantes.ISMOSTRARMENSAJESMANTENIMIENTO && 
			JOptionPane.showMessageDialog(this,"EXPORTADO CORRECTAMENTE:"+sPath,"MANTENIMIENTO DE Estructura",JOptionPane.INFORMATION_MESSAGE);
		}
	}
	
	public void generarExcelReporteRelacionesEstructuras(String sAccionBusqueda,String sTipoArchivoReporte,List<Estructura> estructurasParaReportes,Boolean paraDinamico) throws Exception {
		
		ArrayList<Classe> classes=new ArrayList<Classe>();
		List<Estructura> estructurasRespaldo=null;
		
		classes=EstructuraConstantesFunciones.getClassesRelationshipsOfEstructura(new ArrayList<Classe>(),DeepLoadType.NONE,false);
					
		this.datosDeep=new DatosDeep();
		
		this.datosDeep.setIsDeep(false);
		this.datosDeep.setDeepLoadType(DeepLoadType.INCLUDE);
		this.datosDeep.setClases(classes);
			
		this.datosCliente.setDatosDeepParametros(false, DeepLoadType.INCLUDE, classes, "");
		this.datosCliente.setIsConDeep(true);	
		this.datosCliente.setIsConExportar(false);
		
						
		this.estructuraLogic.setDatosCliente(this.datosCliente);
		this.estructuraLogic.setDatosDeep(this.datosDeep);
		this.estructuraLogic.setIsConDeep(true);
		
		estructurasRespaldo=this.estructuraLogic.getEstructuras();
		
		this.estructuraLogic.setEstructuras(estructurasParaReportes);	
		this.estructuraLogic.deepLoadsWithConnection(false, DeepLoadType.INCLUDE, classes,"");
		
		estructurasParaReportes=this.estructuraLogic.getEstructuras();
		this.estructuraLogic.setEstructuras(estructurasRespaldo);
		
		
	 	Workbook workbook = null;
		String sPath=this.parametroGeneralUsuario.getpath_exportar()+"estructura_relacion";
		
		if(sTipoArchivoReporte=="EXCEL2") {
			workbook = new HSSFWorkbook();
			sPath+=".xls";
		
		} else if(sTipoArchivoReporte=="EXCEL2_2") {
			workbook = new XSSFWorkbook();
			sPath+=".xlsx";			
		}
		
		
		
		Sheet sheet = workbook.createSheet("Estructuras");
         
        int iRow = 0;
		int iRowLast = 0;
		int iCell = 0;
		Row row =null;
		Cell cell=null;
		
		row = sheet.createRow(iRow++);
		
		this.generarExcelReporteHeaderEstructura("NORMAL",row,workbook);
		
		int i=0;
		int i2=0;
		
		CellStyle cellStyleData = Funciones2.getStyleTitulo(workbook,"ZEBRA");
		CellStyle cellStyleDataTitulo = Funciones2.getStyleTitulo(workbook,"PRINCIPAL");
		CellStyle cellStyleDataZebra = Funciones2.getStyleTitulo(workbook,"ZEBRA");
		CellStyle cellStyleDataAux =null;
		CellStyle cellStyleDataAuxHijo =null;
		
		for(Estructura estructura : estructurasParaReportes) {			
			if(i!=0) {
				row = sheet.createRow(iRow++);				
				this.generarExcelReporteHeaderEstructura("NORMAL",row,workbook);
			}
			
			cellStyleDataAux=null;
			
			if(i%2==0) {
				//cellStyleDataAux=cellStyleData;
			}
			
			row = sheet.createRow(iRow++);						
			EstructuraConstantesFunciones.generarExcelReporteDataEstructura("NORMAL",row,workbook,estructura,cellStyleDataAux);
		
			
			


				//CentroCostoEstructura
			if(!paraDinamico || (paraDinamico && this.existeRelacionReporteDinamico(CentroCostoEstructuraConstantesFunciones.SCLASSWEBTITULO))) {

				if(estructura.getCentroCostoEstructuras()!=null && estructura.getCentroCostoEstructuras().size()>0) {
					row = sheet.createRow(iRow++);

					iCell=1;iRowLast=iRow-1; cell = row.createCell(iCell++);cell.setCellStyle(cellStyleDataTitulo);sheet.addMergedRegion(new CellRangeAddress(iRowLast,iRowLast,1,5));
					cell.setCellValue(CentroCostoEstructuraConstantesFunciones.SCLASSWEBTITULO);

					row = sheet.createRow(iRow++);
					CentroCostoEstructuraConstantesFunciones.generarExcelReporteHeaderCentroCostoEstructura("RELACIONADO",row,workbook);
				}

				if(estructura.getCentroCostoEstructuras()!=null) {
					i2=0;
					for(CentroCostoEstructura centrocostoestructura : estructura.getCentroCostoEstructuras()) {
						row = sheet.createRow(iRow++);

						cellStyleDataAuxHijo=null;
						if(i2%2==0) {
							cellStyleDataAuxHijo=cellStyleData;
						}

						CentroCostoEstructuraConstantesFunciones.generarExcelReporteDataCentroCostoEstructura("RELACIONADO",row,workbook,centrocostoestructura,cellStyleDataAuxHijo);
						i2++;
					}
				}
			}


				//PlaniVacacion
			if(!paraDinamico || (paraDinamico && this.existeRelacionReporteDinamico(PlaniVacacionConstantesFunciones.SCLASSWEBTITULO))) {

				if(estructura.getPlaniVacacionCargos()!=null && estructura.getPlaniVacacionCargos().size()>0) {
					row = sheet.createRow(iRow++);

					iCell=1;iRowLast=iRow-1; cell = row.createCell(iCell++);cell.setCellStyle(cellStyleDataTitulo);sheet.addMergedRegion(new CellRangeAddress(iRowLast,iRowLast,1,5));
					cell.setCellValue(PlaniVacacionConstantesFunciones.SCLASSWEBTITULO);

					row = sheet.createRow(iRow++);
					PlaniVacacionConstantesFunciones.generarExcelReporteHeaderPlaniVacacion("RELACIONADO",row,workbook);
				}

				if(estructura.getPlaniVacacionCargos()!=null) {
					i2=0;
					for(PlaniVacacion planivacacion : estructura.getPlaniVacacionCargos()) {
						row = sheet.createRow(iRow++);

						cellStyleDataAuxHijo=null;
						if(i2%2==0) {
							cellStyleDataAuxHijo=cellStyleData;
						}

						PlaniVacacionConstantesFunciones.generarExcelReporteDataPlaniVacacion("RELACIONADO",row,workbook,planivacacion,cellStyleDataAuxHijo);
						i2++;
					}
				}
			}


				//AsistenciaMensual
			if(!paraDinamico || (paraDinamico && this.existeRelacionReporteDinamico(AsistenciaMensualConstantesFunciones.SCLASSWEBTITULO))) {

				if(estructura.getAsistenciaMensuals()!=null && estructura.getAsistenciaMensuals().size()>0) {
					row = sheet.createRow(iRow++);

					iCell=1;iRowLast=iRow-1; cell = row.createCell(iCell++);cell.setCellStyle(cellStyleDataTitulo);sheet.addMergedRegion(new CellRangeAddress(iRowLast,iRowLast,1,5));
					cell.setCellValue(AsistenciaMensualConstantesFunciones.SCLASSWEBTITULO);

					row = sheet.createRow(iRow++);
					AsistenciaMensualConstantesFunciones.generarExcelReporteHeaderAsistenciaMensual("RELACIONADO",row,workbook);
				}

				if(estructura.getAsistenciaMensuals()!=null) {
					i2=0;
					for(AsistenciaMensual asistenciamensual : estructura.getAsistenciaMensuals()) {
						row = sheet.createRow(iRow++);

						cellStyleDataAuxHijo=null;
						if(i2%2==0) {
							cellStyleDataAuxHijo=cellStyleData;
						}

						AsistenciaMensualConstantesFunciones.generarExcelReporteDataAsistenciaMensual("RELACIONADO",row,workbook,asistenciamensual,cellStyleDataAuxHijo);
						i2++;
					}
				}
			}


				//EmpleadoProcesoRubro
			if(!paraDinamico || (paraDinamico && this.existeRelacionReporteDinamico(EmpleadoProcesoRubroConstantesFunciones.SCLASSWEBTITULO))) {

				if(estructura.getEmpleadoProcesoRubros()!=null && estructura.getEmpleadoProcesoRubros().size()>0) {
					row = sheet.createRow(iRow++);

					iCell=1;iRowLast=iRow-1; cell = row.createCell(iCell++);cell.setCellStyle(cellStyleDataTitulo);sheet.addMergedRegion(new CellRangeAddress(iRowLast,iRowLast,1,5));
					cell.setCellValue(EmpleadoProcesoRubroConstantesFunciones.SCLASSWEBTITULO);

					row = sheet.createRow(iRow++);
					EmpleadoProcesoRubroConstantesFunciones.generarExcelReporteHeaderEmpleadoProcesoRubro("RELACIONADO",row,workbook);
				}

				if(estructura.getEmpleadoProcesoRubros()!=null) {
					i2=0;
					for(EmpleadoProcesoRubro empleadoprocesorubro : estructura.getEmpleadoProcesoRubros()) {
						row = sheet.createRow(iRow++);

						cellStyleDataAuxHijo=null;
						if(i2%2==0) {
							cellStyleDataAuxHijo=cellStyleData;
						}

						EmpleadoProcesoRubroConstantesFunciones.generarExcelReporteDataEmpleadoProcesoRubro("RELACIONADO",row,workbook,empleadoprocesorubro,cellStyleDataAuxHijo);
						i2++;
					}
				}
			}


				//EmpleadoPagoRubro
			if(!paraDinamico || (paraDinamico && this.existeRelacionReporteDinamico(EmpleadoPagoRubroConstantesFunciones.SCLASSWEBTITULO))) {

				if(estructura.getEmpleadoPagoRubros()!=null && estructura.getEmpleadoPagoRubros().size()>0) {
					row = sheet.createRow(iRow++);

					iCell=1;iRowLast=iRow-1; cell = row.createCell(iCell++);cell.setCellStyle(cellStyleDataTitulo);sheet.addMergedRegion(new CellRangeAddress(iRowLast,iRowLast,1,5));
					cell.setCellValue(EmpleadoPagoRubroConstantesFunciones.SCLASSWEBTITULO);

					row = sheet.createRow(iRow++);
					EmpleadoPagoRubroConstantesFunciones.generarExcelReporteHeaderEmpleadoPagoRubro("RELACIONADO",row,workbook);
				}

				if(estructura.getEmpleadoPagoRubros()!=null) {
					i2=0;
					for(EmpleadoPagoRubro empleadopagorubro : estructura.getEmpleadoPagoRubros()) {
						row = sheet.createRow(iRow++);

						cellStyleDataAuxHijo=null;
						if(i2%2==0) {
							cellStyleDataAuxHijo=cellStyleData;
						}

						EmpleadoPagoRubroConstantesFunciones.generarExcelReporteDataEmpleadoPagoRubro("RELACIONADO",row,workbook,empleadopagorubro,cellStyleDataAuxHijo);
						i2++;
					}
				}
			}


				//ProvisionEmpleado
			if(!paraDinamico || (paraDinamico && this.existeRelacionReporteDinamico(ProvisionEmpleadoConstantesFunciones.SCLASSWEBTITULO))) {

				if(estructura.getProvisionEmpleados()!=null && estructura.getProvisionEmpleados().size()>0) {
					row = sheet.createRow(iRow++);

					iCell=1;iRowLast=iRow-1; cell = row.createCell(iCell++);cell.setCellStyle(cellStyleDataTitulo);sheet.addMergedRegion(new CellRangeAddress(iRowLast,iRowLast,1,5));
					cell.setCellValue(ProvisionEmpleadoConstantesFunciones.SCLASSWEBTITULO);

					row = sheet.createRow(iRow++);
					ProvisionEmpleadoConstantesFunciones.generarExcelReporteHeaderProvisionEmpleado("RELACIONADO",row,workbook);
				}

				if(estructura.getProvisionEmpleados()!=null) {
					i2=0;
					for(ProvisionEmpleado provisionempleado : estructura.getProvisionEmpleados()) {
						row = sheet.createRow(iRow++);

						cellStyleDataAuxHijo=null;
						if(i2%2==0) {
							cellStyleDataAuxHijo=cellStyleData;
						}

						ProvisionEmpleadoConstantesFunciones.generarExcelReporteDataProvisionEmpleado("RELACIONADO",row,workbook,provisionempleado,cellStyleDataAuxHijo);
						i2++;
					}
				}
			}


				//Empleado
			if(!paraDinamico || (paraDinamico && this.existeRelacionReporteDinamico(EmpleadoConstantesFunciones.SCLASSWEBTITULO))) {

				if(estructura.getEmpleados()!=null && estructura.getEmpleados().size()>0) {
					row = sheet.createRow(iRow++);

					iCell=1;iRowLast=iRow-1; cell = row.createCell(iCell++);cell.setCellStyle(cellStyleDataTitulo);sheet.addMergedRegion(new CellRangeAddress(iRowLast,iRowLast,1,5));
					cell.setCellValue(EmpleadoConstantesFunciones.SCLASSWEBTITULO);

					row = sheet.createRow(iRow++);
					EmpleadoConstantesFunciones.generarExcelReporteHeaderEmpleado("RELACIONADO",row,workbook);
				}

				if(estructura.getEmpleados()!=null) {
					i2=0;
					for(Empleado empleado : estructura.getEmpleados()) {
						row = sheet.createRow(iRow++);

						cellStyleDataAuxHijo=null;
						if(i2%2==0) {
							cellStyleDataAuxHijo=cellStyleData;
						}

						EmpleadoConstantesFunciones.generarExcelReporteDataEmpleado("RELACIONADO",row,workbook,empleado,cellStyleDataAuxHijo);
						i2++;
					}
				}
			}


				//Estructura
			if(!paraDinamico || (paraDinamico && this.existeRelacionReporteDinamico(EstructuraConstantesFunciones.SCLASSWEBTITULO))) {

				if(estructura.getEstructuras()!=null && estructura.getEstructuras().size()>0) {
					row = sheet.createRow(iRow++);

					iCell=1;iRowLast=iRow-1; cell = row.createCell(iCell++);cell.setCellStyle(cellStyleDataTitulo);sheet.addMergedRegion(new CellRangeAddress(iRowLast,iRowLast,1,5));
					cell.setCellValue(EstructuraConstantesFunciones.SCLASSWEBTITULO);

					row = sheet.createRow(iRow++);
					EstructuraConstantesFunciones.generarExcelReporteHeaderEstructura("RELACIONADO",row,workbook);
				}

				if(estructura.getEstructuras()!=null) {
					i2=0;
					for(Estructura estructuraAutoRef : estructura.getEstructuras()) {
						row = sheet.createRow(iRow++);

						cellStyleDataAuxHijo=null;
						if(i2%2==0) {
							cellStyleDataAuxHijo=cellStyleData;
						}

						EstructuraConstantesFunciones.generarExcelReporteDataEstructura("RELACIONADO",row,workbook,estructuraAutoRef,cellStyleDataAuxHijo);
						i2++;
					}
				}
			}


				//EvaluacionEmpleado
			if(!paraDinamico || (paraDinamico && this.existeRelacionReporteDinamico(EvaluacionEmpleadoConstantesFunciones.SCLASSWEBTITULO))) {

				if(estructura.getEvaluacionEmpleados()!=null && estructura.getEvaluacionEmpleados().size()>0) {
					row = sheet.createRow(iRow++);

					iCell=1;iRowLast=iRow-1; cell = row.createCell(iCell++);cell.setCellStyle(cellStyleDataTitulo);sheet.addMergedRegion(new CellRangeAddress(iRowLast,iRowLast,1,5));
					cell.setCellValue(EvaluacionEmpleadoConstantesFunciones.SCLASSWEBTITULO);

					row = sheet.createRow(iRow++);
					EvaluacionEmpleadoConstantesFunciones.generarExcelReporteHeaderEvaluacionEmpleado("RELACIONADO",row,workbook);
				}

				if(estructura.getEvaluacionEmpleados()!=null) {
					i2=0;
					for(EvaluacionEmpleado evaluacionempleado : estructura.getEvaluacionEmpleados()) {
						row = sheet.createRow(iRow++);

						cellStyleDataAuxHijo=null;
						if(i2%2==0) {
							cellStyleDataAuxHijo=cellStyleData;
						}

						EvaluacionEmpleadoConstantesFunciones.generarExcelReporteDataEvaluacionEmpleado("RELACIONADO",row,workbook,evaluacionempleado,cellStyleDataAuxHijo);
						i2++;
					}
				}
			}


				//EmpleadoImpuestoRenta
			if(!paraDinamico || (paraDinamico && this.existeRelacionReporteDinamico(EmpleadoImpuestoRentaConstantesFunciones.SCLASSWEBTITULO))) {

				if(estructura.getEmpleadoImpuestoRentas()!=null && estructura.getEmpleadoImpuestoRentas().size()>0) {
					row = sheet.createRow(iRow++);

					iCell=1;iRowLast=iRow-1; cell = row.createCell(iCell++);cell.setCellStyle(cellStyleDataTitulo);sheet.addMergedRegion(new CellRangeAddress(iRowLast,iRowLast,1,5));
					cell.setCellValue(EmpleadoImpuestoRentaConstantesFunciones.SCLASSWEBTITULO);

					row = sheet.createRow(iRow++);
					EmpleadoImpuestoRentaConstantesFunciones.generarExcelReporteHeaderEmpleadoImpuestoRenta("RELACIONADO",row,workbook);
				}

				if(estructura.getEmpleadoImpuestoRentas()!=null) {
					i2=0;
					for(EmpleadoImpuestoRenta empleadoimpuestorenta : estructura.getEmpleadoImpuestoRentas()) {
						row = sheet.createRow(iRow++);

						cellStyleDataAuxHijo=null;
						if(i2%2==0) {
							cellStyleDataAuxHijo=cellStyleData;
						}

						EmpleadoImpuestoRentaConstantesFunciones.generarExcelReporteDataEmpleadoImpuestoRenta("RELACIONADO",row,workbook,empleadoimpuestorenta,cellStyleDataAuxHijo);
						i2++;
					}
				}
			}


				//RubroEstructura
			if(!paraDinamico || (paraDinamico && this.existeRelacionReporteDinamico(RubroEstructuraConstantesFunciones.SCLASSWEBTITULO))) {

				if(estructura.getRubroEstructuras()!=null && estructura.getRubroEstructuras().size()>0) {
					row = sheet.createRow(iRow++);

					iCell=1;iRowLast=iRow-1; cell = row.createCell(iCell++);cell.setCellStyle(cellStyleDataTitulo);sheet.addMergedRegion(new CellRangeAddress(iRowLast,iRowLast,1,5));
					cell.setCellValue(RubroEstructuraConstantesFunciones.SCLASSWEBTITULO);

					row = sheet.createRow(iRow++);
					RubroEstructuraConstantesFunciones.generarExcelReporteHeaderRubroEstructura("RELACIONADO",row,workbook);
				}

				if(estructura.getRubroEstructuras()!=null) {
					i2=0;
					for(RubroEstructura rubroestructura : estructura.getRubroEstructuras()) {
						row = sheet.createRow(iRow++);

						cellStyleDataAuxHijo=null;
						if(i2%2==0) {
							cellStyleDataAuxHijo=cellStyleData;
						}

						RubroEstructuraConstantesFunciones.generarExcelReporteDataRubroEstructura("RELACIONADO",row,workbook,rubroestructura,cellStyleDataAuxHijo);
						i2++;
					}
				}
			}


				//CierreRolMensual
			if(!paraDinamico || (paraDinamico && this.existeRelacionReporteDinamico(CierreRolMensualConstantesFunciones.SCLASSWEBTITULO))) {

				if(estructura.getCierreRolMensuals()!=null && estructura.getCierreRolMensuals().size()>0) {
					row = sheet.createRow(iRow++);

					iCell=1;iRowLast=iRow-1; cell = row.createCell(iCell++);cell.setCellStyle(cellStyleDataTitulo);sheet.addMergedRegion(new CellRangeAddress(iRowLast,iRowLast,1,5));
					cell.setCellValue(CierreRolMensualConstantesFunciones.SCLASSWEBTITULO);

					row = sheet.createRow(iRow++);
					CierreRolMensualConstantesFunciones.generarExcelReporteHeaderCierreRolMensual("RELACIONADO",row,workbook);
				}

				if(estructura.getCierreRolMensuals()!=null) {
					i2=0;
					for(CierreRolMensual cierrerolmensual : estructura.getCierreRolMensuals()) {
						row = sheet.createRow(iRow++);

						cellStyleDataAuxHijo=null;
						if(i2%2==0) {
							cellStyleDataAuxHijo=cellStyleData;
						}

						CierreRolMensualConstantesFunciones.generarExcelReporteDataCierreRolMensual("RELACIONADO",row,workbook,cierrerolmensual,cellStyleDataAuxHijo);
						i2++;
					}
				}
			}


				//FormatoNomi
			if(!paraDinamico || (paraDinamico && this.existeRelacionReporteDinamico(FormatoNomiConstantesFunciones.SCLASSWEBTITULO))) {

				if(estructura.getFormatoNomis()!=null && estructura.getFormatoNomis().size()>0) {
					row = sheet.createRow(iRow++);

					iCell=1;iRowLast=iRow-1; cell = row.createCell(iCell++);cell.setCellStyle(cellStyleDataTitulo);sheet.addMergedRegion(new CellRangeAddress(iRowLast,iRowLast,1,5));
					cell.setCellValue(FormatoNomiConstantesFunciones.SCLASSWEBTITULO);

					row = sheet.createRow(iRow++);
					FormatoNomiConstantesFunciones.generarExcelReporteHeaderFormatoNomi("RELACIONADO",row,workbook);
				}

				if(estructura.getFormatoNomis()!=null) {
					i2=0;
					for(FormatoNomi formatonomi : estructura.getFormatoNomis()) {
						row = sheet.createRow(iRow++);

						cellStyleDataAuxHijo=null;
						if(i2%2==0) {
							cellStyleDataAuxHijo=cellStyleData;
						}

						FormatoNomiConstantesFunciones.generarExcelReporteDataFormatoNomi("RELACIONADO",row,workbook,formatonomi,cellStyleDataAuxHijo);
						i2++;
					}
				}
			}


				//EmpleadoEstructura
			if(!paraDinamico || (paraDinamico && this.existeRelacionReporteDinamico(EmpleadoEstructuraConstantesFunciones.SCLASSWEBTITULO))) {

				if(estructura.getEmpleadoEstructuras()!=null && estructura.getEmpleadoEstructuras().size()>0) {
					row = sheet.createRow(iRow++);

					iCell=1;iRowLast=iRow-1; cell = row.createCell(iCell++);cell.setCellStyle(cellStyleDataTitulo);sheet.addMergedRegion(new CellRangeAddress(iRowLast,iRowLast,1,5));
					cell.setCellValue(EmpleadoEstructuraConstantesFunciones.SCLASSWEBTITULO);

					row = sheet.createRow(iRow++);
					EmpleadoEstructuraConstantesFunciones.generarExcelReporteHeaderEmpleadoEstructura("RELACIONADO",row,workbook);
				}

				if(estructura.getEmpleadoEstructuras()!=null) {
					i2=0;
					for(EmpleadoEstructura empleadoestructura : estructura.getEmpleadoEstructuras()) {
						row = sheet.createRow(iRow++);

						cellStyleDataAuxHijo=null;
						if(i2%2==0) {
							cellStyleDataAuxHijo=cellStyleData;
						}

						EmpleadoEstructuraConstantesFunciones.generarExcelReporteDataEmpleadoEstructura("RELACIONADO",row,workbook,empleadoestructura,cellStyleDataAuxHijo);
						i2++;
					}
				}
			}


				//HistorialPagoNomi
			if(!paraDinamico || (paraDinamico && this.existeRelacionReporteDinamico(HistorialPagoNomiConstantesFunciones.SCLASSWEBTITULO))) {

				if(estructura.getHistorialPagoNomis()!=null && estructura.getHistorialPagoNomis().size()>0) {
					row = sheet.createRow(iRow++);

					iCell=1;iRowLast=iRow-1; cell = row.createCell(iCell++);cell.setCellStyle(cellStyleDataTitulo);sheet.addMergedRegion(new CellRangeAddress(iRowLast,iRowLast,1,5));
					cell.setCellValue(HistorialPagoNomiConstantesFunciones.SCLASSWEBTITULO);

					row = sheet.createRow(iRow++);
					HistorialPagoNomiConstantesFunciones.generarExcelReporteHeaderHistorialPagoNomi("RELACIONADO",row,workbook);
				}

				if(estructura.getHistorialPagoNomis()!=null) {
					i2=0;
					for(HistorialPagoNomi historialpagonomi : estructura.getHistorialPagoNomis()) {
						row = sheet.createRow(iRow++);

						cellStyleDataAuxHijo=null;
						if(i2%2==0) {
							cellStyleDataAuxHijo=cellStyleData;
						}

						HistorialPagoNomiConstantesFunciones.generarExcelReporteDataHistorialPagoNomi("RELACIONADO",row,workbook,historialpagonomi,cellStyleDataAuxHijo);
						i2++;
					}
				}
			}


				//AsistenciaDiaria
			if(!paraDinamico || (paraDinamico && this.existeRelacionReporteDinamico(AsistenciaDiariaConstantesFunciones.SCLASSWEBTITULO))) {

				if(estructura.getAsistenciaDiarias()!=null && estructura.getAsistenciaDiarias().size()>0) {
					row = sheet.createRow(iRow++);

					iCell=1;iRowLast=iRow-1; cell = row.createCell(iCell++);cell.setCellStyle(cellStyleDataTitulo);sheet.addMergedRegion(new CellRangeAddress(iRowLast,iRowLast,1,5));
					cell.setCellValue(AsistenciaDiariaConstantesFunciones.SCLASSWEBTITULO);

					row = sheet.createRow(iRow++);
					AsistenciaDiariaConstantesFunciones.generarExcelReporteHeaderAsistenciaDiaria("RELACIONADO",row,workbook);
				}

				if(estructura.getAsistenciaDiarias()!=null) {
					i2=0;
					for(AsistenciaDiaria asistenciadiaria : estructura.getAsistenciaDiarias()) {
						row = sheet.createRow(iRow++);

						cellStyleDataAuxHijo=null;
						if(i2%2==0) {
							cellStyleDataAuxHijo=cellStyleData;
						}

						AsistenciaDiariaConstantesFunciones.generarExcelReporteDataAsistenciaDiaria("RELACIONADO",row,workbook,asistenciadiaria,cellStyleDataAuxHijo);
						i2++;
					}
				}
			}


				//FuncionEstruc
			if(!paraDinamico || (paraDinamico && this.existeRelacionReporteDinamico(FuncionEstrucConstantesFunciones.SCLASSWEBTITULO))) {

				if(estructura.getFuncionEstrucs()!=null && estructura.getFuncionEstrucs().size()>0) {
					row = sheet.createRow(iRow++);

					iCell=1;iRowLast=iRow-1; cell = row.createCell(iCell++);cell.setCellStyle(cellStyleDataTitulo);sheet.addMergedRegion(new CellRangeAddress(iRowLast,iRowLast,1,5));
					cell.setCellValue(FuncionEstrucConstantesFunciones.SCLASSWEBTITULO);

					row = sheet.createRow(iRow++);
					FuncionEstrucConstantesFunciones.generarExcelReporteHeaderFuncionEstruc("RELACIONADO",row,workbook);
				}

				if(estructura.getFuncionEstrucs()!=null) {
					i2=0;
					for(FuncionEstruc funcionestruc : estructura.getFuncionEstrucs()) {
						row = sheet.createRow(iRow++);

						cellStyleDataAuxHijo=null;
						if(i2%2==0) {
							cellStyleDataAuxHijo=cellStyleData;
						}

						FuncionEstrucConstantesFunciones.generarExcelReporteDataFuncionEstruc("RELACIONADO",row,workbook,funcionestruc,cellStyleDataAuxHijo);
						i2++;
					}
				}
			}


				//SolicitudReemplazo
			if(!paraDinamico || (paraDinamico && this.existeRelacionReporteDinamico(SolicitudReemplazoConstantesFunciones.SCLASSWEBTITULO))) {

				if(estructura.getSolicitudReemplazos()!=null && estructura.getSolicitudReemplazos().size()>0) {
					row = sheet.createRow(iRow++);

					iCell=1;iRowLast=iRow-1; cell = row.createCell(iCell++);cell.setCellStyle(cellStyleDataTitulo);sheet.addMergedRegion(new CellRangeAddress(iRowLast,iRowLast,1,5));
					cell.setCellValue(SolicitudReemplazoConstantesFunciones.SCLASSWEBTITULO);

					row = sheet.createRow(iRow++);
					SolicitudReemplazoConstantesFunciones.generarExcelReporteHeaderSolicitudReemplazo("RELACIONADO",row,workbook);
				}

				if(estructura.getSolicitudReemplazos()!=null) {
					i2=0;
					for(SolicitudReemplazo solicitudreemplazo : estructura.getSolicitudReemplazos()) {
						row = sheet.createRow(iRow++);

						cellStyleDataAuxHijo=null;
						if(i2%2==0) {
							cellStyleDataAuxHijo=cellStyleData;
						}

						SolicitudReemplazoConstantesFunciones.generarExcelReporteDataSolicitudReemplazo("RELACIONADO",row,workbook,solicitudreemplazo,cellStyleDataAuxHijo);
						i2++;
					}
				}
			}


				//SolicitudHoraExtra
			if(!paraDinamico || (paraDinamico && this.existeRelacionReporteDinamico(SolicitudHoraExtraConstantesFunciones.SCLASSWEBTITULO))) {

				if(estructura.getSolicitudHoraExtras()!=null && estructura.getSolicitudHoraExtras().size()>0) {
					row = sheet.createRow(iRow++);

					iCell=1;iRowLast=iRow-1; cell = row.createCell(iCell++);cell.setCellStyle(cellStyleDataTitulo);sheet.addMergedRegion(new CellRangeAddress(iRowLast,iRowLast,1,5));
					cell.setCellValue(SolicitudHoraExtraConstantesFunciones.SCLASSWEBTITULO);

					row = sheet.createRow(iRow++);
					SolicitudHoraExtraConstantesFunciones.generarExcelReporteHeaderSolicitudHoraExtra("RELACIONADO",row,workbook);
				}

				if(estructura.getSolicitudHoraExtras()!=null) {
					i2=0;
					for(SolicitudHoraExtra solicitudhoraextra : estructura.getSolicitudHoraExtras()) {
						row = sheet.createRow(iRow++);

						cellStyleDataAuxHijo=null;
						if(i2%2==0) {
							cellStyleDataAuxHijo=cellStyleData;
						}

						SolicitudHoraExtraConstantesFunciones.generarExcelReporteDataSolicitudHoraExtra("RELACIONADO",row,workbook,solicitudhoraextra,cellStyleDataAuxHijo);
						i2++;
					}
				}
			}


				//EvaluacionNomi
			if(!paraDinamico || (paraDinamico && this.existeRelacionReporteDinamico(EvaluacionNomiConstantesFunciones.SCLASSWEBTITULO))) {

				if(estructura.getEvaluacionNomis()!=null && estructura.getEvaluacionNomis().size()>0) {
					row = sheet.createRow(iRow++);

					iCell=1;iRowLast=iRow-1; cell = row.createCell(iCell++);cell.setCellStyle(cellStyleDataTitulo);sheet.addMergedRegion(new CellRangeAddress(iRowLast,iRowLast,1,5));
					cell.setCellValue(EvaluacionNomiConstantesFunciones.SCLASSWEBTITULO);

					row = sheet.createRow(iRow++);
					EvaluacionNomiConstantesFunciones.generarExcelReporteHeaderEvaluacionNomi("RELACIONADO",row,workbook);
				}

				if(estructura.getEvaluacionNomis()!=null) {
					i2=0;
					for(EvaluacionNomi evaluacionnomi : estructura.getEvaluacionNomis()) {
						row = sheet.createRow(iRow++);

						cellStyleDataAuxHijo=null;
						if(i2%2==0) {
							cellStyleDataAuxHijo=cellStyleData;
						}

						EvaluacionNomiConstantesFunciones.generarExcelReporteDataEvaluacionNomi("RELACIONADO",row,workbook,evaluacionnomi,cellStyleDataAuxHijo);
						i2++;
					}
				}
			}


				//SolicitudVacacion
			if(!paraDinamico || (paraDinamico && this.existeRelacionReporteDinamico(SolicitudVacacionConstantesFunciones.SCLASSWEBTITULO))) {

				if(estructura.getSolicitudVacacions()!=null && estructura.getSolicitudVacacions().size()>0) {
					row = sheet.createRow(iRow++);

					iCell=1;iRowLast=iRow-1; cell = row.createCell(iCell++);cell.setCellStyle(cellStyleDataTitulo);sheet.addMergedRegion(new CellRangeAddress(iRowLast,iRowLast,1,5));
					cell.setCellValue(SolicitudVacacionConstantesFunciones.SCLASSWEBTITULO);

					row = sheet.createRow(iRow++);
					SolicitudVacacionConstantesFunciones.generarExcelReporteHeaderSolicitudVacacion("RELACIONADO",row,workbook);
				}

				if(estructura.getSolicitudVacacions()!=null) {
					i2=0;
					for(SolicitudVacacion solicitudvacacion : estructura.getSolicitudVacacions()) {
						row = sheet.createRow(iRow++);

						cellStyleDataAuxHijo=null;
						if(i2%2==0) {
							cellStyleDataAuxHijo=cellStyleData;
						}

						SolicitudVacacionConstantesFunciones.generarExcelReporteDataSolicitudVacacion("RELACIONADO",row,workbook,solicitudvacacion,cellStyleDataAuxHijo);
						i2++;
					}
				}
			}


				//ResponsableActivoFijo
			if(!paraDinamico || (paraDinamico && this.existeRelacionReporteDinamico(ResponsableActivoFijoConstantesFunciones.SCLASSWEBTITULO))) {

				if(estructura.getResponsableActivoFijos()!=null && estructura.getResponsableActivoFijos().size()>0) {
					row = sheet.createRow(iRow++);

					iCell=1;iRowLast=iRow-1; cell = row.createCell(iCell++);cell.setCellStyle(cellStyleDataTitulo);sheet.addMergedRegion(new CellRangeAddress(iRowLast,iRowLast,1,5));
					cell.setCellValue(ResponsableActivoFijoConstantesFunciones.SCLASSWEBTITULO);

					row = sheet.createRow(iRow++);
					ResponsableActivoFijoConstantesFunciones.generarExcelReporteHeaderResponsableActivoFijo("RELACIONADO",row,workbook);
				}

				if(estructura.getResponsableActivoFijos()!=null) {
					i2=0;
					for(ResponsableActivoFijo responsableactivofijo : estructura.getResponsableActivoFijos()) {
						row = sheet.createRow(iRow++);

						cellStyleDataAuxHijo=null;
						if(i2%2==0) {
							cellStyleDataAuxHijo=cellStyleData;
						}

						ResponsableActivoFijoConstantesFunciones.generarExcelReporteDataResponsableActivoFijo("RELACIONADO",row,workbook,responsableactivofijo,cellStyleDataAuxHijo);
						i2++;
					}
				}
			}


				//RubroEmpleaCuentaContable
			if(!paraDinamico || (paraDinamico && this.existeRelacionReporteDinamico(RubroEmpleaCuentaContableConstantesFunciones.SCLASSWEBTITULO))) {

				if(estructura.getRubroEmpleaCuentaContables()!=null && estructura.getRubroEmpleaCuentaContables().size()>0) {
					row = sheet.createRow(iRow++);

					iCell=1;iRowLast=iRow-1; cell = row.createCell(iCell++);cell.setCellStyle(cellStyleDataTitulo);sheet.addMergedRegion(new CellRangeAddress(iRowLast,iRowLast,1,5));
					cell.setCellValue(RubroEmpleaCuentaContableConstantesFunciones.SCLASSWEBTITULO);

					row = sheet.createRow(iRow++);
					RubroEmpleaCuentaContableConstantesFunciones.generarExcelReporteHeaderRubroEmpleaCuentaContable("RELACIONADO",row,workbook);
				}

				if(estructura.getRubroEmpleaCuentaContables()!=null) {
					i2=0;
					for(RubroEmpleaCuentaContable rubroempleacuentacontable : estructura.getRubroEmpleaCuentaContables()) {
						row = sheet.createRow(iRow++);

						cellStyleDataAuxHijo=null;
						if(i2%2==0) {
							cellStyleDataAuxHijo=cellStyleData;
						}

						RubroEmpleaCuentaContableConstantesFunciones.generarExcelReporteDataRubroEmpleaCuentaContable("RELACIONADO",row,workbook,rubroempleacuentacontable,cellStyleDataAuxHijo);
						i2++;
					}
				}
			}
			
			i++;
        }
        
		/*
		row = sheet.createRow(iRow++);
		iRowLast=iRow - 1;
			
		cell = row.createCell(0);
		cell.setCellValue(EstructuraConstantesFunciones.getEstructuraDescripcion(estructura));
		cell.setCellStyle(cellStyleTitulo);
			
		sheet.addMergedRegion(new CellRangeAddress(iRowLast,iRowLast,0,2));			
		*/
		
			
		
        FileOutputStream fileOutputStream = new FileOutputStream(sPath);
		
        workbook.write(fileOutputStream);
		
        fileOutputStream.close();
		
		Constantes2.S_PATH_ULTIMO_ARCHIVO=sPath;
			
		if(this.parametroGeneralUsuario.getcon_mensaje_confirmacion() && !this.estructuraSessionBean.getEsGuardarRelacionado()) {//Constantes.ISMOSTRARMENSAJESMANTENIMIENTO && 
			JOptionPane.showMessageDialog(this,"EXPORTADO CORRECTAMENTE:"+sPath,"MANTENIMIENTO DE Estructura",JOptionPane.INFORMATION_MESSAGE);
		}
	}
	
	
	public Boolean existeColumnaReporteDinamico(String sColumna) {
		Boolean existe=false;
		
		Reporte reporte=new Reporte();
		
		
		for(int index:this.jInternalFrameReporteDinamicoEstructura.getjListColumnasSelectReporte().getSelectedIndices()) {
			reporte=(Reporte)this.jInternalFrameReporteDinamicoEstructura.getjListColumnasSelectReporte().getModel().getElementAt(index);
			
			if(sColumna.equals(reporte.getsCodigo())) {
				existe=true;
				break;
			}
		
		}
		
		
		return existe;
	}
	
	public Boolean existeRelacionReporteDinamico(String sColumna) {
		Boolean existe=false;
		
		Reporte reporte=new Reporte();
		
		
		for(int index:this.jInternalFrameReporteDinamicoEstructura.getjListRelacionesSelectReporte().getSelectedIndices()) {
			reporte=(Reporte)this.jInternalFrameReporteDinamicoEstructura.getjListRelacionesSelectReporte().getModel().getElementAt(index);
			
			if(sColumna.equals(reporte.getsCodigo())) {
				existe=true;
				break;
			}
		
		}
		
		
		return existe;
	}
	
	public void startProcessEstructura() throws Exception {		
		this.startProcessEstructura(true);
	}
	
	public void startProcessEstructura(Boolean conSplash) throws Exception {		
		//FuncionesSwing.enableDisablePanels(false,this.jTabbedPaneBusquedasEstructura ,this.jPanelParametrosReportesEstructura, this.jScrollPanelDatosEstructura,this.jPanelPaginacionEstructura, this.jScrollPanelDatosEdicionEstructura, this.jPanelAccionesEstructura,this.jPanelAccionesFormularioEstructura,this.jmenuBarEstructura,this.jmenuBarDetalleEstructura,this.jTtoolBarEstructura,this.jTtoolBarDetalleEstructura);		
		
		final JTabbedPane jTabbedPaneBusquedasEstructura=this.jTabbedPaneBusquedasEstructura; 
		
		final JPanel jPanelParametrosReportesEstructura=this.jPanelParametrosReportesEstructura;
		//final JScrollPane jScrollPanelDatosEstructura=this.jScrollPanelDatosEstructura;
		final JTable jTableDatosEstructura=this.jTableDatosEstructura;		
		final JPanel jPanelPaginacionEstructura=this.jPanelPaginacionEstructura;
		//final JScrollPane jScrollPanelDatosEdicionEstructura=this.jScrollPanelDatosEdicionEstructura;
		final JPanel jPanelAccionesEstructura=this.jPanelAccionesEstructura;
		
		JPanel jPanelCamposAuxiliarEstructura=new JPanelMe();
		JPanel jPanelAccionesFormularioAuxiliarEstructura=new JPanelMe();
		
		if(this.jInternalFrameDetalleFormEstructura!=null) {
			jPanelCamposAuxiliarEstructura=this.jInternalFrameDetalleFormEstructura.jPanelCamposEstructura;
			jPanelAccionesFormularioAuxiliarEstructura=this.jInternalFrameDetalleFormEstructura.jPanelAccionesFormularioEstructura;
		}
		
		final JPanel jPanelCamposEstructura=jPanelCamposAuxiliarEstructura;
		final JPanel jPanelAccionesFormularioEstructura=jPanelAccionesFormularioAuxiliarEstructura;
		
		
		final JMenuBar jmenuBarEstructura=this.jmenuBarEstructura;
		final JToolBar jTtoolBarEstructura=this.jTtoolBarEstructura;		
		
		
		JMenuBar jmenuBarDetalleAuxiliarEstructura=new JMenuBar();
		JToolBar jTtoolBarDetalleAuxiliarEstructura=new JToolBar();		
		
		if(this.jInternalFrameDetalleFormEstructura!=null) {
			jmenuBarDetalleAuxiliarEstructura=this.jInternalFrameDetalleFormEstructura.jmenuBarDetalleEstructura;
			jTtoolBarDetalleAuxiliarEstructura=this.jInternalFrameDetalleFormEstructura.jTtoolBarDetalleEstructura;
		}
		
		final JMenuBar jmenuBarDetalleEstructura=jmenuBarDetalleAuxiliarEstructura;
		final JToolBar jTtoolBarDetalleEstructura=jTtoolBarDetalleAuxiliarEstructura;		
		
		
		
		
		
		if(Constantes2.CON_PROCESO_HILO) {
			Thread threadRunnableProcess;
			ProcessRunnable processRunnable;
			
			processRunnable=new ProcessRunnable();
			
			processRunnable.setsTipo("START");
			processRunnable.setDesktop(jDesktopPane);
			processRunnable.setModuloActual(moduloActual);
			processRunnable.setModuloUsuarioSeleccionado(moduloActual);
			processRunnable.setOpcionActual(opcionActual);
			processRunnable.setParametroGeneralSg(parametroGeneralSg);
			processRunnable.setParametroGeneralUsuario(parametroGeneralUsuario);
			processRunnable.setResumenUsuarioActual(resumenUsuarioActual);
			processRunnable.setUsuarioActual(usuarioActual);
			
			processRunnable.jTabbedPaneBusquedas=jTabbedPaneBusquedasEstructura;
			processRunnable.jPanelParametrosReportes=jPanelParametrosReportesEstructura;
			processRunnable.jTableDatos=jTableDatosEstructura;
			processRunnable.jPanelCampos=jPanelCamposEstructura;
			processRunnable.jPanelPaginacion=jPanelPaginacionEstructura;
			processRunnable.jPanelAcciones=jPanelAccionesEstructura;
			processRunnable.jPanelAccionesFormulario=jPanelAccionesFormularioEstructura;
			
			
			processRunnable.jmenuBar=jmenuBarEstructura;
			processRunnable.jmenuBarDetalle=jmenuBarDetalleEstructura;
			processRunnable.jTtoolBar=jTtoolBarEstructura;
			processRunnable.jTtoolBarDetalle=jTtoolBarDetalleEstructura;
			processRunnable.jInternalFrameBase=this;
			
			//processRunnable.CargarObjetosRendimientoCriticoModuloInventario();
			
			
			threadRunnableProcess=new Thread(processRunnable);//.start();
					
			threadRunnableProcess.start();
			
		} else {
			FuncionesSwing.enableDisablePanels(false,jTabbedPaneBusquedasEstructura ,jPanelParametrosReportesEstructura,jTableDatosEstructura, /*jScrollPanelDatosEstructura,*/jPanelCamposEstructura,jPanelPaginacionEstructura, /*jScrollPanelDatosEdicionEstructura,*/ jPanelAccionesEstructura,jPanelAccionesFormularioEstructura,jmenuBarEstructura,jmenuBarDetalleEstructura,jTtoolBarEstructura,jTtoolBarDetalleEstructura);
		
			startProcess();//this.
		}
						
		/*
		if(conSplash) {
			SwingUtilities.invokeLater(new Runnable() {
			      public void run() {
			    	  try {
							FuncionesSwing.enableDisablePanels(false,jTabbedPaneBusquedasEstructura ,jPanelParametrosReportesEstructura, jScrollPanelDatosEstructura,jPanelPaginacionEstructura, jScrollPanelDatosEdicionEstructura, jPanelAccionesEstructura,jPanelAccionesFormularioEstructura,jmenuBarEstructura,jmenuBarDetalleEstructura,jTtoolBarEstructura,jTtoolBarDetalleEstructura);
						
							startProcess();//this.
							
						} catch (Exception e) {
							// TODO Auto-generated catch block
							e.printStackTrace();
						}
			      }
			});
		}
		*/
	}
	
	public void finishProcessEstructura() {// throws Exception 
		this.finishProcessEstructura(true);
	}
	
	public void finishProcessEstructura(Boolean conSplash) {// throws Exception 
		//FuncionesSwing.enableDisablePanels(true,this.jTabbedPaneBusquedasEstructura ,this.jPanelParametrosReportesEstructura, this.jScrollPanelDatosEstructura,this.jPanelPaginacionEstructura, this.jScrollPanelDatosEdicionEstructura, this.jPanelAccionesEstructura,this.jPanelAccionesFormularioEstructura,this.jmenuBarEstructura,this.jmenuBarDetalleEstructura,this.jTtoolBarEstructura,this.jTtoolBarDetalleEstructura);		
		
		final JTabbedPane jTabbedPaneBusquedasEstructura=this.jTabbedPaneBusquedasEstructura; 
		
		final JPanel jPanelParametrosReportesEstructura=this.jPanelParametrosReportesEstructura;
		//final JScrollPane jScrollPanelDatosEstructura=this.jScrollPanelDatosEstructura;
		final JTable jTableDatosEstructura=this.jTableDatosEstructura;		
		final JPanel jPanelPaginacionEstructura=this.jPanelPaginacionEstructura;
		//final JScrollPane jScrollPanelDatosEdicionEstructura=this.jScrollPanelDatosEdicionEstructura;
		final JPanel jPanelAccionesEstructura=this.jPanelAccionesEstructura;
		
		JPanel jPanelCamposAuxiliarEstructura=new JPanel();
		JPanel jPanelAccionesFormularioAuxiliarEstructura=new JPanel();
		
		if(this.jInternalFrameDetalleFormEstructura!=null) {
			jPanelCamposAuxiliarEstructura=this.jInternalFrameDetalleFormEstructura.jPanelCamposEstructura;
			jPanelAccionesFormularioAuxiliarEstructura=this.jInternalFrameDetalleFormEstructura.jPanelAccionesFormularioEstructura;
		}
		
		final JPanel jPanelCamposEstructura=jPanelCamposAuxiliarEstructura;
		final JPanel jPanelAccionesFormularioEstructura=jPanelAccionesFormularioAuxiliarEstructura;
		
		
		final JMenuBar jmenuBarEstructura=this.jmenuBarEstructura;		
		final JToolBar jTtoolBarEstructura=this.jTtoolBarEstructura;
				
		JMenuBar jmenuBarDetalleAuxiliarEstructura=new JMenuBar();
		JToolBar jTtoolBarDetalleAuxiliarEstructura=new JToolBar();
		
		if(this.jInternalFrameDetalleFormEstructura!=null) {
			jmenuBarDetalleAuxiliarEstructura=this.jInternalFrameDetalleFormEstructura.jmenuBarDetalleEstructura;
			jTtoolBarDetalleAuxiliarEstructura=this.jInternalFrameDetalleFormEstructura.jTtoolBarDetalleEstructura;		
		}
		
		final JMenuBar jmenuBarDetalleEstructura=jmenuBarDetalleAuxiliarEstructura;
		final JToolBar jTtoolBarDetalleEstructura=jTtoolBarDetalleAuxiliarEstructura;
		
		
		
		if(Constantes2.CON_PROCESO_HILO) {
			Thread threadRunnableProcess;
			ProcessRunnable processRunnable;
			
			processRunnable=new ProcessRunnable();
			
			processRunnable.setsTipo("END");
			processRunnable.setDesktop(jDesktopPane);
			processRunnable.setModuloActual(moduloActual);
			processRunnable.setModuloUsuarioSeleccionado(moduloActual);
			processRunnable.setOpcionActual(opcionActual);
			processRunnable.setParametroGeneralSg(parametroGeneralSg);
			processRunnable.setParametroGeneralUsuario(parametroGeneralUsuario);
			processRunnable.setResumenUsuarioActual(resumenUsuarioActual);
			processRunnable.setUsuarioActual(usuarioActual);
			
			processRunnable.jTabbedPaneBusquedas=jTabbedPaneBusquedasEstructura;
			processRunnable.jPanelParametrosReportes=jPanelParametrosReportesEstructura;
			processRunnable.jTableDatos=jTableDatosEstructura;
			processRunnable.jPanelCampos=jPanelCamposEstructura;
			processRunnable.jPanelPaginacion=jPanelPaginacionEstructura;
			processRunnable.jPanelAcciones=jPanelAccionesEstructura;
			processRunnable.jPanelAccionesFormulario=jPanelAccionesFormularioEstructura;
			
			
			processRunnable.jmenuBar=jmenuBarEstructura;
			processRunnable.jmenuBarDetalle=jmenuBarDetalleEstructura;
			processRunnable.jTtoolBar=jTtoolBarEstructura;
			processRunnable.jTtoolBarDetalle=jTtoolBarDetalleEstructura;
			processRunnable.jInternalFrameBase=this;
			
			//processRunnable.CargarObjetosRendimientoCriticoModuloInventario();
			
			
			threadRunnableProcess=new Thread(processRunnable);//.start();
					
			threadRunnableProcess.start();
			
		} else {
			if(conSplash) {
				SwingUtilities.invokeLater(new RunnableProceso(true,this,jTabbedPaneBusquedasEstructura ,jPanelParametrosReportesEstructura, jTableDatosEstructura,/*jScrollPanelDatosEstructura,*/jPanelCamposEstructura,jPanelPaginacionEstructura, /*jScrollPanelDatosEdicionEstructura,*/ jPanelAccionesEstructura,jPanelAccionesFormularioEstructura,jmenuBarEstructura,jmenuBarDetalleEstructura,jTtoolBarEstructura,jTtoolBarDetalleEstructura));
			}
		}						
	}
	
	/*
	public void habilitarDeshabilitarControlesEstructura(Boolean esHabilitar,Boolean conDetalle) {
		this.habilitarDeshabilitarToolBarEstructura(esHabilitar,conDetalle);
		this.habilitarDeshabilitarMenuEstructura(esHabilitar,conDetalle);
	}
	
	public void habilitarDeshabilitarToolBarEstructura(Boolean esHabilitar,Boolean conDetalle) {
		FuncionesSwing.enableDisableComponents(this.jTtoolBarEstructura,esHabilitar,1,1);
		
		if(conDetalle) {
			FuncionesSwing.enableDisableComponents(this.jTtoolBarDetalleEstructura,esHabilitar,1,1);
		}
	}
	
	public void habilitarDeshabilitarMenuEstructura(Boolean esHabilitar,Boolean conDetalle) {
		FuncionesSwing.enableDisableComponents(this.jmenuBarEstructura,esHabilitar,1,1);
		
		if(conDetalle) {
			FuncionesSwing.enableDisableComponents(this.jmenuBarDetalleEstructura,esHabilitar,1,1);
		}
	}
	*/
	
	
	public void getTodosEstructuraArbol() throws Exception {	
		ArrayList<String> arrColumnasGlobales=EstructuraConstantesFunciones.getArrayColumnasGlobalesEstructura(this.arrDatoGeneral);
		
		String  finalQueryGlobal=Funciones.GetWhereGlobalConstants(this.parametroGeneralUsuario,this.moduloActual,true,false,arrColumnasGlobales,EstructuraConstantesFunciones.TABLENAME);
		
		this.pagination=new Pagination();
		
		this.pagination.setiFirstResult(-1);
		this.pagination.setiMaxResults(-1);
		
		this.cargarDatosCliente();
		
		//ARCHITECTURE
		if(Constantes.ISUSAEJBLOGICLAYER) {	
			estructuraLogic.getTodosEstructuras(finalQueryGlobal+"",this.pagination);//WithConnection
			this.estructurasArbol=estructuraLogic.getEstructuras();
		} else if(Constantes.ISUSAEJBREMOTE) {
		} else if(Constantes.ISUSAEJBHOME) {
		}
		//ARCHITECTURE
	}
	
	public void procesarBusqueda(String sAccionBusqueda) throws Exception {		
		String  finalQueryPaginacion=this.estructuraConstantesFunciones.getsFinalQueryEstructura();
		String  finalQueryPaginacionTodos=this.estructuraConstantesFunciones.getsFinalQueryEstructura();
		
		Boolean esBusqueda=false;
		
		this.actualizarVariablesTipoReporte(true,false,false,"");
		/*
		this.sTipoReporteExtra="";
		this.esReporteDinamico=false;
		this.sPathReporteDinamico="";
		*/
		
		if(!sAccionBusqueda.equals("Todos"))	{
			esBusqueda=true;
		}
		
		this.arrDatoGeneral= new  ArrayList<DatoGeneral>();
		this.arrDatoGeneralNo= new  ArrayList<String>();
		
		ArrayList<String> arrColumnasGlobalesNo=EstructuraConstantesFunciones.getArrayColumnasGlobalesNoEstructura(this.arrDatoGeneral);
		ArrayList<String> arrColumnasGlobales=EstructuraConstantesFunciones.getArrayColumnasGlobalesEstructura(this.arrDatoGeneral,arrColumnasGlobalesNo);
		
			
		String  finalQueryGlobal="";
		
		finalQueryGlobal=Funciones.GetWhereGlobalConstants(this.parametroGeneralUsuario,this.moduloActual,!esBusqueda,esBusqueda,arrColumnasGlobales,EstructuraConstantesFunciones.TABLENAME);
		
		String sOrderBy="";
		
		
		sOrderBy=Funciones2.getFinalQueryOrderBy(this.arrOrderBy);
		
		
		if(!sOrderBy.equals("")) {			
			finalQueryPaginacion=sOrderBy;
			finalQueryPaginacionTodos=sOrderBy;
		}
		
		
		//INICIALIZA ELIMINADOS
		this.estructurasEliminados= new ArrayList<Estructura>();
		
		if(!this.isEntroOnLoad) {
			this.onLoad();
		}/* else {
			this.isEntroOnLoad=false;
		}*/
		
		
		
				
		try	{		
			
			//this.startProcessEstructura();
		
				///*EstructuraSessionBean*/this.estructuraSessionBean=new EstructuraSessionBean();
			
			if(this.estructuraSessionBean==null) {
				this.estructuraSessionBean=new EstructuraSessionBean();
			}
			
			//ACTUALIZA EL TAMANIO DE PAGINACION DESDE EL COMBO
			if(this.sTipoPaginacion!=null && !this.sTipoPaginacion.equals("")) {
				if(!this.sTipoPaginacion.equals("TODOS")) {
					this.iNumeroPaginacion=Integer.parseInt(this.sTipoPaginacion);
				} else {
					this.iNumeroPaginacion=-1;
					this.iNumeroPaginacionPagina=-1;
				}
			} else {
				if(this.iNumeroPaginacion==null || (this.iNumeroPaginacion!=null && this.iNumeroPaginacion<=0)) {
					this.iNumeroPaginacion=EstructuraConstantesFunciones.INUMEROPAGINACION;
				}
			}
			
			this.pagination=new Pagination();
			this.pagination.setiFirstResult(this.iNumeroPaginacionPagina);
			this.pagination.setiMaxResults(this.iNumeroPaginacion);
			
			this.cargarDatosCliente();
			
			ArrayList<Classe> classes=new ArrayList<Classe>();
			
			classes=EstructuraConstantesFunciones.getClassesForeignKeysOfEstructura(new ArrayList<Classe>(),DeepLoadType.NONE);
			
		
			this.datosDeep=new DatosDeep();
			this.datosDeep.setIsDeep(false);
			this.datosDeep.setDeepLoadType(DeepLoadType.INCLUDE);
			this.datosDeep.setClases(classes);
			
			this.datosCliente.setDatosDeepParametros(false, DeepLoadType.INCLUDE, classes, "");
			this.datosCliente.setIsConDeep(true);
			
			if(false) {//this.conExportar
				this.datosCliente.setIsConExportar(true);
				this.datosCliente.setDatosExportarParametros(Funciones2.getTipoExportar(this.parametroGeneralUsuario),this.parametroGeneralUsuario.getcon_exportar_cabecera(),Funciones2.getTipoDelimiter(this.parametroGeneralUsuario),this.parametroGeneralUsuario.getpath_exportar()+"/estructura."+Funciones2.getTipoExtensionArchivoExportar(this.parametroGeneralUsuario));
			} else {
				this.datosCliente.setIsConExportar(false);
			}
			
			estructurasAux= new ArrayList<Estructura>();
			
				
			estructuraLogic.setDatosCliente(this.datosCliente);
			estructuraLogic.setDatosDeep(this.datosDeep);
			estructuraLogic.setIsConDeep(true);
			
			
			estructuraLogic.getEstructuraDataAccess().setIsForForeingsKeysDataRelationships(true);
			
			if(sAccionBusqueda.equals("Todos") || sAccionBusqueda.equals("Query"))	{	
				if(sAccionBusqueda.equals("Todos")) {
					//FALTA:PARA BUSQUEDAS POR CAMPO EN FORMULARIO
					//this.sFinalQueryGeneral="";
				}
				
				//ARCHITECTURE
				if(Constantes.ISUSAEJBLOGICLAYER) {	
					finalQueryGlobal=Funciones.GetFinalQueryAppendBusqueda(finalQueryGlobal, this.sFinalQueryGeneral,finalQueryPaginacionTodos );
					
					estructuraLogic.getTodosEstructuras(finalQueryGlobal,pagination);
					
					//estructuraLogic.getTodosEstructurasWithConnection(finalQueryGlobal,pagination);										
				
				} else if(Constantes.ISUSAEJBREMOTE) {
				} else if(Constantes.ISUSAEJBHOME) {
				}
				//ARCHITECTURE
				
				if(estructuraLogic.getEstructuras()==null|| estructuraLogic.getEstructuras().size()==0)	{
					
				
				}
				
				if(false && sTipoArchivoReporte!=""&&sTipoArchivoReporte!=null) {//this.isTipoArchivoReporte
					if(false) {//isMostrarTodosResultadosReporte
						this.pagination.setiFirstResult(-1);
						this.pagination.setiMaxResults(-1);
						
						//ARCHITECTURE
						if(Constantes.ISUSAEJBLOGICLAYER) {	
							estructurasAux= new ArrayList<Estructura>();
							estructurasAux.addAll(estructuraLogic.getEstructuras());						
						} else if(Constantes.ISUSAEJBREMOTE || Constantes.ISUSAEJBHOME) {
							estructurasAux= new ArrayList<Estructura>();
							estructurasAux.addAll(estructuras);
						}
						//ARCHITECTURE
						
						//ARCHITECTURE
						if(Constantes.ISUSAEJBLOGICLAYER) {	
							estructuraLogic.getTodosEstructuras(finalQueryGlobal+"",this.pagination);												
							
							//estructuraLogic.getTodosEstructurasWithConnection(finalQueryGlobal+"",this.pagination);												
						} else if(Constantes.ISUSAEJBREMOTE) {
						} else if(Constantes.ISUSAEJBHOME) {
						}
						//ARCHITECTURE
						
					}
					
					this.generarReporteEstructuras("Todos",estructuraLogic.getEstructuras() );
					
					if(false) {//isMostrarTodosResultadosReporte						
						//ARCHITECTURE
						if(Constantes.ISUSAEJBLOGICLAYER) {	
							estructuraLogic.setEstructuras(new ArrayList<Estructura>());					
							estructuraLogic.getEstructuras().addAll(estructurasAux);
						} else if(Constantes.ISUSAEJBREMOTE || Constantes.ISUSAEJBHOME) {
							estructuras=new ArrayList<Estructura>();
							estructuras.addAll(estructurasAux);
						}
						//ARCHITECTURE
						
						this.pagination.setiFirstResult(this.iNumeroPaginacionPagina);
						this.pagination.setiMaxResults(this.iNumeroPaginacion);														
					}
				}
			}
			else if(sAccionBusqueda.equals("PorId")) {
				Long idEstructura=0L;
				
				if(this.idActual!=null && this.idActual!=0L) {
					idEstructura=this.idActual;
				
				} else if(this.idEstructuraActual!=null && this.idEstructuraActual!=0L) {
					idEstructura=idEstructuraActual;
				}
				
					
				this.sDetalleReporte=EstructuraConstantesFunciones.getDetalleIndicePorId(idEstructura);
				
				this.estructuras=new ArrayList<Estructura>();
				
				//ARCHITECTURE
				if(Constantes.ISUSAEJBLOGICLAYER) {					
					estructuraLogic.getEntity(idEstructura);
					
					//estructuraLogic.getEntityWithConnection(idEstructura);
				} else if(Constantes.ISUSAEJBREMOTE) {
				} else if(Constantes.ISUSAEJBHOME) {
				}
				//ARCHITECTURE
								
				if(Constantes.ISUSAEJBLOGICLAYER) {
					estructuraLogic.setEstructuras(new ArrayList<Estructura>());
					estructuraLogic.getEstructuras().add(estructuraLogic.getEstructura());
				
				} else if(Constantes.ISUSAEJBREMOTE || Constantes.ISUSAEJBHOME) {
					this.estructuras=new ArrayList<Estructura>();
					this.estructuras.add(estructura);
				}
				
				if(estructuraLogic.getEstructura()==null)	{
					
				
				}			
			}
			
		
			else if(sAccionBusqueda.equals("FK_IdCiudad")) {
				this.sDetalleReporte=EstructuraConstantesFunciones.getDetalleIndiceFK_IdCiudad(id_ciudadFK_IdCiudad);

				
				//ARCHITECTURE
				if(Constantes.ISUSAEJBLOGICLAYER) {

					finalQueryGlobal=Funciones.GetFinalQueryAppendBusqueda(finalQueryGlobal, this.sFinalQueryGeneral,finalQueryPaginacion);

					estructuraLogic.getEstructurasFK_IdCiudad(finalQueryGlobal,pagination,id_ciudadFK_IdCiudad);
				} else if(Constantes.ISUSAEJBREMOTE) {
				this.sDetalleReporte=EstructuraConstantesFunciones.getDetalleIndiceFK_IdCiudad(id_ciudadFK_IdCiudad);

				
				} else if(Constantes.ISUSAEJBHOME) {
				this.sDetalleReporte=EstructuraConstantesFunciones.getDetalleIndiceFK_IdCiudad(id_ciudadFK_IdCiudad);

				
				}
				//ARCHITECTURE

				Boolean isNoExiste=false;
				//ARCHITECTURE
				if(Constantes.ISUSAEJBLOGICLAYER) {
					isNoExiste=estructuraLogic.getEstructuras()==null||estructuraLogic.getEstructuras().size()==0;
				} else if(Constantes.ISUSAEJBREMOTE||Constantes.ISUSAEJBHOME) {
					isNoExiste=estructuras==null|| estructuras.size()==0;
				}
				//ARCHITECTURE

		if(false && sTipoArchivoReporte!=""&&sTipoArchivoReporte!=null) {//this.isTipoArchivoReporte
			if(false) {//isMostrarTodosResultadosReporte
				this.pagination.setiFirstResult(-1);
				this.pagination.setiMaxResults(-1);

				//ARCHITECTURE
				if(Constantes.ISUSAEJBLOGICLAYER) {
						estructurasAux=new ArrayList<Estructura>();
						estructurasAux.addAll(estructuraLogic.getEstructuras());
				} else if(Constantes.ISUSAEJBREMOTE || Constantes.ISUSAEJBHOME) {
							estructurasAux=new ArrayList<Estructura>();
							estructurasAux.addAll(estructuras);
				}
				//ARCHITECTURE
								
				
				//ARCHITECTURE
				if(Constantes.ISUSAEJBLOGICLAYER) {
							finalQueryGlobal=Funciones.GetFinalQueryAppendBusqueda(finalQueryGlobal, this.sFinalQueryGeneral,"");
							estructuraLogic.getEstructurasFK_IdCiudad(finalQueryGlobal,pagination,id_ciudadFK_IdCiudad);
				} else if(Constantes.ISUSAEJBREMOTE) {
				this.sDetalleReporte=EstructuraConstantesFunciones.getDetalleIndiceFK_IdCiudad(id_ciudadFK_IdCiudad);
						
				} else if(Constantes.ISUSAEJBHOME) {
				this.sDetalleReporte=EstructuraConstantesFunciones.getDetalleIndiceFK_IdCiudad(id_ciudadFK_IdCiudad);
						
				}
				//ARCHITECTURE
					}
				//ARCHITECTURE
				if(Constantes.ISUSAEJBLOGICLAYER) {
					generarReporteEstructuras("FK_IdCiudad",estructuraLogic.getEstructuras());
				} else if(Constantes.ISUSAEJBREMOTE || Constantes.ISUSAEJBHOME) {
					generarReporteEstructuras("FK_IdCiudad",estructuras);
				}
				//ARCHITECTURE

					if(false) {//isMostrarTodosResultadosReporte
						this.pagination.setiFirstResult(this.iNumeroPaginacionPagina);
						this.pagination.setiMaxResults(this.iNumeroPaginacion);

						//ARCHITECTURE
						if(Constantes.ISUSAEJBLOGICLAYER) {
						estructuraLogic.setEstructuras(new ArrayList<Estructura>());
						estructuraLogic.getEstructuras().addAll(estructurasAux);
						} else if(Constantes.ISUSAEJBREMOTE || Constantes.ISUSAEJBHOME) {
							estructuras=new ArrayList<Estructura>();
							estructuras.addAll(estructurasAux);
						}
						//ARCHITECTURE
					}
				}

			}
			else if(sAccionBusqueda.equals("FK_IdCuentaContable")) {
				this.sDetalleReporte=EstructuraConstantesFunciones.getDetalleIndiceFK_IdCuentaContable(id_cuenta_contableFK_IdCuentaContable);

				
				//ARCHITECTURE
				if(Constantes.ISUSAEJBLOGICLAYER) {

					finalQueryGlobal=Funciones.GetFinalQueryAppendBusqueda(finalQueryGlobal, this.sFinalQueryGeneral,finalQueryPaginacion);

					estructuraLogic.getEstructurasFK_IdCuentaContable(finalQueryGlobal,pagination,id_cuenta_contableFK_IdCuentaContable);
				} else if(Constantes.ISUSAEJBREMOTE) {
				this.sDetalleReporte=EstructuraConstantesFunciones.getDetalleIndiceFK_IdCuentaContable(id_cuenta_contableFK_IdCuentaContable);

				
				} else if(Constantes.ISUSAEJBHOME) {
				this.sDetalleReporte=EstructuraConstantesFunciones.getDetalleIndiceFK_IdCuentaContable(id_cuenta_contableFK_IdCuentaContable);

				
				}
				//ARCHITECTURE

				Boolean isNoExiste=false;
				//ARCHITECTURE
				if(Constantes.ISUSAEJBLOGICLAYER) {
					isNoExiste=estructuraLogic.getEstructuras()==null||estructuraLogic.getEstructuras().size()==0;
				} else if(Constantes.ISUSAEJBREMOTE||Constantes.ISUSAEJBHOME) {
					isNoExiste=estructuras==null|| estructuras.size()==0;
				}
				//ARCHITECTURE

		if(false && sTipoArchivoReporte!=""&&sTipoArchivoReporte!=null) {//this.isTipoArchivoReporte
			if(false) {//isMostrarTodosResultadosReporte
				this.pagination.setiFirstResult(-1);
				this.pagination.setiMaxResults(-1);

				//ARCHITECTURE
				if(Constantes.ISUSAEJBLOGICLAYER) {
						estructurasAux=new ArrayList<Estructura>();
						estructurasAux.addAll(estructuraLogic.getEstructuras());
				} else if(Constantes.ISUSAEJBREMOTE || Constantes.ISUSAEJBHOME) {
							estructurasAux=new ArrayList<Estructura>();
							estructurasAux.addAll(estructuras);
				}
				//ARCHITECTURE
								
				
				//ARCHITECTURE
				if(Constantes.ISUSAEJBLOGICLAYER) {
							finalQueryGlobal=Funciones.GetFinalQueryAppendBusqueda(finalQueryGlobal, this.sFinalQueryGeneral,"");
							estructuraLogic.getEstructurasFK_IdCuentaContable(finalQueryGlobal,pagination,id_cuenta_contableFK_IdCuentaContable);
				} else if(Constantes.ISUSAEJBREMOTE) {
				this.sDetalleReporte=EstructuraConstantesFunciones.getDetalleIndiceFK_IdCuentaContable(id_cuenta_contableFK_IdCuentaContable);
						
				} else if(Constantes.ISUSAEJBHOME) {
				this.sDetalleReporte=EstructuraConstantesFunciones.getDetalleIndiceFK_IdCuentaContable(id_cuenta_contableFK_IdCuentaContable);
						
				}
				//ARCHITECTURE
					}
				//ARCHITECTURE
				if(Constantes.ISUSAEJBLOGICLAYER) {
					generarReporteEstructuras("FK_IdCuentaContable",estructuraLogic.getEstructuras());
				} else if(Constantes.ISUSAEJBREMOTE || Constantes.ISUSAEJBHOME) {
					generarReporteEstructuras("FK_IdCuentaContable",estructuras);
				}
				//ARCHITECTURE

					if(false) {//isMostrarTodosResultadosReporte
						this.pagination.setiFirstResult(this.iNumeroPaginacionPagina);
						this.pagination.setiMaxResults(this.iNumeroPaginacion);

						//ARCHITECTURE
						if(Constantes.ISUSAEJBLOGICLAYER) {
						estructuraLogic.setEstructuras(new ArrayList<Estructura>());
						estructuraLogic.getEstructuras().addAll(estructurasAux);
						} else if(Constantes.ISUSAEJBREMOTE || Constantes.ISUSAEJBHOME) {
							estructuras=new ArrayList<Estructura>();
							estructuras.addAll(estructurasAux);
						}
						//ARCHITECTURE
					}
				}

			}
			else if(sAccionBusqueda.equals("FK_IdEmpresa")) {
				this.sDetalleReporte=EstructuraConstantesFunciones.getDetalleIndiceFK_IdEmpresa(id_empresaFK_IdEmpresa);

				
				//ARCHITECTURE
				if(Constantes.ISUSAEJBLOGICLAYER) {

					finalQueryGlobal=Funciones.GetFinalQueryAppendBusqueda(finalQueryGlobal, this.sFinalQueryGeneral,finalQueryPaginacion);

					estructuraLogic.getEstructurasFK_IdEmpresa(finalQueryGlobal,pagination,id_empresaFK_IdEmpresa);
				} else if(Constantes.ISUSAEJBREMOTE) {
				this.sDetalleReporte=EstructuraConstantesFunciones.getDetalleIndiceFK_IdEmpresa(id_empresaFK_IdEmpresa);

				
				} else if(Constantes.ISUSAEJBHOME) {
				this.sDetalleReporte=EstructuraConstantesFunciones.getDetalleIndiceFK_IdEmpresa(id_empresaFK_IdEmpresa);

				
				}
				//ARCHITECTURE

				Boolean isNoExiste=false;
				//ARCHITECTURE
				if(Constantes.ISUSAEJBLOGICLAYER) {
					isNoExiste=estructuraLogic.getEstructuras()==null||estructuraLogic.getEstructuras().size()==0;
				} else if(Constantes.ISUSAEJBREMOTE||Constantes.ISUSAEJBHOME) {
					isNoExiste=estructuras==null|| estructuras.size()==0;
				}
				//ARCHITECTURE

		if(false && sTipoArchivoReporte!=""&&sTipoArchivoReporte!=null) {//this.isTipoArchivoReporte
			if(false) {//isMostrarTodosResultadosReporte
				this.pagination.setiFirstResult(-1);
				this.pagination.setiMaxResults(-1);

				//ARCHITECTURE
				if(Constantes.ISUSAEJBLOGICLAYER) {
						estructurasAux=new ArrayList<Estructura>();
						estructurasAux.addAll(estructuraLogic.getEstructuras());
				} else if(Constantes.ISUSAEJBREMOTE || Constantes.ISUSAEJBHOME) {
							estructurasAux=new ArrayList<Estructura>();
							estructurasAux.addAll(estructuras);
				}
				//ARCHITECTURE
								
				
				//ARCHITECTURE
				if(Constantes.ISUSAEJBLOGICLAYER) {
							finalQueryGlobal=Funciones.GetFinalQueryAppendBusqueda(finalQueryGlobal, this.sFinalQueryGeneral,"");
							estructuraLogic.getEstructurasFK_IdEmpresa(finalQueryGlobal,pagination,id_empresaFK_IdEmpresa);
				} else if(Constantes.ISUSAEJBREMOTE) {
				this.sDetalleReporte=EstructuraConstantesFunciones.getDetalleIndiceFK_IdEmpresa(id_empresaFK_IdEmpresa);
						
				} else if(Constantes.ISUSAEJBHOME) {
				this.sDetalleReporte=EstructuraConstantesFunciones.getDetalleIndiceFK_IdEmpresa(id_empresaFK_IdEmpresa);
						
				}
				//ARCHITECTURE
					}
				//ARCHITECTURE
				if(Constantes.ISUSAEJBLOGICLAYER) {
					generarReporteEstructuras("FK_IdEmpresa",estructuraLogic.getEstructuras());
				} else if(Constantes.ISUSAEJBREMOTE || Constantes.ISUSAEJBHOME) {
					generarReporteEstructuras("FK_IdEmpresa",estructuras);
				}
				//ARCHITECTURE

					if(false) {//isMostrarTodosResultadosReporte
						this.pagination.setiFirstResult(this.iNumeroPaginacionPagina);
						this.pagination.setiMaxResults(this.iNumeroPaginacion);

						//ARCHITECTURE
						if(Constantes.ISUSAEJBLOGICLAYER) {
						estructuraLogic.setEstructuras(new ArrayList<Estructura>());
						estructuraLogic.getEstructuras().addAll(estructurasAux);
						} else if(Constantes.ISUSAEJBREMOTE || Constantes.ISUSAEJBHOME) {
							estructuras=new ArrayList<Estructura>();
							estructuras.addAll(estructurasAux);
						}
						//ARCHITECTURE
					}
				}

			}
			else if(sAccionBusqueda.equals("FK_IdEstructura")) {
				this.sDetalleReporte=EstructuraConstantesFunciones.getDetalleIndiceFK_IdEstructura(id_estructuraFK_IdEstructura);

				
				//ARCHITECTURE
				if(Constantes.ISUSAEJBLOGICLAYER) {

					finalQueryGlobal=Funciones.GetFinalQueryAppendBusqueda(finalQueryGlobal, this.sFinalQueryGeneral,finalQueryPaginacion);

					estructuraLogic.getEstructurasFK_IdEstructura(finalQueryGlobal,pagination,id_estructuraFK_IdEstructura);
				} else if(Constantes.ISUSAEJBREMOTE) {
				this.sDetalleReporte=EstructuraConstantesFunciones.getDetalleIndiceFK_IdEstructura(id_estructuraFK_IdEstructura);

				
				} else if(Constantes.ISUSAEJBHOME) {
				this.sDetalleReporte=EstructuraConstantesFunciones.getDetalleIndiceFK_IdEstructura(id_estructuraFK_IdEstructura);

				
				}
				//ARCHITECTURE

				Boolean isNoExiste=false;
				//ARCHITECTURE
				if(Constantes.ISUSAEJBLOGICLAYER) {
					isNoExiste=estructuraLogic.getEstructuras()==null||estructuraLogic.getEstructuras().size()==0;
				} else if(Constantes.ISUSAEJBREMOTE||Constantes.ISUSAEJBHOME) {
					isNoExiste=estructuras==null|| estructuras.size()==0;
				}
				//ARCHITECTURE

		if(false && sTipoArchivoReporte!=""&&sTipoArchivoReporte!=null) {//this.isTipoArchivoReporte
			if(false) {//isMostrarTodosResultadosReporte
				this.pagination.setiFirstResult(-1);
				this.pagination.setiMaxResults(-1);

				//ARCHITECTURE
				if(Constantes.ISUSAEJBLOGICLAYER) {
						estructurasAux=new ArrayList<Estructura>();
						estructurasAux.addAll(estructuraLogic.getEstructuras());
				} else if(Constantes.ISUSAEJBREMOTE || Constantes.ISUSAEJBHOME) {
							estructurasAux=new ArrayList<Estructura>();
							estructurasAux.addAll(estructuras);
				}
				//ARCHITECTURE
								
				
				//ARCHITECTURE
				if(Constantes.ISUSAEJBLOGICLAYER) {
							finalQueryGlobal=Funciones.GetFinalQueryAppendBusqueda(finalQueryGlobal, this.sFinalQueryGeneral,"");
							estructuraLogic.getEstructurasFK_IdEstructura(finalQueryGlobal,pagination,id_estructuraFK_IdEstructura);
				} else if(Constantes.ISUSAEJBREMOTE) {
				this.sDetalleReporte=EstructuraConstantesFunciones.getDetalleIndiceFK_IdEstructura(id_estructuraFK_IdEstructura);
						
				} else if(Constantes.ISUSAEJBHOME) {
				this.sDetalleReporte=EstructuraConstantesFunciones.getDetalleIndiceFK_IdEstructura(id_estructuraFK_IdEstructura);
						
				}
				//ARCHITECTURE
					}
				//ARCHITECTURE
				if(Constantes.ISUSAEJBLOGICLAYER) {
					generarReporteEstructuras("FK_IdEstructura",estructuraLogic.getEstructuras());
				} else if(Constantes.ISUSAEJBREMOTE || Constantes.ISUSAEJBHOME) {
					generarReporteEstructuras("FK_IdEstructura",estructuras);
				}
				//ARCHITECTURE

					if(false) {//isMostrarTodosResultadosReporte
						this.pagination.setiFirstResult(this.iNumeroPaginacionPagina);
						this.pagination.setiMaxResults(this.iNumeroPaginacion);

						//ARCHITECTURE
						if(Constantes.ISUSAEJBLOGICLAYER) {
						estructuraLogic.setEstructuras(new ArrayList<Estructura>());
						estructuraLogic.getEstructuras().addAll(estructurasAux);
						} else if(Constantes.ISUSAEJBREMOTE || Constantes.ISUSAEJBHOME) {
							estructuras=new ArrayList<Estructura>();
							estructuras.addAll(estructurasAux);
						}
						//ARCHITECTURE
					}
				}

			}
			else if(sAccionBusqueda.equals("FK_IdNumeroPatronal")) {
				this.sDetalleReporte=EstructuraConstantesFunciones.getDetalleIndiceFK_IdNumeroPatronal(id_numero_patronalFK_IdNumeroPatronal);

				
				//ARCHITECTURE
				if(Constantes.ISUSAEJBLOGICLAYER) {

					finalQueryGlobal=Funciones.GetFinalQueryAppendBusqueda(finalQueryGlobal, this.sFinalQueryGeneral,finalQueryPaginacion);

					estructuraLogic.getEstructurasFK_IdNumeroPatronal(finalQueryGlobal,pagination,id_numero_patronalFK_IdNumeroPatronal);
				} else if(Constantes.ISUSAEJBREMOTE) {
				this.sDetalleReporte=EstructuraConstantesFunciones.getDetalleIndiceFK_IdNumeroPatronal(id_numero_patronalFK_IdNumeroPatronal);

				
				} else if(Constantes.ISUSAEJBHOME) {
				this.sDetalleReporte=EstructuraConstantesFunciones.getDetalleIndiceFK_IdNumeroPatronal(id_numero_patronalFK_IdNumeroPatronal);

				
				}
				//ARCHITECTURE

				Boolean isNoExiste=false;
				//ARCHITECTURE
				if(Constantes.ISUSAEJBLOGICLAYER) {
					isNoExiste=estructuraLogic.getEstructuras()==null||estructuraLogic.getEstructuras().size()==0;
				} else if(Constantes.ISUSAEJBREMOTE||Constantes.ISUSAEJBHOME) {
					isNoExiste=estructuras==null|| estructuras.size()==0;
				}
				//ARCHITECTURE

		if(false && sTipoArchivoReporte!=""&&sTipoArchivoReporte!=null) {//this.isTipoArchivoReporte
			if(false) {//isMostrarTodosResultadosReporte
				this.pagination.setiFirstResult(-1);
				this.pagination.setiMaxResults(-1);

				//ARCHITECTURE
				if(Constantes.ISUSAEJBLOGICLAYER) {
						estructurasAux=new ArrayList<Estructura>();
						estructurasAux.addAll(estructuraLogic.getEstructuras());
				} else if(Constantes.ISUSAEJBREMOTE || Constantes.ISUSAEJBHOME) {
							estructurasAux=new ArrayList<Estructura>();
							estructurasAux.addAll(estructuras);
				}
				//ARCHITECTURE
								
				
				//ARCHITECTURE
				if(Constantes.ISUSAEJBLOGICLAYER) {
							finalQueryGlobal=Funciones.GetFinalQueryAppendBusqueda(finalQueryGlobal, this.sFinalQueryGeneral,"");
							estructuraLogic.getEstructurasFK_IdNumeroPatronal(finalQueryGlobal,pagination,id_numero_patronalFK_IdNumeroPatronal);
				} else if(Constantes.ISUSAEJBREMOTE) {
				this.sDetalleReporte=EstructuraConstantesFunciones.getDetalleIndiceFK_IdNumeroPatronal(id_numero_patronalFK_IdNumeroPatronal);
						
				} else if(Constantes.ISUSAEJBHOME) {
				this.sDetalleReporte=EstructuraConstantesFunciones.getDetalleIndiceFK_IdNumeroPatronal(id_numero_patronalFK_IdNumeroPatronal);
						
				}
				//ARCHITECTURE
					}
				//ARCHITECTURE
				if(Constantes.ISUSAEJBLOGICLAYER) {
					generarReporteEstructuras("FK_IdNumeroPatronal",estructuraLogic.getEstructuras());
				} else if(Constantes.ISUSAEJBREMOTE || Constantes.ISUSAEJBHOME) {
					generarReporteEstructuras("FK_IdNumeroPatronal",estructuras);
				}
				//ARCHITECTURE

					if(false) {//isMostrarTodosResultadosReporte
						this.pagination.setiFirstResult(this.iNumeroPaginacionPagina);
						this.pagination.setiMaxResults(this.iNumeroPaginacion);

						//ARCHITECTURE
						if(Constantes.ISUSAEJBLOGICLAYER) {
						estructuraLogic.setEstructuras(new ArrayList<Estructura>());
						estructuraLogic.getEstructuras().addAll(estructurasAux);
						} else if(Constantes.ISUSAEJBREMOTE || Constantes.ISUSAEJBHOME) {
							estructuras=new ArrayList<Estructura>();
							estructuras.addAll(estructurasAux);
						}
						//ARCHITECTURE
					}
				}

			}
			else if(sAccionBusqueda.equals("FK_IdPais")) {
				this.sDetalleReporte=EstructuraConstantesFunciones.getDetalleIndiceFK_IdPais(id_paisFK_IdPais);

				
				//ARCHITECTURE
				if(Constantes.ISUSAEJBLOGICLAYER) {

					finalQueryGlobal=Funciones.GetFinalQueryAppendBusqueda(finalQueryGlobal, this.sFinalQueryGeneral,finalQueryPaginacion);

					estructuraLogic.getEstructurasFK_IdPais(finalQueryGlobal,pagination,id_paisFK_IdPais);
				} else if(Constantes.ISUSAEJBREMOTE) {
				this.sDetalleReporte=EstructuraConstantesFunciones.getDetalleIndiceFK_IdPais(id_paisFK_IdPais);

				
				} else if(Constantes.ISUSAEJBHOME) {
				this.sDetalleReporte=EstructuraConstantesFunciones.getDetalleIndiceFK_IdPais(id_paisFK_IdPais);

				
				}
				//ARCHITECTURE

				Boolean isNoExiste=false;
				//ARCHITECTURE
				if(Constantes.ISUSAEJBLOGICLAYER) {
					isNoExiste=estructuraLogic.getEstructuras()==null||estructuraLogic.getEstructuras().size()==0;
				} else if(Constantes.ISUSAEJBREMOTE||Constantes.ISUSAEJBHOME) {
					isNoExiste=estructuras==null|| estructuras.size()==0;
				}
				//ARCHITECTURE

		if(false && sTipoArchivoReporte!=""&&sTipoArchivoReporte!=null) {//this.isTipoArchivoReporte
			if(false) {//isMostrarTodosResultadosReporte
				this.pagination.setiFirstResult(-1);
				this.pagination.setiMaxResults(-1);

				//ARCHITECTURE
				if(Constantes.ISUSAEJBLOGICLAYER) {
						estructurasAux=new ArrayList<Estructura>();
						estructurasAux.addAll(estructuraLogic.getEstructuras());
				} else if(Constantes.ISUSAEJBREMOTE || Constantes.ISUSAEJBHOME) {
							estructurasAux=new ArrayList<Estructura>();
							estructurasAux.addAll(estructuras);
				}
				//ARCHITECTURE
								
				
				//ARCHITECTURE
				if(Constantes.ISUSAEJBLOGICLAYER) {
							finalQueryGlobal=Funciones.GetFinalQueryAppendBusqueda(finalQueryGlobal, this.sFinalQueryGeneral,"");
							estructuraLogic.getEstructurasFK_IdPais(finalQueryGlobal,pagination,id_paisFK_IdPais);
				} else if(Constantes.ISUSAEJBREMOTE) {
				this.sDetalleReporte=EstructuraConstantesFunciones.getDetalleIndiceFK_IdPais(id_paisFK_IdPais);
						
				} else if(Constantes.ISUSAEJBHOME) {
				this.sDetalleReporte=EstructuraConstantesFunciones.getDetalleIndiceFK_IdPais(id_paisFK_IdPais);
						
				}
				//ARCHITECTURE
					}
				//ARCHITECTURE
				if(Constantes.ISUSAEJBLOGICLAYER) {
					generarReporteEstructuras("FK_IdPais",estructuraLogic.getEstructuras());
				} else if(Constantes.ISUSAEJBREMOTE || Constantes.ISUSAEJBHOME) {
					generarReporteEstructuras("FK_IdPais",estructuras);
				}
				//ARCHITECTURE

					if(false) {//isMostrarTodosResultadosReporte
						this.pagination.setiFirstResult(this.iNumeroPaginacionPagina);
						this.pagination.setiMaxResults(this.iNumeroPaginacion);

						//ARCHITECTURE
						if(Constantes.ISUSAEJBLOGICLAYER) {
						estructuraLogic.setEstructuras(new ArrayList<Estructura>());
						estructuraLogic.getEstructuras().addAll(estructurasAux);
						} else if(Constantes.ISUSAEJBREMOTE || Constantes.ISUSAEJBHOME) {
							estructuras=new ArrayList<Estructura>();
							estructuras.addAll(estructurasAux);
						}
						//ARCHITECTURE
					}
				}

			}
			else if(sAccionBusqueda.equals("FK_IdSucursal")) {
				this.sDetalleReporte=EstructuraConstantesFunciones.getDetalleIndiceFK_IdSucursal(id_sucursalFK_IdSucursal);

				
				//ARCHITECTURE
				if(Constantes.ISUSAEJBLOGICLAYER) {

					finalQueryGlobal=Funciones.GetFinalQueryAppendBusqueda(finalQueryGlobal, this.sFinalQueryGeneral,finalQueryPaginacion);

					estructuraLogic.getEstructurasFK_IdSucursal(finalQueryGlobal,pagination,id_sucursalFK_IdSucursal);
				} else if(Constantes.ISUSAEJBREMOTE) {
				this.sDetalleReporte=EstructuraConstantesFunciones.getDetalleIndiceFK_IdSucursal(id_sucursalFK_IdSucursal);

				
				} else if(Constantes.ISUSAEJBHOME) {
				this.sDetalleReporte=EstructuraConstantesFunciones.getDetalleIndiceFK_IdSucursal(id_sucursalFK_IdSucursal);

				
				}
				//ARCHITECTURE

				Boolean isNoExiste=false;
				//ARCHITECTURE
				if(Constantes.ISUSAEJBLOGICLAYER) {
					isNoExiste=estructuraLogic.getEstructuras()==null||estructuraLogic.getEstructuras().size()==0;
				} else if(Constantes.ISUSAEJBREMOTE||Constantes.ISUSAEJBHOME) {
					isNoExiste=estructuras==null|| estructuras.size()==0;
				}
				//ARCHITECTURE

		if(false && sTipoArchivoReporte!=""&&sTipoArchivoReporte!=null) {//this.isTipoArchivoReporte
			if(false) {//isMostrarTodosResultadosReporte
				this.pagination.setiFirstResult(-1);
				this.pagination.setiMaxResults(-1);

				//ARCHITECTURE
				if(Constantes.ISUSAEJBLOGICLAYER) {
						estructurasAux=new ArrayList<Estructura>();
						estructurasAux.addAll(estructuraLogic.getEstructuras());
				} else if(Constantes.ISUSAEJBREMOTE || Constantes.ISUSAEJBHOME) {
							estructurasAux=new ArrayList<Estructura>();
							estructurasAux.addAll(estructuras);
				}
				//ARCHITECTURE
								
				
				//ARCHITECTURE
				if(Constantes.ISUSAEJBLOGICLAYER) {
							finalQueryGlobal=Funciones.GetFinalQueryAppendBusqueda(finalQueryGlobal, this.sFinalQueryGeneral,"");
							estructuraLogic.getEstructurasFK_IdSucursal(finalQueryGlobal,pagination,id_sucursalFK_IdSucursal);
				} else if(Constantes.ISUSAEJBREMOTE) {
				this.sDetalleReporte=EstructuraConstantesFunciones.getDetalleIndiceFK_IdSucursal(id_sucursalFK_IdSucursal);
						
				} else if(Constantes.ISUSAEJBHOME) {
				this.sDetalleReporte=EstructuraConstantesFunciones.getDetalleIndiceFK_IdSucursal(id_sucursalFK_IdSucursal);
						
				}
				//ARCHITECTURE
					}
				//ARCHITECTURE
				if(Constantes.ISUSAEJBLOGICLAYER) {
					generarReporteEstructuras("FK_IdSucursal",estructuraLogic.getEstructuras());
				} else if(Constantes.ISUSAEJBREMOTE || Constantes.ISUSAEJBHOME) {
					generarReporteEstructuras("FK_IdSucursal",estructuras);
				}
				//ARCHITECTURE

					if(false) {//isMostrarTodosResultadosReporte
						this.pagination.setiFirstResult(this.iNumeroPaginacionPagina);
						this.pagination.setiMaxResults(this.iNumeroPaginacion);

						//ARCHITECTURE
						if(Constantes.ISUSAEJBLOGICLAYER) {
						estructuraLogic.setEstructuras(new ArrayList<Estructura>());
						estructuraLogic.getEstructuras().addAll(estructurasAux);
						} else if(Constantes.ISUSAEJBREMOTE || Constantes.ISUSAEJBHOME) {
							estructuras=new ArrayList<Estructura>();
							estructuras.addAll(estructurasAux);
						}
						//ARCHITECTURE
					}
				}

			}
			else if(sAccionBusqueda.equals("FK_IdTipoEstructura")) {
				this.sDetalleReporte=EstructuraConstantesFunciones.getDetalleIndiceFK_IdTipoEstructura(id_tipo_estructuraFK_IdTipoEstructura);

				
				//ARCHITECTURE
				if(Constantes.ISUSAEJBLOGICLAYER) {

					finalQueryGlobal=Funciones.GetFinalQueryAppendBusqueda(finalQueryGlobal, this.sFinalQueryGeneral,finalQueryPaginacion);

					estructuraLogic.getEstructurasFK_IdTipoEstructura(finalQueryGlobal,pagination,id_tipo_estructuraFK_IdTipoEstructura);
				} else if(Constantes.ISUSAEJBREMOTE) {
				this.sDetalleReporte=EstructuraConstantesFunciones.getDetalleIndiceFK_IdTipoEstructura(id_tipo_estructuraFK_IdTipoEstructura);

				
				} else if(Constantes.ISUSAEJBHOME) {
				this.sDetalleReporte=EstructuraConstantesFunciones.getDetalleIndiceFK_IdTipoEstructura(id_tipo_estructuraFK_IdTipoEstructura);

				
				}
				//ARCHITECTURE

				Boolean isNoExiste=false;
				//ARCHITECTURE
				if(Constantes.ISUSAEJBLOGICLAYER) {
					isNoExiste=estructuraLogic.getEstructuras()==null||estructuraLogic.getEstructuras().size()==0;
				} else if(Constantes.ISUSAEJBREMOTE||Constantes.ISUSAEJBHOME) {
					isNoExiste=estructuras==null|| estructuras.size()==0;
				}
				//ARCHITECTURE

		if(false && sTipoArchivoReporte!=""&&sTipoArchivoReporte!=null) {//this.isTipoArchivoReporte
			if(false) {//isMostrarTodosResultadosReporte
				this.pagination.setiFirstResult(-1);
				this.pagination.setiMaxResults(-1);

				//ARCHITECTURE
				if(Constantes.ISUSAEJBLOGICLAYER) {
						estructurasAux=new ArrayList<Estructura>();
						estructurasAux.addAll(estructuraLogic.getEstructuras());
				} else if(Constantes.ISUSAEJBREMOTE || Constantes.ISUSAEJBHOME) {
							estructurasAux=new ArrayList<Estructura>();
							estructurasAux.addAll(estructuras);
				}
				//ARCHITECTURE
								
				
				//ARCHITECTURE
				if(Constantes.ISUSAEJBLOGICLAYER) {
							finalQueryGlobal=Funciones.GetFinalQueryAppendBusqueda(finalQueryGlobal, this.sFinalQueryGeneral,"");
							estructuraLogic.getEstructurasFK_IdTipoEstructura(finalQueryGlobal,pagination,id_tipo_estructuraFK_IdTipoEstructura);
				} else if(Constantes.ISUSAEJBREMOTE) {
				this.sDetalleReporte=EstructuraConstantesFunciones.getDetalleIndiceFK_IdTipoEstructura(id_tipo_estructuraFK_IdTipoEstructura);
						
				} else if(Constantes.ISUSAEJBHOME) {
				this.sDetalleReporte=EstructuraConstantesFunciones.getDetalleIndiceFK_IdTipoEstructura(id_tipo_estructuraFK_IdTipoEstructura);
						
				}
				//ARCHITECTURE
					}
				//ARCHITECTURE
				if(Constantes.ISUSAEJBLOGICLAYER) {
					generarReporteEstructuras("FK_IdTipoEstructura",estructuraLogic.getEstructuras());
				} else if(Constantes.ISUSAEJBREMOTE || Constantes.ISUSAEJBHOME) {
					generarReporteEstructuras("FK_IdTipoEstructura",estructuras);
				}
				//ARCHITECTURE

					if(false) {//isMostrarTodosResultadosReporte
						this.pagination.setiFirstResult(this.iNumeroPaginacionPagina);
						this.pagination.setiMaxResults(this.iNumeroPaginacion);

						//ARCHITECTURE
						if(Constantes.ISUSAEJBLOGICLAYER) {
						estructuraLogic.setEstructuras(new ArrayList<Estructura>());
						estructuraLogic.getEstructuras().addAll(estructurasAux);
						} else if(Constantes.ISUSAEJBREMOTE || Constantes.ISUSAEJBHOME) {
							estructuras=new ArrayList<Estructura>();
							estructuras.addAll(estructurasAux);
						}
						//ARCHITECTURE
					}
				}

			}
			else if(sAccionBusqueda.equals("FK_IdTipoPago_NM")) {
				this.sDetalleReporte=EstructuraConstantesFunciones.getDetalleIndiceFK_IdTipoPago_NM(id_tipo_pago__n_mFK_IdTipoPago_NM);

				
				//ARCHITECTURE
				if(Constantes.ISUSAEJBLOGICLAYER) {

					finalQueryGlobal=Funciones.GetFinalQueryAppendBusqueda(finalQueryGlobal, this.sFinalQueryGeneral,finalQueryPaginacion);

					estructuraLogic.getEstructurasFK_IdTipoPago_NM(finalQueryGlobal,pagination,id_tipo_pago__n_mFK_IdTipoPago_NM);
				} else if(Constantes.ISUSAEJBREMOTE) {
				this.sDetalleReporte=EstructuraConstantesFunciones.getDetalleIndiceFK_IdTipoPago_NM(id_tipo_pago__n_mFK_IdTipoPago_NM);

				
				} else if(Constantes.ISUSAEJBHOME) {
				this.sDetalleReporte=EstructuraConstantesFunciones.getDetalleIndiceFK_IdTipoPago_NM(id_tipo_pago__n_mFK_IdTipoPago_NM);

				
				}
				//ARCHITECTURE

				Boolean isNoExiste=false;
				//ARCHITECTURE
				if(Constantes.ISUSAEJBLOGICLAYER) {
					isNoExiste=estructuraLogic.getEstructuras()==null||estructuraLogic.getEstructuras().size()==0;
				} else if(Constantes.ISUSAEJBREMOTE||Constantes.ISUSAEJBHOME) {
					isNoExiste=estructuras==null|| estructuras.size()==0;
				}
				//ARCHITECTURE

		if(false && sTipoArchivoReporte!=""&&sTipoArchivoReporte!=null) {//this.isTipoArchivoReporte
			if(false) {//isMostrarTodosResultadosReporte
				this.pagination.setiFirstResult(-1);
				this.pagination.setiMaxResults(-1);

				//ARCHITECTURE
				if(Constantes.ISUSAEJBLOGICLAYER) {
						estructurasAux=new ArrayList<Estructura>();
						estructurasAux.addAll(estructuraLogic.getEstructuras());
				} else if(Constantes.ISUSAEJBREMOTE || Constantes.ISUSAEJBHOME) {
							estructurasAux=new ArrayList<Estructura>();
							estructurasAux.addAll(estructuras);
				}
				//ARCHITECTURE
								
				
				//ARCHITECTURE
				if(Constantes.ISUSAEJBLOGICLAYER) {
							finalQueryGlobal=Funciones.GetFinalQueryAppendBusqueda(finalQueryGlobal, this.sFinalQueryGeneral,"");
							estructuraLogic.getEstructurasFK_IdTipoPago_NM(finalQueryGlobal,pagination,id_tipo_pago__n_mFK_IdTipoPago_NM);
				} else if(Constantes.ISUSAEJBREMOTE) {
				this.sDetalleReporte=EstructuraConstantesFunciones.getDetalleIndiceFK_IdTipoPago_NM(id_tipo_pago__n_mFK_IdTipoPago_NM);
						
				} else if(Constantes.ISUSAEJBHOME) {
				this.sDetalleReporte=EstructuraConstantesFunciones.getDetalleIndiceFK_IdTipoPago_NM(id_tipo_pago__n_mFK_IdTipoPago_NM);
						
				}
				//ARCHITECTURE
					}
				//ARCHITECTURE
				if(Constantes.ISUSAEJBLOGICLAYER) {
					generarReporteEstructuras("FK_IdTipoPago_NM",estructuraLogic.getEstructuras());
				} else if(Constantes.ISUSAEJBREMOTE || Constantes.ISUSAEJBHOME) {
					generarReporteEstructuras("FK_IdTipoPago_NM",estructuras);
				}
				//ARCHITECTURE

					if(false) {//isMostrarTodosResultadosReporte
						this.pagination.setiFirstResult(this.iNumeroPaginacionPagina);
						this.pagination.setiMaxResults(this.iNumeroPaginacion);

						//ARCHITECTURE
						if(Constantes.ISUSAEJBLOGICLAYER) {
						estructuraLogic.setEstructuras(new ArrayList<Estructura>());
						estructuraLogic.getEstructuras().addAll(estructurasAux);
						} else if(Constantes.ISUSAEJBREMOTE || Constantes.ISUSAEJBHOME) {
							estructuras=new ArrayList<Estructura>();
							estructuras.addAll(estructurasAux);
						}
						//ARCHITECTURE
					}
				}

			} 
		
		
		
		this.redimensionarTablaDatos();
		//this.refrescarForeignKeysDescripcionesEstructura();
		
		
		if(this.conTotales) {
			this.crearFilaTotales();
		}		
		} catch (JRException e) {
			throw e;
		} catch(Exception e) {
			throw e;
      	} finally {
      		//this.finishProcessEstructura();
      	}
		
	}				
	
	public void redimensionarTablaDatos() throws Exception {
		int iSizeTabla=0;
				
		iSizeTabla=this.getSizeTablaDatos();
		
		//ARCHITECTURE
		/*
		if(Constantes.ISUSAEJBLOGICLAYER) {	
			iSizeTabla=estructuraLogic.getEstructuras().size();
		} else if(Constantes.ISUSAEJBREMOTE || Constantes.ISUSAEJBHOME) {
			iSizeTabla=estructuras.size();
		}
		*/
		//ARCHITECTURE
											
		this.redimensionarTablaDatos(iSizeTabla);		
	}
	
	public Integer getSizeTablaDatos() throws Exception {
		Integer iSizeTabla=0;
				
		//ARCHITECTURE
		if(Constantes.ISUSAEJBLOGICLAYER) {	
			iSizeTabla=estructuraLogic.getEstructuras().size();
		} else if(Constantes.ISUSAEJBREMOTE || Constantes.ISUSAEJBHOME) {
			iSizeTabla=estructuras.size();
		}
		//ARCHITECTURE
											
		return iSizeTabla;		
	}
	
			
	public Boolean permiteMantenimiento(Estructura estructura) {
		Boolean permite=true;
		
		if(this.estructura.getsType().equals(Constantes2.S_TOTALES)) {
			permite=false;
		}
		
		return permite;
	}
	
	public void traerValoresTablaTotales() throws Exception {
	}
	
	
	public void traerValoresTablaOrderBy() throws Exception {
		if(Constantes.ISUSAEJBLOGICLAYER) {
			this.arrOrderBy=EstructuraConstantesFunciones.getOrderByListaEstructura();							
		} else if(Constantes.ISUSAEJBREMOTE || Constantes.ISUSAEJBHOME) {
			this.arrOrderBy=EstructuraConstantesFunciones.getOrderByListaEstructura();
		}		
	}
	
	
	public Boolean existeFilaTotales() throws Exception {
		Boolean existe=false;
		
		if(Constantes.ISUSAEJBLOGICLAYER) {
			for(Estructura estructura:estructuraLogic.getEstructuras()) {
				if(estructura.getsType().equals(Constantes2.S_TOTALES)) {
					estructuraTotales=estructura;
					existe=true;
					break;
				}
			}
								
		} else if(Constantes.ISUSAEJBREMOTE || Constantes.ISUSAEJBHOME) {
			for(Estructura estructura:this.estructuras) {
				if(estructura.getsType().equals(Constantes2.S_TOTALES)) {
					estructuraTotales=estructura;
					existe=true;
					break;
				}
			}
		}
		
		return existe;
	}
	
	public void crearFilaTotales() throws Exception {
		Boolean existe=false;
		
		existe=this.existeFilaTotales();
		
		if(!existe) {
			//SI NO ES UNO A UNO SE CREA FILA TOTALES
			this.estructuraAux=new Estructura();
			this.estructuraAux.setsType(Constantes2.S_TOTALES);
			this.estructuraAux.setIsNew(false);
			this.estructuraAux.setIsChanged(false);
			this.estructuraAux.setIsDeleted(false);
				
			if(Constantes.ISUSAEJBLOGICLAYER) {
				EstructuraConstantesFunciones.TotalizarValoresFilaEstructura(this.estructuraLogic.getEstructuras(),this.estructuraAux);
				
				this.estructuraLogic.getEstructuras().add(this.estructuraAux);
				
			} else if(Constantes.ISUSAEJBREMOTE || Constantes.ISUSAEJBHOME) {
				EstructuraConstantesFunciones.TotalizarValoresFilaEstructura(this.estructuras,this.estructuraAux);
				
				this.estructuras.add(this.estructuraAux);
			}
		}
	}
	
	public void quitarFilaTotales() throws Exception {
		estructuraTotales=new Estructura();
		Boolean existe=false;
		
		if(Constantes.ISUSAEJBLOGICLAYER) {
			existe=this.existeFilaTotales();
			
			if(existe) {
				this.estructuraLogic.getEstructuras().remove(estructuraTotales);
			}			
		} else if(Constantes.ISUSAEJBREMOTE || Constantes.ISUSAEJBHOME) {
			existe=this.existeFilaTotales();
			
			if(existe) {
				this.estructuras.remove(estructuraTotales);
			}
		}
	}
	
	public void actualizarFilaTotales() throws Exception {
		estructuraTotales=new Estructura();
		Boolean existe=false;
		
		if(Constantes.ISUSAEJBLOGICLAYER) {
			for(Estructura estructura:estructuraLogic.getEstructuras()) {
				if(estructura.getsType().equals(Constantes2.S_TOTALES)) {
					estructuraTotales=estructura;
					existe=true;
					break;
				}
			}
			
			if(existe) {
				EstructuraConstantesFunciones.TotalizarValoresFilaEstructura(this.estructuraLogic.getEstructuras(),estructuraTotales);
			}			
		} else if(Constantes.ISUSAEJBREMOTE || Constantes.ISUSAEJBHOME) {
			for(Estructura estructura:this.estructuras) {
				if(estructura.getsType().equals(Constantes2.S_TOTALES)) {
					estructuraTotales=estructura;
					existe=true;
					break;
				}
			}
			
			if(existe) {
				EstructuraConstantesFunciones.TotalizarValoresFilaEstructura(this.estructuras,estructuraTotales);
			}
		}
	}		
	
	public void recargarInformacion()throws Exception {
		try {
			sAccionBusqueda="Todos";
			this.iNumeroPaginacionPagina=0;
			
			this.procesarBusqueda(sAccionBusqueda);
			
		} catch(Exception e) {
			FuncionesSwing.manageException(this, e,logger,EstructuraConstantesFunciones.CLASSNAME);
		}	
	}		
	
	
	public void getEstructurasFK_IdCiudad()throws Exception {
		try {
			sAccionBusqueda="FK_IdCiudad";
			this.iNumeroPaginacionPagina=0;
			this.procesarBusqueda(sAccionBusqueda);

		} catch(Exception e) {
			FuncionesSwing.manageException(this, e,logger);
		}
	}

	public void getEstructurasFK_IdCuentaContable()throws Exception {
		try {
			sAccionBusqueda="FK_IdCuentaContable";
			this.iNumeroPaginacionPagina=0;
			this.procesarBusqueda(sAccionBusqueda);

		} catch(Exception e) {
			FuncionesSwing.manageException(this, e,logger);
		}
	}

	public void getEstructurasFK_IdEmpresa()throws Exception {
		try {
			sAccionBusqueda="FK_IdEmpresa";
			this.iNumeroPaginacionPagina=0;
			this.procesarBusqueda(sAccionBusqueda);

		} catch(Exception e) {
			FuncionesSwing.manageException(this, e,logger);
		}
	}

	public void getEstructurasFK_IdEstructura()throws Exception {
		try {
			sAccionBusqueda="FK_IdEstructura";
			this.iNumeroPaginacionPagina=0;
			this.procesarBusqueda(sAccionBusqueda);

		} catch(Exception e) {
			FuncionesSwing.manageException(this, e,logger);
		}
	}

	public void getEstructurasFK_IdNumeroPatronal()throws Exception {
		try {
			sAccionBusqueda="FK_IdNumeroPatronal";
			this.iNumeroPaginacionPagina=0;
			this.procesarBusqueda(sAccionBusqueda);

		} catch(Exception e) {
			FuncionesSwing.manageException(this, e,logger);
		}
	}

	public void getEstructurasFK_IdPais()throws Exception {
		try {
			sAccionBusqueda="FK_IdPais";
			this.iNumeroPaginacionPagina=0;
			this.procesarBusqueda(sAccionBusqueda);

		} catch(Exception e) {
			FuncionesSwing.manageException(this, e,logger);
		}
	}

	public void getEstructurasFK_IdSucursal()throws Exception {
		try {
			sAccionBusqueda="FK_IdSucursal";
			this.iNumeroPaginacionPagina=0;
			this.procesarBusqueda(sAccionBusqueda);

		} catch(Exception e) {
			FuncionesSwing.manageException(this, e,logger);
		}
	}

	public void getEstructurasFK_IdTipoEstructura()throws Exception {
		try {
			sAccionBusqueda="FK_IdTipoEstructura";
			this.iNumeroPaginacionPagina=0;
			this.procesarBusqueda(sAccionBusqueda);

		} catch(Exception e) {
			FuncionesSwing.manageException(this, e,logger);
		}
	}

	public void getEstructurasFK_IdTipoPago_NM()throws Exception {
		try {
			sAccionBusqueda="FK_IdTipoPago_NM";
			this.iNumeroPaginacionPagina=0;
			this.procesarBusqueda(sAccionBusqueda);

		} catch(Exception e) {
			FuncionesSwing.manageException(this, e,logger);
		}
	}

	
	
	public void getEstructurasFK_IdCiudad(String sFinalQuery,Long id_ciudad)throws Exception {
		try {
			
			this.pagination=new Pagination();
			this.pagination.setiFirstResult(this.iNumeroPaginacionPagina);
			this.pagination.setiMaxResults(this.iNumeroPaginacion);

				//ARCHITECTURE
				if(Constantes.ISUSAEJBLOGICLAYER) {
					estructuraLogic.getEstructurasFK_IdCiudad(sFinalQuery,this.pagination,id_ciudad);
				
				} else if(Constantes.ISUSAEJBREMOTE) {
				
				} else if(Constantes.ISUSAEJBHOME) {
				
				}
				//ARCHITECTURE
		} catch(Exception e) {
			throw e;
		}
	}

	public void getEstructurasFK_IdCuentaContable(String sFinalQuery,Long id_cuenta_contable)throws Exception {
		try {
			
			this.pagination=new Pagination();
			this.pagination.setiFirstResult(this.iNumeroPaginacionPagina);
			this.pagination.setiMaxResults(this.iNumeroPaginacion);

				//ARCHITECTURE
				if(Constantes.ISUSAEJBLOGICLAYER) {
					estructuraLogic.getEstructurasFK_IdCuentaContable(sFinalQuery,this.pagination,id_cuenta_contable);
				
				} else if(Constantes.ISUSAEJBREMOTE) {
				
				} else if(Constantes.ISUSAEJBHOME) {
				
				}
				//ARCHITECTURE
		} catch(Exception e) {
			throw e;
		}
	}

	public void getEstructurasFK_IdEmpresa(String sFinalQuery,Long id_empresa)throws Exception {
		try {
			
			this.pagination=new Pagination();
			this.pagination.setiFirstResult(this.iNumeroPaginacionPagina);
			this.pagination.setiMaxResults(this.iNumeroPaginacion);

				//ARCHITECTURE
				if(Constantes.ISUSAEJBLOGICLAYER) {
					estructuraLogic.getEstructurasFK_IdEmpresa(sFinalQuery,this.pagination,id_empresa);
				
				} else if(Constantes.ISUSAEJBREMOTE) {
				
				} else if(Constantes.ISUSAEJBHOME) {
				
				}
				//ARCHITECTURE
		} catch(Exception e) {
			throw e;
		}
	}

	public void getEstructurasFK_IdEstructura(String sFinalQuery,Long id_estructura)throws Exception {
		try {
			
			this.pagination=new Pagination();
			this.pagination.setiFirstResult(this.iNumeroPaginacionPagina);
			this.pagination.setiMaxResults(this.iNumeroPaginacion);

				//ARCHITECTURE
				if(Constantes.ISUSAEJBLOGICLAYER) {
					estructuraLogic.getEstructurasFK_IdEstructura(sFinalQuery,this.pagination,id_estructura);
				
				} else if(Constantes.ISUSAEJBREMOTE) {
				
				} else if(Constantes.ISUSAEJBHOME) {
				
				}
				//ARCHITECTURE
		} catch(Exception e) {
			throw e;
		}
	}

	public void getEstructurasFK_IdNumeroPatronal(String sFinalQuery,Long id_numero_patronal)throws Exception {
		try {
			
			this.pagination=new Pagination();
			this.pagination.setiFirstResult(this.iNumeroPaginacionPagina);
			this.pagination.setiMaxResults(this.iNumeroPaginacion);

				//ARCHITECTURE
				if(Constantes.ISUSAEJBLOGICLAYER) {
					estructuraLogic.getEstructurasFK_IdNumeroPatronal(sFinalQuery,this.pagination,id_numero_patronal);
				
				} else if(Constantes.ISUSAEJBREMOTE) {
				
				} else if(Constantes.ISUSAEJBHOME) {
				
				}
				//ARCHITECTURE
		} catch(Exception e) {
			throw e;
		}
	}

	public void getEstructurasFK_IdPais(String sFinalQuery,Long id_pais)throws Exception {
		try {
			
			this.pagination=new Pagination();
			this.pagination.setiFirstResult(this.iNumeroPaginacionPagina);
			this.pagination.setiMaxResults(this.iNumeroPaginacion);

				//ARCHITECTURE
				if(Constantes.ISUSAEJBLOGICLAYER) {
					estructuraLogic.getEstructurasFK_IdPais(sFinalQuery,this.pagination,id_pais);
				
				} else if(Constantes.ISUSAEJBREMOTE) {
				
				} else if(Constantes.ISUSAEJBHOME) {
				
				}
				//ARCHITECTURE
		} catch(Exception e) {
			throw e;
		}
	}

	public void getEstructurasFK_IdSucursal(String sFinalQuery,Long id_sucursal)throws Exception {
		try {
			
			this.pagination=new Pagination();
			this.pagination.setiFirstResult(this.iNumeroPaginacionPagina);
			this.pagination.setiMaxResults(this.iNumeroPaginacion);

				//ARCHITECTURE
				if(Constantes.ISUSAEJBLOGICLAYER) {
					estructuraLogic.getEstructurasFK_IdSucursal(sFinalQuery,this.pagination,id_sucursal);
				
				} else if(Constantes.ISUSAEJBREMOTE) {
				
				} else if(Constantes.ISUSAEJBHOME) {
				
				}
				//ARCHITECTURE
		} catch(Exception e) {
			throw e;
		}
	}

	public void getEstructurasFK_IdTipoEstructura(String sFinalQuery,Long id_tipo_estructura)throws Exception {
		try {
			
			this.pagination=new Pagination();
			this.pagination.setiFirstResult(this.iNumeroPaginacionPagina);
			this.pagination.setiMaxResults(this.iNumeroPaginacion);

				//ARCHITECTURE
				if(Constantes.ISUSAEJBLOGICLAYER) {
					estructuraLogic.getEstructurasFK_IdTipoEstructura(sFinalQuery,this.pagination,id_tipo_estructura);
				
				} else if(Constantes.ISUSAEJBREMOTE) {
				
				} else if(Constantes.ISUSAEJBHOME) {
				
				}
				//ARCHITECTURE
		} catch(Exception e) {
			throw e;
		}
	}

	public void getEstructurasFK_IdTipoPago_NM(String sFinalQuery,Long id_tipo_pago__n_m)throws Exception {
		try {
			
			this.pagination=new Pagination();
			this.pagination.setiFirstResult(this.iNumeroPaginacionPagina);
			this.pagination.setiMaxResults(this.iNumeroPaginacion);

				//ARCHITECTURE
				if(Constantes.ISUSAEJBLOGICLAYER) {
					estructuraLogic.getEstructurasFK_IdTipoPago_NM(sFinalQuery,this.pagination,id_tipo_pago__n_m);
				
				} else if(Constantes.ISUSAEJBREMOTE) {
				
				} else if(Constantes.ISUSAEJBHOME) {
				
				}
				//ARCHITECTURE
		} catch(Exception e) {
			throw e;
		}
	}

	
	public void onLoad()throws Exception {		
		try {		
			isEntroOnLoad=true;
			//INTENTA TRAER DATOS DE BUSQUEDA ANTERIOR
			this.traerDatosBusquedaDesdeSession();
					
			//SINO SE CUMPLE VIENE DE PADRE FOREIGN O BUSQUEDA ANTIGUA
			if(this.sAccionBusqueda.equals("")) {
				this.sAccionBusqueda="Todos";
			}
								
			this.procesarBusqueda(sAccionBusqueda);
			
		} catch (Exception e) {
			throw e;
		}
	}		
	
	public void inicializarPermisosEstructura() {
		this.isPermisoTodoEstructura=false;
		this.isPermisoNuevoEstructura=false;
		this.isPermisoActualizarEstructura=false;
		this.isPermisoActualizarOriginalEstructura=false;
		this.isPermisoEliminarEstructura=false;
		this.isPermisoGuardarCambiosEstructura=false;
		this.isPermisoConsultaEstructura=false;
		this.isPermisoBusquedaEstructura=false;
		this.isPermisoReporteEstructura=false;		
		this.isPermisoOrdenEstructura=false;		
		this.isPermisoPaginacionMedioEstructura=false;		
		this.isPermisoPaginacionAltoEstructura=false;
		this.isPermisoPaginacionTodoEstructura=false;
		this.isPermisoCopiarEstructura=false;		
		this.isPermisoVerFormEstructura=false;		
		this.isPermisoDuplicarEstructura=false;		
		this.isPermisoOrdenEstructura=false;		
	}
	
	public void setPermisosUsuarioEstructura(Boolean isPermiso) {
		this.isPermisoTodoEstructura=isPermiso;
		this.isPermisoNuevoEstructura=isPermiso;
		this.isPermisoActualizarEstructura=isPermiso;
		this.isPermisoActualizarOriginalEstructura=isPermiso;
		this.isPermisoEliminarEstructura=isPermiso;
		this.isPermisoGuardarCambiosEstructura=isPermiso;
		this.isPermisoConsultaEstructura=isPermiso;
		this.isPermisoBusquedaEstructura=isPermiso;
		this.isPermisoReporteEstructura=isPermiso;
		this.isPermisoOrdenEstructura=isPermiso;		
		this.isPermisoPaginacionMedioEstructura=isPermiso;		
		this.isPermisoPaginacionAltoEstructura=isPermiso;		
		this.isPermisoPaginacionTodoEstructura=isPermiso;		
		this.isPermisoCopiarEstructura=isPermiso;		
		this.isPermisoVerFormEstructura=isPermiso;		
		this.isPermisoDuplicarEstructura=isPermiso;
		this.isPermisoOrdenEstructura=isPermiso;
	}
	
	public void setPermisosMantenimientoUsuarioEstructura(Boolean isPermiso) {
		//this.isPermisoTodoEstructura=isPermiso;
		this.isPermisoNuevoEstructura=isPermiso;
		this.isPermisoActualizarEstructura=isPermiso;
		this.isPermisoActualizarOriginalEstructura=isPermiso;
		this.isPermisoEliminarEstructura=isPermiso;
		this.isPermisoGuardarCambiosEstructura=isPermiso;
		//this.isPermisoConsultaEstructura=isPermiso;
		//this.isPermisoBusquedaEstructura=isPermiso;
		//this.isPermisoReporteEstructura=isPermiso;
		//this.isPermisoOrdenEstructura=isPermiso;		
		//this.isPermisoPaginacionMedioEstructura=isPermiso;		
		//this.isPermisoPaginacionAltoEstructura=isPermiso;		
		//this.isPermisoPaginacionTodoEstructura=isPermiso;		
		//this.isPermisoCopiarEstructura=isPermiso;		
		//this.isPermisoDuplicarEstructura=isPermiso;
		//this.isPermisoOrdenEstructura=isPermiso;
	}
	
	public void inicializarSetPermisosUsuarioEstructuraClasesRelacionadas() throws Exception {
		ArrayList<String> arrPaginas=new ArrayList<String>();		
		ArrayList<Opcion> opcionsFinal=new ArrayList<Opcion>();	
		
		arrPaginas.add(CentroCostoEstructuraConstantesFunciones.SNOMBREOPCION);
		arrPaginas.add(PlaniVacacionConstantesFunciones.SNOMBREOPCION);
		arrPaginas.add(AsistenciaMensualConstantesFunciones.SNOMBREOPCION);
		arrPaginas.add(EmpleadoProcesoRubroConstantesFunciones.SNOMBREOPCION);
		arrPaginas.add(EmpleadoPagoRubroConstantesFunciones.SNOMBREOPCION);
		arrPaginas.add(ProvisionEmpleadoConstantesFunciones.SNOMBREOPCION);
		arrPaginas.add(EmpleadoConstantesFunciones.SNOMBREOPCION);
		arrPaginas.add(EstructuraConstantesFunciones.SNOMBREOPCION);
		arrPaginas.add(EvaluacionEmpleadoConstantesFunciones.SNOMBREOPCION);
		arrPaginas.add(EmpleadoImpuestoRentaConstantesFunciones.SNOMBREOPCION);
		arrPaginas.add(RubroEstructuraConstantesFunciones.SNOMBREOPCION);
		arrPaginas.add(CierreRolMensualConstantesFunciones.SNOMBREOPCION);
		arrPaginas.add(FormatoNomiConstantesFunciones.SNOMBREOPCION);
		arrPaginas.add(EmpleadoEstructuraConstantesFunciones.SNOMBREOPCION);
		arrPaginas.add(HistorialPagoNomiConstantesFunciones.SNOMBREOPCION);
		arrPaginas.add(AsistenciaDiariaConstantesFunciones.SNOMBREOPCION);
		arrPaginas.add(FuncionEstrucConstantesFunciones.SNOMBREOPCION);
		arrPaginas.add(SolicitudReemplazoConstantesFunciones.SNOMBREOPCION);
		arrPaginas.add(SolicitudHoraExtraConstantesFunciones.SNOMBREOPCION);
		arrPaginas.add(EvaluacionNomiConstantesFunciones.SNOMBREOPCION);
		arrPaginas.add(SolicitudVacacionConstantesFunciones.SNOMBREOPCION);
		arrPaginas.add(ResponsableActivoFijoConstantesFunciones.SNOMBREOPCION);
		arrPaginas.add(RubroEmpleaCuentaContableConstantesFunciones.SNOMBREOPCION);
		
		if(EstructuraJInternalFrame.CON_LLAMADA_SIMPLE) {
			this.opcionsRelacionadas.addAll(this.sistemaReturnGeneral.getOpcionsRelacionadas());
			
		} else {
			if(Constantes.ISUSAEJBLOGICLAYER) {
				opcionsFinal=sistemaLogicAdditional.tienePermisosOpcionesEnPaginaWeb(this.usuarioActual, Constantes.LIDSISTEMAACTUAL, arrPaginas);
			} else if(Constantes.ISUSAEJBREMOTE) {
			} else if(Constantes.ISUSAEJBHOME) {
			}
			
			this.opcionsRelacionadas.addAll(opcionsFinal);
		}
		
		

		this.isTienePermisosCentroCostoEstructura=false;
		this.isTienePermisosCentroCostoEstructura=this.verificarGetPermisosUsuarioOpcionEstructuraClaseRelacionada(this.opcionsRelacionadas,CentroCostoEstructuraConstantesFunciones.SNOMBREOPCION);

		this.isTienePermisosPlaniVacacion=false;
		this.isTienePermisosPlaniVacacion=this.verificarGetPermisosUsuarioOpcionEstructuraClaseRelacionada(this.opcionsRelacionadas,PlaniVacacionConstantesFunciones.SNOMBREOPCION);

		this.isTienePermisosAsistenciaMensual=false;
		this.isTienePermisosAsistenciaMensual=this.verificarGetPermisosUsuarioOpcionEstructuraClaseRelacionada(this.opcionsRelacionadas,AsistenciaMensualConstantesFunciones.SNOMBREOPCION);

		this.isTienePermisosEmpleadoProcesoRubro=false;
		this.isTienePermisosEmpleadoProcesoRubro=this.verificarGetPermisosUsuarioOpcionEstructuraClaseRelacionada(this.opcionsRelacionadas,EmpleadoProcesoRubroConstantesFunciones.SNOMBREOPCION);

		this.isTienePermisosEmpleadoPagoRubro=false;
		this.isTienePermisosEmpleadoPagoRubro=this.verificarGetPermisosUsuarioOpcionEstructuraClaseRelacionada(this.opcionsRelacionadas,EmpleadoPagoRubroConstantesFunciones.SNOMBREOPCION);

		this.isTienePermisosProvisionEmpleado=false;
		this.isTienePermisosProvisionEmpleado=this.verificarGetPermisosUsuarioOpcionEstructuraClaseRelacionada(this.opcionsRelacionadas,ProvisionEmpleadoConstantesFunciones.SNOMBREOPCION);

		this.isTienePermisosEmpleado=false;
		this.isTienePermisosEmpleado=this.verificarGetPermisosUsuarioOpcionEstructuraClaseRelacionada(this.opcionsRelacionadas,EmpleadoConstantesFunciones.SNOMBREOPCION);

		this.isTienePermisosEstructura=false;
		this.isTienePermisosEstructura=this.verificarGetPermisosUsuarioOpcionEstructuraClaseRelacionada(this.opcionsRelacionadas,EstructuraConstantesFunciones.SNOMBREOPCION);

		this.isTienePermisosEvaluacionEmpleado=false;
		this.isTienePermisosEvaluacionEmpleado=this.verificarGetPermisosUsuarioOpcionEstructuraClaseRelacionada(this.opcionsRelacionadas,EvaluacionEmpleadoConstantesFunciones.SNOMBREOPCION);

		this.isTienePermisosEmpleadoImpuestoRenta=false;
		this.isTienePermisosEmpleadoImpuestoRenta=this.verificarGetPermisosUsuarioOpcionEstructuraClaseRelacionada(this.opcionsRelacionadas,EmpleadoImpuestoRentaConstantesFunciones.SNOMBREOPCION);

		this.isTienePermisosRubroEstructura=false;
		this.isTienePermisosRubroEstructura=this.verificarGetPermisosUsuarioOpcionEstructuraClaseRelacionada(this.opcionsRelacionadas,RubroEstructuraConstantesFunciones.SNOMBREOPCION);

		this.isTienePermisosCierreRolMensual=false;
		this.isTienePermisosCierreRolMensual=this.verificarGetPermisosUsuarioOpcionEstructuraClaseRelacionada(this.opcionsRelacionadas,CierreRolMensualConstantesFunciones.SNOMBREOPCION);

		this.isTienePermisosFormatoNomi=false;
		this.isTienePermisosFormatoNomi=this.verificarGetPermisosUsuarioOpcionEstructuraClaseRelacionada(this.opcionsRelacionadas,FormatoNomiConstantesFunciones.SNOMBREOPCION);

		this.isTienePermisosEmpleadoEstructura=false;
		this.isTienePermisosEmpleadoEstructura=this.verificarGetPermisosUsuarioOpcionEstructuraClaseRelacionada(this.opcionsRelacionadas,EmpleadoEstructuraConstantesFunciones.SNOMBREOPCION);

		this.isTienePermisosHistorialPagoNomi=false;
		this.isTienePermisosHistorialPagoNomi=this.verificarGetPermisosUsuarioOpcionEstructuraClaseRelacionada(this.opcionsRelacionadas,HistorialPagoNomiConstantesFunciones.SNOMBREOPCION);

		this.isTienePermisosAsistenciaDiaria=false;
		this.isTienePermisosAsistenciaDiaria=this.verificarGetPermisosUsuarioOpcionEstructuraClaseRelacionada(this.opcionsRelacionadas,AsistenciaDiariaConstantesFunciones.SNOMBREOPCION);

		this.isTienePermisosFuncionEstruc=false;
		this.isTienePermisosFuncionEstruc=this.verificarGetPermisosUsuarioOpcionEstructuraClaseRelacionada(this.opcionsRelacionadas,FuncionEstrucConstantesFunciones.SNOMBREOPCION);

		this.isTienePermisosSolicitudReemplazo=false;
		this.isTienePermisosSolicitudReemplazo=this.verificarGetPermisosUsuarioOpcionEstructuraClaseRelacionada(this.opcionsRelacionadas,SolicitudReemplazoConstantesFunciones.SNOMBREOPCION);

		this.isTienePermisosSolicitudHoraExtra=false;
		this.isTienePermisosSolicitudHoraExtra=this.verificarGetPermisosUsuarioOpcionEstructuraClaseRelacionada(this.opcionsRelacionadas,SolicitudHoraExtraConstantesFunciones.SNOMBREOPCION);

		this.isTienePermisosEvaluacionNomi=false;
		this.isTienePermisosEvaluacionNomi=this.verificarGetPermisosUsuarioOpcionEstructuraClaseRelacionada(this.opcionsRelacionadas,EvaluacionNomiConstantesFunciones.SNOMBREOPCION);

		this.isTienePermisosSolicitudVacacion=false;
		this.isTienePermisosSolicitudVacacion=this.verificarGetPermisosUsuarioOpcionEstructuraClaseRelacionada(this.opcionsRelacionadas,SolicitudVacacionConstantesFunciones.SNOMBREOPCION);

		this.isTienePermisosResponsableActivoFijo=false;
		this.isTienePermisosResponsableActivoFijo=this.verificarGetPermisosUsuarioOpcionEstructuraClaseRelacionada(this.opcionsRelacionadas,ResponsableActivoFijoConstantesFunciones.SNOMBREOPCION);

		this.isTienePermisosRubroEmpleaCuentaContable=false;
		this.isTienePermisosRubroEmpleaCuentaContable=this.verificarGetPermisosUsuarioOpcionEstructuraClaseRelacionada(this.opcionsRelacionadas,RubroEmpleaCuentaContableConstantesFunciones.SNOMBREOPCION);
		
	}
	
	public Boolean tienePermisosUsuarioEnPaginaWebEstructura(String sPagina) throws Exception {
		Boolean tienePermisos=false;
		
		if(Constantes.ISUSAEJBLOGICLAYER) {
			tienePermisos=sistemaLogicAdditional.tienePermisosEnPaginaWeb(this.usuarioActual, Constantes.LIDSISTEMAACTUAL, sPagina);
		} else if(Constantes.ISUSAEJBREMOTE) {
		} else if(Constantes.ISUSAEJBHOME) {
		}
		
		return tienePermisos;
	}
	
	public void inicializarSetPermisosUsuarioEstructuraClasesRelacionadas(Boolean conPermiso) throws Exception {
		
		this.isTienePermisosCentroCostoEstructura=conPermiso;
		this.isTienePermisosPlaniVacacion=conPermiso;
		this.isTienePermisosAsistenciaMensual=conPermiso;
		this.isTienePermisosEmpleadoProcesoRubro=conPermiso;
		this.isTienePermisosEmpleadoPagoRubro=conPermiso;
		this.isTienePermisosProvisionEmpleado=conPermiso;
		this.isTienePermisosEmpleado=conPermiso;
		this.isTienePermisosEstructura=conPermiso;
		this.isTienePermisosEvaluacionEmpleado=conPermiso;
		this.isTienePermisosEmpleadoImpuestoRenta=conPermiso;
		this.isTienePermisosRubroEstructura=conPermiso;
		this.isTienePermisosCierreRolMensual=conPermiso;
		this.isTienePermisosFormatoNomi=conPermiso;
		this.isTienePermisosEmpleadoEstructura=conPermiso;
		this.isTienePermisosHistorialPagoNomi=conPermiso;
		this.isTienePermisosAsistenciaDiaria=conPermiso;
		this.isTienePermisosFuncionEstruc=conPermiso;
		this.isTienePermisosSolicitudReemplazo=conPermiso;
		this.isTienePermisosSolicitudHoraExtra=conPermiso;
		this.isTienePermisosEvaluacionNomi=conPermiso;
		this.isTienePermisosSolicitudVacacion=conPermiso;
		this.isTienePermisosResponsableActivoFijo=conPermiso;
		this.isTienePermisosRubroEmpleaCuentaContable=conPermiso;
	}
	
	public Boolean verificarGetPermisosUsuarioEstructuraClaseRelacionada(ArrayList<String> arrPaginasFinal,String sPaginaActual) throws Exception {
		Boolean verificado=false;
		
		verificado=Funciones2.verificarGetPermisosUsuarioClaseRelacionada(arrPaginasFinal,sPaginaActual);				
		
		return verificado;
	}
	
	public Boolean verificarGetPermisosUsuarioOpcionEstructuraClaseRelacionada(List<Opcion> opcionsFinal,String sPaginaActual) throws Exception {
		Boolean verificado=false;
		
		verificado=Funciones2.verificarGetPermisosUsuarioOpcionClaseRelacionada(opcionsFinal,sPaginaActual);				
		
		return verificado;
	}
	
	public void actualizarTabsSetPermisosUsuarioEstructuraClasesRelacionadas() throws Exception {
		

		if(!this.isTienePermisosCentroCostoEstructura && this.jInternalFrameDetalleFormEstructura!=null && this.jInternalFrameDetalleFormEstructura.centrocostoestructuraBeanSwingJInternalFrame!=null) {
			this.jInternalFrameDetalleFormEstructura.jTabbedPaneRelacionesEstructura.remove(this.jInternalFrameDetalleFormEstructura.centrocostoestructuraBeanSwingJInternalFrame.getContentPane());
		}

		if(!this.isTienePermisosPlaniVacacion && this.jInternalFrameDetalleFormEstructura!=null && this.jInternalFrameDetalleFormEstructura.planivacacionBeanSwingJInternalFrame!=null) {
			this.jInternalFrameDetalleFormEstructura.jTabbedPaneRelacionesEstructura.remove(this.jInternalFrameDetalleFormEstructura.planivacacionBeanSwingJInternalFrame.getContentPane());
		}

		if(!this.isTienePermisosAsistenciaMensual && this.jInternalFrameDetalleFormEstructura!=null && this.jInternalFrameDetalleFormEstructura.asistenciamensualBeanSwingJInternalFrame!=null) {
			this.jInternalFrameDetalleFormEstructura.jTabbedPaneRelacionesEstructura.remove(this.jInternalFrameDetalleFormEstructura.asistenciamensualBeanSwingJInternalFrame.getContentPane());
		}

		if(!this.isTienePermisosEmpleadoProcesoRubro && this.jInternalFrameDetalleFormEstructura!=null && this.jInternalFrameDetalleFormEstructura.empleadoprocesorubroBeanSwingJInternalFrame!=null) {
			this.jInternalFrameDetalleFormEstructura.jTabbedPaneRelacionesEstructura.remove(this.jInternalFrameDetalleFormEstructura.empleadoprocesorubroBeanSwingJInternalFrame.getContentPane());
		}

		if(!this.isTienePermisosEmpleadoPagoRubro && this.jInternalFrameDetalleFormEstructura!=null && this.jInternalFrameDetalleFormEstructura.empleadopagorubroBeanSwingJInternalFrame!=null) {
			this.jInternalFrameDetalleFormEstructura.jTabbedPaneRelacionesEstructura.remove(this.jInternalFrameDetalleFormEstructura.empleadopagorubroBeanSwingJInternalFrame.getContentPane());
		}

		if(!this.isTienePermisosProvisionEmpleado && this.jInternalFrameDetalleFormEstructura!=null && this.jInternalFrameDetalleFormEstructura.provisionempleadoBeanSwingJInternalFrame!=null) {
			this.jInternalFrameDetalleFormEstructura.jTabbedPaneRelacionesEstructura.remove(this.jInternalFrameDetalleFormEstructura.provisionempleadoBeanSwingJInternalFrame.getContentPane());
		}

		if(!this.isTienePermisosEmpleado && this.jInternalFrameDetalleFormEstructura!=null && this.jInternalFrameDetalleFormEstructura.empleadoBeanSwingJInternalFrame!=null) {
			this.jInternalFrameDetalleFormEstructura.jTabbedPaneRelacionesEstructura.remove(this.jInternalFrameDetalleFormEstructura.empleadoBeanSwingJInternalFrame.getContentPane());
		}

		if(!this.isTienePermisosEstructura && this.jInternalFrameDetalleFormEstructura!=null && this.jInternalFrameDetalleFormEstructura.estructuraBeanSwingJInternalFrame!=null) {
			this.jInternalFrameDetalleFormEstructura.jTabbedPaneRelacionesEstructura.remove(this.jInternalFrameDetalleFormEstructura.estructuraBeanSwingJInternalFrame.getContentPane());
		}

		if(!this.isTienePermisosEvaluacionEmpleado && this.jInternalFrameDetalleFormEstructura!=null && this.jInternalFrameDetalleFormEstructura.evaluacionempleadoBeanSwingJInternalFrame!=null) {
			this.jInternalFrameDetalleFormEstructura.jTabbedPaneRelacionesEstructura.remove(this.jInternalFrameDetalleFormEstructura.evaluacionempleadoBeanSwingJInternalFrame.getContentPane());
		}

		if(!this.isTienePermisosEmpleadoImpuestoRenta && this.jInternalFrameDetalleFormEstructura!=null && this.jInternalFrameDetalleFormEstructura.empleadoimpuestorentaBeanSwingJInternalFrame!=null) {
			this.jInternalFrameDetalleFormEstructura.jTabbedPaneRelacionesEstructura.remove(this.jInternalFrameDetalleFormEstructura.empleadoimpuestorentaBeanSwingJInternalFrame.getContentPane());
		}

		if(!this.isTienePermisosRubroEstructura && this.jInternalFrameDetalleFormEstructura!=null && this.jInternalFrameDetalleFormEstructura.rubroestructuraBeanSwingJInternalFrame!=null) {
			this.jInternalFrameDetalleFormEstructura.jTabbedPaneRelacionesEstructura.remove(this.jInternalFrameDetalleFormEstructura.rubroestructuraBeanSwingJInternalFrame.getContentPane());
		}

		if(!this.isTienePermisosCierreRolMensual && this.jInternalFrameDetalleFormEstructura!=null && this.jInternalFrameDetalleFormEstructura.cierrerolmensualBeanSwingJInternalFrame!=null) {
			this.jInternalFrameDetalleFormEstructura.jTabbedPaneRelacionesEstructura.remove(this.jInternalFrameDetalleFormEstructura.cierrerolmensualBeanSwingJInternalFrame.getContentPane());
		}

		if(!this.isTienePermisosFormatoNomi && this.jInternalFrameDetalleFormEstructura!=null && this.jInternalFrameDetalleFormEstructura.formatonomiBeanSwingJInternalFrame!=null) {
			this.jInternalFrameDetalleFormEstructura.jTabbedPaneRelacionesEstructura.remove(this.jInternalFrameDetalleFormEstructura.formatonomiBeanSwingJInternalFrame.getContentPane());
		}

		if(!this.isTienePermisosEmpleadoEstructura && this.jInternalFrameDetalleFormEstructura!=null && this.jInternalFrameDetalleFormEstructura.empleadoestructuraBeanSwingJInternalFrame!=null) {
			this.jInternalFrameDetalleFormEstructura.jTabbedPaneRelacionesEstructura.remove(this.jInternalFrameDetalleFormEstructura.empleadoestructuraBeanSwingJInternalFrame.getContentPane());
		}

		if(!this.isTienePermisosHistorialPagoNomi && this.jInternalFrameDetalleFormEstructura!=null && this.jInternalFrameDetalleFormEstructura.historialpagonomiBeanSwingJInternalFrame!=null) {
			this.jInternalFrameDetalleFormEstructura.jTabbedPaneRelacionesEstructura.remove(this.jInternalFrameDetalleFormEstructura.historialpagonomiBeanSwingJInternalFrame.getContentPane());
		}

		if(!this.isTienePermisosAsistenciaDiaria && this.jInternalFrameDetalleFormEstructura!=null && this.jInternalFrameDetalleFormEstructura.asistenciadiariaBeanSwingJInternalFrame!=null) {
			this.jInternalFrameDetalleFormEstructura.jTabbedPaneRelacionesEstructura.remove(this.jInternalFrameDetalleFormEstructura.asistenciadiariaBeanSwingJInternalFrame.getContentPane());
		}

		if(!this.isTienePermisosFuncionEstruc && this.jInternalFrameDetalleFormEstructura!=null && this.jInternalFrameDetalleFormEstructura.funcionestrucBeanSwingJInternalFrame!=null) {
			this.jInternalFrameDetalleFormEstructura.jTabbedPaneRelacionesEstructura.remove(this.jInternalFrameDetalleFormEstructura.funcionestrucBeanSwingJInternalFrame.getContentPane());
		}

		if(!this.isTienePermisosSolicitudReemplazo && this.jInternalFrameDetalleFormEstructura!=null && this.jInternalFrameDetalleFormEstructura.solicitudreemplazoBeanSwingJInternalFrame!=null) {
			this.jInternalFrameDetalleFormEstructura.jTabbedPaneRelacionesEstructura.remove(this.jInternalFrameDetalleFormEstructura.solicitudreemplazoBeanSwingJInternalFrame.getContentPane());
		}

		if(!this.isTienePermisosSolicitudHoraExtra && this.jInternalFrameDetalleFormEstructura!=null && this.jInternalFrameDetalleFormEstructura.solicitudhoraextraBeanSwingJInternalFrame!=null) {
			this.jInternalFrameDetalleFormEstructura.jTabbedPaneRelacionesEstructura.remove(this.jInternalFrameDetalleFormEstructura.solicitudhoraextraBeanSwingJInternalFrame.getContentPane());
		}

		if(!this.isTienePermisosEvaluacionNomi && this.jInternalFrameDetalleFormEstructura!=null && this.jInternalFrameDetalleFormEstructura.evaluacionnomiBeanSwingJInternalFrame!=null) {
			this.jInternalFrameDetalleFormEstructura.jTabbedPaneRelacionesEstructura.remove(this.jInternalFrameDetalleFormEstructura.evaluacionnomiBeanSwingJInternalFrame.getContentPane());
		}

		if(!this.isTienePermisosSolicitudVacacion && this.jInternalFrameDetalleFormEstructura!=null && this.jInternalFrameDetalleFormEstructura.solicitudvacacionBeanSwingJInternalFrame!=null) {
			this.jInternalFrameDetalleFormEstructura.jTabbedPaneRelacionesEstructura.remove(this.jInternalFrameDetalleFormEstructura.solicitudvacacionBeanSwingJInternalFrame.getContentPane());
		}

		if(!this.isTienePermisosResponsableActivoFijo && this.jInternalFrameDetalleFormEstructura!=null && this.jInternalFrameDetalleFormEstructura.responsableactivofijoBeanSwingJInternalFrame!=null) {
			this.jInternalFrameDetalleFormEstructura.jTabbedPaneRelacionesEstructura.remove(this.jInternalFrameDetalleFormEstructura.responsableactivofijoBeanSwingJInternalFrame.getContentPane());
		}

		if(!this.isTienePermisosRubroEmpleaCuentaContable && this.jInternalFrameDetalleFormEstructura!=null && this.jInternalFrameDetalleFormEstructura.rubroempleacuentacontableBeanSwingJInternalFrame!=null) {
			this.jInternalFrameDetalleFormEstructura.jTabbedPaneRelacionesEstructura.remove(this.jInternalFrameDetalleFormEstructura.rubroempleacuentacontableBeanSwingJInternalFrame.getContentPane());
		}
	}
	
	public void setPermisosUsuarioEstructura() throws Exception {
		
		PerfilOpcion perfilOpcionUsuario=new PerfilOpcion();		
		Long idOpcion=this.opcionActual.getId();
		
		if(EstructuraJInternalFrame.CON_LLAMADA_SIMPLE) {
			perfilOpcionUsuario=this.sistemaReturnGeneral.getPerfilOpcion();
			
		} else {
			if(this.estructuraSessionBean.getEsGuardarRelacionado()) {
				idOpcion=0L;
			}
			
			if(Constantes.ISUSAEJBLOGICLAYER) {	
				perfilOpcionUsuario=sistemaLogicAdditional.traerPermisosPaginaWebPerfilOpcion(this.usuarioActual, Constantes.LIDSISTEMAACTUAL, EstructuraConstantesFunciones.SNOMBREOPCION,idOpcion);				
			} else if(Constantes.ISUSAEJBREMOTE) {
			} else if(Constantes.ISUSAEJBHOME) {
			}
		}
		
		if(perfilOpcionUsuario!=null && perfilOpcionUsuario.getId()>0) {
			this.isPermisoNuevoEstructura=perfilOpcionUsuario.getingreso()||perfilOpcionUsuario.gettodo();
			this.isPermisoActualizarEstructura=perfilOpcionUsuario.getmodificacion()||perfilOpcionUsuario.gettodo();
			this.isPermisoActualizarOriginalEstructura=this.isPermisoActualizarEstructura;
			this.isPermisoEliminarEstructura=perfilOpcionUsuario.geteliminacion()||perfilOpcionUsuario.gettodo();
			this.isPermisoGuardarCambiosEstructura=perfilOpcionUsuario.getguardar_cambios()||perfilOpcionUsuario.gettodo();
			this.isPermisoConsultaEstructura=perfilOpcionUsuario.getconsulta()||perfilOpcionUsuario.gettodo();
			this.isPermisoBusquedaEstructura=perfilOpcionUsuario.getbusqueda()||perfilOpcionUsuario.gettodo();
			this.isPermisoTodoEstructura=perfilOpcionUsuario.gettodo()||perfilOpcionUsuario.gettodo();
			this.isPermisoReporteEstructura=perfilOpcionUsuario.getreporte()||perfilOpcionUsuario.gettodo();
			this.isPermisoOrdenEstructura=perfilOpcionUsuario.getorden()||perfilOpcionUsuario.gettodo();
			this.isPermisoPaginacionMedioEstructura=perfilOpcionUsuario.getpaginacion_medio()||perfilOpcionUsuario.gettodo();
			this.isPermisoPaginacionAltoEstructura=perfilOpcionUsuario.getpaginacion_alto()||perfilOpcionUsuario.gettodo();
			this.isPermisoPaginacionTodoEstructura=perfilOpcionUsuario.getpaginacion_todo()||perfilOpcionUsuario.gettodo();
			this.isPermisoCopiarEstructura=perfilOpcionUsuario.getcopiar()||perfilOpcionUsuario.gettodo();
			this.isPermisoVerFormEstructura=true;//perfilOpcionUsuario.getver_form()||perfilOpcionUsuario.gettodo();
			this.isPermisoDuplicarEstructura=perfilOpcionUsuario.getduplicar()||perfilOpcionUsuario.gettodo();
			this.isPermisoOrdenEstructura=perfilOpcionUsuario.getorden()||perfilOpcionUsuario.gettodo();
			
			if(this.estructuraSessionBean.getEsGuardarRelacionado()) {
				this.opcionActual.setId(perfilOpcionUsuario.getid_opcion());
				
				this.jTableDatosEstructura.setToolTipText(this.jTableDatosEstructura.getToolTipText()+"_"+perfilOpcionUsuario.getid_opcion());		
			}
		} else {
			this.setPermisosUsuarioEstructura(false);
		}
		
		//SI SE NECESITA PONER TODOS LOS PERMISOS POR DEFECTO
		//
		
	}
	
	public void setAccionesUsuarioEstructura(Boolean esParaAccionesFormulario) throws Exception {		
		Reporte reporte=null;
		
		if(!esParaAccionesFormulario) {
			this.accions=new ArrayList<Accion>();
			
			if(EstructuraJInternalFrame.CON_LLAMADA_SIMPLE) {
				this.accions=this.sistemaReturnGeneral.getAccions();
				
				
			} else {
				if(Constantes.ISUSAEJBLOGICLAYER) {	
					this.accions=sistemaLogicAdditional.getAccionesUsuario(this.usuarioActual,this.opcionActual,false);				
				} else if(Constantes.ISUSAEJBREMOTE) {
				} else if(Constantes.ISUSAEJBHOME) {
				}
			}
			
			if(this.accions.size()>0) {			
				for(Accion accion:this.accions) {
					reporte=new Reporte();
					reporte.setsCodigo(accion.getcodigo());
					reporte.setsDescripcion(accion.getnombre());
		
		
					this.tiposAcciones.add(reporte);
				}
			}	
			
			

			reporte=new Reporte();
			reporte.setsCodigo("");
			reporte.setsDescripcion("");

			this.tiposAcciones.add(reporte);
			
		} else {
			//ACCIONES FORMULARIO
			this.accionsFormulario=new ArrayList<Accion>();
			
			if(EstructuraJInternalFrame.CON_LLAMADA_SIMPLE) {
				this.accionsFormulario=this.sistemaReturnGeneral.getAccionsFormulario();
			
			} else {
				if(Constantes.ISUSAEJBLOGICLAYER) {	
					this.accionsFormulario=sistemaLogicAdditional.getAccionesUsuario(this.usuarioActual,this.opcionActual,true);				
				} else if(Constantes.ISUSAEJBREMOTE) {
				} else if(Constantes.ISUSAEJBHOME) {
				}
			}
			
			if(this.accionsFormulario.size()>0) {			
				for(Accion accion:this.accionsFormulario) {
					reporte=new Reporte();
					reporte.setsCodigo(accion.getcodigo());
					reporte.setsDescripcion(accion.getnombre());
					
					this.tiposAccionesFormulario.add(reporte);
				}
			}	
			
			

			reporte=new Reporte();
			reporte.setsCodigo("");
			reporte.setsDescripcion("");

			this.tiposAccionesFormulario.add(reporte);
		}				
	}	 	
	
	public void setRelacionesUsuarioEstructura() throws Exception {
		Reporte reporte=null;
		
		

		if(this.isTienePermisosCentroCostoEstructura && this.estructuraConstantesFunciones.mostrarCentroCostoEstructuraEstructura && !EstructuraConstantesFunciones.ISGUARDARREL) {

			reporte=new Reporte();
			reporte.setsCodigo("Centro Costo Estructura");
			reporte.setsDescripcion("Centro Costo Estructura");
			this.tiposRelaciones.add(reporte);
		}

		if(this.isTienePermisosPlaniVacacion && this.estructuraConstantesFunciones.mostrarPlaniVacacionEstructura && !EstructuraConstantesFunciones.ISGUARDARREL) {

			reporte=new Reporte();
			reporte.setsCodigo("Plani Vacacion");
			reporte.setsDescripcion("Plani Vacacion");
			this.tiposRelaciones.add(reporte);
		}

		if(this.isTienePermisosAsistenciaMensual && this.estructuraConstantesFunciones.mostrarAsistenciaMensualEstructura && !EstructuraConstantesFunciones.ISGUARDARREL) {

			reporte=new Reporte();
			reporte.setsCodigo("Asistencia Mensual");
			reporte.setsDescripcion("Asistencia Mensual");
			this.tiposRelaciones.add(reporte);
		}

		if(this.isTienePermisosEmpleadoProcesoRubro && this.estructuraConstantesFunciones.mostrarEmpleadoProcesoRubroEstructura && !EstructuraConstantesFunciones.ISGUARDARREL) {

			reporte=new Reporte();
			reporte.setsCodigo("Empleado Proceso Rubro");
			reporte.setsDescripcion("Empleado Proceso Rubro");
			this.tiposRelaciones.add(reporte);
		}

		if(this.isTienePermisosEmpleadoPagoRubro && this.estructuraConstantesFunciones.mostrarEmpleadoPagoRubroEstructura && !EstructuraConstantesFunciones.ISGUARDARREL) {

			reporte=new Reporte();
			reporte.setsCodigo("Empleado Pago Rubro");
			reporte.setsDescripcion("Empleado Pago Rubro");
			this.tiposRelaciones.add(reporte);
		}

		if(this.isTienePermisosProvisionEmpleado && this.estructuraConstantesFunciones.mostrarProvisionEmpleadoEstructura && !EstructuraConstantesFunciones.ISGUARDARREL) {

			reporte=new Reporte();
			reporte.setsCodigo("Provision Empleado");
			reporte.setsDescripcion("Provision Empleado");
			this.tiposRelaciones.add(reporte);
		}

		if(this.isTienePermisosEmpleado && this.estructuraConstantesFunciones.mostrarEmpleadoEstructura && !EstructuraConstantesFunciones.ISGUARDARREL) {

			reporte=new Reporte();
			reporte.setsCodigo("Empleado");
			reporte.setsDescripcion("Empleado");
			this.tiposRelaciones.add(reporte);
		}

		if(this.isTienePermisosEstructura && this.estructuraConstantesFunciones.mostrarEstructuraEstructura && !EstructuraConstantesFunciones.ISGUARDARREL) {

			reporte=new Reporte();
			reporte.setsCodigo("Estructura");
			reporte.setsDescripcion("Estructura");
			this.tiposRelaciones.add(reporte);
		}

		if(this.isTienePermisosEvaluacionEmpleado && this.estructuraConstantesFunciones.mostrarEvaluacionEmpleadoEstructura && !EstructuraConstantesFunciones.ISGUARDARREL) {

			reporte=new Reporte();
			reporte.setsCodigo("Evaluacion Empleado");
			reporte.setsDescripcion("Evaluacion Empleado");
			this.tiposRelaciones.add(reporte);
		}

		if(this.isTienePermisosEmpleadoImpuestoRenta && this.estructuraConstantesFunciones.mostrarEmpleadoImpuestoRentaEstructura && !EstructuraConstantesFunciones.ISGUARDARREL) {

			reporte=new Reporte();
			reporte.setsCodigo("Empleado Impuesto Renta");
			reporte.setsDescripcion("Empleado Impuesto Renta");
			this.tiposRelaciones.add(reporte);
		}

		if(this.isTienePermisosRubroEstructura && this.estructuraConstantesFunciones.mostrarRubroEstructuraEstructura && !EstructuraConstantesFunciones.ISGUARDARREL) {

			reporte=new Reporte();
			reporte.setsCodigo("Rubro Estructura");
			reporte.setsDescripcion("Rubro Estructura");
			this.tiposRelaciones.add(reporte);
		}

		if(this.isTienePermisosCierreRolMensual && this.estructuraConstantesFunciones.mostrarCierreRolMensualEstructura && !EstructuraConstantesFunciones.ISGUARDARREL) {

			reporte=new Reporte();
			reporte.setsCodigo("Cierre Rol Mensual");
			reporte.setsDescripcion("Cierre Rol Mensual");
			this.tiposRelaciones.add(reporte);
		}

		if(this.isTienePermisosFormatoNomi && this.estructuraConstantesFunciones.mostrarFormatoNomiEstructura && !EstructuraConstantesFunciones.ISGUARDARREL) {

			reporte=new Reporte();
			reporte.setsCodigo("Formato Nomi");
			reporte.setsDescripcion("Formato Nomi");
			this.tiposRelaciones.add(reporte);
		}

		if(this.isTienePermisosEmpleadoEstructura && this.estructuraConstantesFunciones.mostrarEmpleadoEstructuraEstructura && !EstructuraConstantesFunciones.ISGUARDARREL) {

			reporte=new Reporte();
			reporte.setsCodigo("Empleado Estructura");
			reporte.setsDescripcion("Empleado Estructura");
			this.tiposRelaciones.add(reporte);
		}

		if(this.isTienePermisosHistorialPagoNomi && this.estructuraConstantesFunciones.mostrarHistorialPagoNomiEstructura && !EstructuraConstantesFunciones.ISGUARDARREL) {

			reporte=new Reporte();
			reporte.setsCodigo("Historial Pago Nomi");
			reporte.setsDescripcion("Historial Pago Nomi");
			this.tiposRelaciones.add(reporte);
		}

		if(this.isTienePermisosAsistenciaDiaria && this.estructuraConstantesFunciones.mostrarAsistenciaDiariaEstructura && !EstructuraConstantesFunciones.ISGUARDARREL) {

			reporte=new Reporte();
			reporte.setsCodigo("Asistencia Diaria");
			reporte.setsDescripcion("Asistencia Diaria");
			this.tiposRelaciones.add(reporte);
		}

		if(this.isTienePermisosFuncionEstruc && this.estructuraConstantesFunciones.mostrarFuncionEstrucEstructura && !EstructuraConstantesFunciones.ISGUARDARREL) {

			reporte=new Reporte();
			reporte.setsCodigo("Funcion Estruc");
			reporte.setsDescripcion("Funcion Estruc");
			this.tiposRelaciones.add(reporte);
		}

		if(this.isTienePermisosSolicitudReemplazo && this.estructuraConstantesFunciones.mostrarSolicitudReemplazoEstructura && !EstructuraConstantesFunciones.ISGUARDARREL) {

			reporte=new Reporte();
			reporte.setsCodigo("Solicitud Reemplazo");
			reporte.setsDescripcion("Solicitud Reemplazo");
			this.tiposRelaciones.add(reporte);
		}

		if(this.isTienePermisosSolicitudHoraExtra && this.estructuraConstantesFunciones.mostrarSolicitudHoraExtraEstructura && !EstructuraConstantesFunciones.ISGUARDARREL) {

			reporte=new Reporte();
			reporte.setsCodigo("Solicitud Hora Extra");
			reporte.setsDescripcion("Solicitud Hora Extra");
			this.tiposRelaciones.add(reporte);
		}

		if(this.isTienePermisosEvaluacionNomi && this.estructuraConstantesFunciones.mostrarEvaluacionNomiEstructura && !EstructuraConstantesFunciones.ISGUARDARREL) {

			reporte=new Reporte();
			reporte.setsCodigo("Evaluacion Nomi");
			reporte.setsDescripcion("Evaluacion Nomi");
			this.tiposRelaciones.add(reporte);
		}

		if(this.isTienePermisosSolicitudVacacion && this.estructuraConstantesFunciones.mostrarSolicitudVacacionEstructura && !EstructuraConstantesFunciones.ISGUARDARREL) {

			reporte=new Reporte();
			reporte.setsCodigo("Solicitud Vacacion");
			reporte.setsDescripcion("Solicitud Vacacion");
			this.tiposRelaciones.add(reporte);
		}

		if(this.isTienePermisosResponsableActivoFijo && this.estructuraConstantesFunciones.mostrarResponsableActivoFijoEstructura && !EstructuraConstantesFunciones.ISGUARDARREL) {

			reporte=new Reporte();
			reporte.setsCodigo("Responsable Activo Fijo");
			reporte.setsDescripcion("Responsable Activo Fijo");
			this.tiposRelaciones.add(reporte);
		}

		if(this.isTienePermisosRubroEmpleaCuentaContable && this.estructuraConstantesFunciones.mostrarRubroEmpleaCuentaContableEstructura && !EstructuraConstantesFunciones.ISGUARDARREL) {

			reporte=new Reporte();
			reporte.setsCodigo("Rubro Emplea Cuenta Contable");
			reporte.setsDescripcion("Rubro Emplea Cuenta Contable");
			this.tiposRelaciones.add(reporte);
		}
		
		
		//ORDENAR ALFABETICAMENTE
		Collections.sort(this.tiposRelaciones, new ReporteComparator());
		/*
		reporte=new Reporte();
		reporte.setsCodigo(accion.getcodigo());
		reporte.setsDescripcion(accion.getnombre());
			
		this.tiposRelaciones.add(reporte);
		*/
	}	
	
		
	@SuppressWarnings({ "unchecked", "rawtypes" } )
	public void inicializarCombosForeignKeyEstructuraListas()throws Exception {
		try	{						
			
				this.empresasForeignKey=new ArrayList();
				this.sucursalsForeignKey=new ArrayList();
				this.estructurasForeignKey=new ArrayList();
				this.tipopago_nmsForeignKey=new ArrayList();
				this.numeropatronalsForeignKey=new ArrayList();
				this.cuentacontablesForeignKey=new ArrayList();
				this.tipoestructurasForeignKey=new ArrayList();
				this.paissForeignKey=new ArrayList();
				this.ciudadsForeignKey=new ArrayList();
		} catch(Exception e) {
			throw e;
		}		
	}
	
	public void cargarCombosTodosForeignKeyEstructuraListas(Boolean cargarCombosDependencia)throws Exception {
		try	{
			
			ArrayList<String> arrColumnasGlobales=new ArrayList<String>();
			String  finalQueryGlobal="";
			String sFinalQueryCombo="";
			
			Modulo  moduloActualAux=new Modulo();
			
			if(EstructuraJInternalFrame.ISLOAD_FKLOTE) {
				this.cargarCombosLoteForeignKeyEstructuraListas(false);
			} else {
			
				this.cargarCombosForeignKeyEmpresaListas(cargarCombosDependencia,sFinalQueryCombo);
				this.cargarCombosForeignKeySucursalListas(cargarCombosDependencia,sFinalQueryCombo);
				this.cargarCombosForeignKeyEstructuraListas(cargarCombosDependencia,sFinalQueryCombo);
				this.cargarCombosForeignKeyTipoPago_NMListas(cargarCombosDependencia,sFinalQueryCombo);
				this.cargarCombosForeignKeyNumeroPatronalListas(cargarCombosDependencia,sFinalQueryCombo);
				this.cargarCombosForeignKeyCuentaContableListas(cargarCombosDependencia,sFinalQueryCombo);
				this.cargarCombosForeignKeyTipoEstructuraListas(cargarCombosDependencia,sFinalQueryCombo);
				this.cargarCombosForeignKeyPaisListas(cargarCombosDependencia,sFinalQueryCombo);
				this.cargarCombosForeignKeyCiudadListas(cargarCombosDependencia,sFinalQueryCombo);
			}
		} catch(Exception e) {
			throw e;
		}		
	}		
	
	

	public void cargarCombosForeignKeyEmpresaListas(Boolean cargarCombosDependencia,String sFinalQuery)throws Exception {
		try	{
			ArrayList<String> arrColumnasGlobales=new ArrayList<String>();

			String  finalQueryGlobal="";

			Modulo  moduloActualAux=new Modulo();

			if((this.empresasForeignKey==null||this.empresasForeignKey.size()<=0)) {
				this.arrDatoGeneral= new  ArrayList<DatoGeneral>();
				this.arrDatoGeneralNo= new  ArrayList<String>();

				arrColumnasGlobales=EmpresaConstantesFunciones.getArrayColumnasGlobalesEmpresa(this.arrDatoGeneral,this.arrDatoGeneralNo);
				finalQueryGlobal=Funciones.GetWhereGlobalConstants(this.parametroGeneralUsuario,this.moduloActual,true,false,arrColumnasGlobales,EmpresaConstantesFunciones.TABLENAME);

				finalQueryGlobal=Funciones.GetFinalQueryAppend(finalQueryGlobal, sFinalQuery);
				finalQueryGlobal=Funciones.GetFinalQueryAppend(finalQueryGlobal, "");

				finalQueryGlobal+=EmpresaConstantesFunciones.SFINALQUERY;

				this.cargarCombosEmpresasForeignKeyLista(finalQueryGlobal);
			}

		} catch(Exception e) {
			throw e;
		}
	}

	public void cargarCombosForeignKeySucursalListas(Boolean cargarCombosDependencia,String sFinalQuery)throws Exception {
		try	{
			ArrayList<String> arrColumnasGlobales=new ArrayList<String>();

			String  finalQueryGlobal="";

			Modulo  moduloActualAux=new Modulo();

			if((this.sucursalsForeignKey==null||this.sucursalsForeignKey.size()<=0)) {
				this.arrDatoGeneral= new  ArrayList<DatoGeneral>();
				this.arrDatoGeneralNo= new  ArrayList<String>();

				arrColumnasGlobales=SucursalConstantesFunciones.getArrayColumnasGlobalesSucursal(this.arrDatoGeneral,this.arrDatoGeneralNo);
				finalQueryGlobal=Funciones.GetWhereGlobalConstants(this.parametroGeneralUsuario,this.moduloActual,true,false,arrColumnasGlobales,SucursalConstantesFunciones.TABLENAME);

				finalQueryGlobal=Funciones.GetFinalQueryAppend(finalQueryGlobal, sFinalQuery);
				finalQueryGlobal=Funciones.GetFinalQueryAppend(finalQueryGlobal, "");

				finalQueryGlobal+=SucursalConstantesFunciones.SFINALQUERY;

				this.cargarCombosSucursalsForeignKeyLista(finalQueryGlobal);
			}

		} catch(Exception e) {
			throw e;
		}
	}

	public void cargarCombosForeignKeyEstructuraListas(Boolean cargarCombosDependencia,String sFinalQuery)throws Exception {
		try	{
			ArrayList<String> arrColumnasGlobales=new ArrayList<String>();

			String  finalQueryGlobal="";

			Modulo  moduloActualAux=new Modulo();

			if((this.estructurasForeignKey==null||this.estructurasForeignKey.size()<=0)) {
				this.arrDatoGeneral= new  ArrayList<DatoGeneral>();
				this.arrDatoGeneralNo= new  ArrayList<String>();

				arrColumnasGlobales=EstructuraConstantesFunciones.getArrayColumnasGlobalesEstructura(this.arrDatoGeneral,this.arrDatoGeneralNo);
				finalQueryGlobal=Funciones.GetWhereGlobalConstants(this.parametroGeneralUsuario,this.moduloActual,true,false,arrColumnasGlobales,EstructuraConstantesFunciones.TABLENAME);

				finalQueryGlobal=Funciones.GetFinalQueryAppend(finalQueryGlobal, sFinalQuery);
				finalQueryGlobal=Funciones.GetFinalQueryAppend(finalQueryGlobal, "");

				finalQueryGlobal+=EstructuraConstantesFunciones.SFINALQUERY;

				this.cargarCombosEstructurasForeignKeyLista(finalQueryGlobal);
			}

		} catch(Exception e) {
			throw e;
		}
	}

	public void cargarCombosForeignKeyTipoPago_NMListas(Boolean cargarCombosDependencia,String sFinalQuery)throws Exception {
		try	{
			ArrayList<String> arrColumnasGlobales=new ArrayList<String>();

			String  finalQueryGlobal="";

			Modulo  moduloActualAux=new Modulo();

			if((this.tipopago_nmsForeignKey==null||this.tipopago_nmsForeignKey.size()<=0)) {
				this.arrDatoGeneral= new  ArrayList<DatoGeneral>();
				this.arrDatoGeneralNo= new  ArrayList<String>();

				arrColumnasGlobales=TipoPago_NMConstantesFunciones.getArrayColumnasGlobalesTipoPago_NM(this.arrDatoGeneral,this.arrDatoGeneralNo);
				finalQueryGlobal=Funciones.GetWhereGlobalConstants(this.parametroGeneralUsuario,this.moduloActual,true,false,arrColumnasGlobales,TipoPago_NMConstantesFunciones.TABLENAME);

				finalQueryGlobal=Funciones.GetFinalQueryAppend(finalQueryGlobal, sFinalQuery);
				finalQueryGlobal=Funciones.GetFinalQueryAppend(finalQueryGlobal, "");

				finalQueryGlobal+=TipoPago_NMConstantesFunciones.SFINALQUERY;

				this.cargarCombosTipoPago_NMsForeignKeyLista(finalQueryGlobal);
			}

		} catch(Exception e) {
			throw e;
		}
	}

	public void cargarCombosForeignKeyNumeroPatronalListas(Boolean cargarCombosDependencia,String sFinalQuery)throws Exception {
		try	{
			ArrayList<String> arrColumnasGlobales=new ArrayList<String>();

			String  finalQueryGlobal="";

			Modulo  moduloActualAux=new Modulo();

			if((this.numeropatronalsForeignKey==null||this.numeropatronalsForeignKey.size()<=0)) {
				this.arrDatoGeneral= new  ArrayList<DatoGeneral>();
				this.arrDatoGeneralNo= new  ArrayList<String>();

				arrColumnasGlobales=NumeroPatronalConstantesFunciones.getArrayColumnasGlobalesNumeroPatronal(this.arrDatoGeneral,this.arrDatoGeneralNo);
				finalQueryGlobal=Funciones.GetWhereGlobalConstants(this.parametroGeneralUsuario,this.moduloActual,true,false,arrColumnasGlobales,NumeroPatronalConstantesFunciones.TABLENAME);

				finalQueryGlobal=Funciones.GetFinalQueryAppend(finalQueryGlobal, sFinalQuery);
				finalQueryGlobal=Funciones.GetFinalQueryAppend(finalQueryGlobal, "");

				finalQueryGlobal+=NumeroPatronalConstantesFunciones.SFINALQUERY;

				this.cargarCombosNumeroPatronalsForeignKeyLista(finalQueryGlobal);
			}

		} catch(Exception e) {
			throw e;
		}
	}

	public void cargarCombosForeignKeyCuentaContableListas(Boolean cargarCombosDependencia,String sFinalQuery)throws Exception {
		try	{
			ArrayList<String> arrColumnasGlobales=new ArrayList<String>();

			String  finalQueryGlobal="";

			Modulo  moduloActualAux=new Modulo();

			if((this.cuentacontablesForeignKey==null||this.cuentacontablesForeignKey.size()<=0)) {
				this.arrDatoGeneral= new  ArrayList<DatoGeneral>();
				this.arrDatoGeneralNo= new  ArrayList<String>();

				arrColumnasGlobales=CuentaContableConstantesFunciones.getArrayColumnasGlobalesCuentaContable(this.arrDatoGeneral,this.arrDatoGeneralNo);
				finalQueryGlobal=Funciones.GetWhereGlobalConstants(this.parametroGeneralUsuario,this.moduloActual,true,false,arrColumnasGlobales,CuentaContableConstantesFunciones.TABLENAME);

				finalQueryGlobal=Funciones.GetFinalQueryAppend(finalQueryGlobal, sFinalQuery);
				finalQueryGlobal=Funciones.GetFinalQueryAppend(finalQueryGlobal, "");

				finalQueryGlobal+=CuentaContableConstantesFunciones.SFINALQUERY;

				this.cargarCombosCuentaContablesForeignKeyLista(finalQueryGlobal);
			}

		} catch(Exception e) {
			throw e;
		}
	}

	public void cargarCombosForeignKeyTipoEstructuraListas(Boolean cargarCombosDependencia,String sFinalQuery)throws Exception {
		try	{
			ArrayList<String> arrColumnasGlobales=new ArrayList<String>();

			String  finalQueryGlobal="";

			Modulo  moduloActualAux=new Modulo();

			if((this.tipoestructurasForeignKey==null||this.tipoestructurasForeignKey.size()<=0)) {
				this.arrDatoGeneral= new  ArrayList<DatoGeneral>();
				this.arrDatoGeneralNo= new  ArrayList<String>();

				arrColumnasGlobales=TipoEstructuraConstantesFunciones.getArrayColumnasGlobalesTipoEstructura(this.arrDatoGeneral,this.arrDatoGeneralNo);
				finalQueryGlobal=Funciones.GetWhereGlobalConstants(this.parametroGeneralUsuario,this.moduloActual,true,false,arrColumnasGlobales,TipoEstructuraConstantesFunciones.TABLENAME);

				finalQueryGlobal=Funciones.GetFinalQueryAppend(finalQueryGlobal, sFinalQuery);
				finalQueryGlobal=Funciones.GetFinalQueryAppend(finalQueryGlobal, "");

				finalQueryGlobal+=TipoEstructuraConstantesFunciones.SFINALQUERY;

				this.cargarCombosTipoEstructurasForeignKeyLista(finalQueryGlobal);
			}

		} catch(Exception e) {
			throw e;
		}
	}

	public void cargarCombosForeignKeyPaisListas(Boolean cargarCombosDependencia,String sFinalQuery)throws Exception {
		try	{
			ArrayList<String> arrColumnasGlobales=new ArrayList<String>();

			String  finalQueryGlobal="";

			Modulo  moduloActualAux=new Modulo();

			if((this.paissForeignKey==null||this.paissForeignKey.size()<=0)) {
				this.arrDatoGeneral= new  ArrayList<DatoGeneral>();
				this.arrDatoGeneralNo= new  ArrayList<String>();

				arrColumnasGlobales=PaisConstantesFunciones.getArrayColumnasGlobalesPais(this.arrDatoGeneral,this.arrDatoGeneralNo);
				finalQueryGlobal=Funciones.GetWhereGlobalConstants(this.parametroGeneralUsuario,this.moduloActual,true,false,arrColumnasGlobales,PaisConstantesFunciones.TABLENAME);

				finalQueryGlobal=Funciones.GetFinalQueryAppend(finalQueryGlobal, sFinalQuery);
				finalQueryGlobal=Funciones.GetFinalQueryAppend(finalQueryGlobal, "");

				finalQueryGlobal+=PaisConstantesFunciones.SFINALQUERY;

				this.cargarCombosPaissForeignKeyLista(finalQueryGlobal);
			}

		} catch(Exception e) {
			throw e;
		}
	}

	public void cargarCombosForeignKeyCiudadListas(Boolean cargarCombosDependencia,String sFinalQuery)throws Exception {
		try	{
			ArrayList<String> arrColumnasGlobales=new ArrayList<String>();

			String  finalQueryGlobal="";

			Modulo  moduloActualAux=new Modulo();

			if((this.ciudadsForeignKey==null||this.ciudadsForeignKey.size()<=0)) {
				this.arrDatoGeneral= new  ArrayList<DatoGeneral>();
				this.arrDatoGeneralNo= new  ArrayList<String>();

				arrColumnasGlobales=CiudadConstantesFunciones.getArrayColumnasGlobalesCiudad(this.arrDatoGeneral,this.arrDatoGeneralNo);
				finalQueryGlobal=Funciones.GetWhereGlobalConstants(this.parametroGeneralUsuario,this.moduloActual,true,false,arrColumnasGlobales,CiudadConstantesFunciones.TABLENAME);

				finalQueryGlobal=Funciones.GetFinalQueryAppend(finalQueryGlobal, sFinalQuery);
				finalQueryGlobal=Funciones.GetFinalQueryAppend(finalQueryGlobal, "");

				finalQueryGlobal+=CiudadConstantesFunciones.SFINALQUERY;

				this.cargarCombosCiudadsForeignKeyLista(finalQueryGlobal);
			}

		} catch(Exception e) {
			throw e;
		}
	}
	
	public void cargarCombosLoteForeignKeyEstructuraListas(Boolean cargarCombosDependencia)throws Exception {
		try	{
			
			ArrayList<String> arrColumnasGlobales=new ArrayList<String>();
			String  finalQueryGlobal="";
			
			Modulo  moduloActualAux=new Modulo();
			
			
			EstructuraParameterReturnGeneral estructuraReturnGeneral=new EstructuraParameterReturnGeneral();
						
			


				String finalQueryGlobalEmpresa="";

				if(((this.empresasForeignKey==null||this.empresasForeignKey.size()<=0) && this.estructuraConstantesFunciones.cargarid_empresaEstructura)
					 || (this.esRecargarFks && this.estructuraConstantesFunciones.cargarid_empresaEstructura)) {

					if(!this.estructuraSessionBean.getisBusquedaDesdeForeignKeySesionEmpresa()) {

						this.arrDatoGeneral= new  ArrayList<DatoGeneral>();
						this.arrDatoGeneralNo= new  ArrayList<String>();


						arrColumnasGlobales=EmpresaConstantesFunciones.getArrayColumnasGlobalesEmpresa(this.arrDatoGeneral,this.arrDatoGeneralNo);
						finalQueryGlobalEmpresa=Funciones.GetWhereGlobalConstants(this.parametroGeneralUsuario,this.moduloActual,true,false,arrColumnasGlobales,EmpresaConstantesFunciones.TABLENAME);

						finalQueryGlobalEmpresa=Funciones.GetFinalQueryAppend(finalQueryGlobalEmpresa, "");
						finalQueryGlobalEmpresa+=EmpresaConstantesFunciones.SFINALQUERY;

						//this.cargarCombosEmpresasForeignKeyLista(finalQueryGlobal);
					} else {
						finalQueryGlobalEmpresa=" WHERE " + ConstantesSql.ID + "="+estructuraSessionBean.getlidEmpresaActual();
					}
				} else {
					finalQueryGlobalEmpresa="NONE";
				}


				String finalQueryGlobalSucursal="";

				if(((this.sucursalsForeignKey==null||this.sucursalsForeignKey.size()<=0) && this.estructuraConstantesFunciones.cargarid_sucursalEstructura)
					 || (this.esRecargarFks && this.estructuraConstantesFunciones.cargarid_sucursalEstructura)) {

					if(!this.estructuraSessionBean.getisBusquedaDesdeForeignKeySesionSucursal()) {

						this.arrDatoGeneral= new  ArrayList<DatoGeneral>();
						this.arrDatoGeneralNo= new  ArrayList<String>();


						arrColumnasGlobales=SucursalConstantesFunciones.getArrayColumnasGlobalesSucursal(this.arrDatoGeneral,this.arrDatoGeneralNo);
						finalQueryGlobalSucursal=Funciones.GetWhereGlobalConstants(this.parametroGeneralUsuario,this.moduloActual,true,false,arrColumnasGlobales,SucursalConstantesFunciones.TABLENAME);

						finalQueryGlobalSucursal=Funciones.GetFinalQueryAppend(finalQueryGlobalSucursal, "");
						finalQueryGlobalSucursal+=SucursalConstantesFunciones.SFINALQUERY;

						//this.cargarCombosSucursalsForeignKeyLista(finalQueryGlobal);
					} else {
						finalQueryGlobalSucursal=" WHERE " + ConstantesSql.ID + "="+estructuraSessionBean.getlidSucursalActual();
					}
				} else {
					finalQueryGlobalSucursal="NONE";
				}


				String finalQueryGlobalEstructura="";

				if(((this.estructurasForeignKey==null||this.estructurasForeignKey.size()<=0) && this.estructuraConstantesFunciones.cargarid_estructuraEstructura)
					 || (this.esRecargarFks && this.estructuraConstantesFunciones.cargarid_estructuraEstructura)) {

					if(!this.estructuraSessionBean.getisBusquedaDesdeForeignKeySesionEstructura()) {

						this.arrDatoGeneral= new  ArrayList<DatoGeneral>();
						this.arrDatoGeneralNo= new  ArrayList<String>();


						arrColumnasGlobales=EstructuraConstantesFunciones.getArrayColumnasGlobalesEstructura(this.arrDatoGeneral,this.arrDatoGeneralNo);
						finalQueryGlobalEstructura=Funciones.GetWhereGlobalConstants(this.parametroGeneralUsuario,this.moduloActual,true,false,arrColumnasGlobales,EstructuraConstantesFunciones.TABLENAME);

						finalQueryGlobalEstructura=Funciones.GetFinalQueryAppend(finalQueryGlobalEstructura, "");
						finalQueryGlobalEstructura+=EstructuraConstantesFunciones.SFINALQUERY;

						//this.cargarCombosEstructurasForeignKeyLista(finalQueryGlobal);
					} else {
						finalQueryGlobalEstructura=" WHERE " + ConstantesSql.ID + "="+estructuraSessionBean.getlidEstructuraActual();
					}
				} else {
					finalQueryGlobalEstructura="NONE";
				}


				String finalQueryGlobalTipoPago_NM="";

				if(((this.tipopago_nmsForeignKey==null||this.tipopago_nmsForeignKey.size()<=0) && this.estructuraConstantesFunciones.cargarid_tipo_pago__n_mEstructura)
					 || (this.esRecargarFks && this.estructuraConstantesFunciones.cargarid_tipo_pago__n_mEstructura)) {

					if(!this.estructuraSessionBean.getisBusquedaDesdeForeignKeySesionTipoPago_NM()) {

						this.arrDatoGeneral= new  ArrayList<DatoGeneral>();
						this.arrDatoGeneralNo= new  ArrayList<String>();


						arrColumnasGlobales=TipoPago_NMConstantesFunciones.getArrayColumnasGlobalesTipoPago_NM(this.arrDatoGeneral,this.arrDatoGeneralNo);
						finalQueryGlobalTipoPago_NM=Funciones.GetWhereGlobalConstants(this.parametroGeneralUsuario,this.moduloActual,true,false,arrColumnasGlobales,TipoPago_NMConstantesFunciones.TABLENAME);

						finalQueryGlobalTipoPago_NM=Funciones.GetFinalQueryAppend(finalQueryGlobalTipoPago_NM, "");
						finalQueryGlobalTipoPago_NM+=TipoPago_NMConstantesFunciones.SFINALQUERY;

						//this.cargarCombosTipoPago_NMsForeignKeyLista(finalQueryGlobal);
					} else {
						finalQueryGlobalTipoPago_NM=" WHERE " + ConstantesSql.ID + "="+estructuraSessionBean.getlidTipoPago_NMActual();
					}
				} else {
					finalQueryGlobalTipoPago_NM="NONE";
				}


				String finalQueryGlobalNumeroPatronal="";

				if(((this.numeropatronalsForeignKey==null||this.numeropatronalsForeignKey.size()<=0) && this.estructuraConstantesFunciones.cargarid_numero_patronalEstructura)
					 || (this.esRecargarFks && this.estructuraConstantesFunciones.cargarid_numero_patronalEstructura)) {

					if(!this.estructuraSessionBean.getisBusquedaDesdeForeignKeySesionNumeroPatronal()) {

						this.arrDatoGeneral= new  ArrayList<DatoGeneral>();
						this.arrDatoGeneralNo= new  ArrayList<String>();


						arrColumnasGlobales=NumeroPatronalConstantesFunciones.getArrayColumnasGlobalesNumeroPatronal(this.arrDatoGeneral,this.arrDatoGeneralNo);
						finalQueryGlobalNumeroPatronal=Funciones.GetWhereGlobalConstants(this.parametroGeneralUsuario,this.moduloActual,true,false,arrColumnasGlobales,NumeroPatronalConstantesFunciones.TABLENAME);

						finalQueryGlobalNumeroPatronal=Funciones.GetFinalQueryAppend(finalQueryGlobalNumeroPatronal, "");
						finalQueryGlobalNumeroPatronal+=NumeroPatronalConstantesFunciones.SFINALQUERY;

						//this.cargarCombosNumeroPatronalsForeignKeyLista(finalQueryGlobal);
					} else {
						finalQueryGlobalNumeroPatronal=" WHERE " + ConstantesSql.ID + "="+estructuraSessionBean.getlidNumeroPatronalActual();
					}
				} else {
					finalQueryGlobalNumeroPatronal="NONE";
				}


				String finalQueryGlobalCuentaContable="";

				if(((this.cuentacontablesForeignKey==null||this.cuentacontablesForeignKey.size()<=0) && this.estructuraConstantesFunciones.cargarid_cuenta_contableEstructura)
					 || (this.esRecargarFks && this.estructuraConstantesFunciones.cargarid_cuenta_contableEstructura)) {

					if(!this.estructuraSessionBean.getisBusquedaDesdeForeignKeySesionCuentaContable()) {

						this.arrDatoGeneral= new  ArrayList<DatoGeneral>();
						this.arrDatoGeneralNo= new  ArrayList<String>();

						this.arrDatoGeneralNo.add("id_modulo");

						arrColumnasGlobales=CuentaContableConstantesFunciones.getArrayColumnasGlobalesCuentaContable(this.arrDatoGeneral,this.arrDatoGeneralNo);
						finalQueryGlobalCuentaContable=Funciones.GetWhereGlobalConstants(this.parametroGeneralUsuario,this.moduloActual,true,false,arrColumnasGlobales,CuentaContableConstantesFunciones.TABLENAME);

						finalQueryGlobalCuentaContable=Funciones.GetFinalQueryAppend(finalQueryGlobalCuentaContable, "");
						finalQueryGlobalCuentaContable+=CuentaContableConstantesFunciones.SFINALQUERY;

						//this.cargarCombosCuentaContablesForeignKeyLista(finalQueryGlobal);
					} else {
						finalQueryGlobalCuentaContable=" WHERE " + ConstantesSql.ID + "="+estructuraSessionBean.getlidCuentaContableActual();
					}
				} else {
					finalQueryGlobalCuentaContable="NONE";
				}


				String finalQueryGlobalTipoEstructura="";

				if(((this.tipoestructurasForeignKey==null||this.tipoestructurasForeignKey.size()<=0) && this.estructuraConstantesFunciones.cargarid_tipo_estructuraEstructura)
					 || (this.esRecargarFks && this.estructuraConstantesFunciones.cargarid_tipo_estructuraEstructura)) {

					if(!this.estructuraSessionBean.getisBusquedaDesdeForeignKeySesionTipoEstructura()) {

						this.arrDatoGeneral= new  ArrayList<DatoGeneral>();
						this.arrDatoGeneralNo= new  ArrayList<String>();


						arrColumnasGlobales=TipoEstructuraConstantesFunciones.getArrayColumnasGlobalesTipoEstructura(this.arrDatoGeneral,this.arrDatoGeneralNo);
						finalQueryGlobalTipoEstructura=Funciones.GetWhereGlobalConstants(this.parametroGeneralUsuario,this.moduloActual,true,false,arrColumnasGlobales,TipoEstructuraConstantesFunciones.TABLENAME);

						finalQueryGlobalTipoEstructura=Funciones.GetFinalQueryAppend(finalQueryGlobalTipoEstructura, "");
						finalQueryGlobalTipoEstructura+=TipoEstructuraConstantesFunciones.SFINALQUERY;

						//this.cargarCombosTipoEstructurasForeignKeyLista(finalQueryGlobal);
					} else {
						finalQueryGlobalTipoEstructura=" WHERE " + ConstantesSql.ID + "="+estructuraSessionBean.getlidTipoEstructuraActual();
					}
				} else {
					finalQueryGlobalTipoEstructura="NONE";
				}


				String finalQueryGlobalPais="";

				if(((this.paissForeignKey==null||this.paissForeignKey.size()<=0) && this.estructuraConstantesFunciones.cargarid_paisEstructura)
					 || (this.esRecargarFks && this.estructuraConstantesFunciones.cargarid_paisEstructura)) {

					if(!this.estructuraSessionBean.getisBusquedaDesdeForeignKeySesionPais()) {

						this.arrDatoGeneral= new  ArrayList<DatoGeneral>();
						this.arrDatoGeneralNo= new  ArrayList<String>();


						arrColumnasGlobales=PaisConstantesFunciones.getArrayColumnasGlobalesPais(this.arrDatoGeneral,this.arrDatoGeneralNo);
						finalQueryGlobalPais=Funciones.GetWhereGlobalConstants(this.parametroGeneralUsuario,this.moduloActual,true,false,arrColumnasGlobales,PaisConstantesFunciones.TABLENAME);

						finalQueryGlobalPais=Funciones.GetFinalQueryAppend(finalQueryGlobalPais, "");
						finalQueryGlobalPais+=PaisConstantesFunciones.SFINALQUERY;

						//this.cargarCombosPaissForeignKeyLista(finalQueryGlobal);
					} else {
						finalQueryGlobalPais=" WHERE " + ConstantesSql.ID + "="+estructuraSessionBean.getlidPaisActual();
					}
				} else {
					finalQueryGlobalPais="NONE";
				}


				String finalQueryGlobalCiudad="";

				if(((this.ciudadsForeignKey==null||this.ciudadsForeignKey.size()<=0) && this.estructuraConstantesFunciones.cargarid_ciudadEstructura)
					 || (this.esRecargarFks && this.estructuraConstantesFunciones.cargarid_ciudadEstructura)) {

					if(!this.estructuraSessionBean.getisBusquedaDesdeForeignKeySesionCiudad()) {

						this.arrDatoGeneral= new  ArrayList<DatoGeneral>();
						this.arrDatoGeneralNo= new  ArrayList<String>();


						arrColumnasGlobales=CiudadConstantesFunciones.getArrayColumnasGlobalesCiudad(this.arrDatoGeneral,this.arrDatoGeneralNo);
						finalQueryGlobalCiudad=Funciones.GetWhereGlobalConstants(this.parametroGeneralUsuario,this.moduloActual,true,false,arrColumnasGlobales,CiudadConstantesFunciones.TABLENAME);

						finalQueryGlobalCiudad=Funciones.GetFinalQueryAppend(finalQueryGlobalCiudad, "");
						finalQueryGlobalCiudad+=CiudadConstantesFunciones.SFINALQUERY;

						//this.cargarCombosCiudadsForeignKeyLista(finalQueryGlobal);
					} else {
						finalQueryGlobalCiudad=" WHERE " + ConstantesSql.ID + "="+estructuraSessionBean.getlidCiudadActual();
					}
				} else {
					finalQueryGlobalCiudad="NONE";
				}
			
			//ARCHITECTURE			
			if(Constantes.ISUSAEJBLOGICLAYER) {	
				estructuraReturnGeneral=estructuraLogic.cargarCombosLoteForeignKeyEstructura(finalQueryGlobalEmpresa,finalQueryGlobalSucursal,finalQueryGlobalEstructura,finalQueryGlobalTipoPago_NM,finalQueryGlobalNumeroPatronal,finalQueryGlobalCuentaContable,finalQueryGlobalTipoEstructura,finalQueryGlobalPais,finalQueryGlobalCiudad);//WithConnection
			} else if(Constantes.ISUSAEJBREMOTE) {
			} else if(Constantes.ISUSAEJBHOME) {
			}			
			//ARCHITECTURE
			
			

			if(!finalQueryGlobalEmpresa.equals("NONE")) {
				this.empresasForeignKey=estructuraReturnGeneral.getempresasForeignKey();
			}

			if(!finalQueryGlobalSucursal.equals("NONE")) {
				this.sucursalsForeignKey=estructuraReturnGeneral.getsucursalsForeignKey();
			}

			if(!finalQueryGlobalEstructura.equals("NONE")) {
				this.estructurasForeignKey=estructuraReturnGeneral.getestructurasForeignKey();
			}

			if(!finalQueryGlobalTipoPago_NM.equals("NONE")) {
				this.tipopago_nmsForeignKey=estructuraReturnGeneral.gettipopago_nmsForeignKey();
			}

			if(!finalQueryGlobalNumeroPatronal.equals("NONE")) {
				this.numeropatronalsForeignKey=estructuraReturnGeneral.getnumeropatronalsForeignKey();
			}

			if(!finalQueryGlobalCuentaContable.equals("NONE")) {
				this.cuentacontablesForeignKey=estructuraReturnGeneral.getcuentacontablesForeignKey();
			}

			if(!finalQueryGlobalTipoEstructura.equals("NONE")) {
				this.tipoestructurasForeignKey=estructuraReturnGeneral.gettipoestructurasForeignKey();
			}

			if(!finalQueryGlobalPais.equals("NONE")) {
				this.paissForeignKey=estructuraReturnGeneral.getpaissForeignKey();
			}

			if(!finalQueryGlobalCiudad.equals("NONE")) {
				this.ciudadsForeignKey=estructuraReturnGeneral.getciudadsForeignKey();
			}
			
			
		} catch(Exception e) {
			throw e;
		}		
	}
	
	public void addItemDefectoCombosTodosForeignKeyEstructura()throws Exception {
		try {
			
			this.addItemDefectoCombosForeignKeyEmpresa();
			this.addItemDefectoCombosForeignKeySucursal();
			this.addItemDefectoCombosForeignKeyEstructura();
			this.addItemDefectoCombosForeignKeyTipoPago_NM();
			this.addItemDefectoCombosForeignKeyNumeroPatronal();
			this.addItemDefectoCombosForeignKeyCuentaContable();
			this.addItemDefectoCombosForeignKeyTipoEstructura();
			this.addItemDefectoCombosForeignKeyPais();
			this.addItemDefectoCombosForeignKeyCiudad();
		} catch(Exception e) {
			throw e;
		}		
	}
	
	



	public void addItemDefectoCombosForeignKeyEmpresa()throws Exception {
		try {
			if(this.estructuraSessionBean==null) {
				this.estructuraSessionBean=new EstructuraSessionBean();
			}

			if(!this.estructuraSessionBean.getisBusquedaDesdeForeignKeySesionEmpresa()) {
				Empresa empresa=new Empresa();
				EmpresaConstantesFunciones.setEmpresaDescripcion(empresa,Constantes.SMENSAJE_ESCOJA_OPCION);
				empresa.setId(null);

				if(!EmpresaConstantesFunciones.ExisteEnLista(this.empresasForeignKey,empresa,true)) {

					this.empresasForeignKey.add(0,empresa);
				}
			}
		} catch(Exception e) {
			throw e;
		}
	}

	public void addItemDefectoCombosForeignKeySucursal()throws Exception {
		try {

			if(!this.estructuraSessionBean.getisBusquedaDesdeForeignKeySesionSucursal()) {
				Sucursal sucursal=new Sucursal();
				SucursalConstantesFunciones.setSucursalDescripcion(sucursal,Constantes.SMENSAJE_ESCOJA_OPCION);
				sucursal.setId(null);

				if(!SucursalConstantesFunciones.ExisteEnLista(this.sucursalsForeignKey,sucursal,true)) {

					this.sucursalsForeignKey.add(0,sucursal);
				}
			}
		} catch(Exception e) {
			throw e;
		}
	}

	public void addItemDefectoCombosForeignKeyEstructura()throws Exception {
		try {

			if(!this.estructuraSessionBean.getisBusquedaDesdeForeignKeySesionEstructura()) {
				Estructura estructura=new Estructura();
				EstructuraConstantesFunciones.setEstructuraDescripcion(estructura,Constantes.SMENSAJE_ESCOJA_OPCION);
				estructura.setId(null);

				if(!EstructuraConstantesFunciones.ExisteEnLista(this.estructurasForeignKey,estructura,true)) {

					this.estructurasForeignKey.add(0,estructura);
				}
			}
		} catch(Exception e) {
			throw e;
		}
	}

	public void addItemDefectoCombosForeignKeyTipoPago_NM()throws Exception {
		try {

			if(!this.estructuraSessionBean.getisBusquedaDesdeForeignKeySesionTipoPago_NM()) {
				TipoPago_NM tipopago_nm=new TipoPago_NM();
				TipoPago_NMConstantesFunciones.setTipoPago_NMDescripcion(tipopago_nm,Constantes.SMENSAJE_ESCOJA_OPCION);
				tipopago_nm.setId(null);

				if(!TipoPago_NMConstantesFunciones.ExisteEnLista(this.tipopago_nmsForeignKey,tipopago_nm,true)) {

					this.tipopago_nmsForeignKey.add(0,tipopago_nm);
				}
			}
		} catch(Exception e) {
			throw e;
		}
	}

	public void addItemDefectoCombosForeignKeyNumeroPatronal()throws Exception {
		try {

			if(!this.estructuraSessionBean.getisBusquedaDesdeForeignKeySesionNumeroPatronal()) {
				NumeroPatronal numeropatronal=new NumeroPatronal();
				NumeroPatronalConstantesFunciones.setNumeroPatronalDescripcion(numeropatronal,Constantes.SMENSAJE_ESCOJA_OPCION);
				numeropatronal.setId(null);

				if(!NumeroPatronalConstantesFunciones.ExisteEnLista(this.numeropatronalsForeignKey,numeropatronal,true)) {

					this.numeropatronalsForeignKey.add(0,numeropatronal);
				}
			}
		} catch(Exception e) {
			throw e;
		}
	}

	public void addItemDefectoCombosForeignKeyCuentaContable()throws Exception {
		try {

			if(!this.estructuraSessionBean.getisBusquedaDesdeForeignKeySesionCuentaContable()) {
				CuentaContable cuentacontable=new CuentaContable();
				CuentaContableConstantesFunciones.setCuentaContableDescripcion(cuentacontable,Constantes.SMENSAJE_ESCOJA_OPCION);
				cuentacontable.setId(null);

				if(!CuentaContableConstantesFunciones.ExisteEnLista(this.cuentacontablesForeignKey,cuentacontable,true)) {

					this.cuentacontablesForeignKey.add(0,cuentacontable);
				}
			}
		} catch(Exception e) {
			throw e;
		}
	}

	public void addItemDefectoCombosForeignKeyTipoEstructura()throws Exception {
		try {

			if(!this.estructuraSessionBean.getisBusquedaDesdeForeignKeySesionTipoEstructura()) {
				TipoEstructura tipoestructura=new TipoEstructura();
				TipoEstructuraConstantesFunciones.setTipoEstructuraDescripcion(tipoestructura,Constantes.SMENSAJE_ESCOJA_OPCION);
				tipoestructura.setId(null);

				if(!TipoEstructuraConstantesFunciones.ExisteEnLista(this.tipoestructurasForeignKey,tipoestructura,true)) {

					this.tipoestructurasForeignKey.add(0,tipoestructura);
				}
			}
		} catch(Exception e) {
			throw e;
		}
	}

	public void addItemDefectoCombosForeignKeyPais()throws Exception {
		try {

			if(!this.estructuraSessionBean.getisBusquedaDesdeForeignKeySesionPais()) {
				Pais pais=new Pais();
				PaisConstantesFunciones.setPaisDescripcion(pais,Constantes.SMENSAJE_ESCOJA_OPCION);
				pais.setId(null);

				if(!PaisConstantesFunciones.ExisteEnLista(this.paissForeignKey,pais,true)) {

					this.paissForeignKey.add(0,pais);
				}
			}
		} catch(Exception e) {
			throw e;
		}
	}

	public void addItemDefectoCombosForeignKeyCiudad()throws Exception {
		try {

			if(!this.estructuraSessionBean.getisBusquedaDesdeForeignKeySesionCiudad()) {
				Ciudad ciudad=new Ciudad();
				CiudadConstantesFunciones.setCiudadDescripcion(ciudad,Constantes.SMENSAJE_ESCOJA_OPCION);
				ciudad.setId(null);

				if(!CiudadConstantesFunciones.ExisteEnLista(this.ciudadsForeignKey,ciudad,true)) {

					this.ciudadsForeignKey.add(0,ciudad);
				}
			}
		} catch(Exception e) {
			throw e;
		}
	}
	
	public void initActionsCombosTodosForeignKeyEstructura()throws Exception {
		try {
			
		} catch(Exception e) {
			throw e;
		}		
	}
	
	public void initActionsCombosTodosForeignKeyEstructura(String sFormularioTipoBusqueda)throws Exception {
		try {
			
		} catch(Exception e) {
			throw e;
		}		
	}
	
	


	
	


	
	public void setVariablesGlobalesCombosForeignKeyEstructura()throws Exception {	
		try {
			if(this.parametroGeneralUsuario!=null && this.parametroGeneralUsuario.getId()>0) {
			
				this.setActualEmpresaForeignKey(this.parametroGeneralUsuario.getid_empresa(),false,"Formulario");
				this.setActualSucursalForeignKey(this.parametroGeneralUsuario.getid_sucursal(),false,"Formulario");
			
			
			}
			
			//INICIALIZA VARIABLES COMBOS GLOBALES AUXILIARES A FORMULARIO(Anio,Mes)
			this.setVariablesGlobalesAuxiliaresCombosForeignKeyEstructura();
		
		} catch(Exception e) {
			throw e;
		}
	}
	
	public void setVariablesObjetoActualToFormularioForeignKeyEstructura(Estructura estructura)throws Exception {	
		try {
			
			this.setActualEstructuraForeignKey(estructura.getid_estructura(),false,"Formulario");
			this.setActualTipoPago_NMForeignKey(estructura.getid_tipo_pago__n_m(),false,"Formulario");
			this.setActualNumeroPatronalForeignKey(estructura.getid_numero_patronal(),false,"Formulario");
			this.setActualCuentaContableForeignKey(estructura.getid_cuenta_contable(),false,"Formulario");
			this.setActualTipoEstructuraForeignKey(estructura.getid_tipo_estructura(),false,"Formulario");
			this.setActualPaisForeignKey(estructura.getid_pais(),false,"Formulario");
			this.setActualCiudadForeignKey(estructura.getid_ciudad(),false,"Formulario");			
		} catch(Exception e) {
			throw e;
		}
	}
	
	public void setVariablesObjetoActualToListasForeignKeyEstructura(Estructura estructura,String sTipoEvento)throws Exception {	
		try {
			
			

				if(estructura.getCuentaContable()!=null && !sTipoEvento.equals("id_cuenta_contableEstructura")) { //sTipoEvento Evita Bucle Infinito

					this.cuentacontablesForeignKey=new ArrayList<CuentaContable>();
					this.cuentacontablesForeignKey.add(estructura.getCuentaContable());

					this.addItemDefectoCombosForeignKeyCuentaContable();
					this.cargarCombosFrameCuentaContablesForeignKey("Todos");
				}
			
		} catch(Exception e) {
			throw e;
		}
	}
	
	/*
	public void setVariablesCombosFromBeanForeignKeyEstructura()throws Exception {	
		try {
			
			this.setActualEstructuraForeignKey(this.estructuraConstantesFunciones.getid_estructura(),false,"Formulario");
			this.setActualTipoPago_NMForeignKey(this.estructuraConstantesFunciones.getid_tipo_pago__n_m(),false,"Formulario");
			this.setActualNumeroPatronalForeignKey(this.estructuraConstantesFunciones.getid_numero_patronal(),false,"Formulario");
			this.setActualCuentaContableForeignKey(this.estructuraConstantesFunciones.getid_cuenta_contable(),false,"Formulario");
			this.setActualTipoEstructuraForeignKey(this.estructuraConstantesFunciones.getid_tipo_estructura(),false,"Formulario");
			this.setActualPaisForeignKey(this.estructuraConstantesFunciones.getid_pais(),false,"Formulario");
			this.setActualCiudadForeignKey(this.estructuraConstantesFunciones.getid_ciudad(),false,"Formulario");			
		} catch(Exception e) {
			throw e;
		}
	}
	*/
	
	public void setVariablesGlobalesAuxiliaresCombosForeignKeyEstructura()throws Exception {	
		try {
			
		
		} catch(Exception e) {
			throw e;
		}
	}
	
	public void setVariablesDefaultCombosForeignKeyEstructura()throws Exception {	
		try {
			
		} catch(Exception e) {
			throw e;
		}
	}
	
	public void setVariablesParametroCombosForeignKeyEstructura()throws Exception {	
		try {
			
		} catch(Exception e) {
			throw e;
		}
	}		
	
	public void cargarCombosParametroEstructura()throws Exception {
		try	{
			ArrayList<String> arrColumnasGlobales=new ArrayList<String>();
			String  finalQueryGlobal="";
			
			//this.cargarDatosCliente();
			
			
			
		} catch(Exception e) {
			throw e;
		}		
	}
		
	public void cargarCombosFrameForeignKeyEstructura()throws Exception {
		try {
			

			this.cargarCombosFrameEmpresasForeignKey("Todos");
			this.cargarCombosFrameSucursalsForeignKey("Todos");
			this.cargarCombosFrameEstructurasForeignKey("Todos");
			this.cargarCombosFrameTipoPago_NMsForeignKey("Todos");
			this.cargarCombosFrameNumeroPatronalsForeignKey("Todos");
			this.cargarCombosFrameCuentaContablesForeignKey("Todos");
			this.cargarCombosFrameTipoEstructurasForeignKey("Todos");
			this.cargarCombosFramePaissForeignKey("Todos");
			this.cargarCombosFrameCiudadsForeignKey("Todos");

		} catch(Exception e) {
			throw e;
		}		
	}		
	
	public void cargarCombosFrameForeignKeyEstructura(String sFormularioTipoBusqueda)throws Exception {
		try {
			

			this.cargarCombosFrameEmpresasForeignKey(sFormularioTipoBusqueda);
			this.cargarCombosFrameSucursalsForeignKey(sFormularioTipoBusqueda);
			this.cargarCombosFrameEstructurasForeignKey(sFormularioTipoBusqueda);
			this.cargarCombosFrameTipoPago_NMsForeignKey(sFormularioTipoBusqueda);
			this.cargarCombosFrameNumeroPatronalsForeignKey(sFormularioTipoBusqueda);
			this.cargarCombosFrameCuentaContablesForeignKey(sFormularioTipoBusqueda);
			this.cargarCombosFrameTipoEstructurasForeignKey(sFormularioTipoBusqueda);
			this.cargarCombosFramePaissForeignKey(sFormularioTipoBusqueda);
			this.cargarCombosFrameCiudadsForeignKey(sFormularioTipoBusqueda);

		} catch(Exception e) {
			throw e;
		}		
	}	
	
	public void setItemDefectoCombosForeignKeyEstructura()throws Exception {
		try {
			



			if(this.jInternalFrameDetalleFormEstructura.jComboBoxid_empresaEstructura!=null && this.jInternalFrameDetalleFormEstructura.jComboBoxid_empresaEstructura.getItemCount()>0) {
				this.jInternalFrameDetalleFormEstructura.jComboBoxid_empresaEstructura.setSelectedIndex(0);
			}

			if(this.jInternalFrameDetalleFormEstructura.jComboBoxid_sucursalEstructura!=null && this.jInternalFrameDetalleFormEstructura.jComboBoxid_sucursalEstructura.getItemCount()>0) {
				this.jInternalFrameDetalleFormEstructura.jComboBoxid_sucursalEstructura.setSelectedIndex(0);
			}

			if(this.jInternalFrameDetalleFormEstructura.jComboBoxid_estructuraEstructura!=null && this.jInternalFrameDetalleFormEstructura.jComboBoxid_estructuraEstructura.getItemCount()>0) {
				this.jInternalFrameDetalleFormEstructura.jComboBoxid_estructuraEstructura.setSelectedIndex(0);
			}

			if(this.jInternalFrameDetalleFormEstructura.jComboBoxid_tipo_pago__n_mEstructura!=null && this.jInternalFrameDetalleFormEstructura.jComboBoxid_tipo_pago__n_mEstructura.getItemCount()>0) {
				this.jInternalFrameDetalleFormEstructura.jComboBoxid_tipo_pago__n_mEstructura.setSelectedIndex(0);
			}

			if(this.jInternalFrameDetalleFormEstructura.jComboBoxid_numero_patronalEstructura!=null && this.jInternalFrameDetalleFormEstructura.jComboBoxid_numero_patronalEstructura.getItemCount()>0) {
				this.jInternalFrameDetalleFormEstructura.jComboBoxid_numero_patronalEstructura.setSelectedIndex(0);
			}

			if(this.jInternalFrameDetalleFormEstructura.jComboBoxid_cuenta_contableEstructura!=null && this.jInternalFrameDetalleFormEstructura.jComboBoxid_cuenta_contableEstructura.getItemCount()>0) {
				this.jInternalFrameDetalleFormEstructura.jComboBoxid_cuenta_contableEstructura.setSelectedIndex(0);
			}

			if(this.jInternalFrameDetalleFormEstructura.jComboBoxid_tipo_estructuraEstructura!=null && this.jInternalFrameDetalleFormEstructura.jComboBoxid_tipo_estructuraEstructura.getItemCount()>0) {
				this.jInternalFrameDetalleFormEstructura.jComboBoxid_tipo_estructuraEstructura.setSelectedIndex(0);
			}

			if(this.jInternalFrameDetalleFormEstructura.jComboBoxid_paisEstructura!=null && this.jInternalFrameDetalleFormEstructura.jComboBoxid_paisEstructura.getItemCount()>0) {
				this.jInternalFrameDetalleFormEstructura.jComboBoxid_paisEstructura.setSelectedIndex(0);
			}

			if(this.jInternalFrameDetalleFormEstructura.jComboBoxid_ciudadEstructura!=null && this.jInternalFrameDetalleFormEstructura.jComboBoxid_ciudadEstructura.getItemCount()>0) {
				this.jInternalFrameDetalleFormEstructura.jComboBoxid_ciudadEstructura.setSelectedIndex(0);
			}
		} catch(Exception e) {
			throw e;
		}		
	}		
	
	


















	
	

	public EstructuraBeanSwingJInternalFrame() throws Exception {
		super(false,PaginaTipo.PRINCIPAL);
	}
	
	public EstructuraBeanSwingJInternalFrame(Boolean cargarRelaciones,PaginaTipo paginaTipo) throws Exception {
		super(cargarRelaciones,paginaTipo);
	}
	
	public EstructuraBeanSwingJInternalFrame(Boolean conGuardarRelaciones,Boolean esGuardarRelacionado,Boolean cargarRelaciones,PaginaTipo paginaTipo) throws Exception {
		super(cargarRelaciones,paginaTipo);
		
		this.estructuraSessionBean=new EstructuraSessionBean(); 
		this.estructuraConstantesFunciones=new EstructuraConstantesFunciones(); 
		this.estructuraBean=new Estructura();//(this.estructuraConstantesFunciones); 		
		this.estructuraReturnGeneral=new EstructuraParameterReturnGeneral(); 
		
		this.estructuraSessionBean.setConGuardarRelaciones(conGuardarRelaciones);
		this.estructuraSessionBean.setEsGuardarRelacionado(esGuardarRelacionado);
				
	}
	
	public EstructuraBeanSwingJInternalFrame(Boolean blncargarCombostrForeignKey,Boolean blnCargarInformacionInicial,JDesktopPane jdesktopPane,Usuario usuarioActual,ResumenUsuario resumenUsuarioActual,Modulo moduloActual,Opcion opcionActual,ParametroGeneralSg parametroGeneralSg,ParametroGeneralUsuario parametroGeneralUsuario,Boolean conGuardarRelaciones,Boolean esGuardarRelacionado,Boolean cargarRelaciones,Boolean cargarTodosDatos,PaginaTipo paginaTipo) throws Exception {
		this(blncargarCombostrForeignKey,blnCargarInformacionInicial,jdesktopPane,usuarioActual,resumenUsuarioActual,moduloActual,opcionActual,parametroGeneralSg,parametroGeneralUsuario,paginaTipo,conGuardarRelaciones,esGuardarRelacionado,cargarRelaciones,cargarTodosDatos);
	}
		
	public EstructuraBeanSwingJInternalFrame(Boolean blncargarCombostrForeignKey,Boolean blnCargarInformacionInicial,JDesktopPane jdesktopPane,Usuario usuarioActual,ResumenUsuario resumenUsuarioActual,Modulo moduloActual,Opcion opcionActual,ParametroGeneralSg parametroGeneralSg,ParametroGeneralUsuario parametroGeneralUsuario,Boolean cargarRelaciones,Boolean cargarTodosDatos,PaginaTipo paginaTipo) throws Exception {
		this(blncargarCombostrForeignKey,blnCargarInformacionInicial,jdesktopPane,usuarioActual,resumenUsuarioActual,moduloActual,opcionActual,parametroGeneralSg,parametroGeneralUsuario,paginaTipo,false,false,cargarRelaciones,cargarTodosDatos);
	}	
	
	public EstructuraBeanSwingJInternalFrame(Boolean blncargarCombostrForeignKey,Boolean blnCargarInformacionInicial,JDesktopPane jdesktopPane,Usuario usuarioActual,ResumenUsuario resumenUsuarioActual,Modulo moduloActual,Opcion opcionActual,ParametroGeneralSg parametroGeneralSg,ParametroGeneralUsuario parametroGeneralUsuario,PaginaTipo paginaTipo,Boolean conGuardarRelaciones,Boolean esGuardarRelacionado,Boolean cargarRelaciones,Boolean cargarTodosDatos) throws Exception //Boolean esParaBusquedaForeignKey
    {
		super(jdesktopPane,conGuardarRelaciones,esGuardarRelacionado,cargarRelaciones,usuarioActual,resumenUsuarioActual,moduloActual,opcionActual,parametroGeneralSg,parametroGeneralUsuario,paginaTipo);
		
		try {
			
			this.permiteRecargarForm=false;
			
			this.startProcessEstructura(true);
			
			Boolean esParaBusquedaForeignKey=false;//ANTES USADO COMO PARAMETRO DEL CONSTRUCTOR
			
			if(paginaTipo.equals(PaginaTipo.BUSQUEDA)) {
				esParaBusquedaForeignKey=true;
			}
			
			
			
			//SE ASIGNA EN CLASE PADRE
			/*
			this.parametroGeneralSg=parametroGeneralSg;		
			this.parametroGeneralUsuario=parametroGeneralUsuario;	
			this.usuarioActual=usuarioActual;
			this.moduloActual=moduloActual;
			*/						
			
			long start_time=0;
			long end_time=0;
			
			if(Constantes2.ISDEVELOPING2) {
				start_time = System.currentTimeMillis();
			}
			
			if(!cargarTodosDatos) {
				this.sAccionBusqueda="NINGUNO";
			}
			
			this.estructuraConstantesFunciones=new EstructuraConstantesFunciones(); 
			this.estructuraBean=new Estructura();//this.estructuraConstantesFunciones); 			
			this.estructuraReturnGeneral=new EstructuraParameterReturnGeneral(); 
		
			EstructuraBeanSwingJInternalFrameAdditional.CargaInicialInicio(this, "NORMAL", null);
			
			this.setTitle(Funciones.GetTituloSistema(this.parametroGeneralSg,this.moduloActual,this.usuarioActual,"Estructura Mantenimiento",paginaTipo));			
			
			this.conTotales=false;
			
			this.conTotales=true;
			
			
			this.estructura=new Estructura();
			this.estructuras = new ArrayList<Estructura>();
			this.estructurasAux = new ArrayList<Estructura>();
			
			if(Constantes.ISUSAEJBLOGICLAYER) {
				this.estructuraLogic=new EstructuraLogic();
				this.estructuraLogic.getNewConnexionToDeep("");
			}
			
			//this.estructuraSessionBean.setConGuardarRelaciones(conGuardarRelaciones);
			//this.estructuraSessionBean.setEsGuardarRelacionado(esGuardarRelacionado);
			
			this.jDesktopPane=jdesktopPane;
			
			if(this.jDesktopPane.getClass().equals(JDesktopPaneMe.class)) {
				this.constantes2=((JDesktopPaneMe)this.jDesktopPane).constantes2;
			}
			
			if(!Constantes.CON_VARIAS_VENTANAS) {
    			MainJFrame.cerrarJInternalFramesExistentes(this.jDesktopPane,this.jInternalFrameDetalleFormEstructura);
				
				if(!this.conCargarMinimo) {
					
					if(this.jInternalFrameReporteDinamicoEstructura!=null) {
						MainJFrame.cerrarJInternalFramesExistentes(this.jDesktopPane,this.jInternalFrameReporteDinamicoEstructura);	
					}
					
					if(this.jInternalFrameImportacionEstructura!=null) {
						MainJFrame.cerrarJInternalFramesExistentes(this.jDesktopPane,this.jInternalFrameImportacionEstructura);							
					}
					
				}
				
				
				if(!this.conCargarMinimo) {
					
					if(this.jInternalFrameOrderByEstructura!=null) {
						MainJFrame.cerrarJInternalFramesExistentes(this.jDesktopPane,this.jInternalFrameOrderByEstructura);					
					}
					
				}
			}
			
			//DETALLE DATOS
			if(this.jInternalFrameDetalleFormEstructura!=null) { //this.conCargarFormDetalle) {
				this.jDesktopPane.add(this.jInternalFrameDetalleFormEstructura);
				this.jInternalFrameDetalleFormEstructura.setVisible(false);
				this.jInternalFrameDetalleFormEstructura.setSelected(false);						
			}
			
			if(!this.conCargarMinimo) {
				
				//REPORTE DINAMICO
				if(this.jInternalFrameReporteDinamicoEstructura!=null) {
					this.jDesktopPane.add(this.jInternalFrameReporteDinamicoEstructura);
					this.jInternalFrameReporteDinamicoEstructura.setVisible(false);
					this.jInternalFrameReporteDinamicoEstructura.setSelected(false);
				}
				
				//IMPORTACION
				if(this.jInternalFrameImportacionEstructura!=null) {
					this.jDesktopPane.add(this.jInternalFrameImportacionEstructura);
					this.jInternalFrameImportacionEstructura.setVisible(false);
					this.jInternalFrameImportacionEstructura.setSelected(false);
				}
				
				
			}
			
			
			if(!this.conCargarMinimo) {
				
				if(this.jInternalFrameOrderByEstructura!=null) {
					this.jDesktopPane.add(this.jInternalFrameOrderByEstructura);
					this.jInternalFrameOrderByEstructura.setVisible(false);
					this.jInternalFrameOrderByEstructura.setSelected(false);				
				}
				
			}
			
			this.estructurasArbol= new ArrayList<Estructura>();
			
			if(!Constantes.CON_VARIAS_VENTANAS) {
				MainJFrame.cerrarJInternalFramesExistentes(this.jDesktopPane,this.jInternalFrameTreeEstructura);    		
			}
			
			this.jDesktopPane.add(this.jInternalFrameTreeEstructura);
			this.jInternalFrameTreeEstructura.setVisible(false);
	        this.jInternalFrameTreeEstructura.setSelected(false);						
			
			if(!esParaBusquedaForeignKey) {
				this.getTodosEstructuraArbol();
			}			
			
			//this.esParaBusquedaForeignKey=false;
			this.esParaBusquedaForeignKey=esParaBusquedaForeignKey;
			
			this.invalidValues=new InvalidValue[0];
			
			
			
			this.idEstructuraActual=0L;
			this.rowIndexActual=0;
			
			
			this.iNumeroPaginacionPagina=0;
			this.iNumeroPaginacion=EstructuraConstantesFunciones.INUMEROPAGINACION;
			this.pagination=new Pagination();
			this.datosCliente=new DatosCliente();
			this.lIdUsuarioSesion=0L;	
			this.sTipoArchivoReporte="";
			this.sTipoArchivoReporteDinamico="";
			this.sTipoReporte="";
			this.sTipoReporteDinamico="";
			this.sTipoPaginacion="";
			this.sTipoRelacion="";
			this.sTipoAccion="";
			this.sTipoAccionFormulario="";
			this.sTipoSeleccionar="";			
			this.sDetalleReporte="";
			this.sTipoReporteExtra="";
			this.sValorCampoGeneral="";
			this.sPathReporteDinamico="";			
			
			this.isMostrarNumeroPaginacion=false;
			this.isSeleccionarTodos=false;
			this.isSeleccionados=false;
			this.conGraficoReporte=false;
			this.isPostAccionNuevo=false;
			this.isPostAccionSinCerrar=false;
			this.isPostAccionSinMensaje=false;
			this.esReporteDinamico=false;
			this.esRecargarFks=false;
			this.esReporteAccionProceso=false;
			
			this.estructuraReturnGeneral=new EstructuraParameterReturnGeneral();
			
			this.estructuraParameterGeneral=new EstructuraParameterReturnGeneral();
			
			
			
			this.sistemaLogicAdditional=new SistemaLogicAdditional();
			
			this.sistemaLogicAdditional.setConnexion(this.estructuraLogic.getConnexion());			
			
			
			
			
			
			
			
			//VERIFICAR GLOBAL
			this.cargarDatosCliente();			
			
			
			if(!this.estructuraSessionBean.getEsGuardarRelacionado()) {
				if(Constantes.ISUSAEJBLOGICLAYER) {	
					if(!sistemaLogicAdditional.validarLicenciaCliente(this.datosCliente,this.moduloActual,this.usuarioActual)) {
					 	this.setVisible(false);
						throw new Exception(Mensajes.SERROR_CONTROLGLOBAL);
					}
					
				} else if(Constantes.ISUSAEJBREMOTE) {
					
				} else if(Constantes.ISUSAEJBHOME) {
				}
			}			
			
			//VERIFICAR GLOBAL
			
			//VERIFICAR SESSION ACTUAL
			//this.cargarDatosCliente();
			
			this.sistemaReturnGeneral=new SistemaParameterReturnGeneral();
			
			SistemaParameterReturnGeneralAdditional.inicializarSinSeguridad(this.sistemaReturnGeneral);
			
			if(EstructuraJInternalFrame.CON_LLAMADA_SIMPLE) {
				if(this.estructuraSessionBean.getEsGuardarRelacionado()) {
					this.opcionActual.setId(0L);
					
					//idOpcion=0L;					
				}
				
				ArrayList<String> arrPaginas=new ArrayList<String>();		
				ArrayList<Opcion> opcionsFinal=new ArrayList<Opcion>();	
				
				arrPaginas.add(CentroCostoEstructuraConstantesFunciones.SNOMBREOPCION);
				arrPaginas.add(PlaniVacacionConstantesFunciones.SNOMBREOPCION);
				arrPaginas.add(AsistenciaMensualConstantesFunciones.SNOMBREOPCION);
				arrPaginas.add(EmpleadoProcesoRubroConstantesFunciones.SNOMBREOPCION);
				arrPaginas.add(EmpleadoPagoRubroConstantesFunciones.SNOMBREOPCION);
				arrPaginas.add(ProvisionEmpleadoConstantesFunciones.SNOMBREOPCION);
				arrPaginas.add(EmpleadoConstantesFunciones.SNOMBREOPCION);
				arrPaginas.add(EstructuraConstantesFunciones.SNOMBREOPCION);
				arrPaginas.add(EvaluacionEmpleadoConstantesFunciones.SNOMBREOPCION);
				arrPaginas.add(EmpleadoImpuestoRentaConstantesFunciones.SNOMBREOPCION);
				arrPaginas.add(RubroEstructuraConstantesFunciones.SNOMBREOPCION);
				arrPaginas.add(CierreRolMensualConstantesFunciones.SNOMBREOPCION);
				arrPaginas.add(FormatoNomiConstantesFunciones.SNOMBREOPCION);
				arrPaginas.add(EmpleadoEstructuraConstantesFunciones.SNOMBREOPCION);
				arrPaginas.add(HistorialPagoNomiConstantesFunciones.SNOMBREOPCION);
				arrPaginas.add(AsistenciaDiariaConstantesFunciones.SNOMBREOPCION);
				arrPaginas.add(FuncionEstrucConstantesFunciones.SNOMBREOPCION);
				arrPaginas.add(SolicitudReemplazoConstantesFunciones.SNOMBREOPCION);
				arrPaginas.add(SolicitudHoraExtraConstantesFunciones.SNOMBREOPCION);
				arrPaginas.add(EvaluacionNomiConstantesFunciones.SNOMBREOPCION);
				arrPaginas.add(SolicitudVacacionConstantesFunciones.SNOMBREOPCION);
				arrPaginas.add(ResponsableActivoFijoConstantesFunciones.SNOMBREOPCION);
				arrPaginas.add(RubroEmpleaCuentaContableConstantesFunciones.SNOMBREOPCION);
		
				if(Constantes.ISUSAEJBLOGICLAYER) {	
					//this.sistemaReturnGeneral=sistemaLogicAdditional.validarCargarSesionUsuarioActualWithConnection(this.usuarioActual,this.datosCliente,this.resumenUsuarioActual,Constantes.LIDSISTEMAACTUAL,EstructuraConstantesFunciones.SNOMBREOPCION,this.opcionActual,this.estructuraSessionBean.getEsGuardarRelacionado(),this.estructuraSessionBean.getConGuardarRelaciones(),arrPaginas);
					
					this.sistemaReturnGeneral=sistemaLogicAdditional.validarCargarSesionUsuarioActual(this.usuarioActual,this.datosCliente,this.resumenUsuarioActual,Constantes.LIDSISTEMAACTUAL,EstructuraConstantesFunciones.SNOMBREOPCION,this.opcionActual,this.estructuraSessionBean.getEsGuardarRelacionado(),this.estructuraSessionBean.getConGuardarRelaciones(),arrPaginas);
					
					if(!this.sistemaReturnGeneral.getEsValidado()) {
					 	this.setVisible(false);
						throw new Exception(Mensajes.SERROR_SESIONACTUAL);
					}
				} else if(Constantes.ISUSAEJBREMOTE) {
				} else if(Constantes.ISUSAEJBHOME) {
					//FALTA
				}
			} else { 
				if(Constantes.ISUSAEJBLOGICLAYER) {	
					if(!sistemaLogicAdditional.validarSesionUsuarioActual(this.usuarioActual,this.datosCliente,this.resumenUsuarioActual)) {
					 	this.setVisible(false);
						throw new Exception(Mensajes.SERROR_SESIONACTUAL);
					}
				
				} else if(Constantes.ISUSAEJBREMOTE) {
					
				} else if(Constantes.ISUSAEJBHOME) {
				}
			} 
			//VERIFICAR SESSION ACTUAL
			
			
			this.sVisibilidadTablaBusquedas="table-row";
			this.sVisibilidadTablaElementos="none";
			this.sVisibilidadTablaAcciones="none";
			
			this.isVisibilidadCeldaNuevoEstructura=false;
			this.isVisibilidadCeldaDuplicarEstructura=true;
			this.isVisibilidadCeldaCopiarEstructura=true;
			this.isVisibilidadCeldaVerFormEstructura=true;
			this.isVisibilidadCeldaOrdenEstructura=true;
			this.isVisibilidadCeldaNuevoRelacionesEstructura=false;
			this.isVisibilidadCeldaModificarEstructura=false;
			this.isVisibilidadCeldaActualizarEstructura=false;
			this.isVisibilidadCeldaEliminarEstructura=false;
			this.isVisibilidadCeldaCancelarEstructura=false;
			this.isVisibilidadCeldaGuardarEstructura=false;
			this.isVisibilidadCeldaGuardarCambiosEstructura=false;
			
			
			this.isVisibilidadFK_IdCiudad=true;
			this.isVisibilidadFK_IdCuentaContable=true;
			this.isVisibilidadFK_IdEmpresa=true;
			this.isVisibilidadFK_IdEstructura=true;
			this.isVisibilidadFK_IdNumeroPatronal=true;
			this.isVisibilidadFK_IdPais=true;
			this.isVisibilidadFK_IdSucursal=true;
			this.isVisibilidadFK_IdTipoEstructura=true;
			this.isVisibilidadFK_IdTipoPago_NM=true;
			
			//ELEMENTOS TABLAS PARAMETOS
			
			
			
			//ELEMENTOS TABLAS PARAMETOS_FIN
			
			//this.actualizarEstadoCeldasBotonesEstructura("n", isGuardarCambiosEnLote, isEsMantenimientoRelacionado);
						
			
			
			this.inicializarPermisosEstructura();
			
			//INICIALIZAR FALSE, TALVEZ COMENTAR
			this.setPermisosUsuarioEstructura(false);
			
			this.setPermisosUsuarioEstructura();
			
			
			
			//FUNCIONALIDAD_RELACIONADO
			if(!this.estructuraSessionBean.getEsGuardarRelacionado() 
				|| (this.estructuraSessionBean.getEsGuardarRelacionado() && this.estructuraSessionBean.getConGuardarRelaciones())) {
				
				this.inicializarSetPermisosUsuarioEstructuraClasesRelacionadas();
			}
			
			if(this.estructuraSessionBean.getConGuardarRelaciones()) {
				this.actualizarTabsSetPermisosUsuarioEstructuraClasesRelacionadas();
			}
			
			
			
			//SOLO SE EJECUTA LA PRIMERA VEZ, BINDINGS SI FUNCIONA
			if(!EstructuraJInternalFrame.ISBINDING_MANUAL) {
				this.inicializarActualizarBindingBotonesPermisosEstructura();
			} else {
				this.inicializarActualizarBindingBotonesPermisosManualEstructura();
			}
			
			if(!this.isPermisoBusquedaEstructura) {
				//BYDAN_BUSQUEDAS
				
				this.jTabbedPaneBusquedasEstructura.setVisible(false);				
				
			}
			
			
			
			//FUNCIONALIDAD_RELACIONADO
			if(!this.estructuraSessionBean.getEsGuardarRelacionado()) {				
				this.tiposArchivosReportes=Funciones.getListTiposArchivosReportes();
				this.tiposArchivosReportesDinamico=Funciones.getListTiposArchivosReportes();
				this.tiposReportes=Funciones.getListTiposReportes(true);
				this.tiposReportesDinamico=Funciones.getListTiposReportesDinamico(true);
				
				
				this.tiposReportes.add(new Reporte("RELACIONES","RELACIONES"));
				this.tiposReportesDinamico.add(new Reporte("RELACIONES","RELACIONES"));
				
				this.tiposGraficosReportes=Funciones2.getListTiposGraficosReportes();
				this.tiposPaginacion=Funciones2.getListTiposPaginacion(this.isPermisoPaginacionMedioEstructura,this.isPermisoPaginacionMedioEstructura,this.isPermisoPaginacionTodoEstructura);
				this.tiposSeleccionar=Funciones2.getListTiposSeleccionar();
				this.tiposSeleccionar.addAll(EstructuraConstantesFunciones.getTiposSeleccionarEstructura());
				
				this.tiposColumnasSelect=EstructuraConstantesFunciones.getTiposSeleccionarEstructura(true);
				
				this.tiposRelacionesSelect=new ArrayList<Reporte>();								
				
				this.cargarTiposRelacionesSelectEstructura();				
				//this.tiposRelacionesSelect=EstructuraConstantesFunciones.getTiposRelacionesEstructura(true);
				
			} else {
				this.tiposArchivosReportes=new ArrayList<Reporte>();
				this.tiposArchivosReportesDinamico=new ArrayList<Reporte>();
				this.tiposReportes=new ArrayList<Reporte>();
				this.tiposReportesDinamico=new ArrayList<Reporte>();
				this.tiposGraficosReportes=new ArrayList<Reporte>();
				this.tiposPaginacion=new ArrayList<Reporte>();
				this.tiposSeleccionar=new ArrayList<Reporte>();			
				this.tiposColumnasSelect=new ArrayList<Reporte>();	
				this.tiposRelacionesSelect=new ArrayList<Reporte>();	
			}
						
			
			//FUNCIONALIDAD_RELACIONADO
			//if(!this.estructuraSessionBean.getEsGuardarRelacionado()) {
				//SE ENCUENTRA MAS ADELANTE CON ACCIONES POR USUARIO
				//ACCIONES GENERALES Y POR USUARIO
				this.tiposRelaciones=Funciones2.getListTiposRelaciones();
				this.setRelacionesUsuarioEstructura();
				
				this.tiposAcciones=Funciones2.getListTiposAcciones(true,false,true);
				this.setAccionesUsuarioEstructura(false);	
				
				this.tiposAccionesFormulario=Funciones2.getListTiposAccionesFormulario(true,false,true);							
				this.setAccionesUsuarioEstructura(true);	
				
				this.inicializarActualizarBindingtiposArchivosReportesAccionesEstructura() ;
			
			/*
			} else {
				this.tiposAcciones=new ArrayList<Reporte>();
				this.tiposAccionesFormulario=new ArrayList<Reporte>();
			}
			*/						
			
			this.inicializarInvalidValues();
						
			this.arrDatoGeneral= new  ArrayList<DatoGeneral>();
			this.arrDatoGeneralNo= new  ArrayList<String>();
			
			
			
			this.arrOrderBy= new  ArrayList<OrderBy>();
			
			
			this.arrDatoGeneralMinimos= new  ArrayList<DatoGeneralMinimo>();
			
			
			this.traerValoresTablaOrderBy();			
			
			
			this.isGuardarCambiosEnLote=false;
			this.isCargarCombosDependencia=false;
			
			
			this.centrocostoestructuraLogic=new CentroCostoEstructuraLogic();
			this.planivacacionCargoLogic=new PlaniVacacionLogic();
			this.asistenciamensualLogic=new AsistenciaMensualLogic();
			this.empleadoprocesorubroLogic=new EmpleadoProcesoRubroLogic();
			this.empleadopagorubroLogic=new EmpleadoPagoRubroLogic();
			this.provisionempleadoLogic=new ProvisionEmpleadoLogic();
			this.empleadoLogic=new EmpleadoLogic();
			this.evaluacionempleadoLogic=new EvaluacionEmpleadoLogic();
			this.empleadoimpuestorentaLogic=new EmpleadoImpuestoRentaLogic();
			this.rubroestructuraLogic=new RubroEstructuraLogic();
			this.cierrerolmensualLogic=new CierreRolMensualLogic();
			this.formatonomiLogic=new FormatoNomiLogic();
			this.empleadoestructuraLogic=new EmpleadoEstructuraLogic();
			this.historialpagonomiLogic=new HistorialPagoNomiLogic();
			this.asistenciadiariaLogic=new AsistenciaDiariaLogic();
			this.funcionestrucLogic=new FuncionEstrucLogic();
			this.solicitudreemplazoLogic=new SolicitudReemplazoLogic();
			this.solicitudhoraextraLogic=new SolicitudHoraExtraLogic();
			this.evaluacionnomiLogic=new EvaluacionNomiLogic();
			this.solicitudvacacionLogic=new SolicitudVacacionLogic();
			this.responsableactivofijoLogic=new ResponsableActivoFijoLogic();
			this.rubroempleacuentacontableLogic=new RubroEmpleaCuentaContableLogic(); 
			jasperPrint = null;												
			
			//FK
			
			this.empresaLogic=new EmpresaLogic();
			this.sucursalLogic=new SucursalLogic();
			this.tipopago_nmLogic=new TipoPago_NMLogic();
			this.numeropatronalLogic=new NumeroPatronalLogic();
			this.cuentacontableLogic=new CuentaContableLogic();
			this.tipoestructuraLogic=new TipoEstructuraLogic();
			this.paisLogic=new PaisLogic();
			this.ciudadLogic=new CiudadLogic();
			
			//PARAMETROS
			
			
			/*
			if(Constantes.ISUSAEJBREMOTE || Constantes.ISUSAEJBHOME) {		
				hashtableEnv =  Funciones.getHashtableEnv();		
				initialContext = new InitialContext(hashtableEnv);	
			}
			*/
			/*
			if(Constantes.ISUSAEJBREMOTE) {
				estructuraImplementable= (EstructuraImplementable) initialContext.lookup(Constantes.SEJBPACKAGE+Constantes.SEJBSEPARATOR+EstructuraConstantesFunciones.SEJBNAME+Constantes.SEJBSEPARATOR+Constantes.SEJBREMOTE);
			} else if(Constantes.ISUSAEJBHOME) {
				estructuraImplementableHome= (EstructuraImplementableHome) initialContext.lookup(Constantes.SEJBPACKAGE+Constantes.SEJBSEPARATOR+EstructuraConstantesFunciones.SEJBNAME+Constantes.SEJBSEPARATOR+Constantes.SEJBLOCAL);
			}			
			*/
			
			
			this.estructuras= new ArrayList<Estructura>();
			this.estructurasEliminados= new ArrayList<Estructura>();
						
			this.isEsNuevoEstructura=false;
			this.esParaAccionDesdeFormularioEstructura=false;
			this.isEsMantenimientoRelacionesRelacionadoUnico=false;
			this.isEsMantenimientoRelaciones=false;
			this.isEsMantenimientoRelacionado=false;
			this.isContieneImagenes=false;
			
			
			
			
			//BUSQUEDA INTERNA FK
			this.idCuentaContableActual=0L;
			
			//INICIALIZAR LISTAS FK
			
			this.empresasForeignKey=new ArrayList<Empresa>() ;
			this.sucursalsForeignKey=new ArrayList<Sucursal>() ;
			this.estructurasForeignKey=new ArrayList<Estructura>() ;
			this.tipopago_nmsForeignKey=new ArrayList<TipoPago_NM>() ;
			this.numeropatronalsForeignKey=new ArrayList<NumeroPatronal>() ;
			this.cuentacontablesForeignKey=new ArrayList<CuentaContable>() ;
			this.tipoestructurasForeignKey=new ArrayList<TipoEstructura>() ;
			this.paissForeignKey=new ArrayList<Pais>() ;
			this.ciudadsForeignKey=new ArrayList<Ciudad>() ;
			
			
			
			
			if(blncargarCombostrForeignKey) {
				this.cargarCombosForeignKeyEstructura(this.isCargarCombosDependencia);
			}
			
			this.cargarCombosParametroEstructura();
			
			
			
			
			
			//FUNCIONALIDAD_RELACIONADO
			if(!this.estructuraSessionBean.getEsGuardarRelacionado()) {
				this.onLoad();
			}
						
			EstructuraBeanSwingJInternalFrameAdditional.RecargarVentanaSegunOpcion(this,opcionActual);
			
			/*
			if(blnCargarInformacionInicial) {
				this.recargarInformacion();
			}
			*/
			//this.iNumeroPaginacionPagina=0;
			//this.iNumeroPaginacion=EstructuraConstantesFunciones.INUMEROPAGINACION;
			
			this.actualizarEstadoCeldasBotonesEstructura("n", isGuardarCambiosEnLote, isEsMantenimientoRelacionado);
			//SOLO LA PRIMERA VEZ HACE LOS BINDINGS, SOLO AHI FUNCIONA
			this.inicializarActualizarBindingEstructura(true); 
			
			//SE REDIMENSIONA SINO NO SE ACTUALIZA
			this.redimensionarTablaDatos();
			
			
			this.initActions();
			
			;
						
			if(this.jInternalFrameDetalleFormEstructura!=null) {//if(this.conCargarFormDetalle) {
				this.cargarMenuRelaciones();
			}
			
			//OBLIGA CARGAR DETALLE, MEJOR DESHABILITAR, FALTA TALVEZ PONER EN SELECCIONAR
			//MAYBE
			//this.updateControlesFormularioEstructura();
			
			if(!this.conCargarMinimo) {
				this.updateBusquedasFormularioEstructura();
			}
			
			EstructuraBeanSwingJInternalFrameAdditional.CargaInicial(this, "NORMAL", null);
			
			
			//SE REALIZA ESTO PARA QUE SE PUEDA RECORRER TAB SIN IMPORTAR ORDEN
			Boolean existeTabBusqueda=false;
			
			if(!this.conCargarMinimo) {
				//BYDAN_BUSQUEDAS
				
				
				for(int i=0; i<this.jTabbedPaneBusquedasEstructura.getTabCount(); i++) {
					this.jTabbedPaneBusquedasEstructura.setSelectedIndex(i);
						
					if(!existeTabBusqueda) {
						existeTabBusqueda=true;
					}
				}
					
				if(existeTabBusqueda) {
					this.jTabbedPaneBusquedasEstructura.setSelectedIndex(0);
				}	
				
				
			}
			
			
			if(Constantes.ISUSAEJBLOGICLAYER) {
				this.estructuraLogic.commitNewConnexionToDeep();
			}
			
			
			if(Constantes2.ISDEVELOPING2) {
				end_time = System.currentTimeMillis();			
				String sTipo="Load Ventana";
				Funciones2.getMensajeTiempoEjecucion(start_time, end_time, sTipo,false);
			}  
			
			this.finishProcessEstructura(true);
			
			this.dEnd=(double)System.currentTimeMillis();
			
			this.dDif=this.dEnd - this.dStart;
			
			if(Constantes.ISDEVELOPING) {
				System.out.println("Tiempo(ms) Carga Estructura: " + this.dDif); 
			}
			
			this.permiteRecargarForm=true;
			
		} catch(Exception e) {
			
			if(Constantes.ISUSAEJBLOGICLAYER) {
				this.estructuraLogic.rollbackNewConnexionToDeep();
			}
			
			FuncionesSwing.manageException(this, e,logger,EstructuraConstantesFunciones.CLASSNAME);
		
		} finally {
			if(Constantes.ISUSAEJBLOGICLAYER) {
				this.estructuraLogic.closeNewConnexionToDeep();
			}
		}	 
    }
	
	public void cargarTiposRelacionesSelectEstructura() {
		Reporte reporte=new Reporte();
		
	

		reporte=new Reporte();
		reporte.setsCodigo(CentroCostoEstructuraConstantesFunciones.SCLASSWEBTITULO);
		reporte.setsDescripcion(CentroCostoEstructuraConstantesFunciones.SCLASSWEBTITULO);
		this.tiposRelacionesSelect.add(reporte);

		reporte=new Reporte();
		reporte.setsCodigo(PlaniVacacionConstantesFunciones.SCLASSWEBTITULO);
		reporte.setsDescripcion(PlaniVacacionConstantesFunciones.SCLASSWEBTITULO);
		this.tiposRelacionesSelect.add(reporte);

		reporte=new Reporte();
		reporte.setsCodigo(AsistenciaMensualConstantesFunciones.SCLASSWEBTITULO);
		reporte.setsDescripcion(AsistenciaMensualConstantesFunciones.SCLASSWEBTITULO);
		this.tiposRelacionesSelect.add(reporte);

		reporte=new Reporte();
		reporte.setsCodigo(EmpleadoProcesoRubroConstantesFunciones.SCLASSWEBTITULO);
		reporte.setsDescripcion(EmpleadoProcesoRubroConstantesFunciones.SCLASSWEBTITULO);
		this.tiposRelacionesSelect.add(reporte);

		reporte=new Reporte();
		reporte.setsCodigo(EmpleadoPagoRubroConstantesFunciones.SCLASSWEBTITULO);
		reporte.setsDescripcion(EmpleadoPagoRubroConstantesFunciones.SCLASSWEBTITULO);
		this.tiposRelacionesSelect.add(reporte);

		reporte=new Reporte();
		reporte.setsCodigo(ProvisionEmpleadoConstantesFunciones.SCLASSWEBTITULO);
		reporte.setsDescripcion(ProvisionEmpleadoConstantesFunciones.SCLASSWEBTITULO);
		this.tiposRelacionesSelect.add(reporte);

		reporte=new Reporte();
		reporte.setsCodigo(EmpleadoConstantesFunciones.SCLASSWEBTITULO);
		reporte.setsDescripcion(EmpleadoConstantesFunciones.SCLASSWEBTITULO);
		this.tiposRelacionesSelect.add(reporte);

		reporte=new Reporte();
		reporte.setsCodigo(EstructuraConstantesFunciones.SCLASSWEBTITULO);
		reporte.setsDescripcion(EstructuraConstantesFunciones.SCLASSWEBTITULO);
		this.tiposRelacionesSelect.add(reporte);

		reporte=new Reporte();
		reporte.setsCodigo(EvaluacionEmpleadoConstantesFunciones.SCLASSWEBTITULO);
		reporte.setsDescripcion(EvaluacionEmpleadoConstantesFunciones.SCLASSWEBTITULO);
		this.tiposRelacionesSelect.add(reporte);

		reporte=new Reporte();
		reporte.setsCodigo(EmpleadoImpuestoRentaConstantesFunciones.SCLASSWEBTITULO);
		reporte.setsDescripcion(EmpleadoImpuestoRentaConstantesFunciones.SCLASSWEBTITULO);
		this.tiposRelacionesSelect.add(reporte);

		reporte=new Reporte();
		reporte.setsCodigo(RubroEstructuraConstantesFunciones.SCLASSWEBTITULO);
		reporte.setsDescripcion(RubroEstructuraConstantesFunciones.SCLASSWEBTITULO);
		this.tiposRelacionesSelect.add(reporte);

		reporte=new Reporte();
		reporte.setsCodigo(CierreRolMensualConstantesFunciones.SCLASSWEBTITULO);
		reporte.setsDescripcion(CierreRolMensualConstantesFunciones.SCLASSWEBTITULO);
		this.tiposRelacionesSelect.add(reporte);

		reporte=new Reporte();
		reporte.setsCodigo(FormatoNomiConstantesFunciones.SCLASSWEBTITULO);
		reporte.setsDescripcion(FormatoNomiConstantesFunciones.SCLASSWEBTITULO);
		this.tiposRelacionesSelect.add(reporte);

		reporte=new Reporte();
		reporte.setsCodigo(EmpleadoEstructuraConstantesFunciones.SCLASSWEBTITULO);
		reporte.setsDescripcion(EmpleadoEstructuraConstantesFunciones.SCLASSWEBTITULO);
		this.tiposRelacionesSelect.add(reporte);

		reporte=new Reporte();
		reporte.setsCodigo(HistorialPagoNomiConstantesFunciones.SCLASSWEBTITULO);
		reporte.setsDescripcion(HistorialPagoNomiConstantesFunciones.SCLASSWEBTITULO);
		this.tiposRelacionesSelect.add(reporte);

		reporte=new Reporte();
		reporte.setsCodigo(AsistenciaDiariaConstantesFunciones.SCLASSWEBTITULO);
		reporte.setsDescripcion(AsistenciaDiariaConstantesFunciones.SCLASSWEBTITULO);
		this.tiposRelacionesSelect.add(reporte);

		reporte=new Reporte();
		reporte.setsCodigo(FuncionEstrucConstantesFunciones.SCLASSWEBTITULO);
		reporte.setsDescripcion(FuncionEstrucConstantesFunciones.SCLASSWEBTITULO);
		this.tiposRelacionesSelect.add(reporte);

		reporte=new Reporte();
		reporte.setsCodigo(SolicitudReemplazoConstantesFunciones.SCLASSWEBTITULO);
		reporte.setsDescripcion(SolicitudReemplazoConstantesFunciones.SCLASSWEBTITULO);
		this.tiposRelacionesSelect.add(reporte);

		reporte=new Reporte();
		reporte.setsCodigo(SolicitudHoraExtraConstantesFunciones.SCLASSWEBTITULO);
		reporte.setsDescripcion(SolicitudHoraExtraConstantesFunciones.SCLASSWEBTITULO);
		this.tiposRelacionesSelect.add(reporte);

		reporte=new Reporte();
		reporte.setsCodigo(EvaluacionNomiConstantesFunciones.SCLASSWEBTITULO);
		reporte.setsDescripcion(EvaluacionNomiConstantesFunciones.SCLASSWEBTITULO);
		this.tiposRelacionesSelect.add(reporte);

		reporte=new Reporte();
		reporte.setsCodigo(SolicitudVacacionConstantesFunciones.SCLASSWEBTITULO);
		reporte.setsDescripcion(SolicitudVacacionConstantesFunciones.SCLASSWEBTITULO);
		this.tiposRelacionesSelect.add(reporte);

		reporte=new Reporte();
		reporte.setsCodigo(ResponsableActivoFijoConstantesFunciones.SCLASSWEBTITULO);
		reporte.setsDescripcion(ResponsableActivoFijoConstantesFunciones.SCLASSWEBTITULO);
		this.tiposRelacionesSelect.add(reporte);

		reporte=new Reporte();
		reporte.setsCodigo(RubroEmpleaCuentaContableConstantesFunciones.SCLASSWEBTITULO);
		reporte.setsDescripcion(RubroEmpleaCuentaContableConstantesFunciones.SCLASSWEBTITULO);
		this.tiposRelacionesSelect.add(reporte);
	}
	
	
	
	public void jTabbedPaneChangeListenerGeneral(String sTipo,ChangeEvent evt) { 	  
		Boolean procesaCargarParteTab=false;
			
		try {
			int iIndex=0;		    			
			String sTitle="";
			
			//TABBED PANE RELACIONES
			if(sTipo.equals("RelacionesEstructura")) {
				iIndex=this.jInternalFrameDetalleFormEstructura.jTabbedPaneRelacionesEstructura.getSelectedIndex();		    
			
				sTitle=this.jInternalFrameDetalleFormEstructura.jTabbedPaneRelacionesEstructura.getTitleAt(iIndex);
				
				Integer intSelectedRow = 0;	
			
				intSelectedRow = this.jTableDatosEstructura.getSelectedRow();	
				
				

				if(sTitle.equals("Asistencia Diarias")) {
					if(!AsistenciaDiariaJInternalFrame.ESTA_CARGADO_PORPARTE) {
						procesaCargarParteTab=true;
						this.startProcessEstructura();

						this.cargarParteTabPanelRelacionadaAsistenciaDiaria(iIndex,intSelectedRow);
					}
					
				}

				if(sTitle.equals("Asistencia Mensuales")) {
					if(!AsistenciaMensualJInternalFrame.ESTA_CARGADO_PORPARTE) {
						procesaCargarParteTab=true;
						this.startProcessEstructura();

						this.cargarParteTabPanelRelacionadaAsistenciaMensual(iIndex,intSelectedRow);
					}
					
				}

				if(sTitle.equals("Centro Costo Estructuras")) {
					if(!CentroCostoEstructuraJInternalFrame.ESTA_CARGADO_PORPARTE) {
						procesaCargarParteTab=true;
						this.startProcessEstructura();

						this.cargarParteTabPanelRelacionadaCentroCostoEstructura(iIndex,intSelectedRow);
					}
					
				}

				if(sTitle.equals("Cierre Rol Mensuales")) {
					if(!CierreRolMensualJInternalFrame.ESTA_CARGADO_PORPARTE) {
						procesaCargarParteTab=true;
						this.startProcessEstructura();

						this.cargarParteTabPanelRelacionadaCierreRolMensual(iIndex,intSelectedRow);
					}
					
				}

				if(sTitle.equals("Empleados")) {
					if(!EmpleadoJInternalFrame.ESTA_CARGADO_PORPARTE) {
						procesaCargarParteTab=true;
						this.startProcessEstructura();

						this.cargarParteTabPanelRelacionadaEmpleado(iIndex,intSelectedRow);
					}
					
				}

				if(sTitle.equals("Empleado Estructuras")) {
					if(!EmpleadoEstructuraJInternalFrame.ESTA_CARGADO_PORPARTE) {
						procesaCargarParteTab=true;
						this.startProcessEstructura();

						this.cargarParteTabPanelRelacionadaEmpleadoEstructura(iIndex,intSelectedRow);
					}
					
				}

				if(sTitle.equals("Empleado Impuesto Rentas")) {
					if(!EmpleadoImpuestoRentaJInternalFrame.ESTA_CARGADO_PORPARTE) {
						procesaCargarParteTab=true;
						this.startProcessEstructura();

						this.cargarParteTabPanelRelacionadaEmpleadoImpuestoRenta(iIndex,intSelectedRow);
					}
					
				}

				if(sTitle.equals("Empleado Pago Rubros")) {
					if(!EmpleadoPagoRubroJInternalFrame.ESTA_CARGADO_PORPARTE) {
						procesaCargarParteTab=true;
						this.startProcessEstructura();

						this.cargarParteTabPanelRelacionadaEmpleadoPagoRubro(iIndex,intSelectedRow);
					}
					
				}

				if(sTitle.equals("Empleado Proceso Rubros")) {
					if(!EmpleadoProcesoRubroJInternalFrame.ESTA_CARGADO_PORPARTE) {
						procesaCargarParteTab=true;
						this.startProcessEstructura();

						this.cargarParteTabPanelRelacionadaEmpleadoProcesoRubro(iIndex,intSelectedRow);
					}
					
				}

				if(sTitle.equals("Estructuras")) {
					if(!EstructuraJInternalFrame.ESTA_CARGADO_PORPARTE) {
						procesaCargarParteTab=true;
						this.startProcessEstructura();

						this.cargarParteTabPanelRelacionadaEstructura(iIndex,intSelectedRow);
					}
					
				}

				if(sTitle.equals("Evaluacion Empleados")) {
					if(!EvaluacionEmpleadoJInternalFrame.ESTA_CARGADO_PORPARTE) {
						procesaCargarParteTab=true;
						this.startProcessEstructura();

						this.cargarParteTabPanelRelacionadaEvaluacionEmpleado(iIndex,intSelectedRow);
					}
					
				}

				if(sTitle.equals("Evaluacion Nomis")) {
					if(!EvaluacionNomiJInternalFrame.ESTA_CARGADO_PORPARTE) {
						procesaCargarParteTab=true;
						this.startProcessEstructura();

						this.cargarParteTabPanelRelacionadaEvaluacionNomi(iIndex,intSelectedRow);
					}
					
				}

				if(sTitle.equals("Formato Nomis")) {
					if(!FormatoNomiJInternalFrame.ESTA_CARGADO_PORPARTE) {
						procesaCargarParteTab=true;
						this.startProcessEstructura();

						this.cargarParteTabPanelRelacionadaFormatoNomi(iIndex,intSelectedRow);
					}
					
				}

				if(sTitle.equals("Funcion Estruces")) {
					if(!FuncionEstrucJInternalFrame.ESTA_CARGADO_PORPARTE) {
						procesaCargarParteTab=true;
						this.startProcessEstructura();

						this.cargarParteTabPanelRelacionadaFuncionEstruc(iIndex,intSelectedRow);
					}
					
				}

				if(sTitle.equals("Historial Pago Nomis")) {
					if(!HistorialPagoNomiJInternalFrame.ESTA_CARGADO_PORPARTE) {
						procesaCargarParteTab=true;
						this.startProcessEstructura();

						this.cargarParteTabPanelRelacionadaHistorialPagoNomi(iIndex,intSelectedRow);
					}
					
				}

				if(sTitle.equals("Plani Vacaciones")) {
					if(!PlaniVacacionJInternalFrame.ESTA_CARGADO_PORPARTE) {
						procesaCargarParteTab=true;
						this.startProcessEstructura();

						this.cargarParteTabPanelRelacionadaPlaniVacacion(iIndex,intSelectedRow);
					}
					
				}

				if(sTitle.equals("Provision Empleados")) {
					if(!ProvisionEmpleadoJInternalFrame.ESTA_CARGADO_PORPARTE) {
						procesaCargarParteTab=true;
						this.startProcessEstructura();

						this.cargarParteTabPanelRelacionadaProvisionEmpleado(iIndex,intSelectedRow);
					}
					
				}

				if(sTitle.equals("Responsable Activo Fijos")) {
					if(!ResponsableActivoFijoJInternalFrame.ESTA_CARGADO_PORPARTE) {
						procesaCargarParteTab=true;
						this.startProcessEstructura();

						this.cargarParteTabPanelRelacionadaResponsableActivoFijo(iIndex,intSelectedRow);
					}
					
				}

				if(sTitle.equals("Rubro Emplea Cuenta Contables")) {
					if(!RubroEmpleaCuentaContableJInternalFrame.ESTA_CARGADO_PORPARTE) {
						procesaCargarParteTab=true;
						this.startProcessEstructura();

						this.cargarParteTabPanelRelacionadaRubroEmpleaCuentaContable(iIndex,intSelectedRow);
					}
					
				}

				if(sTitle.equals("Rubro Estructuras")) {
					if(!RubroEstructuraJInternalFrame.ESTA_CARGADO_PORPARTE) {
						procesaCargarParteTab=true;
						this.startProcessEstructura();

						this.cargarParteTabPanelRelacionadaRubroEstructura(iIndex,intSelectedRow);
					}
					
				}

				if(sTitle.equals("Solicitud Hora Extras")) {
					if(!SolicitudHoraExtraJInternalFrame.ESTA_CARGADO_PORPARTE) {
						procesaCargarParteTab=true;
						this.startProcessEstructura();

						this.cargarParteTabPanelRelacionadaSolicitudHoraExtra(iIndex,intSelectedRow);
					}
					
				}

				if(sTitle.equals("Solicitud Reemplazos")) {
					if(!SolicitudReemplazoJInternalFrame.ESTA_CARGADO_PORPARTE) {
						procesaCargarParteTab=true;
						this.startProcessEstructura();

						this.cargarParteTabPanelRelacionadaSolicitudReemplazo(iIndex,intSelectedRow);
					}
					
				}

				if(sTitle.equals("Solicitud Vacaciones")) {
					if(!SolicitudVacacionJInternalFrame.ESTA_CARGADO_PORPARTE) {
						procesaCargarParteTab=true;
						this.startProcessEstructura();

						this.cargarParteTabPanelRelacionadaSolicitudVacacion(iIndex,intSelectedRow);
					}
					
				}
				
			}
			
			//TABBED PANE RELACIONES FIN(EXTRA TAB)
			;
			
  		} catch(Exception e) {
  			e.printStackTrace();
  		} finally {
			if(procesaCargarParteTab) {				
				this.finishProcessEstructura();	
			}
		}
    }
	
	

	public void cargarParteTabPanelRelacionadaAsistenciaDiaria(int iIndex,int intSelectedRow) throws Exception {
		this.jInternalFrameDetalleFormEstructura.cargarSessionConBeanSwingJInternalFrameAsistenciaDiaria(false,true,iIndex);
		this.jButtonAsistenciaDiariaActionPerformed(null,intSelectedRow,false,true,null);
		this.redimensionarTablaPanelRelacionadaAsistenciaDiaria();

		//this.jTabbedPaneRelacionesEstructura.updateUI();
		//this.jTabbedPaneRelacionesEstructura.removeTabAt(iIndex);
		//this.jTabbedPaneRelacionesEstructura.setSelectedIndex(iIndex);


	}

	public void cargarParteTabPanelRelacionadaAsistenciaMensual(int iIndex,int intSelectedRow) throws Exception {
		this.jInternalFrameDetalleFormEstructura.cargarSessionConBeanSwingJInternalFrameAsistenciaMensual(false,true,iIndex);
		this.jButtonAsistenciaMensualActionPerformed(null,intSelectedRow,false,true,null);
		this.redimensionarTablaPanelRelacionadaAsistenciaMensual();

		//this.jTabbedPaneRelacionesEstructura.updateUI();
		//this.jTabbedPaneRelacionesEstructura.removeTabAt(iIndex);
		//this.jTabbedPaneRelacionesEstructura.setSelectedIndex(iIndex);


	}

	public void cargarParteTabPanelRelacionadaCentroCostoEstructura(int iIndex,int intSelectedRow) throws Exception {
		this.jInternalFrameDetalleFormEstructura.cargarSessionConBeanSwingJInternalFrameCentroCostoEstructura(false,true,iIndex);
		this.jButtonCentroCostoEstructuraActionPerformed(null,intSelectedRow,false,true,null);
		this.redimensionarTablaPanelRelacionadaCentroCostoEstructura();

		//this.jTabbedPaneRelacionesEstructura.updateUI();
		//this.jTabbedPaneRelacionesEstructura.removeTabAt(iIndex);
		//this.jTabbedPaneRelacionesEstructura.setSelectedIndex(iIndex);


	}

	public void cargarParteTabPanelRelacionadaCierreRolMensual(int iIndex,int intSelectedRow) throws Exception {
		this.jInternalFrameDetalleFormEstructura.cargarSessionConBeanSwingJInternalFrameCierreRolMensual(false,true,iIndex);
		this.jButtonCierreRolMensualActionPerformed(null,intSelectedRow,false,true,null);
		this.redimensionarTablaPanelRelacionadaCierreRolMensual();

		//this.jTabbedPaneRelacionesEstructura.updateUI();
		//this.jTabbedPaneRelacionesEstructura.removeTabAt(iIndex);
		//this.jTabbedPaneRelacionesEstructura.setSelectedIndex(iIndex);


	}

	public void cargarParteTabPanelRelacionadaEmpleado(int iIndex,int intSelectedRow) throws Exception {
		this.jInternalFrameDetalleFormEstructura.cargarSessionConBeanSwingJInternalFrameEmpleado(false,true,iIndex);
		this.jButtonEmpleadoActionPerformed(null,intSelectedRow,false,true,null);
		this.redimensionarTablaPanelRelacionadaEmpleado();

		//this.jTabbedPaneRelacionesEstructura.updateUI();
		//this.jTabbedPaneRelacionesEstructura.removeTabAt(iIndex);
		//this.jTabbedPaneRelacionesEstructura.setSelectedIndex(iIndex);


	}

	public void cargarParteTabPanelRelacionadaEmpleadoEstructura(int iIndex,int intSelectedRow) throws Exception {
		this.jInternalFrameDetalleFormEstructura.cargarSessionConBeanSwingJInternalFrameEmpleadoEstructura(false,true,iIndex);
		this.jButtonEmpleadoEstructuraActionPerformed(null,intSelectedRow,false,true,null);
		this.redimensionarTablaPanelRelacionadaEmpleadoEstructura();

		//this.jTabbedPaneRelacionesEstructura.updateUI();
		//this.jTabbedPaneRelacionesEstructura.removeTabAt(iIndex);
		//this.jTabbedPaneRelacionesEstructura.setSelectedIndex(iIndex);


	}

	public void cargarParteTabPanelRelacionadaEmpleadoImpuestoRenta(int iIndex,int intSelectedRow) throws Exception {
		this.jInternalFrameDetalleFormEstructura.cargarSessionConBeanSwingJInternalFrameEmpleadoImpuestoRenta(false,true,iIndex);
		this.jButtonEmpleadoImpuestoRentaActionPerformed(null,intSelectedRow,false,true,null);
		this.redimensionarTablaPanelRelacionadaEmpleadoImpuestoRenta();

		//this.jTabbedPaneRelacionesEstructura.updateUI();
		//this.jTabbedPaneRelacionesEstructura.removeTabAt(iIndex);
		//this.jTabbedPaneRelacionesEstructura.setSelectedIndex(iIndex);


	}

	public void cargarParteTabPanelRelacionadaEmpleadoPagoRubro(int iIndex,int intSelectedRow) throws Exception {
		this.jInternalFrameDetalleFormEstructura.cargarSessionConBeanSwingJInternalFrameEmpleadoPagoRubro(false,true,iIndex);
		this.jButtonEmpleadoPagoRubroActionPerformed(null,intSelectedRow,false,true,null);
		this.redimensionarTablaPanelRelacionadaEmpleadoPagoRubro();

		//this.jTabbedPaneRelacionesEstructura.updateUI();
		//this.jTabbedPaneRelacionesEstructura.removeTabAt(iIndex);
		//this.jTabbedPaneRelacionesEstructura.setSelectedIndex(iIndex);


	}

	public void cargarParteTabPanelRelacionadaEmpleadoProcesoRubro(int iIndex,int intSelectedRow) throws Exception {
		this.jInternalFrameDetalleFormEstructura.cargarSessionConBeanSwingJInternalFrameEmpleadoProcesoRubro(false,true,iIndex);
		this.jButtonEmpleadoProcesoRubroActionPerformed(null,intSelectedRow,false,true,null);
		this.redimensionarTablaPanelRelacionadaEmpleadoProcesoRubro();

		//this.jTabbedPaneRelacionesEstructura.updateUI();
		//this.jTabbedPaneRelacionesEstructura.removeTabAt(iIndex);
		//this.jTabbedPaneRelacionesEstructura.setSelectedIndex(iIndex);


	}

	public void cargarParteTabPanelRelacionadaEstructura(int iIndex,int intSelectedRow) throws Exception {
		this.jInternalFrameDetalleFormEstructura.cargarSessionConBeanSwingJInternalFrameEstructura(false,true,iIndex);
		this.jButtonEstructuraActionPerformed(null,intSelectedRow,false,true,null);
		this.redimensionarTablaPanelRelacionadaEstructura();

		//this.jTabbedPaneRelacionesEstructura.updateUI();
		//this.jTabbedPaneRelacionesEstructura.removeTabAt(iIndex);
		//this.jTabbedPaneRelacionesEstructura.setSelectedIndex(iIndex);


	}

	public void cargarParteTabPanelRelacionadaEvaluacionEmpleado(int iIndex,int intSelectedRow) throws Exception {
		this.jInternalFrameDetalleFormEstructura.cargarSessionConBeanSwingJInternalFrameEvaluacionEmpleado(false,true,iIndex);
		this.jButtonEvaluacionEmpleadoActionPerformed(null,intSelectedRow,false,true,null);
		this.redimensionarTablaPanelRelacionadaEvaluacionEmpleado();

		//this.jTabbedPaneRelacionesEstructura.updateUI();
		//this.jTabbedPaneRelacionesEstructura.removeTabAt(iIndex);
		//this.jTabbedPaneRelacionesEstructura.setSelectedIndex(iIndex);


	}

	public void cargarParteTabPanelRelacionadaEvaluacionNomi(int iIndex,int intSelectedRow) throws Exception {
		this.jInternalFrameDetalleFormEstructura.cargarSessionConBeanSwingJInternalFrameEvaluacionNomi(false,true,iIndex);
		this.jButtonEvaluacionNomiActionPerformed(null,intSelectedRow,false,true,null);
		this.redimensionarTablaPanelRelacionadaEvaluacionNomi();

		//this.jTabbedPaneRelacionesEstructura.updateUI();
		//this.jTabbedPaneRelacionesEstructura.removeTabAt(iIndex);
		//this.jTabbedPaneRelacionesEstructura.setSelectedIndex(iIndex);


	}

	public void cargarParteTabPanelRelacionadaFormatoNomi(int iIndex,int intSelectedRow) throws Exception {
		this.jInternalFrameDetalleFormEstructura.cargarSessionConBeanSwingJInternalFrameFormatoNomi(false,true,iIndex);
		this.jButtonFormatoNomiActionPerformed(null,intSelectedRow,false,true,null);
		this.redimensionarTablaPanelRelacionadaFormatoNomi();

		//this.jTabbedPaneRelacionesEstructura.updateUI();
		//this.jTabbedPaneRelacionesEstructura.removeTabAt(iIndex);
		//this.jTabbedPaneRelacionesEstructura.setSelectedIndex(iIndex);


	}

	public void cargarParteTabPanelRelacionadaFuncionEstruc(int iIndex,int intSelectedRow) throws Exception {
		this.jInternalFrameDetalleFormEstructura.cargarSessionConBeanSwingJInternalFrameFuncionEstruc(false,true,iIndex);
		this.jButtonFuncionEstrucActionPerformed(null,intSelectedRow,false,true,null);
		this.redimensionarTablaPanelRelacionadaFuncionEstruc();

		//this.jTabbedPaneRelacionesEstructura.updateUI();
		//this.jTabbedPaneRelacionesEstructura.removeTabAt(iIndex);
		//this.jTabbedPaneRelacionesEstructura.setSelectedIndex(iIndex);


	}

	public void cargarParteTabPanelRelacionadaHistorialPagoNomi(int iIndex,int intSelectedRow) throws Exception {
		this.jInternalFrameDetalleFormEstructura.cargarSessionConBeanSwingJInternalFrameHistorialPagoNomi(false,true,iIndex);
		this.jButtonHistorialPagoNomiActionPerformed(null,intSelectedRow,false,true,null);
		this.redimensionarTablaPanelRelacionadaHistorialPagoNomi();

		//this.jTabbedPaneRelacionesEstructura.updateUI();
		//this.jTabbedPaneRelacionesEstructura.removeTabAt(iIndex);
		//this.jTabbedPaneRelacionesEstructura.setSelectedIndex(iIndex);


	}

	public void cargarParteTabPanelRelacionadaPlaniVacacion(int iIndex,int intSelectedRow) throws Exception {
		this.jInternalFrameDetalleFormEstructura.cargarSessionConBeanSwingJInternalFramePlaniVacacion(false,true,iIndex);
		this.jButtonPlaniVacacionActionPerformed(null,intSelectedRow,false,true,null);
		this.redimensionarTablaPanelRelacionadaPlaniVacacion();

		//this.jTabbedPaneRelacionesEstructura.updateUI();
		//this.jTabbedPaneRelacionesEstructura.removeTabAt(iIndex);
		//this.jTabbedPaneRelacionesEstructura.setSelectedIndex(iIndex);


	}

	public void cargarParteTabPanelRelacionadaProvisionEmpleado(int iIndex,int intSelectedRow) throws Exception {
		this.jInternalFrameDetalleFormEstructura.cargarSessionConBeanSwingJInternalFrameProvisionEmpleado(false,true,iIndex);
		this.jButtonProvisionEmpleadoActionPerformed(null,intSelectedRow,false,true,null);
		this.redimensionarTablaPanelRelacionadaProvisionEmpleado();

		//this.jTabbedPaneRelacionesEstructura.updateUI();
		//this.jTabbedPaneRelacionesEstructura.removeTabAt(iIndex);
		//this.jTabbedPaneRelacionesEstructura.setSelectedIndex(iIndex);


	}

	public void cargarParteTabPanelRelacionadaResponsableActivoFijo(int iIndex,int intSelectedRow) throws Exception {
		this.jInternalFrameDetalleFormEstructura.cargarSessionConBeanSwingJInternalFrameResponsableActivoFijo(false,true,iIndex);
		this.jButtonResponsableActivoFijoActionPerformed(null,intSelectedRow,false,true,null);
		this.redimensionarTablaPanelRelacionadaResponsableActivoFijo();

		//this.jTabbedPaneRelacionesEstructura.updateUI();
		//this.jTabbedPaneRelacionesEstructura.removeTabAt(iIndex);
		//this.jTabbedPaneRelacionesEstructura.setSelectedIndex(iIndex);


	}

	public void cargarParteTabPanelRelacionadaRubroEmpleaCuentaContable(int iIndex,int intSelectedRow) throws Exception {
		this.jInternalFrameDetalleFormEstructura.cargarSessionConBeanSwingJInternalFrameRubroEmpleaCuentaContable(false,true,iIndex);
		this.jButtonRubroEmpleaCuentaContableActionPerformed(null,intSelectedRow,false,true,null);
		this.redimensionarTablaPanelRelacionadaRubroEmpleaCuentaContable();

		//this.jTabbedPaneRelacionesEstructura.updateUI();
		//this.jTabbedPaneRelacionesEstructura.removeTabAt(iIndex);
		//this.jTabbedPaneRelacionesEstructura.setSelectedIndex(iIndex);


	}

	public void cargarParteTabPanelRelacionadaRubroEstructura(int iIndex,int intSelectedRow) throws Exception {
		this.jInternalFrameDetalleFormEstructura.cargarSessionConBeanSwingJInternalFrameRubroEstructura(false,true,iIndex);
		this.jButtonRubroEstructuraActionPerformed(null,intSelectedRow,false,true,null);
		this.redimensionarTablaPanelRelacionadaRubroEstructura();

		//this.jTabbedPaneRelacionesEstructura.updateUI();
		//this.jTabbedPaneRelacionesEstructura.removeTabAt(iIndex);
		//this.jTabbedPaneRelacionesEstructura.setSelectedIndex(iIndex);


	}

	public void cargarParteTabPanelRelacionadaSolicitudHoraExtra(int iIndex,int intSelectedRow) throws Exception {
		this.jInternalFrameDetalleFormEstructura.cargarSessionConBeanSwingJInternalFrameSolicitudHoraExtra(false,true,iIndex);
		this.jButtonSolicitudHoraExtraActionPerformed(null,intSelectedRow,false,true,null);
		this.redimensionarTablaPanelRelacionadaSolicitudHoraExtra();

		//this.jTabbedPaneRelacionesEstructura.updateUI();
		//this.jTabbedPaneRelacionesEstructura.removeTabAt(iIndex);
		//this.jTabbedPaneRelacionesEstructura.setSelectedIndex(iIndex);


	}

	public void cargarParteTabPanelRelacionadaSolicitudReemplazo(int iIndex,int intSelectedRow) throws Exception {
		this.jInternalFrameDetalleFormEstructura.cargarSessionConBeanSwingJInternalFrameSolicitudReemplazo(false,true,iIndex);
		this.jButtonSolicitudReemplazoActionPerformed(null,intSelectedRow,false,true,null);
		this.redimensionarTablaPanelRelacionadaSolicitudReemplazo();

		//this.jTabbedPaneRelacionesEstructura.updateUI();
		//this.jTabbedPaneRelacionesEstructura.removeTabAt(iIndex);
		//this.jTabbedPaneRelacionesEstructura.setSelectedIndex(iIndex);


	}

	public void cargarParteTabPanelRelacionadaSolicitudVacacion(int iIndex,int intSelectedRow) throws Exception {
		this.jInternalFrameDetalleFormEstructura.cargarSessionConBeanSwingJInternalFrameSolicitudVacacion(false,true,iIndex);
		this.jButtonSolicitudVacacionActionPerformed(null,intSelectedRow,false,true,null);
		this.redimensionarTablaPanelRelacionadaSolicitudVacacion();

		//this.jTabbedPaneRelacionesEstructura.updateUI();
		//this.jTabbedPaneRelacionesEstructura.removeTabAt(iIndex);
		//this.jTabbedPaneRelacionesEstructura.setSelectedIndex(iIndex);


	}
	
	public void jButtonRelacionActionPerformedGeneral(String sTipo,ActionEvent evt) { 	  
		try {
			
				 if(sTipo.equals("CentroCostoEstructura")) {
				int row=this.jTableDatosEstructura.getSelectedRow();
				jButtonCentroCostoEstructuraActionPerformed(evt,row,true,false,null);
				}
				 else  if(sTipo.equals("PlaniVacacion")) {
				int row=this.jTableDatosEstructura.getSelectedRow();
				jButtonPlaniVacacionActionPerformed(evt,row,true,false,null);
				}
				 else  if(sTipo.equals("AsistenciaMensual")) {
				int row=this.jTableDatosEstructura.getSelectedRow();
				jButtonAsistenciaMensualActionPerformed(evt,row,true,false,null);
				}
				 else  if(sTipo.equals("EmpleadoProcesoRubro")) {
				int row=this.jTableDatosEstructura.getSelectedRow();
				jButtonEmpleadoProcesoRubroActionPerformed(evt,row,true,false,null);
				}
				 else  if(sTipo.equals("EmpleadoPagoRubro")) {
				int row=this.jTableDatosEstructura.getSelectedRow();
				jButtonEmpleadoPagoRubroActionPerformed(evt,row,true,false,null);
				}
				 else  if(sTipo.equals("ProvisionEmpleado")) {
				int row=this.jTableDatosEstructura.getSelectedRow();
				jButtonProvisionEmpleadoActionPerformed(evt,row,true,false,null);
				}
				 else  if(sTipo.equals("Empleado")) {
				int row=this.jTableDatosEstructura.getSelectedRow();
				jButtonEmpleadoActionPerformed(evt,row,true,false,null);
				}
				 else  if(sTipo.equals("Estructura")) {
				int row=this.jTableDatosEstructura.getSelectedRow();
				jButtonEstructuraActionPerformed(evt,row,true,false,null);
				}
				 else  if(sTipo.equals("EvaluacionEmpleado")) {
				int row=this.jTableDatosEstructura.getSelectedRow();
				jButtonEvaluacionEmpleadoActionPerformed(evt,row,true,false,null);
				}
				 else  if(sTipo.equals("EmpleadoImpuestoRenta")) {
				int row=this.jTableDatosEstructura.getSelectedRow();
				jButtonEmpleadoImpuestoRentaActionPerformed(evt,row,true,false,null);
				}
				 else  if(sTipo.equals("RubroEstructura")) {
				int row=this.jTableDatosEstructura.getSelectedRow();
				jButtonRubroEstructuraActionPerformed(evt,row,true,false,null);
				}
				 else  if(sTipo.equals("CierreRolMensual")) {
				int row=this.jTableDatosEstructura.getSelectedRow();
				jButtonCierreRolMensualActionPerformed(evt,row,true,false,null);
				}
				 else  if(sTipo.equals("FormatoNomi")) {
				int row=this.jTableDatosEstructura.getSelectedRow();
				jButtonFormatoNomiActionPerformed(evt,row,true,false,null);
				}
				 else  if(sTipo.equals("EmpleadoEstructura")) {
				int row=this.jTableDatosEstructura.getSelectedRow();
				jButtonEmpleadoEstructuraActionPerformed(evt,row,true,false,null);
				}
				 else  if(sTipo.equals("HistorialPagoNomi")) {
				int row=this.jTableDatosEstructura.getSelectedRow();
				jButtonHistorialPagoNomiActionPerformed(evt,row,true,false,null);
				}
				 else  if(sTipo.equals("AsistenciaDiaria")) {
				int row=this.jTableDatosEstructura.getSelectedRow();
				jButtonAsistenciaDiariaActionPerformed(evt,row,true,false,null);
				}
				 else  if(sTipo.equals("FuncionEstruc")) {
				int row=this.jTableDatosEstructura.getSelectedRow();
				jButtonFuncionEstrucActionPerformed(evt,row,true,false,null);
				}
				 else  if(sTipo.equals("SolicitudReemplazo")) {
				int row=this.jTableDatosEstructura.getSelectedRow();
				jButtonSolicitudReemplazoActionPerformed(evt,row,true,false,null);
				}
				 else  if(sTipo.equals("SolicitudHoraExtra")) {
				int row=this.jTableDatosEstructura.getSelectedRow();
				jButtonSolicitudHoraExtraActionPerformed(evt,row,true,false,null);
				}
				 else  if(sTipo.equals("EvaluacionNomi")) {
				int row=this.jTableDatosEstructura.getSelectedRow();
				jButtonEvaluacionNomiActionPerformed(evt,row,true,false,null);
				}
				 else  if(sTipo.equals("SolicitudVacacion")) {
				int row=this.jTableDatosEstructura.getSelectedRow();
				jButtonSolicitudVacacionActionPerformed(evt,row,true,false,null);
				}
				 else  if(sTipo.equals("ResponsableActivoFijo")) {
				int row=this.jTableDatosEstructura.getSelectedRow();
				jButtonResponsableActivoFijoActionPerformed(evt,row,true,false,null);
				}
				 else  if(sTipo.equals("RubroEmpleaCuentaContable")) {
				int row=this.jTableDatosEstructura.getSelectedRow();
				jButtonRubroEmpleaCuentaContableActionPerformed(evt,row,true,false,null);
				}
  		} catch(Exception e) {
  			e.printStackTrace();
  		}
    }
	
	public void cargarMenuRelaciones() {	
		JMenuItem jmenuItem= new JMenuItem("General");
		String sLabelMenu="";
		
		if(!this.estructuraSessionBean.getEsGuardarRelacionado()) {
			for(Reporte reporte:this.tiposRelaciones) {
			

				if(reporte.getsCodigo().equals("Centro Costo Estructura")) {

					if(this.isTienePermisosCentroCostoEstructura && this.estructuraConstantesFunciones.mostrarCentroCostoEstructuraEstructura && !EstructuraConstantesFunciones.ISGUARDARREL) {
						if(Constantes.ISDEVELOPING) {
							sLabelMenu="Centro Costo Estructuras"+"("+CentroCostoEstructuraConstantesFunciones.CLASSNAME+")";
						}

						jmenuItem = new JMenuItem(sLabelMenu);
						//jmenuItem.setMnemonic(KeyEvent.VK_S);
						//jmenuItem.setAccelerator(KeyStroke.getKeyStroke(KeyEvent.VK_S, ActionEvent.ALT_MASK));
						jmenuItem.setActionCommand("Centro Costo Estructuras");

						if(estructuraConstantesFunciones.resaltarCentroCostoEstructuraEstructura!=null) {
							jmenuItem.setBorderPainted(true);
							jmenuItem.setBorder(estructuraConstantesFunciones.resaltarCentroCostoEstructuraEstructura);
						}

						jmenuItem.setEnabled(this.estructuraConstantesFunciones.activarCentroCostoEstructuraEstructura);

						jmenuItem.addActionListener (new MenuItemRelacionActionListener(this,"CentroCostoEstructura"));

						

						this.jInternalFrameDetalleFormEstructura.jmenuDetalleEstructura.add(jmenuItem);

						
					}

					continue;
				}

				if(reporte.getsCodigo().equals("Plani Vacacion")) {

					if(this.isTienePermisosPlaniVacacion && this.estructuraConstantesFunciones.mostrarPlaniVacacionEstructura && !EstructuraConstantesFunciones.ISGUARDARREL) {
						if(Constantes.ISDEVELOPING) {
							sLabelMenu="Plani Vacaciones"+"("+PlaniVacacionConstantesFunciones.CLASSNAME+")";
						}

						jmenuItem = new JMenuItem(sLabelMenu);
						//jmenuItem.setMnemonic(KeyEvent.VK_S);
						//jmenuItem.setAccelerator(KeyStroke.getKeyStroke(KeyEvent.VK_S, ActionEvent.ALT_MASK));
						jmenuItem.setActionCommand("Plani Vacaciones");

						if(estructuraConstantesFunciones.resaltarPlaniVacacionEstructura!=null) {
							jmenuItem.setBorderPainted(true);
							jmenuItem.setBorder(estructuraConstantesFunciones.resaltarPlaniVacacionEstructura);
						}

						jmenuItem.setEnabled(this.estructuraConstantesFunciones.activarPlaniVacacionEstructura);

						jmenuItem.addActionListener (new MenuItemRelacionActionListener(this,"PlaniVacacion"));

						

						this.jInternalFrameDetalleFormEstructura.jmenuDetalleEstructura.add(jmenuItem);

						
					}

					continue;
				}

				if(reporte.getsCodigo().equals("Asistencia Mensual")) {

					if(this.isTienePermisosAsistenciaMensual && this.estructuraConstantesFunciones.mostrarAsistenciaMensualEstructura && !EstructuraConstantesFunciones.ISGUARDARREL) {
						if(Constantes.ISDEVELOPING) {
							sLabelMenu="Asistencia Mensuales"+"("+AsistenciaMensualConstantesFunciones.CLASSNAME+")";
						}

						jmenuItem = new JMenuItem(sLabelMenu);
						//jmenuItem.setMnemonic(KeyEvent.VK_S);
						//jmenuItem.setAccelerator(KeyStroke.getKeyStroke(KeyEvent.VK_S, ActionEvent.ALT_MASK));
						jmenuItem.setActionCommand("Asistencia Mensuales");

						if(estructuraConstantesFunciones.resaltarAsistenciaMensualEstructura!=null) {
							jmenuItem.setBorderPainted(true);
							jmenuItem.setBorder(estructuraConstantesFunciones.resaltarAsistenciaMensualEstructura);
						}

						jmenuItem.setEnabled(this.estructuraConstantesFunciones.activarAsistenciaMensualEstructura);

						jmenuItem.addActionListener (new MenuItemRelacionActionListener(this,"AsistenciaMensual"));

						

						this.jInternalFrameDetalleFormEstructura.jmenuDetalleEstructura.add(jmenuItem);

						
					}

					continue;
				}

				if(reporte.getsCodigo().equals("Empleado Proceso Rubro")) {

					if(this.isTienePermisosEmpleadoProcesoRubro && this.estructuraConstantesFunciones.mostrarEmpleadoProcesoRubroEstructura && !EstructuraConstantesFunciones.ISGUARDARREL) {
						if(Constantes.ISDEVELOPING) {
							sLabelMenu="Empleado Proceso Rubros"+"("+EmpleadoProcesoRubroConstantesFunciones.CLASSNAME+")";
						}

						jmenuItem = new JMenuItem(sLabelMenu);
						//jmenuItem.setMnemonic(KeyEvent.VK_S);
						//jmenuItem.setAccelerator(KeyStroke.getKeyStroke(KeyEvent.VK_S, ActionEvent.ALT_MASK));
						jmenuItem.setActionCommand("Empleado Proceso Rubros");

						if(estructuraConstantesFunciones.resaltarEmpleadoProcesoRubroEstructura!=null) {
							jmenuItem.setBorderPainted(true);
							jmenuItem.setBorder(estructuraConstantesFunciones.resaltarEmpleadoProcesoRubroEstructura);
						}

						jmenuItem.setEnabled(this.estructuraConstantesFunciones.activarEmpleadoProcesoRubroEstructura);

						jmenuItem.addActionListener (new MenuItemRelacionActionListener(this,"EmpleadoProcesoRubro"));

						

						this.jInternalFrameDetalleFormEstructura.jmenuDetalleEstructura.add(jmenuItem);

						
					}

					continue;
				}

				if(reporte.getsCodigo().equals("Empleado Pago Rubro")) {

					if(this.isTienePermisosEmpleadoPagoRubro && this.estructuraConstantesFunciones.mostrarEmpleadoPagoRubroEstructura && !EstructuraConstantesFunciones.ISGUARDARREL) {
						if(Constantes.ISDEVELOPING) {
							sLabelMenu="Empleado Pago Rubros"+"("+EmpleadoPagoRubroConstantesFunciones.CLASSNAME+")";
						}

						jmenuItem = new JMenuItem(sLabelMenu);
						//jmenuItem.setMnemonic(KeyEvent.VK_S);
						//jmenuItem.setAccelerator(KeyStroke.getKeyStroke(KeyEvent.VK_S, ActionEvent.ALT_MASK));
						jmenuItem.setActionCommand("Empleado Pago Rubros");

						if(estructuraConstantesFunciones.resaltarEmpleadoPagoRubroEstructura!=null) {
							jmenuItem.setBorderPainted(true);
							jmenuItem.setBorder(estructuraConstantesFunciones.resaltarEmpleadoPagoRubroEstructura);
						}

						jmenuItem.setEnabled(this.estructuraConstantesFunciones.activarEmpleadoPagoRubroEstructura);

						jmenuItem.addActionListener (new MenuItemRelacionActionListener(this,"EmpleadoPagoRubro"));

						

						this.jInternalFrameDetalleFormEstructura.jmenuDetalleEstructura.add(jmenuItem);

						
					}

					continue;
				}

				if(reporte.getsCodigo().equals("Provision Empleado")) {

					if(this.isTienePermisosProvisionEmpleado && this.estructuraConstantesFunciones.mostrarProvisionEmpleadoEstructura && !EstructuraConstantesFunciones.ISGUARDARREL) {
						if(Constantes.ISDEVELOPING) {
							sLabelMenu="Provision Empleados"+"("+ProvisionEmpleadoConstantesFunciones.CLASSNAME+")";
						}

						jmenuItem = new JMenuItem(sLabelMenu);
						//jmenuItem.setMnemonic(KeyEvent.VK_S);
						//jmenuItem.setAccelerator(KeyStroke.getKeyStroke(KeyEvent.VK_S, ActionEvent.ALT_MASK));
						jmenuItem.setActionCommand("Provision Empleados");

						if(estructuraConstantesFunciones.resaltarProvisionEmpleadoEstructura!=null) {
							jmenuItem.setBorderPainted(true);
							jmenuItem.setBorder(estructuraConstantesFunciones.resaltarProvisionEmpleadoEstructura);
						}

						jmenuItem.setEnabled(this.estructuraConstantesFunciones.activarProvisionEmpleadoEstructura);

						jmenuItem.addActionListener (new MenuItemRelacionActionListener(this,"ProvisionEmpleado"));

						

						this.jInternalFrameDetalleFormEstructura.jmenuDetalleEstructura.add(jmenuItem);

						
					}

					continue;
				}

				if(reporte.getsCodigo().equals("Empleado")) {

					if(this.isTienePermisosEmpleado && this.estructuraConstantesFunciones.mostrarEmpleadoEstructura && !EstructuraConstantesFunciones.ISGUARDARREL) {
						if(Constantes.ISDEVELOPING) {
							sLabelMenu="Empleados"+"("+EmpleadoConstantesFunciones.CLASSNAME+")";
						}

						jmenuItem = new JMenuItem(sLabelMenu);
						//jmenuItem.setMnemonic(KeyEvent.VK_S);
						//jmenuItem.setAccelerator(KeyStroke.getKeyStroke(KeyEvent.VK_S, ActionEvent.ALT_MASK));
						jmenuItem.setActionCommand("Empleados");

						if(estructuraConstantesFunciones.resaltarEmpleadoEstructura!=null) {
							jmenuItem.setBorderPainted(true);
							jmenuItem.setBorder(estructuraConstantesFunciones.resaltarEmpleadoEstructura);
						}

						jmenuItem.setEnabled(this.estructuraConstantesFunciones.activarEmpleadoEstructura);

						jmenuItem.addActionListener (new MenuItemRelacionActionListener(this,"Empleado"));

						

						this.jInternalFrameDetalleFormEstructura.jmenuDetalleEstructura.add(jmenuItem);

						
					}

					continue;
				}

				if(reporte.getsCodigo().equals("Estructura")) {

					if(this.isTienePermisosEstructura && this.estructuraConstantesFunciones.mostrarEstructuraEstructura && !EstructuraConstantesFunciones.ISGUARDARREL) {
						if(Constantes.ISDEVELOPING) {
							sLabelMenu="Estructuras"+"("+EstructuraConstantesFunciones.CLASSNAME+")";
						}

						jmenuItem = new JMenuItem(sLabelMenu);
						//jmenuItem.setMnemonic(KeyEvent.VK_S);
						//jmenuItem.setAccelerator(KeyStroke.getKeyStroke(KeyEvent.VK_S, ActionEvent.ALT_MASK));
						jmenuItem.setActionCommand("Estructuras");

						if(estructuraConstantesFunciones.resaltarEstructuraEstructura!=null) {
							jmenuItem.setBorderPainted(true);
							jmenuItem.setBorder(estructuraConstantesFunciones.resaltarEstructuraEstructura);
						}

						jmenuItem.setEnabled(this.estructuraConstantesFunciones.activarEstructuraEstructura);

						jmenuItem.addActionListener (new MenuItemRelacionActionListener(this,"Estructura"));

						

						this.jInternalFrameDetalleFormEstructura.jmenuDetalleEstructura.add(jmenuItem);

						
					}

					continue;
				}

				if(reporte.getsCodigo().equals("Evaluacion Empleado")) {

					if(this.isTienePermisosEvaluacionEmpleado && this.estructuraConstantesFunciones.mostrarEvaluacionEmpleadoEstructura && !EstructuraConstantesFunciones.ISGUARDARREL) {
						if(Constantes.ISDEVELOPING) {
							sLabelMenu="Evaluacion Empleados"+"("+EvaluacionEmpleadoConstantesFunciones.CLASSNAME+")";
						}

						jmenuItem = new JMenuItem(sLabelMenu);
						//jmenuItem.setMnemonic(KeyEvent.VK_S);
						//jmenuItem.setAccelerator(KeyStroke.getKeyStroke(KeyEvent.VK_S, ActionEvent.ALT_MASK));
						jmenuItem.setActionCommand("Evaluacion Empleados");

						if(estructuraConstantesFunciones.resaltarEvaluacionEmpleadoEstructura!=null) {
							jmenuItem.setBorderPainted(true);
							jmenuItem.setBorder(estructuraConstantesFunciones.resaltarEvaluacionEmpleadoEstructura);
						}

						jmenuItem.setEnabled(this.estructuraConstantesFunciones.activarEvaluacionEmpleadoEstructura);

						jmenuItem.addActionListener (new MenuItemRelacionActionListener(this,"EvaluacionEmpleado"));

						

						this.jInternalFrameDetalleFormEstructura.jmenuDetalleEstructura.add(jmenuItem);

						
					}

					continue;
				}

				if(reporte.getsCodigo().equals("Empleado Impuesto Renta")) {

					if(this.isTienePermisosEmpleadoImpuestoRenta && this.estructuraConstantesFunciones.mostrarEmpleadoImpuestoRentaEstructura && !EstructuraConstantesFunciones.ISGUARDARREL) {
						if(Constantes.ISDEVELOPING) {
							sLabelMenu="Empleado Impuesto Rentas"+"("+EmpleadoImpuestoRentaConstantesFunciones.CLASSNAME+")";
						}

						jmenuItem = new JMenuItem(sLabelMenu);
						//jmenuItem.setMnemonic(KeyEvent.VK_S);
						//jmenuItem.setAccelerator(KeyStroke.getKeyStroke(KeyEvent.VK_S, ActionEvent.ALT_MASK));
						jmenuItem.setActionCommand("Empleado Impuesto Rentas");

						if(estructuraConstantesFunciones.resaltarEmpleadoImpuestoRentaEstructura!=null) {
							jmenuItem.setBorderPainted(true);
							jmenuItem.setBorder(estructuraConstantesFunciones.resaltarEmpleadoImpuestoRentaEstructura);
						}

						jmenuItem.setEnabled(this.estructuraConstantesFunciones.activarEmpleadoImpuestoRentaEstructura);

						jmenuItem.addActionListener (new MenuItemRelacionActionListener(this,"EmpleadoImpuestoRenta"));

						

						this.jInternalFrameDetalleFormEstructura.jmenuDetalleEstructura.add(jmenuItem);

						
					}

					continue;
				}

				if(reporte.getsCodigo().equals("Rubro Estructura")) {

					if(this.isTienePermisosRubroEstructura && this.estructuraConstantesFunciones.mostrarRubroEstructuraEstructura && !EstructuraConstantesFunciones.ISGUARDARREL) {
						if(Constantes.ISDEVELOPING) {
							sLabelMenu="Rubro Estructuras"+"("+RubroEstructuraConstantesFunciones.CLASSNAME+")";
						}

						jmenuItem = new JMenuItem(sLabelMenu);
						//jmenuItem.setMnemonic(KeyEvent.VK_S);
						//jmenuItem.setAccelerator(KeyStroke.getKeyStroke(KeyEvent.VK_S, ActionEvent.ALT_MASK));
						jmenuItem.setActionCommand("Rubro Estructuras");

						if(estructuraConstantesFunciones.resaltarRubroEstructuraEstructura!=null) {
							jmenuItem.setBorderPainted(true);
							jmenuItem.setBorder(estructuraConstantesFunciones.resaltarRubroEstructuraEstructura);
						}

						jmenuItem.setEnabled(this.estructuraConstantesFunciones.activarRubroEstructuraEstructura);

						jmenuItem.addActionListener (new MenuItemRelacionActionListener(this,"RubroEstructura"));

						

						this.jInternalFrameDetalleFormEstructura.jmenuDetalleEstructura.add(jmenuItem);

						
					}

					continue;
				}

				if(reporte.getsCodigo().equals("Cierre Rol Mensual")) {

					if(this.isTienePermisosCierreRolMensual && this.estructuraConstantesFunciones.mostrarCierreRolMensualEstructura && !EstructuraConstantesFunciones.ISGUARDARREL) {
						if(Constantes.ISDEVELOPING) {
							sLabelMenu="Cierre Rol Mensuales"+"("+CierreRolMensualConstantesFunciones.CLASSNAME+")";
						}

						jmenuItem = new JMenuItem(sLabelMenu);
						//jmenuItem.setMnemonic(KeyEvent.VK_S);
						//jmenuItem.setAccelerator(KeyStroke.getKeyStroke(KeyEvent.VK_S, ActionEvent.ALT_MASK));
						jmenuItem.setActionCommand("Cierre Rol Mensuales");

						if(estructuraConstantesFunciones.resaltarCierreRolMensualEstructura!=null) {
							jmenuItem.setBorderPainted(true);
							jmenuItem.setBorder(estructuraConstantesFunciones.resaltarCierreRolMensualEstructura);
						}

						jmenuItem.setEnabled(this.estructuraConstantesFunciones.activarCierreRolMensualEstructura);

						jmenuItem.addActionListener (new MenuItemRelacionActionListener(this,"CierreRolMensual"));

						

						this.jInternalFrameDetalleFormEstructura.jmenuDetalleEstructura.add(jmenuItem);

						
					}

					continue;
				}

				if(reporte.getsCodigo().equals("Formato Nomi")) {

					if(this.isTienePermisosFormatoNomi && this.estructuraConstantesFunciones.mostrarFormatoNomiEstructura && !EstructuraConstantesFunciones.ISGUARDARREL) {
						if(Constantes.ISDEVELOPING) {
							sLabelMenu="Formato Nomis"+"("+FormatoNomiConstantesFunciones.CLASSNAME+")";
						}

						jmenuItem = new JMenuItem(sLabelMenu);
						//jmenuItem.setMnemonic(KeyEvent.VK_S);
						//jmenuItem.setAccelerator(KeyStroke.getKeyStroke(KeyEvent.VK_S, ActionEvent.ALT_MASK));
						jmenuItem.setActionCommand("Formato Nomis");

						if(estructuraConstantesFunciones.resaltarFormatoNomiEstructura!=null) {
							jmenuItem.setBorderPainted(true);
							jmenuItem.setBorder(estructuraConstantesFunciones.resaltarFormatoNomiEstructura);
						}

						jmenuItem.setEnabled(this.estructuraConstantesFunciones.activarFormatoNomiEstructura);

						jmenuItem.addActionListener (new MenuItemRelacionActionListener(this,"FormatoNomi"));

						

						this.jInternalFrameDetalleFormEstructura.jmenuDetalleEstructura.add(jmenuItem);

						
					}

					continue;
				}

				if(reporte.getsCodigo().equals("Empleado Estructura")) {

					if(this.isTienePermisosEmpleadoEstructura && this.estructuraConstantesFunciones.mostrarEmpleadoEstructuraEstructura && !EstructuraConstantesFunciones.ISGUARDARREL) {
						if(Constantes.ISDEVELOPING) {
							sLabelMenu="Empleado Estructuras"+"("+EmpleadoEstructuraConstantesFunciones.CLASSNAME+")";
						}

						jmenuItem = new JMenuItem(sLabelMenu);
						//jmenuItem.setMnemonic(KeyEvent.VK_S);
						//jmenuItem.setAccelerator(KeyStroke.getKeyStroke(KeyEvent.VK_S, ActionEvent.ALT_MASK));
						jmenuItem.setActionCommand("Empleado Estructuras");

						if(estructuraConstantesFunciones.resaltarEmpleadoEstructuraEstructura!=null) {
							jmenuItem.setBorderPainted(true);
							jmenuItem.setBorder(estructuraConstantesFunciones.resaltarEmpleadoEstructuraEstructura);
						}

						jmenuItem.setEnabled(this.estructuraConstantesFunciones.activarEmpleadoEstructuraEstructura);

						jmenuItem.addActionListener (new MenuItemRelacionActionListener(this,"EmpleadoEstructura"));

						

						this.jInternalFrameDetalleFormEstructura.jmenuDetalleEstructura.add(jmenuItem);

						
					}

					continue;
				}

				if(reporte.getsCodigo().equals("Historial Pago Nomi")) {

					if(this.isTienePermisosHistorialPagoNomi && this.estructuraConstantesFunciones.mostrarHistorialPagoNomiEstructura && !EstructuraConstantesFunciones.ISGUARDARREL) {
						if(Constantes.ISDEVELOPING) {
							sLabelMenu="Historial Pago Nomis"+"("+HistorialPagoNomiConstantesFunciones.CLASSNAME+")";
						}

						jmenuItem = new JMenuItem(sLabelMenu);
						//jmenuItem.setMnemonic(KeyEvent.VK_S);
						//jmenuItem.setAccelerator(KeyStroke.getKeyStroke(KeyEvent.VK_S, ActionEvent.ALT_MASK));
						jmenuItem.setActionCommand("Historial Pago Nomis");

						if(estructuraConstantesFunciones.resaltarHistorialPagoNomiEstructura!=null) {
							jmenuItem.setBorderPainted(true);
							jmenuItem.setBorder(estructuraConstantesFunciones.resaltarHistorialPagoNomiEstructura);
						}

						jmenuItem.setEnabled(this.estructuraConstantesFunciones.activarHistorialPagoNomiEstructura);

						jmenuItem.addActionListener (new MenuItemRelacionActionListener(this,"HistorialPagoNomi"));

						

						this.jInternalFrameDetalleFormEstructura.jmenuDetalleEstructura.add(jmenuItem);

						
					}

					continue;
				}

				if(reporte.getsCodigo().equals("Asistencia Diaria")) {

					if(this.isTienePermisosAsistenciaDiaria && this.estructuraConstantesFunciones.mostrarAsistenciaDiariaEstructura && !EstructuraConstantesFunciones.ISGUARDARREL) {
						if(Constantes.ISDEVELOPING) {
							sLabelMenu="Asistencia Diarias"+"("+AsistenciaDiariaConstantesFunciones.CLASSNAME+")";
						}

						jmenuItem = new JMenuItem(sLabelMenu);
						//jmenuItem.setMnemonic(KeyEvent.VK_S);
						//jmenuItem.setAccelerator(KeyStroke.getKeyStroke(KeyEvent.VK_S, ActionEvent.ALT_MASK));
						jmenuItem.setActionCommand("Asistencia Diarias");

						if(estructuraConstantesFunciones.resaltarAsistenciaDiariaEstructura!=null) {
							jmenuItem.setBorderPainted(true);
							jmenuItem.setBorder(estructuraConstantesFunciones.resaltarAsistenciaDiariaEstructura);
						}

						jmenuItem.setEnabled(this.estructuraConstantesFunciones.activarAsistenciaDiariaEstructura);

						jmenuItem.addActionListener (new MenuItemRelacionActionListener(this,"AsistenciaDiaria"));

						

						this.jInternalFrameDetalleFormEstructura.jmenuDetalleEstructura.add(jmenuItem);

						
					}

					continue;
				}

				if(reporte.getsCodigo().equals("Funcion Estruc")) {

					if(this.isTienePermisosFuncionEstruc && this.estructuraConstantesFunciones.mostrarFuncionEstrucEstructura && !EstructuraConstantesFunciones.ISGUARDARREL) {
						if(Constantes.ISDEVELOPING) {
							sLabelMenu="Funcion Estruces"+"("+FuncionEstrucConstantesFunciones.CLASSNAME+")";
						}

						jmenuItem = new JMenuItem(sLabelMenu);
						//jmenuItem.setMnemonic(KeyEvent.VK_S);
						//jmenuItem.setAccelerator(KeyStroke.getKeyStroke(KeyEvent.VK_S, ActionEvent.ALT_MASK));
						jmenuItem.setActionCommand("Funcion Estruces");

						if(estructuraConstantesFunciones.resaltarFuncionEstrucEstructura!=null) {
							jmenuItem.setBorderPainted(true);
							jmenuItem.setBorder(estructuraConstantesFunciones.resaltarFuncionEstrucEstructura);
						}

						jmenuItem.setEnabled(this.estructuraConstantesFunciones.activarFuncionEstrucEstructura);

						jmenuItem.addActionListener (new MenuItemRelacionActionListener(this,"FuncionEstruc"));

						

						this.jInternalFrameDetalleFormEstructura.jmenuDetalleEstructura.add(jmenuItem);

						
					}

					continue;
				}

				if(reporte.getsCodigo().equals("Solicitud Reemplazo")) {

					if(this.isTienePermisosSolicitudReemplazo && this.estructuraConstantesFunciones.mostrarSolicitudReemplazoEstructura && !EstructuraConstantesFunciones.ISGUARDARREL) {
						if(Constantes.ISDEVELOPING) {
							sLabelMenu="Solicitud Reemplazos"+"("+SolicitudReemplazoConstantesFunciones.CLASSNAME+")";
						}

						jmenuItem = new JMenuItem(sLabelMenu);
						//jmenuItem.setMnemonic(KeyEvent.VK_S);
						//jmenuItem.setAccelerator(KeyStroke.getKeyStroke(KeyEvent.VK_S, ActionEvent.ALT_MASK));
						jmenuItem.setActionCommand("Solicitud Reemplazos");

						if(estructuraConstantesFunciones.resaltarSolicitudReemplazoEstructura!=null) {
							jmenuItem.setBorderPainted(true);
							jmenuItem.setBorder(estructuraConstantesFunciones.resaltarSolicitudReemplazoEstructura);
						}

						jmenuItem.setEnabled(this.estructuraConstantesFunciones.activarSolicitudReemplazoEstructura);

						jmenuItem.addActionListener (new MenuItemRelacionActionListener(this,"SolicitudReemplazo"));

						

						this.jInternalFrameDetalleFormEstructura.jmenuDetalleEstructura.add(jmenuItem);

						
					}

					continue;
				}

				if(reporte.getsCodigo().equals("Solicitud Hora Extra")) {

					if(this.isTienePermisosSolicitudHoraExtra && this.estructuraConstantesFunciones.mostrarSolicitudHoraExtraEstructura && !EstructuraConstantesFunciones.ISGUARDARREL) {
						if(Constantes.ISDEVELOPING) {
							sLabelMenu="Solicitud Hora Extras"+"("+SolicitudHoraExtraConstantesFunciones.CLASSNAME+")";
						}

						jmenuItem = new JMenuItem(sLabelMenu);
						//jmenuItem.setMnemonic(KeyEvent.VK_S);
						//jmenuItem.setAccelerator(KeyStroke.getKeyStroke(KeyEvent.VK_S, ActionEvent.ALT_MASK));
						jmenuItem.setActionCommand("Solicitud Hora Extras");

						if(estructuraConstantesFunciones.resaltarSolicitudHoraExtraEstructura!=null) {
							jmenuItem.setBorderPainted(true);
							jmenuItem.setBorder(estructuraConstantesFunciones.resaltarSolicitudHoraExtraEstructura);
						}

						jmenuItem.setEnabled(this.estructuraConstantesFunciones.activarSolicitudHoraExtraEstructura);

						jmenuItem.addActionListener (new MenuItemRelacionActionListener(this,"SolicitudHoraExtra"));

						

						this.jInternalFrameDetalleFormEstructura.jmenuDetalleEstructura.add(jmenuItem);

						
					}

					continue;
				}

				if(reporte.getsCodigo().equals("Evaluacion Nomi")) {

					if(this.isTienePermisosEvaluacionNomi && this.estructuraConstantesFunciones.mostrarEvaluacionNomiEstructura && !EstructuraConstantesFunciones.ISGUARDARREL) {
						if(Constantes.ISDEVELOPING) {
							sLabelMenu="Evaluacion Nomis"+"("+EvaluacionNomiConstantesFunciones.CLASSNAME+")";
						}

						jmenuItem = new JMenuItem(sLabelMenu);
						//jmenuItem.setMnemonic(KeyEvent.VK_S);
						//jmenuItem.setAccelerator(KeyStroke.getKeyStroke(KeyEvent.VK_S, ActionEvent.ALT_MASK));
						jmenuItem.setActionCommand("Evaluacion Nomis");

						if(estructuraConstantesFunciones.resaltarEvaluacionNomiEstructura!=null) {
							jmenuItem.setBorderPainted(true);
							jmenuItem.setBorder(estructuraConstantesFunciones.resaltarEvaluacionNomiEstructura);
						}

						jmenuItem.setEnabled(this.estructuraConstantesFunciones.activarEvaluacionNomiEstructura);

						jmenuItem.addActionListener (new MenuItemRelacionActionListener(this,"EvaluacionNomi"));

						

						this.jInternalFrameDetalleFormEstructura.jmenuDetalleEstructura.add(jmenuItem);

						
					}

					continue;
				}

				if(reporte.getsCodigo().equals("Solicitud Vacacion")) {

					if(this.isTienePermisosSolicitudVacacion && this.estructuraConstantesFunciones.mostrarSolicitudVacacionEstructura && !EstructuraConstantesFunciones.ISGUARDARREL) {
						if(Constantes.ISDEVELOPING) {
							sLabelMenu="Solicitud Vacaciones"+"("+SolicitudVacacionConstantesFunciones.CLASSNAME+")";
						}

						jmenuItem = new JMenuItem(sLabelMenu);
						//jmenuItem.setMnemonic(KeyEvent.VK_S);
						//jmenuItem.setAccelerator(KeyStroke.getKeyStroke(KeyEvent.VK_S, ActionEvent.ALT_MASK));
						jmenuItem.setActionCommand("Solicitud Vacaciones");

						if(estructuraConstantesFunciones.resaltarSolicitudVacacionEstructura!=null) {
							jmenuItem.setBorderPainted(true);
							jmenuItem.setBorder(estructuraConstantesFunciones.resaltarSolicitudVacacionEstructura);
						}

						jmenuItem.setEnabled(this.estructuraConstantesFunciones.activarSolicitudVacacionEstructura);

						jmenuItem.addActionListener (new MenuItemRelacionActionListener(this,"SolicitudVacacion"));

						

						this.jInternalFrameDetalleFormEstructura.jmenuDetalleEstructura.add(jmenuItem);

						
					}

					continue;
				}

				if(reporte.getsCodigo().equals("Responsable Activo Fijo")) {

					if(this.isTienePermisosResponsableActivoFijo && this.estructuraConstantesFunciones.mostrarResponsableActivoFijoEstructura && !EstructuraConstantesFunciones.ISGUARDARREL) {
						if(Constantes.ISDEVELOPING) {
							sLabelMenu="Responsable Activo Fijos"+"("+ResponsableActivoFijoConstantesFunciones.CLASSNAME+")";
						}

						jmenuItem = new JMenuItem(sLabelMenu);
						//jmenuItem.setMnemonic(KeyEvent.VK_S);
						//jmenuItem.setAccelerator(KeyStroke.getKeyStroke(KeyEvent.VK_S, ActionEvent.ALT_MASK));
						jmenuItem.setActionCommand("Responsable Activo Fijos");

						if(estructuraConstantesFunciones.resaltarResponsableActivoFijoEstructura!=null) {
							jmenuItem.setBorderPainted(true);
							jmenuItem.setBorder(estructuraConstantesFunciones.resaltarResponsableActivoFijoEstructura);
						}

						jmenuItem.setEnabled(this.estructuraConstantesFunciones.activarResponsableActivoFijoEstructura);

						jmenuItem.addActionListener (new MenuItemRelacionActionListener(this,"ResponsableActivoFijo"));

						

						this.jInternalFrameDetalleFormEstructura.jmenuDetalleEstructura.add(jmenuItem);

						
					}

					continue;
				}

				if(reporte.getsCodigo().equals("Rubro Emplea Cuenta Contable")) {

					if(this.isTienePermisosRubroEmpleaCuentaContable && this.estructuraConstantesFunciones.mostrarRubroEmpleaCuentaContableEstructura && !EstructuraConstantesFunciones.ISGUARDARREL) {
						if(Constantes.ISDEVELOPING) {
							sLabelMenu="Rubro Emplea Cuenta Contables"+"("+RubroEmpleaCuentaContableConstantesFunciones.CLASSNAME+")";
						}

						jmenuItem = new JMenuItem(sLabelMenu);
						//jmenuItem.setMnemonic(KeyEvent.VK_S);
						//jmenuItem.setAccelerator(KeyStroke.getKeyStroke(KeyEvent.VK_S, ActionEvent.ALT_MASK));
						jmenuItem.setActionCommand("Rubro Emplea Cuenta Contables");

						if(estructuraConstantesFunciones.resaltarRubroEmpleaCuentaContableEstructura!=null) {
							jmenuItem.setBorderPainted(true);
							jmenuItem.setBorder(estructuraConstantesFunciones.resaltarRubroEmpleaCuentaContableEstructura);
						}

						jmenuItem.setEnabled(this.estructuraConstantesFunciones.activarRubroEmpleaCuentaContableEstructura);

						jmenuItem.addActionListener (new MenuItemRelacionActionListener(this,"RubroEmpleaCuentaContable"));

						

						this.jInternalFrameDetalleFormEstructura.jmenuDetalleEstructura.add(jmenuItem);

						
					}

					continue;
				}
			}
		}
	}		
	
	public void cargarCombosForeignKeyEstructura(Boolean cargarCombosDependencia) throws Exception {   
		this.cargarCombosForeignKeyEstructura(cargarCombosDependencia,true,true);
	}
	
	//CARGAR COMBOS EN LOTE
	public void cargarCombosForeignKeyEstructura(Boolean cargarCombosDependencia,Boolean conInitActions,Boolean conSetVariablesGlobales) throws Exception {   
		this.cargarCombosTodosForeignKeyEstructuraListas(cargarCombosDependencia);
				
		this.addItemDefectoCombosTodosForeignKeyEstructura();
		
		this.cargarCombosFrameForeignKeyEstructura();						
		
		if(conInitActions) {
			this.initActionsCombosTodosForeignKeyEstructura();
		}
		
		if(conSetVariablesGlobales) {
			this.setVariablesGlobalesCombosForeignKeyEstructura();
		}
	}
	
	

	public void cargarCombosForeignKeyEstructura(Boolean cargarCombosDependencia,Boolean conInitActions,Boolean conSetVariablesGlobales,String sFinalQueryCombo,String sFormularioTipoBusqueda) throws Exception {
		try {
				this.cargarCombosForeignKeyEstructuraListas(cargarCombosDependencia,sFinalQueryCombo);
				this.addItemDefectoCombosForeignKeyEstructura();
				this.cargarCombosFrameEstructurasForeignKey(sFormularioTipoBusqueda);

				if(conInitActions) {
				}

			this.recargarComboTablaEstructura(this.estructurasForeignKey);

		} catch(Exception e) {
			throw e;
		}
	}

	public void cargarCombosForeignKeyTipoPago_NM(Boolean cargarCombosDependencia,Boolean conInitActions,Boolean conSetVariablesGlobales,String sFinalQueryCombo,String sFormularioTipoBusqueda) throws Exception {
		try {
				this.cargarCombosForeignKeyTipoPago_NMListas(cargarCombosDependencia,sFinalQueryCombo);
				this.addItemDefectoCombosForeignKeyTipoPago_NM();
				this.cargarCombosFrameTipoPago_NMsForeignKey(sFormularioTipoBusqueda);

				if(conInitActions) {
				}

			this.recargarComboTablaTipoPago_NM(this.tipopago_nmsForeignKey);

		} catch(Exception e) {
			throw e;
		}
	}

	public void cargarCombosForeignKeyNumeroPatronal(Boolean cargarCombosDependencia,Boolean conInitActions,Boolean conSetVariablesGlobales,String sFinalQueryCombo,String sFormularioTipoBusqueda) throws Exception {
		try {
				this.cargarCombosForeignKeyNumeroPatronalListas(cargarCombosDependencia,sFinalQueryCombo);
				this.addItemDefectoCombosForeignKeyNumeroPatronal();
				this.cargarCombosFrameNumeroPatronalsForeignKey(sFormularioTipoBusqueda);

				if(conInitActions) {
				}

			this.recargarComboTablaNumeroPatronal(this.numeropatronalsForeignKey);

		} catch(Exception e) {
			throw e;
		}
	}

	public void cargarCombosForeignKeyCuentaContable(Boolean cargarCombosDependencia,Boolean conInitActions,Boolean conSetVariablesGlobales,String sFinalQueryCombo,String sFormularioTipoBusqueda) throws Exception {
		try {
				this.cargarCombosForeignKeyCuentaContableListas(cargarCombosDependencia,sFinalQueryCombo);
				this.addItemDefectoCombosForeignKeyCuentaContable();
				this.cargarCombosFrameCuentaContablesForeignKey(sFormularioTipoBusqueda);

				if(conInitActions) {
				}

			this.recargarComboTablaCuentaContable(this.cuentacontablesForeignKey);

		} catch(Exception e) {
			throw e;
		}
	}

	public void cargarCombosForeignKeyTipoEstructura(Boolean cargarCombosDependencia,Boolean conInitActions,Boolean conSetVariablesGlobales,String sFinalQueryCombo,String sFormularioTipoBusqueda) throws Exception {
		try {
				this.cargarCombosForeignKeyTipoEstructuraListas(cargarCombosDependencia,sFinalQueryCombo);
				this.addItemDefectoCombosForeignKeyTipoEstructura();
				this.cargarCombosFrameTipoEstructurasForeignKey(sFormularioTipoBusqueda);

				if(conInitActions) {
				}

			this.recargarComboTablaTipoEstructura(this.tipoestructurasForeignKey);

		} catch(Exception e) {
			throw e;
		}
	}

	public void cargarCombosForeignKeyPais(Boolean cargarCombosDependencia,Boolean conInitActions,Boolean conSetVariablesGlobales,String sFinalQueryCombo,String sFormularioTipoBusqueda) throws Exception {
		try {
				this.cargarCombosForeignKeyPaisListas(cargarCombosDependencia,sFinalQueryCombo);
				this.addItemDefectoCombosForeignKeyPais();
				this.cargarCombosFramePaissForeignKey(sFormularioTipoBusqueda);

				if(conInitActions) {
				}

			this.recargarComboTablaPais(this.paissForeignKey);

		} catch(Exception e) {
			throw e;
		}
	}

	public void cargarCombosForeignKeyCiudad(Boolean cargarCombosDependencia,Boolean conInitActions,Boolean conSetVariablesGlobales,String sFinalQueryCombo,String sFormularioTipoBusqueda) throws Exception {
		try {
				this.cargarCombosForeignKeyCiudadListas(cargarCombosDependencia,sFinalQueryCombo);
				this.addItemDefectoCombosForeignKeyCiudad();
				this.cargarCombosFrameCiudadsForeignKey(sFormularioTipoBusqueda);

				if(conInitActions) {
				}

			this.recargarComboTablaCiudad(this.ciudadsForeignKey);

		} catch(Exception e) {
			throw e;
		}
	}
	
	public void jButtonNuevoEstructuraActionPerformed(ActionEvent evt,Boolean esRelaciones) throws Exception {   
		try {
			EventoGlobalTipo eventoGlobalTipo=EventoGlobalTipo.FORM_RECARGAR;
			String sTipo="NUEVO_NORMAL";
			
			this.estaModoNuevo=true;
			
			if(this.estructuraSessionBean.getConGuardarRelaciones()) {
				this.dStart=(double)System.currentTimeMillis();
			}
				
			//if(this.esUsoDesdeHijo) {
			//	eventoGlobalTipo=EventoGlobalTipo.FORM_HIJO_ACTUALIZAR;
			//}
											
			if(this.jInternalFrameDetalleFormEstructura==null) { //if(!this.conCargarFormDetalle) {
				this.inicializarFormDetalle();
			}			
				
			EstructuraBeanSwingJInternalFrameAdditional.procesarEventosVista(this.parametroGeneralUsuario,this.moduloActual,this.opcionActual,this.usuarioActual,this,FuncionTipo.BEFORE,ControlTipo.FORM,EventoTipo.LOAD,EventoSubTipo.NEW,"FORM",this.estructura,new Object(),this.estructuraParameterGeneral,this.estructuraReturnGeneral);
			
			
			if(jTableDatosEstructura.getRowCount()>=1) {
				jTableDatosEstructura.removeRowSelectionInterval(0, jTableDatosEstructura.getRowCount()-1);						
			}
			
			this.isEsNuevoEstructura=true;
			
			//ESTABLECE SI ES RELACIONADO O NO 
			this.habilitarDeshabilitarTipoMantenimientoEstructura(esRelaciones);
			
			this.nuevoPreparar(false); 
			this.habilitarDeshabilitarControlesEstructura(true);			
			//this.estructura=new Estructura();
			//this.estructura.setIsChanged(true);
			
			//NO FUNCIONA BINDINGS
			this.inicializarActualizarBindingBotonesEstructura(false) ;						
			 
			//SI ES MANUAL
			//this.inicializarActualizarBindingBotonesManualEstructura() ;
			
			if(EstructuraJInternalFrame.CON_DATOS_FRAME) {
				this.abrirFrameDetalleEstructura(esRelaciones);
			}
					
			//Se Duplica, sin sentido
			//this.actualizarInformacion("EVENTO_NUEVO",false,this.estructura);	
			this.actualizarInformacion("INFO_PADRE",false,this.estructura);				
			
			EstructuraBeanSwingJInternalFrameAdditional.procesarEventosVista(this.parametroGeneralUsuario,this.moduloActual,this.opcionActual,this.usuarioActual,this,FuncionTipo.AFTER,ControlTipo.FORM,EventoTipo.LOAD,EventoSubTipo.NEW,"FORM",this.estructura,new Object(),this.estructuraParameterGeneral,this.estructuraReturnGeneral);
			
			if(this.estructuraSessionBean.getConGuardarRelaciones()) {
				this.dEnd=(double)System.currentTimeMillis();					
				this.dDif=this.dEnd - this.dStart;
					
				if(Constantes.ISDEVELOPING) {
					System.out.println("Tiempo(ms) Nuevo Preparar Estructura: " + this.dDif); 
				}
			}
			
			//false para que pueda generar eventos
			this.estaModoNuevo=false;
							
			//Con this.estaModoNuevo=false;, se permite actualizar y usar eventos control al mismo tiempo (FuncionTipo.LAST)			
			EstructuraBeanSwingJInternalFrameAdditional.procesarEventosVista(this.parametroGeneralUsuario,this.moduloActual,this.opcionActual,this.usuarioActual,this,FuncionTipo.LAST,ControlTipo.FORM,EventoTipo.CLIC,EventoSubTipo.NEW,sTipo,this.estructura,new Object(),this.estructuraParameterGeneral,this.estructuraReturnGeneral);
			
		} catch(Exception e) {									
			FuncionesSwing.manageException(this, e,logger,EstructuraConstantesFunciones.CLASSNAME);
			
		} finally {
			this.estaModoNuevo=false;			
		}
	}
	
	public void jButtonDuplicarEstructuraActionPerformed(ActionEvent evt,Boolean esRelaciones) throws Exception {   
		try {
			Boolean soloDuplicarUno=false;
			Boolean conSeleccionarFilaTabla=false;
			
			this.estaModoNuevo=true;
			this.estaModoDuplicar=true;
			
			ArrayList<Estructura> estructurasSeleccionados=new ArrayList<Estructura>();
			int intSelectedRow =-1;
			Integer iNumRowsSeleccionados=0;
			int[] arrNumRowsSeleccionados=null;
			
			//NO SE TOMA EN CUENTA, SI LOS SELECCIONADOS
			if(conSeleccionarFilaTabla) {
				arrNumRowsSeleccionados=this.jTableDatosEstructura.getSelectedRows();
				iNumRowsSeleccionados=this.jTableDatosEstructura.getSelectedRows().length;			
			}
			
			estructurasSeleccionados=this.getEstructurasSeleccionados(false);
				
			if((soloDuplicarUno && iNumRowsSeleccionados.equals(1)) || !soloDuplicarUno) {
				//LO HACE NUEVOPREPARAR
				//this.iIdNuevoEstructura--;			
				//Estructura estructuraAux= new Estructura();			
				//estructuraAux.setId(this.iIdNuevoEstructura);																
				
				//NO SE TOMA EN CUENTA, SI LOS SELECCIONADOS
				//Estructura estructuraOrigen=new Estructura();
				//for(Integer iNumRowSeleccionado:arrNumRowsSeleccionados) {				
				
				for(Estructura estructuraOrigen : estructurasSeleccionados) {
					if(conSeleccionarFilaTabla) {
						if(!soloDuplicarUno) {
							//NO SE TOMA EN CUENTA, SI LOS SELECCIONADOS
							//intSelectedRow =iNumRowSeleccionado;
						} else {
							intSelectedRow = this.jTableDatosEstructura.getSelectedRow();
						}
						
						//ARCHITECTURE
						if(Constantes.ISUSAEJBLOGICLAYER) {
							estructuraOrigen =(Estructura) this.estructuraLogic.getEstructuras().toArray()[this.jTableDatosEstructura.convertRowIndexToModel(intSelectedRow)];
						} else if(Constantes.ISUSAEJBREMOTE || Constantes.ISUSAEJBHOME) {
							estructuraOrigen =(Estructura) this.estructuras.toArray()[this.jTableDatosEstructura.convertRowIndexToModel(intSelectedRow)];
						}
					}
					
					this.aumentarTamanioFilaNuevaTablaEstructura();
					
					if(this.conTotales) {
						this.quitarFilaTotales();
					}
					
					this.nuevoPreparar(true);
					
					this.estructura.setsType("DUPLICADO");
					
					this.setCopiarVariablesObjetosEstructura(estructuraOrigen,this.estructura,true,true);
					
					this.setVariablesFormularioToObjetoActualForeignKeysEstructura(this.estructura);
					
					//LO HACE NUEVOPREPARAR
					/*
					if(Constantes.ISUSAEJBLOGICLAYER) {				
						this.estructuraLogic.getEstructuras().add(this.estructuraAux);
					} else if(Constantes.ISUSAEJBREMOTE||Constantes.ISUSAEJBHOME) {
						this.estructuras.add(this.estructuraAux);				
					}
					*/
				}
				
				this.inicializarActualizarBindingTablaEstructura(false);
				
				this.jTableDatosEstructura.setRowSelectionInterval(this.getIndiceNuevoEstructura(), this.getIndiceNuevoEstructura());
				
				int iLastRow =  this.jTableDatosEstructura.getRowCount () - 1;
				Rectangle rectangle = this.jTableDatosEstructura.getCellRect(iLastRow, 0, true);
				
				this.jTableDatosEstructura.scrollRectToVisible(rectangle);
				
				//FILA TOTALES
				if(this.conTotales) {
					this.crearFilaTotales();
					
					this.inicializarActualizarBindingTablaEstructura(false);
				}
			} else {
				throw new Exception("DEBE ESTAR SELECCIONADO 1 REGISTRO");
			}
			
		} catch(Exception e) {			
			FuncionesSwing.manageException(this, e,logger,EstructuraConstantesFunciones.CLASSNAME);
		
		} finally {
			this.estaModoNuevo=false;
			this.estaModoDuplicar=false;
		}
	}
	
	public void jButtonCopiarEstructuraActionPerformed(ActionEvent evt) throws Exception {   
		try {
			
			Boolean conSeleccionarFilaTabla=false;
			Integer iNumRowsSeleccionados=0;
			int[] intSelectedRows =null;
			int intSelectedRow =0;
			
			this.estaModoCopiar=true;
			
			ArrayList<Estructura> estructurasSeleccionados=new ArrayList<Estructura>();									
		
			Estructura estructuraOrigen=new Estructura();
			Estructura estructuraDestino=new Estructura();
				
			estructurasSeleccionados=this.getEstructurasSeleccionados(false);
			
			if(conSeleccionarFilaTabla) {
				iNumRowsSeleccionados=this.jTableDatosEstructura.getSelectedRows().length;	
			}
			
			if(iNumRowsSeleccionados.equals(2) || estructurasSeleccionados.size()==2) {
				if(conSeleccionarFilaTabla) {
					intSelectedRows =this.jTableDatosEstructura.getSelectedRows();
					intSelectedRow = intSelectedRows[0];	
									
					//ARCHITECTURE
					if(Constantes.ISUSAEJBLOGICLAYER) {
						estructuraOrigen =(Estructura) this.estructuraLogic.getEstructuras().toArray()[this.jTableDatosEstructura.convertRowIndexToModel(intSelectedRow)];
					} else if(Constantes.ISUSAEJBREMOTE || Constantes.ISUSAEJBHOME) {
						estructuraOrigen =(Estructura) this.estructuras.toArray()[this.jTableDatosEstructura.convertRowIndexToModel(intSelectedRow)];
					}
					//ARCHITECTURE
					
					intSelectedRow = intSelectedRows[1];
					
					//ARCHITECTURE
					if(Constantes.ISUSAEJBLOGICLAYER) {
						estructuraDestino =(Estructura) this.estructuraLogic.getEstructuras().toArray()[this.jTableDatosEstructura.convertRowIndexToModel(intSelectedRow)];
					} else if(Constantes.ISUSAEJBREMOTE || Constantes.ISUSAEJBHOME) {
						estructuraDestino =(Estructura) this.estructuras.toArray()[this.jTableDatosEstructura.convertRowIndexToModel(intSelectedRow)];
					}
					//ARCHITECTURE
				}
				
				estructuraOrigen =estructurasSeleccionados.get(0);
				estructuraDestino =estructurasSeleccionados.get(1);
				
				this.setCopiarVariablesObjetosEstructura(estructuraOrigen,estructuraDestino,true,false);
				
				estructuraDestino.setsType("DUPLICADO");
				
				//ARCHITECTURE
				if(Constantes.ISUSAEJBLOGICLAYER) {
					actualizarLista(estructuraDestino,estructuraLogic.getEstructuras());					
				} else if(Constantes.ISUSAEJBREMOTE||Constantes.ISUSAEJBHOME) {
					actualizarLista(estructuraDestino,estructuras);
				}
				//ARCHITECTURE
				
				this.inicializarActualizarBindingTablaEstructura(false);
				
				//this.jTableDatosEstructura.setRowSelectionInterval(this.getIndiceNuevoEstructura(), this.getIndiceNuevoEstructura());
				
				int iLastRow =  this.jTableDatosEstructura.getRowCount () - 1;
				Rectangle rectangle = this.jTableDatosEstructura.getCellRect(iLastRow, 0, true);
				
				this.jTableDatosEstructura.scrollRectToVisible(rectangle);
				
				//FILA TOTALES
				if(this.conTotales) {
					//this.crearFilaTotales();
					
					this.inicializarActualizarBindingTablaEstructura(false);
				}
			} else {
				throw new Exception("DEBEN ESTAR SELECCIONADOS 2 REGISTROS");
			}
		} catch(Exception e) {
			FuncionesSwing.manageException(this, e,logger,EstructuraConstantesFunciones.CLASSNAME);
		
		}  finally {
			this.estaModoCopiar=false;
		}
	}
	
	public void jButtonVerFormEstructuraActionPerformed(ActionEvent evt) throws Exception {   
		try {
			
			if(this.jInternalFrameDetalleFormEstructura==null) { //if(!this.conCargarFormDetalle) {
				this.inicializarFormDetalle();
			}
			
			this.jInternalFrameDetalleFormEstructura.setSelected(true);
			
		} catch(Exception e) {
			FuncionesSwing.manageException(this, e,logger,EstructuraConstantesFunciones.CLASSNAME);
		}
	}
	
	public void jButtonMostrarOcultarEstructuraActionPerformed(ActionEvent evt) throws Exception {   
		try {
			Boolean isVisible=this.jPanelParametrosReportesEstructura.isVisible();
			
			//BYDAN_BUSQUEDAS
			
			this.jTabbedPaneBusquedasEstructura.setVisible(!isVisible);			
			
			
			this.jPanelParametrosReportesEstructura.setVisible(!isVisible);
			this.jPanelPaginacionEstructura.setVisible(!isVisible);
			this.jPanelAccionesEstructura.setVisible(!isVisible);
							
		} catch(Exception e) {
			FuncionesSwing.manageException(this, e,logger,EstructuraConstantesFunciones.CLASSNAME);
		}
	}
	
	public void jButtonCerrarEstructuraActionPerformed(ActionEvent evt) throws Exception {   
		try {
			this.closingInternalFrameEstructura();
			
			//if(this.jInternalFrameParent==null) {
				//this.dispose();
			/*} else {
				this.setVisible(false);
	        	this.setSelected(false);	
			}*/			
		} catch(Exception e) {
			FuncionesSwing.manageException(this, e,logger,EstructuraConstantesFunciones.CLASSNAME);
		}
	}
	
	public void jButtonCerrarReporteDinamicoEstructuraActionPerformed(ActionEvent evt) throws Exception {   
		try {
			
			this.cerrarFrameReporteDinamicoEstructura();
			
						
		} catch(Exception e) {
			FuncionesSwing.manageException(this, e,logger,EstructuraConstantesFunciones.CLASSNAME);
		}
	}
	
	public void jButtonCerrarImportacionEstructuraActionPerformed(ActionEvent evt) throws Exception {   
		try {
			
			this.cerrarFrameImportacionEstructura();
			
						
		} catch(Exception e) {
			FuncionesSwing.manageException(this, e,logger,EstructuraConstantesFunciones.CLASSNAME);
		}
	}
	
	
	public void jButtonAbrirOrderByEstructuraActionPerformed(ActionEvent evt) throws Exception {   
		try {
			
			
			this.abrirInicializarFrameOrderByEstructura();
			
			this.abrirFrameOrderByEstructura();
			
			
		} catch(Exception e) {
			FuncionesSwing.manageException(this, e,logger,EstructuraConstantesFunciones.CLASSNAME);
		}
	}
	
	public void jButtonCerrarOrderByEstructuraActionPerformed(ActionEvent evt) throws Exception {   
		try {
			
			this.cerrarFrameOrderByEstructura();
			
						
		} catch(Exception e) {
			FuncionesSwing.manageException(this, e,logger,EstructuraConstantesFunciones.CLASSNAME);
		}
	}
	
	public void abrirFrameDetalleEstructura(Boolean esRelaciones) throws Exception {	    	        
	    try {
			//CAUSA PROBLEMAS, SE ADICIONA EN CONSTRUCTOR, LUEGO SOLO VISIBLE true y false
			//this.jDesktopPane.add(jInternalFrameDetalleFormEstructura);
			
			if(!esRelaciones) {
				if(this.jInternalFrameDetalleFormEstructura.isMaximum()) {
					this.jInternalFrameDetalleFormEstructura.setMaximum(false);
				}								
				
	    		this.jInternalFrameDetalleFormEstructura.setSize(this.jInternalFrameDetalleFormEstructura.iWidthFormulario,this.jInternalFrameDetalleFormEstructura.iHeightFormulario);
	    	} else {
				if(this.iWidthScroll<this.jInternalFrameDetalleFormEstructura.iWidthFormularioMaximo) {
	    			this.jInternalFrameDetalleFormEstructura.setSize(this.iWidthScroll,this.iHeightScroll);
				} else {
					if(!this.jInternalFrameDetalleFormEstructura.isMaximum()) {
						this.jInternalFrameDetalleFormEstructura.setMaximum(true);
					}
				}
				
				if(this.jInternalFrameDetalleFormEstructura.jContentPaneDetalleEstructura.getWidth() > this.getWidth()) {
					this.jInternalFrameDetalleFormEstructura.jTabbedPaneRelacionesEstructura.setMinimumSize(new Dimension(this.jInternalFrameDetalleFormEstructura.jContentPaneDetalleEstructura.getWidth(),EstructuraConstantesFunciones.ALTO_TABPANE_RELACIONES));
					this.jInternalFrameDetalleFormEstructura.jTabbedPaneRelacionesEstructura.setMaximumSize(new Dimension(this.jInternalFrameDetalleFormEstructura.jContentPaneDetalleEstructura.getWidth(),EstructuraConstantesFunciones.ALTO_TABPANE_RELACIONES));
					this.jInternalFrameDetalleFormEstructura.jTabbedPaneRelacionesEstructura.setPreferredSize(new Dimension(this.jInternalFrameDetalleFormEstructura.jContentPaneDetalleEstructura.getWidth(),EstructuraConstantesFunciones.ALTO_TABPANE_RELACIONES));
					
					Dimension dimension=new Dimension(); 
					
					

					if(AsistenciaDiariaJInternalFrame.ESTA_CARGADO_PORPARTE) {
						this.redimensionarTablaPanelRelacionadaAsistenciaDiaria();
					}

					if(AsistenciaMensualJInternalFrame.ESTA_CARGADO_PORPARTE) {
						this.redimensionarTablaPanelRelacionadaAsistenciaMensual();
					}

					if(CentroCostoEstructuraJInternalFrame.ESTA_CARGADO_PORPARTE) {
						this.redimensionarTablaPanelRelacionadaCentroCostoEstructura();
					}

					if(CierreRolMensualJInternalFrame.ESTA_CARGADO_PORPARTE) {
						this.redimensionarTablaPanelRelacionadaCierreRolMensual();
					}

					if(EmpleadoJInternalFrame.ESTA_CARGADO_PORPARTE) {
						this.redimensionarTablaPanelRelacionadaEmpleado();
					}

					if(EmpleadoEstructuraJInternalFrame.ESTA_CARGADO_PORPARTE) {
						this.redimensionarTablaPanelRelacionadaEmpleadoEstructura();
					}

					if(EmpleadoImpuestoRentaJInternalFrame.ESTA_CARGADO_PORPARTE) {
						this.redimensionarTablaPanelRelacionadaEmpleadoImpuestoRenta();
					}

					if(EmpleadoPagoRubroJInternalFrame.ESTA_CARGADO_PORPARTE) {
						this.redimensionarTablaPanelRelacionadaEmpleadoPagoRubro();
					}

					if(EmpleadoProcesoRubroJInternalFrame.ESTA_CARGADO_PORPARTE) {
						this.redimensionarTablaPanelRelacionadaEmpleadoProcesoRubro();
					}

					if(EstructuraJInternalFrame.ESTA_CARGADO_PORPARTE) {
						this.redimensionarTablaPanelRelacionadaEstructura();
					}

					if(EvaluacionEmpleadoJInternalFrame.ESTA_CARGADO_PORPARTE) {
						this.redimensionarTablaPanelRelacionadaEvaluacionEmpleado();
					}

					if(EvaluacionNomiJInternalFrame.ESTA_CARGADO_PORPARTE) {
						this.redimensionarTablaPanelRelacionadaEvaluacionNomi();
					}

					if(FormatoNomiJInternalFrame.ESTA_CARGADO_PORPARTE) {
						this.redimensionarTablaPanelRelacionadaFormatoNomi();
					}

					if(FuncionEstrucJInternalFrame.ESTA_CARGADO_PORPARTE) {
						this.redimensionarTablaPanelRelacionadaFuncionEstruc();
					}

					if(HistorialPagoNomiJInternalFrame.ESTA_CARGADO_PORPARTE) {
						this.redimensionarTablaPanelRelacionadaHistorialPagoNomi();
					}

					if(PlaniVacacionJInternalFrame.ESTA_CARGADO_PORPARTE) {
						this.redimensionarTablaPanelRelacionadaPlaniVacacion();
					}

					if(ProvisionEmpleadoJInternalFrame.ESTA_CARGADO_PORPARTE) {
						this.redimensionarTablaPanelRelacionadaProvisionEmpleado();
					}

					if(ResponsableActivoFijoJInternalFrame.ESTA_CARGADO_PORPARTE) {
						this.redimensionarTablaPanelRelacionadaResponsableActivoFijo();
					}

					if(RubroEmpleaCuentaContableJInternalFrame.ESTA_CARGADO_PORPARTE) {
						this.redimensionarTablaPanelRelacionadaRubroEmpleaCuentaContable();
					}

					if(RubroEstructuraJInternalFrame.ESTA_CARGADO_PORPARTE) {
						this.redimensionarTablaPanelRelacionadaRubroEstructura();
					}

					if(SolicitudHoraExtraJInternalFrame.ESTA_CARGADO_PORPARTE) {
						this.redimensionarTablaPanelRelacionadaSolicitudHoraExtra();
					}

					if(SolicitudReemplazoJInternalFrame.ESTA_CARGADO_PORPARTE) {
						this.redimensionarTablaPanelRelacionadaSolicitudReemplazo();
					}

					if(SolicitudVacacionJInternalFrame.ESTA_CARGADO_PORPARTE) {
						this.redimensionarTablaPanelRelacionadaSolicitudVacacion();
					}
					
				}
	    	}
			
		
	       	this.jInternalFrameDetalleFormEstructura.setVisible(true);
	        this.jInternalFrameDetalleFormEstructura.setSelected(true);
		
	    } catch (final java.beans.PropertyVetoException e) {
		
			FuncionesSwing.manageException(this, e,logger,EstructuraConstantesFunciones.CLASSNAME);
	    }
	}
	
	
	public void abrirInicializarFrameOrderByEstructura() throws Exception {	    	        
	    try {
			if(this.jInternalFrameOrderByEstructura==null) {
				
				if(!this.conCargarMinimo) {
					this.jInternalFrameOrderByEstructura=new OrderByJInternalFrame(STIPO_TAMANIO_GENERAL,this.jButtonAbrirOrderByEstructura,false,this);
				} else {
					this.jInternalFrameOrderByEstructura=new OrderByJInternalFrame(STIPO_TAMANIO_GENERAL,this.jButtonAbrirOrderByEstructura,true,this);
				}
				
				this.jDesktopPane.add(this.jInternalFrameOrderByEstructura);
				this.jInternalFrameOrderByEstructura.setVisible(false);
				this.jInternalFrameOrderByEstructura.setSelected(false);
				
				this.jInternalFrameOrderByEstructura.getjButtonCerrarOrderBy().addActionListener (new ButtonActionListener(this,"CerrarOrderByEstructura"));
				
				this.inicializarActualizarBindingTablaOrderByEstructura();
			}
		} catch (final Exception e) {
			
		}
	}
	
	
	
	public void abrirInicializarFrameImportacionEstructura() throws Exception {	    	        
	    try {
			if(this.jInternalFrameImportacionEstructura==null) {
				
				this.jInternalFrameImportacionEstructura=new ImportacionJInternalFrame(EstructuraConstantesFunciones.SCLASSWEBTITULO,this);			
				
				MainJFrame.cerrarJInternalFramesExistentes(this.jDesktopPane,this.jInternalFrameImportacionEstructura);							
				
				this.jDesktopPane.add(this.jInternalFrameImportacionEstructura);
				this.jInternalFrameImportacionEstructura.setVisible(false);
				this.jInternalFrameImportacionEstructura.setSelected(false);


				this.jInternalFrameImportacionEstructura.getjButtonCerrarImportacion().addActionListener (new ButtonActionListener(this,"CerrarImportacionEstructura"));
				this.jInternalFrameImportacionEstructura.getjButtonGenerarImportacion().addActionListener (new ButtonActionListener(this,"GenerarImportacionEstructura"));
				this.jInternalFrameImportacionEstructura.getjButtonAbrirImportacion().addActionListener (new ButtonActionListener(this,"AbrirImportacionEstructura"));


			}
		} catch (final Exception e) {
			
		}
	}		
	
	
	
	public void abrirInicializarFrameReporteDinamicoEstructura() throws Exception {	    	        
	    try {
			
			if(this.jInternalFrameReporteDinamicoEstructura==null) {
				this.jInternalFrameReporteDinamicoEstructura=new ReporteDinamicoJInternalFrame(EstructuraConstantesFunciones.SCLASSWEBTITULO,this);	
				
				MainJFrame.cerrarJInternalFramesExistentes(this.jDesktopPane,this.jInternalFrameReporteDinamicoEstructura);	
	
	
				this.jDesktopPane.add(this.jInternalFrameReporteDinamicoEstructura);
				this.jInternalFrameReporteDinamicoEstructura.setVisible(false);
				this.jInternalFrameReporteDinamicoEstructura.setSelected(false);
	
	
	
				this.jInternalFrameReporteDinamicoEstructura.getjButtonCerrarReporteDinamico().addActionListener (new ButtonActionListener(this,"CerrarReporteDinamicoEstructura"));
				this.jInternalFrameReporteDinamicoEstructura.getjButtonGenerarReporteDinamico().addActionListener (new ButtonActionListener(this,"GenerarReporteDinamicoEstructura"));
				this.jInternalFrameReporteDinamicoEstructura.getjButtonGenerarExcelReporteDinamico().addActionListener (new ButtonActionListener(this,"GenerarExcelReporteDinamicoEstructura"));
	
				this.inicializarActualizarBindingtiposArchivosReportesDinamicoAccionesManualEstructura();
			}

		} catch (final Exception e) {
			
		}
	}	
	
	
	
		

	public void redimensionarTablaPanelRelacionadaAsistenciaDiaria() {
		Dimension dimension=new Dimension();

		dimension=this.jInternalFrameDetalleFormEstructura.asistenciadiariaBeanSwingJInternalFrame.jScrollPanelDatosAsistenciaDiaria.getPreferredSize();
		dimension.setSize(this.jInternalFrameDetalleFormEstructura.jContentPaneDetalleEstructura.getWidth(),dimension.getHeight());

		this.jInternalFrameDetalleFormEstructura.asistenciadiariaBeanSwingJInternalFrame.jScrollPanelDatosAsistenciaDiaria.setMinimumSize(dimension);
		this.jInternalFrameDetalleFormEstructura.asistenciadiariaBeanSwingJInternalFrame.jScrollPanelDatosAsistenciaDiaria.setMaximumSize(dimension);
		this.jInternalFrameDetalleFormEstructura.asistenciadiariaBeanSwingJInternalFrame.jScrollPanelDatosAsistenciaDiaria.setPreferredSize(dimension);


	}

	public void redimensionarTablaPanelRelacionadaAsistenciaMensual() {
		Dimension dimension=new Dimension();

		dimension=this.jInternalFrameDetalleFormEstructura.asistenciamensualBeanSwingJInternalFrame.jScrollPanelDatosAsistenciaMensual.getPreferredSize();
		dimension.setSize(this.jInternalFrameDetalleFormEstructura.jContentPaneDetalleEstructura.getWidth(),dimension.getHeight());

		this.jInternalFrameDetalleFormEstructura.asistenciamensualBeanSwingJInternalFrame.jScrollPanelDatosAsistenciaMensual.setMinimumSize(dimension);
		this.jInternalFrameDetalleFormEstructura.asistenciamensualBeanSwingJInternalFrame.jScrollPanelDatosAsistenciaMensual.setMaximumSize(dimension);
		this.jInternalFrameDetalleFormEstructura.asistenciamensualBeanSwingJInternalFrame.jScrollPanelDatosAsistenciaMensual.setPreferredSize(dimension);


	}

	public void redimensionarTablaPanelRelacionadaCentroCostoEstructura() {
		Dimension dimension=new Dimension();

		dimension=this.jInternalFrameDetalleFormEstructura.centrocostoestructuraBeanSwingJInternalFrame.jScrollPanelDatosCentroCostoEstructura.getPreferredSize();
		dimension.setSize(this.jInternalFrameDetalleFormEstructura.jContentPaneDetalleEstructura.getWidth(),dimension.getHeight());

		this.jInternalFrameDetalleFormEstructura.centrocostoestructuraBeanSwingJInternalFrame.jScrollPanelDatosCentroCostoEstructura.setMinimumSize(dimension);
		this.jInternalFrameDetalleFormEstructura.centrocostoestructuraBeanSwingJInternalFrame.jScrollPanelDatosCentroCostoEstructura.setMaximumSize(dimension);
		this.jInternalFrameDetalleFormEstructura.centrocostoestructuraBeanSwingJInternalFrame.jScrollPanelDatosCentroCostoEstructura.setPreferredSize(dimension);


	}

	public void redimensionarTablaPanelRelacionadaCierreRolMensual() {
		Dimension dimension=new Dimension();

		dimension=this.jInternalFrameDetalleFormEstructura.cierrerolmensualBeanSwingJInternalFrame.jScrollPanelDatosCierreRolMensual.getPreferredSize();
		dimension.setSize(this.jInternalFrameDetalleFormEstructura.jContentPaneDetalleEstructura.getWidth(),dimension.getHeight());

		this.jInternalFrameDetalleFormEstructura.cierrerolmensualBeanSwingJInternalFrame.jScrollPanelDatosCierreRolMensual.setMinimumSize(dimension);
		this.jInternalFrameDetalleFormEstructura.cierrerolmensualBeanSwingJInternalFrame.jScrollPanelDatosCierreRolMensual.setMaximumSize(dimension);
		this.jInternalFrameDetalleFormEstructura.cierrerolmensualBeanSwingJInternalFrame.jScrollPanelDatosCierreRolMensual.setPreferredSize(dimension);


	}

	public void redimensionarTablaPanelRelacionadaEmpleado() {
		Dimension dimension=new Dimension();

		dimension=this.jInternalFrameDetalleFormEstructura.empleadoBeanSwingJInternalFrame.jScrollPanelDatosEmpleado.getPreferredSize();
		dimension.setSize(this.jInternalFrameDetalleFormEstructura.jContentPaneDetalleEstructura.getWidth(),dimension.getHeight());

		this.jInternalFrameDetalleFormEstructura.empleadoBeanSwingJInternalFrame.jScrollPanelDatosEmpleado.setMinimumSize(dimension);
		this.jInternalFrameDetalleFormEstructura.empleadoBeanSwingJInternalFrame.jScrollPanelDatosEmpleado.setMaximumSize(dimension);
		this.jInternalFrameDetalleFormEstructura.empleadoBeanSwingJInternalFrame.jScrollPanelDatosEmpleado.setPreferredSize(dimension);


	}

	public void redimensionarTablaPanelRelacionadaEmpleadoEstructura() {
		Dimension dimension=new Dimension();

		dimension=this.jInternalFrameDetalleFormEstructura.empleadoestructuraBeanSwingJInternalFrame.jScrollPanelDatosEmpleadoEstructura.getPreferredSize();
		dimension.setSize(this.jInternalFrameDetalleFormEstructura.jContentPaneDetalleEstructura.getWidth(),dimension.getHeight());

		this.jInternalFrameDetalleFormEstructura.empleadoestructuraBeanSwingJInternalFrame.jScrollPanelDatosEmpleadoEstructura.setMinimumSize(dimension);
		this.jInternalFrameDetalleFormEstructura.empleadoestructuraBeanSwingJInternalFrame.jScrollPanelDatosEmpleadoEstructura.setMaximumSize(dimension);
		this.jInternalFrameDetalleFormEstructura.empleadoestructuraBeanSwingJInternalFrame.jScrollPanelDatosEmpleadoEstructura.setPreferredSize(dimension);


	}

	public void redimensionarTablaPanelRelacionadaEmpleadoImpuestoRenta() {
		Dimension dimension=new Dimension();

		dimension=this.jInternalFrameDetalleFormEstructura.empleadoimpuestorentaBeanSwingJInternalFrame.jScrollPanelDatosEmpleadoImpuestoRenta.getPreferredSize();
		dimension.setSize(this.jInternalFrameDetalleFormEstructura.jContentPaneDetalleEstructura.getWidth(),dimension.getHeight());

		this.jInternalFrameDetalleFormEstructura.empleadoimpuestorentaBeanSwingJInternalFrame.jScrollPanelDatosEmpleadoImpuestoRenta.setMinimumSize(dimension);
		this.jInternalFrameDetalleFormEstructura.empleadoimpuestorentaBeanSwingJInternalFrame.jScrollPanelDatosEmpleadoImpuestoRenta.setMaximumSize(dimension);
		this.jInternalFrameDetalleFormEstructura.empleadoimpuestorentaBeanSwingJInternalFrame.jScrollPanelDatosEmpleadoImpuestoRenta.setPreferredSize(dimension);


	}

	public void redimensionarTablaPanelRelacionadaEmpleadoPagoRubro() {
		Dimension dimension=new Dimension();

		dimension=this.jInternalFrameDetalleFormEstructura.empleadopagorubroBeanSwingJInternalFrame.jScrollPanelDatosEmpleadoPagoRubro.getPreferredSize();
		dimension.setSize(this.jInternalFrameDetalleFormEstructura.jContentPaneDetalleEstructura.getWidth(),dimension.getHeight());

		this.jInternalFrameDetalleFormEstructura.empleadopagorubroBeanSwingJInternalFrame.jScrollPanelDatosEmpleadoPagoRubro.setMinimumSize(dimension);
		this.jInternalFrameDetalleFormEstructura.empleadopagorubroBeanSwingJInternalFrame.jScrollPanelDatosEmpleadoPagoRubro.setMaximumSize(dimension);
		this.jInternalFrameDetalleFormEstructura.empleadopagorubroBeanSwingJInternalFrame.jScrollPanelDatosEmpleadoPagoRubro.setPreferredSize(dimension);


	}

	public void redimensionarTablaPanelRelacionadaEmpleadoProcesoRubro() {
		Dimension dimension=new Dimension();

		dimension=this.jInternalFrameDetalleFormEstructura.empleadoprocesorubroBeanSwingJInternalFrame.jScrollPanelDatosEmpleadoProcesoRubro.getPreferredSize();
		dimension.setSize(this.jInternalFrameDetalleFormEstructura.jContentPaneDetalleEstructura.getWidth(),dimension.getHeight());

		this.jInternalFrameDetalleFormEstructura.empleadoprocesorubroBeanSwingJInternalFrame.jScrollPanelDatosEmpleadoProcesoRubro.setMinimumSize(dimension);
		this.jInternalFrameDetalleFormEstructura.empleadoprocesorubroBeanSwingJInternalFrame.jScrollPanelDatosEmpleadoProcesoRubro.setMaximumSize(dimension);
		this.jInternalFrameDetalleFormEstructura.empleadoprocesorubroBeanSwingJInternalFrame.jScrollPanelDatosEmpleadoProcesoRubro.setPreferredSize(dimension);


	}

	public void redimensionarTablaPanelRelacionadaEstructura() {
		Dimension dimension=new Dimension();

		dimension=this.jInternalFrameDetalleFormEstructura.estructuraBeanSwingJInternalFrame.jScrollPanelDatosEstructura.getPreferredSize();
		dimension.setSize(this.jInternalFrameDetalleFormEstructura.jContentPaneDetalleEstructura.getWidth(),dimension.getHeight());

		this.jInternalFrameDetalleFormEstructura.estructuraBeanSwingJInternalFrame.jScrollPanelDatosEstructura.setMinimumSize(dimension);
		this.jInternalFrameDetalleFormEstructura.estructuraBeanSwingJInternalFrame.jScrollPanelDatosEstructura.setMaximumSize(dimension);
		this.jInternalFrameDetalleFormEstructura.estructuraBeanSwingJInternalFrame.jScrollPanelDatosEstructura.setPreferredSize(dimension);


	}

	public void redimensionarTablaPanelRelacionadaEvaluacionEmpleado() {
		Dimension dimension=new Dimension();

		dimension=this.jInternalFrameDetalleFormEstructura.evaluacionempleadoBeanSwingJInternalFrame.jScrollPanelDatosEvaluacionEmpleado.getPreferredSize();
		dimension.setSize(this.jInternalFrameDetalleFormEstructura.jContentPaneDetalleEstructura.getWidth(),dimension.getHeight());

		this.jInternalFrameDetalleFormEstructura.evaluacionempleadoBeanSwingJInternalFrame.jScrollPanelDatosEvaluacionEmpleado.setMinimumSize(dimension);
		this.jInternalFrameDetalleFormEstructura.evaluacionempleadoBeanSwingJInternalFrame.jScrollPanelDatosEvaluacionEmpleado.setMaximumSize(dimension);
		this.jInternalFrameDetalleFormEstructura.evaluacionempleadoBeanSwingJInternalFrame.jScrollPanelDatosEvaluacionEmpleado.setPreferredSize(dimension);


	}

	public void redimensionarTablaPanelRelacionadaEvaluacionNomi() {
		Dimension dimension=new Dimension();

		dimension=this.jInternalFrameDetalleFormEstructura.evaluacionnomiBeanSwingJInternalFrame.jScrollPanelDatosEvaluacionNomi.getPreferredSize();
		dimension.setSize(this.jInternalFrameDetalleFormEstructura.jContentPaneDetalleEstructura.getWidth(),dimension.getHeight());

		this.jInternalFrameDetalleFormEstructura.evaluacionnomiBeanSwingJInternalFrame.jScrollPanelDatosEvaluacionNomi.setMinimumSize(dimension);
		this.jInternalFrameDetalleFormEstructura.evaluacionnomiBeanSwingJInternalFrame.jScrollPanelDatosEvaluacionNomi.setMaximumSize(dimension);
		this.jInternalFrameDetalleFormEstructura.evaluacionnomiBeanSwingJInternalFrame.jScrollPanelDatosEvaluacionNomi.setPreferredSize(dimension);


	}

	public void redimensionarTablaPanelRelacionadaFormatoNomi() {
		Dimension dimension=new Dimension();

		dimension=this.jInternalFrameDetalleFormEstructura.formatonomiBeanSwingJInternalFrame.jScrollPanelDatosFormatoNomi.getPreferredSize();
		dimension.setSize(this.jInternalFrameDetalleFormEstructura.jContentPaneDetalleEstructura.getWidth(),dimension.getHeight());

		this.jInternalFrameDetalleFormEstructura.formatonomiBeanSwingJInternalFrame.jScrollPanelDatosFormatoNomi.setMinimumSize(dimension);
		this.jInternalFrameDetalleFormEstructura.formatonomiBeanSwingJInternalFrame.jScrollPanelDatosFormatoNomi.setMaximumSize(dimension);
		this.jInternalFrameDetalleFormEstructura.formatonomiBeanSwingJInternalFrame.jScrollPanelDatosFormatoNomi.setPreferredSize(dimension);


	}

	public void redimensionarTablaPanelRelacionadaFuncionEstruc() {
		Dimension dimension=new Dimension();

		dimension=this.jInternalFrameDetalleFormEstructura.funcionestrucBeanSwingJInternalFrame.jScrollPanelDatosFuncionEstruc.getPreferredSize();
		dimension.setSize(this.jInternalFrameDetalleFormEstructura.jContentPaneDetalleEstructura.getWidth(),dimension.getHeight());

		this.jInternalFrameDetalleFormEstructura.funcionestrucBeanSwingJInternalFrame.jScrollPanelDatosFuncionEstruc.setMinimumSize(dimension);
		this.jInternalFrameDetalleFormEstructura.funcionestrucBeanSwingJInternalFrame.jScrollPanelDatosFuncionEstruc.setMaximumSize(dimension);
		this.jInternalFrameDetalleFormEstructura.funcionestrucBeanSwingJInternalFrame.jScrollPanelDatosFuncionEstruc.setPreferredSize(dimension);


	}

	public void redimensionarTablaPanelRelacionadaHistorialPagoNomi() {
		Dimension dimension=new Dimension();

		dimension=this.jInternalFrameDetalleFormEstructura.historialpagonomiBeanSwingJInternalFrame.jScrollPanelDatosHistorialPagoNomi.getPreferredSize();
		dimension.setSize(this.jInternalFrameDetalleFormEstructura.jContentPaneDetalleEstructura.getWidth(),dimension.getHeight());

		this.jInternalFrameDetalleFormEstructura.historialpagonomiBeanSwingJInternalFrame.jScrollPanelDatosHistorialPagoNomi.setMinimumSize(dimension);
		this.jInternalFrameDetalleFormEstructura.historialpagonomiBeanSwingJInternalFrame.jScrollPanelDatosHistorialPagoNomi.setMaximumSize(dimension);
		this.jInternalFrameDetalleFormEstructura.historialpagonomiBeanSwingJInternalFrame.jScrollPanelDatosHistorialPagoNomi.setPreferredSize(dimension);


	}

	public void redimensionarTablaPanelRelacionadaPlaniVacacion() {
		Dimension dimension=new Dimension();

		dimension=this.jInternalFrameDetalleFormEstructura.planivacacionBeanSwingJInternalFrame.jScrollPanelDatosPlaniVacacion.getPreferredSize();
		dimension.setSize(this.jInternalFrameDetalleFormEstructura.jContentPaneDetalleEstructura.getWidth(),dimension.getHeight());

		this.jInternalFrameDetalleFormEstructura.planivacacionBeanSwingJInternalFrame.jScrollPanelDatosPlaniVacacion.setMinimumSize(dimension);
		this.jInternalFrameDetalleFormEstructura.planivacacionBeanSwingJInternalFrame.jScrollPanelDatosPlaniVacacion.setMaximumSize(dimension);
		this.jInternalFrameDetalleFormEstructura.planivacacionBeanSwingJInternalFrame.jScrollPanelDatosPlaniVacacion.setPreferredSize(dimension);


	}

	public void redimensionarTablaPanelRelacionadaProvisionEmpleado() {
		Dimension dimension=new Dimension();

		dimension=this.jInternalFrameDetalleFormEstructura.provisionempleadoBeanSwingJInternalFrame.jScrollPanelDatosProvisionEmpleado.getPreferredSize();
		dimension.setSize(this.jInternalFrameDetalleFormEstructura.jContentPaneDetalleEstructura.getWidth(),dimension.getHeight());

		this.jInternalFrameDetalleFormEstructura.provisionempleadoBeanSwingJInternalFrame.jScrollPanelDatosProvisionEmpleado.setMinimumSize(dimension);
		this.jInternalFrameDetalleFormEstructura.provisionempleadoBeanSwingJInternalFrame.jScrollPanelDatosProvisionEmpleado.setMaximumSize(dimension);
		this.jInternalFrameDetalleFormEstructura.provisionempleadoBeanSwingJInternalFrame.jScrollPanelDatosProvisionEmpleado.setPreferredSize(dimension);


	}

	public void redimensionarTablaPanelRelacionadaResponsableActivoFijo() {
		Dimension dimension=new Dimension();

		dimension=this.jInternalFrameDetalleFormEstructura.responsableactivofijoBeanSwingJInternalFrame.jScrollPanelDatosResponsableActivoFijo.getPreferredSize();
		dimension.setSize(this.jInternalFrameDetalleFormEstructura.jContentPaneDetalleEstructura.getWidth(),dimension.getHeight());

		this.jInternalFrameDetalleFormEstructura.responsableactivofijoBeanSwingJInternalFrame.jScrollPanelDatosResponsableActivoFijo.setMinimumSize(dimension);
		this.jInternalFrameDetalleFormEstructura.responsableactivofijoBeanSwingJInternalFrame.jScrollPanelDatosResponsableActivoFijo.setMaximumSize(dimension);
		this.jInternalFrameDetalleFormEstructura.responsableactivofijoBeanSwingJInternalFrame.jScrollPanelDatosResponsableActivoFijo.setPreferredSize(dimension);


	}

	public void redimensionarTablaPanelRelacionadaRubroEmpleaCuentaContable() {
		Dimension dimension=new Dimension();

		dimension=this.jInternalFrameDetalleFormEstructura.rubroempleacuentacontableBeanSwingJInternalFrame.jScrollPanelDatosRubroEmpleaCuentaContable.getPreferredSize();
		dimension.setSize(this.jInternalFrameDetalleFormEstructura.jContentPaneDetalleEstructura.getWidth(),dimension.getHeight());

		this.jInternalFrameDetalleFormEstructura.rubroempleacuentacontableBeanSwingJInternalFrame.jScrollPanelDatosRubroEmpleaCuentaContable.setMinimumSize(dimension);
		this.jInternalFrameDetalleFormEstructura.rubroempleacuentacontableBeanSwingJInternalFrame.jScrollPanelDatosRubroEmpleaCuentaContable.setMaximumSize(dimension);
		this.jInternalFrameDetalleFormEstructura.rubroempleacuentacontableBeanSwingJInternalFrame.jScrollPanelDatosRubroEmpleaCuentaContable.setPreferredSize(dimension);


	}

	public void redimensionarTablaPanelRelacionadaRubroEstructura() {
		Dimension dimension=new Dimension();

		dimension=this.jInternalFrameDetalleFormEstructura.rubroestructuraBeanSwingJInternalFrame.jScrollPanelDatosRubroEstructura.getPreferredSize();
		dimension.setSize(this.jInternalFrameDetalleFormEstructura.jContentPaneDetalleEstructura.getWidth(),dimension.getHeight());

		this.jInternalFrameDetalleFormEstructura.rubroestructuraBeanSwingJInternalFrame.jScrollPanelDatosRubroEstructura.setMinimumSize(dimension);
		this.jInternalFrameDetalleFormEstructura.rubroestructuraBeanSwingJInternalFrame.jScrollPanelDatosRubroEstructura.setMaximumSize(dimension);
		this.jInternalFrameDetalleFormEstructura.rubroestructuraBeanSwingJInternalFrame.jScrollPanelDatosRubroEstructura.setPreferredSize(dimension);


	}

	public void redimensionarTablaPanelRelacionadaSolicitudHoraExtra() {
		Dimension dimension=new Dimension();

		dimension=this.jInternalFrameDetalleFormEstructura.solicitudhoraextraBeanSwingJInternalFrame.jScrollPanelDatosSolicitudHoraExtra.getPreferredSize();
		dimension.setSize(this.jInternalFrameDetalleFormEstructura.jContentPaneDetalleEstructura.getWidth(),dimension.getHeight());

		this.jInternalFrameDetalleFormEstructura.solicitudhoraextraBeanSwingJInternalFrame.jScrollPanelDatosSolicitudHoraExtra.setMinimumSize(dimension);
		this.jInternalFrameDetalleFormEstructura.solicitudhoraextraBeanSwingJInternalFrame.jScrollPanelDatosSolicitudHoraExtra.setMaximumSize(dimension);
		this.jInternalFrameDetalleFormEstructura.solicitudhoraextraBeanSwingJInternalFrame.jScrollPanelDatosSolicitudHoraExtra.setPreferredSize(dimension);


	}

	public void redimensionarTablaPanelRelacionadaSolicitudReemplazo() {
		Dimension dimension=new Dimension();

		dimension=this.jInternalFrameDetalleFormEstructura.solicitudreemplazoBeanSwingJInternalFrame.jScrollPanelDatosSolicitudReemplazo.getPreferredSize();
		dimension.setSize(this.jInternalFrameDetalleFormEstructura.jContentPaneDetalleEstructura.getWidth(),dimension.getHeight());

		this.jInternalFrameDetalleFormEstructura.solicitudreemplazoBeanSwingJInternalFrame.jScrollPanelDatosSolicitudReemplazo.setMinimumSize(dimension);
		this.jInternalFrameDetalleFormEstructura.solicitudreemplazoBeanSwingJInternalFrame.jScrollPanelDatosSolicitudReemplazo.setMaximumSize(dimension);
		this.jInternalFrameDetalleFormEstructura.solicitudreemplazoBeanSwingJInternalFrame.jScrollPanelDatosSolicitudReemplazo.setPreferredSize(dimension);


	}

	public void redimensionarTablaPanelRelacionadaSolicitudVacacion() {
		Dimension dimension=new Dimension();

		dimension=this.jInternalFrameDetalleFormEstructura.solicitudvacacionBeanSwingJInternalFrame.jScrollPanelDatosSolicitudVacacion.getPreferredSize();
		dimension.setSize(this.jInternalFrameDetalleFormEstructura.jContentPaneDetalleEstructura.getWidth(),dimension.getHeight());

		this.jInternalFrameDetalleFormEstructura.solicitudvacacionBeanSwingJInternalFrame.jScrollPanelDatosSolicitudVacacion.setMinimumSize(dimension);
		this.jInternalFrameDetalleFormEstructura.solicitudvacacionBeanSwingJInternalFrame.jScrollPanelDatosSolicitudVacacion.setMaximumSize(dimension);
		this.jInternalFrameDetalleFormEstructura.solicitudvacacionBeanSwingJInternalFrame.jScrollPanelDatosSolicitudVacacion.setPreferredSize(dimension);


	}
					
	public void cerrarFrameDetalleEstructura() throws Exception {	    	        
	    try {
			//this.jDesktopPane.add(jInternalFrameDetalleFormEstructura);
			
	       	this.jInternalFrameDetalleFormEstructura.setVisible(false);
	        this.jInternalFrameDetalleFormEstructura.setSelected(false);
			
			//this.jInternalFrameDetalleFormEstructura.dispose();
			//this.jInternalFrameDetalleFormEstructura=null;
			
	    } catch (final java.beans.PropertyVetoException e) {
		
			FuncionesSwing.manageException(this, e,logger,EstructuraConstantesFunciones.CLASSNAME);
	    }
	}
	
	
	public void abrirFrameReporteDinamicoEstructura() throws Exception {	    	        
	    try {
			
			this.jInternalFrameReporteDinamicoEstructura.setVisible(true);
	        this.jInternalFrameReporteDinamicoEstructura.setSelected(true);			
			
	    } catch (final java.beans.PropertyVetoException e) {
		
			FuncionesSwing.manageException(this, e,logger,EstructuraConstantesFunciones.CLASSNAME);
	    }		
	}
	
	
	
	public void abrirFrameImportacionEstructura() throws Exception {	    	        		
	    try {			
			this.jInternalFrameImportacionEstructura.setVisible(true);
	        this.jInternalFrameImportacionEstructura.setSelected(true);			
			
	    } catch (final java.beans.PropertyVetoException e) {
		
			FuncionesSwing.manageException(this, e,logger,EstructuraConstantesFunciones.CLASSNAME);
	    }		
	}	
	
	
	
	
	
	public void abrirFrameOrderByEstructura() throws Exception {	    	        		
	    try {
			this.jInternalFrameOrderByEstructura.setVisible(true);
	        this.jInternalFrameOrderByEstructura.setSelected(true);			
			
	    } catch (final java.beans.PropertyVetoException e) {
		
			FuncionesSwing.manageException(this, e,logger,EstructuraConstantesFunciones.CLASSNAME);
	    }		
	}
	
	
	
	public void cerrarFrameOrderByEstructura() throws Exception {	    	        		
	    try {			
			this.jInternalFrameOrderByEstructura.setVisible(false);
	        this.jInternalFrameOrderByEstructura.setSelected(false);			
		
	    } catch (final java.beans.PropertyVetoException e) {
		
			FuncionesSwing.manageException(this, e,logger,EstructuraConstantesFunciones.CLASSNAME);
	    }		
	}
	
	
	
	public void cerrarFrameReporteDinamicoEstructura() throws Exception {			
	    try {
			this.jInternalFrameReporteDinamicoEstructura.setVisible(false);
	        this.jInternalFrameReporteDinamicoEstructura.setSelected(false);			
		
	    } catch (final java.beans.PropertyVetoException e) {
		
			FuncionesSwing.manageException(this, e,logger,EstructuraConstantesFunciones.CLASSNAME);
	    }		
	}
	
	
	
	public void cerrarFrameImportacionEstructura() throws Exception {	    	        		
	    try {
			this.jInternalFrameImportacionEstructura.setVisible(false);
	        this.jInternalFrameImportacionEstructura.setSelected(false);
		
	    } catch (final java.beans.PropertyVetoException e) {
		
			FuncionesSwing.manageException(this, e,logger,EstructuraConstantesFunciones.CLASSNAME);
	    }		
	}
	
	
	 public void abrirFrameTreeEstructura(String sTipoProceso) { //throws Exception	    	        
	    try {
			//CAUSA PROBLEMAS, SE ADICIONA EN CONSTRUCTOR, LUEGO SOLO VISIBLE true y false
			//this.jDesktopPane.add(jInternalFrameTreeEstructura);
			
			this.jInternalFrameTreeEstructura.setsTipoProceso(sTipoProceso);
			
			if(sTipoProceso.equals("BUSQUEDA_FK")) {
				this.jInternalFrameTreeEstructura.sTipoBusqueda="Estructura";
			}
			
			this.jInternalFrameTreeEstructura.setEstructuras(this.estructurasArbol);
			this.jInternalFrameTreeEstructura.CargarTreeEstructura();
			
	       	this.jInternalFrameTreeEstructura.setVisible(true);
	        this.jInternalFrameTreeEstructura.setSelected(true);
			
	    } catch (final java.beans.PropertyVetoException e) {
		
			e.getStackTrace();
			//FuncionesSwing.manageException(this, e,logger,EstructuraConstantesFunciones.CLASSNAME);
	    }
	}
	
	public void cerrarFrameTreeEstructura() throws Exception {	    	        
	    try {
			//this.jDesktopPane.add(jInternalFrameTreeEstructura);
			
	       	this.jInternalFrameTreeEstructura.setVisible(false);
	        this.jInternalFrameTreeEstructura.setSelected(false);
			
			//this.jInternalFrameTreeEstructura.dispose();
			//this.jInternalFrameTreeEstructura=null;
			
	    } catch (final java.beans.PropertyVetoException e) {
		
			FuncionesSwing.manageException(this, e,logger,EstructuraConstantesFunciones.CLASSNAME);
	    }
	}
	

				public void abrirFrameTreeCuentaContable(String sTipoProceso) { //throws Exception
					try {
						//CAUSA PROBLEMAS, SE ADICIONA EN CONSTRUCTOR, LUEGO SOLO VISIBLE true y false
						//this.jDesktopPane.add(jInternalFrameTreeCuentaContable);
						CuentaContableBeanSwingJInternalFrame cuentacontableBeanSwingJInternalFrame=new CuentaContableBeanSwingJInternalFrame(true,true,this.jDesktopPane,this.usuarioActual,this.resumenUsuarioActual,this.moduloActual,this.opcionActual,this.parametroGeneralSg,this.parametroGeneralUsuario,PaginaTipo.BUSQUEDA,false,false,false,true);
						cuentacontableBeanSwingJInternalFrame.setJInternalFrameParent(this);
						cuentacontableBeanSwingJInternalFrame.jInternalFrameTreeCuentaContable.setsTipoProceso(sTipoProceso);

						if(sTipoProceso.equals("BUSQUEDA_FK")) {
							cuentacontableBeanSwingJInternalFrame.jInternalFrameTreeCuentaContable.sTipoBusqueda="CuentaContable";
						}

						cuentacontableBeanSwingJInternalFrame.getTodosCuentaContableArbol();
						cuentacontableBeanSwingJInternalFrame.jInternalFrameTreeCuentaContable.setCuentaContables(cuentacontableBeanSwingJInternalFrame.cuentacontablesArbol);
						cuentacontableBeanSwingJInternalFrame.jInternalFrameTreeCuentaContable.CargarTreeCuentaContable();
						cuentacontableBeanSwingJInternalFrame.jInternalFrameTreeCuentaContable.setVisible(true);
						cuentacontableBeanSwingJInternalFrame.jInternalFrameTreeCuentaContable.setSelected(true);

						//SE CAMBIA PARENT ORIGINAL PARA QUE RETORNE EN ESTE FORMULARIO
						cuentacontableBeanSwingJInternalFrame.jInternalFrameTreeCuentaContable.jInternalFrameParent=this;
						TitledBorder titledBorderEstructura=(TitledBorder)this.jScrollPanelDatosEstructura.getBorder();
						TitledBorder titledBorderCuentaContable=(TitledBorder)cuentacontableBeanSwingJInternalFrame.jScrollPanelDatosCuentaContable.getBorder();

						titledBorderCuentaContable.setTitle(titledBorderEstructura.getTitle() + " -> Cuenta Contable");


						if(!Constantes.CON_VARIAS_VENTANAS) {
							MainJFrame.cerrarJInternalFramesExistentes(this.jDesktopPane,cuentacontableBeanSwingJInternalFrame);
						}
						this.jDesktopPane.add(cuentacontableBeanSwingJInternalFrame);

					} catch (Exception e) {
						e.getStackTrace();
						//Funciones<%=getFrameworkDomain()%>.manageException(this, e,logger,<%=GetNombreClaseC(TablaBase.ToString())%>ConstantesFunciones.CLASSNAME);
					}
				}

				public void cerrarFrameTreeCuentaContable(CuentaContableBeanSwingJInternalFrame jInternalFrameTreeCuentaContable) throws Exception {
					try {
						//jDesktopPane.add(jInternalFrameTreeCuentaContable);
						jInternalFrameTreeCuentaContable.setVisible(false);
						jInternalFrameTreeCuentaContable.setSelected(false);
						//jInternalFrameTreeCuentaContable.dispose();
						//jInternalFrameTreeCuentaContable=null;
					} catch (final java.beans.PropertyVetoException e) {
						FuncionesSwing.manageException(this, e,logger);
					}
				}
	
	public void jButtonModificarEstructuraActionPerformed(ActionEvent evt) throws Exception {   
		try {
			this.modificarEstructura(evt,-1,false);
		
		} catch(Exception e) {
			FuncionesSwing.manageException(this, e,logger,EstructuraConstantesFunciones.CLASSNAME);
		}
	}
	
	public void modificarEstructura(ActionEvent evt,int rowIndex,Boolean esRelaciones) throws Exception {   
		try {
			int intSelectedRow = 0;	
			
			if(rowIndex>=0) {
				intSelectedRow=rowIndex;
			} else {
				intSelectedRow = this.jTableDatosEstructura.getSelectedRow();
			}
			
			this.habilitarDeshabilitarControlesEstructura(true);
			//this.isEsNuevoEstructura=false;
			
			//ARCHITECTURE
			if(Constantes.ISUSAEJBLOGICLAYER) {
				this.estructura =(Estructura) this.estructuraLogic.getEstructuras().toArray()[this.jTableDatosEstructura.convertRowIndexToModel(intSelectedRow)];
			} else if(Constantes.ISUSAEJBREMOTE || Constantes.ISUSAEJBHOME ) {
				this.estructura =(Estructura) this.estructuras.toArray()[this.jTableDatosEstructura.convertRowIndexToModel(intSelectedRow)];
			}
			//ARCHITECTURE
			
			this.actualizarEstadoCeldasBotonesEstructura("ae", isGuardarCambiosEnLote, isEsMantenimientoRelacionado);
			
			//NO FUNCIONA BINDINGS
			this.inicializarActualizarBindingBotonesEstructura(false) ;
			
			if(estructuraSessionBean.getConGuardarRelaciones()) {
			

				if(this.jInternalFrameDetalleFormEstructura.centrocostoestructuraBeanSwingJInternalFrame!=null && this.jInternalFrameDetalleFormEstructura.centrocostoestructuraBeanSwingJInternalFrame.centrocostoestructuraSessionBean.getEsGuardarRelacionado() && CentroCostoEstructuraJInternalFrame.ESTA_CARGADO_PORPARTE) {
					this.jButtonCentroCostoEstructuraActionPerformed(null,intSelectedRow,false,true,null);
				}

				if(this.jInternalFrameDetalleFormEstructura.planivacacionBeanSwingJInternalFrame!=null && this.jInternalFrameDetalleFormEstructura.planivacacionBeanSwingJInternalFrame.planivacacionSessionBean.getEsGuardarRelacionado() && PlaniVacacionJInternalFrame.ESTA_CARGADO_PORPARTE) {
					this.jButtonPlaniVacacionActionPerformed(null,intSelectedRow,false,true,null);
				}

				if(this.jInternalFrameDetalleFormEstructura.asistenciamensualBeanSwingJInternalFrame!=null && this.jInternalFrameDetalleFormEstructura.asistenciamensualBeanSwingJInternalFrame.asistenciamensualSessionBean.getEsGuardarRelacionado() && AsistenciaMensualJInternalFrame.ESTA_CARGADO_PORPARTE) {
					this.jButtonAsistenciaMensualActionPerformed(null,intSelectedRow,false,true,null);
				}

				if(this.jInternalFrameDetalleFormEstructura.empleadoprocesorubroBeanSwingJInternalFrame!=null && this.jInternalFrameDetalleFormEstructura.empleadoprocesorubroBeanSwingJInternalFrame.empleadoprocesorubroSessionBean.getEsGuardarRelacionado() && EmpleadoProcesoRubroJInternalFrame.ESTA_CARGADO_PORPARTE) {
					this.jButtonEmpleadoProcesoRubroActionPerformed(null,intSelectedRow,false,true,null);
				}

				if(this.jInternalFrameDetalleFormEstructura.empleadopagorubroBeanSwingJInternalFrame!=null && this.jInternalFrameDetalleFormEstructura.empleadopagorubroBeanSwingJInternalFrame.empleadopagorubroSessionBean.getEsGuardarRelacionado() && EmpleadoPagoRubroJInternalFrame.ESTA_CARGADO_PORPARTE) {
					this.jButtonEmpleadoPagoRubroActionPerformed(null,intSelectedRow,false,true,null);
				}

				if(this.jInternalFrameDetalleFormEstructura.provisionempleadoBeanSwingJInternalFrame!=null && this.jInternalFrameDetalleFormEstructura.provisionempleadoBeanSwingJInternalFrame.provisionempleadoSessionBean.getEsGuardarRelacionado() && ProvisionEmpleadoJInternalFrame.ESTA_CARGADO_PORPARTE) {
					this.jButtonProvisionEmpleadoActionPerformed(null,intSelectedRow,false,true,null);
				}

				if(this.jInternalFrameDetalleFormEstructura.empleadoBeanSwingJInternalFrame!=null && this.jInternalFrameDetalleFormEstructura.empleadoBeanSwingJInternalFrame.empleadoSessionBean.getEsGuardarRelacionado() && EmpleadoJInternalFrame.ESTA_CARGADO_PORPARTE) {
					this.jButtonEmpleadoActionPerformed(null,intSelectedRow,false,true,null);
				}

				if(this.jInternalFrameDetalleFormEstructura.estructuraBeanSwingJInternalFrame!=null && this.jInternalFrameDetalleFormEstructura.estructuraBeanSwingJInternalFrame.estructuraSessionBean.getEsGuardarRelacionado() && EstructuraJInternalFrame.ESTA_CARGADO_PORPARTE) {
					this.jButtonEstructuraActionPerformed(null,intSelectedRow,false,true,null);
				}

				if(this.jInternalFrameDetalleFormEstructura.evaluacionempleadoBeanSwingJInternalFrame!=null && this.jInternalFrameDetalleFormEstructura.evaluacionempleadoBeanSwingJInternalFrame.evaluacionempleadoSessionBean.getEsGuardarRelacionado() && EvaluacionEmpleadoJInternalFrame.ESTA_CARGADO_PORPARTE) {
					this.jButtonEvaluacionEmpleadoActionPerformed(null,intSelectedRow,false,true,null);
				}

				if(this.jInternalFrameDetalleFormEstructura.empleadoimpuestorentaBeanSwingJInternalFrame!=null && this.jInternalFrameDetalleFormEstructura.empleadoimpuestorentaBeanSwingJInternalFrame.empleadoimpuestorentaSessionBean.getEsGuardarRelacionado() && EmpleadoImpuestoRentaJInternalFrame.ESTA_CARGADO_PORPARTE) {
					this.jButtonEmpleadoImpuestoRentaActionPerformed(null,intSelectedRow,false,true,null);
				}

				if(this.jInternalFrameDetalleFormEstructura.rubroestructuraBeanSwingJInternalFrame!=null && this.jInternalFrameDetalleFormEstructura.rubroestructuraBeanSwingJInternalFrame.rubroestructuraSessionBean.getEsGuardarRelacionado() && RubroEstructuraJInternalFrame.ESTA_CARGADO_PORPARTE) {
					this.jButtonRubroEstructuraActionPerformed(null,intSelectedRow,false,true,null);
				}

				if(this.jInternalFrameDetalleFormEstructura.cierrerolmensualBeanSwingJInternalFrame!=null && this.jInternalFrameDetalleFormEstructura.cierrerolmensualBeanSwingJInternalFrame.cierrerolmensualSessionBean.getEsGuardarRelacionado() && CierreRolMensualJInternalFrame.ESTA_CARGADO_PORPARTE) {
					this.jButtonCierreRolMensualActionPerformed(null,intSelectedRow,false,true,null);
				}

				if(this.jInternalFrameDetalleFormEstructura.formatonomiBeanSwingJInternalFrame!=null && this.jInternalFrameDetalleFormEstructura.formatonomiBeanSwingJInternalFrame.formatonomiSessionBean.getEsGuardarRelacionado() && FormatoNomiJInternalFrame.ESTA_CARGADO_PORPARTE) {
					this.jButtonFormatoNomiActionPerformed(null,intSelectedRow,false,true,null);
				}

				if(this.jInternalFrameDetalleFormEstructura.empleadoestructuraBeanSwingJInternalFrame!=null && this.jInternalFrameDetalleFormEstructura.empleadoestructuraBeanSwingJInternalFrame.empleadoestructuraSessionBean.getEsGuardarRelacionado() && EmpleadoEstructuraJInternalFrame.ESTA_CARGADO_PORPARTE) {
					this.jButtonEmpleadoEstructuraActionPerformed(null,intSelectedRow,false,true,null);
				}

				if(this.jInternalFrameDetalleFormEstructura.historialpagonomiBeanSwingJInternalFrame!=null && this.jInternalFrameDetalleFormEstructura.historialpagonomiBeanSwingJInternalFrame.historialpagonomiSessionBean.getEsGuardarRelacionado() && HistorialPagoNomiJInternalFrame.ESTA_CARGADO_PORPARTE) {
					this.jButtonHistorialPagoNomiActionPerformed(null,intSelectedRow,false,true,null);
				}

				if(this.jInternalFrameDetalleFormEstructura.asistenciadiariaBeanSwingJInternalFrame!=null && this.jInternalFrameDetalleFormEstructura.asistenciadiariaBeanSwingJInternalFrame.asistenciadiariaSessionBean.getEsGuardarRelacionado() && AsistenciaDiariaJInternalFrame.ESTA_CARGADO_PORPARTE) {
					this.jButtonAsistenciaDiariaActionPerformed(null,intSelectedRow,false,true,null);
				}

				if(this.jInternalFrameDetalleFormEstructura.funcionestrucBeanSwingJInternalFrame!=null && this.jInternalFrameDetalleFormEstructura.funcionestrucBeanSwingJInternalFrame.funcionestrucSessionBean.getEsGuardarRelacionado() && FuncionEstrucJInternalFrame.ESTA_CARGADO_PORPARTE) {
					this.jButtonFuncionEstrucActionPerformed(null,intSelectedRow,false,true,null);
				}

				if(this.jInternalFrameDetalleFormEstructura.solicitudreemplazoBeanSwingJInternalFrame!=null && this.jInternalFrameDetalleFormEstructura.solicitudreemplazoBeanSwingJInternalFrame.solicitudreemplazoSessionBean.getEsGuardarRelacionado() && SolicitudReemplazoJInternalFrame.ESTA_CARGADO_PORPARTE) {
					this.jButtonSolicitudReemplazoActionPerformed(null,intSelectedRow,false,true,null);
				}

				if(this.jInternalFrameDetalleFormEstructura.solicitudhoraextraBeanSwingJInternalFrame!=null && this.jInternalFrameDetalleFormEstructura.solicitudhoraextraBeanSwingJInternalFrame.solicitudhoraextraSessionBean.getEsGuardarRelacionado() && SolicitudHoraExtraJInternalFrame.ESTA_CARGADO_PORPARTE) {
					this.jButtonSolicitudHoraExtraActionPerformed(null,intSelectedRow,false,true,null);
				}

				if(this.jInternalFrameDetalleFormEstructura.evaluacionnomiBeanSwingJInternalFrame!=null && this.jInternalFrameDetalleFormEstructura.evaluacionnomiBeanSwingJInternalFrame.evaluacionnomiSessionBean.getEsGuardarRelacionado() && EvaluacionNomiJInternalFrame.ESTA_CARGADO_PORPARTE) {
					this.jButtonEvaluacionNomiActionPerformed(null,intSelectedRow,false,true,null);
				}

				if(this.jInternalFrameDetalleFormEstructura.solicitudvacacionBeanSwingJInternalFrame!=null && this.jInternalFrameDetalleFormEstructura.solicitudvacacionBeanSwingJInternalFrame.solicitudvacacionSessionBean.getEsGuardarRelacionado() && SolicitudVacacionJInternalFrame.ESTA_CARGADO_PORPARTE) {
					this.jButtonSolicitudVacacionActionPerformed(null,intSelectedRow,false,true,null);
				}

				if(this.jInternalFrameDetalleFormEstructura.responsableactivofijoBeanSwingJInternalFrame!=null && this.jInternalFrameDetalleFormEstructura.responsableactivofijoBeanSwingJInternalFrame.responsableactivofijoSessionBean.getEsGuardarRelacionado() && ResponsableActivoFijoJInternalFrame.ESTA_CARGADO_PORPARTE) {
					this.jButtonResponsableActivoFijoActionPerformed(null,intSelectedRow,false,true,null);
				}

				if(this.jInternalFrameDetalleFormEstructura.rubroempleacuentacontableBeanSwingJInternalFrame!=null && this.jInternalFrameDetalleFormEstructura.rubroempleacuentacontableBeanSwingJInternalFrame.rubroempleacuentacontableSessionBean.getEsGuardarRelacionado() && RubroEmpleaCuentaContableJInternalFrame.ESTA_CARGADO_PORPARTE) {
					this.jButtonRubroEmpleaCuentaContableActionPerformed(null,intSelectedRow,false,true,null);
				}
			}
			
			if(EstructuraJInternalFrame.CON_DATOS_FRAME) {
				this.abrirFrameDetalleEstructura(esRelaciones);
			}
			
			//SI ES MANUAL
			//this.inicializarActualizarBindingBotonesManualEstructura(false) ;
		
		} catch(Exception e) {
			FuncionesSwing.manageException(this, e,logger,EstructuraConstantesFunciones.CLASSNAME);
		}
	}
	
	public void seleccionarFilaTablaEstructuraActual() { 	  
		try {
			//SELECCIONA FILA A OBJETO ACTUAL
			Integer intSelectedRow = this.jTableDatosEstructura.getSelectedRow();
					
			if(intSelectedRow!=null && intSelectedRow>-1) {
				//ARCHITECTURE
				if(Constantes.ISUSAEJBLOGICLAYER) {
					this.estructura =(Estructura) this.estructuraLogic.getEstructuras().toArray()[this.jTableDatosEstructura.convertRowIndexToModel(intSelectedRow)];
				} else if(Constantes.ISUSAEJBREMOTE || Constantes.ISUSAEJBHOME ) {
					this.estructura =(Estructura) this.estructuras.toArray()[this.jTableDatosEstructura.convertRowIndexToModel(intSelectedRow)];
				}
				//ARCHITECTURE
				
				//System.out.println(this.banco);
			}
			
		} catch(Exception e) {
  			FuncionesSwing.manageException2(this, e,logger,EstructuraConstantesFunciones.CLASSNAME);
  		}
    }	
	
	public void seleccionarEstructura(ActionEvent evt,int rowIndex) throws Exception {   
		try {
			
			if(this.jInternalFrameDetalleFormEstructura==null) { //if(!this.conCargarFormDetalle) {
				this.inicializarFormDetalle();
			}
			
			int intSelectedRow = 0;	
			
			if(rowIndex>=0) {
				intSelectedRow=rowIndex;
			} else {
				intSelectedRow = this.jTableDatosEstructura.getSelectedRow();
			}
			
			//this.habilitarDeshabilitarControlesEstructura(true);
			//this.isEsNuevoEstructura=false;
			
			//ARCHITECTURE
			if(Constantes.ISUSAEJBLOGICLAYER) {
				this.estructura =(Estructura) this.estructuraLogic.getEstructuras().toArray()[this.jTableDatosEstructura.convertRowIndexToModel(intSelectedRow)];
			} else if(Constantes.ISUSAEJBREMOTE || Constantes.ISUSAEJBHOME ) {
				this.estructura =(Estructura) this.estructuras.toArray()[this.jTableDatosEstructura.convertRowIndexToModel(intSelectedRow)];
			}
			//ARCHITECTURE
			
			this.jInternalFrameParent.setIdCombosCodigoDesdeBusquedaForeignKey(this.estructura.getId(),this.sTipoBusqueda);
			
			this.dispose();
			
			//this.actualizarEstadoCeldasBotonesEstructura("ae", isGuardarCambiosEnLote, isEsMantenimientoRelacionado);
			
			//NO FUNCIONA BINDINGS
			/*
			this.inicializarActualizarBindingBotonesEstructura(false) ;
			
			if(EstructuraJInternalFrame.CON_DATOS_FRAME) {
				this.abrirFrameDetalleEstructura(esRelaciones);
			}
			*/
			
			//SI ES MANUAL
			//this.inicializarActualizarBindingBotonesManualEstructura(false) ;
		
		} catch(Exception e) {
			FuncionesSwing.manageException(this, e,logger,EstructuraConstantesFunciones.CLASSNAME);
		}
	}		
	
	public void setIdCombosCodigoDesdeBusquedaForeignKey(Long id,String sType)throws Exception{
		
		try {
			
			if(sType.equals("CuentaContable")) {
				if(!this.estructuraConstantesFunciones.cargarid_cuenta_contableEstructura) {
					this.cargarCombosCuentaContablesForeignKeyLista(" where id="+id);
					//this.inicializarActualizarBindingEstructura(false,false);
					this.cargarCombosFrameCuentaContablesForeignKey("Todos");
				}

				this.setCombosCodigoDesdeBusquedaid_cuenta_contable (id);

				this.recargarComboTablaCuentaContable(this.cuentacontablesForeignKey);

			}
		} catch(Exception e) {
			throw e;
		}
	}
	
			
	
	public void recargarComboTablaEstructura(List<Estructura> estructurasForeignKey)throws Exception{
		TableColumn tableColumnEstructura=this.jTableDatosEstructura.getColumnModel().getColumn(Funciones2.getColumnIndexByName(this.jTableDatosEstructura,EstructuraConstantesFunciones.LABEL_IDESTRUCTURA));
		TableCellEditor tableCellEditorEstructura =tableColumnEstructura.getCellEditor();

		EstructuraTableCell estructuraTableCellFk=(EstructuraTableCell)tableCellEditorEstructura;

		if(estructuraTableCellFk!=null) {
			estructuraTableCellFk.setestructurasForeignKey(estructurasForeignKey);
		}


		//SIEMPRE rowActual<0 , NO USADO POR EL MOMENTO
		//COMBO DE FILA ACTUAL SE ACTUALIZA, LOS DEMAS USAN EL ANTERIOR COMBO
		//int intSelectedRow = -1;
		//intSelectedRow=this.jTableDatosEstructura.getSelectedRow();

		//if(intSelectedRow<=0) {
			//estructuraTableCellFk.setRowActual(intSelectedRow);
			//estructuraTableCellFk.setestructurasForeignKeyActual(estructurasForeignKey);
		//}


		if(estructuraTableCellFk!=null) {
			estructuraTableCellFk.RecargarEstructurasForeignKey();
			//ACTUALIZA COMBOS DE TABLA-FIN
		}

	}	
	
	
	public void recargarComboTablaTipoPago_NM(List<TipoPago_NM> tipopago_nmsForeignKey)throws Exception{
		TableColumn tableColumnTipoPago_NM=this.jTableDatosEstructura.getColumnModel().getColumn(Funciones2.getColumnIndexByName(this.jTableDatosEstructura,EstructuraConstantesFunciones.LABEL_IDTIPOPAGO_NM));
		TableCellEditor tableCellEditorTipoPago_NM =tableColumnTipoPago_NM.getCellEditor();

		TipoPago_NMTableCell tipopago_nmTableCellFk=(TipoPago_NMTableCell)tableCellEditorTipoPago_NM;

		if(tipopago_nmTableCellFk!=null) {
			tipopago_nmTableCellFk.settipopago_nmsForeignKey(tipopago_nmsForeignKey);
		}


		//SIEMPRE rowActual<0 , NO USADO POR EL MOMENTO
		//COMBO DE FILA ACTUAL SE ACTUALIZA, LOS DEMAS USAN EL ANTERIOR COMBO
		//int intSelectedRow = -1;
		//intSelectedRow=this.jTableDatosEstructura.getSelectedRow();

		//if(intSelectedRow<=0) {
			//tipopago_nmTableCellFk.setRowActual(intSelectedRow);
			//tipopago_nmTableCellFk.settipopago_nmsForeignKeyActual(tipopago_nmsForeignKey);
		//}


		if(tipopago_nmTableCellFk!=null) {
			tipopago_nmTableCellFk.RecargarTipoPago_NMsForeignKey();
			//ACTUALIZA COMBOS DE TABLA-FIN
		}

	}	
	
	
	public void recargarComboTablaNumeroPatronal(List<NumeroPatronal> numeropatronalsForeignKey)throws Exception{
		TableColumn tableColumnNumeroPatronal=this.jTableDatosEstructura.getColumnModel().getColumn(Funciones2.getColumnIndexByName(this.jTableDatosEstructura,EstructuraConstantesFunciones.LABEL_IDNUMEROPATRONAL));
		TableCellEditor tableCellEditorNumeroPatronal =tableColumnNumeroPatronal.getCellEditor();

		NumeroPatronalTableCell numeropatronalTableCellFk=(NumeroPatronalTableCell)tableCellEditorNumeroPatronal;

		if(numeropatronalTableCellFk!=null) {
			numeropatronalTableCellFk.setnumeropatronalsForeignKey(numeropatronalsForeignKey);
		}


		//SIEMPRE rowActual<0 , NO USADO POR EL MOMENTO
		//COMBO DE FILA ACTUAL SE ACTUALIZA, LOS DEMAS USAN EL ANTERIOR COMBO
		//int intSelectedRow = -1;
		//intSelectedRow=this.jTableDatosEstructura.getSelectedRow();

		//if(intSelectedRow<=0) {
			//numeropatronalTableCellFk.setRowActual(intSelectedRow);
			//numeropatronalTableCellFk.setnumeropatronalsForeignKeyActual(numeropatronalsForeignKey);
		//}


		if(numeropatronalTableCellFk!=null) {
			numeropatronalTableCellFk.RecargarNumeroPatronalsForeignKey();
			//ACTUALIZA COMBOS DE TABLA-FIN
		}

	}	
	
	
	public void recargarComboTablaCuentaContable(List<CuentaContable> cuentacontablesForeignKey)throws Exception{
		TableColumn tableColumnCuentaContable=this.jTableDatosEstructura.getColumnModel().getColumn(Funciones2.getColumnIndexByName(this.jTableDatosEstructura,EstructuraConstantesFunciones.LABEL_IDCUENTACONTABLE));
		TableCellEditor tableCellEditorCuentaContable =tableColumnCuentaContable.getCellEditor();

		CuentaContableTableCell cuentacontableTableCellFk=(CuentaContableTableCell)tableCellEditorCuentaContable;

		if(cuentacontableTableCellFk!=null) {
			cuentacontableTableCellFk.setcuentacontablesForeignKey(cuentacontablesForeignKey);
		}


		//SIEMPRE rowActual<0 , NO USADO POR EL MOMENTO
		//COMBO DE FILA ACTUAL SE ACTUALIZA, LOS DEMAS USAN EL ANTERIOR COMBO
		//int intSelectedRow = -1;
		//intSelectedRow=this.jTableDatosEstructura.getSelectedRow();

		//if(intSelectedRow<=0) {
			//cuentacontableTableCellFk.setRowActual(intSelectedRow);
			//cuentacontableTableCellFk.setcuentacontablesForeignKeyActual(cuentacontablesForeignKey);
		//}


		if(cuentacontableTableCellFk!=null) {
			cuentacontableTableCellFk.RecargarCuentaContablesForeignKey();
			//ACTUALIZA COMBOS DE TABLA-FIN
		}

	}	
	
	
	public void recargarComboTablaTipoEstructura(List<TipoEstructura> tipoestructurasForeignKey)throws Exception{
		TableColumn tableColumnTipoEstructura=this.jTableDatosEstructura.getColumnModel().getColumn(Funciones2.getColumnIndexByName(this.jTableDatosEstructura,EstructuraConstantesFunciones.LABEL_IDTIPOESTRUCTURA));
		TableCellEditor tableCellEditorTipoEstructura =tableColumnTipoEstructura.getCellEditor();

		TipoEstructuraTableCell tipoestructuraTableCellFk=(TipoEstructuraTableCell)tableCellEditorTipoEstructura;

		if(tipoestructuraTableCellFk!=null) {
			tipoestructuraTableCellFk.settipoestructurasForeignKey(tipoestructurasForeignKey);
		}


		//SIEMPRE rowActual<0 , NO USADO POR EL MOMENTO
		//COMBO DE FILA ACTUAL SE ACTUALIZA, LOS DEMAS USAN EL ANTERIOR COMBO
		//int intSelectedRow = -1;
		//intSelectedRow=this.jTableDatosEstructura.getSelectedRow();

		//if(intSelectedRow<=0) {
			//tipoestructuraTableCellFk.setRowActual(intSelectedRow);
			//tipoestructuraTableCellFk.settipoestructurasForeignKeyActual(tipoestructurasForeignKey);
		//}


		if(tipoestructuraTableCellFk!=null) {
			tipoestructuraTableCellFk.RecargarTipoEstructurasForeignKey();
			//ACTUALIZA COMBOS DE TABLA-FIN
		}

	}	
	
	
	public void recargarComboTablaPais(List<Pais> paissForeignKey)throws Exception{
		TableColumn tableColumnPais=this.jTableDatosEstructura.getColumnModel().getColumn(Funciones2.getColumnIndexByName(this.jTableDatosEstructura,EstructuraConstantesFunciones.LABEL_IDPAIS));
		TableCellEditor tableCellEditorPais =tableColumnPais.getCellEditor();

		PaisTableCell paisTableCellFk=(PaisTableCell)tableCellEditorPais;

		if(paisTableCellFk!=null) {
			paisTableCellFk.setpaissForeignKey(paissForeignKey);
		}


		//SIEMPRE rowActual<0 , NO USADO POR EL MOMENTO
		//COMBO DE FILA ACTUAL SE ACTUALIZA, LOS DEMAS USAN EL ANTERIOR COMBO
		//int intSelectedRow = -1;
		//intSelectedRow=this.jTableDatosEstructura.getSelectedRow();

		//if(intSelectedRow<=0) {
			//paisTableCellFk.setRowActual(intSelectedRow);
			//paisTableCellFk.setpaissForeignKeyActual(paissForeignKey);
		//}


		if(paisTableCellFk!=null) {
			paisTableCellFk.RecargarPaissForeignKey();
			//ACTUALIZA COMBOS DE TABLA-FIN
		}

	}	
	
	
	public void recargarComboTablaCiudad(List<Ciudad> ciudadsForeignKey)throws Exception{
		TableColumn tableColumnCiudad=this.jTableDatosEstructura.getColumnModel().getColumn(Funciones2.getColumnIndexByName(this.jTableDatosEstructura,EstructuraConstantesFunciones.LABEL_IDCIUDAD));
		TableCellEditor tableCellEditorCiudad =tableColumnCiudad.getCellEditor();

		CiudadTableCell ciudadTableCellFk=(CiudadTableCell)tableCellEditorCiudad;

		if(ciudadTableCellFk!=null) {
			ciudadTableCellFk.setciudadsForeignKey(ciudadsForeignKey);
		}


		//SIEMPRE rowActual<0 , NO USADO POR EL MOMENTO
		//COMBO DE FILA ACTUAL SE ACTUALIZA, LOS DEMAS USAN EL ANTERIOR COMBO
		//int intSelectedRow = -1;
		//intSelectedRow=this.jTableDatosEstructura.getSelectedRow();

		//if(intSelectedRow<=0) {
			//ciudadTableCellFk.setRowActual(intSelectedRow);
			//ciudadTableCellFk.setciudadsForeignKeyActual(ciudadsForeignKey);
		//}


		if(ciudadTableCellFk!=null) {
			ciudadTableCellFk.RecargarCiudadsForeignKey();
			//ACTUALIZA COMBOS DE TABLA-FIN
		}

	}	
	
	
	

	public void setCombosCodigoDesdeBusquedaid_cuenta_contable (Long id) throws Exception {
		this.setActualCuentaContableForeignKey(id,true,"Todos");

	};
	
	public void jButtonActualizarEstructuraActionPerformed(ActionEvent evt) throws Exception {   
		try	{
			if(Constantes.ISUSAEJBLOGICLAYER) {
				this.estructuraLogic.getNewConnexionToDeep("");
			}
			
			this.inicializarActualizarBindingParametrosReportesEstructura(false);
			
			//if(!this.isEsNuevoEstructura) {								
				int intSelectedRow = this.jTableDatosEstructura.getSelectedRow();	
				
				//SE PIEDE INDICE SELECTED CON FILA TOTALES, ASEGURARSE QUE OBJETO ACTUAL ESTE EN FORMULARIO
				
				//ARCHITECTURE
				if(Constantes.ISUSAEJBLOGICLAYER) {
					this.estructura =(Estructura) this.estructuraLogic.getEstructuras().toArray()[this.jTableDatosEstructura.convertRowIndexToModel(intSelectedRow)];
				} else if(Constantes.ISUSAEJBREMOTE || Constantes.ISUSAEJBHOME) {
					this.estructura =(Estructura) this.estructuras.toArray()[this.jTableDatosEstructura.convertRowIndexToModel(intSelectedRow)];
				}
				//ARCHITECTURE
				
			//}
				
			if(EstructuraJInternalFrame.ISBINDING_MANUAL_TABLA) {
				this.setVariablesFormularioToObjetoActualEstructura(this.estructura,true);
				this.setVariablesFormularioToObjetoActualForeignKeysEstructura(this.estructura);
				
			}
			
			if(this.permiteMantenimiento(this.estructura)) {	
				this.actualizar();
				
				if(!this.isGuardarCambiosEnLote && !this.estructuraSessionBean.getEsGuardarRelacionado()) {
					this.procesarBusqueda(sAccionBusqueda);
					
					this.isEsNuevoEstructura=true;
					this.inicializarActualizarBindingTablaEstructura(false);
					this.isEsNuevoEstructura=false;
				
				} else {					
					
					//PARA RELACIONADO ACTUALIZAR FILA TOTALES
					this.isEsNuevoEstructura=true;
					this.procesoActualizarFilaTotales(false,"MANTENIMIENTO");
					this.isEsNuevoEstructura=false;
				}
						
								
				//NO FUNCIONA BINDINGS
				this.inicializarActualizarBindingBotonesEstructura(false);
				
				//SI ES MANUAL
				//this.inicializarActualizarBindingBotonesManualEstructura(false);
				
				this.habilitarDeshabilitarControlesEstructura(false);
			
												
				
				if(EstructuraJInternalFrame.CON_DATOS_FRAME) {
					if(!this.isPostAccionSinCerrar) {
						this.cerrarFrameDetalleEstructura();
					}
				}
				
				if(this.isPostAccionNuevo) {
					this.jButtonNuevoEstructuraActionPerformed(evt,estructuraSessionBean.getConGuardarRelaciones());
				} else {
					if(this.isPostAccionSinCerrar) {
						Integer intSelectedRowActual=this.getIndiceActualEstructura(this.estructura,intSelectedRow);
						
						if(intSelectedRow>-1) {
							this.jTableDatosEstructura.setRowSelectionInterval(intSelectedRowActual, intSelectedRowActual);
							this.jButtonIdActionPerformed(evt,intSelectedRowActual,estructuraSessionBean.getConGuardarRelaciones(),false);
						}
					}
				}
				
				this.cancelar(false);
				
			} else {
				JOptionPane.showMessageDialog(this,"ESTE REGISTRO NO PUEDE ACTUALIZARSE","EDITAR",JOptionPane.ERROR_MESSAGE);
			}
			
			if(Constantes.ISUSAEJBLOGICLAYER) {
				this.estructuraLogic.commitNewConnexionToDeep();
			}
			
			
			if(this.jInternalFrameParent!=null) { //&& this.isEsMantenimientoRelacionado) {
				Boolean esUsoDesdeHijoLocal=true;
				String sTipo="Formulario";
				Boolean conIrServidorAplicacionParent=false;
				Long id=this.estructura.getId();
				ArrayList<String> arrClasses=new ArrayList<String>();
				
				GeneralEntityParameterGeneral generalEntityParameterGeneral=new GeneralEntityParameterGeneral();
				
				generalEntityParameterGeneral.setEventoGlobalTipo(EventoGlobalTipo.FORM_HIJO_ACTUALIZAR);
				generalEntityParameterGeneral.setsDominio("Formulario");
				generalEntityParameterGeneral.setsDominioTipo(Estructura.class.getName());
				
				this.jInternalFrameParent.setEventoParentGeneral(esUsoDesdeHijoLocal,"Formulario",Estructura.class.getName(),sTipo,"FORMULARIO",esControlTabla,conIrServidorAplicacionParent,
					id,this, EventoGlobalTipo.FORM_HIJO_ACTUALIZAR,ControlTipo.FORM,EventoTipo.CHANGE,EventoSubTipo.CHANGED,arrClasses,
					evt,generalEntityParameterGeneral,this);
			}
			
		} catch(Exception e) {
			if(Constantes.ISUSAEJBLOGICLAYER) {
				this.estructuraLogic.rollbackNewConnexionToDeep();
			}
			
			FuncionesSwing.manageException(this, e,logger,EstructuraConstantesFunciones.CLASSNAME);
		
		} finally {
			if(Constantes.ISUSAEJBLOGICLAYER) {
				this.estructuraLogic.closeNewConnexionToDeep();
			}
		}
	}
	
	public void jButtonEliminarEstructuraActionPerformed(ActionEvent evt) throws Exception {   
		try	{
			
			if(Constantes.ISUSAEJBLOGICLAYER) {
				this.estructuraLogic.getNewConnexionToDeep("");
			}
			
			int intSelectedRow = this.jTableDatosEstructura.getSelectedRow();	       
							
			//ARCHITECTURE
			if(Constantes.ISUSAEJBLOGICLAYER) {
				this.estructura =(Estructura) this.estructuraLogic.getEstructuras().toArray()[this.jTableDatosEstructura.convertRowIndexToModel(intSelectedRow)];
				this.estructura.setIsDeleted(true);
			} else if(Constantes.ISUSAEJBREMOTE || Constantes.ISUSAEJBHOME ) {
				this.estructura =(Estructura) this.estructuras.toArray()[this.jTableDatosEstructura.convertRowIndexToModel(intSelectedRow)];
				this.estructura.setIsDeleted(true);
			}
			//ARCHITECTURE
			
			if(this.permiteMantenimiento(this.estructura)) {
				this.eliminar();
				
				if(!this.isGuardarCambiosEnLote && !this.estructuraSessionBean.getEsGuardarRelacionado()) {
					this.procesarBusqueda(sAccionBusqueda);
				}
				
				((EstructuraModel) this.jTableDatosEstructura.getModel()).fireTableRowsDeleted(intSelectedRow,intSelectedRow);
				
				this.isEsNuevoEstructura=true;
				this.inicializarActualizarBindingTablaEstructura(false);
				this.isEsNuevoEstructura=false;									
					
				//NO FUNCIONA BINDINGS
				this.inicializarActualizarBindingBotonesEstructura(false);
				
				//SI ES MANUAL
				//this.inicializarActualizarBindingBotonesManualEstructura(false);
				
				this.habilitarDeshabilitarControlesEstructura(false);
				
				
				
				if(EstructuraJInternalFrame.CON_DATOS_FRAME) {
					this.cerrarFrameDetalleEstructura();
				}
			} else {
				JOptionPane.showMessageDialog(this,"ESTE REGISTRO NO PUEDE ACTUALIZARSE","EDITAR",JOptionPane.ERROR_MESSAGE);
			}	
			
			if(Constantes.ISUSAEJBLOGICLAYER) {
				this.estructuraLogic.commitNewConnexionToDeep();
			}
			
		} catch(Exception e) {
			
			if(Constantes.ISUSAEJBLOGICLAYER) {
				this.estructuraLogic.rollbackNewConnexionToDeep();
			}

			FuncionesSwing.manageException(this, e,logger,EstructuraConstantesFunciones.CLASSNAME);
		
		} finally {
			if(Constantes.ISUSAEJBLOGICLAYER) {
				this.estructuraLogic.closeNewConnexionToDeep();
			}
		}		
	}
		
	public void jButtonCancelarEstructuraActionPerformed(ActionEvent evt) throws Exception {                                         	   	       
	  	try {
			if(jTableDatosEstructura.getRowCount()>=1) {
				jTableDatosEstructura.removeRowSelectionInterval(0, jTableDatosEstructura.getRowCount()-1);						
			}
						
			this.invalidValues=new InvalidValue[0];
			this.habilitarDeshabilitarControlesEstructura(false);
			this.cancelar(true);			
			this.inicializarActualizarBindingTablaEstructura(false);
			
			//NO FUNCIONA BINDINGS
			this.inicializarActualizarBindingBotonesEstructura(false) ;
			
			//SI ES MANUAL
			//this.inicializarActualizarBindingBotonesManualEstructura(false) ;
			
			this.isEsNuevoEstructura=false;
			
			if(EstructuraJInternalFrame.CON_DATOS_FRAME) {
				this.cerrarFrameDetalleEstructura();
			}
			
		} catch(Exception e) {
			FuncionesSwing.manageException(this, e,logger,EstructuraConstantesFunciones.CLASSNAME);
		}
	}
	
	public void jButtonGuardarCambiosEstructuraActionPerformed(ActionEvent evt) throws Exception {    		
		try	{
			
			if(Constantes.ISUSAEJBLOGICLAYER) {
				this.estructuraLogic.getNewConnexionToDeep("");
			}
			
			//this.estaModoGuardarCambios=true;
			
	    	this.guardarCambios();
			
			if(!this.isErrorGuardar) {
				this.procesarBusqueda(this.sAccionBusqueda);
				
				//NO FUNCIONA BINDINGS
				this.inicializarActualizarBindingEstructura(false);
				
				//SI ES MANUAL
				if(EstructuraJInternalFrame.ISBINDING_MANUAL) {				
					//this.inicializarActualizarBindingManualEstructura();				
				}
			}
			
			if(Constantes.ISUSAEJBLOGICLAYER) {
				this.estructuraLogic.commitNewConnexionToDeep();
			}
			
		} catch(Exception e) {
			if(Constantes.ISUSAEJBLOGICLAYER) {
				this.estructuraLogic.rollbackNewConnexionToDeep();
			}

			FuncionesSwing.manageException(this, e,logger,EstructuraConstantesFunciones.CLASSNAME);
		
		} finally {
			if(Constantes.ISUSAEJBLOGICLAYER) {
				this.estructuraLogic.closeNewConnexionToDeep();
			}
			
			//this.estaModoGuardarCambios=false;
		}
	}
	
	public void jButtonNuevoGuardarCambiosEstructuraActionPerformed(ActionEvent evt) throws Exception {    		
		try	{
			
			this.estaModoNuevo=true;
			this.estaModoNuevoGuardarCambios=true;
			
			//LO HACE NUEVOPREPARAR
			//this.iIdNuevoEstructura--;			
			//Estructura estructuraAux= new Estructura();			
			//estructuraAux.setId(this.iIdNuevoEstructura);
			
			if(this.jInternalFrameDetalleFormEstructura==null) { //if(!this.conCargarFormDetalle) {
				this.inicializarFormDetalle();
			}
			
			this.aumentarTamanioFilaNuevaTablaEstructura();
			
			if(this.conTotales) {
				this.quitarFilaTotales();
			}
			
			this.nuevoPreparar(true);
			
			this.setVariablesFormularioToObjetoActualForeignKeysEstructura(this.estructura);
			
			this.estructura.setsType("NUEVO_GUARDAR_CAMBIOS");
			
			//LO HACE NUEVOPREPARAR
			/*
			if(Constantes.ISUSAEJBLOGICLAYER) {				
				this.estructuraLogic.getEstructuras().add(this.estructuraAux);
			} else if(Constantes.ISUSAEJBREMOTE||Constantes.ISUSAEJBHOME) {
				this.estructuras.add(this.estructuraAux);				
			}
			*/
			
			this.inicializarActualizarBindingTablaEstructura(false);
			
			this.jTableDatosEstructura.setRowSelectionInterval(this.getIndiceNuevoEstructura(), this.getIndiceNuevoEstructura());
			
			int iLastRow =  this.jTableDatosEstructura.getRowCount () - 1;
			Rectangle rectangle = this.jTableDatosEstructura.getCellRect(iLastRow, 0, true);
			
			this.jTableDatosEstructura.scrollRectToVisible(rectangle);
			
			//FILA TOTALES
			if(this.conTotales) {
				this.crearFilaTotales();
				
				this.inicializarActualizarBindingTablaEstructura(false);
			}

		} catch(Exception e) {									
			FuncionesSwing.manageException(this, e,logger,EstructuraConstantesFunciones.CLASSNAME);
			
		} finally {
			this.estaModoNuevo=false;
			this.estaModoNuevoGuardarCambios=false;
		}
	}		
	
	public void jButtonRecargarInformacionEstructuraActionPerformed(ActionEvent evt) throws Exception {    		
		try {
			this.iNumeroPaginacionPagina=0;
			
			if(Constantes.ISUSAEJBLOGICLAYER) {
				this.estructuraLogic.getNewConnexionToDeep("");
			}
			
			this.inicializarActualizarBindingEstructura(false,false);
			
	    	this.recargarInformacion();
			
			//NO FUNCIONA BINDINGS
			this.inicializarActualizarBindingEstructura(false);
			
			//SI ES MANUAL
			if(EstructuraJInternalFrame.ISBINDING_MANUAL) {
				//this.inicializarActualizarBindingManualEstructura();
			}
			
			//this.abrirFrameTreeEstructura();
			
			if(Constantes.ISUSAEJBLOGICLAYER) {
				this.estructuraLogic.commitNewConnexionToDeep();
			}
			
		} catch(Exception e) {
			if(Constantes.ISUSAEJBLOGICLAYER) {
				this.estructuraLogic.rollbackNewConnexionToDeep();
			}
			
			FuncionesSwing.manageException(this, e,logger,EstructuraConstantesFunciones.CLASSNAME);
		
		} finally {
			if(Constantes.ISUSAEJBLOGICLAYER) {
				this.estructuraLogic.closeNewConnexionToDeep();
			}
		}	
	}
	
	
	public void jButtonGenerarImportacionEstructuraActionPerformed(ActionEvent evt) throws Exception {    				
		BufferedReader bufferedReader = null;
		String sXmlStringFile="";
		String sPath="";
		this.arrDatoGeneralMinimos= new  ArrayList<DatoGeneralMinimo>();
		DatoGeneralMinimo datoGeneralMinimo=new DatoGeneralMinimo();
		String sLine="";
		
		try {			
			if(JOptionPane.showConfirmDialog(this, "ESTA SEGURO DE PROCESAR IMPORTACION DE EstructuraS ?", "MANTENIMIENTO DE Estructura", JOptionPane.OK_CANCEL_OPTION) == 0) {
				bufferedReader = new BufferedReader(new FileReader(this.jInternalFrameImportacionEstructura.getFileImportacion().getAbsolutePath()));
								
				while ((sLine = bufferedReader.readLine()) != null) {
					datoGeneralMinimo=new DatoGeneralMinimo();
					datoGeneralMinimo.setsDescripcion(sLine);
					
					this.arrDatoGeneralMinimos.add(datoGeneralMinimo);
				}
				
				this.actualizarParametrosGeneralEstructura();
						
				//ARCHITECTURE
				if(Constantes.ISUSAEJBLOGICLAYER) {						
					this.estructuraReturnGeneral=estructuraLogic.procesarImportacionEstructurasWithConnection(this.parametroGeneralUsuario,this.moduloActual,this.opcionActual,this.usuarioActual,this.arrDatoGeneralMinimos,this.estructuraParameterGeneral);
						
				} else if(Constantes.ISUSAEJBREMOTE) {
						
				} else if(Constantes.ISUSAEJBHOME) {
				}
				//ARCHITECTURE
						
				this.procesarEstructuraReturnGeneral();
			}
		} catch(Exception e) {
			FuncionesSwing.manageException(this, e,logger,EstructuraConstantesFunciones.CLASSNAME);
		
		} finally {			
			if (bufferedReader != null) {
				bufferedReader.close();
			}	
		}				
	}
	
	
	
	public void jButtonAbrirImportacionEstructuraActionPerformed(ActionEvent evt) throws Exception {    				
		BufferedWriter bufferedWriter = null;
		String sXmlStringFile="";
		String sPath="";
		
		try {
			int iReturnArchivo = this.jInternalFrameImportacionEstructura.getjFileChooserImportacion().showOpenDialog(this);
 
            if (iReturnArchivo == JFileChooser.APPROVE_OPTION) {
            	this.jInternalFrameImportacionEstructura.setFileImportacion(this.jInternalFrameImportacionEstructura.getjFileChooserImportacion().getSelectedFile());
            	
				this.jInternalFrameImportacionEstructura.getjTextFieldPathArchivoImportacion().setText(this.jInternalFrameImportacionEstructura.getFileImportacion().getName());
				
				//System.out.println("ARCHIVO ESCOGIDO: "+this.fileImportacionEstructura.getName());
				
            } else {
                //System.out.println("CANCELAR SELECCION");
				this.jInternalFrameImportacionEstructura.getjTextFieldPathArchivoImportacion().setText("SELECCION CANCELADA");
            }			
		} catch(Exception e) {
			FuncionesSwing.manageException(this, e,logger,EstructuraConstantesFunciones.CLASSNAME);
		
		} finally {			
			if (bufferedWriter != null) {
				bufferedWriter.close();
			}	
		}		
	}
	
	
	public void jButtonGenerarReporteDinamicoEstructuraActionPerformed(ActionEvent evt) throws Exception {    		
		BufferedWriter bufferedWriter = null;
		String sXmlStringFile="";
		String sPath="";
		
		try {	
		
		ArrayList<Estructura> estructurasSeleccionados=new ArrayList<Estructura>();		

		estructurasSeleccionados=this.getEstructurasSeleccionados(true);
		
		
		this.sTipoReporteDinamico=((Reporte)this.jInternalFrameReporteDinamicoEstructura.getjComboBoxTiposReportesDinamico().getSelectedItem()).getsCodigo();
		
		this.sTipoArchivoReporteDinamico=((Reporte)this.jInternalFrameReporteDinamicoEstructura.getjComboBoxTiposArchivosReportesDinamico().getSelectedItem()).getsCodigo();			
		
		
		this.sTipoArchivoReporte=this.sTipoArchivoReporteDinamico;
		
		//this.sTipoReporteExtra="Base";
		
			InputStream reportFile=null;
			InputStream imageFile=null;
			
			imageFile=AuxiliarImagenes.class.getResourceAsStream("LogoReporte.jpg");			
				
		
		
			reportFile = AuxiliarReportes.class.getResourceAsStream("EstructuraBaseDesign.jrxml");	
			
			sPath=this.parametroGeneralUsuario.getpath_exportar()+"EstructuraBaseDesign.jrxml";
			
			sXmlStringFile=Funciones2.getStringFromInputStream(reportFile);
						
			bufferedWriter = new BufferedWriter(new FileWriter(sPath));
			
			
			sXmlStringFile=this.actualizarReporteDinamico(sXmlStringFile);
			
			
			bufferedWriter.write(sXmlStringFile);
			
			bufferedWriter.close();
			
			try{JasperCompileManager.compileReportToFile(sPath);}catch(Exception e){e.printStackTrace();}
			
			this.actualizarVariablesTipoReporte(false,true,false,sPath);
			
			/*
			this.esReporteDinamico=true;
			this.sPathReporteDinamico=sPath.replace(".jrxml",".jasper");
			this.sTipoReporteExtra="";
			*/
			
			this.generarReporteEstructuras("Todos",estructurasSeleccionados );

			if(this.parametroGeneralUsuario.getcon_mensaje_confirmacion() && !this.estructuraSessionBean.getEsGuardarRelacionado()) {//Constantes.ISMOSTRARMENSAJESMANTENIMIENTO && 
				//DEBE APARECER EL REPORTE DIRECTAMENTE
				//JOptionPane.showMessageDialog(this,"GENERADO CORRECTAMENTE:"+sPath,"MANTENIMIENTO DE Estructura",JOptionPane.INFORMATION_MESSAGE);
			}
			
		} catch(Exception e) {
			FuncionesSwing.manageException(this, e,logger,EstructuraConstantesFunciones.CLASSNAME);
		
		} finally {			
			if (bufferedWriter != null) {
				bufferedWriter.close();
			}	
		}
	}		
	
	
	public String actualizarReporteDinamico(String sXmlStringFile) {				
		Reporte reporte=new Reporte();
		Integer iAnchoMaximoVertical=535;//781,782
		Integer iAnchoMaximoHorizontal=782;
		Integer iAnchoSum=0;
		Integer iAnchoColumna=0;
		
		Integer iAnchoMargenes=60;
		String sWidthGrafico="535";
		
		for(int index:this.jInternalFrameReporteDinamicoEstructura.getjListColumnasSelectReporte().getSelectedIndices()) {
			reporte=(Reporte)this.jInternalFrameReporteDinamicoEstructura.getjListColumnasSelectReporte().getModel().getElementAt(index);
			
			switch(reporte.getsCodigo()) {
				
				case EstructuraConstantesFunciones.LABEL_IDEMPRESA:
					iAnchoColumna=100;

					if(iAnchoSum+iAnchoColumna<=iAnchoMaximoHorizontal) {
						sXmlStringFile=sXmlStringFile.replace("<!--col_Empresa_col", "");
						sXmlStringFile=sXmlStringFile.replace("col_Empresa_col-->", "");

						sXmlStringFile=sXmlStringFile.replace("colancho_Empresa_colancho", iAnchoColumna.toString());
						sXmlStringFile=sXmlStringFile.replace("colx_Empresa_colx", iAnchoSum.toString());

						iAnchoSum+=iAnchoColumna;
					}

					break;

				case EstructuraConstantesFunciones.LABEL_IDSUCURSAL:
					iAnchoColumna=100;

					if(iAnchoSum+iAnchoColumna<=iAnchoMaximoHorizontal) {
						sXmlStringFile=sXmlStringFile.replace("<!--col_Sucursal_col", "");
						sXmlStringFile=sXmlStringFile.replace("col_Sucursal_col-->", "");

						sXmlStringFile=sXmlStringFile.replace("colancho_Sucursal_colancho", iAnchoColumna.toString());
						sXmlStringFile=sXmlStringFile.replace("colx_Sucursal_colx", iAnchoSum.toString());

						iAnchoSum+=iAnchoColumna;
					}

					break;

				case EstructuraConstantesFunciones.LABEL_IDESTRUCTURA:
					iAnchoColumna=100;

					if(iAnchoSum+iAnchoColumna<=iAnchoMaximoHorizontal) {
						sXmlStringFile=sXmlStringFile.replace("<!--col_Estructura_col", "");
						sXmlStringFile=sXmlStringFile.replace("col_Estructura_col-->", "");

						sXmlStringFile=sXmlStringFile.replace("colancho_Estructura_colancho", iAnchoColumna.toString());
						sXmlStringFile=sXmlStringFile.replace("colx_Estructura_colx", iAnchoSum.toString());

						iAnchoSum+=iAnchoColumna;
					}

					break;

				case EstructuraConstantesFunciones.LABEL_IDTIPOPAGO_NM:
					iAnchoColumna=100;

					if(iAnchoSum+iAnchoColumna<=iAnchoMaximoHorizontal) {
						sXmlStringFile=sXmlStringFile.replace("<!--col_TipoPago_NM_col", "");
						sXmlStringFile=sXmlStringFile.replace("col_TipoPago_NM_col-->", "");

						sXmlStringFile=sXmlStringFile.replace("colancho_TipoPago_NM_colancho", iAnchoColumna.toString());
						sXmlStringFile=sXmlStringFile.replace("colx_TipoPago_NM_colx", iAnchoSum.toString());

						iAnchoSum+=iAnchoColumna;
					}

					break;

				case EstructuraConstantesFunciones.LABEL_IDNUMEROPATRONAL:
					iAnchoColumna=100;

					if(iAnchoSum+iAnchoColumna<=iAnchoMaximoHorizontal) {
						sXmlStringFile=sXmlStringFile.replace("<!--col_NumeroPatronal_col", "");
						sXmlStringFile=sXmlStringFile.replace("col_NumeroPatronal_col-->", "");

						sXmlStringFile=sXmlStringFile.replace("colancho_NumeroPatronal_colancho", iAnchoColumna.toString());
						sXmlStringFile=sXmlStringFile.replace("colx_NumeroPatronal_colx", iAnchoSum.toString());

						iAnchoSum+=iAnchoColumna;
					}

					break;

				case EstructuraConstantesFunciones.LABEL_IDCUENTACONTABLE:
					iAnchoColumna=100;

					if(iAnchoSum+iAnchoColumna<=iAnchoMaximoHorizontal) {
						sXmlStringFile=sXmlStringFile.replace("<!--col_CuentaContable_col", "");
						sXmlStringFile=sXmlStringFile.replace("col_CuentaContable_col-->", "");

						sXmlStringFile=sXmlStringFile.replace("colancho_CuentaContable_colancho", iAnchoColumna.toString());
						sXmlStringFile=sXmlStringFile.replace("colx_CuentaContable_colx", iAnchoSum.toString());

						iAnchoSum+=iAnchoColumna;
					}

					break;

				case EstructuraConstantesFunciones.LABEL_IDTIPOESTRUCTURA:
					iAnchoColumna=100;

					if(iAnchoSum+iAnchoColumna<=iAnchoMaximoHorizontal) {
						sXmlStringFile=sXmlStringFile.replace("<!--col_TipoEstructura_col", "");
						sXmlStringFile=sXmlStringFile.replace("col_TipoEstructura_col-->", "");

						sXmlStringFile=sXmlStringFile.replace("colancho_TipoEstructura_colancho", iAnchoColumna.toString());
						sXmlStringFile=sXmlStringFile.replace("colx_TipoEstructura_colx", iAnchoSum.toString());

						iAnchoSum+=iAnchoColumna;
					}

					break;

				case EstructuraConstantesFunciones.LABEL_IDPAIS:
					iAnchoColumna=100;

					if(iAnchoSum+iAnchoColumna<=iAnchoMaximoHorizontal) {
						sXmlStringFile=sXmlStringFile.replace("<!--col_Pais_col", "");
						sXmlStringFile=sXmlStringFile.replace("col_Pais_col-->", "");

						sXmlStringFile=sXmlStringFile.replace("colancho_Pais_colancho", iAnchoColumna.toString());
						sXmlStringFile=sXmlStringFile.replace("colx_Pais_colx", iAnchoSum.toString());

						iAnchoSum+=iAnchoColumna;
					}

					break;

				case EstructuraConstantesFunciones.LABEL_IDCIUDAD:
					iAnchoColumna=100;

					if(iAnchoSum+iAnchoColumna<=iAnchoMaximoHorizontal) {
						sXmlStringFile=sXmlStringFile.replace("<!--col_Ciudad_col", "");
						sXmlStringFile=sXmlStringFile.replace("col_Ciudad_col-->", "");

						sXmlStringFile=sXmlStringFile.replace("colancho_Ciudad_colancho", iAnchoColumna.toString());
						sXmlStringFile=sXmlStringFile.replace("colx_Ciudad_colx", iAnchoSum.toString());

						iAnchoSum+=iAnchoColumna;
					}

					break;

				case EstructuraConstantesFunciones.LABEL_CODIGO:
					iAnchoColumna=100;

					if(iAnchoSum+iAnchoColumna<=iAnchoMaximoHorizontal) {
						sXmlStringFile=sXmlStringFile.replace("<!--col_digo_col", "");
						sXmlStringFile=sXmlStringFile.replace("col_digo_col-->", "");

						sXmlStringFile=sXmlStringFile.replace("colancho_digo_colancho", iAnchoColumna.toString());
						sXmlStringFile=sXmlStringFile.replace("colx_digo_colx", iAnchoSum.toString());

						iAnchoSum+=iAnchoColumna;
					}

					break;

				case EstructuraConstantesFunciones.LABEL_NUMERO:
					iAnchoColumna=100;

					if(iAnchoSum+iAnchoColumna<=iAnchoMaximoHorizontal) {
						sXmlStringFile=sXmlStringFile.replace("<!--col_mero_col", "");
						sXmlStringFile=sXmlStringFile.replace("col_mero_col-->", "");

						sXmlStringFile=sXmlStringFile.replace("colancho_mero_colancho", iAnchoColumna.toString());
						sXmlStringFile=sXmlStringFile.replace("colx_mero_colx", iAnchoSum.toString());

						iAnchoSum+=iAnchoColumna;
					}

					break;

				case EstructuraConstantesFunciones.LABEL_VALORANTICIPO:
					iAnchoColumna=50;

					if(iAnchoSum+iAnchoColumna<=iAnchoMaximoHorizontal) {
						sXmlStringFile=sXmlStringFile.replace("<!--col_lorAnticipo_col", "");
						sXmlStringFile=sXmlStringFile.replace("col_lorAnticipo_col-->", "");

						sXmlStringFile=sXmlStringFile.replace("colancho_lorAnticipo_colancho", iAnchoColumna.toString());
						sXmlStringFile=sXmlStringFile.replace("colx_lorAnticipo_colx", iAnchoSum.toString());

						iAnchoSum+=iAnchoColumna;
					}

					break;

				case EstructuraConstantesFunciones.LABEL_PORCENTAJEANTICIPO:
					iAnchoColumna=50;

					if(iAnchoSum+iAnchoColumna<=iAnchoMaximoHorizontal) {
						sXmlStringFile=sXmlStringFile.replace("<!--col_rcentajeAnticipo_col", "");
						sXmlStringFile=sXmlStringFile.replace("col_rcentajeAnticipo_col-->", "");

						sXmlStringFile=sXmlStringFile.replace("colancho_rcentajeAnticipo_colancho", iAnchoColumna.toString());
						sXmlStringFile=sXmlStringFile.replace("colx_rcentajeAnticipo_colx", iAnchoSum.toString());

						iAnchoSum+=iAnchoColumna;
					}

					break;

				case EstructuraConstantesFunciones.LABEL_NOMBRE:
					iAnchoColumna=100;

					if(iAnchoSum+iAnchoColumna<=iAnchoMaximoHorizontal) {
						sXmlStringFile=sXmlStringFile.replace("<!--col_mbre_col", "");
						sXmlStringFile=sXmlStringFile.replace("col_mbre_col-->", "");

						sXmlStringFile=sXmlStringFile.replace("colancho_mbre_colancho", iAnchoColumna.toString());
						sXmlStringFile=sXmlStringFile.replace("colx_mbre_colx", iAnchoSum.toString());

						iAnchoSum+=iAnchoColumna;
					}

					break;

				case EstructuraConstantesFunciones.LABEL_ESJEFE:
					iAnchoColumna=50;

					if(iAnchoSum+iAnchoColumna<=iAnchoMaximoHorizontal) {
						sXmlStringFile=sXmlStringFile.replace("<!--col_Jefe_col", "");
						sXmlStringFile=sXmlStringFile.replace("col_Jefe_col-->", "");

						sXmlStringFile=sXmlStringFile.replace("colancho_Jefe_colancho", iAnchoColumna.toString());
						sXmlStringFile=sXmlStringFile.replace("colx_Jefe_colx", iAnchoSum.toString());

						iAnchoSum+=iAnchoColumna;
					}

					break;

				case EstructuraConstantesFunciones.LABEL_ESANUAL:
					iAnchoColumna=50;

					if(iAnchoSum+iAnchoColumna<=iAnchoMaximoHorizontal) {
						sXmlStringFile=sXmlStringFile.replace("<!--col_Anual_col", "");
						sXmlStringFile=sXmlStringFile.replace("col_Anual_col-->", "");

						sXmlStringFile=sXmlStringFile.replace("colancho_Anual_colancho", iAnchoColumna.toString());
						sXmlStringFile=sXmlStringFile.replace("colx_Anual_colx", iAnchoSum.toString());

						iAnchoSum+=iAnchoColumna;
					}

					break;

				case EstructuraConstantesFunciones.LABEL_PORCENTAJE:
					iAnchoColumna=50;

					if(iAnchoSum+iAnchoColumna<=iAnchoMaximoHorizontal) {
						sXmlStringFile=sXmlStringFile.replace("<!--col_rcentaje_col", "");
						sXmlStringFile=sXmlStringFile.replace("col_rcentaje_col-->", "");

						sXmlStringFile=sXmlStringFile.replace("colancho_rcentaje_colancho", iAnchoColumna.toString());
						sXmlStringFile=sXmlStringFile.replace("colx_rcentaje_colx", iAnchoSum.toString());

						iAnchoSum+=iAnchoColumna;
					}

					break;

				case EstructuraConstantesFunciones.LABEL_VALOR:
					iAnchoColumna=50;

					if(iAnchoSum+iAnchoColumna<=iAnchoMaximoHorizontal) {
						sXmlStringFile=sXmlStringFile.replace("<!--col_lor_col", "");
						sXmlStringFile=sXmlStringFile.replace("col_lor_col-->", "");

						sXmlStringFile=sXmlStringFile.replace("colancho_lor_colancho", iAnchoColumna.toString());
						sXmlStringFile=sXmlStringFile.replace("colx_lor_colx", iAnchoSum.toString());

						iAnchoSum+=iAnchoColumna;
					}

					break;
					
				default :
					break;
			}
		}
		
		iAnchoSum+=iAnchoMargenes;
		
		if(iAnchoSum>iAnchoMaximoVertical) {
			sXmlStringFile=sXmlStringFile.replace("595", "842");
			//sXmlStringFile=sXmlStringFile.replace("842", "595");
			sXmlStringFile=sXmlStringFile.replace("535", "782");
			sXmlStringFile=sXmlStringFile.replace("Portrait", "Landscape");			
			sWidthGrafico="782";
		
		} else {
			sXmlStringFile=sXmlStringFile.replace("842", "595");
			//sXmlStringFile=sXmlStringFile.replace("595", "842");
			sXmlStringFile=sXmlStringFile.replace("782", "535");
			sXmlStringFile=sXmlStringFile.replace("Landscape", "Portrait");
			sWidthGrafico="535";
		}
		
		if(this.jInternalFrameReporteDinamicoEstructura.getjCheckBoxConGraficoDinamico().isSelected()) {
			sXmlStringFile=this.actualizarGraficoReporteDinamico(sXmlStringFile,sWidthGrafico);
		} else {
			sXmlStringFile=sXmlStringFile.replace("colancho_summary_colancho", "30");
		}
		
		return sXmlStringFile;
	}
	
	
	
	public String actualizarGraficoReporteDinamico(String sXmlStringFile,String sWidthGrafico) {		
		String strGrafico="";		
		String sTipo="NORMAL";
		String strCategorySeries="";
		String sNombreCampoCategoria="";
		String sNombreCampoCategoriaValor="";
		Reporte reporte=new Reporte();
		Reporte reporteCategoriaValor=new Reporte();
		Reporte reporteTipoGraficoReporte=new Reporte();
		Boolean existe=false;
		
		sXmlStringFile=sXmlStringFile.replace("colancho_summary_colancho", "280");
		
		//CATEGORIA GRAFICO				
		reporte=((Reporte)this.jInternalFrameReporteDinamicoEstructura.getjComboBoxColumnaCategoriaGrafico().getSelectedItem());
				
		//TIPO GRAFICO REPORTE
		reporteTipoGraficoReporte=((Reporte)this.jInternalFrameReporteDinamicoEstructura.getjComboBoxTiposGraficosReportesDinamico().getSelectedItem());
		
		String sTipoGraficoReporte=reporteTipoGraficoReporte.getsCodigo();
		
		switch(reporte.getsCodigo()) {
			
				case EstructuraConstantesFunciones.LABEL_IDEMPRESA:
					sNombreCampoCategoria="id_empresa";
					break;

				case EstructuraConstantesFunciones.LABEL_IDSUCURSAL:
					sNombreCampoCategoria="id_sucursal";
					break;

				case EstructuraConstantesFunciones.LABEL_IDESTRUCTURA:
					sNombreCampoCategoria="id_estructura";
					break;

				case EstructuraConstantesFunciones.LABEL_IDTIPOPAGO_NM:
					sNombreCampoCategoria="id_tipo_pago__n_m";
					break;

				case EstructuraConstantesFunciones.LABEL_IDNUMEROPATRONAL:
					sNombreCampoCategoria="id_numero_patronal";
					break;

				case EstructuraConstantesFunciones.LABEL_IDCUENTACONTABLE:
					sNombreCampoCategoria="id_cuenta_contable";
					break;

				case EstructuraConstantesFunciones.LABEL_IDTIPOESTRUCTURA:
					sNombreCampoCategoria="id_tipo_estructura";
					break;

				case EstructuraConstantesFunciones.LABEL_IDPAIS:
					sNombreCampoCategoria="id_pais";
					break;

				case EstructuraConstantesFunciones.LABEL_IDCIUDAD:
					sNombreCampoCategoria="id_ciudad";
					break;

				case EstructuraConstantesFunciones.LABEL_CODIGO:
					sNombreCampoCategoria="codigo";
					break;

				case EstructuraConstantesFunciones.LABEL_NUMERO:
					sNombreCampoCategoria="numero";
					break;

				case EstructuraConstantesFunciones.LABEL_VALORANTICIPO:
					sNombreCampoCategoria="valor_anticipo";
					break;

				case EstructuraConstantesFunciones.LABEL_PORCENTAJEANTICIPO:
					sNombreCampoCategoria="porcentaje_anticipo";
					break;

				case EstructuraConstantesFunciones.LABEL_NOMBRE:
					sNombreCampoCategoria="nombre";
					break;

				case EstructuraConstantesFunciones.LABEL_ESJEFE:
					sNombreCampoCategoria="es_jefe";
					break;

				case EstructuraConstantesFunciones.LABEL_ESANUAL:
					sNombreCampoCategoria="es_anual";
					break;

				case EstructuraConstantesFunciones.LABEL_PORCENTAJE:
					sNombreCampoCategoria="porcentaje";
					break;

				case EstructuraConstantesFunciones.LABEL_VALOR:
					sNombreCampoCategoria="valor";
					break;
					
			default :
				break;
		}		
		//CATEGORIA GRAFICO
		
		//CATEGORIA VALOR				
		reporteCategoriaValor=((Reporte)this.jInternalFrameReporteDinamicoEstructura.getjComboBoxColumnaCategoriaValor().getSelectedItem());
		
		switch(reporteCategoriaValor.getsCodigo()) {
			
				case EstructuraConstantesFunciones.LABEL_IDEMPRESA:
					sNombreCampoCategoriaValor="id_empresa";
					break;

				case EstructuraConstantesFunciones.LABEL_IDSUCURSAL:
					sNombreCampoCategoriaValor="id_sucursal";
					break;

				case EstructuraConstantesFunciones.LABEL_IDESTRUCTURA:
					sNombreCampoCategoriaValor="id_estructura";
					break;

				case EstructuraConstantesFunciones.LABEL_IDTIPOPAGO_NM:
					sNombreCampoCategoriaValor="id_tipo_pago__n_m";
					break;

				case EstructuraConstantesFunciones.LABEL_IDNUMEROPATRONAL:
					sNombreCampoCategoriaValor="id_numero_patronal";
					break;

				case EstructuraConstantesFunciones.LABEL_IDCUENTACONTABLE:
					sNombreCampoCategoriaValor="id_cuenta_contable";
					break;

				case EstructuraConstantesFunciones.LABEL_IDTIPOESTRUCTURA:
					sNombreCampoCategoriaValor="id_tipo_estructura";
					break;

				case EstructuraConstantesFunciones.LABEL_IDPAIS:
					sNombreCampoCategoriaValor="id_pais";
					break;

				case EstructuraConstantesFunciones.LABEL_IDCIUDAD:
					sNombreCampoCategoriaValor="id_ciudad";
					break;

				case EstructuraConstantesFunciones.LABEL_CODIGO:
					sNombreCampoCategoriaValor="codigo";
					break;

				case EstructuraConstantesFunciones.LABEL_NUMERO:
					sNombreCampoCategoriaValor="numero";
					break;

				case EstructuraConstantesFunciones.LABEL_VALORANTICIPO:
					sNombreCampoCategoriaValor="valor_anticipo";
					break;

				case EstructuraConstantesFunciones.LABEL_PORCENTAJEANTICIPO:
					sNombreCampoCategoriaValor="porcentaje_anticipo";
					break;

				case EstructuraConstantesFunciones.LABEL_NOMBRE:
					sNombreCampoCategoriaValor="nombre";
					break;

				case EstructuraConstantesFunciones.LABEL_ESJEFE:
					sNombreCampoCategoriaValor="es_jefe";
					break;

				case EstructuraConstantesFunciones.LABEL_ESANUAL:
					sNombreCampoCategoriaValor="es_anual";
					break;

				case EstructuraConstantesFunciones.LABEL_PORCENTAJE:
					sNombreCampoCategoriaValor="porcentaje";
					break;

				case EstructuraConstantesFunciones.LABEL_VALOR:
					sNombreCampoCategoriaValor="valor";
					break;
					
			default :
				break;
		}	
		//CATEGORIA VALOR
		
		//VALORES GRAFICO
		for(int index:this.jInternalFrameReporteDinamicoEstructura.getjListColumnasValoresGrafico().getSelectedIndices()) {
			reporte=(Reporte)this.jInternalFrameReporteDinamicoEstructura.getjListColumnasValoresGrafico().getModel().getElementAt(index);
			
			switch(reporte.getsCodigo()) {
				
				case EstructuraConstantesFunciones.LABEL_IDEMPRESA:
					strCategorySeries+=FuncionesReporte.getStringCategoryGraficoNormalReporte(sTipoGraficoReporte,"Empresa",sNombreCampoCategoria,sNombreCampoCategoriaValor,"id_empresa");
					break;

				case EstructuraConstantesFunciones.LABEL_IDSUCURSAL:
					strCategorySeries+=FuncionesReporte.getStringCategoryGraficoNormalReporte(sTipoGraficoReporte,"Sucursal",sNombreCampoCategoria,sNombreCampoCategoriaValor,"id_sucursal");
					break;

				case EstructuraConstantesFunciones.LABEL_IDESTRUCTURA:
					strCategorySeries+=FuncionesReporte.getStringCategoryGraficoNormalReporte(sTipoGraficoReporte,"Estructura Padre",sNombreCampoCategoria,sNombreCampoCategoriaValor,"id_estructura");
					break;

				case EstructuraConstantesFunciones.LABEL_IDTIPOPAGO_NM:
					strCategorySeries+=FuncionesReporte.getStringCategoryGraficoNormalReporte(sTipoGraficoReporte,"Tipo Pago_ N M",sNombreCampoCategoria,sNombreCampoCategoriaValor,"id_tipo_pago__n_m");
					break;

				case EstructuraConstantesFunciones.LABEL_IDNUMEROPATRONAL:
					strCategorySeries+=FuncionesReporte.getStringCategoryGraficoNormalReporte(sTipoGraficoReporte,"Numero Patronal",sNombreCampoCategoria,sNombreCampoCategoriaValor,"id_numero_patronal");
					break;

				case EstructuraConstantesFunciones.LABEL_IDCUENTACONTABLE:
					strCategorySeries+=FuncionesReporte.getStringCategoryGraficoNormalReporte(sTipoGraficoReporte,"Cuenta Contable",sNombreCampoCategoria,sNombreCampoCategoriaValor,"id_cuenta_contable");
					break;

				case EstructuraConstantesFunciones.LABEL_IDTIPOESTRUCTURA:
					strCategorySeries+=FuncionesReporte.getStringCategoryGraficoNormalReporte(sTipoGraficoReporte,"Tipo Estructura",sNombreCampoCategoria,sNombreCampoCategoriaValor,"id_tipo_estructura");
					break;

				case EstructuraConstantesFunciones.LABEL_IDPAIS:
					strCategorySeries+=FuncionesReporte.getStringCategoryGraficoNormalReporte(sTipoGraficoReporte,"Pais",sNombreCampoCategoria,sNombreCampoCategoriaValor,"id_pais");
					break;

				case EstructuraConstantesFunciones.LABEL_IDCIUDAD:
					strCategorySeries+=FuncionesReporte.getStringCategoryGraficoNormalReporte(sTipoGraficoReporte,"Ciudad",sNombreCampoCategoria,sNombreCampoCategoriaValor,"id_ciudad");
					break;

				case EstructuraConstantesFunciones.LABEL_CODIGO:
					strCategorySeries+=FuncionesReporte.getStringCategoryGraficoNormalReporte(sTipoGraficoReporte,"Codigo",sNombreCampoCategoria,sNombreCampoCategoriaValor,"codigo");
					break;

				case EstructuraConstantesFunciones.LABEL_NUMERO:
					strCategorySeries+=FuncionesReporte.getStringCategoryGraficoNormalReporte(sTipoGraficoReporte,"Numero",sNombreCampoCategoria,sNombreCampoCategoriaValor,"numero");
					break;

				case EstructuraConstantesFunciones.LABEL_VALORANTICIPO:
					strCategorySeries+=FuncionesReporte.getStringCategoryGraficoNormalReporte(sTipoGraficoReporte,"Valor Anticipo",sNombreCampoCategoria,sNombreCampoCategoriaValor,"valor_anticipo");
					break;

				case EstructuraConstantesFunciones.LABEL_PORCENTAJEANTICIPO:
					strCategorySeries+=FuncionesReporte.getStringCategoryGraficoNormalReporte(sTipoGraficoReporte,"Porcentaje Anticipo",sNombreCampoCategoria,sNombreCampoCategoriaValor,"porcentaje_anticipo");
					break;

				case EstructuraConstantesFunciones.LABEL_NOMBRE:
					strCategorySeries+=FuncionesReporte.getStringCategoryGraficoNormalReporte(sTipoGraficoReporte,"Nombre",sNombreCampoCategoria,sNombreCampoCategoriaValor,"nombre");
					break;

				case EstructuraConstantesFunciones.LABEL_ESJEFE:
					strCategorySeries+=FuncionesReporte.getStringCategoryGraficoNormalReporte(sTipoGraficoReporte,"Es Jefe",sNombreCampoCategoria,sNombreCampoCategoriaValor,"es_jefe");
					break;

				case EstructuraConstantesFunciones.LABEL_ESANUAL:
					strCategorySeries+=FuncionesReporte.getStringCategoryGraficoNormalReporte(sTipoGraficoReporte,"Es Anual Exacto",sNombreCampoCategoria,sNombreCampoCategoriaValor,"es_anual");
					break;

				case EstructuraConstantesFunciones.LABEL_PORCENTAJE:
					strCategorySeries+=FuncionesReporte.getStringCategoryGraficoNormalReporte(sTipoGraficoReporte,"Porcentaje",sNombreCampoCategoria,sNombreCampoCategoriaValor,"porcentaje");
					break;

				case EstructuraConstantesFunciones.LABEL_VALOR:
					strCategorySeries+=FuncionesReporte.getStringCategoryGraficoNormalReporte(sTipoGraficoReporte,"Valor",sNombreCampoCategoria,sNombreCampoCategoriaValor,"valor");
					break;
					
				default :
					break;
			}
		}
		//VALORES GRAFICO
		//if(sTipoGraficoReporte.equals("BARRAS") || sTipoGraficoReporte.equals("BARRAS_3D") || sTipoGraficoReporte.equals("BARRAS_XY") ||
		//   sTipoGraficoReporte.equals("PASTEL") || sTipoGraficoReporte.equals("PASTEL_3D") || sTipoGraficoReporte.equals("APILADO")) {
			
			existe=true;
			strGrafico=FuncionesReporte.getStringGraficoReporte(sTipoGraficoReporte,sWidthGrafico,strCategorySeries);			
		//}
		
		if(existe) {
			sXmlStringFile=sXmlStringFile.replace("<!--GRAFICO-->", strGrafico);
		}												
		
		return sXmlStringFile;
	}
	
	
	//@SuppressWarnings("deprecation")
	
	public void jButtonGenerarExcelReporteDinamicoEstructuraActionPerformed(ActionEvent evt) throws Exception {		
		ArrayList<Estructura> estructurasSeleccionados=new ArrayList<Estructura>();		
		
		estructurasSeleccionados=this.getEstructurasSeleccionados(true);
		
		String sTipo=Funciones2.getTipoExportar(this.parametroGeneralUsuario);
		Boolean conCabecera=this.parametroGeneralUsuario.getcon_exportar_cabecera();
		String sDelimiter=Funciones2.getTipoDelimiter(this.parametroGeneralUsuario);
		String sPath=this.parametroGeneralUsuario.getpath_exportar()+"estructura";//.xls";
		
		String sFilaCabecera="";
		String sFilaDatos="";
		
		Boolean existeFilas=false;
		
		Workbook workbook = null;
		FileOutputStream fileOutputStream=null;
		Reporte reporte=new Reporte();
		
		try {
			
			if(sTipoArchivoReporte=="EXCEL2") {
				workbook = new HSSFWorkbook();
				sPath+=".xls";
			
			} else if(sTipoArchivoReporte=="EXCEL2_2") {
				workbook = new XSSFWorkbook();
				sPath+=".xlsx";			
			}
		
			Sheet sheet = workbook.createSheet("Estructuras");
						
		    			
			Integer iRow=0;
			Integer iCell=0;
			
			Row row = sheet.createRow(iRow);
			Cell cell = row.createCell(iCell);
			//cell.setCellValue("Blahblah");
			
			for(int index:this.jInternalFrameReporteDinamicoEstructura.getjListColumnasSelectReporte().getSelectedIndices()) {
				reporte=(Reporte)this.jInternalFrameReporteDinamicoEstructura.getjListColumnasSelectReporte().getModel().getElementAt(index);
				
				switch(reporte.getsCodigo()) {
					
				case EstructuraConstantesFunciones.LABEL_IDEMPRESA:
					iRow=0;

					if(!existeFilas) {row = sheet.createRow(iRow);} else {row=sheet.getRow(iRow);}

					cell = row.createCell(iCell);
					cell.setCellValue(EstructuraConstantesFunciones.LABEL_IDEMPRESA);
					iRow++;

					for(Estructura estructura:estructurasSeleccionados) {
						if(!existeFilas) {row = sheet.createRow(iRow);} else {row=sheet.getRow(iRow);}

						cell = row.createCell(iCell);
						cell.setCellValue(estructura.getempresa_descripcion());
						iRow++;
					}

					existeFilas=true;
					iCell++;
					break;

				case EstructuraConstantesFunciones.LABEL_IDSUCURSAL:
					iRow=0;

					if(!existeFilas) {row = sheet.createRow(iRow);} else {row=sheet.getRow(iRow);}

					cell = row.createCell(iCell);
					cell.setCellValue(EstructuraConstantesFunciones.LABEL_IDSUCURSAL);
					iRow++;

					for(Estructura estructura:estructurasSeleccionados) {
						if(!existeFilas) {row = sheet.createRow(iRow);} else {row=sheet.getRow(iRow);}

						cell = row.createCell(iCell);
						cell.setCellValue(estructura.getsucursal_descripcion());
						iRow++;
					}

					existeFilas=true;
					iCell++;
					break;

				case EstructuraConstantesFunciones.LABEL_IDESTRUCTURA:
					iRow=0;

					if(!existeFilas) {row = sheet.createRow(iRow);} else {row=sheet.getRow(iRow);}

					cell = row.createCell(iCell);
					cell.setCellValue(EstructuraConstantesFunciones.LABEL_IDESTRUCTURA);
					iRow++;

					for(Estructura estructura:estructurasSeleccionados) {
						if(!existeFilas) {row = sheet.createRow(iRow);} else {row=sheet.getRow(iRow);}

						cell = row.createCell(iCell);
						cell.setCellValue(estructura.getestructura_descripcion());
						iRow++;
					}

					existeFilas=true;
					iCell++;
					break;

				case EstructuraConstantesFunciones.LABEL_IDTIPOPAGO_NM:
					iRow=0;

					if(!existeFilas) {row = sheet.createRow(iRow);} else {row=sheet.getRow(iRow);}

					cell = row.createCell(iCell);
					cell.setCellValue(EstructuraConstantesFunciones.LABEL_IDTIPOPAGO_NM);
					iRow++;

					for(Estructura estructura:estructurasSeleccionados) {
						if(!existeFilas) {row = sheet.createRow(iRow);} else {row=sheet.getRow(iRow);}

						cell = row.createCell(iCell);
						cell.setCellValue(estructura.gettipopago_nm_descripcion());
						iRow++;
					}

					existeFilas=true;
					iCell++;
					break;

				case EstructuraConstantesFunciones.LABEL_IDNUMEROPATRONAL:
					iRow=0;

					if(!existeFilas) {row = sheet.createRow(iRow);} else {row=sheet.getRow(iRow);}

					cell = row.createCell(iCell);
					cell.setCellValue(EstructuraConstantesFunciones.LABEL_IDNUMEROPATRONAL);
					iRow++;

					for(Estructura estructura:estructurasSeleccionados) {
						if(!existeFilas) {row = sheet.createRow(iRow);} else {row=sheet.getRow(iRow);}

						cell = row.createCell(iCell);
						cell.setCellValue(estructura.getnumeropatronal_descripcion());
						iRow++;
					}

					existeFilas=true;
					iCell++;
					break;

				case EstructuraConstantesFunciones.LABEL_IDCUENTACONTABLE:
					iRow=0;

					if(!existeFilas) {row = sheet.createRow(iRow);} else {row=sheet.getRow(iRow);}

					cell = row.createCell(iCell);
					cell.setCellValue(EstructuraConstantesFunciones.LABEL_IDCUENTACONTABLE);
					iRow++;

					for(Estructura estructura:estructurasSeleccionados) {
						if(!existeFilas) {row = sheet.createRow(iRow);} else {row=sheet.getRow(iRow);}

						cell = row.createCell(iCell);
						cell.setCellValue(estructura.getcuentacontable_descripcion());
						iRow++;
					}

					existeFilas=true;
					iCell++;
					break;

				case EstructuraConstantesFunciones.LABEL_IDTIPOESTRUCTURA:
					iRow=0;

					if(!existeFilas) {row = sheet.createRow(iRow);} else {row=sheet.getRow(iRow);}

					cell = row.createCell(iCell);
					cell.setCellValue(EstructuraConstantesFunciones.LABEL_IDTIPOESTRUCTURA);
					iRow++;

					for(Estructura estructura:estructurasSeleccionados) {
						if(!existeFilas) {row = sheet.createRow(iRow);} else {row=sheet.getRow(iRow);}

						cell = row.createCell(iCell);
						cell.setCellValue(estructura.gettipoestructura_descripcion());
						iRow++;
					}

					existeFilas=true;
					iCell++;
					break;

				case EstructuraConstantesFunciones.LABEL_IDPAIS:
					iRow=0;

					if(!existeFilas) {row = sheet.createRow(iRow);} else {row=sheet.getRow(iRow);}

					cell = row.createCell(iCell);
					cell.setCellValue(EstructuraConstantesFunciones.LABEL_IDPAIS);
					iRow++;

					for(Estructura estructura:estructurasSeleccionados) {
						if(!existeFilas) {row = sheet.createRow(iRow);} else {row=sheet.getRow(iRow);}

						cell = row.createCell(iCell);
						cell.setCellValue(estructura.getpais_descripcion());
						iRow++;
					}

					existeFilas=true;
					iCell++;
					break;

				case EstructuraConstantesFunciones.LABEL_IDCIUDAD:
					iRow=0;

					if(!existeFilas) {row = sheet.createRow(iRow);} else {row=sheet.getRow(iRow);}

					cell = row.createCell(iCell);
					cell.setCellValue(EstructuraConstantesFunciones.LABEL_IDCIUDAD);
					iRow++;

					for(Estructura estructura:estructurasSeleccionados) {
						if(!existeFilas) {row = sheet.createRow(iRow);} else {row=sheet.getRow(iRow);}

						cell = row.createCell(iCell);
						cell.setCellValue(estructura.getciudad_descripcion());
						iRow++;
					}

					existeFilas=true;
					iCell++;
					break;

				case EstructuraConstantesFunciones.LABEL_CODIGO:
					iRow=0;

					if(!existeFilas) {row = sheet.createRow(iRow);} else {row=sheet.getRow(iRow);}

					cell = row.createCell(iCell);
					cell.setCellValue(EstructuraConstantesFunciones.LABEL_CODIGO);
					iRow++;

					for(Estructura estructura:estructurasSeleccionados) {
						if(!existeFilas) {row = sheet.createRow(iRow);} else {row=sheet.getRow(iRow);}

						cell = row.createCell(iCell);
						cell.setCellValue(estructura.getcodigo());
						iRow++;
					}

					existeFilas=true;
					iCell++;
					break;

				case EstructuraConstantesFunciones.LABEL_NUMERO:
					iRow=0;

					if(!existeFilas) {row = sheet.createRow(iRow);} else {row=sheet.getRow(iRow);}

					cell = row.createCell(iCell);
					cell.setCellValue(EstructuraConstantesFunciones.LABEL_NUMERO);
					iRow++;

					for(Estructura estructura:estructurasSeleccionados) {
						if(!existeFilas) {row = sheet.createRow(iRow);} else {row=sheet.getRow(iRow);}

						cell = row.createCell(iCell);
						cell.setCellValue(estructura.getnumero());
						iRow++;
					}

					existeFilas=true;
					iCell++;
					break;

				case EstructuraConstantesFunciones.LABEL_VALORANTICIPO:
					iRow=0;

					if(!existeFilas) {row = sheet.createRow(iRow);} else {row=sheet.getRow(iRow);}

					cell = row.createCell(iCell);
					cell.setCellValue(EstructuraConstantesFunciones.LABEL_VALORANTICIPO);
					iRow++;

					for(Estructura estructura:estructurasSeleccionados) {
						if(!existeFilas) {row = sheet.createRow(iRow);} else {row=sheet.getRow(iRow);}

						cell = row.createCell(iCell);
						cell.setCellValue(estructura.getvalor_anticipo());
						iRow++;
					}

					existeFilas=true;
					iCell++;
					break;

				case EstructuraConstantesFunciones.LABEL_PORCENTAJEANTICIPO:
					iRow=0;

					if(!existeFilas) {row = sheet.createRow(iRow);} else {row=sheet.getRow(iRow);}

					cell = row.createCell(iCell);
					cell.setCellValue(EstructuraConstantesFunciones.LABEL_PORCENTAJEANTICIPO);
					iRow++;

					for(Estructura estructura:estructurasSeleccionados) {
						if(!existeFilas) {row = sheet.createRow(iRow);} else {row=sheet.getRow(iRow);}

						cell = row.createCell(iCell);
						cell.setCellValue(estructura.getporcentaje_anticipo());
						iRow++;
					}

					existeFilas=true;
					iCell++;
					break;

				case EstructuraConstantesFunciones.LABEL_NOMBRE:
					iRow=0;

					if(!existeFilas) {row = sheet.createRow(iRow);} else {row=sheet.getRow(iRow);}

					cell = row.createCell(iCell);
					cell.setCellValue(EstructuraConstantesFunciones.LABEL_NOMBRE);
					iRow++;

					for(Estructura estructura:estructurasSeleccionados) {
						if(!existeFilas) {row = sheet.createRow(iRow);} else {row=sheet.getRow(iRow);}

						cell = row.createCell(iCell);
						cell.setCellValue(estructura.getnombre());
						iRow++;
					}

					existeFilas=true;
					iCell++;
					break;

				case EstructuraConstantesFunciones.LABEL_ESJEFE:
					iRow=0;

					if(!existeFilas) {row = sheet.createRow(iRow);} else {row=sheet.getRow(iRow);}

					cell = row.createCell(iCell);
					cell.setCellValue(EstructuraConstantesFunciones.LABEL_ESJEFE);
					iRow++;

					for(Estructura estructura:estructurasSeleccionados) {
						if(!existeFilas) {row = sheet.createRow(iRow);} else {row=sheet.getRow(iRow);}

						cell = row.createCell(iCell);
						cell.setCellValue(estructura.getes_jefe());
						iRow++;
					}

					existeFilas=true;
					iCell++;
					break;

				case EstructuraConstantesFunciones.LABEL_ESANUAL:
					iRow=0;

					if(!existeFilas) {row = sheet.createRow(iRow);} else {row=sheet.getRow(iRow);}

					cell = row.createCell(iCell);
					cell.setCellValue(EstructuraConstantesFunciones.LABEL_ESANUAL);
					iRow++;

					for(Estructura estructura:estructurasSeleccionados) {
						if(!existeFilas) {row = sheet.createRow(iRow);} else {row=sheet.getRow(iRow);}

						cell = row.createCell(iCell);
						cell.setCellValue(estructura.getes_anual());
						iRow++;
					}

					existeFilas=true;
					iCell++;
					break;

				case EstructuraConstantesFunciones.LABEL_PORCENTAJE:
					iRow=0;

					if(!existeFilas) {row = sheet.createRow(iRow);} else {row=sheet.getRow(iRow);}

					cell = row.createCell(iCell);
					cell.setCellValue(EstructuraConstantesFunciones.LABEL_PORCENTAJE);
					iRow++;

					for(Estructura estructura:estructurasSeleccionados) {
						if(!existeFilas) {row = sheet.createRow(iRow);} else {row=sheet.getRow(iRow);}

						cell = row.createCell(iCell);
						cell.setCellValue(estructura.getporcentaje());
						iRow++;
					}

					existeFilas=true;
					iCell++;
					break;

				case EstructuraConstantesFunciones.LABEL_VALOR:
					iRow=0;

					if(!existeFilas) {row = sheet.createRow(iRow);} else {row=sheet.getRow(iRow);}

					cell = row.createCell(iCell);
					cell.setCellValue(EstructuraConstantesFunciones.LABEL_VALOR);
					iRow++;

					for(Estructura estructura:estructurasSeleccionados) {
						if(!existeFilas) {row = sheet.createRow(iRow);} else {row=sheet.getRow(iRow);}

						cell = row.createCell(iCell);
						cell.setCellValue(estructura.getvalor());
						iRow++;
					}

					existeFilas=true;
					iCell++;
					break;
					
					default :
						break;
				}
			}
			
			
			//if(conCabecera) {
			//	this.getFilaCabeceraExportarExcelEstructura(row);				
			//	iRow++;
			//}				
			
			//for(Estructura estructuraAux:estructurasSeleccionados) {
			//	row = sheet.createRow(iRow);
				
			//	this.getFilaDatosExportarExcelEstructura(estructuraAux,row);
				
			//	iRow++;
			//}
			
			
			
			fileOutputStream = new FileOutputStream(new File(sPath));
		    
			workbook.write(fileOutputStream);
			
			//fileOutputStream.close();
			
			Constantes2.S_PATH_ULTIMO_ARCHIVO=sPath;
			
			if(this.parametroGeneralUsuario.getcon_mensaje_confirmacion() && !this.estructuraSessionBean.getEsGuardarRelacionado()) {//Constantes.ISMOSTRARMENSAJESMANTENIMIENTO && 
				JOptionPane.showMessageDialog(this,"EXPORTADO CORRECTAMENTE:"+sPath,"MANTENIMIENTO DE Estructura",JOptionPane.INFORMATION_MESSAGE);
			}
		} catch (Exception e) {
			throw e;
			
		} finally {			
       		if (fileOutputStream != null) {
				fileOutputStream.close();
			}			
		}				
	}	
	
	
	
	public void jButtonArbolEstructuraActionPerformed(ActionEvent evt) throws Exception {    		
		try {
			this.abrirFrameTreeEstructura("BUSQUEDA_NORMAL");
			
		} catch(Exception e) {
			FuncionesSwing.manageException(this, e,logger,EstructuraConstantesFunciones.CLASSNAME);
		}
	}
	
	public void buscarPorId(Long idActual) throws Exception {    		
		try {
			if(Constantes.ISUSAEJBLOGICLAYER) {
				this.estructuraLogic.getNewConnexionToDeep("");
			}
			
			this.idActual=idActual;
			this.iNumeroPaginacionPagina=0;
			
			this.procesarBusqueda("PorId");
				    	
			//NO FUNCIONA BINDINGS
			this.inicializarActualizarBindingEstructura(false);
			
			//SI ES MANUAL
			if(EstructuraJInternalFrame.ISBINDING_MANUAL) {
				//this.inicializarActualizarBindingManualEstructura();
			}	
			
			if(Constantes.ISUSAEJBLOGICLAYER) {
				this.estructuraLogic.commitNewConnexionToDeep();
			}
			
		} catch(Exception e) {
			
			if(Constantes.ISUSAEJBLOGICLAYER) {
				this.estructuraLogic.rollbackNewConnexionToDeep();
			}
			
			FuncionesSwing.manageException(this, e,logger);
			
		} finally {
			if(Constantes.ISUSAEJBLOGICLAYER) {
				this.estructuraLogic.closeNewConnexionToDeep();
			}
		}
	}
	
	public void jButtonAnterioresEstructuraActionPerformed(ActionEvent evt) throws Exception {    		
		try	{
			//this.iNumeroPaginacion-=this.iNumeroPaginacion;
			/*
			if(this.iNumeroPaginacion<0) {
				this.iNumeroPaginacion=0;
			}
			*/
			//this.iNumeroPaginacionPagina=10;			
			
			if(Constantes.ISUSAEJBLOGICLAYER) {
				this.estructuraLogic.getNewConnexionToDeep("");
			}
			
			this.anteriores();
			
			//NO FUNCIONA BINDINGS
			this.inicializarActualizarBindingEstructura(false);
			
			//SI ES MANUAL
			if(EstructuraJInternalFrame.ISBINDING_MANUAL) {
	    		//this.inicializarActualizarBindingManualEstructura();
			}
			
			if(Constantes.ISUSAEJBLOGICLAYER) {
				this.estructuraLogic.commitNewConnexionToDeep();
			}
			
		} catch(Exception e) {
			if(Constantes.ISUSAEJBLOGICLAYER) {
				this.estructuraLogic.rollbackNewConnexionToDeep();
			}
			
			FuncionesSwing.manageException(this, e,logger,EstructuraConstantesFunciones.CLASSNAME);
		
		} finally {
			if(Constantes.ISUSAEJBLOGICLAYER) {
				this.estructuraLogic.closeNewConnexionToDeep();
			}
		}
	}
	
	public void jButtonSiguientesEstructuraActionPerformed(ActionEvent evt) throws Exception {    		
		try	{
			//this.iNumeroPaginacion+=this.iNumeroPaginacion;
			//this.iNumeroPaginacionPagina=10;			
			
			if(Constantes.ISUSAEJBLOGICLAYER) {
				this.estructuraLogic.getNewConnexionToDeep("");
			}
			
			this.siguientes();
			
			//NO FUNCIONA BINDINGS
			this.inicializarActualizarBindingEstructura(false);
			
			//SI ES MANUAL
			if(EstructuraJInternalFrame.ISBINDING_MANUAL) {
	    		//this.inicializarActualizarBindingManualEstructura();
			}		
			
			if(Constantes.ISUSAEJBLOGICLAYER) {
				this.estructuraLogic.commitNewConnexionToDeep();
			}
			
		} catch(Exception e) {
			if(Constantes.ISUSAEJBLOGICLAYER) {
				this.estructuraLogic.rollbackNewConnexionToDeep();
			}
			
			FuncionesSwing.manageException(this, e,logger,EstructuraConstantesFunciones.CLASSNAME);
		
		} finally {
			if(Constantes.ISUSAEJBLOGICLAYER) {
				this.estructuraLogic.closeNewConnexionToDeep();
			}
		}
	}
	
	public void aumentarTamanioFilaNuevaTablaEstructura() throws Exception {		
		Dimension dimensionMinimum=this.jTableDatosEstructura.getMinimumSize();
		Dimension dimensionMaximum=this.jTableDatosEstructura.getMaximumSize();
		Dimension dimensionPreferred=this.jTableDatosEstructura.getPreferredSize();
	
		double iHeightConFilaNueva=dimensionPreferred.getHeight();
		
		iHeightConFilaNueva+=this.jTableDatosEstructura.getRowHeight();
		
		dimensionMinimum.setSize(dimensionMinimum.getWidth(),iHeightConFilaNueva);
		dimensionMaximum.setSize(dimensionMaximum.getWidth(),iHeightConFilaNueva);
		dimensionPreferred.setSize(dimensionPreferred.getWidth(),iHeightConFilaNueva);
		
		this.jTableDatosEstructura.setMinimumSize(dimensionMinimum);
		this.jTableDatosEstructura.setMaximumSize(dimensionMaximum);
		this.jTableDatosEstructura.setPreferredSize(dimensionPreferred);	
	}
	
	public void inicializarActualizarBindingEstructura(Boolean esInicializar) throws Exception {
		this.inicializarActualizarBindingEstructura(esInicializar,true);
	}
	
	public void inicializarActualizarBindingEstructura(Boolean esInicializar,Boolean conTabla) throws Exception {		
		if(conTabla) {
			this.inicializarActualizarBindingTablaEstructura(esInicializar);
		}
		
		this.inicializarActualizarBindingBotonesEstructura(esInicializar);
		
		//FUNCIONALIDAD_RELACIONADO
		if(!this.estructuraSessionBean.getEsGuardarRelacionado()) {
			try{this.inicializarActualizarBindingBusquedasEstructura(esInicializar);}catch(Exception e){e.printStackTrace();}
			
			//this.inicializarActualizarBindingtiposArchivosReportesAccionesEstructura(esInicializar) ;
			
			this.inicializarActualizarBindingParametrosReportesEstructura(esInicializar) ;
		}
		
		if(esInicializar) {
			if( !EstructuraJInternalFrame.ISBINDING_MANUAL_TABLA ||
			   	!EstructuraJInternalFrame.ISBINDING_MANUAL) {
			   	
			}
		}
	}
	
	public void inicializarActualizarBindingManualEstructura() throws Exception {		
		//NO SE NECESITA HACER BINDING OTRA VEZ
		//this.inicializarActualizarBindingTablaEstructura();
		
		this.inicializarActualizarBindingBotonesManualEstructura(true);
		
		//FUNCIONALIDAD_RELACIONADO
		if(!this.estructuraSessionBean.getEsGuardarRelacionado()) {
			
			this.inicializarActualizarBindingBusquedasManualEstructura();			
			
			
			//this.inicializarActualizarBindingtiposArchivosReportesAccionesEstructura() ;
			
			this.inicializarActualizarBindingParametrosReportesPostAccionesManualEstructura(false) ;			
			
		}
	}
	
	public void inicializarActualizarBindingParametrosReportesPostAccionesManualEstructura(Boolean esSetControles) throws Exception {
		try	{					
			if(!esSetControles) {
				this.isSeleccionarTodos=this.jCheckBoxSeleccionarTodosEstructura.isSelected();
				this.isSeleccionados=this.jCheckBoxSeleccionadosEstructura.isSelected();
				
				
				this.conGraficoReporte=this.jCheckBoxConGraficoReporteEstructura.isSelected();															
				
				
				if(this.jInternalFrameDetalleFormEstructura!=null) {
				this.isPostAccionNuevo=this.jInternalFrameDetalleFormEstructura.jCheckBoxPostAccionNuevoEstructura.isSelected();
				this.isPostAccionSinCerrar=this.jInternalFrameDetalleFormEstructura.jCheckBoxPostAccionSinCerrarEstructura.isSelected();
				this.isPostAccionSinMensaje=this.jInternalFrameDetalleFormEstructura.jCheckBoxPostAccionSinMensajeEstructura.isSelected();
				}
			
			} else {
				this.jCheckBoxSeleccionarTodosEstructura.setSelected(this.isSeleccionarTodos);
				this.jCheckBoxSeleccionadosEstructura.setSelected(this.isSeleccionados);
				
				
				this.jCheckBoxConGraficoReporteEstructura.setSelected(this.conGraficoReporte);				
				
				
				if(this.jInternalFrameDetalleFormEstructura!=null) {
				this.jInternalFrameDetalleFormEstructura.jCheckBoxPostAccionNuevoEstructura.setSelected(this.isPostAccionNuevo);
				this.jInternalFrameDetalleFormEstructura.jCheckBoxPostAccionSinCerrarEstructura.setSelected(this.isPostAccionSinCerrar);
				this.jInternalFrameDetalleFormEstructura.jCheckBoxPostAccionSinMensajeEstructura.setSelected(this.isPostAccionSinMensaje);
				}
			}
			
			
			if(this.jComboBoxTiposPaginacionEstructura.getSelectedItem()!=null) {
				this.sTipoPaginacion=((Reporte)this.jComboBoxTiposPaginacionEstructura.getSelectedItem()).getsCodigo();			
			}
			
			
			
			if(this.jInternalFrameDetalleFormEstructura!=null) {
			this.sTipoAccionFormulario=((Reporte)this.jInternalFrameDetalleFormEstructura.jComboBoxTiposAccionesFormularioEstructura.getSelectedItem()).getsCodigo();
			}
			
			
			
			if(!this.conCargarMinimo) {
				this.sTipoArchivoReporte=((Reporte)this.jComboBoxTiposArchivosReportesEstructura.getSelectedItem()).getsCodigo();			
				
				if(this.jInternalFrameReporteDinamicoEstructura!=null) {
					this.sTipoArchivoReporteDinamico=((Reporte)this.jInternalFrameReporteDinamicoEstructura.getjComboBoxTiposArchivosReportesDinamico().getSelectedItem()).getsCodigo();			
				}
				
				this.sTipoRelacion=((Reporte)this.jComboBoxTiposRelacionesEstructura.getSelectedItem()).getsCodigo();
									
				this.sTipoAccion=((Reporte)this.jComboBoxTiposAccionesEstructura.getSelectedItem()).getsCodigo();
													
				this.sTipoSeleccionar=((Reporte)this.jComboBoxTiposSeleccionarEstructura.getSelectedItem()).getsCodigo();
									
				this.sTipoReporte=((Reporte)this.jComboBoxTiposReportesEstructura.getSelectedItem()).getsCodigo();							
					
				if(this.jInternalFrameReporteDinamicoEstructura!=null) {
					this.sTipoReporteDinamico=((Reporte)this.jInternalFrameReporteDinamicoEstructura.getjComboBoxTiposReportesDinamico().getSelectedItem()).getsCodigo();							
				}
				
				this.sTipoGraficoReporte=((Reporte)this.jComboBoxTiposGraficosReportesEstructura.getSelectedItem()).getsCodigo();											
			}			
			
			this.sValorCampoGeneral=this.jTextFieldValorCampoGeneralEstructura.getText();						
			
			
			
		} catch(Exception e) {
			throw e;
		}
	}
	
	public void inicializarActualizarBindingParametrosReportesEstructura(Boolean esInicializar) throws Exception {
		try	{	
			if(EstructuraJInternalFrame.ISBINDING_MANUAL) {
				this. inicializarActualizarBindingParametrosReportesPostAccionesManualEstructura(false);
			} else {
			}
		} catch(Exception e) {
			throw e;
		}
	}	
	
	public void inicializarActualizarBindingtiposArchivosReportesAccionesEstructura() throws Exception {
		try	{
			if(EstructuraJInternalFrame.ISBINDING_MANUAL) {
				this.inicializarActualizarBindingtiposArchivosReportesAccionesManualEstructura();
			} else {
			}
		} catch(Exception e) {
			throw e;
		}
	}
	
	@SuppressWarnings("unchecked")
	public void inicializarActualizarBindingtiposArchivosReportesAccionesManualFormDetalleEstructura() throws Exception {
		//TIPOS ACCIONES FORMULARIO	
		this.jInternalFrameDetalleFormEstructura.jComboBoxTiposAccionesFormularioEstructura.removeAllItems();
				
		for(Reporte reporte:this.tiposAccionesFormulario) {
			this.jInternalFrameDetalleFormEstructura.jComboBoxTiposAccionesFormularioEstructura.addItem(reporte);
		}
		
		//TIPOS ACCIONES FORMULARIO
	}
	
	@SuppressWarnings("unchecked")
	public void inicializarActualizarBindingtiposArchivosReportesAccionesManualEstructura() throws Exception {
		try	{
			
			//TIPOS ARCHIVOS REPORTES
			this.jComboBoxTiposArchivosReportesEstructura.removeAllItems();
				
			for(Reporte reporte:this.tiposArchivosReportes) {
				this.jComboBoxTiposArchivosReportesEstructura.addItem(reporte);
			}
			
			
				
			//TIPOS REPORTES
			this.jComboBoxTiposReportesEstructura.removeAllItems();
				
			for(Reporte reporte:this.tiposReportes) {
				this.jComboBoxTiposReportesEstructura.addItem(reporte);
			}
			
			
			//TIPOS GRAFICOS REPORTES
			this.jComboBoxTiposGraficosReportesEstructura.removeAllItems();
				
			for(Reporte reporte:this.tiposGraficosReportes) {
				this.jComboBoxTiposGraficosReportesEstructura.addItem(reporte);
			}
			
			
			//TIPOS PAGINACION
			this.jComboBoxTiposPaginacionEstructura.removeAllItems();
				
			for(Reporte reporte:this.tiposPaginacion) {
				this.jComboBoxTiposPaginacionEstructura.addItem(reporte);
			}
			
			
			if(!this.estructuraSessionBean.getEsGuardarRelacionado()) {
				this.jComboBoxTiposPaginacionEstructura.setSelectedItem(Funciones2.getTipoPaginacionDefecto("NORMAL",this.tiposPaginacion));
			} else {
				this.jComboBoxTiposPaginacionEstructura.setSelectedItem(Funciones2.getTipoPaginacionDefecto("RELACIONADO",this.tiposPaginacion));
			}
				
				
			//TIPOS ACCIONES	
			this.jComboBoxTiposRelacionesEstructura.removeAllItems();
				
			for(Reporte reporte:this.tiposRelaciones) {
				this.jComboBoxTiposRelacionesEstructura.addItem(reporte);
			}
			
			//TIPOS ACCIONES
				
				
			//TIPOS ACCIONES	
			this.jComboBoxTiposAccionesEstructura.removeAllItems();
				
			for(Reporte reporte:this.tiposAcciones) {
				this.jComboBoxTiposAccionesEstructura.addItem(reporte);
			}
			
			//TIPOS ACCIONES			
			
			
			
			//TIPOS ACCIONES FORMULARIO	
			if(this.jInternalFrameDetalleFormEstructura!=null) { //if(this.conCargarFormDetalle) {
				this.jInternalFrameDetalleFormEstructura.jComboBoxTiposAccionesFormularioEstructura.removeAllItems();
				
				for(Reporte reporte:this.tiposAccionesFormulario) {
					this.jInternalFrameDetalleFormEstructura.jComboBoxTiposAccionesFormularioEstructura.addItem(reporte);
				}
				
			}
			//TIPOS ACCIONES FORMULARIO
			
			
			
			//TIPOS SELECCIONAR
			this.jComboBoxTiposSeleccionarEstructura.removeAllItems();
				
			for(Reporte reporte:this.tiposSeleccionar) {
				this.jComboBoxTiposSeleccionarEstructura.addItem(reporte);
			}
			
			
			if(this.tiposSeleccionar!=null && this.tiposSeleccionar.size()>1) {
				this.jComboBoxTiposSeleccionarEstructura.setSelectedIndex(1);
			}
				
			//REPORTE DINAMICO
			this.inicializarActualizarBindingtiposArchivosReportesDinamicoAccionesManualEstructura();
							
			//TIPOS COLUMNAS SELECT
			//TIPOS SELECCIONAR
			
			
		} catch(Exception e) {
			throw e;
		}
	}		
	
	
	@SuppressWarnings("unchecked")
	public void inicializarActualizarBindingtiposArchivosReportesDinamicoAccionesManualEstructura() throws Exception {
		try	{
			DefaultListModel<Reporte> defaultListModel=new DefaultListModel<Reporte>();
			
			
			//TIPOS ARCHIVOS REPORTES DINAMICO
			if(this.jInternalFrameReporteDinamicoEstructura!=null) {
				this.jInternalFrameReporteDinamicoEstructura.getjComboBoxTiposArchivosReportesDinamico().removeAllItems();
					
				for(Reporte reporte:this.tiposArchivosReportesDinamico) {
					this.jInternalFrameReporteDinamicoEstructura.getjComboBoxTiposArchivosReportesDinamico().addItem(reporte);
				}
				
			}
			
			//TIPOS REPORTES DINAMICO
			if(this.jInternalFrameReporteDinamicoEstructura!=null) {
				this.jInternalFrameReporteDinamicoEstructura.getjComboBoxTiposReportesDinamico().removeAllItems();
					
				for(Reporte reporte:this.tiposReportesDinamico) {
					this.jInternalFrameReporteDinamicoEstructura.getjComboBoxTiposReportesDinamico().addItem(reporte);
				}
				
			}
			
			defaultListModel=new DefaultListModel<Reporte>();
			
			if(this.jInternalFrameReporteDinamicoEstructura!=null) {
				
				if(this.jInternalFrameReporteDinamicoEstructura.getjListColumnasSelectReporte()!=null) {
					this.jInternalFrameReporteDinamicoEstructura.getjListColumnasSelectReporte().removeAll();
						
					for(Reporte reporte:this.tiposColumnasSelect) {
						defaultListModel.addElement(reporte);
					}						
						
					this.jInternalFrameReporteDinamicoEstructura.getjListColumnasSelectReporte().setModel(defaultListModel);									
						
				}	
					
				//TIPOS RELACIONES SELECT
				//TIPOS SELECCIONAR
				defaultListModel=new DefaultListModel<Reporte>();
				if(this.jInternalFrameReporteDinamicoEstructura.getjListRelacionesSelectReporte()!=null) {
					this.jInternalFrameReporteDinamicoEstructura.getjListRelacionesSelectReporte().removeAll();
						
					for(Reporte reporte:this.tiposRelacionesSelect) {
						defaultListModel.addElement(reporte);
					}						
						
					this.jInternalFrameReporteDinamicoEstructura.getjListRelacionesSelectReporte().setModel(defaultListModel);									
						
				}	
				
				
				//TIPOS COLUMNAS CATEGORIA DINAMICO
				if(this.jInternalFrameReporteDinamicoEstructura.getjComboBoxColumnaCategoriaGrafico()!=null) {
					this.jInternalFrameReporteDinamicoEstructura.getjComboBoxColumnaCategoriaGrafico().removeAllItems();
						
					ArrayList<Reporte> tiposColumnasCategoria=EstructuraConstantesFunciones.getTiposSeleccionarEstructura(true,true,false,true,true);
						
					for(Reporte reporte:tiposColumnasCategoria) {//this.tiposSeleccionar
						this.jInternalFrameReporteDinamicoEstructura.getjComboBoxColumnaCategoriaGrafico().addItem(reporte);
					}
					
				}
					
				//TIPOS COLUMNAS CATEGORIA VALOR DINAMICO
				if(this.jInternalFrameReporteDinamicoEstructura.getjComboBoxColumnaCategoriaValor()!=null) {
					this.jInternalFrameReporteDinamicoEstructura.getjComboBoxColumnaCategoriaValor().removeAllItems();
						
					ArrayList<Reporte> tiposColumnasCategoriaValor=EstructuraConstantesFunciones.getTiposSeleccionarEstructura(false,false,true,false,false);
						
					for(Reporte reporte:tiposColumnasCategoriaValor) {//this.tiposSeleccionar
						this.jInternalFrameReporteDinamicoEstructura.getjComboBoxColumnaCategoriaValor().addItem(reporte);
					}
					
				}
					
				//TIPOS COLUMNAS VALOR
				defaultListModel=new DefaultListModel<Reporte>();
					
				if(this.jInternalFrameReporteDinamicoEstructura.getjListColumnasValoresGrafico()!=null) {
					this.jInternalFrameReporteDinamicoEstructura.getjListColumnasValoresGrafico().removeAll();
						
					ArrayList<Reporte> tiposColumnasValor=EstructuraConstantesFunciones.getTiposSeleccionarEstructura(false,false,true,false,false);
						
					for(Reporte reporte:tiposColumnasValor) {//this.tiposSeleccionar
						defaultListModel.addElement(reporte);
					}						
						
					this.jInternalFrameReporteDinamicoEstructura.getjListColumnasValoresGrafico().setModel(defaultListModel);									
						
				}
					
				//TIPOS GRAFICOS REPORTES DINAMICOS
				if(this.jInternalFrameReporteDinamicoEstructura.getjComboBoxTiposGraficosReportesDinamico()!=null) {
					this.jInternalFrameReporteDinamicoEstructura.getjComboBoxTiposGraficosReportesDinamico().removeAllItems();
						
					for(Reporte reporte:this.tiposGraficosReportes) {
						this.jInternalFrameReporteDinamicoEstructura.getjComboBoxTiposGraficosReportesDinamico().addItem(reporte);
					}
					
				}
			
			
			}
		} catch(Exception e) {
			throw e;
		}
	}	
	
	
	
	public void inicializarActualizarBindingBusquedasManualEstructura()  throws Exception {				
		//BYDAN_BUSQUEDAS		
		
		if(this.jComboBoxid_ciudadFK_IdCiudadEstructura.getSelectedItem()!=null){this.id_ciudadFK_IdCiudad=((Ciudad)this.jComboBoxid_ciudadFK_IdCiudadEstructura.getSelectedItem()).getId();}
		if(this.jComboBoxid_cuenta_contableFK_IdCuentaContableEstructura.getSelectedItem()!=null){this.id_cuenta_contableFK_IdCuentaContable=((CuentaContable)this.jComboBoxid_cuenta_contableFK_IdCuentaContableEstructura.getSelectedItem()).getId();}
		if(this.jComboBoxid_estructuraFK_IdEstructuraEstructura.getSelectedItem()!=null){this.id_estructuraFK_IdEstructura=((Estructura)this.jComboBoxid_estructuraFK_IdEstructuraEstructura.getSelectedItem()).getId();}
		if(this.jComboBoxid_numero_patronalFK_IdNumeroPatronalEstructura.getSelectedItem()!=null){this.id_numero_patronalFK_IdNumeroPatronal=((NumeroPatronal)this.jComboBoxid_numero_patronalFK_IdNumeroPatronalEstructura.getSelectedItem()).getId();}
		if(this.jComboBoxid_paisFK_IdPaisEstructura.getSelectedItem()!=null){this.id_paisFK_IdPais=((Pais)this.jComboBoxid_paisFK_IdPaisEstructura.getSelectedItem()).getId();}
		if(this.jComboBoxid_tipo_estructuraFK_IdTipoEstructuraEstructura.getSelectedItem()!=null){this.id_tipo_estructuraFK_IdTipoEstructura=((TipoEstructura)this.jComboBoxid_tipo_estructuraFK_IdTipoEstructuraEstructura.getSelectedItem()).getId();}
		if(this.jComboBoxid_tipo_pago__n_mFK_IdTipoPago_NMEstructura.getSelectedItem()!=null){this.id_tipo_pago__n_mFK_IdTipoPago_NM=((TipoPago_NM)this.jComboBoxid_tipo_pago__n_mFK_IdTipoPago_NMEstructura.getSelectedItem()).getId();}
		
	}
	
	
	
	
	public void inicializarActualizarBindingBusquedasEstructura(Boolean esInicializar) throws Exception {				
		if(EstructuraJInternalFrame.ISBINDING_MANUAL) {
			
			this.inicializarActualizarBindingBusquedasManualEstructura();			
			
		} else {
		}
	}		
		
	public void inicializarActualizarBindingTablaEstructura() throws Exception {
		this.inicializarActualizarBindingTablaEstructura(false);
	}
	
	
	public void inicializarActualizarBindingTablaOrderByEstructura() {
		//TABLA OrderBy	
		TableColumn tableColumn=new TableColumn();
		Integer iWidthTableDefinicionOrderBy=0;			
			
		this.jInternalFrameOrderByEstructura.getjTableDatosOrderBy().setModel(new TablaGeneralOrderByModel(this.arrOrderBy));
					
		//DEFINIR RENDERERS OrderBy
		tableColumn=this.jInternalFrameOrderByEstructura.getjTableDatosOrderBy().getColumnModel().getColumn(Funciones2.getColumnIndexByName(this.jInternalFrameOrderByEstructura.getjTableDatosOrderBy(),OrderBy.ISSELECTED));			
		//tableColumn.addPropertyChangeListener(new EstructuraPropertyChangeListener());
					
		tableColumn.setPreferredWidth(50); 	 
		tableColumn.setWidth(50); 	 
		tableColumn.setMinWidth(50);
		tableColumn.setMaxWidth(50);
				
		iWidthTableDefinicionOrderBy+=50;
					
		tableColumn=this.jInternalFrameOrderByEstructura.getjTableDatosOrderBy().getColumnModel().getColumn(Funciones2.getColumnIndexByName(this.jInternalFrameOrderByEstructura.getjTableDatosOrderBy(),OrderBy.NOMBRE));
		//tableColumn.addPropertyChangeListener(new EstructuraPropertyChangeListener());
					
		tableColumn.setPreferredWidth(150); 	 
		tableColumn.setWidth(150); 	 
		tableColumn.setMinWidth(150);
		tableColumn.setMaxWidth(150);
				
		iWidthTableDefinicionOrderBy+=150;
					
		//tableColumn=this.jTableDatosEstructuraOrderBy.getColumnModel().getColumn(Funciones2.getColumnIndexByName(this.jTableDatosEstructuraOrderBy,OrderBy.NOMBREDB));			
		////tableColumn.addPropertyChangeListener(new EstructuraPropertyChangeListener());
								
		tableColumn=this.jInternalFrameOrderByEstructura.getjTableDatosOrderBy().getColumnModel().getColumn(Funciones2.getColumnIndexByName(this.jInternalFrameOrderByEstructura.getjTableDatosOrderBy(),OrderBy.ESDESC));
		//tableColumn.addPropertyChangeListener(new EstructuraPropertyChangeListener());
												
		tableColumn.setPreferredWidth(50); 	 
		tableColumn.setWidth(50); 	 
		tableColumn.setMinWidth(50);
		tableColumn.setMaxWidth(50);
				
		((AbstractTableModel) this.jInternalFrameOrderByEstructura.getjTableDatosOrderBy().getModel()).fireTableDataChanged();
				
		iWidthTableDefinicionOrderBy+=50;
	}
	
	
	
	public void inicializarActualizarBindingTablaEstructura(Boolean esInicializar) throws Exception {
		Boolean isNoExiste=false;
		Integer iCountNumeroColumnasNormal=0;
		Integer iCountNumeroColumnasFk=0;
		
		this.iWidthTableDefinicion=0;
		
		int iSizeTabla=0;
		
		iSizeTabla=this.getSizeTablaDatos();
		
	if(esInicializar || ConstantesSwing.FORZAR_INICIALIZAR_TABLA) {//esInicializar
		//ARCHITECTURE
		if(Constantes.ISUSAEJBLOGICLAYER) {
			isNoExiste=estructuraLogic.getEstructuras().size()==0;
		} else if(Constantes.ISUSAEJBREMOTE || Constantes.ISUSAEJBHOME) {
			isNoExiste=estructuras.size()==0;
		}
		//ARCHITECTURE
			
		if(isNoExiste) {
			if(this.iNumeroPaginacion-this.iNumeroPaginacion>0) {
				this.iNumeroPaginacion-=this.iNumeroPaginacion;
			}
		}
		
		TableColumn tableColumn=new TableColumn();
		
		if(EstructuraJInternalFrame.ISBINDING_MANUAL_TABLA) {
			
			//ARCHITECTURE
			if(Constantes.ISUSAEJBLOGICLAYER) {
				this.jTableDatosEstructura.setModel(new EstructuraModel(this.estructuraLogic.getEstructuras(),this));
			} else if(Constantes.ISUSAEJBREMOTE || Constantes.ISUSAEJBHOME ) {
				this.jTableDatosEstructura.setModel(new EstructuraModel(this.estructuras,this));
			}
			//ARCHITECTURE
			
							
			
			
			if(this.jInternalFrameOrderByEstructura!=null && this.jInternalFrameOrderByEstructura.getjTableDatosOrderBy()!=null) {
				this.inicializarActualizarBindingTablaOrderByEstructura();
			}
			
								
			//DEFINIR RENDERERS
			tableColumn=this.jTableDatosEstructura.getColumnModel().getColumn(Funciones2.getColumnIndexByName(this.jTableDatosEstructura,Constantes2.S_SELECCIONAR));
			//tableColumn.addPropertyChangeListener(new EstructuraPropertyChangeListener());
			tableColumn.setCellRenderer(new BooleanRenderer(true,"Seleccionar "+EstructuraConstantesFunciones.SCLASSWEBTITULO,estructuraConstantesFunciones.resaltarSeleccionarEstructura,iSizeTabla,true,false,"","",this));
			tableColumn.setCellEditor(new BooleanEditorRenderer(true,"Seleccionar "+EstructuraConstantesFunciones.SCLASSWEBTITULO,estructuraConstantesFunciones.resaltarSeleccionarEstructura,false,"","",this));			
			
			tableColumn.setPreferredWidth(50); 	 
			tableColumn.setWidth(50); 	 
			tableColumn.setMinWidth(50); 
			tableColumn.setMaxWidth(50); 
			
			this.iWidthTableDefinicion+=50;
			
			


			tableColumn=this.jTableDatosEstructura.getColumnModel().getColumn(Funciones2.getColumnIndexByName(this.jTableDatosEstructura,EstructuraConstantesFunciones.LABEL_ID));

		if(this.estructuraConstantesFunciones.mostraridEstructura && Funciones2.permiteMostarParaBusqueda(this.esParaBusquedaForeignKey,EstructuraConstantesFunciones.LABEL_ID,false,iCountNumeroColumnasNormal++,iCountNumeroColumnasFk)) {
			tableColumn.setCellRenderer(new TextFieldRenderer(this.estructuraConstantesFunciones.resaltaridEstructura,this.estructuraConstantesFunciones.activaridEstructura,iSizeTabla,this,true,"idEstructura","BASICO"));
			tableColumn.setCellEditor(new TextFieldEditorRenderer(this.estructuraConstantesFunciones.resaltaridEstructura,this.estructuraConstantesFunciones.activaridEstructura,this,true,"idEstructura","BASICO",false));

			tableColumn.setPreferredWidth(50);
			tableColumn.setWidth(50);
			tableColumn.setMinWidth(50);
			tableColumn.setMaxWidth(50);

			this.iWidthTableDefinicion+=50;
		} else {
			Funciones2.setTableColumnOcultar(tableColumn);
		}


			tableColumn=this.jTableDatosEstructura.getColumnModel().getColumn(Funciones2.getColumnIndexByName(this.jTableDatosEstructura,EstructuraConstantesFunciones.LABEL_IDEMPRESA));

		if(this.estructuraConstantesFunciones.mostrarid_empresaEstructura && Funciones2.permiteMostarParaBusqueda(this.esParaBusquedaForeignKey,EstructuraConstantesFunciones.LABEL_IDEMPRESA,true,iCountNumeroColumnasNormal,iCountNumeroColumnasFk++) && Constantes.ISDEVELOPING) {
			tableColumn.setCellRenderer(new EmpresaTableCell(this.empresasForeignKey,this.estructuraConstantesFunciones.resaltarid_empresaEstructura,this,this.estructuraConstantesFunciones.activarid_empresaEstructura,iSizeTabla));
			tableColumn.setCellEditor(new EmpresaTableCell(this.empresasForeignKey,this.estructuraConstantesFunciones.resaltarid_empresaEstructura,this,this.estructuraConstantesFunciones.activarid_empresaEstructura,false,"id_empresaEstructura","GLOBAL"));

			tableColumn.setPreferredWidth(Constantes.ISWING_ANCHO_COLUMNA + FuncionesSwing.getValorProporcion(Constantes.ISWING_ANCHO_CONTROL,0));
			tableColumn.setWidth(Constantes.ISWING_ANCHO_COLUMNA + FuncionesSwing.getValorProporcion(Constantes.ISWING_ANCHO_CONTROL,0));
			tableColumn.setMinWidth(Constantes.ISWING_ANCHO_COLUMNA + FuncionesSwing.getValorProporcion(Constantes.ISWING_ANCHO_CONTROL,0));
			tableColumn.setMaxWidth(Constantes.ISWING_ANCHO_COLUMNA + FuncionesSwing.getValorProporcion(Constantes.ISWING_ANCHO_CONTROL,0));

			this.iWidthTableDefinicion+=Constantes.ISWING_ANCHO_COLUMNA + FuncionesSwing.getValorProporcion(Constantes.ISWING_ANCHO_CONTROL,0);
			//tableColumn.addPropertyChangeListener(new EstructuraPropertyChangeListener());
		} else {
			Funciones2.setTableColumnOcultar(tableColumn);
		}


			tableColumn=this.jTableDatosEstructura.getColumnModel().getColumn(Funciones2.getColumnIndexByName(this.jTableDatosEstructura,EstructuraConstantesFunciones.LABEL_IDSUCURSAL));

		if(this.estructuraConstantesFunciones.mostrarid_sucursalEstructura && Funciones2.permiteMostarParaBusqueda(this.esParaBusquedaForeignKey,EstructuraConstantesFunciones.LABEL_IDSUCURSAL,true,iCountNumeroColumnasNormal,iCountNumeroColumnasFk++) && Constantes.ISDEVELOPING) {
			tableColumn.setCellRenderer(new SucursalTableCell(this.sucursalsForeignKey,this.estructuraConstantesFunciones.resaltarid_sucursalEstructura,this,this.estructuraConstantesFunciones.activarid_sucursalEstructura,iSizeTabla));
			tableColumn.setCellEditor(new SucursalTableCell(this.sucursalsForeignKey,this.estructuraConstantesFunciones.resaltarid_sucursalEstructura,this,this.estructuraConstantesFunciones.activarid_sucursalEstructura,false,"id_sucursalEstructura","GLOBAL"));

			tableColumn.setPreferredWidth(Constantes.ISWING_ANCHO_COLUMNA + FuncionesSwing.getValorProporcion(Constantes.ISWING_ANCHO_CONTROL,0));
			tableColumn.setWidth(Constantes.ISWING_ANCHO_COLUMNA + FuncionesSwing.getValorProporcion(Constantes.ISWING_ANCHO_CONTROL,0));
			tableColumn.setMinWidth(Constantes.ISWING_ANCHO_COLUMNA + FuncionesSwing.getValorProporcion(Constantes.ISWING_ANCHO_CONTROL,0));
			tableColumn.setMaxWidth(Constantes.ISWING_ANCHO_COLUMNA + FuncionesSwing.getValorProporcion(Constantes.ISWING_ANCHO_CONTROL,0));

			this.iWidthTableDefinicion+=Constantes.ISWING_ANCHO_COLUMNA + FuncionesSwing.getValorProporcion(Constantes.ISWING_ANCHO_CONTROL,0);
			//tableColumn.addPropertyChangeListener(new EstructuraPropertyChangeListener());
		} else {
			Funciones2.setTableColumnOcultar(tableColumn);
		}


			tableColumn=this.jTableDatosEstructura.getColumnModel().getColumn(Funciones2.getColumnIndexByName(this.jTableDatosEstructura,EstructuraConstantesFunciones.LABEL_IDESTRUCTURA));

		if(this.estructuraConstantesFunciones.mostrarid_estructuraEstructura && Funciones2.permiteMostarParaBusqueda(this.esParaBusquedaForeignKey,EstructuraConstantesFunciones.LABEL_IDESTRUCTURA,true,iCountNumeroColumnasNormal,iCountNumeroColumnasFk++)) {
			tableColumn.setCellRenderer(new EstructuraTableCell(this.estructurasForeignKey,this.estructuraConstantesFunciones.resaltarid_estructuraEstructura,this,this.estructuraConstantesFunciones.activarid_estructuraEstructura,iSizeTabla));
			tableColumn.setCellEditor(new EstructuraTableCell(this.estructurasForeignKey,this.estructuraConstantesFunciones.resaltarid_estructuraEstructura,this,this.estructuraConstantesFunciones.activarid_estructuraEstructura,true,"id_estructuraEstructura","BASICO"));

			tableColumn.setPreferredWidth(Constantes.ISWING_ANCHO_COLUMNA + FuncionesSwing.getValorProporcion(Constantes.ISWING_ANCHO_CONTROL,0));
			tableColumn.setWidth(Constantes.ISWING_ANCHO_COLUMNA + FuncionesSwing.getValorProporcion(Constantes.ISWING_ANCHO_CONTROL,0));
			tableColumn.setMinWidth(Constantes.ISWING_ANCHO_COLUMNA + FuncionesSwing.getValorProporcion(Constantes.ISWING_ANCHO_CONTROL,0));
			tableColumn.setMaxWidth(Constantes.ISWING_ANCHO_COLUMNA + FuncionesSwing.getValorProporcion(Constantes.ISWING_ANCHO_CONTROL,0));

			this.iWidthTableDefinicion+=Constantes.ISWING_ANCHO_COLUMNA + FuncionesSwing.getValorProporcion(Constantes.ISWING_ANCHO_CONTROL,0);
			//tableColumn.addPropertyChangeListener(new EstructuraPropertyChangeListener());
		} else {
			Funciones2.setTableColumnOcultar(tableColumn);
		}


			tableColumn=this.jTableDatosEstructura.getColumnModel().getColumn(Funciones2.getColumnIndexByName(this.jTableDatosEstructura,EstructuraConstantesFunciones.LABEL_IDTIPOPAGO_NM));

		if(this.estructuraConstantesFunciones.mostrarid_tipo_pago__n_mEstructura && Funciones2.permiteMostarParaBusqueda(this.esParaBusquedaForeignKey,EstructuraConstantesFunciones.LABEL_IDTIPOPAGO_NM,true,iCountNumeroColumnasNormal,iCountNumeroColumnasFk++)) {
			tableColumn.setCellRenderer(new TipoPago_NMTableCell(this.tipopago_nmsForeignKey,this.estructuraConstantesFunciones.resaltarid_tipo_pago__n_mEstructura,this,this.estructuraConstantesFunciones.activarid_tipo_pago__n_mEstructura,iSizeTabla));
			tableColumn.setCellEditor(new TipoPago_NMTableCell(this.tipopago_nmsForeignKey,this.estructuraConstantesFunciones.resaltarid_tipo_pago__n_mEstructura,this,this.estructuraConstantesFunciones.activarid_tipo_pago__n_mEstructura,true,"id_tipo_pago__n_mEstructura","BASICO"));

			tableColumn.setPreferredWidth(Constantes.ISWING_ANCHO_COLUMNA + FuncionesSwing.getValorProporcion(Constantes.ISWING_ANCHO_CONTROL,0));
			tableColumn.setWidth(Constantes.ISWING_ANCHO_COLUMNA + FuncionesSwing.getValorProporcion(Constantes.ISWING_ANCHO_CONTROL,0));
			tableColumn.setMinWidth(Constantes.ISWING_ANCHO_COLUMNA + FuncionesSwing.getValorProporcion(Constantes.ISWING_ANCHO_CONTROL,0));
			tableColumn.setMaxWidth(Constantes.ISWING_ANCHO_COLUMNA + FuncionesSwing.getValorProporcion(Constantes.ISWING_ANCHO_CONTROL,0));

			this.iWidthTableDefinicion+=Constantes.ISWING_ANCHO_COLUMNA + FuncionesSwing.getValorProporcion(Constantes.ISWING_ANCHO_CONTROL,0);
			//tableColumn.addPropertyChangeListener(new EstructuraPropertyChangeListener());
		} else {
			Funciones2.setTableColumnOcultar(tableColumn);
		}


			tableColumn=this.jTableDatosEstructura.getColumnModel().getColumn(Funciones2.getColumnIndexByName(this.jTableDatosEstructura,EstructuraConstantesFunciones.LABEL_IDNUMEROPATRONAL));

		if(this.estructuraConstantesFunciones.mostrarid_numero_patronalEstructura && Funciones2.permiteMostarParaBusqueda(this.esParaBusquedaForeignKey,EstructuraConstantesFunciones.LABEL_IDNUMEROPATRONAL,true,iCountNumeroColumnasNormal,iCountNumeroColumnasFk++)) {
			tableColumn.setCellRenderer(new NumeroPatronalTableCell(this.numeropatronalsForeignKey,this.estructuraConstantesFunciones.resaltarid_numero_patronalEstructura,this,this.estructuraConstantesFunciones.activarid_numero_patronalEstructura,iSizeTabla));
			tableColumn.setCellEditor(new NumeroPatronalTableCell(this.numeropatronalsForeignKey,this.estructuraConstantesFunciones.resaltarid_numero_patronalEstructura,this,this.estructuraConstantesFunciones.activarid_numero_patronalEstructura,true,"id_numero_patronalEstructura","BASICO"));

			tableColumn.setPreferredWidth(Constantes.ISWING_ANCHO_COLUMNA + FuncionesSwing.getValorProporcion(Constantes.ISWING_ANCHO_CONTROL,0));
			tableColumn.setWidth(Constantes.ISWING_ANCHO_COLUMNA + FuncionesSwing.getValorProporcion(Constantes.ISWING_ANCHO_CONTROL,0));
			tableColumn.setMinWidth(Constantes.ISWING_ANCHO_COLUMNA + FuncionesSwing.getValorProporcion(Constantes.ISWING_ANCHO_CONTROL,0));
			tableColumn.setMaxWidth(Constantes.ISWING_ANCHO_COLUMNA + FuncionesSwing.getValorProporcion(Constantes.ISWING_ANCHO_CONTROL,0));

			this.iWidthTableDefinicion+=Constantes.ISWING_ANCHO_COLUMNA + FuncionesSwing.getValorProporcion(Constantes.ISWING_ANCHO_CONTROL,0);
			//tableColumn.addPropertyChangeListener(new EstructuraPropertyChangeListener());
		} else {
			Funciones2.setTableColumnOcultar(tableColumn);
		}


			tableColumn=this.jTableDatosEstructura.getColumnModel().getColumn(Funciones2.getColumnIndexByName(this.jTableDatosEstructura,EstructuraConstantesFunciones.LABEL_IDCUENTACONTABLE));

		if(this.estructuraConstantesFunciones.mostrarid_cuenta_contableEstructura && Funciones2.permiteMostarParaBusqueda(this.esParaBusquedaForeignKey,EstructuraConstantesFunciones.LABEL_IDCUENTACONTABLE,true,iCountNumeroColumnasNormal,iCountNumeroColumnasFk++)) {
			tableColumn.setCellRenderer(new CuentaContableTableCell(this.cuentacontablesForeignKey,this.estructuraConstantesFunciones.resaltarid_cuenta_contableEstructura,this,this.estructuraConstantesFunciones.activarid_cuenta_contableEstructura,iSizeTabla));
			tableColumn.setCellEditor(new CuentaContableTableCell(this.cuentacontablesForeignKey,this.estructuraConstantesFunciones.resaltarid_cuenta_contableEstructura,this,this.estructuraConstantesFunciones.activarid_cuenta_contableEstructura,true,"id_cuenta_contableEstructura","CON_BUSQUEDA"));

			tableColumn.setPreferredWidth(Constantes.ISWING_ANCHO_COLUMNA + FuncionesSwing.getValorProporcion(Constantes.ISWING_ANCHO_CONTROL,70));
			tableColumn.setWidth(Constantes.ISWING_ANCHO_COLUMNA + FuncionesSwing.getValorProporcion(Constantes.ISWING_ANCHO_CONTROL,70));
			tableColumn.setMinWidth(Constantes.ISWING_ANCHO_COLUMNA + FuncionesSwing.getValorProporcion(Constantes.ISWING_ANCHO_CONTROL,70));
			tableColumn.setMaxWidth(Constantes.ISWING_ANCHO_COLUMNA + FuncionesSwing.getValorProporcion(Constantes.ISWING_ANCHO_CONTROL,70));

			this.iWidthTableDefinicion+=Constantes.ISWING_ANCHO_COLUMNA + FuncionesSwing.getValorProporcion(Constantes.ISWING_ANCHO_CONTROL,70);
			//tableColumn.addPropertyChangeListener(new EstructuraPropertyChangeListener());
		} else {
			Funciones2.setTableColumnOcultar(tableColumn);
		}


			tableColumn=this.jTableDatosEstructura.getColumnModel().getColumn(Funciones2.getColumnIndexByName(this.jTableDatosEstructura,EstructuraConstantesFunciones.LABEL_IDTIPOESTRUCTURA));

		if(this.estructuraConstantesFunciones.mostrarid_tipo_estructuraEstructura && Funciones2.permiteMostarParaBusqueda(this.esParaBusquedaForeignKey,EstructuraConstantesFunciones.LABEL_IDTIPOESTRUCTURA,true,iCountNumeroColumnasNormal,iCountNumeroColumnasFk++)) {
			tableColumn.setCellRenderer(new TipoEstructuraTableCell(this.tipoestructurasForeignKey,this.estructuraConstantesFunciones.resaltarid_tipo_estructuraEstructura,this,this.estructuraConstantesFunciones.activarid_tipo_estructuraEstructura,iSizeTabla));
			tableColumn.setCellEditor(new TipoEstructuraTableCell(this.tipoestructurasForeignKey,this.estructuraConstantesFunciones.resaltarid_tipo_estructuraEstructura,this,this.estructuraConstantesFunciones.activarid_tipo_estructuraEstructura,true,"id_tipo_estructuraEstructura","BASICO"));

			tableColumn.setPreferredWidth(Constantes.ISWING_ANCHO_COLUMNA + FuncionesSwing.getValorProporcion(Constantes.ISWING_ANCHO_CONTROL,0));
			tableColumn.setWidth(Constantes.ISWING_ANCHO_COLUMNA + FuncionesSwing.getValorProporcion(Constantes.ISWING_ANCHO_CONTROL,0));
			tableColumn.setMinWidth(Constantes.ISWING_ANCHO_COLUMNA + FuncionesSwing.getValorProporcion(Constantes.ISWING_ANCHO_CONTROL,0));
			tableColumn.setMaxWidth(Constantes.ISWING_ANCHO_COLUMNA + FuncionesSwing.getValorProporcion(Constantes.ISWING_ANCHO_CONTROL,0));

			this.iWidthTableDefinicion+=Constantes.ISWING_ANCHO_COLUMNA + FuncionesSwing.getValorProporcion(Constantes.ISWING_ANCHO_CONTROL,0);
			//tableColumn.addPropertyChangeListener(new EstructuraPropertyChangeListener());
		} else {
			Funciones2.setTableColumnOcultar(tableColumn);
		}


			tableColumn=this.jTableDatosEstructura.getColumnModel().getColumn(Funciones2.getColumnIndexByName(this.jTableDatosEstructura,EstructuraConstantesFunciones.LABEL_IDPAIS));

		if(this.estructuraConstantesFunciones.mostrarid_paisEstructura && Funciones2.permiteMostarParaBusqueda(this.esParaBusquedaForeignKey,EstructuraConstantesFunciones.LABEL_IDPAIS,true,iCountNumeroColumnasNormal,iCountNumeroColumnasFk++)) {
			tableColumn.setCellRenderer(new PaisTableCell(this.paissForeignKey,this.estructuraConstantesFunciones.resaltarid_paisEstructura,this,this.estructuraConstantesFunciones.activarid_paisEstructura,iSizeTabla));
			tableColumn.setCellEditor(new PaisTableCell(this.paissForeignKey,this.estructuraConstantesFunciones.resaltarid_paisEstructura,this,this.estructuraConstantesFunciones.activarid_paisEstructura,true,"id_paisEstructura","BASICO"));

			tableColumn.setPreferredWidth(Constantes.ISWING_ANCHO_COLUMNA + FuncionesSwing.getValorProporcion(Constantes.ISWING_ANCHO_CONTROL,0));
			tableColumn.setWidth(Constantes.ISWING_ANCHO_COLUMNA + FuncionesSwing.getValorProporcion(Constantes.ISWING_ANCHO_CONTROL,0));
			tableColumn.setMinWidth(Constantes.ISWING_ANCHO_COLUMNA + FuncionesSwing.getValorProporcion(Constantes.ISWING_ANCHO_CONTROL,0));
			tableColumn.setMaxWidth(Constantes.ISWING_ANCHO_COLUMNA + FuncionesSwing.getValorProporcion(Constantes.ISWING_ANCHO_CONTROL,0));

			this.iWidthTableDefinicion+=Constantes.ISWING_ANCHO_COLUMNA + FuncionesSwing.getValorProporcion(Constantes.ISWING_ANCHO_CONTROL,0);
			//tableColumn.addPropertyChangeListener(new EstructuraPropertyChangeListener());
		} else {
			Funciones2.setTableColumnOcultar(tableColumn);
		}


			tableColumn=this.jTableDatosEstructura.getColumnModel().getColumn(Funciones2.getColumnIndexByName(this.jTableDatosEstructura,EstructuraConstantesFunciones.LABEL_IDCIUDAD));

		if(this.estructuraConstantesFunciones.mostrarid_ciudadEstructura && Funciones2.permiteMostarParaBusqueda(this.esParaBusquedaForeignKey,EstructuraConstantesFunciones.LABEL_IDCIUDAD,true,iCountNumeroColumnasNormal,iCountNumeroColumnasFk++)) {
			tableColumn.setCellRenderer(new CiudadTableCell(this.ciudadsForeignKey,this.estructuraConstantesFunciones.resaltarid_ciudadEstructura,this,this.estructuraConstantesFunciones.activarid_ciudadEstructura,iSizeTabla));
			tableColumn.setCellEditor(new CiudadTableCell(this.ciudadsForeignKey,this.estructuraConstantesFunciones.resaltarid_ciudadEstructura,this,this.estructuraConstantesFunciones.activarid_ciudadEstructura,true,"id_ciudadEstructura","BASICO"));

			tableColumn.setPreferredWidth(Constantes.ISWING_ANCHO_COLUMNA + FuncionesSwing.getValorProporcion(Constantes.ISWING_ANCHO_CONTROL,0));
			tableColumn.setWidth(Constantes.ISWING_ANCHO_COLUMNA + FuncionesSwing.getValorProporcion(Constantes.ISWING_ANCHO_CONTROL,0));
			tableColumn.setMinWidth(Constantes.ISWING_ANCHO_COLUMNA + FuncionesSwing.getValorProporcion(Constantes.ISWING_ANCHO_CONTROL,0));
			tableColumn.setMaxWidth(Constantes.ISWING_ANCHO_COLUMNA + FuncionesSwing.getValorProporcion(Constantes.ISWING_ANCHO_CONTROL,0));

			this.iWidthTableDefinicion+=Constantes.ISWING_ANCHO_COLUMNA + FuncionesSwing.getValorProporcion(Constantes.ISWING_ANCHO_CONTROL,0);
			//tableColumn.addPropertyChangeListener(new EstructuraPropertyChangeListener());
		} else {
			Funciones2.setTableColumnOcultar(tableColumn);
		}


			tableColumn=this.jTableDatosEstructura.getColumnModel().getColumn(Funciones2.getColumnIndexByName(this.jTableDatosEstructura,EstructuraConstantesFunciones.LABEL_CODIGO));

		if(this.estructuraConstantesFunciones.mostrarcodigoEstructura && Funciones2.permiteMostarParaBusqueda(this.esParaBusquedaForeignKey,EstructuraConstantesFunciones.LABEL_CODIGO,false,iCountNumeroColumnasNormal++,iCountNumeroColumnasFk)) {
			tableColumn.setCellRenderer(new LabelRenderer(this.estructuraConstantesFunciones.resaltarcodigoEstructura,this.estructuraConstantesFunciones.activarcodigoEstructura,iSizeTabla,this,true,"codigoEstructura","BASICO"));
			tableColumn.setCellEditor(new TextFieldEditorRenderer(this.estructuraConstantesFunciones.resaltarcodigoEstructura,this.estructuraConstantesFunciones.activarcodigoEstructura,this,true,"codigoEstructura","BASICO",false));

			tableColumn.setPreferredWidth(Constantes.ISWING_ANCHO_COLUMNA + FuncionesSwing.getValorProporcion(Constantes.ISWING_ANCHO_CONTROL,0));
			tableColumn.setWidth(Constantes.ISWING_ANCHO_COLUMNA + FuncionesSwing.getValorProporcion(Constantes.ISWING_ANCHO_CONTROL,0));
			tableColumn.setMinWidth(Constantes.ISWING_ANCHO_COLUMNA + FuncionesSwing.getValorProporcion(Constantes.ISWING_ANCHO_CONTROL,0));
			tableColumn.setMaxWidth(Constantes.ISWING_ANCHO_COLUMNA + FuncionesSwing.getValorProporcion(Constantes.ISWING_ANCHO_CONTROL,0));

			this.iWidthTableDefinicion+=Constantes.ISWING_ANCHO_COLUMNA + FuncionesSwing.getValorProporcion(Constantes.ISWING_ANCHO_CONTROL,0);
			//tableColumn.addPropertyChangeListener(new EstructuraPropertyChangeListener());
		} else {
			Funciones2.setTableColumnOcultar(tableColumn);
		}


			tableColumn=this.jTableDatosEstructura.getColumnModel().getColumn(Funciones2.getColumnIndexByName(this.jTableDatosEstructura,EstructuraConstantesFunciones.LABEL_NUMERO));

		if(this.estructuraConstantesFunciones.mostrarnumeroEstructura && Funciones2.permiteMostarParaBusqueda(this.esParaBusquedaForeignKey,EstructuraConstantesFunciones.LABEL_NUMERO,false,iCountNumeroColumnasNormal++,iCountNumeroColumnasFk)) {
			tableColumn.setCellRenderer(new LabelRenderer(this.estructuraConstantesFunciones.resaltarnumeroEstructura,this.estructuraConstantesFunciones.activarnumeroEstructura,iSizeTabla,this,true,"numeroEstructura","BASICO"));
			tableColumn.setCellEditor(new TextFieldEditorRenderer(this.estructuraConstantesFunciones.resaltarnumeroEstructura,this.estructuraConstantesFunciones.activarnumeroEstructura,this,true,"numeroEstructura","BASICO",false));

			tableColumn.setPreferredWidth(Constantes.ISWING_ANCHO_COLUMNA + FuncionesSwing.getValorProporcion(Constantes.ISWING_ANCHO_CONTROL,0));
			tableColumn.setWidth(Constantes.ISWING_ANCHO_COLUMNA + FuncionesSwing.getValorProporcion(Constantes.ISWING_ANCHO_CONTROL,0));
			tableColumn.setMinWidth(Constantes.ISWING_ANCHO_COLUMNA + FuncionesSwing.getValorProporcion(Constantes.ISWING_ANCHO_CONTROL,0));
			tableColumn.setMaxWidth(Constantes.ISWING_ANCHO_COLUMNA + FuncionesSwing.getValorProporcion(Constantes.ISWING_ANCHO_CONTROL,0));

			this.iWidthTableDefinicion+=Constantes.ISWING_ANCHO_COLUMNA + FuncionesSwing.getValorProporcion(Constantes.ISWING_ANCHO_CONTROL,0);
			//tableColumn.addPropertyChangeListener(new EstructuraPropertyChangeListener());
		} else {
			Funciones2.setTableColumnOcultar(tableColumn);
		}


			tableColumn=this.jTableDatosEstructura.getColumnModel().getColumn(Funciones2.getColumnIndexByName(this.jTableDatosEstructura,EstructuraConstantesFunciones.LABEL_VALORANTICIPO));

		if(this.estructuraConstantesFunciones.mostrarvalor_anticipoEstructura && Funciones2.permiteMostarParaBusqueda(this.esParaBusquedaForeignKey,EstructuraConstantesFunciones.LABEL_VALORANTICIPO,false,iCountNumeroColumnasNormal++,iCountNumeroColumnasFk)) {
			tableColumn.setCellRenderer(new TextFieldRenderer(this.estructuraConstantesFunciones.resaltarvalor_anticipoEstructura,this.estructuraConstantesFunciones.activarvalor_anticipoEstructura,iSizeTabla,this,true,"valor_anticipoEstructura","BASICO"));
			tableColumn.setCellEditor(new TextFieldEditorRenderer(this.estructuraConstantesFunciones.resaltarvalor_anticipoEstructura,this.estructuraConstantesFunciones.activarvalor_anticipoEstructura,this,true,"valor_anticipoEstructura","BASICO",false));

			tableColumn.setPreferredWidth(Constantes.ISWING_ANCHO_COLUMNA);
			tableColumn.setWidth(Constantes.ISWING_ANCHO_COLUMNA);
			tableColumn.setMinWidth(Constantes.ISWING_ANCHO_COLUMNA);
			tableColumn.setMaxWidth(Constantes.ISWING_ANCHO_COLUMNA);

			this.iWidthTableDefinicion+=Constantes.ISWING_ANCHO_COLUMNA;
			//tableColumn.addPropertyChangeListener(new EstructuraPropertyChangeListener());
		} else {
			Funciones2.setTableColumnOcultar(tableColumn);
		}


			tableColumn=this.jTableDatosEstructura.getColumnModel().getColumn(Funciones2.getColumnIndexByName(this.jTableDatosEstructura,EstructuraConstantesFunciones.LABEL_PORCENTAJEANTICIPO));

		if(this.estructuraConstantesFunciones.mostrarporcentaje_anticipoEstructura && Funciones2.permiteMostarParaBusqueda(this.esParaBusquedaForeignKey,EstructuraConstantesFunciones.LABEL_PORCENTAJEANTICIPO,false,iCountNumeroColumnasNormal++,iCountNumeroColumnasFk)) {
			tableColumn.setCellRenderer(new TextFieldRenderer(this.estructuraConstantesFunciones.resaltarporcentaje_anticipoEstructura,this.estructuraConstantesFunciones.activarporcentaje_anticipoEstructura,iSizeTabla,this,true,"porcentaje_anticipoEstructura","BASICO"));
			tableColumn.setCellEditor(new TextFieldEditorRenderer(this.estructuraConstantesFunciones.resaltarporcentaje_anticipoEstructura,this.estructuraConstantesFunciones.activarporcentaje_anticipoEstructura,this,true,"porcentaje_anticipoEstructura","BASICO",false));

			tableColumn.setPreferredWidth(Constantes.ISWING_ANCHO_COLUMNA);
			tableColumn.setWidth(Constantes.ISWING_ANCHO_COLUMNA);
			tableColumn.setMinWidth(Constantes.ISWING_ANCHO_COLUMNA);
			tableColumn.setMaxWidth(Constantes.ISWING_ANCHO_COLUMNA);

			this.iWidthTableDefinicion+=Constantes.ISWING_ANCHO_COLUMNA;
			//tableColumn.addPropertyChangeListener(new EstructuraPropertyChangeListener());
		} else {
			Funciones2.setTableColumnOcultar(tableColumn);
		}


			tableColumn=this.jTableDatosEstructura.getColumnModel().getColumn(Funciones2.getColumnIndexByName(this.jTableDatosEstructura,EstructuraConstantesFunciones.LABEL_NOMBRE));

		if(this.estructuraConstantesFunciones.mostrarnombreEstructura && Funciones2.permiteMostarParaBusqueda(this.esParaBusquedaForeignKey,EstructuraConstantesFunciones.LABEL_NOMBRE,false,iCountNumeroColumnasNormal++,iCountNumeroColumnasFk)) {
			tableColumn.setCellRenderer(new LabelRenderer(this.estructuraConstantesFunciones.resaltarnombreEstructura,this.estructuraConstantesFunciones.activarnombreEstructura,iSizeTabla,this,true,"nombreEstructura","BASICO"));
			tableColumn.setCellEditor(new TextFieldEditorRenderer(this.estructuraConstantesFunciones.resaltarnombreEstructura,this.estructuraConstantesFunciones.activarnombreEstructura,this,true,"nombreEstructura","BASICO",false));

			tableColumn.setPreferredWidth(Constantes.ISWING_ANCHO_COLUMNA + FuncionesSwing.getValorProporcion(Constantes.ISWING_ANCHO_CONTROL,0));
			tableColumn.setWidth(Constantes.ISWING_ANCHO_COLUMNA + FuncionesSwing.getValorProporcion(Constantes.ISWING_ANCHO_CONTROL,0));
			tableColumn.setMinWidth(Constantes.ISWING_ANCHO_COLUMNA + FuncionesSwing.getValorProporcion(Constantes.ISWING_ANCHO_CONTROL,0));
			tableColumn.setMaxWidth(Constantes.ISWING_ANCHO_COLUMNA + FuncionesSwing.getValorProporcion(Constantes.ISWING_ANCHO_CONTROL,0));

			this.iWidthTableDefinicion+=Constantes.ISWING_ANCHO_COLUMNA + FuncionesSwing.getValorProporcion(Constantes.ISWING_ANCHO_CONTROL,0);
			//tableColumn.addPropertyChangeListener(new EstructuraPropertyChangeListener());
		} else {
			Funciones2.setTableColumnOcultar(tableColumn);
		}


			tableColumn=this.jTableDatosEstructura.getColumnModel().getColumn(Funciones2.getColumnIndexByName(this.jTableDatosEstructura,EstructuraConstantesFunciones.LABEL_ESJEFE));

		if(this.estructuraConstantesFunciones.mostrares_jefeEstructura && Funciones2.permiteMostarParaBusqueda(this.esParaBusquedaForeignKey,EstructuraConstantesFunciones.LABEL_ESJEFE,false,iCountNumeroColumnasNormal++,iCountNumeroColumnasFk)) {
			tableColumn.setCellRenderer(new BooleanRenderer(this.estructuraConstantesFunciones.resaltares_jefeEstructura,this.estructuraConstantesFunciones.activares_jefeEstructura,iSizeTabla));
			tableColumn.setCellEditor(new BooleanEditorRenderer(this.estructuraConstantesFunciones.resaltares_jefeEstructura,this.estructuraConstantesFunciones.activares_jefeEstructura,this,true,"es_jefeEstructura","BASICO"));

			tableColumn.setPreferredWidth(Constantes.ISWING_ANCHO_COLUMNA);
			tableColumn.setWidth(Constantes.ISWING_ANCHO_COLUMNA);
			tableColumn.setMinWidth(Constantes.ISWING_ANCHO_COLUMNA);
			tableColumn.setMaxWidth(Constantes.ISWING_ANCHO_COLUMNA);

			this.iWidthTableDefinicion+=Constantes.ISWING_ANCHO_COLUMNA;
			//tableColumn.addPropertyChangeListener(new EstructuraPropertyChangeListener());
		} else {
			Funciones2.setTableColumnOcultar(tableColumn);
		}


			tableColumn=this.jTableDatosEstructura.getColumnModel().getColumn(Funciones2.getColumnIndexByName(this.jTableDatosEstructura,EstructuraConstantesFunciones.LABEL_ESANUAL));

		if(this.estructuraConstantesFunciones.mostrares_anualEstructura && Funciones2.permiteMostarParaBusqueda(this.esParaBusquedaForeignKey,EstructuraConstantesFunciones.LABEL_ESANUAL,false,iCountNumeroColumnasNormal++,iCountNumeroColumnasFk)) {
			tableColumn.setCellRenderer(new BooleanRenderer(this.estructuraConstantesFunciones.resaltares_anualEstructura,this.estructuraConstantesFunciones.activares_anualEstructura,iSizeTabla));
			tableColumn.setCellEditor(new BooleanEditorRenderer(this.estructuraConstantesFunciones.resaltares_anualEstructura,this.estructuraConstantesFunciones.activares_anualEstructura,this,true,"es_anualEstructura","BASICO"));

			tableColumn.setPreferredWidth(Constantes.ISWING_ANCHO_COLUMNA);
			tableColumn.setWidth(Constantes.ISWING_ANCHO_COLUMNA);
			tableColumn.setMinWidth(Constantes.ISWING_ANCHO_COLUMNA);
			tableColumn.setMaxWidth(Constantes.ISWING_ANCHO_COLUMNA);

			this.iWidthTableDefinicion+=Constantes.ISWING_ANCHO_COLUMNA;
			//tableColumn.addPropertyChangeListener(new EstructuraPropertyChangeListener());
		} else {
			Funciones2.setTableColumnOcultar(tableColumn);
		}


			tableColumn=this.jTableDatosEstructura.getColumnModel().getColumn(Funciones2.getColumnIndexByName(this.jTableDatosEstructura,EstructuraConstantesFunciones.LABEL_PORCENTAJE));

		if(this.estructuraConstantesFunciones.mostrarporcentajeEstructura && Funciones2.permiteMostarParaBusqueda(this.esParaBusquedaForeignKey,EstructuraConstantesFunciones.LABEL_PORCENTAJE,false,iCountNumeroColumnasNormal++,iCountNumeroColumnasFk)) {
			tableColumn.setCellRenderer(new TextFieldRenderer(this.estructuraConstantesFunciones.resaltarporcentajeEstructura,this.estructuraConstantesFunciones.activarporcentajeEstructura,iSizeTabla,this,true,"porcentajeEstructura","BASICO"));
			tableColumn.setCellEditor(new TextFieldEditorRenderer(this.estructuraConstantesFunciones.resaltarporcentajeEstructura,this.estructuraConstantesFunciones.activarporcentajeEstructura,this,true,"porcentajeEstructura","BASICO",false));

			tableColumn.setPreferredWidth(Constantes.ISWING_ANCHO_COLUMNA);
			tableColumn.setWidth(Constantes.ISWING_ANCHO_COLUMNA);
			tableColumn.setMinWidth(Constantes.ISWING_ANCHO_COLUMNA);
			tableColumn.setMaxWidth(Constantes.ISWING_ANCHO_COLUMNA);

			this.iWidthTableDefinicion+=Constantes.ISWING_ANCHO_COLUMNA;
			//tableColumn.addPropertyChangeListener(new EstructuraPropertyChangeListener());
		} else {
			Funciones2.setTableColumnOcultar(tableColumn);
		}


			tableColumn=this.jTableDatosEstructura.getColumnModel().getColumn(Funciones2.getColumnIndexByName(this.jTableDatosEstructura,EstructuraConstantesFunciones.LABEL_VALOR));

		if(this.estructuraConstantesFunciones.mostrarvalorEstructura && Funciones2.permiteMostarParaBusqueda(this.esParaBusquedaForeignKey,EstructuraConstantesFunciones.LABEL_VALOR,false,iCountNumeroColumnasNormal++,iCountNumeroColumnasFk)) {
			tableColumn.setCellRenderer(new TextFieldRenderer(this.estructuraConstantesFunciones.resaltarvalorEstructura,this.estructuraConstantesFunciones.activarvalorEstructura,iSizeTabla,this,true,"valorEstructura","BASICO"));
			tableColumn.setCellEditor(new TextFieldEditorRenderer(this.estructuraConstantesFunciones.resaltarvalorEstructura,this.estructuraConstantesFunciones.activarvalorEstructura,this,true,"valorEstructura","BASICO",false));

			tableColumn.setPreferredWidth(Constantes.ISWING_ANCHO_COLUMNA);
			tableColumn.setWidth(Constantes.ISWING_ANCHO_COLUMNA);
			tableColumn.setMinWidth(Constantes.ISWING_ANCHO_COLUMNA);
			tableColumn.setMaxWidth(Constantes.ISWING_ANCHO_COLUMNA);

			this.iWidthTableDefinicion+=Constantes.ISWING_ANCHO_COLUMNA;
			//tableColumn.addPropertyChangeListener(new EstructuraPropertyChangeListener());
		} else {
			Funciones2.setTableColumnOcultar(tableColumn);
		}
			
		} else {
		}			
					
		if(!this.estructuraSessionBean.getEsGuardarRelacionado()
			&& !this.esParaBusquedaForeignKey) {
			

			if(this.isTienePermisosCentroCostoEstructura && this.estructuraConstantesFunciones.mostrarCentroCostoEstructuraEstructura && !EstructuraConstantesFunciones.ISGUARDARREL) {
				tableColumn= new TableColumn();
				tableColumn.setIdentifier("Centro Costo Estructuras");
				tableColumn.setHeaderValue("Centro Costo Estructuras");
				tableColumn.setCellRenderer(new CentroCostoEstructuraTableCell(estructuraConstantesFunciones.resaltarCentroCostoEstructuraEstructura,this,this.estructuraConstantesFunciones.activarCentroCostoEstructuraEstructura));
				tableColumn.setCellEditor(new CentroCostoEstructuraTableCell(estructuraConstantesFunciones.resaltarCentroCostoEstructuraEstructura,this,this.estructuraConstantesFunciones.activarCentroCostoEstructuraEstructura));

				tableColumn.setPreferredWidth(Constantes.ISWING_ANCHO_CONTROL + FuncionesSwing.getValorProporcion(Constantes.ISWING_ANCHO_CONTROL,0));
				tableColumn.setWidth(Constantes.ISWING_ANCHO_CONTROL + FuncionesSwing.getValorProporcion(Constantes.ISWING_ANCHO_CONTROL,0));
				tableColumn.setMinWidth(Constantes.ISWING_ANCHO_CONTROL + FuncionesSwing.getValorProporcion(Constantes.ISWING_ANCHO_CONTROL,0));

				this.iWidthTableDefinicion+=Constantes.ISWING_ANCHO_CONTROL + FuncionesSwing.getValorProporcion(Constantes.ISWING_ANCHO_CONTROL,0);

				this.jTableDatosEstructura.addColumn(tableColumn);
			}

			if(this.isTienePermisosPlaniVacacion && this.estructuraConstantesFunciones.mostrarPlaniVacacionEstructura && !EstructuraConstantesFunciones.ISGUARDARREL) {
				tableColumn= new TableColumn();
				tableColumn.setIdentifier("Plani Vacaciones");
				tableColumn.setHeaderValue("Plani Vacaciones");
				tableColumn.setCellRenderer(new PlaniVacacionTableCell(estructuraConstantesFunciones.resaltarPlaniVacacionEstructura,this,this.estructuraConstantesFunciones.activarPlaniVacacionEstructura));
				tableColumn.setCellEditor(new PlaniVacacionTableCell(estructuraConstantesFunciones.resaltarPlaniVacacionEstructura,this,this.estructuraConstantesFunciones.activarPlaniVacacionEstructura));

				tableColumn.setPreferredWidth(Constantes.ISWING_ANCHO_CONTROL + FuncionesSwing.getValorProporcion(Constantes.ISWING_ANCHO_CONTROL,0));
				tableColumn.setWidth(Constantes.ISWING_ANCHO_CONTROL + FuncionesSwing.getValorProporcion(Constantes.ISWING_ANCHO_CONTROL,0));
				tableColumn.setMinWidth(Constantes.ISWING_ANCHO_CONTROL + FuncionesSwing.getValorProporcion(Constantes.ISWING_ANCHO_CONTROL,0));

				this.iWidthTableDefinicion+=Constantes.ISWING_ANCHO_CONTROL + FuncionesSwing.getValorProporcion(Constantes.ISWING_ANCHO_CONTROL,0);

				this.jTableDatosEstructura.addColumn(tableColumn);
			}

			if(this.isTienePermisosAsistenciaMensual && this.estructuraConstantesFunciones.mostrarAsistenciaMensualEstructura && !EstructuraConstantesFunciones.ISGUARDARREL) {
				tableColumn= new TableColumn();
				tableColumn.setIdentifier("Asistencia Mensuales");
				tableColumn.setHeaderValue("Asistencia Mensuales");
				tableColumn.setCellRenderer(new AsistenciaMensualTableCell(estructuraConstantesFunciones.resaltarAsistenciaMensualEstructura,this,this.estructuraConstantesFunciones.activarAsistenciaMensualEstructura));
				tableColumn.setCellEditor(new AsistenciaMensualTableCell(estructuraConstantesFunciones.resaltarAsistenciaMensualEstructura,this,this.estructuraConstantesFunciones.activarAsistenciaMensualEstructura));

				tableColumn.setPreferredWidth(Constantes.ISWING_ANCHO_CONTROL + FuncionesSwing.getValorProporcion(Constantes.ISWING_ANCHO_CONTROL,0));
				tableColumn.setWidth(Constantes.ISWING_ANCHO_CONTROL + FuncionesSwing.getValorProporcion(Constantes.ISWING_ANCHO_CONTROL,0));
				tableColumn.setMinWidth(Constantes.ISWING_ANCHO_CONTROL + FuncionesSwing.getValorProporcion(Constantes.ISWING_ANCHO_CONTROL,0));

				this.iWidthTableDefinicion+=Constantes.ISWING_ANCHO_CONTROL + FuncionesSwing.getValorProporcion(Constantes.ISWING_ANCHO_CONTROL,0);

				this.jTableDatosEstructura.addColumn(tableColumn);
			}

			if(this.isTienePermisosEmpleadoProcesoRubro && this.estructuraConstantesFunciones.mostrarEmpleadoProcesoRubroEstructura && !EstructuraConstantesFunciones.ISGUARDARREL) {
				tableColumn= new TableColumn();
				tableColumn.setIdentifier("Empleado Proceso Rubros");
				tableColumn.setHeaderValue("Empleado Proceso Rubros");
				tableColumn.setCellRenderer(new EmpleadoProcesoRubroTableCell(estructuraConstantesFunciones.resaltarEmpleadoProcesoRubroEstructura,this,this.estructuraConstantesFunciones.activarEmpleadoProcesoRubroEstructura));
				tableColumn.setCellEditor(new EmpleadoProcesoRubroTableCell(estructuraConstantesFunciones.resaltarEmpleadoProcesoRubroEstructura,this,this.estructuraConstantesFunciones.activarEmpleadoProcesoRubroEstructura));

				tableColumn.setPreferredWidth(Constantes.ISWING_ANCHO_CONTROL + FuncionesSwing.getValorProporcion(Constantes.ISWING_ANCHO_CONTROL,0));
				tableColumn.setWidth(Constantes.ISWING_ANCHO_CONTROL + FuncionesSwing.getValorProporcion(Constantes.ISWING_ANCHO_CONTROL,0));
				tableColumn.setMinWidth(Constantes.ISWING_ANCHO_CONTROL + FuncionesSwing.getValorProporcion(Constantes.ISWING_ANCHO_CONTROL,0));

				this.iWidthTableDefinicion+=Constantes.ISWING_ANCHO_CONTROL + FuncionesSwing.getValorProporcion(Constantes.ISWING_ANCHO_CONTROL,0);

				this.jTableDatosEstructura.addColumn(tableColumn);
			}

			if(this.isTienePermisosEmpleadoPagoRubro && this.estructuraConstantesFunciones.mostrarEmpleadoPagoRubroEstructura && !EstructuraConstantesFunciones.ISGUARDARREL) {
				tableColumn= new TableColumn();
				tableColumn.setIdentifier("Empleado Pago Rubros");
				tableColumn.setHeaderValue("Empleado Pago Rubros");
				tableColumn.setCellRenderer(new EmpleadoPagoRubroTableCell(estructuraConstantesFunciones.resaltarEmpleadoPagoRubroEstructura,this,this.estructuraConstantesFunciones.activarEmpleadoPagoRubroEstructura));
				tableColumn.setCellEditor(new EmpleadoPagoRubroTableCell(estructuraConstantesFunciones.resaltarEmpleadoPagoRubroEstructura,this,this.estructuraConstantesFunciones.activarEmpleadoPagoRubroEstructura));

				tableColumn.setPreferredWidth(Constantes.ISWING_ANCHO_CONTROL + FuncionesSwing.getValorProporcion(Constantes.ISWING_ANCHO_CONTROL,0));
				tableColumn.setWidth(Constantes.ISWING_ANCHO_CONTROL + FuncionesSwing.getValorProporcion(Constantes.ISWING_ANCHO_CONTROL,0));
				tableColumn.setMinWidth(Constantes.ISWING_ANCHO_CONTROL + FuncionesSwing.getValorProporcion(Constantes.ISWING_ANCHO_CONTROL,0));

				this.iWidthTableDefinicion+=Constantes.ISWING_ANCHO_CONTROL + FuncionesSwing.getValorProporcion(Constantes.ISWING_ANCHO_CONTROL,0);

				this.jTableDatosEstructura.addColumn(tableColumn);
			}

			if(this.isTienePermisosProvisionEmpleado && this.estructuraConstantesFunciones.mostrarProvisionEmpleadoEstructura && !EstructuraConstantesFunciones.ISGUARDARREL) {
				tableColumn= new TableColumn();
				tableColumn.setIdentifier("Provision Empleados");
				tableColumn.setHeaderValue("Provision Empleados");
				tableColumn.setCellRenderer(new ProvisionEmpleadoTableCell(estructuraConstantesFunciones.resaltarProvisionEmpleadoEstructura,this,this.estructuraConstantesFunciones.activarProvisionEmpleadoEstructura));
				tableColumn.setCellEditor(new ProvisionEmpleadoTableCell(estructuraConstantesFunciones.resaltarProvisionEmpleadoEstructura,this,this.estructuraConstantesFunciones.activarProvisionEmpleadoEstructura));

				tableColumn.setPreferredWidth(Constantes.ISWING_ANCHO_CONTROL + FuncionesSwing.getValorProporcion(Constantes.ISWING_ANCHO_CONTROL,0));
				tableColumn.setWidth(Constantes.ISWING_ANCHO_CONTROL + FuncionesSwing.getValorProporcion(Constantes.ISWING_ANCHO_CONTROL,0));
				tableColumn.setMinWidth(Constantes.ISWING_ANCHO_CONTROL + FuncionesSwing.getValorProporcion(Constantes.ISWING_ANCHO_CONTROL,0));

				this.iWidthTableDefinicion+=Constantes.ISWING_ANCHO_CONTROL + FuncionesSwing.getValorProporcion(Constantes.ISWING_ANCHO_CONTROL,0);

				this.jTableDatosEstructura.addColumn(tableColumn);
			}

			if(this.isTienePermisosEmpleado && this.estructuraConstantesFunciones.mostrarEmpleadoEstructura && !EstructuraConstantesFunciones.ISGUARDARREL) {
				tableColumn= new TableColumn();
				tableColumn.setIdentifier("Empleados");
				tableColumn.setHeaderValue("Empleados");
				tableColumn.setCellRenderer(new EmpleadoTableCell(estructuraConstantesFunciones.resaltarEmpleadoEstructura,this,this.estructuraConstantesFunciones.activarEmpleadoEstructura));
				tableColumn.setCellEditor(new EmpleadoTableCell(estructuraConstantesFunciones.resaltarEmpleadoEstructura,this,this.estructuraConstantesFunciones.activarEmpleadoEstructura));

				tableColumn.setPreferredWidth(Constantes.ISWING_ANCHO_CONTROL + FuncionesSwing.getValorProporcion(Constantes.ISWING_ANCHO_CONTROL,0));
				tableColumn.setWidth(Constantes.ISWING_ANCHO_CONTROL + FuncionesSwing.getValorProporcion(Constantes.ISWING_ANCHO_CONTROL,0));
				tableColumn.setMinWidth(Constantes.ISWING_ANCHO_CONTROL + FuncionesSwing.getValorProporcion(Constantes.ISWING_ANCHO_CONTROL,0));

				this.iWidthTableDefinicion+=Constantes.ISWING_ANCHO_CONTROL + FuncionesSwing.getValorProporcion(Constantes.ISWING_ANCHO_CONTROL,0);

				this.jTableDatosEstructura.addColumn(tableColumn);
			}

			if(this.isTienePermisosEstructura && this.estructuraConstantesFunciones.mostrarEstructuraEstructura && !EstructuraConstantesFunciones.ISGUARDARREL) {
				tableColumn= new TableColumn();
				tableColumn.setIdentifier("Estructuras");
				tableColumn.setHeaderValue("Estructuras");
				tableColumn.setCellRenderer(new EstructuraTableCell(estructuraConstantesFunciones.resaltarEstructuraEstructura,this,this.estructuraConstantesFunciones.activarEstructuraEstructura));
				tableColumn.setCellEditor(new EstructuraTableCell(estructuraConstantesFunciones.resaltarEstructuraEstructura,this,this.estructuraConstantesFunciones.activarEstructuraEstructura));

				tableColumn.setPreferredWidth(Constantes.ISWING_ANCHO_CONTROL + FuncionesSwing.getValorProporcion(Constantes.ISWING_ANCHO_CONTROL,0));
				tableColumn.setWidth(Constantes.ISWING_ANCHO_CONTROL + FuncionesSwing.getValorProporcion(Constantes.ISWING_ANCHO_CONTROL,0));
				tableColumn.setMinWidth(Constantes.ISWING_ANCHO_CONTROL + FuncionesSwing.getValorProporcion(Constantes.ISWING_ANCHO_CONTROL,0));

				this.iWidthTableDefinicion+=Constantes.ISWING_ANCHO_CONTROL + FuncionesSwing.getValorProporcion(Constantes.ISWING_ANCHO_CONTROL,0);

				this.jTableDatosEstructura.addColumn(tableColumn);
			}

			if(this.isTienePermisosEvaluacionEmpleado && this.estructuraConstantesFunciones.mostrarEvaluacionEmpleadoEstructura && !EstructuraConstantesFunciones.ISGUARDARREL) {
				tableColumn= new TableColumn();
				tableColumn.setIdentifier("Evaluacion Empleados");
				tableColumn.setHeaderValue("Evaluacion Empleados");
				tableColumn.setCellRenderer(new EvaluacionEmpleadoTableCell(estructuraConstantesFunciones.resaltarEvaluacionEmpleadoEstructura,this,this.estructuraConstantesFunciones.activarEvaluacionEmpleadoEstructura));
				tableColumn.setCellEditor(new EvaluacionEmpleadoTableCell(estructuraConstantesFunciones.resaltarEvaluacionEmpleadoEstructura,this,this.estructuraConstantesFunciones.activarEvaluacionEmpleadoEstructura));

				tableColumn.setPreferredWidth(Constantes.ISWING_ANCHO_CONTROL + FuncionesSwing.getValorProporcion(Constantes.ISWING_ANCHO_CONTROL,0));
				tableColumn.setWidth(Constantes.ISWING_ANCHO_CONTROL + FuncionesSwing.getValorProporcion(Constantes.ISWING_ANCHO_CONTROL,0));
				tableColumn.setMinWidth(Constantes.ISWING_ANCHO_CONTROL + FuncionesSwing.getValorProporcion(Constantes.ISWING_ANCHO_CONTROL,0));

				this.iWidthTableDefinicion+=Constantes.ISWING_ANCHO_CONTROL + FuncionesSwing.getValorProporcion(Constantes.ISWING_ANCHO_CONTROL,0);

				this.jTableDatosEstructura.addColumn(tableColumn);
			}

			if(this.isTienePermisosEmpleadoImpuestoRenta && this.estructuraConstantesFunciones.mostrarEmpleadoImpuestoRentaEstructura && !EstructuraConstantesFunciones.ISGUARDARREL) {
				tableColumn= new TableColumn();
				tableColumn.setIdentifier("Empleado Impuesto Rentas");
				tableColumn.setHeaderValue("Empleado Impuesto Rentas");
				tableColumn.setCellRenderer(new EmpleadoImpuestoRentaTableCell(estructuraConstantesFunciones.resaltarEmpleadoImpuestoRentaEstructura,this,this.estructuraConstantesFunciones.activarEmpleadoImpuestoRentaEstructura));
				tableColumn.setCellEditor(new EmpleadoImpuestoRentaTableCell(estructuraConstantesFunciones.resaltarEmpleadoImpuestoRentaEstructura,this,this.estructuraConstantesFunciones.activarEmpleadoImpuestoRentaEstructura));

				tableColumn.setPreferredWidth(Constantes.ISWING_ANCHO_CONTROL + FuncionesSwing.getValorProporcion(Constantes.ISWING_ANCHO_CONTROL,0));
				tableColumn.setWidth(Constantes.ISWING_ANCHO_CONTROL + FuncionesSwing.getValorProporcion(Constantes.ISWING_ANCHO_CONTROL,0));
				tableColumn.setMinWidth(Constantes.ISWING_ANCHO_CONTROL + FuncionesSwing.getValorProporcion(Constantes.ISWING_ANCHO_CONTROL,0));

				this.iWidthTableDefinicion+=Constantes.ISWING_ANCHO_CONTROL + FuncionesSwing.getValorProporcion(Constantes.ISWING_ANCHO_CONTROL,0);

				this.jTableDatosEstructura.addColumn(tableColumn);
			}

			if(this.isTienePermisosRubroEstructura && this.estructuraConstantesFunciones.mostrarRubroEstructuraEstructura && !EstructuraConstantesFunciones.ISGUARDARREL) {
				tableColumn= new TableColumn();
				tableColumn.setIdentifier("Rubro Estructuras");
				tableColumn.setHeaderValue("Rubro Estructuras");
				tableColumn.setCellRenderer(new RubroEstructuraTableCell(estructuraConstantesFunciones.resaltarRubroEstructuraEstructura,this,this.estructuraConstantesFunciones.activarRubroEstructuraEstructura));
				tableColumn.setCellEditor(new RubroEstructuraTableCell(estructuraConstantesFunciones.resaltarRubroEstructuraEstructura,this,this.estructuraConstantesFunciones.activarRubroEstructuraEstructura));

				tableColumn.setPreferredWidth(Constantes.ISWING_ANCHO_CONTROL + FuncionesSwing.getValorProporcion(Constantes.ISWING_ANCHO_CONTROL,0));
				tableColumn.setWidth(Constantes.ISWING_ANCHO_CONTROL + FuncionesSwing.getValorProporcion(Constantes.ISWING_ANCHO_CONTROL,0));
				tableColumn.setMinWidth(Constantes.ISWING_ANCHO_CONTROL + FuncionesSwing.getValorProporcion(Constantes.ISWING_ANCHO_CONTROL,0));

				this.iWidthTableDefinicion+=Constantes.ISWING_ANCHO_CONTROL + FuncionesSwing.getValorProporcion(Constantes.ISWING_ANCHO_CONTROL,0);

				this.jTableDatosEstructura.addColumn(tableColumn);
			}

			if(this.isTienePermisosCierreRolMensual && this.estructuraConstantesFunciones.mostrarCierreRolMensualEstructura && !EstructuraConstantesFunciones.ISGUARDARREL) {
				tableColumn= new TableColumn();
				tableColumn.setIdentifier("Cierre Rol Mensuales");
				tableColumn.setHeaderValue("Cierre Rol Mensuales");
				tableColumn.setCellRenderer(new CierreRolMensualTableCell(estructuraConstantesFunciones.resaltarCierreRolMensualEstructura,this,this.estructuraConstantesFunciones.activarCierreRolMensualEstructura));
				tableColumn.setCellEditor(new CierreRolMensualTableCell(estructuraConstantesFunciones.resaltarCierreRolMensualEstructura,this,this.estructuraConstantesFunciones.activarCierreRolMensualEstructura));

				tableColumn.setPreferredWidth(Constantes.ISWING_ANCHO_CONTROL + FuncionesSwing.getValorProporcion(Constantes.ISWING_ANCHO_CONTROL,0));
				tableColumn.setWidth(Constantes.ISWING_ANCHO_CONTROL + FuncionesSwing.getValorProporcion(Constantes.ISWING_ANCHO_CONTROL,0));
				tableColumn.setMinWidth(Constantes.ISWING_ANCHO_CONTROL + FuncionesSwing.getValorProporcion(Constantes.ISWING_ANCHO_CONTROL,0));

				this.iWidthTableDefinicion+=Constantes.ISWING_ANCHO_CONTROL + FuncionesSwing.getValorProporcion(Constantes.ISWING_ANCHO_CONTROL,0);

				this.jTableDatosEstructura.addColumn(tableColumn);
			}

			if(this.isTienePermisosFormatoNomi && this.estructuraConstantesFunciones.mostrarFormatoNomiEstructura && !EstructuraConstantesFunciones.ISGUARDARREL) {
				tableColumn= new TableColumn();
				tableColumn.setIdentifier("Formato Nomis");
				tableColumn.setHeaderValue("Formato Nomis");
				tableColumn.setCellRenderer(new FormatoNomiTableCell(estructuraConstantesFunciones.resaltarFormatoNomiEstructura,this,this.estructuraConstantesFunciones.activarFormatoNomiEstructura));
				tableColumn.setCellEditor(new FormatoNomiTableCell(estructuraConstantesFunciones.resaltarFormatoNomiEstructura,this,this.estructuraConstantesFunciones.activarFormatoNomiEstructura));

				tableColumn.setPreferredWidth(Constantes.ISWING_ANCHO_CONTROL + FuncionesSwing.getValorProporcion(Constantes.ISWING_ANCHO_CONTROL,0));
				tableColumn.setWidth(Constantes.ISWING_ANCHO_CONTROL + FuncionesSwing.getValorProporcion(Constantes.ISWING_ANCHO_CONTROL,0));
				tableColumn.setMinWidth(Constantes.ISWING_ANCHO_CONTROL + FuncionesSwing.getValorProporcion(Constantes.ISWING_ANCHO_CONTROL,0));

				this.iWidthTableDefinicion+=Constantes.ISWING_ANCHO_CONTROL + FuncionesSwing.getValorProporcion(Constantes.ISWING_ANCHO_CONTROL,0);

				this.jTableDatosEstructura.addColumn(tableColumn);
			}

			if(this.isTienePermisosEmpleadoEstructura && this.estructuraConstantesFunciones.mostrarEmpleadoEstructuraEstructura && !EstructuraConstantesFunciones.ISGUARDARREL) {
				tableColumn= new TableColumn();
				tableColumn.setIdentifier("Empleado Estructuras");
				tableColumn.setHeaderValue("Empleado Estructuras");
				tableColumn.setCellRenderer(new EmpleadoEstructuraTableCell(estructuraConstantesFunciones.resaltarEmpleadoEstructuraEstructura,this,this.estructuraConstantesFunciones.activarEmpleadoEstructuraEstructura));
				tableColumn.setCellEditor(new EmpleadoEstructuraTableCell(estructuraConstantesFunciones.resaltarEmpleadoEstructuraEstructura,this,this.estructuraConstantesFunciones.activarEmpleadoEstructuraEstructura));

				tableColumn.setPreferredWidth(Constantes.ISWING_ANCHO_CONTROL + FuncionesSwing.getValorProporcion(Constantes.ISWING_ANCHO_CONTROL,0));
				tableColumn.setWidth(Constantes.ISWING_ANCHO_CONTROL + FuncionesSwing.getValorProporcion(Constantes.ISWING_ANCHO_CONTROL,0));
				tableColumn.setMinWidth(Constantes.ISWING_ANCHO_CONTROL + FuncionesSwing.getValorProporcion(Constantes.ISWING_ANCHO_CONTROL,0));

				this.iWidthTableDefinicion+=Constantes.ISWING_ANCHO_CONTROL + FuncionesSwing.getValorProporcion(Constantes.ISWING_ANCHO_CONTROL,0);

				this.jTableDatosEstructura.addColumn(tableColumn);
			}

			if(this.isTienePermisosHistorialPagoNomi && this.estructuraConstantesFunciones.mostrarHistorialPagoNomiEstructura && !EstructuraConstantesFunciones.ISGUARDARREL) {
				tableColumn= new TableColumn();
				tableColumn.setIdentifier("Historial Pago Nomis");
				tableColumn.setHeaderValue("Historial Pago Nomis");
				tableColumn.setCellRenderer(new HistorialPagoNomiTableCell(estructuraConstantesFunciones.resaltarHistorialPagoNomiEstructura,this,this.estructuraConstantesFunciones.activarHistorialPagoNomiEstructura));
				tableColumn.setCellEditor(new HistorialPagoNomiTableCell(estructuraConstantesFunciones.resaltarHistorialPagoNomiEstructura,this,this.estructuraConstantesFunciones.activarHistorialPagoNomiEstructura));

				tableColumn.setPreferredWidth(Constantes.ISWING_ANCHO_CONTROL + FuncionesSwing.getValorProporcion(Constantes.ISWING_ANCHO_CONTROL,0));
				tableColumn.setWidth(Constantes.ISWING_ANCHO_CONTROL + FuncionesSwing.getValorProporcion(Constantes.ISWING_ANCHO_CONTROL,0));
				tableColumn.setMinWidth(Constantes.ISWING_ANCHO_CONTROL + FuncionesSwing.getValorProporcion(Constantes.ISWING_ANCHO_CONTROL,0));

				this.iWidthTableDefinicion+=Constantes.ISWING_ANCHO_CONTROL + FuncionesSwing.getValorProporcion(Constantes.ISWING_ANCHO_CONTROL,0);

				this.jTableDatosEstructura.addColumn(tableColumn);
			}

			if(this.isTienePermisosAsistenciaDiaria && this.estructuraConstantesFunciones.mostrarAsistenciaDiariaEstructura && !EstructuraConstantesFunciones.ISGUARDARREL) {
				tableColumn= new TableColumn();
				tableColumn.setIdentifier("Asistencia Diarias");
				tableColumn.setHeaderValue("Asistencia Diarias");
				tableColumn.setCellRenderer(new AsistenciaDiariaTableCell(estructuraConstantesFunciones.resaltarAsistenciaDiariaEstructura,this,this.estructuraConstantesFunciones.activarAsistenciaDiariaEstructura));
				tableColumn.setCellEditor(new AsistenciaDiariaTableCell(estructuraConstantesFunciones.resaltarAsistenciaDiariaEstructura,this,this.estructuraConstantesFunciones.activarAsistenciaDiariaEstructura));

				tableColumn.setPreferredWidth(Constantes.ISWING_ANCHO_CONTROL + FuncionesSwing.getValorProporcion(Constantes.ISWING_ANCHO_CONTROL,0));
				tableColumn.setWidth(Constantes.ISWING_ANCHO_CONTROL + FuncionesSwing.getValorProporcion(Constantes.ISWING_ANCHO_CONTROL,0));
				tableColumn.setMinWidth(Constantes.ISWING_ANCHO_CONTROL + FuncionesSwing.getValorProporcion(Constantes.ISWING_ANCHO_CONTROL,0));

				this.iWidthTableDefinicion+=Constantes.ISWING_ANCHO_CONTROL + FuncionesSwing.getValorProporcion(Constantes.ISWING_ANCHO_CONTROL,0);

				this.jTableDatosEstructura.addColumn(tableColumn);
			}

			if(this.isTienePermisosFuncionEstruc && this.estructuraConstantesFunciones.mostrarFuncionEstrucEstructura && !EstructuraConstantesFunciones.ISGUARDARREL) {
				tableColumn= new TableColumn();
				tableColumn.setIdentifier("Funcion Estruces");
				tableColumn.setHeaderValue("Funcion Estruces");
				tableColumn.setCellRenderer(new FuncionEstrucTableCell(estructuraConstantesFunciones.resaltarFuncionEstrucEstructura,this,this.estructuraConstantesFunciones.activarFuncionEstrucEstructura));
				tableColumn.setCellEditor(new FuncionEstrucTableCell(estructuraConstantesFunciones.resaltarFuncionEstrucEstructura,this,this.estructuraConstantesFunciones.activarFuncionEstrucEstructura));

				tableColumn.setPreferredWidth(Constantes.ISWING_ANCHO_CONTROL + FuncionesSwing.getValorProporcion(Constantes.ISWING_ANCHO_CONTROL,0));
				tableColumn.setWidth(Constantes.ISWING_ANCHO_CONTROL + FuncionesSwing.getValorProporcion(Constantes.ISWING_ANCHO_CONTROL,0));
				tableColumn.setMinWidth(Constantes.ISWING_ANCHO_CONTROL + FuncionesSwing.getValorProporcion(Constantes.ISWING_ANCHO_CONTROL,0));

				this.iWidthTableDefinicion+=Constantes.ISWING_ANCHO_CONTROL + FuncionesSwing.getValorProporcion(Constantes.ISWING_ANCHO_CONTROL,0);

				this.jTableDatosEstructura.addColumn(tableColumn);
			}

			if(this.isTienePermisosSolicitudReemplazo && this.estructuraConstantesFunciones.mostrarSolicitudReemplazoEstructura && !EstructuraConstantesFunciones.ISGUARDARREL) {
				tableColumn= new TableColumn();
				tableColumn.setIdentifier("Solicitud Reemplazos");
				tableColumn.setHeaderValue("Solicitud Reemplazos");
				tableColumn.setCellRenderer(new SolicitudReemplazoTableCell(estructuraConstantesFunciones.resaltarSolicitudReemplazoEstructura,this,this.estructuraConstantesFunciones.activarSolicitudReemplazoEstructura));
				tableColumn.setCellEditor(new SolicitudReemplazoTableCell(estructuraConstantesFunciones.resaltarSolicitudReemplazoEstructura,this,this.estructuraConstantesFunciones.activarSolicitudReemplazoEstructura));

				tableColumn.setPreferredWidth(Constantes.ISWING_ANCHO_CONTROL + FuncionesSwing.getValorProporcion(Constantes.ISWING_ANCHO_CONTROL,0));
				tableColumn.setWidth(Constantes.ISWING_ANCHO_CONTROL + FuncionesSwing.getValorProporcion(Constantes.ISWING_ANCHO_CONTROL,0));
				tableColumn.setMinWidth(Constantes.ISWING_ANCHO_CONTROL + FuncionesSwing.getValorProporcion(Constantes.ISWING_ANCHO_CONTROL,0));

				this.iWidthTableDefinicion+=Constantes.ISWING_ANCHO_CONTROL + FuncionesSwing.getValorProporcion(Constantes.ISWING_ANCHO_CONTROL,0);

				this.jTableDatosEstructura.addColumn(tableColumn);
			}

			if(this.isTienePermisosSolicitudHoraExtra && this.estructuraConstantesFunciones.mostrarSolicitudHoraExtraEstructura && !EstructuraConstantesFunciones.ISGUARDARREL) {
				tableColumn= new TableColumn();
				tableColumn.setIdentifier("Solicitud Hora Extras");
				tableColumn.setHeaderValue("Solicitud Hora Extras");
				tableColumn.setCellRenderer(new SolicitudHoraExtraTableCell(estructuraConstantesFunciones.resaltarSolicitudHoraExtraEstructura,this,this.estructuraConstantesFunciones.activarSolicitudHoraExtraEstructura));
				tableColumn.setCellEditor(new SolicitudHoraExtraTableCell(estructuraConstantesFunciones.resaltarSolicitudHoraExtraEstructura,this,this.estructuraConstantesFunciones.activarSolicitudHoraExtraEstructura));

				tableColumn.setPreferredWidth(Constantes.ISWING_ANCHO_CONTROL + FuncionesSwing.getValorProporcion(Constantes.ISWING_ANCHO_CONTROL,0));
				tableColumn.setWidth(Constantes.ISWING_ANCHO_CONTROL + FuncionesSwing.getValorProporcion(Constantes.ISWING_ANCHO_CONTROL,0));
				tableColumn.setMinWidth(Constantes.ISWING_ANCHO_CONTROL + FuncionesSwing.getValorProporcion(Constantes.ISWING_ANCHO_CONTROL,0));

				this.iWidthTableDefinicion+=Constantes.ISWING_ANCHO_CONTROL + FuncionesSwing.getValorProporcion(Constantes.ISWING_ANCHO_CONTROL,0);

				this.jTableDatosEstructura.addColumn(tableColumn);
			}

			if(this.isTienePermisosEvaluacionNomi && this.estructuraConstantesFunciones.mostrarEvaluacionNomiEstructura && !EstructuraConstantesFunciones.ISGUARDARREL) {
				tableColumn= new TableColumn();
				tableColumn.setIdentifier("Evaluacion Nomis");
				tableColumn.setHeaderValue("Evaluacion Nomis");
				tableColumn.setCellRenderer(new EvaluacionNomiTableCell(estructuraConstantesFunciones.resaltarEvaluacionNomiEstructura,this,this.estructuraConstantesFunciones.activarEvaluacionNomiEstructura));
				tableColumn.setCellEditor(new EvaluacionNomiTableCell(estructuraConstantesFunciones.resaltarEvaluacionNomiEstructura,this,this.estructuraConstantesFunciones.activarEvaluacionNomiEstructura));

				tableColumn.setPreferredWidth(Constantes.ISWING_ANCHO_CONTROL + FuncionesSwing.getValorProporcion(Constantes.ISWING_ANCHO_CONTROL,0));
				tableColumn.setWidth(Constantes.ISWING_ANCHO_CONTROL + FuncionesSwing.getValorProporcion(Constantes.ISWING_ANCHO_CONTROL,0));
				tableColumn.setMinWidth(Constantes.ISWING_ANCHO_CONTROL + FuncionesSwing.getValorProporcion(Constantes.ISWING_ANCHO_CONTROL,0));

				this.iWidthTableDefinicion+=Constantes.ISWING_ANCHO_CONTROL + FuncionesSwing.getValorProporcion(Constantes.ISWING_ANCHO_CONTROL,0);

				this.jTableDatosEstructura.addColumn(tableColumn);
			}

			if(this.isTienePermisosSolicitudVacacion && this.estructuraConstantesFunciones.mostrarSolicitudVacacionEstructura && !EstructuraConstantesFunciones.ISGUARDARREL) {
				tableColumn= new TableColumn();
				tableColumn.setIdentifier("Solicitud Vacaciones");
				tableColumn.setHeaderValue("Solicitud Vacaciones");
				tableColumn.setCellRenderer(new SolicitudVacacionTableCell(estructuraConstantesFunciones.resaltarSolicitudVacacionEstructura,this,this.estructuraConstantesFunciones.activarSolicitudVacacionEstructura));
				tableColumn.setCellEditor(new SolicitudVacacionTableCell(estructuraConstantesFunciones.resaltarSolicitudVacacionEstructura,this,this.estructuraConstantesFunciones.activarSolicitudVacacionEstructura));

				tableColumn.setPreferredWidth(Constantes.ISWING_ANCHO_CONTROL + FuncionesSwing.getValorProporcion(Constantes.ISWING_ANCHO_CONTROL,0));
				tableColumn.setWidth(Constantes.ISWING_ANCHO_CONTROL + FuncionesSwing.getValorProporcion(Constantes.ISWING_ANCHO_CONTROL,0));
				tableColumn.setMinWidth(Constantes.ISWING_ANCHO_CONTROL + FuncionesSwing.getValorProporcion(Constantes.ISWING_ANCHO_CONTROL,0));

				this.iWidthTableDefinicion+=Constantes.ISWING_ANCHO_CONTROL + FuncionesSwing.getValorProporcion(Constantes.ISWING_ANCHO_CONTROL,0);

				this.jTableDatosEstructura.addColumn(tableColumn);
			}

			if(this.isTienePermisosResponsableActivoFijo && this.estructuraConstantesFunciones.mostrarResponsableActivoFijoEstructura && !EstructuraConstantesFunciones.ISGUARDARREL) {
				tableColumn= new TableColumn();
				tableColumn.setIdentifier("Responsable Activo Fijos");
				tableColumn.setHeaderValue("Responsable Activo Fijos");
				tableColumn.setCellRenderer(new ResponsableActivoFijoTableCell(estructuraConstantesFunciones.resaltarResponsableActivoFijoEstructura,this,this.estructuraConstantesFunciones.activarResponsableActivoFijoEstructura));
				tableColumn.setCellEditor(new ResponsableActivoFijoTableCell(estructuraConstantesFunciones.resaltarResponsableActivoFijoEstructura,this,this.estructuraConstantesFunciones.activarResponsableActivoFijoEstructura));

				tableColumn.setPreferredWidth(Constantes.ISWING_ANCHO_CONTROL + FuncionesSwing.getValorProporcion(Constantes.ISWING_ANCHO_CONTROL,0));
				tableColumn.setWidth(Constantes.ISWING_ANCHO_CONTROL + FuncionesSwing.getValorProporcion(Constantes.ISWING_ANCHO_CONTROL,0));
				tableColumn.setMinWidth(Constantes.ISWING_ANCHO_CONTROL + FuncionesSwing.getValorProporcion(Constantes.ISWING_ANCHO_CONTROL,0));

				this.iWidthTableDefinicion+=Constantes.ISWING_ANCHO_CONTROL + FuncionesSwing.getValorProporcion(Constantes.ISWING_ANCHO_CONTROL,0);

				this.jTableDatosEstructura.addColumn(tableColumn);
			}

			if(this.isTienePermisosRubroEmpleaCuentaContable && this.estructuraConstantesFunciones.mostrarRubroEmpleaCuentaContableEstructura && !EstructuraConstantesFunciones.ISGUARDARREL) {
				tableColumn= new TableColumn();
				tableColumn.setIdentifier("Rubro Emplea Cuenta Contables");
				tableColumn.setHeaderValue("Rubro Emplea Cuenta Contables");
				tableColumn.setCellRenderer(new RubroEmpleaCuentaContableTableCell(estructuraConstantesFunciones.resaltarRubroEmpleaCuentaContableEstructura,this,this.estructuraConstantesFunciones.activarRubroEmpleaCuentaContableEstructura));
				tableColumn.setCellEditor(new RubroEmpleaCuentaContableTableCell(estructuraConstantesFunciones.resaltarRubroEmpleaCuentaContableEstructura,this,this.estructuraConstantesFunciones.activarRubroEmpleaCuentaContableEstructura));

				tableColumn.setPreferredWidth(Constantes.ISWING_ANCHO_CONTROL + FuncionesSwing.getValorProporcion(Constantes.ISWING_ANCHO_CONTROL,0));
				tableColumn.setWidth(Constantes.ISWING_ANCHO_CONTROL + FuncionesSwing.getValorProporcion(Constantes.ISWING_ANCHO_CONTROL,0));
				tableColumn.setMinWidth(Constantes.ISWING_ANCHO_CONTROL + FuncionesSwing.getValorProporcion(Constantes.ISWING_ANCHO_CONTROL,0));

				this.iWidthTableDefinicion+=Constantes.ISWING_ANCHO_CONTROL + FuncionesSwing.getValorProporcion(Constantes.ISWING_ANCHO_CONTROL,0);

				this.jTableDatosEstructura.addColumn(tableColumn);
			}
		}
		
		if(true) {
			String sLabelColumnAccion="Editar";
			String sLabelColumnAccionEli="Eli";
			
			if(this.esParaBusquedaForeignKey)  {
				sLabelColumnAccion="Seleccionar";
				
				//LO MISMO QUE ELSE
				tableColumn= new TableColumn();
				tableColumn.setIdentifier(sLabelColumnAccion);
				tableColumn.setHeaderValue(sLabelColumnAccion);
				tableColumn.setCellRenderer(new IdTableCell(this,false,false,this.estructuraSessionBean.getEsGuardarRelacionado(),iSizeTabla));
				tableColumn.setCellEditor(new IdTableCell(this,false,false,this.estructuraSessionBean.getEsGuardarRelacionado(),iSizeTabla));
	
				tableColumn.setPreferredWidth(Constantes.ISWING_ANCHO_COLUMNA); 	 
				tableColumn.setWidth(Constantes.ISWING_ANCHO_COLUMNA); 	 
				tableColumn.setMinWidth(Constantes.ISWING_ANCHO_COLUMNA); 
				tableColumn.setMaxWidth(Constantes.ISWING_ANCHO_COLUMNA); 
				
				this.iWidthTableDefinicion+=Constantes.ISWING_ANCHO_COLUMNA;
				
				this.jTableDatosEstructura.addColumn(tableColumn);
			
			} else {				
				
				//LO MISMO QUE IF
				
				tableColumn= new TableColumn();
				tableColumn.setIdentifier(sLabelColumnAccion);
				tableColumn.setHeaderValue(sLabelColumnAccion);
				tableColumn.setCellRenderer(new IdTableCell(this,false,false,this.estructuraSessionBean.getEsGuardarRelacionado(),iSizeTabla));
				tableColumn.setCellEditor(new IdTableCell(this,false,false,this.estructuraSessionBean.getEsGuardarRelacionado(),iSizeTabla));
		
				tableColumn.setPreferredWidth(Constantes.ISWING_ANCHO_COLUMNA); 	 
				tableColumn.setWidth(Constantes.ISWING_ANCHO_COLUMNA); 	 
				tableColumn.setMinWidth(Constantes.ISWING_ANCHO_COLUMNA); 
				tableColumn.setMaxWidth(Constantes.ISWING_ANCHO_COLUMNA); 
				
				this.iWidthTableDefinicion+=Constantes.ISWING_ANCHO_COLUMNA;
				
				this.jTableDatosEstructura.addColumn(tableColumn);				
					
				//ELIMINAR
				if(this.isPermisoEliminarEstructura && this.isPermisoGuardarCambiosEstructura) {
					tableColumn= new TableColumn();
					tableColumn.setIdentifier(Constantes2.S_ELI);
					tableColumn.setHeaderValue(sLabelColumnAccionEli);
					tableColumn.setCellRenderer(new IdTableCell(this,false,true,this.estructuraSessionBean.getEsGuardarRelacionado(),iSizeTabla));
					tableColumn.setCellEditor(new IdTableCell(this,false,true,this.estructuraSessionBean.getEsGuardarRelacionado(),iSizeTabla));
			
					tableColumn.setPreferredWidth(65); 	 
					tableColumn.setWidth(65); 	 
					tableColumn.setMinWidth(65); 
					tableColumn.setMaxWidth(65);
					
					this.iWidthTableDefinicion+=65;
						
					this.jTableDatosEstructura.addColumn(tableColumn);
				}
			}			
						
			if(this.conMaximoRelaciones && this.estructuraSessionBean.getConGuardarRelaciones()) {
				if(this.conFuncionalidadRelaciones) {
					tableColumn= new TableColumn();
					tableColumn.setIdentifier("Editar Rel");
					tableColumn.setHeaderValue("Editar Rel");
					tableColumn.setCellRenderer(new IdTableCell(this,true,false,iSizeTabla));
					tableColumn.setCellEditor(new IdTableCell(this,true,false,iSizeTabla));
		
					tableColumn.setPreferredWidth(Constantes.ISWING_ANCHO_COLUMNA); 	 
					tableColumn.setWidth(Constantes.ISWING_ANCHO_COLUMNA); 	 
					tableColumn.setMinWidth(Constantes.ISWING_ANCHO_COLUMNA); 
					tableColumn.setMaxWidth(Constantes.ISWING_ANCHO_COLUMNA); 
					
					this.iWidthTableDefinicion+=Constantes.ISWING_ANCHO_COLUMNA;
				
					this.jTableDatosEstructura.addColumn(tableColumn);
				}
			}
			
			/*
			tableColumn= new TableColumn();
			tableColumn.setIdentifier(Constantes2.S_SELECCIONAR);
			tableColumn.setHeaderValue(Constantes2.S_SELECCIONAR);
			tableColumn.setCellRenderer(new IdSeleccionarTableCell(this));
			tableColumn.setCellEditor(new IdSeleccionarTableCell(this));
			
			tableColumn.setPreferredWidth(30); 	 
			tableColumn.setWidth(30); 	 
			tableColumn.setMinWidth(30); 
			
			this.iWidthTableDefinicion+=30;
			
			this.jTableDatosEstructura.addColumn(tableColumn);
			*/
		}
		
		Integer iUltimaColumna=0;//1
		Integer iNuevaPosicionColumna=0;
		
		
		//PERMITE ELIMINAR SIMPLE
		if(!this.esParaBusquedaForeignKey)  {
			if(this.isPermisoEliminarEstructura && this.isPermisoGuardarCambiosEstructura) {
				iUltimaColumna++;
			}	
		}
		
		//PERMITE EDITAR SIMPLE
		iUltimaColumna++;	
		
				
		if(this.conFuncionalidadRelaciones) {
			if(this.conMaximoRelaciones && this.estructuraSessionBean.getConGuardarRelaciones()) {			
				//PERMITE EDITAR RELACIONES
				iUltimaColumna++;//2
			}
		}
		
		//MOVIA SELECCIONAR
		//iUltimaColumna++;
		
		if(!this.esParaBusquedaForeignKey)  {
			if(this.isPermisoEliminarEstructura && this.isPermisoGuardarCambiosEstructura) {
				//REUBICA ELIMINAR SIMPLE
				jTableDatosEstructura.moveColumn(this.jTableDatosEstructura.getColumnModel().getColumnCount()-iUltimaColumna, iNuevaPosicionColumna++);//-1,-2 o -3
					
				iUltimaColumna--;
			}
		}
		//REUBICA EDITAR SIMPLE
		jTableDatosEstructura.moveColumn(this.jTableDatosEstructura.getColumnModel().getColumnCount()-iUltimaColumna, iNuevaPosicionColumna++);//-1,-2 o -3				
		
		
		if(this.conFuncionalidadRelaciones) {
			if(this.conMaximoRelaciones && this.estructuraSessionBean.getConGuardarRelaciones()) {	
				if(iUltimaColumna>1) {
					iUltimaColumna--;
				}
				
				//iNuevaPosicionColumna++;
				
				//REUBICA EDITAR RELACIONES
				jTableDatosEstructura.moveColumn(this.jTableDatosEstructura.getColumnModel().getColumnCount()-iUltimaColumna, iNuevaPosicionColumna++);//-1
			}
		}
		
		
		//REUBICABA SELECCIONAR
		/*
		if(iUltimaColumna>1) {
			iUltimaColumna--;
		}
		
		//iNuevaPosicionColumna++;
			
		//REUBICA SELECCIONAR FILA CHECK
		jTableDatosEstructura.moveColumn(this.jTableDatosEstructura.getColumnModel().getColumnCount()-iUltimaColumna, iNuevaPosicionColumna++);//-1		
		*/
		
		//DEFINEN HEADERS
		final TableCellRenderer tableHeaderDefaultCellRenderer = this.jTableDatosEstructura.getTableHeader().getDefaultRenderer();
		
		this.jTableDatosEstructura.getTableHeader().setDefaultRenderer(new TableCellRendererHeader(this.jTableDatosEstructura,tableHeaderDefaultCellRenderer));
	    
		TableColumn column=null;
		
		if(!EstructuraJInternalFrame.ISBINDING_MANUAL_TABLA) {
			for(int i = 0; i < this.jTableDatosEstructura.getColumnModel().getColumnCount(); i++) { 
				column = this.jTableDatosEstructura.getColumnModel().getColumn(i); 
				
				if(column.getIdentifier()!=null) {
					//SI SE UTILIZA UN HEADER ES GENERICO
					//column.setHeaderRenderer(new HeaderRenderer(column.getIdentifier().toString()));
				}
				
				if(column.getIdentifier()!=null && column.getIdentifier().equals(Constantes2.S_ELI)) {
					continue;
				}
				
				if(column.getIdentifier()!=null && column.getIdentifier().equals(Constantes2.S_SELECCIONAR)) {
					if(!EstructuraJInternalFrame.ISBINDING_MANUAL_TABLA) {
						column.setPreferredWidth(50); 	 
						column.setWidth(50); 	 
						column.setMinWidth(50); 	
						column.setMaxWidth(50); 
						
						this.iWidthTableDefinicion+=50;
					}
					
				} else {
					if(!EstructuraJInternalFrame.ISBINDING_MANUAL_TABLA) {
						column.setPreferredWidth(Constantes.ISWING_ANCHO_COLUMNA); 	 
						column.setWidth(Constantes.ISWING_ANCHO_COLUMNA); 	 
						column.setMinWidth(Constantes.ISWING_ANCHO_COLUMNA); 	
						column.setMaxWidth(Constantes.ISWING_ANCHO_COLUMNA); 	
						
						this.iWidthTableDefinicion+=Constantes.ISWING_ANCHO_COLUMNA;
					}
				}
			}
		}
		
		this.jTableDatosEstructura.setSelectionBackground(FuncionesSwing.getColorSelectedBackground());
		this.jTableDatosEstructura.setSelectionForeground(FuncionesSwing.getColorSelectedForeground());
		
		/*
		this.jTableDatosEstructura.setDefaultRenderer(Object.class, new DefaultTableCellRenderer() {
			private static final long serialVersionUID = 1L;
			
		    @Override
		    public Component getTableCellRendererComponent(JTable table, Object value, boolean isSelected, boolean hasFocus, int row, int column) {
		        final Component component= super.getTableCellRendererComponent(table, value, isSelected, hasFocus, row, column);
		        //POR DEFECTO ES MEJOR, SE PIERDE DATOS AL SELECCIONAR BLANCO LETRAS BLANCAS
				component.setBackground(row % 2 == 0 ? FuncionesSwing.getColorTextFields(Constantes2.S_FONDOCONTROL_COLOR) : Funciones2.getColorFilaTabla2()); //FuncionesSwing.getColorTextFields(Constantes2.S_FONDOCONTROL_COLOR)
				component.setForeground(Funciones2.getColorTextoFilaTabla1());
				
				try {
		        	int iSize=-999;
		        	
		        	if(conTotales) {
						//FILA TOTALES OTRO COLOR, SI TABLA NO ES UNO A UNO
			        	if(Constantes.ISUSAEJBLOGICLAYER) {
							iSize=estructuraLogic.getEstructuras().size()-1;
								
						} else if(Constantes.ISUSAEJBREMOTE || Constantes.ISUSAEJBHOME) {
							iSize=estructuras.size()-1;
						}
						
						if(iSize==row) {
							component.setBackground(Funciones2.getColorFilaTablaTotales());
						}
		        	}
					
					//POR EFICIENCIA NO UTILIZAR					
					//if (component instanceof JComponent) {
		            //    JComponent jcomponent = (JComponent) component;		                 		                
		        	//}				
					
				} catch (Exception e) {
					e.printStackTrace();
				}
				
		        return component;
		    }
		});
		*/
		
		//ESTA EN LA DEFINICION DE LA TABLA
		//this.jTableDatosEstructura.setRowHeight(Constantes.ISWING_ALTO_FILA_TABLA);
		
		/*
		column=this.jTableDatosEstructura.getColumnModel().getColumn(Funciones2.getColumnIndexByName(this.jTableDatosSistema,Constantes2.S_SELECCIONAR));
		
		if(column!=null) {
			column.setPreferredWidth(25); 	 
			column.setWidth(25); 	 
			column.setMinWidth(25); 	
		}
		*/
			
			//CopyTableToTableTotal();
		} else {
			
			this.actualizarVisualTableDatosEstructura();
			
		}
	}
	
	/*
	//COPY_TABLES
	/* FALTARIA RESOLVER:
	   1 SOLO SCROLL PARA 2 TABLAS
	   COPIA EXACTA DE COLUMNAS DE UNA TABLA A OTRA, SI SE MODIFICA TAMANIO TAMBIEN LA OTRA
	*/
	
	public void jButtonIdActionPerformed(ActionEvent evt,int rowIndex,Boolean esRelaciones,Boolean esEliminar) { 
		try {
			if(!esEliminar) {
				this.estaModoSeleccionar=true;
				
				//this.isEsNuevoEstructura=false;
					
				EstructuraBeanSwingJInternalFrameAdditional.procesarEventosVista(this.parametroGeneralUsuario,this.moduloActual,this.opcionActual,this.usuarioActual,this,FuncionTipo.BEFORE,ControlTipo.FORM,EventoTipo.LOAD,EventoSubTipo.SELECTED,"FORM",this.estructura,new Object(),this.estructuraParameterGeneral,this.estructuraReturnGeneral);
			
				if(this.estructuraSessionBean.getConGuardarRelaciones()) {
					this.dStart=(double)System.currentTimeMillis();
				}
				
				if(this.jInternalFrameDetalleFormEstructura==null) {
					this.inicializarFormDetalle();
				}
				
				this.inicializarInvalidValues();
				
				int intSelectedRow = 0;
				
				if(rowIndex>=0) {
					intSelectedRow=rowIndex;
					this.jTableDatosEstructura.getSelectionModel().setSelectionInterval(intSelectedRow, intSelectedRow);
				} else {	
					intSelectedRow=this.jTableDatosEstructura.getSelectedRow();	       
				}
				
				//ARCHITECTURE
				if(Constantes.ISUSAEJBLOGICLAYER) {
					this.estructura =(Estructura) this.estructuraLogic.getEstructuras().toArray()[this.jTableDatosEstructura.convertRowIndexToModel(intSelectedRow)];
				} else if(Constantes.ISUSAEJBREMOTE || Constantes.ISUSAEJBHOME ) {
					this.estructura =(Estructura) this.estructuras.toArray()[this.jTableDatosEstructura.convertRowIndexToModel(intSelectedRow)];
				}
				//ARCHITECTURE
				
				//PUEDE SER PARA DUPLICADO O NUEVO TABLA
				
				if(this.estructura.getsType().equals("DUPLICADO")
				   || this.estructura.getsType().equals("NUEVO_GUARDAR_CAMBIOS")) {
					
					this.isEsNuevoEstructura=true;
				
				} else {
					this.isEsNuevoEstructura=false;	
				}
				
				//CONTROL VERSION ANTERIOR
				/*
				if(!this.estructuraSessionBean.getEsGuardarRelacionado()) {
					if(this.estructura.getId()>=0 && !this.estructura.getIsNew()) {						
						this.isEsNuevoEstructura=false;
						
					} else {
						this.isEsNuevoEstructura=true;
					}
					
				} else {
					//CONTROLAR PARA RELACIONADO
				}
				*/
				
				//ESTABLECE SI ES RELACIONADO O NO 
				this.habilitarDeshabilitarTipoMantenimientoEstructura(esRelaciones);						
				
				this.seleccionarEstructura(evt,null,rowIndex);
				
				//SELECCIONA ACTUAL PERO AUN NO SE HA INGRESADO AL SISTEMA
				//SE DESHABILITA POR GUARDAR CAMBIOS
				/*
				if(this.estructura.getId()<0) {
					this.isEsNuevoEstructura=true;
				}
				*/
				
				if(!this.esParaBusquedaForeignKey) {
					this.modificarEstructura(evt,rowIndex,esRelaciones);
				} else {
					this.seleccionarEstructura(evt,rowIndex);
				}	
				
				if(this.estructuraSessionBean.getConGuardarRelaciones()) {
					this.dEnd=(double)System.currentTimeMillis();					
					this.dDif=this.dEnd - this.dStart;
					
					if(Constantes.ISDEVELOPING) {
						System.out.println("Tiempo(ms) Seleccion Estructura: " + this.dDif); 
					}
				}								
				
				EstructuraBeanSwingJInternalFrameAdditional.procesarEventosVista(this.parametroGeneralUsuario,this.moduloActual,this.opcionActual,this.usuarioActual,this,FuncionTipo.AFTER,ControlTipo.FORM,EventoTipo.LOAD,EventoSubTipo.SELECTED,"FORM",this.estructura,new Object(),this.estructuraParameterGeneral,this.estructuraReturnGeneral);
				
			} else {
				this.estaModoEliminarGuardarCambios=true;
				
				this.seleccionarEstructura(evt,null,rowIndex);
				
				if(this.permiteMantenimiento(this.estructura)) {
					if(this.estructura.getId()>0) {
						this.estructura.setIsDeleted(true);
						
						this.estructurasEliminados.add(this.estructura);
					}
					
					if(Constantes.ISUSAEJBLOGICLAYER) {				
						this.estructuraLogic.getEstructuras().remove(this.estructura);
					} else if(Constantes.ISUSAEJBREMOTE||Constantes.ISUSAEJBHOME) {
						this.estructuras.remove(this.estructura);				
					}
					
					
					((EstructuraModel) this.jTableDatosEstructura.getModel()).fireTableRowsDeleted(rowIndex,rowIndex);
					
					this.actualizarFilaTotales();
					
					this.inicializarActualizarBindingTablaEstructura(false);					
				}								
			}
			
		} catch(Exception e) {
			FuncionesSwing.manageException2(this, e,logger,EstructuraConstantesFunciones.CLASSNAME);
			
		} finally {
			this.estaModoSeleccionar=false;				
			this.estaModoEliminarGuardarCambios=false;
		}
	}
	
	
	public void seleccionarEstructura(ActionEvent evt,javax.swing.event.ListSelectionEvent evt2,int rowIndex) throws Exception { 
		try {
			//SI PUEDE SER NUEVO Y SELECCIONAR (PARA DUPLICAR Y NUEVO TABLA)
			//if(!this.isEsNuevoEstructura) {
			
			if(this.jInternalFrameDetalleFormEstructura==null) { //if(!this.conCargarFormDetalle) {
				this.inicializarFormDetalle();
			}
			
				int intSelectedRow = 0;
				
				if(rowIndex>=0) {
					intSelectedRow=rowIndex;
					this.jTableDatosEstructura.getSelectionModel().setSelectionInterval(intSelectedRow, intSelectedRow);
				} else {	
					intSelectedRow=this.jTableDatosEstructura.getSelectedRow();	       
				}
				
				//CUANDO SE RECARGA TABLA TAMBIEN SE SELECCIONA PERO CON -1 POR LO QUE SE NECESITA VALIDAR ANTES
				if(intSelectedRow<0) {
					return;
				}
				
				//ARCHITECTURE
				if(Constantes.ISUSAEJBLOGICLAYER) {
					this.estructura =(Estructura) this.estructuraLogic.getEstructuras().toArray()[this.jTableDatosEstructura.convertRowIndexToModel(intSelectedRow)];
				} else if(Constantes.ISUSAEJBREMOTE || Constantes.ISUSAEJBHOME ) {
					this.estructura =(Estructura) this.estructuras.toArray()[this.jTableDatosEstructura.convertRowIndexToModel(intSelectedRow)];
				}
				
				if(EstructuraJInternalFrame.ISBINDING_MANUAL_TABLA) {
					this.setVariablesObjetoActualToFormularioEstructura(this.estructura);
				}
				
				//ARCHITECTURE
				try {
					

					//Empresa
					if(!this.estructuraConstantesFunciones.cargarid_empresaEstructura || this.estructuraConstantesFunciones.event_dependid_empresaEstructura) {
						//this.cargarCombosEmpresasForeignKeyLista(" where id="+this.estructura.getid_empresa());
									//this.inicializarActualizarBindingEstructura(false,false);
						this.empresasForeignKey=new ArrayList<Empresa>();

						if(estructura.getEmpresa()!=null) {
							this.empresasForeignKey.add(estructura.getEmpresa());
						}

						this.addItemDefectoCombosForeignKeyEmpresa();
						this.cargarCombosFrameEmpresasForeignKey("Todos");
					}
					this.setActualEmpresaForeignKey(this.estructura.getid_empresa(),false,"Formulario");

					//Sucursal
					if(!this.estructuraConstantesFunciones.cargarid_sucursalEstructura || this.estructuraConstantesFunciones.event_dependid_sucursalEstructura) {
						//this.cargarCombosSucursalsForeignKeyLista(" where id="+this.estructura.getid_sucursal());
									//this.inicializarActualizarBindingEstructura(false,false);
						this.sucursalsForeignKey=new ArrayList<Sucursal>();

						if(estructura.getSucursal()!=null) {
							this.sucursalsForeignKey.add(estructura.getSucursal());
						}

						this.addItemDefectoCombosForeignKeySucursal();
						this.cargarCombosFrameSucursalsForeignKey("Todos");
					}
					this.setActualSucursalForeignKey(this.estructura.getid_sucursal(),false,"Formulario");

					//Estructura
					if(!this.estructuraConstantesFunciones.cargarid_estructuraEstructura || this.estructuraConstantesFunciones.event_dependid_estructuraEstructura) {
						//this.cargarCombosEstructurasForeignKeyLista(" where id="+this.estructura.getid_estructura());
									//this.inicializarActualizarBindingEstructura(false,false);
						this.estructurasForeignKey=new ArrayList<Estructura>();

						if(estructura.getEstructura()!=null) {
							this.estructurasForeignKey.add(estructura.getEstructura());
						}

						this.addItemDefectoCombosForeignKeyEstructura();
						this.cargarCombosFrameEstructurasForeignKey("Todos");
					}
					this.setActualEstructuraForeignKey(this.estructura.getid_estructura(),false,"Formulario");

					//TipoPago_NM
					if(!this.estructuraConstantesFunciones.cargarid_tipo_pago__n_mEstructura || this.estructuraConstantesFunciones.event_dependid_tipo_pago__n_mEstructura) {
						//this.cargarCombosTipoPago_NMsForeignKeyLista(" where id="+this.estructura.getid_tipo_pago__n_m());
									//this.inicializarActualizarBindingEstructura(false,false);
						this.tipopago_nmsForeignKey=new ArrayList<TipoPago_NM>();

						if(estructura.getTipoPago_NM()!=null) {
							this.tipopago_nmsForeignKey.add(estructura.getTipoPago_NM());
						}

						this.addItemDefectoCombosForeignKeyTipoPago_NM();
						this.cargarCombosFrameTipoPago_NMsForeignKey("Todos");
					}
					this.setActualTipoPago_NMForeignKey(this.estructura.getid_tipo_pago__n_m(),false,"Formulario");

					//NumeroPatronal
					if(!this.estructuraConstantesFunciones.cargarid_numero_patronalEstructura || this.estructuraConstantesFunciones.event_dependid_numero_patronalEstructura) {
						//this.cargarCombosNumeroPatronalsForeignKeyLista(" where id="+this.estructura.getid_numero_patronal());
									//this.inicializarActualizarBindingEstructura(false,false);
						this.numeropatronalsForeignKey=new ArrayList<NumeroPatronal>();

						if(estructura.getNumeroPatronal()!=null) {
							this.numeropatronalsForeignKey.add(estructura.getNumeroPatronal());
						}

						this.addItemDefectoCombosForeignKeyNumeroPatronal();
						this.cargarCombosFrameNumeroPatronalsForeignKey("Todos");
					}
					this.setActualNumeroPatronalForeignKey(this.estructura.getid_numero_patronal(),false,"Formulario");

					//CuentaContable
					if(!this.estructuraConstantesFunciones.cargarid_cuenta_contableEstructura || this.estructuraConstantesFunciones.event_dependid_cuenta_contableEstructura) {
						//this.cargarCombosCuentaContablesForeignKeyLista(" where id="+this.estructura.getid_cuenta_contable());
									//this.inicializarActualizarBindingEstructura(false,false);
						this.cuentacontablesForeignKey=new ArrayList<CuentaContable>();

						if(estructura.getCuentaContable()!=null) {
							this.cuentacontablesForeignKey.add(estructura.getCuentaContable());
						}

						this.addItemDefectoCombosForeignKeyCuentaContable();
						this.cargarCombosFrameCuentaContablesForeignKey("Todos");
					}
					this.setActualCuentaContableForeignKey(this.estructura.getid_cuenta_contable(),false,"Formulario");

					//TipoEstructura
					if(!this.estructuraConstantesFunciones.cargarid_tipo_estructuraEstructura || this.estructuraConstantesFunciones.event_dependid_tipo_estructuraEstructura) {
						//this.cargarCombosTipoEstructurasForeignKeyLista(" where id="+this.estructura.getid_tipo_estructura());
									//this.inicializarActualizarBindingEstructura(false,false);
						this.tipoestructurasForeignKey=new ArrayList<TipoEstructura>();

						if(estructura.getTipoEstructura()!=null) {
							this.tipoestructurasForeignKey.add(estructura.getTipoEstructura());
						}

						this.addItemDefectoCombosForeignKeyTipoEstructura();
						this.cargarCombosFrameTipoEstructurasForeignKey("Todos");
					}
					this.setActualTipoEstructuraForeignKey(this.estructura.getid_tipo_estructura(),false,"Formulario");

					//Pais
					if(!this.estructuraConstantesFunciones.cargarid_paisEstructura || this.estructuraConstantesFunciones.event_dependid_paisEstructura) {
						//this.cargarCombosPaissForeignKeyLista(" where id="+this.estructura.getid_pais());
									//this.inicializarActualizarBindingEstructura(false,false);
						this.paissForeignKey=new ArrayList<Pais>();

						if(estructura.getPais()!=null) {
							this.paissForeignKey.add(estructura.getPais());
						}

						this.addItemDefectoCombosForeignKeyPais();
						this.cargarCombosFramePaissForeignKey("Todos");
					}
					this.setActualPaisForeignKey(this.estructura.getid_pais(),false,"Formulario");

					//Ciudad
					if(!this.estructuraConstantesFunciones.cargarid_ciudadEstructura || this.estructuraConstantesFunciones.event_dependid_ciudadEstructura) {
						//this.cargarCombosCiudadsForeignKeyLista(" where id="+this.estructura.getid_ciudad());
									//this.inicializarActualizarBindingEstructura(false,false);
						this.ciudadsForeignKey=new ArrayList<Ciudad>();

						if(estructura.getCiudad()!=null) {
							this.ciudadsForeignKey.add(estructura.getCiudad());
						}

						this.addItemDefectoCombosForeignKeyCiudad();
						this.cargarCombosFrameCiudadsForeignKey("Todos");
					}
					this.setActualCiudadForeignKey(this.estructura.getid_ciudad(),false,"Formulario");
				} catch(Exception e) {
					throw e;
				}
				
				this.actualizarEstadoCeldasBotonesEstructura("s", this.isGuardarCambiosEnLote, this.isEsMantenimientoRelacionado);
				
				//NO FUNCIONA BINDING PERO SE MANTIENE
				this.inicializarActualizarBindingBotonesEstructura(false) ;
				
				//SI ES MANUAL
				//this.inicializarActualizarBindingBotonesManualEstructura() ;
			//}
		} catch(Exception e) {
			FuncionesSwing.manageException(this, e,logger,EstructuraConstantesFunciones.CLASSNAME);
		}
	}
	
	public void setVariablesObjetoActualToFormularioTodoEstructura(Estructura estructura) throws Exception { 
		this.setVariablesObjetoActualToFormularioTodoEstructura(estructura,false,"NINGUNO");
	}
	
	public void setVariablesObjetoActualToFormularioTodoEstructura(Estructura estructura,Boolean conCargarListasDesdeObjetoActual,String sTipoEvento) throws Exception { 
		this.setVariablesObjetoActualToFormularioEstructura(estructura);
		
		if(conCargarListasDesdeObjetoActual) {
			this.setVariablesObjetoActualToListasForeignKeyEstructura(estructura,sTipoEvento);
		}
		
		this.setVariablesObjetoActualToFormularioForeignKeyEstructura(estructura);
	}
	
	public void setVariablesObjetoActualToFormularioEstructura(Estructura estructura) throws Exception { 
		try {			
			Image imageActual=null;
			ImageIcon imageIcon = null;
			
			if(this.jInternalFrameDetalleFormEstructura==null) { //if(!this.conCargarFormDetalle) {
				this.inicializarFormDetalle();
			}
			
			
			this.jInternalFrameDetalleFormEstructura.jLabelidEstructura.setText(estructura.getId().toString());
			this.jInternalFrameDetalleFormEstructura.jTextFieldcodigoEstructura.setText(estructura.getcodigo());
			this.jInternalFrameDetalleFormEstructura.jTextFieldnumeroEstructura.setText(estructura.getnumero());
			this.jInternalFrameDetalleFormEstructura.jTextFieldvalor_anticipoEstructura.setText(estructura.getvalor_anticipo().toString());
			this.jInternalFrameDetalleFormEstructura.jTextFieldporcentaje_anticipoEstructura.setText(estructura.getporcentaje_anticipo().toString());
			this.jInternalFrameDetalleFormEstructura.jTextAreanombreEstructura.setText(estructura.getnombre());
			this.jInternalFrameDetalleFormEstructura.jCheckBoxes_jefeEstructura.setSelected(estructura.getes_jefe());
			this.jInternalFrameDetalleFormEstructura.jCheckBoxes_anualEstructura.setSelected(estructura.getes_anual());
			this.jInternalFrameDetalleFormEstructura.jTextFieldporcentajeEstructura.setText(estructura.getporcentaje().toString());
			this.jInternalFrameDetalleFormEstructura.jTextFieldvalorEstructura.setText(estructura.getvalor().toString());
			
		} catch(Exception e) {
			throw e;
			//FuncionesSwing.manageException(this, e,logger,EstructuraConstantesFunciones.CLASSNAME);
		}
	}
		
	public void actualizarInformacion(String sTipo,Estructura estructuraLocal) throws Exception {
		this.actualizarInformacion(sTipo,false,estructuraLocal);
	}	
	
	public void actualizarInformacion(String sTipo,Boolean conParametroObjeto,Estructura estructuraLocal) throws Exception {
		
		if(!conParametroObjeto) {
			if(!this.getEsControlTabla()) {
				estructuraLocal=this.estructura;
			} else {
				estructuraLocal=this.estructuraAnterior;
			}
		}
		
		if(this.permiteMantenimiento(estructuraLocal)) {
			if(sTipo.equals("EVENTO_CONTROL")) { // || sTipo.equals("EVENTO_NUEVO")
				if(!this.esControlTabla) {
					this.setVariablesFormularioToObjetoActualTodoEstructura(estructuraLocal,true);
					
					if(estructuraSessionBean.getConGuardarRelaciones()) {
						this.actualizarRelaciones(estructuraLocal);
					}
				}
			
			} else if(sTipo.equals("INFO_PADRE")) {
				
				if(this.estructuraSessionBean.getEsGuardarRelacionado()) {
					this.actualizarRelacionFkPadreActual(estructuraLocal);
				}
			}
		}
	}
	
	public void setVariablesFormularioToObjetoActualTodoEstructura(Estructura estructura,Boolean conColumnasBase) throws Exception { 
		this.setVariablesFormularioToObjetoActualEstructura(estructura,conColumnasBase);
		this.setVariablesFormularioToObjetoActualForeignKeysEstructura(estructura);
	}
	
	public void setVariablesFormularioToObjetoActualEstructura(Estructura estructura,Boolean conColumnasBase) throws Exception { 
		this.setVariablesFormularioToObjetoActualEstructura(estructura,conColumnasBase,true);
	}
	
	public void setVariablesFormularioToObjetoActualEstructura(Estructura estructura,Boolean conColumnasBase,Boolean conInicializarInvalidValues) throws Exception { 
		String sMensajeCampoActual="";
		Boolean estaValidado=true;
		try {
			
			if(this.jInternalFrameDetalleFormEstructura==null) { //if(!this.conCargarFormDetalle) {
				this.inicializarFormDetalle();
			}
			
			if(conInicializarInvalidValues) {
				this.inicializarInvalidValues();
			}
			
			

		try {
			if(this.jInternalFrameDetalleFormEstructura.jLabelidEstructura.getText()==null || this.jInternalFrameDetalleFormEstructura.jLabelidEstructura.getText()=="" || this.jInternalFrameDetalleFormEstructura.jLabelidEstructura.getText()=="Id") {
				this.jInternalFrameDetalleFormEstructura.jLabelidEstructura.setText("0");
			}

			if(conColumnasBase) {estructura.setId(Long.parseLong(this.jInternalFrameDetalleFormEstructura.jLabelidEstructura.getText()));}
		} catch(Exception e) {
			estaValidado=false;
			sMensajeCampoActual+="\r\n"+EstructuraConstantesFunciones.LABEL_ID+"-->"+ConstantesMensajes.SMENSAJEEXCEPCION_VALIDACIONVALOR;FuncionesSwing.mostrarCampoMensajeInvalido(false,this.jInternalFrameDetalleFormEstructura.jLabelIdEstructura,ConstantesMensajes.SMENSAJEEXCEPCION_VALIDACIONVALOR);
		}

		try {
			estructura.setcodigo(this.jInternalFrameDetalleFormEstructura.jTextFieldcodigoEstructura.getText());
		} catch(Exception e) {
			estaValidado=false;
			sMensajeCampoActual+="\r\n"+EstructuraConstantesFunciones.LABEL_CODIGO+"-->"+ConstantesMensajes.SMENSAJEEXCEPCION_VALIDACIONVALOR;FuncionesSwing.mostrarCampoMensajeInvalido(false,this.jInternalFrameDetalleFormEstructura.jLabelcodigoEstructura,ConstantesMensajes.SMENSAJEEXCEPCION_VALIDACIONVALOR);
		}

		try {
			estructura.setnumero(this.jInternalFrameDetalleFormEstructura.jTextFieldnumeroEstructura.getText());
		} catch(Exception e) {
			estaValidado=false;
			sMensajeCampoActual+="\r\n"+EstructuraConstantesFunciones.LABEL_NUMERO+"-->"+ConstantesMensajes.SMENSAJEEXCEPCION_VALIDACIONVALOR;FuncionesSwing.mostrarCampoMensajeInvalido(false,this.jInternalFrameDetalleFormEstructura.jLabelnumeroEstructura,ConstantesMensajes.SMENSAJEEXCEPCION_VALIDACIONVALOR);
		}

		try {
			estructura.setvalor_anticipo(Double.parseDouble(this.jInternalFrameDetalleFormEstructura.jTextFieldvalor_anticipoEstructura.getText()));
		} catch(Exception e) {
			estaValidado=false;
			sMensajeCampoActual+="\r\n"+EstructuraConstantesFunciones.LABEL_VALORANTICIPO+"-->"+ConstantesMensajes.SMENSAJEEXCEPCION_VALIDACIONVALOR;FuncionesSwing.mostrarCampoMensajeInvalido(false,this.jInternalFrameDetalleFormEstructura.jLabelvalor_anticipoEstructura,ConstantesMensajes.SMENSAJEEXCEPCION_VALIDACIONVALOR);
		}

		try {
			estructura.setporcentaje_anticipo(Double.parseDouble(this.jInternalFrameDetalleFormEstructura.jTextFieldporcentaje_anticipoEstructura.getText()));
		} catch(Exception e) {
			estaValidado=false;
			sMensajeCampoActual+="\r\n"+EstructuraConstantesFunciones.LABEL_PORCENTAJEANTICIPO+"-->"+ConstantesMensajes.SMENSAJEEXCEPCION_VALIDACIONVALOR;FuncionesSwing.mostrarCampoMensajeInvalido(false,this.jInternalFrameDetalleFormEstructura.jLabelporcentaje_anticipoEstructura,ConstantesMensajes.SMENSAJEEXCEPCION_VALIDACIONVALOR);
		}

		try {
			estructura.setnombre(this.jInternalFrameDetalleFormEstructura.jTextAreanombreEstructura.getText());
		} catch(Exception e) {
			estaValidado=false;
			sMensajeCampoActual+="\r\n"+EstructuraConstantesFunciones.LABEL_NOMBRE+"-->"+ConstantesMensajes.SMENSAJEEXCEPCION_VALIDACIONVALOR;FuncionesSwing.mostrarCampoMensajeInvalido(false,this.jInternalFrameDetalleFormEstructura.jLabelnombreEstructura,ConstantesMensajes.SMENSAJEEXCEPCION_VALIDACIONVALOR);
		}

		try {
			estructura.setes_jefe(this.jInternalFrameDetalleFormEstructura.jCheckBoxes_jefeEstructura.isSelected());
		} catch(Exception e) {
			estaValidado=false;
			sMensajeCampoActual+="\r\n"+EstructuraConstantesFunciones.LABEL_ESJEFE+"-->"+ConstantesMensajes.SMENSAJEEXCEPCION_VALIDACIONVALOR;FuncionesSwing.mostrarCampoMensajeInvalido(false,this.jInternalFrameDetalleFormEstructura.jLabeles_jefeEstructura,ConstantesMensajes.SMENSAJEEXCEPCION_VALIDACIONVALOR);
		}

		try {
			estructura.setes_anual(this.jInternalFrameDetalleFormEstructura.jCheckBoxes_anualEstructura.isSelected());
		} catch(Exception e) {
			estaValidado=false;
			sMensajeCampoActual+="\r\n"+EstructuraConstantesFunciones.LABEL_ESANUAL+"-->"+ConstantesMensajes.SMENSAJEEXCEPCION_VALIDACIONVALOR;FuncionesSwing.mostrarCampoMensajeInvalido(false,this.jInternalFrameDetalleFormEstructura.jLabeles_anualEstructura,ConstantesMensajes.SMENSAJEEXCEPCION_VALIDACIONVALOR);
		}

		try {
			estructura.setporcentaje(Double.parseDouble(this.jInternalFrameDetalleFormEstructura.jTextFieldporcentajeEstructura.getText()));
		} catch(Exception e) {
			estaValidado=false;
			sMensajeCampoActual+="\r\n"+EstructuraConstantesFunciones.LABEL_PORCENTAJE+"-->"+ConstantesMensajes.SMENSAJEEXCEPCION_VALIDACIONVALOR;FuncionesSwing.mostrarCampoMensajeInvalido(false,this.jInternalFrameDetalleFormEstructura.jLabelporcentajeEstructura,ConstantesMensajes.SMENSAJEEXCEPCION_VALIDACIONVALOR);
		}

		try {
			estructura.setvalor(Double.parseDouble(this.jInternalFrameDetalleFormEstructura.jTextFieldvalorEstructura.getText()));
		} catch(Exception e) {
			estaValidado=false;
			sMensajeCampoActual+="\r\n"+EstructuraConstantesFunciones.LABEL_VALOR+"-->"+ConstantesMensajes.SMENSAJEEXCEPCION_VALIDACIONVALOR;FuncionesSwing.mostrarCampoMensajeInvalido(false,this.jInternalFrameDetalleFormEstructura.jLabelvalorEstructura,ConstantesMensajes.SMENSAJEEXCEPCION_VALIDACIONVALOR);
		}
			
			if(!estaValidado) {
				throw new Exception(sMensajeCampoActual);
			}
		} catch(NumberFormatException e) {
			throw new Exception(sMensajeCampoActual);
			//FuncionesSwing.manageException(this, e,logger,MovimientoInventarioConstantesFunciones.CLASSNAME);
		} catch(Exception e) {
			throw e;
			//FuncionesSwing.manageException(this, e,logger,EstructuraConstantesFunciones.CLASSNAME);
		}
	}
	
	public void setVariablesForeignKeyObjetoBeanDefectoActualToObjetoActualEstructura(Estructura estructuraBean,Estructura estructura,Boolean conDefault,Boolean conColumnasBase) throws Exception { 
		try {
			
			if(conDefault || (!conDefault && estructuraBean.getid_estructura()!=null && !estructuraBean.getid_estructura().equals(null))) {estructura.setid_estructura(estructuraBean.getid_estructura());}
			if(conDefault || (!conDefault && estructuraBean.getid_tipo_pago__n_m()!=null && !estructuraBean.getid_tipo_pago__n_m().equals(-1L))) {estructura.setid_tipo_pago__n_m(estructuraBean.getid_tipo_pago__n_m());}
			if(conDefault || (!conDefault && estructuraBean.getid_numero_patronal()!=null && !estructuraBean.getid_numero_patronal().equals(-1L))) {estructura.setid_numero_patronal(estructuraBean.getid_numero_patronal());}
			if(conDefault || (!conDefault && estructuraBean.getid_cuenta_contable()!=null && !estructuraBean.getid_cuenta_contable().equals(-1L))) {estructura.setid_cuenta_contable(estructuraBean.getid_cuenta_contable());}
			if(conDefault || (!conDefault && estructuraBean.getid_tipo_estructura()!=null && !estructuraBean.getid_tipo_estructura().equals(-1L))) {estructura.setid_tipo_estructura(estructuraBean.getid_tipo_estructura());}
			if(conDefault || (!conDefault && estructuraBean.getid_pais()!=null && !estructuraBean.getid_pais().equals(-1L))) {estructura.setid_pais(estructuraBean.getid_pais());}
			if(conDefault || (!conDefault && estructuraBean.getid_ciudad()!=null && !estructuraBean.getid_ciudad().equals(-1L))) {estructura.setid_ciudad(estructuraBean.getid_ciudad());}
			
		} catch(Exception e) {
			throw e;
			//FuncionesSwing.manageException(this, e,logger,EstructuraConstantesFunciones.CLASSNAME);
		}
	}
	
	public void setCopiarVariablesObjetosEstructura(Estructura estructuraOrigen,Estructura estructura,Boolean conDefault,Boolean conColumnasBase) throws Exception { 
		try {
			
			if(conColumnasBase) {if(conDefault || (!conDefault && estructuraOrigen.getId()!=null && !estructuraOrigen.getId().equals(0L))) {estructura.setId(estructuraOrigen.getId());}}
			if(conDefault || (!conDefault && estructuraOrigen.getid_estructura()!=null && !estructuraOrigen.getid_estructura().equals(null))) {estructura.setid_estructura(estructuraOrigen.getid_estructura());}
			if(conDefault || (!conDefault && estructuraOrigen.getid_tipo_pago__n_m()!=null && !estructuraOrigen.getid_tipo_pago__n_m().equals(-1L))) {estructura.setid_tipo_pago__n_m(estructuraOrigen.getid_tipo_pago__n_m());}
			if(conDefault || (!conDefault && estructuraOrigen.getid_numero_patronal()!=null && !estructuraOrigen.getid_numero_patronal().equals(-1L))) {estructura.setid_numero_patronal(estructuraOrigen.getid_numero_patronal());}
			if(conDefault || (!conDefault && estructuraOrigen.getid_cuenta_contable()!=null && !estructuraOrigen.getid_cuenta_contable().equals(-1L))) {estructura.setid_cuenta_contable(estructuraOrigen.getid_cuenta_contable());}
			if(conDefault || (!conDefault && estructuraOrigen.getid_tipo_estructura()!=null && !estructuraOrigen.getid_tipo_estructura().equals(-1L))) {estructura.setid_tipo_estructura(estructuraOrigen.getid_tipo_estructura());}
			if(conDefault || (!conDefault && estructuraOrigen.getid_pais()!=null && !estructuraOrigen.getid_pais().equals(-1L))) {estructura.setid_pais(estructuraOrigen.getid_pais());}
			if(conDefault || (!conDefault && estructuraOrigen.getid_ciudad()!=null && !estructuraOrigen.getid_ciudad().equals(-1L))) {estructura.setid_ciudad(estructuraOrigen.getid_ciudad());}
			if(conDefault || (!conDefault && estructuraOrigen.getcodigo()!=null && !estructuraOrigen.getcodigo().equals(""))) {estructura.setcodigo(estructuraOrigen.getcodigo());}
			if(conDefault || (!conDefault && estructuraOrigen.getnumero()!=null && !estructuraOrigen.getnumero().equals(""))) {estructura.setnumero(estructuraOrigen.getnumero());}
			if(conDefault || (!conDefault && estructuraOrigen.getvalor_anticipo()!=null && !estructuraOrigen.getvalor_anticipo().equals(0.0))) {estructura.setvalor_anticipo(estructuraOrigen.getvalor_anticipo());}
			if(conDefault || (!conDefault && estructuraOrigen.getporcentaje_anticipo()!=null && !estructuraOrigen.getporcentaje_anticipo().equals(0.0))) {estructura.setporcentaje_anticipo(estructuraOrigen.getporcentaje_anticipo());}
			if(conDefault || (!conDefault && estructuraOrigen.getnombre()!=null && !estructuraOrigen.getnombre().equals(""))) {estructura.setnombre(estructuraOrigen.getnombre());}
			if(conDefault || (!conDefault && estructuraOrigen.getes_jefe()!=null && !estructuraOrigen.getes_jefe().equals(false))) {estructura.setes_jefe(estructuraOrigen.getes_jefe());}
			if(conDefault || (!conDefault && estructuraOrigen.getes_anual()!=null && !estructuraOrigen.getes_anual().equals(false))) {estructura.setes_anual(estructuraOrigen.getes_anual());}
			if(conDefault || (!conDefault && estructuraOrigen.getporcentaje()!=null && !estructuraOrigen.getporcentaje().equals(0.0))) {estructura.setporcentaje(estructuraOrigen.getporcentaje());}
			if(conDefault || (!conDefault && estructuraOrigen.getvalor()!=null && !estructuraOrigen.getvalor().equals(0.0))) {estructura.setvalor(estructuraOrigen.getvalor());}
			
		} catch(Exception e) {
			throw e;
			//FuncionesSwing.manageException(this, e,logger,EstructuraConstantesFunciones.CLASSNAME);
		}
	}
	
	/*
	public void setVariablesObjetoBeanActualToFormularioEstructura(Estructura estructura) throws Exception { 
		try {
			
			this.jInternalFrameDetalleFormEstructura.jLabelidEstructura.setText(estructura.getId().toString());
			this.jInternalFrameDetalleFormEstructura.jTextFieldcodigoEstructura.setText(estructura.getcodigo());
			this.jInternalFrameDetalleFormEstructura.jTextFieldnumeroEstructura.setText(estructura.getnumero());
			this.jInternalFrameDetalleFormEstructura.jTextFieldvalor_anticipoEstructura.setText(estructura.getvalor_anticipo().toString());
			this.jInternalFrameDetalleFormEstructura.jTextFieldporcentaje_anticipoEstructura.setText(estructura.getporcentaje_anticipo().toString());
			this.jInternalFrameDetalleFormEstructura.jTextAreanombreEstructura.setText(estructura.getnombre());
			this.jInternalFrameDetalleFormEstructura.jCheckBoxes_jefeEstructura.setSelected(estructura.getes_jefe());
			this.jInternalFrameDetalleFormEstructura.jCheckBoxes_anualEstructura.setSelected(estructura.getes_anual());
			this.jInternalFrameDetalleFormEstructura.jTextFieldporcentajeEstructura.setText(estructura.getporcentaje().toString());
			this.jInternalFrameDetalleFormEstructura.jTextFieldvalorEstructura.setText(estructura.getvalor().toString());
			
		} catch(Exception e) {
			FuncionesSwing.manageException(this, e,logger,EstructuraConstantesFunciones.CLASSNAME);
		}
	}
	*/
	
	/*
	public void setVariablesObjetoBeanActualToFormularioEstructura(EstructuraBean estructuraBean) throws Exception { 
		try {
			
			this.jInternalFrameDetalleFormEstructura.jLabelidEstructura.setText(estructuraBean.getId().toString());
			this.jInternalFrameDetalleFormEstructura.jTextFieldcodigoEstructura.setText(estructuraBean.getcodigo());
			this.jInternalFrameDetalleFormEstructura.jTextFieldnumeroEstructura.setText(estructuraBean.getnumero());
			this.jInternalFrameDetalleFormEstructura.jTextFieldvalor_anticipoEstructura.setText(estructuraBean.getvalor_anticipo().toString());
			this.jInternalFrameDetalleFormEstructura.jTextFieldporcentaje_anticipoEstructura.setText(estructuraBean.getporcentaje_anticipo().toString());
			this.jInternalFrameDetalleFormEstructura.jTextAreanombreEstructura.setText(estructuraBean.getnombre());
			this.jInternalFrameDetalleFormEstructura.jCheckBoxes_jefeEstructura.setSelected(estructuraBean.getes_jefe());
			this.jInternalFrameDetalleFormEstructura.jCheckBoxes_anualEstructura.setSelected(estructuraBean.getes_anual());
			this.jInternalFrameDetalleFormEstructura.jTextFieldporcentajeEstructura.setText(estructuraBean.getporcentaje().toString());
			this.jInternalFrameDetalleFormEstructura.jTextFieldvalorEstructura.setText(estructuraBean.getvalor().toString());
			
		} catch(Exception e) {
			FuncionesSwing.manageException(this, e,logger,EstructuraConstantesFunciones.CLASSNAME);
		}
	}
	*/
	
	/*
	public void setVariablesObjetoReturnGeneralToBeanEstructura(EstructuraParameterReturnGeneral estructuraReturnGeneral,EstructuraBean estructuraBean,Boolean conDefault) throws Exception { 
		try {
			Estructura estructuraLocal=new Estructura();
			
			estructuraLocal=estructuraReturnGeneral.getEstructura();
			
			
			if(conColumnasBase) {if(conDefault || (!conDefault && estructuraLocal.getId()!=null && !estructuraLocal.getId().equals(0L))) {estructuraBean.setId(estructuraLocal.getId());}}
			if(conDefault || (!conDefault && estructuraLocal.getid_estructura()!=null && !estructuraLocal.getid_estructura().equals(null))) {estructuraBean.setid_estructura(estructuraLocal.getid_estructura());}
			if(conDefault || (!conDefault && estructuraLocal.getid_tipo_pago__n_m()!=null && !estructuraLocal.getid_tipo_pago__n_m().equals(-1L))) {estructuraBean.setid_tipo_pago__n_m(estructuraLocal.getid_tipo_pago__n_m());}
			if(conDefault || (!conDefault && estructuraLocal.getid_numero_patronal()!=null && !estructuraLocal.getid_numero_patronal().equals(-1L))) {estructuraBean.setid_numero_patronal(estructuraLocal.getid_numero_patronal());}
			if(conDefault || (!conDefault && estructuraLocal.getid_cuenta_contable()!=null && !estructuraLocal.getid_cuenta_contable().equals(-1L))) {estructuraBean.setid_cuenta_contable(estructuraLocal.getid_cuenta_contable());}
			if(conDefault || (!conDefault && estructuraLocal.getid_tipo_estructura()!=null && !estructuraLocal.getid_tipo_estructura().equals(-1L))) {estructuraBean.setid_tipo_estructura(estructuraLocal.getid_tipo_estructura());}
			if(conDefault || (!conDefault && estructuraLocal.getid_pais()!=null && !estructuraLocal.getid_pais().equals(-1L))) {estructuraBean.setid_pais(estructuraLocal.getid_pais());}
			if(conDefault || (!conDefault && estructuraLocal.getid_ciudad()!=null && !estructuraLocal.getid_ciudad().equals(-1L))) {estructuraBean.setid_ciudad(estructuraLocal.getid_ciudad());}
			if(conDefault || (!conDefault && estructuraLocal.getcodigo()!=null && !estructuraLocal.getcodigo().equals(""))) {estructuraBean.setcodigo(estructuraLocal.getcodigo());}
			if(conDefault || (!conDefault && estructuraLocal.getnumero()!=null && !estructuraLocal.getnumero().equals(""))) {estructuraBean.setnumero(estructuraLocal.getnumero());}
			if(conDefault || (!conDefault && estructuraLocal.getvalor_anticipo()!=null && !estructuraLocal.getvalor_anticipo().equals(0.0))) {estructuraBean.setvalor_anticipo(estructuraLocal.getvalor_anticipo());}
			if(conDefault || (!conDefault && estructuraLocal.getporcentaje_anticipo()!=null && !estructuraLocal.getporcentaje_anticipo().equals(0.0))) {estructuraBean.setporcentaje_anticipo(estructuraLocal.getporcentaje_anticipo());}
			if(conDefault || (!conDefault && estructuraLocal.getnombre()!=null && !estructuraLocal.getnombre().equals(""))) {estructuraBean.setnombre(estructuraLocal.getnombre());}
			if(conDefault || (!conDefault && estructuraLocal.getes_jefe()!=null && !estructuraLocal.getes_jefe().equals(false))) {estructuraBean.setes_jefe(estructuraLocal.getes_jefe());}
			if(conDefault || (!conDefault && estructuraLocal.getes_anual()!=null && !estructuraLocal.getes_anual().equals(false))) {estructuraBean.setes_anual(estructuraLocal.getes_anual());}
			if(conDefault || (!conDefault && estructuraLocal.getporcentaje()!=null && !estructuraLocal.getporcentaje().equals(0.0))) {estructuraBean.setporcentaje(estructuraLocal.getporcentaje());}
			if(conDefault || (!conDefault && estructuraLocal.getvalor()!=null && !estructuraLocal.getvalor().equals(0.0))) {estructuraBean.setvalor(estructuraLocal.getvalor());}
			
		} catch(Exception e) {
			FuncionesSwing.manageException(this, e,logger,EstructuraConstantesFunciones.CLASSNAME);
		}
	}
	*/
	
	@SuppressWarnings("rawtypes")
	public static void setActualComboBoxEstructuraGenerico(Long idEstructuraSeleccionado,JComboBox jComboBoxEstructura,List<Estructura> estructurasLocal)throws Exception {
		try {
			Estructura  estructuraTemp=null;

			for(Estructura estructuraAux:estructurasLocal) {
				if(estructuraAux.getId()!=null && estructuraAux.getId().equals(idEstructuraSeleccionado)) {
					estructuraTemp=estructuraAux;
					break;
				}
			}

			jComboBoxEstructura.setSelectedItem(estructuraTemp);

		} catch(Exception e) {
			throw e;
		}
	}
	
	@SuppressWarnings("rawtypes")
	public static void setHotKeysComboBoxEstructuraGenerico(JComboBox jComboBoxEstructura,JInternalFrameBase jInternalFrameBase,String sNombreHotKeyAbstractAction,String sTipoBusqueda)throws Exception {
		try {
			//GLOBAL(id_empresa,id_sucursal,id_ejercicio)
			//BASICO(normal)
			//CON_BUSQUEDA(Permite buscar Fk)
			
			String sKeyStrokeName="";
			KeyStroke keyStrokeControl=null;
			
			if(!sTipoBusqueda.equals("GLOBAL")) {
				
				//BUSCAR
				sKeyStrokeName = FuncionesSwing.getKeyNameControl("CONTROL_BUSCAR");
				keyStrokeControl=FuncionesSwing.getKeyStrokeControl("CONTROL_BUSCAR");
				
				jComboBoxEstructura.getInputMap().put(keyStrokeControl, sKeyStrokeName);
				jComboBoxEstructura.getActionMap().put(sKeyStrokeName, new ButtonAbstractAction(jInternalFrameBase,sNombreHotKeyAbstractAction+"Busqueda"));
				//BUSCAR
				
				
				//ACTUALIZAR
				sKeyStrokeName = FuncionesSwing.getKeyNameControl("CONTROL_ACTUALIZAR");
				keyStrokeControl=FuncionesSwing.getKeyStrokeControl("CONTROL_ACTUALIZAR");
				
				jComboBoxEstructura.getInputMap().put(keyStrokeControl, sKeyStrokeName);
				jComboBoxEstructura.getActionMap().put(sKeyStrokeName, new ButtonAbstractAction(jInternalFrameBase,sNombreHotKeyAbstractAction+"Update"));
				//ACTUALIZAR
				
				if(sTipoBusqueda.contains("CON_EVENT_CHANGE")) {
					if(Constantes2.CON_COMBOBOX_ITEMLISTENER) {
						jComboBoxEstructura.addFocusListener(new ComboBoxFocusListener(jInternalFrameBase,sNombreHotKeyAbstractAction));
						jComboBoxEstructura.addActionListener(new ComboBoxActionListener(jInternalFrameBase,sNombreHotKeyAbstractAction));						
					}
					
					/*
					if(Constantes2.CON_COMBOBOX_ITEMLISTENER) {
						jComboBoxEstructura.addItemListener(new ComboBoxItemListener(jInternalFrameBase,sNombreHotKeyAbstractAction));
					} else {
						jComboBoxEstructura.addActionListener(new ComboBoxActionListener(jInternalFrameBase,sNombreHotKeyAbstractAction));
					}
					*/
				}								
				
				//CON_BUSQUEDA								
				if(sTipoBusqueda.contains("CON_BUSQUEDA")) {
					sKeyStrokeName = FuncionesSwing.getKeyNameControl("CONTROL_BUSQUEDA");
					keyStrokeControl=FuncionesSwing.getKeyStrokeControl("CONTROL_BUSQUEDA");
							
					jComboBoxEstructura.getInputMap().put(keyStrokeControl, sKeyStrokeName);
					jComboBoxEstructura.getActionMap().put(sKeyStrokeName, new ButtonAbstractAction(jInternalFrameBase,sNombreHotKeyAbstractAction));
				}
				//CON_BUSQUEDA
				
				
				//AUTOREFERENCIADA
				sKeyStrokeName = FuncionesSwing.getKeyNameControl("CONTROL_ARBOL");
				keyStrokeControl=FuncionesSwing.getKeyStrokeControl("CONTROL_ARBOL");
				
				jComboBoxEstructura.getInputMap().put(keyStrokeControl, sKeyStrokeName);
				jComboBoxEstructura.getActionMap().put(sKeyStrokeName, new ButtonAbstractAction(jInternalFrameBase,sNombreHotKeyAbstractAction+"Arbol"));			
				//AUTOREFERENCIADA
			}
		} catch(Exception e) {
			throw e;
		}
	}
	
	//PARA INICIALIZAR CONTROLES DE TABLA
	@SuppressWarnings("rawtypes")
	public void setHotKeysComboBoxGenerico(JComboBox jComboBox,JInternalFrameBase jInternalFrameBase,String sNombreHotKeyAbstractAction,String sTipoBusqueda) {
		if(sTipoBusqueda.contains("CON_EVENT_CHANGE")) {
			if(Constantes2.CON_COMBOBOX_ITEMLISTENER) {
				jComboBox.addItemListener(new ComboBoxItemListener(jInternalFrameBase,sNombreHotKeyAbstractAction));
				jComboBox.addFocusListener(new ComboBoxFocusListener(jInternalFrameBase,sNombreHotKeyAbstractAction));
			} else {
				jComboBox.addActionListener(new ComboBoxActionListener(jInternalFrameBase,sNombreHotKeyAbstractAction));
				jComboBox.addFocusListener(new ComboBoxFocusListener(jInternalFrameBase,sNombreHotKeyAbstractAction));
			}
		}
	}
	
	//PARA INICIALIZAR CONTROLES DE TABLA
	public void setHotKeysJTextFieldGenerico(JTextField jTextField,JInternalFrameBase jInternalFrameBase,String sNombreHotKeyAbstractAction,String sTipoBusqueda) {
		jTextField.addFocusListener(new TextFieldFocusListener(jInternalFrameBase,sNombreHotKeyAbstractAction));
		jTextField.addActionListener(new TextFieldActionListener(jInternalFrameBase,sNombreHotKeyAbstractAction));
	}
	
	//PARA INICIALIZAR CONTROLES DE TABLA
	public void setHotKeysJTextAreaGenerico(JTextArea jTextArea,JInternalFrameBase jInternalFrameBase,String sNombreHotKeyAbstractAction,String sTipoBusqueda) {
		jTextArea.addFocusListener(new TextAreaFocusListener(jInternalFrameBase,sNombreHotKeyAbstractAction));
		
		//NO EXISTE
		//jTextArea.addActionListener(new TextAreaActionListener(jInternalFrameBase,sNombreHotKeyAbstractAction));
	}
	
	//PARA INICIALIZAR CONTROLES DE TABLA
	public void setHotKeysJLabelGenerico(JLabel jLabel,JInternalFrameBase jInternalFrameBase,String sNombreHotKeyAbstractAction,String sTipoBusqueda) {
		jLabel.addFocusListener(new LabelFocusListener(jInternalFrameBase,sNombreHotKeyAbstractAction));
		
		//NO EXISTE
		//jLabel.addActionListener(new LabelActionListener(jInternalFrameBase,sNombreHotKeyAbstractAction));
	}
	
	//PARA INICIALIZAR CONTROLES DE TABLA
	public void setHotKeysJCheckBoxGenerico(JCheckBox jCheckBox,JInternalFrameBase jInternalFrameBase,String sNombreHotKeyAbstractAction,String sTipoBusqueda) {
		jCheckBox.addFocusListener(new CheckBoxFocusListener(jInternalFrameBase,sNombreHotKeyAbstractAction));
		
		//SI SE DEFINE AL CAMBIAR VALOR, ESTE NUEVO VALOR NO SE ENVIA AL EVENTO
		//jCheckBox.addItemListener(new CheckBoxItemListener(jInternalFrameBase,sNombreHotKeyAbstractAction));
	}
	
	//PARA INICIALIZAR CONTROLES DE TABLA
	public void setHotKeysJDateChooserGenerico(JDateChooser jDateChooser,JInternalFrameBase jInternalFrameBase,String sNombreHotKeyAbstractAction,String sTipoBusqueda) {
		FuncionesSwing.addDateListener(jDateChooser, jInternalFrameBase, sNombreHotKeyAbstractAction);
	}
	
	//PARA INICIALIZAR CONTROLES DE TABLA
	public void setHotKeysJButtonGenerico(JButton jButton,JInternalFrameBase jInternalFrameBase,String sNombreHotKeyAbstractAction,String sTipoBusqueda) {
		jButton.addActionListener(new ButtonActionListener(jInternalFrameBase,sNombreHotKeyAbstractAction));
	}
	
	public void jButtonRelacionActionPerformed(String sTipo,ActionEvent evt,int rowIndex,Boolean conInicializar,Boolean esRelacionado) {
		//ABRIR RELACIONES
		try {
			
		if(sTipo.equals("CentroCostoEstructura")) {
			jButtonCentroCostoEstructuraActionPerformed(evt,rowIndex,true,false,null);
		}
		 else if(sTipo.equals("PlaniVacacion")) {
			jButtonPlaniVacacionActionPerformed(evt,rowIndex,true,false,null);
		}
		 else if(sTipo.equals("AsistenciaMensual")) {
			jButtonAsistenciaMensualActionPerformed(evt,rowIndex,true,false,null);
		}
		 else if(sTipo.equals("EmpleadoProcesoRubro")) {
			jButtonEmpleadoProcesoRubroActionPerformed(evt,rowIndex,true,false,null);
		}
		 else if(sTipo.equals("EmpleadoPagoRubro")) {
			jButtonEmpleadoPagoRubroActionPerformed(evt,rowIndex,true,false,null);
		}
		 else if(sTipo.equals("ProvisionEmpleado")) {
			jButtonProvisionEmpleadoActionPerformed(evt,rowIndex,true,false,null);
		}
		 else if(sTipo.equals("Empleado")) {
			jButtonEmpleadoActionPerformed(evt,rowIndex,true,false,null);
		}
		 else if(sTipo.equals("Estructura")) {
			jButtonEstructuraActionPerformed(evt,rowIndex,true,false,null);
		}
		 else if(sTipo.equals("EvaluacionEmpleado")) {
			jButtonEvaluacionEmpleadoActionPerformed(evt,rowIndex,true,false,null);
		}
		 else if(sTipo.equals("EmpleadoImpuestoRenta")) {
			jButtonEmpleadoImpuestoRentaActionPerformed(evt,rowIndex,true,false,null);
		}
		 else if(sTipo.equals("RubroEstructura")) {
			jButtonRubroEstructuraActionPerformed(evt,rowIndex,true,false,null);
		}
		 else if(sTipo.equals("CierreRolMensual")) {
			jButtonCierreRolMensualActionPerformed(evt,rowIndex,true,false,null);
		}
		 else if(sTipo.equals("FormatoNomi")) {
			jButtonFormatoNomiActionPerformed(evt,rowIndex,true,false,null);
		}
		 else if(sTipo.equals("EmpleadoEstructura")) {
			jButtonEmpleadoEstructuraActionPerformed(evt,rowIndex,true,false,null);
		}
		 else if(sTipo.equals("HistorialPagoNomi")) {
			jButtonHistorialPagoNomiActionPerformed(evt,rowIndex,true,false,null);
		}
		 else if(sTipo.equals("AsistenciaDiaria")) {
			jButtonAsistenciaDiariaActionPerformed(evt,rowIndex,true,false,null);
		}
		 else if(sTipo.equals("FuncionEstruc")) {
			jButtonFuncionEstrucActionPerformed(evt,rowIndex,true,false,null);
		}
		 else if(sTipo.equals("SolicitudReemplazo")) {
			jButtonSolicitudReemplazoActionPerformed(evt,rowIndex,true,false,null);
		}
		 else if(sTipo.equals("SolicitudHoraExtra")) {
			jButtonSolicitudHoraExtraActionPerformed(evt,rowIndex,true,false,null);
		}
		 else if(sTipo.equals("EvaluacionNomi")) {
			jButtonEvaluacionNomiActionPerformed(evt,rowIndex,true,false,null);
		}
		 else if(sTipo.equals("SolicitudVacacion")) {
			jButtonSolicitudVacacionActionPerformed(evt,rowIndex,true,false,null);
		}
		 else if(sTipo.equals("ResponsableActivoFijo")) {
			jButtonResponsableActivoFijoActionPerformed(evt,rowIndex,true,false,null);
		}
		 else if(sTipo.equals("RubroEmpleaCuentaContable")) {
			jButtonRubroEmpleaCuentaContableActionPerformed(evt,rowIndex,true,false,null);
		}
		} catch (Exception e) {
			FuncionesSwing.manageException2(this, e,logger,EstructuraConstantesFunciones.CLASSNAME);
		}
	}
	
	public String getDescripcionFk(String sTipo,JTable table,Object value,int intSelectedRow) throws Exception {
		//DESCRIPCIONES FK		
		String sDescripcion="";
		
		if(Constantes.ISUSAEJBLOGICLAYER) {
			estructura=(Estructura) estructuraLogic.getEstructuras().toArray()[table.convertRowIndexToModel(intSelectedRow)];
		} else if(Constantes.ISUSAEJBREMOTE) {
			estructura =(Estructura) estructuras.toArray()[table.convertRowIndexToModel(intSelectedRow)];
		}
					
		
		if(sTipo.equals("Empresa")) {
			//sDescripcion=this.getActualEmpresaForeignKeyDescripcion((Long)value);
			if(!estructura.getIsNew() && !estructura.getIsChanged() && !estructura.getIsDeleted()) {
				sDescripcion=estructura.getempresa_descripcion();
			} else {
				//sDescripcion=this.getActualEmpresaForeignKeyDescripcion((Long)value);
				sDescripcion=estructura.getempresa_descripcion();
			}
		}

		if(sTipo.equals("Sucursal")) {
			//sDescripcion=this.getActualSucursalForeignKeyDescripcion((Long)value);
			if(!estructura.getIsNew() && !estructura.getIsChanged() && !estructura.getIsDeleted()) {
				sDescripcion=estructura.getsucursal_descripcion();
			} else {
				//sDescripcion=this.getActualSucursalForeignKeyDescripcion((Long)value);
				sDescripcion=estructura.getsucursal_descripcion();
			}
		}

		if(sTipo.equals("Estructura")) {
			//sDescripcion=this.getActualEstructuraForeignKeyDescripcion((Long)value);
			if(!estructura.getIsNew() && !estructura.getIsChanged() && !estructura.getIsDeleted()) {
				sDescripcion=estructura.getestructura_descripcion();
			} else {
				//sDescripcion=this.getActualEstructuraForeignKeyDescripcion((Long)value);
				sDescripcion=estructura.getestructura_descripcion();
			}
		}

		if(sTipo.equals("TipoPago_NM")) {
			//sDescripcion=this.getActualTipoPago_NMForeignKeyDescripcion((Long)value);
			if(!estructura.getIsNew() && !estructura.getIsChanged() && !estructura.getIsDeleted()) {
				sDescripcion=estructura.gettipopago_nm_descripcion();
			} else {
				//sDescripcion=this.getActualTipoPago_NMForeignKeyDescripcion((Long)value);
				sDescripcion=estructura.gettipopago_nm_descripcion();
			}
		}

		if(sTipo.equals("NumeroPatronal")) {
			//sDescripcion=this.getActualNumeroPatronalForeignKeyDescripcion((Long)value);
			if(!estructura.getIsNew() && !estructura.getIsChanged() && !estructura.getIsDeleted()) {
				sDescripcion=estructura.getnumeropatronal_descripcion();
			} else {
				//sDescripcion=this.getActualNumeroPatronalForeignKeyDescripcion((Long)value);
				sDescripcion=estructura.getnumeropatronal_descripcion();
			}
		}

		if(sTipo.equals("CuentaContable")) {
			//sDescripcion=this.getActualCuentaContableForeignKeyDescripcion((Long)value);
			if(!estructura.getIsNew() && !estructura.getIsChanged() && !estructura.getIsDeleted()) {
				sDescripcion=estructura.getcuentacontable_descripcion();
			} else {
				//sDescripcion=this.getActualCuentaContableForeignKeyDescripcion((Long)value);
				sDescripcion=estructura.getcuentacontable_descripcion();
			}
		}

		if(sTipo.equals("TipoEstructura")) {
			//sDescripcion=this.getActualTipoEstructuraForeignKeyDescripcion((Long)value);
			if(!estructura.getIsNew() && !estructura.getIsChanged() && !estructura.getIsDeleted()) {
				sDescripcion=estructura.gettipoestructura_descripcion();
			} else {
				//sDescripcion=this.getActualTipoEstructuraForeignKeyDescripcion((Long)value);
				sDescripcion=estructura.gettipoestructura_descripcion();
			}
		}

		if(sTipo.equals("Pais")) {
			//sDescripcion=this.getActualPaisForeignKeyDescripcion((Long)value);
			if(!estructura.getIsNew() && !estructura.getIsChanged() && !estructura.getIsDeleted()) {
				sDescripcion=estructura.getpais_descripcion();
			} else {
				//sDescripcion=this.getActualPaisForeignKeyDescripcion((Long)value);
				sDescripcion=estructura.getpais_descripcion();
			}
		}

		if(sTipo.equals("Ciudad")) {
			//sDescripcion=this.getActualCiudadForeignKeyDescripcion((Long)value);
			if(!estructura.getIsNew() && !estructura.getIsChanged() && !estructura.getIsDeleted()) {
				sDescripcion=estructura.getciudad_descripcion();
			} else {
				//sDescripcion=this.getActualCiudadForeignKeyDescripcion((Long)value);
				sDescripcion=estructura.getciudad_descripcion();
			}
		}

		
		return sDescripcion;
	}
	
	public Color getColorFk(String sTipo,JTable table,Object value,int intSelectedRow) throws Exception {
		//DESCRIPCIONES FK		
		Color color=Color.WHITE;
		
		Estructura estructuraRow=new Estructura();
		
		if(Constantes.ISUSAEJBLOGICLAYER) {
			estructuraRow=(Estructura) estructuraLogic.getEstructuras().toArray()[table.convertRowIndexToModel(intSelectedRow)];
		} else if(Constantes.ISUSAEJBREMOTE) {
			estructuraRow=(Estructura) estructuras.toArray()[table.convertRowIndexToModel(intSelectedRow)];
		}
					
		
		
		return color;
	}
	
	
	
	
	public void jButtonCentroCostoEstructuraActionPerformed(ActionEvent evt,int rowIndex,Boolean conInicializar,Boolean esRelacionado,Estructura estructura) throws Exception {
			try {

				if(this.jInternalFrameDetalleFormEstructura==null) {
					this.inicializarFormDetalle();
				}

				if(Constantes.ISUSAEJBLOGICLAYER) {
					this.estructuraLogic.getNewConnexionToDeep("");
				}

				int intSelectedRow =rowIndex;

				if(intSelectedRow!=-1) {
					//ARCHITECTURE
					if(Constantes.ISUSAEJBLOGICLAYER) {
						this.estructura = (Estructura)this.estructuraLogic.getEstructuras().toArray()[this.jTableDatosEstructura.convertRowIndexToModel(intSelectedRow)];
					} else if(Constantes.ISUSAEJBREMOTE) {
						this.estructura = (Estructura)this.estructuras.toArray()[this.jTableDatosEstructura.convertRowIndexToModel(intSelectedRow)];
					}
					//ARCHITECTURE
				} else {
					if(estructura!=null) {
						this.estructura = estructura;
					} else {
						this.estructura = new Estructura();
					}
				}

				if(this.isTienePermisosCentroCostoEstructura && this.permiteMantenimiento(this.estructura)) {
					CentroCostoEstructuraBeanSwingJInternalFrame centrocostoestructuraBeanSwingJInternalFrame=null;

					if(conInicializar) {
						this.jInternalFrameDetalleFormEstructura.centrocostoestructuraBeanSwingJInternalFramePopup=new CentroCostoEstructuraBeanSwingJInternalFrame(false,false,this.jDesktopPane,this.usuarioActual,this.resumenUsuarioActual,this.moduloActual,this.opcionActual,this.parametroGeneralSg,this.parametroGeneralUsuario,PaginaTipo.SECUNDARIO,false,false,true,false);
						this.jInternalFrameDetalleFormEstructura.centrocostoestructuraBeanSwingJInternalFramePopup.setJInternalFrameParent(this);

						centrocostoestructuraBeanSwingJInternalFrame=this.jInternalFrameDetalleFormEstructura.centrocostoestructuraBeanSwingJInternalFramePopup;
					} else {
						centrocostoestructuraBeanSwingJInternalFrame=this.jInternalFrameDetalleFormEstructura.centrocostoestructuraBeanSwingJInternalFrame;
					}

					List<Estructura> estructuras=new ArrayList<Estructura>();
					estructuras.add(this.estructura);
					if(!esRelacionado) {
						//centrocostoestructuraBeanSwingJInternalFrame.centrocostoestructuraSessionBean.setConGuardarRelaciones(false);
						//centrocostoestructuraBeanSwingJInternalFrame.centrocostoestructuraSessionBean.setEsGuardarRelacionado(false);
					}

					//DESHABILITA TEMPORALMENTE EVENTOS CHANGE DE TEXTOS,COMBOS,ETC
					centrocostoestructuraBeanSwingJInternalFrame.estaModoSeleccionar=true;
					this.jInternalFrameDetalleFormEstructura.cargarCentroCostoEstructuraBeanSwingJInternalFrame(estructuras,this.estructura,centrocostoestructuraBeanSwingJInternalFrame,/*conInicializar,*/centrocostoestructuraBeanSwingJInternalFrame.centrocostoestructuraSessionBean.getConGuardarRelaciones(),centrocostoestructuraBeanSwingJInternalFrame.centrocostoestructuraSessionBean.getEsGuardarRelacionado());
					centrocostoestructuraBeanSwingJInternalFrame.estaModoSeleccionar=false;


					if(!esRelacionado) {
						centrocostoestructuraBeanSwingJInternalFrame.actualizarEstadoPanelsCentroCostoEstructura("no_relacionado");

						centrocostoestructuraBeanSwingJInternalFrame.redimensionarTablaDatosConTamanio(CentroCostoEstructuraConstantesFunciones.ITAMANIOFILATABLA + (CentroCostoEstructuraConstantesFunciones.ITAMANIOFILATABLA/2));

						centrocostoestructuraBeanSwingJInternalFrame.setLocation(xOffset*(openFrameCount + Constantes.INUM_MAX_VENTANAS_REL_X), yOffset*(openFrameCount+Constantes.INUM_MAX_VENTANAS_REL_Y));

						TitledBorder titledBorderEstructura=(TitledBorder)this.jScrollPanelDatosEstructura.getBorder();
						TitledBorder titledBorderCentroCostoEstructura=(TitledBorder)centrocostoestructuraBeanSwingJInternalFrame.jScrollPanelDatosCentroCostoEstructura.getBorder();

						titledBorderCentroCostoEstructura.setTitle(titledBorderEstructura.getTitle() + " -> Centro Costo Estructura");

						if(!Constantes.CON_VARIAS_VENTANAS) {
							MainJFrame.cerrarJInternalFramesExistentes(this.jDesktopPane,centrocostoestructuraBeanSwingJInternalFrame);
						}

						centrocostoestructuraBeanSwingJInternalFrame.setVisible(true);

						this.jDesktopPane.add(centrocostoestructuraBeanSwingJInternalFrame);

						centrocostoestructuraBeanSwingJInternalFrame.setSelected(true);
					}

				} else {
					if(!this.estructuraSessionBean.getConGuardarRelaciones()) {
						JOptionPane.showMessageDialog(this,"NO TIENE PERMISOS PARA USAR LA FUNCIONALIDAD DE Centro Costo Estructura",Constantes.SERROR,JOptionPane.ERROR_MESSAGE);
					}
				}
				if(Constantes.ISUSAEJBLOGICLAYER) {
					this.estructuraLogic.commitNewConnexionToDeep();
				}

			}

			catch(Exception e) {
				if(Constantes.ISUSAEJBLOGICLAYER) {
					this.estructuraLogic.rollbackNewConnexionToDeep();
				}


				FuncionesSwing.manageException2(this, e,logger,EstructuraConstantesFunciones.CLASSNAME);
			} finally { 
				if(Constantes.ISUSAEJBLOGICLAYER) {
					this.estructuraLogic.closeNewConnexionToDeep();
				}

			}
		}

	public void jButtonPlaniVacacionActionPerformed(ActionEvent evt,int rowIndex,Boolean conInicializar,Boolean esRelacionado,Estructura estructura) throws Exception {
			try {

				if(this.jInternalFrameDetalleFormEstructura==null) {
					this.inicializarFormDetalle();
				}

				if(Constantes.ISUSAEJBLOGICLAYER) {
					this.estructuraLogic.getNewConnexionToDeep("");
				}

				int intSelectedRow =rowIndex;

				if(intSelectedRow!=-1) {
					//ARCHITECTURE
					if(Constantes.ISUSAEJBLOGICLAYER) {
						this.estructura = (Estructura)this.estructuraLogic.getEstructuras().toArray()[this.jTableDatosEstructura.convertRowIndexToModel(intSelectedRow)];
					} else if(Constantes.ISUSAEJBREMOTE) {
						this.estructura = (Estructura)this.estructuras.toArray()[this.jTableDatosEstructura.convertRowIndexToModel(intSelectedRow)];
					}
					//ARCHITECTURE
				} else {
					if(estructura!=null) {
						this.estructura = estructura;
					} else {
						this.estructura = new Estructura();
					}
				}

				if(this.isTienePermisosPlaniVacacion && this.permiteMantenimiento(this.estructura)) {
					PlaniVacacionBeanSwingJInternalFrame planivacacionBeanSwingJInternalFrame=null;

					if(conInicializar) {
						this.jInternalFrameDetalleFormEstructura.planivacacionBeanSwingJInternalFramePopup=new PlaniVacacionBeanSwingJInternalFrame(false,false,this.jDesktopPane,this.usuarioActual,this.resumenUsuarioActual,this.moduloActual,this.opcionActual,this.parametroGeneralSg,this.parametroGeneralUsuario,PaginaTipo.SECUNDARIO,false,false,true,false);
						this.jInternalFrameDetalleFormEstructura.planivacacionBeanSwingJInternalFramePopup.setJInternalFrameParent(this);

						planivacacionBeanSwingJInternalFrame=this.jInternalFrameDetalleFormEstructura.planivacacionBeanSwingJInternalFramePopup;
					} else {
						planivacacionBeanSwingJInternalFrame=this.jInternalFrameDetalleFormEstructura.planivacacionBeanSwingJInternalFrame;
					}

					List<Estructura> estructuras=new ArrayList<Estructura>();
					estructuras.add(this.estructura);
					if(!esRelacionado) {
						//planivacacionBeanSwingJInternalFrame.planivacacionSessionBean.setConGuardarRelaciones(false);
						//planivacacionBeanSwingJInternalFrame.planivacacionSessionBean.setEsGuardarRelacionado(false);
					}

					//DESHABILITA TEMPORALMENTE EVENTOS CHANGE DE TEXTOS,COMBOS,ETC
					planivacacionBeanSwingJInternalFrame.estaModoSeleccionar=true;
					this.jInternalFrameDetalleFormEstructura.cargarPlaniVacacionBeanSwingJInternalFrame(estructuras,this.estructura,planivacacionBeanSwingJInternalFrame,/*conInicializar,*/planivacacionBeanSwingJInternalFrame.planivacacionSessionBean.getConGuardarRelaciones(),planivacacionBeanSwingJInternalFrame.planivacacionSessionBean.getEsGuardarRelacionado());
					planivacacionBeanSwingJInternalFrame.estaModoSeleccionar=false;


					if(!esRelacionado) {
						planivacacionBeanSwingJInternalFrame.actualizarEstadoPanelsPlaniVacacion("no_relacionado");

						planivacacionBeanSwingJInternalFrame.redimensionarTablaDatosConTamanio(PlaniVacacionConstantesFunciones.ITAMANIOFILATABLA + (PlaniVacacionConstantesFunciones.ITAMANIOFILATABLA/2));

						planivacacionBeanSwingJInternalFrame.setLocation(xOffset*(openFrameCount + Constantes.INUM_MAX_VENTANAS_REL_X), yOffset*(openFrameCount+Constantes.INUM_MAX_VENTANAS_REL_Y));

						TitledBorder titledBorderEstructura=(TitledBorder)this.jScrollPanelDatosEstructura.getBorder();
						TitledBorder titledBorderPlaniVacacion=(TitledBorder)planivacacionBeanSwingJInternalFrame.jScrollPanelDatosPlaniVacacion.getBorder();

						titledBorderPlaniVacacion.setTitle(titledBorderEstructura.getTitle() + " -> Plani Vacacion");

						if(!Constantes.CON_VARIAS_VENTANAS) {
							MainJFrame.cerrarJInternalFramesExistentes(this.jDesktopPane,planivacacionBeanSwingJInternalFrame);
						}

						planivacacionBeanSwingJInternalFrame.setVisible(true);

						this.jDesktopPane.add(planivacacionBeanSwingJInternalFrame);

						planivacacionBeanSwingJInternalFrame.setSelected(true);
					}

				} else {
					if(!this.estructuraSessionBean.getConGuardarRelaciones()) {
						JOptionPane.showMessageDialog(this,"NO TIENE PERMISOS PARA USAR LA FUNCIONALIDAD DE Plani Vacacion",Constantes.SERROR,JOptionPane.ERROR_MESSAGE);
					}
				}
				if(Constantes.ISUSAEJBLOGICLAYER) {
					this.estructuraLogic.commitNewConnexionToDeep();
				}

			}

			catch(Exception e) {
				if(Constantes.ISUSAEJBLOGICLAYER) {
					this.estructuraLogic.rollbackNewConnexionToDeep();
				}


				FuncionesSwing.manageException2(this, e,logger,EstructuraConstantesFunciones.CLASSNAME);
			} finally { 
				if(Constantes.ISUSAEJBLOGICLAYER) {
					this.estructuraLogic.closeNewConnexionToDeep();
				}

			}
		}

	public void jButtonAsistenciaMensualActionPerformed(ActionEvent evt,int rowIndex,Boolean conInicializar,Boolean esRelacionado,Estructura estructura) throws Exception {
			try {

				if(this.jInternalFrameDetalleFormEstructura==null) {
					this.inicializarFormDetalle();
				}

				if(Constantes.ISUSAEJBLOGICLAYER) {
					this.estructuraLogic.getNewConnexionToDeep("");
				}

				int intSelectedRow =rowIndex;

				if(intSelectedRow!=-1) {
					//ARCHITECTURE
					if(Constantes.ISUSAEJBLOGICLAYER) {
						this.estructura = (Estructura)this.estructuraLogic.getEstructuras().toArray()[this.jTableDatosEstructura.convertRowIndexToModel(intSelectedRow)];
					} else if(Constantes.ISUSAEJBREMOTE) {
						this.estructura = (Estructura)this.estructuras.toArray()[this.jTableDatosEstructura.convertRowIndexToModel(intSelectedRow)];
					}
					//ARCHITECTURE
				} else {
					if(estructura!=null) {
						this.estructura = estructura;
					} else {
						this.estructura = new Estructura();
					}
				}

				if(this.isTienePermisosAsistenciaMensual && this.permiteMantenimiento(this.estructura)) {
					AsistenciaMensualBeanSwingJInternalFrame asistenciamensualBeanSwingJInternalFrame=null;

					if(conInicializar) {
						this.jInternalFrameDetalleFormEstructura.asistenciamensualBeanSwingJInternalFramePopup=new AsistenciaMensualBeanSwingJInternalFrame(false,false,this.jDesktopPane,this.usuarioActual,this.resumenUsuarioActual,this.moduloActual,this.opcionActual,this.parametroGeneralSg,this.parametroGeneralUsuario,PaginaTipo.SECUNDARIO,false,false,true,false);
						this.jInternalFrameDetalleFormEstructura.asistenciamensualBeanSwingJInternalFramePopup.setJInternalFrameParent(this);

						asistenciamensualBeanSwingJInternalFrame=this.jInternalFrameDetalleFormEstructura.asistenciamensualBeanSwingJInternalFramePopup;
					} else {
						asistenciamensualBeanSwingJInternalFrame=this.jInternalFrameDetalleFormEstructura.asistenciamensualBeanSwingJInternalFrame;
					}

					List<Estructura> estructuras=new ArrayList<Estructura>();
					estructuras.add(this.estructura);
					if(!esRelacionado) {
						//asistenciamensualBeanSwingJInternalFrame.asistenciamensualSessionBean.setConGuardarRelaciones(false);
						//asistenciamensualBeanSwingJInternalFrame.asistenciamensualSessionBean.setEsGuardarRelacionado(false);
					}

					//DESHABILITA TEMPORALMENTE EVENTOS CHANGE DE TEXTOS,COMBOS,ETC
					asistenciamensualBeanSwingJInternalFrame.estaModoSeleccionar=true;
					this.jInternalFrameDetalleFormEstructura.cargarAsistenciaMensualBeanSwingJInternalFrame(estructuras,this.estructura,asistenciamensualBeanSwingJInternalFrame,/*conInicializar,*/asistenciamensualBeanSwingJInternalFrame.asistenciamensualSessionBean.getConGuardarRelaciones(),asistenciamensualBeanSwingJInternalFrame.asistenciamensualSessionBean.getEsGuardarRelacionado());
					asistenciamensualBeanSwingJInternalFrame.estaModoSeleccionar=false;


					if(!esRelacionado) {
						asistenciamensualBeanSwingJInternalFrame.actualizarEstadoPanelsAsistenciaMensual("no_relacionado");

						asistenciamensualBeanSwingJInternalFrame.redimensionarTablaDatosConTamanio(AsistenciaMensualConstantesFunciones.ITAMANIOFILATABLA + (AsistenciaMensualConstantesFunciones.ITAMANIOFILATABLA/2));

						asistenciamensualBeanSwingJInternalFrame.setLocation(xOffset*(openFrameCount + Constantes.INUM_MAX_VENTANAS_REL_X), yOffset*(openFrameCount+Constantes.INUM_MAX_VENTANAS_REL_Y));

						TitledBorder titledBorderEstructura=(TitledBorder)this.jScrollPanelDatosEstructura.getBorder();
						TitledBorder titledBorderAsistenciaMensual=(TitledBorder)asistenciamensualBeanSwingJInternalFrame.jScrollPanelDatosAsistenciaMensual.getBorder();

						titledBorderAsistenciaMensual.setTitle(titledBorderEstructura.getTitle() + " -> Asistencia Mensual");

						if(!Constantes.CON_VARIAS_VENTANAS) {
							MainJFrame.cerrarJInternalFramesExistentes(this.jDesktopPane,asistenciamensualBeanSwingJInternalFrame);
						}

						asistenciamensualBeanSwingJInternalFrame.setVisible(true);

						this.jDesktopPane.add(asistenciamensualBeanSwingJInternalFrame);

						asistenciamensualBeanSwingJInternalFrame.setSelected(true);
					}

				} else {
					if(!this.estructuraSessionBean.getConGuardarRelaciones()) {
						JOptionPane.showMessageDialog(this,"NO TIENE PERMISOS PARA USAR LA FUNCIONALIDAD DE Asistencia Mensual",Constantes.SERROR,JOptionPane.ERROR_MESSAGE);
					}
				}
				if(Constantes.ISUSAEJBLOGICLAYER) {
					this.estructuraLogic.commitNewConnexionToDeep();
				}

			}

			catch(Exception e) {
				if(Constantes.ISUSAEJBLOGICLAYER) {
					this.estructuraLogic.rollbackNewConnexionToDeep();
				}


				FuncionesSwing.manageException2(this, e,logger,EstructuraConstantesFunciones.CLASSNAME);
			} finally { 
				if(Constantes.ISUSAEJBLOGICLAYER) {
					this.estructuraLogic.closeNewConnexionToDeep();
				}

			}
		}

	public void jButtonEmpleadoProcesoRubroActionPerformed(ActionEvent evt,int rowIndex,Boolean conInicializar,Boolean esRelacionado,Estructura estructura) throws Exception {
			try {

				if(this.jInternalFrameDetalleFormEstructura==null) {
					this.inicializarFormDetalle();
				}

				if(Constantes.ISUSAEJBLOGICLAYER) {
					this.estructuraLogic.getNewConnexionToDeep("");
				}

				int intSelectedRow =rowIndex;

				if(intSelectedRow!=-1) {
					//ARCHITECTURE
					if(Constantes.ISUSAEJBLOGICLAYER) {
						this.estructura = (Estructura)this.estructuraLogic.getEstructuras().toArray()[this.jTableDatosEstructura.convertRowIndexToModel(intSelectedRow)];
					} else if(Constantes.ISUSAEJBREMOTE) {
						this.estructura = (Estructura)this.estructuras.toArray()[this.jTableDatosEstructura.convertRowIndexToModel(intSelectedRow)];
					}
					//ARCHITECTURE
				} else {
					if(estructura!=null) {
						this.estructura = estructura;
					} else {
						this.estructura = new Estructura();
					}
				}

				if(this.isTienePermisosEmpleadoProcesoRubro && this.permiteMantenimiento(this.estructura)) {
					EmpleadoProcesoRubroBeanSwingJInternalFrame empleadoprocesorubroBeanSwingJInternalFrame=null;

					if(conInicializar) {
						this.jInternalFrameDetalleFormEstructura.empleadoprocesorubroBeanSwingJInternalFramePopup=new EmpleadoProcesoRubroBeanSwingJInternalFrame(false,false,this.jDesktopPane,this.usuarioActual,this.resumenUsuarioActual,this.moduloActual,this.opcionActual,this.parametroGeneralSg,this.parametroGeneralUsuario,PaginaTipo.SECUNDARIO,false,false,true,false);
						this.jInternalFrameDetalleFormEstructura.empleadoprocesorubroBeanSwingJInternalFramePopup.setJInternalFrameParent(this);

						empleadoprocesorubroBeanSwingJInternalFrame=this.jInternalFrameDetalleFormEstructura.empleadoprocesorubroBeanSwingJInternalFramePopup;
					} else {
						empleadoprocesorubroBeanSwingJInternalFrame=this.jInternalFrameDetalleFormEstructura.empleadoprocesorubroBeanSwingJInternalFrame;
					}

					List<Estructura> estructuras=new ArrayList<Estructura>();
					estructuras.add(this.estructura);
					if(!esRelacionado) {
						//empleadoprocesorubroBeanSwingJInternalFrame.empleadoprocesorubroSessionBean.setConGuardarRelaciones(false);
						//empleadoprocesorubroBeanSwingJInternalFrame.empleadoprocesorubroSessionBean.setEsGuardarRelacionado(false);
					}

					//DESHABILITA TEMPORALMENTE EVENTOS CHANGE DE TEXTOS,COMBOS,ETC
					empleadoprocesorubroBeanSwingJInternalFrame.estaModoSeleccionar=true;
					this.jInternalFrameDetalleFormEstructura.cargarEmpleadoProcesoRubroBeanSwingJInternalFrame(estructuras,this.estructura,empleadoprocesorubroBeanSwingJInternalFrame,/*conInicializar,*/empleadoprocesorubroBeanSwingJInternalFrame.empleadoprocesorubroSessionBean.getConGuardarRelaciones(),empleadoprocesorubroBeanSwingJInternalFrame.empleadoprocesorubroSessionBean.getEsGuardarRelacionado());
					empleadoprocesorubroBeanSwingJInternalFrame.estaModoSeleccionar=false;


					if(!esRelacionado) {
						empleadoprocesorubroBeanSwingJInternalFrame.actualizarEstadoPanelsEmpleadoProcesoRubro("no_relacionado");

						empleadoprocesorubroBeanSwingJInternalFrame.redimensionarTablaDatosConTamanio(EmpleadoProcesoRubroConstantesFunciones.ITAMANIOFILATABLA + (EmpleadoProcesoRubroConstantesFunciones.ITAMANIOFILATABLA/2));

						empleadoprocesorubroBeanSwingJInternalFrame.setLocation(xOffset*(openFrameCount + Constantes.INUM_MAX_VENTANAS_REL_X), yOffset*(openFrameCount+Constantes.INUM_MAX_VENTANAS_REL_Y));

						TitledBorder titledBorderEstructura=(TitledBorder)this.jScrollPanelDatosEstructura.getBorder();
						TitledBorder titledBorderEmpleadoProcesoRubro=(TitledBorder)empleadoprocesorubroBeanSwingJInternalFrame.jScrollPanelDatosEmpleadoProcesoRubro.getBorder();

						titledBorderEmpleadoProcesoRubro.setTitle(titledBorderEstructura.getTitle() + " -> Empleado Proceso Rubro");

						if(!Constantes.CON_VARIAS_VENTANAS) {
							MainJFrame.cerrarJInternalFramesExistentes(this.jDesktopPane,empleadoprocesorubroBeanSwingJInternalFrame);
						}

						empleadoprocesorubroBeanSwingJInternalFrame.setVisible(true);

						this.jDesktopPane.add(empleadoprocesorubroBeanSwingJInternalFrame);

						empleadoprocesorubroBeanSwingJInternalFrame.setSelected(true);
					}

				} else {
					if(!this.estructuraSessionBean.getConGuardarRelaciones()) {
						JOptionPane.showMessageDialog(this,"NO TIENE PERMISOS PARA USAR LA FUNCIONALIDAD DE Empleado Proceso Rubro",Constantes.SERROR,JOptionPane.ERROR_MESSAGE);
					}
				}
				if(Constantes.ISUSAEJBLOGICLAYER) {
					this.estructuraLogic.commitNewConnexionToDeep();
				}

			}

			catch(Exception e) {
				if(Constantes.ISUSAEJBLOGICLAYER) {
					this.estructuraLogic.rollbackNewConnexionToDeep();
				}


				FuncionesSwing.manageException2(this, e,logger,EstructuraConstantesFunciones.CLASSNAME);
			} finally { 
				if(Constantes.ISUSAEJBLOGICLAYER) {
					this.estructuraLogic.closeNewConnexionToDeep();
				}

			}
		}

	public void jButtonEmpleadoPagoRubroActionPerformed(ActionEvent evt,int rowIndex,Boolean conInicializar,Boolean esRelacionado,Estructura estructura) throws Exception {
			try {

				if(this.jInternalFrameDetalleFormEstructura==null) {
					this.inicializarFormDetalle();
				}

				if(Constantes.ISUSAEJBLOGICLAYER) {
					this.estructuraLogic.getNewConnexionToDeep("");
				}

				int intSelectedRow =rowIndex;

				if(intSelectedRow!=-1) {
					//ARCHITECTURE
					if(Constantes.ISUSAEJBLOGICLAYER) {
						this.estructura = (Estructura)this.estructuraLogic.getEstructuras().toArray()[this.jTableDatosEstructura.convertRowIndexToModel(intSelectedRow)];
					} else if(Constantes.ISUSAEJBREMOTE) {
						this.estructura = (Estructura)this.estructuras.toArray()[this.jTableDatosEstructura.convertRowIndexToModel(intSelectedRow)];
					}
					//ARCHITECTURE
				} else {
					if(estructura!=null) {
						this.estructura = estructura;
					} else {
						this.estructura = new Estructura();
					}
				}

				if(this.isTienePermisosEmpleadoPagoRubro && this.permiteMantenimiento(this.estructura)) {
					EmpleadoPagoRubroBeanSwingJInternalFrame empleadopagorubroBeanSwingJInternalFrame=null;

					if(conInicializar) {
						this.jInternalFrameDetalleFormEstructura.empleadopagorubroBeanSwingJInternalFramePopup=new EmpleadoPagoRubroBeanSwingJInternalFrame(false,false,this.jDesktopPane,this.usuarioActual,this.resumenUsuarioActual,this.moduloActual,this.opcionActual,this.parametroGeneralSg,this.parametroGeneralUsuario,PaginaTipo.SECUNDARIO,false,false,true,false);
						this.jInternalFrameDetalleFormEstructura.empleadopagorubroBeanSwingJInternalFramePopup.setJInternalFrameParent(this);

						empleadopagorubroBeanSwingJInternalFrame=this.jInternalFrameDetalleFormEstructura.empleadopagorubroBeanSwingJInternalFramePopup;
					} else {
						empleadopagorubroBeanSwingJInternalFrame=this.jInternalFrameDetalleFormEstructura.empleadopagorubroBeanSwingJInternalFrame;
					}

					List<Estructura> estructuras=new ArrayList<Estructura>();
					estructuras.add(this.estructura);
					if(!esRelacionado) {
						//empleadopagorubroBeanSwingJInternalFrame.empleadopagorubroSessionBean.setConGuardarRelaciones(false);
						//empleadopagorubroBeanSwingJInternalFrame.empleadopagorubroSessionBean.setEsGuardarRelacionado(false);
					}

					//DESHABILITA TEMPORALMENTE EVENTOS CHANGE DE TEXTOS,COMBOS,ETC
					empleadopagorubroBeanSwingJInternalFrame.estaModoSeleccionar=true;
					this.jInternalFrameDetalleFormEstructura.cargarEmpleadoPagoRubroBeanSwingJInternalFrame(estructuras,this.estructura,empleadopagorubroBeanSwingJInternalFrame,/*conInicializar,*/empleadopagorubroBeanSwingJInternalFrame.empleadopagorubroSessionBean.getConGuardarRelaciones(),empleadopagorubroBeanSwingJInternalFrame.empleadopagorubroSessionBean.getEsGuardarRelacionado());
					empleadopagorubroBeanSwingJInternalFrame.estaModoSeleccionar=false;


					if(!esRelacionado) {
						empleadopagorubroBeanSwingJInternalFrame.actualizarEstadoPanelsEmpleadoPagoRubro("no_relacionado");

						empleadopagorubroBeanSwingJInternalFrame.redimensionarTablaDatosConTamanio(EmpleadoPagoRubroConstantesFunciones.ITAMANIOFILATABLA + (EmpleadoPagoRubroConstantesFunciones.ITAMANIOFILATABLA/2));

						empleadopagorubroBeanSwingJInternalFrame.setLocation(xOffset*(openFrameCount + Constantes.INUM_MAX_VENTANAS_REL_X), yOffset*(openFrameCount+Constantes.INUM_MAX_VENTANAS_REL_Y));

						TitledBorder titledBorderEstructura=(TitledBorder)this.jScrollPanelDatosEstructura.getBorder();
						TitledBorder titledBorderEmpleadoPagoRubro=(TitledBorder)empleadopagorubroBeanSwingJInternalFrame.jScrollPanelDatosEmpleadoPagoRubro.getBorder();

						titledBorderEmpleadoPagoRubro.setTitle(titledBorderEstructura.getTitle() + " -> Empleado Pago Rubro");

						if(!Constantes.CON_VARIAS_VENTANAS) {
							MainJFrame.cerrarJInternalFramesExistentes(this.jDesktopPane,empleadopagorubroBeanSwingJInternalFrame);
						}

						empleadopagorubroBeanSwingJInternalFrame.setVisible(true);

						this.jDesktopPane.add(empleadopagorubroBeanSwingJInternalFrame);

						empleadopagorubroBeanSwingJInternalFrame.setSelected(true);
					}

				} else {
					if(!this.estructuraSessionBean.getConGuardarRelaciones()) {
						JOptionPane.showMessageDialog(this,"NO TIENE PERMISOS PARA USAR LA FUNCIONALIDAD DE Empleado Pago Rubro",Constantes.SERROR,JOptionPane.ERROR_MESSAGE);
					}
				}
				if(Constantes.ISUSAEJBLOGICLAYER) {
					this.estructuraLogic.commitNewConnexionToDeep();
				}

			}

			catch(Exception e) {
				if(Constantes.ISUSAEJBLOGICLAYER) {
					this.estructuraLogic.rollbackNewConnexionToDeep();
				}


				FuncionesSwing.manageException2(this, e,logger,EstructuraConstantesFunciones.CLASSNAME);
			} finally { 
				if(Constantes.ISUSAEJBLOGICLAYER) {
					this.estructuraLogic.closeNewConnexionToDeep();
				}

			}
		}

	public void jButtonProvisionEmpleadoActionPerformed(ActionEvent evt,int rowIndex,Boolean conInicializar,Boolean esRelacionado,Estructura estructura) throws Exception {
			try {

				if(this.jInternalFrameDetalleFormEstructura==null) {
					this.inicializarFormDetalle();
				}

				if(Constantes.ISUSAEJBLOGICLAYER) {
					this.estructuraLogic.getNewConnexionToDeep("");
				}

				int intSelectedRow =rowIndex;

				if(intSelectedRow!=-1) {
					//ARCHITECTURE
					if(Constantes.ISUSAEJBLOGICLAYER) {
						this.estructura = (Estructura)this.estructuraLogic.getEstructuras().toArray()[this.jTableDatosEstructura.convertRowIndexToModel(intSelectedRow)];
					} else if(Constantes.ISUSAEJBREMOTE) {
						this.estructura = (Estructura)this.estructuras.toArray()[this.jTableDatosEstructura.convertRowIndexToModel(intSelectedRow)];
					}
					//ARCHITECTURE
				} else {
					if(estructura!=null) {
						this.estructura = estructura;
					} else {
						this.estructura = new Estructura();
					}
				}

				if(this.isTienePermisosProvisionEmpleado && this.permiteMantenimiento(this.estructura)) {
					ProvisionEmpleadoBeanSwingJInternalFrame provisionempleadoBeanSwingJInternalFrame=null;

					if(conInicializar) {
						this.jInternalFrameDetalleFormEstructura.provisionempleadoBeanSwingJInternalFramePopup=new ProvisionEmpleadoBeanSwingJInternalFrame(false,false,this.jDesktopPane,this.usuarioActual,this.resumenUsuarioActual,this.moduloActual,this.opcionActual,this.parametroGeneralSg,this.parametroGeneralUsuario,PaginaTipo.SECUNDARIO,false,false,true,false);
						this.jInternalFrameDetalleFormEstructura.provisionempleadoBeanSwingJInternalFramePopup.setJInternalFrameParent(this);

						provisionempleadoBeanSwingJInternalFrame=this.jInternalFrameDetalleFormEstructura.provisionempleadoBeanSwingJInternalFramePopup;
					} else {
						provisionempleadoBeanSwingJInternalFrame=this.jInternalFrameDetalleFormEstructura.provisionempleadoBeanSwingJInternalFrame;
					}

					List<Estructura> estructuras=new ArrayList<Estructura>();
					estructuras.add(this.estructura);
					if(!esRelacionado) {
						//provisionempleadoBeanSwingJInternalFrame.provisionempleadoSessionBean.setConGuardarRelaciones(false);
						//provisionempleadoBeanSwingJInternalFrame.provisionempleadoSessionBean.setEsGuardarRelacionado(false);
					}

					//DESHABILITA TEMPORALMENTE EVENTOS CHANGE DE TEXTOS,COMBOS,ETC
					provisionempleadoBeanSwingJInternalFrame.estaModoSeleccionar=true;
					this.jInternalFrameDetalleFormEstructura.cargarProvisionEmpleadoBeanSwingJInternalFrame(estructuras,this.estructura,provisionempleadoBeanSwingJInternalFrame,/*conInicializar,*/provisionempleadoBeanSwingJInternalFrame.provisionempleadoSessionBean.getConGuardarRelaciones(),provisionempleadoBeanSwingJInternalFrame.provisionempleadoSessionBean.getEsGuardarRelacionado());
					provisionempleadoBeanSwingJInternalFrame.estaModoSeleccionar=false;


					if(!esRelacionado) {
						provisionempleadoBeanSwingJInternalFrame.actualizarEstadoPanelsProvisionEmpleado("no_relacionado");

						provisionempleadoBeanSwingJInternalFrame.redimensionarTablaDatosConTamanio(ProvisionEmpleadoConstantesFunciones.ITAMANIOFILATABLA + (ProvisionEmpleadoConstantesFunciones.ITAMANIOFILATABLA/2));

						provisionempleadoBeanSwingJInternalFrame.setLocation(xOffset*(openFrameCount + Constantes.INUM_MAX_VENTANAS_REL_X), yOffset*(openFrameCount+Constantes.INUM_MAX_VENTANAS_REL_Y));

						TitledBorder titledBorderEstructura=(TitledBorder)this.jScrollPanelDatosEstructura.getBorder();
						TitledBorder titledBorderProvisionEmpleado=(TitledBorder)provisionempleadoBeanSwingJInternalFrame.jScrollPanelDatosProvisionEmpleado.getBorder();

						titledBorderProvisionEmpleado.setTitle(titledBorderEstructura.getTitle() + " -> Provision Empleado");

						if(!Constantes.CON_VARIAS_VENTANAS) {
							MainJFrame.cerrarJInternalFramesExistentes(this.jDesktopPane,provisionempleadoBeanSwingJInternalFrame);
						}

						provisionempleadoBeanSwingJInternalFrame.setVisible(true);

						this.jDesktopPane.add(provisionempleadoBeanSwingJInternalFrame);

						provisionempleadoBeanSwingJInternalFrame.setSelected(true);
					}

				} else {
					if(!this.estructuraSessionBean.getConGuardarRelaciones()) {
						JOptionPane.showMessageDialog(this,"NO TIENE PERMISOS PARA USAR LA FUNCIONALIDAD DE Provision Empleado",Constantes.SERROR,JOptionPane.ERROR_MESSAGE);
					}
				}
				if(Constantes.ISUSAEJBLOGICLAYER) {
					this.estructuraLogic.commitNewConnexionToDeep();
				}

			}

			catch(Exception e) {
				if(Constantes.ISUSAEJBLOGICLAYER) {
					this.estructuraLogic.rollbackNewConnexionToDeep();
				}


				FuncionesSwing.manageException2(this, e,logger,EstructuraConstantesFunciones.CLASSNAME);
			} finally { 
				if(Constantes.ISUSAEJBLOGICLAYER) {
					this.estructuraLogic.closeNewConnexionToDeep();
				}

			}
		}

	public void jButtonEmpleadoActionPerformed(ActionEvent evt,int rowIndex,Boolean conInicializar,Boolean esRelacionado,Estructura estructura) throws Exception {
			try {

				if(this.jInternalFrameDetalleFormEstructura==null) {
					this.inicializarFormDetalle();
				}

				if(Constantes.ISUSAEJBLOGICLAYER) {
					this.estructuraLogic.getNewConnexionToDeep("");
				}

				int intSelectedRow =rowIndex;

				if(intSelectedRow!=-1) {
					//ARCHITECTURE
					if(Constantes.ISUSAEJBLOGICLAYER) {
						this.estructura = (Estructura)this.estructuraLogic.getEstructuras().toArray()[this.jTableDatosEstructura.convertRowIndexToModel(intSelectedRow)];
					} else if(Constantes.ISUSAEJBREMOTE) {
						this.estructura = (Estructura)this.estructuras.toArray()[this.jTableDatosEstructura.convertRowIndexToModel(intSelectedRow)];
					}
					//ARCHITECTURE
				} else {
					if(estructura!=null) {
						this.estructura = estructura;
					} else {
						this.estructura = new Estructura();
					}
				}

				if(this.isTienePermisosEmpleado && this.permiteMantenimiento(this.estructura)) {
					EmpleadoBeanSwingJInternalFrame empleadoBeanSwingJInternalFrame=null;

					if(conInicializar) {
						this.jInternalFrameDetalleFormEstructura.empleadoBeanSwingJInternalFramePopup=new EmpleadoBeanSwingJInternalFrame(false,false,this.jDesktopPane,this.usuarioActual,this.resumenUsuarioActual,this.moduloActual,this.opcionActual,this.parametroGeneralSg,this.parametroGeneralUsuario,PaginaTipo.SECUNDARIO,false,false,true,false);
						this.jInternalFrameDetalleFormEstructura.empleadoBeanSwingJInternalFramePopup.setJInternalFrameParent(this);

						empleadoBeanSwingJInternalFrame=this.jInternalFrameDetalleFormEstructura.empleadoBeanSwingJInternalFramePopup;
					} else {
						empleadoBeanSwingJInternalFrame=this.jInternalFrameDetalleFormEstructura.empleadoBeanSwingJInternalFrame;
					}

					List<Estructura> estructuras=new ArrayList<Estructura>();
					estructuras.add(this.estructura);
					if(!esRelacionado) {
						//empleadoBeanSwingJInternalFrame.empleadoSessionBean.setConGuardarRelaciones(false);
						//empleadoBeanSwingJInternalFrame.empleadoSessionBean.setEsGuardarRelacionado(false);
					}

					//DESHABILITA TEMPORALMENTE EVENTOS CHANGE DE TEXTOS,COMBOS,ETC
					empleadoBeanSwingJInternalFrame.estaModoSeleccionar=true;
					this.jInternalFrameDetalleFormEstructura.cargarEmpleadoBeanSwingJInternalFrame(estructuras,this.estructura,empleadoBeanSwingJInternalFrame,/*conInicializar,*/empleadoBeanSwingJInternalFrame.empleadoSessionBean.getConGuardarRelaciones(),empleadoBeanSwingJInternalFrame.empleadoSessionBean.getEsGuardarRelacionado());
					empleadoBeanSwingJInternalFrame.estaModoSeleccionar=false;


					if(!esRelacionado) {
						empleadoBeanSwingJInternalFrame.actualizarEstadoPanelsEmpleado("no_relacionado");

						empleadoBeanSwingJInternalFrame.redimensionarTablaDatosConTamanio(EmpleadoConstantesFunciones.ITAMANIOFILATABLA + (EmpleadoConstantesFunciones.ITAMANIOFILATABLA/2));

						empleadoBeanSwingJInternalFrame.setLocation(xOffset*(openFrameCount + Constantes.INUM_MAX_VENTANAS_REL_X), yOffset*(openFrameCount+Constantes.INUM_MAX_VENTANAS_REL_Y));

						TitledBorder titledBorderEstructura=(TitledBorder)this.jScrollPanelDatosEstructura.getBorder();
						TitledBorder titledBorderEmpleado=(TitledBorder)empleadoBeanSwingJInternalFrame.jScrollPanelDatosEmpleado.getBorder();

						titledBorderEmpleado.setTitle(titledBorderEstructura.getTitle() + " -> Empleado");

						if(!Constantes.CON_VARIAS_VENTANAS) {
							MainJFrame.cerrarJInternalFramesExistentes(this.jDesktopPane,empleadoBeanSwingJInternalFrame);
						}

						empleadoBeanSwingJInternalFrame.setVisible(true);

						this.jDesktopPane.add(empleadoBeanSwingJInternalFrame);

						empleadoBeanSwingJInternalFrame.setSelected(true);
					}

				} else {
					if(!this.estructuraSessionBean.getConGuardarRelaciones()) {
						JOptionPane.showMessageDialog(this,"NO TIENE PERMISOS PARA USAR LA FUNCIONALIDAD DE Empleado",Constantes.SERROR,JOptionPane.ERROR_MESSAGE);
					}
				}
				if(Constantes.ISUSAEJBLOGICLAYER) {
					this.estructuraLogic.commitNewConnexionToDeep();
				}

			}

			catch(Exception e) {
				if(Constantes.ISUSAEJBLOGICLAYER) {
					this.estructuraLogic.rollbackNewConnexionToDeep();
				}


				FuncionesSwing.manageException2(this, e,logger,EstructuraConstantesFunciones.CLASSNAME);
			} finally { 
				if(Constantes.ISUSAEJBLOGICLAYER) {
					this.estructuraLogic.closeNewConnexionToDeep();
				}

			}
		}

	public void jButtonEstructuraActionPerformed(ActionEvent evt,int rowIndex,Boolean conInicializar,Boolean esRelacionado,Estructura estructura) throws Exception {
			try {

				if(this.jInternalFrameDetalleFormEstructura==null) {
					this.inicializarFormDetalle();
				}

				if(Constantes.ISUSAEJBLOGICLAYER) {
					this.estructuraLogic.getNewConnexionToDeep("");
				}

				int intSelectedRow =rowIndex;

				if(intSelectedRow!=-1) {
					//ARCHITECTURE
					if(Constantes.ISUSAEJBLOGICLAYER) {
						this.estructura = (Estructura)this.estructuraLogic.getEstructuras().toArray()[this.jTableDatosEstructura.convertRowIndexToModel(intSelectedRow)];
					} else if(Constantes.ISUSAEJBREMOTE) {
						this.estructura = (Estructura)this.estructuras.toArray()[this.jTableDatosEstructura.convertRowIndexToModel(intSelectedRow)];
					}
					//ARCHITECTURE
				} else {
					if(estructura!=null) {
						this.estructura = estructura;
					} else {
						this.estructura = new Estructura();
					}
				}

				if(this.isTienePermisosEstructura && this.permiteMantenimiento(this.estructura)) {
					EstructuraBeanSwingJInternalFrame estructuraBeanSwingJInternalFrame=null;

					if(conInicializar) {
						this.jInternalFrameDetalleFormEstructura.estructuraBeanSwingJInternalFramePopup=new EstructuraBeanSwingJInternalFrame(false,false,this.jDesktopPane,this.usuarioActual,this.resumenUsuarioActual,this.moduloActual,this.opcionActual,this.parametroGeneralSg,this.parametroGeneralUsuario,PaginaTipo.SECUNDARIO,false,false,true,false);
						this.jInternalFrameDetalleFormEstructura.estructuraBeanSwingJInternalFramePopup.setJInternalFrameParent(this);

						estructuraBeanSwingJInternalFrame=this.jInternalFrameDetalleFormEstructura.estructuraBeanSwingJInternalFramePopup;
					} else {
						estructuraBeanSwingJInternalFrame=this.jInternalFrameDetalleFormEstructura.estructuraBeanSwingJInternalFrame;
					}

					List<Estructura> estructuras=new ArrayList<Estructura>();
					estructuras.add(this.estructura);
					if(!esRelacionado) {
						//estructuraBeanSwingJInternalFrame.estructuraSessionBean.setConGuardarRelaciones(false);
						//estructuraBeanSwingJInternalFrame.estructuraSessionBean.setEsGuardarRelacionado(false);
					}

					//DESHABILITA TEMPORALMENTE EVENTOS CHANGE DE TEXTOS,COMBOS,ETC
					estructuraBeanSwingJInternalFrame.estaModoSeleccionar=true;
					this.jInternalFrameDetalleFormEstructura.cargarEstructuraBeanSwingJInternalFrame(estructuras,this.estructura,estructuraBeanSwingJInternalFrame,/*conInicializar,*/estructuraBeanSwingJInternalFrame.estructuraSessionBean.getConGuardarRelaciones(),estructuraBeanSwingJInternalFrame.estructuraSessionBean.getEsGuardarRelacionado());
					estructuraBeanSwingJInternalFrame.estaModoSeleccionar=false;


					if(!esRelacionado) {
						estructuraBeanSwingJInternalFrame.actualizarEstadoPanelsEstructura("no_relacionado");

						estructuraBeanSwingJInternalFrame.redimensionarTablaDatosConTamanio(EstructuraConstantesFunciones.ITAMANIOFILATABLA + (EstructuraConstantesFunciones.ITAMANIOFILATABLA/2));

						estructuraBeanSwingJInternalFrame.setLocation(xOffset*(openFrameCount + Constantes.INUM_MAX_VENTANAS_REL_X), yOffset*(openFrameCount+Constantes.INUM_MAX_VENTANAS_REL_Y));

						TitledBorder titledBorderEstructura=(TitledBorder)this.jScrollPanelDatosEstructura.getBorder();
						titledBorderEstructura.setTitle(titledBorderEstructura.getTitle() + " -> Estructura");

						if(!Constantes.CON_VARIAS_VENTANAS) {
							MainJFrame.cerrarJInternalFramesExistentes(this.jDesktopPane,estructuraBeanSwingJInternalFrame);
						}

						estructuraBeanSwingJInternalFrame.setVisible(true);

						this.jDesktopPane.add(estructuraBeanSwingJInternalFrame);

						estructuraBeanSwingJInternalFrame.setSelected(true);
					}

				} else {
					if(!this.estructuraSessionBean.getConGuardarRelaciones()) {
						JOptionPane.showMessageDialog(this,"NO TIENE PERMISOS PARA USAR LA FUNCIONALIDAD DE Estructura",Constantes.SERROR,JOptionPane.ERROR_MESSAGE);
					}
				}
				if(Constantes.ISUSAEJBLOGICLAYER) {
					this.estructuraLogic.commitNewConnexionToDeep();
				}

			}

			catch(Exception e) {
				if(Constantes.ISUSAEJBLOGICLAYER) {
					this.estructuraLogic.rollbackNewConnexionToDeep();
				}


				FuncionesSwing.manageException2(this, e,logger,EstructuraConstantesFunciones.CLASSNAME);
			} finally { 
				if(Constantes.ISUSAEJBLOGICLAYER) {
					this.estructuraLogic.closeNewConnexionToDeep();
				}

			}
		}

	public void jButtonEvaluacionEmpleadoActionPerformed(ActionEvent evt,int rowIndex,Boolean conInicializar,Boolean esRelacionado,Estructura estructura) throws Exception {
			try {

				if(this.jInternalFrameDetalleFormEstructura==null) {
					this.inicializarFormDetalle();
				}

				if(Constantes.ISUSAEJBLOGICLAYER) {
					this.estructuraLogic.getNewConnexionToDeep("");
				}

				int intSelectedRow =rowIndex;

				if(intSelectedRow!=-1) {
					//ARCHITECTURE
					if(Constantes.ISUSAEJBLOGICLAYER) {
						this.estructura = (Estructura)this.estructuraLogic.getEstructuras().toArray()[this.jTableDatosEstructura.convertRowIndexToModel(intSelectedRow)];
					} else if(Constantes.ISUSAEJBREMOTE) {
						this.estructura = (Estructura)this.estructuras.toArray()[this.jTableDatosEstructura.convertRowIndexToModel(intSelectedRow)];
					}
					//ARCHITECTURE
				} else {
					if(estructura!=null) {
						this.estructura = estructura;
					} else {
						this.estructura = new Estructura();
					}
				}

				if(this.isTienePermisosEvaluacionEmpleado && this.permiteMantenimiento(this.estructura)) {
					EvaluacionEmpleadoBeanSwingJInternalFrame evaluacionempleadoBeanSwingJInternalFrame=null;

					if(conInicializar) {
						this.jInternalFrameDetalleFormEstructura.evaluacionempleadoBeanSwingJInternalFramePopup=new EvaluacionEmpleadoBeanSwingJInternalFrame(false,false,this.jDesktopPane,this.usuarioActual,this.resumenUsuarioActual,this.moduloActual,this.opcionActual,this.parametroGeneralSg,this.parametroGeneralUsuario,PaginaTipo.SECUNDARIO,false,false,true,false);
						this.jInternalFrameDetalleFormEstructura.evaluacionempleadoBeanSwingJInternalFramePopup.setJInternalFrameParent(this);

						evaluacionempleadoBeanSwingJInternalFrame=this.jInternalFrameDetalleFormEstructura.evaluacionempleadoBeanSwingJInternalFramePopup;
					} else {
						evaluacionempleadoBeanSwingJInternalFrame=this.jInternalFrameDetalleFormEstructura.evaluacionempleadoBeanSwingJInternalFrame;
					}

					List<Estructura> estructuras=new ArrayList<Estructura>();
					estructuras.add(this.estructura);
					if(!esRelacionado) {
						//evaluacionempleadoBeanSwingJInternalFrame.evaluacionempleadoSessionBean.setConGuardarRelaciones(false);
						//evaluacionempleadoBeanSwingJInternalFrame.evaluacionempleadoSessionBean.setEsGuardarRelacionado(false);
					}

					//DESHABILITA TEMPORALMENTE EVENTOS CHANGE DE TEXTOS,COMBOS,ETC
					evaluacionempleadoBeanSwingJInternalFrame.estaModoSeleccionar=true;
					this.jInternalFrameDetalleFormEstructura.cargarEvaluacionEmpleadoBeanSwingJInternalFrame(estructuras,this.estructura,evaluacionempleadoBeanSwingJInternalFrame,/*conInicializar,*/evaluacionempleadoBeanSwingJInternalFrame.evaluacionempleadoSessionBean.getConGuardarRelaciones(),evaluacionempleadoBeanSwingJInternalFrame.evaluacionempleadoSessionBean.getEsGuardarRelacionado());
					evaluacionempleadoBeanSwingJInternalFrame.estaModoSeleccionar=false;


					if(!esRelacionado) {
						evaluacionempleadoBeanSwingJInternalFrame.actualizarEstadoPanelsEvaluacionEmpleado("no_relacionado");

						evaluacionempleadoBeanSwingJInternalFrame.redimensionarTablaDatosConTamanio(EvaluacionEmpleadoConstantesFunciones.ITAMANIOFILATABLA + (EvaluacionEmpleadoConstantesFunciones.ITAMANIOFILATABLA/2));

						evaluacionempleadoBeanSwingJInternalFrame.setLocation(xOffset*(openFrameCount + Constantes.INUM_MAX_VENTANAS_REL_X), yOffset*(openFrameCount+Constantes.INUM_MAX_VENTANAS_REL_Y));

						TitledBorder titledBorderEstructura=(TitledBorder)this.jScrollPanelDatosEstructura.getBorder();
						TitledBorder titledBorderEvaluacionEmpleado=(TitledBorder)evaluacionempleadoBeanSwingJInternalFrame.jScrollPanelDatosEvaluacionEmpleado.getBorder();

						titledBorderEvaluacionEmpleado.setTitle(titledBorderEstructura.getTitle() + " -> Evaluacion Empleado");

						if(!Constantes.CON_VARIAS_VENTANAS) {
							MainJFrame.cerrarJInternalFramesExistentes(this.jDesktopPane,evaluacionempleadoBeanSwingJInternalFrame);
						}

						evaluacionempleadoBeanSwingJInternalFrame.setVisible(true);

						this.jDesktopPane.add(evaluacionempleadoBeanSwingJInternalFrame);

						evaluacionempleadoBeanSwingJInternalFrame.setSelected(true);
					}

				} else {
					if(!this.estructuraSessionBean.getConGuardarRelaciones()) {
						JOptionPane.showMessageDialog(this,"NO TIENE PERMISOS PARA USAR LA FUNCIONALIDAD DE Evaluacion Empleado",Constantes.SERROR,JOptionPane.ERROR_MESSAGE);
					}
				}
				if(Constantes.ISUSAEJBLOGICLAYER) {
					this.estructuraLogic.commitNewConnexionToDeep();
				}

			}

			catch(Exception e) {
				if(Constantes.ISUSAEJBLOGICLAYER) {
					this.estructuraLogic.rollbackNewConnexionToDeep();
				}


				FuncionesSwing.manageException2(this, e,logger,EstructuraConstantesFunciones.CLASSNAME);
			} finally { 
				if(Constantes.ISUSAEJBLOGICLAYER) {
					this.estructuraLogic.closeNewConnexionToDeep();
				}

			}
		}

	public void jButtonEmpleadoImpuestoRentaActionPerformed(ActionEvent evt,int rowIndex,Boolean conInicializar,Boolean esRelacionado,Estructura estructura) throws Exception {
			try {

				if(this.jInternalFrameDetalleFormEstructura==null) {
					this.inicializarFormDetalle();
				}

				if(Constantes.ISUSAEJBLOGICLAYER) {
					this.estructuraLogic.getNewConnexionToDeep("");
				}

				int intSelectedRow =rowIndex;

				if(intSelectedRow!=-1) {
					//ARCHITECTURE
					if(Constantes.ISUSAEJBLOGICLAYER) {
						this.estructura = (Estructura)this.estructuraLogic.getEstructuras().toArray()[this.jTableDatosEstructura.convertRowIndexToModel(intSelectedRow)];
					} else if(Constantes.ISUSAEJBREMOTE) {
						this.estructura = (Estructura)this.estructuras.toArray()[this.jTableDatosEstructura.convertRowIndexToModel(intSelectedRow)];
					}
					//ARCHITECTURE
				} else {
					if(estructura!=null) {
						this.estructura = estructura;
					} else {
						this.estructura = new Estructura();
					}
				}

				if(this.isTienePermisosEmpleadoImpuestoRenta && this.permiteMantenimiento(this.estructura)) {
					EmpleadoImpuestoRentaBeanSwingJInternalFrame empleadoimpuestorentaBeanSwingJInternalFrame=null;

					if(conInicializar) {
						this.jInternalFrameDetalleFormEstructura.empleadoimpuestorentaBeanSwingJInternalFramePopup=new EmpleadoImpuestoRentaBeanSwingJInternalFrame(false,false,this.jDesktopPane,this.usuarioActual,this.resumenUsuarioActual,this.moduloActual,this.opcionActual,this.parametroGeneralSg,this.parametroGeneralUsuario,PaginaTipo.SECUNDARIO,false,false,true,false);
						this.jInternalFrameDetalleFormEstructura.empleadoimpuestorentaBeanSwingJInternalFramePopup.setJInternalFrameParent(this);

						empleadoimpuestorentaBeanSwingJInternalFrame=this.jInternalFrameDetalleFormEstructura.empleadoimpuestorentaBeanSwingJInternalFramePopup;
					} else {
						empleadoimpuestorentaBeanSwingJInternalFrame=this.jInternalFrameDetalleFormEstructura.empleadoimpuestorentaBeanSwingJInternalFrame;
					}

					List<Estructura> estructuras=new ArrayList<Estructura>();
					estructuras.add(this.estructura);
					if(!esRelacionado) {
						//empleadoimpuestorentaBeanSwingJInternalFrame.empleadoimpuestorentaSessionBean.setConGuardarRelaciones(false);
						//empleadoimpuestorentaBeanSwingJInternalFrame.empleadoimpuestorentaSessionBean.setEsGuardarRelacionado(false);
					}

					//DESHABILITA TEMPORALMENTE EVENTOS CHANGE DE TEXTOS,COMBOS,ETC
					empleadoimpuestorentaBeanSwingJInternalFrame.estaModoSeleccionar=true;
					this.jInternalFrameDetalleFormEstructura.cargarEmpleadoImpuestoRentaBeanSwingJInternalFrame(estructuras,this.estructura,empleadoimpuestorentaBeanSwingJInternalFrame,/*conInicializar,*/empleadoimpuestorentaBeanSwingJInternalFrame.empleadoimpuestorentaSessionBean.getConGuardarRelaciones(),empleadoimpuestorentaBeanSwingJInternalFrame.empleadoimpuestorentaSessionBean.getEsGuardarRelacionado());
					empleadoimpuestorentaBeanSwingJInternalFrame.estaModoSeleccionar=false;


					if(!esRelacionado) {
						empleadoimpuestorentaBeanSwingJInternalFrame.actualizarEstadoPanelsEmpleadoImpuestoRenta("no_relacionado");

						empleadoimpuestorentaBeanSwingJInternalFrame.redimensionarTablaDatosConTamanio(EmpleadoImpuestoRentaConstantesFunciones.ITAMANIOFILATABLA + (EmpleadoImpuestoRentaConstantesFunciones.ITAMANIOFILATABLA/2));

						empleadoimpuestorentaBeanSwingJInternalFrame.setLocation(xOffset*(openFrameCount + Constantes.INUM_MAX_VENTANAS_REL_X), yOffset*(openFrameCount+Constantes.INUM_MAX_VENTANAS_REL_Y));

						TitledBorder titledBorderEstructura=(TitledBorder)this.jScrollPanelDatosEstructura.getBorder();
						TitledBorder titledBorderEmpleadoImpuestoRenta=(TitledBorder)empleadoimpuestorentaBeanSwingJInternalFrame.jScrollPanelDatosEmpleadoImpuestoRenta.getBorder();

						titledBorderEmpleadoImpuestoRenta.setTitle(titledBorderEstructura.getTitle() + " -> Empleado Impuesto Renta");

						if(!Constantes.CON_VARIAS_VENTANAS) {
							MainJFrame.cerrarJInternalFramesExistentes(this.jDesktopPane,empleadoimpuestorentaBeanSwingJInternalFrame);
						}

						empleadoimpuestorentaBeanSwingJInternalFrame.setVisible(true);

						this.jDesktopPane.add(empleadoimpuestorentaBeanSwingJInternalFrame);

						empleadoimpuestorentaBeanSwingJInternalFrame.setSelected(true);
					}

				} else {
					if(!this.estructuraSessionBean.getConGuardarRelaciones()) {
						JOptionPane.showMessageDialog(this,"NO TIENE PERMISOS PARA USAR LA FUNCIONALIDAD DE Empleado Impuesto Renta",Constantes.SERROR,JOptionPane.ERROR_MESSAGE);
					}
				}
				if(Constantes.ISUSAEJBLOGICLAYER) {
					this.estructuraLogic.commitNewConnexionToDeep();
				}

			}

			catch(Exception e) {
				if(Constantes.ISUSAEJBLOGICLAYER) {
					this.estructuraLogic.rollbackNewConnexionToDeep();
				}


				FuncionesSwing.manageException2(this, e,logger,EstructuraConstantesFunciones.CLASSNAME);
			} finally { 
				if(Constantes.ISUSAEJBLOGICLAYER) {
					this.estructuraLogic.closeNewConnexionToDeep();
				}

			}
		}

	public void jButtonRubroEstructuraActionPerformed(ActionEvent evt,int rowIndex,Boolean conInicializar,Boolean esRelacionado,Estructura estructura) throws Exception {
			try {

				if(this.jInternalFrameDetalleFormEstructura==null) {
					this.inicializarFormDetalle();
				}

				if(Constantes.ISUSAEJBLOGICLAYER) {
					this.estructuraLogic.getNewConnexionToDeep("");
				}

				int intSelectedRow =rowIndex;

				if(intSelectedRow!=-1) {
					//ARCHITECTURE
					if(Constantes.ISUSAEJBLOGICLAYER) {
						this.estructura = (Estructura)this.estructuraLogic.getEstructuras().toArray()[this.jTableDatosEstructura.convertRowIndexToModel(intSelectedRow)];
					} else if(Constantes.ISUSAEJBREMOTE) {
						this.estructura = (Estructura)this.estructuras.toArray()[this.jTableDatosEstructura.convertRowIndexToModel(intSelectedRow)];
					}
					//ARCHITECTURE
				} else {
					if(estructura!=null) {
						this.estructura = estructura;
					} else {
						this.estructura = new Estructura();
					}
				}

				if(this.isTienePermisosRubroEstructura && this.permiteMantenimiento(this.estructura)) {
					RubroEstructuraBeanSwingJInternalFrame rubroestructuraBeanSwingJInternalFrame=null;

					if(conInicializar) {
						this.jInternalFrameDetalleFormEstructura.rubroestructuraBeanSwingJInternalFramePopup=new RubroEstructuraBeanSwingJInternalFrame(false,false,this.jDesktopPane,this.usuarioActual,this.resumenUsuarioActual,this.moduloActual,this.opcionActual,this.parametroGeneralSg,this.parametroGeneralUsuario,PaginaTipo.SECUNDARIO,false,false,true,false);
						this.jInternalFrameDetalleFormEstructura.rubroestructuraBeanSwingJInternalFramePopup.setJInternalFrameParent(this);

						rubroestructuraBeanSwingJInternalFrame=this.jInternalFrameDetalleFormEstructura.rubroestructuraBeanSwingJInternalFramePopup;
					} else {
						rubroestructuraBeanSwingJInternalFrame=this.jInternalFrameDetalleFormEstructura.rubroestructuraBeanSwingJInternalFrame;
					}

					List<Estructura> estructuras=new ArrayList<Estructura>();
					estructuras.add(this.estructura);
					if(!esRelacionado) {
						//rubroestructuraBeanSwingJInternalFrame.rubroestructuraSessionBean.setConGuardarRelaciones(false);
						//rubroestructuraBeanSwingJInternalFrame.rubroestructuraSessionBean.setEsGuardarRelacionado(false);
					}

					//DESHABILITA TEMPORALMENTE EVENTOS CHANGE DE TEXTOS,COMBOS,ETC
					rubroestructuraBeanSwingJInternalFrame.estaModoSeleccionar=true;
					this.jInternalFrameDetalleFormEstructura.cargarRubroEstructuraBeanSwingJInternalFrame(estructuras,this.estructura,rubroestructuraBeanSwingJInternalFrame,/*conInicializar,*/rubroestructuraBeanSwingJInternalFrame.rubroestructuraSessionBean.getConGuardarRelaciones(),rubroestructuraBeanSwingJInternalFrame.rubroestructuraSessionBean.getEsGuardarRelacionado());
					rubroestructuraBeanSwingJInternalFrame.estaModoSeleccionar=false;


					if(!esRelacionado) {
						rubroestructuraBeanSwingJInternalFrame.actualizarEstadoPanelsRubroEstructura("no_relacionado");

						rubroestructuraBeanSwingJInternalFrame.redimensionarTablaDatosConTamanio(RubroEstructuraConstantesFunciones.ITAMANIOFILATABLA + (RubroEstructuraConstantesFunciones.ITAMANIOFILATABLA/2));

						rubroestructuraBeanSwingJInternalFrame.setLocation(xOffset*(openFrameCount + Constantes.INUM_MAX_VENTANAS_REL_X), yOffset*(openFrameCount+Constantes.INUM_MAX_VENTANAS_REL_Y));

						TitledBorder titledBorderEstructura=(TitledBorder)this.jScrollPanelDatosEstructura.getBorder();
						TitledBorder titledBorderRubroEstructura=(TitledBorder)rubroestructuraBeanSwingJInternalFrame.jScrollPanelDatosRubroEstructura.getBorder();

						titledBorderRubroEstructura.setTitle(titledBorderEstructura.getTitle() + " -> Rubro Estructura");

						if(!Constantes.CON_VARIAS_VENTANAS) {
							MainJFrame.cerrarJInternalFramesExistentes(this.jDesktopPane,rubroestructuraBeanSwingJInternalFrame);
						}

						rubroestructuraBeanSwingJInternalFrame.setVisible(true);

						this.jDesktopPane.add(rubroestructuraBeanSwingJInternalFrame);

						rubroestructuraBeanSwingJInternalFrame.setSelected(true);
					}

				} else {
					if(!this.estructuraSessionBean.getConGuardarRelaciones()) {
						JOptionPane.showMessageDialog(this,"NO TIENE PERMISOS PARA USAR LA FUNCIONALIDAD DE Rubro Estructura",Constantes.SERROR,JOptionPane.ERROR_MESSAGE);
					}
				}
				if(Constantes.ISUSAEJBLOGICLAYER) {
					this.estructuraLogic.commitNewConnexionToDeep();
				}

			}

			catch(Exception e) {
				if(Constantes.ISUSAEJBLOGICLAYER) {
					this.estructuraLogic.rollbackNewConnexionToDeep();
				}


				FuncionesSwing.manageException2(this, e,logger,EstructuraConstantesFunciones.CLASSNAME);
			} finally { 
				if(Constantes.ISUSAEJBLOGICLAYER) {
					this.estructuraLogic.closeNewConnexionToDeep();
				}

			}
		}

	public void jButtonCierreRolMensualActionPerformed(ActionEvent evt,int rowIndex,Boolean conInicializar,Boolean esRelacionado,Estructura estructura) throws Exception {
			try {

				if(this.jInternalFrameDetalleFormEstructura==null) {
					this.inicializarFormDetalle();
				}

				if(Constantes.ISUSAEJBLOGICLAYER) {
					this.estructuraLogic.getNewConnexionToDeep("");
				}

				int intSelectedRow =rowIndex;

				if(intSelectedRow!=-1) {
					//ARCHITECTURE
					if(Constantes.ISUSAEJBLOGICLAYER) {
						this.estructura = (Estructura)this.estructuraLogic.getEstructuras().toArray()[this.jTableDatosEstructura.convertRowIndexToModel(intSelectedRow)];
					} else if(Constantes.ISUSAEJBREMOTE) {
						this.estructura = (Estructura)this.estructuras.toArray()[this.jTableDatosEstructura.convertRowIndexToModel(intSelectedRow)];
					}
					//ARCHITECTURE
				} else {
					if(estructura!=null) {
						this.estructura = estructura;
					} else {
						this.estructura = new Estructura();
					}
				}

				if(this.isTienePermisosCierreRolMensual && this.permiteMantenimiento(this.estructura)) {
					CierreRolMensualBeanSwingJInternalFrame cierrerolmensualBeanSwingJInternalFrame=null;

					if(conInicializar) {
						this.jInternalFrameDetalleFormEstructura.cierrerolmensualBeanSwingJInternalFramePopup=new CierreRolMensualBeanSwingJInternalFrame(false,false,this.jDesktopPane,this.usuarioActual,this.resumenUsuarioActual,this.moduloActual,this.opcionActual,this.parametroGeneralSg,this.parametroGeneralUsuario,PaginaTipo.SECUNDARIO,false,false,true,false);
						this.jInternalFrameDetalleFormEstructura.cierrerolmensualBeanSwingJInternalFramePopup.setJInternalFrameParent(this);

						cierrerolmensualBeanSwingJInternalFrame=this.jInternalFrameDetalleFormEstructura.cierrerolmensualBeanSwingJInternalFramePopup;
					} else {
						cierrerolmensualBeanSwingJInternalFrame=this.jInternalFrameDetalleFormEstructura.cierrerolmensualBeanSwingJInternalFrame;
					}

					List<Estructura> estructuras=new ArrayList<Estructura>();
					estructuras.add(this.estructura);
					if(!esRelacionado) {
						//cierrerolmensualBeanSwingJInternalFrame.cierrerolmensualSessionBean.setConGuardarRelaciones(false);
						//cierrerolmensualBeanSwingJInternalFrame.cierrerolmensualSessionBean.setEsGuardarRelacionado(false);
					}

					//DESHABILITA TEMPORALMENTE EVENTOS CHANGE DE TEXTOS,COMBOS,ETC
					cierrerolmensualBeanSwingJInternalFrame.estaModoSeleccionar=true;
					this.jInternalFrameDetalleFormEstructura.cargarCierreRolMensualBeanSwingJInternalFrame(estructuras,this.estructura,cierrerolmensualBeanSwingJInternalFrame,/*conInicializar,*/cierrerolmensualBeanSwingJInternalFrame.cierrerolmensualSessionBean.getConGuardarRelaciones(),cierrerolmensualBeanSwingJInternalFrame.cierrerolmensualSessionBean.getEsGuardarRelacionado());
					cierrerolmensualBeanSwingJInternalFrame.estaModoSeleccionar=false;


					if(!esRelacionado) {
						cierrerolmensualBeanSwingJInternalFrame.actualizarEstadoPanelsCierreRolMensual("no_relacionado");

						cierrerolmensualBeanSwingJInternalFrame.redimensionarTablaDatosConTamanio(CierreRolMensualConstantesFunciones.ITAMANIOFILATABLA + (CierreRolMensualConstantesFunciones.ITAMANIOFILATABLA/2));

						cierrerolmensualBeanSwingJInternalFrame.setLocation(xOffset*(openFrameCount + Constantes.INUM_MAX_VENTANAS_REL_X), yOffset*(openFrameCount+Constantes.INUM_MAX_VENTANAS_REL_Y));

						TitledBorder titledBorderEstructura=(TitledBorder)this.jScrollPanelDatosEstructura.getBorder();
						TitledBorder titledBorderCierreRolMensual=(TitledBorder)cierrerolmensualBeanSwingJInternalFrame.jScrollPanelDatosCierreRolMensual.getBorder();

						titledBorderCierreRolMensual.setTitle(titledBorderEstructura.getTitle() + " -> Cierre Rol Mensual");

						if(!Constantes.CON_VARIAS_VENTANAS) {
							MainJFrame.cerrarJInternalFramesExistentes(this.jDesktopPane,cierrerolmensualBeanSwingJInternalFrame);
						}

						cierrerolmensualBeanSwingJInternalFrame.setVisible(true);

						this.jDesktopPane.add(cierrerolmensualBeanSwingJInternalFrame);

						cierrerolmensualBeanSwingJInternalFrame.setSelected(true);
					}

				} else {
					if(!this.estructuraSessionBean.getConGuardarRelaciones()) {
						JOptionPane.showMessageDialog(this,"NO TIENE PERMISOS PARA USAR LA FUNCIONALIDAD DE Cierre Rol Mensual",Constantes.SERROR,JOptionPane.ERROR_MESSAGE);
					}
				}
				if(Constantes.ISUSAEJBLOGICLAYER) {
					this.estructuraLogic.commitNewConnexionToDeep();
				}

			}

			catch(Exception e) {
				if(Constantes.ISUSAEJBLOGICLAYER) {
					this.estructuraLogic.rollbackNewConnexionToDeep();
				}


				FuncionesSwing.manageException2(this, e,logger,EstructuraConstantesFunciones.CLASSNAME);
			} finally { 
				if(Constantes.ISUSAEJBLOGICLAYER) {
					this.estructuraLogic.closeNewConnexionToDeep();
				}

			}
		}

	public void jButtonFormatoNomiActionPerformed(ActionEvent evt,int rowIndex,Boolean conInicializar,Boolean esRelacionado,Estructura estructura) throws Exception {
			try {

				if(this.jInternalFrameDetalleFormEstructura==null) {
					this.inicializarFormDetalle();
				}

				if(Constantes.ISUSAEJBLOGICLAYER) {
					this.estructuraLogic.getNewConnexionToDeep("");
				}

				int intSelectedRow =rowIndex;

				if(intSelectedRow!=-1) {
					//ARCHITECTURE
					if(Constantes.ISUSAEJBLOGICLAYER) {
						this.estructura = (Estructura)this.estructuraLogic.getEstructuras().toArray()[this.jTableDatosEstructura.convertRowIndexToModel(intSelectedRow)];
					} else if(Constantes.ISUSAEJBREMOTE) {
						this.estructura = (Estructura)this.estructuras.toArray()[this.jTableDatosEstructura.convertRowIndexToModel(intSelectedRow)];
					}
					//ARCHITECTURE
				} else {
					if(estructura!=null) {
						this.estructura = estructura;
					} else {
						this.estructura = new Estructura();
					}
				}

				if(this.isTienePermisosFormatoNomi && this.permiteMantenimiento(this.estructura)) {
					FormatoNomiBeanSwingJInternalFrame formatonomiBeanSwingJInternalFrame=null;

					if(conInicializar) {
						this.jInternalFrameDetalleFormEstructura.formatonomiBeanSwingJInternalFramePopup=new FormatoNomiBeanSwingJInternalFrame(false,false,this.jDesktopPane,this.usuarioActual,this.resumenUsuarioActual,this.moduloActual,this.opcionActual,this.parametroGeneralSg,this.parametroGeneralUsuario,PaginaTipo.SECUNDARIO,false,false,true,false);
						this.jInternalFrameDetalleFormEstructura.formatonomiBeanSwingJInternalFramePopup.setJInternalFrameParent(this);

						formatonomiBeanSwingJInternalFrame=this.jInternalFrameDetalleFormEstructura.formatonomiBeanSwingJInternalFramePopup;
					} else {
						formatonomiBeanSwingJInternalFrame=this.jInternalFrameDetalleFormEstructura.formatonomiBeanSwingJInternalFrame;
					}

					List<Estructura> estructuras=new ArrayList<Estructura>();
					estructuras.add(this.estructura);
					if(!esRelacionado) {
						//formatonomiBeanSwingJInternalFrame.formatonomiSessionBean.setConGuardarRelaciones(false);
						//formatonomiBeanSwingJInternalFrame.formatonomiSessionBean.setEsGuardarRelacionado(false);
					}

					//DESHABILITA TEMPORALMENTE EVENTOS CHANGE DE TEXTOS,COMBOS,ETC
					formatonomiBeanSwingJInternalFrame.estaModoSeleccionar=true;
					this.jInternalFrameDetalleFormEstructura.cargarFormatoNomiBeanSwingJInternalFrame(estructuras,this.estructura,formatonomiBeanSwingJInternalFrame,/*conInicializar,*/formatonomiBeanSwingJInternalFrame.formatonomiSessionBean.getConGuardarRelaciones(),formatonomiBeanSwingJInternalFrame.formatonomiSessionBean.getEsGuardarRelacionado());
					formatonomiBeanSwingJInternalFrame.estaModoSeleccionar=false;


					if(!esRelacionado) {
						formatonomiBeanSwingJInternalFrame.actualizarEstadoPanelsFormatoNomi("no_relacionado");

						formatonomiBeanSwingJInternalFrame.redimensionarTablaDatosConTamanio(FormatoNomiConstantesFunciones.ITAMANIOFILATABLA + (FormatoNomiConstantesFunciones.ITAMANIOFILATABLA/2));

						formatonomiBeanSwingJInternalFrame.setLocation(xOffset*(openFrameCount + Constantes.INUM_MAX_VENTANAS_REL_X), yOffset*(openFrameCount+Constantes.INUM_MAX_VENTANAS_REL_Y));

						TitledBorder titledBorderEstructura=(TitledBorder)this.jScrollPanelDatosEstructura.getBorder();
						TitledBorder titledBorderFormatoNomi=(TitledBorder)formatonomiBeanSwingJInternalFrame.jScrollPanelDatosFormatoNomi.getBorder();

						titledBorderFormatoNomi.setTitle(titledBorderEstructura.getTitle() + " -> Formato Nomi");

						if(!Constantes.CON_VARIAS_VENTANAS) {
							MainJFrame.cerrarJInternalFramesExistentes(this.jDesktopPane,formatonomiBeanSwingJInternalFrame);
						}

						formatonomiBeanSwingJInternalFrame.setVisible(true);

						this.jDesktopPane.add(formatonomiBeanSwingJInternalFrame);

						formatonomiBeanSwingJInternalFrame.setSelected(true);
					}

				} else {
					if(!this.estructuraSessionBean.getConGuardarRelaciones()) {
						JOptionPane.showMessageDialog(this,"NO TIENE PERMISOS PARA USAR LA FUNCIONALIDAD DE Formato Nomi",Constantes.SERROR,JOptionPane.ERROR_MESSAGE);
					}
				}
				if(Constantes.ISUSAEJBLOGICLAYER) {
					this.estructuraLogic.commitNewConnexionToDeep();
				}

			}

			catch(Exception e) {
				if(Constantes.ISUSAEJBLOGICLAYER) {
					this.estructuraLogic.rollbackNewConnexionToDeep();
				}


				FuncionesSwing.manageException2(this, e,logger,EstructuraConstantesFunciones.CLASSNAME);
			} finally { 
				if(Constantes.ISUSAEJBLOGICLAYER) {
					this.estructuraLogic.closeNewConnexionToDeep();
				}

			}
		}

	public void jButtonEmpleadoEstructuraActionPerformed(ActionEvent evt,int rowIndex,Boolean conInicializar,Boolean esRelacionado,Estructura estructura) throws Exception {
			try {

				if(this.jInternalFrameDetalleFormEstructura==null) {
					this.inicializarFormDetalle();
				}

				if(Constantes.ISUSAEJBLOGICLAYER) {
					this.estructuraLogic.getNewConnexionToDeep("");
				}

				int intSelectedRow =rowIndex;

				if(intSelectedRow!=-1) {
					//ARCHITECTURE
					if(Constantes.ISUSAEJBLOGICLAYER) {
						this.estructura = (Estructura)this.estructuraLogic.getEstructuras().toArray()[this.jTableDatosEstructura.convertRowIndexToModel(intSelectedRow)];
					} else if(Constantes.ISUSAEJBREMOTE) {
						this.estructura = (Estructura)this.estructuras.toArray()[this.jTableDatosEstructura.convertRowIndexToModel(intSelectedRow)];
					}
					//ARCHITECTURE
				} else {
					if(estructura!=null) {
						this.estructura = estructura;
					} else {
						this.estructura = new Estructura();
					}
				}

				if(this.isTienePermisosEmpleadoEstructura && this.permiteMantenimiento(this.estructura)) {
					EmpleadoEstructuraBeanSwingJInternalFrame empleadoestructuraBeanSwingJInternalFrame=null;

					if(conInicializar) {
						this.jInternalFrameDetalleFormEstructura.empleadoestructuraBeanSwingJInternalFramePopup=new EmpleadoEstructuraBeanSwingJInternalFrame(false,false,this.jDesktopPane,this.usuarioActual,this.resumenUsuarioActual,this.moduloActual,this.opcionActual,this.parametroGeneralSg,this.parametroGeneralUsuario,PaginaTipo.SECUNDARIO,false,false,true,false);
						this.jInternalFrameDetalleFormEstructura.empleadoestructuraBeanSwingJInternalFramePopup.setJInternalFrameParent(this);

						empleadoestructuraBeanSwingJInternalFrame=this.jInternalFrameDetalleFormEstructura.empleadoestructuraBeanSwingJInternalFramePopup;
					} else {
						empleadoestructuraBeanSwingJInternalFrame=this.jInternalFrameDetalleFormEstructura.empleadoestructuraBeanSwingJInternalFrame;
					}

					List<Estructura> estructuras=new ArrayList<Estructura>();
					estructuras.add(this.estructura);
					if(!esRelacionado) {
						//empleadoestructuraBeanSwingJInternalFrame.empleadoestructuraSessionBean.setConGuardarRelaciones(false);
						//empleadoestructuraBeanSwingJInternalFrame.empleadoestructuraSessionBean.setEsGuardarRelacionado(false);
					}

					//DESHABILITA TEMPORALMENTE EVENTOS CHANGE DE TEXTOS,COMBOS,ETC
					empleadoestructuraBeanSwingJInternalFrame.estaModoSeleccionar=true;
					this.jInternalFrameDetalleFormEstructura.cargarEmpleadoEstructuraBeanSwingJInternalFrame(estructuras,this.estructura,empleadoestructuraBeanSwingJInternalFrame,/*conInicializar,*/empleadoestructuraBeanSwingJInternalFrame.empleadoestructuraSessionBean.getConGuardarRelaciones(),empleadoestructuraBeanSwingJInternalFrame.empleadoestructuraSessionBean.getEsGuardarRelacionado());
					empleadoestructuraBeanSwingJInternalFrame.estaModoSeleccionar=false;


					if(!esRelacionado) {
						empleadoestructuraBeanSwingJInternalFrame.actualizarEstadoPanelsEmpleadoEstructura("no_relacionado");

						empleadoestructuraBeanSwingJInternalFrame.redimensionarTablaDatosConTamanio(EmpleadoEstructuraConstantesFunciones.ITAMANIOFILATABLA + (EmpleadoEstructuraConstantesFunciones.ITAMANIOFILATABLA/2));

						empleadoestructuraBeanSwingJInternalFrame.setLocation(xOffset*(openFrameCount + Constantes.INUM_MAX_VENTANAS_REL_X), yOffset*(openFrameCount+Constantes.INUM_MAX_VENTANAS_REL_Y));

						TitledBorder titledBorderEstructura=(TitledBorder)this.jScrollPanelDatosEstructura.getBorder();
						TitledBorder titledBorderEmpleadoEstructura=(TitledBorder)empleadoestructuraBeanSwingJInternalFrame.jScrollPanelDatosEmpleadoEstructura.getBorder();

						titledBorderEmpleadoEstructura.setTitle(titledBorderEstructura.getTitle() + " -> Empleado Estructura");

						if(!Constantes.CON_VARIAS_VENTANAS) {
							MainJFrame.cerrarJInternalFramesExistentes(this.jDesktopPane,empleadoestructuraBeanSwingJInternalFrame);
						}

						empleadoestructuraBeanSwingJInternalFrame.setVisible(true);

						this.jDesktopPane.add(empleadoestructuraBeanSwingJInternalFrame);

						empleadoestructuraBeanSwingJInternalFrame.setSelected(true);
					}

				} else {
					if(!this.estructuraSessionBean.getConGuardarRelaciones()) {
						JOptionPane.showMessageDialog(this,"NO TIENE PERMISOS PARA USAR LA FUNCIONALIDAD DE Empleado Estructura",Constantes.SERROR,JOptionPane.ERROR_MESSAGE);
					}
				}
				if(Constantes.ISUSAEJBLOGICLAYER) {
					this.estructuraLogic.commitNewConnexionToDeep();
				}

			}

			catch(Exception e) {
				if(Constantes.ISUSAEJBLOGICLAYER) {
					this.estructuraLogic.rollbackNewConnexionToDeep();
				}


				FuncionesSwing.manageException2(this, e,logger,EstructuraConstantesFunciones.CLASSNAME);
			} finally { 
				if(Constantes.ISUSAEJBLOGICLAYER) {
					this.estructuraLogic.closeNewConnexionToDeep();
				}

			}
		}

	public void jButtonHistorialPagoNomiActionPerformed(ActionEvent evt,int rowIndex,Boolean conInicializar,Boolean esRelacionado,Estructura estructura) throws Exception {
			try {

				if(this.jInternalFrameDetalleFormEstructura==null) {
					this.inicializarFormDetalle();
				}

				if(Constantes.ISUSAEJBLOGICLAYER) {
					this.estructuraLogic.getNewConnexionToDeep("");
				}

				int intSelectedRow =rowIndex;

				if(intSelectedRow!=-1) {
					//ARCHITECTURE
					if(Constantes.ISUSAEJBLOGICLAYER) {
						this.estructura = (Estructura)this.estructuraLogic.getEstructuras().toArray()[this.jTableDatosEstructura.convertRowIndexToModel(intSelectedRow)];
					} else if(Constantes.ISUSAEJBREMOTE) {
						this.estructura = (Estructura)this.estructuras.toArray()[this.jTableDatosEstructura.convertRowIndexToModel(intSelectedRow)];
					}
					//ARCHITECTURE
				} else {
					if(estructura!=null) {
						this.estructura = estructura;
					} else {
						this.estructura = new Estructura();
					}
				}

				if(this.isTienePermisosHistorialPagoNomi && this.permiteMantenimiento(this.estructura)) {
					HistorialPagoNomiBeanSwingJInternalFrame historialpagonomiBeanSwingJInternalFrame=null;

					if(conInicializar) {
						this.jInternalFrameDetalleFormEstructura.historialpagonomiBeanSwingJInternalFramePopup=new HistorialPagoNomiBeanSwingJInternalFrame(false,false,this.jDesktopPane,this.usuarioActual,this.resumenUsuarioActual,this.moduloActual,this.opcionActual,this.parametroGeneralSg,this.parametroGeneralUsuario,PaginaTipo.SECUNDARIO,false,false,true,false);
						this.jInternalFrameDetalleFormEstructura.historialpagonomiBeanSwingJInternalFramePopup.setJInternalFrameParent(this);

						historialpagonomiBeanSwingJInternalFrame=this.jInternalFrameDetalleFormEstructura.historialpagonomiBeanSwingJInternalFramePopup;
					} else {
						historialpagonomiBeanSwingJInternalFrame=this.jInternalFrameDetalleFormEstructura.historialpagonomiBeanSwingJInternalFrame;
					}

					List<Estructura> estructuras=new ArrayList<Estructura>();
					estructuras.add(this.estructura);
					if(!esRelacionado) {
						//historialpagonomiBeanSwingJInternalFrame.historialpagonomiSessionBean.setConGuardarRelaciones(false);
						//historialpagonomiBeanSwingJInternalFrame.historialpagonomiSessionBean.setEsGuardarRelacionado(false);
					}

					//DESHABILITA TEMPORALMENTE EVENTOS CHANGE DE TEXTOS,COMBOS,ETC
					historialpagonomiBeanSwingJInternalFrame.estaModoSeleccionar=true;
					this.jInternalFrameDetalleFormEstructura.cargarHistorialPagoNomiBeanSwingJInternalFrame(estructuras,this.estructura,historialpagonomiBeanSwingJInternalFrame,/*conInicializar,*/historialpagonomiBeanSwingJInternalFrame.historialpagonomiSessionBean.getConGuardarRelaciones(),historialpagonomiBeanSwingJInternalFrame.historialpagonomiSessionBean.getEsGuardarRelacionado());
					historialpagonomiBeanSwingJInternalFrame.estaModoSeleccionar=false;


					if(!esRelacionado) {
						historialpagonomiBeanSwingJInternalFrame.actualizarEstadoPanelsHistorialPagoNomi("no_relacionado");

						historialpagonomiBeanSwingJInternalFrame.redimensionarTablaDatosConTamanio(HistorialPagoNomiConstantesFunciones.ITAMANIOFILATABLA + (HistorialPagoNomiConstantesFunciones.ITAMANIOFILATABLA/2));

						historialpagonomiBeanSwingJInternalFrame.setLocation(xOffset*(openFrameCount + Constantes.INUM_MAX_VENTANAS_REL_X), yOffset*(openFrameCount+Constantes.INUM_MAX_VENTANAS_REL_Y));

						TitledBorder titledBorderEstructura=(TitledBorder)this.jScrollPanelDatosEstructura.getBorder();
						TitledBorder titledBorderHistorialPagoNomi=(TitledBorder)historialpagonomiBeanSwingJInternalFrame.jScrollPanelDatosHistorialPagoNomi.getBorder();

						titledBorderHistorialPagoNomi.setTitle(titledBorderEstructura.getTitle() + " -> Historial Pago Nomi");

						if(!Constantes.CON_VARIAS_VENTANAS) {
							MainJFrame.cerrarJInternalFramesExistentes(this.jDesktopPane,historialpagonomiBeanSwingJInternalFrame);
						}

						historialpagonomiBeanSwingJInternalFrame.setVisible(true);

						this.jDesktopPane.add(historialpagonomiBeanSwingJInternalFrame);

						historialpagonomiBeanSwingJInternalFrame.setSelected(true);
					}

				} else {
					if(!this.estructuraSessionBean.getConGuardarRelaciones()) {
						JOptionPane.showMessageDialog(this,"NO TIENE PERMISOS PARA USAR LA FUNCIONALIDAD DE Historial Pago Nomi",Constantes.SERROR,JOptionPane.ERROR_MESSAGE);
					}
				}
				if(Constantes.ISUSAEJBLOGICLAYER) {
					this.estructuraLogic.commitNewConnexionToDeep();
				}

			}

			catch(Exception e) {
				if(Constantes.ISUSAEJBLOGICLAYER) {
					this.estructuraLogic.rollbackNewConnexionToDeep();
				}


				FuncionesSwing.manageException2(this, e,logger,EstructuraConstantesFunciones.CLASSNAME);
			} finally { 
				if(Constantes.ISUSAEJBLOGICLAYER) {
					this.estructuraLogic.closeNewConnexionToDeep();
				}

			}
		}

	public void jButtonAsistenciaDiariaActionPerformed(ActionEvent evt,int rowIndex,Boolean conInicializar,Boolean esRelacionado,Estructura estructura) throws Exception {
			try {

				if(this.jInternalFrameDetalleFormEstructura==null) {
					this.inicializarFormDetalle();
				}

				if(Constantes.ISUSAEJBLOGICLAYER) {
					this.estructuraLogic.getNewConnexionToDeep("");
				}

				int intSelectedRow =rowIndex;

				if(intSelectedRow!=-1) {
					//ARCHITECTURE
					if(Constantes.ISUSAEJBLOGICLAYER) {
						this.estructura = (Estructura)this.estructuraLogic.getEstructuras().toArray()[this.jTableDatosEstructura.convertRowIndexToModel(intSelectedRow)];
					} else if(Constantes.ISUSAEJBREMOTE) {
						this.estructura = (Estructura)this.estructuras.toArray()[this.jTableDatosEstructura.convertRowIndexToModel(intSelectedRow)];
					}
					//ARCHITECTURE
				} else {
					if(estructura!=null) {
						this.estructura = estructura;
					} else {
						this.estructura = new Estructura();
					}
				}

				if(this.isTienePermisosAsistenciaDiaria && this.permiteMantenimiento(this.estructura)) {
					AsistenciaDiariaBeanSwingJInternalFrame asistenciadiariaBeanSwingJInternalFrame=null;

					if(conInicializar) {
						this.jInternalFrameDetalleFormEstructura.asistenciadiariaBeanSwingJInternalFramePopup=new AsistenciaDiariaBeanSwingJInternalFrame(false,false,this.jDesktopPane,this.usuarioActual,this.resumenUsuarioActual,this.moduloActual,this.opcionActual,this.parametroGeneralSg,this.parametroGeneralUsuario,PaginaTipo.SECUNDARIO,false,false,true,false);
						this.jInternalFrameDetalleFormEstructura.asistenciadiariaBeanSwingJInternalFramePopup.setJInternalFrameParent(this);

						asistenciadiariaBeanSwingJInternalFrame=this.jInternalFrameDetalleFormEstructura.asistenciadiariaBeanSwingJInternalFramePopup;
					} else {
						asistenciadiariaBeanSwingJInternalFrame=this.jInternalFrameDetalleFormEstructura.asistenciadiariaBeanSwingJInternalFrame;
					}

					List<Estructura> estructuras=new ArrayList<Estructura>();
					estructuras.add(this.estructura);
					if(!esRelacionado) {
						//asistenciadiariaBeanSwingJInternalFrame.asistenciadiariaSessionBean.setConGuardarRelaciones(false);
						//asistenciadiariaBeanSwingJInternalFrame.asistenciadiariaSessionBean.setEsGuardarRelacionado(false);
					}

					//DESHABILITA TEMPORALMENTE EVENTOS CHANGE DE TEXTOS,COMBOS,ETC
					asistenciadiariaBeanSwingJInternalFrame.estaModoSeleccionar=true;
					this.jInternalFrameDetalleFormEstructura.cargarAsistenciaDiariaBeanSwingJInternalFrame(estructuras,this.estructura,asistenciadiariaBeanSwingJInternalFrame,/*conInicializar,*/asistenciadiariaBeanSwingJInternalFrame.asistenciadiariaSessionBean.getConGuardarRelaciones(),asistenciadiariaBeanSwingJInternalFrame.asistenciadiariaSessionBean.getEsGuardarRelacionado());
					asistenciadiariaBeanSwingJInternalFrame.estaModoSeleccionar=false;


					if(!esRelacionado) {
						asistenciadiariaBeanSwingJInternalFrame.actualizarEstadoPanelsAsistenciaDiaria("no_relacionado");

						asistenciadiariaBeanSwingJInternalFrame.redimensionarTablaDatosConTamanio(AsistenciaDiariaConstantesFunciones.ITAMANIOFILATABLA + (AsistenciaDiariaConstantesFunciones.ITAMANIOFILATABLA/2));

						asistenciadiariaBeanSwingJInternalFrame.setLocation(xOffset*(openFrameCount + Constantes.INUM_MAX_VENTANAS_REL_X), yOffset*(openFrameCount+Constantes.INUM_MAX_VENTANAS_REL_Y));

						TitledBorder titledBorderEstructura=(TitledBorder)this.jScrollPanelDatosEstructura.getBorder();
						TitledBorder titledBorderAsistenciaDiaria=(TitledBorder)asistenciadiariaBeanSwingJInternalFrame.jScrollPanelDatosAsistenciaDiaria.getBorder();

						titledBorderAsistenciaDiaria.setTitle(titledBorderEstructura.getTitle() + " -> Asistencia Diaria");

						if(!Constantes.CON_VARIAS_VENTANAS) {
							MainJFrame.cerrarJInternalFramesExistentes(this.jDesktopPane,asistenciadiariaBeanSwingJInternalFrame);
						}

						asistenciadiariaBeanSwingJInternalFrame.setVisible(true);

						this.jDesktopPane.add(asistenciadiariaBeanSwingJInternalFrame);

						asistenciadiariaBeanSwingJInternalFrame.setSelected(true);
					}

				} else {
					if(!this.estructuraSessionBean.getConGuardarRelaciones()) {
						JOptionPane.showMessageDialog(this,"NO TIENE PERMISOS PARA USAR LA FUNCIONALIDAD DE Asistencia Diaria",Constantes.SERROR,JOptionPane.ERROR_MESSAGE);
					}
				}
				if(Constantes.ISUSAEJBLOGICLAYER) {
					this.estructuraLogic.commitNewConnexionToDeep();
				}

			}

			catch(Exception e) {
				if(Constantes.ISUSAEJBLOGICLAYER) {
					this.estructuraLogic.rollbackNewConnexionToDeep();
				}


				FuncionesSwing.manageException2(this, e,logger,EstructuraConstantesFunciones.CLASSNAME);
			} finally { 
				if(Constantes.ISUSAEJBLOGICLAYER) {
					this.estructuraLogic.closeNewConnexionToDeep();
				}

			}
		}

	public void jButtonFuncionEstrucActionPerformed(ActionEvent evt,int rowIndex,Boolean conInicializar,Boolean esRelacionado,Estructura estructura) throws Exception {
			try {

				if(this.jInternalFrameDetalleFormEstructura==null) {
					this.inicializarFormDetalle();
				}

				if(Constantes.ISUSAEJBLOGICLAYER) {
					this.estructuraLogic.getNewConnexionToDeep("");
				}

				int intSelectedRow =rowIndex;

				if(intSelectedRow!=-1) {
					//ARCHITECTURE
					if(Constantes.ISUSAEJBLOGICLAYER) {
						this.estructura = (Estructura)this.estructuraLogic.getEstructuras().toArray()[this.jTableDatosEstructura.convertRowIndexToModel(intSelectedRow)];
					} else if(Constantes.ISUSAEJBREMOTE) {
						this.estructura = (Estructura)this.estructuras.toArray()[this.jTableDatosEstructura.convertRowIndexToModel(intSelectedRow)];
					}
					//ARCHITECTURE
				} else {
					if(estructura!=null) {
						this.estructura = estructura;
					} else {
						this.estructura = new Estructura();
					}
				}

				if(this.isTienePermisosFuncionEstruc && this.permiteMantenimiento(this.estructura)) {
					FuncionEstrucBeanSwingJInternalFrame funcionestrucBeanSwingJInternalFrame=null;

					if(conInicializar) {
						this.jInternalFrameDetalleFormEstructura.funcionestrucBeanSwingJInternalFramePopup=new FuncionEstrucBeanSwingJInternalFrame(false,false,this.jDesktopPane,this.usuarioActual,this.resumenUsuarioActual,this.moduloActual,this.opcionActual,this.parametroGeneralSg,this.parametroGeneralUsuario,PaginaTipo.SECUNDARIO,false,false,true,false);
						this.jInternalFrameDetalleFormEstructura.funcionestrucBeanSwingJInternalFramePopup.setJInternalFrameParent(this);

						funcionestrucBeanSwingJInternalFrame=this.jInternalFrameDetalleFormEstructura.funcionestrucBeanSwingJInternalFramePopup;
					} else {
						funcionestrucBeanSwingJInternalFrame=this.jInternalFrameDetalleFormEstructura.funcionestrucBeanSwingJInternalFrame;
					}

					List<Estructura> estructuras=new ArrayList<Estructura>();
					estructuras.add(this.estructura);
					if(!esRelacionado) {
						//funcionestrucBeanSwingJInternalFrame.funcionestrucSessionBean.setConGuardarRelaciones(false);
						//funcionestrucBeanSwingJInternalFrame.funcionestrucSessionBean.setEsGuardarRelacionado(false);
					}

					//DESHABILITA TEMPORALMENTE EVENTOS CHANGE DE TEXTOS,COMBOS,ETC
					funcionestrucBeanSwingJInternalFrame.estaModoSeleccionar=true;
					this.jInternalFrameDetalleFormEstructura.cargarFuncionEstrucBeanSwingJInternalFrame(estructuras,this.estructura,funcionestrucBeanSwingJInternalFrame,/*conInicializar,*/funcionestrucBeanSwingJInternalFrame.funcionestrucSessionBean.getConGuardarRelaciones(),funcionestrucBeanSwingJInternalFrame.funcionestrucSessionBean.getEsGuardarRelacionado());
					funcionestrucBeanSwingJInternalFrame.estaModoSeleccionar=false;


					if(!esRelacionado) {
						funcionestrucBeanSwingJInternalFrame.actualizarEstadoPanelsFuncionEstruc("no_relacionado");

						funcionestrucBeanSwingJInternalFrame.redimensionarTablaDatosConTamanio(FuncionEstrucConstantesFunciones.ITAMANIOFILATABLA + (FuncionEstrucConstantesFunciones.ITAMANIOFILATABLA/2));

						funcionestrucBeanSwingJInternalFrame.setLocation(xOffset*(openFrameCount + Constantes.INUM_MAX_VENTANAS_REL_X), yOffset*(openFrameCount+Constantes.INUM_MAX_VENTANAS_REL_Y));

						TitledBorder titledBorderEstructura=(TitledBorder)this.jScrollPanelDatosEstructura.getBorder();
						TitledBorder titledBorderFuncionEstruc=(TitledBorder)funcionestrucBeanSwingJInternalFrame.jScrollPanelDatosFuncionEstruc.getBorder();

						titledBorderFuncionEstruc.setTitle(titledBorderEstructura.getTitle() + " -> Funcion Estruc");

						if(!Constantes.CON_VARIAS_VENTANAS) {
							MainJFrame.cerrarJInternalFramesExistentes(this.jDesktopPane,funcionestrucBeanSwingJInternalFrame);
						}

						funcionestrucBeanSwingJInternalFrame.setVisible(true);

						this.jDesktopPane.add(funcionestrucBeanSwingJInternalFrame);

						funcionestrucBeanSwingJInternalFrame.setSelected(true);
					}

				} else {
					if(!this.estructuraSessionBean.getConGuardarRelaciones()) {
						JOptionPane.showMessageDialog(this,"NO TIENE PERMISOS PARA USAR LA FUNCIONALIDAD DE Funcion Estruc",Constantes.SERROR,JOptionPane.ERROR_MESSAGE);
					}
				}
				if(Constantes.ISUSAEJBLOGICLAYER) {
					this.estructuraLogic.commitNewConnexionToDeep();
				}

			}

			catch(Exception e) {
				if(Constantes.ISUSAEJBLOGICLAYER) {
					this.estructuraLogic.rollbackNewConnexionToDeep();
				}


				FuncionesSwing.manageException2(this, e,logger,EstructuraConstantesFunciones.CLASSNAME);
			} finally { 
				if(Constantes.ISUSAEJBLOGICLAYER) {
					this.estructuraLogic.closeNewConnexionToDeep();
				}

			}
		}

	public void jButtonSolicitudReemplazoActionPerformed(ActionEvent evt,int rowIndex,Boolean conInicializar,Boolean esRelacionado,Estructura estructura) throws Exception {
			try {

				if(this.jInternalFrameDetalleFormEstructura==null) {
					this.inicializarFormDetalle();
				}

				if(Constantes.ISUSAEJBLOGICLAYER) {
					this.estructuraLogic.getNewConnexionToDeep("");
				}

				int intSelectedRow =rowIndex;

				if(intSelectedRow!=-1) {
					//ARCHITECTURE
					if(Constantes.ISUSAEJBLOGICLAYER) {
						this.estructura = (Estructura)this.estructuraLogic.getEstructuras().toArray()[this.jTableDatosEstructura.convertRowIndexToModel(intSelectedRow)];
					} else if(Constantes.ISUSAEJBREMOTE) {
						this.estructura = (Estructura)this.estructuras.toArray()[this.jTableDatosEstructura.convertRowIndexToModel(intSelectedRow)];
					}
					//ARCHITECTURE
				} else {
					if(estructura!=null) {
						this.estructura = estructura;
					} else {
						this.estructura = new Estructura();
					}
				}

				if(this.isTienePermisosSolicitudReemplazo && this.permiteMantenimiento(this.estructura)) {
					SolicitudReemplazoBeanSwingJInternalFrame solicitudreemplazoBeanSwingJInternalFrame=null;

					if(conInicializar) {
						this.jInternalFrameDetalleFormEstructura.solicitudreemplazoBeanSwingJInternalFramePopup=new SolicitudReemplazoBeanSwingJInternalFrame(false,false,this.jDesktopPane,this.usuarioActual,this.resumenUsuarioActual,this.moduloActual,this.opcionActual,this.parametroGeneralSg,this.parametroGeneralUsuario,PaginaTipo.SECUNDARIO,false,false,true,false);
						this.jInternalFrameDetalleFormEstructura.solicitudreemplazoBeanSwingJInternalFramePopup.setJInternalFrameParent(this);

						solicitudreemplazoBeanSwingJInternalFrame=this.jInternalFrameDetalleFormEstructura.solicitudreemplazoBeanSwingJInternalFramePopup;
					} else {
						solicitudreemplazoBeanSwingJInternalFrame=this.jInternalFrameDetalleFormEstructura.solicitudreemplazoBeanSwingJInternalFrame;
					}

					List<Estructura> estructuras=new ArrayList<Estructura>();
					estructuras.add(this.estructura);
					if(!esRelacionado) {
						//solicitudreemplazoBeanSwingJInternalFrame.solicitudreemplazoSessionBean.setConGuardarRelaciones(false);
						//solicitudreemplazoBeanSwingJInternalFrame.solicitudreemplazoSessionBean.setEsGuardarRelacionado(false);
					}

					//DESHABILITA TEMPORALMENTE EVENTOS CHANGE DE TEXTOS,COMBOS,ETC
					solicitudreemplazoBeanSwingJInternalFrame.estaModoSeleccionar=true;
					this.jInternalFrameDetalleFormEstructura.cargarSolicitudReemplazoBeanSwingJInternalFrame(estructuras,this.estructura,solicitudreemplazoBeanSwingJInternalFrame,/*conInicializar,*/solicitudreemplazoBeanSwingJInternalFrame.solicitudreemplazoSessionBean.getConGuardarRelaciones(),solicitudreemplazoBeanSwingJInternalFrame.solicitudreemplazoSessionBean.getEsGuardarRelacionado());
					solicitudreemplazoBeanSwingJInternalFrame.estaModoSeleccionar=false;


					if(!esRelacionado) {
						solicitudreemplazoBeanSwingJInternalFrame.actualizarEstadoPanelsSolicitudReemplazo("no_relacionado");

						solicitudreemplazoBeanSwingJInternalFrame.redimensionarTablaDatosConTamanio(SolicitudReemplazoConstantesFunciones.ITAMANIOFILATABLA + (SolicitudReemplazoConstantesFunciones.ITAMANIOFILATABLA/2));

						solicitudreemplazoBeanSwingJInternalFrame.setLocation(xOffset*(openFrameCount + Constantes.INUM_MAX_VENTANAS_REL_X), yOffset*(openFrameCount+Constantes.INUM_MAX_VENTANAS_REL_Y));

						TitledBorder titledBorderEstructura=(TitledBorder)this.jScrollPanelDatosEstructura.getBorder();
						TitledBorder titledBorderSolicitudReemplazo=(TitledBorder)solicitudreemplazoBeanSwingJInternalFrame.jScrollPanelDatosSolicitudReemplazo.getBorder();

						titledBorderSolicitudReemplazo.setTitle(titledBorderEstructura.getTitle() + " -> Solicitud Reemplazo");

						if(!Constantes.CON_VARIAS_VENTANAS) {
							MainJFrame.cerrarJInternalFramesExistentes(this.jDesktopPane,solicitudreemplazoBeanSwingJInternalFrame);
						}

						solicitudreemplazoBeanSwingJInternalFrame.setVisible(true);

						this.jDesktopPane.add(solicitudreemplazoBeanSwingJInternalFrame);

						solicitudreemplazoBeanSwingJInternalFrame.setSelected(true);
					}

				} else {
					if(!this.estructuraSessionBean.getConGuardarRelaciones()) {
						JOptionPane.showMessageDialog(this,"NO TIENE PERMISOS PARA USAR LA FUNCIONALIDAD DE Solicitud Reemplazo",Constantes.SERROR,JOptionPane.ERROR_MESSAGE);
					}
				}
				if(Constantes.ISUSAEJBLOGICLAYER) {
					this.estructuraLogic.commitNewConnexionToDeep();
				}

			}

			catch(Exception e) {
				if(Constantes.ISUSAEJBLOGICLAYER) {
					this.estructuraLogic.rollbackNewConnexionToDeep();
				}


				FuncionesSwing.manageException2(this, e,logger,EstructuraConstantesFunciones.CLASSNAME);
			} finally { 
				if(Constantes.ISUSAEJBLOGICLAYER) {
					this.estructuraLogic.closeNewConnexionToDeep();
				}

			}
		}

	public void jButtonSolicitudHoraExtraActionPerformed(ActionEvent evt,int rowIndex,Boolean conInicializar,Boolean esRelacionado,Estructura estructura) throws Exception {
			try {

				if(this.jInternalFrameDetalleFormEstructura==null) {
					this.inicializarFormDetalle();
				}

				if(Constantes.ISUSAEJBLOGICLAYER) {
					this.estructuraLogic.getNewConnexionToDeep("");
				}

				int intSelectedRow =rowIndex;

				if(intSelectedRow!=-1) {
					//ARCHITECTURE
					if(Constantes.ISUSAEJBLOGICLAYER) {
						this.estructura = (Estructura)this.estructuraLogic.getEstructuras().toArray()[this.jTableDatosEstructura.convertRowIndexToModel(intSelectedRow)];
					} else if(Constantes.ISUSAEJBREMOTE) {
						this.estructura = (Estructura)this.estructuras.toArray()[this.jTableDatosEstructura.convertRowIndexToModel(intSelectedRow)];
					}
					//ARCHITECTURE
				} else {
					if(estructura!=null) {
						this.estructura = estructura;
					} else {
						this.estructura = new Estructura();
					}
				}

				if(this.isTienePermisosSolicitudHoraExtra && this.permiteMantenimiento(this.estructura)) {
					SolicitudHoraExtraBeanSwingJInternalFrame solicitudhoraextraBeanSwingJInternalFrame=null;

					if(conInicializar) {
						this.jInternalFrameDetalleFormEstructura.solicitudhoraextraBeanSwingJInternalFramePopup=new SolicitudHoraExtraBeanSwingJInternalFrame(false,false,this.jDesktopPane,this.usuarioActual,this.resumenUsuarioActual,this.moduloActual,this.opcionActual,this.parametroGeneralSg,this.parametroGeneralUsuario,PaginaTipo.SECUNDARIO,false,false,true,false);
						this.jInternalFrameDetalleFormEstructura.solicitudhoraextraBeanSwingJInternalFramePopup.setJInternalFrameParent(this);

						solicitudhoraextraBeanSwingJInternalFrame=this.jInternalFrameDetalleFormEstructura.solicitudhoraextraBeanSwingJInternalFramePopup;
					} else {
						solicitudhoraextraBeanSwingJInternalFrame=this.jInternalFrameDetalleFormEstructura.solicitudhoraextraBeanSwingJInternalFrame;
					}

					List<Estructura> estructuras=new ArrayList<Estructura>();
					estructuras.add(this.estructura);
					if(!esRelacionado) {
						//solicitudhoraextraBeanSwingJInternalFrame.solicitudhoraextraSessionBean.setConGuardarRelaciones(false);
						//solicitudhoraextraBeanSwingJInternalFrame.solicitudhoraextraSessionBean.setEsGuardarRelacionado(false);
					}

					//DESHABILITA TEMPORALMENTE EVENTOS CHANGE DE TEXTOS,COMBOS,ETC
					solicitudhoraextraBeanSwingJInternalFrame.estaModoSeleccionar=true;
					this.jInternalFrameDetalleFormEstructura.cargarSolicitudHoraExtraBeanSwingJInternalFrame(estructuras,this.estructura,solicitudhoraextraBeanSwingJInternalFrame,/*conInicializar,*/solicitudhoraextraBeanSwingJInternalFrame.solicitudhoraextraSessionBean.getConGuardarRelaciones(),solicitudhoraextraBeanSwingJInternalFrame.solicitudhoraextraSessionBean.getEsGuardarRelacionado());
					solicitudhoraextraBeanSwingJInternalFrame.estaModoSeleccionar=false;


					if(!esRelacionado) {
						solicitudhoraextraBeanSwingJInternalFrame.actualizarEstadoPanelsSolicitudHoraExtra("no_relacionado");

						solicitudhoraextraBeanSwingJInternalFrame.redimensionarTablaDatosConTamanio(SolicitudHoraExtraConstantesFunciones.ITAMANIOFILATABLA + (SolicitudHoraExtraConstantesFunciones.ITAMANIOFILATABLA/2));

						solicitudhoraextraBeanSwingJInternalFrame.setLocation(xOffset*(openFrameCount + Constantes.INUM_MAX_VENTANAS_REL_X), yOffset*(openFrameCount+Constantes.INUM_MAX_VENTANAS_REL_Y));

						TitledBorder titledBorderEstructura=(TitledBorder)this.jScrollPanelDatosEstructura.getBorder();
						TitledBorder titledBorderSolicitudHoraExtra=(TitledBorder)solicitudhoraextraBeanSwingJInternalFrame.jScrollPanelDatosSolicitudHoraExtra.getBorder();

						titledBorderSolicitudHoraExtra.setTitle(titledBorderEstructura.getTitle() + " -> Solicitud Hora Extra");

						if(!Constantes.CON_VARIAS_VENTANAS) {
							MainJFrame.cerrarJInternalFramesExistentes(this.jDesktopPane,solicitudhoraextraBeanSwingJInternalFrame);
						}

						solicitudhoraextraBeanSwingJInternalFrame.setVisible(true);

						this.jDesktopPane.add(solicitudhoraextraBeanSwingJInternalFrame);

						solicitudhoraextraBeanSwingJInternalFrame.setSelected(true);
					}

				} else {
					if(!this.estructuraSessionBean.getConGuardarRelaciones()) {
						JOptionPane.showMessageDialog(this,"NO TIENE PERMISOS PARA USAR LA FUNCIONALIDAD DE Solicitud Hora Extra",Constantes.SERROR,JOptionPane.ERROR_MESSAGE);
					}
				}
				if(Constantes.ISUSAEJBLOGICLAYER) {
					this.estructuraLogic.commitNewConnexionToDeep();
				}

			}

			catch(Exception e) {
				if(Constantes.ISUSAEJBLOGICLAYER) {
					this.estructuraLogic.rollbackNewConnexionToDeep();
				}


				FuncionesSwing.manageException2(this, e,logger,EstructuraConstantesFunciones.CLASSNAME);
			} finally { 
				if(Constantes.ISUSAEJBLOGICLAYER) {
					this.estructuraLogic.closeNewConnexionToDeep();
				}

			}
		}

	public void jButtonEvaluacionNomiActionPerformed(ActionEvent evt,int rowIndex,Boolean conInicializar,Boolean esRelacionado,Estructura estructura) throws Exception {
			try {

				if(this.jInternalFrameDetalleFormEstructura==null) {
					this.inicializarFormDetalle();
				}

				if(Constantes.ISUSAEJBLOGICLAYER) {
					this.estructuraLogic.getNewConnexionToDeep("");
				}

				int intSelectedRow =rowIndex;

				if(intSelectedRow!=-1) {
					//ARCHITECTURE
					if(Constantes.ISUSAEJBLOGICLAYER) {
						this.estructura = (Estructura)this.estructuraLogic.getEstructuras().toArray()[this.jTableDatosEstructura.convertRowIndexToModel(intSelectedRow)];
					} else if(Constantes.ISUSAEJBREMOTE) {
						this.estructura = (Estructura)this.estructuras.toArray()[this.jTableDatosEstructura.convertRowIndexToModel(intSelectedRow)];
					}
					//ARCHITECTURE
				} else {
					if(estructura!=null) {
						this.estructura = estructura;
					} else {
						this.estructura = new Estructura();
					}
				}

				if(this.isTienePermisosEvaluacionNomi && this.permiteMantenimiento(this.estructura)) {
					EvaluacionNomiBeanSwingJInternalFrame evaluacionnomiBeanSwingJInternalFrame=null;

					if(conInicializar) {
						this.jInternalFrameDetalleFormEstructura.evaluacionnomiBeanSwingJInternalFramePopup=new EvaluacionNomiBeanSwingJInternalFrame(false,false,this.jDesktopPane,this.usuarioActual,this.resumenUsuarioActual,this.moduloActual,this.opcionActual,this.parametroGeneralSg,this.parametroGeneralUsuario,PaginaTipo.SECUNDARIO,false,false,true,false);
						this.jInternalFrameDetalleFormEstructura.evaluacionnomiBeanSwingJInternalFramePopup.setJInternalFrameParent(this);

						evaluacionnomiBeanSwingJInternalFrame=this.jInternalFrameDetalleFormEstructura.evaluacionnomiBeanSwingJInternalFramePopup;
					} else {
						evaluacionnomiBeanSwingJInternalFrame=this.jInternalFrameDetalleFormEstructura.evaluacionnomiBeanSwingJInternalFrame;
					}

					List<Estructura> estructuras=new ArrayList<Estructura>();
					estructuras.add(this.estructura);
					if(!esRelacionado) {
						//evaluacionnomiBeanSwingJInternalFrame.evaluacionnomiSessionBean.setConGuardarRelaciones(false);
						//evaluacionnomiBeanSwingJInternalFrame.evaluacionnomiSessionBean.setEsGuardarRelacionado(false);
					}

					//DESHABILITA TEMPORALMENTE EVENTOS CHANGE DE TEXTOS,COMBOS,ETC
					evaluacionnomiBeanSwingJInternalFrame.estaModoSeleccionar=true;
					this.jInternalFrameDetalleFormEstructura.cargarEvaluacionNomiBeanSwingJInternalFrame(estructuras,this.estructura,evaluacionnomiBeanSwingJInternalFrame,/*conInicializar,*/evaluacionnomiBeanSwingJInternalFrame.evaluacionnomiSessionBean.getConGuardarRelaciones(),evaluacionnomiBeanSwingJInternalFrame.evaluacionnomiSessionBean.getEsGuardarRelacionado());
					evaluacionnomiBeanSwingJInternalFrame.estaModoSeleccionar=false;


					if(!esRelacionado) {
						evaluacionnomiBeanSwingJInternalFrame.actualizarEstadoPanelsEvaluacionNomi("no_relacionado");

						evaluacionnomiBeanSwingJInternalFrame.redimensionarTablaDatosConTamanio(EvaluacionNomiConstantesFunciones.ITAMANIOFILATABLA + (EvaluacionNomiConstantesFunciones.ITAMANIOFILATABLA/2));

						evaluacionnomiBeanSwingJInternalFrame.setLocation(xOffset*(openFrameCount + Constantes.INUM_MAX_VENTANAS_REL_X), yOffset*(openFrameCount+Constantes.INUM_MAX_VENTANAS_REL_Y));

						TitledBorder titledBorderEstructura=(TitledBorder)this.jScrollPanelDatosEstructura.getBorder();
						TitledBorder titledBorderEvaluacionNomi=(TitledBorder)evaluacionnomiBeanSwingJInternalFrame.jScrollPanelDatosEvaluacionNomi.getBorder();

						titledBorderEvaluacionNomi.setTitle(titledBorderEstructura.getTitle() + " -> Evaluacion Nomi");

						if(!Constantes.CON_VARIAS_VENTANAS) {
							MainJFrame.cerrarJInternalFramesExistentes(this.jDesktopPane,evaluacionnomiBeanSwingJInternalFrame);
						}

						evaluacionnomiBeanSwingJInternalFrame.setVisible(true);

						this.jDesktopPane.add(evaluacionnomiBeanSwingJInternalFrame);

						evaluacionnomiBeanSwingJInternalFrame.setSelected(true);
					}

				} else {
					if(!this.estructuraSessionBean.getConGuardarRelaciones()) {
						JOptionPane.showMessageDialog(this,"NO TIENE PERMISOS PARA USAR LA FUNCIONALIDAD DE Evaluacion Nomi",Constantes.SERROR,JOptionPane.ERROR_MESSAGE);
					}
				}
				if(Constantes.ISUSAEJBLOGICLAYER) {
					this.estructuraLogic.commitNewConnexionToDeep();
				}

			}

			catch(Exception e) {
				if(Constantes.ISUSAEJBLOGICLAYER) {
					this.estructuraLogic.rollbackNewConnexionToDeep();
				}


				FuncionesSwing.manageException2(this, e,logger,EstructuraConstantesFunciones.CLASSNAME);
			} finally { 
				if(Constantes.ISUSAEJBLOGICLAYER) {
					this.estructuraLogic.closeNewConnexionToDeep();
				}

			}
		}

	public void jButtonSolicitudVacacionActionPerformed(ActionEvent evt,int rowIndex,Boolean conInicializar,Boolean esRelacionado,Estructura estructura) throws Exception {
			try {

				if(this.jInternalFrameDetalleFormEstructura==null) {
					this.inicializarFormDetalle();
				}

				if(Constantes.ISUSAEJBLOGICLAYER) {
					this.estructuraLogic.getNewConnexionToDeep("");
				}

				int intSelectedRow =rowIndex;

				if(intSelectedRow!=-1) {
					//ARCHITECTURE
					if(Constantes.ISUSAEJBLOGICLAYER) {
						this.estructura = (Estructura)this.estructuraLogic.getEstructuras().toArray()[this.jTableDatosEstructura.convertRowIndexToModel(intSelectedRow)];
					} else if(Constantes.ISUSAEJBREMOTE) {
						this.estructura = (Estructura)this.estructuras.toArray()[this.jTableDatosEstructura.convertRowIndexToModel(intSelectedRow)];
					}
					//ARCHITECTURE
				} else {
					if(estructura!=null) {
						this.estructura = estructura;
					} else {
						this.estructura = new Estructura();
					}
				}

				if(this.isTienePermisosSolicitudVacacion && this.permiteMantenimiento(this.estructura)) {
					SolicitudVacacionBeanSwingJInternalFrame solicitudvacacionBeanSwingJInternalFrame=null;

					if(conInicializar) {
						this.jInternalFrameDetalleFormEstructura.solicitudvacacionBeanSwingJInternalFramePopup=new SolicitudVacacionBeanSwingJInternalFrame(false,false,this.jDesktopPane,this.usuarioActual,this.resumenUsuarioActual,this.moduloActual,this.opcionActual,this.parametroGeneralSg,this.parametroGeneralUsuario,PaginaTipo.SECUNDARIO,false,false,true,false);
						this.jInternalFrameDetalleFormEstructura.solicitudvacacionBeanSwingJInternalFramePopup.setJInternalFrameParent(this);

						solicitudvacacionBeanSwingJInternalFrame=this.jInternalFrameDetalleFormEstructura.solicitudvacacionBeanSwingJInternalFramePopup;
					} else {
						solicitudvacacionBeanSwingJInternalFrame=this.jInternalFrameDetalleFormEstructura.solicitudvacacionBeanSwingJInternalFrame;
					}

					List<Estructura> estructuras=new ArrayList<Estructura>();
					estructuras.add(this.estructura);
					if(!esRelacionado) {
						//solicitudvacacionBeanSwingJInternalFrame.solicitudvacacionSessionBean.setConGuardarRelaciones(false);
						//solicitudvacacionBeanSwingJInternalFrame.solicitudvacacionSessionBean.setEsGuardarRelacionado(false);
					}

					//DESHABILITA TEMPORALMENTE EVENTOS CHANGE DE TEXTOS,COMBOS,ETC
					solicitudvacacionBeanSwingJInternalFrame.estaModoSeleccionar=true;
					this.jInternalFrameDetalleFormEstructura.cargarSolicitudVacacionBeanSwingJInternalFrame(estructuras,this.estructura,solicitudvacacionBeanSwingJInternalFrame,/*conInicializar,*/solicitudvacacionBeanSwingJInternalFrame.solicitudvacacionSessionBean.getConGuardarRelaciones(),solicitudvacacionBeanSwingJInternalFrame.solicitudvacacionSessionBean.getEsGuardarRelacionado());
					solicitudvacacionBeanSwingJInternalFrame.estaModoSeleccionar=false;


					if(!esRelacionado) {
						solicitudvacacionBeanSwingJInternalFrame.actualizarEstadoPanelsSolicitudVacacion("no_relacionado");

						solicitudvacacionBeanSwingJInternalFrame.redimensionarTablaDatosConTamanio(SolicitudVacacionConstantesFunciones.ITAMANIOFILATABLA + (SolicitudVacacionConstantesFunciones.ITAMANIOFILATABLA/2));

						solicitudvacacionBeanSwingJInternalFrame.setLocation(xOffset*(openFrameCount + Constantes.INUM_MAX_VENTANAS_REL_X), yOffset*(openFrameCount+Constantes.INUM_MAX_VENTANAS_REL_Y));

						TitledBorder titledBorderEstructura=(TitledBorder)this.jScrollPanelDatosEstructura.getBorder();
						TitledBorder titledBorderSolicitudVacacion=(TitledBorder)solicitudvacacionBeanSwingJInternalFrame.jScrollPanelDatosSolicitudVacacion.getBorder();

						titledBorderSolicitudVacacion.setTitle(titledBorderEstructura.getTitle() + " -> Solicitud Vacacion");

						if(!Constantes.CON_VARIAS_VENTANAS) {
							MainJFrame.cerrarJInternalFramesExistentes(this.jDesktopPane,solicitudvacacionBeanSwingJInternalFrame);
						}

						solicitudvacacionBeanSwingJInternalFrame.setVisible(true);

						this.jDesktopPane.add(solicitudvacacionBeanSwingJInternalFrame);

						solicitudvacacionBeanSwingJInternalFrame.setSelected(true);
					}

				} else {
					if(!this.estructuraSessionBean.getConGuardarRelaciones()) {
						JOptionPane.showMessageDialog(this,"NO TIENE PERMISOS PARA USAR LA FUNCIONALIDAD DE Solicitud Vacacion",Constantes.SERROR,JOptionPane.ERROR_MESSAGE);
					}
				}
				if(Constantes.ISUSAEJBLOGICLAYER) {
					this.estructuraLogic.commitNewConnexionToDeep();
				}

			}

			catch(Exception e) {
				if(Constantes.ISUSAEJBLOGICLAYER) {
					this.estructuraLogic.rollbackNewConnexionToDeep();
				}


				FuncionesSwing.manageException2(this, e,logger,EstructuraConstantesFunciones.CLASSNAME);
			} finally { 
				if(Constantes.ISUSAEJBLOGICLAYER) {
					this.estructuraLogic.closeNewConnexionToDeep();
				}

			}
		}

	public void jButtonResponsableActivoFijoActionPerformed(ActionEvent evt,int rowIndex,Boolean conInicializar,Boolean esRelacionado,Estructura estructura) throws Exception {
			try {

				if(this.jInternalFrameDetalleFormEstructura==null) {
					this.inicializarFormDetalle();
				}

				if(Constantes.ISUSAEJBLOGICLAYER) {
					this.estructuraLogic.getNewConnexionToDeep("");
				}

				int intSelectedRow =rowIndex;

				if(intSelectedRow!=-1) {
					//ARCHITECTURE
					if(Constantes.ISUSAEJBLOGICLAYER) {
						this.estructura = (Estructura)this.estructuraLogic.getEstructuras().toArray()[this.jTableDatosEstructura.convertRowIndexToModel(intSelectedRow)];
					} else if(Constantes.ISUSAEJBREMOTE) {
						this.estructura = (Estructura)this.estructuras.toArray()[this.jTableDatosEstructura.convertRowIndexToModel(intSelectedRow)];
					}
					//ARCHITECTURE
				} else {
					if(estructura!=null) {
						this.estructura = estructura;
					} else {
						this.estructura = new Estructura();
					}
				}

				if(this.isTienePermisosResponsableActivoFijo && this.permiteMantenimiento(this.estructura)) {
					ResponsableActivoFijoBeanSwingJInternalFrame responsableactivofijoBeanSwingJInternalFrame=null;

					if(conInicializar) {
						this.jInternalFrameDetalleFormEstructura.responsableactivofijoBeanSwingJInternalFramePopup=new ResponsableActivoFijoBeanSwingJInternalFrame(false,false,this.jDesktopPane,this.usuarioActual,this.resumenUsuarioActual,this.moduloActual,this.opcionActual,this.parametroGeneralSg,this.parametroGeneralUsuario,PaginaTipo.SECUNDARIO,false,false,true,false);
						this.jInternalFrameDetalleFormEstructura.responsableactivofijoBeanSwingJInternalFramePopup.setJInternalFrameParent(this);

						responsableactivofijoBeanSwingJInternalFrame=this.jInternalFrameDetalleFormEstructura.responsableactivofijoBeanSwingJInternalFramePopup;
					} else {
						responsableactivofijoBeanSwingJInternalFrame=this.jInternalFrameDetalleFormEstructura.responsableactivofijoBeanSwingJInternalFrame;
					}

					List<Estructura> estructuras=new ArrayList<Estructura>();
					estructuras.add(this.estructura);
					if(!esRelacionado) {
						//responsableactivofijoBeanSwingJInternalFrame.responsableactivofijoSessionBean.setConGuardarRelaciones(false);
						//responsableactivofijoBeanSwingJInternalFrame.responsableactivofijoSessionBean.setEsGuardarRelacionado(false);
					}

					//DESHABILITA TEMPORALMENTE EVENTOS CHANGE DE TEXTOS,COMBOS,ETC
					responsableactivofijoBeanSwingJInternalFrame.estaModoSeleccionar=true;
					this.jInternalFrameDetalleFormEstructura.cargarResponsableActivoFijoBeanSwingJInternalFrame(estructuras,this.estructura,responsableactivofijoBeanSwingJInternalFrame,/*conInicializar,*/responsableactivofijoBeanSwingJInternalFrame.responsableactivofijoSessionBean.getConGuardarRelaciones(),responsableactivofijoBeanSwingJInternalFrame.responsableactivofijoSessionBean.getEsGuardarRelacionado());
					responsableactivofijoBeanSwingJInternalFrame.estaModoSeleccionar=false;


					if(!esRelacionado) {
						responsableactivofijoBeanSwingJInternalFrame.actualizarEstadoPanelsResponsableActivoFijo("no_relacionado");

						responsableactivofijoBeanSwingJInternalFrame.redimensionarTablaDatosConTamanio(ResponsableActivoFijoConstantesFunciones.ITAMANIOFILATABLA + (ResponsableActivoFijoConstantesFunciones.ITAMANIOFILATABLA/2));

						responsableactivofijoBeanSwingJInternalFrame.setLocation(xOffset*(openFrameCount + Constantes.INUM_MAX_VENTANAS_REL_X), yOffset*(openFrameCount+Constantes.INUM_MAX_VENTANAS_REL_Y));

						TitledBorder titledBorderEstructura=(TitledBorder)this.jScrollPanelDatosEstructura.getBorder();
						TitledBorder titledBorderResponsableActivoFijo=(TitledBorder)responsableactivofijoBeanSwingJInternalFrame.jScrollPanelDatosResponsableActivoFijo.getBorder();

						titledBorderResponsableActivoFijo.setTitle(titledBorderEstructura.getTitle() + " -> Responsable Activo Fijo");

						if(!Constantes.CON_VARIAS_VENTANAS) {
							MainJFrame.cerrarJInternalFramesExistentes(this.jDesktopPane,responsableactivofijoBeanSwingJInternalFrame);
						}

						responsableactivofijoBeanSwingJInternalFrame.setVisible(true);

						this.jDesktopPane.add(responsableactivofijoBeanSwingJInternalFrame);

						responsableactivofijoBeanSwingJInternalFrame.setSelected(true);
					}

				} else {
					if(!this.estructuraSessionBean.getConGuardarRelaciones()) {
						JOptionPane.showMessageDialog(this,"NO TIENE PERMISOS PARA USAR LA FUNCIONALIDAD DE Responsable Activo Fijo",Constantes.SERROR,JOptionPane.ERROR_MESSAGE);
					}
				}
				if(Constantes.ISUSAEJBLOGICLAYER) {
					this.estructuraLogic.commitNewConnexionToDeep();
				}

			}

			catch(Exception e) {
				if(Constantes.ISUSAEJBLOGICLAYER) {
					this.estructuraLogic.rollbackNewConnexionToDeep();
				}


				FuncionesSwing.manageException2(this, e,logger,EstructuraConstantesFunciones.CLASSNAME);
			} finally { 
				if(Constantes.ISUSAEJBLOGICLAYER) {
					this.estructuraLogic.closeNewConnexionToDeep();
				}

			}
		}

	public void jButtonRubroEmpleaCuentaContableActionPerformed(ActionEvent evt,int rowIndex,Boolean conInicializar,Boolean esRelacionado,Estructura estructura) throws Exception {
			try {

				if(this.jInternalFrameDetalleFormEstructura==null) {
					this.inicializarFormDetalle();
				}

				if(Constantes.ISUSAEJBLOGICLAYER) {
					this.estructuraLogic.getNewConnexionToDeep("");
				}

				int intSelectedRow =rowIndex;

				if(intSelectedRow!=-1) {
					//ARCHITECTURE
					if(Constantes.ISUSAEJBLOGICLAYER) {
						this.estructura = (Estructura)this.estructuraLogic.getEstructuras().toArray()[this.jTableDatosEstructura.convertRowIndexToModel(intSelectedRow)];
					} else if(Constantes.ISUSAEJBREMOTE) {
						this.estructura = (Estructura)this.estructuras.toArray()[this.jTableDatosEstructura.convertRowIndexToModel(intSelectedRow)];
					}
					//ARCHITECTURE
				} else {
					if(estructura!=null) {
						this.estructura = estructura;
					} else {
						this.estructura = new Estructura();
					}
				}

				if(this.isTienePermisosRubroEmpleaCuentaContable && this.permiteMantenimiento(this.estructura)) {
					RubroEmpleaCuentaContableBeanSwingJInternalFrame rubroempleacuentacontableBeanSwingJInternalFrame=null;

					if(conInicializar) {
						this.jInternalFrameDetalleFormEstructura.rubroempleacuentacontableBeanSwingJInternalFramePopup=new RubroEmpleaCuentaContableBeanSwingJInternalFrame(false,false,this.jDesktopPane,this.usuarioActual,this.resumenUsuarioActual,this.moduloActual,this.opcionActual,this.parametroGeneralSg,this.parametroGeneralUsuario,PaginaTipo.SECUNDARIO,false,false,true,false);
						this.jInternalFrameDetalleFormEstructura.rubroempleacuentacontableBeanSwingJInternalFramePopup.setJInternalFrameParent(this);

						rubroempleacuentacontableBeanSwingJInternalFrame=this.jInternalFrameDetalleFormEstructura.rubroempleacuentacontableBeanSwingJInternalFramePopup;
					} else {
						rubroempleacuentacontableBeanSwingJInternalFrame=this.jInternalFrameDetalleFormEstructura.rubroempleacuentacontableBeanSwingJInternalFrame;
					}

					List<Estructura> estructuras=new ArrayList<Estructura>();
					estructuras.add(this.estructura);
					if(!esRelacionado) {
						//rubroempleacuentacontableBeanSwingJInternalFrame.rubroempleacuentacontableSessionBean.setConGuardarRelaciones(false);
						//rubroempleacuentacontableBeanSwingJInternalFrame.rubroempleacuentacontableSessionBean.setEsGuardarRelacionado(false);
					}

					//DESHABILITA TEMPORALMENTE EVENTOS CHANGE DE TEXTOS,COMBOS,ETC
					rubroempleacuentacontableBeanSwingJInternalFrame.estaModoSeleccionar=true;
					this.jInternalFrameDetalleFormEstructura.cargarRubroEmpleaCuentaContableBeanSwingJInternalFrame(estructuras,this.estructura,rubroempleacuentacontableBeanSwingJInternalFrame,/*conInicializar,*/rubroempleacuentacontableBeanSwingJInternalFrame.rubroempleacuentacontableSessionBean.getConGuardarRelaciones(),rubroempleacuentacontableBeanSwingJInternalFrame.rubroempleacuentacontableSessionBean.getEsGuardarRelacionado());
					rubroempleacuentacontableBeanSwingJInternalFrame.estaModoSeleccionar=false;


					if(!esRelacionado) {
						rubroempleacuentacontableBeanSwingJInternalFrame.actualizarEstadoPanelsRubroEmpleaCuentaContable("no_relacionado");

						rubroempleacuentacontableBeanSwingJInternalFrame.redimensionarTablaDatosConTamanio(RubroEmpleaCuentaContableConstantesFunciones.ITAMANIOFILATABLA + (RubroEmpleaCuentaContableConstantesFunciones.ITAMANIOFILATABLA/2));

						rubroempleacuentacontableBeanSwingJInternalFrame.setLocation(xOffset*(openFrameCount + Constantes.INUM_MAX_VENTANAS_REL_X), yOffset*(openFrameCount+Constantes.INUM_MAX_VENTANAS_REL_Y));

						TitledBorder titledBorderEstructura=(TitledBorder)this.jScrollPanelDatosEstructura.getBorder();
						TitledBorder titledBorderRubroEmpleaCuentaContable=(TitledBorder)rubroempleacuentacontableBeanSwingJInternalFrame.jScrollPanelDatosRubroEmpleaCuentaContable.getBorder();

						titledBorderRubroEmpleaCuentaContable.setTitle(titledBorderEstructura.getTitle() + " -> Rubro Emplea Cuenta Contable");

						if(!Constantes.CON_VARIAS_VENTANAS) {
							MainJFrame.cerrarJInternalFramesExistentes(this.jDesktopPane,rubroempleacuentacontableBeanSwingJInternalFrame);
						}

						rubroempleacuentacontableBeanSwingJInternalFrame.setVisible(true);

						this.jDesktopPane.add(rubroempleacuentacontableBeanSwingJInternalFrame);

						rubroempleacuentacontableBeanSwingJInternalFrame.setSelected(true);
					}

				} else {
					if(!this.estructuraSessionBean.getConGuardarRelaciones()) {
						JOptionPane.showMessageDialog(this,"NO TIENE PERMISOS PARA USAR LA FUNCIONALIDAD DE Rubro Emplea Cuenta Contable",Constantes.SERROR,JOptionPane.ERROR_MESSAGE);
					}
				}
				if(Constantes.ISUSAEJBLOGICLAYER) {
					this.estructuraLogic.commitNewConnexionToDeep();
				}

			}

			catch(Exception e) {
				if(Constantes.ISUSAEJBLOGICLAYER) {
					this.estructuraLogic.rollbackNewConnexionToDeep();
				}


				FuncionesSwing.manageException2(this, e,logger,EstructuraConstantesFunciones.CLASSNAME);
			} finally { 
				if(Constantes.ISUSAEJBLOGICLAYER) {
					this.estructuraLogic.closeNewConnexionToDeep();
				}

			}
		}

	
	
	
	public void refrescarBindingTabla(Boolean blnSoloTabla) {
	}
	
	public void inicializarActualizarBindingBotonesManualEstructura(Boolean esSetControles) {						
		if(esSetControles) {
			this.jButtonNuevoEstructura.setVisible((this.isVisibilidadCeldaNuevoEstructura && this.isPermisoNuevoEstructura));			
			this.jButtonDuplicarEstructura.setVisible((this.isVisibilidadCeldaDuplicarEstructura && this.isPermisoDuplicarEstructura));			
			this.jButtonCopiarEstructura.setVisible((this.isVisibilidadCeldaCopiarEstructura && this.isPermisoCopiarEstructura));
			this.jButtonVerFormEstructura.setVisible((this.isVisibilidadCeldaVerFormEstructura && this.isPermisoVerFormEstructura));
			
			this.jButtonAbrirOrderByEstructura.setVisible((this.isVisibilidadCeldaOrdenEstructura && this.isPermisoOrdenEstructura));			
			
			this.jButtonNuevoRelacionesEstructura.setVisible((this.isVisibilidadCeldaNuevoRelacionesEstructura && this.isPermisoNuevoEstructura));			
			this.jButtonNuevoGuardarCambiosEstructura.setVisible((this.isVisibilidadCeldaNuevoEstructura && this.isPermisoNuevoEstructura && this.isPermisoGuardarCambiosEstructura));
			
			if(this.jInternalFrameDetalleFormEstructura!=null) {
			this.jInternalFrameDetalleFormEstructura.jButtonModificarEstructura.setVisible((this.isVisibilidadCeldaModificarEstructura && this.isPermisoActualizarEstructura));	
			this.jInternalFrameDetalleFormEstructura.jButtonActualizarEstructura.setVisible((this.isVisibilidadCeldaActualizarEstructura && this.isPermisoActualizarEstructura));	
			this.jInternalFrameDetalleFormEstructura.jButtonEliminarEstructura.setVisible((this.isVisibilidadCeldaEliminarEstructura && this.isPermisoEliminarEstructura));
			this.jInternalFrameDetalleFormEstructura.jButtonCancelarEstructura.setVisible(this.isVisibilidadCeldaCancelarEstructura);							
			this.jInternalFrameDetalleFormEstructura.jButtonGuardarCambiosEstructura.setVisible((this.isVisibilidadCeldaGuardarEstructura && this.isPermisoGuardarCambiosEstructura));			
			
			}
						
			this.jButtonGuardarCambiosTablaEstructura.setVisible((this.isVisibilidadCeldaGuardarCambiosEstructura && this.isPermisoGuardarCambiosEstructura));							
			
			//TOOLBAR
			
			this.jButtonNuevoToolBarEstructura.setVisible((this.isVisibilidadCeldaNuevoEstructura && this.isPermisoNuevoEstructura));						
			this.jButtonDuplicarToolBarEstructura.setVisible((this.isVisibilidadCeldaDuplicarEstructura && this.isPermisoDuplicarEstructura));						
			this.jButtonCopiarToolBarEstructura.setVisible((this.isVisibilidadCeldaCopiarEstructura && this.isPermisoCopiarEstructura));			
			this.jButtonVerFormToolBarEstructura.setVisible((this.isVisibilidadCeldaVerFormEstructura && this.isPermisoVerFormEstructura));			
			this.jButtonAbrirOrderByToolBarEstructura.setVisible((this.isVisibilidadCeldaOrdenEstructura && this.isPermisoOrdenEstructura));
			this.jButtonNuevoRelacionesToolBarEstructura.setVisible((this.isVisibilidadCeldaNuevoRelacionesEstructura && this.isPermisoNuevoEstructura));			
			this.jButtonNuevoGuardarCambiosToolBarEstructura.setVisible((this.isVisibilidadCeldaNuevoEstructura && this.isPermisoNuevoEstructura && this.isPermisoGuardarCambiosEstructura));			
			
			if(this.jInternalFrameDetalleFormEstructura!=null) {
			this.jInternalFrameDetalleFormEstructura.jButtonModificarToolBarEstructura.setVisible((this.isVisibilidadCeldaModificarEstructura && this.isPermisoActualizarEstructura));	
			this.jInternalFrameDetalleFormEstructura.jButtonActualizarToolBarEstructura.setVisible((this.isVisibilidadCeldaActualizarEstructura  && this.isPermisoActualizarEstructura));	
			this.jInternalFrameDetalleFormEstructura.jButtonEliminarToolBarEstructura.setVisible((this.isVisibilidadCeldaEliminarEstructura && this.isPermisoEliminarEstructura));
			this.jInternalFrameDetalleFormEstructura.jButtonCancelarToolBarEstructura.setVisible(this.isVisibilidadCeldaCancelarEstructura);				
			this.jInternalFrameDetalleFormEstructura.jButtonGuardarCambiosToolBarEstructura.setVisible((this.isVisibilidadCeldaGuardarEstructura && this.isPermisoGuardarCambiosEstructura));									
			}
			
			this.jButtonGuardarCambiosTablaToolBarEstructura.setVisible((this.isVisibilidadCeldaGuardarCambiosEstructura && this.isPermisoGuardarCambiosEstructura));									
			
			//TOOLBAR
			
			//MENUS
			
			this.jMenuItemNuevoEstructura.setVisible((this.isVisibilidadCeldaNuevoEstructura && this.isPermisoNuevoEstructura));			
			this.jMenuItemDuplicarEstructura.setVisible((this.isVisibilidadCeldaDuplicarEstructura && this.isPermisoDuplicarEstructura));			
			this.jMenuItemCopiarEstructura.setVisible((this.isVisibilidadCeldaCopiarEstructura && this.isPermisoCopiarEstructura));			
			this.jMenuItemVerFormEstructura.setVisible((this.isVisibilidadCeldaVerFormEstructura && this.isPermisoVerFormEstructura));			
			this.jMenuItemAbrirOrderByEstructura.setVisible((this.isVisibilidadCeldaOrdenEstructura && this.isPermisoOrdenEstructura));			
			//this.jMenuItemMostrarOcultarEstructura.setVisible((this.isVisibilidadCeldaOrdenEstructura && this.isPermisoOrdenEstructura));
			this.jMenuItemDetalleAbrirOrderByEstructura.setVisible((this.isVisibilidadCeldaOrdenEstructura && this.isPermisoOrdenEstructura));			
			//this.jMenuItemDetalleMostrarOcultarEstructura.setVisible((this.isVisibilidadCeldaOrdenEstructura && this.isPermisoOrdenEstructura));			
			this.jMenuItemNuevoRelacionesEstructura.setVisible((this.isVisibilidadCeldaNuevoRelacionesEstructura && this.isPermisoNuevoEstructura));			
			this.jMenuItemNuevoGuardarCambiosEstructura.setVisible((this.isVisibilidadCeldaNuevoEstructura && this.isPermisoNuevoEstructura && this.isPermisoGuardarCambiosEstructura));									
			
			if(this.jInternalFrameDetalleFormEstructura!=null) {
			this.jInternalFrameDetalleFormEstructura.jMenuItemModificarEstructura.setVisible((this.isVisibilidadCeldaModificarEstructura && this.isPermisoActualizarEstructura));	
			this.jInternalFrameDetalleFormEstructura.jMenuItemActualizarEstructura.setVisible((this.isVisibilidadCeldaActualizarEstructura && this.isPermisoActualizarEstructura));	
			this.jInternalFrameDetalleFormEstructura.jMenuItemEliminarEstructura.setVisible((this.isVisibilidadCeldaEliminarEstructura && this.isPermisoEliminarEstructura));
			this.jInternalFrameDetalleFormEstructura.jMenuItemCancelarEstructura.setVisible(this.isVisibilidadCeldaCancelarEstructura);				
			}
			
			this.jMenuItemGuardarCambiosEstructura.setVisible((this.isVisibilidadCeldaGuardarEstructura && this.isPermisoGuardarCambiosEstructura));						
			this.jMenuItemGuardarCambiosTablaEstructura.setVisible((this.isVisibilidadCeldaGuardarCambiosEstructura && this.isPermisoGuardarCambiosEstructura));						
			
			//MENUS
			
		} else {
			this.isVisibilidadCeldaNuevoEstructura=this.jButtonNuevoEstructura.isVisible();
			this.isVisibilidadCeldaDuplicarEstructura=this.jButtonDuplicarEstructura.isVisible();
			this.isVisibilidadCeldaCopiarEstructura=this.jButtonCopiarEstructura.isVisible();
			this.isVisibilidadCeldaVerFormEstructura=this.jButtonVerFormEstructura.isVisible();
			
			this.isVisibilidadCeldaOrdenEstructura=this.jButtonAbrirOrderByEstructura.isVisible();			
			
			this.isVisibilidadCeldaNuevoRelacionesEstructura=this.jButtonNuevoRelacionesEstructura.isVisible();
			this.isVisibilidadCeldaModificarEstructura=this.jButtonModificarEstructura.isVisible();
			
			if(this.jInternalFrameDetalleFormEstructura!=null) {
			this.isVisibilidadCeldaActualizarEstructura=this.jInternalFrameDetalleFormEstructura.jButtonActualizarEstructura.isVisible();
			this.isVisibilidadCeldaEliminarEstructura=this.jInternalFrameDetalleFormEstructura.jButtonEliminarEstructura.isVisible();
			this.isVisibilidadCeldaCancelarEstructura=this.jInternalFrameDetalleFormEstructura.jButtonCancelarEstructura.isVisible();
			this.isVisibilidadCeldaGuardarEstructura=this.jInternalFrameDetalleFormEstructura.jButtonGuardarCambiosEstructura.isVisible();			
			}
			
			this.isVisibilidadCeldaGuardarCambiosEstructura=this.jButtonGuardarCambiosTablaEstructura.isVisible();
			
			//TOOLBAR
			
			this.isVisibilidadCeldaNuevoEstructura=this.jButtonNuevoToolBarEstructura.isVisible();
			this.isVisibilidadCeldaNuevoRelacionesEstructura=this.jButtonNuevoRelacionesToolBarEstructura.isVisible();
			
			if(this.jInternalFrameDetalleFormEstructura!=null) {
			this.isVisibilidadCeldaModificarEstructura=this.jInternalFrameDetalleFormEstructura.jButtonModificarToolBarEstructura.isVisible();
			this.isVisibilidadCeldaActualizarEstructura=this.jInternalFrameDetalleFormEstructura.jButtonActualizarToolBarEstructura.isVisible();
			this.isVisibilidadCeldaEliminarEstructura=this.jInternalFrameDetalleFormEstructura.jButtonEliminarToolBarEstructura.isVisible();
			this.isVisibilidadCeldaCancelarEstructura=this.jInternalFrameDetalleFormEstructura.jButtonCancelarToolBarEstructura.isVisible();
			}
			
			this.isVisibilidadCeldaGuardarEstructura=this.jButtonGuardarCambiosToolBarEstructura.isVisible();
			this.isVisibilidadCeldaGuardarCambiosEstructura=this.jButtonGuardarCambiosTablaToolBarEstructura.isVisible();						
			
			//TOOLBAR
			
			//MENUS
			
			this.isVisibilidadCeldaNuevoEstructura=this.jMenuItemNuevoEstructura.isVisible();
			this.isVisibilidadCeldaNuevoRelacionesEstructura=this.jMenuItemNuevoRelacionesEstructura.isVisible();
			
			if(this.jInternalFrameDetalleFormEstructura!=null) {
			this.isVisibilidadCeldaModificarEstructura=this.jInternalFrameDetalleFormEstructura.jMenuItemModificarEstructura.isVisible();
			this.isVisibilidadCeldaActualizarEstructura=this.jInternalFrameDetalleFormEstructura.jMenuItemActualizarEstructura.isVisible();
			this.isVisibilidadCeldaEliminarEstructura=this.jInternalFrameDetalleFormEstructura.jMenuItemEliminarEstructura.isVisible();
			this.isVisibilidadCeldaCancelarEstructura=this.jInternalFrameDetalleFormEstructura.jMenuItemCancelarEstructura.isVisible();
			}
			
			this.isVisibilidadCeldaGuardarEstructura=this.jMenuItemGuardarCambiosEstructura.isVisible();
			this.isVisibilidadCeldaGuardarCambiosEstructura=this.jMenuItemGuardarCambiosTablaEstructura.isVisible();						
			
			//MENUS
		}
	}
	
	public void inicializarActualizarBindingBotonesEstructura(Boolean esInicializar) {
		if(EstructuraJInternalFrame.ISBINDING_MANUAL) {			
			if(this.estructuraSessionBean.getConGuardarRelaciones()) {
				//if(this.estructuraSessionBean.getEsGuardarRelacionado()) {
				
				this.actualizarEstadoCeldasBotonesConGuardarRelacionesEstructura();
			}
			
			this.inicializarActualizarBindingBotonesManualEstructura(true);
			
		} else {	
		}
	}		
	
	public void inicializarActualizarBindingBotonesPermisosManualEstructura() {
		this.jButtonNuevoEstructura.setVisible(this.isPermisoNuevoEstructura);			
		this.jButtonDuplicarEstructura.setVisible(this.isPermisoDuplicarEstructura);			
		this.jButtonCopiarEstructura.setVisible(this.isPermisoCopiarEstructura);			
		this.jButtonVerFormEstructura.setVisible(this.isPermisoVerFormEstructura);			
		
		this.jButtonAbrirOrderByEstructura.setVisible(this.isPermisoOrdenEstructura);					
		
		this.jButtonNuevoRelacionesEstructura.setVisible(this.isPermisoNuevoEstructura);			
		
		if(this.jInternalFrameDetalleFormEstructura!=null) { //if(this.conCargarFormDetalle) {
			this.jInternalFrameDetalleFormEstructura.jButtonModificarEstructura.setVisible(this.isPermisoActualizarEstructura);	
			this.jInternalFrameDetalleFormEstructura.jButtonActualizarEstructura.setVisible(this.isPermisoActualizarEstructura);	
			this.jInternalFrameDetalleFormEstructura.jButtonEliminarEstructura.setVisible(this.isPermisoEliminarEstructura);
			this.jInternalFrameDetalleFormEstructura.jButtonCancelarEstructura.setVisible(this.isVisibilidadCeldaCancelarEstructura);						
			this.jInternalFrameDetalleFormEstructura.jButtonGuardarCambiosEstructura.setVisible(this.isPermisoGuardarCambiosEstructura);							
		}
		
		this.jButtonGuardarCambiosTablaEstructura.setVisible(this.isPermisoActualizarEstructura);
	}
	
	public void inicializarActualizarBindingBotonesPermisosManualFormDetalleEstructura() {
		this.jInternalFrameDetalleFormEstructura.jButtonModificarEstructura.setVisible(this.isPermisoActualizarEstructura);	
		this.jInternalFrameDetalleFormEstructura.jButtonActualizarEstructura.setVisible(this.isPermisoActualizarEstructura);	
		this.jInternalFrameDetalleFormEstructura.jButtonEliminarEstructura.setVisible(this.isPermisoEliminarEstructura);
		this.jInternalFrameDetalleFormEstructura.jButtonCancelarEstructura.setVisible(this.isVisibilidadCeldaCancelarEstructura);							
		this.jInternalFrameDetalleFormEstructura.jButtonGuardarCambiosEstructura.setVisible((this.isVisibilidadCeldaGuardarEstructura && this.isPermisoGuardarCambiosEstructura));			
	}
	
	public void inicializarActualizarBindingBotonesPermisosEstructura() {
		if(EstructuraJInternalFrame.ISBINDING_MANUAL) {
			this.inicializarActualizarBindingBotonesPermisosManualEstructura();
		} else {
		}
	}
	
	
	public void refrescarBindingBotonesEstructura() {
	}
	
	public void jTableDatosEstructuraListSelectionListener(javax.swing.event.ListSelectionEvent evt) throws Exception { 
		try {
			this.seleccionarEstructura(null,evt,-1);
		} catch(Exception e) {
			FuncionesSwing.manageException(this, e,logger,EstructuraConstantesFunciones.CLASSNAME);
		}
	}
	
	
	public void jButtonidEstructuraBusquedaActionPerformed(java.awt.event.ActionEvent evt) throws Exception {
		try {

				if(Constantes.ISUSAEJBLOGICLAYER) {
					this.estructuraLogic.getNewConnexionToDeep("");
				}

				//TOCA TRAER NUEVAMENTE, YA QUE SE PIERDE REGISTRO ACTUAL
				int intSelectedRow = this.jTableDatosEstructura.getSelectedRow();

				if(intSelectedRow>-1) {
					this.setVariablesFormularioToObjetoActualEstructura(this.getestructura(),true);
					this.setVariablesFormularioToObjetoActualForeignKeysEstructura(this.estructura);
					//ARCHITECTURE
					/*
					if(Constantes.ISUSAEJBLOGICLAYER) {
						this.estructura =(Estructura) this.estructuraLogic.getEstructuras().toArray()[this.jTableDatosEstructura.convertRowIndexToModel(intSelectedRow)];
					} else if(Constantes.ISUSAEJBREMOTE || Constantes.ISUSAEJBHOME) {
						this.estructura =(Estructura) this.estructuras.toArray()[this.jTableDatosEstructura.convertRowIndexToModel(intSelectedRow)];
					}
					*/
					//ARCHITECTURE

				} else {
					if(this.estructura==null) {
						this.estructura = new Estructura();
					}

					this.setVariablesFormularioToObjetoActualEstructura(this.estructura,true);
					this.setVariablesFormularioToObjetoActualForeignKeysEstructura(this.estructura);
				}

				if(this.estructura.getId()!=null) {

					this.sAccionBusqueda="Query";

					this.sFinalQueryGeneral=" where id = "+this.estructura.getId().toString()+" ";

					if(Constantes.ISDEVELOPING) {
						System.out.println(this.sFinalQueryGeneral);
					}

					this.procesarBusqueda(this.sAccionBusqueda);

					this.inicializarActualizarBindingEstructura(false);
				}

				if(Constantes.ISUSAEJBLOGICLAYER) {
					this.estructuraLogic.commitNewConnexionToDeep();
				}

			} catch(Exception e) {

				if(Constantes.ISUSAEJBLOGICLAYER) {
					this.estructuraLogic.rollbackNewConnexionToDeep();
				}

				FuncionesSwing.manageException(this, e,logger,EstructuraConstantesFunciones.CLASSNAME);

			} finally {
				if(Constantes.ISUSAEJBLOGICLAYER) {
					this.estructuraLogic.closeNewConnexionToDeep();
				}

			}
		}

	public void jButtonid_empresaEstructuraUpdateActionPerformed(java.awt.event.ActionEvent evt) throws Exception {
		try {

			if(Constantes.ISUSAEJBLOGICLAYER) {
				this.estructuraLogic.getNewConnexionToDeep("");
			}

			Boolean idTienePermisoempresa=true;

			idTienePermisoempresa=this.tienePermisosUsuarioEnPaginaWebEstructura(EmpresaConstantesFunciones.CLASSNAME);

			if(idTienePermisoempresa) {
				//TOCA TRAER NUEVAMENTE, YA QUE SE PIERDE REGISTRO ACTUAL
				int intSelectedRow = this.jTableDatosEstructura.getSelectedRow();

				if(intSelectedRow<0 && this.jTableDatosEstructura.getRowCount()>0) {
					intSelectedRow =0;
					this.jTableDatosEstructura.setRowSelectionInterval(intSelectedRow,intSelectedRow);
				}
				//ARCHITECTURE
				/*
				if(Constantes.ISUSAEJBLOGICLAYER) {
					this.estructura =(Estructura) this.estructuraLogic.getEstructuras().toArray()[this.jTableDatosEstructura.convertRowIndexToModel(intSelectedRow)];
				} else if(Constantes.ISUSAEJBREMOTE || Constantes.ISUSAEJBHOME) {
					this.estructura =(Estructura) this.estructuras.toArray()[this.jTableDatosEstructura.convertRowIndexToModel(intSelectedRow)];
				}
				*/
				//ARCHITECTURE

				this.setVariablesFormularioToObjetoActualEstructura(this.getestructura(),true);
				this.setVariablesFormularioToObjetoActualForeignKeysEstructura(this.estructura);

				this.empresaBeanSwingJInternalFrame=new EmpresaBeanSwingJInternalFrame(true,true,this.jDesktopPane,this.usuarioActual,this.resumenUsuarioActual,this.moduloActual,this.opcionActual,this.parametroGeneralSg,this.parametroGeneralUsuario,PaginaTipo.AUXILIAR,false,false,false,true);
				this.empresaBeanSwingJInternalFrame.setJInternalFrameParent(this);

				this.empresaBeanSwingJInternalFrame.getEmpresaLogic().setConnexion(this.estructuraLogic.getConnexion());

				if(this.estructura.getid_empresa()!=null) {
					this.empresaBeanSwingJInternalFrame.sTipoBusqueda="PorId";
					this.empresaBeanSwingJInternalFrame.setIdActual(this.estructura.getid_empresa());
					this.empresaBeanSwingJInternalFrame.procesarBusqueda("PorId");
					this.empresaBeanSwingJInternalFrame.setsAccionBusqueda("PorId");
					this.empresaBeanSwingJInternalFrame.inicializarActualizarBindingTablaEmpresa();
				}

				JInternalFrameBase jinternalFrame =this.empresaBeanSwingJInternalFrame;
				jinternalFrame.setAutoscrolls(true);
				//frame.setSize(screenSize.width-inset*7 , screenSize.height-inset*9);
				jinternalFrame.setVisible(true); 


				TitledBorder titledBorderEstructura=(TitledBorder)this.jScrollPanelDatosEstructura.getBorder();
				TitledBorder titledBorderempresa=(TitledBorder)this.empresaBeanSwingJInternalFrame.jScrollPanelDatosEmpresa.getBorder();

				titledBorderempresa.setTitle(titledBorderEstructura.getTitle() + " -> Empresa");


				if(!Constantes.CON_VARIAS_VENTANAS) {
					MainJFrame.cerrarJInternalFramesExistentes(this.jDesktopPane,jinternalFrame);
				}

				this.jDesktopPane.add(jinternalFrame);

				jinternalFrame.setSelected(true);
			} else {
				throw new Exception("NO TIENE PERMISO PARA TRABAJAR CON ESTA INFORMACION");
			}

			if(Constantes.ISUSAEJBLOGICLAYER) {
				this.estructuraLogic.commitNewConnexionToDeep();
			}


		} catch(Exception e) {

			if(Constantes.ISUSAEJBLOGICLAYER) {
				this.estructuraLogic.rollbackNewConnexionToDeep();
			}

			FuncionesSwing.manageException(this, e,logger,EstructuraConstantesFunciones.CLASSNAME);

		} finally {
			if(Constantes.ISUSAEJBLOGICLAYER) {
				this.estructuraLogic.closeNewConnexionToDeep();
			}

		}
	}

	public void jButtonid_empresaEstructuraBusquedaActionPerformed(java.awt.event.ActionEvent evt) throws Exception {
		try {

				if(Constantes.ISUSAEJBLOGICLAYER) {
					this.estructuraLogic.getNewConnexionToDeep("");
				}

				//TOCA TRAER NUEVAMENTE, YA QUE SE PIERDE REGISTRO ACTUAL
				int intSelectedRow = this.jTableDatosEstructura.getSelectedRow();

				if(intSelectedRow>-1) {
					this.setVariablesFormularioToObjetoActualEstructura(this.getestructura(),true);
					this.setVariablesFormularioToObjetoActualForeignKeysEstructura(this.estructura);
					//ARCHITECTURE
					/*
					if(Constantes.ISUSAEJBLOGICLAYER) {
						this.estructura =(Estructura) this.estructuraLogic.getEstructuras().toArray()[this.jTableDatosEstructura.convertRowIndexToModel(intSelectedRow)];
					} else if(Constantes.ISUSAEJBREMOTE || Constantes.ISUSAEJBHOME) {
						this.estructura =(Estructura) this.estructuras.toArray()[this.jTableDatosEstructura.convertRowIndexToModel(intSelectedRow)];
					}
					*/
					//ARCHITECTURE

				} else {
					if(this.estructura==null) {
						this.estructura = new Estructura();
					}

					this.setVariablesFormularioToObjetoActualEstructura(this.estructura,true);
					this.setVariablesFormularioToObjetoActualForeignKeysEstructura(this.estructura);
				}

				if(this.estructura.getid_empresa()!=null) {

					this.sAccionBusqueda="Query";

					this.sFinalQueryGeneral=" where id_empresa = "+this.estructura.getid_empresa().toString()+" ";

					if(Constantes.ISDEVELOPING) {
						System.out.println(this.sFinalQueryGeneral);
					}

					this.procesarBusqueda(this.sAccionBusqueda);

					this.inicializarActualizarBindingEstructura(false);
				}

				if(Constantes.ISUSAEJBLOGICLAYER) {
					this.estructuraLogic.commitNewConnexionToDeep();
				}

			} catch(Exception e) {

				if(Constantes.ISUSAEJBLOGICLAYER) {
					this.estructuraLogic.rollbackNewConnexionToDeep();
				}

				FuncionesSwing.manageException(this, e,logger,EstructuraConstantesFunciones.CLASSNAME);

			} finally {
				if(Constantes.ISUSAEJBLOGICLAYER) {
					this.estructuraLogic.closeNewConnexionToDeep();
				}

			}
		}

	public void jButtonid_sucursalEstructuraUpdateActionPerformed(java.awt.event.ActionEvent evt) throws Exception {
		try {

			if(Constantes.ISUSAEJBLOGICLAYER) {
				this.estructuraLogic.getNewConnexionToDeep("");
			}

			Boolean idTienePermisosucursal=true;

			idTienePermisosucursal=this.tienePermisosUsuarioEnPaginaWebEstructura(SucursalConstantesFunciones.CLASSNAME);

			if(idTienePermisosucursal) {
				//TOCA TRAER NUEVAMENTE, YA QUE SE PIERDE REGISTRO ACTUAL
				int intSelectedRow = this.jTableDatosEstructura.getSelectedRow();

				if(intSelectedRow<0 && this.jTableDatosEstructura.getRowCount()>0) {
					intSelectedRow =0;
					this.jTableDatosEstructura.setRowSelectionInterval(intSelectedRow,intSelectedRow);
				}
				//ARCHITECTURE
				/*
				if(Constantes.ISUSAEJBLOGICLAYER) {
					this.estructura =(Estructura) this.estructuraLogic.getEstructuras().toArray()[this.jTableDatosEstructura.convertRowIndexToModel(intSelectedRow)];
				} else if(Constantes.ISUSAEJBREMOTE || Constantes.ISUSAEJBHOME) {
					this.estructura =(Estructura) this.estructuras.toArray()[this.jTableDatosEstructura.convertRowIndexToModel(intSelectedRow)];
				}
				*/
				//ARCHITECTURE

				this.setVariablesFormularioToObjetoActualEstructura(this.getestructura(),true);
				this.setVariablesFormularioToObjetoActualForeignKeysEstructura(this.estructura);

				this.sucursalBeanSwingJInternalFrame=new SucursalBeanSwingJInternalFrame(true,true,this.jDesktopPane,this.usuarioActual,this.resumenUsuarioActual,this.moduloActual,this.opcionActual,this.parametroGeneralSg,this.parametroGeneralUsuario,PaginaTipo.AUXILIAR,false,false,false,true);
				this.sucursalBeanSwingJInternalFrame.setJInternalFrameParent(this);

				this.sucursalBeanSwingJInternalFrame.getSucursalLogic().setConnexion(this.estructuraLogic.getConnexion());

				if(this.estructura.getid_sucursal()!=null) {
					this.sucursalBeanSwingJInternalFrame.sTipoBusqueda="PorId";
					this.sucursalBeanSwingJInternalFrame.setIdActual(this.estructura.getid_sucursal());
					this.sucursalBeanSwingJInternalFrame.procesarBusqueda("PorId");
					this.sucursalBeanSwingJInternalFrame.setsAccionBusqueda("PorId");
					this.sucursalBeanSwingJInternalFrame.inicializarActualizarBindingTablaSucursal();
				}

				JInternalFrameBase jinternalFrame =this.sucursalBeanSwingJInternalFrame;
				jinternalFrame.setAutoscrolls(true);
				//frame.setSize(screenSize.width-inset*7 , screenSize.height-inset*9);
				jinternalFrame.setVisible(true); 


				TitledBorder titledBorderEstructura=(TitledBorder)this.jScrollPanelDatosEstructura.getBorder();
				TitledBorder titledBordersucursal=(TitledBorder)this.sucursalBeanSwingJInternalFrame.jScrollPanelDatosSucursal.getBorder();

				titledBordersucursal.setTitle(titledBorderEstructura.getTitle() + " -> Sucursal");


				if(!Constantes.CON_VARIAS_VENTANAS) {
					MainJFrame.cerrarJInternalFramesExistentes(this.jDesktopPane,jinternalFrame);
				}

				this.jDesktopPane.add(jinternalFrame);

				jinternalFrame.setSelected(true);
			} else {
				throw new Exception("NO TIENE PERMISO PARA TRABAJAR CON ESTA INFORMACION");
			}

			if(Constantes.ISUSAEJBLOGICLAYER) {
				this.estructuraLogic.commitNewConnexionToDeep();
			}


		} catch(Exception e) {

			if(Constantes.ISUSAEJBLOGICLAYER) {
				this.estructuraLogic.rollbackNewConnexionToDeep();
			}

			FuncionesSwing.manageException(this, e,logger,EstructuraConstantesFunciones.CLASSNAME);

		} finally {
			if(Constantes.ISUSAEJBLOGICLAYER) {
				this.estructuraLogic.closeNewConnexionToDeep();
			}

		}
	}

	public void jButtonid_sucursalEstructuraBusquedaActionPerformed(java.awt.event.ActionEvent evt) throws Exception {
		try {

				if(Constantes.ISUSAEJBLOGICLAYER) {
					this.estructuraLogic.getNewConnexionToDeep("");
				}

				//TOCA TRAER NUEVAMENTE, YA QUE SE PIERDE REGISTRO ACTUAL
				int intSelectedRow = this.jTableDatosEstructura.getSelectedRow();

				if(intSelectedRow>-1) {
					this.setVariablesFormularioToObjetoActualEstructura(this.getestructura(),true);
					this.setVariablesFormularioToObjetoActualForeignKeysEstructura(this.estructura);
					//ARCHITECTURE
					/*
					if(Constantes.ISUSAEJBLOGICLAYER) {
						this.estructura =(Estructura) this.estructuraLogic.getEstructuras().toArray()[this.jTableDatosEstructura.convertRowIndexToModel(intSelectedRow)];
					} else if(Constantes.ISUSAEJBREMOTE || Constantes.ISUSAEJBHOME) {
						this.estructura =(Estructura) this.estructuras.toArray()[this.jTableDatosEstructura.convertRowIndexToModel(intSelectedRow)];
					}
					*/
					//ARCHITECTURE

				} else {
					if(this.estructura==null) {
						this.estructura = new Estructura();
					}

					this.setVariablesFormularioToObjetoActualEstructura(this.estructura,true);
					this.setVariablesFormularioToObjetoActualForeignKeysEstructura(this.estructura);
				}

				if(this.estructura.getid_sucursal()!=null) {

					this.sAccionBusqueda="Query";

					this.sFinalQueryGeneral=" where id_sucursal = "+this.estructura.getid_sucursal().toString()+" ";

					if(Constantes.ISDEVELOPING) {
						System.out.println(this.sFinalQueryGeneral);
					}

					this.procesarBusqueda(this.sAccionBusqueda);

					this.inicializarActualizarBindingEstructura(false);
				}

				if(Constantes.ISUSAEJBLOGICLAYER) {
					this.estructuraLogic.commitNewConnexionToDeep();
				}

			} catch(Exception e) {

				if(Constantes.ISUSAEJBLOGICLAYER) {
					this.estructuraLogic.rollbackNewConnexionToDeep();
				}

				FuncionesSwing.manageException(this, e,logger,EstructuraConstantesFunciones.CLASSNAME);

			} finally {
				if(Constantes.ISUSAEJBLOGICLAYER) {
					this.estructuraLogic.closeNewConnexionToDeep();
				}

			}
		}

	public void jButtonid_estructuraEstructuraUpdateActionPerformed(java.awt.event.ActionEvent evt) throws Exception {
		try {

			if(Constantes.ISUSAEJBLOGICLAYER) {
				this.estructuraLogic.getNewConnexionToDeep("");
			}

			Boolean idTienePermisoestructura=true;

			idTienePermisoestructura=this.tienePermisosUsuarioEnPaginaWebEstructura(EstructuraConstantesFunciones.CLASSNAME);

			if(idTienePermisoestructura) {
				//TOCA TRAER NUEVAMENTE, YA QUE SE PIERDE REGISTRO ACTUAL
				int intSelectedRow = this.jTableDatosEstructura.getSelectedRow();

				if(intSelectedRow<0 && this.jTableDatosEstructura.getRowCount()>0) {
					intSelectedRow =0;
					this.jTableDatosEstructura.setRowSelectionInterval(intSelectedRow,intSelectedRow);
				}
				//ARCHITECTURE
				/*
				if(Constantes.ISUSAEJBLOGICLAYER) {
					this.estructura =(Estructura) this.estructuraLogic.getEstructuras().toArray()[this.jTableDatosEstructura.convertRowIndexToModel(intSelectedRow)];
				} else if(Constantes.ISUSAEJBREMOTE || Constantes.ISUSAEJBHOME) {
					this.estructura =(Estructura) this.estructuras.toArray()[this.jTableDatosEstructura.convertRowIndexToModel(intSelectedRow)];
				}
				*/
				//ARCHITECTURE

				this.setVariablesFormularioToObjetoActualEstructura(this.getestructura(),true);
				this.setVariablesFormularioToObjetoActualForeignKeysEstructura(this.estructura);

				this.estructuraBeanSwingJInternalFrame=new EstructuraBeanSwingJInternalFrame(true,true,this.jDesktopPane,this.usuarioActual,this.resumenUsuarioActual,this.moduloActual,this.opcionActual,this.parametroGeneralSg,this.parametroGeneralUsuario,PaginaTipo.AUXILIAR,false,false,false,true);
				this.estructuraBeanSwingJInternalFrame.setJInternalFrameParent(this);

				this.estructuraBeanSwingJInternalFrame.getEstructuraLogic().setConnexion(this.estructuraLogic.getConnexion());

				if(this.estructura.getid_estructura()!=null) {
					this.estructuraBeanSwingJInternalFrame.sTipoBusqueda="PorId";
					this.estructuraBeanSwingJInternalFrame.setIdActual(this.estructura.getid_estructura());
					this.estructuraBeanSwingJInternalFrame.procesarBusqueda("PorId");
					this.estructuraBeanSwingJInternalFrame.setsAccionBusqueda("PorId");
					this.estructuraBeanSwingJInternalFrame.inicializarActualizarBindingTablaEstructura();
				}

				JInternalFrameBase jinternalFrame =this.estructuraBeanSwingJInternalFrame;
				jinternalFrame.setAutoscrolls(true);
				//frame.setSize(screenSize.width-inset*7 , screenSize.height-inset*9);
				jinternalFrame.setVisible(true); 


				TitledBorder titledBorderEstructura=(TitledBorder)this.jScrollPanelDatosEstructura.getBorder();
				TitledBorder titledBorderestructura=(TitledBorder)this.estructuraBeanSwingJInternalFrame.jScrollPanelDatosEstructura.getBorder();

				titledBorderestructura.setTitle(titledBorderEstructura.getTitle() + " -> Estructura");


				if(!Constantes.CON_VARIAS_VENTANAS) {
					MainJFrame.cerrarJInternalFramesExistentes(this.jDesktopPane,jinternalFrame);
				}

				this.jDesktopPane.add(jinternalFrame);

				jinternalFrame.setSelected(true);
			} else {
				throw new Exception("NO TIENE PERMISO PARA TRABAJAR CON ESTA INFORMACION");
			}

			if(Constantes.ISUSAEJBLOGICLAYER) {
				this.estructuraLogic.commitNewConnexionToDeep();
			}


		} catch(Exception e) {

			if(Constantes.ISUSAEJBLOGICLAYER) {
				this.estructuraLogic.rollbackNewConnexionToDeep();
			}

			FuncionesSwing.manageException(this, e,logger,EstructuraConstantesFunciones.CLASSNAME);

		} finally {
			if(Constantes.ISUSAEJBLOGICLAYER) {
				this.estructuraLogic.closeNewConnexionToDeep();
			}

		}
	}

	public void jButtonid_estructuraEstructuraBusquedaActionPerformed(java.awt.event.ActionEvent evt) throws Exception {
		try {

				if(Constantes.ISUSAEJBLOGICLAYER) {
					this.estructuraLogic.getNewConnexionToDeep("");
				}

				//TOCA TRAER NUEVAMENTE, YA QUE SE PIERDE REGISTRO ACTUAL
				int intSelectedRow = this.jTableDatosEstructura.getSelectedRow();

				if(intSelectedRow>-1) {
					this.setVariablesFormularioToObjetoActualEstructura(this.getestructura(),true);
					this.setVariablesFormularioToObjetoActualForeignKeysEstructura(this.estructura);
					//ARCHITECTURE
					/*
					if(Constantes.ISUSAEJBLOGICLAYER) {
						this.estructura =(Estructura) this.estructuraLogic.getEstructuras().toArray()[this.jTableDatosEstructura.convertRowIndexToModel(intSelectedRow)];
					} else if(Constantes.ISUSAEJBREMOTE || Constantes.ISUSAEJBHOME) {
						this.estructura =(Estructura) this.estructuras.toArray()[this.jTableDatosEstructura.convertRowIndexToModel(intSelectedRow)];
					}
					*/
					//ARCHITECTURE

				} else {
					if(this.estructura==null) {
						this.estructura = new Estructura();
					}

					this.setVariablesFormularioToObjetoActualEstructura(this.estructura,true);
					this.setVariablesFormularioToObjetoActualForeignKeysEstructura(this.estructura);
				}

				if(this.estructura.getid_estructura()!=null) {

					this.sAccionBusqueda="Query";

					this.sFinalQueryGeneral=" where id_estructura = "+this.estructura.getid_estructura().toString()+" ";

					if(Constantes.ISDEVELOPING) {
						System.out.println(this.sFinalQueryGeneral);
					}

					this.procesarBusqueda(this.sAccionBusqueda);

					this.inicializarActualizarBindingEstructura(false);
				}

				if(Constantes.ISUSAEJBLOGICLAYER) {
					this.estructuraLogic.commitNewConnexionToDeep();
				}

			} catch(Exception e) {

				if(Constantes.ISUSAEJBLOGICLAYER) {
					this.estructuraLogic.rollbackNewConnexionToDeep();
				}

				FuncionesSwing.manageException(this, e,logger,EstructuraConstantesFunciones.CLASSNAME);

			} finally {
				if(Constantes.ISUSAEJBLOGICLAYER) {
					this.estructuraLogic.closeNewConnexionToDeep();
				}

			}
		}

	public void jButtonid_tipo_pago__n_mEstructuraUpdateActionPerformed(java.awt.event.ActionEvent evt) throws Exception {
		try {

			if(Constantes.ISUSAEJBLOGICLAYER) {
				this.estructuraLogic.getNewConnexionToDeep("");
			}

			Boolean idTienePermisotipopago_nm=true;

			idTienePermisotipopago_nm=this.tienePermisosUsuarioEnPaginaWebEstructura(TipoPago_NMConstantesFunciones.CLASSNAME);

			if(idTienePermisotipopago_nm) {
				//TOCA TRAER NUEVAMENTE, YA QUE SE PIERDE REGISTRO ACTUAL
				int intSelectedRow = this.jTableDatosEstructura.getSelectedRow();

				if(intSelectedRow<0 && this.jTableDatosEstructura.getRowCount()>0) {
					intSelectedRow =0;
					this.jTableDatosEstructura.setRowSelectionInterval(intSelectedRow,intSelectedRow);
				}
				//ARCHITECTURE
				/*
				if(Constantes.ISUSAEJBLOGICLAYER) {
					this.estructura =(Estructura) this.estructuraLogic.getEstructuras().toArray()[this.jTableDatosEstructura.convertRowIndexToModel(intSelectedRow)];
				} else if(Constantes.ISUSAEJBREMOTE || Constantes.ISUSAEJBHOME) {
					this.estructura =(Estructura) this.estructuras.toArray()[this.jTableDatosEstructura.convertRowIndexToModel(intSelectedRow)];
				}
				*/
				//ARCHITECTURE

				this.setVariablesFormularioToObjetoActualEstructura(this.getestructura(),true);
				this.setVariablesFormularioToObjetoActualForeignKeysEstructura(this.estructura);

				this.tipopago_nmBeanSwingJInternalFrame=new TipoPago_NMBeanSwingJInternalFrame(true,true,this.jDesktopPane,this.usuarioActual,this.resumenUsuarioActual,this.moduloActual,this.opcionActual,this.parametroGeneralSg,this.parametroGeneralUsuario,PaginaTipo.AUXILIAR,false,false,false,true);
				this.tipopago_nmBeanSwingJInternalFrame.setJInternalFrameParent(this);

				this.tipopago_nmBeanSwingJInternalFrame.getTipoPago_NMLogic().setConnexion(this.estructuraLogic.getConnexion());

				if(this.estructura.getid_tipo_pago__n_m()!=null) {
					this.tipopago_nmBeanSwingJInternalFrame.sTipoBusqueda="PorId";
					this.tipopago_nmBeanSwingJInternalFrame.setIdActual(this.estructura.getid_tipo_pago__n_m());
					this.tipopago_nmBeanSwingJInternalFrame.procesarBusqueda("PorId");
					this.tipopago_nmBeanSwingJInternalFrame.setsAccionBusqueda("PorId");
					this.tipopago_nmBeanSwingJInternalFrame.inicializarActualizarBindingTablaTipoPago_NM();
				}

				JInternalFrameBase jinternalFrame =this.tipopago_nmBeanSwingJInternalFrame;
				jinternalFrame.setAutoscrolls(true);
				//frame.setSize(screenSize.width-inset*7 , screenSize.height-inset*9);
				jinternalFrame.setVisible(true); 


				TitledBorder titledBorderEstructura=(TitledBorder)this.jScrollPanelDatosEstructura.getBorder();
				TitledBorder titledBordertipopago_nm=(TitledBorder)this.tipopago_nmBeanSwingJInternalFrame.jScrollPanelDatosTipoPago_NM.getBorder();

				titledBordertipopago_nm.setTitle(titledBorderEstructura.getTitle() + " -> Tipo Pago_ N M");


				if(!Constantes.CON_VARIAS_VENTANAS) {
					MainJFrame.cerrarJInternalFramesExistentes(this.jDesktopPane,jinternalFrame);
				}

				this.jDesktopPane.add(jinternalFrame);

				jinternalFrame.setSelected(true);
			} else {
				throw new Exception("NO TIENE PERMISO PARA TRABAJAR CON ESTA INFORMACION");
			}

			if(Constantes.ISUSAEJBLOGICLAYER) {
				this.estructuraLogic.commitNewConnexionToDeep();
			}


		} catch(Exception e) {

			if(Constantes.ISUSAEJBLOGICLAYER) {
				this.estructuraLogic.rollbackNewConnexionToDeep();
			}

			FuncionesSwing.manageException(this, e,logger,EstructuraConstantesFunciones.CLASSNAME);

		} finally {
			if(Constantes.ISUSAEJBLOGICLAYER) {
				this.estructuraLogic.closeNewConnexionToDeep();
			}

		}
	}

	public void jButtonid_tipo_pago__n_mEstructuraBusquedaActionPerformed(java.awt.event.ActionEvent evt) throws Exception {
		try {

				if(Constantes.ISUSAEJBLOGICLAYER) {
					this.estructuraLogic.getNewConnexionToDeep("");
				}

				//TOCA TRAER NUEVAMENTE, YA QUE SE PIERDE REGISTRO ACTUAL
				int intSelectedRow = this.jTableDatosEstructura.getSelectedRow();

				if(intSelectedRow>-1) {
					this.setVariablesFormularioToObjetoActualEstructura(this.getestructura(),true);
					this.setVariablesFormularioToObjetoActualForeignKeysEstructura(this.estructura);
					//ARCHITECTURE
					/*
					if(Constantes.ISUSAEJBLOGICLAYER) {
						this.estructura =(Estructura) this.estructuraLogic.getEstructuras().toArray()[this.jTableDatosEstructura.convertRowIndexToModel(intSelectedRow)];
					} else if(Constantes.ISUSAEJBREMOTE || Constantes.ISUSAEJBHOME) {
						this.estructura =(Estructura) this.estructuras.toArray()[this.jTableDatosEstructura.convertRowIndexToModel(intSelectedRow)];
					}
					*/
					//ARCHITECTURE

				} else {
					if(this.estructura==null) {
						this.estructura = new Estructura();
					}

					this.setVariablesFormularioToObjetoActualEstructura(this.estructura,true);
					this.setVariablesFormularioToObjetoActualForeignKeysEstructura(this.estructura);
				}

				if(this.estructura.getid_tipo_pago__n_m()!=null) {

					this.sAccionBusqueda="Query";

					this.sFinalQueryGeneral=" where id_tipo_pago__n_m = "+this.estructura.getid_tipo_pago__n_m().toString()+" ";

					if(Constantes.ISDEVELOPING) {
						System.out.println(this.sFinalQueryGeneral);
					}

					this.procesarBusqueda(this.sAccionBusqueda);

					this.inicializarActualizarBindingEstructura(false);
				}

				if(Constantes.ISUSAEJBLOGICLAYER) {
					this.estructuraLogic.commitNewConnexionToDeep();
				}

			} catch(Exception e) {

				if(Constantes.ISUSAEJBLOGICLAYER) {
					this.estructuraLogic.rollbackNewConnexionToDeep();
				}

				FuncionesSwing.manageException(this, e,logger,EstructuraConstantesFunciones.CLASSNAME);

			} finally {
				if(Constantes.ISUSAEJBLOGICLAYER) {
					this.estructuraLogic.closeNewConnexionToDeep();
				}

			}
		}

	public void jButtonid_numero_patronalEstructuraUpdateActionPerformed(java.awt.event.ActionEvent evt) throws Exception {
		try {

			if(Constantes.ISUSAEJBLOGICLAYER) {
				this.estructuraLogic.getNewConnexionToDeep("");
			}

			Boolean idTienePermisonumeropatronal=true;

			idTienePermisonumeropatronal=this.tienePermisosUsuarioEnPaginaWebEstructura(NumeroPatronalConstantesFunciones.CLASSNAME);

			if(idTienePermisonumeropatronal) {
				//TOCA TRAER NUEVAMENTE, YA QUE SE PIERDE REGISTRO ACTUAL
				int intSelectedRow = this.jTableDatosEstructura.getSelectedRow();

				if(intSelectedRow<0 && this.jTableDatosEstructura.getRowCount()>0) {
					intSelectedRow =0;
					this.jTableDatosEstructura.setRowSelectionInterval(intSelectedRow,intSelectedRow);
				}
				//ARCHITECTURE
				/*
				if(Constantes.ISUSAEJBLOGICLAYER) {
					this.estructura =(Estructura) this.estructuraLogic.getEstructuras().toArray()[this.jTableDatosEstructura.convertRowIndexToModel(intSelectedRow)];
				} else if(Constantes.ISUSAEJBREMOTE || Constantes.ISUSAEJBHOME) {
					this.estructura =(Estructura) this.estructuras.toArray()[this.jTableDatosEstructura.convertRowIndexToModel(intSelectedRow)];
				}
				*/
				//ARCHITECTURE

				this.setVariablesFormularioToObjetoActualEstructura(this.getestructura(),true);
				this.setVariablesFormularioToObjetoActualForeignKeysEstructura(this.estructura);

				this.numeropatronalBeanSwingJInternalFrame=new NumeroPatronalBeanSwingJInternalFrame(true,true,this.jDesktopPane,this.usuarioActual,this.resumenUsuarioActual,this.moduloActual,this.opcionActual,this.parametroGeneralSg,this.parametroGeneralUsuario,PaginaTipo.AUXILIAR,false,false,false,true);
				this.numeropatronalBeanSwingJInternalFrame.setJInternalFrameParent(this);

				this.numeropatronalBeanSwingJInternalFrame.getNumeroPatronalLogic().setConnexion(this.estructuraLogic.getConnexion());

				if(this.estructura.getid_numero_patronal()!=null) {
					this.numeropatronalBeanSwingJInternalFrame.sTipoBusqueda="PorId";
					this.numeropatronalBeanSwingJInternalFrame.setIdActual(this.estructura.getid_numero_patronal());
					this.numeropatronalBeanSwingJInternalFrame.procesarBusqueda("PorId");
					this.numeropatronalBeanSwingJInternalFrame.setsAccionBusqueda("PorId");
					this.numeropatronalBeanSwingJInternalFrame.inicializarActualizarBindingTablaNumeroPatronal();
				}

				JInternalFrameBase jinternalFrame =this.numeropatronalBeanSwingJInternalFrame;
				jinternalFrame.setAutoscrolls(true);
				//frame.setSize(screenSize.width-inset*7 , screenSize.height-inset*9);
				jinternalFrame.setVisible(true); 


				TitledBorder titledBorderEstructura=(TitledBorder)this.jScrollPanelDatosEstructura.getBorder();
				TitledBorder titledBordernumeropatronal=(TitledBorder)this.numeropatronalBeanSwingJInternalFrame.jScrollPanelDatosNumeroPatronal.getBorder();

				titledBordernumeropatronal.setTitle(titledBorderEstructura.getTitle() + " -> Numero Patronal");


				if(!Constantes.CON_VARIAS_VENTANAS) {
					MainJFrame.cerrarJInternalFramesExistentes(this.jDesktopPane,jinternalFrame);
				}

				this.jDesktopPane.add(jinternalFrame);

				jinternalFrame.setSelected(true);
			} else {
				throw new Exception("NO TIENE PERMISO PARA TRABAJAR CON ESTA INFORMACION");
			}

			if(Constantes.ISUSAEJBLOGICLAYER) {
				this.estructuraLogic.commitNewConnexionToDeep();
			}


		} catch(Exception e) {

			if(Constantes.ISUSAEJBLOGICLAYER) {
				this.estructuraLogic.rollbackNewConnexionToDeep();
			}

			FuncionesSwing.manageException(this, e,logger,EstructuraConstantesFunciones.CLASSNAME);

		} finally {
			if(Constantes.ISUSAEJBLOGICLAYER) {
				this.estructuraLogic.closeNewConnexionToDeep();
			}

		}
	}

	public void jButtonid_numero_patronalEstructuraBusquedaActionPerformed(java.awt.event.ActionEvent evt) throws Exception {
		try {

				if(Constantes.ISUSAEJBLOGICLAYER) {
					this.estructuraLogic.getNewConnexionToDeep("");
				}

				//TOCA TRAER NUEVAMENTE, YA QUE SE PIERDE REGISTRO ACTUAL
				int intSelectedRow = this.jTableDatosEstructura.getSelectedRow();

				if(intSelectedRow>-1) {
					this.setVariablesFormularioToObjetoActualEstructura(this.getestructura(),true);
					this.setVariablesFormularioToObjetoActualForeignKeysEstructura(this.estructura);
					//ARCHITECTURE
					/*
					if(Constantes.ISUSAEJBLOGICLAYER) {
						this.estructura =(Estructura) this.estructuraLogic.getEstructuras().toArray()[this.jTableDatosEstructura.convertRowIndexToModel(intSelectedRow)];
					} else if(Constantes.ISUSAEJBREMOTE || Constantes.ISUSAEJBHOME) {
						this.estructura =(Estructura) this.estructuras.toArray()[this.jTableDatosEstructura.convertRowIndexToModel(intSelectedRow)];
					}
					*/
					//ARCHITECTURE

				} else {
					if(this.estructura==null) {
						this.estructura = new Estructura();
					}

					this.setVariablesFormularioToObjetoActualEstructura(this.estructura,true);
					this.setVariablesFormularioToObjetoActualForeignKeysEstructura(this.estructura);
				}

				if(this.estructura.getid_numero_patronal()!=null) {

					this.sAccionBusqueda="Query";

					this.sFinalQueryGeneral=" where id_numero_patronal = "+this.estructura.getid_numero_patronal().toString()+" ";

					if(Constantes.ISDEVELOPING) {
						System.out.println(this.sFinalQueryGeneral);
					}

					this.procesarBusqueda(this.sAccionBusqueda);

					this.inicializarActualizarBindingEstructura(false);
				}

				if(Constantes.ISUSAEJBLOGICLAYER) {
					this.estructuraLogic.commitNewConnexionToDeep();
				}

			} catch(Exception e) {

				if(Constantes.ISUSAEJBLOGICLAYER) {
					this.estructuraLogic.rollbackNewConnexionToDeep();
				}

				FuncionesSwing.manageException(this, e,logger,EstructuraConstantesFunciones.CLASSNAME);

			} finally {
				if(Constantes.ISUSAEJBLOGICLAYER) {
					this.estructuraLogic.closeNewConnexionToDeep();
				}

			}
		}

	public void jButtonid_cuenta_contableEstructuraActionPerformed(java.awt.event.ActionEvent evt) throws Exception {
		try {
			this.cuentacontableBeanSwingJInternalFrame=new CuentaContableBeanSwingJInternalFrame(true,true,this.jDesktopPane,this.usuarioActual,this.resumenUsuarioActual,this.moduloActual,this.opcionActual,this.parametroGeneralSg,this.parametroGeneralUsuario,PaginaTipo.BUSQUEDA,false,false,false,true);
			this.cuentacontableBeanSwingJInternalFrame.setJInternalFrameParent(this);
			this.cuentacontableBeanSwingJInternalFrame.sTipoBusqueda="CuentaContable";

			if(!this.sFinalQueryGeneral_cuentacontable.equals("")) {
				this.cuentacontableBeanSwingJInternalFrame.setsFinalQueryGeneral(this.sFinalQueryGeneral_cuentacontable);
				this.cuentacontableBeanSwingJInternalFrame.sAccionBusqueda="Query";


				this.cuentacontableBeanSwingJInternalFrame.procesarBusqueda(this.cuentacontableBeanSwingJInternalFrame.sAccionBusqueda);
				this.cuentacontableBeanSwingJInternalFrame.inicializarActualizarBindingCuentaContable(false);
			}

			if(!this.sFinalQueryComboCuentaContable.equals("") && false) {
			}


			JInternalFrameBase jinternalFrame =this.cuentacontableBeanSwingJInternalFrame;
			jinternalFrame.setAutoscrolls(true);
			//frame.setSize(screenSize.width-inset*7 , screenSize.height-inset*9);
			jinternalFrame.setVisible(true); 


			TitledBorder titledBorderEstructura=null;
			TitledBorder titledBordercuentacontable=null;

			if(!this.jScrollPanelDatosEstructura.getBorder().getClass().equals(EmptyBorder.class)) {
				titledBorderEstructura=(TitledBorder)this.jScrollPanelDatosEstructura.getBorder();
				titledBordercuentacontable=(TitledBorder)this.cuentacontableBeanSwingJInternalFrame.jScrollPanelDatosCuentaContable.getBorder();

				titledBordercuentacontable.setTitle(titledBorderEstructura.getTitle() + " -> Cuenta Contable");
			}

			if(!Constantes.CON_VARIAS_VENTANAS) {
				MainJFrame.cerrarJInternalFramesExistentes(this.jDesktopPane,jinternalFrame);
			}

			this.jDesktopPane.add(jinternalFrame);

			jinternalFrame.setSelected(true);

		} catch(Exception e) {
			FuncionesSwing.manageException(this, e,logger,EstructuraConstantesFunciones.CLASSNAME);
		}
	}

	public void jButtonid_cuenta_contableEstructuraUpdateActionPerformed(java.awt.event.ActionEvent evt) throws Exception {
		try {

			if(Constantes.ISUSAEJBLOGICLAYER) {
				this.estructuraLogic.getNewConnexionToDeep("");
			}

			Boolean idTienePermisocuentacontable=true;

			idTienePermisocuentacontable=this.tienePermisosUsuarioEnPaginaWebEstructura(CuentaContableConstantesFunciones.CLASSNAME);

			if(idTienePermisocuentacontable) {
				//TOCA TRAER NUEVAMENTE, YA QUE SE PIERDE REGISTRO ACTUAL
				int intSelectedRow = this.jTableDatosEstructura.getSelectedRow();

				if(intSelectedRow<0 && this.jTableDatosEstructura.getRowCount()>0) {
					intSelectedRow =0;
					this.jTableDatosEstructura.setRowSelectionInterval(intSelectedRow,intSelectedRow);
				}
				//ARCHITECTURE
				/*
				if(Constantes.ISUSAEJBLOGICLAYER) {
					this.estructura =(Estructura) this.estructuraLogic.getEstructuras().toArray()[this.jTableDatosEstructura.convertRowIndexToModel(intSelectedRow)];
				} else if(Constantes.ISUSAEJBREMOTE || Constantes.ISUSAEJBHOME) {
					this.estructura =(Estructura) this.estructuras.toArray()[this.jTableDatosEstructura.convertRowIndexToModel(intSelectedRow)];
				}
				*/
				//ARCHITECTURE

				this.setVariablesFormularioToObjetoActualEstructura(this.getestructura(),true);
				this.setVariablesFormularioToObjetoActualForeignKeysEstructura(this.estructura);

				this.cuentacontableBeanSwingJInternalFrame=new CuentaContableBeanSwingJInternalFrame(true,true,this.jDesktopPane,this.usuarioActual,this.resumenUsuarioActual,this.moduloActual,this.opcionActual,this.parametroGeneralSg,this.parametroGeneralUsuario,PaginaTipo.AUXILIAR,false,false,false,true);
				this.cuentacontableBeanSwingJInternalFrame.setJInternalFrameParent(this);

				this.cuentacontableBeanSwingJInternalFrame.getCuentaContableLogic().setConnexion(this.estructuraLogic.getConnexion());

				if(this.estructura.getid_cuenta_contable()!=null) {
					this.cuentacontableBeanSwingJInternalFrame.sTipoBusqueda="PorId";
					this.cuentacontableBeanSwingJInternalFrame.setIdActual(this.estructura.getid_cuenta_contable());
					this.cuentacontableBeanSwingJInternalFrame.procesarBusqueda("PorId");
					this.cuentacontableBeanSwingJInternalFrame.setsAccionBusqueda("PorId");
					this.cuentacontableBeanSwingJInternalFrame.inicializarActualizarBindingTablaCuentaContable();
				}

				JInternalFrameBase jinternalFrame =this.cuentacontableBeanSwingJInternalFrame;
				jinternalFrame.setAutoscrolls(true);
				//frame.setSize(screenSize.width-inset*7 , screenSize.height-inset*9);
				jinternalFrame.setVisible(true); 


				TitledBorder titledBorderEstructura=(TitledBorder)this.jScrollPanelDatosEstructura.getBorder();
				TitledBorder titledBordercuentacontable=(TitledBorder)this.cuentacontableBeanSwingJInternalFrame.jScrollPanelDatosCuentaContable.getBorder();

				titledBordercuentacontable.setTitle(titledBorderEstructura.getTitle() + " -> Cuenta Contable");


				if(!Constantes.CON_VARIAS_VENTANAS) {
					MainJFrame.cerrarJInternalFramesExistentes(this.jDesktopPane,jinternalFrame);
				}

				this.jDesktopPane.add(jinternalFrame);

				jinternalFrame.setSelected(true);
			} else {
				throw new Exception("NO TIENE PERMISO PARA TRABAJAR CON ESTA INFORMACION");
			}

			if(Constantes.ISUSAEJBLOGICLAYER) {
				this.estructuraLogic.commitNewConnexionToDeep();
			}


		} catch(Exception e) {

			if(Constantes.ISUSAEJBLOGICLAYER) {
				this.estructuraLogic.rollbackNewConnexionToDeep();
			}

			FuncionesSwing.manageException(this, e,logger,EstructuraConstantesFunciones.CLASSNAME);

		} finally {
			if(Constantes.ISUSAEJBLOGICLAYER) {
				this.estructuraLogic.closeNewConnexionToDeep();
			}

		}
	}

	public void jButtonid_cuenta_contableEstructuraBusquedaActionPerformed(java.awt.event.ActionEvent evt) throws Exception {
		try {

				if(Constantes.ISUSAEJBLOGICLAYER) {
					this.estructuraLogic.getNewConnexionToDeep("");
				}

				//TOCA TRAER NUEVAMENTE, YA QUE SE PIERDE REGISTRO ACTUAL
				int intSelectedRow = this.jTableDatosEstructura.getSelectedRow();

				if(intSelectedRow>-1) {
					this.setVariablesFormularioToObjetoActualEstructura(this.getestructura(),true);
					this.setVariablesFormularioToObjetoActualForeignKeysEstructura(this.estructura);
					//ARCHITECTURE
					/*
					if(Constantes.ISUSAEJBLOGICLAYER) {
						this.estructura =(Estructura) this.estructuraLogic.getEstructuras().toArray()[this.jTableDatosEstructura.convertRowIndexToModel(intSelectedRow)];
					} else if(Constantes.ISUSAEJBREMOTE || Constantes.ISUSAEJBHOME) {
						this.estructura =(Estructura) this.estructuras.toArray()[this.jTableDatosEstructura.convertRowIndexToModel(intSelectedRow)];
					}
					*/
					//ARCHITECTURE

				} else {
					if(this.estructura==null) {
						this.estructura = new Estructura();
					}

					this.setVariablesFormularioToObjetoActualEstructura(this.estructura,true);
					this.setVariablesFormularioToObjetoActualForeignKeysEstructura(this.estructura);
				}

				if(this.estructura.getid_cuenta_contable()!=null) {

					this.sAccionBusqueda="Query";

					this.sFinalQueryGeneral=" where id_cuenta_contable = "+this.estructura.getid_cuenta_contable().toString()+" ";

					if(Constantes.ISDEVELOPING) {
						System.out.println(this.sFinalQueryGeneral);
					}

					this.procesarBusqueda(this.sAccionBusqueda);

					this.inicializarActualizarBindingEstructura(false);
				}

				if(Constantes.ISUSAEJBLOGICLAYER) {
					this.estructuraLogic.commitNewConnexionToDeep();
				}

			} catch(Exception e) {

				if(Constantes.ISUSAEJBLOGICLAYER) {
					this.estructuraLogic.rollbackNewConnexionToDeep();
				}

				FuncionesSwing.manageException(this, e,logger,EstructuraConstantesFunciones.CLASSNAME);

			} finally {
				if(Constantes.ISUSAEJBLOGICLAYER) {
					this.estructuraLogic.closeNewConnexionToDeep();
				}

			}
		}

	public void jButtonid_tipo_estructuraEstructuraUpdateActionPerformed(java.awt.event.ActionEvent evt) throws Exception {
		try {

			if(Constantes.ISUSAEJBLOGICLAYER) {
				this.estructuraLogic.getNewConnexionToDeep("");
			}

			Boolean idTienePermisotipoestructura=true;

			idTienePermisotipoestructura=this.tienePermisosUsuarioEnPaginaWebEstructura(TipoEstructuraConstantesFunciones.CLASSNAME);

			if(idTienePermisotipoestructura) {
				//TOCA TRAER NUEVAMENTE, YA QUE SE PIERDE REGISTRO ACTUAL
				int intSelectedRow = this.jTableDatosEstructura.getSelectedRow();

				if(intSelectedRow<0 && this.jTableDatosEstructura.getRowCount()>0) {
					intSelectedRow =0;
					this.jTableDatosEstructura.setRowSelectionInterval(intSelectedRow,intSelectedRow);
				}
				//ARCHITECTURE
				/*
				if(Constantes.ISUSAEJBLOGICLAYER) {
					this.estructura =(Estructura) this.estructuraLogic.getEstructuras().toArray()[this.jTableDatosEstructura.convertRowIndexToModel(intSelectedRow)];
				} else if(Constantes.ISUSAEJBREMOTE || Constantes.ISUSAEJBHOME) {
					this.estructura =(Estructura) this.estructuras.toArray()[this.jTableDatosEstructura.convertRowIndexToModel(intSelectedRow)];
				}
				*/
				//ARCHITECTURE

				this.setVariablesFormularioToObjetoActualEstructura(this.getestructura(),true);
				this.setVariablesFormularioToObjetoActualForeignKeysEstructura(this.estructura);

				this.tipoestructuraBeanSwingJInternalFrame=new TipoEstructuraBeanSwingJInternalFrame(true,true,this.jDesktopPane,this.usuarioActual,this.resumenUsuarioActual,this.moduloActual,this.opcionActual,this.parametroGeneralSg,this.parametroGeneralUsuario,PaginaTipo.AUXILIAR,false,false,false,true);
				this.tipoestructuraBeanSwingJInternalFrame.setJInternalFrameParent(this);

				this.tipoestructuraBeanSwingJInternalFrame.getTipoEstructuraLogic().setConnexion(this.estructuraLogic.getConnexion());

				if(this.estructura.getid_tipo_estructura()!=null) {
					this.tipoestructuraBeanSwingJInternalFrame.sTipoBusqueda="PorId";
					this.tipoestructuraBeanSwingJInternalFrame.setIdActual(this.estructura.getid_tipo_estructura());
					this.tipoestructuraBeanSwingJInternalFrame.procesarBusqueda("PorId");
					this.tipoestructuraBeanSwingJInternalFrame.setsAccionBusqueda("PorId");
					this.tipoestructuraBeanSwingJInternalFrame.inicializarActualizarBindingTablaTipoEstructura();
				}

				JInternalFrameBase jinternalFrame =this.tipoestructuraBeanSwingJInternalFrame;
				jinternalFrame.setAutoscrolls(true);
				//frame.setSize(screenSize.width-inset*7 , screenSize.height-inset*9);
				jinternalFrame.setVisible(true); 


				TitledBorder titledBorderEstructura=(TitledBorder)this.jScrollPanelDatosEstructura.getBorder();
				TitledBorder titledBordertipoestructura=(TitledBorder)this.tipoestructuraBeanSwingJInternalFrame.jScrollPanelDatosTipoEstructura.getBorder();

				titledBordertipoestructura.setTitle(titledBorderEstructura.getTitle() + " -> Tipo Estructura");


				if(!Constantes.CON_VARIAS_VENTANAS) {
					MainJFrame.cerrarJInternalFramesExistentes(this.jDesktopPane,jinternalFrame);
				}

				this.jDesktopPane.add(jinternalFrame);

				jinternalFrame.setSelected(true);
			} else {
				throw new Exception("NO TIENE PERMISO PARA TRABAJAR CON ESTA INFORMACION");
			}

			if(Constantes.ISUSAEJBLOGICLAYER) {
				this.estructuraLogic.commitNewConnexionToDeep();
			}


		} catch(Exception e) {

			if(Constantes.ISUSAEJBLOGICLAYER) {
				this.estructuraLogic.rollbackNewConnexionToDeep();
			}

			FuncionesSwing.manageException(this, e,logger,EstructuraConstantesFunciones.CLASSNAME);

		} finally {
			if(Constantes.ISUSAEJBLOGICLAYER) {
				this.estructuraLogic.closeNewConnexionToDeep();
			}

		}
	}

	public void jButtonid_tipo_estructuraEstructuraBusquedaActionPerformed(java.awt.event.ActionEvent evt) throws Exception {
		try {

				if(Constantes.ISUSAEJBLOGICLAYER) {
					this.estructuraLogic.getNewConnexionToDeep("");
				}

				//TOCA TRAER NUEVAMENTE, YA QUE SE PIERDE REGISTRO ACTUAL
				int intSelectedRow = this.jTableDatosEstructura.getSelectedRow();

				if(intSelectedRow>-1) {
					this.setVariablesFormularioToObjetoActualEstructura(this.getestructura(),true);
					this.setVariablesFormularioToObjetoActualForeignKeysEstructura(this.estructura);
					//ARCHITECTURE
					/*
					if(Constantes.ISUSAEJBLOGICLAYER) {
						this.estructura =(Estructura) this.estructuraLogic.getEstructuras().toArray()[this.jTableDatosEstructura.convertRowIndexToModel(intSelectedRow)];
					} else if(Constantes.ISUSAEJBREMOTE || Constantes.ISUSAEJBHOME) {
						this.estructura =(Estructura) this.estructuras.toArray()[this.jTableDatosEstructura.convertRowIndexToModel(intSelectedRow)];
					}
					*/
					//ARCHITECTURE

				} else {
					if(this.estructura==null) {
						this.estructura = new Estructura();
					}

					this.setVariablesFormularioToObjetoActualEstructura(this.estructura,true);
					this.setVariablesFormularioToObjetoActualForeignKeysEstructura(this.estructura);
				}

				if(this.estructura.getid_tipo_estructura()!=null) {

					this.sAccionBusqueda="Query";

					this.sFinalQueryGeneral=" where id_tipo_estructura = "+this.estructura.getid_tipo_estructura().toString()+" ";

					if(Constantes.ISDEVELOPING) {
						System.out.println(this.sFinalQueryGeneral);
					}

					this.procesarBusqueda(this.sAccionBusqueda);

					this.inicializarActualizarBindingEstructura(false);
				}

				if(Constantes.ISUSAEJBLOGICLAYER) {
					this.estructuraLogic.commitNewConnexionToDeep();
				}

			} catch(Exception e) {

				if(Constantes.ISUSAEJBLOGICLAYER) {
					this.estructuraLogic.rollbackNewConnexionToDeep();
				}

				FuncionesSwing.manageException(this, e,logger,EstructuraConstantesFunciones.CLASSNAME);

			} finally {
				if(Constantes.ISUSAEJBLOGICLAYER) {
					this.estructuraLogic.closeNewConnexionToDeep();
				}

			}
		}

	public void jButtonid_paisEstructuraUpdateActionPerformed(java.awt.event.ActionEvent evt) throws Exception {
		try {

			if(Constantes.ISUSAEJBLOGICLAYER) {
				this.estructuraLogic.getNewConnexionToDeep("");
			}

			Boolean idTienePermisopais=true;

			idTienePermisopais=this.tienePermisosUsuarioEnPaginaWebEstructura(PaisConstantesFunciones.CLASSNAME);

			if(idTienePermisopais) {
				//TOCA TRAER NUEVAMENTE, YA QUE SE PIERDE REGISTRO ACTUAL
				int intSelectedRow = this.jTableDatosEstructura.getSelectedRow();

				if(intSelectedRow<0 && this.jTableDatosEstructura.getRowCount()>0) {
					intSelectedRow =0;
					this.jTableDatosEstructura.setRowSelectionInterval(intSelectedRow,intSelectedRow);
				}
				//ARCHITECTURE
				/*
				if(Constantes.ISUSAEJBLOGICLAYER) {
					this.estructura =(Estructura) this.estructuraLogic.getEstructuras().toArray()[this.jTableDatosEstructura.convertRowIndexToModel(intSelectedRow)];
				} else if(Constantes.ISUSAEJBREMOTE || Constantes.ISUSAEJBHOME) {
					this.estructura =(Estructura) this.estructuras.toArray()[this.jTableDatosEstructura.convertRowIndexToModel(intSelectedRow)];
				}
				*/
				//ARCHITECTURE

				this.setVariablesFormularioToObjetoActualEstructura(this.getestructura(),true);
				this.setVariablesFormularioToObjetoActualForeignKeysEstructura(this.estructura);

				this.paisBeanSwingJInternalFrame=new PaisBeanSwingJInternalFrame(true,true,this.jDesktopPane,this.usuarioActual,this.resumenUsuarioActual,this.moduloActual,this.opcionActual,this.parametroGeneralSg,this.parametroGeneralUsuario,PaginaTipo.AUXILIAR,false,false,false,true);
				this.paisBeanSwingJInternalFrame.setJInternalFrameParent(this);

				this.paisBeanSwingJInternalFrame.getPaisLogic().setConnexion(this.estructuraLogic.getConnexion());

				if(this.estructura.getid_pais()!=null) {
					this.paisBeanSwingJInternalFrame.sTipoBusqueda="PorId";
					this.paisBeanSwingJInternalFrame.setIdActual(this.estructura.getid_pais());
					this.paisBeanSwingJInternalFrame.procesarBusqueda("PorId");
					this.paisBeanSwingJInternalFrame.setsAccionBusqueda("PorId");
					this.paisBeanSwingJInternalFrame.inicializarActualizarBindingTablaPais();
				}

				JInternalFrameBase jinternalFrame =this.paisBeanSwingJInternalFrame;
				jinternalFrame.setAutoscrolls(true);
				//frame.setSize(screenSize.width-inset*7 , screenSize.height-inset*9);
				jinternalFrame.setVisible(true); 


				TitledBorder titledBorderEstructura=(TitledBorder)this.jScrollPanelDatosEstructura.getBorder();
				TitledBorder titledBorderpais=(TitledBorder)this.paisBeanSwingJInternalFrame.jScrollPanelDatosPais.getBorder();

				titledBorderpais.setTitle(titledBorderEstructura.getTitle() + " -> Pais");


				if(!Constantes.CON_VARIAS_VENTANAS) {
					MainJFrame.cerrarJInternalFramesExistentes(this.jDesktopPane,jinternalFrame);
				}

				this.jDesktopPane.add(jinternalFrame);

				jinternalFrame.setSelected(true);
			} else {
				throw new Exception("NO TIENE PERMISO PARA TRABAJAR CON ESTA INFORMACION");
			}

			if(Constantes.ISUSAEJBLOGICLAYER) {
				this.estructuraLogic.commitNewConnexionToDeep();
			}


		} catch(Exception e) {

			if(Constantes.ISUSAEJBLOGICLAYER) {
				this.estructuraLogic.rollbackNewConnexionToDeep();
			}

			FuncionesSwing.manageException(this, e,logger,EstructuraConstantesFunciones.CLASSNAME);

		} finally {
			if(Constantes.ISUSAEJBLOGICLAYER) {
				this.estructuraLogic.closeNewConnexionToDeep();
			}

		}
	}

	public void jButtonid_paisEstructuraBusquedaActionPerformed(java.awt.event.ActionEvent evt) throws Exception {
		try {

				if(Constantes.ISUSAEJBLOGICLAYER) {
					this.estructuraLogic.getNewConnexionToDeep("");
				}

				//TOCA TRAER NUEVAMENTE, YA QUE SE PIERDE REGISTRO ACTUAL
				int intSelectedRow = this.jTableDatosEstructura.getSelectedRow();

				if(intSelectedRow>-1) {
					this.setVariablesFormularioToObjetoActualEstructura(this.getestructura(),true);
					this.setVariablesFormularioToObjetoActualForeignKeysEstructura(this.estructura);
					//ARCHITECTURE
					/*
					if(Constantes.ISUSAEJBLOGICLAYER) {
						this.estructura =(Estructura) this.estructuraLogic.getEstructuras().toArray()[this.jTableDatosEstructura.convertRowIndexToModel(intSelectedRow)];
					} else if(Constantes.ISUSAEJBREMOTE || Constantes.ISUSAEJBHOME) {
						this.estructura =(Estructura) this.estructuras.toArray()[this.jTableDatosEstructura.convertRowIndexToModel(intSelectedRow)];
					}
					*/
					//ARCHITECTURE

				} else {
					if(this.estructura==null) {
						this.estructura = new Estructura();
					}

					this.setVariablesFormularioToObjetoActualEstructura(this.estructura,true);
					this.setVariablesFormularioToObjetoActualForeignKeysEstructura(this.estructura);
				}

				if(this.estructura.getid_pais()!=null) {

					this.sAccionBusqueda="Query";

					this.sFinalQueryGeneral=" where id_pais = "+this.estructura.getid_pais().toString()+" ";

					if(Constantes.ISDEVELOPING) {
						System.out.println(this.sFinalQueryGeneral);
					}

					this.procesarBusqueda(this.sAccionBusqueda);

					this.inicializarActualizarBindingEstructura(false);
				}

				if(Constantes.ISUSAEJBLOGICLAYER) {
					this.estructuraLogic.commitNewConnexionToDeep();
				}

			} catch(Exception e) {

				if(Constantes.ISUSAEJBLOGICLAYER) {
					this.estructuraLogic.rollbackNewConnexionToDeep();
				}

				FuncionesSwing.manageException(this, e,logger,EstructuraConstantesFunciones.CLASSNAME);

			} finally {
				if(Constantes.ISUSAEJBLOGICLAYER) {
					this.estructuraLogic.closeNewConnexionToDeep();
				}

			}
		}

	public void jButtonid_ciudadEstructuraUpdateActionPerformed(java.awt.event.ActionEvent evt) throws Exception {
		try {

			if(Constantes.ISUSAEJBLOGICLAYER) {
				this.estructuraLogic.getNewConnexionToDeep("");
			}

			Boolean idTienePermisociudad=true;

			idTienePermisociudad=this.tienePermisosUsuarioEnPaginaWebEstructura(CiudadConstantesFunciones.CLASSNAME);

			if(idTienePermisociudad) {
				//TOCA TRAER NUEVAMENTE, YA QUE SE PIERDE REGISTRO ACTUAL
				int intSelectedRow = this.jTableDatosEstructura.getSelectedRow();

				if(intSelectedRow<0 && this.jTableDatosEstructura.getRowCount()>0) {
					intSelectedRow =0;
					this.jTableDatosEstructura.setRowSelectionInterval(intSelectedRow,intSelectedRow);
				}
				//ARCHITECTURE
				/*
				if(Constantes.ISUSAEJBLOGICLAYER) {
					this.estructura =(Estructura) this.estructuraLogic.getEstructuras().toArray()[this.jTableDatosEstructura.convertRowIndexToModel(intSelectedRow)];
				} else if(Constantes.ISUSAEJBREMOTE || Constantes.ISUSAEJBHOME) {
					this.estructura =(Estructura) this.estructuras.toArray()[this.jTableDatosEstructura.convertRowIndexToModel(intSelectedRow)];
				}
				*/
				//ARCHITECTURE

				this.setVariablesFormularioToObjetoActualEstructura(this.getestructura(),true);
				this.setVariablesFormularioToObjetoActualForeignKeysEstructura(this.estructura);

				this.ciudadBeanSwingJInternalFrame=new CiudadBeanSwingJInternalFrame(true,true,this.jDesktopPane,this.usuarioActual,this.resumenUsuarioActual,this.moduloActual,this.opcionActual,this.parametroGeneralSg,this.parametroGeneralUsuario,PaginaTipo.AUXILIAR,false,false,false,true);
				this.ciudadBeanSwingJInternalFrame.setJInternalFrameParent(this);

				this.ciudadBeanSwingJInternalFrame.getCiudadLogic().setConnexion(this.estructuraLogic.getConnexion());

				if(this.estructura.getid_ciudad()!=null) {
					this.ciudadBeanSwingJInternalFrame.sTipoBusqueda="PorId";
					this.ciudadBeanSwingJInternalFrame.setIdActual(this.estructura.getid_ciudad());
					this.ciudadBeanSwingJInternalFrame.procesarBusqueda("PorId");
					this.ciudadBeanSwingJInternalFrame.setsAccionBusqueda("PorId");
					this.ciudadBeanSwingJInternalFrame.inicializarActualizarBindingTablaCiudad();
				}

				JInternalFrameBase jinternalFrame =this.ciudadBeanSwingJInternalFrame;
				jinternalFrame.setAutoscrolls(true);
				//frame.setSize(screenSize.width-inset*7 , screenSize.height-inset*9);
				jinternalFrame.setVisible(true); 


				TitledBorder titledBorderEstructura=(TitledBorder)this.jScrollPanelDatosEstructura.getBorder();
				TitledBorder titledBorderciudad=(TitledBorder)this.ciudadBeanSwingJInternalFrame.jScrollPanelDatosCiudad.getBorder();

				titledBorderciudad.setTitle(titledBorderEstructura.getTitle() + " -> Ciudad");


				if(!Constantes.CON_VARIAS_VENTANAS) {
					MainJFrame.cerrarJInternalFramesExistentes(this.jDesktopPane,jinternalFrame);
				}

				this.jDesktopPane.add(jinternalFrame);

				jinternalFrame.setSelected(true);
			} else {
				throw new Exception("NO TIENE PERMISO PARA TRABAJAR CON ESTA INFORMACION");
			}

			if(Constantes.ISUSAEJBLOGICLAYER) {
				this.estructuraLogic.commitNewConnexionToDeep();
			}


		} catch(Exception e) {

			if(Constantes.ISUSAEJBLOGICLAYER) {
				this.estructuraLogic.rollbackNewConnexionToDeep();
			}

			FuncionesSwing.manageException(this, e,logger,EstructuraConstantesFunciones.CLASSNAME);

		} finally {
			if(Constantes.ISUSAEJBLOGICLAYER) {
				this.estructuraLogic.closeNewConnexionToDeep();
			}

		}
	}

	public void jButtonid_ciudadEstructuraBusquedaActionPerformed(java.awt.event.ActionEvent evt) throws Exception {
		try {

				if(Constantes.ISUSAEJBLOGICLAYER) {
					this.estructuraLogic.getNewConnexionToDeep("");
				}

				//TOCA TRAER NUEVAMENTE, YA QUE SE PIERDE REGISTRO ACTUAL
				int intSelectedRow = this.jTableDatosEstructura.getSelectedRow();

				if(intSelectedRow>-1) {
					this.setVariablesFormularioToObjetoActualEstructura(this.getestructura(),true);
					this.setVariablesFormularioToObjetoActualForeignKeysEstructura(this.estructura);
					//ARCHITECTURE
					/*
					if(Constantes.ISUSAEJBLOGICLAYER) {
						this.estructura =(Estructura) this.estructuraLogic.getEstructuras().toArray()[this.jTableDatosEstructura.convertRowIndexToModel(intSelectedRow)];
					} else if(Constantes.ISUSAEJBREMOTE || Constantes.ISUSAEJBHOME) {
						this.estructura =(Estructura) this.estructuras.toArray()[this.jTableDatosEstructura.convertRowIndexToModel(intSelectedRow)];
					}
					*/
					//ARCHITECTURE

				} else {
					if(this.estructura==null) {
						this.estructura = new Estructura();
					}

					this.setVariablesFormularioToObjetoActualEstructura(this.estructura,true);
					this.setVariablesFormularioToObjetoActualForeignKeysEstructura(this.estructura);
				}

				if(this.estructura.getid_ciudad()!=null) {

					this.sAccionBusqueda="Query";

					this.sFinalQueryGeneral=" where id_ciudad = "+this.estructura.getid_ciudad().toString()+" ";

					if(Constantes.ISDEVELOPING) {
						System.out.println(this.sFinalQueryGeneral);
					}

					this.procesarBusqueda(this.sAccionBusqueda);

					this.inicializarActualizarBindingEstructura(false);
				}

				if(Constantes.ISUSAEJBLOGICLAYER) {
					this.estructuraLogic.commitNewConnexionToDeep();
				}

			} catch(Exception e) {

				if(Constantes.ISUSAEJBLOGICLAYER) {
					this.estructuraLogic.rollbackNewConnexionToDeep();
				}

				FuncionesSwing.manageException(this, e,logger,EstructuraConstantesFunciones.CLASSNAME);

			} finally {
				if(Constantes.ISUSAEJBLOGICLAYER) {
					this.estructuraLogic.closeNewConnexionToDeep();
				}

			}
		}

	public void jButtoncodigoEstructuraBusquedaActionPerformed(java.awt.event.ActionEvent evt) throws Exception {
		try {

				if(Constantes.ISUSAEJBLOGICLAYER) {
					this.estructuraLogic.getNewConnexionToDeep("");
				}

				//TOCA TRAER NUEVAMENTE, YA QUE SE PIERDE REGISTRO ACTUAL
				int intSelectedRow = this.jTableDatosEstructura.getSelectedRow();

				if(intSelectedRow>-1) {
					this.setVariablesFormularioToObjetoActualEstructura(this.getestructura(),true);
					this.setVariablesFormularioToObjetoActualForeignKeysEstructura(this.estructura);
					//ARCHITECTURE
					/*
					if(Constantes.ISUSAEJBLOGICLAYER) {
						this.estructura =(Estructura) this.estructuraLogic.getEstructuras().toArray()[this.jTableDatosEstructura.convertRowIndexToModel(intSelectedRow)];
					} else if(Constantes.ISUSAEJBREMOTE || Constantes.ISUSAEJBHOME) {
						this.estructura =(Estructura) this.estructuras.toArray()[this.jTableDatosEstructura.convertRowIndexToModel(intSelectedRow)];
					}
					*/
					//ARCHITECTURE

				} else {
					if(this.estructura==null) {
						this.estructura = new Estructura();
					}

					this.setVariablesFormularioToObjetoActualEstructura(this.estructura,true);
					this.setVariablesFormularioToObjetoActualForeignKeysEstructura(this.estructura);
				}

				if(this.estructura.getcodigo()!=null) {

					this.sAccionBusqueda="Query";

					this.sFinalQueryGeneral=" where codigo like '%"+this.estructura.getcodigo()+"%' ";

					if(Constantes.ISDEVELOPING) {
						System.out.println(this.sFinalQueryGeneral);
					}

					this.procesarBusqueda(this.sAccionBusqueda);

					this.inicializarActualizarBindingEstructura(false);
				}

				if(Constantes.ISUSAEJBLOGICLAYER) {
					this.estructuraLogic.commitNewConnexionToDeep();
				}

			} catch(Exception e) {

				if(Constantes.ISUSAEJBLOGICLAYER) {
					this.estructuraLogic.rollbackNewConnexionToDeep();
				}

				FuncionesSwing.manageException(this, e,logger,EstructuraConstantesFunciones.CLASSNAME);

			} finally {
				if(Constantes.ISUSAEJBLOGICLAYER) {
					this.estructuraLogic.closeNewConnexionToDeep();
				}

			}
		}

	public void jButtonnumeroEstructuraBusquedaActionPerformed(java.awt.event.ActionEvent evt) throws Exception {
		try {

				if(Constantes.ISUSAEJBLOGICLAYER) {
					this.estructuraLogic.getNewConnexionToDeep("");
				}

				//TOCA TRAER NUEVAMENTE, YA QUE SE PIERDE REGISTRO ACTUAL
				int intSelectedRow = this.jTableDatosEstructura.getSelectedRow();

				if(intSelectedRow>-1) {
					this.setVariablesFormularioToObjetoActualEstructura(this.getestructura(),true);
					this.setVariablesFormularioToObjetoActualForeignKeysEstructura(this.estructura);
					//ARCHITECTURE
					/*
					if(Constantes.ISUSAEJBLOGICLAYER) {
						this.estructura =(Estructura) this.estructuraLogic.getEstructuras().toArray()[this.jTableDatosEstructura.convertRowIndexToModel(intSelectedRow)];
					} else if(Constantes.ISUSAEJBREMOTE || Constantes.ISUSAEJBHOME) {
						this.estructura =(Estructura) this.estructuras.toArray()[this.jTableDatosEstructura.convertRowIndexToModel(intSelectedRow)];
					}
					*/
					//ARCHITECTURE

				} else {
					if(this.estructura==null) {
						this.estructura = new Estructura();
					}

					this.setVariablesFormularioToObjetoActualEstructura(this.estructura,true);
					this.setVariablesFormularioToObjetoActualForeignKeysEstructura(this.estructura);
				}

				if(this.estructura.getnumero()!=null) {

					this.sAccionBusqueda="Query";

					this.sFinalQueryGeneral=" where numero like '%"+this.estructura.getnumero()+"%' ";

					if(Constantes.ISDEVELOPING) {
						System.out.println(this.sFinalQueryGeneral);
					}

					this.procesarBusqueda(this.sAccionBusqueda);

					this.inicializarActualizarBindingEstructura(false);
				}

				if(Constantes.ISUSAEJBLOGICLAYER) {
					this.estructuraLogic.commitNewConnexionToDeep();
				}

			} catch(Exception e) {

				if(Constantes.ISUSAEJBLOGICLAYER) {
					this.estructuraLogic.rollbackNewConnexionToDeep();
				}

				FuncionesSwing.manageException(this, e,logger,EstructuraConstantesFunciones.CLASSNAME);

			} finally {
				if(Constantes.ISUSAEJBLOGICLAYER) {
					this.estructuraLogic.closeNewConnexionToDeep();
				}

			}
		}

	public void jButtonvalor_anticipoEstructuraBusquedaActionPerformed(java.awt.event.ActionEvent evt) throws Exception {
		try {

				if(Constantes.ISUSAEJBLOGICLAYER) {
					this.estructuraLogic.getNewConnexionToDeep("");
				}

				//TOCA TRAER NUEVAMENTE, YA QUE SE PIERDE REGISTRO ACTUAL
				int intSelectedRow = this.jTableDatosEstructura.getSelectedRow();

				if(intSelectedRow>-1) {
					this.setVariablesFormularioToObjetoActualEstructura(this.getestructura(),true);
					this.setVariablesFormularioToObjetoActualForeignKeysEstructura(this.estructura);
					//ARCHITECTURE
					/*
					if(Constantes.ISUSAEJBLOGICLAYER) {
						this.estructura =(Estructura) this.estructuraLogic.getEstructuras().toArray()[this.jTableDatosEstructura.convertRowIndexToModel(intSelectedRow)];
					} else if(Constantes.ISUSAEJBREMOTE || Constantes.ISUSAEJBHOME) {
						this.estructura =(Estructura) this.estructuras.toArray()[this.jTableDatosEstructura.convertRowIndexToModel(intSelectedRow)];
					}
					*/
					//ARCHITECTURE

				} else {
					if(this.estructura==null) {
						this.estructura = new Estructura();
					}

					this.setVariablesFormularioToObjetoActualEstructura(this.estructura,true);
					this.setVariablesFormularioToObjetoActualForeignKeysEstructura(this.estructura);
				}

				if(this.estructura.getvalor_anticipo()!=null) {

					this.sAccionBusqueda="Query";

					this.sFinalQueryGeneral=" where valor_anticipo = "+this.estructura.getvalor_anticipo().toString()+" ";

					if(Constantes.ISDEVELOPING) {
						System.out.println(this.sFinalQueryGeneral);
					}

					this.procesarBusqueda(this.sAccionBusqueda);

					this.inicializarActualizarBindingEstructura(false);
				}

				if(Constantes.ISUSAEJBLOGICLAYER) {
					this.estructuraLogic.commitNewConnexionToDeep();
				}

			} catch(Exception e) {

				if(Constantes.ISUSAEJBLOGICLAYER) {
					this.estructuraLogic.rollbackNewConnexionToDeep();
				}

				FuncionesSwing.manageException(this, e,logger,EstructuraConstantesFunciones.CLASSNAME);

			} finally {
				if(Constantes.ISUSAEJBLOGICLAYER) {
					this.estructuraLogic.closeNewConnexionToDeep();
				}

			}
		}

	public void jButtonporcentaje_anticipoEstructuraBusquedaActionPerformed(java.awt.event.ActionEvent evt) throws Exception {
		try {

				if(Constantes.ISUSAEJBLOGICLAYER) {
					this.estructuraLogic.getNewConnexionToDeep("");
				}

				//TOCA TRAER NUEVAMENTE, YA QUE SE PIERDE REGISTRO ACTUAL
				int intSelectedRow = this.jTableDatosEstructura.getSelectedRow();

				if(intSelectedRow>-1) {
					this.setVariablesFormularioToObjetoActualEstructura(this.getestructura(),true);
					this.setVariablesFormularioToObjetoActualForeignKeysEstructura(this.estructura);
					//ARCHITECTURE
					/*
					if(Constantes.ISUSAEJBLOGICLAYER) {
						this.estructura =(Estructura) this.estructuraLogic.getEstructuras().toArray()[this.jTableDatosEstructura.convertRowIndexToModel(intSelectedRow)];
					} else if(Constantes.ISUSAEJBREMOTE || Constantes.ISUSAEJBHOME) {
						this.estructura =(Estructura) this.estructuras.toArray()[this.jTableDatosEstructura.convertRowIndexToModel(intSelectedRow)];
					}
					*/
					//ARCHITECTURE

				} else {
					if(this.estructura==null) {
						this.estructura = new Estructura();
					}

					this.setVariablesFormularioToObjetoActualEstructura(this.estructura,true);
					this.setVariablesFormularioToObjetoActualForeignKeysEstructura(this.estructura);
				}

				if(this.estructura.getporcentaje_anticipo()!=null) {

					this.sAccionBusqueda="Query";

					this.sFinalQueryGeneral=" where porcentaje_anticipo = "+this.estructura.getporcentaje_anticipo().toString()+" ";

					if(Constantes.ISDEVELOPING) {
						System.out.println(this.sFinalQueryGeneral);
					}

					this.procesarBusqueda(this.sAccionBusqueda);

					this.inicializarActualizarBindingEstructura(false);
				}

				if(Constantes.ISUSAEJBLOGICLAYER) {
					this.estructuraLogic.commitNewConnexionToDeep();
				}

			} catch(Exception e) {

				if(Constantes.ISUSAEJBLOGICLAYER) {
					this.estructuraLogic.rollbackNewConnexionToDeep();
				}

				FuncionesSwing.manageException(this, e,logger,EstructuraConstantesFunciones.CLASSNAME);

			} finally {
				if(Constantes.ISUSAEJBLOGICLAYER) {
					this.estructuraLogic.closeNewConnexionToDeep();
				}

			}
		}

	public void jButtonnombreEstructuraBusquedaActionPerformed(java.awt.event.ActionEvent evt) throws Exception {
		try {

				if(Constantes.ISUSAEJBLOGICLAYER) {
					this.estructuraLogic.getNewConnexionToDeep("");
				}

				//TOCA TRAER NUEVAMENTE, YA QUE SE PIERDE REGISTRO ACTUAL
				int intSelectedRow = this.jTableDatosEstructura.getSelectedRow();

				if(intSelectedRow>-1) {
					this.setVariablesFormularioToObjetoActualEstructura(this.getestructura(),true);
					this.setVariablesFormularioToObjetoActualForeignKeysEstructura(this.estructura);
					//ARCHITECTURE
					/*
					if(Constantes.ISUSAEJBLOGICLAYER) {
						this.estructura =(Estructura) this.estructuraLogic.getEstructuras().toArray()[this.jTableDatosEstructura.convertRowIndexToModel(intSelectedRow)];
					} else if(Constantes.ISUSAEJBREMOTE || Constantes.ISUSAEJBHOME) {
						this.estructura =(Estructura) this.estructuras.toArray()[this.jTableDatosEstructura.convertRowIndexToModel(intSelectedRow)];
					}
					*/
					//ARCHITECTURE

				} else {
					if(this.estructura==null) {
						this.estructura = new Estructura();
					}

					this.setVariablesFormularioToObjetoActualEstructura(this.estructura,true);
					this.setVariablesFormularioToObjetoActualForeignKeysEstructura(this.estructura);
				}

				if(this.estructura.getnombre()!=null) {

					this.sAccionBusqueda="Query";

					this.sFinalQueryGeneral=" where nombre like '%"+this.estructura.getnombre()+"%' ";

					if(Constantes.ISDEVELOPING) {
						System.out.println(this.sFinalQueryGeneral);
					}

					this.procesarBusqueda(this.sAccionBusqueda);

					this.inicializarActualizarBindingEstructura(false);
				}

				if(Constantes.ISUSAEJBLOGICLAYER) {
					this.estructuraLogic.commitNewConnexionToDeep();
				}

			} catch(Exception e) {

				if(Constantes.ISUSAEJBLOGICLAYER) {
					this.estructuraLogic.rollbackNewConnexionToDeep();
				}

				FuncionesSwing.manageException(this, e,logger,EstructuraConstantesFunciones.CLASSNAME);

			} finally {
				if(Constantes.ISUSAEJBLOGICLAYER) {
					this.estructuraLogic.closeNewConnexionToDeep();
				}

			}
		}

	public void jButtones_jefeEstructuraBusquedaActionPerformed(java.awt.event.ActionEvent evt) throws Exception {
		try {

				if(Constantes.ISUSAEJBLOGICLAYER) {
					this.estructuraLogic.getNewConnexionToDeep("");
				}

				//TOCA TRAER NUEVAMENTE, YA QUE SE PIERDE REGISTRO ACTUAL
				int intSelectedRow = this.jTableDatosEstructura.getSelectedRow();

				if(intSelectedRow>-1) {
					this.setVariablesFormularioToObjetoActualEstructura(this.getestructura(),true);
					this.setVariablesFormularioToObjetoActualForeignKeysEstructura(this.estructura);
					//ARCHITECTURE
					/*
					if(Constantes.ISUSAEJBLOGICLAYER) {
						this.estructura =(Estructura) this.estructuraLogic.getEstructuras().toArray()[this.jTableDatosEstructura.convertRowIndexToModel(intSelectedRow)];
					} else if(Constantes.ISUSAEJBREMOTE || Constantes.ISUSAEJBHOME) {
						this.estructura =(Estructura) this.estructuras.toArray()[this.jTableDatosEstructura.convertRowIndexToModel(intSelectedRow)];
					}
					*/
					//ARCHITECTURE

				} else {
					if(this.estructura==null) {
						this.estructura = new Estructura();
					}

					this.setVariablesFormularioToObjetoActualEstructura(this.estructura,true);
					this.setVariablesFormularioToObjetoActualForeignKeysEstructura(this.estructura);
				}

				if(this.estructura.getes_jefe()!=null) {

					this.sAccionBusqueda="Query";

					this.sFinalQueryGeneral=" where es_jefe = "+this.estructura.getes_jefe().toString()+" ";

					if(Constantes.ISDEVELOPING) {
						System.out.println(this.sFinalQueryGeneral);
					}

					this.procesarBusqueda(this.sAccionBusqueda);

					this.inicializarActualizarBindingEstructura(false);
				}

				if(Constantes.ISUSAEJBLOGICLAYER) {
					this.estructuraLogic.commitNewConnexionToDeep();
				}

			} catch(Exception e) {

				if(Constantes.ISUSAEJBLOGICLAYER) {
					this.estructuraLogic.rollbackNewConnexionToDeep();
				}

				FuncionesSwing.manageException(this, e,logger,EstructuraConstantesFunciones.CLASSNAME);

			} finally {
				if(Constantes.ISUSAEJBLOGICLAYER) {
					this.estructuraLogic.closeNewConnexionToDeep();
				}

			}
		}

	public void jButtones_anualEstructuraBusquedaActionPerformed(java.awt.event.ActionEvent evt) throws Exception {
		try {

				if(Constantes.ISUSAEJBLOGICLAYER) {
					this.estructuraLogic.getNewConnexionToDeep("");
				}

				//TOCA TRAER NUEVAMENTE, YA QUE SE PIERDE REGISTRO ACTUAL
				int intSelectedRow = this.jTableDatosEstructura.getSelectedRow();

				if(intSelectedRow>-1) {
					this.setVariablesFormularioToObjetoActualEstructura(this.getestructura(),true);
					this.setVariablesFormularioToObjetoActualForeignKeysEstructura(this.estructura);
					//ARCHITECTURE
					/*
					if(Constantes.ISUSAEJBLOGICLAYER) {
						this.estructura =(Estructura) this.estructuraLogic.getEstructuras().toArray()[this.jTableDatosEstructura.convertRowIndexToModel(intSelectedRow)];
					} else if(Constantes.ISUSAEJBREMOTE || Constantes.ISUSAEJBHOME) {
						this.estructura =(Estructura) this.estructuras.toArray()[this.jTableDatosEstructura.convertRowIndexToModel(intSelectedRow)];
					}
					*/
					//ARCHITECTURE

				} else {
					if(this.estructura==null) {
						this.estructura = new Estructura();
					}

					this.setVariablesFormularioToObjetoActualEstructura(this.estructura,true);
					this.setVariablesFormularioToObjetoActualForeignKeysEstructura(this.estructura);
				}

				if(this.estructura.getes_anual()!=null) {

					this.sAccionBusqueda="Query";

					this.sFinalQueryGeneral=" where es_anual = "+this.estructura.getes_anual().toString()+" ";

					if(Constantes.ISDEVELOPING) {
						System.out.println(this.sFinalQueryGeneral);
					}

					this.procesarBusqueda(this.sAccionBusqueda);

					this.inicializarActualizarBindingEstructura(false);
				}

				if(Constantes.ISUSAEJBLOGICLAYER) {
					this.estructuraLogic.commitNewConnexionToDeep();
				}

			} catch(Exception e) {

				if(Constantes.ISUSAEJBLOGICLAYER) {
					this.estructuraLogic.rollbackNewConnexionToDeep();
				}

				FuncionesSwing.manageException(this, e,logger,EstructuraConstantesFunciones.CLASSNAME);

			} finally {
				if(Constantes.ISUSAEJBLOGICLAYER) {
					this.estructuraLogic.closeNewConnexionToDeep();
				}

			}
		}

	public void jButtonporcentajeEstructuraBusquedaActionPerformed(java.awt.event.ActionEvent evt) throws Exception {
		try {

				if(Constantes.ISUSAEJBLOGICLAYER) {
					this.estructuraLogic.getNewConnexionToDeep("");
				}

				//TOCA TRAER NUEVAMENTE, YA QUE SE PIERDE REGISTRO ACTUAL
				int intSelectedRow = this.jTableDatosEstructura.getSelectedRow();

				if(intSelectedRow>-1) {
					this.setVariablesFormularioToObjetoActualEstructura(this.getestructura(),true);
					this.setVariablesFormularioToObjetoActualForeignKeysEstructura(this.estructura);
					//ARCHITECTURE
					/*
					if(Constantes.ISUSAEJBLOGICLAYER) {
						this.estructura =(Estructura) this.estructuraLogic.getEstructuras().toArray()[this.jTableDatosEstructura.convertRowIndexToModel(intSelectedRow)];
					} else if(Constantes.ISUSAEJBREMOTE || Constantes.ISUSAEJBHOME) {
						this.estructura =(Estructura) this.estructuras.toArray()[this.jTableDatosEstructura.convertRowIndexToModel(intSelectedRow)];
					}
					*/
					//ARCHITECTURE

				} else {
					if(this.estructura==null) {
						this.estructura = new Estructura();
					}

					this.setVariablesFormularioToObjetoActualEstructura(this.estructura,true);
					this.setVariablesFormularioToObjetoActualForeignKeysEstructura(this.estructura);
				}

				if(this.estructura.getporcentaje()!=null) {

					this.sAccionBusqueda="Query";

					this.sFinalQueryGeneral=" where porcentaje = "+this.estructura.getporcentaje().toString()+" ";

					if(Constantes.ISDEVELOPING) {
						System.out.println(this.sFinalQueryGeneral);
					}

					this.procesarBusqueda(this.sAccionBusqueda);

					this.inicializarActualizarBindingEstructura(false);
				}

				if(Constantes.ISUSAEJBLOGICLAYER) {
					this.estructuraLogic.commitNewConnexionToDeep();
				}

			} catch(Exception e) {

				if(Constantes.ISUSAEJBLOGICLAYER) {
					this.estructuraLogic.rollbackNewConnexionToDeep();
				}

				FuncionesSwing.manageException(this, e,logger,EstructuraConstantesFunciones.CLASSNAME);

			} finally {
				if(Constantes.ISUSAEJBLOGICLAYER) {
					this.estructuraLogic.closeNewConnexionToDeep();
				}

			}
		}

	public void jButtonvalorEstructuraBusquedaActionPerformed(java.awt.event.ActionEvent evt) throws Exception {
		try {

				if(Constantes.ISUSAEJBLOGICLAYER) {
					this.estructuraLogic.getNewConnexionToDeep("");
				}

				//TOCA TRAER NUEVAMENTE, YA QUE SE PIERDE REGISTRO ACTUAL
				int intSelectedRow = this.jTableDatosEstructura.getSelectedRow();

				if(intSelectedRow>-1) {
					this.setVariablesFormularioToObjetoActualEstructura(this.getestructura(),true);
					this.setVariablesFormularioToObjetoActualForeignKeysEstructura(this.estructura);
					//ARCHITECTURE
					/*
					if(Constantes.ISUSAEJBLOGICLAYER) {
						this.estructura =(Estructura) this.estructuraLogic.getEstructuras().toArray()[this.jTableDatosEstructura.convertRowIndexToModel(intSelectedRow)];
					} else if(Constantes.ISUSAEJBREMOTE || Constantes.ISUSAEJBHOME) {
						this.estructura =(Estructura) this.estructuras.toArray()[this.jTableDatosEstructura.convertRowIndexToModel(intSelectedRow)];
					}
					*/
					//ARCHITECTURE

				} else {
					if(this.estructura==null) {
						this.estructura = new Estructura();
					}

					this.setVariablesFormularioToObjetoActualEstructura(this.estructura,true);
					this.setVariablesFormularioToObjetoActualForeignKeysEstructura(this.estructura);
				}

				if(this.estructura.getvalor()!=null) {

					this.sAccionBusqueda="Query";

					this.sFinalQueryGeneral=" where valor = "+this.estructura.getvalor().toString()+" ";

					if(Constantes.ISDEVELOPING) {
						System.out.println(this.sFinalQueryGeneral);
					}

					this.procesarBusqueda(this.sAccionBusqueda);

					this.inicializarActualizarBindingEstructura(false);
				}

				if(Constantes.ISUSAEJBLOGICLAYER) {
					this.estructuraLogic.commitNewConnexionToDeep();
				}

			} catch(Exception e) {

				if(Constantes.ISUSAEJBLOGICLAYER) {
					this.estructuraLogic.rollbackNewConnexionToDeep();
				}

				FuncionesSwing.manageException(this, e,logger,EstructuraConstantesFunciones.CLASSNAME);

			} finally {
				if(Constantes.ISUSAEJBLOGICLAYER) {
					this.estructuraLogic.closeNewConnexionToDeep();
				}

			}
		}

	
	
	public void jButtonFK_IdCiudadEstructuraActionPerformed(ActionEvent evt) throws Exception {
		try {
			if(Constantes.ISUSAEJBLOGICLAYER) {
				this.estructuraLogic.getNewConnexionToDeep("");
			}

			this.iNumeroPaginacionPagina=0;
			this.inicializarActualizarBindingEstructura(false,false);

			this.getEstructurasFK_IdCiudad();

			this.inicializarActualizarBindingEstructura(false);

			//if(EstructuraBeanSwingJInternalFrame.ISBINDING_MANUAL) {
			//this.inicializarActualizarBindingEstructura(false,false);
			//}

			if(Constantes.ISUSAEJBLOGICLAYER) {
				this.estructuraLogic.commitNewConnexionToDeep();
			}
		} catch(Exception e) {
			if(Constantes.ISUSAEJBLOGICLAYER) {
				this.estructuraLogic.rollbackNewConnexionToDeep();
			}

			FuncionesSwing.manageException(this, e,logger,EstructuraConstantesFunciones.CLASSNAME);

		} finally {
			if(Constantes.ISUSAEJBLOGICLAYER) {
				this.estructuraLogic.closeNewConnexionToDeep();
			}
		}
	}

	public void jButtonFK_IdCuentaContableEstructuraActionPerformed(ActionEvent evt) throws Exception {
		try {
			if(Constantes.ISUSAEJBLOGICLAYER) {
				this.estructuraLogic.getNewConnexionToDeep("");
			}

			this.iNumeroPaginacionPagina=0;
			this.inicializarActualizarBindingEstructura(false,false);

			this.getEstructurasFK_IdCuentaContable();

			this.inicializarActualizarBindingEstructura(false);

			//if(EstructuraBeanSwingJInternalFrame.ISBINDING_MANUAL) {
			//this.inicializarActualizarBindingEstructura(false,false);
			//}

			if(Constantes.ISUSAEJBLOGICLAYER) {
				this.estructuraLogic.commitNewConnexionToDeep();
			}
		} catch(Exception e) {
			if(Constantes.ISUSAEJBLOGICLAYER) {
				this.estructuraLogic.rollbackNewConnexionToDeep();
			}

			FuncionesSwing.manageException(this, e,logger,EstructuraConstantesFunciones.CLASSNAME);

		} finally {
			if(Constantes.ISUSAEJBLOGICLAYER) {
				this.estructuraLogic.closeNewConnexionToDeep();
			}
		}
	}

	public void jButtonFK_IdEmpresaEstructuraActionPerformed(ActionEvent evt) throws Exception {
		try {
			if(Constantes.ISUSAEJBLOGICLAYER) {
				this.estructuraLogic.getNewConnexionToDeep("");
			}

			this.iNumeroPaginacionPagina=0;
			this.inicializarActualizarBindingEstructura(false,false);

			this.getEstructurasFK_IdEmpresa();

			this.inicializarActualizarBindingEstructura(false);

			//if(EstructuraBeanSwingJInternalFrame.ISBINDING_MANUAL) {
			//this.inicializarActualizarBindingEstructura(false,false);
			//}

			if(Constantes.ISUSAEJBLOGICLAYER) {
				this.estructuraLogic.commitNewConnexionToDeep();
			}
		} catch(Exception e) {
			if(Constantes.ISUSAEJBLOGICLAYER) {
				this.estructuraLogic.rollbackNewConnexionToDeep();
			}

			FuncionesSwing.manageException(this, e,logger,EstructuraConstantesFunciones.CLASSNAME);

		} finally {
			if(Constantes.ISUSAEJBLOGICLAYER) {
				this.estructuraLogic.closeNewConnexionToDeep();
			}
		}
	}

	public void jButtonFK_IdEstructuraEstructuraActionPerformed(ActionEvent evt) throws Exception {
		try {
			if(Constantes.ISUSAEJBLOGICLAYER) {
				this.estructuraLogic.getNewConnexionToDeep("");
			}

			this.iNumeroPaginacionPagina=0;
			this.inicializarActualizarBindingEstructura(false,false);

			this.getEstructurasFK_IdEstructura();

			this.inicializarActualizarBindingEstructura(false);

			//if(EstructuraBeanSwingJInternalFrame.ISBINDING_MANUAL) {
			//this.inicializarActualizarBindingEstructura(false,false);
			//}

			if(Constantes.ISUSAEJBLOGICLAYER) {
				this.estructuraLogic.commitNewConnexionToDeep();
			}
		} catch(Exception e) {
			if(Constantes.ISUSAEJBLOGICLAYER) {
				this.estructuraLogic.rollbackNewConnexionToDeep();
			}

			FuncionesSwing.manageException(this, e,logger,EstructuraConstantesFunciones.CLASSNAME);

		} finally {
			if(Constantes.ISUSAEJBLOGICLAYER) {
				this.estructuraLogic.closeNewConnexionToDeep();
			}
		}
	}

	public void jButtonFK_IdNumeroPatronalEstructuraActionPerformed(ActionEvent evt) throws Exception {
		try {
			if(Constantes.ISUSAEJBLOGICLAYER) {
				this.estructuraLogic.getNewConnexionToDeep("");
			}

			this.iNumeroPaginacionPagina=0;
			this.inicializarActualizarBindingEstructura(false,false);

			this.getEstructurasFK_IdNumeroPatronal();

			this.inicializarActualizarBindingEstructura(false);

			//if(EstructuraBeanSwingJInternalFrame.ISBINDING_MANUAL) {
			//this.inicializarActualizarBindingEstructura(false,false);
			//}

			if(Constantes.ISUSAEJBLOGICLAYER) {
				this.estructuraLogic.commitNewConnexionToDeep();
			}
		} catch(Exception e) {
			if(Constantes.ISUSAEJBLOGICLAYER) {
				this.estructuraLogic.rollbackNewConnexionToDeep();
			}

			FuncionesSwing.manageException(this, e,logger,EstructuraConstantesFunciones.CLASSNAME);

		} finally {
			if(Constantes.ISUSAEJBLOGICLAYER) {
				this.estructuraLogic.closeNewConnexionToDeep();
			}
		}
	}

	public void jButtonFK_IdPaisEstructuraActionPerformed(ActionEvent evt) throws Exception {
		try {
			if(Constantes.ISUSAEJBLOGICLAYER) {
				this.estructuraLogic.getNewConnexionToDeep("");
			}

			this.iNumeroPaginacionPagina=0;
			this.inicializarActualizarBindingEstructura(false,false);

			this.getEstructurasFK_IdPais();

			this.inicializarActualizarBindingEstructura(false);

			//if(EstructuraBeanSwingJInternalFrame.ISBINDING_MANUAL) {
			//this.inicializarActualizarBindingEstructura(false,false);
			//}

			if(Constantes.ISUSAEJBLOGICLAYER) {
				this.estructuraLogic.commitNewConnexionToDeep();
			}
		} catch(Exception e) {
			if(Constantes.ISUSAEJBLOGICLAYER) {
				this.estructuraLogic.rollbackNewConnexionToDeep();
			}

			FuncionesSwing.manageException(this, e,logger,EstructuraConstantesFunciones.CLASSNAME);

		} finally {
			if(Constantes.ISUSAEJBLOGICLAYER) {
				this.estructuraLogic.closeNewConnexionToDeep();
			}
		}
	}

	public void jButtonFK_IdSucursalEstructuraActionPerformed(ActionEvent evt) throws Exception {
		try {
			if(Constantes.ISUSAEJBLOGICLAYER) {
				this.estructuraLogic.getNewConnexionToDeep("");
			}

			this.iNumeroPaginacionPagina=0;
			this.inicializarActualizarBindingEstructura(false,false);

			this.getEstructurasFK_IdSucursal();

			this.inicializarActualizarBindingEstructura(false);

			//if(EstructuraBeanSwingJInternalFrame.ISBINDING_MANUAL) {
			//this.inicializarActualizarBindingEstructura(false,false);
			//}

			if(Constantes.ISUSAEJBLOGICLAYER) {
				this.estructuraLogic.commitNewConnexionToDeep();
			}
		} catch(Exception e) {
			if(Constantes.ISUSAEJBLOGICLAYER) {
				this.estructuraLogic.rollbackNewConnexionToDeep();
			}

			FuncionesSwing.manageException(this, e,logger,EstructuraConstantesFunciones.CLASSNAME);

		} finally {
			if(Constantes.ISUSAEJBLOGICLAYER) {
				this.estructuraLogic.closeNewConnexionToDeep();
			}
		}
	}

	public void jButtonFK_IdTipoEstructuraEstructuraActionPerformed(ActionEvent evt) throws Exception {
		try {
			if(Constantes.ISUSAEJBLOGICLAYER) {
				this.estructuraLogic.getNewConnexionToDeep("");
			}

			this.iNumeroPaginacionPagina=0;
			this.inicializarActualizarBindingEstructura(false,false);

			this.getEstructurasFK_IdTipoEstructura();

			this.inicializarActualizarBindingEstructura(false);

			//if(EstructuraBeanSwingJInternalFrame.ISBINDING_MANUAL) {
			//this.inicializarActualizarBindingEstructura(false,false);
			//}

			if(Constantes.ISUSAEJBLOGICLAYER) {
				this.estructuraLogic.commitNewConnexionToDeep();
			}
		} catch(Exception e) {
			if(Constantes.ISUSAEJBLOGICLAYER) {
				this.estructuraLogic.rollbackNewConnexionToDeep();
			}

			FuncionesSwing.manageException(this, e,logger,EstructuraConstantesFunciones.CLASSNAME);

		} finally {
			if(Constantes.ISUSAEJBLOGICLAYER) {
				this.estructuraLogic.closeNewConnexionToDeep();
			}
		}
	}

	public void jButtonFK_IdTipoPago_NMEstructuraActionPerformed(ActionEvent evt) throws Exception {
		try {
			if(Constantes.ISUSAEJBLOGICLAYER) {
				this.estructuraLogic.getNewConnexionToDeep("");
			}

			this.iNumeroPaginacionPagina=0;
			this.inicializarActualizarBindingEstructura(false,false);

			this.getEstructurasFK_IdTipoPago_NM();

			this.inicializarActualizarBindingEstructura(false);

			//if(EstructuraBeanSwingJInternalFrame.ISBINDING_MANUAL) {
			//this.inicializarActualizarBindingEstructura(false,false);
			//}

			if(Constantes.ISUSAEJBLOGICLAYER) {
				this.estructuraLogic.commitNewConnexionToDeep();
			}
		} catch(Exception e) {
			if(Constantes.ISUSAEJBLOGICLAYER) {
				this.estructuraLogic.rollbackNewConnexionToDeep();
			}

			FuncionesSwing.manageException(this, e,logger,EstructuraConstantesFunciones.CLASSNAME);

		} finally {
			if(Constantes.ISUSAEJBLOGICLAYER) {
				this.estructuraLogic.closeNewConnexionToDeep();
			}
		}
	}

	
	public void closingInternalFrameEstructura() {
		if(this.jInternalFrameDetalleFormEstructura!=null) {
		

		if(this.jInternalFrameDetalleFormEstructura.centrocostoestructuraBeanSwingJInternalFrame!=null) {
			this.jInternalFrameDetalleFormEstructura.centrocostoestructuraBeanSwingJInternalFrame.setVisible(false);
			this.jInternalFrameDetalleFormEstructura.centrocostoestructuraBeanSwingJInternalFrame.dispose();
			this.jInternalFrameDetalleFormEstructura.centrocostoestructuraBeanSwingJInternalFrame=null;
		}

		if(this.jInternalFrameDetalleFormEstructura.centrocostoestructuraBeanSwingJInternalFramePopup!=null) {
			this.jInternalFrameDetalleFormEstructura.centrocostoestructuraBeanSwingJInternalFramePopup.setVisible(false);
			this.jInternalFrameDetalleFormEstructura.centrocostoestructuraBeanSwingJInternalFramePopup.dispose();
			this.jInternalFrameDetalleFormEstructura.centrocostoestructuraBeanSwingJInternalFramePopup=null;
		}

		if(this.jInternalFrameDetalleFormEstructura.planivacacionBeanSwingJInternalFrame!=null) {
			this.jInternalFrameDetalleFormEstructura.planivacacionBeanSwingJInternalFrame.setVisible(false);
			this.jInternalFrameDetalleFormEstructura.planivacacionBeanSwingJInternalFrame.dispose();
			this.jInternalFrameDetalleFormEstructura.planivacacionBeanSwingJInternalFrame=null;
		}

		if(this.jInternalFrameDetalleFormEstructura.planivacacionBeanSwingJInternalFramePopup!=null) {
			this.jInternalFrameDetalleFormEstructura.planivacacionBeanSwingJInternalFramePopup.setVisible(false);
			this.jInternalFrameDetalleFormEstructura.planivacacionBeanSwingJInternalFramePopup.dispose();
			this.jInternalFrameDetalleFormEstructura.planivacacionBeanSwingJInternalFramePopup=null;
		}

		if(this.jInternalFrameDetalleFormEstructura.asistenciamensualBeanSwingJInternalFrame!=null) {
			this.jInternalFrameDetalleFormEstructura.asistenciamensualBeanSwingJInternalFrame.setVisible(false);
			this.jInternalFrameDetalleFormEstructura.asistenciamensualBeanSwingJInternalFrame.dispose();
			this.jInternalFrameDetalleFormEstructura.asistenciamensualBeanSwingJInternalFrame=null;
		}

		if(this.jInternalFrameDetalleFormEstructura.asistenciamensualBeanSwingJInternalFramePopup!=null) {
			this.jInternalFrameDetalleFormEstructura.asistenciamensualBeanSwingJInternalFramePopup.setVisible(false);
			this.jInternalFrameDetalleFormEstructura.asistenciamensualBeanSwingJInternalFramePopup.dispose();
			this.jInternalFrameDetalleFormEstructura.asistenciamensualBeanSwingJInternalFramePopup=null;
		}

		if(this.jInternalFrameDetalleFormEstructura.empleadoprocesorubroBeanSwingJInternalFrame!=null) {
			this.jInternalFrameDetalleFormEstructura.empleadoprocesorubroBeanSwingJInternalFrame.setVisible(false);
			this.jInternalFrameDetalleFormEstructura.empleadoprocesorubroBeanSwingJInternalFrame.dispose();
			this.jInternalFrameDetalleFormEstructura.empleadoprocesorubroBeanSwingJInternalFrame=null;
		}

		if(this.jInternalFrameDetalleFormEstructura.empleadoprocesorubroBeanSwingJInternalFramePopup!=null) {
			this.jInternalFrameDetalleFormEstructura.empleadoprocesorubroBeanSwingJInternalFramePopup.setVisible(false);
			this.jInternalFrameDetalleFormEstructura.empleadoprocesorubroBeanSwingJInternalFramePopup.dispose();
			this.jInternalFrameDetalleFormEstructura.empleadoprocesorubroBeanSwingJInternalFramePopup=null;
		}

		if(this.jInternalFrameDetalleFormEstructura.empleadopagorubroBeanSwingJInternalFrame!=null) {
			this.jInternalFrameDetalleFormEstructura.empleadopagorubroBeanSwingJInternalFrame.setVisible(false);
			this.jInternalFrameDetalleFormEstructura.empleadopagorubroBeanSwingJInternalFrame.dispose();
			this.jInternalFrameDetalleFormEstructura.empleadopagorubroBeanSwingJInternalFrame=null;
		}

		if(this.jInternalFrameDetalleFormEstructura.empleadopagorubroBeanSwingJInternalFramePopup!=null) {
			this.jInternalFrameDetalleFormEstructura.empleadopagorubroBeanSwingJInternalFramePopup.setVisible(false);
			this.jInternalFrameDetalleFormEstructura.empleadopagorubroBeanSwingJInternalFramePopup.dispose();
			this.jInternalFrameDetalleFormEstructura.empleadopagorubroBeanSwingJInternalFramePopup=null;
		}

		if(this.jInternalFrameDetalleFormEstructura.provisionempleadoBeanSwingJInternalFrame!=null) {
			this.jInternalFrameDetalleFormEstructura.provisionempleadoBeanSwingJInternalFrame.setVisible(false);
			this.jInternalFrameDetalleFormEstructura.provisionempleadoBeanSwingJInternalFrame.dispose();
			this.jInternalFrameDetalleFormEstructura.provisionempleadoBeanSwingJInternalFrame=null;
		}

		if(this.jInternalFrameDetalleFormEstructura.provisionempleadoBeanSwingJInternalFramePopup!=null) {
			this.jInternalFrameDetalleFormEstructura.provisionempleadoBeanSwingJInternalFramePopup.setVisible(false);
			this.jInternalFrameDetalleFormEstructura.provisionempleadoBeanSwingJInternalFramePopup.dispose();
			this.jInternalFrameDetalleFormEstructura.provisionempleadoBeanSwingJInternalFramePopup=null;
		}

		if(this.jInternalFrameDetalleFormEstructura.empleadoBeanSwingJInternalFrame!=null) {
			this.jInternalFrameDetalleFormEstructura.empleadoBeanSwingJInternalFrame.setVisible(false);
			this.jInternalFrameDetalleFormEstructura.empleadoBeanSwingJInternalFrame.dispose();
			this.jInternalFrameDetalleFormEstructura.empleadoBeanSwingJInternalFrame=null;
		}

		if(this.jInternalFrameDetalleFormEstructura.empleadoBeanSwingJInternalFramePopup!=null) {
			this.jInternalFrameDetalleFormEstructura.empleadoBeanSwingJInternalFramePopup.setVisible(false);
			this.jInternalFrameDetalleFormEstructura.empleadoBeanSwingJInternalFramePopup.dispose();
			this.jInternalFrameDetalleFormEstructura.empleadoBeanSwingJInternalFramePopup=null;
		}

		if(this.jInternalFrameDetalleFormEstructura.estructuraBeanSwingJInternalFrame!=null) {
			this.jInternalFrameDetalleFormEstructura.estructuraBeanSwingJInternalFrame.setVisible(false);
			this.jInternalFrameDetalleFormEstructura.estructuraBeanSwingJInternalFrame.dispose();
			this.jInternalFrameDetalleFormEstructura.estructuraBeanSwingJInternalFrame=null;
		}

		if(this.jInternalFrameDetalleFormEstructura.estructuraBeanSwingJInternalFramePopup!=null) {
			this.jInternalFrameDetalleFormEstructura.estructuraBeanSwingJInternalFramePopup.setVisible(false);
			this.jInternalFrameDetalleFormEstructura.estructuraBeanSwingJInternalFramePopup.dispose();
			this.jInternalFrameDetalleFormEstructura.estructuraBeanSwingJInternalFramePopup=null;
		}

		if(this.jInternalFrameDetalleFormEstructura.evaluacionempleadoBeanSwingJInternalFrame!=null) {
			this.jInternalFrameDetalleFormEstructura.evaluacionempleadoBeanSwingJInternalFrame.setVisible(false);
			this.jInternalFrameDetalleFormEstructura.evaluacionempleadoBeanSwingJInternalFrame.dispose();
			this.jInternalFrameDetalleFormEstructura.evaluacionempleadoBeanSwingJInternalFrame=null;
		}

		if(this.jInternalFrameDetalleFormEstructura.evaluacionempleadoBeanSwingJInternalFramePopup!=null) {
			this.jInternalFrameDetalleFormEstructura.evaluacionempleadoBeanSwingJInternalFramePopup.setVisible(false);
			this.jInternalFrameDetalleFormEstructura.evaluacionempleadoBeanSwingJInternalFramePopup.dispose();
			this.jInternalFrameDetalleFormEstructura.evaluacionempleadoBeanSwingJInternalFramePopup=null;
		}

		if(this.jInternalFrameDetalleFormEstructura.empleadoimpuestorentaBeanSwingJInternalFrame!=null) {
			this.jInternalFrameDetalleFormEstructura.empleadoimpuestorentaBeanSwingJInternalFrame.setVisible(false);
			this.jInternalFrameDetalleFormEstructura.empleadoimpuestorentaBeanSwingJInternalFrame.dispose();
			this.jInternalFrameDetalleFormEstructura.empleadoimpuestorentaBeanSwingJInternalFrame=null;
		}

		if(this.jInternalFrameDetalleFormEstructura.empleadoimpuestorentaBeanSwingJInternalFramePopup!=null) {
			this.jInternalFrameDetalleFormEstructura.empleadoimpuestorentaBeanSwingJInternalFramePopup.setVisible(false);
			this.jInternalFrameDetalleFormEstructura.empleadoimpuestorentaBeanSwingJInternalFramePopup.dispose();
			this.jInternalFrameDetalleFormEstructura.empleadoimpuestorentaBeanSwingJInternalFramePopup=null;
		}

		if(this.jInternalFrameDetalleFormEstructura.rubroestructuraBeanSwingJInternalFrame!=null) {
			this.jInternalFrameDetalleFormEstructura.rubroestructuraBeanSwingJInternalFrame.setVisible(false);
			this.jInternalFrameDetalleFormEstructura.rubroestructuraBeanSwingJInternalFrame.dispose();
			this.jInternalFrameDetalleFormEstructura.rubroestructuraBeanSwingJInternalFrame=null;
		}

		if(this.jInternalFrameDetalleFormEstructura.rubroestructuraBeanSwingJInternalFramePopup!=null) {
			this.jInternalFrameDetalleFormEstructura.rubroestructuraBeanSwingJInternalFramePopup.setVisible(false);
			this.jInternalFrameDetalleFormEstructura.rubroestructuraBeanSwingJInternalFramePopup.dispose();
			this.jInternalFrameDetalleFormEstructura.rubroestructuraBeanSwingJInternalFramePopup=null;
		}

		if(this.jInternalFrameDetalleFormEstructura.cierrerolmensualBeanSwingJInternalFrame!=null) {
			this.jInternalFrameDetalleFormEstructura.cierrerolmensualBeanSwingJInternalFrame.setVisible(false);
			this.jInternalFrameDetalleFormEstructura.cierrerolmensualBeanSwingJInternalFrame.dispose();
			this.jInternalFrameDetalleFormEstructura.cierrerolmensualBeanSwingJInternalFrame=null;
		}

		if(this.jInternalFrameDetalleFormEstructura.cierrerolmensualBeanSwingJInternalFramePopup!=null) {
			this.jInternalFrameDetalleFormEstructura.cierrerolmensualBeanSwingJInternalFramePopup.setVisible(false);
			this.jInternalFrameDetalleFormEstructura.cierrerolmensualBeanSwingJInternalFramePopup.dispose();
			this.jInternalFrameDetalleFormEstructura.cierrerolmensualBeanSwingJInternalFramePopup=null;
		}

		if(this.jInternalFrameDetalleFormEstructura.formatonomiBeanSwingJInternalFrame!=null) {
			this.jInternalFrameDetalleFormEstructura.formatonomiBeanSwingJInternalFrame.setVisible(false);
			this.jInternalFrameDetalleFormEstructura.formatonomiBeanSwingJInternalFrame.dispose();
			this.jInternalFrameDetalleFormEstructura.formatonomiBeanSwingJInternalFrame=null;
		}

		if(this.jInternalFrameDetalleFormEstructura.formatonomiBeanSwingJInternalFramePopup!=null) {
			this.jInternalFrameDetalleFormEstructura.formatonomiBeanSwingJInternalFramePopup.setVisible(false);
			this.jInternalFrameDetalleFormEstructura.formatonomiBeanSwingJInternalFramePopup.dispose();
			this.jInternalFrameDetalleFormEstructura.formatonomiBeanSwingJInternalFramePopup=null;
		}

		if(this.jInternalFrameDetalleFormEstructura.empleadoestructuraBeanSwingJInternalFrame!=null) {
			this.jInternalFrameDetalleFormEstructura.empleadoestructuraBeanSwingJInternalFrame.setVisible(false);
			this.jInternalFrameDetalleFormEstructura.empleadoestructuraBeanSwingJInternalFrame.dispose();
			this.jInternalFrameDetalleFormEstructura.empleadoestructuraBeanSwingJInternalFrame=null;
		}

		if(this.jInternalFrameDetalleFormEstructura.empleadoestructuraBeanSwingJInternalFramePopup!=null) {
			this.jInternalFrameDetalleFormEstructura.empleadoestructuraBeanSwingJInternalFramePopup.setVisible(false);
			this.jInternalFrameDetalleFormEstructura.empleadoestructuraBeanSwingJInternalFramePopup.dispose();
			this.jInternalFrameDetalleFormEstructura.empleadoestructuraBeanSwingJInternalFramePopup=null;
		}

		if(this.jInternalFrameDetalleFormEstructura.historialpagonomiBeanSwingJInternalFrame!=null) {
			this.jInternalFrameDetalleFormEstructura.historialpagonomiBeanSwingJInternalFrame.setVisible(false);
			this.jInternalFrameDetalleFormEstructura.historialpagonomiBeanSwingJInternalFrame.dispose();
			this.jInternalFrameDetalleFormEstructura.historialpagonomiBeanSwingJInternalFrame=null;
		}

		if(this.jInternalFrameDetalleFormEstructura.historialpagonomiBeanSwingJInternalFramePopup!=null) {
			this.jInternalFrameDetalleFormEstructura.historialpagonomiBeanSwingJInternalFramePopup.setVisible(false);
			this.jInternalFrameDetalleFormEstructura.historialpagonomiBeanSwingJInternalFramePopup.dispose();
			this.jInternalFrameDetalleFormEstructura.historialpagonomiBeanSwingJInternalFramePopup=null;
		}

		if(this.jInternalFrameDetalleFormEstructura.asistenciadiariaBeanSwingJInternalFrame!=null) {
			this.jInternalFrameDetalleFormEstructura.asistenciadiariaBeanSwingJInternalFrame.setVisible(false);
			this.jInternalFrameDetalleFormEstructura.asistenciadiariaBeanSwingJInternalFrame.dispose();
			this.jInternalFrameDetalleFormEstructura.asistenciadiariaBeanSwingJInternalFrame=null;
		}

		if(this.jInternalFrameDetalleFormEstructura.asistenciadiariaBeanSwingJInternalFramePopup!=null) {
			this.jInternalFrameDetalleFormEstructura.asistenciadiariaBeanSwingJInternalFramePopup.setVisible(false);
			this.jInternalFrameDetalleFormEstructura.asistenciadiariaBeanSwingJInternalFramePopup.dispose();
			this.jInternalFrameDetalleFormEstructura.asistenciadiariaBeanSwingJInternalFramePopup=null;
		}

		if(this.jInternalFrameDetalleFormEstructura.funcionestrucBeanSwingJInternalFrame!=null) {
			this.jInternalFrameDetalleFormEstructura.funcionestrucBeanSwingJInternalFrame.setVisible(false);
			this.jInternalFrameDetalleFormEstructura.funcionestrucBeanSwingJInternalFrame.dispose();
			this.jInternalFrameDetalleFormEstructura.funcionestrucBeanSwingJInternalFrame=null;
		}

		if(this.jInternalFrameDetalleFormEstructura.funcionestrucBeanSwingJInternalFramePopup!=null) {
			this.jInternalFrameDetalleFormEstructura.funcionestrucBeanSwingJInternalFramePopup.setVisible(false);
			this.jInternalFrameDetalleFormEstructura.funcionestrucBeanSwingJInternalFramePopup.dispose();
			this.jInternalFrameDetalleFormEstructura.funcionestrucBeanSwingJInternalFramePopup=null;
		}

		if(this.jInternalFrameDetalleFormEstructura.solicitudreemplazoBeanSwingJInternalFrame!=null) {
			this.jInternalFrameDetalleFormEstructura.solicitudreemplazoBeanSwingJInternalFrame.setVisible(false);
			this.jInternalFrameDetalleFormEstructura.solicitudreemplazoBeanSwingJInternalFrame.dispose();
			this.jInternalFrameDetalleFormEstructura.solicitudreemplazoBeanSwingJInternalFrame=null;
		}

		if(this.jInternalFrameDetalleFormEstructura.solicitudreemplazoBeanSwingJInternalFramePopup!=null) {
			this.jInternalFrameDetalleFormEstructura.solicitudreemplazoBeanSwingJInternalFramePopup.setVisible(false);
			this.jInternalFrameDetalleFormEstructura.solicitudreemplazoBeanSwingJInternalFramePopup.dispose();
			this.jInternalFrameDetalleFormEstructura.solicitudreemplazoBeanSwingJInternalFramePopup=null;
		}

		if(this.jInternalFrameDetalleFormEstructura.solicitudhoraextraBeanSwingJInternalFrame!=null) {
			this.jInternalFrameDetalleFormEstructura.solicitudhoraextraBeanSwingJInternalFrame.setVisible(false);
			this.jInternalFrameDetalleFormEstructura.solicitudhoraextraBeanSwingJInternalFrame.dispose();
			this.jInternalFrameDetalleFormEstructura.solicitudhoraextraBeanSwingJInternalFrame=null;
		}

		if(this.jInternalFrameDetalleFormEstructura.solicitudhoraextraBeanSwingJInternalFramePopup!=null) {
			this.jInternalFrameDetalleFormEstructura.solicitudhoraextraBeanSwingJInternalFramePopup.setVisible(false);
			this.jInternalFrameDetalleFormEstructura.solicitudhoraextraBeanSwingJInternalFramePopup.dispose();
			this.jInternalFrameDetalleFormEstructura.solicitudhoraextraBeanSwingJInternalFramePopup=null;
		}

		if(this.jInternalFrameDetalleFormEstructura.evaluacionnomiBeanSwingJInternalFrame!=null) {
			this.jInternalFrameDetalleFormEstructura.evaluacionnomiBeanSwingJInternalFrame.setVisible(false);
			this.jInternalFrameDetalleFormEstructura.evaluacionnomiBeanSwingJInternalFrame.dispose();
			this.jInternalFrameDetalleFormEstructura.evaluacionnomiBeanSwingJInternalFrame=null;
		}

		if(this.jInternalFrameDetalleFormEstructura.evaluacionnomiBeanSwingJInternalFramePopup!=null) {
			this.jInternalFrameDetalleFormEstructura.evaluacionnomiBeanSwingJInternalFramePopup.setVisible(false);
			this.jInternalFrameDetalleFormEstructura.evaluacionnomiBeanSwingJInternalFramePopup.dispose();
			this.jInternalFrameDetalleFormEstructura.evaluacionnomiBeanSwingJInternalFramePopup=null;
		}

		if(this.jInternalFrameDetalleFormEstructura.solicitudvacacionBeanSwingJInternalFrame!=null) {
			this.jInternalFrameDetalleFormEstructura.solicitudvacacionBeanSwingJInternalFrame.setVisible(false);
			this.jInternalFrameDetalleFormEstructura.solicitudvacacionBeanSwingJInternalFrame.dispose();
			this.jInternalFrameDetalleFormEstructura.solicitudvacacionBeanSwingJInternalFrame=null;
		}

		if(this.jInternalFrameDetalleFormEstructura.solicitudvacacionBeanSwingJInternalFramePopup!=null) {
			this.jInternalFrameDetalleFormEstructura.solicitudvacacionBeanSwingJInternalFramePopup.setVisible(false);
			this.jInternalFrameDetalleFormEstructura.solicitudvacacionBeanSwingJInternalFramePopup.dispose();
			this.jInternalFrameDetalleFormEstructura.solicitudvacacionBeanSwingJInternalFramePopup=null;
		}

		if(this.jInternalFrameDetalleFormEstructura.responsableactivofijoBeanSwingJInternalFrame!=null) {
			this.jInternalFrameDetalleFormEstructura.responsableactivofijoBeanSwingJInternalFrame.setVisible(false);
			this.jInternalFrameDetalleFormEstructura.responsableactivofijoBeanSwingJInternalFrame.dispose();
			this.jInternalFrameDetalleFormEstructura.responsableactivofijoBeanSwingJInternalFrame=null;
		}

		if(this.jInternalFrameDetalleFormEstructura.responsableactivofijoBeanSwingJInternalFramePopup!=null) {
			this.jInternalFrameDetalleFormEstructura.responsableactivofijoBeanSwingJInternalFramePopup.setVisible(false);
			this.jInternalFrameDetalleFormEstructura.responsableactivofijoBeanSwingJInternalFramePopup.dispose();
			this.jInternalFrameDetalleFormEstructura.responsableactivofijoBeanSwingJInternalFramePopup=null;
		}

		if(this.jInternalFrameDetalleFormEstructura.rubroempleacuentacontableBeanSwingJInternalFrame!=null) {
			this.jInternalFrameDetalleFormEstructura.rubroempleacuentacontableBeanSwingJInternalFrame.setVisible(false);
			this.jInternalFrameDetalleFormEstructura.rubroempleacuentacontableBeanSwingJInternalFrame.dispose();
			this.jInternalFrameDetalleFormEstructura.rubroempleacuentacontableBeanSwingJInternalFrame=null;
		}

		if(this.jInternalFrameDetalleFormEstructura.rubroempleacuentacontableBeanSwingJInternalFramePopup!=null) {
			this.jInternalFrameDetalleFormEstructura.rubroempleacuentacontableBeanSwingJInternalFramePopup.setVisible(false);
			this.jInternalFrameDetalleFormEstructura.rubroempleacuentacontableBeanSwingJInternalFramePopup.dispose();
			this.jInternalFrameDetalleFormEstructura.rubroempleacuentacontableBeanSwingJInternalFramePopup=null;
		}	
		
		
		}
		
		if(this.jInternalFrameDetalleFormEstructura!=null) {
			this.jInternalFrameDetalleFormEstructura.setVisible(false);	    			
			this.jInternalFrameDetalleFormEstructura.dispose();
			this.jInternalFrameDetalleFormEstructura=null;
		}
		
		
		if(this.jInternalFrameReporteDinamicoEstructura!=null) {
			this.jInternalFrameReporteDinamicoEstructura.setVisible(false);	    			
			this.jInternalFrameReporteDinamicoEstructura.dispose();
			this.jInternalFrameReporteDinamicoEstructura=null;
		}
		
		if(this.jInternalFrameImportacionEstructura!=null) {
			this.jInternalFrameImportacionEstructura.setVisible(false);	    			
			this.jInternalFrameImportacionEstructura.dispose();
			this.jInternalFrameImportacionEstructura=null;
		}		
		
		
		this.setVisible(false);
		this.dispose();
		//this=null;
	}
	
	public void closingTreeFrameEstructura() {
		
		if(this.jInternalFrameTreeEstructura!=null) {
			this.jInternalFrameTreeEstructura.setVisible(false);	    			
			this.jInternalFrameTreeEstructura.dispose();
			this.jInternalFrameTreeEstructura=null;
		}
		
		this.setVisible(false);
		this.dispose();
		//this=null;
	}
	
	
	public void jButtonActionPerformedGeneral(String sTipo,ActionEvent evt) { 	  
		try {			
			this.startProcessEstructura();
			
			EstructuraBeanSwingJInternalFrameAdditional.procesarEventosVista(this.parametroGeneralUsuario,this.moduloActual,this.opcionActual,this.usuarioActual,this,FuncionTipo.BEFORE,ControlTipo.BUTTON,EventoTipo.CLIC,EventoSubTipo.CLICKED,sTipo,this.estructura,new Object(),this.estructuraParameterGeneral,this.estructuraReturnGeneral);
			
			
			if(sTipo.equals("NuevoEstructura")) {
				jButtonNuevoEstructuraActionPerformed(evt,false);
			} else if(sTipo.equals("DuplicarEstructura")) {
				jButtonDuplicarEstructuraActionPerformed(evt,false);
			} else if(sTipo.equals("CopiarEstructura")) {
				jButtonCopiarEstructuraActionPerformed(evt);
			} else if(sTipo.equals("VerFormEstructura")) {
				jButtonVerFormEstructuraActionPerformed(evt);
			} else if(sTipo.equals("NuevoToolBarEstructura")) {
				jButtonNuevoEstructuraActionPerformed(evt,false);
			} else if(sTipo.equals("DuplicarToolBarEstructura")) {
				jButtonDuplicarEstructuraActionPerformed(evt,false);
			} else if(sTipo.equals("MenuItemNuevoEstructura")) {
				jButtonNuevoEstructuraActionPerformed(evt,false);
			} else if(sTipo.equals("MenuItemDuplicarEstructura")) {
				jButtonDuplicarEstructuraActionPerformed(evt,false);
			} else if(sTipo.equals("NuevoRelacionesEstructura")) {
				jButtonNuevoEstructuraActionPerformed(evt,true);
			} else if(sTipo.equals("NuevoRelacionesToolBarEstructura")) {
				jButtonNuevoEstructuraActionPerformed(evt,true);
			} else if(sTipo.equals("MenuItemNuevoRelacionesEstructura")) {
				jButtonNuevoEstructuraActionPerformed(evt,true);
			} else if(sTipo.equals("ModificarEstructura")) {
				jButtonModificarEstructuraActionPerformed(evt);
			} else if(sTipo.equals("ModificarToolBarEstructura")) {
				jButtonModificarEstructuraActionPerformed(evt);
			} else if(sTipo.equals("MenuItemModificarEstructura")) {
				jButtonModificarEstructuraActionPerformed(evt);
			} else if(sTipo.equals("ActualizarEstructura")) {
				jButtonActualizarEstructuraActionPerformed(evt);
			} else if(sTipo.equals("ActualizarToolBarEstructura")) {
				jButtonActualizarEstructuraActionPerformed(evt);
			} else if(sTipo.equals("MenuItemActualizarEstructura")) {
				jButtonActualizarEstructuraActionPerformed(evt);
			} else if(sTipo.equals("EliminarEstructura")) {
				jButtonEliminarEstructuraActionPerformed(evt);
			} else if(sTipo.equals("EliminarToolBarEstructura")) {
				jButtonEliminarEstructuraActionPerformed(evt);
			} else if(sTipo.equals("MenuItemEliminarEstructura")) {
				jButtonEliminarEstructuraActionPerformed(evt);
			} else if(sTipo.equals("CancelarEstructura")) {
				jButtonCancelarEstructuraActionPerformed(evt);
			} else if(sTipo.equals("CancelarToolBarEstructura")) {
				jButtonCancelarEstructuraActionPerformed(evt);
			} else if(sTipo.equals("MenuItemCancelarEstructura")) {
				jButtonCancelarEstructuraActionPerformed(evt);
			} else if(sTipo.equals("CerrarEstructura")) {
				jButtonCerrarEstructuraActionPerformed(evt);
			} else if(sTipo.equals("CerrarToolBarEstructura")) {
				jButtonCerrarEstructuraActionPerformed(evt);
			} else if(sTipo.equals("MenuItemCerrarEstructura")) {
				jButtonCerrarEstructuraActionPerformed(evt);
			} else if(sTipo.equals("MostrarOcultarToolBarEstructura")) {
				jButtonMostrarOcultarEstructuraActionPerformed(evt);
			} else if(sTipo.equals("MenuItemDetalleCerrarEstructura")) {
				jButtonCancelarEstructuraActionPerformed(evt);
			} else if(sTipo.equals("GuardarCambiosEstructura")) {
				jButtonGuardarCambiosEstructuraActionPerformed(evt);
			} else if(sTipo.equals("GuardarCambiosToolBarEstructura")) {
				jButtonGuardarCambiosEstructuraActionPerformed(evt);
			} else if(sTipo.equals("CopiarToolBarEstructura")) {
				jButtonCopiarEstructuraActionPerformed(evt);
			} else if(sTipo.equals("VerFormToolBarEstructura")) {
				jButtonVerFormEstructuraActionPerformed(evt);
			} else if(sTipo.equals("MenuItemGuardarCambiosEstructura")) {
				jButtonGuardarCambiosEstructuraActionPerformed(evt);
			} else if(sTipo.equals("MenuItemCopiarEstructura")) {
				jButtonCopiarEstructuraActionPerformed(evt);
			} else if(sTipo.equals("MenuItemVerFormEstructura")) {
				jButtonVerFormEstructuraActionPerformed(evt);
			} else if(sTipo.equals("GuardarCambiosTablaEstructura")) {
				jButtonGuardarCambiosEstructuraActionPerformed(evt);
			} else if(sTipo.equals("GuardarCambiosTablaToolBarEstructura")) {
				jButtonGuardarCambiosEstructuraActionPerformed(evt);
			} else if(sTipo.equals("MenuItemGuardarCambiosTablaEstructura")) {
				jButtonGuardarCambiosEstructuraActionPerformed(evt);
			} else if(sTipo.equals("RecargarInformacionEstructura")) {
				jButtonRecargarInformacionEstructuraActionPerformed(evt);
			} else if(sTipo.equals("RecargarInformacionToolBarEstructura")) {
				jButtonRecargarInformacionEstructuraActionPerformed(evt);
			} else if(sTipo.equals("MenuItemRecargarInformacionEstructura")) {
				jButtonRecargarInformacionEstructuraActionPerformed(evt);
			}
			else if(sTipo.equals("ArbolEstructura")) {
				jButtonArbolEstructuraActionPerformed(evt);
			} 
			else if(sTipo.equals("AnterioresEstructura")) {
				jButtonAnterioresEstructuraActionPerformed(evt);
			} else if(sTipo.equals("AnterioresToolBarEstructura")) {
				jButtonAnterioresEstructuraActionPerformed(evt);
			} else if(sTipo.equals("MenuItemAnterioreEstructura")) {
				jButtonAnterioresEstructuraActionPerformed(evt);
			} else if(sTipo.equals("SiguientesEstructura")) {
				jButtonSiguientesEstructuraActionPerformed(evt);
			} else if(sTipo.equals("SiguientesToolBarEstructura")) {
				jButtonSiguientesEstructuraActionPerformed(evt);
			} else if(sTipo.equals("MenuItemSiguientesEstructura")) {
				jButtonSiguientesEstructuraActionPerformed(evt);
			} else if(sTipo.equals("MenuItemAbrirOrderByEstructura") || sTipo.equals("MenuItemDetalleAbrirOrderByEstructura")) {
				jButtonAbrirOrderByEstructuraActionPerformed(evt);
			} else if(sTipo.equals("MenuItemMostrarOcultarEstructura") || sTipo.equals("MenuItemDetalleMostrarOcultarEstructura")) {
				jButtonMostrarOcultarEstructuraActionPerformed(evt);
			} else if(sTipo.equals("NuevoGuardarCambiosEstructura")) {
				jButtonNuevoGuardarCambiosEstructuraActionPerformed(evt);
			} else if(sTipo.equals("NuevoGuardarCambiosToolBarEstructura")) {
				jButtonNuevoGuardarCambiosEstructuraActionPerformed(evt);
			} else if(sTipo.equals("MenuItemNuevoGuardarCambiosEstructura")) {
				jButtonNuevoGuardarCambiosEstructuraActionPerformed(evt);
			} 
			else if(sTipo.equals("CerrarReporteDinamicoEstructura")) {
				jButtonCerrarReporteDinamicoEstructuraActionPerformed(evt);
			} else if(sTipo.equals("GenerarReporteDinamicoEstructura")) {
				jButtonGenerarReporteDinamicoEstructuraActionPerformed(evt);
			} else if(sTipo.equals("GenerarExcelReporteDinamicoEstructura")) {
				
				jButtonGenerarExcelReporteDinamicoEstructuraActionPerformed(evt);
				
			} else if(sTipo.equals("CerrarImportacionEstructura")) {
				jButtonCerrarImportacionEstructuraActionPerformed(evt);
			} else if(sTipo.equals("GenerarImportacionEstructura")) {
				
				jButtonGenerarImportacionEstructuraActionPerformed(evt);
				
			} else if(sTipo.equals("AbrirImportacionEstructura")) {
				
				jButtonAbrirImportacionEstructuraActionPerformed(evt);
				
			} else if(sTipo.equals("TiposAccionesEstructura")) {
				jComboBoxTiposAccionesEstructuraActionListener(evt,false);
			} else if(sTipo.equals("TiposRelacionesEstructura")) {
				jComboBoxTiposRelacionesEstructuraActionListener(evt);
			} else if(sTipo.equals("TiposAccionesFormularioEstructura")) {
				jComboBoxTiposAccionesEstructuraActionListener(evt,true);
			} else if(sTipo.equals("TiposSeleccionarEstructura")) {
				
				jComboBoxTiposSeleccionarEstructuraActionListener(evt);
				
			} else if(sTipo.equals("ValorCampoGeneralEstructura")) {
				jTextFieldValorCampoGeneralEstructuraActionListener(evt);
			}
			
			
			else if(sTipo.equals("AbrirOrderByEstructura")) {
				jButtonAbrirOrderByEstructuraActionPerformed(evt);
				
			} else if(sTipo.equals("AbrirOrderByToolBarEstructura")) {
				jButtonAbrirOrderByEstructuraActionPerformed(evt);
				
			} else if(sTipo.equals("CerrarOrderByEstructura")) {
				jButtonCerrarOrderByEstructuraActionPerformed(evt);
			} 
						
			
			//BUSQUEDA GENERAL CAMPO
			else if(sTipo.equals("idEstructuraBusqueda")) {
				this.jButtonidEstructuraBusquedaActionPerformed(evt);
			}
			//ACTUALIZAR CAMPO
			else if(sTipo.equals("id_empresaEstructuraUpdate")) {
				this.jButtonid_empresaEstructuraUpdateActionPerformed(evt);
			}
			//BUSQUEDA GENERAL CAMPO
			else if(sTipo.equals("id_empresaEstructuraBusqueda")) {
				this.jButtonid_empresaEstructuraBusquedaActionPerformed(evt);
			}
			//ACTUALIZAR CAMPO
			else if(sTipo.equals("id_sucursalEstructuraUpdate")) {
				this.jButtonid_sucursalEstructuraUpdateActionPerformed(evt);
			}
			//BUSQUEDA GENERAL CAMPO
			else if(sTipo.equals("id_sucursalEstructuraBusqueda")) {
				this.jButtonid_sucursalEstructuraBusquedaActionPerformed(evt);
			}
			//ACTUALIZAR CAMPO
			else if(sTipo.equals("id_estructuraEstructuraUpdate")) {
				this.jButtonid_estructuraEstructuraUpdateActionPerformed(evt);
			}
			//BUSQUEDA GENERAL CAMPO
			else if(sTipo.equals("id_estructuraEstructuraBusqueda")) {
				this.jButtonid_estructuraEstructuraBusquedaActionPerformed(evt);
			}
			//ACTUALIZAR CAMPO
			else if(sTipo.equals("id_tipo_pago__n_mEstructuraUpdate")) {
				this.jButtonid_tipo_pago__n_mEstructuraUpdateActionPerformed(evt);
			}
			//BUSQUEDA GENERAL CAMPO
			else if(sTipo.equals("id_tipo_pago__n_mEstructuraBusqueda")) {
				this.jButtonid_tipo_pago__n_mEstructuraBusquedaActionPerformed(evt);
			}
			//ACTUALIZAR CAMPO
			else if(sTipo.equals("id_numero_patronalEstructuraUpdate")) {
				this.jButtonid_numero_patronalEstructuraUpdateActionPerformed(evt);
			}
			//BUSQUEDA GENERAL CAMPO
			else if(sTipo.equals("id_numero_patronalEstructuraBusqueda")) {
				this.jButtonid_numero_patronalEstructuraBusquedaActionPerformed(evt);
			}
			//BUSQUEDA CAMPO
			else if(sTipo.equals("id_cuenta_contableEstructura")) {
				this.jButtonid_cuenta_contableEstructuraActionPerformed(evt);
			}
			//BUSQUEDA ARBOL CAMPO
			else if(sTipo.equals("id_cuenta_contableEstructuraArbol")) {
				this.abrirFrameTreeCuentaContable("BUSQUEDA_FK");
			}
			//ACTUALIZAR CAMPO
			else if(sTipo.equals("id_cuenta_contableEstructuraUpdate")) {
				this.jButtonid_cuenta_contableEstructuraUpdateActionPerformed(evt);
			}
			//BUSQUEDA GENERAL CAMPO
			else if(sTipo.equals("id_cuenta_contableEstructuraBusqueda")) {
				this.jButtonid_cuenta_contableEstructuraBusquedaActionPerformed(evt);
			}
			//ACTUALIZAR CAMPO
			else if(sTipo.equals("id_tipo_estructuraEstructuraUpdate")) {
				this.jButtonid_tipo_estructuraEstructuraUpdateActionPerformed(evt);
			}
			//BUSQUEDA GENERAL CAMPO
			else if(sTipo.equals("id_tipo_estructuraEstructuraBusqueda")) {
				this.jButtonid_tipo_estructuraEstructuraBusquedaActionPerformed(evt);
			}
			//ACTUALIZAR CAMPO
			else if(sTipo.equals("id_paisEstructuraUpdate")) {
				this.jButtonid_paisEstructuraUpdateActionPerformed(evt);
			}
			//BUSQUEDA GENERAL CAMPO
			else if(sTipo.equals("id_paisEstructuraBusqueda")) {
				this.jButtonid_paisEstructuraBusquedaActionPerformed(evt);
			}
			//ACTUALIZAR CAMPO
			else if(sTipo.equals("id_ciudadEstructuraUpdate")) {
				this.jButtonid_ciudadEstructuraUpdateActionPerformed(evt);
			}
			//BUSQUEDA GENERAL CAMPO
			else if(sTipo.equals("id_ciudadEstructuraBusqueda")) {
				this.jButtonid_ciudadEstructuraBusquedaActionPerformed(evt);
			}
			//BUSQUEDA GENERAL CAMPO
			else if(sTipo.equals("codigoEstructuraBusqueda")) {
				this.jButtoncodigoEstructuraBusquedaActionPerformed(evt);
			}
			//BUSQUEDA GENERAL CAMPO
			else if(sTipo.equals("numeroEstructuraBusqueda")) {
				this.jButtonnumeroEstructuraBusquedaActionPerformed(evt);
			}
			//BUSQUEDA GENERAL CAMPO
			else if(sTipo.equals("valor_anticipoEstructuraBusqueda")) {
				this.jButtonvalor_anticipoEstructuraBusquedaActionPerformed(evt);
			}
			//BUSQUEDA GENERAL CAMPO
			else if(sTipo.equals("porcentaje_anticipoEstructuraBusqueda")) {
				this.jButtonporcentaje_anticipoEstructuraBusquedaActionPerformed(evt);
			}
			//BUSQUEDA GENERAL CAMPO
			else if(sTipo.equals("nombreEstructuraBusqueda")) {
				this.jButtonnombreEstructuraBusquedaActionPerformed(evt);
			}
			//BUSQUEDA GENERAL CAMPO
			else if(sTipo.equals("es_jefeEstructuraBusqueda")) {
				this.jButtones_jefeEstructuraBusquedaActionPerformed(evt);
			}
			//BUSQUEDA GENERAL CAMPO
			else if(sTipo.equals("es_anualEstructuraBusqueda")) {
				this.jButtones_anualEstructuraBusquedaActionPerformed(evt);
			}
			//BUSQUEDA GENERAL CAMPO
			else if(sTipo.equals("porcentajeEstructuraBusqueda")) {
				this.jButtonporcentajeEstructuraBusquedaActionPerformed(evt);
			}
			//BUSQUEDA GENERAL CAMPO
			else if(sTipo.equals("valorEstructuraBusqueda")) {
				this.jButtonvalorEstructuraBusquedaActionPerformed(evt);
			}
			
			
			else if(sTipo.equals("id_cuenta_contableEstructura")) {
				this.jButtonid_cuenta_contableEstructuraActionPerformed(evt);
			}
			
			
			else if(sTipo.equals("FK_IdCiudadEstructura")) {
				this.jButtonFK_IdCiudadEstructuraActionPerformed(evt);
			}
			else if(sTipo.equals("FK_IdCuentaContableEstructura")) {
				this.jButtonFK_IdCuentaContableEstructuraActionPerformed(evt);
			}
			else if(sTipo.equals("FK_IdEstructuraEstructura")) {
				this.jButtonFK_IdEstructuraEstructuraActionPerformed(evt);
			}
			else if(sTipo.equals("FK_IdNumeroPatronalEstructura")) {
				this.jButtonFK_IdNumeroPatronalEstructuraActionPerformed(evt);
			}
			else if(sTipo.equals("FK_IdPaisEstructura")) {
				this.jButtonFK_IdPaisEstructuraActionPerformed(evt);
			}
			else if(sTipo.equals("FK_IdTipoEstructuraEstructura")) {
				this.jButtonFK_IdTipoEstructuraEstructuraActionPerformed(evt);
			}
			else if(sTipo.equals("FK_IdTipoPago_NMEstructura")) {
				this.jButtonFK_IdTipoPago_NMEstructuraActionPerformed(evt);
			}
			
			;
			
			
			EstructuraBeanSwingJInternalFrameAdditional.procesarEventosVista(this.parametroGeneralUsuario,this.moduloActual,this.opcionActual,this.usuarioActual,this,FuncionTipo.AFTER,ControlTipo.BUTTON,EventoTipo.CLIC,EventoSubTipo.CLICKED,sTipo,this.estructura,new Object(),this.estructuraParameterGeneral,this.estructuraReturnGeneral);
			
		} catch(Exception e) {
  			FuncionesSwing.manageException2(this, e,logger,EstructuraConstantesFunciones.CLASSNAME);
			
  		} finally {
      		this.finishProcessEstructura();
      	}
    }
	
	//FUNCIONA AL APLASTAR ENTER
	public void jTextFieldActionPerformedGeneral(String sTipo,ActionEvent evt) { 	  
		try {
			if(this.permiteManejarEventosControl()) {
				//SELECCIONA FILA A OBJETO ACTUAL			
				this.seleccionarFilaTablaEstructuraActual();
			
				EventoGlobalTipo eventoGlobalTipo=EventoGlobalTipo.CONTROL_CHANGE;
				
				Boolean esControlTabla=false;
				Container containerParent=null;
				JTextField jTextField=null;
				
				
				//PARAMETROS LLAMAR FUNCION PARENT
				GeneralEntityParameterGeneral generalEntityParameterGeneral=new GeneralEntityParameterGeneral();			
				Boolean esUsoDesdeHijoLocal=false;
				Boolean conIrServidorAplicacionParent=false;	
				ArrayList<String> arrClasses=new ArrayList<String>();			
				//PARAMETROS LLAMAR FUNCION PARENT_FIN
				
				/*
				if(this.esUsoDesdeHijo) {
					eventoGlobalTipo=EventoGlobalTipo.FORM_HIJO_ACTUALIZAR;
				}
				*/
				
				ArrayList<Classe> classes=new ArrayList<Classe>();
				
				jTextField=(JTextField)evt.getSource();
				
				containerParent=jTextField.getParent();
						
				if(containerParent!=null && containerParent.getClass().equals(JTableMe.class)) {
					esControlTabla=true;
				}
						
				this.esControlTabla=esControlTabla;
				
				
				this.actualizarInformacion("EVENTO_CONTROL",false,this.estructura);
				
				this.actualizarInformacion("INFO_PADRE",false,this.estructura);
				
				EstructuraBeanSwingJInternalFrameAdditional.procesarEventosVista(this.parametroGeneralUsuario,this.moduloActual,this.opcionActual,this.usuarioActual,this,FuncionTipo.BEFORE,ControlTipo.TEXTBOX,EventoTipo.CHANGE,EventoSubTipo.CHANGED,sTipo,this.estructura,new Object(),this.estructuraParameterGeneral,this.estructuraReturnGeneral);
				
				


				
				EstructuraBeanSwingJInternalFrameAdditional.procesarEventosVista(this.parametroGeneralUsuario,this.moduloActual,this.opcionActual,this.usuarioActual,this,FuncionTipo.AFTER,ControlTipo.TEXTBOX,EventoTipo.CHANGE,EventoSubTipo.CHANGED,sTipo,this.estructura,new Object(),this.estructuraParameterGeneral,this.estructuraReturnGeneral);
				
				
				if(esUsoDesdeHijoLocal) {
					Long id=0L;
					
					generalEntityParameterGeneral.setEventoGlobalTipo(EventoGlobalTipo.FORM_HIJO_ACTUALIZAR);
					generalEntityParameterGeneral.setsDominio("Formulario");
					generalEntityParameterGeneral.setsDominioTipo(Estructura.class.getName());
					
					if(this.jInternalFrameParent!=null) {
						this.jInternalFrameParent.setEventoParentGeneral(esUsoDesdeHijoLocal,"Formulario",Estructura.class.getName(),sTipo,"TEXTFIELD",esControlTabla,conIrServidorAplicacionParent,
							id,jTextField, EventoGlobalTipo.FORM_HIJO_ACTUALIZAR,ControlTipo.TEXTBOX,EventoTipo.CHANGE,EventoSubTipo.CHANGED,arrClasses,
							evt,generalEntityParameterGeneral,null);
					}
				}			
				}
				
			} catch(Exception e) {
  				FuncionesSwing.manageException2(this, e,logger,EstructuraConstantesFunciones.CLASSNAME);
  			}
    }
	
	public Boolean existeCambioValor(ControlTipo controlTipo,String sTipo) throws Exception {
		Boolean existeCambio=true;
		
		try {
			Estructura estructuraLocal=null;
			
			if(!this.getEsControlTabla()) {
				estructuraLocal=this.estructura;
			} else {
				estructuraLocal=this.estructuraAnterior;
			}
			
			if(controlTipo.equals(ControlTipo.TEXTBOX)) {
				


			}
		
		} catch(Exception e) {
  			FuncionesSwing.manageException2(this, e,logger,EstructuraConstantesFunciones.CLASSNAME);
  		}
		
		return existeCambio;
	}
	
	public void jTextFieldFocusLostGeneral(String sTipo,java.awt.event.FocusEvent evt) { 	  
		try {
			if(this.permiteManejarEventosControl() && this.existeCambioValor(ControlTipo.TEXTBOX,sTipo)) {
				
				EventoGlobalTipo eventoGlobalTipo=EventoGlobalTipo.CONTROL_CHANGE;
				
				Boolean esControlTabla=false;
				JTextField jTextField=null;
				Container containerParent=null;
				Component componentOpposite=null;
				
				//PARAMETROS LLAMAR FUNCION PARENT
				GeneralEntityParameterGeneral generalEntityParameterGeneral=new GeneralEntityParameterGeneral();			
				Boolean esUsoDesdeHijoLocal=false;
				Boolean conIrServidorAplicacionParent=false;	
				ArrayList<String> arrClasses=new ArrayList<String>();			
				//PARAMETROS LLAMAR FUNCION PARENT_FIN
				
				/*
				if(this.esUsoDesdeHijo) {
					eventoGlobalTipo=EventoGlobalTipo.FORM_HIJO_ACTUALIZAR;
				}
				*/
				
				ArrayList<Classe> classes=new ArrayList<Classe>();
				
				jTextField=(JTextField)evt.getSource();
				
				containerParent=jTextField.getParent();
						
				componentOpposite=evt.getOppositeComponent();
				
				if((containerParent!=null && containerParent.getClass().equals(JTableMe.class))
					|| (componentOpposite!=null && componentOpposite.getClass().equals(JTableMe.class))
				) {					
					esControlTabla=true;
				}
				
				this.esControlTabla=esControlTabla;
				
				
				this.actualizarInformacion("EVENTO_CONTROL",false,this.estructura);
				
				this.actualizarInformacion("INFO_PADRE",false,this.estructura);
				
				EstructuraBeanSwingJInternalFrameAdditional.procesarEventosVista(this.parametroGeneralUsuario,this.moduloActual,this.opcionActual,this.usuarioActual,this,FuncionTipo.BEFORE,ControlTipo.TEXTBOX,EventoTipo.CHANGE,EventoSubTipo.CHANGED,sTipo,this.estructura,new Object(),this.estructuraParameterGeneral,this.estructuraReturnGeneral);
							
				
				


				
				EstructuraBeanSwingJInternalFrameAdditional.procesarEventosVista(this.parametroGeneralUsuario,this.moduloActual,this.opcionActual,this.usuarioActual,this,FuncionTipo.AFTER,ControlTipo.TEXTBOX,EventoTipo.CHANGE,EventoSubTipo.CHANGED,sTipo,this.estructura,new Object(),this.estructuraParameterGeneral,this.estructuraReturnGeneral);
				
				
				if(esUsoDesdeHijoLocal) {
					Long id=0L;
					
					generalEntityParameterGeneral.setEventoGlobalTipo(EventoGlobalTipo.FORM_HIJO_ACTUALIZAR);
					generalEntityParameterGeneral.setsDominio("Formulario");
					generalEntityParameterGeneral.setsDominioTipo(Estructura.class.getName());
					
					if(this.jInternalFrameParent!=null) {
						this.jInternalFrameParent.setEventoParentGeneral(esUsoDesdeHijoLocal,"Formulario",Estructura.class.getName(),sTipo,"TEXTFIELD",esControlTabla,conIrServidorAplicacionParent,
							id,jTextField, EventoGlobalTipo.FORM_HIJO_ACTUALIZAR,ControlTipo.TEXTBOX,EventoTipo.CHANGE,EventoSubTipo.CHANGED,arrClasses,
							evt,generalEntityParameterGeneral,null);
					}
				}			
			}
			
		} catch(Exception e) {
  			FuncionesSwing.manageException2(this, e,logger,EstructuraConstantesFunciones.CLASSNAME);
  		}
    }
	
	public void jTextFieldFocusGainedGeneral(String sTipo,java.awt.event.FocusEvent evt) { 	  
		try {
			//SELECCIONA FILA A OBJETO ACTUAL			
			this.seleccionarFilaTablaEstructuraActual();
			
			//SELECCIONA FILA A OBJETO ANTERIOR
			Integer intSelectedRow = this.jTableDatosEstructura.getSelectedRow();
					
			if(intSelectedRow!=null && intSelectedRow>-1) {
				//ARCHITECTURE
				if(Constantes.ISUSAEJBLOGICLAYER) {
					this.estructuraAnterior =(Estructura) this.estructuraLogic.getEstructuras().toArray()[this.jTableDatosEstructura.convertRowIndexToModel(intSelectedRow)];
				} else if(Constantes.ISUSAEJBREMOTE || Constantes.ISUSAEJBHOME ) {
					this.estructuraAnterior =(Estructura) this.estructuras.toArray()[this.jTableDatosEstructura.convertRowIndexToModel(intSelectedRow)];
				}
				//ARCHITECTURE
				
				//System.out.println(this.banco);
			}
			
		} catch(Exception e) {
  			FuncionesSwing.manageException2(this, e,logger,EstructuraConstantesFunciones.CLASSNAME);
  		}
    }	
	
	//CUANDO SE CAMBIA ALGUN FORMATO(TIPO DE LETRA,NEGRILLA,ETC)
	public void jTextFieldChangedUpdateGeneral(String sTipo,JTextField jTextField,DocumentEvent evt) { 	  
		try {
			/*
			EventoGlobalTipo eventoGlobalTipo=EventoGlobalTipo.CONTROL_CHANGE;
			
			//System.out.println("UPDATE");
			
			Boolean esControlTabla=false;
			//JTextField jTextField=null;
			Container containerParent=null;
			Component componentOpposite=null;
			
			if(this.esUsoDesdeHijo) {
				eventoGlobalTipo=EventoGlobalTipo.FORM_HIJO_ACTUALIZAR;
			}
			
			EstructuraBeanSwingJInternalFrameAdditional.procesarEventosVista(this.parametroGeneralUsuario,this.moduloActual,this.opcionActual,this.usuarioActual,this,FuncionTipo.BEFORE,ControlTipo.TEXTBOX,EventoTipo.CHANGE,EventoSubTipo.CHANGED,sTipo,this.estructura,new Object(),this.estructuraParameterGeneral,this.estructuraReturnGeneral);
			
			ArrayList<Classe> classes=new ArrayList<Classe>();
			
			//jTextField=(JTextField)evt.getSource();
			
			containerParent=jTextField.getParent();
					
			componentOpposite=null;//evt.getOppositeComponent();
			
			if((containerParent!=null && containerParent.getClass().equals(JTableMe.class))
				|| (componentOpposite!=null && componentOpposite.getClass().equals(JTableMe.class))
			) {					
				esControlTabla=true;
			}
			
			this.esControlTabla=esControlTabla;
			
			


			
			EstructuraBeanSwingJInternalFrameAdditional.procesarEventosVista(this.parametroGeneralUsuario,this.moduloActual,this.opcionActual,this.usuarioActual,this,FuncionTipo.AFTER,ControlTipo.TEXTBOX,EventoTipo.CHANGE,EventoSubTipo.CHANGED,sTipo,this.estructura,new Object(),this.estructuraParameterGeneral,this.estructuraReturnGeneral);
			*/
  		} catch(Exception e) {
  			FuncionesSwing.manageException2(this, e,logger,EstructuraConstantesFunciones.CLASSNAME);
  		}
    }
	
	//CUANDO SE QUITA ALGUN CARACTER
	public void jTextFieldRemoveUpdateGeneral(String sTipo,JTextField jTextField,DocumentEvent evt) { 	  
		try {
			//System.out.println("REMOVE");
			
  		} catch(Exception e) {
  			FuncionesSwing.manageException2(this, e,logger,EstructuraConstantesFunciones.CLASSNAME);
  		}
    }
	
	//CUANDO SE INGRESA ALGUN CARACTER
	public void jTextFieldInsertUpdateGeneral(String sTipo,JTextField jTextField,DocumentEvent evt) { 	  
		try {
			//System.out.println("INSERT");
			
  		} catch(Exception e) {
  			FuncionesSwing.manageException2(this, e,logger,EstructuraConstantesFunciones.CLASSNAME);
  		}
    }
	
	//FUNCIONA AL APLASTAR ENTER
	public void jFormattedTextFieldActionPerformedGeneral(String sTipo,ActionEvent evt) { 	  
		try {
			if(this.permiteManejarEventosControl()) {
				
				//SELECCIONA FILA A OBJETO ACTUAL			
				this.seleccionarFilaTablaEstructuraActual();
				
				EventoGlobalTipo eventoGlobalTipo=EventoGlobalTipo.CONTROL_CHANGE;
				
				Boolean esControlTabla=false;
				Container containerParent=null;
				Container containerParentAux=null;
				JFormattedTextField JFormattedTextField=null;
				Component componentOpposite=null;
				
				//PARAMETROS LLAMAR FUNCION PARENT
				GeneralEntityParameterGeneral generalEntityParameterGeneral=new GeneralEntityParameterGeneral();			
				Boolean esUsoDesdeHijoLocal=false;
				Boolean conIrServidorAplicacionParent=false;	
				ArrayList<String> arrClasses=new ArrayList<String>();			
				//PARAMETROS LLAMAR FUNCION PARENT_FIN
				
				/*
				if(this.esUsoDesdeHijo) {
					eventoGlobalTipo=EventoGlobalTipo.FORM_HIJO_ACTUALIZAR;
				}
				*/
				ArrayList<Classe> classes=new ArrayList<Classe>();
				
				JFormattedTextField=(JFormattedTextField)evt.getSource();
				
				containerParentAux=JFormattedTextField.getParent();
				
				if(containerParentAux!=null && containerParentAux.getClass().equals(JDateChooser.class)) {
					containerParent=containerParentAux.getParent();
				}
				
				componentOpposite=null;//evt.getOppositeComponent();
				
				if((containerParent!=null && containerParent.getClass().equals(JTableMe.class))
					|| (componentOpposite!=null && componentOpposite.getClass().equals(JTableMe.class))
				) {					
					esControlTabla=true;
				}
				
				this.esControlTabla=esControlTabla;
				
				
				this.actualizarInformacion("EVENTO_CONTROL",false,this.estructura);
				
				this.actualizarInformacion("INFO_PADRE",false,this.estructura);
				
				EstructuraBeanSwingJInternalFrameAdditional.procesarEventosVista(this.parametroGeneralUsuario,this.moduloActual,this.opcionActual,this.usuarioActual,this,FuncionTipo.BEFORE,ControlTipo.DATE,EventoTipo.CHANGE,EventoSubTipo.CHANGED,sTipo,this.estructura,new Object(),this.estructuraParameterGeneral,this.estructuraReturnGeneral);
								
						
				


				
				EstructuraBeanSwingJInternalFrameAdditional.procesarEventosVista(this.parametroGeneralUsuario,this.moduloActual,this.opcionActual,this.usuarioActual,this,FuncionTipo.AFTER,ControlTipo.DATE,EventoTipo.CHANGE,EventoSubTipo.CHANGED,sTipo,this.estructura,new Object(),this.estructuraParameterGeneral,this.estructuraReturnGeneral);
				
				
				if(esUsoDesdeHijoLocal) {
					Long id=0L;
					
					generalEntityParameterGeneral.setEventoGlobalTipo(EventoGlobalTipo.FORM_HIJO_ACTUALIZAR);
					generalEntityParameterGeneral.setsDominio("Formulario");
					generalEntityParameterGeneral.setsDominioTipo(Estructura.class.getName());
					
					if(this.jInternalFrameParent!=null) {
						this.jInternalFrameParent.setEventoParentGeneral(esUsoDesdeHijoLocal,"Formulario",Estructura.class.getName(),sTipo,"DATE",esControlTabla,conIrServidorAplicacionParent,
							id,JFormattedTextField, EventoGlobalTipo.FORM_HIJO_ACTUALIZAR,ControlTipo.DATE,EventoTipo.CHANGE,EventoSubTipo.CHANGED,arrClasses,
							evt,generalEntityParameterGeneral,null);
					}
				}			
			}
			
		} catch(Exception e) {
  			FuncionesSwing.manageException2(this, e,logger,EstructuraConstantesFunciones.CLASSNAME);
  		}
    }
	
	public void jFormattedTextFieldFocusLostGeneral(String sTipo,java.awt.event.FocusEvent evt) { 	  
		try {
			if(this.permiteManejarEventosControl() && this.existeCambioValor(ControlTipo.TEXTBOX,sTipo)) {
				EventoGlobalTipo eventoGlobalTipo=EventoGlobalTipo.CONTROL_CHANGE;
				
				Boolean esControlTabla=false;
				JTextField jTextField=null;
				Container containerParent=null;
				Container containerParentAux=null;
				Component componentOpposite=null;
				
				
				//PARAMETROS LLAMAR FUNCION PARENT
				GeneralEntityParameterGeneral generalEntityParameterGeneral=new GeneralEntityParameterGeneral();			
				Boolean esUsoDesdeHijoLocal=false;
				Boolean conIrServidorAplicacionParent=false;	
				ArrayList<String> arrClasses=new ArrayList<String>();			
				//PARAMETROS LLAMAR FUNCION PARENT_FIN
				
				/*
				if(this.esUsoDesdeHijo) {
					eventoGlobalTipo=EventoGlobalTipo.FORM_HIJO_ACTUALIZAR;
				}
				*/
				
				ArrayList<Classe> classes=new ArrayList<Classe>();
				
				jTextField=(JTextField)evt.getSource();
				
				containerParentAux=jTextField.getParent();
						
				if(containerParentAux!=null && containerParentAux.getClass().equals(JDateChooser.class)) {
					containerParent=containerParentAux.getParent();
				}
				
				componentOpposite=evt.getOppositeComponent();
				
				if((containerParent!=null && containerParent.getClass().equals(JTableMe.class))
					|| (componentOpposite!=null && componentOpposite.getClass().equals(JTableMe.class))
				) {					
					esControlTabla=true;
				}
				
				this.esControlTabla=esControlTabla;
				
				
				this.actualizarInformacion("EVENTO_CONTROL",false,this.estructura);
				
				this.actualizarInformacion("INFO_PADRE",false,this.estructura);
				
				EstructuraBeanSwingJInternalFrameAdditional.procesarEventosVista(this.parametroGeneralUsuario,this.moduloActual,this.opcionActual,this.usuarioActual,this,FuncionTipo.BEFORE,ControlTipo.DATE,EventoTipo.CHANGE,EventoSubTipo.CHANGED,sTipo,this.estructura,new Object(),this.estructuraParameterGeneral,this.estructuraReturnGeneral);
								
				
				


				
				EstructuraBeanSwingJInternalFrameAdditional.procesarEventosVista(this.parametroGeneralUsuario,this.moduloActual,this.opcionActual,this.usuarioActual,this,FuncionTipo.AFTER,ControlTipo.DATE,EventoTipo.CHANGE,EventoSubTipo.CHANGED,sTipo,this.estructura,new Object(),this.estructuraParameterGeneral,this.estructuraReturnGeneral);
				
				
				if(esUsoDesdeHijoLocal) {
					Long id=0L;
					
					generalEntityParameterGeneral.setEventoGlobalTipo(EventoGlobalTipo.FORM_HIJO_ACTUALIZAR);
					generalEntityParameterGeneral.setsDominio("Formulario");
					generalEntityParameterGeneral.setsDominioTipo(Estructura.class.getName());
					
					if(this.jInternalFrameParent!=null) {
						this.jInternalFrameParent.setEventoParentGeneral(esUsoDesdeHijoLocal,"Formulario",Estructura.class.getName(),sTipo,"TEXTFIELD",esControlTabla,conIrServidorAplicacionParent,
							id,jTextField, EventoGlobalTipo.FORM_HIJO_ACTUALIZAR,ControlTipo.TEXTBOX,EventoTipo.CHANGE,EventoSubTipo.CHANGED,arrClasses,
							evt,generalEntityParameterGeneral,null);
					}
				}			
			}
			
		} catch(Exception e) {
  			FuncionesSwing.manageException2(this, e,logger,EstructuraConstantesFunciones.CLASSNAME);
  		}
    }
	
	public void jFormattedTextFieldFocusGainedGeneral(String sTipo,java.awt.event.FocusEvent evt) { 	  
		try {
			//SELECCIONA FILA A OBJETO ACTUAL			
			this.seleccionarFilaTablaEstructuraActual();
			
			//SELECCIONA FILA A OBJETO ANTERIOR
			Integer intSelectedRow = this.jTableDatosEstructura.getSelectedRow();
					
			if(intSelectedRow!=null && intSelectedRow>-1) {
				//ARCHITECTURE
				if(Constantes.ISUSAEJBLOGICLAYER) {
					this.estructuraAnterior =(Estructura) this.estructuraLogic.getEstructuras().toArray()[this.jTableDatosEstructura.convertRowIndexToModel(intSelectedRow)];
				} else if(Constantes.ISUSAEJBREMOTE || Constantes.ISUSAEJBHOME ) {
					this.estructuraAnterior =(Estructura) this.estructuras.toArray()[this.jTableDatosEstructura.convertRowIndexToModel(intSelectedRow)];
				}
				//ARCHITECTURE
				
				//System.out.println(this.banco);
			}
			
		} catch(Exception e) {
  			FuncionesSwing.manageException2(this, e,logger,EstructuraConstantesFunciones.CLASSNAME);
  		}
    }	
	
	public void jDateChooserFocusLostGeneral(String sTipo,java.awt.event.FocusEvent evt) { 	  
		try {
			if(this.permiteManejarEventosControl() && this.existeCambioValor(ControlTipo.DATE,sTipo)) {
				this.actualizarInformacion("EVENTO_CONTROL",false,this.estructura);
				
				this.actualizarInformacion("INFO_PADRE",false,this.estructura);
			}	
		} catch(Exception e) {
  			FuncionesSwing.manageException2(this, e,logger,EstructuraConstantesFunciones.CLASSNAME);
  		}
    }	
	
	public void jDateChooserFocusGainedGeneral(String sTipo,java.awt.event.FocusEvent evt) { 	  
		try {
			//SELECCIONA FILA A OBJETO ACTUAL			
			this.seleccionarFilaTablaEstructuraActual();
			
			//SELECCIONA FILA A OBJETO ANTERIOR
			Integer intSelectedRow = this.jTableDatosEstructura.getSelectedRow();
					
			if(intSelectedRow!=null && intSelectedRow>-1) {
				//ARCHITECTURE
				if(Constantes.ISUSAEJBLOGICLAYER) {
					this.estructuraAnterior =(Estructura) this.estructuraLogic.getEstructuras().toArray()[this.jTableDatosEstructura.convertRowIndexToModel(intSelectedRow)];
				} else if(Constantes.ISUSAEJBREMOTE || Constantes.ISUSAEJBHOME ) {
					this.estructuraAnterior =(Estructura) this.estructuras.toArray()[this.jTableDatosEstructura.convertRowIndexToModel(intSelectedRow)];
				}
				//ARCHITECTURE
				
				//System.out.println(this.banco);
			}
		} catch(Exception e) {
  			FuncionesSwing.manageException2(this, e,logger,EstructuraConstantesFunciones.CLASSNAME);
  		}
    }	
	
	public void jDateChooserActionPerformedGeneral(String sTipo,ActionEvent evt) { 	  
		try {
			
			//SELECCIONA FILA A OBJETO ACTUAL			
			this.seleccionarFilaTablaEstructuraActual();
				
			this.actualizarInformacion("EVENTO_CONTROL",false,this.estructura);
			
			this.actualizarInformacion("INFO_PADRE",false,this.estructura);
				
		} catch(Exception e) {
  			FuncionesSwing.manageException2(this, e,logger,EstructuraConstantesFunciones.CLASSNAME);
  		}
    }	
	
	public void jTextAreaFocusLostGeneral(String sTipo,java.awt.event.FocusEvent evt) { 	  
		try {
			if(this.permiteManejarEventosControl() && this.existeCambioValor(ControlTipo.TEXTAREA,sTipo)) {
				EventoGlobalTipo eventoGlobalTipo=EventoGlobalTipo.CONTROL_CHANGE;
				
				Boolean esControlTabla=false;
				JTextArea jTextArea=null;
				Container containerParent=null;
				Component componentOpposite=null;
				
				//PARAMETROS LLAMAR FUNCION PARENT
				GeneralEntityParameterGeneral generalEntityParameterGeneral=new GeneralEntityParameterGeneral();			
				Boolean esUsoDesdeHijoLocal=false;
				Boolean conIrServidorAplicacionParent=false;	
				ArrayList<String> arrClasses=new ArrayList<String>();			
				//PARAMETROS LLAMAR FUNCION PARENT_FIN
				
				/*
				if(this.esUsoDesdeHijo) {
					eventoGlobalTipo=EventoGlobalTipo.FORM_HIJO_ACTUALIZAR;
				}
				*/
				
				ArrayList<Classe> classes=new ArrayList<Classe>();
				
				jTextArea=(JTextArea)evt.getSource();
				
				containerParent=jTextArea.getParent();
				componentOpposite=evt.getOppositeComponent();
				
				if((containerParent!=null && containerParent.getClass().equals(JTableMe.class))
					|| (componentOpposite!=null && componentOpposite.getClass().equals(JTableMe.class))
				) {
					esControlTabla=true;
				}
				
				this.esControlTabla=esControlTabla;
				
				
				this.actualizarInformacion("EVENTO_CONTROL",false,this.estructura);
				
				this.actualizarInformacion("INFO_PADRE",false,this.estructura);
				
				EstructuraBeanSwingJInternalFrameAdditional.procesarEventosVista(this.parametroGeneralUsuario,this.moduloActual,this.opcionActual,this.usuarioActual,this,FuncionTipo.BEFORE,ControlTipo.TEXTAREA,EventoTipo.CHANGE,EventoSubTipo.CHANGED,sTipo,this.estructura,new Object(),this.estructuraParameterGeneral,this.estructuraReturnGeneral);
							
				
				


				
				EstructuraBeanSwingJInternalFrameAdditional.procesarEventosVista(this.parametroGeneralUsuario,this.moduloActual,this.opcionActual,this.usuarioActual,this,FuncionTipo.AFTER,ControlTipo.TEXTAREA,EventoTipo.CHANGE,EventoSubTipo.CHANGED,sTipo,this.estructura,new Object(),this.estructuraParameterGeneral,this.estructuraReturnGeneral);
				
				
				if(esUsoDesdeHijoLocal) {
					Long id=0L;
					
					generalEntityParameterGeneral.setEventoGlobalTipo(EventoGlobalTipo.FORM_HIJO_ACTUALIZAR);
					generalEntityParameterGeneral.setsDominio("Formulario");
					generalEntityParameterGeneral.setsDominioTipo(Estructura.class.getName());
					
					if(this.jInternalFrameParent!=null) {
						this.jInternalFrameParent.setEventoParentGeneral(esUsoDesdeHijoLocal,"Formulario",Estructura.class.getName(),sTipo,"TEXTAREA",esControlTabla,conIrServidorAplicacionParent,
							id,jTextArea, EventoGlobalTipo.FORM_HIJO_ACTUALIZAR,ControlTipo.TEXTAREA,EventoTipo.CHANGE,EventoSubTipo.CHANGED,arrClasses,
							evt,generalEntityParameterGeneral,null);
					}
				}			
			}
			
		} catch(Exception e) {
  			FuncionesSwing.manageException2(this, e,logger,EstructuraConstantesFunciones.CLASSNAME);
  		}
    }
	
	public void jTextAreaFocusGainedGeneral(String sTipo,java.awt.event.FocusEvent evt) { 	  
		try {
			if(this.permiteManejarEventosControl()) {
				//SELECCIONA FILA A OBJETO ACTUAL			
				this.seleccionarFilaTablaEstructuraActual();
			
				//SELECCIONA FILA A OBJETO ANTERIOR
				Integer intSelectedRow = this.jTableDatosEstructura.getSelectedRow();
						
				if(intSelectedRow!=null && intSelectedRow>-1) {
					//ARCHITECTURE
					if(Constantes.ISUSAEJBLOGICLAYER) {
						this.estructuraAnterior =(Estructura) this.estructuraLogic.getEstructuras().toArray()[this.jTableDatosEstructura.convertRowIndexToModel(intSelectedRow)];
					} else if(Constantes.ISUSAEJBREMOTE || Constantes.ISUSAEJBHOME ) {
						this.estructuraAnterior =(Estructura) this.estructuras.toArray()[this.jTableDatosEstructura.convertRowIndexToModel(intSelectedRow)];
					}
					//ARCHITECTURE
					
					//System.out.println(this.banco);
				}
			}
		} catch(Exception e) {
  			FuncionesSwing.manageException2(this, e,logger,EstructuraConstantesFunciones.CLASSNAME);
  		}
    }
	
	public void jTextAreaChangedUpdateGeneral(String sTipo,JTextArea jTextArea,DocumentEvent evt) { 	  
		try {
			/*
			EventoGlobalTipo eventoGlobalTipo=EventoGlobalTipo.CONTROL_CHANGE;
			
			//System.out.println("UPDATE");
			
			Boolean esControlTabla=false;
			//JTextArea jTextArea=null;
			Container containerParent=null;
			Component componentOpposite=null;
			
			if(this.esUsoDesdeHijo) {
				eventoGlobalTipo=EventoGlobalTipo.FORM_HIJO_ACTUALIZAR;
			}
			
			EstructuraBeanSwingJInternalFrameAdditional.procesarEventosVista(this.parametroGeneralUsuario,this.moduloActual,this.opcionActual,this.usuarioActual,this,FuncionTipo.BEFORE,ControlTipo.TEXTAREA,EventoTipo.CHANGE,EventoSubTipo.CHANGED,sTipo,this.estructura,new Object(),this.estructuraParameterGeneral,this.estructuraReturnGeneral);
			
			ArrayList<Classe> classes=new ArrayList<Classe>();
			
			//jTextArea=(JTextArea)evt.getSource();
			
			containerParent=jTextArea.getParent();
			componentOpposite=null;//evt.getOppositeComponent();
			
			if((containerParent!=null && containerParent.getClass().equals(JTableMe.class))
				|| (componentOpposite!=null && componentOpposite.getClass().equals(JTableMe.class))
			) {
				esControlTabla=true;
			}
			
			this.esControlTabla=esControlTabla;
			
			


			
			EstructuraBeanSwingJInternalFrameAdditional.procesarEventosVista(this.parametroGeneralUsuario,this.moduloActual,this.opcionActual,this.usuarioActual,this,FuncionTipo.AFTER,ControlTipo.TEXTAREA,EventoTipo.CHANGE,EventoSubTipo.CHANGED,sTipo,this.estructura,new Object(),this.estructuraParameterGeneral,this.estructuraReturnGeneral);
			
			*/
  		} catch(Exception e) {
  			FuncionesSwing.manageException2(this, e,logger,EstructuraConstantesFunciones.CLASSNAME);
  		}
    }
	
	public void jTextAreaRemoveUpdateGeneral(String sTipo,JTextArea jTextArea,DocumentEvent evt) { 	  
		try {
			//System.out.println("REMOVE");
			
  		} catch(Exception e) {
  			FuncionesSwing.manageException2(this, e,logger,EstructuraConstantesFunciones.CLASSNAME);
  		}
    }
	
	public void jTextAreaInsertUpdateGeneral(String sTipo,JTextArea jTextArea,DocumentEvent evt) { 	  
		try {
			
			//System.out.println("INSERT");
			
  		} catch(Exception e) {
  			FuncionesSwing.manageException2(this, e,logger,EstructuraConstantesFunciones.CLASSNAME);
  		}
    }
	
	//NO EXISTE O NO ES APLICABLE
	public void jTextAreaActionPerformedGeneral(String sTipo,ActionEvent evt) { 	  
		try {
			//SELECCIONA FILA A OBJETO ACTUAL			
			this.seleccionarFilaTablaEstructuraActual();
			
			this.actualizarInformacion("EVENTO_CONTROL",false,this.estructura);
			
			this.actualizarInformacion("INFO_PADRE",false,this.estructura);
				
		} catch(Exception e) {
  			FuncionesSwing.manageException2(this, e,logger,EstructuraConstantesFunciones.CLASSNAME);
  		}
    }
	
	public void jLabelFocusLostGeneral(String sTipo,java.awt.event.FocusEvent evt) { 	  
		try {
			if(this.permiteManejarEventosControl()) {
				EventoGlobalTipo eventoGlobalTipo=EventoGlobalTipo.CONTROL_CHANGE;
				
				Boolean esControlTabla=false;
				JLabel jLabel=null;
				Container containerParent=null;
				Component componentOpposite=null;
				
				
				//PARAMETROS LLAMAR FUNCION PARENT
				GeneralEntityParameterGeneral generalEntityParameterGeneral=new GeneralEntityParameterGeneral();			
				Boolean esUsoDesdeHijoLocal=false;
				Boolean conIrServidorAplicacionParent=false;	
				ArrayList<String> arrClasses=new ArrayList<String>();			
				//PARAMETROS LLAMAR FUNCION PARENT_FIN
				
				
				/*
				if(this.esUsoDesdeHijo) {
					eventoGlobalTipo=EventoGlobalTipo.FORM_HIJO_ACTUALIZAR;
				}
				*/
				
				ArrayList<Classe> classes=new ArrayList<Classe>();
				
				jLabel=(JLabel)evt.getSource();
				
				containerParent=jLabel.getParent();
						
				componentOpposite=evt.getOppositeComponent();
				
				if((containerParent!=null && containerParent.getClass().equals(JTableMe.class))
					|| (componentOpposite!=null && componentOpposite.getClass().equals(JTableMe.class))
				) {					
					esControlTabla=true;
				}
				
				this.esControlTabla=esControlTabla;
				
				
				this.actualizarInformacion("EVENTO_CONTROL",false,this.estructura);
				
				this.actualizarInformacion("INFO_PADRE",false,this.estructura);
				
				EstructuraBeanSwingJInternalFrameAdditional.procesarEventosVista(this.parametroGeneralUsuario,this.moduloActual,this.opcionActual,this.usuarioActual,this,FuncionTipo.BEFORE,ControlTipo.TEXTBOX,EventoTipo.CHANGE,EventoSubTipo.CHANGED,sTipo,this.estructura,new Object(),this.estructuraParameterGeneral,this.estructuraReturnGeneral);
								
				
				


				
				EstructuraBeanSwingJInternalFrameAdditional.procesarEventosVista(this.parametroGeneralUsuario,this.moduloActual,this.opcionActual,this.usuarioActual,this,FuncionTipo.AFTER,ControlTipo.TEXTBOX,EventoTipo.CHANGE,EventoSubTipo.CHANGED,sTipo,this.estructura,new Object(),this.estructuraParameterGeneral,this.estructuraReturnGeneral);
				
				
				if(esUsoDesdeHijoLocal) {
					Long id=0L;
					
					generalEntityParameterGeneral.setEventoGlobalTipo(EventoGlobalTipo.FORM_HIJO_ACTUALIZAR);
					generalEntityParameterGeneral.setsDominio("Formulario");
					generalEntityParameterGeneral.setsDominioTipo(Estructura.class.getName());
					
					if(this.jInternalFrameParent!=null) {
						this.jInternalFrameParent.setEventoParentGeneral(esUsoDesdeHijoLocal,"Formulario",Estructura.class.getName(),sTipo,"TEXTFIELD",esControlTabla,conIrServidorAplicacionParent,
							id,jLabel, EventoGlobalTipo.FORM_HIJO_ACTUALIZAR,ControlTipo.TEXTBOX,EventoTipo.CHANGE,EventoSubTipo.CHANGED,arrClasses,
							evt,generalEntityParameterGeneral,null);
					}
				}			
			}	
			
		} catch(Exception e) {
  			FuncionesSwing.manageException2(this, e,logger,EstructuraConstantesFunciones.CLASSNAME);
  		}
    }
	
	public void jLabelFocusGainedGeneral(String sTipo,java.awt.event.FocusEvent evt) { 	  
		try {
			//SELECCIONA FILA A OBJETO ACTUAL			
			this.seleccionarFilaTablaEstructuraActual();
			
			//SELECCIONA FILA A OBJETO ANTERIOR
			Integer intSelectedRow = this.jTableDatosEstructura.getSelectedRow();
					
			if(intSelectedRow!=null && intSelectedRow>-1) {
				//ARCHITECTURE
				if(Constantes.ISUSAEJBLOGICLAYER) {
					this.estructuraAnterior =(Estructura) this.estructuraLogic.getEstructuras().toArray()[this.jTableDatosEstructura.convertRowIndexToModel(intSelectedRow)];
				} else if(Constantes.ISUSAEJBREMOTE || Constantes.ISUSAEJBHOME ) {
					this.estructuraAnterior =(Estructura) this.estructuras.toArray()[this.jTableDatosEstructura.convertRowIndexToModel(intSelectedRow)];
				}
				//ARCHITECTURE
				
				//System.out.println(this.banco);
			}
		} catch(Exception e) {
  			FuncionesSwing.manageException2(this, e,logger,EstructuraConstantesFunciones.CLASSNAME);
  		}
    }
	
	//NO EXISTE O NO ES APLICABLE
	public void jLabelActionPerformedGeneral(String sTipo,ActionEvent evt) { 	  
		try {
			
			//SELECCIONA FILA A OBJETO ACTUAL			
			this.seleccionarFilaTablaEstructuraActual();
				
			this.actualizarInformacion("EVENTO_CONTROL",false,this.estructura);
			
			this.actualizarInformacion("INFO_PADRE",false,this.estructura);
				
		} catch(Exception e) {
  			FuncionesSwing.manageException2(this, e,logger,EstructuraConstantesFunciones.CLASSNAME);
  		}
    }
	
	public void jCheckBoxItemListenerGeneral(String sTipo,ItemEvent evt) { 	  
		try {
			if(this.permiteManejarEventosControl()) {
				//SELECCIONA FILA A OBJETO ACTUAL			
				this.seleccionarFilaTablaEstructuraActual();
				
				EventoGlobalTipo eventoGlobalTipo=EventoGlobalTipo.CONTROL_CHANGE;
				
				Boolean esControlTabla=false;
				JCheckBox jCheckBox=null;
				Container containerParent=null;
				Component componentOpposite=null;
				
							
				//PARAMETROS LLAMAR FUNCION PARENT
				GeneralEntityParameterGeneral generalEntityParameterGeneral=new GeneralEntityParameterGeneral();			
				Boolean esUsoDesdeHijoLocal=false;
				Boolean conIrServidorAplicacionParent=false;	
				ArrayList<String> arrClasses=new ArrayList<String>();			
				//PARAMETROS LLAMAR FUNCION PARENT_FIN
				
				
				/*
				if(this.esUsoDesdeHijo) {
					eventoGlobalTipo=EventoGlobalTipo.FORM_HIJO_ACTUALIZAR;
				}
				*/
				
				ArrayList<Classe> classes=new ArrayList<Classe>();
				
				jCheckBox=(JCheckBox)evt.getSource();
				
				containerParent=jCheckBox.getParent();
						
				componentOpposite=null;//evt.getOppositeComponent();
				
				if((containerParent!=null && containerParent.getClass().equals(JTableMe.class))
					|| (componentOpposite!=null && componentOpposite.getClass().equals(JTableMe.class))
				) {					
					esControlTabla=true;
				}
				
				this.esControlTabla=esControlTabla;
				
				
				this.actualizarInformacion("EVENTO_CONTROL",false,this.estructura);
				
				this.actualizarInformacion("INFO_PADRE",false,this.estructura);
				
				EstructuraBeanSwingJInternalFrameAdditional.procesarEventosVista(this.parametroGeneralUsuario,this.moduloActual,this.opcionActual,this.usuarioActual,this,FuncionTipo.BEFORE,ControlTipo.CHECKBOX,EventoTipo.CLIC,EventoSubTipo.CLICKED,sTipo,this.estructura,new Object(),this.estructuraParameterGeneral,this.estructuraReturnGeneral);
												
				
				if(sTipo.equals("SeleccionarTodosEstructura")) {
					jCheckBoxSeleccionarTodosEstructuraItemListener(evt);
				
				} else if(sTipo.equals("SeleccionadosEstructura")) {
					jCheckBoxSeleccionadosEstructuraItemListener(evt);
				
				} else if(sTipo.equals("NuevoToolBarEstructura")) {
					
				}
				
				


				
				
				EstructuraBeanSwingJInternalFrameAdditional.procesarEventosVista(this.parametroGeneralUsuario,this.moduloActual,this.opcionActual,this.usuarioActual,this,FuncionTipo.AFTER,ControlTipo.CHECKBOX,EventoTipo.CLIC,EventoSubTipo.CLICKED,sTipo,this.estructura,new Object(),this.estructuraParameterGeneral,this.estructuraReturnGeneral);
				
				
				if(esUsoDesdeHijoLocal) {
					Long id=0L;
					
					generalEntityParameterGeneral.setEventoGlobalTipo(EventoGlobalTipo.FORM_HIJO_ACTUALIZAR);
					generalEntityParameterGeneral.setsDominio("Formulario");
					generalEntityParameterGeneral.setsDominioTipo(Estructura.class.getName());
					
					if(this.jInternalFrameParent!=null) {
						this.jInternalFrameParent.setEventoParentGeneral(esUsoDesdeHijoLocal,"Formulario",Estructura.class.getName(),sTipo,"TEXTFIELD",esControlTabla,conIrServidorAplicacionParent,
							id,jCheckBox, EventoGlobalTipo.FORM_HIJO_ACTUALIZAR,ControlTipo.CHECKBOX,EventoTipo.CLIC,EventoSubTipo.CLICKED,arrClasses,
							evt,generalEntityParameterGeneral,null);
					}
				}			
			}	
			
  		} catch(Exception e) {
  			FuncionesSwing.manageException2(this, e,logger,EstructuraConstantesFunciones.CLASSNAME);
  		}
    }
	
	public void jCheckBoxFocusLostGeneral(String sTipo,java.awt.event.FocusEvent evt) { 	  
		try {
			if(this.permiteManejarEventosControl() && this.existeCambioValor(ControlTipo.CHECKBOX,sTipo)) {
				EventoGlobalTipo eventoGlobalTipo=EventoGlobalTipo.CONTROL_CHANGE;
				
				Boolean esControlTabla=false;
				JCheckBox jCheckBox=null;
				Container containerParent=null;
				Component componentOpposite=null;
				
				
				//PARAMETROS LLAMAR FUNCION PARENT
				GeneralEntityParameterGeneral generalEntityParameterGeneral=new GeneralEntityParameterGeneral();			
				Boolean esUsoDesdeHijoLocal=false;
				Boolean conIrServidorAplicacionParent=false;	
				ArrayList<String> arrClasses=new ArrayList<String>();			
				//PARAMETROS LLAMAR FUNCION PARENT_FIN
				
				
				ArrayList<Classe> classes=new ArrayList<Classe>();
				
				jCheckBox=(JCheckBox)evt.getSource();
				
				containerParent=jCheckBox.getParent();
						
				componentOpposite=evt.getOppositeComponent();
				
				if((containerParent!=null && containerParent.getClass().equals(JTableMe.class))
					|| (componentOpposite!=null && componentOpposite.getClass().equals(JTableMe.class))
				) {					
					esControlTabla=true;
				}
				
				this.esControlTabla=esControlTabla;
				
				
				/*
				if(this.esUsoDesdeHijo) {
					eventoGlobalTipo=EventoGlobalTipo.FORM_HIJO_ACTUALIZAR;
				}
				*/
				
				//this.actualizarInformacion("EVENTO_CONTROL",false,this.estructura);
				
				//this.actualizarInformacion("INFO_PADRE",false,this.estructura);
				
				EstructuraBeanSwingJInternalFrameAdditional.procesarEventosVista(this.parametroGeneralUsuario,this.moduloActual,this.opcionActual,this.usuarioActual,this,FuncionTipo.BEFORE,ControlTipo.CHECKBOX,EventoTipo.CLIC,EventoSubTipo.CLICKED,sTipo,this.estructura,new Object(),this.estructuraParameterGeneral,this.estructuraReturnGeneral);
												
				
				


				
				
				EstructuraBeanSwingJInternalFrameAdditional.procesarEventosVista(this.parametroGeneralUsuario,this.moduloActual,this.opcionActual,this.usuarioActual,this,FuncionTipo.AFTER,ControlTipo.CHECKBOX,EventoTipo.CLIC,EventoSubTipo.CLICKED,sTipo,this.estructura,new Object(),this.estructuraParameterGeneral,this.estructuraReturnGeneral);
				
				
				if(esUsoDesdeHijoLocal) {
					Long id=0L;
				
					generalEntityParameterGeneral.setEventoGlobalTipo(EventoGlobalTipo.FORM_HIJO_ACTUALIZAR);
					generalEntityParameterGeneral.setsDominio("Formulario");
					generalEntityParameterGeneral.setsDominioTipo(Estructura.class.getName());
					
					if(this.jInternalFrameParent!=null) {
						this.jInternalFrameParent.setEventoParentGeneral(esUsoDesdeHijoLocal,"Formulario",Estructura.class.getName(),sTipo,"TEXTFIELD",esControlTabla,conIrServidorAplicacionParent,
							id,jCheckBox, EventoGlobalTipo.FORM_HIJO_ACTUALIZAR,ControlTipo.CHECKBOX,EventoTipo.CLIC,EventoSubTipo.CLICKED,arrClasses,
							evt,generalEntityParameterGeneral,null);
					}
				}			
			}
			
  		} catch(Exception e) {
  			FuncionesSwing.manageException2(this, e,logger,EstructuraConstantesFunciones.CLASSNAME);
  		}
    }
	
	public void jCheckBoxFocusGainedGeneral(String sTipo,java.awt.event.FocusEvent evt) { 	  
		try {
			if(this.permiteManejarEventosControl()) {
				//SELECCIONA FILA A OBJETO ACTUAL			
				this.seleccionarFilaTablaEstructuraActual();
			
				//SELECCIONA FILA A OBJETO ANTERIOR
				Integer intSelectedRow = this.jTableDatosEstructura.getSelectedRow();
						
				if(intSelectedRow!=null && intSelectedRow>-1) {
					//ARCHITECTURE
					if(Constantes.ISUSAEJBLOGICLAYER) {
						this.estructuraAnterior =(Estructura) this.estructuraLogic.getEstructuras().toArray()[this.jTableDatosEstructura.convertRowIndexToModel(intSelectedRow)];
					} else if(Constantes.ISUSAEJBREMOTE || Constantes.ISUSAEJBHOME ) {
						this.estructuraAnterior =(Estructura) this.estructuras.toArray()[this.jTableDatosEstructura.convertRowIndexToModel(intSelectedRow)];
					}
					//ARCHITECTURE
					
					//System.out.println(this.banco);
				}
			}
  		} catch(Exception e) {
  			FuncionesSwing.manageException2(this, e,logger,EstructuraConstantesFunciones.CLASSNAME);
  		}
    }
	
	public void jCheckBoxActionPerformedGeneral(String sTipo,ActionEvent evt) { 	  
		try {
			if(this.permiteManejarEventosControl()) {
				
				//SELECCIONA FILA A OBJETO ACTUAL			
				this.seleccionarFilaTablaEstructuraActual();
				
				this.actualizarInformacion("EVENTO_CONTROL",false,this.estructura);
				
				this.actualizarInformacion("INFO_PADRE",false,this.estructura);
				
				EstructuraBeanSwingJInternalFrameAdditional.procesarEventosVista(this.parametroGeneralUsuario,this.moduloActual,this.opcionActual,this.usuarioActual,this,FuncionTipo.BEFORE,ControlTipo.CHECKBOX,EventoTipo.CLIC,EventoSubTipo.CLICKED,sTipo,this.estructura,new Object(),this.estructuraParameterGeneral,this.estructuraReturnGeneral);
				
				
				EstructuraBeanSwingJInternalFrameAdditional.procesarEventosVista(this.parametroGeneralUsuario,this.moduloActual,this.opcionActual,this.usuarioActual,this,FuncionTipo.AFTER,ControlTipo.CHECKBOX,EventoTipo.CLIC,EventoSubTipo.CLICKED,sTipo,this.estructura,new Object(),this.estructuraParameterGeneral,this.estructuraReturnGeneral);
			}
			
  		} catch(Exception e) {
  			FuncionesSwing.manageException2(this, e,logger,EstructuraConstantesFunciones.CLASSNAME);
  		}
    }
	
	//NO SE UTILIZA, SE USA EL DE ABAJO, IGUAL SE DEJA EL CODIGO COMO RESPALDO Y ES CASI IGUAL
	//ERROR:SI SE USA,AL HACER CLIC EN EL MISMO ELEMENTO O EJECUTAR SELECTEDITEM, SIEMPRE SE EJECUTA COMO SI ESCOGIERA OTRO ELEMENTO(NO DEBERIA)
	//@SuppressWarnings("rawtypes")
	public void jComboBoxActionPerformedGeneral(String sTipo,ActionEvent evt) {		
		try {
			/*		
			EventoGlobalTipo eventoGlobalTipo=EventoGlobalTipo.CONTROL_CHANGE;
			
			if(this.esUsoDesdeHijo) {
				eventoGlobalTipo=EventoGlobalTipo.FORM_HIJO_ACTUALIZAR;
			}
			
			Container containerParent=null;
			Component componentOpposite=null;
			Boolean esControlTabla=false;
				
			ArrayList<Classe> classes=new ArrayList<Classe>();
			
			EstructuraBeanSwingJInternalFrameAdditional.procesarEventosVista(this.parametroGeneralUsuario,this.moduloActual,this.opcionActual,this.usuarioActual,this,FuncionTipo.BEFORE,ControlTipo.COMBOBOX,EventoTipo.CHANGE,EventoSubTipo.CLICKED,sTipo,this.estructura,new Object(),this.estructuraParameterGeneral,this.estructuraReturnGeneral);
			JComboBox jComboBoxGenerico=null;						
			
			if(evt.getSource().getClass().equals(JComboBox.class)
				|| evt.getSource().getClass().equals(JComboBoxMe.class)) {
					
				jComboBoxGenerico=(JComboBox)evt.getSource();
				
				containerParent=jComboBoxGenerico.getParent();
				
				componentOpposite=null;//evt.getOppositeComponent();
				
				if((containerParent!=null && containerParent.getClass().equals(JTableMe.class))
					|| (componentOpposite!=null && componentOpposite.getClass().equals(JTableMe.class))
				) {					
					esControlTabla=true;
				}
				
				this.esControlTabla=esControlTabla;
			}
			
			String sFinalQueryCombo="";
			
			


			
			EstructuraBeanSwingJInternalFrameAdditional.procesarEventosVista(this.parametroGeneralUsuario,this.moduloActual,this.opcionActual,this.usuarioActual,this,FuncionTipo.AFTER,ControlTipo.COMBOBOX,EventoTipo.CHANGE,EventoSubTipo.CHANGED,sTipo,this.estructura,new Object(),this.estructuraParameterGeneral,this.estructuraReturnGeneral);
			*/						
  		} catch(Exception e) {
  			FuncionesSwing.manageException2(this, e,logger,EstructuraConstantesFunciones.CLASSNAME);
  		}		
    }
	
	@SuppressWarnings("rawtypes")
	public void jComboBoxItemStateChangedGeneral(String sTipo,ItemEvent evt) { 	  
		try {
			if (evt.getStateChange() == ItemEvent.SELECTED && this.permiteManejarEventosControl()) {
				//SELECCIONA FILA A OBJETO ACTUAL			
				this.seleccionarFilaTablaEstructuraActual();
			
				//PARAMETROS LLAMAR FUNCION PARENT
				GeneralEntityParameterGeneral generalEntityParameterGeneral=new GeneralEntityParameterGeneral();			
				Boolean esUsoDesdeHijoLocal=false;
				Boolean conIrServidorAplicacionParent=false;	
				ArrayList<String> arrClasses=new ArrayList<String>();			
				//PARAMETROS LLAMAR FUNCION PARENT_FIN
			
			
				EventoGlobalTipo eventoGlobalTipo=EventoGlobalTipo.CONTROL_CHANGE;
				
				/*
				if(this.esUsoDesdeHijo) {
					eventoGlobalTipo=EventoGlobalTipo.FORM_HIJO_ACTUALIZAR;
				}
				*/
				
				Container containerParent=null;
				Component componentOpposite=null;
				Boolean esControlTabla=false;
				
				ArrayList<Classe> classes=new ArrayList<Classe>();
				
				JComboBox jComboBoxGenerico=null;						
				
				if(evt.getSource().getClass().equals(JComboBox.class)
					|| evt.getSource().getClass().equals(JComboBoxMe.class)) {
						
					jComboBoxGenerico=(JComboBox)evt.getSource();
					
					containerParent=jComboBoxGenerico.getParent();
					
					componentOpposite=null;//evt.getOppositeComponent();
					
					if((containerParent!=null && containerParent.getClass().equals(JTableMe.class))
					|| (componentOpposite!=null && componentOpposite.getClass().equals(JTableMe.class))
					) {					
						esControlTabla=true;
					}		
					
					this.esControlTabla=esControlTabla;
				}
				
				
				this.actualizarInformacion("EVENTO_CONTROL",false,this.estructura);
				
				this.actualizarInformacion("INFO_PADRE",false,this.estructura);
				
				EstructuraBeanSwingJInternalFrameAdditional.procesarEventosVista(this.parametroGeneralUsuario,this.moduloActual,this.opcionActual,this.usuarioActual,this,FuncionTipo.BEFORE,ControlTipo.COMBOBOX,EventoTipo.CHANGE,EventoSubTipo.CLICKED,sTipo,this.estructura,new Object(),this.estructuraParameterGeneral,this.estructuraReturnGeneral);
				
				
				String sFinalQueryCombo="";
				
				


				
				EstructuraBeanSwingJInternalFrameAdditional.procesarEventosVista(this.parametroGeneralUsuario,this.moduloActual,this.opcionActual,this.usuarioActual,this,FuncionTipo.AFTER,ControlTipo.COMBOBOX,EventoTipo.CHANGE,EventoSubTipo.CHANGED,sTipo,this.estructura,new Object(),this.estructuraParameterGeneral,this.estructuraReturnGeneral);
				
				if(esUsoDesdeHijoLocal) {
					Long id=0L;
				
					generalEntityParameterGeneral.setEventoGlobalTipo(EventoGlobalTipo.FORM_HIJO_ACTUALIZAR);
					generalEntityParameterGeneral.setsDominio("Formulario");
					generalEntityParameterGeneral.setsDominioTipo(Estructura.class.getName());
								
					if(this.jInternalFrameParent!=null) {
						this.jInternalFrameParent.setEventoParentGeneral(esUsoDesdeHijoLocal,"Formulario",Estructura.class.getName(),sTipo,"COMBOBOX",esControlTabla,conIrServidorAplicacionParent,
							id,jComboBoxGenerico, EventoGlobalTipo.FORM_HIJO_ACTUALIZAR,ControlTipo.COMBOBOX,EventoTipo.CHANGE,EventoSubTipo.CHANGED,arrClasses,
							evt,generalEntityParameterGeneral,null);
					}
				}			
			}
  		} catch(Exception e) {
  			FuncionesSwing.manageException2(this, e,logger,EstructuraConstantesFunciones.CLASSNAME);
  		}
    }
	
	//@SuppressWarnings("rawtypes")
	public void jComboBoxFocusLostGeneral(String sTipo,java.awt.event.FocusEvent evt) { 	  
		//MANEJADO EN ITEMLISTENER
		/*
		try {
			if(this.permiteManejarEventosControl()) {
				EventoGlobalTipo eventoGlobalTipo=EventoGlobalTipo.CONTROL_CHANGE;
				
				
				//if(this.esUsoDesdeHijo) {
				//	eventoGlobalTipo=EventoGlobalTipo.FORM_HIJO_ACTUALIZAR;
				//}
				
				
				Container containerParent=null;
				Component componentOpposite=null;
				Boolean esControlTabla=false;
				
				ArrayList<Classe> classes=new ArrayList<Classe>();
				
				//PARAMETROS LLAMAR FUNCION PARENT
				GeneralEntityParameterGeneral generalEntityParameterGeneral=new GeneralEntityParameterGeneral();			
				Boolean esUsoDesdeHijoLocal=false;
				Boolean conIrServidorAplicacionParent=false;	
				ArrayList<String> arrClasses=new ArrayList<String>();			
				//PARAMETROS LLAMAR FUNCION PARENT_FIN
			
				this.actualizarInformacion("EVENTO_CONTROL",false,this.estructura);
				
				this.actualizarInformacion("INFO_PADRE",false,this.estructura);
				
				EstructuraBeanSwingJInternalFrameAdditional.procesarEventosVista(this.parametroGeneralUsuario,this.moduloActual,this.opcionActual,this.usuarioActual,this,FuncionTipo.BEFORE,ControlTipo.COMBOBOX,EventoTipo.CHANGE,EventoSubTipo.CLICKED,sTipo,this.estructura,new Object(),this.estructuraParameterGeneral,this.estructuraReturnGeneral);
				JComboBox jComboBoxGenerico=null;						
				
				if(evt.getSource().getClass().equals(JComboBox.class)
					|| evt.getSource().getClass().equals(JComboBoxMe.class)) {
						
					jComboBoxGenerico=(JComboBox)evt.getSource();
					
					containerParent=jComboBoxGenerico.getParent();
					
					componentOpposite=evt.getOppositeComponent();
					
					if((containerParent!=null && containerParent.getClass().equals(JTableMe.class))
					|| (componentOpposite!=null && componentOpposite.getClass().equals(JTableMe.class))
					) {					
						esControlTabla=true;
					}
					
					this.esControlTabla=esControlTabla;
				}
				
				String sFinalQueryCombo="";
				
				


				
				EstructuraBeanSwingJInternalFrameAdditional.procesarEventosVista(this.parametroGeneralUsuario,this.moduloActual,this.opcionActual,this.usuarioActual,this,FuncionTipo.AFTER,ControlTipo.COMBOBOX,EventoTipo.CHANGE,EventoSubTipo.CHANGED,sTipo,this.estructura,new Object(),this.estructuraParameterGeneral,this.estructuraReturnGeneral);
				
				
				if(esUsoDesdeHijoLocal) {
					Long id=0L;
					
					generalEntityParameterGeneral.setEventoGlobalTipo(EventoGlobalTipo.FORM_HIJO_ACTUALIZAR);
					generalEntityParameterGeneral.setsDominio("Formulario");
					generalEntityParameterGeneral.setsDominioTipo(Estructura.class.getName());
				
					if(this.jInternalFrameParent!=null) {
						this.jInternalFrameParent.setEventoParentGeneral(esUsoDesdeHijoLocal,"Formulario",Estructura.class.getName(),sTipo,"TEXTFIELD",esControlTabla,conIrServidorAplicacionParent,
							id,jComboBoxGenerico, EventoGlobalTipo.FORM_HIJO_ACTUALIZAR,ControlTipo.COMBOBOX,EventoTipo.CHANGE,EventoSubTipo.CHANGED,arrClasses,
							evt,generalEntityParameterGeneral,null);
					}
				}			
			}
			
  		} catch(Exception e) {
  			FuncionesSwing.manageException2(this, e,logger,EstructuraConstantesFunciones.CLASSNAME);
  		}
		
		*/
    }
	
	public void jComboBoxFocusGainedGeneral(String sTipo,java.awt.event.FocusEvent evt) { 	  
		try {
			//SELECCIONA FILA A OBJETO ACTUAL			
			this.seleccionarFilaTablaEstructuraActual();
			
			//SELECCIONA FILA A OBJETO ANTERIOR
			Integer intSelectedRow = this.jTableDatosEstructura.getSelectedRow();
					
			if(intSelectedRow!=null && intSelectedRow>-1) {
				//ARCHITECTURE
				if(Constantes.ISUSAEJBLOGICLAYER) {
					this.estructuraAnterior =(Estructura) this.estructuraLogic.getEstructuras().toArray()[this.jTableDatosEstructura.convertRowIndexToModel(intSelectedRow)];
				} else if(Constantes.ISUSAEJBREMOTE || Constantes.ISUSAEJBHOME ) {
					this.estructuraAnterior =(Estructura) this.estructuras.toArray()[this.jTableDatosEstructura.convertRowIndexToModel(intSelectedRow)];
				}
				//ARCHITECTURE
				
				//System.out.println(this.banco);
			}
			
		} catch(Exception e) {
  			FuncionesSwing.manageException2(this, e,logger,EstructuraConstantesFunciones.CLASSNAME);
  		}
    }		
	
	public void tableValueChangedGeneral(String sTipo,ListSelectionEvent evt) { 	  
		try {
			if(this.permiteManejarEventosControl()) {
				EstructuraBeanSwingJInternalFrameAdditional.procesarEventosVista(this.parametroGeneralUsuario,this.moduloActual,this.opcionActual,this.usuarioActual,this,FuncionTipo.BEFORE,ControlTipo.TABLE,EventoTipo.CHANGE,EventoSubTipo.CHANGED,sTipo,this.estructura,new Object(),this.estructuraParameterGeneral,this.estructuraReturnGeneral);
				
				if(sTipo.equals("TableDatosSeleccionarEstructura")) {
					//BYDAN_DESHABILITADO
					//try {jTableDatosEstructuraListSelectionListener(e);}catch(Exception e1){e1.printStackTrace();}
					
					//SOLO CUANDO MOUSE ES SOLTADO
					if (!evt.getValueIsAdjusting()) {
						//SELECCIONA FILA A OBJETO ACTUAL
						Integer intSelectedRow = this.jTableDatosEstructura.getSelectedRow();
						
						if(intSelectedRow!=null && intSelectedRow>-1) {
							//ARCHITECTURE
							if(Constantes.ISUSAEJBLOGICLAYER) {
								this.estructura =(Estructura) this.estructuraLogic.getEstructuras().toArray()[this.jTableDatosEstructura.convertRowIndexToModel(intSelectedRow)];
							} else if(Constantes.ISUSAEJBREMOTE || Constantes.ISUSAEJBHOME ) {
								this.estructura =(Estructura) this.estructuras.toArray()[this.jTableDatosEstructura.convertRowIndexToModel(intSelectedRow)];
							}
							//ARCHITECTURE
							
							//System.out.println(this.estructura);
						}
					}
					
				} else if(sTipo.equals("jButtonCancelarEstructura")) {
				
				}
				
				EstructuraBeanSwingJInternalFrameAdditional.procesarEventosVista(this.parametroGeneralUsuario,this.moduloActual,this.opcionActual,this.usuarioActual,this,FuncionTipo.AFTER,ControlTipo.TABLE,EventoTipo.CHANGE,EventoSubTipo.CHANGED,sTipo,this.estructura,new Object(),this.estructuraParameterGeneral,this.estructuraReturnGeneral);
			}
			
  		} catch(Exception e) {
  			FuncionesSwing.manageException2(this, e,logger,EstructuraConstantesFunciones.CLASSNAME);
  		}
    }
	
	public void tableMouseAdapterGeneral(String sTipo,MouseEvent evt) { 	  
		try {
			EstructuraBeanSwingJInternalFrameAdditional.procesarEventosVista(this.parametroGeneralUsuario,this.moduloActual,this.opcionActual,this.usuarioActual,this,FuncionTipo.BEFORE,ControlTipo.TABLE,EventoTipo.MOUSE,EventoSubTipo.CLICKED,sTipo,this.estructura,new Object(),this.estructuraParameterGeneral,this.estructuraReturnGeneral);
			
			if(sTipo.equals("DatosSeleccionarEstructura")) {
				if (evt.getClickCount() == 2) {
					jButtonIdActionPerformed(null,jTableDatosEstructura.getSelectedRow(),false,false);
				}	
			} else if(sTipo.equals("jButtonCancelarEstructura")) {
			
			}
			
			EstructuraBeanSwingJInternalFrameAdditional.procesarEventosVista(this.parametroGeneralUsuario,this.moduloActual,this.opcionActual,this.usuarioActual,this,FuncionTipo.AFTER,ControlTipo.TABLE,EventoTipo.MOUSE,EventoSubTipo.CLICKED,sTipo,this.estructura,new Object(),this.estructuraParameterGeneral,this.estructuraReturnGeneral);
  		} catch(Exception e) {
  			FuncionesSwing.manageException2(this, e,logger,EstructuraConstantesFunciones.CLASSNAME);
  		}
    }
	
	;
	
	public void jButtonActionPerformedTecladoGeneral(String sTipo,ActionEvent evt) { 	  
		try {
			this.startProcessEstructura();
			
			EstructuraBeanSwingJInternalFrameAdditional.procesarEventosVista(this.parametroGeneralUsuario,this.moduloActual,this.opcionActual,this.usuarioActual,this,FuncionTipo.BEFORE,ControlTipo.KEY,EventoTipo.CLIC,EventoSubTipo.CLICKED,sTipo,this.estructura,new Object(),this.estructuraParameterGeneral,this.estructuraReturnGeneral);
			
			if(sTipo.equals("NuevoEstructura")) {
				jButtonNuevoEstructuraActionPerformed(evt,false);
				
			} else if(sTipo.equals("DuplicarEstructura")) {
				jButtonDuplicarEstructuraActionPerformed(evt,false);
				
			} else if(sTipo.equals("CopiarEstructura")) {
				jButtonCopiarEstructuraActionPerformed(evt);
				
			} else if(sTipo.equals("VerFormEstructura")) {
				jButtonVerFormEstructuraActionPerformed(evt);
				
			} else if(sTipo.equals("NuevoRelacionesEstructura")) {
				jButtonNuevoEstructuraActionPerformed(evt,true);
				
			} else if(sTipo.equals("ModificarEstructura")) {
				jButtonModificarEstructuraActionPerformed(evt);
				
			} else if(sTipo.equals("ActualizarEstructura")) {
				jButtonActualizarEstructuraActionPerformed(evt);
				
			} else if(sTipo.equals("EliminarEstructura")) {
				jButtonEliminarEstructuraActionPerformed(evt);
				
			} else if(sTipo.equals("GuardarCambiosTablaEstructura")) {
				jButtonGuardarCambiosEstructuraActionPerformed(evt);
				
			} else if(sTipo.equals("CancelarEstructura")) {
				jButtonCancelarEstructuraActionPerformed(evt);
				
			} else if(sTipo.equals("CerrarEstructura")) {
				jButtonCerrarEstructuraActionPerformed(evt);
				
			} else if(sTipo.equals("GuardarCambiosEstructura")) {
				jButtonGuardarCambiosEstructuraActionPerformed(evt);
			
			} else if(sTipo.equals("NuevoGuardarCambiosEstructura")) {
				jButtonNuevoGuardarCambiosEstructuraActionPerformed(evt);
			
			} else if(sTipo.equals("AbrirOrderByEstructura")) {
				jButtonAbrirOrderByEstructuraActionPerformed(evt);
			
			} else if(sTipo.equals("RecargarInformacionEstructura")) {
				jButtonRecargarInformacionEstructuraActionPerformed(evt);
			
			} else if(sTipo.equals("AnterioresEstructura")) {
				jButtonAnterioresEstructuraActionPerformed(evt);			
			
			}  else if(sTipo.equals("SiguientesEstructura")) {
				jButtonSiguientesEstructuraActionPerformed(evt);			
			} 
			
			
			//BUSQUEDA GENERAL CAMPO
			else if(sTipo.equals("idEstructuraBusqueda")) {
				this.jButtonidEstructuraBusquedaActionPerformed(evt);
			}
			//ACTUALIZAR CAMPO
			else if(sTipo.equals("id_empresaEstructuraUpdate")) {
				this.jButtonid_empresaEstructuraUpdateActionPerformed(evt);
			}
			//BUSQUEDA GENERAL CAMPO
			else if(sTipo.equals("id_empresaEstructuraBusqueda")) {
				this.jButtonid_empresaEstructuraBusquedaActionPerformed(evt);
			}
			//ACTUALIZAR CAMPO
			else if(sTipo.equals("id_sucursalEstructuraUpdate")) {
				this.jButtonid_sucursalEstructuraUpdateActionPerformed(evt);
			}
			//BUSQUEDA GENERAL CAMPO
			else if(sTipo.equals("id_sucursalEstructuraBusqueda")) {
				this.jButtonid_sucursalEstructuraBusquedaActionPerformed(evt);
			}
			//ACTUALIZAR CAMPO
			else if(sTipo.equals("id_estructuraEstructuraUpdate")) {
				this.jButtonid_estructuraEstructuraUpdateActionPerformed(evt);
			}
			//BUSQUEDA GENERAL CAMPO
			else if(sTipo.equals("id_estructuraEstructuraBusqueda")) {
				this.jButtonid_estructuraEstructuraBusquedaActionPerformed(evt);
			}
			//ACTUALIZAR CAMPO
			else if(sTipo.equals("id_tipo_pago__n_mEstructuraUpdate")) {
				this.jButtonid_tipo_pago__n_mEstructuraUpdateActionPerformed(evt);
			}
			//BUSQUEDA GENERAL CAMPO
			else if(sTipo.equals("id_tipo_pago__n_mEstructuraBusqueda")) {
				this.jButtonid_tipo_pago__n_mEstructuraBusquedaActionPerformed(evt);
			}
			//ACTUALIZAR CAMPO
			else if(sTipo.equals("id_numero_patronalEstructuraUpdate")) {
				this.jButtonid_numero_patronalEstructuraUpdateActionPerformed(evt);
			}
			//BUSQUEDA GENERAL CAMPO
			else if(sTipo.equals("id_numero_patronalEstructuraBusqueda")) {
				this.jButtonid_numero_patronalEstructuraBusquedaActionPerformed(evt);
			}
			//BUSQUEDA CAMPO
			else if(sTipo.equals("id_cuenta_contableEstructura")) {
				this.jButtonid_cuenta_contableEstructuraActionPerformed(evt);
			}
			//BUSQUEDA ARBOL CAMPO
			else if(sTipo.equals("id_cuenta_contableEstructuraArbol")) {
				this.abrirFrameTreeCuentaContable("BUSQUEDA_FK");
			}
			//ACTUALIZAR CAMPO
			else if(sTipo.equals("id_cuenta_contableEstructuraUpdate")) {
				this.jButtonid_cuenta_contableEstructuraUpdateActionPerformed(evt);
			}
			//BUSQUEDA GENERAL CAMPO
			else if(sTipo.equals("id_cuenta_contableEstructuraBusqueda")) {
				this.jButtonid_cuenta_contableEstructuraBusquedaActionPerformed(evt);
			}
			//ACTUALIZAR CAMPO
			else if(sTipo.equals("id_tipo_estructuraEstructuraUpdate")) {
				this.jButtonid_tipo_estructuraEstructuraUpdateActionPerformed(evt);
			}
			//BUSQUEDA GENERAL CAMPO
			else if(sTipo.equals("id_tipo_estructuraEstructuraBusqueda")) {
				this.jButtonid_tipo_estructuraEstructuraBusquedaActionPerformed(evt);
			}
			//ACTUALIZAR CAMPO
			else if(sTipo.equals("id_paisEstructuraUpdate")) {
				this.jButtonid_paisEstructuraUpdateActionPerformed(evt);
			}
			//BUSQUEDA GENERAL CAMPO
			else if(sTipo.equals("id_paisEstructuraBusqueda")) {
				this.jButtonid_paisEstructuraBusquedaActionPerformed(evt);
			}
			//ACTUALIZAR CAMPO
			else if(sTipo.equals("id_ciudadEstructuraUpdate")) {
				this.jButtonid_ciudadEstructuraUpdateActionPerformed(evt);
			}
			//BUSQUEDA GENERAL CAMPO
			else if(sTipo.equals("id_ciudadEstructuraBusqueda")) {
				this.jButtonid_ciudadEstructuraBusquedaActionPerformed(evt);
			}
			//BUSQUEDA GENERAL CAMPO
			else if(sTipo.equals("codigoEstructuraBusqueda")) {
				this.jButtoncodigoEstructuraBusquedaActionPerformed(evt);
			}
			//BUSQUEDA GENERAL CAMPO
			else if(sTipo.equals("numeroEstructuraBusqueda")) {
				this.jButtonnumeroEstructuraBusquedaActionPerformed(evt);
			}
			//BUSQUEDA GENERAL CAMPO
			else if(sTipo.equals("valor_anticipoEstructuraBusqueda")) {
				this.jButtonvalor_anticipoEstructuraBusquedaActionPerformed(evt);
			}
			//BUSQUEDA GENERAL CAMPO
			else if(sTipo.equals("porcentaje_anticipoEstructuraBusqueda")) {
				this.jButtonporcentaje_anticipoEstructuraBusquedaActionPerformed(evt);
			}
			//BUSQUEDA GENERAL CAMPO
			else if(sTipo.equals("nombreEstructuraBusqueda")) {
				this.jButtonnombreEstructuraBusquedaActionPerformed(evt);
			}
			//BUSQUEDA GENERAL CAMPO
			else if(sTipo.equals("es_jefeEstructuraBusqueda")) {
				this.jButtones_jefeEstructuraBusquedaActionPerformed(evt);
			}
			//BUSQUEDA GENERAL CAMPO
			else if(sTipo.equals("es_anualEstructuraBusqueda")) {
				this.jButtones_anualEstructuraBusquedaActionPerformed(evt);
			}
			//BUSQUEDA GENERAL CAMPO
			else if(sTipo.equals("porcentajeEstructuraBusqueda")) {
				this.jButtonporcentajeEstructuraBusquedaActionPerformed(evt);
			}
			//BUSQUEDA GENERAL CAMPO
			else if(sTipo.equals("valorEstructuraBusqueda")) {
				this.jButtonvalorEstructuraBusquedaActionPerformed(evt);
			}
			
			EstructuraBeanSwingJInternalFrameAdditional.procesarEventosVista(this.parametroGeneralUsuario,this.moduloActual,this.opcionActual,this.usuarioActual,this,FuncionTipo.AFTER,ControlTipo.KEY,EventoTipo.CLIC,EventoSubTipo.CLICKED,sTipo,this.estructura,new Object(),this.estructuraParameterGeneral,this.estructuraReturnGeneral);
  		} catch(Exception e) {
  			FuncionesSwing.manageException2(this, e,logger,EstructuraConstantesFunciones.CLASSNAME);
			
  		}  finally {
      		this.finishProcessEstructura();
      	}
    }
	
	public void internalFrameClosingInternalFrameGeneral(String sTipo,InternalFrameEvent evt) { 	  
		try {
			EstructuraBeanSwingJInternalFrameAdditional.procesarEventosVista(this.parametroGeneralUsuario,this.moduloActual,this.opcionActual,this.usuarioActual,this,FuncionTipo.BEFORE,ControlTipo.WINDOW,EventoTipo.CLIC,EventoSubTipo.CLOSING,sTipo,this.estructura,new Object(),this.estructuraParameterGeneral,this.estructuraReturnGeneral);
			
			if(sTipo.equals("CloseInternalFrameEstructura")) {
				closingInternalFrameEstructura();
				
			} else if(sTipo.equals("jButtonCancelarEstructura")) {
				JInternalFrameBase jInternalFrameDetalleFormEstructura = (JInternalFrameBase)evt.getSource();
	            	
	            EstructuraBeanSwingJInternalFrame jInternalFrameParent=(EstructuraBeanSwingJInternalFrame)jInternalFrameDetalleFormEstructura.getjInternalFrameParent();
	            
				jInternalFrameParent.jButtonCancelarEstructuraActionPerformed(null);
			}
			
			EstructuraBeanSwingJInternalFrameAdditional.procesarEventosVista(this.parametroGeneralUsuario,this.moduloActual,this.opcionActual,this.usuarioActual,this,FuncionTipo.AFTER,ControlTipo.WINDOW,EventoTipo.CLIC,EventoSubTipo.CLOSING,sTipo,this.estructura,new Object(),this.estructuraParameterGeneral,this.estructuraReturnGeneral);
  		} catch(Exception e) {
  			FuncionesSwing.manageException2(this, e,logger,EstructuraConstantesFunciones.CLASSNAME);
  		}
    }
	
	public void recargarFormEstructura(String sTipo,String sDominio,EventoGlobalTipo eventoGlobalTipo,ControlTipo controlTipo,EventoTipo eventoTipo,EventoSubTipo eventoSubTipo,String sTipoGeneral,ArrayList<Classe> classes,Boolean conIrServidorAplicacion) throws Exception {
		this.recargarFormEstructura(sTipo,sDominio,eventoGlobalTipo,controlTipo,eventoTipo,eventoSubTipo,sTipoGeneral,classes,conIrServidorAplicacion,false);
	}
	
	public void recargarFormEstructura(String sTipo,String sDominio,EventoGlobalTipo eventoGlobalTipo,ControlTipo controlTipo,EventoTipo eventoTipo,EventoSubTipo eventoSubTipo,String sTipoGeneral,ArrayList<Classe> classes,Boolean conIrServidorAplicacion,Boolean esControlTabla) throws Exception {
		if(this.permiteRecargarForm && this.permiteMantenimiento(this.estructura)) {
			if(!esControlTabla) {
				if(EstructuraJInternalFrame.ISBINDING_MANUAL_TABLA) {			
					this.setVariablesFormularioToObjetoActualEstructura(this.estructura,true,false);
					this.setVariablesFormularioToObjetoActualForeignKeysEstructura(this.estructura);			
				}
				
				if(this.estructuraSessionBean.getEstaModoGuardarRelaciones()) {
					this.setVariablesFormularioRelacionesToObjetoActualEstructura(this.estructura,classes);				
				}
			
				if(conIrServidorAplicacion) {
					//ARCHITECTURE
					if(Constantes.ISUSAEJBLOGICLAYER) {						
						this.estructuraReturnGeneral=estructuraLogic.procesarEventosEstructurasWithConnection(this.parametroGeneralUsuario,this.moduloActual,this.opcionActual,this.usuarioActual,eventoGlobalTipo,controlTipo,eventoTipo,eventoSubTipo,sTipo,this.estructuraLogic.getEstructuras(),this.estructura,this.estructuraParameterGeneral,this.isEsNuevoEstructura,classes);//this.estructuraLogic.getEstructura()//sTipoGeneral
									
					} else if(Constantes.ISUSAEJBREMOTE) {
									
					} else if(Constantes.ISUSAEJBHOME) {
					}
					//ARCHITECTURE
					
					//ACTUALIZA VARIABLES DEFECTO DESDE LOGIC A RETURN GENERAL Y LUEGO A BEAN
					//this.setVariablesObjetoReturnGeneralToBeanEstructura(this.estructuraReturnGeneral,this.estructuraBean,false);
						
					//ACTUALIZA VARIABLES RELACIONES DEFECTO DESDE LOGIC A RETURN GENERAL Y LUEGO A BEAN
					if(this.estructuraSessionBean.getEstaModoGuardarRelaciones()) {
						//this.setVariablesRelacionesObjetoReturnGeneralToBeanEstructura(classes,this.estructuraReturnGeneral,this.estructuraBean,false);
					}
						
					if(this.estructuraReturnGeneral.getConRecargarPropiedades()) {
						//INICIALIZA VARIABLES COMBOS NORMALES (FK)
						this.setVariablesObjetoActualToFormularioForeignKeyEstructura(this.estructuraReturnGeneral.getEstructura());
							
						//INICIALIZA VARIABLES NORMALES A FORMULARIO(SIN FK)
						this.setVariablesObjetoActualToFormularioEstructura(this.estructuraReturnGeneral.getEstructura());	
					}
						
					if(this.estructuraReturnGeneral.getConRecargarRelaciones()) {
						//INICIALIZA VARIABLES RELACIONES A FORMULARIO
						this.setVariablesRelacionesObjetoActualToFormularioEstructura(this.estructuraReturnGeneral.getEstructura(),classes);//this.estructuraBean);	
					}									
					
				} else {				
					//INICIALIZA VARIABLES RELACIONES A FORMULARIO
					this.setVariablesRelacionesObjetoActualToFormularioEstructura(this.estructura,classes);//this.estructuraBean);									
				}
			
				if(EstructuraJInternalFrame.ISBINDING_MANUAL_TABLA) {
					this.setVariablesFormularioToObjetoActualEstructura(this.estructura,true,false);
					this.setVariablesFormularioToObjetoActualForeignKeysEstructura(this.estructura);				
				}
				
			} else {
				
				if(((controlTipo.equals(ControlTipo.TEXTBOX) || controlTipo.equals(ControlTipo.DATE)
					|| controlTipo.equals(ControlTipo.TEXTAREA) || controlTipo.equals(ControlTipo.COMBOBOX)
					)				
					&& eventoTipo.equals(EventoTipo.CHANGE)
					)
					
					|| (controlTipo.equals(ControlTipo.CHECKBOX) && eventoTipo.equals(EventoTipo.CLIC))
					
				) { // && sTipoGeneral.equals("TEXTBOX")
					
					if(this.estructuraAnterior!=null) {
						this.estructura=this.estructuraAnterior;
					}
				}
				
				if(conIrServidorAplicacion) {
					//ARCHITECTURE
					if(Constantes.ISUSAEJBLOGICLAYER) {						
						this.estructuraReturnGeneral=estructuraLogic.procesarEventosEstructurasWithConnection(this.parametroGeneralUsuario,this.moduloActual,this.opcionActual,this.usuarioActual,eventoGlobalTipo,controlTipo,eventoTipo,eventoSubTipo,sTipo,this.estructuraLogic.getEstructuras(),this.estructura,this.estructuraParameterGeneral,this.isEsNuevoEstructura,classes);//this.estructuraLogic.getEstructura()//sTipoGeneral
									
					} else if(Constantes.ISUSAEJBREMOTE) {
									
					} else if(Constantes.ISUSAEJBHOME) {
					}
					//ARCHITECTURE
				}
				
				//ARCHITECTURE
				if(Constantes.ISUSAEJBLOGICLAYER) {
					//NO ENTENDIBLE PORQUE PONER
					//if(this.estructuraSessionBean.getEstaModoGuardarRelaciones() 
					//	|| this.estructuraSessionBean.getEsGuardarRelacionado())	{
						actualizarLista(this.estructuraReturnGeneral.getEstructura(),estructuraLogic.getEstructuras());
					//}
				} else if(Constantes.ISUSAEJBREMOTE||Constantes.ISUSAEJBHOME) {
					actualizarLista(this.estructuraReturnGeneral.getEstructura(),this.estructuras);
				}
				//ARCHITECTURE
				
				//this.jTableDatosEstructura.repaint();
				
				//((AbstractTableModel) this.jTableDatosEstructura.getModel()).fireTableDataChanged();
				
				this.actualizarVisualTableDatosEstructura();
			}
		}
	}
	
	public void actualizarVisualTableDatosEstructura() throws Exception {
		
		EstructuraModel estructuraModel=(EstructuraModel)this.jTableDatosEstructura.getModel();
		
		if(Constantes.ISUSAEJBLOGICLAYER) {
			estructuraModel.estructuras=this.estructuraLogic.getEstructuras();
		
		} else if(Constantes.ISUSAEJBREMOTE || Constantes.ISUSAEJBHOME ) {
			estructuraModel.estructuras=this.estructuras;
		}
		
		
		((EstructuraModel) this.jTableDatosEstructura.getModel()).fireTableDataChanged();
	}
	
	public void actualizarVisualTableDatosEventosVistaEstructura() throws Exception {
		
		//ARCHITECTURE
		if(Constantes.ISUSAEJBLOGICLAYER) {
			this.actualizarLista(this.getestructuraAnterior(),this.estructuraLogic.getEstructuras());
					
		} else if(Constantes.ISUSAEJBREMOTE||Constantes.ISUSAEJBHOME) {
			this.actualizarLista(this.getestructuraAnterior(),this.estructuras);
		}
		//ARCHITECTURE
						
		this.actualizarFilaTotales();
						
		this.actualizarVisualTableDatosEstructura();	
	}
	
	public void setVariablesRelacionesObjetoActualToFormularioEstructura(Estructura estructura,ArrayList<Classe> classes) throws Exception { 
		try {
			
			for(Classe clas:classes) {
				if(clas.clas.equals(CentroCostoEstructura.class)) {
					this.jInternalFrameDetalleFormEstructura.centrocostoestructuraBeanSwingJInternalFrame.centrocostoestructuraLogic.setCentroCostoEstructuras(estructura.getCentroCostoEstructuras());
					this.jInternalFrameDetalleFormEstructura.centrocostoestructuraBeanSwingJInternalFrame.inicializarActualizarBindingTablaCentroCostoEstructura(false);
					break;
				}
			}
			for(Classe clas:classes) {
				if(clas.clas.equals(PlaniVacacion.class)) {
					this.jInternalFrameDetalleFormEstructura.planivacacionBeanSwingJInternalFrame.planivacacionLogic.setPlaniVacacions(estructura.getPlaniVacacionCargos());
					this.jInternalFrameDetalleFormEstructura.planivacacionBeanSwingJInternalFrame.inicializarActualizarBindingTablaPlaniVacacion(false);
					break;
				}
			}
			for(Classe clas:classes) {
				if(clas.clas.equals(AsistenciaMensual.class)) {
					this.jInternalFrameDetalleFormEstructura.asistenciamensualBeanSwingJInternalFrame.asistenciamensualLogic.setAsistenciaMensuals(estructura.getAsistenciaMensuals());
					this.jInternalFrameDetalleFormEstructura.asistenciamensualBeanSwingJInternalFrame.inicializarActualizarBindingTablaAsistenciaMensual(false);
					break;
				}
			}
			for(Classe clas:classes) {
				if(clas.clas.equals(EmpleadoProcesoRubro.class)) {
					this.jInternalFrameDetalleFormEstructura.empleadoprocesorubroBeanSwingJInternalFrame.empleadoprocesorubroLogic.setEmpleadoProcesoRubros(estructura.getEmpleadoProcesoRubros());
					this.jInternalFrameDetalleFormEstructura.empleadoprocesorubroBeanSwingJInternalFrame.inicializarActualizarBindingTablaEmpleadoProcesoRubro(false);
					break;
				}
			}
			for(Classe clas:classes) {
				if(clas.clas.equals(EmpleadoPagoRubro.class)) {
					this.jInternalFrameDetalleFormEstructura.empleadopagorubroBeanSwingJInternalFrame.empleadopagorubroLogic.setEmpleadoPagoRubros(estructura.getEmpleadoPagoRubros());
					this.jInternalFrameDetalleFormEstructura.empleadopagorubroBeanSwingJInternalFrame.inicializarActualizarBindingTablaEmpleadoPagoRubro(false);
					break;
				}
			}
			for(Classe clas:classes) {
				if(clas.clas.equals(ProvisionEmpleado.class)) {
					this.jInternalFrameDetalleFormEstructura.provisionempleadoBeanSwingJInternalFrame.provisionempleadoLogic.setProvisionEmpleados(estructura.getProvisionEmpleados());
					this.jInternalFrameDetalleFormEstructura.provisionempleadoBeanSwingJInternalFrame.inicializarActualizarBindingTablaProvisionEmpleado(false);
					break;
				}
			}
			for(Classe clas:classes) {
				if(clas.clas.equals(Empleado.class)) {
					this.jInternalFrameDetalleFormEstructura.empleadoBeanSwingJInternalFrame.empleadoLogic.setEmpleados(estructura.getEmpleados());
					this.jInternalFrameDetalleFormEstructura.empleadoBeanSwingJInternalFrame.inicializarActualizarBindingTablaEmpleado(false);
					break;
				}
			}
			for(Classe clas:classes) {
				if(clas.clas.equals(Estructura.class)) {
					this.jInternalFrameDetalleFormEstructura.estructuraBeanSwingJInternalFrame.estructuraLogic.setEstructuras(estructura.getEstructuras());
					this.jInternalFrameDetalleFormEstructura.estructuraBeanSwingJInternalFrame.inicializarActualizarBindingTablaEstructura(false);
					break;
				}
			}
			for(Classe clas:classes) {
				if(clas.clas.equals(EvaluacionEmpleado.class)) {
					this.jInternalFrameDetalleFormEstructura.evaluacionempleadoBeanSwingJInternalFrame.evaluacionempleadoLogic.setEvaluacionEmpleados(estructura.getEvaluacionEmpleados());
					this.jInternalFrameDetalleFormEstructura.evaluacionempleadoBeanSwingJInternalFrame.inicializarActualizarBindingTablaEvaluacionEmpleado(false);
					break;
				}
			}
			for(Classe clas:classes) {
				if(clas.clas.equals(EmpleadoImpuestoRenta.class)) {
					this.jInternalFrameDetalleFormEstructura.empleadoimpuestorentaBeanSwingJInternalFrame.empleadoimpuestorentaLogic.setEmpleadoImpuestoRentas(estructura.getEmpleadoImpuestoRentas());
					this.jInternalFrameDetalleFormEstructura.empleadoimpuestorentaBeanSwingJInternalFrame.inicializarActualizarBindingTablaEmpleadoImpuestoRenta(false);
					break;
				}
			}
			for(Classe clas:classes) {
				if(clas.clas.equals(RubroEstructura.class)) {
					this.jInternalFrameDetalleFormEstructura.rubroestructuraBeanSwingJInternalFrame.rubroestructuraLogic.setRubroEstructuras(estructura.getRubroEstructuras());
					this.jInternalFrameDetalleFormEstructura.rubroestructuraBeanSwingJInternalFrame.inicializarActualizarBindingTablaRubroEstructura(false);
					break;
				}
			}
			for(Classe clas:classes) {
				if(clas.clas.equals(CierreRolMensual.class)) {
					this.jInternalFrameDetalleFormEstructura.cierrerolmensualBeanSwingJInternalFrame.cierrerolmensualLogic.setCierreRolMensuals(estructura.getCierreRolMensuals());
					this.jInternalFrameDetalleFormEstructura.cierrerolmensualBeanSwingJInternalFrame.inicializarActualizarBindingTablaCierreRolMensual(false);
					break;
				}
			}
			for(Classe clas:classes) {
				if(clas.clas.equals(FormatoNomi.class)) {
					this.jInternalFrameDetalleFormEstructura.formatonomiBeanSwingJInternalFrame.formatonomiLogic.setFormatoNomis(estructura.getFormatoNomis());
					this.jInternalFrameDetalleFormEstructura.formatonomiBeanSwingJInternalFrame.inicializarActualizarBindingTablaFormatoNomi(false);
					break;
				}
			}
			for(Classe clas:classes) {
				if(clas.clas.equals(EmpleadoEstructura.class)) {
					this.jInternalFrameDetalleFormEstructura.empleadoestructuraBeanSwingJInternalFrame.empleadoestructuraLogic.setEmpleadoEstructuras(estructura.getEmpleadoEstructuras());
					this.jInternalFrameDetalleFormEstructura.empleadoestructuraBeanSwingJInternalFrame.inicializarActualizarBindingTablaEmpleadoEstructura(false);
					break;
				}
			}
			for(Classe clas:classes) {
				if(clas.clas.equals(HistorialPagoNomi.class)) {
					this.jInternalFrameDetalleFormEstructura.historialpagonomiBeanSwingJInternalFrame.historialpagonomiLogic.setHistorialPagoNomis(estructura.getHistorialPagoNomis());
					this.jInternalFrameDetalleFormEstructura.historialpagonomiBeanSwingJInternalFrame.inicializarActualizarBindingTablaHistorialPagoNomi(false);
					break;
				}
			}
			for(Classe clas:classes) {
				if(clas.clas.equals(AsistenciaDiaria.class)) {
					this.jInternalFrameDetalleFormEstructura.asistenciadiariaBeanSwingJInternalFrame.asistenciadiariaLogic.setAsistenciaDiarias(estructura.getAsistenciaDiarias());
					this.jInternalFrameDetalleFormEstructura.asistenciadiariaBeanSwingJInternalFrame.inicializarActualizarBindingTablaAsistenciaDiaria(false);
					break;
				}
			}
			for(Classe clas:classes) {
				if(clas.clas.equals(FuncionEstruc.class)) {
					this.jInternalFrameDetalleFormEstructura.funcionestrucBeanSwingJInternalFrame.funcionestrucLogic.setFuncionEstrucs(estructura.getFuncionEstrucs());
					this.jInternalFrameDetalleFormEstructura.funcionestrucBeanSwingJInternalFrame.inicializarActualizarBindingTablaFuncionEstruc(false);
					break;
				}
			}
			for(Classe clas:classes) {
				if(clas.clas.equals(SolicitudReemplazo.class)) {
					this.jInternalFrameDetalleFormEstructura.solicitudreemplazoBeanSwingJInternalFrame.solicitudreemplazoLogic.setSolicitudReemplazos(estructura.getSolicitudReemplazos());
					this.jInternalFrameDetalleFormEstructura.solicitudreemplazoBeanSwingJInternalFrame.inicializarActualizarBindingTablaSolicitudReemplazo(false);
					break;
				}
			}
			for(Classe clas:classes) {
				if(clas.clas.equals(SolicitudHoraExtra.class)) {
					this.jInternalFrameDetalleFormEstructura.solicitudhoraextraBeanSwingJInternalFrame.solicitudhoraextraLogic.setSolicitudHoraExtras(estructura.getSolicitudHoraExtras());
					this.jInternalFrameDetalleFormEstructura.solicitudhoraextraBeanSwingJInternalFrame.inicializarActualizarBindingTablaSolicitudHoraExtra(false);
					break;
				}
			}
			for(Classe clas:classes) {
				if(clas.clas.equals(EvaluacionNomi.class)) {
					this.jInternalFrameDetalleFormEstructura.evaluacionnomiBeanSwingJInternalFrame.evaluacionnomiLogic.setEvaluacionNomis(estructura.getEvaluacionNomis());
					this.jInternalFrameDetalleFormEstructura.evaluacionnomiBeanSwingJInternalFrame.inicializarActualizarBindingTablaEvaluacionNomi(false);
					break;
				}
			}
			for(Classe clas:classes) {
				if(clas.clas.equals(SolicitudVacacion.class)) {
					this.jInternalFrameDetalleFormEstructura.solicitudvacacionBeanSwingJInternalFrame.solicitudvacacionLogic.setSolicitudVacacions(estructura.getSolicitudVacacions());
					this.jInternalFrameDetalleFormEstructura.solicitudvacacionBeanSwingJInternalFrame.inicializarActualizarBindingTablaSolicitudVacacion(false);
					break;
				}
			}
			for(Classe clas:classes) {
				if(clas.clas.equals(ResponsableActivoFijo.class)) {
					this.jInternalFrameDetalleFormEstructura.responsableactivofijoBeanSwingJInternalFrame.responsableactivofijoLogic.setResponsableActivoFijos(estructura.getResponsableActivoFijos());
					this.jInternalFrameDetalleFormEstructura.responsableactivofijoBeanSwingJInternalFrame.inicializarActualizarBindingTablaResponsableActivoFijo(false);
					break;
				}
			}
			for(Classe clas:classes) {
				if(clas.clas.equals(RubroEmpleaCuentaContable.class)) {
					this.jInternalFrameDetalleFormEstructura.rubroempleacuentacontableBeanSwingJInternalFrame.rubroempleacuentacontableLogic.setRubroEmpleaCuentaContables(estructura.getRubroEmpleaCuentaContables());
					this.jInternalFrameDetalleFormEstructura.rubroempleacuentacontableBeanSwingJInternalFrame.inicializarActualizarBindingTablaRubroEmpleaCuentaContable(false);
					break;
				}
			}
			
		} catch(Exception e) {
			FuncionesSwing.manageException(this, e,logger,EstructuraConstantesFunciones.CLASSNAME);
		}
	}
	
	public void setEventoParentGeneral(Boolean esUsoDesdeHijo,String sDominio,String sDominioTipo,String sTipo,String sTipoGeneral,Boolean esControlTabla,Boolean conIrServidorAplicacion,
						Long id,Component control, EventoGlobalTipo eventoGlobalTipo,ControlTipo controlTipo,EventoTipo eventoTipo,EventoSubTipo eventoSubTipo,ArrayList<String> arrClasses,
						Object evt,GeneralEntityParameterReturnGeneral generalEntityParameterGeneral,Object otro) { 	  
		try {
			
			if(this.permiteManejarEventosControl()) {
				
				//BASE COPIADO DESDE TEXTFIELLOSTFOCUS
				
				//EventoGlobalTipo.FORM_HIJO_ACTUALIZAR;
				Boolean conTodasRelaciones=false;
				
				this.esUsoDesdeHijo=esUsoDesdeHijo;
										
				EstructuraBeanSwingJInternalFrameAdditional.procesarEventosVista(this.parametroGeneralUsuario,this.moduloActual,this.opcionActual,this.usuarioActual,this,FuncionTipo.BEFORE,controlTipo,eventoTipo,eventoSubTipo,sTipo,this.estructura,new Object(),generalEntityParameterGeneral,this.estructuraReturnGeneral);
				
				ArrayList<Classe> classes=new ArrayList<Classe>();
				
				for(String sClasse:arrClasses) {
					if(sClasse.equals("TODOS")) {
						conTodasRelaciones=true;
						break;
					}
				}
				
				if(this.estructuraSessionBean.getConGuardarRelaciones()) {
					if(conTodasRelaciones) {
						classes=EstructuraConstantesFunciones.getClassesRelationshipsOfEstructura(new ArrayList<Classe>(),DeepLoadType.NONE);
					} else {
						classes=EstructuraConstantesFunciones.getClassesRelationshipsFromStringsOfEstructura(arrClasses,DeepLoadType.NONE);
					}
				}
	
				this.classesActual=new ArrayList<Classe>();
				this.classesActual.addAll(classes);
	
				this.recargarFormEstructura(sTipo,sDominio,eventoGlobalTipo,controlTipo,eventoTipo,eventoSubTipo,sTipoGeneral,classes,conIrServidorAplicacion,esControlTabla);
										
				EstructuraBeanSwingJInternalFrameAdditional.procesarEventosVista(this.parametroGeneralUsuario,this.moduloActual,this.opcionActual,this.usuarioActual,this,FuncionTipo.AFTER,controlTipo,eventoTipo,eventoSubTipo,sTipo,this.estructura,new Object(),generalEntityParameterGeneral,this.estructuraReturnGeneral);
			}
			
		} catch(Exception e) {
  			FuncionesSwing.manageException2(this, e,logger,EstructuraConstantesFunciones.CLASSNAME);
  		}
    }
	
	/*
	public void setVariablesRelacionesObjetoBeanActualToFormularioEstructura(EstructuraBean estructuraBean) throws Exception { 
		try {
			
			for(Classe clas:classes) {
				if(clas.clas.equals(CentroCostoEstructura.class)) {
					this.jInternalFrameDetalleFormEstructura.centrocostoestructuraBeanSwingJInternalFrame.centrocostoestructuraLogic.setCentroCostoEstructuras(estructura.getCentroCostoEstructuras());
					this.jInternalFrameDetalleFormEstructura.centrocostoestructuraBeanSwingJInternalFrame.inicializarActualizarBindingTablaCentroCostoEstructura(false);
					break;
				}
			}
			for(Classe clas:classes) {
				if(clas.clas.equals(PlaniVacacion.class)) {
					this.jInternalFrameDetalleFormEstructura.planivacacionBeanSwingJInternalFrame.planivacacionLogic.setPlaniVacacions(estructura.getPlaniVacacionCargos());
					this.jInternalFrameDetalleFormEstructura.planivacacionBeanSwingJInternalFrame.inicializarActualizarBindingTablaPlaniVacacion(false);
					break;
				}
			}
			for(Classe clas:classes) {
				if(clas.clas.equals(AsistenciaMensual.class)) {
					this.jInternalFrameDetalleFormEstructura.asistenciamensualBeanSwingJInternalFrame.asistenciamensualLogic.setAsistenciaMensuals(estructura.getAsistenciaMensuals());
					this.jInternalFrameDetalleFormEstructura.asistenciamensualBeanSwingJInternalFrame.inicializarActualizarBindingTablaAsistenciaMensual(false);
					break;
				}
			}
			for(Classe clas:classes) {
				if(clas.clas.equals(EmpleadoProcesoRubro.class)) {
					this.jInternalFrameDetalleFormEstructura.empleadoprocesorubroBeanSwingJInternalFrame.empleadoprocesorubroLogic.setEmpleadoProcesoRubros(estructura.getEmpleadoProcesoRubros());
					this.jInternalFrameDetalleFormEstructura.empleadoprocesorubroBeanSwingJInternalFrame.inicializarActualizarBindingTablaEmpleadoProcesoRubro(false);
					break;
				}
			}
			for(Classe clas:classes) {
				if(clas.clas.equals(EmpleadoPagoRubro.class)) {
					this.jInternalFrameDetalleFormEstructura.empleadopagorubroBeanSwingJInternalFrame.empleadopagorubroLogic.setEmpleadoPagoRubros(estructura.getEmpleadoPagoRubros());
					this.jInternalFrameDetalleFormEstructura.empleadopagorubroBeanSwingJInternalFrame.inicializarActualizarBindingTablaEmpleadoPagoRubro(false);
					break;
				}
			}
			for(Classe clas:classes) {
				if(clas.clas.equals(ProvisionEmpleado.class)) {
					this.jInternalFrameDetalleFormEstructura.provisionempleadoBeanSwingJInternalFrame.provisionempleadoLogic.setProvisionEmpleados(estructura.getProvisionEmpleados());
					this.jInternalFrameDetalleFormEstructura.provisionempleadoBeanSwingJInternalFrame.inicializarActualizarBindingTablaProvisionEmpleado(false);
					break;
				}
			}
			for(Classe clas:classes) {
				if(clas.clas.equals(Empleado.class)) {
					this.jInternalFrameDetalleFormEstructura.empleadoBeanSwingJInternalFrame.empleadoLogic.setEmpleados(estructura.getEmpleados());
					this.jInternalFrameDetalleFormEstructura.empleadoBeanSwingJInternalFrame.inicializarActualizarBindingTablaEmpleado(false);
					break;
				}
			}
			for(Classe clas:classes) {
				if(clas.clas.equals(Estructura.class)) {
					this.jInternalFrameDetalleFormEstructura.estructuraBeanSwingJInternalFrame.estructuraLogic.setEstructuras(estructura.getEstructuras());
					this.jInternalFrameDetalleFormEstructura.estructuraBeanSwingJInternalFrame.inicializarActualizarBindingTablaEstructura(false);
					break;
				}
			}
			for(Classe clas:classes) {
				if(clas.clas.equals(EvaluacionEmpleado.class)) {
					this.jInternalFrameDetalleFormEstructura.evaluacionempleadoBeanSwingJInternalFrame.evaluacionempleadoLogic.setEvaluacionEmpleados(estructura.getEvaluacionEmpleados());
					this.jInternalFrameDetalleFormEstructura.evaluacionempleadoBeanSwingJInternalFrame.inicializarActualizarBindingTablaEvaluacionEmpleado(false);
					break;
				}
			}
			for(Classe clas:classes) {
				if(clas.clas.equals(EmpleadoImpuestoRenta.class)) {
					this.jInternalFrameDetalleFormEstructura.empleadoimpuestorentaBeanSwingJInternalFrame.empleadoimpuestorentaLogic.setEmpleadoImpuestoRentas(estructura.getEmpleadoImpuestoRentas());
					this.jInternalFrameDetalleFormEstructura.empleadoimpuestorentaBeanSwingJInternalFrame.inicializarActualizarBindingTablaEmpleadoImpuestoRenta(false);
					break;
				}
			}
			for(Classe clas:classes) {
				if(clas.clas.equals(RubroEstructura.class)) {
					this.jInternalFrameDetalleFormEstructura.rubroestructuraBeanSwingJInternalFrame.rubroestructuraLogic.setRubroEstructuras(estructura.getRubroEstructuras());
					this.jInternalFrameDetalleFormEstructura.rubroestructuraBeanSwingJInternalFrame.inicializarActualizarBindingTablaRubroEstructura(false);
					break;
				}
			}
			for(Classe clas:classes) {
				if(clas.clas.equals(CierreRolMensual.class)) {
					this.jInternalFrameDetalleFormEstructura.cierrerolmensualBeanSwingJInternalFrame.cierrerolmensualLogic.setCierreRolMensuals(estructura.getCierreRolMensuals());
					this.jInternalFrameDetalleFormEstructura.cierrerolmensualBeanSwingJInternalFrame.inicializarActualizarBindingTablaCierreRolMensual(false);
					break;
				}
			}
			for(Classe clas:classes) {
				if(clas.clas.equals(FormatoNomi.class)) {
					this.jInternalFrameDetalleFormEstructura.formatonomiBeanSwingJInternalFrame.formatonomiLogic.setFormatoNomis(estructura.getFormatoNomis());
					this.jInternalFrameDetalleFormEstructura.formatonomiBeanSwingJInternalFrame.inicializarActualizarBindingTablaFormatoNomi(false);
					break;
				}
			}
			for(Classe clas:classes) {
				if(clas.clas.equals(EmpleadoEstructura.class)) {
					this.jInternalFrameDetalleFormEstructura.empleadoestructuraBeanSwingJInternalFrame.empleadoestructuraLogic.setEmpleadoEstructuras(estructura.getEmpleadoEstructuras());
					this.jInternalFrameDetalleFormEstructura.empleadoestructuraBeanSwingJInternalFrame.inicializarActualizarBindingTablaEmpleadoEstructura(false);
					break;
				}
			}
			for(Classe clas:classes) {
				if(clas.clas.equals(HistorialPagoNomi.class)) {
					this.jInternalFrameDetalleFormEstructura.historialpagonomiBeanSwingJInternalFrame.historialpagonomiLogic.setHistorialPagoNomis(estructura.getHistorialPagoNomis());
					this.jInternalFrameDetalleFormEstructura.historialpagonomiBeanSwingJInternalFrame.inicializarActualizarBindingTablaHistorialPagoNomi(false);
					break;
				}
			}
			for(Classe clas:classes) {
				if(clas.clas.equals(AsistenciaDiaria.class)) {
					this.jInternalFrameDetalleFormEstructura.asistenciadiariaBeanSwingJInternalFrame.asistenciadiariaLogic.setAsistenciaDiarias(estructura.getAsistenciaDiarias());
					this.jInternalFrameDetalleFormEstructura.asistenciadiariaBeanSwingJInternalFrame.inicializarActualizarBindingTablaAsistenciaDiaria(false);
					break;
				}
			}
			for(Classe clas:classes) {
				if(clas.clas.equals(FuncionEstruc.class)) {
					this.jInternalFrameDetalleFormEstructura.funcionestrucBeanSwingJInternalFrame.funcionestrucLogic.setFuncionEstrucs(estructura.getFuncionEstrucs());
					this.jInternalFrameDetalleFormEstructura.funcionestrucBeanSwingJInternalFrame.inicializarActualizarBindingTablaFuncionEstruc(false);
					break;
				}
			}
			for(Classe clas:classes) {
				if(clas.clas.equals(SolicitudReemplazo.class)) {
					this.jInternalFrameDetalleFormEstructura.solicitudreemplazoBeanSwingJInternalFrame.solicitudreemplazoLogic.setSolicitudReemplazos(estructura.getSolicitudReemplazos());
					this.jInternalFrameDetalleFormEstructura.solicitudreemplazoBeanSwingJInternalFrame.inicializarActualizarBindingTablaSolicitudReemplazo(false);
					break;
				}
			}
			for(Classe clas:classes) {
				if(clas.clas.equals(SolicitudHoraExtra.class)) {
					this.jInternalFrameDetalleFormEstructura.solicitudhoraextraBeanSwingJInternalFrame.solicitudhoraextraLogic.setSolicitudHoraExtras(estructura.getSolicitudHoraExtras());
					this.jInternalFrameDetalleFormEstructura.solicitudhoraextraBeanSwingJInternalFrame.inicializarActualizarBindingTablaSolicitudHoraExtra(false);
					break;
				}
			}
			for(Classe clas:classes) {
				if(clas.clas.equals(EvaluacionNomi.class)) {
					this.jInternalFrameDetalleFormEstructura.evaluacionnomiBeanSwingJInternalFrame.evaluacionnomiLogic.setEvaluacionNomis(estructura.getEvaluacionNomis());
					this.jInternalFrameDetalleFormEstructura.evaluacionnomiBeanSwingJInternalFrame.inicializarActualizarBindingTablaEvaluacionNomi(false);
					break;
				}
			}
			for(Classe clas:classes) {
				if(clas.clas.equals(SolicitudVacacion.class)) {
					this.jInternalFrameDetalleFormEstructura.solicitudvacacionBeanSwingJInternalFrame.solicitudvacacionLogic.setSolicitudVacacions(estructura.getSolicitudVacacions());
					this.jInternalFrameDetalleFormEstructura.solicitudvacacionBeanSwingJInternalFrame.inicializarActualizarBindingTablaSolicitudVacacion(false);
					break;
				}
			}
			for(Classe clas:classes) {
				if(clas.clas.equals(ResponsableActivoFijo.class)) {
					this.jInternalFrameDetalleFormEstructura.responsableactivofijoBeanSwingJInternalFrame.responsableactivofijoLogic.setResponsableActivoFijos(estructura.getResponsableActivoFijos());
					this.jInternalFrameDetalleFormEstructura.responsableactivofijoBeanSwingJInternalFrame.inicializarActualizarBindingTablaResponsableActivoFijo(false);
					break;
				}
			}
			for(Classe clas:classes) {
				if(clas.clas.equals(RubroEmpleaCuentaContable.class)) {
					this.jInternalFrameDetalleFormEstructura.rubroempleacuentacontableBeanSwingJInternalFrame.rubroempleacuentacontableLogic.setRubroEmpleaCuentaContables(estructura.getRubroEmpleaCuentaContables());
					this.jInternalFrameDetalleFormEstructura.rubroempleacuentacontableBeanSwingJInternalFrame.inicializarActualizarBindingTablaRubroEmpleaCuentaContable(false);
					break;
				}
			}
			
		} catch(Exception e) {
			FuncionesSwing.manageException(this, e,logger,EstructuraConstantesFunciones.CLASSNAME);
		}
	}
	*/
	
	/*
	public void setVariablesRelacionesObjetoReturnGeneralToBeanEstructura(ArrayList<Classe> classes,EstructuraReturnGeneral estructuraReturnGeneral,EstructuraBean estructuraBean,Boolean conDefault) throws Exception {
		
			this.estructuraBean.setCentroCostoEstructuras(estructuraReturnGeneral.getEstructura().getCentroCostoEstructuras());
			this.estructuraBean.setPlaniVacacions(estructuraReturnGeneral.getEstructura().getPlaniVacacions());
			this.estructuraBean.setAsistenciaMensuals(estructuraReturnGeneral.getEstructura().getAsistenciaMensuals());
			this.estructuraBean.setEmpleadoProcesoRubros(estructuraReturnGeneral.getEstructura().getEmpleadoProcesoRubros());
			this.estructuraBean.setEmpleadoPagoRubros(estructuraReturnGeneral.getEstructura().getEmpleadoPagoRubros());
			this.estructuraBean.setProvisionEmpleados(estructuraReturnGeneral.getEstructura().getProvisionEmpleados());
			this.estructuraBean.setEmpleados(estructuraReturnGeneral.getEstructura().getEmpleados());
			this.estructuraBean.setEstructuras(estructuraReturnGeneral.getEstructura().getEstructuras());
			this.estructuraBean.setEvaluacionEmpleados(estructuraReturnGeneral.getEstructura().getEvaluacionEmpleados());
			this.estructuraBean.setEmpleadoImpuestoRentas(estructuraReturnGeneral.getEstructura().getEmpleadoImpuestoRentas());
			this.estructuraBean.setRubroEstructuras(estructuraReturnGeneral.getEstructura().getRubroEstructuras());
			this.estructuraBean.setCierreRolMensuals(estructuraReturnGeneral.getEstructura().getCierreRolMensuals());
			this.estructuraBean.setFormatoNomis(estructuraReturnGeneral.getEstructura().getFormatoNomis());
			this.estructuraBean.setEmpleadoEstructuras(estructuraReturnGeneral.getEstructura().getEmpleadoEstructuras());
			this.estructuraBean.setHistorialPagoNomis(estructuraReturnGeneral.getEstructura().getHistorialPagoNomis());
			this.estructuraBean.setAsistenciaDiarias(estructuraReturnGeneral.getEstructura().getAsistenciaDiarias());
			this.estructuraBean.setFuncionEstrucs(estructuraReturnGeneral.getEstructura().getFuncionEstrucs());
			this.estructuraBean.setSolicitudReemplazos(estructuraReturnGeneral.getEstructura().getSolicitudReemplazos());
			this.estructuraBean.setSolicitudHoraExtras(estructuraReturnGeneral.getEstructura().getSolicitudHoraExtras());
			this.estructuraBean.setEvaluacionNomis(estructuraReturnGeneral.getEstructura().getEvaluacionNomis());
			this.estructuraBean.setSolicitudVacacions(estructuraReturnGeneral.getEstructura().getSolicitudVacacions());
			this.estructuraBean.setResponsableActivoFijos(estructuraReturnGeneral.getEstructura().getResponsableActivoFijos());
			this.estructuraBean.setRubroEmpleaCuentaContables(estructuraReturnGeneral.getEstructura().getRubroEmpleaCuentaContables());
	}
	*/
	
	public void setVariablesFormularioRelacionesToObjetoActualEstructura(Estructura estructura,ArrayList<Classe> classes) throws Exception {
		
			for(Classe clas:classes) {
				if(clas.clas.equals(CentroCostoEstructura.class)) {
					estructura.setCentroCostoEstructuras(this.jInternalFrameDetalleFormEstructura.centrocostoestructuraBeanSwingJInternalFrame.centrocostoestructuraLogic.getCentroCostoEstructuras());
					break;
				}
			}
			for(Classe clas:classes) {
				if(clas.clas.equals(PlaniVacacion.class)) {
					estructura.setPlaniVacacionCargos(this.jInternalFrameDetalleFormEstructura.planivacacionBeanSwingJInternalFrame.planivacacionLogic.getPlaniVacacions());
					break;
				}
			}
			for(Classe clas:classes) {
				if(clas.clas.equals(AsistenciaMensual.class)) {
					estructura.setAsistenciaMensuals(this.jInternalFrameDetalleFormEstructura.asistenciamensualBeanSwingJInternalFrame.asistenciamensualLogic.getAsistenciaMensuals());
					break;
				}
			}
			for(Classe clas:classes) {
				if(clas.clas.equals(EmpleadoProcesoRubro.class)) {
					estructura.setEmpleadoProcesoRubros(this.jInternalFrameDetalleFormEstructura.empleadoprocesorubroBeanSwingJInternalFrame.empleadoprocesorubroLogic.getEmpleadoProcesoRubros());
					break;
				}
			}
			for(Classe clas:classes) {
				if(clas.clas.equals(EmpleadoPagoRubro.class)) {
					estructura.setEmpleadoPagoRubros(this.jInternalFrameDetalleFormEstructura.empleadopagorubroBeanSwingJInternalFrame.empleadopagorubroLogic.getEmpleadoPagoRubros());
					break;
				}
			}
			for(Classe clas:classes) {
				if(clas.clas.equals(ProvisionEmpleado.class)) {
					estructura.setProvisionEmpleados(this.jInternalFrameDetalleFormEstructura.provisionempleadoBeanSwingJInternalFrame.provisionempleadoLogic.getProvisionEmpleados());
					break;
				}
			}
			for(Classe clas:classes) {
				if(clas.clas.equals(Empleado.class)) {
					estructura.setEmpleados(this.jInternalFrameDetalleFormEstructura.empleadoBeanSwingJInternalFrame.empleadoLogic.getEmpleados());
					break;
				}
			}
			for(Classe clas:classes) {
				if(clas.clas.equals(Estructura.class)) {
					estructura.setEstructuras(this.jInternalFrameDetalleFormEstructura.estructuraBeanSwingJInternalFrame.estructuraLogic.getEstructuras());
					break;
				}
			}
			for(Classe clas:classes) {
				if(clas.clas.equals(EvaluacionEmpleado.class)) {
					estructura.setEvaluacionEmpleados(this.jInternalFrameDetalleFormEstructura.evaluacionempleadoBeanSwingJInternalFrame.evaluacionempleadoLogic.getEvaluacionEmpleados());
					break;
				}
			}
			for(Classe clas:classes) {
				if(clas.clas.equals(EmpleadoImpuestoRenta.class)) {
					estructura.setEmpleadoImpuestoRentas(this.jInternalFrameDetalleFormEstructura.empleadoimpuestorentaBeanSwingJInternalFrame.empleadoimpuestorentaLogic.getEmpleadoImpuestoRentas());
					break;
				}
			}
			for(Classe clas:classes) {
				if(clas.clas.equals(RubroEstructura.class)) {
					estructura.setRubroEstructuras(this.jInternalFrameDetalleFormEstructura.rubroestructuraBeanSwingJInternalFrame.rubroestructuraLogic.getRubroEstructuras());
					break;
				}
			}
			for(Classe clas:classes) {
				if(clas.clas.equals(CierreRolMensual.class)) {
					estructura.setCierreRolMensuals(this.jInternalFrameDetalleFormEstructura.cierrerolmensualBeanSwingJInternalFrame.cierrerolmensualLogic.getCierreRolMensuals());
					break;
				}
			}
			for(Classe clas:classes) {
				if(clas.clas.equals(FormatoNomi.class)) {
					estructura.setFormatoNomis(this.jInternalFrameDetalleFormEstructura.formatonomiBeanSwingJInternalFrame.formatonomiLogic.getFormatoNomis());
					break;
				}
			}
			for(Classe clas:classes) {
				if(clas.clas.equals(EmpleadoEstructura.class)) {
					estructura.setEmpleadoEstructuras(this.jInternalFrameDetalleFormEstructura.empleadoestructuraBeanSwingJInternalFrame.empleadoestructuraLogic.getEmpleadoEstructuras());
					break;
				}
			}
			for(Classe clas:classes) {
				if(clas.clas.equals(HistorialPagoNomi.class)) {
					estructura.setHistorialPagoNomis(this.jInternalFrameDetalleFormEstructura.historialpagonomiBeanSwingJInternalFrame.historialpagonomiLogic.getHistorialPagoNomis());
					break;
				}
			}
			for(Classe clas:classes) {
				if(clas.clas.equals(AsistenciaDiaria.class)) {
					estructura.setAsistenciaDiarias(this.jInternalFrameDetalleFormEstructura.asistenciadiariaBeanSwingJInternalFrame.asistenciadiariaLogic.getAsistenciaDiarias());
					break;
				}
			}
			for(Classe clas:classes) {
				if(clas.clas.equals(FuncionEstruc.class)) {
					estructura.setFuncionEstrucs(this.jInternalFrameDetalleFormEstructura.funcionestrucBeanSwingJInternalFrame.funcionestrucLogic.getFuncionEstrucs());
					break;
				}
			}
			for(Classe clas:classes) {
				if(clas.clas.equals(SolicitudReemplazo.class)) {
					estructura.setSolicitudReemplazos(this.jInternalFrameDetalleFormEstructura.solicitudreemplazoBeanSwingJInternalFrame.solicitudreemplazoLogic.getSolicitudReemplazos());
					break;
				}
			}
			for(Classe clas:classes) {
				if(clas.clas.equals(SolicitudHoraExtra.class)) {
					estructura.setSolicitudHoraExtras(this.jInternalFrameDetalleFormEstructura.solicitudhoraextraBeanSwingJInternalFrame.solicitudhoraextraLogic.getSolicitudHoraExtras());
					break;
				}
			}
			for(Classe clas:classes) {
				if(clas.clas.equals(EvaluacionNomi.class)) {
					estructura.setEvaluacionNomis(this.jInternalFrameDetalleFormEstructura.evaluacionnomiBeanSwingJInternalFrame.evaluacionnomiLogic.getEvaluacionNomis());
					break;
				}
			}
			for(Classe clas:classes) {
				if(clas.clas.equals(SolicitudVacacion.class)) {
					estructura.setSolicitudVacacions(this.jInternalFrameDetalleFormEstructura.solicitudvacacionBeanSwingJInternalFrame.solicitudvacacionLogic.getSolicitudVacacions());
					break;
				}
			}
			for(Classe clas:classes) {
				if(clas.clas.equals(ResponsableActivoFijo.class)) {
					estructura.setResponsableActivoFijos(this.jInternalFrameDetalleFormEstructura.responsableactivofijoBeanSwingJInternalFrame.responsableactivofijoLogic.getResponsableActivoFijos());
					break;
				}
			}
			for(Classe clas:classes) {
				if(clas.clas.equals(RubroEmpleaCuentaContable.class)) {
					estructura.setRubroEmpleaCuentaContables(this.jInternalFrameDetalleFormEstructura.rubroempleacuentacontableBeanSwingJInternalFrame.rubroempleacuentacontableLogic.getRubroEmpleaCuentaContables());
					break;
				}
			}
	}
	
	public Boolean permiteManejarEventosControl() {
		Boolean permite=true;				
		
		if(this.estaModoNuevo || this.estaModoSeleccionar || this.estaModoEliminarGuardarCambios) {
			permite=false;
			
		} 
		
		//NO DEBE MEZCLARSE CONCEPTOS
		/*	
		if(!paraTabla && !this.permiteMantenimiento(this.estructura)) {
			System.out.println("ERROR:EL OBJETO ACTUAL NO PUEDE SER FILA TOTALES");
				
			//JOptionPane.showMessageDialog(this,"EL OBJETO ACTUAL NO PUEDE SER FILA TOTALES","EVENTO",JOptionPane.ERROR_MESSAGE);			
		}
		*/
		
		return permite;
	}
	
	public void inicializarFormDetalle() throws Exception {
		
		this.jInternalFrameDetalleFormEstructura = new EstructuraDetalleFormJInternalFrame(jDesktopPane,this.estructuraSessionBean.getConGuardarRelaciones(),this.estructuraSessionBean.getEsGuardarRelacionado(),this.cargarRelaciones,usuarioActual,resumenUsuarioActual,moduloActual,opcionActual,parametroGeneralSg,parametroGeneralUsuario,paginaTipo);
		
		this.jDesktopPane.add(this.jInternalFrameDetalleFormEstructura);
		this.jInternalFrameDetalleFormEstructura.setVisible(false);
		this.jInternalFrameDetalleFormEstructura.setSelected(false);						
		
		this.jInternalFrameDetalleFormEstructura.setJInternalFrameParent(this);
		
		this.jInternalFrameDetalleFormEstructura.estructuraLogic=this.estructuraLogic;
		
		this.cargarCombosFrameForeignKeyEstructura("Formulario");
		
		this.inicializarActualizarBindingBotonesPermisosManualFormDetalleEstructura();
		this.inicializarActualizarBindingtiposArchivosReportesAccionesManualFormDetalleEstructura();
		
		this.initActionsFormDetalle();		
		
		this.initActionsCombosTodosForeignKeyEstructura("Formulario");
		
		//TALVEZ conSetVariablesGlobales COMO if() 
		this.setVariablesGlobalesCombosForeignKeyEstructura();
		
		this.cargarMenuRelaciones();
		
	}
	
	public void initActionsFormDetalle() {	
		
		this.jInternalFrameDetalleFormEstructura.addInternalFrameListener(new InternalFrameInternalFrameAdapter(this,"jButtonCancelarEstructura"));
		
		this.jInternalFrameDetalleFormEstructura.jButtonModificarEstructura.addActionListener(new ButtonActionListener(this,"ModificarEstructura"));

		
		this.jInternalFrameDetalleFormEstructura.jButtonModificarToolBarEstructura.addActionListener(new ButtonActionListener(this,"ModificarToolBarEstructura"));
					
		this.jInternalFrameDetalleFormEstructura.jMenuItemModificarEstructura.addActionListener(new ButtonActionListener(this,"MenuItemModificarEstructura"));		
		
		
		
		this.jInternalFrameDetalleFormEstructura.jButtonActualizarEstructura.addActionListener (new ButtonActionListener(this,"ActualizarEstructura"));
		
		
		this.jInternalFrameDetalleFormEstructura.jButtonActualizarToolBarEstructura.addActionListener(new ButtonActionListener(this,"ActualizarToolBarEstructura"));
						
		this.jInternalFrameDetalleFormEstructura.jMenuItemActualizarEstructura.addActionListener (new ButtonActionListener(this,"MenuItemActualizarEstructura"));		
		
		
		
		this.jInternalFrameDetalleFormEstructura.jButtonEliminarEstructura.addActionListener (new ButtonActionListener(this,"EliminarEstructura"));
		
		
		this.jInternalFrameDetalleFormEstructura.jButtonEliminarToolBarEstructura.addActionListener (new ButtonActionListener(this,"EliminarToolBarEstructura"));
								
		this.jInternalFrameDetalleFormEstructura.jMenuItemEliminarEstructura.addActionListener (new ButtonActionListener(this,"MenuItemEliminarEstructura"));		
		
		
		
		this.jInternalFrameDetalleFormEstructura.jButtonCancelarEstructura.addActionListener (new ButtonActionListener(this,"CancelarEstructura"));
		
		
		this.jInternalFrameDetalleFormEstructura.jButtonCancelarToolBarEstructura.addActionListener (new ButtonActionListener(this,"CancelarToolBarEstructura"));
					
		this.jInternalFrameDetalleFormEstructura.jMenuItemCancelarEstructura.addActionListener (new ButtonActionListener(this,"MenuItemCancelarEstructura"));		
		
		
		
		
		
		this.jInternalFrameDetalleFormEstructura.jMenuItemDetalleCerrarEstructura.addActionListener (new ButtonActionListener(this,"MenuItemDetalleCerrarEstructura"));		
		
		
		
		this.jInternalFrameDetalleFormEstructura.jButtonGuardarCambiosToolBarEstructura.addActionListener (new ButtonActionListener(this,"GuardarCambiosToolBarEstructura"));
		
		
		
		this.jInternalFrameDetalleFormEstructura.jButtonGuardarCambiosToolBarEstructura.addActionListener (new ButtonActionListener(this,"GuardarCambiosToolBarEstructura"));
		
		
		
		this.jInternalFrameDetalleFormEstructura.jComboBoxTiposAccionesFormularioEstructura.addActionListener (new ButtonActionListener(this,"TiposAccionesFormularioEstructura"));
		
		
				
		
		//BUSQUEDA GENERAL
		this.jInternalFrameDetalleFormEstructura.jButtonidEstructuraBusqueda.addActionListener(new ButtonActionListener(this,"idEstructuraBusqueda"));
		//ACTUALIZAR FK
		this.jInternalFrameDetalleFormEstructura.jButtonid_empresaEstructuraUpdate.addActionListener(new ButtonActionListener(this,"id_empresaEstructuraUpdate"));
		//BUSQUEDA GENERAL
		this.jInternalFrameDetalleFormEstructura.jButtonid_empresaEstructuraBusqueda.addActionListener(new ButtonActionListener(this,"id_empresaEstructuraBusqueda"));
		//ACTUALIZAR FK
		this.jInternalFrameDetalleFormEstructura.jButtonid_sucursalEstructuraUpdate.addActionListener(new ButtonActionListener(this,"id_sucursalEstructuraUpdate"));
		//BUSQUEDA GENERAL
		this.jInternalFrameDetalleFormEstructura.jButtonid_sucursalEstructuraBusqueda.addActionListener(new ButtonActionListener(this,"id_sucursalEstructuraBusqueda"));
		//ACTUALIZAR FK
		this.jInternalFrameDetalleFormEstructura.jButtonid_estructuraEstructuraUpdate.addActionListener(new ButtonActionListener(this,"id_estructuraEstructuraUpdate"));
		//BUSQUEDA GENERAL
		this.jInternalFrameDetalleFormEstructura.jButtonid_estructuraEstructuraBusqueda.addActionListener(new ButtonActionListener(this,"id_estructuraEstructuraBusqueda"));
		//ACTUALIZAR FK
		this.jInternalFrameDetalleFormEstructura.jButtonid_tipo_pago__n_mEstructuraUpdate.addActionListener(new ButtonActionListener(this,"id_tipo_pago__n_mEstructuraUpdate"));
		//BUSQUEDA GENERAL
		this.jInternalFrameDetalleFormEstructura.jButtonid_tipo_pago__n_mEstructuraBusqueda.addActionListener(new ButtonActionListener(this,"id_tipo_pago__n_mEstructuraBusqueda"));
		//ACTUALIZAR FK
		this.jInternalFrameDetalleFormEstructura.jButtonid_numero_patronalEstructuraUpdate.addActionListener(new ButtonActionListener(this,"id_numero_patronalEstructuraUpdate"));
		//BUSQUEDA GENERAL
		this.jInternalFrameDetalleFormEstructura.jButtonid_numero_patronalEstructuraBusqueda.addActionListener(new ButtonActionListener(this,"id_numero_patronalEstructuraBusqueda"));
		//jButtonid_cuenta_contableEstructura.addActionListener (
		//	new java.awt.event.ActionListener() {
		//		public void actionPerformed(java.awt.event.ActionEvent evt) {
		//			jButtonid_cuenta_contableEstructuraActionPerformed(evt);
		//		}
		//	}
		//);

		//BUSQUEDA CAMPO
		this.jInternalFrameDetalleFormEstructura.jButtonid_cuenta_contableEstructura.addActionListener(new ButtonActionListener(this,"id_cuenta_contableEstructura"));
		//jButtonid_cuenta_contableEstructuraArbol.addActionListener (
		//	new java.awt.event.ActionListener() {
		//		public void actionPerformed(java.awt.event.ActionEvent evt) {
		//			abrirFrameTreeCuentaContable("BUSQUEDA_FK");
		//		}
		//	}
		//);

		//BUSQUEDA ARBOL CAMPO
		this.jInternalFrameDetalleFormEstructura.jButtonid_cuenta_contableEstructuraArbol.addActionListener(new ButtonActionListener(this,"id_cuenta_contableEstructuraArbol"));
		//ACTUALIZAR FK
		this.jInternalFrameDetalleFormEstructura.jButtonid_cuenta_contableEstructuraUpdate.addActionListener(new ButtonActionListener(this,"id_cuenta_contableEstructuraUpdate"));
		//BUSQUEDA GENERAL
		this.jInternalFrameDetalleFormEstructura.jButtonid_cuenta_contableEstructuraBusqueda.addActionListener(new ButtonActionListener(this,"id_cuenta_contableEstructuraBusqueda"));
		//ACTUALIZAR FK
		this.jInternalFrameDetalleFormEstructura.jButtonid_tipo_estructuraEstructuraUpdate.addActionListener(new ButtonActionListener(this,"id_tipo_estructuraEstructuraUpdate"));
		//BUSQUEDA GENERAL
		this.jInternalFrameDetalleFormEstructura.jButtonid_tipo_estructuraEstructuraBusqueda.addActionListener(new ButtonActionListener(this,"id_tipo_estructuraEstructuraBusqueda"));
		//ACTUALIZAR FK
		this.jInternalFrameDetalleFormEstructura.jButtonid_paisEstructuraUpdate.addActionListener(new ButtonActionListener(this,"id_paisEstructuraUpdate"));
		//BUSQUEDA GENERAL
		this.jInternalFrameDetalleFormEstructura.jButtonid_paisEstructuraBusqueda.addActionListener(new ButtonActionListener(this,"id_paisEstructuraBusqueda"));
		//ACTUALIZAR FK
		this.jInternalFrameDetalleFormEstructura.jButtonid_ciudadEstructuraUpdate.addActionListener(new ButtonActionListener(this,"id_ciudadEstructuraUpdate"));
		//BUSQUEDA GENERAL
		this.jInternalFrameDetalleFormEstructura.jButtonid_ciudadEstructuraBusqueda.addActionListener(new ButtonActionListener(this,"id_ciudadEstructuraBusqueda"));
		//BUSQUEDA GENERAL
		this.jInternalFrameDetalleFormEstructura.jButtoncodigoEstructuraBusqueda.addActionListener(new ButtonActionListener(this,"codigoEstructuraBusqueda"));
		//BUSQUEDA GENERAL
		this.jInternalFrameDetalleFormEstructura.jButtonnumeroEstructuraBusqueda.addActionListener(new ButtonActionListener(this,"numeroEstructuraBusqueda"));
		//BUSQUEDA GENERAL
		this.jInternalFrameDetalleFormEstructura.jButtonvalor_anticipoEstructuraBusqueda.addActionListener(new ButtonActionListener(this,"valor_anticipoEstructuraBusqueda"));
		//BUSQUEDA GENERAL
		this.jInternalFrameDetalleFormEstructura.jButtonporcentaje_anticipoEstructuraBusqueda.addActionListener(new ButtonActionListener(this,"porcentaje_anticipoEstructuraBusqueda"));
		//BUSQUEDA GENERAL
		this.jInternalFrameDetalleFormEstructura.jButtonnombreEstructuraBusqueda.addActionListener(new ButtonActionListener(this,"nombreEstructuraBusqueda"));
		//BUSQUEDA GENERAL
		this.jInternalFrameDetalleFormEstructura.jButtones_jefeEstructuraBusqueda.addActionListener(new ButtonActionListener(this,"es_jefeEstructuraBusqueda"));
		//BUSQUEDA GENERAL
		this.jInternalFrameDetalleFormEstructura.jButtones_anualEstructuraBusqueda.addActionListener(new ButtonActionListener(this,"es_anualEstructuraBusqueda"));
		//BUSQUEDA GENERAL
		this.jInternalFrameDetalleFormEstructura.jButtonporcentajeEstructuraBusqueda.addActionListener(new ButtonActionListener(this,"porcentajeEstructuraBusqueda"));
		//BUSQUEDA GENERAL
		this.jInternalFrameDetalleFormEstructura.jButtonvalorEstructuraBusqueda.addActionListener(new ButtonActionListener(this,"valorEstructuraBusqueda"));
		
		
		;

		//TABBED PANE RELACIONES
		this.jInternalFrameDetalleFormEstructura.jTabbedPaneRelacionesEstructura.addChangeListener(new TabbedPaneChangeListener(this,"RelacionesEstructura"));
		
		;		
		//TABBED PANE RELACIONES FIN(EXTRA TAB)	
	}
	
	public void initActions() {				
		this.addInternalFrameListener(new InternalFrameInternalFrameAdapter(this,"CloseInternalFrameEstructura"));
		
		if(this.jInternalFrameDetalleFormEstructura!=null) { //if(this.conCargarFormDetalle) {
			this.jInternalFrameDetalleFormEstructura.addInternalFrameListener(new InternalFrameInternalFrameAdapter(this,"jButtonCancelarEstructura"));
		}
		
		this.jTableDatosEstructura.getSelectionModel().addListSelectionListener(new TableListSelectionListener(this,"TableDatosSeleccionarEstructura"));
		
		this.jTableDatosEstructura.addMouseListener(new TableMouseAdapter(this,"DatosSeleccionarEstructura"));
		
		this.jButtonNuevoEstructura.addActionListener(new ButtonActionListener(this,"NuevoEstructura"));
		
		this.jButtonDuplicarEstructura.addActionListener(new ButtonActionListener(this,"DuplicarEstructura"));
		
		this.jButtonCopiarEstructura.addActionListener(new ButtonActionListener(this,"CopiarEstructura"));
		
		this.jButtonVerFormEstructura.addActionListener(new ButtonActionListener(this,"VerFormEstructura"));
		
		
		this.jButtonNuevoToolBarEstructura.addActionListener(new ButtonActionListener(this,"NuevoToolBarEstructura"));
			
		this.jButtonDuplicarToolBarEstructura.addActionListener(new ButtonActionListener(this,"DuplicarToolBarEstructura"));
			
		this.jMenuItemNuevoEstructura.addActionListener (new ButtonActionListener(this,"MenuItemNuevoEstructura"));
			
		this.jMenuItemDuplicarEstructura.addActionListener (new ButtonActionListener(this,"MenuItemDuplicarEstructura"));		
		
		
		this.jButtonNuevoRelacionesEstructura.addActionListener (new ButtonActionListener(this,"NuevoRelacionesEstructura"));
		
		
		this.jButtonNuevoRelacionesToolBarEstructura.addActionListener(new ButtonActionListener(this,"NuevoRelacionesToolBarEstructura"));
			
		this.jMenuItemNuevoRelacionesEstructura.addActionListener(new ButtonActionListener(this,"MenuItemNuevoRelacionesEstructura"));		
		
		
		if(this.jInternalFrameDetalleFormEstructura!=null) { //if(this.conCargarFormDetalle) {
			this.jInternalFrameDetalleFormEstructura.jButtonModificarEstructura.addActionListener(new ButtonActionListener(this,"ModificarEstructura"));
		}
		
		
		if(this.jInternalFrameDetalleFormEstructura!=null) { //if(this.conCargarFormDetalle) {
			this.jInternalFrameDetalleFormEstructura.jButtonModificarToolBarEstructura.addActionListener(new ButtonActionListener(this,"ModificarToolBarEstructura"));
			
			this.jInternalFrameDetalleFormEstructura.jMenuItemModificarEstructura.addActionListener(new ButtonActionListener(this,"MenuItemModificarEstructura"));		
		}
		
		
		if(this.jInternalFrameDetalleFormEstructura!=null) { //if(this.conCargarFormDetalle) {			
			this.jInternalFrameDetalleFormEstructura.jButtonActualizarEstructura.addActionListener (new ButtonActionListener(this,"ActualizarEstructura"));
		}
		
		
		if(this.jInternalFrameDetalleFormEstructura!=null) { //if(this.conCargarFormDetalle) {
			this.jInternalFrameDetalleFormEstructura.jButtonActualizarToolBarEstructura.addActionListener(new ButtonActionListener(this,"ActualizarToolBarEstructura"));
				
			this.jInternalFrameDetalleFormEstructura.jMenuItemActualizarEstructura.addActionListener (new ButtonActionListener(this,"MenuItemActualizarEstructura"));		
		}
		
		
		if(this.jInternalFrameDetalleFormEstructura!=null) { //if(this.conCargarFormDetalle) {
			this.jInternalFrameDetalleFormEstructura.jButtonEliminarEstructura.addActionListener (new ButtonActionListener(this,"EliminarEstructura"));
		}
		
		
		if(this.jInternalFrameDetalleFormEstructura!=null) { //if(this.conCargarFormDetalle) {
			this.jInternalFrameDetalleFormEstructura.jButtonEliminarToolBarEstructura.addActionListener (new ButtonActionListener(this,"EliminarToolBarEstructura"));
						
			this.jInternalFrameDetalleFormEstructura.jMenuItemEliminarEstructura.addActionListener (new ButtonActionListener(this,"MenuItemEliminarEstructura"));		
		}
		
		
		if(this.jInternalFrameDetalleFormEstructura!=null) { //if(this.conCargarFormDetalle) {
			this.jInternalFrameDetalleFormEstructura.jButtonCancelarEstructura.addActionListener (new ButtonActionListener(this,"CancelarEstructura"));
		}
		
		
		if(this.jInternalFrameDetalleFormEstructura!=null) { //if(this.conCargarFormDetalle) {
			this.jInternalFrameDetalleFormEstructura.jButtonCancelarToolBarEstructura.addActionListener (new ButtonActionListener(this,"CancelarToolBarEstructura"));
			
			this.jInternalFrameDetalleFormEstructura.jMenuItemCancelarEstructura.addActionListener (new ButtonActionListener(this,"MenuItemCancelarEstructura"));		
		}
		
		this.jButtonMostrarOcultarTablaToolBarEstructura.addActionListener (new ButtonActionListener(this,"MostrarOcultarToolBarEstructura"));		
		
		
		this.jButtonCerrarEstructura.addActionListener (new ButtonActionListener(this,"CerrarEstructura"));
		
		
		this.jButtonCerrarToolBarEstructura.addActionListener (new ButtonActionListener(this,"CerrarToolBarEstructura"));
			
		this.jMenuItemCerrarEstructura.addActionListener (new ButtonActionListener(this,"MenuItemCerrarEstructura"));
			
		if(this.jInternalFrameDetalleFormEstructura!=null) { //if(this.conCargarFormDetalle) {
			this.jInternalFrameDetalleFormEstructura.jMenuItemDetalleCerrarEstructura.addActionListener (new ButtonActionListener(this,"MenuItemDetalleCerrarEstructura"));		
		}
		
		
		if(this.jInternalFrameDetalleFormEstructura!=null) { //if(this.conCargarFormDetalle) {
			this.jInternalFrameDetalleFormEstructura.jButtonGuardarCambiosEstructura.addActionListener (new ButtonActionListener(this,"GuardarCambiosEstructura"));
		}
		
		
		if(this.jInternalFrameDetalleFormEstructura!=null) { //if(this.conCargarFormDetalle) {
			this.jInternalFrameDetalleFormEstructura.jButtonGuardarCambiosToolBarEstructura.addActionListener (new ButtonActionListener(this,"GuardarCambiosToolBarEstructura"));
		}
		
		this.jButtonCopiarToolBarEstructura.addActionListener (new ButtonActionListener(this,"CopiarToolBarEstructura"));
			
		this.jButtonVerFormToolBarEstructura.addActionListener (new ButtonActionListener(this,"VerFormToolBarEstructura"));
		
		this.jMenuItemGuardarCambiosEstructura.addActionListener (new ButtonActionListener(this,"MenuItemGuardarCambiosEstructura"));
			
		this.jMenuItemCopiarEstructura.addActionListener (new ButtonActionListener(this,"MenuItemCopiarEstructura"));		
		
		this.jMenuItemVerFormEstructura.addActionListener (new ButtonActionListener(this,"MenuItemVerFormEstructura"));		
		
		
		this.jButtonGuardarCambiosTablaEstructura.addActionListener (new ButtonActionListener(this,"GuardarCambiosTablaEstructura"));
		
		
		this.jButtonGuardarCambiosTablaToolBarEstructura.addActionListener (new ButtonActionListener(this,"GuardarCambiosTablaToolBarEstructura"));
			
		this.jMenuItemGuardarCambiosTablaEstructura.addActionListener (new ButtonActionListener(this,"GuardarCambiosTablaEstructura"));		
		
		
		
		this.jButtonRecargarInformacionEstructura.addActionListener (new ButtonActionListener(this,"RecargarInformacionEstructura"));
					
		this.jButtonRecargarInformacionToolBarEstructura.addActionListener (new ButtonActionListener(this,"RecargarInformacionToolBarEstructura"));
		
		this.jMenuItemRecargarInformacionEstructura.addActionListener (new ButtonActionListener(this,"MenuItemRecargarInformacionEstructura"));		
		
		
		this.jButtonArbolEstructura.addActionListener (new ButtonActionListener(this,"ArbolEstructura"));
		
		this.jButtonAnterioresEstructura.addActionListener (new ButtonActionListener(this,"AnterioresEstructura"));
		
		
		this.jButtonAnterioresToolBarEstructura.addActionListener (new ButtonActionListener(this,"AnterioresToolBarEstructura"));
		
		this.jMenuItemAnterioresEstructura.addActionListener (new ButtonActionListener(this,"MenuItemAnterioresEstructura"));		
		
		
		this.jButtonSiguientesEstructura.addActionListener (new ButtonActionListener(this,"SiguientesEstructura"));
		
		
		this.jButtonSiguientesToolBarEstructura.addActionListener (new ButtonActionListener(this,"SiguientesToolBarEstructura"));
			
		this.jMenuItemSiguientesEstructura.addActionListener (new ButtonActionListener(this,"MenuItemSiguientesEstructura"));
			
		this.jMenuItemAbrirOrderByEstructura.addActionListener (new ButtonActionListener(this,"MenuItemAbrirOrderByEstructura"));
			
		this.jMenuItemMostrarOcultarEstructura.addActionListener (new ButtonActionListener(this,"MenuItemMostrarOcultarEstructura"));
			
		this.jMenuItemDetalleAbrirOrderByEstructura.addActionListener (new ButtonActionListener(this,"MenuItemDetalleAbrirOrderByEstructura"));
			
		this.jMenuItemDetalleMostarOcultarEstructura.addActionListener (new ButtonActionListener(this,"MenuItemDetalleMostrarOcultarEstructura"));		
		
		
		this.jButtonNuevoGuardarCambiosEstructura.addActionListener (new ButtonActionListener(this,"NuevoGuardarCambiosEstructura"));
		
		
		this.jButtonNuevoGuardarCambiosToolBarEstructura.addActionListener (new ButtonActionListener(this,"NuevoGuardarCambiosToolBarEstructura"));
			
		this.jMenuItemNuevoGuardarCambiosEstructura.addActionListener (new ButtonActionListener(this,"MenuItemNuevoGuardarCambiosEstructura"));		
		
		
		
		//SELECCIONAR TODOS
		
		this.jCheckBoxSeleccionarTodosEstructura.addItemListener(new CheckBoxItemListener(this,"SeleccionarTodosEstructura"));

		this.jCheckBoxSeleccionadosEstructura.addItemListener(new CheckBoxItemListener(this,"SeleccionadosEstructura"));
		
		if(this.jInternalFrameDetalleFormEstructura!=null) { //if(this.conCargarFormDetalle) {
			this.jInternalFrameDetalleFormEstructura.jComboBoxTiposAccionesFormularioEstructura.addActionListener (new ButtonActionListener(this,"TiposAccionesFormularioEstructura"));
		}
		
		
		this.jComboBoxTiposRelacionesEstructura.addActionListener (new ButtonActionListener(this,"TiposRelacionesEstructura"));
			
		this.jComboBoxTiposAccionesEstructura.addActionListener (new ButtonActionListener(this,"TiposAccionesEstructura"));
					
		this.jComboBoxTiposSeleccionarEstructura.addActionListener (new ButtonActionListener(this,"TiposSeleccionarEstructura"));
			
		this.jTextFieldValorCampoGeneralEstructura.addActionListener (new ButtonActionListener(this,"ValorCampoGeneralEstructura"));		
		
		
		if(this.jInternalFrameDetalleFormEstructura!=null) { //if(this.conCargarFormDetalle) {
		
		
		
		//BUSQUEDA GENERAL
		this.jInternalFrameDetalleFormEstructura.jButtonidEstructuraBusqueda.addActionListener(new ButtonActionListener(this,"idEstructuraBusqueda"));
		//ACTUALIZAR FK
		this.jInternalFrameDetalleFormEstructura.jButtonid_empresaEstructuraUpdate.addActionListener(new ButtonActionListener(this,"id_empresaEstructuraUpdate"));
		//BUSQUEDA GENERAL
		this.jInternalFrameDetalleFormEstructura.jButtonid_empresaEstructuraBusqueda.addActionListener(new ButtonActionListener(this,"id_empresaEstructuraBusqueda"));
		//ACTUALIZAR FK
		this.jInternalFrameDetalleFormEstructura.jButtonid_sucursalEstructuraUpdate.addActionListener(new ButtonActionListener(this,"id_sucursalEstructuraUpdate"));
		//BUSQUEDA GENERAL
		this.jInternalFrameDetalleFormEstructura.jButtonid_sucursalEstructuraBusqueda.addActionListener(new ButtonActionListener(this,"id_sucursalEstructuraBusqueda"));
		//ACTUALIZAR FK
		this.jInternalFrameDetalleFormEstructura.jButtonid_estructuraEstructuraUpdate.addActionListener(new ButtonActionListener(this,"id_estructuraEstructuraUpdate"));
		//BUSQUEDA GENERAL
		this.jInternalFrameDetalleFormEstructura.jButtonid_estructuraEstructuraBusqueda.addActionListener(new ButtonActionListener(this,"id_estructuraEstructuraBusqueda"));
		//ACTUALIZAR FK
		this.jInternalFrameDetalleFormEstructura.jButtonid_tipo_pago__n_mEstructuraUpdate.addActionListener(new ButtonActionListener(this,"id_tipo_pago__n_mEstructuraUpdate"));
		//BUSQUEDA GENERAL
		this.jInternalFrameDetalleFormEstructura.jButtonid_tipo_pago__n_mEstructuraBusqueda.addActionListener(new ButtonActionListener(this,"id_tipo_pago__n_mEstructuraBusqueda"));
		//ACTUALIZAR FK
		this.jInternalFrameDetalleFormEstructura.jButtonid_numero_patronalEstructuraUpdate.addActionListener(new ButtonActionListener(this,"id_numero_patronalEstructuraUpdate"));
		//BUSQUEDA GENERAL
		this.jInternalFrameDetalleFormEstructura.jButtonid_numero_patronalEstructuraBusqueda.addActionListener(new ButtonActionListener(this,"id_numero_patronalEstructuraBusqueda"));
		//jButtonid_cuenta_contableEstructura.addActionListener (
		//	new java.awt.event.ActionListener() {
		//		public void actionPerformed(java.awt.event.ActionEvent evt) {
		//			jButtonid_cuenta_contableEstructuraActionPerformed(evt);
		//		}
		//	}
		//);

		//BUSQUEDA CAMPO
		this.jInternalFrameDetalleFormEstructura.jButtonid_cuenta_contableEstructura.addActionListener(new ButtonActionListener(this,"id_cuenta_contableEstructura"));
		//jButtonid_cuenta_contableEstructuraArbol.addActionListener (
		//	new java.awt.event.ActionListener() {
		//		public void actionPerformed(java.awt.event.ActionEvent evt) {
		//			abrirFrameTreeCuentaContable("BUSQUEDA_FK");
		//		}
		//	}
		//);

		//BUSQUEDA ARBOL CAMPO
		this.jInternalFrameDetalleFormEstructura.jButtonid_cuenta_contableEstructuraArbol.addActionListener(new ButtonActionListener(this,"id_cuenta_contableEstructuraArbol"));
		//ACTUALIZAR FK
		this.jInternalFrameDetalleFormEstructura.jButtonid_cuenta_contableEstructuraUpdate.addActionListener(new ButtonActionListener(this,"id_cuenta_contableEstructuraUpdate"));
		//BUSQUEDA GENERAL
		this.jInternalFrameDetalleFormEstructura.jButtonid_cuenta_contableEstructuraBusqueda.addActionListener(new ButtonActionListener(this,"id_cuenta_contableEstructuraBusqueda"));
		//ACTUALIZAR FK
		this.jInternalFrameDetalleFormEstructura.jButtonid_tipo_estructuraEstructuraUpdate.addActionListener(new ButtonActionListener(this,"id_tipo_estructuraEstructuraUpdate"));
		//BUSQUEDA GENERAL
		this.jInternalFrameDetalleFormEstructura.jButtonid_tipo_estructuraEstructuraBusqueda.addActionListener(new ButtonActionListener(this,"id_tipo_estructuraEstructuraBusqueda"));
		//ACTUALIZAR FK
		this.jInternalFrameDetalleFormEstructura.jButtonid_paisEstructuraUpdate.addActionListener(new ButtonActionListener(this,"id_paisEstructuraUpdate"));
		//BUSQUEDA GENERAL
		this.jInternalFrameDetalleFormEstructura.jButtonid_paisEstructuraBusqueda.addActionListener(new ButtonActionListener(this,"id_paisEstructuraBusqueda"));
		//ACTUALIZAR FK
		this.jInternalFrameDetalleFormEstructura.jButtonid_ciudadEstructuraUpdate.addActionListener(new ButtonActionListener(this,"id_ciudadEstructuraUpdate"));
		//BUSQUEDA GENERAL
		this.jInternalFrameDetalleFormEstructura.jButtonid_ciudadEstructuraBusqueda.addActionListener(new ButtonActionListener(this,"id_ciudadEstructuraBusqueda"));
		//BUSQUEDA GENERAL
		this.jInternalFrameDetalleFormEstructura.jButtoncodigoEstructuraBusqueda.addActionListener(new ButtonActionListener(this,"codigoEstructuraBusqueda"));
		//BUSQUEDA GENERAL
		this.jInternalFrameDetalleFormEstructura.jButtonnumeroEstructuraBusqueda.addActionListener(new ButtonActionListener(this,"numeroEstructuraBusqueda"));
		//BUSQUEDA GENERAL
		this.jInternalFrameDetalleFormEstructura.jButtonvalor_anticipoEstructuraBusqueda.addActionListener(new ButtonActionListener(this,"valor_anticipoEstructuraBusqueda"));
		//BUSQUEDA GENERAL
		this.jInternalFrameDetalleFormEstructura.jButtonporcentaje_anticipoEstructuraBusqueda.addActionListener(new ButtonActionListener(this,"porcentaje_anticipoEstructuraBusqueda"));
		//BUSQUEDA GENERAL
		this.jInternalFrameDetalleFormEstructura.jButtonnombreEstructuraBusqueda.addActionListener(new ButtonActionListener(this,"nombreEstructuraBusqueda"));
		//BUSQUEDA GENERAL
		this.jInternalFrameDetalleFormEstructura.jButtones_jefeEstructuraBusqueda.addActionListener(new ButtonActionListener(this,"es_jefeEstructuraBusqueda"));
		//BUSQUEDA GENERAL
		this.jInternalFrameDetalleFormEstructura.jButtones_anualEstructuraBusqueda.addActionListener(new ButtonActionListener(this,"es_anualEstructuraBusqueda"));
		//BUSQUEDA GENERAL
		this.jInternalFrameDetalleFormEstructura.jButtonporcentajeEstructuraBusqueda.addActionListener(new ButtonActionListener(this,"porcentajeEstructuraBusqueda"));
		//BUSQUEDA GENERAL
		this.jInternalFrameDetalleFormEstructura.jButtonvalorEstructuraBusqueda.addActionListener(new ButtonActionListener(this,"valorEstructuraBusqueda"));
		}
		
		if(!this.conCargarMinimo) {
		//BYDAN_BUSQUEDAS
		
		
			this.jButtonFK_IdCiudadEstructura.addActionListener(new ButtonActionListener(this,"FK_IdCiudadEstructura"));

			this.jButtonFK_IdCuentaContableEstructura.addActionListener(new ButtonActionListener(this,"FK_IdCuentaContableEstructura"));

			this.jButtonBuscarFK_IdCuentaContableid_cuenta_contableEstructura.addActionListener(new ButtonActionListener(this,"id_cuenta_contableEstructura"));

			this.jButtonFK_IdEstructuraEstructura.addActionListener(new ButtonActionListener(this,"FK_IdEstructuraEstructura"));

			this.jButtonFK_IdNumeroPatronalEstructura.addActionListener(new ButtonActionListener(this,"FK_IdNumeroPatronalEstructura"));

			this.jButtonFK_IdPaisEstructura.addActionListener(new ButtonActionListener(this,"FK_IdPaisEstructura"));

			this.jButtonFK_IdTipoEstructuraEstructura.addActionListener(new ButtonActionListener(this,"FK_IdTipoEstructuraEstructura"));

			this.jButtonFK_IdTipoPago_NMEstructura.addActionListener(new ButtonActionListener(this,"FK_IdTipoPago_NMEstructura"));
		
		
		
			//REPORTE DINAMICO
			
			if(this.jInternalFrameReporteDinamicoEstructura!=null) {
				this.jInternalFrameReporteDinamicoEstructura.getjButtonCerrarReporteDinamico().addActionListener (new ButtonActionListener(this,"CerrarReporteDinamicoEstructura"));
				this.jInternalFrameReporteDinamicoEstructura.getjButtonGenerarReporteDinamico().addActionListener (new ButtonActionListener(this,"GenerarReporteDinamicoEstructura"));
				this.jInternalFrameReporteDinamicoEstructura.getjButtonGenerarExcelReporteDinamico().addActionListener (new ButtonActionListener(this,"GenerarExcelReporteDinamicoEstructura"));
			}
			
			//this.jButtonCerrarReporteDinamicoEstructura.addActionListener (new ButtonActionListener(this,"CerrarReporteDinamicoEstructura"));				
			//this.jButtonGenerarReporteDinamicoEstructura.addActionListener (new ButtonActionListener(this,"GenerarReporteDinamicoEstructura"));
			//this.jButtonGenerarExcelReporteDinamicoEstructura.addActionListener (new ButtonActionListener(this,"GenerarExcelReporteDinamicoEstructura"));
				
				
			//IMPORTACION			
			if(this.jInternalFrameImportacionEstructura!=null) {
				this.jInternalFrameImportacionEstructura.getjButtonCerrarImportacion().addActionListener (new ButtonActionListener(this,"CerrarImportacionEstructura"));
				this.jInternalFrameImportacionEstructura.getjButtonGenerarImportacion().addActionListener (new ButtonActionListener(this,"GenerarImportacionEstructura"));
				this.jInternalFrameImportacionEstructura.getjButtonAbrirImportacion().addActionListener (new ButtonActionListener(this,"AbrirImportacionEstructura"));
			}
			
			//ORDER BY
			this.jButtonAbrirOrderByEstructura.addActionListener (new ButtonActionListener(this,"AbrirOrderByEstructura"));
			
			this.jButtonAbrirOrderByToolBarEstructura.addActionListener (new ButtonActionListener(this,"AbrirOrderByToolBarEstructura"));			
			
			if(this.jInternalFrameOrderByEstructura!=null) {
				this.jInternalFrameOrderByEstructura.getjButtonCerrarOrderBy().addActionListener (new ButtonActionListener(this,"CerrarOrderByEstructura"));				
			}
			
			
		}
		
		
		
		if(!this.conCargarMinimo) {
			if(this.jInternalFrameDetalleFormEstructura!=null) { //if(this.conCargarFormDetalle) {
			;
			}
		}
		
		
		//TABBED PANE RELACIONES
		if(this.jInternalFrameDetalleFormEstructura!=null) { //if(this.conCargarFormDetalle) {
			this.jInternalFrameDetalleFormEstructura.jTabbedPaneRelacionesEstructura.addChangeListener(new TabbedPaneChangeListener(this,"RelacionesEstructura"));
		
		;
		}
		//TABBED PANE RELACIONES FIN(EXTRA TAB)		
	}
	
	/*
	public void initActions() {
		String sMapKey = "";
		InputMap inputMap =null;
		
		this.addInternalFrameListener(new javax.swing.event.InternalFrameAdapter() {
            public void internalFrameClosing(InternalFrameEvent event) {          	
            	try {
            		closingInternalFrameEstructura();
				} catch (Exception e) {
					e.printStackTrace();
				}
            }
        });
		
		this.jInternalFrameDetalleFormEstructura.addInternalFrameListener(new javax.swing.event.InternalFrameAdapter() {
	        public void internalFrameClosing(InternalFrameEvent event) {
	            JInternalFrameBase jInternalFrameDetalleFormEstructura = (JInternalFrameBase)event.getSource();
	            	
	            EstructuraBeanSwingJInternalFrame jInternalFrameParent=(EstructuraBeanSwingJInternalFrame)jInternalFrameDetalleFormEstructura.getjInternalFrameParent();
	                
	            try {
					jInternalFrameParent.jButtonCancelarEstructuraActionPerformed(null);
					
					//jInternalFrameParent.dispose();
					//jInternalFrameParent=null;
					
				} catch (Exception e) {
					e.printStackTrace();
				}
	        }
	    });
			
		this.jTableDatosEstructura.getSelectionModel().addListSelectionListener (
	                new ListSelectionListener() {
	                    public void valueChanged(ListSelectionEvent e) {
							//BYDAN_DESHABILITADO
	                    	//try {jTableDatosEstructuraListSelectionListener(e);}catch(Exception e1){e1.printStackTrace();}
	                    }
	                }
	     );
		
		this.jTableDatosEstructura.addMouseListener(new MouseAdapter() {
			   public void mouseClicked(MouseEvent evt) {
				      if (evt.getClickCount() == 2) {
				    	  jButtonIdActionPerformed(null,jTableDatosEstructura.getSelectedRow(),false,false);
				      }
				   }
		});
		
		this.jButtonNuevoEstructura.addActionListener (
	          new java.awt.event.ActionListener() {
	              public void actionPerformed(ActionEvent evt) {
	            	  try {jButtonNuevoEstructuraActionPerformed(evt,false);}catch(Exception e){e.printStackTrace();}
	              }
	          }
        );
		
		this.jButtonNuevoToolBarEstructura.addActionListener (
	          new java.awt.event.ActionListener() {
	              public void actionPerformed(ActionEvent evt) {
	            	  try {jButtonNuevoEstructuraActionPerformed(evt,false);}catch(Exception e){e.printStackTrace();}
	              }
	          }
        );
		
		this.jMenuItemNuevoEstructura.addActionListener (
	          new java.awt.event.ActionListener() {
	              public void actionPerformed(ActionEvent evt) {
	            	  try {jButtonNuevoEstructuraActionPerformed(evt,false);}catch(Exception e){e.printStackTrace();}
	              }
	          }
        );
		
		sMapKey = "NuevoEstructura";
		inputMap = this.jButtonNuevoEstructura.getInputMap(JComponent.WHEN_IN_FOCUSED_WINDOW);
		inputMap.put(KeyStroke.getKeyStroke(KeyEvent.VK_N , KeyEvent.CTRL_MASK), sMapKey);
			
		this.jButtonNuevoEstructura.getActionMap().put(sMapKey, new AbstractAction() {
			public static final long serialVersionUID = 1L;
			public void actionPerformed(ActionEvent evt) {
			    try {jButtonNuevoEstructuraActionPerformed(evt,false);} catch (Exception e) {e.printStackTrace();}
			}
		});
		
		this.jButtonNuevoRelacionesEstructura.addActionListener (
	          new java.awt.event.ActionListener() {
	              public void actionPerformed(ActionEvent evt) {
	            	  try {jButtonNuevoEstructuraActionPerformed(evt,true);}catch(Exception e){e.printStackTrace();}
	              }
	          }
        );
		
		this.jButtonNuevoRelacionesToolBarEstructura.addActionListener (
	          new java.awt.event.ActionListener() {
	              public void actionPerformed(ActionEvent evt) {
	            	  try {jButtonNuevoEstructuraActionPerformed(evt,true);}catch(Exception e){e.printStackTrace();}
	              }
	          }
        );
		
		this.jMenuItemNuevoRelacionesEstructura.addActionListener (
	          new java.awt.event.ActionListener() {
	              public void actionPerformed(ActionEvent evt) {
	            	  try {jButtonNuevoEstructuraActionPerformed(evt,true);}catch(Exception e){e.printStackTrace();}
	              }
	          }
        );
		
		sMapKey = "NuevoRelacionesEstructura";
		inputMap = this.jButtonNuevoRelacionesEstructura.getInputMap(JComponent.WHEN_IN_FOCUSED_WINDOW);
		inputMap.put(KeyStroke.getKeyStroke(KeyEvent.VK_R , KeyEvent.CTRL_MASK), sMapKey);
			
		this.jButtonNuevoRelacionesEstructura.getActionMap().put(sMapKey, new AbstractAction() {
			public static final long serialVersionUID = 1L;
			public void actionPerformed(ActionEvent evt) {
			    try {jButtonNuevoEstructuraActionPerformed(evt,true);} catch (Exception e) {e.printStackTrace();}
			}
		});
		
		this.jButtonModificarEstructura.addActionListener (
	          new java.awt.event.ActionListener() {
	              public void actionPerformed(ActionEvent evt) {
	            	  try {jButtonModificarEstructuraActionPerformed(evt);}catch(Exception e){e.printStackTrace();}
	              }
	          }
        );
		
		this.jButtonModificarToolBarEstructura.addActionListener (
	          new java.awt.event.ActionListener() {
	              public void actionPerformed(ActionEvent evt) {
	            	  try {jButtonModificarEstructuraActionPerformed(evt);}catch(Exception e){e.printStackTrace();}
	              }
	          }
        );
		
		this.jMenuItemModificarEstructura.addActionListener (
	          new java.awt.event.ActionListener() {
	              public void actionPerformed(ActionEvent evt) {
	            	  try {jButtonModificarEstructuraActionPerformed(evt);}catch(Exception e){e.printStackTrace();}
	              }
	          }
        );
		
		sMapKey = "ModificarEstructura";
		inputMap = this.jButtonModificarEstructura.getInputMap(JComponent.WHEN_IN_FOCUSED_WINDOW);
		inputMap.put(KeyStroke.getKeyStroke(KeyEvent.VK_M , KeyEvent.CTRL_MASK), sMapKey);
			
		this.jButtonModificarEstructura.getActionMap().put(sMapKey, new AbstractAction() {
			public static final long serialVersionUID = 1L;
			public void actionPerformed(ActionEvent evt) {
			    try {jButtonModificarEstructuraActionPerformed(evt);} catch (Exception e) {e.printStackTrace();}
			}
		});
		
		this.jButtonActualizarEstructura.addActionListener (
	          new java.awt.event.ActionListener() {
	              public void actionPerformed(ActionEvent evt) {
	            	  try {jButtonActualizarEstructuraActionPerformed(evt);}catch(Exception e){e.printStackTrace();}
	              }
	          }
        );
		
		this.jButtonActualizarToolBarEstructura.addActionListener (
	          new java.awt.event.ActionListener() {
	              public void actionPerformed(ActionEvent evt) {
	            	  try {jButtonActualizarEstructuraActionPerformed(evt);}catch(Exception e){e.printStackTrace();}
	              }
	          }
        );
		
		this.jMenuItemActualizarEstructura.addActionListener (
	          new java.awt.event.ActionListener() {
	              public void actionPerformed(ActionEvent evt) {
	            	  try {jButtonActualizarEstructuraActionPerformed(evt);}catch(Exception e){e.printStackTrace();}
	              }
	          }
        );
		
		sMapKey = "ActualizarEstructura";
		inputMap = this.jButtonActualizarEstructura.getInputMap(JComponent.WHEN_IN_FOCUSED_WINDOW);
		inputMap.put(KeyStroke.getKeyStroke(KeyEvent.VK_G , KeyEvent.CTRL_MASK), sMapKey);
			
		this.jButtonActualizarEstructura.getActionMap().put(sMapKey, new AbstractAction() {
			public static final long serialVersionUID = 1L;
			public void actionPerformed(ActionEvent evt) {
			    try {jButtonActualizarEstructuraActionPerformed(evt);} catch (Exception e) {e.printStackTrace();}
			}
		});
		
		this.jButtonEliminarEstructura.addActionListener (
	          new java.awt.event.ActionListener() {
	              public void actionPerformed(ActionEvent evt) {
	            	  try {jButtonEliminarEstructuraActionPerformed(evt);}catch(Exception e){e.printStackTrace();}
	              }
	          }
        );
		
		this.jButtonEliminarToolBarEstructura.addActionListener (
	          new java.awt.event.ActionListener() {
	              public void actionPerformed(ActionEvent evt) {
	            	  try {jButtonEliminarEstructuraActionPerformed(evt);}catch(Exception e){e.printStackTrace();}
	              }
	          }
        );
				
		this.jMenuItemEliminarEstructura.addActionListener (
	          new java.awt.event.ActionListener() {
	              public void actionPerformed(ActionEvent evt) {
	            	  try {jButtonEliminarEstructuraActionPerformed(evt);}catch(Exception e){e.printStackTrace();}
	              }
	          }
        );
		
		sMapKey = "EliminarEstructura";
		inputMap = this.jButtonEliminarEstructura.getInputMap(JComponent.WHEN_IN_FOCUSED_WINDOW);
		inputMap.put(KeyStroke.getKeyStroke(KeyEvent.VK_E , KeyEvent.CTRL_MASK), sMapKey);
			
		this.jButtonEliminarEstructura.getActionMap().put(sMapKey, new AbstractAction() {
			public static final long serialVersionUID = 1L;
			public void actionPerformed(ActionEvent evt) {
			    try {jButtonEliminarEstructuraActionPerformed(evt);} catch (Exception e) {e.printStackTrace();}
			}
		});
		
		this.jButtonCancelarEstructura.addActionListener (
	          new java.awt.event.ActionListener() {
	              public void actionPerformed(ActionEvent evt) {
	            	  try {jButtonCancelarEstructuraActionPerformed(evt);}catch(Exception e){e.printStackTrace();}
	              }
	          }
        );
		
		this.jButtonCancelarToolBarEstructura.addActionListener (
	          new java.awt.event.ActionListener() {
	              public void actionPerformed(ActionEvent evt) {
	            	  try {jButtonCancelarEstructuraActionPerformed(evt);}catch(Exception e){e.printStackTrace();}
	              }
	          }
        );
		
		this.jMenuItemCancelarEstructura.addActionListener (
	          new java.awt.event.ActionListener() {
	              public void actionPerformed(ActionEvent evt) {
	            	  try {jButtonCancelarEstructuraActionPerformed(evt);}catch(Exception e){e.printStackTrace();}
	              }
	          }
        );
		
		sMapKey = "CancelarEstructura";
		inputMap = this.jButtonCancelarEstructura.getInputMap(JComponent.WHEN_IN_FOCUSED_WINDOW);
		inputMap.put(KeyStroke.getKeyStroke(KeyEvent.VK_Q , KeyEvent.CTRL_MASK), sMapKey);
			
		this.jButtonCancelarEstructura.getActionMap().put(sMapKey, new AbstractAction() {
			public static final long serialVersionUID = 1L;
			public void actionPerformed(ActionEvent evt) {
			    try {jButtonCancelarEstructuraActionPerformed(evt);} catch (Exception e) {e.printStackTrace();}
			}
		});
		
		this.jButtonCerrarEstructura.addActionListener (
	          new java.awt.event.ActionListener() {
	              public void actionPerformed(ActionEvent evt) {
	            	  try {jButtonCerrarEstructuraActionPerformed(evt);}catch(Exception e){e.printStackTrace();}
	              }
	          }
        );
		
		this.jButtonCerrarToolBarEstructura.addActionListener (
	          new java.awt.event.ActionListener() {
	              public void actionPerformed(ActionEvent evt) {
	            	  try {jButtonCerrarEstructuraActionPerformed(evt);}catch(Exception e){e.printStackTrace();}
	              }
	          }
        );
		
		this.jMenuItemCerrarEstructura.addActionListener (
	          new java.awt.event.ActionListener() {
	              public void actionPerformed(ActionEvent evt) {
	            	  try {jButtonCerrarEstructuraActionPerformed(evt);}catch(Exception e){e.printStackTrace();}
	              }
	          }
        );
		
		this.jMenuItemDetalleCerrarEstructura.addActionListener (
	          new java.awt.event.ActionListener() {
	              public void actionPerformed(ActionEvent evt) {
	            	  //try {jButtonCerrarEstructuraActionPerformed(evt);}catch(Exception e){e.printStackTrace();}
					try {jButtonCancelarEstructuraActionPerformed(evt);}catch(Exception e){e.printStackTrace();}
	              }
	          }
        );
		
		sMapKey = "CerrarEstructura";
		inputMap = this.jButtonCerrarEstructura.getInputMap(JComponent.WHEN_IN_FOCUSED_WINDOW);
		inputMap.put(KeyStroke.getKeyStroke(KeyEvent.VK_C , KeyEvent.ALT_MASK), sMapKey);
			
		this.jButtonCerrarEstructura.getActionMap().put(sMapKey, new AbstractAction() {
			public static final long serialVersionUID = 1L;
			public void actionPerformed(ActionEvent evt) {
			    try {jButtonCerrarEstructuraActionPerformed(evt);} catch (Exception e) {e.printStackTrace();}
			}
		});
		
		this.jInternalFrameDetalleFormEstructura.jButtonGuardarCambiosEstructura.addActionListener (
	          new java.awt.event.ActionListener() {
	              public void actionPerformed(ActionEvent evt) {
	            	  try {jButtonGuardarCambiosEstructuraActionPerformed(evt);}catch(Exception e){e.printStackTrace();}
	              }
	          }
        );
		
		this.jButtonGuardarCambiosToolBarEstructura.addActionListener (
	          new java.awt.event.ActionListener() {
	              public void actionPerformed(ActionEvent evt) {
	            	  try {jButtonGuardarCambiosEstructuraActionPerformed(evt);}catch(Exception e){e.printStackTrace();}
	              }
	          }
        );
		
		this.jMenuItemGuardarCambiosEstructura.addActionListener (
	          new java.awt.event.ActionListener() {
	              public void actionPerformed(ActionEvent evt) {
	            	  try {jButtonGuardarCambiosEstructuraActionPerformed(evt);}catch(Exception e){e.printStackTrace();}
	              }
	          }
        );
		
		this.jButtonGuardarCambiosTablaEstructura.addActionListener (
	          new java.awt.event.ActionListener() {
	              public void actionPerformed(ActionEvent evt) {
	            	  try {jButtonGuardarCambiosEstructuraActionPerformed(evt);}catch(Exception e){e.printStackTrace();}
	              }
	          }
        );
		
		this.jButtonGuardarCambiosTablaToolBarEstructura.addActionListener (
	          new java.awt.event.ActionListener() {
	              public void actionPerformed(ActionEvent evt) {
	            	  try {jButtonGuardarCambiosEstructuraActionPerformed(evt);}catch(Exception e){e.printStackTrace();}
	              }
	          }
        );
		
		this.jMenuItemGuardarCambiosTablaEstructura.addActionListener (
	          new java.awt.event.ActionListener() {
	              public void actionPerformed(ActionEvent evt) {
	            	  try {jButtonGuardarCambiosEstructuraActionPerformed(evt);}catch(Exception e){e.printStackTrace();}
	              }
	          }
        );
		
		sMapKey = "GuardarCambiosEstructura";
		inputMap = this.jInternalFrameDetalleFormEstructura.jButtonGuardarCambiosEstructura.getInputMap(JComponent.WHEN_IN_FOCUSED_WINDOW);
		inputMap.put(KeyStroke.getKeyStroke(KeyEvent.VK_G , KeyEvent.CTRL_MASK), sMapKey);
			
		this.jInternalFrameDetalleFormEstructura.jButtonGuardarCambiosEstructura.getActionMap().put(sMapKey, new AbstractAction() {
			public static final long serialVersionUID = 1L;
			public void actionPerformed(ActionEvent evt) {
			    try {jButtonGuardarCambiosEstructuraActionPerformed(evt);} catch (Exception e) {e.printStackTrace();}
			}
		});
		
		this.jButtonRecargarInformacionEstructura.addActionListener (
	          new java.awt.event.ActionListener() {
	              public void actionPerformed(ActionEvent evt) {
	            	  try {jButtonRecargarInformacionEstructuraActionPerformed(evt);}catch(Exception e){e.printStackTrace();}
	              }
	          }
        );
		
		this.jButtonRecargarInformacionToolBarEstructura.addActionListener (
	          new java.awt.event.ActionListener() {
	              public void actionPerformed(ActionEvent evt) {
	            	  try {jButtonRecargarInformacionEstructuraActionPerformed(evt);}catch(Exception e){e.printStackTrace();}
	              }
	          }
        );
		
		this.jMenuItemRecargarInformacionEstructura.addActionListener (
	          new java.awt.event.ActionListener() {
	              public void actionPerformed(ActionEvent evt) {
	            	  try {jButtonRecargarInformacionEstructuraActionPerformed(evt);}catch(Exception e){e.printStackTrace();}
	              }
	          }
        );
		
		this.jButtonArbolEstructura.addActionListener (
	          new java.awt.event.ActionListener() {
	              public void actionPerformed(ActionEvent evt) {
	            	  try {jButtonArbolEstructuraActionPerformed(evt);}catch(Exception e){e.printStackTrace();}
	              }
	          }
        );
		
		this.jButtonAnterioresEstructura.addActionListener (
	          new java.awt.event.ActionListener() {
	              public void actionPerformed(ActionEvent evt) {
	            	  try {jButtonAnterioresEstructuraActionPerformed(evt);}catch(Exception e){e.printStackTrace();}
	              }
	          }
        );
		
		this.jButtonAnterioresToolBarEstructura.addActionListener (
	          new java.awt.event.ActionListener() {
	              public void actionPerformed(ActionEvent evt) {
	            	  try {jButtonAnterioresEstructuraActionPerformed(evt);}catch(Exception e){e.printStackTrace();}
	              }
	          }
        );
		
		this.jMenuItemAnterioresEstructura.addActionListener (
	          new java.awt.event.ActionListener() {
	              public void actionPerformed(ActionEvent evt) {
	            	  try {jButtonAnterioresEstructuraActionPerformed(evt);}catch(Exception e){e.printStackTrace();}
	              }
	          }
        );
		
		this.jButtonSiguientesEstructura.addActionListener (
	          new java.awt.event.ActionListener() {
	              public void actionPerformed(ActionEvent evt) {
	            	  try {jButtonSiguientesEstructuraActionPerformed(evt);}catch(Exception e){e.printStackTrace();}
	              }
	          }
        );
		
		this.jButtonSiguientesToolBarEstructura.addActionListener (
	          new java.awt.event.ActionListener() {
	              public void actionPerformed(ActionEvent evt) {
	            	  try {jButtonSiguientesEstructuraActionPerformed(evt);}catch(Exception e){e.printStackTrace();}
	              }
	          }
        );
		
		this.jMenuItemSiguientesEstructura.addActionListener (
	          new java.awt.event.ActionListener() {
	              public void actionPerformed(ActionEvent evt) {
	            	  try {jButtonSiguientesEstructuraActionPerformed(evt);}catch(Exception e){e.printStackTrace();}
	              }
	          }
        );
		
		this.jButtonNuevoGuardarCambiosEstructura.addActionListener (
	          new java.awt.event.ActionListener() {
	              public void actionPerformed(ActionEvent evt) {
	            	  try {jButtonNuevoGuardarCambiosEstructuraActionPerformed(evt);}catch(Exception e){e.printStackTrace();}
	              }
	          }
        );
		
		this.jButtonNuevoGuardarCambiosToolBarEstructura.addActionListener (
	          new java.awt.event.ActionListener() {
	              public void actionPerformed(ActionEvent evt) {
	            	  try {jButtonNuevoGuardarCambiosEstructuraActionPerformed(evt);}catch(Exception e){e.printStackTrace();}
	              }
	          }
        );
		
		this.jMenuItemNuevoGuardarCambiosEstructura.addActionListener (
	          new java.awt.event.ActionListener() {
	              public void actionPerformed(ActionEvent evt) {
	            	  try {jButtonNuevoGuardarCambiosEstructuraActionPerformed(evt);}catch(Exception e){e.printStackTrace();}
	              }
	          }
        );
		
		
		//SELECCIONAR TODOS
		this.jCheckBoxSeleccionarTodosEstructura.addItemListener(new ItemListener() {		
			public void itemStateChanged(ItemEvent evt) {
				try {jCheckBoxSeleccionarTodosEstructuraItemListener(evt);}catch(Exception e){e.printStackTrace();}
			}
		});

		this.jComboBoxTiposAccionesEstructura.addActionListener (new ActionListener () {
			public void actionPerformed(ActionEvent e) {
				try {jComboBoxTiposAccionesEstructuraActionListener(e);} catch (Exception e1) { e1.printStackTrace();}
			};
		});
		
		this.jComboBoxTiposSeleccionarEstructura.addActionListener (new ActionListener () {
			public void actionPerformed(ActionEvent e) {
				try {jComboBoxTiposSeleccionarEstructuraActionListener(e);} catch (Exception e1) { e1.printStackTrace();}
			};
		});
		
		this.jTextFieldValorCampoGeneralEstructura.addActionListener (new ActionListener () {
			public void actionPerformed(ActionEvent e) {
				try {jTextFieldValorCampoGeneralEstructuraActionListener(e);} catch (Exception e1) { e1.printStackTrace();}
			};
		});
		
		
		//BUSQUEDA GENERAL
		this.jInternalFrameDetalleFormEstructura.jButtonidEstructuraBusqueda.addActionListener(new ButtonActionListener(this,"idEstructuraBusqueda"));
		//ACTUALIZAR FK
		this.jInternalFrameDetalleFormEstructura.jButtonid_empresaEstructuraUpdate.addActionListener(new ButtonActionListener(this,"id_empresaEstructuraUpdate"));
		//BUSQUEDA GENERAL
		this.jInternalFrameDetalleFormEstructura.jButtonid_empresaEstructuraBusqueda.addActionListener(new ButtonActionListener(this,"id_empresaEstructuraBusqueda"));
		//ACTUALIZAR FK
		this.jInternalFrameDetalleFormEstructura.jButtonid_sucursalEstructuraUpdate.addActionListener(new ButtonActionListener(this,"id_sucursalEstructuraUpdate"));
		//BUSQUEDA GENERAL
		this.jInternalFrameDetalleFormEstructura.jButtonid_sucursalEstructuraBusqueda.addActionListener(new ButtonActionListener(this,"id_sucursalEstructuraBusqueda"));
		//ACTUALIZAR FK
		this.jInternalFrameDetalleFormEstructura.jButtonid_estructuraEstructuraUpdate.addActionListener(new ButtonActionListener(this,"id_estructuraEstructuraUpdate"));
		//BUSQUEDA GENERAL
		this.jInternalFrameDetalleFormEstructura.jButtonid_estructuraEstructuraBusqueda.addActionListener(new ButtonActionListener(this,"id_estructuraEstructuraBusqueda"));
		//ACTUALIZAR FK
		this.jInternalFrameDetalleFormEstructura.jButtonid_tipo_pago__n_mEstructuraUpdate.addActionListener(new ButtonActionListener(this,"id_tipo_pago__n_mEstructuraUpdate"));
		//BUSQUEDA GENERAL
		this.jInternalFrameDetalleFormEstructura.jButtonid_tipo_pago__n_mEstructuraBusqueda.addActionListener(new ButtonActionListener(this,"id_tipo_pago__n_mEstructuraBusqueda"));
		//ACTUALIZAR FK
		this.jInternalFrameDetalleFormEstructura.jButtonid_numero_patronalEstructuraUpdate.addActionListener(new ButtonActionListener(this,"id_numero_patronalEstructuraUpdate"));
		//BUSQUEDA GENERAL
		this.jInternalFrameDetalleFormEstructura.jButtonid_numero_patronalEstructuraBusqueda.addActionListener(new ButtonActionListener(this,"id_numero_patronalEstructuraBusqueda"));
		//jButtonid_cuenta_contableEstructura.addActionListener (
		//	new java.awt.event.ActionListener() {
		//		public void actionPerformed(java.awt.event.ActionEvent evt) {
		//			jButtonid_cuenta_contableEstructuraActionPerformed(evt);
		//		}
		//	}
		//);

		//BUSQUEDA CAMPO
		this.jInternalFrameDetalleFormEstructura.jButtonid_cuenta_contableEstructura.addActionListener(new ButtonActionListener(this,"id_cuenta_contableEstructura"));
		//jButtonid_cuenta_contableEstructuraArbol.addActionListener (
		//	new java.awt.event.ActionListener() {
		//		public void actionPerformed(java.awt.event.ActionEvent evt) {
		//			abrirFrameTreeCuentaContable("BUSQUEDA_FK");
		//		}
		//	}
		//);

		//BUSQUEDA ARBOL CAMPO
		this.jInternalFrameDetalleFormEstructura.jButtonid_cuenta_contableEstructuraArbol.addActionListener(new ButtonActionListener(this,"id_cuenta_contableEstructuraArbol"));
		//ACTUALIZAR FK
		this.jInternalFrameDetalleFormEstructura.jButtonid_cuenta_contableEstructuraUpdate.addActionListener(new ButtonActionListener(this,"id_cuenta_contableEstructuraUpdate"));
		//BUSQUEDA GENERAL
		this.jInternalFrameDetalleFormEstructura.jButtonid_cuenta_contableEstructuraBusqueda.addActionListener(new ButtonActionListener(this,"id_cuenta_contableEstructuraBusqueda"));
		//ACTUALIZAR FK
		this.jInternalFrameDetalleFormEstructura.jButtonid_tipo_estructuraEstructuraUpdate.addActionListener(new ButtonActionListener(this,"id_tipo_estructuraEstructuraUpdate"));
		//BUSQUEDA GENERAL
		this.jInternalFrameDetalleFormEstructura.jButtonid_tipo_estructuraEstructuraBusqueda.addActionListener(new ButtonActionListener(this,"id_tipo_estructuraEstructuraBusqueda"));
		//ACTUALIZAR FK
		this.jInternalFrameDetalleFormEstructura.jButtonid_paisEstructuraUpdate.addActionListener(new ButtonActionListener(this,"id_paisEstructuraUpdate"));
		//BUSQUEDA GENERAL
		this.jInternalFrameDetalleFormEstructura.jButtonid_paisEstructuraBusqueda.addActionListener(new ButtonActionListener(this,"id_paisEstructuraBusqueda"));
		//ACTUALIZAR FK
		this.jInternalFrameDetalleFormEstructura.jButtonid_ciudadEstructuraUpdate.addActionListener(new ButtonActionListener(this,"id_ciudadEstructuraUpdate"));
		//BUSQUEDA GENERAL
		this.jInternalFrameDetalleFormEstructura.jButtonid_ciudadEstructuraBusqueda.addActionListener(new ButtonActionListener(this,"id_ciudadEstructuraBusqueda"));
		//BUSQUEDA GENERAL
		this.jInternalFrameDetalleFormEstructura.jButtoncodigoEstructuraBusqueda.addActionListener(new ButtonActionListener(this,"codigoEstructuraBusqueda"));
		//BUSQUEDA GENERAL
		this.jInternalFrameDetalleFormEstructura.jButtonnumeroEstructuraBusqueda.addActionListener(new ButtonActionListener(this,"numeroEstructuraBusqueda"));
		//BUSQUEDA GENERAL
		this.jInternalFrameDetalleFormEstructura.jButtonvalor_anticipoEstructuraBusqueda.addActionListener(new ButtonActionListener(this,"valor_anticipoEstructuraBusqueda"));
		//BUSQUEDA GENERAL
		this.jInternalFrameDetalleFormEstructura.jButtonporcentaje_anticipoEstructuraBusqueda.addActionListener(new ButtonActionListener(this,"porcentaje_anticipoEstructuraBusqueda"));
		//BUSQUEDA GENERAL
		this.jInternalFrameDetalleFormEstructura.jButtonnombreEstructuraBusqueda.addActionListener(new ButtonActionListener(this,"nombreEstructuraBusqueda"));
		//BUSQUEDA GENERAL
		this.jInternalFrameDetalleFormEstructura.jButtones_jefeEstructuraBusqueda.addActionListener(new ButtonActionListener(this,"es_jefeEstructuraBusqueda"));
		//BUSQUEDA GENERAL
		this.jInternalFrameDetalleFormEstructura.jButtones_anualEstructuraBusqueda.addActionListener(new ButtonActionListener(this,"es_anualEstructuraBusqueda"));
		//BUSQUEDA GENERAL
		this.jInternalFrameDetalleFormEstructura.jButtonporcentajeEstructuraBusqueda.addActionListener(new ButtonActionListener(this,"porcentajeEstructuraBusqueda"));
		//BUSQUEDA GENERAL
		this.jInternalFrameDetalleFormEstructura.jButtonvalorEstructuraBusqueda.addActionListener(new ButtonActionListener(this,"valorEstructuraBusqueda"));
		
		
		this.jButtonFK_IdCiudadEstructura.addActionListener(new ButtonActionListener(this,"FK_IdCiudadEstructura"));

		this.jButtonFK_IdCuentaContableEstructura.addActionListener(new ButtonActionListener(this,"FK_IdCuentaContableEstructura"));

		this.jButtonBuscarFK_IdCuentaContableid_cuenta_contableEstructura.addActionListener(new ButtonActionListener(this,"id_cuenta_contableEstructura"));

		this.jButtonFK_IdEstructuraEstructura.addActionListener(new ButtonActionListener(this,"FK_IdEstructuraEstructura"));

		this.jButtonFK_IdNumeroPatronalEstructura.addActionListener(new ButtonActionListener(this,"FK_IdNumeroPatronalEstructura"));

		this.jButtonFK_IdPaisEstructura.addActionListener(new ButtonActionListener(this,"FK_IdPaisEstructura"));

		this.jButtonFK_IdTipoEstructuraEstructura.addActionListener(new ButtonActionListener(this,"FK_IdTipoEstructuraEstructura"));

		this.jButtonFK_IdTipoPago_NMEstructura.addActionListener(new ButtonActionListener(this,"FK_IdTipoPago_NMEstructura"));

		
		//REPORTE DINAMICO
		this.jButtonCerrarReporteDinamicoEstructura.addActionListener (
	          new java.awt.event.ActionListener() {
	              public void actionPerformed(ActionEvent evt) {
	            	  try {jButtonCerrarReporteDinamicoEstructuraActionPerformed(evt);}catch(Exception e){e.printStackTrace();}
	              }
	          }
        );
		
		this.jButtonGenerarReporteDinamicoEstructura.addActionListener (
	          new java.awt.event.ActionListener() {
	              public void actionPerformed(ActionEvent evt) {
	            	  try {jButtonGenerarReporteDinamicoEstructuraActionPerformed(evt);}catch(Exception e){e.printStackTrace();}
	              }
	          }
        );
		
		this.jButtonGenerarExcelReporteDinamicoEstructura.addActionListener (
	          new java.awt.event.ActionListener() {
	              public void actionPerformed(ActionEvent evt) {
	            	  try {jButtonGenerarExcelReporteDinamicoEstructuraActionPerformed(evt);}catch(Exception e){e.printStackTrace();}
	              }
	          }
        );
		
		//IMPORTACION
		this.jButtonCerrarImportacionEstructura.addActionListener (
	          new java.awt.event.ActionListener() {
	              public void actionPerformed(ActionEvent evt) {
	            	  try {jButtonCerrarImportacionEstructuraActionPerformed(evt);}catch(Exception e){e.printStackTrace();}
	              }
	          }
        );
		
		this.jButtonGenerarImportacionEstructura.addActionListener (
	          new java.awt.event.ActionListener() {
	              public void actionPerformed(ActionEvent evt) {
	            	  try {jButtonGenerarImportacionEstructuraActionPerformed(evt);}catch(Exception e){e.printStackTrace();}
	              }
	          }
        );
		
		this.jButtonAbrirImportacionEstructura.addActionListener (
	          new java.awt.event.ActionListener() {
	              public void actionPerformed(ActionEvent evt) {
	            	  try {jButtonAbrirImportacionEstructuraActionPerformed(evt);}catch(Exception e){e.printStackTrace();}
	              }
	          }
        );
	}
	*/
	
	
	public void jComboBoxTiposSeleccionarEstructuraActionListener(ActionEvent evt) throws Exception {    		
		try {			
			Reporte reporte=(Reporte)this.jComboBoxTiposSeleccionarEstructura.getSelectedItem();
			
			//if(reporte.getsCodigo().equals("SELECCIONAR")) {
			//}					
		} catch(Exception e) {
			FuncionesSwing.manageException(this, e,logger,EstructuraConstantesFunciones.CLASSNAME);
		}
	}	
	
	
	
	public void seleccionarTodosEstructura(Boolean conSeleccionarTodos) throws Exception {    		
		try {
			if(Constantes.ISUSAEJBLOGICLAYER) {				
				for(Estructura estructuraAux:this.estructuraLogic.getEstructuras()) {
					estructuraAux.setIsSelected(conSeleccionarTodos);
				}			
			} else if(Constantes.ISUSAEJBREMOTE||Constantes.ISUSAEJBHOME) {
				for(Estructura estructuraAux:estructuras) {
					estructuraAux.setIsSelected(conSeleccionarTodos);
				}
			}
		} catch(Exception e) {
			FuncionesSwing.manageException(this, e,logger,EstructuraConstantesFunciones.CLASSNAME);
		}
	}
	
	public void jCheckBoxSeleccionarTodosEstructuraItemListener(ItemEvent evt) throws Exception {    		
		try {			
			this.inicializarActualizarBindingEstructura(false,false);
			
			//JCheckBox jCheckBox=(JCheckBox)evt.getSource();			
			//System.out.println("ok");		
			
			Boolean existe=false;
			
			if(sTipoSeleccionar.equals("COLUMNAS")) {
				existe=true;
				
				if(Constantes.ISUSAEJBLOGICLAYER) {				
					for(Estructura estructuraAux:this.estructuraLogic.getEstructuras()) {
						estructuraAux.setIsSelected(this.isSeleccionarTodos);
					}			
				} else if(Constantes.ISUSAEJBREMOTE||Constantes.ISUSAEJBHOME) {
					for(Estructura estructuraAux:estructuras) {
						estructuraAux.setIsSelected(this.isSeleccionarTodos);
					}
				}
			} else {
				if(Constantes.ISUSAEJBLOGICLAYER) {
					for(Estructura estructuraAux:this.estructuraLogic.getEstructuras()) {
					
						if(sTipoSeleccionar.equals(EstructuraConstantesFunciones.LABEL_ESJEFE)) {
							existe=true;
							estructuraAux.setes_jefe(this.isSeleccionarTodos);
						}
						 else if(sTipoSeleccionar.equals(EstructuraConstantesFunciones.LABEL_ESANUAL)) {
							existe=true;
							estructuraAux.setes_anual(this.isSeleccionarTodos);
						}
					}	
				} else if(Constantes.ISUSAEJBREMOTE||Constantes.ISUSAEJBHOME) {
					for(Estructura estructuraAux:estructuras) {
						
						if(sTipoSeleccionar.equals(EstructuraConstantesFunciones.LABEL_ESJEFE)) {
							existe=true;
							estructuraAux.setes_jefe(this.isSeleccionarTodos);
						}
						 else if(sTipoSeleccionar.equals(EstructuraConstantesFunciones.LABEL_ESANUAL)) {
							existe=true;
							estructuraAux.setes_anual(this.isSeleccionarTodos);
						}
					}
				}
			}
					
			if(existe) {
				this.inicializarActualizarBindingTablaEstructura(false);
			} else {
				JOptionPane.showMessageDialog(this,"NO SE HA SELECCIONADO ALGUNA COLUMNA VALIDA","SELECCIONAR",JOptionPane.ERROR_MESSAGE);
			}	
			
			//TableCellRenderer tableCellRenderer=null;			
			
			//TableCellEditor tableCellEditor=null;						
						
			//FUNCIONA CON MODEL PERO SE DANA MANTENIMIENTO
			/*
			for(int i = 0; i < this.jTableDatosEstructura.getRowCount(); i++) {				
				tableCellRenderer=this.jTableDatosSistema.getCellRenderer(i, 2);
				tableCellEditor=this.jTableDatosSistema.getCellEditor(i, 2);
				
				idSeleccionarTableCell=(IdSeleccionarTableCell)tableCellRenderer;				
				idSeleccionarTableCell.jCheckBoxId.setSelected(jCheckBox.isSelected());
				
				idSeleccionarTableCell=(IdSeleccionarTableCell)tableCellEditor;
				
				if(idSeleccionarTableCell.jCheckBoxId!=null) {
					idSeleccionarTableCell.jCheckBoxId.setSelected(jCheckBox.isSelected());
				}
				
				//System.out.println(idSeleccionarTableCell.valor);
				
				//this.jTableDatosEstructura.getModel().setValueAt(jCheckBox.isSelected(), i, Funciones2.getColumnIndexByName(this.jTableDatosEstructura,Constantes2.S_SELECCIONAR));
		    } 
			*/
					
		} catch(Exception e) {
			FuncionesSwing.manageException(this, e,logger,EstructuraConstantesFunciones.CLASSNAME);
		}
	}
	
	public void jCheckBoxSeleccionadosEstructuraItemListener(ItemEvent evt) throws Exception {    		
		try {			
			this.inicializarActualizarBindingEstructura(false,false);
			
			//JCheckBox jCheckBox=(JCheckBox)evt.getSource();			
			//System.out.println("ok");		
			
			Boolean existe=false;
			int[] arrNumRowsSeleccionados=null;
			
			arrNumRowsSeleccionados=this.jTableDatosEstructura.getSelectedRows();
			
			Estructura estructuraLocal=new Estructura();
			
			//this.seleccionarTodosEstructura(false);
			
			for(Integer iNumRowSeleccionado:arrNumRowsSeleccionados) {
				existe=true;
				
				if(Constantes.ISUSAEJBLOGICLAYER) {
					estructuraLocal =(Estructura) this.estructuraLogic.getEstructuras().toArray()[this.jTableDatosEstructura.convertRowIndexToModel(iNumRowSeleccionado)];
				} else if(Constantes.ISUSAEJBREMOTE || Constantes.ISUSAEJBHOME) {
					estructuraLocal =(Estructura) this.estructuras.toArray()[this.jTableDatosEstructura.convertRowIndexToModel(iNumRowSeleccionado)];
				}
				
				estructuraLocal.setIsSelected(this.isSeleccionados);
			}
			
			/*
			if(sTipoSeleccionar.equals("SELECCIONAR")) {
				existe=true;
				
				if(Constantes.ISUSAEJBLOGICLAYER) {				
					for(Estructura estructuraAux:this.estructuraLogic.getEstructuras()) {
						estructuraAux.setIsSelected(this.isSeleccionados);
					}			
				} else if(Constantes.ISUSAEJBREMOTE||Constantes.ISUSAEJBHOME) {
					for(Estructura estructuraAux:estructuras) {
						estructuraAux.setIsSelected(this.isSeleccionados);
					}
				}
			}
			*/
			
			//if(existe) {
				this.inicializarActualizarBindingTablaEstructura(false);
			/*
			} else {
				JOptionPane.showMessageDialog(this,"NO SE HA SELECCIONADO ALGUNA COLUMNA VALIDA","SELECCIONAR",JOptionPane.ERROR_MESSAGE);
			}	
			*/
			
			
			//TableCellRenderer tableCellRenderer=null;			
			
			//TableCellEditor tableCellEditor=null;						
						
			//FUNCIONA CON MODEL PERO SE DANA MANTENIMIENTO
			/*
			for(int i = 0; i < this.jTableDatosEstructura.getRowCount(); i++) {				
				tableCellRenderer=this.jTableDatosSistema.getCellRenderer(i, 2);
				tableCellEditor=this.jTableDatosSistema.getCellEditor(i, 2);
				
				idSeleccionarTableCell=(IdSeleccionarTableCell)tableCellRenderer;				
				idSeleccionarTableCell.jCheckBoxId.setSelected(jCheckBox.isSelected());
				
				idSeleccionarTableCell=(IdSeleccionarTableCell)tableCellEditor;
				
				if(idSeleccionarTableCell.jCheckBoxId!=null) {
					idSeleccionarTableCell.jCheckBoxId.setSelected(jCheckBox.isSelected());
				}
				
				//System.out.println(idSeleccionarTableCell.valor);
				
				//this.jTableDatosEstructura.getModel().setValueAt(jCheckBox.isSelected(), i, Funciones2.getColumnIndexByName(this.jTableDatosEstructura,Constantes2.S_SELECCIONAR));
		    } 
			*/
					
		} catch(Exception e) {
			FuncionesSwing.manageException(this, e,logger,EstructuraConstantesFunciones.CLASSNAME);
		}
	}
	
	public void jCheckBoxSeleccionarActualEstructuraItemListener(ItemEvent evt,Long idActual) throws Exception {    		
		try {
			
		} catch(Exception e) {
			FuncionesSwing.manageException(this, e,logger,EstructuraConstantesFunciones.CLASSNAME);
		}
	}
	
	public void ejecutarAuxiliarEstructuraParaAjaxPostBack() throws Exception {    		
		try {
			
		} catch(Exception e) {
			FuncionesSwing.manageException(this, e,logger,EstructuraConstantesFunciones.CLASSNAME);
		}
	}
	
	public void jTextFieldValorCampoGeneralEstructuraActionListener(ActionEvent evt) throws Exception {    		
		try {
			this.inicializarActualizarBindingEstructura(false,false);
			
			//System.out.println(this.jTextFieldValorCampoGeneralEstructura.getText());		
			
			Boolean existe=false;
			
			if(Constantes.ISUSAEJBLOGICLAYER) {
				for(Estructura estructuraAux:this.estructuraLogic.getEstructuras()) {
				
						if(sTipoSeleccionar.equals(EstructuraConstantesFunciones.LABEL_CODIGO)) {
							existe=true;
							estructuraAux.setcodigo(this.sValorCampoGeneral);
						}
						 else if(sTipoSeleccionar.equals(EstructuraConstantesFunciones.LABEL_NUMERO)) {
							existe=true;
							estructuraAux.setnumero(this.sValorCampoGeneral);
						}
						 else if(sTipoSeleccionar.equals(EstructuraConstantesFunciones.LABEL_VALORANTICIPO)) {
							existe=true;
							estructuraAux.setvalor_anticipo(Double.parseDouble(this.sValorCampoGeneral));
						}
						 else if(sTipoSeleccionar.equals(EstructuraConstantesFunciones.LABEL_PORCENTAJEANTICIPO)) {
							existe=true;
							estructuraAux.setporcentaje_anticipo(Double.parseDouble(this.sValorCampoGeneral));
						}
						 else if(sTipoSeleccionar.equals(EstructuraConstantesFunciones.LABEL_NOMBRE)) {
							existe=true;
							estructuraAux.setnombre(this.sValorCampoGeneral);
						}
						 else if(sTipoSeleccionar.equals(EstructuraConstantesFunciones.LABEL_PORCENTAJE)) {
							existe=true;
							estructuraAux.setporcentaje(Double.parseDouble(this.sValorCampoGeneral));
						}
						 else if(sTipoSeleccionar.equals(EstructuraConstantesFunciones.LABEL_VALOR)) {
							existe=true;
							estructuraAux.setvalor(Double.parseDouble(this.sValorCampoGeneral));
						}
				}	
			} else if(Constantes.ISUSAEJBREMOTE||Constantes.ISUSAEJBHOME) {
				for(Estructura estructuraAux:estructuras) {
					
						if(sTipoSeleccionar.equals(EstructuraConstantesFunciones.LABEL_CODIGO)) {
							existe=true;
							estructuraAux.setcodigo(this.sValorCampoGeneral);
						}
						 else if(sTipoSeleccionar.equals(EstructuraConstantesFunciones.LABEL_NUMERO)) {
							existe=true;
							estructuraAux.setnumero(this.sValorCampoGeneral);
						}
						 else if(sTipoSeleccionar.equals(EstructuraConstantesFunciones.LABEL_VALORANTICIPO)) {
							existe=true;
							estructuraAux.setvalor_anticipo(Double.parseDouble(this.sValorCampoGeneral));
						}
						 else if(sTipoSeleccionar.equals(EstructuraConstantesFunciones.LABEL_PORCENTAJEANTICIPO)) {
							existe=true;
							estructuraAux.setporcentaje_anticipo(Double.parseDouble(this.sValorCampoGeneral));
						}
						 else if(sTipoSeleccionar.equals(EstructuraConstantesFunciones.LABEL_NOMBRE)) {
							existe=true;
							estructuraAux.setnombre(this.sValorCampoGeneral);
						}
						 else if(sTipoSeleccionar.equals(EstructuraConstantesFunciones.LABEL_PORCENTAJE)) {
							existe=true;
							estructuraAux.setporcentaje(Double.parseDouble(this.sValorCampoGeneral));
						}
						 else if(sTipoSeleccionar.equals(EstructuraConstantesFunciones.LABEL_VALOR)) {
							existe=true;
							estructuraAux.setvalor(Double.parseDouble(this.sValorCampoGeneral));
						}
				}
			}
								
			if(existe) {
				this.inicializarActualizarBindingTablaEstructura(false);
			} else {
				JOptionPane.showMessageDialog(this,"NO SE HA SELECCIONADO ALGUNA COLUMNA VALIDA","SELECCIONAR",JOptionPane.ERROR_MESSAGE);
			}			
		} catch(Exception e) {
			FuncionesSwing.manageException(this, e,logger,EstructuraConstantesFunciones.CLASSNAME);
		}
	}
	
	public void jComboBoxTiposAccionesEstructuraActionListener(ActionEvent evt,Boolean esParaAccionDesdeFormulario) throws Exception {    				
		Boolean conSplash=true;
		
		try {							
		
			this.inicializarActualizarBindingEstructura(false,false);
			
			Reporte reporte=new Reporte();
			
			this.esParaAccionDesdeFormularioEstructura=esParaAccionDesdeFormulario;
			
			if(!esParaAccionDesdeFormulario) {
				
				reporte=(Reporte)this.jComboBoxTiposAccionesEstructura.getSelectedItem();
				
			} else {
				reporte=(Reporte)this.jInternalFrameDetalleFormEstructura.jComboBoxTiposAccionesFormularioEstructura.getSelectedItem();
			}
			String sTipoAccionLocal=this.sTipoAccion;
			
			if(!esParaAccionDesdeFormulario) {
				sTipoAccionLocal=this.sTipoAccion;
			} else {
				sTipoAccionLocal=this.sTipoAccionFormulario;
			}
			
			if(sTipoAccionLocal.equals("GENERAR REPORTE")) {//reporte.getsCodigo().equals("GENERAR REPORTE")) {
				if(this.isPermisoReporteEstructura) {				
					conSplash=true;//false;										
					
					//this.startProcessEstructura(conSplash);
				
					this.generarReporteEstructurasSeleccionados();
				} else {
					JOptionPane.showMessageDialog(this,"NO TIENE PERMISO PARA GENERAR REPORTES","REPORTE",JOptionPane.ERROR_MESSAGE);					
				}
				if(!esParaAccionDesdeFormulario) {
					
					this.jComboBoxTiposAccionesEstructura.setSelectedIndex(0);					
					
				} else {
					this.jInternalFrameDetalleFormEstructura.jComboBoxTiposAccionesFormularioEstructura.setSelectedIndex(0);					
				}
			} else if(sTipoAccionLocal.equals("GENERAR REPORTE DINAMICO")) {//reporte.getsCodigo().equals("GENERAR_REPORTE_GROUP_GENERICO")) {
				//SE GENERA REPORTE SEGUN TIPO REPORTE SELECCIONADO
				//this.mostrarReporteDinamicoEstructurasSeleccionados();
				//this.jComboBoxTiposAccionesEstructura.setSelectedIndex(0);					
			}  else if(sTipoAccionLocal.equals("GENERAR_REPORTE_GROUP_GENERICO")) {//reporte.getsCodigo().equals("GENERAR_REPORTE_GROUP_GENERICO")) {
				//SE GENERA REPORTE SEGUN TIPO REPORTE SELECCIONADO
				//this.generarReporteGroupGenericoEstructurasSeleccionados(false);
				//this.jComboBoxTiposAccionesEstructura.setSelectedIndex(0);					
			} else if(sTipoAccionLocal.equals("GENERAR_REPORTE_TOTALES_GROUP_GENERICO")) {//reporte.getsCodigo().equals("GENERAR_REPORTE_GROUP_GENERICO")) {
				//SE GENERA REPORTE SEGUN TIPO REPORTE SELECCIONADO
				//this.generarReporteGroupGenericoEstructurasSeleccionados(true);
				//this.jComboBoxTiposAccionesEstructura.setSelectedIndex(0);					
			} else if(sTipoAccionLocal.equals("EXPORTAR_DATOS")) {//reporte.getsCodigo().equals("GENERAR_REPORTE_GROUP_GENERICO")) {
				//this.startProcessEstructura();
				
				this.exportarEstructurasSeleccionados();
				if(!esParaAccionDesdeFormulario) {
					
					this.jComboBoxTiposAccionesEstructura.setSelectedIndex(0);					
					
				} else {
					this.jInternalFrameDetalleFormEstructura.jComboBoxTiposAccionesFormularioEstructura.setSelectedIndex(0);					
				}					
			} else if(sTipoAccionLocal.equals("IMPORTAR_DATOS")) {//reporte.getsCodigo().equals("GENERAR_REPORTE_GROUP_GENERICO")) {
				this.mostrarImportacionEstructuras();
				//this.importarEstructuras();
				if(!esParaAccionDesdeFormulario) {
					
					this.jComboBoxTiposAccionesEstructura.setSelectedIndex(0);					
					
				} else {
					this.jInternalFrameDetalleFormEstructura.jComboBoxTiposAccionesFormularioEstructura.setSelectedIndex(0);					
				}					
			} else if(sTipoAccionLocal.equals("EXPORTAR_DATOS_EXCEL")) {//reporte.getsCodigo().equals("GENERAR_REPORTE_GROUP_GENERICO")) {
				//this.startProcessEstructura();
				//SE EXPORTA SEGUN TIPO ARCHIVO SELECCIONADO
				//this.exportarExcelEstructurasSeleccionados();
				//this.jComboBoxTiposAccionesEstructura.setSelectedIndex(0);					
			}  else if(sTipoAccionLocal.equals("RECARGAR_FK")) {//reporte.getsCodigo().equals("GENERAR_REPORTE_GROUP_GENERICO")) {								
				if(JOptionPane.showConfirmDialog(this, "ESTA SEGURO DE RECARGAR REFERENCIAS ?", "MANTENIMIENTO DE Estructura", JOptionPane.OK_CANCEL_OPTION) == 0) {
				
				//this.startProcessEstructura();
				
					if(!esParaAccionDesdeFormulario || (esParaAccionDesdeFormulario && this.isEsNuevoEstructura)) {
						this.esRecargarFks=true;
						this.cargarCombosForeignKeyEstructura(false,false,false);
						this.esRecargarFks=false;
						
						JOptionPane.showMessageDialog(this,"PROCESO EJECUTADO CORRECTAMENTE","MANTENIMIENTO DE Estructura",JOptionPane.INFORMATION_MESSAGE);
					} else {
						JOptionPane.showMessageDialog(this,"ESTE PROCESO SOLO FUNCIONA AL INGRESAR UN NUEVO ELEMENTO","MANTENIMIENTO",JOptionPane.ERROR_MESSAGE);	
					}
					
					
				}
				
				if(!esParaAccionDesdeFormulario) {
					
					this.jComboBoxTiposAccionesEstructura.setSelectedIndex(0);					
					
				} else {
					this.jInternalFrameDetalleFormEstructura.jComboBoxTiposAccionesFormularioEstructura.setSelectedIndex(0);					
				}	
			} 			
			else if(EstructuraBeanSwingJInternalFrame.EsProcesoReporte(reporte.getsCodigo())){
				if(this.isPermisoReporteEstructura) {				
					if(this.tieneElementosSeleccionados()) {
						this.quitarFilaTotales();
						
						conSplash=false;
						
						//this.startProcessEstructura(conSplash);
					
						//this.actualizarParametrosGeneralEstructura();
						
						this.generarReporteProcesoAccionEstructurasSeleccionados(reporte.getsCodigo());
						
						if(!esParaAccionDesdeFormulario) {
							
							this.jComboBoxTiposAccionesEstructura.setSelectedIndex(0);					
							
						} else {
							this.jInternalFrameDetalleFormEstructura.jComboBoxTiposAccionesFormularioEstructura.setSelectedIndex(0);					
						}
					} else {
						JOptionPane.showMessageDialog(this,"NO SE HA SELECCIONADO ALGUN ELEMENTO","SELECCIONAR",JOptionPane.ERROR_MESSAGE);
					}
				} else {
					JOptionPane.showMessageDialog(this,"NO TIENE PERMISO PARA GENERAR REPORTES","REPORTE",JOptionPane.ERROR_MESSAGE);					
				}
			} 
			else if(EstructuraBeanSwingJInternalFrameAdditional.EsProcesoAccionNormal(reporte.getsCodigo())){
				if(this.tieneElementosSeleccionados()) {
					this.quitarFilaTotales();
					
					if(JOptionPane.showConfirmDialog(this, "ESTA SEGURO DE PROCESAR "+reporte.getsDescripcion()+" EN PROCESO EstructuraS SELECCIONADOS?", "MANTENIMIENTO DE Estructura", JOptionPane.OK_CANCEL_OPTION) == 0) {
						//this.startProcessEstructura();
				
						this.actualizarParametrosGeneralEstructura();
						
						//ARCHITECTURE
						if(Constantes.ISUSAEJBLOGICLAYER) {						
							this.estructuraReturnGeneral=estructuraLogic.procesarAccionEstructurasWithConnection(this.parametroGeneralUsuario,this.moduloActual,this.opcionActual,this.usuarioActual,sTipoAccionLocal,this.estructuraLogic.getEstructuras(),this.estructuraParameterGeneral);
						
						} else if(Constantes.ISUSAEJBREMOTE) {
						
						} else if(Constantes.ISUSAEJBHOME) {
						}
						//ARCHITECTURE
						
						this.procesarEstructuraReturnGeneral();
					
					if(!esParaAccionDesdeFormulario) {
						
						this.jComboBoxTiposAccionesEstructura.setSelectedIndex(0);					
						
					} else {
						this.jInternalFrameDetalleFormEstructura.jComboBoxTiposAccionesFormularioEstructura.setSelectedIndex(0);					
					}
					}
				} else {
					JOptionPane.showMessageDialog(this,"NO SE HA SELECCIONADO ALGUN ELEMENTO","SELECCIONAR",JOptionPane.ERROR_MESSAGE);
				}				
			} 
			else {
				if(this.tieneElementosSeleccionados()) {
					this.quitarFilaTotales();
					
					this.actualizarParametrosGeneralEstructura();
					
					EstructuraBeanSwingJInternalFrameAdditional.ProcesarAccion(reporte.getsCodigo(),reporte.getsDescripcion(),this);
					
					this.procesarEstructuraReturnGeneral();
					
					if(!esParaAccionDesdeFormulario) {
						
						this.jComboBoxTiposAccionesEstructura.setSelectedIndex(0);					
						
					} else {
						this.jInternalFrameDetalleFormEstructura.jComboBoxTiposAccionesFormularioEstructura.setSelectedIndex(0);					
					}
				} else {
					JOptionPane.showMessageDialog(this,"NO SE HA SELECCIONADO ALGUN ELEMENTO","SELECCIONAR",JOptionPane.ERROR_MESSAGE);
				}
			}
		} catch(Exception e) {
			this.esRecargarFks=false;
			
			FuncionesSwing.manageException(this, e,logger,EstructuraConstantesFunciones.CLASSNAME);
		
		}  finally {
      		//this.finishProcessEstructura(conSplash);
      	}
	}
	
	public void jComboBoxTiposRelacionesEstructuraActionListener(ActionEvent evt) throws Exception {    				
		Boolean conSplash=true;
		
		try {			
			this.startProcessEstructura();
			
			if(this.jInternalFrameDetalleFormEstructura==null) { //if(!this.conCargarFormDetalle) {			
				this.inicializarFormDetalle();
			}
			
			ArrayList<Estructura> estructurasSeleccionados=new ArrayList<Estructura>();		
			Estructura estructura=new Estructura();
			
			int rowIndex=-1;//CON ESTO SE DESHABILITA SELECCION POR INDICE
			
			this.inicializarActualizarBindingEstructura(false,false);
			
			Reporte reporte=new Reporte();
			
			
			reporte=(Reporte)this.jComboBoxTiposRelacionesEstructura.getSelectedItem();
			
			
			
			
			estructurasSeleccionados=this.getEstructurasSeleccionados(true);
			//this.sTipoAccion;
			
			if(estructurasSeleccionados.size()==1) {
				for(Estructura estructuraAux:estructurasSeleccionados) {
					estructura=estructuraAux;
				}
				
				if(this.sTipoAccion.equals("NONE")) {
				
				}
				
				else if(this.sTipoRelacion.equals("Centro Costo Estructura")) {
					jButtonCentroCostoEstructuraActionPerformed(null,rowIndex,true,false,estructura);
				}
				else if(this.sTipoRelacion.equals("Plani Vacacion")) {
					jButtonPlaniVacacionActionPerformed(null,rowIndex,true,false,estructura);
				}
				else if(this.sTipoRelacion.equals("Asistencia Mensual")) {
					jButtonAsistenciaMensualActionPerformed(null,rowIndex,true,false,estructura);
				}
				else if(this.sTipoRelacion.equals("Empleado Proceso Rubro")) {
					jButtonEmpleadoProcesoRubroActionPerformed(null,rowIndex,true,false,estructura);
				}
				else if(this.sTipoRelacion.equals("Empleado Pago Rubro")) {
					jButtonEmpleadoPagoRubroActionPerformed(null,rowIndex,true,false,estructura);
				}
				else if(this.sTipoRelacion.equals("Provision Empleado")) {
					jButtonProvisionEmpleadoActionPerformed(null,rowIndex,true,false,estructura);
				}
				else if(this.sTipoRelacion.equals("Empleado")) {
					jButtonEmpleadoActionPerformed(null,rowIndex,true,false,estructura);
				}
				else if(this.sTipoRelacion.equals("Estructura")) {
					jButtonEstructuraActionPerformed(null,rowIndex,true,false,estructura);
				}
				else if(this.sTipoRelacion.equals("Evaluacion Empleado")) {
					jButtonEvaluacionEmpleadoActionPerformed(null,rowIndex,true,false,estructura);
				}
				else if(this.sTipoRelacion.equals("Empleado Impuesto Renta")) {
					jButtonEmpleadoImpuestoRentaActionPerformed(null,rowIndex,true,false,estructura);
				}
				else if(this.sTipoRelacion.equals("Rubro Estructura")) {
					jButtonRubroEstructuraActionPerformed(null,rowIndex,true,false,estructura);
				}
				else if(this.sTipoRelacion.equals("Cierre Rol Mensual")) {
					jButtonCierreRolMensualActionPerformed(null,rowIndex,true,false,estructura);
				}
				else if(this.sTipoRelacion.equals("Formato Nomi")) {
					jButtonFormatoNomiActionPerformed(null,rowIndex,true,false,estructura);
				}
				else if(this.sTipoRelacion.equals("Empleado Estructura")) {
					jButtonEmpleadoEstructuraActionPerformed(null,rowIndex,true,false,estructura);
				}
				else if(this.sTipoRelacion.equals("Historial Pago Nomi")) {
					jButtonHistorialPagoNomiActionPerformed(null,rowIndex,true,false,estructura);
				}
				else if(this.sTipoRelacion.equals("Asistencia Diaria")) {
					jButtonAsistenciaDiariaActionPerformed(null,rowIndex,true,false,estructura);
				}
				else if(this.sTipoRelacion.equals("Funcion Estruc")) {
					jButtonFuncionEstrucActionPerformed(null,rowIndex,true,false,estructura);
				}
				else if(this.sTipoRelacion.equals("Solicitud Reemplazo")) {
					jButtonSolicitudReemplazoActionPerformed(null,rowIndex,true,false,estructura);
				}
				else if(this.sTipoRelacion.equals("Solicitud Hora Extra")) {
					jButtonSolicitudHoraExtraActionPerformed(null,rowIndex,true,false,estructura);
				}
				else if(this.sTipoRelacion.equals("Evaluacion Nomi")) {
					jButtonEvaluacionNomiActionPerformed(null,rowIndex,true,false,estructura);
				}
				else if(this.sTipoRelacion.equals("Solicitud Vacacion")) {
					jButtonSolicitudVacacionActionPerformed(null,rowIndex,true,false,estructura);
				}
				else if(this.sTipoRelacion.equals("Responsable Activo Fijo")) {
					jButtonResponsableActivoFijoActionPerformed(null,rowIndex,true,false,estructura);
				}
				else if(this.sTipoRelacion.equals("Rubro Emplea Cuenta Contable")) {
					jButtonRubroEmpleaCuentaContableActionPerformed(null,rowIndex,true,false,estructura);
				}
			} else {
				JOptionPane.showMessageDialog(this,"SELECCIONE SOLO UN REGISTRO","RELACIONES",JOptionPane.ERROR_MESSAGE);
			}
			
		} catch(Exception e) {
			FuncionesSwing.manageException(this, e,logger,EstructuraConstantesFunciones.CLASSNAME);
		
		}  finally {
			this.finishProcessEstructura();
			
      		//this.finishProcessEstructura(conSplash);
      	}
	}
			
	public static Boolean EsProcesoReporte(String sTipoProceso) throws Exception {
		Boolean esProcesoAccionRepoorte=false;

		if(sTipoProceso.contains("REPORTE_")) {
			 esProcesoAccionRepoorte=true;
		}

		return esProcesoAccionRepoorte;
	}
	
	public void procesarEstructuraReturnGeneral() throws Exception {
		if(this.estructuraReturnGeneral.getConRetornoEstaProcesado()) {
			JOptionPane.showMessageDialog(this,this.estructuraReturnGeneral.getsMensajeProceso(),"PROCESO",JOptionPane.INFORMATION_MESSAGE);
		}
		
		if(this.estructuraReturnGeneral.getConMostrarMensaje()) {
			JOptionPane.showMessageDialog(this,this.estructuraReturnGeneral.getsMensajeProceso(),"PROCESO",FuncionesSwing.getColorSelectedBackground(this.estructuraReturnGeneral.getsTipoMensaje()));
		}
		
		if(this.estructuraReturnGeneral.getConRecargarInformacion()) {
			this.procesarBusqueda(this.sAccionBusqueda);
			
			this.inicializarActualizarBindingEstructura(false);
		}
		
		if(this.estructuraReturnGeneral.getConRetornoLista() || this.estructuraReturnGeneral.getConRetornoObjeto()) {
			if(this.estructuraReturnGeneral.getConRetornoLista()) {
				//ARCHITECTURE
				if(Constantes.ISUSAEJBLOGICLAYER) {	
					this.estructuraLogic.setEstructuras(this.estructuraReturnGeneral.getEstructuras());
				} else if(Constantes.ISUSAEJBREMOTE) {
				} else if(Constantes.ISUSAEJBHOME) {
				}
				//ARCHITECTURE
			}
			
			if(this.estructuraReturnGeneral.getConRetornoObjeto()) {
				//ARCHITECTURE
				if(Constantes.ISUSAEJBLOGICLAYER) {	
					this.estructuraLogic.setEstructura(this.estructuraReturnGeneral.getEstructura());
				} else if(Constantes.ISUSAEJBREMOTE) {
				} else if(Constantes.ISUSAEJBHOME) {
				}
				//ARCHITECTURE
			}
			
			this.inicializarActualizarBindingEstructura(false);
		}
	}
	
	public void actualizarParametrosGeneralEstructura() throws Exception {
		
		
	}
	
	public ArrayList<Estructura> getEstructurasSeleccionados(Boolean conSeleccionarTodosAutomatico) throws Exception {
		ArrayList<Estructura> estructurasSeleccionados=new ArrayList<Estructura>();
		Boolean existe=false;
		
		if(!this.esParaAccionDesdeFormularioEstructura) {
			if(Constantes.ISUSAEJBLOGICLAYER) {	
				
				for(Estructura estructuraAux:estructuraLogic.getEstructuras()) {
					if(estructuraAux.getIsSelected()) {
						estructurasSeleccionados.add(estructuraAux);				
					}
				}
				
			} else if(Constantes.ISUSAEJBREMOTE||Constantes.ISUSAEJBHOME) {
				for(Estructura estructuraAux:this.estructuras) {
					if(estructuraAux.getIsSelected()) {
						estructurasSeleccionados.add(estructuraAux);				
					}
				}
			}
			
			if(estructurasSeleccionados.size()>0) {
				existe=true;
			}
			
			//SI NO ESTA NINGUNO SELECCIONADO SE SELECCIONA TODOS
			if(!existe) {
				if(conSeleccionarTodosAutomatico) {
					if(Constantes.ISUSAEJBLOGICLAYER) {				
						estructurasSeleccionados.addAll(this.estructuraLogic.getEstructuras());
					} else if(Constantes.ISUSAEJBREMOTE||Constantes.ISUSAEJBHOME) {
						estructurasSeleccionados.addAll(this.estructuras);				
					}
				}
			}
		} else {
			estructurasSeleccionados.add(this.estructura);
		}
		
		return estructurasSeleccionados;
	}
	
	public void actualizarVariablesTipoReporte(Boolean esReporteNormal,Boolean esReporteDinamico,Boolean esReporteAccionProceso,String sPath) {
		if(esReporteNormal) {
			this.sTipoReporteExtra="";
			this.esReporteDinamico=false;
			this.sPathReporteDinamico="";
			this.esReporteAccionProceso=false;
			
		} else if(esReporteAccionProceso) {
			this.sTipoReporteExtra="";
			this.esReporteDinamico=false;
			this.sPathReporteDinamico="";
			this.esReporteAccionProceso=true;
			
		} else if(esReporteDinamico) {
			this.sTipoReporteExtra="";
			this.esReporteDinamico=true;
			this.esReporteAccionProceso=false;
			this.sPathReporteDinamico=sPath.replace(".jrxml",".jasper");			
		}
	}
	
	public void generarReporteEstructurasSeleccionados() throws Exception {
		Boolean existe=false;
		
		if(this.sTipoReporte.equals("NORMAL") || this.sTipoReporte.equals("FORMULARIO")) {
			existe=true;								
			this.generarReporteNormalEstructurasSeleccionados();
			
		} else if(this.sTipoReporte.equals("DINAMICO")) {
			existe=true;
			this.mostrarReporteDinamicoEstructurasSeleccionados();
			
		} else if(this.sTipoReporte.equals("GRUPO_GENERICO")) {
			existe=true;
			this.generarReporteGroupGenericoEstructurasSeleccionados(false);
			
		} else if(this.sTipoReporte.equals("TOTALES_GRUPO_GENERICO")) {
			existe=true;
			this.generarReporteGroupGenericoEstructurasSeleccionados(true);
		}
		else if(this.sTipoReporte.equals("RELACIONES")) {
			//SI SE GENERA REPORTE RELACIONES
			existe=true;
			this.generarReporteRelacionesEstructurasSeleccionados();
		}					
		
		if(!existe) {
			JOptionPane.showMessageDialog(this,"SELECCIONE UN TIPO DE REPORTE VALIDO","REPORTE DE Estructura",JOptionPane.ERROR_MESSAGE);
		}
	}
	
	public void generarReporteRelacionesEstructurasSeleccionados() throws Exception {
		ArrayList<Estructura> estructurasSeleccionados=new ArrayList<Estructura>();		
		
		estructurasSeleccionados=this.getEstructurasSeleccionados(true);
		
		this.actualizarVariablesTipoReporte(true,false,false,"");
					
		//this.sTipoReporteExtra="MasterRelaciones";
		
		/*
		this.sTipoReporteExtra="";
		this.esReporteDinamico=false;
		this.sPathReporteDinamico="";
		*/
		
		
		this.generarReporteEstructuras("Todos",estructurasSeleccionados);
		
	}	
	
	public void generarReporteNormalEstructurasSeleccionados() throws Exception {
		ArrayList<Estructura> estructurasSeleccionados=new ArrayList<Estructura>();		
		
		estructurasSeleccionados=this.getEstructurasSeleccionados(true);
		
		this.actualizarVariablesTipoReporte(true,false,false,"");
								
		if(this.sTipoReporte.equals("FORMULARIO")) {
			this.sTipoReporteExtra="Vertical";					
		}
		
		/*
		this.sTipoReporteExtra="";
		this.esReporteDinamico=false;
		this.sPathReporteDinamico="";
		*/
		
		this.generarReporteEstructuras("Todos",estructurasSeleccionados);
	}		
	
	public void generarReporteProcesoAccionEstructurasSeleccionados(String sProcesoReporte) throws Exception {
		ArrayList<Estructura> estructurasSeleccionados=new ArrayList<Estructura>();
		
		estructurasSeleccionados=this.getEstructurasSeleccionados(true);
		
		this.actualizarVariablesTipoReporte(false,false,true,"");
		
		/*
		this.esReporteDinamico=false;
		this.sPathReporteDinamico="";
		*/
		
		this.sTipoReporteExtra=sProcesoReporte.toLowerCase();
		
		this.esReporteAccionProceso=true;
		this.generarReporteEstructuras("Todos",estructurasSeleccionados);
		this.esReporteAccionProceso=false;
	}
	
	
	public void mostrarReporteDinamicoEstructurasSeleccionados() throws Exception {
		ArrayList<Estructura> estructurasSeleccionados=new ArrayList<Estructura>();		
		
		
		this.abrirInicializarFrameReporteDinamicoEstructura();
		
		
		estructurasSeleccionados=this.getEstructurasSeleccionados(true);
		
		this.sTipoReporteExtra="";
		//this.actualizarVariablesTipoReporte(true,false,false,"");
		
		
		this.abrirFrameReporteDinamicoEstructura();
		
		
		//this.generarReporteEstructuras("Todos",estructurasSeleccionados ,estructuraImplementable,estructuraImplementableHome);
	}
	
	public void mostrarImportacionEstructuras() throws Exception {
		//this.sTipoReporteExtra="";
		//this.actualizarVariablesTipoReporte(true,false,false,"");
		
		
		this.abrirInicializarFrameImportacionEstructura();
		
		this.abrirFrameImportacionEstructura();		
		
			
		//this.generarReporteEstructuras("Todos",estructurasSeleccionados ,estructuraImplementable,estructuraImplementableHome);
	}
	
	public void importarEstructuras() throws Exception {		
	
	}
	
	public void exportarEstructurasSeleccionados() throws Exception {
		Boolean existe=false;
		
		if(this.sTipoArchivoReporte.equals("EXCEL")) {
			existe=true;
			this.exportarExcelEstructurasSeleccionados();
			
		} else if(this.sTipoArchivoReporte.equals("TEXTO")) {
			existe=true;
			this.exportarTextoEstructurasSeleccionados();
		
		} else if(this.sTipoArchivoReporte.equals("XML")) {
			existe=true;
			this.exportarXmlEstructurasSeleccionados();
		} 
		
		if(!existe) {
			JOptionPane.showMessageDialog(this,"SELECCIONE UN TIPO DE ARCHIVO VALIDO","EXPORTACION DE Estructura",JOptionPane.ERROR_MESSAGE);
		}
	}
	
	public void exportarTextoEstructurasSeleccionados() throws Exception {
		ArrayList<Estructura> estructurasSeleccionados=new ArrayList<Estructura>();		
		
		estructurasSeleccionados=this.getEstructurasSeleccionados(true);
		
		String sTipo=Funciones2.getTipoExportar(this.parametroGeneralUsuario);
		Boolean conCabecera=this.parametroGeneralUsuario.getcon_exportar_cabecera();
		String sDelimiter=Funciones2.getTipoDelimiter(this.parametroGeneralUsuario);
		String sPath=this.parametroGeneralUsuario.getpath_exportar()+"estructura."+"txt";//Funciones2.getTipoExtensionArchivoExportar(this.parametroGeneralUsuario);
		
		String sFilaCabecera="";
		String sFilaDatos="";
		
		BufferedWriter bufferedWriter = null;
		FileWriter fileWriter=null;
		
		fileWriter=new FileWriter(sPath);
		
		bufferedWriter = new BufferedWriter(fileWriter);
		
		try {
			if(conCabecera) {
				sFilaCabecera=this.getFilaCabeceraExportarEstructura(sDelimiter);
				
				bufferedWriter.write(sFilaCabecera);
			}				
			
			for(Estructura estructuraAux:estructurasSeleccionados) {
				sFilaDatos=this.getFilaDatosExportarEstructura(estructuraAux,sDelimiter);
				
				bufferedWriter.write(sFilaDatos);
				
				//estructuraAux.setsDetalleGeneralEntityReporte(estructuraAux.toString());			
			}
			
			bufferedWriter.close();
			
			Constantes2.S_PATH_ULTIMO_ARCHIVO=sPath;
			
			if(this.parametroGeneralUsuario.getcon_mensaje_confirmacion() && !this.estructuraSessionBean.getEsGuardarRelacionado()) {//Constantes.ISMOSTRARMENSAJESMANTENIMIENTO && 
				JOptionPane.showMessageDialog(this,"EXPORTADO CORRECTAMENTE:"+sPath,"MANTENIMIENTO DE Estructura",JOptionPane.INFORMATION_MESSAGE);
			}
		} catch (Exception e) {
			throw e;
			
		} finally {
       		if (bufferedWriter != null) {
				bufferedWriter.close();
			}
		}
	}
	
	public String getFilaCabeceraExportarEstructura(String sDelimiter) {
		String sFilaCabecera="";
		
		
		sFilaCabecera+=EstructuraConstantesFunciones.LABEL_ID;

		if(parametroGeneralUsuario.getcon_exportar_campo_version()){
			sFilaCabecera+=sDelimiter;
		sFilaCabecera+=EstructuraConstantesFunciones.LABEL_VERSIONROW;
		}

		sFilaCabecera+=sDelimiter;
		sFilaCabecera+=EstructuraConstantesFunciones.LABEL_IDEMPRESA;
		sFilaCabecera+=sDelimiter;
		sFilaCabecera+=EstructuraConstantesFunciones.LABEL_IDSUCURSAL;
		sFilaCabecera+=sDelimiter;
		sFilaCabecera+=EstructuraConstantesFunciones.LABEL_IDESTRUCTURA;
		sFilaCabecera+=sDelimiter;
		sFilaCabecera+=EstructuraConstantesFunciones.LABEL_IDTIPOPAGO_NM;
		sFilaCabecera+=sDelimiter;
		sFilaCabecera+=EstructuraConstantesFunciones.LABEL_IDNUMEROPATRONAL;
		sFilaCabecera+=sDelimiter;
		sFilaCabecera+=EstructuraConstantesFunciones.LABEL_IDCUENTACONTABLE;
		sFilaCabecera+=sDelimiter;
		sFilaCabecera+=EstructuraConstantesFunciones.LABEL_IDTIPOESTRUCTURA;
		sFilaCabecera+=sDelimiter;
		sFilaCabecera+=EstructuraConstantesFunciones.LABEL_IDPAIS;
		sFilaCabecera+=sDelimiter;
		sFilaCabecera+=EstructuraConstantesFunciones.LABEL_IDCIUDAD;
		sFilaCabecera+=sDelimiter;
		sFilaCabecera+=EstructuraConstantesFunciones.LABEL_CODIGO;
		sFilaCabecera+=sDelimiter;
		sFilaCabecera+=EstructuraConstantesFunciones.LABEL_NUMERO;
		sFilaCabecera+=sDelimiter;
		sFilaCabecera+=EstructuraConstantesFunciones.LABEL_VALORANTICIPO;
		sFilaCabecera+=sDelimiter;
		sFilaCabecera+=EstructuraConstantesFunciones.LABEL_PORCENTAJEANTICIPO;
		sFilaCabecera+=sDelimiter;
		sFilaCabecera+=EstructuraConstantesFunciones.LABEL_NOMBRE;
		sFilaCabecera+=sDelimiter;
		sFilaCabecera+=EstructuraConstantesFunciones.LABEL_ESJEFE;
		sFilaCabecera+=sDelimiter;
		sFilaCabecera+=EstructuraConstantesFunciones.LABEL_ESANUAL;
		sFilaCabecera+=sDelimiter;
		sFilaCabecera+=EstructuraConstantesFunciones.LABEL_PORCENTAJE;
		sFilaCabecera+=sDelimiter;
		sFilaCabecera+=EstructuraConstantesFunciones.LABEL_VALOR;
		
		return sFilaCabecera;
	}
	
	public String getFilaDatosExportarEstructura(Estructura estructura,String sDelimiter) {
		String sFilaDatos="";
		
		sFilaDatos+="\r\n";
		
		
		sFilaDatos+=estructura.getId().toString();

		if(parametroGeneralUsuario.getcon_exportar_campo_version()){
			sFilaDatos+=sDelimiter;
		sFilaDatos+=estructura.getVersionRow().toString();
		}

		sFilaDatos+=sDelimiter;
		sFilaDatos+=estructura.getempresa_descripcion();
		sFilaDatos+=sDelimiter;
		sFilaDatos+=estructura.getsucursal_descripcion();
		sFilaDatos+=sDelimiter;
		sFilaDatos+=estructura.getestructura_descripcion();
		sFilaDatos+=sDelimiter;
		sFilaDatos+=estructura.gettipopago_nm_descripcion();
		sFilaDatos+=sDelimiter;
		sFilaDatos+=estructura.getnumeropatronal_descripcion();
		sFilaDatos+=sDelimiter;
		sFilaDatos+=estructura.getcuentacontable_descripcion();
		sFilaDatos+=sDelimiter;
		sFilaDatos+=estructura.gettipoestructura_descripcion();
		sFilaDatos+=sDelimiter;
		sFilaDatos+=estructura.getpais_descripcion();
		sFilaDatos+=sDelimiter;
		sFilaDatos+=estructura.getciudad_descripcion();
		sFilaDatos+=sDelimiter;
		sFilaDatos+=estructura.getcodigo();
		sFilaDatos+=sDelimiter;
		sFilaDatos+=estructura.getnumero();
		sFilaDatos+=sDelimiter;
		sFilaDatos+=estructura.getvalor_anticipo().toString();
		sFilaDatos+=sDelimiter;
		sFilaDatos+=estructura.getporcentaje_anticipo().toString();
		sFilaDatos+=sDelimiter;
		sFilaDatos+=estructura.getnombre();
		sFilaDatos+=sDelimiter;
		sFilaDatos+=estructura.getes_jefe().toString();
		sFilaDatos+=sDelimiter;
		sFilaDatos+=estructura.getes_anual().toString();
		sFilaDatos+=sDelimiter;
		sFilaDatos+=estructura.getporcentaje().toString();
		sFilaDatos+=sDelimiter;
		sFilaDatos+=estructura.getvalor().toString();
		
		return sFilaDatos;
	}
	
	//@SuppressWarnings("deprecation")
	public void exportarExcelEstructurasSeleccionados() throws Exception {
		ArrayList<Estructura> estructurasSeleccionados=new ArrayList<Estructura>();		
		
		estructurasSeleccionados=this.getEstructurasSeleccionados(true);
		
		String sTipo=Funciones2.getTipoExportar(this.parametroGeneralUsuario);
		Boolean conCabecera=this.parametroGeneralUsuario.getcon_exportar_cabecera();
		String sDelimiter=Funciones2.getTipoDelimiter(this.parametroGeneralUsuario);
		String sPath=this.parametroGeneralUsuario.getpath_exportar()+"estructura.xls";
		
		String sFilaCabecera="";
		String sFilaDatos="";
		
		FileOutputStream fileOutputStream=null;
		
		try {
			HSSFWorkbook workbook = new HSSFWorkbook();
			HSSFSheet sheet = workbook.createSheet("Estructuras");
						
		    			
			Integer iRow=0;
			Integer iCell=0;
			
			HSSFRow row = sheet.createRow(iRow);
			HSSFCell cell = row.createCell(iCell);
			//cell.setCellValue("Blahblah");

			if(conCabecera) {
				this.getFilaCabeceraExportarExcelEstructura(row);				
				iRow++;
			}				
			
			for(Estructura estructuraAux:estructurasSeleccionados) {
				row = sheet.createRow(iRow);
				
				this.getFilaDatosExportarExcelEstructura(estructuraAux,row);
				
				iRow++;
			}
			
			
			fileOutputStream = new FileOutputStream(new File(sPath));
		    
			workbook.write(fileOutputStream);
			
			//fileOutputStream.close();
			
			Constantes2.S_PATH_ULTIMO_ARCHIVO=sPath;
			
			if(this.parametroGeneralUsuario.getcon_mensaje_confirmacion() && !this.estructuraSessionBean.getEsGuardarRelacionado()) {//Constantes.ISMOSTRARMENSAJESMANTENIMIENTO && 
				JOptionPane.showMessageDialog(this,"EXPORTADO CORRECTAMENTE:"+sPath,"MANTENIMIENTO DE Estructura",JOptionPane.INFORMATION_MESSAGE);
			}
		} catch (Exception e) {
			throw e;
			
		} finally {			
       		if (fileOutputStream != null) {
				fileOutputStream.close();
			}			
		}
	}		
	
	public void exportarXmlEstructurasSeleccionados() throws Exception {
		ArrayList<Estructura> estructurasSeleccionados=new ArrayList<Estructura>();		
		
		estructurasSeleccionados=this.getEstructurasSeleccionados(true);
		
		//String sTipo=Funciones2.getTipoExportar(this.parametroGeneralUsuario);
		//Boolean conCabecera=this.parametroGeneralUsuario.getcon_exportar_cabecera();
		//String sDelimiter=Funciones2.getTipoDelimiter(this.parametroGeneralUsuario);
		String sPath=this.parametroGeneralUsuario.getpath_exportar()+"estructura.xml";
		
		String sFilaCabecera="";
		String sFilaDatos="";
		
		DocumentBuilderFactory documentBuilderFactory=null;
		DocumentBuilder documentBuilder =null;
		
		try {
			documentBuilderFactory = DocumentBuilderFactory.newInstance();
			documentBuilder = documentBuilderFactory.newDocumentBuilder();
	
			Document document = documentBuilder.newDocument();
			Element elementRoot = document.createElement("estructuras");
			
			document.appendChild(elementRoot);
		    			
												
			Element element = null;//document.createElement("estructura");
			//elementRoot.appendChild(element);
		
			for(Estructura estructuraAux:estructurasSeleccionados) {
				element = document.createElement("estructura");
				elementRoot.appendChild(element);
			
				this.setFilaDatosExportarXmlEstructura(estructuraAux,document,element);
			}
			
			TransformerFactory transformerFactory = TransformerFactory.newInstance();
			Transformer transformer = transformerFactory.newTransformer();
			DOMSource domSource = new DOMSource(document);
			
			StreamResult streamResult = new StreamResult(new File(sPath));
	
			transformer.transform(domSource, streamResult);
						
			Constantes2.S_PATH_ULTIMO_ARCHIVO=sPath;
			
			if(this.parametroGeneralUsuario.getcon_mensaje_confirmacion() && !this.estructuraSessionBean.getEsGuardarRelacionado()) {//Constantes.ISMOSTRARMENSAJESMANTENIMIENTO && 
				JOptionPane.showMessageDialog(this,"EXPORTADO CORRECTAMENTE:"+sPath,"MANTENIMIENTO DE Estructura",JOptionPane.INFORMATION_MESSAGE);
			}
		} catch (Exception e) {
			throw e;
			
		} finally {			       				
		}
	}	
	
	//@SuppressWarnings("deprecation")
	public void getFilaCabeceraExportarExcelEstructura(HSSFRow row) {
		Integer iColumn=0;
		
		
		HSSFCell cell =null;
		cell = row.createCell(iColumn++);cell.setCellValue(EstructuraConstantesFunciones.LABEL_ID);

		if(parametroGeneralUsuario.getcon_exportar_campo_version()){
		cell = row.createCell(iColumn++);cell.setCellValue(EstructuraConstantesFunciones.LABEL_VERSIONROW);
		}

		cell = row.createCell(iColumn++);cell.setCellValue(EstructuraConstantesFunciones.LABEL_IDEMPRESA);
		cell = row.createCell(iColumn++);cell.setCellValue(EstructuraConstantesFunciones.LABEL_IDSUCURSAL);
		cell = row.createCell(iColumn++);cell.setCellValue(EstructuraConstantesFunciones.LABEL_IDESTRUCTURA);
		cell = row.createCell(iColumn++);cell.setCellValue(EstructuraConstantesFunciones.LABEL_IDTIPOPAGO_NM);
		cell = row.createCell(iColumn++);cell.setCellValue(EstructuraConstantesFunciones.LABEL_IDNUMEROPATRONAL);
		cell = row.createCell(iColumn++);cell.setCellValue(EstructuraConstantesFunciones.LABEL_IDCUENTACONTABLE);
		cell = row.createCell(iColumn++);cell.setCellValue(EstructuraConstantesFunciones.LABEL_IDTIPOESTRUCTURA);
		cell = row.createCell(iColumn++);cell.setCellValue(EstructuraConstantesFunciones.LABEL_IDPAIS);
		cell = row.createCell(iColumn++);cell.setCellValue(EstructuraConstantesFunciones.LABEL_IDCIUDAD);
		cell = row.createCell(iColumn++);cell.setCellValue(EstructuraConstantesFunciones.LABEL_CODIGO);
		cell = row.createCell(iColumn++);cell.setCellValue(EstructuraConstantesFunciones.LABEL_NUMERO);
		cell = row.createCell(iColumn++);cell.setCellValue(EstructuraConstantesFunciones.LABEL_VALORANTICIPO);
		cell = row.createCell(iColumn++);cell.setCellValue(EstructuraConstantesFunciones.LABEL_PORCENTAJEANTICIPO);
		cell = row.createCell(iColumn++);cell.setCellValue(EstructuraConstantesFunciones.LABEL_NOMBRE);
		cell = row.createCell(iColumn++);cell.setCellValue(EstructuraConstantesFunciones.LABEL_ESJEFE);
		cell = row.createCell(iColumn++);cell.setCellValue(EstructuraConstantesFunciones.LABEL_ESANUAL);
		cell = row.createCell(iColumn++);cell.setCellValue(EstructuraConstantesFunciones.LABEL_PORCENTAJE);
		cell = row.createCell(iColumn++);cell.setCellValue(EstructuraConstantesFunciones.LABEL_VALOR);
	}
	
	//@SuppressWarnings("deprecation")
	public void getFilaDatosExportarExcelEstructura(Estructura estructura,HSSFRow row) {
		Integer iColumn=0;
		
		
		HSSFCell cell =null;
		cell = row.createCell(iColumn++);cell.setCellValue(estructura.getId());
		cell = row.createCell(iColumn++);cell.setCellValue(estructura.getempresa_descripcion());
		cell = row.createCell(iColumn++);cell.setCellValue(estructura.getsucursal_descripcion());
		cell = row.createCell(iColumn++);cell.setCellValue(estructura.getestructura_descripcion());
		cell = row.createCell(iColumn++);cell.setCellValue(estructura.gettipopago_nm_descripcion());
		cell = row.createCell(iColumn++);cell.setCellValue(estructura.getnumeropatronal_descripcion());
		cell = row.createCell(iColumn++);cell.setCellValue(estructura.getcuentacontable_descripcion());
		cell = row.createCell(iColumn++);cell.setCellValue(estructura.gettipoestructura_descripcion());
		cell = row.createCell(iColumn++);cell.setCellValue(estructura.getpais_descripcion());
		cell = row.createCell(iColumn++);cell.setCellValue(estructura.getciudad_descripcion());
		cell = row.createCell(iColumn++);cell.setCellValue(estructura.getcodigo());
		cell = row.createCell(iColumn++);cell.setCellValue(estructura.getnumero());
		cell = row.createCell(iColumn++);cell.setCellValue(estructura.getvalor_anticipo());
		cell = row.createCell(iColumn++);cell.setCellValue(estructura.getporcentaje_anticipo());
		cell = row.createCell(iColumn++);cell.setCellValue(estructura.getnombre());
		cell = row.createCell(iColumn++);cell.setCellValue(estructura.getes_jefe());
		cell = row.createCell(iColumn++);cell.setCellValue(estructura.getes_anual());
		cell = row.createCell(iColumn++);cell.setCellValue(estructura.getporcentaje());
		cell = row.createCell(iColumn++);cell.setCellValue(estructura.getvalor());				
	}
	
	public void setFilaDatosExportarXmlEstructura(Estructura estructura,Document document,Element element) {
		/*
		Element lastname = document.createElement("lastname");
		lastname.appendChild(document.createTextNode("mook kim"));
		element.appendChild(lastname);
		*/
		

		Element elementId = document.createElement(EstructuraConstantesFunciones.ID);
		elementId.appendChild(document.createTextNode(estructura.getId().toString().trim()));
		element.appendChild(elementId);

		if(parametroGeneralUsuario.getcon_exportar_campo_version()){

		Element elementVersionRow = document.createElement(EstructuraConstantesFunciones.VERSIONROW);
		elementVersionRow.appendChild(document.createTextNode(estructura.getVersionRow().toString().trim()));
		element.appendChild(elementVersionRow);
		}


		Element elementempresa_descripcion = document.createElement(EstructuraConstantesFunciones.IDEMPRESA);
		elementempresa_descripcion.appendChild(document.createTextNode(estructura.getempresa_descripcion()));
		element.appendChild(elementempresa_descripcion);

		Element elementsucursal_descripcion = document.createElement(EstructuraConstantesFunciones.IDSUCURSAL);
		elementsucursal_descripcion.appendChild(document.createTextNode(estructura.getsucursal_descripcion()));
		element.appendChild(elementsucursal_descripcion);

		Element elementestructura_descripcion = document.createElement(EstructuraConstantesFunciones.IDESTRUCTURA);
		elementestructura_descripcion.appendChild(document.createTextNode(estructura.getestructura_descripcion()));
		element.appendChild(elementestructura_descripcion);

		Element elementtipopago_nm_descripcion = document.createElement(EstructuraConstantesFunciones.IDTIPOPAGO_NM);
		elementtipopago_nm_descripcion.appendChild(document.createTextNode(estructura.gettipopago_nm_descripcion()));
		element.appendChild(elementtipopago_nm_descripcion);

		Element elementnumeropatronal_descripcion = document.createElement(EstructuraConstantesFunciones.IDNUMEROPATRONAL);
		elementnumeropatronal_descripcion.appendChild(document.createTextNode(estructura.getnumeropatronal_descripcion()));
		element.appendChild(elementnumeropatronal_descripcion);

		Element elementcuentacontable_descripcion = document.createElement(EstructuraConstantesFunciones.IDCUENTACONTABLE);
		elementcuentacontable_descripcion.appendChild(document.createTextNode(estructura.getcuentacontable_descripcion()));
		element.appendChild(elementcuentacontable_descripcion);

		Element elementtipoestructura_descripcion = document.createElement(EstructuraConstantesFunciones.IDTIPOESTRUCTURA);
		elementtipoestructura_descripcion.appendChild(document.createTextNode(estructura.gettipoestructura_descripcion()));
		element.appendChild(elementtipoestructura_descripcion);

		Element elementpais_descripcion = document.createElement(EstructuraConstantesFunciones.IDPAIS);
		elementpais_descripcion.appendChild(document.createTextNode(estructura.getpais_descripcion()));
		element.appendChild(elementpais_descripcion);

		Element elementciudad_descripcion = document.createElement(EstructuraConstantesFunciones.IDCIUDAD);
		elementciudad_descripcion.appendChild(document.createTextNode(estructura.getciudad_descripcion()));
		element.appendChild(elementciudad_descripcion);

		Element elementcodigo = document.createElement(EstructuraConstantesFunciones.CODIGO);
		elementcodigo.appendChild(document.createTextNode(estructura.getcodigo().trim()));
		element.appendChild(elementcodigo);

		Element elementnumero = document.createElement(EstructuraConstantesFunciones.NUMERO);
		elementnumero.appendChild(document.createTextNode(estructura.getnumero().trim()));
		element.appendChild(elementnumero);

		Element elementvalor_anticipo = document.createElement(EstructuraConstantesFunciones.VALORANTICIPO);
		elementvalor_anticipo.appendChild(document.createTextNode(estructura.getvalor_anticipo().toString().trim()));
		element.appendChild(elementvalor_anticipo);

		Element elementporcentaje_anticipo = document.createElement(EstructuraConstantesFunciones.PORCENTAJEANTICIPO);
		elementporcentaje_anticipo.appendChild(document.createTextNode(estructura.getporcentaje_anticipo().toString().trim()));
		element.appendChild(elementporcentaje_anticipo);

		Element elementnombre = document.createElement(EstructuraConstantesFunciones.NOMBRE);
		elementnombre.appendChild(document.createTextNode(estructura.getnombre().trim()));
		element.appendChild(elementnombre);

		Element elementes_jefe = document.createElement(EstructuraConstantesFunciones.ESJEFE);
		elementes_jefe.appendChild(document.createTextNode(estructura.getes_jefe().toString().trim()));
		element.appendChild(elementes_jefe);

		Element elementes_anual = document.createElement(EstructuraConstantesFunciones.ESANUAL);
		elementes_anual.appendChild(document.createTextNode(estructura.getes_anual().toString().trim()));
		element.appendChild(elementes_anual);

		Element elementporcentaje = document.createElement(EstructuraConstantesFunciones.PORCENTAJE);
		elementporcentaje.appendChild(document.createTextNode(estructura.getporcentaje().toString().trim()));
		element.appendChild(elementporcentaje);

		Element elementvalor = document.createElement(EstructuraConstantesFunciones.VALOR);
		elementvalor.appendChild(document.createTextNode(estructura.getvalor().toString().trim()));
		element.appendChild(elementvalor);
	}
	
	public void generarReporteGroupGenericoEstructurasSeleccionados(Boolean soloTotales) throws Exception {
		ArrayList<Estructura> estructurasSeleccionados=new ArrayList<Estructura>();
		
		estructurasSeleccionados=this.getEstructurasSeleccionados(true);
		
		this.actualizarVariablesTipoReporte(true,false,false,"");
		
		/*
		this.esReporteDinamico=false;
		this.sPathReporteDinamico="";
		*/
		
		if(!soloTotales) {
			this.sTipoReporteExtra=Constantes2.S_REPORTE_EXTRA_GROUP_GENERICO;
		} else {
			this.sTipoReporteExtra=Constantes2.S_REPORTE_EXTRA_GROUP_TOTALES_GENERICO;
		}
		
		this.setColumnaDescripcionReporteGroupGenericoEstructura(estructurasSeleccionados);
		
		this.generarReporteEstructuras("Todos",estructurasSeleccionados);
	}
	
	public void setColumnaDescripcionReporteGroupGenericoEstructura(ArrayList<Estructura> estructurasSeleccionados) throws Exception {    		
		try {
			//FUNCIONA CON MODEL PERO SE DANA MANTENIMIENTO
			
			Boolean existe=false;
			
			for(Estructura estructuraAux:estructurasSeleccionados) {
				estructuraAux.setsDetalleGeneralEntityReporte(estructuraAux.toString());
			
				if(sTipoSeleccionar.equals(EstructuraConstantesFunciones.LABEL_IDEMPRESA)) {
					existe=true;
					estructuraAux.setsDescripcionGeneralEntityReporte1(estructuraAux.getempresa_descripcion());
				}
				 else if(sTipoSeleccionar.equals(EstructuraConstantesFunciones.LABEL_IDSUCURSAL)) {
					existe=true;
					estructuraAux.setsDescripcionGeneralEntityReporte1(estructuraAux.getsucursal_descripcion());
				}
				 else if(sTipoSeleccionar.equals(EstructuraConstantesFunciones.LABEL_IDESTRUCTURA)) {
					existe=true;
					estructuraAux.setsDescripcionGeneralEntityReporte1(estructuraAux.getestructura_descripcion());
				}
				 else if(sTipoSeleccionar.equals(EstructuraConstantesFunciones.LABEL_IDTIPOPAGO_NM)) {
					existe=true;
					estructuraAux.setsDescripcionGeneralEntityReporte1(estructuraAux.gettipopago_nm_descripcion());
				}
				 else if(sTipoSeleccionar.equals(EstructuraConstantesFunciones.LABEL_IDNUMEROPATRONAL)) {
					existe=true;
					estructuraAux.setsDescripcionGeneralEntityReporte1(estructuraAux.getnumeropatronal_descripcion());
				}
				 else if(sTipoSeleccionar.equals(EstructuraConstantesFunciones.LABEL_IDCUENTACONTABLE)) {
					existe=true;
					estructuraAux.setsDescripcionGeneralEntityReporte1(estructuraAux.getcuentacontable_descripcion());
				}
				 else if(sTipoSeleccionar.equals(EstructuraConstantesFunciones.LABEL_IDTIPOESTRUCTURA)) {
					existe=true;
					estructuraAux.setsDescripcionGeneralEntityReporte1(estructuraAux.gettipoestructura_descripcion());
				}
				 else if(sTipoSeleccionar.equals(EstructuraConstantesFunciones.LABEL_IDPAIS)) {
					existe=true;
					estructuraAux.setsDescripcionGeneralEntityReporte1(estructuraAux.getpais_descripcion());
				}
				 else if(sTipoSeleccionar.equals(EstructuraConstantesFunciones.LABEL_IDCIUDAD)) {
					existe=true;
					estructuraAux.setsDescripcionGeneralEntityReporte1(estructuraAux.getciudad_descripcion());
				}
				 else if(sTipoSeleccionar.equals(EstructuraConstantesFunciones.LABEL_CODIGO)) {
					existe=true;
					estructuraAux.setsDescripcionGeneralEntityReporte1(estructuraAux.getcodigo());
				}
				 else if(sTipoSeleccionar.equals(EstructuraConstantesFunciones.LABEL_NUMERO)) {
					existe=true;
					estructuraAux.setsDescripcionGeneralEntityReporte1(estructuraAux.getnumero());
				}
				 else if(sTipoSeleccionar.equals(EstructuraConstantesFunciones.LABEL_NOMBRE)) {
					existe=true;
					estructuraAux.setsDescripcionGeneralEntityReporte1(estructuraAux.getnombre());
				}
				 else if(sTipoSeleccionar.equals(EstructuraConstantesFunciones.LABEL_ESJEFE)) {
					existe=true;
					estructuraAux.setsDescripcionGeneralEntityReporte1(Funciones2.getDescripcionBoolean(estructuraAux.getes_jefe()));
				}
				 else if(sTipoSeleccionar.equals(EstructuraConstantesFunciones.LABEL_ESANUAL)) {
					existe=true;
					estructuraAux.setsDescripcionGeneralEntityReporte1(Funciones2.getDescripcionBoolean(estructuraAux.getes_anual()));
				}
			}	
											
			if(!existe) {
				JOptionPane.showMessageDialog(this,"NO SE HA SELECCIONADO ALGUNA COLUMNA VALIDA","SELECCIONAR",JOptionPane.ERROR_MESSAGE);
			}										
		} catch(Exception e) {
			FuncionesSwing.manageException(this, e,logger,EstructuraConstantesFunciones.CLASSNAME);
		}
	}
	
	
	public void actualizarEstadoCeldasBotonesEstructura(String sAccion,Boolean isGuardarCambiosEnLote,Boolean isEsMantenimientoRelacionado) throws Exception {
		if(sAccion=="n") {
			if(!this.esParaBusquedaForeignKey) {
				this.isVisibilidadCeldaNuevoEstructura=true;
				this.isVisibilidadCeldaNuevoRelacionesEstructura=true;
				this.isVisibilidadCeldaGuardarCambiosEstructura=true;
			}
			
			this.isVisibilidadCeldaModificarEstructura=false;
			this.isVisibilidadCeldaActualizarEstructura=false;
			this.isVisibilidadCeldaEliminarEstructura=false;
			this.isVisibilidadCeldaCancelarEstructura=false;
			
			if(isEsMantenimientoRelacionado==false) {
				if(isGuardarCambiosEnLote==true) {
					this.isVisibilidadCeldaGuardarEstructura=true;
				} else {
					this.isVisibilidadCeldaGuardarEstructura=false;
				}
			}
		} else if(sAccion=="a") {
			this.isVisibilidadCeldaNuevoEstructura=false;
			this.isVisibilidadCeldaNuevoRelacionesEstructura=false;
			this.isVisibilidadCeldaGuardarCambiosEstructura=false;
			this.isVisibilidadCeldaModificarEstructura=false;
			this.isVisibilidadCeldaActualizarEstructura=true;
			this.isVisibilidadCeldaEliminarEstructura=false;
			this.isVisibilidadCeldaCancelarEstructura=true;
			
			if(isEsMantenimientoRelacionado==false) {
				if(isGuardarCambiosEnLote==true) {
					this.isVisibilidadCeldaGuardarEstructura=true;
				} else {
					this.isVisibilidadCeldaGuardarEstructura=false;
				}
			}
		} else if(sAccion=="ae") {
			this.isVisibilidadCeldaNuevoEstructura=false;
			this.isVisibilidadCeldaNuevoRelacionesEstructura=false;
			this.isVisibilidadCeldaGuardarCambiosEstructura=false;
			this.isVisibilidadCeldaModificarEstructura=false;
			this.isVisibilidadCeldaActualizarEstructura=true;
			this.isVisibilidadCeldaEliminarEstructura=true;
			this.isVisibilidadCeldaCancelarEstructura=true;
			
			if(isEsMantenimientoRelacionado==false) {
				if(isGuardarCambiosEnLote==true) {
					this.isVisibilidadCeldaGuardarEstructura=true;
				} else {
					this.isVisibilidadCeldaGuardarEstructura=false;
				}
			}
		}
		//Para Mantenimientos de tablas relacionados con mas de columnas minimas
		else if(sAccion=="ae2") {
			this.isVisibilidadCeldaNuevoEstructura=false;
			this.isVisibilidadCeldaNuevoRelacionesEstructura=false;
			this.isVisibilidadCeldaGuardarCambiosEstructura=false;
			this.isVisibilidadCeldaModificarEstructura=false;
			this.isVisibilidadCeldaActualizarEstructura=true;
			this.isVisibilidadCeldaEliminarEstructura=false;
			this.isVisibilidadCeldaCancelarEstructura=true;
			
			if(isEsMantenimientoRelacionado==false) {
				if(isGuardarCambiosEnLote==true) {
					this.isVisibilidadCeldaGuardarEstructura=false;
				} else {
					this.isVisibilidadCeldaGuardarEstructura=false;
				}
			}
		} else if(sAccion=="c") {
			this.isVisibilidadCeldaNuevoEstructura=true;
			this.isVisibilidadCeldaNuevoRelacionesEstructura=true;
			this.isVisibilidadCeldaGuardarCambiosEstructura=true;
			this.isVisibilidadCeldaModificarEstructura=false;
			this.isVisibilidadCeldaActualizarEstructura=false;
			this.isVisibilidadCeldaEliminarEstructura=false;
			this.isVisibilidadCeldaCancelarEstructura=false;
			
			if(isEsMantenimientoRelacionado==false) {
				if(isGuardarCambiosEnLote==true) {
					this.isVisibilidadCeldaGuardarEstructura=true;
				} else {
					this.isVisibilidadCeldaGuardarEstructura=false;
				}
			}
		} else if(sAccion=="t") {
			this.isVisibilidadCeldaNuevoEstructura=false;
			this.isVisibilidadCeldaNuevoRelacionesEstructura=false;
			this.isVisibilidadCeldaGuardarCambiosEstructura=false;
			this.isVisibilidadCeldaActualizarEstructura=false;
			this.isVisibilidadCeldaEliminarEstructura=false;
			this.isVisibilidadCeldaCancelarEstructura=false;
			
			if(isEsMantenimientoRelacionado==false) {
				if(isGuardarCambiosEnLote==true) {
					this.isVisibilidadCeldaGuardarEstructura=false;
				} else {
					this.isVisibilidadCeldaGuardarEstructura=false;
				}
			}
		}  else if(sAccion=="s"||sAccion=="s2") {
			this.isVisibilidadCeldaNuevoEstructura=false;
			this.isVisibilidadCeldaNuevoRelacionesEstructura=false;
			this.isVisibilidadCeldaGuardarCambiosEstructura=false;
			this.isVisibilidadCeldaModificarEstructura=true;
			this.isVisibilidadCeldaActualizarEstructura=false;
			this.isVisibilidadCeldaEliminarEstructura=false;
			this.isVisibilidadCeldaCancelarEstructura=true;
			
			if(isEsMantenimientoRelacionado==false) {
				if(isGuardarCambiosEnLote==true) {
					this.isVisibilidadCeldaGuardarEstructura=false;
				} else {
					this.isVisibilidadCeldaGuardarEstructura=false;
				}
			}
		}
		
		//ACTUALIZA VISIBILIDAD PANELES
		if(EstructuraJInternalFrame.CON_DATOS_FRAME && !this.esParaBusquedaForeignKey) {
			//SIEMPRE VISIBLE
			this.isVisibilidadCeldaNuevoEstructura=true;
			this.isVisibilidadCeldaNuevoRelacionesEstructura=true;
			this.isVisibilidadCeldaGuardarCambiosEstructura=true;
		} else {
			this.actualizarEstadoPanelsEstructura(sAccion);						
		}
		
		if(this.esParaBusquedaForeignKey) {
			this.isVisibilidadCeldaCopiarEstructura=false;
			//this.isVisibilidadCeldaVerFormEstructura=false;
			this.isVisibilidadCeldaDuplicarEstructura=false;
		}
		
		//SI ES MANTENIMIENTO RELACIONES
		if(!estructuraSessionBean.getConGuardarRelaciones()) {
			this.isVisibilidadCeldaNuevoRelacionesEstructura=false;
		} else {
			this.isVisibilidadCeldaNuevoEstructura=false;
			this.isVisibilidadCeldaGuardarCambiosEstructura=false;
		}
		
		//SI ES MANTENIMIENTO RELACIONADO
		if(estructuraSessionBean.getEsGuardarRelacionado()) {
			if(!estructuraSessionBean.getConGuardarRelaciones()) {	
				this.isVisibilidadCeldaNuevoRelacionesEstructura=false;												
			}
			
			this.jButtonCerrarEstructura.setVisible(false);
		}
		
		//SI NO TIENE MAXIMO DE RELACIONES PERMITIDAS
		if(!this.conMaximoRelaciones) {
			this.isVisibilidadCeldaNuevoRelacionesEstructura=false;
		}
		
		if(!this.permiteMantenimiento(this.estructura)) {
			this.isVisibilidadCeldaActualizarEstructura=false;
			this.isVisibilidadCeldaEliminarEstructura=false;
		}
		
		
		
	}
	
	public void actualizarEstadoCeldasBotonesConGuardarRelacionesEstructura() {
		this.isVisibilidadCeldaNuevoEstructura=false;
		this.isVisibilidadCeldaGuardarCambiosEstructura=false;
	}
	
	public void actualizarEstadoPanelsEstructura(String sAccion) {
		if(sAccion=="n") {
			if(this.jScrollPanelDatosEdicionEstructura!=null) {
				this.jScrollPanelDatosEdicionEstructura.setVisible(false);			
			}
			
			//BYDAN_BUSQUEDAS
			
			if(this.jTabbedPaneBusquedasEstructura!=null) {
				this.jTabbedPaneBusquedasEstructura.setVisible(true);			
			}
			
			
			if(this.jScrollPanelDatosEstructura!=null) {
				this.jScrollPanelDatosEstructura.setVisible(true);
			}
			
			if(this.jPanelPaginacionEstructura!=null) {
				this.jPanelPaginacionEstructura.setVisible(true);
			}
			
			if(this.jPanelParametrosReportesEstructura!=null) {
				this.jPanelParametrosReportesEstructura.setVisible(true);		    
			}
			
		} else if(sAccion=="a") {				
			if(this.jScrollPanelDatosEdicionEstructura!=null) {
				this.jScrollPanelDatosEdicionEstructura.setVisible(true);			
			}
			
			//BYDAN_BUSQUEDAS
			
			if(this.jTabbedPaneBusquedasEstructura!=null) {
				this.jTabbedPaneBusquedasEstructura.setVisible(false);			
			}
			
			
			
			if(this.jScrollPanelDatosEstructura!=null) {
				this.jScrollPanelDatosEstructura.setVisible(false);
			}
			
			if(this.jPanelPaginacionEstructura!=null) {
				this.jPanelPaginacionEstructura.setVisible(false);
			}
			
			if(this.jPanelParametrosReportesEstructura!=null) {
				this.jPanelParametrosReportesEstructura.setVisible(false);
			}
						
		} else if(sAccion=="ae") {		
			if(this.jScrollPanelDatosEdicionEstructura!=null) {
				this.jScrollPanelDatosEdicionEstructura.setVisible(true);		
			}
			
			//BYDAN_BUSQUEDAS
			
			if(this.jTabbedPaneBusquedasEstructura!=null) {
				this.jTabbedPaneBusquedasEstructura.setVisible(false);			
			}
			
			
			if(this.jScrollPanelDatosEstructura!=null) {
				this.jScrollPanelDatosEstructura.setVisible(false);
			}
			
			if(this.jPanelPaginacionEstructura!=null) {
				this.jPanelPaginacionEstructura.setVisible(false);
			}
			
			if(this.jPanelParametrosReportesEstructura!=null) {
				this.jPanelParametrosReportesEstructura.setVisible(false);
			}
						
		}
		//Para Mantenimientos de tablas relacionados con mas de columnas minimas
		else if(sAccion=="ae2") {	
			if(this.jScrollPanelDatosEdicionEstructura!=null) {
				this.jScrollPanelDatosEdicionEstructura.setVisible(true);			
			}
			
			//BYDAN_BUSQUEDAS
			
			if(this.jTabbedPaneBusquedasEstructura!=null) {
				this.jTabbedPaneBusquedasEstructura.setVisible(false);			
			}
			
			
			if(this.jScrollPanelDatosEstructura!=null) {
				this.jScrollPanelDatosEstructura.setVisible(false);
			}
			
			if(this.jPanelPaginacionEstructura!=null) {
				this.jPanelPaginacionEstructura.setVisible(false);
			}
			
			if(this.jPanelParametrosReportesEstructura!=null) {
				this.jPanelParametrosReportesEstructura.setVisible(false);
			}
						
		} else if(sAccion=="c") {	
			if(this.jScrollPanelDatosEdicionEstructura!=null) {
				this.jScrollPanelDatosEdicionEstructura.setVisible(false);			
			}
			
			//BYDAN_BUSQUEDAS
			
			if(this.jTabbedPaneBusquedasEstructura!=null) {
				this.jTabbedPaneBusquedasEstructura.setVisible(true);			
			}
			
			
			if(this.jScrollPanelDatosEstructura!=null) {
				this.jScrollPanelDatosEstructura.setVisible(true);
			}
			
			if(this.jPanelPaginacionEstructura!=null) {
				this.jPanelPaginacionEstructura.setVisible(true);
			}
			
			if(this.jPanelParametrosReportesEstructura!=null) {
				this.jPanelParametrosReportesEstructura.setVisible(true);
			}
						
		} else if(sAccion=="t") {
			
			if(this.jScrollPanelDatosEdicionEstructura!=null) {
				this.jScrollPanelDatosEdicionEstructura.setVisible(false);
			}
			
			//BYDAN_BUSQUEDAS
			
			if(this.jTabbedPaneBusquedasEstructura!=null) {
				this.jTabbedPaneBusquedasEstructura.setVisible(true);			
			}
			
			
			if(this.jScrollPanelDatosEstructura!=null) {
				this.jScrollPanelDatosEstructura.setVisible(true);
			}
			
			if(this.jPanelPaginacionEstructura!=null) {
				this.jPanelPaginacionEstructura.setVisible(true);
			}
			
			if(this.jPanelParametrosReportesEstructura!=null) {
				this.jPanelParametrosReportesEstructura.setVisible(true);
			}
						
		}  else if(sAccion=="s"||sAccion=="s2") {
			if(this.jScrollPanelDatosEdicionEstructura!=null) {
				this.jScrollPanelDatosEdicionEstructura.setVisible(false);
			}
			
			//BYDAN_BUSQUEDAS
			
			if(this.jTabbedPaneBusquedasEstructura!=null) {
				this.jTabbedPaneBusquedasEstructura.setVisible(true);			
			}
			
			
			if(this.jScrollPanelDatosEstructura!=null) {
				this.jScrollPanelDatosEstructura.setVisible(true);
			}
			
			if(this.jPanelPaginacionEstructura!=null) {
				this.jPanelPaginacionEstructura.setVisible(true);
			}
			
			if(this.jPanelParametrosReportesEstructura!=null) {
				this.jPanelParametrosReportesEstructura.setVisible(true);
			}
			
		} 
		
		if(sAccion.equals("relacionado") || this.estructuraSessionBean.getEsGuardarRelacionado()) {
			if(!this.conCargarMinimo) {
				//BYDAN_BUSQUEDAS
				
				if(this.jTabbedPaneBusquedasEstructura!=null) {
					this.jTabbedPaneBusquedasEstructura.setVisible(false);				
				}
				
			}
			
			if(this.jPanelParametrosReportesEstructura!=null) {
				this.jPanelParametrosReportesEstructura.setVisible(false);
			}
		
		} else if(sAccion.equals("no_relacionado") && !this.estructuraSessionBean.getEsGuardarRelacionado()) {
			//BYDAN_BUSQUEDAS
			
			if(this.jTabbedPaneBusquedasEstructura!=null) {
				this.jTabbedPaneBusquedasEstructura.setVisible(true);			
			}
			
			if(this.jPanelParametrosReportesEstructura!=null) {
				this.jPanelParametrosReportesEstructura.setVisible(true);
			}
		}
	}	
	
	

	public void setVisibilidadBusquedasParaEmpresa(Boolean isParaEmpresa){
		//BYDAN_BUSQUEDAS
		
		if(!this.conCargarMinimo) {

			Boolean isParaEmpresaNegation=!isParaEmpresa;

			this.isVisibilidadFK_IdCiudad=isParaEmpresaNegation;
			if(!this.isVisibilidadFK_IdCiudad) {this.jTabbedPaneBusquedasEstructura.remove(jPanelFK_IdCiudadEstructura);}

			this.isVisibilidadFK_IdCuentaContable=isParaEmpresaNegation;
			if(!this.isVisibilidadFK_IdCuentaContable) {this.jTabbedPaneBusquedasEstructura.remove(jPanelFK_IdCuentaContableEstructura);}

			this.isVisibilidadFK_IdEstructura=isParaEmpresaNegation;
			if(!this.isVisibilidadFK_IdEstructura) {this.jTabbedPaneBusquedasEstructura.remove(jPanelFK_IdEstructuraEstructura);}

			this.isVisibilidadFK_IdNumeroPatronal=isParaEmpresaNegation;
			if(!this.isVisibilidadFK_IdNumeroPatronal) {this.jTabbedPaneBusquedasEstructura.remove(jPanelFK_IdNumeroPatronalEstructura);}

			this.isVisibilidadFK_IdPais=isParaEmpresaNegation;
			if(!this.isVisibilidadFK_IdPais) {this.jTabbedPaneBusquedasEstructura.remove(jPanelFK_IdPaisEstructura);}

			this.isVisibilidadFK_IdTipoEstructura=isParaEmpresaNegation;
			if(!this.isVisibilidadFK_IdTipoEstructura) {this.jTabbedPaneBusquedasEstructura.remove(jPanelFK_IdTipoEstructuraEstructura);}

			this.isVisibilidadFK_IdTipoPago_NM=isParaEmpresaNegation;
			if(!this.isVisibilidadFK_IdTipoPago_NM) {this.jTabbedPaneBusquedasEstructura.remove(jPanelFK_IdTipoPago_NMEstructura);}
		}
		
	}

	public void setVisibilidadBusquedasParaSucursal(Boolean isParaSucursal){
		//BYDAN_BUSQUEDAS
		
		if(!this.conCargarMinimo) {

			Boolean isParaSucursalNegation=!isParaSucursal;

			this.isVisibilidadFK_IdCiudad=isParaSucursalNegation;
			if(!this.isVisibilidadFK_IdCiudad) {this.jTabbedPaneBusquedasEstructura.remove(jPanelFK_IdCiudadEstructura);}

			this.isVisibilidadFK_IdCuentaContable=isParaSucursalNegation;
			if(!this.isVisibilidadFK_IdCuentaContable) {this.jTabbedPaneBusquedasEstructura.remove(jPanelFK_IdCuentaContableEstructura);}

			this.isVisibilidadFK_IdEstructura=isParaSucursalNegation;
			if(!this.isVisibilidadFK_IdEstructura) {this.jTabbedPaneBusquedasEstructura.remove(jPanelFK_IdEstructuraEstructura);}

			this.isVisibilidadFK_IdNumeroPatronal=isParaSucursalNegation;
			if(!this.isVisibilidadFK_IdNumeroPatronal) {this.jTabbedPaneBusquedasEstructura.remove(jPanelFK_IdNumeroPatronalEstructura);}

			this.isVisibilidadFK_IdPais=isParaSucursalNegation;
			if(!this.isVisibilidadFK_IdPais) {this.jTabbedPaneBusquedasEstructura.remove(jPanelFK_IdPaisEstructura);}

			this.isVisibilidadFK_IdTipoEstructura=isParaSucursalNegation;
			if(!this.isVisibilidadFK_IdTipoEstructura) {this.jTabbedPaneBusquedasEstructura.remove(jPanelFK_IdTipoEstructuraEstructura);}

			this.isVisibilidadFK_IdTipoPago_NM=isParaSucursalNegation;
			if(!this.isVisibilidadFK_IdTipoPago_NM) {this.jTabbedPaneBusquedasEstructura.remove(jPanelFK_IdTipoPago_NMEstructura);}
		}
		
	}

	public void setVisibilidadBusquedasParaEstructura(Boolean isParaEstructura){
		//BYDAN_BUSQUEDAS
		
		if(!this.conCargarMinimo) {

			Boolean isParaEstructuraNegation=!isParaEstructura;

			this.isVisibilidadFK_IdCiudad=isParaEstructuraNegation;
			if(!this.isVisibilidadFK_IdCiudad) {this.jTabbedPaneBusquedasEstructura.remove(jPanelFK_IdCiudadEstructura);}

			this.isVisibilidadFK_IdCuentaContable=isParaEstructuraNegation;
			if(!this.isVisibilidadFK_IdCuentaContable) {this.jTabbedPaneBusquedasEstructura.remove(jPanelFK_IdCuentaContableEstructura);}

			this.isVisibilidadFK_IdEstructura=isParaEstructura;
			if(!this.isVisibilidadFK_IdEstructura) {this.jTabbedPaneBusquedasEstructura.remove(jPanelFK_IdEstructuraEstructura);}

			this.isVisibilidadFK_IdNumeroPatronal=isParaEstructuraNegation;
			if(!this.isVisibilidadFK_IdNumeroPatronal) {this.jTabbedPaneBusquedasEstructura.remove(jPanelFK_IdNumeroPatronalEstructura);}

			this.isVisibilidadFK_IdPais=isParaEstructuraNegation;
			if(!this.isVisibilidadFK_IdPais) {this.jTabbedPaneBusquedasEstructura.remove(jPanelFK_IdPaisEstructura);}

			this.isVisibilidadFK_IdTipoEstructura=isParaEstructuraNegation;
			if(!this.isVisibilidadFK_IdTipoEstructura) {this.jTabbedPaneBusquedasEstructura.remove(jPanelFK_IdTipoEstructuraEstructura);}

			this.isVisibilidadFK_IdTipoPago_NM=isParaEstructuraNegation;
			if(!this.isVisibilidadFK_IdTipoPago_NM) {this.jTabbedPaneBusquedasEstructura.remove(jPanelFK_IdTipoPago_NMEstructura);}
		}
		
	}

	public void setVisibilidadBusquedasParaTipoPago_NM(Boolean isParaTipoPago_NM){
		//BYDAN_BUSQUEDAS
		
		if(!this.conCargarMinimo) {

			Boolean isParaTipoPago_NMNegation=!isParaTipoPago_NM;

			this.isVisibilidadFK_IdCiudad=isParaTipoPago_NMNegation;
			if(!this.isVisibilidadFK_IdCiudad) {this.jTabbedPaneBusquedasEstructura.remove(jPanelFK_IdCiudadEstructura);}

			this.isVisibilidadFK_IdCuentaContable=isParaTipoPago_NMNegation;
			if(!this.isVisibilidadFK_IdCuentaContable) {this.jTabbedPaneBusquedasEstructura.remove(jPanelFK_IdCuentaContableEstructura);}

			this.isVisibilidadFK_IdEstructura=isParaTipoPago_NMNegation;
			if(!this.isVisibilidadFK_IdEstructura) {this.jTabbedPaneBusquedasEstructura.remove(jPanelFK_IdEstructuraEstructura);}

			this.isVisibilidadFK_IdNumeroPatronal=isParaTipoPago_NMNegation;
			if(!this.isVisibilidadFK_IdNumeroPatronal) {this.jTabbedPaneBusquedasEstructura.remove(jPanelFK_IdNumeroPatronalEstructura);}

			this.isVisibilidadFK_IdPais=isParaTipoPago_NMNegation;
			if(!this.isVisibilidadFK_IdPais) {this.jTabbedPaneBusquedasEstructura.remove(jPanelFK_IdPaisEstructura);}

			this.isVisibilidadFK_IdTipoEstructura=isParaTipoPago_NMNegation;
			if(!this.isVisibilidadFK_IdTipoEstructura) {this.jTabbedPaneBusquedasEstructura.remove(jPanelFK_IdTipoEstructuraEstructura);}

			this.isVisibilidadFK_IdTipoPago_NM=isParaTipoPago_NM;
			if(!this.isVisibilidadFK_IdTipoPago_NM) {this.jTabbedPaneBusquedasEstructura.remove(jPanelFK_IdTipoPago_NMEstructura);}
		}
		
	}

	public void setVisibilidadBusquedasParaNumeroPatronal(Boolean isParaNumeroPatronal){
		//BYDAN_BUSQUEDAS
		
		if(!this.conCargarMinimo) {

			Boolean isParaNumeroPatronalNegation=!isParaNumeroPatronal;

			this.isVisibilidadFK_IdCiudad=isParaNumeroPatronalNegation;
			if(!this.isVisibilidadFK_IdCiudad) {this.jTabbedPaneBusquedasEstructura.remove(jPanelFK_IdCiudadEstructura);}

			this.isVisibilidadFK_IdCuentaContable=isParaNumeroPatronalNegation;
			if(!this.isVisibilidadFK_IdCuentaContable) {this.jTabbedPaneBusquedasEstructura.remove(jPanelFK_IdCuentaContableEstructura);}

			this.isVisibilidadFK_IdEstructura=isParaNumeroPatronalNegation;
			if(!this.isVisibilidadFK_IdEstructura) {this.jTabbedPaneBusquedasEstructura.remove(jPanelFK_IdEstructuraEstructura);}

			this.isVisibilidadFK_IdNumeroPatronal=isParaNumeroPatronal;
			if(!this.isVisibilidadFK_IdNumeroPatronal) {this.jTabbedPaneBusquedasEstructura.remove(jPanelFK_IdNumeroPatronalEstructura);}

			this.isVisibilidadFK_IdPais=isParaNumeroPatronalNegation;
			if(!this.isVisibilidadFK_IdPais) {this.jTabbedPaneBusquedasEstructura.remove(jPanelFK_IdPaisEstructura);}

			this.isVisibilidadFK_IdTipoEstructura=isParaNumeroPatronalNegation;
			if(!this.isVisibilidadFK_IdTipoEstructura) {this.jTabbedPaneBusquedasEstructura.remove(jPanelFK_IdTipoEstructuraEstructura);}

			this.isVisibilidadFK_IdTipoPago_NM=isParaNumeroPatronalNegation;
			if(!this.isVisibilidadFK_IdTipoPago_NM) {this.jTabbedPaneBusquedasEstructura.remove(jPanelFK_IdTipoPago_NMEstructura);}
		}
		
	}

	public void setVisibilidadBusquedasParaCuentaContable(Boolean isParaCuentaContable){
		//BYDAN_BUSQUEDAS
		
		if(!this.conCargarMinimo) {

			Boolean isParaCuentaContableNegation=!isParaCuentaContable;

			this.isVisibilidadFK_IdCiudad=isParaCuentaContableNegation;
			if(!this.isVisibilidadFK_IdCiudad) {this.jTabbedPaneBusquedasEstructura.remove(jPanelFK_IdCiudadEstructura);}

			this.isVisibilidadFK_IdCuentaContable=isParaCuentaContable;
			if(!this.isVisibilidadFK_IdCuentaContable) {this.jTabbedPaneBusquedasEstructura.remove(jPanelFK_IdCuentaContableEstructura);}

			this.isVisibilidadFK_IdEstructura=isParaCuentaContableNegation;
			if(!this.isVisibilidadFK_IdEstructura) {this.jTabbedPaneBusquedasEstructura.remove(jPanelFK_IdEstructuraEstructura);}

			this.isVisibilidadFK_IdNumeroPatronal=isParaCuentaContableNegation;
			if(!this.isVisibilidadFK_IdNumeroPatronal) {this.jTabbedPaneBusquedasEstructura.remove(jPanelFK_IdNumeroPatronalEstructura);}

			this.isVisibilidadFK_IdPais=isParaCuentaContableNegation;
			if(!this.isVisibilidadFK_IdPais) {this.jTabbedPaneBusquedasEstructura.remove(jPanelFK_IdPaisEstructura);}

			this.isVisibilidadFK_IdTipoEstructura=isParaCuentaContableNegation;
			if(!this.isVisibilidadFK_IdTipoEstructura) {this.jTabbedPaneBusquedasEstructura.remove(jPanelFK_IdTipoEstructuraEstructura);}

			this.isVisibilidadFK_IdTipoPago_NM=isParaCuentaContableNegation;
			if(!this.isVisibilidadFK_IdTipoPago_NM) {this.jTabbedPaneBusquedasEstructura.remove(jPanelFK_IdTipoPago_NMEstructura);}
		}
		
	}

	public void setVisibilidadBusquedasParaTipoEstructura(Boolean isParaTipoEstructura){
		//BYDAN_BUSQUEDAS
		
		if(!this.conCargarMinimo) {

			Boolean isParaTipoEstructuraNegation=!isParaTipoEstructura;

			this.isVisibilidadFK_IdCiudad=isParaTipoEstructuraNegation;
			if(!this.isVisibilidadFK_IdCiudad) {this.jTabbedPaneBusquedasEstructura.remove(jPanelFK_IdCiudadEstructura);}

			this.isVisibilidadFK_IdCuentaContable=isParaTipoEstructuraNegation;
			if(!this.isVisibilidadFK_IdCuentaContable) {this.jTabbedPaneBusquedasEstructura.remove(jPanelFK_IdCuentaContableEstructura);}

			this.isVisibilidadFK_IdEstructura=isParaTipoEstructuraNegation;
			if(!this.isVisibilidadFK_IdEstructura) {this.jTabbedPaneBusquedasEstructura.remove(jPanelFK_IdEstructuraEstructura);}

			this.isVisibilidadFK_IdNumeroPatronal=isParaTipoEstructuraNegation;
			if(!this.isVisibilidadFK_IdNumeroPatronal) {this.jTabbedPaneBusquedasEstructura.remove(jPanelFK_IdNumeroPatronalEstructura);}

			this.isVisibilidadFK_IdPais=isParaTipoEstructuraNegation;
			if(!this.isVisibilidadFK_IdPais) {this.jTabbedPaneBusquedasEstructura.remove(jPanelFK_IdPaisEstructura);}

			this.isVisibilidadFK_IdTipoEstructura=isParaTipoEstructura;
			if(!this.isVisibilidadFK_IdTipoEstructura) {this.jTabbedPaneBusquedasEstructura.remove(jPanelFK_IdTipoEstructuraEstructura);}

			this.isVisibilidadFK_IdTipoPago_NM=isParaTipoEstructuraNegation;
			if(!this.isVisibilidadFK_IdTipoPago_NM) {this.jTabbedPaneBusquedasEstructura.remove(jPanelFK_IdTipoPago_NMEstructura);}
		}
		
	}

	public void setVisibilidadBusquedasParaPais(Boolean isParaPais){
		//BYDAN_BUSQUEDAS
		
		if(!this.conCargarMinimo) {

			Boolean isParaPaisNegation=!isParaPais;

			this.isVisibilidadFK_IdCiudad=isParaPaisNegation;
			if(!this.isVisibilidadFK_IdCiudad) {this.jTabbedPaneBusquedasEstructura.remove(jPanelFK_IdCiudadEstructura);}

			this.isVisibilidadFK_IdCuentaContable=isParaPaisNegation;
			if(!this.isVisibilidadFK_IdCuentaContable) {this.jTabbedPaneBusquedasEstructura.remove(jPanelFK_IdCuentaContableEstructura);}

			this.isVisibilidadFK_IdEstructura=isParaPaisNegation;
			if(!this.isVisibilidadFK_IdEstructura) {this.jTabbedPaneBusquedasEstructura.remove(jPanelFK_IdEstructuraEstructura);}

			this.isVisibilidadFK_IdNumeroPatronal=isParaPaisNegation;
			if(!this.isVisibilidadFK_IdNumeroPatronal) {this.jTabbedPaneBusquedasEstructura.remove(jPanelFK_IdNumeroPatronalEstructura);}

			this.isVisibilidadFK_IdPais=isParaPais;
			if(!this.isVisibilidadFK_IdPais) {this.jTabbedPaneBusquedasEstructura.remove(jPanelFK_IdPaisEstructura);}

			this.isVisibilidadFK_IdTipoEstructura=isParaPaisNegation;
			if(!this.isVisibilidadFK_IdTipoEstructura) {this.jTabbedPaneBusquedasEstructura.remove(jPanelFK_IdTipoEstructuraEstructura);}

			this.isVisibilidadFK_IdTipoPago_NM=isParaPaisNegation;
			if(!this.isVisibilidadFK_IdTipoPago_NM) {this.jTabbedPaneBusquedasEstructura.remove(jPanelFK_IdTipoPago_NMEstructura);}
		}
		
	}

	public void setVisibilidadBusquedasParaCiudad(Boolean isParaCiudad){
		//BYDAN_BUSQUEDAS
		
		if(!this.conCargarMinimo) {

			Boolean isParaCiudadNegation=!isParaCiudad;

			this.isVisibilidadFK_IdCiudad=isParaCiudad;
			if(!this.isVisibilidadFK_IdCiudad) {this.jTabbedPaneBusquedasEstructura.remove(jPanelFK_IdCiudadEstructura);}

			this.isVisibilidadFK_IdCuentaContable=isParaCiudadNegation;
			if(!this.isVisibilidadFK_IdCuentaContable) {this.jTabbedPaneBusquedasEstructura.remove(jPanelFK_IdCuentaContableEstructura);}

			this.isVisibilidadFK_IdEstructura=isParaCiudadNegation;
			if(!this.isVisibilidadFK_IdEstructura) {this.jTabbedPaneBusquedasEstructura.remove(jPanelFK_IdEstructuraEstructura);}

			this.isVisibilidadFK_IdNumeroPatronal=isParaCiudadNegation;
			if(!this.isVisibilidadFK_IdNumeroPatronal) {this.jTabbedPaneBusquedasEstructura.remove(jPanelFK_IdNumeroPatronalEstructura);}

			this.isVisibilidadFK_IdPais=isParaCiudadNegation;
			if(!this.isVisibilidadFK_IdPais) {this.jTabbedPaneBusquedasEstructura.remove(jPanelFK_IdPaisEstructura);}

			this.isVisibilidadFK_IdTipoEstructura=isParaCiudadNegation;
			if(!this.isVisibilidadFK_IdTipoEstructura) {this.jTabbedPaneBusquedasEstructura.remove(jPanelFK_IdTipoEstructuraEstructura);}

			this.isVisibilidadFK_IdTipoPago_NM=isParaCiudadNegation;
			if(!this.isVisibilidadFK_IdTipoPago_NM) {this.jTabbedPaneBusquedasEstructura.remove(jPanelFK_IdTipoPago_NMEstructura);}
		}
		
	}
	
	

	public String registrarSesionEstructuraParaCentroCostoEstructuras() throws Exception {
		Boolean isPaginaPopupCentroCostoEstructura=false;

		try {

			if(this.estructuraSessionBean==null) {
				this.estructuraSessionBean=new EstructuraSessionBean();
			}

			if(this.jInternalFrameDetalleFormEstructura.centrocostoestructuraSessionBean==null) {
				this.jInternalFrameDetalleFormEstructura.centrocostoestructuraSessionBean=new CentroCostoEstructuraSessionBean();
			}

			this.jInternalFrameDetalleFormEstructura.centrocostoestructuraSessionBean.setsPathNavegacionActual(estructuraSessionBean.getsPathNavegacionActual()+Constantes.SHTMLFLECHA+CentroCostoEstructuraConstantesFunciones.SCLASSWEBTITULO);
			this.jInternalFrameDetalleFormEstructura.centrocostoestructuraSessionBean.setisPermiteRecargarInformacion(false);
			isPaginaPopupCentroCostoEstructura=this.jInternalFrameDetalleFormEstructura.centrocostoestructuraSessionBean.getisPaginaPopup();
			this.jInternalFrameDetalleFormEstructura.centrocostoestructuraSessionBean.setisPermiteNavegacionHaciaForeignKeyDesdeCentroCostoEstructura(true);
			this.jInternalFrameDetalleFormEstructura.centrocostoestructuraSessionBean.setsNombrePaginaNavegacionHaciaForeignKeyDesdeCentroCostoEstructura(EstructuraConstantesFunciones.SNOMBREOPCION);
			this.jInternalFrameDetalleFormEstructura.centrocostoestructuraSessionBean.setisBusquedaDesdeForeignKeySesionEstructura(true);
			this.jInternalFrameDetalleFormEstructura.centrocostoestructuraSessionBean.setlidEstructuraActual(this.idEstructuraActual);

			estructuraSessionBean.setisBusquedaDesdeForeignKeySesionForeignKeyEstructura(true);
			estructuraSessionBean.setlIdEstructuraActualForeignKey(this.idEstructuraActual);

			String strPagina=Constantes.SNONE;
			SistemaLogicAdditional sistemaLogicAdditional=new SistemaLogicAdditional();

			guardarDatosBusquedaSession();

		} catch(Exception e) {
			FuncionesSwing.manageException(this, e,logger);
		}

		return "";
	}

	public String registrarSesionEstructuraCargoParaPlaniVacaciones() throws Exception {
		Boolean isPaginaPopupPlaniVacacion=false;

		try {

			if(this.estructuraSessionBean==null) {
				this.estructuraSessionBean=new EstructuraSessionBean();
			}

			if(this.jInternalFrameDetalleFormEstructura.planivacacionSessionBean==null) {
				this.jInternalFrameDetalleFormEstructura.planivacacionSessionBean=new PlaniVacacionSessionBean();
			}

			this.jInternalFrameDetalleFormEstructura.planivacacionSessionBean.setsPathNavegacionActual(estructuraSessionBean.getsPathNavegacionActual()+Constantes.SHTMLFLECHA+PlaniVacacionConstantesFunciones.SCLASSWEBTITULO);
			this.jInternalFrameDetalleFormEstructura.planivacacionSessionBean.setisPermiteRecargarInformacion(false);
			isPaginaPopupPlaniVacacion=this.jInternalFrameDetalleFormEstructura.planivacacionSessionBean.getisPaginaPopup();
			this.jInternalFrameDetalleFormEstructura.planivacacionSessionBean.setisPermiteNavegacionHaciaForeignKeyDesdePlaniVacacion(true);
			this.jInternalFrameDetalleFormEstructura.planivacacionSessionBean.setsNombrePaginaNavegacionHaciaForeignKeyDesdePlaniVacacion(EstructuraConstantesFunciones.SNOMBREOPCION);
			this.jInternalFrameDetalleFormEstructura.planivacacionSessionBean.setisBusquedaDesdeForeignKeySesionEstructuraCargo(true);
			this.jInternalFrameDetalleFormEstructura.planivacacionSessionBean.setlidEstructuraCargoActual(this.idEstructuraActual);

			estructuraSessionBean.setisBusquedaDesdeForeignKeySesionForeignKeyEstructura(true);
			estructuraSessionBean.setlIdEstructuraActualForeignKey(this.idEstructuraActual);

			String strPagina=Constantes.SNONE;
			SistemaLogicAdditional sistemaLogicAdditional=new SistemaLogicAdditional();

			guardarDatosBusquedaSession();

		} catch(Exception e) {
			FuncionesSwing.manageException(this, e,logger);
		}

		return "";
	}

	public String registrarSesionEstructuraParaAsistenciaMensuales() throws Exception {
		Boolean isPaginaPopupAsistenciaMensual=false;

		try {

			if(this.estructuraSessionBean==null) {
				this.estructuraSessionBean=new EstructuraSessionBean();
			}

			if(this.jInternalFrameDetalleFormEstructura.asistenciamensualSessionBean==null) {
				this.jInternalFrameDetalleFormEstructura.asistenciamensualSessionBean=new AsistenciaMensualSessionBean();
			}

			this.jInternalFrameDetalleFormEstructura.asistenciamensualSessionBean.setsPathNavegacionActual(estructuraSessionBean.getsPathNavegacionActual()+Constantes.SHTMLFLECHA+AsistenciaMensualConstantesFunciones.SCLASSWEBTITULO);
			this.jInternalFrameDetalleFormEstructura.asistenciamensualSessionBean.setisPermiteRecargarInformacion(false);
			isPaginaPopupAsistenciaMensual=this.jInternalFrameDetalleFormEstructura.asistenciamensualSessionBean.getisPaginaPopup();
			this.jInternalFrameDetalleFormEstructura.asistenciamensualSessionBean.setisPermiteNavegacionHaciaForeignKeyDesdeAsistenciaMensual(true);
			this.jInternalFrameDetalleFormEstructura.asistenciamensualSessionBean.setsNombrePaginaNavegacionHaciaForeignKeyDesdeAsistenciaMensual(EstructuraConstantesFunciones.SNOMBREOPCION);
			this.jInternalFrameDetalleFormEstructura.asistenciamensualSessionBean.setisBusquedaDesdeForeignKeySesionEstructura(true);
			this.jInternalFrameDetalleFormEstructura.asistenciamensualSessionBean.setlidEstructuraActual(this.idEstructuraActual);

			estructuraSessionBean.setisBusquedaDesdeForeignKeySesionForeignKeyEstructura(true);
			estructuraSessionBean.setlIdEstructuraActualForeignKey(this.idEstructuraActual);

			String strPagina=Constantes.SNONE;
			SistemaLogicAdditional sistemaLogicAdditional=new SistemaLogicAdditional();

			guardarDatosBusquedaSession();

		} catch(Exception e) {
			FuncionesSwing.manageException(this, e,logger);
		}

		return "";
	}

	public String registrarSesionEstructuraParaEmpleadoProcesoRubros() throws Exception {
		Boolean isPaginaPopupEmpleadoProcesoRubro=false;

		try {

			if(this.estructuraSessionBean==null) {
				this.estructuraSessionBean=new EstructuraSessionBean();
			}

			if(this.jInternalFrameDetalleFormEstructura.empleadoprocesorubroSessionBean==null) {
				this.jInternalFrameDetalleFormEstructura.empleadoprocesorubroSessionBean=new EmpleadoProcesoRubroSessionBean();
			}

			this.jInternalFrameDetalleFormEstructura.empleadoprocesorubroSessionBean.setsPathNavegacionActual(estructuraSessionBean.getsPathNavegacionActual()+Constantes.SHTMLFLECHA+EmpleadoProcesoRubroConstantesFunciones.SCLASSWEBTITULO);
			this.jInternalFrameDetalleFormEstructura.empleadoprocesorubroSessionBean.setisPermiteRecargarInformacion(false);
			isPaginaPopupEmpleadoProcesoRubro=this.jInternalFrameDetalleFormEstructura.empleadoprocesorubroSessionBean.getisPaginaPopup();
			this.jInternalFrameDetalleFormEstructura.empleadoprocesorubroSessionBean.setisPermiteNavegacionHaciaForeignKeyDesdeEmpleadoProcesoRubro(true);
			this.jInternalFrameDetalleFormEstructura.empleadoprocesorubroSessionBean.setsNombrePaginaNavegacionHaciaForeignKeyDesdeEmpleadoProcesoRubro(EstructuraConstantesFunciones.SNOMBREOPCION);
			this.jInternalFrameDetalleFormEstructura.empleadoprocesorubroSessionBean.setisBusquedaDesdeForeignKeySesionEstructura(true);
			this.jInternalFrameDetalleFormEstructura.empleadoprocesorubroSessionBean.setlidEstructuraActual(this.idEstructuraActual);

			estructuraSessionBean.setisBusquedaDesdeForeignKeySesionForeignKeyEstructura(true);
			estructuraSessionBean.setlIdEstructuraActualForeignKey(this.idEstructuraActual);

			String strPagina=Constantes.SNONE;
			SistemaLogicAdditional sistemaLogicAdditional=new SistemaLogicAdditional();

			guardarDatosBusquedaSession();

		} catch(Exception e) {
			FuncionesSwing.manageException(this, e,logger);
		}

		return "";
	}

	public String registrarSesionEstructuraParaEmpleadoPagoRubros() throws Exception {
		Boolean isPaginaPopupEmpleadoPagoRubro=false;

		try {

			if(this.estructuraSessionBean==null) {
				this.estructuraSessionBean=new EstructuraSessionBean();
			}

			if(this.jInternalFrameDetalleFormEstructura.empleadopagorubroSessionBean==null) {
				this.jInternalFrameDetalleFormEstructura.empleadopagorubroSessionBean=new EmpleadoPagoRubroSessionBean();
			}

			this.jInternalFrameDetalleFormEstructura.empleadopagorubroSessionBean.setsPathNavegacionActual(estructuraSessionBean.getsPathNavegacionActual()+Constantes.SHTMLFLECHA+EmpleadoPagoRubroConstantesFunciones.SCLASSWEBTITULO);
			this.jInternalFrameDetalleFormEstructura.empleadopagorubroSessionBean.setisPermiteRecargarInformacion(false);
			isPaginaPopupEmpleadoPagoRubro=this.jInternalFrameDetalleFormEstructura.empleadopagorubroSessionBean.getisPaginaPopup();
			this.jInternalFrameDetalleFormEstructura.empleadopagorubroSessionBean.setisPermiteNavegacionHaciaForeignKeyDesdeEmpleadoPagoRubro(true);
			this.jInternalFrameDetalleFormEstructura.empleadopagorubroSessionBean.setsNombrePaginaNavegacionHaciaForeignKeyDesdeEmpleadoPagoRubro(EstructuraConstantesFunciones.SNOMBREOPCION);
			this.jInternalFrameDetalleFormEstructura.empleadopagorubroSessionBean.setisBusquedaDesdeForeignKeySesionEstructura(true);
			this.jInternalFrameDetalleFormEstructura.empleadopagorubroSessionBean.setlidEstructuraActual(this.idEstructuraActual);

			estructuraSessionBean.setisBusquedaDesdeForeignKeySesionForeignKeyEstructura(true);
			estructuraSessionBean.setlIdEstructuraActualForeignKey(this.idEstructuraActual);

			String strPagina=Constantes.SNONE;
			SistemaLogicAdditional sistemaLogicAdditional=new SistemaLogicAdditional();

			guardarDatosBusquedaSession();

		} catch(Exception e) {
			FuncionesSwing.manageException(this, e,logger);
		}

		return "";
	}

	public String registrarSesionEstructuraParaProvisionEmpleados() throws Exception {
		Boolean isPaginaPopupProvisionEmpleado=false;

		try {

			if(this.estructuraSessionBean==null) {
				this.estructuraSessionBean=new EstructuraSessionBean();
			}

			if(this.jInternalFrameDetalleFormEstructura.provisionempleadoSessionBean==null) {
				this.jInternalFrameDetalleFormEstructura.provisionempleadoSessionBean=new ProvisionEmpleadoSessionBean();
			}

			this.jInternalFrameDetalleFormEstructura.provisionempleadoSessionBean.setsPathNavegacionActual(estructuraSessionBean.getsPathNavegacionActual()+Constantes.SHTMLFLECHA+ProvisionEmpleadoConstantesFunciones.SCLASSWEBTITULO);
			this.jInternalFrameDetalleFormEstructura.provisionempleadoSessionBean.setisPermiteRecargarInformacion(false);
			isPaginaPopupProvisionEmpleado=this.jInternalFrameDetalleFormEstructura.provisionempleadoSessionBean.getisPaginaPopup();
			this.jInternalFrameDetalleFormEstructura.provisionempleadoSessionBean.setisPermiteNavegacionHaciaForeignKeyDesdeProvisionEmpleado(true);
			this.jInternalFrameDetalleFormEstructura.provisionempleadoSessionBean.setsNombrePaginaNavegacionHaciaForeignKeyDesdeProvisionEmpleado(EstructuraConstantesFunciones.SNOMBREOPCION);
			this.jInternalFrameDetalleFormEstructura.provisionempleadoSessionBean.setisBusquedaDesdeForeignKeySesionEstructura(true);
			this.jInternalFrameDetalleFormEstructura.provisionempleadoSessionBean.setlidEstructuraActual(this.idEstructuraActual);

			estructuraSessionBean.setisBusquedaDesdeForeignKeySesionForeignKeyEstructura(true);
			estructuraSessionBean.setlIdEstructuraActualForeignKey(this.idEstructuraActual);

			String strPagina=Constantes.SNONE;
			SistemaLogicAdditional sistemaLogicAdditional=new SistemaLogicAdditional();

			guardarDatosBusquedaSession();

		} catch(Exception e) {
			FuncionesSwing.manageException(this, e,logger);
		}

		return "";
	}

	public String registrarSesionEstructuraParaEmpleados() throws Exception {
		Boolean isPaginaPopupEmpleado=false;

		try {

			if(this.estructuraSessionBean==null) {
				this.estructuraSessionBean=new EstructuraSessionBean();
			}

			if(this.jInternalFrameDetalleFormEstructura.empleadoSessionBean==null) {
				this.jInternalFrameDetalleFormEstructura.empleadoSessionBean=new EmpleadoSessionBean();
			}

			this.jInternalFrameDetalleFormEstructura.empleadoSessionBean.setsPathNavegacionActual(estructuraSessionBean.getsPathNavegacionActual()+Constantes.SHTMLFLECHA+EmpleadoConstantesFunciones.SCLASSWEBTITULO);
			this.jInternalFrameDetalleFormEstructura.empleadoSessionBean.setisPermiteRecargarInformacion(false);
			isPaginaPopupEmpleado=this.jInternalFrameDetalleFormEstructura.empleadoSessionBean.getisPaginaPopup();
			this.jInternalFrameDetalleFormEstructura.empleadoSessionBean.setisPermiteNavegacionHaciaForeignKeyDesdeEmpleado(true);
			this.jInternalFrameDetalleFormEstructura.empleadoSessionBean.setsNombrePaginaNavegacionHaciaForeignKeyDesdeEmpleado(EstructuraConstantesFunciones.SNOMBREOPCION);
			this.jInternalFrameDetalleFormEstructura.empleadoSessionBean.setisBusquedaDesdeForeignKeySesionEstructura(true);
			this.jInternalFrameDetalleFormEstructura.empleadoSessionBean.setlidEstructuraActual(this.idEstructuraActual);

			estructuraSessionBean.setisBusquedaDesdeForeignKeySesionForeignKeyEstructura(true);
			estructuraSessionBean.setlIdEstructuraActualForeignKey(this.idEstructuraActual);

			String strPagina=Constantes.SNONE;
			SistemaLogicAdditional sistemaLogicAdditional=new SistemaLogicAdditional();

			guardarDatosBusquedaSession();

		} catch(Exception e) {
			FuncionesSwing.manageException(this, e,logger);
		}

		return "";
	}

	public String registrarSesionEstructuraParaEstructuras() throws Exception {
		Boolean isPaginaPopupEstructura=false;

		try {

			if(this.estructuraSessionBean==null) {
				this.estructuraSessionBean=new EstructuraSessionBean();
			}

			if(this.jInternalFrameDetalleFormEstructura.estructuraSessionBean==null) {
				this.jInternalFrameDetalleFormEstructura.estructuraSessionBean=new EstructuraSessionBean();
			}

			this.jInternalFrameDetalleFormEstructura.estructuraSessionBean.setsPathNavegacionActual(estructuraSessionBean.getsPathNavegacionActual()+Constantes.SHTMLFLECHA+EstructuraConstantesFunciones.SCLASSWEBTITULO);
			this.jInternalFrameDetalleFormEstructura.estructuraSessionBean.setisPermiteRecargarInformacion(false);
			isPaginaPopupEstructura=this.jInternalFrameDetalleFormEstructura.estructuraSessionBean.getisPaginaPopup();
			this.jInternalFrameDetalleFormEstructura.estructuraSessionBean.setisPermiteNavegacionHaciaForeignKeyDesdeEstructura(true);
			this.jInternalFrameDetalleFormEstructura.estructuraSessionBean.setsNombrePaginaNavegacionHaciaForeignKeyDesdeEstructura(EstructuraConstantesFunciones.SNOMBREOPCION);
			this.jInternalFrameDetalleFormEstructura.estructuraSessionBean.setisBusquedaDesdeForeignKeySesionEstructura(true);
			this.jInternalFrameDetalleFormEstructura.estructuraSessionBean.setlidEstructuraActual(this.idEstructuraActual);

			estructuraSessionBean.setisBusquedaDesdeForeignKeySesionForeignKeyEstructura(true);
			estructuraSessionBean.setlIdEstructuraActualForeignKey(this.idEstructuraActual);

			String strPagina=Constantes.SNONE;
			SistemaLogicAdditional sistemaLogicAdditional=new SistemaLogicAdditional();

			guardarDatosBusquedaSession();

		} catch(Exception e) {
			FuncionesSwing.manageException(this, e,logger);
		}

		return "";
	}

	public String registrarSesionEstructuraParaEvaluacionEmpleados() throws Exception {
		Boolean isPaginaPopupEvaluacionEmpleado=false;

		try {

			if(this.estructuraSessionBean==null) {
				this.estructuraSessionBean=new EstructuraSessionBean();
			}

			if(this.jInternalFrameDetalleFormEstructura.evaluacionempleadoSessionBean==null) {
				this.jInternalFrameDetalleFormEstructura.evaluacionempleadoSessionBean=new EvaluacionEmpleadoSessionBean();
			}

			this.jInternalFrameDetalleFormEstructura.evaluacionempleadoSessionBean.setsPathNavegacionActual(estructuraSessionBean.getsPathNavegacionActual()+Constantes.SHTMLFLECHA+EvaluacionEmpleadoConstantesFunciones.SCLASSWEBTITULO);
			this.jInternalFrameDetalleFormEstructura.evaluacionempleadoSessionBean.setisPermiteRecargarInformacion(false);
			isPaginaPopupEvaluacionEmpleado=this.jInternalFrameDetalleFormEstructura.evaluacionempleadoSessionBean.getisPaginaPopup();
			this.jInternalFrameDetalleFormEstructura.evaluacionempleadoSessionBean.setisPermiteNavegacionHaciaForeignKeyDesdeEvaluacionEmpleado(true);
			this.jInternalFrameDetalleFormEstructura.evaluacionempleadoSessionBean.setsNombrePaginaNavegacionHaciaForeignKeyDesdeEvaluacionEmpleado(EstructuraConstantesFunciones.SNOMBREOPCION);
			this.jInternalFrameDetalleFormEstructura.evaluacionempleadoSessionBean.setisBusquedaDesdeForeignKeySesionEstructura(true);
			this.jInternalFrameDetalleFormEstructura.evaluacionempleadoSessionBean.setlidEstructuraActual(this.idEstructuraActual);

			estructuraSessionBean.setisBusquedaDesdeForeignKeySesionForeignKeyEstructura(true);
			estructuraSessionBean.setlIdEstructuraActualForeignKey(this.idEstructuraActual);

			String strPagina=Constantes.SNONE;
			SistemaLogicAdditional sistemaLogicAdditional=new SistemaLogicAdditional();

			guardarDatosBusquedaSession();

		} catch(Exception e) {
			FuncionesSwing.manageException(this, e,logger);
		}

		return "";
	}

	public String registrarSesionEstructuraParaEmpleadoImpuestoRentas() throws Exception {
		Boolean isPaginaPopupEmpleadoImpuestoRenta=false;

		try {

			if(this.estructuraSessionBean==null) {
				this.estructuraSessionBean=new EstructuraSessionBean();
			}

			if(this.jInternalFrameDetalleFormEstructura.empleadoimpuestorentaSessionBean==null) {
				this.jInternalFrameDetalleFormEstructura.empleadoimpuestorentaSessionBean=new EmpleadoImpuestoRentaSessionBean();
			}

			this.jInternalFrameDetalleFormEstructura.empleadoimpuestorentaSessionBean.setsPathNavegacionActual(estructuraSessionBean.getsPathNavegacionActual()+Constantes.SHTMLFLECHA+EmpleadoImpuestoRentaConstantesFunciones.SCLASSWEBTITULO);
			this.jInternalFrameDetalleFormEstructura.empleadoimpuestorentaSessionBean.setisPermiteRecargarInformacion(false);
			isPaginaPopupEmpleadoImpuestoRenta=this.jInternalFrameDetalleFormEstructura.empleadoimpuestorentaSessionBean.getisPaginaPopup();
			this.jInternalFrameDetalleFormEstructura.empleadoimpuestorentaSessionBean.setisPermiteNavegacionHaciaForeignKeyDesdeEmpleadoImpuestoRenta(true);
			this.jInternalFrameDetalleFormEstructura.empleadoimpuestorentaSessionBean.setsNombrePaginaNavegacionHaciaForeignKeyDesdeEmpleadoImpuestoRenta(EstructuraConstantesFunciones.SNOMBREOPCION);
			this.jInternalFrameDetalleFormEstructura.empleadoimpuestorentaSessionBean.setisBusquedaDesdeForeignKeySesionEstructura(true);
			this.jInternalFrameDetalleFormEstructura.empleadoimpuestorentaSessionBean.setlidEstructuraActual(this.idEstructuraActual);

			estructuraSessionBean.setisBusquedaDesdeForeignKeySesionForeignKeyEstructura(true);
			estructuraSessionBean.setlIdEstructuraActualForeignKey(this.idEstructuraActual);

			String strPagina=Constantes.SNONE;
			SistemaLogicAdditional sistemaLogicAdditional=new SistemaLogicAdditional();

			guardarDatosBusquedaSession();

		} catch(Exception e) {
			FuncionesSwing.manageException(this, e,logger);
		}

		return "";
	}

	public String registrarSesionEstructuraParaRubroEstructuras() throws Exception {
		Boolean isPaginaPopupRubroEstructura=false;

		try {

			if(this.estructuraSessionBean==null) {
				this.estructuraSessionBean=new EstructuraSessionBean();
			}

			if(this.jInternalFrameDetalleFormEstructura.rubroestructuraSessionBean==null) {
				this.jInternalFrameDetalleFormEstructura.rubroestructuraSessionBean=new RubroEstructuraSessionBean();
			}

			this.jInternalFrameDetalleFormEstructura.rubroestructuraSessionBean.setsPathNavegacionActual(estructuraSessionBean.getsPathNavegacionActual()+Constantes.SHTMLFLECHA+RubroEstructuraConstantesFunciones.SCLASSWEBTITULO);
			this.jInternalFrameDetalleFormEstructura.rubroestructuraSessionBean.setisPermiteRecargarInformacion(false);
			isPaginaPopupRubroEstructura=this.jInternalFrameDetalleFormEstructura.rubroestructuraSessionBean.getisPaginaPopup();
			this.jInternalFrameDetalleFormEstructura.rubroestructuraSessionBean.setisPermiteNavegacionHaciaForeignKeyDesdeRubroEstructura(true);
			this.jInternalFrameDetalleFormEstructura.rubroestructuraSessionBean.setsNombrePaginaNavegacionHaciaForeignKeyDesdeRubroEstructura(EstructuraConstantesFunciones.SNOMBREOPCION);
			this.jInternalFrameDetalleFormEstructura.rubroestructuraSessionBean.setisBusquedaDesdeForeignKeySesionEstructura(true);
			this.jInternalFrameDetalleFormEstructura.rubroestructuraSessionBean.setlidEstructuraActual(this.idEstructuraActual);

			estructuraSessionBean.setisBusquedaDesdeForeignKeySesionForeignKeyEstructura(true);
			estructuraSessionBean.setlIdEstructuraActualForeignKey(this.idEstructuraActual);

			String strPagina=Constantes.SNONE;
			SistemaLogicAdditional sistemaLogicAdditional=new SistemaLogicAdditional();

			guardarDatosBusquedaSession();

		} catch(Exception e) {
			FuncionesSwing.manageException(this, e,logger);
		}

		return "";
	}

	public String registrarSesionEstructuraParaCierreRolMensuales() throws Exception {
		Boolean isPaginaPopupCierreRolMensual=false;

		try {

			if(this.estructuraSessionBean==null) {
				this.estructuraSessionBean=new EstructuraSessionBean();
			}

			if(this.jInternalFrameDetalleFormEstructura.cierrerolmensualSessionBean==null) {
				this.jInternalFrameDetalleFormEstructura.cierrerolmensualSessionBean=new CierreRolMensualSessionBean();
			}

			this.jInternalFrameDetalleFormEstructura.cierrerolmensualSessionBean.setsPathNavegacionActual(estructuraSessionBean.getsPathNavegacionActual()+Constantes.SHTMLFLECHA+CierreRolMensualConstantesFunciones.SCLASSWEBTITULO);
			this.jInternalFrameDetalleFormEstructura.cierrerolmensualSessionBean.setisPermiteRecargarInformacion(false);
			isPaginaPopupCierreRolMensual=this.jInternalFrameDetalleFormEstructura.cierrerolmensualSessionBean.getisPaginaPopup();
			this.jInternalFrameDetalleFormEstructura.cierrerolmensualSessionBean.setisPermiteNavegacionHaciaForeignKeyDesdeCierreRolMensual(true);
			this.jInternalFrameDetalleFormEstructura.cierrerolmensualSessionBean.setsNombrePaginaNavegacionHaciaForeignKeyDesdeCierreRolMensual(EstructuraConstantesFunciones.SNOMBREOPCION);
			this.jInternalFrameDetalleFormEstructura.cierrerolmensualSessionBean.setisBusquedaDesdeForeignKeySesionEstructura(true);
			this.jInternalFrameDetalleFormEstructura.cierrerolmensualSessionBean.setlidEstructuraActual(this.idEstructuraActual);

			estructuraSessionBean.setisBusquedaDesdeForeignKeySesionForeignKeyEstructura(true);
			estructuraSessionBean.setlIdEstructuraActualForeignKey(this.idEstructuraActual);

			String strPagina=Constantes.SNONE;
			SistemaLogicAdditional sistemaLogicAdditional=new SistemaLogicAdditional();

			guardarDatosBusquedaSession();

		} catch(Exception e) {
			FuncionesSwing.manageException(this, e,logger);
		}

		return "";
	}

	public String registrarSesionEstructuraParaFormatoNomis() throws Exception {
		Boolean isPaginaPopupFormatoNomi=false;

		try {

			if(this.estructuraSessionBean==null) {
				this.estructuraSessionBean=new EstructuraSessionBean();
			}

			if(this.jInternalFrameDetalleFormEstructura.formatonomiSessionBean==null) {
				this.jInternalFrameDetalleFormEstructura.formatonomiSessionBean=new FormatoNomiSessionBean();
			}

			this.jInternalFrameDetalleFormEstructura.formatonomiSessionBean.setsPathNavegacionActual(estructuraSessionBean.getsPathNavegacionActual()+Constantes.SHTMLFLECHA+FormatoNomiConstantesFunciones.SCLASSWEBTITULO);
			this.jInternalFrameDetalleFormEstructura.formatonomiSessionBean.setisPermiteRecargarInformacion(false);
			isPaginaPopupFormatoNomi=this.jInternalFrameDetalleFormEstructura.formatonomiSessionBean.getisPaginaPopup();
			this.jInternalFrameDetalleFormEstructura.formatonomiSessionBean.setisPermiteNavegacionHaciaForeignKeyDesdeFormatoNomi(true);
			this.jInternalFrameDetalleFormEstructura.formatonomiSessionBean.setsNombrePaginaNavegacionHaciaForeignKeyDesdeFormatoNomi(EstructuraConstantesFunciones.SNOMBREOPCION);
			this.jInternalFrameDetalleFormEstructura.formatonomiSessionBean.setisBusquedaDesdeForeignKeySesionEstructura(true);
			this.jInternalFrameDetalleFormEstructura.formatonomiSessionBean.setlidEstructuraActual(this.idEstructuraActual);

			estructuraSessionBean.setisBusquedaDesdeForeignKeySesionForeignKeyEstructura(true);
			estructuraSessionBean.setlIdEstructuraActualForeignKey(this.idEstructuraActual);

			String strPagina=Constantes.SNONE;
			SistemaLogicAdditional sistemaLogicAdditional=new SistemaLogicAdditional();

			guardarDatosBusquedaSession();

		} catch(Exception e) {
			FuncionesSwing.manageException(this, e,logger);
		}

		return "";
	}

	public String registrarSesionEstructuraParaEmpleadoEstructuras() throws Exception {
		Boolean isPaginaPopupEmpleadoEstructura=false;

		try {

			if(this.estructuraSessionBean==null) {
				this.estructuraSessionBean=new EstructuraSessionBean();
			}

			if(this.jInternalFrameDetalleFormEstructura.empleadoestructuraSessionBean==null) {
				this.jInternalFrameDetalleFormEstructura.empleadoestructuraSessionBean=new EmpleadoEstructuraSessionBean();
			}

			this.jInternalFrameDetalleFormEstructura.empleadoestructuraSessionBean.setsPathNavegacionActual(estructuraSessionBean.getsPathNavegacionActual()+Constantes.SHTMLFLECHA+EmpleadoEstructuraConstantesFunciones.SCLASSWEBTITULO);
			this.jInternalFrameDetalleFormEstructura.empleadoestructuraSessionBean.setisPermiteRecargarInformacion(false);
			isPaginaPopupEmpleadoEstructura=this.jInternalFrameDetalleFormEstructura.empleadoestructuraSessionBean.getisPaginaPopup();
			this.jInternalFrameDetalleFormEstructura.empleadoestructuraSessionBean.setisPermiteNavegacionHaciaForeignKeyDesdeEmpleadoEstructura(true);
			this.jInternalFrameDetalleFormEstructura.empleadoestructuraSessionBean.setsNombrePaginaNavegacionHaciaForeignKeyDesdeEmpleadoEstructura(EstructuraConstantesFunciones.SNOMBREOPCION);
			this.jInternalFrameDetalleFormEstructura.empleadoestructuraSessionBean.setisBusquedaDesdeForeignKeySesionEstructura(true);
			this.jInternalFrameDetalleFormEstructura.empleadoestructuraSessionBean.setlidEstructuraActual(this.idEstructuraActual);

			estructuraSessionBean.setisBusquedaDesdeForeignKeySesionForeignKeyEstructura(true);
			estructuraSessionBean.setlIdEstructuraActualForeignKey(this.idEstructuraActual);

			String strPagina=Constantes.SNONE;
			SistemaLogicAdditional sistemaLogicAdditional=new SistemaLogicAdditional();

			guardarDatosBusquedaSession();

		} catch(Exception e) {
			FuncionesSwing.manageException(this, e,logger);
		}

		return "";
	}

	public String registrarSesionEstructuraParaHistorialPagoNomis() throws Exception {
		Boolean isPaginaPopupHistorialPagoNomi=false;

		try {

			if(this.estructuraSessionBean==null) {
				this.estructuraSessionBean=new EstructuraSessionBean();
			}

			if(this.jInternalFrameDetalleFormEstructura.historialpagonomiSessionBean==null) {
				this.jInternalFrameDetalleFormEstructura.historialpagonomiSessionBean=new HistorialPagoNomiSessionBean();
			}

			this.jInternalFrameDetalleFormEstructura.historialpagonomiSessionBean.setsPathNavegacionActual(estructuraSessionBean.getsPathNavegacionActual()+Constantes.SHTMLFLECHA+HistorialPagoNomiConstantesFunciones.SCLASSWEBTITULO);
			this.jInternalFrameDetalleFormEstructura.historialpagonomiSessionBean.setisPermiteRecargarInformacion(false);
			isPaginaPopupHistorialPagoNomi=this.jInternalFrameDetalleFormEstructura.historialpagonomiSessionBean.getisPaginaPopup();
			this.jInternalFrameDetalleFormEstructura.historialpagonomiSessionBean.setisPermiteNavegacionHaciaForeignKeyDesdeHistorialPagoNomi(true);
			this.jInternalFrameDetalleFormEstructura.historialpagonomiSessionBean.setsNombrePaginaNavegacionHaciaForeignKeyDesdeHistorialPagoNomi(EstructuraConstantesFunciones.SNOMBREOPCION);
			this.jInternalFrameDetalleFormEstructura.historialpagonomiSessionBean.setisBusquedaDesdeForeignKeySesionEstructura(true);
			this.jInternalFrameDetalleFormEstructura.historialpagonomiSessionBean.setlidEstructuraActual(this.idEstructuraActual);

			estructuraSessionBean.setisBusquedaDesdeForeignKeySesionForeignKeyEstructura(true);
			estructuraSessionBean.setlIdEstructuraActualForeignKey(this.idEstructuraActual);

			String strPagina=Constantes.SNONE;
			SistemaLogicAdditional sistemaLogicAdditional=new SistemaLogicAdditional();

			guardarDatosBusquedaSession();

		} catch(Exception e) {
			FuncionesSwing.manageException(this, e,logger);
		}

		return "";
	}

	public String registrarSesionEstructuraParaAsistenciaDiarias() throws Exception {
		Boolean isPaginaPopupAsistenciaDiaria=false;

		try {

			if(this.estructuraSessionBean==null) {
				this.estructuraSessionBean=new EstructuraSessionBean();
			}

			if(this.jInternalFrameDetalleFormEstructura.asistenciadiariaSessionBean==null) {
				this.jInternalFrameDetalleFormEstructura.asistenciadiariaSessionBean=new AsistenciaDiariaSessionBean();
			}

			this.jInternalFrameDetalleFormEstructura.asistenciadiariaSessionBean.setsPathNavegacionActual(estructuraSessionBean.getsPathNavegacionActual()+Constantes.SHTMLFLECHA+AsistenciaDiariaConstantesFunciones.SCLASSWEBTITULO);
			this.jInternalFrameDetalleFormEstructura.asistenciadiariaSessionBean.setisPermiteRecargarInformacion(false);
			isPaginaPopupAsistenciaDiaria=this.jInternalFrameDetalleFormEstructura.asistenciadiariaSessionBean.getisPaginaPopup();
			this.jInternalFrameDetalleFormEstructura.asistenciadiariaSessionBean.setisPermiteNavegacionHaciaForeignKeyDesdeAsistenciaDiaria(true);
			this.jInternalFrameDetalleFormEstructura.asistenciadiariaSessionBean.setsNombrePaginaNavegacionHaciaForeignKeyDesdeAsistenciaDiaria(EstructuraConstantesFunciones.SNOMBREOPCION);
			this.jInternalFrameDetalleFormEstructura.asistenciadiariaSessionBean.setisBusquedaDesdeForeignKeySesionEstructura(true);
			this.jInternalFrameDetalleFormEstructura.asistenciadiariaSessionBean.setlidEstructuraActual(this.idEstructuraActual);

			estructuraSessionBean.setisBusquedaDesdeForeignKeySesionForeignKeyEstructura(true);
			estructuraSessionBean.setlIdEstructuraActualForeignKey(this.idEstructuraActual);

			String strPagina=Constantes.SNONE;
			SistemaLogicAdditional sistemaLogicAdditional=new SistemaLogicAdditional();

			guardarDatosBusquedaSession();

		} catch(Exception e) {
			FuncionesSwing.manageException(this, e,logger);
		}

		return "";
	}

	public String registrarSesionEstructuraParaFuncionEstruces() throws Exception {
		Boolean isPaginaPopupFuncionEstruc=false;

		try {

			if(this.estructuraSessionBean==null) {
				this.estructuraSessionBean=new EstructuraSessionBean();
			}

			if(this.jInternalFrameDetalleFormEstructura.funcionestrucSessionBean==null) {
				this.jInternalFrameDetalleFormEstructura.funcionestrucSessionBean=new FuncionEstrucSessionBean();
			}

			this.jInternalFrameDetalleFormEstructura.funcionestrucSessionBean.setsPathNavegacionActual(estructuraSessionBean.getsPathNavegacionActual()+Constantes.SHTMLFLECHA+FuncionEstrucConstantesFunciones.SCLASSWEBTITULO);
			this.jInternalFrameDetalleFormEstructura.funcionestrucSessionBean.setisPermiteRecargarInformacion(false);
			isPaginaPopupFuncionEstruc=this.jInternalFrameDetalleFormEstructura.funcionestrucSessionBean.getisPaginaPopup();
			this.jInternalFrameDetalleFormEstructura.funcionestrucSessionBean.setisPermiteNavegacionHaciaForeignKeyDesdeFuncionEstruc(true);
			this.jInternalFrameDetalleFormEstructura.funcionestrucSessionBean.setsNombrePaginaNavegacionHaciaForeignKeyDesdeFuncionEstruc(EstructuraConstantesFunciones.SNOMBREOPCION);
			this.jInternalFrameDetalleFormEstructura.funcionestrucSessionBean.setisBusquedaDesdeForeignKeySesionEstructura(true);
			this.jInternalFrameDetalleFormEstructura.funcionestrucSessionBean.setlidEstructuraActual(this.idEstructuraActual);

			estructuraSessionBean.setisBusquedaDesdeForeignKeySesionForeignKeyEstructura(true);
			estructuraSessionBean.setlIdEstructuraActualForeignKey(this.idEstructuraActual);

			String strPagina=Constantes.SNONE;
			SistemaLogicAdditional sistemaLogicAdditional=new SistemaLogicAdditional();

			guardarDatosBusquedaSession();

		} catch(Exception e) {
			FuncionesSwing.manageException(this, e,logger);
		}

		return "";
	}

	public String registrarSesionEstructuraParaSolicitudReemplazos() throws Exception {
		Boolean isPaginaPopupSolicitudReemplazo=false;

		try {

			if(this.estructuraSessionBean==null) {
				this.estructuraSessionBean=new EstructuraSessionBean();
			}

			if(this.jInternalFrameDetalleFormEstructura.solicitudreemplazoSessionBean==null) {
				this.jInternalFrameDetalleFormEstructura.solicitudreemplazoSessionBean=new SolicitudReemplazoSessionBean();
			}

			this.jInternalFrameDetalleFormEstructura.solicitudreemplazoSessionBean.setsPathNavegacionActual(estructuraSessionBean.getsPathNavegacionActual()+Constantes.SHTMLFLECHA+SolicitudReemplazoConstantesFunciones.SCLASSWEBTITULO);
			this.jInternalFrameDetalleFormEstructura.solicitudreemplazoSessionBean.setisPermiteRecargarInformacion(false);
			isPaginaPopupSolicitudReemplazo=this.jInternalFrameDetalleFormEstructura.solicitudreemplazoSessionBean.getisPaginaPopup();
			this.jInternalFrameDetalleFormEstructura.solicitudreemplazoSessionBean.setisPermiteNavegacionHaciaForeignKeyDesdeSolicitudReemplazo(true);
			this.jInternalFrameDetalleFormEstructura.solicitudreemplazoSessionBean.setsNombrePaginaNavegacionHaciaForeignKeyDesdeSolicitudReemplazo(EstructuraConstantesFunciones.SNOMBREOPCION);
			this.jInternalFrameDetalleFormEstructura.solicitudreemplazoSessionBean.setisBusquedaDesdeForeignKeySesionEstructura(true);
			this.jInternalFrameDetalleFormEstructura.solicitudreemplazoSessionBean.setlidEstructuraActual(this.idEstructuraActual);

			estructuraSessionBean.setisBusquedaDesdeForeignKeySesionForeignKeyEstructura(true);
			estructuraSessionBean.setlIdEstructuraActualForeignKey(this.idEstructuraActual);

			String strPagina=Constantes.SNONE;
			SistemaLogicAdditional sistemaLogicAdditional=new SistemaLogicAdditional();

			guardarDatosBusquedaSession();

		} catch(Exception e) {
			FuncionesSwing.manageException(this, e,logger);
		}

		return "";
	}

	public String registrarSesionEstructuraParaSolicitudHoraExtras() throws Exception {
		Boolean isPaginaPopupSolicitudHoraExtra=false;

		try {

			if(this.estructuraSessionBean==null) {
				this.estructuraSessionBean=new EstructuraSessionBean();
			}

			if(this.jInternalFrameDetalleFormEstructura.solicitudhoraextraSessionBean==null) {
				this.jInternalFrameDetalleFormEstructura.solicitudhoraextraSessionBean=new SolicitudHoraExtraSessionBean();
			}

			this.jInternalFrameDetalleFormEstructura.solicitudhoraextraSessionBean.setsPathNavegacionActual(estructuraSessionBean.getsPathNavegacionActual()+Constantes.SHTMLFLECHA+SolicitudHoraExtraConstantesFunciones.SCLASSWEBTITULO);
			this.jInternalFrameDetalleFormEstructura.solicitudhoraextraSessionBean.setisPermiteRecargarInformacion(false);
			isPaginaPopupSolicitudHoraExtra=this.jInternalFrameDetalleFormEstructura.solicitudhoraextraSessionBean.getisPaginaPopup();
			this.jInternalFrameDetalleFormEstructura.solicitudhoraextraSessionBean.setisPermiteNavegacionHaciaForeignKeyDesdeSolicitudHoraExtra(true);
			this.jInternalFrameDetalleFormEstructura.solicitudhoraextraSessionBean.setsNombrePaginaNavegacionHaciaForeignKeyDesdeSolicitudHoraExtra(EstructuraConstantesFunciones.SNOMBREOPCION);
			this.jInternalFrameDetalleFormEstructura.solicitudhoraextraSessionBean.setisBusquedaDesdeForeignKeySesionEstructura(true);
			this.jInternalFrameDetalleFormEstructura.solicitudhoraextraSessionBean.setlidEstructuraActual(this.idEstructuraActual);

			estructuraSessionBean.setisBusquedaDesdeForeignKeySesionForeignKeyEstructura(true);
			estructuraSessionBean.setlIdEstructuraActualForeignKey(this.idEstructuraActual);

			String strPagina=Constantes.SNONE;
			SistemaLogicAdditional sistemaLogicAdditional=new SistemaLogicAdditional();

			guardarDatosBusquedaSession();

		} catch(Exception e) {
			FuncionesSwing.manageException(this, e,logger);
		}

		return "";
	}

	public String registrarSesionEstructuraParaEvaluacionNomis() throws Exception {
		Boolean isPaginaPopupEvaluacionNomi=false;

		try {

			if(this.estructuraSessionBean==null) {
				this.estructuraSessionBean=new EstructuraSessionBean();
			}

			if(this.jInternalFrameDetalleFormEstructura.evaluacionnomiSessionBean==null) {
				this.jInternalFrameDetalleFormEstructura.evaluacionnomiSessionBean=new EvaluacionNomiSessionBean();
			}

			this.jInternalFrameDetalleFormEstructura.evaluacionnomiSessionBean.setsPathNavegacionActual(estructuraSessionBean.getsPathNavegacionActual()+Constantes.SHTMLFLECHA+EvaluacionNomiConstantesFunciones.SCLASSWEBTITULO);
			this.jInternalFrameDetalleFormEstructura.evaluacionnomiSessionBean.setisPermiteRecargarInformacion(false);
			isPaginaPopupEvaluacionNomi=this.jInternalFrameDetalleFormEstructura.evaluacionnomiSessionBean.getisPaginaPopup();
			this.jInternalFrameDetalleFormEstructura.evaluacionnomiSessionBean.setisPermiteNavegacionHaciaForeignKeyDesdeEvaluacionNomi(true);
			this.jInternalFrameDetalleFormEstructura.evaluacionnomiSessionBean.setsNombrePaginaNavegacionHaciaForeignKeyDesdeEvaluacionNomi(EstructuraConstantesFunciones.SNOMBREOPCION);
			this.jInternalFrameDetalleFormEstructura.evaluacionnomiSessionBean.setisBusquedaDesdeForeignKeySesionEstructura(true);
			this.jInternalFrameDetalleFormEstructura.evaluacionnomiSessionBean.setlidEstructuraActual(this.idEstructuraActual);

			estructuraSessionBean.setisBusquedaDesdeForeignKeySesionForeignKeyEstructura(true);
			estructuraSessionBean.setlIdEstructuraActualForeignKey(this.idEstructuraActual);

			String strPagina=Constantes.SNONE;
			SistemaLogicAdditional sistemaLogicAdditional=new SistemaLogicAdditional();

			guardarDatosBusquedaSession();

		} catch(Exception e) {
			FuncionesSwing.manageException(this, e,logger);
		}

		return "";
	}

	public String registrarSesionEstructuraParaSolicitudVacaciones() throws Exception {
		Boolean isPaginaPopupSolicitudVacacion=false;

		try {

			if(this.estructuraSessionBean==null) {
				this.estructuraSessionBean=new EstructuraSessionBean();
			}

			if(this.jInternalFrameDetalleFormEstructura.solicitudvacacionSessionBean==null) {
				this.jInternalFrameDetalleFormEstructura.solicitudvacacionSessionBean=new SolicitudVacacionSessionBean();
			}

			this.jInternalFrameDetalleFormEstructura.solicitudvacacionSessionBean.setsPathNavegacionActual(estructuraSessionBean.getsPathNavegacionActual()+Constantes.SHTMLFLECHA+SolicitudVacacionConstantesFunciones.SCLASSWEBTITULO);
			this.jInternalFrameDetalleFormEstructura.solicitudvacacionSessionBean.setisPermiteRecargarInformacion(false);
			isPaginaPopupSolicitudVacacion=this.jInternalFrameDetalleFormEstructura.solicitudvacacionSessionBean.getisPaginaPopup();
			this.jInternalFrameDetalleFormEstructura.solicitudvacacionSessionBean.setisPermiteNavegacionHaciaForeignKeyDesdeSolicitudVacacion(true);
			this.jInternalFrameDetalleFormEstructura.solicitudvacacionSessionBean.setsNombrePaginaNavegacionHaciaForeignKeyDesdeSolicitudVacacion(EstructuraConstantesFunciones.SNOMBREOPCION);
			this.jInternalFrameDetalleFormEstructura.solicitudvacacionSessionBean.setisBusquedaDesdeForeignKeySesionEstructura(true);
			this.jInternalFrameDetalleFormEstructura.solicitudvacacionSessionBean.setlidEstructuraActual(this.idEstructuraActual);

			estructuraSessionBean.setisBusquedaDesdeForeignKeySesionForeignKeyEstructura(true);
			estructuraSessionBean.setlIdEstructuraActualForeignKey(this.idEstructuraActual);

			String strPagina=Constantes.SNONE;
			SistemaLogicAdditional sistemaLogicAdditional=new SistemaLogicAdditional();

			guardarDatosBusquedaSession();

		} catch(Exception e) {
			FuncionesSwing.manageException(this, e,logger);
		}

		return "";
	}

	public String registrarSesionEstructuraParaResponsableActivoFijos() throws Exception {
		Boolean isPaginaPopupResponsableActivoFijo=false;

		try {

			if(this.estructuraSessionBean==null) {
				this.estructuraSessionBean=new EstructuraSessionBean();
			}

			if(this.jInternalFrameDetalleFormEstructura.responsableactivofijoSessionBean==null) {
				this.jInternalFrameDetalleFormEstructura.responsableactivofijoSessionBean=new ResponsableActivoFijoSessionBean();
			}

			this.jInternalFrameDetalleFormEstructura.responsableactivofijoSessionBean.setsPathNavegacionActual(estructuraSessionBean.getsPathNavegacionActual()+Constantes.SHTMLFLECHA+ResponsableActivoFijoConstantesFunciones.SCLASSWEBTITULO);
			this.jInternalFrameDetalleFormEstructura.responsableactivofijoSessionBean.setisPermiteRecargarInformacion(false);
			isPaginaPopupResponsableActivoFijo=this.jInternalFrameDetalleFormEstructura.responsableactivofijoSessionBean.getisPaginaPopup();
			this.jInternalFrameDetalleFormEstructura.responsableactivofijoSessionBean.setisPermiteNavegacionHaciaForeignKeyDesdeResponsableActivoFijo(true);
			this.jInternalFrameDetalleFormEstructura.responsableactivofijoSessionBean.setsNombrePaginaNavegacionHaciaForeignKeyDesdeResponsableActivoFijo(EstructuraConstantesFunciones.SNOMBREOPCION);
			this.jInternalFrameDetalleFormEstructura.responsableactivofijoSessionBean.setisBusquedaDesdeForeignKeySesionEstructura(true);
			this.jInternalFrameDetalleFormEstructura.responsableactivofijoSessionBean.setlidEstructuraActual(this.idEstructuraActual);

			estructuraSessionBean.setisBusquedaDesdeForeignKeySesionForeignKeyEstructura(true);
			estructuraSessionBean.setlIdEstructuraActualForeignKey(this.idEstructuraActual);

			String strPagina=Constantes.SNONE;
			SistemaLogicAdditional sistemaLogicAdditional=new SistemaLogicAdditional();

			guardarDatosBusquedaSession();

		} catch(Exception e) {
			FuncionesSwing.manageException(this, e,logger);
		}

		return "";
	}

	public String registrarSesionEstructuraParaRubroEmpleaCuentaContables() throws Exception {
		Boolean isPaginaPopupRubroEmpleaCuentaContable=false;

		try {

			if(this.estructuraSessionBean==null) {
				this.estructuraSessionBean=new EstructuraSessionBean();
			}

			if(this.jInternalFrameDetalleFormEstructura.rubroempleacuentacontableSessionBean==null) {
				this.jInternalFrameDetalleFormEstructura.rubroempleacuentacontableSessionBean=new RubroEmpleaCuentaContableSessionBean();
			}

			this.jInternalFrameDetalleFormEstructura.rubroempleacuentacontableSessionBean.setsPathNavegacionActual(estructuraSessionBean.getsPathNavegacionActual()+Constantes.SHTMLFLECHA+RubroEmpleaCuentaContableConstantesFunciones.SCLASSWEBTITULO);
			this.jInternalFrameDetalleFormEstructura.rubroempleacuentacontableSessionBean.setisPermiteRecargarInformacion(false);
			isPaginaPopupRubroEmpleaCuentaContable=this.jInternalFrameDetalleFormEstructura.rubroempleacuentacontableSessionBean.getisPaginaPopup();
			this.jInternalFrameDetalleFormEstructura.rubroempleacuentacontableSessionBean.setisPermiteNavegacionHaciaForeignKeyDesdeRubroEmpleaCuentaContable(true);
			this.jInternalFrameDetalleFormEstructura.rubroempleacuentacontableSessionBean.setsNombrePaginaNavegacionHaciaForeignKeyDesdeRubroEmpleaCuentaContable(EstructuraConstantesFunciones.SNOMBREOPCION);
			this.jInternalFrameDetalleFormEstructura.rubroempleacuentacontableSessionBean.setisBusquedaDesdeForeignKeySesionEstructura(true);
			this.jInternalFrameDetalleFormEstructura.rubroempleacuentacontableSessionBean.setlidEstructuraActual(this.idEstructuraActual);

			estructuraSessionBean.setisBusquedaDesdeForeignKeySesionForeignKeyEstructura(true);
			estructuraSessionBean.setlIdEstructuraActualForeignKey(this.idEstructuraActual);

			String strPagina=Constantes.SNONE;
			SistemaLogicAdditional sistemaLogicAdditional=new SistemaLogicAdditional();

			guardarDatosBusquedaSession();

		} catch(Exception e) {
			FuncionesSwing.manageException(this, e,logger);
		}

		return "";
	}
	
	

	public String registrarSesionEstructuraParaBusquedaCuentaContables() throws Exception {
		Boolean isPaginaPopupCuentaContable=false;

		try {

			if(estructuraSessionBean==null) {
				estructuraSessionBean=new EstructuraSessionBean();
			}

			if(cuentacontableSessionBean==null) {
				cuentacontableSessionBean=new CuentaContableSessionBean();
			}

			cuentacontableSessionBean.setsPathNavegacionActual(estructuraSessionBean.getsPathNavegacionActual()+Constantes.SHTMLFLECHA+CuentaContableConstantesFunciones.SCLASSWEBTITULO);
			cuentacontableSessionBean.setisPermiteRecargarInformacion(false);
			cuentacontableSessionBean.setisPaginaPopup(true);
			isPaginaPopupCuentaContable=cuentacontableSessionBean.getisPaginaPopup();
			cuentacontableSessionBean.setisPaginaPopup(false);
			cuentacontableSessionBean.setEstaModoBusqueda(true);
			cuentacontableSessionBean.setsFuncionBusquedaRapida("window.opener.estructuraFuncionGeneral.setCombosCodigoDesdeBusquedaid_cuenta_contable(TO_REPLACE);");
			cuentacontableSessionBean.setisPermiteNavegacionHaciaForeignKeyDesdeCuentaContable(true);
			cuentacontableSessionBean.setsNombrePaginaNavegacionHaciaForeignKeyDesdeCuentaContable(EstructuraConstantesFunciones.SNOMBREOPCION);
			//cuentacontableSessionBean.setisBusquedaDesdeForeignKeySesionEstructura(true);
			//cuentacontableSessionBean.setlidEstructuraActual(this.idEstructuraActual);

			estructuraSessionBean.setisBusquedaDesdeForeignKeySesionForeignKeyEstructura(true);
			estructuraSessionBean.setlIdEstructuraActualForeignKey(this.idEstructuraActual);

			String strPagina=Constantes.SNONE;
			SistemaLogicAdditional sistemaLogicAdditional=new SistemaLogicAdditional();

			guardarDatosBusquedaSession();

		} catch(Exception e) {
			FuncionesSwing.manageException(this, e,logger);
		}
			return "";
	}
	
	
	public void guardarDatosBusquedaSession() throws Exception {
		
		//EstructuraSessionBean estructuraSessionBean=new EstructuraSessionBean();
		
		if(this.estructuraSessionBean==null) {
			this.estructuraSessionBean=new EstructuraSessionBean();
		}
		
		this.estructuraSessionBean.setsUltimaBusquedaEstructura(this.getsAccionBusqueda());
		this.estructuraSessionBean.setiNumeroPaginacion(this.getiNumeroPaginacion());
		this.estructuraSessionBean.setiNumeroPaginacionPagina(this.getiNumeroPaginacionPagina());
		
		if(this.getsAccionBusqueda().equals("Todos")) {
			;
		}
		

		else if(this.getsAccionBusqueda().equals("FK_IdCiudad")) {
			estructuraSessionBean.setid_ciudad(this.getid_ciudadFK_IdCiudad());	
		}
		else if(this.getsAccionBusqueda().equals("FK_IdCuentaContable")) {
			estructuraSessionBean.setid_cuenta_contable(this.getid_cuenta_contableFK_IdCuentaContable());	
		}
		else if(this.getsAccionBusqueda().equals("FK_IdEmpresa")) {
			estructuraSessionBean.setid_empresa(this.getid_empresaFK_IdEmpresa());	
		}
		else if(this.getsAccionBusqueda().equals("FK_IdEstructura")) {
			estructuraSessionBean.setid_estructura(this.getid_estructuraFK_IdEstructura());	
		}
		else if(this.getsAccionBusqueda().equals("FK_IdNumeroPatronal")) {
			estructuraSessionBean.setid_numero_patronal(this.getid_numero_patronalFK_IdNumeroPatronal());	
		}
		else if(this.getsAccionBusqueda().equals("FK_IdPais")) {
			estructuraSessionBean.setid_pais(this.getid_paisFK_IdPais());	
		}
		else if(this.getsAccionBusqueda().equals("FK_IdSucursal")) {
			estructuraSessionBean.setid_sucursal(this.getid_sucursalFK_IdSucursal());	
		}
		else if(this.getsAccionBusqueda().equals("FK_IdTipoEstructura")) {
			estructuraSessionBean.setid_tipo_estructura(this.getid_tipo_estructuraFK_IdTipoEstructura());	
		}
		else if(this.getsAccionBusqueda().equals("FK_IdTipoPago_NM")) {
			estructuraSessionBean.setid_tipo_pago__n_m(this.getid_tipo_pago__n_mFK_IdTipoPago_NM());	
		}
		
	}
	
	public void traerDatosBusquedaDesdeSession() throws Exception {
		//EstructuraSessionBean estructuraSessionBean=new EstructuraSessionBean();
		
		if(this.estructuraSessionBean==null) {
			this.estructuraSessionBean=new EstructuraSessionBean();
		}
		
		if(this.estructuraSessionBean.getsUltimaBusquedaEstructura()!=null&&!this.estructuraSessionBean.getsUltimaBusquedaEstructura().equals("")) {
			this.setsAccionBusqueda(estructuraSessionBean.getsUltimaBusquedaEstructura());
			this.setiNumeroPaginacion(estructuraSessionBean.getiNumeroPaginacion());
			this.setiNumeroPaginacionPagina(estructuraSessionBean.getiNumeroPaginacionPagina());		
				
			if(this.getsAccionBusqueda().equals("Todos")) {
				;
			}
			

			 else if(this.getsAccionBusqueda().equals("FK_IdCiudad")) {
				this.setid_ciudadFK_IdCiudad(estructuraSessionBean.getid_ciudad());
				estructuraSessionBean.setid_ciudad(-1L);
			}
			 else if(this.getsAccionBusqueda().equals("FK_IdCuentaContable")) {
				this.setid_cuenta_contableFK_IdCuentaContable(estructuraSessionBean.getid_cuenta_contable());
				estructuraSessionBean.setid_cuenta_contable(-1L);
			}
			 else if(this.getsAccionBusqueda().equals("FK_IdEmpresa")) {
				this.setid_empresaFK_IdEmpresa(estructuraSessionBean.getid_empresa());
				estructuraSessionBean.setid_empresa(-1L);
			}
			 else if(this.getsAccionBusqueda().equals("FK_IdEstructura")) {
				this.setid_estructuraFK_IdEstructura(estructuraSessionBean.getid_estructura());
				estructuraSessionBean.setid_estructura(null);
			}
			 else if(this.getsAccionBusqueda().equals("FK_IdNumeroPatronal")) {
				this.setid_numero_patronalFK_IdNumeroPatronal(estructuraSessionBean.getid_numero_patronal());
				estructuraSessionBean.setid_numero_patronal(-1L);
			}
			 else if(this.getsAccionBusqueda().equals("FK_IdPais")) {
				this.setid_paisFK_IdPais(estructuraSessionBean.getid_pais());
				estructuraSessionBean.setid_pais(-1L);
			}
			 else if(this.getsAccionBusqueda().equals("FK_IdSucursal")) {
				this.setid_sucursalFK_IdSucursal(estructuraSessionBean.getid_sucursal());
				estructuraSessionBean.setid_sucursal(-1L);
			}
			 else if(this.getsAccionBusqueda().equals("FK_IdTipoEstructura")) {
				this.setid_tipo_estructuraFK_IdTipoEstructura(estructuraSessionBean.getid_tipo_estructura());
				estructuraSessionBean.setid_tipo_estructura(-1L);
			}
			 else if(this.getsAccionBusqueda().equals("FK_IdTipoPago_NM")) {
				this.setid_tipo_pago__n_mFK_IdTipoPago_NM(estructuraSessionBean.getid_tipo_pago__n_m());
				estructuraSessionBean.setid_tipo_pago__n_m(-1L);
			}
		}
		
		this.estructuraSessionBean.setsUltimaBusquedaEstructura("");
		this.estructuraSessionBean.setiNumeroPaginacion(EstructuraConstantesFunciones.INUMEROPAGINACION);
		this.estructuraSessionBean.setiNumeroPaginacionPagina(0);
		
	}
	
	public void procesoActualizarFilaTotales(Boolean esCampoValor,String sTipo) {
		try {
			this.actualizarFilaTotales();
				
			this.traerValoresTablaTotales();
			
			this.inicializarActualizarBindingTablaEstructura(false);
			
			
			
			
		} catch (Exception e) {
			e.printStackTrace();
		}
	}
	
	
	public void updateBusquedasFormularioEstructura() {
		this.updateBorderResaltarBusquedasFormularioEstructura();
		this.updateVisibilidadBusquedasFormularioEstructura();
		this.updateHabilitarBusquedasFormularioEstructura();
	}
	
	public void updateBorderResaltarBusquedasFormularioEstructura() {					
	//BYDAN_BUSQUEDAS
		
	int index=0;
		
	if(this.jTabbedPaneBusquedasEstructura.getComponents().length>0) {
	

		if(this.estructuraConstantesFunciones.resaltarFK_IdCiudadEstructura!=null) {
			index= this.jTabbedPaneBusquedasEstructura.indexOfComponent(this.jPanelFK_IdCiudadEstructura);
			if(index>-1) {
				JPanel jPanel=(JPanel)this.jTabbedPaneBusquedasEstructura.getComponent(index);
				jPanel.setBorder(this.estructuraConstantesFunciones.resaltarFK_IdCiudadEstructura);
			}
		}

		if(this.estructuraConstantesFunciones.resaltarFK_IdCuentaContableEstructura!=null) {
			index= this.jTabbedPaneBusquedasEstructura.indexOfComponent(this.jPanelFK_IdCuentaContableEstructura);
			if(index>-1) {
				JPanel jPanel=(JPanel)this.jTabbedPaneBusquedasEstructura.getComponent(index);
				jPanel.setBorder(this.estructuraConstantesFunciones.resaltarFK_IdCuentaContableEstructura);
			}
		}

		if(this.estructuraConstantesFunciones.resaltarFK_IdEstructuraEstructura!=null) {
			index= this.jTabbedPaneBusquedasEstructura.indexOfComponent(this.jPanelFK_IdEstructuraEstructura);
			if(index>-1) {
				JPanel jPanel=(JPanel)this.jTabbedPaneBusquedasEstructura.getComponent(index);
				jPanel.setBorder(this.estructuraConstantesFunciones.resaltarFK_IdEstructuraEstructura);
			}
		}

		if(this.estructuraConstantesFunciones.resaltarFK_IdNumeroPatronalEstructura!=null) {
			index= this.jTabbedPaneBusquedasEstructura.indexOfComponent(this.jPanelFK_IdNumeroPatronalEstructura);
			if(index>-1) {
				JPanel jPanel=(JPanel)this.jTabbedPaneBusquedasEstructura.getComponent(index);
				jPanel.setBorder(this.estructuraConstantesFunciones.resaltarFK_IdNumeroPatronalEstructura);
			}
		}

		if(this.estructuraConstantesFunciones.resaltarFK_IdPaisEstructura!=null) {
			index= this.jTabbedPaneBusquedasEstructura.indexOfComponent(this.jPanelFK_IdPaisEstructura);
			if(index>-1) {
				JPanel jPanel=(JPanel)this.jTabbedPaneBusquedasEstructura.getComponent(index);
				jPanel.setBorder(this.estructuraConstantesFunciones.resaltarFK_IdPaisEstructura);
			}
		}

		if(this.estructuraConstantesFunciones.resaltarFK_IdTipoEstructuraEstructura!=null) {
			index= this.jTabbedPaneBusquedasEstructura.indexOfComponent(this.jPanelFK_IdTipoEstructuraEstructura);
			if(index>-1) {
				JPanel jPanel=(JPanel)this.jTabbedPaneBusquedasEstructura.getComponent(index);
				jPanel.setBorder(this.estructuraConstantesFunciones.resaltarFK_IdTipoEstructuraEstructura);
			}
		}

		if(this.estructuraConstantesFunciones.resaltarFK_IdTipoPago_NMEstructura!=null) {
			index= this.jTabbedPaneBusquedasEstructura.indexOfComponent(this.jPanelFK_IdTipoPago_NMEstructura);
			if(index>-1) {
				JPanel jPanel=(JPanel)this.jTabbedPaneBusquedasEstructura.getComponent(index);
				jPanel.setBorder(this.estructuraConstantesFunciones.resaltarFK_IdTipoPago_NMEstructura);
			}
		}
	}	
	
	}
	
	public void updateVisibilidadBusquedasFormularioEstructura() {
	//BYDAN_BUSQUEDAS
	
	int index=0;
	JPanel jPanel=null;
		
	if(this.jTabbedPaneBusquedasEstructura.getComponents().length>0) {
	

			index= this.jTabbedPaneBusquedasEstructura.indexOfComponent(this.jPanelFK_IdCiudadEstructura);
			jPanel=(JPanel)this.jTabbedPaneBusquedasEstructura.getComponent(index);
			//NO VALE SOLO PONIENDO VISIBLE=FALSE, HAY QUE USAR REMOVE
			jPanel.setVisible(this.estructuraConstantesFunciones.mostrarFK_IdCiudadEstructura);
			if(!this.estructuraConstantesFunciones.mostrarFK_IdCiudadEstructura && index>-1) {
				this.jTabbedPaneBusquedasEstructura.remove(index);
			}

			index= this.jTabbedPaneBusquedasEstructura.indexOfComponent(this.jPanelFK_IdCuentaContableEstructura);
			jPanel=(JPanel)this.jTabbedPaneBusquedasEstructura.getComponent(index);
			//NO VALE SOLO PONIENDO VISIBLE=FALSE, HAY QUE USAR REMOVE
			jPanel.setVisible(this.estructuraConstantesFunciones.mostrarFK_IdCuentaContableEstructura);
			if(!this.estructuraConstantesFunciones.mostrarFK_IdCuentaContableEstructura && index>-1) {
				this.jTabbedPaneBusquedasEstructura.remove(index);
			}

			index= this.jTabbedPaneBusquedasEstructura.indexOfComponent(this.jPanelFK_IdEstructuraEstructura);
			jPanel=(JPanel)this.jTabbedPaneBusquedasEstructura.getComponent(index);
			//NO VALE SOLO PONIENDO VISIBLE=FALSE, HAY QUE USAR REMOVE
			jPanel.setVisible(this.estructuraConstantesFunciones.mostrarFK_IdEstructuraEstructura);
			if(!this.estructuraConstantesFunciones.mostrarFK_IdEstructuraEstructura && index>-1) {
				this.jTabbedPaneBusquedasEstructura.remove(index);
			}

			index= this.jTabbedPaneBusquedasEstructura.indexOfComponent(this.jPanelFK_IdNumeroPatronalEstructura);
			jPanel=(JPanel)this.jTabbedPaneBusquedasEstructura.getComponent(index);
			//NO VALE SOLO PONIENDO VISIBLE=FALSE, HAY QUE USAR REMOVE
			jPanel.setVisible(this.estructuraConstantesFunciones.mostrarFK_IdNumeroPatronalEstructura);
			if(!this.estructuraConstantesFunciones.mostrarFK_IdNumeroPatronalEstructura && index>-1) {
				this.jTabbedPaneBusquedasEstructura.remove(index);
			}

			index= this.jTabbedPaneBusquedasEstructura.indexOfComponent(this.jPanelFK_IdPaisEstructura);
			jPanel=(JPanel)this.jTabbedPaneBusquedasEstructura.getComponent(index);
			//NO VALE SOLO PONIENDO VISIBLE=FALSE, HAY QUE USAR REMOVE
			jPanel.setVisible(this.estructuraConstantesFunciones.mostrarFK_IdPaisEstructura);
			if(!this.estructuraConstantesFunciones.mostrarFK_IdPaisEstructura && index>-1) {
				this.jTabbedPaneBusquedasEstructura.remove(index);
			}

			index= this.jTabbedPaneBusquedasEstructura.indexOfComponent(this.jPanelFK_IdTipoEstructuraEstructura);
			jPanel=(JPanel)this.jTabbedPaneBusquedasEstructura.getComponent(index);
			//NO VALE SOLO PONIENDO VISIBLE=FALSE, HAY QUE USAR REMOVE
			jPanel.setVisible(this.estructuraConstantesFunciones.mostrarFK_IdTipoEstructuraEstructura);
			if(!this.estructuraConstantesFunciones.mostrarFK_IdTipoEstructuraEstructura && index>-1) {
				this.jTabbedPaneBusquedasEstructura.remove(index);
			}

			index= this.jTabbedPaneBusquedasEstructura.indexOfComponent(this.jPanelFK_IdTipoPago_NMEstructura);
			jPanel=(JPanel)this.jTabbedPaneBusquedasEstructura.getComponent(index);
			//NO VALE SOLO PONIENDO VISIBLE=FALSE, HAY QUE USAR REMOVE
			jPanel.setVisible(this.estructuraConstantesFunciones.mostrarFK_IdTipoPago_NMEstructura);
			if(!this.estructuraConstantesFunciones.mostrarFK_IdTipoPago_NMEstructura && index>-1) {
				this.jTabbedPaneBusquedasEstructura.remove(index);
			}
	}	
	
	}
	
	public void updateHabilitarBusquedasFormularioEstructura() {
	
	//BYDAN_BUSQUEDAS		
		int index=0;
		JPanel jPanel=null;
			
		if(this.jTabbedPaneBusquedasEstructura.getComponents().length>0) {
	

			index= this.jTabbedPaneBusquedasEstructura.indexOfComponent(this.jPanelFK_IdCiudadEstructura);
			if(index>-1) {
				jPanel=(JPanel)this.jTabbedPaneBusquedasEstructura.getComponent(index);
				//ENABLE PANE=FALSE NO FUNCIONA, ENABLEAT SI
				jPanel.setEnabled(this.estructuraConstantesFunciones.activarFK_IdCiudadEstructura);
				this.jTabbedPaneBusquedasEstructura.setEnabledAt(index,this.estructuraConstantesFunciones.activarFK_IdCiudadEstructura);
			}

			index= this.jTabbedPaneBusquedasEstructura.indexOfComponent(this.jPanelFK_IdCuentaContableEstructura);
			if(index>-1) {
				jPanel=(JPanel)this.jTabbedPaneBusquedasEstructura.getComponent(index);
				//ENABLE PANE=FALSE NO FUNCIONA, ENABLEAT SI
				jPanel.setEnabled(this.estructuraConstantesFunciones.activarFK_IdCuentaContableEstructura);
				this.jTabbedPaneBusquedasEstructura.setEnabledAt(index,this.estructuraConstantesFunciones.activarFK_IdCuentaContableEstructura);
			}

			index= this.jTabbedPaneBusquedasEstructura.indexOfComponent(this.jPanelFK_IdEstructuraEstructura);
			if(index>-1) {
				jPanel=(JPanel)this.jTabbedPaneBusquedasEstructura.getComponent(index);
				//ENABLE PANE=FALSE NO FUNCIONA, ENABLEAT SI
				jPanel.setEnabled(this.estructuraConstantesFunciones.activarFK_IdEstructuraEstructura);
				this.jTabbedPaneBusquedasEstructura.setEnabledAt(index,this.estructuraConstantesFunciones.activarFK_IdEstructuraEstructura);
			}

			index= this.jTabbedPaneBusquedasEstructura.indexOfComponent(this.jPanelFK_IdNumeroPatronalEstructura);
			if(index>-1) {
				jPanel=(JPanel)this.jTabbedPaneBusquedasEstructura.getComponent(index);
				//ENABLE PANE=FALSE NO FUNCIONA, ENABLEAT SI
				jPanel.setEnabled(this.estructuraConstantesFunciones.activarFK_IdNumeroPatronalEstructura);
				this.jTabbedPaneBusquedasEstructura.setEnabledAt(index,this.estructuraConstantesFunciones.activarFK_IdNumeroPatronalEstructura);
			}

			index= this.jTabbedPaneBusquedasEstructura.indexOfComponent(this.jPanelFK_IdPaisEstructura);
			if(index>-1) {
				jPanel=(JPanel)this.jTabbedPaneBusquedasEstructura.getComponent(index);
				//ENABLE PANE=FALSE NO FUNCIONA, ENABLEAT SI
				jPanel.setEnabled(this.estructuraConstantesFunciones.activarFK_IdPaisEstructura);
				this.jTabbedPaneBusquedasEstructura.setEnabledAt(index,this.estructuraConstantesFunciones.activarFK_IdPaisEstructura);
			}

			index= this.jTabbedPaneBusquedasEstructura.indexOfComponent(this.jPanelFK_IdTipoEstructuraEstructura);
			if(index>-1) {
				jPanel=(JPanel)this.jTabbedPaneBusquedasEstructura.getComponent(index);
				//ENABLE PANE=FALSE NO FUNCIONA, ENABLEAT SI
				jPanel.setEnabled(this.estructuraConstantesFunciones.activarFK_IdTipoEstructuraEstructura);
				this.jTabbedPaneBusquedasEstructura.setEnabledAt(index,this.estructuraConstantesFunciones.activarFK_IdTipoEstructuraEstructura);
			}

			index= this.jTabbedPaneBusquedasEstructura.indexOfComponent(this.jPanelFK_IdTipoPago_NMEstructura);
			if(index>-1) {
				jPanel=(JPanel)this.jTabbedPaneBusquedasEstructura.getComponent(index);
				//ENABLE PANE=FALSE NO FUNCIONA, ENABLEAT SI
				jPanel.setEnabled(this.estructuraConstantesFunciones.activarFK_IdTipoPago_NMEstructura);
				this.jTabbedPaneBusquedasEstructura.setEnabledAt(index,this.estructuraConstantesFunciones.activarFK_IdTipoPago_NMEstructura);
			}
		}	
	
	}
	
	
	public void resaltarPanelBusquedaEstructura(String sTipoBusqueda) {
		Boolean existe=false;
		//BYDAN_BUSQUEDAS
		
		int index=0;
		Border resaltar = Funciones2.getBorderResaltar(this.parametroGeneralUsuario,"TAB");

		if(sTipoBusqueda.equals("FK_IdCiudad")) {
			index= this.jTabbedPaneBusquedasEstructura.indexOfComponent(this.jPanelFK_IdCiudadEstructura);

			this.jTabbedPaneBusquedasEstructura.setSelectedIndex(index);

			JPanel jPanel=(JPanel)this.jTabbedPaneBusquedasEstructura.getComponent(index);

			this.estructuraConstantesFunciones.setResaltarFK_IdCiudadEstructura(resaltar);

			jPanel.setBorder(this.estructuraConstantesFunciones.resaltarFK_IdCiudadEstructura);
			existe=true;
		}
		else if(sTipoBusqueda.equals("FK_IdCuentaContable")) {
			index= this.jTabbedPaneBusquedasEstructura.indexOfComponent(this.jPanelFK_IdCuentaContableEstructura);

			this.jTabbedPaneBusquedasEstructura.setSelectedIndex(index);

			JPanel jPanel=(JPanel)this.jTabbedPaneBusquedasEstructura.getComponent(index);

			this.estructuraConstantesFunciones.setResaltarFK_IdCuentaContableEstructura(resaltar);

			jPanel.setBorder(this.estructuraConstantesFunciones.resaltarFK_IdCuentaContableEstructura);
			existe=true;
		}
		else if(sTipoBusqueda.equals("FK_IdEstructura")) {
			index= this.jTabbedPaneBusquedasEstructura.indexOfComponent(this.jPanelFK_IdEstructuraEstructura);

			this.jTabbedPaneBusquedasEstructura.setSelectedIndex(index);

			JPanel jPanel=(JPanel)this.jTabbedPaneBusquedasEstructura.getComponent(index);

			this.estructuraConstantesFunciones.setResaltarFK_IdEstructuraEstructura(resaltar);

			jPanel.setBorder(this.estructuraConstantesFunciones.resaltarFK_IdEstructuraEstructura);
			existe=true;
		}
		else if(sTipoBusqueda.equals("FK_IdNumeroPatronal")) {
			index= this.jTabbedPaneBusquedasEstructura.indexOfComponent(this.jPanelFK_IdNumeroPatronalEstructura);

			this.jTabbedPaneBusquedasEstructura.setSelectedIndex(index);

			JPanel jPanel=(JPanel)this.jTabbedPaneBusquedasEstructura.getComponent(index);

			this.estructuraConstantesFunciones.setResaltarFK_IdNumeroPatronalEstructura(resaltar);

			jPanel.setBorder(this.estructuraConstantesFunciones.resaltarFK_IdNumeroPatronalEstructura);
			existe=true;
		}
		else if(sTipoBusqueda.equals("FK_IdPais")) {
			index= this.jTabbedPaneBusquedasEstructura.indexOfComponent(this.jPanelFK_IdPaisEstructura);

			this.jTabbedPaneBusquedasEstructura.setSelectedIndex(index);

			JPanel jPanel=(JPanel)this.jTabbedPaneBusquedasEstructura.getComponent(index);

			this.estructuraConstantesFunciones.setResaltarFK_IdPaisEstructura(resaltar);

			jPanel.setBorder(this.estructuraConstantesFunciones.resaltarFK_IdPaisEstructura);
			existe=true;
		}
		else if(sTipoBusqueda.equals("FK_IdTipoEstructura")) {
			index= this.jTabbedPaneBusquedasEstructura.indexOfComponent(this.jPanelFK_IdTipoEstructuraEstructura);

			this.jTabbedPaneBusquedasEstructura.setSelectedIndex(index);

			JPanel jPanel=(JPanel)this.jTabbedPaneBusquedasEstructura.getComponent(index);

			this.estructuraConstantesFunciones.setResaltarFK_IdTipoEstructuraEstructura(resaltar);

			jPanel.setBorder(this.estructuraConstantesFunciones.resaltarFK_IdTipoEstructuraEstructura);
			existe=true;
		}
		else if(sTipoBusqueda.equals("FK_IdTipoPago_NM")) {
			index= this.jTabbedPaneBusquedasEstructura.indexOfComponent(this.jPanelFK_IdTipoPago_NMEstructura);

			this.jTabbedPaneBusquedasEstructura.setSelectedIndex(index);

			JPanel jPanel=(JPanel)this.jTabbedPaneBusquedasEstructura.getComponent(index);

			this.estructuraConstantesFunciones.setResaltarFK_IdTipoPago_NMEstructura(resaltar);

			jPanel.setBorder(this.estructuraConstantesFunciones.resaltarFK_IdTipoPago_NMEstructura);
			existe=true;
		}
		

		if(existe) {
			
			this.jTtoolBarEstructura.setBorder(resaltar);
			
		}
	}	
	
	//NO FUNCIONA
	public void windowClosed(WindowEvent e) {	
	}
		
	public void windowClosing(WindowEvent e) {	    	    
	}

	public void windowOpened(WindowEvent e) {	    
	}

	public void windowIconified(WindowEvent e) {	    
	}

	public void windowDeiconified(WindowEvent e) {	    
	}

	public void windowActivated(WindowEvent e) {	    
	}

	public void windowDeactivated(WindowEvent e) {	    
	}

	public void windowGainedFocus(WindowEvent e) {	    
	}

	public void windowLostFocus(WindowEvent e) {	    
	}
	
	public void updateControlesFormularioEstructura() throws Exception {

		if(this.jInternalFrameDetalleFormEstructura==null) { //if(!this.conCargarFormDetalle) {			
			this.inicializarFormDetalle();
		}
		
		this.updateBorderResaltarControlesFormularioEstructura();
		this.updateVisibilidadResaltarControlesFormularioEstructura();
		this.updateHabilitarResaltarControlesFormularioEstructura();
		
	}
	
	public void updateBorderResaltarControlesFormularioEstructura() throws Exception {
		if(this.jInternalFrameDetalleFormEstructura==null) { //if(!this.conCargarFormDetalle) {
			this.inicializarFormDetalle();
		}
		
	
		if(this.estructuraConstantesFunciones.resaltaridEstructura!=null && this.jInternalFrameDetalleFormEstructura!=null) {this.jInternalFrameDetalleFormEstructura.jLabelidEstructura.setBorder(this.estructuraConstantesFunciones.resaltaridEstructura);}
		if(this.estructuraConstantesFunciones.resaltarid_empresaEstructura!=null && this.jInternalFrameDetalleFormEstructura!=null) {this.jInternalFrameDetalleFormEstructura.jComboBoxid_empresaEstructura.setBorder(this.estructuraConstantesFunciones.resaltarid_empresaEstructura);}
		if(this.estructuraConstantesFunciones.resaltarid_sucursalEstructura!=null && this.jInternalFrameDetalleFormEstructura!=null) {this.jInternalFrameDetalleFormEstructura.jComboBoxid_sucursalEstructura.setBorder(this.estructuraConstantesFunciones.resaltarid_sucursalEstructura);}
		if(this.estructuraConstantesFunciones.resaltarid_estructuraEstructura!=null && this.jInternalFrameDetalleFormEstructura!=null) {this.jInternalFrameDetalleFormEstructura.jComboBoxid_estructuraEstructura.setBorder(this.estructuraConstantesFunciones.resaltarid_estructuraEstructura);}
		if(this.estructuraConstantesFunciones.resaltarid_tipo_pago__n_mEstructura!=null && this.jInternalFrameDetalleFormEstructura!=null) {this.jInternalFrameDetalleFormEstructura.jComboBoxid_tipo_pago__n_mEstructura.setBorder(this.estructuraConstantesFunciones.resaltarid_tipo_pago__n_mEstructura);}
		if(this.estructuraConstantesFunciones.resaltarid_numero_patronalEstructura!=null && this.jInternalFrameDetalleFormEstructura!=null) {this.jInternalFrameDetalleFormEstructura.jComboBoxid_numero_patronalEstructura.setBorder(this.estructuraConstantesFunciones.resaltarid_numero_patronalEstructura);}
		if(this.estructuraConstantesFunciones.resaltarid_cuenta_contableEstructura!=null && this.jInternalFrameDetalleFormEstructura!=null) {this.jInternalFrameDetalleFormEstructura.jComboBoxid_cuenta_contableEstructura.setBorder(this.estructuraConstantesFunciones.resaltarid_cuenta_contableEstructura);}
		if(this.estructuraConstantesFunciones.resaltarid_tipo_estructuraEstructura!=null && this.jInternalFrameDetalleFormEstructura!=null) {this.jInternalFrameDetalleFormEstructura.jComboBoxid_tipo_estructuraEstructura.setBorder(this.estructuraConstantesFunciones.resaltarid_tipo_estructuraEstructura);}
		if(this.estructuraConstantesFunciones.resaltarid_paisEstructura!=null && this.jInternalFrameDetalleFormEstructura!=null) {this.jInternalFrameDetalleFormEstructura.jComboBoxid_paisEstructura.setBorder(this.estructuraConstantesFunciones.resaltarid_paisEstructura);}
		if(this.estructuraConstantesFunciones.resaltarid_ciudadEstructura!=null && this.jInternalFrameDetalleFormEstructura!=null) {this.jInternalFrameDetalleFormEstructura.jComboBoxid_ciudadEstructura.setBorder(this.estructuraConstantesFunciones.resaltarid_ciudadEstructura);}
		if(this.estructuraConstantesFunciones.resaltarcodigoEstructura!=null && this.jInternalFrameDetalleFormEstructura!=null) {this.jInternalFrameDetalleFormEstructura.jTextFieldcodigoEstructura.setBorder(this.estructuraConstantesFunciones.resaltarcodigoEstructura);}
		if(this.estructuraConstantesFunciones.resaltarnumeroEstructura!=null && this.jInternalFrameDetalleFormEstructura!=null) {this.jInternalFrameDetalleFormEstructura.jTextFieldnumeroEstructura.setBorder(this.estructuraConstantesFunciones.resaltarnumeroEstructura);}
		if(this.estructuraConstantesFunciones.resaltarvalor_anticipoEstructura!=null && this.jInternalFrameDetalleFormEstructura!=null) {this.jInternalFrameDetalleFormEstructura.jTextFieldvalor_anticipoEstructura.setBorder(this.estructuraConstantesFunciones.resaltarvalor_anticipoEstructura);}
		if(this.estructuraConstantesFunciones.resaltarporcentaje_anticipoEstructura!=null && this.jInternalFrameDetalleFormEstructura!=null) {this.jInternalFrameDetalleFormEstructura.jTextFieldporcentaje_anticipoEstructura.setBorder(this.estructuraConstantesFunciones.resaltarporcentaje_anticipoEstructura);}
		if(this.estructuraConstantesFunciones.resaltarnombreEstructura!=null && this.jInternalFrameDetalleFormEstructura!=null) {this.jInternalFrameDetalleFormEstructura.jTextAreanombreEstructura.setBorder(this.estructuraConstantesFunciones.resaltarnombreEstructura);}
		if(this.estructuraConstantesFunciones.resaltares_jefeEstructura!=null && this.jInternalFrameDetalleFormEstructura!=null) {this.jInternalFrameDetalleFormEstructura.jCheckBoxes_jefeEstructura.setBorderPainted(true);this.jInternalFrameDetalleFormEstructura.jCheckBoxes_jefeEstructura.setBorder(this.estructuraConstantesFunciones.resaltares_jefeEstructura);}
		if(this.estructuraConstantesFunciones.resaltares_anualEstructura!=null && this.jInternalFrameDetalleFormEstructura!=null) {this.jInternalFrameDetalleFormEstructura.jCheckBoxes_anualEstructura.setBorderPainted(true);this.jInternalFrameDetalleFormEstructura.jCheckBoxes_anualEstructura.setBorder(this.estructuraConstantesFunciones.resaltares_anualEstructura);}
		if(this.estructuraConstantesFunciones.resaltarporcentajeEstructura!=null && this.jInternalFrameDetalleFormEstructura!=null) {this.jInternalFrameDetalleFormEstructura.jTextFieldporcentajeEstructura.setBorder(this.estructuraConstantesFunciones.resaltarporcentajeEstructura);}
		if(this.estructuraConstantesFunciones.resaltarvalorEstructura!=null && this.jInternalFrameDetalleFormEstructura!=null) {this.jInternalFrameDetalleFormEstructura.jTextFieldvalorEstructura.setBorder(this.estructuraConstantesFunciones.resaltarvalorEstructura);}
	}
	
	public void updateVisibilidadResaltarControlesFormularioEstructura() throws Exception {		
		if(this.jInternalFrameDetalleFormEstructura==null) { //if(!this.conCargarFormDetalle) {
			this.inicializarFormDetalle();
		}
		
		if(this.jInternalFrameDetalleFormEstructura!=null) {
	
		//this.jInternalFrameDetalleFormEstructura.jLabelidEstructura.setVisible(this.estructuraConstantesFunciones.mostraridEstructura);
		this.jInternalFrameDetalleFormEstructura.jPanelidEstructura.setVisible(this.estructuraConstantesFunciones.mostraridEstructura);
		//this.jInternalFrameDetalleFormEstructura.jComboBoxid_empresaEstructura.setVisible(this.estructuraConstantesFunciones.mostrarid_empresaEstructura);
		this.jInternalFrameDetalleFormEstructura.jPanelid_empresaEstructura.setVisible(this.estructuraConstantesFunciones.mostrarid_empresaEstructura);
		//this.jInternalFrameDetalleFormEstructura.jComboBoxid_sucursalEstructura.setVisible(this.estructuraConstantesFunciones.mostrarid_sucursalEstructura);
		this.jInternalFrameDetalleFormEstructura.jPanelid_sucursalEstructura.setVisible(this.estructuraConstantesFunciones.mostrarid_sucursalEstructura);
		//this.jInternalFrameDetalleFormEstructura.jComboBoxid_estructuraEstructura.setVisible(this.estructuraConstantesFunciones.mostrarid_estructuraEstructura);
		this.jInternalFrameDetalleFormEstructura.jPanelid_estructuraEstructura.setVisible(this.estructuraConstantesFunciones.mostrarid_estructuraEstructura);
		//this.jInternalFrameDetalleFormEstructura.jComboBoxid_tipo_pago__n_mEstructura.setVisible(this.estructuraConstantesFunciones.mostrarid_tipo_pago__n_mEstructura);
		this.jInternalFrameDetalleFormEstructura.jPanelid_tipo_pago__n_mEstructura.setVisible(this.estructuraConstantesFunciones.mostrarid_tipo_pago__n_mEstructura);
		//this.jInternalFrameDetalleFormEstructura.jComboBoxid_numero_patronalEstructura.setVisible(this.estructuraConstantesFunciones.mostrarid_numero_patronalEstructura);
		this.jInternalFrameDetalleFormEstructura.jPanelid_numero_patronalEstructura.setVisible(this.estructuraConstantesFunciones.mostrarid_numero_patronalEstructura);
		//this.jInternalFrameDetalleFormEstructura.jComboBoxid_cuenta_contableEstructura.setVisible(this.estructuraConstantesFunciones.mostrarid_cuenta_contableEstructura);
		this.jInternalFrameDetalleFormEstructura.jPanelid_cuenta_contableEstructura.setVisible(this.estructuraConstantesFunciones.mostrarid_cuenta_contableEstructura);
			this.jInternalFrameDetalleFormEstructura.jButtonid_cuenta_contableEstructura.setVisible(this.estructuraConstantesFunciones.mostrarid_cuenta_contableEstructura);
		//this.jInternalFrameDetalleFormEstructura.jComboBoxid_tipo_estructuraEstructura.setVisible(this.estructuraConstantesFunciones.mostrarid_tipo_estructuraEstructura);
		this.jInternalFrameDetalleFormEstructura.jPanelid_tipo_estructuraEstructura.setVisible(this.estructuraConstantesFunciones.mostrarid_tipo_estructuraEstructura);
		//this.jInternalFrameDetalleFormEstructura.jComboBoxid_paisEstructura.setVisible(this.estructuraConstantesFunciones.mostrarid_paisEstructura);
		this.jInternalFrameDetalleFormEstructura.jPanelid_paisEstructura.setVisible(this.estructuraConstantesFunciones.mostrarid_paisEstructura);
		//this.jInternalFrameDetalleFormEstructura.jComboBoxid_ciudadEstructura.setVisible(this.estructuraConstantesFunciones.mostrarid_ciudadEstructura);
		this.jInternalFrameDetalleFormEstructura.jPanelid_ciudadEstructura.setVisible(this.estructuraConstantesFunciones.mostrarid_ciudadEstructura);
		//this.jInternalFrameDetalleFormEstructura.jTextFieldcodigoEstructura.setVisible(this.estructuraConstantesFunciones.mostrarcodigoEstructura);
		this.jInternalFrameDetalleFormEstructura.jPanelcodigoEstructura.setVisible(this.estructuraConstantesFunciones.mostrarcodigoEstructura);
		//this.jInternalFrameDetalleFormEstructura.jTextFieldnumeroEstructura.setVisible(this.estructuraConstantesFunciones.mostrarnumeroEstructura);
		this.jInternalFrameDetalleFormEstructura.jPanelnumeroEstructura.setVisible(this.estructuraConstantesFunciones.mostrarnumeroEstructura);
		//this.jInternalFrameDetalleFormEstructura.jTextFieldvalor_anticipoEstructura.setVisible(this.estructuraConstantesFunciones.mostrarvalor_anticipoEstructura);
		this.jInternalFrameDetalleFormEstructura.jPanelvalor_anticipoEstructura.setVisible(this.estructuraConstantesFunciones.mostrarvalor_anticipoEstructura);
		//this.jInternalFrameDetalleFormEstructura.jTextFieldporcentaje_anticipoEstructura.setVisible(this.estructuraConstantesFunciones.mostrarporcentaje_anticipoEstructura);
		this.jInternalFrameDetalleFormEstructura.jPanelporcentaje_anticipoEstructura.setVisible(this.estructuraConstantesFunciones.mostrarporcentaje_anticipoEstructura);
		//this.jInternalFrameDetalleFormEstructura.jTextAreanombreEstructura.setVisible(this.estructuraConstantesFunciones.mostrarnombreEstructura);
		this.jInternalFrameDetalleFormEstructura.jPanelnombreEstructura.setVisible(this.estructuraConstantesFunciones.mostrarnombreEstructura);
		//this.jInternalFrameDetalleFormEstructura.jCheckBoxes_jefeEstructura.setVisible(this.estructuraConstantesFunciones.mostrares_jefeEstructura);
		this.jInternalFrameDetalleFormEstructura.jPaneles_jefeEstructura.setVisible(this.estructuraConstantesFunciones.mostrares_jefeEstructura);
		//this.jInternalFrameDetalleFormEstructura.jCheckBoxes_anualEstructura.setVisible(this.estructuraConstantesFunciones.mostrares_anualEstructura);
		this.jInternalFrameDetalleFormEstructura.jPaneles_anualEstructura.setVisible(this.estructuraConstantesFunciones.mostrares_anualEstructura);
		//this.jInternalFrameDetalleFormEstructura.jTextFieldporcentajeEstructura.setVisible(this.estructuraConstantesFunciones.mostrarporcentajeEstructura);
		this.jInternalFrameDetalleFormEstructura.jPanelporcentajeEstructura.setVisible(this.estructuraConstantesFunciones.mostrarporcentajeEstructura);
		//this.jInternalFrameDetalleFormEstructura.jTextFieldvalorEstructura.setVisible(this.estructuraConstantesFunciones.mostrarvalorEstructura);
		this.jInternalFrameDetalleFormEstructura.jPanelvalorEstructura.setVisible(this.estructuraConstantesFunciones.mostrarvalorEstructura);
		}
	}
	
	public void updateHabilitarResaltarControlesFormularioEstructura() throws Exception {
		if(this.jInternalFrameDetalleFormEstructura==null) { //if(!this.conCargarFormDetalle) {
			this.inicializarFormDetalle();
		}
		
		if(this.jInternalFrameDetalleFormEstructura!=null) {
	
		this.jInternalFrameDetalleFormEstructura.jLabelidEstructura.setEnabled(this.estructuraConstantesFunciones.activaridEstructura);
		this.jInternalFrameDetalleFormEstructura.jComboBoxid_empresaEstructura.setEnabled(this.estructuraConstantesFunciones.activarid_empresaEstructura);
		this.jInternalFrameDetalleFormEstructura.jComboBoxid_sucursalEstructura.setEnabled(this.estructuraConstantesFunciones.activarid_sucursalEstructura);
		this.jInternalFrameDetalleFormEstructura.jComboBoxid_estructuraEstructura.setEnabled(this.estructuraConstantesFunciones.activarid_estructuraEstructura);
		this.jInternalFrameDetalleFormEstructura.jComboBoxid_tipo_pago__n_mEstructura.setEnabled(this.estructuraConstantesFunciones.activarid_tipo_pago__n_mEstructura);
		this.jInternalFrameDetalleFormEstructura.jComboBoxid_numero_patronalEstructura.setEnabled(this.estructuraConstantesFunciones.activarid_numero_patronalEstructura);
		this.jInternalFrameDetalleFormEstructura.jComboBoxid_cuenta_contableEstructura.setEnabled(this.estructuraConstantesFunciones.activarid_cuenta_contableEstructura);
			this.jInternalFrameDetalleFormEstructura.jButtonid_cuenta_contableEstructura.setEnabled(this.estructuraConstantesFunciones.activarid_cuenta_contableEstructura);
		this.jInternalFrameDetalleFormEstructura.jComboBoxid_tipo_estructuraEstructura.setEnabled(this.estructuraConstantesFunciones.activarid_tipo_estructuraEstructura);
		this.jInternalFrameDetalleFormEstructura.jComboBoxid_paisEstructura.setEnabled(this.estructuraConstantesFunciones.activarid_paisEstructura);
		this.jInternalFrameDetalleFormEstructura.jComboBoxid_ciudadEstructura.setEnabled(this.estructuraConstantesFunciones.activarid_ciudadEstructura);
		this.jInternalFrameDetalleFormEstructura.jTextFieldcodigoEstructura.setEnabled(this.estructuraConstantesFunciones.activarcodigoEstructura);
		this.jInternalFrameDetalleFormEstructura.jTextFieldnumeroEstructura.setEnabled(this.estructuraConstantesFunciones.activarnumeroEstructura);
		this.jInternalFrameDetalleFormEstructura.jTextFieldvalor_anticipoEstructura.setEnabled(this.estructuraConstantesFunciones.activarvalor_anticipoEstructura);
		this.jInternalFrameDetalleFormEstructura.jTextFieldporcentaje_anticipoEstructura.setEnabled(this.estructuraConstantesFunciones.activarporcentaje_anticipoEstructura);
		this.jInternalFrameDetalleFormEstructura.jTextAreanombreEstructura.setEnabled(this.estructuraConstantesFunciones.activarnombreEstructura);
		this.jInternalFrameDetalleFormEstructura.jCheckBoxes_jefeEstructura.setEnabled(this.estructuraConstantesFunciones.activares_jefeEstructura);
		this.jInternalFrameDetalleFormEstructura.jCheckBoxes_anualEstructura.setEnabled(this.estructuraConstantesFunciones.activares_anualEstructura);
		this.jInternalFrameDetalleFormEstructura.jTextFieldporcentajeEstructura.setEnabled(this.estructuraConstantesFunciones.activarporcentajeEstructura);
		this.jInternalFrameDetalleFormEstructura.jTextFieldvalorEstructura.setEnabled(this.estructuraConstantesFunciones.activarvalorEstructura);
		}
	}
	
		
}