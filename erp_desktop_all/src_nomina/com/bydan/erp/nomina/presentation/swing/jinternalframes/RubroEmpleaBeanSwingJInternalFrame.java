/*
*AVISO LEGAL
Â© Copyright
*Este programa esta protegido por la ley de derechos de autor.
*La reproduccion o distribucion ilicita de este programa o de cualquiera de
*sus partes esta penado por la ley con severas sanciones civiles y penales,
*y seran objeto de todas las sanciones legales que correspondan.

*Su contenido no puede copiarse para fines comerciales o de otras,
*ni puede mostrarse, incluso en una version modificada, en otros sitios Web.
Solo esta permitido colocar hipervinculos al sitio web.
*/
package com.bydan.erp.nomina.presentation.swing.jinternalframes;




import com.bydan.erp.seguridad.business.entity.Usuario;
import com.bydan.erp.seguridad.business.entity.ResumenUsuario;
import com.bydan.erp.seguridad.business.entity.Opcion;
import com.bydan.erp.seguridad.business.entity.PerfilOpcion;
import com.bydan.erp.seguridad.business.entity.PerfilCampo;
import com.bydan.erp.seguridad.business.entity.PerfilAccion;
import com.bydan.erp.seguridad.business.entity.ParametroGeneralSg;
import com.bydan.erp.seguridad.business.entity.ParametroGeneralUsuario;
import com.bydan.erp.seguridad.business.entity.Modulo;
import com.bydan.erp.seguridad.business.entity.Accion;

import com.bydan.erp.seguridad.util.SistemaParameterReturnGeneralAdditional;
import com.bydan.erp.seguridad.util.SistemaParameterReturnGeneral;


//import com.bydan.erp.seguridad.business.entity.PerfilAccion;


import com.bydan.erp.seguridad.util.SistemaConstantesFunciones;
import com.bydan.erp.seguridad.util.SistemaConstantesFuncionesAdditional;
import com.bydan.erp.seguridad.business.logic.SistemaLogicAdditional;

import com.bydan.erp.nomina.util.RubroEmpleaConstantesFunciones;
import com.bydan.erp.nomina.util.RubroEmpleaParameterReturnGeneral;
//import com.bydan.erp.nomina.util.RubroEmpleaParameterGeneral;
//import com.bydan.erp.nomina.presentation.report.source.RubroEmpleaBean;
import com.bydan.framework.erp.business.dataaccess.ConstantesSql;
import com.bydan.framework.erp.business.entity.Classe;
import com.bydan.framework.erp.business.entity.DatoGeneral;
import com.bydan.framework.erp.business.entity.GeneralEntityParameterGeneral;
import com.bydan.framework.erp.business.entity.OrderBy;
import com.bydan.framework.erp.business.entity.DatoGeneralMinimo;
import com.bydan.framework.erp.business.entity.GeneralEntity;
import com.bydan.framework.erp.business.entity.Mensajes;
import com.bydan.framework.erp.business.entity.GeneralEntityParameterReturnGeneral;
//import com.bydan.framework.erp.business.entity.MaintenanceType;
import com.bydan.framework.erp.util.MaintenanceType;
import com.bydan.framework.erp.util.FuncionesReporte;
import com.bydan.framework.erp.business.logic.DatosCliente;
import com.bydan.framework.erp.business.logic.Pagination;

import com.bydan.erp.nomina.presentation.swing.jinternalframes.auxiliar.*;
import com.bydan.framework.erp.presentation.desktop.swing.TablaGeneralTotalModel;
import com.bydan.framework.erp.presentation.desktop.swing.TablaGeneralOrderByModel;
import com.bydan.framework.erp.presentation.desktop.swing.DateConverter;
import com.bydan.framework.erp.presentation.desktop.swing.DateConverterFromDate;
import com.bydan.framework.erp.presentation.desktop.swing.DateRenderer;
import com.bydan.framework.erp.presentation.desktop.swing.DateEditorRenderer;
import com.bydan.framework.erp.presentation.desktop.swing.BooleanRenderer;
import com.bydan.framework.erp.presentation.desktop.swing.BooleanEditorRenderer;
import com.bydan.framework.erp.presentation.desktop.swing.TextFieldRenderer;
import com.bydan.framework.erp.presentation.desktop.swing.RunnableProceso;
import com.bydan.framework.erp.presentation.desktop.swing.*;
//import com.bydan.framework.erp.presentation.desktop.swing.TextFieldEditorRenderer;
import com.bydan.framework.erp.presentation.desktop.swing.HeaderRenderer;
import com.bydan.framework.erp.presentation.desktop.swing.JInternalFrameBase;
import com.bydan.framework.erp.presentation.desktop.swing.FuncionesSwing;
import com.bydan.framework.erp.presentation.desktop.swing.MainJFrame;
import com.bydan.framework.erp.resources.imagenes.AuxiliarImagenes;
import com.bydan.erp.nomina.resources.reportes.AuxiliarReportes;


import com.bydan.erp.nomina.util.*;
import com.bydan.erp.nomina.business.logic.*;

import com.bydan.erp.seguridad.business.logic.*;
import com.bydan.erp.contabilidad.business.logic.*;

//EJB

//PARAMETROS


//EJB PARAMETROS

import com.bydan.framework.erp.business.logic.*;
import com.bydan.framework.erp.util.*;

import com.bydan.erp.nomina.business.entity.*;
//import com.bydan.framework.erp.business.entity.ConexionBeanFace;
//import com.bydan.framework.erp.business.entity.Mensajes;


import com.bydan.erp.seguridad.presentation.swing.jinternalframes.*;
import com.bydan.erp.contabilidad.presentation.swing.jinternalframes.*;

import com.bydan.erp.seguridad.presentation.swing.jinternalframes.auxiliar.*;
import com.bydan.erp.contabilidad.presentation.swing.jinternalframes.auxiliar.*;






import javax.imageio.ImageIO;
import java.net.NetworkInterface;
import java.net.InterfaceAddress;
import java.net.InetAddress;
import javax.naming.InitialContext;
import java.lang.Long;
import java.util.Date;
import java.util.Enumeration;
import java.util.Iterator;
import java.util.Set;
import java.util.HashSet;
import java.util.List;
import java.util.ArrayList;
import java.io.Serializable;
import java.util.Hashtable;
import java.util.Collections;
import java.io.File;
import java.io.FileInputStream;
import java.io.BufferedWriter;
import java.io.FileWriter;
import java.io.FileOutputStream;
import java.io.InputStream;
import java.io.BufferedReader;
import java.io.FileReader;
import java.util.HashMap;
import java.util.Map;
import java.io.PrintWriter;
import java.sql.SQLException;

import javax.xml.parsers.DocumentBuilder;
import javax.xml.parsers.DocumentBuilderFactory;
import javax.xml.parsers.ParserConfigurationException;
import javax.xml.transform.stream.StreamSource;

import org.xml.sax.EntityResolver;
import org.xml.sax.InputSource;
import org.xml.sax.SAXException;

import org.w3c.dom.Document;
import org.w3c.dom.Document;
import org.w3c.dom.NodeList;
import org.w3c.dom.Node;
import org.w3c.dom.Element;

import org.apache.poi.hssf.usermodel.HSSFCell;
import org.apache.poi.hssf.usermodel.HSSFRow;
import org.apache.poi.hssf.usermodel.HSSFSheet;
import org.apache.poi.hssf.usermodel.HSSFWorkbook;
import org.apache.poi.xssf.usermodel.XSSFWorkbook;

import org.apache.poi.ss.usermodel.Workbook;
import org.apache.poi.ss.usermodel.Sheet;
import org.apache.poi.ss.usermodel.Row;
import org.apache.poi.ss.usermodel.Cell;
import org.apache.poi.ss.usermodel.CellStyle;
import org.apache.poi.ss.usermodel.IndexedColors;
import org.apache.poi.ss.util.CellRangeAddress;

import javax.xml.transform.Transformer;
import javax.xml.transform.TransformerFactory;
import javax.xml.transform.dom.DOMSource;
import javax.xml.transform.stream.StreamResult;


import net.sf.jasperreports.engine.JRException;
import net.sf.jasperreports.engine.JRRuntimeException;
import net.sf.jasperreports.engine.JasperFillManager;
import net.sf.jasperreports.engine.JasperPrint;
import net.sf.jasperreports.engine.JasperReport;
import net.sf.jasperreports.engine.util.JRLoader;
import net.sf.jasperreports.engine.export.JRHtmlExporter;
import net.sf.jasperreports.j2ee.servlets.BaseHttpServlet;
import net.sf.jasperreports.engine.JRExporterParameter;
import net.sf.jasperreports.engine.data.JRBeanArrayDataSource;
import net.sf.jasperreports.engine.data.JRBeanCollectionDataSource;
import net.sf.jasperreports.view.JasperViewer;

import org.apache.log4j.Logger;

import com.bydan.framework.erp.business.entity.Reporte;


//VALIDACION
import org.hibernate.validator.ClassValidator;
import org.hibernate.validator.InvalidValue;

import net.sf.jasperreports.engine.JREmptyDataSource;
import net.sf.jasperreports.engine.JasperCompileManager;
import net.sf.jasperreports.engine.JasperExportManager;
import net.sf.jasperreports.engine.JasperPrint;
import net.sf.jasperreports.engine.JasperPrintManager;
import net.sf.jasperreports.engine.JasperReport;
import net.sf.jasperreports.engine.JasperRunManager;
import net.sf.jasperreports.engine.export.JExcelApiExporter;
import net.sf.jasperreports.engine.export.JRCsvExporter;
import net.sf.jasperreports.engine.export.JRRtfExporter;
import net.sf.jasperreports.engine.export.JRXlsExporter;
import net.sf.jasperreports.engine.export.JRXlsExporterParameter;
import net.sf.jasperreports.engine.util.JRSaver;
import net.sf.jasperreports.engine.xml.JRXmlWriter;


import com.bydan.erp.nomina.presentation.web.jsf.sessionbean.*;

import java.util.EventObject;
import javax.swing.*;
import javax.swing.border.Border;
import javax.swing.border.TitledBorder;
import javax.swing.border.EmptyBorder;
import javax.swing.event.*;
import javax.swing.table.AbstractTableModel;
import javax.swing.table.DefaultTableCellRenderer;
import javax.swing.table.TableColumn;
import javax.swing.table.TableCellEditor;
import javax.swing.table.TableCellRenderer;
import java.awt.*;
import java.awt.event.*;

import org.jdesktop.beansbinding.Binding.SyncFailure;
import org.jdesktop.beansbinding.BindingListener;
import org.jdesktop.beansbinding.Bindings;
import org.jdesktop.beansbinding.BeanProperty;
import org.jdesktop.beansbinding.ELProperty;
import org.jdesktop.beansbinding.AutoBinding.UpdateStrategy;
import org.jdesktop.beansbinding.PropertyStateEvent;
import org.jdesktop.swingbinding.JComboBoxBinding;
import org.jdesktop.swingbinding.SwingBindings;
import java.beans.PropertyChangeListener;
import java.beans.PropertyChangeEvent;

import com.toedter.calendar.JDateChooser;


import com.bydan.erp.seguridad.business.entity.*;
import com.bydan.erp.contabilidad.business.entity.*;
import com.bydan.erp.seguridad.util.*;
import com.bydan.erp.contabilidad.util.*;
import com.bydan.erp.seguridad.presentation.web.jsf.sessionbean.*;
import com.bydan.erp.contabilidad.presentation.web.jsf.sessionbean.*;


@SuppressWarnings("unused")
public class RubroEmpleaBeanSwingJInternalFrame extends RubroEmpleaJInternalFrame implements WindowListener,WindowFocusListener
{				
	
	public static final long serialVersionUID = 1L;
	
	public static Logger logger = Logger.getLogger(RubroEmpleaBeanSwingJInternalFrame.class);  
	
	public static ClassValidator<RubroEmplea> rubroempleaValidator = new ClassValidator<RubroEmplea>(RubroEmplea.class);
	
	public InvalidValue[] invalidValues=null;
		

	//Ejb Foreign Keys
	
	public RubroEmplea rubroemplea;	
	public RubroEmplea rubroempleaAux;
	public RubroEmplea rubroempleaAnterior;//USADO PARA MANEJAR FOCUS GAINED,LOST
	public RubroEmplea rubroempleaTotales;
	public Long idRubroEmpleaActual;
	public Long iIdNuevoRubroEmplea=0L;
	public int rowIndexActual=0;
	
	
	
	
	public String sFinalQueryComboEmpresa="";

	public List<Empresa> empresasForeignKey;

	public List<Empresa> getempresasForeignKey() {
		return empresasForeignKey;
	}

	public void setempresasForeignKey(List<Empresa> empresasForeignKey) {
		this.empresasForeignKey = empresasForeignKey;
	}

	//OBJETO FK ACTUAL
	public Empresa empresaForeignKey;

	public Empresa getempresaForeignKey() {
		return empresaForeignKey;
	}

	public void setempresaForeignKey(Empresa empresaForeignKey) {
		this.empresaForeignKey = empresaForeignKey;
	}

	public String sFinalQueryComboTipoCalculo="";

	public List<TipoCalculo> tipocalculosForeignKey;

	public List<TipoCalculo> gettipocalculosForeignKey() {
		return tipocalculosForeignKey;
	}

	public void settipocalculosForeignKey(List<TipoCalculo> tipocalculosForeignKey) {
		this.tipocalculosForeignKey = tipocalculosForeignKey;
	}

	//OBJETO FK ACTUAL
	public TipoCalculo tipocalculoForeignKey;

	public TipoCalculo gettipocalculoForeignKey() {
		return tipocalculoForeignKey;
	}

	public void settipocalculoForeignKey(TipoCalculo tipocalculoForeignKey) {
		this.tipocalculoForeignKey = tipocalculoForeignKey;
	}

	public String sFinalQueryComboTipoRubroEmplea="";

	public List<TipoRubroEmplea> tiporubroempleasForeignKey;

	public List<TipoRubroEmplea> gettiporubroempleasForeignKey() {
		return tiporubroempleasForeignKey;
	}

	public void settiporubroempleasForeignKey(List<TipoRubroEmplea> tiporubroempleasForeignKey) {
		this.tiporubroempleasForeignKey = tiporubroempleasForeignKey;
	}

	//OBJETO FK ACTUAL
	public TipoRubroEmplea tiporubroempleaForeignKey;

	public TipoRubroEmplea gettiporubroempleaForeignKey() {
		return tiporubroempleaForeignKey;
	}

	public void settiporubroempleaForeignKey(TipoRubroEmplea tiporubroempleaForeignKey) {
		this.tiporubroempleaForeignKey = tiporubroempleaForeignKey;
	}

	public String sFinalQueryComboTipoGrupoRubroEmplea="";

	public List<TipoGrupoRubroEmplea> tipogruporubroempleasForeignKey;

	public List<TipoGrupoRubroEmplea> gettipogruporubroempleasForeignKey() {
		return tipogruporubroempleasForeignKey;
	}

	public void settipogruporubroempleasForeignKey(List<TipoGrupoRubroEmplea> tipogruporubroempleasForeignKey) {
		this.tipogruporubroempleasForeignKey = tipogruporubroempleasForeignKey;
	}

	//OBJETO FK ACTUAL
	public TipoGrupoRubroEmplea tipogruporubroempleaForeignKey;

	public TipoGrupoRubroEmplea gettipogruporubroempleaForeignKey() {
		return tipogruporubroempleaForeignKey;
	}

	public void settipogruporubroempleaForeignKey(TipoGrupoRubroEmplea tipogruporubroempleaForeignKey) {
		this.tipogruporubroempleaForeignKey = tipogruporubroempleaForeignKey;
	}

		
	
	
	
	
	

	public Boolean isTienePermisosHistorialPagoNomi=false;

	public Boolean getIsTienePermisosHistorialPagoNomi() {
		return isTienePermisosHistorialPagoNomi;
	}

	public void setIsTienePermisosHistorialPagoNomi(Boolean isTienePermisosHistorialPagoNomi) {
		this.isTienePermisosHistorialPagoNomi= isTienePermisosHistorialPagoNomi;
	}


	public Boolean isTienePermisosRubroEstructura=false;

	public Boolean getIsTienePermisosRubroEstructura() {
		return isTienePermisosRubroEstructura;
	}

	public void setIsTienePermisosRubroEstructura(Boolean isTienePermisosRubroEstructura) {
		this.isTienePermisosRubroEstructura= isTienePermisosRubroEstructura;
	}


	public Boolean isTienePermisosDefiProvisionEmpleado=false;

	public Boolean getIsTienePermisosDefiProvisionEmpleado() {
		return isTienePermisosDefiProvisionEmpleado;
	}

	public void setIsTienePermisosDefiProvisionEmpleado(Boolean isTienePermisosDefiProvisionEmpleado) {
		this.isTienePermisosDefiProvisionEmpleado= isTienePermisosDefiProvisionEmpleado;
	}


	public Boolean isTienePermisosEmpleadoPagoRubro=false;

	public Boolean getIsTienePermisosEmpleadoPagoRubro() {
		return isTienePermisosEmpleadoPagoRubro;
	}

	public void setIsTienePermisosEmpleadoPagoRubro(Boolean isTienePermisosEmpleadoPagoRubro) {
		this.isTienePermisosEmpleadoPagoRubro= isTienePermisosEmpleadoPagoRubro;
	}


	public Boolean isTienePermisosHistorialPagoMesNomi=false;

	public Boolean getIsTienePermisosHistorialPagoMesNomi() {
		return isTienePermisosHistorialPagoMesNomi;
	}

	public void setIsTienePermisosHistorialPagoMesNomi(Boolean isTienePermisosHistorialPagoMesNomi) {
		this.isTienePermisosHistorialPagoMesNomi= isTienePermisosHistorialPagoMesNomi;
	}


	public Boolean isTienePermisosRubroEmpleado=false;

	public Boolean getIsTienePermisosRubroEmpleado() {
		return isTienePermisosRubroEmpleado;
	}

	public void setIsTienePermisosRubroEmpleado(Boolean isTienePermisosRubroEmpleado) {
		this.isTienePermisosRubroEmpleado= isTienePermisosRubroEmpleado;
	}


	public Boolean isTienePermisosValorRubroVariable=false;

	public Boolean getIsTienePermisosValorRubroVariable() {
		return isTienePermisosValorRubroVariable;
	}

	public void setIsTienePermisosValorRubroVariable(Boolean isTienePermisosValorRubroVariable) {
		this.isTienePermisosValorRubroVariable= isTienePermisosValorRubroVariable;
	}


	public Boolean isTienePermisosTipoPrestamo=false;

	public Boolean getIsTienePermisosTipoPrestamo() {
		return isTienePermisosTipoPrestamo;
	}

	public void setIsTienePermisosTipoPrestamo(Boolean isTienePermisosTipoPrestamo) {
		this.isTienePermisosTipoPrestamo= isTienePermisosTipoPrestamo;
	}


	public Boolean isTienePermisosRubroEmpleaCuentaContable=false;

	public Boolean getIsTienePermisosRubroEmpleaCuentaContable() {
		return isTienePermisosRubroEmpleaCuentaContable;
	}

	public void setIsTienePermisosRubroEmpleaCuentaContable(Boolean isTienePermisosRubroEmpleaCuentaContable) {
		this.isTienePermisosRubroEmpleaCuentaContable= isTienePermisosRubroEmpleaCuentaContable;
	}

	
	
	//FALTA:PARA BUSQUEDAS POR CAMPO EN FORMULARIO
	public String sFinalQueryGeneral="";
	public Boolean isEntroOnLoad=false;
	public Boolean isErrorGuardar=false;
	
	public Boolean isGuardarCambiosEnLote=false;
	public Boolean isCargarCombosDependencia=false;
	public Boolean isSeleccionarTodos=false;
	public Boolean isSeleccionados=false;
	public Boolean conGraficoReporte=false;
	
	public Boolean isPostAccionNuevo=false;
	public Boolean isPostAccionSinCerrar=false;
	public Boolean isPostAccionSinMensaje=false;
	
	
	public Boolean esControlTabla=false;
	
	public Boolean isPermisoTodoRubroEmplea;
	public Boolean isPermisoNuevoRubroEmplea;
	public Boolean isPermisoActualizarRubroEmplea;
	public Boolean isPermisoActualizarOriginalRubroEmplea;
	public Boolean isPermisoEliminarRubroEmplea;
	public Boolean isPermisoGuardarCambiosRubroEmplea;
	public Boolean isPermisoConsultaRubroEmplea;
	public Boolean isPermisoBusquedaRubroEmplea;
	public Boolean isPermisoReporteRubroEmplea;
	public Boolean isPermisoPaginacionMedioRubroEmplea;
	public Boolean isPermisoPaginacionAltoRubroEmplea;
	public Boolean isPermisoPaginacionTodoRubroEmplea;
	public Boolean isPermisoCopiarRubroEmplea;
	public Boolean isPermisoVerFormRubroEmplea;
	public Boolean isPermisoDuplicarRubroEmplea;
	public Boolean isPermisoOrdenRubroEmplea;
	
	
	public ArrayList<DatoGeneral> arrDatoGeneral;
	public ArrayList<String> arrDatoGeneralNo;
	ArrayList<Classe> classesActual=new ArrayList<Classe>();
	
	public List<Accion> accions;	
	public List<Accion> accionsFormulario;
	
	
	public ArrayList<DatoGeneralMinimo> arrDatoGeneralMinimos;
	
	public ArrayList<Reporte> tiposArchivosReportes;
	public ArrayList<Reporte> tiposArchivosReportesDinamico;
	public ArrayList<Reporte> tiposReportes;
	public ArrayList<Reporte> tiposReportesDinamico;
	public ArrayList<Reporte> tiposGraficosReportes;
	public ArrayList<Reporte> tiposPaginacion;
	public ArrayList<Reporte> tiposRelaciones;
	public ArrayList<Reporte> tiposAcciones;
	public ArrayList<Reporte> tiposAccionesFormulario;
	public ArrayList<Reporte> tiposSeleccionar;
	
	public ArrayList<Reporte> tiposColumnasSelect;
	public ArrayList<Reporte> tiposRelacionesSelect;
	
	
	public Integer iNumeroPaginacion;
	public Integer iNumeroPaginacionPagina;
	public Pagination pagination;
	public DatosCliente datosCliente;
	public DatosDeep datosDeep;
	public String sTipoArchivoReporte="";
	public String sTipoArchivoReporteDinamico="";
	public String sTipoReporte="";
	public String sTipoReporteDinamico="";
	public String sTipoGraficoReporte="";
	public String sTipoPaginacion="";
	public String sTipoRelacion="";
	public String sTipoAccion="";
	public String sTipoAccionFormulario="";
	public String sTipoSeleccionar="";	
	public String sDetalleReporte="";
	public Boolean isMostrarNumeroPaginacion;
	public String sTipoReporteExtra="";
	public String sValorCampoGeneral="";
	public Boolean esReporteDinamico=false;
	public Boolean esReporteAccionProceso=false;
	public Boolean esRecargarFks=false;
	public String sPathReporteDinamico="";
	
	public RubroEmpleaParameterReturnGeneral rubroempleaReturnGeneral;
	public RubroEmpleaParameterReturnGeneral rubroempleaParameterGeneral;
	
	

	public HistorialPagoNomiLogic historialpagonomiLogic=null;

	public HistorialPagoNomiLogic getHistorialPagoNomiLogic() {
		return historialpagonomiLogic;
	}

	public void setHistorialPagoNomiLogic(HistorialPagoNomiLogic historialpagonomiLogic) {
		this.historialpagonomiLogic = historialpagonomiLogic;
	}


	public RubroEstructuraLogic rubroestructuraLogic=null;

	public RubroEstructuraLogic getRubroEstructuraLogic() {
		return rubroestructuraLogic;
	}

	public void setRubroEstructuraLogic(RubroEstructuraLogic rubroestructuraLogic) {
		this.rubroestructuraLogic = rubroestructuraLogic;
	}


	public DefiProvisionEmpleadoLogic defiprovisionempleadoLogic=null;

	public DefiProvisionEmpleadoLogic getDefiProvisionEmpleadoLogic() {
		return defiprovisionempleadoLogic;
	}

	public void setDefiProvisionEmpleadoLogic(DefiProvisionEmpleadoLogic defiprovisionempleadoLogic) {
		this.defiprovisionempleadoLogic = defiprovisionempleadoLogic;
	}


	public EmpleadoPagoRubroLogic empleadopagorubroLogic=null;

	public EmpleadoPagoRubroLogic getEmpleadoPagoRubroLogic() {
		return empleadopagorubroLogic;
	}

	public void setEmpleadoPagoRubroLogic(EmpleadoPagoRubroLogic empleadopagorubroLogic) {
		this.empleadopagorubroLogic = empleadopagorubroLogic;
	}


	public HistorialPagoMesNomiLogic historialpagomesnomiLogic=null;

	public HistorialPagoMesNomiLogic getHistorialPagoMesNomiLogic() {
		return historialpagomesnomiLogic;
	}

	public void setHistorialPagoMesNomiLogic(HistorialPagoMesNomiLogic historialpagomesnomiLogic) {
		this.historialpagomesnomiLogic = historialpagomesnomiLogic;
	}


	public RubroEmpleadoLogic rubroempleadoLogic=null;

	public RubroEmpleadoLogic getRubroEmpleadoLogic() {
		return rubroempleadoLogic;
	}

	public void setRubroEmpleadoLogic(RubroEmpleadoLogic rubroempleadoLogic) {
		this.rubroempleadoLogic = rubroempleadoLogic;
	}


	public ValorRubroVariableLogic valorrubrovariableLogic=null;

	public ValorRubroVariableLogic getValorRubroVariableLogic() {
		return valorrubrovariableLogic;
	}

	public void setValorRubroVariableLogic(ValorRubroVariableLogic valorrubrovariableLogic) {
		this.valorrubrovariableLogic = valorrubrovariableLogic;
	}


	public TipoPrestamoLogic tipoprestamoLogic=null;

	public TipoPrestamoLogic getTipoPrestamoLogic() {
		return tipoprestamoLogic;
	}

	public void setTipoPrestamoLogic(TipoPrestamoLogic tipoprestamoLogic) {
		this.tipoprestamoLogic = tipoprestamoLogic;
	}


	public RubroEmpleaCuentaContableLogic rubroempleacuentacontableLogic=null;

	public RubroEmpleaCuentaContableLogic getRubroEmpleaCuentaContableLogic() {
		return rubroempleacuentacontableLogic;
	}

	public void setRubroEmpleaCuentaContableLogic(RubroEmpleaCuentaContableLogic rubroempleacuentacontableLogic) {
		this.rubroempleacuentacontableLogic = rubroempleacuentacontableLogic;
	}
 	
	public JasperPrint jasperPrint = null;
	
	public Long lIdUsuarioSesion=0L;				
	
	public Boolean isEsNuevoRubroEmplea=false;
	public Boolean esParaAccionDesdeFormularioRubroEmplea=false;
	public Boolean isEsMantenimientoRelacionesRelacionadoUnico=false;
	public Boolean isEsMantenimientoRelaciones=false;
	public Boolean isEsMantenimientoRelacionado=false;	
	public Boolean isContieneImagenes=false;
		
	//public Boolean conTotales=false; //Viene heredado de JInternalFrameBase
	//public Boolean esParaBusquedaForeignKey=false;
	
	
	protected RubroEmpleaSessionBeanAdditional rubroempleaSessionBeanAdditional=null;
	
	public RubroEmpleaSessionBeanAdditional getRubroEmpleaSessionBeanAdditional() {
		return this.rubroempleaSessionBeanAdditional;
	}
	
	public void setRubroEmpleaSessionBeanAdditional(RubroEmpleaSessionBeanAdditional rubroempleaSessionBeanAdditional) {
		try {
			this.rubroempleaSessionBeanAdditional=rubroempleaSessionBeanAdditional;
		} catch(Exception e) {
			;
		}
	}
	
	
	
	
	protected RubroEmpleaBeanSwingJInternalFrameAdditional rubroempleaBeanSwingJInternalFrameAdditional=null;
	//public class RubroEmpleaBeanSwingJInternalFrame
	
	public RubroEmpleaBeanSwingJInternalFrameAdditional getRubroEmpleaBeanSwingJInternalFrameAdditional() {
		return this.rubroempleaBeanSwingJInternalFrameAdditional;
	}
	
	public void setRubroEmpleaBeanSwingJInternalFrameAdditional(RubroEmpleaBeanSwingJInternalFrameAdditional rubroempleaBeanSwingJInternalFrameAdditional) {
		try {
			this.rubroempleaBeanSwingJInternalFrameAdditional=rubroempleaBeanSwingJInternalFrameAdditional;
		} catch(Exception e) {
			;
		}
	}
	
	
	
	
	//ESTA EN PADRE
	
	//public RubroEmpleaLogic rubroempleaLogic;
	public SistemaLogicAdditional sistemaLogicAdditional;
	
	
	public RubroEmplea rubroempleaBean;
	public RubroEmpleaConstantesFunciones rubroempleaConstantesFunciones;
	//public RubroEmpleaParameterReturnGeneral rubroempleaReturnGeneral;
	
	//FK
	
	public EmpresaLogic empresaLogic;
	public TipoCalculoLogic tipocalculoLogic;
	public TipoRubroEmpleaLogic tiporubroempleaLogic;
	public TipoGrupoRubroEmpleaLogic tipogruporubroempleaLogic;
	
	//PARAMETROS
	
	
	//public List<RubroEmplea> rubroempleas;	
	//public List<RubroEmplea> rubroempleasEliminados;
	//public List<RubroEmplea> rubroempleasAux;
	
	public String sAccionMantenimiento="";
	public String sAccionBusqueda="";
	public String sAccionAdicional="";
	public String sUltimaBusqueda="";
	
	public Mensaje mensaje;
	
	
	public String sVisibilidadTablaBusquedas="";					
	public String sVisibilidadTablaElementos="";	
	public String sVisibilidadTablaAcciones="";			
	
	public Boolean isVisibilidadCeldaNuevoRubroEmplea=false;
	public Boolean isVisibilidadCeldaDuplicarRubroEmplea=true;
	public Boolean isVisibilidadCeldaCopiarRubroEmplea=true;
	public Boolean isVisibilidadCeldaVerFormRubroEmplea=true;
	public Boolean isVisibilidadCeldaOrdenRubroEmplea=true;
	public Boolean isVisibilidadCeldaNuevoRelacionesRubroEmplea=false;
	public Boolean isVisibilidadCeldaModificarRubroEmplea=false;
	public Boolean isVisibilidadCeldaActualizarRubroEmplea=false;
	public Boolean isVisibilidadCeldaEliminarRubroEmplea=false;
	public Boolean isVisibilidadCeldaCancelarRubroEmplea=false;
	public Boolean isVisibilidadCeldaGuardarRubroEmplea=false;	
	public Boolean isVisibilidadCeldaGuardarCambiosRubroEmplea=false;	
	
	
	public Boolean isVisibilidadFK_IdEmpresa=false;
	public Boolean isVisibilidadFK_IdTipoCalculo=false;
	public Boolean isVisibilidadFK_IdTipoGrupoRubroEmplea=false;
	public Boolean isVisibilidadFK_IdTipoRubroEmplea=false;
	
	public Long getiIdNuevoRubroEmplea() {
		return this.iIdNuevoRubroEmplea;
	}

	public void setiIdNuevoRubroEmplea(Long iIdNuevoRubroEmplea) {
		this.iIdNuevoRubroEmplea = iIdNuevoRubroEmplea;
	}
	
	public Long getidRubroEmpleaActual() {
		return this.idRubroEmpleaActual;
	}

	public void setidRubroEmpleaActual(Long idRubroEmpleaActual) {
		this.idRubroEmpleaActual = idRubroEmpleaActual;
	}
	
	public int getrowIndexActual() {
		return this.rowIndexActual;
	}

	public void setrowIndexActual(int rowIndexActual) {
		this.rowIndexActual=rowIndexActual;
	}
	
	
	public RubroEmplea getrubroemplea() {
		return this.rubroemplea;
	}

	public void setrubroemplea(RubroEmplea rubroemplea) {
		this.rubroemplea = rubroemplea;
	}
	
	public RubroEmplea getrubroempleaAux() {
		return this.rubroempleaAux;
	}

	public void setrubroempleaAux(RubroEmplea rubroempleaAux) {
		this.rubroempleaAux = rubroempleaAux;
	}				
	
	public RubroEmplea getrubroempleaAnterior() {
		return this.rubroempleaAnterior;
	}

	public void setrubroempleaAnterior(RubroEmplea rubroempleaAnterior) {
		this.rubroempleaAnterior = rubroempleaAnterior;
	}	
	
	public RubroEmplea getrubroempleaTotales() {
		return this.rubroempleaTotales;
	}

	public void setrubroempleaTotales(RubroEmplea rubroempleaTotales) {
		this.rubroempleaTotales = rubroempleaTotales;
	}	
	
	public RubroEmplea getrubroempleaBean() {
		return this.rubroempleaBean;
	}

	public void setrubroempleaBean(RubroEmplea rubroempleaBean) {
		this.rubroempleaBean = rubroempleaBean;
	}	
	
	public RubroEmpleaParameterReturnGeneral getrubroempleaReturnGeneral() {
		return this.rubroempleaReturnGeneral;
	}

	public void setrubroempleaReturnGeneral(RubroEmpleaParameterReturnGeneral rubroempleaReturnGeneral) {
		this.rubroempleaReturnGeneral = rubroempleaReturnGeneral;
	}	
	
	
	public Long id_empresaFK_IdEmpresa=-1L;

	public Long getid_empresaFK_IdEmpresa() {
		return this.id_empresaFK_IdEmpresa;
	}

	public void setid_empresaFK_IdEmpresa(Long id_empresaFK_IdEmpresa) {
		this.id_empresaFK_IdEmpresa = id_empresaFK_IdEmpresa;
	}

	public Long id_tipo_calculoFK_IdTipoCalculo=-1L;

	public Long getid_tipo_calculoFK_IdTipoCalculo() {
		return this.id_tipo_calculoFK_IdTipoCalculo;
	}

	public void setid_tipo_calculoFK_IdTipoCalculo(Long id_tipo_calculoFK_IdTipoCalculo) {
		this.id_tipo_calculoFK_IdTipoCalculo = id_tipo_calculoFK_IdTipoCalculo;
	}

	public Long id_tipo_grupo_rubro_empleaFK_IdTipoGrupoRubroEmplea=-1L;

	public Long getid_tipo_grupo_rubro_empleaFK_IdTipoGrupoRubroEmplea() {
		return this.id_tipo_grupo_rubro_empleaFK_IdTipoGrupoRubroEmplea;
	}

	public void setid_tipo_grupo_rubro_empleaFK_IdTipoGrupoRubroEmplea(Long id_tipo_grupo_rubro_empleaFK_IdTipoGrupoRubroEmplea) {
		this.id_tipo_grupo_rubro_empleaFK_IdTipoGrupoRubroEmplea = id_tipo_grupo_rubro_empleaFK_IdTipoGrupoRubroEmplea;
	}

	public Long id_tipo_rubro_empleaFK_IdTipoRubroEmplea=-1L;

	public Long getid_tipo_rubro_empleaFK_IdTipoRubroEmplea() {
		return this.id_tipo_rubro_empleaFK_IdTipoRubroEmplea;
	}

	public void setid_tipo_rubro_empleaFK_IdTipoRubroEmplea(Long id_tipo_rubro_empleaFK_IdTipoRubroEmplea) {
		this.id_tipo_rubro_empleaFK_IdTipoRubroEmplea = id_tipo_rubro_empleaFK_IdTipoRubroEmplea;
	}

		
	
	//ELEMENTOS TABLAS PARAMETOS
	
	
	
	
	
	
	//ELEMENTOS TABLAS PARAMETOS_FIN
	
	
	public RubroEmpleaLogic getRubroEmpleaLogic()	{		
		return rubroempleaLogic;
	}

	public void setRubroEmpleaLogic(RubroEmpleaLogic rubroempleaLogic) {
		this.rubroempleaLogic = rubroempleaLogic;
	}
	
	
	public void setsFinalQueryGeneral(String sFinalQueryGeneral) {
		this.sFinalQueryGeneral=sFinalQueryGeneral;
	}
	
	public String getsFinalQueryGeneral() {
		return this.sFinalQueryGeneral;
	}
		
	public Boolean getIsGuardarCambiosEnLote() {
		return isGuardarCambiosEnLote;
	}

	public void setIsGuardarCambiosEnLote(Boolean isGuardarCambiosEnLote) {
		this.isGuardarCambiosEnLote = isGuardarCambiosEnLote;
	}
	
	public Boolean getIsCargarCombosDependencia() {
		return isCargarCombosDependencia;
	}

	public void setIsCargarCombosDependencia(Boolean isCargarCombosDependencia) {
		this.isCargarCombosDependencia = isCargarCombosDependencia;
	}
	
	public Boolean getIsEsNuevoRubroEmplea() {
		return isEsNuevoRubroEmplea;
	}

	public void setIsEsNuevoRubroEmplea(Boolean isEsNuevoRubroEmplea) {
		this.isEsNuevoRubroEmplea = isEsNuevoRubroEmplea;
	}

	public Boolean getEsParaAccionDesdeFormularioRubroEmplea() {
		return esParaAccionDesdeFormularioRubroEmplea;
	}
	
	public void setEsParaAccionDesdeFormularioRubroEmplea(Boolean esParaAccionDesdeFormularioRubroEmplea) {
		this.esParaAccionDesdeFormularioRubroEmplea = esParaAccionDesdeFormularioRubroEmplea;
	}
	
	public Boolean getIsEsMantenimientoRelacionesRelacionadoUnico() {
		return isEsMantenimientoRelacionesRelacionadoUnico;
	}

	public void setIsEsMantenimientoRelacionesRelacionadoUnico(Boolean isEsMantenimientoRelacionesRelacionadoUnico) {
		this.isEsMantenimientoRelacionesRelacionadoUnico = isEsMantenimientoRelacionesRelacionadoUnico;
	}

	public Boolean getIsEsMantenimientoRelaciones() {
		return isEsMantenimientoRelaciones;
	}

	public void setIsEsMantenimientoRelaciones(Boolean isEsMantenimientoRelaciones) {
		this.isEsMantenimientoRelaciones = isEsMantenimientoRelaciones;
	}

	public Boolean getIsEsMantenimientoRelacionado() {
		return isEsMantenimientoRelacionado;
	}

	public void setIsEsMantenimientoRelacionado(Boolean isEsMantenimientoRelacionado) {
		this.isEsMantenimientoRelacionado = isEsMantenimientoRelacionado;
	}

	public Boolean getesParaBusquedaForeignKey() {
		return esParaBusquedaForeignKey;
	}

	public void setesParaBusquedaForeignKey(Boolean esParaBusquedaForeignKey) {
		this.esParaBusquedaForeignKey = esParaBusquedaForeignKey;
	}

	public Boolean getIsContieneImagenes() {
		return isContieneImagenes;
	}

	public void setIsContieneImagenes(Boolean isContieneImagenes) {
		this.isContieneImagenes = isContieneImagenes;
	}		
	
	
	public void cargarCombosEmpresasForeignKeyLista(String sFinalQuery)throws Exception
	{
		try
		{
			this.empresasForeignKey=new ArrayList<Empresa>();

			ArrayList<Classe> clases=new ArrayList<Classe>();
			ArrayList<String> arrClasses=new ArrayList<String>();
			Classe classe=new Classe();
			DatosDeep datosDeep=new DatosDeep(false,DeepLoadType.INCLUDE,clases,"");

			EmpresaLogic empresaLogic=new EmpresaLogic();

			//empresaLogic.getEmpresaDataAccess().setIsForForeingKeyData(true);

			if(this.rubroempleaSessionBean==null) {
				this.rubroempleaSessionBean=new RubroEmpleaSessionBean();
			}

			if(!this.rubroempleaSessionBean.getisBusquedaDesdeForeignKeySesionEmpresa()) {
				//ARCHITECTURE
				if(Constantes.ISUSAEJBLOGICLAYER) {
					//empresaLogic.getEmpresaDataAccess().setIsForForeingKeyData(true);

					empresaLogic.getTodosEmpresasWithConnection(sFinalQuery,new Pagination());

					this.empresasForeignKey=empresaLogic.getEmpresas();

				} else if(Constantes.ISUSAEJBREMOTE) {

				} else if(Constantes.ISUSAEJBHOME) {
				}


				//ARCHITECTURE
			} else {
				if(!this.conCargarMinimo) {
					this.setVisibilidadBusquedasParaEmpresa(true);
				}
				//ARCHITECTURE

				if(Constantes.ISUSAEJBLOGICLAYER) {
					empresaLogic.getEntityWithConnection(rubroempleaSessionBean.getlidEmpresaActual());
					this.empresasForeignKey.add(empresaLogic.getEmpresa());
				} else if(Constantes.ISUSAEJBREMOTE) {
				} else if(Constantes.ISUSAEJBHOME) {
				}
				//ARCHITECTURE
			}
		}
		catch(Exception e)
		{
			throw e;
		}
	}

	public void cargarCombosTipoCalculosForeignKeyLista(String sFinalQuery)throws Exception
	{
		try
		{
			this.tipocalculosForeignKey=new ArrayList<TipoCalculo>();

			ArrayList<Classe> clases=new ArrayList<Classe>();
			ArrayList<String> arrClasses=new ArrayList<String>();
			Classe classe=new Classe();
			DatosDeep datosDeep=new DatosDeep(false,DeepLoadType.INCLUDE,clases,"");

			TipoCalculoLogic tipocalculoLogic=new TipoCalculoLogic();

			//tipocalculoLogic.getTipoCalculoDataAccess().setIsForForeingKeyData(true);

			if(this.rubroempleaSessionBean==null) {
				this.rubroempleaSessionBean=new RubroEmpleaSessionBean();
			}

			if(!this.rubroempleaSessionBean.getisBusquedaDesdeForeignKeySesionTipoCalculo()) {
				//ARCHITECTURE
				if(Constantes.ISUSAEJBLOGICLAYER) {
					//tipocalculoLogic.getTipoCalculoDataAccess().setIsForForeingKeyData(true);

					tipocalculoLogic.getTodosTipoCalculosWithConnection(sFinalQuery,new Pagination());

					this.tipocalculosForeignKey=tipocalculoLogic.getTipoCalculos();

				} else if(Constantes.ISUSAEJBREMOTE) {

				} else if(Constantes.ISUSAEJBHOME) {
				}


				//ARCHITECTURE
			} else {
				if(!this.conCargarMinimo) {
					this.setVisibilidadBusquedasParaTipoCalculo(true);
				}
				//ARCHITECTURE

				if(Constantes.ISUSAEJBLOGICLAYER) {
					tipocalculoLogic.getEntityWithConnection(rubroempleaSessionBean.getlidTipoCalculoActual());
					this.tipocalculosForeignKey.add(tipocalculoLogic.getTipoCalculo());
				} else if(Constantes.ISUSAEJBREMOTE) {
				} else if(Constantes.ISUSAEJBHOME) {
				}
				//ARCHITECTURE
			}
		}
		catch(Exception e)
		{
			throw e;
		}
	}

	public void cargarCombosTipoRubroEmpleasForeignKeyLista(String sFinalQuery)throws Exception
	{
		try
		{
			this.tiporubroempleasForeignKey=new ArrayList<TipoRubroEmplea>();

			ArrayList<Classe> clases=new ArrayList<Classe>();
			ArrayList<String> arrClasses=new ArrayList<String>();
			Classe classe=new Classe();
			DatosDeep datosDeep=new DatosDeep(false,DeepLoadType.INCLUDE,clases,"");

			TipoRubroEmpleaLogic tiporubroempleaLogic=new TipoRubroEmpleaLogic();

			//tiporubroempleaLogic.getTipoRubroEmpleaDataAccess().setIsForForeingKeyData(true);

			if(this.rubroempleaSessionBean==null) {
				this.rubroempleaSessionBean=new RubroEmpleaSessionBean();
			}

			if(!this.rubroempleaSessionBean.getisBusquedaDesdeForeignKeySesionTipoRubroEmplea()) {
				//ARCHITECTURE
				if(Constantes.ISUSAEJBLOGICLAYER) {
					//tiporubroempleaLogic.getTipoRubroEmpleaDataAccess().setIsForForeingKeyData(true);

					tiporubroempleaLogic.getTodosTipoRubroEmpleasWithConnection(sFinalQuery,new Pagination());

					this.tiporubroempleasForeignKey=tiporubroempleaLogic.getTipoRubroEmpleas();

				} else if(Constantes.ISUSAEJBREMOTE) {

				} else if(Constantes.ISUSAEJBHOME) {
				}


				//ARCHITECTURE
			} else {
				if(!this.conCargarMinimo) {
					this.setVisibilidadBusquedasParaTipoRubroEmplea(true);
				}
				//ARCHITECTURE

				if(Constantes.ISUSAEJBLOGICLAYER) {
					tiporubroempleaLogic.getEntityWithConnection(rubroempleaSessionBean.getlidTipoRubroEmpleaActual());
					this.tiporubroempleasForeignKey.add(tiporubroempleaLogic.getTipoRubroEmplea());
				} else if(Constantes.ISUSAEJBREMOTE) {
				} else if(Constantes.ISUSAEJBHOME) {
				}
				//ARCHITECTURE
			}
		}
		catch(Exception e)
		{
			throw e;
		}
	}

	public void cargarCombosTipoGrupoRubroEmpleasForeignKeyLista(String sFinalQuery)throws Exception
	{
		try
		{
			this.tipogruporubroempleasForeignKey=new ArrayList<TipoGrupoRubroEmplea>();

			ArrayList<Classe> clases=new ArrayList<Classe>();
			ArrayList<String> arrClasses=new ArrayList<String>();
			Classe classe=new Classe();
			DatosDeep datosDeep=new DatosDeep(false,DeepLoadType.INCLUDE,clases,"");

			TipoGrupoRubroEmpleaLogic tipogruporubroempleaLogic=new TipoGrupoRubroEmpleaLogic();

			//tipogruporubroempleaLogic.getTipoGrupoRubroEmpleaDataAccess().setIsForForeingKeyData(true);

			if(this.rubroempleaSessionBean==null) {
				this.rubroempleaSessionBean=new RubroEmpleaSessionBean();
			}

			if(!this.rubroempleaSessionBean.getisBusquedaDesdeForeignKeySesionTipoGrupoRubroEmplea()) {
				//ARCHITECTURE
				if(Constantes.ISUSAEJBLOGICLAYER) {
					//tipogruporubroempleaLogic.getTipoGrupoRubroEmpleaDataAccess().setIsForForeingKeyData(true);

					tipogruporubroempleaLogic.getTodosTipoGrupoRubroEmpleasWithConnection(sFinalQuery,new Pagination());

					this.tipogruporubroempleasForeignKey=tipogruporubroempleaLogic.getTipoGrupoRubroEmpleas();

				} else if(Constantes.ISUSAEJBREMOTE) {

				} else if(Constantes.ISUSAEJBHOME) {
				}


				//ARCHITECTURE
			} else {
				if(!this.conCargarMinimo) {
					this.setVisibilidadBusquedasParaTipoGrupoRubroEmplea(true);
				}
				//ARCHITECTURE

				if(Constantes.ISUSAEJBLOGICLAYER) {
					tipogruporubroempleaLogic.getEntityWithConnection(rubroempleaSessionBean.getlidTipoGrupoRubroEmpleaActual());
					this.tipogruporubroempleasForeignKey.add(tipogruporubroempleaLogic.getTipoGrupoRubroEmplea());
				} else if(Constantes.ISUSAEJBREMOTE) {
				} else if(Constantes.ISUSAEJBHOME) {
				}
				//ARCHITECTURE
			}
		}
		catch(Exception e)
		{
			throw e;
		}
	}

	
	
	public void setActualEmpresaForeignKey(Long idEmpresaSeleccionado,Boolean conCombosBusquedas,String sFormularioTipoBusqueda)throws Exception
	{
		try
		{
			Empresa  empresaTemp=null;

			for(Empresa empresaAux:empresasForeignKey) {
				if(empresaAux.getId()!=null && empresaAux.getId().equals(idEmpresaSeleccionado)) {
					empresaTemp=empresaAux;
					break;
				}
			}

			if(sFormularioTipoBusqueda.equals("Formulario") || sFormularioTipoBusqueda.equals("Todos")){
				if(empresaTemp!=null) {

					if(this.rubroemplea!=null) {
						this.rubroemplea.setEmpresa(empresaTemp);
					}

					if(this.jInternalFrameDetalleFormRubroEmplea!=null) {
						this.jInternalFrameDetalleFormRubroEmplea.jComboBoxid_empresaRubroEmplea.setSelectedItem(empresaTemp);
					}
				} else {
					//jComboBoxid_empresaRubroEmplea.setSelectedItem(empresaTemp);
					if(this.jInternalFrameDetalleFormRubroEmplea!=null) {
						if(this.jInternalFrameDetalleFormRubroEmplea.jComboBoxid_empresaRubroEmplea.getItemCount()>0) {
							this.jInternalFrameDetalleFormRubroEmplea.jComboBoxid_empresaRubroEmplea.setSelectedIndex(0);
						}
					}
				}
			}

			if(conCombosBusquedas) {

		//BYDAN_BUSQUEDAS
						

					}

		}
		catch(Exception e)
		{
			throw e;
		}
	}

	public String getActualEmpresaForeignKeyDescripcion(Long idEmpresaSeleccionado)throws Exception
	{
		String sDescripcion="";

		try
		{
			Empresa  empresaTemp=null;

			for(Empresa empresaAux:empresasForeignKey) {
				if(empresaAux.getId()!=null && empresaAux.getId().equals(idEmpresaSeleccionado)) {
					empresaTemp=empresaAux;
					break;
				}
			}


			sDescripcion=EmpresaConstantesFunciones.getEmpresaDescripcion(empresaTemp);
		}
		catch(Exception e)
		{
			throw e;
		}

		return sDescripcion;
	}

	@SuppressWarnings("rawtypes")
	public void setActualEmpresaForeignKeyGenerico(Long idEmpresaSeleccionado,JComboBox jComboBoxid_empresaRubroEmpleaGenerico)throws Exception
	{
		try
		{
			Empresa  empresaTemp=null;

			for(Empresa empresaAux:empresasForeignKey) {
				if(empresaAux.getId()!=null && empresaAux.getId().equals(idEmpresaSeleccionado)) {
					empresaTemp=empresaAux;
					break;
				}
			}

			if(empresaTemp!=null) {
				jComboBoxid_empresaRubroEmpleaGenerico.setSelectedItem(empresaTemp);
			} else {
				if(jComboBoxid_empresaRubroEmpleaGenerico!=null && jComboBoxid_empresaRubroEmpleaGenerico.getItemCount()>0) {
					jComboBoxid_empresaRubroEmpleaGenerico.setSelectedIndex(0);
				}
			}

		}
		catch(Exception e)
		{
			throw e;
		}

	}

	public void setActualTipoCalculoForeignKey(Long idTipoCalculoSeleccionado,Boolean conCombosBusquedas,String sFormularioTipoBusqueda)throws Exception
	{
		try
		{
			TipoCalculo  tipocalculoTemp=null;

			for(TipoCalculo tipocalculoAux:tipocalculosForeignKey) {
				if(tipocalculoAux.getId()!=null && tipocalculoAux.getId().equals(idTipoCalculoSeleccionado)) {
					tipocalculoTemp=tipocalculoAux;
					break;
				}
			}

			if(sFormularioTipoBusqueda.equals("Formulario") || sFormularioTipoBusqueda.equals("Todos")){
				if(tipocalculoTemp!=null) {

					if(this.rubroemplea!=null) {
						this.rubroemplea.setTipoCalculo(tipocalculoTemp);
					}

					if(this.jInternalFrameDetalleFormRubroEmplea!=null) {
						this.jInternalFrameDetalleFormRubroEmplea.jComboBoxid_tipo_calculoRubroEmplea.setSelectedItem(tipocalculoTemp);
					}
				} else {
					//jComboBoxid_tipo_calculoRubroEmplea.setSelectedItem(tipocalculoTemp);
					if(this.jInternalFrameDetalleFormRubroEmplea!=null) {
						if(this.jInternalFrameDetalleFormRubroEmplea.jComboBoxid_tipo_calculoRubroEmplea.getItemCount()>0) {
							this.jInternalFrameDetalleFormRubroEmplea.jComboBoxid_tipo_calculoRubroEmplea.setSelectedIndex(0);
						}
					}
				}
			}

			if(conCombosBusquedas) {

		//BYDAN_BUSQUEDAS
						
				if(sFormularioTipoBusqueda.equals("FK_IdTipoCalculo") || sFormularioTipoBusqueda.equals("Todos")){
					if(tipocalculoTemp!=null && jComboBoxid_tipo_calculoFK_IdTipoCalculoRubroEmplea!=null) {
						jComboBoxid_tipo_calculoFK_IdTipoCalculoRubroEmplea.setSelectedItem(tipocalculoTemp);
					} else {
						if(jComboBoxid_tipo_calculoFK_IdTipoCalculoRubroEmplea!=null) {
							//jComboBoxid_tipo_calculoFK_IdTipoCalculoRubroEmplea.setSelectedItem(tipocalculoTemp);
							if(jComboBoxid_tipo_calculoFK_IdTipoCalculoRubroEmplea.getItemCount()>0) {
								jComboBoxid_tipo_calculoFK_IdTipoCalculoRubroEmplea.setSelectedIndex(0);
							}
						}
					}
				}

					}

		}
		catch(Exception e)
		{
			throw e;
		}
	}

	public String getActualTipoCalculoForeignKeyDescripcion(Long idTipoCalculoSeleccionado)throws Exception
	{
		String sDescripcion="";

		try
		{
			TipoCalculo  tipocalculoTemp=null;

			for(TipoCalculo tipocalculoAux:tipocalculosForeignKey) {
				if(tipocalculoAux.getId()!=null && tipocalculoAux.getId().equals(idTipoCalculoSeleccionado)) {
					tipocalculoTemp=tipocalculoAux;
					break;
				}
			}


			sDescripcion=TipoCalculoConstantesFunciones.getTipoCalculoDescripcion(tipocalculoTemp);
		}
		catch(Exception e)
		{
			throw e;
		}

		return sDescripcion;
	}

	@SuppressWarnings("rawtypes")
	public void setActualTipoCalculoForeignKeyGenerico(Long idTipoCalculoSeleccionado,JComboBox jComboBoxid_tipo_calculoRubroEmpleaGenerico)throws Exception
	{
		try
		{
			TipoCalculo  tipocalculoTemp=null;

			for(TipoCalculo tipocalculoAux:tipocalculosForeignKey) {
				if(tipocalculoAux.getId()!=null && tipocalculoAux.getId().equals(idTipoCalculoSeleccionado)) {
					tipocalculoTemp=tipocalculoAux;
					break;
				}
			}

			if(tipocalculoTemp!=null) {
				jComboBoxid_tipo_calculoRubroEmpleaGenerico.setSelectedItem(tipocalculoTemp);
			} else {
				if(jComboBoxid_tipo_calculoRubroEmpleaGenerico!=null && jComboBoxid_tipo_calculoRubroEmpleaGenerico.getItemCount()>0) {
					jComboBoxid_tipo_calculoRubroEmpleaGenerico.setSelectedIndex(0);
				}
			}

		}
		catch(Exception e)
		{
			throw e;
		}

	}

	public void setActualTipoRubroEmpleaForeignKey(Long idTipoRubroEmpleaSeleccionado,Boolean conCombosBusquedas,String sFormularioTipoBusqueda)throws Exception
	{
		try
		{
			TipoRubroEmplea  tiporubroempleaTemp=null;

			for(TipoRubroEmplea tiporubroempleaAux:tiporubroempleasForeignKey) {
				if(tiporubroempleaAux.getId()!=null && tiporubroempleaAux.getId().equals(idTipoRubroEmpleaSeleccionado)) {
					tiporubroempleaTemp=tiporubroempleaAux;
					break;
				}
			}

			if(sFormularioTipoBusqueda.equals("Formulario") || sFormularioTipoBusqueda.equals("Todos")){
				if(tiporubroempleaTemp!=null) {

					if(this.rubroemplea!=null) {
						this.rubroemplea.setTipoRubroEmplea(tiporubroempleaTemp);
					}

					if(this.jInternalFrameDetalleFormRubroEmplea!=null) {
						this.jInternalFrameDetalleFormRubroEmplea.jComboBoxid_tipo_rubro_empleaRubroEmplea.setSelectedItem(tiporubroempleaTemp);
					}
				} else {
					//jComboBoxid_tipo_rubro_empleaRubroEmplea.setSelectedItem(tiporubroempleaTemp);
					if(this.jInternalFrameDetalleFormRubroEmplea!=null) {
						if(this.jInternalFrameDetalleFormRubroEmplea.jComboBoxid_tipo_rubro_empleaRubroEmplea.getItemCount()>0) {
							this.jInternalFrameDetalleFormRubroEmplea.jComboBoxid_tipo_rubro_empleaRubroEmplea.setSelectedIndex(0);
						}
					}
				}
			}

			if(conCombosBusquedas) {

		//BYDAN_BUSQUEDAS
						
				if(sFormularioTipoBusqueda.equals("FK_IdTipoRubroEmplea") || sFormularioTipoBusqueda.equals("Todos")){
					if(tiporubroempleaTemp!=null && jComboBoxid_tipo_rubro_empleaFK_IdTipoRubroEmpleaRubroEmplea!=null) {
						jComboBoxid_tipo_rubro_empleaFK_IdTipoRubroEmpleaRubroEmplea.setSelectedItem(tiporubroempleaTemp);
					} else {
						if(jComboBoxid_tipo_rubro_empleaFK_IdTipoRubroEmpleaRubroEmplea!=null) {
							//jComboBoxid_tipo_rubro_empleaFK_IdTipoRubroEmpleaRubroEmplea.setSelectedItem(tiporubroempleaTemp);
							if(jComboBoxid_tipo_rubro_empleaFK_IdTipoRubroEmpleaRubroEmplea.getItemCount()>0) {
								jComboBoxid_tipo_rubro_empleaFK_IdTipoRubroEmpleaRubroEmplea.setSelectedIndex(0);
							}
						}
					}
				}

					}

		}
		catch(Exception e)
		{
			throw e;
		}
	}

	public String getActualTipoRubroEmpleaForeignKeyDescripcion(Long idTipoRubroEmpleaSeleccionado)throws Exception
	{
		String sDescripcion="";

		try
		{
			TipoRubroEmplea  tiporubroempleaTemp=null;

			for(TipoRubroEmplea tiporubroempleaAux:tiporubroempleasForeignKey) {
				if(tiporubroempleaAux.getId()!=null && tiporubroempleaAux.getId().equals(idTipoRubroEmpleaSeleccionado)) {
					tiporubroempleaTemp=tiporubroempleaAux;
					break;
				}
			}


			sDescripcion=TipoRubroEmpleaConstantesFunciones.getTipoRubroEmpleaDescripcion(tiporubroempleaTemp);
		}
		catch(Exception e)
		{
			throw e;
		}

		return sDescripcion;
	}

	@SuppressWarnings("rawtypes")
	public void setActualTipoRubroEmpleaForeignKeyGenerico(Long idTipoRubroEmpleaSeleccionado,JComboBox jComboBoxid_tipo_rubro_empleaRubroEmpleaGenerico)throws Exception
	{
		try
		{
			TipoRubroEmplea  tiporubroempleaTemp=null;

			for(TipoRubroEmplea tiporubroempleaAux:tiporubroempleasForeignKey) {
				if(tiporubroempleaAux.getId()!=null && tiporubroempleaAux.getId().equals(idTipoRubroEmpleaSeleccionado)) {
					tiporubroempleaTemp=tiporubroempleaAux;
					break;
				}
			}

			if(tiporubroempleaTemp!=null) {
				jComboBoxid_tipo_rubro_empleaRubroEmpleaGenerico.setSelectedItem(tiporubroempleaTemp);
			} else {
				if(jComboBoxid_tipo_rubro_empleaRubroEmpleaGenerico!=null && jComboBoxid_tipo_rubro_empleaRubroEmpleaGenerico.getItemCount()>0) {
					jComboBoxid_tipo_rubro_empleaRubroEmpleaGenerico.setSelectedIndex(0);
				}
			}

		}
		catch(Exception e)
		{
			throw e;
		}

	}

	public void setActualTipoGrupoRubroEmpleaForeignKey(Long idTipoGrupoRubroEmpleaSeleccionado,Boolean conCombosBusquedas,String sFormularioTipoBusqueda)throws Exception
	{
		try
		{
			TipoGrupoRubroEmplea  tipogruporubroempleaTemp=null;

			for(TipoGrupoRubroEmplea tipogruporubroempleaAux:tipogruporubroempleasForeignKey) {
				if(tipogruporubroempleaAux.getId()!=null && tipogruporubroempleaAux.getId().equals(idTipoGrupoRubroEmpleaSeleccionado)) {
					tipogruporubroempleaTemp=tipogruporubroempleaAux;
					break;
				}
			}

			if(sFormularioTipoBusqueda.equals("Formulario") || sFormularioTipoBusqueda.equals("Todos")){
				if(tipogruporubroempleaTemp!=null) {

					if(this.rubroemplea!=null) {
						this.rubroemplea.setTipoGrupoRubroEmplea(tipogruporubroempleaTemp);
					}

					if(this.jInternalFrameDetalleFormRubroEmplea!=null) {
						this.jInternalFrameDetalleFormRubroEmplea.jComboBoxid_tipo_grupo_rubro_empleaRubroEmplea.setSelectedItem(tipogruporubroempleaTemp);
					}
				} else {
					//jComboBoxid_tipo_grupo_rubro_empleaRubroEmplea.setSelectedItem(tipogruporubroempleaTemp);
					if(this.jInternalFrameDetalleFormRubroEmplea!=null) {
						if(this.jInternalFrameDetalleFormRubroEmplea.jComboBoxid_tipo_grupo_rubro_empleaRubroEmplea.getItemCount()>0) {
							this.jInternalFrameDetalleFormRubroEmplea.jComboBoxid_tipo_grupo_rubro_empleaRubroEmplea.setSelectedIndex(0);
						}
					}
				}
			}

			if(conCombosBusquedas) {

		//BYDAN_BUSQUEDAS
						
				if(sFormularioTipoBusqueda.equals("FK_IdTipoGrupoRubroEmplea") || sFormularioTipoBusqueda.equals("Todos")){
					if(tipogruporubroempleaTemp!=null && jComboBoxid_tipo_grupo_rubro_empleaFK_IdTipoGrupoRubroEmpleaRubroEmplea!=null) {
						jComboBoxid_tipo_grupo_rubro_empleaFK_IdTipoGrupoRubroEmpleaRubroEmplea.setSelectedItem(tipogruporubroempleaTemp);
					} else {
						if(jComboBoxid_tipo_grupo_rubro_empleaFK_IdTipoGrupoRubroEmpleaRubroEmplea!=null) {
							//jComboBoxid_tipo_grupo_rubro_empleaFK_IdTipoGrupoRubroEmpleaRubroEmplea.setSelectedItem(tipogruporubroempleaTemp);
							if(jComboBoxid_tipo_grupo_rubro_empleaFK_IdTipoGrupoRubroEmpleaRubroEmplea.getItemCount()>0) {
								jComboBoxid_tipo_grupo_rubro_empleaFK_IdTipoGrupoRubroEmpleaRubroEmplea.setSelectedIndex(0);
							}
						}
					}
				}

					}

		}
		catch(Exception e)
		{
			throw e;
		}
	}

	public String getActualTipoGrupoRubroEmpleaForeignKeyDescripcion(Long idTipoGrupoRubroEmpleaSeleccionado)throws Exception
	{
		String sDescripcion="";

		try
		{
			TipoGrupoRubroEmplea  tipogruporubroempleaTemp=null;

			for(TipoGrupoRubroEmplea tipogruporubroempleaAux:tipogruporubroempleasForeignKey) {
				if(tipogruporubroempleaAux.getId()!=null && tipogruporubroempleaAux.getId().equals(idTipoGrupoRubroEmpleaSeleccionado)) {
					tipogruporubroempleaTemp=tipogruporubroempleaAux;
					break;
				}
			}


			sDescripcion=TipoGrupoRubroEmpleaConstantesFunciones.getTipoGrupoRubroEmpleaDescripcion(tipogruporubroempleaTemp);
		}
		catch(Exception e)
		{
			throw e;
		}

		return sDescripcion;
	}

	@SuppressWarnings("rawtypes")
	public void setActualTipoGrupoRubroEmpleaForeignKeyGenerico(Long idTipoGrupoRubroEmpleaSeleccionado,JComboBox jComboBoxid_tipo_grupo_rubro_empleaRubroEmpleaGenerico)throws Exception
	{
		try
		{
			TipoGrupoRubroEmplea  tipogruporubroempleaTemp=null;

			for(TipoGrupoRubroEmplea tipogruporubroempleaAux:tipogruporubroempleasForeignKey) {
				if(tipogruporubroempleaAux.getId()!=null && tipogruporubroempleaAux.getId().equals(idTipoGrupoRubroEmpleaSeleccionado)) {
					tipogruporubroempleaTemp=tipogruporubroempleaAux;
					break;
				}
			}

			if(tipogruporubroempleaTemp!=null) {
				jComboBoxid_tipo_grupo_rubro_empleaRubroEmpleaGenerico.setSelectedItem(tipogruporubroempleaTemp);
			} else {
				if(jComboBoxid_tipo_grupo_rubro_empleaRubroEmpleaGenerico!=null && jComboBoxid_tipo_grupo_rubro_empleaRubroEmpleaGenerico.getItemCount()>0) {
					jComboBoxid_tipo_grupo_rubro_empleaRubroEmpleaGenerico.setSelectedIndex(0);
				}
			}

		}
		catch(Exception e)
		{
			throw e;
		}

	}

	
	
	@SuppressWarnings("rawtypes")
	public void setActualParaGuardarEmpresaForeignKey(RubroEmplea rubroemplea,JComboBox jComboBoxid_empresaRubroEmpleaGenerico)throws Exception
	{
		try
		{
			Empresa  empresaAux=new Empresa();

			if(jComboBoxid_empresaRubroEmpleaGenerico==null) {
				empresaAux=(Empresa)this.jInternalFrameDetalleFormRubroEmplea.jComboBoxid_empresaRubroEmplea.getSelectedItem();
			} else {
				empresaAux=(Empresa)jComboBoxid_empresaRubroEmpleaGenerico.getSelectedItem();
			}

			if(empresaAux!=null && empresaAux.getId()!=null) {
				rubroemplea.setid_empresa(empresaAux.getId());
				rubroemplea.setempresa_descripcion(RubroEmpleaConstantesFunciones.getEmpresaDescripcion(empresaAux));
				rubroemplea.setEmpresa(empresaAux);			}
		}
		catch(Exception e)
		{
			throw e;
		}
	}

	@SuppressWarnings("rawtypes")
	public void setActualParaGuardarTipoCalculoForeignKey(RubroEmplea rubroemplea,JComboBox jComboBoxid_tipo_calculoRubroEmpleaGenerico)throws Exception
	{
		try
		{
			TipoCalculo  tipocalculoAux=new TipoCalculo();

			if(jComboBoxid_tipo_calculoRubroEmpleaGenerico==null) {
				tipocalculoAux=(TipoCalculo)this.jInternalFrameDetalleFormRubroEmplea.jComboBoxid_tipo_calculoRubroEmplea.getSelectedItem();
			} else {
				tipocalculoAux=(TipoCalculo)jComboBoxid_tipo_calculoRubroEmpleaGenerico.getSelectedItem();
			}

			if(tipocalculoAux!=null && tipocalculoAux.getId()!=null) {
				rubroemplea.setid_tipo_calculo(tipocalculoAux.getId());
				rubroemplea.settipocalculo_descripcion(RubroEmpleaConstantesFunciones.getTipoCalculoDescripcion(tipocalculoAux));
				rubroemplea.setTipoCalculo(tipocalculoAux);			}
		}
		catch(Exception e)
		{
			throw e;
		}
	}

	@SuppressWarnings("rawtypes")
	public void setActualParaGuardarTipoRubroEmpleaForeignKey(RubroEmplea rubroemplea,JComboBox jComboBoxid_tipo_rubro_empleaRubroEmpleaGenerico)throws Exception
	{
		try
		{
			TipoRubroEmplea  tiporubroempleaAux=new TipoRubroEmplea();

			if(jComboBoxid_tipo_rubro_empleaRubroEmpleaGenerico==null) {
				tiporubroempleaAux=(TipoRubroEmplea)this.jInternalFrameDetalleFormRubroEmplea.jComboBoxid_tipo_rubro_empleaRubroEmplea.getSelectedItem();
			} else {
				tiporubroempleaAux=(TipoRubroEmplea)jComboBoxid_tipo_rubro_empleaRubroEmpleaGenerico.getSelectedItem();
			}

			if(tiporubroempleaAux!=null && tiporubroempleaAux.getId()!=null) {
				rubroemplea.setid_tipo_rubro_emplea(tiporubroempleaAux.getId());
				rubroemplea.settiporubroemplea_descripcion(RubroEmpleaConstantesFunciones.getTipoRubroEmpleaDescripcion(tiporubroempleaAux));
				rubroemplea.setTipoRubroEmplea(tiporubroempleaAux);			}
		}
		catch(Exception e)
		{
			throw e;
		}
	}

	@SuppressWarnings("rawtypes")
	public void setActualParaGuardarTipoGrupoRubroEmpleaForeignKey(RubroEmplea rubroemplea,JComboBox jComboBoxid_tipo_grupo_rubro_empleaRubroEmpleaGenerico)throws Exception
	{
		try
		{
			TipoGrupoRubroEmplea  tipogruporubroempleaAux=new TipoGrupoRubroEmplea();

			if(jComboBoxid_tipo_grupo_rubro_empleaRubroEmpleaGenerico==null) {
				tipogruporubroempleaAux=(TipoGrupoRubroEmplea)this.jInternalFrameDetalleFormRubroEmplea.jComboBoxid_tipo_grupo_rubro_empleaRubroEmplea.getSelectedItem();
			} else {
				tipogruporubroempleaAux=(TipoGrupoRubroEmplea)jComboBoxid_tipo_grupo_rubro_empleaRubroEmpleaGenerico.getSelectedItem();
			}

			if(tipogruporubroempleaAux!=null && tipogruporubroempleaAux.getId()!=null) {
				rubroemplea.setid_tipo_grupo_rubro_emplea(tipogruporubroempleaAux.getId());
				rubroemplea.settipogruporubroemplea_descripcion(RubroEmpleaConstantesFunciones.getTipoGrupoRubroEmpleaDescripcion(tipogruporubroempleaAux));
				rubroemplea.setTipoGrupoRubroEmplea(tipogruporubroempleaAux);			}
		}
		catch(Exception e)
		{
			throw e;
		}
	}

	
	


		@SuppressWarnings({ "unchecked", "rawtypes" })
		public void cargarCombosFrameEmpresasForeignKey(String sFormularioTipoBusqueda)throws Exception {
			try {

				JComboBoxBinding jComboBoxBindingEmpresa=null;

				if(sFormularioTipoBusqueda.equals("Formulario") || sFormularioTipoBusqueda.equals("Todos")){

					if(!RubroEmpleaJInternalFrame.ISBINDING_MANUAL) {
					} else {
						if(this.jInternalFrameDetalleFormRubroEmplea!=null) { 
							this.jInternalFrameDetalleFormRubroEmplea.jComboBoxid_empresaRubroEmplea.removeAllItems();

							for(Empresa empresa:this.empresasForeignKey) {
								this.jInternalFrameDetalleFormRubroEmplea.jComboBoxid_empresaRubroEmplea.addItem(empresa);
							}
						}
					}

					if(this.jInternalFrameDetalleFormRubroEmplea!=null) { 
					}

					if(!RubroEmpleaJInternalFrame.ISBINDING_MANUAL) {
					}
				}


				if(!this.conCargarMinimo) {


				}

			}  catch(Exception e) {
				throw e;
			}
		}

		@SuppressWarnings({ "unchecked", "rawtypes" })
		public void cargarCombosFrameTipoCalculosForeignKey(String sFormularioTipoBusqueda)throws Exception {
			try {

				JComboBoxBinding jComboBoxBindingTipoCalculo=null;

				if(sFormularioTipoBusqueda.equals("Formulario") || sFormularioTipoBusqueda.equals("Todos")){

					if(!RubroEmpleaJInternalFrame.ISBINDING_MANUAL) {
					} else {
						if(this.jInternalFrameDetalleFormRubroEmplea!=null) { 
							this.jInternalFrameDetalleFormRubroEmplea.jComboBoxid_tipo_calculoRubroEmplea.removeAllItems();

							for(TipoCalculo tipocalculo:this.tipocalculosForeignKey) {
								this.jInternalFrameDetalleFormRubroEmplea.jComboBoxid_tipo_calculoRubroEmplea.addItem(tipocalculo);
							}
						}
					}

					if(this.jInternalFrameDetalleFormRubroEmplea!=null) { 
					}

					if(!RubroEmpleaJInternalFrame.ISBINDING_MANUAL) {
					}
				}


				if(!this.conCargarMinimo) {

					if(sFormularioTipoBusqueda.equals("FK_IdTipoCalculo") || sFormularioTipoBusqueda.equals("Todos")){

						//BYDAN_BUSQUEDAS
						
						if(!RubroEmpleaJInternalFrame.ISBINDING_MANUAL) {
						} else {
							this.jComboBoxid_tipo_calculoFK_IdTipoCalculoRubroEmplea.removeAllItems();

							for(TipoCalculo tipocalculo:this.tipocalculosForeignKey) {
								this.jComboBoxid_tipo_calculoFK_IdTipoCalculoRubroEmplea.addItem(tipocalculo);
							}
						}

						if(!RubroEmpleaJInternalFrame.ISBINDING_MANUAL) {
						}

						
					}

				}

			}  catch(Exception e) {
				throw e;
			}
		}

		@SuppressWarnings({ "unchecked", "rawtypes" })
		public void cargarCombosFrameTipoRubroEmpleasForeignKey(String sFormularioTipoBusqueda)throws Exception {
			try {

				JComboBoxBinding jComboBoxBindingTipoRubroEmplea=null;

				if(sFormularioTipoBusqueda.equals("Formulario") || sFormularioTipoBusqueda.equals("Todos")){

					if(!RubroEmpleaJInternalFrame.ISBINDING_MANUAL) {
					} else {
						if(this.jInternalFrameDetalleFormRubroEmplea!=null) { 
							this.jInternalFrameDetalleFormRubroEmplea.jComboBoxid_tipo_rubro_empleaRubroEmplea.removeAllItems();

							for(TipoRubroEmplea tiporubroemplea:this.tiporubroempleasForeignKey) {
								this.jInternalFrameDetalleFormRubroEmplea.jComboBoxid_tipo_rubro_empleaRubroEmplea.addItem(tiporubroemplea);
							}
						}
					}

					if(this.jInternalFrameDetalleFormRubroEmplea!=null) { 
					}

					if(!RubroEmpleaJInternalFrame.ISBINDING_MANUAL) {
					}
				}


				if(!this.conCargarMinimo) {

					if(sFormularioTipoBusqueda.equals("FK_IdTipoRubroEmplea") || sFormularioTipoBusqueda.equals("Todos")){

						//BYDAN_BUSQUEDAS
						
						if(!RubroEmpleaJInternalFrame.ISBINDING_MANUAL) {
						} else {
							this.jComboBoxid_tipo_rubro_empleaFK_IdTipoRubroEmpleaRubroEmplea.removeAllItems();

							for(TipoRubroEmplea tiporubroemplea:this.tiporubroempleasForeignKey) {
								this.jComboBoxid_tipo_rubro_empleaFK_IdTipoRubroEmpleaRubroEmplea.addItem(tiporubroemplea);
							}
						}

						if(!RubroEmpleaJInternalFrame.ISBINDING_MANUAL) {
						}

						
					}

				}

			}  catch(Exception e) {
				throw e;
			}
		}

		@SuppressWarnings({ "unchecked", "rawtypes" })
		public void cargarCombosFrameTipoGrupoRubroEmpleasForeignKey(String sFormularioTipoBusqueda)throws Exception {
			try {

				JComboBoxBinding jComboBoxBindingTipoGrupoRubroEmplea=null;

				if(sFormularioTipoBusqueda.equals("Formulario") || sFormularioTipoBusqueda.equals("Todos")){

					if(!RubroEmpleaJInternalFrame.ISBINDING_MANUAL) {
					} else {
						if(this.jInternalFrameDetalleFormRubroEmplea!=null) { 
							this.jInternalFrameDetalleFormRubroEmplea.jComboBoxid_tipo_grupo_rubro_empleaRubroEmplea.removeAllItems();

							for(TipoGrupoRubroEmplea tipogruporubroemplea:this.tipogruporubroempleasForeignKey) {
								this.jInternalFrameDetalleFormRubroEmplea.jComboBoxid_tipo_grupo_rubro_empleaRubroEmplea.addItem(tipogruporubroemplea);
							}
						}
					}

					if(this.jInternalFrameDetalleFormRubroEmplea!=null) { 
					}

					if(!RubroEmpleaJInternalFrame.ISBINDING_MANUAL) {
					}
				}


				if(!this.conCargarMinimo) {

					if(sFormularioTipoBusqueda.equals("FK_IdTipoGrupoRubroEmplea") || sFormularioTipoBusqueda.equals("Todos")){

						//BYDAN_BUSQUEDAS
						
						if(!RubroEmpleaJInternalFrame.ISBINDING_MANUAL) {
						} else {
							this.jComboBoxid_tipo_grupo_rubro_empleaFK_IdTipoGrupoRubroEmpleaRubroEmplea.removeAllItems();

							for(TipoGrupoRubroEmplea tipogruporubroemplea:this.tipogruporubroempleasForeignKey) {
								this.jComboBoxid_tipo_grupo_rubro_empleaFK_IdTipoGrupoRubroEmpleaRubroEmplea.addItem(tipogruporubroemplea);
							}
						}

						if(!RubroEmpleaJInternalFrame.ISBINDING_MANUAL) {
						}

						
					}

				}

			}  catch(Exception e) {
				throw e;
			}
		}

	


		public void setSelectedItemCombosFrameEmpresaForeignKey(Empresa empresa,int iIndexSelected,Boolean conSelectedIndex,Boolean conFormulario,Boolean conBusqueda)throws Exception {
			try {

				if(conFormulario) {
					if(!conSelectedIndex) {
						if(this.jInternalFrameDetalleFormRubroEmplea!=null) {
							this.jInternalFrameDetalleFormRubroEmplea.jComboBoxid_empresaRubroEmplea.setSelectedItem(empresa);
						}
					} else {
						if(this.jInternalFrameDetalleFormRubroEmplea!=null) {
							this.jInternalFrameDetalleFormRubroEmplea.jComboBoxid_empresaRubroEmplea.setSelectedIndex(iIndexSelected);
						}
					}
				}


				if(!this.conCargarMinimo) {
					if(conBusqueda) {

					//BYDAN_BUSQUEDAS
					

										}
				}
			} catch(Exception e) {
				throw e;
			}
		}

		public void setSelectedItemCombosFrameTipoCalculoForeignKey(TipoCalculo tipocalculo,int iIndexSelected,Boolean conSelectedIndex,Boolean conFormulario,Boolean conBusqueda)throws Exception {
			try {

				if(conFormulario) {
					if(!conSelectedIndex) {
						if(this.jInternalFrameDetalleFormRubroEmplea!=null) {
							this.jInternalFrameDetalleFormRubroEmplea.jComboBoxid_tipo_calculoRubroEmplea.setSelectedItem(tipocalculo);
						}
					} else {
						if(this.jInternalFrameDetalleFormRubroEmplea!=null) {
							this.jInternalFrameDetalleFormRubroEmplea.jComboBoxid_tipo_calculoRubroEmplea.setSelectedIndex(iIndexSelected);
						}
					}
				}


				if(!this.conCargarMinimo) {
					if(conBusqueda) {

					//BYDAN_BUSQUEDAS
					
						if(!conSelectedIndex) {
							this.jComboBoxid_tipo_calculoFK_IdTipoCalculoRubroEmplea.setSelectedItem(tipocalculo);
						} else {
							this.jComboBoxid_tipo_calculoFK_IdTipoCalculoRubroEmplea.setSelectedIndex(iIndexSelected);
						}

										}
				}
			} catch(Exception e) {
				throw e;
			}
		}

		public void setSelectedItemCombosFrameTipoRubroEmpleaForeignKey(TipoRubroEmplea tiporubroemplea,int iIndexSelected,Boolean conSelectedIndex,Boolean conFormulario,Boolean conBusqueda)throws Exception {
			try {

				if(conFormulario) {
					if(!conSelectedIndex) {
						if(this.jInternalFrameDetalleFormRubroEmplea!=null) {
							this.jInternalFrameDetalleFormRubroEmplea.jComboBoxid_tipo_rubro_empleaRubroEmplea.setSelectedItem(tiporubroemplea);
						}
					} else {
						if(this.jInternalFrameDetalleFormRubroEmplea!=null) {
							this.jInternalFrameDetalleFormRubroEmplea.jComboBoxid_tipo_rubro_empleaRubroEmplea.setSelectedIndex(iIndexSelected);
						}
					}
				}


				if(!this.conCargarMinimo) {
					if(conBusqueda) {

					//BYDAN_BUSQUEDAS
					
						if(!conSelectedIndex) {
							this.jComboBoxid_tipo_rubro_empleaFK_IdTipoRubroEmpleaRubroEmplea.setSelectedItem(tiporubroemplea);
						} else {
							this.jComboBoxid_tipo_rubro_empleaFK_IdTipoRubroEmpleaRubroEmplea.setSelectedIndex(iIndexSelected);
						}

										}
				}
			} catch(Exception e) {
				throw e;
			}
		}

		public void setSelectedItemCombosFrameTipoGrupoRubroEmpleaForeignKey(TipoGrupoRubroEmplea tipogruporubroemplea,int iIndexSelected,Boolean conSelectedIndex,Boolean conFormulario,Boolean conBusqueda)throws Exception {
			try {

				if(conFormulario) {
					if(!conSelectedIndex) {
						if(this.jInternalFrameDetalleFormRubroEmplea!=null) {
							this.jInternalFrameDetalleFormRubroEmplea.jComboBoxid_tipo_grupo_rubro_empleaRubroEmplea.setSelectedItem(tipogruporubroemplea);
						}
					} else {
						if(this.jInternalFrameDetalleFormRubroEmplea!=null) {
							this.jInternalFrameDetalleFormRubroEmplea.jComboBoxid_tipo_grupo_rubro_empleaRubroEmplea.setSelectedIndex(iIndexSelected);
						}
					}
				}


				if(!this.conCargarMinimo) {
					if(conBusqueda) {

					//BYDAN_BUSQUEDAS
					
						if(!conSelectedIndex) {
							this.jComboBoxid_tipo_grupo_rubro_empleaFK_IdTipoGrupoRubroEmpleaRubroEmplea.setSelectedItem(tipogruporubroemplea);
						} else {
							this.jComboBoxid_tipo_grupo_rubro_empleaFK_IdTipoGrupoRubroEmpleaRubroEmplea.setSelectedIndex(iIndexSelected);
						}

										}
				}
			} catch(Exception e) {
				throw e;
			}
		}

	


	
	public void refrescarForeignKeysDescripcionesRubroEmplea() throws Exception {
		//SI FUNCIONA DEEPLOAD ESTO VA AL ULTIMO
		if(Constantes.ISUSAEJBLOGICLAYER) {
			RubroEmpleaConstantesFunciones.refrescarForeignKeysDescripcionesRubroEmplea(this.rubroempleaLogic.getRubroEmpleas());
		} else if(Constantes.ISUSAEJBREMOTE || Constantes.ISUSAEJBHOME) {
			RubroEmpleaConstantesFunciones.refrescarForeignKeysDescripcionesRubroEmplea(this.rubroempleas);
		}
		
		/*
		ArrayList<Classe> classes=new ArrayList<Classe>();
		
		classes.add(new Classe(Empresa.class));
		classes.add(new Classe(TipoCalculo.class));
		classes.add(new Classe(TipoRubroEmplea.class));
		classes.add(new Classe(TipoGrupoRubroEmplea.class));
			
		if(Constantes.ISUSAEJBLOGICLAYER) {
			//USA LOS OBJETOS DE LOGIC DIRECTAMENTE
			//rubroempleaLogic.setRubroEmpleas(this.rubroempleas);
			rubroempleaLogic.deepLoadsWithConnection(false, DeepLoadType.INCLUDE, classes,"");
	
		} else if(Constantes.ISUSAEJBREMOTE) {
		} else if(Constantes.ISUSAEJBHOME) {
		}
		*/				
	}	
	
	
	
	public Integer getiNumeroPaginacion() {
		return iNumeroPaginacion;
	}

	public void setiNumeroPaginacion(Integer iNumeroPaginacion) {
		this.iNumeroPaginacion= iNumeroPaginacion;
	}
	
	public Integer getiNumeroPaginacionPagina() {
		return iNumeroPaginacionPagina;
	}

	public void setiNumeroPaginacionPagina(Integer iNumeroPaginacionPagina) {
		this.iNumeroPaginacionPagina= iNumeroPaginacionPagina;
	}
	
	
	public Boolean getIsSeleccionarTodos() {
		return this.isSeleccionarTodos;
	}

	public void setIsSeleccionarTodos(Boolean isSeleccionarTodos) {
		this.isSeleccionarTodos= isSeleccionarTodos;
	}
	
	public Boolean getEsControlTabla() {
		return this.esControlTabla;
	}

	public void setEsControlTabla(Boolean esControlTabla) {
		this.esControlTabla= esControlTabla;
	}
	
	public Boolean getIsSeleccionados() {
		return this.isSeleccionados;
	}

	public void setIsSeleccionados(Boolean isSeleccionados) {
		this.isSeleccionados= isSeleccionados;
	}
	
	public Boolean getIsPostAccionNuevo() {
		return this.isPostAccionNuevo;
	}

	public void setIsPostAccionNuevo(Boolean isPostAccionNuevo) {
		this.isPostAccionNuevo= isPostAccionNuevo;
	}
	
	public Boolean getIsPostAccionSinCerrar() {
		return this.isPostAccionSinCerrar;
	}

	public void setIsPostAccionSinCerrar(Boolean isPostAccionSinCerrar) {
		this.isPostAccionSinCerrar= isPostAccionSinCerrar;
	}
	
	public Boolean getIsPostAccionSinMensaje() {
		return this.isPostAccionSinMensaje;
	}

	public void setIsPostAccionSinMensaje(Boolean isPostAccionSinMensaje) {
		this.isPostAccionSinMensaje= isPostAccionSinMensaje;
	}
	
	public Boolean getConGraficoReporte() {
		return this.conGraficoReporte;
	}

	public void setConGraficoReporte(Boolean conGraficoReporte) {
		this.conGraficoReporte= conGraficoReporte;
	}
	
	
	public ArrayList<Reporte> gettiposArchivosReportes() {
		return this.tiposArchivosReportes;
	}
	
	public void settiposArchivosReportes(ArrayList<Reporte> tiposArchivosReportes) {
		this.tiposArchivosReportes = tiposArchivosReportes;
	}
	
	//TIPOS ARCHIVOS DINAMICOS
	public ArrayList<Reporte> gettiposArchivosReportesDinamico() {
		return this.tiposArchivosReportesDinamico;
	}
	
	public void settiposArchivosReportesDinamico(ArrayList<Reporte> tiposArchivosReportesDinamico) {
		this.tiposArchivosReportesDinamico = tiposArchivosReportesDinamico;
	}
	
	//TIPOS REPORTES
	public ArrayList<Reporte> gettiposReportes() {
		return this.tiposReportes;
	}
	
	public void settiposReportes(ArrayList<Reporte> tiposReportes) {
		this.tiposReportes = tiposReportes;
	}
	
	//TIPOS REPORTES
	public ArrayList<Reporte> gettiposReportesDinamico() {
		return this.tiposReportesDinamico;
	}
	
	public void settiposReportesDinamico(ArrayList<Reporte> tiposReportesDinamico) {
		this.tiposReportesDinamico = tiposReportesDinamico;
	}
	
	//TIPOS GRAFICOS REPORTES
	public ArrayList<Reporte> gettiposGraficosReportes() {
		return this.tiposGraficosReportes;
	}
	
	public void settiposGraficosReportes(ArrayList<Reporte> tiposGraficosReportes) {
		this.tiposGraficosReportes = tiposGraficosReportes;
	}
	
	public ArrayList<Reporte> gettiposPaginacion() {
		return this.tiposPaginacion;
	}
	
	public void settiposPaginacion(ArrayList<Reporte> tiposPaginacion) {
		this.tiposPaginacion = tiposPaginacion;
	}
	
	public ArrayList<Reporte> gettiposRelaciones() {
		return this.tiposRelaciones;
	}
	
	public void settiposRelaciones(ArrayList<Reporte> tiposRelaciones) {
		this.tiposRelaciones= tiposRelaciones;
	}
	
	public ArrayList<Reporte> gettiposAcciones() {
		return this.tiposAcciones;
	}
	
	public void settiposAcciones(ArrayList<Reporte> tiposAcciones) {
		this.tiposAcciones = tiposAcciones;
	}
	
	public ArrayList<Reporte> gettiposAccionesFormulario() {
		return this.tiposAccionesFormulario;
	}
	
	public void settiposAccionesFormulario(ArrayList<Reporte> tiposAccionesFormulario) {
		this.tiposAccionesFormulario = tiposAccionesFormulario;
	}
	
	public ArrayList<Reporte> gettiposSeleccionar() {
		return this.tiposSeleccionar;
	}
	
	public void settiposSeleccionar(ArrayList<Reporte> tiposSeleccionar) {
		this.tiposSeleccionar = tiposSeleccionar;
	}
	
	public ArrayList<Reporte> gettiposColumnasSelect() {
		return this.tiposColumnasSelect;
	}
	
	public void settiposColumnasSelect(ArrayList<Reporte> tiposColumnasSelect) {
		this.tiposColumnasSelect = tiposColumnasSelect;
	}
		
	public ArrayList<Reporte> gettiposRelacionesSelect() {
		return this.tiposRelacionesSelect;
	}
	
	public void settiposRelacionesSelect(ArrayList<Reporte> tiposRelacionesSelect) {
		this.tiposRelacionesSelect = tiposRelacionesSelect;
	}
	
	public Long getIIdUsuarioSesion() {
		return lIdUsuarioSesion;
	}

	public void setIIdUsuarioSesion(Long lIdUsuarioSesion) {
		this.lIdUsuarioSesion = lIdUsuarioSesion;
	}
	
	
	public List<Accion> getAccions() {
		return this.accions;
	}

	public void setAccions(List<Accion> accions) {
		this.accions = accions;
	}
	
	public List<Accion> getAccionsFormulario() {
		return this.accionsFormulario;
	}

	public void setAccionsFormulario(List<Accion> accionsFormulario) {
		this.accionsFormulario = accionsFormulario;
	}
	
	public String getsAccionMantenimiento() {
		return sAccionMantenimiento;
	}

	public void setsAccionMantenimiento(String sAccionMantenimiento) {
		this.sAccionMantenimiento = sAccionMantenimiento;
	}

	public String getsAccionBusqueda() {
		return sAccionBusqueda;
	}

	public void setsAccionBusqueda(String sAccionBusqueda) {
		this.sAccionBusqueda = sAccionBusqueda;
	}

	public String getsAccionAdicional() {
		return sAccionAdicional;
	}

	public void setsAccionAdicional(String sAccionAdicional) {
		this.sAccionAdicional = sAccionAdicional;
	}

	public String getsUltimaBusqueda() {
		return sUltimaBusqueda;
	}

	public void setsUltimaBusqueda(String sUltimaBusqueda) {
		this.sUltimaBusqueda = sUltimaBusqueda;
	}
	
	public String getsTipoArchivoReporte() {
		return sTipoArchivoReporte;
	}

	public void setsTipoArchivoReporte(String sTipoArchivoReporte) {
		this.sTipoArchivoReporte = sTipoArchivoReporte;
	}
	
	public String getsTipoArchivoReporteDinamico() {
		return sTipoArchivoReporteDinamico;
	}

	public void setsTipoArchivoReporteDinamico(String sTipoArchivoReporteDinamico) {
		this.sTipoArchivoReporteDinamico = sTipoArchivoReporteDinamico;
	}
	
	public String getsTipoReporte() {
		return sTipoReporte;
	}

	public void setsTipoReporte(String sTipoReporte) {
		this.sTipoReporte = sTipoReporte;
	}
	
	public String getsTipoReporteDinamico() {
		return sTipoReporteDinamico;
	}

	public void setsTipoReporteDinamico(String sTipoReporteDinamico) {
		this.sTipoReporteDinamico = sTipoReporteDinamico;
	}
	
	public String getsTipoGraficoReporte() {
		return sTipoGraficoReporte;
	}

	public void setsTipoGraficoReporte(String sTipoGraficoReporte) {
		this.sTipoGraficoReporte = sTipoGraficoReporte;
	}
	
	public String getsTipoPaginacion() {
		return sTipoPaginacion;
	}

	public void setsTipoPaginacion(String sTipoPaginacion) {
		this.sTipoPaginacion = sTipoPaginacion;
	}
	
	public String getsTipoRelacion() {
		return sTipoRelacion;
	}

	public void setsTipoRelacion(String sTipoRelacion) {
		this.sTipoRelacion = sTipoRelacion;
	}
	
	public String getsTipoAccion() {
		return sTipoAccion;
	}

	public void setsTipoAccion(String sTipoAccion) {
		this.sTipoAccion = sTipoAccion;
	}
	
	public String getsTipoAccionFormulario() {
		return sTipoAccionFormulario;
	}

	public void setsTipoAccionFormulario(String sTipoAccionFormulario) {
		this.sTipoAccionFormulario = sTipoAccionFormulario;
	}
	
	public String getsTipoSeleccionar() {
		return sTipoSeleccionar;
	}

	public void setsTipoSeleccionar(String sTipoSeleccionar) {
		this.sTipoSeleccionar = sTipoSeleccionar;
	}
	
	public String getsValorCampoGeneral() {
		return sValorCampoGeneral;
	}

	public void setsValorCampoGeneral(String sValorCampoGeneral) {
		this.sValorCampoGeneral = sValorCampoGeneral;
	}			

	public String getsDetalleReporte() {
		return sDetalleReporte;
	}

	public void setsDetalleReporte(String sDetalleReporte) {
		this.sDetalleReporte = sDetalleReporte;
	}
	
	
	public String getsTipoReporteExtra() {
		return sTipoReporteExtra;
	}

	public void setsTipoReporteExtra(String sTipoReporteExtra) {
		this.sTipoReporteExtra = sTipoReporteExtra;
	}
	
	public Boolean getesReporteDinamico() {
		return esReporteDinamico;
	}	
	
	public void setesReporteDinamico(Boolean esReporteDinamico) {
		this.esReporteDinamico = esReporteDinamico;
	}
	
	public Boolean getesRecargarFks() {
		return esRecargarFks;
	}	
	
	public void setesRecargarFks(Boolean esRecargarFks) {
		this.esRecargarFks = esRecargarFks;
	}
	
	public Boolean getesReporteAccionProceso() {
		return esReporteAccionProceso;
	}	
	
	public void setesReporteAccionProceso(Boolean esReporteAccionProceso) {
		this.esReporteAccionProceso= esReporteAccionProceso;
	}
		
	public RubroEmpleaParameterReturnGeneral getRubroEmpleaParameterGeneral() {
		return this.rubroempleaParameterGeneral;
	}
	
	public void setRubroEmpleaParameterGeneral(RubroEmpleaParameterReturnGeneral rubroempleaParameterGeneral) {
		this.rubroempleaParameterGeneral = rubroempleaParameterGeneral;
	}
	
	public String getsPathReporteDinamico() {
		return sPathReporteDinamico;
	}

	public void setsPathReporteDinamico(String sPathReporteDinamico) {
		this.sPathReporteDinamico = sPathReporteDinamico;
	}
		
	public Boolean getisMostrarNumeroPaginacion() {
		return isMostrarNumeroPaginacion;
	}

	public void setisMostrarNumeroPaginacion(Boolean isMostrarNumeroPaginacion) {
		this.isMostrarNumeroPaginacion = isMostrarNumeroPaginacion;
	}
	
	public Mensaje getMensaje() {
		return mensaje;
	}

	public void setMensaje(Mensaje mensaje) {
		this.mensaje = mensaje;
	}
	
	public Boolean getIsPermisoTodoRubroEmplea() {
		return isPermisoTodoRubroEmplea;
	}

	public void setIsPermisoTodoRubroEmplea(Boolean isPermisoTodoRubroEmplea) {
		this.isPermisoTodoRubroEmplea = isPermisoTodoRubroEmplea;
	}

	public Boolean getIsPermisoNuevoRubroEmplea() {
		return isPermisoNuevoRubroEmplea;
	}

	public void setIsPermisoNuevoRubroEmplea(Boolean isPermisoNuevoRubroEmplea) {
		this.isPermisoNuevoRubroEmplea = isPermisoNuevoRubroEmplea;
	}

	public Boolean getIsPermisoActualizarRubroEmplea() {
		return isPermisoActualizarRubroEmplea;
	}

	public void setIsPermisoActualizarRubroEmplea(Boolean isPermisoActualizarRubroEmplea) {
		this.isPermisoActualizarRubroEmplea = isPermisoActualizarRubroEmplea;
	}

	public Boolean getIsPermisoEliminarRubroEmplea() {
		return isPermisoEliminarRubroEmplea;
	}

	public void setIsPermisoEliminarRubroEmplea(Boolean isPermisoEliminarRubroEmplea) {
		this.isPermisoEliminarRubroEmplea = isPermisoEliminarRubroEmplea;
	}

	public Boolean getIsPermisoGuardarCambiosRubroEmplea() {
		return isPermisoGuardarCambiosRubroEmplea;
	}

	public void setIsPermisoGuardarCambiosRubroEmplea(Boolean isPermisoGuardarCambiosRubroEmplea) {
		this.isPermisoGuardarCambiosRubroEmplea = isPermisoGuardarCambiosRubroEmplea;
	}
	
	public Boolean getIsPermisoConsultaRubroEmplea() {
		return isPermisoConsultaRubroEmplea;
	}

	public void setIsPermisoConsultaRubroEmplea(Boolean isPermisoConsultaRubroEmplea) {
		this.isPermisoConsultaRubroEmplea = isPermisoConsultaRubroEmplea;
	}

	public Boolean getIsPermisoBusquedaRubroEmplea() {
		return isPermisoBusquedaRubroEmplea;
	}

	public void setIsPermisoBusquedaRubroEmplea(Boolean isPermisoBusquedaRubroEmplea) {
		this.isPermisoBusquedaRubroEmplea = isPermisoBusquedaRubroEmplea;
	}

	public Boolean getIsPermisoReporteRubroEmplea() {
		return isPermisoReporteRubroEmplea;
	}

	public void setIsPermisoReporteRubroEmplea(Boolean isPermisoReporteRubroEmplea) {
		this.isPermisoReporteRubroEmplea = isPermisoReporteRubroEmplea;
	}
	
	public Boolean getIsPermisoPaginacionMedioRubroEmplea() {
		return isPermisoPaginacionMedioRubroEmplea;
	}

	public void setIsPermisoPaginacionMedioRubroEmplea(Boolean isPermisoPaginacionMedioRubroEmplea) {
		this.isPermisoPaginacionMedioRubroEmplea = isPermisoPaginacionMedioRubroEmplea;
	}
	
	public Boolean getIsPermisoPaginacionTodoRubroEmplea() {
		return isPermisoPaginacionTodoRubroEmplea;
	}

	public void setIsPermisoPaginacionTodoRubroEmplea(Boolean isPermisoPaginacionTodoRubroEmplea) {
		this.isPermisoPaginacionTodoRubroEmplea = isPermisoPaginacionTodoRubroEmplea;
	}
	
	public Boolean getIsPermisoPaginacionAltoRubroEmplea() {
		return isPermisoPaginacionAltoRubroEmplea;
	}

	public void setIsPermisoPaginacionAltoRubroEmplea(Boolean isPermisoPaginacionAltoRubroEmplea) {
		this.isPermisoPaginacionAltoRubroEmplea = isPermisoPaginacionAltoRubroEmplea;
	}
	
	public Boolean getIsPermisoCopiarRubroEmplea() {
		return isPermisoCopiarRubroEmplea;
	}

	public void setIsPermisoCopiarRubroEmplea(Boolean isPermisoCopiarRubroEmplea) {
		this.isPermisoCopiarRubroEmplea = isPermisoCopiarRubroEmplea;
	}
	
	public Boolean getIsPermisoVerFormRubroEmplea() {
		return isPermisoVerFormRubroEmplea;
	}

	public void setIsPermisoVerFormRubroEmplea(Boolean isPermisoVerFormRubroEmplea) {
		this.isPermisoVerFormRubroEmplea = isPermisoVerFormRubroEmplea;
	}
	
	public Boolean getIsPermisoDuplicarRubroEmplea() {
		return isPermisoDuplicarRubroEmplea;
	}

	public void setIsPermisoDuplicarRubroEmplea(Boolean isPermisoDuplicarRubroEmplea) {
		this.isPermisoDuplicarRubroEmplea = isPermisoDuplicarRubroEmplea;
	}
	
	public Boolean getIsPermisoOrdenRubroEmplea() {
		return isPermisoOrdenRubroEmplea;
	}

	public void setIsPermisoOrdenRubroEmplea(Boolean isPermisoOrdenRubroEmplea) {
		this.isPermisoOrdenRubroEmplea = isPermisoOrdenRubroEmplea;
	}
	
	public String getsVisibilidadTablaBusquedas() {
		return sVisibilidadTablaBusquedas;
	}

	public void setsVisibilidadTablaBusquedas(String sVisibilidadTablaBusquedas) {
		this.sVisibilidadTablaBusquedas = sVisibilidadTablaBusquedas;
	}
	
	public String getsVisibilidadTablaElementos() {
		return sVisibilidadTablaElementos;
	}

	public void setsVisibilidadTablaElementos(String sVisibilidadTablaElementos) {
		this.sVisibilidadTablaElementos = sVisibilidadTablaElementos;
	}

	public String getsVisibilidadTablaAcciones() {
		return sVisibilidadTablaAcciones;
	}

	public void setsVisibilidadTablaAcciones(String sVisibilidadTablaAcciones) {
		this.sVisibilidadTablaAcciones = sVisibilidadTablaAcciones;
	}
	
	public Boolean getIsVisibilidadCeldaNuevoRubroEmplea() {
		return isVisibilidadCeldaNuevoRubroEmplea;
	}

	public void setIsVisibilidadCeldaNuevoRubroEmplea(Boolean isVisibilidadCeldaNuevoRubroEmplea) {
		this.isVisibilidadCeldaNuevoRubroEmplea = isVisibilidadCeldaNuevoRubroEmplea;
	}
	
	public Boolean getIsVisibilidadCeldaDuplicarRubroEmplea() {
		return isVisibilidadCeldaDuplicarRubroEmplea;
	}

	public void setIsVisibilidadCeldaDuplicarRubroEmplea(Boolean isVisibilidadCeldaDuplicarRubroEmplea) {
		this.isVisibilidadCeldaDuplicarRubroEmplea = isVisibilidadCeldaDuplicarRubroEmplea;
	}
	
	public Boolean getIsVisibilidadCeldaCopiarRubroEmplea() {
		return isVisibilidadCeldaCopiarRubroEmplea;
	}

	public void setIsVisibilidadCeldaCopiarRubroEmplea(Boolean isVisibilidadCeldaCopiarRubroEmplea) {
		this.isVisibilidadCeldaCopiarRubroEmplea = isVisibilidadCeldaCopiarRubroEmplea;
	}
	
	public Boolean getIsVisibilidadCeldaVerFormRubroEmplea() {
		return isVisibilidadCeldaVerFormRubroEmplea;
	}

	public void setIsVisibilidadCeldaVerFormRubroEmplea(Boolean isVisibilidadCeldaVerFormRubroEmplea) {
		this.isVisibilidadCeldaVerFormRubroEmplea = isVisibilidadCeldaVerFormRubroEmplea;
	}
	
	public Boolean getIsVisibilidadCeldaOrdenRubroEmplea() {
		return isVisibilidadCeldaOrdenRubroEmplea;
	}

	public void setIsVisibilidadCeldaOrdenRubroEmplea(Boolean isVisibilidadCeldaOrdenRubroEmplea) {
		this.isVisibilidadCeldaOrdenRubroEmplea = isVisibilidadCeldaOrdenRubroEmplea;
	}
	
	public Boolean getIsVisibilidadCeldaNuevoRelacionesRubroEmplea() {
		return isVisibilidadCeldaNuevoRelacionesRubroEmplea;
	}

	public void setIsVisibilidadCeldaNuevoRelacionesRubroEmplea(Boolean isVisibilidadCeldaNuevoRelacionesRubroEmplea) {
		this.isVisibilidadCeldaNuevoRelacionesRubroEmplea = isVisibilidadCeldaNuevoRelacionesRubroEmplea;
	}
	
	public Boolean getIsVisibilidadCeldaModificarRubroEmplea() {
		return isVisibilidadCeldaModificarRubroEmplea;
	}

	public void setIsVisibilidadCeldaModificarRubroEmplea(Boolean isVisibilidadCeldaModificarRubroEmplea) {
		this.isVisibilidadCeldaModificarRubroEmplea = isVisibilidadCeldaModificarRubroEmplea;
	}
	
	public Boolean getIsVisibilidadCeldaActualizarRubroEmplea() {
		return isVisibilidadCeldaActualizarRubroEmplea;
	}

	public void setIsVisibilidadCeldaActualizarRubroEmplea(Boolean isVisibilidadCeldaActualizarRubroEmplea) {
		this.isVisibilidadCeldaActualizarRubroEmplea = isVisibilidadCeldaActualizarRubroEmplea;
	}

	public Boolean getIsVisibilidadCeldaEliminarRubroEmplea() {
		return isVisibilidadCeldaEliminarRubroEmplea;
	}

	public void setIsVisibilidadCeldaEliminarRubroEmplea(Boolean isVisibilidadCeldaEliminarRubroEmplea) {
		this.isVisibilidadCeldaEliminarRubroEmplea = isVisibilidadCeldaEliminarRubroEmplea;
	}

	public Boolean getIsVisibilidadCeldaCancelarRubroEmplea() {
		return isVisibilidadCeldaCancelarRubroEmplea;
	}

	public void setIsVisibilidadCeldaCancelarRubroEmplea(Boolean isVisibilidadCeldaCancelarRubroEmplea) {
		this.isVisibilidadCeldaCancelarRubroEmplea = isVisibilidadCeldaCancelarRubroEmplea;
	}

	public Boolean getIsVisibilidadCeldaGuardarRubroEmplea() {
		return isVisibilidadCeldaGuardarRubroEmplea;
	}

	public void setIsVisibilidadCeldaGuardarRubroEmplea(Boolean isVisibilidadCeldaGuardarRubroEmplea) {
		this.isVisibilidadCeldaGuardarRubroEmplea = isVisibilidadCeldaGuardarRubroEmplea;
	}
	
	public Boolean getIsVisibilidadCeldaGuardarCambiosRubroEmplea() {
		return isVisibilidadCeldaGuardarCambiosRubroEmplea;
	}

	public void setIsVisibilidadCeldaGuardarCambiosRubroEmplea(Boolean isVisibilidadCeldaGuardarCambiosRubroEmplea) {
		this.isVisibilidadCeldaGuardarCambiosRubroEmplea = isVisibilidadCeldaGuardarCambiosRubroEmplea;
	}
		
	public RubroEmpleaSessionBean getrubroempleaSessionBean() {
		return this.rubroempleaSessionBean;
	}
	
	public void setrubroempleaSessionBean(RubroEmpleaSessionBean rubroempleaSessionBean) {
		this.rubroempleaSessionBean=rubroempleaSessionBean;
	}
	
	
	public Boolean getisVisibilidadFK_IdEmpresa() {
		return this.isVisibilidadFK_IdEmpresa;
	}

	public void setisVisibilidadFK_IdEmpresa(Boolean isVisibilidadFK_IdEmpresa) {
		this.isVisibilidadFK_IdEmpresa=isVisibilidadFK_IdEmpresa;
	}

	public Boolean getisVisibilidadFK_IdTipoCalculo() {
		return this.isVisibilidadFK_IdTipoCalculo;
	}

	public void setisVisibilidadFK_IdTipoCalculo(Boolean isVisibilidadFK_IdTipoCalculo) {
		this.isVisibilidadFK_IdTipoCalculo=isVisibilidadFK_IdTipoCalculo;
	}

	public Boolean getisVisibilidadFK_IdTipoGrupoRubroEmplea() {
		return this.isVisibilidadFK_IdTipoGrupoRubroEmplea;
	}

	public void setisVisibilidadFK_IdTipoGrupoRubroEmplea(Boolean isVisibilidadFK_IdTipoGrupoRubroEmplea) {
		this.isVisibilidadFK_IdTipoGrupoRubroEmplea=isVisibilidadFK_IdTipoGrupoRubroEmplea;
	}

	public Boolean getisVisibilidadFK_IdTipoRubroEmplea() {
		return this.isVisibilidadFK_IdTipoRubroEmplea;
	}

	public void setisVisibilidadFK_IdTipoRubroEmplea(Boolean isVisibilidadFK_IdTipoRubroEmplea) {
		this.isVisibilidadFK_IdTipoRubroEmplea=isVisibilidadFK_IdTipoRubroEmplea;
	}

	
	
	public void setVariablesFormularioToObjetoActualForeignKeysRubroEmplea(RubroEmplea rubroemplea)throws Exception {
		try {
			
				this.setActualParaGuardarEmpresaForeignKey(rubroemplea,null);
				this.setActualParaGuardarTipoCalculoForeignKey(rubroemplea,null);
				this.setActualParaGuardarTipoRubroEmpleaForeignKey(rubroemplea,null);
				this.setActualParaGuardarTipoGrupoRubroEmpleaForeignKey(rubroemplea,null);
		} catch(Exception e) {
			throw e;
		}
	}
	
	public void cargarLicenciaCliente(DatosCliente datosCliente) throws Exception {
		Boolean existe=false;
			
		try {
				InputStream reportFile=null;
				
				String sPath=this.parametroGeneralUsuario.getpath_exportar()+"erp_bydan/license/license.xml";
				
				reportFile = new FileInputStream(sPath);
				
				Document documentBuilder=null;
				
				if(this.constantes2.DOCUMENT_BUILDER==null) {
					documentBuilder=Funciones2.parseXml(reportFile);
				} else {
					documentBuilder=this.constantes2.DOCUMENT_BUILDER;
				}
				
				//GlobalSeguridad.readXml(documentBuilder);
				
				String sNamePCServerLicencia="";
				String sClaveSistemaLicencia="";
				Date dFechaServerLicencia=null;
				
				//CARGAR ELEMENTOS DE LICENCIA
				NodeList nodeList = documentBuilder.getElementsByTagName("Licencia");
				
				for (int iIndice = 0; iIndice < nodeList.getLength(); iIndice++) {
					Node node = nodeList.item(iIndice);
				
					if (node.getNodeType() == Node.ELEMENT_NODE) {
						Element element = (Element) node;
						 
						sNamePCServerLicencia=element.getElementsByTagName("NombrePc").item(0).getTextContent();
						sClaveSistemaLicencia=element.getElementsByTagName("ClaveSistema").item(0).getTextContent();
						
						existe=true;
						break;
					}
				}														
			
				
			if(existe) {
				datosCliente.setsClaveSistema(sClaveSistemaLicencia);
				
				if(!datosCliente.getsNamePCServer().equals(sNamePCServerLicencia)
					&& !datosCliente.getsNamePCServer().equals("")) {
					
					datosCliente.setsNamePCServer(sNamePCServerLicencia);
				}
			} else {
				throw new Exception("NO EXISTE LICENCIA O NO ESTA BIEN FORMADO");
			}
		} catch(Exception e) {
			throw new Exception("NO EXISTE LICENCIA O NO ESTA BIEN FORMADO");
		}						
	}
	
	public void cargarDatosCliente() throws Exception {
		String sPrimerMacAddress="";		
		String sHostName="";		 
		String sHostIp="";		  
		String sHostUser="";
		
		
		sPrimerMacAddress=FuncionesNetwork.getPrimerMacAddress();		
		sHostName=FuncionesNetwork.getHostName();		 
		sHostIp=FuncionesNetwork.getHostIp();		  
		sHostUser=FuncionesNetwork.getHostUser();
		
		
		this.datosCliente=new DatosCliente();
		if(lIdUsuarioSesion!=null){datosCliente.setIdUsuario(this.lIdUsuarioSesion);}
		
		//SERVIDOR WEB Y TALVEZ SERVIDOR SWING WINDOWS
		this.datosCliente.setsUsuarioPCServer(sHostUser);
		this.datosCliente.setsNamePCServer(sHostName);
		this.datosCliente.setsIPPCServer(sHostIp);
		this.datosCliente.setsMacAddressPCServer(sPrimerMacAddress);
			
			//CLIENTE SWING WINDOWS
			this.datosCliente.setIsClienteWeb(false);
			
			this.datosCliente.setsUsuarioPC(sHostUser);
			this.datosCliente.setsNamePC(sHostName);
			this.datosCliente.setsIPPC(sHostIp);
			this.datosCliente.setsMacAddressPC(sPrimerMacAddress);	
			
			
			//this.cargarLicenciaCliente(this.datosCliente);
			
	}
	
	public void bugActualizarReferenciaActual(RubroEmplea rubroemplea,RubroEmplea rubroempleaAux) throws Exception {
		//ARCHITECTURE		
		//EL ID NEGATIVO GUARDADO EN ORIGINAL SIRVE PARA VERIFICAR Y ACTUALIZAR EL REGISTRO NUEVO (ID,VERSIONROW)
		this.setCamposBaseDesdeOriginalRubroEmplea(rubroemplea);
					
		//POR BUG: EL OBJETO ACTUAL SE PERDIA, POR LO QUE SE GUARDA TAMBIEN VALORES EN AUX Y LUEGO DESPUES DEL MENSAJE SE HACE REFERENCIA EL OBJETO ACTUAL AL AUX
		rubroempleaAux.setId(rubroemplea.getId());
		rubroempleaAux.setVersionRow(rubroemplea.getVersionRow());					
	}
	
	public void ejecutarMantenimiento(MaintenanceType maintenanceType)throws Exception {	
		try	{								
			
			//this.startProcessRubroEmplea();
		
			int intSelectedRow = this.jTableDatosRubroEmplea.getSelectedRow();	       
			
			//PUEDE SER -1 CUANDO SE ELIMINA EN GUARDAR CAMBIOS
			if(intSelectedRow>=0 && maintenanceType!=MaintenanceType.GUARDARCAMBIOS) {
				//SE PIEDE INDICE SELECTED CON FILA TOTALES, ASEGURARSE QUE OBJETO ACTUAL ESTE EN FORMULARIO
					
				//ARCHITECTURE
				
				if(Constantes.ISUSAEJBLOGICLAYER) {
					this.rubroemplea =(RubroEmplea) this.rubroempleaLogic.getRubroEmpleas().toArray()[this.jTableDatosRubroEmplea.convertRowIndexToModel(intSelectedRow)];
				} else if(Constantes.ISUSAEJBREMOTE ||Constantes.ISUSAEJBHOME) {
					this.rubroemplea =(RubroEmplea) this.rubroempleas.toArray()[this.jTableDatosRubroEmplea.convertRowIndexToModel(intSelectedRow)];
				}
				
				//ARCHITECTURE
				
				if(RubroEmpleaJInternalFrame.ISBINDING_MANUAL_TABLA) {
					//this.setVariablesFormularioToObjetoActualRubroEmplea(this.rubroemplea,true);
				}
				
				this.setVariablesFormularioToObjetoActualForeignKeysRubroEmplea(this.rubroemplea);
			}
			
			//LUEGO DE TRAER DATOS CORRESPONDIENTES QUE COINCIDA LISTA TABLA QUITO FILA TOTALES
			if(this.conTotales) {
				//MEJOR LO DEJO, SI EXISTE EXCEPCION SE PIEDE FILA TOTALES Y ORDEN INDICE FILA ACTUAL
				//this.quitarFilaTotales();
			}
			
			this.cargarDatosCliente();
			
			this.datosDeep=new DatosDeep();
			
			//SE CAMBIA ESTADOS CON ERROR, ENTONCES SE EJECUTA ANTES
			//this.invalidValues = rubroempleaValidator.getInvalidValues(this.rubroemplea);
			
			//if(this.invalidValues==null || this.invalidValues.length<=0) {
			
			rubroempleaLogic.setDatosCliente(datosCliente);
			rubroempleaLogic.setIsConDeep(false);
			
			if(maintenanceType==MaintenanceType.NUEVO) {
				rubroempleaAux=new  RubroEmplea();
				
				rubroempleaAux.setIsNew(true);
				rubroempleaAux.setIsChanged(true);
				
				rubroempleaAux.setRubroEmpleaOriginal(this.rubroemplea);
				
				rubroempleaAux.setId(this.rubroemplea.getId());	
				rubroempleaAux.setVersionRow(this.rubroemplea.getVersionRow());	
				rubroempleaAux.setid_empresa(this.rubroemplea.getid_empresa());	
				rubroempleaAux.setid_tipo_calculo(this.rubroemplea.getid_tipo_calculo());	
				rubroempleaAux.setid_tipo_rubro_emplea(this.rubroemplea.getid_tipo_rubro_emplea());	
				rubroempleaAux.setid_tipo_grupo_rubro_emplea(this.rubroemplea.getid_tipo_grupo_rubro_emplea());	
				rubroempleaAux.setcodigo(this.rubroemplea.getcodigo());	
				rubroempleaAux.setnombre(this.rubroemplea.getnombre());	
				rubroempleaAux.setformula(this.rubroemplea.getformula());	
				rubroempleaAux.setalias(this.rubroemplea.getalias());	
				rubroempleaAux.setsecuencial(this.rubroemplea.getsecuencial());	
				rubroempleaAux.setpara_rol_pagos(this.rubroemplea.getpara_rol_pagos());	
				rubroempleaAux.setpara_sueldo(this.rubroemplea.getpara_sueldo());	
				rubroempleaAux.setpara_vacaciones(this.rubroemplea.getpara_vacaciones());	
				rubroempleaAux.setpara_impuesto_renta(this.rubroemplea.getpara_impuesto_renta());	
				rubroempleaAux.setpara_seguro_social(this.rubroemplea.getpara_seguro_social());	
				rubroempleaAux.setpara_provisiones(this.rubroemplea.getpara_provisiones());	
				rubroempleaAux.setpara_utilidades(this.rubroemplea.getpara_utilidades());	
				rubroempleaAux.setpara_rubro_iess(this.rubroemplea.getpara_rubro_iess());	
				rubroempleaAux.setes_fondo_reserva(this.rubroemplea.getes_fondo_reserva());	
				rubroempleaAux.setes_decimo_tercero(this.rubroemplea.getes_decimo_tercero());	
				rubroempleaAux.setes_decimo_cuarto(this.rubroemplea.getes_decimo_cuarto());	
								
				//ARCHITECTURE
				if(Constantes.ISUSAEJBLOGICLAYER) {
					//NO ENTENDIBLE PORQUE PONER
					//if(this.rubroempleaSessionBean.getEstaModoGuardarRelaciones() 
					//	|| this.rubroempleaSessionBean.getEsGuardarRelacionado())	{
						actualizarLista(rubroempleaAux,rubroempleaLogic.getRubroEmpleas());
					//}
				} else if(Constantes.ISUSAEJBREMOTE||Constantes.ISUSAEJBHOME) {
					actualizarLista(rubroempleaAux,rubroempleas);
				}
				//ARCHITECTURE
				
				if(!isGuardarCambiosEnLote  && !this.rubroempleaSessionBean.getEstaModoGuardarRelaciones() 
						&& !this.rubroempleaSessionBean.getEsGuardarRelacionado())	{
					
					//ARCHITECTURE
					if(Constantes.ISUSAEJBLOGICLAYER) {
						rubroempleaLogic.saveRubroEmpleas();//WithConnection
						//rubroempleaLogic.getSetVersionRowRubroEmpleas();//WithConnection
					} else if(Constantes.ISUSAEJBREMOTE) {
					} else if(Constantes.ISUSAEJBHOME) {
					}
					//ARCHITECTURE		
					
					//POR BUG: EL OBJETO ACTUAL SE PERDIA, POR LO QUE SE GUARDA TAMBIEN VALORES EN AUX Y LUEGO DESPUES DEL MENSAJE SE HACE REFERENCIA EL OBJETO ACTUAL AL AUX
					this.bugActualizarReferenciaActual(this.rubroemplea,rubroempleaAux);
					
					this.refrescarForeignKeysDescripcionesRubroEmplea();
				} else {
					//CUANDO ES MANTENIMIENTO MAESTRO DETALLE
					if(this.rubroempleaSessionBean.getEstaModoGuardarRelaciones()) {
						//GUARDAR RELACIONES
						//ARCHITECTURE
						if(Constantes.ISUSAEJBLOGICLAYER) {
							
							this.jInternalFrameDetalleFormRubroEmplea.historialpagonomiBeanSwingJInternalFrame.historialpagonomiLogic.getHistorialPagoNomis().addAll(this.jInternalFrameDetalleFormRubroEmplea.historialpagonomiBeanSwingJInternalFrame.historialpagonomisEliminados);
							this.jInternalFrameDetalleFormRubroEmplea.rubroestructuraBeanSwingJInternalFrame.rubroestructuraLogic.getRubroEstructuras().addAll(this.jInternalFrameDetalleFormRubroEmplea.rubroestructuraBeanSwingJInternalFrame.rubroestructurasEliminados);
							this.jInternalFrameDetalleFormRubroEmplea.defiprovisionempleadoBeanSwingJInternalFrame.defiprovisionempleadoLogic.getDefiProvisionEmpleados().addAll(this.jInternalFrameDetalleFormRubroEmplea.defiprovisionempleadoBeanSwingJInternalFrame.defiprovisionempleadosEliminados);
							this.jInternalFrameDetalleFormRubroEmplea.empleadopagorubroBeanSwingJInternalFrame.empleadopagorubroLogic.getEmpleadoPagoRubros().addAll(this.jInternalFrameDetalleFormRubroEmplea.empleadopagorubroBeanSwingJInternalFrame.empleadopagorubrosEliminados);
							this.jInternalFrameDetalleFormRubroEmplea.historialpagomesnomiBeanSwingJInternalFrame.historialpagomesnomiLogic.getHistorialPagoMesNomis().addAll(this.jInternalFrameDetalleFormRubroEmplea.historialpagomesnomiBeanSwingJInternalFrame.historialpagomesnomisEliminados);
							this.jInternalFrameDetalleFormRubroEmplea.rubroempleadoBeanSwingJInternalFrame.rubroempleadoLogic.getRubroEmpleados().addAll(this.jInternalFrameDetalleFormRubroEmplea.rubroempleadoBeanSwingJInternalFrame.rubroempleadosEliminados);
							this.jInternalFrameDetalleFormRubroEmplea.valorrubrovariableBeanSwingJInternalFrame.valorrubrovariableLogic.getValorRubroVariables().addAll(this.jInternalFrameDetalleFormRubroEmplea.valorrubrovariableBeanSwingJInternalFrame.valorrubrovariablesEliminados);
							this.jInternalFrameDetalleFormRubroEmplea.tipoprestamoBeanSwingJInternalFrame.tipoprestamoLogic.getTipoPrestamos().addAll(this.jInternalFrameDetalleFormRubroEmplea.tipoprestamoBeanSwingJInternalFrame.tipoprestamosEliminados);
							this.jInternalFrameDetalleFormRubroEmplea.rubroempleacuentacontableBeanSwingJInternalFrame.rubroempleacuentacontableLogic.getRubroEmpleaCuentaContables().addAll(this.jInternalFrameDetalleFormRubroEmplea.rubroempleacuentacontableBeanSwingJInternalFrame.rubroempleacuentacontablesEliminados);
						} else if(Constantes.ISUSAEJBREMOTE ||Constantes.ISUSAEJBHOME) {
							
							this.jInternalFrameDetalleFormRubroEmplea.historialpagonomiBeanSwingJInternalFrame.historialpagonomis.addAll(this.jInternalFrameDetalleFormRubroEmplea.historialpagonomiBeanSwingJInternalFrame.historialpagonomisEliminados);
							this.jInternalFrameDetalleFormRubroEmplea.rubroestructuraBeanSwingJInternalFrame.rubroestructuras.addAll(this.jInternalFrameDetalleFormRubroEmplea.rubroestructuraBeanSwingJInternalFrame.rubroestructurasEliminados);
							this.jInternalFrameDetalleFormRubroEmplea.defiprovisionempleadoBeanSwingJInternalFrame.defiprovisionempleados.addAll(this.jInternalFrameDetalleFormRubroEmplea.defiprovisionempleadoBeanSwingJInternalFrame.defiprovisionempleadosEliminados);
							this.jInternalFrameDetalleFormRubroEmplea.empleadopagorubroBeanSwingJInternalFrame.empleadopagorubros.addAll(this.jInternalFrameDetalleFormRubroEmplea.empleadopagorubroBeanSwingJInternalFrame.empleadopagorubrosEliminados);
							this.jInternalFrameDetalleFormRubroEmplea.historialpagomesnomiBeanSwingJInternalFrame.historialpagomesnomis.addAll(this.jInternalFrameDetalleFormRubroEmplea.historialpagomesnomiBeanSwingJInternalFrame.historialpagomesnomisEliminados);
							this.jInternalFrameDetalleFormRubroEmplea.rubroempleadoBeanSwingJInternalFrame.rubroempleados.addAll(this.jInternalFrameDetalleFormRubroEmplea.rubroempleadoBeanSwingJInternalFrame.rubroempleadosEliminados);
							this.jInternalFrameDetalleFormRubroEmplea.valorrubrovariableBeanSwingJInternalFrame.valorrubrovariables.addAll(this.jInternalFrameDetalleFormRubroEmplea.valorrubrovariableBeanSwingJInternalFrame.valorrubrovariablesEliminados);
							this.jInternalFrameDetalleFormRubroEmplea.tipoprestamoBeanSwingJInternalFrame.tipoprestamos.addAll(this.jInternalFrameDetalleFormRubroEmplea.tipoprestamoBeanSwingJInternalFrame.tipoprestamosEliminados);
							this.jInternalFrameDetalleFormRubroEmplea.rubroempleacuentacontableBeanSwingJInternalFrame.rubroempleacuentacontables.addAll(this.jInternalFrameDetalleFormRubroEmplea.rubroempleacuentacontableBeanSwingJInternalFrame.rubroempleacuentacontablesEliminados);
						}
						//ARCHITECTURE	
						
						if(!this.rubroempleaSessionBean.getEsGuardarRelacionado()) {
							//QUITAR FILA TOTAL
							//ARCHITECTURE
							if(Constantes.ISUSAEJBLOGICLAYER) {
							
								if(this.jInternalFrameDetalleFormRubroEmplea.historialpagonomiBeanSwingJInternalFrame!=null && this.jInternalFrameDetalleFormRubroEmplea.historialpagonomiBeanSwingJInternalFrame.conTotales) {/*this.jInternalFrameDetalleFormRubroEmplea.historialpagonomiBeanSwingJInternalFrame.quitarFilaTotales();*/}
								if(this.jInternalFrameDetalleFormRubroEmplea.rubroestructuraBeanSwingJInternalFrame!=null && this.jInternalFrameDetalleFormRubroEmplea.rubroestructuraBeanSwingJInternalFrame.conTotales) {/*this.jInternalFrameDetalleFormRubroEmplea.rubroestructuraBeanSwingJInternalFrame.quitarFilaTotales();*/}
								if(this.jInternalFrameDetalleFormRubroEmplea.defiprovisionempleadoBeanSwingJInternalFrame!=null && this.jInternalFrameDetalleFormRubroEmplea.defiprovisionempleadoBeanSwingJInternalFrame.conTotales) {/*this.jInternalFrameDetalleFormRubroEmplea.defiprovisionempleadoBeanSwingJInternalFrame.quitarFilaTotales();*/}
									if(this.jInternalFrameDetalleFormRubroEmplea.defiprovisionempleadoBeanSwingJInternalFrame.jInternalFrameDetalleFormDefiProvisionEmpleado.provisionempleadoBeanSwingJInternalFrame!=null && this.jInternalFrameDetalleFormRubroEmplea.defiprovisionempleadoBeanSwingJInternalFrame.jInternalFrameDetalleFormDefiProvisionEmpleado.provisionempleadoBeanSwingJInternalFrame.conTotales) {/*this.jInternalFrameDetalleFormRubroEmplea.defiprovisionempleadoBeanSwingJInternalFrame.jInternalFrameDetalleFormDefiProvisionEmpleado.provisionempleadoBeanSwingJInternalFrame.quitarFilaTotales();*/}
									if(this.jInternalFrameDetalleFormRubroEmplea.defiprovisionempleadoBeanSwingJInternalFrame.jInternalFrameDetalleFormDefiProvisionEmpleado.cuotaBeanSwingJInternalFrame!=null && this.jInternalFrameDetalleFormRubroEmplea.defiprovisionempleadoBeanSwingJInternalFrame.jInternalFrameDetalleFormDefiProvisionEmpleado.cuotaBeanSwingJInternalFrame.conTotales) {/*this.jInternalFrameDetalleFormRubroEmplea.defiprovisionempleadoBeanSwingJInternalFrame.jInternalFrameDetalleFormDefiProvisionEmpleado.cuotaBeanSwingJInternalFrame.quitarFilaTotales();*/}
								if(this.jInternalFrameDetalleFormRubroEmplea.empleadopagorubroBeanSwingJInternalFrame!=null && this.jInternalFrameDetalleFormRubroEmplea.empleadopagorubroBeanSwingJInternalFrame.conTotales) {/*this.jInternalFrameDetalleFormRubroEmplea.empleadopagorubroBeanSwingJInternalFrame.quitarFilaTotales();*/}
								if(this.jInternalFrameDetalleFormRubroEmplea.historialpagomesnomiBeanSwingJInternalFrame!=null && this.jInternalFrameDetalleFormRubroEmplea.historialpagomesnomiBeanSwingJInternalFrame.conTotales) {/*this.jInternalFrameDetalleFormRubroEmplea.historialpagomesnomiBeanSwingJInternalFrame.quitarFilaTotales();*/}
								if(this.jInternalFrameDetalleFormRubroEmplea.rubroempleadoBeanSwingJInternalFrame!=null && this.jInternalFrameDetalleFormRubroEmplea.rubroempleadoBeanSwingJInternalFrame.conTotales) {/*this.jInternalFrameDetalleFormRubroEmplea.rubroempleadoBeanSwingJInternalFrame.quitarFilaTotales();*/}
								if(this.jInternalFrameDetalleFormRubroEmplea.valorrubrovariableBeanSwingJInternalFrame!=null && this.jInternalFrameDetalleFormRubroEmplea.valorrubrovariableBeanSwingJInternalFrame.conTotales) {/*this.jInternalFrameDetalleFormRubroEmplea.valorrubrovariableBeanSwingJInternalFrame.quitarFilaTotales();*/}
								if(this.jInternalFrameDetalleFormRubroEmplea.tipoprestamoBeanSwingJInternalFrame!=null && this.jInternalFrameDetalleFormRubroEmplea.tipoprestamoBeanSwingJInternalFrame.conTotales) {/*this.jInternalFrameDetalleFormRubroEmplea.tipoprestamoBeanSwingJInternalFrame.quitarFilaTotales();*/}
									if(this.jInternalFrameDetalleFormRubroEmplea.tipoprestamoBeanSwingJInternalFrame.jInternalFrameDetalleFormTipoPrestamo.prestamoBeanSwingJInternalFrame!=null && this.jInternalFrameDetalleFormRubroEmplea.tipoprestamoBeanSwingJInternalFrame.jInternalFrameDetalleFormTipoPrestamo.prestamoBeanSwingJInternalFrame.conTotales) {/*this.jInternalFrameDetalleFormRubroEmplea.tipoprestamoBeanSwingJInternalFrame.jInternalFrameDetalleFormTipoPrestamo.prestamoBeanSwingJInternalFrame.quitarFilaTotales();*/}
									if(this.jInternalFrameDetalleFormRubroEmplea.tipoprestamoBeanSwingJInternalFrame.jInternalFrameDetalleFormTipoPrestamo.prestamoBeanSwingJInternalFrame.jInternalFrameDetalleFormPrestamo.abonoprestamoBeanSwingJInternalFrame!=null && this.jInternalFrameDetalleFormRubroEmplea.tipoprestamoBeanSwingJInternalFrame.jInternalFrameDetalleFormTipoPrestamo.prestamoBeanSwingJInternalFrame.jInternalFrameDetalleFormPrestamo.abonoprestamoBeanSwingJInternalFrame.conTotales) {/*this.jInternalFrameDetalleFormRubroEmplea.tipoprestamoBeanSwingJInternalFrame.jInternalFrameDetalleFormTipoPrestamo.prestamoBeanSwingJInternalFrame.jInternalFrameDetalleFormPrestamo.abonoprestamoBeanSwingJInternalFrame.quitarFilaTotales();*/}
									if(this.jInternalFrameDetalleFormRubroEmplea.tipoprestamoBeanSwingJInternalFrame.jInternalFrameDetalleFormTipoPrestamo.prestamoBeanSwingJInternalFrame.jInternalFrameDetalleFormPrestamo.cuotaBeanSwingJInternalFrame!=null && this.jInternalFrameDetalleFormRubroEmplea.tipoprestamoBeanSwingJInternalFrame.jInternalFrameDetalleFormTipoPrestamo.prestamoBeanSwingJInternalFrame.jInternalFrameDetalleFormPrestamo.cuotaBeanSwingJInternalFrame.conTotales) {/*this.jInternalFrameDetalleFormRubroEmplea.tipoprestamoBeanSwingJInternalFrame.jInternalFrameDetalleFormTipoPrestamo.prestamoBeanSwingJInternalFrame.jInternalFrameDetalleFormPrestamo.cuotaBeanSwingJInternalFrame.quitarFilaTotales();*/}
								if(this.jInternalFrameDetalleFormRubroEmplea.rubroempleacuentacontableBeanSwingJInternalFrame!=null && this.jInternalFrameDetalleFormRubroEmplea.rubroempleacuentacontableBeanSwingJInternalFrame.conTotales) {/*this.jInternalFrameDetalleFormRubroEmplea.rubroempleacuentacontableBeanSwingJInternalFrame.quitarFilaTotales();*/}
							} else if(Constantes.ISUSAEJBREMOTE ||Constantes.ISUSAEJBHOME) {
							
								if(this.jInternalFrameDetalleFormRubroEmplea.historialpagonomiBeanSwingJInternalFrame!=null && this.jInternalFrameDetalleFormRubroEmplea.historialpagonomiBeanSwingJInternalFrame.conTotales) {/*this.jInternalFrameDetalleFormRubroEmplea.historialpagonomiBeanSwingJInternalFrame.quitarFilaTotales();*/}
								if(this.jInternalFrameDetalleFormRubroEmplea.rubroestructuraBeanSwingJInternalFrame!=null && this.jInternalFrameDetalleFormRubroEmplea.rubroestructuraBeanSwingJInternalFrame.conTotales) {/*this.jInternalFrameDetalleFormRubroEmplea.rubroestructuraBeanSwingJInternalFrame.quitarFilaTotales();*/}
								if(this.jInternalFrameDetalleFormRubroEmplea.defiprovisionempleadoBeanSwingJInternalFrame!=null && this.jInternalFrameDetalleFormRubroEmplea.defiprovisionempleadoBeanSwingJInternalFrame.conTotales) {/*this.jInternalFrameDetalleFormRubroEmplea.defiprovisionempleadoBeanSwingJInternalFrame.quitarFilaTotales();*/}
									if(this.jInternalFrameDetalleFormRubroEmplea.defiprovisionempleadoBeanSwingJInternalFrame.jInternalFrameDetalleFormDefiProvisionEmpleado.provisionempleadoBeanSwingJInternalFrame!=null && this.jInternalFrameDetalleFormRubroEmplea.defiprovisionempleadoBeanSwingJInternalFrame.jInternalFrameDetalleFormDefiProvisionEmpleado.provisionempleadoBeanSwingJInternalFrame.conTotales) {/*this.jInternalFrameDetalleFormRubroEmplea.defiprovisionempleadoBeanSwingJInternalFrame.jInternalFrameDetalleFormDefiProvisionEmpleado.provisionempleadoBeanSwingJInternalFrame.quitarFilaTotales();*/}
									if(this.jInternalFrameDetalleFormRubroEmplea.defiprovisionempleadoBeanSwingJInternalFrame.jInternalFrameDetalleFormDefiProvisionEmpleado.cuotaBeanSwingJInternalFrame!=null && this.jInternalFrameDetalleFormRubroEmplea.defiprovisionempleadoBeanSwingJInternalFrame.jInternalFrameDetalleFormDefiProvisionEmpleado.cuotaBeanSwingJInternalFrame.conTotales) {/*this.jInternalFrameDetalleFormRubroEmplea.defiprovisionempleadoBeanSwingJInternalFrame.jInternalFrameDetalleFormDefiProvisionEmpleado.cuotaBeanSwingJInternalFrame.quitarFilaTotales();*/}
								if(this.jInternalFrameDetalleFormRubroEmplea.empleadopagorubroBeanSwingJInternalFrame!=null && this.jInternalFrameDetalleFormRubroEmplea.empleadopagorubroBeanSwingJInternalFrame.conTotales) {/*this.jInternalFrameDetalleFormRubroEmplea.empleadopagorubroBeanSwingJInternalFrame.quitarFilaTotales();*/}
								if(this.jInternalFrameDetalleFormRubroEmplea.historialpagomesnomiBeanSwingJInternalFrame!=null && this.jInternalFrameDetalleFormRubroEmplea.historialpagomesnomiBeanSwingJInternalFrame.conTotales) {/*this.jInternalFrameDetalleFormRubroEmplea.historialpagomesnomiBeanSwingJInternalFrame.quitarFilaTotales();*/}
								if(this.jInternalFrameDetalleFormRubroEmplea.rubroempleadoBeanSwingJInternalFrame!=null && this.jInternalFrameDetalleFormRubroEmplea.rubroempleadoBeanSwingJInternalFrame.conTotales) {/*this.jInternalFrameDetalleFormRubroEmplea.rubroempleadoBeanSwingJInternalFrame.quitarFilaTotales();*/}
								if(this.jInternalFrameDetalleFormRubroEmplea.valorrubrovariableBeanSwingJInternalFrame!=null && this.jInternalFrameDetalleFormRubroEmplea.valorrubrovariableBeanSwingJInternalFrame.conTotales) {/*this.jInternalFrameDetalleFormRubroEmplea.valorrubrovariableBeanSwingJInternalFrame.quitarFilaTotales();*/}
								if(this.jInternalFrameDetalleFormRubroEmplea.tipoprestamoBeanSwingJInternalFrame!=null && this.jInternalFrameDetalleFormRubroEmplea.tipoprestamoBeanSwingJInternalFrame.conTotales) {/*this.jInternalFrameDetalleFormRubroEmplea.tipoprestamoBeanSwingJInternalFrame.quitarFilaTotales();*/}
									if(this.jInternalFrameDetalleFormRubroEmplea.tipoprestamoBeanSwingJInternalFrame.jInternalFrameDetalleFormTipoPrestamo.prestamoBeanSwingJInternalFrame!=null && this.jInternalFrameDetalleFormRubroEmplea.tipoprestamoBeanSwingJInternalFrame.jInternalFrameDetalleFormTipoPrestamo.prestamoBeanSwingJInternalFrame.conTotales) {/*this.jInternalFrameDetalleFormRubroEmplea.tipoprestamoBeanSwingJInternalFrame.jInternalFrameDetalleFormTipoPrestamo.prestamoBeanSwingJInternalFrame.quitarFilaTotales();*/}
									if(this.jInternalFrameDetalleFormRubroEmplea.tipoprestamoBeanSwingJInternalFrame.jInternalFrameDetalleFormTipoPrestamo.prestamoBeanSwingJInternalFrame.jInternalFrameDetalleFormPrestamo.abonoprestamoBeanSwingJInternalFrame!=null && this.jInternalFrameDetalleFormRubroEmplea.tipoprestamoBeanSwingJInternalFrame.jInternalFrameDetalleFormTipoPrestamo.prestamoBeanSwingJInternalFrame.jInternalFrameDetalleFormPrestamo.abonoprestamoBeanSwingJInternalFrame.conTotales) {/*this.jInternalFrameDetalleFormRubroEmplea.tipoprestamoBeanSwingJInternalFrame.jInternalFrameDetalleFormTipoPrestamo.prestamoBeanSwingJInternalFrame.jInternalFrameDetalleFormPrestamo.abonoprestamoBeanSwingJInternalFrame.quitarFilaTotales();*/}
									if(this.jInternalFrameDetalleFormRubroEmplea.tipoprestamoBeanSwingJInternalFrame.jInternalFrameDetalleFormTipoPrestamo.prestamoBeanSwingJInternalFrame.jInternalFrameDetalleFormPrestamo.cuotaBeanSwingJInternalFrame!=null && this.jInternalFrameDetalleFormRubroEmplea.tipoprestamoBeanSwingJInternalFrame.jInternalFrameDetalleFormTipoPrestamo.prestamoBeanSwingJInternalFrame.jInternalFrameDetalleFormPrestamo.cuotaBeanSwingJInternalFrame.conTotales) {/*this.jInternalFrameDetalleFormRubroEmplea.tipoprestamoBeanSwingJInternalFrame.jInternalFrameDetalleFormTipoPrestamo.prestamoBeanSwingJInternalFrame.jInternalFrameDetalleFormPrestamo.cuotaBeanSwingJInternalFrame.quitarFilaTotales();*/}
								if(this.jInternalFrameDetalleFormRubroEmplea.rubroempleacuentacontableBeanSwingJInternalFrame!=null && this.jInternalFrameDetalleFormRubroEmplea.rubroempleacuentacontableBeanSwingJInternalFrame.conTotales) {/*this.jInternalFrameDetalleFormRubroEmplea.rubroempleacuentacontableBeanSwingJInternalFrame.quitarFilaTotales();*/}	
							}
							//ARCHITECTURE
												
							//ARCHITECTURE
							if(Constantes.ISUSAEJBLOGICLAYER) {
								rubroempleaLogic.saveRubroEmpleaRelaciones(rubroempleaAux,this.jInternalFrameDetalleFormRubroEmplea.historialpagonomiBeanSwingJInternalFrame.historialpagonomiLogic.getHistorialPagoNomis(),this.jInternalFrameDetalleFormRubroEmplea.rubroestructuraBeanSwingJInternalFrame.rubroestructuraLogic.getRubroEstructuras(),this.jInternalFrameDetalleFormRubroEmplea.defiprovisionempleadoBeanSwingJInternalFrame.defiprovisionempleadoLogic.getDefiProvisionEmpleados(),this.jInternalFrameDetalleFormRubroEmplea.empleadopagorubroBeanSwingJInternalFrame.empleadopagorubroLogic.getEmpleadoPagoRubros(),this.jInternalFrameDetalleFormRubroEmplea.historialpagomesnomiBeanSwingJInternalFrame.historialpagomesnomiLogic.getHistorialPagoMesNomis(),this.jInternalFrameDetalleFormRubroEmplea.rubroempleadoBeanSwingJInternalFrame.rubroempleadoLogic.getRubroEmpleados(),this.jInternalFrameDetalleFormRubroEmplea.valorrubrovariableBeanSwingJInternalFrame.valorrubrovariableLogic.getValorRubroVariables(),this.jInternalFrameDetalleFormRubroEmplea.tipoprestamoBeanSwingJInternalFrame.tipoprestamoLogic.getTipoPrestamos(),this.jInternalFrameDetalleFormRubroEmplea.rubroempleacuentacontableBeanSwingJInternalFrame.rubroempleacuentacontableLogic.getRubroEmpleaCuentaContables());//WithConnection
								//rubroempleaLogic.getSetVersionRowRubroEmpleas();//WithConnection
							} else if(Constantes.ISUSAEJBREMOTE) {
							} else if(Constantes.ISUSAEJBHOME) {
							}
							//ARCHITECTURE
							
							//POR BUG: EL OBJETO ACTUAL SE PERDIA, POR LO QUE SE GUARDA TAMBIEN VALORES EN AUX Y LUEGO DESPUES DEL MENSAJE SE HACE REFERENCIA EL OBJETO ACTUAL AL AUX
							this.bugActualizarReferenciaActual(this.rubroemplea,rubroempleaAux);
					
					
							//ARCHITECTURE
							if(Constantes.ISUSAEJBLOGICLAYER) {
								
							this.jInternalFrameDetalleFormRubroEmplea.historialpagonomiBeanSwingJInternalFrame.historialpagonomiLogic.setHistorialPagoNomis(new ArrayList<HistorialPagoNomi>());
							this.jInternalFrameDetalleFormRubroEmplea.rubroestructuraBeanSwingJInternalFrame.rubroestructuraLogic.setRubroEstructuras(new ArrayList<RubroEstructura>());
							this.jInternalFrameDetalleFormRubroEmplea.defiprovisionempleadoBeanSwingJInternalFrame.defiprovisionempleadoLogic.setDefiProvisionEmpleados(new ArrayList<DefiProvisionEmpleado>());
							this.jInternalFrameDetalleFormRubroEmplea.empleadopagorubroBeanSwingJInternalFrame.empleadopagorubroLogic.setEmpleadoPagoRubros(new ArrayList<EmpleadoPagoRubro>());
							this.jInternalFrameDetalleFormRubroEmplea.historialpagomesnomiBeanSwingJInternalFrame.historialpagomesnomiLogic.setHistorialPagoMesNomis(new ArrayList<HistorialPagoMesNomi>());
							this.jInternalFrameDetalleFormRubroEmplea.rubroempleadoBeanSwingJInternalFrame.rubroempleadoLogic.setRubroEmpleados(new ArrayList<RubroEmpleado>());
							this.jInternalFrameDetalleFormRubroEmplea.valorrubrovariableBeanSwingJInternalFrame.valorrubrovariableLogic.setValorRubroVariables(new ArrayList<ValorRubroVariable>());
							this.jInternalFrameDetalleFormRubroEmplea.tipoprestamoBeanSwingJInternalFrame.tipoprestamoLogic.setTipoPrestamos(new ArrayList<TipoPrestamo>());
							this.jInternalFrameDetalleFormRubroEmplea.rubroempleacuentacontableBeanSwingJInternalFrame.rubroempleacuentacontableLogic.setRubroEmpleaCuentaContables(new ArrayList<RubroEmpleaCuentaContable>());
							} else if(Constantes.ISUSAEJBREMOTE ||Constantes.ISUSAEJBHOME) {
								
							this.jInternalFrameDetalleFormRubroEmplea.historialpagonomiBeanSwingJInternalFrame.historialpagonomis= new ArrayList<HistorialPagoNomi>();
							this.jInternalFrameDetalleFormRubroEmplea.rubroestructuraBeanSwingJInternalFrame.rubroestructuras= new ArrayList<RubroEstructura>();
							this.jInternalFrameDetalleFormRubroEmplea.defiprovisionempleadoBeanSwingJInternalFrame.defiprovisionempleados= new ArrayList<DefiProvisionEmpleado>();
							this.jInternalFrameDetalleFormRubroEmplea.empleadopagorubroBeanSwingJInternalFrame.empleadopagorubros= new ArrayList<EmpleadoPagoRubro>();
							this.jInternalFrameDetalleFormRubroEmplea.historialpagomesnomiBeanSwingJInternalFrame.historialpagomesnomis= new ArrayList<HistorialPagoMesNomi>();
							this.jInternalFrameDetalleFormRubroEmplea.rubroempleadoBeanSwingJInternalFrame.rubroempleados= new ArrayList<RubroEmpleado>();
							this.jInternalFrameDetalleFormRubroEmplea.valorrubrovariableBeanSwingJInternalFrame.valorrubrovariables= new ArrayList<ValorRubroVariable>();
							this.jInternalFrameDetalleFormRubroEmplea.tipoprestamoBeanSwingJInternalFrame.tipoprestamos= new ArrayList<TipoPrestamo>();
							this.jInternalFrameDetalleFormRubroEmplea.rubroempleacuentacontableBeanSwingJInternalFrame.rubroempleacuentacontables= new ArrayList<RubroEmpleaCuentaContable>();
							}
							//ARCHITECTURE	
						} else {
							
							

							if(this.jInternalFrameDetalleFormRubroEmplea.historialpagonomiBeanSwingJInternalFrame!=null && this.jInternalFrameDetalleFormRubroEmplea.historialpagonomiBeanSwingJInternalFrame.conTotales) {this.jInternalFrameDetalleFormRubroEmplea.historialpagonomiBeanSwingJInternalFrame.quitarFilaTotales();}
							rubroempleaAux.setHistorialPagoNomis(this.jInternalFrameDetalleFormRubroEmplea.historialpagonomiBeanSwingJInternalFrame.historialpagonomiLogic.getHistorialPagoNomis());

							if(this.jInternalFrameDetalleFormRubroEmplea.rubroestructuraBeanSwingJInternalFrame!=null && this.jInternalFrameDetalleFormRubroEmplea.rubroestructuraBeanSwingJInternalFrame.conTotales) {this.jInternalFrameDetalleFormRubroEmplea.rubroestructuraBeanSwingJInternalFrame.quitarFilaTotales();}
							rubroempleaAux.setRubroEstructuras(this.jInternalFrameDetalleFormRubroEmplea.rubroestructuraBeanSwingJInternalFrame.rubroestructuraLogic.getRubroEstructuras());

							if(this.jInternalFrameDetalleFormRubroEmplea.defiprovisionempleadoBeanSwingJInternalFrame!=null && this.jInternalFrameDetalleFormRubroEmplea.defiprovisionempleadoBeanSwingJInternalFrame.conTotales) {this.jInternalFrameDetalleFormRubroEmplea.defiprovisionempleadoBeanSwingJInternalFrame.quitarFilaTotales();}
							rubroempleaAux.setDefiProvisionEmpleados(this.jInternalFrameDetalleFormRubroEmplea.defiprovisionempleadoBeanSwingJInternalFrame.defiprovisionempleadoLogic.getDefiProvisionEmpleados());

							if(this.jInternalFrameDetalleFormRubroEmplea.empleadopagorubroBeanSwingJInternalFrame!=null && this.jInternalFrameDetalleFormRubroEmplea.empleadopagorubroBeanSwingJInternalFrame.conTotales) {this.jInternalFrameDetalleFormRubroEmplea.empleadopagorubroBeanSwingJInternalFrame.quitarFilaTotales();}
							rubroempleaAux.setEmpleadoPagoRubros(this.jInternalFrameDetalleFormRubroEmplea.empleadopagorubroBeanSwingJInternalFrame.empleadopagorubroLogic.getEmpleadoPagoRubros());

							if(this.jInternalFrameDetalleFormRubroEmplea.historialpagomesnomiBeanSwingJInternalFrame!=null && this.jInternalFrameDetalleFormRubroEmplea.historialpagomesnomiBeanSwingJInternalFrame.conTotales) {this.jInternalFrameDetalleFormRubroEmplea.historialpagomesnomiBeanSwingJInternalFrame.quitarFilaTotales();}
							rubroempleaAux.setHistorialPagoMesNomis(this.jInternalFrameDetalleFormRubroEmplea.historialpagomesnomiBeanSwingJInternalFrame.historialpagomesnomiLogic.getHistorialPagoMesNomis());

							if(this.jInternalFrameDetalleFormRubroEmplea.rubroempleadoBeanSwingJInternalFrame!=null && this.jInternalFrameDetalleFormRubroEmplea.rubroempleadoBeanSwingJInternalFrame.conTotales) {this.jInternalFrameDetalleFormRubroEmplea.rubroempleadoBeanSwingJInternalFrame.quitarFilaTotales();}
							rubroempleaAux.setRubroEmpleados(this.jInternalFrameDetalleFormRubroEmplea.rubroempleadoBeanSwingJInternalFrame.rubroempleadoLogic.getRubroEmpleados());

							if(this.jInternalFrameDetalleFormRubroEmplea.valorrubrovariableBeanSwingJInternalFrame!=null && this.jInternalFrameDetalleFormRubroEmplea.valorrubrovariableBeanSwingJInternalFrame.conTotales) {this.jInternalFrameDetalleFormRubroEmplea.valorrubrovariableBeanSwingJInternalFrame.quitarFilaTotales();}
							rubroempleaAux.setValorRubroVariables(this.jInternalFrameDetalleFormRubroEmplea.valorrubrovariableBeanSwingJInternalFrame.valorrubrovariableLogic.getValorRubroVariables());

							if(this.jInternalFrameDetalleFormRubroEmplea.tipoprestamoBeanSwingJInternalFrame!=null && this.jInternalFrameDetalleFormRubroEmplea.tipoprestamoBeanSwingJInternalFrame.conTotales) {this.jInternalFrameDetalleFormRubroEmplea.tipoprestamoBeanSwingJInternalFrame.quitarFilaTotales();}
							rubroempleaAux.setTipoPrestamos(this.jInternalFrameDetalleFormRubroEmplea.tipoprestamoBeanSwingJInternalFrame.tipoprestamoLogic.getTipoPrestamos());

							if(this.jInternalFrameDetalleFormRubroEmplea.rubroempleacuentacontableBeanSwingJInternalFrame!=null && this.jInternalFrameDetalleFormRubroEmplea.rubroempleacuentacontableBeanSwingJInternalFrame.conTotales) {this.jInternalFrameDetalleFormRubroEmplea.rubroempleacuentacontableBeanSwingJInternalFrame.quitarFilaTotales();}
							rubroempleaAux.setRubroEmpleaCuentaContables(this.jInternalFrameDetalleFormRubroEmplea.rubroempleacuentacontableBeanSwingJInternalFrame.rubroempleacuentacontableLogic.getRubroEmpleaCuentaContables());
							
							//ARCHITECTURE
							if(Constantes.ISUSAEJBLOGICLAYER) {
								if(this.rubroempleaSessionBean.getEstaModoGuardarRelaciones() 
									|| this.rubroempleaSessionBean.getEsGuardarRelacionado())	{
									actualizarLista(rubroempleaAux,rubroempleaLogic.getRubroEmpleas());
								}
							} else if(Constantes.ISUSAEJBREMOTE||Constantes.ISUSAEJBHOME) {
								actualizarLista(rubroempleaAux,rubroempleas);
							}
							//ARCHITECTURE
							
							//AQUI EL ID NEGATIVO ES EL ID BUSCADO, YA QUE NO SE GENERA OTRO EN LA DB POR INGRESAR UNO NUEVO
							//POR BUG: EL OBJETO ACTUAL SE PERDIA, POR LO QUE SE GUARDA TAMBIEN VALORES EN AUX Y LUEGO DESPUES DEL MENSAJE SE HACE REFERENCIA EL OBJETO ACTUAL AL AUX
							//this.bugActualizarReferenciaActual(this.rubroemplea,rubroempleaAux);												
						}
					}
				}
			} else if(maintenanceType==MaintenanceType.ACTUALIZAR) {
				rubroempleaAux=new  RubroEmplea();
				
				//PUEDE QUE SE ACTUALIZE ALGUN REGISTRO NUEVO
				if(!this.rubroempleaSessionBean.getEsGuardarRelacionado() 
					|| (this.rubroempleaSessionBean.getEsGuardarRelacionado() && this.rubroemplea.getId()>=0)) {
						
					rubroempleaAux.setIsNew(false);
				}
				
				rubroempleaAux.setIsDeleted(false);
			
				rubroempleaAux.setId(this.rubroemplea.getId());	
				rubroempleaAux.setVersionRow(this.rubroemplea.getVersionRow());	
				rubroempleaAux.setid_empresa(this.rubroemplea.getid_empresa());	
				rubroempleaAux.setid_tipo_calculo(this.rubroemplea.getid_tipo_calculo());	
				rubroempleaAux.setid_tipo_rubro_emplea(this.rubroemplea.getid_tipo_rubro_emplea());	
				rubroempleaAux.setid_tipo_grupo_rubro_emplea(this.rubroemplea.getid_tipo_grupo_rubro_emplea());	
				rubroempleaAux.setcodigo(this.rubroemplea.getcodigo());	
				rubroempleaAux.setnombre(this.rubroemplea.getnombre());	
				rubroempleaAux.setformula(this.rubroemplea.getformula());	
				rubroempleaAux.setalias(this.rubroemplea.getalias());	
				rubroempleaAux.setsecuencial(this.rubroemplea.getsecuencial());	
				rubroempleaAux.setpara_rol_pagos(this.rubroemplea.getpara_rol_pagos());	
				rubroempleaAux.setpara_sueldo(this.rubroemplea.getpara_sueldo());	
				rubroempleaAux.setpara_vacaciones(this.rubroemplea.getpara_vacaciones());	
				rubroempleaAux.setpara_impuesto_renta(this.rubroemplea.getpara_impuesto_renta());	
				rubroempleaAux.setpara_seguro_social(this.rubroemplea.getpara_seguro_social());	
				rubroempleaAux.setpara_provisiones(this.rubroemplea.getpara_provisiones());	
				rubroempleaAux.setpara_utilidades(this.rubroemplea.getpara_utilidades());	
				rubroempleaAux.setpara_rubro_iess(this.rubroemplea.getpara_rubro_iess());	
				rubroempleaAux.setes_fondo_reserva(this.rubroemplea.getes_fondo_reserva());	
				rubroempleaAux.setes_decimo_tercero(this.rubroemplea.getes_decimo_tercero());	
				rubroempleaAux.setes_decimo_cuarto(this.rubroemplea.getes_decimo_cuarto());	
				
				//ARCHITECTURE
				if(Constantes.ISUSAEJBLOGICLAYER) {
					actualizarLista(rubroempleaAux,rubroempleaLogic.getRubroEmpleas());
				} else if(Constantes.ISUSAEJBREMOTE||Constantes.ISUSAEJBHOME) {
					actualizarLista(rubroempleaAux,rubroempleas);
				}
				//ARCHITECTURE
				
				if(!isGuardarCambiosEnLote && !this.rubroempleaSessionBean.getEstaModoGuardarRelaciones() 
						&& !this.rubroempleaSessionBean.getEsGuardarRelacionado())	{
					
					//ARCHITECTURE
					if(Constantes.ISUSAEJBLOGICLAYER) {
						rubroempleaLogic.saveRubroEmpleas();//WithConnection
						//rubroempleaLogic.getSetVersionRowRubroEmpleas();//WithConnection
					} else if(Constantes.ISUSAEJBREMOTE) {
					} else if(Constantes.ISUSAEJBHOME) {
					}	
					//ARCHITECTURE
					
					//TALVEZ ESTA DEMAS POR SER UPDATE
					//POR BUG: EL OBJETO ACTUAL SE PERDIA, POR LO QUE SE GUARDA TAMBIEN VALORES EN AUX Y LUEGO DESPUES DEL MENSAJE SE HACE REFERENCIA EL OBJETO ACTUAL AL AUX
					this.bugActualizarReferenciaActual(this.rubroemplea,rubroempleaAux);
					
					this.refrescarForeignKeysDescripcionesRubroEmplea();
				} else {
					//CUANDO ES MANTENIMIENTO MAESTRO DETALLE
					if(this.rubroempleaSessionBean.getEstaModoGuardarRelaciones()) {
						//GUARDAR RELACIONES
						//ARCHITECTURE
						if(Constantes.ISUSAEJBLOGICLAYER) {
							
							this.jInternalFrameDetalleFormRubroEmplea.historialpagonomiBeanSwingJInternalFrame.historialpagonomiLogic.getHistorialPagoNomis().addAll(this.jInternalFrameDetalleFormRubroEmplea.historialpagonomiBeanSwingJInternalFrame.historialpagonomisEliminados);
							this.jInternalFrameDetalleFormRubroEmplea.rubroestructuraBeanSwingJInternalFrame.rubroestructuraLogic.getRubroEstructuras().addAll(this.jInternalFrameDetalleFormRubroEmplea.rubroestructuraBeanSwingJInternalFrame.rubroestructurasEliminados);
							this.jInternalFrameDetalleFormRubroEmplea.defiprovisionempleadoBeanSwingJInternalFrame.defiprovisionempleadoLogic.getDefiProvisionEmpleados().addAll(this.jInternalFrameDetalleFormRubroEmplea.defiprovisionempleadoBeanSwingJInternalFrame.defiprovisionempleadosEliminados);
							this.jInternalFrameDetalleFormRubroEmplea.empleadopagorubroBeanSwingJInternalFrame.empleadopagorubroLogic.getEmpleadoPagoRubros().addAll(this.jInternalFrameDetalleFormRubroEmplea.empleadopagorubroBeanSwingJInternalFrame.empleadopagorubrosEliminados);
							this.jInternalFrameDetalleFormRubroEmplea.historialpagomesnomiBeanSwingJInternalFrame.historialpagomesnomiLogic.getHistorialPagoMesNomis().addAll(this.jInternalFrameDetalleFormRubroEmplea.historialpagomesnomiBeanSwingJInternalFrame.historialpagomesnomisEliminados);
							this.jInternalFrameDetalleFormRubroEmplea.rubroempleadoBeanSwingJInternalFrame.rubroempleadoLogic.getRubroEmpleados().addAll(this.jInternalFrameDetalleFormRubroEmplea.rubroempleadoBeanSwingJInternalFrame.rubroempleadosEliminados);
							this.jInternalFrameDetalleFormRubroEmplea.valorrubrovariableBeanSwingJInternalFrame.valorrubrovariableLogic.getValorRubroVariables().addAll(this.jInternalFrameDetalleFormRubroEmplea.valorrubrovariableBeanSwingJInternalFrame.valorrubrovariablesEliminados);
							this.jInternalFrameDetalleFormRubroEmplea.tipoprestamoBeanSwingJInternalFrame.tipoprestamoLogic.getTipoPrestamos().addAll(this.jInternalFrameDetalleFormRubroEmplea.tipoprestamoBeanSwingJInternalFrame.tipoprestamosEliminados);
							this.jInternalFrameDetalleFormRubroEmplea.rubroempleacuentacontableBeanSwingJInternalFrame.rubroempleacuentacontableLogic.getRubroEmpleaCuentaContables().addAll(this.jInternalFrameDetalleFormRubroEmplea.rubroempleacuentacontableBeanSwingJInternalFrame.rubroempleacuentacontablesEliminados);
						} else if(Constantes.ISUSAEJBREMOTE ||Constantes.ISUSAEJBHOME) {
							
							this.jInternalFrameDetalleFormRubroEmplea.historialpagonomiBeanSwingJInternalFrame.historialpagonomis.addAll(this.jInternalFrameDetalleFormRubroEmplea.historialpagonomiBeanSwingJInternalFrame.historialpagonomisEliminados);
							this.jInternalFrameDetalleFormRubroEmplea.rubroestructuraBeanSwingJInternalFrame.rubroestructuras.addAll(this.jInternalFrameDetalleFormRubroEmplea.rubroestructuraBeanSwingJInternalFrame.rubroestructurasEliminados);
							this.jInternalFrameDetalleFormRubroEmplea.defiprovisionempleadoBeanSwingJInternalFrame.defiprovisionempleados.addAll(this.jInternalFrameDetalleFormRubroEmplea.defiprovisionempleadoBeanSwingJInternalFrame.defiprovisionempleadosEliminados);
							this.jInternalFrameDetalleFormRubroEmplea.empleadopagorubroBeanSwingJInternalFrame.empleadopagorubros.addAll(this.jInternalFrameDetalleFormRubroEmplea.empleadopagorubroBeanSwingJInternalFrame.empleadopagorubrosEliminados);
							this.jInternalFrameDetalleFormRubroEmplea.historialpagomesnomiBeanSwingJInternalFrame.historialpagomesnomis.addAll(this.jInternalFrameDetalleFormRubroEmplea.historialpagomesnomiBeanSwingJInternalFrame.historialpagomesnomisEliminados);
							this.jInternalFrameDetalleFormRubroEmplea.rubroempleadoBeanSwingJInternalFrame.rubroempleados.addAll(this.jInternalFrameDetalleFormRubroEmplea.rubroempleadoBeanSwingJInternalFrame.rubroempleadosEliminados);
							this.jInternalFrameDetalleFormRubroEmplea.valorrubrovariableBeanSwingJInternalFrame.valorrubrovariables.addAll(this.jInternalFrameDetalleFormRubroEmplea.valorrubrovariableBeanSwingJInternalFrame.valorrubrovariablesEliminados);
							this.jInternalFrameDetalleFormRubroEmplea.tipoprestamoBeanSwingJInternalFrame.tipoprestamos.addAll(this.jInternalFrameDetalleFormRubroEmplea.tipoprestamoBeanSwingJInternalFrame.tipoprestamosEliminados);
							this.jInternalFrameDetalleFormRubroEmplea.rubroempleacuentacontableBeanSwingJInternalFrame.rubroempleacuentacontables.addAll(this.jInternalFrameDetalleFormRubroEmplea.rubroempleacuentacontableBeanSwingJInternalFrame.rubroempleacuentacontablesEliminados);
						}
						//ARCHITECTURE
						
						if(!this.rubroempleaSessionBean.getEsGuardarRelacionado()) {
							//QUITAR FILA TOTAL
							//ARCHITECTURE
							if(Constantes.ISUSAEJBLOGICLAYER) {
							
								if(this.jInternalFrameDetalleFormRubroEmplea.historialpagonomiBeanSwingJInternalFrame!=null && this.jInternalFrameDetalleFormRubroEmplea.historialpagonomiBeanSwingJInternalFrame.conTotales) {/*this.jInternalFrameDetalleFormRubroEmplea.historialpagonomiBeanSwingJInternalFrame.quitarFilaTotales();*/}
								if(this.jInternalFrameDetalleFormRubroEmplea.rubroestructuraBeanSwingJInternalFrame!=null && this.jInternalFrameDetalleFormRubroEmplea.rubroestructuraBeanSwingJInternalFrame.conTotales) {/*this.jInternalFrameDetalleFormRubroEmplea.rubroestructuraBeanSwingJInternalFrame.quitarFilaTotales();*/}
								if(this.jInternalFrameDetalleFormRubroEmplea.defiprovisionempleadoBeanSwingJInternalFrame!=null && this.jInternalFrameDetalleFormRubroEmplea.defiprovisionempleadoBeanSwingJInternalFrame.conTotales) {/*this.jInternalFrameDetalleFormRubroEmplea.defiprovisionempleadoBeanSwingJInternalFrame.quitarFilaTotales();*/}
									if(this.jInternalFrameDetalleFormRubroEmplea.defiprovisionempleadoBeanSwingJInternalFrame.jInternalFrameDetalleFormDefiProvisionEmpleado.provisionempleadoBeanSwingJInternalFrame!=null && this.jInternalFrameDetalleFormRubroEmplea.defiprovisionempleadoBeanSwingJInternalFrame.jInternalFrameDetalleFormDefiProvisionEmpleado.provisionempleadoBeanSwingJInternalFrame.conTotales) {/*this.jInternalFrameDetalleFormRubroEmplea.defiprovisionempleadoBeanSwingJInternalFrame.jInternalFrameDetalleFormDefiProvisionEmpleado.provisionempleadoBeanSwingJInternalFrame.quitarFilaTotales();*/}
									if(this.jInternalFrameDetalleFormRubroEmplea.defiprovisionempleadoBeanSwingJInternalFrame.jInternalFrameDetalleFormDefiProvisionEmpleado.cuotaBeanSwingJInternalFrame!=null && this.jInternalFrameDetalleFormRubroEmplea.defiprovisionempleadoBeanSwingJInternalFrame.jInternalFrameDetalleFormDefiProvisionEmpleado.cuotaBeanSwingJInternalFrame.conTotales) {/*this.jInternalFrameDetalleFormRubroEmplea.defiprovisionempleadoBeanSwingJInternalFrame.jInternalFrameDetalleFormDefiProvisionEmpleado.cuotaBeanSwingJInternalFrame.quitarFilaTotales();*/}
								if(this.jInternalFrameDetalleFormRubroEmplea.empleadopagorubroBeanSwingJInternalFrame!=null && this.jInternalFrameDetalleFormRubroEmplea.empleadopagorubroBeanSwingJInternalFrame.conTotales) {/*this.jInternalFrameDetalleFormRubroEmplea.empleadopagorubroBeanSwingJInternalFrame.quitarFilaTotales();*/}
								if(this.jInternalFrameDetalleFormRubroEmplea.historialpagomesnomiBeanSwingJInternalFrame!=null && this.jInternalFrameDetalleFormRubroEmplea.historialpagomesnomiBeanSwingJInternalFrame.conTotales) {/*this.jInternalFrameDetalleFormRubroEmplea.historialpagomesnomiBeanSwingJInternalFrame.quitarFilaTotales();*/}
								if(this.jInternalFrameDetalleFormRubroEmplea.rubroempleadoBeanSwingJInternalFrame!=null && this.jInternalFrameDetalleFormRubroEmplea.rubroempleadoBeanSwingJInternalFrame.conTotales) {/*this.jInternalFrameDetalleFormRubroEmplea.rubroempleadoBeanSwingJInternalFrame.quitarFilaTotales();*/}
								if(this.jInternalFrameDetalleFormRubroEmplea.valorrubrovariableBeanSwingJInternalFrame!=null && this.jInternalFrameDetalleFormRubroEmplea.valorrubrovariableBeanSwingJInternalFrame.conTotales) {/*this.jInternalFrameDetalleFormRubroEmplea.valorrubrovariableBeanSwingJInternalFrame.quitarFilaTotales();*/}
								if(this.jInternalFrameDetalleFormRubroEmplea.tipoprestamoBeanSwingJInternalFrame!=null && this.jInternalFrameDetalleFormRubroEmplea.tipoprestamoBeanSwingJInternalFrame.conTotales) {/*this.jInternalFrameDetalleFormRubroEmplea.tipoprestamoBeanSwingJInternalFrame.quitarFilaTotales();*/}
									if(this.jInternalFrameDetalleFormRubroEmplea.tipoprestamoBeanSwingJInternalFrame.jInternalFrameDetalleFormTipoPrestamo.prestamoBeanSwingJInternalFrame!=null && this.jInternalFrameDetalleFormRubroEmplea.tipoprestamoBeanSwingJInternalFrame.jInternalFrameDetalleFormTipoPrestamo.prestamoBeanSwingJInternalFrame.conTotales) {/*this.jInternalFrameDetalleFormRubroEmplea.tipoprestamoBeanSwingJInternalFrame.jInternalFrameDetalleFormTipoPrestamo.prestamoBeanSwingJInternalFrame.quitarFilaTotales();*/}
									if(this.jInternalFrameDetalleFormRubroEmplea.tipoprestamoBeanSwingJInternalFrame.jInternalFrameDetalleFormTipoPrestamo.prestamoBeanSwingJInternalFrame.jInternalFrameDetalleFormPrestamo.abonoprestamoBeanSwingJInternalFrame!=null && this.jInternalFrameDetalleFormRubroEmplea.tipoprestamoBeanSwingJInternalFrame.jInternalFrameDetalleFormTipoPrestamo.prestamoBeanSwingJInternalFrame.jInternalFrameDetalleFormPrestamo.abonoprestamoBeanSwingJInternalFrame.conTotales) {/*this.jInternalFrameDetalleFormRubroEmplea.tipoprestamoBeanSwingJInternalFrame.jInternalFrameDetalleFormTipoPrestamo.prestamoBeanSwingJInternalFrame.jInternalFrameDetalleFormPrestamo.abonoprestamoBeanSwingJInternalFrame.quitarFilaTotales();*/}
									if(this.jInternalFrameDetalleFormRubroEmplea.tipoprestamoBeanSwingJInternalFrame.jInternalFrameDetalleFormTipoPrestamo.prestamoBeanSwingJInternalFrame.jInternalFrameDetalleFormPrestamo.cuotaBeanSwingJInternalFrame!=null && this.jInternalFrameDetalleFormRubroEmplea.tipoprestamoBeanSwingJInternalFrame.jInternalFrameDetalleFormTipoPrestamo.prestamoBeanSwingJInternalFrame.jInternalFrameDetalleFormPrestamo.cuotaBeanSwingJInternalFrame.conTotales) {/*this.jInternalFrameDetalleFormRubroEmplea.tipoprestamoBeanSwingJInternalFrame.jInternalFrameDetalleFormTipoPrestamo.prestamoBeanSwingJInternalFrame.jInternalFrameDetalleFormPrestamo.cuotaBeanSwingJInternalFrame.quitarFilaTotales();*/}
								if(this.jInternalFrameDetalleFormRubroEmplea.rubroempleacuentacontableBeanSwingJInternalFrame!=null && this.jInternalFrameDetalleFormRubroEmplea.rubroempleacuentacontableBeanSwingJInternalFrame.conTotales) {/*this.jInternalFrameDetalleFormRubroEmplea.rubroempleacuentacontableBeanSwingJInternalFrame.quitarFilaTotales();*/}
							} else if(Constantes.ISUSAEJBREMOTE ||Constantes.ISUSAEJBHOME) {
							
								if(this.jInternalFrameDetalleFormRubroEmplea.historialpagonomiBeanSwingJInternalFrame!=null && this.jInternalFrameDetalleFormRubroEmplea.historialpagonomiBeanSwingJInternalFrame.conTotales) {/*this.jInternalFrameDetalleFormRubroEmplea.historialpagonomiBeanSwingJInternalFrame.quitarFilaTotales();*/}
								if(this.jInternalFrameDetalleFormRubroEmplea.rubroestructuraBeanSwingJInternalFrame!=null && this.jInternalFrameDetalleFormRubroEmplea.rubroestructuraBeanSwingJInternalFrame.conTotales) {/*this.jInternalFrameDetalleFormRubroEmplea.rubroestructuraBeanSwingJInternalFrame.quitarFilaTotales();*/}
								if(this.jInternalFrameDetalleFormRubroEmplea.defiprovisionempleadoBeanSwingJInternalFrame!=null && this.jInternalFrameDetalleFormRubroEmplea.defiprovisionempleadoBeanSwingJInternalFrame.conTotales) {/*this.jInternalFrameDetalleFormRubroEmplea.defiprovisionempleadoBeanSwingJInternalFrame.quitarFilaTotales();*/}
									if(this.jInternalFrameDetalleFormRubroEmplea.defiprovisionempleadoBeanSwingJInternalFrame.jInternalFrameDetalleFormDefiProvisionEmpleado.provisionempleadoBeanSwingJInternalFrame!=null && this.jInternalFrameDetalleFormRubroEmplea.defiprovisionempleadoBeanSwingJInternalFrame.jInternalFrameDetalleFormDefiProvisionEmpleado.provisionempleadoBeanSwingJInternalFrame.conTotales) {/*this.jInternalFrameDetalleFormRubroEmplea.defiprovisionempleadoBeanSwingJInternalFrame.jInternalFrameDetalleFormDefiProvisionEmpleado.provisionempleadoBeanSwingJInternalFrame.quitarFilaTotales();*/}
									if(this.jInternalFrameDetalleFormRubroEmplea.defiprovisionempleadoBeanSwingJInternalFrame.jInternalFrameDetalleFormDefiProvisionEmpleado.cuotaBeanSwingJInternalFrame!=null && this.jInternalFrameDetalleFormRubroEmplea.defiprovisionempleadoBeanSwingJInternalFrame.jInternalFrameDetalleFormDefiProvisionEmpleado.cuotaBeanSwingJInternalFrame.conTotales) {/*this.jInternalFrameDetalleFormRubroEmplea.defiprovisionempleadoBeanSwingJInternalFrame.jInternalFrameDetalleFormDefiProvisionEmpleado.cuotaBeanSwingJInternalFrame.quitarFilaTotales();*/}
								if(this.jInternalFrameDetalleFormRubroEmplea.empleadopagorubroBeanSwingJInternalFrame!=null && this.jInternalFrameDetalleFormRubroEmplea.empleadopagorubroBeanSwingJInternalFrame.conTotales) {/*this.jInternalFrameDetalleFormRubroEmplea.empleadopagorubroBeanSwingJInternalFrame.quitarFilaTotales();*/}
								if(this.jInternalFrameDetalleFormRubroEmplea.historialpagomesnomiBeanSwingJInternalFrame!=null && this.jInternalFrameDetalleFormRubroEmplea.historialpagomesnomiBeanSwingJInternalFrame.conTotales) {/*this.jInternalFrameDetalleFormRubroEmplea.historialpagomesnomiBeanSwingJInternalFrame.quitarFilaTotales();*/}
								if(this.jInternalFrameDetalleFormRubroEmplea.rubroempleadoBeanSwingJInternalFrame!=null && this.jInternalFrameDetalleFormRubroEmplea.rubroempleadoBeanSwingJInternalFrame.conTotales) {/*this.jInternalFrameDetalleFormRubroEmplea.rubroempleadoBeanSwingJInternalFrame.quitarFilaTotales();*/}
								if(this.jInternalFrameDetalleFormRubroEmplea.valorrubrovariableBeanSwingJInternalFrame!=null && this.jInternalFrameDetalleFormRubroEmplea.valorrubrovariableBeanSwingJInternalFrame.conTotales) {/*this.jInternalFrameDetalleFormRubroEmplea.valorrubrovariableBeanSwingJInternalFrame.quitarFilaTotales();*/}
								if(this.jInternalFrameDetalleFormRubroEmplea.tipoprestamoBeanSwingJInternalFrame!=null && this.jInternalFrameDetalleFormRubroEmplea.tipoprestamoBeanSwingJInternalFrame.conTotales) {/*this.jInternalFrameDetalleFormRubroEmplea.tipoprestamoBeanSwingJInternalFrame.quitarFilaTotales();*/}
									if(this.jInternalFrameDetalleFormRubroEmplea.tipoprestamoBeanSwingJInternalFrame.jInternalFrameDetalleFormTipoPrestamo.prestamoBeanSwingJInternalFrame!=null && this.jInternalFrameDetalleFormRubroEmplea.tipoprestamoBeanSwingJInternalFrame.jInternalFrameDetalleFormTipoPrestamo.prestamoBeanSwingJInternalFrame.conTotales) {/*this.jInternalFrameDetalleFormRubroEmplea.tipoprestamoBeanSwingJInternalFrame.jInternalFrameDetalleFormTipoPrestamo.prestamoBeanSwingJInternalFrame.quitarFilaTotales();*/}
									if(this.jInternalFrameDetalleFormRubroEmplea.tipoprestamoBeanSwingJInternalFrame.jInternalFrameDetalleFormTipoPrestamo.prestamoBeanSwingJInternalFrame.jInternalFrameDetalleFormPrestamo.abonoprestamoBeanSwingJInternalFrame!=null && this.jInternalFrameDetalleFormRubroEmplea.tipoprestamoBeanSwingJInternalFrame.jInternalFrameDetalleFormTipoPrestamo.prestamoBeanSwingJInternalFrame.jInternalFrameDetalleFormPrestamo.abonoprestamoBeanSwingJInternalFrame.conTotales) {/*this.jInternalFrameDetalleFormRubroEmplea.tipoprestamoBeanSwingJInternalFrame.jInternalFrameDetalleFormTipoPrestamo.prestamoBeanSwingJInternalFrame.jInternalFrameDetalleFormPrestamo.abonoprestamoBeanSwingJInternalFrame.quitarFilaTotales();*/}
									if(this.jInternalFrameDetalleFormRubroEmplea.tipoprestamoBeanSwingJInternalFrame.jInternalFrameDetalleFormTipoPrestamo.prestamoBeanSwingJInternalFrame.jInternalFrameDetalleFormPrestamo.cuotaBeanSwingJInternalFrame!=null && this.jInternalFrameDetalleFormRubroEmplea.tipoprestamoBeanSwingJInternalFrame.jInternalFrameDetalleFormTipoPrestamo.prestamoBeanSwingJInternalFrame.jInternalFrameDetalleFormPrestamo.cuotaBeanSwingJInternalFrame.conTotales) {/*this.jInternalFrameDetalleFormRubroEmplea.tipoprestamoBeanSwingJInternalFrame.jInternalFrameDetalleFormTipoPrestamo.prestamoBeanSwingJInternalFrame.jInternalFrameDetalleFormPrestamo.cuotaBeanSwingJInternalFrame.quitarFilaTotales();*/}
								if(this.jInternalFrameDetalleFormRubroEmplea.rubroempleacuentacontableBeanSwingJInternalFrame!=null && this.jInternalFrameDetalleFormRubroEmplea.rubroempleacuentacontableBeanSwingJInternalFrame.conTotales) {/*this.jInternalFrameDetalleFormRubroEmplea.rubroempleacuentacontableBeanSwingJInternalFrame.quitarFilaTotales();*/}	
							}
							//ARCHITECTURE
							
							//ARCHITECTURE
							if(Constantes.ISUSAEJBLOGICLAYER) {
								rubroempleaLogic.saveRubroEmpleaRelaciones(rubroempleaAux,this.jInternalFrameDetalleFormRubroEmplea.historialpagonomiBeanSwingJInternalFrame.historialpagonomiLogic.getHistorialPagoNomis(),this.jInternalFrameDetalleFormRubroEmplea.rubroestructuraBeanSwingJInternalFrame.rubroestructuraLogic.getRubroEstructuras(),this.jInternalFrameDetalleFormRubroEmplea.defiprovisionempleadoBeanSwingJInternalFrame.defiprovisionempleadoLogic.getDefiProvisionEmpleados(),this.jInternalFrameDetalleFormRubroEmplea.empleadopagorubroBeanSwingJInternalFrame.empleadopagorubroLogic.getEmpleadoPagoRubros(),this.jInternalFrameDetalleFormRubroEmplea.historialpagomesnomiBeanSwingJInternalFrame.historialpagomesnomiLogic.getHistorialPagoMesNomis(),this.jInternalFrameDetalleFormRubroEmplea.rubroempleadoBeanSwingJInternalFrame.rubroempleadoLogic.getRubroEmpleados(),this.jInternalFrameDetalleFormRubroEmplea.valorrubrovariableBeanSwingJInternalFrame.valorrubrovariableLogic.getValorRubroVariables(),this.jInternalFrameDetalleFormRubroEmplea.tipoprestamoBeanSwingJInternalFrame.tipoprestamoLogic.getTipoPrestamos(),this.jInternalFrameDetalleFormRubroEmplea.rubroempleacuentacontableBeanSwingJInternalFrame.rubroempleacuentacontableLogic.getRubroEmpleaCuentaContables());//WithConnection
								//rubroempleaLogic.getSetVersionRowRubroEmpleas();//WithConnection
							} else if(Constantes.ISUSAEJBREMOTE) {
							} else if(Constantes.ISUSAEJBHOME) {
							}
							//ARCHITECTURE
							
							//TALVEZ ESTA DEMAS POR SER UPDATE
							//POR BUG: EL OBJETO ACTUAL SE PERDIA, POR LO QUE SE GUARDA TAMBIEN VALORES EN AUX Y LUEGO DESPUES DEL MENSAJE SE HACE REFERENCIA EL OBJETO ACTUAL AL AUX
							this.bugActualizarReferenciaActual(this.rubroemplea,rubroempleaAux);
					
							//ARCHITECTURE
							if(Constantes.ISUSAEJBLOGICLAYER) {
								
							this.jInternalFrameDetalleFormRubroEmplea.historialpagonomiBeanSwingJInternalFrame.historialpagonomiLogic.setHistorialPagoNomis(new ArrayList<HistorialPagoNomi>());
							this.jInternalFrameDetalleFormRubroEmplea.rubroestructuraBeanSwingJInternalFrame.rubroestructuraLogic.setRubroEstructuras(new ArrayList<RubroEstructura>());
							this.jInternalFrameDetalleFormRubroEmplea.defiprovisionempleadoBeanSwingJInternalFrame.defiprovisionempleadoLogic.setDefiProvisionEmpleados(new ArrayList<DefiProvisionEmpleado>());
							this.jInternalFrameDetalleFormRubroEmplea.empleadopagorubroBeanSwingJInternalFrame.empleadopagorubroLogic.setEmpleadoPagoRubros(new ArrayList<EmpleadoPagoRubro>());
							this.jInternalFrameDetalleFormRubroEmplea.historialpagomesnomiBeanSwingJInternalFrame.historialpagomesnomiLogic.setHistorialPagoMesNomis(new ArrayList<HistorialPagoMesNomi>());
							this.jInternalFrameDetalleFormRubroEmplea.rubroempleadoBeanSwingJInternalFrame.rubroempleadoLogic.setRubroEmpleados(new ArrayList<RubroEmpleado>());
							this.jInternalFrameDetalleFormRubroEmplea.valorrubrovariableBeanSwingJInternalFrame.valorrubrovariableLogic.setValorRubroVariables(new ArrayList<ValorRubroVariable>());
							this.jInternalFrameDetalleFormRubroEmplea.tipoprestamoBeanSwingJInternalFrame.tipoprestamoLogic.setTipoPrestamos(new ArrayList<TipoPrestamo>());
							this.jInternalFrameDetalleFormRubroEmplea.rubroempleacuentacontableBeanSwingJInternalFrame.rubroempleacuentacontableLogic.setRubroEmpleaCuentaContables(new ArrayList<RubroEmpleaCuentaContable>());
							} else if(Constantes.ISUSAEJBREMOTE ||Constantes.ISUSAEJBHOME) {
								
							this.jInternalFrameDetalleFormRubroEmplea.historialpagonomiBeanSwingJInternalFrame.historialpagonomis= new ArrayList<HistorialPagoNomi>();
							this.jInternalFrameDetalleFormRubroEmplea.rubroestructuraBeanSwingJInternalFrame.rubroestructuras= new ArrayList<RubroEstructura>();
							this.jInternalFrameDetalleFormRubroEmplea.defiprovisionempleadoBeanSwingJInternalFrame.defiprovisionempleados= new ArrayList<DefiProvisionEmpleado>();
							this.jInternalFrameDetalleFormRubroEmplea.empleadopagorubroBeanSwingJInternalFrame.empleadopagorubros= new ArrayList<EmpleadoPagoRubro>();
							this.jInternalFrameDetalleFormRubroEmplea.historialpagomesnomiBeanSwingJInternalFrame.historialpagomesnomis= new ArrayList<HistorialPagoMesNomi>();
							this.jInternalFrameDetalleFormRubroEmplea.rubroempleadoBeanSwingJInternalFrame.rubroempleados= new ArrayList<RubroEmpleado>();
							this.jInternalFrameDetalleFormRubroEmplea.valorrubrovariableBeanSwingJInternalFrame.valorrubrovariables= new ArrayList<ValorRubroVariable>();
							this.jInternalFrameDetalleFormRubroEmplea.tipoprestamoBeanSwingJInternalFrame.tipoprestamos= new ArrayList<TipoPrestamo>();
							this.jInternalFrameDetalleFormRubroEmplea.rubroempleacuentacontableBeanSwingJInternalFrame.rubroempleacuentacontables= new ArrayList<RubroEmpleaCuentaContable>();
							}
							//ARCHITECTURE
						} else {
							
							

							if(this.jInternalFrameDetalleFormRubroEmplea.historialpagonomiBeanSwingJInternalFrame!=null && this.jInternalFrameDetalleFormRubroEmplea.historialpagonomiBeanSwingJInternalFrame.conTotales) {this.jInternalFrameDetalleFormRubroEmplea.historialpagonomiBeanSwingJInternalFrame.quitarFilaTotales();}
							rubroempleaAux.setHistorialPagoNomis(this.jInternalFrameDetalleFormRubroEmplea.historialpagonomiBeanSwingJInternalFrame.historialpagonomiLogic.getHistorialPagoNomis());

							if(this.jInternalFrameDetalleFormRubroEmplea.rubroestructuraBeanSwingJInternalFrame!=null && this.jInternalFrameDetalleFormRubroEmplea.rubroestructuraBeanSwingJInternalFrame.conTotales) {this.jInternalFrameDetalleFormRubroEmplea.rubroestructuraBeanSwingJInternalFrame.quitarFilaTotales();}
							rubroempleaAux.setRubroEstructuras(this.jInternalFrameDetalleFormRubroEmplea.rubroestructuraBeanSwingJInternalFrame.rubroestructuraLogic.getRubroEstructuras());

							if(this.jInternalFrameDetalleFormRubroEmplea.defiprovisionempleadoBeanSwingJInternalFrame!=null && this.jInternalFrameDetalleFormRubroEmplea.defiprovisionempleadoBeanSwingJInternalFrame.conTotales) {this.jInternalFrameDetalleFormRubroEmplea.defiprovisionempleadoBeanSwingJInternalFrame.quitarFilaTotales();}
							rubroempleaAux.setDefiProvisionEmpleados(this.jInternalFrameDetalleFormRubroEmplea.defiprovisionempleadoBeanSwingJInternalFrame.defiprovisionempleadoLogic.getDefiProvisionEmpleados());

							if(this.jInternalFrameDetalleFormRubroEmplea.empleadopagorubroBeanSwingJInternalFrame!=null && this.jInternalFrameDetalleFormRubroEmplea.empleadopagorubroBeanSwingJInternalFrame.conTotales) {this.jInternalFrameDetalleFormRubroEmplea.empleadopagorubroBeanSwingJInternalFrame.quitarFilaTotales();}
							rubroempleaAux.setEmpleadoPagoRubros(this.jInternalFrameDetalleFormRubroEmplea.empleadopagorubroBeanSwingJInternalFrame.empleadopagorubroLogic.getEmpleadoPagoRubros());

							if(this.jInternalFrameDetalleFormRubroEmplea.historialpagomesnomiBeanSwingJInternalFrame!=null && this.jInternalFrameDetalleFormRubroEmplea.historialpagomesnomiBeanSwingJInternalFrame.conTotales) {this.jInternalFrameDetalleFormRubroEmplea.historialpagomesnomiBeanSwingJInternalFrame.quitarFilaTotales();}
							rubroempleaAux.setHistorialPagoMesNomis(this.jInternalFrameDetalleFormRubroEmplea.historialpagomesnomiBeanSwingJInternalFrame.historialpagomesnomiLogic.getHistorialPagoMesNomis());

							if(this.jInternalFrameDetalleFormRubroEmplea.rubroempleadoBeanSwingJInternalFrame!=null && this.jInternalFrameDetalleFormRubroEmplea.rubroempleadoBeanSwingJInternalFrame.conTotales) {this.jInternalFrameDetalleFormRubroEmplea.rubroempleadoBeanSwingJInternalFrame.quitarFilaTotales();}
							rubroempleaAux.setRubroEmpleados(this.jInternalFrameDetalleFormRubroEmplea.rubroempleadoBeanSwingJInternalFrame.rubroempleadoLogic.getRubroEmpleados());

							if(this.jInternalFrameDetalleFormRubroEmplea.valorrubrovariableBeanSwingJInternalFrame!=null && this.jInternalFrameDetalleFormRubroEmplea.valorrubrovariableBeanSwingJInternalFrame.conTotales) {this.jInternalFrameDetalleFormRubroEmplea.valorrubrovariableBeanSwingJInternalFrame.quitarFilaTotales();}
							rubroempleaAux.setValorRubroVariables(this.jInternalFrameDetalleFormRubroEmplea.valorrubrovariableBeanSwingJInternalFrame.valorrubrovariableLogic.getValorRubroVariables());

							if(this.jInternalFrameDetalleFormRubroEmplea.tipoprestamoBeanSwingJInternalFrame!=null && this.jInternalFrameDetalleFormRubroEmplea.tipoprestamoBeanSwingJInternalFrame.conTotales) {this.jInternalFrameDetalleFormRubroEmplea.tipoprestamoBeanSwingJInternalFrame.quitarFilaTotales();}
							rubroempleaAux.setTipoPrestamos(this.jInternalFrameDetalleFormRubroEmplea.tipoprestamoBeanSwingJInternalFrame.tipoprestamoLogic.getTipoPrestamos());

							if(this.jInternalFrameDetalleFormRubroEmplea.rubroempleacuentacontableBeanSwingJInternalFrame!=null && this.jInternalFrameDetalleFormRubroEmplea.rubroempleacuentacontableBeanSwingJInternalFrame.conTotales) {this.jInternalFrameDetalleFormRubroEmplea.rubroempleacuentacontableBeanSwingJInternalFrame.quitarFilaTotales();}
							rubroempleaAux.setRubroEmpleaCuentaContables(this.jInternalFrameDetalleFormRubroEmplea.rubroempleacuentacontableBeanSwingJInternalFrame.rubroempleacuentacontableLogic.getRubroEmpleaCuentaContables());
							
							//ARCHITECTURE
							if(Constantes.ISUSAEJBLOGICLAYER) {
								if(this.rubroempleaSessionBean.getEstaModoGuardarRelaciones() 
									|| this.rubroempleaSessionBean.getEsGuardarRelacionado())	{
									actualizarLista(rubroempleaAux,rubroempleaLogic.getRubroEmpleas());
								}
							} else if(Constantes.ISUSAEJBREMOTE||Constantes.ISUSAEJBHOME) {
								actualizarLista(rubroempleaAux,rubroempleas);
							}
							//ARCHITECTURE
							
							//AQUI EL ID NEGATIVO ES EL ID BUSCADO, YA QUE NO SE GENERA OTRO EN LA DB POR INGRESAR UNO NUEVO							
							//TALVEZ ESTA DEMAS POR SER UPDATE
							//POR BUG: EL OBJETO ACTUAL SE PERDIA, POR LO QUE SE GUARDA TAMBIEN VALORES EN AUX Y LUEGO DESPUES DEL MENSAJE SE HACE REFERENCIA EL OBJETO ACTUAL AL AUX
							//this.bugActualizarReferenciaActual(this.rubroemplea,rubroempleaAux);
					
						}
					}
				}				
			} else if(maintenanceType==MaintenanceType.ELIMINAR) {
				rubroempleaAux=new  RubroEmplea();
				
				rubroempleaAux.setIsNew(false);
				rubroempleaAux.setIsChanged(false);
				
				rubroempleaAux.setIsDeleted(true);
				
				rubroempleaAux.setId(this.rubroemplea.getId());	
				rubroempleaAux.setVersionRow(this.rubroemplea.getVersionRow());	
				rubroempleaAux.setid_empresa(this.rubroemplea.getid_empresa());	
				rubroempleaAux.setid_tipo_calculo(this.rubroemplea.getid_tipo_calculo());	
				rubroempleaAux.setid_tipo_rubro_emplea(this.rubroemplea.getid_tipo_rubro_emplea());	
				rubroempleaAux.setid_tipo_grupo_rubro_emplea(this.rubroemplea.getid_tipo_grupo_rubro_emplea());	
				rubroempleaAux.setcodigo(this.rubroemplea.getcodigo());	
				rubroempleaAux.setnombre(this.rubroemplea.getnombre());	
				rubroempleaAux.setformula(this.rubroemplea.getformula());	
				rubroempleaAux.setalias(this.rubroemplea.getalias());	
				rubroempleaAux.setsecuencial(this.rubroemplea.getsecuencial());	
				rubroempleaAux.setpara_rol_pagos(this.rubroemplea.getpara_rol_pagos());	
				rubroempleaAux.setpara_sueldo(this.rubroemplea.getpara_sueldo());	
				rubroempleaAux.setpara_vacaciones(this.rubroemplea.getpara_vacaciones());	
				rubroempleaAux.setpara_impuesto_renta(this.rubroemplea.getpara_impuesto_renta());	
				rubroempleaAux.setpara_seguro_social(this.rubroemplea.getpara_seguro_social());	
				rubroempleaAux.setpara_provisiones(this.rubroemplea.getpara_provisiones());	
				rubroempleaAux.setpara_utilidades(this.rubroemplea.getpara_utilidades());	
				rubroempleaAux.setpara_rubro_iess(this.rubroemplea.getpara_rubro_iess());	
				rubroempleaAux.setes_fondo_reserva(this.rubroemplea.getes_fondo_reserva());	
				rubroempleaAux.setes_decimo_tercero(this.rubroemplea.getes_decimo_tercero());	
				rubroempleaAux.setes_decimo_cuarto(this.rubroemplea.getes_decimo_cuarto());	
				
				if(this.rubroempleaSessionBean.getEsGuardarRelacionado()) {
					//ELEMENTO ACTUAL NO SE HA INGRESADO AL SISTEMA, NO SE PUEDE ELIMINAR ALGO QUE NO EXISTE
					if(this.rubroempleaAux.getId()>=0) {	
						this.rubroempleasEliminados.add(rubroempleaAux);											
					}
				}
				
				//ARCHITECTURE
				if(Constantes.ISUSAEJBLOGICLAYER) {				
					actualizarLista(rubroempleaAux,rubroempleaLogic.getRubroEmpleas());
				} else if(Constantes.ISUSAEJBREMOTE||Constantes.ISUSAEJBHOME) {
					actualizarLista(rubroempleaAux,rubroempleas);
				}
				//ARCHITECTURE
				
				
				if(!isGuardarCambiosEnLote && !this.rubroempleaSessionBean.getEstaModoGuardarRelaciones() 
						&& !this.rubroempleaSessionBean.getEsGuardarRelacionado())	{
					
					//ARCHITECTURE
					if(Constantes.ISUSAEJBLOGICLAYER) {
						rubroempleaLogic.saveRubroEmpleas();//WithConnection
						//rubroempleaLogic.getSetVersionRowRubroEmpleas();//WithConnection
					} else if(Constantes.ISUSAEJBREMOTE) {
					} else if(Constantes.ISUSAEJBHOME) {
					}	
					//ARCHITECTURE
				} else {
					//CUANDO ES MANTENIMIENTO MAESTRO DETALLE
					if(this.rubroempleaSessionBean.getEstaModoGuardarRelaciones()) {
						//GUARDAR RELACIONES
						//ARCHITECTURE
						if(Constantes.ISUSAEJBLOGICLAYER) {
							
							this.jInternalFrameDetalleFormRubroEmplea.historialpagonomiBeanSwingJInternalFrame.historialpagonomiLogic.getHistorialPagoNomis().addAll(this.jInternalFrameDetalleFormRubroEmplea.historialpagonomiBeanSwingJInternalFrame.historialpagonomisEliminados);
							this.jInternalFrameDetalleFormRubroEmplea.rubroestructuraBeanSwingJInternalFrame.rubroestructuraLogic.getRubroEstructuras().addAll(this.jInternalFrameDetalleFormRubroEmplea.rubroestructuraBeanSwingJInternalFrame.rubroestructurasEliminados);
							this.jInternalFrameDetalleFormRubroEmplea.defiprovisionempleadoBeanSwingJInternalFrame.defiprovisionempleadoLogic.getDefiProvisionEmpleados().addAll(this.jInternalFrameDetalleFormRubroEmplea.defiprovisionempleadoBeanSwingJInternalFrame.defiprovisionempleadosEliminados);
							this.jInternalFrameDetalleFormRubroEmplea.empleadopagorubroBeanSwingJInternalFrame.empleadopagorubroLogic.getEmpleadoPagoRubros().addAll(this.jInternalFrameDetalleFormRubroEmplea.empleadopagorubroBeanSwingJInternalFrame.empleadopagorubrosEliminados);
							this.jInternalFrameDetalleFormRubroEmplea.historialpagomesnomiBeanSwingJInternalFrame.historialpagomesnomiLogic.getHistorialPagoMesNomis().addAll(this.jInternalFrameDetalleFormRubroEmplea.historialpagomesnomiBeanSwingJInternalFrame.historialpagomesnomisEliminados);
							this.jInternalFrameDetalleFormRubroEmplea.rubroempleadoBeanSwingJInternalFrame.rubroempleadoLogic.getRubroEmpleados().addAll(this.jInternalFrameDetalleFormRubroEmplea.rubroempleadoBeanSwingJInternalFrame.rubroempleadosEliminados);
							this.jInternalFrameDetalleFormRubroEmplea.valorrubrovariableBeanSwingJInternalFrame.valorrubrovariableLogic.getValorRubroVariables().addAll(this.jInternalFrameDetalleFormRubroEmplea.valorrubrovariableBeanSwingJInternalFrame.valorrubrovariablesEliminados);
							this.jInternalFrameDetalleFormRubroEmplea.tipoprestamoBeanSwingJInternalFrame.tipoprestamoLogic.getTipoPrestamos().addAll(this.jInternalFrameDetalleFormRubroEmplea.tipoprestamoBeanSwingJInternalFrame.tipoprestamosEliminados);
							this.jInternalFrameDetalleFormRubroEmplea.rubroempleacuentacontableBeanSwingJInternalFrame.rubroempleacuentacontableLogic.getRubroEmpleaCuentaContables().addAll(this.jInternalFrameDetalleFormRubroEmplea.rubroempleacuentacontableBeanSwingJInternalFrame.rubroempleacuentacontablesEliminados);
						} else if(Constantes.ISUSAEJBREMOTE ||Constantes.ISUSAEJBHOME) {
							
							this.jInternalFrameDetalleFormRubroEmplea.historialpagonomiBeanSwingJInternalFrame.historialpagonomis.addAll(this.jInternalFrameDetalleFormRubroEmplea.historialpagonomiBeanSwingJInternalFrame.historialpagonomisEliminados);
							this.jInternalFrameDetalleFormRubroEmplea.rubroestructuraBeanSwingJInternalFrame.rubroestructuras.addAll(this.jInternalFrameDetalleFormRubroEmplea.rubroestructuraBeanSwingJInternalFrame.rubroestructurasEliminados);
							this.jInternalFrameDetalleFormRubroEmplea.defiprovisionempleadoBeanSwingJInternalFrame.defiprovisionempleados.addAll(this.jInternalFrameDetalleFormRubroEmplea.defiprovisionempleadoBeanSwingJInternalFrame.defiprovisionempleadosEliminados);
							this.jInternalFrameDetalleFormRubroEmplea.empleadopagorubroBeanSwingJInternalFrame.empleadopagorubros.addAll(this.jInternalFrameDetalleFormRubroEmplea.empleadopagorubroBeanSwingJInternalFrame.empleadopagorubrosEliminados);
							this.jInternalFrameDetalleFormRubroEmplea.historialpagomesnomiBeanSwingJInternalFrame.historialpagomesnomis.addAll(this.jInternalFrameDetalleFormRubroEmplea.historialpagomesnomiBeanSwingJInternalFrame.historialpagomesnomisEliminados);
							this.jInternalFrameDetalleFormRubroEmplea.rubroempleadoBeanSwingJInternalFrame.rubroempleados.addAll(this.jInternalFrameDetalleFormRubroEmplea.rubroempleadoBeanSwingJInternalFrame.rubroempleadosEliminados);
							this.jInternalFrameDetalleFormRubroEmplea.valorrubrovariableBeanSwingJInternalFrame.valorrubrovariables.addAll(this.jInternalFrameDetalleFormRubroEmplea.valorrubrovariableBeanSwingJInternalFrame.valorrubrovariablesEliminados);
							this.jInternalFrameDetalleFormRubroEmplea.tipoprestamoBeanSwingJInternalFrame.tipoprestamos.addAll(this.jInternalFrameDetalleFormRubroEmplea.tipoprestamoBeanSwingJInternalFrame.tipoprestamosEliminados);
							this.jInternalFrameDetalleFormRubroEmplea.rubroempleacuentacontableBeanSwingJInternalFrame.rubroempleacuentacontables.addAll(this.jInternalFrameDetalleFormRubroEmplea.rubroempleacuentacontableBeanSwingJInternalFrame.rubroempleacuentacontablesEliminados);
						}
						//ARCHITECTURE
						
						
						if(!this.rubroempleaSessionBean.getEsGuardarRelacionado()) {
							//QUITAR FILA TOTAL
							//ARCHITECTURE
							if(Constantes.ISUSAEJBLOGICLAYER) {
							
								if(this.jInternalFrameDetalleFormRubroEmplea.historialpagonomiBeanSwingJInternalFrame!=null && this.jInternalFrameDetalleFormRubroEmplea.historialpagonomiBeanSwingJInternalFrame.conTotales) {/*this.jInternalFrameDetalleFormRubroEmplea.historialpagonomiBeanSwingJInternalFrame.quitarFilaTotales();*/}
								if(this.jInternalFrameDetalleFormRubroEmplea.rubroestructuraBeanSwingJInternalFrame!=null && this.jInternalFrameDetalleFormRubroEmplea.rubroestructuraBeanSwingJInternalFrame.conTotales) {/*this.jInternalFrameDetalleFormRubroEmplea.rubroestructuraBeanSwingJInternalFrame.quitarFilaTotales();*/}
								if(this.jInternalFrameDetalleFormRubroEmplea.defiprovisionempleadoBeanSwingJInternalFrame!=null && this.jInternalFrameDetalleFormRubroEmplea.defiprovisionempleadoBeanSwingJInternalFrame.conTotales) {/*this.jInternalFrameDetalleFormRubroEmplea.defiprovisionempleadoBeanSwingJInternalFrame.quitarFilaTotales();*/}
									if(this.jInternalFrameDetalleFormRubroEmplea.defiprovisionempleadoBeanSwingJInternalFrame.jInternalFrameDetalleFormDefiProvisionEmpleado.provisionempleadoBeanSwingJInternalFrame!=null && this.jInternalFrameDetalleFormRubroEmplea.defiprovisionempleadoBeanSwingJInternalFrame.jInternalFrameDetalleFormDefiProvisionEmpleado.provisionempleadoBeanSwingJInternalFrame.conTotales) {/*this.jInternalFrameDetalleFormRubroEmplea.defiprovisionempleadoBeanSwingJInternalFrame.jInternalFrameDetalleFormDefiProvisionEmpleado.provisionempleadoBeanSwingJInternalFrame.quitarFilaTotales();*/}
									if(this.jInternalFrameDetalleFormRubroEmplea.defiprovisionempleadoBeanSwingJInternalFrame.jInternalFrameDetalleFormDefiProvisionEmpleado.cuotaBeanSwingJInternalFrame!=null && this.jInternalFrameDetalleFormRubroEmplea.defiprovisionempleadoBeanSwingJInternalFrame.jInternalFrameDetalleFormDefiProvisionEmpleado.cuotaBeanSwingJInternalFrame.conTotales) {/*this.jInternalFrameDetalleFormRubroEmplea.defiprovisionempleadoBeanSwingJInternalFrame.jInternalFrameDetalleFormDefiProvisionEmpleado.cuotaBeanSwingJInternalFrame.quitarFilaTotales();*/}
								if(this.jInternalFrameDetalleFormRubroEmplea.empleadopagorubroBeanSwingJInternalFrame!=null && this.jInternalFrameDetalleFormRubroEmplea.empleadopagorubroBeanSwingJInternalFrame.conTotales) {/*this.jInternalFrameDetalleFormRubroEmplea.empleadopagorubroBeanSwingJInternalFrame.quitarFilaTotales();*/}
								if(this.jInternalFrameDetalleFormRubroEmplea.historialpagomesnomiBeanSwingJInternalFrame!=null && this.jInternalFrameDetalleFormRubroEmplea.historialpagomesnomiBeanSwingJInternalFrame.conTotales) {/*this.jInternalFrameDetalleFormRubroEmplea.historialpagomesnomiBeanSwingJInternalFrame.quitarFilaTotales();*/}
								if(this.jInternalFrameDetalleFormRubroEmplea.rubroempleadoBeanSwingJInternalFrame!=null && this.jInternalFrameDetalleFormRubroEmplea.rubroempleadoBeanSwingJInternalFrame.conTotales) {/*this.jInternalFrameDetalleFormRubroEmplea.rubroempleadoBeanSwingJInternalFrame.quitarFilaTotales();*/}
								if(this.jInternalFrameDetalleFormRubroEmplea.valorrubrovariableBeanSwingJInternalFrame!=null && this.jInternalFrameDetalleFormRubroEmplea.valorrubrovariableBeanSwingJInternalFrame.conTotales) {/*this.jInternalFrameDetalleFormRubroEmplea.valorrubrovariableBeanSwingJInternalFrame.quitarFilaTotales();*/}
								if(this.jInternalFrameDetalleFormRubroEmplea.tipoprestamoBeanSwingJInternalFrame!=null && this.jInternalFrameDetalleFormRubroEmplea.tipoprestamoBeanSwingJInternalFrame.conTotales) {/*this.jInternalFrameDetalleFormRubroEmplea.tipoprestamoBeanSwingJInternalFrame.quitarFilaTotales();*/}
									if(this.jInternalFrameDetalleFormRubroEmplea.tipoprestamoBeanSwingJInternalFrame.jInternalFrameDetalleFormTipoPrestamo.prestamoBeanSwingJInternalFrame!=null && this.jInternalFrameDetalleFormRubroEmplea.tipoprestamoBeanSwingJInternalFrame.jInternalFrameDetalleFormTipoPrestamo.prestamoBeanSwingJInternalFrame.conTotales) {/*this.jInternalFrameDetalleFormRubroEmplea.tipoprestamoBeanSwingJInternalFrame.jInternalFrameDetalleFormTipoPrestamo.prestamoBeanSwingJInternalFrame.quitarFilaTotales();*/}
									if(this.jInternalFrameDetalleFormRubroEmplea.tipoprestamoBeanSwingJInternalFrame.jInternalFrameDetalleFormTipoPrestamo.prestamoBeanSwingJInternalFrame.jInternalFrameDetalleFormPrestamo.abonoprestamoBeanSwingJInternalFrame!=null && this.jInternalFrameDetalleFormRubroEmplea.tipoprestamoBeanSwingJInternalFrame.jInternalFrameDetalleFormTipoPrestamo.prestamoBeanSwingJInternalFrame.jInternalFrameDetalleFormPrestamo.abonoprestamoBeanSwingJInternalFrame.conTotales) {/*this.jInternalFrameDetalleFormRubroEmplea.tipoprestamoBeanSwingJInternalFrame.jInternalFrameDetalleFormTipoPrestamo.prestamoBeanSwingJInternalFrame.jInternalFrameDetalleFormPrestamo.abonoprestamoBeanSwingJInternalFrame.quitarFilaTotales();*/}
									if(this.jInternalFrameDetalleFormRubroEmplea.tipoprestamoBeanSwingJInternalFrame.jInternalFrameDetalleFormTipoPrestamo.prestamoBeanSwingJInternalFrame.jInternalFrameDetalleFormPrestamo.cuotaBeanSwingJInternalFrame!=null && this.jInternalFrameDetalleFormRubroEmplea.tipoprestamoBeanSwingJInternalFrame.jInternalFrameDetalleFormTipoPrestamo.prestamoBeanSwingJInternalFrame.jInternalFrameDetalleFormPrestamo.cuotaBeanSwingJInternalFrame.conTotales) {/*this.jInternalFrameDetalleFormRubroEmplea.tipoprestamoBeanSwingJInternalFrame.jInternalFrameDetalleFormTipoPrestamo.prestamoBeanSwingJInternalFrame.jInternalFrameDetalleFormPrestamo.cuotaBeanSwingJInternalFrame.quitarFilaTotales();*/}
								if(this.jInternalFrameDetalleFormRubroEmplea.rubroempleacuentacontableBeanSwingJInternalFrame!=null && this.jInternalFrameDetalleFormRubroEmplea.rubroempleacuentacontableBeanSwingJInternalFrame.conTotales) {/*this.jInternalFrameDetalleFormRubroEmplea.rubroempleacuentacontableBeanSwingJInternalFrame.quitarFilaTotales();*/}
							} else if(Constantes.ISUSAEJBREMOTE ||Constantes.ISUSAEJBHOME) {
							
								if(this.jInternalFrameDetalleFormRubroEmplea.historialpagonomiBeanSwingJInternalFrame!=null && this.jInternalFrameDetalleFormRubroEmplea.historialpagonomiBeanSwingJInternalFrame.conTotales) {/*this.jInternalFrameDetalleFormRubroEmplea.historialpagonomiBeanSwingJInternalFrame.quitarFilaTotales();*/}
								if(this.jInternalFrameDetalleFormRubroEmplea.rubroestructuraBeanSwingJInternalFrame!=null && this.jInternalFrameDetalleFormRubroEmplea.rubroestructuraBeanSwingJInternalFrame.conTotales) {/*this.jInternalFrameDetalleFormRubroEmplea.rubroestructuraBeanSwingJInternalFrame.quitarFilaTotales();*/}
								if(this.jInternalFrameDetalleFormRubroEmplea.defiprovisionempleadoBeanSwingJInternalFrame!=null && this.jInternalFrameDetalleFormRubroEmplea.defiprovisionempleadoBeanSwingJInternalFrame.conTotales) {/*this.jInternalFrameDetalleFormRubroEmplea.defiprovisionempleadoBeanSwingJInternalFrame.quitarFilaTotales();*/}
									if(this.jInternalFrameDetalleFormRubroEmplea.defiprovisionempleadoBeanSwingJInternalFrame.jInternalFrameDetalleFormDefiProvisionEmpleado.provisionempleadoBeanSwingJInternalFrame!=null && this.jInternalFrameDetalleFormRubroEmplea.defiprovisionempleadoBeanSwingJInternalFrame.jInternalFrameDetalleFormDefiProvisionEmpleado.provisionempleadoBeanSwingJInternalFrame.conTotales) {/*this.jInternalFrameDetalleFormRubroEmplea.defiprovisionempleadoBeanSwingJInternalFrame.jInternalFrameDetalleFormDefiProvisionEmpleado.provisionempleadoBeanSwingJInternalFrame.quitarFilaTotales();*/}
									if(this.jInternalFrameDetalleFormRubroEmplea.defiprovisionempleadoBeanSwingJInternalFrame.jInternalFrameDetalleFormDefiProvisionEmpleado.cuotaBeanSwingJInternalFrame!=null && this.jInternalFrameDetalleFormRubroEmplea.defiprovisionempleadoBeanSwingJInternalFrame.jInternalFrameDetalleFormDefiProvisionEmpleado.cuotaBeanSwingJInternalFrame.conTotales) {/*this.jInternalFrameDetalleFormRubroEmplea.defiprovisionempleadoBeanSwingJInternalFrame.jInternalFrameDetalleFormDefiProvisionEmpleado.cuotaBeanSwingJInternalFrame.quitarFilaTotales();*/}
								if(this.jInternalFrameDetalleFormRubroEmplea.empleadopagorubroBeanSwingJInternalFrame!=null && this.jInternalFrameDetalleFormRubroEmplea.empleadopagorubroBeanSwingJInternalFrame.conTotales) {/*this.jInternalFrameDetalleFormRubroEmplea.empleadopagorubroBeanSwingJInternalFrame.quitarFilaTotales();*/}
								if(this.jInternalFrameDetalleFormRubroEmplea.historialpagomesnomiBeanSwingJInternalFrame!=null && this.jInternalFrameDetalleFormRubroEmplea.historialpagomesnomiBeanSwingJInternalFrame.conTotales) {/*this.jInternalFrameDetalleFormRubroEmplea.historialpagomesnomiBeanSwingJInternalFrame.quitarFilaTotales();*/}
								if(this.jInternalFrameDetalleFormRubroEmplea.rubroempleadoBeanSwingJInternalFrame!=null && this.jInternalFrameDetalleFormRubroEmplea.rubroempleadoBeanSwingJInternalFrame.conTotales) {/*this.jInternalFrameDetalleFormRubroEmplea.rubroempleadoBeanSwingJInternalFrame.quitarFilaTotales();*/}
								if(this.jInternalFrameDetalleFormRubroEmplea.valorrubrovariableBeanSwingJInternalFrame!=null && this.jInternalFrameDetalleFormRubroEmplea.valorrubrovariableBeanSwingJInternalFrame.conTotales) {/*this.jInternalFrameDetalleFormRubroEmplea.valorrubrovariableBeanSwingJInternalFrame.quitarFilaTotales();*/}
								if(this.jInternalFrameDetalleFormRubroEmplea.tipoprestamoBeanSwingJInternalFrame!=null && this.jInternalFrameDetalleFormRubroEmplea.tipoprestamoBeanSwingJInternalFrame.conTotales) {/*this.jInternalFrameDetalleFormRubroEmplea.tipoprestamoBeanSwingJInternalFrame.quitarFilaTotales();*/}
									if(this.jInternalFrameDetalleFormRubroEmplea.tipoprestamoBeanSwingJInternalFrame.jInternalFrameDetalleFormTipoPrestamo.prestamoBeanSwingJInternalFrame!=null && this.jInternalFrameDetalleFormRubroEmplea.tipoprestamoBeanSwingJInternalFrame.jInternalFrameDetalleFormTipoPrestamo.prestamoBeanSwingJInternalFrame.conTotales) {/*this.jInternalFrameDetalleFormRubroEmplea.tipoprestamoBeanSwingJInternalFrame.jInternalFrameDetalleFormTipoPrestamo.prestamoBeanSwingJInternalFrame.quitarFilaTotales();*/}
									if(this.jInternalFrameDetalleFormRubroEmplea.tipoprestamoBeanSwingJInternalFrame.jInternalFrameDetalleFormTipoPrestamo.prestamoBeanSwingJInternalFrame.jInternalFrameDetalleFormPrestamo.abonoprestamoBeanSwingJInternalFrame!=null && this.jInternalFrameDetalleFormRubroEmplea.tipoprestamoBeanSwingJInternalFrame.jInternalFrameDetalleFormTipoPrestamo.prestamoBeanSwingJInternalFrame.jInternalFrameDetalleFormPrestamo.abonoprestamoBeanSwingJInternalFrame.conTotales) {/*this.jInternalFrameDetalleFormRubroEmplea.tipoprestamoBeanSwingJInternalFrame.jInternalFrameDetalleFormTipoPrestamo.prestamoBeanSwingJInternalFrame.jInternalFrameDetalleFormPrestamo.abonoprestamoBeanSwingJInternalFrame.quitarFilaTotales();*/}
									if(this.jInternalFrameDetalleFormRubroEmplea.tipoprestamoBeanSwingJInternalFrame.jInternalFrameDetalleFormTipoPrestamo.prestamoBeanSwingJInternalFrame.jInternalFrameDetalleFormPrestamo.cuotaBeanSwingJInternalFrame!=null && this.jInternalFrameDetalleFormRubroEmplea.tipoprestamoBeanSwingJInternalFrame.jInternalFrameDetalleFormTipoPrestamo.prestamoBeanSwingJInternalFrame.jInternalFrameDetalleFormPrestamo.cuotaBeanSwingJInternalFrame.conTotales) {/*this.jInternalFrameDetalleFormRubroEmplea.tipoprestamoBeanSwingJInternalFrame.jInternalFrameDetalleFormTipoPrestamo.prestamoBeanSwingJInternalFrame.jInternalFrameDetalleFormPrestamo.cuotaBeanSwingJInternalFrame.quitarFilaTotales();*/}
								if(this.jInternalFrameDetalleFormRubroEmplea.rubroempleacuentacontableBeanSwingJInternalFrame!=null && this.jInternalFrameDetalleFormRubroEmplea.rubroempleacuentacontableBeanSwingJInternalFrame.conTotales) {/*this.jInternalFrameDetalleFormRubroEmplea.rubroempleacuentacontableBeanSwingJInternalFrame.quitarFilaTotales();*/}	
							}
							//ARCHITECTURE
							
							//ARCHITECTURE
							if(Constantes.ISUSAEJBLOGICLAYER) {
								rubroempleaLogic.saveRubroEmpleaRelaciones(rubroempleaAux,this.jInternalFrameDetalleFormRubroEmplea.historialpagonomiBeanSwingJInternalFrame.historialpagonomiLogic.getHistorialPagoNomis(),this.jInternalFrameDetalleFormRubroEmplea.rubroestructuraBeanSwingJInternalFrame.rubroestructuraLogic.getRubroEstructuras(),this.jInternalFrameDetalleFormRubroEmplea.defiprovisionempleadoBeanSwingJInternalFrame.defiprovisionempleadoLogic.getDefiProvisionEmpleados(),this.jInternalFrameDetalleFormRubroEmplea.empleadopagorubroBeanSwingJInternalFrame.empleadopagorubroLogic.getEmpleadoPagoRubros(),this.jInternalFrameDetalleFormRubroEmplea.historialpagomesnomiBeanSwingJInternalFrame.historialpagomesnomiLogic.getHistorialPagoMesNomis(),this.jInternalFrameDetalleFormRubroEmplea.rubroempleadoBeanSwingJInternalFrame.rubroempleadoLogic.getRubroEmpleados(),this.jInternalFrameDetalleFormRubroEmplea.valorrubrovariableBeanSwingJInternalFrame.valorrubrovariableLogic.getValorRubroVariables(),this.jInternalFrameDetalleFormRubroEmplea.tipoprestamoBeanSwingJInternalFrame.tipoprestamoLogic.getTipoPrestamos(),this.jInternalFrameDetalleFormRubroEmplea.rubroempleacuentacontableBeanSwingJInternalFrame.rubroempleacuentacontableLogic.getRubroEmpleaCuentaContables());//WithConnection
								//rubroempleaLogic.getSetVersionRowRubroEmpleas();//WithConnection
							} else if(Constantes.ISUSAEJBREMOTE) {
							} else if(Constantes.ISUSAEJBHOME) {
							}
							//ARCHITECTURE
							
							//ARCHITECTURE
							if(Constantes.ISUSAEJBLOGICLAYER) {
								
							this.jInternalFrameDetalleFormRubroEmplea.historialpagonomiBeanSwingJInternalFrame.historialpagonomiLogic.setHistorialPagoNomis(new ArrayList<HistorialPagoNomi>());
							this.jInternalFrameDetalleFormRubroEmplea.rubroestructuraBeanSwingJInternalFrame.rubroestructuraLogic.setRubroEstructuras(new ArrayList<RubroEstructura>());
							this.jInternalFrameDetalleFormRubroEmplea.defiprovisionempleadoBeanSwingJInternalFrame.defiprovisionempleadoLogic.setDefiProvisionEmpleados(new ArrayList<DefiProvisionEmpleado>());
							this.jInternalFrameDetalleFormRubroEmplea.empleadopagorubroBeanSwingJInternalFrame.empleadopagorubroLogic.setEmpleadoPagoRubros(new ArrayList<EmpleadoPagoRubro>());
							this.jInternalFrameDetalleFormRubroEmplea.historialpagomesnomiBeanSwingJInternalFrame.historialpagomesnomiLogic.setHistorialPagoMesNomis(new ArrayList<HistorialPagoMesNomi>());
							this.jInternalFrameDetalleFormRubroEmplea.rubroempleadoBeanSwingJInternalFrame.rubroempleadoLogic.setRubroEmpleados(new ArrayList<RubroEmpleado>());
							this.jInternalFrameDetalleFormRubroEmplea.valorrubrovariableBeanSwingJInternalFrame.valorrubrovariableLogic.setValorRubroVariables(new ArrayList<ValorRubroVariable>());
							this.jInternalFrameDetalleFormRubroEmplea.tipoprestamoBeanSwingJInternalFrame.tipoprestamoLogic.setTipoPrestamos(new ArrayList<TipoPrestamo>());
							this.jInternalFrameDetalleFormRubroEmplea.rubroempleacuentacontableBeanSwingJInternalFrame.rubroempleacuentacontableLogic.setRubroEmpleaCuentaContables(new ArrayList<RubroEmpleaCuentaContable>());
							} else if(Constantes.ISUSAEJBREMOTE ||Constantes.ISUSAEJBHOME) {
								
							this.jInternalFrameDetalleFormRubroEmplea.historialpagonomiBeanSwingJInternalFrame.historialpagonomis= new ArrayList<HistorialPagoNomi>();
							this.jInternalFrameDetalleFormRubroEmplea.rubroestructuraBeanSwingJInternalFrame.rubroestructuras= new ArrayList<RubroEstructura>();
							this.jInternalFrameDetalleFormRubroEmplea.defiprovisionempleadoBeanSwingJInternalFrame.defiprovisionempleados= new ArrayList<DefiProvisionEmpleado>();
							this.jInternalFrameDetalleFormRubroEmplea.empleadopagorubroBeanSwingJInternalFrame.empleadopagorubros= new ArrayList<EmpleadoPagoRubro>();
							this.jInternalFrameDetalleFormRubroEmplea.historialpagomesnomiBeanSwingJInternalFrame.historialpagomesnomis= new ArrayList<HistorialPagoMesNomi>();
							this.jInternalFrameDetalleFormRubroEmplea.rubroempleadoBeanSwingJInternalFrame.rubroempleados= new ArrayList<RubroEmpleado>();
							this.jInternalFrameDetalleFormRubroEmplea.valorrubrovariableBeanSwingJInternalFrame.valorrubrovariables= new ArrayList<ValorRubroVariable>();
							this.jInternalFrameDetalleFormRubroEmplea.tipoprestamoBeanSwingJInternalFrame.tipoprestamos= new ArrayList<TipoPrestamo>();
							this.jInternalFrameDetalleFormRubroEmplea.rubroempleacuentacontableBeanSwingJInternalFrame.rubroempleacuentacontables= new ArrayList<RubroEmpleaCuentaContable>();
							}
							//ARCHITECTURE
						}
					}  else {
							
						

							if(this.jInternalFrameDetalleFormRubroEmplea.historialpagonomiBeanSwingJInternalFrame!=null && this.jInternalFrameDetalleFormRubroEmplea.historialpagonomiBeanSwingJInternalFrame.conTotales) {this.jInternalFrameDetalleFormRubroEmplea.historialpagonomiBeanSwingJInternalFrame.quitarFilaTotales();}
							rubroempleaAux.setHistorialPagoNomis(this.jInternalFrameDetalleFormRubroEmplea.historialpagonomiBeanSwingJInternalFrame.historialpagonomiLogic.getHistorialPagoNomis());

							if(this.jInternalFrameDetalleFormRubroEmplea.rubroestructuraBeanSwingJInternalFrame!=null && this.jInternalFrameDetalleFormRubroEmplea.rubroestructuraBeanSwingJInternalFrame.conTotales) {this.jInternalFrameDetalleFormRubroEmplea.rubroestructuraBeanSwingJInternalFrame.quitarFilaTotales();}
							rubroempleaAux.setRubroEstructuras(this.jInternalFrameDetalleFormRubroEmplea.rubroestructuraBeanSwingJInternalFrame.rubroestructuraLogic.getRubroEstructuras());

							if(this.jInternalFrameDetalleFormRubroEmplea.defiprovisionempleadoBeanSwingJInternalFrame!=null && this.jInternalFrameDetalleFormRubroEmplea.defiprovisionempleadoBeanSwingJInternalFrame.conTotales) {this.jInternalFrameDetalleFormRubroEmplea.defiprovisionempleadoBeanSwingJInternalFrame.quitarFilaTotales();}
							rubroempleaAux.setDefiProvisionEmpleados(this.jInternalFrameDetalleFormRubroEmplea.defiprovisionempleadoBeanSwingJInternalFrame.defiprovisionempleadoLogic.getDefiProvisionEmpleados());

							if(this.jInternalFrameDetalleFormRubroEmplea.empleadopagorubroBeanSwingJInternalFrame!=null && this.jInternalFrameDetalleFormRubroEmplea.empleadopagorubroBeanSwingJInternalFrame.conTotales) {this.jInternalFrameDetalleFormRubroEmplea.empleadopagorubroBeanSwingJInternalFrame.quitarFilaTotales();}
							rubroempleaAux.setEmpleadoPagoRubros(this.jInternalFrameDetalleFormRubroEmplea.empleadopagorubroBeanSwingJInternalFrame.empleadopagorubroLogic.getEmpleadoPagoRubros());

							if(this.jInternalFrameDetalleFormRubroEmplea.historialpagomesnomiBeanSwingJInternalFrame!=null && this.jInternalFrameDetalleFormRubroEmplea.historialpagomesnomiBeanSwingJInternalFrame.conTotales) {this.jInternalFrameDetalleFormRubroEmplea.historialpagomesnomiBeanSwingJInternalFrame.quitarFilaTotales();}
							rubroempleaAux.setHistorialPagoMesNomis(this.jInternalFrameDetalleFormRubroEmplea.historialpagomesnomiBeanSwingJInternalFrame.historialpagomesnomiLogic.getHistorialPagoMesNomis());

							if(this.jInternalFrameDetalleFormRubroEmplea.rubroempleadoBeanSwingJInternalFrame!=null && this.jInternalFrameDetalleFormRubroEmplea.rubroempleadoBeanSwingJInternalFrame.conTotales) {this.jInternalFrameDetalleFormRubroEmplea.rubroempleadoBeanSwingJInternalFrame.quitarFilaTotales();}
							rubroempleaAux.setRubroEmpleados(this.jInternalFrameDetalleFormRubroEmplea.rubroempleadoBeanSwingJInternalFrame.rubroempleadoLogic.getRubroEmpleados());

							if(this.jInternalFrameDetalleFormRubroEmplea.valorrubrovariableBeanSwingJInternalFrame!=null && this.jInternalFrameDetalleFormRubroEmplea.valorrubrovariableBeanSwingJInternalFrame.conTotales) {this.jInternalFrameDetalleFormRubroEmplea.valorrubrovariableBeanSwingJInternalFrame.quitarFilaTotales();}
							rubroempleaAux.setValorRubroVariables(this.jInternalFrameDetalleFormRubroEmplea.valorrubrovariableBeanSwingJInternalFrame.valorrubrovariableLogic.getValorRubroVariables());

							if(this.jInternalFrameDetalleFormRubroEmplea.tipoprestamoBeanSwingJInternalFrame!=null && this.jInternalFrameDetalleFormRubroEmplea.tipoprestamoBeanSwingJInternalFrame.conTotales) {this.jInternalFrameDetalleFormRubroEmplea.tipoprestamoBeanSwingJInternalFrame.quitarFilaTotales();}
							rubroempleaAux.setTipoPrestamos(this.jInternalFrameDetalleFormRubroEmplea.tipoprestamoBeanSwingJInternalFrame.tipoprestamoLogic.getTipoPrestamos());

							if(this.jInternalFrameDetalleFormRubroEmplea.rubroempleacuentacontableBeanSwingJInternalFrame!=null && this.jInternalFrameDetalleFormRubroEmplea.rubroempleacuentacontableBeanSwingJInternalFrame.conTotales) {this.jInternalFrameDetalleFormRubroEmplea.rubroempleacuentacontableBeanSwingJInternalFrame.quitarFilaTotales();}
							rubroempleaAux.setRubroEmpleaCuentaContables(this.jInternalFrameDetalleFormRubroEmplea.rubroempleacuentacontableBeanSwingJInternalFrame.rubroempleacuentacontableLogic.getRubroEmpleaCuentaContables());
								
						//ARCHITECTURE
						if(Constantes.ISUSAEJBLOGICLAYER) {
							if(this.rubroempleaSessionBean.getEstaModoGuardarRelaciones() 
								|| this.rubroempleaSessionBean.getEsGuardarRelacionado())	{
								actualizarLista(rubroempleaAux,rubroempleaLogic.getRubroEmpleas());
							}
						} else if(Constantes.ISUSAEJBREMOTE||Constantes.ISUSAEJBHOME) {
							actualizarLista(rubroempleaAux,rubroempleas);
						}
						//ARCHITECTURE
					}
				}				
			} else if(maintenanceType==MaintenanceType.GUARDARCAMBIOS) {		
				
				//ARCHITECTURE
				if(Constantes.ISUSAEJBLOGICLAYER) {
					this.rubroempleaLogic.getRubroEmpleas().addAll(this.rubroempleasEliminados);
					
					rubroempleaLogic.saveRubroEmpleas();//WithConnection
					//rubroempleaLogic.getSetVersionRowRubroEmpleas();//WithConnection
				} else if(Constantes.ISUSAEJBREMOTE) {
				} else if(Constantes.ISUSAEJBHOME) {
				}	
				//ARCHITECTURE
				this.refrescarForeignKeysDescripcionesRubroEmplea();
				
				this.rubroempleasEliminados= new ArrayList<RubroEmplea>();		
			}
			
			if(this.rubroempleaSessionBean.getEsGuardarRelacionado()) {
				 this.crearFilaTotales();
			}
			
			
									
			if(this.parametroGeneralUsuario.getcon_mensaje_confirmacion() && !this.rubroempleaSessionBean.getEsGuardarRelacionado()) {//Constantes.ISMOSTRARMENSAJESMANTENIMIENTO && 
				if(!this.isPostAccionSinMensaje) {
					JOptionPane.showMessageDialog(this,"Rubro Emplea GUARDADO CORRECTAMENTE","MANTENIMIENTO DE Rubro Emplea",JOptionPane.INFORMATION_MESSAGE);
					if(maintenanceType==MaintenanceType.NUEVO || maintenanceType==MaintenanceType.ACTUALIZAR) {
						//CUANDO ES NUEVO SE PIERDE REFERENCIA NO SE PORQUE
						this.rubroemplea=rubroempleaAux;
					}
				}
			}
			
			this.isErrorGuardar=false;
			
			this.inicializarInvalidValues();
		/*
		} else {
			this.mostrarInvalidValues();	
		}
		*/
			
		} catch(Exception e) {
			this.isErrorGuardar=true;
			
			this.crearFilaTotales();
			
			throw e;
		} finally {
      		//this.finishProcessRubroEmplea();
      	}
		
	}	
	
	public void actualizarRelaciones(RubroEmplea rubroempleaLocal) throws Exception {
		
		if(this.rubroempleaSessionBean.getConGuardarRelaciones()) {			
			
			if(Constantes.ISUSAEJBLOGICLAYER) {
			
				rubroempleaLocal.setHistorialPagoNomis(this.jInternalFrameDetalleFormRubroEmplea.historialpagonomiBeanSwingJInternalFrame.historialpagonomiLogic.getHistorialPagoNomis());
				rubroempleaLocal.setRubroEstructuras(this.jInternalFrameDetalleFormRubroEmplea.rubroestructuraBeanSwingJInternalFrame.rubroestructuraLogic.getRubroEstructuras());
				rubroempleaLocal.setDefiProvisionEmpleados(this.jInternalFrameDetalleFormRubroEmplea.defiprovisionempleadoBeanSwingJInternalFrame.defiprovisionempleadoLogic.getDefiProvisionEmpleados());
				rubroempleaLocal.setEmpleadoPagoRubros(this.jInternalFrameDetalleFormRubroEmplea.empleadopagorubroBeanSwingJInternalFrame.empleadopagorubroLogic.getEmpleadoPagoRubros());
				rubroempleaLocal.setHistorialPagoMesNomis(this.jInternalFrameDetalleFormRubroEmplea.historialpagomesnomiBeanSwingJInternalFrame.historialpagomesnomiLogic.getHistorialPagoMesNomis());
				rubroempleaLocal.setRubroEmpleados(this.jInternalFrameDetalleFormRubroEmplea.rubroempleadoBeanSwingJInternalFrame.rubroempleadoLogic.getRubroEmpleados());
				rubroempleaLocal.setValorRubroVariables(this.jInternalFrameDetalleFormRubroEmplea.valorrubrovariableBeanSwingJInternalFrame.valorrubrovariableLogic.getValorRubroVariables());
				rubroempleaLocal.setTipoPrestamos(this.jInternalFrameDetalleFormRubroEmplea.tipoprestamoBeanSwingJInternalFrame.tipoprestamoLogic.getTipoPrestamos());
				rubroempleaLocal.setRubroEmpleaCuentaContables(this.jInternalFrameDetalleFormRubroEmplea.rubroempleacuentacontableBeanSwingJInternalFrame.rubroempleacuentacontableLogic.getRubroEmpleaCuentaContables());
			
			} else {
			
				rubroempleaLocal.setHistorialPagoNomis(this.jInternalFrameDetalleFormRubroEmplea.historialpagonomiBeanSwingJInternalFrame.historialpagonomis);
				rubroempleaLocal.setRubroEstructuras(this.jInternalFrameDetalleFormRubroEmplea.rubroestructuraBeanSwingJInternalFrame.rubroestructuras);
				rubroempleaLocal.setDefiProvisionEmpleados(this.jInternalFrameDetalleFormRubroEmplea.defiprovisionempleadoBeanSwingJInternalFrame.defiprovisionempleados);
				rubroempleaLocal.setEmpleadoPagoRubros(this.jInternalFrameDetalleFormRubroEmplea.empleadopagorubroBeanSwingJInternalFrame.empleadopagorubros);
				rubroempleaLocal.setHistorialPagoMesNomis(this.jInternalFrameDetalleFormRubroEmplea.historialpagomesnomiBeanSwingJInternalFrame.historialpagomesnomis);
				rubroempleaLocal.setRubroEmpleados(this.jInternalFrameDetalleFormRubroEmplea.rubroempleadoBeanSwingJInternalFrame.rubroempleados);
				rubroempleaLocal.setValorRubroVariables(this.jInternalFrameDetalleFormRubroEmplea.valorrubrovariableBeanSwingJInternalFrame.valorrubrovariables);
				rubroempleaLocal.setTipoPrestamos(this.jInternalFrameDetalleFormRubroEmplea.tipoprestamoBeanSwingJInternalFrame.tipoprestamos);
				rubroempleaLocal.setRubroEmpleaCuentaContables(this.jInternalFrameDetalleFormRubroEmplea.rubroempleacuentacontableBeanSwingJInternalFrame.rubroempleacuentacontables);	
			}
		}
	}
	
	public void actualizarRelacionFkPadreActual(RubroEmplea rubroempleaLocal) throws Exception {	
		if(this.rubroempleaSessionBean.getEsGuardarRelacionado()) {			
			
		
			if(this.jInternalFrameParent.getClass().equals(EmpresaDetalleFormJInternalFrame.class)) {
				EmpresaBeanSwingJInternalFrame empresaBeanSwingJInternalFrameLocal=(EmpresaBeanSwingJInternalFrame) ((EmpresaDetalleFormJInternalFrame) this.jInternalFrameParent).jInternalFrameParent;

				empresaBeanSwingJInternalFrameLocal.setVariablesFormularioToObjetoActualTodoEmpresa(empresaBeanSwingJInternalFrameLocal.getempresa(),true);
				empresaBeanSwingJInternalFrameLocal.actualizarLista(empresaBeanSwingJInternalFrameLocal.empresa,this.empresasForeignKey);

				empresaBeanSwingJInternalFrameLocal.actualizarRelaciones(empresaBeanSwingJInternalFrameLocal.empresa);

				rubroempleaLocal.setEmpresa(empresaBeanSwingJInternalFrameLocal.empresa);

				this.addItemDefectoCombosForeignKeyEmpresa();
				this.cargarCombosFrameEmpresasForeignKey("Formulario");
				this.setActualEmpresaForeignKey(empresaBeanSwingJInternalFrameLocal.empresa.getId(),false,"Formulario");
			}
			 else if(this.jInternalFrameParent.getClass().equals(TipoCalculoDetalleFormJInternalFrame.class)) {
				TipoCalculoBeanSwingJInternalFrame tipocalculoBeanSwingJInternalFrameLocal=(TipoCalculoBeanSwingJInternalFrame) ((TipoCalculoDetalleFormJInternalFrame) this.jInternalFrameParent).jInternalFrameParent;

				tipocalculoBeanSwingJInternalFrameLocal.setVariablesFormularioToObjetoActualTodoTipoCalculo(tipocalculoBeanSwingJInternalFrameLocal.gettipocalculo(),true);
				tipocalculoBeanSwingJInternalFrameLocal.actualizarLista(tipocalculoBeanSwingJInternalFrameLocal.tipocalculo,this.tipocalculosForeignKey);

				tipocalculoBeanSwingJInternalFrameLocal.actualizarRelaciones(tipocalculoBeanSwingJInternalFrameLocal.tipocalculo);

				rubroempleaLocal.setTipoCalculo(tipocalculoBeanSwingJInternalFrameLocal.tipocalculo);

				this.addItemDefectoCombosForeignKeyTipoCalculo();
				this.cargarCombosFrameTipoCalculosForeignKey("Formulario");
				this.setActualTipoCalculoForeignKey(tipocalculoBeanSwingJInternalFrameLocal.tipocalculo.getId(),false,"Formulario");
			}
			 else if(this.jInternalFrameParent.getClass().equals(TipoRubroEmpleaDetalleFormJInternalFrame.class)) {
				TipoRubroEmpleaBeanSwingJInternalFrame tiporubroempleaBeanSwingJInternalFrameLocal=(TipoRubroEmpleaBeanSwingJInternalFrame) ((TipoRubroEmpleaDetalleFormJInternalFrame) this.jInternalFrameParent).jInternalFrameParent;

				tiporubroempleaBeanSwingJInternalFrameLocal.setVariablesFormularioToObjetoActualTodoTipoRubroEmplea(tiporubroempleaBeanSwingJInternalFrameLocal.gettiporubroemplea(),true);
				tiporubroempleaBeanSwingJInternalFrameLocal.actualizarLista(tiporubroempleaBeanSwingJInternalFrameLocal.tiporubroemplea,this.tiporubroempleasForeignKey);

				tiporubroempleaBeanSwingJInternalFrameLocal.actualizarRelaciones(tiporubroempleaBeanSwingJInternalFrameLocal.tiporubroemplea);

				rubroempleaLocal.setTipoRubroEmplea(tiporubroempleaBeanSwingJInternalFrameLocal.tiporubroemplea);

				this.addItemDefectoCombosForeignKeyTipoRubroEmplea();
				this.cargarCombosFrameTipoRubroEmpleasForeignKey("Formulario");
				this.setActualTipoRubroEmpleaForeignKey(tiporubroempleaBeanSwingJInternalFrameLocal.tiporubroemplea.getId(),false,"Formulario");
			}
			 else if(this.jInternalFrameParent.getClass().equals(TipoGrupoRubroEmpleaDetalleFormJInternalFrame.class)) {
				TipoGrupoRubroEmpleaBeanSwingJInternalFrame tipogruporubroempleaBeanSwingJInternalFrameLocal=(TipoGrupoRubroEmpleaBeanSwingJInternalFrame) ((TipoGrupoRubroEmpleaDetalleFormJInternalFrame) this.jInternalFrameParent).jInternalFrameParent;

				tipogruporubroempleaBeanSwingJInternalFrameLocal.setVariablesFormularioToObjetoActualTodoTipoGrupoRubroEmplea(tipogruporubroempleaBeanSwingJInternalFrameLocal.gettipogruporubroemplea(),true);
				tipogruporubroempleaBeanSwingJInternalFrameLocal.actualizarLista(tipogruporubroempleaBeanSwingJInternalFrameLocal.tipogruporubroemplea,this.tipogruporubroempleasForeignKey);

				tipogruporubroempleaBeanSwingJInternalFrameLocal.actualizarRelaciones(tipogruporubroempleaBeanSwingJInternalFrameLocal.tipogruporubroemplea);

				rubroempleaLocal.setTipoGrupoRubroEmplea(tipogruporubroempleaBeanSwingJInternalFrameLocal.tipogruporubroemplea);

				this.addItemDefectoCombosForeignKeyTipoGrupoRubroEmplea();
				this.cargarCombosFrameTipoGrupoRubroEmpleasForeignKey("Formulario");
				this.setActualTipoGrupoRubroEmpleaForeignKey(tipogruporubroempleaBeanSwingJInternalFrameLocal.tipogruporubroemplea.getId(),false,"Formulario");
			}
		
		}
	}
	
	public Boolean validarRubroEmpleaActual() throws Exception {
		Boolean estaValidado=false;
		this.inicializarInvalidValues();
		
		/*
		int intSelectedRow = this.jTableDatosRubroEmplea.getSelectedRow();
				
		//ARCHITECTURE
		if(Constantes.ISUSAEJBLOGICLAYER) {
			this.rubroemplea =(RubroEmplea) this.rubroempleaLogic.getRubroEmpleas().toArray()[this.jTableDatosRubroEmplea.convertRowIndexToModel(intSelectedRow)];
		} else if(Constantes.ISUSAEJBREMOTE ||Constantes.ISUSAEJBHOME) {
			this.rubroemplea =(RubroEmplea) this.rubroempleas.toArray()[this.jTableDatosRubroEmplea.convertRowIndexToModel(intSelectedRow)];
		}
		//ARCHITECTURE
		*/
		
		this.invalidValues = rubroempleaValidator.getInvalidValues(this.rubroemplea);
					
		if(this.invalidValues==null || this.invalidValues.length<=0) {
			estaValidado=true;
		} else {
			this.mostrarInvalidValues();	
		}
		
		return estaValidado;
	}
	
	public void actualizarLista(RubroEmplea rubroemplea,List<RubroEmplea> rubroempleas) throws Exception {
		try	{		
			RubroEmpleaConstantesFunciones.actualizarLista(rubroemplea,rubroempleas,this.rubroempleaSessionBean.getEsGuardarRelacionado());		
		} catch(Exception e) {
			throw e;
		}
	}		
	
	public void actualizarSelectedLista(RubroEmplea rubroemplea,List<RubroEmplea> rubroempleas) throws Exception {
		try	{			
			RubroEmpleaConstantesFunciones.actualizarSelectedLista(rubroemplea,rubroempleas);
		} catch(Exception e) {
			throw e;
		}
	}	
	
	public Boolean tieneElementosSeleccionados() throws Exception {
		Boolean tiene=false;
		
		List<RubroEmplea> rubroempleasLocal=null;
		
		try	{			
			//ARCHITECTURE
			if(Constantes.ISUSAEJBLOGICLAYER) {
				rubroempleasLocal=this.rubroempleaLogic.getRubroEmpleas();
			} else if(Constantes.ISUSAEJBREMOTE || Constantes.ISUSAEJBHOME) {
				rubroempleasLocal=this.rubroempleas;
			}
			//ARCHITECTURE
		
			for(RubroEmplea rubroempleaLocal:rubroempleasLocal) {
				if(this.permiteMantenimiento(rubroempleaLocal) && rubroempleaLocal.getIsSelected()) {
					tiene=true;
					break;
				}
			}
		} catch(Exception e) {
			throw e;
		}
		
		return tiene;
	}			
	
	public void mostrarInvalidValues() throws Exception {
		String sMensaje="";
				
		for (InvalidValue invalidValue : this.invalidValues) {
			sMensaje+="\r\n"+RubroEmpleaConstantesFunciones.getRubroEmpleaLabelDesdeNombre(invalidValue.getPropertyName())+"->"+invalidValue.getMessage();
			
			//MOSTRAR CAMPOS INVALIDOS
			if(invalidValue.getPropertyName().equals(RubroEmpleaConstantesFunciones.IDEMPRESA)) {FuncionesSwing.mostrarCampoMensajeInvalido(false,this.jInternalFrameDetalleFormRubroEmplea.jLabelid_empresaRubroEmplea,invalidValue.getMessage());}
			if(invalidValue.getPropertyName().equals(RubroEmpleaConstantesFunciones.IDTIPOCALCULO)) {FuncionesSwing.mostrarCampoMensajeInvalido(false,this.jInternalFrameDetalleFormRubroEmplea.jLabelid_tipo_calculoRubroEmplea,invalidValue.getMessage());}
			if(invalidValue.getPropertyName().equals(RubroEmpleaConstantesFunciones.IDTIPORUBROEMPLEA)) {FuncionesSwing.mostrarCampoMensajeInvalido(false,this.jInternalFrameDetalleFormRubroEmplea.jLabelid_tipo_rubro_empleaRubroEmplea,invalidValue.getMessage());}
			if(invalidValue.getPropertyName().equals(RubroEmpleaConstantesFunciones.IDTIPOGRUPORUBROEMPLEA)) {FuncionesSwing.mostrarCampoMensajeInvalido(false,this.jInternalFrameDetalleFormRubroEmplea.jLabelid_tipo_grupo_rubro_empleaRubroEmplea,invalidValue.getMessage());}
			if(invalidValue.getPropertyName().equals(RubroEmpleaConstantesFunciones.CODIGO)) {FuncionesSwing.mostrarCampoMensajeInvalido(false,this.jInternalFrameDetalleFormRubroEmplea.jLabelcodigoRubroEmplea,invalidValue.getMessage());}
			if(invalidValue.getPropertyName().equals(RubroEmpleaConstantesFunciones.NOMBRE)) {FuncionesSwing.mostrarCampoMensajeInvalido(false,this.jInternalFrameDetalleFormRubroEmplea.jLabelnombreRubroEmplea,invalidValue.getMessage());}
			if(invalidValue.getPropertyName().equals(RubroEmpleaConstantesFunciones.FORMULA)) {FuncionesSwing.mostrarCampoMensajeInvalido(false,this.jInternalFrameDetalleFormRubroEmplea.jLabelformulaRubroEmplea,invalidValue.getMessage());}
			if(invalidValue.getPropertyName().equals(RubroEmpleaConstantesFunciones.ALIAS)) {FuncionesSwing.mostrarCampoMensajeInvalido(false,this.jInternalFrameDetalleFormRubroEmplea.jLabelaliasRubroEmplea,invalidValue.getMessage());}
			if(invalidValue.getPropertyName().equals(RubroEmpleaConstantesFunciones.SECUENCIAL)) {FuncionesSwing.mostrarCampoMensajeInvalido(false,this.jInternalFrameDetalleFormRubroEmplea.jLabelsecuencialRubroEmplea,invalidValue.getMessage());}
			if(invalidValue.getPropertyName().equals(RubroEmpleaConstantesFunciones.PARAROLPAGOS)) {FuncionesSwing.mostrarCampoMensajeInvalido(false,this.jInternalFrameDetalleFormRubroEmplea.jLabelpara_rol_pagosRubroEmplea,invalidValue.getMessage());}
			if(invalidValue.getPropertyName().equals(RubroEmpleaConstantesFunciones.PARASUELDO)) {FuncionesSwing.mostrarCampoMensajeInvalido(false,this.jInternalFrameDetalleFormRubroEmplea.jLabelpara_sueldoRubroEmplea,invalidValue.getMessage());}
			if(invalidValue.getPropertyName().equals(RubroEmpleaConstantesFunciones.PARAVACACIONES)) {FuncionesSwing.mostrarCampoMensajeInvalido(false,this.jInternalFrameDetalleFormRubroEmplea.jLabelpara_vacacionesRubroEmplea,invalidValue.getMessage());}
			if(invalidValue.getPropertyName().equals(RubroEmpleaConstantesFunciones.PARAIMPUESTORENTA)) {FuncionesSwing.mostrarCampoMensajeInvalido(false,this.jInternalFrameDetalleFormRubroEmplea.jLabelpara_impuesto_rentaRubroEmplea,invalidValue.getMessage());}
			if(invalidValue.getPropertyName().equals(RubroEmpleaConstantesFunciones.PARASEGUROSOCIAL)) {FuncionesSwing.mostrarCampoMensajeInvalido(false,this.jInternalFrameDetalleFormRubroEmplea.jLabelpara_seguro_socialRubroEmplea,invalidValue.getMessage());}
			if(invalidValue.getPropertyName().equals(RubroEmpleaConstantesFunciones.PARAPROVISIONES)) {FuncionesSwing.mostrarCampoMensajeInvalido(false,this.jInternalFrameDetalleFormRubroEmplea.jLabelpara_provisionesRubroEmplea,invalidValue.getMessage());}
			if(invalidValue.getPropertyName().equals(RubroEmpleaConstantesFunciones.PARAUTILIDADES)) {FuncionesSwing.mostrarCampoMensajeInvalido(false,this.jInternalFrameDetalleFormRubroEmplea.jLabelpara_utilidadesRubroEmplea,invalidValue.getMessage());}
			if(invalidValue.getPropertyName().equals(RubroEmpleaConstantesFunciones.PARARUBROIESS)) {FuncionesSwing.mostrarCampoMensajeInvalido(false,this.jInternalFrameDetalleFormRubroEmplea.jLabelpara_rubro_iessRubroEmplea,invalidValue.getMessage());}
			if(invalidValue.getPropertyName().equals(RubroEmpleaConstantesFunciones.ESFONDORESERVA)) {FuncionesSwing.mostrarCampoMensajeInvalido(false,this.jInternalFrameDetalleFormRubroEmplea.jLabeles_fondo_reservaRubroEmplea,invalidValue.getMessage());}
			if(invalidValue.getPropertyName().equals(RubroEmpleaConstantesFunciones.ESDECIMOTERCERO)) {FuncionesSwing.mostrarCampoMensajeInvalido(false,this.jInternalFrameDetalleFormRubroEmplea.jLabeles_decimo_terceroRubroEmplea,invalidValue.getMessage());}
			if(invalidValue.getPropertyName().equals(RubroEmpleaConstantesFunciones.ESDECIMOCUARTO)) {FuncionesSwing.mostrarCampoMensajeInvalido(false,this.jInternalFrameDetalleFormRubroEmplea.jLabeles_decimo_cuartoRubroEmplea,invalidValue.getMessage());}
        }
		
		
		if(!sMensaje.equals("")) {
			//JOptionPane.showMessageDialog(this,sMensaje,"VALIDACION ",JOptionPane.ERROR_MESSAGE);
			throw new Exception(sMensaje);			
		}
		
		/*
		System.out.println(invalidValue);
        System.out.println("message=" + invalidValue.getMessage());
        System.out.println("propertyName=" + invalidValue.getPropertyName());
        System.out.println("propertyPath=" + invalidValue.getPropertyPath());
        System.out.println("value=" + invalidValue.getValue());
        */
	}		
	
	public void inicializarInvalidValues() throws Exception {
		String sMensaje="";	
		
		if(this.jInternalFrameDetalleFormRubroEmplea!=null) {
		
		//MOSTRAR CAMPOS INVALIDOS
		FuncionesSwing.mostrarCampoMensajeInvalido(true,this.jInternalFrameDetalleFormRubroEmplea.jLabelid_empresaRubroEmplea,"");
		FuncionesSwing.mostrarCampoMensajeInvalido(true,this.jInternalFrameDetalleFormRubroEmplea.jLabelid_tipo_calculoRubroEmplea,"");
		FuncionesSwing.mostrarCampoMensajeInvalido(true,this.jInternalFrameDetalleFormRubroEmplea.jLabelid_tipo_rubro_empleaRubroEmplea,"");
		FuncionesSwing.mostrarCampoMensajeInvalido(true,this.jInternalFrameDetalleFormRubroEmplea.jLabelid_tipo_grupo_rubro_empleaRubroEmplea,"");
		FuncionesSwing.mostrarCampoMensajeInvalido(true,this.jInternalFrameDetalleFormRubroEmplea.jLabelcodigoRubroEmplea,"");
		FuncionesSwing.mostrarCampoMensajeInvalido(true,this.jInternalFrameDetalleFormRubroEmplea.jLabelnombreRubroEmplea,"");
		FuncionesSwing.mostrarCampoMensajeInvalido(true,this.jInternalFrameDetalleFormRubroEmplea.jLabelformulaRubroEmplea,"");
		FuncionesSwing.mostrarCampoMensajeInvalido(true,this.jInternalFrameDetalleFormRubroEmplea.jLabelaliasRubroEmplea,"");
		FuncionesSwing.mostrarCampoMensajeInvalido(true,this.jInternalFrameDetalleFormRubroEmplea.jLabelsecuencialRubroEmplea,"");
		FuncionesSwing.mostrarCampoMensajeInvalido(true,this.jInternalFrameDetalleFormRubroEmplea.jLabelpara_rol_pagosRubroEmplea,"");
		FuncionesSwing.mostrarCampoMensajeInvalido(true,this.jInternalFrameDetalleFormRubroEmplea.jLabelpara_sueldoRubroEmplea,"");
		FuncionesSwing.mostrarCampoMensajeInvalido(true,this.jInternalFrameDetalleFormRubroEmplea.jLabelpara_vacacionesRubroEmplea,"");
		FuncionesSwing.mostrarCampoMensajeInvalido(true,this.jInternalFrameDetalleFormRubroEmplea.jLabelpara_impuesto_rentaRubroEmplea,"");
		FuncionesSwing.mostrarCampoMensajeInvalido(true,this.jInternalFrameDetalleFormRubroEmplea.jLabelpara_seguro_socialRubroEmplea,"");
		FuncionesSwing.mostrarCampoMensajeInvalido(true,this.jInternalFrameDetalleFormRubroEmplea.jLabelpara_provisionesRubroEmplea,"");
		FuncionesSwing.mostrarCampoMensajeInvalido(true,this.jInternalFrameDetalleFormRubroEmplea.jLabelpara_utilidadesRubroEmplea,"");
		FuncionesSwing.mostrarCampoMensajeInvalido(true,this.jInternalFrameDetalleFormRubroEmplea.jLabelpara_rubro_iessRubroEmplea,"");
		FuncionesSwing.mostrarCampoMensajeInvalido(true,this.jInternalFrameDetalleFormRubroEmplea.jLabeles_fondo_reservaRubroEmplea,"");
		FuncionesSwing.mostrarCampoMensajeInvalido(true,this.jInternalFrameDetalleFormRubroEmplea.jLabeles_decimo_terceroRubroEmplea,"");
		FuncionesSwing.mostrarCampoMensajeInvalido(true,this.jInternalFrameDetalleFormRubroEmplea.jLabeles_decimo_cuartoRubroEmplea,"");
		
		}
	}
	
	
	
	public void actualizarObjetoPadreFk(String sTipo)  throws Exception {
		if(sTipo.equals("XXXAuxiliar")) {
		
		}
		
		 else  if(sTipo.equals("HistorialPagoNomi")) {
			if(this.rubroemplea==null) {
				this.rubroemplea= new RubroEmplea();
			}

			if(this.rubroempleaSessionBean.getConGuardarRelaciones()) { //&& this.isEsNuevoRubroEmplea
				this.setVariablesFormularioToObjetoActualRubroEmplea(this.rubroemplea,true);//false
				this.setVariablesFormularioToObjetoActualForeignKeysRubroEmplea(this.rubroemplea);

				this.jInternalFrameDetalleFormRubroEmplea.historialpagonomiBeanSwingJInternalFrame.gethistorialpagonomi().setRubroEmplea(this.rubroemplea);
			}

			return;
		}
		 else  if(sTipo.equals("RubroEstructura")) {
			if(this.rubroemplea==null) {
				this.rubroemplea= new RubroEmplea();
			}

			if(this.rubroempleaSessionBean.getConGuardarRelaciones()) { //&& this.isEsNuevoRubroEmplea
				this.setVariablesFormularioToObjetoActualRubroEmplea(this.rubroemplea,true);//false
				this.setVariablesFormularioToObjetoActualForeignKeysRubroEmplea(this.rubroemplea);

				this.jInternalFrameDetalleFormRubroEmplea.rubroestructuraBeanSwingJInternalFrame.getrubroestructura().setRubroEmplea(this.rubroemplea);
			}

			return;
		}
		 else  if(sTipo.equals("DefiProvisionEmpleado")) {
			if(this.rubroemplea==null) {
				this.rubroemplea= new RubroEmplea();
			}

			if(this.rubroempleaSessionBean.getConGuardarRelaciones()) { //&& this.isEsNuevoRubroEmplea
				this.setVariablesFormularioToObjetoActualRubroEmplea(this.rubroemplea,true);//false
				this.setVariablesFormularioToObjetoActualForeignKeysRubroEmplea(this.rubroemplea);

				this.jInternalFrameDetalleFormRubroEmplea.defiprovisionempleadoBeanSwingJInternalFrame.getdefiprovisionempleado().setRubroEmplea(this.rubroemplea);
			}

			return;
		}
		 else  if(sTipo.equals("EmpleadoPagoRubro")) {
			if(this.rubroemplea==null) {
				this.rubroemplea= new RubroEmplea();
			}

			if(this.rubroempleaSessionBean.getConGuardarRelaciones()) { //&& this.isEsNuevoRubroEmplea
				this.setVariablesFormularioToObjetoActualRubroEmplea(this.rubroemplea,true);//false
				this.setVariablesFormularioToObjetoActualForeignKeysRubroEmplea(this.rubroemplea);

				this.jInternalFrameDetalleFormRubroEmplea.empleadopagorubroBeanSwingJInternalFrame.getempleadopagorubro().setRubroEmplea(this.rubroemplea);
			}

			return;
		}
		 else  if(sTipo.equals("HistorialPagoMesNomi")) {
			if(this.rubroemplea==null) {
				this.rubroemplea= new RubroEmplea();
			}

			if(this.rubroempleaSessionBean.getConGuardarRelaciones()) { //&& this.isEsNuevoRubroEmplea
				this.setVariablesFormularioToObjetoActualRubroEmplea(this.rubroemplea,true);//false
				this.setVariablesFormularioToObjetoActualForeignKeysRubroEmplea(this.rubroemplea);

				this.jInternalFrameDetalleFormRubroEmplea.historialpagomesnomiBeanSwingJInternalFrame.gethistorialpagomesnomi().setRubroEmplea(this.rubroemplea);
			}

			return;
		}
		 else  if(sTipo.equals("RubroEmpleado")) {
			if(this.rubroemplea==null) {
				this.rubroemplea= new RubroEmplea();
			}

			if(this.rubroempleaSessionBean.getConGuardarRelaciones()) { //&& this.isEsNuevoRubroEmplea
				this.setVariablesFormularioToObjetoActualRubroEmplea(this.rubroemplea,true);//false
				this.setVariablesFormularioToObjetoActualForeignKeysRubroEmplea(this.rubroemplea);

				this.jInternalFrameDetalleFormRubroEmplea.rubroempleadoBeanSwingJInternalFrame.getrubroempleado().setRubroEmplea(this.rubroemplea);
			}

			return;
		}
		 else  if(sTipo.equals("ValorRubroVariable")) {
			if(this.rubroemplea==null) {
				this.rubroemplea= new RubroEmplea();
			}

			if(this.rubroempleaSessionBean.getConGuardarRelaciones()) { //&& this.isEsNuevoRubroEmplea
				this.setVariablesFormularioToObjetoActualRubroEmplea(this.rubroemplea,true);//false
				this.setVariablesFormularioToObjetoActualForeignKeysRubroEmplea(this.rubroemplea);

				this.jInternalFrameDetalleFormRubroEmplea.valorrubrovariableBeanSwingJInternalFrame.getvalorrubrovariable().setRubroEmplea(this.rubroemplea);
			}

			return;
		}
		 else  if(sTipo.equals("TipoPrestamo")) {
			if(this.rubroemplea==null) {
				this.rubroemplea= new RubroEmplea();
			}

			if(this.rubroempleaSessionBean.getConGuardarRelaciones()) { //&& this.isEsNuevoRubroEmplea
				this.setVariablesFormularioToObjetoActualRubroEmplea(this.rubroemplea,true);//false
				this.setVariablesFormularioToObjetoActualForeignKeysRubroEmplea(this.rubroemplea);

				this.jInternalFrameDetalleFormRubroEmplea.tipoprestamoBeanSwingJInternalFrame.gettipoprestamo().setRubroEmplea(this.rubroemplea);
			}

			return;
		}
		 else  if(sTipo.equals("RubroEmpleaCuentaContable")) {
			if(this.rubroemplea==null) {
				this.rubroemplea= new RubroEmplea();
			}

			if(this.rubroempleaSessionBean.getConGuardarRelaciones()) { //&& this.isEsNuevoRubroEmplea
				this.setVariablesFormularioToObjetoActualRubroEmplea(this.rubroemplea,true);//false
				this.setVariablesFormularioToObjetoActualForeignKeysRubroEmplea(this.rubroemplea);

				this.jInternalFrameDetalleFormRubroEmplea.rubroempleacuentacontableBeanSwingJInternalFrame.getrubroempleacuentacontable().setRubroEmplea(this.rubroemplea);
			}

			return;
		}
	}
	
	public void nuevoPreparar() throws Exception {
		this.nuevoPreparar(false);
	}
	
	public void nuevoPreparar(Boolean esNuevoGuardarCambios) throws Exception {
		this.iIdNuevoRubroEmplea--;	
		
		
		this.rubroempleaAux=new RubroEmplea();
		
		this.rubroempleaAux.setId(this.iIdNuevoRubroEmplea);
		this.rubroempleaAux.setIsChanged(true);
		
		//ARCHITECTURE
		if(Constantes.ISUSAEJBLOGICLAYER) {
			this.rubroempleaLogic.getRubroEmpleas().add(this.rubroempleaAux);
		} else if(Constantes.ISUSAEJBREMOTE || Constantes.ISUSAEJBHOME) {
			this.rubroempleas.add(this.rubroempleaAux);
		}
		//ARCHITECTURE
		
		this.rubroemplea=this.rubroempleaAux;
		
		if(RubroEmpleaJInternalFrame.ISBINDING_MANUAL_TABLA) {
			this.setVariablesObjetoActualToFormularioRubroEmplea(this.rubroemplea);
			this.setVariablesObjetoActualToFormularioForeignKeyRubroEmplea(this.rubroemplea);
		}
				
		//this.setDefaultControlesRubroEmplea();
		
		this.inicializarInvalidValues();
				
		//SELECCIONA ITEM DEFECTO-->SET O SELECTED INDEX
		this.setItemDefectoCombosForeignKeyRubroEmplea();
		
		
		//INICIALIZA VARIABLES COMBOS GLOBALES A FORMULARIO(ParametroGeneralUsuario)
		this.setVariablesGlobalesCombosForeignKeyRubroEmplea();
		
		//INICIALIZA VARIABLES COMBOS GLOBALES AUXILIARES A FORMULARIO(Anio,Mes)
		//this.setVariablesGlobalesAuxiliaresCombosForeignKeyRubroEmplea();
		
		//SI TIENE FOREIGN KEY CON CAMPO esDefecto=true, SE ACTUALIZA A OBJETO ACTUAL
		this.setVariablesForeignKeyObjetoBeanDefectoActualToObjetoActualRubroEmplea(this.rubroempleaBean,this.rubroemplea,false,false);
		
		//ACTUALIZA VALORES PARA EL OBJETO ACTUAL ANTES DE ENVIARLO A ACTUALIZAR
		this.setVariablesFormularioToObjetoActualForeignKeysRubroEmplea(this.rubroemplea);
				
		ArrayList<Classe> classes=new ArrayList<Classe>();
		
		if(this.jInternalFrameParent!=null) {
			this.jInternalFrameParent.actualizarObjetoPadreFk(RubroEmpleaConstantesFunciones.CLASSNAME);
		}	
		
		
		if(this.rubroempleaSessionBean.getConGuardarRelaciones()) {
			classes=RubroEmpleaConstantesFunciones.getClassesRelationshipsOfRubroEmplea(new ArrayList<Classe>(),DeepLoadType.NONE);
		}
		
		this.classesActual=new ArrayList<Classe>();
		this.classesActual.addAll(classes);
				
		//ARCHITECTURE
		if(Constantes.ISUSAEJBLOGICLAYER) {						
			this.rubroempleaReturnGeneral=rubroempleaLogic.procesarEventosRubroEmpleasWithConnection(this.parametroGeneralUsuario,this.moduloActual,this.opcionActual,this.usuarioActual,EventoGlobalTipo.FORM_RECARGAR,ControlTipo.FORM,EventoTipo.LOAD,EventoSubTipo.NEW,"FORM",this.rubroempleaLogic.getRubroEmpleas(),this.rubroemplea,this.rubroempleaParameterGeneral,this.isEsNuevoRubroEmplea,classes);//this.rubroempleaLogic.getRubroEmplea()
						
		} else if(Constantes.ISUSAEJBREMOTE) {
						
		} else if(Constantes.ISUSAEJBHOME) {
		}
		//ARCHITECTURE
		
		//ACTUALIZA VARIABLES DEFECTO DESDE LOGIC A RETURN GENERAL Y LUEGO A BEAN
		//this.setVariablesObjetoReturnGeneralToBeanRubroEmplea(this.rubroempleaReturnGeneral,this.rubroempleaBean,false);
		
		if(this.rubroempleaReturnGeneral.getConRecargarPropiedades()) {
			//INICIALIZA VARIABLES COMBOS NORMALES (FK)
			this.setVariablesObjetoActualToFormularioForeignKeyRubroEmplea(this.rubroempleaReturnGeneral.getRubroEmplea());
			
			//INICIALIZA VARIABLES NORMALES A FORMULARIO(SIN FK)
			this.setVariablesObjetoActualToFormularioRubroEmplea(this.rubroempleaReturnGeneral.getRubroEmplea());
		}
		
		if(this.rubroempleaReturnGeneral.getConRecargarRelaciones()) {
			//INICIALIZA VARIABLES RELACIONES A FORMULARIO
			this.setVariablesRelacionesObjetoActualToFormularioRubroEmplea(this.rubroempleaReturnGeneral.getRubroEmplea(),classes);//this.rubroempleaBean);	
		}
			
		//ACTUALIZA VARIABLES FORMULARIO A OBJETO ACTUAL (PARA NUEVO TABLA O GUARDAR CAMBIOS
		if(esNuevoGuardarCambios) {
			this.setVariablesFormularioToObjetoActualRubroEmplea(this.rubroemplea,false);
		}
		
		//INICIALIZA VARIABLES COMBOS DEFAULT DEL PROYECTO(|DEFAULT para FK)
		//this.setVariablesDefaultCombosForeignKeyRubroEmplea();
		
		//INICIALIZA VARIABLES COMBOS PARAMETRO DEL PROYECTO(|VALORPARAM Era para ParametroModulo, ahora en logic)
		//this.setVariablesParametroCombosForeignKeyRubroEmplea();						
		
		if(!esNuevoGuardarCambios) {
			//INICIALIZA VARIABLES POR OPCION MENU
			this.arrDatoGeneral= new  ArrayList<DatoGeneral>();
			this.arrDatoGeneralNo= new  ArrayList<String>();
			
			RubroEmpleaBeanSwingJInternalFrameAdditional.RecargarFormRubroEmplea(this,"NUEVO_PREPARAR","",this.arrDatoGeneral);
		
			//NO FUNCIONA BINDINGS			
			this.inicializarActualizarBindingRubroEmplea(false);
						
			if(rubroempleaSessionBean.getConGuardarRelaciones()) {
				//DEBERIA YA ESTAR CARGADO LOS COMBOS Y SI SE NECESITA ALGO MAS SE DEBE CREAR FUNCION LIMITADA
				//SI DEBE TRAER Y RESETEAR TABLA
				

				if(this.jInternalFrameDetalleFormRubroEmplea.historialpagonomiBeanSwingJInternalFrame!=null && this.jInternalFrameDetalleFormRubroEmplea.historialpagonomiBeanSwingJInternalFrame.historialpagonomiSessionBean.getEsGuardarRelacionado() && HistorialPagoNomiJInternalFrame.ESTA_CARGADO_PORPARTE) {
					this.jButtonHistorialPagoNomiActionPerformed(null,-1,false,true,null);
				}

				if(this.jInternalFrameDetalleFormRubroEmplea.rubroestructuraBeanSwingJInternalFrame!=null && this.jInternalFrameDetalleFormRubroEmplea.rubroestructuraBeanSwingJInternalFrame.rubroestructuraSessionBean.getEsGuardarRelacionado() && RubroEstructuraJInternalFrame.ESTA_CARGADO_PORPARTE) {
					this.jButtonRubroEstructuraActionPerformed(null,-1,false,true,null);
				}

				if(this.jInternalFrameDetalleFormRubroEmplea.defiprovisionempleadoBeanSwingJInternalFrame!=null && this.jInternalFrameDetalleFormRubroEmplea.defiprovisionempleadoBeanSwingJInternalFrame.defiprovisionempleadoSessionBean.getEsGuardarRelacionado() && DefiProvisionEmpleadoJInternalFrame.ESTA_CARGADO_PORPARTE) {
					this.jButtonDefiProvisionEmpleadoActionPerformed(null,-1,false,true,null);
				}

				if(this.jInternalFrameDetalleFormRubroEmplea.empleadopagorubroBeanSwingJInternalFrame!=null && this.jInternalFrameDetalleFormRubroEmplea.empleadopagorubroBeanSwingJInternalFrame.empleadopagorubroSessionBean.getEsGuardarRelacionado() && EmpleadoPagoRubroJInternalFrame.ESTA_CARGADO_PORPARTE) {
					this.jButtonEmpleadoPagoRubroActionPerformed(null,-1,false,true,null);
				}

				if(this.jInternalFrameDetalleFormRubroEmplea.historialpagomesnomiBeanSwingJInternalFrame!=null && this.jInternalFrameDetalleFormRubroEmplea.historialpagomesnomiBeanSwingJInternalFrame.historialpagomesnomiSessionBean.getEsGuardarRelacionado() && HistorialPagoMesNomiJInternalFrame.ESTA_CARGADO_PORPARTE) {
					this.jButtonHistorialPagoMesNomiActionPerformed(null,-1,false,true,null);
				}

				if(this.jInternalFrameDetalleFormRubroEmplea.rubroempleadoBeanSwingJInternalFrame!=null && this.jInternalFrameDetalleFormRubroEmplea.rubroempleadoBeanSwingJInternalFrame.rubroempleadoSessionBean.getEsGuardarRelacionado() && RubroEmpleadoJInternalFrame.ESTA_CARGADO_PORPARTE) {
					this.jButtonRubroEmpleadoActionPerformed(null,-1,false,true,null);
				}

				if(this.jInternalFrameDetalleFormRubroEmplea.valorrubrovariableBeanSwingJInternalFrame!=null && this.jInternalFrameDetalleFormRubroEmplea.valorrubrovariableBeanSwingJInternalFrame.valorrubrovariableSessionBean.getEsGuardarRelacionado() && ValorRubroVariableJInternalFrame.ESTA_CARGADO_PORPARTE) {
					this.jButtonValorRubroVariableActionPerformed(null,-1,false,true,null);
				}

				if(this.jInternalFrameDetalleFormRubroEmplea.tipoprestamoBeanSwingJInternalFrame!=null && this.jInternalFrameDetalleFormRubroEmplea.tipoprestamoBeanSwingJInternalFrame.tipoprestamoSessionBean.getEsGuardarRelacionado() && TipoPrestamoJInternalFrame.ESTA_CARGADO_PORPARTE) {
					this.jButtonTipoPrestamoActionPerformed(null,-1,false,true,null);
				}

				if(this.jInternalFrameDetalleFormRubroEmplea.rubroempleacuentacontableBeanSwingJInternalFrame!=null && this.jInternalFrameDetalleFormRubroEmplea.rubroempleacuentacontableBeanSwingJInternalFrame.rubroempleacuentacontableSessionBean.getEsGuardarRelacionado() && RubroEmpleaCuentaContableJInternalFrame.ESTA_CARGADO_PORPARTE) {
					this.jButtonRubroEmpleaCuentaContableActionPerformed(null,-1,false,true,null);
				}				
			}
				
			//SI ES MANUAL
			if(RubroEmpleaJInternalFrame.ISBINDING_MANUAL) {
				//this.inicializarActualizarBindingManualRubroEmplea();
			}
			
			this.actualizarVisualTableDatosRubroEmplea();
			
			this.jTableDatosRubroEmplea.setRowSelectionInterval(this.getIndiceNuevoRubroEmplea(), this.getIndiceNuevoRubroEmplea());
			
			this.seleccionarFilaTablaRubroEmpleaActual();
						
			this.actualizarEstadoCeldasBotonesRubroEmplea("a", isGuardarCambiosEnLote, isEsMantenimientoRelacionado);			
		
		}		
	}
	
	public void habilitarDeshabilitarControlesRubroEmplea(Boolean isHabilitar) throws Exception {
		
		this.jInternalFrameDetalleFormRubroEmplea.jTextFieldcodigoRubroEmplea.setEnabled(isHabilitar && this.rubroempleaConstantesFunciones.activarcodigoRubroEmplea);
		this.jInternalFrameDetalleFormRubroEmplea.jTextAreanombreRubroEmplea.setEnabled(isHabilitar && this.rubroempleaConstantesFunciones.activarnombreRubroEmplea);
		this.jInternalFrameDetalleFormRubroEmplea.jTextAreaformulaRubroEmplea.setEnabled(isHabilitar && this.rubroempleaConstantesFunciones.activarformulaRubroEmplea);
		this.jInternalFrameDetalleFormRubroEmplea.jTextFieldaliasRubroEmplea.setEnabled(isHabilitar && this.rubroempleaConstantesFunciones.activaraliasRubroEmplea);
		this.jInternalFrameDetalleFormRubroEmplea.jTextFieldsecuencialRubroEmplea.setEnabled(isHabilitar && this.rubroempleaConstantesFunciones.activarsecuencialRubroEmplea);
		this.jInternalFrameDetalleFormRubroEmplea.jCheckBoxpara_rol_pagosRubroEmplea.setEnabled(isHabilitar && this.rubroempleaConstantesFunciones.activarpara_rol_pagosRubroEmplea);
		this.jInternalFrameDetalleFormRubroEmplea.jCheckBoxpara_sueldoRubroEmplea.setEnabled(isHabilitar && this.rubroempleaConstantesFunciones.activarpara_sueldoRubroEmplea);
		this.jInternalFrameDetalleFormRubroEmplea.jCheckBoxpara_vacacionesRubroEmplea.setEnabled(isHabilitar && this.rubroempleaConstantesFunciones.activarpara_vacacionesRubroEmplea);
		this.jInternalFrameDetalleFormRubroEmplea.jCheckBoxpara_impuesto_rentaRubroEmplea.setEnabled(isHabilitar && this.rubroempleaConstantesFunciones.activarpara_impuesto_rentaRubroEmplea);
		this.jInternalFrameDetalleFormRubroEmplea.jCheckBoxpara_seguro_socialRubroEmplea.setEnabled(isHabilitar && this.rubroempleaConstantesFunciones.activarpara_seguro_socialRubroEmplea);
		this.jInternalFrameDetalleFormRubroEmplea.jCheckBoxpara_provisionesRubroEmplea.setEnabled(isHabilitar && this.rubroempleaConstantesFunciones.activarpara_provisionesRubroEmplea);
		this.jInternalFrameDetalleFormRubroEmplea.jCheckBoxpara_utilidadesRubroEmplea.setEnabled(isHabilitar && this.rubroempleaConstantesFunciones.activarpara_utilidadesRubroEmplea);
		this.jInternalFrameDetalleFormRubroEmplea.jCheckBoxpara_rubro_iessRubroEmplea.setEnabled(isHabilitar && this.rubroempleaConstantesFunciones.activarpara_rubro_iessRubroEmplea);
		this.jInternalFrameDetalleFormRubroEmplea.jCheckBoxes_fondo_reservaRubroEmplea.setEnabled(isHabilitar && this.rubroempleaConstantesFunciones.activares_fondo_reservaRubroEmplea);
		this.jInternalFrameDetalleFormRubroEmplea.jCheckBoxes_decimo_terceroRubroEmplea.setEnabled(isHabilitar && this.rubroempleaConstantesFunciones.activares_decimo_terceroRubroEmplea);
		this.jInternalFrameDetalleFormRubroEmplea.jCheckBoxes_decimo_cuartoRubroEmplea.setEnabled(isHabilitar && this.rubroempleaConstantesFunciones.activares_decimo_cuartoRubroEmplea);	
		//
		this.jInternalFrameDetalleFormRubroEmplea.jComboBoxid_empresaRubroEmplea.setEnabled(isHabilitar && this.rubroempleaConstantesFunciones.activarid_empresaRubroEmplea);
		this.jInternalFrameDetalleFormRubroEmplea.jComboBoxid_tipo_calculoRubroEmplea.setEnabled(isHabilitar && this.rubroempleaConstantesFunciones.activarid_tipo_calculoRubroEmplea);
		this.jInternalFrameDetalleFormRubroEmplea.jComboBoxid_tipo_rubro_empleaRubroEmplea.setEnabled(isHabilitar && this.rubroempleaConstantesFunciones.activarid_tipo_rubro_empleaRubroEmplea);
		this.jInternalFrameDetalleFormRubroEmplea.jComboBoxid_tipo_grupo_rubro_empleaRubroEmplea.setEnabled(isHabilitar && this.rubroempleaConstantesFunciones.activarid_tipo_grupo_rubro_empleaRubroEmplea);
	};
	
	public void setDefaultControlesRubroEmplea() throws Exception {
			
	};
	
	
	public void habilitarDeshabilitarTipoMantenimientoRubroEmplea(Boolean esRelaciones) throws Exception {
		if(esRelaciones) {
			//this.rubroempleaSessionBean.setConGuardarRelaciones(true);			
			this.rubroempleaSessionBean.setEstaModoGuardarRelaciones(true);				
			this.jInternalFrameDetalleFormRubroEmplea.jTabbedPaneRelacionesRubroEmplea.setVisible(true);
			
			

			if(this.jInternalFrameDetalleFormRubroEmplea.historialpagonomiBeanSwingJInternalFrame!=null) {
				this.jInternalFrameDetalleFormRubroEmplea.historialpagonomiBeanSwingJInternalFrame.historialpagonomiSessionBean.setEsGuardarRelacionado(true);
				//this.jInternalFrameDetalleFormRubroEmplea.historialpagonomiBeanSwingJInternalFrame.getContentPane().setVisible(true);
			}

			if(this.jInternalFrameDetalleFormRubroEmplea.rubroestructuraBeanSwingJInternalFrame!=null) {
				this.jInternalFrameDetalleFormRubroEmplea.rubroestructuraBeanSwingJInternalFrame.rubroestructuraSessionBean.setEsGuardarRelacionado(true);
				//this.jInternalFrameDetalleFormRubroEmplea.rubroestructuraBeanSwingJInternalFrame.getContentPane().setVisible(true);
			}

			if(this.jInternalFrameDetalleFormRubroEmplea.defiprovisionempleadoBeanSwingJInternalFrame!=null) {
				this.jInternalFrameDetalleFormRubroEmplea.defiprovisionempleadoBeanSwingJInternalFrame.defiprovisionempleadoSessionBean.setEsGuardarRelacionado(true);
				//this.jInternalFrameDetalleFormRubroEmplea.defiprovisionempleadoBeanSwingJInternalFrame.getContentPane().setVisible(true);
			}

			if(this.jInternalFrameDetalleFormRubroEmplea.empleadopagorubroBeanSwingJInternalFrame!=null) {
				this.jInternalFrameDetalleFormRubroEmplea.empleadopagorubroBeanSwingJInternalFrame.empleadopagorubroSessionBean.setEsGuardarRelacionado(true);
				//this.jInternalFrameDetalleFormRubroEmplea.empleadopagorubroBeanSwingJInternalFrame.getContentPane().setVisible(true);
			}

			if(this.jInternalFrameDetalleFormRubroEmplea.historialpagomesnomiBeanSwingJInternalFrame!=null) {
				this.jInternalFrameDetalleFormRubroEmplea.historialpagomesnomiBeanSwingJInternalFrame.historialpagomesnomiSessionBean.setEsGuardarRelacionado(true);
				//this.jInternalFrameDetalleFormRubroEmplea.historialpagomesnomiBeanSwingJInternalFrame.getContentPane().setVisible(true);
			}

			if(this.jInternalFrameDetalleFormRubroEmplea.rubroempleadoBeanSwingJInternalFrame!=null) {
				this.jInternalFrameDetalleFormRubroEmplea.rubroempleadoBeanSwingJInternalFrame.rubroempleadoSessionBean.setEsGuardarRelacionado(true);
				//this.jInternalFrameDetalleFormRubroEmplea.rubroempleadoBeanSwingJInternalFrame.getContentPane().setVisible(true);
			}

			if(this.jInternalFrameDetalleFormRubroEmplea.valorrubrovariableBeanSwingJInternalFrame!=null) {
				this.jInternalFrameDetalleFormRubroEmplea.valorrubrovariableBeanSwingJInternalFrame.valorrubrovariableSessionBean.setEsGuardarRelacionado(true);
				//this.jInternalFrameDetalleFormRubroEmplea.valorrubrovariableBeanSwingJInternalFrame.getContentPane().setVisible(true);
			}

			if(this.jInternalFrameDetalleFormRubroEmplea.tipoprestamoBeanSwingJInternalFrame!=null) {
				this.jInternalFrameDetalleFormRubroEmplea.tipoprestamoBeanSwingJInternalFrame.tipoprestamoSessionBean.setEsGuardarRelacionado(true);
				//this.jInternalFrameDetalleFormRubroEmplea.tipoprestamoBeanSwingJInternalFrame.getContentPane().setVisible(true);
			}

			if(this.jInternalFrameDetalleFormRubroEmplea.rubroempleacuentacontableBeanSwingJInternalFrame!=null) {
				this.jInternalFrameDetalleFormRubroEmplea.rubroempleacuentacontableBeanSwingJInternalFrame.rubroempleacuentacontableSessionBean.setEsGuardarRelacionado(true);
				//this.jInternalFrameDetalleFormRubroEmplea.rubroempleacuentacontableBeanSwingJInternalFrame.getContentPane().setVisible(true);
			}		
		} else {
			//this.rubroempleaSessionBean.setConGuardarRelaciones(false);			
			this.rubroempleaSessionBean.setEstaModoGuardarRelaciones(false);						
			this.jInternalFrameDetalleFormRubroEmplea.jTabbedPaneRelacionesRubroEmplea.setVisible(false);
			
			

			if(this.jInternalFrameDetalleFormRubroEmplea.historialpagonomiBeanSwingJInternalFrame!=null) {
				this.jInternalFrameDetalleFormRubroEmplea.historialpagonomiBeanSwingJInternalFrame.historialpagonomiSessionBean.setEsGuardarRelacionado(false);
				//this.jInternalFrameDetalleFormRubroEmplea.historialpagonomiBeanSwingJInternalFrame.getContentPane().setVisible(false);
			}

			if(this.jInternalFrameDetalleFormRubroEmplea.rubroestructuraBeanSwingJInternalFrame!=null) {
				this.jInternalFrameDetalleFormRubroEmplea.rubroestructuraBeanSwingJInternalFrame.rubroestructuraSessionBean.setEsGuardarRelacionado(false);
				//this.jInternalFrameDetalleFormRubroEmplea.rubroestructuraBeanSwingJInternalFrame.getContentPane().setVisible(false);
			}

			if(this.jInternalFrameDetalleFormRubroEmplea.defiprovisionempleadoBeanSwingJInternalFrame!=null) {
				this.jInternalFrameDetalleFormRubroEmplea.defiprovisionempleadoBeanSwingJInternalFrame.defiprovisionempleadoSessionBean.setEsGuardarRelacionado(false);
				//this.jInternalFrameDetalleFormRubroEmplea.defiprovisionempleadoBeanSwingJInternalFrame.getContentPane().setVisible(false);
			}

			if(this.jInternalFrameDetalleFormRubroEmplea.empleadopagorubroBeanSwingJInternalFrame!=null) {
				this.jInternalFrameDetalleFormRubroEmplea.empleadopagorubroBeanSwingJInternalFrame.empleadopagorubroSessionBean.setEsGuardarRelacionado(false);
				//this.jInternalFrameDetalleFormRubroEmplea.empleadopagorubroBeanSwingJInternalFrame.getContentPane().setVisible(false);
			}

			if(this.jInternalFrameDetalleFormRubroEmplea.historialpagomesnomiBeanSwingJInternalFrame!=null) {
				this.jInternalFrameDetalleFormRubroEmplea.historialpagomesnomiBeanSwingJInternalFrame.historialpagomesnomiSessionBean.setEsGuardarRelacionado(false);
				//this.jInternalFrameDetalleFormRubroEmplea.historialpagomesnomiBeanSwingJInternalFrame.getContentPane().setVisible(false);
			}

			if(this.jInternalFrameDetalleFormRubroEmplea.rubroempleadoBeanSwingJInternalFrame!=null) {
				this.jInternalFrameDetalleFormRubroEmplea.rubroempleadoBeanSwingJInternalFrame.rubroempleadoSessionBean.setEsGuardarRelacionado(false);
				//this.jInternalFrameDetalleFormRubroEmplea.rubroempleadoBeanSwingJInternalFrame.getContentPane().setVisible(false);
			}

			if(this.jInternalFrameDetalleFormRubroEmplea.valorrubrovariableBeanSwingJInternalFrame!=null) {
				this.jInternalFrameDetalleFormRubroEmplea.valorrubrovariableBeanSwingJInternalFrame.valorrubrovariableSessionBean.setEsGuardarRelacionado(false);
				//this.jInternalFrameDetalleFormRubroEmplea.valorrubrovariableBeanSwingJInternalFrame.getContentPane().setVisible(false);
			}

			if(this.jInternalFrameDetalleFormRubroEmplea.tipoprestamoBeanSwingJInternalFrame!=null) {
				this.jInternalFrameDetalleFormRubroEmplea.tipoprestamoBeanSwingJInternalFrame.tipoprestamoSessionBean.setEsGuardarRelacionado(false);
				//this.jInternalFrameDetalleFormRubroEmplea.tipoprestamoBeanSwingJInternalFrame.getContentPane().setVisible(false);
			}

			if(this.jInternalFrameDetalleFormRubroEmplea.rubroempleacuentacontableBeanSwingJInternalFrame!=null) {
				this.jInternalFrameDetalleFormRubroEmplea.rubroempleacuentacontableBeanSwingJInternalFrame.rubroempleacuentacontableSessionBean.setEsGuardarRelacionado(false);
				//this.jInternalFrameDetalleFormRubroEmplea.rubroempleacuentacontableBeanSwingJInternalFrame.getContentPane().setVisible(false);
			}
		}
	};
	
	public int getIndiceNuevoRubroEmplea() throws Exception {
		int iIndice=0;
		Boolean existe=false;
		
		//ARCHITECTURE
		if(Constantes.ISUSAEJBLOGICLAYER) {
			for(RubroEmplea rubroempleaAux:this.rubroempleaLogic.getRubroEmpleas()) {
				if(rubroempleaAux.getId().equals(this.iIdNuevoRubroEmplea)) {
					existe=true;
					break;
				}
				
				iIndice++;
			}
		} else if(Constantes.ISUSAEJBREMOTE || Constantes.ISUSAEJBHOME) {
			for(RubroEmplea rubroempleaAux:this.rubroempleas) {
				if(rubroempleaAux.getId().equals(this.iIdNuevoRubroEmplea)) {
					existe=true;
					break;
				}
				
				iIndice++;
			}
		}
		//ARCHITECTURE
		
		if(!existe) {
			//SI NO EXISTE TOMA LA ULTIMA FILA
			iIndice=iIndice-1;
		}
		
		return iIndice;
	}
	
	public int getIndiceActualRubroEmplea(RubroEmplea rubroemplea,Integer iIndiceActual) throws Exception {
		Integer iIndice=0;
		Boolean existe=false;
		
		//ARCHITECTURE
		if(Constantes.ISUSAEJBLOGICLAYER) {
			for(RubroEmplea rubroempleaAux:this.rubroempleaLogic.getRubroEmpleas()) {
				if(rubroempleaAux.getId().equals(rubroemplea.getId())) {
					existe=true;
					break;
				}
				
				iIndice++;
			}
		} else if(Constantes.ISUSAEJBREMOTE || Constantes.ISUSAEJBHOME) {
			for(RubroEmplea rubroempleaAux:this.rubroempleas) {
				if(rubroempleaAux.getId().equals(rubroemplea.getId())) {
					existe=true;
					break;
				}
				
				iIndice++;
			}
		}
		//ARCHITECTURE
		
		if(!existe) {
			//SI NO EXISTE TOMA LA ULTIMA FILA
			iIndice=iIndiceActual;
		}
		
		return iIndice;
	}
	
	public void setCamposBaseDesdeOriginalRubroEmplea(RubroEmplea rubroempleaOriginal) throws Exception {
		Boolean existe=false;
		
		//ARCHITECTURE
		if(Constantes.ISUSAEJBLOGICLAYER) {
			for(RubroEmplea rubroempleaAux:this.rubroempleaLogic.getRubroEmpleas()) {
				if(rubroempleaAux.getRubroEmpleaOriginal().getId().equals(rubroempleaOriginal.getId())) {
					existe=true;
					rubroempleaOriginal.setId(rubroempleaAux.getId());
					rubroempleaOriginal.setVersionRow(rubroempleaAux.getVersionRow());
					break;
				}
				
			}
		} else if(Constantes.ISUSAEJBREMOTE || Constantes.ISUSAEJBHOME) {
			for(RubroEmplea rubroempleaAux:this.rubroempleas) {
				if(rubroempleaAux.getRubroEmpleaOriginal().getId().equals(rubroempleaOriginal.getId())) {
					existe=true;
					rubroempleaOriginal.setId(rubroempleaAux.getId());
					rubroempleaOriginal.setVersionRow(rubroempleaAux.getVersionRow());
					break;
				}				
			}
		}
		//ARCHITECTURE
		
		if(!existe) {
			//SI NO EXISTE TOMA LA ULTIMA FILA
		}
	}
	
	public void cancelarNuevosRubroEmplea(Boolean esParaCancelar) throws Exception {
		rubroempleasAux=new ArrayList<RubroEmplea>();
		rubroempleaAux=new RubroEmplea();
		
		if(!this.rubroempleaSessionBean.getEsGuardarRelacionado()) {
			if(Constantes.ISUSAEJBLOGICLAYER) {
				for(RubroEmplea rubroempleaAux:this.rubroempleaLogic.getRubroEmpleas()) {
					if(rubroempleaAux.getId()<0) {
						rubroempleasAux.add(rubroempleaAux);
					}		
				}
				this.iIdNuevoRubroEmplea=0L;
				this.rubroempleaLogic.getRubroEmpleas().removeAll(rubroempleasAux);
					
			} else if(Constantes.ISUSAEJBREMOTE||Constantes.ISUSAEJBHOME) {
				for(RubroEmplea rubroempleaAux:this.rubroempleas) {
					if(rubroempleaAux.getId()<0) {
						rubroempleasAux.add(rubroempleaAux);
					}		
				}
				this.iIdNuevoRubroEmplea=0L;
				this.rubroempleas.removeAll(rubroempleasAux);
			}	
		} else {			
			if(Constantes.ISUSAEJBLOGICLAYER) {
				if(esParaCancelar && this.isEsNuevoRubroEmplea 
					&& this.rubroempleaLogic.getRubroEmpleas().size()>0
					) {
					rubroempleaAux=this.rubroempleaLogic.getRubroEmpleas().get(this.rubroempleaLogic.getRubroEmpleas().size() - 1);
				
					if(rubroempleaAux.getId()<0) {
						this.rubroempleaLogic.getRubroEmpleas().remove(rubroempleaAux);
					}
				}
			} else if(Constantes.ISUSAEJBREMOTE||Constantes.ISUSAEJBHOME) {
				if(esParaCancelar && this.isEsNuevoRubroEmplea && this.rubroempleas.size()>0) {
					rubroempleaAux=this.rubroempleas.get(this.rubroempleas.size() - 1);
				
					if(rubroempleaAux.getId()<0) {
						this.rubroempleas.remove(rubroempleaAux);
					}
				}
			}	
		}
	}
	
	public void cancelarNuevoRubroEmplea(Boolean esParaCancelar) throws Exception {
		if(Constantes.ISUSAEJBLOGICLAYER) {
			if(rubroemplea.getId()<0) {
				this.rubroempleaLogic.getRubroEmpleas().remove(this.rubroemplea);
			}					
		} else if(Constantes.ISUSAEJBREMOTE||Constantes.ISUSAEJBHOME) {
			if(rubroemplea.getId()<0) {
				this.rubroempleas.remove(this.rubroemplea);
			}
		}			
	}
	
	public void setEstadosInicialesRubroEmplea(List<RubroEmplea> rubroempleasAux) throws Exception {
		RubroEmpleaConstantesFunciones.setEstadosInicialesRubroEmplea(rubroempleasAux);
	}
	
	public void setEstadosInicialesRubroEmplea(RubroEmplea rubroempleaAux) throws Exception {
		RubroEmpleaConstantesFunciones.setEstadosInicialesRubroEmplea(rubroempleaAux);		
	}
	
	public void nuevo() throws Exception {
		try	{
			//ESTA VALIDADO EN FUNCION ACTUALIZAR
			//if(this.validarRubroEmpleaActual()) {
				this.ejecutarMantenimiento(MaintenanceType.NUEVO);
				
				this.actualizarEstadoCeldasBotonesRubroEmplea("n", isGuardarCambiosEnLote, isEsMantenimientoRelacionado);
				
			//}
		} catch(Exception e) {
			throw e;
			//FuncionesSwing.manageException(this, e,logger,RubroEmpleaConstantesFunciones.CLASSNAME);
		}
	}
	
	public void actualizar() throws Exception {
		try	{
			if(this.validarRubroEmpleaActual()) {
				if(!this.isEsNuevoRubroEmplea) {
					this.ejecutarMantenimiento(MaintenanceType.ACTUALIZAR);
					
					this.actualizarEstadoCeldasBotonesRubroEmplea("n", isGuardarCambiosEnLote, isEsMantenimientoRelacionado);
					
				} else {					
					this.nuevo();
					this.isEsNuevoRubroEmplea=false;
				}
				
				//SE CANCELA AL FINAL DEL PROCESO JBUTTONACTUALIZAR
				//this.cancelar(false);
			}		
		} catch(Exception e) {
			throw e;
			//FuncionesSwing.manageException(this, e,logger,RubroEmpleaConstantesFunciones.CLASSNAME);
		}
	}
	
	public void eliminar() throws Exception {
		try	{	
			if(this.validarRubroEmpleaActual()) {
				if(JOptionPane.showConfirmDialog(this, "ESTA SEGURO DE ELIMINAR EL/LA Rubro Emplea ?", "MANTENIMIENTO DE Rubro Emplea", JOptionPane.OK_CANCEL_OPTION) == 0) {
					this.ejecutarMantenimiento(MaintenanceType.ELIMINAR);			
					this.actualizarEstadoCeldasBotonesRubroEmplea("n", isGuardarCambiosEnLote, isEsMantenimientoRelacionado);			
				}
			
			}
		} catch(Exception e) {
			throw e;
			//FuncionesSwing.manageException(this, e,logger,RubroEmpleaConstantesFunciones.CLASSNAME);
		}
	}
	
	public void guardarCambios() throws Exception {
		try	{
			this.ejecutarMantenimiento(MaintenanceType.GUARDARCAMBIOS);
			
		} catch(Exception e) {
			FuncionesSwing.manageException(this, e,logger,RubroEmpleaConstantesFunciones.CLASSNAME);
		}
	}
	
	public void seleccionarAsignar(RubroEmplea rubroemplea) throws Exception {
		RubroEmpleaConstantesFunciones.seleccionarAsignar(this.rubroemplea,rubroemplea);
	}
	
	public void seleccionar() throws Exception {
		try	{
			//ACTUALIZO EL PERMISO ACTUALIZAR CON EL PERMISO ACTUALIZAR ORIGINAL ESTE PERMISO SE UTILIZA PARA EL NUEVO TAMBIEN
			this.isPermisoActualizarRubroEmplea=this.isPermisoActualizarOriginalRubroEmplea;
			
			
			this.seleccionarAsignar(rubroemplea);
			
			
			
			this.arrDatoGeneral= new  ArrayList<DatoGeneral>();
			this.arrDatoGeneralNo= new  ArrayList<String>();
			
			RubroEmpleaConstantesFunciones.quitarEspaciosRubroEmplea(this.rubroemplea,this.arrDatoGeneral);
			
			
			this.actualizarEstadoCeldasBotonesRubroEmplea("ae", isGuardarCambiosEnLote, isEsMantenimientoRelacionado);
			
						
		} catch(Exception e) {
			FuncionesSwing.manageException(this, e,logger,RubroEmpleaConstantesFunciones.CLASSNAME);
		}
	}
	
	public void seleccionarBusqueda(Long id) throws Exception {
		try	{
			this.rubroempleaSessionBean.setsFuncionBusquedaRapida(this.rubroempleaSessionBean.getsFuncionBusquedaRapida().replace("TO_REPLACE", id.toString()));
			
		} catch(Exception e) {
			FuncionesSwing.manageException(this, e,logger,RubroEmpleaConstantesFunciones.CLASSNAME);
		}
	}
	
	
	
	public void cancelar() throws Exception {
		this.cancelar(true);
	}
	
	public void cancelar(Boolean esParaCancelar) throws Exception {
		try {
														
			
			//SE UTILIZA COLUMNA ELIMINAR EN TABLA
			if(this.isEsNuevoRubroEmplea) {
				//NO CANCELA TODOS NUEVOS POR FUNCIONALIDAD GUARDAR CAMBIOS
				//this.cancelarNuevosRubroEmplea(esParaCancelar);				
				this.cancelarNuevoRubroEmplea(esParaCancelar);								
			}
			
			this.rubroemplea=new RubroEmplea();
			
			this.inicializarRubroEmplea();
			
			this.actualizarEstadoCeldasBotonesRubroEmplea("n", isGuardarCambiosEnLote, isEsMantenimientoRelacionado);			
		
		} catch(Exception e) {
			FuncionesSwing.manageException(this, e,logger,RubroEmpleaConstantesFunciones.CLASSNAME);
		}
	}
	
	public void inicializarRubroEmplea() throws Exception {
		try {
			RubroEmpleaConstantesFunciones.inicializarRubroEmplea(this.rubroemplea);
			
			} catch(Exception e) {
			throw e;
		}
	}
	
	public void anteriores()throws Exception {
		try	{
			//this.iNumeroPaginacionPagina=this.iNumeroPaginacionPagina-this.iNumeroPaginacion;
			
			if(this.iNumeroPaginacionPagina-this.iNumeroPaginacion<this.iNumeroPaginacion) {
				this.iNumeroPaginacionPagina=0;		
			} else {
				this.iNumeroPaginacionPagina=this.iNumeroPaginacionPagina-this.iNumeroPaginacion;
			}
			
			this.procesarBusqueda(this.sAccionBusqueda);
			
		} catch(Exception e) {
			FuncionesSwing.manageException(this, e,logger,RubroEmpleaConstantesFunciones.CLASSNAME);
		}
	}
	
	public void siguientes()throws Exception {
		try	{			
			if(this.rubroempleaLogic.getRubroEmpleas().size()>0) {
					
				this.iNumeroPaginacionPagina=this.iNumeroPaginacionPagina+this.iNumeroPaginacion;
			}
				
			this.procesarBusqueda(this.sAccionBusqueda);
			
		} catch(Exception e) {
			FuncionesSwing.manageException(this, e,logger,RubroEmpleaConstantesFunciones.CLASSNAME);
		}
	}		
	
	public void generarReporteRubroEmpleas(String sAccionBusqueda,List<RubroEmplea> rubroempleasParaReportes) throws Exception {
		//HttpSession httpSession = httpServletRequest.getSession();
		Long iIdUsuarioSesion=0L;	
		
		
		if(usuarioActual==null) {
			this.usuarioActual=new Usuario();
		}
		
		iIdUsuarioSesion=usuarioActual.getId();
		
		String sPathReportes="";
		
		InputStream reportFile=null;
		InputStream imageFile=null;
			
		imageFile=AuxiliarImagenes.class.getResourceAsStream("LogoReporte.jpg");			
				
		
		String sPathReporteFinal="";
		
		if(!esReporteAccionProceso) {
			if(!this.sTipoReporte.equals("RELACIONES")) {//!isEsReporteRelaciones
				if(!this.esReporteDinamico) {
					sPathReporteFinal="RubroEmplea"+this.sTipoReporteExtra+"Design.jasper";
					reportFile = AuxiliarReportes.class.getResourceAsStream(sPathReporteFinal);	
				} else {
					sPathReporteFinal=this.sPathReporteDinamico;
					reportFile = new FileInputStream(sPathReporteFinal);
				}
			} else {
				sPathReporteFinal="RubroEmpleaMasterRelaciones"+this.sTipoReporteExtra+"Design.jasper";
				reportFile = AuxiliarReportes.class.getResourceAsStream(sPathReporteFinal);
				//sPathReportes=reportFile.getPath().replace("RubroEmpleaMasterRelacionesDesign.jasper", "");
			}
		} else {
				sPathReporteFinal="RubroEmplea"+this.sTipoReporteExtra+"Design.jasper";
				reportFile = AuxiliarReportes.class.getResourceAsStream(sPathReporteFinal);	
		}
		
		if(reportFile==null) {
			throw new JRRuntimeException(sPathReporteFinal+" no existe");
		}
		
		String sUsuario="";
		
		if(usuarioActual!=null) {
			sUsuario=usuarioActual.getuser_name();
		}
		
		Map<String, Object> parameters = new HashMap<String, Object>();
		parameters.put("usuario", sUsuario);
		
		parameters.put("titulo", Funciones.GetTituloSistemaReporte(this.parametroGeneralSg,this.moduloActual,this.usuarioActual));
		parameters.put("subtitulo", "Reporte De  Rubro Empleas");		
		parameters.put("busquedapor", RubroEmpleaConstantesFunciones.getNombreIndice(sAccionBusqueda)+sDetalleReporte);
		
		
		if(this.sTipoReporte.equals("RELACIONES")) {//isEsReporteRelaciones
			parameters.put("SUBREPORT_DIR", sPathReportes);
		}
		
		parameters.put("con_grafico", this.conGraficoReporte);
		
		JasperReport jasperReport = (JasperReport)JRLoader.loadObject(reportFile);
				
		this.cargarDatosCliente();
		
		ArrayList<Classe> classes=new ArrayList<Classe>();		
		
		if(this.sTipoReporte.equals("RELACIONES")) {//isEsReporteRelaciones
			
			classes.add(new Classe(HistorialPagoNomi.class));
			classes.add(new Classe(RubroEstructura.class));
			classes.add(new Classe(DefiProvisionEmpleado.class));
			classes.add(new Classe(EmpleadoPagoRubro.class));
			classes.add(new Classe(HistorialPagoMesNomi.class));
			classes.add(new Classe(RubroEmpleado.class));
			classes.add(new Classe(ValorRubroVariable.class));
			classes.add(new Classe(TipoPrestamo.class));
			classes.add(new Classe(RubroEmpleaCuentaContable.class));
			
			//ARCHITECTURE
			if(Constantes.ISUSAEJBLOGICLAYER) {		
				try	{
					
					RubroEmpleaLogic rubroempleaLogicAuxiliar=new RubroEmpleaLogic();
					rubroempleaLogicAuxiliar.setDatosCliente(rubroempleaLogic.getDatosCliente());				
					rubroempleaLogicAuxiliar.setRubroEmpleas(rubroempleasParaReportes);
					
					rubroempleaLogicAuxiliar.cargarRelacionesLoteForeignKeyRubroEmpleaWithConnection(); //deepLoadsWithConnection(false, DeepLoadType.INCLUDE, classes, "");
					
					rubroempleasParaReportes=rubroempleaLogicAuxiliar.getRubroEmpleas();
					
					//rubroempleaLogic.getNewConnexionToDeep();
					
					//for (RubroEmplea rubroemplea:rubroempleasParaReportes) {
					//	rubroempleaLogic.deepLoad(rubroemplea, false, DeepLoadType.INCLUDE, classes);
					//}						
					//rubroempleaLogic.commitNewConnexionToDeep();
					
						
				} catch(Exception e) {
					throw e;
					
				} finally {
					//rubroempleaLogic.closeNewConnexionToDeep();
				}
			} else if(Constantes.ISUSAEJBREMOTE) {
			} else if(Constantes.ISUSAEJBHOME) {
			}
			//ARCHITECTURE		
			
		
			
			

			InputStream reportFileHistorialPagoNomi = AuxiliarReportes.class.getResourceAsStream("HistorialPagoNomiDetalleRelacionesDesign.jasper");
			parameters.put("subreport_historialpagonomi", reportFileHistorialPagoNomi);

			InputStream reportFileRubroEstructura = AuxiliarReportes.class.getResourceAsStream("RubroEstructuraDetalleRelacionesDesign.jasper");
			parameters.put("subreport_rubroestructura", reportFileRubroEstructura);

			InputStream reportFileDefiProvisionEmpleado = AuxiliarReportes.class.getResourceAsStream("DefiProvisionEmpleadoDetalleRelacionesDesign.jasper");
			parameters.put("subreport_defiprovisionempleado", reportFileDefiProvisionEmpleado);

			InputStream reportFileEmpleadoPagoRubro = AuxiliarReportes.class.getResourceAsStream("EmpleadoPagoRubroDetalleRelacionesDesign.jasper");
			parameters.put("subreport_empleadopagorubro", reportFileEmpleadoPagoRubro);

			InputStream reportFileHistorialPagoMesNomi = AuxiliarReportes.class.getResourceAsStream("HistorialPagoMesNomiDetalleRelacionesDesign.jasper");
			parameters.put("subreport_historialpagomesnomi", reportFileHistorialPagoMesNomi);

			InputStream reportFileRubroEmpleado = AuxiliarReportes.class.getResourceAsStream("RubroEmpleadoDetalleRelacionesDesign.jasper");
			parameters.put("subreport_rubroempleado", reportFileRubroEmpleado);

			InputStream reportFileValorRubroVariable = AuxiliarReportes.class.getResourceAsStream("ValorRubroVariableDetalleRelacionesDesign.jasper");
			parameters.put("subreport_valorrubrovariable", reportFileValorRubroVariable);

			InputStream reportFileTipoPrestamo = AuxiliarReportes.class.getResourceAsStream("TipoPrestamoDetalleRelacionesDesign.jasper");
			parameters.put("subreport_tipoprestamo", reportFileTipoPrestamo);

			InputStream reportFileRubroEmpleaCuentaContable = AuxiliarReportes.class.getResourceAsStream("RubroEmpleaCuentaContableDetalleRelacionesDesign.jasper");
			parameters.put("subreport_rubroempleacuentacontable", reportFileRubroEmpleaCuentaContable);
		} else {
			//FK DEBERIA TRAERSE DE ANTEMANO
			
		}
								
		
		//CLASSES PARA REPORTES OBJETOS RELACIONADOS
		if(!this.sTipoReporte.equals("RELACIONES")) {//!isEsReporteRelaciones
			classes=new ArrayList<Classe>();
		}
		
		JRBeanArrayDataSource jrbeanArrayDataSourceRubroEmplea=null;
		
		if(this.sTipoReporteExtra!=null && !this.sTipoReporteExtra.equals("")) {
			RubroEmpleaConstantesFunciones.S_TIPOREPORTE_EXTRA=this.sTipoReporteExtra;
		} else {
			RubroEmpleaConstantesFunciones.S_TIPOREPORTE_EXTRA="";
		}
		
		jrbeanArrayDataSourceRubroEmplea=new JRBeanArrayDataSource(RubroEmpleaJInternalFrame.TraerRubroEmpleaBeans(rubroempleasParaReportes,classes).toArray());
		
		jasperPrint = JasperFillManager.fillReport(jasperReport,parameters,jrbeanArrayDataSourceRubroEmplea);
				
		
		String sPathDest=Constantes.SUNIDAD_ARCHIVOS+":/"+Constantes.SCONTEXTSERVER+"/"+RubroEmpleaConstantesFunciones.SCHEMA+"/reportes";
		
		File filePathDest = new File(sPathDest);
		
		if(!filePathDest.exists()) {
			filePathDest.mkdirs();				
		}
				
		String sDestFileName=sPathDest+"/"+RubroEmpleaConstantesFunciones.CLASSNAME;
				
		if(this.sTipoArchivoReporte=="VISUALIZAR") {
			JasperViewer jasperViewer = new JasperViewer(jasperPrint,false) ;
			jasperViewer.setVisible(true) ; 

		} else if(this.sTipoArchivoReporte=="HTML"||this.sTipoArchivoReporte=="PDF"||this.sTipoArchivoReporte=="XML") {	
			//JasperFillManager.fillReportToFile(reportFile.getAbsolutePath(),parameters, new JRBeanArrayDataSource(RubroEmpleaBean.TraerRubroEmpleaBeans(rubroempleasParaReportes).toArray()));
							
			if(this.sTipoArchivoReporte=="HTML") {
				sDestFileName+=".html";
				JasperExportManager.exportReportToHtmlFile(jasperPrint,sDestFileName);
					
			} else if(this.sTipoArchivoReporte=="PDF") {
				sDestFileName+=".pdf";
				JasperExportManager.exportReportToPdfFile(jasperPrint,sDestFileName);
			} else {
				sDestFileName+=".xml";
				JasperExportManager.exportReportToXmlFile(jasperPrint,sDestFileName, false);
			}	
			
		} else if(this.sTipoArchivoReporte=="WORD"||this.sTipoArchivoReporte=="EXCEL") {
				
			if(this.sTipoArchivoReporte=="WORD") {
				sDestFileName+=".rtf";
					
				JRRtfExporter exporter = new JRRtfExporter();
		
				exporter.setParameter(JRExporterParameter.JASPER_PRINT, jasperPrint);
				exporter.setParameter(JRExporterParameter.OUTPUT_FILE_NAME, sDestFileName);
		
				exporter.exportReport();
				
			} else	{
				sDestFileName+=".xls";
					
				JRXlsExporter exporterXls = new JRXlsExporter();
		
				exporterXls.setParameter(JRExporterParameter.JASPER_PRINT, jasperPrint);
				exporterXls.setParameter(JRExporterParameter.OUTPUT_FILE_NAME, sDestFileName);
				exporterXls.setParameter(JRXlsExporterParameter.IS_ONE_PAGE_PER_SHEET, Boolean.TRUE);
		
				exporterXls.exportReport();
			}
			
		} else if(this.sTipoArchivoReporte=="EXCEL2"||this.sTipoArchivoReporte=="EXCEL2_2") {
			//sDestFileName+=".xlsx";
			
			if(this.sTipoReporte.equals("NORMAL")) {
				this.generarExcelReporteRubroEmpleas(sAccionBusqueda,sTipoArchivoReporte,rubroempleasParaReportes);
			
			} else if(this.sTipoReporte.equals("FORMULARIO")){
				this.generarExcelReporteVerticalRubroEmpleas(sAccionBusqueda,sTipoArchivoReporte,rubroempleasParaReportes,false);
			
			} else if(this.sTipoReporte.equals("DINAMICO")){
				
				if(this.sTipoReporteDinamico.equals("NORMAL")) {
					
					this.jButtonGenerarExcelReporteDinamicoRubroEmpleaActionPerformed(null);
					//this.generarExcelReporteRubroEmpleas(sAccionBusqueda,sTipoArchivoReporte,rubroempleasParaReportes);
					
				
				} else if(this.sTipoReporteDinamico.equals("FORMULARIO")){
					this.generarExcelReporteVerticalRubroEmpleas(sAccionBusqueda,sTipoArchivoReporte,rubroempleasParaReportes,true);
				
				} else if(this.sTipoReporteDinamico.equals("RELACIONES")){
					this.generarExcelReporteRelacionesRubroEmpleas(sAccionBusqueda,sTipoArchivoReporte,rubroempleasParaReportes,true);
				}
				
			} else if(this.sTipoReporte.equals("RELACIONES")){
				this.generarExcelReporteRelacionesRubroEmpleas(sAccionBusqueda,sTipoArchivoReporte,rubroempleasParaReportes,false);
			}
		}
		
		if(this.sTipoArchivoReporte=="HTML"||this.sTipoArchivoReporte=="PDF"||this.sTipoArchivoReporte=="XML"||this.sTipoArchivoReporte=="WORD"||this.sTipoArchivoReporte=="EXCEL") {				
			JOptionPane.showMessageDialog(this,"REPORTE "+sDestFileName+" GENERADO SATISFACTORIAMENTE","REPORTES ",JOptionPane.INFORMATION_MESSAGE);
		}
	}
	
	public void generarExcelReporteRubroEmpleas(String sAccionBusqueda,String sTipoArchivoReporte,List<RubroEmplea> rubroempleasParaReportes) throws Exception {
	 	Workbook workbook = null;
		String sPath=this.parametroGeneralUsuario.getpath_exportar()+"rubroemplea";
		
		if(sTipoArchivoReporte=="EXCEL2") {
			workbook = new HSSFWorkbook();
			sPath+=".xls";
		
		} else if(sTipoArchivoReporte=="EXCEL2_2") {
			workbook = new XSSFWorkbook();
			sPath+=".xlsx";			
		}
		
		
		
		Sheet sheet = workbook.createSheet("RubroEmpleas");
         
        int iRow = 0;
		int iCell = 0;
		Row row =null;
		Cell cell=null;
		
		row = sheet.createRow(iRow++);
		
		this.generarExcelReporteHeaderRubroEmplea("NORMAL",row,workbook);
		
		CellStyle cellStyleData = Funciones2.getStyleTitulo(workbook,"ZEBRA");
		CellStyle cellStyleDataAux=null;
		
		int i=0;
		
      	for(RubroEmplea rubroemplea : rubroempleasParaReportes) {            
			row = sheet.createRow(iRow++);
			iCell = 0;
			
			cellStyleDataAux=null;
			
			if(i%2==0) {
				cellStyleDataAux=cellStyleData;
			}
			
			RubroEmpleaConstantesFunciones.generarExcelReporteDataRubroEmplea("NORMAL",row,workbook,rubroemplea,cellStyleDataAux);
		
			
			/*
            Cell cell0 = row.createCell(0);
            cell0.setCellValue(country.getName());
            Cell cell1 = row.createCell(1);
            cell1.setCellValue(country.getShortCode());
			*/
			
			i++;
        }
        
		
        FileOutputStream fileOutputStream = new FileOutputStream(sPath);
		
        workbook.write(fileOutputStream);
		
        fileOutputStream.close();
		
		Constantes2.S_PATH_ULTIMO_ARCHIVO=sPath;
			
		if(this.parametroGeneralUsuario.getcon_mensaje_confirmacion() && !this.rubroempleaSessionBean.getEsGuardarRelacionado()) {//Constantes.ISMOSTRARMENSAJESMANTENIMIENTO && 
			JOptionPane.showMessageDialog(this,"EXPORTADO CORRECTAMENTE:"+sPath,"MANTENIMIENTO DE Rubro Emplea",JOptionPane.INFORMATION_MESSAGE);
		}
	}
	
	public void generarExcelReporteHeaderRubroEmplea(String sTipo,Row row,Workbook workbook) {
		
		RubroEmpleaConstantesFunciones.generarExcelReporteHeaderRubroEmplea(sTipo,row,workbook);
		
		/*
		Cell cell=null;
		int iCell=0;
		
		CellStyle cellStyle = workbook.createCellStyle();
		cellStyle.setFillBackgroundColor(IndexedColors.GREEN.getIndex());
		cellStyle.setFillPattern(CellStyle.ALIGN_FILL);
		*/
		
	}
	
	public void generarExcelReporteVerticalRubroEmpleas(String sAccionBusqueda,String sTipoArchivoReporte,List<RubroEmplea> rubroempleasParaReportes,Boolean paraDinamico) throws Exception {
	 	Workbook workbook = null;
		String sPath=this.parametroGeneralUsuario.getpath_exportar()+"rubroemplea_vertical";
		
		if(sTipoArchivoReporte=="EXCEL2") {
			workbook = new HSSFWorkbook();
			sPath+=".xls";
		
		} else if(sTipoArchivoReporte=="EXCEL2_2") {
			workbook = new XSSFWorkbook();
			sPath+=".xlsx";			
		}
		
		
		
		Sheet sheet = workbook.createSheet("RubroEmpleas");
         
        int iRow = 0;
		int iRowLast = 0;
		int iCell = 0;
		Row row =null;
		Cell cell=null;
		
		row = sheet.createRow(iRow++);
		
		CellStyle cellStyle = Funciones2.getStyleTitulo(workbook,"ZEBRA");;
		
		CellStyle cellStyleTitulo = Funciones2.getStyleTitulo(workbook,"PRINCIPAL_VERTICAL");
		
		
		for(RubroEmplea rubroemplea : rubroempleasParaReportes) {
			row = sheet.createRow(iRow++);
			iRowLast=iRow - 1;
			
			cell = row.createCell(0);
			cell.setCellValue(RubroEmpleaConstantesFunciones.getRubroEmpleaDescripcion(rubroemplea));
			cell.setCellStyle(cellStyleTitulo);
			
			sheet.addMergedRegion(new CellRangeAddress(iRowLast,iRowLast,0,2));			
	
			


			if(!paraDinamico || (paraDinamico && this.existeColumnaReporteDinamico(RubroEmpleaConstantesFunciones.LABEL_IDEMPRESA))) {
				row = sheet.createRow(iRow++);

				cell = row.createCell(0);
				cell.setCellValue(RubroEmpleaConstantesFunciones.LABEL_IDEMPRESA);
				cell.setCellStyle(cellStyle);

				cell = row.createCell(1);
				cell.setCellValue(rubroemplea.getempresa_descripcion());


			}


			if(!paraDinamico || (paraDinamico && this.existeColumnaReporteDinamico(RubroEmpleaConstantesFunciones.LABEL_IDTIPOCALCULO))) {
				row = sheet.createRow(iRow++);

				cell = row.createCell(0);
				cell.setCellValue(RubroEmpleaConstantesFunciones.LABEL_IDTIPOCALCULO);
				cell.setCellStyle(cellStyle);

				cell = row.createCell(1);
				cell.setCellValue(rubroemplea.gettipocalculo_descripcion());


			}


			if(!paraDinamico || (paraDinamico && this.existeColumnaReporteDinamico(RubroEmpleaConstantesFunciones.LABEL_IDTIPORUBROEMPLEA))) {
				row = sheet.createRow(iRow++);

				cell = row.createCell(0);
				cell.setCellValue(RubroEmpleaConstantesFunciones.LABEL_IDTIPORUBROEMPLEA);
				cell.setCellStyle(cellStyle);

				cell = row.createCell(1);
				cell.setCellValue(rubroemplea.gettiporubroemplea_descripcion());


			}


			if(!paraDinamico || (paraDinamico && this.existeColumnaReporteDinamico(RubroEmpleaConstantesFunciones.LABEL_IDTIPOGRUPORUBROEMPLEA))) {
				row = sheet.createRow(iRow++);

				cell = row.createCell(0);
				cell.setCellValue(RubroEmpleaConstantesFunciones.LABEL_IDTIPOGRUPORUBROEMPLEA);
				cell.setCellStyle(cellStyle);

				cell = row.createCell(1);
				cell.setCellValue(rubroemplea.gettipogruporubroemplea_descripcion());


			}


			if(!paraDinamico || (paraDinamico && this.existeColumnaReporteDinamico(RubroEmpleaConstantesFunciones.LABEL_CODIGO))) {
				row = sheet.createRow(iRow++);

				cell = row.createCell(0);
				cell.setCellValue(RubroEmpleaConstantesFunciones.LABEL_CODIGO);
				cell.setCellStyle(cellStyle);

				cell = row.createCell(1);
				cell.setCellValue(rubroemplea.getcodigo());


			}


			if(!paraDinamico || (paraDinamico && this.existeColumnaReporteDinamico(RubroEmpleaConstantesFunciones.LABEL_NOMBRE))) {
				row = sheet.createRow(iRow++);

				cell = row.createCell(0);
				cell.setCellValue(RubroEmpleaConstantesFunciones.LABEL_NOMBRE);
				cell.setCellStyle(cellStyle);

				cell = row.createCell(1);
				cell.setCellValue(rubroemplea.getnombre());


			}


			if(!paraDinamico || (paraDinamico && this.existeColumnaReporteDinamico(RubroEmpleaConstantesFunciones.LABEL_FORMULA))) {
				row = sheet.createRow(iRow++);

				cell = row.createCell(0);
				cell.setCellValue(RubroEmpleaConstantesFunciones.LABEL_FORMULA);
				cell.setCellStyle(cellStyle);

				cell = row.createCell(1);
				cell.setCellValue(rubroemplea.getformula());


			}


			if(!paraDinamico || (paraDinamico && this.existeColumnaReporteDinamico(RubroEmpleaConstantesFunciones.LABEL_ALIAS))) {
				row = sheet.createRow(iRow++);

				cell = row.createCell(0);
				cell.setCellValue(RubroEmpleaConstantesFunciones.LABEL_ALIAS);
				cell.setCellStyle(cellStyle);

				cell = row.createCell(1);
				cell.setCellValue(rubroemplea.getalias());


			}


			if(!paraDinamico || (paraDinamico && this.existeColumnaReporteDinamico(RubroEmpleaConstantesFunciones.LABEL_SECUENCIAL))) {
				row = sheet.createRow(iRow++);

				cell = row.createCell(0);
				cell.setCellValue(RubroEmpleaConstantesFunciones.LABEL_SECUENCIAL);
				cell.setCellStyle(cellStyle);

				cell = row.createCell(1);
				cell.setCellValue(rubroemplea.getsecuencial());


			}


			if(!paraDinamico || (paraDinamico && this.existeColumnaReporteDinamico(RubroEmpleaConstantesFunciones.LABEL_PARAROLPAGOS))) {
				row = sheet.createRow(iRow++);

				cell = row.createCell(0);
				cell.setCellValue(RubroEmpleaConstantesFunciones.LABEL_PARAROLPAGOS);
				cell.setCellStyle(cellStyle);

				cell = row.createCell(1);
				cell.setCellValue(Funciones2.getDescripcionBoolean(rubroemplea.getpara_rol_pagos()));


			}


			if(!paraDinamico || (paraDinamico && this.existeColumnaReporteDinamico(RubroEmpleaConstantesFunciones.LABEL_PARASUELDO))) {
				row = sheet.createRow(iRow++);

				cell = row.createCell(0);
				cell.setCellValue(RubroEmpleaConstantesFunciones.LABEL_PARASUELDO);
				cell.setCellStyle(cellStyle);

				cell = row.createCell(1);
				cell.setCellValue(Funciones2.getDescripcionBoolean(rubroemplea.getpara_sueldo()));


			}


			if(!paraDinamico || (paraDinamico && this.existeColumnaReporteDinamico(RubroEmpleaConstantesFunciones.LABEL_PARAVACACIONES))) {
				row = sheet.createRow(iRow++);

				cell = row.createCell(0);
				cell.setCellValue(RubroEmpleaConstantesFunciones.LABEL_PARAVACACIONES);
				cell.setCellStyle(cellStyle);

				cell = row.createCell(1);
				cell.setCellValue(Funciones2.getDescripcionBoolean(rubroemplea.getpara_vacaciones()));


			}


			if(!paraDinamico || (paraDinamico && this.existeColumnaReporteDinamico(RubroEmpleaConstantesFunciones.LABEL_PARAIMPUESTORENTA))) {
				row = sheet.createRow(iRow++);

				cell = row.createCell(0);
				cell.setCellValue(RubroEmpleaConstantesFunciones.LABEL_PARAIMPUESTORENTA);
				cell.setCellStyle(cellStyle);

				cell = row.createCell(1);
				cell.setCellValue(Funciones2.getDescripcionBoolean(rubroemplea.getpara_impuesto_renta()));


			}


			if(!paraDinamico || (paraDinamico && this.existeColumnaReporteDinamico(RubroEmpleaConstantesFunciones.LABEL_PARASEGUROSOCIAL))) {
				row = sheet.createRow(iRow++);

				cell = row.createCell(0);
				cell.setCellValue(RubroEmpleaConstantesFunciones.LABEL_PARASEGUROSOCIAL);
				cell.setCellStyle(cellStyle);

				cell = row.createCell(1);
				cell.setCellValue(Funciones2.getDescripcionBoolean(rubroemplea.getpara_seguro_social()));


			}


			if(!paraDinamico || (paraDinamico && this.existeColumnaReporteDinamico(RubroEmpleaConstantesFunciones.LABEL_PARAPROVISIONES))) {
				row = sheet.createRow(iRow++);

				cell = row.createCell(0);
				cell.setCellValue(RubroEmpleaConstantesFunciones.LABEL_PARAPROVISIONES);
				cell.setCellStyle(cellStyle);

				cell = row.createCell(1);
				cell.setCellValue(Funciones2.getDescripcionBoolean(rubroemplea.getpara_provisiones()));


			}


			if(!paraDinamico || (paraDinamico && this.existeColumnaReporteDinamico(RubroEmpleaConstantesFunciones.LABEL_PARAUTILIDADES))) {
				row = sheet.createRow(iRow++);

				cell = row.createCell(0);
				cell.setCellValue(RubroEmpleaConstantesFunciones.LABEL_PARAUTILIDADES);
				cell.setCellStyle(cellStyle);

				cell = row.createCell(1);
				cell.setCellValue(Funciones2.getDescripcionBoolean(rubroemplea.getpara_utilidades()));


			}


			if(!paraDinamico || (paraDinamico && this.existeColumnaReporteDinamico(RubroEmpleaConstantesFunciones.LABEL_PARARUBROIESS))) {
				row = sheet.createRow(iRow++);

				cell = row.createCell(0);
				cell.setCellValue(RubroEmpleaConstantesFunciones.LABEL_PARARUBROIESS);
				cell.setCellStyle(cellStyle);

				cell = row.createCell(1);
				cell.setCellValue(Funciones2.getDescripcionBoolean(rubroemplea.getpara_rubro_iess()));


			}


			if(!paraDinamico || (paraDinamico && this.existeColumnaReporteDinamico(RubroEmpleaConstantesFunciones.LABEL_ESFONDORESERVA))) {
				row = sheet.createRow(iRow++);

				cell = row.createCell(0);
				cell.setCellValue(RubroEmpleaConstantesFunciones.LABEL_ESFONDORESERVA);
				cell.setCellStyle(cellStyle);

				cell = row.createCell(1);
				cell.setCellValue(Funciones2.getDescripcionBoolean(rubroemplea.getes_fondo_reserva()));


			}


			if(!paraDinamico || (paraDinamico && this.existeColumnaReporteDinamico(RubroEmpleaConstantesFunciones.LABEL_ESDECIMOTERCERO))) {
				row = sheet.createRow(iRow++);

				cell = row.createCell(0);
				cell.setCellValue(RubroEmpleaConstantesFunciones.LABEL_ESDECIMOTERCERO);
				cell.setCellStyle(cellStyle);

				cell = row.createCell(1);
				cell.setCellValue(Funciones2.getDescripcionBoolean(rubroemplea.getes_decimo_tercero()));


			}


			if(!paraDinamico || (paraDinamico && this.existeColumnaReporteDinamico(RubroEmpleaConstantesFunciones.LABEL_ESDECIMOCUARTO))) {
				row = sheet.createRow(iRow++);

				cell = row.createCell(0);
				cell.setCellValue(RubroEmpleaConstantesFunciones.LABEL_ESDECIMOCUARTO);
				cell.setCellStyle(cellStyle);

				cell = row.createCell(1);
				cell.setCellValue(Funciones2.getDescripcionBoolean(rubroemplea.getes_decimo_cuarto()));


			}						
        }
        
		
        FileOutputStream fileOutputStream = new FileOutputStream(sPath);
		
        workbook.write(fileOutputStream);
		
        fileOutputStream.close();
		
		Constantes2.S_PATH_ULTIMO_ARCHIVO=sPath;
			
		if(this.parametroGeneralUsuario.getcon_mensaje_confirmacion() && !this.rubroempleaSessionBean.getEsGuardarRelacionado()) {//Constantes.ISMOSTRARMENSAJESMANTENIMIENTO && 
			JOptionPane.showMessageDialog(this,"EXPORTADO CORRECTAMENTE:"+sPath,"MANTENIMIENTO DE Rubro Emplea",JOptionPane.INFORMATION_MESSAGE);
		}
	}
	
	public void generarExcelReporteRelacionesRubroEmpleas(String sAccionBusqueda,String sTipoArchivoReporte,List<RubroEmplea> rubroempleasParaReportes,Boolean paraDinamico) throws Exception {
		
		ArrayList<Classe> classes=new ArrayList<Classe>();
		List<RubroEmplea> rubroempleasRespaldo=null;
		
		classes=RubroEmpleaConstantesFunciones.getClassesRelationshipsOfRubroEmplea(new ArrayList<Classe>(),DeepLoadType.NONE,false);
					
		this.datosDeep=new DatosDeep();
		
		this.datosDeep.setIsDeep(false);
		this.datosDeep.setDeepLoadType(DeepLoadType.INCLUDE);
		this.datosDeep.setClases(classes);
			
		this.datosCliente.setDatosDeepParametros(false, DeepLoadType.INCLUDE, classes, "");
		this.datosCliente.setIsConDeep(true);	
		this.datosCliente.setIsConExportar(false);
		
						
		this.rubroempleaLogic.setDatosCliente(this.datosCliente);
		this.rubroempleaLogic.setDatosDeep(this.datosDeep);
		this.rubroempleaLogic.setIsConDeep(true);
		
		rubroempleasRespaldo=this.rubroempleaLogic.getRubroEmpleas();
		
		this.rubroempleaLogic.setRubroEmpleas(rubroempleasParaReportes);	
		this.rubroempleaLogic.deepLoadsWithConnection(false, DeepLoadType.INCLUDE, classes,"");
		
		rubroempleasParaReportes=this.rubroempleaLogic.getRubroEmpleas();
		this.rubroempleaLogic.setRubroEmpleas(rubroempleasRespaldo);
		
		
	 	Workbook workbook = null;
		String sPath=this.parametroGeneralUsuario.getpath_exportar()+"rubroemplea_relacion";
		
		if(sTipoArchivoReporte=="EXCEL2") {
			workbook = new HSSFWorkbook();
			sPath+=".xls";
		
		} else if(sTipoArchivoReporte=="EXCEL2_2") {
			workbook = new XSSFWorkbook();
			sPath+=".xlsx";			
		}
		
		
		
		Sheet sheet = workbook.createSheet("RubroEmpleas");
         
        int iRow = 0;
		int iRowLast = 0;
		int iCell = 0;
		Row row =null;
		Cell cell=null;
		
		row = sheet.createRow(iRow++);
		
		this.generarExcelReporteHeaderRubroEmplea("NORMAL",row,workbook);
		
		int i=0;
		int i2=0;
		
		CellStyle cellStyleData = Funciones2.getStyleTitulo(workbook,"ZEBRA");
		CellStyle cellStyleDataTitulo = Funciones2.getStyleTitulo(workbook,"PRINCIPAL");
		CellStyle cellStyleDataZebra = Funciones2.getStyleTitulo(workbook,"ZEBRA");
		CellStyle cellStyleDataAux =null;
		CellStyle cellStyleDataAuxHijo =null;
		
		for(RubroEmplea rubroemplea : rubroempleasParaReportes) {			
			if(i!=0) {
				row = sheet.createRow(iRow++);				
				this.generarExcelReporteHeaderRubroEmplea("NORMAL",row,workbook);
			}
			
			cellStyleDataAux=null;
			
			if(i%2==0) {
				//cellStyleDataAux=cellStyleData;
			}
			
			row = sheet.createRow(iRow++);						
			RubroEmpleaConstantesFunciones.generarExcelReporteDataRubroEmplea("NORMAL",row,workbook,rubroemplea,cellStyleDataAux);
		
			
			


				//HistorialPagoNomi
			if(!paraDinamico || (paraDinamico && this.existeRelacionReporteDinamico(HistorialPagoNomiConstantesFunciones.SCLASSWEBTITULO))) {

				if(rubroemplea.getHistorialPagoNomis()!=null && rubroemplea.getHistorialPagoNomis().size()>0) {
					row = sheet.createRow(iRow++);

					iCell=1;iRowLast=iRow-1; cell = row.createCell(iCell++);cell.setCellStyle(cellStyleDataTitulo);sheet.addMergedRegion(new CellRangeAddress(iRowLast,iRowLast,1,5));
					cell.setCellValue(HistorialPagoNomiConstantesFunciones.SCLASSWEBTITULO);

					row = sheet.createRow(iRow++);
					HistorialPagoNomiConstantesFunciones.generarExcelReporteHeaderHistorialPagoNomi("RELACIONADO",row,workbook);
				}

				if(rubroemplea.getHistorialPagoNomis()!=null) {
					i2=0;
					for(HistorialPagoNomi historialpagonomi : rubroemplea.getHistorialPagoNomis()) {
						row = sheet.createRow(iRow++);

						cellStyleDataAuxHijo=null;
						if(i2%2==0) {
							cellStyleDataAuxHijo=cellStyleData;
						}

						HistorialPagoNomiConstantesFunciones.generarExcelReporteDataHistorialPagoNomi("RELACIONADO",row,workbook,historialpagonomi,cellStyleDataAuxHijo);
						i2++;
					}
				}
			}


				//RubroEstructura
			if(!paraDinamico || (paraDinamico && this.existeRelacionReporteDinamico(RubroEstructuraConstantesFunciones.SCLASSWEBTITULO))) {

				if(rubroemplea.getRubroEstructuras()!=null && rubroemplea.getRubroEstructuras().size()>0) {
					row = sheet.createRow(iRow++);

					iCell=1;iRowLast=iRow-1; cell = row.createCell(iCell++);cell.setCellStyle(cellStyleDataTitulo);sheet.addMergedRegion(new CellRangeAddress(iRowLast,iRowLast,1,5));
					cell.setCellValue(RubroEstructuraConstantesFunciones.SCLASSWEBTITULO);

					row = sheet.createRow(iRow++);
					RubroEstructuraConstantesFunciones.generarExcelReporteHeaderRubroEstructura("RELACIONADO",row,workbook);
				}

				if(rubroemplea.getRubroEstructuras()!=null) {
					i2=0;
					for(RubroEstructura rubroestructura : rubroemplea.getRubroEstructuras()) {
						row = sheet.createRow(iRow++);

						cellStyleDataAuxHijo=null;
						if(i2%2==0) {
							cellStyleDataAuxHijo=cellStyleData;
						}

						RubroEstructuraConstantesFunciones.generarExcelReporteDataRubroEstructura("RELACIONADO",row,workbook,rubroestructura,cellStyleDataAuxHijo);
						i2++;
					}
				}
			}


				//DefiProvisionEmpleado
			if(!paraDinamico || (paraDinamico && this.existeRelacionReporteDinamico(DefiProvisionEmpleadoConstantesFunciones.SCLASSWEBTITULO))) {

				if(rubroemplea.getDefiProvisionEmpleados()!=null && rubroemplea.getDefiProvisionEmpleados().size()>0) {
					row = sheet.createRow(iRow++);

					iCell=1;iRowLast=iRow-1; cell = row.createCell(iCell++);cell.setCellStyle(cellStyleDataTitulo);sheet.addMergedRegion(new CellRangeAddress(iRowLast,iRowLast,1,5));
					cell.setCellValue(DefiProvisionEmpleadoConstantesFunciones.SCLASSWEBTITULO);

					row = sheet.createRow(iRow++);
					DefiProvisionEmpleadoConstantesFunciones.generarExcelReporteHeaderDefiProvisionEmpleado("RELACIONADO",row,workbook);
				}

				if(rubroemplea.getDefiProvisionEmpleados()!=null) {
					i2=0;
					for(DefiProvisionEmpleado defiprovisionempleado : rubroemplea.getDefiProvisionEmpleados()) {
						row = sheet.createRow(iRow++);

						cellStyleDataAuxHijo=null;
						if(i2%2==0) {
							cellStyleDataAuxHijo=cellStyleData;
						}

						DefiProvisionEmpleadoConstantesFunciones.generarExcelReporteDataDefiProvisionEmpleado("RELACIONADO",row,workbook,defiprovisionempleado,cellStyleDataAuxHijo);
						i2++;
					}
				}
			}


				//EmpleadoPagoRubro
			if(!paraDinamico || (paraDinamico && this.existeRelacionReporteDinamico(EmpleadoPagoRubroConstantesFunciones.SCLASSWEBTITULO))) {

				if(rubroemplea.getEmpleadoPagoRubros()!=null && rubroemplea.getEmpleadoPagoRubros().size()>0) {
					row = sheet.createRow(iRow++);

					iCell=1;iRowLast=iRow-1; cell = row.createCell(iCell++);cell.setCellStyle(cellStyleDataTitulo);sheet.addMergedRegion(new CellRangeAddress(iRowLast,iRowLast,1,5));
					cell.setCellValue(EmpleadoPagoRubroConstantesFunciones.SCLASSWEBTITULO);

					row = sheet.createRow(iRow++);
					EmpleadoPagoRubroConstantesFunciones.generarExcelReporteHeaderEmpleadoPagoRubro("RELACIONADO",row,workbook);
				}

				if(rubroemplea.getEmpleadoPagoRubros()!=null) {
					i2=0;
					for(EmpleadoPagoRubro empleadopagorubro : rubroemplea.getEmpleadoPagoRubros()) {
						row = sheet.createRow(iRow++);

						cellStyleDataAuxHijo=null;
						if(i2%2==0) {
							cellStyleDataAuxHijo=cellStyleData;
						}

						EmpleadoPagoRubroConstantesFunciones.generarExcelReporteDataEmpleadoPagoRubro("RELACIONADO",row,workbook,empleadopagorubro,cellStyleDataAuxHijo);
						i2++;
					}
				}
			}


				//HistorialPagoMesNomi
			if(!paraDinamico || (paraDinamico && this.existeRelacionReporteDinamico(HistorialPagoMesNomiConstantesFunciones.SCLASSWEBTITULO))) {

				if(rubroemplea.getHistorialPagoMesNomis()!=null && rubroemplea.getHistorialPagoMesNomis().size()>0) {
					row = sheet.createRow(iRow++);

					iCell=1;iRowLast=iRow-1; cell = row.createCell(iCell++);cell.setCellStyle(cellStyleDataTitulo);sheet.addMergedRegion(new CellRangeAddress(iRowLast,iRowLast,1,5));
					cell.setCellValue(HistorialPagoMesNomiConstantesFunciones.SCLASSWEBTITULO);

					row = sheet.createRow(iRow++);
					HistorialPagoMesNomiConstantesFunciones.generarExcelReporteHeaderHistorialPagoMesNomi("RELACIONADO",row,workbook);
				}

				if(rubroemplea.getHistorialPagoMesNomis()!=null) {
					i2=0;
					for(HistorialPagoMesNomi historialpagomesnomi : rubroemplea.getHistorialPagoMesNomis()) {
						row = sheet.createRow(iRow++);

						cellStyleDataAuxHijo=null;
						if(i2%2==0) {
							cellStyleDataAuxHijo=cellStyleData;
						}

						HistorialPagoMesNomiConstantesFunciones.generarExcelReporteDataHistorialPagoMesNomi("RELACIONADO",row,workbook,historialpagomesnomi,cellStyleDataAuxHijo);
						i2++;
					}
				}
			}


				//RubroEmpleado
			if(!paraDinamico || (paraDinamico && this.existeRelacionReporteDinamico(RubroEmpleadoConstantesFunciones.SCLASSWEBTITULO))) {

				if(rubroemplea.getRubroEmpleados()!=null && rubroemplea.getRubroEmpleados().size()>0) {
					row = sheet.createRow(iRow++);

					iCell=1;iRowLast=iRow-1; cell = row.createCell(iCell++);cell.setCellStyle(cellStyleDataTitulo);sheet.addMergedRegion(new CellRangeAddress(iRowLast,iRowLast,1,5));
					cell.setCellValue(RubroEmpleadoConstantesFunciones.SCLASSWEBTITULO);

					row = sheet.createRow(iRow++);
					RubroEmpleadoConstantesFunciones.generarExcelReporteHeaderRubroEmpleado("RELACIONADO",row,workbook);
				}

				if(rubroemplea.getRubroEmpleados()!=null) {
					i2=0;
					for(RubroEmpleado rubroempleado : rubroemplea.getRubroEmpleados()) {
						row = sheet.createRow(iRow++);

						cellStyleDataAuxHijo=null;
						if(i2%2==0) {
							cellStyleDataAuxHijo=cellStyleData;
						}

						RubroEmpleadoConstantesFunciones.generarExcelReporteDataRubroEmpleado("RELACIONADO",row,workbook,rubroempleado,cellStyleDataAuxHijo);
						i2++;
					}
				}
			}


				//ValorRubroVariable
			if(!paraDinamico || (paraDinamico && this.existeRelacionReporteDinamico(ValorRubroVariableConstantesFunciones.SCLASSWEBTITULO))) {

				if(rubroemplea.getValorRubroVariables()!=null && rubroemplea.getValorRubroVariables().size()>0) {
					row = sheet.createRow(iRow++);

					iCell=1;iRowLast=iRow-1; cell = row.createCell(iCell++);cell.setCellStyle(cellStyleDataTitulo);sheet.addMergedRegion(new CellRangeAddress(iRowLast,iRowLast,1,5));
					cell.setCellValue(ValorRubroVariableConstantesFunciones.SCLASSWEBTITULO);

					row = sheet.createRow(iRow++);
					ValorRubroVariableConstantesFunciones.generarExcelReporteHeaderValorRubroVariable("RELACIONADO",row,workbook);
				}

				if(rubroemplea.getValorRubroVariables()!=null) {
					i2=0;
					for(ValorRubroVariable valorrubrovariable : rubroemplea.getValorRubroVariables()) {
						row = sheet.createRow(iRow++);

						cellStyleDataAuxHijo=null;
						if(i2%2==0) {
							cellStyleDataAuxHijo=cellStyleData;
						}

						ValorRubroVariableConstantesFunciones.generarExcelReporteDataValorRubroVariable("RELACIONADO",row,workbook,valorrubrovariable,cellStyleDataAuxHijo);
						i2++;
					}
				}
			}


				//TipoPrestamo
			if(!paraDinamico || (paraDinamico && this.existeRelacionReporteDinamico(TipoPrestamoConstantesFunciones.SCLASSWEBTITULO))) {

				if(rubroemplea.getTipoPrestamos()!=null && rubroemplea.getTipoPrestamos().size()>0) {
					row = sheet.createRow(iRow++);

					iCell=1;iRowLast=iRow-1; cell = row.createCell(iCell++);cell.setCellStyle(cellStyleDataTitulo);sheet.addMergedRegion(new CellRangeAddress(iRowLast,iRowLast,1,5));
					cell.setCellValue(TipoPrestamoConstantesFunciones.SCLASSWEBTITULO);

					row = sheet.createRow(iRow++);
					TipoPrestamoConstantesFunciones.generarExcelReporteHeaderTipoPrestamo("RELACIONADO",row,workbook);
				}

				if(rubroemplea.getTipoPrestamos()!=null) {
					i2=0;
					for(TipoPrestamo tipoprestamo : rubroemplea.getTipoPrestamos()) {
						row = sheet.createRow(iRow++);

						cellStyleDataAuxHijo=null;
						if(i2%2==0) {
							cellStyleDataAuxHijo=cellStyleData;
						}

						TipoPrestamoConstantesFunciones.generarExcelReporteDataTipoPrestamo("RELACIONADO",row,workbook,tipoprestamo,cellStyleDataAuxHijo);
						i2++;
					}
				}
			}


				//RubroEmpleaCuentaContable
			if(!paraDinamico || (paraDinamico && this.existeRelacionReporteDinamico(RubroEmpleaCuentaContableConstantesFunciones.SCLASSWEBTITULO))) {

				if(rubroemplea.getRubroEmpleaCuentaContables()!=null && rubroemplea.getRubroEmpleaCuentaContables().size()>0) {
					row = sheet.createRow(iRow++);

					iCell=1;iRowLast=iRow-1; cell = row.createCell(iCell++);cell.setCellStyle(cellStyleDataTitulo);sheet.addMergedRegion(new CellRangeAddress(iRowLast,iRowLast,1,5));
					cell.setCellValue(RubroEmpleaCuentaContableConstantesFunciones.SCLASSWEBTITULO);

					row = sheet.createRow(iRow++);
					RubroEmpleaCuentaContableConstantesFunciones.generarExcelReporteHeaderRubroEmpleaCuentaContable("RELACIONADO",row,workbook);
				}

				if(rubroemplea.getRubroEmpleaCuentaContables()!=null) {
					i2=0;
					for(RubroEmpleaCuentaContable rubroempleacuentacontable : rubroemplea.getRubroEmpleaCuentaContables()) {
						row = sheet.createRow(iRow++);

						cellStyleDataAuxHijo=null;
						if(i2%2==0) {
							cellStyleDataAuxHijo=cellStyleData;
						}

						RubroEmpleaCuentaContableConstantesFunciones.generarExcelReporteDataRubroEmpleaCuentaContable("RELACIONADO",row,workbook,rubroempleacuentacontable,cellStyleDataAuxHijo);
						i2++;
					}
				}
			}
			
			i++;
        }
        
		/*
		row = sheet.createRow(iRow++);
		iRowLast=iRow - 1;
			
		cell = row.createCell(0);
		cell.setCellValue(RubroEmpleaConstantesFunciones.getRubroEmpleaDescripcion(rubroemplea));
		cell.setCellStyle(cellStyleTitulo);
			
		sheet.addMergedRegion(new CellRangeAddress(iRowLast,iRowLast,0,2));			
		*/
		
			
		
        FileOutputStream fileOutputStream = new FileOutputStream(sPath);
		
        workbook.write(fileOutputStream);
		
        fileOutputStream.close();
		
		Constantes2.S_PATH_ULTIMO_ARCHIVO=sPath;
			
		if(this.parametroGeneralUsuario.getcon_mensaje_confirmacion() && !this.rubroempleaSessionBean.getEsGuardarRelacionado()) {//Constantes.ISMOSTRARMENSAJESMANTENIMIENTO && 
			JOptionPane.showMessageDialog(this,"EXPORTADO CORRECTAMENTE:"+sPath,"MANTENIMIENTO DE Rubro Emplea",JOptionPane.INFORMATION_MESSAGE);
		}
	}
	
	
	public Boolean existeColumnaReporteDinamico(String sColumna) {
		Boolean existe=false;
		
		Reporte reporte=new Reporte();
		
		
		for(int index:this.jInternalFrameReporteDinamicoRubroEmplea.getjListColumnasSelectReporte().getSelectedIndices()) {
			reporte=(Reporte)this.jInternalFrameReporteDinamicoRubroEmplea.getjListColumnasSelectReporte().getModel().getElementAt(index);
			
			if(sColumna.equals(reporte.getsCodigo())) {
				existe=true;
				break;
			}
		
		}
		
		
		return existe;
	}
	
	public Boolean existeRelacionReporteDinamico(String sColumna) {
		Boolean existe=false;
		
		Reporte reporte=new Reporte();
		
		
		for(int index:this.jInternalFrameReporteDinamicoRubroEmplea.getjListRelacionesSelectReporte().getSelectedIndices()) {
			reporte=(Reporte)this.jInternalFrameReporteDinamicoRubroEmplea.getjListRelacionesSelectReporte().getModel().getElementAt(index);
			
			if(sColumna.equals(reporte.getsCodigo())) {
				existe=true;
				break;
			}
		
		}
		
		
		return existe;
	}
	
	public void startProcessRubroEmplea() throws Exception {		
		this.startProcessRubroEmplea(true);
	}
	
	public void startProcessRubroEmplea(Boolean conSplash) throws Exception {		
		//FuncionesSwing.enableDisablePanels(false,this.jTabbedPaneBusquedasRubroEmplea ,this.jPanelParametrosReportesRubroEmplea, this.jScrollPanelDatosRubroEmplea,this.jPanelPaginacionRubroEmplea, this.jScrollPanelDatosEdicionRubroEmplea, this.jPanelAccionesRubroEmplea,this.jPanelAccionesFormularioRubroEmplea,this.jmenuBarRubroEmplea,this.jmenuBarDetalleRubroEmplea,this.jTtoolBarRubroEmplea,this.jTtoolBarDetalleRubroEmplea);		
		
		final JTabbedPane jTabbedPaneBusquedasRubroEmplea=this.jTabbedPaneBusquedasRubroEmplea; 
		
		final JPanel jPanelParametrosReportesRubroEmplea=this.jPanelParametrosReportesRubroEmplea;
		//final JScrollPane jScrollPanelDatosRubroEmplea=this.jScrollPanelDatosRubroEmplea;
		final JTable jTableDatosRubroEmplea=this.jTableDatosRubroEmplea;		
		final JPanel jPanelPaginacionRubroEmplea=this.jPanelPaginacionRubroEmplea;
		//final JScrollPane jScrollPanelDatosEdicionRubroEmplea=this.jScrollPanelDatosEdicionRubroEmplea;
		final JPanel jPanelAccionesRubroEmplea=this.jPanelAccionesRubroEmplea;
		
		JPanel jPanelCamposAuxiliarRubroEmplea=new JPanelMe();
		JPanel jPanelAccionesFormularioAuxiliarRubroEmplea=new JPanelMe();
		
		if(this.jInternalFrameDetalleFormRubroEmplea!=null) {
			jPanelCamposAuxiliarRubroEmplea=this.jInternalFrameDetalleFormRubroEmplea.jPanelCamposRubroEmplea;
			jPanelAccionesFormularioAuxiliarRubroEmplea=this.jInternalFrameDetalleFormRubroEmplea.jPanelAccionesFormularioRubroEmplea;
		}
		
		final JPanel jPanelCamposRubroEmplea=jPanelCamposAuxiliarRubroEmplea;
		final JPanel jPanelAccionesFormularioRubroEmplea=jPanelAccionesFormularioAuxiliarRubroEmplea;
		
		
		final JMenuBar jmenuBarRubroEmplea=this.jmenuBarRubroEmplea;
		final JToolBar jTtoolBarRubroEmplea=this.jTtoolBarRubroEmplea;		
		
		
		JMenuBar jmenuBarDetalleAuxiliarRubroEmplea=new JMenuBar();
		JToolBar jTtoolBarDetalleAuxiliarRubroEmplea=new JToolBar();		
		
		if(this.jInternalFrameDetalleFormRubroEmplea!=null) {
			jmenuBarDetalleAuxiliarRubroEmplea=this.jInternalFrameDetalleFormRubroEmplea.jmenuBarDetalleRubroEmplea;
			jTtoolBarDetalleAuxiliarRubroEmplea=this.jInternalFrameDetalleFormRubroEmplea.jTtoolBarDetalleRubroEmplea;
		}
		
		final JMenuBar jmenuBarDetalleRubroEmplea=jmenuBarDetalleAuxiliarRubroEmplea;
		final JToolBar jTtoolBarDetalleRubroEmplea=jTtoolBarDetalleAuxiliarRubroEmplea;		
		
		
		
		
		
		if(Constantes2.CON_PROCESO_HILO) {
			Thread threadRunnableProcess;
			ProcessRunnable processRunnable;
			
			processRunnable=new ProcessRunnable();
			
			processRunnable.setsTipo("START");
			processRunnable.setDesktop(jDesktopPane);
			processRunnable.setModuloActual(moduloActual);
			processRunnable.setModuloUsuarioSeleccionado(moduloActual);
			processRunnable.setOpcionActual(opcionActual);
			processRunnable.setParametroGeneralSg(parametroGeneralSg);
			processRunnable.setParametroGeneralUsuario(parametroGeneralUsuario);
			processRunnable.setResumenUsuarioActual(resumenUsuarioActual);
			processRunnable.setUsuarioActual(usuarioActual);
			
			processRunnable.jTabbedPaneBusquedas=jTabbedPaneBusquedasRubroEmplea;
			processRunnable.jPanelParametrosReportes=jPanelParametrosReportesRubroEmplea;
			processRunnable.jTableDatos=jTableDatosRubroEmplea;
			processRunnable.jPanelCampos=jPanelCamposRubroEmplea;
			processRunnable.jPanelPaginacion=jPanelPaginacionRubroEmplea;
			processRunnable.jPanelAcciones=jPanelAccionesRubroEmplea;
			processRunnable.jPanelAccionesFormulario=jPanelAccionesFormularioRubroEmplea;
			
			
			processRunnable.jmenuBar=jmenuBarRubroEmplea;
			processRunnable.jmenuBarDetalle=jmenuBarDetalleRubroEmplea;
			processRunnable.jTtoolBar=jTtoolBarRubroEmplea;
			processRunnable.jTtoolBarDetalle=jTtoolBarDetalleRubroEmplea;
			processRunnable.jInternalFrameBase=this;
			
			//processRunnable.CargarObjetosRendimientoCriticoModuloInventario();
			
			
			threadRunnableProcess=new Thread(processRunnable);//.start();
					
			threadRunnableProcess.start();
			
		} else {
			FuncionesSwing.enableDisablePanels(false,jTabbedPaneBusquedasRubroEmplea ,jPanelParametrosReportesRubroEmplea,jTableDatosRubroEmplea, /*jScrollPanelDatosRubroEmplea,*/jPanelCamposRubroEmplea,jPanelPaginacionRubroEmplea, /*jScrollPanelDatosEdicionRubroEmplea,*/ jPanelAccionesRubroEmplea,jPanelAccionesFormularioRubroEmplea,jmenuBarRubroEmplea,jmenuBarDetalleRubroEmplea,jTtoolBarRubroEmplea,jTtoolBarDetalleRubroEmplea);
		
			startProcess();//this.
		}
						
		/*
		if(conSplash) {
			SwingUtilities.invokeLater(new Runnable() {
			      public void run() {
			    	  try {
							FuncionesSwing.enableDisablePanels(false,jTabbedPaneBusquedasRubroEmplea ,jPanelParametrosReportesRubroEmplea, jScrollPanelDatosRubroEmplea,jPanelPaginacionRubroEmplea, jScrollPanelDatosEdicionRubroEmplea, jPanelAccionesRubroEmplea,jPanelAccionesFormularioRubroEmplea,jmenuBarRubroEmplea,jmenuBarDetalleRubroEmplea,jTtoolBarRubroEmplea,jTtoolBarDetalleRubroEmplea);
						
							startProcess();//this.
							
						} catch (Exception e) {
							// TODO Auto-generated catch block
							e.printStackTrace();
						}
			      }
			});
		}
		*/
	}
	
	public void finishProcessRubroEmplea() {// throws Exception 
		this.finishProcessRubroEmplea(true);
	}
	
	public void finishProcessRubroEmplea(Boolean conSplash) {// throws Exception 
		//FuncionesSwing.enableDisablePanels(true,this.jTabbedPaneBusquedasRubroEmplea ,this.jPanelParametrosReportesRubroEmplea, this.jScrollPanelDatosRubroEmplea,this.jPanelPaginacionRubroEmplea, this.jScrollPanelDatosEdicionRubroEmplea, this.jPanelAccionesRubroEmplea,this.jPanelAccionesFormularioRubroEmplea,this.jmenuBarRubroEmplea,this.jmenuBarDetalleRubroEmplea,this.jTtoolBarRubroEmplea,this.jTtoolBarDetalleRubroEmplea);		
		
		final JTabbedPane jTabbedPaneBusquedasRubroEmplea=this.jTabbedPaneBusquedasRubroEmplea; 
		
		final JPanel jPanelParametrosReportesRubroEmplea=this.jPanelParametrosReportesRubroEmplea;
		//final JScrollPane jScrollPanelDatosRubroEmplea=this.jScrollPanelDatosRubroEmplea;
		final JTable jTableDatosRubroEmplea=this.jTableDatosRubroEmplea;		
		final JPanel jPanelPaginacionRubroEmplea=this.jPanelPaginacionRubroEmplea;
		//final JScrollPane jScrollPanelDatosEdicionRubroEmplea=this.jScrollPanelDatosEdicionRubroEmplea;
		final JPanel jPanelAccionesRubroEmplea=this.jPanelAccionesRubroEmplea;
		
		JPanel jPanelCamposAuxiliarRubroEmplea=new JPanel();
		JPanel jPanelAccionesFormularioAuxiliarRubroEmplea=new JPanel();
		
		if(this.jInternalFrameDetalleFormRubroEmplea!=null) {
			jPanelCamposAuxiliarRubroEmplea=this.jInternalFrameDetalleFormRubroEmplea.jPanelCamposRubroEmplea;
			jPanelAccionesFormularioAuxiliarRubroEmplea=this.jInternalFrameDetalleFormRubroEmplea.jPanelAccionesFormularioRubroEmplea;
		}
		
		final JPanel jPanelCamposRubroEmplea=jPanelCamposAuxiliarRubroEmplea;
		final JPanel jPanelAccionesFormularioRubroEmplea=jPanelAccionesFormularioAuxiliarRubroEmplea;
		
		
		final JMenuBar jmenuBarRubroEmplea=this.jmenuBarRubroEmplea;		
		final JToolBar jTtoolBarRubroEmplea=this.jTtoolBarRubroEmplea;
				
		JMenuBar jmenuBarDetalleAuxiliarRubroEmplea=new JMenuBar();
		JToolBar jTtoolBarDetalleAuxiliarRubroEmplea=new JToolBar();
		
		if(this.jInternalFrameDetalleFormRubroEmplea!=null) {
			jmenuBarDetalleAuxiliarRubroEmplea=this.jInternalFrameDetalleFormRubroEmplea.jmenuBarDetalleRubroEmplea;
			jTtoolBarDetalleAuxiliarRubroEmplea=this.jInternalFrameDetalleFormRubroEmplea.jTtoolBarDetalleRubroEmplea;		
		}
		
		final JMenuBar jmenuBarDetalleRubroEmplea=jmenuBarDetalleAuxiliarRubroEmplea;
		final JToolBar jTtoolBarDetalleRubroEmplea=jTtoolBarDetalleAuxiliarRubroEmplea;
		
		
		
		if(Constantes2.CON_PROCESO_HILO) {
			Thread threadRunnableProcess;
			ProcessRunnable processRunnable;
			
			processRunnable=new ProcessRunnable();
			
			processRunnable.setsTipo("END");
			processRunnable.setDesktop(jDesktopPane);
			processRunnable.setModuloActual(moduloActual);
			processRunnable.setModuloUsuarioSeleccionado(moduloActual);
			processRunnable.setOpcionActual(opcionActual);
			processRunnable.setParametroGeneralSg(parametroGeneralSg);
			processRunnable.setParametroGeneralUsuario(parametroGeneralUsuario);
			processRunnable.setResumenUsuarioActual(resumenUsuarioActual);
			processRunnable.setUsuarioActual(usuarioActual);
			
			processRunnable.jTabbedPaneBusquedas=jTabbedPaneBusquedasRubroEmplea;
			processRunnable.jPanelParametrosReportes=jPanelParametrosReportesRubroEmplea;
			processRunnable.jTableDatos=jTableDatosRubroEmplea;
			processRunnable.jPanelCampos=jPanelCamposRubroEmplea;
			processRunnable.jPanelPaginacion=jPanelPaginacionRubroEmplea;
			processRunnable.jPanelAcciones=jPanelAccionesRubroEmplea;
			processRunnable.jPanelAccionesFormulario=jPanelAccionesFormularioRubroEmplea;
			
			
			processRunnable.jmenuBar=jmenuBarRubroEmplea;
			processRunnable.jmenuBarDetalle=jmenuBarDetalleRubroEmplea;
			processRunnable.jTtoolBar=jTtoolBarRubroEmplea;
			processRunnable.jTtoolBarDetalle=jTtoolBarDetalleRubroEmplea;
			processRunnable.jInternalFrameBase=this;
			
			//processRunnable.CargarObjetosRendimientoCriticoModuloInventario();
			
			
			threadRunnableProcess=new Thread(processRunnable);//.start();
					
			threadRunnableProcess.start();
			
		} else {
			if(conSplash) {
				SwingUtilities.invokeLater(new RunnableProceso(true,this,jTabbedPaneBusquedasRubroEmplea ,jPanelParametrosReportesRubroEmplea, jTableDatosRubroEmplea,/*jScrollPanelDatosRubroEmplea,*/jPanelCamposRubroEmplea,jPanelPaginacionRubroEmplea, /*jScrollPanelDatosEdicionRubroEmplea,*/ jPanelAccionesRubroEmplea,jPanelAccionesFormularioRubroEmplea,jmenuBarRubroEmplea,jmenuBarDetalleRubroEmplea,jTtoolBarRubroEmplea,jTtoolBarDetalleRubroEmplea));
			}
		}						
	}
	
	/*
	public void habilitarDeshabilitarControlesRubroEmplea(Boolean esHabilitar,Boolean conDetalle) {
		this.habilitarDeshabilitarToolBarRubroEmplea(esHabilitar,conDetalle);
		this.habilitarDeshabilitarMenuRubroEmplea(esHabilitar,conDetalle);
	}
	
	public void habilitarDeshabilitarToolBarRubroEmplea(Boolean esHabilitar,Boolean conDetalle) {
		FuncionesSwing.enableDisableComponents(this.jTtoolBarRubroEmplea,esHabilitar,1,1);
		
		if(conDetalle) {
			FuncionesSwing.enableDisableComponents(this.jTtoolBarDetalleRubroEmplea,esHabilitar,1,1);
		}
	}
	
	public void habilitarDeshabilitarMenuRubroEmplea(Boolean esHabilitar,Boolean conDetalle) {
		FuncionesSwing.enableDisableComponents(this.jmenuBarRubroEmplea,esHabilitar,1,1);
		
		if(conDetalle) {
			FuncionesSwing.enableDisableComponents(this.jmenuBarDetalleRubroEmplea,esHabilitar,1,1);
		}
	}
	*/
	
	
	
	public void procesarBusqueda(String sAccionBusqueda) throws Exception {		
		String  finalQueryPaginacion=this.rubroempleaConstantesFunciones.getsFinalQueryRubroEmplea();
		String  finalQueryPaginacionTodos=this.rubroempleaConstantesFunciones.getsFinalQueryRubroEmplea();
		
		Boolean esBusqueda=false;
		
		this.actualizarVariablesTipoReporte(true,false,false,"");
		/*
		this.sTipoReporteExtra="";
		this.esReporteDinamico=false;
		this.sPathReporteDinamico="";
		*/
		
		if(!sAccionBusqueda.equals("Todos"))	{
			esBusqueda=true;
		}
		
		this.arrDatoGeneral= new  ArrayList<DatoGeneral>();
		this.arrDatoGeneralNo= new  ArrayList<String>();
		
		ArrayList<String> arrColumnasGlobalesNo=RubroEmpleaConstantesFunciones.getArrayColumnasGlobalesNoRubroEmplea(this.arrDatoGeneral);
		ArrayList<String> arrColumnasGlobales=RubroEmpleaConstantesFunciones.getArrayColumnasGlobalesRubroEmplea(this.arrDatoGeneral,arrColumnasGlobalesNo);
		
			
		String  finalQueryGlobal="";
		
		finalQueryGlobal=Funciones.GetWhereGlobalConstants(this.parametroGeneralUsuario,this.moduloActual,!esBusqueda,esBusqueda,arrColumnasGlobales,RubroEmpleaConstantesFunciones.TABLENAME);
		
		String sOrderBy="";
		
		
		sOrderBy=Funciones2.getFinalQueryOrderBy(this.arrOrderBy);
		
		
		if(!sOrderBy.equals("")) {			
			finalQueryPaginacion=sOrderBy;
			finalQueryPaginacionTodos=sOrderBy;
		}
		
		
		//INICIALIZA ELIMINADOS
		this.rubroempleasEliminados= new ArrayList<RubroEmplea>();
		
		if(!this.isEntroOnLoad) {
			this.onLoad();
		}/* else {
			this.isEntroOnLoad=false;
		}*/
		
		
		
				
		try	{		
			
			//this.startProcessRubroEmplea();
		
				///*RubroEmpleaSessionBean*/this.rubroempleaSessionBean=new RubroEmpleaSessionBean();
			
			if(this.rubroempleaSessionBean==null) {
				this.rubroempleaSessionBean=new RubroEmpleaSessionBean();
			}
			
			//ACTUALIZA EL TAMANIO DE PAGINACION DESDE EL COMBO
			if(this.sTipoPaginacion!=null && !this.sTipoPaginacion.equals("")) {
				if(!this.sTipoPaginacion.equals("TODOS")) {
					this.iNumeroPaginacion=Integer.parseInt(this.sTipoPaginacion);
				} else {
					this.iNumeroPaginacion=-1;
					this.iNumeroPaginacionPagina=-1;
				}
			} else {
				if(this.iNumeroPaginacion==null || (this.iNumeroPaginacion!=null && this.iNumeroPaginacion<=0)) {
					this.iNumeroPaginacion=RubroEmpleaConstantesFunciones.INUMEROPAGINACION;
				}
			}
			
			this.pagination=new Pagination();
			this.pagination.setiFirstResult(this.iNumeroPaginacionPagina);
			this.pagination.setiMaxResults(this.iNumeroPaginacion);
			
			this.cargarDatosCliente();
			
			ArrayList<Classe> classes=new ArrayList<Classe>();
			
			classes=RubroEmpleaConstantesFunciones.getClassesForeignKeysOfRubroEmplea(new ArrayList<Classe>(),DeepLoadType.NONE);
			
		
			this.datosDeep=new DatosDeep();
			this.datosDeep.setIsDeep(false);
			this.datosDeep.setDeepLoadType(DeepLoadType.INCLUDE);
			this.datosDeep.setClases(classes);
			
			this.datosCliente.setDatosDeepParametros(false, DeepLoadType.INCLUDE, classes, "");
			this.datosCliente.setIsConDeep(true);
			
			if(false) {//this.conExportar
				this.datosCliente.setIsConExportar(true);
				this.datosCliente.setDatosExportarParametros(Funciones2.getTipoExportar(this.parametroGeneralUsuario),this.parametroGeneralUsuario.getcon_exportar_cabecera(),Funciones2.getTipoDelimiter(this.parametroGeneralUsuario),this.parametroGeneralUsuario.getpath_exportar()+"/rubroemplea."+Funciones2.getTipoExtensionArchivoExportar(this.parametroGeneralUsuario));
			} else {
				this.datosCliente.setIsConExportar(false);
			}
			
			rubroempleasAux= new ArrayList<RubroEmplea>();
			
				
			rubroempleaLogic.setDatosCliente(this.datosCliente);
			rubroempleaLogic.setDatosDeep(this.datosDeep);
			rubroempleaLogic.setIsConDeep(true);
			
			
			rubroempleaLogic.getRubroEmpleaDataAccess().setIsForForeingsKeysDataRelationships(true);
			
			if(sAccionBusqueda.equals("Todos") || sAccionBusqueda.equals("Query"))	{	
				if(sAccionBusqueda.equals("Todos")) {
					//FALTA:PARA BUSQUEDAS POR CAMPO EN FORMULARIO
					//this.sFinalQueryGeneral="";
				}
				
				//ARCHITECTURE
				if(Constantes.ISUSAEJBLOGICLAYER) {	
					finalQueryGlobal=Funciones.GetFinalQueryAppendBusqueda(finalQueryGlobal, this.sFinalQueryGeneral,finalQueryPaginacionTodos );
					
					rubroempleaLogic.getTodosRubroEmpleas(finalQueryGlobal,pagination);
					
					//rubroempleaLogic.getTodosRubroEmpleasWithConnection(finalQueryGlobal,pagination);										
				
				} else if(Constantes.ISUSAEJBREMOTE) {
				} else if(Constantes.ISUSAEJBHOME) {
				}
				//ARCHITECTURE
				
				if(rubroempleaLogic.getRubroEmpleas()==null|| rubroempleaLogic.getRubroEmpleas().size()==0)	{
					
				
				}
				
				if(false && sTipoArchivoReporte!=""&&sTipoArchivoReporte!=null) {//this.isTipoArchivoReporte
					if(false) {//isMostrarTodosResultadosReporte
						this.pagination.setiFirstResult(-1);
						this.pagination.setiMaxResults(-1);
						
						//ARCHITECTURE
						if(Constantes.ISUSAEJBLOGICLAYER) {	
							rubroempleasAux= new ArrayList<RubroEmplea>();
							rubroempleasAux.addAll(rubroempleaLogic.getRubroEmpleas());						
						} else if(Constantes.ISUSAEJBREMOTE || Constantes.ISUSAEJBHOME) {
							rubroempleasAux= new ArrayList<RubroEmplea>();
							rubroempleasAux.addAll(rubroempleas);
						}
						//ARCHITECTURE
						
						//ARCHITECTURE
						if(Constantes.ISUSAEJBLOGICLAYER) {	
							rubroempleaLogic.getTodosRubroEmpleas(finalQueryGlobal+"",this.pagination);												
							
							//rubroempleaLogic.getTodosRubroEmpleasWithConnection(finalQueryGlobal+"",this.pagination);												
						} else if(Constantes.ISUSAEJBREMOTE) {
						} else if(Constantes.ISUSAEJBHOME) {
						}
						//ARCHITECTURE
						
					}
					
					this.generarReporteRubroEmpleas("Todos",rubroempleaLogic.getRubroEmpleas() );
					
					if(false) {//isMostrarTodosResultadosReporte						
						//ARCHITECTURE
						if(Constantes.ISUSAEJBLOGICLAYER) {	
							rubroempleaLogic.setRubroEmpleas(new ArrayList<RubroEmplea>());					
							rubroempleaLogic.getRubroEmpleas().addAll(rubroempleasAux);
						} else if(Constantes.ISUSAEJBREMOTE || Constantes.ISUSAEJBHOME) {
							rubroempleas=new ArrayList<RubroEmplea>();
							rubroempleas.addAll(rubroempleasAux);
						}
						//ARCHITECTURE
						
						this.pagination.setiFirstResult(this.iNumeroPaginacionPagina);
						this.pagination.setiMaxResults(this.iNumeroPaginacion);														
					}
				}
			}
			else if(sAccionBusqueda.equals("PorId")) {
				Long idRubroEmplea=0L;
				
				if(this.idActual!=null && this.idActual!=0L) {
					idRubroEmplea=this.idActual;
				
				} else if(this.idRubroEmpleaActual!=null && this.idRubroEmpleaActual!=0L) {
					idRubroEmplea=idRubroEmpleaActual;
				}
				
					
				this.sDetalleReporte=RubroEmpleaConstantesFunciones.getDetalleIndicePorId(idRubroEmplea);
				
				this.rubroempleas=new ArrayList<RubroEmplea>();
				
				//ARCHITECTURE
				if(Constantes.ISUSAEJBLOGICLAYER) {					
					rubroempleaLogic.getEntity(idRubroEmplea);
					
					//rubroempleaLogic.getEntityWithConnection(idRubroEmplea);
				} else if(Constantes.ISUSAEJBREMOTE) {
				} else if(Constantes.ISUSAEJBHOME) {
				}
				//ARCHITECTURE
								
				if(Constantes.ISUSAEJBLOGICLAYER) {
					rubroempleaLogic.setRubroEmpleas(new ArrayList<RubroEmplea>());
					rubroempleaLogic.getRubroEmpleas().add(rubroempleaLogic.getRubroEmplea());
				
				} else if(Constantes.ISUSAEJBREMOTE || Constantes.ISUSAEJBHOME) {
					this.rubroempleas=new ArrayList<RubroEmplea>();
					this.rubroempleas.add(rubroemplea);
				}
				
				if(rubroempleaLogic.getRubroEmplea()==null)	{
					
				
				}			
			}
			
		
			else if(sAccionBusqueda.equals("FK_IdEmpresa")) {
				this.sDetalleReporte=RubroEmpleaConstantesFunciones.getDetalleIndiceFK_IdEmpresa(id_empresaFK_IdEmpresa);

				
				//ARCHITECTURE
				if(Constantes.ISUSAEJBLOGICLAYER) {

					finalQueryGlobal=Funciones.GetFinalQueryAppendBusqueda(finalQueryGlobal, this.sFinalQueryGeneral,finalQueryPaginacion);

					rubroempleaLogic.getRubroEmpleasFK_IdEmpresa(finalQueryGlobal,pagination,id_empresaFK_IdEmpresa);
				} else if(Constantes.ISUSAEJBREMOTE) {
				this.sDetalleReporte=RubroEmpleaConstantesFunciones.getDetalleIndiceFK_IdEmpresa(id_empresaFK_IdEmpresa);

				
				} else if(Constantes.ISUSAEJBHOME) {
				this.sDetalleReporte=RubroEmpleaConstantesFunciones.getDetalleIndiceFK_IdEmpresa(id_empresaFK_IdEmpresa);

				
				}
				//ARCHITECTURE

				Boolean isNoExiste=false;
				//ARCHITECTURE
				if(Constantes.ISUSAEJBLOGICLAYER) {
					isNoExiste=rubroempleaLogic.getRubroEmpleas()==null||rubroempleaLogic.getRubroEmpleas().size()==0;
				} else if(Constantes.ISUSAEJBREMOTE||Constantes.ISUSAEJBHOME) {
					isNoExiste=rubroempleas==null|| rubroempleas.size()==0;
				}
				//ARCHITECTURE

		if(false && sTipoArchivoReporte!=""&&sTipoArchivoReporte!=null) {//this.isTipoArchivoReporte
			if(false) {//isMostrarTodosResultadosReporte
				this.pagination.setiFirstResult(-1);
				this.pagination.setiMaxResults(-1);

				//ARCHITECTURE
				if(Constantes.ISUSAEJBLOGICLAYER) {
						rubroempleasAux=new ArrayList<RubroEmplea>();
						rubroempleasAux.addAll(rubroempleaLogic.getRubroEmpleas());
				} else if(Constantes.ISUSAEJBREMOTE || Constantes.ISUSAEJBHOME) {
							rubroempleasAux=new ArrayList<RubroEmplea>();
							rubroempleasAux.addAll(rubroempleas);
				}
				//ARCHITECTURE
								
				
				//ARCHITECTURE
				if(Constantes.ISUSAEJBLOGICLAYER) {
							finalQueryGlobal=Funciones.GetFinalQueryAppendBusqueda(finalQueryGlobal, this.sFinalQueryGeneral,"");
							rubroempleaLogic.getRubroEmpleasFK_IdEmpresa(finalQueryGlobal,pagination,id_empresaFK_IdEmpresa);
				} else if(Constantes.ISUSAEJBREMOTE) {
				this.sDetalleReporte=RubroEmpleaConstantesFunciones.getDetalleIndiceFK_IdEmpresa(id_empresaFK_IdEmpresa);
						
				} else if(Constantes.ISUSAEJBHOME) {
				this.sDetalleReporte=RubroEmpleaConstantesFunciones.getDetalleIndiceFK_IdEmpresa(id_empresaFK_IdEmpresa);
						
				}
				//ARCHITECTURE
					}
				//ARCHITECTURE
				if(Constantes.ISUSAEJBLOGICLAYER) {
					generarReporteRubroEmpleas("FK_IdEmpresa",rubroempleaLogic.getRubroEmpleas());
				} else if(Constantes.ISUSAEJBREMOTE || Constantes.ISUSAEJBHOME) {
					generarReporteRubroEmpleas("FK_IdEmpresa",rubroempleas);
				}
				//ARCHITECTURE

					if(false) {//isMostrarTodosResultadosReporte
						this.pagination.setiFirstResult(this.iNumeroPaginacionPagina);
						this.pagination.setiMaxResults(this.iNumeroPaginacion);

						//ARCHITECTURE
						if(Constantes.ISUSAEJBLOGICLAYER) {
						rubroempleaLogic.setRubroEmpleas(new ArrayList<RubroEmplea>());
						rubroempleaLogic.getRubroEmpleas().addAll(rubroempleasAux);
						} else if(Constantes.ISUSAEJBREMOTE || Constantes.ISUSAEJBHOME) {
							rubroempleas=new ArrayList<RubroEmplea>();
							rubroempleas.addAll(rubroempleasAux);
						}
						//ARCHITECTURE
					}
				}

			}
			else if(sAccionBusqueda.equals("FK_IdTipoCalculo")) {
				this.sDetalleReporte=RubroEmpleaConstantesFunciones.getDetalleIndiceFK_IdTipoCalculo(id_tipo_calculoFK_IdTipoCalculo);

				
				//ARCHITECTURE
				if(Constantes.ISUSAEJBLOGICLAYER) {

					finalQueryGlobal=Funciones.GetFinalQueryAppendBusqueda(finalQueryGlobal, this.sFinalQueryGeneral,finalQueryPaginacion);

					rubroempleaLogic.getRubroEmpleasFK_IdTipoCalculo(finalQueryGlobal,pagination,id_tipo_calculoFK_IdTipoCalculo);
				} else if(Constantes.ISUSAEJBREMOTE) {
				this.sDetalleReporte=RubroEmpleaConstantesFunciones.getDetalleIndiceFK_IdTipoCalculo(id_tipo_calculoFK_IdTipoCalculo);

				
				} else if(Constantes.ISUSAEJBHOME) {
				this.sDetalleReporte=RubroEmpleaConstantesFunciones.getDetalleIndiceFK_IdTipoCalculo(id_tipo_calculoFK_IdTipoCalculo);

				
				}
				//ARCHITECTURE

				Boolean isNoExiste=false;
				//ARCHITECTURE
				if(Constantes.ISUSAEJBLOGICLAYER) {
					isNoExiste=rubroempleaLogic.getRubroEmpleas()==null||rubroempleaLogic.getRubroEmpleas().size()==0;
				} else if(Constantes.ISUSAEJBREMOTE||Constantes.ISUSAEJBHOME) {
					isNoExiste=rubroempleas==null|| rubroempleas.size()==0;
				}
				//ARCHITECTURE

		if(false && sTipoArchivoReporte!=""&&sTipoArchivoReporte!=null) {//this.isTipoArchivoReporte
			if(false) {//isMostrarTodosResultadosReporte
				this.pagination.setiFirstResult(-1);
				this.pagination.setiMaxResults(-1);

				//ARCHITECTURE
				if(Constantes.ISUSAEJBLOGICLAYER) {
						rubroempleasAux=new ArrayList<RubroEmplea>();
						rubroempleasAux.addAll(rubroempleaLogic.getRubroEmpleas());
				} else if(Constantes.ISUSAEJBREMOTE || Constantes.ISUSAEJBHOME) {
							rubroempleasAux=new ArrayList<RubroEmplea>();
							rubroempleasAux.addAll(rubroempleas);
				}
				//ARCHITECTURE
								
				
				//ARCHITECTURE
				if(Constantes.ISUSAEJBLOGICLAYER) {
							finalQueryGlobal=Funciones.GetFinalQueryAppendBusqueda(finalQueryGlobal, this.sFinalQueryGeneral,"");
							rubroempleaLogic.getRubroEmpleasFK_IdTipoCalculo(finalQueryGlobal,pagination,id_tipo_calculoFK_IdTipoCalculo);
				} else if(Constantes.ISUSAEJBREMOTE) {
				this.sDetalleReporte=RubroEmpleaConstantesFunciones.getDetalleIndiceFK_IdTipoCalculo(id_tipo_calculoFK_IdTipoCalculo);
						
				} else if(Constantes.ISUSAEJBHOME) {
				this.sDetalleReporte=RubroEmpleaConstantesFunciones.getDetalleIndiceFK_IdTipoCalculo(id_tipo_calculoFK_IdTipoCalculo);
						
				}
				//ARCHITECTURE
					}
				//ARCHITECTURE
				if(Constantes.ISUSAEJBLOGICLAYER) {
					generarReporteRubroEmpleas("FK_IdTipoCalculo",rubroempleaLogic.getRubroEmpleas());
				} else if(Constantes.ISUSAEJBREMOTE || Constantes.ISUSAEJBHOME) {
					generarReporteRubroEmpleas("FK_IdTipoCalculo",rubroempleas);
				}
				//ARCHITECTURE

					if(false) {//isMostrarTodosResultadosReporte
						this.pagination.setiFirstResult(this.iNumeroPaginacionPagina);
						this.pagination.setiMaxResults(this.iNumeroPaginacion);

						//ARCHITECTURE
						if(Constantes.ISUSAEJBLOGICLAYER) {
						rubroempleaLogic.setRubroEmpleas(new ArrayList<RubroEmplea>());
						rubroempleaLogic.getRubroEmpleas().addAll(rubroempleasAux);
						} else if(Constantes.ISUSAEJBREMOTE || Constantes.ISUSAEJBHOME) {
							rubroempleas=new ArrayList<RubroEmplea>();
							rubroempleas.addAll(rubroempleasAux);
						}
						//ARCHITECTURE
					}
				}

			}
			else if(sAccionBusqueda.equals("FK_IdTipoGrupoRubroEmplea")) {
				this.sDetalleReporte=RubroEmpleaConstantesFunciones.getDetalleIndiceFK_IdTipoGrupoRubroEmplea(id_tipo_grupo_rubro_empleaFK_IdTipoGrupoRubroEmplea);

				
				//ARCHITECTURE
				if(Constantes.ISUSAEJBLOGICLAYER) {

					finalQueryGlobal=Funciones.GetFinalQueryAppendBusqueda(finalQueryGlobal, this.sFinalQueryGeneral,finalQueryPaginacion);

					rubroempleaLogic.getRubroEmpleasFK_IdTipoGrupoRubroEmplea(finalQueryGlobal,pagination,id_tipo_grupo_rubro_empleaFK_IdTipoGrupoRubroEmplea);
				} else if(Constantes.ISUSAEJBREMOTE) {
				this.sDetalleReporte=RubroEmpleaConstantesFunciones.getDetalleIndiceFK_IdTipoGrupoRubroEmplea(id_tipo_grupo_rubro_empleaFK_IdTipoGrupoRubroEmplea);

				
				} else if(Constantes.ISUSAEJBHOME) {
				this.sDetalleReporte=RubroEmpleaConstantesFunciones.getDetalleIndiceFK_IdTipoGrupoRubroEmplea(id_tipo_grupo_rubro_empleaFK_IdTipoGrupoRubroEmplea);

				
				}
				//ARCHITECTURE

				Boolean isNoExiste=false;
				//ARCHITECTURE
				if(Constantes.ISUSAEJBLOGICLAYER) {
					isNoExiste=rubroempleaLogic.getRubroEmpleas()==null||rubroempleaLogic.getRubroEmpleas().size()==0;
				} else if(Constantes.ISUSAEJBREMOTE||Constantes.ISUSAEJBHOME) {
					isNoExiste=rubroempleas==null|| rubroempleas.size()==0;
				}
				//ARCHITECTURE

		if(false && sTipoArchivoReporte!=""&&sTipoArchivoReporte!=null) {//this.isTipoArchivoReporte
			if(false) {//isMostrarTodosResultadosReporte
				this.pagination.setiFirstResult(-1);
				this.pagination.setiMaxResults(-1);

				//ARCHITECTURE
				if(Constantes.ISUSAEJBLOGICLAYER) {
						rubroempleasAux=new ArrayList<RubroEmplea>();
						rubroempleasAux.addAll(rubroempleaLogic.getRubroEmpleas());
				} else if(Constantes.ISUSAEJBREMOTE || Constantes.ISUSAEJBHOME) {
							rubroempleasAux=new ArrayList<RubroEmplea>();
							rubroempleasAux.addAll(rubroempleas);
				}
				//ARCHITECTURE
								
				
				//ARCHITECTURE
				if(Constantes.ISUSAEJBLOGICLAYER) {
							finalQueryGlobal=Funciones.GetFinalQueryAppendBusqueda(finalQueryGlobal, this.sFinalQueryGeneral,"");
							rubroempleaLogic.getRubroEmpleasFK_IdTipoGrupoRubroEmplea(finalQueryGlobal,pagination,id_tipo_grupo_rubro_empleaFK_IdTipoGrupoRubroEmplea);
				} else if(Constantes.ISUSAEJBREMOTE) {
				this.sDetalleReporte=RubroEmpleaConstantesFunciones.getDetalleIndiceFK_IdTipoGrupoRubroEmplea(id_tipo_grupo_rubro_empleaFK_IdTipoGrupoRubroEmplea);
						
				} else if(Constantes.ISUSAEJBHOME) {
				this.sDetalleReporte=RubroEmpleaConstantesFunciones.getDetalleIndiceFK_IdTipoGrupoRubroEmplea(id_tipo_grupo_rubro_empleaFK_IdTipoGrupoRubroEmplea);
						
				}
				//ARCHITECTURE
					}
				//ARCHITECTURE
				if(Constantes.ISUSAEJBLOGICLAYER) {
					generarReporteRubroEmpleas("FK_IdTipoGrupoRubroEmplea",rubroempleaLogic.getRubroEmpleas());
				} else if(Constantes.ISUSAEJBREMOTE || Constantes.ISUSAEJBHOME) {
					generarReporteRubroEmpleas("FK_IdTipoGrupoRubroEmplea",rubroempleas);
				}
				//ARCHITECTURE

					if(false) {//isMostrarTodosResultadosReporte
						this.pagination.setiFirstResult(this.iNumeroPaginacionPagina);
						this.pagination.setiMaxResults(this.iNumeroPaginacion);

						//ARCHITECTURE
						if(Constantes.ISUSAEJBLOGICLAYER) {
						rubroempleaLogic.setRubroEmpleas(new ArrayList<RubroEmplea>());
						rubroempleaLogic.getRubroEmpleas().addAll(rubroempleasAux);
						} else if(Constantes.ISUSAEJBREMOTE || Constantes.ISUSAEJBHOME) {
							rubroempleas=new ArrayList<RubroEmplea>();
							rubroempleas.addAll(rubroempleasAux);
						}
						//ARCHITECTURE
					}
				}

			}
			else if(sAccionBusqueda.equals("FK_IdTipoRubroEmplea")) {
				this.sDetalleReporte=RubroEmpleaConstantesFunciones.getDetalleIndiceFK_IdTipoRubroEmplea(id_tipo_rubro_empleaFK_IdTipoRubroEmplea);

				
				//ARCHITECTURE
				if(Constantes.ISUSAEJBLOGICLAYER) {

					finalQueryGlobal=Funciones.GetFinalQueryAppendBusqueda(finalQueryGlobal, this.sFinalQueryGeneral,finalQueryPaginacion);

					rubroempleaLogic.getRubroEmpleasFK_IdTipoRubroEmplea(finalQueryGlobal,pagination,id_tipo_rubro_empleaFK_IdTipoRubroEmplea);
				} else if(Constantes.ISUSAEJBREMOTE) {
				this.sDetalleReporte=RubroEmpleaConstantesFunciones.getDetalleIndiceFK_IdTipoRubroEmplea(id_tipo_rubro_empleaFK_IdTipoRubroEmplea);

				
				} else if(Constantes.ISUSAEJBHOME) {
				this.sDetalleReporte=RubroEmpleaConstantesFunciones.getDetalleIndiceFK_IdTipoRubroEmplea(id_tipo_rubro_empleaFK_IdTipoRubroEmplea);

				
				}
				//ARCHITECTURE

				Boolean isNoExiste=false;
				//ARCHITECTURE
				if(Constantes.ISUSAEJBLOGICLAYER) {
					isNoExiste=rubroempleaLogic.getRubroEmpleas()==null||rubroempleaLogic.getRubroEmpleas().size()==0;
				} else if(Constantes.ISUSAEJBREMOTE||Constantes.ISUSAEJBHOME) {
					isNoExiste=rubroempleas==null|| rubroempleas.size()==0;
				}
				//ARCHITECTURE

		if(false && sTipoArchivoReporte!=""&&sTipoArchivoReporte!=null) {//this.isTipoArchivoReporte
			if(false) {//isMostrarTodosResultadosReporte
				this.pagination.setiFirstResult(-1);
				this.pagination.setiMaxResults(-1);

				//ARCHITECTURE
				if(Constantes.ISUSAEJBLOGICLAYER) {
						rubroempleasAux=new ArrayList<RubroEmplea>();
						rubroempleasAux.addAll(rubroempleaLogic.getRubroEmpleas());
				} else if(Constantes.ISUSAEJBREMOTE || Constantes.ISUSAEJBHOME) {
							rubroempleasAux=new ArrayList<RubroEmplea>();
							rubroempleasAux.addAll(rubroempleas);
				}
				//ARCHITECTURE
								
				
				//ARCHITECTURE
				if(Constantes.ISUSAEJBLOGICLAYER) {
							finalQueryGlobal=Funciones.GetFinalQueryAppendBusqueda(finalQueryGlobal, this.sFinalQueryGeneral,"");
							rubroempleaLogic.getRubroEmpleasFK_IdTipoRubroEmplea(finalQueryGlobal,pagination,id_tipo_rubro_empleaFK_IdTipoRubroEmplea);
				} else if(Constantes.ISUSAEJBREMOTE) {
				this.sDetalleReporte=RubroEmpleaConstantesFunciones.getDetalleIndiceFK_IdTipoRubroEmplea(id_tipo_rubro_empleaFK_IdTipoRubroEmplea);
						
				} else if(Constantes.ISUSAEJBHOME) {
				this.sDetalleReporte=RubroEmpleaConstantesFunciones.getDetalleIndiceFK_IdTipoRubroEmplea(id_tipo_rubro_empleaFK_IdTipoRubroEmplea);
						
				}
				//ARCHITECTURE
					}
				//ARCHITECTURE
				if(Constantes.ISUSAEJBLOGICLAYER) {
					generarReporteRubroEmpleas("FK_IdTipoRubroEmplea",rubroempleaLogic.getRubroEmpleas());
				} else if(Constantes.ISUSAEJBREMOTE || Constantes.ISUSAEJBHOME) {
					generarReporteRubroEmpleas("FK_IdTipoRubroEmplea",rubroempleas);
				}
				//ARCHITECTURE

					if(false) {//isMostrarTodosResultadosReporte
						this.pagination.setiFirstResult(this.iNumeroPaginacionPagina);
						this.pagination.setiMaxResults(this.iNumeroPaginacion);

						//ARCHITECTURE
						if(Constantes.ISUSAEJBLOGICLAYER) {
						rubroempleaLogic.setRubroEmpleas(new ArrayList<RubroEmplea>());
						rubroempleaLogic.getRubroEmpleas().addAll(rubroempleasAux);
						} else if(Constantes.ISUSAEJBREMOTE || Constantes.ISUSAEJBHOME) {
							rubroempleas=new ArrayList<RubroEmplea>();
							rubroempleas.addAll(rubroempleasAux);
						}
						//ARCHITECTURE
					}
				}

			} 
		
		
		
		this.redimensionarTablaDatos();
		//this.refrescarForeignKeysDescripcionesRubroEmplea();
		
		
		if(this.conTotales) {
			this.crearFilaTotales();
		}		
		} catch (JRException e) {
			throw e;
		} catch(Exception e) {
			throw e;
      	} finally {
      		//this.finishProcessRubroEmplea();
      	}
		
	}				
	
	public void redimensionarTablaDatos() throws Exception {
		int iSizeTabla=0;
				
		iSizeTabla=this.getSizeTablaDatos();
		
		//ARCHITECTURE
		/*
		if(Constantes.ISUSAEJBLOGICLAYER) {	
			iSizeTabla=rubroempleaLogic.getRubroEmpleas().size();
		} else if(Constantes.ISUSAEJBREMOTE || Constantes.ISUSAEJBHOME) {
			iSizeTabla=rubroempleas.size();
		}
		*/
		//ARCHITECTURE
											
		this.redimensionarTablaDatos(iSizeTabla);		
	}
	
	public Integer getSizeTablaDatos() throws Exception {
		Integer iSizeTabla=0;
				
		//ARCHITECTURE
		if(Constantes.ISUSAEJBLOGICLAYER) {	
			iSizeTabla=rubroempleaLogic.getRubroEmpleas().size();
		} else if(Constantes.ISUSAEJBREMOTE || Constantes.ISUSAEJBHOME) {
			iSizeTabla=rubroempleas.size();
		}
		//ARCHITECTURE
											
		return iSizeTabla;		
	}
	
			
	public Boolean permiteMantenimiento(RubroEmplea rubroemplea) {
		Boolean permite=true;
		
		if(this.rubroemplea.getsType().equals(Constantes2.S_TOTALES)) {
			permite=false;
		}
		
		return permite;
	}
	
	public void traerValoresTablaTotales() throws Exception {
	}
	
	
	public void traerValoresTablaOrderBy() throws Exception {
		if(Constantes.ISUSAEJBLOGICLAYER) {
			this.arrOrderBy=RubroEmpleaConstantesFunciones.getOrderByListaRubroEmplea();							
		} else if(Constantes.ISUSAEJBREMOTE || Constantes.ISUSAEJBHOME) {
			this.arrOrderBy=RubroEmpleaConstantesFunciones.getOrderByListaRubroEmplea();
		}		
	}
	
	
	public Boolean existeFilaTotales() throws Exception {
		Boolean existe=false;
		
		if(Constantes.ISUSAEJBLOGICLAYER) {
			for(RubroEmplea rubroemplea:rubroempleaLogic.getRubroEmpleas()) {
				if(rubroemplea.getsType().equals(Constantes2.S_TOTALES)) {
					rubroempleaTotales=rubroemplea;
					existe=true;
					break;
				}
			}
								
		} else if(Constantes.ISUSAEJBREMOTE || Constantes.ISUSAEJBHOME) {
			for(RubroEmplea rubroemplea:this.rubroempleas) {
				if(rubroemplea.getsType().equals(Constantes2.S_TOTALES)) {
					rubroempleaTotales=rubroemplea;
					existe=true;
					break;
				}
			}
		}
		
		return existe;
	}
	
	public void crearFilaTotales() throws Exception {
		Boolean existe=false;
		
		existe=this.existeFilaTotales();
		
		if(!existe) {
			//SI NO ES UNO A UNO SE CREA FILA TOTALES
			this.rubroempleaAux=new RubroEmplea();
			this.rubroempleaAux.setsType(Constantes2.S_TOTALES);
			this.rubroempleaAux.setIsNew(false);
			this.rubroempleaAux.setIsChanged(false);
			this.rubroempleaAux.setIsDeleted(false);
				
			if(Constantes.ISUSAEJBLOGICLAYER) {
				RubroEmpleaConstantesFunciones.TotalizarValoresFilaRubroEmplea(this.rubroempleaLogic.getRubroEmpleas(),this.rubroempleaAux);
				
				this.rubroempleaLogic.getRubroEmpleas().add(this.rubroempleaAux);
				
			} else if(Constantes.ISUSAEJBREMOTE || Constantes.ISUSAEJBHOME) {
				RubroEmpleaConstantesFunciones.TotalizarValoresFilaRubroEmplea(this.rubroempleas,this.rubroempleaAux);
				
				this.rubroempleas.add(this.rubroempleaAux);
			}
		}
	}
	
	public void quitarFilaTotales() throws Exception {
		rubroempleaTotales=new RubroEmplea();
		Boolean existe=false;
		
		if(Constantes.ISUSAEJBLOGICLAYER) {
			existe=this.existeFilaTotales();
			
			if(existe) {
				this.rubroempleaLogic.getRubroEmpleas().remove(rubroempleaTotales);
			}			
		} else if(Constantes.ISUSAEJBREMOTE || Constantes.ISUSAEJBHOME) {
			existe=this.existeFilaTotales();
			
			if(existe) {
				this.rubroempleas.remove(rubroempleaTotales);
			}
		}
	}
	
	public void actualizarFilaTotales() throws Exception {
		rubroempleaTotales=new RubroEmplea();
		Boolean existe=false;
		
		if(Constantes.ISUSAEJBLOGICLAYER) {
			for(RubroEmplea rubroemplea:rubroempleaLogic.getRubroEmpleas()) {
				if(rubroemplea.getsType().equals(Constantes2.S_TOTALES)) {
					rubroempleaTotales=rubroemplea;
					existe=true;
					break;
				}
			}
			
			if(existe) {
				RubroEmpleaConstantesFunciones.TotalizarValoresFilaRubroEmplea(this.rubroempleaLogic.getRubroEmpleas(),rubroempleaTotales);
			}			
		} else if(Constantes.ISUSAEJBREMOTE || Constantes.ISUSAEJBHOME) {
			for(RubroEmplea rubroemplea:this.rubroempleas) {
				if(rubroemplea.getsType().equals(Constantes2.S_TOTALES)) {
					rubroempleaTotales=rubroemplea;
					existe=true;
					break;
				}
			}
			
			if(existe) {
				RubroEmpleaConstantesFunciones.TotalizarValoresFilaRubroEmplea(this.rubroempleas,rubroempleaTotales);
			}
		}
	}		
	
	public void recargarInformacion()throws Exception {
		try {
			sAccionBusqueda="Todos";
			this.iNumeroPaginacionPagina=0;
			
			this.procesarBusqueda(sAccionBusqueda);
			
		} catch(Exception e) {
			FuncionesSwing.manageException(this, e,logger,RubroEmpleaConstantesFunciones.CLASSNAME);
		}	
	}		
	
	
	public void getRubroEmpleasFK_IdEmpresa()throws Exception {
		try {
			sAccionBusqueda="FK_IdEmpresa";
			this.iNumeroPaginacionPagina=0;
			this.procesarBusqueda(sAccionBusqueda);

		} catch(Exception e) {
			FuncionesSwing.manageException(this, e,logger);
		}
	}

	public void getRubroEmpleasFK_IdTipoCalculo()throws Exception {
		try {
			sAccionBusqueda="FK_IdTipoCalculo";
			this.iNumeroPaginacionPagina=0;
			this.procesarBusqueda(sAccionBusqueda);

		} catch(Exception e) {
			FuncionesSwing.manageException(this, e,logger);
		}
	}

	public void getRubroEmpleasFK_IdTipoGrupoRubroEmplea()throws Exception {
		try {
			sAccionBusqueda="FK_IdTipoGrupoRubroEmplea";
			this.iNumeroPaginacionPagina=0;
			this.procesarBusqueda(sAccionBusqueda);

		} catch(Exception e) {
			FuncionesSwing.manageException(this, e,logger);
		}
	}

	public void getRubroEmpleasFK_IdTipoRubroEmplea()throws Exception {
		try {
			sAccionBusqueda="FK_IdTipoRubroEmplea";
			this.iNumeroPaginacionPagina=0;
			this.procesarBusqueda(sAccionBusqueda);

		} catch(Exception e) {
			FuncionesSwing.manageException(this, e,logger);
		}
	}

	
	
	public void getRubroEmpleasFK_IdEmpresa(String sFinalQuery,Long id_empresa)throws Exception {
		try {
			
			this.pagination=new Pagination();
			this.pagination.setiFirstResult(this.iNumeroPaginacionPagina);
			this.pagination.setiMaxResults(this.iNumeroPaginacion);

				//ARCHITECTURE
				if(Constantes.ISUSAEJBLOGICLAYER) {
					rubroempleaLogic.getRubroEmpleasFK_IdEmpresa(sFinalQuery,this.pagination,id_empresa);
				
				} else if(Constantes.ISUSAEJBREMOTE) {
				
				} else if(Constantes.ISUSAEJBHOME) {
				
				}
				//ARCHITECTURE
		} catch(Exception e) {
			throw e;
		}
	}

	public void getRubroEmpleasFK_IdTipoCalculo(String sFinalQuery,Long id_tipo_calculo)throws Exception {
		try {
			
			this.pagination=new Pagination();
			this.pagination.setiFirstResult(this.iNumeroPaginacionPagina);
			this.pagination.setiMaxResults(this.iNumeroPaginacion);

				//ARCHITECTURE
				if(Constantes.ISUSAEJBLOGICLAYER) {
					rubroempleaLogic.getRubroEmpleasFK_IdTipoCalculo(sFinalQuery,this.pagination,id_tipo_calculo);
				
				} else if(Constantes.ISUSAEJBREMOTE) {
				
				} else if(Constantes.ISUSAEJBHOME) {
				
				}
				//ARCHITECTURE
		} catch(Exception e) {
			throw e;
		}
	}

	public void getRubroEmpleasFK_IdTipoGrupoRubroEmplea(String sFinalQuery,Long id_tipo_grupo_rubro_emplea)throws Exception {
		try {
			
			this.pagination=new Pagination();
			this.pagination.setiFirstResult(this.iNumeroPaginacionPagina);
			this.pagination.setiMaxResults(this.iNumeroPaginacion);

				//ARCHITECTURE
				if(Constantes.ISUSAEJBLOGICLAYER) {
					rubroempleaLogic.getRubroEmpleasFK_IdTipoGrupoRubroEmplea(sFinalQuery,this.pagination,id_tipo_grupo_rubro_emplea);
				
				} else if(Constantes.ISUSAEJBREMOTE) {
				
				} else if(Constantes.ISUSAEJBHOME) {
				
				}
				//ARCHITECTURE
		} catch(Exception e) {
			throw e;
		}
	}

	public void getRubroEmpleasFK_IdTipoRubroEmplea(String sFinalQuery,Long id_tipo_rubro_emplea)throws Exception {
		try {
			
			this.pagination=new Pagination();
			this.pagination.setiFirstResult(this.iNumeroPaginacionPagina);
			this.pagination.setiMaxResults(this.iNumeroPaginacion);

				//ARCHITECTURE
				if(Constantes.ISUSAEJBLOGICLAYER) {
					rubroempleaLogic.getRubroEmpleasFK_IdTipoRubroEmplea(sFinalQuery,this.pagination,id_tipo_rubro_emplea);
				
				} else if(Constantes.ISUSAEJBREMOTE) {
				
				} else if(Constantes.ISUSAEJBHOME) {
				
				}
				//ARCHITECTURE
		} catch(Exception e) {
			throw e;
		}
	}

	
	public void onLoad()throws Exception {		
		try {		
			isEntroOnLoad=true;
			//INTENTA TRAER DATOS DE BUSQUEDA ANTERIOR
			this.traerDatosBusquedaDesdeSession();
					
			//SINO SE CUMPLE VIENE DE PADRE FOREIGN O BUSQUEDA ANTIGUA
			if(this.sAccionBusqueda.equals("")) {
				this.sAccionBusqueda="Todos";
			}
								
			this.procesarBusqueda(sAccionBusqueda);
			
		} catch (Exception e) {
			throw e;
		}
	}		
	
	public void inicializarPermisosRubroEmplea() {
		this.isPermisoTodoRubroEmplea=false;
		this.isPermisoNuevoRubroEmplea=false;
		this.isPermisoActualizarRubroEmplea=false;
		this.isPermisoActualizarOriginalRubroEmplea=false;
		this.isPermisoEliminarRubroEmplea=false;
		this.isPermisoGuardarCambiosRubroEmplea=false;
		this.isPermisoConsultaRubroEmplea=false;
		this.isPermisoBusquedaRubroEmplea=false;
		this.isPermisoReporteRubroEmplea=false;		
		this.isPermisoOrdenRubroEmplea=false;		
		this.isPermisoPaginacionMedioRubroEmplea=false;		
		this.isPermisoPaginacionAltoRubroEmplea=false;
		this.isPermisoPaginacionTodoRubroEmplea=false;
		this.isPermisoCopiarRubroEmplea=false;		
		this.isPermisoVerFormRubroEmplea=false;		
		this.isPermisoDuplicarRubroEmplea=false;		
		this.isPermisoOrdenRubroEmplea=false;		
	}
	
	public void setPermisosUsuarioRubroEmplea(Boolean isPermiso) {
		this.isPermisoTodoRubroEmplea=isPermiso;
		this.isPermisoNuevoRubroEmplea=isPermiso;
		this.isPermisoActualizarRubroEmplea=isPermiso;
		this.isPermisoActualizarOriginalRubroEmplea=isPermiso;
		this.isPermisoEliminarRubroEmplea=isPermiso;
		this.isPermisoGuardarCambiosRubroEmplea=isPermiso;
		this.isPermisoConsultaRubroEmplea=isPermiso;
		this.isPermisoBusquedaRubroEmplea=isPermiso;
		this.isPermisoReporteRubroEmplea=isPermiso;
		this.isPermisoOrdenRubroEmplea=isPermiso;		
		this.isPermisoPaginacionMedioRubroEmplea=isPermiso;		
		this.isPermisoPaginacionAltoRubroEmplea=isPermiso;		
		this.isPermisoPaginacionTodoRubroEmplea=isPermiso;		
		this.isPermisoCopiarRubroEmplea=isPermiso;		
		this.isPermisoVerFormRubroEmplea=isPermiso;		
		this.isPermisoDuplicarRubroEmplea=isPermiso;
		this.isPermisoOrdenRubroEmplea=isPermiso;
	}
	
	public void setPermisosMantenimientoUsuarioRubroEmplea(Boolean isPermiso) {
		//this.isPermisoTodoRubroEmplea=isPermiso;
		this.isPermisoNuevoRubroEmplea=isPermiso;
		this.isPermisoActualizarRubroEmplea=isPermiso;
		this.isPermisoActualizarOriginalRubroEmplea=isPermiso;
		this.isPermisoEliminarRubroEmplea=isPermiso;
		this.isPermisoGuardarCambiosRubroEmplea=isPermiso;
		//this.isPermisoConsultaRubroEmplea=isPermiso;
		//this.isPermisoBusquedaRubroEmplea=isPermiso;
		//this.isPermisoReporteRubroEmplea=isPermiso;
		//this.isPermisoOrdenRubroEmplea=isPermiso;		
		//this.isPermisoPaginacionMedioRubroEmplea=isPermiso;		
		//this.isPermisoPaginacionAltoRubroEmplea=isPermiso;		
		//this.isPermisoPaginacionTodoRubroEmplea=isPermiso;		
		//this.isPermisoCopiarRubroEmplea=isPermiso;		
		//this.isPermisoDuplicarRubroEmplea=isPermiso;
		//this.isPermisoOrdenRubroEmplea=isPermiso;
	}
	
	public void inicializarSetPermisosUsuarioRubroEmpleaClasesRelacionadas() throws Exception {
		ArrayList<String> arrPaginas=new ArrayList<String>();		
		ArrayList<Opcion> opcionsFinal=new ArrayList<Opcion>();	
		
		arrPaginas.add(HistorialPagoNomiConstantesFunciones.SNOMBREOPCION);
		arrPaginas.add(RubroEstructuraConstantesFunciones.SNOMBREOPCION);
		arrPaginas.add(DefiProvisionEmpleadoConstantesFunciones.SNOMBREOPCION);
		arrPaginas.add(EmpleadoPagoRubroConstantesFunciones.SNOMBREOPCION);
		arrPaginas.add(HistorialPagoMesNomiConstantesFunciones.SNOMBREOPCION);
		arrPaginas.add(RubroEmpleadoConstantesFunciones.SNOMBREOPCION);
		arrPaginas.add(ValorRubroVariableConstantesFunciones.SNOMBREOPCION);
		arrPaginas.add(TipoPrestamoConstantesFunciones.SNOMBREOPCION);
		arrPaginas.add(RubroEmpleaCuentaContableConstantesFunciones.SNOMBREOPCION);
		
		if(RubroEmpleaJInternalFrame.CON_LLAMADA_SIMPLE) {
			this.opcionsRelacionadas.addAll(this.sistemaReturnGeneral.getOpcionsRelacionadas());
			
		} else {
			if(Constantes.ISUSAEJBLOGICLAYER) {
				opcionsFinal=sistemaLogicAdditional.tienePermisosOpcionesEnPaginaWeb(this.usuarioActual, Constantes.LIDSISTEMAACTUAL, arrPaginas);
			} else if(Constantes.ISUSAEJBREMOTE) {
			} else if(Constantes.ISUSAEJBHOME) {
			}
			
			this.opcionsRelacionadas.addAll(opcionsFinal);
		}
		
		

		this.isTienePermisosHistorialPagoNomi=false;
		this.isTienePermisosHistorialPagoNomi=this.verificarGetPermisosUsuarioOpcionRubroEmpleaClaseRelacionada(this.opcionsRelacionadas,HistorialPagoNomiConstantesFunciones.SNOMBREOPCION);

		this.isTienePermisosRubroEstructura=false;
		this.isTienePermisosRubroEstructura=this.verificarGetPermisosUsuarioOpcionRubroEmpleaClaseRelacionada(this.opcionsRelacionadas,RubroEstructuraConstantesFunciones.SNOMBREOPCION);

		this.isTienePermisosDefiProvisionEmpleado=false;
		this.isTienePermisosDefiProvisionEmpleado=this.verificarGetPermisosUsuarioOpcionRubroEmpleaClaseRelacionada(this.opcionsRelacionadas,DefiProvisionEmpleadoConstantesFunciones.SNOMBREOPCION);

		this.isTienePermisosEmpleadoPagoRubro=false;
		this.isTienePermisosEmpleadoPagoRubro=this.verificarGetPermisosUsuarioOpcionRubroEmpleaClaseRelacionada(this.opcionsRelacionadas,EmpleadoPagoRubroConstantesFunciones.SNOMBREOPCION);

		this.isTienePermisosHistorialPagoMesNomi=false;
		this.isTienePermisosHistorialPagoMesNomi=this.verificarGetPermisosUsuarioOpcionRubroEmpleaClaseRelacionada(this.opcionsRelacionadas,HistorialPagoMesNomiConstantesFunciones.SNOMBREOPCION);

		this.isTienePermisosRubroEmpleado=false;
		this.isTienePermisosRubroEmpleado=this.verificarGetPermisosUsuarioOpcionRubroEmpleaClaseRelacionada(this.opcionsRelacionadas,RubroEmpleadoConstantesFunciones.SNOMBREOPCION);

		this.isTienePermisosValorRubroVariable=false;
		this.isTienePermisosValorRubroVariable=this.verificarGetPermisosUsuarioOpcionRubroEmpleaClaseRelacionada(this.opcionsRelacionadas,ValorRubroVariableConstantesFunciones.SNOMBREOPCION);

		this.isTienePermisosTipoPrestamo=false;
		this.isTienePermisosTipoPrestamo=this.verificarGetPermisosUsuarioOpcionRubroEmpleaClaseRelacionada(this.opcionsRelacionadas,TipoPrestamoConstantesFunciones.SNOMBREOPCION);

		this.isTienePermisosRubroEmpleaCuentaContable=false;
		this.isTienePermisosRubroEmpleaCuentaContable=this.verificarGetPermisosUsuarioOpcionRubroEmpleaClaseRelacionada(this.opcionsRelacionadas,RubroEmpleaCuentaContableConstantesFunciones.SNOMBREOPCION);
		
	}
	
	public Boolean tienePermisosUsuarioEnPaginaWebRubroEmplea(String sPagina) throws Exception {
		Boolean tienePermisos=false;
		
		if(Constantes.ISUSAEJBLOGICLAYER) {
			tienePermisos=sistemaLogicAdditional.tienePermisosEnPaginaWeb(this.usuarioActual, Constantes.LIDSISTEMAACTUAL, sPagina);
		} else if(Constantes.ISUSAEJBREMOTE) {
		} else if(Constantes.ISUSAEJBHOME) {
		}
		
		return tienePermisos;
	}
	
	public void inicializarSetPermisosUsuarioRubroEmpleaClasesRelacionadas(Boolean conPermiso) throws Exception {
		
		this.isTienePermisosHistorialPagoNomi=conPermiso;
		this.isTienePermisosRubroEstructura=conPermiso;
		this.isTienePermisosDefiProvisionEmpleado=conPermiso;
		this.isTienePermisosEmpleadoPagoRubro=conPermiso;
		this.isTienePermisosHistorialPagoMesNomi=conPermiso;
		this.isTienePermisosRubroEmpleado=conPermiso;
		this.isTienePermisosValorRubroVariable=conPermiso;
		this.isTienePermisosTipoPrestamo=conPermiso;
		this.isTienePermisosRubroEmpleaCuentaContable=conPermiso;
	}
	
	public Boolean verificarGetPermisosUsuarioRubroEmpleaClaseRelacionada(ArrayList<String> arrPaginasFinal,String sPaginaActual) throws Exception {
		Boolean verificado=false;
		
		verificado=Funciones2.verificarGetPermisosUsuarioClaseRelacionada(arrPaginasFinal,sPaginaActual);				
		
		return verificado;
	}
	
	public Boolean verificarGetPermisosUsuarioOpcionRubroEmpleaClaseRelacionada(List<Opcion> opcionsFinal,String sPaginaActual) throws Exception {
		Boolean verificado=false;
		
		verificado=Funciones2.verificarGetPermisosUsuarioOpcionClaseRelacionada(opcionsFinal,sPaginaActual);				
		
		return verificado;
	}
	
	public void actualizarTabsSetPermisosUsuarioRubroEmpleaClasesRelacionadas() throws Exception {
		

		if(!this.isTienePermisosHistorialPagoNomi && this.jInternalFrameDetalleFormRubroEmplea!=null && this.jInternalFrameDetalleFormRubroEmplea.historialpagonomiBeanSwingJInternalFrame!=null) {
			this.jInternalFrameDetalleFormRubroEmplea.jTabbedPaneRelacionesRubroEmplea.remove(this.jInternalFrameDetalleFormRubroEmplea.historialpagonomiBeanSwingJInternalFrame.getContentPane());
		}

		if(!this.isTienePermisosRubroEstructura && this.jInternalFrameDetalleFormRubroEmplea!=null && this.jInternalFrameDetalleFormRubroEmplea.rubroestructuraBeanSwingJInternalFrame!=null) {
			this.jInternalFrameDetalleFormRubroEmplea.jTabbedPaneRelacionesRubroEmplea.remove(this.jInternalFrameDetalleFormRubroEmplea.rubroestructuraBeanSwingJInternalFrame.getContentPane());
		}

		if(!this.isTienePermisosDefiProvisionEmpleado && this.jInternalFrameDetalleFormRubroEmplea!=null && this.jInternalFrameDetalleFormRubroEmplea.defiprovisionempleadoBeanSwingJInternalFrame!=null) {
			this.jInternalFrameDetalleFormRubroEmplea.jTabbedPaneRelacionesRubroEmplea.remove(this.jInternalFrameDetalleFormRubroEmplea.defiprovisionempleadoBeanSwingJInternalFrame.getContentPane());
		}

		if(!this.isTienePermisosEmpleadoPagoRubro && this.jInternalFrameDetalleFormRubroEmplea!=null && this.jInternalFrameDetalleFormRubroEmplea.empleadopagorubroBeanSwingJInternalFrame!=null) {
			this.jInternalFrameDetalleFormRubroEmplea.jTabbedPaneRelacionesRubroEmplea.remove(this.jInternalFrameDetalleFormRubroEmplea.empleadopagorubroBeanSwingJInternalFrame.getContentPane());
		}

		if(!this.isTienePermisosHistorialPagoMesNomi && this.jInternalFrameDetalleFormRubroEmplea!=null && this.jInternalFrameDetalleFormRubroEmplea.historialpagomesnomiBeanSwingJInternalFrame!=null) {
			this.jInternalFrameDetalleFormRubroEmplea.jTabbedPaneRelacionesRubroEmplea.remove(this.jInternalFrameDetalleFormRubroEmplea.historialpagomesnomiBeanSwingJInternalFrame.getContentPane());
		}

		if(!this.isTienePermisosRubroEmpleado && this.jInternalFrameDetalleFormRubroEmplea!=null && this.jInternalFrameDetalleFormRubroEmplea.rubroempleadoBeanSwingJInternalFrame!=null) {
			this.jInternalFrameDetalleFormRubroEmplea.jTabbedPaneRelacionesRubroEmplea.remove(this.jInternalFrameDetalleFormRubroEmplea.rubroempleadoBeanSwingJInternalFrame.getContentPane());
		}

		if(!this.isTienePermisosValorRubroVariable && this.jInternalFrameDetalleFormRubroEmplea!=null && this.jInternalFrameDetalleFormRubroEmplea.valorrubrovariableBeanSwingJInternalFrame!=null) {
			this.jInternalFrameDetalleFormRubroEmplea.jTabbedPaneRelacionesRubroEmplea.remove(this.jInternalFrameDetalleFormRubroEmplea.valorrubrovariableBeanSwingJInternalFrame.getContentPane());
		}

		if(!this.isTienePermisosTipoPrestamo && this.jInternalFrameDetalleFormRubroEmplea!=null && this.jInternalFrameDetalleFormRubroEmplea.tipoprestamoBeanSwingJInternalFrame!=null) {
			this.jInternalFrameDetalleFormRubroEmplea.jTabbedPaneRelacionesRubroEmplea.remove(this.jInternalFrameDetalleFormRubroEmplea.tipoprestamoBeanSwingJInternalFrame.getContentPane());
		}

		if(!this.isTienePermisosRubroEmpleaCuentaContable && this.jInternalFrameDetalleFormRubroEmplea!=null && this.jInternalFrameDetalleFormRubroEmplea.rubroempleacuentacontableBeanSwingJInternalFrame!=null) {
			this.jInternalFrameDetalleFormRubroEmplea.jTabbedPaneRelacionesRubroEmplea.remove(this.jInternalFrameDetalleFormRubroEmplea.rubroempleacuentacontableBeanSwingJInternalFrame.getContentPane());
		}
	}
	
	public void setPermisosUsuarioRubroEmplea() throws Exception {
		
		PerfilOpcion perfilOpcionUsuario=new PerfilOpcion();		
		Long idOpcion=this.opcionActual.getId();
		
		if(RubroEmpleaJInternalFrame.CON_LLAMADA_SIMPLE) {
			perfilOpcionUsuario=this.sistemaReturnGeneral.getPerfilOpcion();
			
		} else {
			if(this.rubroempleaSessionBean.getEsGuardarRelacionado()) {
				idOpcion=0L;
			}
			
			if(Constantes.ISUSAEJBLOGICLAYER) {	
				perfilOpcionUsuario=sistemaLogicAdditional.traerPermisosPaginaWebPerfilOpcion(this.usuarioActual, Constantes.LIDSISTEMAACTUAL, RubroEmpleaConstantesFunciones.SNOMBREOPCION,idOpcion);				
			} else if(Constantes.ISUSAEJBREMOTE) {
			} else if(Constantes.ISUSAEJBHOME) {
			}
		}
		
		if(perfilOpcionUsuario!=null && perfilOpcionUsuario.getId()>0) {
			this.isPermisoNuevoRubroEmplea=perfilOpcionUsuario.getingreso()||perfilOpcionUsuario.gettodo();
			this.isPermisoActualizarRubroEmplea=perfilOpcionUsuario.getmodificacion()||perfilOpcionUsuario.gettodo();
			this.isPermisoActualizarOriginalRubroEmplea=this.isPermisoActualizarRubroEmplea;
			this.isPermisoEliminarRubroEmplea=perfilOpcionUsuario.geteliminacion()||perfilOpcionUsuario.gettodo();
			this.isPermisoGuardarCambiosRubroEmplea=perfilOpcionUsuario.getguardar_cambios()||perfilOpcionUsuario.gettodo();
			this.isPermisoConsultaRubroEmplea=perfilOpcionUsuario.getconsulta()||perfilOpcionUsuario.gettodo();
			this.isPermisoBusquedaRubroEmplea=perfilOpcionUsuario.getbusqueda()||perfilOpcionUsuario.gettodo();
			this.isPermisoTodoRubroEmplea=perfilOpcionUsuario.gettodo()||perfilOpcionUsuario.gettodo();
			this.isPermisoReporteRubroEmplea=perfilOpcionUsuario.getreporte()||perfilOpcionUsuario.gettodo();
			this.isPermisoOrdenRubroEmplea=perfilOpcionUsuario.getorden()||perfilOpcionUsuario.gettodo();
			this.isPermisoPaginacionMedioRubroEmplea=perfilOpcionUsuario.getpaginacion_medio()||perfilOpcionUsuario.gettodo();
			this.isPermisoPaginacionAltoRubroEmplea=perfilOpcionUsuario.getpaginacion_alto()||perfilOpcionUsuario.gettodo();
			this.isPermisoPaginacionTodoRubroEmplea=perfilOpcionUsuario.getpaginacion_todo()||perfilOpcionUsuario.gettodo();
			this.isPermisoCopiarRubroEmplea=perfilOpcionUsuario.getcopiar()||perfilOpcionUsuario.gettodo();
			this.isPermisoVerFormRubroEmplea=true;//perfilOpcionUsuario.getver_form()||perfilOpcionUsuario.gettodo();
			this.isPermisoDuplicarRubroEmplea=perfilOpcionUsuario.getduplicar()||perfilOpcionUsuario.gettodo();
			this.isPermisoOrdenRubroEmplea=perfilOpcionUsuario.getorden()||perfilOpcionUsuario.gettodo();
			
			if(this.rubroempleaSessionBean.getEsGuardarRelacionado()) {
				this.opcionActual.setId(perfilOpcionUsuario.getid_opcion());
				
				this.jTableDatosRubroEmplea.setToolTipText(this.jTableDatosRubroEmplea.getToolTipText()+"_"+perfilOpcionUsuario.getid_opcion());		
			}
		} else {
			this.setPermisosUsuarioRubroEmplea(false);
		}
		
		//SI SE NECESITA PONER TODOS LOS PERMISOS POR DEFECTO
		//
		
	}
	
	public void setAccionesUsuarioRubroEmplea(Boolean esParaAccionesFormulario) throws Exception {		
		Reporte reporte=null;
		
		if(!esParaAccionesFormulario) {
			this.accions=new ArrayList<Accion>();
			
			if(RubroEmpleaJInternalFrame.CON_LLAMADA_SIMPLE) {
				this.accions=this.sistemaReturnGeneral.getAccions();
				
				
			} else {
				if(Constantes.ISUSAEJBLOGICLAYER) {	
					this.accions=sistemaLogicAdditional.getAccionesUsuario(this.usuarioActual,this.opcionActual,false);				
				} else if(Constantes.ISUSAEJBREMOTE) {
				} else if(Constantes.ISUSAEJBHOME) {
				}
			}
			
			if(this.accions.size()>0) {			
				for(Accion accion:this.accions) {
					reporte=new Reporte();
					reporte.setsCodigo(accion.getcodigo());
					reporte.setsDescripcion(accion.getnombre());
		
		
					this.tiposAcciones.add(reporte);
				}
			}	
			
			

			reporte=new Reporte();
			reporte.setsCodigo("");
			reporte.setsDescripcion("");

			this.tiposAcciones.add(reporte);
			
		} else {
			//ACCIONES FORMULARIO
			this.accionsFormulario=new ArrayList<Accion>();
			
			if(RubroEmpleaJInternalFrame.CON_LLAMADA_SIMPLE) {
				this.accionsFormulario=this.sistemaReturnGeneral.getAccionsFormulario();
			
			} else {
				if(Constantes.ISUSAEJBLOGICLAYER) {	
					this.accionsFormulario=sistemaLogicAdditional.getAccionesUsuario(this.usuarioActual,this.opcionActual,true);				
				} else if(Constantes.ISUSAEJBREMOTE) {
				} else if(Constantes.ISUSAEJBHOME) {
				}
			}
			
			if(this.accionsFormulario.size()>0) {			
				for(Accion accion:this.accionsFormulario) {
					reporte=new Reporte();
					reporte.setsCodigo(accion.getcodigo());
					reporte.setsDescripcion(accion.getnombre());
					
					this.tiposAccionesFormulario.add(reporte);
				}
			}	
			
			

			reporte=new Reporte();
			reporte.setsCodigo("");
			reporte.setsDescripcion("");

			this.tiposAccionesFormulario.add(reporte);
		}				
	}	 	
	
	public void setRelacionesUsuarioRubroEmplea() throws Exception {
		Reporte reporte=null;
		
		

		if(this.isTienePermisosHistorialPagoNomi && this.rubroempleaConstantesFunciones.mostrarHistorialPagoNomiRubroEmplea && !RubroEmpleaConstantesFunciones.ISGUARDARREL) {

			reporte=new Reporte();
			reporte.setsCodigo("Historial Pago Nomi");
			reporte.setsDescripcion("Historial Pago Nomi");
			this.tiposRelaciones.add(reporte);
		}

		if(this.isTienePermisosRubroEstructura && this.rubroempleaConstantesFunciones.mostrarRubroEstructuraRubroEmplea && !RubroEmpleaConstantesFunciones.ISGUARDARREL) {

			reporte=new Reporte();
			reporte.setsCodigo("Rubro Estructura");
			reporte.setsDescripcion("Rubro Estructura");
			this.tiposRelaciones.add(reporte);
		}

		if(this.isTienePermisosDefiProvisionEmpleado && this.rubroempleaConstantesFunciones.mostrarDefiProvisionEmpleadoRubroEmplea && !RubroEmpleaConstantesFunciones.ISGUARDARREL) {

			reporte=new Reporte();
			reporte.setsCodigo("Defi Provision Empleado");
			reporte.setsDescripcion("Defi Provision Empleado");
			this.tiposRelaciones.add(reporte);
		}

		if(this.isTienePermisosEmpleadoPagoRubro && this.rubroempleaConstantesFunciones.mostrarEmpleadoPagoRubroRubroEmplea && !RubroEmpleaConstantesFunciones.ISGUARDARREL) {

			reporte=new Reporte();
			reporte.setsCodigo("Empleado Pago Rubro");
			reporte.setsDescripcion("Empleado Pago Rubro");
			this.tiposRelaciones.add(reporte);
		}

		if(this.isTienePermisosHistorialPagoMesNomi && this.rubroempleaConstantesFunciones.mostrarHistorialPagoMesNomiRubroEmplea && !RubroEmpleaConstantesFunciones.ISGUARDARREL) {

			reporte=new Reporte();
			reporte.setsCodigo("Historial Pago Mes Nomi");
			reporte.setsDescripcion("Historial Pago Mes Nomi");
			this.tiposRelaciones.add(reporte);
		}

		if(this.isTienePermisosRubroEmpleado && this.rubroempleaConstantesFunciones.mostrarRubroEmpleadoRubroEmplea && !RubroEmpleaConstantesFunciones.ISGUARDARREL) {

			reporte=new Reporte();
			reporte.setsCodigo("Rubro Empleado");
			reporte.setsDescripcion("Rubro Empleado");
			this.tiposRelaciones.add(reporte);
		}

		if(this.isTienePermisosValorRubroVariable && this.rubroempleaConstantesFunciones.mostrarValorRubroVariableRubroEmplea && !RubroEmpleaConstantesFunciones.ISGUARDARREL) {

			reporte=new Reporte();
			reporte.setsCodigo("Valor Rubro Variable");
			reporte.setsDescripcion("Valor Rubro Variable");
			this.tiposRelaciones.add(reporte);
		}

		if(this.isTienePermisosTipoPrestamo && this.rubroempleaConstantesFunciones.mostrarTipoPrestamoRubroEmplea && !RubroEmpleaConstantesFunciones.ISGUARDARREL) {

			reporte=new Reporte();
			reporte.setsCodigo("Tipo Prestamo");
			reporte.setsDescripcion("Tipo Prestamo");
			this.tiposRelaciones.add(reporte);
		}

		if(this.isTienePermisosRubroEmpleaCuentaContable && this.rubroempleaConstantesFunciones.mostrarRubroEmpleaCuentaContableRubroEmplea && !RubroEmpleaConstantesFunciones.ISGUARDARREL) {

			reporte=new Reporte();
			reporte.setsCodigo("Rubro Emplea Cuenta Contable");
			reporte.setsDescripcion("Rubro Emplea Cuenta Contable");
			this.tiposRelaciones.add(reporte);
		}
		
		
		//ORDENAR ALFABETICAMENTE
		Collections.sort(this.tiposRelaciones, new ReporteComparator());
		/*
		reporte=new Reporte();
		reporte.setsCodigo(accion.getcodigo());
		reporte.setsDescripcion(accion.getnombre());
			
		this.tiposRelaciones.add(reporte);
		*/
	}	
	
		
	@SuppressWarnings({ "unchecked", "rawtypes" } )
	public void inicializarCombosForeignKeyRubroEmpleaListas()throws Exception {
		try	{						
			
				this.empresasForeignKey=new ArrayList();
				this.tipocalculosForeignKey=new ArrayList();
				this.tiporubroempleasForeignKey=new ArrayList();
				this.tipogruporubroempleasForeignKey=new ArrayList();
		} catch(Exception e) {
			throw e;
		}		
	}
	
	public void cargarCombosTodosForeignKeyRubroEmpleaListas(Boolean cargarCombosDependencia)throws Exception {
		try	{
			
			ArrayList<String> arrColumnasGlobales=new ArrayList<String>();
			String  finalQueryGlobal="";
			String sFinalQueryCombo="";
			
			Modulo  moduloActualAux=new Modulo();
			
			if(RubroEmpleaJInternalFrame.ISLOAD_FKLOTE) {
				this.cargarCombosLoteForeignKeyRubroEmpleaListas(false);
			} else {
			
				this.cargarCombosForeignKeyEmpresaListas(cargarCombosDependencia,sFinalQueryCombo);
				this.cargarCombosForeignKeyTipoCalculoListas(cargarCombosDependencia,sFinalQueryCombo);
				this.cargarCombosForeignKeyTipoRubroEmpleaListas(cargarCombosDependencia,sFinalQueryCombo);
				this.cargarCombosForeignKeyTipoGrupoRubroEmpleaListas(cargarCombosDependencia,sFinalQueryCombo);
			}
		} catch(Exception e) {
			throw e;
		}		
	}		
	
	

	public void cargarCombosForeignKeyEmpresaListas(Boolean cargarCombosDependencia,String sFinalQuery)throws Exception {
		try	{
			ArrayList<String> arrColumnasGlobales=new ArrayList<String>();

			String  finalQueryGlobal="";

			Modulo  moduloActualAux=new Modulo();

			if((this.empresasForeignKey==null||this.empresasForeignKey.size()<=0)) {
				this.arrDatoGeneral= new  ArrayList<DatoGeneral>();
				this.arrDatoGeneralNo= new  ArrayList<String>();

				arrColumnasGlobales=EmpresaConstantesFunciones.getArrayColumnasGlobalesEmpresa(this.arrDatoGeneral,this.arrDatoGeneralNo);
				finalQueryGlobal=Funciones.GetWhereGlobalConstants(this.parametroGeneralUsuario,this.moduloActual,true,false,arrColumnasGlobales,EmpresaConstantesFunciones.TABLENAME);

				finalQueryGlobal=Funciones.GetFinalQueryAppend(finalQueryGlobal, sFinalQuery);
				finalQueryGlobal=Funciones.GetFinalQueryAppend(finalQueryGlobal, "");

				finalQueryGlobal+=EmpresaConstantesFunciones.SFINALQUERY;

				this.cargarCombosEmpresasForeignKeyLista(finalQueryGlobal);
			}

		} catch(Exception e) {
			throw e;
		}
	}

	public void cargarCombosForeignKeyTipoCalculoListas(Boolean cargarCombosDependencia,String sFinalQuery)throws Exception {
		try	{
			ArrayList<String> arrColumnasGlobales=new ArrayList<String>();

			String  finalQueryGlobal="";

			Modulo  moduloActualAux=new Modulo();

			if((this.tipocalculosForeignKey==null||this.tipocalculosForeignKey.size()<=0)) {
				this.arrDatoGeneral= new  ArrayList<DatoGeneral>();
				this.arrDatoGeneralNo= new  ArrayList<String>();

				arrColumnasGlobales=TipoCalculoConstantesFunciones.getArrayColumnasGlobalesTipoCalculo(this.arrDatoGeneral,this.arrDatoGeneralNo);
				finalQueryGlobal=Funciones.GetWhereGlobalConstants(this.parametroGeneralUsuario,this.moduloActual,true,false,arrColumnasGlobales,TipoCalculoConstantesFunciones.TABLENAME);

				finalQueryGlobal=Funciones.GetFinalQueryAppend(finalQueryGlobal, sFinalQuery);
				finalQueryGlobal=Funciones.GetFinalQueryAppend(finalQueryGlobal, "");

				finalQueryGlobal+=TipoCalculoConstantesFunciones.SFINALQUERY;

				this.cargarCombosTipoCalculosForeignKeyLista(finalQueryGlobal);
			}

		} catch(Exception e) {
			throw e;
		}
	}

	public void cargarCombosForeignKeyTipoRubroEmpleaListas(Boolean cargarCombosDependencia,String sFinalQuery)throws Exception {
		try	{
			ArrayList<String> arrColumnasGlobales=new ArrayList<String>();

			String  finalQueryGlobal="";

			Modulo  moduloActualAux=new Modulo();

			if((this.tiporubroempleasForeignKey==null||this.tiporubroempleasForeignKey.size()<=0)) {
				this.arrDatoGeneral= new  ArrayList<DatoGeneral>();
				this.arrDatoGeneralNo= new  ArrayList<String>();

				arrColumnasGlobales=TipoRubroEmpleaConstantesFunciones.getArrayColumnasGlobalesTipoRubroEmplea(this.arrDatoGeneral,this.arrDatoGeneralNo);
				finalQueryGlobal=Funciones.GetWhereGlobalConstants(this.parametroGeneralUsuario,this.moduloActual,true,false,arrColumnasGlobales,TipoRubroEmpleaConstantesFunciones.TABLENAME);

				finalQueryGlobal=Funciones.GetFinalQueryAppend(finalQueryGlobal, sFinalQuery);
				finalQueryGlobal=Funciones.GetFinalQueryAppend(finalQueryGlobal, "");

				finalQueryGlobal+=TipoRubroEmpleaConstantesFunciones.SFINALQUERY;

				this.cargarCombosTipoRubroEmpleasForeignKeyLista(finalQueryGlobal);
			}

		} catch(Exception e) {
			throw e;
		}
	}

	public void cargarCombosForeignKeyTipoGrupoRubroEmpleaListas(Boolean cargarCombosDependencia,String sFinalQuery)throws Exception {
		try	{
			ArrayList<String> arrColumnasGlobales=new ArrayList<String>();

			String  finalQueryGlobal="";

			Modulo  moduloActualAux=new Modulo();

			if((this.tipogruporubroempleasForeignKey==null||this.tipogruporubroempleasForeignKey.size()<=0)) {
				this.arrDatoGeneral= new  ArrayList<DatoGeneral>();
				this.arrDatoGeneralNo= new  ArrayList<String>();

				arrColumnasGlobales=TipoGrupoRubroEmpleaConstantesFunciones.getArrayColumnasGlobalesTipoGrupoRubroEmplea(this.arrDatoGeneral,this.arrDatoGeneralNo);
				finalQueryGlobal=Funciones.GetWhereGlobalConstants(this.parametroGeneralUsuario,this.moduloActual,true,false,arrColumnasGlobales,TipoGrupoRubroEmpleaConstantesFunciones.TABLENAME);

				finalQueryGlobal=Funciones.GetFinalQueryAppend(finalQueryGlobal, sFinalQuery);
				finalQueryGlobal=Funciones.GetFinalQueryAppend(finalQueryGlobal, "");

				finalQueryGlobal+=TipoGrupoRubroEmpleaConstantesFunciones.SFINALQUERY;

				this.cargarCombosTipoGrupoRubroEmpleasForeignKeyLista(finalQueryGlobal);
			}

		} catch(Exception e) {
			throw e;
		}
	}
	
	public void cargarCombosLoteForeignKeyRubroEmpleaListas(Boolean cargarCombosDependencia)throws Exception {
		try	{
			
			ArrayList<String> arrColumnasGlobales=new ArrayList<String>();
			String  finalQueryGlobal="";
			
			Modulo  moduloActualAux=new Modulo();
			
			
			RubroEmpleaParameterReturnGeneral rubroempleaReturnGeneral=new RubroEmpleaParameterReturnGeneral();
						
			


				String finalQueryGlobalEmpresa="";

				if(((this.empresasForeignKey==null||this.empresasForeignKey.size()<=0) && this.rubroempleaConstantesFunciones.cargarid_empresaRubroEmplea)
					 || (this.esRecargarFks && this.rubroempleaConstantesFunciones.cargarid_empresaRubroEmplea)) {

					if(!this.rubroempleaSessionBean.getisBusquedaDesdeForeignKeySesionEmpresa()) {

						this.arrDatoGeneral= new  ArrayList<DatoGeneral>();
						this.arrDatoGeneralNo= new  ArrayList<String>();


						arrColumnasGlobales=EmpresaConstantesFunciones.getArrayColumnasGlobalesEmpresa(this.arrDatoGeneral,this.arrDatoGeneralNo);
						finalQueryGlobalEmpresa=Funciones.GetWhereGlobalConstants(this.parametroGeneralUsuario,this.moduloActual,true,false,arrColumnasGlobales,EmpresaConstantesFunciones.TABLENAME);

						finalQueryGlobalEmpresa=Funciones.GetFinalQueryAppend(finalQueryGlobalEmpresa, "");
						finalQueryGlobalEmpresa+=EmpresaConstantesFunciones.SFINALQUERY;

						//this.cargarCombosEmpresasForeignKeyLista(finalQueryGlobal);
					} else {
						finalQueryGlobalEmpresa=" WHERE " + ConstantesSql.ID + "="+rubroempleaSessionBean.getlidEmpresaActual();
					}
				} else {
					finalQueryGlobalEmpresa="NONE";
				}


				String finalQueryGlobalTipoCalculo="";

				if(((this.tipocalculosForeignKey==null||this.tipocalculosForeignKey.size()<=0) && this.rubroempleaConstantesFunciones.cargarid_tipo_calculoRubroEmplea)
					 || (this.esRecargarFks && this.rubroempleaConstantesFunciones.cargarid_tipo_calculoRubroEmplea)) {

					if(!this.rubroempleaSessionBean.getisBusquedaDesdeForeignKeySesionTipoCalculo()) {

						this.arrDatoGeneral= new  ArrayList<DatoGeneral>();
						this.arrDatoGeneralNo= new  ArrayList<String>();


						arrColumnasGlobales=TipoCalculoConstantesFunciones.getArrayColumnasGlobalesTipoCalculo(this.arrDatoGeneral,this.arrDatoGeneralNo);
						finalQueryGlobalTipoCalculo=Funciones.GetWhereGlobalConstants(this.parametroGeneralUsuario,this.moduloActual,true,false,arrColumnasGlobales,TipoCalculoConstantesFunciones.TABLENAME);

						finalQueryGlobalTipoCalculo=Funciones.GetFinalQueryAppend(finalQueryGlobalTipoCalculo, "");
						finalQueryGlobalTipoCalculo+=TipoCalculoConstantesFunciones.SFINALQUERY;

						//this.cargarCombosTipoCalculosForeignKeyLista(finalQueryGlobal);
					} else {
						finalQueryGlobalTipoCalculo=" WHERE " + ConstantesSql.ID + "="+rubroempleaSessionBean.getlidTipoCalculoActual();
					}
				} else {
					finalQueryGlobalTipoCalculo="NONE";
				}


				String finalQueryGlobalTipoRubroEmplea="";

				if(((this.tiporubroempleasForeignKey==null||this.tiporubroempleasForeignKey.size()<=0) && this.rubroempleaConstantesFunciones.cargarid_tipo_rubro_empleaRubroEmplea)
					 || (this.esRecargarFks && this.rubroempleaConstantesFunciones.cargarid_tipo_rubro_empleaRubroEmplea)) {

					if(!this.rubroempleaSessionBean.getisBusquedaDesdeForeignKeySesionTipoRubroEmplea()) {

						this.arrDatoGeneral= new  ArrayList<DatoGeneral>();
						this.arrDatoGeneralNo= new  ArrayList<String>();


						arrColumnasGlobales=TipoRubroEmpleaConstantesFunciones.getArrayColumnasGlobalesTipoRubroEmplea(this.arrDatoGeneral,this.arrDatoGeneralNo);
						finalQueryGlobalTipoRubroEmplea=Funciones.GetWhereGlobalConstants(this.parametroGeneralUsuario,this.moduloActual,true,false,arrColumnasGlobales,TipoRubroEmpleaConstantesFunciones.TABLENAME);

						finalQueryGlobalTipoRubroEmplea=Funciones.GetFinalQueryAppend(finalQueryGlobalTipoRubroEmplea, "");
						finalQueryGlobalTipoRubroEmplea+=TipoRubroEmpleaConstantesFunciones.SFINALQUERY;

						//this.cargarCombosTipoRubroEmpleasForeignKeyLista(finalQueryGlobal);
					} else {
						finalQueryGlobalTipoRubroEmplea=" WHERE " + ConstantesSql.ID + "="+rubroempleaSessionBean.getlidTipoRubroEmpleaActual();
					}
				} else {
					finalQueryGlobalTipoRubroEmplea="NONE";
				}


				String finalQueryGlobalTipoGrupoRubroEmplea="";

				if(((this.tipogruporubroempleasForeignKey==null||this.tipogruporubroempleasForeignKey.size()<=0) && this.rubroempleaConstantesFunciones.cargarid_tipo_grupo_rubro_empleaRubroEmplea)
					 || (this.esRecargarFks && this.rubroempleaConstantesFunciones.cargarid_tipo_grupo_rubro_empleaRubroEmplea)) {

					if(!this.rubroempleaSessionBean.getisBusquedaDesdeForeignKeySesionTipoGrupoRubroEmplea()) {

						this.arrDatoGeneral= new  ArrayList<DatoGeneral>();
						this.arrDatoGeneralNo= new  ArrayList<String>();


						arrColumnasGlobales=TipoGrupoRubroEmpleaConstantesFunciones.getArrayColumnasGlobalesTipoGrupoRubroEmplea(this.arrDatoGeneral,this.arrDatoGeneralNo);
						finalQueryGlobalTipoGrupoRubroEmplea=Funciones.GetWhereGlobalConstants(this.parametroGeneralUsuario,this.moduloActual,true,false,arrColumnasGlobales,TipoGrupoRubroEmpleaConstantesFunciones.TABLENAME);

						finalQueryGlobalTipoGrupoRubroEmplea=Funciones.GetFinalQueryAppend(finalQueryGlobalTipoGrupoRubroEmplea, "");
						finalQueryGlobalTipoGrupoRubroEmplea+=TipoGrupoRubroEmpleaConstantesFunciones.SFINALQUERY;

						//this.cargarCombosTipoGrupoRubroEmpleasForeignKeyLista(finalQueryGlobal);
					} else {
						finalQueryGlobalTipoGrupoRubroEmplea=" WHERE " + ConstantesSql.ID + "="+rubroempleaSessionBean.getlidTipoGrupoRubroEmpleaActual();
					}
				} else {
					finalQueryGlobalTipoGrupoRubroEmplea="NONE";
				}
			
			//ARCHITECTURE			
			if(Constantes.ISUSAEJBLOGICLAYER) {	
				rubroempleaReturnGeneral=rubroempleaLogic.cargarCombosLoteForeignKeyRubroEmplea(finalQueryGlobalEmpresa,finalQueryGlobalTipoCalculo,finalQueryGlobalTipoRubroEmplea,finalQueryGlobalTipoGrupoRubroEmplea);//WithConnection
			} else if(Constantes.ISUSAEJBREMOTE) {
			} else if(Constantes.ISUSAEJBHOME) {
			}			
			//ARCHITECTURE
			
			

			if(!finalQueryGlobalEmpresa.equals("NONE")) {
				this.empresasForeignKey=rubroempleaReturnGeneral.getempresasForeignKey();
			}

			if(!finalQueryGlobalTipoCalculo.equals("NONE")) {
				this.tipocalculosForeignKey=rubroempleaReturnGeneral.gettipocalculosForeignKey();
			}

			if(!finalQueryGlobalTipoRubroEmplea.equals("NONE")) {
				this.tiporubroempleasForeignKey=rubroempleaReturnGeneral.gettiporubroempleasForeignKey();
			}

			if(!finalQueryGlobalTipoGrupoRubroEmplea.equals("NONE")) {
				this.tipogruporubroempleasForeignKey=rubroempleaReturnGeneral.gettipogruporubroempleasForeignKey();
			}
			
			
		} catch(Exception e) {
			throw e;
		}		
	}
	
	public void addItemDefectoCombosTodosForeignKeyRubroEmplea()throws Exception {
		try {
			
			this.addItemDefectoCombosForeignKeyEmpresa();
			this.addItemDefectoCombosForeignKeyTipoCalculo();
			this.addItemDefectoCombosForeignKeyTipoRubroEmplea();
			this.addItemDefectoCombosForeignKeyTipoGrupoRubroEmplea();
		} catch(Exception e) {
			throw e;
		}		
	}
	
	



	public void addItemDefectoCombosForeignKeyEmpresa()throws Exception {
		try {
			if(this.rubroempleaSessionBean==null) {
				this.rubroempleaSessionBean=new RubroEmpleaSessionBean();
			}

			if(!this.rubroempleaSessionBean.getisBusquedaDesdeForeignKeySesionEmpresa()) {
				Empresa empresa=new Empresa();
				EmpresaConstantesFunciones.setEmpresaDescripcion(empresa,Constantes.SMENSAJE_ESCOJA_OPCION);
				empresa.setId(null);

				if(!EmpresaConstantesFunciones.ExisteEnLista(this.empresasForeignKey,empresa,true)) {

					this.empresasForeignKey.add(0,empresa);
				}
			}
		} catch(Exception e) {
			throw e;
		}
	}

	public void addItemDefectoCombosForeignKeyTipoCalculo()throws Exception {
		try {

			if(!this.rubroempleaSessionBean.getisBusquedaDesdeForeignKeySesionTipoCalculo()) {
				TipoCalculo tipocalculo=new TipoCalculo();
				TipoCalculoConstantesFunciones.setTipoCalculoDescripcion(tipocalculo,Constantes.SMENSAJE_ESCOJA_OPCION);
				tipocalculo.setId(null);

				if(!TipoCalculoConstantesFunciones.ExisteEnLista(this.tipocalculosForeignKey,tipocalculo,true)) {

					this.tipocalculosForeignKey.add(0,tipocalculo);
				}
			}
		} catch(Exception e) {
			throw e;
		}
	}

	public void addItemDefectoCombosForeignKeyTipoRubroEmplea()throws Exception {
		try {

			if(!this.rubroempleaSessionBean.getisBusquedaDesdeForeignKeySesionTipoRubroEmplea()) {
				TipoRubroEmplea tiporubroemplea=new TipoRubroEmplea();
				TipoRubroEmpleaConstantesFunciones.setTipoRubroEmpleaDescripcion(tiporubroemplea,Constantes.SMENSAJE_ESCOJA_OPCION);
				tiporubroemplea.setId(null);

				if(!TipoRubroEmpleaConstantesFunciones.ExisteEnLista(this.tiporubroempleasForeignKey,tiporubroemplea,true)) {

					this.tiporubroempleasForeignKey.add(0,tiporubroemplea);
				}
			}
		} catch(Exception e) {
			throw e;
		}
	}

	public void addItemDefectoCombosForeignKeyTipoGrupoRubroEmplea()throws Exception {
		try {

			if(!this.rubroempleaSessionBean.getisBusquedaDesdeForeignKeySesionTipoGrupoRubroEmplea()) {
				TipoGrupoRubroEmplea tipogruporubroemplea=new TipoGrupoRubroEmplea();
				TipoGrupoRubroEmpleaConstantesFunciones.setTipoGrupoRubroEmpleaDescripcion(tipogruporubroemplea,Constantes.SMENSAJE_ESCOJA_OPCION);
				tipogruporubroemplea.setId(null);

				if(!TipoGrupoRubroEmpleaConstantesFunciones.ExisteEnLista(this.tipogruporubroempleasForeignKey,tipogruporubroemplea,true)) {

					this.tipogruporubroempleasForeignKey.add(0,tipogruporubroemplea);
				}
			}
		} catch(Exception e) {
			throw e;
		}
	}
	
	public void initActionsCombosTodosForeignKeyRubroEmplea()throws Exception {
		try {
			
		} catch(Exception e) {
			throw e;
		}		
	}
	
	public void initActionsCombosTodosForeignKeyRubroEmplea(String sFormularioTipoBusqueda)throws Exception {
		try {
			
		} catch(Exception e) {
			throw e;
		}		
	}
	
	


	
	


	
	public void setVariablesGlobalesCombosForeignKeyRubroEmplea()throws Exception {	
		try {
			if(this.parametroGeneralUsuario!=null && this.parametroGeneralUsuario.getId()>0) {
			
				this.setActualEmpresaForeignKey(this.parametroGeneralUsuario.getid_empresa(),false,"Formulario");
			
			
			}
			
			//INICIALIZA VARIABLES COMBOS GLOBALES AUXILIARES A FORMULARIO(Anio,Mes)
			this.setVariablesGlobalesAuxiliaresCombosForeignKeyRubroEmplea();
		
		} catch(Exception e) {
			throw e;
		}
	}
	
	public void setVariablesObjetoActualToFormularioForeignKeyRubroEmplea(RubroEmplea rubroemplea)throws Exception {	
		try {
			
			this.setActualTipoCalculoForeignKey(rubroemplea.getid_tipo_calculo(),false,"Formulario");
			this.setActualTipoRubroEmpleaForeignKey(rubroemplea.getid_tipo_rubro_emplea(),false,"Formulario");
			this.setActualTipoGrupoRubroEmpleaForeignKey(rubroemplea.getid_tipo_grupo_rubro_emplea(),false,"Formulario");			
		} catch(Exception e) {
			throw e;
		}
	}
	
	public void setVariablesObjetoActualToListasForeignKeyRubroEmplea(RubroEmplea rubroemplea,String sTipoEvento)throws Exception {	
		try {
			
			
			
		} catch(Exception e) {
			throw e;
		}
	}
	
	/*
	public void setVariablesCombosFromBeanForeignKeyRubroEmplea()throws Exception {	
		try {
			
			this.setActualTipoCalculoForeignKey(this.rubroempleaConstantesFunciones.getid_tipo_calculo(),false,"Formulario");
			this.setActualTipoRubroEmpleaForeignKey(this.rubroempleaConstantesFunciones.getid_tipo_rubro_emplea(),false,"Formulario");
			this.setActualTipoGrupoRubroEmpleaForeignKey(this.rubroempleaConstantesFunciones.getid_tipo_grupo_rubro_emplea(),false,"Formulario");			
		} catch(Exception e) {
			throw e;
		}
	}
	*/
	
	public void setVariablesGlobalesAuxiliaresCombosForeignKeyRubroEmplea()throws Exception {	
		try {
			
		
		} catch(Exception e) {
			throw e;
		}
	}
	
	public void setVariablesDefaultCombosForeignKeyRubroEmplea()throws Exception {	
		try {
			
		} catch(Exception e) {
			throw e;
		}
	}
	
	public void setVariablesParametroCombosForeignKeyRubroEmplea()throws Exception {	
		try {
			
		} catch(Exception e) {
			throw e;
		}
	}		
	
	public void cargarCombosParametroRubroEmplea()throws Exception {
		try	{
			ArrayList<String> arrColumnasGlobales=new ArrayList<String>();
			String  finalQueryGlobal="";
			
			//this.cargarDatosCliente();
			
			
			
		} catch(Exception e) {
			throw e;
		}		
	}
		
	public void cargarCombosFrameForeignKeyRubroEmplea()throws Exception {
		try {
			

			this.cargarCombosFrameEmpresasForeignKey("Todos");
			this.cargarCombosFrameTipoCalculosForeignKey("Todos");
			this.cargarCombosFrameTipoRubroEmpleasForeignKey("Todos");
			this.cargarCombosFrameTipoGrupoRubroEmpleasForeignKey("Todos");

		} catch(Exception e) {
			throw e;
		}		
	}		
	
	public void cargarCombosFrameForeignKeyRubroEmplea(String sFormularioTipoBusqueda)throws Exception {
		try {
			

			this.cargarCombosFrameEmpresasForeignKey(sFormularioTipoBusqueda);
			this.cargarCombosFrameTipoCalculosForeignKey(sFormularioTipoBusqueda);
			this.cargarCombosFrameTipoRubroEmpleasForeignKey(sFormularioTipoBusqueda);
			this.cargarCombosFrameTipoGrupoRubroEmpleasForeignKey(sFormularioTipoBusqueda);

		} catch(Exception e) {
			throw e;
		}		
	}	
	
	public void setItemDefectoCombosForeignKeyRubroEmplea()throws Exception {
		try {
			



			if(this.jInternalFrameDetalleFormRubroEmplea.jComboBoxid_empresaRubroEmplea!=null && this.jInternalFrameDetalleFormRubroEmplea.jComboBoxid_empresaRubroEmplea.getItemCount()>0) {
				this.jInternalFrameDetalleFormRubroEmplea.jComboBoxid_empresaRubroEmplea.setSelectedIndex(0);
			}

			if(this.jInternalFrameDetalleFormRubroEmplea.jComboBoxid_tipo_calculoRubroEmplea!=null && this.jInternalFrameDetalleFormRubroEmplea.jComboBoxid_tipo_calculoRubroEmplea.getItemCount()>0) {
				this.jInternalFrameDetalleFormRubroEmplea.jComboBoxid_tipo_calculoRubroEmplea.setSelectedIndex(0);
			}

			if(this.jInternalFrameDetalleFormRubroEmplea.jComboBoxid_tipo_rubro_empleaRubroEmplea!=null && this.jInternalFrameDetalleFormRubroEmplea.jComboBoxid_tipo_rubro_empleaRubroEmplea.getItemCount()>0) {
				this.jInternalFrameDetalleFormRubroEmplea.jComboBoxid_tipo_rubro_empleaRubroEmplea.setSelectedIndex(0);
			}

			if(this.jInternalFrameDetalleFormRubroEmplea.jComboBoxid_tipo_grupo_rubro_empleaRubroEmplea!=null && this.jInternalFrameDetalleFormRubroEmplea.jComboBoxid_tipo_grupo_rubro_empleaRubroEmplea.getItemCount()>0) {
				this.jInternalFrameDetalleFormRubroEmplea.jComboBoxid_tipo_grupo_rubro_empleaRubroEmplea.setSelectedIndex(0);
			}
		} catch(Exception e) {
			throw e;
		}		
	}		
	
	








	
	

	public RubroEmpleaBeanSwingJInternalFrame() throws Exception {
		super(false,PaginaTipo.PRINCIPAL);
	}
	
	public RubroEmpleaBeanSwingJInternalFrame(Boolean cargarRelaciones,PaginaTipo paginaTipo) throws Exception {
		super(cargarRelaciones,paginaTipo);
	}
	
	public RubroEmpleaBeanSwingJInternalFrame(Boolean conGuardarRelaciones,Boolean esGuardarRelacionado,Boolean cargarRelaciones,PaginaTipo paginaTipo) throws Exception {
		super(cargarRelaciones,paginaTipo);
		
		this.rubroempleaSessionBean=new RubroEmpleaSessionBean(); 
		this.rubroempleaConstantesFunciones=new RubroEmpleaConstantesFunciones(); 
		this.rubroempleaBean=new RubroEmplea();//(this.rubroempleaConstantesFunciones); 		
		this.rubroempleaReturnGeneral=new RubroEmpleaParameterReturnGeneral(); 
		
		this.rubroempleaSessionBean.setConGuardarRelaciones(conGuardarRelaciones);
		this.rubroempleaSessionBean.setEsGuardarRelacionado(esGuardarRelacionado);
				
	}
	
	public RubroEmpleaBeanSwingJInternalFrame(Boolean blncargarCombostrForeignKey,Boolean blnCargarInformacionInicial,JDesktopPane jdesktopPane,Usuario usuarioActual,ResumenUsuario resumenUsuarioActual,Modulo moduloActual,Opcion opcionActual,ParametroGeneralSg parametroGeneralSg,ParametroGeneralUsuario parametroGeneralUsuario,Boolean conGuardarRelaciones,Boolean esGuardarRelacionado,Boolean cargarRelaciones,Boolean cargarTodosDatos,PaginaTipo paginaTipo) throws Exception {
		this(blncargarCombostrForeignKey,blnCargarInformacionInicial,jdesktopPane,usuarioActual,resumenUsuarioActual,moduloActual,opcionActual,parametroGeneralSg,parametroGeneralUsuario,paginaTipo,conGuardarRelaciones,esGuardarRelacionado,cargarRelaciones,cargarTodosDatos);
	}
		
	public RubroEmpleaBeanSwingJInternalFrame(Boolean blncargarCombostrForeignKey,Boolean blnCargarInformacionInicial,JDesktopPane jdesktopPane,Usuario usuarioActual,ResumenUsuario resumenUsuarioActual,Modulo moduloActual,Opcion opcionActual,ParametroGeneralSg parametroGeneralSg,ParametroGeneralUsuario parametroGeneralUsuario,Boolean cargarRelaciones,Boolean cargarTodosDatos,PaginaTipo paginaTipo) throws Exception {
		this(blncargarCombostrForeignKey,blnCargarInformacionInicial,jdesktopPane,usuarioActual,resumenUsuarioActual,moduloActual,opcionActual,parametroGeneralSg,parametroGeneralUsuario,paginaTipo,false,false,cargarRelaciones,cargarTodosDatos);
	}	
	
	public RubroEmpleaBeanSwingJInternalFrame(Boolean blncargarCombostrForeignKey,Boolean blnCargarInformacionInicial,JDesktopPane jdesktopPane,Usuario usuarioActual,ResumenUsuario resumenUsuarioActual,Modulo moduloActual,Opcion opcionActual,ParametroGeneralSg parametroGeneralSg,ParametroGeneralUsuario parametroGeneralUsuario,PaginaTipo paginaTipo,Boolean conGuardarRelaciones,Boolean esGuardarRelacionado,Boolean cargarRelaciones,Boolean cargarTodosDatos) throws Exception //Boolean esParaBusquedaForeignKey
    {
		super(jdesktopPane,conGuardarRelaciones,esGuardarRelacionado,cargarRelaciones,usuarioActual,resumenUsuarioActual,moduloActual,opcionActual,parametroGeneralSg,parametroGeneralUsuario,paginaTipo);
		
		try {
			
			this.permiteRecargarForm=false;
			
			this.startProcessRubroEmplea(true);
			
			Boolean esParaBusquedaForeignKey=false;//ANTES USADO COMO PARAMETRO DEL CONSTRUCTOR
			
			if(paginaTipo.equals(PaginaTipo.BUSQUEDA)) {
				esParaBusquedaForeignKey=true;
			}
			
			
			
			//SE ASIGNA EN CLASE PADRE
			/*
			this.parametroGeneralSg=parametroGeneralSg;		
			this.parametroGeneralUsuario=parametroGeneralUsuario;	
			this.usuarioActual=usuarioActual;
			this.moduloActual=moduloActual;
			*/						
			
			long start_time=0;
			long end_time=0;
			
			if(Constantes2.ISDEVELOPING2) {
				start_time = System.currentTimeMillis();
			}
			
			if(!cargarTodosDatos) {
				this.sAccionBusqueda="NINGUNO";
			}
			
			this.rubroempleaConstantesFunciones=new RubroEmpleaConstantesFunciones(); 
			this.rubroempleaBean=new RubroEmplea();//this.rubroempleaConstantesFunciones); 			
			this.rubroempleaReturnGeneral=new RubroEmpleaParameterReturnGeneral(); 
		
			RubroEmpleaBeanSwingJInternalFrameAdditional.CargaInicialInicio(this, "NORMAL", null);
			
			this.setTitle(Funciones.GetTituloSistema(this.parametroGeneralSg,this.moduloActual,this.usuarioActual,"Rubro Emplea Mantenimiento",paginaTipo));			
			
			this.conTotales=false;
			
			this.conTotales=true;
			
			
			this.rubroemplea=new RubroEmplea();
			this.rubroempleas = new ArrayList<RubroEmplea>();
			this.rubroempleasAux = new ArrayList<RubroEmplea>();
			
			if(Constantes.ISUSAEJBLOGICLAYER) {
				this.rubroempleaLogic=new RubroEmpleaLogic();
				this.rubroempleaLogic.getNewConnexionToDeep("");
			}
			
			//this.rubroempleaSessionBean.setConGuardarRelaciones(conGuardarRelaciones);
			//this.rubroempleaSessionBean.setEsGuardarRelacionado(esGuardarRelacionado);
			
			this.jDesktopPane=jdesktopPane;
			
			if(this.jDesktopPane.getClass().equals(JDesktopPaneMe.class)) {
				this.constantes2=((JDesktopPaneMe)this.jDesktopPane).constantes2;
			}
			
			if(!Constantes.CON_VARIAS_VENTANAS) {
    			MainJFrame.cerrarJInternalFramesExistentes(this.jDesktopPane,this.jInternalFrameDetalleFormRubroEmplea);
				
				if(!this.conCargarMinimo) {
					
					if(this.jInternalFrameReporteDinamicoRubroEmplea!=null) {
						MainJFrame.cerrarJInternalFramesExistentes(this.jDesktopPane,this.jInternalFrameReporteDinamicoRubroEmplea);	
					}
					
					if(this.jInternalFrameImportacionRubroEmplea!=null) {
						MainJFrame.cerrarJInternalFramesExistentes(this.jDesktopPane,this.jInternalFrameImportacionRubroEmplea);							
					}
					
				}
				
				
				if(!this.conCargarMinimo) {
					
					if(this.jInternalFrameOrderByRubroEmplea!=null) {
						MainJFrame.cerrarJInternalFramesExistentes(this.jDesktopPane,this.jInternalFrameOrderByRubroEmplea);					
					}
					
				}
			}
			
			//DETALLE DATOS
			if(this.jInternalFrameDetalleFormRubroEmplea!=null) { //this.conCargarFormDetalle) {
				this.jDesktopPane.add(this.jInternalFrameDetalleFormRubroEmplea);
				this.jInternalFrameDetalleFormRubroEmplea.setVisible(false);
				this.jInternalFrameDetalleFormRubroEmplea.setSelected(false);						
			}
			
			if(!this.conCargarMinimo) {
				
				//REPORTE DINAMICO
				if(this.jInternalFrameReporteDinamicoRubroEmplea!=null) {
					this.jDesktopPane.add(this.jInternalFrameReporteDinamicoRubroEmplea);
					this.jInternalFrameReporteDinamicoRubroEmplea.setVisible(false);
					this.jInternalFrameReporteDinamicoRubroEmplea.setSelected(false);
				}
				
				//IMPORTACION
				if(this.jInternalFrameImportacionRubroEmplea!=null) {
					this.jDesktopPane.add(this.jInternalFrameImportacionRubroEmplea);
					this.jInternalFrameImportacionRubroEmplea.setVisible(false);
					this.jInternalFrameImportacionRubroEmplea.setSelected(false);
				}
				
				
			}
			
			
			if(!this.conCargarMinimo) {
				
				if(this.jInternalFrameOrderByRubroEmplea!=null) {
					this.jDesktopPane.add(this.jInternalFrameOrderByRubroEmplea);
					this.jInternalFrameOrderByRubroEmplea.setVisible(false);
					this.jInternalFrameOrderByRubroEmplea.setSelected(false);				
				}
				
			}
			
			
			//this.esParaBusquedaForeignKey=false;
			this.esParaBusquedaForeignKey=esParaBusquedaForeignKey;
			
			this.invalidValues=new InvalidValue[0];
			
			
			
			this.idRubroEmpleaActual=0L;
			this.rowIndexActual=0;
			
			
			this.iNumeroPaginacionPagina=0;
			this.iNumeroPaginacion=RubroEmpleaConstantesFunciones.INUMEROPAGINACION;
			this.pagination=new Pagination();
			this.datosCliente=new DatosCliente();
			this.lIdUsuarioSesion=0L;	
			this.sTipoArchivoReporte="";
			this.sTipoArchivoReporteDinamico="";
			this.sTipoReporte="";
			this.sTipoReporteDinamico="";
			this.sTipoPaginacion="";
			this.sTipoRelacion="";
			this.sTipoAccion="";
			this.sTipoAccionFormulario="";
			this.sTipoSeleccionar="";			
			this.sDetalleReporte="";
			this.sTipoReporteExtra="";
			this.sValorCampoGeneral="";
			this.sPathReporteDinamico="";			
			
			this.isMostrarNumeroPaginacion=false;
			this.isSeleccionarTodos=false;
			this.isSeleccionados=false;
			this.conGraficoReporte=false;
			this.isPostAccionNuevo=false;
			this.isPostAccionSinCerrar=false;
			this.isPostAccionSinMensaje=false;
			this.esReporteDinamico=false;
			this.esRecargarFks=false;
			this.esReporteAccionProceso=false;
			
			this.rubroempleaReturnGeneral=new RubroEmpleaParameterReturnGeneral();
			
			this.rubroempleaParameterGeneral=new RubroEmpleaParameterReturnGeneral();
			
			
			
			this.sistemaLogicAdditional=new SistemaLogicAdditional();
			
			this.sistemaLogicAdditional.setConnexion(this.rubroempleaLogic.getConnexion());			
			
			
			
			
			
			
			
			//VERIFICAR GLOBAL
			this.cargarDatosCliente();			
			
			
			if(!this.rubroempleaSessionBean.getEsGuardarRelacionado()) {
				if(Constantes.ISUSAEJBLOGICLAYER) {	
					if(!sistemaLogicAdditional.validarLicenciaCliente(this.datosCliente,this.moduloActual,this.usuarioActual)) {
					 	this.setVisible(false);
						throw new Exception(Mensajes.SERROR_CONTROLGLOBAL);
					}
					
				} else if(Constantes.ISUSAEJBREMOTE) {
					
				} else if(Constantes.ISUSAEJBHOME) {
				}
			}			
			
			//VERIFICAR GLOBAL
			
			//VERIFICAR SESSION ACTUAL
			//this.cargarDatosCliente();
			
			this.sistemaReturnGeneral=new SistemaParameterReturnGeneral();
			
			SistemaParameterReturnGeneralAdditional.inicializarSinSeguridad(this.sistemaReturnGeneral);
			
			if(RubroEmpleaJInternalFrame.CON_LLAMADA_SIMPLE) {
				if(this.rubroempleaSessionBean.getEsGuardarRelacionado()) {
					this.opcionActual.setId(0L);
					
					//idOpcion=0L;					
				}
				
				ArrayList<String> arrPaginas=new ArrayList<String>();		
				ArrayList<Opcion> opcionsFinal=new ArrayList<Opcion>();	
				
				arrPaginas.add(HistorialPagoNomiConstantesFunciones.SNOMBREOPCION);
				arrPaginas.add(RubroEstructuraConstantesFunciones.SNOMBREOPCION);
				arrPaginas.add(DefiProvisionEmpleadoConstantesFunciones.SNOMBREOPCION);
				arrPaginas.add(EmpleadoPagoRubroConstantesFunciones.SNOMBREOPCION);
				arrPaginas.add(HistorialPagoMesNomiConstantesFunciones.SNOMBREOPCION);
				arrPaginas.add(RubroEmpleadoConstantesFunciones.SNOMBREOPCION);
				arrPaginas.add(ValorRubroVariableConstantesFunciones.SNOMBREOPCION);
				arrPaginas.add(TipoPrestamoConstantesFunciones.SNOMBREOPCION);
				arrPaginas.add(RubroEmpleaCuentaContableConstantesFunciones.SNOMBREOPCION);
		
				if(Constantes.ISUSAEJBLOGICLAYER) {	
					//this.sistemaReturnGeneral=sistemaLogicAdditional.validarCargarSesionUsuarioActualWithConnection(this.usuarioActual,this.datosCliente,this.resumenUsuarioActual,Constantes.LIDSISTEMAACTUAL,RubroEmpleaConstantesFunciones.SNOMBREOPCION,this.opcionActual,this.rubroempleaSessionBean.getEsGuardarRelacionado(),this.rubroempleaSessionBean.getConGuardarRelaciones(),arrPaginas);
					
					this.sistemaReturnGeneral=sistemaLogicAdditional.validarCargarSesionUsuarioActual(this.usuarioActual,this.datosCliente,this.resumenUsuarioActual,Constantes.LIDSISTEMAACTUAL,RubroEmpleaConstantesFunciones.SNOMBREOPCION,this.opcionActual,this.rubroempleaSessionBean.getEsGuardarRelacionado(),this.rubroempleaSessionBean.getConGuardarRelaciones(),arrPaginas);
					
					if(!this.sistemaReturnGeneral.getEsValidado()) {
					 	this.setVisible(false);
						throw new Exception(Mensajes.SERROR_SESIONACTUAL);
					}
				} else if(Constantes.ISUSAEJBREMOTE) {
				} else if(Constantes.ISUSAEJBHOME) {
					//FALTA
				}
			} else { 
				if(Constantes.ISUSAEJBLOGICLAYER) {	
					if(!sistemaLogicAdditional.validarSesionUsuarioActual(this.usuarioActual,this.datosCliente,this.resumenUsuarioActual)) {
					 	this.setVisible(false);
						throw new Exception(Mensajes.SERROR_SESIONACTUAL);
					}
				
				} else if(Constantes.ISUSAEJBREMOTE) {
					
				} else if(Constantes.ISUSAEJBHOME) {
				}
			} 
			//VERIFICAR SESSION ACTUAL
			
			
			this.sVisibilidadTablaBusquedas="table-row";
			this.sVisibilidadTablaElementos="none";
			this.sVisibilidadTablaAcciones="none";
			
			this.isVisibilidadCeldaNuevoRubroEmplea=false;
			this.isVisibilidadCeldaDuplicarRubroEmplea=true;
			this.isVisibilidadCeldaCopiarRubroEmplea=true;
			this.isVisibilidadCeldaVerFormRubroEmplea=true;
			this.isVisibilidadCeldaOrdenRubroEmplea=true;
			this.isVisibilidadCeldaNuevoRelacionesRubroEmplea=false;
			this.isVisibilidadCeldaModificarRubroEmplea=false;
			this.isVisibilidadCeldaActualizarRubroEmplea=false;
			this.isVisibilidadCeldaEliminarRubroEmplea=false;
			this.isVisibilidadCeldaCancelarRubroEmplea=false;
			this.isVisibilidadCeldaGuardarRubroEmplea=false;
			this.isVisibilidadCeldaGuardarCambiosRubroEmplea=false;
			
			
			this.isVisibilidadFK_IdEmpresa=true;
			this.isVisibilidadFK_IdTipoCalculo=true;
			this.isVisibilidadFK_IdTipoGrupoRubroEmplea=true;
			this.isVisibilidadFK_IdTipoRubroEmplea=true;
			
			//ELEMENTOS TABLAS PARAMETOS
			
			
			
			//ELEMENTOS TABLAS PARAMETOS_FIN
			
			//this.actualizarEstadoCeldasBotonesRubroEmplea("n", isGuardarCambiosEnLote, isEsMantenimientoRelacionado);
						
			
			
			this.inicializarPermisosRubroEmplea();
			
			//INICIALIZAR FALSE, TALVEZ COMENTAR
			this.setPermisosUsuarioRubroEmplea(false);
			
			this.setPermisosUsuarioRubroEmplea();
			
			
			
			//FUNCIONALIDAD_RELACIONADO
			if(!this.rubroempleaSessionBean.getEsGuardarRelacionado() 
				|| (this.rubroempleaSessionBean.getEsGuardarRelacionado() && this.rubroempleaSessionBean.getConGuardarRelaciones())) {
				
				this.inicializarSetPermisosUsuarioRubroEmpleaClasesRelacionadas();
			}
			
			if(this.rubroempleaSessionBean.getConGuardarRelaciones()) {
				this.actualizarTabsSetPermisosUsuarioRubroEmpleaClasesRelacionadas();
			}
			
			
			
			//SOLO SE EJECUTA LA PRIMERA VEZ, BINDINGS SI FUNCIONA
			if(!RubroEmpleaJInternalFrame.ISBINDING_MANUAL) {
				this.inicializarActualizarBindingBotonesPermisosRubroEmplea();
			} else {
				this.inicializarActualizarBindingBotonesPermisosManualRubroEmplea();
			}
			
			if(!this.isPermisoBusquedaRubroEmplea) {
				//BYDAN_BUSQUEDAS
				
				this.jTabbedPaneBusquedasRubroEmplea.setVisible(false);				
				
			}
			
			
			
			//FUNCIONALIDAD_RELACIONADO
			if(!this.rubroempleaSessionBean.getEsGuardarRelacionado()) {				
				this.tiposArchivosReportes=Funciones.getListTiposArchivosReportes();
				this.tiposArchivosReportesDinamico=Funciones.getListTiposArchivosReportes();
				this.tiposReportes=Funciones.getListTiposReportes(false);
				this.tiposReportesDinamico=Funciones.getListTiposReportesDinamico(false);
				
				
				this.tiposReportes.add(new Reporte("RELACIONES","RELACIONES"));
				this.tiposReportesDinamico.add(new Reporte("RELACIONES","RELACIONES"));
				
				this.tiposGraficosReportes=Funciones2.getListTiposGraficosReportes();
				this.tiposPaginacion=Funciones2.getListTiposPaginacion(this.isPermisoPaginacionMedioRubroEmplea,this.isPermisoPaginacionMedioRubroEmplea,this.isPermisoPaginacionTodoRubroEmplea);
				this.tiposSeleccionar=Funciones2.getListTiposSeleccionar();
				this.tiposSeleccionar.addAll(RubroEmpleaConstantesFunciones.getTiposSeleccionarRubroEmplea());
				
				this.tiposColumnasSelect=RubroEmpleaConstantesFunciones.getTiposSeleccionarRubroEmplea(true);
				
				this.tiposRelacionesSelect=new ArrayList<Reporte>();								
				
				this.cargarTiposRelacionesSelectRubroEmplea();				
				//this.tiposRelacionesSelect=RubroEmpleaConstantesFunciones.getTiposRelacionesRubroEmplea(true);
				
			} else {
				this.tiposArchivosReportes=new ArrayList<Reporte>();
				this.tiposArchivosReportesDinamico=new ArrayList<Reporte>();
				this.tiposReportes=new ArrayList<Reporte>();
				this.tiposReportesDinamico=new ArrayList<Reporte>();
				this.tiposGraficosReportes=new ArrayList<Reporte>();
				this.tiposPaginacion=new ArrayList<Reporte>();
				this.tiposSeleccionar=new ArrayList<Reporte>();			
				this.tiposColumnasSelect=new ArrayList<Reporte>();	
				this.tiposRelacionesSelect=new ArrayList<Reporte>();	
			}
						
			
			//FUNCIONALIDAD_RELACIONADO
			//if(!this.rubroempleaSessionBean.getEsGuardarRelacionado()) {
				//SE ENCUENTRA MAS ADELANTE CON ACCIONES POR USUARIO
				//ACCIONES GENERALES Y POR USUARIO
				this.tiposRelaciones=Funciones2.getListTiposRelaciones();
				this.setRelacionesUsuarioRubroEmplea();
				
				this.tiposAcciones=Funciones2.getListTiposAcciones(false,false,true);
				this.setAccionesUsuarioRubroEmplea(false);	
				
				this.tiposAccionesFormulario=Funciones2.getListTiposAccionesFormulario(false,false,true);							
				this.setAccionesUsuarioRubroEmplea(true);	
				
				this.inicializarActualizarBindingtiposArchivosReportesAccionesRubroEmplea() ;
			
			/*
			} else {
				this.tiposAcciones=new ArrayList<Reporte>();
				this.tiposAccionesFormulario=new ArrayList<Reporte>();
			}
			*/						
			
			this.inicializarInvalidValues();
						
			this.arrDatoGeneral= new  ArrayList<DatoGeneral>();
			this.arrDatoGeneralNo= new  ArrayList<String>();
			
			
			
			this.arrOrderBy= new  ArrayList<OrderBy>();
			
			
			this.arrDatoGeneralMinimos= new  ArrayList<DatoGeneralMinimo>();
			
			
			this.traerValoresTablaOrderBy();			
			
			
			this.isGuardarCambiosEnLote=false;
			this.isCargarCombosDependencia=false;
			
			
			this.historialpagonomiLogic=new HistorialPagoNomiLogic();
			this.rubroestructuraLogic=new RubroEstructuraLogic();
			this.defiprovisionempleadoLogic=new DefiProvisionEmpleadoLogic();
			this.empleadopagorubroLogic=new EmpleadoPagoRubroLogic();
			this.historialpagomesnomiLogic=new HistorialPagoMesNomiLogic();
			this.rubroempleadoLogic=new RubroEmpleadoLogic();
			this.valorrubrovariableLogic=new ValorRubroVariableLogic();
			this.tipoprestamoLogic=new TipoPrestamoLogic();
			this.rubroempleacuentacontableLogic=new RubroEmpleaCuentaContableLogic(); 
			jasperPrint = null;												
			
			//FK
			
			this.empresaLogic=new EmpresaLogic();
			this.tipocalculoLogic=new TipoCalculoLogic();
			this.tiporubroempleaLogic=new TipoRubroEmpleaLogic();
			this.tipogruporubroempleaLogic=new TipoGrupoRubroEmpleaLogic();
			
			//PARAMETROS
			
			
			/*
			if(Constantes.ISUSAEJBREMOTE || Constantes.ISUSAEJBHOME) {		
				hashtableEnv =  Funciones.getHashtableEnv();		
				initialContext = new InitialContext(hashtableEnv);	
			}
			*/
			/*
			if(Constantes.ISUSAEJBREMOTE) {
				rubroempleaImplementable= (RubroEmpleaImplementable) initialContext.lookup(Constantes.SEJBPACKAGE+Constantes.SEJBSEPARATOR+RubroEmpleaConstantesFunciones.SEJBNAME+Constantes.SEJBSEPARATOR+Constantes.SEJBREMOTE);
			} else if(Constantes.ISUSAEJBHOME) {
				rubroempleaImplementableHome= (RubroEmpleaImplementableHome) initialContext.lookup(Constantes.SEJBPACKAGE+Constantes.SEJBSEPARATOR+RubroEmpleaConstantesFunciones.SEJBNAME+Constantes.SEJBSEPARATOR+Constantes.SEJBLOCAL);
			}			
			*/
			
			
			this.rubroempleas= new ArrayList<RubroEmplea>();
			this.rubroempleasEliminados= new ArrayList<RubroEmplea>();
						
			this.isEsNuevoRubroEmplea=false;
			this.esParaAccionDesdeFormularioRubroEmplea=false;
			this.isEsMantenimientoRelacionesRelacionadoUnico=false;
			this.isEsMantenimientoRelaciones=false;
			this.isEsMantenimientoRelacionado=false;
			this.isContieneImagenes=false;
			
			
			
			
			
			//INICIALIZAR LISTAS FK
			
			this.empresasForeignKey=new ArrayList<Empresa>() ;
			this.tipocalculosForeignKey=new ArrayList<TipoCalculo>() ;
			this.tiporubroempleasForeignKey=new ArrayList<TipoRubroEmplea>() ;
			this.tipogruporubroempleasForeignKey=new ArrayList<TipoGrupoRubroEmplea>() ;
			
			
			
			
			if(blncargarCombostrForeignKey) {
				this.cargarCombosForeignKeyRubroEmplea(this.isCargarCombosDependencia);
			}
			
			this.cargarCombosParametroRubroEmplea();
			
			
			
			
			
			//FUNCIONALIDAD_RELACIONADO
			if(!this.rubroempleaSessionBean.getEsGuardarRelacionado()) {
				this.onLoad();
			}
						
			RubroEmpleaBeanSwingJInternalFrameAdditional.RecargarVentanaSegunOpcion(this,opcionActual);
			
			/*
			if(blnCargarInformacionInicial) {
				this.recargarInformacion();
			}
			*/
			//this.iNumeroPaginacionPagina=0;
			//this.iNumeroPaginacion=RubroEmpleaConstantesFunciones.INUMEROPAGINACION;
			
			this.actualizarEstadoCeldasBotonesRubroEmplea("n", isGuardarCambiosEnLote, isEsMantenimientoRelacionado);
			//SOLO LA PRIMERA VEZ HACE LOS BINDINGS, SOLO AHI FUNCIONA
			this.inicializarActualizarBindingRubroEmplea(true); 
			
			//SE REDIMENSIONA SINO NO SE ACTUALIZA
			this.redimensionarTablaDatos();
			
			
			this.initActions();
			
			;
						
			if(this.jInternalFrameDetalleFormRubroEmplea!=null) {//if(this.conCargarFormDetalle) {
				this.cargarMenuRelaciones();
			}
			
			//OBLIGA CARGAR DETALLE, MEJOR DESHABILITAR, FALTA TALVEZ PONER EN SELECCIONAR
			//MAYBE
			//this.updateControlesFormularioRubroEmplea();
			
			if(!this.conCargarMinimo) {
				this.updateBusquedasFormularioRubroEmplea();
			}
			
			RubroEmpleaBeanSwingJInternalFrameAdditional.CargaInicial(this, "NORMAL", null);
			
			
			//SE REALIZA ESTO PARA QUE SE PUEDA RECORRER TAB SIN IMPORTAR ORDEN
			Boolean existeTabBusqueda=false;
			
			if(!this.conCargarMinimo) {
				//BYDAN_BUSQUEDAS
				
				
				for(int i=0; i<this.jTabbedPaneBusquedasRubroEmplea.getTabCount(); i++) {
					this.jTabbedPaneBusquedasRubroEmplea.setSelectedIndex(i);
						
					if(!existeTabBusqueda) {
						existeTabBusqueda=true;
					}
				}
					
				if(existeTabBusqueda) {
					this.jTabbedPaneBusquedasRubroEmplea.setSelectedIndex(0);
				}	
				
				
			}
			
			
			if(Constantes.ISUSAEJBLOGICLAYER) {
				this.rubroempleaLogic.commitNewConnexionToDeep();
			}
			
			
			if(Constantes2.ISDEVELOPING2) {
				end_time = System.currentTimeMillis();			
				String sTipo="Load Ventana";
				Funciones2.getMensajeTiempoEjecucion(start_time, end_time, sTipo,false);
			}  
			
			this.finishProcessRubroEmplea(true);
			
			this.dEnd=(double)System.currentTimeMillis();
			
			this.dDif=this.dEnd - this.dStart;
			
			if(Constantes.ISDEVELOPING) {
				System.out.println("Tiempo(ms) Carga RubroEmplea: " + this.dDif); 
			}
			
			this.permiteRecargarForm=true;
			
		} catch(Exception e) {
			
			if(Constantes.ISUSAEJBLOGICLAYER) {
				this.rubroempleaLogic.rollbackNewConnexionToDeep();
			}
			
			FuncionesSwing.manageException(this, e,logger,RubroEmpleaConstantesFunciones.CLASSNAME);
		
		} finally {
			if(Constantes.ISUSAEJBLOGICLAYER) {
				this.rubroempleaLogic.closeNewConnexionToDeep();
			}
		}	 
    }
	
	public void cargarTiposRelacionesSelectRubroEmplea() {
		Reporte reporte=new Reporte();
		
	

		reporte=new Reporte();
		reporte.setsCodigo(HistorialPagoNomiConstantesFunciones.SCLASSWEBTITULO);
		reporte.setsDescripcion(HistorialPagoNomiConstantesFunciones.SCLASSWEBTITULO);
		this.tiposRelacionesSelect.add(reporte);

		reporte=new Reporte();
		reporte.setsCodigo(RubroEstructuraConstantesFunciones.SCLASSWEBTITULO);
		reporte.setsDescripcion(RubroEstructuraConstantesFunciones.SCLASSWEBTITULO);
		this.tiposRelacionesSelect.add(reporte);

		reporte=new Reporte();
		reporte.setsCodigo(DefiProvisionEmpleadoConstantesFunciones.SCLASSWEBTITULO);
		reporte.setsDescripcion(DefiProvisionEmpleadoConstantesFunciones.SCLASSWEBTITULO);
		this.tiposRelacionesSelect.add(reporte);

		reporte=new Reporte();
		reporte.setsCodigo(EmpleadoPagoRubroConstantesFunciones.SCLASSWEBTITULO);
		reporte.setsDescripcion(EmpleadoPagoRubroConstantesFunciones.SCLASSWEBTITULO);
		this.tiposRelacionesSelect.add(reporte);

		reporte=new Reporte();
		reporte.setsCodigo(HistorialPagoMesNomiConstantesFunciones.SCLASSWEBTITULO);
		reporte.setsDescripcion(HistorialPagoMesNomiConstantesFunciones.SCLASSWEBTITULO);
		this.tiposRelacionesSelect.add(reporte);

		reporte=new Reporte();
		reporte.setsCodigo(RubroEmpleadoConstantesFunciones.SCLASSWEBTITULO);
		reporte.setsDescripcion(RubroEmpleadoConstantesFunciones.SCLASSWEBTITULO);
		this.tiposRelacionesSelect.add(reporte);

		reporte=new Reporte();
		reporte.setsCodigo(ValorRubroVariableConstantesFunciones.SCLASSWEBTITULO);
		reporte.setsDescripcion(ValorRubroVariableConstantesFunciones.SCLASSWEBTITULO);
		this.tiposRelacionesSelect.add(reporte);

		reporte=new Reporte();
		reporte.setsCodigo(TipoPrestamoConstantesFunciones.SCLASSWEBTITULO);
		reporte.setsDescripcion(TipoPrestamoConstantesFunciones.SCLASSWEBTITULO);
		this.tiposRelacionesSelect.add(reporte);

		reporte=new Reporte();
		reporte.setsCodigo(RubroEmpleaCuentaContableConstantesFunciones.SCLASSWEBTITULO);
		reporte.setsDescripcion(RubroEmpleaCuentaContableConstantesFunciones.SCLASSWEBTITULO);
		this.tiposRelacionesSelect.add(reporte);
	}
	
	
	
	public void jTabbedPaneChangeListenerGeneral(String sTipo,ChangeEvent evt) { 	  
		Boolean procesaCargarParteTab=false;
			
		try {
			int iIndex=0;		    			
			String sTitle="";
			
			//TABBED PANE RELACIONES
			if(sTipo.equals("RelacionesRubroEmplea")) {
				iIndex=this.jInternalFrameDetalleFormRubroEmplea.jTabbedPaneRelacionesRubroEmplea.getSelectedIndex();		    
			
				sTitle=this.jInternalFrameDetalleFormRubroEmplea.jTabbedPaneRelacionesRubroEmplea.getTitleAt(iIndex);
				
				Integer intSelectedRow = 0;	
			
				intSelectedRow = this.jTableDatosRubroEmplea.getSelectedRow();	
				
				

				if(sTitle.equals("Defi Provision Empleados")) {
					if(!DefiProvisionEmpleadoJInternalFrame.ESTA_CARGADO_PORPARTE) {
						procesaCargarParteTab=true;
						this.startProcessRubroEmplea();

						this.cargarParteTabPanelRelacionadaDefiProvisionEmpleado(iIndex,intSelectedRow);
					}
					
				}

				if(sTitle.equals("Empleado Pago Rubros")) {
					if(!EmpleadoPagoRubroJInternalFrame.ESTA_CARGADO_PORPARTE) {
						procesaCargarParteTab=true;
						this.startProcessRubroEmplea();

						this.cargarParteTabPanelRelacionadaEmpleadoPagoRubro(iIndex,intSelectedRow);
					}
					
				}

				if(sTitle.equals("Historial Pago Mes Nomis")) {
					if(!HistorialPagoMesNomiJInternalFrame.ESTA_CARGADO_PORPARTE) {
						procesaCargarParteTab=true;
						this.startProcessRubroEmplea();

						this.cargarParteTabPanelRelacionadaHistorialPagoMesNomi(iIndex,intSelectedRow);
					}
					
				}

				if(sTitle.equals("Historial Pago Nomis")) {
					if(!HistorialPagoNomiJInternalFrame.ESTA_CARGADO_PORPARTE) {
						procesaCargarParteTab=true;
						this.startProcessRubroEmplea();

						this.cargarParteTabPanelRelacionadaHistorialPagoNomi(iIndex,intSelectedRow);
					}
					
				}

				if(sTitle.equals("Rubro Emplea Cuenta Contables")) {
					if(!RubroEmpleaCuentaContableJInternalFrame.ESTA_CARGADO_PORPARTE) {
						procesaCargarParteTab=true;
						this.startProcessRubroEmplea();

						this.cargarParteTabPanelRelacionadaRubroEmpleaCuentaContable(iIndex,intSelectedRow);
					}
					
				}

				if(sTitle.equals("Rubro Empleados")) {
					if(!RubroEmpleadoJInternalFrame.ESTA_CARGADO_PORPARTE) {
						procesaCargarParteTab=true;
						this.startProcessRubroEmplea();

						this.cargarParteTabPanelRelacionadaRubroEmpleado(iIndex,intSelectedRow);
					}
					
				}

				if(sTitle.equals("Rubro Estructuras")) {
					if(!RubroEstructuraJInternalFrame.ESTA_CARGADO_PORPARTE) {
						procesaCargarParteTab=true;
						this.startProcessRubroEmplea();

						this.cargarParteTabPanelRelacionadaRubroEstructura(iIndex,intSelectedRow);
					}
					
				}

				if(sTitle.equals("Tipo Prestamos")) {
					if(!TipoPrestamoJInternalFrame.ESTA_CARGADO_PORPARTE) {
						procesaCargarParteTab=true;
						this.startProcessRubroEmplea();

						this.cargarParteTabPanelRelacionadaTipoPrestamo(iIndex,intSelectedRow);
					}
					
				}

				if(sTitle.equals("Valor Rubro Variables")) {
					if(!ValorRubroVariableJInternalFrame.ESTA_CARGADO_PORPARTE) {
						procesaCargarParteTab=true;
						this.startProcessRubroEmplea();

						this.cargarParteTabPanelRelacionadaValorRubroVariable(iIndex,intSelectedRow);
					}
					
				}
				
			}
			
			//TABBED PANE RELACIONES FIN(EXTRA TAB)
			;
			
  		} catch(Exception e) {
  			e.printStackTrace();
  		} finally {
			if(procesaCargarParteTab) {				
				this.finishProcessRubroEmplea();	
			}
		}
    }
	
	

	public void cargarParteTabPanelRelacionadaDefiProvisionEmpleado(int iIndex,int intSelectedRow) throws Exception {
		this.jInternalFrameDetalleFormRubroEmplea.cargarSessionConBeanSwingJInternalFrameDefiProvisionEmpleado(false,true,iIndex);
		this.jButtonDefiProvisionEmpleadoActionPerformed(null,intSelectedRow,false,true,null);
		this.redimensionarTablaPanelRelacionadaDefiProvisionEmpleado();

		//this.jTabbedPaneRelacionesRubroEmplea.updateUI();
		//this.jTabbedPaneRelacionesRubroEmplea.removeTabAt(iIndex);
		//this.jTabbedPaneRelacionesRubroEmplea.setSelectedIndex(iIndex);


	}

	public void cargarParteTabPanelRelacionadaEmpleadoPagoRubro(int iIndex,int intSelectedRow) throws Exception {
		this.jInternalFrameDetalleFormRubroEmplea.cargarSessionConBeanSwingJInternalFrameEmpleadoPagoRubro(false,true,iIndex);
		this.jButtonEmpleadoPagoRubroActionPerformed(null,intSelectedRow,false,true,null);
		this.redimensionarTablaPanelRelacionadaEmpleadoPagoRubro();

		//this.jTabbedPaneRelacionesRubroEmplea.updateUI();
		//this.jTabbedPaneRelacionesRubroEmplea.removeTabAt(iIndex);
		//this.jTabbedPaneRelacionesRubroEmplea.setSelectedIndex(iIndex);


	}

	public void cargarParteTabPanelRelacionadaHistorialPagoMesNomi(int iIndex,int intSelectedRow) throws Exception {
		this.jInternalFrameDetalleFormRubroEmplea.cargarSessionConBeanSwingJInternalFrameHistorialPagoMesNomi(false,true,iIndex);
		this.jButtonHistorialPagoMesNomiActionPerformed(null,intSelectedRow,false,true,null);
		this.redimensionarTablaPanelRelacionadaHistorialPagoMesNomi();

		//this.jTabbedPaneRelacionesRubroEmplea.updateUI();
		//this.jTabbedPaneRelacionesRubroEmplea.removeTabAt(iIndex);
		//this.jTabbedPaneRelacionesRubroEmplea.setSelectedIndex(iIndex);


	}

	public void cargarParteTabPanelRelacionadaHistorialPagoNomi(int iIndex,int intSelectedRow) throws Exception {
		this.jInternalFrameDetalleFormRubroEmplea.cargarSessionConBeanSwingJInternalFrameHistorialPagoNomi(false,true,iIndex);
		this.jButtonHistorialPagoNomiActionPerformed(null,intSelectedRow,false,true,null);
		this.redimensionarTablaPanelRelacionadaHistorialPagoNomi();

		//this.jTabbedPaneRelacionesRubroEmplea.updateUI();
		//this.jTabbedPaneRelacionesRubroEmplea.removeTabAt(iIndex);
		//this.jTabbedPaneRelacionesRubroEmplea.setSelectedIndex(iIndex);


	}

	public void cargarParteTabPanelRelacionadaRubroEmpleaCuentaContable(int iIndex,int intSelectedRow) throws Exception {
		this.jInternalFrameDetalleFormRubroEmplea.cargarSessionConBeanSwingJInternalFrameRubroEmpleaCuentaContable(false,true,iIndex);
		this.jButtonRubroEmpleaCuentaContableActionPerformed(null,intSelectedRow,false,true,null);
		this.redimensionarTablaPanelRelacionadaRubroEmpleaCuentaContable();

		//this.jTabbedPaneRelacionesRubroEmplea.updateUI();
		//this.jTabbedPaneRelacionesRubroEmplea.removeTabAt(iIndex);
		//this.jTabbedPaneRelacionesRubroEmplea.setSelectedIndex(iIndex);


	}

	public void cargarParteTabPanelRelacionadaRubroEmpleado(int iIndex,int intSelectedRow) throws Exception {
		this.jInternalFrameDetalleFormRubroEmplea.cargarSessionConBeanSwingJInternalFrameRubroEmpleado(false,true,iIndex);
		this.jButtonRubroEmpleadoActionPerformed(null,intSelectedRow,false,true,null);
		this.redimensionarTablaPanelRelacionadaRubroEmpleado();

		//this.jTabbedPaneRelacionesRubroEmplea.updateUI();
		//this.jTabbedPaneRelacionesRubroEmplea.removeTabAt(iIndex);
		//this.jTabbedPaneRelacionesRubroEmplea.setSelectedIndex(iIndex);


	}

	public void cargarParteTabPanelRelacionadaRubroEstructura(int iIndex,int intSelectedRow) throws Exception {
		this.jInternalFrameDetalleFormRubroEmplea.cargarSessionConBeanSwingJInternalFrameRubroEstructura(false,true,iIndex);
		this.jButtonRubroEstructuraActionPerformed(null,intSelectedRow,false,true,null);
		this.redimensionarTablaPanelRelacionadaRubroEstructura();

		//this.jTabbedPaneRelacionesRubroEmplea.updateUI();
		//this.jTabbedPaneRelacionesRubroEmplea.removeTabAt(iIndex);
		//this.jTabbedPaneRelacionesRubroEmplea.setSelectedIndex(iIndex);


	}

	public void cargarParteTabPanelRelacionadaTipoPrestamo(int iIndex,int intSelectedRow) throws Exception {
		this.jInternalFrameDetalleFormRubroEmplea.cargarSessionConBeanSwingJInternalFrameTipoPrestamo(false,true,iIndex);
		this.jButtonTipoPrestamoActionPerformed(null,intSelectedRow,false,true,null);
		this.redimensionarTablaPanelRelacionadaTipoPrestamo();

		//this.jTabbedPaneRelacionesRubroEmplea.updateUI();
		//this.jTabbedPaneRelacionesRubroEmplea.removeTabAt(iIndex);
		//this.jTabbedPaneRelacionesRubroEmplea.setSelectedIndex(iIndex);


	}

	public void cargarParteTabPanelRelacionadaValorRubroVariable(int iIndex,int intSelectedRow) throws Exception {
		this.jInternalFrameDetalleFormRubroEmplea.cargarSessionConBeanSwingJInternalFrameValorRubroVariable(false,true,iIndex);
		this.jButtonValorRubroVariableActionPerformed(null,intSelectedRow,false,true,null);
		this.redimensionarTablaPanelRelacionadaValorRubroVariable();

		//this.jTabbedPaneRelacionesRubroEmplea.updateUI();
		//this.jTabbedPaneRelacionesRubroEmplea.removeTabAt(iIndex);
		//this.jTabbedPaneRelacionesRubroEmplea.setSelectedIndex(iIndex);


	}
	
	public void jButtonRelacionActionPerformedGeneral(String sTipo,ActionEvent evt) { 	  
		try {
			
				 if(sTipo.equals("HistorialPagoNomi")) {
				int row=this.jTableDatosRubroEmplea.getSelectedRow();
				jButtonHistorialPagoNomiActionPerformed(evt,row,true,false,null);
				}
				 else  if(sTipo.equals("RubroEstructura")) {
				int row=this.jTableDatosRubroEmplea.getSelectedRow();
				jButtonRubroEstructuraActionPerformed(evt,row,true,false,null);
				}
				 else  if(sTipo.equals("DefiProvisionEmpleado")) {
				int row=this.jTableDatosRubroEmplea.getSelectedRow();
				jButtonDefiProvisionEmpleadoActionPerformed(evt,row,true,false,null);
				}
				 else  if(sTipo.equals("EmpleadoPagoRubro")) {
				int row=this.jTableDatosRubroEmplea.getSelectedRow();
				jButtonEmpleadoPagoRubroActionPerformed(evt,row,true,false,null);
				}
				 else  if(sTipo.equals("HistorialPagoMesNomi")) {
				int row=this.jTableDatosRubroEmplea.getSelectedRow();
				jButtonHistorialPagoMesNomiActionPerformed(evt,row,true,false,null);
				}
				 else  if(sTipo.equals("RubroEmpleado")) {
				int row=this.jTableDatosRubroEmplea.getSelectedRow();
				jButtonRubroEmpleadoActionPerformed(evt,row,true,false,null);
				}
				 else  if(sTipo.equals("ValorRubroVariable")) {
				int row=this.jTableDatosRubroEmplea.getSelectedRow();
				jButtonValorRubroVariableActionPerformed(evt,row,true,false,null);
				}
				 else  if(sTipo.equals("TipoPrestamo")) {
				int row=this.jTableDatosRubroEmplea.getSelectedRow();
				jButtonTipoPrestamoActionPerformed(evt,row,true,false,null);
				}
				 else  if(sTipo.equals("RubroEmpleaCuentaContable")) {
				int row=this.jTableDatosRubroEmplea.getSelectedRow();
				jButtonRubroEmpleaCuentaContableActionPerformed(evt,row,true,false,null);
				}
  		} catch(Exception e) {
  			e.printStackTrace();
  		}
    }
	
	public void cargarMenuRelaciones() {	
		JMenuItem jmenuItem= new JMenuItem("General");
		String sLabelMenu="";
		
		if(!this.rubroempleaSessionBean.getEsGuardarRelacionado()) {
			for(Reporte reporte:this.tiposRelaciones) {
			

				if(reporte.getsCodigo().equals("Historial Pago Nomi")) {

					if(this.isTienePermisosHistorialPagoNomi && this.rubroempleaConstantesFunciones.mostrarHistorialPagoNomiRubroEmplea && !RubroEmpleaConstantesFunciones.ISGUARDARREL) {
						if(Constantes.ISDEVELOPING) {
							sLabelMenu="Historial Pago Nomis"+"("+HistorialPagoNomiConstantesFunciones.CLASSNAME+")";
						}

						jmenuItem = new JMenuItem(sLabelMenu);
						//jmenuItem.setMnemonic(KeyEvent.VK_S);
						//jmenuItem.setAccelerator(KeyStroke.getKeyStroke(KeyEvent.VK_S, ActionEvent.ALT_MASK));
						jmenuItem.setActionCommand("Historial Pago Nomis");

						if(rubroempleaConstantesFunciones.resaltarHistorialPagoNomiRubroEmplea!=null) {
							jmenuItem.setBorderPainted(true);
							jmenuItem.setBorder(rubroempleaConstantesFunciones.resaltarHistorialPagoNomiRubroEmplea);
						}

						jmenuItem.setEnabled(this.rubroempleaConstantesFunciones.activarHistorialPagoNomiRubroEmplea);

						jmenuItem.addActionListener (new MenuItemRelacionActionListener(this,"HistorialPagoNomi"));

						

						this.jInternalFrameDetalleFormRubroEmplea.jmenuDetalleRubroEmplea.add(jmenuItem);

						
					}

					continue;
				}

				if(reporte.getsCodigo().equals("Rubro Estructura")) {

					if(this.isTienePermisosRubroEstructura && this.rubroempleaConstantesFunciones.mostrarRubroEstructuraRubroEmplea && !RubroEmpleaConstantesFunciones.ISGUARDARREL) {
						if(Constantes.ISDEVELOPING) {
							sLabelMenu="Rubro Estructuras"+"("+RubroEstructuraConstantesFunciones.CLASSNAME+")";
						}

						jmenuItem = new JMenuItem(sLabelMenu);
						//jmenuItem.setMnemonic(KeyEvent.VK_S);
						//jmenuItem.setAccelerator(KeyStroke.getKeyStroke(KeyEvent.VK_S, ActionEvent.ALT_MASK));
						jmenuItem.setActionCommand("Rubro Estructuras");

						if(rubroempleaConstantesFunciones.resaltarRubroEstructuraRubroEmplea!=null) {
							jmenuItem.setBorderPainted(true);
							jmenuItem.setBorder(rubroempleaConstantesFunciones.resaltarRubroEstructuraRubroEmplea);
						}

						jmenuItem.setEnabled(this.rubroempleaConstantesFunciones.activarRubroEstructuraRubroEmplea);

						jmenuItem.addActionListener (new MenuItemRelacionActionListener(this,"RubroEstructura"));

						

						this.jInternalFrameDetalleFormRubroEmplea.jmenuDetalleRubroEmplea.add(jmenuItem);

						
					}

					continue;
				}

				if(reporte.getsCodigo().equals("Defi Provision Empleado")) {

					if(this.isTienePermisosDefiProvisionEmpleado && this.rubroempleaConstantesFunciones.mostrarDefiProvisionEmpleadoRubroEmplea && !RubroEmpleaConstantesFunciones.ISGUARDARREL) {
						if(Constantes.ISDEVELOPING) {
							sLabelMenu="Defi Provision Empleados"+"("+DefiProvisionEmpleadoConstantesFunciones.CLASSNAME+")";
						}

						jmenuItem = new JMenuItem(sLabelMenu);
						//jmenuItem.setMnemonic(KeyEvent.VK_S);
						//jmenuItem.setAccelerator(KeyStroke.getKeyStroke(KeyEvent.VK_S, ActionEvent.ALT_MASK));
						jmenuItem.setActionCommand("Defi Provision Empleados");

						if(rubroempleaConstantesFunciones.resaltarDefiProvisionEmpleadoRubroEmplea!=null) {
							jmenuItem.setBorderPainted(true);
							jmenuItem.setBorder(rubroempleaConstantesFunciones.resaltarDefiProvisionEmpleadoRubroEmplea);
						}

						jmenuItem.setEnabled(this.rubroempleaConstantesFunciones.activarDefiProvisionEmpleadoRubroEmplea);

						jmenuItem.addActionListener (new MenuItemRelacionActionListener(this,"DefiProvisionEmpleado"));

						

						this.jInternalFrameDetalleFormRubroEmplea.jmenuDetalleRubroEmplea.add(jmenuItem);

						
					}

					continue;
				}

				if(reporte.getsCodigo().equals("Empleado Pago Rubro")) {

					if(this.isTienePermisosEmpleadoPagoRubro && this.rubroempleaConstantesFunciones.mostrarEmpleadoPagoRubroRubroEmplea && !RubroEmpleaConstantesFunciones.ISGUARDARREL) {
						if(Constantes.ISDEVELOPING) {
							sLabelMenu="Empleado Pago Rubros"+"("+EmpleadoPagoRubroConstantesFunciones.CLASSNAME+")";
						}

						jmenuItem = new JMenuItem(sLabelMenu);
						//jmenuItem.setMnemonic(KeyEvent.VK_S);
						//jmenuItem.setAccelerator(KeyStroke.getKeyStroke(KeyEvent.VK_S, ActionEvent.ALT_MASK));
						jmenuItem.setActionCommand("Empleado Pago Rubros");

						if(rubroempleaConstantesFunciones.resaltarEmpleadoPagoRubroRubroEmplea!=null) {
							jmenuItem.setBorderPainted(true);
							jmenuItem.setBorder(rubroempleaConstantesFunciones.resaltarEmpleadoPagoRubroRubroEmplea);
						}

						jmenuItem.setEnabled(this.rubroempleaConstantesFunciones.activarEmpleadoPagoRubroRubroEmplea);

						jmenuItem.addActionListener (new MenuItemRelacionActionListener(this,"EmpleadoPagoRubro"));

						

						this.jInternalFrameDetalleFormRubroEmplea.jmenuDetalleRubroEmplea.add(jmenuItem);

						
					}

					continue;
				}

				if(reporte.getsCodigo().equals("Historial Pago Mes Nomi")) {

					if(this.isTienePermisosHistorialPagoMesNomi && this.rubroempleaConstantesFunciones.mostrarHistorialPagoMesNomiRubroEmplea && !RubroEmpleaConstantesFunciones.ISGUARDARREL) {
						if(Constantes.ISDEVELOPING) {
							sLabelMenu="Historial Pago Mes Nomis"+"("+HistorialPagoMesNomiConstantesFunciones.CLASSNAME+")";
						}

						jmenuItem = new JMenuItem(sLabelMenu);
						//jmenuItem.setMnemonic(KeyEvent.VK_S);
						//jmenuItem.setAccelerator(KeyStroke.getKeyStroke(KeyEvent.VK_S, ActionEvent.ALT_MASK));
						jmenuItem.setActionCommand("Historial Pago Mes Nomis");

						if(rubroempleaConstantesFunciones.resaltarHistorialPagoMesNomiRubroEmplea!=null) {
							jmenuItem.setBorderPainted(true);
							jmenuItem.setBorder(rubroempleaConstantesFunciones.resaltarHistorialPagoMesNomiRubroEmplea);
						}

						jmenuItem.setEnabled(this.rubroempleaConstantesFunciones.activarHistorialPagoMesNomiRubroEmplea);

						jmenuItem.addActionListener (new MenuItemRelacionActionListener(this,"HistorialPagoMesNomi"));

						

						this.jInternalFrameDetalleFormRubroEmplea.jmenuDetalleRubroEmplea.add(jmenuItem);

						
					}

					continue;
				}

				if(reporte.getsCodigo().equals("Rubro Empleado")) {

					if(this.isTienePermisosRubroEmpleado && this.rubroempleaConstantesFunciones.mostrarRubroEmpleadoRubroEmplea && !RubroEmpleaConstantesFunciones.ISGUARDARREL) {
						if(Constantes.ISDEVELOPING) {
							sLabelMenu="Rubro Empleados"+"("+RubroEmpleadoConstantesFunciones.CLASSNAME+")";
						}

						jmenuItem = new JMenuItem(sLabelMenu);
						//jmenuItem.setMnemonic(KeyEvent.VK_S);
						//jmenuItem.setAccelerator(KeyStroke.getKeyStroke(KeyEvent.VK_S, ActionEvent.ALT_MASK));
						jmenuItem.setActionCommand("Rubro Empleados");

						if(rubroempleaConstantesFunciones.resaltarRubroEmpleadoRubroEmplea!=null) {
							jmenuItem.setBorderPainted(true);
							jmenuItem.setBorder(rubroempleaConstantesFunciones.resaltarRubroEmpleadoRubroEmplea);
						}

						jmenuItem.setEnabled(this.rubroempleaConstantesFunciones.activarRubroEmpleadoRubroEmplea);

						jmenuItem.addActionListener (new MenuItemRelacionActionListener(this,"RubroEmpleado"));

						

						this.jInternalFrameDetalleFormRubroEmplea.jmenuDetalleRubroEmplea.add(jmenuItem);

						
					}

					continue;
				}

				if(reporte.getsCodigo().equals("Valor Rubro Variable")) {

					if(this.isTienePermisosValorRubroVariable && this.rubroempleaConstantesFunciones.mostrarValorRubroVariableRubroEmplea && !RubroEmpleaConstantesFunciones.ISGUARDARREL) {
						if(Constantes.ISDEVELOPING) {
							sLabelMenu="Valor Rubro Variables"+"("+ValorRubroVariableConstantesFunciones.CLASSNAME+")";
						}

						jmenuItem = new JMenuItem(sLabelMenu);
						//jmenuItem.setMnemonic(KeyEvent.VK_S);
						//jmenuItem.setAccelerator(KeyStroke.getKeyStroke(KeyEvent.VK_S, ActionEvent.ALT_MASK));
						jmenuItem.setActionCommand("Valor Rubro Variables");

						if(rubroempleaConstantesFunciones.resaltarValorRubroVariableRubroEmplea!=null) {
							jmenuItem.setBorderPainted(true);
							jmenuItem.setBorder(rubroempleaConstantesFunciones.resaltarValorRubroVariableRubroEmplea);
						}

						jmenuItem.setEnabled(this.rubroempleaConstantesFunciones.activarValorRubroVariableRubroEmplea);

						jmenuItem.addActionListener (new MenuItemRelacionActionListener(this,"ValorRubroVariable"));

						

						this.jInternalFrameDetalleFormRubroEmplea.jmenuDetalleRubroEmplea.add(jmenuItem);

						
					}

					continue;
				}

				if(reporte.getsCodigo().equals("Tipo Prestamo")) {

					if(this.isTienePermisosTipoPrestamo && this.rubroempleaConstantesFunciones.mostrarTipoPrestamoRubroEmplea && !RubroEmpleaConstantesFunciones.ISGUARDARREL) {
						if(Constantes.ISDEVELOPING) {
							sLabelMenu="Tipo Prestamos"+"("+TipoPrestamoConstantesFunciones.CLASSNAME+")";
						}

						jmenuItem = new JMenuItem(sLabelMenu);
						//jmenuItem.setMnemonic(KeyEvent.VK_S);
						//jmenuItem.setAccelerator(KeyStroke.getKeyStroke(KeyEvent.VK_S, ActionEvent.ALT_MASK));
						jmenuItem.setActionCommand("Tipo Prestamos");

						if(rubroempleaConstantesFunciones.resaltarTipoPrestamoRubroEmplea!=null) {
							jmenuItem.setBorderPainted(true);
							jmenuItem.setBorder(rubroempleaConstantesFunciones.resaltarTipoPrestamoRubroEmplea);
						}

						jmenuItem.setEnabled(this.rubroempleaConstantesFunciones.activarTipoPrestamoRubroEmplea);

						jmenuItem.addActionListener (new MenuItemRelacionActionListener(this,"TipoPrestamo"));

						

						this.jInternalFrameDetalleFormRubroEmplea.jmenuDetalleRubroEmplea.add(jmenuItem);

						
					}

					continue;
				}

				if(reporte.getsCodigo().equals("Rubro Emplea Cuenta Contable")) {

					if(this.isTienePermisosRubroEmpleaCuentaContable && this.rubroempleaConstantesFunciones.mostrarRubroEmpleaCuentaContableRubroEmplea && !RubroEmpleaConstantesFunciones.ISGUARDARREL) {
						if(Constantes.ISDEVELOPING) {
							sLabelMenu="Rubro Emplea Cuenta Contables"+"("+RubroEmpleaCuentaContableConstantesFunciones.CLASSNAME+")";
						}

						jmenuItem = new JMenuItem(sLabelMenu);
						//jmenuItem.setMnemonic(KeyEvent.VK_S);
						//jmenuItem.setAccelerator(KeyStroke.getKeyStroke(KeyEvent.VK_S, ActionEvent.ALT_MASK));
						jmenuItem.setActionCommand("Rubro Emplea Cuenta Contables");

						if(rubroempleaConstantesFunciones.resaltarRubroEmpleaCuentaContableRubroEmplea!=null) {
							jmenuItem.setBorderPainted(true);
							jmenuItem.setBorder(rubroempleaConstantesFunciones.resaltarRubroEmpleaCuentaContableRubroEmplea);
						}

						jmenuItem.setEnabled(this.rubroempleaConstantesFunciones.activarRubroEmpleaCuentaContableRubroEmplea);

						jmenuItem.addActionListener (new MenuItemRelacionActionListener(this,"RubroEmpleaCuentaContable"));

						

						this.jInternalFrameDetalleFormRubroEmplea.jmenuDetalleRubroEmplea.add(jmenuItem);

						
					}

					continue;
				}
			}
		}
	}		
	
	public void cargarCombosForeignKeyRubroEmplea(Boolean cargarCombosDependencia) throws Exception {   
		this.cargarCombosForeignKeyRubroEmplea(cargarCombosDependencia,true,true);
	}
	
	//CARGAR COMBOS EN LOTE
	public void cargarCombosForeignKeyRubroEmplea(Boolean cargarCombosDependencia,Boolean conInitActions,Boolean conSetVariablesGlobales) throws Exception {   
		this.cargarCombosTodosForeignKeyRubroEmpleaListas(cargarCombosDependencia);
				
		this.addItemDefectoCombosTodosForeignKeyRubroEmplea();
		
		this.cargarCombosFrameForeignKeyRubroEmplea();						
		
		if(conInitActions) {
			this.initActionsCombosTodosForeignKeyRubroEmplea();
		}
		
		if(conSetVariablesGlobales) {
			this.setVariablesGlobalesCombosForeignKeyRubroEmplea();
		}
	}
	
	

	public void cargarCombosForeignKeyTipoCalculo(Boolean cargarCombosDependencia,Boolean conInitActions,Boolean conSetVariablesGlobales,String sFinalQueryCombo,String sFormularioTipoBusqueda) throws Exception {
		try {
				this.cargarCombosForeignKeyTipoCalculoListas(cargarCombosDependencia,sFinalQueryCombo);
				this.addItemDefectoCombosForeignKeyTipoCalculo();
				this.cargarCombosFrameTipoCalculosForeignKey(sFormularioTipoBusqueda);

				if(conInitActions) {
				}

			this.recargarComboTablaTipoCalculo(this.tipocalculosForeignKey);

		} catch(Exception e) {
			throw e;
		}
	}

	public void cargarCombosForeignKeyTipoRubroEmplea(Boolean cargarCombosDependencia,Boolean conInitActions,Boolean conSetVariablesGlobales,String sFinalQueryCombo,String sFormularioTipoBusqueda) throws Exception {
		try {
				this.cargarCombosForeignKeyTipoRubroEmpleaListas(cargarCombosDependencia,sFinalQueryCombo);
				this.addItemDefectoCombosForeignKeyTipoRubroEmplea();
				this.cargarCombosFrameTipoRubroEmpleasForeignKey(sFormularioTipoBusqueda);

				if(conInitActions) {
				}

			this.recargarComboTablaTipoRubroEmplea(this.tiporubroempleasForeignKey);

		} catch(Exception e) {
			throw e;
		}
	}

	public void cargarCombosForeignKeyTipoGrupoRubroEmplea(Boolean cargarCombosDependencia,Boolean conInitActions,Boolean conSetVariablesGlobales,String sFinalQueryCombo,String sFormularioTipoBusqueda) throws Exception {
		try {
				this.cargarCombosForeignKeyTipoGrupoRubroEmpleaListas(cargarCombosDependencia,sFinalQueryCombo);
				this.addItemDefectoCombosForeignKeyTipoGrupoRubroEmplea();
				this.cargarCombosFrameTipoGrupoRubroEmpleasForeignKey(sFormularioTipoBusqueda);

				if(conInitActions) {
				}

			this.recargarComboTablaTipoGrupoRubroEmplea(this.tipogruporubroempleasForeignKey);

		} catch(Exception e) {
			throw e;
		}
	}
	
	public void jButtonNuevoRubroEmpleaActionPerformed(ActionEvent evt,Boolean esRelaciones) throws Exception {   
		try {
			EventoGlobalTipo eventoGlobalTipo=EventoGlobalTipo.FORM_RECARGAR;
			String sTipo="NUEVO_NORMAL";
			
			this.estaModoNuevo=true;
			
			if(this.rubroempleaSessionBean.getConGuardarRelaciones()) {
				this.dStart=(double)System.currentTimeMillis();
			}
				
			//if(this.esUsoDesdeHijo) {
			//	eventoGlobalTipo=EventoGlobalTipo.FORM_HIJO_ACTUALIZAR;
			//}
											
			if(this.jInternalFrameDetalleFormRubroEmplea==null) { //if(!this.conCargarFormDetalle) {
				this.inicializarFormDetalle();
			}			
				
			RubroEmpleaBeanSwingJInternalFrameAdditional.procesarEventosVista(this.parametroGeneralUsuario,this.moduloActual,this.opcionActual,this.usuarioActual,this,FuncionTipo.BEFORE,ControlTipo.FORM,EventoTipo.LOAD,EventoSubTipo.NEW,"FORM",this.rubroemplea,new Object(),this.rubroempleaParameterGeneral,this.rubroempleaReturnGeneral);
			
			
			if(jTableDatosRubroEmplea.getRowCount()>=1) {
				jTableDatosRubroEmplea.removeRowSelectionInterval(0, jTableDatosRubroEmplea.getRowCount()-1);						
			}
			
			this.isEsNuevoRubroEmplea=true;
			
			//ESTABLECE SI ES RELACIONADO O NO 
			this.habilitarDeshabilitarTipoMantenimientoRubroEmplea(esRelaciones);
			
			this.nuevoPreparar(false); 
			this.habilitarDeshabilitarControlesRubroEmplea(true);			
			//this.rubroemplea=new RubroEmplea();
			//this.rubroemplea.setIsChanged(true);
			
			//NO FUNCIONA BINDINGS
			this.inicializarActualizarBindingBotonesRubroEmplea(false) ;						
			 
			//SI ES MANUAL
			//this.inicializarActualizarBindingBotonesManualRubroEmplea() ;
			
			if(RubroEmpleaJInternalFrame.CON_DATOS_FRAME) {
				this.abrirFrameDetalleRubroEmplea(esRelaciones);
			}
					
			//Se Duplica, sin sentido
			//this.actualizarInformacion("EVENTO_NUEVO",false,this.rubroemplea);	
			this.actualizarInformacion("INFO_PADRE",false,this.rubroemplea);				
			
			RubroEmpleaBeanSwingJInternalFrameAdditional.procesarEventosVista(this.parametroGeneralUsuario,this.moduloActual,this.opcionActual,this.usuarioActual,this,FuncionTipo.AFTER,ControlTipo.FORM,EventoTipo.LOAD,EventoSubTipo.NEW,"FORM",this.rubroemplea,new Object(),this.rubroempleaParameterGeneral,this.rubroempleaReturnGeneral);
			
			if(this.rubroempleaSessionBean.getConGuardarRelaciones()) {
				this.dEnd=(double)System.currentTimeMillis();					
				this.dDif=this.dEnd - this.dStart;
					
				if(Constantes.ISDEVELOPING) {
					System.out.println("Tiempo(ms) Nuevo Preparar RubroEmplea: " + this.dDif); 
				}
			}
			
			//false para que pueda generar eventos
			this.estaModoNuevo=false;
							
			//Con this.estaModoNuevo=false;, se permite actualizar y usar eventos control al mismo tiempo (FuncionTipo.LAST)			
			RubroEmpleaBeanSwingJInternalFrameAdditional.procesarEventosVista(this.parametroGeneralUsuario,this.moduloActual,this.opcionActual,this.usuarioActual,this,FuncionTipo.LAST,ControlTipo.FORM,EventoTipo.CLIC,EventoSubTipo.NEW,sTipo,this.rubroemplea,new Object(),this.rubroempleaParameterGeneral,this.rubroempleaReturnGeneral);
			
		} catch(Exception e) {									
			FuncionesSwing.manageException(this, e,logger,RubroEmpleaConstantesFunciones.CLASSNAME);
			
		} finally {
			this.estaModoNuevo=false;			
		}
	}
	
	public void jButtonDuplicarRubroEmpleaActionPerformed(ActionEvent evt,Boolean esRelaciones) throws Exception {   
		try {
			Boolean soloDuplicarUno=false;
			Boolean conSeleccionarFilaTabla=false;
			
			this.estaModoNuevo=true;
			this.estaModoDuplicar=true;
			
			ArrayList<RubroEmplea> rubroempleasSeleccionados=new ArrayList<RubroEmplea>();
			int intSelectedRow =-1;
			Integer iNumRowsSeleccionados=0;
			int[] arrNumRowsSeleccionados=null;
			
			//NO SE TOMA EN CUENTA, SI LOS SELECCIONADOS
			if(conSeleccionarFilaTabla) {
				arrNumRowsSeleccionados=this.jTableDatosRubroEmplea.getSelectedRows();
				iNumRowsSeleccionados=this.jTableDatosRubroEmplea.getSelectedRows().length;			
			}
			
			rubroempleasSeleccionados=this.getRubroEmpleasSeleccionados(false);
				
			if((soloDuplicarUno && iNumRowsSeleccionados.equals(1)) || !soloDuplicarUno) {
				//LO HACE NUEVOPREPARAR
				//this.iIdNuevoRubroEmplea--;			
				//RubroEmplea rubroempleaAux= new RubroEmplea();			
				//rubroempleaAux.setId(this.iIdNuevoRubroEmplea);																
				
				//NO SE TOMA EN CUENTA, SI LOS SELECCIONADOS
				//RubroEmplea rubroempleaOrigen=new RubroEmplea();
				//for(Integer iNumRowSeleccionado:arrNumRowsSeleccionados) {				
				
				for(RubroEmplea rubroempleaOrigen : rubroempleasSeleccionados) {
					if(conSeleccionarFilaTabla) {
						if(!soloDuplicarUno) {
							//NO SE TOMA EN CUENTA, SI LOS SELECCIONADOS
							//intSelectedRow =iNumRowSeleccionado;
						} else {
							intSelectedRow = this.jTableDatosRubroEmplea.getSelectedRow();
						}
						
						//ARCHITECTURE
						if(Constantes.ISUSAEJBLOGICLAYER) {
							rubroempleaOrigen =(RubroEmplea) this.rubroempleaLogic.getRubroEmpleas().toArray()[this.jTableDatosRubroEmplea.convertRowIndexToModel(intSelectedRow)];
						} else if(Constantes.ISUSAEJBREMOTE || Constantes.ISUSAEJBHOME) {
							rubroempleaOrigen =(RubroEmplea) this.rubroempleas.toArray()[this.jTableDatosRubroEmplea.convertRowIndexToModel(intSelectedRow)];
						}
					}
					
					this.aumentarTamanioFilaNuevaTablaRubroEmplea();
					
					if(this.conTotales) {
						this.quitarFilaTotales();
					}
					
					this.nuevoPreparar(true);
					
					this.rubroemplea.setsType("DUPLICADO");
					
					this.setCopiarVariablesObjetosRubroEmplea(rubroempleaOrigen,this.rubroemplea,true,true);
					
					this.setVariablesFormularioToObjetoActualForeignKeysRubroEmplea(this.rubroemplea);
					
					//LO HACE NUEVOPREPARAR
					/*
					if(Constantes.ISUSAEJBLOGICLAYER) {				
						this.rubroempleaLogic.getRubroEmpleas().add(this.rubroempleaAux);
					} else if(Constantes.ISUSAEJBREMOTE||Constantes.ISUSAEJBHOME) {
						this.rubroempleas.add(this.rubroempleaAux);				
					}
					*/
				}
				
				this.inicializarActualizarBindingTablaRubroEmplea(false);
				
				this.jTableDatosRubroEmplea.setRowSelectionInterval(this.getIndiceNuevoRubroEmplea(), this.getIndiceNuevoRubroEmplea());
				
				int iLastRow =  this.jTableDatosRubroEmplea.getRowCount () - 1;
				Rectangle rectangle = this.jTableDatosRubroEmplea.getCellRect(iLastRow, 0, true);
				
				this.jTableDatosRubroEmplea.scrollRectToVisible(rectangle);
				
				//FILA TOTALES
				if(this.conTotales) {
					this.crearFilaTotales();
					
					this.inicializarActualizarBindingTablaRubroEmplea(false);
				}
			} else {
				throw new Exception("DEBE ESTAR SELECCIONADO 1 REGISTRO");
			}
			
		} catch(Exception e) {			
			FuncionesSwing.manageException(this, e,logger,RubroEmpleaConstantesFunciones.CLASSNAME);
		
		} finally {
			this.estaModoNuevo=false;
			this.estaModoDuplicar=false;
		}
	}
	
	public void jButtonCopiarRubroEmpleaActionPerformed(ActionEvent evt) throws Exception {   
		try {
			
			Boolean conSeleccionarFilaTabla=false;
			Integer iNumRowsSeleccionados=0;
			int[] intSelectedRows =null;
			int intSelectedRow =0;
			
			this.estaModoCopiar=true;
			
			ArrayList<RubroEmplea> rubroempleasSeleccionados=new ArrayList<RubroEmplea>();									
		
			RubroEmplea rubroempleaOrigen=new RubroEmplea();
			RubroEmplea rubroempleaDestino=new RubroEmplea();
				
			rubroempleasSeleccionados=this.getRubroEmpleasSeleccionados(false);
			
			if(conSeleccionarFilaTabla) {
				iNumRowsSeleccionados=this.jTableDatosRubroEmplea.getSelectedRows().length;	
			}
			
			if(iNumRowsSeleccionados.equals(2) || rubroempleasSeleccionados.size()==2) {
				if(conSeleccionarFilaTabla) {
					intSelectedRows =this.jTableDatosRubroEmplea.getSelectedRows();
					intSelectedRow = intSelectedRows[0];	
									
					//ARCHITECTURE
					if(Constantes.ISUSAEJBLOGICLAYER) {
						rubroempleaOrigen =(RubroEmplea) this.rubroempleaLogic.getRubroEmpleas().toArray()[this.jTableDatosRubroEmplea.convertRowIndexToModel(intSelectedRow)];
					} else if(Constantes.ISUSAEJBREMOTE || Constantes.ISUSAEJBHOME) {
						rubroempleaOrigen =(RubroEmplea) this.rubroempleas.toArray()[this.jTableDatosRubroEmplea.convertRowIndexToModel(intSelectedRow)];
					}
					//ARCHITECTURE
					
					intSelectedRow = intSelectedRows[1];
					
					//ARCHITECTURE
					if(Constantes.ISUSAEJBLOGICLAYER) {
						rubroempleaDestino =(RubroEmplea) this.rubroempleaLogic.getRubroEmpleas().toArray()[this.jTableDatosRubroEmplea.convertRowIndexToModel(intSelectedRow)];
					} else if(Constantes.ISUSAEJBREMOTE || Constantes.ISUSAEJBHOME) {
						rubroempleaDestino =(RubroEmplea) this.rubroempleas.toArray()[this.jTableDatosRubroEmplea.convertRowIndexToModel(intSelectedRow)];
					}
					//ARCHITECTURE
				}
				
				rubroempleaOrigen =rubroempleasSeleccionados.get(0);
				rubroempleaDestino =rubroempleasSeleccionados.get(1);
				
				this.setCopiarVariablesObjetosRubroEmplea(rubroempleaOrigen,rubroempleaDestino,true,false);
				
				rubroempleaDestino.setsType("DUPLICADO");
				
				//ARCHITECTURE
				if(Constantes.ISUSAEJBLOGICLAYER) {
					actualizarLista(rubroempleaDestino,rubroempleaLogic.getRubroEmpleas());					
				} else if(Constantes.ISUSAEJBREMOTE||Constantes.ISUSAEJBHOME) {
					actualizarLista(rubroempleaDestino,rubroempleas);
				}
				//ARCHITECTURE
				
				this.inicializarActualizarBindingTablaRubroEmplea(false);
				
				//this.jTableDatosRubroEmplea.setRowSelectionInterval(this.getIndiceNuevoRubroEmplea(), this.getIndiceNuevoRubroEmplea());
				
				int iLastRow =  this.jTableDatosRubroEmplea.getRowCount () - 1;
				Rectangle rectangle = this.jTableDatosRubroEmplea.getCellRect(iLastRow, 0, true);
				
				this.jTableDatosRubroEmplea.scrollRectToVisible(rectangle);
				
				//FILA TOTALES
				if(this.conTotales) {
					//this.crearFilaTotales();
					
					this.inicializarActualizarBindingTablaRubroEmplea(false);
				}
			} else {
				throw new Exception("DEBEN ESTAR SELECCIONADOS 2 REGISTROS");
			}
		} catch(Exception e) {
			FuncionesSwing.manageException(this, e,logger,RubroEmpleaConstantesFunciones.CLASSNAME);
		
		}  finally {
			this.estaModoCopiar=false;
		}
	}
	
	public void jButtonVerFormRubroEmpleaActionPerformed(ActionEvent evt) throws Exception {   
		try {
			
			if(this.jInternalFrameDetalleFormRubroEmplea==null) { //if(!this.conCargarFormDetalle) {
				this.inicializarFormDetalle();
			}
			
			this.jInternalFrameDetalleFormRubroEmplea.setSelected(true);
			
		} catch(Exception e) {
			FuncionesSwing.manageException(this, e,logger,RubroEmpleaConstantesFunciones.CLASSNAME);
		}
	}
	
	public void jButtonMostrarOcultarRubroEmpleaActionPerformed(ActionEvent evt) throws Exception {   
		try {
			Boolean isVisible=this.jPanelParametrosReportesRubroEmplea.isVisible();
			
			//BYDAN_BUSQUEDAS
			
			this.jTabbedPaneBusquedasRubroEmplea.setVisible(!isVisible);			
			
			
			this.jPanelParametrosReportesRubroEmplea.setVisible(!isVisible);
			this.jPanelPaginacionRubroEmplea.setVisible(!isVisible);
			this.jPanelAccionesRubroEmplea.setVisible(!isVisible);
							
		} catch(Exception e) {
			FuncionesSwing.manageException(this, e,logger,RubroEmpleaConstantesFunciones.CLASSNAME);
		}
	}
	
	public void jButtonCerrarRubroEmpleaActionPerformed(ActionEvent evt) throws Exception {   
		try {
			this.closingInternalFrameRubroEmplea();
			
			//if(this.jInternalFrameParent==null) {
				//this.dispose();
			/*} else {
				this.setVisible(false);
	        	this.setSelected(false);	
			}*/			
		} catch(Exception e) {
			FuncionesSwing.manageException(this, e,logger,RubroEmpleaConstantesFunciones.CLASSNAME);
		}
	}
	
	public void jButtonCerrarReporteDinamicoRubroEmpleaActionPerformed(ActionEvent evt) throws Exception {   
		try {
			
			this.cerrarFrameReporteDinamicoRubroEmplea();
			
						
		} catch(Exception e) {
			FuncionesSwing.manageException(this, e,logger,RubroEmpleaConstantesFunciones.CLASSNAME);
		}
	}
	
	public void jButtonCerrarImportacionRubroEmpleaActionPerformed(ActionEvent evt) throws Exception {   
		try {
			
			this.cerrarFrameImportacionRubroEmplea();
			
						
		} catch(Exception e) {
			FuncionesSwing.manageException(this, e,logger,RubroEmpleaConstantesFunciones.CLASSNAME);
		}
	}
	
	
	public void jButtonAbrirOrderByRubroEmpleaActionPerformed(ActionEvent evt) throws Exception {   
		try {
			
			
			this.abrirInicializarFrameOrderByRubroEmplea();
			
			this.abrirFrameOrderByRubroEmplea();
			
			
		} catch(Exception e) {
			FuncionesSwing.manageException(this, e,logger,RubroEmpleaConstantesFunciones.CLASSNAME);
		}
	}
	
	public void jButtonCerrarOrderByRubroEmpleaActionPerformed(ActionEvent evt) throws Exception {   
		try {
			
			this.cerrarFrameOrderByRubroEmplea();
			
						
		} catch(Exception e) {
			FuncionesSwing.manageException(this, e,logger,RubroEmpleaConstantesFunciones.CLASSNAME);
		}
	}
	
	public void abrirFrameDetalleRubroEmplea(Boolean esRelaciones) throws Exception {	    	        
	    try {
			//CAUSA PROBLEMAS, SE ADICIONA EN CONSTRUCTOR, LUEGO SOLO VISIBLE true y false
			//this.jDesktopPane.add(jInternalFrameDetalleFormRubroEmplea);
			
			if(!esRelaciones) {
				if(this.jInternalFrameDetalleFormRubroEmplea.isMaximum()) {
					this.jInternalFrameDetalleFormRubroEmplea.setMaximum(false);
				}								
				
	    		this.jInternalFrameDetalleFormRubroEmplea.setSize(this.jInternalFrameDetalleFormRubroEmplea.iWidthFormulario,this.jInternalFrameDetalleFormRubroEmplea.iHeightFormulario);
	    	} else {
				if(this.iWidthScroll<this.jInternalFrameDetalleFormRubroEmplea.iWidthFormularioMaximo) {
	    			this.jInternalFrameDetalleFormRubroEmplea.setSize(this.iWidthScroll,this.iHeightScroll);
				} else {
					if(!this.jInternalFrameDetalleFormRubroEmplea.isMaximum()) {
						this.jInternalFrameDetalleFormRubroEmplea.setMaximum(true);
					}
				}
				
				if(this.jInternalFrameDetalleFormRubroEmplea.jContentPaneDetalleRubroEmplea.getWidth() > this.getWidth()) {
					this.jInternalFrameDetalleFormRubroEmplea.jTabbedPaneRelacionesRubroEmplea.setMinimumSize(new Dimension(this.jInternalFrameDetalleFormRubroEmplea.jContentPaneDetalleRubroEmplea.getWidth(),RubroEmpleaConstantesFunciones.ALTO_TABPANE_RELACIONES));
					this.jInternalFrameDetalleFormRubroEmplea.jTabbedPaneRelacionesRubroEmplea.setMaximumSize(new Dimension(this.jInternalFrameDetalleFormRubroEmplea.jContentPaneDetalleRubroEmplea.getWidth(),RubroEmpleaConstantesFunciones.ALTO_TABPANE_RELACIONES));
					this.jInternalFrameDetalleFormRubroEmplea.jTabbedPaneRelacionesRubroEmplea.setPreferredSize(new Dimension(this.jInternalFrameDetalleFormRubroEmplea.jContentPaneDetalleRubroEmplea.getWidth(),RubroEmpleaConstantesFunciones.ALTO_TABPANE_RELACIONES));
					
					Dimension dimension=new Dimension(); 
					
					

					if(DefiProvisionEmpleadoJInternalFrame.ESTA_CARGADO_PORPARTE) {
						this.redimensionarTablaPanelRelacionadaDefiProvisionEmpleado();
					}

					if(EmpleadoPagoRubroJInternalFrame.ESTA_CARGADO_PORPARTE) {
						this.redimensionarTablaPanelRelacionadaEmpleadoPagoRubro();
					}

					if(HistorialPagoMesNomiJInternalFrame.ESTA_CARGADO_PORPARTE) {
						this.redimensionarTablaPanelRelacionadaHistorialPagoMesNomi();
					}

					if(HistorialPagoNomiJInternalFrame.ESTA_CARGADO_PORPARTE) {
						this.redimensionarTablaPanelRelacionadaHistorialPagoNomi();
					}

					if(RubroEmpleaCuentaContableJInternalFrame.ESTA_CARGADO_PORPARTE) {
						this.redimensionarTablaPanelRelacionadaRubroEmpleaCuentaContable();
					}

					if(RubroEmpleadoJInternalFrame.ESTA_CARGADO_PORPARTE) {
						this.redimensionarTablaPanelRelacionadaRubroEmpleado();
					}

					if(RubroEstructuraJInternalFrame.ESTA_CARGADO_PORPARTE) {
						this.redimensionarTablaPanelRelacionadaRubroEstructura();
					}

					if(TipoPrestamoJInternalFrame.ESTA_CARGADO_PORPARTE) {
						this.redimensionarTablaPanelRelacionadaTipoPrestamo();
					}

					if(ValorRubroVariableJInternalFrame.ESTA_CARGADO_PORPARTE) {
						this.redimensionarTablaPanelRelacionadaValorRubroVariable();
					}
					
				}
	    	}
			
		
	       	this.jInternalFrameDetalleFormRubroEmplea.setVisible(true);
	        this.jInternalFrameDetalleFormRubroEmplea.setSelected(true);
		
	    } catch (final java.beans.PropertyVetoException e) {
		
			FuncionesSwing.manageException(this, e,logger,RubroEmpleaConstantesFunciones.CLASSNAME);
	    }
	}
	
	
	public void abrirInicializarFrameOrderByRubroEmplea() throws Exception {	    	        
	    try {
			if(this.jInternalFrameOrderByRubroEmplea==null) {
				
				if(!this.conCargarMinimo) {
					this.jInternalFrameOrderByRubroEmplea=new OrderByJInternalFrame(STIPO_TAMANIO_GENERAL,this.jButtonAbrirOrderByRubroEmplea,false,this);
				} else {
					this.jInternalFrameOrderByRubroEmplea=new OrderByJInternalFrame(STIPO_TAMANIO_GENERAL,this.jButtonAbrirOrderByRubroEmplea,true,this);
				}
				
				this.jDesktopPane.add(this.jInternalFrameOrderByRubroEmplea);
				this.jInternalFrameOrderByRubroEmplea.setVisible(false);
				this.jInternalFrameOrderByRubroEmplea.setSelected(false);
				
				this.jInternalFrameOrderByRubroEmplea.getjButtonCerrarOrderBy().addActionListener (new ButtonActionListener(this,"CerrarOrderByRubroEmplea"));
				
				this.inicializarActualizarBindingTablaOrderByRubroEmplea();
			}
		} catch (final Exception e) {
			
		}
	}
	
	
	
	public void abrirInicializarFrameImportacionRubroEmplea() throws Exception {	    	        
	    try {
			if(this.jInternalFrameImportacionRubroEmplea==null) {
				
				this.jInternalFrameImportacionRubroEmplea=new ImportacionJInternalFrame(RubroEmpleaConstantesFunciones.SCLASSWEBTITULO,this);			
				
				MainJFrame.cerrarJInternalFramesExistentes(this.jDesktopPane,this.jInternalFrameImportacionRubroEmplea);							
				
				this.jDesktopPane.add(this.jInternalFrameImportacionRubroEmplea);
				this.jInternalFrameImportacionRubroEmplea.setVisible(false);
				this.jInternalFrameImportacionRubroEmplea.setSelected(false);


				this.jInternalFrameImportacionRubroEmplea.getjButtonCerrarImportacion().addActionListener (new ButtonActionListener(this,"CerrarImportacionRubroEmplea"));
				this.jInternalFrameImportacionRubroEmplea.getjButtonGenerarImportacion().addActionListener (new ButtonActionListener(this,"GenerarImportacionRubroEmplea"));
				this.jInternalFrameImportacionRubroEmplea.getjButtonAbrirImportacion().addActionListener (new ButtonActionListener(this,"AbrirImportacionRubroEmplea"));


			}
		} catch (final Exception e) {
			
		}
	}		
	
	
	
	public void abrirInicializarFrameReporteDinamicoRubroEmplea() throws Exception {	    	        
	    try {
			
			if(this.jInternalFrameReporteDinamicoRubroEmplea==null) {
				this.jInternalFrameReporteDinamicoRubroEmplea=new ReporteDinamicoJInternalFrame(RubroEmpleaConstantesFunciones.SCLASSWEBTITULO,this);	
				
				MainJFrame.cerrarJInternalFramesExistentes(this.jDesktopPane,this.jInternalFrameReporteDinamicoRubroEmplea);	
	
	
				this.jDesktopPane.add(this.jInternalFrameReporteDinamicoRubroEmplea);
				this.jInternalFrameReporteDinamicoRubroEmplea.setVisible(false);
				this.jInternalFrameReporteDinamicoRubroEmplea.setSelected(false);
	
	
	
				this.jInternalFrameReporteDinamicoRubroEmplea.getjButtonCerrarReporteDinamico().addActionListener (new ButtonActionListener(this,"CerrarReporteDinamicoRubroEmplea"));
				this.jInternalFrameReporteDinamicoRubroEmplea.getjButtonGenerarReporteDinamico().addActionListener (new ButtonActionListener(this,"GenerarReporteDinamicoRubroEmplea"));
				this.jInternalFrameReporteDinamicoRubroEmplea.getjButtonGenerarExcelReporteDinamico().addActionListener (new ButtonActionListener(this,"GenerarExcelReporteDinamicoRubroEmplea"));
	
				this.inicializarActualizarBindingtiposArchivosReportesDinamicoAccionesManualRubroEmplea();
			}

		} catch (final Exception e) {
			
		}
	}	
	
	
	
		

	public void redimensionarTablaPanelRelacionadaDefiProvisionEmpleado() {
		Dimension dimension=new Dimension();

		dimension=this.jInternalFrameDetalleFormRubroEmplea.defiprovisionempleadoBeanSwingJInternalFrame.jScrollPanelDatosDefiProvisionEmpleado.getPreferredSize();
		dimension.setSize(this.jInternalFrameDetalleFormRubroEmplea.jContentPaneDetalleRubroEmplea.getWidth(),dimension.getHeight());

		this.jInternalFrameDetalleFormRubroEmplea.defiprovisionempleadoBeanSwingJInternalFrame.jScrollPanelDatosDefiProvisionEmpleado.setMinimumSize(dimension);
		this.jInternalFrameDetalleFormRubroEmplea.defiprovisionempleadoBeanSwingJInternalFrame.jScrollPanelDatosDefiProvisionEmpleado.setMaximumSize(dimension);
		this.jInternalFrameDetalleFormRubroEmplea.defiprovisionempleadoBeanSwingJInternalFrame.jScrollPanelDatosDefiProvisionEmpleado.setPreferredSize(dimension);


	}

	public void redimensionarTablaPanelRelacionadaEmpleadoPagoRubro() {
		Dimension dimension=new Dimension();

		dimension=this.jInternalFrameDetalleFormRubroEmplea.empleadopagorubroBeanSwingJInternalFrame.jScrollPanelDatosEmpleadoPagoRubro.getPreferredSize();
		dimension.setSize(this.jInternalFrameDetalleFormRubroEmplea.jContentPaneDetalleRubroEmplea.getWidth(),dimension.getHeight());

		this.jInternalFrameDetalleFormRubroEmplea.empleadopagorubroBeanSwingJInternalFrame.jScrollPanelDatosEmpleadoPagoRubro.setMinimumSize(dimension);
		this.jInternalFrameDetalleFormRubroEmplea.empleadopagorubroBeanSwingJInternalFrame.jScrollPanelDatosEmpleadoPagoRubro.setMaximumSize(dimension);
		this.jInternalFrameDetalleFormRubroEmplea.empleadopagorubroBeanSwingJInternalFrame.jScrollPanelDatosEmpleadoPagoRubro.setPreferredSize(dimension);


	}

	public void redimensionarTablaPanelRelacionadaHistorialPagoMesNomi() {
		Dimension dimension=new Dimension();

		dimension=this.jInternalFrameDetalleFormRubroEmplea.historialpagomesnomiBeanSwingJInternalFrame.jScrollPanelDatosHistorialPagoMesNomi.getPreferredSize();
		dimension.setSize(this.jInternalFrameDetalleFormRubroEmplea.jContentPaneDetalleRubroEmplea.getWidth(),dimension.getHeight());

		this.jInternalFrameDetalleFormRubroEmplea.historialpagomesnomiBeanSwingJInternalFrame.jScrollPanelDatosHistorialPagoMesNomi.setMinimumSize(dimension);
		this.jInternalFrameDetalleFormRubroEmplea.historialpagomesnomiBeanSwingJInternalFrame.jScrollPanelDatosHistorialPagoMesNomi.setMaximumSize(dimension);
		this.jInternalFrameDetalleFormRubroEmplea.historialpagomesnomiBeanSwingJInternalFrame.jScrollPanelDatosHistorialPagoMesNomi.setPreferredSize(dimension);


	}

	public void redimensionarTablaPanelRelacionadaHistorialPagoNomi() {
		Dimension dimension=new Dimension();

		dimension=this.jInternalFrameDetalleFormRubroEmplea.historialpagonomiBeanSwingJInternalFrame.jScrollPanelDatosHistorialPagoNomi.getPreferredSize();
		dimension.setSize(this.jInternalFrameDetalleFormRubroEmplea.jContentPaneDetalleRubroEmplea.getWidth(),dimension.getHeight());

		this.jInternalFrameDetalleFormRubroEmplea.historialpagonomiBeanSwingJInternalFrame.jScrollPanelDatosHistorialPagoNomi.setMinimumSize(dimension);
		this.jInternalFrameDetalleFormRubroEmplea.historialpagonomiBeanSwingJInternalFrame.jScrollPanelDatosHistorialPagoNomi.setMaximumSize(dimension);
		this.jInternalFrameDetalleFormRubroEmplea.historialpagonomiBeanSwingJInternalFrame.jScrollPanelDatosHistorialPagoNomi.setPreferredSize(dimension);


	}

	public void redimensionarTablaPanelRelacionadaRubroEmpleaCuentaContable() {
		Dimension dimension=new Dimension();

		dimension=this.jInternalFrameDetalleFormRubroEmplea.rubroempleacuentacontableBeanSwingJInternalFrame.jScrollPanelDatosRubroEmpleaCuentaContable.getPreferredSize();
		dimension.setSize(this.jInternalFrameDetalleFormRubroEmplea.jContentPaneDetalleRubroEmplea.getWidth(),dimension.getHeight());

		this.jInternalFrameDetalleFormRubroEmplea.rubroempleacuentacontableBeanSwingJInternalFrame.jScrollPanelDatosRubroEmpleaCuentaContable.setMinimumSize(dimension);
		this.jInternalFrameDetalleFormRubroEmplea.rubroempleacuentacontableBeanSwingJInternalFrame.jScrollPanelDatosRubroEmpleaCuentaContable.setMaximumSize(dimension);
		this.jInternalFrameDetalleFormRubroEmplea.rubroempleacuentacontableBeanSwingJInternalFrame.jScrollPanelDatosRubroEmpleaCuentaContable.setPreferredSize(dimension);


	}

	public void redimensionarTablaPanelRelacionadaRubroEmpleado() {
		Dimension dimension=new Dimension();

		dimension=this.jInternalFrameDetalleFormRubroEmplea.rubroempleadoBeanSwingJInternalFrame.jScrollPanelDatosRubroEmpleado.getPreferredSize();
		dimension.setSize(this.jInternalFrameDetalleFormRubroEmplea.jContentPaneDetalleRubroEmplea.getWidth(),dimension.getHeight());

		this.jInternalFrameDetalleFormRubroEmplea.rubroempleadoBeanSwingJInternalFrame.jScrollPanelDatosRubroEmpleado.setMinimumSize(dimension);
		this.jInternalFrameDetalleFormRubroEmplea.rubroempleadoBeanSwingJInternalFrame.jScrollPanelDatosRubroEmpleado.setMaximumSize(dimension);
		this.jInternalFrameDetalleFormRubroEmplea.rubroempleadoBeanSwingJInternalFrame.jScrollPanelDatosRubroEmpleado.setPreferredSize(dimension);


	}

	public void redimensionarTablaPanelRelacionadaRubroEstructura() {
		Dimension dimension=new Dimension();

		dimension=this.jInternalFrameDetalleFormRubroEmplea.rubroestructuraBeanSwingJInternalFrame.jScrollPanelDatosRubroEstructura.getPreferredSize();
		dimension.setSize(this.jInternalFrameDetalleFormRubroEmplea.jContentPaneDetalleRubroEmplea.getWidth(),dimension.getHeight());

		this.jInternalFrameDetalleFormRubroEmplea.rubroestructuraBeanSwingJInternalFrame.jScrollPanelDatosRubroEstructura.setMinimumSize(dimension);
		this.jInternalFrameDetalleFormRubroEmplea.rubroestructuraBeanSwingJInternalFrame.jScrollPanelDatosRubroEstructura.setMaximumSize(dimension);
		this.jInternalFrameDetalleFormRubroEmplea.rubroestructuraBeanSwingJInternalFrame.jScrollPanelDatosRubroEstructura.setPreferredSize(dimension);


	}

	public void redimensionarTablaPanelRelacionadaTipoPrestamo() {
		Dimension dimension=new Dimension();

		dimension=this.jInternalFrameDetalleFormRubroEmplea.tipoprestamoBeanSwingJInternalFrame.jScrollPanelDatosTipoPrestamo.getPreferredSize();
		dimension.setSize(this.jInternalFrameDetalleFormRubroEmplea.jContentPaneDetalleRubroEmplea.getWidth(),dimension.getHeight());

		this.jInternalFrameDetalleFormRubroEmplea.tipoprestamoBeanSwingJInternalFrame.jScrollPanelDatosTipoPrestamo.setMinimumSize(dimension);
		this.jInternalFrameDetalleFormRubroEmplea.tipoprestamoBeanSwingJInternalFrame.jScrollPanelDatosTipoPrestamo.setMaximumSize(dimension);
		this.jInternalFrameDetalleFormRubroEmplea.tipoprestamoBeanSwingJInternalFrame.jScrollPanelDatosTipoPrestamo.setPreferredSize(dimension);


	}

	public void redimensionarTablaPanelRelacionadaValorRubroVariable() {
		Dimension dimension=new Dimension();

		dimension=this.jInternalFrameDetalleFormRubroEmplea.valorrubrovariableBeanSwingJInternalFrame.jScrollPanelDatosValorRubroVariable.getPreferredSize();
		dimension.setSize(this.jInternalFrameDetalleFormRubroEmplea.jContentPaneDetalleRubroEmplea.getWidth(),dimension.getHeight());

		this.jInternalFrameDetalleFormRubroEmplea.valorrubrovariableBeanSwingJInternalFrame.jScrollPanelDatosValorRubroVariable.setMinimumSize(dimension);
		this.jInternalFrameDetalleFormRubroEmplea.valorrubrovariableBeanSwingJInternalFrame.jScrollPanelDatosValorRubroVariable.setMaximumSize(dimension);
		this.jInternalFrameDetalleFormRubroEmplea.valorrubrovariableBeanSwingJInternalFrame.jScrollPanelDatosValorRubroVariable.setPreferredSize(dimension);


	}
					
	public void cerrarFrameDetalleRubroEmplea() throws Exception {	    	        
	    try {
			//this.jDesktopPane.add(jInternalFrameDetalleFormRubroEmplea);
			
	       	this.jInternalFrameDetalleFormRubroEmplea.setVisible(false);
	        this.jInternalFrameDetalleFormRubroEmplea.setSelected(false);
			
			//this.jInternalFrameDetalleFormRubroEmplea.dispose();
			//this.jInternalFrameDetalleFormRubroEmplea=null;
			
	    } catch (final java.beans.PropertyVetoException e) {
		
			FuncionesSwing.manageException(this, e,logger,RubroEmpleaConstantesFunciones.CLASSNAME);
	    }
	}
	
	
	public void abrirFrameReporteDinamicoRubroEmplea() throws Exception {	    	        
	    try {
			
			this.jInternalFrameReporteDinamicoRubroEmplea.setVisible(true);
	        this.jInternalFrameReporteDinamicoRubroEmplea.setSelected(true);			
			
	    } catch (final java.beans.PropertyVetoException e) {
		
			FuncionesSwing.manageException(this, e,logger,RubroEmpleaConstantesFunciones.CLASSNAME);
	    }		
	}
	
	
	
	public void abrirFrameImportacionRubroEmplea() throws Exception {	    	        		
	    try {			
			this.jInternalFrameImportacionRubroEmplea.setVisible(true);
	        this.jInternalFrameImportacionRubroEmplea.setSelected(true);			
			
	    } catch (final java.beans.PropertyVetoException e) {
		
			FuncionesSwing.manageException(this, e,logger,RubroEmpleaConstantesFunciones.CLASSNAME);
	    }		
	}	
	
	
	
	
	
	public void abrirFrameOrderByRubroEmplea() throws Exception {	    	        		
	    try {
			this.jInternalFrameOrderByRubroEmplea.setVisible(true);
	        this.jInternalFrameOrderByRubroEmplea.setSelected(true);			
			
	    } catch (final java.beans.PropertyVetoException e) {
		
			FuncionesSwing.manageException(this, e,logger,RubroEmpleaConstantesFunciones.CLASSNAME);
	    }		
	}
	
	
	
	public void cerrarFrameOrderByRubroEmplea() throws Exception {	    	        		
	    try {			
			this.jInternalFrameOrderByRubroEmplea.setVisible(false);
	        this.jInternalFrameOrderByRubroEmplea.setSelected(false);			
		
	    } catch (final java.beans.PropertyVetoException e) {
		
			FuncionesSwing.manageException(this, e,logger,RubroEmpleaConstantesFunciones.CLASSNAME);
	    }		
	}
	
	
	
	public void cerrarFrameReporteDinamicoRubroEmplea() throws Exception {			
	    try {
			this.jInternalFrameReporteDinamicoRubroEmplea.setVisible(false);
	        this.jInternalFrameReporteDinamicoRubroEmplea.setSelected(false);			
		
	    } catch (final java.beans.PropertyVetoException e) {
		
			FuncionesSwing.manageException(this, e,logger,RubroEmpleaConstantesFunciones.CLASSNAME);
	    }		
	}
	
	
	
	public void cerrarFrameImportacionRubroEmplea() throws Exception {	    	        		
	    try {
			this.jInternalFrameImportacionRubroEmplea.setVisible(false);
	        this.jInternalFrameImportacionRubroEmplea.setSelected(false);
		
	    } catch (final java.beans.PropertyVetoException e) {
		
			FuncionesSwing.manageException(this, e,logger,RubroEmpleaConstantesFunciones.CLASSNAME);
	    }		
	}
	
	
	
	
	public void jButtonModificarRubroEmpleaActionPerformed(ActionEvent evt) throws Exception {   
		try {
			this.modificarRubroEmplea(evt,-1,false);
		
		} catch(Exception e) {
			FuncionesSwing.manageException(this, e,logger,RubroEmpleaConstantesFunciones.CLASSNAME);
		}
	}
	
	public void modificarRubroEmplea(ActionEvent evt,int rowIndex,Boolean esRelaciones) throws Exception {   
		try {
			int intSelectedRow = 0;	
			
			if(rowIndex>=0) {
				intSelectedRow=rowIndex;
			} else {
				intSelectedRow = this.jTableDatosRubroEmplea.getSelectedRow();
			}
			
			this.habilitarDeshabilitarControlesRubroEmplea(true);
			//this.isEsNuevoRubroEmplea=false;
			
			//ARCHITECTURE
			if(Constantes.ISUSAEJBLOGICLAYER) {
				this.rubroemplea =(RubroEmplea) this.rubroempleaLogic.getRubroEmpleas().toArray()[this.jTableDatosRubroEmplea.convertRowIndexToModel(intSelectedRow)];
			} else if(Constantes.ISUSAEJBREMOTE || Constantes.ISUSAEJBHOME ) {
				this.rubroemplea =(RubroEmplea) this.rubroempleas.toArray()[this.jTableDatosRubroEmplea.convertRowIndexToModel(intSelectedRow)];
			}
			//ARCHITECTURE
			
			this.actualizarEstadoCeldasBotonesRubroEmplea("ae", isGuardarCambiosEnLote, isEsMantenimientoRelacionado);
			
			//NO FUNCIONA BINDINGS
			this.inicializarActualizarBindingBotonesRubroEmplea(false) ;
			
			if(rubroempleaSessionBean.getConGuardarRelaciones()) {
			

				if(this.jInternalFrameDetalleFormRubroEmplea.historialpagonomiBeanSwingJInternalFrame!=null && this.jInternalFrameDetalleFormRubroEmplea.historialpagonomiBeanSwingJInternalFrame.historialpagonomiSessionBean.getEsGuardarRelacionado() && HistorialPagoNomiJInternalFrame.ESTA_CARGADO_PORPARTE) {
					this.jButtonHistorialPagoNomiActionPerformed(null,intSelectedRow,false,true,null);
				}

				if(this.jInternalFrameDetalleFormRubroEmplea.rubroestructuraBeanSwingJInternalFrame!=null && this.jInternalFrameDetalleFormRubroEmplea.rubroestructuraBeanSwingJInternalFrame.rubroestructuraSessionBean.getEsGuardarRelacionado() && RubroEstructuraJInternalFrame.ESTA_CARGADO_PORPARTE) {
					this.jButtonRubroEstructuraActionPerformed(null,intSelectedRow,false,true,null);
				}

				if(this.jInternalFrameDetalleFormRubroEmplea.defiprovisionempleadoBeanSwingJInternalFrame!=null && this.jInternalFrameDetalleFormRubroEmplea.defiprovisionempleadoBeanSwingJInternalFrame.defiprovisionempleadoSessionBean.getEsGuardarRelacionado() && DefiProvisionEmpleadoJInternalFrame.ESTA_CARGADO_PORPARTE) {
					this.jButtonDefiProvisionEmpleadoActionPerformed(null,intSelectedRow,false,true,null);
				}

				if(this.jInternalFrameDetalleFormRubroEmplea.empleadopagorubroBeanSwingJInternalFrame!=null && this.jInternalFrameDetalleFormRubroEmplea.empleadopagorubroBeanSwingJInternalFrame.empleadopagorubroSessionBean.getEsGuardarRelacionado() && EmpleadoPagoRubroJInternalFrame.ESTA_CARGADO_PORPARTE) {
					this.jButtonEmpleadoPagoRubroActionPerformed(null,intSelectedRow,false,true,null);
				}

				if(this.jInternalFrameDetalleFormRubroEmplea.historialpagomesnomiBeanSwingJInternalFrame!=null && this.jInternalFrameDetalleFormRubroEmplea.historialpagomesnomiBeanSwingJInternalFrame.historialpagomesnomiSessionBean.getEsGuardarRelacionado() && HistorialPagoMesNomiJInternalFrame.ESTA_CARGADO_PORPARTE) {
					this.jButtonHistorialPagoMesNomiActionPerformed(null,intSelectedRow,false,true,null);
				}

				if(this.jInternalFrameDetalleFormRubroEmplea.rubroempleadoBeanSwingJInternalFrame!=null && this.jInternalFrameDetalleFormRubroEmplea.rubroempleadoBeanSwingJInternalFrame.rubroempleadoSessionBean.getEsGuardarRelacionado() && RubroEmpleadoJInternalFrame.ESTA_CARGADO_PORPARTE) {
					this.jButtonRubroEmpleadoActionPerformed(null,intSelectedRow,false,true,null);
				}

				if(this.jInternalFrameDetalleFormRubroEmplea.valorrubrovariableBeanSwingJInternalFrame!=null && this.jInternalFrameDetalleFormRubroEmplea.valorrubrovariableBeanSwingJInternalFrame.valorrubrovariableSessionBean.getEsGuardarRelacionado() && ValorRubroVariableJInternalFrame.ESTA_CARGADO_PORPARTE) {
					this.jButtonValorRubroVariableActionPerformed(null,intSelectedRow,false,true,null);
				}

				if(this.jInternalFrameDetalleFormRubroEmplea.tipoprestamoBeanSwingJInternalFrame!=null && this.jInternalFrameDetalleFormRubroEmplea.tipoprestamoBeanSwingJInternalFrame.tipoprestamoSessionBean.getEsGuardarRelacionado() && TipoPrestamoJInternalFrame.ESTA_CARGADO_PORPARTE) {
					this.jButtonTipoPrestamoActionPerformed(null,intSelectedRow,false,true,null);
				}

				if(this.jInternalFrameDetalleFormRubroEmplea.rubroempleacuentacontableBeanSwingJInternalFrame!=null && this.jInternalFrameDetalleFormRubroEmplea.rubroempleacuentacontableBeanSwingJInternalFrame.rubroempleacuentacontableSessionBean.getEsGuardarRelacionado() && RubroEmpleaCuentaContableJInternalFrame.ESTA_CARGADO_PORPARTE) {
					this.jButtonRubroEmpleaCuentaContableActionPerformed(null,intSelectedRow,false,true,null);
				}
			}
			
			if(RubroEmpleaJInternalFrame.CON_DATOS_FRAME) {
				this.abrirFrameDetalleRubroEmplea(esRelaciones);
			}
			
			//SI ES MANUAL
			//this.inicializarActualizarBindingBotonesManualRubroEmplea(false) ;
		
		} catch(Exception e) {
			FuncionesSwing.manageException(this, e,logger,RubroEmpleaConstantesFunciones.CLASSNAME);
		}
	}
	
	public void seleccionarFilaTablaRubroEmpleaActual() { 	  
		try {
			//SELECCIONA FILA A OBJETO ACTUAL
			Integer intSelectedRow = this.jTableDatosRubroEmplea.getSelectedRow();
					
			if(intSelectedRow!=null && intSelectedRow>-1) {
				//ARCHITECTURE
				if(Constantes.ISUSAEJBLOGICLAYER) {
					this.rubroemplea =(RubroEmplea) this.rubroempleaLogic.getRubroEmpleas().toArray()[this.jTableDatosRubroEmplea.convertRowIndexToModel(intSelectedRow)];
				} else if(Constantes.ISUSAEJBREMOTE || Constantes.ISUSAEJBHOME ) {
					this.rubroemplea =(RubroEmplea) this.rubroempleas.toArray()[this.jTableDatosRubroEmplea.convertRowIndexToModel(intSelectedRow)];
				}
				//ARCHITECTURE
				
				//System.out.println(this.banco);
			}
			
		} catch(Exception e) {
  			FuncionesSwing.manageException2(this, e,logger,RubroEmpleaConstantesFunciones.CLASSNAME);
  		}
    }	
	
	public void seleccionarRubroEmplea(ActionEvent evt,int rowIndex) throws Exception {   
		try {
			
			if(this.jInternalFrameDetalleFormRubroEmplea==null) { //if(!this.conCargarFormDetalle) {
				this.inicializarFormDetalle();
			}
			
			int intSelectedRow = 0;	
			
			if(rowIndex>=0) {
				intSelectedRow=rowIndex;
			} else {
				intSelectedRow = this.jTableDatosRubroEmplea.getSelectedRow();
			}
			
			//this.habilitarDeshabilitarControlesRubroEmplea(true);
			//this.isEsNuevoRubroEmplea=false;
			
			//ARCHITECTURE
			if(Constantes.ISUSAEJBLOGICLAYER) {
				this.rubroemplea =(RubroEmplea) this.rubroempleaLogic.getRubroEmpleas().toArray()[this.jTableDatosRubroEmplea.convertRowIndexToModel(intSelectedRow)];
			} else if(Constantes.ISUSAEJBREMOTE || Constantes.ISUSAEJBHOME ) {
				this.rubroemplea =(RubroEmplea) this.rubroempleas.toArray()[this.jTableDatosRubroEmplea.convertRowIndexToModel(intSelectedRow)];
			}
			//ARCHITECTURE
			
			this.jInternalFrameParent.setIdCombosCodigoDesdeBusquedaForeignKey(this.rubroemplea.getId(),this.sTipoBusqueda);
			
			this.dispose();
			
			//this.actualizarEstadoCeldasBotonesRubroEmplea("ae", isGuardarCambiosEnLote, isEsMantenimientoRelacionado);
			
			//NO FUNCIONA BINDINGS
			/*
			this.inicializarActualizarBindingBotonesRubroEmplea(false) ;
			
			if(RubroEmpleaJInternalFrame.CON_DATOS_FRAME) {
				this.abrirFrameDetalleRubroEmplea(esRelaciones);
			}
			*/
			
			//SI ES MANUAL
			//this.inicializarActualizarBindingBotonesManualRubroEmplea(false) ;
		
		} catch(Exception e) {
			FuncionesSwing.manageException(this, e,logger,RubroEmpleaConstantesFunciones.CLASSNAME);
		}
	}		
	
	public void setIdCombosCodigoDesdeBusquedaForeignKey(Long id,String sType)throws Exception{
		
		try {
		} catch(Exception e) {
			throw e;
		}
	}
	
		
	
	public void recargarComboTablaTipoCalculo(List<TipoCalculo> tipocalculosForeignKey)throws Exception{
		TableColumn tableColumnTipoCalculo=this.jTableDatosRubroEmplea.getColumnModel().getColumn(Funciones2.getColumnIndexByName(this.jTableDatosRubroEmplea,RubroEmpleaConstantesFunciones.LABEL_IDTIPOCALCULO));
		TableCellEditor tableCellEditorTipoCalculo =tableColumnTipoCalculo.getCellEditor();

		TipoCalculoTableCell tipocalculoTableCellFk=(TipoCalculoTableCell)tableCellEditorTipoCalculo;

		if(tipocalculoTableCellFk!=null) {
			tipocalculoTableCellFk.settipocalculosForeignKey(tipocalculosForeignKey);
		}


		//SIEMPRE rowActual<0 , NO USADO POR EL MOMENTO
		//COMBO DE FILA ACTUAL SE ACTUALIZA, LOS DEMAS USAN EL ANTERIOR COMBO
		//int intSelectedRow = -1;
		//intSelectedRow=this.jTableDatosRubroEmplea.getSelectedRow();

		//if(intSelectedRow<=0) {
			//tipocalculoTableCellFk.setRowActual(intSelectedRow);
			//tipocalculoTableCellFk.settipocalculosForeignKeyActual(tipocalculosForeignKey);
		//}


		if(tipocalculoTableCellFk!=null) {
			tipocalculoTableCellFk.RecargarTipoCalculosForeignKey();
			//ACTUALIZA COMBOS DE TABLA-FIN
		}

	}	
	
	
	public void recargarComboTablaTipoRubroEmplea(List<TipoRubroEmplea> tiporubroempleasForeignKey)throws Exception{
		TableColumn tableColumnTipoRubroEmplea=this.jTableDatosRubroEmplea.getColumnModel().getColumn(Funciones2.getColumnIndexByName(this.jTableDatosRubroEmplea,RubroEmpleaConstantesFunciones.LABEL_IDTIPORUBROEMPLEA));
		TableCellEditor tableCellEditorTipoRubroEmplea =tableColumnTipoRubroEmplea.getCellEditor();

		TipoRubroEmpleaTableCell tiporubroempleaTableCellFk=(TipoRubroEmpleaTableCell)tableCellEditorTipoRubroEmplea;

		if(tiporubroempleaTableCellFk!=null) {
			tiporubroempleaTableCellFk.settiporubroempleasForeignKey(tiporubroempleasForeignKey);
		}


		//SIEMPRE rowActual<0 , NO USADO POR EL MOMENTO
		//COMBO DE FILA ACTUAL SE ACTUALIZA, LOS DEMAS USAN EL ANTERIOR COMBO
		//int intSelectedRow = -1;
		//intSelectedRow=this.jTableDatosRubroEmplea.getSelectedRow();

		//if(intSelectedRow<=0) {
			//tiporubroempleaTableCellFk.setRowActual(intSelectedRow);
			//tiporubroempleaTableCellFk.settiporubroempleasForeignKeyActual(tiporubroempleasForeignKey);
		//}


		if(tiporubroempleaTableCellFk!=null) {
			tiporubroempleaTableCellFk.RecargarTipoRubroEmpleasForeignKey();
			//ACTUALIZA COMBOS DE TABLA-FIN
		}

	}	
	
	
	public void recargarComboTablaTipoGrupoRubroEmplea(List<TipoGrupoRubroEmplea> tipogruporubroempleasForeignKey)throws Exception{
		TableColumn tableColumnTipoGrupoRubroEmplea=this.jTableDatosRubroEmplea.getColumnModel().getColumn(Funciones2.getColumnIndexByName(this.jTableDatosRubroEmplea,RubroEmpleaConstantesFunciones.LABEL_IDTIPOGRUPORUBROEMPLEA));
		TableCellEditor tableCellEditorTipoGrupoRubroEmplea =tableColumnTipoGrupoRubroEmplea.getCellEditor();

		TipoGrupoRubroEmpleaTableCell tipogruporubroempleaTableCellFk=(TipoGrupoRubroEmpleaTableCell)tableCellEditorTipoGrupoRubroEmplea;

		if(tipogruporubroempleaTableCellFk!=null) {
			tipogruporubroempleaTableCellFk.settipogruporubroempleasForeignKey(tipogruporubroempleasForeignKey);
		}


		//SIEMPRE rowActual<0 , NO USADO POR EL MOMENTO
		//COMBO DE FILA ACTUAL SE ACTUALIZA, LOS DEMAS USAN EL ANTERIOR COMBO
		//int intSelectedRow = -1;
		//intSelectedRow=this.jTableDatosRubroEmplea.getSelectedRow();

		//if(intSelectedRow<=0) {
			//tipogruporubroempleaTableCellFk.setRowActual(intSelectedRow);
			//tipogruporubroempleaTableCellFk.settipogruporubroempleasForeignKeyActual(tipogruporubroempleasForeignKey);
		//}


		if(tipogruporubroempleaTableCellFk!=null) {
			tipogruporubroempleaTableCellFk.RecargarTipoGrupoRubroEmpleasForeignKey();
			//ACTUALIZA COMBOS DE TABLA-FIN
		}

	}	
	
	
	
	public void jButtonActualizarRubroEmpleaActionPerformed(ActionEvent evt) throws Exception {   
		try	{
			if(Constantes.ISUSAEJBLOGICLAYER) {
				this.rubroempleaLogic.getNewConnexionToDeep("");
			}
			
			this.inicializarActualizarBindingParametrosReportesRubroEmplea(false);
			
			//if(!this.isEsNuevoRubroEmplea) {								
				int intSelectedRow = this.jTableDatosRubroEmplea.getSelectedRow();	
				
				//SE PIEDE INDICE SELECTED CON FILA TOTALES, ASEGURARSE QUE OBJETO ACTUAL ESTE EN FORMULARIO
				
				//ARCHITECTURE
				if(Constantes.ISUSAEJBLOGICLAYER) {
					this.rubroemplea =(RubroEmplea) this.rubroempleaLogic.getRubroEmpleas().toArray()[this.jTableDatosRubroEmplea.convertRowIndexToModel(intSelectedRow)];
				} else if(Constantes.ISUSAEJBREMOTE || Constantes.ISUSAEJBHOME) {
					this.rubroemplea =(RubroEmplea) this.rubroempleas.toArray()[this.jTableDatosRubroEmplea.convertRowIndexToModel(intSelectedRow)];
				}
				//ARCHITECTURE
				
			//}
				
			if(RubroEmpleaJInternalFrame.ISBINDING_MANUAL_TABLA) {
				this.setVariablesFormularioToObjetoActualRubroEmplea(this.rubroemplea,true);
				this.setVariablesFormularioToObjetoActualForeignKeysRubroEmplea(this.rubroemplea);
				
			}
			
			if(this.permiteMantenimiento(this.rubroemplea)) {	
				this.actualizar();
				
				if(!this.isGuardarCambiosEnLote && !this.rubroempleaSessionBean.getEsGuardarRelacionado()) {
					this.procesarBusqueda(sAccionBusqueda);
					
					this.isEsNuevoRubroEmplea=true;
					this.inicializarActualizarBindingTablaRubroEmplea(false);
					this.isEsNuevoRubroEmplea=false;
				
				} else {					
					
					//PARA RELACIONADO ACTUALIZAR FILA TOTALES
					this.isEsNuevoRubroEmplea=true;
					this.procesoActualizarFilaTotales(false,"MANTENIMIENTO");
					this.isEsNuevoRubroEmplea=false;
				}
						
								
				//NO FUNCIONA BINDINGS
				this.inicializarActualizarBindingBotonesRubroEmplea(false);
				
				//SI ES MANUAL
				//this.inicializarActualizarBindingBotonesManualRubroEmplea(false);
				
				this.habilitarDeshabilitarControlesRubroEmplea(false);
			
												
				
				if(RubroEmpleaJInternalFrame.CON_DATOS_FRAME) {
					if(!this.isPostAccionSinCerrar) {
						this.cerrarFrameDetalleRubroEmplea();
					}
				}
				
				if(this.isPostAccionNuevo) {
					this.jButtonNuevoRubroEmpleaActionPerformed(evt,rubroempleaSessionBean.getConGuardarRelaciones());
				} else {
					if(this.isPostAccionSinCerrar) {
						Integer intSelectedRowActual=this.getIndiceActualRubroEmplea(this.rubroemplea,intSelectedRow);
						
						if(intSelectedRow>-1) {
							this.jTableDatosRubroEmplea.setRowSelectionInterval(intSelectedRowActual, intSelectedRowActual);
							this.jButtonIdActionPerformed(evt,intSelectedRowActual,rubroempleaSessionBean.getConGuardarRelaciones(),false);
						}
					}
				}
				
				this.cancelar(false);
				
			} else {
				JOptionPane.showMessageDialog(this,"ESTE REGISTRO NO PUEDE ACTUALIZARSE","EDITAR",JOptionPane.ERROR_MESSAGE);
			}
			
			if(Constantes.ISUSAEJBLOGICLAYER) {
				this.rubroempleaLogic.commitNewConnexionToDeep();
			}
			
			
			if(this.jInternalFrameParent!=null) { //&& this.isEsMantenimientoRelacionado) {
				Boolean esUsoDesdeHijoLocal=true;
				String sTipo="Formulario";
				Boolean conIrServidorAplicacionParent=false;
				Long id=this.rubroemplea.getId();
				ArrayList<String> arrClasses=new ArrayList<String>();
				
				GeneralEntityParameterGeneral generalEntityParameterGeneral=new GeneralEntityParameterGeneral();
				
				generalEntityParameterGeneral.setEventoGlobalTipo(EventoGlobalTipo.FORM_HIJO_ACTUALIZAR);
				generalEntityParameterGeneral.setsDominio("Formulario");
				generalEntityParameterGeneral.setsDominioTipo(RubroEmplea.class.getName());
				
				this.jInternalFrameParent.setEventoParentGeneral(esUsoDesdeHijoLocal,"Formulario",RubroEmplea.class.getName(),sTipo,"FORMULARIO",esControlTabla,conIrServidorAplicacionParent,
					id,this, EventoGlobalTipo.FORM_HIJO_ACTUALIZAR,ControlTipo.FORM,EventoTipo.CHANGE,EventoSubTipo.CHANGED,arrClasses,
					evt,generalEntityParameterGeneral,this);
			}
			
		} catch(Exception e) {
			if(Constantes.ISUSAEJBLOGICLAYER) {
				this.rubroempleaLogic.rollbackNewConnexionToDeep();
			}
			
			FuncionesSwing.manageException(this, e,logger,RubroEmpleaConstantesFunciones.CLASSNAME);
		
		} finally {
			if(Constantes.ISUSAEJBLOGICLAYER) {
				this.rubroempleaLogic.closeNewConnexionToDeep();
			}
		}
	}
	
	public void jButtonEliminarRubroEmpleaActionPerformed(ActionEvent evt) throws Exception {   
		try	{
			
			if(Constantes.ISUSAEJBLOGICLAYER) {
				this.rubroempleaLogic.getNewConnexionToDeep("");
			}
			
			int intSelectedRow = this.jTableDatosRubroEmplea.getSelectedRow();	       
							
			//ARCHITECTURE
			if(Constantes.ISUSAEJBLOGICLAYER) {
				this.rubroemplea =(RubroEmplea) this.rubroempleaLogic.getRubroEmpleas().toArray()[this.jTableDatosRubroEmplea.convertRowIndexToModel(intSelectedRow)];
				this.rubroemplea.setIsDeleted(true);
			} else if(Constantes.ISUSAEJBREMOTE || Constantes.ISUSAEJBHOME ) {
				this.rubroemplea =(RubroEmplea) this.rubroempleas.toArray()[this.jTableDatosRubroEmplea.convertRowIndexToModel(intSelectedRow)];
				this.rubroemplea.setIsDeleted(true);
			}
			//ARCHITECTURE
			
			if(this.permiteMantenimiento(this.rubroemplea)) {
				this.eliminar();
				
				if(!this.isGuardarCambiosEnLote && !this.rubroempleaSessionBean.getEsGuardarRelacionado()) {
					this.procesarBusqueda(sAccionBusqueda);
				}
				
				((RubroEmpleaModel) this.jTableDatosRubroEmplea.getModel()).fireTableRowsDeleted(intSelectedRow,intSelectedRow);
				
				this.isEsNuevoRubroEmplea=true;
				this.inicializarActualizarBindingTablaRubroEmplea(false);
				this.isEsNuevoRubroEmplea=false;									
					
				//NO FUNCIONA BINDINGS
				this.inicializarActualizarBindingBotonesRubroEmplea(false);
				
				//SI ES MANUAL
				//this.inicializarActualizarBindingBotonesManualRubroEmplea(false);
				
				this.habilitarDeshabilitarControlesRubroEmplea(false);
				
				
				
				if(RubroEmpleaJInternalFrame.CON_DATOS_FRAME) {
					this.cerrarFrameDetalleRubroEmplea();
				}
			} else {
				JOptionPane.showMessageDialog(this,"ESTE REGISTRO NO PUEDE ACTUALIZARSE","EDITAR",JOptionPane.ERROR_MESSAGE);
			}	
			
			if(Constantes.ISUSAEJBLOGICLAYER) {
				this.rubroempleaLogic.commitNewConnexionToDeep();
			}
			
		} catch(Exception e) {
			
			if(Constantes.ISUSAEJBLOGICLAYER) {
				this.rubroempleaLogic.rollbackNewConnexionToDeep();
			}

			FuncionesSwing.manageException(this, e,logger,RubroEmpleaConstantesFunciones.CLASSNAME);
		
		} finally {
			if(Constantes.ISUSAEJBLOGICLAYER) {
				this.rubroempleaLogic.closeNewConnexionToDeep();
			}
		}		
	}
		
	public void jButtonCancelarRubroEmpleaActionPerformed(ActionEvent evt) throws Exception {                                         	   	       
	  	try {
			if(jTableDatosRubroEmplea.getRowCount()>=1) {
				jTableDatosRubroEmplea.removeRowSelectionInterval(0, jTableDatosRubroEmplea.getRowCount()-1);						
			}
						
			this.invalidValues=new InvalidValue[0];
			this.habilitarDeshabilitarControlesRubroEmplea(false);
			this.cancelar(true);			
			this.inicializarActualizarBindingTablaRubroEmplea(false);
			
			//NO FUNCIONA BINDINGS
			this.inicializarActualizarBindingBotonesRubroEmplea(false) ;
			
			//SI ES MANUAL
			//this.inicializarActualizarBindingBotonesManualRubroEmplea(false) ;
			
			this.isEsNuevoRubroEmplea=false;
			
			if(RubroEmpleaJInternalFrame.CON_DATOS_FRAME) {
				this.cerrarFrameDetalleRubroEmplea();
			}
			
		} catch(Exception e) {
			FuncionesSwing.manageException(this, e,logger,RubroEmpleaConstantesFunciones.CLASSNAME);
		}
	}
	
	public void jButtonGuardarCambiosRubroEmpleaActionPerformed(ActionEvent evt) throws Exception {    		
		try	{
			
			if(Constantes.ISUSAEJBLOGICLAYER) {
				this.rubroempleaLogic.getNewConnexionToDeep("");
			}
			
			//this.estaModoGuardarCambios=true;
			
	    	this.guardarCambios();
			
			if(!this.isErrorGuardar) {
				this.procesarBusqueda(this.sAccionBusqueda);
				
				//NO FUNCIONA BINDINGS
				this.inicializarActualizarBindingRubroEmplea(false);
				
				//SI ES MANUAL
				if(RubroEmpleaJInternalFrame.ISBINDING_MANUAL) {				
					//this.inicializarActualizarBindingManualRubroEmplea();				
				}
			}
			
			if(Constantes.ISUSAEJBLOGICLAYER) {
				this.rubroempleaLogic.commitNewConnexionToDeep();
			}
			
		} catch(Exception e) {
			if(Constantes.ISUSAEJBLOGICLAYER) {
				this.rubroempleaLogic.rollbackNewConnexionToDeep();
			}

			FuncionesSwing.manageException(this, e,logger,RubroEmpleaConstantesFunciones.CLASSNAME);
		
		} finally {
			if(Constantes.ISUSAEJBLOGICLAYER) {
				this.rubroempleaLogic.closeNewConnexionToDeep();
			}
			
			//this.estaModoGuardarCambios=false;
		}
	}
	
	public void jButtonNuevoGuardarCambiosRubroEmpleaActionPerformed(ActionEvent evt) throws Exception {    		
		try	{
			
			this.estaModoNuevo=true;
			this.estaModoNuevoGuardarCambios=true;
			
			//LO HACE NUEVOPREPARAR
			//this.iIdNuevoRubroEmplea--;			
			//RubroEmplea rubroempleaAux= new RubroEmplea();			
			//rubroempleaAux.setId(this.iIdNuevoRubroEmplea);
			
			if(this.jInternalFrameDetalleFormRubroEmplea==null) { //if(!this.conCargarFormDetalle) {
				this.inicializarFormDetalle();
			}
			
			this.aumentarTamanioFilaNuevaTablaRubroEmplea();
			
			if(this.conTotales) {
				this.quitarFilaTotales();
			}
			
			this.nuevoPreparar(true);
			
			this.setVariablesFormularioToObjetoActualForeignKeysRubroEmplea(this.rubroemplea);
			
			this.rubroemplea.setsType("NUEVO_GUARDAR_CAMBIOS");
			
			//LO HACE NUEVOPREPARAR
			/*
			if(Constantes.ISUSAEJBLOGICLAYER) {				
				this.rubroempleaLogic.getRubroEmpleas().add(this.rubroempleaAux);
			} else if(Constantes.ISUSAEJBREMOTE||Constantes.ISUSAEJBHOME) {
				this.rubroempleas.add(this.rubroempleaAux);				
			}
			*/
			
			this.inicializarActualizarBindingTablaRubroEmplea(false);
			
			this.jTableDatosRubroEmplea.setRowSelectionInterval(this.getIndiceNuevoRubroEmplea(), this.getIndiceNuevoRubroEmplea());
			
			int iLastRow =  this.jTableDatosRubroEmplea.getRowCount () - 1;
			Rectangle rectangle = this.jTableDatosRubroEmplea.getCellRect(iLastRow, 0, true);
			
			this.jTableDatosRubroEmplea.scrollRectToVisible(rectangle);
			
			//FILA TOTALES
			if(this.conTotales) {
				this.crearFilaTotales();
				
				this.inicializarActualizarBindingTablaRubroEmplea(false);
			}

		} catch(Exception e) {									
			FuncionesSwing.manageException(this, e,logger,RubroEmpleaConstantesFunciones.CLASSNAME);
			
		} finally {
			this.estaModoNuevo=false;
			this.estaModoNuevoGuardarCambios=false;
		}
	}		
	
	public void jButtonRecargarInformacionRubroEmpleaActionPerformed(ActionEvent evt) throws Exception {    		
		try {
			this.iNumeroPaginacionPagina=0;
			
			if(Constantes.ISUSAEJBLOGICLAYER) {
				this.rubroempleaLogic.getNewConnexionToDeep("");
			}
			
			this.inicializarActualizarBindingRubroEmplea(false,false);
			
	    	this.recargarInformacion();
			
			//NO FUNCIONA BINDINGS
			this.inicializarActualizarBindingRubroEmplea(false);
			
			//SI ES MANUAL
			if(RubroEmpleaJInternalFrame.ISBINDING_MANUAL) {
				//this.inicializarActualizarBindingManualRubroEmplea();
			}
			
			//this.abrirFrameTreeRubroEmplea();
			
			if(Constantes.ISUSAEJBLOGICLAYER) {
				this.rubroempleaLogic.commitNewConnexionToDeep();
			}
			
		} catch(Exception e) {
			if(Constantes.ISUSAEJBLOGICLAYER) {
				this.rubroempleaLogic.rollbackNewConnexionToDeep();
			}
			
			FuncionesSwing.manageException(this, e,logger,RubroEmpleaConstantesFunciones.CLASSNAME);
		
		} finally {
			if(Constantes.ISUSAEJBLOGICLAYER) {
				this.rubroempleaLogic.closeNewConnexionToDeep();
			}
		}	
	}
	
	
	public void jButtonGenerarImportacionRubroEmpleaActionPerformed(ActionEvent evt) throws Exception {    				
		BufferedReader bufferedReader = null;
		String sXmlStringFile="";
		String sPath="";
		this.arrDatoGeneralMinimos= new  ArrayList<DatoGeneralMinimo>();
		DatoGeneralMinimo datoGeneralMinimo=new DatoGeneralMinimo();
		String sLine="";
		
		try {			
			if(JOptionPane.showConfirmDialog(this, "ESTA SEGURO DE PROCESAR IMPORTACION DE Rubro EmpleaS ?", "MANTENIMIENTO DE Rubro Emplea", JOptionPane.OK_CANCEL_OPTION) == 0) {
				bufferedReader = new BufferedReader(new FileReader(this.jInternalFrameImportacionRubroEmplea.getFileImportacion().getAbsolutePath()));
								
				while ((sLine = bufferedReader.readLine()) != null) {
					datoGeneralMinimo=new DatoGeneralMinimo();
					datoGeneralMinimo.setsDescripcion(sLine);
					
					this.arrDatoGeneralMinimos.add(datoGeneralMinimo);
				}
				
				this.actualizarParametrosGeneralRubroEmplea();
						
				//ARCHITECTURE
				if(Constantes.ISUSAEJBLOGICLAYER) {						
					this.rubroempleaReturnGeneral=rubroempleaLogic.procesarImportacionRubroEmpleasWithConnection(this.parametroGeneralUsuario,this.moduloActual,this.opcionActual,this.usuarioActual,this.arrDatoGeneralMinimos,this.rubroempleaParameterGeneral);
						
				} else if(Constantes.ISUSAEJBREMOTE) {
						
				} else if(Constantes.ISUSAEJBHOME) {
				}
				//ARCHITECTURE
						
				this.procesarRubroEmpleaReturnGeneral();
			}
		} catch(Exception e) {
			FuncionesSwing.manageException(this, e,logger,RubroEmpleaConstantesFunciones.CLASSNAME);
		
		} finally {			
			if (bufferedReader != null) {
				bufferedReader.close();
			}	
		}				
	}
	
	
	
	public void jButtonAbrirImportacionRubroEmpleaActionPerformed(ActionEvent evt) throws Exception {    				
		BufferedWriter bufferedWriter = null;
		String sXmlStringFile="";
		String sPath="";
		
		try {
			int iReturnArchivo = this.jInternalFrameImportacionRubroEmplea.getjFileChooserImportacion().showOpenDialog(this);
 
            if (iReturnArchivo == JFileChooser.APPROVE_OPTION) {
            	this.jInternalFrameImportacionRubroEmplea.setFileImportacion(this.jInternalFrameImportacionRubroEmplea.getjFileChooserImportacion().getSelectedFile());
            	
				this.jInternalFrameImportacionRubroEmplea.getjTextFieldPathArchivoImportacion().setText(this.jInternalFrameImportacionRubroEmplea.getFileImportacion().getName());
				
				//System.out.println("ARCHIVO ESCOGIDO: "+this.fileImportacionRubroEmplea.getName());
				
            } else {
                //System.out.println("CANCELAR SELECCION");
				this.jInternalFrameImportacionRubroEmplea.getjTextFieldPathArchivoImportacion().setText("SELECCION CANCELADA");
            }			
		} catch(Exception e) {
			FuncionesSwing.manageException(this, e,logger,RubroEmpleaConstantesFunciones.CLASSNAME);
		
		} finally {			
			if (bufferedWriter != null) {
				bufferedWriter.close();
			}	
		}		
	}
	
	
	public void jButtonGenerarReporteDinamicoRubroEmpleaActionPerformed(ActionEvent evt) throws Exception {    		
		BufferedWriter bufferedWriter = null;
		String sXmlStringFile="";
		String sPath="";
		
		try {	
		
		ArrayList<RubroEmplea> rubroempleasSeleccionados=new ArrayList<RubroEmplea>();		

		rubroempleasSeleccionados=this.getRubroEmpleasSeleccionados(true);
		
		
		this.sTipoReporteDinamico=((Reporte)this.jInternalFrameReporteDinamicoRubroEmplea.getjComboBoxTiposReportesDinamico().getSelectedItem()).getsCodigo();
		
		this.sTipoArchivoReporteDinamico=((Reporte)this.jInternalFrameReporteDinamicoRubroEmplea.getjComboBoxTiposArchivosReportesDinamico().getSelectedItem()).getsCodigo();			
		
		
		this.sTipoArchivoReporte=this.sTipoArchivoReporteDinamico;
		
		//this.sTipoReporteExtra="Base";
		
			InputStream reportFile=null;
			InputStream imageFile=null;
			
			imageFile=AuxiliarImagenes.class.getResourceAsStream("LogoReporte.jpg");			
				
		
		
			reportFile = AuxiliarReportes.class.getResourceAsStream("RubroEmpleaBaseDesign.jrxml");	
			
			sPath=this.parametroGeneralUsuario.getpath_exportar()+"RubroEmpleaBaseDesign.jrxml";
			
			sXmlStringFile=Funciones2.getStringFromInputStream(reportFile);
						
			bufferedWriter = new BufferedWriter(new FileWriter(sPath));
			
			
			sXmlStringFile=this.actualizarReporteDinamico(sXmlStringFile);
			
			
			bufferedWriter.write(sXmlStringFile);
			
			bufferedWriter.close();
			
			try{JasperCompileManager.compileReportToFile(sPath);}catch(Exception e){e.printStackTrace();}
			
			this.actualizarVariablesTipoReporte(false,true,false,sPath);
			
			/*
			this.esReporteDinamico=true;
			this.sPathReporteDinamico=sPath.replace(".jrxml",".jasper");
			this.sTipoReporteExtra="";
			*/
			
			this.generarReporteRubroEmpleas("Todos",rubroempleasSeleccionados );

			if(this.parametroGeneralUsuario.getcon_mensaje_confirmacion() && !this.rubroempleaSessionBean.getEsGuardarRelacionado()) {//Constantes.ISMOSTRARMENSAJESMANTENIMIENTO && 
				//DEBE APARECER EL REPORTE DIRECTAMENTE
				//JOptionPane.showMessageDialog(this,"GENERADO CORRECTAMENTE:"+sPath,"MANTENIMIENTO DE Rubro Emplea",JOptionPane.INFORMATION_MESSAGE);
			}
			
		} catch(Exception e) {
			FuncionesSwing.manageException(this, e,logger,RubroEmpleaConstantesFunciones.CLASSNAME);
		
		} finally {			
			if (bufferedWriter != null) {
				bufferedWriter.close();
			}	
		}
	}		
	
	
	public String actualizarReporteDinamico(String sXmlStringFile) {				
		Reporte reporte=new Reporte();
		Integer iAnchoMaximoVertical=535;//781,782
		Integer iAnchoMaximoHorizontal=782;
		Integer iAnchoSum=0;
		Integer iAnchoColumna=0;
		
		Integer iAnchoMargenes=60;
		String sWidthGrafico="535";
		
		for(int index:this.jInternalFrameReporteDinamicoRubroEmplea.getjListColumnasSelectReporte().getSelectedIndices()) {
			reporte=(Reporte)this.jInternalFrameReporteDinamicoRubroEmplea.getjListColumnasSelectReporte().getModel().getElementAt(index);
			
			switch(reporte.getsCodigo()) {
				
				case RubroEmpleaConstantesFunciones.LABEL_IDEMPRESA:
					iAnchoColumna=100;

					if(iAnchoSum+iAnchoColumna<=iAnchoMaximoHorizontal) {
						sXmlStringFile=sXmlStringFile.replace("<!--col_Empresa_col", "");
						sXmlStringFile=sXmlStringFile.replace("col_Empresa_col-->", "");

						sXmlStringFile=sXmlStringFile.replace("colancho_Empresa_colancho", iAnchoColumna.toString());
						sXmlStringFile=sXmlStringFile.replace("colx_Empresa_colx", iAnchoSum.toString());

						iAnchoSum+=iAnchoColumna;
					}

					break;

				case RubroEmpleaConstantesFunciones.LABEL_IDTIPOCALCULO:
					iAnchoColumna=100;

					if(iAnchoSum+iAnchoColumna<=iAnchoMaximoHorizontal) {
						sXmlStringFile=sXmlStringFile.replace("<!--col_TipoCalculo_col", "");
						sXmlStringFile=sXmlStringFile.replace("col_TipoCalculo_col-->", "");

						sXmlStringFile=sXmlStringFile.replace("colancho_TipoCalculo_colancho", iAnchoColumna.toString());
						sXmlStringFile=sXmlStringFile.replace("colx_TipoCalculo_colx", iAnchoSum.toString());

						iAnchoSum+=iAnchoColumna;
					}

					break;

				case RubroEmpleaConstantesFunciones.LABEL_IDTIPORUBROEMPLEA:
					iAnchoColumna=100;

					if(iAnchoSum+iAnchoColumna<=iAnchoMaximoHorizontal) {
						sXmlStringFile=sXmlStringFile.replace("<!--col_TipoRubroEmplea_col", "");
						sXmlStringFile=sXmlStringFile.replace("col_TipoRubroEmplea_col-->", "");

						sXmlStringFile=sXmlStringFile.replace("colancho_TipoRubroEmplea_colancho", iAnchoColumna.toString());
						sXmlStringFile=sXmlStringFile.replace("colx_TipoRubroEmplea_colx", iAnchoSum.toString());

						iAnchoSum+=iAnchoColumna;
					}

					break;

				case RubroEmpleaConstantesFunciones.LABEL_IDTIPOGRUPORUBROEMPLEA:
					iAnchoColumna=100;

					if(iAnchoSum+iAnchoColumna<=iAnchoMaximoHorizontal) {
						sXmlStringFile=sXmlStringFile.replace("<!--col_TipoGrupoRubroEmplea_col", "");
						sXmlStringFile=sXmlStringFile.replace("col_TipoGrupoRubroEmplea_col-->", "");

						sXmlStringFile=sXmlStringFile.replace("colancho_TipoGrupoRubroEmplea_colancho", iAnchoColumna.toString());
						sXmlStringFile=sXmlStringFile.replace("colx_TipoGrupoRubroEmplea_colx", iAnchoSum.toString());

						iAnchoSum+=iAnchoColumna;
					}

					break;

				case RubroEmpleaConstantesFunciones.LABEL_CODIGO:
					iAnchoColumna=100;

					if(iAnchoSum+iAnchoColumna<=iAnchoMaximoHorizontal) {
						sXmlStringFile=sXmlStringFile.replace("<!--col_digo_col", "");
						sXmlStringFile=sXmlStringFile.replace("col_digo_col-->", "");

						sXmlStringFile=sXmlStringFile.replace("colancho_digo_colancho", iAnchoColumna.toString());
						sXmlStringFile=sXmlStringFile.replace("colx_digo_colx", iAnchoSum.toString());

						iAnchoSum+=iAnchoColumna;
					}

					break;

				case RubroEmpleaConstantesFunciones.LABEL_NOMBRE:
					iAnchoColumna=100;

					if(iAnchoSum+iAnchoColumna<=iAnchoMaximoHorizontal) {
						sXmlStringFile=sXmlStringFile.replace("<!--col_mbre_col", "");
						sXmlStringFile=sXmlStringFile.replace("col_mbre_col-->", "");

						sXmlStringFile=sXmlStringFile.replace("colancho_mbre_colancho", iAnchoColumna.toString());
						sXmlStringFile=sXmlStringFile.replace("colx_mbre_colx", iAnchoSum.toString());

						iAnchoSum+=iAnchoColumna;
					}

					break;

				case RubroEmpleaConstantesFunciones.LABEL_FORMULA:
					iAnchoColumna=100;

					if(iAnchoSum+iAnchoColumna<=iAnchoMaximoHorizontal) {
						sXmlStringFile=sXmlStringFile.replace("<!--col_rmula_col", "");
						sXmlStringFile=sXmlStringFile.replace("col_rmula_col-->", "");

						sXmlStringFile=sXmlStringFile.replace("colancho_rmula_colancho", iAnchoColumna.toString());
						sXmlStringFile=sXmlStringFile.replace("colx_rmula_colx", iAnchoSum.toString());

						iAnchoSum+=iAnchoColumna;
					}

					break;

				case RubroEmpleaConstantesFunciones.LABEL_ALIAS:
					iAnchoColumna=100;

					if(iAnchoSum+iAnchoColumna<=iAnchoMaximoHorizontal) {
						sXmlStringFile=sXmlStringFile.replace("<!--col_ias_col", "");
						sXmlStringFile=sXmlStringFile.replace("col_ias_col-->", "");

						sXmlStringFile=sXmlStringFile.replace("colancho_ias_colancho", iAnchoColumna.toString());
						sXmlStringFile=sXmlStringFile.replace("colx_ias_colx", iAnchoSum.toString());

						iAnchoSum+=iAnchoColumna;
					}

					break;

				case RubroEmpleaConstantesFunciones.LABEL_SECUENCIAL:
					iAnchoColumna=50;

					if(iAnchoSum+iAnchoColumna<=iAnchoMaximoHorizontal) {
						sXmlStringFile=sXmlStringFile.replace("<!--col_cuencial_col", "");
						sXmlStringFile=sXmlStringFile.replace("col_cuencial_col-->", "");

						sXmlStringFile=sXmlStringFile.replace("colancho_cuencial_colancho", iAnchoColumna.toString());
						sXmlStringFile=sXmlStringFile.replace("colx_cuencial_colx", iAnchoSum.toString());

						iAnchoSum+=iAnchoColumna;
					}

					break;

				case RubroEmpleaConstantesFunciones.LABEL_PARAROLPAGOS:
					iAnchoColumna=50;

					if(iAnchoSum+iAnchoColumna<=iAnchoMaximoHorizontal) {
						sXmlStringFile=sXmlStringFile.replace("<!--col_raRolPagos_col", "");
						sXmlStringFile=sXmlStringFile.replace("col_raRolPagos_col-->", "");

						sXmlStringFile=sXmlStringFile.replace("colancho_raRolPagos_colancho", iAnchoColumna.toString());
						sXmlStringFile=sXmlStringFile.replace("colx_raRolPagos_colx", iAnchoSum.toString());

						iAnchoSum+=iAnchoColumna;
					}

					break;

				case RubroEmpleaConstantesFunciones.LABEL_PARASUELDO:
					iAnchoColumna=50;

					if(iAnchoSum+iAnchoColumna<=iAnchoMaximoHorizontal) {
						sXmlStringFile=sXmlStringFile.replace("<!--col_raSueldo_col", "");
						sXmlStringFile=sXmlStringFile.replace("col_raSueldo_col-->", "");

						sXmlStringFile=sXmlStringFile.replace("colancho_raSueldo_colancho", iAnchoColumna.toString());
						sXmlStringFile=sXmlStringFile.replace("colx_raSueldo_colx", iAnchoSum.toString());

						iAnchoSum+=iAnchoColumna;
					}

					break;

				case RubroEmpleaConstantesFunciones.LABEL_PARAVACACIONES:
					iAnchoColumna=50;

					if(iAnchoSum+iAnchoColumna<=iAnchoMaximoHorizontal) {
						sXmlStringFile=sXmlStringFile.replace("<!--col_raVacaciones_col", "");
						sXmlStringFile=sXmlStringFile.replace("col_raVacaciones_col-->", "");

						sXmlStringFile=sXmlStringFile.replace("colancho_raVacaciones_colancho", iAnchoColumna.toString());
						sXmlStringFile=sXmlStringFile.replace("colx_raVacaciones_colx", iAnchoSum.toString());

						iAnchoSum+=iAnchoColumna;
					}

					break;

				case RubroEmpleaConstantesFunciones.LABEL_PARAIMPUESTORENTA:
					iAnchoColumna=50;

					if(iAnchoSum+iAnchoColumna<=iAnchoMaximoHorizontal) {
						sXmlStringFile=sXmlStringFile.replace("<!--col_raImpuestoRenta_col", "");
						sXmlStringFile=sXmlStringFile.replace("col_raImpuestoRenta_col-->", "");

						sXmlStringFile=sXmlStringFile.replace("colancho_raImpuestoRenta_colancho", iAnchoColumna.toString());
						sXmlStringFile=sXmlStringFile.replace("colx_raImpuestoRenta_colx", iAnchoSum.toString());

						iAnchoSum+=iAnchoColumna;
					}

					break;

				case RubroEmpleaConstantesFunciones.LABEL_PARASEGUROSOCIAL:
					iAnchoColumna=50;

					if(iAnchoSum+iAnchoColumna<=iAnchoMaximoHorizontal) {
						sXmlStringFile=sXmlStringFile.replace("<!--col_raSeguroSocial_col", "");
						sXmlStringFile=sXmlStringFile.replace("col_raSeguroSocial_col-->", "");

						sXmlStringFile=sXmlStringFile.replace("colancho_raSeguroSocial_colancho", iAnchoColumna.toString());
						sXmlStringFile=sXmlStringFile.replace("colx_raSeguroSocial_colx", iAnchoSum.toString());

						iAnchoSum+=iAnchoColumna;
					}

					break;

				case RubroEmpleaConstantesFunciones.LABEL_PARAPROVISIONES:
					iAnchoColumna=50;

					if(iAnchoSum+iAnchoColumna<=iAnchoMaximoHorizontal) {
						sXmlStringFile=sXmlStringFile.replace("<!--col_raProvisiones_col", "");
						sXmlStringFile=sXmlStringFile.replace("col_raProvisiones_col-->", "");

						sXmlStringFile=sXmlStringFile.replace("colancho_raProvisiones_colancho", iAnchoColumna.toString());
						sXmlStringFile=sXmlStringFile.replace("colx_raProvisiones_colx", iAnchoSum.toString());

						iAnchoSum+=iAnchoColumna;
					}

					break;

				case RubroEmpleaConstantesFunciones.LABEL_PARAUTILIDADES:
					iAnchoColumna=50;

					if(iAnchoSum+iAnchoColumna<=iAnchoMaximoHorizontal) {
						sXmlStringFile=sXmlStringFile.replace("<!--col_raUtilidades_col", "");
						sXmlStringFile=sXmlStringFile.replace("col_raUtilidades_col-->", "");

						sXmlStringFile=sXmlStringFile.replace("colancho_raUtilidades_colancho", iAnchoColumna.toString());
						sXmlStringFile=sXmlStringFile.replace("colx_raUtilidades_colx", iAnchoSum.toString());

						iAnchoSum+=iAnchoColumna;
					}

					break;

				case RubroEmpleaConstantesFunciones.LABEL_PARARUBROIESS:
					iAnchoColumna=50;

					if(iAnchoSum+iAnchoColumna<=iAnchoMaximoHorizontal) {
						sXmlStringFile=sXmlStringFile.replace("<!--col_raRubroIess_col", "");
						sXmlStringFile=sXmlStringFile.replace("col_raRubroIess_col-->", "");

						sXmlStringFile=sXmlStringFile.replace("colancho_raRubroIess_colancho", iAnchoColumna.toString());
						sXmlStringFile=sXmlStringFile.replace("colx_raRubroIess_colx", iAnchoSum.toString());

						iAnchoSum+=iAnchoColumna;
					}

					break;

				case RubroEmpleaConstantesFunciones.LABEL_ESFONDORESERVA:
					iAnchoColumna=50;

					if(iAnchoSum+iAnchoColumna<=iAnchoMaximoHorizontal) {
						sXmlStringFile=sXmlStringFile.replace("<!--col_FondoReserva_col", "");
						sXmlStringFile=sXmlStringFile.replace("col_FondoReserva_col-->", "");

						sXmlStringFile=sXmlStringFile.replace("colancho_FondoReserva_colancho", iAnchoColumna.toString());
						sXmlStringFile=sXmlStringFile.replace("colx_FondoReserva_colx", iAnchoSum.toString());

						iAnchoSum+=iAnchoColumna;
					}

					break;

				case RubroEmpleaConstantesFunciones.LABEL_ESDECIMOTERCERO:
					iAnchoColumna=50;

					if(iAnchoSum+iAnchoColumna<=iAnchoMaximoHorizontal) {
						sXmlStringFile=sXmlStringFile.replace("<!--col_DecimoTercero_col", "");
						sXmlStringFile=sXmlStringFile.replace("col_DecimoTercero_col-->", "");

						sXmlStringFile=sXmlStringFile.replace("colancho_DecimoTercero_colancho", iAnchoColumna.toString());
						sXmlStringFile=sXmlStringFile.replace("colx_DecimoTercero_colx", iAnchoSum.toString());

						iAnchoSum+=iAnchoColumna;
					}

					break;

				case RubroEmpleaConstantesFunciones.LABEL_ESDECIMOCUARTO:
					iAnchoColumna=50;

					if(iAnchoSum+iAnchoColumna<=iAnchoMaximoHorizontal) {
						sXmlStringFile=sXmlStringFile.replace("<!--col_DecimoCuarto_col", "");
						sXmlStringFile=sXmlStringFile.replace("col_DecimoCuarto_col-->", "");

						sXmlStringFile=sXmlStringFile.replace("colancho_DecimoCuarto_colancho", iAnchoColumna.toString());
						sXmlStringFile=sXmlStringFile.replace("colx_DecimoCuarto_colx", iAnchoSum.toString());

						iAnchoSum+=iAnchoColumna;
					}

					break;
					
				default :
					break;
			}
		}
		
		iAnchoSum+=iAnchoMargenes;
		
		if(iAnchoSum>iAnchoMaximoVertical) {
			sXmlStringFile=sXmlStringFile.replace("595", "842");
			//sXmlStringFile=sXmlStringFile.replace("842", "595");
			sXmlStringFile=sXmlStringFile.replace("535", "782");
			sXmlStringFile=sXmlStringFile.replace("Portrait", "Landscape");			
			sWidthGrafico="782";
		
		} else {
			sXmlStringFile=sXmlStringFile.replace("842", "595");
			//sXmlStringFile=sXmlStringFile.replace("595", "842");
			sXmlStringFile=sXmlStringFile.replace("782", "535");
			sXmlStringFile=sXmlStringFile.replace("Landscape", "Portrait");
			sWidthGrafico="535";
		}
		
		if(this.jInternalFrameReporteDinamicoRubroEmplea.getjCheckBoxConGraficoDinamico().isSelected()) {
			sXmlStringFile=this.actualizarGraficoReporteDinamico(sXmlStringFile,sWidthGrafico);
		} else {
			sXmlStringFile=sXmlStringFile.replace("colancho_summary_colancho", "30");
		}
		
		return sXmlStringFile;
	}
	
	
	
	public String actualizarGraficoReporteDinamico(String sXmlStringFile,String sWidthGrafico) {		
		String strGrafico="";		
		String sTipo="NORMAL";
		String strCategorySeries="";
		String sNombreCampoCategoria="";
		String sNombreCampoCategoriaValor="";
		Reporte reporte=new Reporte();
		Reporte reporteCategoriaValor=new Reporte();
		Reporte reporteTipoGraficoReporte=new Reporte();
		Boolean existe=false;
		
		sXmlStringFile=sXmlStringFile.replace("colancho_summary_colancho", "280");
		
		//CATEGORIA GRAFICO				
		reporte=((Reporte)this.jInternalFrameReporteDinamicoRubroEmplea.getjComboBoxColumnaCategoriaGrafico().getSelectedItem());
				
		//TIPO GRAFICO REPORTE
		reporteTipoGraficoReporte=((Reporte)this.jInternalFrameReporteDinamicoRubroEmplea.getjComboBoxTiposGraficosReportesDinamico().getSelectedItem());
		
		String sTipoGraficoReporte=reporteTipoGraficoReporte.getsCodigo();
		
		switch(reporte.getsCodigo()) {
			
				case RubroEmpleaConstantesFunciones.LABEL_IDEMPRESA:
					sNombreCampoCategoria="id_empresa";
					break;

				case RubroEmpleaConstantesFunciones.LABEL_IDTIPOCALCULO:
					sNombreCampoCategoria="id_tipo_calculo";
					break;

				case RubroEmpleaConstantesFunciones.LABEL_IDTIPORUBROEMPLEA:
					sNombreCampoCategoria="id_tipo_rubro_emplea";
					break;

				case RubroEmpleaConstantesFunciones.LABEL_IDTIPOGRUPORUBROEMPLEA:
					sNombreCampoCategoria="id_tipo_grupo_rubro_emplea";
					break;

				case RubroEmpleaConstantesFunciones.LABEL_CODIGO:
					sNombreCampoCategoria="codigo";
					break;

				case RubroEmpleaConstantesFunciones.LABEL_NOMBRE:
					sNombreCampoCategoria="nombre";
					break;

				case RubroEmpleaConstantesFunciones.LABEL_FORMULA:
					sNombreCampoCategoria="formula";
					break;

				case RubroEmpleaConstantesFunciones.LABEL_ALIAS:
					sNombreCampoCategoria="alias";
					break;

				case RubroEmpleaConstantesFunciones.LABEL_SECUENCIAL:
					sNombreCampoCategoria="secuencial";
					break;

				case RubroEmpleaConstantesFunciones.LABEL_PARAROLPAGOS:
					sNombreCampoCategoria="para_rol_pagos";
					break;

				case RubroEmpleaConstantesFunciones.LABEL_PARASUELDO:
					sNombreCampoCategoria="para_sueldo";
					break;

				case RubroEmpleaConstantesFunciones.LABEL_PARAVACACIONES:
					sNombreCampoCategoria="para_vacaciones";
					break;

				case RubroEmpleaConstantesFunciones.LABEL_PARAIMPUESTORENTA:
					sNombreCampoCategoria="para_impuesto_renta";
					break;

				case RubroEmpleaConstantesFunciones.LABEL_PARASEGUROSOCIAL:
					sNombreCampoCategoria="para_seguro_social";
					break;

				case RubroEmpleaConstantesFunciones.LABEL_PARAPROVISIONES:
					sNombreCampoCategoria="para_provisiones";
					break;

				case RubroEmpleaConstantesFunciones.LABEL_PARAUTILIDADES:
					sNombreCampoCategoria="para_utilidades";
					break;

				case RubroEmpleaConstantesFunciones.LABEL_PARARUBROIESS:
					sNombreCampoCategoria="para_rubro_iess";
					break;

				case RubroEmpleaConstantesFunciones.LABEL_ESFONDORESERVA:
					sNombreCampoCategoria="es_fondo_reserva";
					break;

				case RubroEmpleaConstantesFunciones.LABEL_ESDECIMOTERCERO:
					sNombreCampoCategoria="es_decimo_tercero";
					break;

				case RubroEmpleaConstantesFunciones.LABEL_ESDECIMOCUARTO:
					sNombreCampoCategoria="es_decimo_cuarto";
					break;
					
			default :
				break;
		}		
		//CATEGORIA GRAFICO
		
		//CATEGORIA VALOR				
		reporteCategoriaValor=((Reporte)this.jInternalFrameReporteDinamicoRubroEmplea.getjComboBoxColumnaCategoriaValor().getSelectedItem());
		
		switch(reporteCategoriaValor.getsCodigo()) {
			
				case RubroEmpleaConstantesFunciones.LABEL_IDEMPRESA:
					sNombreCampoCategoriaValor="id_empresa";
					break;

				case RubroEmpleaConstantesFunciones.LABEL_IDTIPOCALCULO:
					sNombreCampoCategoriaValor="id_tipo_calculo";
					break;

				case RubroEmpleaConstantesFunciones.LABEL_IDTIPORUBROEMPLEA:
					sNombreCampoCategoriaValor="id_tipo_rubro_emplea";
					break;

				case RubroEmpleaConstantesFunciones.LABEL_IDTIPOGRUPORUBROEMPLEA:
					sNombreCampoCategoriaValor="id_tipo_grupo_rubro_emplea";
					break;

				case RubroEmpleaConstantesFunciones.LABEL_CODIGO:
					sNombreCampoCategoriaValor="codigo";
					break;

				case RubroEmpleaConstantesFunciones.LABEL_NOMBRE:
					sNombreCampoCategoriaValor="nombre";
					break;

				case RubroEmpleaConstantesFunciones.LABEL_FORMULA:
					sNombreCampoCategoriaValor="formula";
					break;

				case RubroEmpleaConstantesFunciones.LABEL_ALIAS:
					sNombreCampoCategoriaValor="alias";
					break;

				case RubroEmpleaConstantesFunciones.LABEL_SECUENCIAL:
					sNombreCampoCategoriaValor="secuencial";
					break;

				case RubroEmpleaConstantesFunciones.LABEL_PARAROLPAGOS:
					sNombreCampoCategoriaValor="para_rol_pagos";
					break;

				case RubroEmpleaConstantesFunciones.LABEL_PARASUELDO:
					sNombreCampoCategoriaValor="para_sueldo";
					break;

				case RubroEmpleaConstantesFunciones.LABEL_PARAVACACIONES:
					sNombreCampoCategoriaValor="para_vacaciones";
					break;

				case RubroEmpleaConstantesFunciones.LABEL_PARAIMPUESTORENTA:
					sNombreCampoCategoriaValor="para_impuesto_renta";
					break;

				case RubroEmpleaConstantesFunciones.LABEL_PARASEGUROSOCIAL:
					sNombreCampoCategoriaValor="para_seguro_social";
					break;

				case RubroEmpleaConstantesFunciones.LABEL_PARAPROVISIONES:
					sNombreCampoCategoriaValor="para_provisiones";
					break;

				case RubroEmpleaConstantesFunciones.LABEL_PARAUTILIDADES:
					sNombreCampoCategoriaValor="para_utilidades";
					break;

				case RubroEmpleaConstantesFunciones.LABEL_PARARUBROIESS:
					sNombreCampoCategoriaValor="para_rubro_iess";
					break;

				case RubroEmpleaConstantesFunciones.LABEL_ESFONDORESERVA:
					sNombreCampoCategoriaValor="es_fondo_reserva";
					break;

				case RubroEmpleaConstantesFunciones.LABEL_ESDECIMOTERCERO:
					sNombreCampoCategoriaValor="es_decimo_tercero";
					break;

				case RubroEmpleaConstantesFunciones.LABEL_ESDECIMOCUARTO:
					sNombreCampoCategoriaValor="es_decimo_cuarto";
					break;
					
			default :
				break;
		}	
		//CATEGORIA VALOR
		
		//VALORES GRAFICO
		for(int index:this.jInternalFrameReporteDinamicoRubroEmplea.getjListColumnasValoresGrafico().getSelectedIndices()) {
			reporte=(Reporte)this.jInternalFrameReporteDinamicoRubroEmplea.getjListColumnasValoresGrafico().getModel().getElementAt(index);
			
			switch(reporte.getsCodigo()) {
				
				case RubroEmpleaConstantesFunciones.LABEL_IDEMPRESA:
					strCategorySeries+=FuncionesReporte.getStringCategoryGraficoNormalReporte(sTipoGraficoReporte,"Empresa",sNombreCampoCategoria,sNombreCampoCategoriaValor,"id_empresa");
					break;

				case RubroEmpleaConstantesFunciones.LABEL_IDTIPOCALCULO:
					strCategorySeries+=FuncionesReporte.getStringCategoryGraficoNormalReporte(sTipoGraficoReporte,"Tipo Calculo",sNombreCampoCategoria,sNombreCampoCategoriaValor,"id_tipo_calculo");
					break;

				case RubroEmpleaConstantesFunciones.LABEL_IDTIPORUBROEMPLEA:
					strCategorySeries+=FuncionesReporte.getStringCategoryGraficoNormalReporte(sTipoGraficoReporte,"Tipo Rubro Emplea",sNombreCampoCategoria,sNombreCampoCategoriaValor,"id_tipo_rubro_emplea");
					break;

				case RubroEmpleaConstantesFunciones.LABEL_IDTIPOGRUPORUBROEMPLEA:
					strCategorySeries+=FuncionesReporte.getStringCategoryGraficoNormalReporte(sTipoGraficoReporte,"Tipo Grupo Rubro Emplea",sNombreCampoCategoria,sNombreCampoCategoriaValor,"id_tipo_grupo_rubro_emplea");
					break;

				case RubroEmpleaConstantesFunciones.LABEL_CODIGO:
					strCategorySeries+=FuncionesReporte.getStringCategoryGraficoNormalReporte(sTipoGraficoReporte,"Codigo",sNombreCampoCategoria,sNombreCampoCategoriaValor,"codigo");
					break;

				case RubroEmpleaConstantesFunciones.LABEL_NOMBRE:
					strCategorySeries+=FuncionesReporte.getStringCategoryGraficoNormalReporte(sTipoGraficoReporte,"Nombre",sNombreCampoCategoria,sNombreCampoCategoriaValor,"nombre");
					break;

				case RubroEmpleaConstantesFunciones.LABEL_FORMULA:
					strCategorySeries+=FuncionesReporte.getStringCategoryGraficoNormalReporte(sTipoGraficoReporte,"Formula",sNombreCampoCategoria,sNombreCampoCategoriaValor,"formula");
					break;

				case RubroEmpleaConstantesFunciones.LABEL_ALIAS:
					strCategorySeries+=FuncionesReporte.getStringCategoryGraficoNormalReporte(sTipoGraficoReporte,"Alias",sNombreCampoCategoria,sNombreCampoCategoriaValor,"alias");
					break;

				case RubroEmpleaConstantesFunciones.LABEL_SECUENCIAL:
					strCategorySeries+=FuncionesReporte.getStringCategoryGraficoNormalReporte(sTipoGraficoReporte,"Secuencial",sNombreCampoCategoria,sNombreCampoCategoriaValor,"secuencial");
					break;

				case RubroEmpleaConstantesFunciones.LABEL_PARAROLPAGOS:
					strCategorySeries+=FuncionesReporte.getStringCategoryGraficoNormalReporte(sTipoGraficoReporte,"Para Rol Pagos",sNombreCampoCategoria,sNombreCampoCategoriaValor,"para_rol_pagos");
					break;

				case RubroEmpleaConstantesFunciones.LABEL_PARASUELDO:
					strCategorySeries+=FuncionesReporte.getStringCategoryGraficoNormalReporte(sTipoGraficoReporte,"Para Sueldo",sNombreCampoCategoria,sNombreCampoCategoriaValor,"para_sueldo");
					break;

				case RubroEmpleaConstantesFunciones.LABEL_PARAVACACIONES:
					strCategorySeries+=FuncionesReporte.getStringCategoryGraficoNormalReporte(sTipoGraficoReporte,"Para Vacaciones",sNombreCampoCategoria,sNombreCampoCategoriaValor,"para_vacaciones");
					break;

				case RubroEmpleaConstantesFunciones.LABEL_PARAIMPUESTORENTA:
					strCategorySeries+=FuncionesReporte.getStringCategoryGraficoNormalReporte(sTipoGraficoReporte,"Para Impuesto Renta",sNombreCampoCategoria,sNombreCampoCategoriaValor,"para_impuesto_renta");
					break;

				case RubroEmpleaConstantesFunciones.LABEL_PARASEGUROSOCIAL:
					strCategorySeries+=FuncionesReporte.getStringCategoryGraficoNormalReporte(sTipoGraficoReporte,"Para Seguro Social",sNombreCampoCategoria,sNombreCampoCategoriaValor,"para_seguro_social");
					break;

				case RubroEmpleaConstantesFunciones.LABEL_PARAPROVISIONES:
					strCategorySeries+=FuncionesReporte.getStringCategoryGraficoNormalReporte(sTipoGraficoReporte,"Para Provisiones",sNombreCampoCategoria,sNombreCampoCategoriaValor,"para_provisiones");
					break;

				case RubroEmpleaConstantesFunciones.LABEL_PARAUTILIDADES:
					strCategorySeries+=FuncionesReporte.getStringCategoryGraficoNormalReporte(sTipoGraficoReporte,"Para Utilades",sNombreCampoCategoria,sNombreCampoCategoriaValor,"para_utilidades");
					break;

				case RubroEmpleaConstantesFunciones.LABEL_PARARUBROIESS:
					strCategorySeries+=FuncionesReporte.getStringCategoryGraficoNormalReporte(sTipoGraficoReporte,"Pararubro Iess",sNombreCampoCategoria,sNombreCampoCategoriaValor,"para_rubro_iess");
					break;

				case RubroEmpleaConstantesFunciones.LABEL_ESFONDORESERVA:
					strCategorySeries+=FuncionesReporte.getStringCategoryGraficoNormalReporte(sTipoGraficoReporte,"Es Fondo Reserva",sNombreCampoCategoria,sNombreCampoCategoriaValor,"es_fondo_reserva");
					break;

				case RubroEmpleaConstantesFunciones.LABEL_ESDECIMOTERCERO:
					strCategorySeries+=FuncionesReporte.getStringCategoryGraficoNormalReporte(sTipoGraficoReporte,"Es Decimo Tercero",sNombreCampoCategoria,sNombreCampoCategoriaValor,"es_decimo_tercero");
					break;

				case RubroEmpleaConstantesFunciones.LABEL_ESDECIMOCUARTO:
					strCategorySeries+=FuncionesReporte.getStringCategoryGraficoNormalReporte(sTipoGraficoReporte,"Es Decimo Cuarto",sNombreCampoCategoria,sNombreCampoCategoriaValor,"es_decimo_cuarto");
					break;
					
				default :
					break;
			}
		}
		//VALORES GRAFICO
		//if(sTipoGraficoReporte.equals("BARRAS") || sTipoGraficoReporte.equals("BARRAS_3D") || sTipoGraficoReporte.equals("BARRAS_XY") ||
		//   sTipoGraficoReporte.equals("PASTEL") || sTipoGraficoReporte.equals("PASTEL_3D") || sTipoGraficoReporte.equals("APILADO")) {
			
			existe=true;
			strGrafico=FuncionesReporte.getStringGraficoReporte(sTipoGraficoReporte,sWidthGrafico,strCategorySeries);			
		//}
		
		if(existe) {
			sXmlStringFile=sXmlStringFile.replace("<!--GRAFICO-->", strGrafico);
		}												
		
		return sXmlStringFile;
	}
	
	
	//@SuppressWarnings("deprecation")
	
	public void jButtonGenerarExcelReporteDinamicoRubroEmpleaActionPerformed(ActionEvent evt) throws Exception {		
		ArrayList<RubroEmplea> rubroempleasSeleccionados=new ArrayList<RubroEmplea>();		
		
		rubroempleasSeleccionados=this.getRubroEmpleasSeleccionados(true);
		
		String sTipo=Funciones2.getTipoExportar(this.parametroGeneralUsuario);
		Boolean conCabecera=this.parametroGeneralUsuario.getcon_exportar_cabecera();
		String sDelimiter=Funciones2.getTipoDelimiter(this.parametroGeneralUsuario);
		String sPath=this.parametroGeneralUsuario.getpath_exportar()+"rubroemplea";//.xls";
		
		String sFilaCabecera="";
		String sFilaDatos="";
		
		Boolean existeFilas=false;
		
		Workbook workbook = null;
		FileOutputStream fileOutputStream=null;
		Reporte reporte=new Reporte();
		
		try {
			
			if(sTipoArchivoReporte=="EXCEL2") {
				workbook = new HSSFWorkbook();
				sPath+=".xls";
			
			} else if(sTipoArchivoReporte=="EXCEL2_2") {
				workbook = new XSSFWorkbook();
				sPath+=".xlsx";			
			}
		
			Sheet sheet = workbook.createSheet("RubroEmpleas");
						
		    			
			Integer iRow=0;
			Integer iCell=0;
			
			Row row = sheet.createRow(iRow);
			Cell cell = row.createCell(iCell);
			//cell.setCellValue("Blahblah");
			
			for(int index:this.jInternalFrameReporteDinamicoRubroEmplea.getjListColumnasSelectReporte().getSelectedIndices()) {
				reporte=(Reporte)this.jInternalFrameReporteDinamicoRubroEmplea.getjListColumnasSelectReporte().getModel().getElementAt(index);
				
				switch(reporte.getsCodigo()) {
					
				case RubroEmpleaConstantesFunciones.LABEL_IDEMPRESA:
					iRow=0;

					if(!existeFilas) {row = sheet.createRow(iRow);} else {row=sheet.getRow(iRow);}

					cell = row.createCell(iCell);
					cell.setCellValue(RubroEmpleaConstantesFunciones.LABEL_IDEMPRESA);
					iRow++;

					for(RubroEmplea rubroemplea:rubroempleasSeleccionados) {
						if(!existeFilas) {row = sheet.createRow(iRow);} else {row=sheet.getRow(iRow);}

						cell = row.createCell(iCell);
						cell.setCellValue(rubroemplea.getempresa_descripcion());
						iRow++;
					}

					existeFilas=true;
					iCell++;
					break;

				case RubroEmpleaConstantesFunciones.LABEL_IDTIPOCALCULO:
					iRow=0;

					if(!existeFilas) {row = sheet.createRow(iRow);} else {row=sheet.getRow(iRow);}

					cell = row.createCell(iCell);
					cell.setCellValue(RubroEmpleaConstantesFunciones.LABEL_IDTIPOCALCULO);
					iRow++;

					for(RubroEmplea rubroemplea:rubroempleasSeleccionados) {
						if(!existeFilas) {row = sheet.createRow(iRow);} else {row=sheet.getRow(iRow);}

						cell = row.createCell(iCell);
						cell.setCellValue(rubroemplea.gettipocalculo_descripcion());
						iRow++;
					}

					existeFilas=true;
					iCell++;
					break;

				case RubroEmpleaConstantesFunciones.LABEL_IDTIPORUBROEMPLEA:
					iRow=0;

					if(!existeFilas) {row = sheet.createRow(iRow);} else {row=sheet.getRow(iRow);}

					cell = row.createCell(iCell);
					cell.setCellValue(RubroEmpleaConstantesFunciones.LABEL_IDTIPORUBROEMPLEA);
					iRow++;

					for(RubroEmplea rubroemplea:rubroempleasSeleccionados) {
						if(!existeFilas) {row = sheet.createRow(iRow);} else {row=sheet.getRow(iRow);}

						cell = row.createCell(iCell);
						cell.setCellValue(rubroemplea.gettiporubroemplea_descripcion());
						iRow++;
					}

					existeFilas=true;
					iCell++;
					break;

				case RubroEmpleaConstantesFunciones.LABEL_IDTIPOGRUPORUBROEMPLEA:
					iRow=0;

					if(!existeFilas) {row = sheet.createRow(iRow);} else {row=sheet.getRow(iRow);}

					cell = row.createCell(iCell);
					cell.setCellValue(RubroEmpleaConstantesFunciones.LABEL_IDTIPOGRUPORUBROEMPLEA);
					iRow++;

					for(RubroEmplea rubroemplea:rubroempleasSeleccionados) {
						if(!existeFilas) {row = sheet.createRow(iRow);} else {row=sheet.getRow(iRow);}

						cell = row.createCell(iCell);
						cell.setCellValue(rubroemplea.gettipogruporubroemplea_descripcion());
						iRow++;
					}

					existeFilas=true;
					iCell++;
					break;

				case RubroEmpleaConstantesFunciones.LABEL_CODIGO:
					iRow=0;

					if(!existeFilas) {row = sheet.createRow(iRow);} else {row=sheet.getRow(iRow);}

					cell = row.createCell(iCell);
					cell.setCellValue(RubroEmpleaConstantesFunciones.LABEL_CODIGO);
					iRow++;

					for(RubroEmplea rubroemplea:rubroempleasSeleccionados) {
						if(!existeFilas) {row = sheet.createRow(iRow);} else {row=sheet.getRow(iRow);}

						cell = row.createCell(iCell);
						cell.setCellValue(rubroemplea.getcodigo());
						iRow++;
					}

					existeFilas=true;
					iCell++;
					break;

				case RubroEmpleaConstantesFunciones.LABEL_NOMBRE:
					iRow=0;

					if(!existeFilas) {row = sheet.createRow(iRow);} else {row=sheet.getRow(iRow);}

					cell = row.createCell(iCell);
					cell.setCellValue(RubroEmpleaConstantesFunciones.LABEL_NOMBRE);
					iRow++;

					for(RubroEmplea rubroemplea:rubroempleasSeleccionados) {
						if(!existeFilas) {row = sheet.createRow(iRow);} else {row=sheet.getRow(iRow);}

						cell = row.createCell(iCell);
						cell.setCellValue(rubroemplea.getnombre());
						iRow++;
					}

					existeFilas=true;
					iCell++;
					break;

				case RubroEmpleaConstantesFunciones.LABEL_FORMULA:
					iRow=0;

					if(!existeFilas) {row = sheet.createRow(iRow);} else {row=sheet.getRow(iRow);}

					cell = row.createCell(iCell);
					cell.setCellValue(RubroEmpleaConstantesFunciones.LABEL_FORMULA);
					iRow++;

					for(RubroEmplea rubroemplea:rubroempleasSeleccionados) {
						if(!existeFilas) {row = sheet.createRow(iRow);} else {row=sheet.getRow(iRow);}

						cell = row.createCell(iCell);
						cell.setCellValue(rubroemplea.getformula());
						iRow++;
					}

					existeFilas=true;
					iCell++;
					break;

				case RubroEmpleaConstantesFunciones.LABEL_ALIAS:
					iRow=0;

					if(!existeFilas) {row = sheet.createRow(iRow);} else {row=sheet.getRow(iRow);}

					cell = row.createCell(iCell);
					cell.setCellValue(RubroEmpleaConstantesFunciones.LABEL_ALIAS);
					iRow++;

					for(RubroEmplea rubroemplea:rubroempleasSeleccionados) {
						if(!existeFilas) {row = sheet.createRow(iRow);} else {row=sheet.getRow(iRow);}

						cell = row.createCell(iCell);
						cell.setCellValue(rubroemplea.getalias());
						iRow++;
					}

					existeFilas=true;
					iCell++;
					break;

				case RubroEmpleaConstantesFunciones.LABEL_SECUENCIAL:
					iRow=0;

					if(!existeFilas) {row = sheet.createRow(iRow);} else {row=sheet.getRow(iRow);}

					cell = row.createCell(iCell);
					cell.setCellValue(RubroEmpleaConstantesFunciones.LABEL_SECUENCIAL);
					iRow++;

					for(RubroEmplea rubroemplea:rubroempleasSeleccionados) {
						if(!existeFilas) {row = sheet.createRow(iRow);} else {row=sheet.getRow(iRow);}

						cell = row.createCell(iCell);
						cell.setCellValue(rubroemplea.getsecuencial());
						iRow++;
					}

					existeFilas=true;
					iCell++;
					break;

				case RubroEmpleaConstantesFunciones.LABEL_PARAROLPAGOS:
					iRow=0;

					if(!existeFilas) {row = sheet.createRow(iRow);} else {row=sheet.getRow(iRow);}

					cell = row.createCell(iCell);
					cell.setCellValue(RubroEmpleaConstantesFunciones.LABEL_PARAROLPAGOS);
					iRow++;

					for(RubroEmplea rubroemplea:rubroempleasSeleccionados) {
						if(!existeFilas) {row = sheet.createRow(iRow);} else {row=sheet.getRow(iRow);}

						cell = row.createCell(iCell);
						cell.setCellValue(rubroemplea.getpara_rol_pagos());
						iRow++;
					}

					existeFilas=true;
					iCell++;
					break;

				case RubroEmpleaConstantesFunciones.LABEL_PARASUELDO:
					iRow=0;

					if(!existeFilas) {row = sheet.createRow(iRow);} else {row=sheet.getRow(iRow);}

					cell = row.createCell(iCell);
					cell.setCellValue(RubroEmpleaConstantesFunciones.LABEL_PARASUELDO);
					iRow++;

					for(RubroEmplea rubroemplea:rubroempleasSeleccionados) {
						if(!existeFilas) {row = sheet.createRow(iRow);} else {row=sheet.getRow(iRow);}

						cell = row.createCell(iCell);
						cell.setCellValue(rubroemplea.getpara_sueldo());
						iRow++;
					}

					existeFilas=true;
					iCell++;
					break;

				case RubroEmpleaConstantesFunciones.LABEL_PARAVACACIONES:
					iRow=0;

					if(!existeFilas) {row = sheet.createRow(iRow);} else {row=sheet.getRow(iRow);}

					cell = row.createCell(iCell);
					cell.setCellValue(RubroEmpleaConstantesFunciones.LABEL_PARAVACACIONES);
					iRow++;

					for(RubroEmplea rubroemplea:rubroempleasSeleccionados) {
						if(!existeFilas) {row = sheet.createRow(iRow);} else {row=sheet.getRow(iRow);}

						cell = row.createCell(iCell);
						cell.setCellValue(rubroemplea.getpara_vacaciones());
						iRow++;
					}

					existeFilas=true;
					iCell++;
					break;

				case RubroEmpleaConstantesFunciones.LABEL_PARAIMPUESTORENTA:
					iRow=0;

					if(!existeFilas) {row = sheet.createRow(iRow);} else {row=sheet.getRow(iRow);}

					cell = row.createCell(iCell);
					cell.setCellValue(RubroEmpleaConstantesFunciones.LABEL_PARAIMPUESTORENTA);
					iRow++;

					for(RubroEmplea rubroemplea:rubroempleasSeleccionados) {
						if(!existeFilas) {row = sheet.createRow(iRow);} else {row=sheet.getRow(iRow);}

						cell = row.createCell(iCell);
						cell.setCellValue(rubroemplea.getpara_impuesto_renta());
						iRow++;
					}

					existeFilas=true;
					iCell++;
					break;

				case RubroEmpleaConstantesFunciones.LABEL_PARASEGUROSOCIAL:
					iRow=0;

					if(!existeFilas) {row = sheet.createRow(iRow);} else {row=sheet.getRow(iRow);}

					cell = row.createCell(iCell);
					cell.setCellValue(RubroEmpleaConstantesFunciones.LABEL_PARASEGUROSOCIAL);
					iRow++;

					for(RubroEmplea rubroemplea:rubroempleasSeleccionados) {
						if(!existeFilas) {row = sheet.createRow(iRow);} else {row=sheet.getRow(iRow);}

						cell = row.createCell(iCell);
						cell.setCellValue(rubroemplea.getpara_seguro_social());
						iRow++;
					}

					existeFilas=true;
					iCell++;
					break;

				case RubroEmpleaConstantesFunciones.LABEL_PARAPROVISIONES:
					iRow=0;

					if(!existeFilas) {row = sheet.createRow(iRow);} else {row=sheet.getRow(iRow);}

					cell = row.createCell(iCell);
					cell.setCellValue(RubroEmpleaConstantesFunciones.LABEL_PARAPROVISIONES);
					iRow++;

					for(RubroEmplea rubroemplea:rubroempleasSeleccionados) {
						if(!existeFilas) {row = sheet.createRow(iRow);} else {row=sheet.getRow(iRow);}

						cell = row.createCell(iCell);
						cell.setCellValue(rubroemplea.getpara_provisiones());
						iRow++;
					}

					existeFilas=true;
					iCell++;
					break;

				case RubroEmpleaConstantesFunciones.LABEL_PARAUTILIDADES:
					iRow=0;

					if(!existeFilas) {row = sheet.createRow(iRow);} else {row=sheet.getRow(iRow);}

					cell = row.createCell(iCell);
					cell.setCellValue(RubroEmpleaConstantesFunciones.LABEL_PARAUTILIDADES);
					iRow++;

					for(RubroEmplea rubroemplea:rubroempleasSeleccionados) {
						if(!existeFilas) {row = sheet.createRow(iRow);} else {row=sheet.getRow(iRow);}

						cell = row.createCell(iCell);
						cell.setCellValue(rubroemplea.getpara_utilidades());
						iRow++;
					}

					existeFilas=true;
					iCell++;
					break;

				case RubroEmpleaConstantesFunciones.LABEL_PARARUBROIESS:
					iRow=0;

					if(!existeFilas) {row = sheet.createRow(iRow);} else {row=sheet.getRow(iRow);}

					cell = row.createCell(iCell);
					cell.setCellValue(RubroEmpleaConstantesFunciones.LABEL_PARARUBROIESS);
					iRow++;

					for(RubroEmplea rubroemplea:rubroempleasSeleccionados) {
						if(!existeFilas) {row = sheet.createRow(iRow);} else {row=sheet.getRow(iRow);}

						cell = row.createCell(iCell);
						cell.setCellValue(rubroemplea.getpara_rubro_iess());
						iRow++;
					}

					existeFilas=true;
					iCell++;
					break;

				case RubroEmpleaConstantesFunciones.LABEL_ESFONDORESERVA:
					iRow=0;

					if(!existeFilas) {row = sheet.createRow(iRow);} else {row=sheet.getRow(iRow);}

					cell = row.createCell(iCell);
					cell.setCellValue(RubroEmpleaConstantesFunciones.LABEL_ESFONDORESERVA);
					iRow++;

					for(RubroEmplea rubroemplea:rubroempleasSeleccionados) {
						if(!existeFilas) {row = sheet.createRow(iRow);} else {row=sheet.getRow(iRow);}

						cell = row.createCell(iCell);
						cell.setCellValue(rubroemplea.getes_fondo_reserva());
						iRow++;
					}

					existeFilas=true;
					iCell++;
					break;

				case RubroEmpleaConstantesFunciones.LABEL_ESDECIMOTERCERO:
					iRow=0;

					if(!existeFilas) {row = sheet.createRow(iRow);} else {row=sheet.getRow(iRow);}

					cell = row.createCell(iCell);
					cell.setCellValue(RubroEmpleaConstantesFunciones.LABEL_ESDECIMOTERCERO);
					iRow++;

					for(RubroEmplea rubroemplea:rubroempleasSeleccionados) {
						if(!existeFilas) {row = sheet.createRow(iRow);} else {row=sheet.getRow(iRow);}

						cell = row.createCell(iCell);
						cell.setCellValue(rubroemplea.getes_decimo_tercero());
						iRow++;
					}

					existeFilas=true;
					iCell++;
					break;

				case RubroEmpleaConstantesFunciones.LABEL_ESDECIMOCUARTO:
					iRow=0;

					if(!existeFilas) {row = sheet.createRow(iRow);} else {row=sheet.getRow(iRow);}

					cell = row.createCell(iCell);
					cell.setCellValue(RubroEmpleaConstantesFunciones.LABEL_ESDECIMOCUARTO);
					iRow++;

					for(RubroEmplea rubroemplea:rubroempleasSeleccionados) {
						if(!existeFilas) {row = sheet.createRow(iRow);} else {row=sheet.getRow(iRow);}

						cell = row.createCell(iCell);
						cell.setCellValue(rubroemplea.getes_decimo_cuarto());
						iRow++;
					}

					existeFilas=true;
					iCell++;
					break;
					
					default :
						break;
				}
			}
			
			
			//if(conCabecera) {
			//	this.getFilaCabeceraExportarExcelRubroEmplea(row);				
			//	iRow++;
			//}				
			
			//for(RubroEmplea rubroempleaAux:rubroempleasSeleccionados) {
			//	row = sheet.createRow(iRow);
				
			//	this.getFilaDatosExportarExcelRubroEmplea(rubroempleaAux,row);
				
			//	iRow++;
			//}
			
			
			
			fileOutputStream = new FileOutputStream(new File(sPath));
		    
			workbook.write(fileOutputStream);
			
			//fileOutputStream.close();
			
			Constantes2.S_PATH_ULTIMO_ARCHIVO=sPath;
			
			if(this.parametroGeneralUsuario.getcon_mensaje_confirmacion() && !this.rubroempleaSessionBean.getEsGuardarRelacionado()) {//Constantes.ISMOSTRARMENSAJESMANTENIMIENTO && 
				JOptionPane.showMessageDialog(this,"EXPORTADO CORRECTAMENTE:"+sPath,"MANTENIMIENTO DE Rubro Emplea",JOptionPane.INFORMATION_MESSAGE);
			}
		} catch (Exception e) {
			throw e;
			
		} finally {			
       		if (fileOutputStream != null) {
				fileOutputStream.close();
			}			
		}				
	}	
	
	
	
	
	public void buscarPorId(Long idActual) throws Exception {    		
		try {
			if(Constantes.ISUSAEJBLOGICLAYER) {
				this.rubroempleaLogic.getNewConnexionToDeep("");
			}
			
			this.idActual=idActual;
			this.iNumeroPaginacionPagina=0;
			
			this.procesarBusqueda("PorId");
				    	
			//NO FUNCIONA BINDINGS
			this.inicializarActualizarBindingRubroEmplea(false);
			
			//SI ES MANUAL
			if(RubroEmpleaJInternalFrame.ISBINDING_MANUAL) {
				//this.inicializarActualizarBindingManualRubroEmplea();
			}	
			
			if(Constantes.ISUSAEJBLOGICLAYER) {
				this.rubroempleaLogic.commitNewConnexionToDeep();
			}
			
		} catch(Exception e) {
			
			if(Constantes.ISUSAEJBLOGICLAYER) {
				this.rubroempleaLogic.rollbackNewConnexionToDeep();
			}
			
			FuncionesSwing.manageException(this, e,logger);
			
		} finally {
			if(Constantes.ISUSAEJBLOGICLAYER) {
				this.rubroempleaLogic.closeNewConnexionToDeep();
			}
		}
	}
	
	public void jButtonAnterioresRubroEmpleaActionPerformed(ActionEvent evt) throws Exception {    		
		try	{
			//this.iNumeroPaginacion-=this.iNumeroPaginacion;
			/*
			if(this.iNumeroPaginacion<0) {
				this.iNumeroPaginacion=0;
			}
			*/
			//this.iNumeroPaginacionPagina=10;			
			
			if(Constantes.ISUSAEJBLOGICLAYER) {
				this.rubroempleaLogic.getNewConnexionToDeep("");
			}
			
			this.anteriores();
			
			//NO FUNCIONA BINDINGS
			this.inicializarActualizarBindingRubroEmplea(false);
			
			//SI ES MANUAL
			if(RubroEmpleaJInternalFrame.ISBINDING_MANUAL) {
	    		//this.inicializarActualizarBindingManualRubroEmplea();
			}
			
			if(Constantes.ISUSAEJBLOGICLAYER) {
				this.rubroempleaLogic.commitNewConnexionToDeep();
			}
			
		} catch(Exception e) {
			if(Constantes.ISUSAEJBLOGICLAYER) {
				this.rubroempleaLogic.rollbackNewConnexionToDeep();
			}
			
			FuncionesSwing.manageException(this, e,logger,RubroEmpleaConstantesFunciones.CLASSNAME);
		
		} finally {
			if(Constantes.ISUSAEJBLOGICLAYER) {
				this.rubroempleaLogic.closeNewConnexionToDeep();
			}
		}
	}
	
	public void jButtonSiguientesRubroEmpleaActionPerformed(ActionEvent evt) throws Exception {    		
		try	{
			//this.iNumeroPaginacion+=this.iNumeroPaginacion;
			//this.iNumeroPaginacionPagina=10;			
			
			if(Constantes.ISUSAEJBLOGICLAYER) {
				this.rubroempleaLogic.getNewConnexionToDeep("");
			}
			
			this.siguientes();
			
			//NO FUNCIONA BINDINGS
			this.inicializarActualizarBindingRubroEmplea(false);
			
			//SI ES MANUAL
			if(RubroEmpleaJInternalFrame.ISBINDING_MANUAL) {
	    		//this.inicializarActualizarBindingManualRubroEmplea();
			}		
			
			if(Constantes.ISUSAEJBLOGICLAYER) {
				this.rubroempleaLogic.commitNewConnexionToDeep();
			}
			
		} catch(Exception e) {
			if(Constantes.ISUSAEJBLOGICLAYER) {
				this.rubroempleaLogic.rollbackNewConnexionToDeep();
			}
			
			FuncionesSwing.manageException(this, e,logger,RubroEmpleaConstantesFunciones.CLASSNAME);
		
		} finally {
			if(Constantes.ISUSAEJBLOGICLAYER) {
				this.rubroempleaLogic.closeNewConnexionToDeep();
			}
		}
	}
	
	public void aumentarTamanioFilaNuevaTablaRubroEmplea() throws Exception {		
		Dimension dimensionMinimum=this.jTableDatosRubroEmplea.getMinimumSize();
		Dimension dimensionMaximum=this.jTableDatosRubroEmplea.getMaximumSize();
		Dimension dimensionPreferred=this.jTableDatosRubroEmplea.getPreferredSize();
	
		double iHeightConFilaNueva=dimensionPreferred.getHeight();
		
		iHeightConFilaNueva+=this.jTableDatosRubroEmplea.getRowHeight();
		
		dimensionMinimum.setSize(dimensionMinimum.getWidth(),iHeightConFilaNueva);
		dimensionMaximum.setSize(dimensionMaximum.getWidth(),iHeightConFilaNueva);
		dimensionPreferred.setSize(dimensionPreferred.getWidth(),iHeightConFilaNueva);
		
		this.jTableDatosRubroEmplea.setMinimumSize(dimensionMinimum);
		this.jTableDatosRubroEmplea.setMaximumSize(dimensionMaximum);
		this.jTableDatosRubroEmplea.setPreferredSize(dimensionPreferred);	
	}
	
	public void inicializarActualizarBindingRubroEmplea(Boolean esInicializar) throws Exception {
		this.inicializarActualizarBindingRubroEmplea(esInicializar,true);
	}
	
	public void inicializarActualizarBindingRubroEmplea(Boolean esInicializar,Boolean conTabla) throws Exception {		
		if(conTabla) {
			this.inicializarActualizarBindingTablaRubroEmplea(esInicializar);
		}
		
		this.inicializarActualizarBindingBotonesRubroEmplea(esInicializar);
		
		//FUNCIONALIDAD_RELACIONADO
		if(!this.rubroempleaSessionBean.getEsGuardarRelacionado()) {
			try{this.inicializarActualizarBindingBusquedasRubroEmplea(esInicializar);}catch(Exception e){e.printStackTrace();}
			
			//this.inicializarActualizarBindingtiposArchivosReportesAccionesRubroEmplea(esInicializar) ;
			
			this.inicializarActualizarBindingParametrosReportesRubroEmplea(esInicializar) ;
		}
		
		if(esInicializar) {
			if( !RubroEmpleaJInternalFrame.ISBINDING_MANUAL_TABLA ||
			   	!RubroEmpleaJInternalFrame.ISBINDING_MANUAL) {
			   	
			}
		}
	}
	
	public void inicializarActualizarBindingManualRubroEmplea() throws Exception {		
		//NO SE NECESITA HACER BINDING OTRA VEZ
		//this.inicializarActualizarBindingTablaRubroEmplea();
		
		this.inicializarActualizarBindingBotonesManualRubroEmplea(true);
		
		//FUNCIONALIDAD_RELACIONADO
		if(!this.rubroempleaSessionBean.getEsGuardarRelacionado()) {
			
			this.inicializarActualizarBindingBusquedasManualRubroEmplea();			
			
			
			//this.inicializarActualizarBindingtiposArchivosReportesAccionesRubroEmplea() ;
			
			this.inicializarActualizarBindingParametrosReportesPostAccionesManualRubroEmplea(false) ;			
			
		}
	}
	
	public void inicializarActualizarBindingParametrosReportesPostAccionesManualRubroEmplea(Boolean esSetControles) throws Exception {
		try	{					
			if(!esSetControles) {
				this.isSeleccionarTodos=this.jCheckBoxSeleccionarTodosRubroEmplea.isSelected();
				this.isSeleccionados=this.jCheckBoxSeleccionadosRubroEmplea.isSelected();
				
				
				this.conGraficoReporte=this.jCheckBoxConGraficoReporteRubroEmplea.isSelected();															
				
				
				if(this.jInternalFrameDetalleFormRubroEmplea!=null) {
				this.isPostAccionNuevo=this.jInternalFrameDetalleFormRubroEmplea.jCheckBoxPostAccionNuevoRubroEmplea.isSelected();
				this.isPostAccionSinCerrar=this.jInternalFrameDetalleFormRubroEmplea.jCheckBoxPostAccionSinCerrarRubroEmplea.isSelected();
				this.isPostAccionSinMensaje=this.jInternalFrameDetalleFormRubroEmplea.jCheckBoxPostAccionSinMensajeRubroEmplea.isSelected();
				}
			
			} else {
				this.jCheckBoxSeleccionarTodosRubroEmplea.setSelected(this.isSeleccionarTodos);
				this.jCheckBoxSeleccionadosRubroEmplea.setSelected(this.isSeleccionados);
				
				
				this.jCheckBoxConGraficoReporteRubroEmplea.setSelected(this.conGraficoReporte);				
				
				
				if(this.jInternalFrameDetalleFormRubroEmplea!=null) {
				this.jInternalFrameDetalleFormRubroEmplea.jCheckBoxPostAccionNuevoRubroEmplea.setSelected(this.isPostAccionNuevo);
				this.jInternalFrameDetalleFormRubroEmplea.jCheckBoxPostAccionSinCerrarRubroEmplea.setSelected(this.isPostAccionSinCerrar);
				this.jInternalFrameDetalleFormRubroEmplea.jCheckBoxPostAccionSinMensajeRubroEmplea.setSelected(this.isPostAccionSinMensaje);
				}
			}
			
			
			if(this.jComboBoxTiposPaginacionRubroEmplea.getSelectedItem()!=null) {
				this.sTipoPaginacion=((Reporte)this.jComboBoxTiposPaginacionRubroEmplea.getSelectedItem()).getsCodigo();			
			}
			
			
			
			if(this.jInternalFrameDetalleFormRubroEmplea!=null) {
			this.sTipoAccionFormulario=((Reporte)this.jInternalFrameDetalleFormRubroEmplea.jComboBoxTiposAccionesFormularioRubroEmplea.getSelectedItem()).getsCodigo();
			}
			
			
			
			if(!this.conCargarMinimo) {
				this.sTipoArchivoReporte=((Reporte)this.jComboBoxTiposArchivosReportesRubroEmplea.getSelectedItem()).getsCodigo();			
				
				if(this.jInternalFrameReporteDinamicoRubroEmplea!=null) {
					this.sTipoArchivoReporteDinamico=((Reporte)this.jInternalFrameReporteDinamicoRubroEmplea.getjComboBoxTiposArchivosReportesDinamico().getSelectedItem()).getsCodigo();			
				}
				
				this.sTipoRelacion=((Reporte)this.jComboBoxTiposRelacionesRubroEmplea.getSelectedItem()).getsCodigo();
									
				this.sTipoAccion=((Reporte)this.jComboBoxTiposAccionesRubroEmplea.getSelectedItem()).getsCodigo();
													
				this.sTipoSeleccionar=((Reporte)this.jComboBoxTiposSeleccionarRubroEmplea.getSelectedItem()).getsCodigo();
									
				this.sTipoReporte=((Reporte)this.jComboBoxTiposReportesRubroEmplea.getSelectedItem()).getsCodigo();							
					
				if(this.jInternalFrameReporteDinamicoRubroEmplea!=null) {
					this.sTipoReporteDinamico=((Reporte)this.jInternalFrameReporteDinamicoRubroEmplea.getjComboBoxTiposReportesDinamico().getSelectedItem()).getsCodigo();							
				}
				
				this.sTipoGraficoReporte=((Reporte)this.jComboBoxTiposGraficosReportesRubroEmplea.getSelectedItem()).getsCodigo();											
			}			
			
			this.sValorCampoGeneral=this.jTextFieldValorCampoGeneralRubroEmplea.getText();						
			
			
			
		} catch(Exception e) {
			throw e;
		}
	}
	
	public void inicializarActualizarBindingParametrosReportesRubroEmplea(Boolean esInicializar) throws Exception {
		try	{	
			if(RubroEmpleaJInternalFrame.ISBINDING_MANUAL) {
				this. inicializarActualizarBindingParametrosReportesPostAccionesManualRubroEmplea(false);
			} else {
			}
		} catch(Exception e) {
			throw e;
		}
	}	
	
	public void inicializarActualizarBindingtiposArchivosReportesAccionesRubroEmplea() throws Exception {
		try	{
			if(RubroEmpleaJInternalFrame.ISBINDING_MANUAL) {
				this.inicializarActualizarBindingtiposArchivosReportesAccionesManualRubroEmplea();
			} else {
			}
		} catch(Exception e) {
			throw e;
		}
	}
	
	@SuppressWarnings("unchecked")
	public void inicializarActualizarBindingtiposArchivosReportesAccionesManualFormDetalleRubroEmplea() throws Exception {
		//TIPOS ACCIONES FORMULARIO	
		this.jInternalFrameDetalleFormRubroEmplea.jComboBoxTiposAccionesFormularioRubroEmplea.removeAllItems();
				
		for(Reporte reporte:this.tiposAccionesFormulario) {
			this.jInternalFrameDetalleFormRubroEmplea.jComboBoxTiposAccionesFormularioRubroEmplea.addItem(reporte);
		}
		
		//TIPOS ACCIONES FORMULARIO
	}
	
	@SuppressWarnings("unchecked")
	public void inicializarActualizarBindingtiposArchivosReportesAccionesManualRubroEmplea() throws Exception {
		try	{
			
			//TIPOS ARCHIVOS REPORTES
			this.jComboBoxTiposArchivosReportesRubroEmplea.removeAllItems();
				
			for(Reporte reporte:this.tiposArchivosReportes) {
				this.jComboBoxTiposArchivosReportesRubroEmplea.addItem(reporte);
			}
			
			
				
			//TIPOS REPORTES
			this.jComboBoxTiposReportesRubroEmplea.removeAllItems();
				
			for(Reporte reporte:this.tiposReportes) {
				this.jComboBoxTiposReportesRubroEmplea.addItem(reporte);
			}
			
			
			//TIPOS GRAFICOS REPORTES
			this.jComboBoxTiposGraficosReportesRubroEmplea.removeAllItems();
				
			for(Reporte reporte:this.tiposGraficosReportes) {
				this.jComboBoxTiposGraficosReportesRubroEmplea.addItem(reporte);
			}
			
			
			//TIPOS PAGINACION
			this.jComboBoxTiposPaginacionRubroEmplea.removeAllItems();
				
			for(Reporte reporte:this.tiposPaginacion) {
				this.jComboBoxTiposPaginacionRubroEmplea.addItem(reporte);
			}
			
			
			if(!this.rubroempleaSessionBean.getEsGuardarRelacionado()) {
				this.jComboBoxTiposPaginacionRubroEmplea.setSelectedItem(Funciones2.getTipoPaginacionDefecto("NORMAL",this.tiposPaginacion));
			} else {
				this.jComboBoxTiposPaginacionRubroEmplea.setSelectedItem(Funciones2.getTipoPaginacionDefecto("RELACIONADO",this.tiposPaginacion));
			}
				
				
			//TIPOS ACCIONES	
			this.jComboBoxTiposRelacionesRubroEmplea.removeAllItems();
				
			for(Reporte reporte:this.tiposRelaciones) {
				this.jComboBoxTiposRelacionesRubroEmplea.addItem(reporte);
			}
			
			//TIPOS ACCIONES
				
				
			//TIPOS ACCIONES	
			this.jComboBoxTiposAccionesRubroEmplea.removeAllItems();
				
			for(Reporte reporte:this.tiposAcciones) {
				this.jComboBoxTiposAccionesRubroEmplea.addItem(reporte);
			}
			
			//TIPOS ACCIONES			
			
			
			
			//TIPOS ACCIONES FORMULARIO	
			if(this.jInternalFrameDetalleFormRubroEmplea!=null) { //if(this.conCargarFormDetalle) {
				this.jInternalFrameDetalleFormRubroEmplea.jComboBoxTiposAccionesFormularioRubroEmplea.removeAllItems();
				
				for(Reporte reporte:this.tiposAccionesFormulario) {
					this.jInternalFrameDetalleFormRubroEmplea.jComboBoxTiposAccionesFormularioRubroEmplea.addItem(reporte);
				}
				
			}
			//TIPOS ACCIONES FORMULARIO
			
			
			
			//TIPOS SELECCIONAR
			this.jComboBoxTiposSeleccionarRubroEmplea.removeAllItems();
				
			for(Reporte reporte:this.tiposSeleccionar) {
				this.jComboBoxTiposSeleccionarRubroEmplea.addItem(reporte);
			}
			
			
			if(this.tiposSeleccionar!=null && this.tiposSeleccionar.size()>1) {
				this.jComboBoxTiposSeleccionarRubroEmplea.setSelectedIndex(1);
			}
				
			//REPORTE DINAMICO
			this.inicializarActualizarBindingtiposArchivosReportesDinamicoAccionesManualRubroEmplea();
							
			//TIPOS COLUMNAS SELECT
			//TIPOS SELECCIONAR
			
			
		} catch(Exception e) {
			throw e;
		}
	}		
	
	
	@SuppressWarnings("unchecked")
	public void inicializarActualizarBindingtiposArchivosReportesDinamicoAccionesManualRubroEmplea() throws Exception {
		try	{
			DefaultListModel<Reporte> defaultListModel=new DefaultListModel<Reporte>();
			
			
			//TIPOS ARCHIVOS REPORTES DINAMICO
			if(this.jInternalFrameReporteDinamicoRubroEmplea!=null) {
				this.jInternalFrameReporteDinamicoRubroEmplea.getjComboBoxTiposArchivosReportesDinamico().removeAllItems();
					
				for(Reporte reporte:this.tiposArchivosReportesDinamico) {
					this.jInternalFrameReporteDinamicoRubroEmplea.getjComboBoxTiposArchivosReportesDinamico().addItem(reporte);
				}
				
			}
			
			//TIPOS REPORTES DINAMICO
			if(this.jInternalFrameReporteDinamicoRubroEmplea!=null) {
				this.jInternalFrameReporteDinamicoRubroEmplea.getjComboBoxTiposReportesDinamico().removeAllItems();
					
				for(Reporte reporte:this.tiposReportesDinamico) {
					this.jInternalFrameReporteDinamicoRubroEmplea.getjComboBoxTiposReportesDinamico().addItem(reporte);
				}
				
			}
			
			defaultListModel=new DefaultListModel<Reporte>();
			
			if(this.jInternalFrameReporteDinamicoRubroEmplea!=null) {
				
				if(this.jInternalFrameReporteDinamicoRubroEmplea.getjListColumnasSelectReporte()!=null) {
					this.jInternalFrameReporteDinamicoRubroEmplea.getjListColumnasSelectReporte().removeAll();
						
					for(Reporte reporte:this.tiposColumnasSelect) {
						defaultListModel.addElement(reporte);
					}						
						
					this.jInternalFrameReporteDinamicoRubroEmplea.getjListColumnasSelectReporte().setModel(defaultListModel);									
						
				}	
					
				//TIPOS RELACIONES SELECT
				//TIPOS SELECCIONAR
				defaultListModel=new DefaultListModel<Reporte>();
				if(this.jInternalFrameReporteDinamicoRubroEmplea.getjListRelacionesSelectReporte()!=null) {
					this.jInternalFrameReporteDinamicoRubroEmplea.getjListRelacionesSelectReporte().removeAll();
						
					for(Reporte reporte:this.tiposRelacionesSelect) {
						defaultListModel.addElement(reporte);
					}						
						
					this.jInternalFrameReporteDinamicoRubroEmplea.getjListRelacionesSelectReporte().setModel(defaultListModel);									
						
				}	
				
			}
		} catch(Exception e) {
			throw e;
		}
	}	
	
	
	
	public void inicializarActualizarBindingBusquedasManualRubroEmplea()  throws Exception {				
		//BYDAN_BUSQUEDAS		
		
		if(this.jComboBoxid_tipo_calculoFK_IdTipoCalculoRubroEmplea.getSelectedItem()!=null){this.id_tipo_calculoFK_IdTipoCalculo=((TipoCalculo)this.jComboBoxid_tipo_calculoFK_IdTipoCalculoRubroEmplea.getSelectedItem()).getId();}
		if(this.jComboBoxid_tipo_grupo_rubro_empleaFK_IdTipoGrupoRubroEmpleaRubroEmplea.getSelectedItem()!=null){this.id_tipo_grupo_rubro_empleaFK_IdTipoGrupoRubroEmplea=((TipoGrupoRubroEmplea)this.jComboBoxid_tipo_grupo_rubro_empleaFK_IdTipoGrupoRubroEmpleaRubroEmplea.getSelectedItem()).getId();}
		if(this.jComboBoxid_tipo_rubro_empleaFK_IdTipoRubroEmpleaRubroEmplea.getSelectedItem()!=null){this.id_tipo_rubro_empleaFK_IdTipoRubroEmplea=((TipoRubroEmplea)this.jComboBoxid_tipo_rubro_empleaFK_IdTipoRubroEmpleaRubroEmplea.getSelectedItem()).getId();}
		
	}
	
	
	
	
	public void inicializarActualizarBindingBusquedasRubroEmplea(Boolean esInicializar) throws Exception {				
		if(RubroEmpleaJInternalFrame.ISBINDING_MANUAL) {
			
			this.inicializarActualizarBindingBusquedasManualRubroEmplea();			
			
		} else {
		}
	}		
		
	public void inicializarActualizarBindingTablaRubroEmplea() throws Exception {
		this.inicializarActualizarBindingTablaRubroEmplea(false);
	}
	
	
	public void inicializarActualizarBindingTablaOrderByRubroEmplea() {
		//TABLA OrderBy	
		TableColumn tableColumn=new TableColumn();
		Integer iWidthTableDefinicionOrderBy=0;			
			
		this.jInternalFrameOrderByRubroEmplea.getjTableDatosOrderBy().setModel(new TablaGeneralOrderByModel(this.arrOrderBy));
					
		//DEFINIR RENDERERS OrderBy
		tableColumn=this.jInternalFrameOrderByRubroEmplea.getjTableDatosOrderBy().getColumnModel().getColumn(Funciones2.getColumnIndexByName(this.jInternalFrameOrderByRubroEmplea.getjTableDatosOrderBy(),OrderBy.ISSELECTED));			
		//tableColumn.addPropertyChangeListener(new RubroEmpleaPropertyChangeListener());
					
		tableColumn.setPreferredWidth(50); 	 
		tableColumn.setWidth(50); 	 
		tableColumn.setMinWidth(50);
		tableColumn.setMaxWidth(50);
				
		iWidthTableDefinicionOrderBy+=50;
					
		tableColumn=this.jInternalFrameOrderByRubroEmplea.getjTableDatosOrderBy().getColumnModel().getColumn(Funciones2.getColumnIndexByName(this.jInternalFrameOrderByRubroEmplea.getjTableDatosOrderBy(),OrderBy.NOMBRE));
		//tableColumn.addPropertyChangeListener(new RubroEmpleaPropertyChangeListener());
					
		tableColumn.setPreferredWidth(150); 	 
		tableColumn.setWidth(150); 	 
		tableColumn.setMinWidth(150);
		tableColumn.setMaxWidth(150);
				
		iWidthTableDefinicionOrderBy+=150;
					
		//tableColumn=this.jTableDatosRubroEmpleaOrderBy.getColumnModel().getColumn(Funciones2.getColumnIndexByName(this.jTableDatosRubroEmpleaOrderBy,OrderBy.NOMBREDB));			
		////tableColumn.addPropertyChangeListener(new RubroEmpleaPropertyChangeListener());
								
		tableColumn=this.jInternalFrameOrderByRubroEmplea.getjTableDatosOrderBy().getColumnModel().getColumn(Funciones2.getColumnIndexByName(this.jInternalFrameOrderByRubroEmplea.getjTableDatosOrderBy(),OrderBy.ESDESC));
		//tableColumn.addPropertyChangeListener(new RubroEmpleaPropertyChangeListener());
												
		tableColumn.setPreferredWidth(50); 	 
		tableColumn.setWidth(50); 	 
		tableColumn.setMinWidth(50);
		tableColumn.setMaxWidth(50);
				
		((AbstractTableModel) this.jInternalFrameOrderByRubroEmplea.getjTableDatosOrderBy().getModel()).fireTableDataChanged();
				
		iWidthTableDefinicionOrderBy+=50;
	}
	
	
	
	public void inicializarActualizarBindingTablaRubroEmplea(Boolean esInicializar) throws Exception {
		Boolean isNoExiste=false;
		Integer iCountNumeroColumnasNormal=0;
		Integer iCountNumeroColumnasFk=0;
		
		this.iWidthTableDefinicion=0;
		
		int iSizeTabla=0;
		
		iSizeTabla=this.getSizeTablaDatos();
		
	if(esInicializar || ConstantesSwing.FORZAR_INICIALIZAR_TABLA) {//esInicializar
		//ARCHITECTURE
		if(Constantes.ISUSAEJBLOGICLAYER) {
			isNoExiste=rubroempleaLogic.getRubroEmpleas().size()==0;
		} else if(Constantes.ISUSAEJBREMOTE || Constantes.ISUSAEJBHOME) {
			isNoExiste=rubroempleas.size()==0;
		}
		//ARCHITECTURE
			
		if(isNoExiste) {
			if(this.iNumeroPaginacion-this.iNumeroPaginacion>0) {
				this.iNumeroPaginacion-=this.iNumeroPaginacion;
			}
		}
		
		TableColumn tableColumn=new TableColumn();
		
		if(RubroEmpleaJInternalFrame.ISBINDING_MANUAL_TABLA) {
			
			//ARCHITECTURE
			if(Constantes.ISUSAEJBLOGICLAYER) {
				this.jTableDatosRubroEmplea.setModel(new RubroEmpleaModel(this.rubroempleaLogic.getRubroEmpleas(),this));
			} else if(Constantes.ISUSAEJBREMOTE || Constantes.ISUSAEJBHOME ) {
				this.jTableDatosRubroEmplea.setModel(new RubroEmpleaModel(this.rubroempleas,this));
			}
			//ARCHITECTURE
			
							
			
			
			if(this.jInternalFrameOrderByRubroEmplea!=null && this.jInternalFrameOrderByRubroEmplea.getjTableDatosOrderBy()!=null) {
				this.inicializarActualizarBindingTablaOrderByRubroEmplea();
			}
			
								
			//DEFINIR RENDERERS
			tableColumn=this.jTableDatosRubroEmplea.getColumnModel().getColumn(Funciones2.getColumnIndexByName(this.jTableDatosRubroEmplea,Constantes2.S_SELECCIONAR));
			//tableColumn.addPropertyChangeListener(new RubroEmpleaPropertyChangeListener());
			tableColumn.setCellRenderer(new BooleanRenderer(true,"Seleccionar "+RubroEmpleaConstantesFunciones.SCLASSWEBTITULO,rubroempleaConstantesFunciones.resaltarSeleccionarRubroEmplea,true,false,"","",this));
			tableColumn.setCellEditor(new BooleanEditorRenderer(true,"Seleccionar "+RubroEmpleaConstantesFunciones.SCLASSWEBTITULO,rubroempleaConstantesFunciones.resaltarSeleccionarRubroEmplea,false,"","",this));			
			
			tableColumn.setPreferredWidth(50); 	 
			tableColumn.setWidth(50); 	 
			tableColumn.setMinWidth(50); 
			tableColumn.setMaxWidth(50); 
			
			this.iWidthTableDefinicion+=50;
			
			


			tableColumn=this.jTableDatosRubroEmplea.getColumnModel().getColumn(Funciones2.getColumnIndexByName(this.jTableDatosRubroEmplea,RubroEmpleaConstantesFunciones.LABEL_ID));

		if(this.rubroempleaConstantesFunciones.mostraridRubroEmplea && Funciones2.permiteMostarParaBusqueda(this.esParaBusquedaForeignKey,RubroEmpleaConstantesFunciones.LABEL_ID,false,iCountNumeroColumnasNormal++,iCountNumeroColumnasFk)) {
			tableColumn.setCellRenderer(new TextFieldRenderer(this.rubroempleaConstantesFunciones.resaltaridRubroEmplea,this.rubroempleaConstantesFunciones.activaridRubroEmplea,this,true,"idRubroEmplea","BASICO"));
			tableColumn.setCellEditor(new TextFieldEditorRenderer(this.rubroempleaConstantesFunciones.resaltaridRubroEmplea,this.rubroempleaConstantesFunciones.activaridRubroEmplea,this,true,"idRubroEmplea","BASICO",false));

			tableColumn.setPreferredWidth(50);
			tableColumn.setWidth(50);
			tableColumn.setMinWidth(50);
			tableColumn.setMaxWidth(50);

			this.iWidthTableDefinicion+=50;
		} else {
			Funciones2.setTableColumnOcultar(tableColumn);
		}


			tableColumn=this.jTableDatosRubroEmplea.getColumnModel().getColumn(Funciones2.getColumnIndexByName(this.jTableDatosRubroEmplea,RubroEmpleaConstantesFunciones.LABEL_IDEMPRESA));

		if(this.rubroempleaConstantesFunciones.mostrarid_empresaRubroEmplea && Funciones2.permiteMostarParaBusqueda(this.esParaBusquedaForeignKey,RubroEmpleaConstantesFunciones.LABEL_IDEMPRESA,true,iCountNumeroColumnasNormal,iCountNumeroColumnasFk++) && Constantes.ISDEVELOPING) {
			tableColumn.setCellRenderer(new EmpresaTableCell(this.empresasForeignKey,this.rubroempleaConstantesFunciones.resaltarid_empresaRubroEmplea,this,this.rubroempleaConstantesFunciones.activarid_empresaRubroEmplea));
			tableColumn.setCellEditor(new EmpresaTableCell(this.empresasForeignKey,this.rubroempleaConstantesFunciones.resaltarid_empresaRubroEmplea,this,this.rubroempleaConstantesFunciones.activarid_empresaRubroEmplea,false,"id_empresaRubroEmplea","GLOBAL"));

			tableColumn.setPreferredWidth(Constantes.ISWING_ANCHO_COLUMNA + FuncionesSwing.getValorProporcion(Constantes.ISWING_ANCHO_CONTROL,0));
			tableColumn.setWidth(Constantes.ISWING_ANCHO_COLUMNA + FuncionesSwing.getValorProporcion(Constantes.ISWING_ANCHO_CONTROL,0));
			tableColumn.setMinWidth(Constantes.ISWING_ANCHO_COLUMNA + FuncionesSwing.getValorProporcion(Constantes.ISWING_ANCHO_CONTROL,0));
			tableColumn.setMaxWidth(Constantes.ISWING_ANCHO_COLUMNA + FuncionesSwing.getValorProporcion(Constantes.ISWING_ANCHO_CONTROL,0));

			this.iWidthTableDefinicion+=Constantes.ISWING_ANCHO_COLUMNA + FuncionesSwing.getValorProporcion(Constantes.ISWING_ANCHO_CONTROL,0);
			//tableColumn.addPropertyChangeListener(new RubroEmpleaPropertyChangeListener());
		} else {
			Funciones2.setTableColumnOcultar(tableColumn);
		}


			tableColumn=this.jTableDatosRubroEmplea.getColumnModel().getColumn(Funciones2.getColumnIndexByName(this.jTableDatosRubroEmplea,RubroEmpleaConstantesFunciones.LABEL_IDTIPOCALCULO));

		if(this.rubroempleaConstantesFunciones.mostrarid_tipo_calculoRubroEmplea && Funciones2.permiteMostarParaBusqueda(this.esParaBusquedaForeignKey,RubroEmpleaConstantesFunciones.LABEL_IDTIPOCALCULO,true,iCountNumeroColumnasNormal,iCountNumeroColumnasFk++)) {
			tableColumn.setCellRenderer(new TipoCalculoTableCell(this.tipocalculosForeignKey,this.rubroempleaConstantesFunciones.resaltarid_tipo_calculoRubroEmplea,this,this.rubroempleaConstantesFunciones.activarid_tipo_calculoRubroEmplea));
			tableColumn.setCellEditor(new TipoCalculoTableCell(this.tipocalculosForeignKey,this.rubroempleaConstantesFunciones.resaltarid_tipo_calculoRubroEmplea,this,this.rubroempleaConstantesFunciones.activarid_tipo_calculoRubroEmplea,true,"id_tipo_calculoRubroEmplea","BASICO"));

			tableColumn.setPreferredWidth(Constantes.ISWING_ANCHO_COLUMNA + FuncionesSwing.getValorProporcion(Constantes.ISWING_ANCHO_CONTROL,0));
			tableColumn.setWidth(Constantes.ISWING_ANCHO_COLUMNA + FuncionesSwing.getValorProporcion(Constantes.ISWING_ANCHO_CONTROL,0));
			tableColumn.setMinWidth(Constantes.ISWING_ANCHO_COLUMNA + FuncionesSwing.getValorProporcion(Constantes.ISWING_ANCHO_CONTROL,0));
			tableColumn.setMaxWidth(Constantes.ISWING_ANCHO_COLUMNA + FuncionesSwing.getValorProporcion(Constantes.ISWING_ANCHO_CONTROL,0));

			this.iWidthTableDefinicion+=Constantes.ISWING_ANCHO_COLUMNA + FuncionesSwing.getValorProporcion(Constantes.ISWING_ANCHO_CONTROL,0);
			//tableColumn.addPropertyChangeListener(new RubroEmpleaPropertyChangeListener());
		} else {
			Funciones2.setTableColumnOcultar(tableColumn);
		}


			tableColumn=this.jTableDatosRubroEmplea.getColumnModel().getColumn(Funciones2.getColumnIndexByName(this.jTableDatosRubroEmplea,RubroEmpleaConstantesFunciones.LABEL_IDTIPORUBROEMPLEA));

		if(this.rubroempleaConstantesFunciones.mostrarid_tipo_rubro_empleaRubroEmplea && Funciones2.permiteMostarParaBusqueda(this.esParaBusquedaForeignKey,RubroEmpleaConstantesFunciones.LABEL_IDTIPORUBROEMPLEA,true,iCountNumeroColumnasNormal,iCountNumeroColumnasFk++)) {
			tableColumn.setCellRenderer(new TipoRubroEmpleaTableCell(this.tiporubroempleasForeignKey,this.rubroempleaConstantesFunciones.resaltarid_tipo_rubro_empleaRubroEmplea,this,this.rubroempleaConstantesFunciones.activarid_tipo_rubro_empleaRubroEmplea));
			tableColumn.setCellEditor(new TipoRubroEmpleaTableCell(this.tiporubroempleasForeignKey,this.rubroempleaConstantesFunciones.resaltarid_tipo_rubro_empleaRubroEmplea,this,this.rubroempleaConstantesFunciones.activarid_tipo_rubro_empleaRubroEmplea,true,"id_tipo_rubro_empleaRubroEmplea","BASICO"));

			tableColumn.setPreferredWidth(Constantes.ISWING_ANCHO_COLUMNA + FuncionesSwing.getValorProporcion(Constantes.ISWING_ANCHO_CONTROL,0));
			tableColumn.setWidth(Constantes.ISWING_ANCHO_COLUMNA + FuncionesSwing.getValorProporcion(Constantes.ISWING_ANCHO_CONTROL,0));
			tableColumn.setMinWidth(Constantes.ISWING_ANCHO_COLUMNA + FuncionesSwing.getValorProporcion(Constantes.ISWING_ANCHO_CONTROL,0));
			tableColumn.setMaxWidth(Constantes.ISWING_ANCHO_COLUMNA + FuncionesSwing.getValorProporcion(Constantes.ISWING_ANCHO_CONTROL,0));

			this.iWidthTableDefinicion+=Constantes.ISWING_ANCHO_COLUMNA + FuncionesSwing.getValorProporcion(Constantes.ISWING_ANCHO_CONTROL,0);
			//tableColumn.addPropertyChangeListener(new RubroEmpleaPropertyChangeListener());
		} else {
			Funciones2.setTableColumnOcultar(tableColumn);
		}


			tableColumn=this.jTableDatosRubroEmplea.getColumnModel().getColumn(Funciones2.getColumnIndexByName(this.jTableDatosRubroEmplea,RubroEmpleaConstantesFunciones.LABEL_IDTIPOGRUPORUBROEMPLEA));

		if(this.rubroempleaConstantesFunciones.mostrarid_tipo_grupo_rubro_empleaRubroEmplea && Funciones2.permiteMostarParaBusqueda(this.esParaBusquedaForeignKey,RubroEmpleaConstantesFunciones.LABEL_IDTIPOGRUPORUBROEMPLEA,true,iCountNumeroColumnasNormal,iCountNumeroColumnasFk++)) {
			tableColumn.setCellRenderer(new TipoGrupoRubroEmpleaTableCell(this.tipogruporubroempleasForeignKey,this.rubroempleaConstantesFunciones.resaltarid_tipo_grupo_rubro_empleaRubroEmplea,this,this.rubroempleaConstantesFunciones.activarid_tipo_grupo_rubro_empleaRubroEmplea));
			tableColumn.setCellEditor(new TipoGrupoRubroEmpleaTableCell(this.tipogruporubroempleasForeignKey,this.rubroempleaConstantesFunciones.resaltarid_tipo_grupo_rubro_empleaRubroEmplea,this,this.rubroempleaConstantesFunciones.activarid_tipo_grupo_rubro_empleaRubroEmplea,true,"id_tipo_grupo_rubro_empleaRubroEmplea","BASICO"));

			tableColumn.setPreferredWidth(Constantes.ISWING_ANCHO_COLUMNA + FuncionesSwing.getValorProporcion(Constantes.ISWING_ANCHO_CONTROL,0));
			tableColumn.setWidth(Constantes.ISWING_ANCHO_COLUMNA + FuncionesSwing.getValorProporcion(Constantes.ISWING_ANCHO_CONTROL,0));
			tableColumn.setMinWidth(Constantes.ISWING_ANCHO_COLUMNA + FuncionesSwing.getValorProporcion(Constantes.ISWING_ANCHO_CONTROL,0));
			tableColumn.setMaxWidth(Constantes.ISWING_ANCHO_COLUMNA + FuncionesSwing.getValorProporcion(Constantes.ISWING_ANCHO_CONTROL,0));

			this.iWidthTableDefinicion+=Constantes.ISWING_ANCHO_COLUMNA + FuncionesSwing.getValorProporcion(Constantes.ISWING_ANCHO_CONTROL,0);
			//tableColumn.addPropertyChangeListener(new RubroEmpleaPropertyChangeListener());
		} else {
			Funciones2.setTableColumnOcultar(tableColumn);
		}


			tableColumn=this.jTableDatosRubroEmplea.getColumnModel().getColumn(Funciones2.getColumnIndexByName(this.jTableDatosRubroEmplea,RubroEmpleaConstantesFunciones.LABEL_CODIGO));

		if(this.rubroempleaConstantesFunciones.mostrarcodigoRubroEmplea && Funciones2.permiteMostarParaBusqueda(this.esParaBusquedaForeignKey,RubroEmpleaConstantesFunciones.LABEL_CODIGO,false,iCountNumeroColumnasNormal++,iCountNumeroColumnasFk)) {
			tableColumn.setCellRenderer(new LabelRenderer(this.rubroempleaConstantesFunciones.resaltarcodigoRubroEmplea,this.rubroempleaConstantesFunciones.activarcodigoRubroEmplea,this,true,"codigoRubroEmplea","BASICO"));
			tableColumn.setCellEditor(new TextFieldEditorRenderer(this.rubroempleaConstantesFunciones.resaltarcodigoRubroEmplea,this.rubroempleaConstantesFunciones.activarcodigoRubroEmplea,this,true,"codigoRubroEmplea","BASICO",false));

			tableColumn.setPreferredWidth(Constantes.ISWING_ANCHO_COLUMNA + FuncionesSwing.getValorProporcion(Constantes.ISWING_ANCHO_CONTROL,0));
			tableColumn.setWidth(Constantes.ISWING_ANCHO_COLUMNA + FuncionesSwing.getValorProporcion(Constantes.ISWING_ANCHO_CONTROL,0));
			tableColumn.setMinWidth(Constantes.ISWING_ANCHO_COLUMNA + FuncionesSwing.getValorProporcion(Constantes.ISWING_ANCHO_CONTROL,0));
			tableColumn.setMaxWidth(Constantes.ISWING_ANCHO_COLUMNA + FuncionesSwing.getValorProporcion(Constantes.ISWING_ANCHO_CONTROL,0));

			this.iWidthTableDefinicion+=Constantes.ISWING_ANCHO_COLUMNA + FuncionesSwing.getValorProporcion(Constantes.ISWING_ANCHO_CONTROL,0);
			//tableColumn.addPropertyChangeListener(new RubroEmpleaPropertyChangeListener());
		} else {
			Funciones2.setTableColumnOcultar(tableColumn);
		}


			tableColumn=this.jTableDatosRubroEmplea.getColumnModel().getColumn(Funciones2.getColumnIndexByName(this.jTableDatosRubroEmplea,RubroEmpleaConstantesFunciones.LABEL_NOMBRE));

		if(this.rubroempleaConstantesFunciones.mostrarnombreRubroEmplea && Funciones2.permiteMostarParaBusqueda(this.esParaBusquedaForeignKey,RubroEmpleaConstantesFunciones.LABEL_NOMBRE,false,iCountNumeroColumnasNormal++,iCountNumeroColumnasFk)) {
			tableColumn.setCellRenderer(new LabelRenderer(this.rubroempleaConstantesFunciones.resaltarnombreRubroEmplea,this.rubroempleaConstantesFunciones.activarnombreRubroEmplea,this,true,"nombreRubroEmplea","BASICO"));
			tableColumn.setCellEditor(new TextFieldEditorRenderer(this.rubroempleaConstantesFunciones.resaltarnombreRubroEmplea,this.rubroempleaConstantesFunciones.activarnombreRubroEmplea,this,true,"nombreRubroEmplea","BASICO",false));

			tableColumn.setPreferredWidth(Constantes.ISWING_ANCHO_COLUMNA + FuncionesSwing.getValorProporcion(Constantes.ISWING_ANCHO_CONTROL,0));
			tableColumn.setWidth(Constantes.ISWING_ANCHO_COLUMNA + FuncionesSwing.getValorProporcion(Constantes.ISWING_ANCHO_CONTROL,0));
			tableColumn.setMinWidth(Constantes.ISWING_ANCHO_COLUMNA + FuncionesSwing.getValorProporcion(Constantes.ISWING_ANCHO_CONTROL,0));
			tableColumn.setMaxWidth(Constantes.ISWING_ANCHO_COLUMNA + FuncionesSwing.getValorProporcion(Constantes.ISWING_ANCHO_CONTROL,0));

			this.iWidthTableDefinicion+=Constantes.ISWING_ANCHO_COLUMNA + FuncionesSwing.getValorProporcion(Constantes.ISWING_ANCHO_CONTROL,0);
			//tableColumn.addPropertyChangeListener(new RubroEmpleaPropertyChangeListener());
		} else {
			Funciones2.setTableColumnOcultar(tableColumn);
		}


			tableColumn=this.jTableDatosRubroEmplea.getColumnModel().getColumn(Funciones2.getColumnIndexByName(this.jTableDatosRubroEmplea,RubroEmpleaConstantesFunciones.LABEL_FORMULA));

		if(this.rubroempleaConstantesFunciones.mostrarformulaRubroEmplea && Funciones2.permiteMostarParaBusqueda(this.esParaBusquedaForeignKey,RubroEmpleaConstantesFunciones.LABEL_FORMULA,false,iCountNumeroColumnasNormal++,iCountNumeroColumnasFk)) {
			tableColumn.setCellRenderer(new LabelRenderer(this.rubroempleaConstantesFunciones.resaltarformulaRubroEmplea,this.rubroempleaConstantesFunciones.activarformulaRubroEmplea,this,true,"formulaRubroEmplea","BASICO"));
			tableColumn.setCellEditor(new TextFieldEditorRenderer(this.rubroempleaConstantesFunciones.resaltarformulaRubroEmplea,this.rubroempleaConstantesFunciones.activarformulaRubroEmplea,this,true,"formulaRubroEmplea","BASICO",false));

			tableColumn.setPreferredWidth(Constantes.ISWING_ANCHO_COLUMNA + FuncionesSwing.getValorProporcion(Constantes.ISWING_ANCHO_CONTROL,0));
			tableColumn.setWidth(Constantes.ISWING_ANCHO_COLUMNA + FuncionesSwing.getValorProporcion(Constantes.ISWING_ANCHO_CONTROL,0));
			tableColumn.setMinWidth(Constantes.ISWING_ANCHO_COLUMNA + FuncionesSwing.getValorProporcion(Constantes.ISWING_ANCHO_CONTROL,0));
			tableColumn.setMaxWidth(Constantes.ISWING_ANCHO_COLUMNA + FuncionesSwing.getValorProporcion(Constantes.ISWING_ANCHO_CONTROL,0));

			this.iWidthTableDefinicion+=Constantes.ISWING_ANCHO_COLUMNA + FuncionesSwing.getValorProporcion(Constantes.ISWING_ANCHO_CONTROL,0);
			//tableColumn.addPropertyChangeListener(new RubroEmpleaPropertyChangeListener());
		} else {
			Funciones2.setTableColumnOcultar(tableColumn);
		}


			tableColumn=this.jTableDatosRubroEmplea.getColumnModel().getColumn(Funciones2.getColumnIndexByName(this.jTableDatosRubroEmplea,RubroEmpleaConstantesFunciones.LABEL_ALIAS));

		if(this.rubroempleaConstantesFunciones.mostraraliasRubroEmplea && Funciones2.permiteMostarParaBusqueda(this.esParaBusquedaForeignKey,RubroEmpleaConstantesFunciones.LABEL_ALIAS,false,iCountNumeroColumnasNormal++,iCountNumeroColumnasFk)) {
			tableColumn.setCellRenderer(new LabelRenderer(this.rubroempleaConstantesFunciones.resaltaraliasRubroEmplea,this.rubroempleaConstantesFunciones.activaraliasRubroEmplea,this,true,"aliasRubroEmplea","BASICO"));
			tableColumn.setCellEditor(new TextFieldEditorRenderer(this.rubroempleaConstantesFunciones.resaltaraliasRubroEmplea,this.rubroempleaConstantesFunciones.activaraliasRubroEmplea,this,true,"aliasRubroEmplea","BASICO",false));

			tableColumn.setPreferredWidth(Constantes.ISWING_ANCHO_COLUMNA + FuncionesSwing.getValorProporcion(Constantes.ISWING_ANCHO_CONTROL,0));
			tableColumn.setWidth(Constantes.ISWING_ANCHO_COLUMNA + FuncionesSwing.getValorProporcion(Constantes.ISWING_ANCHO_CONTROL,0));
			tableColumn.setMinWidth(Constantes.ISWING_ANCHO_COLUMNA + FuncionesSwing.getValorProporcion(Constantes.ISWING_ANCHO_CONTROL,0));
			tableColumn.setMaxWidth(Constantes.ISWING_ANCHO_COLUMNA + FuncionesSwing.getValorProporcion(Constantes.ISWING_ANCHO_CONTROL,0));

			this.iWidthTableDefinicion+=Constantes.ISWING_ANCHO_COLUMNA + FuncionesSwing.getValorProporcion(Constantes.ISWING_ANCHO_CONTROL,0);
			//tableColumn.addPropertyChangeListener(new RubroEmpleaPropertyChangeListener());
		} else {
			Funciones2.setTableColumnOcultar(tableColumn);
		}


			tableColumn=this.jTableDatosRubroEmplea.getColumnModel().getColumn(Funciones2.getColumnIndexByName(this.jTableDatosRubroEmplea,RubroEmpleaConstantesFunciones.LABEL_SECUENCIAL));

		if(this.rubroempleaConstantesFunciones.mostrarsecuencialRubroEmplea && Funciones2.permiteMostarParaBusqueda(this.esParaBusquedaForeignKey,RubroEmpleaConstantesFunciones.LABEL_SECUENCIAL,false,iCountNumeroColumnasNormal++,iCountNumeroColumnasFk)) {
			tableColumn.setCellRenderer(new TextFieldRenderer(this.rubroempleaConstantesFunciones.resaltarsecuencialRubroEmplea,this.rubroempleaConstantesFunciones.activarsecuencialRubroEmplea,this,true,"secuencialRubroEmplea","BASICO"));
			tableColumn.setCellEditor(new TextFieldEditorRenderer(this.rubroempleaConstantesFunciones.resaltarsecuencialRubroEmplea,this.rubroempleaConstantesFunciones.activarsecuencialRubroEmplea,this,true,"secuencialRubroEmplea","BASICO",false));

			tableColumn.setPreferredWidth(Constantes.ISWING_ANCHO_COLUMNA);
			tableColumn.setWidth(Constantes.ISWING_ANCHO_COLUMNA);
			tableColumn.setMinWidth(Constantes.ISWING_ANCHO_COLUMNA);
			tableColumn.setMaxWidth(Constantes.ISWING_ANCHO_COLUMNA);

			this.iWidthTableDefinicion+=Constantes.ISWING_ANCHO_COLUMNA;
			//tableColumn.addPropertyChangeListener(new RubroEmpleaPropertyChangeListener());
		} else {
			Funciones2.setTableColumnOcultar(tableColumn);
		}


			tableColumn=this.jTableDatosRubroEmplea.getColumnModel().getColumn(Funciones2.getColumnIndexByName(this.jTableDatosRubroEmplea,RubroEmpleaConstantesFunciones.LABEL_PARAROLPAGOS));

		if(this.rubroempleaConstantesFunciones.mostrarpara_rol_pagosRubroEmplea && Funciones2.permiteMostarParaBusqueda(this.esParaBusquedaForeignKey,RubroEmpleaConstantesFunciones.LABEL_PARAROLPAGOS,false,iCountNumeroColumnasNormal++,iCountNumeroColumnasFk)) {
			tableColumn.setCellRenderer(new BooleanRenderer(this.rubroempleaConstantesFunciones.resaltarpara_rol_pagosRubroEmplea,this.rubroempleaConstantesFunciones.activarpara_rol_pagosRubroEmplea));
			tableColumn.setCellEditor(new BooleanEditorRenderer(this.rubroempleaConstantesFunciones.resaltarpara_rol_pagosRubroEmplea,this.rubroempleaConstantesFunciones.activarpara_rol_pagosRubroEmplea,this,true,"para_rol_pagosRubroEmplea","BASICO"));

			tableColumn.setPreferredWidth(Constantes.ISWING_ANCHO_COLUMNA);
			tableColumn.setWidth(Constantes.ISWING_ANCHO_COLUMNA);
			tableColumn.setMinWidth(Constantes.ISWING_ANCHO_COLUMNA);
			tableColumn.setMaxWidth(Constantes.ISWING_ANCHO_COLUMNA);

			this.iWidthTableDefinicion+=Constantes.ISWING_ANCHO_COLUMNA;
			//tableColumn.addPropertyChangeListener(new RubroEmpleaPropertyChangeListener());
		} else {
			Funciones2.setTableColumnOcultar(tableColumn);
		}


			tableColumn=this.jTableDatosRubroEmplea.getColumnModel().getColumn(Funciones2.getColumnIndexByName(this.jTableDatosRubroEmplea,RubroEmpleaConstantesFunciones.LABEL_PARASUELDO));

		if(this.rubroempleaConstantesFunciones.mostrarpara_sueldoRubroEmplea && Funciones2.permiteMostarParaBusqueda(this.esParaBusquedaForeignKey,RubroEmpleaConstantesFunciones.LABEL_PARASUELDO,false,iCountNumeroColumnasNormal++,iCountNumeroColumnasFk)) {
			tableColumn.setCellRenderer(new BooleanRenderer(this.rubroempleaConstantesFunciones.resaltarpara_sueldoRubroEmplea,this.rubroempleaConstantesFunciones.activarpara_sueldoRubroEmplea));
			tableColumn.setCellEditor(new BooleanEditorRenderer(this.rubroempleaConstantesFunciones.resaltarpara_sueldoRubroEmplea,this.rubroempleaConstantesFunciones.activarpara_sueldoRubroEmplea,this,true,"para_sueldoRubroEmplea","BASICO"));

			tableColumn.setPreferredWidth(Constantes.ISWING_ANCHO_COLUMNA);
			tableColumn.setWidth(Constantes.ISWING_ANCHO_COLUMNA);
			tableColumn.setMinWidth(Constantes.ISWING_ANCHO_COLUMNA);
			tableColumn.setMaxWidth(Constantes.ISWING_ANCHO_COLUMNA);

			this.iWidthTableDefinicion+=Constantes.ISWING_ANCHO_COLUMNA;
			//tableColumn.addPropertyChangeListener(new RubroEmpleaPropertyChangeListener());
		} else {
			Funciones2.setTableColumnOcultar(tableColumn);
		}


			tableColumn=this.jTableDatosRubroEmplea.getColumnModel().getColumn(Funciones2.getColumnIndexByName(this.jTableDatosRubroEmplea,RubroEmpleaConstantesFunciones.LABEL_PARAVACACIONES));

		if(this.rubroempleaConstantesFunciones.mostrarpara_vacacionesRubroEmplea && Funciones2.permiteMostarParaBusqueda(this.esParaBusquedaForeignKey,RubroEmpleaConstantesFunciones.LABEL_PARAVACACIONES,false,iCountNumeroColumnasNormal++,iCountNumeroColumnasFk)) {
			tableColumn.setCellRenderer(new BooleanRenderer(this.rubroempleaConstantesFunciones.resaltarpara_vacacionesRubroEmplea,this.rubroempleaConstantesFunciones.activarpara_vacacionesRubroEmplea));
			tableColumn.setCellEditor(new BooleanEditorRenderer(this.rubroempleaConstantesFunciones.resaltarpara_vacacionesRubroEmplea,this.rubroempleaConstantesFunciones.activarpara_vacacionesRubroEmplea,this,true,"para_vacacionesRubroEmplea","BASICO"));

			tableColumn.setPreferredWidth(Constantes.ISWING_ANCHO_COLUMNA);
			tableColumn.setWidth(Constantes.ISWING_ANCHO_COLUMNA);
			tableColumn.setMinWidth(Constantes.ISWING_ANCHO_COLUMNA);
			tableColumn.setMaxWidth(Constantes.ISWING_ANCHO_COLUMNA);

			this.iWidthTableDefinicion+=Constantes.ISWING_ANCHO_COLUMNA;
			//tableColumn.addPropertyChangeListener(new RubroEmpleaPropertyChangeListener());
		} else {
			Funciones2.setTableColumnOcultar(tableColumn);
		}


			tableColumn=this.jTableDatosRubroEmplea.getColumnModel().getColumn(Funciones2.getColumnIndexByName(this.jTableDatosRubroEmplea,RubroEmpleaConstantesFunciones.LABEL_PARAIMPUESTORENTA));

		if(this.rubroempleaConstantesFunciones.mostrarpara_impuesto_rentaRubroEmplea && Funciones2.permiteMostarParaBusqueda(this.esParaBusquedaForeignKey,RubroEmpleaConstantesFunciones.LABEL_PARAIMPUESTORENTA,false,iCountNumeroColumnasNormal++,iCountNumeroColumnasFk)) {
			tableColumn.setCellRenderer(new BooleanRenderer(this.rubroempleaConstantesFunciones.resaltarpara_impuesto_rentaRubroEmplea,this.rubroempleaConstantesFunciones.activarpara_impuesto_rentaRubroEmplea));
			tableColumn.setCellEditor(new BooleanEditorRenderer(this.rubroempleaConstantesFunciones.resaltarpara_impuesto_rentaRubroEmplea,this.rubroempleaConstantesFunciones.activarpara_impuesto_rentaRubroEmplea,this,true,"para_impuesto_rentaRubroEmplea","BASICO"));

			tableColumn.setPreferredWidth(Constantes.ISWING_ANCHO_COLUMNA);
			tableColumn.setWidth(Constantes.ISWING_ANCHO_COLUMNA);
			tableColumn.setMinWidth(Constantes.ISWING_ANCHO_COLUMNA);
			tableColumn.setMaxWidth(Constantes.ISWING_ANCHO_COLUMNA);

			this.iWidthTableDefinicion+=Constantes.ISWING_ANCHO_COLUMNA;
			//tableColumn.addPropertyChangeListener(new RubroEmpleaPropertyChangeListener());
		} else {
			Funciones2.setTableColumnOcultar(tableColumn);
		}


			tableColumn=this.jTableDatosRubroEmplea.getColumnModel().getColumn(Funciones2.getColumnIndexByName(this.jTableDatosRubroEmplea,RubroEmpleaConstantesFunciones.LABEL_PARASEGUROSOCIAL));

		if(this.rubroempleaConstantesFunciones.mostrarpara_seguro_socialRubroEmplea && Funciones2.permiteMostarParaBusqueda(this.esParaBusquedaForeignKey,RubroEmpleaConstantesFunciones.LABEL_PARASEGUROSOCIAL,false,iCountNumeroColumnasNormal++,iCountNumeroColumnasFk)) {
			tableColumn.setCellRenderer(new BooleanRenderer(this.rubroempleaConstantesFunciones.resaltarpara_seguro_socialRubroEmplea,this.rubroempleaConstantesFunciones.activarpara_seguro_socialRubroEmplea));
			tableColumn.setCellEditor(new BooleanEditorRenderer(this.rubroempleaConstantesFunciones.resaltarpara_seguro_socialRubroEmplea,this.rubroempleaConstantesFunciones.activarpara_seguro_socialRubroEmplea,this,true,"para_seguro_socialRubroEmplea","BASICO"));

			tableColumn.setPreferredWidth(Constantes.ISWING_ANCHO_COLUMNA);
			tableColumn.setWidth(Constantes.ISWING_ANCHO_COLUMNA);
			tableColumn.setMinWidth(Constantes.ISWING_ANCHO_COLUMNA);
			tableColumn.setMaxWidth(Constantes.ISWING_ANCHO_COLUMNA);

			this.iWidthTableDefinicion+=Constantes.ISWING_ANCHO_COLUMNA;
			//tableColumn.addPropertyChangeListener(new RubroEmpleaPropertyChangeListener());
		} else {
			Funciones2.setTableColumnOcultar(tableColumn);
		}


			tableColumn=this.jTableDatosRubroEmplea.getColumnModel().getColumn(Funciones2.getColumnIndexByName(this.jTableDatosRubroEmplea,RubroEmpleaConstantesFunciones.LABEL_PARAPROVISIONES));

		if(this.rubroempleaConstantesFunciones.mostrarpara_provisionesRubroEmplea && Funciones2.permiteMostarParaBusqueda(this.esParaBusquedaForeignKey,RubroEmpleaConstantesFunciones.LABEL_PARAPROVISIONES,false,iCountNumeroColumnasNormal++,iCountNumeroColumnasFk)) {
			tableColumn.setCellRenderer(new BooleanRenderer(this.rubroempleaConstantesFunciones.resaltarpara_provisionesRubroEmplea,this.rubroempleaConstantesFunciones.activarpara_provisionesRubroEmplea));
			tableColumn.setCellEditor(new BooleanEditorRenderer(this.rubroempleaConstantesFunciones.resaltarpara_provisionesRubroEmplea,this.rubroempleaConstantesFunciones.activarpara_provisionesRubroEmplea,this,true,"para_provisionesRubroEmplea","BASICO"));

			tableColumn.setPreferredWidth(Constantes.ISWING_ANCHO_COLUMNA);
			tableColumn.setWidth(Constantes.ISWING_ANCHO_COLUMNA);
			tableColumn.setMinWidth(Constantes.ISWING_ANCHO_COLUMNA);
			tableColumn.setMaxWidth(Constantes.ISWING_ANCHO_COLUMNA);

			this.iWidthTableDefinicion+=Constantes.ISWING_ANCHO_COLUMNA;
			//tableColumn.addPropertyChangeListener(new RubroEmpleaPropertyChangeListener());
		} else {
			Funciones2.setTableColumnOcultar(tableColumn);
		}


			tableColumn=this.jTableDatosRubroEmplea.getColumnModel().getColumn(Funciones2.getColumnIndexByName(this.jTableDatosRubroEmplea,RubroEmpleaConstantesFunciones.LABEL_PARAUTILIDADES));

		if(this.rubroempleaConstantesFunciones.mostrarpara_utilidadesRubroEmplea && Funciones2.permiteMostarParaBusqueda(this.esParaBusquedaForeignKey,RubroEmpleaConstantesFunciones.LABEL_PARAUTILIDADES,false,iCountNumeroColumnasNormal++,iCountNumeroColumnasFk)) {
			tableColumn.setCellRenderer(new BooleanRenderer(this.rubroempleaConstantesFunciones.resaltarpara_utilidadesRubroEmplea,this.rubroempleaConstantesFunciones.activarpara_utilidadesRubroEmplea));
			tableColumn.setCellEditor(new BooleanEditorRenderer(this.rubroempleaConstantesFunciones.resaltarpara_utilidadesRubroEmplea,this.rubroempleaConstantesFunciones.activarpara_utilidadesRubroEmplea,this,true,"para_utilidadesRubroEmplea","BASICO"));

			tableColumn.setPreferredWidth(Constantes.ISWING_ANCHO_COLUMNA);
			tableColumn.setWidth(Constantes.ISWING_ANCHO_COLUMNA);
			tableColumn.setMinWidth(Constantes.ISWING_ANCHO_COLUMNA);
			tableColumn.setMaxWidth(Constantes.ISWING_ANCHO_COLUMNA);

			this.iWidthTableDefinicion+=Constantes.ISWING_ANCHO_COLUMNA;
			//tableColumn.addPropertyChangeListener(new RubroEmpleaPropertyChangeListener());
		} else {
			Funciones2.setTableColumnOcultar(tableColumn);
		}


			tableColumn=this.jTableDatosRubroEmplea.getColumnModel().getColumn(Funciones2.getColumnIndexByName(this.jTableDatosRubroEmplea,RubroEmpleaConstantesFunciones.LABEL_PARARUBROIESS));

		if(this.rubroempleaConstantesFunciones.mostrarpara_rubro_iessRubroEmplea && Funciones2.permiteMostarParaBusqueda(this.esParaBusquedaForeignKey,RubroEmpleaConstantesFunciones.LABEL_PARARUBROIESS,false,iCountNumeroColumnasNormal++,iCountNumeroColumnasFk)) {
			tableColumn.setCellRenderer(new BooleanRenderer(this.rubroempleaConstantesFunciones.resaltarpara_rubro_iessRubroEmplea,this.rubroempleaConstantesFunciones.activarpara_rubro_iessRubroEmplea));
			tableColumn.setCellEditor(new BooleanEditorRenderer(this.rubroempleaConstantesFunciones.resaltarpara_rubro_iessRubroEmplea,this.rubroempleaConstantesFunciones.activarpara_rubro_iessRubroEmplea,this,true,"para_rubro_iessRubroEmplea","BASICO"));

			tableColumn.setPreferredWidth(Constantes.ISWING_ANCHO_COLUMNA);
			tableColumn.setWidth(Constantes.ISWING_ANCHO_COLUMNA);
			tableColumn.setMinWidth(Constantes.ISWING_ANCHO_COLUMNA);
			tableColumn.setMaxWidth(Constantes.ISWING_ANCHO_COLUMNA);

			this.iWidthTableDefinicion+=Constantes.ISWING_ANCHO_COLUMNA;
			//tableColumn.addPropertyChangeListener(new RubroEmpleaPropertyChangeListener());
		} else {
			Funciones2.setTableColumnOcultar(tableColumn);
		}


			tableColumn=this.jTableDatosRubroEmplea.getColumnModel().getColumn(Funciones2.getColumnIndexByName(this.jTableDatosRubroEmplea,RubroEmpleaConstantesFunciones.LABEL_ESFONDORESERVA));

		if(this.rubroempleaConstantesFunciones.mostrares_fondo_reservaRubroEmplea && Funciones2.permiteMostarParaBusqueda(this.esParaBusquedaForeignKey,RubroEmpleaConstantesFunciones.LABEL_ESFONDORESERVA,false,iCountNumeroColumnasNormal++,iCountNumeroColumnasFk)) {
			tableColumn.setCellRenderer(new BooleanRenderer(this.rubroempleaConstantesFunciones.resaltares_fondo_reservaRubroEmplea,this.rubroempleaConstantesFunciones.activares_fondo_reservaRubroEmplea));
			tableColumn.setCellEditor(new BooleanEditorRenderer(this.rubroempleaConstantesFunciones.resaltares_fondo_reservaRubroEmplea,this.rubroempleaConstantesFunciones.activares_fondo_reservaRubroEmplea,this,true,"es_fondo_reservaRubroEmplea","BASICO"));

			tableColumn.setPreferredWidth(Constantes.ISWING_ANCHO_COLUMNA);
			tableColumn.setWidth(Constantes.ISWING_ANCHO_COLUMNA);
			tableColumn.setMinWidth(Constantes.ISWING_ANCHO_COLUMNA);
			tableColumn.setMaxWidth(Constantes.ISWING_ANCHO_COLUMNA);

			this.iWidthTableDefinicion+=Constantes.ISWING_ANCHO_COLUMNA;
			//tableColumn.addPropertyChangeListener(new RubroEmpleaPropertyChangeListener());
		} else {
			Funciones2.setTableColumnOcultar(tableColumn);
		}


			tableColumn=this.jTableDatosRubroEmplea.getColumnModel().getColumn(Funciones2.getColumnIndexByName(this.jTableDatosRubroEmplea,RubroEmpleaConstantesFunciones.LABEL_ESDECIMOTERCERO));

		if(this.rubroempleaConstantesFunciones.mostrares_decimo_terceroRubroEmplea && Funciones2.permiteMostarParaBusqueda(this.esParaBusquedaForeignKey,RubroEmpleaConstantesFunciones.LABEL_ESDECIMOTERCERO,false,iCountNumeroColumnasNormal++,iCountNumeroColumnasFk)) {
			tableColumn.setCellRenderer(new BooleanRenderer(this.rubroempleaConstantesFunciones.resaltares_decimo_terceroRubroEmplea,this.rubroempleaConstantesFunciones.activares_decimo_terceroRubroEmplea));
			tableColumn.setCellEditor(new BooleanEditorRenderer(this.rubroempleaConstantesFunciones.resaltares_decimo_terceroRubroEmplea,this.rubroempleaConstantesFunciones.activares_decimo_terceroRubroEmplea,this,true,"es_decimo_terceroRubroEmplea","BASICO"));

			tableColumn.setPreferredWidth(Constantes.ISWING_ANCHO_COLUMNA);
			tableColumn.setWidth(Constantes.ISWING_ANCHO_COLUMNA);
			tableColumn.setMinWidth(Constantes.ISWING_ANCHO_COLUMNA);
			tableColumn.setMaxWidth(Constantes.ISWING_ANCHO_COLUMNA);

			this.iWidthTableDefinicion+=Constantes.ISWING_ANCHO_COLUMNA;
			//tableColumn.addPropertyChangeListener(new RubroEmpleaPropertyChangeListener());
		} else {
			Funciones2.setTableColumnOcultar(tableColumn);
		}


			tableColumn=this.jTableDatosRubroEmplea.getColumnModel().getColumn(Funciones2.getColumnIndexByName(this.jTableDatosRubroEmplea,RubroEmpleaConstantesFunciones.LABEL_ESDECIMOCUARTO));

		if(this.rubroempleaConstantesFunciones.mostrares_decimo_cuartoRubroEmplea && Funciones2.permiteMostarParaBusqueda(this.esParaBusquedaForeignKey,RubroEmpleaConstantesFunciones.LABEL_ESDECIMOCUARTO,false,iCountNumeroColumnasNormal++,iCountNumeroColumnasFk)) {
			tableColumn.setCellRenderer(new BooleanRenderer(this.rubroempleaConstantesFunciones.resaltares_decimo_cuartoRubroEmplea,this.rubroempleaConstantesFunciones.activares_decimo_cuartoRubroEmplea));
			tableColumn.setCellEditor(new BooleanEditorRenderer(this.rubroempleaConstantesFunciones.resaltares_decimo_cuartoRubroEmplea,this.rubroempleaConstantesFunciones.activares_decimo_cuartoRubroEmplea,this,true,"es_decimo_cuartoRubroEmplea","BASICO"));

			tableColumn.setPreferredWidth(Constantes.ISWING_ANCHO_COLUMNA);
			tableColumn.setWidth(Constantes.ISWING_ANCHO_COLUMNA);
			tableColumn.setMinWidth(Constantes.ISWING_ANCHO_COLUMNA);
			tableColumn.setMaxWidth(Constantes.ISWING_ANCHO_COLUMNA);

			this.iWidthTableDefinicion+=Constantes.ISWING_ANCHO_COLUMNA;
			//tableColumn.addPropertyChangeListener(new RubroEmpleaPropertyChangeListener());
		} else {
			Funciones2.setTableColumnOcultar(tableColumn);
		}
			
		} else {
		}			
					
		if(!this.rubroempleaSessionBean.getEsGuardarRelacionado()
			&& !this.esParaBusquedaForeignKey) {
			

			if(this.isTienePermisosHistorialPagoNomi && this.rubroempleaConstantesFunciones.mostrarHistorialPagoNomiRubroEmplea && !RubroEmpleaConstantesFunciones.ISGUARDARREL) {
				tableColumn= new TableColumn();
				tableColumn.setIdentifier("Historial Pago Nomis");
				tableColumn.setHeaderValue("Historial Pago Nomis");
				tableColumn.setCellRenderer(new HistorialPagoNomiTableCell(rubroempleaConstantesFunciones.resaltarHistorialPagoNomiRubroEmplea,this,this.rubroempleaConstantesFunciones.activarHistorialPagoNomiRubroEmplea));
				tableColumn.setCellEditor(new HistorialPagoNomiTableCell(rubroempleaConstantesFunciones.resaltarHistorialPagoNomiRubroEmplea,this,this.rubroempleaConstantesFunciones.activarHistorialPagoNomiRubroEmplea));

				tableColumn.setPreferredWidth(Constantes.ISWING_ANCHO_CONTROL + FuncionesSwing.getValorProporcion(Constantes.ISWING_ANCHO_CONTROL,0));
				tableColumn.setWidth(Constantes.ISWING_ANCHO_CONTROL + FuncionesSwing.getValorProporcion(Constantes.ISWING_ANCHO_CONTROL,0));
				tableColumn.setMinWidth(Constantes.ISWING_ANCHO_CONTROL + FuncionesSwing.getValorProporcion(Constantes.ISWING_ANCHO_CONTROL,0));

				this.iWidthTableDefinicion+=Constantes.ISWING_ANCHO_CONTROL + FuncionesSwing.getValorProporcion(Constantes.ISWING_ANCHO_CONTROL,0);

				this.jTableDatosRubroEmplea.addColumn(tableColumn);
			}

			if(this.isTienePermisosRubroEstructura && this.rubroempleaConstantesFunciones.mostrarRubroEstructuraRubroEmplea && !RubroEmpleaConstantesFunciones.ISGUARDARREL) {
				tableColumn= new TableColumn();
				tableColumn.setIdentifier("Rubro Estructuras");
				tableColumn.setHeaderValue("Rubro Estructuras");
				tableColumn.setCellRenderer(new RubroEstructuraTableCell(rubroempleaConstantesFunciones.resaltarRubroEstructuraRubroEmplea,this,this.rubroempleaConstantesFunciones.activarRubroEstructuraRubroEmplea));
				tableColumn.setCellEditor(new RubroEstructuraTableCell(rubroempleaConstantesFunciones.resaltarRubroEstructuraRubroEmplea,this,this.rubroempleaConstantesFunciones.activarRubroEstructuraRubroEmplea));

				tableColumn.setPreferredWidth(Constantes.ISWING_ANCHO_CONTROL + FuncionesSwing.getValorProporcion(Constantes.ISWING_ANCHO_CONTROL,0));
				tableColumn.setWidth(Constantes.ISWING_ANCHO_CONTROL + FuncionesSwing.getValorProporcion(Constantes.ISWING_ANCHO_CONTROL,0));
				tableColumn.setMinWidth(Constantes.ISWING_ANCHO_CONTROL + FuncionesSwing.getValorProporcion(Constantes.ISWING_ANCHO_CONTROL,0));

				this.iWidthTableDefinicion+=Constantes.ISWING_ANCHO_CONTROL + FuncionesSwing.getValorProporcion(Constantes.ISWING_ANCHO_CONTROL,0);

				this.jTableDatosRubroEmplea.addColumn(tableColumn);
			}

			if(this.isTienePermisosDefiProvisionEmpleado && this.rubroempleaConstantesFunciones.mostrarDefiProvisionEmpleadoRubroEmplea && !RubroEmpleaConstantesFunciones.ISGUARDARREL) {
				tableColumn= new TableColumn();
				tableColumn.setIdentifier("Defi Provision Empleados");
				tableColumn.setHeaderValue("Defi Provision Empleados");
				tableColumn.setCellRenderer(new DefiProvisionEmpleadoTableCell(rubroempleaConstantesFunciones.resaltarDefiProvisionEmpleadoRubroEmplea,this,this.rubroempleaConstantesFunciones.activarDefiProvisionEmpleadoRubroEmplea));
				tableColumn.setCellEditor(new DefiProvisionEmpleadoTableCell(rubroempleaConstantesFunciones.resaltarDefiProvisionEmpleadoRubroEmplea,this,this.rubroempleaConstantesFunciones.activarDefiProvisionEmpleadoRubroEmplea));

				tableColumn.setPreferredWidth(Constantes.ISWING_ANCHO_CONTROL + FuncionesSwing.getValorProporcion(Constantes.ISWING_ANCHO_CONTROL,0));
				tableColumn.setWidth(Constantes.ISWING_ANCHO_CONTROL + FuncionesSwing.getValorProporcion(Constantes.ISWING_ANCHO_CONTROL,0));
				tableColumn.setMinWidth(Constantes.ISWING_ANCHO_CONTROL + FuncionesSwing.getValorProporcion(Constantes.ISWING_ANCHO_CONTROL,0));

				this.iWidthTableDefinicion+=Constantes.ISWING_ANCHO_CONTROL + FuncionesSwing.getValorProporcion(Constantes.ISWING_ANCHO_CONTROL,0);

				this.jTableDatosRubroEmplea.addColumn(tableColumn);
			}

			if(this.isTienePermisosEmpleadoPagoRubro && this.rubroempleaConstantesFunciones.mostrarEmpleadoPagoRubroRubroEmplea && !RubroEmpleaConstantesFunciones.ISGUARDARREL) {
				tableColumn= new TableColumn();
				tableColumn.setIdentifier("Empleado Pago Rubros");
				tableColumn.setHeaderValue("Empleado Pago Rubros");
				tableColumn.setCellRenderer(new EmpleadoPagoRubroTableCell(rubroempleaConstantesFunciones.resaltarEmpleadoPagoRubroRubroEmplea,this,this.rubroempleaConstantesFunciones.activarEmpleadoPagoRubroRubroEmplea));
				tableColumn.setCellEditor(new EmpleadoPagoRubroTableCell(rubroempleaConstantesFunciones.resaltarEmpleadoPagoRubroRubroEmplea,this,this.rubroempleaConstantesFunciones.activarEmpleadoPagoRubroRubroEmplea));

				tableColumn.setPreferredWidth(Constantes.ISWING_ANCHO_CONTROL + FuncionesSwing.getValorProporcion(Constantes.ISWING_ANCHO_CONTROL,0));
				tableColumn.setWidth(Constantes.ISWING_ANCHO_CONTROL + FuncionesSwing.getValorProporcion(Constantes.ISWING_ANCHO_CONTROL,0));
				tableColumn.setMinWidth(Constantes.ISWING_ANCHO_CONTROL + FuncionesSwing.getValorProporcion(Constantes.ISWING_ANCHO_CONTROL,0));

				this.iWidthTableDefinicion+=Constantes.ISWING_ANCHO_CONTROL + FuncionesSwing.getValorProporcion(Constantes.ISWING_ANCHO_CONTROL,0);

				this.jTableDatosRubroEmplea.addColumn(tableColumn);
			}

			if(this.isTienePermisosHistorialPagoMesNomi && this.rubroempleaConstantesFunciones.mostrarHistorialPagoMesNomiRubroEmplea && !RubroEmpleaConstantesFunciones.ISGUARDARREL) {
				tableColumn= new TableColumn();
				tableColumn.setIdentifier("Historial Pago Mes Nomis");
				tableColumn.setHeaderValue("Historial Pago Mes Nomis");
				tableColumn.setCellRenderer(new HistorialPagoMesNomiTableCell(rubroempleaConstantesFunciones.resaltarHistorialPagoMesNomiRubroEmplea,this,this.rubroempleaConstantesFunciones.activarHistorialPagoMesNomiRubroEmplea));
				tableColumn.setCellEditor(new HistorialPagoMesNomiTableCell(rubroempleaConstantesFunciones.resaltarHistorialPagoMesNomiRubroEmplea,this,this.rubroempleaConstantesFunciones.activarHistorialPagoMesNomiRubroEmplea));

				tableColumn.setPreferredWidth(Constantes.ISWING_ANCHO_CONTROL + FuncionesSwing.getValorProporcion(Constantes.ISWING_ANCHO_CONTROL,0));
				tableColumn.setWidth(Constantes.ISWING_ANCHO_CONTROL + FuncionesSwing.getValorProporcion(Constantes.ISWING_ANCHO_CONTROL,0));
				tableColumn.setMinWidth(Constantes.ISWING_ANCHO_CONTROL + FuncionesSwing.getValorProporcion(Constantes.ISWING_ANCHO_CONTROL,0));

				this.iWidthTableDefinicion+=Constantes.ISWING_ANCHO_CONTROL + FuncionesSwing.getValorProporcion(Constantes.ISWING_ANCHO_CONTROL,0);

				this.jTableDatosRubroEmplea.addColumn(tableColumn);
			}

			if(this.isTienePermisosRubroEmpleado && this.rubroempleaConstantesFunciones.mostrarRubroEmpleadoRubroEmplea && !RubroEmpleaConstantesFunciones.ISGUARDARREL) {
				tableColumn= new TableColumn();
				tableColumn.setIdentifier("Rubro Empleados");
				tableColumn.setHeaderValue("Rubro Empleados");
				tableColumn.setCellRenderer(new RubroEmpleadoTableCell(rubroempleaConstantesFunciones.resaltarRubroEmpleadoRubroEmplea,this,this.rubroempleaConstantesFunciones.activarRubroEmpleadoRubroEmplea));
				tableColumn.setCellEditor(new RubroEmpleadoTableCell(rubroempleaConstantesFunciones.resaltarRubroEmpleadoRubroEmplea,this,this.rubroempleaConstantesFunciones.activarRubroEmpleadoRubroEmplea));

				tableColumn.setPreferredWidth(Constantes.ISWING_ANCHO_CONTROL + FuncionesSwing.getValorProporcion(Constantes.ISWING_ANCHO_CONTROL,0));
				tableColumn.setWidth(Constantes.ISWING_ANCHO_CONTROL + FuncionesSwing.getValorProporcion(Constantes.ISWING_ANCHO_CONTROL,0));
				tableColumn.setMinWidth(Constantes.ISWING_ANCHO_CONTROL + FuncionesSwing.getValorProporcion(Constantes.ISWING_ANCHO_CONTROL,0));

				this.iWidthTableDefinicion+=Constantes.ISWING_ANCHO_CONTROL + FuncionesSwing.getValorProporcion(Constantes.ISWING_ANCHO_CONTROL,0);

				this.jTableDatosRubroEmplea.addColumn(tableColumn);
			}

			if(this.isTienePermisosValorRubroVariable && this.rubroempleaConstantesFunciones.mostrarValorRubroVariableRubroEmplea && !RubroEmpleaConstantesFunciones.ISGUARDARREL) {
				tableColumn= new TableColumn();
				tableColumn.setIdentifier("Valor Rubro Variables");
				tableColumn.setHeaderValue("Valor Rubro Variables");
				tableColumn.setCellRenderer(new ValorRubroVariableTableCell(rubroempleaConstantesFunciones.resaltarValorRubroVariableRubroEmplea,this,this.rubroempleaConstantesFunciones.activarValorRubroVariableRubroEmplea));
				tableColumn.setCellEditor(new ValorRubroVariableTableCell(rubroempleaConstantesFunciones.resaltarValorRubroVariableRubroEmplea,this,this.rubroempleaConstantesFunciones.activarValorRubroVariableRubroEmplea));

				tableColumn.setPreferredWidth(Constantes.ISWING_ANCHO_CONTROL + FuncionesSwing.getValorProporcion(Constantes.ISWING_ANCHO_CONTROL,0));
				tableColumn.setWidth(Constantes.ISWING_ANCHO_CONTROL + FuncionesSwing.getValorProporcion(Constantes.ISWING_ANCHO_CONTROL,0));
				tableColumn.setMinWidth(Constantes.ISWING_ANCHO_CONTROL + FuncionesSwing.getValorProporcion(Constantes.ISWING_ANCHO_CONTROL,0));

				this.iWidthTableDefinicion+=Constantes.ISWING_ANCHO_CONTROL + FuncionesSwing.getValorProporcion(Constantes.ISWING_ANCHO_CONTROL,0);

				this.jTableDatosRubroEmplea.addColumn(tableColumn);
			}

			if(this.isTienePermisosTipoPrestamo && this.rubroempleaConstantesFunciones.mostrarTipoPrestamoRubroEmplea && !RubroEmpleaConstantesFunciones.ISGUARDARREL) {
				tableColumn= new TableColumn();
				tableColumn.setIdentifier("Tipo Prestamos");
				tableColumn.setHeaderValue("Tipo Prestamos");
				tableColumn.setCellRenderer(new TipoPrestamoTableCell(rubroempleaConstantesFunciones.resaltarTipoPrestamoRubroEmplea,this,this.rubroempleaConstantesFunciones.activarTipoPrestamoRubroEmplea));
				tableColumn.setCellEditor(new TipoPrestamoTableCell(rubroempleaConstantesFunciones.resaltarTipoPrestamoRubroEmplea,this,this.rubroempleaConstantesFunciones.activarTipoPrestamoRubroEmplea));

				tableColumn.setPreferredWidth(Constantes.ISWING_ANCHO_CONTROL + FuncionesSwing.getValorProporcion(Constantes.ISWING_ANCHO_CONTROL,0));
				tableColumn.setWidth(Constantes.ISWING_ANCHO_CONTROL + FuncionesSwing.getValorProporcion(Constantes.ISWING_ANCHO_CONTROL,0));
				tableColumn.setMinWidth(Constantes.ISWING_ANCHO_CONTROL + FuncionesSwing.getValorProporcion(Constantes.ISWING_ANCHO_CONTROL,0));

				this.iWidthTableDefinicion+=Constantes.ISWING_ANCHO_CONTROL + FuncionesSwing.getValorProporcion(Constantes.ISWING_ANCHO_CONTROL,0);

				this.jTableDatosRubroEmplea.addColumn(tableColumn);
			}

			if(this.isTienePermisosRubroEmpleaCuentaContable && this.rubroempleaConstantesFunciones.mostrarRubroEmpleaCuentaContableRubroEmplea && !RubroEmpleaConstantesFunciones.ISGUARDARREL) {
				tableColumn= new TableColumn();
				tableColumn.setIdentifier("Rubro Emplea Cuenta Contables");
				tableColumn.setHeaderValue("Rubro Emplea Cuenta Contables");
				tableColumn.setCellRenderer(new RubroEmpleaCuentaContableTableCell(rubroempleaConstantesFunciones.resaltarRubroEmpleaCuentaContableRubroEmplea,this,this.rubroempleaConstantesFunciones.activarRubroEmpleaCuentaContableRubroEmplea));
				tableColumn.setCellEditor(new RubroEmpleaCuentaContableTableCell(rubroempleaConstantesFunciones.resaltarRubroEmpleaCuentaContableRubroEmplea,this,this.rubroempleaConstantesFunciones.activarRubroEmpleaCuentaContableRubroEmplea));

				tableColumn.setPreferredWidth(Constantes.ISWING_ANCHO_CONTROL + FuncionesSwing.getValorProporcion(Constantes.ISWING_ANCHO_CONTROL,0));
				tableColumn.setWidth(Constantes.ISWING_ANCHO_CONTROL + FuncionesSwing.getValorProporcion(Constantes.ISWING_ANCHO_CONTROL,0));
				tableColumn.setMinWidth(Constantes.ISWING_ANCHO_CONTROL + FuncionesSwing.getValorProporcion(Constantes.ISWING_ANCHO_CONTROL,0));

				this.iWidthTableDefinicion+=Constantes.ISWING_ANCHO_CONTROL + FuncionesSwing.getValorProporcion(Constantes.ISWING_ANCHO_CONTROL,0);

				this.jTableDatosRubroEmplea.addColumn(tableColumn);
			}
		}
		
		if(true) {
			String sLabelColumnAccion="Editar";
			String sLabelColumnAccionEli="Eli";
			
			if(this.esParaBusquedaForeignKey)  {
				sLabelColumnAccion="Seleccionar";
				
				//LO MISMO QUE ELSE
				tableColumn= new TableColumn();
				tableColumn.setIdentifier(sLabelColumnAccion);
				tableColumn.setHeaderValue(sLabelColumnAccion);
				tableColumn.setCellRenderer(new IdTableCell(this,false,false,this.rubroempleaSessionBean.getEsGuardarRelacionado()));
				tableColumn.setCellEditor(new IdTableCell(this,false,false,this.rubroempleaSessionBean.getEsGuardarRelacionado()));
	
				tableColumn.setPreferredWidth(Constantes.ISWING_ANCHO_COLUMNA); 	 
				tableColumn.setWidth(Constantes.ISWING_ANCHO_COLUMNA); 	 
				tableColumn.setMinWidth(Constantes.ISWING_ANCHO_COLUMNA); 
				tableColumn.setMaxWidth(Constantes.ISWING_ANCHO_COLUMNA); 
				
				this.iWidthTableDefinicion+=Constantes.ISWING_ANCHO_COLUMNA;
				
				this.jTableDatosRubroEmplea.addColumn(tableColumn);
			
			} else {				
				
				//LO MISMO QUE IF
				
				tableColumn= new TableColumn();
				tableColumn.setIdentifier(sLabelColumnAccion);
				tableColumn.setHeaderValue(sLabelColumnAccion);
				tableColumn.setCellRenderer(new IdTableCell(this,false,false,this.rubroempleaSessionBean.getEsGuardarRelacionado()));
				tableColumn.setCellEditor(new IdTableCell(this,false,false,this.rubroempleaSessionBean.getEsGuardarRelacionado()));
		
				tableColumn.setPreferredWidth(Constantes.ISWING_ANCHO_COLUMNA); 	 
				tableColumn.setWidth(Constantes.ISWING_ANCHO_COLUMNA); 	 
				tableColumn.setMinWidth(Constantes.ISWING_ANCHO_COLUMNA); 
				tableColumn.setMaxWidth(Constantes.ISWING_ANCHO_COLUMNA); 
				
				this.iWidthTableDefinicion+=Constantes.ISWING_ANCHO_COLUMNA;
				
				this.jTableDatosRubroEmplea.addColumn(tableColumn);				
					
				//ELIMINAR
				if(this.isPermisoEliminarRubroEmplea && this.isPermisoGuardarCambiosRubroEmplea) {
					tableColumn= new TableColumn();
					tableColumn.setIdentifier(Constantes2.S_ELI);
					tableColumn.setHeaderValue(sLabelColumnAccionEli);
					tableColumn.setCellRenderer(new IdTableCell(this,false,true,this.rubroempleaSessionBean.getEsGuardarRelacionado()));
					tableColumn.setCellEditor(new IdTableCell(this,false,true,this.rubroempleaSessionBean.getEsGuardarRelacionado()));
			
					tableColumn.setPreferredWidth(65); 	 
					tableColumn.setWidth(65); 	 
					tableColumn.setMinWidth(65); 
					tableColumn.setMaxWidth(65);
					
					this.iWidthTableDefinicion+=65;
						
					this.jTableDatosRubroEmplea.addColumn(tableColumn);
				}
			}			
						
			if(this.conMaximoRelaciones && this.rubroempleaSessionBean.getConGuardarRelaciones()) {
				if(this.conFuncionalidadRelaciones) {
					tableColumn= new TableColumn();
					tableColumn.setIdentifier("Editar Rel");
					tableColumn.setHeaderValue("Editar Rel");
					tableColumn.setCellRenderer(new IdTableCell(this,true,false));
					tableColumn.setCellEditor(new IdTableCell(this,true,false));
		
					tableColumn.setPreferredWidth(Constantes.ISWING_ANCHO_COLUMNA); 	 
					tableColumn.setWidth(Constantes.ISWING_ANCHO_COLUMNA); 	 
					tableColumn.setMinWidth(Constantes.ISWING_ANCHO_COLUMNA); 
					tableColumn.setMaxWidth(Constantes.ISWING_ANCHO_COLUMNA); 
					
					this.iWidthTableDefinicion+=Constantes.ISWING_ANCHO_COLUMNA;
				
					this.jTableDatosRubroEmplea.addColumn(tableColumn);
				}
			}
			
			/*
			tableColumn= new TableColumn();
			tableColumn.setIdentifier(Constantes2.S_SELECCIONAR);
			tableColumn.setHeaderValue(Constantes2.S_SELECCIONAR);
			tableColumn.setCellRenderer(new IdSeleccionarTableCell(this));
			tableColumn.setCellEditor(new IdSeleccionarTableCell(this));
			
			tableColumn.setPreferredWidth(30); 	 
			tableColumn.setWidth(30); 	 
			tableColumn.setMinWidth(30); 
			
			this.iWidthTableDefinicion+=30;
			
			this.jTableDatosRubroEmplea.addColumn(tableColumn);
			*/
		}
		
		Integer iUltimaColumna=0;//1
		Integer iNuevaPosicionColumna=0;
		
		
		//PERMITE ELIMINAR SIMPLE
		if(!this.esParaBusquedaForeignKey)  {
			if(this.isPermisoEliminarRubroEmplea && this.isPermisoGuardarCambiosRubroEmplea) {
				iUltimaColumna++;
			}	
		}
		
		//PERMITE EDITAR SIMPLE
		iUltimaColumna++;	
		
				
		if(this.conFuncionalidadRelaciones) {
			if(this.conMaximoRelaciones && this.rubroempleaSessionBean.getConGuardarRelaciones()) {			
				//PERMITE EDITAR RELACIONES
				iUltimaColumna++;//2
			}
		}
		
		//MOVIA SELECCIONAR
		//iUltimaColumna++;
		
		if(!this.esParaBusquedaForeignKey)  {
			if(this.isPermisoEliminarRubroEmplea && this.isPermisoGuardarCambiosRubroEmplea) {
				//REUBICA ELIMINAR SIMPLE
				jTableDatosRubroEmplea.moveColumn(this.jTableDatosRubroEmplea.getColumnModel().getColumnCount()-iUltimaColumna, iNuevaPosicionColumna++);//-1,-2 o -3
					
				iUltimaColumna--;
			}
		}
		//REUBICA EDITAR SIMPLE
		jTableDatosRubroEmplea.moveColumn(this.jTableDatosRubroEmplea.getColumnModel().getColumnCount()-iUltimaColumna, iNuevaPosicionColumna++);//-1,-2 o -3				
		
		
		if(this.conFuncionalidadRelaciones) {
			if(this.conMaximoRelaciones && this.rubroempleaSessionBean.getConGuardarRelaciones()) {	
				if(iUltimaColumna>1) {
					iUltimaColumna--;
				}
				
				//iNuevaPosicionColumna++;
				
				//REUBICA EDITAR RELACIONES
				jTableDatosRubroEmplea.moveColumn(this.jTableDatosRubroEmplea.getColumnModel().getColumnCount()-iUltimaColumna, iNuevaPosicionColumna++);//-1
			}
		}
		
		
		//REUBICABA SELECCIONAR
		/*
		if(iUltimaColumna>1) {
			iUltimaColumna--;
		}
		
		//iNuevaPosicionColumna++;
			
		//REUBICA SELECCIONAR FILA CHECK
		jTableDatosRubroEmplea.moveColumn(this.jTableDatosRubroEmplea.getColumnModel().getColumnCount()-iUltimaColumna, iNuevaPosicionColumna++);//-1		
		*/
		
		//DEFINEN HEADERS
		final TableCellRenderer tableHeaderDefaultCellRenderer = this.jTableDatosRubroEmplea.getTableHeader().getDefaultRenderer();
		
		this.jTableDatosRubroEmplea.getTableHeader().setDefaultRenderer(new TableCellRendererHeader(this.jTableDatosRubroEmplea,tableHeaderDefaultCellRenderer));
	    
		TableColumn column=null;
		
		if(!RubroEmpleaJInternalFrame.ISBINDING_MANUAL_TABLA) {
			for(int i = 0; i < this.jTableDatosRubroEmplea.getColumnModel().getColumnCount(); i++) { 
				column = this.jTableDatosRubroEmplea.getColumnModel().getColumn(i); 
				
				if(column.getIdentifier()!=null) {
					//SI SE UTILIZA UN HEADER ES GENERICO
					//column.setHeaderRenderer(new HeaderRenderer(column.getIdentifier().toString()));
				}
				
				if(column.getIdentifier()!=null && column.getIdentifier().equals(Constantes2.S_ELI)) {
					continue;
				}
				
				if(column.getIdentifier()!=null && column.getIdentifier().equals(Constantes2.S_SELECCIONAR)) {
					if(!RubroEmpleaJInternalFrame.ISBINDING_MANUAL_TABLA) {
						column.setPreferredWidth(50); 	 
						column.setWidth(50); 	 
						column.setMinWidth(50); 	
						column.setMaxWidth(50); 
						
						this.iWidthTableDefinicion+=50;
					}
					
				} else {
					if(!RubroEmpleaJInternalFrame.ISBINDING_MANUAL_TABLA) {
						column.setPreferredWidth(Constantes.ISWING_ANCHO_COLUMNA); 	 
						column.setWidth(Constantes.ISWING_ANCHO_COLUMNA); 	 
						column.setMinWidth(Constantes.ISWING_ANCHO_COLUMNA); 	
						column.setMaxWidth(Constantes.ISWING_ANCHO_COLUMNA); 	
						
						this.iWidthTableDefinicion+=Constantes.ISWING_ANCHO_COLUMNA;
					}
				}
			}
		}
		
		this.jTableDatosRubroEmplea.setSelectionBackground(FuncionesSwing.getColorSelectedBackground());
		this.jTableDatosRubroEmplea.setSelectionForeground(FuncionesSwing.getColorSelectedForeground());
		
		/*
		this.jTableDatosRubroEmplea.setDefaultRenderer(Object.class, new DefaultTableCellRenderer() {
			private static final long serialVersionUID = 1L;
			
		    @Override
		    public Component getTableCellRendererComponent(JTable table, Object value, boolean isSelected, boolean hasFocus, int row, int column) {
		        final Component component= super.getTableCellRendererComponent(table, value, isSelected, hasFocus, row, column);
		        //POR DEFECTO ES MEJOR, SE PIERDE DATOS AL SELECCIONAR BLANCO LETRAS BLANCAS
				component.setBackground(row % 2 == 0 ? FuncionesSwing.getColorTextFields(Constantes2.S_FONDOCONTROL_COLOR) : Funciones2.getColorFilaTabla2()); //FuncionesSwing.getColorTextFields(Constantes2.S_FONDOCONTROL_COLOR)
				component.setForeground(Funciones2.getColorTextoFilaTabla1());
				
				try {
		        	int iSize=-999;
		        	
		        	if(conTotales) {
						//FILA TOTALES OTRO COLOR, SI TABLA NO ES UNO A UNO
			        	if(Constantes.ISUSAEJBLOGICLAYER) {
							iSize=rubroempleaLogic.getRubroEmpleas().size()-1;
								
						} else if(Constantes.ISUSAEJBREMOTE || Constantes.ISUSAEJBHOME) {
							iSize=rubroempleas.size()-1;
						}
						
						if(iSize==row) {
							component.setBackground(Funciones2.getColorFilaTablaTotales());
						}
		        	}
					
					//POR EFICIENCIA NO UTILIZAR					
					//if (component instanceof JComponent) {
		            //    JComponent jcomponent = (JComponent) component;		                 		                
		        	//}				
					
				} catch (Exception e) {
					e.printStackTrace();
				}
				
		        return component;
		    }
		});
		*/
		
		//ESTA EN LA DEFINICION DE LA TABLA
		//this.jTableDatosRubroEmplea.setRowHeight(Constantes.ISWING_ALTO_FILA_TABLA);
		
		/*
		column=this.jTableDatosRubroEmplea.getColumnModel().getColumn(Funciones2.getColumnIndexByName(this.jTableDatosSistema,Constantes2.S_SELECCIONAR));
		
		if(column!=null) {
			column.setPreferredWidth(25); 	 
			column.setWidth(25); 	 
			column.setMinWidth(25); 	
		}
		*/
			
			//CopyTableToTableTotal();
		} else {
			
			this.actualizarVisualTableDatosRubroEmplea();
			
		}
	}
	
	/*
	//COPY_TABLES
	/* FALTARIA RESOLVER:
	   1 SOLO SCROLL PARA 2 TABLAS
	   COPIA EXACTA DE COLUMNAS DE UNA TABLA A OTRA, SI SE MODIFICA TAMANIO TAMBIEN LA OTRA
	*/
	
	public void jButtonIdActionPerformed(ActionEvent evt,int rowIndex,Boolean esRelaciones,Boolean esEliminar) { 
		try {
			if(!esEliminar) {
				this.estaModoSeleccionar=true;
				
				//this.isEsNuevoRubroEmplea=false;
					
				RubroEmpleaBeanSwingJInternalFrameAdditional.procesarEventosVista(this.parametroGeneralUsuario,this.moduloActual,this.opcionActual,this.usuarioActual,this,FuncionTipo.BEFORE,ControlTipo.FORM,EventoTipo.LOAD,EventoSubTipo.SELECTED,"FORM",this.rubroemplea,new Object(),this.rubroempleaParameterGeneral,this.rubroempleaReturnGeneral);
			
				if(this.rubroempleaSessionBean.getConGuardarRelaciones()) {
					this.dStart=(double)System.currentTimeMillis();
				}
				
				if(this.jInternalFrameDetalleFormRubroEmplea==null) {
					this.inicializarFormDetalle();
				}
				
				this.inicializarInvalidValues();
				
				int intSelectedRow = 0;
				
				if(rowIndex>=0) {
					intSelectedRow=rowIndex;
					this.jTableDatosRubroEmplea.getSelectionModel().setSelectionInterval(intSelectedRow, intSelectedRow);
				} else {	
					intSelectedRow=this.jTableDatosRubroEmplea.getSelectedRow();	       
				}
				
				//ARCHITECTURE
				if(Constantes.ISUSAEJBLOGICLAYER) {
					this.rubroemplea =(RubroEmplea) this.rubroempleaLogic.getRubroEmpleas().toArray()[this.jTableDatosRubroEmplea.convertRowIndexToModel(intSelectedRow)];
				} else if(Constantes.ISUSAEJBREMOTE || Constantes.ISUSAEJBHOME ) {
					this.rubroemplea =(RubroEmplea) this.rubroempleas.toArray()[this.jTableDatosRubroEmplea.convertRowIndexToModel(intSelectedRow)];
				}
				//ARCHITECTURE
				
				//PUEDE SER PARA DUPLICADO O NUEVO TABLA
				
				if(this.rubroemplea.getsType().equals("DUPLICADO")
				   || this.rubroemplea.getsType().equals("NUEVO_GUARDAR_CAMBIOS")) {
					
					this.isEsNuevoRubroEmplea=true;
				
				} else {
					this.isEsNuevoRubroEmplea=false;	
				}
				
				//CONTROL VERSION ANTERIOR
				/*
				if(!this.rubroempleaSessionBean.getEsGuardarRelacionado()) {
					if(this.rubroemplea.getId()>=0 && !this.rubroemplea.getIsNew()) {						
						this.isEsNuevoRubroEmplea=false;
						
					} else {
						this.isEsNuevoRubroEmplea=true;
					}
					
				} else {
					//CONTROLAR PARA RELACIONADO
				}
				*/
				
				//ESTABLECE SI ES RELACIONADO O NO 
				this.habilitarDeshabilitarTipoMantenimientoRubroEmplea(esRelaciones);						
				
				this.seleccionarRubroEmplea(evt,null,rowIndex);
				
				//SELECCIONA ACTUAL PERO AUN NO SE HA INGRESADO AL SISTEMA
				//SE DESHABILITA POR GUARDAR CAMBIOS
				/*
				if(this.rubroemplea.getId()<0) {
					this.isEsNuevoRubroEmplea=true;
				}
				*/
				
				if(!this.esParaBusquedaForeignKey) {
					this.modificarRubroEmplea(evt,rowIndex,esRelaciones);
				} else {
					this.seleccionarRubroEmplea(evt,rowIndex);
				}	
				
				if(this.rubroempleaSessionBean.getConGuardarRelaciones()) {
					this.dEnd=(double)System.currentTimeMillis();					
					this.dDif=this.dEnd - this.dStart;
					
					if(Constantes.ISDEVELOPING) {
						System.out.println("Tiempo(ms) Seleccion RubroEmplea: " + this.dDif); 
					}
				}								
				
				RubroEmpleaBeanSwingJInternalFrameAdditional.procesarEventosVista(this.parametroGeneralUsuario,this.moduloActual,this.opcionActual,this.usuarioActual,this,FuncionTipo.AFTER,ControlTipo.FORM,EventoTipo.LOAD,EventoSubTipo.SELECTED,"FORM",this.rubroemplea,new Object(),this.rubroempleaParameterGeneral,this.rubroempleaReturnGeneral);
				
			} else {
				this.estaModoEliminarGuardarCambios=true;
				
				this.seleccionarRubroEmplea(evt,null,rowIndex);
				
				if(this.permiteMantenimiento(this.rubroemplea)) {
					if(this.rubroemplea.getId()>0) {
						this.rubroemplea.setIsDeleted(true);
						
						this.rubroempleasEliminados.add(this.rubroemplea);
					}
					
					if(Constantes.ISUSAEJBLOGICLAYER) {				
						this.rubroempleaLogic.getRubroEmpleas().remove(this.rubroemplea);
					} else if(Constantes.ISUSAEJBREMOTE||Constantes.ISUSAEJBHOME) {
						this.rubroempleas.remove(this.rubroemplea);				
					}
					
					
					((RubroEmpleaModel) this.jTableDatosRubroEmplea.getModel()).fireTableRowsDeleted(rowIndex,rowIndex);
					
					this.actualizarFilaTotales();
					
					this.inicializarActualizarBindingTablaRubroEmplea(false);					
				}								
			}
			
		} catch(Exception e) {
			FuncionesSwing.manageException2(this, e,logger,RubroEmpleaConstantesFunciones.CLASSNAME);
			
		} finally {
			this.estaModoSeleccionar=false;				
			this.estaModoEliminarGuardarCambios=false;
		}
	}
	
	
	public void seleccionarRubroEmplea(ActionEvent evt,javax.swing.event.ListSelectionEvent evt2,int rowIndex) throws Exception { 
		try {
			//SI PUEDE SER NUEVO Y SELECCIONAR (PARA DUPLICAR Y NUEVO TABLA)
			//if(!this.isEsNuevoRubroEmplea) {
			
			if(this.jInternalFrameDetalleFormRubroEmplea==null) { //if(!this.conCargarFormDetalle) {
				this.inicializarFormDetalle();
			}
			
				int intSelectedRow = 0;
				
				if(rowIndex>=0) {
					intSelectedRow=rowIndex;
					this.jTableDatosRubroEmplea.getSelectionModel().setSelectionInterval(intSelectedRow, intSelectedRow);
				} else {	
					intSelectedRow=this.jTableDatosRubroEmplea.getSelectedRow();	       
				}
				
				//CUANDO SE RECARGA TABLA TAMBIEN SE SELECCIONA PERO CON -1 POR LO QUE SE NECESITA VALIDAR ANTES
				if(intSelectedRow<0) {
					return;
				}
				
				//ARCHITECTURE
				if(Constantes.ISUSAEJBLOGICLAYER) {
					this.rubroemplea =(RubroEmplea) this.rubroempleaLogic.getRubroEmpleas().toArray()[this.jTableDatosRubroEmplea.convertRowIndexToModel(intSelectedRow)];
				} else if(Constantes.ISUSAEJBREMOTE || Constantes.ISUSAEJBHOME ) {
					this.rubroemplea =(RubroEmplea) this.rubroempleas.toArray()[this.jTableDatosRubroEmplea.convertRowIndexToModel(intSelectedRow)];
				}
				
				if(RubroEmpleaJInternalFrame.ISBINDING_MANUAL_TABLA) {
					this.setVariablesObjetoActualToFormularioRubroEmplea(this.rubroemplea);
				}
				
				//ARCHITECTURE
				try {
					

					//Empresa
					if(!this.rubroempleaConstantesFunciones.cargarid_empresaRubroEmplea || this.rubroempleaConstantesFunciones.event_dependid_empresaRubroEmplea) {
						//this.cargarCombosEmpresasForeignKeyLista(" where id="+this.rubroemplea.getid_empresa());
									//this.inicializarActualizarBindingRubroEmplea(false,false);
						this.empresasForeignKey=new ArrayList<Empresa>();

						if(rubroemplea.getEmpresa()!=null) {
							this.empresasForeignKey.add(rubroemplea.getEmpresa());
						}

						this.addItemDefectoCombosForeignKeyEmpresa();
						this.cargarCombosFrameEmpresasForeignKey("Todos");
					}
					this.setActualEmpresaForeignKey(this.rubroemplea.getid_empresa(),false,"Formulario");

					//TipoCalculo
					if(!this.rubroempleaConstantesFunciones.cargarid_tipo_calculoRubroEmplea || this.rubroempleaConstantesFunciones.event_dependid_tipo_calculoRubroEmplea) {
						//this.cargarCombosTipoCalculosForeignKeyLista(" where id="+this.rubroemplea.getid_tipo_calculo());
									//this.inicializarActualizarBindingRubroEmplea(false,false);
						this.tipocalculosForeignKey=new ArrayList<TipoCalculo>();

						if(rubroemplea.getTipoCalculo()!=null) {
							this.tipocalculosForeignKey.add(rubroemplea.getTipoCalculo());
						}

						this.addItemDefectoCombosForeignKeyTipoCalculo();
						this.cargarCombosFrameTipoCalculosForeignKey("Todos");
					}
					this.setActualTipoCalculoForeignKey(this.rubroemplea.getid_tipo_calculo(),false,"Formulario");

					//TipoRubroEmplea
					if(!this.rubroempleaConstantesFunciones.cargarid_tipo_rubro_empleaRubroEmplea || this.rubroempleaConstantesFunciones.event_dependid_tipo_rubro_empleaRubroEmplea) {
						//this.cargarCombosTipoRubroEmpleasForeignKeyLista(" where id="+this.rubroemplea.getid_tipo_rubro_emplea());
									//this.inicializarActualizarBindingRubroEmplea(false,false);
						this.tiporubroempleasForeignKey=new ArrayList<TipoRubroEmplea>();

						if(rubroemplea.getTipoRubroEmplea()!=null) {
							this.tiporubroempleasForeignKey.add(rubroemplea.getTipoRubroEmplea());
						}

						this.addItemDefectoCombosForeignKeyTipoRubroEmplea();
						this.cargarCombosFrameTipoRubroEmpleasForeignKey("Todos");
					}
					this.setActualTipoRubroEmpleaForeignKey(this.rubroemplea.getid_tipo_rubro_emplea(),false,"Formulario");

					//TipoGrupoRubroEmplea
					if(!this.rubroempleaConstantesFunciones.cargarid_tipo_grupo_rubro_empleaRubroEmplea || this.rubroempleaConstantesFunciones.event_dependid_tipo_grupo_rubro_empleaRubroEmplea) {
						//this.cargarCombosTipoGrupoRubroEmpleasForeignKeyLista(" where id="+this.rubroemplea.getid_tipo_grupo_rubro_emplea());
									//this.inicializarActualizarBindingRubroEmplea(false,false);
						this.tipogruporubroempleasForeignKey=new ArrayList<TipoGrupoRubroEmplea>();

						if(rubroemplea.getTipoGrupoRubroEmplea()!=null) {
							this.tipogruporubroempleasForeignKey.add(rubroemplea.getTipoGrupoRubroEmplea());
						}

						this.addItemDefectoCombosForeignKeyTipoGrupoRubroEmplea();
						this.cargarCombosFrameTipoGrupoRubroEmpleasForeignKey("Todos");
					}
					this.setActualTipoGrupoRubroEmpleaForeignKey(this.rubroemplea.getid_tipo_grupo_rubro_emplea(),false,"Formulario");
				} catch(Exception e) {
					throw e;
				}
				
				this.actualizarEstadoCeldasBotonesRubroEmplea("s", this.isGuardarCambiosEnLote, this.isEsMantenimientoRelacionado);
				
				//NO FUNCIONA BINDING PERO SE MANTIENE
				this.inicializarActualizarBindingBotonesRubroEmplea(false) ;
				
				//SI ES MANUAL
				//this.inicializarActualizarBindingBotonesManualRubroEmplea() ;
			//}
		} catch(Exception e) {
			FuncionesSwing.manageException(this, e,logger,RubroEmpleaConstantesFunciones.CLASSNAME);
		}
	}
	
	public void setVariablesObjetoActualToFormularioTodoRubroEmplea(RubroEmplea rubroemplea) throws Exception { 
		this.setVariablesObjetoActualToFormularioTodoRubroEmplea(rubroemplea,false,"NINGUNO");
	}
	
	public void setVariablesObjetoActualToFormularioTodoRubroEmplea(RubroEmplea rubroemplea,Boolean conCargarListasDesdeObjetoActual,String sTipoEvento) throws Exception { 
		this.setVariablesObjetoActualToFormularioRubroEmplea(rubroemplea);
		
		if(conCargarListasDesdeObjetoActual) {
			this.setVariablesObjetoActualToListasForeignKeyRubroEmplea(rubroemplea,sTipoEvento);
		}
		
		this.setVariablesObjetoActualToFormularioForeignKeyRubroEmplea(rubroemplea);
	}
	
	public void setVariablesObjetoActualToFormularioRubroEmplea(RubroEmplea rubroemplea) throws Exception { 
		try {			
			Image imageActual=null;
			ImageIcon imageIcon = null;
			
			if(this.jInternalFrameDetalleFormRubroEmplea==null) { //if(!this.conCargarFormDetalle) {
				this.inicializarFormDetalle();
			}
			
			
			this.jInternalFrameDetalleFormRubroEmplea.jLabelidRubroEmplea.setText(rubroemplea.getId().toString());
			this.jInternalFrameDetalleFormRubroEmplea.jTextFieldcodigoRubroEmplea.setText(rubroemplea.getcodigo());
			this.jInternalFrameDetalleFormRubroEmplea.jTextAreanombreRubroEmplea.setText(rubroemplea.getnombre());
			this.jInternalFrameDetalleFormRubroEmplea.jTextAreaformulaRubroEmplea.setText(rubroemplea.getformula());
			this.jInternalFrameDetalleFormRubroEmplea.jTextFieldaliasRubroEmplea.setText(rubroemplea.getalias());
			this.jInternalFrameDetalleFormRubroEmplea.jTextFieldsecuencialRubroEmplea.setText(rubroemplea.getsecuencial().toString());
			this.jInternalFrameDetalleFormRubroEmplea.jCheckBoxpara_rol_pagosRubroEmplea.setSelected(rubroemplea.getpara_rol_pagos());
			this.jInternalFrameDetalleFormRubroEmplea.jCheckBoxpara_sueldoRubroEmplea.setSelected(rubroemplea.getpara_sueldo());
			this.jInternalFrameDetalleFormRubroEmplea.jCheckBoxpara_vacacionesRubroEmplea.setSelected(rubroemplea.getpara_vacaciones());
			this.jInternalFrameDetalleFormRubroEmplea.jCheckBoxpara_impuesto_rentaRubroEmplea.setSelected(rubroemplea.getpara_impuesto_renta());
			this.jInternalFrameDetalleFormRubroEmplea.jCheckBoxpara_seguro_socialRubroEmplea.setSelected(rubroemplea.getpara_seguro_social());
			this.jInternalFrameDetalleFormRubroEmplea.jCheckBoxpara_provisionesRubroEmplea.setSelected(rubroemplea.getpara_provisiones());
			this.jInternalFrameDetalleFormRubroEmplea.jCheckBoxpara_utilidadesRubroEmplea.setSelected(rubroemplea.getpara_utilidades());
			this.jInternalFrameDetalleFormRubroEmplea.jCheckBoxpara_rubro_iessRubroEmplea.setSelected(rubroemplea.getpara_rubro_iess());
			this.jInternalFrameDetalleFormRubroEmplea.jCheckBoxes_fondo_reservaRubroEmplea.setSelected(rubroemplea.getes_fondo_reserva());
			this.jInternalFrameDetalleFormRubroEmplea.jCheckBoxes_decimo_terceroRubroEmplea.setSelected(rubroemplea.getes_decimo_tercero());
			this.jInternalFrameDetalleFormRubroEmplea.jCheckBoxes_decimo_cuartoRubroEmplea.setSelected(rubroemplea.getes_decimo_cuarto());
			
		} catch(Exception e) {
			throw e;
			//FuncionesSwing.manageException(this, e,logger,RubroEmpleaConstantesFunciones.CLASSNAME);
		}
	}
		
	public void actualizarInformacion(String sTipo,RubroEmplea rubroempleaLocal) throws Exception {
		this.actualizarInformacion(sTipo,false,rubroempleaLocal);
	}	
	
	public void actualizarInformacion(String sTipo,Boolean conParametroObjeto,RubroEmplea rubroempleaLocal) throws Exception {
		
		if(!conParametroObjeto) {
			if(!this.getEsControlTabla()) {
				rubroempleaLocal=this.rubroemplea;
			} else {
				rubroempleaLocal=this.rubroempleaAnterior;
			}
		}
		
		if(this.permiteMantenimiento(rubroempleaLocal)) {
			if(sTipo.equals("EVENTO_CONTROL")) { // || sTipo.equals("EVENTO_NUEVO")
				if(!this.esControlTabla) {
					this.setVariablesFormularioToObjetoActualTodoRubroEmplea(rubroempleaLocal,true);
					
					if(rubroempleaSessionBean.getConGuardarRelaciones()) {
						this.actualizarRelaciones(rubroempleaLocal);
					}
				}
			
			} else if(sTipo.equals("INFO_PADRE")) {
				
				if(this.rubroempleaSessionBean.getEsGuardarRelacionado()) {
					this.actualizarRelacionFkPadreActual(rubroempleaLocal);
				}
			}
		}
	}
	
	public void setVariablesFormularioToObjetoActualTodoRubroEmplea(RubroEmplea rubroemplea,Boolean conColumnasBase) throws Exception { 
		this.setVariablesFormularioToObjetoActualRubroEmplea(rubroemplea,conColumnasBase);
		this.setVariablesFormularioToObjetoActualForeignKeysRubroEmplea(rubroemplea);
	}
	
	public void setVariablesFormularioToObjetoActualRubroEmplea(RubroEmplea rubroemplea,Boolean conColumnasBase) throws Exception { 
		this.setVariablesFormularioToObjetoActualRubroEmplea(rubroemplea,conColumnasBase,true);
	}
	
	public void setVariablesFormularioToObjetoActualRubroEmplea(RubroEmplea rubroemplea,Boolean conColumnasBase,Boolean conInicializarInvalidValues) throws Exception { 
		String sMensajeCampoActual="";
		Boolean estaValidado=true;
		try {
			
			if(this.jInternalFrameDetalleFormRubroEmplea==null) { //if(!this.conCargarFormDetalle) {
				this.inicializarFormDetalle();
			}
			
			if(conInicializarInvalidValues) {
				this.inicializarInvalidValues();
			}
			
			

		try {
			if(this.jInternalFrameDetalleFormRubroEmplea.jLabelidRubroEmplea.getText()==null || this.jInternalFrameDetalleFormRubroEmplea.jLabelidRubroEmplea.getText()=="" || this.jInternalFrameDetalleFormRubroEmplea.jLabelidRubroEmplea.getText()=="Id") {
				this.jInternalFrameDetalleFormRubroEmplea.jLabelidRubroEmplea.setText("0");
			}

			if(conColumnasBase) {rubroemplea.setId(Long.parseLong(this.jInternalFrameDetalleFormRubroEmplea.jLabelidRubroEmplea.getText()));}
		} catch(Exception e) {
			estaValidado=false;
			sMensajeCampoActual+="\r\n"+RubroEmpleaConstantesFunciones.LABEL_ID+"-->"+ConstantesMensajes.SMENSAJEEXCEPCION_VALIDACIONVALOR;FuncionesSwing.mostrarCampoMensajeInvalido(false,this.jInternalFrameDetalleFormRubroEmplea.jLabelIdRubroEmplea,ConstantesMensajes.SMENSAJEEXCEPCION_VALIDACIONVALOR);
		}

		try {
			rubroemplea.setcodigo(this.jInternalFrameDetalleFormRubroEmplea.jTextFieldcodigoRubroEmplea.getText());
		} catch(Exception e) {
			estaValidado=false;
			sMensajeCampoActual+="\r\n"+RubroEmpleaConstantesFunciones.LABEL_CODIGO+"-->"+ConstantesMensajes.SMENSAJEEXCEPCION_VALIDACIONVALOR;FuncionesSwing.mostrarCampoMensajeInvalido(false,this.jInternalFrameDetalleFormRubroEmplea.jLabelcodigoRubroEmplea,ConstantesMensajes.SMENSAJEEXCEPCION_VALIDACIONVALOR);
		}

		try {
			rubroemplea.setnombre(this.jInternalFrameDetalleFormRubroEmplea.jTextAreanombreRubroEmplea.getText());
		} catch(Exception e) {
			estaValidado=false;
			sMensajeCampoActual+="\r\n"+RubroEmpleaConstantesFunciones.LABEL_NOMBRE+"-->"+ConstantesMensajes.SMENSAJEEXCEPCION_VALIDACIONVALOR;FuncionesSwing.mostrarCampoMensajeInvalido(false,this.jInternalFrameDetalleFormRubroEmplea.jLabelnombreRubroEmplea,ConstantesMensajes.SMENSAJEEXCEPCION_VALIDACIONVALOR);
		}

		try {
			rubroemplea.setformula(this.jInternalFrameDetalleFormRubroEmplea.jTextAreaformulaRubroEmplea.getText());
		} catch(Exception e) {
			estaValidado=false;
			sMensajeCampoActual+="\r\n"+RubroEmpleaConstantesFunciones.LABEL_FORMULA+"-->"+ConstantesMensajes.SMENSAJEEXCEPCION_VALIDACIONVALOR;FuncionesSwing.mostrarCampoMensajeInvalido(false,this.jInternalFrameDetalleFormRubroEmplea.jLabelformulaRubroEmplea,ConstantesMensajes.SMENSAJEEXCEPCION_VALIDACIONVALOR);
		}

		try {
			rubroemplea.setalias(this.jInternalFrameDetalleFormRubroEmplea.jTextFieldaliasRubroEmplea.getText());
		} catch(Exception e) {
			estaValidado=false;
			sMensajeCampoActual+="\r\n"+RubroEmpleaConstantesFunciones.LABEL_ALIAS+"-->"+ConstantesMensajes.SMENSAJEEXCEPCION_VALIDACIONVALOR;FuncionesSwing.mostrarCampoMensajeInvalido(false,this.jInternalFrameDetalleFormRubroEmplea.jLabelaliasRubroEmplea,ConstantesMensajes.SMENSAJEEXCEPCION_VALIDACIONVALOR);
		}

		try {
			rubroemplea.setsecuencial(Integer.parseInt(this.jInternalFrameDetalleFormRubroEmplea.jTextFieldsecuencialRubroEmplea.getText()));
		} catch(Exception e) {
			estaValidado=false;
			sMensajeCampoActual+="\r\n"+RubroEmpleaConstantesFunciones.LABEL_SECUENCIAL+"-->"+ConstantesMensajes.SMENSAJEEXCEPCION_VALIDACIONVALOR;FuncionesSwing.mostrarCampoMensajeInvalido(false,this.jInternalFrameDetalleFormRubroEmplea.jLabelsecuencialRubroEmplea,ConstantesMensajes.SMENSAJEEXCEPCION_VALIDACIONVALOR);
		}

		try {
			rubroemplea.setpara_rol_pagos(this.jInternalFrameDetalleFormRubroEmplea.jCheckBoxpara_rol_pagosRubroEmplea.isSelected());
		} catch(Exception e) {
			estaValidado=false;
			sMensajeCampoActual+="\r\n"+RubroEmpleaConstantesFunciones.LABEL_PARAROLPAGOS+"-->"+ConstantesMensajes.SMENSAJEEXCEPCION_VALIDACIONVALOR;FuncionesSwing.mostrarCampoMensajeInvalido(false,this.jInternalFrameDetalleFormRubroEmplea.jLabelpara_rol_pagosRubroEmplea,ConstantesMensajes.SMENSAJEEXCEPCION_VALIDACIONVALOR);
		}

		try {
			rubroemplea.setpara_sueldo(this.jInternalFrameDetalleFormRubroEmplea.jCheckBoxpara_sueldoRubroEmplea.isSelected());
		} catch(Exception e) {
			estaValidado=false;
			sMensajeCampoActual+="\r\n"+RubroEmpleaConstantesFunciones.LABEL_PARASUELDO+"-->"+ConstantesMensajes.SMENSAJEEXCEPCION_VALIDACIONVALOR;FuncionesSwing.mostrarCampoMensajeInvalido(false,this.jInternalFrameDetalleFormRubroEmplea.jLabelpara_sueldoRubroEmplea,ConstantesMensajes.SMENSAJEEXCEPCION_VALIDACIONVALOR);
		}

		try {
			rubroemplea.setpara_vacaciones(this.jInternalFrameDetalleFormRubroEmplea.jCheckBoxpara_vacacionesRubroEmplea.isSelected());
		} catch(Exception e) {
			estaValidado=false;
			sMensajeCampoActual+="\r\n"+RubroEmpleaConstantesFunciones.LABEL_PARAVACACIONES+"-->"+ConstantesMensajes.SMENSAJEEXCEPCION_VALIDACIONVALOR;FuncionesSwing.mostrarCampoMensajeInvalido(false,this.jInternalFrameDetalleFormRubroEmplea.jLabelpara_vacacionesRubroEmplea,ConstantesMensajes.SMENSAJEEXCEPCION_VALIDACIONVALOR);
		}

		try {
			rubroemplea.setpara_impuesto_renta(this.jInternalFrameDetalleFormRubroEmplea.jCheckBoxpara_impuesto_rentaRubroEmplea.isSelected());
		} catch(Exception e) {
			estaValidado=false;
			sMensajeCampoActual+="\r\n"+RubroEmpleaConstantesFunciones.LABEL_PARAIMPUESTORENTA+"-->"+ConstantesMensajes.SMENSAJEEXCEPCION_VALIDACIONVALOR;FuncionesSwing.mostrarCampoMensajeInvalido(false,this.jInternalFrameDetalleFormRubroEmplea.jLabelpara_impuesto_rentaRubroEmplea,ConstantesMensajes.SMENSAJEEXCEPCION_VALIDACIONVALOR);
		}

		try {
			rubroemplea.setpara_seguro_social(this.jInternalFrameDetalleFormRubroEmplea.jCheckBoxpara_seguro_socialRubroEmplea.isSelected());
		} catch(Exception e) {
			estaValidado=false;
			sMensajeCampoActual+="\r\n"+RubroEmpleaConstantesFunciones.LABEL_PARASEGUROSOCIAL+"-->"+ConstantesMensajes.SMENSAJEEXCEPCION_VALIDACIONVALOR;FuncionesSwing.mostrarCampoMensajeInvalido(false,this.jInternalFrameDetalleFormRubroEmplea.jLabelpara_seguro_socialRubroEmplea,ConstantesMensajes.SMENSAJEEXCEPCION_VALIDACIONVALOR);
		}

		try {
			rubroemplea.setpara_provisiones(this.jInternalFrameDetalleFormRubroEmplea.jCheckBoxpara_provisionesRubroEmplea.isSelected());
		} catch(Exception e) {
			estaValidado=false;
			sMensajeCampoActual+="\r\n"+RubroEmpleaConstantesFunciones.LABEL_PARAPROVISIONES+"-->"+ConstantesMensajes.SMENSAJEEXCEPCION_VALIDACIONVALOR;FuncionesSwing.mostrarCampoMensajeInvalido(false,this.jInternalFrameDetalleFormRubroEmplea.jLabelpara_provisionesRubroEmplea,ConstantesMensajes.SMENSAJEEXCEPCION_VALIDACIONVALOR);
		}

		try {
			rubroemplea.setpara_utilidades(this.jInternalFrameDetalleFormRubroEmplea.jCheckBoxpara_utilidadesRubroEmplea.isSelected());
		} catch(Exception e) {
			estaValidado=false;
			sMensajeCampoActual+="\r\n"+RubroEmpleaConstantesFunciones.LABEL_PARAUTILIDADES+"-->"+ConstantesMensajes.SMENSAJEEXCEPCION_VALIDACIONVALOR;FuncionesSwing.mostrarCampoMensajeInvalido(false,this.jInternalFrameDetalleFormRubroEmplea.jLabelpara_utilidadesRubroEmplea,ConstantesMensajes.SMENSAJEEXCEPCION_VALIDACIONVALOR);
		}

		try {
			rubroemplea.setpara_rubro_iess(this.jInternalFrameDetalleFormRubroEmplea.jCheckBoxpara_rubro_iessRubroEmplea.isSelected());
		} catch(Exception e) {
			estaValidado=false;
			sMensajeCampoActual+="\r\n"+RubroEmpleaConstantesFunciones.LABEL_PARARUBROIESS+"-->"+ConstantesMensajes.SMENSAJEEXCEPCION_VALIDACIONVALOR;FuncionesSwing.mostrarCampoMensajeInvalido(false,this.jInternalFrameDetalleFormRubroEmplea.jLabelpara_rubro_iessRubroEmplea,ConstantesMensajes.SMENSAJEEXCEPCION_VALIDACIONVALOR);
		}

		try {
			rubroemplea.setes_fondo_reserva(this.jInternalFrameDetalleFormRubroEmplea.jCheckBoxes_fondo_reservaRubroEmplea.isSelected());
		} catch(Exception e) {
			estaValidado=false;
			sMensajeCampoActual+="\r\n"+RubroEmpleaConstantesFunciones.LABEL_ESFONDORESERVA+"-->"+ConstantesMensajes.SMENSAJEEXCEPCION_VALIDACIONVALOR;FuncionesSwing.mostrarCampoMensajeInvalido(false,this.jInternalFrameDetalleFormRubroEmplea.jLabeles_fondo_reservaRubroEmplea,ConstantesMensajes.SMENSAJEEXCEPCION_VALIDACIONVALOR);
		}

		try {
			rubroemplea.setes_decimo_tercero(this.jInternalFrameDetalleFormRubroEmplea.jCheckBoxes_decimo_terceroRubroEmplea.isSelected());
		} catch(Exception e) {
			estaValidado=false;
			sMensajeCampoActual+="\r\n"+RubroEmpleaConstantesFunciones.LABEL_ESDECIMOTERCERO+"-->"+ConstantesMensajes.SMENSAJEEXCEPCION_VALIDACIONVALOR;FuncionesSwing.mostrarCampoMensajeInvalido(false,this.jInternalFrameDetalleFormRubroEmplea.jLabeles_decimo_terceroRubroEmplea,ConstantesMensajes.SMENSAJEEXCEPCION_VALIDACIONVALOR);
		}

		try {
			rubroemplea.setes_decimo_cuarto(this.jInternalFrameDetalleFormRubroEmplea.jCheckBoxes_decimo_cuartoRubroEmplea.isSelected());
		} catch(Exception e) {
			estaValidado=false;
			sMensajeCampoActual+="\r\n"+RubroEmpleaConstantesFunciones.LABEL_ESDECIMOCUARTO+"-->"+ConstantesMensajes.SMENSAJEEXCEPCION_VALIDACIONVALOR;FuncionesSwing.mostrarCampoMensajeInvalido(false,this.jInternalFrameDetalleFormRubroEmplea.jLabeles_decimo_cuartoRubroEmplea,ConstantesMensajes.SMENSAJEEXCEPCION_VALIDACIONVALOR);
		}
			
			if(!estaValidado) {
				throw new Exception(sMensajeCampoActual);
			}
		} catch(NumberFormatException e) {
			throw new Exception(sMensajeCampoActual);
			//FuncionesSwing.manageException(this, e,logger,MovimientoInventarioConstantesFunciones.CLASSNAME);
		} catch(Exception e) {
			throw e;
			//FuncionesSwing.manageException(this, e,logger,RubroEmpleaConstantesFunciones.CLASSNAME);
		}
	}
	
	public void setVariablesForeignKeyObjetoBeanDefectoActualToObjetoActualRubroEmplea(RubroEmplea rubroempleaBean,RubroEmplea rubroemplea,Boolean conDefault,Boolean conColumnasBase) throws Exception { 
		try {
			
			if(conDefault || (!conDefault && rubroempleaBean.getid_tipo_calculo()!=null && !rubroempleaBean.getid_tipo_calculo().equals(-1L))) {rubroemplea.setid_tipo_calculo(rubroempleaBean.getid_tipo_calculo());}
			if(conDefault || (!conDefault && rubroempleaBean.getid_tipo_rubro_emplea()!=null && !rubroempleaBean.getid_tipo_rubro_emplea().equals(-1L))) {rubroemplea.setid_tipo_rubro_emplea(rubroempleaBean.getid_tipo_rubro_emplea());}
			if(conDefault || (!conDefault && rubroempleaBean.getid_tipo_grupo_rubro_emplea()!=null && !rubroempleaBean.getid_tipo_grupo_rubro_emplea().equals(-1L))) {rubroemplea.setid_tipo_grupo_rubro_emplea(rubroempleaBean.getid_tipo_grupo_rubro_emplea());}
			
		} catch(Exception e) {
			throw e;
			//FuncionesSwing.manageException(this, e,logger,RubroEmpleaConstantesFunciones.CLASSNAME);
		}
	}
	
	public void setCopiarVariablesObjetosRubroEmplea(RubroEmplea rubroempleaOrigen,RubroEmplea rubroemplea,Boolean conDefault,Boolean conColumnasBase) throws Exception { 
		try {
			
			if(conColumnasBase) {if(conDefault || (!conDefault && rubroempleaOrigen.getId()!=null && !rubroempleaOrigen.getId().equals(0L))) {rubroemplea.setId(rubroempleaOrigen.getId());}}
			if(conDefault || (!conDefault && rubroempleaOrigen.getid_tipo_calculo()!=null && !rubroempleaOrigen.getid_tipo_calculo().equals(-1L))) {rubroemplea.setid_tipo_calculo(rubroempleaOrigen.getid_tipo_calculo());}
			if(conDefault || (!conDefault && rubroempleaOrigen.getid_tipo_rubro_emplea()!=null && !rubroempleaOrigen.getid_tipo_rubro_emplea().equals(-1L))) {rubroemplea.setid_tipo_rubro_emplea(rubroempleaOrigen.getid_tipo_rubro_emplea());}
			if(conDefault || (!conDefault && rubroempleaOrigen.getid_tipo_grupo_rubro_emplea()!=null && !rubroempleaOrigen.getid_tipo_grupo_rubro_emplea().equals(-1L))) {rubroemplea.setid_tipo_grupo_rubro_emplea(rubroempleaOrigen.getid_tipo_grupo_rubro_emplea());}
			if(conDefault || (!conDefault && rubroempleaOrigen.getcodigo()!=null && !rubroempleaOrigen.getcodigo().equals(""))) {rubroemplea.setcodigo(rubroempleaOrigen.getcodigo());}
			if(conDefault || (!conDefault && rubroempleaOrigen.getnombre()!=null && !rubroempleaOrigen.getnombre().equals(""))) {rubroemplea.setnombre(rubroempleaOrigen.getnombre());}
			if(conDefault || (!conDefault && rubroempleaOrigen.getformula()!=null && !rubroempleaOrigen.getformula().equals(""))) {rubroemplea.setformula(rubroempleaOrigen.getformula());}
			if(conDefault || (!conDefault && rubroempleaOrigen.getalias()!=null && !rubroempleaOrigen.getalias().equals(""))) {rubroemplea.setalias(rubroempleaOrigen.getalias());}
			if(conDefault || (!conDefault && rubroempleaOrigen.getsecuencial()!=null && !rubroempleaOrigen.getsecuencial().equals(0))) {rubroemplea.setsecuencial(rubroempleaOrigen.getsecuencial());}
			if(conDefault || (!conDefault && rubroempleaOrigen.getpara_rol_pagos()!=null && !rubroempleaOrigen.getpara_rol_pagos().equals(false))) {rubroemplea.setpara_rol_pagos(rubroempleaOrigen.getpara_rol_pagos());}
			if(conDefault || (!conDefault && rubroempleaOrigen.getpara_sueldo()!=null && !rubroempleaOrigen.getpara_sueldo().equals(false))) {rubroemplea.setpara_sueldo(rubroempleaOrigen.getpara_sueldo());}
			if(conDefault || (!conDefault && rubroempleaOrigen.getpara_vacaciones()!=null && !rubroempleaOrigen.getpara_vacaciones().equals(false))) {rubroemplea.setpara_vacaciones(rubroempleaOrigen.getpara_vacaciones());}
			if(conDefault || (!conDefault && rubroempleaOrigen.getpara_impuesto_renta()!=null && !rubroempleaOrigen.getpara_impuesto_renta().equals(false))) {rubroemplea.setpara_impuesto_renta(rubroempleaOrigen.getpara_impuesto_renta());}
			if(conDefault || (!conDefault && rubroempleaOrigen.getpara_seguro_social()!=null && !rubroempleaOrigen.getpara_seguro_social().equals(false))) {rubroemplea.setpara_seguro_social(rubroempleaOrigen.getpara_seguro_social());}
			if(conDefault || (!conDefault && rubroempleaOrigen.getpara_provisiones()!=null && !rubroempleaOrigen.getpara_provisiones().equals(false))) {rubroemplea.setpara_provisiones(rubroempleaOrigen.getpara_provisiones());}
			if(conDefault || (!conDefault && rubroempleaOrigen.getpara_utilidades()!=null && !rubroempleaOrigen.getpara_utilidades().equals(false))) {rubroemplea.setpara_utilidades(rubroempleaOrigen.getpara_utilidades());}
			if(conDefault || (!conDefault && rubroempleaOrigen.getpara_rubro_iess()!=null && !rubroempleaOrigen.getpara_rubro_iess().equals(false))) {rubroemplea.setpara_rubro_iess(rubroempleaOrigen.getpara_rubro_iess());}
			if(conDefault || (!conDefault && rubroempleaOrigen.getes_fondo_reserva()!=null && !rubroempleaOrigen.getes_fondo_reserva().equals(false))) {rubroemplea.setes_fondo_reserva(rubroempleaOrigen.getes_fondo_reserva());}
			if(conDefault || (!conDefault && rubroempleaOrigen.getes_decimo_tercero()!=null && !rubroempleaOrigen.getes_decimo_tercero().equals(false))) {rubroemplea.setes_decimo_tercero(rubroempleaOrigen.getes_decimo_tercero());}
			if(conDefault || (!conDefault && rubroempleaOrigen.getes_decimo_cuarto()!=null && !rubroempleaOrigen.getes_decimo_cuarto().equals(false))) {rubroemplea.setes_decimo_cuarto(rubroempleaOrigen.getes_decimo_cuarto());}
			
		} catch(Exception e) {
			throw e;
			//FuncionesSwing.manageException(this, e,logger,RubroEmpleaConstantesFunciones.CLASSNAME);
		}
	}
	
	/*
	public void setVariablesObjetoBeanActualToFormularioRubroEmplea(RubroEmplea rubroemplea) throws Exception { 
		try {
			
			this.jInternalFrameDetalleFormRubroEmplea.jLabelidRubroEmplea.setText(rubroemplea.getId().toString());
			this.jInternalFrameDetalleFormRubroEmplea.jTextFieldcodigoRubroEmplea.setText(rubroemplea.getcodigo());
			this.jInternalFrameDetalleFormRubroEmplea.jTextAreanombreRubroEmplea.setText(rubroemplea.getnombre());
			this.jInternalFrameDetalleFormRubroEmplea.jTextAreaformulaRubroEmplea.setText(rubroemplea.getformula());
			this.jInternalFrameDetalleFormRubroEmplea.jTextFieldaliasRubroEmplea.setText(rubroemplea.getalias());
			this.jInternalFrameDetalleFormRubroEmplea.jTextFieldsecuencialRubroEmplea.setText(rubroemplea.getsecuencial().toString());
			this.jInternalFrameDetalleFormRubroEmplea.jCheckBoxpara_rol_pagosRubroEmplea.setSelected(rubroemplea.getpara_rol_pagos());
			this.jInternalFrameDetalleFormRubroEmplea.jCheckBoxpara_sueldoRubroEmplea.setSelected(rubroemplea.getpara_sueldo());
			this.jInternalFrameDetalleFormRubroEmplea.jCheckBoxpara_vacacionesRubroEmplea.setSelected(rubroemplea.getpara_vacaciones());
			this.jInternalFrameDetalleFormRubroEmplea.jCheckBoxpara_impuesto_rentaRubroEmplea.setSelected(rubroemplea.getpara_impuesto_renta());
			this.jInternalFrameDetalleFormRubroEmplea.jCheckBoxpara_seguro_socialRubroEmplea.setSelected(rubroemplea.getpara_seguro_social());
			this.jInternalFrameDetalleFormRubroEmplea.jCheckBoxpara_provisionesRubroEmplea.setSelected(rubroemplea.getpara_provisiones());
			this.jInternalFrameDetalleFormRubroEmplea.jCheckBoxpara_utilidadesRubroEmplea.setSelected(rubroemplea.getpara_utilidades());
			this.jInternalFrameDetalleFormRubroEmplea.jCheckBoxpara_rubro_iessRubroEmplea.setSelected(rubroemplea.getpara_rubro_iess());
			this.jInternalFrameDetalleFormRubroEmplea.jCheckBoxes_fondo_reservaRubroEmplea.setSelected(rubroemplea.getes_fondo_reserva());
			this.jInternalFrameDetalleFormRubroEmplea.jCheckBoxes_decimo_terceroRubroEmplea.setSelected(rubroemplea.getes_decimo_tercero());
			this.jInternalFrameDetalleFormRubroEmplea.jCheckBoxes_decimo_cuartoRubroEmplea.setSelected(rubroemplea.getes_decimo_cuarto());
			
		} catch(Exception e) {
			FuncionesSwing.manageException(this, e,logger,RubroEmpleaConstantesFunciones.CLASSNAME);
		}
	}
	*/
	
	/*
	public void setVariablesObjetoBeanActualToFormularioRubroEmplea(RubroEmpleaBean rubroempleaBean) throws Exception { 
		try {
			
			this.jInternalFrameDetalleFormRubroEmplea.jLabelidRubroEmplea.setText(rubroempleaBean.getId().toString());
			this.jInternalFrameDetalleFormRubroEmplea.jTextFieldcodigoRubroEmplea.setText(rubroempleaBean.getcodigo());
			this.jInternalFrameDetalleFormRubroEmplea.jTextAreanombreRubroEmplea.setText(rubroempleaBean.getnombre());
			this.jInternalFrameDetalleFormRubroEmplea.jTextAreaformulaRubroEmplea.setText(rubroempleaBean.getformula());
			this.jInternalFrameDetalleFormRubroEmplea.jTextFieldaliasRubroEmplea.setText(rubroempleaBean.getalias());
			this.jInternalFrameDetalleFormRubroEmplea.jTextFieldsecuencialRubroEmplea.setText(rubroempleaBean.getsecuencial().toString());
			this.jInternalFrameDetalleFormRubroEmplea.jCheckBoxpara_rol_pagosRubroEmplea.setSelected(rubroempleaBean.getpara_rol_pagos());
			this.jInternalFrameDetalleFormRubroEmplea.jCheckBoxpara_sueldoRubroEmplea.setSelected(rubroempleaBean.getpara_sueldo());
			this.jInternalFrameDetalleFormRubroEmplea.jCheckBoxpara_vacacionesRubroEmplea.setSelected(rubroempleaBean.getpara_vacaciones());
			this.jInternalFrameDetalleFormRubroEmplea.jCheckBoxpara_impuesto_rentaRubroEmplea.setSelected(rubroempleaBean.getpara_impuesto_renta());
			this.jInternalFrameDetalleFormRubroEmplea.jCheckBoxpara_seguro_socialRubroEmplea.setSelected(rubroempleaBean.getpara_seguro_social());
			this.jInternalFrameDetalleFormRubroEmplea.jCheckBoxpara_provisionesRubroEmplea.setSelected(rubroempleaBean.getpara_provisiones());
			this.jInternalFrameDetalleFormRubroEmplea.jCheckBoxpara_utilidadesRubroEmplea.setSelected(rubroempleaBean.getpara_utilidades());
			this.jInternalFrameDetalleFormRubroEmplea.jCheckBoxpara_rubro_iessRubroEmplea.setSelected(rubroempleaBean.getpara_rubro_iess());
			this.jInternalFrameDetalleFormRubroEmplea.jCheckBoxes_fondo_reservaRubroEmplea.setSelected(rubroempleaBean.getes_fondo_reserva());
			this.jInternalFrameDetalleFormRubroEmplea.jCheckBoxes_decimo_terceroRubroEmplea.setSelected(rubroempleaBean.getes_decimo_tercero());
			this.jInternalFrameDetalleFormRubroEmplea.jCheckBoxes_decimo_cuartoRubroEmplea.setSelected(rubroempleaBean.getes_decimo_cuarto());
			
		} catch(Exception e) {
			FuncionesSwing.manageException(this, e,logger,RubroEmpleaConstantesFunciones.CLASSNAME);
		}
	}
	*/
	
	/*
	public void setVariablesObjetoReturnGeneralToBeanRubroEmplea(RubroEmpleaParameterReturnGeneral rubroempleaReturnGeneral,RubroEmpleaBean rubroempleaBean,Boolean conDefault) throws Exception { 
		try {
			RubroEmplea rubroempleaLocal=new RubroEmplea();
			
			rubroempleaLocal=rubroempleaReturnGeneral.getRubroEmplea();
			
			
			if(conColumnasBase) {if(conDefault || (!conDefault && rubroempleaLocal.getId()!=null && !rubroempleaLocal.getId().equals(0L))) {rubroempleaBean.setId(rubroempleaLocal.getId());}}
			if(conDefault || (!conDefault && rubroempleaLocal.getid_tipo_calculo()!=null && !rubroempleaLocal.getid_tipo_calculo().equals(-1L))) {rubroempleaBean.setid_tipo_calculo(rubroempleaLocal.getid_tipo_calculo());}
			if(conDefault || (!conDefault && rubroempleaLocal.getid_tipo_rubro_emplea()!=null && !rubroempleaLocal.getid_tipo_rubro_emplea().equals(-1L))) {rubroempleaBean.setid_tipo_rubro_emplea(rubroempleaLocal.getid_tipo_rubro_emplea());}
			if(conDefault || (!conDefault && rubroempleaLocal.getid_tipo_grupo_rubro_emplea()!=null && !rubroempleaLocal.getid_tipo_grupo_rubro_emplea().equals(-1L))) {rubroempleaBean.setid_tipo_grupo_rubro_emplea(rubroempleaLocal.getid_tipo_grupo_rubro_emplea());}
			if(conDefault || (!conDefault && rubroempleaLocal.getcodigo()!=null && !rubroempleaLocal.getcodigo().equals(""))) {rubroempleaBean.setcodigo(rubroempleaLocal.getcodigo());}
			if(conDefault || (!conDefault && rubroempleaLocal.getnombre()!=null && !rubroempleaLocal.getnombre().equals(""))) {rubroempleaBean.setnombre(rubroempleaLocal.getnombre());}
			if(conDefault || (!conDefault && rubroempleaLocal.getformula()!=null && !rubroempleaLocal.getformula().equals(""))) {rubroempleaBean.setformula(rubroempleaLocal.getformula());}
			if(conDefault || (!conDefault && rubroempleaLocal.getalias()!=null && !rubroempleaLocal.getalias().equals(""))) {rubroempleaBean.setalias(rubroempleaLocal.getalias());}
			if(conDefault || (!conDefault && rubroempleaLocal.getsecuencial()!=null && !rubroempleaLocal.getsecuencial().equals(0))) {rubroempleaBean.setsecuencial(rubroempleaLocal.getsecuencial());}
			if(conDefault || (!conDefault && rubroempleaLocal.getpara_rol_pagos()!=null && !rubroempleaLocal.getpara_rol_pagos().equals(false))) {rubroempleaBean.setpara_rol_pagos(rubroempleaLocal.getpara_rol_pagos());}
			if(conDefault || (!conDefault && rubroempleaLocal.getpara_sueldo()!=null && !rubroempleaLocal.getpara_sueldo().equals(false))) {rubroempleaBean.setpara_sueldo(rubroempleaLocal.getpara_sueldo());}
			if(conDefault || (!conDefault && rubroempleaLocal.getpara_vacaciones()!=null && !rubroempleaLocal.getpara_vacaciones().equals(false))) {rubroempleaBean.setpara_vacaciones(rubroempleaLocal.getpara_vacaciones());}
			if(conDefault || (!conDefault && rubroempleaLocal.getpara_impuesto_renta()!=null && !rubroempleaLocal.getpara_impuesto_renta().equals(false))) {rubroempleaBean.setpara_impuesto_renta(rubroempleaLocal.getpara_impuesto_renta());}
			if(conDefault || (!conDefault && rubroempleaLocal.getpara_seguro_social()!=null && !rubroempleaLocal.getpara_seguro_social().equals(false))) {rubroempleaBean.setpara_seguro_social(rubroempleaLocal.getpara_seguro_social());}
			if(conDefault || (!conDefault && rubroempleaLocal.getpara_provisiones()!=null && !rubroempleaLocal.getpara_provisiones().equals(false))) {rubroempleaBean.setpara_provisiones(rubroempleaLocal.getpara_provisiones());}
			if(conDefault || (!conDefault && rubroempleaLocal.getpara_utilidades()!=null && !rubroempleaLocal.getpara_utilidades().equals(false))) {rubroempleaBean.setpara_utilidades(rubroempleaLocal.getpara_utilidades());}
			if(conDefault || (!conDefault && rubroempleaLocal.getpara_rubro_iess()!=null && !rubroempleaLocal.getpara_rubro_iess().equals(false))) {rubroempleaBean.setpara_rubro_iess(rubroempleaLocal.getpara_rubro_iess());}
			if(conDefault || (!conDefault && rubroempleaLocal.getes_fondo_reserva()!=null && !rubroempleaLocal.getes_fondo_reserva().equals(false))) {rubroempleaBean.setes_fondo_reserva(rubroempleaLocal.getes_fondo_reserva());}
			if(conDefault || (!conDefault && rubroempleaLocal.getes_decimo_tercero()!=null && !rubroempleaLocal.getes_decimo_tercero().equals(false))) {rubroempleaBean.setes_decimo_tercero(rubroempleaLocal.getes_decimo_tercero());}
			if(conDefault || (!conDefault && rubroempleaLocal.getes_decimo_cuarto()!=null && !rubroempleaLocal.getes_decimo_cuarto().equals(false))) {rubroempleaBean.setes_decimo_cuarto(rubroempleaLocal.getes_decimo_cuarto());}
			
		} catch(Exception e) {
			FuncionesSwing.manageException(this, e,logger,RubroEmpleaConstantesFunciones.CLASSNAME);
		}
	}
	*/
	
	@SuppressWarnings("rawtypes")
	public static void setActualComboBoxRubroEmpleaGenerico(Long idRubroEmpleaSeleccionado,JComboBox jComboBoxRubroEmplea,List<RubroEmplea> rubroempleasLocal)throws Exception {
		try {
			RubroEmplea  rubroempleaTemp=null;

			for(RubroEmplea rubroempleaAux:rubroempleasLocal) {
				if(rubroempleaAux.getId()!=null && rubroempleaAux.getId().equals(idRubroEmpleaSeleccionado)) {
					rubroempleaTemp=rubroempleaAux;
					break;
				}
			}

			jComboBoxRubroEmplea.setSelectedItem(rubroempleaTemp);

		} catch(Exception e) {
			throw e;
		}
	}
	
	@SuppressWarnings("rawtypes")
	public static void setHotKeysComboBoxRubroEmpleaGenerico(JComboBox jComboBoxRubroEmplea,JInternalFrameBase jInternalFrameBase,String sNombreHotKeyAbstractAction,String sTipoBusqueda)throws Exception {
		try {
			//GLOBAL(id_empresa,id_sucursal,id_ejercicio)
			//BASICO(normal)
			//CON_BUSQUEDA(Permite buscar Fk)
			
			String sKeyStrokeName="";
			KeyStroke keyStrokeControl=null;
			
			if(!sTipoBusqueda.equals("GLOBAL")) {
				
				//BUSCAR
				sKeyStrokeName = FuncionesSwing.getKeyNameControl("CONTROL_BUSCAR");
				keyStrokeControl=FuncionesSwing.getKeyStrokeControl("CONTROL_BUSCAR");
				
				jComboBoxRubroEmplea.getInputMap().put(keyStrokeControl, sKeyStrokeName);
				jComboBoxRubroEmplea.getActionMap().put(sKeyStrokeName, new ButtonAbstractAction(jInternalFrameBase,sNombreHotKeyAbstractAction+"Busqueda"));
				//BUSCAR
				
				
				//ACTUALIZAR
				sKeyStrokeName = FuncionesSwing.getKeyNameControl("CONTROL_ACTUALIZAR");
				keyStrokeControl=FuncionesSwing.getKeyStrokeControl("CONTROL_ACTUALIZAR");
				
				jComboBoxRubroEmplea.getInputMap().put(keyStrokeControl, sKeyStrokeName);
				jComboBoxRubroEmplea.getActionMap().put(sKeyStrokeName, new ButtonAbstractAction(jInternalFrameBase,sNombreHotKeyAbstractAction+"Update"));
				//ACTUALIZAR
				
				if(sTipoBusqueda.contains("CON_EVENT_CHANGE")) {
					if(Constantes2.CON_COMBOBOX_ITEMLISTENER) {
						jComboBoxRubroEmplea.addFocusListener(new ComboBoxFocusListener(jInternalFrameBase,sNombreHotKeyAbstractAction));
						jComboBoxRubroEmplea.addActionListener(new ComboBoxActionListener(jInternalFrameBase,sNombreHotKeyAbstractAction));						
					}
					
					/*
					if(Constantes2.CON_COMBOBOX_ITEMLISTENER) {
						jComboBoxRubroEmplea.addItemListener(new ComboBoxItemListener(jInternalFrameBase,sNombreHotKeyAbstractAction));
					} else {
						jComboBoxRubroEmplea.addActionListener(new ComboBoxActionListener(jInternalFrameBase,sNombreHotKeyAbstractAction));
					}
					*/
				}								
				
				//CON_BUSQUEDA								
				if(sTipoBusqueda.contains("CON_BUSQUEDA")) {
					sKeyStrokeName = FuncionesSwing.getKeyNameControl("CONTROL_BUSQUEDA");
					keyStrokeControl=FuncionesSwing.getKeyStrokeControl("CONTROL_BUSQUEDA");
							
					jComboBoxRubroEmplea.getInputMap().put(keyStrokeControl, sKeyStrokeName);
					jComboBoxRubroEmplea.getActionMap().put(sKeyStrokeName, new ButtonAbstractAction(jInternalFrameBase,sNombreHotKeyAbstractAction));
				}
				//CON_BUSQUEDA
				
				
			}
		} catch(Exception e) {
			throw e;
		}
	}
	
	//PARA INICIALIZAR CONTROLES DE TABLA
	@SuppressWarnings("rawtypes")
	public void setHotKeysComboBoxGenerico(JComboBox jComboBox,JInternalFrameBase jInternalFrameBase,String sNombreHotKeyAbstractAction,String sTipoBusqueda) {
		if(sTipoBusqueda.contains("CON_EVENT_CHANGE")) {
			if(Constantes2.CON_COMBOBOX_ITEMLISTENER) {
				jComboBox.addItemListener(new ComboBoxItemListener(jInternalFrameBase,sNombreHotKeyAbstractAction));
				jComboBox.addFocusListener(new ComboBoxFocusListener(jInternalFrameBase,sNombreHotKeyAbstractAction));
			} else {
				jComboBox.addActionListener(new ComboBoxActionListener(jInternalFrameBase,sNombreHotKeyAbstractAction));
				jComboBox.addFocusListener(new ComboBoxFocusListener(jInternalFrameBase,sNombreHotKeyAbstractAction));
			}
		}
	}
	
	//PARA INICIALIZAR CONTROLES DE TABLA
	public void setHotKeysJTextFieldGenerico(JTextField jTextField,JInternalFrameBase jInternalFrameBase,String sNombreHotKeyAbstractAction,String sTipoBusqueda) {
		jTextField.addFocusListener(new TextFieldFocusListener(jInternalFrameBase,sNombreHotKeyAbstractAction));
		jTextField.addActionListener(new TextFieldActionListener(jInternalFrameBase,sNombreHotKeyAbstractAction));
	}
	
	//PARA INICIALIZAR CONTROLES DE TABLA
	public void setHotKeysJTextAreaGenerico(JTextArea jTextArea,JInternalFrameBase jInternalFrameBase,String sNombreHotKeyAbstractAction,String sTipoBusqueda) {
		jTextArea.addFocusListener(new TextAreaFocusListener(jInternalFrameBase,sNombreHotKeyAbstractAction));
		
		//NO EXISTE
		//jTextArea.addActionListener(new TextAreaActionListener(jInternalFrameBase,sNombreHotKeyAbstractAction));
	}
	
	//PARA INICIALIZAR CONTROLES DE TABLA
	public void setHotKeysJLabelGenerico(JLabel jLabel,JInternalFrameBase jInternalFrameBase,String sNombreHotKeyAbstractAction,String sTipoBusqueda) {
		jLabel.addFocusListener(new LabelFocusListener(jInternalFrameBase,sNombreHotKeyAbstractAction));
		
		//NO EXISTE
		//jLabel.addActionListener(new LabelActionListener(jInternalFrameBase,sNombreHotKeyAbstractAction));
	}
	
	//PARA INICIALIZAR CONTROLES DE TABLA
	public void setHotKeysJCheckBoxGenerico(JCheckBox jCheckBox,JInternalFrameBase jInternalFrameBase,String sNombreHotKeyAbstractAction,String sTipoBusqueda) {
		jCheckBox.addFocusListener(new CheckBoxFocusListener(jInternalFrameBase,sNombreHotKeyAbstractAction));
		
		//SI SE DEFINE AL CAMBIAR VALOR, ESTE NUEVO VALOR NO SE ENVIA AL EVENTO
		//jCheckBox.addItemListener(new CheckBoxItemListener(jInternalFrameBase,sNombreHotKeyAbstractAction));
	}
	
	//PARA INICIALIZAR CONTROLES DE TABLA
	public void setHotKeysJDateChooserGenerico(JDateChooser jDateChooser,JInternalFrameBase jInternalFrameBase,String sNombreHotKeyAbstractAction,String sTipoBusqueda) {
		FuncionesSwing.addDateListener(jDateChooser, jInternalFrameBase, sNombreHotKeyAbstractAction);
	}
	
	//PARA INICIALIZAR CONTROLES DE TABLA
	public void setHotKeysJButtonGenerico(JButton jButton,JInternalFrameBase jInternalFrameBase,String sNombreHotKeyAbstractAction,String sTipoBusqueda) {
		jButton.addActionListener(new ButtonActionListener(jInternalFrameBase,sNombreHotKeyAbstractAction));
	}
	
	public void jButtonRelacionActionPerformed(String sTipo,ActionEvent evt,int rowIndex,Boolean conInicializar,Boolean esRelacionado) {
		//ABRIR RELACIONES
		try {
			
		if(sTipo.equals("HistorialPagoNomi")) {
			jButtonHistorialPagoNomiActionPerformed(evt,rowIndex,true,false,null);
		}
		 else if(sTipo.equals("RubroEstructura")) {
			jButtonRubroEstructuraActionPerformed(evt,rowIndex,true,false,null);
		}
		 else if(sTipo.equals("DefiProvisionEmpleado")) {
			jButtonDefiProvisionEmpleadoActionPerformed(evt,rowIndex,true,false,null);
		}
		 else if(sTipo.equals("EmpleadoPagoRubro")) {
			jButtonEmpleadoPagoRubroActionPerformed(evt,rowIndex,true,false,null);
		}
		 else if(sTipo.equals("HistorialPagoMesNomi")) {
			jButtonHistorialPagoMesNomiActionPerformed(evt,rowIndex,true,false,null);
		}
		 else if(sTipo.equals("RubroEmpleado")) {
			jButtonRubroEmpleadoActionPerformed(evt,rowIndex,true,false,null);
		}
		 else if(sTipo.equals("ValorRubroVariable")) {
			jButtonValorRubroVariableActionPerformed(evt,rowIndex,true,false,null);
		}
		 else if(sTipo.equals("TipoPrestamo")) {
			jButtonTipoPrestamoActionPerformed(evt,rowIndex,true,false,null);
		}
		 else if(sTipo.equals("RubroEmpleaCuentaContable")) {
			jButtonRubroEmpleaCuentaContableActionPerformed(evt,rowIndex,true,false,null);
		}
		} catch (Exception e) {
			FuncionesSwing.manageException2(this, e,logger,RubroEmpleaConstantesFunciones.CLASSNAME);
		}
	}
	
	public String getDescripcionFk(String sTipo,JTable table,Object value,int intSelectedRow) throws Exception {
		//DESCRIPCIONES FK		
		String sDescripcion="";
		
		if(Constantes.ISUSAEJBLOGICLAYER) {
			rubroemplea=(RubroEmplea) rubroempleaLogic.getRubroEmpleas().toArray()[table.convertRowIndexToModel(intSelectedRow)];
		} else if(Constantes.ISUSAEJBREMOTE) {
			rubroemplea =(RubroEmplea) rubroempleas.toArray()[table.convertRowIndexToModel(intSelectedRow)];
		}
					
		
		if(sTipo.equals("Empresa")) {
			//sDescripcion=this.getActualEmpresaForeignKeyDescripcion((Long)value);
			if(!rubroemplea.getIsNew() && !rubroemplea.getIsChanged() && !rubroemplea.getIsDeleted()) {
				sDescripcion=rubroemplea.getempresa_descripcion();
			} else {
				//sDescripcion=this.getActualEmpresaForeignKeyDescripcion((Long)value);
				sDescripcion=rubroemplea.getempresa_descripcion();
			}
		}

		if(sTipo.equals("TipoCalculo")) {
			//sDescripcion=this.getActualTipoCalculoForeignKeyDescripcion((Long)value);
			if(!rubroemplea.getIsNew() && !rubroemplea.getIsChanged() && !rubroemplea.getIsDeleted()) {
				sDescripcion=rubroemplea.gettipocalculo_descripcion();
			} else {
				//sDescripcion=this.getActualTipoCalculoForeignKeyDescripcion((Long)value);
				sDescripcion=rubroemplea.gettipocalculo_descripcion();
			}
		}

		if(sTipo.equals("TipoRubroEmplea")) {
			//sDescripcion=this.getActualTipoRubroEmpleaForeignKeyDescripcion((Long)value);
			if(!rubroemplea.getIsNew() && !rubroemplea.getIsChanged() && !rubroemplea.getIsDeleted()) {
				sDescripcion=rubroemplea.gettiporubroemplea_descripcion();
			} else {
				//sDescripcion=this.getActualTipoRubroEmpleaForeignKeyDescripcion((Long)value);
				sDescripcion=rubroemplea.gettiporubroemplea_descripcion();
			}
		}

		if(sTipo.equals("TipoGrupoRubroEmplea")) {
			//sDescripcion=this.getActualTipoGrupoRubroEmpleaForeignKeyDescripcion((Long)value);
			if(!rubroemplea.getIsNew() && !rubroemplea.getIsChanged() && !rubroemplea.getIsDeleted()) {
				sDescripcion=rubroemplea.gettipogruporubroemplea_descripcion();
			} else {
				//sDescripcion=this.getActualTipoGrupoRubroEmpleaForeignKeyDescripcion((Long)value);
				sDescripcion=rubroemplea.gettipogruporubroemplea_descripcion();
			}
		}

		
		return sDescripcion;
	}
	
	public Color getColorFk(String sTipo,JTable table,Object value,int intSelectedRow) throws Exception {
		//DESCRIPCIONES FK		
		Color color=Color.WHITE;
		
		RubroEmplea rubroempleaRow=new RubroEmplea();
		
		if(Constantes.ISUSAEJBLOGICLAYER) {
			rubroempleaRow=(RubroEmplea) rubroempleaLogic.getRubroEmpleas().toArray()[table.convertRowIndexToModel(intSelectedRow)];
		} else if(Constantes.ISUSAEJBREMOTE) {
			rubroempleaRow=(RubroEmplea) rubroempleas.toArray()[table.convertRowIndexToModel(intSelectedRow)];
		}
					
		
		
		return color;
	}
	
	
	
	
	public void jButtonHistorialPagoNomiActionPerformed(ActionEvent evt,int rowIndex,Boolean conInicializar,Boolean esRelacionado,RubroEmplea rubroemplea) throws Exception {
			try {

				if(this.jInternalFrameDetalleFormRubroEmplea==null) {
					this.inicializarFormDetalle();
				}

				if(Constantes.ISUSAEJBLOGICLAYER) {
					this.rubroempleaLogic.getNewConnexionToDeep("");
				}

				int intSelectedRow =rowIndex;

				if(intSelectedRow!=-1) {
					//ARCHITECTURE
					if(Constantes.ISUSAEJBLOGICLAYER) {
						this.rubroemplea = (RubroEmplea)this.rubroempleaLogic.getRubroEmpleas().toArray()[this.jTableDatosRubroEmplea.convertRowIndexToModel(intSelectedRow)];
					} else if(Constantes.ISUSAEJBREMOTE) {
						this.rubroemplea = (RubroEmplea)this.rubroempleas.toArray()[this.jTableDatosRubroEmplea.convertRowIndexToModel(intSelectedRow)];
					}
					//ARCHITECTURE
				} else {
					if(rubroemplea!=null) {
						this.rubroemplea = rubroemplea;
					} else {
						this.rubroemplea = new RubroEmplea();
					}
				}

				if(this.isTienePermisosHistorialPagoNomi && this.permiteMantenimiento(this.rubroemplea)) {
					HistorialPagoNomiBeanSwingJInternalFrame historialpagonomiBeanSwingJInternalFrame=null;

					if(conInicializar) {
						this.jInternalFrameDetalleFormRubroEmplea.historialpagonomiBeanSwingJInternalFramePopup=new HistorialPagoNomiBeanSwingJInternalFrame(false,false,this.jDesktopPane,this.usuarioActual,this.resumenUsuarioActual,this.moduloActual,this.opcionActual,this.parametroGeneralSg,this.parametroGeneralUsuario,PaginaTipo.SECUNDARIO,false,false,true,false);
						this.jInternalFrameDetalleFormRubroEmplea.historialpagonomiBeanSwingJInternalFramePopup.setJInternalFrameParent(this);

						historialpagonomiBeanSwingJInternalFrame=this.jInternalFrameDetalleFormRubroEmplea.historialpagonomiBeanSwingJInternalFramePopup;
					} else {
						historialpagonomiBeanSwingJInternalFrame=this.jInternalFrameDetalleFormRubroEmplea.historialpagonomiBeanSwingJInternalFrame;
					}

					List<RubroEmplea> rubroempleas=new ArrayList<RubroEmplea>();
					rubroempleas.add(this.rubroemplea);
					if(!esRelacionado) {
						//historialpagonomiBeanSwingJInternalFrame.historialpagonomiSessionBean.setConGuardarRelaciones(false);
						//historialpagonomiBeanSwingJInternalFrame.historialpagonomiSessionBean.setEsGuardarRelacionado(false);
					}

					//DESHABILITA TEMPORALMENTE EVENTOS CHANGE DE TEXTOS,COMBOS,ETC
					historialpagonomiBeanSwingJInternalFrame.estaModoSeleccionar=true;
					this.jInternalFrameDetalleFormRubroEmplea.cargarHistorialPagoNomiBeanSwingJInternalFrame(rubroempleas,this.rubroemplea,historialpagonomiBeanSwingJInternalFrame,/*conInicializar,*/historialpagonomiBeanSwingJInternalFrame.historialpagonomiSessionBean.getConGuardarRelaciones(),historialpagonomiBeanSwingJInternalFrame.historialpagonomiSessionBean.getEsGuardarRelacionado());
					historialpagonomiBeanSwingJInternalFrame.estaModoSeleccionar=false;


					if(!esRelacionado) {
						historialpagonomiBeanSwingJInternalFrame.actualizarEstadoPanelsHistorialPagoNomi("no_relacionado");

						historialpagonomiBeanSwingJInternalFrame.redimensionarTablaDatosConTamanio(HistorialPagoNomiConstantesFunciones.ITAMANIOFILATABLA + (HistorialPagoNomiConstantesFunciones.ITAMANIOFILATABLA/2));

						historialpagonomiBeanSwingJInternalFrame.setLocation(xOffset*(openFrameCount + Constantes.INUM_MAX_VENTANAS_REL_X), yOffset*(openFrameCount+Constantes.INUM_MAX_VENTANAS_REL_Y));

						TitledBorder titledBorderRubroEmplea=(TitledBorder)this.jScrollPanelDatosRubroEmplea.getBorder();
						TitledBorder titledBorderHistorialPagoNomi=(TitledBorder)historialpagonomiBeanSwingJInternalFrame.jScrollPanelDatosHistorialPagoNomi.getBorder();

						titledBorderHistorialPagoNomi.setTitle(titledBorderRubroEmplea.getTitle() + " -> Historial Pago Nomi");

						if(!Constantes.CON_VARIAS_VENTANAS) {
							MainJFrame.cerrarJInternalFramesExistentes(this.jDesktopPane,historialpagonomiBeanSwingJInternalFrame);
						}

						historialpagonomiBeanSwingJInternalFrame.setVisible(true);

						this.jDesktopPane.add(historialpagonomiBeanSwingJInternalFrame);

						historialpagonomiBeanSwingJInternalFrame.setSelected(true);
					}

				} else {
					if(!this.rubroempleaSessionBean.getConGuardarRelaciones()) {
						JOptionPane.showMessageDialog(this,"NO TIENE PERMISOS PARA USAR LA FUNCIONALIDAD DE Historial Pago Nomi",Constantes.SERROR,JOptionPane.ERROR_MESSAGE);
					}
				}
				if(Constantes.ISUSAEJBLOGICLAYER) {
					this.rubroempleaLogic.commitNewConnexionToDeep();
				}

			}

			catch(Exception e) {
				if(Constantes.ISUSAEJBLOGICLAYER) {
					this.rubroempleaLogic.rollbackNewConnexionToDeep();
				}


				FuncionesSwing.manageException2(this, e,logger,RubroEmpleaConstantesFunciones.CLASSNAME);
			} finally { 
				if(Constantes.ISUSAEJBLOGICLAYER) {
					this.rubroempleaLogic.closeNewConnexionToDeep();
				}

			}
		}

	public void jButtonRubroEstructuraActionPerformed(ActionEvent evt,int rowIndex,Boolean conInicializar,Boolean esRelacionado,RubroEmplea rubroemplea) throws Exception {
			try {

				if(this.jInternalFrameDetalleFormRubroEmplea==null) {
					this.inicializarFormDetalle();
				}

				if(Constantes.ISUSAEJBLOGICLAYER) {
					this.rubroempleaLogic.getNewConnexionToDeep("");
				}

				int intSelectedRow =rowIndex;

				if(intSelectedRow!=-1) {
					//ARCHITECTURE
					if(Constantes.ISUSAEJBLOGICLAYER) {
						this.rubroemplea = (RubroEmplea)this.rubroempleaLogic.getRubroEmpleas().toArray()[this.jTableDatosRubroEmplea.convertRowIndexToModel(intSelectedRow)];
					} else if(Constantes.ISUSAEJBREMOTE) {
						this.rubroemplea = (RubroEmplea)this.rubroempleas.toArray()[this.jTableDatosRubroEmplea.convertRowIndexToModel(intSelectedRow)];
					}
					//ARCHITECTURE
				} else {
					if(rubroemplea!=null) {
						this.rubroemplea = rubroemplea;
					} else {
						this.rubroemplea = new RubroEmplea();
					}
				}

				if(this.isTienePermisosRubroEstructura && this.permiteMantenimiento(this.rubroemplea)) {
					RubroEstructuraBeanSwingJInternalFrame rubroestructuraBeanSwingJInternalFrame=null;

					if(conInicializar) {
						this.jInternalFrameDetalleFormRubroEmplea.rubroestructuraBeanSwingJInternalFramePopup=new RubroEstructuraBeanSwingJInternalFrame(false,false,this.jDesktopPane,this.usuarioActual,this.resumenUsuarioActual,this.moduloActual,this.opcionActual,this.parametroGeneralSg,this.parametroGeneralUsuario,PaginaTipo.SECUNDARIO,false,false,true,false);
						this.jInternalFrameDetalleFormRubroEmplea.rubroestructuraBeanSwingJInternalFramePopup.setJInternalFrameParent(this);

						rubroestructuraBeanSwingJInternalFrame=this.jInternalFrameDetalleFormRubroEmplea.rubroestructuraBeanSwingJInternalFramePopup;
					} else {
						rubroestructuraBeanSwingJInternalFrame=this.jInternalFrameDetalleFormRubroEmplea.rubroestructuraBeanSwingJInternalFrame;
					}

					List<RubroEmplea> rubroempleas=new ArrayList<RubroEmplea>();
					rubroempleas.add(this.rubroemplea);
					if(!esRelacionado) {
						//rubroestructuraBeanSwingJInternalFrame.rubroestructuraSessionBean.setConGuardarRelaciones(false);
						//rubroestructuraBeanSwingJInternalFrame.rubroestructuraSessionBean.setEsGuardarRelacionado(false);
					}

					//DESHABILITA TEMPORALMENTE EVENTOS CHANGE DE TEXTOS,COMBOS,ETC
					rubroestructuraBeanSwingJInternalFrame.estaModoSeleccionar=true;
					this.jInternalFrameDetalleFormRubroEmplea.cargarRubroEstructuraBeanSwingJInternalFrame(rubroempleas,this.rubroemplea,rubroestructuraBeanSwingJInternalFrame,/*conInicializar,*/rubroestructuraBeanSwingJInternalFrame.rubroestructuraSessionBean.getConGuardarRelaciones(),rubroestructuraBeanSwingJInternalFrame.rubroestructuraSessionBean.getEsGuardarRelacionado());
					rubroestructuraBeanSwingJInternalFrame.estaModoSeleccionar=false;


					if(!esRelacionado) {
						rubroestructuraBeanSwingJInternalFrame.actualizarEstadoPanelsRubroEstructura("no_relacionado");

						rubroestructuraBeanSwingJInternalFrame.redimensionarTablaDatosConTamanio(RubroEstructuraConstantesFunciones.ITAMANIOFILATABLA + (RubroEstructuraConstantesFunciones.ITAMANIOFILATABLA/2));

						rubroestructuraBeanSwingJInternalFrame.setLocation(xOffset*(openFrameCount + Constantes.INUM_MAX_VENTANAS_REL_X), yOffset*(openFrameCount+Constantes.INUM_MAX_VENTANAS_REL_Y));

						TitledBorder titledBorderRubroEmplea=(TitledBorder)this.jScrollPanelDatosRubroEmplea.getBorder();
						TitledBorder titledBorderRubroEstructura=(TitledBorder)rubroestructuraBeanSwingJInternalFrame.jScrollPanelDatosRubroEstructura.getBorder();

						titledBorderRubroEstructura.setTitle(titledBorderRubroEmplea.getTitle() + " -> Rubro Estructura");

						if(!Constantes.CON_VARIAS_VENTANAS) {
							MainJFrame.cerrarJInternalFramesExistentes(this.jDesktopPane,rubroestructuraBeanSwingJInternalFrame);
						}

						rubroestructuraBeanSwingJInternalFrame.setVisible(true);

						this.jDesktopPane.add(rubroestructuraBeanSwingJInternalFrame);

						rubroestructuraBeanSwingJInternalFrame.setSelected(true);
					}

				} else {
					if(!this.rubroempleaSessionBean.getConGuardarRelaciones()) {
						JOptionPane.showMessageDialog(this,"NO TIENE PERMISOS PARA USAR LA FUNCIONALIDAD DE Rubro Estructura",Constantes.SERROR,JOptionPane.ERROR_MESSAGE);
					}
				}
				if(Constantes.ISUSAEJBLOGICLAYER) {
					this.rubroempleaLogic.commitNewConnexionToDeep();
				}

			}

			catch(Exception e) {
				if(Constantes.ISUSAEJBLOGICLAYER) {
					this.rubroempleaLogic.rollbackNewConnexionToDeep();
				}


				FuncionesSwing.manageException2(this, e,logger,RubroEmpleaConstantesFunciones.CLASSNAME);
			} finally { 
				if(Constantes.ISUSAEJBLOGICLAYER) {
					this.rubroempleaLogic.closeNewConnexionToDeep();
				}

			}
		}

	public void jButtonDefiProvisionEmpleadoActionPerformed(ActionEvent evt,int rowIndex,Boolean conInicializar,Boolean esRelacionado,RubroEmplea rubroemplea) throws Exception {
			try {

				if(this.jInternalFrameDetalleFormRubroEmplea==null) {
					this.inicializarFormDetalle();
				}

				if(Constantes.ISUSAEJBLOGICLAYER) {
					this.rubroempleaLogic.getNewConnexionToDeep("");
				}

				int intSelectedRow =rowIndex;

				if(intSelectedRow!=-1) {
					//ARCHITECTURE
					if(Constantes.ISUSAEJBLOGICLAYER) {
						this.rubroemplea = (RubroEmplea)this.rubroempleaLogic.getRubroEmpleas().toArray()[this.jTableDatosRubroEmplea.convertRowIndexToModel(intSelectedRow)];
					} else if(Constantes.ISUSAEJBREMOTE) {
						this.rubroemplea = (RubroEmplea)this.rubroempleas.toArray()[this.jTableDatosRubroEmplea.convertRowIndexToModel(intSelectedRow)];
					}
					//ARCHITECTURE
				} else {
					if(rubroemplea!=null) {
						this.rubroemplea = rubroemplea;
					} else {
						this.rubroemplea = new RubroEmplea();
					}
				}

				if(this.isTienePermisosDefiProvisionEmpleado && this.permiteMantenimiento(this.rubroemplea)) {
					DefiProvisionEmpleadoBeanSwingJInternalFrame defiprovisionempleadoBeanSwingJInternalFrame=null;

					if(conInicializar) {
						this.jInternalFrameDetalleFormRubroEmplea.defiprovisionempleadoBeanSwingJInternalFramePopup=new DefiProvisionEmpleadoBeanSwingJInternalFrame(false,false,this.jDesktopPane,this.usuarioActual,this.resumenUsuarioActual,this.moduloActual,this.opcionActual,this.parametroGeneralSg,this.parametroGeneralUsuario,PaginaTipo.SECUNDARIO,false,false,true,false);
						this.jInternalFrameDetalleFormRubroEmplea.defiprovisionempleadoBeanSwingJInternalFramePopup.setJInternalFrameParent(this);

						defiprovisionempleadoBeanSwingJInternalFrame=this.jInternalFrameDetalleFormRubroEmplea.defiprovisionempleadoBeanSwingJInternalFramePopup;
					} else {
						defiprovisionempleadoBeanSwingJInternalFrame=this.jInternalFrameDetalleFormRubroEmplea.defiprovisionempleadoBeanSwingJInternalFrame;
					}

					List<RubroEmplea> rubroempleas=new ArrayList<RubroEmplea>();
					rubroempleas.add(this.rubroemplea);
					if(!esRelacionado) {
						//defiprovisionempleadoBeanSwingJInternalFrame.defiprovisionempleadoSessionBean.setConGuardarRelaciones(false);
						//defiprovisionempleadoBeanSwingJInternalFrame.defiprovisionempleadoSessionBean.setEsGuardarRelacionado(false);
					}

					//DESHABILITA TEMPORALMENTE EVENTOS CHANGE DE TEXTOS,COMBOS,ETC
					defiprovisionempleadoBeanSwingJInternalFrame.estaModoSeleccionar=true;
					this.jInternalFrameDetalleFormRubroEmplea.cargarDefiProvisionEmpleadoBeanSwingJInternalFrame(rubroempleas,this.rubroemplea,defiprovisionempleadoBeanSwingJInternalFrame,/*conInicializar,*/defiprovisionempleadoBeanSwingJInternalFrame.defiprovisionempleadoSessionBean.getConGuardarRelaciones(),defiprovisionempleadoBeanSwingJInternalFrame.defiprovisionempleadoSessionBean.getEsGuardarRelacionado());
					defiprovisionempleadoBeanSwingJInternalFrame.estaModoSeleccionar=false;


					if(!esRelacionado) {
						defiprovisionempleadoBeanSwingJInternalFrame.actualizarEstadoPanelsDefiProvisionEmpleado("no_relacionado");

						defiprovisionempleadoBeanSwingJInternalFrame.redimensionarTablaDatosConTamanio(DefiProvisionEmpleadoConstantesFunciones.ITAMANIOFILATABLA + (DefiProvisionEmpleadoConstantesFunciones.ITAMANIOFILATABLA/2));

						defiprovisionempleadoBeanSwingJInternalFrame.setLocation(xOffset*(openFrameCount + Constantes.INUM_MAX_VENTANAS_REL_X), yOffset*(openFrameCount+Constantes.INUM_MAX_VENTANAS_REL_Y));

						TitledBorder titledBorderRubroEmplea=(TitledBorder)this.jScrollPanelDatosRubroEmplea.getBorder();
						TitledBorder titledBorderDefiProvisionEmpleado=(TitledBorder)defiprovisionempleadoBeanSwingJInternalFrame.jScrollPanelDatosDefiProvisionEmpleado.getBorder();

						titledBorderDefiProvisionEmpleado.setTitle(titledBorderRubroEmplea.getTitle() + " -> Defi Provision Empleado");

						if(!Constantes.CON_VARIAS_VENTANAS) {
							MainJFrame.cerrarJInternalFramesExistentes(this.jDesktopPane,defiprovisionempleadoBeanSwingJInternalFrame);
						}

						defiprovisionempleadoBeanSwingJInternalFrame.setVisible(true);

						this.jDesktopPane.add(defiprovisionempleadoBeanSwingJInternalFrame);

						defiprovisionempleadoBeanSwingJInternalFrame.setSelected(true);
					}

				} else {
					if(!this.rubroempleaSessionBean.getConGuardarRelaciones()) {
						JOptionPane.showMessageDialog(this,"NO TIENE PERMISOS PARA USAR LA FUNCIONALIDAD DE Defi Provision Empleado",Constantes.SERROR,JOptionPane.ERROR_MESSAGE);
					}
				}
				if(Constantes.ISUSAEJBLOGICLAYER) {
					this.rubroempleaLogic.commitNewConnexionToDeep();
				}

			}

			catch(Exception e) {
				if(Constantes.ISUSAEJBLOGICLAYER) {
					this.rubroempleaLogic.rollbackNewConnexionToDeep();
				}


				FuncionesSwing.manageException2(this, e,logger,RubroEmpleaConstantesFunciones.CLASSNAME);
			} finally { 
				if(Constantes.ISUSAEJBLOGICLAYER) {
					this.rubroempleaLogic.closeNewConnexionToDeep();
				}

			}
		}

	public void jButtonEmpleadoPagoRubroActionPerformed(ActionEvent evt,int rowIndex,Boolean conInicializar,Boolean esRelacionado,RubroEmplea rubroemplea) throws Exception {
			try {

				if(this.jInternalFrameDetalleFormRubroEmplea==null) {
					this.inicializarFormDetalle();
				}

				if(Constantes.ISUSAEJBLOGICLAYER) {
					this.rubroempleaLogic.getNewConnexionToDeep("");
				}

				int intSelectedRow =rowIndex;

				if(intSelectedRow!=-1) {
					//ARCHITECTURE
					if(Constantes.ISUSAEJBLOGICLAYER) {
						this.rubroemplea = (RubroEmplea)this.rubroempleaLogic.getRubroEmpleas().toArray()[this.jTableDatosRubroEmplea.convertRowIndexToModel(intSelectedRow)];
					} else if(Constantes.ISUSAEJBREMOTE) {
						this.rubroemplea = (RubroEmplea)this.rubroempleas.toArray()[this.jTableDatosRubroEmplea.convertRowIndexToModel(intSelectedRow)];
					}
					//ARCHITECTURE
				} else {
					if(rubroemplea!=null) {
						this.rubroemplea = rubroemplea;
					} else {
						this.rubroemplea = new RubroEmplea();
					}
				}

				if(this.isTienePermisosEmpleadoPagoRubro && this.permiteMantenimiento(this.rubroemplea)) {
					EmpleadoPagoRubroBeanSwingJInternalFrame empleadopagorubroBeanSwingJInternalFrame=null;

					if(conInicializar) {
						this.jInternalFrameDetalleFormRubroEmplea.empleadopagorubroBeanSwingJInternalFramePopup=new EmpleadoPagoRubroBeanSwingJInternalFrame(false,false,this.jDesktopPane,this.usuarioActual,this.resumenUsuarioActual,this.moduloActual,this.opcionActual,this.parametroGeneralSg,this.parametroGeneralUsuario,PaginaTipo.SECUNDARIO,false,false,true,false);
						this.jInternalFrameDetalleFormRubroEmplea.empleadopagorubroBeanSwingJInternalFramePopup.setJInternalFrameParent(this);

						empleadopagorubroBeanSwingJInternalFrame=this.jInternalFrameDetalleFormRubroEmplea.empleadopagorubroBeanSwingJInternalFramePopup;
					} else {
						empleadopagorubroBeanSwingJInternalFrame=this.jInternalFrameDetalleFormRubroEmplea.empleadopagorubroBeanSwingJInternalFrame;
					}

					List<RubroEmplea> rubroempleas=new ArrayList<RubroEmplea>();
					rubroempleas.add(this.rubroemplea);
					if(!esRelacionado) {
						//empleadopagorubroBeanSwingJInternalFrame.empleadopagorubroSessionBean.setConGuardarRelaciones(false);
						//empleadopagorubroBeanSwingJInternalFrame.empleadopagorubroSessionBean.setEsGuardarRelacionado(false);
					}

					//DESHABILITA TEMPORALMENTE EVENTOS CHANGE DE TEXTOS,COMBOS,ETC
					empleadopagorubroBeanSwingJInternalFrame.estaModoSeleccionar=true;
					this.jInternalFrameDetalleFormRubroEmplea.cargarEmpleadoPagoRubroBeanSwingJInternalFrame(rubroempleas,this.rubroemplea,empleadopagorubroBeanSwingJInternalFrame,/*conInicializar,*/empleadopagorubroBeanSwingJInternalFrame.empleadopagorubroSessionBean.getConGuardarRelaciones(),empleadopagorubroBeanSwingJInternalFrame.empleadopagorubroSessionBean.getEsGuardarRelacionado());
					empleadopagorubroBeanSwingJInternalFrame.estaModoSeleccionar=false;


					if(!esRelacionado) {
						empleadopagorubroBeanSwingJInternalFrame.actualizarEstadoPanelsEmpleadoPagoRubro("no_relacionado");

						empleadopagorubroBeanSwingJInternalFrame.redimensionarTablaDatosConTamanio(EmpleadoPagoRubroConstantesFunciones.ITAMANIOFILATABLA + (EmpleadoPagoRubroConstantesFunciones.ITAMANIOFILATABLA/2));

						empleadopagorubroBeanSwingJInternalFrame.setLocation(xOffset*(openFrameCount + Constantes.INUM_MAX_VENTANAS_REL_X), yOffset*(openFrameCount+Constantes.INUM_MAX_VENTANAS_REL_Y));

						TitledBorder titledBorderRubroEmplea=(TitledBorder)this.jScrollPanelDatosRubroEmplea.getBorder();
						TitledBorder titledBorderEmpleadoPagoRubro=(TitledBorder)empleadopagorubroBeanSwingJInternalFrame.jScrollPanelDatosEmpleadoPagoRubro.getBorder();

						titledBorderEmpleadoPagoRubro.setTitle(titledBorderRubroEmplea.getTitle() + " -> Empleado Pago Rubro");

						if(!Constantes.CON_VARIAS_VENTANAS) {
							MainJFrame.cerrarJInternalFramesExistentes(this.jDesktopPane,empleadopagorubroBeanSwingJInternalFrame);
						}

						empleadopagorubroBeanSwingJInternalFrame.setVisible(true);

						this.jDesktopPane.add(empleadopagorubroBeanSwingJInternalFrame);

						empleadopagorubroBeanSwingJInternalFrame.setSelected(true);
					}

				} else {
					if(!this.rubroempleaSessionBean.getConGuardarRelaciones()) {
						JOptionPane.showMessageDialog(this,"NO TIENE PERMISOS PARA USAR LA FUNCIONALIDAD DE Empleado Pago Rubro",Constantes.SERROR,JOptionPane.ERROR_MESSAGE);
					}
				}
				if(Constantes.ISUSAEJBLOGICLAYER) {
					this.rubroempleaLogic.commitNewConnexionToDeep();
				}

			}

			catch(Exception e) {
				if(Constantes.ISUSAEJBLOGICLAYER) {
					this.rubroempleaLogic.rollbackNewConnexionToDeep();
				}


				FuncionesSwing.manageException2(this, e,logger,RubroEmpleaConstantesFunciones.CLASSNAME);
			} finally { 
				if(Constantes.ISUSAEJBLOGICLAYER) {
					this.rubroempleaLogic.closeNewConnexionToDeep();
				}

			}
		}

	public void jButtonHistorialPagoMesNomiActionPerformed(ActionEvent evt,int rowIndex,Boolean conInicializar,Boolean esRelacionado,RubroEmplea rubroemplea) throws Exception {
			try {

				if(this.jInternalFrameDetalleFormRubroEmplea==null) {
					this.inicializarFormDetalle();
				}

				if(Constantes.ISUSAEJBLOGICLAYER) {
					this.rubroempleaLogic.getNewConnexionToDeep("");
				}

				int intSelectedRow =rowIndex;

				if(intSelectedRow!=-1) {
					//ARCHITECTURE
					if(Constantes.ISUSAEJBLOGICLAYER) {
						this.rubroemplea = (RubroEmplea)this.rubroempleaLogic.getRubroEmpleas().toArray()[this.jTableDatosRubroEmplea.convertRowIndexToModel(intSelectedRow)];
					} else if(Constantes.ISUSAEJBREMOTE) {
						this.rubroemplea = (RubroEmplea)this.rubroempleas.toArray()[this.jTableDatosRubroEmplea.convertRowIndexToModel(intSelectedRow)];
					}
					//ARCHITECTURE
				} else {
					if(rubroemplea!=null) {
						this.rubroemplea = rubroemplea;
					} else {
						this.rubroemplea = new RubroEmplea();
					}
				}

				if(this.isTienePermisosHistorialPagoMesNomi && this.permiteMantenimiento(this.rubroemplea)) {
					HistorialPagoMesNomiBeanSwingJInternalFrame historialpagomesnomiBeanSwingJInternalFrame=null;

					if(conInicializar) {
						this.jInternalFrameDetalleFormRubroEmplea.historialpagomesnomiBeanSwingJInternalFramePopup=new HistorialPagoMesNomiBeanSwingJInternalFrame(false,false,this.jDesktopPane,this.usuarioActual,this.resumenUsuarioActual,this.moduloActual,this.opcionActual,this.parametroGeneralSg,this.parametroGeneralUsuario,PaginaTipo.SECUNDARIO,false,false,true,false);
						this.jInternalFrameDetalleFormRubroEmplea.historialpagomesnomiBeanSwingJInternalFramePopup.setJInternalFrameParent(this);

						historialpagomesnomiBeanSwingJInternalFrame=this.jInternalFrameDetalleFormRubroEmplea.historialpagomesnomiBeanSwingJInternalFramePopup;
					} else {
						historialpagomesnomiBeanSwingJInternalFrame=this.jInternalFrameDetalleFormRubroEmplea.historialpagomesnomiBeanSwingJInternalFrame;
					}

					List<RubroEmplea> rubroempleas=new ArrayList<RubroEmplea>();
					rubroempleas.add(this.rubroemplea);
					if(!esRelacionado) {
						//historialpagomesnomiBeanSwingJInternalFrame.historialpagomesnomiSessionBean.setConGuardarRelaciones(false);
						//historialpagomesnomiBeanSwingJInternalFrame.historialpagomesnomiSessionBean.setEsGuardarRelacionado(false);
					}

					//DESHABILITA TEMPORALMENTE EVENTOS CHANGE DE TEXTOS,COMBOS,ETC
					historialpagomesnomiBeanSwingJInternalFrame.estaModoSeleccionar=true;
					this.jInternalFrameDetalleFormRubroEmplea.cargarHistorialPagoMesNomiBeanSwingJInternalFrame(rubroempleas,this.rubroemplea,historialpagomesnomiBeanSwingJInternalFrame,/*conInicializar,*/historialpagomesnomiBeanSwingJInternalFrame.historialpagomesnomiSessionBean.getConGuardarRelaciones(),historialpagomesnomiBeanSwingJInternalFrame.historialpagomesnomiSessionBean.getEsGuardarRelacionado());
					historialpagomesnomiBeanSwingJInternalFrame.estaModoSeleccionar=false;


					if(!esRelacionado) {
						historialpagomesnomiBeanSwingJInternalFrame.actualizarEstadoPanelsHistorialPagoMesNomi("no_relacionado");

						historialpagomesnomiBeanSwingJInternalFrame.redimensionarTablaDatosConTamanio(HistorialPagoMesNomiConstantesFunciones.ITAMANIOFILATABLA + (HistorialPagoMesNomiConstantesFunciones.ITAMANIOFILATABLA/2));

						historialpagomesnomiBeanSwingJInternalFrame.setLocation(xOffset*(openFrameCount + Constantes.INUM_MAX_VENTANAS_REL_X), yOffset*(openFrameCount+Constantes.INUM_MAX_VENTANAS_REL_Y));

						TitledBorder titledBorderRubroEmplea=(TitledBorder)this.jScrollPanelDatosRubroEmplea.getBorder();
						TitledBorder titledBorderHistorialPagoMesNomi=(TitledBorder)historialpagomesnomiBeanSwingJInternalFrame.jScrollPanelDatosHistorialPagoMesNomi.getBorder();

						titledBorderHistorialPagoMesNomi.setTitle(titledBorderRubroEmplea.getTitle() + " -> Historial Pago Mes Nomi");

						if(!Constantes.CON_VARIAS_VENTANAS) {
							MainJFrame.cerrarJInternalFramesExistentes(this.jDesktopPane,historialpagomesnomiBeanSwingJInternalFrame);
						}

						historialpagomesnomiBeanSwingJInternalFrame.setVisible(true);

						this.jDesktopPane.add(historialpagomesnomiBeanSwingJInternalFrame);

						historialpagomesnomiBeanSwingJInternalFrame.setSelected(true);
					}

				} else {
					if(!this.rubroempleaSessionBean.getConGuardarRelaciones()) {
						JOptionPane.showMessageDialog(this,"NO TIENE PERMISOS PARA USAR LA FUNCIONALIDAD DE Historial Pago Mes Nomi",Constantes.SERROR,JOptionPane.ERROR_MESSAGE);
					}
				}
				if(Constantes.ISUSAEJBLOGICLAYER) {
					this.rubroempleaLogic.commitNewConnexionToDeep();
				}

			}

			catch(Exception e) {
				if(Constantes.ISUSAEJBLOGICLAYER) {
					this.rubroempleaLogic.rollbackNewConnexionToDeep();
				}


				FuncionesSwing.manageException2(this, e,logger,RubroEmpleaConstantesFunciones.CLASSNAME);
			} finally { 
				if(Constantes.ISUSAEJBLOGICLAYER) {
					this.rubroempleaLogic.closeNewConnexionToDeep();
				}

			}
		}

	public void jButtonRubroEmpleadoActionPerformed(ActionEvent evt,int rowIndex,Boolean conInicializar,Boolean esRelacionado,RubroEmplea rubroemplea) throws Exception {
			try {

				if(this.jInternalFrameDetalleFormRubroEmplea==null) {
					this.inicializarFormDetalle();
				}

				if(Constantes.ISUSAEJBLOGICLAYER) {
					this.rubroempleaLogic.getNewConnexionToDeep("");
				}

				int intSelectedRow =rowIndex;

				if(intSelectedRow!=-1) {
					//ARCHITECTURE
					if(Constantes.ISUSAEJBLOGICLAYER) {
						this.rubroemplea = (RubroEmplea)this.rubroempleaLogic.getRubroEmpleas().toArray()[this.jTableDatosRubroEmplea.convertRowIndexToModel(intSelectedRow)];
					} else if(Constantes.ISUSAEJBREMOTE) {
						this.rubroemplea = (RubroEmplea)this.rubroempleas.toArray()[this.jTableDatosRubroEmplea.convertRowIndexToModel(intSelectedRow)];
					}
					//ARCHITECTURE
				} else {
					if(rubroemplea!=null) {
						this.rubroemplea = rubroemplea;
					} else {
						this.rubroemplea = new RubroEmplea();
					}
				}

				if(this.isTienePermisosRubroEmpleado && this.permiteMantenimiento(this.rubroemplea)) {
					RubroEmpleadoBeanSwingJInternalFrame rubroempleadoBeanSwingJInternalFrame=null;

					if(conInicializar) {
						this.jInternalFrameDetalleFormRubroEmplea.rubroempleadoBeanSwingJInternalFramePopup=new RubroEmpleadoBeanSwingJInternalFrame(false,false,this.jDesktopPane,this.usuarioActual,this.resumenUsuarioActual,this.moduloActual,this.opcionActual,this.parametroGeneralSg,this.parametroGeneralUsuario,PaginaTipo.SECUNDARIO,false,false,true,false);
						this.jInternalFrameDetalleFormRubroEmplea.rubroempleadoBeanSwingJInternalFramePopup.setJInternalFrameParent(this);

						rubroempleadoBeanSwingJInternalFrame=this.jInternalFrameDetalleFormRubroEmplea.rubroempleadoBeanSwingJInternalFramePopup;
					} else {
						rubroempleadoBeanSwingJInternalFrame=this.jInternalFrameDetalleFormRubroEmplea.rubroempleadoBeanSwingJInternalFrame;
					}

					List<RubroEmplea> rubroempleas=new ArrayList<RubroEmplea>();
					rubroempleas.add(this.rubroemplea);
					if(!esRelacionado) {
						//rubroempleadoBeanSwingJInternalFrame.rubroempleadoSessionBean.setConGuardarRelaciones(false);
						//rubroempleadoBeanSwingJInternalFrame.rubroempleadoSessionBean.setEsGuardarRelacionado(false);
					}

					//DESHABILITA TEMPORALMENTE EVENTOS CHANGE DE TEXTOS,COMBOS,ETC
					rubroempleadoBeanSwingJInternalFrame.estaModoSeleccionar=true;
					this.jInternalFrameDetalleFormRubroEmplea.cargarRubroEmpleadoBeanSwingJInternalFrame(rubroempleas,this.rubroemplea,rubroempleadoBeanSwingJInternalFrame,/*conInicializar,*/rubroempleadoBeanSwingJInternalFrame.rubroempleadoSessionBean.getConGuardarRelaciones(),rubroempleadoBeanSwingJInternalFrame.rubroempleadoSessionBean.getEsGuardarRelacionado());
					rubroempleadoBeanSwingJInternalFrame.estaModoSeleccionar=false;


					if(!esRelacionado) {
						rubroempleadoBeanSwingJInternalFrame.actualizarEstadoPanelsRubroEmpleado("no_relacionado");

						rubroempleadoBeanSwingJInternalFrame.redimensionarTablaDatosConTamanio(RubroEmpleadoConstantesFunciones.ITAMANIOFILATABLA + (RubroEmpleadoConstantesFunciones.ITAMANIOFILATABLA/2));

						rubroempleadoBeanSwingJInternalFrame.setLocation(xOffset*(openFrameCount + Constantes.INUM_MAX_VENTANAS_REL_X), yOffset*(openFrameCount+Constantes.INUM_MAX_VENTANAS_REL_Y));

						TitledBorder titledBorderRubroEmplea=(TitledBorder)this.jScrollPanelDatosRubroEmplea.getBorder();
						TitledBorder titledBorderRubroEmpleado=(TitledBorder)rubroempleadoBeanSwingJInternalFrame.jScrollPanelDatosRubroEmpleado.getBorder();

						titledBorderRubroEmpleado.setTitle(titledBorderRubroEmplea.getTitle() + " -> Rubro Empleado");

						if(!Constantes.CON_VARIAS_VENTANAS) {
							MainJFrame.cerrarJInternalFramesExistentes(this.jDesktopPane,rubroempleadoBeanSwingJInternalFrame);
						}

						rubroempleadoBeanSwingJInternalFrame.setVisible(true);

						this.jDesktopPane.add(rubroempleadoBeanSwingJInternalFrame);

						rubroempleadoBeanSwingJInternalFrame.setSelected(true);
					}

				} else {
					if(!this.rubroempleaSessionBean.getConGuardarRelaciones()) {
						JOptionPane.showMessageDialog(this,"NO TIENE PERMISOS PARA USAR LA FUNCIONALIDAD DE Rubro Empleado",Constantes.SERROR,JOptionPane.ERROR_MESSAGE);
					}
				}
				if(Constantes.ISUSAEJBLOGICLAYER) {
					this.rubroempleaLogic.commitNewConnexionToDeep();
				}

			}

			catch(Exception e) {
				if(Constantes.ISUSAEJBLOGICLAYER) {
					this.rubroempleaLogic.rollbackNewConnexionToDeep();
				}


				FuncionesSwing.manageException2(this, e,logger,RubroEmpleaConstantesFunciones.CLASSNAME);
			} finally { 
				if(Constantes.ISUSAEJBLOGICLAYER) {
					this.rubroempleaLogic.closeNewConnexionToDeep();
				}

			}
		}

	public void jButtonValorRubroVariableActionPerformed(ActionEvent evt,int rowIndex,Boolean conInicializar,Boolean esRelacionado,RubroEmplea rubroemplea) throws Exception {
			try {

				if(this.jInternalFrameDetalleFormRubroEmplea==null) {
					this.inicializarFormDetalle();
				}

				if(Constantes.ISUSAEJBLOGICLAYER) {
					this.rubroempleaLogic.getNewConnexionToDeep("");
				}

				int intSelectedRow =rowIndex;

				if(intSelectedRow!=-1) {
					//ARCHITECTURE
					if(Constantes.ISUSAEJBLOGICLAYER) {
						this.rubroemplea = (RubroEmplea)this.rubroempleaLogic.getRubroEmpleas().toArray()[this.jTableDatosRubroEmplea.convertRowIndexToModel(intSelectedRow)];
					} else if(Constantes.ISUSAEJBREMOTE) {
						this.rubroemplea = (RubroEmplea)this.rubroempleas.toArray()[this.jTableDatosRubroEmplea.convertRowIndexToModel(intSelectedRow)];
					}
					//ARCHITECTURE
				} else {
					if(rubroemplea!=null) {
						this.rubroemplea = rubroemplea;
					} else {
						this.rubroemplea = new RubroEmplea();
					}
				}

				if(this.isTienePermisosValorRubroVariable && this.permiteMantenimiento(this.rubroemplea)) {
					ValorRubroVariableBeanSwingJInternalFrame valorrubrovariableBeanSwingJInternalFrame=null;

					if(conInicializar) {
						this.jInternalFrameDetalleFormRubroEmplea.valorrubrovariableBeanSwingJInternalFramePopup=new ValorRubroVariableBeanSwingJInternalFrame(false,false,this.jDesktopPane,this.usuarioActual,this.resumenUsuarioActual,this.moduloActual,this.opcionActual,this.parametroGeneralSg,this.parametroGeneralUsuario,PaginaTipo.SECUNDARIO,false,false,true,false);
						this.jInternalFrameDetalleFormRubroEmplea.valorrubrovariableBeanSwingJInternalFramePopup.setJInternalFrameParent(this);

						valorrubrovariableBeanSwingJInternalFrame=this.jInternalFrameDetalleFormRubroEmplea.valorrubrovariableBeanSwingJInternalFramePopup;
					} else {
						valorrubrovariableBeanSwingJInternalFrame=this.jInternalFrameDetalleFormRubroEmplea.valorrubrovariableBeanSwingJInternalFrame;
					}

					List<RubroEmplea> rubroempleas=new ArrayList<RubroEmplea>();
					rubroempleas.add(this.rubroemplea);
					if(!esRelacionado) {
						//valorrubrovariableBeanSwingJInternalFrame.valorrubrovariableSessionBean.setConGuardarRelaciones(false);
						//valorrubrovariableBeanSwingJInternalFrame.valorrubrovariableSessionBean.setEsGuardarRelacionado(false);
					}

					//DESHABILITA TEMPORALMENTE EVENTOS CHANGE DE TEXTOS,COMBOS,ETC
					valorrubrovariableBeanSwingJInternalFrame.estaModoSeleccionar=true;
					this.jInternalFrameDetalleFormRubroEmplea.cargarValorRubroVariableBeanSwingJInternalFrame(rubroempleas,this.rubroemplea,valorrubrovariableBeanSwingJInternalFrame,/*conInicializar,*/valorrubrovariableBeanSwingJInternalFrame.valorrubrovariableSessionBean.getConGuardarRelaciones(),valorrubrovariableBeanSwingJInternalFrame.valorrubrovariableSessionBean.getEsGuardarRelacionado());
					valorrubrovariableBeanSwingJInternalFrame.estaModoSeleccionar=false;


					if(!esRelacionado) {
						valorrubrovariableBeanSwingJInternalFrame.actualizarEstadoPanelsValorRubroVariable("no_relacionado");

						valorrubrovariableBeanSwingJInternalFrame.redimensionarTablaDatosConTamanio(ValorRubroVariableConstantesFunciones.ITAMANIOFILATABLA + (ValorRubroVariableConstantesFunciones.ITAMANIOFILATABLA/2));

						valorrubrovariableBeanSwingJInternalFrame.setLocation(xOffset*(openFrameCount + Constantes.INUM_MAX_VENTANAS_REL_X), yOffset*(openFrameCount+Constantes.INUM_MAX_VENTANAS_REL_Y));

						TitledBorder titledBorderRubroEmplea=(TitledBorder)this.jScrollPanelDatosRubroEmplea.getBorder();
						TitledBorder titledBorderValorRubroVariable=(TitledBorder)valorrubrovariableBeanSwingJInternalFrame.jScrollPanelDatosValorRubroVariable.getBorder();

						titledBorderValorRubroVariable.setTitle(titledBorderRubroEmplea.getTitle() + " -> Valor Rubro Variable");

						if(!Constantes.CON_VARIAS_VENTANAS) {
							MainJFrame.cerrarJInternalFramesExistentes(this.jDesktopPane,valorrubrovariableBeanSwingJInternalFrame);
						}

						valorrubrovariableBeanSwingJInternalFrame.setVisible(true);

						this.jDesktopPane.add(valorrubrovariableBeanSwingJInternalFrame);

						valorrubrovariableBeanSwingJInternalFrame.setSelected(true);
					}

				} else {
					if(!this.rubroempleaSessionBean.getConGuardarRelaciones()) {
						JOptionPane.showMessageDialog(this,"NO TIENE PERMISOS PARA USAR LA FUNCIONALIDAD DE Valor Rubro Variable",Constantes.SERROR,JOptionPane.ERROR_MESSAGE);
					}
				}
				if(Constantes.ISUSAEJBLOGICLAYER) {
					this.rubroempleaLogic.commitNewConnexionToDeep();
				}

			}

			catch(Exception e) {
				if(Constantes.ISUSAEJBLOGICLAYER) {
					this.rubroempleaLogic.rollbackNewConnexionToDeep();
				}


				FuncionesSwing.manageException2(this, e,logger,RubroEmpleaConstantesFunciones.CLASSNAME);
			} finally { 
				if(Constantes.ISUSAEJBLOGICLAYER) {
					this.rubroempleaLogic.closeNewConnexionToDeep();
				}

			}
		}

	public void jButtonTipoPrestamoActionPerformed(ActionEvent evt,int rowIndex,Boolean conInicializar,Boolean esRelacionado,RubroEmplea rubroemplea) throws Exception {
			try {

				if(this.jInternalFrameDetalleFormRubroEmplea==null) {
					this.inicializarFormDetalle();
				}

				if(Constantes.ISUSAEJBLOGICLAYER) {
					this.rubroempleaLogic.getNewConnexionToDeep("");
				}

				int intSelectedRow =rowIndex;

				if(intSelectedRow!=-1) {
					//ARCHITECTURE
					if(Constantes.ISUSAEJBLOGICLAYER) {
						this.rubroemplea = (RubroEmplea)this.rubroempleaLogic.getRubroEmpleas().toArray()[this.jTableDatosRubroEmplea.convertRowIndexToModel(intSelectedRow)];
					} else if(Constantes.ISUSAEJBREMOTE) {
						this.rubroemplea = (RubroEmplea)this.rubroempleas.toArray()[this.jTableDatosRubroEmplea.convertRowIndexToModel(intSelectedRow)];
					}
					//ARCHITECTURE
				} else {
					if(rubroemplea!=null) {
						this.rubroemplea = rubroemplea;
					} else {
						this.rubroemplea = new RubroEmplea();
					}
				}

				if(this.isTienePermisosTipoPrestamo && this.permiteMantenimiento(this.rubroemplea)) {
					TipoPrestamoBeanSwingJInternalFrame tipoprestamoBeanSwingJInternalFrame=null;

					if(conInicializar) {
						this.jInternalFrameDetalleFormRubroEmplea.tipoprestamoBeanSwingJInternalFramePopup=new TipoPrestamoBeanSwingJInternalFrame(false,false,this.jDesktopPane,this.usuarioActual,this.resumenUsuarioActual,this.moduloActual,this.opcionActual,this.parametroGeneralSg,this.parametroGeneralUsuario,PaginaTipo.SECUNDARIO,false,false,true,false);
						this.jInternalFrameDetalleFormRubroEmplea.tipoprestamoBeanSwingJInternalFramePopup.setJInternalFrameParent(this);

						tipoprestamoBeanSwingJInternalFrame=this.jInternalFrameDetalleFormRubroEmplea.tipoprestamoBeanSwingJInternalFramePopup;
					} else {
						tipoprestamoBeanSwingJInternalFrame=this.jInternalFrameDetalleFormRubroEmplea.tipoprestamoBeanSwingJInternalFrame;
					}

					List<RubroEmplea> rubroempleas=new ArrayList<RubroEmplea>();
					rubroempleas.add(this.rubroemplea);
					if(!esRelacionado) {
						//tipoprestamoBeanSwingJInternalFrame.tipoprestamoSessionBean.setConGuardarRelaciones(false);
						//tipoprestamoBeanSwingJInternalFrame.tipoprestamoSessionBean.setEsGuardarRelacionado(false);
					}

					//DESHABILITA TEMPORALMENTE EVENTOS CHANGE DE TEXTOS,COMBOS,ETC
					tipoprestamoBeanSwingJInternalFrame.estaModoSeleccionar=true;
					this.jInternalFrameDetalleFormRubroEmplea.cargarTipoPrestamoBeanSwingJInternalFrame(rubroempleas,this.rubroemplea,tipoprestamoBeanSwingJInternalFrame,/*conInicializar,*/tipoprestamoBeanSwingJInternalFrame.tipoprestamoSessionBean.getConGuardarRelaciones(),tipoprestamoBeanSwingJInternalFrame.tipoprestamoSessionBean.getEsGuardarRelacionado());
					tipoprestamoBeanSwingJInternalFrame.estaModoSeleccionar=false;


					if(!esRelacionado) {
						tipoprestamoBeanSwingJInternalFrame.actualizarEstadoPanelsTipoPrestamo("no_relacionado");

						tipoprestamoBeanSwingJInternalFrame.redimensionarTablaDatosConTamanio(TipoPrestamoConstantesFunciones.ITAMANIOFILATABLA + (TipoPrestamoConstantesFunciones.ITAMANIOFILATABLA/2));

						tipoprestamoBeanSwingJInternalFrame.setLocation(xOffset*(openFrameCount + Constantes.INUM_MAX_VENTANAS_REL_X), yOffset*(openFrameCount+Constantes.INUM_MAX_VENTANAS_REL_Y));

						TitledBorder titledBorderRubroEmplea=(TitledBorder)this.jScrollPanelDatosRubroEmplea.getBorder();
						TitledBorder titledBorderTipoPrestamo=(TitledBorder)tipoprestamoBeanSwingJInternalFrame.jScrollPanelDatosTipoPrestamo.getBorder();

						titledBorderTipoPrestamo.setTitle(titledBorderRubroEmplea.getTitle() + " -> Tipo Prestamo");

						if(!Constantes.CON_VARIAS_VENTANAS) {
							MainJFrame.cerrarJInternalFramesExistentes(this.jDesktopPane,tipoprestamoBeanSwingJInternalFrame);
						}

						tipoprestamoBeanSwingJInternalFrame.setVisible(true);

						this.jDesktopPane.add(tipoprestamoBeanSwingJInternalFrame);

						tipoprestamoBeanSwingJInternalFrame.setSelected(true);
					}

				} else {
					if(!this.rubroempleaSessionBean.getConGuardarRelaciones()) {
						JOptionPane.showMessageDialog(this,"NO TIENE PERMISOS PARA USAR LA FUNCIONALIDAD DE Tipo Prestamo",Constantes.SERROR,JOptionPane.ERROR_MESSAGE);
					}
				}
				if(Constantes.ISUSAEJBLOGICLAYER) {
					this.rubroempleaLogic.commitNewConnexionToDeep();
				}

			}

			catch(Exception e) {
				if(Constantes.ISUSAEJBLOGICLAYER) {
					this.rubroempleaLogic.rollbackNewConnexionToDeep();
				}


				FuncionesSwing.manageException2(this, e,logger,RubroEmpleaConstantesFunciones.CLASSNAME);
			} finally { 
				if(Constantes.ISUSAEJBLOGICLAYER) {
					this.rubroempleaLogic.closeNewConnexionToDeep();
				}

			}
		}

	public void jButtonRubroEmpleaCuentaContableActionPerformed(ActionEvent evt,int rowIndex,Boolean conInicializar,Boolean esRelacionado,RubroEmplea rubroemplea) throws Exception {
			try {

				if(this.jInternalFrameDetalleFormRubroEmplea==null) {
					this.inicializarFormDetalle();
				}

				if(Constantes.ISUSAEJBLOGICLAYER) {
					this.rubroempleaLogic.getNewConnexionToDeep("");
				}

				int intSelectedRow =rowIndex;

				if(intSelectedRow!=-1) {
					//ARCHITECTURE
					if(Constantes.ISUSAEJBLOGICLAYER) {
						this.rubroemplea = (RubroEmplea)this.rubroempleaLogic.getRubroEmpleas().toArray()[this.jTableDatosRubroEmplea.convertRowIndexToModel(intSelectedRow)];
					} else if(Constantes.ISUSAEJBREMOTE) {
						this.rubroemplea = (RubroEmplea)this.rubroempleas.toArray()[this.jTableDatosRubroEmplea.convertRowIndexToModel(intSelectedRow)];
					}
					//ARCHITECTURE
				} else {
					if(rubroemplea!=null) {
						this.rubroemplea = rubroemplea;
					} else {
						this.rubroemplea = new RubroEmplea();
					}
				}

				if(this.isTienePermisosRubroEmpleaCuentaContable && this.permiteMantenimiento(this.rubroemplea)) {
					RubroEmpleaCuentaContableBeanSwingJInternalFrame rubroempleacuentacontableBeanSwingJInternalFrame=null;

					if(conInicializar) {
						this.jInternalFrameDetalleFormRubroEmplea.rubroempleacuentacontableBeanSwingJInternalFramePopup=new RubroEmpleaCuentaContableBeanSwingJInternalFrame(false,false,this.jDesktopPane,this.usuarioActual,this.resumenUsuarioActual,this.moduloActual,this.opcionActual,this.parametroGeneralSg,this.parametroGeneralUsuario,PaginaTipo.SECUNDARIO,false,false,true,false);
						this.jInternalFrameDetalleFormRubroEmplea.rubroempleacuentacontableBeanSwingJInternalFramePopup.setJInternalFrameParent(this);

						rubroempleacuentacontableBeanSwingJInternalFrame=this.jInternalFrameDetalleFormRubroEmplea.rubroempleacuentacontableBeanSwingJInternalFramePopup;
					} else {
						rubroempleacuentacontableBeanSwingJInternalFrame=this.jInternalFrameDetalleFormRubroEmplea.rubroempleacuentacontableBeanSwingJInternalFrame;
					}

					List<RubroEmplea> rubroempleas=new ArrayList<RubroEmplea>();
					rubroempleas.add(this.rubroemplea);
					if(!esRelacionado) {
						//rubroempleacuentacontableBeanSwingJInternalFrame.rubroempleacuentacontableSessionBean.setConGuardarRelaciones(false);
						//rubroempleacuentacontableBeanSwingJInternalFrame.rubroempleacuentacontableSessionBean.setEsGuardarRelacionado(false);
					}

					//DESHABILITA TEMPORALMENTE EVENTOS CHANGE DE TEXTOS,COMBOS,ETC
					rubroempleacuentacontableBeanSwingJInternalFrame.estaModoSeleccionar=true;
					this.jInternalFrameDetalleFormRubroEmplea.cargarRubroEmpleaCuentaContableBeanSwingJInternalFrame(rubroempleas,this.rubroemplea,rubroempleacuentacontableBeanSwingJInternalFrame,/*conInicializar,*/rubroempleacuentacontableBeanSwingJInternalFrame.rubroempleacuentacontableSessionBean.getConGuardarRelaciones(),rubroempleacuentacontableBeanSwingJInternalFrame.rubroempleacuentacontableSessionBean.getEsGuardarRelacionado());
					rubroempleacuentacontableBeanSwingJInternalFrame.estaModoSeleccionar=false;


					if(!esRelacionado) {
						rubroempleacuentacontableBeanSwingJInternalFrame.actualizarEstadoPanelsRubroEmpleaCuentaContable("no_relacionado");

						rubroempleacuentacontableBeanSwingJInternalFrame.redimensionarTablaDatosConTamanio(RubroEmpleaCuentaContableConstantesFunciones.ITAMANIOFILATABLA + (RubroEmpleaCuentaContableConstantesFunciones.ITAMANIOFILATABLA/2));

						rubroempleacuentacontableBeanSwingJInternalFrame.setLocation(xOffset*(openFrameCount + Constantes.INUM_MAX_VENTANAS_REL_X), yOffset*(openFrameCount+Constantes.INUM_MAX_VENTANAS_REL_Y));

						TitledBorder titledBorderRubroEmplea=(TitledBorder)this.jScrollPanelDatosRubroEmplea.getBorder();
						TitledBorder titledBorderRubroEmpleaCuentaContable=(TitledBorder)rubroempleacuentacontableBeanSwingJInternalFrame.jScrollPanelDatosRubroEmpleaCuentaContable.getBorder();

						titledBorderRubroEmpleaCuentaContable.setTitle(titledBorderRubroEmplea.getTitle() + " -> Rubro Emplea Cuenta Contable");

						if(!Constantes.CON_VARIAS_VENTANAS) {
							MainJFrame.cerrarJInternalFramesExistentes(this.jDesktopPane,rubroempleacuentacontableBeanSwingJInternalFrame);
						}

						rubroempleacuentacontableBeanSwingJInternalFrame.setVisible(true);

						this.jDesktopPane.add(rubroempleacuentacontableBeanSwingJInternalFrame);

						rubroempleacuentacontableBeanSwingJInternalFrame.setSelected(true);
					}

				} else {
					if(!this.rubroempleaSessionBean.getConGuardarRelaciones()) {
						JOptionPane.showMessageDialog(this,"NO TIENE PERMISOS PARA USAR LA FUNCIONALIDAD DE Rubro Emplea Cuenta Contable",Constantes.SERROR,JOptionPane.ERROR_MESSAGE);
					}
				}
				if(Constantes.ISUSAEJBLOGICLAYER) {
					this.rubroempleaLogic.commitNewConnexionToDeep();
				}

			}

			catch(Exception e) {
				if(Constantes.ISUSAEJBLOGICLAYER) {
					this.rubroempleaLogic.rollbackNewConnexionToDeep();
				}


				FuncionesSwing.manageException2(this, e,logger,RubroEmpleaConstantesFunciones.CLASSNAME);
			} finally { 
				if(Constantes.ISUSAEJBLOGICLAYER) {
					this.rubroempleaLogic.closeNewConnexionToDeep();
				}

			}
		}

	
	
	
	public void refrescarBindingTabla(Boolean blnSoloTabla) {
	}
	
	public void inicializarActualizarBindingBotonesManualRubroEmplea(Boolean esSetControles) {						
		if(esSetControles) {
			this.jButtonNuevoRubroEmplea.setVisible((this.isVisibilidadCeldaNuevoRubroEmplea && this.isPermisoNuevoRubroEmplea));			
			this.jButtonDuplicarRubroEmplea.setVisible((this.isVisibilidadCeldaDuplicarRubroEmplea && this.isPermisoDuplicarRubroEmplea));			
			this.jButtonCopiarRubroEmplea.setVisible((this.isVisibilidadCeldaCopiarRubroEmplea && this.isPermisoCopiarRubroEmplea));
			this.jButtonVerFormRubroEmplea.setVisible((this.isVisibilidadCeldaVerFormRubroEmplea && this.isPermisoVerFormRubroEmplea));
			
			this.jButtonAbrirOrderByRubroEmplea.setVisible((this.isVisibilidadCeldaOrdenRubroEmplea && this.isPermisoOrdenRubroEmplea));			
			
			this.jButtonNuevoRelacionesRubroEmplea.setVisible((this.isVisibilidadCeldaNuevoRelacionesRubroEmplea && this.isPermisoNuevoRubroEmplea));			
			this.jButtonNuevoGuardarCambiosRubroEmplea.setVisible((this.isVisibilidadCeldaNuevoRubroEmplea && this.isPermisoNuevoRubroEmplea && this.isPermisoGuardarCambiosRubroEmplea));
			
			if(this.jInternalFrameDetalleFormRubroEmplea!=null) {
			this.jInternalFrameDetalleFormRubroEmplea.jButtonModificarRubroEmplea.setVisible((this.isVisibilidadCeldaModificarRubroEmplea && this.isPermisoActualizarRubroEmplea));	
			this.jInternalFrameDetalleFormRubroEmplea.jButtonActualizarRubroEmplea.setVisible((this.isVisibilidadCeldaActualizarRubroEmplea && this.isPermisoActualizarRubroEmplea));	
			this.jInternalFrameDetalleFormRubroEmplea.jButtonEliminarRubroEmplea.setVisible((this.isVisibilidadCeldaEliminarRubroEmplea && this.isPermisoEliminarRubroEmplea));
			this.jInternalFrameDetalleFormRubroEmplea.jButtonCancelarRubroEmplea.setVisible(this.isVisibilidadCeldaCancelarRubroEmplea);							
			this.jInternalFrameDetalleFormRubroEmplea.jButtonGuardarCambiosRubroEmplea.setVisible((this.isVisibilidadCeldaGuardarRubroEmplea && this.isPermisoGuardarCambiosRubroEmplea));			
			
			}
						
			this.jButtonGuardarCambiosTablaRubroEmplea.setVisible((this.isVisibilidadCeldaGuardarCambiosRubroEmplea && this.isPermisoGuardarCambiosRubroEmplea));							
			
			//TOOLBAR
			
			this.jButtonNuevoToolBarRubroEmplea.setVisible((this.isVisibilidadCeldaNuevoRubroEmplea && this.isPermisoNuevoRubroEmplea));						
			this.jButtonDuplicarToolBarRubroEmplea.setVisible((this.isVisibilidadCeldaDuplicarRubroEmplea && this.isPermisoDuplicarRubroEmplea));						
			this.jButtonCopiarToolBarRubroEmplea.setVisible((this.isVisibilidadCeldaCopiarRubroEmplea && this.isPermisoCopiarRubroEmplea));			
			this.jButtonVerFormToolBarRubroEmplea.setVisible((this.isVisibilidadCeldaVerFormRubroEmplea && this.isPermisoVerFormRubroEmplea));			
			this.jButtonAbrirOrderByToolBarRubroEmplea.setVisible((this.isVisibilidadCeldaOrdenRubroEmplea && this.isPermisoOrdenRubroEmplea));
			this.jButtonNuevoRelacionesToolBarRubroEmplea.setVisible((this.isVisibilidadCeldaNuevoRelacionesRubroEmplea && this.isPermisoNuevoRubroEmplea));			
			this.jButtonNuevoGuardarCambiosToolBarRubroEmplea.setVisible((this.isVisibilidadCeldaNuevoRubroEmplea && this.isPermisoNuevoRubroEmplea && this.isPermisoGuardarCambiosRubroEmplea));			
			
			if(this.jInternalFrameDetalleFormRubroEmplea!=null) {
			this.jInternalFrameDetalleFormRubroEmplea.jButtonModificarToolBarRubroEmplea.setVisible((this.isVisibilidadCeldaModificarRubroEmplea && this.isPermisoActualizarRubroEmplea));	
			this.jInternalFrameDetalleFormRubroEmplea.jButtonActualizarToolBarRubroEmplea.setVisible((this.isVisibilidadCeldaActualizarRubroEmplea  && this.isPermisoActualizarRubroEmplea));	
			this.jInternalFrameDetalleFormRubroEmplea.jButtonEliminarToolBarRubroEmplea.setVisible((this.isVisibilidadCeldaEliminarRubroEmplea && this.isPermisoEliminarRubroEmplea));
			this.jInternalFrameDetalleFormRubroEmplea.jButtonCancelarToolBarRubroEmplea.setVisible(this.isVisibilidadCeldaCancelarRubroEmplea);				
			this.jInternalFrameDetalleFormRubroEmplea.jButtonGuardarCambiosToolBarRubroEmplea.setVisible((this.isVisibilidadCeldaGuardarRubroEmplea && this.isPermisoGuardarCambiosRubroEmplea));									
			}
			
			this.jButtonGuardarCambiosTablaToolBarRubroEmplea.setVisible((this.isVisibilidadCeldaGuardarCambiosRubroEmplea && this.isPermisoGuardarCambiosRubroEmplea));									
			
			//TOOLBAR
			
			//MENUS
			
			this.jMenuItemNuevoRubroEmplea.setVisible((this.isVisibilidadCeldaNuevoRubroEmplea && this.isPermisoNuevoRubroEmplea));			
			this.jMenuItemDuplicarRubroEmplea.setVisible((this.isVisibilidadCeldaDuplicarRubroEmplea && this.isPermisoDuplicarRubroEmplea));			
			this.jMenuItemCopiarRubroEmplea.setVisible((this.isVisibilidadCeldaCopiarRubroEmplea && this.isPermisoCopiarRubroEmplea));			
			this.jMenuItemVerFormRubroEmplea.setVisible((this.isVisibilidadCeldaVerFormRubroEmplea && this.isPermisoVerFormRubroEmplea));			
			this.jMenuItemAbrirOrderByRubroEmplea.setVisible((this.isVisibilidadCeldaOrdenRubroEmplea && this.isPermisoOrdenRubroEmplea));			
			//this.jMenuItemMostrarOcultarRubroEmplea.setVisible((this.isVisibilidadCeldaOrdenRubroEmplea && this.isPermisoOrdenRubroEmplea));
			this.jMenuItemDetalleAbrirOrderByRubroEmplea.setVisible((this.isVisibilidadCeldaOrdenRubroEmplea && this.isPermisoOrdenRubroEmplea));			
			//this.jMenuItemDetalleMostrarOcultarRubroEmplea.setVisible((this.isVisibilidadCeldaOrdenRubroEmplea && this.isPermisoOrdenRubroEmplea));			
			this.jMenuItemNuevoRelacionesRubroEmplea.setVisible((this.isVisibilidadCeldaNuevoRelacionesRubroEmplea && this.isPermisoNuevoRubroEmplea));			
			this.jMenuItemNuevoGuardarCambiosRubroEmplea.setVisible((this.isVisibilidadCeldaNuevoRubroEmplea && this.isPermisoNuevoRubroEmplea && this.isPermisoGuardarCambiosRubroEmplea));									
			
			if(this.jInternalFrameDetalleFormRubroEmplea!=null) {
			this.jInternalFrameDetalleFormRubroEmplea.jMenuItemModificarRubroEmplea.setVisible((this.isVisibilidadCeldaModificarRubroEmplea && this.isPermisoActualizarRubroEmplea));	
			this.jInternalFrameDetalleFormRubroEmplea.jMenuItemActualizarRubroEmplea.setVisible((this.isVisibilidadCeldaActualizarRubroEmplea && this.isPermisoActualizarRubroEmplea));	
			this.jInternalFrameDetalleFormRubroEmplea.jMenuItemEliminarRubroEmplea.setVisible((this.isVisibilidadCeldaEliminarRubroEmplea && this.isPermisoEliminarRubroEmplea));
			this.jInternalFrameDetalleFormRubroEmplea.jMenuItemCancelarRubroEmplea.setVisible(this.isVisibilidadCeldaCancelarRubroEmplea);				
			}
			
			this.jMenuItemGuardarCambiosRubroEmplea.setVisible((this.isVisibilidadCeldaGuardarRubroEmplea && this.isPermisoGuardarCambiosRubroEmplea));						
			this.jMenuItemGuardarCambiosTablaRubroEmplea.setVisible((this.isVisibilidadCeldaGuardarCambiosRubroEmplea && this.isPermisoGuardarCambiosRubroEmplea));						
			
			//MENUS
			
		} else {
			this.isVisibilidadCeldaNuevoRubroEmplea=this.jButtonNuevoRubroEmplea.isVisible();
			this.isVisibilidadCeldaDuplicarRubroEmplea=this.jButtonDuplicarRubroEmplea.isVisible();
			this.isVisibilidadCeldaCopiarRubroEmplea=this.jButtonCopiarRubroEmplea.isVisible();
			this.isVisibilidadCeldaVerFormRubroEmplea=this.jButtonVerFormRubroEmplea.isVisible();
			
			this.isVisibilidadCeldaOrdenRubroEmplea=this.jButtonAbrirOrderByRubroEmplea.isVisible();			
			
			this.isVisibilidadCeldaNuevoRelacionesRubroEmplea=this.jButtonNuevoRelacionesRubroEmplea.isVisible();
			this.isVisibilidadCeldaModificarRubroEmplea=this.jButtonModificarRubroEmplea.isVisible();
			
			if(this.jInternalFrameDetalleFormRubroEmplea!=null) {
			this.isVisibilidadCeldaActualizarRubroEmplea=this.jInternalFrameDetalleFormRubroEmplea.jButtonActualizarRubroEmplea.isVisible();
			this.isVisibilidadCeldaEliminarRubroEmplea=this.jInternalFrameDetalleFormRubroEmplea.jButtonEliminarRubroEmplea.isVisible();
			this.isVisibilidadCeldaCancelarRubroEmplea=this.jInternalFrameDetalleFormRubroEmplea.jButtonCancelarRubroEmplea.isVisible();
			this.isVisibilidadCeldaGuardarRubroEmplea=this.jInternalFrameDetalleFormRubroEmplea.jButtonGuardarCambiosRubroEmplea.isVisible();			
			}
			
			this.isVisibilidadCeldaGuardarCambiosRubroEmplea=this.jButtonGuardarCambiosTablaRubroEmplea.isVisible();
			
			//TOOLBAR
			
			this.isVisibilidadCeldaNuevoRubroEmplea=this.jButtonNuevoToolBarRubroEmplea.isVisible();
			this.isVisibilidadCeldaNuevoRelacionesRubroEmplea=this.jButtonNuevoRelacionesToolBarRubroEmplea.isVisible();
			
			if(this.jInternalFrameDetalleFormRubroEmplea!=null) {
			this.isVisibilidadCeldaModificarRubroEmplea=this.jInternalFrameDetalleFormRubroEmplea.jButtonModificarToolBarRubroEmplea.isVisible();
			this.isVisibilidadCeldaActualizarRubroEmplea=this.jInternalFrameDetalleFormRubroEmplea.jButtonActualizarToolBarRubroEmplea.isVisible();
			this.isVisibilidadCeldaEliminarRubroEmplea=this.jInternalFrameDetalleFormRubroEmplea.jButtonEliminarToolBarRubroEmplea.isVisible();
			this.isVisibilidadCeldaCancelarRubroEmplea=this.jInternalFrameDetalleFormRubroEmplea.jButtonCancelarToolBarRubroEmplea.isVisible();
			}
			
			this.isVisibilidadCeldaGuardarRubroEmplea=this.jButtonGuardarCambiosToolBarRubroEmplea.isVisible();
			this.isVisibilidadCeldaGuardarCambiosRubroEmplea=this.jButtonGuardarCambiosTablaToolBarRubroEmplea.isVisible();						
			
			//TOOLBAR
			
			//MENUS
			
			this.isVisibilidadCeldaNuevoRubroEmplea=this.jMenuItemNuevoRubroEmplea.isVisible();
			this.isVisibilidadCeldaNuevoRelacionesRubroEmplea=this.jMenuItemNuevoRelacionesRubroEmplea.isVisible();
			
			if(this.jInternalFrameDetalleFormRubroEmplea!=null) {
			this.isVisibilidadCeldaModificarRubroEmplea=this.jInternalFrameDetalleFormRubroEmplea.jMenuItemModificarRubroEmplea.isVisible();
			this.isVisibilidadCeldaActualizarRubroEmplea=this.jInternalFrameDetalleFormRubroEmplea.jMenuItemActualizarRubroEmplea.isVisible();
			this.isVisibilidadCeldaEliminarRubroEmplea=this.jInternalFrameDetalleFormRubroEmplea.jMenuItemEliminarRubroEmplea.isVisible();
			this.isVisibilidadCeldaCancelarRubroEmplea=this.jInternalFrameDetalleFormRubroEmplea.jMenuItemCancelarRubroEmplea.isVisible();
			}
			
			this.isVisibilidadCeldaGuardarRubroEmplea=this.jMenuItemGuardarCambiosRubroEmplea.isVisible();
			this.isVisibilidadCeldaGuardarCambiosRubroEmplea=this.jMenuItemGuardarCambiosTablaRubroEmplea.isVisible();						
			
			//MENUS
		}
	}
	
	public void inicializarActualizarBindingBotonesRubroEmplea(Boolean esInicializar) {
		if(RubroEmpleaJInternalFrame.ISBINDING_MANUAL) {			
			if(this.rubroempleaSessionBean.getConGuardarRelaciones()) {
				//if(this.rubroempleaSessionBean.getEsGuardarRelacionado()) {
				
				this.actualizarEstadoCeldasBotonesConGuardarRelacionesRubroEmplea();
			}
			
			this.inicializarActualizarBindingBotonesManualRubroEmplea(true);
			
		} else {	
		}
	}		
	
	public void inicializarActualizarBindingBotonesPermisosManualRubroEmplea() {
		this.jButtonNuevoRubroEmplea.setVisible(this.isPermisoNuevoRubroEmplea);			
		this.jButtonDuplicarRubroEmplea.setVisible(this.isPermisoDuplicarRubroEmplea);			
		this.jButtonCopiarRubroEmplea.setVisible(this.isPermisoCopiarRubroEmplea);			
		this.jButtonVerFormRubroEmplea.setVisible(this.isPermisoVerFormRubroEmplea);			
		
		this.jButtonAbrirOrderByRubroEmplea.setVisible(this.isPermisoOrdenRubroEmplea);					
		
		this.jButtonNuevoRelacionesRubroEmplea.setVisible(this.isPermisoNuevoRubroEmplea);			
		
		if(this.jInternalFrameDetalleFormRubroEmplea!=null) { //if(this.conCargarFormDetalle) {
			this.jInternalFrameDetalleFormRubroEmplea.jButtonModificarRubroEmplea.setVisible(this.isPermisoActualizarRubroEmplea);	
			this.jInternalFrameDetalleFormRubroEmplea.jButtonActualizarRubroEmplea.setVisible(this.isPermisoActualizarRubroEmplea);	
			this.jInternalFrameDetalleFormRubroEmplea.jButtonEliminarRubroEmplea.setVisible(this.isPermisoEliminarRubroEmplea);
			this.jInternalFrameDetalleFormRubroEmplea.jButtonCancelarRubroEmplea.setVisible(this.isVisibilidadCeldaCancelarRubroEmplea);						
			this.jInternalFrameDetalleFormRubroEmplea.jButtonGuardarCambiosRubroEmplea.setVisible(this.isPermisoGuardarCambiosRubroEmplea);							
		}
		
		this.jButtonGuardarCambiosTablaRubroEmplea.setVisible(this.isPermisoActualizarRubroEmplea);
	}
	
	public void inicializarActualizarBindingBotonesPermisosManualFormDetalleRubroEmplea() {
		this.jInternalFrameDetalleFormRubroEmplea.jButtonModificarRubroEmplea.setVisible(this.isPermisoActualizarRubroEmplea);	
		this.jInternalFrameDetalleFormRubroEmplea.jButtonActualizarRubroEmplea.setVisible(this.isPermisoActualizarRubroEmplea);	
		this.jInternalFrameDetalleFormRubroEmplea.jButtonEliminarRubroEmplea.setVisible(this.isPermisoEliminarRubroEmplea);
		this.jInternalFrameDetalleFormRubroEmplea.jButtonCancelarRubroEmplea.setVisible(this.isVisibilidadCeldaCancelarRubroEmplea);							
		this.jInternalFrameDetalleFormRubroEmplea.jButtonGuardarCambiosRubroEmplea.setVisible((this.isVisibilidadCeldaGuardarRubroEmplea && this.isPermisoGuardarCambiosRubroEmplea));			
	}
	
	public void inicializarActualizarBindingBotonesPermisosRubroEmplea() {
		if(RubroEmpleaJInternalFrame.ISBINDING_MANUAL) {
			this.inicializarActualizarBindingBotonesPermisosManualRubroEmplea();
		} else {
		}
	}
	
	
	public void refrescarBindingBotonesRubroEmplea() {
	}
	
	public void jTableDatosRubroEmpleaListSelectionListener(javax.swing.event.ListSelectionEvent evt) throws Exception { 
		try {
			this.seleccionarRubroEmplea(null,evt,-1);
		} catch(Exception e) {
			FuncionesSwing.manageException(this, e,logger,RubroEmpleaConstantesFunciones.CLASSNAME);
		}
	}
	
	
	public void jButtonidRubroEmpleaBusquedaActionPerformed(java.awt.event.ActionEvent evt) throws Exception {
		try {

				if(Constantes.ISUSAEJBLOGICLAYER) {
					this.rubroempleaLogic.getNewConnexionToDeep("");
				}

				//TOCA TRAER NUEVAMENTE, YA QUE SE PIERDE REGISTRO ACTUAL
				int intSelectedRow = this.jTableDatosRubroEmplea.getSelectedRow();

				if(intSelectedRow>-1) {
					this.setVariablesFormularioToObjetoActualRubroEmplea(this.getrubroemplea(),true);
					this.setVariablesFormularioToObjetoActualForeignKeysRubroEmplea(this.rubroemplea);
					//ARCHITECTURE
					/*
					if(Constantes.ISUSAEJBLOGICLAYER) {
						this.rubroemplea =(RubroEmplea) this.rubroempleaLogic.getRubroEmpleas().toArray()[this.jTableDatosRubroEmplea.convertRowIndexToModel(intSelectedRow)];
					} else if(Constantes.ISUSAEJBREMOTE || Constantes.ISUSAEJBHOME) {
						this.rubroemplea =(RubroEmplea) this.rubroempleas.toArray()[this.jTableDatosRubroEmplea.convertRowIndexToModel(intSelectedRow)];
					}
					*/
					//ARCHITECTURE

				} else {
					if(this.rubroemplea==null) {
						this.rubroemplea = new RubroEmplea();
					}

					this.setVariablesFormularioToObjetoActualRubroEmplea(this.rubroemplea,true);
					this.setVariablesFormularioToObjetoActualForeignKeysRubroEmplea(this.rubroemplea);
				}

				if(this.rubroemplea.getId()!=null) {

					this.sAccionBusqueda="Query";

					this.sFinalQueryGeneral=" where id = "+this.rubroemplea.getId().toString()+" ";

					if(Constantes.ISDEVELOPING) {
						System.out.println(this.sFinalQueryGeneral);
					}

					this.procesarBusqueda(this.sAccionBusqueda);

					this.inicializarActualizarBindingRubroEmplea(false);
				}

				if(Constantes.ISUSAEJBLOGICLAYER) {
					this.rubroempleaLogic.commitNewConnexionToDeep();
				}

			} catch(Exception e) {

				if(Constantes.ISUSAEJBLOGICLAYER) {
					this.rubroempleaLogic.rollbackNewConnexionToDeep();
				}

				FuncionesSwing.manageException(this, e,logger,RubroEmpleaConstantesFunciones.CLASSNAME);

			} finally {
				if(Constantes.ISUSAEJBLOGICLAYER) {
					this.rubroempleaLogic.closeNewConnexionToDeep();
				}

			}
		}

	public void jButtonid_empresaRubroEmpleaUpdateActionPerformed(java.awt.event.ActionEvent evt) throws Exception {
		try {

			if(Constantes.ISUSAEJBLOGICLAYER) {
				this.rubroempleaLogic.getNewConnexionToDeep("");
			}

			Boolean idTienePermisoempresa=true;

			idTienePermisoempresa=this.tienePermisosUsuarioEnPaginaWebRubroEmplea(EmpresaConstantesFunciones.CLASSNAME);

			if(idTienePermisoempresa) {
				//TOCA TRAER NUEVAMENTE, YA QUE SE PIERDE REGISTRO ACTUAL
				int intSelectedRow = this.jTableDatosRubroEmplea.getSelectedRow();

				if(intSelectedRow<0 && this.jTableDatosRubroEmplea.getRowCount()>0) {
					intSelectedRow =0;
					this.jTableDatosRubroEmplea.setRowSelectionInterval(intSelectedRow,intSelectedRow);
				}
				//ARCHITECTURE
				/*
				if(Constantes.ISUSAEJBLOGICLAYER) {
					this.rubroemplea =(RubroEmplea) this.rubroempleaLogic.getRubroEmpleas().toArray()[this.jTableDatosRubroEmplea.convertRowIndexToModel(intSelectedRow)];
				} else if(Constantes.ISUSAEJBREMOTE || Constantes.ISUSAEJBHOME) {
					this.rubroemplea =(RubroEmplea) this.rubroempleas.toArray()[this.jTableDatosRubroEmplea.convertRowIndexToModel(intSelectedRow)];
				}
				*/
				//ARCHITECTURE

				this.setVariablesFormularioToObjetoActualRubroEmplea(this.getrubroemplea(),true);
				this.setVariablesFormularioToObjetoActualForeignKeysRubroEmplea(this.rubroemplea);

				this.empresaBeanSwingJInternalFrame=new EmpresaBeanSwingJInternalFrame(true,true,this.jDesktopPane,this.usuarioActual,this.resumenUsuarioActual,this.moduloActual,this.opcionActual,this.parametroGeneralSg,this.parametroGeneralUsuario,PaginaTipo.AUXILIAR,false,false,false,true);
				this.empresaBeanSwingJInternalFrame.setJInternalFrameParent(this);

				this.empresaBeanSwingJInternalFrame.getEmpresaLogic().setConnexion(this.rubroempleaLogic.getConnexion());

				if(this.rubroemplea.getid_empresa()!=null) {
					this.empresaBeanSwingJInternalFrame.sTipoBusqueda="PorId";
					this.empresaBeanSwingJInternalFrame.setIdActual(this.rubroemplea.getid_empresa());
					this.empresaBeanSwingJInternalFrame.procesarBusqueda("PorId");
					this.empresaBeanSwingJInternalFrame.setsAccionBusqueda("PorId");
					this.empresaBeanSwingJInternalFrame.inicializarActualizarBindingTablaEmpresa();
				}

				JInternalFrameBase jinternalFrame =this.empresaBeanSwingJInternalFrame;
				jinternalFrame.setAutoscrolls(true);
				//frame.setSize(screenSize.width-inset*7 , screenSize.height-inset*9);
				jinternalFrame.setVisible(true); 


				TitledBorder titledBorderRubroEmplea=(TitledBorder)this.jScrollPanelDatosRubroEmplea.getBorder();
				TitledBorder titledBorderempresa=(TitledBorder)this.empresaBeanSwingJInternalFrame.jScrollPanelDatosEmpresa.getBorder();

				titledBorderempresa.setTitle(titledBorderRubroEmplea.getTitle() + " -> Empresa");


				if(!Constantes.CON_VARIAS_VENTANAS) {
					MainJFrame.cerrarJInternalFramesExistentes(this.jDesktopPane,jinternalFrame);
				}

				this.jDesktopPane.add(jinternalFrame);

				jinternalFrame.setSelected(true);
			} else {
				throw new Exception("NO TIENE PERMISO PARA TRABAJAR CON ESTA INFORMACION");
			}

			if(Constantes.ISUSAEJBLOGICLAYER) {
				this.rubroempleaLogic.commitNewConnexionToDeep();
			}


		} catch(Exception e) {

			if(Constantes.ISUSAEJBLOGICLAYER) {
				this.rubroempleaLogic.rollbackNewConnexionToDeep();
			}

			FuncionesSwing.manageException(this, e,logger,RubroEmpleaConstantesFunciones.CLASSNAME);

		} finally {
			if(Constantes.ISUSAEJBLOGICLAYER) {
				this.rubroempleaLogic.closeNewConnexionToDeep();
			}

		}
	}

	public void jButtonid_empresaRubroEmpleaBusquedaActionPerformed(java.awt.event.ActionEvent evt) throws Exception {
		try {

				if(Constantes.ISUSAEJBLOGICLAYER) {
					this.rubroempleaLogic.getNewConnexionToDeep("");
				}

				//TOCA TRAER NUEVAMENTE, YA QUE SE PIERDE REGISTRO ACTUAL
				int intSelectedRow = this.jTableDatosRubroEmplea.getSelectedRow();

				if(intSelectedRow>-1) {
					this.setVariablesFormularioToObjetoActualRubroEmplea(this.getrubroemplea(),true);
					this.setVariablesFormularioToObjetoActualForeignKeysRubroEmplea(this.rubroemplea);
					//ARCHITECTURE
					/*
					if(Constantes.ISUSAEJBLOGICLAYER) {
						this.rubroemplea =(RubroEmplea) this.rubroempleaLogic.getRubroEmpleas().toArray()[this.jTableDatosRubroEmplea.convertRowIndexToModel(intSelectedRow)];
					} else if(Constantes.ISUSAEJBREMOTE || Constantes.ISUSAEJBHOME) {
						this.rubroemplea =(RubroEmplea) this.rubroempleas.toArray()[this.jTableDatosRubroEmplea.convertRowIndexToModel(intSelectedRow)];
					}
					*/
					//ARCHITECTURE

				} else {
					if(this.rubroemplea==null) {
						this.rubroemplea = new RubroEmplea();
					}

					this.setVariablesFormularioToObjetoActualRubroEmplea(this.rubroemplea,true);
					this.setVariablesFormularioToObjetoActualForeignKeysRubroEmplea(this.rubroemplea);
				}

				if(this.rubroemplea.getid_empresa()!=null) {

					this.sAccionBusqueda="Query";

					this.sFinalQueryGeneral=" where id_empresa = "+this.rubroemplea.getid_empresa().toString()+" ";

					if(Constantes.ISDEVELOPING) {
						System.out.println(this.sFinalQueryGeneral);
					}

					this.procesarBusqueda(this.sAccionBusqueda);

					this.inicializarActualizarBindingRubroEmplea(false);
				}

				if(Constantes.ISUSAEJBLOGICLAYER) {
					this.rubroempleaLogic.commitNewConnexionToDeep();
				}

			} catch(Exception e) {

				if(Constantes.ISUSAEJBLOGICLAYER) {
					this.rubroempleaLogic.rollbackNewConnexionToDeep();
				}

				FuncionesSwing.manageException(this, e,logger,RubroEmpleaConstantesFunciones.CLASSNAME);

			} finally {
				if(Constantes.ISUSAEJBLOGICLAYER) {
					this.rubroempleaLogic.closeNewConnexionToDeep();
				}

			}
		}

	public void jButtonid_tipo_calculoRubroEmpleaUpdateActionPerformed(java.awt.event.ActionEvent evt) throws Exception {
		try {

			if(Constantes.ISUSAEJBLOGICLAYER) {
				this.rubroempleaLogic.getNewConnexionToDeep("");
			}

			Boolean idTienePermisotipocalculo=true;

			idTienePermisotipocalculo=this.tienePermisosUsuarioEnPaginaWebRubroEmplea(TipoCalculoConstantesFunciones.CLASSNAME);

			if(idTienePermisotipocalculo) {
				//TOCA TRAER NUEVAMENTE, YA QUE SE PIERDE REGISTRO ACTUAL
				int intSelectedRow = this.jTableDatosRubroEmplea.getSelectedRow();

				if(intSelectedRow<0 && this.jTableDatosRubroEmplea.getRowCount()>0) {
					intSelectedRow =0;
					this.jTableDatosRubroEmplea.setRowSelectionInterval(intSelectedRow,intSelectedRow);
				}
				//ARCHITECTURE
				/*
				if(Constantes.ISUSAEJBLOGICLAYER) {
					this.rubroemplea =(RubroEmplea) this.rubroempleaLogic.getRubroEmpleas().toArray()[this.jTableDatosRubroEmplea.convertRowIndexToModel(intSelectedRow)];
				} else if(Constantes.ISUSAEJBREMOTE || Constantes.ISUSAEJBHOME) {
					this.rubroemplea =(RubroEmplea) this.rubroempleas.toArray()[this.jTableDatosRubroEmplea.convertRowIndexToModel(intSelectedRow)];
				}
				*/
				//ARCHITECTURE

				this.setVariablesFormularioToObjetoActualRubroEmplea(this.getrubroemplea(),true);
				this.setVariablesFormularioToObjetoActualForeignKeysRubroEmplea(this.rubroemplea);

				this.tipocalculoBeanSwingJInternalFrame=new TipoCalculoBeanSwingJInternalFrame(true,true,this.jDesktopPane,this.usuarioActual,this.resumenUsuarioActual,this.moduloActual,this.opcionActual,this.parametroGeneralSg,this.parametroGeneralUsuario,PaginaTipo.AUXILIAR,false,false,false,true);
				this.tipocalculoBeanSwingJInternalFrame.setJInternalFrameParent(this);

				this.tipocalculoBeanSwingJInternalFrame.getTipoCalculoLogic().setConnexion(this.rubroempleaLogic.getConnexion());

				if(this.rubroemplea.getid_tipo_calculo()!=null) {
					this.tipocalculoBeanSwingJInternalFrame.sTipoBusqueda="PorId";
					this.tipocalculoBeanSwingJInternalFrame.setIdActual(this.rubroemplea.getid_tipo_calculo());
					this.tipocalculoBeanSwingJInternalFrame.procesarBusqueda("PorId");
					this.tipocalculoBeanSwingJInternalFrame.setsAccionBusqueda("PorId");
					this.tipocalculoBeanSwingJInternalFrame.inicializarActualizarBindingTablaTipoCalculo();
				}

				JInternalFrameBase jinternalFrame =this.tipocalculoBeanSwingJInternalFrame;
				jinternalFrame.setAutoscrolls(true);
				//frame.setSize(screenSize.width-inset*7 , screenSize.height-inset*9);
				jinternalFrame.setVisible(true); 


				TitledBorder titledBorderRubroEmplea=(TitledBorder)this.jScrollPanelDatosRubroEmplea.getBorder();
				TitledBorder titledBordertipocalculo=(TitledBorder)this.tipocalculoBeanSwingJInternalFrame.jScrollPanelDatosTipoCalculo.getBorder();

				titledBordertipocalculo.setTitle(titledBorderRubroEmplea.getTitle() + " -> Tipo Calculo");


				if(!Constantes.CON_VARIAS_VENTANAS) {
					MainJFrame.cerrarJInternalFramesExistentes(this.jDesktopPane,jinternalFrame);
				}

				this.jDesktopPane.add(jinternalFrame);

				jinternalFrame.setSelected(true);
			} else {
				throw new Exception("NO TIENE PERMISO PARA TRABAJAR CON ESTA INFORMACION");
			}

			if(Constantes.ISUSAEJBLOGICLAYER) {
				this.rubroempleaLogic.commitNewConnexionToDeep();
			}


		} catch(Exception e) {

			if(Constantes.ISUSAEJBLOGICLAYER) {
				this.rubroempleaLogic.rollbackNewConnexionToDeep();
			}

			FuncionesSwing.manageException(this, e,logger,RubroEmpleaConstantesFunciones.CLASSNAME);

		} finally {
			if(Constantes.ISUSAEJBLOGICLAYER) {
				this.rubroempleaLogic.closeNewConnexionToDeep();
			}

		}
	}

	public void jButtonid_tipo_calculoRubroEmpleaBusquedaActionPerformed(java.awt.event.ActionEvent evt) throws Exception {
		try {

				if(Constantes.ISUSAEJBLOGICLAYER) {
					this.rubroempleaLogic.getNewConnexionToDeep("");
				}

				//TOCA TRAER NUEVAMENTE, YA QUE SE PIERDE REGISTRO ACTUAL
				int intSelectedRow = this.jTableDatosRubroEmplea.getSelectedRow();

				if(intSelectedRow>-1) {
					this.setVariablesFormularioToObjetoActualRubroEmplea(this.getrubroemplea(),true);
					this.setVariablesFormularioToObjetoActualForeignKeysRubroEmplea(this.rubroemplea);
					//ARCHITECTURE
					/*
					if(Constantes.ISUSAEJBLOGICLAYER) {
						this.rubroemplea =(RubroEmplea) this.rubroempleaLogic.getRubroEmpleas().toArray()[this.jTableDatosRubroEmplea.convertRowIndexToModel(intSelectedRow)];
					} else if(Constantes.ISUSAEJBREMOTE || Constantes.ISUSAEJBHOME) {
						this.rubroemplea =(RubroEmplea) this.rubroempleas.toArray()[this.jTableDatosRubroEmplea.convertRowIndexToModel(intSelectedRow)];
					}
					*/
					//ARCHITECTURE

				} else {
					if(this.rubroemplea==null) {
						this.rubroemplea = new RubroEmplea();
					}

					this.setVariablesFormularioToObjetoActualRubroEmplea(this.rubroemplea,true);
					this.setVariablesFormularioToObjetoActualForeignKeysRubroEmplea(this.rubroemplea);
				}

				if(this.rubroemplea.getid_tipo_calculo()!=null) {

					this.sAccionBusqueda="Query";

					this.sFinalQueryGeneral=" where id_tipo_calculo = "+this.rubroemplea.getid_tipo_calculo().toString()+" ";

					if(Constantes.ISDEVELOPING) {
						System.out.println(this.sFinalQueryGeneral);
					}

					this.procesarBusqueda(this.sAccionBusqueda);

					this.inicializarActualizarBindingRubroEmplea(false);
				}

				if(Constantes.ISUSAEJBLOGICLAYER) {
					this.rubroempleaLogic.commitNewConnexionToDeep();
				}

			} catch(Exception e) {

				if(Constantes.ISUSAEJBLOGICLAYER) {
					this.rubroempleaLogic.rollbackNewConnexionToDeep();
				}

				FuncionesSwing.manageException(this, e,logger,RubroEmpleaConstantesFunciones.CLASSNAME);

			} finally {
				if(Constantes.ISUSAEJBLOGICLAYER) {
					this.rubroempleaLogic.closeNewConnexionToDeep();
				}

			}
		}

	public void jButtonid_tipo_rubro_empleaRubroEmpleaUpdateActionPerformed(java.awt.event.ActionEvent evt) throws Exception {
		try {

			if(Constantes.ISUSAEJBLOGICLAYER) {
				this.rubroempleaLogic.getNewConnexionToDeep("");
			}

			Boolean idTienePermisotiporubroemplea=true;

			idTienePermisotiporubroemplea=this.tienePermisosUsuarioEnPaginaWebRubroEmplea(TipoRubroEmpleaConstantesFunciones.CLASSNAME);

			if(idTienePermisotiporubroemplea) {
				//TOCA TRAER NUEVAMENTE, YA QUE SE PIERDE REGISTRO ACTUAL
				int intSelectedRow = this.jTableDatosRubroEmplea.getSelectedRow();

				if(intSelectedRow<0 && this.jTableDatosRubroEmplea.getRowCount()>0) {
					intSelectedRow =0;
					this.jTableDatosRubroEmplea.setRowSelectionInterval(intSelectedRow,intSelectedRow);
				}
				//ARCHITECTURE
				/*
				if(Constantes.ISUSAEJBLOGICLAYER) {
					this.rubroemplea =(RubroEmplea) this.rubroempleaLogic.getRubroEmpleas().toArray()[this.jTableDatosRubroEmplea.convertRowIndexToModel(intSelectedRow)];
				} else if(Constantes.ISUSAEJBREMOTE || Constantes.ISUSAEJBHOME) {
					this.rubroemplea =(RubroEmplea) this.rubroempleas.toArray()[this.jTableDatosRubroEmplea.convertRowIndexToModel(intSelectedRow)];
				}
				*/
				//ARCHITECTURE

				this.setVariablesFormularioToObjetoActualRubroEmplea(this.getrubroemplea(),true);
				this.setVariablesFormularioToObjetoActualForeignKeysRubroEmplea(this.rubroemplea);

				this.tiporubroempleaBeanSwingJInternalFrame=new TipoRubroEmpleaBeanSwingJInternalFrame(true,true,this.jDesktopPane,this.usuarioActual,this.resumenUsuarioActual,this.moduloActual,this.opcionActual,this.parametroGeneralSg,this.parametroGeneralUsuario,PaginaTipo.AUXILIAR,false,false,false,true);
				this.tiporubroempleaBeanSwingJInternalFrame.setJInternalFrameParent(this);

				this.tiporubroempleaBeanSwingJInternalFrame.getTipoRubroEmpleaLogic().setConnexion(this.rubroempleaLogic.getConnexion());

				if(this.rubroemplea.getid_tipo_rubro_emplea()!=null) {
					this.tiporubroempleaBeanSwingJInternalFrame.sTipoBusqueda="PorId";
					this.tiporubroempleaBeanSwingJInternalFrame.setIdActual(this.rubroemplea.getid_tipo_rubro_emplea());
					this.tiporubroempleaBeanSwingJInternalFrame.procesarBusqueda("PorId");
					this.tiporubroempleaBeanSwingJInternalFrame.setsAccionBusqueda("PorId");
					this.tiporubroempleaBeanSwingJInternalFrame.inicializarActualizarBindingTablaTipoRubroEmplea();
				}

				JInternalFrameBase jinternalFrame =this.tiporubroempleaBeanSwingJInternalFrame;
				jinternalFrame.setAutoscrolls(true);
				//frame.setSize(screenSize.width-inset*7 , screenSize.height-inset*9);
				jinternalFrame.setVisible(true); 


				TitledBorder titledBorderRubroEmplea=(TitledBorder)this.jScrollPanelDatosRubroEmplea.getBorder();
				TitledBorder titledBordertiporubroemplea=(TitledBorder)this.tiporubroempleaBeanSwingJInternalFrame.jScrollPanelDatosTipoRubroEmplea.getBorder();

				titledBordertiporubroemplea.setTitle(titledBorderRubroEmplea.getTitle() + " -> Tipo Rubro");


				if(!Constantes.CON_VARIAS_VENTANAS) {
					MainJFrame.cerrarJInternalFramesExistentes(this.jDesktopPane,jinternalFrame);
				}

				this.jDesktopPane.add(jinternalFrame);

				jinternalFrame.setSelected(true);
			} else {
				throw new Exception("NO TIENE PERMISO PARA TRABAJAR CON ESTA INFORMACION");
			}

			if(Constantes.ISUSAEJBLOGICLAYER) {
				this.rubroempleaLogic.commitNewConnexionToDeep();
			}


		} catch(Exception e) {

			if(Constantes.ISUSAEJBLOGICLAYER) {
				this.rubroempleaLogic.rollbackNewConnexionToDeep();
			}

			FuncionesSwing.manageException(this, e,logger,RubroEmpleaConstantesFunciones.CLASSNAME);

		} finally {
			if(Constantes.ISUSAEJBLOGICLAYER) {
				this.rubroempleaLogic.closeNewConnexionToDeep();
			}

		}
	}

	public void jButtonid_tipo_rubro_empleaRubroEmpleaBusquedaActionPerformed(java.awt.event.ActionEvent evt) throws Exception {
		try {

				if(Constantes.ISUSAEJBLOGICLAYER) {
					this.rubroempleaLogic.getNewConnexionToDeep("");
				}

				//TOCA TRAER NUEVAMENTE, YA QUE SE PIERDE REGISTRO ACTUAL
				int intSelectedRow = this.jTableDatosRubroEmplea.getSelectedRow();

				if(intSelectedRow>-1) {
					this.setVariablesFormularioToObjetoActualRubroEmplea(this.getrubroemplea(),true);
					this.setVariablesFormularioToObjetoActualForeignKeysRubroEmplea(this.rubroemplea);
					//ARCHITECTURE
					/*
					if(Constantes.ISUSAEJBLOGICLAYER) {
						this.rubroemplea =(RubroEmplea) this.rubroempleaLogic.getRubroEmpleas().toArray()[this.jTableDatosRubroEmplea.convertRowIndexToModel(intSelectedRow)];
					} else if(Constantes.ISUSAEJBREMOTE || Constantes.ISUSAEJBHOME) {
						this.rubroemplea =(RubroEmplea) this.rubroempleas.toArray()[this.jTableDatosRubroEmplea.convertRowIndexToModel(intSelectedRow)];
					}
					*/
					//ARCHITECTURE

				} else {
					if(this.rubroemplea==null) {
						this.rubroemplea = new RubroEmplea();
					}

					this.setVariablesFormularioToObjetoActualRubroEmplea(this.rubroemplea,true);
					this.setVariablesFormularioToObjetoActualForeignKeysRubroEmplea(this.rubroemplea);
				}

				if(this.rubroemplea.getid_tipo_rubro_emplea()!=null) {

					this.sAccionBusqueda="Query";

					this.sFinalQueryGeneral=" where id_tipo_rubro_emplea = "+this.rubroemplea.getid_tipo_rubro_emplea().toString()+" ";

					if(Constantes.ISDEVELOPING) {
						System.out.println(this.sFinalQueryGeneral);
					}

					this.procesarBusqueda(this.sAccionBusqueda);

					this.inicializarActualizarBindingRubroEmplea(false);
				}

				if(Constantes.ISUSAEJBLOGICLAYER) {
					this.rubroempleaLogic.commitNewConnexionToDeep();
				}

			} catch(Exception e) {

				if(Constantes.ISUSAEJBLOGICLAYER) {
					this.rubroempleaLogic.rollbackNewConnexionToDeep();
				}

				FuncionesSwing.manageException(this, e,logger,RubroEmpleaConstantesFunciones.CLASSNAME);

			} finally {
				if(Constantes.ISUSAEJBLOGICLAYER) {
					this.rubroempleaLogic.closeNewConnexionToDeep();
				}

			}
		}

	public void jButtonid_tipo_grupo_rubro_empleaRubroEmpleaUpdateActionPerformed(java.awt.event.ActionEvent evt) throws Exception {
		try {

			if(Constantes.ISUSAEJBLOGICLAYER) {
				this.rubroempleaLogic.getNewConnexionToDeep("");
			}

			Boolean idTienePermisotipogruporubroemplea=true;

			idTienePermisotipogruporubroemplea=this.tienePermisosUsuarioEnPaginaWebRubroEmplea(TipoGrupoRubroEmpleaConstantesFunciones.CLASSNAME);

			if(idTienePermisotipogruporubroemplea) {
				//TOCA TRAER NUEVAMENTE, YA QUE SE PIERDE REGISTRO ACTUAL
				int intSelectedRow = this.jTableDatosRubroEmplea.getSelectedRow();

				if(intSelectedRow<0 && this.jTableDatosRubroEmplea.getRowCount()>0) {
					intSelectedRow =0;
					this.jTableDatosRubroEmplea.setRowSelectionInterval(intSelectedRow,intSelectedRow);
				}
				//ARCHITECTURE
				/*
				if(Constantes.ISUSAEJBLOGICLAYER) {
					this.rubroemplea =(RubroEmplea) this.rubroempleaLogic.getRubroEmpleas().toArray()[this.jTableDatosRubroEmplea.convertRowIndexToModel(intSelectedRow)];
				} else if(Constantes.ISUSAEJBREMOTE || Constantes.ISUSAEJBHOME) {
					this.rubroemplea =(RubroEmplea) this.rubroempleas.toArray()[this.jTableDatosRubroEmplea.convertRowIndexToModel(intSelectedRow)];
				}
				*/
				//ARCHITECTURE

				this.setVariablesFormularioToObjetoActualRubroEmplea(this.getrubroemplea(),true);
				this.setVariablesFormularioToObjetoActualForeignKeysRubroEmplea(this.rubroemplea);

				this.tipogruporubroempleaBeanSwingJInternalFrame=new TipoGrupoRubroEmpleaBeanSwingJInternalFrame(true,true,this.jDesktopPane,this.usuarioActual,this.resumenUsuarioActual,this.moduloActual,this.opcionActual,this.parametroGeneralSg,this.parametroGeneralUsuario,PaginaTipo.AUXILIAR,false,false,false,true);
				this.tipogruporubroempleaBeanSwingJInternalFrame.setJInternalFrameParent(this);

				this.tipogruporubroempleaBeanSwingJInternalFrame.getTipoGrupoRubroEmpleaLogic().setConnexion(this.rubroempleaLogic.getConnexion());

				if(this.rubroemplea.getid_tipo_grupo_rubro_emplea()!=null) {
					this.tipogruporubroempleaBeanSwingJInternalFrame.sTipoBusqueda="PorId";
					this.tipogruporubroempleaBeanSwingJInternalFrame.setIdActual(this.rubroemplea.getid_tipo_grupo_rubro_emplea());
					this.tipogruporubroempleaBeanSwingJInternalFrame.procesarBusqueda("PorId");
					this.tipogruporubroempleaBeanSwingJInternalFrame.setsAccionBusqueda("PorId");
					this.tipogruporubroempleaBeanSwingJInternalFrame.inicializarActualizarBindingTablaTipoGrupoRubroEmplea();
				}

				JInternalFrameBase jinternalFrame =this.tipogruporubroempleaBeanSwingJInternalFrame;
				jinternalFrame.setAutoscrolls(true);
				//frame.setSize(screenSize.width-inset*7 , screenSize.height-inset*9);
				jinternalFrame.setVisible(true); 


				TitledBorder titledBorderRubroEmplea=(TitledBorder)this.jScrollPanelDatosRubroEmplea.getBorder();
				TitledBorder titledBordertipogruporubroemplea=(TitledBorder)this.tipogruporubroempleaBeanSwingJInternalFrame.jScrollPanelDatosTipoGrupoRubroEmplea.getBorder();

				titledBordertipogruporubroemplea.setTitle(titledBorderRubroEmplea.getTitle() + " -> Tipo Grupo Rubro Empleado");


				if(!Constantes.CON_VARIAS_VENTANAS) {
					MainJFrame.cerrarJInternalFramesExistentes(this.jDesktopPane,jinternalFrame);
				}

				this.jDesktopPane.add(jinternalFrame);

				jinternalFrame.setSelected(true);
			} else {
				throw new Exception("NO TIENE PERMISO PARA TRABAJAR CON ESTA INFORMACION");
			}

			if(Constantes.ISUSAEJBLOGICLAYER) {
				this.rubroempleaLogic.commitNewConnexionToDeep();
			}


		} catch(Exception e) {

			if(Constantes.ISUSAEJBLOGICLAYER) {
				this.rubroempleaLogic.rollbackNewConnexionToDeep();
			}

			FuncionesSwing.manageException(this, e,logger,RubroEmpleaConstantesFunciones.CLASSNAME);

		} finally {
			if(Constantes.ISUSAEJBLOGICLAYER) {
				this.rubroempleaLogic.closeNewConnexionToDeep();
			}

		}
	}

	public void jButtonid_tipo_grupo_rubro_empleaRubroEmpleaBusquedaActionPerformed(java.awt.event.ActionEvent evt) throws Exception {
		try {

				if(Constantes.ISUSAEJBLOGICLAYER) {
					this.rubroempleaLogic.getNewConnexionToDeep("");
				}

				//TOCA TRAER NUEVAMENTE, YA QUE SE PIERDE REGISTRO ACTUAL
				int intSelectedRow = this.jTableDatosRubroEmplea.getSelectedRow();

				if(intSelectedRow>-1) {
					this.setVariablesFormularioToObjetoActualRubroEmplea(this.getrubroemplea(),true);
					this.setVariablesFormularioToObjetoActualForeignKeysRubroEmplea(this.rubroemplea);
					//ARCHITECTURE
					/*
					if(Constantes.ISUSAEJBLOGICLAYER) {
						this.rubroemplea =(RubroEmplea) this.rubroempleaLogic.getRubroEmpleas().toArray()[this.jTableDatosRubroEmplea.convertRowIndexToModel(intSelectedRow)];
					} else if(Constantes.ISUSAEJBREMOTE || Constantes.ISUSAEJBHOME) {
						this.rubroemplea =(RubroEmplea) this.rubroempleas.toArray()[this.jTableDatosRubroEmplea.convertRowIndexToModel(intSelectedRow)];
					}
					*/
					//ARCHITECTURE

				} else {
					if(this.rubroemplea==null) {
						this.rubroemplea = new RubroEmplea();
					}

					this.setVariablesFormularioToObjetoActualRubroEmplea(this.rubroemplea,true);
					this.setVariablesFormularioToObjetoActualForeignKeysRubroEmplea(this.rubroemplea);
				}

				if(this.rubroemplea.getid_tipo_grupo_rubro_emplea()!=null) {

					this.sAccionBusqueda="Query";

					this.sFinalQueryGeneral=" where id_tipo_grupo_rubro_emplea = "+this.rubroemplea.getid_tipo_grupo_rubro_emplea().toString()+" ";

					if(Constantes.ISDEVELOPING) {
						System.out.println(this.sFinalQueryGeneral);
					}

					this.procesarBusqueda(this.sAccionBusqueda);

					this.inicializarActualizarBindingRubroEmplea(false);
				}

				if(Constantes.ISUSAEJBLOGICLAYER) {
					this.rubroempleaLogic.commitNewConnexionToDeep();
				}

			} catch(Exception e) {

				if(Constantes.ISUSAEJBLOGICLAYER) {
					this.rubroempleaLogic.rollbackNewConnexionToDeep();
				}

				FuncionesSwing.manageException(this, e,logger,RubroEmpleaConstantesFunciones.CLASSNAME);

			} finally {
				if(Constantes.ISUSAEJBLOGICLAYER) {
					this.rubroempleaLogic.closeNewConnexionToDeep();
				}

			}
		}

	public void jButtoncodigoRubroEmpleaBusquedaActionPerformed(java.awt.event.ActionEvent evt) throws Exception {
		try {

				if(Constantes.ISUSAEJBLOGICLAYER) {
					this.rubroempleaLogic.getNewConnexionToDeep("");
				}

				//TOCA TRAER NUEVAMENTE, YA QUE SE PIERDE REGISTRO ACTUAL
				int intSelectedRow = this.jTableDatosRubroEmplea.getSelectedRow();

				if(intSelectedRow>-1) {
					this.setVariablesFormularioToObjetoActualRubroEmplea(this.getrubroemplea(),true);
					this.setVariablesFormularioToObjetoActualForeignKeysRubroEmplea(this.rubroemplea);
					//ARCHITECTURE
					/*
					if(Constantes.ISUSAEJBLOGICLAYER) {
						this.rubroemplea =(RubroEmplea) this.rubroempleaLogic.getRubroEmpleas().toArray()[this.jTableDatosRubroEmplea.convertRowIndexToModel(intSelectedRow)];
					} else if(Constantes.ISUSAEJBREMOTE || Constantes.ISUSAEJBHOME) {
						this.rubroemplea =(RubroEmplea) this.rubroempleas.toArray()[this.jTableDatosRubroEmplea.convertRowIndexToModel(intSelectedRow)];
					}
					*/
					//ARCHITECTURE

				} else {
					if(this.rubroemplea==null) {
						this.rubroemplea = new RubroEmplea();
					}

					this.setVariablesFormularioToObjetoActualRubroEmplea(this.rubroemplea,true);
					this.setVariablesFormularioToObjetoActualForeignKeysRubroEmplea(this.rubroemplea);
				}

				if(this.rubroemplea.getcodigo()!=null) {

					this.sAccionBusqueda="Query";

					this.sFinalQueryGeneral=" where codigo like '%"+this.rubroemplea.getcodigo()+"%' ";

					if(Constantes.ISDEVELOPING) {
						System.out.println(this.sFinalQueryGeneral);
					}

					this.procesarBusqueda(this.sAccionBusqueda);

					this.inicializarActualizarBindingRubroEmplea(false);
				}

				if(Constantes.ISUSAEJBLOGICLAYER) {
					this.rubroempleaLogic.commitNewConnexionToDeep();
				}

			} catch(Exception e) {

				if(Constantes.ISUSAEJBLOGICLAYER) {
					this.rubroempleaLogic.rollbackNewConnexionToDeep();
				}

				FuncionesSwing.manageException(this, e,logger,RubroEmpleaConstantesFunciones.CLASSNAME);

			} finally {
				if(Constantes.ISUSAEJBLOGICLAYER) {
					this.rubroempleaLogic.closeNewConnexionToDeep();
				}

			}
		}

	public void jButtonnombreRubroEmpleaBusquedaActionPerformed(java.awt.event.ActionEvent evt) throws Exception {
		try {

				if(Constantes.ISUSAEJBLOGICLAYER) {
					this.rubroempleaLogic.getNewConnexionToDeep("");
				}

				//TOCA TRAER NUEVAMENTE, YA QUE SE PIERDE REGISTRO ACTUAL
				int intSelectedRow = this.jTableDatosRubroEmplea.getSelectedRow();

				if(intSelectedRow>-1) {
					this.setVariablesFormularioToObjetoActualRubroEmplea(this.getrubroemplea(),true);
					this.setVariablesFormularioToObjetoActualForeignKeysRubroEmplea(this.rubroemplea);
					//ARCHITECTURE
					/*
					if(Constantes.ISUSAEJBLOGICLAYER) {
						this.rubroemplea =(RubroEmplea) this.rubroempleaLogic.getRubroEmpleas().toArray()[this.jTableDatosRubroEmplea.convertRowIndexToModel(intSelectedRow)];
					} else if(Constantes.ISUSAEJBREMOTE || Constantes.ISUSAEJBHOME) {
						this.rubroemplea =(RubroEmplea) this.rubroempleas.toArray()[this.jTableDatosRubroEmplea.convertRowIndexToModel(intSelectedRow)];
					}
					*/
					//ARCHITECTURE

				} else {
					if(this.rubroemplea==null) {
						this.rubroemplea = new RubroEmplea();
					}

					this.setVariablesFormularioToObjetoActualRubroEmplea(this.rubroemplea,true);
					this.setVariablesFormularioToObjetoActualForeignKeysRubroEmplea(this.rubroemplea);
				}

				if(this.rubroemplea.getnombre()!=null) {

					this.sAccionBusqueda="Query";

					this.sFinalQueryGeneral=" where nombre like '%"+this.rubroemplea.getnombre()+"%' ";

					if(Constantes.ISDEVELOPING) {
						System.out.println(this.sFinalQueryGeneral);
					}

					this.procesarBusqueda(this.sAccionBusqueda);

					this.inicializarActualizarBindingRubroEmplea(false);
				}

				if(Constantes.ISUSAEJBLOGICLAYER) {
					this.rubroempleaLogic.commitNewConnexionToDeep();
				}

			} catch(Exception e) {

				if(Constantes.ISUSAEJBLOGICLAYER) {
					this.rubroempleaLogic.rollbackNewConnexionToDeep();
				}

				FuncionesSwing.manageException(this, e,logger,RubroEmpleaConstantesFunciones.CLASSNAME);

			} finally {
				if(Constantes.ISUSAEJBLOGICLAYER) {
					this.rubroempleaLogic.closeNewConnexionToDeep();
				}

			}
		}

	public void jButtonformulaRubroEmpleaBusquedaActionPerformed(java.awt.event.ActionEvent evt) throws Exception {
		try {

				if(Constantes.ISUSAEJBLOGICLAYER) {
					this.rubroempleaLogic.getNewConnexionToDeep("");
				}

				//TOCA TRAER NUEVAMENTE, YA QUE SE PIERDE REGISTRO ACTUAL
				int intSelectedRow = this.jTableDatosRubroEmplea.getSelectedRow();

				if(intSelectedRow>-1) {
					this.setVariablesFormularioToObjetoActualRubroEmplea(this.getrubroemplea(),true);
					this.setVariablesFormularioToObjetoActualForeignKeysRubroEmplea(this.rubroemplea);
					//ARCHITECTURE
					/*
					if(Constantes.ISUSAEJBLOGICLAYER) {
						this.rubroemplea =(RubroEmplea) this.rubroempleaLogic.getRubroEmpleas().toArray()[this.jTableDatosRubroEmplea.convertRowIndexToModel(intSelectedRow)];
					} else if(Constantes.ISUSAEJBREMOTE || Constantes.ISUSAEJBHOME) {
						this.rubroemplea =(RubroEmplea) this.rubroempleas.toArray()[this.jTableDatosRubroEmplea.convertRowIndexToModel(intSelectedRow)];
					}
					*/
					//ARCHITECTURE

				} else {
					if(this.rubroemplea==null) {
						this.rubroemplea = new RubroEmplea();
					}

					this.setVariablesFormularioToObjetoActualRubroEmplea(this.rubroemplea,true);
					this.setVariablesFormularioToObjetoActualForeignKeysRubroEmplea(this.rubroemplea);
				}

				if(this.rubroemplea.getformula()!=null) {

					this.sAccionBusqueda="Query";

					this.sFinalQueryGeneral=" where formula like '%"+this.rubroemplea.getformula()+"%' ";

					if(Constantes.ISDEVELOPING) {
						System.out.println(this.sFinalQueryGeneral);
					}

					this.procesarBusqueda(this.sAccionBusqueda);

					this.inicializarActualizarBindingRubroEmplea(false);
				}

				if(Constantes.ISUSAEJBLOGICLAYER) {
					this.rubroempleaLogic.commitNewConnexionToDeep();
				}

			} catch(Exception e) {

				if(Constantes.ISUSAEJBLOGICLAYER) {
					this.rubroempleaLogic.rollbackNewConnexionToDeep();
				}

				FuncionesSwing.manageException(this, e,logger,RubroEmpleaConstantesFunciones.CLASSNAME);

			} finally {
				if(Constantes.ISUSAEJBLOGICLAYER) {
					this.rubroempleaLogic.closeNewConnexionToDeep();
				}

			}
		}

	public void jButtonaliasRubroEmpleaBusquedaActionPerformed(java.awt.event.ActionEvent evt) throws Exception {
		try {

				if(Constantes.ISUSAEJBLOGICLAYER) {
					this.rubroempleaLogic.getNewConnexionToDeep("");
				}

				//TOCA TRAER NUEVAMENTE, YA QUE SE PIERDE REGISTRO ACTUAL
				int intSelectedRow = this.jTableDatosRubroEmplea.getSelectedRow();

				if(intSelectedRow>-1) {
					this.setVariablesFormularioToObjetoActualRubroEmplea(this.getrubroemplea(),true);
					this.setVariablesFormularioToObjetoActualForeignKeysRubroEmplea(this.rubroemplea);
					//ARCHITECTURE
					/*
					if(Constantes.ISUSAEJBLOGICLAYER) {
						this.rubroemplea =(RubroEmplea) this.rubroempleaLogic.getRubroEmpleas().toArray()[this.jTableDatosRubroEmplea.convertRowIndexToModel(intSelectedRow)];
					} else if(Constantes.ISUSAEJBREMOTE || Constantes.ISUSAEJBHOME) {
						this.rubroemplea =(RubroEmplea) this.rubroempleas.toArray()[this.jTableDatosRubroEmplea.convertRowIndexToModel(intSelectedRow)];
					}
					*/
					//ARCHITECTURE

				} else {
					if(this.rubroemplea==null) {
						this.rubroemplea = new RubroEmplea();
					}

					this.setVariablesFormularioToObjetoActualRubroEmplea(this.rubroemplea,true);
					this.setVariablesFormularioToObjetoActualForeignKeysRubroEmplea(this.rubroemplea);
				}

				if(this.rubroemplea.getalias()!=null) {

					this.sAccionBusqueda="Query";

					this.sFinalQueryGeneral=" where alias like '%"+this.rubroemplea.getalias()+"%' ";

					if(Constantes.ISDEVELOPING) {
						System.out.println(this.sFinalQueryGeneral);
					}

					this.procesarBusqueda(this.sAccionBusqueda);

					this.inicializarActualizarBindingRubroEmplea(false);
				}

				if(Constantes.ISUSAEJBLOGICLAYER) {
					this.rubroempleaLogic.commitNewConnexionToDeep();
				}

			} catch(Exception e) {

				if(Constantes.ISUSAEJBLOGICLAYER) {
					this.rubroempleaLogic.rollbackNewConnexionToDeep();
				}

				FuncionesSwing.manageException(this, e,logger,RubroEmpleaConstantesFunciones.CLASSNAME);

			} finally {
				if(Constantes.ISUSAEJBLOGICLAYER) {
					this.rubroempleaLogic.closeNewConnexionToDeep();
				}

			}
		}

	public void jButtonsecuencialRubroEmpleaBusquedaActionPerformed(java.awt.event.ActionEvent evt) throws Exception {
		try {

				if(Constantes.ISUSAEJBLOGICLAYER) {
					this.rubroempleaLogic.getNewConnexionToDeep("");
				}

				//TOCA TRAER NUEVAMENTE, YA QUE SE PIERDE REGISTRO ACTUAL
				int intSelectedRow = this.jTableDatosRubroEmplea.getSelectedRow();

				if(intSelectedRow>-1) {
					this.setVariablesFormularioToObjetoActualRubroEmplea(this.getrubroemplea(),true);
					this.setVariablesFormularioToObjetoActualForeignKeysRubroEmplea(this.rubroemplea);
					//ARCHITECTURE
					/*
					if(Constantes.ISUSAEJBLOGICLAYER) {
						this.rubroemplea =(RubroEmplea) this.rubroempleaLogic.getRubroEmpleas().toArray()[this.jTableDatosRubroEmplea.convertRowIndexToModel(intSelectedRow)];
					} else if(Constantes.ISUSAEJBREMOTE || Constantes.ISUSAEJBHOME) {
						this.rubroemplea =(RubroEmplea) this.rubroempleas.toArray()[this.jTableDatosRubroEmplea.convertRowIndexToModel(intSelectedRow)];
					}
					*/
					//ARCHITECTURE

				} else {
					if(this.rubroemplea==null) {
						this.rubroemplea = new RubroEmplea();
					}

					this.setVariablesFormularioToObjetoActualRubroEmplea(this.rubroemplea,true);
					this.setVariablesFormularioToObjetoActualForeignKeysRubroEmplea(this.rubroemplea);
				}

				if(this.rubroemplea.getsecuencial()!=null) {

					this.sAccionBusqueda="Query";

					this.sFinalQueryGeneral=" where secuencial = "+this.rubroemplea.getsecuencial().toString()+" ";

					if(Constantes.ISDEVELOPING) {
						System.out.println(this.sFinalQueryGeneral);
					}

					this.procesarBusqueda(this.sAccionBusqueda);

					this.inicializarActualizarBindingRubroEmplea(false);
				}

				if(Constantes.ISUSAEJBLOGICLAYER) {
					this.rubroempleaLogic.commitNewConnexionToDeep();
				}

			} catch(Exception e) {

				if(Constantes.ISUSAEJBLOGICLAYER) {
					this.rubroempleaLogic.rollbackNewConnexionToDeep();
				}

				FuncionesSwing.manageException(this, e,logger,RubroEmpleaConstantesFunciones.CLASSNAME);

			} finally {
				if(Constantes.ISUSAEJBLOGICLAYER) {
					this.rubroempleaLogic.closeNewConnexionToDeep();
				}

			}
		}

	public void jButtonpara_rol_pagosRubroEmpleaBusquedaActionPerformed(java.awt.event.ActionEvent evt) throws Exception {
		try {

				if(Constantes.ISUSAEJBLOGICLAYER) {
					this.rubroempleaLogic.getNewConnexionToDeep("");
				}

				//TOCA TRAER NUEVAMENTE, YA QUE SE PIERDE REGISTRO ACTUAL
				int intSelectedRow = this.jTableDatosRubroEmplea.getSelectedRow();

				if(intSelectedRow>-1) {
					this.setVariablesFormularioToObjetoActualRubroEmplea(this.getrubroemplea(),true);
					this.setVariablesFormularioToObjetoActualForeignKeysRubroEmplea(this.rubroemplea);
					//ARCHITECTURE
					/*
					if(Constantes.ISUSAEJBLOGICLAYER) {
						this.rubroemplea =(RubroEmplea) this.rubroempleaLogic.getRubroEmpleas().toArray()[this.jTableDatosRubroEmplea.convertRowIndexToModel(intSelectedRow)];
					} else if(Constantes.ISUSAEJBREMOTE || Constantes.ISUSAEJBHOME) {
						this.rubroemplea =(RubroEmplea) this.rubroempleas.toArray()[this.jTableDatosRubroEmplea.convertRowIndexToModel(intSelectedRow)];
					}
					*/
					//ARCHITECTURE

				} else {
					if(this.rubroemplea==null) {
						this.rubroemplea = new RubroEmplea();
					}

					this.setVariablesFormularioToObjetoActualRubroEmplea(this.rubroemplea,true);
					this.setVariablesFormularioToObjetoActualForeignKeysRubroEmplea(this.rubroemplea);
				}

				if(this.rubroemplea.getpara_rol_pagos()!=null) {

					this.sAccionBusqueda="Query";

					this.sFinalQueryGeneral=" where para_rol_pagos = "+this.rubroemplea.getpara_rol_pagos().toString()+" ";

					if(Constantes.ISDEVELOPING) {
						System.out.println(this.sFinalQueryGeneral);
					}

					this.procesarBusqueda(this.sAccionBusqueda);

					this.inicializarActualizarBindingRubroEmplea(false);
				}

				if(Constantes.ISUSAEJBLOGICLAYER) {
					this.rubroempleaLogic.commitNewConnexionToDeep();
				}

			} catch(Exception e) {

				if(Constantes.ISUSAEJBLOGICLAYER) {
					this.rubroempleaLogic.rollbackNewConnexionToDeep();
				}

				FuncionesSwing.manageException(this, e,logger,RubroEmpleaConstantesFunciones.CLASSNAME);

			} finally {
				if(Constantes.ISUSAEJBLOGICLAYER) {
					this.rubroempleaLogic.closeNewConnexionToDeep();
				}

			}
		}

	public void jButtonpara_sueldoRubroEmpleaBusquedaActionPerformed(java.awt.event.ActionEvent evt) throws Exception {
		try {

				if(Constantes.ISUSAEJBLOGICLAYER) {
					this.rubroempleaLogic.getNewConnexionToDeep("");
				}

				//TOCA TRAER NUEVAMENTE, YA QUE SE PIERDE REGISTRO ACTUAL
				int intSelectedRow = this.jTableDatosRubroEmplea.getSelectedRow();

				if(intSelectedRow>-1) {
					this.setVariablesFormularioToObjetoActualRubroEmplea(this.getrubroemplea(),true);
					this.setVariablesFormularioToObjetoActualForeignKeysRubroEmplea(this.rubroemplea);
					//ARCHITECTURE
					/*
					if(Constantes.ISUSAEJBLOGICLAYER) {
						this.rubroemplea =(RubroEmplea) this.rubroempleaLogic.getRubroEmpleas().toArray()[this.jTableDatosRubroEmplea.convertRowIndexToModel(intSelectedRow)];
					} else if(Constantes.ISUSAEJBREMOTE || Constantes.ISUSAEJBHOME) {
						this.rubroemplea =(RubroEmplea) this.rubroempleas.toArray()[this.jTableDatosRubroEmplea.convertRowIndexToModel(intSelectedRow)];
					}
					*/
					//ARCHITECTURE

				} else {
					if(this.rubroemplea==null) {
						this.rubroemplea = new RubroEmplea();
					}

					this.setVariablesFormularioToObjetoActualRubroEmplea(this.rubroemplea,true);
					this.setVariablesFormularioToObjetoActualForeignKeysRubroEmplea(this.rubroemplea);
				}

				if(this.rubroemplea.getpara_sueldo()!=null) {

					this.sAccionBusqueda="Query";

					this.sFinalQueryGeneral=" where para_sueldo = "+this.rubroemplea.getpara_sueldo().toString()+" ";

					if(Constantes.ISDEVELOPING) {
						System.out.println(this.sFinalQueryGeneral);
					}

					this.procesarBusqueda(this.sAccionBusqueda);

					this.inicializarActualizarBindingRubroEmplea(false);
				}

				if(Constantes.ISUSAEJBLOGICLAYER) {
					this.rubroempleaLogic.commitNewConnexionToDeep();
				}

			} catch(Exception e) {

				if(Constantes.ISUSAEJBLOGICLAYER) {
					this.rubroempleaLogic.rollbackNewConnexionToDeep();
				}

				FuncionesSwing.manageException(this, e,logger,RubroEmpleaConstantesFunciones.CLASSNAME);

			} finally {
				if(Constantes.ISUSAEJBLOGICLAYER) {
					this.rubroempleaLogic.closeNewConnexionToDeep();
				}

			}
		}

	public void jButtonpara_vacacionesRubroEmpleaBusquedaActionPerformed(java.awt.event.ActionEvent evt) throws Exception {
		try {

				if(Constantes.ISUSAEJBLOGICLAYER) {
					this.rubroempleaLogic.getNewConnexionToDeep("");
				}

				//TOCA TRAER NUEVAMENTE, YA QUE SE PIERDE REGISTRO ACTUAL
				int intSelectedRow = this.jTableDatosRubroEmplea.getSelectedRow();

				if(intSelectedRow>-1) {
					this.setVariablesFormularioToObjetoActualRubroEmplea(this.getrubroemplea(),true);
					this.setVariablesFormularioToObjetoActualForeignKeysRubroEmplea(this.rubroemplea);
					//ARCHITECTURE
					/*
					if(Constantes.ISUSAEJBLOGICLAYER) {
						this.rubroemplea =(RubroEmplea) this.rubroempleaLogic.getRubroEmpleas().toArray()[this.jTableDatosRubroEmplea.convertRowIndexToModel(intSelectedRow)];
					} else if(Constantes.ISUSAEJBREMOTE || Constantes.ISUSAEJBHOME) {
						this.rubroemplea =(RubroEmplea) this.rubroempleas.toArray()[this.jTableDatosRubroEmplea.convertRowIndexToModel(intSelectedRow)];
					}
					*/
					//ARCHITECTURE

				} else {
					if(this.rubroemplea==null) {
						this.rubroemplea = new RubroEmplea();
					}

					this.setVariablesFormularioToObjetoActualRubroEmplea(this.rubroemplea,true);
					this.setVariablesFormularioToObjetoActualForeignKeysRubroEmplea(this.rubroemplea);
				}

				if(this.rubroemplea.getpara_vacaciones()!=null) {

					this.sAccionBusqueda="Query";

					this.sFinalQueryGeneral=" where para_vacaciones = "+this.rubroemplea.getpara_vacaciones().toString()+" ";

					if(Constantes.ISDEVELOPING) {
						System.out.println(this.sFinalQueryGeneral);
					}

					this.procesarBusqueda(this.sAccionBusqueda);

					this.inicializarActualizarBindingRubroEmplea(false);
				}

				if(Constantes.ISUSAEJBLOGICLAYER) {
					this.rubroempleaLogic.commitNewConnexionToDeep();
				}

			} catch(Exception e) {

				if(Constantes.ISUSAEJBLOGICLAYER) {
					this.rubroempleaLogic.rollbackNewConnexionToDeep();
				}

				FuncionesSwing.manageException(this, e,logger,RubroEmpleaConstantesFunciones.CLASSNAME);

			} finally {
				if(Constantes.ISUSAEJBLOGICLAYER) {
					this.rubroempleaLogic.closeNewConnexionToDeep();
				}

			}
		}

	public void jButtonpara_impuesto_rentaRubroEmpleaBusquedaActionPerformed(java.awt.event.ActionEvent evt) throws Exception {
		try {

				if(Constantes.ISUSAEJBLOGICLAYER) {
					this.rubroempleaLogic.getNewConnexionToDeep("");
				}

				//TOCA TRAER NUEVAMENTE, YA QUE SE PIERDE REGISTRO ACTUAL
				int intSelectedRow = this.jTableDatosRubroEmplea.getSelectedRow();

				if(intSelectedRow>-1) {
					this.setVariablesFormularioToObjetoActualRubroEmplea(this.getrubroemplea(),true);
					this.setVariablesFormularioToObjetoActualForeignKeysRubroEmplea(this.rubroemplea);
					//ARCHITECTURE
					/*
					if(Constantes.ISUSAEJBLOGICLAYER) {
						this.rubroemplea =(RubroEmplea) this.rubroempleaLogic.getRubroEmpleas().toArray()[this.jTableDatosRubroEmplea.convertRowIndexToModel(intSelectedRow)];
					} else if(Constantes.ISUSAEJBREMOTE || Constantes.ISUSAEJBHOME) {
						this.rubroemplea =(RubroEmplea) this.rubroempleas.toArray()[this.jTableDatosRubroEmplea.convertRowIndexToModel(intSelectedRow)];
					}
					*/
					//ARCHITECTURE

				} else {
					if(this.rubroemplea==null) {
						this.rubroemplea = new RubroEmplea();
					}

					this.setVariablesFormularioToObjetoActualRubroEmplea(this.rubroemplea,true);
					this.setVariablesFormularioToObjetoActualForeignKeysRubroEmplea(this.rubroemplea);
				}

				if(this.rubroemplea.getpara_impuesto_renta()!=null) {

					this.sAccionBusqueda="Query";

					this.sFinalQueryGeneral=" where para_impuesto_renta = "+this.rubroemplea.getpara_impuesto_renta().toString()+" ";

					if(Constantes.ISDEVELOPING) {
						System.out.println(this.sFinalQueryGeneral);
					}

					this.procesarBusqueda(this.sAccionBusqueda);

					this.inicializarActualizarBindingRubroEmplea(false);
				}

				if(Constantes.ISUSAEJBLOGICLAYER) {
					this.rubroempleaLogic.commitNewConnexionToDeep();
				}

			} catch(Exception e) {

				if(Constantes.ISUSAEJBLOGICLAYER) {
					this.rubroempleaLogic.rollbackNewConnexionToDeep();
				}

				FuncionesSwing.manageException(this, e,logger,RubroEmpleaConstantesFunciones.CLASSNAME);

			} finally {
				if(Constantes.ISUSAEJBLOGICLAYER) {
					this.rubroempleaLogic.closeNewConnexionToDeep();
				}

			}
		}

	public void jButtonpara_seguro_socialRubroEmpleaBusquedaActionPerformed(java.awt.event.ActionEvent evt) throws Exception {
		try {

				if(Constantes.ISUSAEJBLOGICLAYER) {
					this.rubroempleaLogic.getNewConnexionToDeep("");
				}

				//TOCA TRAER NUEVAMENTE, YA QUE SE PIERDE REGISTRO ACTUAL
				int intSelectedRow = this.jTableDatosRubroEmplea.getSelectedRow();

				if(intSelectedRow>-1) {
					this.setVariablesFormularioToObjetoActualRubroEmplea(this.getrubroemplea(),true);
					this.setVariablesFormularioToObjetoActualForeignKeysRubroEmplea(this.rubroemplea);
					//ARCHITECTURE
					/*
					if(Constantes.ISUSAEJBLOGICLAYER) {
						this.rubroemplea =(RubroEmplea) this.rubroempleaLogic.getRubroEmpleas().toArray()[this.jTableDatosRubroEmplea.convertRowIndexToModel(intSelectedRow)];
					} else if(Constantes.ISUSAEJBREMOTE || Constantes.ISUSAEJBHOME) {
						this.rubroemplea =(RubroEmplea) this.rubroempleas.toArray()[this.jTableDatosRubroEmplea.convertRowIndexToModel(intSelectedRow)];
					}
					*/
					//ARCHITECTURE

				} else {
					if(this.rubroemplea==null) {
						this.rubroemplea = new RubroEmplea();
					}

					this.setVariablesFormularioToObjetoActualRubroEmplea(this.rubroemplea,true);
					this.setVariablesFormularioToObjetoActualForeignKeysRubroEmplea(this.rubroemplea);
				}

				if(this.rubroemplea.getpara_seguro_social()!=null) {

					this.sAccionBusqueda="Query";

					this.sFinalQueryGeneral=" where para_seguro_social = "+this.rubroemplea.getpara_seguro_social().toString()+" ";

					if(Constantes.ISDEVELOPING) {
						System.out.println(this.sFinalQueryGeneral);
					}

					this.procesarBusqueda(this.sAccionBusqueda);

					this.inicializarActualizarBindingRubroEmplea(false);
				}

				if(Constantes.ISUSAEJBLOGICLAYER) {
					this.rubroempleaLogic.commitNewConnexionToDeep();
				}

			} catch(Exception e) {

				if(Constantes.ISUSAEJBLOGICLAYER) {
					this.rubroempleaLogic.rollbackNewConnexionToDeep();
				}

				FuncionesSwing.manageException(this, e,logger,RubroEmpleaConstantesFunciones.CLASSNAME);

			} finally {
				if(Constantes.ISUSAEJBLOGICLAYER) {
					this.rubroempleaLogic.closeNewConnexionToDeep();
				}

			}
		}

	public void jButtonpara_provisionesRubroEmpleaBusquedaActionPerformed(java.awt.event.ActionEvent evt) throws Exception {
		try {

				if(Constantes.ISUSAEJBLOGICLAYER) {
					this.rubroempleaLogic.getNewConnexionToDeep("");
				}

				//TOCA TRAER NUEVAMENTE, YA QUE SE PIERDE REGISTRO ACTUAL
				int intSelectedRow = this.jTableDatosRubroEmplea.getSelectedRow();

				if(intSelectedRow>-1) {
					this.setVariablesFormularioToObjetoActualRubroEmplea(this.getrubroemplea(),true);
					this.setVariablesFormularioToObjetoActualForeignKeysRubroEmplea(this.rubroemplea);
					//ARCHITECTURE
					/*
					if(Constantes.ISUSAEJBLOGICLAYER) {
						this.rubroemplea =(RubroEmplea) this.rubroempleaLogic.getRubroEmpleas().toArray()[this.jTableDatosRubroEmplea.convertRowIndexToModel(intSelectedRow)];
					} else if(Constantes.ISUSAEJBREMOTE || Constantes.ISUSAEJBHOME) {
						this.rubroemplea =(RubroEmplea) this.rubroempleas.toArray()[this.jTableDatosRubroEmplea.convertRowIndexToModel(intSelectedRow)];
					}
					*/
					//ARCHITECTURE

				} else {
					if(this.rubroemplea==null) {
						this.rubroemplea = new RubroEmplea();
					}

					this.setVariablesFormularioToObjetoActualRubroEmplea(this.rubroemplea,true);
					this.setVariablesFormularioToObjetoActualForeignKeysRubroEmplea(this.rubroemplea);
				}

				if(this.rubroemplea.getpara_provisiones()!=null) {

					this.sAccionBusqueda="Query";

					this.sFinalQueryGeneral=" where para_provisiones = "+this.rubroemplea.getpara_provisiones().toString()+" ";

					if(Constantes.ISDEVELOPING) {
						System.out.println(this.sFinalQueryGeneral);
					}

					this.procesarBusqueda(this.sAccionBusqueda);

					this.inicializarActualizarBindingRubroEmplea(false);
				}

				if(Constantes.ISUSAEJBLOGICLAYER) {
					this.rubroempleaLogic.commitNewConnexionToDeep();
				}

			} catch(Exception e) {

				if(Constantes.ISUSAEJBLOGICLAYER) {
					this.rubroempleaLogic.rollbackNewConnexionToDeep();
				}

				FuncionesSwing.manageException(this, e,logger,RubroEmpleaConstantesFunciones.CLASSNAME);

			} finally {
				if(Constantes.ISUSAEJBLOGICLAYER) {
					this.rubroempleaLogic.closeNewConnexionToDeep();
				}

			}
		}

	public void jButtonpara_utilidadesRubroEmpleaBusquedaActionPerformed(java.awt.event.ActionEvent evt) throws Exception {
		try {

				if(Constantes.ISUSAEJBLOGICLAYER) {
					this.rubroempleaLogic.getNewConnexionToDeep("");
				}

				//TOCA TRAER NUEVAMENTE, YA QUE SE PIERDE REGISTRO ACTUAL
				int intSelectedRow = this.jTableDatosRubroEmplea.getSelectedRow();

				if(intSelectedRow>-1) {
					this.setVariablesFormularioToObjetoActualRubroEmplea(this.getrubroemplea(),true);
					this.setVariablesFormularioToObjetoActualForeignKeysRubroEmplea(this.rubroemplea);
					//ARCHITECTURE
					/*
					if(Constantes.ISUSAEJBLOGICLAYER) {
						this.rubroemplea =(RubroEmplea) this.rubroempleaLogic.getRubroEmpleas().toArray()[this.jTableDatosRubroEmplea.convertRowIndexToModel(intSelectedRow)];
					} else if(Constantes.ISUSAEJBREMOTE || Constantes.ISUSAEJBHOME) {
						this.rubroemplea =(RubroEmplea) this.rubroempleas.toArray()[this.jTableDatosRubroEmplea.convertRowIndexToModel(intSelectedRow)];
					}
					*/
					//ARCHITECTURE

				} else {
					if(this.rubroemplea==null) {
						this.rubroemplea = new RubroEmplea();
					}

					this.setVariablesFormularioToObjetoActualRubroEmplea(this.rubroemplea,true);
					this.setVariablesFormularioToObjetoActualForeignKeysRubroEmplea(this.rubroemplea);
				}

				if(this.rubroemplea.getpara_utilidades()!=null) {

					this.sAccionBusqueda="Query";

					this.sFinalQueryGeneral=" where para_utilidades = "+this.rubroemplea.getpara_utilidades().toString()+" ";

					if(Constantes.ISDEVELOPING) {
						System.out.println(this.sFinalQueryGeneral);
					}

					this.procesarBusqueda(this.sAccionBusqueda);

					this.inicializarActualizarBindingRubroEmplea(false);
				}

				if(Constantes.ISUSAEJBLOGICLAYER) {
					this.rubroempleaLogic.commitNewConnexionToDeep();
				}

			} catch(Exception e) {

				if(Constantes.ISUSAEJBLOGICLAYER) {
					this.rubroempleaLogic.rollbackNewConnexionToDeep();
				}

				FuncionesSwing.manageException(this, e,logger,RubroEmpleaConstantesFunciones.CLASSNAME);

			} finally {
				if(Constantes.ISUSAEJBLOGICLAYER) {
					this.rubroempleaLogic.closeNewConnexionToDeep();
				}

			}
		}

	public void jButtonpara_rubro_iessRubroEmpleaBusquedaActionPerformed(java.awt.event.ActionEvent evt) throws Exception {
		try {

				if(Constantes.ISUSAEJBLOGICLAYER) {
					this.rubroempleaLogic.getNewConnexionToDeep("");
				}

				//TOCA TRAER NUEVAMENTE, YA QUE SE PIERDE REGISTRO ACTUAL
				int intSelectedRow = this.jTableDatosRubroEmplea.getSelectedRow();

				if(intSelectedRow>-1) {
					this.setVariablesFormularioToObjetoActualRubroEmplea(this.getrubroemplea(),true);
					this.setVariablesFormularioToObjetoActualForeignKeysRubroEmplea(this.rubroemplea);
					//ARCHITECTURE
					/*
					if(Constantes.ISUSAEJBLOGICLAYER) {
						this.rubroemplea =(RubroEmplea) this.rubroempleaLogic.getRubroEmpleas().toArray()[this.jTableDatosRubroEmplea.convertRowIndexToModel(intSelectedRow)];
					} else if(Constantes.ISUSAEJBREMOTE || Constantes.ISUSAEJBHOME) {
						this.rubroemplea =(RubroEmplea) this.rubroempleas.toArray()[this.jTableDatosRubroEmplea.convertRowIndexToModel(intSelectedRow)];
					}
					*/
					//ARCHITECTURE

				} else {
					if(this.rubroemplea==null) {
						this.rubroemplea = new RubroEmplea();
					}

					this.setVariablesFormularioToObjetoActualRubroEmplea(this.rubroemplea,true);
					this.setVariablesFormularioToObjetoActualForeignKeysRubroEmplea(this.rubroemplea);
				}

				if(this.rubroemplea.getpara_rubro_iess()!=null) {

					this.sAccionBusqueda="Query";

					this.sFinalQueryGeneral=" where para_rubro_iess = "+this.rubroemplea.getpara_rubro_iess().toString()+" ";

					if(Constantes.ISDEVELOPING) {
						System.out.println(this.sFinalQueryGeneral);
					}

					this.procesarBusqueda(this.sAccionBusqueda);

					this.inicializarActualizarBindingRubroEmplea(false);
				}

				if(Constantes.ISUSAEJBLOGICLAYER) {
					this.rubroempleaLogic.commitNewConnexionToDeep();
				}

			} catch(Exception e) {

				if(Constantes.ISUSAEJBLOGICLAYER) {
					this.rubroempleaLogic.rollbackNewConnexionToDeep();
				}

				FuncionesSwing.manageException(this, e,logger,RubroEmpleaConstantesFunciones.CLASSNAME);

			} finally {
				if(Constantes.ISUSAEJBLOGICLAYER) {
					this.rubroempleaLogic.closeNewConnexionToDeep();
				}

			}
		}

	public void jButtones_fondo_reservaRubroEmpleaBusquedaActionPerformed(java.awt.event.ActionEvent evt) throws Exception {
		try {

				if(Constantes.ISUSAEJBLOGICLAYER) {
					this.rubroempleaLogic.getNewConnexionToDeep("");
				}

				//TOCA TRAER NUEVAMENTE, YA QUE SE PIERDE REGISTRO ACTUAL
				int intSelectedRow = this.jTableDatosRubroEmplea.getSelectedRow();

				if(intSelectedRow>-1) {
					this.setVariablesFormularioToObjetoActualRubroEmplea(this.getrubroemplea(),true);
					this.setVariablesFormularioToObjetoActualForeignKeysRubroEmplea(this.rubroemplea);
					//ARCHITECTURE
					/*
					if(Constantes.ISUSAEJBLOGICLAYER) {
						this.rubroemplea =(RubroEmplea) this.rubroempleaLogic.getRubroEmpleas().toArray()[this.jTableDatosRubroEmplea.convertRowIndexToModel(intSelectedRow)];
					} else if(Constantes.ISUSAEJBREMOTE || Constantes.ISUSAEJBHOME) {
						this.rubroemplea =(RubroEmplea) this.rubroempleas.toArray()[this.jTableDatosRubroEmplea.convertRowIndexToModel(intSelectedRow)];
					}
					*/
					//ARCHITECTURE

				} else {
					if(this.rubroemplea==null) {
						this.rubroemplea = new RubroEmplea();
					}

					this.setVariablesFormularioToObjetoActualRubroEmplea(this.rubroemplea,true);
					this.setVariablesFormularioToObjetoActualForeignKeysRubroEmplea(this.rubroemplea);
				}

				if(this.rubroemplea.getes_fondo_reserva()!=null) {

					this.sAccionBusqueda="Query";

					this.sFinalQueryGeneral=" where es_fondo_reserva = "+this.rubroemplea.getes_fondo_reserva().toString()+" ";

					if(Constantes.ISDEVELOPING) {
						System.out.println(this.sFinalQueryGeneral);
					}

					this.procesarBusqueda(this.sAccionBusqueda);

					this.inicializarActualizarBindingRubroEmplea(false);
				}

				if(Constantes.ISUSAEJBLOGICLAYER) {
					this.rubroempleaLogic.commitNewConnexionToDeep();
				}

			} catch(Exception e) {

				if(Constantes.ISUSAEJBLOGICLAYER) {
					this.rubroempleaLogic.rollbackNewConnexionToDeep();
				}

				FuncionesSwing.manageException(this, e,logger,RubroEmpleaConstantesFunciones.CLASSNAME);

			} finally {
				if(Constantes.ISUSAEJBLOGICLAYER) {
					this.rubroempleaLogic.closeNewConnexionToDeep();
				}

			}
		}

	public void jButtones_decimo_terceroRubroEmpleaBusquedaActionPerformed(java.awt.event.ActionEvent evt) throws Exception {
		try {

				if(Constantes.ISUSAEJBLOGICLAYER) {
					this.rubroempleaLogic.getNewConnexionToDeep("");
				}

				//TOCA TRAER NUEVAMENTE, YA QUE SE PIERDE REGISTRO ACTUAL
				int intSelectedRow = this.jTableDatosRubroEmplea.getSelectedRow();

				if(intSelectedRow>-1) {
					this.setVariablesFormularioToObjetoActualRubroEmplea(this.getrubroemplea(),true);
					this.setVariablesFormularioToObjetoActualForeignKeysRubroEmplea(this.rubroemplea);
					//ARCHITECTURE
					/*
					if(Constantes.ISUSAEJBLOGICLAYER) {
						this.rubroemplea =(RubroEmplea) this.rubroempleaLogic.getRubroEmpleas().toArray()[this.jTableDatosRubroEmplea.convertRowIndexToModel(intSelectedRow)];
					} else if(Constantes.ISUSAEJBREMOTE || Constantes.ISUSAEJBHOME) {
						this.rubroemplea =(RubroEmplea) this.rubroempleas.toArray()[this.jTableDatosRubroEmplea.convertRowIndexToModel(intSelectedRow)];
					}
					*/
					//ARCHITECTURE

				} else {
					if(this.rubroemplea==null) {
						this.rubroemplea = new RubroEmplea();
					}

					this.setVariablesFormularioToObjetoActualRubroEmplea(this.rubroemplea,true);
					this.setVariablesFormularioToObjetoActualForeignKeysRubroEmplea(this.rubroemplea);
				}

				if(this.rubroemplea.getes_decimo_tercero()!=null) {

					this.sAccionBusqueda="Query";

					this.sFinalQueryGeneral=" where es_decimo_tercero = "+this.rubroemplea.getes_decimo_tercero().toString()+" ";

					if(Constantes.ISDEVELOPING) {
						System.out.println(this.sFinalQueryGeneral);
					}

					this.procesarBusqueda(this.sAccionBusqueda);

					this.inicializarActualizarBindingRubroEmplea(false);
				}

				if(Constantes.ISUSAEJBLOGICLAYER) {
					this.rubroempleaLogic.commitNewConnexionToDeep();
				}

			} catch(Exception e) {

				if(Constantes.ISUSAEJBLOGICLAYER) {
					this.rubroempleaLogic.rollbackNewConnexionToDeep();
				}

				FuncionesSwing.manageException(this, e,logger,RubroEmpleaConstantesFunciones.CLASSNAME);

			} finally {
				if(Constantes.ISUSAEJBLOGICLAYER) {
					this.rubroempleaLogic.closeNewConnexionToDeep();
				}

			}
		}

	public void jButtones_decimo_cuartoRubroEmpleaBusquedaActionPerformed(java.awt.event.ActionEvent evt) throws Exception {
		try {

				if(Constantes.ISUSAEJBLOGICLAYER) {
					this.rubroempleaLogic.getNewConnexionToDeep("");
				}

				//TOCA TRAER NUEVAMENTE, YA QUE SE PIERDE REGISTRO ACTUAL
				int intSelectedRow = this.jTableDatosRubroEmplea.getSelectedRow();

				if(intSelectedRow>-1) {
					this.setVariablesFormularioToObjetoActualRubroEmplea(this.getrubroemplea(),true);
					this.setVariablesFormularioToObjetoActualForeignKeysRubroEmplea(this.rubroemplea);
					//ARCHITECTURE
					/*
					if(Constantes.ISUSAEJBLOGICLAYER) {
						this.rubroemplea =(RubroEmplea) this.rubroempleaLogic.getRubroEmpleas().toArray()[this.jTableDatosRubroEmplea.convertRowIndexToModel(intSelectedRow)];
					} else if(Constantes.ISUSAEJBREMOTE || Constantes.ISUSAEJBHOME) {
						this.rubroemplea =(RubroEmplea) this.rubroempleas.toArray()[this.jTableDatosRubroEmplea.convertRowIndexToModel(intSelectedRow)];
					}
					*/
					//ARCHITECTURE

				} else {
					if(this.rubroemplea==null) {
						this.rubroemplea = new RubroEmplea();
					}

					this.setVariablesFormularioToObjetoActualRubroEmplea(this.rubroemplea,true);
					this.setVariablesFormularioToObjetoActualForeignKeysRubroEmplea(this.rubroemplea);
				}

				if(this.rubroemplea.getes_decimo_cuarto()!=null) {

					this.sAccionBusqueda="Query";

					this.sFinalQueryGeneral=" where es_decimo_cuarto = "+this.rubroemplea.getes_decimo_cuarto().toString()+" ";

					if(Constantes.ISDEVELOPING) {
						System.out.println(this.sFinalQueryGeneral);
					}

					this.procesarBusqueda(this.sAccionBusqueda);

					this.inicializarActualizarBindingRubroEmplea(false);
				}

				if(Constantes.ISUSAEJBLOGICLAYER) {
					this.rubroempleaLogic.commitNewConnexionToDeep();
				}

			} catch(Exception e) {

				if(Constantes.ISUSAEJBLOGICLAYER) {
					this.rubroempleaLogic.rollbackNewConnexionToDeep();
				}

				FuncionesSwing.manageException(this, e,logger,RubroEmpleaConstantesFunciones.CLASSNAME);

			} finally {
				if(Constantes.ISUSAEJBLOGICLAYER) {
					this.rubroempleaLogic.closeNewConnexionToDeep();
				}

			}
		}

	
	
	public void jButtonFK_IdEmpresaRubroEmpleaActionPerformed(ActionEvent evt) throws Exception {
		try {
			if(Constantes.ISUSAEJBLOGICLAYER) {
				this.rubroempleaLogic.getNewConnexionToDeep("");
			}

			this.iNumeroPaginacionPagina=0;
			this.inicializarActualizarBindingRubroEmplea(false,false);

			this.getRubroEmpleasFK_IdEmpresa();

			this.inicializarActualizarBindingRubroEmplea(false);

			//if(RubroEmpleaBeanSwingJInternalFrame.ISBINDING_MANUAL) {
			//this.inicializarActualizarBindingRubroEmplea(false,false);
			//}

			if(Constantes.ISUSAEJBLOGICLAYER) {
				this.rubroempleaLogic.commitNewConnexionToDeep();
			}
		} catch(Exception e) {
			if(Constantes.ISUSAEJBLOGICLAYER) {
				this.rubroempleaLogic.rollbackNewConnexionToDeep();
			}

			FuncionesSwing.manageException(this, e,logger,RubroEmpleaConstantesFunciones.CLASSNAME);

		} finally {
			if(Constantes.ISUSAEJBLOGICLAYER) {
				this.rubroempleaLogic.closeNewConnexionToDeep();
			}
		}
	}

	public void jButtonFK_IdTipoCalculoRubroEmpleaActionPerformed(ActionEvent evt) throws Exception {
		try {
			if(Constantes.ISUSAEJBLOGICLAYER) {
				this.rubroempleaLogic.getNewConnexionToDeep("");
			}

			this.iNumeroPaginacionPagina=0;
			this.inicializarActualizarBindingRubroEmplea(false,false);

			this.getRubroEmpleasFK_IdTipoCalculo();

			this.inicializarActualizarBindingRubroEmplea(false);

			//if(RubroEmpleaBeanSwingJInternalFrame.ISBINDING_MANUAL) {
			//this.inicializarActualizarBindingRubroEmplea(false,false);
			//}

			if(Constantes.ISUSAEJBLOGICLAYER) {
				this.rubroempleaLogic.commitNewConnexionToDeep();
			}
		} catch(Exception e) {
			if(Constantes.ISUSAEJBLOGICLAYER) {
				this.rubroempleaLogic.rollbackNewConnexionToDeep();
			}

			FuncionesSwing.manageException(this, e,logger,RubroEmpleaConstantesFunciones.CLASSNAME);

		} finally {
			if(Constantes.ISUSAEJBLOGICLAYER) {
				this.rubroempleaLogic.closeNewConnexionToDeep();
			}
		}
	}

	public void jButtonFK_IdTipoGrupoRubroEmpleaRubroEmpleaActionPerformed(ActionEvent evt) throws Exception {
		try {
			if(Constantes.ISUSAEJBLOGICLAYER) {
				this.rubroempleaLogic.getNewConnexionToDeep("");
			}

			this.iNumeroPaginacionPagina=0;
			this.inicializarActualizarBindingRubroEmplea(false,false);

			this.getRubroEmpleasFK_IdTipoGrupoRubroEmplea();

			this.inicializarActualizarBindingRubroEmplea(false);

			//if(RubroEmpleaBeanSwingJInternalFrame.ISBINDING_MANUAL) {
			//this.inicializarActualizarBindingRubroEmplea(false,false);
			//}

			if(Constantes.ISUSAEJBLOGICLAYER) {
				this.rubroempleaLogic.commitNewConnexionToDeep();
			}
		} catch(Exception e) {
			if(Constantes.ISUSAEJBLOGICLAYER) {
				this.rubroempleaLogic.rollbackNewConnexionToDeep();
			}

			FuncionesSwing.manageException(this, e,logger,RubroEmpleaConstantesFunciones.CLASSNAME);

		} finally {
			if(Constantes.ISUSAEJBLOGICLAYER) {
				this.rubroempleaLogic.closeNewConnexionToDeep();
			}
		}
	}

	public void jButtonFK_IdTipoRubroEmpleaRubroEmpleaActionPerformed(ActionEvent evt) throws Exception {
		try {
			if(Constantes.ISUSAEJBLOGICLAYER) {
				this.rubroempleaLogic.getNewConnexionToDeep("");
			}

			this.iNumeroPaginacionPagina=0;
			this.inicializarActualizarBindingRubroEmplea(false,false);

			this.getRubroEmpleasFK_IdTipoRubroEmplea();

			this.inicializarActualizarBindingRubroEmplea(false);

			//if(RubroEmpleaBeanSwingJInternalFrame.ISBINDING_MANUAL) {
			//this.inicializarActualizarBindingRubroEmplea(false,false);
			//}

			if(Constantes.ISUSAEJBLOGICLAYER) {
				this.rubroempleaLogic.commitNewConnexionToDeep();
			}
		} catch(Exception e) {
			if(Constantes.ISUSAEJBLOGICLAYER) {
				this.rubroempleaLogic.rollbackNewConnexionToDeep();
			}

			FuncionesSwing.manageException(this, e,logger,RubroEmpleaConstantesFunciones.CLASSNAME);

		} finally {
			if(Constantes.ISUSAEJBLOGICLAYER) {
				this.rubroempleaLogic.closeNewConnexionToDeep();
			}
		}
	}

	
	public void closingInternalFrameRubroEmplea() {
		if(this.jInternalFrameDetalleFormRubroEmplea!=null) {
		

		if(this.jInternalFrameDetalleFormRubroEmplea.historialpagonomiBeanSwingJInternalFrame!=null) {
			this.jInternalFrameDetalleFormRubroEmplea.historialpagonomiBeanSwingJInternalFrame.setVisible(false);
			this.jInternalFrameDetalleFormRubroEmplea.historialpagonomiBeanSwingJInternalFrame.dispose();
			this.jInternalFrameDetalleFormRubroEmplea.historialpagonomiBeanSwingJInternalFrame=null;
		}

		if(this.jInternalFrameDetalleFormRubroEmplea.historialpagonomiBeanSwingJInternalFramePopup!=null) {
			this.jInternalFrameDetalleFormRubroEmplea.historialpagonomiBeanSwingJInternalFramePopup.setVisible(false);
			this.jInternalFrameDetalleFormRubroEmplea.historialpagonomiBeanSwingJInternalFramePopup.dispose();
			this.jInternalFrameDetalleFormRubroEmplea.historialpagonomiBeanSwingJInternalFramePopup=null;
		}

		if(this.jInternalFrameDetalleFormRubroEmplea.rubroestructuraBeanSwingJInternalFrame!=null) {
			this.jInternalFrameDetalleFormRubroEmplea.rubroestructuraBeanSwingJInternalFrame.setVisible(false);
			this.jInternalFrameDetalleFormRubroEmplea.rubroestructuraBeanSwingJInternalFrame.dispose();
			this.jInternalFrameDetalleFormRubroEmplea.rubroestructuraBeanSwingJInternalFrame=null;
		}

		if(this.jInternalFrameDetalleFormRubroEmplea.rubroestructuraBeanSwingJInternalFramePopup!=null) {
			this.jInternalFrameDetalleFormRubroEmplea.rubroestructuraBeanSwingJInternalFramePopup.setVisible(false);
			this.jInternalFrameDetalleFormRubroEmplea.rubroestructuraBeanSwingJInternalFramePopup.dispose();
			this.jInternalFrameDetalleFormRubroEmplea.rubroestructuraBeanSwingJInternalFramePopup=null;
		}

		if(this.jInternalFrameDetalleFormRubroEmplea.defiprovisionempleadoBeanSwingJInternalFrame!=null) {
			this.jInternalFrameDetalleFormRubroEmplea.defiprovisionempleadoBeanSwingJInternalFrame.setVisible(false);
			this.jInternalFrameDetalleFormRubroEmplea.defiprovisionempleadoBeanSwingJInternalFrame.dispose();
			this.jInternalFrameDetalleFormRubroEmplea.defiprovisionempleadoBeanSwingJInternalFrame=null;
		}

		if(this.jInternalFrameDetalleFormRubroEmplea.defiprovisionempleadoBeanSwingJInternalFramePopup!=null) {
			this.jInternalFrameDetalleFormRubroEmplea.defiprovisionempleadoBeanSwingJInternalFramePopup.setVisible(false);
			this.jInternalFrameDetalleFormRubroEmplea.defiprovisionempleadoBeanSwingJInternalFramePopup.dispose();
			this.jInternalFrameDetalleFormRubroEmplea.defiprovisionempleadoBeanSwingJInternalFramePopup=null;
		}

		if(this.jInternalFrameDetalleFormRubroEmplea.empleadopagorubroBeanSwingJInternalFrame!=null) {
			this.jInternalFrameDetalleFormRubroEmplea.empleadopagorubroBeanSwingJInternalFrame.setVisible(false);
			this.jInternalFrameDetalleFormRubroEmplea.empleadopagorubroBeanSwingJInternalFrame.dispose();
			this.jInternalFrameDetalleFormRubroEmplea.empleadopagorubroBeanSwingJInternalFrame=null;
		}

		if(this.jInternalFrameDetalleFormRubroEmplea.empleadopagorubroBeanSwingJInternalFramePopup!=null) {
			this.jInternalFrameDetalleFormRubroEmplea.empleadopagorubroBeanSwingJInternalFramePopup.setVisible(false);
			this.jInternalFrameDetalleFormRubroEmplea.empleadopagorubroBeanSwingJInternalFramePopup.dispose();
			this.jInternalFrameDetalleFormRubroEmplea.empleadopagorubroBeanSwingJInternalFramePopup=null;
		}

		if(this.jInternalFrameDetalleFormRubroEmplea.historialpagomesnomiBeanSwingJInternalFrame!=null) {
			this.jInternalFrameDetalleFormRubroEmplea.historialpagomesnomiBeanSwingJInternalFrame.setVisible(false);
			this.jInternalFrameDetalleFormRubroEmplea.historialpagomesnomiBeanSwingJInternalFrame.dispose();
			this.jInternalFrameDetalleFormRubroEmplea.historialpagomesnomiBeanSwingJInternalFrame=null;
		}

		if(this.jInternalFrameDetalleFormRubroEmplea.historialpagomesnomiBeanSwingJInternalFramePopup!=null) {
			this.jInternalFrameDetalleFormRubroEmplea.historialpagomesnomiBeanSwingJInternalFramePopup.setVisible(false);
			this.jInternalFrameDetalleFormRubroEmplea.historialpagomesnomiBeanSwingJInternalFramePopup.dispose();
			this.jInternalFrameDetalleFormRubroEmplea.historialpagomesnomiBeanSwingJInternalFramePopup=null;
		}

		if(this.jInternalFrameDetalleFormRubroEmplea.rubroempleadoBeanSwingJInternalFrame!=null) {
			this.jInternalFrameDetalleFormRubroEmplea.rubroempleadoBeanSwingJInternalFrame.setVisible(false);
			this.jInternalFrameDetalleFormRubroEmplea.rubroempleadoBeanSwingJInternalFrame.dispose();
			this.jInternalFrameDetalleFormRubroEmplea.rubroempleadoBeanSwingJInternalFrame=null;
		}

		if(this.jInternalFrameDetalleFormRubroEmplea.rubroempleadoBeanSwingJInternalFramePopup!=null) {
			this.jInternalFrameDetalleFormRubroEmplea.rubroempleadoBeanSwingJInternalFramePopup.setVisible(false);
			this.jInternalFrameDetalleFormRubroEmplea.rubroempleadoBeanSwingJInternalFramePopup.dispose();
			this.jInternalFrameDetalleFormRubroEmplea.rubroempleadoBeanSwingJInternalFramePopup=null;
		}

		if(this.jInternalFrameDetalleFormRubroEmplea.valorrubrovariableBeanSwingJInternalFrame!=null) {
			this.jInternalFrameDetalleFormRubroEmplea.valorrubrovariableBeanSwingJInternalFrame.setVisible(false);
			this.jInternalFrameDetalleFormRubroEmplea.valorrubrovariableBeanSwingJInternalFrame.dispose();
			this.jInternalFrameDetalleFormRubroEmplea.valorrubrovariableBeanSwingJInternalFrame=null;
		}

		if(this.jInternalFrameDetalleFormRubroEmplea.valorrubrovariableBeanSwingJInternalFramePopup!=null) {
			this.jInternalFrameDetalleFormRubroEmplea.valorrubrovariableBeanSwingJInternalFramePopup.setVisible(false);
			this.jInternalFrameDetalleFormRubroEmplea.valorrubrovariableBeanSwingJInternalFramePopup.dispose();
			this.jInternalFrameDetalleFormRubroEmplea.valorrubrovariableBeanSwingJInternalFramePopup=null;
		}

		if(this.jInternalFrameDetalleFormRubroEmplea.tipoprestamoBeanSwingJInternalFrame!=null) {
			this.jInternalFrameDetalleFormRubroEmplea.tipoprestamoBeanSwingJInternalFrame.setVisible(false);
			this.jInternalFrameDetalleFormRubroEmplea.tipoprestamoBeanSwingJInternalFrame.dispose();
			this.jInternalFrameDetalleFormRubroEmplea.tipoprestamoBeanSwingJInternalFrame=null;
		}

		if(this.jInternalFrameDetalleFormRubroEmplea.tipoprestamoBeanSwingJInternalFramePopup!=null) {
			this.jInternalFrameDetalleFormRubroEmplea.tipoprestamoBeanSwingJInternalFramePopup.setVisible(false);
			this.jInternalFrameDetalleFormRubroEmplea.tipoprestamoBeanSwingJInternalFramePopup.dispose();
			this.jInternalFrameDetalleFormRubroEmplea.tipoprestamoBeanSwingJInternalFramePopup=null;
		}

		if(this.jInternalFrameDetalleFormRubroEmplea.rubroempleacuentacontableBeanSwingJInternalFrame!=null) {
			this.jInternalFrameDetalleFormRubroEmplea.rubroempleacuentacontableBeanSwingJInternalFrame.setVisible(false);
			this.jInternalFrameDetalleFormRubroEmplea.rubroempleacuentacontableBeanSwingJInternalFrame.dispose();
			this.jInternalFrameDetalleFormRubroEmplea.rubroempleacuentacontableBeanSwingJInternalFrame=null;
		}

		if(this.jInternalFrameDetalleFormRubroEmplea.rubroempleacuentacontableBeanSwingJInternalFramePopup!=null) {
			this.jInternalFrameDetalleFormRubroEmplea.rubroempleacuentacontableBeanSwingJInternalFramePopup.setVisible(false);
			this.jInternalFrameDetalleFormRubroEmplea.rubroempleacuentacontableBeanSwingJInternalFramePopup.dispose();
			this.jInternalFrameDetalleFormRubroEmplea.rubroempleacuentacontableBeanSwingJInternalFramePopup=null;
		}	
		
		
		}
		
		if(this.jInternalFrameDetalleFormRubroEmplea!=null) {
			this.jInternalFrameDetalleFormRubroEmplea.setVisible(false);	    			
			this.jInternalFrameDetalleFormRubroEmplea.dispose();
			this.jInternalFrameDetalleFormRubroEmplea=null;
		}
		
		
		if(this.jInternalFrameReporteDinamicoRubroEmplea!=null) {
			this.jInternalFrameReporteDinamicoRubroEmplea.setVisible(false);	    			
			this.jInternalFrameReporteDinamicoRubroEmplea.dispose();
			this.jInternalFrameReporteDinamicoRubroEmplea=null;
		}
		
		if(this.jInternalFrameImportacionRubroEmplea!=null) {
			this.jInternalFrameImportacionRubroEmplea.setVisible(false);	    			
			this.jInternalFrameImportacionRubroEmplea.dispose();
			this.jInternalFrameImportacionRubroEmplea=null;
		}		
		
		
		this.setVisible(false);
		this.dispose();
		//this=null;
	}
	
	
	
	public void jButtonActionPerformedGeneral(String sTipo,ActionEvent evt) { 	  
		try {			
			this.startProcessRubroEmplea();
			
			RubroEmpleaBeanSwingJInternalFrameAdditional.procesarEventosVista(this.parametroGeneralUsuario,this.moduloActual,this.opcionActual,this.usuarioActual,this,FuncionTipo.BEFORE,ControlTipo.BUTTON,EventoTipo.CLIC,EventoSubTipo.CLICKED,sTipo,this.rubroemplea,new Object(),this.rubroempleaParameterGeneral,this.rubroempleaReturnGeneral);
			
			
			if(sTipo.equals("NuevoRubroEmplea")) {
				jButtonNuevoRubroEmpleaActionPerformed(evt,false);
			} else if(sTipo.equals("DuplicarRubroEmplea")) {
				jButtonDuplicarRubroEmpleaActionPerformed(evt,false);
			} else if(sTipo.equals("CopiarRubroEmplea")) {
				jButtonCopiarRubroEmpleaActionPerformed(evt);
			} else if(sTipo.equals("VerFormRubroEmplea")) {
				jButtonVerFormRubroEmpleaActionPerformed(evt);
			} else if(sTipo.equals("NuevoToolBarRubroEmplea")) {
				jButtonNuevoRubroEmpleaActionPerformed(evt,false);
			} else if(sTipo.equals("DuplicarToolBarRubroEmplea")) {
				jButtonDuplicarRubroEmpleaActionPerformed(evt,false);
			} else if(sTipo.equals("MenuItemNuevoRubroEmplea")) {
				jButtonNuevoRubroEmpleaActionPerformed(evt,false);
			} else if(sTipo.equals("MenuItemDuplicarRubroEmplea")) {
				jButtonDuplicarRubroEmpleaActionPerformed(evt,false);
			} else if(sTipo.equals("NuevoRelacionesRubroEmplea")) {
				jButtonNuevoRubroEmpleaActionPerformed(evt,true);
			} else if(sTipo.equals("NuevoRelacionesToolBarRubroEmplea")) {
				jButtonNuevoRubroEmpleaActionPerformed(evt,true);
			} else if(sTipo.equals("MenuItemNuevoRelacionesRubroEmplea")) {
				jButtonNuevoRubroEmpleaActionPerformed(evt,true);
			} else if(sTipo.equals("ModificarRubroEmplea")) {
				jButtonModificarRubroEmpleaActionPerformed(evt);
			} else if(sTipo.equals("ModificarToolBarRubroEmplea")) {
				jButtonModificarRubroEmpleaActionPerformed(evt);
			} else if(sTipo.equals("MenuItemModificarRubroEmplea")) {
				jButtonModificarRubroEmpleaActionPerformed(evt);
			} else if(sTipo.equals("ActualizarRubroEmplea")) {
				jButtonActualizarRubroEmpleaActionPerformed(evt);
			} else if(sTipo.equals("ActualizarToolBarRubroEmplea")) {
				jButtonActualizarRubroEmpleaActionPerformed(evt);
			} else if(sTipo.equals("MenuItemActualizarRubroEmplea")) {
				jButtonActualizarRubroEmpleaActionPerformed(evt);
			} else if(sTipo.equals("EliminarRubroEmplea")) {
				jButtonEliminarRubroEmpleaActionPerformed(evt);
			} else if(sTipo.equals("EliminarToolBarRubroEmplea")) {
				jButtonEliminarRubroEmpleaActionPerformed(evt);
			} else if(sTipo.equals("MenuItemEliminarRubroEmplea")) {
				jButtonEliminarRubroEmpleaActionPerformed(evt);
			} else if(sTipo.equals("CancelarRubroEmplea")) {
				jButtonCancelarRubroEmpleaActionPerformed(evt);
			} else if(sTipo.equals("CancelarToolBarRubroEmplea")) {
				jButtonCancelarRubroEmpleaActionPerformed(evt);
			} else if(sTipo.equals("MenuItemCancelarRubroEmplea")) {
				jButtonCancelarRubroEmpleaActionPerformed(evt);
			} else if(sTipo.equals("CerrarRubroEmplea")) {
				jButtonCerrarRubroEmpleaActionPerformed(evt);
			} else if(sTipo.equals("CerrarToolBarRubroEmplea")) {
				jButtonCerrarRubroEmpleaActionPerformed(evt);
			} else if(sTipo.equals("MenuItemCerrarRubroEmplea")) {
				jButtonCerrarRubroEmpleaActionPerformed(evt);
			} else if(sTipo.equals("MostrarOcultarToolBarRubroEmplea")) {
				jButtonMostrarOcultarRubroEmpleaActionPerformed(evt);
			} else if(sTipo.equals("MenuItemDetalleCerrarRubroEmplea")) {
				jButtonCancelarRubroEmpleaActionPerformed(evt);
			} else if(sTipo.equals("GuardarCambiosRubroEmplea")) {
				jButtonGuardarCambiosRubroEmpleaActionPerformed(evt);
			} else if(sTipo.equals("GuardarCambiosToolBarRubroEmplea")) {
				jButtonGuardarCambiosRubroEmpleaActionPerformed(evt);
			} else if(sTipo.equals("CopiarToolBarRubroEmplea")) {
				jButtonCopiarRubroEmpleaActionPerformed(evt);
			} else if(sTipo.equals("VerFormToolBarRubroEmplea")) {
				jButtonVerFormRubroEmpleaActionPerformed(evt);
			} else if(sTipo.equals("MenuItemGuardarCambiosRubroEmplea")) {
				jButtonGuardarCambiosRubroEmpleaActionPerformed(evt);
			} else if(sTipo.equals("MenuItemCopiarRubroEmplea")) {
				jButtonCopiarRubroEmpleaActionPerformed(evt);
			} else if(sTipo.equals("MenuItemVerFormRubroEmplea")) {
				jButtonVerFormRubroEmpleaActionPerformed(evt);
			} else if(sTipo.equals("GuardarCambiosTablaRubroEmplea")) {
				jButtonGuardarCambiosRubroEmpleaActionPerformed(evt);
			} else if(sTipo.equals("GuardarCambiosTablaToolBarRubroEmplea")) {
				jButtonGuardarCambiosRubroEmpleaActionPerformed(evt);
			} else if(sTipo.equals("MenuItemGuardarCambiosTablaRubroEmplea")) {
				jButtonGuardarCambiosRubroEmpleaActionPerformed(evt);
			} else if(sTipo.equals("RecargarInformacionRubroEmplea")) {
				jButtonRecargarInformacionRubroEmpleaActionPerformed(evt);
			} else if(sTipo.equals("RecargarInformacionToolBarRubroEmplea")) {
				jButtonRecargarInformacionRubroEmpleaActionPerformed(evt);
			} else if(sTipo.equals("MenuItemRecargarInformacionRubroEmplea")) {
				jButtonRecargarInformacionRubroEmpleaActionPerformed(evt);
			}
			else if(sTipo.equals("AnterioresRubroEmplea")) {
				jButtonAnterioresRubroEmpleaActionPerformed(evt);
			} else if(sTipo.equals("AnterioresToolBarRubroEmplea")) {
				jButtonAnterioresRubroEmpleaActionPerformed(evt);
			} else if(sTipo.equals("MenuItemAnterioreRubroEmplea")) {
				jButtonAnterioresRubroEmpleaActionPerformed(evt);
			} else if(sTipo.equals("SiguientesRubroEmplea")) {
				jButtonSiguientesRubroEmpleaActionPerformed(evt);
			} else if(sTipo.equals("SiguientesToolBarRubroEmplea")) {
				jButtonSiguientesRubroEmpleaActionPerformed(evt);
			} else if(sTipo.equals("MenuItemSiguientesRubroEmplea")) {
				jButtonSiguientesRubroEmpleaActionPerformed(evt);
			} else if(sTipo.equals("MenuItemAbrirOrderByRubroEmplea") || sTipo.equals("MenuItemDetalleAbrirOrderByRubroEmplea")) {
				jButtonAbrirOrderByRubroEmpleaActionPerformed(evt);
			} else if(sTipo.equals("MenuItemMostrarOcultarRubroEmplea") || sTipo.equals("MenuItemDetalleMostrarOcultarRubroEmplea")) {
				jButtonMostrarOcultarRubroEmpleaActionPerformed(evt);
			} else if(sTipo.equals("NuevoGuardarCambiosRubroEmplea")) {
				jButtonNuevoGuardarCambiosRubroEmpleaActionPerformed(evt);
			} else if(sTipo.equals("NuevoGuardarCambiosToolBarRubroEmplea")) {
				jButtonNuevoGuardarCambiosRubroEmpleaActionPerformed(evt);
			} else if(sTipo.equals("MenuItemNuevoGuardarCambiosRubroEmplea")) {
				jButtonNuevoGuardarCambiosRubroEmpleaActionPerformed(evt);
			} 
			else if(sTipo.equals("CerrarReporteDinamicoRubroEmplea")) {
				jButtonCerrarReporteDinamicoRubroEmpleaActionPerformed(evt);
			} else if(sTipo.equals("GenerarReporteDinamicoRubroEmplea")) {
				jButtonGenerarReporteDinamicoRubroEmpleaActionPerformed(evt);
			} else if(sTipo.equals("GenerarExcelReporteDinamicoRubroEmplea")) {
				
				jButtonGenerarExcelReporteDinamicoRubroEmpleaActionPerformed(evt);
				
			} else if(sTipo.equals("CerrarImportacionRubroEmplea")) {
				jButtonCerrarImportacionRubroEmpleaActionPerformed(evt);
			} else if(sTipo.equals("GenerarImportacionRubroEmplea")) {
				
				jButtonGenerarImportacionRubroEmpleaActionPerformed(evt);
				
			} else if(sTipo.equals("AbrirImportacionRubroEmplea")) {
				
				jButtonAbrirImportacionRubroEmpleaActionPerformed(evt);
				
			} else if(sTipo.equals("TiposAccionesRubroEmplea")) {
				jComboBoxTiposAccionesRubroEmpleaActionListener(evt,false);
			} else if(sTipo.equals("TiposRelacionesRubroEmplea")) {
				jComboBoxTiposRelacionesRubroEmpleaActionListener(evt);
			} else if(sTipo.equals("TiposAccionesFormularioRubroEmplea")) {
				jComboBoxTiposAccionesRubroEmpleaActionListener(evt,true);
			} else if(sTipo.equals("TiposSeleccionarRubroEmplea")) {
				
				jComboBoxTiposSeleccionarRubroEmpleaActionListener(evt);
				
			} else if(sTipo.equals("ValorCampoGeneralRubroEmplea")) {
				jTextFieldValorCampoGeneralRubroEmpleaActionListener(evt);
			}
			
			
			else if(sTipo.equals("AbrirOrderByRubroEmplea")) {
				jButtonAbrirOrderByRubroEmpleaActionPerformed(evt);
				
			} else if(sTipo.equals("AbrirOrderByToolBarRubroEmplea")) {
				jButtonAbrirOrderByRubroEmpleaActionPerformed(evt);
				
			} else if(sTipo.equals("CerrarOrderByRubroEmplea")) {
				jButtonCerrarOrderByRubroEmpleaActionPerformed(evt);
			} 
						
			
			//BUSQUEDA GENERAL CAMPO
			else if(sTipo.equals("idRubroEmpleaBusqueda")) {
				this.jButtonidRubroEmpleaBusquedaActionPerformed(evt);
			}
			//ACTUALIZAR CAMPO
			else if(sTipo.equals("id_empresaRubroEmpleaUpdate")) {
				this.jButtonid_empresaRubroEmpleaUpdateActionPerformed(evt);
			}
			//BUSQUEDA GENERAL CAMPO
			else if(sTipo.equals("id_empresaRubroEmpleaBusqueda")) {
				this.jButtonid_empresaRubroEmpleaBusquedaActionPerformed(evt);
			}
			//ACTUALIZAR CAMPO
			else if(sTipo.equals("id_tipo_calculoRubroEmpleaUpdate")) {
				this.jButtonid_tipo_calculoRubroEmpleaUpdateActionPerformed(evt);
			}
			//BUSQUEDA GENERAL CAMPO
			else if(sTipo.equals("id_tipo_calculoRubroEmpleaBusqueda")) {
				this.jButtonid_tipo_calculoRubroEmpleaBusquedaActionPerformed(evt);
			}
			//ACTUALIZAR CAMPO
			else if(sTipo.equals("id_tipo_rubro_empleaRubroEmpleaUpdate")) {
				this.jButtonid_tipo_rubro_empleaRubroEmpleaUpdateActionPerformed(evt);
			}
			//BUSQUEDA GENERAL CAMPO
			else if(sTipo.equals("id_tipo_rubro_empleaRubroEmpleaBusqueda")) {
				this.jButtonid_tipo_rubro_empleaRubroEmpleaBusquedaActionPerformed(evt);
			}
			//ACTUALIZAR CAMPO
			else if(sTipo.equals("id_tipo_grupo_rubro_empleaRubroEmpleaUpdate")) {
				this.jButtonid_tipo_grupo_rubro_empleaRubroEmpleaUpdateActionPerformed(evt);
			}
			//BUSQUEDA GENERAL CAMPO
			else if(sTipo.equals("id_tipo_grupo_rubro_empleaRubroEmpleaBusqueda")) {
				this.jButtonid_tipo_grupo_rubro_empleaRubroEmpleaBusquedaActionPerformed(evt);
			}
			//BUSQUEDA GENERAL CAMPO
			else if(sTipo.equals("codigoRubroEmpleaBusqueda")) {
				this.jButtoncodigoRubroEmpleaBusquedaActionPerformed(evt);
			}
			//BUSQUEDA GENERAL CAMPO
			else if(sTipo.equals("nombreRubroEmpleaBusqueda")) {
				this.jButtonnombreRubroEmpleaBusquedaActionPerformed(evt);
			}
			//BUSQUEDA GENERAL CAMPO
			else if(sTipo.equals("formulaRubroEmpleaBusqueda")) {
				this.jButtonformulaRubroEmpleaBusquedaActionPerformed(evt);
			}
			//BUSQUEDA GENERAL CAMPO
			else if(sTipo.equals("aliasRubroEmpleaBusqueda")) {
				this.jButtonaliasRubroEmpleaBusquedaActionPerformed(evt);
			}
			//BUSQUEDA GENERAL CAMPO
			else if(sTipo.equals("secuencialRubroEmpleaBusqueda")) {
				this.jButtonsecuencialRubroEmpleaBusquedaActionPerformed(evt);
			}
			//BUSQUEDA GENERAL CAMPO
			else if(sTipo.equals("para_rol_pagosRubroEmpleaBusqueda")) {
				this.jButtonpara_rol_pagosRubroEmpleaBusquedaActionPerformed(evt);
			}
			//BUSQUEDA GENERAL CAMPO
			else if(sTipo.equals("para_sueldoRubroEmpleaBusqueda")) {
				this.jButtonpara_sueldoRubroEmpleaBusquedaActionPerformed(evt);
			}
			//BUSQUEDA GENERAL CAMPO
			else if(sTipo.equals("para_vacacionesRubroEmpleaBusqueda")) {
				this.jButtonpara_vacacionesRubroEmpleaBusquedaActionPerformed(evt);
			}
			//BUSQUEDA GENERAL CAMPO
			else if(sTipo.equals("para_impuesto_rentaRubroEmpleaBusqueda")) {
				this.jButtonpara_impuesto_rentaRubroEmpleaBusquedaActionPerformed(evt);
			}
			//BUSQUEDA GENERAL CAMPO
			else if(sTipo.equals("para_seguro_socialRubroEmpleaBusqueda")) {
				this.jButtonpara_seguro_socialRubroEmpleaBusquedaActionPerformed(evt);
			}
			//BUSQUEDA GENERAL CAMPO
			else if(sTipo.equals("para_provisionesRubroEmpleaBusqueda")) {
				this.jButtonpara_provisionesRubroEmpleaBusquedaActionPerformed(evt);
			}
			//BUSQUEDA GENERAL CAMPO
			else if(sTipo.equals("para_utilidadesRubroEmpleaBusqueda")) {
				this.jButtonpara_utilidadesRubroEmpleaBusquedaActionPerformed(evt);
			}
			//BUSQUEDA GENERAL CAMPO
			else if(sTipo.equals("para_rubro_iessRubroEmpleaBusqueda")) {
				this.jButtonpara_rubro_iessRubroEmpleaBusquedaActionPerformed(evt);
			}
			//BUSQUEDA GENERAL CAMPO
			else if(sTipo.equals("es_fondo_reservaRubroEmpleaBusqueda")) {
				this.jButtones_fondo_reservaRubroEmpleaBusquedaActionPerformed(evt);
			}
			//BUSQUEDA GENERAL CAMPO
			else if(sTipo.equals("es_decimo_terceroRubroEmpleaBusqueda")) {
				this.jButtones_decimo_terceroRubroEmpleaBusquedaActionPerformed(evt);
			}
			//BUSQUEDA GENERAL CAMPO
			else if(sTipo.equals("es_decimo_cuartoRubroEmpleaBusqueda")) {
				this.jButtones_decimo_cuartoRubroEmpleaBusquedaActionPerformed(evt);
			}
			
			
			
			
			else if(sTipo.equals("FK_IdTipoCalculoRubroEmplea")) {
				this.jButtonFK_IdTipoCalculoRubroEmpleaActionPerformed(evt);
			}
			else if(sTipo.equals("FK_IdTipoGrupoRubroEmpleaRubroEmplea")) {
				this.jButtonFK_IdTipoGrupoRubroEmpleaRubroEmpleaActionPerformed(evt);
			}
			else if(sTipo.equals("FK_IdTipoRubroEmpleaRubroEmplea")) {
				this.jButtonFK_IdTipoRubroEmpleaRubroEmpleaActionPerformed(evt);
			}
			
			;
			
			
			RubroEmpleaBeanSwingJInternalFrameAdditional.procesarEventosVista(this.parametroGeneralUsuario,this.moduloActual,this.opcionActual,this.usuarioActual,this,FuncionTipo.AFTER,ControlTipo.BUTTON,EventoTipo.CLIC,EventoSubTipo.CLICKED,sTipo,this.rubroemplea,new Object(),this.rubroempleaParameterGeneral,this.rubroempleaReturnGeneral);
			
		} catch(Exception e) {
  			FuncionesSwing.manageException2(this, e,logger,RubroEmpleaConstantesFunciones.CLASSNAME);
			
  		} finally {
      		this.finishProcessRubroEmplea();
      	}
    }
	
	//FUNCIONA AL APLASTAR ENTER
	public void jTextFieldActionPerformedGeneral(String sTipo,ActionEvent evt) { 	  
		try {
			if(this.permiteManejarEventosControl()) {
				//SELECCIONA FILA A OBJETO ACTUAL			
				this.seleccionarFilaTablaRubroEmpleaActual();
			
				EventoGlobalTipo eventoGlobalTipo=EventoGlobalTipo.CONTROL_CHANGE;
				
				Boolean esControlTabla=false;
				Container containerParent=null;
				JTextField jTextField=null;
				
				
				//PARAMETROS LLAMAR FUNCION PARENT
				GeneralEntityParameterGeneral generalEntityParameterGeneral=new GeneralEntityParameterGeneral();			
				Boolean esUsoDesdeHijoLocal=false;
				Boolean conIrServidorAplicacionParent=false;	
				ArrayList<String> arrClasses=new ArrayList<String>();			
				//PARAMETROS LLAMAR FUNCION PARENT_FIN
				
				/*
				if(this.esUsoDesdeHijo) {
					eventoGlobalTipo=EventoGlobalTipo.FORM_HIJO_ACTUALIZAR;
				}
				*/
				
				ArrayList<Classe> classes=new ArrayList<Classe>();
				
				jTextField=(JTextField)evt.getSource();
				
				containerParent=jTextField.getParent();
						
				if(containerParent!=null && containerParent.getClass().equals(JTableMe.class)) {
					esControlTabla=true;
				}
						
				this.esControlTabla=esControlTabla;
				
				
				this.actualizarInformacion("EVENTO_CONTROL",false,this.rubroemplea);
				
				this.actualizarInformacion("INFO_PADRE",false,this.rubroemplea);
				
				RubroEmpleaBeanSwingJInternalFrameAdditional.procesarEventosVista(this.parametroGeneralUsuario,this.moduloActual,this.opcionActual,this.usuarioActual,this,FuncionTipo.BEFORE,ControlTipo.TEXTBOX,EventoTipo.CHANGE,EventoSubTipo.CHANGED,sTipo,this.rubroemplea,new Object(),this.rubroempleaParameterGeneral,this.rubroempleaReturnGeneral);
				
				


				
				RubroEmpleaBeanSwingJInternalFrameAdditional.procesarEventosVista(this.parametroGeneralUsuario,this.moduloActual,this.opcionActual,this.usuarioActual,this,FuncionTipo.AFTER,ControlTipo.TEXTBOX,EventoTipo.CHANGE,EventoSubTipo.CHANGED,sTipo,this.rubroemplea,new Object(),this.rubroempleaParameterGeneral,this.rubroempleaReturnGeneral);
				
				
				if(esUsoDesdeHijoLocal) {
					Long id=0L;
					
					generalEntityParameterGeneral.setEventoGlobalTipo(EventoGlobalTipo.FORM_HIJO_ACTUALIZAR);
					generalEntityParameterGeneral.setsDominio("Formulario");
					generalEntityParameterGeneral.setsDominioTipo(RubroEmplea.class.getName());
					
					if(this.jInternalFrameParent!=null) {
						this.jInternalFrameParent.setEventoParentGeneral(esUsoDesdeHijoLocal,"Formulario",RubroEmplea.class.getName(),sTipo,"TEXTFIELD",esControlTabla,conIrServidorAplicacionParent,
							id,jTextField, EventoGlobalTipo.FORM_HIJO_ACTUALIZAR,ControlTipo.TEXTBOX,EventoTipo.CHANGE,EventoSubTipo.CHANGED,arrClasses,
							evt,generalEntityParameterGeneral,null);
					}
				}			
				}
				
			} catch(Exception e) {
  				FuncionesSwing.manageException2(this, e,logger,RubroEmpleaConstantesFunciones.CLASSNAME);
  			}
    }
	
	public Boolean existeCambioValor(ControlTipo controlTipo,String sTipo) throws Exception {
		Boolean existeCambio=true;
		
		try {
			RubroEmplea rubroempleaLocal=null;
			
			if(!this.getEsControlTabla()) {
				rubroempleaLocal=this.rubroemplea;
			} else {
				rubroempleaLocal=this.rubroempleaAnterior;
			}
			
			if(controlTipo.equals(ControlTipo.TEXTBOX)) {
				


			}
		
		} catch(Exception e) {
  			FuncionesSwing.manageException2(this, e,logger,RubroEmpleaConstantesFunciones.CLASSNAME);
  		}
		
		return existeCambio;
	}
	
	public void jTextFieldFocusLostGeneral(String sTipo,java.awt.event.FocusEvent evt) { 	  
		try {
			if(this.permiteManejarEventosControl() && this.existeCambioValor(ControlTipo.TEXTBOX,sTipo)) {
				
				EventoGlobalTipo eventoGlobalTipo=EventoGlobalTipo.CONTROL_CHANGE;
				
				Boolean esControlTabla=false;
				JTextField jTextField=null;
				Container containerParent=null;
				Component componentOpposite=null;
				
				//PARAMETROS LLAMAR FUNCION PARENT
				GeneralEntityParameterGeneral generalEntityParameterGeneral=new GeneralEntityParameterGeneral();			
				Boolean esUsoDesdeHijoLocal=false;
				Boolean conIrServidorAplicacionParent=false;	
				ArrayList<String> arrClasses=new ArrayList<String>();			
				//PARAMETROS LLAMAR FUNCION PARENT_FIN
				
				/*
				if(this.esUsoDesdeHijo) {
					eventoGlobalTipo=EventoGlobalTipo.FORM_HIJO_ACTUALIZAR;
				}
				*/
				
				ArrayList<Classe> classes=new ArrayList<Classe>();
				
				jTextField=(JTextField)evt.getSource();
				
				containerParent=jTextField.getParent();
						
				componentOpposite=evt.getOppositeComponent();
				
				if((containerParent!=null && containerParent.getClass().equals(JTableMe.class))
					|| (componentOpposite!=null && componentOpposite.getClass().equals(JTableMe.class))
				) {					
					esControlTabla=true;
				}
				
				this.esControlTabla=esControlTabla;
				
				
				this.actualizarInformacion("EVENTO_CONTROL",false,this.rubroemplea);
				
				this.actualizarInformacion("INFO_PADRE",false,this.rubroemplea);
				
				RubroEmpleaBeanSwingJInternalFrameAdditional.procesarEventosVista(this.parametroGeneralUsuario,this.moduloActual,this.opcionActual,this.usuarioActual,this,FuncionTipo.BEFORE,ControlTipo.TEXTBOX,EventoTipo.CHANGE,EventoSubTipo.CHANGED,sTipo,this.rubroemplea,new Object(),this.rubroempleaParameterGeneral,this.rubroempleaReturnGeneral);
							
				
				


				
				RubroEmpleaBeanSwingJInternalFrameAdditional.procesarEventosVista(this.parametroGeneralUsuario,this.moduloActual,this.opcionActual,this.usuarioActual,this,FuncionTipo.AFTER,ControlTipo.TEXTBOX,EventoTipo.CHANGE,EventoSubTipo.CHANGED,sTipo,this.rubroemplea,new Object(),this.rubroempleaParameterGeneral,this.rubroempleaReturnGeneral);
				
				
				if(esUsoDesdeHijoLocal) {
					Long id=0L;
					
					generalEntityParameterGeneral.setEventoGlobalTipo(EventoGlobalTipo.FORM_HIJO_ACTUALIZAR);
					generalEntityParameterGeneral.setsDominio("Formulario");
					generalEntityParameterGeneral.setsDominioTipo(RubroEmplea.class.getName());
					
					if(this.jInternalFrameParent!=null) {
						this.jInternalFrameParent.setEventoParentGeneral(esUsoDesdeHijoLocal,"Formulario",RubroEmplea.class.getName(),sTipo,"TEXTFIELD",esControlTabla,conIrServidorAplicacionParent,
							id,jTextField, EventoGlobalTipo.FORM_HIJO_ACTUALIZAR,ControlTipo.TEXTBOX,EventoTipo.CHANGE,EventoSubTipo.CHANGED,arrClasses,
							evt,generalEntityParameterGeneral,null);
					}
				}			
			}
			
		} catch(Exception e) {
  			FuncionesSwing.manageException2(this, e,logger,RubroEmpleaConstantesFunciones.CLASSNAME);
  		}
    }
	
	public void jTextFieldFocusGainedGeneral(String sTipo,java.awt.event.FocusEvent evt) { 	  
		try {
			//SELECCIONA FILA A OBJETO ACTUAL			
			this.seleccionarFilaTablaRubroEmpleaActual();
			
			//SELECCIONA FILA A OBJETO ANTERIOR
			Integer intSelectedRow = this.jTableDatosRubroEmplea.getSelectedRow();
					
			if(intSelectedRow!=null && intSelectedRow>-1) {
				//ARCHITECTURE
				if(Constantes.ISUSAEJBLOGICLAYER) {
					this.rubroempleaAnterior =(RubroEmplea) this.rubroempleaLogic.getRubroEmpleas().toArray()[this.jTableDatosRubroEmplea.convertRowIndexToModel(intSelectedRow)];
				} else if(Constantes.ISUSAEJBREMOTE || Constantes.ISUSAEJBHOME ) {
					this.rubroempleaAnterior =(RubroEmplea) this.rubroempleas.toArray()[this.jTableDatosRubroEmplea.convertRowIndexToModel(intSelectedRow)];
				}
				//ARCHITECTURE
				
				//System.out.println(this.banco);
			}
			
		} catch(Exception e) {
  			FuncionesSwing.manageException2(this, e,logger,RubroEmpleaConstantesFunciones.CLASSNAME);
  		}
    }	
	
	//CUANDO SE CAMBIA ALGUN FORMATO(TIPO DE LETRA,NEGRILLA,ETC)
	public void jTextFieldChangedUpdateGeneral(String sTipo,JTextField jTextField,DocumentEvent evt) { 	  
		try {
			/*
			EventoGlobalTipo eventoGlobalTipo=EventoGlobalTipo.CONTROL_CHANGE;
			
			//System.out.println("UPDATE");
			
			Boolean esControlTabla=false;
			//JTextField jTextField=null;
			Container containerParent=null;
			Component componentOpposite=null;
			
			if(this.esUsoDesdeHijo) {
				eventoGlobalTipo=EventoGlobalTipo.FORM_HIJO_ACTUALIZAR;
			}
			
			RubroEmpleaBeanSwingJInternalFrameAdditional.procesarEventosVista(this.parametroGeneralUsuario,this.moduloActual,this.opcionActual,this.usuarioActual,this,FuncionTipo.BEFORE,ControlTipo.TEXTBOX,EventoTipo.CHANGE,EventoSubTipo.CHANGED,sTipo,this.rubroemplea,new Object(),this.rubroempleaParameterGeneral,this.rubroempleaReturnGeneral);
			
			ArrayList<Classe> classes=new ArrayList<Classe>();
			
			//jTextField=(JTextField)evt.getSource();
			
			containerParent=jTextField.getParent();
					
			componentOpposite=null;//evt.getOppositeComponent();
			
			if((containerParent!=null && containerParent.getClass().equals(JTableMe.class))
				|| (componentOpposite!=null && componentOpposite.getClass().equals(JTableMe.class))
			) {					
				esControlTabla=true;
			}
			
			this.esControlTabla=esControlTabla;
			
			


			
			RubroEmpleaBeanSwingJInternalFrameAdditional.procesarEventosVista(this.parametroGeneralUsuario,this.moduloActual,this.opcionActual,this.usuarioActual,this,FuncionTipo.AFTER,ControlTipo.TEXTBOX,EventoTipo.CHANGE,EventoSubTipo.CHANGED,sTipo,this.rubroemplea,new Object(),this.rubroempleaParameterGeneral,this.rubroempleaReturnGeneral);
			*/
  		} catch(Exception e) {
  			FuncionesSwing.manageException2(this, e,logger,RubroEmpleaConstantesFunciones.CLASSNAME);
  		}
    }
	
	//CUANDO SE QUITA ALGUN CARACTER
	public void jTextFieldRemoveUpdateGeneral(String sTipo,JTextField jTextField,DocumentEvent evt) { 	  
		try {
			//System.out.println("REMOVE");
			
  		} catch(Exception e) {
  			FuncionesSwing.manageException2(this, e,logger,RubroEmpleaConstantesFunciones.CLASSNAME);
  		}
    }
	
	//CUANDO SE INGRESA ALGUN CARACTER
	public void jTextFieldInsertUpdateGeneral(String sTipo,JTextField jTextField,DocumentEvent evt) { 	  
		try {
			//System.out.println("INSERT");
			
  		} catch(Exception e) {
  			FuncionesSwing.manageException2(this, e,logger,RubroEmpleaConstantesFunciones.CLASSNAME);
  		}
    }
	
	//FUNCIONA AL APLASTAR ENTER
	public void jFormattedTextFieldActionPerformedGeneral(String sTipo,ActionEvent evt) { 	  
		try {
			if(this.permiteManejarEventosControl()) {
				
				//SELECCIONA FILA A OBJETO ACTUAL			
				this.seleccionarFilaTablaRubroEmpleaActual();
				
				EventoGlobalTipo eventoGlobalTipo=EventoGlobalTipo.CONTROL_CHANGE;
				
				Boolean esControlTabla=false;
				Container containerParent=null;
				Container containerParentAux=null;
				JFormattedTextField JFormattedTextField=null;
				Component componentOpposite=null;
				
				//PARAMETROS LLAMAR FUNCION PARENT
				GeneralEntityParameterGeneral generalEntityParameterGeneral=new GeneralEntityParameterGeneral();			
				Boolean esUsoDesdeHijoLocal=false;
				Boolean conIrServidorAplicacionParent=false;	
				ArrayList<String> arrClasses=new ArrayList<String>();			
				//PARAMETROS LLAMAR FUNCION PARENT_FIN
				
				/*
				if(this.esUsoDesdeHijo) {
					eventoGlobalTipo=EventoGlobalTipo.FORM_HIJO_ACTUALIZAR;
				}
				*/
				ArrayList<Classe> classes=new ArrayList<Classe>();
				
				JFormattedTextField=(JFormattedTextField)evt.getSource();
				
				containerParentAux=JFormattedTextField.getParent();
				
				if(containerParentAux!=null && containerParentAux.getClass().equals(JDateChooser.class)) {
					containerParent=containerParentAux.getParent();
				}
				
				componentOpposite=null;//evt.getOppositeComponent();
				
				if((containerParent!=null && containerParent.getClass().equals(JTableMe.class))
					|| (componentOpposite!=null && componentOpposite.getClass().equals(JTableMe.class))
				) {					
					esControlTabla=true;
				}
				
				this.esControlTabla=esControlTabla;
				
				
				this.actualizarInformacion("EVENTO_CONTROL",false,this.rubroemplea);
				
				this.actualizarInformacion("INFO_PADRE",false,this.rubroemplea);
				
				RubroEmpleaBeanSwingJInternalFrameAdditional.procesarEventosVista(this.parametroGeneralUsuario,this.moduloActual,this.opcionActual,this.usuarioActual,this,FuncionTipo.BEFORE,ControlTipo.DATE,EventoTipo.CHANGE,EventoSubTipo.CHANGED,sTipo,this.rubroemplea,new Object(),this.rubroempleaParameterGeneral,this.rubroempleaReturnGeneral);
								
						
				


				
				RubroEmpleaBeanSwingJInternalFrameAdditional.procesarEventosVista(this.parametroGeneralUsuario,this.moduloActual,this.opcionActual,this.usuarioActual,this,FuncionTipo.AFTER,ControlTipo.DATE,EventoTipo.CHANGE,EventoSubTipo.CHANGED,sTipo,this.rubroemplea,new Object(),this.rubroempleaParameterGeneral,this.rubroempleaReturnGeneral);
				
				
				if(esUsoDesdeHijoLocal) {
					Long id=0L;
					
					generalEntityParameterGeneral.setEventoGlobalTipo(EventoGlobalTipo.FORM_HIJO_ACTUALIZAR);
					generalEntityParameterGeneral.setsDominio("Formulario");
					generalEntityParameterGeneral.setsDominioTipo(RubroEmplea.class.getName());
					
					if(this.jInternalFrameParent!=null) {
						this.jInternalFrameParent.setEventoParentGeneral(esUsoDesdeHijoLocal,"Formulario",RubroEmplea.class.getName(),sTipo,"DATE",esControlTabla,conIrServidorAplicacionParent,
							id,JFormattedTextField, EventoGlobalTipo.FORM_HIJO_ACTUALIZAR,ControlTipo.DATE,EventoTipo.CHANGE,EventoSubTipo.CHANGED,arrClasses,
							evt,generalEntityParameterGeneral,null);
					}
				}			
			}
			
		} catch(Exception e) {
  			FuncionesSwing.manageException2(this, e,logger,RubroEmpleaConstantesFunciones.CLASSNAME);
  		}
    }
	
	public void jFormattedTextFieldFocusLostGeneral(String sTipo,java.awt.event.FocusEvent evt) { 	  
		try {
			if(this.permiteManejarEventosControl() && this.existeCambioValor(ControlTipo.TEXTBOX,sTipo)) {
				EventoGlobalTipo eventoGlobalTipo=EventoGlobalTipo.CONTROL_CHANGE;
				
				Boolean esControlTabla=false;
				JTextField jTextField=null;
				Container containerParent=null;
				Container containerParentAux=null;
				Component componentOpposite=null;
				
				
				//PARAMETROS LLAMAR FUNCION PARENT
				GeneralEntityParameterGeneral generalEntityParameterGeneral=new GeneralEntityParameterGeneral();			
				Boolean esUsoDesdeHijoLocal=false;
				Boolean conIrServidorAplicacionParent=false;	
				ArrayList<String> arrClasses=new ArrayList<String>();			
				//PARAMETROS LLAMAR FUNCION PARENT_FIN
				
				/*
				if(this.esUsoDesdeHijo) {
					eventoGlobalTipo=EventoGlobalTipo.FORM_HIJO_ACTUALIZAR;
				}
				*/
				
				ArrayList<Classe> classes=new ArrayList<Classe>();
				
				jTextField=(JTextField)evt.getSource();
				
				containerParentAux=jTextField.getParent();
						
				if(containerParentAux!=null && containerParentAux.getClass().equals(JDateChooser.class)) {
					containerParent=containerParentAux.getParent();
				}
				
				componentOpposite=evt.getOppositeComponent();
				
				if((containerParent!=null && containerParent.getClass().equals(JTableMe.class))
					|| (componentOpposite!=null && componentOpposite.getClass().equals(JTableMe.class))
				) {					
					esControlTabla=true;
				}
				
				this.esControlTabla=esControlTabla;
				
				
				this.actualizarInformacion("EVENTO_CONTROL",false,this.rubroemplea);
				
				this.actualizarInformacion("INFO_PADRE",false,this.rubroemplea);
				
				RubroEmpleaBeanSwingJInternalFrameAdditional.procesarEventosVista(this.parametroGeneralUsuario,this.moduloActual,this.opcionActual,this.usuarioActual,this,FuncionTipo.BEFORE,ControlTipo.DATE,EventoTipo.CHANGE,EventoSubTipo.CHANGED,sTipo,this.rubroemplea,new Object(),this.rubroempleaParameterGeneral,this.rubroempleaReturnGeneral);
								
				
				


				
				RubroEmpleaBeanSwingJInternalFrameAdditional.procesarEventosVista(this.parametroGeneralUsuario,this.moduloActual,this.opcionActual,this.usuarioActual,this,FuncionTipo.AFTER,ControlTipo.DATE,EventoTipo.CHANGE,EventoSubTipo.CHANGED,sTipo,this.rubroemplea,new Object(),this.rubroempleaParameterGeneral,this.rubroempleaReturnGeneral);
				
				
				if(esUsoDesdeHijoLocal) {
					Long id=0L;
					
					generalEntityParameterGeneral.setEventoGlobalTipo(EventoGlobalTipo.FORM_HIJO_ACTUALIZAR);
					generalEntityParameterGeneral.setsDominio("Formulario");
					generalEntityParameterGeneral.setsDominioTipo(RubroEmplea.class.getName());
					
					if(this.jInternalFrameParent!=null) {
						this.jInternalFrameParent.setEventoParentGeneral(esUsoDesdeHijoLocal,"Formulario",RubroEmplea.class.getName(),sTipo,"TEXTFIELD",esControlTabla,conIrServidorAplicacionParent,
							id,jTextField, EventoGlobalTipo.FORM_HIJO_ACTUALIZAR,ControlTipo.TEXTBOX,EventoTipo.CHANGE,EventoSubTipo.CHANGED,arrClasses,
							evt,generalEntityParameterGeneral,null);
					}
				}			
			}
			
		} catch(Exception e) {
  			FuncionesSwing.manageException2(this, e,logger,RubroEmpleaConstantesFunciones.CLASSNAME);
  		}
    }
	
	public void jFormattedTextFieldFocusGainedGeneral(String sTipo,java.awt.event.FocusEvent evt) { 	  
		try {
			//SELECCIONA FILA A OBJETO ACTUAL			
			this.seleccionarFilaTablaRubroEmpleaActual();
			
			//SELECCIONA FILA A OBJETO ANTERIOR
			Integer intSelectedRow = this.jTableDatosRubroEmplea.getSelectedRow();
					
			if(intSelectedRow!=null && intSelectedRow>-1) {
				//ARCHITECTURE
				if(Constantes.ISUSAEJBLOGICLAYER) {
					this.rubroempleaAnterior =(RubroEmplea) this.rubroempleaLogic.getRubroEmpleas().toArray()[this.jTableDatosRubroEmplea.convertRowIndexToModel(intSelectedRow)];
				} else if(Constantes.ISUSAEJBREMOTE || Constantes.ISUSAEJBHOME ) {
					this.rubroempleaAnterior =(RubroEmplea) this.rubroempleas.toArray()[this.jTableDatosRubroEmplea.convertRowIndexToModel(intSelectedRow)];
				}
				//ARCHITECTURE
				
				//System.out.println(this.banco);
			}
			
		} catch(Exception e) {
  			FuncionesSwing.manageException2(this, e,logger,RubroEmpleaConstantesFunciones.CLASSNAME);
  		}
    }	
	
	public void jDateChooserFocusLostGeneral(String sTipo,java.awt.event.FocusEvent evt) { 	  
		try {
			if(this.permiteManejarEventosControl() && this.existeCambioValor(ControlTipo.DATE,sTipo)) {
				this.actualizarInformacion("EVENTO_CONTROL",false,this.rubroemplea);
				
				this.actualizarInformacion("INFO_PADRE",false,this.rubroemplea);
			}	
		} catch(Exception e) {
  			FuncionesSwing.manageException2(this, e,logger,RubroEmpleaConstantesFunciones.CLASSNAME);
  		}
    }	
	
	public void jDateChooserFocusGainedGeneral(String sTipo,java.awt.event.FocusEvent evt) { 	  
		try {
			//SELECCIONA FILA A OBJETO ACTUAL			
			this.seleccionarFilaTablaRubroEmpleaActual();
			
			//SELECCIONA FILA A OBJETO ANTERIOR
			Integer intSelectedRow = this.jTableDatosRubroEmplea.getSelectedRow();
					
			if(intSelectedRow!=null && intSelectedRow>-1) {
				//ARCHITECTURE
				if(Constantes.ISUSAEJBLOGICLAYER) {
					this.rubroempleaAnterior =(RubroEmplea) this.rubroempleaLogic.getRubroEmpleas().toArray()[this.jTableDatosRubroEmplea.convertRowIndexToModel(intSelectedRow)];
				} else if(Constantes.ISUSAEJBREMOTE || Constantes.ISUSAEJBHOME ) {
					this.rubroempleaAnterior =(RubroEmplea) this.rubroempleas.toArray()[this.jTableDatosRubroEmplea.convertRowIndexToModel(intSelectedRow)];
				}
				//ARCHITECTURE
				
				//System.out.println(this.banco);
			}
		} catch(Exception e) {
  			FuncionesSwing.manageException2(this, e,logger,RubroEmpleaConstantesFunciones.CLASSNAME);
  		}
    }	
	
	public void jDateChooserActionPerformedGeneral(String sTipo,ActionEvent evt) { 	  
		try {
			
			//SELECCIONA FILA A OBJETO ACTUAL			
			this.seleccionarFilaTablaRubroEmpleaActual();
				
			this.actualizarInformacion("EVENTO_CONTROL",false,this.rubroemplea);
			
			this.actualizarInformacion("INFO_PADRE",false,this.rubroemplea);
				
		} catch(Exception e) {
  			FuncionesSwing.manageException2(this, e,logger,RubroEmpleaConstantesFunciones.CLASSNAME);
  		}
    }	
	
	public void jTextAreaFocusLostGeneral(String sTipo,java.awt.event.FocusEvent evt) { 	  
		try {
			if(this.permiteManejarEventosControl() && this.existeCambioValor(ControlTipo.TEXTAREA,sTipo)) {
				EventoGlobalTipo eventoGlobalTipo=EventoGlobalTipo.CONTROL_CHANGE;
				
				Boolean esControlTabla=false;
				JTextArea jTextArea=null;
				Container containerParent=null;
				Component componentOpposite=null;
				
				//PARAMETROS LLAMAR FUNCION PARENT
				GeneralEntityParameterGeneral generalEntityParameterGeneral=new GeneralEntityParameterGeneral();			
				Boolean esUsoDesdeHijoLocal=false;
				Boolean conIrServidorAplicacionParent=false;	
				ArrayList<String> arrClasses=new ArrayList<String>();			
				//PARAMETROS LLAMAR FUNCION PARENT_FIN
				
				/*
				if(this.esUsoDesdeHijo) {
					eventoGlobalTipo=EventoGlobalTipo.FORM_HIJO_ACTUALIZAR;
				}
				*/
				
				ArrayList<Classe> classes=new ArrayList<Classe>();
				
				jTextArea=(JTextArea)evt.getSource();
				
				containerParent=jTextArea.getParent();
				componentOpposite=evt.getOppositeComponent();
				
				if((containerParent!=null && containerParent.getClass().equals(JTableMe.class))
					|| (componentOpposite!=null && componentOpposite.getClass().equals(JTableMe.class))
				) {
					esControlTabla=true;
				}
				
				this.esControlTabla=esControlTabla;
				
				
				this.actualizarInformacion("EVENTO_CONTROL",false,this.rubroemplea);
				
				this.actualizarInformacion("INFO_PADRE",false,this.rubroemplea);
				
				RubroEmpleaBeanSwingJInternalFrameAdditional.procesarEventosVista(this.parametroGeneralUsuario,this.moduloActual,this.opcionActual,this.usuarioActual,this,FuncionTipo.BEFORE,ControlTipo.TEXTAREA,EventoTipo.CHANGE,EventoSubTipo.CHANGED,sTipo,this.rubroemplea,new Object(),this.rubroempleaParameterGeneral,this.rubroempleaReturnGeneral);
							
				
				


				
				RubroEmpleaBeanSwingJInternalFrameAdditional.procesarEventosVista(this.parametroGeneralUsuario,this.moduloActual,this.opcionActual,this.usuarioActual,this,FuncionTipo.AFTER,ControlTipo.TEXTAREA,EventoTipo.CHANGE,EventoSubTipo.CHANGED,sTipo,this.rubroemplea,new Object(),this.rubroempleaParameterGeneral,this.rubroempleaReturnGeneral);
				
				
				if(esUsoDesdeHijoLocal) {
					Long id=0L;
					
					generalEntityParameterGeneral.setEventoGlobalTipo(EventoGlobalTipo.FORM_HIJO_ACTUALIZAR);
					generalEntityParameterGeneral.setsDominio("Formulario");
					generalEntityParameterGeneral.setsDominioTipo(RubroEmplea.class.getName());
					
					if(this.jInternalFrameParent!=null) {
						this.jInternalFrameParent.setEventoParentGeneral(esUsoDesdeHijoLocal,"Formulario",RubroEmplea.class.getName(),sTipo,"TEXTAREA",esControlTabla,conIrServidorAplicacionParent,
							id,jTextArea, EventoGlobalTipo.FORM_HIJO_ACTUALIZAR,ControlTipo.TEXTAREA,EventoTipo.CHANGE,EventoSubTipo.CHANGED,arrClasses,
							evt,generalEntityParameterGeneral,null);
					}
				}			
			}
			
		} catch(Exception e) {
  			FuncionesSwing.manageException2(this, e,logger,RubroEmpleaConstantesFunciones.CLASSNAME);
  		}
    }
	
	public void jTextAreaFocusGainedGeneral(String sTipo,java.awt.event.FocusEvent evt) { 	  
		try {
			if(this.permiteManejarEventosControl()) {
				//SELECCIONA FILA A OBJETO ACTUAL			
				this.seleccionarFilaTablaRubroEmpleaActual();
			
				//SELECCIONA FILA A OBJETO ANTERIOR
				Integer intSelectedRow = this.jTableDatosRubroEmplea.getSelectedRow();
						
				if(intSelectedRow!=null && intSelectedRow>-1) {
					//ARCHITECTURE
					if(Constantes.ISUSAEJBLOGICLAYER) {
						this.rubroempleaAnterior =(RubroEmplea) this.rubroempleaLogic.getRubroEmpleas().toArray()[this.jTableDatosRubroEmplea.convertRowIndexToModel(intSelectedRow)];
					} else if(Constantes.ISUSAEJBREMOTE || Constantes.ISUSAEJBHOME ) {
						this.rubroempleaAnterior =(RubroEmplea) this.rubroempleas.toArray()[this.jTableDatosRubroEmplea.convertRowIndexToModel(intSelectedRow)];
					}
					//ARCHITECTURE
					
					//System.out.println(this.banco);
				}
			}
		} catch(Exception e) {
  			FuncionesSwing.manageException2(this, e,logger,RubroEmpleaConstantesFunciones.CLASSNAME);
  		}
    }
	
	public void jTextAreaChangedUpdateGeneral(String sTipo,JTextArea jTextArea,DocumentEvent evt) { 	  
		try {
			/*
			EventoGlobalTipo eventoGlobalTipo=EventoGlobalTipo.CONTROL_CHANGE;
			
			//System.out.println("UPDATE");
			
			Boolean esControlTabla=false;
			//JTextArea jTextArea=null;
			Container containerParent=null;
			Component componentOpposite=null;
			
			if(this.esUsoDesdeHijo) {
				eventoGlobalTipo=EventoGlobalTipo.FORM_HIJO_ACTUALIZAR;
			}
			
			RubroEmpleaBeanSwingJInternalFrameAdditional.procesarEventosVista(this.parametroGeneralUsuario,this.moduloActual,this.opcionActual,this.usuarioActual,this,FuncionTipo.BEFORE,ControlTipo.TEXTAREA,EventoTipo.CHANGE,EventoSubTipo.CHANGED,sTipo,this.rubroemplea,new Object(),this.rubroempleaParameterGeneral,this.rubroempleaReturnGeneral);
			
			ArrayList<Classe> classes=new ArrayList<Classe>();
			
			//jTextArea=(JTextArea)evt.getSource();
			
			containerParent=jTextArea.getParent();
			componentOpposite=null;//evt.getOppositeComponent();
			
			if((containerParent!=null && containerParent.getClass().equals(JTableMe.class))
				|| (componentOpposite!=null && componentOpposite.getClass().equals(JTableMe.class))
			) {
				esControlTabla=true;
			}
			
			this.esControlTabla=esControlTabla;
			
			


			
			RubroEmpleaBeanSwingJInternalFrameAdditional.procesarEventosVista(this.parametroGeneralUsuario,this.moduloActual,this.opcionActual,this.usuarioActual,this,FuncionTipo.AFTER,ControlTipo.TEXTAREA,EventoTipo.CHANGE,EventoSubTipo.CHANGED,sTipo,this.rubroemplea,new Object(),this.rubroempleaParameterGeneral,this.rubroempleaReturnGeneral);
			
			*/
  		} catch(Exception e) {
  			FuncionesSwing.manageException2(this, e,logger,RubroEmpleaConstantesFunciones.CLASSNAME);
  		}
    }
	
	public void jTextAreaRemoveUpdateGeneral(String sTipo,JTextArea jTextArea,DocumentEvent evt) { 	  
		try {
			//System.out.println("REMOVE");
			
  		} catch(Exception e) {
  			FuncionesSwing.manageException2(this, e,logger,RubroEmpleaConstantesFunciones.CLASSNAME);
  		}
    }
	
	public void jTextAreaInsertUpdateGeneral(String sTipo,JTextArea jTextArea,DocumentEvent evt) { 	  
		try {
			
			//System.out.println("INSERT");
			
  		} catch(Exception e) {
  			FuncionesSwing.manageException2(this, e,logger,RubroEmpleaConstantesFunciones.CLASSNAME);
  		}
    }
	
	//NO EXISTE O NO ES APLICABLE
	public void jTextAreaActionPerformedGeneral(String sTipo,ActionEvent evt) { 	  
		try {
			//SELECCIONA FILA A OBJETO ACTUAL			
			this.seleccionarFilaTablaRubroEmpleaActual();
			
			this.actualizarInformacion("EVENTO_CONTROL",false,this.rubroemplea);
			
			this.actualizarInformacion("INFO_PADRE",false,this.rubroemplea);
				
		} catch(Exception e) {
  			FuncionesSwing.manageException2(this, e,logger,RubroEmpleaConstantesFunciones.CLASSNAME);
  		}
    }
	
	public void jLabelFocusLostGeneral(String sTipo,java.awt.event.FocusEvent evt) { 	  
		try {
			if(this.permiteManejarEventosControl()) {
				EventoGlobalTipo eventoGlobalTipo=EventoGlobalTipo.CONTROL_CHANGE;
				
				Boolean esControlTabla=false;
				JLabel jLabel=null;
				Container containerParent=null;
				Component componentOpposite=null;
				
				
				//PARAMETROS LLAMAR FUNCION PARENT
				GeneralEntityParameterGeneral generalEntityParameterGeneral=new GeneralEntityParameterGeneral();			
				Boolean esUsoDesdeHijoLocal=false;
				Boolean conIrServidorAplicacionParent=false;	
				ArrayList<String> arrClasses=new ArrayList<String>();			
				//PARAMETROS LLAMAR FUNCION PARENT_FIN
				
				
				/*
				if(this.esUsoDesdeHijo) {
					eventoGlobalTipo=EventoGlobalTipo.FORM_HIJO_ACTUALIZAR;
				}
				*/
				
				ArrayList<Classe> classes=new ArrayList<Classe>();
				
				jLabel=(JLabel)evt.getSource();
				
				containerParent=jLabel.getParent();
						
				componentOpposite=evt.getOppositeComponent();
				
				if((containerParent!=null && containerParent.getClass().equals(JTableMe.class))
					|| (componentOpposite!=null && componentOpposite.getClass().equals(JTableMe.class))
				) {					
					esControlTabla=true;
				}
				
				this.esControlTabla=esControlTabla;
				
				
				this.actualizarInformacion("EVENTO_CONTROL",false,this.rubroemplea);
				
				this.actualizarInformacion("INFO_PADRE",false,this.rubroemplea);
				
				RubroEmpleaBeanSwingJInternalFrameAdditional.procesarEventosVista(this.parametroGeneralUsuario,this.moduloActual,this.opcionActual,this.usuarioActual,this,FuncionTipo.BEFORE,ControlTipo.TEXTBOX,EventoTipo.CHANGE,EventoSubTipo.CHANGED,sTipo,this.rubroemplea,new Object(),this.rubroempleaParameterGeneral,this.rubroempleaReturnGeneral);
								
				
				


				
				RubroEmpleaBeanSwingJInternalFrameAdditional.procesarEventosVista(this.parametroGeneralUsuario,this.moduloActual,this.opcionActual,this.usuarioActual,this,FuncionTipo.AFTER,ControlTipo.TEXTBOX,EventoTipo.CHANGE,EventoSubTipo.CHANGED,sTipo,this.rubroemplea,new Object(),this.rubroempleaParameterGeneral,this.rubroempleaReturnGeneral);
				
				
				if(esUsoDesdeHijoLocal) {
					Long id=0L;
					
					generalEntityParameterGeneral.setEventoGlobalTipo(EventoGlobalTipo.FORM_HIJO_ACTUALIZAR);
					generalEntityParameterGeneral.setsDominio("Formulario");
					generalEntityParameterGeneral.setsDominioTipo(RubroEmplea.class.getName());
					
					if(this.jInternalFrameParent!=null) {
						this.jInternalFrameParent.setEventoParentGeneral(esUsoDesdeHijoLocal,"Formulario",RubroEmplea.class.getName(),sTipo,"TEXTFIELD",esControlTabla,conIrServidorAplicacionParent,
							id,jLabel, EventoGlobalTipo.FORM_HIJO_ACTUALIZAR,ControlTipo.TEXTBOX,EventoTipo.CHANGE,EventoSubTipo.CHANGED,arrClasses,
							evt,generalEntityParameterGeneral,null);
					}
				}			
			}	
			
		} catch(Exception e) {
  			FuncionesSwing.manageException2(this, e,logger,RubroEmpleaConstantesFunciones.CLASSNAME);
  		}
    }
	
	public void jLabelFocusGainedGeneral(String sTipo,java.awt.event.FocusEvent evt) { 	  
		try {
			//SELECCIONA FILA A OBJETO ACTUAL			
			this.seleccionarFilaTablaRubroEmpleaActual();
			
			//SELECCIONA FILA A OBJETO ANTERIOR
			Integer intSelectedRow = this.jTableDatosRubroEmplea.getSelectedRow();
					
			if(intSelectedRow!=null && intSelectedRow>-1) {
				//ARCHITECTURE
				if(Constantes.ISUSAEJBLOGICLAYER) {
					this.rubroempleaAnterior =(RubroEmplea) this.rubroempleaLogic.getRubroEmpleas().toArray()[this.jTableDatosRubroEmplea.convertRowIndexToModel(intSelectedRow)];
				} else if(Constantes.ISUSAEJBREMOTE || Constantes.ISUSAEJBHOME ) {
					this.rubroempleaAnterior =(RubroEmplea) this.rubroempleas.toArray()[this.jTableDatosRubroEmplea.convertRowIndexToModel(intSelectedRow)];
				}
				//ARCHITECTURE
				
				//System.out.println(this.banco);
			}
		} catch(Exception e) {
  			FuncionesSwing.manageException2(this, e,logger,RubroEmpleaConstantesFunciones.CLASSNAME);
  		}
    }
	
	//NO EXISTE O NO ES APLICABLE
	public void jLabelActionPerformedGeneral(String sTipo,ActionEvent evt) { 	  
		try {
			
			//SELECCIONA FILA A OBJETO ACTUAL			
			this.seleccionarFilaTablaRubroEmpleaActual();
				
			this.actualizarInformacion("EVENTO_CONTROL",false,this.rubroemplea);
			
			this.actualizarInformacion("INFO_PADRE",false,this.rubroemplea);
				
		} catch(Exception e) {
  			FuncionesSwing.manageException2(this, e,logger,RubroEmpleaConstantesFunciones.CLASSNAME);
  		}
    }
	
	public void jCheckBoxItemListenerGeneral(String sTipo,ItemEvent evt) { 	  
		try {
			if(this.permiteManejarEventosControl()) {
				//SELECCIONA FILA A OBJETO ACTUAL			
				this.seleccionarFilaTablaRubroEmpleaActual();
				
				EventoGlobalTipo eventoGlobalTipo=EventoGlobalTipo.CONTROL_CHANGE;
				
				Boolean esControlTabla=false;
				JCheckBox jCheckBox=null;
				Container containerParent=null;
				Component componentOpposite=null;
				
							
				//PARAMETROS LLAMAR FUNCION PARENT
				GeneralEntityParameterGeneral generalEntityParameterGeneral=new GeneralEntityParameterGeneral();			
				Boolean esUsoDesdeHijoLocal=false;
				Boolean conIrServidorAplicacionParent=false;	
				ArrayList<String> arrClasses=new ArrayList<String>();			
				//PARAMETROS LLAMAR FUNCION PARENT_FIN
				
				
				/*
				if(this.esUsoDesdeHijo) {
					eventoGlobalTipo=EventoGlobalTipo.FORM_HIJO_ACTUALIZAR;
				}
				*/
				
				ArrayList<Classe> classes=new ArrayList<Classe>();
				
				jCheckBox=(JCheckBox)evt.getSource();
				
				containerParent=jCheckBox.getParent();
						
				componentOpposite=null;//evt.getOppositeComponent();
				
				if((containerParent!=null && containerParent.getClass().equals(JTableMe.class))
					|| (componentOpposite!=null && componentOpposite.getClass().equals(JTableMe.class))
				) {					
					esControlTabla=true;
				}
				
				this.esControlTabla=esControlTabla;
				
				
				this.actualizarInformacion("EVENTO_CONTROL",false,this.rubroemplea);
				
				this.actualizarInformacion("INFO_PADRE",false,this.rubroemplea);
				
				RubroEmpleaBeanSwingJInternalFrameAdditional.procesarEventosVista(this.parametroGeneralUsuario,this.moduloActual,this.opcionActual,this.usuarioActual,this,FuncionTipo.BEFORE,ControlTipo.CHECKBOX,EventoTipo.CLIC,EventoSubTipo.CLICKED,sTipo,this.rubroemplea,new Object(),this.rubroempleaParameterGeneral,this.rubroempleaReturnGeneral);
												
				
				if(sTipo.equals("SeleccionarTodosRubroEmplea")) {
					jCheckBoxSeleccionarTodosRubroEmpleaItemListener(evt);
				
				} else if(sTipo.equals("SeleccionadosRubroEmplea")) {
					jCheckBoxSeleccionadosRubroEmpleaItemListener(evt);
				
				} else if(sTipo.equals("NuevoToolBarRubroEmplea")) {
					
				}
				
				


				
				
				RubroEmpleaBeanSwingJInternalFrameAdditional.procesarEventosVista(this.parametroGeneralUsuario,this.moduloActual,this.opcionActual,this.usuarioActual,this,FuncionTipo.AFTER,ControlTipo.CHECKBOX,EventoTipo.CLIC,EventoSubTipo.CLICKED,sTipo,this.rubroemplea,new Object(),this.rubroempleaParameterGeneral,this.rubroempleaReturnGeneral);
				
				
				if(esUsoDesdeHijoLocal) {
					Long id=0L;
					
					generalEntityParameterGeneral.setEventoGlobalTipo(EventoGlobalTipo.FORM_HIJO_ACTUALIZAR);
					generalEntityParameterGeneral.setsDominio("Formulario");
					generalEntityParameterGeneral.setsDominioTipo(RubroEmplea.class.getName());
					
					if(this.jInternalFrameParent!=null) {
						this.jInternalFrameParent.setEventoParentGeneral(esUsoDesdeHijoLocal,"Formulario",RubroEmplea.class.getName(),sTipo,"TEXTFIELD",esControlTabla,conIrServidorAplicacionParent,
							id,jCheckBox, EventoGlobalTipo.FORM_HIJO_ACTUALIZAR,ControlTipo.CHECKBOX,EventoTipo.CLIC,EventoSubTipo.CLICKED,arrClasses,
							evt,generalEntityParameterGeneral,null);
					}
				}			
			}	
			
  		} catch(Exception e) {
  			FuncionesSwing.manageException2(this, e,logger,RubroEmpleaConstantesFunciones.CLASSNAME);
  		}
    }
	
	public void jCheckBoxFocusLostGeneral(String sTipo,java.awt.event.FocusEvent evt) { 	  
		try {
			if(this.permiteManejarEventosControl() && this.existeCambioValor(ControlTipo.CHECKBOX,sTipo)) {
				EventoGlobalTipo eventoGlobalTipo=EventoGlobalTipo.CONTROL_CHANGE;
				
				Boolean esControlTabla=false;
				JCheckBox jCheckBox=null;
				Container containerParent=null;
				Component componentOpposite=null;
				
				
				//PARAMETROS LLAMAR FUNCION PARENT
				GeneralEntityParameterGeneral generalEntityParameterGeneral=new GeneralEntityParameterGeneral();			
				Boolean esUsoDesdeHijoLocal=false;
				Boolean conIrServidorAplicacionParent=false;	
				ArrayList<String> arrClasses=new ArrayList<String>();			
				//PARAMETROS LLAMAR FUNCION PARENT_FIN
				
				
				ArrayList<Classe> classes=new ArrayList<Classe>();
				
				jCheckBox=(JCheckBox)evt.getSource();
				
				containerParent=jCheckBox.getParent();
						
				componentOpposite=evt.getOppositeComponent();
				
				if((containerParent!=null && containerParent.getClass().equals(JTableMe.class))
					|| (componentOpposite!=null && componentOpposite.getClass().equals(JTableMe.class))
				) {					
					esControlTabla=true;
				}
				
				this.esControlTabla=esControlTabla;
				
				
				/*
				if(this.esUsoDesdeHijo) {
					eventoGlobalTipo=EventoGlobalTipo.FORM_HIJO_ACTUALIZAR;
				}
				*/
				
				//this.actualizarInformacion("EVENTO_CONTROL",false,this.rubroemplea);
				
				//this.actualizarInformacion("INFO_PADRE",false,this.rubroemplea);
				
				RubroEmpleaBeanSwingJInternalFrameAdditional.procesarEventosVista(this.parametroGeneralUsuario,this.moduloActual,this.opcionActual,this.usuarioActual,this,FuncionTipo.BEFORE,ControlTipo.CHECKBOX,EventoTipo.CLIC,EventoSubTipo.CLICKED,sTipo,this.rubroemplea,new Object(),this.rubroempleaParameterGeneral,this.rubroempleaReturnGeneral);
												
				
				


				
				
				RubroEmpleaBeanSwingJInternalFrameAdditional.procesarEventosVista(this.parametroGeneralUsuario,this.moduloActual,this.opcionActual,this.usuarioActual,this,FuncionTipo.AFTER,ControlTipo.CHECKBOX,EventoTipo.CLIC,EventoSubTipo.CLICKED,sTipo,this.rubroemplea,new Object(),this.rubroempleaParameterGeneral,this.rubroempleaReturnGeneral);
				
				
				if(esUsoDesdeHijoLocal) {
					Long id=0L;
				
					generalEntityParameterGeneral.setEventoGlobalTipo(EventoGlobalTipo.FORM_HIJO_ACTUALIZAR);
					generalEntityParameterGeneral.setsDominio("Formulario");
					generalEntityParameterGeneral.setsDominioTipo(RubroEmplea.class.getName());
					
					if(this.jInternalFrameParent!=null) {
						this.jInternalFrameParent.setEventoParentGeneral(esUsoDesdeHijoLocal,"Formulario",RubroEmplea.class.getName(),sTipo,"TEXTFIELD",esControlTabla,conIrServidorAplicacionParent,
							id,jCheckBox, EventoGlobalTipo.FORM_HIJO_ACTUALIZAR,ControlTipo.CHECKBOX,EventoTipo.CLIC,EventoSubTipo.CLICKED,arrClasses,
							evt,generalEntityParameterGeneral,null);
					}
				}			
			}
			
  		} catch(Exception e) {
  			FuncionesSwing.manageException2(this, e,logger,RubroEmpleaConstantesFunciones.CLASSNAME);
  		}
    }
	
	public void jCheckBoxFocusGainedGeneral(String sTipo,java.awt.event.FocusEvent evt) { 	  
		try {
			if(this.permiteManejarEventosControl()) {
				//SELECCIONA FILA A OBJETO ACTUAL			
				this.seleccionarFilaTablaRubroEmpleaActual();
			
				//SELECCIONA FILA A OBJETO ANTERIOR
				Integer intSelectedRow = this.jTableDatosRubroEmplea.getSelectedRow();
						
				if(intSelectedRow!=null && intSelectedRow>-1) {
					//ARCHITECTURE
					if(Constantes.ISUSAEJBLOGICLAYER) {
						this.rubroempleaAnterior =(RubroEmplea) this.rubroempleaLogic.getRubroEmpleas().toArray()[this.jTableDatosRubroEmplea.convertRowIndexToModel(intSelectedRow)];
					} else if(Constantes.ISUSAEJBREMOTE || Constantes.ISUSAEJBHOME ) {
						this.rubroempleaAnterior =(RubroEmplea) this.rubroempleas.toArray()[this.jTableDatosRubroEmplea.convertRowIndexToModel(intSelectedRow)];
					}
					//ARCHITECTURE
					
					//System.out.println(this.banco);
				}
			}
  		} catch(Exception e) {
  			FuncionesSwing.manageException2(this, e,logger,RubroEmpleaConstantesFunciones.CLASSNAME);
  		}
    }
	
	public void jCheckBoxActionPerformedGeneral(String sTipo,ActionEvent evt) { 	  
		try {
			if(this.permiteManejarEventosControl()) {
				
				//SELECCIONA FILA A OBJETO ACTUAL			
				this.seleccionarFilaTablaRubroEmpleaActual();
				
				this.actualizarInformacion("EVENTO_CONTROL",false,this.rubroemplea);
				
				this.actualizarInformacion("INFO_PADRE",false,this.rubroemplea);
				
				RubroEmpleaBeanSwingJInternalFrameAdditional.procesarEventosVista(this.parametroGeneralUsuario,this.moduloActual,this.opcionActual,this.usuarioActual,this,FuncionTipo.BEFORE,ControlTipo.CHECKBOX,EventoTipo.CLIC,EventoSubTipo.CLICKED,sTipo,this.rubroemplea,new Object(),this.rubroempleaParameterGeneral,this.rubroempleaReturnGeneral);
				
				
				RubroEmpleaBeanSwingJInternalFrameAdditional.procesarEventosVista(this.parametroGeneralUsuario,this.moduloActual,this.opcionActual,this.usuarioActual,this,FuncionTipo.AFTER,ControlTipo.CHECKBOX,EventoTipo.CLIC,EventoSubTipo.CLICKED,sTipo,this.rubroemplea,new Object(),this.rubroempleaParameterGeneral,this.rubroempleaReturnGeneral);
			}
			
  		} catch(Exception e) {
  			FuncionesSwing.manageException2(this, e,logger,RubroEmpleaConstantesFunciones.CLASSNAME);
  		}
    }
	
	//NO SE UTILIZA, SE USA EL DE ABAJO, IGUAL SE DEJA EL CODIGO COMO RESPALDO Y ES CASI IGUAL
	//ERROR:SI SE USA,AL HACER CLIC EN EL MISMO ELEMENTO O EJECUTAR SELECTEDITEM, SIEMPRE SE EJECUTA COMO SI ESCOGIERA OTRO ELEMENTO(NO DEBERIA)
	//@SuppressWarnings("rawtypes")
	public void jComboBoxActionPerformedGeneral(String sTipo,ActionEvent evt) {		
		try {
			/*		
			EventoGlobalTipo eventoGlobalTipo=EventoGlobalTipo.CONTROL_CHANGE;
			
			if(this.esUsoDesdeHijo) {
				eventoGlobalTipo=EventoGlobalTipo.FORM_HIJO_ACTUALIZAR;
			}
			
			Container containerParent=null;
			Component componentOpposite=null;
			Boolean esControlTabla=false;
				
			ArrayList<Classe> classes=new ArrayList<Classe>();
			
			RubroEmpleaBeanSwingJInternalFrameAdditional.procesarEventosVista(this.parametroGeneralUsuario,this.moduloActual,this.opcionActual,this.usuarioActual,this,FuncionTipo.BEFORE,ControlTipo.COMBOBOX,EventoTipo.CHANGE,EventoSubTipo.CLICKED,sTipo,this.rubroemplea,new Object(),this.rubroempleaParameterGeneral,this.rubroempleaReturnGeneral);
			JComboBox jComboBoxGenerico=null;						
			
			if(evt.getSource().getClass().equals(JComboBox.class)
				|| evt.getSource().getClass().equals(JComboBoxMe.class)) {
					
				jComboBoxGenerico=(JComboBox)evt.getSource();
				
				containerParent=jComboBoxGenerico.getParent();
				
				componentOpposite=null;//evt.getOppositeComponent();
				
				if((containerParent!=null && containerParent.getClass().equals(JTableMe.class))
					|| (componentOpposite!=null && componentOpposite.getClass().equals(JTableMe.class))
				) {					
					esControlTabla=true;
				}
				
				this.esControlTabla=esControlTabla;
			}
			
			String sFinalQueryCombo="";
			
			


			
			RubroEmpleaBeanSwingJInternalFrameAdditional.procesarEventosVista(this.parametroGeneralUsuario,this.moduloActual,this.opcionActual,this.usuarioActual,this,FuncionTipo.AFTER,ControlTipo.COMBOBOX,EventoTipo.CHANGE,EventoSubTipo.CHANGED,sTipo,this.rubroemplea,new Object(),this.rubroempleaParameterGeneral,this.rubroempleaReturnGeneral);
			*/						
  		} catch(Exception e) {
  			FuncionesSwing.manageException2(this, e,logger,RubroEmpleaConstantesFunciones.CLASSNAME);
  		}		
    }
	
	@SuppressWarnings("rawtypes")
	public void jComboBoxItemStateChangedGeneral(String sTipo,ItemEvent evt) { 	  
		try {
			if (evt.getStateChange() == ItemEvent.SELECTED && this.permiteManejarEventosControl()) {
				//SELECCIONA FILA A OBJETO ACTUAL			
				this.seleccionarFilaTablaRubroEmpleaActual();
			
				//PARAMETROS LLAMAR FUNCION PARENT
				GeneralEntityParameterGeneral generalEntityParameterGeneral=new GeneralEntityParameterGeneral();			
				Boolean esUsoDesdeHijoLocal=false;
				Boolean conIrServidorAplicacionParent=false;	
				ArrayList<String> arrClasses=new ArrayList<String>();			
				//PARAMETROS LLAMAR FUNCION PARENT_FIN
			
			
				EventoGlobalTipo eventoGlobalTipo=EventoGlobalTipo.CONTROL_CHANGE;
				
				/*
				if(this.esUsoDesdeHijo) {
					eventoGlobalTipo=EventoGlobalTipo.FORM_HIJO_ACTUALIZAR;
				}
				*/
				
				Container containerParent=null;
				Component componentOpposite=null;
				Boolean esControlTabla=false;
				
				ArrayList<Classe> classes=new ArrayList<Classe>();
				
				JComboBox jComboBoxGenerico=null;						
				
				if(evt.getSource().getClass().equals(JComboBox.class)
					|| evt.getSource().getClass().equals(JComboBoxMe.class)) {
						
					jComboBoxGenerico=(JComboBox)evt.getSource();
					
					containerParent=jComboBoxGenerico.getParent();
					
					componentOpposite=null;//evt.getOppositeComponent();
					
					if((containerParent!=null && containerParent.getClass().equals(JTableMe.class))
					|| (componentOpposite!=null && componentOpposite.getClass().equals(JTableMe.class))
					) {					
						esControlTabla=true;
					}		
					
					this.esControlTabla=esControlTabla;
				}
				
				
				this.actualizarInformacion("EVENTO_CONTROL",false,this.rubroemplea);
				
				this.actualizarInformacion("INFO_PADRE",false,this.rubroemplea);
				
				RubroEmpleaBeanSwingJInternalFrameAdditional.procesarEventosVista(this.parametroGeneralUsuario,this.moduloActual,this.opcionActual,this.usuarioActual,this,FuncionTipo.BEFORE,ControlTipo.COMBOBOX,EventoTipo.CHANGE,EventoSubTipo.CLICKED,sTipo,this.rubroemplea,new Object(),this.rubroempleaParameterGeneral,this.rubroempleaReturnGeneral);
				
				
				String sFinalQueryCombo="";
				
				


				
				RubroEmpleaBeanSwingJInternalFrameAdditional.procesarEventosVista(this.parametroGeneralUsuario,this.moduloActual,this.opcionActual,this.usuarioActual,this,FuncionTipo.AFTER,ControlTipo.COMBOBOX,EventoTipo.CHANGE,EventoSubTipo.CHANGED,sTipo,this.rubroemplea,new Object(),this.rubroempleaParameterGeneral,this.rubroempleaReturnGeneral);
				
				if(esUsoDesdeHijoLocal) {
					Long id=0L;
				
					generalEntityParameterGeneral.setEventoGlobalTipo(EventoGlobalTipo.FORM_HIJO_ACTUALIZAR);
					generalEntityParameterGeneral.setsDominio("Formulario");
					generalEntityParameterGeneral.setsDominioTipo(RubroEmplea.class.getName());
								
					if(this.jInternalFrameParent!=null) {
						this.jInternalFrameParent.setEventoParentGeneral(esUsoDesdeHijoLocal,"Formulario",RubroEmplea.class.getName(),sTipo,"COMBOBOX",esControlTabla,conIrServidorAplicacionParent,
							id,jComboBoxGenerico, EventoGlobalTipo.FORM_HIJO_ACTUALIZAR,ControlTipo.COMBOBOX,EventoTipo.CHANGE,EventoSubTipo.CHANGED,arrClasses,
							evt,generalEntityParameterGeneral,null);
					}
				}			
			}
  		} catch(Exception e) {
  			FuncionesSwing.manageException2(this, e,logger,RubroEmpleaConstantesFunciones.CLASSNAME);
  		}
    }
	
	//@SuppressWarnings("rawtypes")
	public void jComboBoxFocusLostGeneral(String sTipo,java.awt.event.FocusEvent evt) { 	  
		//MANEJADO EN ITEMLISTENER
		/*
		try {
			if(this.permiteManejarEventosControl()) {
				EventoGlobalTipo eventoGlobalTipo=EventoGlobalTipo.CONTROL_CHANGE;
				
				
				//if(this.esUsoDesdeHijo) {
				//	eventoGlobalTipo=EventoGlobalTipo.FORM_HIJO_ACTUALIZAR;
				//}
				
				
				Container containerParent=null;
				Component componentOpposite=null;
				Boolean esControlTabla=false;
				
				ArrayList<Classe> classes=new ArrayList<Classe>();
				
				//PARAMETROS LLAMAR FUNCION PARENT
				GeneralEntityParameterGeneral generalEntityParameterGeneral=new GeneralEntityParameterGeneral();			
				Boolean esUsoDesdeHijoLocal=false;
				Boolean conIrServidorAplicacionParent=false;	
				ArrayList<String> arrClasses=new ArrayList<String>();			
				//PARAMETROS LLAMAR FUNCION PARENT_FIN
			
				this.actualizarInformacion("EVENTO_CONTROL",false,this.rubroemplea);
				
				this.actualizarInformacion("INFO_PADRE",false,this.rubroemplea);
				
				RubroEmpleaBeanSwingJInternalFrameAdditional.procesarEventosVista(this.parametroGeneralUsuario,this.moduloActual,this.opcionActual,this.usuarioActual,this,FuncionTipo.BEFORE,ControlTipo.COMBOBOX,EventoTipo.CHANGE,EventoSubTipo.CLICKED,sTipo,this.rubroemplea,new Object(),this.rubroempleaParameterGeneral,this.rubroempleaReturnGeneral);
				JComboBox jComboBoxGenerico=null;						
				
				if(evt.getSource().getClass().equals(JComboBox.class)
					|| evt.getSource().getClass().equals(JComboBoxMe.class)) {
						
					jComboBoxGenerico=(JComboBox)evt.getSource();
					
					containerParent=jComboBoxGenerico.getParent();
					
					componentOpposite=evt.getOppositeComponent();
					
					if((containerParent!=null && containerParent.getClass().equals(JTableMe.class))
					|| (componentOpposite!=null && componentOpposite.getClass().equals(JTableMe.class))
					) {					
						esControlTabla=true;
					}
					
					this.esControlTabla=esControlTabla;
				}
				
				String sFinalQueryCombo="";
				
				


				
				RubroEmpleaBeanSwingJInternalFrameAdditional.procesarEventosVista(this.parametroGeneralUsuario,this.moduloActual,this.opcionActual,this.usuarioActual,this,FuncionTipo.AFTER,ControlTipo.COMBOBOX,EventoTipo.CHANGE,EventoSubTipo.CHANGED,sTipo,this.rubroemplea,new Object(),this.rubroempleaParameterGeneral,this.rubroempleaReturnGeneral);
				
				
				if(esUsoDesdeHijoLocal) {
					Long id=0L;
					
					generalEntityParameterGeneral.setEventoGlobalTipo(EventoGlobalTipo.FORM_HIJO_ACTUALIZAR);
					generalEntityParameterGeneral.setsDominio("Formulario");
					generalEntityParameterGeneral.setsDominioTipo(RubroEmplea.class.getName());
				
					if(this.jInternalFrameParent!=null) {
						this.jInternalFrameParent.setEventoParentGeneral(esUsoDesdeHijoLocal,"Formulario",RubroEmplea.class.getName(),sTipo,"TEXTFIELD",esControlTabla,conIrServidorAplicacionParent,
							id,jComboBoxGenerico, EventoGlobalTipo.FORM_HIJO_ACTUALIZAR,ControlTipo.COMBOBOX,EventoTipo.CHANGE,EventoSubTipo.CHANGED,arrClasses,
							evt,generalEntityParameterGeneral,null);
					}
				}			
			}
			
  		} catch(Exception e) {
  			FuncionesSwing.manageException2(this, e,logger,RubroEmpleaConstantesFunciones.CLASSNAME);
  		}
		
		*/
    }
	
	public void jComboBoxFocusGainedGeneral(String sTipo,java.awt.event.FocusEvent evt) { 	  
		try {
			//SELECCIONA FILA A OBJETO ACTUAL			
			this.seleccionarFilaTablaRubroEmpleaActual();
			
			//SELECCIONA FILA A OBJETO ANTERIOR
			Integer intSelectedRow = this.jTableDatosRubroEmplea.getSelectedRow();
					
			if(intSelectedRow!=null && intSelectedRow>-1) {
				//ARCHITECTURE
				if(Constantes.ISUSAEJBLOGICLAYER) {
					this.rubroempleaAnterior =(RubroEmplea) this.rubroempleaLogic.getRubroEmpleas().toArray()[this.jTableDatosRubroEmplea.convertRowIndexToModel(intSelectedRow)];
				} else if(Constantes.ISUSAEJBREMOTE || Constantes.ISUSAEJBHOME ) {
					this.rubroempleaAnterior =(RubroEmplea) this.rubroempleas.toArray()[this.jTableDatosRubroEmplea.convertRowIndexToModel(intSelectedRow)];
				}
				//ARCHITECTURE
				
				//System.out.println(this.banco);
			}
			
		} catch(Exception e) {
  			FuncionesSwing.manageException2(this, e,logger,RubroEmpleaConstantesFunciones.CLASSNAME);
  		}
    }		
	
	public void tableValueChangedGeneral(String sTipo,ListSelectionEvent evt) { 	  
		try {
			if(this.permiteManejarEventosControl()) {
				RubroEmpleaBeanSwingJInternalFrameAdditional.procesarEventosVista(this.parametroGeneralUsuario,this.moduloActual,this.opcionActual,this.usuarioActual,this,FuncionTipo.BEFORE,ControlTipo.TABLE,EventoTipo.CHANGE,EventoSubTipo.CHANGED,sTipo,this.rubroemplea,new Object(),this.rubroempleaParameterGeneral,this.rubroempleaReturnGeneral);
				
				if(sTipo.equals("TableDatosSeleccionarRubroEmplea")) {
					//BYDAN_DESHABILITADO
					//try {jTableDatosRubroEmpleaListSelectionListener(e);}catch(Exception e1){e1.printStackTrace();}
					
					//SOLO CUANDO MOUSE ES SOLTADO
					if (!evt.getValueIsAdjusting()) {
						//SELECCIONA FILA A OBJETO ACTUAL
						Integer intSelectedRow = this.jTableDatosRubroEmplea.getSelectedRow();
						
						if(intSelectedRow!=null && intSelectedRow>-1) {
							//ARCHITECTURE
							if(Constantes.ISUSAEJBLOGICLAYER) {
								this.rubroemplea =(RubroEmplea) this.rubroempleaLogic.getRubroEmpleas().toArray()[this.jTableDatosRubroEmplea.convertRowIndexToModel(intSelectedRow)];
							} else if(Constantes.ISUSAEJBREMOTE || Constantes.ISUSAEJBHOME ) {
								this.rubroemplea =(RubroEmplea) this.rubroempleas.toArray()[this.jTableDatosRubroEmplea.convertRowIndexToModel(intSelectedRow)];
							}
							//ARCHITECTURE
							
							//System.out.println(this.rubroemplea);
						}
					}
					
				} else if(sTipo.equals("jButtonCancelarRubroEmplea")) {
				
				}
				
				RubroEmpleaBeanSwingJInternalFrameAdditional.procesarEventosVista(this.parametroGeneralUsuario,this.moduloActual,this.opcionActual,this.usuarioActual,this,FuncionTipo.AFTER,ControlTipo.TABLE,EventoTipo.CHANGE,EventoSubTipo.CHANGED,sTipo,this.rubroemplea,new Object(),this.rubroempleaParameterGeneral,this.rubroempleaReturnGeneral);
			}
			
  		} catch(Exception e) {
  			FuncionesSwing.manageException2(this, e,logger,RubroEmpleaConstantesFunciones.CLASSNAME);
  		}
    }
	
	public void tableMouseAdapterGeneral(String sTipo,MouseEvent evt) { 	  
		try {
			RubroEmpleaBeanSwingJInternalFrameAdditional.procesarEventosVista(this.parametroGeneralUsuario,this.moduloActual,this.opcionActual,this.usuarioActual,this,FuncionTipo.BEFORE,ControlTipo.TABLE,EventoTipo.MOUSE,EventoSubTipo.CLICKED,sTipo,this.rubroemplea,new Object(),this.rubroempleaParameterGeneral,this.rubroempleaReturnGeneral);
			
			if(sTipo.equals("DatosSeleccionarRubroEmplea")) {
				if (evt.getClickCount() == 2) {
					jButtonIdActionPerformed(null,jTableDatosRubroEmplea.getSelectedRow(),false,false);
				}	
			} else if(sTipo.equals("jButtonCancelarRubroEmplea")) {
			
			}
			
			RubroEmpleaBeanSwingJInternalFrameAdditional.procesarEventosVista(this.parametroGeneralUsuario,this.moduloActual,this.opcionActual,this.usuarioActual,this,FuncionTipo.AFTER,ControlTipo.TABLE,EventoTipo.MOUSE,EventoSubTipo.CLICKED,sTipo,this.rubroemplea,new Object(),this.rubroempleaParameterGeneral,this.rubroempleaReturnGeneral);
  		} catch(Exception e) {
  			FuncionesSwing.manageException2(this, e,logger,RubroEmpleaConstantesFunciones.CLASSNAME);
  		}
    }
	
	;
	
	public void jButtonActionPerformedTecladoGeneral(String sTipo,ActionEvent evt) { 	  
		try {
			this.startProcessRubroEmplea();
			
			RubroEmpleaBeanSwingJInternalFrameAdditional.procesarEventosVista(this.parametroGeneralUsuario,this.moduloActual,this.opcionActual,this.usuarioActual,this,FuncionTipo.BEFORE,ControlTipo.KEY,EventoTipo.CLIC,EventoSubTipo.CLICKED,sTipo,this.rubroemplea,new Object(),this.rubroempleaParameterGeneral,this.rubroempleaReturnGeneral);
			
			if(sTipo.equals("NuevoRubroEmplea")) {
				jButtonNuevoRubroEmpleaActionPerformed(evt,false);
				
			} else if(sTipo.equals("DuplicarRubroEmplea")) {
				jButtonDuplicarRubroEmpleaActionPerformed(evt,false);
				
			} else if(sTipo.equals("CopiarRubroEmplea")) {
				jButtonCopiarRubroEmpleaActionPerformed(evt);
				
			} else if(sTipo.equals("VerFormRubroEmplea")) {
				jButtonVerFormRubroEmpleaActionPerformed(evt);
				
			} else if(sTipo.equals("NuevoRelacionesRubroEmplea")) {
				jButtonNuevoRubroEmpleaActionPerformed(evt,true);
				
			} else if(sTipo.equals("ModificarRubroEmplea")) {
				jButtonModificarRubroEmpleaActionPerformed(evt);
				
			} else if(sTipo.equals("ActualizarRubroEmplea")) {
				jButtonActualizarRubroEmpleaActionPerformed(evt);
				
			} else if(sTipo.equals("EliminarRubroEmplea")) {
				jButtonEliminarRubroEmpleaActionPerformed(evt);
				
			} else if(sTipo.equals("GuardarCambiosTablaRubroEmplea")) {
				jButtonGuardarCambiosRubroEmpleaActionPerformed(evt);
				
			} else if(sTipo.equals("CancelarRubroEmplea")) {
				jButtonCancelarRubroEmpleaActionPerformed(evt);
				
			} else if(sTipo.equals("CerrarRubroEmplea")) {
				jButtonCerrarRubroEmpleaActionPerformed(evt);
				
			} else if(sTipo.equals("GuardarCambiosRubroEmplea")) {
				jButtonGuardarCambiosRubroEmpleaActionPerformed(evt);
			
			} else if(sTipo.equals("NuevoGuardarCambiosRubroEmplea")) {
				jButtonNuevoGuardarCambiosRubroEmpleaActionPerformed(evt);
			
			} else if(sTipo.equals("AbrirOrderByRubroEmplea")) {
				jButtonAbrirOrderByRubroEmpleaActionPerformed(evt);
			
			} else if(sTipo.equals("RecargarInformacionRubroEmplea")) {
				jButtonRecargarInformacionRubroEmpleaActionPerformed(evt);
			
			} else if(sTipo.equals("AnterioresRubroEmplea")) {
				jButtonAnterioresRubroEmpleaActionPerformed(evt);			
			
			}  else if(sTipo.equals("SiguientesRubroEmplea")) {
				jButtonSiguientesRubroEmpleaActionPerformed(evt);			
			} 
			
			
			//BUSQUEDA GENERAL CAMPO
			else if(sTipo.equals("idRubroEmpleaBusqueda")) {
				this.jButtonidRubroEmpleaBusquedaActionPerformed(evt);
			}
			//ACTUALIZAR CAMPO
			else if(sTipo.equals("id_empresaRubroEmpleaUpdate")) {
				this.jButtonid_empresaRubroEmpleaUpdateActionPerformed(evt);
			}
			//BUSQUEDA GENERAL CAMPO
			else if(sTipo.equals("id_empresaRubroEmpleaBusqueda")) {
				this.jButtonid_empresaRubroEmpleaBusquedaActionPerformed(evt);
			}
			//ACTUALIZAR CAMPO
			else if(sTipo.equals("id_tipo_calculoRubroEmpleaUpdate")) {
				this.jButtonid_tipo_calculoRubroEmpleaUpdateActionPerformed(evt);
			}
			//BUSQUEDA GENERAL CAMPO
			else if(sTipo.equals("id_tipo_calculoRubroEmpleaBusqueda")) {
				this.jButtonid_tipo_calculoRubroEmpleaBusquedaActionPerformed(evt);
			}
			//ACTUALIZAR CAMPO
			else if(sTipo.equals("id_tipo_rubro_empleaRubroEmpleaUpdate")) {
				this.jButtonid_tipo_rubro_empleaRubroEmpleaUpdateActionPerformed(evt);
			}
			//BUSQUEDA GENERAL CAMPO
			else if(sTipo.equals("id_tipo_rubro_empleaRubroEmpleaBusqueda")) {
				this.jButtonid_tipo_rubro_empleaRubroEmpleaBusquedaActionPerformed(evt);
			}
			//ACTUALIZAR CAMPO
			else if(sTipo.equals("id_tipo_grupo_rubro_empleaRubroEmpleaUpdate")) {
				this.jButtonid_tipo_grupo_rubro_empleaRubroEmpleaUpdateActionPerformed(evt);
			}
			//BUSQUEDA GENERAL CAMPO
			else if(sTipo.equals("id_tipo_grupo_rubro_empleaRubroEmpleaBusqueda")) {
				this.jButtonid_tipo_grupo_rubro_empleaRubroEmpleaBusquedaActionPerformed(evt);
			}
			//BUSQUEDA GENERAL CAMPO
			else if(sTipo.equals("codigoRubroEmpleaBusqueda")) {
				this.jButtoncodigoRubroEmpleaBusquedaActionPerformed(evt);
			}
			//BUSQUEDA GENERAL CAMPO
			else if(sTipo.equals("nombreRubroEmpleaBusqueda")) {
				this.jButtonnombreRubroEmpleaBusquedaActionPerformed(evt);
			}
			//BUSQUEDA GENERAL CAMPO
			else if(sTipo.equals("formulaRubroEmpleaBusqueda")) {
				this.jButtonformulaRubroEmpleaBusquedaActionPerformed(evt);
			}
			//BUSQUEDA GENERAL CAMPO
			else if(sTipo.equals("aliasRubroEmpleaBusqueda")) {
				this.jButtonaliasRubroEmpleaBusquedaActionPerformed(evt);
			}
			//BUSQUEDA GENERAL CAMPO
			else if(sTipo.equals("secuencialRubroEmpleaBusqueda")) {
				this.jButtonsecuencialRubroEmpleaBusquedaActionPerformed(evt);
			}
			//BUSQUEDA GENERAL CAMPO
			else if(sTipo.equals("para_rol_pagosRubroEmpleaBusqueda")) {
				this.jButtonpara_rol_pagosRubroEmpleaBusquedaActionPerformed(evt);
			}
			//BUSQUEDA GENERAL CAMPO
			else if(sTipo.equals("para_sueldoRubroEmpleaBusqueda")) {
				this.jButtonpara_sueldoRubroEmpleaBusquedaActionPerformed(evt);
			}
			//BUSQUEDA GENERAL CAMPO
			else if(sTipo.equals("para_vacacionesRubroEmpleaBusqueda")) {
				this.jButtonpara_vacacionesRubroEmpleaBusquedaActionPerformed(evt);
			}
			//BUSQUEDA GENERAL CAMPO
			else if(sTipo.equals("para_impuesto_rentaRubroEmpleaBusqueda")) {
				this.jButtonpara_impuesto_rentaRubroEmpleaBusquedaActionPerformed(evt);
			}
			//BUSQUEDA GENERAL CAMPO
			else if(sTipo.equals("para_seguro_socialRubroEmpleaBusqueda")) {
				this.jButtonpara_seguro_socialRubroEmpleaBusquedaActionPerformed(evt);
			}
			//BUSQUEDA GENERAL CAMPO
			else if(sTipo.equals("para_provisionesRubroEmpleaBusqueda")) {
				this.jButtonpara_provisionesRubroEmpleaBusquedaActionPerformed(evt);
			}
			//BUSQUEDA GENERAL CAMPO
			else if(sTipo.equals("para_utilidadesRubroEmpleaBusqueda")) {
				this.jButtonpara_utilidadesRubroEmpleaBusquedaActionPerformed(evt);
			}
			//BUSQUEDA GENERAL CAMPO
			else if(sTipo.equals("para_rubro_iessRubroEmpleaBusqueda")) {
				this.jButtonpara_rubro_iessRubroEmpleaBusquedaActionPerformed(evt);
			}
			//BUSQUEDA GENERAL CAMPO
			else if(sTipo.equals("es_fondo_reservaRubroEmpleaBusqueda")) {
				this.jButtones_fondo_reservaRubroEmpleaBusquedaActionPerformed(evt);
			}
			//BUSQUEDA GENERAL CAMPO
			else if(sTipo.equals("es_decimo_terceroRubroEmpleaBusqueda")) {
				this.jButtones_decimo_terceroRubroEmpleaBusquedaActionPerformed(evt);
			}
			//BUSQUEDA GENERAL CAMPO
			else if(sTipo.equals("es_decimo_cuartoRubroEmpleaBusqueda")) {
				this.jButtones_decimo_cuartoRubroEmpleaBusquedaActionPerformed(evt);
			}
			
			RubroEmpleaBeanSwingJInternalFrameAdditional.procesarEventosVista(this.parametroGeneralUsuario,this.moduloActual,this.opcionActual,this.usuarioActual,this,FuncionTipo.AFTER,ControlTipo.KEY,EventoTipo.CLIC,EventoSubTipo.CLICKED,sTipo,this.rubroemplea,new Object(),this.rubroempleaParameterGeneral,this.rubroempleaReturnGeneral);
  		} catch(Exception e) {
  			FuncionesSwing.manageException2(this, e,logger,RubroEmpleaConstantesFunciones.CLASSNAME);
			
  		}  finally {
      		this.finishProcessRubroEmplea();
      	}
    }
	
	public void internalFrameClosingInternalFrameGeneral(String sTipo,InternalFrameEvent evt) { 	  
		try {
			RubroEmpleaBeanSwingJInternalFrameAdditional.procesarEventosVista(this.parametroGeneralUsuario,this.moduloActual,this.opcionActual,this.usuarioActual,this,FuncionTipo.BEFORE,ControlTipo.WINDOW,EventoTipo.CLIC,EventoSubTipo.CLOSING,sTipo,this.rubroemplea,new Object(),this.rubroempleaParameterGeneral,this.rubroempleaReturnGeneral);
			
			if(sTipo.equals("CloseInternalFrameRubroEmplea")) {
				closingInternalFrameRubroEmplea();
				
			} else if(sTipo.equals("jButtonCancelarRubroEmplea")) {
				JInternalFrameBase jInternalFrameDetalleFormRubroEmplea = (JInternalFrameBase)evt.getSource();
	            	
	            RubroEmpleaBeanSwingJInternalFrame jInternalFrameParent=(RubroEmpleaBeanSwingJInternalFrame)jInternalFrameDetalleFormRubroEmplea.getjInternalFrameParent();
	            
				jInternalFrameParent.jButtonCancelarRubroEmpleaActionPerformed(null);
			}
			
			RubroEmpleaBeanSwingJInternalFrameAdditional.procesarEventosVista(this.parametroGeneralUsuario,this.moduloActual,this.opcionActual,this.usuarioActual,this,FuncionTipo.AFTER,ControlTipo.WINDOW,EventoTipo.CLIC,EventoSubTipo.CLOSING,sTipo,this.rubroemplea,new Object(),this.rubroempleaParameterGeneral,this.rubroempleaReturnGeneral);
  		} catch(Exception e) {
  			FuncionesSwing.manageException2(this, e,logger,RubroEmpleaConstantesFunciones.CLASSNAME);
  		}
    }
	
	public void recargarFormRubroEmplea(String sTipo,String sDominio,EventoGlobalTipo eventoGlobalTipo,ControlTipo controlTipo,EventoTipo eventoTipo,EventoSubTipo eventoSubTipo,String sTipoGeneral,ArrayList<Classe> classes,Boolean conIrServidorAplicacion) throws Exception {
		this.recargarFormRubroEmplea(sTipo,sDominio,eventoGlobalTipo,controlTipo,eventoTipo,eventoSubTipo,sTipoGeneral,classes,conIrServidorAplicacion,false);
	}
	
	public void recargarFormRubroEmplea(String sTipo,String sDominio,EventoGlobalTipo eventoGlobalTipo,ControlTipo controlTipo,EventoTipo eventoTipo,EventoSubTipo eventoSubTipo,String sTipoGeneral,ArrayList<Classe> classes,Boolean conIrServidorAplicacion,Boolean esControlTabla) throws Exception {
		if(this.permiteRecargarForm && this.permiteMantenimiento(this.rubroemplea)) {
			if(!esControlTabla) {
				if(RubroEmpleaJInternalFrame.ISBINDING_MANUAL_TABLA) {			
					this.setVariablesFormularioToObjetoActualRubroEmplea(this.rubroemplea,true,false);
					this.setVariablesFormularioToObjetoActualForeignKeysRubroEmplea(this.rubroemplea);			
				}
				
				if(this.rubroempleaSessionBean.getEstaModoGuardarRelaciones()) {
					this.setVariablesFormularioRelacionesToObjetoActualRubroEmplea(this.rubroemplea,classes);				
				}
			
				if(conIrServidorAplicacion) {
					//ARCHITECTURE
					if(Constantes.ISUSAEJBLOGICLAYER) {						
						this.rubroempleaReturnGeneral=rubroempleaLogic.procesarEventosRubroEmpleasWithConnection(this.parametroGeneralUsuario,this.moduloActual,this.opcionActual,this.usuarioActual,eventoGlobalTipo,controlTipo,eventoTipo,eventoSubTipo,sTipo,this.rubroempleaLogic.getRubroEmpleas(),this.rubroemplea,this.rubroempleaParameterGeneral,this.isEsNuevoRubroEmplea,classes);//this.rubroempleaLogic.getRubroEmplea()//sTipoGeneral
									
					} else if(Constantes.ISUSAEJBREMOTE) {
									
					} else if(Constantes.ISUSAEJBHOME) {
					}
					//ARCHITECTURE
					
					//ACTUALIZA VARIABLES DEFECTO DESDE LOGIC A RETURN GENERAL Y LUEGO A BEAN
					//this.setVariablesObjetoReturnGeneralToBeanRubroEmplea(this.rubroempleaReturnGeneral,this.rubroempleaBean,false);
						
					//ACTUALIZA VARIABLES RELACIONES DEFECTO DESDE LOGIC A RETURN GENERAL Y LUEGO A BEAN
					if(this.rubroempleaSessionBean.getEstaModoGuardarRelaciones()) {
						//this.setVariablesRelacionesObjetoReturnGeneralToBeanRubroEmplea(classes,this.rubroempleaReturnGeneral,this.rubroempleaBean,false);
					}
						
					if(this.rubroempleaReturnGeneral.getConRecargarPropiedades()) {
						//INICIALIZA VARIABLES COMBOS NORMALES (FK)
						this.setVariablesObjetoActualToFormularioForeignKeyRubroEmplea(this.rubroempleaReturnGeneral.getRubroEmplea());
							
						//INICIALIZA VARIABLES NORMALES A FORMULARIO(SIN FK)
						this.setVariablesObjetoActualToFormularioRubroEmplea(this.rubroempleaReturnGeneral.getRubroEmplea());	
					}
						
					if(this.rubroempleaReturnGeneral.getConRecargarRelaciones()) {
						//INICIALIZA VARIABLES RELACIONES A FORMULARIO
						this.setVariablesRelacionesObjetoActualToFormularioRubroEmplea(this.rubroempleaReturnGeneral.getRubroEmplea(),classes);//this.rubroempleaBean);	
					}									
					
				} else {				
					//INICIALIZA VARIABLES RELACIONES A FORMULARIO
					this.setVariablesRelacionesObjetoActualToFormularioRubroEmplea(this.rubroemplea,classes);//this.rubroempleaBean);									
				}
			
				if(RubroEmpleaJInternalFrame.ISBINDING_MANUAL_TABLA) {
					this.setVariablesFormularioToObjetoActualRubroEmplea(this.rubroemplea,true,false);
					this.setVariablesFormularioToObjetoActualForeignKeysRubroEmplea(this.rubroemplea);				
				}
				
			} else {
				
				if(((controlTipo.equals(ControlTipo.TEXTBOX) || controlTipo.equals(ControlTipo.DATE)
					|| controlTipo.equals(ControlTipo.TEXTAREA) || controlTipo.equals(ControlTipo.COMBOBOX)
					)				
					&& eventoTipo.equals(EventoTipo.CHANGE)
					)
					
					|| (controlTipo.equals(ControlTipo.CHECKBOX) && eventoTipo.equals(EventoTipo.CLIC))
					
				) { // && sTipoGeneral.equals("TEXTBOX")
					
					if(this.rubroempleaAnterior!=null) {
						this.rubroemplea=this.rubroempleaAnterior;
					}
				}
				
				if(conIrServidorAplicacion) {
					//ARCHITECTURE
					if(Constantes.ISUSAEJBLOGICLAYER) {						
						this.rubroempleaReturnGeneral=rubroempleaLogic.procesarEventosRubroEmpleasWithConnection(this.parametroGeneralUsuario,this.moduloActual,this.opcionActual,this.usuarioActual,eventoGlobalTipo,controlTipo,eventoTipo,eventoSubTipo,sTipo,this.rubroempleaLogic.getRubroEmpleas(),this.rubroemplea,this.rubroempleaParameterGeneral,this.isEsNuevoRubroEmplea,classes);//this.rubroempleaLogic.getRubroEmplea()//sTipoGeneral
									
					} else if(Constantes.ISUSAEJBREMOTE) {
									
					} else if(Constantes.ISUSAEJBHOME) {
					}
					//ARCHITECTURE
				}
				
				//ARCHITECTURE
				if(Constantes.ISUSAEJBLOGICLAYER) {
					//NO ENTENDIBLE PORQUE PONER
					//if(this.rubroempleaSessionBean.getEstaModoGuardarRelaciones() 
					//	|| this.rubroempleaSessionBean.getEsGuardarRelacionado())	{
						actualizarLista(this.rubroempleaReturnGeneral.getRubroEmplea(),rubroempleaLogic.getRubroEmpleas());
					//}
				} else if(Constantes.ISUSAEJBREMOTE||Constantes.ISUSAEJBHOME) {
					actualizarLista(this.rubroempleaReturnGeneral.getRubroEmplea(),this.rubroempleas);
				}
				//ARCHITECTURE
				
				//this.jTableDatosRubroEmplea.repaint();
				
				//((AbstractTableModel) this.jTableDatosRubroEmplea.getModel()).fireTableDataChanged();
				
				this.actualizarVisualTableDatosRubroEmplea();
			}
		}
	}
	
	public void actualizarVisualTableDatosRubroEmplea() throws Exception {
		
		RubroEmpleaModel rubroempleaModel=(RubroEmpleaModel)this.jTableDatosRubroEmplea.getModel();
		
		if(Constantes.ISUSAEJBLOGICLAYER) {
			rubroempleaModel.rubroempleas=this.rubroempleaLogic.getRubroEmpleas();
		
		} else if(Constantes.ISUSAEJBREMOTE || Constantes.ISUSAEJBHOME ) {
			rubroempleaModel.rubroempleas=this.rubroempleas;
		}
		
		
		((RubroEmpleaModel) this.jTableDatosRubroEmplea.getModel()).fireTableDataChanged();
	}
	
	public void actualizarVisualTableDatosEventosVistaRubroEmplea() throws Exception {
		
		//ARCHITECTURE
		if(Constantes.ISUSAEJBLOGICLAYER) {
			this.actualizarLista(this.getrubroempleaAnterior(),this.rubroempleaLogic.getRubroEmpleas());
					
		} else if(Constantes.ISUSAEJBREMOTE||Constantes.ISUSAEJBHOME) {
			this.actualizarLista(this.getrubroempleaAnterior(),this.rubroempleas);
		}
		//ARCHITECTURE
						
		this.actualizarFilaTotales();
						
		this.actualizarVisualTableDatosRubroEmplea();	
	}
	
	public void setVariablesRelacionesObjetoActualToFormularioRubroEmplea(RubroEmplea rubroemplea,ArrayList<Classe> classes) throws Exception { 
		try {
			
			for(Classe clas:classes) {
				if(clas.clas.equals(HistorialPagoNomi.class)) {
					this.jInternalFrameDetalleFormRubroEmplea.historialpagonomiBeanSwingJInternalFrame.historialpagonomiLogic.setHistorialPagoNomis(rubroemplea.getHistorialPagoNomis());
					this.jInternalFrameDetalleFormRubroEmplea.historialpagonomiBeanSwingJInternalFrame.inicializarActualizarBindingTablaHistorialPagoNomi(false);
					break;
				}
			}
			for(Classe clas:classes) {
				if(clas.clas.equals(RubroEstructura.class)) {
					this.jInternalFrameDetalleFormRubroEmplea.rubroestructuraBeanSwingJInternalFrame.rubroestructuraLogic.setRubroEstructuras(rubroemplea.getRubroEstructuras());
					this.jInternalFrameDetalleFormRubroEmplea.rubroestructuraBeanSwingJInternalFrame.inicializarActualizarBindingTablaRubroEstructura(false);
					break;
				}
			}
			for(Classe clas:classes) {
				if(clas.clas.equals(DefiProvisionEmpleado.class)) {
					this.jInternalFrameDetalleFormRubroEmplea.defiprovisionempleadoBeanSwingJInternalFrame.defiprovisionempleadoLogic.setDefiProvisionEmpleados(rubroemplea.getDefiProvisionEmpleados());
					this.jInternalFrameDetalleFormRubroEmplea.defiprovisionempleadoBeanSwingJInternalFrame.inicializarActualizarBindingTablaDefiProvisionEmpleado(false);
					break;
				}
			}
			for(Classe clas:classes) {
				if(clas.clas.equals(EmpleadoPagoRubro.class)) {
					this.jInternalFrameDetalleFormRubroEmplea.empleadopagorubroBeanSwingJInternalFrame.empleadopagorubroLogic.setEmpleadoPagoRubros(rubroemplea.getEmpleadoPagoRubros());
					this.jInternalFrameDetalleFormRubroEmplea.empleadopagorubroBeanSwingJInternalFrame.inicializarActualizarBindingTablaEmpleadoPagoRubro(false);
					break;
				}
			}
			for(Classe clas:classes) {
				if(clas.clas.equals(HistorialPagoMesNomi.class)) {
					this.jInternalFrameDetalleFormRubroEmplea.historialpagomesnomiBeanSwingJInternalFrame.historialpagomesnomiLogic.setHistorialPagoMesNomis(rubroemplea.getHistorialPagoMesNomis());
					this.jInternalFrameDetalleFormRubroEmplea.historialpagomesnomiBeanSwingJInternalFrame.inicializarActualizarBindingTablaHistorialPagoMesNomi(false);
					break;
				}
			}
			for(Classe clas:classes) {
				if(clas.clas.equals(RubroEmpleado.class)) {
					this.jInternalFrameDetalleFormRubroEmplea.rubroempleadoBeanSwingJInternalFrame.rubroempleadoLogic.setRubroEmpleados(rubroemplea.getRubroEmpleados());
					this.jInternalFrameDetalleFormRubroEmplea.rubroempleadoBeanSwingJInternalFrame.inicializarActualizarBindingTablaRubroEmpleado(false);
					break;
				}
			}
			for(Classe clas:classes) {
				if(clas.clas.equals(ValorRubroVariable.class)) {
					this.jInternalFrameDetalleFormRubroEmplea.valorrubrovariableBeanSwingJInternalFrame.valorrubrovariableLogic.setValorRubroVariables(rubroemplea.getValorRubroVariables());
					this.jInternalFrameDetalleFormRubroEmplea.valorrubrovariableBeanSwingJInternalFrame.inicializarActualizarBindingTablaValorRubroVariable(false);
					break;
				}
			}
			for(Classe clas:classes) {
				if(clas.clas.equals(TipoPrestamo.class)) {
					this.jInternalFrameDetalleFormRubroEmplea.tipoprestamoBeanSwingJInternalFrame.tipoprestamoLogic.setTipoPrestamos(rubroemplea.getTipoPrestamos());
					this.jInternalFrameDetalleFormRubroEmplea.tipoprestamoBeanSwingJInternalFrame.inicializarActualizarBindingTablaTipoPrestamo(false);
					break;
				}
			}
			for(Classe clas:classes) {
				if(clas.clas.equals(RubroEmpleaCuentaContable.class)) {
					this.jInternalFrameDetalleFormRubroEmplea.rubroempleacuentacontableBeanSwingJInternalFrame.rubroempleacuentacontableLogic.setRubroEmpleaCuentaContables(rubroemplea.getRubroEmpleaCuentaContables());
					this.jInternalFrameDetalleFormRubroEmplea.rubroempleacuentacontableBeanSwingJInternalFrame.inicializarActualizarBindingTablaRubroEmpleaCuentaContable(false);
					break;
				}
			}
			
		} catch(Exception e) {
			FuncionesSwing.manageException(this, e,logger,RubroEmpleaConstantesFunciones.CLASSNAME);
		}
	}
	
	public void setEventoParentGeneral(Boolean esUsoDesdeHijo,String sDominio,String sDominioTipo,String sTipo,String sTipoGeneral,Boolean esControlTabla,Boolean conIrServidorAplicacion,
						Long id,Component control, EventoGlobalTipo eventoGlobalTipo,ControlTipo controlTipo,EventoTipo eventoTipo,EventoSubTipo eventoSubTipo,ArrayList<String> arrClasses,
						Object evt,GeneralEntityParameterReturnGeneral generalEntityParameterGeneral,Object otro) { 	  
		try {
			
			if(this.permiteManejarEventosControl()) {
				
				//BASE COPIADO DESDE TEXTFIELLOSTFOCUS
				
				//EventoGlobalTipo.FORM_HIJO_ACTUALIZAR;
				Boolean conTodasRelaciones=false;
				
				this.esUsoDesdeHijo=esUsoDesdeHijo;
										
				RubroEmpleaBeanSwingJInternalFrameAdditional.procesarEventosVista(this.parametroGeneralUsuario,this.moduloActual,this.opcionActual,this.usuarioActual,this,FuncionTipo.BEFORE,controlTipo,eventoTipo,eventoSubTipo,sTipo,this.rubroemplea,new Object(),generalEntityParameterGeneral,this.rubroempleaReturnGeneral);
				
				ArrayList<Classe> classes=new ArrayList<Classe>();
				
				for(String sClasse:arrClasses) {
					if(sClasse.equals("TODOS")) {
						conTodasRelaciones=true;
						break;
					}
				}
				
				if(this.rubroempleaSessionBean.getConGuardarRelaciones()) {
					if(conTodasRelaciones) {
						classes=RubroEmpleaConstantesFunciones.getClassesRelationshipsOfRubroEmplea(new ArrayList<Classe>(),DeepLoadType.NONE);
					} else {
						classes=RubroEmpleaConstantesFunciones.getClassesRelationshipsFromStringsOfRubroEmplea(arrClasses,DeepLoadType.NONE);
					}
				}
	
				this.classesActual=new ArrayList<Classe>();
				this.classesActual.addAll(classes);
	
				this.recargarFormRubroEmplea(sTipo,sDominio,eventoGlobalTipo,controlTipo,eventoTipo,eventoSubTipo,sTipoGeneral,classes,conIrServidorAplicacion,esControlTabla);
										
				RubroEmpleaBeanSwingJInternalFrameAdditional.procesarEventosVista(this.parametroGeneralUsuario,this.moduloActual,this.opcionActual,this.usuarioActual,this,FuncionTipo.AFTER,controlTipo,eventoTipo,eventoSubTipo,sTipo,this.rubroemplea,new Object(),generalEntityParameterGeneral,this.rubroempleaReturnGeneral);
			}
			
		} catch(Exception e) {
  			FuncionesSwing.manageException2(this, e,logger,RubroEmpleaConstantesFunciones.CLASSNAME);
  		}
    }
	
	/*
	public void setVariablesRelacionesObjetoBeanActualToFormularioRubroEmplea(RubroEmpleaBean rubroempleaBean) throws Exception { 
		try {
			
			for(Classe clas:classes) {
				if(clas.clas.equals(HistorialPagoNomi.class)) {
					this.jInternalFrameDetalleFormRubroEmplea.historialpagonomiBeanSwingJInternalFrame.historialpagonomiLogic.setHistorialPagoNomis(rubroemplea.getHistorialPagoNomis());
					this.jInternalFrameDetalleFormRubroEmplea.historialpagonomiBeanSwingJInternalFrame.inicializarActualizarBindingTablaHistorialPagoNomi(false);
					break;
				}
			}
			for(Classe clas:classes) {
				if(clas.clas.equals(RubroEstructura.class)) {
					this.jInternalFrameDetalleFormRubroEmplea.rubroestructuraBeanSwingJInternalFrame.rubroestructuraLogic.setRubroEstructuras(rubroemplea.getRubroEstructuras());
					this.jInternalFrameDetalleFormRubroEmplea.rubroestructuraBeanSwingJInternalFrame.inicializarActualizarBindingTablaRubroEstructura(false);
					break;
				}
			}
			for(Classe clas:classes) {
				if(clas.clas.equals(DefiProvisionEmpleado.class)) {
					this.jInternalFrameDetalleFormRubroEmplea.defiprovisionempleadoBeanSwingJInternalFrame.defiprovisionempleadoLogic.setDefiProvisionEmpleados(rubroemplea.getDefiProvisionEmpleados());
					this.jInternalFrameDetalleFormRubroEmplea.defiprovisionempleadoBeanSwingJInternalFrame.inicializarActualizarBindingTablaDefiProvisionEmpleado(false);
					break;
				}
			}
			for(Classe clas:classes) {
				if(clas.clas.equals(EmpleadoPagoRubro.class)) {
					this.jInternalFrameDetalleFormRubroEmplea.empleadopagorubroBeanSwingJInternalFrame.empleadopagorubroLogic.setEmpleadoPagoRubros(rubroemplea.getEmpleadoPagoRubros());
					this.jInternalFrameDetalleFormRubroEmplea.empleadopagorubroBeanSwingJInternalFrame.inicializarActualizarBindingTablaEmpleadoPagoRubro(false);
					break;
				}
			}
			for(Classe clas:classes) {
				if(clas.clas.equals(HistorialPagoMesNomi.class)) {
					this.jInternalFrameDetalleFormRubroEmplea.historialpagomesnomiBeanSwingJInternalFrame.historialpagomesnomiLogic.setHistorialPagoMesNomis(rubroemplea.getHistorialPagoMesNomis());
					this.jInternalFrameDetalleFormRubroEmplea.historialpagomesnomiBeanSwingJInternalFrame.inicializarActualizarBindingTablaHistorialPagoMesNomi(false);
					break;
				}
			}
			for(Classe clas:classes) {
				if(clas.clas.equals(RubroEmpleado.class)) {
					this.jInternalFrameDetalleFormRubroEmplea.rubroempleadoBeanSwingJInternalFrame.rubroempleadoLogic.setRubroEmpleados(rubroemplea.getRubroEmpleados());
					this.jInternalFrameDetalleFormRubroEmplea.rubroempleadoBeanSwingJInternalFrame.inicializarActualizarBindingTablaRubroEmpleado(false);
					break;
				}
			}
			for(Classe clas:classes) {
				if(clas.clas.equals(ValorRubroVariable.class)) {
					this.jInternalFrameDetalleFormRubroEmplea.valorrubrovariableBeanSwingJInternalFrame.valorrubrovariableLogic.setValorRubroVariables(rubroemplea.getValorRubroVariables());
					this.jInternalFrameDetalleFormRubroEmplea.valorrubrovariableBeanSwingJInternalFrame.inicializarActualizarBindingTablaValorRubroVariable(false);
					break;
				}
			}
			for(Classe clas:classes) {
				if(clas.clas.equals(TipoPrestamo.class)) {
					this.jInternalFrameDetalleFormRubroEmplea.tipoprestamoBeanSwingJInternalFrame.tipoprestamoLogic.setTipoPrestamos(rubroemplea.getTipoPrestamos());
					this.jInternalFrameDetalleFormRubroEmplea.tipoprestamoBeanSwingJInternalFrame.inicializarActualizarBindingTablaTipoPrestamo(false);
					break;
				}
			}
			for(Classe clas:classes) {
				if(clas.clas.equals(RubroEmpleaCuentaContable.class)) {
					this.jInternalFrameDetalleFormRubroEmplea.rubroempleacuentacontableBeanSwingJInternalFrame.rubroempleacuentacontableLogic.setRubroEmpleaCuentaContables(rubroemplea.getRubroEmpleaCuentaContables());
					this.jInternalFrameDetalleFormRubroEmplea.rubroempleacuentacontableBeanSwingJInternalFrame.inicializarActualizarBindingTablaRubroEmpleaCuentaContable(false);
					break;
				}
			}
			
		} catch(Exception e) {
			FuncionesSwing.manageException(this, e,logger,RubroEmpleaConstantesFunciones.CLASSNAME);
		}
	}
	*/
	
	/*
	public void setVariablesRelacionesObjetoReturnGeneralToBeanRubroEmplea(ArrayList<Classe> classes,RubroEmpleaReturnGeneral rubroempleaReturnGeneral,RubroEmpleaBean rubroempleaBean,Boolean conDefault) throws Exception {
		
			this.rubroempleaBean.setHistorialPagoNomis(rubroempleaReturnGeneral.getRubroEmplea().getHistorialPagoNomis());
			this.rubroempleaBean.setRubroEstructuras(rubroempleaReturnGeneral.getRubroEmplea().getRubroEstructuras());
			this.rubroempleaBean.setDefiProvisionEmpleados(rubroempleaReturnGeneral.getRubroEmplea().getDefiProvisionEmpleados());
			this.rubroempleaBean.setEmpleadoPagoRubros(rubroempleaReturnGeneral.getRubroEmplea().getEmpleadoPagoRubros());
			this.rubroempleaBean.setHistorialPagoMesNomis(rubroempleaReturnGeneral.getRubroEmplea().getHistorialPagoMesNomis());
			this.rubroempleaBean.setRubroEmpleados(rubroempleaReturnGeneral.getRubroEmplea().getRubroEmpleados());
			this.rubroempleaBean.setValorRubroVariables(rubroempleaReturnGeneral.getRubroEmplea().getValorRubroVariables());
			this.rubroempleaBean.setTipoPrestamos(rubroempleaReturnGeneral.getRubroEmplea().getTipoPrestamos());
			this.rubroempleaBean.setRubroEmpleaCuentaContables(rubroempleaReturnGeneral.getRubroEmplea().getRubroEmpleaCuentaContables());
	}
	*/
	
	public void setVariablesFormularioRelacionesToObjetoActualRubroEmplea(RubroEmplea rubroemplea,ArrayList<Classe> classes) throws Exception {
		
			for(Classe clas:classes) {
				if(clas.clas.equals(HistorialPagoNomi.class)) {
					rubroemplea.setHistorialPagoNomis(this.jInternalFrameDetalleFormRubroEmplea.historialpagonomiBeanSwingJInternalFrame.historialpagonomiLogic.getHistorialPagoNomis());
					break;
				}
			}
			for(Classe clas:classes) {
				if(clas.clas.equals(RubroEstructura.class)) {
					rubroemplea.setRubroEstructuras(this.jInternalFrameDetalleFormRubroEmplea.rubroestructuraBeanSwingJInternalFrame.rubroestructuraLogic.getRubroEstructuras());
					break;
				}
			}
			for(Classe clas:classes) {
				if(clas.clas.equals(DefiProvisionEmpleado.class)) {
					rubroemplea.setDefiProvisionEmpleados(this.jInternalFrameDetalleFormRubroEmplea.defiprovisionempleadoBeanSwingJInternalFrame.defiprovisionempleadoLogic.getDefiProvisionEmpleados());
					break;
				}
			}
			for(Classe clas:classes) {
				if(clas.clas.equals(EmpleadoPagoRubro.class)) {
					rubroemplea.setEmpleadoPagoRubros(this.jInternalFrameDetalleFormRubroEmplea.empleadopagorubroBeanSwingJInternalFrame.empleadopagorubroLogic.getEmpleadoPagoRubros());
					break;
				}
			}
			for(Classe clas:classes) {
				if(clas.clas.equals(HistorialPagoMesNomi.class)) {
					rubroemplea.setHistorialPagoMesNomis(this.jInternalFrameDetalleFormRubroEmplea.historialpagomesnomiBeanSwingJInternalFrame.historialpagomesnomiLogic.getHistorialPagoMesNomis());
					break;
				}
			}
			for(Classe clas:classes) {
				if(clas.clas.equals(RubroEmpleado.class)) {
					rubroemplea.setRubroEmpleados(this.jInternalFrameDetalleFormRubroEmplea.rubroempleadoBeanSwingJInternalFrame.rubroempleadoLogic.getRubroEmpleados());
					break;
				}
			}
			for(Classe clas:classes) {
				if(clas.clas.equals(ValorRubroVariable.class)) {
					rubroemplea.setValorRubroVariables(this.jInternalFrameDetalleFormRubroEmplea.valorrubrovariableBeanSwingJInternalFrame.valorrubrovariableLogic.getValorRubroVariables());
					break;
				}
			}
			for(Classe clas:classes) {
				if(clas.clas.equals(TipoPrestamo.class)) {
					rubroemplea.setTipoPrestamos(this.jInternalFrameDetalleFormRubroEmplea.tipoprestamoBeanSwingJInternalFrame.tipoprestamoLogic.getTipoPrestamos());
					break;
				}
			}
			for(Classe clas:classes) {
				if(clas.clas.equals(RubroEmpleaCuentaContable.class)) {
					rubroemplea.setRubroEmpleaCuentaContables(this.jInternalFrameDetalleFormRubroEmplea.rubroempleacuentacontableBeanSwingJInternalFrame.rubroempleacuentacontableLogic.getRubroEmpleaCuentaContables());
					break;
				}
			}
	}
	
	public Boolean permiteManejarEventosControl() {
		Boolean permite=true;				
		
		if(this.estaModoNuevo || this.estaModoSeleccionar || this.estaModoEliminarGuardarCambios) {
			permite=false;
			
		} 
		
		//NO DEBE MEZCLARSE CONCEPTOS
		/*	
		if(!paraTabla && !this.permiteMantenimiento(this.rubroemplea)) {
			System.out.println("ERROR:EL OBJETO ACTUAL NO PUEDE SER FILA TOTALES");
				
			//JOptionPane.showMessageDialog(this,"EL OBJETO ACTUAL NO PUEDE SER FILA TOTALES","EVENTO",JOptionPane.ERROR_MESSAGE);			
		}
		*/
		
		return permite;
	}
	
	public void inicializarFormDetalle() throws Exception {
		
		this.jInternalFrameDetalleFormRubroEmplea = new RubroEmpleaDetalleFormJInternalFrame(jDesktopPane,this.rubroempleaSessionBean.getConGuardarRelaciones(),this.rubroempleaSessionBean.getEsGuardarRelacionado(),this.cargarRelaciones,usuarioActual,resumenUsuarioActual,moduloActual,opcionActual,parametroGeneralSg,parametroGeneralUsuario,paginaTipo);
		
		this.jDesktopPane.add(this.jInternalFrameDetalleFormRubroEmplea);
		this.jInternalFrameDetalleFormRubroEmplea.setVisible(false);
		this.jInternalFrameDetalleFormRubroEmplea.setSelected(false);						
		
		this.jInternalFrameDetalleFormRubroEmplea.setJInternalFrameParent(this);
		
		this.jInternalFrameDetalleFormRubroEmplea.rubroempleaLogic=this.rubroempleaLogic;
		
		this.cargarCombosFrameForeignKeyRubroEmplea("Formulario");
		
		this.inicializarActualizarBindingBotonesPermisosManualFormDetalleRubroEmplea();
		this.inicializarActualizarBindingtiposArchivosReportesAccionesManualFormDetalleRubroEmplea();
		
		this.initActionsFormDetalle();		
		
		this.initActionsCombosTodosForeignKeyRubroEmplea("Formulario");
		
		//TALVEZ conSetVariablesGlobales COMO if() 
		this.setVariablesGlobalesCombosForeignKeyRubroEmplea();
		
		this.cargarMenuRelaciones();
		
	}
	
	public void initActionsFormDetalle() {	
		
		this.jInternalFrameDetalleFormRubroEmplea.addInternalFrameListener(new InternalFrameInternalFrameAdapter(this,"jButtonCancelarRubroEmplea"));
		
		this.jInternalFrameDetalleFormRubroEmplea.jButtonModificarRubroEmplea.addActionListener(new ButtonActionListener(this,"ModificarRubroEmplea"));

		
		this.jInternalFrameDetalleFormRubroEmplea.jButtonModificarToolBarRubroEmplea.addActionListener(new ButtonActionListener(this,"ModificarToolBarRubroEmplea"));
					
		this.jInternalFrameDetalleFormRubroEmplea.jMenuItemModificarRubroEmplea.addActionListener(new ButtonActionListener(this,"MenuItemModificarRubroEmplea"));		
		
		
		
		this.jInternalFrameDetalleFormRubroEmplea.jButtonActualizarRubroEmplea.addActionListener (new ButtonActionListener(this,"ActualizarRubroEmplea"));
		
		
		this.jInternalFrameDetalleFormRubroEmplea.jButtonActualizarToolBarRubroEmplea.addActionListener(new ButtonActionListener(this,"ActualizarToolBarRubroEmplea"));
						
		this.jInternalFrameDetalleFormRubroEmplea.jMenuItemActualizarRubroEmplea.addActionListener (new ButtonActionListener(this,"MenuItemActualizarRubroEmplea"));		
		
		
		
		this.jInternalFrameDetalleFormRubroEmplea.jButtonEliminarRubroEmplea.addActionListener (new ButtonActionListener(this,"EliminarRubroEmplea"));
		
		
		this.jInternalFrameDetalleFormRubroEmplea.jButtonEliminarToolBarRubroEmplea.addActionListener (new ButtonActionListener(this,"EliminarToolBarRubroEmplea"));
								
		this.jInternalFrameDetalleFormRubroEmplea.jMenuItemEliminarRubroEmplea.addActionListener (new ButtonActionListener(this,"MenuItemEliminarRubroEmplea"));		
		
		
		
		this.jInternalFrameDetalleFormRubroEmplea.jButtonCancelarRubroEmplea.addActionListener (new ButtonActionListener(this,"CancelarRubroEmplea"));
		
		
		this.jInternalFrameDetalleFormRubroEmplea.jButtonCancelarToolBarRubroEmplea.addActionListener (new ButtonActionListener(this,"CancelarToolBarRubroEmplea"));
					
		this.jInternalFrameDetalleFormRubroEmplea.jMenuItemCancelarRubroEmplea.addActionListener (new ButtonActionListener(this,"MenuItemCancelarRubroEmplea"));		
		
		
		
		
		
		this.jInternalFrameDetalleFormRubroEmplea.jMenuItemDetalleCerrarRubroEmplea.addActionListener (new ButtonActionListener(this,"MenuItemDetalleCerrarRubroEmplea"));		
		
		
		
		this.jInternalFrameDetalleFormRubroEmplea.jButtonGuardarCambiosToolBarRubroEmplea.addActionListener (new ButtonActionListener(this,"GuardarCambiosToolBarRubroEmplea"));
		
		
		
		this.jInternalFrameDetalleFormRubroEmplea.jButtonGuardarCambiosToolBarRubroEmplea.addActionListener (new ButtonActionListener(this,"GuardarCambiosToolBarRubroEmplea"));
		
		
		
		this.jInternalFrameDetalleFormRubroEmplea.jComboBoxTiposAccionesFormularioRubroEmplea.addActionListener (new ButtonActionListener(this,"TiposAccionesFormularioRubroEmplea"));
		
		
				
		
		//BUSQUEDA GENERAL
		this.jInternalFrameDetalleFormRubroEmplea.jButtonidRubroEmpleaBusqueda.addActionListener(new ButtonActionListener(this,"idRubroEmpleaBusqueda"));
		//ACTUALIZAR FK
		this.jInternalFrameDetalleFormRubroEmplea.jButtonid_empresaRubroEmpleaUpdate.addActionListener(new ButtonActionListener(this,"id_empresaRubroEmpleaUpdate"));
		//BUSQUEDA GENERAL
		this.jInternalFrameDetalleFormRubroEmplea.jButtonid_empresaRubroEmpleaBusqueda.addActionListener(new ButtonActionListener(this,"id_empresaRubroEmpleaBusqueda"));
		//ACTUALIZAR FK
		this.jInternalFrameDetalleFormRubroEmplea.jButtonid_tipo_calculoRubroEmpleaUpdate.addActionListener(new ButtonActionListener(this,"id_tipo_calculoRubroEmpleaUpdate"));
		//BUSQUEDA GENERAL
		this.jInternalFrameDetalleFormRubroEmplea.jButtonid_tipo_calculoRubroEmpleaBusqueda.addActionListener(new ButtonActionListener(this,"id_tipo_calculoRubroEmpleaBusqueda"));
		//ACTUALIZAR FK
		this.jInternalFrameDetalleFormRubroEmplea.jButtonid_tipo_rubro_empleaRubroEmpleaUpdate.addActionListener(new ButtonActionListener(this,"id_tipo_rubro_empleaRubroEmpleaUpdate"));
		//BUSQUEDA GENERAL
		this.jInternalFrameDetalleFormRubroEmplea.jButtonid_tipo_rubro_empleaRubroEmpleaBusqueda.addActionListener(new ButtonActionListener(this,"id_tipo_rubro_empleaRubroEmpleaBusqueda"));
		//ACTUALIZAR FK
		this.jInternalFrameDetalleFormRubroEmplea.jButtonid_tipo_grupo_rubro_empleaRubroEmpleaUpdate.addActionListener(new ButtonActionListener(this,"id_tipo_grupo_rubro_empleaRubroEmpleaUpdate"));
		//BUSQUEDA GENERAL
		this.jInternalFrameDetalleFormRubroEmplea.jButtonid_tipo_grupo_rubro_empleaRubroEmpleaBusqueda.addActionListener(new ButtonActionListener(this,"id_tipo_grupo_rubro_empleaRubroEmpleaBusqueda"));
		//BUSQUEDA GENERAL
		this.jInternalFrameDetalleFormRubroEmplea.jButtoncodigoRubroEmpleaBusqueda.addActionListener(new ButtonActionListener(this,"codigoRubroEmpleaBusqueda"));
		//BUSQUEDA GENERAL
		this.jInternalFrameDetalleFormRubroEmplea.jButtonnombreRubroEmpleaBusqueda.addActionListener(new ButtonActionListener(this,"nombreRubroEmpleaBusqueda"));
		//BUSQUEDA GENERAL
		this.jInternalFrameDetalleFormRubroEmplea.jButtonformulaRubroEmpleaBusqueda.addActionListener(new ButtonActionListener(this,"formulaRubroEmpleaBusqueda"));
		//BUSQUEDA GENERAL
		this.jInternalFrameDetalleFormRubroEmplea.jButtonaliasRubroEmpleaBusqueda.addActionListener(new ButtonActionListener(this,"aliasRubroEmpleaBusqueda"));
		//BUSQUEDA GENERAL
		this.jInternalFrameDetalleFormRubroEmplea.jButtonsecuencialRubroEmpleaBusqueda.addActionListener(new ButtonActionListener(this,"secuencialRubroEmpleaBusqueda"));
		//BUSQUEDA GENERAL
		this.jInternalFrameDetalleFormRubroEmplea.jButtonpara_rol_pagosRubroEmpleaBusqueda.addActionListener(new ButtonActionListener(this,"para_rol_pagosRubroEmpleaBusqueda"));
		//BUSQUEDA GENERAL
		this.jInternalFrameDetalleFormRubroEmplea.jButtonpara_sueldoRubroEmpleaBusqueda.addActionListener(new ButtonActionListener(this,"para_sueldoRubroEmpleaBusqueda"));
		//BUSQUEDA GENERAL
		this.jInternalFrameDetalleFormRubroEmplea.jButtonpara_vacacionesRubroEmpleaBusqueda.addActionListener(new ButtonActionListener(this,"para_vacacionesRubroEmpleaBusqueda"));
		//BUSQUEDA GENERAL
		this.jInternalFrameDetalleFormRubroEmplea.jButtonpara_impuesto_rentaRubroEmpleaBusqueda.addActionListener(new ButtonActionListener(this,"para_impuesto_rentaRubroEmpleaBusqueda"));
		//BUSQUEDA GENERAL
		this.jInternalFrameDetalleFormRubroEmplea.jButtonpara_seguro_socialRubroEmpleaBusqueda.addActionListener(new ButtonActionListener(this,"para_seguro_socialRubroEmpleaBusqueda"));
		//BUSQUEDA GENERAL
		this.jInternalFrameDetalleFormRubroEmplea.jButtonpara_provisionesRubroEmpleaBusqueda.addActionListener(new ButtonActionListener(this,"para_provisionesRubroEmpleaBusqueda"));
		//BUSQUEDA GENERAL
		this.jInternalFrameDetalleFormRubroEmplea.jButtonpara_utilidadesRubroEmpleaBusqueda.addActionListener(new ButtonActionListener(this,"para_utilidadesRubroEmpleaBusqueda"));
		//BUSQUEDA GENERAL
		this.jInternalFrameDetalleFormRubroEmplea.jButtonpara_rubro_iessRubroEmpleaBusqueda.addActionListener(new ButtonActionListener(this,"para_rubro_iessRubroEmpleaBusqueda"));
		//BUSQUEDA GENERAL
		this.jInternalFrameDetalleFormRubroEmplea.jButtones_fondo_reservaRubroEmpleaBusqueda.addActionListener(new ButtonActionListener(this,"es_fondo_reservaRubroEmpleaBusqueda"));
		//BUSQUEDA GENERAL
		this.jInternalFrameDetalleFormRubroEmplea.jButtones_decimo_terceroRubroEmpleaBusqueda.addActionListener(new ButtonActionListener(this,"es_decimo_terceroRubroEmpleaBusqueda"));
		//BUSQUEDA GENERAL
		this.jInternalFrameDetalleFormRubroEmplea.jButtones_decimo_cuartoRubroEmpleaBusqueda.addActionListener(new ButtonActionListener(this,"es_decimo_cuartoRubroEmpleaBusqueda"));
		
		
		;

		//TABBED PANE RELACIONES
		this.jInternalFrameDetalleFormRubroEmplea.jTabbedPaneRelacionesRubroEmplea.addChangeListener(new TabbedPaneChangeListener(this,"RelacionesRubroEmplea"));
		
		;		
		//TABBED PANE RELACIONES FIN(EXTRA TAB)	
	}
	
	public void initActions() {				
		this.addInternalFrameListener(new InternalFrameInternalFrameAdapter(this,"CloseInternalFrameRubroEmplea"));
		
		if(this.jInternalFrameDetalleFormRubroEmplea!=null) { //if(this.conCargarFormDetalle) {
			this.jInternalFrameDetalleFormRubroEmplea.addInternalFrameListener(new InternalFrameInternalFrameAdapter(this,"jButtonCancelarRubroEmplea"));
		}
		
		this.jTableDatosRubroEmplea.getSelectionModel().addListSelectionListener(new TableListSelectionListener(this,"TableDatosSeleccionarRubroEmplea"));
		
		this.jTableDatosRubroEmplea.addMouseListener(new TableMouseAdapter(this,"DatosSeleccionarRubroEmplea"));
		
		this.jButtonNuevoRubroEmplea.addActionListener(new ButtonActionListener(this,"NuevoRubroEmplea"));
		
		this.jButtonDuplicarRubroEmplea.addActionListener(new ButtonActionListener(this,"DuplicarRubroEmplea"));
		
		this.jButtonCopiarRubroEmplea.addActionListener(new ButtonActionListener(this,"CopiarRubroEmplea"));
		
		this.jButtonVerFormRubroEmplea.addActionListener(new ButtonActionListener(this,"VerFormRubroEmplea"));
		
		
		this.jButtonNuevoToolBarRubroEmplea.addActionListener(new ButtonActionListener(this,"NuevoToolBarRubroEmplea"));
			
		this.jButtonDuplicarToolBarRubroEmplea.addActionListener(new ButtonActionListener(this,"DuplicarToolBarRubroEmplea"));
			
		this.jMenuItemNuevoRubroEmplea.addActionListener (new ButtonActionListener(this,"MenuItemNuevoRubroEmplea"));
			
		this.jMenuItemDuplicarRubroEmplea.addActionListener (new ButtonActionListener(this,"MenuItemDuplicarRubroEmplea"));		
		
		
		this.jButtonNuevoRelacionesRubroEmplea.addActionListener (new ButtonActionListener(this,"NuevoRelacionesRubroEmplea"));
		
		
		this.jButtonNuevoRelacionesToolBarRubroEmplea.addActionListener(new ButtonActionListener(this,"NuevoRelacionesToolBarRubroEmplea"));
			
		this.jMenuItemNuevoRelacionesRubroEmplea.addActionListener(new ButtonActionListener(this,"MenuItemNuevoRelacionesRubroEmplea"));		
		
		
		if(this.jInternalFrameDetalleFormRubroEmplea!=null) { //if(this.conCargarFormDetalle) {
			this.jInternalFrameDetalleFormRubroEmplea.jButtonModificarRubroEmplea.addActionListener(new ButtonActionListener(this,"ModificarRubroEmplea"));
		}
		
		
		if(this.jInternalFrameDetalleFormRubroEmplea!=null) { //if(this.conCargarFormDetalle) {
			this.jInternalFrameDetalleFormRubroEmplea.jButtonModificarToolBarRubroEmplea.addActionListener(new ButtonActionListener(this,"ModificarToolBarRubroEmplea"));
			
			this.jInternalFrameDetalleFormRubroEmplea.jMenuItemModificarRubroEmplea.addActionListener(new ButtonActionListener(this,"MenuItemModificarRubroEmplea"));		
		}
		
		
		if(this.jInternalFrameDetalleFormRubroEmplea!=null) { //if(this.conCargarFormDetalle) {			
			this.jInternalFrameDetalleFormRubroEmplea.jButtonActualizarRubroEmplea.addActionListener (new ButtonActionListener(this,"ActualizarRubroEmplea"));
		}
		
		
		if(this.jInternalFrameDetalleFormRubroEmplea!=null) { //if(this.conCargarFormDetalle) {
			this.jInternalFrameDetalleFormRubroEmplea.jButtonActualizarToolBarRubroEmplea.addActionListener(new ButtonActionListener(this,"ActualizarToolBarRubroEmplea"));
				
			this.jInternalFrameDetalleFormRubroEmplea.jMenuItemActualizarRubroEmplea.addActionListener (new ButtonActionListener(this,"MenuItemActualizarRubroEmplea"));		
		}
		
		
		if(this.jInternalFrameDetalleFormRubroEmplea!=null) { //if(this.conCargarFormDetalle) {
			this.jInternalFrameDetalleFormRubroEmplea.jButtonEliminarRubroEmplea.addActionListener (new ButtonActionListener(this,"EliminarRubroEmplea"));
		}
		
		
		if(this.jInternalFrameDetalleFormRubroEmplea!=null) { //if(this.conCargarFormDetalle) {
			this.jInternalFrameDetalleFormRubroEmplea.jButtonEliminarToolBarRubroEmplea.addActionListener (new ButtonActionListener(this,"EliminarToolBarRubroEmplea"));
						
			this.jInternalFrameDetalleFormRubroEmplea.jMenuItemEliminarRubroEmplea.addActionListener (new ButtonActionListener(this,"MenuItemEliminarRubroEmplea"));		
		}
		
		
		if(this.jInternalFrameDetalleFormRubroEmplea!=null) { //if(this.conCargarFormDetalle) {
			this.jInternalFrameDetalleFormRubroEmplea.jButtonCancelarRubroEmplea.addActionListener (new ButtonActionListener(this,"CancelarRubroEmplea"));
		}
		
		
		if(this.jInternalFrameDetalleFormRubroEmplea!=null) { //if(this.conCargarFormDetalle) {
			this.jInternalFrameDetalleFormRubroEmplea.jButtonCancelarToolBarRubroEmplea.addActionListener (new ButtonActionListener(this,"CancelarToolBarRubroEmplea"));
			
			this.jInternalFrameDetalleFormRubroEmplea.jMenuItemCancelarRubroEmplea.addActionListener (new ButtonActionListener(this,"MenuItemCancelarRubroEmplea"));		
		}
		
		this.jButtonMostrarOcultarTablaToolBarRubroEmplea.addActionListener (new ButtonActionListener(this,"MostrarOcultarToolBarRubroEmplea"));		
		
		
		this.jButtonCerrarRubroEmplea.addActionListener (new ButtonActionListener(this,"CerrarRubroEmplea"));
		
		
		this.jButtonCerrarToolBarRubroEmplea.addActionListener (new ButtonActionListener(this,"CerrarToolBarRubroEmplea"));
			
		this.jMenuItemCerrarRubroEmplea.addActionListener (new ButtonActionListener(this,"MenuItemCerrarRubroEmplea"));
			
		if(this.jInternalFrameDetalleFormRubroEmplea!=null) { //if(this.conCargarFormDetalle) {
			this.jInternalFrameDetalleFormRubroEmplea.jMenuItemDetalleCerrarRubroEmplea.addActionListener (new ButtonActionListener(this,"MenuItemDetalleCerrarRubroEmplea"));		
		}
		
		
		if(this.jInternalFrameDetalleFormRubroEmplea!=null) { //if(this.conCargarFormDetalle) {
			this.jInternalFrameDetalleFormRubroEmplea.jButtonGuardarCambiosRubroEmplea.addActionListener (new ButtonActionListener(this,"GuardarCambiosRubroEmplea"));
		}
		
		
		if(this.jInternalFrameDetalleFormRubroEmplea!=null) { //if(this.conCargarFormDetalle) {
			this.jInternalFrameDetalleFormRubroEmplea.jButtonGuardarCambiosToolBarRubroEmplea.addActionListener (new ButtonActionListener(this,"GuardarCambiosToolBarRubroEmplea"));
		}
		
		this.jButtonCopiarToolBarRubroEmplea.addActionListener (new ButtonActionListener(this,"CopiarToolBarRubroEmplea"));
			
		this.jButtonVerFormToolBarRubroEmplea.addActionListener (new ButtonActionListener(this,"VerFormToolBarRubroEmplea"));
		
		this.jMenuItemGuardarCambiosRubroEmplea.addActionListener (new ButtonActionListener(this,"MenuItemGuardarCambiosRubroEmplea"));
			
		this.jMenuItemCopiarRubroEmplea.addActionListener (new ButtonActionListener(this,"MenuItemCopiarRubroEmplea"));		
		
		this.jMenuItemVerFormRubroEmplea.addActionListener (new ButtonActionListener(this,"MenuItemVerFormRubroEmplea"));		
		
		
		this.jButtonGuardarCambiosTablaRubroEmplea.addActionListener (new ButtonActionListener(this,"GuardarCambiosTablaRubroEmplea"));
		
		
		this.jButtonGuardarCambiosTablaToolBarRubroEmplea.addActionListener (new ButtonActionListener(this,"GuardarCambiosTablaToolBarRubroEmplea"));
			
		this.jMenuItemGuardarCambiosTablaRubroEmplea.addActionListener (new ButtonActionListener(this,"GuardarCambiosTablaRubroEmplea"));		
		
		
		
		this.jButtonRecargarInformacionRubroEmplea.addActionListener (new ButtonActionListener(this,"RecargarInformacionRubroEmplea"));
					
		this.jButtonRecargarInformacionToolBarRubroEmplea.addActionListener (new ButtonActionListener(this,"RecargarInformacionToolBarRubroEmplea"));
		
		this.jMenuItemRecargarInformacionRubroEmplea.addActionListener (new ButtonActionListener(this,"MenuItemRecargarInformacionRubroEmplea"));		
		
		
		
		this.jButtonAnterioresRubroEmplea.addActionListener (new ButtonActionListener(this,"AnterioresRubroEmplea"));
		
		
		this.jButtonAnterioresToolBarRubroEmplea.addActionListener (new ButtonActionListener(this,"AnterioresToolBarRubroEmplea"));
		
		this.jMenuItemAnterioresRubroEmplea.addActionListener (new ButtonActionListener(this,"MenuItemAnterioresRubroEmplea"));		
		
		
		this.jButtonSiguientesRubroEmplea.addActionListener (new ButtonActionListener(this,"SiguientesRubroEmplea"));
		
		
		this.jButtonSiguientesToolBarRubroEmplea.addActionListener (new ButtonActionListener(this,"SiguientesToolBarRubroEmplea"));
			
		this.jMenuItemSiguientesRubroEmplea.addActionListener (new ButtonActionListener(this,"MenuItemSiguientesRubroEmplea"));
			
		this.jMenuItemAbrirOrderByRubroEmplea.addActionListener (new ButtonActionListener(this,"MenuItemAbrirOrderByRubroEmplea"));
			
		this.jMenuItemMostrarOcultarRubroEmplea.addActionListener (new ButtonActionListener(this,"MenuItemMostrarOcultarRubroEmplea"));
			
		this.jMenuItemDetalleAbrirOrderByRubroEmplea.addActionListener (new ButtonActionListener(this,"MenuItemDetalleAbrirOrderByRubroEmplea"));
			
		this.jMenuItemDetalleMostarOcultarRubroEmplea.addActionListener (new ButtonActionListener(this,"MenuItemDetalleMostrarOcultarRubroEmplea"));		
		
		
		this.jButtonNuevoGuardarCambiosRubroEmplea.addActionListener (new ButtonActionListener(this,"NuevoGuardarCambiosRubroEmplea"));
		
		
		this.jButtonNuevoGuardarCambiosToolBarRubroEmplea.addActionListener (new ButtonActionListener(this,"NuevoGuardarCambiosToolBarRubroEmplea"));
			
		this.jMenuItemNuevoGuardarCambiosRubroEmplea.addActionListener (new ButtonActionListener(this,"MenuItemNuevoGuardarCambiosRubroEmplea"));		
		
		
		
		//SELECCIONAR TODOS
		
		this.jCheckBoxSeleccionarTodosRubroEmplea.addItemListener(new CheckBoxItemListener(this,"SeleccionarTodosRubroEmplea"));

		this.jCheckBoxSeleccionadosRubroEmplea.addItemListener(new CheckBoxItemListener(this,"SeleccionadosRubroEmplea"));
		
		if(this.jInternalFrameDetalleFormRubroEmplea!=null) { //if(this.conCargarFormDetalle) {
			this.jInternalFrameDetalleFormRubroEmplea.jComboBoxTiposAccionesFormularioRubroEmplea.addActionListener (new ButtonActionListener(this,"TiposAccionesFormularioRubroEmplea"));
		}
		
		
		this.jComboBoxTiposRelacionesRubroEmplea.addActionListener (new ButtonActionListener(this,"TiposRelacionesRubroEmplea"));
			
		this.jComboBoxTiposAccionesRubroEmplea.addActionListener (new ButtonActionListener(this,"TiposAccionesRubroEmplea"));
					
		this.jComboBoxTiposSeleccionarRubroEmplea.addActionListener (new ButtonActionListener(this,"TiposSeleccionarRubroEmplea"));
			
		this.jTextFieldValorCampoGeneralRubroEmplea.addActionListener (new ButtonActionListener(this,"ValorCampoGeneralRubroEmplea"));		
		
		
		if(this.jInternalFrameDetalleFormRubroEmplea!=null) { //if(this.conCargarFormDetalle) {
		
		
		
		//BUSQUEDA GENERAL
		this.jInternalFrameDetalleFormRubroEmplea.jButtonidRubroEmpleaBusqueda.addActionListener(new ButtonActionListener(this,"idRubroEmpleaBusqueda"));
		//ACTUALIZAR FK
		this.jInternalFrameDetalleFormRubroEmplea.jButtonid_empresaRubroEmpleaUpdate.addActionListener(new ButtonActionListener(this,"id_empresaRubroEmpleaUpdate"));
		//BUSQUEDA GENERAL
		this.jInternalFrameDetalleFormRubroEmplea.jButtonid_empresaRubroEmpleaBusqueda.addActionListener(new ButtonActionListener(this,"id_empresaRubroEmpleaBusqueda"));
		//ACTUALIZAR FK
		this.jInternalFrameDetalleFormRubroEmplea.jButtonid_tipo_calculoRubroEmpleaUpdate.addActionListener(new ButtonActionListener(this,"id_tipo_calculoRubroEmpleaUpdate"));
		//BUSQUEDA GENERAL
		this.jInternalFrameDetalleFormRubroEmplea.jButtonid_tipo_calculoRubroEmpleaBusqueda.addActionListener(new ButtonActionListener(this,"id_tipo_calculoRubroEmpleaBusqueda"));
		//ACTUALIZAR FK
		this.jInternalFrameDetalleFormRubroEmplea.jButtonid_tipo_rubro_empleaRubroEmpleaUpdate.addActionListener(new ButtonActionListener(this,"id_tipo_rubro_empleaRubroEmpleaUpdate"));
		//BUSQUEDA GENERAL
		this.jInternalFrameDetalleFormRubroEmplea.jButtonid_tipo_rubro_empleaRubroEmpleaBusqueda.addActionListener(new ButtonActionListener(this,"id_tipo_rubro_empleaRubroEmpleaBusqueda"));
		//ACTUALIZAR FK
		this.jInternalFrameDetalleFormRubroEmplea.jButtonid_tipo_grupo_rubro_empleaRubroEmpleaUpdate.addActionListener(new ButtonActionListener(this,"id_tipo_grupo_rubro_empleaRubroEmpleaUpdate"));
		//BUSQUEDA GENERAL
		this.jInternalFrameDetalleFormRubroEmplea.jButtonid_tipo_grupo_rubro_empleaRubroEmpleaBusqueda.addActionListener(new ButtonActionListener(this,"id_tipo_grupo_rubro_empleaRubroEmpleaBusqueda"));
		//BUSQUEDA GENERAL
		this.jInternalFrameDetalleFormRubroEmplea.jButtoncodigoRubroEmpleaBusqueda.addActionListener(new ButtonActionListener(this,"codigoRubroEmpleaBusqueda"));
		//BUSQUEDA GENERAL
		this.jInternalFrameDetalleFormRubroEmplea.jButtonnombreRubroEmpleaBusqueda.addActionListener(new ButtonActionListener(this,"nombreRubroEmpleaBusqueda"));
		//BUSQUEDA GENERAL
		this.jInternalFrameDetalleFormRubroEmplea.jButtonformulaRubroEmpleaBusqueda.addActionListener(new ButtonActionListener(this,"formulaRubroEmpleaBusqueda"));
		//BUSQUEDA GENERAL
		this.jInternalFrameDetalleFormRubroEmplea.jButtonaliasRubroEmpleaBusqueda.addActionListener(new ButtonActionListener(this,"aliasRubroEmpleaBusqueda"));
		//BUSQUEDA GENERAL
		this.jInternalFrameDetalleFormRubroEmplea.jButtonsecuencialRubroEmpleaBusqueda.addActionListener(new ButtonActionListener(this,"secuencialRubroEmpleaBusqueda"));
		//BUSQUEDA GENERAL
		this.jInternalFrameDetalleFormRubroEmplea.jButtonpara_rol_pagosRubroEmpleaBusqueda.addActionListener(new ButtonActionListener(this,"para_rol_pagosRubroEmpleaBusqueda"));
		//BUSQUEDA GENERAL
		this.jInternalFrameDetalleFormRubroEmplea.jButtonpara_sueldoRubroEmpleaBusqueda.addActionListener(new ButtonActionListener(this,"para_sueldoRubroEmpleaBusqueda"));
		//BUSQUEDA GENERAL
		this.jInternalFrameDetalleFormRubroEmplea.jButtonpara_vacacionesRubroEmpleaBusqueda.addActionListener(new ButtonActionListener(this,"para_vacacionesRubroEmpleaBusqueda"));
		//BUSQUEDA GENERAL
		this.jInternalFrameDetalleFormRubroEmplea.jButtonpara_impuesto_rentaRubroEmpleaBusqueda.addActionListener(new ButtonActionListener(this,"para_impuesto_rentaRubroEmpleaBusqueda"));
		//BUSQUEDA GENERAL
		this.jInternalFrameDetalleFormRubroEmplea.jButtonpara_seguro_socialRubroEmpleaBusqueda.addActionListener(new ButtonActionListener(this,"para_seguro_socialRubroEmpleaBusqueda"));
		//BUSQUEDA GENERAL
		this.jInternalFrameDetalleFormRubroEmplea.jButtonpara_provisionesRubroEmpleaBusqueda.addActionListener(new ButtonActionListener(this,"para_provisionesRubroEmpleaBusqueda"));
		//BUSQUEDA GENERAL
		this.jInternalFrameDetalleFormRubroEmplea.jButtonpara_utilidadesRubroEmpleaBusqueda.addActionListener(new ButtonActionListener(this,"para_utilidadesRubroEmpleaBusqueda"));
		//BUSQUEDA GENERAL
		this.jInternalFrameDetalleFormRubroEmplea.jButtonpara_rubro_iessRubroEmpleaBusqueda.addActionListener(new ButtonActionListener(this,"para_rubro_iessRubroEmpleaBusqueda"));
		//BUSQUEDA GENERAL
		this.jInternalFrameDetalleFormRubroEmplea.jButtones_fondo_reservaRubroEmpleaBusqueda.addActionListener(new ButtonActionListener(this,"es_fondo_reservaRubroEmpleaBusqueda"));
		//BUSQUEDA GENERAL
		this.jInternalFrameDetalleFormRubroEmplea.jButtones_decimo_terceroRubroEmpleaBusqueda.addActionListener(new ButtonActionListener(this,"es_decimo_terceroRubroEmpleaBusqueda"));
		//BUSQUEDA GENERAL
		this.jInternalFrameDetalleFormRubroEmplea.jButtones_decimo_cuartoRubroEmpleaBusqueda.addActionListener(new ButtonActionListener(this,"es_decimo_cuartoRubroEmpleaBusqueda"));
		}
		
		if(!this.conCargarMinimo) {
		//BYDAN_BUSQUEDAS
		
		
			this.jButtonFK_IdTipoCalculoRubroEmplea.addActionListener(new ButtonActionListener(this,"FK_IdTipoCalculoRubroEmplea"));

			this.jButtonFK_IdTipoGrupoRubroEmpleaRubroEmplea.addActionListener(new ButtonActionListener(this,"FK_IdTipoGrupoRubroEmpleaRubroEmplea"));

			this.jButtonFK_IdTipoRubroEmpleaRubroEmplea.addActionListener(new ButtonActionListener(this,"FK_IdTipoRubroEmpleaRubroEmplea"));
		
		
		
			//REPORTE DINAMICO
			
			if(this.jInternalFrameReporteDinamicoRubroEmplea!=null) {
				this.jInternalFrameReporteDinamicoRubroEmplea.getjButtonCerrarReporteDinamico().addActionListener (new ButtonActionListener(this,"CerrarReporteDinamicoRubroEmplea"));
				this.jInternalFrameReporteDinamicoRubroEmplea.getjButtonGenerarReporteDinamico().addActionListener (new ButtonActionListener(this,"GenerarReporteDinamicoRubroEmplea"));
				this.jInternalFrameReporteDinamicoRubroEmplea.getjButtonGenerarExcelReporteDinamico().addActionListener (new ButtonActionListener(this,"GenerarExcelReporteDinamicoRubroEmplea"));
			}
			
			//this.jButtonCerrarReporteDinamicoRubroEmplea.addActionListener (new ButtonActionListener(this,"CerrarReporteDinamicoRubroEmplea"));				
			//this.jButtonGenerarReporteDinamicoRubroEmplea.addActionListener (new ButtonActionListener(this,"GenerarReporteDinamicoRubroEmplea"));
			//this.jButtonGenerarExcelReporteDinamicoRubroEmplea.addActionListener (new ButtonActionListener(this,"GenerarExcelReporteDinamicoRubroEmplea"));
				
				
			//IMPORTACION			
			if(this.jInternalFrameImportacionRubroEmplea!=null) {
				this.jInternalFrameImportacionRubroEmplea.getjButtonCerrarImportacion().addActionListener (new ButtonActionListener(this,"CerrarImportacionRubroEmplea"));
				this.jInternalFrameImportacionRubroEmplea.getjButtonGenerarImportacion().addActionListener (new ButtonActionListener(this,"GenerarImportacionRubroEmplea"));
				this.jInternalFrameImportacionRubroEmplea.getjButtonAbrirImportacion().addActionListener (new ButtonActionListener(this,"AbrirImportacionRubroEmplea"));
			}
			
			//ORDER BY
			this.jButtonAbrirOrderByRubroEmplea.addActionListener (new ButtonActionListener(this,"AbrirOrderByRubroEmplea"));
			
			this.jButtonAbrirOrderByToolBarRubroEmplea.addActionListener (new ButtonActionListener(this,"AbrirOrderByToolBarRubroEmplea"));			
			
			if(this.jInternalFrameOrderByRubroEmplea!=null) {
				this.jInternalFrameOrderByRubroEmplea.getjButtonCerrarOrderBy().addActionListener (new ButtonActionListener(this,"CerrarOrderByRubroEmplea"));				
			}
			
			
		}
		
		
		
		if(!this.conCargarMinimo) {
			if(this.jInternalFrameDetalleFormRubroEmplea!=null) { //if(this.conCargarFormDetalle) {
			;
			}
		}
		
		
		//TABBED PANE RELACIONES
		if(this.jInternalFrameDetalleFormRubroEmplea!=null) { //if(this.conCargarFormDetalle) {
			this.jInternalFrameDetalleFormRubroEmplea.jTabbedPaneRelacionesRubroEmplea.addChangeListener(new TabbedPaneChangeListener(this,"RelacionesRubroEmplea"));
		
		;
		}
		//TABBED PANE RELACIONES FIN(EXTRA TAB)		
	}
	
	/*
	public void initActions() {
		String sMapKey = "";
		InputMap inputMap =null;
		
		this.addInternalFrameListener(new javax.swing.event.InternalFrameAdapter() {
            public void internalFrameClosing(InternalFrameEvent event) {          	
            	try {
            		closingInternalFrameRubroEmplea();
				} catch (Exception e) {
					e.printStackTrace();
				}
            }
        });
		
		this.jInternalFrameDetalleFormRubroEmplea.addInternalFrameListener(new javax.swing.event.InternalFrameAdapter() {
	        public void internalFrameClosing(InternalFrameEvent event) {
	            JInternalFrameBase jInternalFrameDetalleFormRubroEmplea = (JInternalFrameBase)event.getSource();
	            	
	            RubroEmpleaBeanSwingJInternalFrame jInternalFrameParent=(RubroEmpleaBeanSwingJInternalFrame)jInternalFrameDetalleFormRubroEmplea.getjInternalFrameParent();
	                
	            try {
					jInternalFrameParent.jButtonCancelarRubroEmpleaActionPerformed(null);
					
					//jInternalFrameParent.dispose();
					//jInternalFrameParent=null;
					
				} catch (Exception e) {
					e.printStackTrace();
				}
	        }
	    });
			
		this.jTableDatosRubroEmplea.getSelectionModel().addListSelectionListener (
	                new ListSelectionListener() {
	                    public void valueChanged(ListSelectionEvent e) {
							//BYDAN_DESHABILITADO
	                    	//try {jTableDatosRubroEmpleaListSelectionListener(e);}catch(Exception e1){e1.printStackTrace();}
	                    }
	                }
	     );
		
		this.jTableDatosRubroEmplea.addMouseListener(new MouseAdapter() {
			   public void mouseClicked(MouseEvent evt) {
				      if (evt.getClickCount() == 2) {
				    	  jButtonIdActionPerformed(null,jTableDatosRubroEmplea.getSelectedRow(),false,false);
				      }
				   }
		});
		
		this.jButtonNuevoRubroEmplea.addActionListener (
	          new java.awt.event.ActionListener() {
	              public void actionPerformed(ActionEvent evt) {
	            	  try {jButtonNuevoRubroEmpleaActionPerformed(evt,false);}catch(Exception e){e.printStackTrace();}
	              }
	          }
        );
		
		this.jButtonNuevoToolBarRubroEmplea.addActionListener (
	          new java.awt.event.ActionListener() {
	              public void actionPerformed(ActionEvent evt) {
	            	  try {jButtonNuevoRubroEmpleaActionPerformed(evt,false);}catch(Exception e){e.printStackTrace();}
	              }
	          }
        );
		
		this.jMenuItemNuevoRubroEmplea.addActionListener (
	          new java.awt.event.ActionListener() {
	              public void actionPerformed(ActionEvent evt) {
	            	  try {jButtonNuevoRubroEmpleaActionPerformed(evt,false);}catch(Exception e){e.printStackTrace();}
	              }
	          }
        );
		
		sMapKey = "NuevoRubroEmplea";
		inputMap = this.jButtonNuevoRubroEmplea.getInputMap(JComponent.WHEN_IN_FOCUSED_WINDOW);
		inputMap.put(KeyStroke.getKeyStroke(KeyEvent.VK_N , KeyEvent.CTRL_MASK), sMapKey);
			
		this.jButtonNuevoRubroEmplea.getActionMap().put(sMapKey, new AbstractAction() {
			public static final long serialVersionUID = 1L;
			public void actionPerformed(ActionEvent evt) {
			    try {jButtonNuevoRubroEmpleaActionPerformed(evt,false);} catch (Exception e) {e.printStackTrace();}
			}
		});
		
		this.jButtonNuevoRelacionesRubroEmplea.addActionListener (
	          new java.awt.event.ActionListener() {
	              public void actionPerformed(ActionEvent evt) {
	            	  try {jButtonNuevoRubroEmpleaActionPerformed(evt,true);}catch(Exception e){e.printStackTrace();}
	              }
	          }
        );
		
		this.jButtonNuevoRelacionesToolBarRubroEmplea.addActionListener (
	          new java.awt.event.ActionListener() {
	              public void actionPerformed(ActionEvent evt) {
	            	  try {jButtonNuevoRubroEmpleaActionPerformed(evt,true);}catch(Exception e){e.printStackTrace();}
	              }
	          }
        );
		
		this.jMenuItemNuevoRelacionesRubroEmplea.addActionListener (
	          new java.awt.event.ActionListener() {
	              public void actionPerformed(ActionEvent evt) {
	            	  try {jButtonNuevoRubroEmpleaActionPerformed(evt,true);}catch(Exception e){e.printStackTrace();}
	              }
	          }
        );
		
		sMapKey = "NuevoRelacionesRubroEmplea";
		inputMap = this.jButtonNuevoRelacionesRubroEmplea.getInputMap(JComponent.WHEN_IN_FOCUSED_WINDOW);
		inputMap.put(KeyStroke.getKeyStroke(KeyEvent.VK_R , KeyEvent.CTRL_MASK), sMapKey);
			
		this.jButtonNuevoRelacionesRubroEmplea.getActionMap().put(sMapKey, new AbstractAction() {
			public static final long serialVersionUID = 1L;
			public void actionPerformed(ActionEvent evt) {
			    try {jButtonNuevoRubroEmpleaActionPerformed(evt,true);} catch (Exception e) {e.printStackTrace();}
			}
		});
		
		this.jButtonModificarRubroEmplea.addActionListener (
	          new java.awt.event.ActionListener() {
	              public void actionPerformed(ActionEvent evt) {
	            	  try {jButtonModificarRubroEmpleaActionPerformed(evt);}catch(Exception e){e.printStackTrace();}
	              }
	          }
        );
		
		this.jButtonModificarToolBarRubroEmplea.addActionListener (
	          new java.awt.event.ActionListener() {
	              public void actionPerformed(ActionEvent evt) {
	            	  try {jButtonModificarRubroEmpleaActionPerformed(evt);}catch(Exception e){e.printStackTrace();}
	              }
	          }
        );
		
		this.jMenuItemModificarRubroEmplea.addActionListener (
	          new java.awt.event.ActionListener() {
	              public void actionPerformed(ActionEvent evt) {
	            	  try {jButtonModificarRubroEmpleaActionPerformed(evt);}catch(Exception e){e.printStackTrace();}
	              }
	          }
        );
		
		sMapKey = "ModificarRubroEmplea";
		inputMap = this.jButtonModificarRubroEmplea.getInputMap(JComponent.WHEN_IN_FOCUSED_WINDOW);
		inputMap.put(KeyStroke.getKeyStroke(KeyEvent.VK_M , KeyEvent.CTRL_MASK), sMapKey);
			
		this.jButtonModificarRubroEmplea.getActionMap().put(sMapKey, new AbstractAction() {
			public static final long serialVersionUID = 1L;
			public void actionPerformed(ActionEvent evt) {
			    try {jButtonModificarRubroEmpleaActionPerformed(evt);} catch (Exception e) {e.printStackTrace();}
			}
		});
		
		this.jButtonActualizarRubroEmplea.addActionListener (
	          new java.awt.event.ActionListener() {
	              public void actionPerformed(ActionEvent evt) {
	            	  try {jButtonActualizarRubroEmpleaActionPerformed(evt);}catch(Exception e){e.printStackTrace();}
	              }
	          }
        );
		
		this.jButtonActualizarToolBarRubroEmplea.addActionListener (
	          new java.awt.event.ActionListener() {
	              public void actionPerformed(ActionEvent evt) {
	            	  try {jButtonActualizarRubroEmpleaActionPerformed(evt);}catch(Exception e){e.printStackTrace();}
	              }
	          }
        );
		
		this.jMenuItemActualizarRubroEmplea.addActionListener (
	          new java.awt.event.ActionListener() {
	              public void actionPerformed(ActionEvent evt) {
	            	  try {jButtonActualizarRubroEmpleaActionPerformed(evt);}catch(Exception e){e.printStackTrace();}
	              }
	          }
        );
		
		sMapKey = "ActualizarRubroEmplea";
		inputMap = this.jButtonActualizarRubroEmplea.getInputMap(JComponent.WHEN_IN_FOCUSED_WINDOW);
		inputMap.put(KeyStroke.getKeyStroke(KeyEvent.VK_G , KeyEvent.CTRL_MASK), sMapKey);
			
		this.jButtonActualizarRubroEmplea.getActionMap().put(sMapKey, new AbstractAction() {
			public static final long serialVersionUID = 1L;
			public void actionPerformed(ActionEvent evt) {
			    try {jButtonActualizarRubroEmpleaActionPerformed(evt);} catch (Exception e) {e.printStackTrace();}
			}
		});
		
		this.jButtonEliminarRubroEmplea.addActionListener (
	          new java.awt.event.ActionListener() {
	              public void actionPerformed(ActionEvent evt) {
	            	  try {jButtonEliminarRubroEmpleaActionPerformed(evt);}catch(Exception e){e.printStackTrace();}
	              }
	          }
        );
		
		this.jButtonEliminarToolBarRubroEmplea.addActionListener (
	          new java.awt.event.ActionListener() {
	              public void actionPerformed(ActionEvent evt) {
	            	  try {jButtonEliminarRubroEmpleaActionPerformed(evt);}catch(Exception e){e.printStackTrace();}
	              }
	          }
        );
				
		this.jMenuItemEliminarRubroEmplea.addActionListener (
	          new java.awt.event.ActionListener() {
	              public void actionPerformed(ActionEvent evt) {
	            	  try {jButtonEliminarRubroEmpleaActionPerformed(evt);}catch(Exception e){e.printStackTrace();}
	              }
	          }
        );
		
		sMapKey = "EliminarRubroEmplea";
		inputMap = this.jButtonEliminarRubroEmplea.getInputMap(JComponent.WHEN_IN_FOCUSED_WINDOW);
		inputMap.put(KeyStroke.getKeyStroke(KeyEvent.VK_E , KeyEvent.CTRL_MASK), sMapKey);
			
		this.jButtonEliminarRubroEmplea.getActionMap().put(sMapKey, new AbstractAction() {
			public static final long serialVersionUID = 1L;
			public void actionPerformed(ActionEvent evt) {
			    try {jButtonEliminarRubroEmpleaActionPerformed(evt);} catch (Exception e) {e.printStackTrace();}
			}
		});
		
		this.jButtonCancelarRubroEmplea.addActionListener (
	          new java.awt.event.ActionListener() {
	              public void actionPerformed(ActionEvent evt) {
	            	  try {jButtonCancelarRubroEmpleaActionPerformed(evt);}catch(Exception e){e.printStackTrace();}
	              }
	          }
        );
		
		this.jButtonCancelarToolBarRubroEmplea.addActionListener (
	          new java.awt.event.ActionListener() {
	              public void actionPerformed(ActionEvent evt) {
	            	  try {jButtonCancelarRubroEmpleaActionPerformed(evt);}catch(Exception e){e.printStackTrace();}
	              }
	          }
        );
		
		this.jMenuItemCancelarRubroEmplea.addActionListener (
	          new java.awt.event.ActionListener() {
	              public void actionPerformed(ActionEvent evt) {
	            	  try {jButtonCancelarRubroEmpleaActionPerformed(evt);}catch(Exception e){e.printStackTrace();}
	              }
	          }
        );
		
		sMapKey = "CancelarRubroEmplea";
		inputMap = this.jButtonCancelarRubroEmplea.getInputMap(JComponent.WHEN_IN_FOCUSED_WINDOW);
		inputMap.put(KeyStroke.getKeyStroke(KeyEvent.VK_Q , KeyEvent.CTRL_MASK), sMapKey);
			
		this.jButtonCancelarRubroEmplea.getActionMap().put(sMapKey, new AbstractAction() {
			public static final long serialVersionUID = 1L;
			public void actionPerformed(ActionEvent evt) {
			    try {jButtonCancelarRubroEmpleaActionPerformed(evt);} catch (Exception e) {e.printStackTrace();}
			}
		});
		
		this.jButtonCerrarRubroEmplea.addActionListener (
	          new java.awt.event.ActionListener() {
	              public void actionPerformed(ActionEvent evt) {
	            	  try {jButtonCerrarRubroEmpleaActionPerformed(evt);}catch(Exception e){e.printStackTrace();}
	              }
	          }
        );
		
		this.jButtonCerrarToolBarRubroEmplea.addActionListener (
	          new java.awt.event.ActionListener() {
	              public void actionPerformed(ActionEvent evt) {
	            	  try {jButtonCerrarRubroEmpleaActionPerformed(evt);}catch(Exception e){e.printStackTrace();}
	              }
	          }
        );
		
		this.jMenuItemCerrarRubroEmplea.addActionListener (
	          new java.awt.event.ActionListener() {
	              public void actionPerformed(ActionEvent evt) {
	            	  try {jButtonCerrarRubroEmpleaActionPerformed(evt);}catch(Exception e){e.printStackTrace();}
	              }
	          }
        );
		
		this.jMenuItemDetalleCerrarRubroEmplea.addActionListener (
	          new java.awt.event.ActionListener() {
	              public void actionPerformed(ActionEvent evt) {
	            	  //try {jButtonCerrarRubroEmpleaActionPerformed(evt);}catch(Exception e){e.printStackTrace();}
					try {jButtonCancelarRubroEmpleaActionPerformed(evt);}catch(Exception e){e.printStackTrace();}
	              }
	          }
        );
		
		sMapKey = "CerrarRubroEmplea";
		inputMap = this.jButtonCerrarRubroEmplea.getInputMap(JComponent.WHEN_IN_FOCUSED_WINDOW);
		inputMap.put(KeyStroke.getKeyStroke(KeyEvent.VK_C , KeyEvent.ALT_MASK), sMapKey);
			
		this.jButtonCerrarRubroEmplea.getActionMap().put(sMapKey, new AbstractAction() {
			public static final long serialVersionUID = 1L;
			public void actionPerformed(ActionEvent evt) {
			    try {jButtonCerrarRubroEmpleaActionPerformed(evt);} catch (Exception e) {e.printStackTrace();}
			}
		});
		
		this.jInternalFrameDetalleFormRubroEmplea.jButtonGuardarCambiosRubroEmplea.addActionListener (
	          new java.awt.event.ActionListener() {
	              public void actionPerformed(ActionEvent evt) {
	            	  try {jButtonGuardarCambiosRubroEmpleaActionPerformed(evt);}catch(Exception e){e.printStackTrace();}
	              }
	          }
        );
		
		this.jButtonGuardarCambiosToolBarRubroEmplea.addActionListener (
	          new java.awt.event.ActionListener() {
	              public void actionPerformed(ActionEvent evt) {
	            	  try {jButtonGuardarCambiosRubroEmpleaActionPerformed(evt);}catch(Exception e){e.printStackTrace();}
	              }
	          }
        );
		
		this.jMenuItemGuardarCambiosRubroEmplea.addActionListener (
	          new java.awt.event.ActionListener() {
	              public void actionPerformed(ActionEvent evt) {
	            	  try {jButtonGuardarCambiosRubroEmpleaActionPerformed(evt);}catch(Exception e){e.printStackTrace();}
	              }
	          }
        );
		
		this.jButtonGuardarCambiosTablaRubroEmplea.addActionListener (
	          new java.awt.event.ActionListener() {
	              public void actionPerformed(ActionEvent evt) {
	            	  try {jButtonGuardarCambiosRubroEmpleaActionPerformed(evt);}catch(Exception e){e.printStackTrace();}
	              }
	          }
        );
		
		this.jButtonGuardarCambiosTablaToolBarRubroEmplea.addActionListener (
	          new java.awt.event.ActionListener() {
	              public void actionPerformed(ActionEvent evt) {
	            	  try {jButtonGuardarCambiosRubroEmpleaActionPerformed(evt);}catch(Exception e){e.printStackTrace();}
	              }
	          }
        );
		
		this.jMenuItemGuardarCambiosTablaRubroEmplea.addActionListener (
	          new java.awt.event.ActionListener() {
	              public void actionPerformed(ActionEvent evt) {
	            	  try {jButtonGuardarCambiosRubroEmpleaActionPerformed(evt);}catch(Exception e){e.printStackTrace();}
	              }
	          }
        );
		
		sMapKey = "GuardarCambiosRubroEmplea";
		inputMap = this.jInternalFrameDetalleFormRubroEmplea.jButtonGuardarCambiosRubroEmplea.getInputMap(JComponent.WHEN_IN_FOCUSED_WINDOW);
		inputMap.put(KeyStroke.getKeyStroke(KeyEvent.VK_G , KeyEvent.CTRL_MASK), sMapKey);
			
		this.jInternalFrameDetalleFormRubroEmplea.jButtonGuardarCambiosRubroEmplea.getActionMap().put(sMapKey, new AbstractAction() {
			public static final long serialVersionUID = 1L;
			public void actionPerformed(ActionEvent evt) {
			    try {jButtonGuardarCambiosRubroEmpleaActionPerformed(evt);} catch (Exception e) {e.printStackTrace();}
			}
		});
		
		this.jButtonRecargarInformacionRubroEmplea.addActionListener (
	          new java.awt.event.ActionListener() {
	              public void actionPerformed(ActionEvent evt) {
	            	  try {jButtonRecargarInformacionRubroEmpleaActionPerformed(evt);}catch(Exception e){e.printStackTrace();}
	              }
	          }
        );
		
		this.jButtonRecargarInformacionToolBarRubroEmplea.addActionListener (
	          new java.awt.event.ActionListener() {
	              public void actionPerformed(ActionEvent evt) {
	            	  try {jButtonRecargarInformacionRubroEmpleaActionPerformed(evt);}catch(Exception e){e.printStackTrace();}
	              }
	          }
        );
		
		this.jMenuItemRecargarInformacionRubroEmplea.addActionListener (
	          new java.awt.event.ActionListener() {
	              public void actionPerformed(ActionEvent evt) {
	            	  try {jButtonRecargarInformacionRubroEmpleaActionPerformed(evt);}catch(Exception e){e.printStackTrace();}
	              }
	          }
        );
		
		
		this.jButtonAnterioresRubroEmplea.addActionListener (
	          new java.awt.event.ActionListener() {
	              public void actionPerformed(ActionEvent evt) {
	            	  try {jButtonAnterioresRubroEmpleaActionPerformed(evt);}catch(Exception e){e.printStackTrace();}
	              }
	          }
        );
		
		this.jButtonAnterioresToolBarRubroEmplea.addActionListener (
	          new java.awt.event.ActionListener() {
	              public void actionPerformed(ActionEvent evt) {
	            	  try {jButtonAnterioresRubroEmpleaActionPerformed(evt);}catch(Exception e){e.printStackTrace();}
	              }
	          }
        );
		
		this.jMenuItemAnterioresRubroEmplea.addActionListener (
	          new java.awt.event.ActionListener() {
	              public void actionPerformed(ActionEvent evt) {
	            	  try {jButtonAnterioresRubroEmpleaActionPerformed(evt);}catch(Exception e){e.printStackTrace();}
	              }
	          }
        );
		
		this.jButtonSiguientesRubroEmplea.addActionListener (
	          new java.awt.event.ActionListener() {
	              public void actionPerformed(ActionEvent evt) {
	            	  try {jButtonSiguientesRubroEmpleaActionPerformed(evt);}catch(Exception e){e.printStackTrace();}
	              }
	          }
        );
		
		this.jButtonSiguientesToolBarRubroEmplea.addActionListener (
	          new java.awt.event.ActionListener() {
	              public void actionPerformed(ActionEvent evt) {
	            	  try {jButtonSiguientesRubroEmpleaActionPerformed(evt);}catch(Exception e){e.printStackTrace();}
	              }
	          }
        );
		
		this.jMenuItemSiguientesRubroEmplea.addActionListener (
	          new java.awt.event.ActionListener() {
	              public void actionPerformed(ActionEvent evt) {
	            	  try {jButtonSiguientesRubroEmpleaActionPerformed(evt);}catch(Exception e){e.printStackTrace();}
	              }
	          }
        );
		
		this.jButtonNuevoGuardarCambiosRubroEmplea.addActionListener (
	          new java.awt.event.ActionListener() {
	              public void actionPerformed(ActionEvent evt) {
	            	  try {jButtonNuevoGuardarCambiosRubroEmpleaActionPerformed(evt);}catch(Exception e){e.printStackTrace();}
	              }
	          }
        );
		
		this.jButtonNuevoGuardarCambiosToolBarRubroEmplea.addActionListener (
	          new java.awt.event.ActionListener() {
	              public void actionPerformed(ActionEvent evt) {
	            	  try {jButtonNuevoGuardarCambiosRubroEmpleaActionPerformed(evt);}catch(Exception e){e.printStackTrace();}
	              }
	          }
        );
		
		this.jMenuItemNuevoGuardarCambiosRubroEmplea.addActionListener (
	          new java.awt.event.ActionListener() {
	              public void actionPerformed(ActionEvent evt) {
	            	  try {jButtonNuevoGuardarCambiosRubroEmpleaActionPerformed(evt);}catch(Exception e){e.printStackTrace();}
	              }
	          }
        );
		
		
		//SELECCIONAR TODOS
		this.jCheckBoxSeleccionarTodosRubroEmplea.addItemListener(new ItemListener() {		
			public void itemStateChanged(ItemEvent evt) {
				try {jCheckBoxSeleccionarTodosRubroEmpleaItemListener(evt);}catch(Exception e){e.printStackTrace();}
			}
		});

		this.jComboBoxTiposAccionesRubroEmplea.addActionListener (new ActionListener () {
			public void actionPerformed(ActionEvent e) {
				try {jComboBoxTiposAccionesRubroEmpleaActionListener(e);} catch (Exception e1) { e1.printStackTrace();}
			};
		});
		
		this.jComboBoxTiposSeleccionarRubroEmplea.addActionListener (new ActionListener () {
			public void actionPerformed(ActionEvent e) {
				try {jComboBoxTiposSeleccionarRubroEmpleaActionListener(e);} catch (Exception e1) { e1.printStackTrace();}
			};
		});
		
		this.jTextFieldValorCampoGeneralRubroEmplea.addActionListener (new ActionListener () {
			public void actionPerformed(ActionEvent e) {
				try {jTextFieldValorCampoGeneralRubroEmpleaActionListener(e);} catch (Exception e1) { e1.printStackTrace();}
			};
		});
		
		
		//BUSQUEDA GENERAL
		this.jInternalFrameDetalleFormRubroEmplea.jButtonidRubroEmpleaBusqueda.addActionListener(new ButtonActionListener(this,"idRubroEmpleaBusqueda"));
		//ACTUALIZAR FK
		this.jInternalFrameDetalleFormRubroEmplea.jButtonid_empresaRubroEmpleaUpdate.addActionListener(new ButtonActionListener(this,"id_empresaRubroEmpleaUpdate"));
		//BUSQUEDA GENERAL
		this.jInternalFrameDetalleFormRubroEmplea.jButtonid_empresaRubroEmpleaBusqueda.addActionListener(new ButtonActionListener(this,"id_empresaRubroEmpleaBusqueda"));
		//ACTUALIZAR FK
		this.jInternalFrameDetalleFormRubroEmplea.jButtonid_tipo_calculoRubroEmpleaUpdate.addActionListener(new ButtonActionListener(this,"id_tipo_calculoRubroEmpleaUpdate"));
		//BUSQUEDA GENERAL
		this.jInternalFrameDetalleFormRubroEmplea.jButtonid_tipo_calculoRubroEmpleaBusqueda.addActionListener(new ButtonActionListener(this,"id_tipo_calculoRubroEmpleaBusqueda"));
		//ACTUALIZAR FK
		this.jInternalFrameDetalleFormRubroEmplea.jButtonid_tipo_rubro_empleaRubroEmpleaUpdate.addActionListener(new ButtonActionListener(this,"id_tipo_rubro_empleaRubroEmpleaUpdate"));
		//BUSQUEDA GENERAL
		this.jInternalFrameDetalleFormRubroEmplea.jButtonid_tipo_rubro_empleaRubroEmpleaBusqueda.addActionListener(new ButtonActionListener(this,"id_tipo_rubro_empleaRubroEmpleaBusqueda"));
		//ACTUALIZAR FK
		this.jInternalFrameDetalleFormRubroEmplea.jButtonid_tipo_grupo_rubro_empleaRubroEmpleaUpdate.addActionListener(new ButtonActionListener(this,"id_tipo_grupo_rubro_empleaRubroEmpleaUpdate"));
		//BUSQUEDA GENERAL
		this.jInternalFrameDetalleFormRubroEmplea.jButtonid_tipo_grupo_rubro_empleaRubroEmpleaBusqueda.addActionListener(new ButtonActionListener(this,"id_tipo_grupo_rubro_empleaRubroEmpleaBusqueda"));
		//BUSQUEDA GENERAL
		this.jInternalFrameDetalleFormRubroEmplea.jButtoncodigoRubroEmpleaBusqueda.addActionListener(new ButtonActionListener(this,"codigoRubroEmpleaBusqueda"));
		//BUSQUEDA GENERAL
		this.jInternalFrameDetalleFormRubroEmplea.jButtonnombreRubroEmpleaBusqueda.addActionListener(new ButtonActionListener(this,"nombreRubroEmpleaBusqueda"));
		//BUSQUEDA GENERAL
		this.jInternalFrameDetalleFormRubroEmplea.jButtonformulaRubroEmpleaBusqueda.addActionListener(new ButtonActionListener(this,"formulaRubroEmpleaBusqueda"));
		//BUSQUEDA GENERAL
		this.jInternalFrameDetalleFormRubroEmplea.jButtonaliasRubroEmpleaBusqueda.addActionListener(new ButtonActionListener(this,"aliasRubroEmpleaBusqueda"));
		//BUSQUEDA GENERAL
		this.jInternalFrameDetalleFormRubroEmplea.jButtonsecuencialRubroEmpleaBusqueda.addActionListener(new ButtonActionListener(this,"secuencialRubroEmpleaBusqueda"));
		//BUSQUEDA GENERAL
		this.jInternalFrameDetalleFormRubroEmplea.jButtonpara_rol_pagosRubroEmpleaBusqueda.addActionListener(new ButtonActionListener(this,"para_rol_pagosRubroEmpleaBusqueda"));
		//BUSQUEDA GENERAL
		this.jInternalFrameDetalleFormRubroEmplea.jButtonpara_sueldoRubroEmpleaBusqueda.addActionListener(new ButtonActionListener(this,"para_sueldoRubroEmpleaBusqueda"));
		//BUSQUEDA GENERAL
		this.jInternalFrameDetalleFormRubroEmplea.jButtonpara_vacacionesRubroEmpleaBusqueda.addActionListener(new ButtonActionListener(this,"para_vacacionesRubroEmpleaBusqueda"));
		//BUSQUEDA GENERAL
		this.jInternalFrameDetalleFormRubroEmplea.jButtonpara_impuesto_rentaRubroEmpleaBusqueda.addActionListener(new ButtonActionListener(this,"para_impuesto_rentaRubroEmpleaBusqueda"));
		//BUSQUEDA GENERAL
		this.jInternalFrameDetalleFormRubroEmplea.jButtonpara_seguro_socialRubroEmpleaBusqueda.addActionListener(new ButtonActionListener(this,"para_seguro_socialRubroEmpleaBusqueda"));
		//BUSQUEDA GENERAL
		this.jInternalFrameDetalleFormRubroEmplea.jButtonpara_provisionesRubroEmpleaBusqueda.addActionListener(new ButtonActionListener(this,"para_provisionesRubroEmpleaBusqueda"));
		//BUSQUEDA GENERAL
		this.jInternalFrameDetalleFormRubroEmplea.jButtonpara_utilidadesRubroEmpleaBusqueda.addActionListener(new ButtonActionListener(this,"para_utilidadesRubroEmpleaBusqueda"));
		//BUSQUEDA GENERAL
		this.jInternalFrameDetalleFormRubroEmplea.jButtonpara_rubro_iessRubroEmpleaBusqueda.addActionListener(new ButtonActionListener(this,"para_rubro_iessRubroEmpleaBusqueda"));
		//BUSQUEDA GENERAL
		this.jInternalFrameDetalleFormRubroEmplea.jButtones_fondo_reservaRubroEmpleaBusqueda.addActionListener(new ButtonActionListener(this,"es_fondo_reservaRubroEmpleaBusqueda"));
		//BUSQUEDA GENERAL
		this.jInternalFrameDetalleFormRubroEmplea.jButtones_decimo_terceroRubroEmpleaBusqueda.addActionListener(new ButtonActionListener(this,"es_decimo_terceroRubroEmpleaBusqueda"));
		//BUSQUEDA GENERAL
		this.jInternalFrameDetalleFormRubroEmplea.jButtones_decimo_cuartoRubroEmpleaBusqueda.addActionListener(new ButtonActionListener(this,"es_decimo_cuartoRubroEmpleaBusqueda"));
		
		
		this.jButtonFK_IdTipoCalculoRubroEmplea.addActionListener(new ButtonActionListener(this,"FK_IdTipoCalculoRubroEmplea"));

		this.jButtonFK_IdTipoGrupoRubroEmpleaRubroEmplea.addActionListener(new ButtonActionListener(this,"FK_IdTipoGrupoRubroEmpleaRubroEmplea"));

		this.jButtonFK_IdTipoRubroEmpleaRubroEmplea.addActionListener(new ButtonActionListener(this,"FK_IdTipoRubroEmpleaRubroEmplea"));

		
		//REPORTE DINAMICO
		this.jButtonCerrarReporteDinamicoRubroEmplea.addActionListener (
	          new java.awt.event.ActionListener() {
	              public void actionPerformed(ActionEvent evt) {
	            	  try {jButtonCerrarReporteDinamicoRubroEmpleaActionPerformed(evt);}catch(Exception e){e.printStackTrace();}
	              }
	          }
        );
		
		this.jButtonGenerarReporteDinamicoRubroEmplea.addActionListener (
	          new java.awt.event.ActionListener() {
	              public void actionPerformed(ActionEvent evt) {
	            	  try {jButtonGenerarReporteDinamicoRubroEmpleaActionPerformed(evt);}catch(Exception e){e.printStackTrace();}
	              }
	          }
        );
		
		this.jButtonGenerarExcelReporteDinamicoRubroEmplea.addActionListener (
	          new java.awt.event.ActionListener() {
	              public void actionPerformed(ActionEvent evt) {
	            	  try {jButtonGenerarExcelReporteDinamicoRubroEmpleaActionPerformed(evt);}catch(Exception e){e.printStackTrace();}
	              }
	          }
        );
		
		//IMPORTACION
		this.jButtonCerrarImportacionRubroEmplea.addActionListener (
	          new java.awt.event.ActionListener() {
	              public void actionPerformed(ActionEvent evt) {
	            	  try {jButtonCerrarImportacionRubroEmpleaActionPerformed(evt);}catch(Exception e){e.printStackTrace();}
	              }
	          }
        );
		
		this.jButtonGenerarImportacionRubroEmplea.addActionListener (
	          new java.awt.event.ActionListener() {
	              public void actionPerformed(ActionEvent evt) {
	            	  try {jButtonGenerarImportacionRubroEmpleaActionPerformed(evt);}catch(Exception e){e.printStackTrace();}
	              }
	          }
        );
		
		this.jButtonAbrirImportacionRubroEmplea.addActionListener (
	          new java.awt.event.ActionListener() {
	              public void actionPerformed(ActionEvent evt) {
	            	  try {jButtonAbrirImportacionRubroEmpleaActionPerformed(evt);}catch(Exception e){e.printStackTrace();}
	              }
	          }
        );
	}
	*/
	
	
	public void jComboBoxTiposSeleccionarRubroEmpleaActionListener(ActionEvent evt) throws Exception {    		
		try {			
			Reporte reporte=(Reporte)this.jComboBoxTiposSeleccionarRubroEmplea.getSelectedItem();
			
			//if(reporte.getsCodigo().equals("SELECCIONAR")) {
			//}					
		} catch(Exception e) {
			FuncionesSwing.manageException(this, e,logger,RubroEmpleaConstantesFunciones.CLASSNAME);
		}
	}	
	
	
	
	public void seleccionarTodosRubroEmplea(Boolean conSeleccionarTodos) throws Exception {    		
		try {
			if(Constantes.ISUSAEJBLOGICLAYER) {				
				for(RubroEmplea rubroempleaAux:this.rubroempleaLogic.getRubroEmpleas()) {
					rubroempleaAux.setIsSelected(conSeleccionarTodos);
				}			
			} else if(Constantes.ISUSAEJBREMOTE||Constantes.ISUSAEJBHOME) {
				for(RubroEmplea rubroempleaAux:rubroempleas) {
					rubroempleaAux.setIsSelected(conSeleccionarTodos);
				}
			}
		} catch(Exception e) {
			FuncionesSwing.manageException(this, e,logger,RubroEmpleaConstantesFunciones.CLASSNAME);
		}
	}
	
	public void jCheckBoxSeleccionarTodosRubroEmpleaItemListener(ItemEvent evt) throws Exception {    		
		try {			
			this.inicializarActualizarBindingRubroEmplea(false,false);
			
			//JCheckBox jCheckBox=(JCheckBox)evt.getSource();			
			//System.out.println("ok");		
			
			Boolean existe=false;
			
			if(sTipoSeleccionar.equals("COLUMNAS")) {
				existe=true;
				
				if(Constantes.ISUSAEJBLOGICLAYER) {				
					for(RubroEmplea rubroempleaAux:this.rubroempleaLogic.getRubroEmpleas()) {
						rubroempleaAux.setIsSelected(this.isSeleccionarTodos);
					}			
				} else if(Constantes.ISUSAEJBREMOTE||Constantes.ISUSAEJBHOME) {
					for(RubroEmplea rubroempleaAux:rubroempleas) {
						rubroempleaAux.setIsSelected(this.isSeleccionarTodos);
					}
				}
			} else {
				if(Constantes.ISUSAEJBLOGICLAYER) {
					for(RubroEmplea rubroempleaAux:this.rubroempleaLogic.getRubroEmpleas()) {
					
						if(sTipoSeleccionar.equals(RubroEmpleaConstantesFunciones.LABEL_PARAROLPAGOS)) {
							existe=true;
							rubroempleaAux.setpara_rol_pagos(this.isSeleccionarTodos);
						}
						 else if(sTipoSeleccionar.equals(RubroEmpleaConstantesFunciones.LABEL_PARASUELDO)) {
							existe=true;
							rubroempleaAux.setpara_sueldo(this.isSeleccionarTodos);
						}
						 else if(sTipoSeleccionar.equals(RubroEmpleaConstantesFunciones.LABEL_PARAVACACIONES)) {
							existe=true;
							rubroempleaAux.setpara_vacaciones(this.isSeleccionarTodos);
						}
						 else if(sTipoSeleccionar.equals(RubroEmpleaConstantesFunciones.LABEL_PARAIMPUESTORENTA)) {
							existe=true;
							rubroempleaAux.setpara_impuesto_renta(this.isSeleccionarTodos);
						}
						 else if(sTipoSeleccionar.equals(RubroEmpleaConstantesFunciones.LABEL_PARASEGUROSOCIAL)) {
							existe=true;
							rubroempleaAux.setpara_seguro_social(this.isSeleccionarTodos);
						}
						 else if(sTipoSeleccionar.equals(RubroEmpleaConstantesFunciones.LABEL_PARAPROVISIONES)) {
							existe=true;
							rubroempleaAux.setpara_provisiones(this.isSeleccionarTodos);
						}
						 else if(sTipoSeleccionar.equals(RubroEmpleaConstantesFunciones.LABEL_PARAUTILIDADES)) {
							existe=true;
							rubroempleaAux.setpara_utilidades(this.isSeleccionarTodos);
						}
						 else if(sTipoSeleccionar.equals(RubroEmpleaConstantesFunciones.LABEL_PARARUBROIESS)) {
							existe=true;
							rubroempleaAux.setpara_rubro_iess(this.isSeleccionarTodos);
						}
						 else if(sTipoSeleccionar.equals(RubroEmpleaConstantesFunciones.LABEL_ESFONDORESERVA)) {
							existe=true;
							rubroempleaAux.setes_fondo_reserva(this.isSeleccionarTodos);
						}
						 else if(sTipoSeleccionar.equals(RubroEmpleaConstantesFunciones.LABEL_ESDECIMOTERCERO)) {
							existe=true;
							rubroempleaAux.setes_decimo_tercero(this.isSeleccionarTodos);
						}
						 else if(sTipoSeleccionar.equals(RubroEmpleaConstantesFunciones.LABEL_ESDECIMOCUARTO)) {
							existe=true;
							rubroempleaAux.setes_decimo_cuarto(this.isSeleccionarTodos);
						}
					}	
				} else if(Constantes.ISUSAEJBREMOTE||Constantes.ISUSAEJBHOME) {
					for(RubroEmplea rubroempleaAux:rubroempleas) {
						
						if(sTipoSeleccionar.equals(RubroEmpleaConstantesFunciones.LABEL_PARAROLPAGOS)) {
							existe=true;
							rubroempleaAux.setpara_rol_pagos(this.isSeleccionarTodos);
						}
						 else if(sTipoSeleccionar.equals(RubroEmpleaConstantesFunciones.LABEL_PARASUELDO)) {
							existe=true;
							rubroempleaAux.setpara_sueldo(this.isSeleccionarTodos);
						}
						 else if(sTipoSeleccionar.equals(RubroEmpleaConstantesFunciones.LABEL_PARAVACACIONES)) {
							existe=true;
							rubroempleaAux.setpara_vacaciones(this.isSeleccionarTodos);
						}
						 else if(sTipoSeleccionar.equals(RubroEmpleaConstantesFunciones.LABEL_PARAIMPUESTORENTA)) {
							existe=true;
							rubroempleaAux.setpara_impuesto_renta(this.isSeleccionarTodos);
						}
						 else if(sTipoSeleccionar.equals(RubroEmpleaConstantesFunciones.LABEL_PARASEGUROSOCIAL)) {
							existe=true;
							rubroempleaAux.setpara_seguro_social(this.isSeleccionarTodos);
						}
						 else if(sTipoSeleccionar.equals(RubroEmpleaConstantesFunciones.LABEL_PARAPROVISIONES)) {
							existe=true;
							rubroempleaAux.setpara_provisiones(this.isSeleccionarTodos);
						}
						 else if(sTipoSeleccionar.equals(RubroEmpleaConstantesFunciones.LABEL_PARAUTILIDADES)) {
							existe=true;
							rubroempleaAux.setpara_utilidades(this.isSeleccionarTodos);
						}
						 else if(sTipoSeleccionar.equals(RubroEmpleaConstantesFunciones.LABEL_PARARUBROIESS)) {
							existe=true;
							rubroempleaAux.setpara_rubro_iess(this.isSeleccionarTodos);
						}
						 else if(sTipoSeleccionar.equals(RubroEmpleaConstantesFunciones.LABEL_ESFONDORESERVA)) {
							existe=true;
							rubroempleaAux.setes_fondo_reserva(this.isSeleccionarTodos);
						}
						 else if(sTipoSeleccionar.equals(RubroEmpleaConstantesFunciones.LABEL_ESDECIMOTERCERO)) {
							existe=true;
							rubroempleaAux.setes_decimo_tercero(this.isSeleccionarTodos);
						}
						 else if(sTipoSeleccionar.equals(RubroEmpleaConstantesFunciones.LABEL_ESDECIMOCUARTO)) {
							existe=true;
							rubroempleaAux.setes_decimo_cuarto(this.isSeleccionarTodos);
						}
					}
				}
			}
					
			if(existe) {
				this.inicializarActualizarBindingTablaRubroEmplea(false);
			} else {
				JOptionPane.showMessageDialog(this,"NO SE HA SELECCIONADO ALGUNA COLUMNA VALIDA","SELECCIONAR",JOptionPane.ERROR_MESSAGE);
			}	
			
			//TableCellRenderer tableCellRenderer=null;			
			
			//TableCellEditor tableCellEditor=null;						
						
			//FUNCIONA CON MODEL PERO SE DANA MANTENIMIENTO
			/*
			for(int i = 0; i < this.jTableDatosRubroEmplea.getRowCount(); i++) {				
				tableCellRenderer=this.jTableDatosSistema.getCellRenderer(i, 2);
				tableCellEditor=this.jTableDatosSistema.getCellEditor(i, 2);
				
				idSeleccionarTableCell=(IdSeleccionarTableCell)tableCellRenderer;				
				idSeleccionarTableCell.jCheckBoxId.setSelected(jCheckBox.isSelected());
				
				idSeleccionarTableCell=(IdSeleccionarTableCell)tableCellEditor;
				
				if(idSeleccionarTableCell.jCheckBoxId!=null) {
					idSeleccionarTableCell.jCheckBoxId.setSelected(jCheckBox.isSelected());
				}
				
				//System.out.println(idSeleccionarTableCell.valor);
				
				//this.jTableDatosRubroEmplea.getModel().setValueAt(jCheckBox.isSelected(), i, Funciones2.getColumnIndexByName(this.jTableDatosRubroEmplea,Constantes2.S_SELECCIONAR));
		    } 
			*/
					
		} catch(Exception e) {
			FuncionesSwing.manageException(this, e,logger,RubroEmpleaConstantesFunciones.CLASSNAME);
		}
	}
	
	public void jCheckBoxSeleccionadosRubroEmpleaItemListener(ItemEvent evt) throws Exception {    		
		try {			
			this.inicializarActualizarBindingRubroEmplea(false,false);
			
			//JCheckBox jCheckBox=(JCheckBox)evt.getSource();			
			//System.out.println("ok");		
			
			Boolean existe=false;
			int[] arrNumRowsSeleccionados=null;
			
			arrNumRowsSeleccionados=this.jTableDatosRubroEmplea.getSelectedRows();
			
			RubroEmplea rubroempleaLocal=new RubroEmplea();
			
			//this.seleccionarTodosRubroEmplea(false);
			
			for(Integer iNumRowSeleccionado:arrNumRowsSeleccionados) {
				existe=true;
				
				if(Constantes.ISUSAEJBLOGICLAYER) {
					rubroempleaLocal =(RubroEmplea) this.rubroempleaLogic.getRubroEmpleas().toArray()[this.jTableDatosRubroEmplea.convertRowIndexToModel(iNumRowSeleccionado)];
				} else if(Constantes.ISUSAEJBREMOTE || Constantes.ISUSAEJBHOME) {
					rubroempleaLocal =(RubroEmplea) this.rubroempleas.toArray()[this.jTableDatosRubroEmplea.convertRowIndexToModel(iNumRowSeleccionado)];
				}
				
				rubroempleaLocal.setIsSelected(this.isSeleccionados);
			}
			
			/*
			if(sTipoSeleccionar.equals("SELECCIONAR")) {
				existe=true;
				
				if(Constantes.ISUSAEJBLOGICLAYER) {				
					for(RubroEmplea rubroempleaAux:this.rubroempleaLogic.getRubroEmpleas()) {
						rubroempleaAux.setIsSelected(this.isSeleccionados);
					}			
				} else if(Constantes.ISUSAEJBREMOTE||Constantes.ISUSAEJBHOME) {
					for(RubroEmplea rubroempleaAux:rubroempleas) {
						rubroempleaAux.setIsSelected(this.isSeleccionados);
					}
				}
			}
			*/
			
			//if(existe) {
				this.inicializarActualizarBindingTablaRubroEmplea(false);
			/*
			} else {
				JOptionPane.showMessageDialog(this,"NO SE HA SELECCIONADO ALGUNA COLUMNA VALIDA","SELECCIONAR",JOptionPane.ERROR_MESSAGE);
			}	
			*/
			
			
			//TableCellRenderer tableCellRenderer=null;			
			
			//TableCellEditor tableCellEditor=null;						
						
			//FUNCIONA CON MODEL PERO SE DANA MANTENIMIENTO
			/*
			for(int i = 0; i < this.jTableDatosRubroEmplea.getRowCount(); i++) {				
				tableCellRenderer=this.jTableDatosSistema.getCellRenderer(i, 2);
				tableCellEditor=this.jTableDatosSistema.getCellEditor(i, 2);
				
				idSeleccionarTableCell=(IdSeleccionarTableCell)tableCellRenderer;				
				idSeleccionarTableCell.jCheckBoxId.setSelected(jCheckBox.isSelected());
				
				idSeleccionarTableCell=(IdSeleccionarTableCell)tableCellEditor;
				
				if(idSeleccionarTableCell.jCheckBoxId!=null) {
					idSeleccionarTableCell.jCheckBoxId.setSelected(jCheckBox.isSelected());
				}
				
				//System.out.println(idSeleccionarTableCell.valor);
				
				//this.jTableDatosRubroEmplea.getModel().setValueAt(jCheckBox.isSelected(), i, Funciones2.getColumnIndexByName(this.jTableDatosRubroEmplea,Constantes2.S_SELECCIONAR));
		    } 
			*/
					
		} catch(Exception e) {
			FuncionesSwing.manageException(this, e,logger,RubroEmpleaConstantesFunciones.CLASSNAME);
		}
	}
	
	public void jCheckBoxSeleccionarActualRubroEmpleaItemListener(ItemEvent evt,Long idActual) throws Exception {    		
		try {
			
		} catch(Exception e) {
			FuncionesSwing.manageException(this, e,logger,RubroEmpleaConstantesFunciones.CLASSNAME);
		}
	}
	
	public void ejecutarAuxiliarRubroEmpleaParaAjaxPostBack() throws Exception {    		
		try {
			
		} catch(Exception e) {
			FuncionesSwing.manageException(this, e,logger,RubroEmpleaConstantesFunciones.CLASSNAME);
		}
	}
	
	public void jTextFieldValorCampoGeneralRubroEmpleaActionListener(ActionEvent evt) throws Exception {    		
		try {
			this.inicializarActualizarBindingRubroEmplea(false,false);
			
			//System.out.println(this.jTextFieldValorCampoGeneralRubroEmplea.getText());		
			
			Boolean existe=false;
			
			if(Constantes.ISUSAEJBLOGICLAYER) {
				for(RubroEmplea rubroempleaAux:this.rubroempleaLogic.getRubroEmpleas()) {
				
						if(sTipoSeleccionar.equals(RubroEmpleaConstantesFunciones.LABEL_CODIGO)) {
							existe=true;
							rubroempleaAux.setcodigo(this.sValorCampoGeneral);
						}
						 else if(sTipoSeleccionar.equals(RubroEmpleaConstantesFunciones.LABEL_NOMBRE)) {
							existe=true;
							rubroempleaAux.setnombre(this.sValorCampoGeneral);
						}
						 else if(sTipoSeleccionar.equals(RubroEmpleaConstantesFunciones.LABEL_FORMULA)) {
							existe=true;
							rubroempleaAux.setformula(this.sValorCampoGeneral);
						}
						 else if(sTipoSeleccionar.equals(RubroEmpleaConstantesFunciones.LABEL_ALIAS)) {
							existe=true;
							rubroempleaAux.setalias(this.sValorCampoGeneral);
						}
						 else if(sTipoSeleccionar.equals(RubroEmpleaConstantesFunciones.LABEL_SECUENCIAL)) {
							existe=true;
							rubroempleaAux.setsecuencial(Integer.parseInt(this.sValorCampoGeneral));
						}
				}	
			} else if(Constantes.ISUSAEJBREMOTE||Constantes.ISUSAEJBHOME) {
				for(RubroEmplea rubroempleaAux:rubroempleas) {
					
						if(sTipoSeleccionar.equals(RubroEmpleaConstantesFunciones.LABEL_CODIGO)) {
							existe=true;
							rubroempleaAux.setcodigo(this.sValorCampoGeneral);
						}
						 else if(sTipoSeleccionar.equals(RubroEmpleaConstantesFunciones.LABEL_NOMBRE)) {
							existe=true;
							rubroempleaAux.setnombre(this.sValorCampoGeneral);
						}
						 else if(sTipoSeleccionar.equals(RubroEmpleaConstantesFunciones.LABEL_FORMULA)) {
							existe=true;
							rubroempleaAux.setformula(this.sValorCampoGeneral);
						}
						 else if(sTipoSeleccionar.equals(RubroEmpleaConstantesFunciones.LABEL_ALIAS)) {
							existe=true;
							rubroempleaAux.setalias(this.sValorCampoGeneral);
						}
						 else if(sTipoSeleccionar.equals(RubroEmpleaConstantesFunciones.LABEL_SECUENCIAL)) {
							existe=true;
							rubroempleaAux.setsecuencial(Integer.parseInt(this.sValorCampoGeneral));
						}
				}
			}
								
			if(existe) {
				this.inicializarActualizarBindingTablaRubroEmplea(false);
			} else {
				JOptionPane.showMessageDialog(this,"NO SE HA SELECCIONADO ALGUNA COLUMNA VALIDA","SELECCIONAR",JOptionPane.ERROR_MESSAGE);
			}			
		} catch(Exception e) {
			FuncionesSwing.manageException(this, e,logger,RubroEmpleaConstantesFunciones.CLASSNAME);
		}
	}
	
	public void jComboBoxTiposAccionesRubroEmpleaActionListener(ActionEvent evt,Boolean esParaAccionDesdeFormulario) throws Exception {    				
		Boolean conSplash=true;
		
		try {							
		
			this.inicializarActualizarBindingRubroEmplea(false,false);
			
			Reporte reporte=new Reporte();
			
			this.esParaAccionDesdeFormularioRubroEmplea=esParaAccionDesdeFormulario;
			
			if(!esParaAccionDesdeFormulario) {
				
				reporte=(Reporte)this.jComboBoxTiposAccionesRubroEmplea.getSelectedItem();
				
			} else {
				reporte=(Reporte)this.jInternalFrameDetalleFormRubroEmplea.jComboBoxTiposAccionesFormularioRubroEmplea.getSelectedItem();
			}
			String sTipoAccionLocal=this.sTipoAccion;
			
			if(!esParaAccionDesdeFormulario) {
				sTipoAccionLocal=this.sTipoAccion;
			} else {
				sTipoAccionLocal=this.sTipoAccionFormulario;
			}
			
			if(sTipoAccionLocal.equals("GENERAR REPORTE")) {//reporte.getsCodigo().equals("GENERAR REPORTE")) {
				if(this.isPermisoReporteRubroEmplea) {				
					conSplash=true;//false;										
					
					//this.startProcessRubroEmplea(conSplash);
				
					this.generarReporteRubroEmpleasSeleccionados();
				} else {
					JOptionPane.showMessageDialog(this,"NO TIENE PERMISO PARA GENERAR REPORTES","REPORTE",JOptionPane.ERROR_MESSAGE);					
				}
				if(!esParaAccionDesdeFormulario) {
					
					this.jComboBoxTiposAccionesRubroEmplea.setSelectedIndex(0);					
					
				} else {
					this.jInternalFrameDetalleFormRubroEmplea.jComboBoxTiposAccionesFormularioRubroEmplea.setSelectedIndex(0);					
				}
			} else if(sTipoAccionLocal.equals("GENERAR REPORTE DINAMICO")) {//reporte.getsCodigo().equals("GENERAR_REPORTE_GROUP_GENERICO")) {
				//SE GENERA REPORTE SEGUN TIPO REPORTE SELECCIONADO
				//this.mostrarReporteDinamicoRubroEmpleasSeleccionados();
				//this.jComboBoxTiposAccionesRubroEmplea.setSelectedIndex(0);					
			}  else if(sTipoAccionLocal.equals("GENERAR_REPORTE_GROUP_GENERICO")) {//reporte.getsCodigo().equals("GENERAR_REPORTE_GROUP_GENERICO")) {
				//SE GENERA REPORTE SEGUN TIPO REPORTE SELECCIONADO
				//this.generarReporteGroupGenericoRubroEmpleasSeleccionados(false);
				//this.jComboBoxTiposAccionesRubroEmplea.setSelectedIndex(0);					
			} else if(sTipoAccionLocal.equals("GENERAR_REPORTE_TOTALES_GROUP_GENERICO")) {//reporte.getsCodigo().equals("GENERAR_REPORTE_GROUP_GENERICO")) {
				//SE GENERA REPORTE SEGUN TIPO REPORTE SELECCIONADO
				//this.generarReporteGroupGenericoRubroEmpleasSeleccionados(true);
				//this.jComboBoxTiposAccionesRubroEmplea.setSelectedIndex(0);					
			} else if(sTipoAccionLocal.equals("EXPORTAR_DATOS")) {//reporte.getsCodigo().equals("GENERAR_REPORTE_GROUP_GENERICO")) {
				//this.startProcessRubroEmplea();
				
				this.exportarRubroEmpleasSeleccionados();
				if(!esParaAccionDesdeFormulario) {
					
					this.jComboBoxTiposAccionesRubroEmplea.setSelectedIndex(0);					
					
				} else {
					this.jInternalFrameDetalleFormRubroEmplea.jComboBoxTiposAccionesFormularioRubroEmplea.setSelectedIndex(0);					
				}					
			} else if(sTipoAccionLocal.equals("IMPORTAR_DATOS")) {//reporte.getsCodigo().equals("GENERAR_REPORTE_GROUP_GENERICO")) {
				this.mostrarImportacionRubroEmpleas();
				//this.importarRubroEmpleas();
				if(!esParaAccionDesdeFormulario) {
					
					this.jComboBoxTiposAccionesRubroEmplea.setSelectedIndex(0);					
					
				} else {
					this.jInternalFrameDetalleFormRubroEmplea.jComboBoxTiposAccionesFormularioRubroEmplea.setSelectedIndex(0);					
				}					
			} else if(sTipoAccionLocal.equals("EXPORTAR_DATOS_EXCEL")) {//reporte.getsCodigo().equals("GENERAR_REPORTE_GROUP_GENERICO")) {
				//this.startProcessRubroEmplea();
				//SE EXPORTA SEGUN TIPO ARCHIVO SELECCIONADO
				//this.exportarExcelRubroEmpleasSeleccionados();
				//this.jComboBoxTiposAccionesRubroEmplea.setSelectedIndex(0);					
			}  else if(sTipoAccionLocal.equals("RECARGAR_FK")) {//reporte.getsCodigo().equals("GENERAR_REPORTE_GROUP_GENERICO")) {								
				if(JOptionPane.showConfirmDialog(this, "ESTA SEGURO DE RECARGAR REFERENCIAS ?", "MANTENIMIENTO DE Rubro Emplea", JOptionPane.OK_CANCEL_OPTION) == 0) {
				
				//this.startProcessRubroEmplea();
				
					if(!esParaAccionDesdeFormulario || (esParaAccionDesdeFormulario && this.isEsNuevoRubroEmplea)) {
						this.esRecargarFks=true;
						this.cargarCombosForeignKeyRubroEmplea(false,false,false);
						this.esRecargarFks=false;
						
						JOptionPane.showMessageDialog(this,"PROCESO EJECUTADO CORRECTAMENTE","MANTENIMIENTO DE Rubro Emplea",JOptionPane.INFORMATION_MESSAGE);
					} else {
						JOptionPane.showMessageDialog(this,"ESTE PROCESO SOLO FUNCIONA AL INGRESAR UN NUEVO ELEMENTO","MANTENIMIENTO",JOptionPane.ERROR_MESSAGE);	
					}
					
					
				}
				
				if(!esParaAccionDesdeFormulario) {
					
					this.jComboBoxTiposAccionesRubroEmplea.setSelectedIndex(0);					
					
				} else {
					this.jInternalFrameDetalleFormRubroEmplea.jComboBoxTiposAccionesFormularioRubroEmplea.setSelectedIndex(0);					
				}	
			} 			
			else if(RubroEmpleaBeanSwingJInternalFrame.EsProcesoReporte(reporte.getsCodigo())){
				if(this.isPermisoReporteRubroEmplea) {				
					if(this.tieneElementosSeleccionados()) {
						this.quitarFilaTotales();
						
						conSplash=false;
						
						//this.startProcessRubroEmplea(conSplash);
					
						//this.actualizarParametrosGeneralRubroEmplea();
						
						this.generarReporteProcesoAccionRubroEmpleasSeleccionados(reporte.getsCodigo());
						
						if(!esParaAccionDesdeFormulario) {
							
							this.jComboBoxTiposAccionesRubroEmplea.setSelectedIndex(0);					
							
						} else {
							this.jInternalFrameDetalleFormRubroEmplea.jComboBoxTiposAccionesFormularioRubroEmplea.setSelectedIndex(0);					
						}
					} else {
						JOptionPane.showMessageDialog(this,"NO SE HA SELECCIONADO ALGUN ELEMENTO","SELECCIONAR",JOptionPane.ERROR_MESSAGE);
					}
				} else {
					JOptionPane.showMessageDialog(this,"NO TIENE PERMISO PARA GENERAR REPORTES","REPORTE",JOptionPane.ERROR_MESSAGE);					
				}
			} 
			else if(RubroEmpleaBeanSwingJInternalFrameAdditional.EsProcesoAccionNormal(reporte.getsCodigo())){
				if(this.tieneElementosSeleccionados()) {
					this.quitarFilaTotales();
					
					if(JOptionPane.showConfirmDialog(this, "ESTA SEGURO DE PROCESAR "+reporte.getsDescripcion()+" EN PROCESO Rubro EmpleaS SELECCIONADOS?", "MANTENIMIENTO DE Rubro Emplea", JOptionPane.OK_CANCEL_OPTION) == 0) {
						//this.startProcessRubroEmplea();
				
						this.actualizarParametrosGeneralRubroEmplea();
						
						//ARCHITECTURE
						if(Constantes.ISUSAEJBLOGICLAYER) {						
							this.rubroempleaReturnGeneral=rubroempleaLogic.procesarAccionRubroEmpleasWithConnection(this.parametroGeneralUsuario,this.moduloActual,this.opcionActual,this.usuarioActual,sTipoAccionLocal,this.rubroempleaLogic.getRubroEmpleas(),this.rubroempleaParameterGeneral);
						
						} else if(Constantes.ISUSAEJBREMOTE) {
						
						} else if(Constantes.ISUSAEJBHOME) {
						}
						//ARCHITECTURE
						
						this.procesarRubroEmpleaReturnGeneral();
					
					if(!esParaAccionDesdeFormulario) {
						
						this.jComboBoxTiposAccionesRubroEmplea.setSelectedIndex(0);					
						
					} else {
						this.jInternalFrameDetalleFormRubroEmplea.jComboBoxTiposAccionesFormularioRubroEmplea.setSelectedIndex(0);					
					}
					}
				} else {
					JOptionPane.showMessageDialog(this,"NO SE HA SELECCIONADO ALGUN ELEMENTO","SELECCIONAR",JOptionPane.ERROR_MESSAGE);
				}				
			} 
			else {
				if(this.tieneElementosSeleccionados()) {
					this.quitarFilaTotales();
					
					this.actualizarParametrosGeneralRubroEmplea();
					
					RubroEmpleaBeanSwingJInternalFrameAdditional.ProcesarAccion(reporte.getsCodigo(),reporte.getsDescripcion(),this);
					
					this.procesarRubroEmpleaReturnGeneral();
					
					if(!esParaAccionDesdeFormulario) {
						
						this.jComboBoxTiposAccionesRubroEmplea.setSelectedIndex(0);					
						
					} else {
						this.jInternalFrameDetalleFormRubroEmplea.jComboBoxTiposAccionesFormularioRubroEmplea.setSelectedIndex(0);					
					}
				} else {
					JOptionPane.showMessageDialog(this,"NO SE HA SELECCIONADO ALGUN ELEMENTO","SELECCIONAR",JOptionPane.ERROR_MESSAGE);
				}
			}
		} catch(Exception e) {
			this.esRecargarFks=false;
			
			FuncionesSwing.manageException(this, e,logger,RubroEmpleaConstantesFunciones.CLASSNAME);
		
		}  finally {
      		//this.finishProcessRubroEmplea(conSplash);
      	}
	}
	
	public void jComboBoxTiposRelacionesRubroEmpleaActionListener(ActionEvent evt) throws Exception {    				
		Boolean conSplash=true;
		
		try {			
			this.startProcessRubroEmplea();
			
			if(this.jInternalFrameDetalleFormRubroEmplea==null) { //if(!this.conCargarFormDetalle) {			
				this.inicializarFormDetalle();
			}
			
			ArrayList<RubroEmplea> rubroempleasSeleccionados=new ArrayList<RubroEmplea>();		
			RubroEmplea rubroemplea=new RubroEmplea();
			
			int rowIndex=-1;//CON ESTO SE DESHABILITA SELECCION POR INDICE
			
			this.inicializarActualizarBindingRubroEmplea(false,false);
			
			Reporte reporte=new Reporte();
			
			
			reporte=(Reporte)this.jComboBoxTiposRelacionesRubroEmplea.getSelectedItem();
			
			
			
			
			rubroempleasSeleccionados=this.getRubroEmpleasSeleccionados(true);
			//this.sTipoAccion;
			
			if(rubroempleasSeleccionados.size()==1) {
				for(RubroEmplea rubroempleaAux:rubroempleasSeleccionados) {
					rubroemplea=rubroempleaAux;
				}
				
				if(this.sTipoAccion.equals("NONE")) {
				
				}
				
				else if(this.sTipoRelacion.equals("Historial Pago Nomi")) {
					jButtonHistorialPagoNomiActionPerformed(null,rowIndex,true,false,rubroemplea);
				}
				else if(this.sTipoRelacion.equals("Rubro Estructura")) {
					jButtonRubroEstructuraActionPerformed(null,rowIndex,true,false,rubroemplea);
				}
				else if(this.sTipoRelacion.equals("Defi Provision Empleado")) {
					jButtonDefiProvisionEmpleadoActionPerformed(null,rowIndex,true,false,rubroemplea);
				}
				else if(this.sTipoRelacion.equals("Empleado Pago Rubro")) {
					jButtonEmpleadoPagoRubroActionPerformed(null,rowIndex,true,false,rubroemplea);
				}
				else if(this.sTipoRelacion.equals("Historial Pago Mes Nomi")) {
					jButtonHistorialPagoMesNomiActionPerformed(null,rowIndex,true,false,rubroemplea);
				}
				else if(this.sTipoRelacion.equals("Rubro Empleado")) {
					jButtonRubroEmpleadoActionPerformed(null,rowIndex,true,false,rubroemplea);
				}
				else if(this.sTipoRelacion.equals("Valor Rubro Variable")) {
					jButtonValorRubroVariableActionPerformed(null,rowIndex,true,false,rubroemplea);
				}
				else if(this.sTipoRelacion.equals("Tipo Prestamo")) {
					jButtonTipoPrestamoActionPerformed(null,rowIndex,true,false,rubroemplea);
				}
				else if(this.sTipoRelacion.equals("Rubro Emplea Cuenta Contable")) {
					jButtonRubroEmpleaCuentaContableActionPerformed(null,rowIndex,true,false,rubroemplea);
				}
			} else {
				JOptionPane.showMessageDialog(this,"SELECCIONE SOLO UN REGISTRO","RELACIONES",JOptionPane.ERROR_MESSAGE);
			}
			
		} catch(Exception e) {
			FuncionesSwing.manageException(this, e,logger,RubroEmpleaConstantesFunciones.CLASSNAME);
		
		}  finally {
			this.finishProcessRubroEmplea();
			
      		//this.finishProcessRubroEmplea(conSplash);
      	}
	}
			
	public static Boolean EsProcesoReporte(String sTipoProceso) throws Exception {
		Boolean esProcesoAccionRepoorte=false;

		if(sTipoProceso.contains("REPORTE_")) {
			 esProcesoAccionRepoorte=true;
		}

		return esProcesoAccionRepoorte;
	}
	
	public void procesarRubroEmpleaReturnGeneral() throws Exception {
		if(this.rubroempleaReturnGeneral.getConRetornoEstaProcesado()) {
			JOptionPane.showMessageDialog(this,this.rubroempleaReturnGeneral.getsMensajeProceso(),"PROCESO",JOptionPane.INFORMATION_MESSAGE);
		}
		
		if(this.rubroempleaReturnGeneral.getConMostrarMensaje()) {
			JOptionPane.showMessageDialog(this,this.rubroempleaReturnGeneral.getsMensajeProceso(),"PROCESO",FuncionesSwing.getColorSelectedBackground(this.rubroempleaReturnGeneral.getsTipoMensaje()));
		}
		
		if(this.rubroempleaReturnGeneral.getConRecargarInformacion()) {
			this.procesarBusqueda(this.sAccionBusqueda);
			
			this.inicializarActualizarBindingRubroEmplea(false);
		}
		
		if(this.rubroempleaReturnGeneral.getConRetornoLista() || this.rubroempleaReturnGeneral.getConRetornoObjeto()) {
			if(this.rubroempleaReturnGeneral.getConRetornoLista()) {
				//ARCHITECTURE
				if(Constantes.ISUSAEJBLOGICLAYER) {	
					this.rubroempleaLogic.setRubroEmpleas(this.rubroempleaReturnGeneral.getRubroEmpleas());
				} else if(Constantes.ISUSAEJBREMOTE) {
				} else if(Constantes.ISUSAEJBHOME) {
				}
				//ARCHITECTURE
			}
			
			if(this.rubroempleaReturnGeneral.getConRetornoObjeto()) {
				//ARCHITECTURE
				if(Constantes.ISUSAEJBLOGICLAYER) {	
					this.rubroempleaLogic.setRubroEmplea(this.rubroempleaReturnGeneral.getRubroEmplea());
				} else if(Constantes.ISUSAEJBREMOTE) {
				} else if(Constantes.ISUSAEJBHOME) {
				}
				//ARCHITECTURE
			}
			
			this.inicializarActualizarBindingRubroEmplea(false);
		}
	}
	
	public void actualizarParametrosGeneralRubroEmplea() throws Exception {
		
		
	}
	
	public ArrayList<RubroEmplea> getRubroEmpleasSeleccionados(Boolean conSeleccionarTodosAutomatico) throws Exception {
		ArrayList<RubroEmplea> rubroempleasSeleccionados=new ArrayList<RubroEmplea>();
		Boolean existe=false;
		
		if(!this.esParaAccionDesdeFormularioRubroEmplea) {
			if(Constantes.ISUSAEJBLOGICLAYER) {	
				
				for(RubroEmplea rubroempleaAux:rubroempleaLogic.getRubroEmpleas()) {
					if(rubroempleaAux.getIsSelected()) {
						rubroempleasSeleccionados.add(rubroempleaAux);				
					}
				}
				
			} else if(Constantes.ISUSAEJBREMOTE||Constantes.ISUSAEJBHOME) {
				for(RubroEmplea rubroempleaAux:this.rubroempleas) {
					if(rubroempleaAux.getIsSelected()) {
						rubroempleasSeleccionados.add(rubroempleaAux);				
					}
				}
			}
			
			if(rubroempleasSeleccionados.size()>0) {
				existe=true;
			}
			
			//SI NO ESTA NINGUNO SELECCIONADO SE SELECCIONA TODOS
			if(!existe) {
				if(conSeleccionarTodosAutomatico) {
					if(Constantes.ISUSAEJBLOGICLAYER) {				
						rubroempleasSeleccionados.addAll(this.rubroempleaLogic.getRubroEmpleas());
					} else if(Constantes.ISUSAEJBREMOTE||Constantes.ISUSAEJBHOME) {
						rubroempleasSeleccionados.addAll(this.rubroempleas);				
					}
				}
			}
		} else {
			rubroempleasSeleccionados.add(this.rubroemplea);
		}
		
		return rubroempleasSeleccionados;
	}
	
	public void actualizarVariablesTipoReporte(Boolean esReporteNormal,Boolean esReporteDinamico,Boolean esReporteAccionProceso,String sPath) {
		if(esReporteNormal) {
			this.sTipoReporteExtra="";
			this.esReporteDinamico=false;
			this.sPathReporteDinamico="";
			this.esReporteAccionProceso=false;
			
		} else if(esReporteAccionProceso) {
			this.sTipoReporteExtra="";
			this.esReporteDinamico=false;
			this.sPathReporteDinamico="";
			this.esReporteAccionProceso=true;
			
		} else if(esReporteDinamico) {
			this.sTipoReporteExtra="";
			this.esReporteDinamico=true;
			this.esReporteAccionProceso=false;
			this.sPathReporteDinamico=sPath.replace(".jrxml",".jasper");			
		}
	}
	
	public void generarReporteRubroEmpleasSeleccionados() throws Exception {
		Boolean existe=false;
		
		if(this.sTipoReporte.equals("NORMAL") || this.sTipoReporte.equals("FORMULARIO")) {
			existe=true;								
			this.generarReporteNormalRubroEmpleasSeleccionados();
			
		} else if(this.sTipoReporte.equals("DINAMICO")) {
			existe=true;
			this.mostrarReporteDinamicoRubroEmpleasSeleccionados();
			
		} else if(this.sTipoReporte.equals("GRUPO_GENERICO")) {
			existe=true;
			this.generarReporteGroupGenericoRubroEmpleasSeleccionados(false);
			
		} else if(this.sTipoReporte.equals("TOTALES_GRUPO_GENERICO")) {
			existe=true;
			this.generarReporteGroupGenericoRubroEmpleasSeleccionados(true);
		}
		else if(this.sTipoReporte.equals("RELACIONES")) {
			//SI SE GENERA REPORTE RELACIONES
			existe=true;
			this.generarReporteRelacionesRubroEmpleasSeleccionados();
		}					
		
		if(!existe) {
			JOptionPane.showMessageDialog(this,"SELECCIONE UN TIPO DE REPORTE VALIDO","REPORTE DE Rubro Emplea",JOptionPane.ERROR_MESSAGE);
		}
	}
	
	public void generarReporteRelacionesRubroEmpleasSeleccionados() throws Exception {
		ArrayList<RubroEmplea> rubroempleasSeleccionados=new ArrayList<RubroEmplea>();		
		
		rubroempleasSeleccionados=this.getRubroEmpleasSeleccionados(true);
		
		this.actualizarVariablesTipoReporte(true,false,false,"");
					
		//this.sTipoReporteExtra="MasterRelaciones";
		
		/*
		this.sTipoReporteExtra="";
		this.esReporteDinamico=false;
		this.sPathReporteDinamico="";
		*/
		
		
		this.generarReporteRubroEmpleas("Todos",rubroempleasSeleccionados);
		
	}	
	
	public void generarReporteNormalRubroEmpleasSeleccionados() throws Exception {
		ArrayList<RubroEmplea> rubroempleasSeleccionados=new ArrayList<RubroEmplea>();		
		
		rubroempleasSeleccionados=this.getRubroEmpleasSeleccionados(true);
		
		this.actualizarVariablesTipoReporte(true,false,false,"");
								
		if(this.sTipoReporte.equals("FORMULARIO")) {
			this.sTipoReporteExtra="Vertical";					
		}
		
		/*
		this.sTipoReporteExtra="";
		this.esReporteDinamico=false;
		this.sPathReporteDinamico="";
		*/
		
		this.generarReporteRubroEmpleas("Todos",rubroempleasSeleccionados);
	}		
	
	public void generarReporteProcesoAccionRubroEmpleasSeleccionados(String sProcesoReporte) throws Exception {
		ArrayList<RubroEmplea> rubroempleasSeleccionados=new ArrayList<RubroEmplea>();
		
		rubroempleasSeleccionados=this.getRubroEmpleasSeleccionados(true);
		
		this.actualizarVariablesTipoReporte(false,false,true,"");
		
		/*
		this.esReporteDinamico=false;
		this.sPathReporteDinamico="";
		*/
		
		this.sTipoReporteExtra=sProcesoReporte.toLowerCase();
		
		this.esReporteAccionProceso=true;
		this.generarReporteRubroEmpleas("Todos",rubroempleasSeleccionados);
		this.esReporteAccionProceso=false;
	}
	
	
	public void mostrarReporteDinamicoRubroEmpleasSeleccionados() throws Exception {
		ArrayList<RubroEmplea> rubroempleasSeleccionados=new ArrayList<RubroEmplea>();		
		
		
		this.abrirInicializarFrameReporteDinamicoRubroEmplea();
		
		
		rubroempleasSeleccionados=this.getRubroEmpleasSeleccionados(true);
		
		this.sTipoReporteExtra="";
		//this.actualizarVariablesTipoReporte(true,false,false,"");
		
		
		this.abrirFrameReporteDinamicoRubroEmplea();
		
		
		//this.generarReporteRubroEmpleas("Todos",rubroempleasSeleccionados ,rubroempleaImplementable,rubroempleaImplementableHome);
	}
	
	public void mostrarImportacionRubroEmpleas() throws Exception {
		//this.sTipoReporteExtra="";
		//this.actualizarVariablesTipoReporte(true,false,false,"");
		
		
		this.abrirInicializarFrameImportacionRubroEmplea();
		
		this.abrirFrameImportacionRubroEmplea();		
		
			
		//this.generarReporteRubroEmpleas("Todos",rubroempleasSeleccionados ,rubroempleaImplementable,rubroempleaImplementableHome);
	}
	
	public void importarRubroEmpleas() throws Exception {		
	
	}
	
	public void exportarRubroEmpleasSeleccionados() throws Exception {
		Boolean existe=false;
		
		if(this.sTipoArchivoReporte.equals("EXCEL")) {
			existe=true;
			this.exportarExcelRubroEmpleasSeleccionados();
			
		} else if(this.sTipoArchivoReporte.equals("TEXTO")) {
			existe=true;
			this.exportarTextoRubroEmpleasSeleccionados();
		
		} else if(this.sTipoArchivoReporte.equals("XML")) {
			existe=true;
			this.exportarXmlRubroEmpleasSeleccionados();
		} 
		
		if(!existe) {
			JOptionPane.showMessageDialog(this,"SELECCIONE UN TIPO DE ARCHIVO VALIDO","EXPORTACION DE Rubro Emplea",JOptionPane.ERROR_MESSAGE);
		}
	}
	
	public void exportarTextoRubroEmpleasSeleccionados() throws Exception {
		ArrayList<RubroEmplea> rubroempleasSeleccionados=new ArrayList<RubroEmplea>();		
		
		rubroempleasSeleccionados=this.getRubroEmpleasSeleccionados(true);
		
		String sTipo=Funciones2.getTipoExportar(this.parametroGeneralUsuario);
		Boolean conCabecera=this.parametroGeneralUsuario.getcon_exportar_cabecera();
		String sDelimiter=Funciones2.getTipoDelimiter(this.parametroGeneralUsuario);
		String sPath=this.parametroGeneralUsuario.getpath_exportar()+"rubroemplea."+"txt";//Funciones2.getTipoExtensionArchivoExportar(this.parametroGeneralUsuario);
		
		String sFilaCabecera="";
		String sFilaDatos="";
		
		BufferedWriter bufferedWriter = null;
		FileWriter fileWriter=null;
		
		fileWriter=new FileWriter(sPath);
		
		bufferedWriter = new BufferedWriter(fileWriter);
		
		try {
			if(conCabecera) {
				sFilaCabecera=this.getFilaCabeceraExportarRubroEmplea(sDelimiter);
				
				bufferedWriter.write(sFilaCabecera);
			}				
			
			for(RubroEmplea rubroempleaAux:rubroempleasSeleccionados) {
				sFilaDatos=this.getFilaDatosExportarRubroEmplea(rubroempleaAux,sDelimiter);
				
				bufferedWriter.write(sFilaDatos);
				
				//rubroempleaAux.setsDetalleGeneralEntityReporte(rubroempleaAux.toString());			
			}
			
			bufferedWriter.close();
			
			Constantes2.S_PATH_ULTIMO_ARCHIVO=sPath;
			
			if(this.parametroGeneralUsuario.getcon_mensaje_confirmacion() && !this.rubroempleaSessionBean.getEsGuardarRelacionado()) {//Constantes.ISMOSTRARMENSAJESMANTENIMIENTO && 
				JOptionPane.showMessageDialog(this,"EXPORTADO CORRECTAMENTE:"+sPath,"MANTENIMIENTO DE Rubro Emplea",JOptionPane.INFORMATION_MESSAGE);
			}
		} catch (Exception e) {
			throw e;
			
		} finally {
       		if (bufferedWriter != null) {
				bufferedWriter.close();
			}
		}
	}
	
	public String getFilaCabeceraExportarRubroEmplea(String sDelimiter) {
		String sFilaCabecera="";
		
		
		sFilaCabecera+=RubroEmpleaConstantesFunciones.LABEL_ID;

		if(parametroGeneralUsuario.getcon_exportar_campo_version()){
			sFilaCabecera+=sDelimiter;
		sFilaCabecera+=RubroEmpleaConstantesFunciones.LABEL_VERSIONROW;
		}

		sFilaCabecera+=sDelimiter;
		sFilaCabecera+=RubroEmpleaConstantesFunciones.LABEL_IDEMPRESA;
		sFilaCabecera+=sDelimiter;
		sFilaCabecera+=RubroEmpleaConstantesFunciones.LABEL_IDTIPOCALCULO;
		sFilaCabecera+=sDelimiter;
		sFilaCabecera+=RubroEmpleaConstantesFunciones.LABEL_IDTIPORUBROEMPLEA;
		sFilaCabecera+=sDelimiter;
		sFilaCabecera+=RubroEmpleaConstantesFunciones.LABEL_IDTIPOGRUPORUBROEMPLEA;
		sFilaCabecera+=sDelimiter;
		sFilaCabecera+=RubroEmpleaConstantesFunciones.LABEL_CODIGO;
		sFilaCabecera+=sDelimiter;
		sFilaCabecera+=RubroEmpleaConstantesFunciones.LABEL_NOMBRE;
		sFilaCabecera+=sDelimiter;
		sFilaCabecera+=RubroEmpleaConstantesFunciones.LABEL_FORMULA;
		sFilaCabecera+=sDelimiter;
		sFilaCabecera+=RubroEmpleaConstantesFunciones.LABEL_ALIAS;
		sFilaCabecera+=sDelimiter;
		sFilaCabecera+=RubroEmpleaConstantesFunciones.LABEL_SECUENCIAL;
		sFilaCabecera+=sDelimiter;
		sFilaCabecera+=RubroEmpleaConstantesFunciones.LABEL_PARAROLPAGOS;
		sFilaCabecera+=sDelimiter;
		sFilaCabecera+=RubroEmpleaConstantesFunciones.LABEL_PARASUELDO;
		sFilaCabecera+=sDelimiter;
		sFilaCabecera+=RubroEmpleaConstantesFunciones.LABEL_PARAVACACIONES;
		sFilaCabecera+=sDelimiter;
		sFilaCabecera+=RubroEmpleaConstantesFunciones.LABEL_PARAIMPUESTORENTA;
		sFilaCabecera+=sDelimiter;
		sFilaCabecera+=RubroEmpleaConstantesFunciones.LABEL_PARASEGUROSOCIAL;
		sFilaCabecera+=sDelimiter;
		sFilaCabecera+=RubroEmpleaConstantesFunciones.LABEL_PARAPROVISIONES;
		sFilaCabecera+=sDelimiter;
		sFilaCabecera+=RubroEmpleaConstantesFunciones.LABEL_PARAUTILIDADES;
		sFilaCabecera+=sDelimiter;
		sFilaCabecera+=RubroEmpleaConstantesFunciones.LABEL_PARARUBROIESS;
		sFilaCabecera+=sDelimiter;
		sFilaCabecera+=RubroEmpleaConstantesFunciones.LABEL_ESFONDORESERVA;
		sFilaCabecera+=sDelimiter;
		sFilaCabecera+=RubroEmpleaConstantesFunciones.LABEL_ESDECIMOTERCERO;
		sFilaCabecera+=sDelimiter;
		sFilaCabecera+=RubroEmpleaConstantesFunciones.LABEL_ESDECIMOCUARTO;
		
		return sFilaCabecera;
	}
	
	public String getFilaDatosExportarRubroEmplea(RubroEmplea rubroemplea,String sDelimiter) {
		String sFilaDatos="";
		
		sFilaDatos+="\r\n";
		
		
		sFilaDatos+=rubroemplea.getId().toString();

		if(parametroGeneralUsuario.getcon_exportar_campo_version()){
			sFilaDatos+=sDelimiter;
		sFilaDatos+=rubroemplea.getVersionRow().toString();
		}

		sFilaDatos+=sDelimiter;
		sFilaDatos+=rubroemplea.getempresa_descripcion();
		sFilaDatos+=sDelimiter;
		sFilaDatos+=rubroemplea.gettipocalculo_descripcion();
		sFilaDatos+=sDelimiter;
		sFilaDatos+=rubroemplea.gettiporubroemplea_descripcion();
		sFilaDatos+=sDelimiter;
		sFilaDatos+=rubroemplea.gettipogruporubroemplea_descripcion();
		sFilaDatos+=sDelimiter;
		sFilaDatos+=rubroemplea.getcodigo();
		sFilaDatos+=sDelimiter;
		sFilaDatos+=rubroemplea.getnombre();
		sFilaDatos+=sDelimiter;
		sFilaDatos+=rubroemplea.getformula();
		sFilaDatos+=sDelimiter;
		sFilaDatos+=rubroemplea.getalias();
		sFilaDatos+=sDelimiter;
		sFilaDatos+=rubroemplea.getsecuencial().toString();
		sFilaDatos+=sDelimiter;
		sFilaDatos+=rubroemplea.getpara_rol_pagos().toString();
		sFilaDatos+=sDelimiter;
		sFilaDatos+=rubroemplea.getpara_sueldo().toString();
		sFilaDatos+=sDelimiter;
		sFilaDatos+=rubroemplea.getpara_vacaciones().toString();
		sFilaDatos+=sDelimiter;
		sFilaDatos+=rubroemplea.getpara_impuesto_renta().toString();
		sFilaDatos+=sDelimiter;
		sFilaDatos+=rubroemplea.getpara_seguro_social().toString();
		sFilaDatos+=sDelimiter;
		sFilaDatos+=rubroemplea.getpara_provisiones().toString();
		sFilaDatos+=sDelimiter;
		sFilaDatos+=rubroemplea.getpara_utilidades().toString();
		sFilaDatos+=sDelimiter;
		sFilaDatos+=rubroemplea.getpara_rubro_iess().toString();
		sFilaDatos+=sDelimiter;
		sFilaDatos+=rubroemplea.getes_fondo_reserva().toString();
		sFilaDatos+=sDelimiter;
		sFilaDatos+=rubroemplea.getes_decimo_tercero().toString();
		sFilaDatos+=sDelimiter;
		sFilaDatos+=rubroemplea.getes_decimo_cuarto().toString();
		
		return sFilaDatos;
	}
	
	//@SuppressWarnings("deprecation")
	public void exportarExcelRubroEmpleasSeleccionados() throws Exception {
		ArrayList<RubroEmplea> rubroempleasSeleccionados=new ArrayList<RubroEmplea>();		
		
		rubroempleasSeleccionados=this.getRubroEmpleasSeleccionados(true);
		
		String sTipo=Funciones2.getTipoExportar(this.parametroGeneralUsuario);
		Boolean conCabecera=this.parametroGeneralUsuario.getcon_exportar_cabecera();
		String sDelimiter=Funciones2.getTipoDelimiter(this.parametroGeneralUsuario);
		String sPath=this.parametroGeneralUsuario.getpath_exportar()+"rubroemplea.xls";
		
		String sFilaCabecera="";
		String sFilaDatos="";
		
		FileOutputStream fileOutputStream=null;
		
		try {
			HSSFWorkbook workbook = new HSSFWorkbook();
			HSSFSheet sheet = workbook.createSheet("RubroEmpleas");
						
		    			
			Integer iRow=0;
			Integer iCell=0;
			
			HSSFRow row = sheet.createRow(iRow);
			HSSFCell cell = row.createCell(iCell);
			//cell.setCellValue("Blahblah");

			if(conCabecera) {
				this.getFilaCabeceraExportarExcelRubroEmplea(row);				
				iRow++;
			}				
			
			for(RubroEmplea rubroempleaAux:rubroempleasSeleccionados) {
				row = sheet.createRow(iRow);
				
				this.getFilaDatosExportarExcelRubroEmplea(rubroempleaAux,row);
				
				iRow++;
			}
			
			
			fileOutputStream = new FileOutputStream(new File(sPath));
		    
			workbook.write(fileOutputStream);
			
			//fileOutputStream.close();
			
			Constantes2.S_PATH_ULTIMO_ARCHIVO=sPath;
			
			if(this.parametroGeneralUsuario.getcon_mensaje_confirmacion() && !this.rubroempleaSessionBean.getEsGuardarRelacionado()) {//Constantes.ISMOSTRARMENSAJESMANTENIMIENTO && 
				JOptionPane.showMessageDialog(this,"EXPORTADO CORRECTAMENTE:"+sPath,"MANTENIMIENTO DE Rubro Emplea",JOptionPane.INFORMATION_MESSAGE);
			}
		} catch (Exception e) {
			throw e;
			
		} finally {			
       		if (fileOutputStream != null) {
				fileOutputStream.close();
			}			
		}
	}		
	
	public void exportarXmlRubroEmpleasSeleccionados() throws Exception {
		ArrayList<RubroEmplea> rubroempleasSeleccionados=new ArrayList<RubroEmplea>();		
		
		rubroempleasSeleccionados=this.getRubroEmpleasSeleccionados(true);
		
		//String sTipo=Funciones2.getTipoExportar(this.parametroGeneralUsuario);
		//Boolean conCabecera=this.parametroGeneralUsuario.getcon_exportar_cabecera();
		//String sDelimiter=Funciones2.getTipoDelimiter(this.parametroGeneralUsuario);
		String sPath=this.parametroGeneralUsuario.getpath_exportar()+"rubroemplea.xml";
		
		String sFilaCabecera="";
		String sFilaDatos="";
		
		DocumentBuilderFactory documentBuilderFactory=null;
		DocumentBuilder documentBuilder =null;
		
		try {
			documentBuilderFactory = DocumentBuilderFactory.newInstance();
			documentBuilder = documentBuilderFactory.newDocumentBuilder();
	
			Document document = documentBuilder.newDocument();
			Element elementRoot = document.createElement("rubroempleas");
			
			document.appendChild(elementRoot);
		    			
												
			Element element = null;//document.createElement("rubroemplea");
			//elementRoot.appendChild(element);
		
			for(RubroEmplea rubroempleaAux:rubroempleasSeleccionados) {
				element = document.createElement("rubroemplea");
				elementRoot.appendChild(element);
			
				this.setFilaDatosExportarXmlRubroEmplea(rubroempleaAux,document,element);
			}
			
			TransformerFactory transformerFactory = TransformerFactory.newInstance();
			Transformer transformer = transformerFactory.newTransformer();
			DOMSource domSource = new DOMSource(document);
			
			StreamResult streamResult = new StreamResult(new File(sPath));
	
			transformer.transform(domSource, streamResult);
						
			Constantes2.S_PATH_ULTIMO_ARCHIVO=sPath;
			
			if(this.parametroGeneralUsuario.getcon_mensaje_confirmacion() && !this.rubroempleaSessionBean.getEsGuardarRelacionado()) {//Constantes.ISMOSTRARMENSAJESMANTENIMIENTO && 
				JOptionPane.showMessageDialog(this,"EXPORTADO CORRECTAMENTE:"+sPath,"MANTENIMIENTO DE Rubro Emplea",JOptionPane.INFORMATION_MESSAGE);
			}
		} catch (Exception e) {
			throw e;
			
		} finally {			       				
		}
	}	
	
	//@SuppressWarnings("deprecation")
	public void getFilaCabeceraExportarExcelRubroEmplea(HSSFRow row) {
		Integer iColumn=0;
		
		
		HSSFCell cell =null;
		cell = row.createCell(iColumn++);cell.setCellValue(RubroEmpleaConstantesFunciones.LABEL_ID);

		if(parametroGeneralUsuario.getcon_exportar_campo_version()){
		cell = row.createCell(iColumn++);cell.setCellValue(RubroEmpleaConstantesFunciones.LABEL_VERSIONROW);
		}

		cell = row.createCell(iColumn++);cell.setCellValue(RubroEmpleaConstantesFunciones.LABEL_IDEMPRESA);
		cell = row.createCell(iColumn++);cell.setCellValue(RubroEmpleaConstantesFunciones.LABEL_IDTIPOCALCULO);
		cell = row.createCell(iColumn++);cell.setCellValue(RubroEmpleaConstantesFunciones.LABEL_IDTIPORUBROEMPLEA);
		cell = row.createCell(iColumn++);cell.setCellValue(RubroEmpleaConstantesFunciones.LABEL_IDTIPOGRUPORUBROEMPLEA);
		cell = row.createCell(iColumn++);cell.setCellValue(RubroEmpleaConstantesFunciones.LABEL_CODIGO);
		cell = row.createCell(iColumn++);cell.setCellValue(RubroEmpleaConstantesFunciones.LABEL_NOMBRE);
		cell = row.createCell(iColumn++);cell.setCellValue(RubroEmpleaConstantesFunciones.LABEL_FORMULA);
		cell = row.createCell(iColumn++);cell.setCellValue(RubroEmpleaConstantesFunciones.LABEL_ALIAS);
		cell = row.createCell(iColumn++);cell.setCellValue(RubroEmpleaConstantesFunciones.LABEL_SECUENCIAL);
		cell = row.createCell(iColumn++);cell.setCellValue(RubroEmpleaConstantesFunciones.LABEL_PARAROLPAGOS);
		cell = row.createCell(iColumn++);cell.setCellValue(RubroEmpleaConstantesFunciones.LABEL_PARASUELDO);
		cell = row.createCell(iColumn++);cell.setCellValue(RubroEmpleaConstantesFunciones.LABEL_PARAVACACIONES);
		cell = row.createCell(iColumn++);cell.setCellValue(RubroEmpleaConstantesFunciones.LABEL_PARAIMPUESTORENTA);
		cell = row.createCell(iColumn++);cell.setCellValue(RubroEmpleaConstantesFunciones.LABEL_PARASEGUROSOCIAL);
		cell = row.createCell(iColumn++);cell.setCellValue(RubroEmpleaConstantesFunciones.LABEL_PARAPROVISIONES);
		cell = row.createCell(iColumn++);cell.setCellValue(RubroEmpleaConstantesFunciones.LABEL_PARAUTILIDADES);
		cell = row.createCell(iColumn++);cell.setCellValue(RubroEmpleaConstantesFunciones.LABEL_PARARUBROIESS);
		cell = row.createCell(iColumn++);cell.setCellValue(RubroEmpleaConstantesFunciones.LABEL_ESFONDORESERVA);
		cell = row.createCell(iColumn++);cell.setCellValue(RubroEmpleaConstantesFunciones.LABEL_ESDECIMOTERCERO);
		cell = row.createCell(iColumn++);cell.setCellValue(RubroEmpleaConstantesFunciones.LABEL_ESDECIMOCUARTO);
	}
	
	//@SuppressWarnings("deprecation")
	public void getFilaDatosExportarExcelRubroEmplea(RubroEmplea rubroemplea,HSSFRow row) {
		Integer iColumn=0;
		
		
		HSSFCell cell =null;
		cell = row.createCell(iColumn++);cell.setCellValue(rubroemplea.getId());
		cell = row.createCell(iColumn++);cell.setCellValue(rubroemplea.getempresa_descripcion());
		cell = row.createCell(iColumn++);cell.setCellValue(rubroemplea.gettipocalculo_descripcion());
		cell = row.createCell(iColumn++);cell.setCellValue(rubroemplea.gettiporubroemplea_descripcion());
		cell = row.createCell(iColumn++);cell.setCellValue(rubroemplea.gettipogruporubroemplea_descripcion());
		cell = row.createCell(iColumn++);cell.setCellValue(rubroemplea.getcodigo());
		cell = row.createCell(iColumn++);cell.setCellValue(rubroemplea.getnombre());
		cell = row.createCell(iColumn++);cell.setCellValue(rubroemplea.getformula());
		cell = row.createCell(iColumn++);cell.setCellValue(rubroemplea.getalias());
		cell = row.createCell(iColumn++);cell.setCellValue(rubroemplea.getsecuencial());
		cell = row.createCell(iColumn++);cell.setCellValue(rubroemplea.getpara_rol_pagos());
		cell = row.createCell(iColumn++);cell.setCellValue(rubroemplea.getpara_sueldo());
		cell = row.createCell(iColumn++);cell.setCellValue(rubroemplea.getpara_vacaciones());
		cell = row.createCell(iColumn++);cell.setCellValue(rubroemplea.getpara_impuesto_renta());
		cell = row.createCell(iColumn++);cell.setCellValue(rubroemplea.getpara_seguro_social());
		cell = row.createCell(iColumn++);cell.setCellValue(rubroemplea.getpara_provisiones());
		cell = row.createCell(iColumn++);cell.setCellValue(rubroemplea.getpara_utilidades());
		cell = row.createCell(iColumn++);cell.setCellValue(rubroemplea.getpara_rubro_iess());
		cell = row.createCell(iColumn++);cell.setCellValue(rubroemplea.getes_fondo_reserva());
		cell = row.createCell(iColumn++);cell.setCellValue(rubroemplea.getes_decimo_tercero());
		cell = row.createCell(iColumn++);cell.setCellValue(rubroemplea.getes_decimo_cuarto());				
	}
	
	public void setFilaDatosExportarXmlRubroEmplea(RubroEmplea rubroemplea,Document document,Element element) {
		/*
		Element lastname = document.createElement("lastname");
		lastname.appendChild(document.createTextNode("mook kim"));
		element.appendChild(lastname);
		*/
		

		Element elementId = document.createElement(RubroEmpleaConstantesFunciones.ID);
		elementId.appendChild(document.createTextNode(rubroemplea.getId().toString().trim()));
		element.appendChild(elementId);

		if(parametroGeneralUsuario.getcon_exportar_campo_version()){

		Element elementVersionRow = document.createElement(RubroEmpleaConstantesFunciones.VERSIONROW);
		elementVersionRow.appendChild(document.createTextNode(rubroemplea.getVersionRow().toString().trim()));
		element.appendChild(elementVersionRow);
		}


		Element elementempresa_descripcion = document.createElement(RubroEmpleaConstantesFunciones.IDEMPRESA);
		elementempresa_descripcion.appendChild(document.createTextNode(rubroemplea.getempresa_descripcion()));
		element.appendChild(elementempresa_descripcion);

		Element elementtipocalculo_descripcion = document.createElement(RubroEmpleaConstantesFunciones.IDTIPOCALCULO);
		elementtipocalculo_descripcion.appendChild(document.createTextNode(rubroemplea.gettipocalculo_descripcion()));
		element.appendChild(elementtipocalculo_descripcion);

		Element elementtiporubroemplea_descripcion = document.createElement(RubroEmpleaConstantesFunciones.IDTIPORUBROEMPLEA);
		elementtiporubroemplea_descripcion.appendChild(document.createTextNode(rubroemplea.gettiporubroemplea_descripcion()));
		element.appendChild(elementtiporubroemplea_descripcion);

		Element elementtipogruporubroemplea_descripcion = document.createElement(RubroEmpleaConstantesFunciones.IDTIPOGRUPORUBROEMPLEA);
		elementtipogruporubroemplea_descripcion.appendChild(document.createTextNode(rubroemplea.gettipogruporubroemplea_descripcion()));
		element.appendChild(elementtipogruporubroemplea_descripcion);

		Element elementcodigo = document.createElement(RubroEmpleaConstantesFunciones.CODIGO);
		elementcodigo.appendChild(document.createTextNode(rubroemplea.getcodigo().trim()));
		element.appendChild(elementcodigo);

		Element elementnombre = document.createElement(RubroEmpleaConstantesFunciones.NOMBRE);
		elementnombre.appendChild(document.createTextNode(rubroemplea.getnombre().trim()));
		element.appendChild(elementnombre);

		Element elementformula = document.createElement(RubroEmpleaConstantesFunciones.FORMULA);
		elementformula.appendChild(document.createTextNode(rubroemplea.getformula().trim()));
		element.appendChild(elementformula);

		Element elementalias = document.createElement(RubroEmpleaConstantesFunciones.ALIAS);
		elementalias.appendChild(document.createTextNode(rubroemplea.getalias().trim()));
		element.appendChild(elementalias);

		Element elementsecuencial = document.createElement(RubroEmpleaConstantesFunciones.SECUENCIAL);
		elementsecuencial.appendChild(document.createTextNode(rubroemplea.getsecuencial().toString().trim()));
		element.appendChild(elementsecuencial);

		Element elementpara_rol_pagos = document.createElement(RubroEmpleaConstantesFunciones.PARAROLPAGOS);
		elementpara_rol_pagos.appendChild(document.createTextNode(rubroemplea.getpara_rol_pagos().toString().trim()));
		element.appendChild(elementpara_rol_pagos);

		Element elementpara_sueldo = document.createElement(RubroEmpleaConstantesFunciones.PARASUELDO);
		elementpara_sueldo.appendChild(document.createTextNode(rubroemplea.getpara_sueldo().toString().trim()));
		element.appendChild(elementpara_sueldo);

		Element elementpara_vacaciones = document.createElement(RubroEmpleaConstantesFunciones.PARAVACACIONES);
		elementpara_vacaciones.appendChild(document.createTextNode(rubroemplea.getpara_vacaciones().toString().trim()));
		element.appendChild(elementpara_vacaciones);

		Element elementpara_impuesto_renta = document.createElement(RubroEmpleaConstantesFunciones.PARAIMPUESTORENTA);
		elementpara_impuesto_renta.appendChild(document.createTextNode(rubroemplea.getpara_impuesto_renta().toString().trim()));
		element.appendChild(elementpara_impuesto_renta);

		Element elementpara_seguro_social = document.createElement(RubroEmpleaConstantesFunciones.PARASEGUROSOCIAL);
		elementpara_seguro_social.appendChild(document.createTextNode(rubroemplea.getpara_seguro_social().toString().trim()));
		element.appendChild(elementpara_seguro_social);

		Element elementpara_provisiones = document.createElement(RubroEmpleaConstantesFunciones.PARAPROVISIONES);
		elementpara_provisiones.appendChild(document.createTextNode(rubroemplea.getpara_provisiones().toString().trim()));
		element.appendChild(elementpara_provisiones);

		Element elementpara_utilidades = document.createElement(RubroEmpleaConstantesFunciones.PARAUTILIDADES);
		elementpara_utilidades.appendChild(document.createTextNode(rubroemplea.getpara_utilidades().toString().trim()));
		element.appendChild(elementpara_utilidades);

		Element elementpara_rubro_iess = document.createElement(RubroEmpleaConstantesFunciones.PARARUBROIESS);
		elementpara_rubro_iess.appendChild(document.createTextNode(rubroemplea.getpara_rubro_iess().toString().trim()));
		element.appendChild(elementpara_rubro_iess);

		Element elementes_fondo_reserva = document.createElement(RubroEmpleaConstantesFunciones.ESFONDORESERVA);
		elementes_fondo_reserva.appendChild(document.createTextNode(rubroemplea.getes_fondo_reserva().toString().trim()));
		element.appendChild(elementes_fondo_reserva);

		Element elementes_decimo_tercero = document.createElement(RubroEmpleaConstantesFunciones.ESDECIMOTERCERO);
		elementes_decimo_tercero.appendChild(document.createTextNode(rubroemplea.getes_decimo_tercero().toString().trim()));
		element.appendChild(elementes_decimo_tercero);

		Element elementes_decimo_cuarto = document.createElement(RubroEmpleaConstantesFunciones.ESDECIMOCUARTO);
		elementes_decimo_cuarto.appendChild(document.createTextNode(rubroemplea.getes_decimo_cuarto().toString().trim()));
		element.appendChild(elementes_decimo_cuarto);
	}
	
	public void generarReporteGroupGenericoRubroEmpleasSeleccionados(Boolean soloTotales) throws Exception {
		ArrayList<RubroEmplea> rubroempleasSeleccionados=new ArrayList<RubroEmplea>();
		
		rubroempleasSeleccionados=this.getRubroEmpleasSeleccionados(true);
		
		this.actualizarVariablesTipoReporte(true,false,false,"");
		
		/*
		this.esReporteDinamico=false;
		this.sPathReporteDinamico="";
		*/
		
		if(!soloTotales) {
			this.sTipoReporteExtra=Constantes2.S_REPORTE_EXTRA_GROUP_GENERICO;
		} else {
			this.sTipoReporteExtra=Constantes2.S_REPORTE_EXTRA_GROUP_TOTALES_GENERICO;
		}
		
		this.setColumnaDescripcionReporteGroupGenericoRubroEmplea(rubroempleasSeleccionados);
		
		this.generarReporteRubroEmpleas("Todos",rubroempleasSeleccionados);
	}
	
	public void setColumnaDescripcionReporteGroupGenericoRubroEmplea(ArrayList<RubroEmplea> rubroempleasSeleccionados) throws Exception {    		
		try {
			//FUNCIONA CON MODEL PERO SE DANA MANTENIMIENTO
			
			Boolean existe=false;
			
			for(RubroEmplea rubroempleaAux:rubroempleasSeleccionados) {
				rubroempleaAux.setsDetalleGeneralEntityReporte(rubroempleaAux.toString());
			
				if(sTipoSeleccionar.equals(RubroEmpleaConstantesFunciones.LABEL_IDEMPRESA)) {
					existe=true;
					rubroempleaAux.setsDescripcionGeneralEntityReporte1(rubroempleaAux.getempresa_descripcion());
				}
				 else if(sTipoSeleccionar.equals(RubroEmpleaConstantesFunciones.LABEL_IDTIPOCALCULO)) {
					existe=true;
					rubroempleaAux.setsDescripcionGeneralEntityReporte1(rubroempleaAux.gettipocalculo_descripcion());
				}
				 else if(sTipoSeleccionar.equals(RubroEmpleaConstantesFunciones.LABEL_IDTIPORUBROEMPLEA)) {
					existe=true;
					rubroempleaAux.setsDescripcionGeneralEntityReporte1(rubroempleaAux.gettiporubroemplea_descripcion());
				}
				 else if(sTipoSeleccionar.equals(RubroEmpleaConstantesFunciones.LABEL_IDTIPOGRUPORUBROEMPLEA)) {
					existe=true;
					rubroempleaAux.setsDescripcionGeneralEntityReporte1(rubroempleaAux.gettipogruporubroemplea_descripcion());
				}
				 else if(sTipoSeleccionar.equals(RubroEmpleaConstantesFunciones.LABEL_CODIGO)) {
					existe=true;
					rubroempleaAux.setsDescripcionGeneralEntityReporte1(rubroempleaAux.getcodigo());
				}
				 else if(sTipoSeleccionar.equals(RubroEmpleaConstantesFunciones.LABEL_NOMBRE)) {
					existe=true;
					rubroempleaAux.setsDescripcionGeneralEntityReporte1(rubroempleaAux.getnombre());
				}
				 else if(sTipoSeleccionar.equals(RubroEmpleaConstantesFunciones.LABEL_FORMULA)) {
					existe=true;
					rubroempleaAux.setsDescripcionGeneralEntityReporte1(rubroempleaAux.getformula());
				}
				 else if(sTipoSeleccionar.equals(RubroEmpleaConstantesFunciones.LABEL_ALIAS)) {
					existe=true;
					rubroempleaAux.setsDescripcionGeneralEntityReporte1(rubroempleaAux.getalias());
				}
				 else if(sTipoSeleccionar.equals(RubroEmpleaConstantesFunciones.LABEL_SECUENCIAL)) {
					existe=true;
					rubroempleaAux.setsDescripcionGeneralEntityReporte1(rubroempleaAux.getsecuencial().toString());
				}
				 else if(sTipoSeleccionar.equals(RubroEmpleaConstantesFunciones.LABEL_PARAROLPAGOS)) {
					existe=true;
					rubroempleaAux.setsDescripcionGeneralEntityReporte1(Funciones2.getDescripcionBoolean(rubroempleaAux.getpara_rol_pagos()));
				}
				 else if(sTipoSeleccionar.equals(RubroEmpleaConstantesFunciones.LABEL_PARASUELDO)) {
					existe=true;
					rubroempleaAux.setsDescripcionGeneralEntityReporte1(Funciones2.getDescripcionBoolean(rubroempleaAux.getpara_sueldo()));
				}
				 else if(sTipoSeleccionar.equals(RubroEmpleaConstantesFunciones.LABEL_PARAVACACIONES)) {
					existe=true;
					rubroempleaAux.setsDescripcionGeneralEntityReporte1(Funciones2.getDescripcionBoolean(rubroempleaAux.getpara_vacaciones()));
				}
				 else if(sTipoSeleccionar.equals(RubroEmpleaConstantesFunciones.LABEL_PARAIMPUESTORENTA)) {
					existe=true;
					rubroempleaAux.setsDescripcionGeneralEntityReporte1(Funciones2.getDescripcionBoolean(rubroempleaAux.getpara_impuesto_renta()));
				}
				 else if(sTipoSeleccionar.equals(RubroEmpleaConstantesFunciones.LABEL_PARASEGUROSOCIAL)) {
					existe=true;
					rubroempleaAux.setsDescripcionGeneralEntityReporte1(Funciones2.getDescripcionBoolean(rubroempleaAux.getpara_seguro_social()));
				}
				 else if(sTipoSeleccionar.equals(RubroEmpleaConstantesFunciones.LABEL_PARAPROVISIONES)) {
					existe=true;
					rubroempleaAux.setsDescripcionGeneralEntityReporte1(Funciones2.getDescripcionBoolean(rubroempleaAux.getpara_provisiones()));
				}
				 else if(sTipoSeleccionar.equals(RubroEmpleaConstantesFunciones.LABEL_PARAUTILIDADES)) {
					existe=true;
					rubroempleaAux.setsDescripcionGeneralEntityReporte1(Funciones2.getDescripcionBoolean(rubroempleaAux.getpara_utilidades()));
				}
				 else if(sTipoSeleccionar.equals(RubroEmpleaConstantesFunciones.LABEL_PARARUBROIESS)) {
					existe=true;
					rubroempleaAux.setsDescripcionGeneralEntityReporte1(Funciones2.getDescripcionBoolean(rubroempleaAux.getpara_rubro_iess()));
				}
				 else if(sTipoSeleccionar.equals(RubroEmpleaConstantesFunciones.LABEL_ESFONDORESERVA)) {
					existe=true;
					rubroempleaAux.setsDescripcionGeneralEntityReporte1(Funciones2.getDescripcionBoolean(rubroempleaAux.getes_fondo_reserva()));
				}
				 else if(sTipoSeleccionar.equals(RubroEmpleaConstantesFunciones.LABEL_ESDECIMOTERCERO)) {
					existe=true;
					rubroempleaAux.setsDescripcionGeneralEntityReporte1(Funciones2.getDescripcionBoolean(rubroempleaAux.getes_decimo_tercero()));
				}
				 else if(sTipoSeleccionar.equals(RubroEmpleaConstantesFunciones.LABEL_ESDECIMOCUARTO)) {
					existe=true;
					rubroempleaAux.setsDescripcionGeneralEntityReporte1(Funciones2.getDescripcionBoolean(rubroempleaAux.getes_decimo_cuarto()));
				}
			}	
											
			if(!existe) {
				JOptionPane.showMessageDialog(this,"NO SE HA SELECCIONADO ALGUNA COLUMNA VALIDA","SELECCIONAR",JOptionPane.ERROR_MESSAGE);
			}										
		} catch(Exception e) {
			FuncionesSwing.manageException(this, e,logger,RubroEmpleaConstantesFunciones.CLASSNAME);
		}
	}
	
	
	public void actualizarEstadoCeldasBotonesRubroEmplea(String sAccion,Boolean isGuardarCambiosEnLote,Boolean isEsMantenimientoRelacionado) throws Exception {
		if(sAccion=="n") {
			if(!this.esParaBusquedaForeignKey) {
				this.isVisibilidadCeldaNuevoRubroEmplea=true;
				this.isVisibilidadCeldaNuevoRelacionesRubroEmplea=true;
				this.isVisibilidadCeldaGuardarCambiosRubroEmplea=true;
			}
			
			this.isVisibilidadCeldaModificarRubroEmplea=false;
			this.isVisibilidadCeldaActualizarRubroEmplea=false;
			this.isVisibilidadCeldaEliminarRubroEmplea=false;
			this.isVisibilidadCeldaCancelarRubroEmplea=false;
			
			if(isEsMantenimientoRelacionado==false) {
				if(isGuardarCambiosEnLote==true) {
					this.isVisibilidadCeldaGuardarRubroEmplea=true;
				} else {
					this.isVisibilidadCeldaGuardarRubroEmplea=false;
				}
			}
		} else if(sAccion=="a") {
			this.isVisibilidadCeldaNuevoRubroEmplea=false;
			this.isVisibilidadCeldaNuevoRelacionesRubroEmplea=false;
			this.isVisibilidadCeldaGuardarCambiosRubroEmplea=false;
			this.isVisibilidadCeldaModificarRubroEmplea=false;
			this.isVisibilidadCeldaActualizarRubroEmplea=true;
			this.isVisibilidadCeldaEliminarRubroEmplea=false;
			this.isVisibilidadCeldaCancelarRubroEmplea=true;
			
			if(isEsMantenimientoRelacionado==false) {
				if(isGuardarCambiosEnLote==true) {
					this.isVisibilidadCeldaGuardarRubroEmplea=true;
				} else {
					this.isVisibilidadCeldaGuardarRubroEmplea=false;
				}
			}
		} else if(sAccion=="ae") {
			this.isVisibilidadCeldaNuevoRubroEmplea=false;
			this.isVisibilidadCeldaNuevoRelacionesRubroEmplea=false;
			this.isVisibilidadCeldaGuardarCambiosRubroEmplea=false;
			this.isVisibilidadCeldaModificarRubroEmplea=false;
			this.isVisibilidadCeldaActualizarRubroEmplea=true;
			this.isVisibilidadCeldaEliminarRubroEmplea=true;
			this.isVisibilidadCeldaCancelarRubroEmplea=true;
			
			if(isEsMantenimientoRelacionado==false) {
				if(isGuardarCambiosEnLote==true) {
					this.isVisibilidadCeldaGuardarRubroEmplea=true;
				} else {
					this.isVisibilidadCeldaGuardarRubroEmplea=false;
				}
			}
		}
		//Para Mantenimientos de tablas relacionados con mas de columnas minimas
		else if(sAccion=="ae2") {
			this.isVisibilidadCeldaNuevoRubroEmplea=false;
			this.isVisibilidadCeldaNuevoRelacionesRubroEmplea=false;
			this.isVisibilidadCeldaGuardarCambiosRubroEmplea=false;
			this.isVisibilidadCeldaModificarRubroEmplea=false;
			this.isVisibilidadCeldaActualizarRubroEmplea=true;
			this.isVisibilidadCeldaEliminarRubroEmplea=false;
			this.isVisibilidadCeldaCancelarRubroEmplea=true;
			
			if(isEsMantenimientoRelacionado==false) {
				if(isGuardarCambiosEnLote==true) {
					this.isVisibilidadCeldaGuardarRubroEmplea=false;
				} else {
					this.isVisibilidadCeldaGuardarRubroEmplea=false;
				}
			}
		} else if(sAccion=="c") {
			this.isVisibilidadCeldaNuevoRubroEmplea=true;
			this.isVisibilidadCeldaNuevoRelacionesRubroEmplea=true;
			this.isVisibilidadCeldaGuardarCambiosRubroEmplea=true;
			this.isVisibilidadCeldaModificarRubroEmplea=false;
			this.isVisibilidadCeldaActualizarRubroEmplea=false;
			this.isVisibilidadCeldaEliminarRubroEmplea=false;
			this.isVisibilidadCeldaCancelarRubroEmplea=false;
			
			if(isEsMantenimientoRelacionado==false) {
				if(isGuardarCambiosEnLote==true) {
					this.isVisibilidadCeldaGuardarRubroEmplea=true;
				} else {
					this.isVisibilidadCeldaGuardarRubroEmplea=false;
				}
			}
		} else if(sAccion=="t") {
			this.isVisibilidadCeldaNuevoRubroEmplea=false;
			this.isVisibilidadCeldaNuevoRelacionesRubroEmplea=false;
			this.isVisibilidadCeldaGuardarCambiosRubroEmplea=false;
			this.isVisibilidadCeldaActualizarRubroEmplea=false;
			this.isVisibilidadCeldaEliminarRubroEmplea=false;
			this.isVisibilidadCeldaCancelarRubroEmplea=false;
			
			if(isEsMantenimientoRelacionado==false) {
				if(isGuardarCambiosEnLote==true) {
					this.isVisibilidadCeldaGuardarRubroEmplea=false;
				} else {
					this.isVisibilidadCeldaGuardarRubroEmplea=false;
				}
			}
		}  else if(sAccion=="s"||sAccion=="s2") {
			this.isVisibilidadCeldaNuevoRubroEmplea=false;
			this.isVisibilidadCeldaNuevoRelacionesRubroEmplea=false;
			this.isVisibilidadCeldaGuardarCambiosRubroEmplea=false;
			this.isVisibilidadCeldaModificarRubroEmplea=true;
			this.isVisibilidadCeldaActualizarRubroEmplea=false;
			this.isVisibilidadCeldaEliminarRubroEmplea=false;
			this.isVisibilidadCeldaCancelarRubroEmplea=true;
			
			if(isEsMantenimientoRelacionado==false) {
				if(isGuardarCambiosEnLote==true) {
					this.isVisibilidadCeldaGuardarRubroEmplea=false;
				} else {
					this.isVisibilidadCeldaGuardarRubroEmplea=false;
				}
			}
		}
		
		//ACTUALIZA VISIBILIDAD PANELES
		if(RubroEmpleaJInternalFrame.CON_DATOS_FRAME && !this.esParaBusquedaForeignKey) {
			//SIEMPRE VISIBLE
			this.isVisibilidadCeldaNuevoRubroEmplea=true;
			this.isVisibilidadCeldaNuevoRelacionesRubroEmplea=true;
			this.isVisibilidadCeldaGuardarCambiosRubroEmplea=true;
		} else {
			this.actualizarEstadoPanelsRubroEmplea(sAccion);						
		}
		
		if(this.esParaBusquedaForeignKey) {
			this.isVisibilidadCeldaCopiarRubroEmplea=false;
			//this.isVisibilidadCeldaVerFormRubroEmplea=false;
			this.isVisibilidadCeldaDuplicarRubroEmplea=false;
		}
		
		//SI ES MANTENIMIENTO RELACIONES
		if(!rubroempleaSessionBean.getConGuardarRelaciones()) {
			this.isVisibilidadCeldaNuevoRelacionesRubroEmplea=false;
		} else {
			this.isVisibilidadCeldaNuevoRubroEmplea=false;
			this.isVisibilidadCeldaGuardarCambiosRubroEmplea=false;
		}
		
		//SI ES MANTENIMIENTO RELACIONADO
		if(rubroempleaSessionBean.getEsGuardarRelacionado()) {
			if(!rubroempleaSessionBean.getConGuardarRelaciones()) {	
				this.isVisibilidadCeldaNuevoRelacionesRubroEmplea=false;												
			}
			
			this.jButtonCerrarRubroEmplea.setVisible(false);
		}
		
		//SI NO TIENE MAXIMO DE RELACIONES PERMITIDAS
		if(!this.conMaximoRelaciones) {
			this.isVisibilidadCeldaNuevoRelacionesRubroEmplea=false;
		}
		
		if(!this.permiteMantenimiento(this.rubroemplea)) {
			this.isVisibilidadCeldaActualizarRubroEmplea=false;
			this.isVisibilidadCeldaEliminarRubroEmplea=false;
		}
		
		
		
	}
	
	public void actualizarEstadoCeldasBotonesConGuardarRelacionesRubroEmplea() {
		this.isVisibilidadCeldaNuevoRubroEmplea=false;
		this.isVisibilidadCeldaGuardarCambiosRubroEmplea=false;
	}
	
	public void actualizarEstadoPanelsRubroEmplea(String sAccion) {
		if(sAccion=="n") {
			if(this.jScrollPanelDatosEdicionRubroEmplea!=null) {
				this.jScrollPanelDatosEdicionRubroEmplea.setVisible(false);			
			}
			
			//BYDAN_BUSQUEDAS
			
			if(this.jTabbedPaneBusquedasRubroEmplea!=null) {
				this.jTabbedPaneBusquedasRubroEmplea.setVisible(true);			
			}
			
			
			if(this.jScrollPanelDatosRubroEmplea!=null) {
				this.jScrollPanelDatosRubroEmplea.setVisible(true);
			}
			
			if(this.jPanelPaginacionRubroEmplea!=null) {
				this.jPanelPaginacionRubroEmplea.setVisible(true);
			}
			
			if(this.jPanelParametrosReportesRubroEmplea!=null) {
				this.jPanelParametrosReportesRubroEmplea.setVisible(true);		    
			}
			
		} else if(sAccion=="a") {				
			if(this.jScrollPanelDatosEdicionRubroEmplea!=null) {
				this.jScrollPanelDatosEdicionRubroEmplea.setVisible(true);			
			}
			
			//BYDAN_BUSQUEDAS
			
			if(this.jTabbedPaneBusquedasRubroEmplea!=null) {
				this.jTabbedPaneBusquedasRubroEmplea.setVisible(false);			
			}
			
			
			
			if(this.jScrollPanelDatosRubroEmplea!=null) {
				this.jScrollPanelDatosRubroEmplea.setVisible(false);
			}
			
			if(this.jPanelPaginacionRubroEmplea!=null) {
				this.jPanelPaginacionRubroEmplea.setVisible(false);
			}
			
			if(this.jPanelParametrosReportesRubroEmplea!=null) {
				this.jPanelParametrosReportesRubroEmplea.setVisible(false);
			}
						
		} else if(sAccion=="ae") {		
			if(this.jScrollPanelDatosEdicionRubroEmplea!=null) {
				this.jScrollPanelDatosEdicionRubroEmplea.setVisible(true);		
			}
			
			//BYDAN_BUSQUEDAS
			
			if(this.jTabbedPaneBusquedasRubroEmplea!=null) {
				this.jTabbedPaneBusquedasRubroEmplea.setVisible(false);			
			}
			
			
			if(this.jScrollPanelDatosRubroEmplea!=null) {
				this.jScrollPanelDatosRubroEmplea.setVisible(false);
			}
			
			if(this.jPanelPaginacionRubroEmplea!=null) {
				this.jPanelPaginacionRubroEmplea.setVisible(false);
			}
			
			if(this.jPanelParametrosReportesRubroEmplea!=null) {
				this.jPanelParametrosReportesRubroEmplea.setVisible(false);
			}
						
		}
		//Para Mantenimientos de tablas relacionados con mas de columnas minimas
		else if(sAccion=="ae2") {	
			if(this.jScrollPanelDatosEdicionRubroEmplea!=null) {
				this.jScrollPanelDatosEdicionRubroEmplea.setVisible(true);			
			}
			
			//BYDAN_BUSQUEDAS
			
			if(this.jTabbedPaneBusquedasRubroEmplea!=null) {
				this.jTabbedPaneBusquedasRubroEmplea.setVisible(false);			
			}
			
			
			if(this.jScrollPanelDatosRubroEmplea!=null) {
				this.jScrollPanelDatosRubroEmplea.setVisible(false);
			}
			
			if(this.jPanelPaginacionRubroEmplea!=null) {
				this.jPanelPaginacionRubroEmplea.setVisible(false);
			}
			
			if(this.jPanelParametrosReportesRubroEmplea!=null) {
				this.jPanelParametrosReportesRubroEmplea.setVisible(false);
			}
						
		} else if(sAccion=="c") {	
			if(this.jScrollPanelDatosEdicionRubroEmplea!=null) {
				this.jScrollPanelDatosEdicionRubroEmplea.setVisible(false);			
			}
			
			//BYDAN_BUSQUEDAS
			
			if(this.jTabbedPaneBusquedasRubroEmplea!=null) {
				this.jTabbedPaneBusquedasRubroEmplea.setVisible(true);			
			}
			
			
			if(this.jScrollPanelDatosRubroEmplea!=null) {
				this.jScrollPanelDatosRubroEmplea.setVisible(true);
			}
			
			if(this.jPanelPaginacionRubroEmplea!=null) {
				this.jPanelPaginacionRubroEmplea.setVisible(true);
			}
			
			if(this.jPanelParametrosReportesRubroEmplea!=null) {
				this.jPanelParametrosReportesRubroEmplea.setVisible(true);
			}
						
		} else if(sAccion=="t") {
			
			if(this.jScrollPanelDatosEdicionRubroEmplea!=null) {
				this.jScrollPanelDatosEdicionRubroEmplea.setVisible(false);
			}
			
			//BYDAN_BUSQUEDAS
			
			if(this.jTabbedPaneBusquedasRubroEmplea!=null) {
				this.jTabbedPaneBusquedasRubroEmplea.setVisible(true);			
			}
			
			
			if(this.jScrollPanelDatosRubroEmplea!=null) {
				this.jScrollPanelDatosRubroEmplea.setVisible(true);
			}
			
			if(this.jPanelPaginacionRubroEmplea!=null) {
				this.jPanelPaginacionRubroEmplea.setVisible(true);
			}
			
			if(this.jPanelParametrosReportesRubroEmplea!=null) {
				this.jPanelParametrosReportesRubroEmplea.setVisible(true);
			}
						
		}  else if(sAccion=="s"||sAccion=="s2") {
			if(this.jScrollPanelDatosEdicionRubroEmplea!=null) {
				this.jScrollPanelDatosEdicionRubroEmplea.setVisible(false);
			}
			
			//BYDAN_BUSQUEDAS
			
			if(this.jTabbedPaneBusquedasRubroEmplea!=null) {
				this.jTabbedPaneBusquedasRubroEmplea.setVisible(true);			
			}
			
			
			if(this.jScrollPanelDatosRubroEmplea!=null) {
				this.jScrollPanelDatosRubroEmplea.setVisible(true);
			}
			
			if(this.jPanelPaginacionRubroEmplea!=null) {
				this.jPanelPaginacionRubroEmplea.setVisible(true);
			}
			
			if(this.jPanelParametrosReportesRubroEmplea!=null) {
				this.jPanelParametrosReportesRubroEmplea.setVisible(true);
			}
			
		} 
		
		if(sAccion.equals("relacionado") || this.rubroempleaSessionBean.getEsGuardarRelacionado()) {
			if(!this.conCargarMinimo) {
				//BYDAN_BUSQUEDAS
				
				if(this.jTabbedPaneBusquedasRubroEmplea!=null) {
					this.jTabbedPaneBusquedasRubroEmplea.setVisible(false);				
				}
				
			}
			
			if(this.jPanelParametrosReportesRubroEmplea!=null) {
				this.jPanelParametrosReportesRubroEmplea.setVisible(false);
			}
		
		} else if(sAccion.equals("no_relacionado") && !this.rubroempleaSessionBean.getEsGuardarRelacionado()) {
			//BYDAN_BUSQUEDAS
			
			if(this.jTabbedPaneBusquedasRubroEmplea!=null) {
				this.jTabbedPaneBusquedasRubroEmplea.setVisible(true);			
			}
			
			if(this.jPanelParametrosReportesRubroEmplea!=null) {
				this.jPanelParametrosReportesRubroEmplea.setVisible(true);
			}
		}
	}	
	
	

	public void setVisibilidadBusquedasParaEmpresa(Boolean isParaEmpresa){
		//BYDAN_BUSQUEDAS
		
		if(!this.conCargarMinimo) {

			Boolean isParaEmpresaNegation=!isParaEmpresa;

			this.isVisibilidadFK_IdTipoCalculo=isParaEmpresaNegation;
			if(!this.isVisibilidadFK_IdTipoCalculo) {this.jTabbedPaneBusquedasRubroEmplea.remove(jPanelFK_IdTipoCalculoRubroEmplea);}

			this.isVisibilidadFK_IdTipoGrupoRubroEmplea=isParaEmpresaNegation;
			if(!this.isVisibilidadFK_IdTipoGrupoRubroEmplea) {this.jTabbedPaneBusquedasRubroEmplea.remove(jPanelFK_IdTipoGrupoRubroEmpleaRubroEmplea);}

			this.isVisibilidadFK_IdTipoRubroEmplea=isParaEmpresaNegation;
			if(!this.isVisibilidadFK_IdTipoRubroEmplea) {this.jTabbedPaneBusquedasRubroEmplea.remove(jPanelFK_IdTipoRubroEmpleaRubroEmplea);}
		}
		
	}

	public void setVisibilidadBusquedasParaTipoCalculo(Boolean isParaTipoCalculo){
		//BYDAN_BUSQUEDAS
		
		if(!this.conCargarMinimo) {

			Boolean isParaTipoCalculoNegation=!isParaTipoCalculo;

			this.isVisibilidadFK_IdTipoCalculo=isParaTipoCalculo;
			if(!this.isVisibilidadFK_IdTipoCalculo) {this.jTabbedPaneBusquedasRubroEmplea.remove(jPanelFK_IdTipoCalculoRubroEmplea);}

			this.isVisibilidadFK_IdTipoGrupoRubroEmplea=isParaTipoCalculoNegation;
			if(!this.isVisibilidadFK_IdTipoGrupoRubroEmplea) {this.jTabbedPaneBusquedasRubroEmplea.remove(jPanelFK_IdTipoGrupoRubroEmpleaRubroEmplea);}

			this.isVisibilidadFK_IdTipoRubroEmplea=isParaTipoCalculoNegation;
			if(!this.isVisibilidadFK_IdTipoRubroEmplea) {this.jTabbedPaneBusquedasRubroEmplea.remove(jPanelFK_IdTipoRubroEmpleaRubroEmplea);}
		}
		
	}

	public void setVisibilidadBusquedasParaTipoRubroEmplea(Boolean isParaTipoRubroEmplea){
		//BYDAN_BUSQUEDAS
		
		if(!this.conCargarMinimo) {

			Boolean isParaTipoRubroEmpleaNegation=!isParaTipoRubroEmplea;

			this.isVisibilidadFK_IdTipoCalculo=isParaTipoRubroEmpleaNegation;
			if(!this.isVisibilidadFK_IdTipoCalculo) {this.jTabbedPaneBusquedasRubroEmplea.remove(jPanelFK_IdTipoCalculoRubroEmplea);}

			this.isVisibilidadFK_IdTipoGrupoRubroEmplea=isParaTipoRubroEmpleaNegation;
			if(!this.isVisibilidadFK_IdTipoGrupoRubroEmplea) {this.jTabbedPaneBusquedasRubroEmplea.remove(jPanelFK_IdTipoGrupoRubroEmpleaRubroEmplea);}

			this.isVisibilidadFK_IdTipoRubroEmplea=isParaTipoRubroEmplea;
			if(!this.isVisibilidadFK_IdTipoRubroEmplea) {this.jTabbedPaneBusquedasRubroEmplea.remove(jPanelFK_IdTipoRubroEmpleaRubroEmplea);}
		}
		
	}

	public void setVisibilidadBusquedasParaTipoGrupoRubroEmplea(Boolean isParaTipoGrupoRubroEmplea){
		//BYDAN_BUSQUEDAS
		
		if(!this.conCargarMinimo) {

			Boolean isParaTipoGrupoRubroEmpleaNegation=!isParaTipoGrupoRubroEmplea;

			this.isVisibilidadFK_IdTipoCalculo=isParaTipoGrupoRubroEmpleaNegation;
			if(!this.isVisibilidadFK_IdTipoCalculo) {this.jTabbedPaneBusquedasRubroEmplea.remove(jPanelFK_IdTipoCalculoRubroEmplea);}

			this.isVisibilidadFK_IdTipoGrupoRubroEmplea=isParaTipoGrupoRubroEmplea;
			if(!this.isVisibilidadFK_IdTipoGrupoRubroEmplea) {this.jTabbedPaneBusquedasRubroEmplea.remove(jPanelFK_IdTipoGrupoRubroEmpleaRubroEmplea);}

			this.isVisibilidadFK_IdTipoRubroEmplea=isParaTipoGrupoRubroEmpleaNegation;
			if(!this.isVisibilidadFK_IdTipoRubroEmplea) {this.jTabbedPaneBusquedasRubroEmplea.remove(jPanelFK_IdTipoRubroEmpleaRubroEmplea);}
		}
		
	}
	
	

	public String registrarSesionRubroEmpleaParaHistorialPagoNomis() throws Exception {
		Boolean isPaginaPopupHistorialPagoNomi=false;

		try {

			if(this.rubroempleaSessionBean==null) {
				this.rubroempleaSessionBean=new RubroEmpleaSessionBean();
			}

			if(this.jInternalFrameDetalleFormRubroEmplea.historialpagonomiSessionBean==null) {
				this.jInternalFrameDetalleFormRubroEmplea.historialpagonomiSessionBean=new HistorialPagoNomiSessionBean();
			}

			this.jInternalFrameDetalleFormRubroEmplea.historialpagonomiSessionBean.setsPathNavegacionActual(rubroempleaSessionBean.getsPathNavegacionActual()+Constantes.SHTMLFLECHA+HistorialPagoNomiConstantesFunciones.SCLASSWEBTITULO);
			this.jInternalFrameDetalleFormRubroEmplea.historialpagonomiSessionBean.setisPermiteRecargarInformacion(false);
			isPaginaPopupHistorialPagoNomi=this.jInternalFrameDetalleFormRubroEmplea.historialpagonomiSessionBean.getisPaginaPopup();
			this.jInternalFrameDetalleFormRubroEmplea.historialpagonomiSessionBean.setisPermiteNavegacionHaciaForeignKeyDesdeHistorialPagoNomi(true);
			this.jInternalFrameDetalleFormRubroEmplea.historialpagonomiSessionBean.setsNombrePaginaNavegacionHaciaForeignKeyDesdeHistorialPagoNomi(RubroEmpleaConstantesFunciones.SNOMBREOPCION);
			this.jInternalFrameDetalleFormRubroEmplea.historialpagonomiSessionBean.setisBusquedaDesdeForeignKeySesionRubroEmplea(true);
			this.jInternalFrameDetalleFormRubroEmplea.historialpagonomiSessionBean.setlidRubroEmpleaActual(this.idRubroEmpleaActual);

			rubroempleaSessionBean.setisBusquedaDesdeForeignKeySesionForeignKeyRubroEmplea(true);
			rubroempleaSessionBean.setlIdRubroEmpleaActualForeignKey(this.idRubroEmpleaActual);

			String strPagina=Constantes.SNONE;
			SistemaLogicAdditional sistemaLogicAdditional=new SistemaLogicAdditional();

			guardarDatosBusquedaSession();

		} catch(Exception e) {
			FuncionesSwing.manageException(this, e,logger);
		}

		return "";
	}

	public String registrarSesionRubroEmpleaParaRubroEstructuras() throws Exception {
		Boolean isPaginaPopupRubroEstructura=false;

		try {

			if(this.rubroempleaSessionBean==null) {
				this.rubroempleaSessionBean=new RubroEmpleaSessionBean();
			}

			if(this.jInternalFrameDetalleFormRubroEmplea.rubroestructuraSessionBean==null) {
				this.jInternalFrameDetalleFormRubroEmplea.rubroestructuraSessionBean=new RubroEstructuraSessionBean();
			}

			this.jInternalFrameDetalleFormRubroEmplea.rubroestructuraSessionBean.setsPathNavegacionActual(rubroempleaSessionBean.getsPathNavegacionActual()+Constantes.SHTMLFLECHA+RubroEstructuraConstantesFunciones.SCLASSWEBTITULO);
			this.jInternalFrameDetalleFormRubroEmplea.rubroestructuraSessionBean.setisPermiteRecargarInformacion(false);
			isPaginaPopupRubroEstructura=this.jInternalFrameDetalleFormRubroEmplea.rubroestructuraSessionBean.getisPaginaPopup();
			this.jInternalFrameDetalleFormRubroEmplea.rubroestructuraSessionBean.setisPermiteNavegacionHaciaForeignKeyDesdeRubroEstructura(true);
			this.jInternalFrameDetalleFormRubroEmplea.rubroestructuraSessionBean.setsNombrePaginaNavegacionHaciaForeignKeyDesdeRubroEstructura(RubroEmpleaConstantesFunciones.SNOMBREOPCION);
			this.jInternalFrameDetalleFormRubroEmplea.rubroestructuraSessionBean.setisBusquedaDesdeForeignKeySesionRubroEmplea(true);
			this.jInternalFrameDetalleFormRubroEmplea.rubroestructuraSessionBean.setlidRubroEmpleaActual(this.idRubroEmpleaActual);

			rubroempleaSessionBean.setisBusquedaDesdeForeignKeySesionForeignKeyRubroEmplea(true);
			rubroempleaSessionBean.setlIdRubroEmpleaActualForeignKey(this.idRubroEmpleaActual);

			String strPagina=Constantes.SNONE;
			SistemaLogicAdditional sistemaLogicAdditional=new SistemaLogicAdditional();

			guardarDatosBusquedaSession();

		} catch(Exception e) {
			FuncionesSwing.manageException(this, e,logger);
		}

		return "";
	}

	public String registrarSesionRubroEmpleaParaDefiProvisionEmpleados() throws Exception {
		Boolean isPaginaPopupDefiProvisionEmpleado=false;

		try {

			if(this.rubroempleaSessionBean==null) {
				this.rubroempleaSessionBean=new RubroEmpleaSessionBean();
			}

			if(this.jInternalFrameDetalleFormRubroEmplea.defiprovisionempleadoSessionBean==null) {
				this.jInternalFrameDetalleFormRubroEmplea.defiprovisionempleadoSessionBean=new DefiProvisionEmpleadoSessionBean();
			}

			this.jInternalFrameDetalleFormRubroEmplea.defiprovisionempleadoSessionBean.setsPathNavegacionActual(rubroempleaSessionBean.getsPathNavegacionActual()+Constantes.SHTMLFLECHA+DefiProvisionEmpleadoConstantesFunciones.SCLASSWEBTITULO);
			this.jInternalFrameDetalleFormRubroEmplea.defiprovisionempleadoSessionBean.setisPermiteRecargarInformacion(false);
			isPaginaPopupDefiProvisionEmpleado=this.jInternalFrameDetalleFormRubroEmplea.defiprovisionempleadoSessionBean.getisPaginaPopup();
			this.jInternalFrameDetalleFormRubroEmplea.defiprovisionempleadoSessionBean.setisPermiteNavegacionHaciaForeignKeyDesdeDefiProvisionEmpleado(true);
			this.jInternalFrameDetalleFormRubroEmplea.defiprovisionempleadoSessionBean.setsNombrePaginaNavegacionHaciaForeignKeyDesdeDefiProvisionEmpleado(RubroEmpleaConstantesFunciones.SNOMBREOPCION);
			this.jInternalFrameDetalleFormRubroEmplea.defiprovisionempleadoSessionBean.setisBusquedaDesdeForeignKeySesionRubroEmplea(true);
			this.jInternalFrameDetalleFormRubroEmplea.defiprovisionempleadoSessionBean.setlidRubroEmpleaActual(this.idRubroEmpleaActual);

			rubroempleaSessionBean.setisBusquedaDesdeForeignKeySesionForeignKeyRubroEmplea(true);
			rubroempleaSessionBean.setlIdRubroEmpleaActualForeignKey(this.idRubroEmpleaActual);

			String strPagina=Constantes.SNONE;
			SistemaLogicAdditional sistemaLogicAdditional=new SistemaLogicAdditional();

			guardarDatosBusquedaSession();

		} catch(Exception e) {
			FuncionesSwing.manageException(this, e,logger);
		}

		return "";
	}

	public String registrarSesionRubroEmpleaParaEmpleadoPagoRubros() throws Exception {
		Boolean isPaginaPopupEmpleadoPagoRubro=false;

		try {

			if(this.rubroempleaSessionBean==null) {
				this.rubroempleaSessionBean=new RubroEmpleaSessionBean();
			}

			if(this.jInternalFrameDetalleFormRubroEmplea.empleadopagorubroSessionBean==null) {
				this.jInternalFrameDetalleFormRubroEmplea.empleadopagorubroSessionBean=new EmpleadoPagoRubroSessionBean();
			}

			this.jInternalFrameDetalleFormRubroEmplea.empleadopagorubroSessionBean.setsPathNavegacionActual(rubroempleaSessionBean.getsPathNavegacionActual()+Constantes.SHTMLFLECHA+EmpleadoPagoRubroConstantesFunciones.SCLASSWEBTITULO);
			this.jInternalFrameDetalleFormRubroEmplea.empleadopagorubroSessionBean.setisPermiteRecargarInformacion(false);
			isPaginaPopupEmpleadoPagoRubro=this.jInternalFrameDetalleFormRubroEmplea.empleadopagorubroSessionBean.getisPaginaPopup();
			this.jInternalFrameDetalleFormRubroEmplea.empleadopagorubroSessionBean.setisPermiteNavegacionHaciaForeignKeyDesdeEmpleadoPagoRubro(true);
			this.jInternalFrameDetalleFormRubroEmplea.empleadopagorubroSessionBean.setsNombrePaginaNavegacionHaciaForeignKeyDesdeEmpleadoPagoRubro(RubroEmpleaConstantesFunciones.SNOMBREOPCION);
			this.jInternalFrameDetalleFormRubroEmplea.empleadopagorubroSessionBean.setisBusquedaDesdeForeignKeySesionRubroEmplea(true);
			this.jInternalFrameDetalleFormRubroEmplea.empleadopagorubroSessionBean.setlidRubroEmpleaActual(this.idRubroEmpleaActual);

			rubroempleaSessionBean.setisBusquedaDesdeForeignKeySesionForeignKeyRubroEmplea(true);
			rubroempleaSessionBean.setlIdRubroEmpleaActualForeignKey(this.idRubroEmpleaActual);

			String strPagina=Constantes.SNONE;
			SistemaLogicAdditional sistemaLogicAdditional=new SistemaLogicAdditional();

			guardarDatosBusquedaSession();

		} catch(Exception e) {
			FuncionesSwing.manageException(this, e,logger);
		}

		return "";
	}

	public String registrarSesionRubroEmpleaParaHistorialPagoMesNomis() throws Exception {
		Boolean isPaginaPopupHistorialPagoMesNomi=false;

		try {

			if(this.rubroempleaSessionBean==null) {
				this.rubroempleaSessionBean=new RubroEmpleaSessionBean();
			}

			if(this.jInternalFrameDetalleFormRubroEmplea.historialpagomesnomiSessionBean==null) {
				this.jInternalFrameDetalleFormRubroEmplea.historialpagomesnomiSessionBean=new HistorialPagoMesNomiSessionBean();
			}

			this.jInternalFrameDetalleFormRubroEmplea.historialpagomesnomiSessionBean.setsPathNavegacionActual(rubroempleaSessionBean.getsPathNavegacionActual()+Constantes.SHTMLFLECHA+HistorialPagoMesNomiConstantesFunciones.SCLASSWEBTITULO);
			this.jInternalFrameDetalleFormRubroEmplea.historialpagomesnomiSessionBean.setisPermiteRecargarInformacion(false);
			isPaginaPopupHistorialPagoMesNomi=this.jInternalFrameDetalleFormRubroEmplea.historialpagomesnomiSessionBean.getisPaginaPopup();
			this.jInternalFrameDetalleFormRubroEmplea.historialpagomesnomiSessionBean.setisPermiteNavegacionHaciaForeignKeyDesdeHistorialPagoMesNomi(true);
			this.jInternalFrameDetalleFormRubroEmplea.historialpagomesnomiSessionBean.setsNombrePaginaNavegacionHaciaForeignKeyDesdeHistorialPagoMesNomi(RubroEmpleaConstantesFunciones.SNOMBREOPCION);
			this.jInternalFrameDetalleFormRubroEmplea.historialpagomesnomiSessionBean.setisBusquedaDesdeForeignKeySesionRubroEmplea(true);
			this.jInternalFrameDetalleFormRubroEmplea.historialpagomesnomiSessionBean.setlidRubroEmpleaActual(this.idRubroEmpleaActual);

			rubroempleaSessionBean.setisBusquedaDesdeForeignKeySesionForeignKeyRubroEmplea(true);
			rubroempleaSessionBean.setlIdRubroEmpleaActualForeignKey(this.idRubroEmpleaActual);

			String strPagina=Constantes.SNONE;
			SistemaLogicAdditional sistemaLogicAdditional=new SistemaLogicAdditional();

			guardarDatosBusquedaSession();

		} catch(Exception e) {
			FuncionesSwing.manageException(this, e,logger);
		}

		return "";
	}

	public String registrarSesionRubroEmpleaParaRubroEmpleados() throws Exception {
		Boolean isPaginaPopupRubroEmpleado=false;

		try {

			if(this.rubroempleaSessionBean==null) {
				this.rubroempleaSessionBean=new RubroEmpleaSessionBean();
			}

			if(this.jInternalFrameDetalleFormRubroEmplea.rubroempleadoSessionBean==null) {
				this.jInternalFrameDetalleFormRubroEmplea.rubroempleadoSessionBean=new RubroEmpleadoSessionBean();
			}

			this.jInternalFrameDetalleFormRubroEmplea.rubroempleadoSessionBean.setsPathNavegacionActual(rubroempleaSessionBean.getsPathNavegacionActual()+Constantes.SHTMLFLECHA+RubroEmpleadoConstantesFunciones.SCLASSWEBTITULO);
			this.jInternalFrameDetalleFormRubroEmplea.rubroempleadoSessionBean.setisPermiteRecargarInformacion(false);
			isPaginaPopupRubroEmpleado=this.jInternalFrameDetalleFormRubroEmplea.rubroempleadoSessionBean.getisPaginaPopup();
			this.jInternalFrameDetalleFormRubroEmplea.rubroempleadoSessionBean.setisPermiteNavegacionHaciaForeignKeyDesdeRubroEmpleado(true);
			this.jInternalFrameDetalleFormRubroEmplea.rubroempleadoSessionBean.setsNombrePaginaNavegacionHaciaForeignKeyDesdeRubroEmpleado(RubroEmpleaConstantesFunciones.SNOMBREOPCION);
			this.jInternalFrameDetalleFormRubroEmplea.rubroempleadoSessionBean.setisBusquedaDesdeForeignKeySesionRubroEmplea(true);
			this.jInternalFrameDetalleFormRubroEmplea.rubroempleadoSessionBean.setlidRubroEmpleaActual(this.idRubroEmpleaActual);

			rubroempleaSessionBean.setisBusquedaDesdeForeignKeySesionForeignKeyRubroEmplea(true);
			rubroempleaSessionBean.setlIdRubroEmpleaActualForeignKey(this.idRubroEmpleaActual);

			String strPagina=Constantes.SNONE;
			SistemaLogicAdditional sistemaLogicAdditional=new SistemaLogicAdditional();

			guardarDatosBusquedaSession();

		} catch(Exception e) {
			FuncionesSwing.manageException(this, e,logger);
		}

		return "";
	}

	public String registrarSesionRubroEmpleaParaValorRubroVariables() throws Exception {
		Boolean isPaginaPopupValorRubroVariable=false;

		try {

			if(this.rubroempleaSessionBean==null) {
				this.rubroempleaSessionBean=new RubroEmpleaSessionBean();
			}

			if(this.jInternalFrameDetalleFormRubroEmplea.valorrubrovariableSessionBean==null) {
				this.jInternalFrameDetalleFormRubroEmplea.valorrubrovariableSessionBean=new ValorRubroVariableSessionBean();
			}

			this.jInternalFrameDetalleFormRubroEmplea.valorrubrovariableSessionBean.setsPathNavegacionActual(rubroempleaSessionBean.getsPathNavegacionActual()+Constantes.SHTMLFLECHA+ValorRubroVariableConstantesFunciones.SCLASSWEBTITULO);
			this.jInternalFrameDetalleFormRubroEmplea.valorrubrovariableSessionBean.setisPermiteRecargarInformacion(false);
			isPaginaPopupValorRubroVariable=this.jInternalFrameDetalleFormRubroEmplea.valorrubrovariableSessionBean.getisPaginaPopup();
			this.jInternalFrameDetalleFormRubroEmplea.valorrubrovariableSessionBean.setisPermiteNavegacionHaciaForeignKeyDesdeValorRubroVariable(true);
			this.jInternalFrameDetalleFormRubroEmplea.valorrubrovariableSessionBean.setsNombrePaginaNavegacionHaciaForeignKeyDesdeValorRubroVariable(RubroEmpleaConstantesFunciones.SNOMBREOPCION);
			this.jInternalFrameDetalleFormRubroEmplea.valorrubrovariableSessionBean.setisBusquedaDesdeForeignKeySesionRubroEmplea(true);
			this.jInternalFrameDetalleFormRubroEmplea.valorrubrovariableSessionBean.setlidRubroEmpleaActual(this.idRubroEmpleaActual);

			rubroempleaSessionBean.setisBusquedaDesdeForeignKeySesionForeignKeyRubroEmplea(true);
			rubroempleaSessionBean.setlIdRubroEmpleaActualForeignKey(this.idRubroEmpleaActual);

			String strPagina=Constantes.SNONE;
			SistemaLogicAdditional sistemaLogicAdditional=new SistemaLogicAdditional();

			guardarDatosBusquedaSession();

		} catch(Exception e) {
			FuncionesSwing.manageException(this, e,logger);
		}

		return "";
	}

	public String registrarSesionRubroEmpleaParaTipoPrestamos() throws Exception {
		Boolean isPaginaPopupTipoPrestamo=false;

		try {

			if(this.rubroempleaSessionBean==null) {
				this.rubroempleaSessionBean=new RubroEmpleaSessionBean();
			}

			if(this.jInternalFrameDetalleFormRubroEmplea.tipoprestamoSessionBean==null) {
				this.jInternalFrameDetalleFormRubroEmplea.tipoprestamoSessionBean=new TipoPrestamoSessionBean();
			}

			this.jInternalFrameDetalleFormRubroEmplea.tipoprestamoSessionBean.setsPathNavegacionActual(rubroempleaSessionBean.getsPathNavegacionActual()+Constantes.SHTMLFLECHA+TipoPrestamoConstantesFunciones.SCLASSWEBTITULO);
			this.jInternalFrameDetalleFormRubroEmplea.tipoprestamoSessionBean.setisPermiteRecargarInformacion(false);
			isPaginaPopupTipoPrestamo=this.jInternalFrameDetalleFormRubroEmplea.tipoprestamoSessionBean.getisPaginaPopup();
			this.jInternalFrameDetalleFormRubroEmplea.tipoprestamoSessionBean.setisPermiteNavegacionHaciaForeignKeyDesdeTipoPrestamo(true);
			this.jInternalFrameDetalleFormRubroEmplea.tipoprestamoSessionBean.setsNombrePaginaNavegacionHaciaForeignKeyDesdeTipoPrestamo(RubroEmpleaConstantesFunciones.SNOMBREOPCION);
			this.jInternalFrameDetalleFormRubroEmplea.tipoprestamoSessionBean.setisBusquedaDesdeForeignKeySesionRubroEmplea(true);
			this.jInternalFrameDetalleFormRubroEmplea.tipoprestamoSessionBean.setlidRubroEmpleaActual(this.idRubroEmpleaActual);

			rubroempleaSessionBean.setisBusquedaDesdeForeignKeySesionForeignKeyRubroEmplea(true);
			rubroempleaSessionBean.setlIdRubroEmpleaActualForeignKey(this.idRubroEmpleaActual);

			String strPagina=Constantes.SNONE;
			SistemaLogicAdditional sistemaLogicAdditional=new SistemaLogicAdditional();

			guardarDatosBusquedaSession();

		} catch(Exception e) {
			FuncionesSwing.manageException(this, e,logger);
		}

		return "";
	}

	public String registrarSesionRubroEmpleaParaRubroEmpleaCuentaContables() throws Exception {
		Boolean isPaginaPopupRubroEmpleaCuentaContable=false;

		try {

			if(this.rubroempleaSessionBean==null) {
				this.rubroempleaSessionBean=new RubroEmpleaSessionBean();
			}

			if(this.jInternalFrameDetalleFormRubroEmplea.rubroempleacuentacontableSessionBean==null) {
				this.jInternalFrameDetalleFormRubroEmplea.rubroempleacuentacontableSessionBean=new RubroEmpleaCuentaContableSessionBean();
			}

			this.jInternalFrameDetalleFormRubroEmplea.rubroempleacuentacontableSessionBean.setsPathNavegacionActual(rubroempleaSessionBean.getsPathNavegacionActual()+Constantes.SHTMLFLECHA+RubroEmpleaCuentaContableConstantesFunciones.SCLASSWEBTITULO);
			this.jInternalFrameDetalleFormRubroEmplea.rubroempleacuentacontableSessionBean.setisPermiteRecargarInformacion(false);
			isPaginaPopupRubroEmpleaCuentaContable=this.jInternalFrameDetalleFormRubroEmplea.rubroempleacuentacontableSessionBean.getisPaginaPopup();
			this.jInternalFrameDetalleFormRubroEmplea.rubroempleacuentacontableSessionBean.setisPermiteNavegacionHaciaForeignKeyDesdeRubroEmpleaCuentaContable(true);
			this.jInternalFrameDetalleFormRubroEmplea.rubroempleacuentacontableSessionBean.setsNombrePaginaNavegacionHaciaForeignKeyDesdeRubroEmpleaCuentaContable(RubroEmpleaConstantesFunciones.SNOMBREOPCION);
			this.jInternalFrameDetalleFormRubroEmplea.rubroempleacuentacontableSessionBean.setisBusquedaDesdeForeignKeySesionRubroEmplea(true);
			this.jInternalFrameDetalleFormRubroEmplea.rubroempleacuentacontableSessionBean.setlidRubroEmpleaActual(this.idRubroEmpleaActual);

			rubroempleaSessionBean.setisBusquedaDesdeForeignKeySesionForeignKeyRubroEmplea(true);
			rubroempleaSessionBean.setlIdRubroEmpleaActualForeignKey(this.idRubroEmpleaActual);

			String strPagina=Constantes.SNONE;
			SistemaLogicAdditional sistemaLogicAdditional=new SistemaLogicAdditional();

			guardarDatosBusquedaSession();

		} catch(Exception e) {
			FuncionesSwing.manageException(this, e,logger);
		}

		return "";
	}
	
	
	
	
	public void guardarDatosBusquedaSession() throws Exception {
		
		//RubroEmpleaSessionBean rubroempleaSessionBean=new RubroEmpleaSessionBean();
		
		if(this.rubroempleaSessionBean==null) {
			this.rubroempleaSessionBean=new RubroEmpleaSessionBean();
		}
		
		this.rubroempleaSessionBean.setsUltimaBusquedaRubroEmplea(this.getsAccionBusqueda());
		this.rubroempleaSessionBean.setiNumeroPaginacion(this.getiNumeroPaginacion());
		this.rubroempleaSessionBean.setiNumeroPaginacionPagina(this.getiNumeroPaginacionPagina());
		
		if(this.getsAccionBusqueda().equals("Todos")) {
			;
		}
		

		else if(this.getsAccionBusqueda().equals("FK_IdEmpresa")) {
			rubroempleaSessionBean.setid_empresa(this.getid_empresaFK_IdEmpresa());	
		}
		else if(this.getsAccionBusqueda().equals("FK_IdTipoCalculo")) {
			rubroempleaSessionBean.setid_tipo_calculo(this.getid_tipo_calculoFK_IdTipoCalculo());	
		}
		else if(this.getsAccionBusqueda().equals("FK_IdTipoGrupoRubroEmplea")) {
			rubroempleaSessionBean.setid_tipo_grupo_rubro_emplea(this.getid_tipo_grupo_rubro_empleaFK_IdTipoGrupoRubroEmplea());	
		}
		else if(this.getsAccionBusqueda().equals("FK_IdTipoRubroEmplea")) {
			rubroempleaSessionBean.setid_tipo_rubro_emplea(this.getid_tipo_rubro_empleaFK_IdTipoRubroEmplea());	
		}
		
	}
	
	public void traerDatosBusquedaDesdeSession() throws Exception {
		//RubroEmpleaSessionBean rubroempleaSessionBean=new RubroEmpleaSessionBean();
		
		if(this.rubroempleaSessionBean==null) {
			this.rubroempleaSessionBean=new RubroEmpleaSessionBean();
		}
		
		if(this.rubroempleaSessionBean.getsUltimaBusquedaRubroEmplea()!=null&&!this.rubroempleaSessionBean.getsUltimaBusquedaRubroEmplea().equals("")) {
			this.setsAccionBusqueda(rubroempleaSessionBean.getsUltimaBusquedaRubroEmplea());
			this.setiNumeroPaginacion(rubroempleaSessionBean.getiNumeroPaginacion());
			this.setiNumeroPaginacionPagina(rubroempleaSessionBean.getiNumeroPaginacionPagina());		
				
			if(this.getsAccionBusqueda().equals("Todos")) {
				;
			}
			

			 else if(this.getsAccionBusqueda().equals("FK_IdEmpresa")) {
				this.setid_empresaFK_IdEmpresa(rubroempleaSessionBean.getid_empresa());
				rubroempleaSessionBean.setid_empresa(-1L);
			}
			 else if(this.getsAccionBusqueda().equals("FK_IdTipoCalculo")) {
				this.setid_tipo_calculoFK_IdTipoCalculo(rubroempleaSessionBean.getid_tipo_calculo());
				rubroempleaSessionBean.setid_tipo_calculo(-1L);
			}
			 else if(this.getsAccionBusqueda().equals("FK_IdTipoGrupoRubroEmplea")) {
				this.setid_tipo_grupo_rubro_empleaFK_IdTipoGrupoRubroEmplea(rubroempleaSessionBean.getid_tipo_grupo_rubro_emplea());
				rubroempleaSessionBean.setid_tipo_grupo_rubro_emplea(-1L);
			}
			 else if(this.getsAccionBusqueda().equals("FK_IdTipoRubroEmplea")) {
				this.setid_tipo_rubro_empleaFK_IdTipoRubroEmplea(rubroempleaSessionBean.getid_tipo_rubro_emplea());
				rubroempleaSessionBean.setid_tipo_rubro_emplea(-1L);
			}
		}
		
		this.rubroempleaSessionBean.setsUltimaBusquedaRubroEmplea("");
		this.rubroempleaSessionBean.setiNumeroPaginacion(RubroEmpleaConstantesFunciones.INUMEROPAGINACION);
		this.rubroempleaSessionBean.setiNumeroPaginacionPagina(0);
		
	}
	
	public void procesoActualizarFilaTotales(Boolean esCampoValor,String sTipo) {
		try {
			this.actualizarFilaTotales();
				
			this.traerValoresTablaTotales();
			
			this.inicializarActualizarBindingTablaRubroEmplea(false);
			
			
			
			
		} catch (Exception e) {
			e.printStackTrace();
		}
	}
	
	
	public void updateBusquedasFormularioRubroEmplea() {
		this.updateBorderResaltarBusquedasFormularioRubroEmplea();
		this.updateVisibilidadBusquedasFormularioRubroEmplea();
		this.updateHabilitarBusquedasFormularioRubroEmplea();
	}
	
	public void updateBorderResaltarBusquedasFormularioRubroEmplea() {					
	//BYDAN_BUSQUEDAS
		
	int index=0;
		
	if(this.jTabbedPaneBusquedasRubroEmplea.getComponents().length>0) {
	

		if(this.rubroempleaConstantesFunciones.resaltarFK_IdTipoCalculoRubroEmplea!=null) {
			index= this.jTabbedPaneBusquedasRubroEmplea.indexOfComponent(this.jPanelFK_IdTipoCalculoRubroEmplea);
			if(index>-1) {
				JPanel jPanel=(JPanel)this.jTabbedPaneBusquedasRubroEmplea.getComponent(index);
				jPanel.setBorder(this.rubroempleaConstantesFunciones.resaltarFK_IdTipoCalculoRubroEmplea);
			}
		}

		if(this.rubroempleaConstantesFunciones.resaltarFK_IdTipoGrupoRubroEmpleaRubroEmplea!=null) {
			index= this.jTabbedPaneBusquedasRubroEmplea.indexOfComponent(this.jPanelFK_IdTipoGrupoRubroEmpleaRubroEmplea);
			if(index>-1) {
				JPanel jPanel=(JPanel)this.jTabbedPaneBusquedasRubroEmplea.getComponent(index);
				jPanel.setBorder(this.rubroempleaConstantesFunciones.resaltarFK_IdTipoGrupoRubroEmpleaRubroEmplea);
			}
		}

		if(this.rubroempleaConstantesFunciones.resaltarFK_IdTipoRubroEmpleaRubroEmplea!=null) {
			index= this.jTabbedPaneBusquedasRubroEmplea.indexOfComponent(this.jPanelFK_IdTipoRubroEmpleaRubroEmplea);
			if(index>-1) {
				JPanel jPanel=(JPanel)this.jTabbedPaneBusquedasRubroEmplea.getComponent(index);
				jPanel.setBorder(this.rubroempleaConstantesFunciones.resaltarFK_IdTipoRubroEmpleaRubroEmplea);
			}
		}
	}	
	
	}
	
	public void updateVisibilidadBusquedasFormularioRubroEmplea() {
	//BYDAN_BUSQUEDAS
	
	int index=0;
	JPanel jPanel=null;
		
	if(this.jTabbedPaneBusquedasRubroEmplea.getComponents().length>0) {
	

			index= this.jTabbedPaneBusquedasRubroEmplea.indexOfComponent(this.jPanelFK_IdTipoCalculoRubroEmplea);
			jPanel=(JPanel)this.jTabbedPaneBusquedasRubroEmplea.getComponent(index);
			//NO VALE SOLO PONIENDO VISIBLE=FALSE, HAY QUE USAR REMOVE
			jPanel.setVisible(this.rubroempleaConstantesFunciones.mostrarFK_IdTipoCalculoRubroEmplea);
			if(!this.rubroempleaConstantesFunciones.mostrarFK_IdTipoCalculoRubroEmplea && index>-1) {
				this.jTabbedPaneBusquedasRubroEmplea.remove(index);
			}

			index= this.jTabbedPaneBusquedasRubroEmplea.indexOfComponent(this.jPanelFK_IdTipoGrupoRubroEmpleaRubroEmplea);
			jPanel=(JPanel)this.jTabbedPaneBusquedasRubroEmplea.getComponent(index);
			//NO VALE SOLO PONIENDO VISIBLE=FALSE, HAY QUE USAR REMOVE
			jPanel.setVisible(this.rubroempleaConstantesFunciones.mostrarFK_IdTipoGrupoRubroEmpleaRubroEmplea);
			if(!this.rubroempleaConstantesFunciones.mostrarFK_IdTipoGrupoRubroEmpleaRubroEmplea && index>-1) {
				this.jTabbedPaneBusquedasRubroEmplea.remove(index);
			}

			index= this.jTabbedPaneBusquedasRubroEmplea.indexOfComponent(this.jPanelFK_IdTipoRubroEmpleaRubroEmplea);
			jPanel=(JPanel)this.jTabbedPaneBusquedasRubroEmplea.getComponent(index);
			//NO VALE SOLO PONIENDO VISIBLE=FALSE, HAY QUE USAR REMOVE
			jPanel.setVisible(this.rubroempleaConstantesFunciones.mostrarFK_IdTipoRubroEmpleaRubroEmplea);
			if(!this.rubroempleaConstantesFunciones.mostrarFK_IdTipoRubroEmpleaRubroEmplea && index>-1) {
				this.jTabbedPaneBusquedasRubroEmplea.remove(index);
			}
	}	
	
	}
	
	public void updateHabilitarBusquedasFormularioRubroEmplea() {
	
	//BYDAN_BUSQUEDAS		
		int index=0;
		JPanel jPanel=null;
			
		if(this.jTabbedPaneBusquedasRubroEmplea.getComponents().length>0) {
	

			index= this.jTabbedPaneBusquedasRubroEmplea.indexOfComponent(this.jPanelFK_IdTipoCalculoRubroEmplea);
			if(index>-1) {
				jPanel=(JPanel)this.jTabbedPaneBusquedasRubroEmplea.getComponent(index);
				//ENABLE PANE=FALSE NO FUNCIONA, ENABLEAT SI
				jPanel.setEnabled(this.rubroempleaConstantesFunciones.activarFK_IdTipoCalculoRubroEmplea);
				this.jTabbedPaneBusquedasRubroEmplea.setEnabledAt(index,this.rubroempleaConstantesFunciones.activarFK_IdTipoCalculoRubroEmplea);
			}

			index= this.jTabbedPaneBusquedasRubroEmplea.indexOfComponent(this.jPanelFK_IdTipoGrupoRubroEmpleaRubroEmplea);
			if(index>-1) {
				jPanel=(JPanel)this.jTabbedPaneBusquedasRubroEmplea.getComponent(index);
				//ENABLE PANE=FALSE NO FUNCIONA, ENABLEAT SI
				jPanel.setEnabled(this.rubroempleaConstantesFunciones.activarFK_IdTipoGrupoRubroEmpleaRubroEmplea);
				this.jTabbedPaneBusquedasRubroEmplea.setEnabledAt(index,this.rubroempleaConstantesFunciones.activarFK_IdTipoGrupoRubroEmpleaRubroEmplea);
			}

			index= this.jTabbedPaneBusquedasRubroEmplea.indexOfComponent(this.jPanelFK_IdTipoRubroEmpleaRubroEmplea);
			if(index>-1) {
				jPanel=(JPanel)this.jTabbedPaneBusquedasRubroEmplea.getComponent(index);
				//ENABLE PANE=FALSE NO FUNCIONA, ENABLEAT SI
				jPanel.setEnabled(this.rubroempleaConstantesFunciones.activarFK_IdTipoRubroEmpleaRubroEmplea);
				this.jTabbedPaneBusquedasRubroEmplea.setEnabledAt(index,this.rubroempleaConstantesFunciones.activarFK_IdTipoRubroEmpleaRubroEmplea);
			}
		}	
	
	}
	
	
	public void resaltarPanelBusquedaRubroEmplea(String sTipoBusqueda) {
		Boolean existe=false;
		//BYDAN_BUSQUEDAS
		
		int index=0;
		Border resaltar = Funciones2.getBorderResaltar(this.parametroGeneralUsuario,"TAB");

		if(sTipoBusqueda.equals("FK_IdTipoCalculo")) {
			index= this.jTabbedPaneBusquedasRubroEmplea.indexOfComponent(this.jPanelFK_IdTipoCalculoRubroEmplea);

			this.jTabbedPaneBusquedasRubroEmplea.setSelectedIndex(index);

			JPanel jPanel=(JPanel)this.jTabbedPaneBusquedasRubroEmplea.getComponent(index);

			this.rubroempleaConstantesFunciones.setResaltarFK_IdTipoCalculoRubroEmplea(resaltar);

			jPanel.setBorder(this.rubroempleaConstantesFunciones.resaltarFK_IdTipoCalculoRubroEmplea);
			existe=true;
		}
		else if(sTipoBusqueda.equals("FK_IdTipoGrupoRubroEmplea")) {
			index= this.jTabbedPaneBusquedasRubroEmplea.indexOfComponent(this.jPanelFK_IdTipoGrupoRubroEmpleaRubroEmplea);

			this.jTabbedPaneBusquedasRubroEmplea.setSelectedIndex(index);

			JPanel jPanel=(JPanel)this.jTabbedPaneBusquedasRubroEmplea.getComponent(index);

			this.rubroempleaConstantesFunciones.setResaltarFK_IdTipoGrupoRubroEmpleaRubroEmplea(resaltar);

			jPanel.setBorder(this.rubroempleaConstantesFunciones.resaltarFK_IdTipoGrupoRubroEmpleaRubroEmplea);
			existe=true;
		}
		else if(sTipoBusqueda.equals("FK_IdTipoRubroEmplea")) {
			index= this.jTabbedPaneBusquedasRubroEmplea.indexOfComponent(this.jPanelFK_IdTipoRubroEmpleaRubroEmplea);

			this.jTabbedPaneBusquedasRubroEmplea.setSelectedIndex(index);

			JPanel jPanel=(JPanel)this.jTabbedPaneBusquedasRubroEmplea.getComponent(index);

			this.rubroempleaConstantesFunciones.setResaltarFK_IdTipoRubroEmpleaRubroEmplea(resaltar);

			jPanel.setBorder(this.rubroempleaConstantesFunciones.resaltarFK_IdTipoRubroEmpleaRubroEmplea);
			existe=true;
		}
		

		if(existe) {
			
			this.jTtoolBarRubroEmplea.setBorder(resaltar);
			
		}
	}	
	
	//NO FUNCIONA
	public void windowClosed(WindowEvent e) {	
	}
		
	public void windowClosing(WindowEvent e) {	    	    
	}

	public void windowOpened(WindowEvent e) {	    
	}

	public void windowIconified(WindowEvent e) {	    
	}

	public void windowDeiconified(WindowEvent e) {	    
	}

	public void windowActivated(WindowEvent e) {	    
	}

	public void windowDeactivated(WindowEvent e) {	    
	}

	public void windowGainedFocus(WindowEvent e) {	    
	}

	public void windowLostFocus(WindowEvent e) {	    
	}
	
	public void updateControlesFormularioRubroEmplea() throws Exception {

		if(this.jInternalFrameDetalleFormRubroEmplea==null) { //if(!this.conCargarFormDetalle) {			
			this.inicializarFormDetalle();
		}
		
		this.updateBorderResaltarControlesFormularioRubroEmplea();
		this.updateVisibilidadResaltarControlesFormularioRubroEmplea();
		this.updateHabilitarResaltarControlesFormularioRubroEmplea();
		
	}
	
	public void updateBorderResaltarControlesFormularioRubroEmplea() throws Exception {
		if(this.jInternalFrameDetalleFormRubroEmplea==null) { //if(!this.conCargarFormDetalle) {
			this.inicializarFormDetalle();
		}
		
	
		if(this.rubroempleaConstantesFunciones.resaltaridRubroEmplea!=null && this.jInternalFrameDetalleFormRubroEmplea!=null) {this.jInternalFrameDetalleFormRubroEmplea.jLabelidRubroEmplea.setBorder(this.rubroempleaConstantesFunciones.resaltaridRubroEmplea);}
		if(this.rubroempleaConstantesFunciones.resaltarid_empresaRubroEmplea!=null && this.jInternalFrameDetalleFormRubroEmplea!=null) {this.jInternalFrameDetalleFormRubroEmplea.jComboBoxid_empresaRubroEmplea.setBorder(this.rubroempleaConstantesFunciones.resaltarid_empresaRubroEmplea);}
		if(this.rubroempleaConstantesFunciones.resaltarid_tipo_calculoRubroEmplea!=null && this.jInternalFrameDetalleFormRubroEmplea!=null) {this.jInternalFrameDetalleFormRubroEmplea.jComboBoxid_tipo_calculoRubroEmplea.setBorder(this.rubroempleaConstantesFunciones.resaltarid_tipo_calculoRubroEmplea);}
		if(this.rubroempleaConstantesFunciones.resaltarid_tipo_rubro_empleaRubroEmplea!=null && this.jInternalFrameDetalleFormRubroEmplea!=null) {this.jInternalFrameDetalleFormRubroEmplea.jComboBoxid_tipo_rubro_empleaRubroEmplea.setBorder(this.rubroempleaConstantesFunciones.resaltarid_tipo_rubro_empleaRubroEmplea);}
		if(this.rubroempleaConstantesFunciones.resaltarid_tipo_grupo_rubro_empleaRubroEmplea!=null && this.jInternalFrameDetalleFormRubroEmplea!=null) {this.jInternalFrameDetalleFormRubroEmplea.jComboBoxid_tipo_grupo_rubro_empleaRubroEmplea.setBorder(this.rubroempleaConstantesFunciones.resaltarid_tipo_grupo_rubro_empleaRubroEmplea);}
		if(this.rubroempleaConstantesFunciones.resaltarcodigoRubroEmplea!=null && this.jInternalFrameDetalleFormRubroEmplea!=null) {this.jInternalFrameDetalleFormRubroEmplea.jTextFieldcodigoRubroEmplea.setBorder(this.rubroempleaConstantesFunciones.resaltarcodigoRubroEmplea);}
		if(this.rubroempleaConstantesFunciones.resaltarnombreRubroEmplea!=null && this.jInternalFrameDetalleFormRubroEmplea!=null) {this.jInternalFrameDetalleFormRubroEmplea.jTextAreanombreRubroEmplea.setBorder(this.rubroempleaConstantesFunciones.resaltarnombreRubroEmplea);}
		if(this.rubroempleaConstantesFunciones.resaltarformulaRubroEmplea!=null && this.jInternalFrameDetalleFormRubroEmplea!=null) {this.jInternalFrameDetalleFormRubroEmplea.jTextAreaformulaRubroEmplea.setBorder(this.rubroempleaConstantesFunciones.resaltarformulaRubroEmplea);}
		if(this.rubroempleaConstantesFunciones.resaltaraliasRubroEmplea!=null && this.jInternalFrameDetalleFormRubroEmplea!=null) {this.jInternalFrameDetalleFormRubroEmplea.jTextFieldaliasRubroEmplea.setBorder(this.rubroempleaConstantesFunciones.resaltaraliasRubroEmplea);}
		if(this.rubroempleaConstantesFunciones.resaltarsecuencialRubroEmplea!=null && this.jInternalFrameDetalleFormRubroEmplea!=null) {this.jInternalFrameDetalleFormRubroEmplea.jTextFieldsecuencialRubroEmplea.setBorder(this.rubroempleaConstantesFunciones.resaltarsecuencialRubroEmplea);}
		if(this.rubroempleaConstantesFunciones.resaltarpara_rol_pagosRubroEmplea!=null && this.jInternalFrameDetalleFormRubroEmplea!=null) {this.jInternalFrameDetalleFormRubroEmplea.jCheckBoxpara_rol_pagosRubroEmplea.setBorderPainted(true);this.jInternalFrameDetalleFormRubroEmplea.jCheckBoxpara_rol_pagosRubroEmplea.setBorder(this.rubroempleaConstantesFunciones.resaltarpara_rol_pagosRubroEmplea);}
		if(this.rubroempleaConstantesFunciones.resaltarpara_sueldoRubroEmplea!=null && this.jInternalFrameDetalleFormRubroEmplea!=null) {this.jInternalFrameDetalleFormRubroEmplea.jCheckBoxpara_sueldoRubroEmplea.setBorderPainted(true);this.jInternalFrameDetalleFormRubroEmplea.jCheckBoxpara_sueldoRubroEmplea.setBorder(this.rubroempleaConstantesFunciones.resaltarpara_sueldoRubroEmplea);}
		if(this.rubroempleaConstantesFunciones.resaltarpara_vacacionesRubroEmplea!=null && this.jInternalFrameDetalleFormRubroEmplea!=null) {this.jInternalFrameDetalleFormRubroEmplea.jCheckBoxpara_vacacionesRubroEmplea.setBorderPainted(true);this.jInternalFrameDetalleFormRubroEmplea.jCheckBoxpara_vacacionesRubroEmplea.setBorder(this.rubroempleaConstantesFunciones.resaltarpara_vacacionesRubroEmplea);}
		if(this.rubroempleaConstantesFunciones.resaltarpara_impuesto_rentaRubroEmplea!=null && this.jInternalFrameDetalleFormRubroEmplea!=null) {this.jInternalFrameDetalleFormRubroEmplea.jCheckBoxpara_impuesto_rentaRubroEmplea.setBorderPainted(true);this.jInternalFrameDetalleFormRubroEmplea.jCheckBoxpara_impuesto_rentaRubroEmplea.setBorder(this.rubroempleaConstantesFunciones.resaltarpara_impuesto_rentaRubroEmplea);}
		if(this.rubroempleaConstantesFunciones.resaltarpara_seguro_socialRubroEmplea!=null && this.jInternalFrameDetalleFormRubroEmplea!=null) {this.jInternalFrameDetalleFormRubroEmplea.jCheckBoxpara_seguro_socialRubroEmplea.setBorderPainted(true);this.jInternalFrameDetalleFormRubroEmplea.jCheckBoxpara_seguro_socialRubroEmplea.setBorder(this.rubroempleaConstantesFunciones.resaltarpara_seguro_socialRubroEmplea);}
		if(this.rubroempleaConstantesFunciones.resaltarpara_provisionesRubroEmplea!=null && this.jInternalFrameDetalleFormRubroEmplea!=null) {this.jInternalFrameDetalleFormRubroEmplea.jCheckBoxpara_provisionesRubroEmplea.setBorderPainted(true);this.jInternalFrameDetalleFormRubroEmplea.jCheckBoxpara_provisionesRubroEmplea.setBorder(this.rubroempleaConstantesFunciones.resaltarpara_provisionesRubroEmplea);}
		if(this.rubroempleaConstantesFunciones.resaltarpara_utilidadesRubroEmplea!=null && this.jInternalFrameDetalleFormRubroEmplea!=null) {this.jInternalFrameDetalleFormRubroEmplea.jCheckBoxpara_utilidadesRubroEmplea.setBorderPainted(true);this.jInternalFrameDetalleFormRubroEmplea.jCheckBoxpara_utilidadesRubroEmplea.setBorder(this.rubroempleaConstantesFunciones.resaltarpara_utilidadesRubroEmplea);}
		if(this.rubroempleaConstantesFunciones.resaltarpara_rubro_iessRubroEmplea!=null && this.jInternalFrameDetalleFormRubroEmplea!=null) {this.jInternalFrameDetalleFormRubroEmplea.jCheckBoxpara_rubro_iessRubroEmplea.setBorderPainted(true);this.jInternalFrameDetalleFormRubroEmplea.jCheckBoxpara_rubro_iessRubroEmplea.setBorder(this.rubroempleaConstantesFunciones.resaltarpara_rubro_iessRubroEmplea);}
		if(this.rubroempleaConstantesFunciones.resaltares_fondo_reservaRubroEmplea!=null && this.jInternalFrameDetalleFormRubroEmplea!=null) {this.jInternalFrameDetalleFormRubroEmplea.jCheckBoxes_fondo_reservaRubroEmplea.setBorderPainted(true);this.jInternalFrameDetalleFormRubroEmplea.jCheckBoxes_fondo_reservaRubroEmplea.setBorder(this.rubroempleaConstantesFunciones.resaltares_fondo_reservaRubroEmplea);}
		if(this.rubroempleaConstantesFunciones.resaltares_decimo_terceroRubroEmplea!=null && this.jInternalFrameDetalleFormRubroEmplea!=null) {this.jInternalFrameDetalleFormRubroEmplea.jCheckBoxes_decimo_terceroRubroEmplea.setBorderPainted(true);this.jInternalFrameDetalleFormRubroEmplea.jCheckBoxes_decimo_terceroRubroEmplea.setBorder(this.rubroempleaConstantesFunciones.resaltares_decimo_terceroRubroEmplea);}
		if(this.rubroempleaConstantesFunciones.resaltares_decimo_cuartoRubroEmplea!=null && this.jInternalFrameDetalleFormRubroEmplea!=null) {this.jInternalFrameDetalleFormRubroEmplea.jCheckBoxes_decimo_cuartoRubroEmplea.setBorderPainted(true);this.jInternalFrameDetalleFormRubroEmplea.jCheckBoxes_decimo_cuartoRubroEmplea.setBorder(this.rubroempleaConstantesFunciones.resaltares_decimo_cuartoRubroEmplea);}
	}
	
	public void updateVisibilidadResaltarControlesFormularioRubroEmplea() throws Exception {		
		if(this.jInternalFrameDetalleFormRubroEmplea==null) { //if(!this.conCargarFormDetalle) {
			this.inicializarFormDetalle();
		}
		
		if(this.jInternalFrameDetalleFormRubroEmplea!=null) {
	
		//this.jInternalFrameDetalleFormRubroEmplea.jLabelidRubroEmplea.setVisible(this.rubroempleaConstantesFunciones.mostraridRubroEmplea);
		this.jInternalFrameDetalleFormRubroEmplea.jPanelidRubroEmplea.setVisible(this.rubroempleaConstantesFunciones.mostraridRubroEmplea);
		//this.jInternalFrameDetalleFormRubroEmplea.jComboBoxid_empresaRubroEmplea.setVisible(this.rubroempleaConstantesFunciones.mostrarid_empresaRubroEmplea);
		this.jInternalFrameDetalleFormRubroEmplea.jPanelid_empresaRubroEmplea.setVisible(this.rubroempleaConstantesFunciones.mostrarid_empresaRubroEmplea);
		//this.jInternalFrameDetalleFormRubroEmplea.jComboBoxid_tipo_calculoRubroEmplea.setVisible(this.rubroempleaConstantesFunciones.mostrarid_tipo_calculoRubroEmplea);
		this.jInternalFrameDetalleFormRubroEmplea.jPanelid_tipo_calculoRubroEmplea.setVisible(this.rubroempleaConstantesFunciones.mostrarid_tipo_calculoRubroEmplea);
		//this.jInternalFrameDetalleFormRubroEmplea.jComboBoxid_tipo_rubro_empleaRubroEmplea.setVisible(this.rubroempleaConstantesFunciones.mostrarid_tipo_rubro_empleaRubroEmplea);
		this.jInternalFrameDetalleFormRubroEmplea.jPanelid_tipo_rubro_empleaRubroEmplea.setVisible(this.rubroempleaConstantesFunciones.mostrarid_tipo_rubro_empleaRubroEmplea);
		//this.jInternalFrameDetalleFormRubroEmplea.jComboBoxid_tipo_grupo_rubro_empleaRubroEmplea.setVisible(this.rubroempleaConstantesFunciones.mostrarid_tipo_grupo_rubro_empleaRubroEmplea);
		this.jInternalFrameDetalleFormRubroEmplea.jPanelid_tipo_grupo_rubro_empleaRubroEmplea.setVisible(this.rubroempleaConstantesFunciones.mostrarid_tipo_grupo_rubro_empleaRubroEmplea);
		//this.jInternalFrameDetalleFormRubroEmplea.jTextFieldcodigoRubroEmplea.setVisible(this.rubroempleaConstantesFunciones.mostrarcodigoRubroEmplea);
		this.jInternalFrameDetalleFormRubroEmplea.jPanelcodigoRubroEmplea.setVisible(this.rubroempleaConstantesFunciones.mostrarcodigoRubroEmplea);
		//this.jInternalFrameDetalleFormRubroEmplea.jTextAreanombreRubroEmplea.setVisible(this.rubroempleaConstantesFunciones.mostrarnombreRubroEmplea);
		this.jInternalFrameDetalleFormRubroEmplea.jPanelnombreRubroEmplea.setVisible(this.rubroempleaConstantesFunciones.mostrarnombreRubroEmplea);
		//this.jInternalFrameDetalleFormRubroEmplea.jTextAreaformulaRubroEmplea.setVisible(this.rubroempleaConstantesFunciones.mostrarformulaRubroEmplea);
		this.jInternalFrameDetalleFormRubroEmplea.jPanelformulaRubroEmplea.setVisible(this.rubroempleaConstantesFunciones.mostrarformulaRubroEmplea);
		//this.jInternalFrameDetalleFormRubroEmplea.jTextFieldaliasRubroEmplea.setVisible(this.rubroempleaConstantesFunciones.mostraraliasRubroEmplea);
		this.jInternalFrameDetalleFormRubroEmplea.jPanelaliasRubroEmplea.setVisible(this.rubroempleaConstantesFunciones.mostraraliasRubroEmplea);
		//this.jInternalFrameDetalleFormRubroEmplea.jTextFieldsecuencialRubroEmplea.setVisible(this.rubroempleaConstantesFunciones.mostrarsecuencialRubroEmplea);
		this.jInternalFrameDetalleFormRubroEmplea.jPanelsecuencialRubroEmplea.setVisible(this.rubroempleaConstantesFunciones.mostrarsecuencialRubroEmplea);
		//this.jInternalFrameDetalleFormRubroEmplea.jCheckBoxpara_rol_pagosRubroEmplea.setVisible(this.rubroempleaConstantesFunciones.mostrarpara_rol_pagosRubroEmplea);
		this.jInternalFrameDetalleFormRubroEmplea.jPanelpara_rol_pagosRubroEmplea.setVisible(this.rubroempleaConstantesFunciones.mostrarpara_rol_pagosRubroEmplea);
		//this.jInternalFrameDetalleFormRubroEmplea.jCheckBoxpara_sueldoRubroEmplea.setVisible(this.rubroempleaConstantesFunciones.mostrarpara_sueldoRubroEmplea);
		this.jInternalFrameDetalleFormRubroEmplea.jPanelpara_sueldoRubroEmplea.setVisible(this.rubroempleaConstantesFunciones.mostrarpara_sueldoRubroEmplea);
		//this.jInternalFrameDetalleFormRubroEmplea.jCheckBoxpara_vacacionesRubroEmplea.setVisible(this.rubroempleaConstantesFunciones.mostrarpara_vacacionesRubroEmplea);
		this.jInternalFrameDetalleFormRubroEmplea.jPanelpara_vacacionesRubroEmplea.setVisible(this.rubroempleaConstantesFunciones.mostrarpara_vacacionesRubroEmplea);
		//this.jInternalFrameDetalleFormRubroEmplea.jCheckBoxpara_impuesto_rentaRubroEmplea.setVisible(this.rubroempleaConstantesFunciones.mostrarpara_impuesto_rentaRubroEmplea);
		this.jInternalFrameDetalleFormRubroEmplea.jPanelpara_impuesto_rentaRubroEmplea.setVisible(this.rubroempleaConstantesFunciones.mostrarpara_impuesto_rentaRubroEmplea);
		//this.jInternalFrameDetalleFormRubroEmplea.jCheckBoxpara_seguro_socialRubroEmplea.setVisible(this.rubroempleaConstantesFunciones.mostrarpara_seguro_socialRubroEmplea);
		this.jInternalFrameDetalleFormRubroEmplea.jPanelpara_seguro_socialRubroEmplea.setVisible(this.rubroempleaConstantesFunciones.mostrarpara_seguro_socialRubroEmplea);
		//this.jInternalFrameDetalleFormRubroEmplea.jCheckBoxpara_provisionesRubroEmplea.setVisible(this.rubroempleaConstantesFunciones.mostrarpara_provisionesRubroEmplea);
		this.jInternalFrameDetalleFormRubroEmplea.jPanelpara_provisionesRubroEmplea.setVisible(this.rubroempleaConstantesFunciones.mostrarpara_provisionesRubroEmplea);
		//this.jInternalFrameDetalleFormRubroEmplea.jCheckBoxpara_utilidadesRubroEmplea.setVisible(this.rubroempleaConstantesFunciones.mostrarpara_utilidadesRubroEmplea);
		this.jInternalFrameDetalleFormRubroEmplea.jPanelpara_utilidadesRubroEmplea.setVisible(this.rubroempleaConstantesFunciones.mostrarpara_utilidadesRubroEmplea);
		//this.jInternalFrameDetalleFormRubroEmplea.jCheckBoxpara_rubro_iessRubroEmplea.setVisible(this.rubroempleaConstantesFunciones.mostrarpara_rubro_iessRubroEmplea);
		this.jInternalFrameDetalleFormRubroEmplea.jPanelpara_rubro_iessRubroEmplea.setVisible(this.rubroempleaConstantesFunciones.mostrarpara_rubro_iessRubroEmplea);
		//this.jInternalFrameDetalleFormRubroEmplea.jCheckBoxes_fondo_reservaRubroEmplea.setVisible(this.rubroempleaConstantesFunciones.mostrares_fondo_reservaRubroEmplea);
		this.jInternalFrameDetalleFormRubroEmplea.jPaneles_fondo_reservaRubroEmplea.setVisible(this.rubroempleaConstantesFunciones.mostrares_fondo_reservaRubroEmplea);
		//this.jInternalFrameDetalleFormRubroEmplea.jCheckBoxes_decimo_terceroRubroEmplea.setVisible(this.rubroempleaConstantesFunciones.mostrares_decimo_terceroRubroEmplea);
		this.jInternalFrameDetalleFormRubroEmplea.jPaneles_decimo_terceroRubroEmplea.setVisible(this.rubroempleaConstantesFunciones.mostrares_decimo_terceroRubroEmplea);
		//this.jInternalFrameDetalleFormRubroEmplea.jCheckBoxes_decimo_cuartoRubroEmplea.setVisible(this.rubroempleaConstantesFunciones.mostrares_decimo_cuartoRubroEmplea);
		this.jInternalFrameDetalleFormRubroEmplea.jPaneles_decimo_cuartoRubroEmplea.setVisible(this.rubroempleaConstantesFunciones.mostrares_decimo_cuartoRubroEmplea);
		}
	}
	
	public void updateHabilitarResaltarControlesFormularioRubroEmplea() throws Exception {
		if(this.jInternalFrameDetalleFormRubroEmplea==null) { //if(!this.conCargarFormDetalle) {
			this.inicializarFormDetalle();
		}
		
		if(this.jInternalFrameDetalleFormRubroEmplea!=null) {
	
		this.jInternalFrameDetalleFormRubroEmplea.jLabelidRubroEmplea.setEnabled(this.rubroempleaConstantesFunciones.activaridRubroEmplea);
		this.jInternalFrameDetalleFormRubroEmplea.jComboBoxid_empresaRubroEmplea.setEnabled(this.rubroempleaConstantesFunciones.activarid_empresaRubroEmplea);
		this.jInternalFrameDetalleFormRubroEmplea.jComboBoxid_tipo_calculoRubroEmplea.setEnabled(this.rubroempleaConstantesFunciones.activarid_tipo_calculoRubroEmplea);
		this.jInternalFrameDetalleFormRubroEmplea.jComboBoxid_tipo_rubro_empleaRubroEmplea.setEnabled(this.rubroempleaConstantesFunciones.activarid_tipo_rubro_empleaRubroEmplea);
		this.jInternalFrameDetalleFormRubroEmplea.jComboBoxid_tipo_grupo_rubro_empleaRubroEmplea.setEnabled(this.rubroempleaConstantesFunciones.activarid_tipo_grupo_rubro_empleaRubroEmplea);
		this.jInternalFrameDetalleFormRubroEmplea.jTextFieldcodigoRubroEmplea.setEnabled(this.rubroempleaConstantesFunciones.activarcodigoRubroEmplea);
		this.jInternalFrameDetalleFormRubroEmplea.jTextAreanombreRubroEmplea.setEnabled(this.rubroempleaConstantesFunciones.activarnombreRubroEmplea);
		this.jInternalFrameDetalleFormRubroEmplea.jTextAreaformulaRubroEmplea.setEnabled(this.rubroempleaConstantesFunciones.activarformulaRubroEmplea);
		this.jInternalFrameDetalleFormRubroEmplea.jTextFieldaliasRubroEmplea.setEnabled(this.rubroempleaConstantesFunciones.activaraliasRubroEmplea);
		this.jInternalFrameDetalleFormRubroEmplea.jTextFieldsecuencialRubroEmplea.setEnabled(this.rubroempleaConstantesFunciones.activarsecuencialRubroEmplea);
		this.jInternalFrameDetalleFormRubroEmplea.jCheckBoxpara_rol_pagosRubroEmplea.setEnabled(this.rubroempleaConstantesFunciones.activarpara_rol_pagosRubroEmplea);
		this.jInternalFrameDetalleFormRubroEmplea.jCheckBoxpara_sueldoRubroEmplea.setEnabled(this.rubroempleaConstantesFunciones.activarpara_sueldoRubroEmplea);
		this.jInternalFrameDetalleFormRubroEmplea.jCheckBoxpara_vacacionesRubroEmplea.setEnabled(this.rubroempleaConstantesFunciones.activarpara_vacacionesRubroEmplea);
		this.jInternalFrameDetalleFormRubroEmplea.jCheckBoxpara_impuesto_rentaRubroEmplea.setEnabled(this.rubroempleaConstantesFunciones.activarpara_impuesto_rentaRubroEmplea);
		this.jInternalFrameDetalleFormRubroEmplea.jCheckBoxpara_seguro_socialRubroEmplea.setEnabled(this.rubroempleaConstantesFunciones.activarpara_seguro_socialRubroEmplea);
		this.jInternalFrameDetalleFormRubroEmplea.jCheckBoxpara_provisionesRubroEmplea.setEnabled(this.rubroempleaConstantesFunciones.activarpara_provisionesRubroEmplea);
		this.jInternalFrameDetalleFormRubroEmplea.jCheckBoxpara_utilidadesRubroEmplea.setEnabled(this.rubroempleaConstantesFunciones.activarpara_utilidadesRubroEmplea);
		this.jInternalFrameDetalleFormRubroEmplea.jCheckBoxpara_rubro_iessRubroEmplea.setEnabled(this.rubroempleaConstantesFunciones.activarpara_rubro_iessRubroEmplea);
		this.jInternalFrameDetalleFormRubroEmplea.jCheckBoxes_fondo_reservaRubroEmplea.setEnabled(this.rubroempleaConstantesFunciones.activares_fondo_reservaRubroEmplea);
		this.jInternalFrameDetalleFormRubroEmplea.jCheckBoxes_decimo_terceroRubroEmplea.setEnabled(this.rubroempleaConstantesFunciones.activares_decimo_terceroRubroEmplea);
		this.jInternalFrameDetalleFormRubroEmplea.jCheckBoxes_decimo_cuartoRubroEmplea.setEnabled(this.rubroempleaConstantesFunciones.activares_decimo_cuartoRubroEmplea);
		}
	}
	
		
}