/*
*AVISO LEGAL
Â© Copyright
*Este programa esta protegido por la ley de derechos de autor.
*La reproduccion o distribucion ilicita de este programa o de cualquiera de
*sus partes esta penado por la ley con severas sanciones civiles y penales,
*y seran objeto de todas las sanciones legales que correspondan.

*Su contenido no puede copiarse para fines comerciales o de otras,
*ni puede mostrarse, incluso en una version modificada, en otros sitios Web.
Solo esta permitido colocar hipervinculos al sitio web.
*/
package com.bydan.erp.nomina.presentation.swing.jinternalframes;




import com.bydan.erp.seguridad.business.entity.Usuario;
import com.bydan.erp.seguridad.business.entity.ResumenUsuario;
import com.bydan.erp.seguridad.business.entity.Opcion;
import com.bydan.erp.seguridad.business.entity.PerfilOpcion;
import com.bydan.erp.seguridad.business.entity.PerfilCampo;
import com.bydan.erp.seguridad.business.entity.PerfilAccion;
import com.bydan.erp.seguridad.business.entity.ParametroGeneralSg;
import com.bydan.erp.seguridad.business.entity.ParametroGeneralUsuario;
import com.bydan.erp.seguridad.business.entity.Modulo;
import com.bydan.erp.seguridad.business.entity.Accion;

import com.bydan.erp.seguridad.util.SistemaParameterReturnGeneralAdditional;
import com.bydan.erp.seguridad.util.SistemaParameterReturnGeneral;


//import com.bydan.erp.seguridad.business.entity.PerfilAccion;


import com.bydan.erp.seguridad.util.SistemaConstantesFunciones;
import com.bydan.erp.seguridad.util.SistemaConstantesFuncionesAdditional;
import com.bydan.erp.seguridad.business.logic.SistemaLogicAdditional;

import com.bydan.erp.nomina.util.EvaluacionEmpleadoConstantesFunciones;
import com.bydan.erp.nomina.util.EvaluacionEmpleadoParameterReturnGeneral;
//import com.bydan.erp.nomina.util.EvaluacionEmpleadoParameterGeneral;
//import com.bydan.erp.nomina.presentation.report.source.EvaluacionEmpleadoBean;
import com.bydan.framework.erp.business.dataaccess.ConstantesSql;
import com.bydan.framework.erp.business.entity.Classe;
import com.bydan.framework.erp.business.entity.DatoGeneral;
import com.bydan.framework.erp.business.entity.GeneralEntityParameterGeneral;
import com.bydan.framework.erp.business.entity.OrderBy;
import com.bydan.framework.erp.business.entity.DatoGeneralMinimo;
import com.bydan.framework.erp.business.entity.GeneralEntity;
import com.bydan.framework.erp.business.entity.Mensajes;
import com.bydan.framework.erp.business.entity.GeneralEntityParameterReturnGeneral;
//import com.bydan.framework.erp.business.entity.MaintenanceType;
import com.bydan.framework.erp.util.MaintenanceType;
import com.bydan.framework.erp.util.FuncionesReporte;
import com.bydan.framework.erp.business.logic.DatosCliente;
import com.bydan.framework.erp.business.logic.Pagination;

import com.bydan.erp.nomina.presentation.swing.jinternalframes.auxiliar.*;
import com.bydan.framework.erp.presentation.desktop.swing.TablaGeneralTotalModel;
import com.bydan.framework.erp.presentation.desktop.swing.TablaGeneralOrderByModel;
import com.bydan.framework.erp.presentation.desktop.swing.DateConverter;
import com.bydan.framework.erp.presentation.desktop.swing.DateConverterFromDate;
import com.bydan.framework.erp.presentation.desktop.swing.DateRenderer;
import com.bydan.framework.erp.presentation.desktop.swing.DateEditorRenderer;
import com.bydan.framework.erp.presentation.desktop.swing.BooleanRenderer;
import com.bydan.framework.erp.presentation.desktop.swing.BooleanEditorRenderer;
import com.bydan.framework.erp.presentation.desktop.swing.TextFieldRenderer;
import com.bydan.framework.erp.presentation.desktop.swing.RunnableProceso;
import com.bydan.framework.erp.presentation.desktop.swing.*;
//import com.bydan.framework.erp.presentation.desktop.swing.TextFieldEditorRenderer;
import com.bydan.framework.erp.presentation.desktop.swing.HeaderRenderer;
import com.bydan.framework.erp.presentation.desktop.swing.JInternalFrameBase;
import com.bydan.framework.erp.presentation.desktop.swing.FuncionesSwing;
import com.bydan.framework.erp.presentation.desktop.swing.MainJFrame;
import com.bydan.framework.erp.resources.imagenes.AuxiliarImagenes;
import com.bydan.erp.nomina.resources.reportes.AuxiliarReportes;


import com.bydan.erp.nomina.util.*;
import com.bydan.erp.nomina.business.logic.*;

import com.bydan.erp.seguridad.business.logic.*;
import com.bydan.erp.contabilidad.business.logic.*;

//EJB

//PARAMETROS


//EJB PARAMETROS

import com.bydan.framework.erp.business.logic.*;
import com.bydan.framework.erp.util.*;

import com.bydan.erp.nomina.business.entity.*;
//import com.bydan.framework.erp.business.entity.ConexionBeanFace;
//import com.bydan.framework.erp.business.entity.Mensajes;


import com.bydan.erp.seguridad.presentation.swing.jinternalframes.*;
import com.bydan.erp.contabilidad.presentation.swing.jinternalframes.*;

import com.bydan.erp.seguridad.presentation.swing.jinternalframes.auxiliar.*;
import com.bydan.erp.contabilidad.presentation.swing.jinternalframes.auxiliar.*;






import javax.imageio.ImageIO;
import java.net.NetworkInterface;
import java.net.InterfaceAddress;
import java.net.InetAddress;
import javax.naming.InitialContext;
import java.lang.Long;
import java.util.Date;
import java.util.Enumeration;
import java.util.Iterator;
import java.util.Set;
import java.util.HashSet;
import java.util.List;
import java.util.ArrayList;
import java.io.Serializable;
import java.util.Hashtable;
import java.util.Collections;
import java.io.File;
import java.io.FileInputStream;
import java.io.BufferedWriter;
import java.io.FileWriter;
import java.io.FileOutputStream;
import java.io.InputStream;
import java.io.BufferedReader;
import java.io.FileReader;
import java.util.HashMap;
import java.util.Map;
import java.io.PrintWriter;
import java.sql.SQLException;

import javax.xml.parsers.DocumentBuilder;
import javax.xml.parsers.DocumentBuilderFactory;
import javax.xml.parsers.ParserConfigurationException;
import javax.xml.transform.stream.StreamSource;

import org.xml.sax.EntityResolver;
import org.xml.sax.InputSource;
import org.xml.sax.SAXException;

import org.w3c.dom.Document;
import org.w3c.dom.Document;
import org.w3c.dom.NodeList;
import org.w3c.dom.Node;
import org.w3c.dom.Element;

import org.apache.poi.hssf.usermodel.HSSFCell;
import org.apache.poi.hssf.usermodel.HSSFRow;
import org.apache.poi.hssf.usermodel.HSSFSheet;
import org.apache.poi.hssf.usermodel.HSSFWorkbook;
import org.apache.poi.xssf.usermodel.XSSFWorkbook;

import org.apache.poi.ss.usermodel.Workbook;
import org.apache.poi.ss.usermodel.Sheet;
import org.apache.poi.ss.usermodel.Row;
import org.apache.poi.ss.usermodel.Cell;
import org.apache.poi.ss.usermodel.CellStyle;
import org.apache.poi.ss.usermodel.IndexedColors;
import org.apache.poi.ss.util.CellRangeAddress;

import javax.xml.transform.Transformer;
import javax.xml.transform.TransformerFactory;
import javax.xml.transform.dom.DOMSource;
import javax.xml.transform.stream.StreamResult;


import net.sf.jasperreports.engine.JRException;
import net.sf.jasperreports.engine.JRRuntimeException;
import net.sf.jasperreports.engine.JasperFillManager;
import net.sf.jasperreports.engine.JasperPrint;
import net.sf.jasperreports.engine.JasperReport;
import net.sf.jasperreports.engine.util.JRLoader;
import net.sf.jasperreports.engine.export.JRHtmlExporter;
import net.sf.jasperreports.j2ee.servlets.BaseHttpServlet;
import net.sf.jasperreports.engine.JRExporterParameter;
import net.sf.jasperreports.engine.data.JRBeanArrayDataSource;
import net.sf.jasperreports.engine.data.JRBeanCollectionDataSource;
import net.sf.jasperreports.view.JasperViewer;

import org.apache.log4j.Logger;

import com.bydan.framework.erp.business.entity.Reporte;


//VALIDACION
import org.hibernate.validator.ClassValidator;
import org.hibernate.validator.InvalidValue;

import net.sf.jasperreports.engine.JREmptyDataSource;
import net.sf.jasperreports.engine.JasperCompileManager;
import net.sf.jasperreports.engine.JasperExportManager;
import net.sf.jasperreports.engine.JasperPrint;
import net.sf.jasperreports.engine.JasperPrintManager;
import net.sf.jasperreports.engine.JasperReport;
import net.sf.jasperreports.engine.JasperRunManager;
import net.sf.jasperreports.engine.export.JExcelApiExporter;
import net.sf.jasperreports.engine.export.JRCsvExporter;
import net.sf.jasperreports.engine.export.JRRtfExporter;
import net.sf.jasperreports.engine.export.JRXlsExporter;
import net.sf.jasperreports.engine.export.JRXlsExporterParameter;
import net.sf.jasperreports.engine.util.JRSaver;
import net.sf.jasperreports.engine.xml.JRXmlWriter;


import com.bydan.erp.nomina.presentation.web.jsf.sessionbean.*;

import java.util.EventObject;
import javax.swing.*;
import javax.swing.border.Border;
import javax.swing.border.TitledBorder;
import javax.swing.border.EmptyBorder;
import javax.swing.event.*;
import javax.swing.table.AbstractTableModel;
import javax.swing.table.DefaultTableCellRenderer;
import javax.swing.table.TableColumn;
import javax.swing.table.TableCellEditor;
import javax.swing.table.TableCellRenderer;
import java.awt.*;
import java.awt.event.*;

import org.jdesktop.beansbinding.Binding.SyncFailure;
import org.jdesktop.beansbinding.BindingListener;
import org.jdesktop.beansbinding.Bindings;
import org.jdesktop.beansbinding.BeanProperty;
import org.jdesktop.beansbinding.ELProperty;
import org.jdesktop.beansbinding.AutoBinding.UpdateStrategy;
import org.jdesktop.beansbinding.PropertyStateEvent;
import org.jdesktop.swingbinding.JComboBoxBinding;
import org.jdesktop.swingbinding.SwingBindings;
import java.beans.PropertyChangeListener;
import java.beans.PropertyChangeEvent;

import com.toedter.calendar.JDateChooser;


import com.bydan.erp.seguridad.business.entity.*;
import com.bydan.erp.contabilidad.business.entity.*;
import com.bydan.erp.seguridad.util.*;
import com.bydan.erp.contabilidad.util.*;
import com.bydan.erp.seguridad.presentation.web.jsf.sessionbean.*;
import com.bydan.erp.contabilidad.presentation.web.jsf.sessionbean.*;


@SuppressWarnings("unused")
public class EvaluacionEmpleadoBeanSwingJInternalFrame extends EvaluacionEmpleadoJInternalFrame implements WindowListener,WindowFocusListener
{				
	
	public static final long serialVersionUID = 1L;
	
	public static Logger logger = Logger.getLogger(EvaluacionEmpleadoBeanSwingJInternalFrame.class);  
	
	public static ClassValidator<EvaluacionEmpleado> evaluacionempleadoValidator = new ClassValidator<EvaluacionEmpleado>(EvaluacionEmpleado.class);
	
	public InvalidValue[] invalidValues=null;
		

	//Ejb Foreign Keys
	
	public EvaluacionEmpleado evaluacionempleado;	
	public EvaluacionEmpleado evaluacionempleadoAux;
	public EvaluacionEmpleado evaluacionempleadoAnterior;//USADO PARA MANEJAR FOCUS GAINED,LOST
	public EvaluacionEmpleado evaluacionempleadoTotales;
	public Long idEvaluacionEmpleadoActual;
	public Long iIdNuevoEvaluacionEmpleado=0L;
	public int rowIndexActual=0;
	
	
	
	
	public String sFinalQueryComboEmpresa="";

	public List<Empresa> empresasForeignKey;

	public List<Empresa> getempresasForeignKey() {
		return empresasForeignKey;
	}

	public void setempresasForeignKey(List<Empresa> empresasForeignKey) {
		this.empresasForeignKey = empresasForeignKey;
	}

	//OBJETO FK ACTUAL
	public Empresa empresaForeignKey;

	public Empresa getempresaForeignKey() {
		return empresaForeignKey;
	}

	public void setempresaForeignKey(Empresa empresaForeignKey) {
		this.empresaForeignKey = empresaForeignKey;
	}

	public String sFinalQueryComboSucursal="";

	public List<Sucursal> sucursalsForeignKey;

	public List<Sucursal> getsucursalsForeignKey() {
		return sucursalsForeignKey;
	}

	public void setsucursalsForeignKey(List<Sucursal> sucursalsForeignKey) {
		this.sucursalsForeignKey = sucursalsForeignKey;
	}

	//OBJETO FK ACTUAL
	public Sucursal sucursalForeignKey;

	public Sucursal getsucursalForeignKey() {
		return sucursalForeignKey;
	}

	public void setsucursalForeignKey(Sucursal sucursalForeignKey) {
		this.sucursalForeignKey = sucursalForeignKey;
	}

	public String sFinalQueryComboEjercicio="";

	public List<Ejercicio> ejerciciosForeignKey;

	public List<Ejercicio> getejerciciosForeignKey() {
		return ejerciciosForeignKey;
	}

	public void setejerciciosForeignKey(List<Ejercicio> ejerciciosForeignKey) {
		this.ejerciciosForeignKey = ejerciciosForeignKey;
	}

	//OBJETO FK ACTUAL
	public Ejercicio ejercicioForeignKey;

	public Ejercicio getejercicioForeignKey() {
		return ejercicioForeignKey;
	}

	public void setejercicioForeignKey(Ejercicio ejercicioForeignKey) {
		this.ejercicioForeignKey = ejercicioForeignKey;
	}

	public String sFinalQueryComboPeriodo="";

	public List<Periodo> periodosForeignKey;

	public List<Periodo> getperiodosForeignKey() {
		return periodosForeignKey;
	}

	public void setperiodosForeignKey(List<Periodo> periodosForeignKey) {
		this.periodosForeignKey = periodosForeignKey;
	}

	//OBJETO FK ACTUAL
	public Periodo periodoForeignKey;

	public Periodo getperiodoForeignKey() {
		return periodoForeignKey;
	}

	public void setperiodoForeignKey(Periodo periodoForeignKey) {
		this.periodoForeignKey = periodoForeignKey;
	}

	public String sFinalQueryComboEstructura="";

	public List<Estructura> estructurasForeignKey;

	public List<Estructura> getestructurasForeignKey() {
		return estructurasForeignKey;
	}

	public void setestructurasForeignKey(List<Estructura> estructurasForeignKey) {
		this.estructurasForeignKey = estructurasForeignKey;
	}

	//OBJETO FK ACTUAL
	public Estructura estructuraForeignKey;

	public Estructura getestructuraForeignKey() {
		return estructuraForeignKey;
	}

	public void setestructuraForeignKey(Estructura estructuraForeignKey) {
		this.estructuraForeignKey = estructuraForeignKey;
	}

	public String sFinalQueryComboEmpleado="";

	public List<Empleado> empleadosForeignKey;

	public List<Empleado> getempleadosForeignKey() {
		return empleadosForeignKey;
	}

	public void setempleadosForeignKey(List<Empleado> empleadosForeignKey) {
		this.empleadosForeignKey = empleadosForeignKey;
	}

	//OBJETO FK ACTUAL
	public Empleado empleadoForeignKey;

	public Empleado getempleadoForeignKey() {
		return empleadoForeignKey;
	}

	public void setempleadoForeignKey(Empleado empleadoForeignKey) {
		this.empleadoForeignKey = empleadoForeignKey;
	}

	public String sFinalQueryComboEmpleadoEvalua="";

	public List<Empleado> empleadoevaluasForeignKey;

	public List<Empleado> getempleadoevaluasForeignKey() {
		return empleadoevaluasForeignKey;
	}

	public void setempleadoevaluasForeignKey(List<Empleado> empleadoevaluasForeignKey) {
		this.empleadoevaluasForeignKey = empleadoevaluasForeignKey;
	}

	//OBJETO FK ACTUAL
	public Empleado empleadoevaluaForeignKey;

	public Empleado getempleadoevaluaForeignKey() {
		return empleadoevaluaForeignKey;
	}

	public void setempleadoevaluaForeignKey(Empleado empleadoevaluaForeignKey) {
		this.empleadoevaluaForeignKey = empleadoevaluaForeignKey;
	}

	public String sFinalQueryComboTipoEvaluacionEmpleado="";

	public List<TipoEvaluacionEmpleado> tipoevaluacionempleadosForeignKey;

	public List<TipoEvaluacionEmpleado> gettipoevaluacionempleadosForeignKey() {
		return tipoevaluacionempleadosForeignKey;
	}

	public void settipoevaluacionempleadosForeignKey(List<TipoEvaluacionEmpleado> tipoevaluacionempleadosForeignKey) {
		this.tipoevaluacionempleadosForeignKey = tipoevaluacionempleadosForeignKey;
	}

	//OBJETO FK ACTUAL
	public TipoEvaluacionEmpleado tipoevaluacionempleadoForeignKey;

	public TipoEvaluacionEmpleado gettipoevaluacionempleadoForeignKey() {
		return tipoevaluacionempleadoForeignKey;
	}

	public void settipoevaluacionempleadoForeignKey(TipoEvaluacionEmpleado tipoevaluacionempleadoForeignKey) {
		this.tipoevaluacionempleadoForeignKey = tipoevaluacionempleadoForeignKey;
	}

	public String sFinalQueryComboAnio="";

	public List<Anio> aniosForeignKey;

	public List<Anio> getaniosForeignKey() {
		return aniosForeignKey;
	}

	public void setaniosForeignKey(List<Anio> aniosForeignKey) {
		this.aniosForeignKey = aniosForeignKey;
	}

	//OBJETO FK ACTUAL
	public Anio anioForeignKey;

	public Anio getanioForeignKey() {
		return anioForeignKey;
	}

	public void setanioForeignKey(Anio anioForeignKey) {
		this.anioForeignKey = anioForeignKey;
	}

	public String sFinalQueryComboSemestre="";

	public List<Semestre> semestresForeignKey;

	public List<Semestre> getsemestresForeignKey() {
		return semestresForeignKey;
	}

	public void setsemestresForeignKey(List<Semestre> semestresForeignKey) {
		this.semestresForeignKey = semestresForeignKey;
	}

	//OBJETO FK ACTUAL
	public Semestre semestreForeignKey;

	public Semestre getsemestreForeignKey() {
		return semestreForeignKey;
	}

	public void setsemestreForeignKey(Semestre semestreForeignKey) {
		this.semestreForeignKey = semestreForeignKey;
	}

	public String sFinalQueryComboTrimestre="";

	public List<Trimestre> trimestresForeignKey;

	public List<Trimestre> gettrimestresForeignKey() {
		return trimestresForeignKey;
	}

	public void settrimestresForeignKey(List<Trimestre> trimestresForeignKey) {
		this.trimestresForeignKey = trimestresForeignKey;
	}

	//OBJETO FK ACTUAL
	public Trimestre trimestreForeignKey;

	public Trimestre gettrimestreForeignKey() {
		return trimestreForeignKey;
	}

	public void settrimestreForeignKey(Trimestre trimestreForeignKey) {
		this.trimestreForeignKey = trimestreForeignKey;
	}

	public String sFinalQueryComboBimestre="";

	public List<Bimestre> bimestresForeignKey;

	public List<Bimestre> getbimestresForeignKey() {
		return bimestresForeignKey;
	}

	public void setbimestresForeignKey(List<Bimestre> bimestresForeignKey) {
		this.bimestresForeignKey = bimestresForeignKey;
	}

	//OBJETO FK ACTUAL
	public Bimestre bimestreForeignKey;

	public Bimestre getbimestreForeignKey() {
		return bimestreForeignKey;
	}

	public void setbimestreForeignKey(Bimestre bimestreForeignKey) {
		this.bimestreForeignKey = bimestreForeignKey;
	}

	public String sFinalQueryComboMes="";

	public List<Mes> messForeignKey;

	public List<Mes> getmessForeignKey() {
		return messForeignKey;
	}

	public void setmessForeignKey(List<Mes> messForeignKey) {
		this.messForeignKey = messForeignKey;
	}

	//OBJETO FK ACTUAL
	public Mes mesForeignKey;

	public Mes getmesForeignKey() {
		return mesForeignKey;
	}

	public void setmesForeignKey(Mes mesForeignKey) {
		this.mesForeignKey = mesForeignKey;
	}

		
	
	
	
	
	

	public Boolean isTienePermisosCalificacionEmpleado=false;

	public Boolean getIsTienePermisosCalificacionEmpleado() {
		return isTienePermisosCalificacionEmpleado;
	}

	public void setIsTienePermisosCalificacionEmpleado(Boolean isTienePermisosCalificacionEmpleado) {
		this.isTienePermisosCalificacionEmpleado= isTienePermisosCalificacionEmpleado;
	}

	
	
	//FALTA:PARA BUSQUEDAS POR CAMPO EN FORMULARIO
	public String sFinalQueryGeneral="";
	public Boolean isEntroOnLoad=false;
	public Boolean isErrorGuardar=false;
	
	public Boolean isGuardarCambiosEnLote=false;
	public Boolean isCargarCombosDependencia=false;
	public Boolean isSeleccionarTodos=false;
	public Boolean isSeleccionados=false;
	public Boolean conGraficoReporte=false;
	
	public Boolean isPostAccionNuevo=false;
	public Boolean isPostAccionSinCerrar=false;
	public Boolean isPostAccionSinMensaje=false;
	
	
	public Boolean esControlTabla=false;
	
	public Boolean isPermisoTodoEvaluacionEmpleado;
	public Boolean isPermisoNuevoEvaluacionEmpleado;
	public Boolean isPermisoActualizarEvaluacionEmpleado;
	public Boolean isPermisoActualizarOriginalEvaluacionEmpleado;
	public Boolean isPermisoEliminarEvaluacionEmpleado;
	public Boolean isPermisoGuardarCambiosEvaluacionEmpleado;
	public Boolean isPermisoConsultaEvaluacionEmpleado;
	public Boolean isPermisoBusquedaEvaluacionEmpleado;
	public Boolean isPermisoReporteEvaluacionEmpleado;
	public Boolean isPermisoPaginacionMedioEvaluacionEmpleado;
	public Boolean isPermisoPaginacionAltoEvaluacionEmpleado;
	public Boolean isPermisoPaginacionTodoEvaluacionEmpleado;
	public Boolean isPermisoCopiarEvaluacionEmpleado;
	public Boolean isPermisoVerFormEvaluacionEmpleado;
	public Boolean isPermisoDuplicarEvaluacionEmpleado;
	public Boolean isPermisoOrdenEvaluacionEmpleado;
	
	
	public ArrayList<DatoGeneral> arrDatoGeneral;
	public ArrayList<String> arrDatoGeneralNo;
	ArrayList<Classe> classesActual=new ArrayList<Classe>();
	
	public List<Accion> accions;	
	public List<Accion> accionsFormulario;
	
	
	public ArrayList<DatoGeneralMinimo> arrDatoGeneralMinimos;
	
	public ArrayList<Reporte> tiposArchivosReportes;
	public ArrayList<Reporte> tiposArchivosReportesDinamico;
	public ArrayList<Reporte> tiposReportes;
	public ArrayList<Reporte> tiposReportesDinamico;
	public ArrayList<Reporte> tiposGraficosReportes;
	public ArrayList<Reporte> tiposPaginacion;
	public ArrayList<Reporte> tiposRelaciones;
	public ArrayList<Reporte> tiposAcciones;
	public ArrayList<Reporte> tiposAccionesFormulario;
	public ArrayList<Reporte> tiposSeleccionar;
	
	public ArrayList<Reporte> tiposColumnasSelect;
	public ArrayList<Reporte> tiposRelacionesSelect;
	
	
	public Integer iNumeroPaginacion;
	public Integer iNumeroPaginacionPagina;
	public Pagination pagination;
	public DatosCliente datosCliente;
	public DatosDeep datosDeep;
	public String sTipoArchivoReporte="";
	public String sTipoArchivoReporteDinamico="";
	public String sTipoReporte="";
	public String sTipoReporteDinamico="";
	public String sTipoGraficoReporte="";
	public String sTipoPaginacion="";
	public String sTipoRelacion="";
	public String sTipoAccion="";
	public String sTipoAccionFormulario="";
	public String sTipoSeleccionar="";	
	public String sDetalleReporte="";
	public Boolean isMostrarNumeroPaginacion;
	public String sTipoReporteExtra="";
	public String sValorCampoGeneral="";
	public Boolean esReporteDinamico=false;
	public Boolean esReporteAccionProceso=false;
	public Boolean esRecargarFks=false;
	public String sPathReporteDinamico="";
	
	public EvaluacionEmpleadoParameterReturnGeneral evaluacionempleadoReturnGeneral;
	public EvaluacionEmpleadoParameterReturnGeneral evaluacionempleadoParameterGeneral;
	
	

	public CalificacionEmpleadoLogic calificacionempleadoLogic=null;

	public CalificacionEmpleadoLogic getCalificacionEmpleadoLogic() {
		return calificacionempleadoLogic;
	}

	public void setCalificacionEmpleadoLogic(CalificacionEmpleadoLogic calificacionempleadoLogic) {
		this.calificacionempleadoLogic = calificacionempleadoLogic;
	}
 	
	public JasperPrint jasperPrint = null;
	
	public Long lIdUsuarioSesion=0L;				
	
	public Boolean isEsNuevoEvaluacionEmpleado=false;
	public Boolean esParaAccionDesdeFormularioEvaluacionEmpleado=false;
	public Boolean isEsMantenimientoRelacionesRelacionadoUnico=false;
	public Boolean isEsMantenimientoRelaciones=false;
	public Boolean isEsMantenimientoRelacionado=false;	
	public Boolean isContieneImagenes=false;
		
	//public Boolean conTotales=false; //Viene heredado de JInternalFrameBase
	//public Boolean esParaBusquedaForeignKey=false;
	
	
	protected EvaluacionEmpleadoSessionBeanAdditional evaluacionempleadoSessionBeanAdditional=null;
	
	public EvaluacionEmpleadoSessionBeanAdditional getEvaluacionEmpleadoSessionBeanAdditional() {
		return this.evaluacionempleadoSessionBeanAdditional;
	}
	
	public void setEvaluacionEmpleadoSessionBeanAdditional(EvaluacionEmpleadoSessionBeanAdditional evaluacionempleadoSessionBeanAdditional) {
		try {
			this.evaluacionempleadoSessionBeanAdditional=evaluacionempleadoSessionBeanAdditional;
		} catch(Exception e) {
			;
		}
	}
	
	
	
	
	protected EvaluacionEmpleadoBeanSwingJInternalFrameAdditional evaluacionempleadoBeanSwingJInternalFrameAdditional=null;
	//public class EvaluacionEmpleadoBeanSwingJInternalFrame
	
	public EvaluacionEmpleadoBeanSwingJInternalFrameAdditional getEvaluacionEmpleadoBeanSwingJInternalFrameAdditional() {
		return this.evaluacionempleadoBeanSwingJInternalFrameAdditional;
	}
	
	public void setEvaluacionEmpleadoBeanSwingJInternalFrameAdditional(EvaluacionEmpleadoBeanSwingJInternalFrameAdditional evaluacionempleadoBeanSwingJInternalFrameAdditional) {
		try {
			this.evaluacionempleadoBeanSwingJInternalFrameAdditional=evaluacionempleadoBeanSwingJInternalFrameAdditional;
		} catch(Exception e) {
			;
		}
	}
	
	
	
	
	//ESTA EN PADRE
	
	//public EvaluacionEmpleadoLogic evaluacionempleadoLogic;
	public SistemaLogicAdditional sistemaLogicAdditional;
	
	
	public EvaluacionEmpleado evaluacionempleadoBean;
	public EvaluacionEmpleadoConstantesFunciones evaluacionempleadoConstantesFunciones;
	//public EvaluacionEmpleadoParameterReturnGeneral evaluacionempleadoReturnGeneral;
	
	//FK
	
	public EmpresaLogic empresaLogic;
	public SucursalLogic sucursalLogic;
	public EjercicioLogic ejercicioLogic;
	public PeriodoLogic periodoLogic;
	public EstructuraLogic estructuraLogic;
	public EmpleadoLogic empleadoLogic;
	public EmpleadoLogic empleadoevaluaLogic;
	public TipoEvaluacionEmpleadoLogic tipoevaluacionempleadoLogic;
	public AnioLogic anioLogic;
	public SemestreLogic semestreLogic;
	public TrimestreLogic trimestreLogic;
	public BimestreLogic bimestreLogic;
	public MesLogic mesLogic;
	
	//PARAMETROS
	
	
	//public List<EvaluacionEmpleado> evaluacionempleados;	
	//public List<EvaluacionEmpleado> evaluacionempleadosEliminados;
	//public List<EvaluacionEmpleado> evaluacionempleadosAux;
	
	public String sAccionMantenimiento="";
	public String sAccionBusqueda="";
	public String sAccionAdicional="";
	public String sUltimaBusqueda="";
	
	public Mensaje mensaje;
	
	
	public String sVisibilidadTablaBusquedas="";					
	public String sVisibilidadTablaElementos="";	
	public String sVisibilidadTablaAcciones="";			
	
	public Boolean isVisibilidadCeldaNuevoEvaluacionEmpleado=false;
	public Boolean isVisibilidadCeldaDuplicarEvaluacionEmpleado=true;
	public Boolean isVisibilidadCeldaCopiarEvaluacionEmpleado=true;
	public Boolean isVisibilidadCeldaVerFormEvaluacionEmpleado=true;
	public Boolean isVisibilidadCeldaOrdenEvaluacionEmpleado=true;
	public Boolean isVisibilidadCeldaNuevoRelacionesEvaluacionEmpleado=false;
	public Boolean isVisibilidadCeldaModificarEvaluacionEmpleado=false;
	public Boolean isVisibilidadCeldaActualizarEvaluacionEmpleado=false;
	public Boolean isVisibilidadCeldaEliminarEvaluacionEmpleado=false;
	public Boolean isVisibilidadCeldaCancelarEvaluacionEmpleado=false;
	public Boolean isVisibilidadCeldaGuardarEvaluacionEmpleado=false;	
	public Boolean isVisibilidadCeldaGuardarCambiosEvaluacionEmpleado=false;	
	
	
	public Boolean isVisibilidadFK_IdAnio=false;
	public Boolean isVisibilidadFK_IdBimestre=false;
	public Boolean isVisibilidadFK_IdEjercicio=false;
	public Boolean isVisibilidadFK_IdEmpleado=false;
	public Boolean isVisibilidadFK_IdEmpleadoEvalua=false;
	public Boolean isVisibilidadFK_IdEmpresa=false;
	public Boolean isVisibilidadFK_IdEstructura=false;
	public Boolean isVisibilidadFK_IdMes=false;
	public Boolean isVisibilidadFK_IdPeriodo=false;
	public Boolean isVisibilidadFK_IdSemestre=false;
	public Boolean isVisibilidadFK_IdSucursal=false;
	public Boolean isVisibilidadFK_IdTipoEvaluacionEmpleado=false;
	public Boolean isVisibilidadFK_IdTrimestre=false;
	
	public Long getiIdNuevoEvaluacionEmpleado() {
		return this.iIdNuevoEvaluacionEmpleado;
	}

	public void setiIdNuevoEvaluacionEmpleado(Long iIdNuevoEvaluacionEmpleado) {
		this.iIdNuevoEvaluacionEmpleado = iIdNuevoEvaluacionEmpleado;
	}
	
	public Long getidEvaluacionEmpleadoActual() {
		return this.idEvaluacionEmpleadoActual;
	}

	public void setidEvaluacionEmpleadoActual(Long idEvaluacionEmpleadoActual) {
		this.idEvaluacionEmpleadoActual = idEvaluacionEmpleadoActual;
	}
	
	public int getrowIndexActual() {
		return this.rowIndexActual;
	}

	public void setrowIndexActual(int rowIndexActual) {
		this.rowIndexActual=rowIndexActual;
	}
	
	
	public EvaluacionEmpleado getevaluacionempleado() {
		return this.evaluacionempleado;
	}

	public void setevaluacionempleado(EvaluacionEmpleado evaluacionempleado) {
		this.evaluacionempleado = evaluacionempleado;
	}
	
	public EvaluacionEmpleado getevaluacionempleadoAux() {
		return this.evaluacionempleadoAux;
	}

	public void setevaluacionempleadoAux(EvaluacionEmpleado evaluacionempleadoAux) {
		this.evaluacionempleadoAux = evaluacionempleadoAux;
	}				
	
	public EvaluacionEmpleado getevaluacionempleadoAnterior() {
		return this.evaluacionempleadoAnterior;
	}

	public void setevaluacionempleadoAnterior(EvaluacionEmpleado evaluacionempleadoAnterior) {
		this.evaluacionempleadoAnterior = evaluacionempleadoAnterior;
	}	
	
	public EvaluacionEmpleado getevaluacionempleadoTotales() {
		return this.evaluacionempleadoTotales;
	}

	public void setevaluacionempleadoTotales(EvaluacionEmpleado evaluacionempleadoTotales) {
		this.evaluacionempleadoTotales = evaluacionempleadoTotales;
	}	
	
	public EvaluacionEmpleado getevaluacionempleadoBean() {
		return this.evaluacionempleadoBean;
	}

	public void setevaluacionempleadoBean(EvaluacionEmpleado evaluacionempleadoBean) {
		this.evaluacionempleadoBean = evaluacionempleadoBean;
	}	
	
	public EvaluacionEmpleadoParameterReturnGeneral getevaluacionempleadoReturnGeneral() {
		return this.evaluacionempleadoReturnGeneral;
	}

	public void setevaluacionempleadoReturnGeneral(EvaluacionEmpleadoParameterReturnGeneral evaluacionempleadoReturnGeneral) {
		this.evaluacionempleadoReturnGeneral = evaluacionempleadoReturnGeneral;
	}	
	
	
	public Long id_anioFK_IdAnio=null;

	public Long getid_anioFK_IdAnio() {
		return this.id_anioFK_IdAnio;
	}

	public void setid_anioFK_IdAnio(Long id_anioFK_IdAnio) {
		this.id_anioFK_IdAnio = id_anioFK_IdAnio;
	}

	public Long id_bimestreFK_IdBimestre=-1L;

	public Long getid_bimestreFK_IdBimestre() {
		return this.id_bimestreFK_IdBimestre;
	}

	public void setid_bimestreFK_IdBimestre(Long id_bimestreFK_IdBimestre) {
		this.id_bimestreFK_IdBimestre = id_bimestreFK_IdBimestre;
	}

	public Long id_ejercicioFK_IdEjercicio=-1L;

	public Long getid_ejercicioFK_IdEjercicio() {
		return this.id_ejercicioFK_IdEjercicio;
	}

	public void setid_ejercicioFK_IdEjercicio(Long id_ejercicioFK_IdEjercicio) {
		this.id_ejercicioFK_IdEjercicio = id_ejercicioFK_IdEjercicio;
	}

	public Long id_empleadoFK_IdEmpleado=-1L;

	public Long getid_empleadoFK_IdEmpleado() {
		return this.id_empleadoFK_IdEmpleado;
	}

	public void setid_empleadoFK_IdEmpleado(Long id_empleadoFK_IdEmpleado) {
		this.id_empleadoFK_IdEmpleado = id_empleadoFK_IdEmpleado;
	}

	public Long id_empleado_evaluaFK_IdEmpleadoEvalua=-1L;

	public Long getid_empleado_evaluaFK_IdEmpleadoEvalua() {
		return this.id_empleado_evaluaFK_IdEmpleadoEvalua;
	}

	public void setid_empleado_evaluaFK_IdEmpleadoEvalua(Long id_empleado_evaluaFK_IdEmpleadoEvalua) {
		this.id_empleado_evaluaFK_IdEmpleadoEvalua = id_empleado_evaluaFK_IdEmpleadoEvalua;
	}

	public Long id_empresaFK_IdEmpresa=-1L;

	public Long getid_empresaFK_IdEmpresa() {
		return this.id_empresaFK_IdEmpresa;
	}

	public void setid_empresaFK_IdEmpresa(Long id_empresaFK_IdEmpresa) {
		this.id_empresaFK_IdEmpresa = id_empresaFK_IdEmpresa;
	}

	public Long id_estructuraFK_IdEstructura=-1L;

	public Long getid_estructuraFK_IdEstructura() {
		return this.id_estructuraFK_IdEstructura;
	}

	public void setid_estructuraFK_IdEstructura(Long id_estructuraFK_IdEstructura) {
		this.id_estructuraFK_IdEstructura = id_estructuraFK_IdEstructura;
	}

	public Long id_mesFK_IdMes=null;

	public Long getid_mesFK_IdMes() {
		return this.id_mesFK_IdMes;
	}

	public void setid_mesFK_IdMes(Long id_mesFK_IdMes) {
		this.id_mesFK_IdMes = id_mesFK_IdMes;
	}

	public Long id_periodoFK_IdPeriodo=-1L;

	public Long getid_periodoFK_IdPeriodo() {
		return this.id_periodoFK_IdPeriodo;
	}

	public void setid_periodoFK_IdPeriodo(Long id_periodoFK_IdPeriodo) {
		this.id_periodoFK_IdPeriodo = id_periodoFK_IdPeriodo;
	}

	public Long id_semestreFK_IdSemestre=-1L;

	public Long getid_semestreFK_IdSemestre() {
		return this.id_semestreFK_IdSemestre;
	}

	public void setid_semestreFK_IdSemestre(Long id_semestreFK_IdSemestre) {
		this.id_semestreFK_IdSemestre = id_semestreFK_IdSemestre;
	}

	public Long id_sucursalFK_IdSucursal=-1L;

	public Long getid_sucursalFK_IdSucursal() {
		return this.id_sucursalFK_IdSucursal;
	}

	public void setid_sucursalFK_IdSucursal(Long id_sucursalFK_IdSucursal) {
		this.id_sucursalFK_IdSucursal = id_sucursalFK_IdSucursal;
	}

	public Long id_tipo_evaluacion_empleadoFK_IdTipoEvaluacionEmpleado=-1L;

	public Long getid_tipo_evaluacion_empleadoFK_IdTipoEvaluacionEmpleado() {
		return this.id_tipo_evaluacion_empleadoFK_IdTipoEvaluacionEmpleado;
	}

	public void setid_tipo_evaluacion_empleadoFK_IdTipoEvaluacionEmpleado(Long id_tipo_evaluacion_empleadoFK_IdTipoEvaluacionEmpleado) {
		this.id_tipo_evaluacion_empleadoFK_IdTipoEvaluacionEmpleado = id_tipo_evaluacion_empleadoFK_IdTipoEvaluacionEmpleado;
	}

	public Long id_trimestreFK_IdTrimestre=-1L;

	public Long getid_trimestreFK_IdTrimestre() {
		return this.id_trimestreFK_IdTrimestre;
	}

	public void setid_trimestreFK_IdTrimestre(Long id_trimestreFK_IdTrimestre) {
		this.id_trimestreFK_IdTrimestre = id_trimestreFK_IdTrimestre;
	}

		
	
	//ELEMENTOS TABLAS PARAMETOS
	
	
	
	
	
	
	//ELEMENTOS TABLAS PARAMETOS_FIN
	
	
	public EvaluacionEmpleadoLogic getEvaluacionEmpleadoLogic()	{		
		return evaluacionempleadoLogic;
	}

	public void setEvaluacionEmpleadoLogic(EvaluacionEmpleadoLogic evaluacionempleadoLogic) {
		this.evaluacionempleadoLogic = evaluacionempleadoLogic;
	}
	
	
	public void setsFinalQueryGeneral(String sFinalQueryGeneral) {
		this.sFinalQueryGeneral=sFinalQueryGeneral;
	}
	
	public String getsFinalQueryGeneral() {
		return this.sFinalQueryGeneral;
	}
		
	public Boolean getIsGuardarCambiosEnLote() {
		return isGuardarCambiosEnLote;
	}

	public void setIsGuardarCambiosEnLote(Boolean isGuardarCambiosEnLote) {
		this.isGuardarCambiosEnLote = isGuardarCambiosEnLote;
	}
	
	public Boolean getIsCargarCombosDependencia() {
		return isCargarCombosDependencia;
	}

	public void setIsCargarCombosDependencia(Boolean isCargarCombosDependencia) {
		this.isCargarCombosDependencia = isCargarCombosDependencia;
	}
	
	public Boolean getIsEsNuevoEvaluacionEmpleado() {
		return isEsNuevoEvaluacionEmpleado;
	}

	public void setIsEsNuevoEvaluacionEmpleado(Boolean isEsNuevoEvaluacionEmpleado) {
		this.isEsNuevoEvaluacionEmpleado = isEsNuevoEvaluacionEmpleado;
	}

	public Boolean getEsParaAccionDesdeFormularioEvaluacionEmpleado() {
		return esParaAccionDesdeFormularioEvaluacionEmpleado;
	}
	
	public void setEsParaAccionDesdeFormularioEvaluacionEmpleado(Boolean esParaAccionDesdeFormularioEvaluacionEmpleado) {
		this.esParaAccionDesdeFormularioEvaluacionEmpleado = esParaAccionDesdeFormularioEvaluacionEmpleado;
	}
	
	public Boolean getIsEsMantenimientoRelacionesRelacionadoUnico() {
		return isEsMantenimientoRelacionesRelacionadoUnico;
	}

	public void setIsEsMantenimientoRelacionesRelacionadoUnico(Boolean isEsMantenimientoRelacionesRelacionadoUnico) {
		this.isEsMantenimientoRelacionesRelacionadoUnico = isEsMantenimientoRelacionesRelacionadoUnico;
	}

	public Boolean getIsEsMantenimientoRelaciones() {
		return isEsMantenimientoRelaciones;
	}

	public void setIsEsMantenimientoRelaciones(Boolean isEsMantenimientoRelaciones) {
		this.isEsMantenimientoRelaciones = isEsMantenimientoRelaciones;
	}

	public Boolean getIsEsMantenimientoRelacionado() {
		return isEsMantenimientoRelacionado;
	}

	public void setIsEsMantenimientoRelacionado(Boolean isEsMantenimientoRelacionado) {
		this.isEsMantenimientoRelacionado = isEsMantenimientoRelacionado;
	}

	public Boolean getesParaBusquedaForeignKey() {
		return esParaBusquedaForeignKey;
	}

	public void setesParaBusquedaForeignKey(Boolean esParaBusquedaForeignKey) {
		this.esParaBusquedaForeignKey = esParaBusquedaForeignKey;
	}

	public Boolean getIsContieneImagenes() {
		return isContieneImagenes;
	}

	public void setIsContieneImagenes(Boolean isContieneImagenes) {
		this.isContieneImagenes = isContieneImagenes;
	}		
	
	
	public void cargarCombosEmpresasForeignKeyLista(String sFinalQuery)throws Exception
	{
		try
		{
			this.empresasForeignKey=new ArrayList<Empresa>();

			ArrayList<Classe> clases=new ArrayList<Classe>();
			ArrayList<String> arrClasses=new ArrayList<String>();
			Classe classe=new Classe();
			DatosDeep datosDeep=new DatosDeep(false,DeepLoadType.INCLUDE,clases,"");

			EmpresaLogic empresaLogic=new EmpresaLogic();

			//empresaLogic.getEmpresaDataAccess().setIsForForeingKeyData(true);

			if(this.evaluacionempleadoSessionBean==null) {
				this.evaluacionempleadoSessionBean=new EvaluacionEmpleadoSessionBean();
			}

			if(!this.evaluacionempleadoSessionBean.getisBusquedaDesdeForeignKeySesionEmpresa()) {
				//ARCHITECTURE
				if(Constantes.ISUSAEJBLOGICLAYER) {
					//empresaLogic.getEmpresaDataAccess().setIsForForeingKeyData(true);

					empresaLogic.getTodosEmpresasWithConnection(sFinalQuery,new Pagination());

					this.empresasForeignKey=empresaLogic.getEmpresas();

				} else if(Constantes.ISUSAEJBREMOTE) {

				} else if(Constantes.ISUSAEJBHOME) {
				}


				//ARCHITECTURE
			} else {
				if(!this.conCargarMinimo) {
					this.setVisibilidadBusquedasParaEmpresa(true);
				}
				//ARCHITECTURE

				if(Constantes.ISUSAEJBLOGICLAYER) {
					empresaLogic.getEntityWithConnection(evaluacionempleadoSessionBean.getlidEmpresaActual());
					this.empresasForeignKey.add(empresaLogic.getEmpresa());
				} else if(Constantes.ISUSAEJBREMOTE) {
				} else if(Constantes.ISUSAEJBHOME) {
				}
				//ARCHITECTURE
			}
		}
		catch(Exception e)
		{
			throw e;
		}
	}

	public void cargarCombosSucursalsForeignKeyLista(String sFinalQuery)throws Exception
	{
		try
		{
			this.sucursalsForeignKey=new ArrayList<Sucursal>();

			ArrayList<Classe> clases=new ArrayList<Classe>();
			ArrayList<String> arrClasses=new ArrayList<String>();
			Classe classe=new Classe();
			DatosDeep datosDeep=new DatosDeep(false,DeepLoadType.INCLUDE,clases,"");

			SucursalLogic sucursalLogic=new SucursalLogic();

			//sucursalLogic.getSucursalDataAccess().setIsForForeingKeyData(true);

			if(this.evaluacionempleadoSessionBean==null) {
				this.evaluacionempleadoSessionBean=new EvaluacionEmpleadoSessionBean();
			}

			if(!this.evaluacionempleadoSessionBean.getisBusquedaDesdeForeignKeySesionSucursal()) {
				//ARCHITECTURE
				if(Constantes.ISUSAEJBLOGICLAYER) {
					//sucursalLogic.getSucursalDataAccess().setIsForForeingKeyData(true);

					sucursalLogic.getTodosSucursalsWithConnection(sFinalQuery,new Pagination());

					this.sucursalsForeignKey=sucursalLogic.getSucursals();

				} else if(Constantes.ISUSAEJBREMOTE) {

				} else if(Constantes.ISUSAEJBHOME) {
				}


				//ARCHITECTURE
			} else {
				if(!this.conCargarMinimo) {
					this.setVisibilidadBusquedasParaSucursal(true);
				}
				//ARCHITECTURE

				if(Constantes.ISUSAEJBLOGICLAYER) {
					sucursalLogic.getEntityWithConnection(evaluacionempleadoSessionBean.getlidSucursalActual());
					this.sucursalsForeignKey.add(sucursalLogic.getSucursal());
				} else if(Constantes.ISUSAEJBREMOTE) {
				} else if(Constantes.ISUSAEJBHOME) {
				}
				//ARCHITECTURE
			}
		}
		catch(Exception e)
		{
			throw e;
		}
	}

	public void cargarCombosEjerciciosForeignKeyLista(String sFinalQuery)throws Exception
	{
		try
		{
			this.ejerciciosForeignKey=new ArrayList<Ejercicio>();

			ArrayList<Classe> clases=new ArrayList<Classe>();
			ArrayList<String> arrClasses=new ArrayList<String>();
			Classe classe=new Classe();
			DatosDeep datosDeep=new DatosDeep(false,DeepLoadType.INCLUDE,clases,"");

			EjercicioLogic ejercicioLogic=new EjercicioLogic();

			//ejercicioLogic.getEjercicioDataAccess().setIsForForeingKeyData(true);

			if(this.evaluacionempleadoSessionBean==null) {
				this.evaluacionempleadoSessionBean=new EvaluacionEmpleadoSessionBean();
			}

			if(!this.evaluacionempleadoSessionBean.getisBusquedaDesdeForeignKeySesionEjercicio()) {
				//ARCHITECTURE
				if(Constantes.ISUSAEJBLOGICLAYER) {
					//ejercicioLogic.getEjercicioDataAccess().setIsForForeingKeyData(true);

					ejercicioLogic.getTodosEjerciciosWithConnection(sFinalQuery,new Pagination());

					this.ejerciciosForeignKey=ejercicioLogic.getEjercicios();

				} else if(Constantes.ISUSAEJBREMOTE) {

				} else if(Constantes.ISUSAEJBHOME) {
				}


				//ARCHITECTURE
			} else {
				if(!this.conCargarMinimo) {
					this.setVisibilidadBusquedasParaEjercicio(true);
				}
				//ARCHITECTURE

				if(Constantes.ISUSAEJBLOGICLAYER) {
					ejercicioLogic.getEntityWithConnection(evaluacionempleadoSessionBean.getlidEjercicioActual());
					this.ejerciciosForeignKey.add(ejercicioLogic.getEjercicio());
				} else if(Constantes.ISUSAEJBREMOTE) {
				} else if(Constantes.ISUSAEJBHOME) {
				}
				//ARCHITECTURE
			}
		}
		catch(Exception e)
		{
			throw e;
		}
	}

	public void cargarCombosPeriodosForeignKeyLista(String sFinalQuery)throws Exception
	{
		try
		{
			this.periodosForeignKey=new ArrayList<Periodo>();

			ArrayList<Classe> clases=new ArrayList<Classe>();
			ArrayList<String> arrClasses=new ArrayList<String>();
			Classe classe=new Classe();
			DatosDeep datosDeep=new DatosDeep(false,DeepLoadType.INCLUDE,clases,"");

			PeriodoLogic periodoLogic=new PeriodoLogic();

			//periodoLogic.getPeriodoDataAccess().setIsForForeingKeyData(true);

			if(this.evaluacionempleadoSessionBean==null) {
				this.evaluacionempleadoSessionBean=new EvaluacionEmpleadoSessionBean();
			}

			if(!this.evaluacionempleadoSessionBean.getisBusquedaDesdeForeignKeySesionPeriodo()) {
				//ARCHITECTURE
				if(Constantes.ISUSAEJBLOGICLAYER) {
					//periodoLogic.getPeriodoDataAccess().setIsForForeingKeyData(true);

					periodoLogic.getTodosPeriodosWithConnection(sFinalQuery,new Pagination());

					this.periodosForeignKey=periodoLogic.getPeriodos();

				} else if(Constantes.ISUSAEJBREMOTE) {

				} else if(Constantes.ISUSAEJBHOME) {
				}


				//ARCHITECTURE
			} else {
				if(!this.conCargarMinimo) {
					this.setVisibilidadBusquedasParaPeriodo(true);
				}
				//ARCHITECTURE

				if(Constantes.ISUSAEJBLOGICLAYER) {
					periodoLogic.getEntityWithConnection(evaluacionempleadoSessionBean.getlidPeriodoActual());
					this.periodosForeignKey.add(periodoLogic.getPeriodo());
				} else if(Constantes.ISUSAEJBREMOTE) {
				} else if(Constantes.ISUSAEJBHOME) {
				}
				//ARCHITECTURE
			}
		}
		catch(Exception e)
		{
			throw e;
		}
	}

	public void cargarCombosEstructurasForeignKeyLista(String sFinalQuery)throws Exception
	{
		try
		{
			this.estructurasForeignKey=new ArrayList<Estructura>();

			ArrayList<Classe> clases=new ArrayList<Classe>();
			ArrayList<String> arrClasses=new ArrayList<String>();
			Classe classe=new Classe();
			DatosDeep datosDeep=new DatosDeep(false,DeepLoadType.INCLUDE,clases,"");

			EstructuraLogic estructuraLogic=new EstructuraLogic();

			//estructuraLogic.getEstructuraDataAccess().setIsForForeingKeyData(true);

			if(this.evaluacionempleadoSessionBean==null) {
				this.evaluacionempleadoSessionBean=new EvaluacionEmpleadoSessionBean();
			}

			if(!this.evaluacionempleadoSessionBean.getisBusquedaDesdeForeignKeySesionEstructura()) {
				//ARCHITECTURE
				if(Constantes.ISUSAEJBLOGICLAYER) {
					//estructuraLogic.getEstructuraDataAccess().setIsForForeingKeyData(true);

					estructuraLogic.getTodosEstructurasWithConnection(sFinalQuery,new Pagination());

					this.estructurasForeignKey=estructuraLogic.getEstructuras();

				} else if(Constantes.ISUSAEJBREMOTE) {

				} else if(Constantes.ISUSAEJBHOME) {
				}


				//ARCHITECTURE
			} else {
				if(!this.conCargarMinimo) {
					this.setVisibilidadBusquedasParaEstructura(true);
				}
				//ARCHITECTURE

				if(Constantes.ISUSAEJBLOGICLAYER) {
					estructuraLogic.getEntityWithConnection(evaluacionempleadoSessionBean.getlidEstructuraActual());
					this.estructurasForeignKey.add(estructuraLogic.getEstructura());
				} else if(Constantes.ISUSAEJBREMOTE) {
				} else if(Constantes.ISUSAEJBHOME) {
				}
				//ARCHITECTURE
			}
		}
		catch(Exception e)
		{
			throw e;
		}
	}

	public void cargarCombosEmpleadosForeignKeyLista(String sFinalQuery)throws Exception
	{
		try
		{
			this.empleadosForeignKey=new ArrayList<Empleado>();

			ArrayList<Classe> clases=new ArrayList<Classe>();
			ArrayList<String> arrClasses=new ArrayList<String>();
			Classe classe=new Classe();
			DatosDeep datosDeep=new DatosDeep(false,DeepLoadType.INCLUDE,clases,"");

			EmpleadoLogic empleadoLogic=new EmpleadoLogic();

			//empleadoLogic.getEmpleadoDataAccess().setIsForForeingKeyData(true);

			if(this.evaluacionempleadoSessionBean==null) {
				this.evaluacionempleadoSessionBean=new EvaluacionEmpleadoSessionBean();
			}

			if(!this.evaluacionempleadoSessionBean.getisBusquedaDesdeForeignKeySesionEmpleado()) {
				//ARCHITECTURE
				if(Constantes.ISUSAEJBLOGICLAYER) {
					//empleadoLogic.getEmpleadoDataAccess().setIsForForeingKeyData(true);

					empleadoLogic.getTodosEmpleadosWithConnection(sFinalQuery,new Pagination());

					this.empleadosForeignKey=empleadoLogic.getEmpleados();

				} else if(Constantes.ISUSAEJBREMOTE) {

				} else if(Constantes.ISUSAEJBHOME) {
				}


				//ARCHITECTURE
			} else {
				if(!this.conCargarMinimo) {
					this.setVisibilidadBusquedasParaEmpleado(true);
				}
				//ARCHITECTURE

				if(Constantes.ISUSAEJBLOGICLAYER) {
					empleadoLogic.getEntityWithConnection(evaluacionempleadoSessionBean.getlidEmpleadoActual());
					this.empleadosForeignKey.add(empleadoLogic.getEmpleado());
				} else if(Constantes.ISUSAEJBREMOTE) {
				} else if(Constantes.ISUSAEJBHOME) {
				}
				//ARCHITECTURE
			}
		}
		catch(Exception e)
		{
			throw e;
		}
	}

	public void cargarCombosEmpleadoEvaluasForeignKeyLista(String sFinalQuery)throws Exception
	{
		try
		{
			this.empleadoevaluasForeignKey=new ArrayList<Empleado>();

			ArrayList<Classe> clases=new ArrayList<Classe>();
			ArrayList<String> arrClasses=new ArrayList<String>();
			Classe classe=new Classe();
			DatosDeep datosDeep=new DatosDeep(false,DeepLoadType.INCLUDE,clases,"");

			EmpleadoLogic empleadoLogic=new EmpleadoLogic();

			//empleadoLogic.getEmpleadoDataAccess().setIsForForeingKeyData(true);

			if(this.evaluacionempleadoSessionBean==null) {
				this.evaluacionempleadoSessionBean=new EvaluacionEmpleadoSessionBean();
			}

			if(!this.evaluacionempleadoSessionBean.getisBusquedaDesdeForeignKeySesionEmpleadoEvalua()) {
				//ARCHITECTURE
				if(Constantes.ISUSAEJBLOGICLAYER) {
					//empleadoevaluaLogic.getEmpleadoDataAccess().setIsForForeingKeyData(true);

					empleadoLogic.getTodosEmpleadosWithConnection(sFinalQuery,new Pagination());

					this.empleadoevaluasForeignKey=empleadoLogic.getEmpleados();

				} else if(Constantes.ISUSAEJBREMOTE) {

				} else if(Constantes.ISUSAEJBHOME) {
				}


				//ARCHITECTURE
			} else {
				if(!this.conCargarMinimo) {
					this.setVisibilidadBusquedasParaEmpleadoEvalua(true);
				}
				//ARCHITECTURE

				if(Constantes.ISUSAEJBLOGICLAYER) {
					empleadoLogic.getEntityWithConnection(evaluacionempleadoSessionBean.getlidEmpleadoEvaluaActual());
					this.empleadoevaluasForeignKey.add(empleadoLogic.getEmpleado());
				} else if(Constantes.ISUSAEJBREMOTE) {
				} else if(Constantes.ISUSAEJBHOME) {
				}
				//ARCHITECTURE
			}
		}
		catch(Exception e)
		{
			throw e;
		}
	}

	public void cargarCombosTipoEvaluacionEmpleadosForeignKeyLista(String sFinalQuery)throws Exception
	{
		try
		{
			this.tipoevaluacionempleadosForeignKey=new ArrayList<TipoEvaluacionEmpleado>();

			ArrayList<Classe> clases=new ArrayList<Classe>();
			ArrayList<String> arrClasses=new ArrayList<String>();
			Classe classe=new Classe();
			DatosDeep datosDeep=new DatosDeep(false,DeepLoadType.INCLUDE,clases,"");

			TipoEvaluacionEmpleadoLogic tipoevaluacionempleadoLogic=new TipoEvaluacionEmpleadoLogic();

			//tipoevaluacionempleadoLogic.getTipoEvaluacionEmpleadoDataAccess().setIsForForeingKeyData(true);

			if(this.evaluacionempleadoSessionBean==null) {
				this.evaluacionempleadoSessionBean=new EvaluacionEmpleadoSessionBean();
			}

			if(!this.evaluacionempleadoSessionBean.getisBusquedaDesdeForeignKeySesionTipoEvaluacionEmpleado()) {
				//ARCHITECTURE
				if(Constantes.ISUSAEJBLOGICLAYER) {
					//tipoevaluacionempleadoLogic.getTipoEvaluacionEmpleadoDataAccess().setIsForForeingKeyData(true);

					tipoevaluacionempleadoLogic.getTodosTipoEvaluacionEmpleadosWithConnection(sFinalQuery,new Pagination());

					this.tipoevaluacionempleadosForeignKey=tipoevaluacionempleadoLogic.getTipoEvaluacionEmpleados();

				} else if(Constantes.ISUSAEJBREMOTE) {

				} else if(Constantes.ISUSAEJBHOME) {
				}


				//ARCHITECTURE
			} else {
				if(!this.conCargarMinimo) {
					this.setVisibilidadBusquedasParaTipoEvaluacionEmpleado(true);
				}
				//ARCHITECTURE

				if(Constantes.ISUSAEJBLOGICLAYER) {
					tipoevaluacionempleadoLogic.getEntityWithConnection(evaluacionempleadoSessionBean.getlidTipoEvaluacionEmpleadoActual());
					this.tipoevaluacionempleadosForeignKey.add(tipoevaluacionempleadoLogic.getTipoEvaluacionEmpleado());
				} else if(Constantes.ISUSAEJBREMOTE) {
				} else if(Constantes.ISUSAEJBHOME) {
				}
				//ARCHITECTURE
			}
		}
		catch(Exception e)
		{
			throw e;
		}
	}

	public void cargarCombosAniosForeignKeyLista(String sFinalQuery)throws Exception
	{
		try
		{
			this.aniosForeignKey=new ArrayList<Anio>();

			ArrayList<Classe> clases=new ArrayList<Classe>();
			ArrayList<String> arrClasses=new ArrayList<String>();
			Classe classe=new Classe();
			DatosDeep datosDeep=new DatosDeep(false,DeepLoadType.INCLUDE,clases,"");

			AnioLogic anioLogic=new AnioLogic();

			//anioLogic.getAnioDataAccess().setIsForForeingKeyData(true);

			if(this.evaluacionempleadoSessionBean==null) {
				this.evaluacionempleadoSessionBean=new EvaluacionEmpleadoSessionBean();
			}

			if(!this.evaluacionempleadoSessionBean.getisBusquedaDesdeForeignKeySesionAnio()) {
				//ARCHITECTURE
				if(Constantes.ISUSAEJBLOGICLAYER) {
					//anioLogic.getAnioDataAccess().setIsForForeingKeyData(true);

					anioLogic.getTodosAniosWithConnection(sFinalQuery,new Pagination());

					this.aniosForeignKey=anioLogic.getAnios();

				} else if(Constantes.ISUSAEJBREMOTE) {

				} else if(Constantes.ISUSAEJBHOME) {
				}


				//ARCHITECTURE
			} else {
				if(!this.conCargarMinimo) {
					this.setVisibilidadBusquedasParaAnio(true);
				}
				//ARCHITECTURE

				if(Constantes.ISUSAEJBLOGICLAYER) {
					anioLogic.getEntityWithConnection(evaluacionempleadoSessionBean.getlidAnioActual());
					this.aniosForeignKey.add(anioLogic.getAnio());
				} else if(Constantes.ISUSAEJBREMOTE) {
				} else if(Constantes.ISUSAEJBHOME) {
				}
				//ARCHITECTURE
			}
		}
		catch(Exception e)
		{
			throw e;
		}
	}

	public void cargarCombosSemestresForeignKeyLista(String sFinalQuery)throws Exception
	{
		try
		{
			this.semestresForeignKey=new ArrayList<Semestre>();

			ArrayList<Classe> clases=new ArrayList<Classe>();
			ArrayList<String> arrClasses=new ArrayList<String>();
			Classe classe=new Classe();
			DatosDeep datosDeep=new DatosDeep(false,DeepLoadType.INCLUDE,clases,"");

			SemestreLogic semestreLogic=new SemestreLogic();

			//semestreLogic.getSemestreDataAccess().setIsForForeingKeyData(true);

			if(this.evaluacionempleadoSessionBean==null) {
				this.evaluacionempleadoSessionBean=new EvaluacionEmpleadoSessionBean();
			}

			if(!this.evaluacionempleadoSessionBean.getisBusquedaDesdeForeignKeySesionSemestre()) {
				//ARCHITECTURE
				if(Constantes.ISUSAEJBLOGICLAYER) {
					//semestreLogic.getSemestreDataAccess().setIsForForeingKeyData(true);

					semestreLogic.getTodosSemestresWithConnection(sFinalQuery,new Pagination());

					this.semestresForeignKey=semestreLogic.getSemestres();

				} else if(Constantes.ISUSAEJBREMOTE) {

				} else if(Constantes.ISUSAEJBHOME) {
				}


				//ARCHITECTURE
			} else {
				if(!this.conCargarMinimo) {
					this.setVisibilidadBusquedasParaSemestre(true);
				}
				//ARCHITECTURE

				if(Constantes.ISUSAEJBLOGICLAYER) {
					semestreLogic.getEntityWithConnection(evaluacionempleadoSessionBean.getlidSemestreActual());
					this.semestresForeignKey.add(semestreLogic.getSemestre());
				} else if(Constantes.ISUSAEJBREMOTE) {
				} else if(Constantes.ISUSAEJBHOME) {
				}
				//ARCHITECTURE
			}
		}
		catch(Exception e)
		{
			throw e;
		}
	}

	public void cargarCombosTrimestresForeignKeyLista(String sFinalQuery)throws Exception
	{
		try
		{
			this.trimestresForeignKey=new ArrayList<Trimestre>();

			ArrayList<Classe> clases=new ArrayList<Classe>();
			ArrayList<String> arrClasses=new ArrayList<String>();
			Classe classe=new Classe();
			DatosDeep datosDeep=new DatosDeep(false,DeepLoadType.INCLUDE,clases,"");

			TrimestreLogic trimestreLogic=new TrimestreLogic();

			//trimestreLogic.getTrimestreDataAccess().setIsForForeingKeyData(true);

			if(this.evaluacionempleadoSessionBean==null) {
				this.evaluacionempleadoSessionBean=new EvaluacionEmpleadoSessionBean();
			}

			if(!this.evaluacionempleadoSessionBean.getisBusquedaDesdeForeignKeySesionTrimestre()) {
				//ARCHITECTURE
				if(Constantes.ISUSAEJBLOGICLAYER) {
					//trimestreLogic.getTrimestreDataAccess().setIsForForeingKeyData(true);

					trimestreLogic.getTodosTrimestresWithConnection(sFinalQuery,new Pagination());

					this.trimestresForeignKey=trimestreLogic.getTrimestres();

				} else if(Constantes.ISUSAEJBREMOTE) {

				} else if(Constantes.ISUSAEJBHOME) {
				}


				//ARCHITECTURE
			} else {
				if(!this.conCargarMinimo) {
					this.setVisibilidadBusquedasParaTrimestre(true);
				}
				//ARCHITECTURE

				if(Constantes.ISUSAEJBLOGICLAYER) {
					trimestreLogic.getEntityWithConnection(evaluacionempleadoSessionBean.getlidTrimestreActual());
					this.trimestresForeignKey.add(trimestreLogic.getTrimestre());
				} else if(Constantes.ISUSAEJBREMOTE) {
				} else if(Constantes.ISUSAEJBHOME) {
				}
				//ARCHITECTURE
			}
		}
		catch(Exception e)
		{
			throw e;
		}
	}

	public void cargarCombosBimestresForeignKeyLista(String sFinalQuery)throws Exception
	{
		try
		{
			this.bimestresForeignKey=new ArrayList<Bimestre>();

			ArrayList<Classe> clases=new ArrayList<Classe>();
			ArrayList<String> arrClasses=new ArrayList<String>();
			Classe classe=new Classe();
			DatosDeep datosDeep=new DatosDeep(false,DeepLoadType.INCLUDE,clases,"");

			BimestreLogic bimestreLogic=new BimestreLogic();

			//bimestreLogic.getBimestreDataAccess().setIsForForeingKeyData(true);

			if(this.evaluacionempleadoSessionBean==null) {
				this.evaluacionempleadoSessionBean=new EvaluacionEmpleadoSessionBean();
			}

			if(!this.evaluacionempleadoSessionBean.getisBusquedaDesdeForeignKeySesionBimestre()) {
				//ARCHITECTURE
				if(Constantes.ISUSAEJBLOGICLAYER) {
					//bimestreLogic.getBimestreDataAccess().setIsForForeingKeyData(true);

					bimestreLogic.getTodosBimestresWithConnection(sFinalQuery,new Pagination());

					this.bimestresForeignKey=bimestreLogic.getBimestres();

				} else if(Constantes.ISUSAEJBREMOTE) {

				} else if(Constantes.ISUSAEJBHOME) {
				}


				//ARCHITECTURE
			} else {
				if(!this.conCargarMinimo) {
					this.setVisibilidadBusquedasParaBimestre(true);
				}
				//ARCHITECTURE

				if(Constantes.ISUSAEJBLOGICLAYER) {
					bimestreLogic.getEntityWithConnection(evaluacionempleadoSessionBean.getlidBimestreActual());
					this.bimestresForeignKey.add(bimestreLogic.getBimestre());
				} else if(Constantes.ISUSAEJBREMOTE) {
				} else if(Constantes.ISUSAEJBHOME) {
				}
				//ARCHITECTURE
			}
		}
		catch(Exception e)
		{
			throw e;
		}
	}

	public void cargarCombosMessForeignKeyLista(String sFinalQuery)throws Exception
	{
		try
		{
			this.messForeignKey=new ArrayList<Mes>();

			ArrayList<Classe> clases=new ArrayList<Classe>();
			ArrayList<String> arrClasses=new ArrayList<String>();
			Classe classe=new Classe();
			DatosDeep datosDeep=new DatosDeep(false,DeepLoadType.INCLUDE,clases,"");

			MesLogic mesLogic=new MesLogic();

			//mesLogic.getMesDataAccess().setIsForForeingKeyData(true);

			if(this.evaluacionempleadoSessionBean==null) {
				this.evaluacionempleadoSessionBean=new EvaluacionEmpleadoSessionBean();
			}

			if(!this.evaluacionempleadoSessionBean.getisBusquedaDesdeForeignKeySesionMes()) {
				//ARCHITECTURE
				if(Constantes.ISUSAEJBLOGICLAYER) {
					//mesLogic.getMesDataAccess().setIsForForeingKeyData(true);

					mesLogic.getTodosMessWithConnection(sFinalQuery,new Pagination());

					this.messForeignKey=mesLogic.getMess();

				} else if(Constantes.ISUSAEJBREMOTE) {

				} else if(Constantes.ISUSAEJBHOME) {
				}


				//ARCHITECTURE
			} else {
				if(!this.conCargarMinimo) {
					this.setVisibilidadBusquedasParaMes(true);
				}
				//ARCHITECTURE

				if(Constantes.ISUSAEJBLOGICLAYER) {
					mesLogic.getEntityWithConnection(evaluacionempleadoSessionBean.getlidMesActual());
					this.messForeignKey.add(mesLogic.getMes());
				} else if(Constantes.ISUSAEJBREMOTE) {
				} else if(Constantes.ISUSAEJBHOME) {
				}
				//ARCHITECTURE
			}
		}
		catch(Exception e)
		{
			throw e;
		}
	}

	
	
	public void setActualEmpresaForeignKey(Long idEmpresaSeleccionado,Boolean conCombosBusquedas,String sFormularioTipoBusqueda)throws Exception
	{
		try
		{
			Empresa  empresaTemp=null;

			for(Empresa empresaAux:empresasForeignKey) {
				if(empresaAux.getId()!=null && empresaAux.getId().equals(idEmpresaSeleccionado)) {
					empresaTemp=empresaAux;
					break;
				}
			}

			if(sFormularioTipoBusqueda.equals("Formulario") || sFormularioTipoBusqueda.equals("Todos")){
				if(empresaTemp!=null) {

					if(this.evaluacionempleado!=null) {
						this.evaluacionempleado.setEmpresa(empresaTemp);
					}

					if(this.jInternalFrameDetalleFormEvaluacionEmpleado!=null) {
						this.jInternalFrameDetalleFormEvaluacionEmpleado.jComboBoxid_empresaEvaluacionEmpleado.setSelectedItem(empresaTemp);
					}
				} else {
					//jComboBoxid_empresaEvaluacionEmpleado.setSelectedItem(empresaTemp);
					if(this.jInternalFrameDetalleFormEvaluacionEmpleado!=null) {
						if(this.jInternalFrameDetalleFormEvaluacionEmpleado.jComboBoxid_empresaEvaluacionEmpleado.getItemCount()>0) {
							this.jInternalFrameDetalleFormEvaluacionEmpleado.jComboBoxid_empresaEvaluacionEmpleado.setSelectedIndex(0);
						}
					}
				}
			}

			if(conCombosBusquedas) {

		//BYDAN_BUSQUEDAS
						

					}

		}
		catch(Exception e)
		{
			throw e;
		}
	}

	public String getActualEmpresaForeignKeyDescripcion(Long idEmpresaSeleccionado)throws Exception
	{
		String sDescripcion="";

		try
		{
			Empresa  empresaTemp=null;

			for(Empresa empresaAux:empresasForeignKey) {
				if(empresaAux.getId()!=null && empresaAux.getId().equals(idEmpresaSeleccionado)) {
					empresaTemp=empresaAux;
					break;
				}
			}


			sDescripcion=EmpresaConstantesFunciones.getEmpresaDescripcion(empresaTemp);
		}
		catch(Exception e)
		{
			throw e;
		}

		return sDescripcion;
	}

	@SuppressWarnings("rawtypes")
	public void setActualEmpresaForeignKeyGenerico(Long idEmpresaSeleccionado,JComboBox jComboBoxid_empresaEvaluacionEmpleadoGenerico)throws Exception
	{
		try
		{
			Empresa  empresaTemp=null;

			for(Empresa empresaAux:empresasForeignKey) {
				if(empresaAux.getId()!=null && empresaAux.getId().equals(idEmpresaSeleccionado)) {
					empresaTemp=empresaAux;
					break;
				}
			}

			if(empresaTemp!=null) {
				jComboBoxid_empresaEvaluacionEmpleadoGenerico.setSelectedItem(empresaTemp);
			} else {
				if(jComboBoxid_empresaEvaluacionEmpleadoGenerico!=null && jComboBoxid_empresaEvaluacionEmpleadoGenerico.getItemCount()>0) {
					jComboBoxid_empresaEvaluacionEmpleadoGenerico.setSelectedIndex(0);
				}
			}

		}
		catch(Exception e)
		{
			throw e;
		}

	}

	public void setActualSucursalForeignKey(Long idSucursalSeleccionado,Boolean conCombosBusquedas,String sFormularioTipoBusqueda)throws Exception
	{
		try
		{
			Sucursal  sucursalTemp=null;

			for(Sucursal sucursalAux:sucursalsForeignKey) {
				if(sucursalAux.getId()!=null && sucursalAux.getId().equals(idSucursalSeleccionado)) {
					sucursalTemp=sucursalAux;
					break;
				}
			}

			if(sFormularioTipoBusqueda.equals("Formulario") || sFormularioTipoBusqueda.equals("Todos")){
				if(sucursalTemp!=null) {

					if(this.evaluacionempleado!=null) {
						this.evaluacionempleado.setSucursal(sucursalTemp);
					}

					if(this.jInternalFrameDetalleFormEvaluacionEmpleado!=null) {
						this.jInternalFrameDetalleFormEvaluacionEmpleado.jComboBoxid_sucursalEvaluacionEmpleado.setSelectedItem(sucursalTemp);
					}
				} else {
					//jComboBoxid_sucursalEvaluacionEmpleado.setSelectedItem(sucursalTemp);
					if(this.jInternalFrameDetalleFormEvaluacionEmpleado!=null) {
						if(this.jInternalFrameDetalleFormEvaluacionEmpleado.jComboBoxid_sucursalEvaluacionEmpleado.getItemCount()>0) {
							this.jInternalFrameDetalleFormEvaluacionEmpleado.jComboBoxid_sucursalEvaluacionEmpleado.setSelectedIndex(0);
						}
					}
				}
			}

			if(conCombosBusquedas) {

		//BYDAN_BUSQUEDAS
						

					}

		}
		catch(Exception e)
		{
			throw e;
		}
	}

	public String getActualSucursalForeignKeyDescripcion(Long idSucursalSeleccionado)throws Exception
	{
		String sDescripcion="";

		try
		{
			Sucursal  sucursalTemp=null;

			for(Sucursal sucursalAux:sucursalsForeignKey) {
				if(sucursalAux.getId()!=null && sucursalAux.getId().equals(idSucursalSeleccionado)) {
					sucursalTemp=sucursalAux;
					break;
				}
			}


			sDescripcion=SucursalConstantesFunciones.getSucursalDescripcion(sucursalTemp);
		}
		catch(Exception e)
		{
			throw e;
		}

		return sDescripcion;
	}

	@SuppressWarnings("rawtypes")
	public void setActualSucursalForeignKeyGenerico(Long idSucursalSeleccionado,JComboBox jComboBoxid_sucursalEvaluacionEmpleadoGenerico)throws Exception
	{
		try
		{
			Sucursal  sucursalTemp=null;

			for(Sucursal sucursalAux:sucursalsForeignKey) {
				if(sucursalAux.getId()!=null && sucursalAux.getId().equals(idSucursalSeleccionado)) {
					sucursalTemp=sucursalAux;
					break;
				}
			}

			if(sucursalTemp!=null) {
				jComboBoxid_sucursalEvaluacionEmpleadoGenerico.setSelectedItem(sucursalTemp);
			} else {
				if(jComboBoxid_sucursalEvaluacionEmpleadoGenerico!=null && jComboBoxid_sucursalEvaluacionEmpleadoGenerico.getItemCount()>0) {
					jComboBoxid_sucursalEvaluacionEmpleadoGenerico.setSelectedIndex(0);
				}
			}

		}
		catch(Exception e)
		{
			throw e;
		}

	}

	public void setActualEjercicioForeignKey(Long idEjercicioSeleccionado,Boolean conCombosBusquedas,String sFormularioTipoBusqueda)throws Exception
	{
		try
		{
			Ejercicio  ejercicioTemp=null;

			for(Ejercicio ejercicioAux:ejerciciosForeignKey) {
				if(ejercicioAux.getId()!=null && ejercicioAux.getId().equals(idEjercicioSeleccionado)) {
					ejercicioTemp=ejercicioAux;
					break;
				}
			}

			if(sFormularioTipoBusqueda.equals("Formulario") || sFormularioTipoBusqueda.equals("Todos")){
				if(ejercicioTemp!=null) {

					if(this.evaluacionempleado!=null) {
						this.evaluacionempleado.setEjercicio(ejercicioTemp);
					}

					if(this.jInternalFrameDetalleFormEvaluacionEmpleado!=null) {
						this.jInternalFrameDetalleFormEvaluacionEmpleado.jComboBoxid_ejercicioEvaluacionEmpleado.setSelectedItem(ejercicioTemp);
					}
				} else {
					//jComboBoxid_ejercicioEvaluacionEmpleado.setSelectedItem(ejercicioTemp);
					if(this.jInternalFrameDetalleFormEvaluacionEmpleado!=null) {
						if(this.jInternalFrameDetalleFormEvaluacionEmpleado.jComboBoxid_ejercicioEvaluacionEmpleado.getItemCount()>0) {
							this.jInternalFrameDetalleFormEvaluacionEmpleado.jComboBoxid_ejercicioEvaluacionEmpleado.setSelectedIndex(0);
						}
					}
				}
			}

			if(conCombosBusquedas) {

		//BYDAN_BUSQUEDAS
						

					}

		}
		catch(Exception e)
		{
			throw e;
		}
	}

	public String getActualEjercicioForeignKeyDescripcion(Long idEjercicioSeleccionado)throws Exception
	{
		String sDescripcion="";

		try
		{
			Ejercicio  ejercicioTemp=null;

			for(Ejercicio ejercicioAux:ejerciciosForeignKey) {
				if(ejercicioAux.getId()!=null && ejercicioAux.getId().equals(idEjercicioSeleccionado)) {
					ejercicioTemp=ejercicioAux;
					break;
				}
			}


			sDescripcion=EjercicioConstantesFunciones.getEjercicioDescripcion(ejercicioTemp);
		}
		catch(Exception e)
		{
			throw e;
		}

		return sDescripcion;
	}

	@SuppressWarnings("rawtypes")
	public void setActualEjercicioForeignKeyGenerico(Long idEjercicioSeleccionado,JComboBox jComboBoxid_ejercicioEvaluacionEmpleadoGenerico)throws Exception
	{
		try
		{
			Ejercicio  ejercicioTemp=null;

			for(Ejercicio ejercicioAux:ejerciciosForeignKey) {
				if(ejercicioAux.getId()!=null && ejercicioAux.getId().equals(idEjercicioSeleccionado)) {
					ejercicioTemp=ejercicioAux;
					break;
				}
			}

			if(ejercicioTemp!=null) {
				jComboBoxid_ejercicioEvaluacionEmpleadoGenerico.setSelectedItem(ejercicioTemp);
			} else {
				if(jComboBoxid_ejercicioEvaluacionEmpleadoGenerico!=null && jComboBoxid_ejercicioEvaluacionEmpleadoGenerico.getItemCount()>0) {
					jComboBoxid_ejercicioEvaluacionEmpleadoGenerico.setSelectedIndex(0);
				}
			}

		}
		catch(Exception e)
		{
			throw e;
		}

	}

	public void setActualPeriodoForeignKey(Long idPeriodoSeleccionado,Boolean conCombosBusquedas,String sFormularioTipoBusqueda)throws Exception
	{
		try
		{
			Periodo  periodoTemp=null;

			for(Periodo periodoAux:periodosForeignKey) {
				if(periodoAux.getId()!=null && periodoAux.getId().equals(idPeriodoSeleccionado)) {
					periodoTemp=periodoAux;
					break;
				}
			}

			if(sFormularioTipoBusqueda.equals("Formulario") || sFormularioTipoBusqueda.equals("Todos")){
				if(periodoTemp!=null) {

					if(this.evaluacionempleado!=null) {
						this.evaluacionempleado.setPeriodo(periodoTemp);
					}

					if(this.jInternalFrameDetalleFormEvaluacionEmpleado!=null) {
						this.jInternalFrameDetalleFormEvaluacionEmpleado.jComboBoxid_periodoEvaluacionEmpleado.setSelectedItem(periodoTemp);
					}
				} else {
					//jComboBoxid_periodoEvaluacionEmpleado.setSelectedItem(periodoTemp);
					if(this.jInternalFrameDetalleFormEvaluacionEmpleado!=null) {
						if(this.jInternalFrameDetalleFormEvaluacionEmpleado.jComboBoxid_periodoEvaluacionEmpleado.getItemCount()>0) {
							this.jInternalFrameDetalleFormEvaluacionEmpleado.jComboBoxid_periodoEvaluacionEmpleado.setSelectedIndex(0);
						}
					}
				}
			}

			if(conCombosBusquedas) {

		//BYDAN_BUSQUEDAS
						

					}

		}
		catch(Exception e)
		{
			throw e;
		}
	}

	public String getActualPeriodoForeignKeyDescripcion(Long idPeriodoSeleccionado)throws Exception
	{
		String sDescripcion="";

		try
		{
			Periodo  periodoTemp=null;

			for(Periodo periodoAux:periodosForeignKey) {
				if(periodoAux.getId()!=null && periodoAux.getId().equals(idPeriodoSeleccionado)) {
					periodoTemp=periodoAux;
					break;
				}
			}


			sDescripcion=PeriodoConstantesFunciones.getPeriodoDescripcion(periodoTemp);
		}
		catch(Exception e)
		{
			throw e;
		}

		return sDescripcion;
	}

	@SuppressWarnings("rawtypes")
	public void setActualPeriodoForeignKeyGenerico(Long idPeriodoSeleccionado,JComboBox jComboBoxid_periodoEvaluacionEmpleadoGenerico)throws Exception
	{
		try
		{
			Periodo  periodoTemp=null;

			for(Periodo periodoAux:periodosForeignKey) {
				if(periodoAux.getId()!=null && periodoAux.getId().equals(idPeriodoSeleccionado)) {
					periodoTemp=periodoAux;
					break;
				}
			}

			if(periodoTemp!=null) {
				jComboBoxid_periodoEvaluacionEmpleadoGenerico.setSelectedItem(periodoTemp);
			} else {
				if(jComboBoxid_periodoEvaluacionEmpleadoGenerico!=null && jComboBoxid_periodoEvaluacionEmpleadoGenerico.getItemCount()>0) {
					jComboBoxid_periodoEvaluacionEmpleadoGenerico.setSelectedIndex(0);
				}
			}

		}
		catch(Exception e)
		{
			throw e;
		}

	}

	public void setActualEstructuraForeignKey(Long idEstructuraSeleccionado,Boolean conCombosBusquedas,String sFormularioTipoBusqueda)throws Exception
	{
		try
		{
			Estructura  estructuraTemp=null;

			for(Estructura estructuraAux:estructurasForeignKey) {
				if(estructuraAux.getId()!=null && estructuraAux.getId().equals(idEstructuraSeleccionado)) {
					estructuraTemp=estructuraAux;
					break;
				}
			}

			if(sFormularioTipoBusqueda.equals("Formulario") || sFormularioTipoBusqueda.equals("Todos")){
				if(estructuraTemp!=null) {

					if(this.evaluacionempleado!=null) {
						this.evaluacionempleado.setEstructura(estructuraTemp);
					}

					if(this.jInternalFrameDetalleFormEvaluacionEmpleado!=null) {
						this.jInternalFrameDetalleFormEvaluacionEmpleado.jComboBoxid_estructuraEvaluacionEmpleado.setSelectedItem(estructuraTemp);
					}
				} else {
					//jComboBoxid_estructuraEvaluacionEmpleado.setSelectedItem(estructuraTemp);
					if(this.jInternalFrameDetalleFormEvaluacionEmpleado!=null) {
						if(this.jInternalFrameDetalleFormEvaluacionEmpleado.jComboBoxid_estructuraEvaluacionEmpleado.getItemCount()>0) {
							this.jInternalFrameDetalleFormEvaluacionEmpleado.jComboBoxid_estructuraEvaluacionEmpleado.setSelectedIndex(0);
						}
					}
				}
			}

			if(conCombosBusquedas) {

		//BYDAN_BUSQUEDAS
						
				if(sFormularioTipoBusqueda.equals("FK_IdEstructura") || sFormularioTipoBusqueda.equals("Todos")){
					if(estructuraTemp!=null && jComboBoxid_estructuraFK_IdEstructuraEvaluacionEmpleado!=null) {
						jComboBoxid_estructuraFK_IdEstructuraEvaluacionEmpleado.setSelectedItem(estructuraTemp);
					} else {
						if(jComboBoxid_estructuraFK_IdEstructuraEvaluacionEmpleado!=null) {
							//jComboBoxid_estructuraFK_IdEstructuraEvaluacionEmpleado.setSelectedItem(estructuraTemp);
							if(jComboBoxid_estructuraFK_IdEstructuraEvaluacionEmpleado.getItemCount()>0) {
								jComboBoxid_estructuraFK_IdEstructuraEvaluacionEmpleado.setSelectedIndex(0);
							}
						}
					}
				}

					}

		}
		catch(Exception e)
		{
			throw e;
		}
	}

	public String getActualEstructuraForeignKeyDescripcion(Long idEstructuraSeleccionado)throws Exception
	{
		String sDescripcion="";

		try
		{
			Estructura  estructuraTemp=null;

			for(Estructura estructuraAux:estructurasForeignKey) {
				if(estructuraAux.getId()!=null && estructuraAux.getId().equals(idEstructuraSeleccionado)) {
					estructuraTemp=estructuraAux;
					break;
				}
			}


			sDescripcion=EstructuraConstantesFunciones.getEstructuraDescripcion(estructuraTemp);
		}
		catch(Exception e)
		{
			throw e;
		}

		return sDescripcion;
	}

	@SuppressWarnings("rawtypes")
	public void setActualEstructuraForeignKeyGenerico(Long idEstructuraSeleccionado,JComboBox jComboBoxid_estructuraEvaluacionEmpleadoGenerico)throws Exception
	{
		try
		{
			Estructura  estructuraTemp=null;

			for(Estructura estructuraAux:estructurasForeignKey) {
				if(estructuraAux.getId()!=null && estructuraAux.getId().equals(idEstructuraSeleccionado)) {
					estructuraTemp=estructuraAux;
					break;
				}
			}

			if(estructuraTemp!=null) {
				jComboBoxid_estructuraEvaluacionEmpleadoGenerico.setSelectedItem(estructuraTemp);
			} else {
				if(jComboBoxid_estructuraEvaluacionEmpleadoGenerico!=null && jComboBoxid_estructuraEvaluacionEmpleadoGenerico.getItemCount()>0) {
					jComboBoxid_estructuraEvaluacionEmpleadoGenerico.setSelectedIndex(0);
				}
			}

		}
		catch(Exception e)
		{
			throw e;
		}

	}

	public void setActualEmpleadoForeignKey(Long idEmpleadoSeleccionado,Boolean conCombosBusquedas,String sFormularioTipoBusqueda)throws Exception
	{
		try
		{
			Empleado  empleadoTemp=null;

			for(Empleado empleadoAux:empleadosForeignKey) {
				if(empleadoAux.getId()!=null && empleadoAux.getId().equals(idEmpleadoSeleccionado)) {
					empleadoTemp=empleadoAux;
					break;
				}
			}

			if(sFormularioTipoBusqueda.equals("Formulario") || sFormularioTipoBusqueda.equals("Todos")){
				if(empleadoTemp!=null) {

					if(this.evaluacionempleado!=null) {
						this.evaluacionempleado.setEmpleado(empleadoTemp);
					}

					if(this.jInternalFrameDetalleFormEvaluacionEmpleado!=null) {
						this.jInternalFrameDetalleFormEvaluacionEmpleado.jComboBoxid_empleadoEvaluacionEmpleado.setSelectedItem(empleadoTemp);
					}
				} else {
					//jComboBoxid_empleadoEvaluacionEmpleado.setSelectedItem(empleadoTemp);
					if(this.jInternalFrameDetalleFormEvaluacionEmpleado!=null) {
						if(this.jInternalFrameDetalleFormEvaluacionEmpleado.jComboBoxid_empleadoEvaluacionEmpleado.getItemCount()>0) {
							this.jInternalFrameDetalleFormEvaluacionEmpleado.jComboBoxid_empleadoEvaluacionEmpleado.setSelectedIndex(0);
						}
					}
				}
			}

			if(conCombosBusquedas) {

		//BYDAN_BUSQUEDAS
						
				if(sFormularioTipoBusqueda.equals("FK_IdEmpleado") || sFormularioTipoBusqueda.equals("Todos")){
					if(empleadoTemp!=null && jComboBoxid_empleadoFK_IdEmpleadoEvaluacionEmpleado!=null) {
						jComboBoxid_empleadoFK_IdEmpleadoEvaluacionEmpleado.setSelectedItem(empleadoTemp);
					} else {
						if(jComboBoxid_empleadoFK_IdEmpleadoEvaluacionEmpleado!=null) {
							//jComboBoxid_empleadoFK_IdEmpleadoEvaluacionEmpleado.setSelectedItem(empleadoTemp);
							if(jComboBoxid_empleadoFK_IdEmpleadoEvaluacionEmpleado.getItemCount()>0) {
								jComboBoxid_empleadoFK_IdEmpleadoEvaluacionEmpleado.setSelectedIndex(0);
							}
						}
					}
				}

					}

		}
		catch(Exception e)
		{
			throw e;
		}
	}

	public String getActualEmpleadoForeignKeyDescripcion(Long idEmpleadoSeleccionado)throws Exception
	{
		String sDescripcion="";

		try
		{
			Empleado  empleadoTemp=null;

			for(Empleado empleadoAux:empleadosForeignKey) {
				if(empleadoAux.getId()!=null && empleadoAux.getId().equals(idEmpleadoSeleccionado)) {
					empleadoTemp=empleadoAux;
					break;
				}
			}


			sDescripcion=EmpleadoConstantesFunciones.getEmpleadoDescripcion(empleadoTemp);
		}
		catch(Exception e)
		{
			throw e;
		}

		return sDescripcion;
	}

	@SuppressWarnings("rawtypes")
	public void setActualEmpleadoForeignKeyGenerico(Long idEmpleadoSeleccionado,JComboBox jComboBoxid_empleadoEvaluacionEmpleadoGenerico)throws Exception
	{
		try
		{
			Empleado  empleadoTemp=null;

			for(Empleado empleadoAux:empleadosForeignKey) {
				if(empleadoAux.getId()!=null && empleadoAux.getId().equals(idEmpleadoSeleccionado)) {
					empleadoTemp=empleadoAux;
					break;
				}
			}

			if(empleadoTemp!=null) {
				jComboBoxid_empleadoEvaluacionEmpleadoGenerico.setSelectedItem(empleadoTemp);
			} else {
				if(jComboBoxid_empleadoEvaluacionEmpleadoGenerico!=null && jComboBoxid_empleadoEvaluacionEmpleadoGenerico.getItemCount()>0) {
					jComboBoxid_empleadoEvaluacionEmpleadoGenerico.setSelectedIndex(0);
				}
			}

		}
		catch(Exception e)
		{
			throw e;
		}

	}

	public void setActualEmpleadoEvaluaForeignKey(Long idEmpleadoEvaluaSeleccionado,Boolean conCombosBusquedas,String sFormularioTipoBusqueda)throws Exception
	{
		try
		{
			Empleado  empleadoevaluaTemp=null;

			for(Empleado empleadoevaluaAux:empleadoevaluasForeignKey) {
				if(empleadoevaluaAux.getId()!=null && empleadoevaluaAux.getId().equals(idEmpleadoEvaluaSeleccionado)) {
					empleadoevaluaTemp=empleadoevaluaAux;
					break;
				}
			}

			if(sFormularioTipoBusqueda.equals("Formulario") || sFormularioTipoBusqueda.equals("Todos")){
				if(empleadoevaluaTemp!=null) {

					if(this.evaluacionempleado!=null) {
						this.evaluacionempleado.setEmpleadoEvalua(empleadoevaluaTemp);
					}

					if(this.jInternalFrameDetalleFormEvaluacionEmpleado!=null) {
						this.jInternalFrameDetalleFormEvaluacionEmpleado.jComboBoxid_empleado_evaluaEvaluacionEmpleado.setSelectedItem(empleadoevaluaTemp);
					}
				} else {
					//jComboBoxid_empleado_evaluaEvaluacionEmpleado.setSelectedItem(empleadoevaluaTemp);
					if(this.jInternalFrameDetalleFormEvaluacionEmpleado!=null) {
						if(this.jInternalFrameDetalleFormEvaluacionEmpleado.jComboBoxid_empleado_evaluaEvaluacionEmpleado.getItemCount()>0) {
							this.jInternalFrameDetalleFormEvaluacionEmpleado.jComboBoxid_empleado_evaluaEvaluacionEmpleado.setSelectedIndex(0);
						}
					}
				}
			}

			if(conCombosBusquedas) {

		//BYDAN_BUSQUEDAS
						
				if(sFormularioTipoBusqueda.equals("FK_IdEmpleadoEvalua") || sFormularioTipoBusqueda.equals("Todos")){
					if(empleadoevaluaTemp!=null && jComboBoxid_empleado_evaluaFK_IdEmpleadoEvaluaEvaluacionEmpleado!=null) {
						jComboBoxid_empleado_evaluaFK_IdEmpleadoEvaluaEvaluacionEmpleado.setSelectedItem(empleadoevaluaTemp);
					} else {
						if(jComboBoxid_empleado_evaluaFK_IdEmpleadoEvaluaEvaluacionEmpleado!=null) {
							//jComboBoxid_empleado_evaluaFK_IdEmpleadoEvaluaEvaluacionEmpleado.setSelectedItem(empleadoevaluaTemp);
							if(jComboBoxid_empleado_evaluaFK_IdEmpleadoEvaluaEvaluacionEmpleado.getItemCount()>0) {
								jComboBoxid_empleado_evaluaFK_IdEmpleadoEvaluaEvaluacionEmpleado.setSelectedIndex(0);
							}
						}
					}
				}

					}

		}
		catch(Exception e)
		{
			throw e;
		}
	}

	public String getActualEmpleadoEvaluaForeignKeyDescripcion(Long idEmpleadoEvaluaSeleccionado)throws Exception
	{
		String sDescripcion="";

		try
		{
			Empleado  empleadoevaluaTemp=null;

			for(Empleado empleadoevaluaAux:empleadoevaluasForeignKey) {
				if(empleadoevaluaAux.getId()!=null && empleadoevaluaAux.getId().equals(idEmpleadoEvaluaSeleccionado)) {
					empleadoevaluaTemp=empleadoevaluaAux;
					break;
				}
			}


			sDescripcion=EmpleadoConstantesFunciones.getEmpleadoDescripcion(empleadoevaluaTemp);
		}
		catch(Exception e)
		{
			throw e;
		}

		return sDescripcion;
	}

	@SuppressWarnings("rawtypes")
	public void setActualEmpleadoEvaluaForeignKeyGenerico(Long idEmpleadoEvaluaSeleccionado,JComboBox jComboBoxid_empleado_evaluaEvaluacionEmpleadoGenerico)throws Exception
	{
		try
		{
			Empleado  empleadoevaluaTemp=null;

			for(Empleado empleadoevaluaAux:empleadoevaluasForeignKey) {
				if(empleadoevaluaAux.getId()!=null && empleadoevaluaAux.getId().equals(idEmpleadoEvaluaSeleccionado)) {
					empleadoevaluaTemp=empleadoevaluaAux;
					break;
				}
			}

			if(empleadoevaluaTemp!=null) {
				jComboBoxid_empleado_evaluaEvaluacionEmpleadoGenerico.setSelectedItem(empleadoevaluaTemp);
			} else {
				if(jComboBoxid_empleado_evaluaEvaluacionEmpleadoGenerico!=null && jComboBoxid_empleado_evaluaEvaluacionEmpleadoGenerico.getItemCount()>0) {
					jComboBoxid_empleado_evaluaEvaluacionEmpleadoGenerico.setSelectedIndex(0);
				}
			}

		}
		catch(Exception e)
		{
			throw e;
		}

	}

	public void setActualTipoEvaluacionEmpleadoForeignKey(Long idTipoEvaluacionEmpleadoSeleccionado,Boolean conCombosBusquedas,String sFormularioTipoBusqueda)throws Exception
	{
		try
		{
			TipoEvaluacionEmpleado  tipoevaluacionempleadoTemp=null;

			for(TipoEvaluacionEmpleado tipoevaluacionempleadoAux:tipoevaluacionempleadosForeignKey) {
				if(tipoevaluacionempleadoAux.getId()!=null && tipoevaluacionempleadoAux.getId().equals(idTipoEvaluacionEmpleadoSeleccionado)) {
					tipoevaluacionempleadoTemp=tipoevaluacionempleadoAux;
					break;
				}
			}

			if(sFormularioTipoBusqueda.equals("Formulario") || sFormularioTipoBusqueda.equals("Todos")){
				if(tipoevaluacionempleadoTemp!=null) {

					if(this.evaluacionempleado!=null) {
						this.evaluacionempleado.setTipoEvaluacionEmpleado(tipoevaluacionempleadoTemp);
					}

					if(this.jInternalFrameDetalleFormEvaluacionEmpleado!=null) {
						this.jInternalFrameDetalleFormEvaluacionEmpleado.jComboBoxid_tipo_evaluacion_empleadoEvaluacionEmpleado.setSelectedItem(tipoevaluacionempleadoTemp);
					}
				} else {
					//jComboBoxid_tipo_evaluacion_empleadoEvaluacionEmpleado.setSelectedItem(tipoevaluacionempleadoTemp);
					if(this.jInternalFrameDetalleFormEvaluacionEmpleado!=null) {
						if(this.jInternalFrameDetalleFormEvaluacionEmpleado.jComboBoxid_tipo_evaluacion_empleadoEvaluacionEmpleado.getItemCount()>0) {
							this.jInternalFrameDetalleFormEvaluacionEmpleado.jComboBoxid_tipo_evaluacion_empleadoEvaluacionEmpleado.setSelectedIndex(0);
						}
					}
				}
			}

			if(conCombosBusquedas) {

		//BYDAN_BUSQUEDAS
						
				if(sFormularioTipoBusqueda.equals("FK_IdTipoEvaluacionEmpleado") || sFormularioTipoBusqueda.equals("Todos")){
					if(tipoevaluacionempleadoTemp!=null && jComboBoxid_tipo_evaluacion_empleadoFK_IdTipoEvaluacionEmpleadoEvaluacionEmpleado!=null) {
						jComboBoxid_tipo_evaluacion_empleadoFK_IdTipoEvaluacionEmpleadoEvaluacionEmpleado.setSelectedItem(tipoevaluacionempleadoTemp);
					} else {
						if(jComboBoxid_tipo_evaluacion_empleadoFK_IdTipoEvaluacionEmpleadoEvaluacionEmpleado!=null) {
							//jComboBoxid_tipo_evaluacion_empleadoFK_IdTipoEvaluacionEmpleadoEvaluacionEmpleado.setSelectedItem(tipoevaluacionempleadoTemp);
							if(jComboBoxid_tipo_evaluacion_empleadoFK_IdTipoEvaluacionEmpleadoEvaluacionEmpleado.getItemCount()>0) {
								jComboBoxid_tipo_evaluacion_empleadoFK_IdTipoEvaluacionEmpleadoEvaluacionEmpleado.setSelectedIndex(0);
							}
						}
					}
				}

					}

		}
		catch(Exception e)
		{
			throw e;
		}
	}

	public String getActualTipoEvaluacionEmpleadoForeignKeyDescripcion(Long idTipoEvaluacionEmpleadoSeleccionado)throws Exception
	{
		String sDescripcion="";

		try
		{
			TipoEvaluacionEmpleado  tipoevaluacionempleadoTemp=null;

			for(TipoEvaluacionEmpleado tipoevaluacionempleadoAux:tipoevaluacionempleadosForeignKey) {
				if(tipoevaluacionempleadoAux.getId()!=null && tipoevaluacionempleadoAux.getId().equals(idTipoEvaluacionEmpleadoSeleccionado)) {
					tipoevaluacionempleadoTemp=tipoevaluacionempleadoAux;
					break;
				}
			}


			sDescripcion=TipoEvaluacionEmpleadoConstantesFunciones.getTipoEvaluacionEmpleadoDescripcion(tipoevaluacionempleadoTemp);
		}
		catch(Exception e)
		{
			throw e;
		}

		return sDescripcion;
	}

	@SuppressWarnings("rawtypes")
	public void setActualTipoEvaluacionEmpleadoForeignKeyGenerico(Long idTipoEvaluacionEmpleadoSeleccionado,JComboBox jComboBoxid_tipo_evaluacion_empleadoEvaluacionEmpleadoGenerico)throws Exception
	{
		try
		{
			TipoEvaluacionEmpleado  tipoevaluacionempleadoTemp=null;

			for(TipoEvaluacionEmpleado tipoevaluacionempleadoAux:tipoevaluacionempleadosForeignKey) {
				if(tipoevaluacionempleadoAux.getId()!=null && tipoevaluacionempleadoAux.getId().equals(idTipoEvaluacionEmpleadoSeleccionado)) {
					tipoevaluacionempleadoTemp=tipoevaluacionempleadoAux;
					break;
				}
			}

			if(tipoevaluacionempleadoTemp!=null) {
				jComboBoxid_tipo_evaluacion_empleadoEvaluacionEmpleadoGenerico.setSelectedItem(tipoevaluacionempleadoTemp);
			} else {
				if(jComboBoxid_tipo_evaluacion_empleadoEvaluacionEmpleadoGenerico!=null && jComboBoxid_tipo_evaluacion_empleadoEvaluacionEmpleadoGenerico.getItemCount()>0) {
					jComboBoxid_tipo_evaluacion_empleadoEvaluacionEmpleadoGenerico.setSelectedIndex(0);
				}
			}

		}
		catch(Exception e)
		{
			throw e;
		}

	}

	public void setActualAnioForeignKey(Long idAnioSeleccionado,Boolean conCombosBusquedas,String sFormularioTipoBusqueda)throws Exception
	{
		try
		{
			Anio  anioTemp=null;

			for(Anio anioAux:aniosForeignKey) {
				if(anioAux.getId()!=null && anioAux.getId().equals(idAnioSeleccionado)) {
					anioTemp=anioAux;
					break;
				}
			}

			if(sFormularioTipoBusqueda.equals("Formulario") || sFormularioTipoBusqueda.equals("Todos")){
				if(anioTemp!=null) {

					if(this.evaluacionempleado!=null) {
						this.evaluacionempleado.setAnio(anioTemp);
					}

					if(this.jInternalFrameDetalleFormEvaluacionEmpleado!=null) {
						this.jInternalFrameDetalleFormEvaluacionEmpleado.jComboBoxid_anioEvaluacionEmpleado.setSelectedItem(anioTemp);
					}
				} else {
					//jComboBoxid_anioEvaluacionEmpleado.setSelectedItem(anioTemp);
					if(this.jInternalFrameDetalleFormEvaluacionEmpleado!=null) {
						if(this.jInternalFrameDetalleFormEvaluacionEmpleado.jComboBoxid_anioEvaluacionEmpleado.getItemCount()>0) {
							this.jInternalFrameDetalleFormEvaluacionEmpleado.jComboBoxid_anioEvaluacionEmpleado.setSelectedIndex(0);
						}
					}
				}
			}

			if(conCombosBusquedas) {

		//BYDAN_BUSQUEDAS
						
				if(sFormularioTipoBusqueda.equals("FK_IdAnio") || sFormularioTipoBusqueda.equals("Todos")){
					if(anioTemp!=null && jComboBoxid_anioFK_IdAnioEvaluacionEmpleado!=null) {
						jComboBoxid_anioFK_IdAnioEvaluacionEmpleado.setSelectedItem(anioTemp);
					} else {
						if(jComboBoxid_anioFK_IdAnioEvaluacionEmpleado!=null) {
							//jComboBoxid_anioFK_IdAnioEvaluacionEmpleado.setSelectedItem(anioTemp);
							if(jComboBoxid_anioFK_IdAnioEvaluacionEmpleado.getItemCount()>0) {
								jComboBoxid_anioFK_IdAnioEvaluacionEmpleado.setSelectedIndex(0);
							}
						}
					}
				}

					}

		}
		catch(Exception e)
		{
			throw e;
		}
	}

	public String getActualAnioForeignKeyDescripcion(Long idAnioSeleccionado)throws Exception
	{
		String sDescripcion="";

		try
		{
			Anio  anioTemp=null;

			for(Anio anioAux:aniosForeignKey) {
				if(anioAux.getId()!=null && anioAux.getId().equals(idAnioSeleccionado)) {
					anioTemp=anioAux;
					break;
				}
			}


			sDescripcion=AnioConstantesFunciones.getAnioDescripcion(anioTemp);
		}
		catch(Exception e)
		{
			throw e;
		}

		return sDescripcion;
	}

	@SuppressWarnings("rawtypes")
	public void setActualAnioForeignKeyGenerico(Long idAnioSeleccionado,JComboBox jComboBoxid_anioEvaluacionEmpleadoGenerico)throws Exception
	{
		try
		{
			Anio  anioTemp=null;

			for(Anio anioAux:aniosForeignKey) {
				if(anioAux.getId()!=null && anioAux.getId().equals(idAnioSeleccionado)) {
					anioTemp=anioAux;
					break;
				}
			}

			if(anioTemp!=null) {
				jComboBoxid_anioEvaluacionEmpleadoGenerico.setSelectedItem(anioTemp);
			} else {
				if(jComboBoxid_anioEvaluacionEmpleadoGenerico!=null && jComboBoxid_anioEvaluacionEmpleadoGenerico.getItemCount()>0) {
					jComboBoxid_anioEvaluacionEmpleadoGenerico.setSelectedIndex(0);
				}
			}

		}
		catch(Exception e)
		{
			throw e;
		}

	}

	public void setActualSemestreForeignKey(Long idSemestreSeleccionado,Boolean conCombosBusquedas,String sFormularioTipoBusqueda)throws Exception
	{
		try
		{
			Semestre  semestreTemp=null;

			for(Semestre semestreAux:semestresForeignKey) {
				if(semestreAux.getId()!=null && semestreAux.getId().equals(idSemestreSeleccionado)) {
					semestreTemp=semestreAux;
					break;
				}
			}

			if(sFormularioTipoBusqueda.equals("Formulario") || sFormularioTipoBusqueda.equals("Todos")){
				if(semestreTemp!=null) {

					if(this.evaluacionempleado!=null) {
						this.evaluacionempleado.setSemestre(semestreTemp);
					}

					if(this.jInternalFrameDetalleFormEvaluacionEmpleado!=null) {
						this.jInternalFrameDetalleFormEvaluacionEmpleado.jComboBoxid_semestreEvaluacionEmpleado.setSelectedItem(semestreTemp);
					}
				} else {
					//jComboBoxid_semestreEvaluacionEmpleado.setSelectedItem(semestreTemp);
					if(this.jInternalFrameDetalleFormEvaluacionEmpleado!=null) {
						if(this.jInternalFrameDetalleFormEvaluacionEmpleado.jComboBoxid_semestreEvaluacionEmpleado.getItemCount()>0) {
							this.jInternalFrameDetalleFormEvaluacionEmpleado.jComboBoxid_semestreEvaluacionEmpleado.setSelectedIndex(0);
						}
					}
				}
			}

			if(conCombosBusquedas) {

		//BYDAN_BUSQUEDAS
						
				if(sFormularioTipoBusqueda.equals("FK_IdSemestre") || sFormularioTipoBusqueda.equals("Todos")){
					if(semestreTemp!=null && jComboBoxid_semestreFK_IdSemestreEvaluacionEmpleado!=null) {
						jComboBoxid_semestreFK_IdSemestreEvaluacionEmpleado.setSelectedItem(semestreTemp);
					} else {
						if(jComboBoxid_semestreFK_IdSemestreEvaluacionEmpleado!=null) {
							//jComboBoxid_semestreFK_IdSemestreEvaluacionEmpleado.setSelectedItem(semestreTemp);
							if(jComboBoxid_semestreFK_IdSemestreEvaluacionEmpleado.getItemCount()>0) {
								jComboBoxid_semestreFK_IdSemestreEvaluacionEmpleado.setSelectedIndex(0);
							}
						}
					}
				}

					}

		}
		catch(Exception e)
		{
			throw e;
		}
	}

	public String getActualSemestreForeignKeyDescripcion(Long idSemestreSeleccionado)throws Exception
	{
		String sDescripcion="";

		try
		{
			Semestre  semestreTemp=null;

			for(Semestre semestreAux:semestresForeignKey) {
				if(semestreAux.getId()!=null && semestreAux.getId().equals(idSemestreSeleccionado)) {
					semestreTemp=semestreAux;
					break;
				}
			}


			sDescripcion=SemestreConstantesFunciones.getSemestreDescripcion(semestreTemp);
		}
		catch(Exception e)
		{
			throw e;
		}

		return sDescripcion;
	}

	@SuppressWarnings("rawtypes")
	public void setActualSemestreForeignKeyGenerico(Long idSemestreSeleccionado,JComboBox jComboBoxid_semestreEvaluacionEmpleadoGenerico)throws Exception
	{
		try
		{
			Semestre  semestreTemp=null;

			for(Semestre semestreAux:semestresForeignKey) {
				if(semestreAux.getId()!=null && semestreAux.getId().equals(idSemestreSeleccionado)) {
					semestreTemp=semestreAux;
					break;
				}
			}

			if(semestreTemp!=null) {
				jComboBoxid_semestreEvaluacionEmpleadoGenerico.setSelectedItem(semestreTemp);
			} else {
				if(jComboBoxid_semestreEvaluacionEmpleadoGenerico!=null && jComboBoxid_semestreEvaluacionEmpleadoGenerico.getItemCount()>0) {
					jComboBoxid_semestreEvaluacionEmpleadoGenerico.setSelectedIndex(0);
				}
			}

		}
		catch(Exception e)
		{
			throw e;
		}

	}

	public void setActualTrimestreForeignKey(Long idTrimestreSeleccionado,Boolean conCombosBusquedas,String sFormularioTipoBusqueda)throws Exception
	{
		try
		{
			Trimestre  trimestreTemp=null;

			for(Trimestre trimestreAux:trimestresForeignKey) {
				if(trimestreAux.getId()!=null && trimestreAux.getId().equals(idTrimestreSeleccionado)) {
					trimestreTemp=trimestreAux;
					break;
				}
			}

			if(sFormularioTipoBusqueda.equals("Formulario") || sFormularioTipoBusqueda.equals("Todos")){
				if(trimestreTemp!=null) {

					if(this.evaluacionempleado!=null) {
						this.evaluacionempleado.setTrimestre(trimestreTemp);
					}

					if(this.jInternalFrameDetalleFormEvaluacionEmpleado!=null) {
						this.jInternalFrameDetalleFormEvaluacionEmpleado.jComboBoxid_trimestreEvaluacionEmpleado.setSelectedItem(trimestreTemp);
					}
				} else {
					//jComboBoxid_trimestreEvaluacionEmpleado.setSelectedItem(trimestreTemp);
					if(this.jInternalFrameDetalleFormEvaluacionEmpleado!=null) {
						if(this.jInternalFrameDetalleFormEvaluacionEmpleado.jComboBoxid_trimestreEvaluacionEmpleado.getItemCount()>0) {
							this.jInternalFrameDetalleFormEvaluacionEmpleado.jComboBoxid_trimestreEvaluacionEmpleado.setSelectedIndex(0);
						}
					}
				}
			}

			if(conCombosBusquedas) {

		//BYDAN_BUSQUEDAS
						
				if(sFormularioTipoBusqueda.equals("FK_IdTrimestre") || sFormularioTipoBusqueda.equals("Todos")){
					if(trimestreTemp!=null && jComboBoxid_trimestreFK_IdTrimestreEvaluacionEmpleado!=null) {
						jComboBoxid_trimestreFK_IdTrimestreEvaluacionEmpleado.setSelectedItem(trimestreTemp);
					} else {
						if(jComboBoxid_trimestreFK_IdTrimestreEvaluacionEmpleado!=null) {
							//jComboBoxid_trimestreFK_IdTrimestreEvaluacionEmpleado.setSelectedItem(trimestreTemp);
							if(jComboBoxid_trimestreFK_IdTrimestreEvaluacionEmpleado.getItemCount()>0) {
								jComboBoxid_trimestreFK_IdTrimestreEvaluacionEmpleado.setSelectedIndex(0);
							}
						}
					}
				}

					}

		}
		catch(Exception e)
		{
			throw e;
		}
	}

	public String getActualTrimestreForeignKeyDescripcion(Long idTrimestreSeleccionado)throws Exception
	{
		String sDescripcion="";

		try
		{
			Trimestre  trimestreTemp=null;

			for(Trimestre trimestreAux:trimestresForeignKey) {
				if(trimestreAux.getId()!=null && trimestreAux.getId().equals(idTrimestreSeleccionado)) {
					trimestreTemp=trimestreAux;
					break;
				}
			}


			sDescripcion=TrimestreConstantesFunciones.getTrimestreDescripcion(trimestreTemp);
		}
		catch(Exception e)
		{
			throw e;
		}

		return sDescripcion;
	}

	@SuppressWarnings("rawtypes")
	public void setActualTrimestreForeignKeyGenerico(Long idTrimestreSeleccionado,JComboBox jComboBoxid_trimestreEvaluacionEmpleadoGenerico)throws Exception
	{
		try
		{
			Trimestre  trimestreTemp=null;

			for(Trimestre trimestreAux:trimestresForeignKey) {
				if(trimestreAux.getId()!=null && trimestreAux.getId().equals(idTrimestreSeleccionado)) {
					trimestreTemp=trimestreAux;
					break;
				}
			}

			if(trimestreTemp!=null) {
				jComboBoxid_trimestreEvaluacionEmpleadoGenerico.setSelectedItem(trimestreTemp);
			} else {
				if(jComboBoxid_trimestreEvaluacionEmpleadoGenerico!=null && jComboBoxid_trimestreEvaluacionEmpleadoGenerico.getItemCount()>0) {
					jComboBoxid_trimestreEvaluacionEmpleadoGenerico.setSelectedIndex(0);
				}
			}

		}
		catch(Exception e)
		{
			throw e;
		}

	}

	public void setActualBimestreForeignKey(Long idBimestreSeleccionado,Boolean conCombosBusquedas,String sFormularioTipoBusqueda)throws Exception
	{
		try
		{
			Bimestre  bimestreTemp=null;

			for(Bimestre bimestreAux:bimestresForeignKey) {
				if(bimestreAux.getId()!=null && bimestreAux.getId().equals(idBimestreSeleccionado)) {
					bimestreTemp=bimestreAux;
					break;
				}
			}

			if(sFormularioTipoBusqueda.equals("Formulario") || sFormularioTipoBusqueda.equals("Todos")){
				if(bimestreTemp!=null) {

					if(this.evaluacionempleado!=null) {
						this.evaluacionempleado.setBimestre(bimestreTemp);
					}

					if(this.jInternalFrameDetalleFormEvaluacionEmpleado!=null) {
						this.jInternalFrameDetalleFormEvaluacionEmpleado.jComboBoxid_bimestreEvaluacionEmpleado.setSelectedItem(bimestreTemp);
					}
				} else {
					//jComboBoxid_bimestreEvaluacionEmpleado.setSelectedItem(bimestreTemp);
					if(this.jInternalFrameDetalleFormEvaluacionEmpleado!=null) {
						if(this.jInternalFrameDetalleFormEvaluacionEmpleado.jComboBoxid_bimestreEvaluacionEmpleado.getItemCount()>0) {
							this.jInternalFrameDetalleFormEvaluacionEmpleado.jComboBoxid_bimestreEvaluacionEmpleado.setSelectedIndex(0);
						}
					}
				}
			}

			if(conCombosBusquedas) {

		//BYDAN_BUSQUEDAS
						
				if(sFormularioTipoBusqueda.equals("FK_IdBimestre") || sFormularioTipoBusqueda.equals("Todos")){
					if(bimestreTemp!=null && jComboBoxid_bimestreFK_IdBimestreEvaluacionEmpleado!=null) {
						jComboBoxid_bimestreFK_IdBimestreEvaluacionEmpleado.setSelectedItem(bimestreTemp);
					} else {
						if(jComboBoxid_bimestreFK_IdBimestreEvaluacionEmpleado!=null) {
							//jComboBoxid_bimestreFK_IdBimestreEvaluacionEmpleado.setSelectedItem(bimestreTemp);
							if(jComboBoxid_bimestreFK_IdBimestreEvaluacionEmpleado.getItemCount()>0) {
								jComboBoxid_bimestreFK_IdBimestreEvaluacionEmpleado.setSelectedIndex(0);
							}
						}
					}
				}

					}

		}
		catch(Exception e)
		{
			throw e;
		}
	}

	public String getActualBimestreForeignKeyDescripcion(Long idBimestreSeleccionado)throws Exception
	{
		String sDescripcion="";

		try
		{
			Bimestre  bimestreTemp=null;

			for(Bimestre bimestreAux:bimestresForeignKey) {
				if(bimestreAux.getId()!=null && bimestreAux.getId().equals(idBimestreSeleccionado)) {
					bimestreTemp=bimestreAux;
					break;
				}
			}


			sDescripcion=BimestreConstantesFunciones.getBimestreDescripcion(bimestreTemp);
		}
		catch(Exception e)
		{
			throw e;
		}

		return sDescripcion;
	}

	@SuppressWarnings("rawtypes")
	public void setActualBimestreForeignKeyGenerico(Long idBimestreSeleccionado,JComboBox jComboBoxid_bimestreEvaluacionEmpleadoGenerico)throws Exception
	{
		try
		{
			Bimestre  bimestreTemp=null;

			for(Bimestre bimestreAux:bimestresForeignKey) {
				if(bimestreAux.getId()!=null && bimestreAux.getId().equals(idBimestreSeleccionado)) {
					bimestreTemp=bimestreAux;
					break;
				}
			}

			if(bimestreTemp!=null) {
				jComboBoxid_bimestreEvaluacionEmpleadoGenerico.setSelectedItem(bimestreTemp);
			} else {
				if(jComboBoxid_bimestreEvaluacionEmpleadoGenerico!=null && jComboBoxid_bimestreEvaluacionEmpleadoGenerico.getItemCount()>0) {
					jComboBoxid_bimestreEvaluacionEmpleadoGenerico.setSelectedIndex(0);
				}
			}

		}
		catch(Exception e)
		{
			throw e;
		}

	}

	public void setActualMesForeignKey(Long idMesSeleccionado,Boolean conCombosBusquedas,String sFormularioTipoBusqueda)throws Exception
	{
		try
		{
			Mes  mesTemp=null;

			for(Mes mesAux:messForeignKey) {
				if(mesAux.getId()!=null && mesAux.getId().equals(idMesSeleccionado)) {
					mesTemp=mesAux;
					break;
				}
			}

			if(sFormularioTipoBusqueda.equals("Formulario") || sFormularioTipoBusqueda.equals("Todos")){
				if(mesTemp!=null) {

					if(this.evaluacionempleado!=null) {
						this.evaluacionempleado.setMes(mesTemp);
					}

					if(this.jInternalFrameDetalleFormEvaluacionEmpleado!=null) {
						this.jInternalFrameDetalleFormEvaluacionEmpleado.jComboBoxid_mesEvaluacionEmpleado.setSelectedItem(mesTemp);
					}
				} else {
					//jComboBoxid_mesEvaluacionEmpleado.setSelectedItem(mesTemp);
					if(this.jInternalFrameDetalleFormEvaluacionEmpleado!=null) {
						if(this.jInternalFrameDetalleFormEvaluacionEmpleado.jComboBoxid_mesEvaluacionEmpleado.getItemCount()>0) {
							this.jInternalFrameDetalleFormEvaluacionEmpleado.jComboBoxid_mesEvaluacionEmpleado.setSelectedIndex(0);
						}
					}
				}
			}

			if(conCombosBusquedas) {

		//BYDAN_BUSQUEDAS
						
				if(sFormularioTipoBusqueda.equals("FK_IdMes") || sFormularioTipoBusqueda.equals("Todos")){
					if(mesTemp!=null && jComboBoxid_mesFK_IdMesEvaluacionEmpleado!=null) {
						jComboBoxid_mesFK_IdMesEvaluacionEmpleado.setSelectedItem(mesTemp);
					} else {
						if(jComboBoxid_mesFK_IdMesEvaluacionEmpleado!=null) {
							//jComboBoxid_mesFK_IdMesEvaluacionEmpleado.setSelectedItem(mesTemp);
							if(jComboBoxid_mesFK_IdMesEvaluacionEmpleado.getItemCount()>0) {
								jComboBoxid_mesFK_IdMesEvaluacionEmpleado.setSelectedIndex(0);
							}
						}
					}
				}

					}

		}
		catch(Exception e)
		{
			throw e;
		}
	}

	public String getActualMesForeignKeyDescripcion(Long idMesSeleccionado)throws Exception
	{
		String sDescripcion="";

		try
		{
			Mes  mesTemp=null;

			for(Mes mesAux:messForeignKey) {
				if(mesAux.getId()!=null && mesAux.getId().equals(idMesSeleccionado)) {
					mesTemp=mesAux;
					break;
				}
			}


			sDescripcion=MesConstantesFunciones.getMesDescripcion(mesTemp);
		}
		catch(Exception e)
		{
			throw e;
		}

		return sDescripcion;
	}

	@SuppressWarnings("rawtypes")
	public void setActualMesForeignKeyGenerico(Long idMesSeleccionado,JComboBox jComboBoxid_mesEvaluacionEmpleadoGenerico)throws Exception
	{
		try
		{
			Mes  mesTemp=null;

			for(Mes mesAux:messForeignKey) {
				if(mesAux.getId()!=null && mesAux.getId().equals(idMesSeleccionado)) {
					mesTemp=mesAux;
					break;
				}
			}

			if(mesTemp!=null) {
				jComboBoxid_mesEvaluacionEmpleadoGenerico.setSelectedItem(mesTemp);
			} else {
				if(jComboBoxid_mesEvaluacionEmpleadoGenerico!=null && jComboBoxid_mesEvaluacionEmpleadoGenerico.getItemCount()>0) {
					jComboBoxid_mesEvaluacionEmpleadoGenerico.setSelectedIndex(0);
				}
			}

		}
		catch(Exception e)
		{
			throw e;
		}

	}

	
	
	@SuppressWarnings("rawtypes")
	public void setActualParaGuardarEmpresaForeignKey(EvaluacionEmpleado evaluacionempleado,JComboBox jComboBoxid_empresaEvaluacionEmpleadoGenerico)throws Exception
	{
		try
		{
			Empresa  empresaAux=new Empresa();

			if(jComboBoxid_empresaEvaluacionEmpleadoGenerico==null) {
				empresaAux=(Empresa)this.jInternalFrameDetalleFormEvaluacionEmpleado.jComboBoxid_empresaEvaluacionEmpleado.getSelectedItem();
			} else {
				empresaAux=(Empresa)jComboBoxid_empresaEvaluacionEmpleadoGenerico.getSelectedItem();
			}

			if(empresaAux!=null && empresaAux.getId()!=null) {
				evaluacionempleado.setid_empresa(empresaAux.getId());
				evaluacionempleado.setempresa_descripcion(EvaluacionEmpleadoConstantesFunciones.getEmpresaDescripcion(empresaAux));
				evaluacionempleado.setEmpresa(empresaAux);			}
		}
		catch(Exception e)
		{
			throw e;
		}
	}

	@SuppressWarnings("rawtypes")
	public void setActualParaGuardarSucursalForeignKey(EvaluacionEmpleado evaluacionempleado,JComboBox jComboBoxid_sucursalEvaluacionEmpleadoGenerico)throws Exception
	{
		try
		{
			Sucursal  sucursalAux=new Sucursal();

			if(jComboBoxid_sucursalEvaluacionEmpleadoGenerico==null) {
				sucursalAux=(Sucursal)this.jInternalFrameDetalleFormEvaluacionEmpleado.jComboBoxid_sucursalEvaluacionEmpleado.getSelectedItem();
			} else {
				sucursalAux=(Sucursal)jComboBoxid_sucursalEvaluacionEmpleadoGenerico.getSelectedItem();
			}

			if(sucursalAux!=null && sucursalAux.getId()!=null) {
				evaluacionempleado.setid_sucursal(sucursalAux.getId());
				evaluacionempleado.setsucursal_descripcion(EvaluacionEmpleadoConstantesFunciones.getSucursalDescripcion(sucursalAux));
				evaluacionempleado.setSucursal(sucursalAux);			}
		}
		catch(Exception e)
		{
			throw e;
		}
	}

	@SuppressWarnings("rawtypes")
	public void setActualParaGuardarEjercicioForeignKey(EvaluacionEmpleado evaluacionempleado,JComboBox jComboBoxid_ejercicioEvaluacionEmpleadoGenerico)throws Exception
	{
		try
		{
			Ejercicio  ejercicioAux=new Ejercicio();

			if(jComboBoxid_ejercicioEvaluacionEmpleadoGenerico==null) {
				ejercicioAux=(Ejercicio)this.jInternalFrameDetalleFormEvaluacionEmpleado.jComboBoxid_ejercicioEvaluacionEmpleado.getSelectedItem();
			} else {
				ejercicioAux=(Ejercicio)jComboBoxid_ejercicioEvaluacionEmpleadoGenerico.getSelectedItem();
			}

			if(ejercicioAux!=null && ejercicioAux.getId()!=null) {
				evaluacionempleado.setid_ejercicio(ejercicioAux.getId());
				evaluacionempleado.setejercicio_descripcion(EvaluacionEmpleadoConstantesFunciones.getEjercicioDescripcion(ejercicioAux));
				evaluacionempleado.setEjercicio(ejercicioAux);			}
		}
		catch(Exception e)
		{
			throw e;
		}
	}

	@SuppressWarnings("rawtypes")
	public void setActualParaGuardarPeriodoForeignKey(EvaluacionEmpleado evaluacionempleado,JComboBox jComboBoxid_periodoEvaluacionEmpleadoGenerico)throws Exception
	{
		try
		{
			Periodo  periodoAux=new Periodo();

			if(jComboBoxid_periodoEvaluacionEmpleadoGenerico==null) {
				periodoAux=(Periodo)this.jInternalFrameDetalleFormEvaluacionEmpleado.jComboBoxid_periodoEvaluacionEmpleado.getSelectedItem();
			} else {
				periodoAux=(Periodo)jComboBoxid_periodoEvaluacionEmpleadoGenerico.getSelectedItem();
			}

			if(periodoAux!=null && periodoAux.getId()!=null) {
				if(periodoAux.getid_estado_periodo().equals(0L)) {
					throw new Exception("Periodo INACTIVO, NO PUEDE GUARDAR LA INFORMACION CONSULTE CON EL ADMINISTRADOR");
				}

				evaluacionempleado.setid_periodo(periodoAux.getId());
				evaluacionempleado.setperiodo_descripcion(EvaluacionEmpleadoConstantesFunciones.getPeriodoDescripcion(periodoAux));
				evaluacionempleado.setPeriodo(periodoAux);			}
		}
		catch(Exception e)
		{
			throw e;
		}
	}

	@SuppressWarnings("rawtypes")
	public void setActualParaGuardarEstructuraForeignKey(EvaluacionEmpleado evaluacionempleado,JComboBox jComboBoxid_estructuraEvaluacionEmpleadoGenerico)throws Exception
	{
		try
		{
			Estructura  estructuraAux=new Estructura();

			if(jComboBoxid_estructuraEvaluacionEmpleadoGenerico==null) {
				estructuraAux=(Estructura)this.jInternalFrameDetalleFormEvaluacionEmpleado.jComboBoxid_estructuraEvaluacionEmpleado.getSelectedItem();
			} else {
				estructuraAux=(Estructura)jComboBoxid_estructuraEvaluacionEmpleadoGenerico.getSelectedItem();
			}

			if(estructuraAux!=null && estructuraAux.getId()!=null) {
				evaluacionempleado.setid_estructura(estructuraAux.getId());
				evaluacionempleado.setestructura_descripcion(EvaluacionEmpleadoConstantesFunciones.getEstructuraDescripcion(estructuraAux));
				evaluacionempleado.setEstructura(estructuraAux);			}
		}
		catch(Exception e)
		{
			throw e;
		}
	}

	@SuppressWarnings("rawtypes")
	public void setActualParaGuardarEmpleadoForeignKey(EvaluacionEmpleado evaluacionempleado,JComboBox jComboBoxid_empleadoEvaluacionEmpleadoGenerico)throws Exception
	{
		try
		{
			Empleado  empleadoAux=new Empleado();

			if(jComboBoxid_empleadoEvaluacionEmpleadoGenerico==null) {
				empleadoAux=(Empleado)this.jInternalFrameDetalleFormEvaluacionEmpleado.jComboBoxid_empleadoEvaluacionEmpleado.getSelectedItem();
			} else {
				empleadoAux=(Empleado)jComboBoxid_empleadoEvaluacionEmpleadoGenerico.getSelectedItem();
			}

			if(empleadoAux!=null && empleadoAux.getId()!=null) {
				evaluacionempleado.setid_empleado(empleadoAux.getId());
				evaluacionempleado.setempleado_descripcion(EvaluacionEmpleadoConstantesFunciones.getEmpleadoDescripcion(empleadoAux));
				evaluacionempleado.setEmpleado(empleadoAux);			}
		}
		catch(Exception e)
		{
			throw e;
		}
	}

	@SuppressWarnings("rawtypes")
	public void setActualParaGuardarEmpleadoEvaluaForeignKey(EvaluacionEmpleado evaluacionempleado,JComboBox jComboBoxid_empleado_evaluaEvaluacionEmpleadoGenerico)throws Exception
	{
		try
		{
			Empleado  empleadoAux=new Empleado();

			if(jComboBoxid_empleado_evaluaEvaluacionEmpleadoGenerico==null) {
				empleadoAux=(Empleado)this.jInternalFrameDetalleFormEvaluacionEmpleado.jComboBoxid_empleado_evaluaEvaluacionEmpleado.getSelectedItem();
			} else {
				empleadoAux=(Empleado)jComboBoxid_empleado_evaluaEvaluacionEmpleadoGenerico.getSelectedItem();
			}

			if(empleadoAux!=null && empleadoAux.getId()!=null) {
				evaluacionempleado.setid_empleado_evalua(empleadoAux.getId());
				evaluacionempleado.setempleadoevalua_descripcion(EvaluacionEmpleadoConstantesFunciones.getEmpleadoEvaluaDescripcion(empleadoAux));
				evaluacionempleado.setEmpleadoEvalua(empleadoAux);			}
		}
		catch(Exception e)
		{
			throw e;
		}
	}

	@SuppressWarnings("rawtypes")
	public void setActualParaGuardarTipoEvaluacionEmpleadoForeignKey(EvaluacionEmpleado evaluacionempleado,JComboBox jComboBoxid_tipo_evaluacion_empleadoEvaluacionEmpleadoGenerico)throws Exception
	{
		try
		{
			TipoEvaluacionEmpleado  tipoevaluacionempleadoAux=new TipoEvaluacionEmpleado();

			if(jComboBoxid_tipo_evaluacion_empleadoEvaluacionEmpleadoGenerico==null) {
				tipoevaluacionempleadoAux=(TipoEvaluacionEmpleado)this.jInternalFrameDetalleFormEvaluacionEmpleado.jComboBoxid_tipo_evaluacion_empleadoEvaluacionEmpleado.getSelectedItem();
			} else {
				tipoevaluacionempleadoAux=(TipoEvaluacionEmpleado)jComboBoxid_tipo_evaluacion_empleadoEvaluacionEmpleadoGenerico.getSelectedItem();
			}

			if(tipoevaluacionempleadoAux!=null && tipoevaluacionempleadoAux.getId()!=null) {
				evaluacionempleado.setid_tipo_evaluacion_empleado(tipoevaluacionempleadoAux.getId());
				evaluacionempleado.settipoevaluacionempleado_descripcion(EvaluacionEmpleadoConstantesFunciones.getTipoEvaluacionEmpleadoDescripcion(tipoevaluacionempleadoAux));
				evaluacionempleado.setTipoEvaluacionEmpleado(tipoevaluacionempleadoAux);			}
		}
		catch(Exception e)
		{
			throw e;
		}
	}

	@SuppressWarnings("rawtypes")
	public void setActualParaGuardarAnioForeignKey(EvaluacionEmpleado evaluacionempleado,JComboBox jComboBoxid_anioEvaluacionEmpleadoGenerico)throws Exception
	{
		try
		{
			Anio  anioAux=new Anio();

			if(jComboBoxid_anioEvaluacionEmpleadoGenerico==null) {
				anioAux=(Anio)this.jInternalFrameDetalleFormEvaluacionEmpleado.jComboBoxid_anioEvaluacionEmpleado.getSelectedItem();
			} else {
				anioAux=(Anio)jComboBoxid_anioEvaluacionEmpleadoGenerico.getSelectedItem();
			}

			if(anioAux!=null) {
				evaluacionempleado.setid_anio(anioAux.getId());
				evaluacionempleado.setanio_descripcion(EvaluacionEmpleadoConstantesFunciones.getAnioDescripcion(anioAux));
				evaluacionempleado.setAnio(anioAux);			}
		}
		catch(Exception e)
		{
			throw e;
		}
	}

	@SuppressWarnings("rawtypes")
	public void setActualParaGuardarSemestreForeignKey(EvaluacionEmpleado evaluacionempleado,JComboBox jComboBoxid_semestreEvaluacionEmpleadoGenerico)throws Exception
	{
		try
		{
			Semestre  semestreAux=new Semestre();

			if(jComboBoxid_semestreEvaluacionEmpleadoGenerico==null) {
				semestreAux=(Semestre)this.jInternalFrameDetalleFormEvaluacionEmpleado.jComboBoxid_semestreEvaluacionEmpleado.getSelectedItem();
			} else {
				semestreAux=(Semestre)jComboBoxid_semestreEvaluacionEmpleadoGenerico.getSelectedItem();
			}

			if(semestreAux!=null && semestreAux.getId()!=null) {
				evaluacionempleado.setid_semestre(semestreAux.getId());
				evaluacionempleado.setsemestre_descripcion(EvaluacionEmpleadoConstantesFunciones.getSemestreDescripcion(semestreAux));
				evaluacionempleado.setSemestre(semestreAux);			}
		}
		catch(Exception e)
		{
			throw e;
		}
	}

	@SuppressWarnings("rawtypes")
	public void setActualParaGuardarTrimestreForeignKey(EvaluacionEmpleado evaluacionempleado,JComboBox jComboBoxid_trimestreEvaluacionEmpleadoGenerico)throws Exception
	{
		try
		{
			Trimestre  trimestreAux=new Trimestre();

			if(jComboBoxid_trimestreEvaluacionEmpleadoGenerico==null) {
				trimestreAux=(Trimestre)this.jInternalFrameDetalleFormEvaluacionEmpleado.jComboBoxid_trimestreEvaluacionEmpleado.getSelectedItem();
			} else {
				trimestreAux=(Trimestre)jComboBoxid_trimestreEvaluacionEmpleadoGenerico.getSelectedItem();
			}

			if(trimestreAux!=null && trimestreAux.getId()!=null) {
				evaluacionempleado.setid_trimestre(trimestreAux.getId());
				evaluacionempleado.settrimestre_descripcion(EvaluacionEmpleadoConstantesFunciones.getTrimestreDescripcion(trimestreAux));
				evaluacionempleado.setTrimestre(trimestreAux);			}
		}
		catch(Exception e)
		{
			throw e;
		}
	}

	@SuppressWarnings("rawtypes")
	public void setActualParaGuardarBimestreForeignKey(EvaluacionEmpleado evaluacionempleado,JComboBox jComboBoxid_bimestreEvaluacionEmpleadoGenerico)throws Exception
	{
		try
		{
			Bimestre  bimestreAux=new Bimestre();

			if(jComboBoxid_bimestreEvaluacionEmpleadoGenerico==null) {
				bimestreAux=(Bimestre)this.jInternalFrameDetalleFormEvaluacionEmpleado.jComboBoxid_bimestreEvaluacionEmpleado.getSelectedItem();
			} else {
				bimestreAux=(Bimestre)jComboBoxid_bimestreEvaluacionEmpleadoGenerico.getSelectedItem();
			}

			if(bimestreAux!=null && bimestreAux.getId()!=null) {
				evaluacionempleado.setid_bimestre(bimestreAux.getId());
				evaluacionempleado.setbimestre_descripcion(EvaluacionEmpleadoConstantesFunciones.getBimestreDescripcion(bimestreAux));
				evaluacionempleado.setBimestre(bimestreAux);			}
		}
		catch(Exception e)
		{
			throw e;
		}
	}

	@SuppressWarnings("rawtypes")
	public void setActualParaGuardarMesForeignKey(EvaluacionEmpleado evaluacionempleado,JComboBox jComboBoxid_mesEvaluacionEmpleadoGenerico)throws Exception
	{
		try
		{
			Mes  mesAux=new Mes();

			if(jComboBoxid_mesEvaluacionEmpleadoGenerico==null) {
				mesAux=(Mes)this.jInternalFrameDetalleFormEvaluacionEmpleado.jComboBoxid_mesEvaluacionEmpleado.getSelectedItem();
			} else {
				mesAux=(Mes)jComboBoxid_mesEvaluacionEmpleadoGenerico.getSelectedItem();
			}

			if(mesAux!=null) {
				evaluacionempleado.setid_mes(mesAux.getId());
				evaluacionempleado.setmes_descripcion(EvaluacionEmpleadoConstantesFunciones.getMesDescripcion(mesAux));
				evaluacionempleado.setMes(mesAux);			}
		}
		catch(Exception e)
		{
			throw e;
		}
	}

	
	


		@SuppressWarnings({ "unchecked", "rawtypes" })
		public void cargarCombosFrameEmpresasForeignKey(String sFormularioTipoBusqueda)throws Exception {
			try {

				JComboBoxBinding jComboBoxBindingEmpresa=null;

				if(sFormularioTipoBusqueda.equals("Formulario") || sFormularioTipoBusqueda.equals("Todos")){

					if(!EvaluacionEmpleadoJInternalFrame.ISBINDING_MANUAL) {
					} else {
						if(this.jInternalFrameDetalleFormEvaluacionEmpleado!=null) { 
							this.jInternalFrameDetalleFormEvaluacionEmpleado.jComboBoxid_empresaEvaluacionEmpleado.removeAllItems();

							for(Empresa empresa:this.empresasForeignKey) {
								this.jInternalFrameDetalleFormEvaluacionEmpleado.jComboBoxid_empresaEvaluacionEmpleado.addItem(empresa);
							}
						}
					}

					if(this.jInternalFrameDetalleFormEvaluacionEmpleado!=null) { 
					}

					if(!EvaluacionEmpleadoJInternalFrame.ISBINDING_MANUAL) {
					}
				}


				if(!this.conCargarMinimo) {


				}

			}  catch(Exception e) {
				throw e;
			}
		}

		@SuppressWarnings({ "unchecked", "rawtypes" })
		public void cargarCombosFrameSucursalsForeignKey(String sFormularioTipoBusqueda)throws Exception {
			try {

				JComboBoxBinding jComboBoxBindingSucursal=null;

				if(sFormularioTipoBusqueda.equals("Formulario") || sFormularioTipoBusqueda.equals("Todos")){

					if(!EvaluacionEmpleadoJInternalFrame.ISBINDING_MANUAL) {
					} else {
						if(this.jInternalFrameDetalleFormEvaluacionEmpleado!=null) { 
							this.jInternalFrameDetalleFormEvaluacionEmpleado.jComboBoxid_sucursalEvaluacionEmpleado.removeAllItems();

							for(Sucursal sucursal:this.sucursalsForeignKey) {
								this.jInternalFrameDetalleFormEvaluacionEmpleado.jComboBoxid_sucursalEvaluacionEmpleado.addItem(sucursal);
							}
						}
					}

					if(this.jInternalFrameDetalleFormEvaluacionEmpleado!=null) { 
					}

					if(!EvaluacionEmpleadoJInternalFrame.ISBINDING_MANUAL) {
					}
				}


				if(!this.conCargarMinimo) {


				}

			}  catch(Exception e) {
				throw e;
			}
		}

		@SuppressWarnings({ "unchecked", "rawtypes" })
		public void cargarCombosFrameEjerciciosForeignKey(String sFormularioTipoBusqueda)throws Exception {
			try {

				JComboBoxBinding jComboBoxBindingEjercicio=null;

				if(sFormularioTipoBusqueda.equals("Formulario") || sFormularioTipoBusqueda.equals("Todos")){

					if(!EvaluacionEmpleadoJInternalFrame.ISBINDING_MANUAL) {
					} else {
						if(this.jInternalFrameDetalleFormEvaluacionEmpleado!=null) { 
							this.jInternalFrameDetalleFormEvaluacionEmpleado.jComboBoxid_ejercicioEvaluacionEmpleado.removeAllItems();

							for(Ejercicio ejercicio:this.ejerciciosForeignKey) {
								this.jInternalFrameDetalleFormEvaluacionEmpleado.jComboBoxid_ejercicioEvaluacionEmpleado.addItem(ejercicio);
							}
						}
					}

					if(this.jInternalFrameDetalleFormEvaluacionEmpleado!=null) { 
					}

					if(!EvaluacionEmpleadoJInternalFrame.ISBINDING_MANUAL) {
					}
				}


				if(!this.conCargarMinimo) {


				}

			}  catch(Exception e) {
				throw e;
			}
		}

		@SuppressWarnings({ "unchecked", "rawtypes" })
		public void cargarCombosFramePeriodosForeignKey(String sFormularioTipoBusqueda)throws Exception {
			try {

				JComboBoxBinding jComboBoxBindingPeriodo=null;

				if(sFormularioTipoBusqueda.equals("Formulario") || sFormularioTipoBusqueda.equals("Todos")){

					if(!EvaluacionEmpleadoJInternalFrame.ISBINDING_MANUAL) {
					} else {
						if(this.jInternalFrameDetalleFormEvaluacionEmpleado!=null) { 
							this.jInternalFrameDetalleFormEvaluacionEmpleado.jComboBoxid_periodoEvaluacionEmpleado.removeAllItems();

							for(Periodo periodo:this.periodosForeignKey) {
								this.jInternalFrameDetalleFormEvaluacionEmpleado.jComboBoxid_periodoEvaluacionEmpleado.addItem(periodo);
							}
						}
					}

					if(this.jInternalFrameDetalleFormEvaluacionEmpleado!=null) { 
					}

					if(!EvaluacionEmpleadoJInternalFrame.ISBINDING_MANUAL) {
					}
				}


				if(!this.conCargarMinimo) {


				}

			}  catch(Exception e) {
				throw e;
			}
		}

		@SuppressWarnings({ "unchecked", "rawtypes" })
		public void cargarCombosFrameEstructurasForeignKey(String sFormularioTipoBusqueda)throws Exception {
			try {

				JComboBoxBinding jComboBoxBindingEstructura=null;

				if(sFormularioTipoBusqueda.equals("Formulario") || sFormularioTipoBusqueda.equals("Todos")){

					if(!EvaluacionEmpleadoJInternalFrame.ISBINDING_MANUAL) {
					} else {
						if(this.jInternalFrameDetalleFormEvaluacionEmpleado!=null) { 
							this.jInternalFrameDetalleFormEvaluacionEmpleado.jComboBoxid_estructuraEvaluacionEmpleado.removeAllItems();

							for(Estructura estructura:this.estructurasForeignKey) {
								this.jInternalFrameDetalleFormEvaluacionEmpleado.jComboBoxid_estructuraEvaluacionEmpleado.addItem(estructura);
							}
						}
					}

					if(this.jInternalFrameDetalleFormEvaluacionEmpleado!=null) { 
					}

					if(!EvaluacionEmpleadoJInternalFrame.ISBINDING_MANUAL) {
					}
				}


				if(!this.conCargarMinimo) {

					if(sFormularioTipoBusqueda.equals("FK_IdEstructura") || sFormularioTipoBusqueda.equals("Todos")){

						//BYDAN_BUSQUEDAS
						
						if(!EvaluacionEmpleadoJInternalFrame.ISBINDING_MANUAL) {
						} else {
							this.jComboBoxid_estructuraFK_IdEstructuraEvaluacionEmpleado.removeAllItems();

							for(Estructura estructura:this.estructurasForeignKey) {
								this.jComboBoxid_estructuraFK_IdEstructuraEvaluacionEmpleado.addItem(estructura);
							}
						}

						if(!EvaluacionEmpleadoJInternalFrame.ISBINDING_MANUAL) {
						}

						
					}

				}

			}  catch(Exception e) {
				throw e;
			}
		}

		@SuppressWarnings({ "unchecked", "rawtypes" })
		public void cargarCombosFrameEmpleadosForeignKey(String sFormularioTipoBusqueda)throws Exception {
			try {

				JComboBoxBinding jComboBoxBindingEmpleado=null;

				if(sFormularioTipoBusqueda.equals("Formulario") || sFormularioTipoBusqueda.equals("Todos")){

					if(!EvaluacionEmpleadoJInternalFrame.ISBINDING_MANUAL) {
					} else {
						if(this.jInternalFrameDetalleFormEvaluacionEmpleado!=null) { 
							this.jInternalFrameDetalleFormEvaluacionEmpleado.jComboBoxid_empleadoEvaluacionEmpleado.removeAllItems();

							for(Empleado empleado:this.empleadosForeignKey) {
								this.jInternalFrameDetalleFormEvaluacionEmpleado.jComboBoxid_empleadoEvaluacionEmpleado.addItem(empleado);
							}
						}
					}

					if(this.jInternalFrameDetalleFormEvaluacionEmpleado!=null) { 
					}

					if(!EvaluacionEmpleadoJInternalFrame.ISBINDING_MANUAL) {
					}
				}


				if(!this.conCargarMinimo) {

					if(sFormularioTipoBusqueda.equals("FK_IdEmpleado") || sFormularioTipoBusqueda.equals("Todos")){

						//BYDAN_BUSQUEDAS
						
						if(!EvaluacionEmpleadoJInternalFrame.ISBINDING_MANUAL) {
						} else {
							this.jComboBoxid_empleadoFK_IdEmpleadoEvaluacionEmpleado.removeAllItems();

							for(Empleado empleado:this.empleadosForeignKey) {
								this.jComboBoxid_empleadoFK_IdEmpleadoEvaluacionEmpleado.addItem(empleado);
							}
						}

						if(!EvaluacionEmpleadoJInternalFrame.ISBINDING_MANUAL) {
						}

						
					}

				}

			}  catch(Exception e) {
				throw e;
			}
		}

		@SuppressWarnings({ "unchecked", "rawtypes" })
		public void cargarCombosFrameEmpleadoEvaluasForeignKey(String sFormularioTipoBusqueda)throws Exception {
			try {

				JComboBoxBinding jComboBoxBindingEmpleado=null;

				if(sFormularioTipoBusqueda.equals("Formulario") || sFormularioTipoBusqueda.equals("Todos")){

					if(!EvaluacionEmpleadoJInternalFrame.ISBINDING_MANUAL) {
					} else {
						if(this.jInternalFrameDetalleFormEvaluacionEmpleado!=null) { 
							this.jInternalFrameDetalleFormEvaluacionEmpleado.jComboBoxid_empleado_evaluaEvaluacionEmpleado.removeAllItems();

							for(Empleado empleadoevalua:this.empleadoevaluasForeignKey) {
								this.jInternalFrameDetalleFormEvaluacionEmpleado.jComboBoxid_empleado_evaluaEvaluacionEmpleado.addItem(empleadoevalua);
							}
						}
					}

					if(this.jInternalFrameDetalleFormEvaluacionEmpleado!=null) { 
					}

					if(!EvaluacionEmpleadoJInternalFrame.ISBINDING_MANUAL) {
					}
				}


				if(!this.conCargarMinimo) {

					if(sFormularioTipoBusqueda.equals("FK_IdEmpleadoEvalua") || sFormularioTipoBusqueda.equals("Todos")){

						//BYDAN_BUSQUEDAS
						
						if(!EvaluacionEmpleadoJInternalFrame.ISBINDING_MANUAL) {
						} else {
							this.jComboBoxid_empleado_evaluaFK_IdEmpleadoEvaluaEvaluacionEmpleado.removeAllItems();

							for(Empleado empleadoevalua:this.empleadoevaluasForeignKey) {
								this.jComboBoxid_empleado_evaluaFK_IdEmpleadoEvaluaEvaluacionEmpleado.addItem(empleadoevalua);
							}
						}

						if(!EvaluacionEmpleadoJInternalFrame.ISBINDING_MANUAL) {
						}

						
					}

				}

			}  catch(Exception e) {
				throw e;
			}
		}

		@SuppressWarnings({ "unchecked", "rawtypes" })
		public void cargarCombosFrameTipoEvaluacionEmpleadosForeignKey(String sFormularioTipoBusqueda)throws Exception {
			try {

				JComboBoxBinding jComboBoxBindingTipoEvaluacionEmpleado=null;

				if(sFormularioTipoBusqueda.equals("Formulario") || sFormularioTipoBusqueda.equals("Todos")){

					if(!EvaluacionEmpleadoJInternalFrame.ISBINDING_MANUAL) {
					} else {
						if(this.jInternalFrameDetalleFormEvaluacionEmpleado!=null) { 
							this.jInternalFrameDetalleFormEvaluacionEmpleado.jComboBoxid_tipo_evaluacion_empleadoEvaluacionEmpleado.removeAllItems();

							for(TipoEvaluacionEmpleado tipoevaluacionempleado:this.tipoevaluacionempleadosForeignKey) {
								this.jInternalFrameDetalleFormEvaluacionEmpleado.jComboBoxid_tipo_evaluacion_empleadoEvaluacionEmpleado.addItem(tipoevaluacionempleado);
							}
						}
					}

					if(this.jInternalFrameDetalleFormEvaluacionEmpleado!=null) { 
					}

					if(!EvaluacionEmpleadoJInternalFrame.ISBINDING_MANUAL) {
					}
				}


				if(!this.conCargarMinimo) {

					if(sFormularioTipoBusqueda.equals("FK_IdTipoEvaluacionEmpleado") || sFormularioTipoBusqueda.equals("Todos")){

						//BYDAN_BUSQUEDAS
						
						if(!EvaluacionEmpleadoJInternalFrame.ISBINDING_MANUAL) {
						} else {
							this.jComboBoxid_tipo_evaluacion_empleadoFK_IdTipoEvaluacionEmpleadoEvaluacionEmpleado.removeAllItems();

							for(TipoEvaluacionEmpleado tipoevaluacionempleado:this.tipoevaluacionempleadosForeignKey) {
								this.jComboBoxid_tipo_evaluacion_empleadoFK_IdTipoEvaluacionEmpleadoEvaluacionEmpleado.addItem(tipoevaluacionempleado);
							}
						}

						if(!EvaluacionEmpleadoJInternalFrame.ISBINDING_MANUAL) {
						}

						
					}

				}

			}  catch(Exception e) {
				throw e;
			}
		}

		@SuppressWarnings({ "unchecked", "rawtypes" })
		public void cargarCombosFrameAniosForeignKey(String sFormularioTipoBusqueda)throws Exception {
			try {

				JComboBoxBinding jComboBoxBindingAnio=null;

				if(sFormularioTipoBusqueda.equals("Formulario") || sFormularioTipoBusqueda.equals("Todos")){

					if(!EvaluacionEmpleadoJInternalFrame.ISBINDING_MANUAL) {
					} else {
						if(this.jInternalFrameDetalleFormEvaluacionEmpleado!=null) { 
							this.jInternalFrameDetalleFormEvaluacionEmpleado.jComboBoxid_anioEvaluacionEmpleado.removeAllItems();

							for(Anio anio:this.aniosForeignKey) {
								this.jInternalFrameDetalleFormEvaluacionEmpleado.jComboBoxid_anioEvaluacionEmpleado.addItem(anio);
							}
						}
					}

					if(this.jInternalFrameDetalleFormEvaluacionEmpleado!=null) { 
					}

					if(!EvaluacionEmpleadoJInternalFrame.ISBINDING_MANUAL) {
					}
				}


				if(!this.conCargarMinimo) {

					if(sFormularioTipoBusqueda.equals("FK_IdAnio") || sFormularioTipoBusqueda.equals("Todos")){

						//BYDAN_BUSQUEDAS
						
						if(!EvaluacionEmpleadoJInternalFrame.ISBINDING_MANUAL) {
						} else {
							this.jComboBoxid_anioFK_IdAnioEvaluacionEmpleado.removeAllItems();

							for(Anio anio:this.aniosForeignKey) {
								this.jComboBoxid_anioFK_IdAnioEvaluacionEmpleado.addItem(anio);
							}
						}

						if(!EvaluacionEmpleadoJInternalFrame.ISBINDING_MANUAL) {
						}

						
					}

				}

			}  catch(Exception e) {
				throw e;
			}
		}

		@SuppressWarnings({ "unchecked", "rawtypes" })
		public void cargarCombosFrameSemestresForeignKey(String sFormularioTipoBusqueda)throws Exception {
			try {

				JComboBoxBinding jComboBoxBindingSemestre=null;

				if(sFormularioTipoBusqueda.equals("Formulario") || sFormularioTipoBusqueda.equals("Todos")){

					if(!EvaluacionEmpleadoJInternalFrame.ISBINDING_MANUAL) {
					} else {
						if(this.jInternalFrameDetalleFormEvaluacionEmpleado!=null) { 
							this.jInternalFrameDetalleFormEvaluacionEmpleado.jComboBoxid_semestreEvaluacionEmpleado.removeAllItems();

							for(Semestre semestre:this.semestresForeignKey) {
								this.jInternalFrameDetalleFormEvaluacionEmpleado.jComboBoxid_semestreEvaluacionEmpleado.addItem(semestre);
							}
						}
					}

					if(this.jInternalFrameDetalleFormEvaluacionEmpleado!=null) { 
					}

					if(!EvaluacionEmpleadoJInternalFrame.ISBINDING_MANUAL) {
					}
				}


				if(!this.conCargarMinimo) {

					if(sFormularioTipoBusqueda.equals("FK_IdSemestre") || sFormularioTipoBusqueda.equals("Todos")){

						//BYDAN_BUSQUEDAS
						
						if(!EvaluacionEmpleadoJInternalFrame.ISBINDING_MANUAL) {
						} else {
							this.jComboBoxid_semestreFK_IdSemestreEvaluacionEmpleado.removeAllItems();

							for(Semestre semestre:this.semestresForeignKey) {
								this.jComboBoxid_semestreFK_IdSemestreEvaluacionEmpleado.addItem(semestre);
							}
						}

						if(!EvaluacionEmpleadoJInternalFrame.ISBINDING_MANUAL) {
						}

						
					}

				}

			}  catch(Exception e) {
				throw e;
			}
		}

		@SuppressWarnings({ "unchecked", "rawtypes" })
		public void cargarCombosFrameTrimestresForeignKey(String sFormularioTipoBusqueda)throws Exception {
			try {

				JComboBoxBinding jComboBoxBindingTrimestre=null;

				if(sFormularioTipoBusqueda.equals("Formulario") || sFormularioTipoBusqueda.equals("Todos")){

					if(!EvaluacionEmpleadoJInternalFrame.ISBINDING_MANUAL) {
					} else {
						if(this.jInternalFrameDetalleFormEvaluacionEmpleado!=null) { 
							this.jInternalFrameDetalleFormEvaluacionEmpleado.jComboBoxid_trimestreEvaluacionEmpleado.removeAllItems();

							for(Trimestre trimestre:this.trimestresForeignKey) {
								this.jInternalFrameDetalleFormEvaluacionEmpleado.jComboBoxid_trimestreEvaluacionEmpleado.addItem(trimestre);
							}
						}
					}

					if(this.jInternalFrameDetalleFormEvaluacionEmpleado!=null) { 
					}

					if(!EvaluacionEmpleadoJInternalFrame.ISBINDING_MANUAL) {
					}
				}


				if(!this.conCargarMinimo) {

					if(sFormularioTipoBusqueda.equals("FK_IdTrimestre") || sFormularioTipoBusqueda.equals("Todos")){

						//BYDAN_BUSQUEDAS
						
						if(!EvaluacionEmpleadoJInternalFrame.ISBINDING_MANUAL) {
						} else {
							this.jComboBoxid_trimestreFK_IdTrimestreEvaluacionEmpleado.removeAllItems();

							for(Trimestre trimestre:this.trimestresForeignKey) {
								this.jComboBoxid_trimestreFK_IdTrimestreEvaluacionEmpleado.addItem(trimestre);
							}
						}

						if(!EvaluacionEmpleadoJInternalFrame.ISBINDING_MANUAL) {
						}

						
					}

				}

			}  catch(Exception e) {
				throw e;
			}
		}

		@SuppressWarnings({ "unchecked", "rawtypes" })
		public void cargarCombosFrameBimestresForeignKey(String sFormularioTipoBusqueda)throws Exception {
			try {

				JComboBoxBinding jComboBoxBindingBimestre=null;

				if(sFormularioTipoBusqueda.equals("Formulario") || sFormularioTipoBusqueda.equals("Todos")){

					if(!EvaluacionEmpleadoJInternalFrame.ISBINDING_MANUAL) {
					} else {
						if(this.jInternalFrameDetalleFormEvaluacionEmpleado!=null) { 
							this.jInternalFrameDetalleFormEvaluacionEmpleado.jComboBoxid_bimestreEvaluacionEmpleado.removeAllItems();

							for(Bimestre bimestre:this.bimestresForeignKey) {
								this.jInternalFrameDetalleFormEvaluacionEmpleado.jComboBoxid_bimestreEvaluacionEmpleado.addItem(bimestre);
							}
						}
					}

					if(this.jInternalFrameDetalleFormEvaluacionEmpleado!=null) { 
					}

					if(!EvaluacionEmpleadoJInternalFrame.ISBINDING_MANUAL) {
					}
				}


				if(!this.conCargarMinimo) {

					if(sFormularioTipoBusqueda.equals("FK_IdBimestre") || sFormularioTipoBusqueda.equals("Todos")){

						//BYDAN_BUSQUEDAS
						
						if(!EvaluacionEmpleadoJInternalFrame.ISBINDING_MANUAL) {
						} else {
							this.jComboBoxid_bimestreFK_IdBimestreEvaluacionEmpleado.removeAllItems();

							for(Bimestre bimestre:this.bimestresForeignKey) {
								this.jComboBoxid_bimestreFK_IdBimestreEvaluacionEmpleado.addItem(bimestre);
							}
						}

						if(!EvaluacionEmpleadoJInternalFrame.ISBINDING_MANUAL) {
						}

						
					}

				}

			}  catch(Exception e) {
				throw e;
			}
		}

		@SuppressWarnings({ "unchecked", "rawtypes" })
		public void cargarCombosFrameMessForeignKey(String sFormularioTipoBusqueda)throws Exception {
			try {

				JComboBoxBinding jComboBoxBindingMes=null;

				if(sFormularioTipoBusqueda.equals("Formulario") || sFormularioTipoBusqueda.equals("Todos")){

					if(!EvaluacionEmpleadoJInternalFrame.ISBINDING_MANUAL) {
					} else {
						if(this.jInternalFrameDetalleFormEvaluacionEmpleado!=null) { 
							this.jInternalFrameDetalleFormEvaluacionEmpleado.jComboBoxid_mesEvaluacionEmpleado.removeAllItems();

							for(Mes mes:this.messForeignKey) {
								this.jInternalFrameDetalleFormEvaluacionEmpleado.jComboBoxid_mesEvaluacionEmpleado.addItem(mes);
							}
						}
					}

					if(this.jInternalFrameDetalleFormEvaluacionEmpleado!=null) { 
					}

					if(!EvaluacionEmpleadoJInternalFrame.ISBINDING_MANUAL) {
					}
				}


				if(!this.conCargarMinimo) {

					if(sFormularioTipoBusqueda.equals("FK_IdMes") || sFormularioTipoBusqueda.equals("Todos")){

						//BYDAN_BUSQUEDAS
						
						if(!EvaluacionEmpleadoJInternalFrame.ISBINDING_MANUAL) {
						} else {
							this.jComboBoxid_mesFK_IdMesEvaluacionEmpleado.removeAllItems();

							for(Mes mes:this.messForeignKey) {
								this.jComboBoxid_mesFK_IdMesEvaluacionEmpleado.addItem(mes);
							}
						}

						if(!EvaluacionEmpleadoJInternalFrame.ISBINDING_MANUAL) {
						}

						
					}

				}

			}  catch(Exception e) {
				throw e;
			}
		}

	


		public void setSelectedItemCombosFrameEmpresaForeignKey(Empresa empresa,int iIndexSelected,Boolean conSelectedIndex,Boolean conFormulario,Boolean conBusqueda)throws Exception {
			try {

				if(conFormulario) {
					if(!conSelectedIndex) {
						if(this.jInternalFrameDetalleFormEvaluacionEmpleado!=null) {
							this.jInternalFrameDetalleFormEvaluacionEmpleado.jComboBoxid_empresaEvaluacionEmpleado.setSelectedItem(empresa);
						}
					} else {
						if(this.jInternalFrameDetalleFormEvaluacionEmpleado!=null) {
							this.jInternalFrameDetalleFormEvaluacionEmpleado.jComboBoxid_empresaEvaluacionEmpleado.setSelectedIndex(iIndexSelected);
						}
					}
				}


				if(!this.conCargarMinimo) {
					if(conBusqueda) {

					//BYDAN_BUSQUEDAS
					

										}
				}
			} catch(Exception e) {
				throw e;
			}
		}

		public void setSelectedItemCombosFrameSucursalForeignKey(Sucursal sucursal,int iIndexSelected,Boolean conSelectedIndex,Boolean conFormulario,Boolean conBusqueda)throws Exception {
			try {

				if(conFormulario) {
					if(!conSelectedIndex) {
						if(this.jInternalFrameDetalleFormEvaluacionEmpleado!=null) {
							this.jInternalFrameDetalleFormEvaluacionEmpleado.jComboBoxid_sucursalEvaluacionEmpleado.setSelectedItem(sucursal);
						}
					} else {
						if(this.jInternalFrameDetalleFormEvaluacionEmpleado!=null) {
							this.jInternalFrameDetalleFormEvaluacionEmpleado.jComboBoxid_sucursalEvaluacionEmpleado.setSelectedIndex(iIndexSelected);
						}
					}
				}


				if(!this.conCargarMinimo) {
					if(conBusqueda) {

					//BYDAN_BUSQUEDAS
					

										}
				}
			} catch(Exception e) {
				throw e;
			}
		}

		public void setSelectedItemCombosFrameEjercicioForeignKey(Ejercicio ejercicio,int iIndexSelected,Boolean conSelectedIndex,Boolean conFormulario,Boolean conBusqueda)throws Exception {
			try {

				if(conFormulario) {
					if(!conSelectedIndex) {
						if(this.jInternalFrameDetalleFormEvaluacionEmpleado!=null) {
							this.jInternalFrameDetalleFormEvaluacionEmpleado.jComboBoxid_ejercicioEvaluacionEmpleado.setSelectedItem(ejercicio);
						}
					} else {
						if(this.jInternalFrameDetalleFormEvaluacionEmpleado!=null) {
							this.jInternalFrameDetalleFormEvaluacionEmpleado.jComboBoxid_ejercicioEvaluacionEmpleado.setSelectedIndex(iIndexSelected);
						}
					}
				}


				if(!this.conCargarMinimo) {
					if(conBusqueda) {

					//BYDAN_BUSQUEDAS
					

										}
				}
			} catch(Exception e) {
				throw e;
			}
		}

		public void setSelectedItemCombosFramePeriodoForeignKey(Periodo periodo,int iIndexSelected,Boolean conSelectedIndex,Boolean conFormulario,Boolean conBusqueda)throws Exception {
			try {

				if(conFormulario) {
					if(!conSelectedIndex) {
						if(this.jInternalFrameDetalleFormEvaluacionEmpleado!=null) {
							this.jInternalFrameDetalleFormEvaluacionEmpleado.jComboBoxid_periodoEvaluacionEmpleado.setSelectedItem(periodo);
						}
					} else {
						if(this.jInternalFrameDetalleFormEvaluacionEmpleado!=null) {
							this.jInternalFrameDetalleFormEvaluacionEmpleado.jComboBoxid_periodoEvaluacionEmpleado.setSelectedIndex(iIndexSelected);
						}
					}
				}


				if(!this.conCargarMinimo) {
					if(conBusqueda) {

					//BYDAN_BUSQUEDAS
					

										}
				}
			} catch(Exception e) {
				throw e;
			}
		}

		public void setSelectedItemCombosFrameEstructuraForeignKey(Estructura estructura,int iIndexSelected,Boolean conSelectedIndex,Boolean conFormulario,Boolean conBusqueda)throws Exception {
			try {

				if(conFormulario) {
					if(!conSelectedIndex) {
						if(this.jInternalFrameDetalleFormEvaluacionEmpleado!=null) {
							this.jInternalFrameDetalleFormEvaluacionEmpleado.jComboBoxid_estructuraEvaluacionEmpleado.setSelectedItem(estructura);
						}
					} else {
						if(this.jInternalFrameDetalleFormEvaluacionEmpleado!=null) {
							this.jInternalFrameDetalleFormEvaluacionEmpleado.jComboBoxid_estructuraEvaluacionEmpleado.setSelectedIndex(iIndexSelected);
						}
					}
				}


				if(!this.conCargarMinimo) {
					if(conBusqueda) {

					//BYDAN_BUSQUEDAS
					
						if(!conSelectedIndex) {
							this.jComboBoxid_estructuraFK_IdEstructuraEvaluacionEmpleado.setSelectedItem(estructura);
						} else {
							this.jComboBoxid_estructuraFK_IdEstructuraEvaluacionEmpleado.setSelectedIndex(iIndexSelected);
						}

										}
				}
			} catch(Exception e) {
				throw e;
			}
		}

		public void setSelectedItemCombosFrameEmpleadoForeignKey(Empleado empleado,int iIndexSelected,Boolean conSelectedIndex,Boolean conFormulario,Boolean conBusqueda)throws Exception {
			try {

				if(conFormulario) {
					if(!conSelectedIndex) {
						if(this.jInternalFrameDetalleFormEvaluacionEmpleado!=null) {
							this.jInternalFrameDetalleFormEvaluacionEmpleado.jComboBoxid_empleadoEvaluacionEmpleado.setSelectedItem(empleado);
						}
					} else {
						if(this.jInternalFrameDetalleFormEvaluacionEmpleado!=null) {
							this.jInternalFrameDetalleFormEvaluacionEmpleado.jComboBoxid_empleadoEvaluacionEmpleado.setSelectedIndex(iIndexSelected);
						}
					}
				}


				if(!this.conCargarMinimo) {
					if(conBusqueda) {

					//BYDAN_BUSQUEDAS
					
						if(!conSelectedIndex) {
							this.jComboBoxid_empleadoFK_IdEmpleadoEvaluacionEmpleado.setSelectedItem(empleado);
						} else {
							this.jComboBoxid_empleadoFK_IdEmpleadoEvaluacionEmpleado.setSelectedIndex(iIndexSelected);
						}

										}
				}
			} catch(Exception e) {
				throw e;
			}
		}

		public void setSelectedItemCombosFrameEmpleadoEvaluaForeignKey(Empleado empleadoevalua,int iIndexSelected,Boolean conSelectedIndex,Boolean conFormulario,Boolean conBusqueda)throws Exception {
			try {

				if(conFormulario) {
					if(!conSelectedIndex) {
						if(this.jInternalFrameDetalleFormEvaluacionEmpleado!=null) {
							this.jInternalFrameDetalleFormEvaluacionEmpleado.jComboBoxid_empleado_evaluaEvaluacionEmpleado.setSelectedItem(empleadoevalua);
						}
					} else {
						if(this.jInternalFrameDetalleFormEvaluacionEmpleado!=null) {
							this.jInternalFrameDetalleFormEvaluacionEmpleado.jComboBoxid_empleado_evaluaEvaluacionEmpleado.setSelectedIndex(iIndexSelected);
						}
					}
				}


				if(!this.conCargarMinimo) {
					if(conBusqueda) {

					//BYDAN_BUSQUEDAS
					
						if(!conSelectedIndex) {
							this.jComboBoxid_empleado_evaluaFK_IdEmpleadoEvaluaEvaluacionEmpleado.setSelectedItem(empleadoevalua);
						} else {
							this.jComboBoxid_empleado_evaluaFK_IdEmpleadoEvaluaEvaluacionEmpleado.setSelectedIndex(iIndexSelected);
						}

										}
				}
			} catch(Exception e) {
				throw e;
			}
		}

		public void setSelectedItemCombosFrameTipoEvaluacionEmpleadoForeignKey(TipoEvaluacionEmpleado tipoevaluacionempleado,int iIndexSelected,Boolean conSelectedIndex,Boolean conFormulario,Boolean conBusqueda)throws Exception {
			try {

				if(conFormulario) {
					if(!conSelectedIndex) {
						if(this.jInternalFrameDetalleFormEvaluacionEmpleado!=null) {
							this.jInternalFrameDetalleFormEvaluacionEmpleado.jComboBoxid_tipo_evaluacion_empleadoEvaluacionEmpleado.setSelectedItem(tipoevaluacionempleado);
						}
					} else {
						if(this.jInternalFrameDetalleFormEvaluacionEmpleado!=null) {
							this.jInternalFrameDetalleFormEvaluacionEmpleado.jComboBoxid_tipo_evaluacion_empleadoEvaluacionEmpleado.setSelectedIndex(iIndexSelected);
						}
					}
				}


				if(!this.conCargarMinimo) {
					if(conBusqueda) {

					//BYDAN_BUSQUEDAS
					
						if(!conSelectedIndex) {
							this.jComboBoxid_tipo_evaluacion_empleadoFK_IdTipoEvaluacionEmpleadoEvaluacionEmpleado.setSelectedItem(tipoevaluacionempleado);
						} else {
							this.jComboBoxid_tipo_evaluacion_empleadoFK_IdTipoEvaluacionEmpleadoEvaluacionEmpleado.setSelectedIndex(iIndexSelected);
						}

										}
				}
			} catch(Exception e) {
				throw e;
			}
		}

		public void setSelectedItemCombosFrameAnioForeignKey(Anio anio,int iIndexSelected,Boolean conSelectedIndex,Boolean conFormulario,Boolean conBusqueda)throws Exception {
			try {

				if(conFormulario) {
					if(!conSelectedIndex) {
						if(this.jInternalFrameDetalleFormEvaluacionEmpleado!=null) {
							this.jInternalFrameDetalleFormEvaluacionEmpleado.jComboBoxid_anioEvaluacionEmpleado.setSelectedItem(anio);
						}
					} else {
						if(this.jInternalFrameDetalleFormEvaluacionEmpleado!=null) {
							this.jInternalFrameDetalleFormEvaluacionEmpleado.jComboBoxid_anioEvaluacionEmpleado.setSelectedIndex(iIndexSelected);
						}
					}
				}


				if(!this.conCargarMinimo) {
					if(conBusqueda) {

					//BYDAN_BUSQUEDAS
					
						if(!conSelectedIndex) {
							this.jComboBoxid_anioFK_IdAnioEvaluacionEmpleado.setSelectedItem(anio);
						} else {
							this.jComboBoxid_anioFK_IdAnioEvaluacionEmpleado.setSelectedIndex(iIndexSelected);
						}

										}
				}
			} catch(Exception e) {
				throw e;
			}
		}

		public void setSelectedItemCombosFrameSemestreForeignKey(Semestre semestre,int iIndexSelected,Boolean conSelectedIndex,Boolean conFormulario,Boolean conBusqueda)throws Exception {
			try {

				if(conFormulario) {
					if(!conSelectedIndex) {
						if(this.jInternalFrameDetalleFormEvaluacionEmpleado!=null) {
							this.jInternalFrameDetalleFormEvaluacionEmpleado.jComboBoxid_semestreEvaluacionEmpleado.setSelectedItem(semestre);
						}
					} else {
						if(this.jInternalFrameDetalleFormEvaluacionEmpleado!=null) {
							this.jInternalFrameDetalleFormEvaluacionEmpleado.jComboBoxid_semestreEvaluacionEmpleado.setSelectedIndex(iIndexSelected);
						}
					}
				}


				if(!this.conCargarMinimo) {
					if(conBusqueda) {

					//BYDAN_BUSQUEDAS
					
						if(!conSelectedIndex) {
							this.jComboBoxid_semestreFK_IdSemestreEvaluacionEmpleado.setSelectedItem(semestre);
						} else {
							this.jComboBoxid_semestreFK_IdSemestreEvaluacionEmpleado.setSelectedIndex(iIndexSelected);
						}

										}
				}
			} catch(Exception e) {
				throw e;
			}
		}

		public void setSelectedItemCombosFrameTrimestreForeignKey(Trimestre trimestre,int iIndexSelected,Boolean conSelectedIndex,Boolean conFormulario,Boolean conBusqueda)throws Exception {
			try {

				if(conFormulario) {
					if(!conSelectedIndex) {
						if(this.jInternalFrameDetalleFormEvaluacionEmpleado!=null) {
							this.jInternalFrameDetalleFormEvaluacionEmpleado.jComboBoxid_trimestreEvaluacionEmpleado.setSelectedItem(trimestre);
						}
					} else {
						if(this.jInternalFrameDetalleFormEvaluacionEmpleado!=null) {
							this.jInternalFrameDetalleFormEvaluacionEmpleado.jComboBoxid_trimestreEvaluacionEmpleado.setSelectedIndex(iIndexSelected);
						}
					}
				}


				if(!this.conCargarMinimo) {
					if(conBusqueda) {

					//BYDAN_BUSQUEDAS
					
						if(!conSelectedIndex) {
							this.jComboBoxid_trimestreFK_IdTrimestreEvaluacionEmpleado.setSelectedItem(trimestre);
						} else {
							this.jComboBoxid_trimestreFK_IdTrimestreEvaluacionEmpleado.setSelectedIndex(iIndexSelected);
						}

										}
				}
			} catch(Exception e) {
				throw e;
			}
		}

		public void setSelectedItemCombosFrameBimestreForeignKey(Bimestre bimestre,int iIndexSelected,Boolean conSelectedIndex,Boolean conFormulario,Boolean conBusqueda)throws Exception {
			try {

				if(conFormulario) {
					if(!conSelectedIndex) {
						if(this.jInternalFrameDetalleFormEvaluacionEmpleado!=null) {
							this.jInternalFrameDetalleFormEvaluacionEmpleado.jComboBoxid_bimestreEvaluacionEmpleado.setSelectedItem(bimestre);
						}
					} else {
						if(this.jInternalFrameDetalleFormEvaluacionEmpleado!=null) {
							this.jInternalFrameDetalleFormEvaluacionEmpleado.jComboBoxid_bimestreEvaluacionEmpleado.setSelectedIndex(iIndexSelected);
						}
					}
				}


				if(!this.conCargarMinimo) {
					if(conBusqueda) {

					//BYDAN_BUSQUEDAS
					
						if(!conSelectedIndex) {
							this.jComboBoxid_bimestreFK_IdBimestreEvaluacionEmpleado.setSelectedItem(bimestre);
						} else {
							this.jComboBoxid_bimestreFK_IdBimestreEvaluacionEmpleado.setSelectedIndex(iIndexSelected);
						}

										}
				}
			} catch(Exception e) {
				throw e;
			}
		}

		public void setSelectedItemCombosFrameMesForeignKey(Mes mes,int iIndexSelected,Boolean conSelectedIndex,Boolean conFormulario,Boolean conBusqueda)throws Exception {
			try {

				if(conFormulario) {
					if(!conSelectedIndex) {
						if(this.jInternalFrameDetalleFormEvaluacionEmpleado!=null) {
							this.jInternalFrameDetalleFormEvaluacionEmpleado.jComboBoxid_mesEvaluacionEmpleado.setSelectedItem(mes);
						}
					} else {
						if(this.jInternalFrameDetalleFormEvaluacionEmpleado!=null) {
							this.jInternalFrameDetalleFormEvaluacionEmpleado.jComboBoxid_mesEvaluacionEmpleado.setSelectedIndex(iIndexSelected);
						}
					}
				}


				if(!this.conCargarMinimo) {
					if(conBusqueda) {

					//BYDAN_BUSQUEDAS
					
						if(!conSelectedIndex) {
							this.jComboBoxid_mesFK_IdMesEvaluacionEmpleado.setSelectedItem(mes);
						} else {
							this.jComboBoxid_mesFK_IdMesEvaluacionEmpleado.setSelectedIndex(iIndexSelected);
						}

										}
				}
			} catch(Exception e) {
				throw e;
			}
		}

	


	
	public void refrescarForeignKeysDescripcionesEvaluacionEmpleado() throws Exception {
		//SI FUNCIONA DEEPLOAD ESTO VA AL ULTIMO
		if(Constantes.ISUSAEJBLOGICLAYER) {
			EvaluacionEmpleadoConstantesFunciones.refrescarForeignKeysDescripcionesEvaluacionEmpleado(this.evaluacionempleadoLogic.getEvaluacionEmpleados());
		} else if(Constantes.ISUSAEJBREMOTE || Constantes.ISUSAEJBHOME) {
			EvaluacionEmpleadoConstantesFunciones.refrescarForeignKeysDescripcionesEvaluacionEmpleado(this.evaluacionempleados);
		}
		
		/*
		ArrayList<Classe> classes=new ArrayList<Classe>();
		
		classes.add(new Classe(Empresa.class));
		classes.add(new Classe(Sucursal.class));
		classes.add(new Classe(Ejercicio.class));
		classes.add(new Classe(Periodo.class));
		classes.add(new Classe(Estructura.class));
		classes.add(new Classe(Empleado.class));
		classes.add(new Classe(TipoEvaluacionEmpleado.class));
		classes.add(new Classe(Anio.class));
		classes.add(new Classe(Semestre.class));
		classes.add(new Classe(Trimestre.class));
		classes.add(new Classe(Bimestre.class));
		classes.add(new Classe(Mes.class));
			
		if(Constantes.ISUSAEJBLOGICLAYER) {
			//USA LOS OBJETOS DE LOGIC DIRECTAMENTE
			//evaluacionempleadoLogic.setEvaluacionEmpleados(this.evaluacionempleados);
			evaluacionempleadoLogic.deepLoadsWithConnection(false, DeepLoadType.INCLUDE, classes,"");
	
		} else if(Constantes.ISUSAEJBREMOTE) {
		} else if(Constantes.ISUSAEJBHOME) {
		}
		*/				
	}	
	
	
	
	public Integer getiNumeroPaginacion() {
		return iNumeroPaginacion;
	}

	public void setiNumeroPaginacion(Integer iNumeroPaginacion) {
		this.iNumeroPaginacion= iNumeroPaginacion;
	}
	
	public Integer getiNumeroPaginacionPagina() {
		return iNumeroPaginacionPagina;
	}

	public void setiNumeroPaginacionPagina(Integer iNumeroPaginacionPagina) {
		this.iNumeroPaginacionPagina= iNumeroPaginacionPagina;
	}
	
	
	public Boolean getIsSeleccionarTodos() {
		return this.isSeleccionarTodos;
	}

	public void setIsSeleccionarTodos(Boolean isSeleccionarTodos) {
		this.isSeleccionarTodos= isSeleccionarTodos;
	}
	
	public Boolean getEsControlTabla() {
		return this.esControlTabla;
	}

	public void setEsControlTabla(Boolean esControlTabla) {
		this.esControlTabla= esControlTabla;
	}
	
	public Boolean getIsSeleccionados() {
		return this.isSeleccionados;
	}

	public void setIsSeleccionados(Boolean isSeleccionados) {
		this.isSeleccionados= isSeleccionados;
	}
	
	public Boolean getIsPostAccionNuevo() {
		return this.isPostAccionNuevo;
	}

	public void setIsPostAccionNuevo(Boolean isPostAccionNuevo) {
		this.isPostAccionNuevo= isPostAccionNuevo;
	}
	
	public Boolean getIsPostAccionSinCerrar() {
		return this.isPostAccionSinCerrar;
	}

	public void setIsPostAccionSinCerrar(Boolean isPostAccionSinCerrar) {
		this.isPostAccionSinCerrar= isPostAccionSinCerrar;
	}
	
	public Boolean getIsPostAccionSinMensaje() {
		return this.isPostAccionSinMensaje;
	}

	public void setIsPostAccionSinMensaje(Boolean isPostAccionSinMensaje) {
		this.isPostAccionSinMensaje= isPostAccionSinMensaje;
	}
	
	public Boolean getConGraficoReporte() {
		return this.conGraficoReporte;
	}

	public void setConGraficoReporte(Boolean conGraficoReporte) {
		this.conGraficoReporte= conGraficoReporte;
	}
	
	
	public ArrayList<Reporte> gettiposArchivosReportes() {
		return this.tiposArchivosReportes;
	}
	
	public void settiposArchivosReportes(ArrayList<Reporte> tiposArchivosReportes) {
		this.tiposArchivosReportes = tiposArchivosReportes;
	}
	
	//TIPOS ARCHIVOS DINAMICOS
	public ArrayList<Reporte> gettiposArchivosReportesDinamico() {
		return this.tiposArchivosReportesDinamico;
	}
	
	public void settiposArchivosReportesDinamico(ArrayList<Reporte> tiposArchivosReportesDinamico) {
		this.tiposArchivosReportesDinamico = tiposArchivosReportesDinamico;
	}
	
	//TIPOS REPORTES
	public ArrayList<Reporte> gettiposReportes() {
		return this.tiposReportes;
	}
	
	public void settiposReportes(ArrayList<Reporte> tiposReportes) {
		this.tiposReportes = tiposReportes;
	}
	
	//TIPOS REPORTES
	public ArrayList<Reporte> gettiposReportesDinamico() {
		return this.tiposReportesDinamico;
	}
	
	public void settiposReportesDinamico(ArrayList<Reporte> tiposReportesDinamico) {
		this.tiposReportesDinamico = tiposReportesDinamico;
	}
	
	//TIPOS GRAFICOS REPORTES
	public ArrayList<Reporte> gettiposGraficosReportes() {
		return this.tiposGraficosReportes;
	}
	
	public void settiposGraficosReportes(ArrayList<Reporte> tiposGraficosReportes) {
		this.tiposGraficosReportes = tiposGraficosReportes;
	}
	
	public ArrayList<Reporte> gettiposPaginacion() {
		return this.tiposPaginacion;
	}
	
	public void settiposPaginacion(ArrayList<Reporte> tiposPaginacion) {
		this.tiposPaginacion = tiposPaginacion;
	}
	
	public ArrayList<Reporte> gettiposRelaciones() {
		return this.tiposRelaciones;
	}
	
	public void settiposRelaciones(ArrayList<Reporte> tiposRelaciones) {
		this.tiposRelaciones= tiposRelaciones;
	}
	
	public ArrayList<Reporte> gettiposAcciones() {
		return this.tiposAcciones;
	}
	
	public void settiposAcciones(ArrayList<Reporte> tiposAcciones) {
		this.tiposAcciones = tiposAcciones;
	}
	
	public ArrayList<Reporte> gettiposAccionesFormulario() {
		return this.tiposAccionesFormulario;
	}
	
	public void settiposAccionesFormulario(ArrayList<Reporte> tiposAccionesFormulario) {
		this.tiposAccionesFormulario = tiposAccionesFormulario;
	}
	
	public ArrayList<Reporte> gettiposSeleccionar() {
		return this.tiposSeleccionar;
	}
	
	public void settiposSeleccionar(ArrayList<Reporte> tiposSeleccionar) {
		this.tiposSeleccionar = tiposSeleccionar;
	}
	
	public ArrayList<Reporte> gettiposColumnasSelect() {
		return this.tiposColumnasSelect;
	}
	
	public void settiposColumnasSelect(ArrayList<Reporte> tiposColumnasSelect) {
		this.tiposColumnasSelect = tiposColumnasSelect;
	}
		
	public ArrayList<Reporte> gettiposRelacionesSelect() {
		return this.tiposRelacionesSelect;
	}
	
	public void settiposRelacionesSelect(ArrayList<Reporte> tiposRelacionesSelect) {
		this.tiposRelacionesSelect = tiposRelacionesSelect;
	}
	
	public Long getIIdUsuarioSesion() {
		return lIdUsuarioSesion;
	}

	public void setIIdUsuarioSesion(Long lIdUsuarioSesion) {
		this.lIdUsuarioSesion = lIdUsuarioSesion;
	}
	
	
	public List<Accion> getAccions() {
		return this.accions;
	}

	public void setAccions(List<Accion> accions) {
		this.accions = accions;
	}
	
	public List<Accion> getAccionsFormulario() {
		return this.accionsFormulario;
	}

	public void setAccionsFormulario(List<Accion> accionsFormulario) {
		this.accionsFormulario = accionsFormulario;
	}
	
	public String getsAccionMantenimiento() {
		return sAccionMantenimiento;
	}

	public void setsAccionMantenimiento(String sAccionMantenimiento) {
		this.sAccionMantenimiento = sAccionMantenimiento;
	}

	public String getsAccionBusqueda() {
		return sAccionBusqueda;
	}

	public void setsAccionBusqueda(String sAccionBusqueda) {
		this.sAccionBusqueda = sAccionBusqueda;
	}

	public String getsAccionAdicional() {
		return sAccionAdicional;
	}

	public void setsAccionAdicional(String sAccionAdicional) {
		this.sAccionAdicional = sAccionAdicional;
	}

	public String getsUltimaBusqueda() {
		return sUltimaBusqueda;
	}

	public void setsUltimaBusqueda(String sUltimaBusqueda) {
		this.sUltimaBusqueda = sUltimaBusqueda;
	}
	
	public String getsTipoArchivoReporte() {
		return sTipoArchivoReporte;
	}

	public void setsTipoArchivoReporte(String sTipoArchivoReporte) {
		this.sTipoArchivoReporte = sTipoArchivoReporte;
	}
	
	public String getsTipoArchivoReporteDinamico() {
		return sTipoArchivoReporteDinamico;
	}

	public void setsTipoArchivoReporteDinamico(String sTipoArchivoReporteDinamico) {
		this.sTipoArchivoReporteDinamico = sTipoArchivoReporteDinamico;
	}
	
	public String getsTipoReporte() {
		return sTipoReporte;
	}

	public void setsTipoReporte(String sTipoReporte) {
		this.sTipoReporte = sTipoReporte;
	}
	
	public String getsTipoReporteDinamico() {
		return sTipoReporteDinamico;
	}

	public void setsTipoReporteDinamico(String sTipoReporteDinamico) {
		this.sTipoReporteDinamico = sTipoReporteDinamico;
	}
	
	public String getsTipoGraficoReporte() {
		return sTipoGraficoReporte;
	}

	public void setsTipoGraficoReporte(String sTipoGraficoReporte) {
		this.sTipoGraficoReporte = sTipoGraficoReporte;
	}
	
	public String getsTipoPaginacion() {
		return sTipoPaginacion;
	}

	public void setsTipoPaginacion(String sTipoPaginacion) {
		this.sTipoPaginacion = sTipoPaginacion;
	}
	
	public String getsTipoRelacion() {
		return sTipoRelacion;
	}

	public void setsTipoRelacion(String sTipoRelacion) {
		this.sTipoRelacion = sTipoRelacion;
	}
	
	public String getsTipoAccion() {
		return sTipoAccion;
	}

	public void setsTipoAccion(String sTipoAccion) {
		this.sTipoAccion = sTipoAccion;
	}
	
	public String getsTipoAccionFormulario() {
		return sTipoAccionFormulario;
	}

	public void setsTipoAccionFormulario(String sTipoAccionFormulario) {
		this.sTipoAccionFormulario = sTipoAccionFormulario;
	}
	
	public String getsTipoSeleccionar() {
		return sTipoSeleccionar;
	}

	public void setsTipoSeleccionar(String sTipoSeleccionar) {
		this.sTipoSeleccionar = sTipoSeleccionar;
	}
	
	public String getsValorCampoGeneral() {
		return sValorCampoGeneral;
	}

	public void setsValorCampoGeneral(String sValorCampoGeneral) {
		this.sValorCampoGeneral = sValorCampoGeneral;
	}			

	public String getsDetalleReporte() {
		return sDetalleReporte;
	}

	public void setsDetalleReporte(String sDetalleReporte) {
		this.sDetalleReporte = sDetalleReporte;
	}
	
	
	public String getsTipoReporteExtra() {
		return sTipoReporteExtra;
	}

	public void setsTipoReporteExtra(String sTipoReporteExtra) {
		this.sTipoReporteExtra = sTipoReporteExtra;
	}
	
	public Boolean getesReporteDinamico() {
		return esReporteDinamico;
	}	
	
	public void setesReporteDinamico(Boolean esReporteDinamico) {
		this.esReporteDinamico = esReporteDinamico;
	}
	
	public Boolean getesRecargarFks() {
		return esRecargarFks;
	}	
	
	public void setesRecargarFks(Boolean esRecargarFks) {
		this.esRecargarFks = esRecargarFks;
	}
	
	public Boolean getesReporteAccionProceso() {
		return esReporteAccionProceso;
	}	
	
	public void setesReporteAccionProceso(Boolean esReporteAccionProceso) {
		this.esReporteAccionProceso= esReporteAccionProceso;
	}
		
	public EvaluacionEmpleadoParameterReturnGeneral getEvaluacionEmpleadoParameterGeneral() {
		return this.evaluacionempleadoParameterGeneral;
	}
	
	public void setEvaluacionEmpleadoParameterGeneral(EvaluacionEmpleadoParameterReturnGeneral evaluacionempleadoParameterGeneral) {
		this.evaluacionempleadoParameterGeneral = evaluacionempleadoParameterGeneral;
	}
	
	public String getsPathReporteDinamico() {
		return sPathReporteDinamico;
	}

	public void setsPathReporteDinamico(String sPathReporteDinamico) {
		this.sPathReporteDinamico = sPathReporteDinamico;
	}
		
	public Boolean getisMostrarNumeroPaginacion() {
		return isMostrarNumeroPaginacion;
	}

	public void setisMostrarNumeroPaginacion(Boolean isMostrarNumeroPaginacion) {
		this.isMostrarNumeroPaginacion = isMostrarNumeroPaginacion;
	}
	
	public Mensaje getMensaje() {
		return mensaje;
	}

	public void setMensaje(Mensaje mensaje) {
		this.mensaje = mensaje;
	}
	
	public Boolean getIsPermisoTodoEvaluacionEmpleado() {
		return isPermisoTodoEvaluacionEmpleado;
	}

	public void setIsPermisoTodoEvaluacionEmpleado(Boolean isPermisoTodoEvaluacionEmpleado) {
		this.isPermisoTodoEvaluacionEmpleado = isPermisoTodoEvaluacionEmpleado;
	}

	public Boolean getIsPermisoNuevoEvaluacionEmpleado() {
		return isPermisoNuevoEvaluacionEmpleado;
	}

	public void setIsPermisoNuevoEvaluacionEmpleado(Boolean isPermisoNuevoEvaluacionEmpleado) {
		this.isPermisoNuevoEvaluacionEmpleado = isPermisoNuevoEvaluacionEmpleado;
	}

	public Boolean getIsPermisoActualizarEvaluacionEmpleado() {
		return isPermisoActualizarEvaluacionEmpleado;
	}

	public void setIsPermisoActualizarEvaluacionEmpleado(Boolean isPermisoActualizarEvaluacionEmpleado) {
		this.isPermisoActualizarEvaluacionEmpleado = isPermisoActualizarEvaluacionEmpleado;
	}

	public Boolean getIsPermisoEliminarEvaluacionEmpleado() {
		return isPermisoEliminarEvaluacionEmpleado;
	}

	public void setIsPermisoEliminarEvaluacionEmpleado(Boolean isPermisoEliminarEvaluacionEmpleado) {
		this.isPermisoEliminarEvaluacionEmpleado = isPermisoEliminarEvaluacionEmpleado;
	}

	public Boolean getIsPermisoGuardarCambiosEvaluacionEmpleado() {
		return isPermisoGuardarCambiosEvaluacionEmpleado;
	}

	public void setIsPermisoGuardarCambiosEvaluacionEmpleado(Boolean isPermisoGuardarCambiosEvaluacionEmpleado) {
		this.isPermisoGuardarCambiosEvaluacionEmpleado = isPermisoGuardarCambiosEvaluacionEmpleado;
	}
	
	public Boolean getIsPermisoConsultaEvaluacionEmpleado() {
		return isPermisoConsultaEvaluacionEmpleado;
	}

	public void setIsPermisoConsultaEvaluacionEmpleado(Boolean isPermisoConsultaEvaluacionEmpleado) {
		this.isPermisoConsultaEvaluacionEmpleado = isPermisoConsultaEvaluacionEmpleado;
	}

	public Boolean getIsPermisoBusquedaEvaluacionEmpleado() {
		return isPermisoBusquedaEvaluacionEmpleado;
	}

	public void setIsPermisoBusquedaEvaluacionEmpleado(Boolean isPermisoBusquedaEvaluacionEmpleado) {
		this.isPermisoBusquedaEvaluacionEmpleado = isPermisoBusquedaEvaluacionEmpleado;
	}

	public Boolean getIsPermisoReporteEvaluacionEmpleado() {
		return isPermisoReporteEvaluacionEmpleado;
	}

	public void setIsPermisoReporteEvaluacionEmpleado(Boolean isPermisoReporteEvaluacionEmpleado) {
		this.isPermisoReporteEvaluacionEmpleado = isPermisoReporteEvaluacionEmpleado;
	}
	
	public Boolean getIsPermisoPaginacionMedioEvaluacionEmpleado() {
		return isPermisoPaginacionMedioEvaluacionEmpleado;
	}

	public void setIsPermisoPaginacionMedioEvaluacionEmpleado(Boolean isPermisoPaginacionMedioEvaluacionEmpleado) {
		this.isPermisoPaginacionMedioEvaluacionEmpleado = isPermisoPaginacionMedioEvaluacionEmpleado;
	}
	
	public Boolean getIsPermisoPaginacionTodoEvaluacionEmpleado() {
		return isPermisoPaginacionTodoEvaluacionEmpleado;
	}

	public void setIsPermisoPaginacionTodoEvaluacionEmpleado(Boolean isPermisoPaginacionTodoEvaluacionEmpleado) {
		this.isPermisoPaginacionTodoEvaluacionEmpleado = isPermisoPaginacionTodoEvaluacionEmpleado;
	}
	
	public Boolean getIsPermisoPaginacionAltoEvaluacionEmpleado() {
		return isPermisoPaginacionAltoEvaluacionEmpleado;
	}

	public void setIsPermisoPaginacionAltoEvaluacionEmpleado(Boolean isPermisoPaginacionAltoEvaluacionEmpleado) {
		this.isPermisoPaginacionAltoEvaluacionEmpleado = isPermisoPaginacionAltoEvaluacionEmpleado;
	}
	
	public Boolean getIsPermisoCopiarEvaluacionEmpleado() {
		return isPermisoCopiarEvaluacionEmpleado;
	}

	public void setIsPermisoCopiarEvaluacionEmpleado(Boolean isPermisoCopiarEvaluacionEmpleado) {
		this.isPermisoCopiarEvaluacionEmpleado = isPermisoCopiarEvaluacionEmpleado;
	}
	
	public Boolean getIsPermisoVerFormEvaluacionEmpleado() {
		return isPermisoVerFormEvaluacionEmpleado;
	}

	public void setIsPermisoVerFormEvaluacionEmpleado(Boolean isPermisoVerFormEvaluacionEmpleado) {
		this.isPermisoVerFormEvaluacionEmpleado = isPermisoVerFormEvaluacionEmpleado;
	}
	
	public Boolean getIsPermisoDuplicarEvaluacionEmpleado() {
		return isPermisoDuplicarEvaluacionEmpleado;
	}

	public void setIsPermisoDuplicarEvaluacionEmpleado(Boolean isPermisoDuplicarEvaluacionEmpleado) {
		this.isPermisoDuplicarEvaluacionEmpleado = isPermisoDuplicarEvaluacionEmpleado;
	}
	
	public Boolean getIsPermisoOrdenEvaluacionEmpleado() {
		return isPermisoOrdenEvaluacionEmpleado;
	}

	public void setIsPermisoOrdenEvaluacionEmpleado(Boolean isPermisoOrdenEvaluacionEmpleado) {
		this.isPermisoOrdenEvaluacionEmpleado = isPermisoOrdenEvaluacionEmpleado;
	}
	
	public String getsVisibilidadTablaBusquedas() {
		return sVisibilidadTablaBusquedas;
	}

	public void setsVisibilidadTablaBusquedas(String sVisibilidadTablaBusquedas) {
		this.sVisibilidadTablaBusquedas = sVisibilidadTablaBusquedas;
	}
	
	public String getsVisibilidadTablaElementos() {
		return sVisibilidadTablaElementos;
	}

	public void setsVisibilidadTablaElementos(String sVisibilidadTablaElementos) {
		this.sVisibilidadTablaElementos = sVisibilidadTablaElementos;
	}

	public String getsVisibilidadTablaAcciones() {
		return sVisibilidadTablaAcciones;
	}

	public void setsVisibilidadTablaAcciones(String sVisibilidadTablaAcciones) {
		this.sVisibilidadTablaAcciones = sVisibilidadTablaAcciones;
	}
	
	public Boolean getIsVisibilidadCeldaNuevoEvaluacionEmpleado() {
		return isVisibilidadCeldaNuevoEvaluacionEmpleado;
	}

	public void setIsVisibilidadCeldaNuevoEvaluacionEmpleado(Boolean isVisibilidadCeldaNuevoEvaluacionEmpleado) {
		this.isVisibilidadCeldaNuevoEvaluacionEmpleado = isVisibilidadCeldaNuevoEvaluacionEmpleado;
	}
	
	public Boolean getIsVisibilidadCeldaDuplicarEvaluacionEmpleado() {
		return isVisibilidadCeldaDuplicarEvaluacionEmpleado;
	}

	public void setIsVisibilidadCeldaDuplicarEvaluacionEmpleado(Boolean isVisibilidadCeldaDuplicarEvaluacionEmpleado) {
		this.isVisibilidadCeldaDuplicarEvaluacionEmpleado = isVisibilidadCeldaDuplicarEvaluacionEmpleado;
	}
	
	public Boolean getIsVisibilidadCeldaCopiarEvaluacionEmpleado() {
		return isVisibilidadCeldaCopiarEvaluacionEmpleado;
	}

	public void setIsVisibilidadCeldaCopiarEvaluacionEmpleado(Boolean isVisibilidadCeldaCopiarEvaluacionEmpleado) {
		this.isVisibilidadCeldaCopiarEvaluacionEmpleado = isVisibilidadCeldaCopiarEvaluacionEmpleado;
	}
	
	public Boolean getIsVisibilidadCeldaVerFormEvaluacionEmpleado() {
		return isVisibilidadCeldaVerFormEvaluacionEmpleado;
	}

	public void setIsVisibilidadCeldaVerFormEvaluacionEmpleado(Boolean isVisibilidadCeldaVerFormEvaluacionEmpleado) {
		this.isVisibilidadCeldaVerFormEvaluacionEmpleado = isVisibilidadCeldaVerFormEvaluacionEmpleado;
	}
	
	public Boolean getIsVisibilidadCeldaOrdenEvaluacionEmpleado() {
		return isVisibilidadCeldaOrdenEvaluacionEmpleado;
	}

	public void setIsVisibilidadCeldaOrdenEvaluacionEmpleado(Boolean isVisibilidadCeldaOrdenEvaluacionEmpleado) {
		this.isVisibilidadCeldaOrdenEvaluacionEmpleado = isVisibilidadCeldaOrdenEvaluacionEmpleado;
	}
	
	public Boolean getIsVisibilidadCeldaNuevoRelacionesEvaluacionEmpleado() {
		return isVisibilidadCeldaNuevoRelacionesEvaluacionEmpleado;
	}

	public void setIsVisibilidadCeldaNuevoRelacionesEvaluacionEmpleado(Boolean isVisibilidadCeldaNuevoRelacionesEvaluacionEmpleado) {
		this.isVisibilidadCeldaNuevoRelacionesEvaluacionEmpleado = isVisibilidadCeldaNuevoRelacionesEvaluacionEmpleado;
	}
	
	public Boolean getIsVisibilidadCeldaModificarEvaluacionEmpleado() {
		return isVisibilidadCeldaModificarEvaluacionEmpleado;
	}

	public void setIsVisibilidadCeldaModificarEvaluacionEmpleado(Boolean isVisibilidadCeldaModificarEvaluacionEmpleado) {
		this.isVisibilidadCeldaModificarEvaluacionEmpleado = isVisibilidadCeldaModificarEvaluacionEmpleado;
	}
	
	public Boolean getIsVisibilidadCeldaActualizarEvaluacionEmpleado() {
		return isVisibilidadCeldaActualizarEvaluacionEmpleado;
	}

	public void setIsVisibilidadCeldaActualizarEvaluacionEmpleado(Boolean isVisibilidadCeldaActualizarEvaluacionEmpleado) {
		this.isVisibilidadCeldaActualizarEvaluacionEmpleado = isVisibilidadCeldaActualizarEvaluacionEmpleado;
	}

	public Boolean getIsVisibilidadCeldaEliminarEvaluacionEmpleado() {
		return isVisibilidadCeldaEliminarEvaluacionEmpleado;
	}

	public void setIsVisibilidadCeldaEliminarEvaluacionEmpleado(Boolean isVisibilidadCeldaEliminarEvaluacionEmpleado) {
		this.isVisibilidadCeldaEliminarEvaluacionEmpleado = isVisibilidadCeldaEliminarEvaluacionEmpleado;
	}

	public Boolean getIsVisibilidadCeldaCancelarEvaluacionEmpleado() {
		return isVisibilidadCeldaCancelarEvaluacionEmpleado;
	}

	public void setIsVisibilidadCeldaCancelarEvaluacionEmpleado(Boolean isVisibilidadCeldaCancelarEvaluacionEmpleado) {
		this.isVisibilidadCeldaCancelarEvaluacionEmpleado = isVisibilidadCeldaCancelarEvaluacionEmpleado;
	}

	public Boolean getIsVisibilidadCeldaGuardarEvaluacionEmpleado() {
		return isVisibilidadCeldaGuardarEvaluacionEmpleado;
	}

	public void setIsVisibilidadCeldaGuardarEvaluacionEmpleado(Boolean isVisibilidadCeldaGuardarEvaluacionEmpleado) {
		this.isVisibilidadCeldaGuardarEvaluacionEmpleado = isVisibilidadCeldaGuardarEvaluacionEmpleado;
	}
	
	public Boolean getIsVisibilidadCeldaGuardarCambiosEvaluacionEmpleado() {
		return isVisibilidadCeldaGuardarCambiosEvaluacionEmpleado;
	}

	public void setIsVisibilidadCeldaGuardarCambiosEvaluacionEmpleado(Boolean isVisibilidadCeldaGuardarCambiosEvaluacionEmpleado) {
		this.isVisibilidadCeldaGuardarCambiosEvaluacionEmpleado = isVisibilidadCeldaGuardarCambiosEvaluacionEmpleado;
	}
		
	public EvaluacionEmpleadoSessionBean getevaluacionempleadoSessionBean() {
		return this.evaluacionempleadoSessionBean;
	}
	
	public void setevaluacionempleadoSessionBean(EvaluacionEmpleadoSessionBean evaluacionempleadoSessionBean) {
		this.evaluacionempleadoSessionBean=evaluacionempleadoSessionBean;
	}
	
	
	public Boolean getisVisibilidadFK_IdAnio() {
		return this.isVisibilidadFK_IdAnio;
	}

	public void setisVisibilidadFK_IdAnio(Boolean isVisibilidadFK_IdAnio) {
		this.isVisibilidadFK_IdAnio=isVisibilidadFK_IdAnio;
	}

	public Boolean getisVisibilidadFK_IdBimestre() {
		return this.isVisibilidadFK_IdBimestre;
	}

	public void setisVisibilidadFK_IdBimestre(Boolean isVisibilidadFK_IdBimestre) {
		this.isVisibilidadFK_IdBimestre=isVisibilidadFK_IdBimestre;
	}

	public Boolean getisVisibilidadFK_IdEjercicio() {
		return this.isVisibilidadFK_IdEjercicio;
	}

	public void setisVisibilidadFK_IdEjercicio(Boolean isVisibilidadFK_IdEjercicio) {
		this.isVisibilidadFK_IdEjercicio=isVisibilidadFK_IdEjercicio;
	}

	public Boolean getisVisibilidadFK_IdEmpleado() {
		return this.isVisibilidadFK_IdEmpleado;
	}

	public void setisVisibilidadFK_IdEmpleado(Boolean isVisibilidadFK_IdEmpleado) {
		this.isVisibilidadFK_IdEmpleado=isVisibilidadFK_IdEmpleado;
	}

	public Boolean getisVisibilidadFK_IdEmpleadoEvalua() {
		return this.isVisibilidadFK_IdEmpleadoEvalua;
	}

	public void setisVisibilidadFK_IdEmpleadoEvalua(Boolean isVisibilidadFK_IdEmpleadoEvalua) {
		this.isVisibilidadFK_IdEmpleadoEvalua=isVisibilidadFK_IdEmpleadoEvalua;
	}

	public Boolean getisVisibilidadFK_IdEmpresa() {
		return this.isVisibilidadFK_IdEmpresa;
	}

	public void setisVisibilidadFK_IdEmpresa(Boolean isVisibilidadFK_IdEmpresa) {
		this.isVisibilidadFK_IdEmpresa=isVisibilidadFK_IdEmpresa;
	}

	public Boolean getisVisibilidadFK_IdEstructura() {
		return this.isVisibilidadFK_IdEstructura;
	}

	public void setisVisibilidadFK_IdEstructura(Boolean isVisibilidadFK_IdEstructura) {
		this.isVisibilidadFK_IdEstructura=isVisibilidadFK_IdEstructura;
	}

	public Boolean getisVisibilidadFK_IdMes() {
		return this.isVisibilidadFK_IdMes;
	}

	public void setisVisibilidadFK_IdMes(Boolean isVisibilidadFK_IdMes) {
		this.isVisibilidadFK_IdMes=isVisibilidadFK_IdMes;
	}

	public Boolean getisVisibilidadFK_IdPeriodo() {
		return this.isVisibilidadFK_IdPeriodo;
	}

	public void setisVisibilidadFK_IdPeriodo(Boolean isVisibilidadFK_IdPeriodo) {
		this.isVisibilidadFK_IdPeriodo=isVisibilidadFK_IdPeriodo;
	}

	public Boolean getisVisibilidadFK_IdSemestre() {
		return this.isVisibilidadFK_IdSemestre;
	}

	public void setisVisibilidadFK_IdSemestre(Boolean isVisibilidadFK_IdSemestre) {
		this.isVisibilidadFK_IdSemestre=isVisibilidadFK_IdSemestre;
	}

	public Boolean getisVisibilidadFK_IdSucursal() {
		return this.isVisibilidadFK_IdSucursal;
	}

	public void setisVisibilidadFK_IdSucursal(Boolean isVisibilidadFK_IdSucursal) {
		this.isVisibilidadFK_IdSucursal=isVisibilidadFK_IdSucursal;
	}

	public Boolean getisVisibilidadFK_IdTipoEvaluacionEmpleado() {
		return this.isVisibilidadFK_IdTipoEvaluacionEmpleado;
	}

	public void setisVisibilidadFK_IdTipoEvaluacionEmpleado(Boolean isVisibilidadFK_IdTipoEvaluacionEmpleado) {
		this.isVisibilidadFK_IdTipoEvaluacionEmpleado=isVisibilidadFK_IdTipoEvaluacionEmpleado;
	}

	public Boolean getisVisibilidadFK_IdTrimestre() {
		return this.isVisibilidadFK_IdTrimestre;
	}

	public void setisVisibilidadFK_IdTrimestre(Boolean isVisibilidadFK_IdTrimestre) {
		this.isVisibilidadFK_IdTrimestre=isVisibilidadFK_IdTrimestre;
	}

	
	
	public void setVariablesFormularioToObjetoActualForeignKeysEvaluacionEmpleado(EvaluacionEmpleado evaluacionempleado)throws Exception {
		try {
			
				this.setActualParaGuardarEmpresaForeignKey(evaluacionempleado,null);
				this.setActualParaGuardarSucursalForeignKey(evaluacionempleado,null);
				this.setActualParaGuardarEjercicioForeignKey(evaluacionempleado,null);
				this.setActualParaGuardarPeriodoForeignKey(evaluacionempleado,null);
				this.setActualParaGuardarEstructuraForeignKey(evaluacionempleado,null);
				this.setActualParaGuardarEmpleadoForeignKey(evaluacionempleado,null);
				this.setActualParaGuardarEmpleadoEvaluaForeignKey(evaluacionempleado,null);
				this.setActualParaGuardarTipoEvaluacionEmpleadoForeignKey(evaluacionempleado,null);
				this.setActualParaGuardarAnioForeignKey(evaluacionempleado,null);
				this.setActualParaGuardarSemestreForeignKey(evaluacionempleado,null);
				this.setActualParaGuardarTrimestreForeignKey(evaluacionempleado,null);
				this.setActualParaGuardarBimestreForeignKey(evaluacionempleado,null);
				this.setActualParaGuardarMesForeignKey(evaluacionempleado,null);
		} catch(Exception e) {
			throw e;
		}
	}
	
	public void cargarLicenciaCliente(DatosCliente datosCliente) throws Exception {
		Boolean existe=false;
			
		try {
				InputStream reportFile=null;
				
				String sPath=this.parametroGeneralUsuario.getpath_exportar()+"erp_bydan/license/license.xml";
				
				reportFile = new FileInputStream(sPath);
				
				Document documentBuilder=null;
				
				if(this.constantes2.DOCUMENT_BUILDER==null) {
					documentBuilder=Funciones2.parseXml(reportFile);
				} else {
					documentBuilder=this.constantes2.DOCUMENT_BUILDER;
				}
				
				//GlobalSeguridad.readXml(documentBuilder);
				
				String sNamePCServerLicencia="";
				String sClaveSistemaLicencia="";
				Date dFechaServerLicencia=null;
				
				//CARGAR ELEMENTOS DE LICENCIA
				NodeList nodeList = documentBuilder.getElementsByTagName("Licencia");
				
				for (int iIndice = 0; iIndice < nodeList.getLength(); iIndice++) {
					Node node = nodeList.item(iIndice);
				
					if (node.getNodeType() == Node.ELEMENT_NODE) {
						Element element = (Element) node;
						 
						sNamePCServerLicencia=element.getElementsByTagName("NombrePc").item(0).getTextContent();
						sClaveSistemaLicencia=element.getElementsByTagName("ClaveSistema").item(0).getTextContent();
						
						existe=true;
						break;
					}
				}														
			
				
			if(existe) {
				datosCliente.setsClaveSistema(sClaveSistemaLicencia);
				
				if(!datosCliente.getsNamePCServer().equals(sNamePCServerLicencia)
					&& !datosCliente.getsNamePCServer().equals("")) {
					
					datosCliente.setsNamePCServer(sNamePCServerLicencia);
				}
			} else {
				throw new Exception("NO EXISTE LICENCIA O NO ESTA BIEN FORMADO");
			}
		} catch(Exception e) {
			throw new Exception("NO EXISTE LICENCIA O NO ESTA BIEN FORMADO");
		}						
	}
	
	public void cargarDatosCliente() throws Exception {
		String sPrimerMacAddress="";		
		String sHostName="";		 
		String sHostIp="";		  
		String sHostUser="";
		
		
		sPrimerMacAddress=FuncionesNetwork.getPrimerMacAddress();		
		sHostName=FuncionesNetwork.getHostName();		 
		sHostIp=FuncionesNetwork.getHostIp();		  
		sHostUser=FuncionesNetwork.getHostUser();
		
		
		this.datosCliente=new DatosCliente();
		if(lIdUsuarioSesion!=null){datosCliente.setIdUsuario(this.lIdUsuarioSesion);}
		
		//SERVIDOR WEB Y TALVEZ SERVIDOR SWING WINDOWS
		this.datosCliente.setsUsuarioPCServer(sHostUser);
		this.datosCliente.setsNamePCServer(sHostName);
		this.datosCliente.setsIPPCServer(sHostIp);
		this.datosCliente.setsMacAddressPCServer(sPrimerMacAddress);
			
			//CLIENTE SWING WINDOWS
			this.datosCliente.setIsClienteWeb(false);
			
			this.datosCliente.setsUsuarioPC(sHostUser);
			this.datosCliente.setsNamePC(sHostName);
			this.datosCliente.setsIPPC(sHostIp);
			this.datosCliente.setsMacAddressPC(sPrimerMacAddress);	
			
			
			//this.cargarLicenciaCliente(this.datosCliente);
			
	}
	
	public void bugActualizarReferenciaActual(EvaluacionEmpleado evaluacionempleado,EvaluacionEmpleado evaluacionempleadoAux) throws Exception {
		//ARCHITECTURE		
		//EL ID NEGATIVO GUARDADO EN ORIGINAL SIRVE PARA VERIFICAR Y ACTUALIZAR EL REGISTRO NUEVO (ID,VERSIONROW)
		this.setCamposBaseDesdeOriginalEvaluacionEmpleado(evaluacionempleado);
					
		//POR BUG: EL OBJETO ACTUAL SE PERDIA, POR LO QUE SE GUARDA TAMBIEN VALORES EN AUX Y LUEGO DESPUES DEL MENSAJE SE HACE REFERENCIA EL OBJETO ACTUAL AL AUX
		evaluacionempleadoAux.setId(evaluacionempleado.getId());
		evaluacionempleadoAux.setVersionRow(evaluacionempleado.getVersionRow());					
	}
	
	public void ejecutarMantenimiento(MaintenanceType maintenanceType)throws Exception {	
		try	{								
			
			//this.startProcessEvaluacionEmpleado();
		
			int intSelectedRow = this.jTableDatosEvaluacionEmpleado.getSelectedRow();	       
			
			//PUEDE SER -1 CUANDO SE ELIMINA EN GUARDAR CAMBIOS
			if(intSelectedRow>=0 && maintenanceType!=MaintenanceType.GUARDARCAMBIOS) {
				//SE PIEDE INDICE SELECTED CON FILA TOTALES, ASEGURARSE QUE OBJETO ACTUAL ESTE EN FORMULARIO
					
				//ARCHITECTURE
				
				if(Constantes.ISUSAEJBLOGICLAYER) {
					this.evaluacionempleado =(EvaluacionEmpleado) this.evaluacionempleadoLogic.getEvaluacionEmpleados().toArray()[this.jTableDatosEvaluacionEmpleado.convertRowIndexToModel(intSelectedRow)];
				} else if(Constantes.ISUSAEJBREMOTE ||Constantes.ISUSAEJBHOME) {
					this.evaluacionempleado =(EvaluacionEmpleado) this.evaluacionempleados.toArray()[this.jTableDatosEvaluacionEmpleado.convertRowIndexToModel(intSelectedRow)];
				}
				
				//ARCHITECTURE
				
				if(EvaluacionEmpleadoJInternalFrame.ISBINDING_MANUAL_TABLA) {
					//this.setVariablesFormularioToObjetoActualEvaluacionEmpleado(this.evaluacionempleado,true);
				}
				
				this.setVariablesFormularioToObjetoActualForeignKeysEvaluacionEmpleado(this.evaluacionempleado);
			}
			
			//LUEGO DE TRAER DATOS CORRESPONDIENTES QUE COINCIDA LISTA TABLA QUITO FILA TOTALES
			if(this.conTotales) {
				//MEJOR LO DEJO, SI EXISTE EXCEPCION SE PIEDE FILA TOTALES Y ORDEN INDICE FILA ACTUAL
				//this.quitarFilaTotales();
			}
			
			this.cargarDatosCliente();
			
			this.datosDeep=new DatosDeep();
			
			//SE CAMBIA ESTADOS CON ERROR, ENTONCES SE EJECUTA ANTES
			//this.invalidValues = evaluacionempleadoValidator.getInvalidValues(this.evaluacionempleado);
			
			//if(this.invalidValues==null || this.invalidValues.length<=0) {
			
			evaluacionempleadoLogic.setDatosCliente(datosCliente);
			evaluacionempleadoLogic.setIsConDeep(false);
			
			if(maintenanceType==MaintenanceType.NUEVO) {
				evaluacionempleadoAux=new  EvaluacionEmpleado();
				
				evaluacionempleadoAux.setIsNew(true);
				evaluacionempleadoAux.setIsChanged(true);
				
				evaluacionempleadoAux.setEvaluacionEmpleadoOriginal(this.evaluacionempleado);
				
				evaluacionempleadoAux.setId(this.evaluacionempleado.getId());	
				evaluacionempleadoAux.setVersionRow(this.evaluacionempleado.getVersionRow());	
				evaluacionempleadoAux.setid_empresa(this.evaluacionempleado.getid_empresa());	
				evaluacionempleadoAux.setid_sucursal(this.evaluacionempleado.getid_sucursal());	
				evaluacionempleadoAux.setid_ejercicio(this.evaluacionempleado.getid_ejercicio());	
				evaluacionempleadoAux.setid_periodo(this.evaluacionempleado.getid_periodo());	
				evaluacionempleadoAux.setid_estructura(this.evaluacionempleado.getid_estructura());	
				evaluacionempleadoAux.setid_empleado(this.evaluacionempleado.getid_empleado());	
				evaluacionempleadoAux.setid_empleado_evalua(this.evaluacionempleado.getid_empleado_evalua());	
				evaluacionempleadoAux.setid_tipo_evaluacion_empleado(this.evaluacionempleado.getid_tipo_evaluacion_empleado());	
				evaluacionempleadoAux.setfecha(this.evaluacionempleado.getfecha());	
				evaluacionempleadoAux.setesta_evaluado(this.evaluacionempleado.getesta_evaluado());	
				evaluacionempleadoAux.setid_anio(this.evaluacionempleado.getid_anio());	
				evaluacionempleadoAux.setid_semestre(this.evaluacionempleado.getid_semestre());	
				evaluacionempleadoAux.setid_trimestre(this.evaluacionempleado.getid_trimestre());	
				evaluacionempleadoAux.setid_bimestre(this.evaluacionempleado.getid_bimestre());	
				evaluacionempleadoAux.setid_mes(this.evaluacionempleado.getid_mes());	
				evaluacionempleadoAux.setobservacion1(this.evaluacionempleado.getobservacion1());	
				evaluacionempleadoAux.setobservacion2(this.evaluacionempleado.getobservacion2());	
				evaluacionempleadoAux.setobservacion3(this.evaluacionempleado.getobservacion3());	
				evaluacionempleadoAux.setobservacion4(this.evaluacionempleado.getobservacion4());	
								
				//ARCHITECTURE
				if(Constantes.ISUSAEJBLOGICLAYER) {
					//NO ENTENDIBLE PORQUE PONER
					//if(this.evaluacionempleadoSessionBean.getEstaModoGuardarRelaciones() 
					//	|| this.evaluacionempleadoSessionBean.getEsGuardarRelacionado())	{
						actualizarLista(evaluacionempleadoAux,evaluacionempleadoLogic.getEvaluacionEmpleados());
					//}
				} else if(Constantes.ISUSAEJBREMOTE||Constantes.ISUSAEJBHOME) {
					actualizarLista(evaluacionempleadoAux,evaluacionempleados);
				}
				//ARCHITECTURE
				
				if(!isGuardarCambiosEnLote  && !this.evaluacionempleadoSessionBean.getEstaModoGuardarRelaciones() 
						&& !this.evaluacionempleadoSessionBean.getEsGuardarRelacionado())	{
					
					//ARCHITECTURE
					if(Constantes.ISUSAEJBLOGICLAYER) {
						evaluacionempleadoLogic.saveEvaluacionEmpleados();//WithConnection
						//evaluacionempleadoLogic.getSetVersionRowEvaluacionEmpleados();//WithConnection
					} else if(Constantes.ISUSAEJBREMOTE) {
					} else if(Constantes.ISUSAEJBHOME) {
					}
					//ARCHITECTURE		
					
					//POR BUG: EL OBJETO ACTUAL SE PERDIA, POR LO QUE SE GUARDA TAMBIEN VALORES EN AUX Y LUEGO DESPUES DEL MENSAJE SE HACE REFERENCIA EL OBJETO ACTUAL AL AUX
					this.bugActualizarReferenciaActual(this.evaluacionempleado,evaluacionempleadoAux);
					
					this.refrescarForeignKeysDescripcionesEvaluacionEmpleado();
				} else {
					//CUANDO ES MANTENIMIENTO MAESTRO DETALLE
					if(this.evaluacionempleadoSessionBean.getEstaModoGuardarRelaciones()) {
						//GUARDAR RELACIONES
						//ARCHITECTURE
						if(Constantes.ISUSAEJBLOGICLAYER) {
							
							this.jInternalFrameDetalleFormEvaluacionEmpleado.calificacionempleadoBeanSwingJInternalFrame.calificacionempleadoLogic.getCalificacionEmpleados().addAll(this.jInternalFrameDetalleFormEvaluacionEmpleado.calificacionempleadoBeanSwingJInternalFrame.calificacionempleadosEliminados);
						} else if(Constantes.ISUSAEJBREMOTE ||Constantes.ISUSAEJBHOME) {
							
							this.jInternalFrameDetalleFormEvaluacionEmpleado.calificacionempleadoBeanSwingJInternalFrame.calificacionempleados.addAll(this.jInternalFrameDetalleFormEvaluacionEmpleado.calificacionempleadoBeanSwingJInternalFrame.calificacionempleadosEliminados);
						}
						//ARCHITECTURE	
						
						if(!this.evaluacionempleadoSessionBean.getEsGuardarRelacionado()) {
							//QUITAR FILA TOTAL
							//ARCHITECTURE
							if(Constantes.ISUSAEJBLOGICLAYER) {
							
								if(this.jInternalFrameDetalleFormEvaluacionEmpleado.calificacionempleadoBeanSwingJInternalFrame!=null && this.jInternalFrameDetalleFormEvaluacionEmpleado.calificacionempleadoBeanSwingJInternalFrame.conTotales) {/*this.jInternalFrameDetalleFormEvaluacionEmpleado.calificacionempleadoBeanSwingJInternalFrame.quitarFilaTotales();*/}
							} else if(Constantes.ISUSAEJBREMOTE ||Constantes.ISUSAEJBHOME) {
							
								if(this.jInternalFrameDetalleFormEvaluacionEmpleado.calificacionempleadoBeanSwingJInternalFrame!=null && this.jInternalFrameDetalleFormEvaluacionEmpleado.calificacionempleadoBeanSwingJInternalFrame.conTotales) {/*this.jInternalFrameDetalleFormEvaluacionEmpleado.calificacionempleadoBeanSwingJInternalFrame.quitarFilaTotales();*/}	
							}
							//ARCHITECTURE
												
							//ARCHITECTURE
							if(Constantes.ISUSAEJBLOGICLAYER) {
								evaluacionempleadoLogic.saveEvaluacionEmpleadoRelaciones(evaluacionempleadoAux,this.jInternalFrameDetalleFormEvaluacionEmpleado.calificacionempleadoBeanSwingJInternalFrame.calificacionempleadoLogic.getCalificacionEmpleados());//WithConnection
								//evaluacionempleadoLogic.getSetVersionRowEvaluacionEmpleados();//WithConnection
							} else if(Constantes.ISUSAEJBREMOTE) {
							} else if(Constantes.ISUSAEJBHOME) {
							}
							//ARCHITECTURE
							
							//POR BUG: EL OBJETO ACTUAL SE PERDIA, POR LO QUE SE GUARDA TAMBIEN VALORES EN AUX Y LUEGO DESPUES DEL MENSAJE SE HACE REFERENCIA EL OBJETO ACTUAL AL AUX
							this.bugActualizarReferenciaActual(this.evaluacionempleado,evaluacionempleadoAux);
					
					
							//ARCHITECTURE
							if(Constantes.ISUSAEJBLOGICLAYER) {
								
							this.jInternalFrameDetalleFormEvaluacionEmpleado.calificacionempleadoBeanSwingJInternalFrame.calificacionempleadoLogic.setCalificacionEmpleados(new ArrayList<CalificacionEmpleado>());
							} else if(Constantes.ISUSAEJBREMOTE ||Constantes.ISUSAEJBHOME) {
								
							this.jInternalFrameDetalleFormEvaluacionEmpleado.calificacionempleadoBeanSwingJInternalFrame.calificacionempleados= new ArrayList<CalificacionEmpleado>();
							}
							//ARCHITECTURE	
						} else {
							
							

							if(this.jInternalFrameDetalleFormEvaluacionEmpleado.calificacionempleadoBeanSwingJInternalFrame!=null && this.jInternalFrameDetalleFormEvaluacionEmpleado.calificacionempleadoBeanSwingJInternalFrame.conTotales) {this.jInternalFrameDetalleFormEvaluacionEmpleado.calificacionempleadoBeanSwingJInternalFrame.quitarFilaTotales();}
							evaluacionempleadoAux.setCalificacionEmpleados(this.jInternalFrameDetalleFormEvaluacionEmpleado.calificacionempleadoBeanSwingJInternalFrame.calificacionempleadoLogic.getCalificacionEmpleados());
							
							//ARCHITECTURE
							if(Constantes.ISUSAEJBLOGICLAYER) {
								if(this.evaluacionempleadoSessionBean.getEstaModoGuardarRelaciones() 
									|| this.evaluacionempleadoSessionBean.getEsGuardarRelacionado())	{
									actualizarLista(evaluacionempleadoAux,evaluacionempleadoLogic.getEvaluacionEmpleados());
								}
							} else if(Constantes.ISUSAEJBREMOTE||Constantes.ISUSAEJBHOME) {
								actualizarLista(evaluacionempleadoAux,evaluacionempleados);
							}
							//ARCHITECTURE
							
							//AQUI EL ID NEGATIVO ES EL ID BUSCADO, YA QUE NO SE GENERA OTRO EN LA DB POR INGRESAR UNO NUEVO
							//POR BUG: EL OBJETO ACTUAL SE PERDIA, POR LO QUE SE GUARDA TAMBIEN VALORES EN AUX Y LUEGO DESPUES DEL MENSAJE SE HACE REFERENCIA EL OBJETO ACTUAL AL AUX
							//this.bugActualizarReferenciaActual(this.evaluacionempleado,evaluacionempleadoAux);												
						}
					}
				}
			} else if(maintenanceType==MaintenanceType.ACTUALIZAR) {
				evaluacionempleadoAux=new  EvaluacionEmpleado();
				
				//PUEDE QUE SE ACTUALIZE ALGUN REGISTRO NUEVO
				if(!this.evaluacionempleadoSessionBean.getEsGuardarRelacionado() 
					|| (this.evaluacionempleadoSessionBean.getEsGuardarRelacionado() && this.evaluacionempleado.getId()>=0)) {
						
					evaluacionempleadoAux.setIsNew(false);
				}
				
				evaluacionempleadoAux.setIsDeleted(false);
			
				evaluacionempleadoAux.setId(this.evaluacionempleado.getId());	
				evaluacionempleadoAux.setVersionRow(this.evaluacionempleado.getVersionRow());	
				evaluacionempleadoAux.setid_empresa(this.evaluacionempleado.getid_empresa());	
				evaluacionempleadoAux.setid_sucursal(this.evaluacionempleado.getid_sucursal());	
				evaluacionempleadoAux.setid_ejercicio(this.evaluacionempleado.getid_ejercicio());	
				evaluacionempleadoAux.setid_periodo(this.evaluacionempleado.getid_periodo());	
				evaluacionempleadoAux.setid_estructura(this.evaluacionempleado.getid_estructura());	
				evaluacionempleadoAux.setid_empleado(this.evaluacionempleado.getid_empleado());	
				evaluacionempleadoAux.setid_empleado_evalua(this.evaluacionempleado.getid_empleado_evalua());	
				evaluacionempleadoAux.setid_tipo_evaluacion_empleado(this.evaluacionempleado.getid_tipo_evaluacion_empleado());	
				evaluacionempleadoAux.setfecha(this.evaluacionempleado.getfecha());	
				evaluacionempleadoAux.setesta_evaluado(this.evaluacionempleado.getesta_evaluado());	
				evaluacionempleadoAux.setid_anio(this.evaluacionempleado.getid_anio());	
				evaluacionempleadoAux.setid_semestre(this.evaluacionempleado.getid_semestre());	
				evaluacionempleadoAux.setid_trimestre(this.evaluacionempleado.getid_trimestre());	
				evaluacionempleadoAux.setid_bimestre(this.evaluacionempleado.getid_bimestre());	
				evaluacionempleadoAux.setid_mes(this.evaluacionempleado.getid_mes());	
				evaluacionempleadoAux.setobservacion1(this.evaluacionempleado.getobservacion1());	
				evaluacionempleadoAux.setobservacion2(this.evaluacionempleado.getobservacion2());	
				evaluacionempleadoAux.setobservacion3(this.evaluacionempleado.getobservacion3());	
				evaluacionempleadoAux.setobservacion4(this.evaluacionempleado.getobservacion4());	
				
				//ARCHITECTURE
				if(Constantes.ISUSAEJBLOGICLAYER) {
					actualizarLista(evaluacionempleadoAux,evaluacionempleadoLogic.getEvaluacionEmpleados());
				} else if(Constantes.ISUSAEJBREMOTE||Constantes.ISUSAEJBHOME) {
					actualizarLista(evaluacionempleadoAux,evaluacionempleados);
				}
				//ARCHITECTURE
				
				if(!isGuardarCambiosEnLote && !this.evaluacionempleadoSessionBean.getEstaModoGuardarRelaciones() 
						&& !this.evaluacionempleadoSessionBean.getEsGuardarRelacionado())	{
					
					//ARCHITECTURE
					if(Constantes.ISUSAEJBLOGICLAYER) {
						evaluacionempleadoLogic.saveEvaluacionEmpleados();//WithConnection
						//evaluacionempleadoLogic.getSetVersionRowEvaluacionEmpleados();//WithConnection
					} else if(Constantes.ISUSAEJBREMOTE) {
					} else if(Constantes.ISUSAEJBHOME) {
					}	
					//ARCHITECTURE
					
					//TALVEZ ESTA DEMAS POR SER UPDATE
					//POR BUG: EL OBJETO ACTUAL SE PERDIA, POR LO QUE SE GUARDA TAMBIEN VALORES EN AUX Y LUEGO DESPUES DEL MENSAJE SE HACE REFERENCIA EL OBJETO ACTUAL AL AUX
					this.bugActualizarReferenciaActual(this.evaluacionempleado,evaluacionempleadoAux);
					
					this.refrescarForeignKeysDescripcionesEvaluacionEmpleado();
				} else {
					//CUANDO ES MANTENIMIENTO MAESTRO DETALLE
					if(this.evaluacionempleadoSessionBean.getEstaModoGuardarRelaciones()) {
						//GUARDAR RELACIONES
						//ARCHITECTURE
						if(Constantes.ISUSAEJBLOGICLAYER) {
							
							this.jInternalFrameDetalleFormEvaluacionEmpleado.calificacionempleadoBeanSwingJInternalFrame.calificacionempleadoLogic.getCalificacionEmpleados().addAll(this.jInternalFrameDetalleFormEvaluacionEmpleado.calificacionempleadoBeanSwingJInternalFrame.calificacionempleadosEliminados);
						} else if(Constantes.ISUSAEJBREMOTE ||Constantes.ISUSAEJBHOME) {
							
							this.jInternalFrameDetalleFormEvaluacionEmpleado.calificacionempleadoBeanSwingJInternalFrame.calificacionempleados.addAll(this.jInternalFrameDetalleFormEvaluacionEmpleado.calificacionempleadoBeanSwingJInternalFrame.calificacionempleadosEliminados);
						}
						//ARCHITECTURE
						
						if(!this.evaluacionempleadoSessionBean.getEsGuardarRelacionado()) {
							//QUITAR FILA TOTAL
							//ARCHITECTURE
							if(Constantes.ISUSAEJBLOGICLAYER) {
							
								if(this.jInternalFrameDetalleFormEvaluacionEmpleado.calificacionempleadoBeanSwingJInternalFrame!=null && this.jInternalFrameDetalleFormEvaluacionEmpleado.calificacionempleadoBeanSwingJInternalFrame.conTotales) {/*this.jInternalFrameDetalleFormEvaluacionEmpleado.calificacionempleadoBeanSwingJInternalFrame.quitarFilaTotales();*/}
							} else if(Constantes.ISUSAEJBREMOTE ||Constantes.ISUSAEJBHOME) {
							
								if(this.jInternalFrameDetalleFormEvaluacionEmpleado.calificacionempleadoBeanSwingJInternalFrame!=null && this.jInternalFrameDetalleFormEvaluacionEmpleado.calificacionempleadoBeanSwingJInternalFrame.conTotales) {/*this.jInternalFrameDetalleFormEvaluacionEmpleado.calificacionempleadoBeanSwingJInternalFrame.quitarFilaTotales();*/}	
							}
							//ARCHITECTURE
							
							//ARCHITECTURE
							if(Constantes.ISUSAEJBLOGICLAYER) {
								evaluacionempleadoLogic.saveEvaluacionEmpleadoRelaciones(evaluacionempleadoAux,this.jInternalFrameDetalleFormEvaluacionEmpleado.calificacionempleadoBeanSwingJInternalFrame.calificacionempleadoLogic.getCalificacionEmpleados());//WithConnection
								//evaluacionempleadoLogic.getSetVersionRowEvaluacionEmpleados();//WithConnection
							} else if(Constantes.ISUSAEJBREMOTE) {
							} else if(Constantes.ISUSAEJBHOME) {
							}
							//ARCHITECTURE
							
							//TALVEZ ESTA DEMAS POR SER UPDATE
							//POR BUG: EL OBJETO ACTUAL SE PERDIA, POR LO QUE SE GUARDA TAMBIEN VALORES EN AUX Y LUEGO DESPUES DEL MENSAJE SE HACE REFERENCIA EL OBJETO ACTUAL AL AUX
							this.bugActualizarReferenciaActual(this.evaluacionempleado,evaluacionempleadoAux);
					
							//ARCHITECTURE
							if(Constantes.ISUSAEJBLOGICLAYER) {
								
							this.jInternalFrameDetalleFormEvaluacionEmpleado.calificacionempleadoBeanSwingJInternalFrame.calificacionempleadoLogic.setCalificacionEmpleados(new ArrayList<CalificacionEmpleado>());
							} else if(Constantes.ISUSAEJBREMOTE ||Constantes.ISUSAEJBHOME) {
								
							this.jInternalFrameDetalleFormEvaluacionEmpleado.calificacionempleadoBeanSwingJInternalFrame.calificacionempleados= new ArrayList<CalificacionEmpleado>();
							}
							//ARCHITECTURE
						} else {
							
							

							if(this.jInternalFrameDetalleFormEvaluacionEmpleado.calificacionempleadoBeanSwingJInternalFrame!=null && this.jInternalFrameDetalleFormEvaluacionEmpleado.calificacionempleadoBeanSwingJInternalFrame.conTotales) {this.jInternalFrameDetalleFormEvaluacionEmpleado.calificacionempleadoBeanSwingJInternalFrame.quitarFilaTotales();}
							evaluacionempleadoAux.setCalificacionEmpleados(this.jInternalFrameDetalleFormEvaluacionEmpleado.calificacionempleadoBeanSwingJInternalFrame.calificacionempleadoLogic.getCalificacionEmpleados());
							
							//ARCHITECTURE
							if(Constantes.ISUSAEJBLOGICLAYER) {
								if(this.evaluacionempleadoSessionBean.getEstaModoGuardarRelaciones() 
									|| this.evaluacionempleadoSessionBean.getEsGuardarRelacionado())	{
									actualizarLista(evaluacionempleadoAux,evaluacionempleadoLogic.getEvaluacionEmpleados());
								}
							} else if(Constantes.ISUSAEJBREMOTE||Constantes.ISUSAEJBHOME) {
								actualizarLista(evaluacionempleadoAux,evaluacionempleados);
							}
							//ARCHITECTURE
							
							//AQUI EL ID NEGATIVO ES EL ID BUSCADO, YA QUE NO SE GENERA OTRO EN LA DB POR INGRESAR UNO NUEVO							
							//TALVEZ ESTA DEMAS POR SER UPDATE
							//POR BUG: EL OBJETO ACTUAL SE PERDIA, POR LO QUE SE GUARDA TAMBIEN VALORES EN AUX Y LUEGO DESPUES DEL MENSAJE SE HACE REFERENCIA EL OBJETO ACTUAL AL AUX
							//this.bugActualizarReferenciaActual(this.evaluacionempleado,evaluacionempleadoAux);
					
						}
					}
				}				
			} else if(maintenanceType==MaintenanceType.ELIMINAR) {
				evaluacionempleadoAux=new  EvaluacionEmpleado();
				
				evaluacionempleadoAux.setIsNew(false);
				evaluacionempleadoAux.setIsChanged(false);
				
				evaluacionempleadoAux.setIsDeleted(true);
				
				evaluacionempleadoAux.setId(this.evaluacionempleado.getId());	
				evaluacionempleadoAux.setVersionRow(this.evaluacionempleado.getVersionRow());	
				evaluacionempleadoAux.setid_empresa(this.evaluacionempleado.getid_empresa());	
				evaluacionempleadoAux.setid_sucursal(this.evaluacionempleado.getid_sucursal());	
				evaluacionempleadoAux.setid_ejercicio(this.evaluacionempleado.getid_ejercicio());	
				evaluacionempleadoAux.setid_periodo(this.evaluacionempleado.getid_periodo());	
				evaluacionempleadoAux.setid_estructura(this.evaluacionempleado.getid_estructura());	
				evaluacionempleadoAux.setid_empleado(this.evaluacionempleado.getid_empleado());	
				evaluacionempleadoAux.setid_empleado_evalua(this.evaluacionempleado.getid_empleado_evalua());	
				evaluacionempleadoAux.setid_tipo_evaluacion_empleado(this.evaluacionempleado.getid_tipo_evaluacion_empleado());	
				evaluacionempleadoAux.setfecha(this.evaluacionempleado.getfecha());	
				evaluacionempleadoAux.setesta_evaluado(this.evaluacionempleado.getesta_evaluado());	
				evaluacionempleadoAux.setid_anio(this.evaluacionempleado.getid_anio());	
				evaluacionempleadoAux.setid_semestre(this.evaluacionempleado.getid_semestre());	
				evaluacionempleadoAux.setid_trimestre(this.evaluacionempleado.getid_trimestre());	
				evaluacionempleadoAux.setid_bimestre(this.evaluacionempleado.getid_bimestre());	
				evaluacionempleadoAux.setid_mes(this.evaluacionempleado.getid_mes());	
				evaluacionempleadoAux.setobservacion1(this.evaluacionempleado.getobservacion1());	
				evaluacionempleadoAux.setobservacion2(this.evaluacionempleado.getobservacion2());	
				evaluacionempleadoAux.setobservacion3(this.evaluacionempleado.getobservacion3());	
				evaluacionempleadoAux.setobservacion4(this.evaluacionempleado.getobservacion4());	
				
				if(this.evaluacionempleadoSessionBean.getEsGuardarRelacionado()) {
					//ELEMENTO ACTUAL NO SE HA INGRESADO AL SISTEMA, NO SE PUEDE ELIMINAR ALGO QUE NO EXISTE
					if(this.evaluacionempleadoAux.getId()>=0) {	
						this.evaluacionempleadosEliminados.add(evaluacionempleadoAux);											
					}
				}
				
				//ARCHITECTURE
				if(Constantes.ISUSAEJBLOGICLAYER) {				
					actualizarLista(evaluacionempleadoAux,evaluacionempleadoLogic.getEvaluacionEmpleados());
				} else if(Constantes.ISUSAEJBREMOTE||Constantes.ISUSAEJBHOME) {
					actualizarLista(evaluacionempleadoAux,evaluacionempleados);
				}
				//ARCHITECTURE
				
				
				if(!isGuardarCambiosEnLote && !this.evaluacionempleadoSessionBean.getEstaModoGuardarRelaciones() 
						&& !this.evaluacionempleadoSessionBean.getEsGuardarRelacionado())	{
					
					//ARCHITECTURE
					if(Constantes.ISUSAEJBLOGICLAYER) {
						evaluacionempleadoLogic.saveEvaluacionEmpleados();//WithConnection
						//evaluacionempleadoLogic.getSetVersionRowEvaluacionEmpleados();//WithConnection
					} else if(Constantes.ISUSAEJBREMOTE) {
					} else if(Constantes.ISUSAEJBHOME) {
					}	
					//ARCHITECTURE
				} else {
					//CUANDO ES MANTENIMIENTO MAESTRO DETALLE
					if(this.evaluacionempleadoSessionBean.getEstaModoGuardarRelaciones()) {
						//GUARDAR RELACIONES
						//ARCHITECTURE
						if(Constantes.ISUSAEJBLOGICLAYER) {
							
							this.jInternalFrameDetalleFormEvaluacionEmpleado.calificacionempleadoBeanSwingJInternalFrame.calificacionempleadoLogic.getCalificacionEmpleados().addAll(this.jInternalFrameDetalleFormEvaluacionEmpleado.calificacionempleadoBeanSwingJInternalFrame.calificacionempleadosEliminados);
						} else if(Constantes.ISUSAEJBREMOTE ||Constantes.ISUSAEJBHOME) {
							
							this.jInternalFrameDetalleFormEvaluacionEmpleado.calificacionempleadoBeanSwingJInternalFrame.calificacionempleados.addAll(this.jInternalFrameDetalleFormEvaluacionEmpleado.calificacionempleadoBeanSwingJInternalFrame.calificacionempleadosEliminados);
						}
						//ARCHITECTURE
						
						
						if(!this.evaluacionempleadoSessionBean.getEsGuardarRelacionado()) {
							//QUITAR FILA TOTAL
							//ARCHITECTURE
							if(Constantes.ISUSAEJBLOGICLAYER) {
							
								if(this.jInternalFrameDetalleFormEvaluacionEmpleado.calificacionempleadoBeanSwingJInternalFrame!=null && this.jInternalFrameDetalleFormEvaluacionEmpleado.calificacionempleadoBeanSwingJInternalFrame.conTotales) {/*this.jInternalFrameDetalleFormEvaluacionEmpleado.calificacionempleadoBeanSwingJInternalFrame.quitarFilaTotales();*/}
							} else if(Constantes.ISUSAEJBREMOTE ||Constantes.ISUSAEJBHOME) {
							
								if(this.jInternalFrameDetalleFormEvaluacionEmpleado.calificacionempleadoBeanSwingJInternalFrame!=null && this.jInternalFrameDetalleFormEvaluacionEmpleado.calificacionempleadoBeanSwingJInternalFrame.conTotales) {/*this.jInternalFrameDetalleFormEvaluacionEmpleado.calificacionempleadoBeanSwingJInternalFrame.quitarFilaTotales();*/}	
							}
							//ARCHITECTURE
							
							//ARCHITECTURE
							if(Constantes.ISUSAEJBLOGICLAYER) {
								evaluacionempleadoLogic.saveEvaluacionEmpleadoRelaciones(evaluacionempleadoAux,this.jInternalFrameDetalleFormEvaluacionEmpleado.calificacionempleadoBeanSwingJInternalFrame.calificacionempleadoLogic.getCalificacionEmpleados());//WithConnection
								//evaluacionempleadoLogic.getSetVersionRowEvaluacionEmpleados();//WithConnection
							} else if(Constantes.ISUSAEJBREMOTE) {
							} else if(Constantes.ISUSAEJBHOME) {
							}
							//ARCHITECTURE
							
							//ARCHITECTURE
							if(Constantes.ISUSAEJBLOGICLAYER) {
								
							this.jInternalFrameDetalleFormEvaluacionEmpleado.calificacionempleadoBeanSwingJInternalFrame.calificacionempleadoLogic.setCalificacionEmpleados(new ArrayList<CalificacionEmpleado>());
							} else if(Constantes.ISUSAEJBREMOTE ||Constantes.ISUSAEJBHOME) {
								
							this.jInternalFrameDetalleFormEvaluacionEmpleado.calificacionempleadoBeanSwingJInternalFrame.calificacionempleados= new ArrayList<CalificacionEmpleado>();
							}
							//ARCHITECTURE
						}
					}  else {
							
						

							if(this.jInternalFrameDetalleFormEvaluacionEmpleado.calificacionempleadoBeanSwingJInternalFrame!=null && this.jInternalFrameDetalleFormEvaluacionEmpleado.calificacionempleadoBeanSwingJInternalFrame.conTotales) {this.jInternalFrameDetalleFormEvaluacionEmpleado.calificacionempleadoBeanSwingJInternalFrame.quitarFilaTotales();}
							evaluacionempleadoAux.setCalificacionEmpleados(this.jInternalFrameDetalleFormEvaluacionEmpleado.calificacionempleadoBeanSwingJInternalFrame.calificacionempleadoLogic.getCalificacionEmpleados());
								
						//ARCHITECTURE
						if(Constantes.ISUSAEJBLOGICLAYER) {
							if(this.evaluacionempleadoSessionBean.getEstaModoGuardarRelaciones() 
								|| this.evaluacionempleadoSessionBean.getEsGuardarRelacionado())	{
								actualizarLista(evaluacionempleadoAux,evaluacionempleadoLogic.getEvaluacionEmpleados());
							}
						} else if(Constantes.ISUSAEJBREMOTE||Constantes.ISUSAEJBHOME) {
							actualizarLista(evaluacionempleadoAux,evaluacionempleados);
						}
						//ARCHITECTURE
					}
				}				
			} else if(maintenanceType==MaintenanceType.GUARDARCAMBIOS) {		
				
				//ARCHITECTURE
				if(Constantes.ISUSAEJBLOGICLAYER) {
					this.evaluacionempleadoLogic.getEvaluacionEmpleados().addAll(this.evaluacionempleadosEliminados);
					
					evaluacionempleadoLogic.saveEvaluacionEmpleados();//WithConnection
					//evaluacionempleadoLogic.getSetVersionRowEvaluacionEmpleados();//WithConnection
				} else if(Constantes.ISUSAEJBREMOTE) {
				} else if(Constantes.ISUSAEJBHOME) {
				}	
				//ARCHITECTURE
				this.refrescarForeignKeysDescripcionesEvaluacionEmpleado();
				
				this.evaluacionempleadosEliminados= new ArrayList<EvaluacionEmpleado>();		
			}
			
			if(this.evaluacionempleadoSessionBean.getEsGuardarRelacionado()) {
				 this.crearFilaTotales();
			}
			
			
									
			if(this.parametroGeneralUsuario.getcon_mensaje_confirmacion() && !this.evaluacionempleadoSessionBean.getEsGuardarRelacionado()) {//Constantes.ISMOSTRARMENSAJESMANTENIMIENTO && 
				if(!this.isPostAccionSinMensaje) {
					JOptionPane.showMessageDialog(this,"Evaluacion Empleado GUARDADO CORRECTAMENTE","MANTENIMIENTO DE Evaluacion Empleado",JOptionPane.INFORMATION_MESSAGE);
					if(maintenanceType==MaintenanceType.NUEVO || maintenanceType==MaintenanceType.ACTUALIZAR) {
						//CUANDO ES NUEVO SE PIERDE REFERENCIA NO SE PORQUE
						this.evaluacionempleado=evaluacionempleadoAux;
					}
				}
			}
			
			this.isErrorGuardar=false;
			
			this.inicializarInvalidValues();
		/*
		} else {
			this.mostrarInvalidValues();	
		}
		*/
			
		} catch(Exception e) {
			this.isErrorGuardar=true;
			
			this.crearFilaTotales();
			
			throw e;
		} finally {
      		//this.finishProcessEvaluacionEmpleado();
      	}
		
	}	
	
	public void actualizarRelaciones(EvaluacionEmpleado evaluacionempleadoLocal) throws Exception {
		
		if(this.evaluacionempleadoSessionBean.getConGuardarRelaciones()) {			
			
			if(Constantes.ISUSAEJBLOGICLAYER) {
			
				evaluacionempleadoLocal.setCalificacionEmpleados(this.jInternalFrameDetalleFormEvaluacionEmpleado.calificacionempleadoBeanSwingJInternalFrame.calificacionempleadoLogic.getCalificacionEmpleados());
			
			} else {
			
				evaluacionempleadoLocal.setCalificacionEmpleados(this.jInternalFrameDetalleFormEvaluacionEmpleado.calificacionempleadoBeanSwingJInternalFrame.calificacionempleados);	
			}
		}
	}
	
	public void actualizarRelacionFkPadreActual(EvaluacionEmpleado evaluacionempleadoLocal) throws Exception {	
		if(this.evaluacionempleadoSessionBean.getEsGuardarRelacionado()) {			
			
		
			if(this.jInternalFrameParent.getClass().equals(EmpresaDetalleFormJInternalFrame.class)) {
				EmpresaBeanSwingJInternalFrame empresaBeanSwingJInternalFrameLocal=(EmpresaBeanSwingJInternalFrame) ((EmpresaDetalleFormJInternalFrame) this.jInternalFrameParent).jInternalFrameParent;

				empresaBeanSwingJInternalFrameLocal.setVariablesFormularioToObjetoActualTodoEmpresa(empresaBeanSwingJInternalFrameLocal.getempresa(),true);
				empresaBeanSwingJInternalFrameLocal.actualizarLista(empresaBeanSwingJInternalFrameLocal.empresa,this.empresasForeignKey);

				empresaBeanSwingJInternalFrameLocal.actualizarRelaciones(empresaBeanSwingJInternalFrameLocal.empresa);

				evaluacionempleadoLocal.setEmpresa(empresaBeanSwingJInternalFrameLocal.empresa);

				this.addItemDefectoCombosForeignKeyEmpresa();
				this.cargarCombosFrameEmpresasForeignKey("Formulario");
				this.setActualEmpresaForeignKey(empresaBeanSwingJInternalFrameLocal.empresa.getId(),false,"Formulario");
			}
			 else if(this.jInternalFrameParent.getClass().equals(SucursalDetalleFormJInternalFrame.class)) {
				SucursalBeanSwingJInternalFrame sucursalBeanSwingJInternalFrameLocal=(SucursalBeanSwingJInternalFrame) ((SucursalDetalleFormJInternalFrame) this.jInternalFrameParent).jInternalFrameParent;

				sucursalBeanSwingJInternalFrameLocal.setVariablesFormularioToObjetoActualTodoSucursal(sucursalBeanSwingJInternalFrameLocal.getsucursal(),true);
				sucursalBeanSwingJInternalFrameLocal.actualizarLista(sucursalBeanSwingJInternalFrameLocal.sucursal,this.sucursalsForeignKey);

				sucursalBeanSwingJInternalFrameLocal.actualizarRelaciones(sucursalBeanSwingJInternalFrameLocal.sucursal);

				evaluacionempleadoLocal.setSucursal(sucursalBeanSwingJInternalFrameLocal.sucursal);

				this.addItemDefectoCombosForeignKeySucursal();
				this.cargarCombosFrameSucursalsForeignKey("Formulario");
				this.setActualSucursalForeignKey(sucursalBeanSwingJInternalFrameLocal.sucursal.getId(),false,"Formulario");
			}
			 else if(this.jInternalFrameParent.getClass().equals(EjercicioDetalleFormJInternalFrame.class)) {
				EjercicioBeanSwingJInternalFrame ejercicioBeanSwingJInternalFrameLocal=(EjercicioBeanSwingJInternalFrame) ((EjercicioDetalleFormJInternalFrame) this.jInternalFrameParent).jInternalFrameParent;

				ejercicioBeanSwingJInternalFrameLocal.setVariablesFormularioToObjetoActualTodoEjercicio(ejercicioBeanSwingJInternalFrameLocal.getejercicio(),true);
				ejercicioBeanSwingJInternalFrameLocal.actualizarLista(ejercicioBeanSwingJInternalFrameLocal.ejercicio,this.ejerciciosForeignKey);

				ejercicioBeanSwingJInternalFrameLocal.actualizarRelaciones(ejercicioBeanSwingJInternalFrameLocal.ejercicio);

				evaluacionempleadoLocal.setEjercicio(ejercicioBeanSwingJInternalFrameLocal.ejercicio);

				this.addItemDefectoCombosForeignKeyEjercicio();
				this.cargarCombosFrameEjerciciosForeignKey("Formulario");
				this.setActualEjercicioForeignKey(ejercicioBeanSwingJInternalFrameLocal.ejercicio.getId(),false,"Formulario");
			}
			 else if(this.jInternalFrameParent.getClass().equals(PeriodoDetalleFormJInternalFrame.class)) {
				PeriodoBeanSwingJInternalFrame periodoBeanSwingJInternalFrameLocal=(PeriodoBeanSwingJInternalFrame) ((PeriodoDetalleFormJInternalFrame) this.jInternalFrameParent).jInternalFrameParent;

				periodoBeanSwingJInternalFrameLocal.setVariablesFormularioToObjetoActualTodoPeriodo(periodoBeanSwingJInternalFrameLocal.getperiodo(),true);
				periodoBeanSwingJInternalFrameLocal.actualizarLista(periodoBeanSwingJInternalFrameLocal.periodo,this.periodosForeignKey);

				periodoBeanSwingJInternalFrameLocal.actualizarRelaciones(periodoBeanSwingJInternalFrameLocal.periodo);

				evaluacionempleadoLocal.setPeriodo(periodoBeanSwingJInternalFrameLocal.periodo);

				this.addItemDefectoCombosForeignKeyPeriodo();
				this.cargarCombosFramePeriodosForeignKey("Formulario");
				this.setActualPeriodoForeignKey(periodoBeanSwingJInternalFrameLocal.periodo.getId(),false,"Formulario");
			}
			 else if(this.jInternalFrameParent.getClass().equals(EstructuraDetalleFormJInternalFrame.class)) {
				EstructuraBeanSwingJInternalFrame estructuraBeanSwingJInternalFrameLocal=(EstructuraBeanSwingJInternalFrame) ((EstructuraDetalleFormJInternalFrame) this.jInternalFrameParent).jInternalFrameParent;

				estructuraBeanSwingJInternalFrameLocal.setVariablesFormularioToObjetoActualTodoEstructura(estructuraBeanSwingJInternalFrameLocal.getestructura(),true);
				estructuraBeanSwingJInternalFrameLocal.actualizarLista(estructuraBeanSwingJInternalFrameLocal.estructura,this.estructurasForeignKey);

				estructuraBeanSwingJInternalFrameLocal.actualizarRelaciones(estructuraBeanSwingJInternalFrameLocal.estructura);

				evaluacionempleadoLocal.setEstructura(estructuraBeanSwingJInternalFrameLocal.estructura);

				this.addItemDefectoCombosForeignKeyEstructura();
				this.cargarCombosFrameEstructurasForeignKey("Formulario");
				this.setActualEstructuraForeignKey(estructuraBeanSwingJInternalFrameLocal.estructura.getId(),false,"Formulario");
			}
			 else if(this.jInternalFrameParent.getClass().equals(EmpleadoDetalleFormJInternalFrame.class)) {
				EmpleadoBeanSwingJInternalFrame empleadoBeanSwingJInternalFrameLocal=(EmpleadoBeanSwingJInternalFrame) ((EmpleadoDetalleFormJInternalFrame) this.jInternalFrameParent).jInternalFrameParent;

				empleadoBeanSwingJInternalFrameLocal.setVariablesFormularioToObjetoActualTodoEmpleado(empleadoBeanSwingJInternalFrameLocal.getempleado(),true);
				empleadoBeanSwingJInternalFrameLocal.actualizarLista(empleadoBeanSwingJInternalFrameLocal.empleado,this.empleadosForeignKey);

				empleadoBeanSwingJInternalFrameLocal.actualizarRelaciones(empleadoBeanSwingJInternalFrameLocal.empleado);

				evaluacionempleadoLocal.setEmpleado(empleadoBeanSwingJInternalFrameLocal.empleado);

				this.addItemDefectoCombosForeignKeyEmpleado();
				this.cargarCombosFrameEmpleadosForeignKey("Formulario");
				this.setActualEmpleadoForeignKey(empleadoBeanSwingJInternalFrameLocal.empleado.getId(),false,"Formulario");
			}
			 else if(this.jInternalFrameParent.getClass().equals(EmpleadoDetalleFormJInternalFrame.class)) {
				EmpleadoBeanSwingJInternalFrame empleadoevaluaBeanSwingJInternalFrameLocal=(EmpleadoBeanSwingJInternalFrame) ((EmpleadoDetalleFormJInternalFrame) this.jInternalFrameParent).jInternalFrameParent;

				empleadoevaluaBeanSwingJInternalFrameLocal.setVariablesFormularioToObjetoActualTodoEmpleado(empleadoevaluaBeanSwingJInternalFrameLocal.getempleado(),true);
				empleadoevaluaBeanSwingJInternalFrameLocal.actualizarLista(empleadoevaluaBeanSwingJInternalFrameLocal.empleado,this.empleadoevaluasForeignKey);

				empleadoevaluaBeanSwingJInternalFrameLocal.actualizarRelaciones(empleadoevaluaBeanSwingJInternalFrameLocal.empleado);

				evaluacionempleadoLocal.setEmpleadoEvalua(empleadoevaluaBeanSwingJInternalFrameLocal.empleado);

				this.addItemDefectoCombosForeignKeyEmpleadoEvalua();
				this.cargarCombosFrameEmpleadoEvaluasForeignKey("Formulario");
				this.setActualEmpleadoEvaluaForeignKey(empleadoevaluaBeanSwingJInternalFrameLocal.empleado.getId(),false,"Formulario");
			}
			 else if(this.jInternalFrameParent.getClass().equals(TipoEvaluacionEmpleadoDetalleFormJInternalFrame.class)) {
				TipoEvaluacionEmpleadoBeanSwingJInternalFrame tipoevaluacionempleadoBeanSwingJInternalFrameLocal=(TipoEvaluacionEmpleadoBeanSwingJInternalFrame) ((TipoEvaluacionEmpleadoDetalleFormJInternalFrame) this.jInternalFrameParent).jInternalFrameParent;

				tipoevaluacionempleadoBeanSwingJInternalFrameLocal.setVariablesFormularioToObjetoActualTodoTipoEvaluacionEmpleado(tipoevaluacionempleadoBeanSwingJInternalFrameLocal.gettipoevaluacionempleado(),true);
				tipoevaluacionempleadoBeanSwingJInternalFrameLocal.actualizarLista(tipoevaluacionempleadoBeanSwingJInternalFrameLocal.tipoevaluacionempleado,this.tipoevaluacionempleadosForeignKey);

				tipoevaluacionempleadoBeanSwingJInternalFrameLocal.actualizarRelaciones(tipoevaluacionempleadoBeanSwingJInternalFrameLocal.tipoevaluacionempleado);

				evaluacionempleadoLocal.setTipoEvaluacionEmpleado(tipoevaluacionempleadoBeanSwingJInternalFrameLocal.tipoevaluacionempleado);

				this.addItemDefectoCombosForeignKeyTipoEvaluacionEmpleado();
				this.cargarCombosFrameTipoEvaluacionEmpleadosForeignKey("Formulario");
				this.setActualTipoEvaluacionEmpleadoForeignKey(tipoevaluacionempleadoBeanSwingJInternalFrameLocal.tipoevaluacionempleado.getId(),false,"Formulario");
			}
			 else if(this.jInternalFrameParent.getClass().equals(AnioDetalleFormJInternalFrame.class)) {
				AnioBeanSwingJInternalFrame anioBeanSwingJInternalFrameLocal=(AnioBeanSwingJInternalFrame) ((AnioDetalleFormJInternalFrame) this.jInternalFrameParent).jInternalFrameParent;

				anioBeanSwingJInternalFrameLocal.setVariablesFormularioToObjetoActualTodoAnio(anioBeanSwingJInternalFrameLocal.getanio(),true);
				anioBeanSwingJInternalFrameLocal.actualizarLista(anioBeanSwingJInternalFrameLocal.anio,this.aniosForeignKey);

				anioBeanSwingJInternalFrameLocal.actualizarRelaciones(anioBeanSwingJInternalFrameLocal.anio);

				evaluacionempleadoLocal.setAnio(anioBeanSwingJInternalFrameLocal.anio);

				this.addItemDefectoCombosForeignKeyAnio();
				this.cargarCombosFrameAniosForeignKey("Formulario");
				this.setActualAnioForeignKey(anioBeanSwingJInternalFrameLocal.anio.getId(),false,"Formulario");
			}
			 else if(this.jInternalFrameParent.getClass().equals(SemestreDetalleFormJInternalFrame.class)) {
				SemestreBeanSwingJInternalFrame semestreBeanSwingJInternalFrameLocal=(SemestreBeanSwingJInternalFrame) ((SemestreDetalleFormJInternalFrame) this.jInternalFrameParent).jInternalFrameParent;

				semestreBeanSwingJInternalFrameLocal.setVariablesFormularioToObjetoActualTodoSemestre(semestreBeanSwingJInternalFrameLocal.getsemestre(),true);
				semestreBeanSwingJInternalFrameLocal.actualizarLista(semestreBeanSwingJInternalFrameLocal.semestre,this.semestresForeignKey);

				semestreBeanSwingJInternalFrameLocal.actualizarRelaciones(semestreBeanSwingJInternalFrameLocal.semestre);

				evaluacionempleadoLocal.setSemestre(semestreBeanSwingJInternalFrameLocal.semestre);

				this.addItemDefectoCombosForeignKeySemestre();
				this.cargarCombosFrameSemestresForeignKey("Formulario");
				this.setActualSemestreForeignKey(semestreBeanSwingJInternalFrameLocal.semestre.getId(),false,"Formulario");
			}
			 else if(this.jInternalFrameParent.getClass().equals(TrimestreDetalleFormJInternalFrame.class)) {
				TrimestreBeanSwingJInternalFrame trimestreBeanSwingJInternalFrameLocal=(TrimestreBeanSwingJInternalFrame) ((TrimestreDetalleFormJInternalFrame) this.jInternalFrameParent).jInternalFrameParent;

				trimestreBeanSwingJInternalFrameLocal.setVariablesFormularioToObjetoActualTodoTrimestre(trimestreBeanSwingJInternalFrameLocal.gettrimestre(),true);
				trimestreBeanSwingJInternalFrameLocal.actualizarLista(trimestreBeanSwingJInternalFrameLocal.trimestre,this.trimestresForeignKey);

				trimestreBeanSwingJInternalFrameLocal.actualizarRelaciones(trimestreBeanSwingJInternalFrameLocal.trimestre);

				evaluacionempleadoLocal.setTrimestre(trimestreBeanSwingJInternalFrameLocal.trimestre);

				this.addItemDefectoCombosForeignKeyTrimestre();
				this.cargarCombosFrameTrimestresForeignKey("Formulario");
				this.setActualTrimestreForeignKey(trimestreBeanSwingJInternalFrameLocal.trimestre.getId(),false,"Formulario");
			}
			 else if(this.jInternalFrameParent.getClass().equals(BimestreDetalleFormJInternalFrame.class)) {
				BimestreBeanSwingJInternalFrame bimestreBeanSwingJInternalFrameLocal=(BimestreBeanSwingJInternalFrame) ((BimestreDetalleFormJInternalFrame) this.jInternalFrameParent).jInternalFrameParent;

				bimestreBeanSwingJInternalFrameLocal.setVariablesFormularioToObjetoActualTodoBimestre(bimestreBeanSwingJInternalFrameLocal.getbimestre(),true);
				bimestreBeanSwingJInternalFrameLocal.actualizarLista(bimestreBeanSwingJInternalFrameLocal.bimestre,this.bimestresForeignKey);

				bimestreBeanSwingJInternalFrameLocal.actualizarRelaciones(bimestreBeanSwingJInternalFrameLocal.bimestre);

				evaluacionempleadoLocal.setBimestre(bimestreBeanSwingJInternalFrameLocal.bimestre);

				this.addItemDefectoCombosForeignKeyBimestre();
				this.cargarCombosFrameBimestresForeignKey("Formulario");
				this.setActualBimestreForeignKey(bimestreBeanSwingJInternalFrameLocal.bimestre.getId(),false,"Formulario");
			}
			 else if(this.jInternalFrameParent.getClass().equals(MesDetalleFormJInternalFrame.class)) {
				MesBeanSwingJInternalFrame mesBeanSwingJInternalFrameLocal=(MesBeanSwingJInternalFrame) ((MesDetalleFormJInternalFrame) this.jInternalFrameParent).jInternalFrameParent;

				mesBeanSwingJInternalFrameLocal.setVariablesFormularioToObjetoActualTodoMes(mesBeanSwingJInternalFrameLocal.getmes(),true);
				mesBeanSwingJInternalFrameLocal.actualizarLista(mesBeanSwingJInternalFrameLocal.mes,this.messForeignKey);

				mesBeanSwingJInternalFrameLocal.actualizarRelaciones(mesBeanSwingJInternalFrameLocal.mes);

				evaluacionempleadoLocal.setMes(mesBeanSwingJInternalFrameLocal.mes);

				this.addItemDefectoCombosForeignKeyMes();
				this.cargarCombosFrameMessForeignKey("Formulario");
				this.setActualMesForeignKey(mesBeanSwingJInternalFrameLocal.mes.getId(),false,"Formulario");
			}
		
		}
	}
	
	public Boolean validarEvaluacionEmpleadoActual() throws Exception {
		Boolean estaValidado=false;
		this.inicializarInvalidValues();
		
		/*
		int intSelectedRow = this.jTableDatosEvaluacionEmpleado.getSelectedRow();
				
		//ARCHITECTURE
		if(Constantes.ISUSAEJBLOGICLAYER) {
			this.evaluacionempleado =(EvaluacionEmpleado) this.evaluacionempleadoLogic.getEvaluacionEmpleados().toArray()[this.jTableDatosEvaluacionEmpleado.convertRowIndexToModel(intSelectedRow)];
		} else if(Constantes.ISUSAEJBREMOTE ||Constantes.ISUSAEJBHOME) {
			this.evaluacionempleado =(EvaluacionEmpleado) this.evaluacionempleados.toArray()[this.jTableDatosEvaluacionEmpleado.convertRowIndexToModel(intSelectedRow)];
		}
		//ARCHITECTURE
		*/
		
		this.invalidValues = evaluacionempleadoValidator.getInvalidValues(this.evaluacionempleado);
					
		if(this.invalidValues==null || this.invalidValues.length<=0) {
			estaValidado=true;
		} else {
			this.mostrarInvalidValues();	
		}
		
		return estaValidado;
	}
	
	public void actualizarLista(EvaluacionEmpleado evaluacionempleado,List<EvaluacionEmpleado> evaluacionempleados) throws Exception {
		try	{		
			EvaluacionEmpleadoConstantesFunciones.actualizarLista(evaluacionempleado,evaluacionempleados,this.evaluacionempleadoSessionBean.getEsGuardarRelacionado());		
		} catch(Exception e) {
			throw e;
		}
	}		
	
	public void actualizarSelectedLista(EvaluacionEmpleado evaluacionempleado,List<EvaluacionEmpleado> evaluacionempleados) throws Exception {
		try	{			
			EvaluacionEmpleadoConstantesFunciones.actualizarSelectedLista(evaluacionempleado,evaluacionempleados);
		} catch(Exception e) {
			throw e;
		}
	}	
	
	public Boolean tieneElementosSeleccionados() throws Exception {
		Boolean tiene=false;
		
		List<EvaluacionEmpleado> evaluacionempleadosLocal=null;
		
		try	{			
			//ARCHITECTURE
			if(Constantes.ISUSAEJBLOGICLAYER) {
				evaluacionempleadosLocal=this.evaluacionempleadoLogic.getEvaluacionEmpleados();
			} else if(Constantes.ISUSAEJBREMOTE || Constantes.ISUSAEJBHOME) {
				evaluacionempleadosLocal=this.evaluacionempleados;
			}
			//ARCHITECTURE
		
			for(EvaluacionEmpleado evaluacionempleadoLocal:evaluacionempleadosLocal) {
				if(this.permiteMantenimiento(evaluacionempleadoLocal) && evaluacionempleadoLocal.getIsSelected()) {
					tiene=true;
					break;
				}
			}
		} catch(Exception e) {
			throw e;
		}
		
		return tiene;
	}			
	
	public void mostrarInvalidValues() throws Exception {
		String sMensaje="";
				
		for (InvalidValue invalidValue : this.invalidValues) {
			sMensaje+="\r\n"+EvaluacionEmpleadoConstantesFunciones.getEvaluacionEmpleadoLabelDesdeNombre(invalidValue.getPropertyName())+"->"+invalidValue.getMessage();
			
			//MOSTRAR CAMPOS INVALIDOS
			if(invalidValue.getPropertyName().equals(EvaluacionEmpleadoConstantesFunciones.IDEMPRESA)) {FuncionesSwing.mostrarCampoMensajeInvalido(false,this.jInternalFrameDetalleFormEvaluacionEmpleado.jLabelid_empresaEvaluacionEmpleado,invalidValue.getMessage());}
			if(invalidValue.getPropertyName().equals(EvaluacionEmpleadoConstantesFunciones.IDSUCURSAL)) {FuncionesSwing.mostrarCampoMensajeInvalido(false,this.jInternalFrameDetalleFormEvaluacionEmpleado.jLabelid_sucursalEvaluacionEmpleado,invalidValue.getMessage());}
			if(invalidValue.getPropertyName().equals(EvaluacionEmpleadoConstantesFunciones.IDEJERCICIO)) {FuncionesSwing.mostrarCampoMensajeInvalido(false,this.jInternalFrameDetalleFormEvaluacionEmpleado.jLabelid_ejercicioEvaluacionEmpleado,invalidValue.getMessage());}
			if(invalidValue.getPropertyName().equals(EvaluacionEmpleadoConstantesFunciones.IDPERIODO)) {FuncionesSwing.mostrarCampoMensajeInvalido(false,this.jInternalFrameDetalleFormEvaluacionEmpleado.jLabelid_periodoEvaluacionEmpleado,invalidValue.getMessage());}
			if(invalidValue.getPropertyName().equals(EvaluacionEmpleadoConstantesFunciones.IDESTRUCTURA)) {FuncionesSwing.mostrarCampoMensajeInvalido(false,this.jInternalFrameDetalleFormEvaluacionEmpleado.jLabelid_estructuraEvaluacionEmpleado,invalidValue.getMessage());}
			if(invalidValue.getPropertyName().equals(EvaluacionEmpleadoConstantesFunciones.IDEMPLEADO)) {FuncionesSwing.mostrarCampoMensajeInvalido(false,this.jInternalFrameDetalleFormEvaluacionEmpleado.jLabelid_empleadoEvaluacionEmpleado,invalidValue.getMessage());}
			if(invalidValue.getPropertyName().equals(EvaluacionEmpleadoConstantesFunciones.IDEMPLEADOEVALUA)) {FuncionesSwing.mostrarCampoMensajeInvalido(false,this.jInternalFrameDetalleFormEvaluacionEmpleado.jLabelid_empleado_evaluaEvaluacionEmpleado,invalidValue.getMessage());}
			if(invalidValue.getPropertyName().equals(EvaluacionEmpleadoConstantesFunciones.IDTIPOEVALUACIONEMPLEADO)) {FuncionesSwing.mostrarCampoMensajeInvalido(false,this.jInternalFrameDetalleFormEvaluacionEmpleado.jLabelid_tipo_evaluacion_empleadoEvaluacionEmpleado,invalidValue.getMessage());}
			if(invalidValue.getPropertyName().equals(EvaluacionEmpleadoConstantesFunciones.FECHA)) {FuncionesSwing.mostrarCampoMensajeInvalido(false,this.jInternalFrameDetalleFormEvaluacionEmpleado.jLabelfechaEvaluacionEmpleado,invalidValue.getMessage());}
			if(invalidValue.getPropertyName().equals(EvaluacionEmpleadoConstantesFunciones.ESTAEVALUADO)) {FuncionesSwing.mostrarCampoMensajeInvalido(false,this.jInternalFrameDetalleFormEvaluacionEmpleado.jLabelesta_evaluadoEvaluacionEmpleado,invalidValue.getMessage());}
			if(invalidValue.getPropertyName().equals(EvaluacionEmpleadoConstantesFunciones.IDANIO)) {FuncionesSwing.mostrarCampoMensajeInvalido(false,this.jInternalFrameDetalleFormEvaluacionEmpleado.jLabelid_anioEvaluacionEmpleado,invalidValue.getMessage());}
			if(invalidValue.getPropertyName().equals(EvaluacionEmpleadoConstantesFunciones.IDSEMESTRE)) {FuncionesSwing.mostrarCampoMensajeInvalido(false,this.jInternalFrameDetalleFormEvaluacionEmpleado.jLabelid_semestreEvaluacionEmpleado,invalidValue.getMessage());}
			if(invalidValue.getPropertyName().equals(EvaluacionEmpleadoConstantesFunciones.IDTRIMESTRE)) {FuncionesSwing.mostrarCampoMensajeInvalido(false,this.jInternalFrameDetalleFormEvaluacionEmpleado.jLabelid_trimestreEvaluacionEmpleado,invalidValue.getMessage());}
			if(invalidValue.getPropertyName().equals(EvaluacionEmpleadoConstantesFunciones.IDBIMESTRE)) {FuncionesSwing.mostrarCampoMensajeInvalido(false,this.jInternalFrameDetalleFormEvaluacionEmpleado.jLabelid_bimestreEvaluacionEmpleado,invalidValue.getMessage());}
			if(invalidValue.getPropertyName().equals(EvaluacionEmpleadoConstantesFunciones.IDMES)) {FuncionesSwing.mostrarCampoMensajeInvalido(false,this.jInternalFrameDetalleFormEvaluacionEmpleado.jLabelid_mesEvaluacionEmpleado,invalidValue.getMessage());}
			if(invalidValue.getPropertyName().equals(EvaluacionEmpleadoConstantesFunciones.OBSERVACION1)) {FuncionesSwing.mostrarCampoMensajeInvalido(false,this.jInternalFrameDetalleFormEvaluacionEmpleado.jLabelobservacion1EvaluacionEmpleado,invalidValue.getMessage());}
			if(invalidValue.getPropertyName().equals(EvaluacionEmpleadoConstantesFunciones.OBSERVACION2)) {FuncionesSwing.mostrarCampoMensajeInvalido(false,this.jInternalFrameDetalleFormEvaluacionEmpleado.jLabelobservacion2EvaluacionEmpleado,invalidValue.getMessage());}
			if(invalidValue.getPropertyName().equals(EvaluacionEmpleadoConstantesFunciones.OBSERVACION3)) {FuncionesSwing.mostrarCampoMensajeInvalido(false,this.jInternalFrameDetalleFormEvaluacionEmpleado.jLabelobservacion3EvaluacionEmpleado,invalidValue.getMessage());}
			if(invalidValue.getPropertyName().equals(EvaluacionEmpleadoConstantesFunciones.OBSERVACION4)) {FuncionesSwing.mostrarCampoMensajeInvalido(false,this.jInternalFrameDetalleFormEvaluacionEmpleado.jLabelobservacion4EvaluacionEmpleado,invalidValue.getMessage());}
        }
		
		
		if(!sMensaje.equals("")) {
			//JOptionPane.showMessageDialog(this,sMensaje,"VALIDACION ",JOptionPane.ERROR_MESSAGE);
			throw new Exception(sMensaje);			
		}
		
		/*
		System.out.println(invalidValue);
        System.out.println("message=" + invalidValue.getMessage());
        System.out.println("propertyName=" + invalidValue.getPropertyName());
        System.out.println("propertyPath=" + invalidValue.getPropertyPath());
        System.out.println("value=" + invalidValue.getValue());
        */
	}		
	
	public void inicializarInvalidValues() throws Exception {
		String sMensaje="";	
		
		if(this.jInternalFrameDetalleFormEvaluacionEmpleado!=null) {
		
		//MOSTRAR CAMPOS INVALIDOS
		FuncionesSwing.mostrarCampoMensajeInvalido(true,this.jInternalFrameDetalleFormEvaluacionEmpleado.jLabelid_empresaEvaluacionEmpleado,"");
		FuncionesSwing.mostrarCampoMensajeInvalido(true,this.jInternalFrameDetalleFormEvaluacionEmpleado.jLabelid_sucursalEvaluacionEmpleado,"");
		FuncionesSwing.mostrarCampoMensajeInvalido(true,this.jInternalFrameDetalleFormEvaluacionEmpleado.jLabelid_ejercicioEvaluacionEmpleado,"");
		FuncionesSwing.mostrarCampoMensajeInvalido(true,this.jInternalFrameDetalleFormEvaluacionEmpleado.jLabelid_periodoEvaluacionEmpleado,"");
		FuncionesSwing.mostrarCampoMensajeInvalido(true,this.jInternalFrameDetalleFormEvaluacionEmpleado.jLabelid_estructuraEvaluacionEmpleado,"");
		FuncionesSwing.mostrarCampoMensajeInvalido(true,this.jInternalFrameDetalleFormEvaluacionEmpleado.jLabelid_empleadoEvaluacionEmpleado,"");
		FuncionesSwing.mostrarCampoMensajeInvalido(true,this.jInternalFrameDetalleFormEvaluacionEmpleado.jLabelid_empleado_evaluaEvaluacionEmpleado,"");
		FuncionesSwing.mostrarCampoMensajeInvalido(true,this.jInternalFrameDetalleFormEvaluacionEmpleado.jLabelid_tipo_evaluacion_empleadoEvaluacionEmpleado,"");
		FuncionesSwing.mostrarCampoMensajeInvalido(true,this.jInternalFrameDetalleFormEvaluacionEmpleado.jLabelfechaEvaluacionEmpleado,"");
		FuncionesSwing.mostrarCampoMensajeInvalido(true,this.jInternalFrameDetalleFormEvaluacionEmpleado.jLabelesta_evaluadoEvaluacionEmpleado,"");
		FuncionesSwing.mostrarCampoMensajeInvalido(true,this.jInternalFrameDetalleFormEvaluacionEmpleado.jLabelid_anioEvaluacionEmpleado,"");
		FuncionesSwing.mostrarCampoMensajeInvalido(true,this.jInternalFrameDetalleFormEvaluacionEmpleado.jLabelid_semestreEvaluacionEmpleado,"");
		FuncionesSwing.mostrarCampoMensajeInvalido(true,this.jInternalFrameDetalleFormEvaluacionEmpleado.jLabelid_trimestreEvaluacionEmpleado,"");
		FuncionesSwing.mostrarCampoMensajeInvalido(true,this.jInternalFrameDetalleFormEvaluacionEmpleado.jLabelid_bimestreEvaluacionEmpleado,"");
		FuncionesSwing.mostrarCampoMensajeInvalido(true,this.jInternalFrameDetalleFormEvaluacionEmpleado.jLabelid_mesEvaluacionEmpleado,"");
		FuncionesSwing.mostrarCampoMensajeInvalido(true,this.jInternalFrameDetalleFormEvaluacionEmpleado.jLabelobservacion1EvaluacionEmpleado,"");
		FuncionesSwing.mostrarCampoMensajeInvalido(true,this.jInternalFrameDetalleFormEvaluacionEmpleado.jLabelobservacion2EvaluacionEmpleado,"");
		FuncionesSwing.mostrarCampoMensajeInvalido(true,this.jInternalFrameDetalleFormEvaluacionEmpleado.jLabelobservacion3EvaluacionEmpleado,"");
		FuncionesSwing.mostrarCampoMensajeInvalido(true,this.jInternalFrameDetalleFormEvaluacionEmpleado.jLabelobservacion4EvaluacionEmpleado,"");
		
		}
	}
	
	
	
	public void actualizarObjetoPadreFk(String sTipo)  throws Exception {
		if(sTipo.equals("XXXAuxiliar")) {
		
		}
		
		 else  if(sTipo.equals("CalificacionEmpleado")) {
			if(this.evaluacionempleado==null) {
				this.evaluacionempleado= new EvaluacionEmpleado();
			}

			if(this.evaluacionempleadoSessionBean.getConGuardarRelaciones()) { //&& this.isEsNuevoEvaluacionEmpleado
				this.setVariablesFormularioToObjetoActualEvaluacionEmpleado(this.evaluacionempleado,true);//false
				this.setVariablesFormularioToObjetoActualForeignKeysEvaluacionEmpleado(this.evaluacionempleado);

				this.jInternalFrameDetalleFormEvaluacionEmpleado.calificacionempleadoBeanSwingJInternalFrame.getcalificacionempleado().setEvaluacionEmpleado(this.evaluacionempleado);
			}

			return;
		}
	}
	
	public void nuevoPreparar() throws Exception {
		this.nuevoPreparar(false);
	}
	
	public void nuevoPreparar(Boolean esNuevoGuardarCambios) throws Exception {
		this.iIdNuevoEvaluacionEmpleado--;	
		
		
		this.evaluacionempleadoAux=new EvaluacionEmpleado();
		
		this.evaluacionempleadoAux.setId(this.iIdNuevoEvaluacionEmpleado);
		this.evaluacionempleadoAux.setIsChanged(true);
		
		//ARCHITECTURE
		if(Constantes.ISUSAEJBLOGICLAYER) {
			this.evaluacionempleadoLogic.getEvaluacionEmpleados().add(this.evaluacionempleadoAux);
		} else if(Constantes.ISUSAEJBREMOTE || Constantes.ISUSAEJBHOME) {
			this.evaluacionempleados.add(this.evaluacionempleadoAux);
		}
		//ARCHITECTURE
		
		this.evaluacionempleado=this.evaluacionempleadoAux;
		
		if(EvaluacionEmpleadoJInternalFrame.ISBINDING_MANUAL_TABLA) {
			this.setVariablesObjetoActualToFormularioEvaluacionEmpleado(this.evaluacionempleado);
			this.setVariablesObjetoActualToFormularioForeignKeyEvaluacionEmpleado(this.evaluacionempleado);
		}
				
		//this.setDefaultControlesEvaluacionEmpleado();
		
		this.inicializarInvalidValues();
				
		//SELECCIONA ITEM DEFECTO-->SET O SELECTED INDEX
		this.setItemDefectoCombosForeignKeyEvaluacionEmpleado();
		
		
		//INICIALIZA VARIABLES COMBOS GLOBALES A FORMULARIO(ParametroGeneralUsuario)
		this.setVariablesGlobalesCombosForeignKeyEvaluacionEmpleado();
		
		//INICIALIZA VARIABLES COMBOS GLOBALES AUXILIARES A FORMULARIO(Anio,Mes)
		//this.setVariablesGlobalesAuxiliaresCombosForeignKeyEvaluacionEmpleado();
		
		//SI TIENE FOREIGN KEY CON CAMPO esDefecto=true, SE ACTUALIZA A OBJETO ACTUAL
		this.setVariablesForeignKeyObjetoBeanDefectoActualToObjetoActualEvaluacionEmpleado(this.evaluacionempleadoBean,this.evaluacionempleado,false,false);
		
		//ACTUALIZA VALORES PARA EL OBJETO ACTUAL ANTES DE ENVIARLO A ACTUALIZAR
		this.setVariablesFormularioToObjetoActualForeignKeysEvaluacionEmpleado(this.evaluacionempleado);
				
		ArrayList<Classe> classes=new ArrayList<Classe>();
		
		if(this.jInternalFrameParent!=null) {
			this.jInternalFrameParent.actualizarObjetoPadreFk(EvaluacionEmpleadoConstantesFunciones.CLASSNAME);
		}	
		
		
		if(this.evaluacionempleadoSessionBean.getConGuardarRelaciones()) {
			classes=EvaluacionEmpleadoConstantesFunciones.getClassesRelationshipsOfEvaluacionEmpleado(new ArrayList<Classe>(),DeepLoadType.NONE);
		}
		
		this.classesActual=new ArrayList<Classe>();
		this.classesActual.addAll(classes);
				
		//ARCHITECTURE
		if(Constantes.ISUSAEJBLOGICLAYER) {						
			this.evaluacionempleadoReturnGeneral=evaluacionempleadoLogic.procesarEventosEvaluacionEmpleadosWithConnection(this.parametroGeneralUsuario,this.moduloActual,this.opcionActual,this.usuarioActual,EventoGlobalTipo.FORM_RECARGAR,ControlTipo.FORM,EventoTipo.LOAD,EventoSubTipo.NEW,"FORM",this.evaluacionempleadoLogic.getEvaluacionEmpleados(),this.evaluacionempleado,this.evaluacionempleadoParameterGeneral,this.isEsNuevoEvaluacionEmpleado,classes);//this.evaluacionempleadoLogic.getEvaluacionEmpleado()
						
		} else if(Constantes.ISUSAEJBREMOTE) {
						
		} else if(Constantes.ISUSAEJBHOME) {
		}
		//ARCHITECTURE
		
		//ACTUALIZA VARIABLES DEFECTO DESDE LOGIC A RETURN GENERAL Y LUEGO A BEAN
		//this.setVariablesObjetoReturnGeneralToBeanEvaluacionEmpleado(this.evaluacionempleadoReturnGeneral,this.evaluacionempleadoBean,false);
		
		if(this.evaluacionempleadoReturnGeneral.getConRecargarPropiedades()) {
			//INICIALIZA VARIABLES COMBOS NORMALES (FK)
			this.setVariablesObjetoActualToFormularioForeignKeyEvaluacionEmpleado(this.evaluacionempleadoReturnGeneral.getEvaluacionEmpleado());
			
			//INICIALIZA VARIABLES NORMALES A FORMULARIO(SIN FK)
			this.setVariablesObjetoActualToFormularioEvaluacionEmpleado(this.evaluacionempleadoReturnGeneral.getEvaluacionEmpleado());
		}
		
		if(this.evaluacionempleadoReturnGeneral.getConRecargarRelaciones()) {
			//INICIALIZA VARIABLES RELACIONES A FORMULARIO
			this.setVariablesRelacionesObjetoActualToFormularioEvaluacionEmpleado(this.evaluacionempleadoReturnGeneral.getEvaluacionEmpleado(),classes);//this.evaluacionempleadoBean);	
		}
			
		//ACTUALIZA VARIABLES FORMULARIO A OBJETO ACTUAL (PARA NUEVO TABLA O GUARDAR CAMBIOS
		if(esNuevoGuardarCambios) {
			this.setVariablesFormularioToObjetoActualEvaluacionEmpleado(this.evaluacionempleado,false);
		}
		
		//INICIALIZA VARIABLES COMBOS DEFAULT DEL PROYECTO(|DEFAULT para FK)
		//this.setVariablesDefaultCombosForeignKeyEvaluacionEmpleado();
		
		//INICIALIZA VARIABLES COMBOS PARAMETRO DEL PROYECTO(|VALORPARAM Era para ParametroModulo, ahora en logic)
		//this.setVariablesParametroCombosForeignKeyEvaluacionEmpleado();						
		
		if(!esNuevoGuardarCambios) {
			//INICIALIZA VARIABLES POR OPCION MENU
			this.arrDatoGeneral= new  ArrayList<DatoGeneral>();
			this.arrDatoGeneralNo= new  ArrayList<String>();
			
			EvaluacionEmpleadoBeanSwingJInternalFrameAdditional.RecargarFormEvaluacionEmpleado(this,"NUEVO_PREPARAR","",this.arrDatoGeneral);
		
			//NO FUNCIONA BINDINGS			
			this.inicializarActualizarBindingEvaluacionEmpleado(false);
						
			if(evaluacionempleadoSessionBean.getConGuardarRelaciones()) {
				//DEBERIA YA ESTAR CARGADO LOS COMBOS Y SI SE NECESITA ALGO MAS SE DEBE CREAR FUNCION LIMITADA
				//SI DEBE TRAER Y RESETEAR TABLA
				

				if(this.jInternalFrameDetalleFormEvaluacionEmpleado.calificacionempleadoBeanSwingJInternalFrame!=null && this.jInternalFrameDetalleFormEvaluacionEmpleado.calificacionempleadoBeanSwingJInternalFrame.calificacionempleadoSessionBean.getEsGuardarRelacionado() && CalificacionEmpleadoJInternalFrame.ESTA_CARGADO_PORPARTE) {
					this.jButtonCalificacionEmpleadoActionPerformed(null,-1,false,true,null);
				}				
			}
				
			//SI ES MANUAL
			if(EvaluacionEmpleadoJInternalFrame.ISBINDING_MANUAL) {
				//this.inicializarActualizarBindingManualEvaluacionEmpleado();
			}
			
			this.actualizarVisualTableDatosEvaluacionEmpleado();
			
			this.jTableDatosEvaluacionEmpleado.setRowSelectionInterval(this.getIndiceNuevoEvaluacionEmpleado(), this.getIndiceNuevoEvaluacionEmpleado());
			
			this.seleccionarFilaTablaEvaluacionEmpleadoActual();
						
			this.actualizarEstadoCeldasBotonesEvaluacionEmpleado("a", isGuardarCambiosEnLote, isEsMantenimientoRelacionado);			
		
		}		
	}
	
	public void habilitarDeshabilitarControlesEvaluacionEmpleado(Boolean isHabilitar) throws Exception {
		
		this.jInternalFrameDetalleFormEvaluacionEmpleado.jDateChooserfechaEvaluacionEmpleado.setEnabled(isHabilitar && this.evaluacionempleadoConstantesFunciones.activarfechaEvaluacionEmpleado);
		this.jInternalFrameDetalleFormEvaluacionEmpleado.jCheckBoxesta_evaluadoEvaluacionEmpleado.setEnabled(isHabilitar && this.evaluacionempleadoConstantesFunciones.activaresta_evaluadoEvaluacionEmpleado);
		this.jInternalFrameDetalleFormEvaluacionEmpleado.jTextAreaobservacion1EvaluacionEmpleado.setEnabled(isHabilitar && this.evaluacionempleadoConstantesFunciones.activarobservacion1EvaluacionEmpleado);
		this.jInternalFrameDetalleFormEvaluacionEmpleado.jTextAreaobservacion2EvaluacionEmpleado.setEnabled(isHabilitar && this.evaluacionempleadoConstantesFunciones.activarobservacion2EvaluacionEmpleado);
		this.jInternalFrameDetalleFormEvaluacionEmpleado.jTextAreaobservacion3EvaluacionEmpleado.setEnabled(isHabilitar && this.evaluacionempleadoConstantesFunciones.activarobservacion3EvaluacionEmpleado);
		this.jInternalFrameDetalleFormEvaluacionEmpleado.jTextAreaobservacion4EvaluacionEmpleado.setEnabled(isHabilitar && this.evaluacionempleadoConstantesFunciones.activarobservacion4EvaluacionEmpleado);	
		//
		this.jInternalFrameDetalleFormEvaluacionEmpleado.jComboBoxid_empresaEvaluacionEmpleado.setEnabled(isHabilitar && this.evaluacionempleadoConstantesFunciones.activarid_empresaEvaluacionEmpleado);//
		this.jInternalFrameDetalleFormEvaluacionEmpleado.jComboBoxid_sucursalEvaluacionEmpleado.setEnabled(isHabilitar && this.evaluacionempleadoConstantesFunciones.activarid_sucursalEvaluacionEmpleado);//
		this.jInternalFrameDetalleFormEvaluacionEmpleado.jComboBoxid_ejercicioEvaluacionEmpleado.setEnabled(isHabilitar && this.evaluacionempleadoConstantesFunciones.activarid_ejercicioEvaluacionEmpleado);//
		this.jInternalFrameDetalleFormEvaluacionEmpleado.jComboBoxid_periodoEvaluacionEmpleado.setEnabled(isHabilitar && this.evaluacionempleadoConstantesFunciones.activarid_periodoEvaluacionEmpleado);
		this.jInternalFrameDetalleFormEvaluacionEmpleado.jComboBoxid_estructuraEvaluacionEmpleado.setEnabled(isHabilitar && this.evaluacionempleadoConstantesFunciones.activarid_estructuraEvaluacionEmpleado);
		this.jInternalFrameDetalleFormEvaluacionEmpleado.jComboBoxid_empleadoEvaluacionEmpleado.setEnabled(isHabilitar && this.evaluacionempleadoConstantesFunciones.activarid_empleadoEvaluacionEmpleado);
		this.jInternalFrameDetalleFormEvaluacionEmpleado.jComboBoxid_empleado_evaluaEvaluacionEmpleado.setEnabled(isHabilitar && this.evaluacionempleadoConstantesFunciones.activarid_empleado_evaluaEvaluacionEmpleado);
		this.jInternalFrameDetalleFormEvaluacionEmpleado.jComboBoxid_tipo_evaluacion_empleadoEvaluacionEmpleado.setEnabled(isHabilitar && this.evaluacionempleadoConstantesFunciones.activarid_tipo_evaluacion_empleadoEvaluacionEmpleado);
		this.jInternalFrameDetalleFormEvaluacionEmpleado.jComboBoxid_anioEvaluacionEmpleado.setEnabled(isHabilitar && this.evaluacionempleadoConstantesFunciones.activarid_anioEvaluacionEmpleado);
		this.jInternalFrameDetalleFormEvaluacionEmpleado.jComboBoxid_semestreEvaluacionEmpleado.setEnabled(isHabilitar && this.evaluacionempleadoConstantesFunciones.activarid_semestreEvaluacionEmpleado);
		this.jInternalFrameDetalleFormEvaluacionEmpleado.jComboBoxid_trimestreEvaluacionEmpleado.setEnabled(isHabilitar && this.evaluacionempleadoConstantesFunciones.activarid_trimestreEvaluacionEmpleado);
		this.jInternalFrameDetalleFormEvaluacionEmpleado.jComboBoxid_bimestreEvaluacionEmpleado.setEnabled(isHabilitar && this.evaluacionempleadoConstantesFunciones.activarid_bimestreEvaluacionEmpleado);
		this.jInternalFrameDetalleFormEvaluacionEmpleado.jComboBoxid_mesEvaluacionEmpleado.setEnabled(isHabilitar && this.evaluacionempleadoConstantesFunciones.activarid_mesEvaluacionEmpleado);
	};
	
	public void setDefaultControlesEvaluacionEmpleado() throws Exception {
			
	};
	
	
	public void habilitarDeshabilitarTipoMantenimientoEvaluacionEmpleado(Boolean esRelaciones) throws Exception {
		if(esRelaciones) {
			//this.evaluacionempleadoSessionBean.setConGuardarRelaciones(true);			
			this.evaluacionempleadoSessionBean.setEstaModoGuardarRelaciones(true);				
			this.jInternalFrameDetalleFormEvaluacionEmpleado.jTabbedPaneRelacionesEvaluacionEmpleado.setVisible(true);
			
			

			if(this.jInternalFrameDetalleFormEvaluacionEmpleado.calificacionempleadoBeanSwingJInternalFrame!=null) {
				this.jInternalFrameDetalleFormEvaluacionEmpleado.calificacionempleadoBeanSwingJInternalFrame.calificacionempleadoSessionBean.setEsGuardarRelacionado(true);
				//this.jInternalFrameDetalleFormEvaluacionEmpleado.calificacionempleadoBeanSwingJInternalFrame.getContentPane().setVisible(true);
			}		
		} else {
			//this.evaluacionempleadoSessionBean.setConGuardarRelaciones(false);			
			this.evaluacionempleadoSessionBean.setEstaModoGuardarRelaciones(false);						
			this.jInternalFrameDetalleFormEvaluacionEmpleado.jTabbedPaneRelacionesEvaluacionEmpleado.setVisible(false);
			
			

			if(this.jInternalFrameDetalleFormEvaluacionEmpleado.calificacionempleadoBeanSwingJInternalFrame!=null) {
				this.jInternalFrameDetalleFormEvaluacionEmpleado.calificacionempleadoBeanSwingJInternalFrame.calificacionempleadoSessionBean.setEsGuardarRelacionado(false);
				//this.jInternalFrameDetalleFormEvaluacionEmpleado.calificacionempleadoBeanSwingJInternalFrame.getContentPane().setVisible(false);
			}
		}
	};
	
	public int getIndiceNuevoEvaluacionEmpleado() throws Exception {
		int iIndice=0;
		Boolean existe=false;
		
		//ARCHITECTURE
		if(Constantes.ISUSAEJBLOGICLAYER) {
			for(EvaluacionEmpleado evaluacionempleadoAux:this.evaluacionempleadoLogic.getEvaluacionEmpleados()) {
				if(evaluacionempleadoAux.getId().equals(this.iIdNuevoEvaluacionEmpleado)) {
					existe=true;
					break;
				}
				
				iIndice++;
			}
		} else if(Constantes.ISUSAEJBREMOTE || Constantes.ISUSAEJBHOME) {
			for(EvaluacionEmpleado evaluacionempleadoAux:this.evaluacionempleados) {
				if(evaluacionempleadoAux.getId().equals(this.iIdNuevoEvaluacionEmpleado)) {
					existe=true;
					break;
				}
				
				iIndice++;
			}
		}
		//ARCHITECTURE
		
		if(!existe) {
			//SI NO EXISTE TOMA LA ULTIMA FILA
			iIndice=iIndice-1;
		}
		
		return iIndice;
	}
	
	public int getIndiceActualEvaluacionEmpleado(EvaluacionEmpleado evaluacionempleado,Integer iIndiceActual) throws Exception {
		Integer iIndice=0;
		Boolean existe=false;
		
		//ARCHITECTURE
		if(Constantes.ISUSAEJBLOGICLAYER) {
			for(EvaluacionEmpleado evaluacionempleadoAux:this.evaluacionempleadoLogic.getEvaluacionEmpleados()) {
				if(evaluacionempleadoAux.getId().equals(evaluacionempleado.getId())) {
					existe=true;
					break;
				}
				
				iIndice++;
			}
		} else if(Constantes.ISUSAEJBREMOTE || Constantes.ISUSAEJBHOME) {
			for(EvaluacionEmpleado evaluacionempleadoAux:this.evaluacionempleados) {
				if(evaluacionempleadoAux.getId().equals(evaluacionempleado.getId())) {
					existe=true;
					break;
				}
				
				iIndice++;
			}
		}
		//ARCHITECTURE
		
		if(!existe) {
			//SI NO EXISTE TOMA LA ULTIMA FILA
			iIndice=iIndiceActual;
		}
		
		return iIndice;
	}
	
	public void setCamposBaseDesdeOriginalEvaluacionEmpleado(EvaluacionEmpleado evaluacionempleadoOriginal) throws Exception {
		Boolean existe=false;
		
		//ARCHITECTURE
		if(Constantes.ISUSAEJBLOGICLAYER) {
			for(EvaluacionEmpleado evaluacionempleadoAux:this.evaluacionempleadoLogic.getEvaluacionEmpleados()) {
				if(evaluacionempleadoAux.getEvaluacionEmpleadoOriginal().getId().equals(evaluacionempleadoOriginal.getId())) {
					existe=true;
					evaluacionempleadoOriginal.setId(evaluacionempleadoAux.getId());
					evaluacionempleadoOriginal.setVersionRow(evaluacionempleadoAux.getVersionRow());
					break;
				}
				
			}
		} else if(Constantes.ISUSAEJBREMOTE || Constantes.ISUSAEJBHOME) {
			for(EvaluacionEmpleado evaluacionempleadoAux:this.evaluacionempleados) {
				if(evaluacionempleadoAux.getEvaluacionEmpleadoOriginal().getId().equals(evaluacionempleadoOriginal.getId())) {
					existe=true;
					evaluacionempleadoOriginal.setId(evaluacionempleadoAux.getId());
					evaluacionempleadoOriginal.setVersionRow(evaluacionempleadoAux.getVersionRow());
					break;
				}				
			}
		}
		//ARCHITECTURE
		
		if(!existe) {
			//SI NO EXISTE TOMA LA ULTIMA FILA
		}
	}
	
	public void cancelarNuevosEvaluacionEmpleado(Boolean esParaCancelar) throws Exception {
		evaluacionempleadosAux=new ArrayList<EvaluacionEmpleado>();
		evaluacionempleadoAux=new EvaluacionEmpleado();
		
		if(!this.evaluacionempleadoSessionBean.getEsGuardarRelacionado()) {
			if(Constantes.ISUSAEJBLOGICLAYER) {
				for(EvaluacionEmpleado evaluacionempleadoAux:this.evaluacionempleadoLogic.getEvaluacionEmpleados()) {
					if(evaluacionempleadoAux.getId()<0) {
						evaluacionempleadosAux.add(evaluacionempleadoAux);
					}		
				}
				this.iIdNuevoEvaluacionEmpleado=0L;
				this.evaluacionempleadoLogic.getEvaluacionEmpleados().removeAll(evaluacionempleadosAux);
					
			} else if(Constantes.ISUSAEJBREMOTE||Constantes.ISUSAEJBHOME) {
				for(EvaluacionEmpleado evaluacionempleadoAux:this.evaluacionempleados) {
					if(evaluacionempleadoAux.getId()<0) {
						evaluacionempleadosAux.add(evaluacionempleadoAux);
					}		
				}
				this.iIdNuevoEvaluacionEmpleado=0L;
				this.evaluacionempleados.removeAll(evaluacionempleadosAux);
			}	
		} else {			
			if(Constantes.ISUSAEJBLOGICLAYER) {
				if(esParaCancelar && this.isEsNuevoEvaluacionEmpleado 
					&& this.evaluacionempleadoLogic.getEvaluacionEmpleados().size()>0
					) {
					evaluacionempleadoAux=this.evaluacionempleadoLogic.getEvaluacionEmpleados().get(this.evaluacionempleadoLogic.getEvaluacionEmpleados().size() - 1);
				
					if(evaluacionempleadoAux.getId()<0) {
						this.evaluacionempleadoLogic.getEvaluacionEmpleados().remove(evaluacionempleadoAux);
					}
				}
			} else if(Constantes.ISUSAEJBREMOTE||Constantes.ISUSAEJBHOME) {
				if(esParaCancelar && this.isEsNuevoEvaluacionEmpleado && this.evaluacionempleados.size()>0) {
					evaluacionempleadoAux=this.evaluacionempleados.get(this.evaluacionempleados.size() - 1);
				
					if(evaluacionempleadoAux.getId()<0) {
						this.evaluacionempleados.remove(evaluacionempleadoAux);
					}
				}
			}	
		}
	}
	
	public void cancelarNuevoEvaluacionEmpleado(Boolean esParaCancelar) throws Exception {
		if(Constantes.ISUSAEJBLOGICLAYER) {
			if(evaluacionempleado.getId()<0) {
				this.evaluacionempleadoLogic.getEvaluacionEmpleados().remove(this.evaluacionempleado);
			}					
		} else if(Constantes.ISUSAEJBREMOTE||Constantes.ISUSAEJBHOME) {
			if(evaluacionempleado.getId()<0) {
				this.evaluacionempleados.remove(this.evaluacionempleado);
			}
		}			
	}
	
	public void setEstadosInicialesEvaluacionEmpleado(List<EvaluacionEmpleado> evaluacionempleadosAux) throws Exception {
		EvaluacionEmpleadoConstantesFunciones.setEstadosInicialesEvaluacionEmpleado(evaluacionempleadosAux);
	}
	
	public void setEstadosInicialesEvaluacionEmpleado(EvaluacionEmpleado evaluacionempleadoAux) throws Exception {
		EvaluacionEmpleadoConstantesFunciones.setEstadosInicialesEvaluacionEmpleado(evaluacionempleadoAux);		
	}
	
	public void nuevo() throws Exception {
		try	{
			//ESTA VALIDADO EN FUNCION ACTUALIZAR
			//if(this.validarEvaluacionEmpleadoActual()) {
				this.ejecutarMantenimiento(MaintenanceType.NUEVO);
				
				this.actualizarEstadoCeldasBotonesEvaluacionEmpleado("n", isGuardarCambiosEnLote, isEsMantenimientoRelacionado);
				
			//}
		} catch(Exception e) {
			throw e;
			//FuncionesSwing.manageException(this, e,logger,EvaluacionEmpleadoConstantesFunciones.CLASSNAME);
		}
	}
	
	public void actualizar() throws Exception {
		try	{
			if(this.validarEvaluacionEmpleadoActual()) {
				if(!this.isEsNuevoEvaluacionEmpleado) {
					this.ejecutarMantenimiento(MaintenanceType.ACTUALIZAR);
					
					this.actualizarEstadoCeldasBotonesEvaluacionEmpleado("n", isGuardarCambiosEnLote, isEsMantenimientoRelacionado);
					
				} else {					
					this.nuevo();
					this.isEsNuevoEvaluacionEmpleado=false;
				}
				
				//SE CANCELA AL FINAL DEL PROCESO JBUTTONACTUALIZAR
				//this.cancelar(false);
			}		
		} catch(Exception e) {
			throw e;
			//FuncionesSwing.manageException(this, e,logger,EvaluacionEmpleadoConstantesFunciones.CLASSNAME);
		}
	}
	
	public void eliminar() throws Exception {
		try	{	
			if(this.validarEvaluacionEmpleadoActual()) {
				if(JOptionPane.showConfirmDialog(this, "ESTA SEGURO DE ELIMINAR EL/LA Evaluacion Empleado ?", "MANTENIMIENTO DE Evaluacion Empleado", JOptionPane.OK_CANCEL_OPTION) == 0) {
					this.ejecutarMantenimiento(MaintenanceType.ELIMINAR);			
					this.actualizarEstadoCeldasBotonesEvaluacionEmpleado("n", isGuardarCambiosEnLote, isEsMantenimientoRelacionado);			
				}
			
			}
		} catch(Exception e) {
			throw e;
			//FuncionesSwing.manageException(this, e,logger,EvaluacionEmpleadoConstantesFunciones.CLASSNAME);
		}
	}
	
	public void guardarCambios() throws Exception {
		try	{
			this.ejecutarMantenimiento(MaintenanceType.GUARDARCAMBIOS);
			
		} catch(Exception e) {
			FuncionesSwing.manageException(this, e,logger,EvaluacionEmpleadoConstantesFunciones.CLASSNAME);
		}
	}
	
	public void seleccionarAsignar(EvaluacionEmpleado evaluacionempleado) throws Exception {
		EvaluacionEmpleadoConstantesFunciones.seleccionarAsignar(this.evaluacionempleado,evaluacionempleado);
	}
	
	public void seleccionar() throws Exception {
		try	{
			//ACTUALIZO EL PERMISO ACTUALIZAR CON EL PERMISO ACTUALIZAR ORIGINAL ESTE PERMISO SE UTILIZA PARA EL NUEVO TAMBIEN
			this.isPermisoActualizarEvaluacionEmpleado=this.isPermisoActualizarOriginalEvaluacionEmpleado;
			
			
			this.seleccionarAsignar(evaluacionempleado);
			
			
			
			this.arrDatoGeneral= new  ArrayList<DatoGeneral>();
			this.arrDatoGeneralNo= new  ArrayList<String>();
			
			EvaluacionEmpleadoConstantesFunciones.quitarEspaciosEvaluacionEmpleado(this.evaluacionempleado,this.arrDatoGeneral);
			
			
			this.actualizarEstadoCeldasBotonesEvaluacionEmpleado("ae", isGuardarCambiosEnLote, isEsMantenimientoRelacionado);
			
						
		} catch(Exception e) {
			FuncionesSwing.manageException(this, e,logger,EvaluacionEmpleadoConstantesFunciones.CLASSNAME);
		}
	}
	
	public void seleccionarBusqueda(Long id) throws Exception {
		try	{
			this.evaluacionempleadoSessionBean.setsFuncionBusquedaRapida(this.evaluacionempleadoSessionBean.getsFuncionBusquedaRapida().replace("TO_REPLACE", id.toString()));
			
		} catch(Exception e) {
			FuncionesSwing.manageException(this, e,logger,EvaluacionEmpleadoConstantesFunciones.CLASSNAME);
		}
	}
	
	
	
	public void cancelar() throws Exception {
		this.cancelar(true);
	}
	
	public void cancelar(Boolean esParaCancelar) throws Exception {
		try {
														
			
			//SE UTILIZA COLUMNA ELIMINAR EN TABLA
			if(this.isEsNuevoEvaluacionEmpleado) {
				//NO CANCELA TODOS NUEVOS POR FUNCIONALIDAD GUARDAR CAMBIOS
				//this.cancelarNuevosEvaluacionEmpleado(esParaCancelar);				
				this.cancelarNuevoEvaluacionEmpleado(esParaCancelar);								
			}
			
			this.evaluacionempleado=new EvaluacionEmpleado();
			
			this.inicializarEvaluacionEmpleado();
			
			this.actualizarEstadoCeldasBotonesEvaluacionEmpleado("n", isGuardarCambiosEnLote, isEsMantenimientoRelacionado);			
		
		} catch(Exception e) {
			FuncionesSwing.manageException(this, e,logger,EvaluacionEmpleadoConstantesFunciones.CLASSNAME);
		}
	}
	
	public void inicializarEvaluacionEmpleado() throws Exception {
		try {
			EvaluacionEmpleadoConstantesFunciones.inicializarEvaluacionEmpleado(this.evaluacionempleado);
			
			} catch(Exception e) {
			throw e;
		}
	}
	
	public void anteriores()throws Exception {
		try	{
			//this.iNumeroPaginacionPagina=this.iNumeroPaginacionPagina-this.iNumeroPaginacion;
			
			if(this.iNumeroPaginacionPagina-this.iNumeroPaginacion<this.iNumeroPaginacion) {
				this.iNumeroPaginacionPagina=0;		
			} else {
				this.iNumeroPaginacionPagina=this.iNumeroPaginacionPagina-this.iNumeroPaginacion;
			}
			
			this.procesarBusqueda(this.sAccionBusqueda);
			
		} catch(Exception e) {
			FuncionesSwing.manageException(this, e,logger,EvaluacionEmpleadoConstantesFunciones.CLASSNAME);
		}
	}
	
	public void siguientes()throws Exception {
		try	{			
			if(this.evaluacionempleadoLogic.getEvaluacionEmpleados().size()>0) {
					
				this.iNumeroPaginacionPagina=this.iNumeroPaginacionPagina+this.iNumeroPaginacion;
			}
				
			this.procesarBusqueda(this.sAccionBusqueda);
			
		} catch(Exception e) {
			FuncionesSwing.manageException(this, e,logger,EvaluacionEmpleadoConstantesFunciones.CLASSNAME);
		}
	}		
	
	public void generarReporteEvaluacionEmpleados(String sAccionBusqueda,List<EvaluacionEmpleado> evaluacionempleadosParaReportes) throws Exception {
		//HttpSession httpSession = httpServletRequest.getSession();
		Long iIdUsuarioSesion=0L;	
		
		
		if(usuarioActual==null) {
			this.usuarioActual=new Usuario();
		}
		
		iIdUsuarioSesion=usuarioActual.getId();
		
		String sPathReportes="";
		
		InputStream reportFile=null;
		InputStream imageFile=null;
			
		imageFile=AuxiliarImagenes.class.getResourceAsStream("LogoReporte.jpg");			
				
		
		String sPathReporteFinal="";
		
		if(!esReporteAccionProceso) {
			if(!this.sTipoReporte.equals("RELACIONES")) {//!isEsReporteRelaciones
				if(!this.esReporteDinamico) {
					sPathReporteFinal="EvaluacionEmpleado"+this.sTipoReporteExtra+"Design.jasper";
					reportFile = AuxiliarReportes.class.getResourceAsStream(sPathReporteFinal);	
				} else {
					sPathReporteFinal=this.sPathReporteDinamico;
					reportFile = new FileInputStream(sPathReporteFinal);
				}
			} else {
				sPathReporteFinal="EvaluacionEmpleadoMasterRelaciones"+this.sTipoReporteExtra+"Design.jasper";
				reportFile = AuxiliarReportes.class.getResourceAsStream(sPathReporteFinal);
				//sPathReportes=reportFile.getPath().replace("EvaluacionEmpleadoMasterRelacionesDesign.jasper", "");
			}
		} else {
				sPathReporteFinal="EvaluacionEmpleado"+this.sTipoReporteExtra+"Design.jasper";
				reportFile = AuxiliarReportes.class.getResourceAsStream(sPathReporteFinal);	
		}
		
		if(reportFile==null) {
			throw new JRRuntimeException(sPathReporteFinal+" no existe");
		}
		
		String sUsuario="";
		
		if(usuarioActual!=null) {
			sUsuario=usuarioActual.getuser_name();
		}
		
		Map<String, Object> parameters = new HashMap<String, Object>();
		parameters.put("usuario", sUsuario);
		
		parameters.put("titulo", Funciones.GetTituloSistemaReporte(this.parametroGeneralSg,this.moduloActual,this.usuarioActual));
		parameters.put("subtitulo", "Reporte De  Evaluacion Empleados");		
		parameters.put("busquedapor", EvaluacionEmpleadoConstantesFunciones.getNombreIndice(sAccionBusqueda)+sDetalleReporte);
		
		
		if(this.sTipoReporte.equals("RELACIONES")) {//isEsReporteRelaciones
			parameters.put("SUBREPORT_DIR", sPathReportes);
		}
		
		parameters.put("con_grafico", this.conGraficoReporte);
		
		JasperReport jasperReport = (JasperReport)JRLoader.loadObject(reportFile);
				
		this.cargarDatosCliente();
		
		ArrayList<Classe> classes=new ArrayList<Classe>();		
		
		if(this.sTipoReporte.equals("RELACIONES")) {//isEsReporteRelaciones
			
			classes.add(new Classe(CalificacionEmpleado.class));
			
			//ARCHITECTURE
			if(Constantes.ISUSAEJBLOGICLAYER) {		
				try	{
					
					EvaluacionEmpleadoLogic evaluacionempleadoLogicAuxiliar=new EvaluacionEmpleadoLogic();
					evaluacionempleadoLogicAuxiliar.setDatosCliente(evaluacionempleadoLogic.getDatosCliente());				
					evaluacionempleadoLogicAuxiliar.setEvaluacionEmpleados(evaluacionempleadosParaReportes);
					
					evaluacionempleadoLogicAuxiliar.cargarRelacionesLoteForeignKeyEvaluacionEmpleadoWithConnection(); //deepLoadsWithConnection(false, DeepLoadType.INCLUDE, classes, "");
					
					evaluacionempleadosParaReportes=evaluacionempleadoLogicAuxiliar.getEvaluacionEmpleados();
					
					//evaluacionempleadoLogic.getNewConnexionToDeep();
					
					//for (EvaluacionEmpleado evaluacionempleado:evaluacionempleadosParaReportes) {
					//	evaluacionempleadoLogic.deepLoad(evaluacionempleado, false, DeepLoadType.INCLUDE, classes);
					//}						
					//evaluacionempleadoLogic.commitNewConnexionToDeep();
					
						
				} catch(Exception e) {
					throw e;
					
				} finally {
					//evaluacionempleadoLogic.closeNewConnexionToDeep();
				}
			} else if(Constantes.ISUSAEJBREMOTE) {
			} else if(Constantes.ISUSAEJBHOME) {
			}
			//ARCHITECTURE		
			
		
			
			

			InputStream reportFileCalificacionEmpleado = AuxiliarReportes.class.getResourceAsStream("CalificacionEmpleadoDetalleRelacionesDesign.jasper");
			parameters.put("subreport_calificacionempleado", reportFileCalificacionEmpleado);
		} else {
			//FK DEBERIA TRAERSE DE ANTEMANO
			
		}
								
		
		//CLASSES PARA REPORTES OBJETOS RELACIONADOS
		if(!this.sTipoReporte.equals("RELACIONES")) {//!isEsReporteRelaciones
			classes=new ArrayList<Classe>();
		}
		
		JRBeanArrayDataSource jrbeanArrayDataSourceEvaluacionEmpleado=null;
		
		if(this.sTipoReporteExtra!=null && !this.sTipoReporteExtra.equals("")) {
			EvaluacionEmpleadoConstantesFunciones.S_TIPOREPORTE_EXTRA=this.sTipoReporteExtra;
		} else {
			EvaluacionEmpleadoConstantesFunciones.S_TIPOREPORTE_EXTRA="";
		}
		
		jrbeanArrayDataSourceEvaluacionEmpleado=new JRBeanArrayDataSource(EvaluacionEmpleadoJInternalFrame.TraerEvaluacionEmpleadoBeans(evaluacionempleadosParaReportes,classes).toArray());
		
		jasperPrint = JasperFillManager.fillReport(jasperReport,parameters,jrbeanArrayDataSourceEvaluacionEmpleado);
				
		
		String sPathDest=Constantes.SUNIDAD_ARCHIVOS+":/"+Constantes.SCONTEXTSERVER+"/"+EvaluacionEmpleadoConstantesFunciones.SCHEMA+"/reportes";
		
		File filePathDest = new File(sPathDest);
		
		if(!filePathDest.exists()) {
			filePathDest.mkdirs();				
		}
				
		String sDestFileName=sPathDest+"/"+EvaluacionEmpleadoConstantesFunciones.CLASSNAME;
				
		if(this.sTipoArchivoReporte=="VISUALIZAR") {
			JasperViewer jasperViewer = new JasperViewer(jasperPrint,false) ;
			jasperViewer.setVisible(true) ; 

		} else if(this.sTipoArchivoReporte=="HTML"||this.sTipoArchivoReporte=="PDF"||this.sTipoArchivoReporte=="XML") {	
			//JasperFillManager.fillReportToFile(reportFile.getAbsolutePath(),parameters, new JRBeanArrayDataSource(EvaluacionEmpleadoBean.TraerEvaluacionEmpleadoBeans(evaluacionempleadosParaReportes).toArray()));
							
			if(this.sTipoArchivoReporte=="HTML") {
				sDestFileName+=".html";
				JasperExportManager.exportReportToHtmlFile(jasperPrint,sDestFileName);
					
			} else if(this.sTipoArchivoReporte=="PDF") {
				sDestFileName+=".pdf";
				JasperExportManager.exportReportToPdfFile(jasperPrint,sDestFileName);
			} else {
				sDestFileName+=".xml";
				JasperExportManager.exportReportToXmlFile(jasperPrint,sDestFileName, false);
			}	
			
		} else if(this.sTipoArchivoReporte=="WORD"||this.sTipoArchivoReporte=="EXCEL") {
				
			if(this.sTipoArchivoReporte=="WORD") {
				sDestFileName+=".rtf";
					
				JRRtfExporter exporter = new JRRtfExporter();
		
				exporter.setParameter(JRExporterParameter.JASPER_PRINT, jasperPrint);
				exporter.setParameter(JRExporterParameter.OUTPUT_FILE_NAME, sDestFileName);
		
				exporter.exportReport();
				
			} else	{
				sDestFileName+=".xls";
					
				JRXlsExporter exporterXls = new JRXlsExporter();
		
				exporterXls.setParameter(JRExporterParameter.JASPER_PRINT, jasperPrint);
				exporterXls.setParameter(JRExporterParameter.OUTPUT_FILE_NAME, sDestFileName);
				exporterXls.setParameter(JRXlsExporterParameter.IS_ONE_PAGE_PER_SHEET, Boolean.TRUE);
		
				exporterXls.exportReport();
			}
			
		} else if(this.sTipoArchivoReporte=="EXCEL2"||this.sTipoArchivoReporte=="EXCEL2_2") {
			//sDestFileName+=".xlsx";
			
			if(this.sTipoReporte.equals("NORMAL")) {
				this.generarExcelReporteEvaluacionEmpleados(sAccionBusqueda,sTipoArchivoReporte,evaluacionempleadosParaReportes);
			
			} else if(this.sTipoReporte.equals("FORMULARIO")){
				this.generarExcelReporteVerticalEvaluacionEmpleados(sAccionBusqueda,sTipoArchivoReporte,evaluacionempleadosParaReportes,false);
			
			} else if(this.sTipoReporte.equals("DINAMICO")){
				
				if(this.sTipoReporteDinamico.equals("NORMAL")) {
					
					this.jButtonGenerarExcelReporteDinamicoEvaluacionEmpleadoActionPerformed(null);
					//this.generarExcelReporteEvaluacionEmpleados(sAccionBusqueda,sTipoArchivoReporte,evaluacionempleadosParaReportes);
					
				
				} else if(this.sTipoReporteDinamico.equals("FORMULARIO")){
					this.generarExcelReporteVerticalEvaluacionEmpleados(sAccionBusqueda,sTipoArchivoReporte,evaluacionempleadosParaReportes,true);
				
				} else if(this.sTipoReporteDinamico.equals("RELACIONES")){
					this.generarExcelReporteRelacionesEvaluacionEmpleados(sAccionBusqueda,sTipoArchivoReporte,evaluacionempleadosParaReportes,true);
				}
				
			} else if(this.sTipoReporte.equals("RELACIONES")){
				this.generarExcelReporteRelacionesEvaluacionEmpleados(sAccionBusqueda,sTipoArchivoReporte,evaluacionempleadosParaReportes,false);
			}
		}
		
		if(this.sTipoArchivoReporte=="HTML"||this.sTipoArchivoReporte=="PDF"||this.sTipoArchivoReporte=="XML"||this.sTipoArchivoReporte=="WORD"||this.sTipoArchivoReporte=="EXCEL") {				
			JOptionPane.showMessageDialog(this,"REPORTE "+sDestFileName+" GENERADO SATISFACTORIAMENTE","REPORTES ",JOptionPane.INFORMATION_MESSAGE);
		}
	}
	
	public void generarExcelReporteEvaluacionEmpleados(String sAccionBusqueda,String sTipoArchivoReporte,List<EvaluacionEmpleado> evaluacionempleadosParaReportes) throws Exception {
	 	Workbook workbook = null;
		String sPath=this.parametroGeneralUsuario.getpath_exportar()+"evaluacionempleado";
		
		if(sTipoArchivoReporte=="EXCEL2") {
			workbook = new HSSFWorkbook();
			sPath+=".xls";
		
		} else if(sTipoArchivoReporte=="EXCEL2_2") {
			workbook = new XSSFWorkbook();
			sPath+=".xlsx";			
		}
		
		
		
		Sheet sheet = workbook.createSheet("EvaluacionEmpleados");
         
        int iRow = 0;
		int iCell = 0;
		Row row =null;
		Cell cell=null;
		
		row = sheet.createRow(iRow++);
		
		this.generarExcelReporteHeaderEvaluacionEmpleado("NORMAL",row,workbook);
		
		CellStyle cellStyleData = Funciones2.getStyleTitulo(workbook,"ZEBRA");
		CellStyle cellStyleDataAux=null;
		
		int i=0;
		
      	for(EvaluacionEmpleado evaluacionempleado : evaluacionempleadosParaReportes) {            
			row = sheet.createRow(iRow++);
			iCell = 0;
			
			cellStyleDataAux=null;
			
			if(i%2==0) {
				cellStyleDataAux=cellStyleData;
			}
			
			EvaluacionEmpleadoConstantesFunciones.generarExcelReporteDataEvaluacionEmpleado("NORMAL",row,workbook,evaluacionempleado,cellStyleDataAux);
		
			
			/*
            Cell cell0 = row.createCell(0);
            cell0.setCellValue(country.getName());
            Cell cell1 = row.createCell(1);
            cell1.setCellValue(country.getShortCode());
			*/
			
			i++;
        }
        
		
        FileOutputStream fileOutputStream = new FileOutputStream(sPath);
		
        workbook.write(fileOutputStream);
		
        fileOutputStream.close();
		
		Constantes2.S_PATH_ULTIMO_ARCHIVO=sPath;
			
		if(this.parametroGeneralUsuario.getcon_mensaje_confirmacion() && !this.evaluacionempleadoSessionBean.getEsGuardarRelacionado()) {//Constantes.ISMOSTRARMENSAJESMANTENIMIENTO && 
			JOptionPane.showMessageDialog(this,"EXPORTADO CORRECTAMENTE:"+sPath,"MANTENIMIENTO DE Evaluacion Empleado",JOptionPane.INFORMATION_MESSAGE);
		}
	}
	
	public void generarExcelReporteHeaderEvaluacionEmpleado(String sTipo,Row row,Workbook workbook) {
		
		EvaluacionEmpleadoConstantesFunciones.generarExcelReporteHeaderEvaluacionEmpleado(sTipo,row,workbook);
		
		/*
		Cell cell=null;
		int iCell=0;
		
		CellStyle cellStyle = workbook.createCellStyle();
		cellStyle.setFillBackgroundColor(IndexedColors.GREEN.getIndex());
		cellStyle.setFillPattern(CellStyle.ALIGN_FILL);
		*/
		
	}
	
	public void generarExcelReporteVerticalEvaluacionEmpleados(String sAccionBusqueda,String sTipoArchivoReporte,List<EvaluacionEmpleado> evaluacionempleadosParaReportes,Boolean paraDinamico) throws Exception {
	 	Workbook workbook = null;
		String sPath=this.parametroGeneralUsuario.getpath_exportar()+"evaluacionempleado_vertical";
		
		if(sTipoArchivoReporte=="EXCEL2") {
			workbook = new HSSFWorkbook();
			sPath+=".xls";
		
		} else if(sTipoArchivoReporte=="EXCEL2_2") {
			workbook = new XSSFWorkbook();
			sPath+=".xlsx";			
		}
		
		
		
		Sheet sheet = workbook.createSheet("EvaluacionEmpleados");
         
        int iRow = 0;
		int iRowLast = 0;
		int iCell = 0;
		Row row =null;
		Cell cell=null;
		
		row = sheet.createRow(iRow++);
		
		CellStyle cellStyle = Funciones2.getStyleTitulo(workbook,"ZEBRA");;
		
		CellStyle cellStyleTitulo = Funciones2.getStyleTitulo(workbook,"PRINCIPAL_VERTICAL");
		
		
		for(EvaluacionEmpleado evaluacionempleado : evaluacionempleadosParaReportes) {
			row = sheet.createRow(iRow++);
			iRowLast=iRow - 1;
			
			cell = row.createCell(0);
			cell.setCellValue(EvaluacionEmpleadoConstantesFunciones.getEvaluacionEmpleadoDescripcion(evaluacionempleado));
			cell.setCellStyle(cellStyleTitulo);
			
			sheet.addMergedRegion(new CellRangeAddress(iRowLast,iRowLast,0,2));			
	
			


			if(!paraDinamico || (paraDinamico && this.existeColumnaReporteDinamico(EvaluacionEmpleadoConstantesFunciones.LABEL_IDEMPRESA))) {
				row = sheet.createRow(iRow++);

				cell = row.createCell(0);
				cell.setCellValue(EvaluacionEmpleadoConstantesFunciones.LABEL_IDEMPRESA);
				cell.setCellStyle(cellStyle);

				cell = row.createCell(1);
				cell.setCellValue(evaluacionempleado.getempresa_descripcion());


			}


			if(!paraDinamico || (paraDinamico && this.existeColumnaReporteDinamico(EvaluacionEmpleadoConstantesFunciones.LABEL_IDSUCURSAL))) {
				row = sheet.createRow(iRow++);

				cell = row.createCell(0);
				cell.setCellValue(EvaluacionEmpleadoConstantesFunciones.LABEL_IDSUCURSAL);
				cell.setCellStyle(cellStyle);

				cell = row.createCell(1);
				cell.setCellValue(evaluacionempleado.getsucursal_descripcion());


			}


			if(!paraDinamico || (paraDinamico && this.existeColumnaReporteDinamico(EvaluacionEmpleadoConstantesFunciones.LABEL_IDEJERCICIO))) {
				row = sheet.createRow(iRow++);

				cell = row.createCell(0);
				cell.setCellValue(EvaluacionEmpleadoConstantesFunciones.LABEL_IDEJERCICIO);
				cell.setCellStyle(cellStyle);

				cell = row.createCell(1);
				cell.setCellValue(evaluacionempleado.getejercicio_descripcion());


			}


			if(!paraDinamico || (paraDinamico && this.existeColumnaReporteDinamico(EvaluacionEmpleadoConstantesFunciones.LABEL_IDPERIODO))) {
				row = sheet.createRow(iRow++);

				cell = row.createCell(0);
				cell.setCellValue(EvaluacionEmpleadoConstantesFunciones.LABEL_IDPERIODO);
				cell.setCellStyle(cellStyle);

				cell = row.createCell(1);
				cell.setCellValue(evaluacionempleado.getperiodo_descripcion());


			}


			if(!paraDinamico || (paraDinamico && this.existeColumnaReporteDinamico(EvaluacionEmpleadoConstantesFunciones.LABEL_IDESTRUCTURA))) {
				row = sheet.createRow(iRow++);

				cell = row.createCell(0);
				cell.setCellValue(EvaluacionEmpleadoConstantesFunciones.LABEL_IDESTRUCTURA);
				cell.setCellStyle(cellStyle);

				cell = row.createCell(1);
				cell.setCellValue(evaluacionempleado.getestructura_descripcion());


			}


			if(!paraDinamico || (paraDinamico && this.existeColumnaReporteDinamico(EvaluacionEmpleadoConstantesFunciones.LABEL_IDEMPLEADO))) {
				row = sheet.createRow(iRow++);

				cell = row.createCell(0);
				cell.setCellValue(EvaluacionEmpleadoConstantesFunciones.LABEL_IDEMPLEADO);
				cell.setCellStyle(cellStyle);

				cell = row.createCell(1);
				cell.setCellValue(evaluacionempleado.getempleado_descripcion());


			}


			if(!paraDinamico || (paraDinamico && this.existeColumnaReporteDinamico(EvaluacionEmpleadoConstantesFunciones.LABEL_IDEMPLEADOEVALUA))) {
				row = sheet.createRow(iRow++);

				cell = row.createCell(0);
				cell.setCellValue(EvaluacionEmpleadoConstantesFunciones.LABEL_IDEMPLEADOEVALUA);
				cell.setCellStyle(cellStyle);

				cell = row.createCell(1);
				cell.setCellValue(evaluacionempleado.getempleadoevalua_descripcion());


			}


			if(!paraDinamico || (paraDinamico && this.existeColumnaReporteDinamico(EvaluacionEmpleadoConstantesFunciones.LABEL_IDTIPOEVALUACIONEMPLEADO))) {
				row = sheet.createRow(iRow++);

				cell = row.createCell(0);
				cell.setCellValue(EvaluacionEmpleadoConstantesFunciones.LABEL_IDTIPOEVALUACIONEMPLEADO);
				cell.setCellStyle(cellStyle);

				cell = row.createCell(1);
				cell.setCellValue(evaluacionempleado.gettipoevaluacionempleado_descripcion());


			}


			if(!paraDinamico || (paraDinamico && this.existeColumnaReporteDinamico(EvaluacionEmpleadoConstantesFunciones.LABEL_FECHA))) {
				row = sheet.createRow(iRow++);

				cell = row.createCell(0);
				cell.setCellValue(EvaluacionEmpleadoConstantesFunciones.LABEL_FECHA);
				cell.setCellStyle(cellStyle);

				cell = row.createCell(1);
				cell.setCellValue(evaluacionempleado.getfecha());


			}


			if(!paraDinamico || (paraDinamico && this.existeColumnaReporteDinamico(EvaluacionEmpleadoConstantesFunciones.LABEL_ESTAEVALUADO))) {
				row = sheet.createRow(iRow++);

				cell = row.createCell(0);
				cell.setCellValue(EvaluacionEmpleadoConstantesFunciones.LABEL_ESTAEVALUADO);
				cell.setCellStyle(cellStyle);

				cell = row.createCell(1);
				cell.setCellValue(Funciones2.getDescripcionBoolean(evaluacionempleado.getesta_evaluado()));


			}


			if(!paraDinamico || (paraDinamico && this.existeColumnaReporteDinamico(EvaluacionEmpleadoConstantesFunciones.LABEL_IDANIO))) {
				row = sheet.createRow(iRow++);

				cell = row.createCell(0);
				cell.setCellValue(EvaluacionEmpleadoConstantesFunciones.LABEL_IDANIO);
				cell.setCellStyle(cellStyle);

				cell = row.createCell(1);
				cell.setCellValue(evaluacionempleado.getanio_descripcion());


			}


			if(!paraDinamico || (paraDinamico && this.existeColumnaReporteDinamico(EvaluacionEmpleadoConstantesFunciones.LABEL_IDSEMESTRE))) {
				row = sheet.createRow(iRow++);

				cell = row.createCell(0);
				cell.setCellValue(EvaluacionEmpleadoConstantesFunciones.LABEL_IDSEMESTRE);
				cell.setCellStyle(cellStyle);

				cell = row.createCell(1);
				cell.setCellValue(evaluacionempleado.getsemestre_descripcion());


			}


			if(!paraDinamico || (paraDinamico && this.existeColumnaReporteDinamico(EvaluacionEmpleadoConstantesFunciones.LABEL_IDTRIMESTRE))) {
				row = sheet.createRow(iRow++);

				cell = row.createCell(0);
				cell.setCellValue(EvaluacionEmpleadoConstantesFunciones.LABEL_IDTRIMESTRE);
				cell.setCellStyle(cellStyle);

				cell = row.createCell(1);
				cell.setCellValue(evaluacionempleado.gettrimestre_descripcion());


			}


			if(!paraDinamico || (paraDinamico && this.existeColumnaReporteDinamico(EvaluacionEmpleadoConstantesFunciones.LABEL_IDBIMESTRE))) {
				row = sheet.createRow(iRow++);

				cell = row.createCell(0);
				cell.setCellValue(EvaluacionEmpleadoConstantesFunciones.LABEL_IDBIMESTRE);
				cell.setCellStyle(cellStyle);

				cell = row.createCell(1);
				cell.setCellValue(evaluacionempleado.getbimestre_descripcion());


			}


			if(!paraDinamico || (paraDinamico && this.existeColumnaReporteDinamico(EvaluacionEmpleadoConstantesFunciones.LABEL_IDMES))) {
				row = sheet.createRow(iRow++);

				cell = row.createCell(0);
				cell.setCellValue(EvaluacionEmpleadoConstantesFunciones.LABEL_IDMES);
				cell.setCellStyle(cellStyle);

				cell = row.createCell(1);
				cell.setCellValue(evaluacionempleado.getmes_descripcion());


			}


			if(!paraDinamico || (paraDinamico && this.existeColumnaReporteDinamico(EvaluacionEmpleadoConstantesFunciones.LABEL_OBSERVACION1))) {
				row = sheet.createRow(iRow++);

				cell = row.createCell(0);
				cell.setCellValue(EvaluacionEmpleadoConstantesFunciones.LABEL_OBSERVACION1);
				cell.setCellStyle(cellStyle);

				cell = row.createCell(1);
				cell.setCellValue(evaluacionempleado.getobservacion1());


			}


			if(!paraDinamico || (paraDinamico && this.existeColumnaReporteDinamico(EvaluacionEmpleadoConstantesFunciones.LABEL_OBSERVACION2))) {
				row = sheet.createRow(iRow++);

				cell = row.createCell(0);
				cell.setCellValue(EvaluacionEmpleadoConstantesFunciones.LABEL_OBSERVACION2);
				cell.setCellStyle(cellStyle);

				cell = row.createCell(1);
				cell.setCellValue(evaluacionempleado.getobservacion2());


			}


			if(!paraDinamico || (paraDinamico && this.existeColumnaReporteDinamico(EvaluacionEmpleadoConstantesFunciones.LABEL_OBSERVACION3))) {
				row = sheet.createRow(iRow++);

				cell = row.createCell(0);
				cell.setCellValue(EvaluacionEmpleadoConstantesFunciones.LABEL_OBSERVACION3);
				cell.setCellStyle(cellStyle);

				cell = row.createCell(1);
				cell.setCellValue(evaluacionempleado.getobservacion3());


			}


			if(!paraDinamico || (paraDinamico && this.existeColumnaReporteDinamico(EvaluacionEmpleadoConstantesFunciones.LABEL_OBSERVACION4))) {
				row = sheet.createRow(iRow++);

				cell = row.createCell(0);
				cell.setCellValue(EvaluacionEmpleadoConstantesFunciones.LABEL_OBSERVACION4);
				cell.setCellStyle(cellStyle);

				cell = row.createCell(1);
				cell.setCellValue(evaluacionempleado.getobservacion4());


			}						
        }
        
		
        FileOutputStream fileOutputStream = new FileOutputStream(sPath);
		
        workbook.write(fileOutputStream);
		
        fileOutputStream.close();
		
		Constantes2.S_PATH_ULTIMO_ARCHIVO=sPath;
			
		if(this.parametroGeneralUsuario.getcon_mensaje_confirmacion() && !this.evaluacionempleadoSessionBean.getEsGuardarRelacionado()) {//Constantes.ISMOSTRARMENSAJESMANTENIMIENTO && 
			JOptionPane.showMessageDialog(this,"EXPORTADO CORRECTAMENTE:"+sPath,"MANTENIMIENTO DE Evaluacion Empleado",JOptionPane.INFORMATION_MESSAGE);
		}
	}
	
	public void generarExcelReporteRelacionesEvaluacionEmpleados(String sAccionBusqueda,String sTipoArchivoReporte,List<EvaluacionEmpleado> evaluacionempleadosParaReportes,Boolean paraDinamico) throws Exception {
		
		ArrayList<Classe> classes=new ArrayList<Classe>();
		List<EvaluacionEmpleado> evaluacionempleadosRespaldo=null;
		
		classes=EvaluacionEmpleadoConstantesFunciones.getClassesRelationshipsOfEvaluacionEmpleado(new ArrayList<Classe>(),DeepLoadType.NONE,false);
					
		this.datosDeep=new DatosDeep();
		
		this.datosDeep.setIsDeep(false);
		this.datosDeep.setDeepLoadType(DeepLoadType.INCLUDE);
		this.datosDeep.setClases(classes);
			
		this.datosCliente.setDatosDeepParametros(false, DeepLoadType.INCLUDE, classes, "");
		this.datosCliente.setIsConDeep(true);	
		this.datosCliente.setIsConExportar(false);
		
						
		this.evaluacionempleadoLogic.setDatosCliente(this.datosCliente);
		this.evaluacionempleadoLogic.setDatosDeep(this.datosDeep);
		this.evaluacionempleadoLogic.setIsConDeep(true);
		
		evaluacionempleadosRespaldo=this.evaluacionempleadoLogic.getEvaluacionEmpleados();
		
		this.evaluacionempleadoLogic.setEvaluacionEmpleados(evaluacionempleadosParaReportes);	
		this.evaluacionempleadoLogic.deepLoadsWithConnection(false, DeepLoadType.INCLUDE, classes,"");
		
		evaluacionempleadosParaReportes=this.evaluacionempleadoLogic.getEvaluacionEmpleados();
		this.evaluacionempleadoLogic.setEvaluacionEmpleados(evaluacionempleadosRespaldo);
		
		
	 	Workbook workbook = null;
		String sPath=this.parametroGeneralUsuario.getpath_exportar()+"evaluacionempleado_relacion";
		
		if(sTipoArchivoReporte=="EXCEL2") {
			workbook = new HSSFWorkbook();
			sPath+=".xls";
		
		} else if(sTipoArchivoReporte=="EXCEL2_2") {
			workbook = new XSSFWorkbook();
			sPath+=".xlsx";			
		}
		
		
		
		Sheet sheet = workbook.createSheet("EvaluacionEmpleados");
         
        int iRow = 0;
		int iRowLast = 0;
		int iCell = 0;
		Row row =null;
		Cell cell=null;
		
		row = sheet.createRow(iRow++);
		
		this.generarExcelReporteHeaderEvaluacionEmpleado("NORMAL",row,workbook);
		
		int i=0;
		int i2=0;
		
		CellStyle cellStyleData = Funciones2.getStyleTitulo(workbook,"ZEBRA");
		CellStyle cellStyleDataTitulo = Funciones2.getStyleTitulo(workbook,"PRINCIPAL");
		CellStyle cellStyleDataZebra = Funciones2.getStyleTitulo(workbook,"ZEBRA");
		CellStyle cellStyleDataAux =null;
		CellStyle cellStyleDataAuxHijo =null;
		
		for(EvaluacionEmpleado evaluacionempleado : evaluacionempleadosParaReportes) {			
			if(i!=0) {
				row = sheet.createRow(iRow++);				
				this.generarExcelReporteHeaderEvaluacionEmpleado("NORMAL",row,workbook);
			}
			
			cellStyleDataAux=null;
			
			if(i%2==0) {
				//cellStyleDataAux=cellStyleData;
			}
			
			row = sheet.createRow(iRow++);						
			EvaluacionEmpleadoConstantesFunciones.generarExcelReporteDataEvaluacionEmpleado("NORMAL",row,workbook,evaluacionempleado,cellStyleDataAux);
		
			
			


				//CalificacionEmpleado
			if(!paraDinamico || (paraDinamico && this.existeRelacionReporteDinamico(CalificacionEmpleadoConstantesFunciones.SCLASSWEBTITULO))) {

				if(evaluacionempleado.getCalificacionEmpleados()!=null && evaluacionempleado.getCalificacionEmpleados().size()>0) {
					row = sheet.createRow(iRow++);

					iCell=1;iRowLast=iRow-1; cell = row.createCell(iCell++);cell.setCellStyle(cellStyleDataTitulo);sheet.addMergedRegion(new CellRangeAddress(iRowLast,iRowLast,1,5));
					cell.setCellValue(CalificacionEmpleadoConstantesFunciones.SCLASSWEBTITULO);

					row = sheet.createRow(iRow++);
					CalificacionEmpleadoConstantesFunciones.generarExcelReporteHeaderCalificacionEmpleado("RELACIONADO",row,workbook);
				}

				if(evaluacionempleado.getCalificacionEmpleados()!=null) {
					i2=0;
					for(CalificacionEmpleado calificacionempleado : evaluacionempleado.getCalificacionEmpleados()) {
						row = sheet.createRow(iRow++);

						cellStyleDataAuxHijo=null;
						if(i2%2==0) {
							cellStyleDataAuxHijo=cellStyleData;
						}

						CalificacionEmpleadoConstantesFunciones.generarExcelReporteDataCalificacionEmpleado("RELACIONADO",row,workbook,calificacionempleado,cellStyleDataAuxHijo);
						i2++;
					}
				}
			}
			
			i++;
        }
        
		/*
		row = sheet.createRow(iRow++);
		iRowLast=iRow - 1;
			
		cell = row.createCell(0);
		cell.setCellValue(EvaluacionEmpleadoConstantesFunciones.getEvaluacionEmpleadoDescripcion(evaluacionempleado));
		cell.setCellStyle(cellStyleTitulo);
			
		sheet.addMergedRegion(new CellRangeAddress(iRowLast,iRowLast,0,2));			
		*/
		
			
		
        FileOutputStream fileOutputStream = new FileOutputStream(sPath);
		
        workbook.write(fileOutputStream);
		
        fileOutputStream.close();
		
		Constantes2.S_PATH_ULTIMO_ARCHIVO=sPath;
			
		if(this.parametroGeneralUsuario.getcon_mensaje_confirmacion() && !this.evaluacionempleadoSessionBean.getEsGuardarRelacionado()) {//Constantes.ISMOSTRARMENSAJESMANTENIMIENTO && 
			JOptionPane.showMessageDialog(this,"EXPORTADO CORRECTAMENTE:"+sPath,"MANTENIMIENTO DE Evaluacion Empleado",JOptionPane.INFORMATION_MESSAGE);
		}
	}
	
	
	public Boolean existeColumnaReporteDinamico(String sColumna) {
		Boolean existe=false;
		
		Reporte reporte=new Reporte();
		
		
		for(int index:this.jInternalFrameReporteDinamicoEvaluacionEmpleado.getjListColumnasSelectReporte().getSelectedIndices()) {
			reporte=(Reporte)this.jInternalFrameReporteDinamicoEvaluacionEmpleado.getjListColumnasSelectReporte().getModel().getElementAt(index);
			
			if(sColumna.equals(reporte.getsCodigo())) {
				existe=true;
				break;
			}
		
		}
		
		
		return existe;
	}
	
	public Boolean existeRelacionReporteDinamico(String sColumna) {
		Boolean existe=false;
		
		Reporte reporte=new Reporte();
		
		
		for(int index:this.jInternalFrameReporteDinamicoEvaluacionEmpleado.getjListRelacionesSelectReporte().getSelectedIndices()) {
			reporte=(Reporte)this.jInternalFrameReporteDinamicoEvaluacionEmpleado.getjListRelacionesSelectReporte().getModel().getElementAt(index);
			
			if(sColumna.equals(reporte.getsCodigo())) {
				existe=true;
				break;
			}
		
		}
		
		
		return existe;
	}
	
	public void startProcessEvaluacionEmpleado() throws Exception {		
		this.startProcessEvaluacionEmpleado(true);
	}
	
	public void startProcessEvaluacionEmpleado(Boolean conSplash) throws Exception {		
		//FuncionesSwing.enableDisablePanels(false,this.jTabbedPaneBusquedasEvaluacionEmpleado ,this.jPanelParametrosReportesEvaluacionEmpleado, this.jScrollPanelDatosEvaluacionEmpleado,this.jPanelPaginacionEvaluacionEmpleado, this.jScrollPanelDatosEdicionEvaluacionEmpleado, this.jPanelAccionesEvaluacionEmpleado,this.jPanelAccionesFormularioEvaluacionEmpleado,this.jmenuBarEvaluacionEmpleado,this.jmenuBarDetalleEvaluacionEmpleado,this.jTtoolBarEvaluacionEmpleado,this.jTtoolBarDetalleEvaluacionEmpleado);		
		
		final JTabbedPane jTabbedPaneBusquedasEvaluacionEmpleado=this.jTabbedPaneBusquedasEvaluacionEmpleado; 
		
		final JPanel jPanelParametrosReportesEvaluacionEmpleado=this.jPanelParametrosReportesEvaluacionEmpleado;
		//final JScrollPane jScrollPanelDatosEvaluacionEmpleado=this.jScrollPanelDatosEvaluacionEmpleado;
		final JTable jTableDatosEvaluacionEmpleado=this.jTableDatosEvaluacionEmpleado;		
		final JPanel jPanelPaginacionEvaluacionEmpleado=this.jPanelPaginacionEvaluacionEmpleado;
		//final JScrollPane jScrollPanelDatosEdicionEvaluacionEmpleado=this.jScrollPanelDatosEdicionEvaluacionEmpleado;
		final JPanel jPanelAccionesEvaluacionEmpleado=this.jPanelAccionesEvaluacionEmpleado;
		
		JPanel jPanelCamposAuxiliarEvaluacionEmpleado=new JPanelMe();
		JPanel jPanelAccionesFormularioAuxiliarEvaluacionEmpleado=new JPanelMe();
		
		if(this.jInternalFrameDetalleFormEvaluacionEmpleado!=null) {
			jPanelCamposAuxiliarEvaluacionEmpleado=this.jInternalFrameDetalleFormEvaluacionEmpleado.jPanelCamposEvaluacionEmpleado;
			jPanelAccionesFormularioAuxiliarEvaluacionEmpleado=this.jInternalFrameDetalleFormEvaluacionEmpleado.jPanelAccionesFormularioEvaluacionEmpleado;
		}
		
		final JPanel jPanelCamposEvaluacionEmpleado=jPanelCamposAuxiliarEvaluacionEmpleado;
		final JPanel jPanelAccionesFormularioEvaluacionEmpleado=jPanelAccionesFormularioAuxiliarEvaluacionEmpleado;
		
		
		final JMenuBar jmenuBarEvaluacionEmpleado=this.jmenuBarEvaluacionEmpleado;
		final JToolBar jTtoolBarEvaluacionEmpleado=this.jTtoolBarEvaluacionEmpleado;		
		
		
		JMenuBar jmenuBarDetalleAuxiliarEvaluacionEmpleado=new JMenuBar();
		JToolBar jTtoolBarDetalleAuxiliarEvaluacionEmpleado=new JToolBar();		
		
		if(this.jInternalFrameDetalleFormEvaluacionEmpleado!=null) {
			jmenuBarDetalleAuxiliarEvaluacionEmpleado=this.jInternalFrameDetalleFormEvaluacionEmpleado.jmenuBarDetalleEvaluacionEmpleado;
			jTtoolBarDetalleAuxiliarEvaluacionEmpleado=this.jInternalFrameDetalleFormEvaluacionEmpleado.jTtoolBarDetalleEvaluacionEmpleado;
		}
		
		final JMenuBar jmenuBarDetalleEvaluacionEmpleado=jmenuBarDetalleAuxiliarEvaluacionEmpleado;
		final JToolBar jTtoolBarDetalleEvaluacionEmpleado=jTtoolBarDetalleAuxiliarEvaluacionEmpleado;		
		
		
		
		
		
		if(Constantes2.CON_PROCESO_HILO) {
			Thread threadRunnableProcess;
			ProcessRunnable processRunnable;
			
			processRunnable=new ProcessRunnable();
			
			processRunnable.setsTipo("START");
			processRunnable.setDesktop(jDesktopPane);
			processRunnable.setModuloActual(moduloActual);
			processRunnable.setModuloUsuarioSeleccionado(moduloActual);
			processRunnable.setOpcionActual(opcionActual);
			processRunnable.setParametroGeneralSg(parametroGeneralSg);
			processRunnable.setParametroGeneralUsuario(parametroGeneralUsuario);
			processRunnable.setResumenUsuarioActual(resumenUsuarioActual);
			processRunnable.setUsuarioActual(usuarioActual);
			
			processRunnable.jTabbedPaneBusquedas=jTabbedPaneBusquedasEvaluacionEmpleado;
			processRunnable.jPanelParametrosReportes=jPanelParametrosReportesEvaluacionEmpleado;
			processRunnable.jTableDatos=jTableDatosEvaluacionEmpleado;
			processRunnable.jPanelCampos=jPanelCamposEvaluacionEmpleado;
			processRunnable.jPanelPaginacion=jPanelPaginacionEvaluacionEmpleado;
			processRunnable.jPanelAcciones=jPanelAccionesEvaluacionEmpleado;
			processRunnable.jPanelAccionesFormulario=jPanelAccionesFormularioEvaluacionEmpleado;
			
			
			processRunnable.jmenuBar=jmenuBarEvaluacionEmpleado;
			processRunnable.jmenuBarDetalle=jmenuBarDetalleEvaluacionEmpleado;
			processRunnable.jTtoolBar=jTtoolBarEvaluacionEmpleado;
			processRunnable.jTtoolBarDetalle=jTtoolBarDetalleEvaluacionEmpleado;
			processRunnable.jInternalFrameBase=this;
			
			//processRunnable.CargarObjetosRendimientoCriticoModuloInventario();
			
			
			threadRunnableProcess=new Thread(processRunnable);//.start();
					
			threadRunnableProcess.start();
			
		} else {
			FuncionesSwing.enableDisablePanels(false,jTabbedPaneBusquedasEvaluacionEmpleado ,jPanelParametrosReportesEvaluacionEmpleado,jTableDatosEvaluacionEmpleado, /*jScrollPanelDatosEvaluacionEmpleado,*/jPanelCamposEvaluacionEmpleado,jPanelPaginacionEvaluacionEmpleado, /*jScrollPanelDatosEdicionEvaluacionEmpleado,*/ jPanelAccionesEvaluacionEmpleado,jPanelAccionesFormularioEvaluacionEmpleado,jmenuBarEvaluacionEmpleado,jmenuBarDetalleEvaluacionEmpleado,jTtoolBarEvaluacionEmpleado,jTtoolBarDetalleEvaluacionEmpleado);
		
			startProcess();//this.
		}
						
		/*
		if(conSplash) {
			SwingUtilities.invokeLater(new Runnable() {
			      public void run() {
			    	  try {
							FuncionesSwing.enableDisablePanels(false,jTabbedPaneBusquedasEvaluacionEmpleado ,jPanelParametrosReportesEvaluacionEmpleado, jScrollPanelDatosEvaluacionEmpleado,jPanelPaginacionEvaluacionEmpleado, jScrollPanelDatosEdicionEvaluacionEmpleado, jPanelAccionesEvaluacionEmpleado,jPanelAccionesFormularioEvaluacionEmpleado,jmenuBarEvaluacionEmpleado,jmenuBarDetalleEvaluacionEmpleado,jTtoolBarEvaluacionEmpleado,jTtoolBarDetalleEvaluacionEmpleado);
						
							startProcess();//this.
							
						} catch (Exception e) {
							// TODO Auto-generated catch block
							e.printStackTrace();
						}
			      }
			});
		}
		*/
	}
	
	public void finishProcessEvaluacionEmpleado() {// throws Exception 
		this.finishProcessEvaluacionEmpleado(true);
	}
	
	public void finishProcessEvaluacionEmpleado(Boolean conSplash) {// throws Exception 
		//FuncionesSwing.enableDisablePanels(true,this.jTabbedPaneBusquedasEvaluacionEmpleado ,this.jPanelParametrosReportesEvaluacionEmpleado, this.jScrollPanelDatosEvaluacionEmpleado,this.jPanelPaginacionEvaluacionEmpleado, this.jScrollPanelDatosEdicionEvaluacionEmpleado, this.jPanelAccionesEvaluacionEmpleado,this.jPanelAccionesFormularioEvaluacionEmpleado,this.jmenuBarEvaluacionEmpleado,this.jmenuBarDetalleEvaluacionEmpleado,this.jTtoolBarEvaluacionEmpleado,this.jTtoolBarDetalleEvaluacionEmpleado);		
		
		final JTabbedPane jTabbedPaneBusquedasEvaluacionEmpleado=this.jTabbedPaneBusquedasEvaluacionEmpleado; 
		
		final JPanel jPanelParametrosReportesEvaluacionEmpleado=this.jPanelParametrosReportesEvaluacionEmpleado;
		//final JScrollPane jScrollPanelDatosEvaluacionEmpleado=this.jScrollPanelDatosEvaluacionEmpleado;
		final JTable jTableDatosEvaluacionEmpleado=this.jTableDatosEvaluacionEmpleado;		
		final JPanel jPanelPaginacionEvaluacionEmpleado=this.jPanelPaginacionEvaluacionEmpleado;
		//final JScrollPane jScrollPanelDatosEdicionEvaluacionEmpleado=this.jScrollPanelDatosEdicionEvaluacionEmpleado;
		final JPanel jPanelAccionesEvaluacionEmpleado=this.jPanelAccionesEvaluacionEmpleado;
		
		JPanel jPanelCamposAuxiliarEvaluacionEmpleado=new JPanel();
		JPanel jPanelAccionesFormularioAuxiliarEvaluacionEmpleado=new JPanel();
		
		if(this.jInternalFrameDetalleFormEvaluacionEmpleado!=null) {
			jPanelCamposAuxiliarEvaluacionEmpleado=this.jInternalFrameDetalleFormEvaluacionEmpleado.jPanelCamposEvaluacionEmpleado;
			jPanelAccionesFormularioAuxiliarEvaluacionEmpleado=this.jInternalFrameDetalleFormEvaluacionEmpleado.jPanelAccionesFormularioEvaluacionEmpleado;
		}
		
		final JPanel jPanelCamposEvaluacionEmpleado=jPanelCamposAuxiliarEvaluacionEmpleado;
		final JPanel jPanelAccionesFormularioEvaluacionEmpleado=jPanelAccionesFormularioAuxiliarEvaluacionEmpleado;
		
		
		final JMenuBar jmenuBarEvaluacionEmpleado=this.jmenuBarEvaluacionEmpleado;		
		final JToolBar jTtoolBarEvaluacionEmpleado=this.jTtoolBarEvaluacionEmpleado;
				
		JMenuBar jmenuBarDetalleAuxiliarEvaluacionEmpleado=new JMenuBar();
		JToolBar jTtoolBarDetalleAuxiliarEvaluacionEmpleado=new JToolBar();
		
		if(this.jInternalFrameDetalleFormEvaluacionEmpleado!=null) {
			jmenuBarDetalleAuxiliarEvaluacionEmpleado=this.jInternalFrameDetalleFormEvaluacionEmpleado.jmenuBarDetalleEvaluacionEmpleado;
			jTtoolBarDetalleAuxiliarEvaluacionEmpleado=this.jInternalFrameDetalleFormEvaluacionEmpleado.jTtoolBarDetalleEvaluacionEmpleado;		
		}
		
		final JMenuBar jmenuBarDetalleEvaluacionEmpleado=jmenuBarDetalleAuxiliarEvaluacionEmpleado;
		final JToolBar jTtoolBarDetalleEvaluacionEmpleado=jTtoolBarDetalleAuxiliarEvaluacionEmpleado;
		
		
		
		if(Constantes2.CON_PROCESO_HILO) {
			Thread threadRunnableProcess;
			ProcessRunnable processRunnable;
			
			processRunnable=new ProcessRunnable();
			
			processRunnable.setsTipo("END");
			processRunnable.setDesktop(jDesktopPane);
			processRunnable.setModuloActual(moduloActual);
			processRunnable.setModuloUsuarioSeleccionado(moduloActual);
			processRunnable.setOpcionActual(opcionActual);
			processRunnable.setParametroGeneralSg(parametroGeneralSg);
			processRunnable.setParametroGeneralUsuario(parametroGeneralUsuario);
			processRunnable.setResumenUsuarioActual(resumenUsuarioActual);
			processRunnable.setUsuarioActual(usuarioActual);
			
			processRunnable.jTabbedPaneBusquedas=jTabbedPaneBusquedasEvaluacionEmpleado;
			processRunnable.jPanelParametrosReportes=jPanelParametrosReportesEvaluacionEmpleado;
			processRunnable.jTableDatos=jTableDatosEvaluacionEmpleado;
			processRunnable.jPanelCampos=jPanelCamposEvaluacionEmpleado;
			processRunnable.jPanelPaginacion=jPanelPaginacionEvaluacionEmpleado;
			processRunnable.jPanelAcciones=jPanelAccionesEvaluacionEmpleado;
			processRunnable.jPanelAccionesFormulario=jPanelAccionesFormularioEvaluacionEmpleado;
			
			
			processRunnable.jmenuBar=jmenuBarEvaluacionEmpleado;
			processRunnable.jmenuBarDetalle=jmenuBarDetalleEvaluacionEmpleado;
			processRunnable.jTtoolBar=jTtoolBarEvaluacionEmpleado;
			processRunnable.jTtoolBarDetalle=jTtoolBarDetalleEvaluacionEmpleado;
			processRunnable.jInternalFrameBase=this;
			
			//processRunnable.CargarObjetosRendimientoCriticoModuloInventario();
			
			
			threadRunnableProcess=new Thread(processRunnable);//.start();
					
			threadRunnableProcess.start();
			
		} else {
			if(conSplash) {
				SwingUtilities.invokeLater(new RunnableProceso(true,this,jTabbedPaneBusquedasEvaluacionEmpleado ,jPanelParametrosReportesEvaluacionEmpleado, jTableDatosEvaluacionEmpleado,/*jScrollPanelDatosEvaluacionEmpleado,*/jPanelCamposEvaluacionEmpleado,jPanelPaginacionEvaluacionEmpleado, /*jScrollPanelDatosEdicionEvaluacionEmpleado,*/ jPanelAccionesEvaluacionEmpleado,jPanelAccionesFormularioEvaluacionEmpleado,jmenuBarEvaluacionEmpleado,jmenuBarDetalleEvaluacionEmpleado,jTtoolBarEvaluacionEmpleado,jTtoolBarDetalleEvaluacionEmpleado));
			}
		}						
	}
	
	/*
	public void habilitarDeshabilitarControlesEvaluacionEmpleado(Boolean esHabilitar,Boolean conDetalle) {
		this.habilitarDeshabilitarToolBarEvaluacionEmpleado(esHabilitar,conDetalle);
		this.habilitarDeshabilitarMenuEvaluacionEmpleado(esHabilitar,conDetalle);
	}
	
	public void habilitarDeshabilitarToolBarEvaluacionEmpleado(Boolean esHabilitar,Boolean conDetalle) {
		FuncionesSwing.enableDisableComponents(this.jTtoolBarEvaluacionEmpleado,esHabilitar,1,1);
		
		if(conDetalle) {
			FuncionesSwing.enableDisableComponents(this.jTtoolBarDetalleEvaluacionEmpleado,esHabilitar,1,1);
		}
	}
	
	public void habilitarDeshabilitarMenuEvaluacionEmpleado(Boolean esHabilitar,Boolean conDetalle) {
		FuncionesSwing.enableDisableComponents(this.jmenuBarEvaluacionEmpleado,esHabilitar,1,1);
		
		if(conDetalle) {
			FuncionesSwing.enableDisableComponents(this.jmenuBarDetalleEvaluacionEmpleado,esHabilitar,1,1);
		}
	}
	*/
	
	
	
	public void procesarBusqueda(String sAccionBusqueda) throws Exception {		
		String  finalQueryPaginacion=this.evaluacionempleadoConstantesFunciones.getsFinalQueryEvaluacionEmpleado();
		String  finalQueryPaginacionTodos=this.evaluacionempleadoConstantesFunciones.getsFinalQueryEvaluacionEmpleado();
		
		Boolean esBusqueda=false;
		
		this.actualizarVariablesTipoReporte(true,false,false,"");
		/*
		this.sTipoReporteExtra="";
		this.esReporteDinamico=false;
		this.sPathReporteDinamico="";
		*/
		
		if(!sAccionBusqueda.equals("Todos"))	{
			esBusqueda=true;
		}
		
		this.arrDatoGeneral= new  ArrayList<DatoGeneral>();
		this.arrDatoGeneralNo= new  ArrayList<String>();
		
		ArrayList<String> arrColumnasGlobalesNo=EvaluacionEmpleadoConstantesFunciones.getArrayColumnasGlobalesNoEvaluacionEmpleado(this.arrDatoGeneral);
		ArrayList<String> arrColumnasGlobales=EvaluacionEmpleadoConstantesFunciones.getArrayColumnasGlobalesEvaluacionEmpleado(this.arrDatoGeneral,arrColumnasGlobalesNo);
		
			
		String  finalQueryGlobal="";
		
		finalQueryGlobal=Funciones.GetWhereGlobalConstants(this.parametroGeneralUsuario,this.moduloActual,!esBusqueda,esBusqueda,arrColumnasGlobales,EvaluacionEmpleadoConstantesFunciones.TABLENAME);
		
		String sOrderBy="";
		
		
		sOrderBy=Funciones2.getFinalQueryOrderBy(this.arrOrderBy);
		
		
		if(!sOrderBy.equals("")) {			
			finalQueryPaginacion=sOrderBy;
			finalQueryPaginacionTodos=sOrderBy;
		}
		
		
		//INICIALIZA ELIMINADOS
		this.evaluacionempleadosEliminados= new ArrayList<EvaluacionEmpleado>();
		
		if(!this.isEntroOnLoad) {
			this.onLoad();
		}/* else {
			this.isEntroOnLoad=false;
		}*/
		
		
		
				
		try	{		
			
			//this.startProcessEvaluacionEmpleado();
		
				///*EvaluacionEmpleadoSessionBean*/this.evaluacionempleadoSessionBean=new EvaluacionEmpleadoSessionBean();
			
			if(this.evaluacionempleadoSessionBean==null) {
				this.evaluacionempleadoSessionBean=new EvaluacionEmpleadoSessionBean();
			}
			
			//ACTUALIZA EL TAMANIO DE PAGINACION DESDE EL COMBO
			if(this.sTipoPaginacion!=null && !this.sTipoPaginacion.equals("")) {
				if(!this.sTipoPaginacion.equals("TODOS")) {
					this.iNumeroPaginacion=Integer.parseInt(this.sTipoPaginacion);
				} else {
					this.iNumeroPaginacion=-1;
					this.iNumeroPaginacionPagina=-1;
				}
			} else {
				if(this.iNumeroPaginacion==null || (this.iNumeroPaginacion!=null && this.iNumeroPaginacion<=0)) {
					this.iNumeroPaginacion=EvaluacionEmpleadoConstantesFunciones.INUMEROPAGINACION;
				}
			}
			
			this.pagination=new Pagination();
			this.pagination.setiFirstResult(this.iNumeroPaginacionPagina);
			this.pagination.setiMaxResults(this.iNumeroPaginacion);
			
			this.cargarDatosCliente();
			
			ArrayList<Classe> classes=new ArrayList<Classe>();
			
			classes=EvaluacionEmpleadoConstantesFunciones.getClassesForeignKeysOfEvaluacionEmpleado(new ArrayList<Classe>(),DeepLoadType.NONE);
			
		
			this.datosDeep=new DatosDeep();
			this.datosDeep.setIsDeep(false);
			this.datosDeep.setDeepLoadType(DeepLoadType.INCLUDE);
			this.datosDeep.setClases(classes);
			
			this.datosCliente.setDatosDeepParametros(false, DeepLoadType.INCLUDE, classes, "");
			this.datosCliente.setIsConDeep(true);
			
			if(false) {//this.conExportar
				this.datosCliente.setIsConExportar(true);
				this.datosCliente.setDatosExportarParametros(Funciones2.getTipoExportar(this.parametroGeneralUsuario),this.parametroGeneralUsuario.getcon_exportar_cabecera(),Funciones2.getTipoDelimiter(this.parametroGeneralUsuario),this.parametroGeneralUsuario.getpath_exportar()+"/evaluacionempleado."+Funciones2.getTipoExtensionArchivoExportar(this.parametroGeneralUsuario));
			} else {
				this.datosCliente.setIsConExportar(false);
			}
			
			evaluacionempleadosAux= new ArrayList<EvaluacionEmpleado>();
			
				
			evaluacionempleadoLogic.setDatosCliente(this.datosCliente);
			evaluacionempleadoLogic.setDatosDeep(this.datosDeep);
			evaluacionempleadoLogic.setIsConDeep(true);
			
			
			evaluacionempleadoLogic.getEvaluacionEmpleadoDataAccess().setIsForForeingsKeysDataRelationships(true);
			
			if(sAccionBusqueda.equals("Todos") || sAccionBusqueda.equals("Query"))	{	
				if(sAccionBusqueda.equals("Todos")) {
					//FALTA:PARA BUSQUEDAS POR CAMPO EN FORMULARIO
					//this.sFinalQueryGeneral="";
				}
				
				//ARCHITECTURE
				if(Constantes.ISUSAEJBLOGICLAYER) {	
					finalQueryGlobal=Funciones.GetFinalQueryAppendBusqueda(finalQueryGlobal, this.sFinalQueryGeneral,finalQueryPaginacionTodos );
					
					evaluacionempleadoLogic.getTodosEvaluacionEmpleados(finalQueryGlobal,pagination);
					
					//evaluacionempleadoLogic.getTodosEvaluacionEmpleadosWithConnection(finalQueryGlobal,pagination);										
				
				} else if(Constantes.ISUSAEJBREMOTE) {
				} else if(Constantes.ISUSAEJBHOME) {
				}
				//ARCHITECTURE
				
				if(evaluacionempleadoLogic.getEvaluacionEmpleados()==null|| evaluacionempleadoLogic.getEvaluacionEmpleados().size()==0)	{
					
				
				}
				
				if(false && sTipoArchivoReporte!=""&&sTipoArchivoReporte!=null) {//this.isTipoArchivoReporte
					if(false) {//isMostrarTodosResultadosReporte
						this.pagination.setiFirstResult(-1);
						this.pagination.setiMaxResults(-1);
						
						//ARCHITECTURE
						if(Constantes.ISUSAEJBLOGICLAYER) {	
							evaluacionempleadosAux= new ArrayList<EvaluacionEmpleado>();
							evaluacionempleadosAux.addAll(evaluacionempleadoLogic.getEvaluacionEmpleados());						
						} else if(Constantes.ISUSAEJBREMOTE || Constantes.ISUSAEJBHOME) {
							evaluacionempleadosAux= new ArrayList<EvaluacionEmpleado>();
							evaluacionempleadosAux.addAll(evaluacionempleados);
						}
						//ARCHITECTURE
						
						//ARCHITECTURE
						if(Constantes.ISUSAEJBLOGICLAYER) {	
							evaluacionempleadoLogic.getTodosEvaluacionEmpleados(finalQueryGlobal+"",this.pagination);												
							
							//evaluacionempleadoLogic.getTodosEvaluacionEmpleadosWithConnection(finalQueryGlobal+"",this.pagination);												
						} else if(Constantes.ISUSAEJBREMOTE) {
						} else if(Constantes.ISUSAEJBHOME) {
						}
						//ARCHITECTURE
						
					}
					
					this.generarReporteEvaluacionEmpleados("Todos",evaluacionempleadoLogic.getEvaluacionEmpleados() );
					
					if(false) {//isMostrarTodosResultadosReporte						
						//ARCHITECTURE
						if(Constantes.ISUSAEJBLOGICLAYER) {	
							evaluacionempleadoLogic.setEvaluacionEmpleados(new ArrayList<EvaluacionEmpleado>());					
							evaluacionempleadoLogic.getEvaluacionEmpleados().addAll(evaluacionempleadosAux);
						} else if(Constantes.ISUSAEJBREMOTE || Constantes.ISUSAEJBHOME) {
							evaluacionempleados=new ArrayList<EvaluacionEmpleado>();
							evaluacionempleados.addAll(evaluacionempleadosAux);
						}
						//ARCHITECTURE
						
						this.pagination.setiFirstResult(this.iNumeroPaginacionPagina);
						this.pagination.setiMaxResults(this.iNumeroPaginacion);														
					}
				}
			}
			else if(sAccionBusqueda.equals("PorId")) {
				Long idEvaluacionEmpleado=0L;
				
				if(this.idActual!=null && this.idActual!=0L) {
					idEvaluacionEmpleado=this.idActual;
				
				} else if(this.idEvaluacionEmpleadoActual!=null && this.idEvaluacionEmpleadoActual!=0L) {
					idEvaluacionEmpleado=idEvaluacionEmpleadoActual;
				}
				
					
				this.sDetalleReporte=EvaluacionEmpleadoConstantesFunciones.getDetalleIndicePorId(idEvaluacionEmpleado);
				
				this.evaluacionempleados=new ArrayList<EvaluacionEmpleado>();
				
				//ARCHITECTURE
				if(Constantes.ISUSAEJBLOGICLAYER) {					
					evaluacionempleadoLogic.getEntity(idEvaluacionEmpleado);
					
					//evaluacionempleadoLogic.getEntityWithConnection(idEvaluacionEmpleado);
				} else if(Constantes.ISUSAEJBREMOTE) {
				} else if(Constantes.ISUSAEJBHOME) {
				}
				//ARCHITECTURE
								
				if(Constantes.ISUSAEJBLOGICLAYER) {
					evaluacionempleadoLogic.setEvaluacionEmpleados(new ArrayList<EvaluacionEmpleado>());
					evaluacionempleadoLogic.getEvaluacionEmpleados().add(evaluacionempleadoLogic.getEvaluacionEmpleado());
				
				} else if(Constantes.ISUSAEJBREMOTE || Constantes.ISUSAEJBHOME) {
					this.evaluacionempleados=new ArrayList<EvaluacionEmpleado>();
					this.evaluacionempleados.add(evaluacionempleado);
				}
				
				if(evaluacionempleadoLogic.getEvaluacionEmpleado()==null)	{
					
				
				}			
			}
			
		
			else if(sAccionBusqueda.equals("FK_IdAnio")) {
				this.sDetalleReporte=EvaluacionEmpleadoConstantesFunciones.getDetalleIndiceFK_IdAnio(id_anioFK_IdAnio);

				
				//ARCHITECTURE
				if(Constantes.ISUSAEJBLOGICLAYER) {

					finalQueryGlobal=Funciones.GetFinalQueryAppendBusqueda(finalQueryGlobal, this.sFinalQueryGeneral,finalQueryPaginacion);

					evaluacionempleadoLogic.getEvaluacionEmpleadosFK_IdAnio(finalQueryGlobal,pagination,id_anioFK_IdAnio);
				} else if(Constantes.ISUSAEJBREMOTE) {
				this.sDetalleReporte=EvaluacionEmpleadoConstantesFunciones.getDetalleIndiceFK_IdAnio(id_anioFK_IdAnio);

				
				} else if(Constantes.ISUSAEJBHOME) {
				this.sDetalleReporte=EvaluacionEmpleadoConstantesFunciones.getDetalleIndiceFK_IdAnio(id_anioFK_IdAnio);

				
				}
				//ARCHITECTURE

				Boolean isNoExiste=false;
				//ARCHITECTURE
				if(Constantes.ISUSAEJBLOGICLAYER) {
					isNoExiste=evaluacionempleadoLogic.getEvaluacionEmpleados()==null||evaluacionempleadoLogic.getEvaluacionEmpleados().size()==0;
				} else if(Constantes.ISUSAEJBREMOTE||Constantes.ISUSAEJBHOME) {
					isNoExiste=evaluacionempleados==null|| evaluacionempleados.size()==0;
				}
				//ARCHITECTURE

		if(false && sTipoArchivoReporte!=""&&sTipoArchivoReporte!=null) {//this.isTipoArchivoReporte
			if(false) {//isMostrarTodosResultadosReporte
				this.pagination.setiFirstResult(-1);
				this.pagination.setiMaxResults(-1);

				//ARCHITECTURE
				if(Constantes.ISUSAEJBLOGICLAYER) {
						evaluacionempleadosAux=new ArrayList<EvaluacionEmpleado>();
						evaluacionempleadosAux.addAll(evaluacionempleadoLogic.getEvaluacionEmpleados());
				} else if(Constantes.ISUSAEJBREMOTE || Constantes.ISUSAEJBHOME) {
							evaluacionempleadosAux=new ArrayList<EvaluacionEmpleado>();
							evaluacionempleadosAux.addAll(evaluacionempleados);
				}
				//ARCHITECTURE
								
				
				//ARCHITECTURE
				if(Constantes.ISUSAEJBLOGICLAYER) {
							finalQueryGlobal=Funciones.GetFinalQueryAppendBusqueda(finalQueryGlobal, this.sFinalQueryGeneral,"");
							evaluacionempleadoLogic.getEvaluacionEmpleadosFK_IdAnio(finalQueryGlobal,pagination,id_anioFK_IdAnio);
				} else if(Constantes.ISUSAEJBREMOTE) {
				this.sDetalleReporte=EvaluacionEmpleadoConstantesFunciones.getDetalleIndiceFK_IdAnio(id_anioFK_IdAnio);
						
				} else if(Constantes.ISUSAEJBHOME) {
				this.sDetalleReporte=EvaluacionEmpleadoConstantesFunciones.getDetalleIndiceFK_IdAnio(id_anioFK_IdAnio);
						
				}
				//ARCHITECTURE
					}
				//ARCHITECTURE
				if(Constantes.ISUSAEJBLOGICLAYER) {
					generarReporteEvaluacionEmpleados("FK_IdAnio",evaluacionempleadoLogic.getEvaluacionEmpleados());
				} else if(Constantes.ISUSAEJBREMOTE || Constantes.ISUSAEJBHOME) {
					generarReporteEvaluacionEmpleados("FK_IdAnio",evaluacionempleados);
				}
				//ARCHITECTURE

					if(false) {//isMostrarTodosResultadosReporte
						this.pagination.setiFirstResult(this.iNumeroPaginacionPagina);
						this.pagination.setiMaxResults(this.iNumeroPaginacion);

						//ARCHITECTURE
						if(Constantes.ISUSAEJBLOGICLAYER) {
						evaluacionempleadoLogic.setEvaluacionEmpleados(new ArrayList<EvaluacionEmpleado>());
						evaluacionempleadoLogic.getEvaluacionEmpleados().addAll(evaluacionempleadosAux);
						} else if(Constantes.ISUSAEJBREMOTE || Constantes.ISUSAEJBHOME) {
							evaluacionempleados=new ArrayList<EvaluacionEmpleado>();
							evaluacionempleados.addAll(evaluacionempleadosAux);
						}
						//ARCHITECTURE
					}
				}

			}
			else if(sAccionBusqueda.equals("FK_IdBimestre")) {
				this.sDetalleReporte=EvaluacionEmpleadoConstantesFunciones.getDetalleIndiceFK_IdBimestre(id_bimestreFK_IdBimestre);

				
				//ARCHITECTURE
				if(Constantes.ISUSAEJBLOGICLAYER) {

					finalQueryGlobal=Funciones.GetFinalQueryAppendBusqueda(finalQueryGlobal, this.sFinalQueryGeneral,finalQueryPaginacion);

					evaluacionempleadoLogic.getEvaluacionEmpleadosFK_IdBimestre(finalQueryGlobal,pagination,id_bimestreFK_IdBimestre);
				} else if(Constantes.ISUSAEJBREMOTE) {
				this.sDetalleReporte=EvaluacionEmpleadoConstantesFunciones.getDetalleIndiceFK_IdBimestre(id_bimestreFK_IdBimestre);

				
				} else if(Constantes.ISUSAEJBHOME) {
				this.sDetalleReporte=EvaluacionEmpleadoConstantesFunciones.getDetalleIndiceFK_IdBimestre(id_bimestreFK_IdBimestre);

				
				}
				//ARCHITECTURE

				Boolean isNoExiste=false;
				//ARCHITECTURE
				if(Constantes.ISUSAEJBLOGICLAYER) {
					isNoExiste=evaluacionempleadoLogic.getEvaluacionEmpleados()==null||evaluacionempleadoLogic.getEvaluacionEmpleados().size()==0;
				} else if(Constantes.ISUSAEJBREMOTE||Constantes.ISUSAEJBHOME) {
					isNoExiste=evaluacionempleados==null|| evaluacionempleados.size()==0;
				}
				//ARCHITECTURE

		if(false && sTipoArchivoReporte!=""&&sTipoArchivoReporte!=null) {//this.isTipoArchivoReporte
			if(false) {//isMostrarTodosResultadosReporte
				this.pagination.setiFirstResult(-1);
				this.pagination.setiMaxResults(-1);

				//ARCHITECTURE
				if(Constantes.ISUSAEJBLOGICLAYER) {
						evaluacionempleadosAux=new ArrayList<EvaluacionEmpleado>();
						evaluacionempleadosAux.addAll(evaluacionempleadoLogic.getEvaluacionEmpleados());
				} else if(Constantes.ISUSAEJBREMOTE || Constantes.ISUSAEJBHOME) {
							evaluacionempleadosAux=new ArrayList<EvaluacionEmpleado>();
							evaluacionempleadosAux.addAll(evaluacionempleados);
				}
				//ARCHITECTURE
								
				
				//ARCHITECTURE
				if(Constantes.ISUSAEJBLOGICLAYER) {
							finalQueryGlobal=Funciones.GetFinalQueryAppendBusqueda(finalQueryGlobal, this.sFinalQueryGeneral,"");
							evaluacionempleadoLogic.getEvaluacionEmpleadosFK_IdBimestre(finalQueryGlobal,pagination,id_bimestreFK_IdBimestre);
				} else if(Constantes.ISUSAEJBREMOTE) {
				this.sDetalleReporte=EvaluacionEmpleadoConstantesFunciones.getDetalleIndiceFK_IdBimestre(id_bimestreFK_IdBimestre);
						
				} else if(Constantes.ISUSAEJBHOME) {
				this.sDetalleReporte=EvaluacionEmpleadoConstantesFunciones.getDetalleIndiceFK_IdBimestre(id_bimestreFK_IdBimestre);
						
				}
				//ARCHITECTURE
					}
				//ARCHITECTURE
				if(Constantes.ISUSAEJBLOGICLAYER) {
					generarReporteEvaluacionEmpleados("FK_IdBimestre",evaluacionempleadoLogic.getEvaluacionEmpleados());
				} else if(Constantes.ISUSAEJBREMOTE || Constantes.ISUSAEJBHOME) {
					generarReporteEvaluacionEmpleados("FK_IdBimestre",evaluacionempleados);
				}
				//ARCHITECTURE

					if(false) {//isMostrarTodosResultadosReporte
						this.pagination.setiFirstResult(this.iNumeroPaginacionPagina);
						this.pagination.setiMaxResults(this.iNumeroPaginacion);

						//ARCHITECTURE
						if(Constantes.ISUSAEJBLOGICLAYER) {
						evaluacionempleadoLogic.setEvaluacionEmpleados(new ArrayList<EvaluacionEmpleado>());
						evaluacionempleadoLogic.getEvaluacionEmpleados().addAll(evaluacionempleadosAux);
						} else if(Constantes.ISUSAEJBREMOTE || Constantes.ISUSAEJBHOME) {
							evaluacionempleados=new ArrayList<EvaluacionEmpleado>();
							evaluacionempleados.addAll(evaluacionempleadosAux);
						}
						//ARCHITECTURE
					}
				}

			}
			else if(sAccionBusqueda.equals("FK_IdEjercicio")) {
				this.sDetalleReporte=EvaluacionEmpleadoConstantesFunciones.getDetalleIndiceFK_IdEjercicio(id_ejercicioFK_IdEjercicio);

				
				//ARCHITECTURE
				if(Constantes.ISUSAEJBLOGICLAYER) {

					finalQueryGlobal=Funciones.GetFinalQueryAppendBusqueda(finalQueryGlobal, this.sFinalQueryGeneral,finalQueryPaginacion);

					evaluacionempleadoLogic.getEvaluacionEmpleadosFK_IdEjercicio(finalQueryGlobal,pagination,id_ejercicioFK_IdEjercicio);
				} else if(Constantes.ISUSAEJBREMOTE) {
				this.sDetalleReporte=EvaluacionEmpleadoConstantesFunciones.getDetalleIndiceFK_IdEjercicio(id_ejercicioFK_IdEjercicio);

				
				} else if(Constantes.ISUSAEJBHOME) {
				this.sDetalleReporte=EvaluacionEmpleadoConstantesFunciones.getDetalleIndiceFK_IdEjercicio(id_ejercicioFK_IdEjercicio);

				
				}
				//ARCHITECTURE

				Boolean isNoExiste=false;
				//ARCHITECTURE
				if(Constantes.ISUSAEJBLOGICLAYER) {
					isNoExiste=evaluacionempleadoLogic.getEvaluacionEmpleados()==null||evaluacionempleadoLogic.getEvaluacionEmpleados().size()==0;
				} else if(Constantes.ISUSAEJBREMOTE||Constantes.ISUSAEJBHOME) {
					isNoExiste=evaluacionempleados==null|| evaluacionempleados.size()==0;
				}
				//ARCHITECTURE

		if(false && sTipoArchivoReporte!=""&&sTipoArchivoReporte!=null) {//this.isTipoArchivoReporte
			if(false) {//isMostrarTodosResultadosReporte
				this.pagination.setiFirstResult(-1);
				this.pagination.setiMaxResults(-1);

				//ARCHITECTURE
				if(Constantes.ISUSAEJBLOGICLAYER) {
						evaluacionempleadosAux=new ArrayList<EvaluacionEmpleado>();
						evaluacionempleadosAux.addAll(evaluacionempleadoLogic.getEvaluacionEmpleados());
				} else if(Constantes.ISUSAEJBREMOTE || Constantes.ISUSAEJBHOME) {
							evaluacionempleadosAux=new ArrayList<EvaluacionEmpleado>();
							evaluacionempleadosAux.addAll(evaluacionempleados);
				}
				//ARCHITECTURE
								
				
				//ARCHITECTURE
				if(Constantes.ISUSAEJBLOGICLAYER) {
							finalQueryGlobal=Funciones.GetFinalQueryAppendBusqueda(finalQueryGlobal, this.sFinalQueryGeneral,"");
							evaluacionempleadoLogic.getEvaluacionEmpleadosFK_IdEjercicio(finalQueryGlobal,pagination,id_ejercicioFK_IdEjercicio);
				} else if(Constantes.ISUSAEJBREMOTE) {
				this.sDetalleReporte=EvaluacionEmpleadoConstantesFunciones.getDetalleIndiceFK_IdEjercicio(id_ejercicioFK_IdEjercicio);
						
				} else if(Constantes.ISUSAEJBHOME) {
				this.sDetalleReporte=EvaluacionEmpleadoConstantesFunciones.getDetalleIndiceFK_IdEjercicio(id_ejercicioFK_IdEjercicio);
						
				}
				//ARCHITECTURE
					}
				//ARCHITECTURE
				if(Constantes.ISUSAEJBLOGICLAYER) {
					generarReporteEvaluacionEmpleados("FK_IdEjercicio",evaluacionempleadoLogic.getEvaluacionEmpleados());
				} else if(Constantes.ISUSAEJBREMOTE || Constantes.ISUSAEJBHOME) {
					generarReporteEvaluacionEmpleados("FK_IdEjercicio",evaluacionempleados);
				}
				//ARCHITECTURE

					if(false) {//isMostrarTodosResultadosReporte
						this.pagination.setiFirstResult(this.iNumeroPaginacionPagina);
						this.pagination.setiMaxResults(this.iNumeroPaginacion);

						//ARCHITECTURE
						if(Constantes.ISUSAEJBLOGICLAYER) {
						evaluacionempleadoLogic.setEvaluacionEmpleados(new ArrayList<EvaluacionEmpleado>());
						evaluacionempleadoLogic.getEvaluacionEmpleados().addAll(evaluacionempleadosAux);
						} else if(Constantes.ISUSAEJBREMOTE || Constantes.ISUSAEJBHOME) {
							evaluacionempleados=new ArrayList<EvaluacionEmpleado>();
							evaluacionempleados.addAll(evaluacionempleadosAux);
						}
						//ARCHITECTURE
					}
				}

			}
			else if(sAccionBusqueda.equals("FK_IdEmpleado")) {
				this.sDetalleReporte=EvaluacionEmpleadoConstantesFunciones.getDetalleIndiceFK_IdEmpleado(id_empleadoFK_IdEmpleado);

				
				//ARCHITECTURE
				if(Constantes.ISUSAEJBLOGICLAYER) {

					finalQueryGlobal=Funciones.GetFinalQueryAppendBusqueda(finalQueryGlobal, this.sFinalQueryGeneral,finalQueryPaginacion);

					evaluacionempleadoLogic.getEvaluacionEmpleadosFK_IdEmpleado(finalQueryGlobal,pagination,id_empleadoFK_IdEmpleado);
				} else if(Constantes.ISUSAEJBREMOTE) {
				this.sDetalleReporte=EvaluacionEmpleadoConstantesFunciones.getDetalleIndiceFK_IdEmpleado(id_empleadoFK_IdEmpleado);

				
				} else if(Constantes.ISUSAEJBHOME) {
				this.sDetalleReporte=EvaluacionEmpleadoConstantesFunciones.getDetalleIndiceFK_IdEmpleado(id_empleadoFK_IdEmpleado);

				
				}
				//ARCHITECTURE

				Boolean isNoExiste=false;
				//ARCHITECTURE
				if(Constantes.ISUSAEJBLOGICLAYER) {
					isNoExiste=evaluacionempleadoLogic.getEvaluacionEmpleados()==null||evaluacionempleadoLogic.getEvaluacionEmpleados().size()==0;
				} else if(Constantes.ISUSAEJBREMOTE||Constantes.ISUSAEJBHOME) {
					isNoExiste=evaluacionempleados==null|| evaluacionempleados.size()==0;
				}
				//ARCHITECTURE

		if(false && sTipoArchivoReporte!=""&&sTipoArchivoReporte!=null) {//this.isTipoArchivoReporte
			if(false) {//isMostrarTodosResultadosReporte
				this.pagination.setiFirstResult(-1);
				this.pagination.setiMaxResults(-1);

				//ARCHITECTURE
				if(Constantes.ISUSAEJBLOGICLAYER) {
						evaluacionempleadosAux=new ArrayList<EvaluacionEmpleado>();
						evaluacionempleadosAux.addAll(evaluacionempleadoLogic.getEvaluacionEmpleados());
				} else if(Constantes.ISUSAEJBREMOTE || Constantes.ISUSAEJBHOME) {
							evaluacionempleadosAux=new ArrayList<EvaluacionEmpleado>();
							evaluacionempleadosAux.addAll(evaluacionempleados);
				}
				//ARCHITECTURE
								
				
				//ARCHITECTURE
				if(Constantes.ISUSAEJBLOGICLAYER) {
							finalQueryGlobal=Funciones.GetFinalQueryAppendBusqueda(finalQueryGlobal, this.sFinalQueryGeneral,"");
							evaluacionempleadoLogic.getEvaluacionEmpleadosFK_IdEmpleado(finalQueryGlobal,pagination,id_empleadoFK_IdEmpleado);
				} else if(Constantes.ISUSAEJBREMOTE) {
				this.sDetalleReporte=EvaluacionEmpleadoConstantesFunciones.getDetalleIndiceFK_IdEmpleado(id_empleadoFK_IdEmpleado);
						
				} else if(Constantes.ISUSAEJBHOME) {
				this.sDetalleReporte=EvaluacionEmpleadoConstantesFunciones.getDetalleIndiceFK_IdEmpleado(id_empleadoFK_IdEmpleado);
						
				}
				//ARCHITECTURE
					}
				//ARCHITECTURE
				if(Constantes.ISUSAEJBLOGICLAYER) {
					generarReporteEvaluacionEmpleados("FK_IdEmpleado",evaluacionempleadoLogic.getEvaluacionEmpleados());
				} else if(Constantes.ISUSAEJBREMOTE || Constantes.ISUSAEJBHOME) {
					generarReporteEvaluacionEmpleados("FK_IdEmpleado",evaluacionempleados);
				}
				//ARCHITECTURE

					if(false) {//isMostrarTodosResultadosReporte
						this.pagination.setiFirstResult(this.iNumeroPaginacionPagina);
						this.pagination.setiMaxResults(this.iNumeroPaginacion);

						//ARCHITECTURE
						if(Constantes.ISUSAEJBLOGICLAYER) {
						evaluacionempleadoLogic.setEvaluacionEmpleados(new ArrayList<EvaluacionEmpleado>());
						evaluacionempleadoLogic.getEvaluacionEmpleados().addAll(evaluacionempleadosAux);
						} else if(Constantes.ISUSAEJBREMOTE || Constantes.ISUSAEJBHOME) {
							evaluacionempleados=new ArrayList<EvaluacionEmpleado>();
							evaluacionempleados.addAll(evaluacionempleadosAux);
						}
						//ARCHITECTURE
					}
				}

			}
			else if(sAccionBusqueda.equals("FK_IdEmpleadoEvalua")) {
				this.sDetalleReporte=EvaluacionEmpleadoConstantesFunciones.getDetalleIndiceFK_IdEmpleadoEvalua(id_empleado_evaluaFK_IdEmpleadoEvalua);

				
				//ARCHITECTURE
				if(Constantes.ISUSAEJBLOGICLAYER) {

					finalQueryGlobal=Funciones.GetFinalQueryAppendBusqueda(finalQueryGlobal, this.sFinalQueryGeneral,finalQueryPaginacion);

					evaluacionempleadoLogic.getEvaluacionEmpleadosFK_IdEmpleadoEvalua(finalQueryGlobal,pagination,id_empleado_evaluaFK_IdEmpleadoEvalua);
				} else if(Constantes.ISUSAEJBREMOTE) {
				this.sDetalleReporte=EvaluacionEmpleadoConstantesFunciones.getDetalleIndiceFK_IdEmpleadoEvalua(id_empleado_evaluaFK_IdEmpleadoEvalua);

				
				} else if(Constantes.ISUSAEJBHOME) {
				this.sDetalleReporte=EvaluacionEmpleadoConstantesFunciones.getDetalleIndiceFK_IdEmpleadoEvalua(id_empleado_evaluaFK_IdEmpleadoEvalua);

				
				}
				//ARCHITECTURE

				Boolean isNoExiste=false;
				//ARCHITECTURE
				if(Constantes.ISUSAEJBLOGICLAYER) {
					isNoExiste=evaluacionempleadoLogic.getEvaluacionEmpleados()==null||evaluacionempleadoLogic.getEvaluacionEmpleados().size()==0;
				} else if(Constantes.ISUSAEJBREMOTE||Constantes.ISUSAEJBHOME) {
					isNoExiste=evaluacionempleados==null|| evaluacionempleados.size()==0;
				}
				//ARCHITECTURE

		if(false && sTipoArchivoReporte!=""&&sTipoArchivoReporte!=null) {//this.isTipoArchivoReporte
			if(false) {//isMostrarTodosResultadosReporte
				this.pagination.setiFirstResult(-1);
				this.pagination.setiMaxResults(-1);

				//ARCHITECTURE
				if(Constantes.ISUSAEJBLOGICLAYER) {
						evaluacionempleadosAux=new ArrayList<EvaluacionEmpleado>();
						evaluacionempleadosAux.addAll(evaluacionempleadoLogic.getEvaluacionEmpleados());
				} else if(Constantes.ISUSAEJBREMOTE || Constantes.ISUSAEJBHOME) {
							evaluacionempleadosAux=new ArrayList<EvaluacionEmpleado>();
							evaluacionempleadosAux.addAll(evaluacionempleados);
				}
				//ARCHITECTURE
								
				
				//ARCHITECTURE
				if(Constantes.ISUSAEJBLOGICLAYER) {
							finalQueryGlobal=Funciones.GetFinalQueryAppendBusqueda(finalQueryGlobal, this.sFinalQueryGeneral,"");
							evaluacionempleadoLogic.getEvaluacionEmpleadosFK_IdEmpleadoEvalua(finalQueryGlobal,pagination,id_empleado_evaluaFK_IdEmpleadoEvalua);
				} else if(Constantes.ISUSAEJBREMOTE) {
				this.sDetalleReporte=EvaluacionEmpleadoConstantesFunciones.getDetalleIndiceFK_IdEmpleadoEvalua(id_empleado_evaluaFK_IdEmpleadoEvalua);
						
				} else if(Constantes.ISUSAEJBHOME) {
				this.sDetalleReporte=EvaluacionEmpleadoConstantesFunciones.getDetalleIndiceFK_IdEmpleadoEvalua(id_empleado_evaluaFK_IdEmpleadoEvalua);
						
				}
				//ARCHITECTURE
					}
				//ARCHITECTURE
				if(Constantes.ISUSAEJBLOGICLAYER) {
					generarReporteEvaluacionEmpleados("FK_IdEmpleadoEvalua",evaluacionempleadoLogic.getEvaluacionEmpleados());
				} else if(Constantes.ISUSAEJBREMOTE || Constantes.ISUSAEJBHOME) {
					generarReporteEvaluacionEmpleados("FK_IdEmpleadoEvalua",evaluacionempleados);
				}
				//ARCHITECTURE

					if(false) {//isMostrarTodosResultadosReporte
						this.pagination.setiFirstResult(this.iNumeroPaginacionPagina);
						this.pagination.setiMaxResults(this.iNumeroPaginacion);

						//ARCHITECTURE
						if(Constantes.ISUSAEJBLOGICLAYER) {
						evaluacionempleadoLogic.setEvaluacionEmpleados(new ArrayList<EvaluacionEmpleado>());
						evaluacionempleadoLogic.getEvaluacionEmpleados().addAll(evaluacionempleadosAux);
						} else if(Constantes.ISUSAEJBREMOTE || Constantes.ISUSAEJBHOME) {
							evaluacionempleados=new ArrayList<EvaluacionEmpleado>();
							evaluacionempleados.addAll(evaluacionempleadosAux);
						}
						//ARCHITECTURE
					}
				}

			}
			else if(sAccionBusqueda.equals("FK_IdEmpresa")) {
				this.sDetalleReporte=EvaluacionEmpleadoConstantesFunciones.getDetalleIndiceFK_IdEmpresa(id_empresaFK_IdEmpresa);

				
				//ARCHITECTURE
				if(Constantes.ISUSAEJBLOGICLAYER) {

					finalQueryGlobal=Funciones.GetFinalQueryAppendBusqueda(finalQueryGlobal, this.sFinalQueryGeneral,finalQueryPaginacion);

					evaluacionempleadoLogic.getEvaluacionEmpleadosFK_IdEmpresa(finalQueryGlobal,pagination,id_empresaFK_IdEmpresa);
				} else if(Constantes.ISUSAEJBREMOTE) {
				this.sDetalleReporte=EvaluacionEmpleadoConstantesFunciones.getDetalleIndiceFK_IdEmpresa(id_empresaFK_IdEmpresa);

				
				} else if(Constantes.ISUSAEJBHOME) {
				this.sDetalleReporte=EvaluacionEmpleadoConstantesFunciones.getDetalleIndiceFK_IdEmpresa(id_empresaFK_IdEmpresa);

				
				}
				//ARCHITECTURE

				Boolean isNoExiste=false;
				//ARCHITECTURE
				if(Constantes.ISUSAEJBLOGICLAYER) {
					isNoExiste=evaluacionempleadoLogic.getEvaluacionEmpleados()==null||evaluacionempleadoLogic.getEvaluacionEmpleados().size()==0;
				} else if(Constantes.ISUSAEJBREMOTE||Constantes.ISUSAEJBHOME) {
					isNoExiste=evaluacionempleados==null|| evaluacionempleados.size()==0;
				}
				//ARCHITECTURE

		if(false && sTipoArchivoReporte!=""&&sTipoArchivoReporte!=null) {//this.isTipoArchivoReporte
			if(false) {//isMostrarTodosResultadosReporte
				this.pagination.setiFirstResult(-1);
				this.pagination.setiMaxResults(-1);

				//ARCHITECTURE
				if(Constantes.ISUSAEJBLOGICLAYER) {
						evaluacionempleadosAux=new ArrayList<EvaluacionEmpleado>();
						evaluacionempleadosAux.addAll(evaluacionempleadoLogic.getEvaluacionEmpleados());
				} else if(Constantes.ISUSAEJBREMOTE || Constantes.ISUSAEJBHOME) {
							evaluacionempleadosAux=new ArrayList<EvaluacionEmpleado>();
							evaluacionempleadosAux.addAll(evaluacionempleados);
				}
				//ARCHITECTURE
								
				
				//ARCHITECTURE
				if(Constantes.ISUSAEJBLOGICLAYER) {
							finalQueryGlobal=Funciones.GetFinalQueryAppendBusqueda(finalQueryGlobal, this.sFinalQueryGeneral,"");
							evaluacionempleadoLogic.getEvaluacionEmpleadosFK_IdEmpresa(finalQueryGlobal,pagination,id_empresaFK_IdEmpresa);
				} else if(Constantes.ISUSAEJBREMOTE) {
				this.sDetalleReporte=EvaluacionEmpleadoConstantesFunciones.getDetalleIndiceFK_IdEmpresa(id_empresaFK_IdEmpresa);
						
				} else if(Constantes.ISUSAEJBHOME) {
				this.sDetalleReporte=EvaluacionEmpleadoConstantesFunciones.getDetalleIndiceFK_IdEmpresa(id_empresaFK_IdEmpresa);
						
				}
				//ARCHITECTURE
					}
				//ARCHITECTURE
				if(Constantes.ISUSAEJBLOGICLAYER) {
					generarReporteEvaluacionEmpleados("FK_IdEmpresa",evaluacionempleadoLogic.getEvaluacionEmpleados());
				} else if(Constantes.ISUSAEJBREMOTE || Constantes.ISUSAEJBHOME) {
					generarReporteEvaluacionEmpleados("FK_IdEmpresa",evaluacionempleados);
				}
				//ARCHITECTURE

					if(false) {//isMostrarTodosResultadosReporte
						this.pagination.setiFirstResult(this.iNumeroPaginacionPagina);
						this.pagination.setiMaxResults(this.iNumeroPaginacion);

						//ARCHITECTURE
						if(Constantes.ISUSAEJBLOGICLAYER) {
						evaluacionempleadoLogic.setEvaluacionEmpleados(new ArrayList<EvaluacionEmpleado>());
						evaluacionempleadoLogic.getEvaluacionEmpleados().addAll(evaluacionempleadosAux);
						} else if(Constantes.ISUSAEJBREMOTE || Constantes.ISUSAEJBHOME) {
							evaluacionempleados=new ArrayList<EvaluacionEmpleado>();
							evaluacionempleados.addAll(evaluacionempleadosAux);
						}
						//ARCHITECTURE
					}
				}

			}
			else if(sAccionBusqueda.equals("FK_IdEstructura")) {
				this.sDetalleReporte=EvaluacionEmpleadoConstantesFunciones.getDetalleIndiceFK_IdEstructura(id_estructuraFK_IdEstructura);

				
				//ARCHITECTURE
				if(Constantes.ISUSAEJBLOGICLAYER) {

					finalQueryGlobal=Funciones.GetFinalQueryAppendBusqueda(finalQueryGlobal, this.sFinalQueryGeneral,finalQueryPaginacion);

					evaluacionempleadoLogic.getEvaluacionEmpleadosFK_IdEstructura(finalQueryGlobal,pagination,id_estructuraFK_IdEstructura);
				} else if(Constantes.ISUSAEJBREMOTE) {
				this.sDetalleReporte=EvaluacionEmpleadoConstantesFunciones.getDetalleIndiceFK_IdEstructura(id_estructuraFK_IdEstructura);

				
				} else if(Constantes.ISUSAEJBHOME) {
				this.sDetalleReporte=EvaluacionEmpleadoConstantesFunciones.getDetalleIndiceFK_IdEstructura(id_estructuraFK_IdEstructura);

				
				}
				//ARCHITECTURE

				Boolean isNoExiste=false;
				//ARCHITECTURE
				if(Constantes.ISUSAEJBLOGICLAYER) {
					isNoExiste=evaluacionempleadoLogic.getEvaluacionEmpleados()==null||evaluacionempleadoLogic.getEvaluacionEmpleados().size()==0;
				} else if(Constantes.ISUSAEJBREMOTE||Constantes.ISUSAEJBHOME) {
					isNoExiste=evaluacionempleados==null|| evaluacionempleados.size()==0;
				}
				//ARCHITECTURE

		if(false && sTipoArchivoReporte!=""&&sTipoArchivoReporte!=null) {//this.isTipoArchivoReporte
			if(false) {//isMostrarTodosResultadosReporte
				this.pagination.setiFirstResult(-1);
				this.pagination.setiMaxResults(-1);

				//ARCHITECTURE
				if(Constantes.ISUSAEJBLOGICLAYER) {
						evaluacionempleadosAux=new ArrayList<EvaluacionEmpleado>();
						evaluacionempleadosAux.addAll(evaluacionempleadoLogic.getEvaluacionEmpleados());
				} else if(Constantes.ISUSAEJBREMOTE || Constantes.ISUSAEJBHOME) {
							evaluacionempleadosAux=new ArrayList<EvaluacionEmpleado>();
							evaluacionempleadosAux.addAll(evaluacionempleados);
				}
				//ARCHITECTURE
								
				
				//ARCHITECTURE
				if(Constantes.ISUSAEJBLOGICLAYER) {
							finalQueryGlobal=Funciones.GetFinalQueryAppendBusqueda(finalQueryGlobal, this.sFinalQueryGeneral,"");
							evaluacionempleadoLogic.getEvaluacionEmpleadosFK_IdEstructura(finalQueryGlobal,pagination,id_estructuraFK_IdEstructura);
				} else if(Constantes.ISUSAEJBREMOTE) {
				this.sDetalleReporte=EvaluacionEmpleadoConstantesFunciones.getDetalleIndiceFK_IdEstructura(id_estructuraFK_IdEstructura);
						
				} else if(Constantes.ISUSAEJBHOME) {
				this.sDetalleReporte=EvaluacionEmpleadoConstantesFunciones.getDetalleIndiceFK_IdEstructura(id_estructuraFK_IdEstructura);
						
				}
				//ARCHITECTURE
					}
				//ARCHITECTURE
				if(Constantes.ISUSAEJBLOGICLAYER) {
					generarReporteEvaluacionEmpleados("FK_IdEstructura",evaluacionempleadoLogic.getEvaluacionEmpleados());
				} else if(Constantes.ISUSAEJBREMOTE || Constantes.ISUSAEJBHOME) {
					generarReporteEvaluacionEmpleados("FK_IdEstructura",evaluacionempleados);
				}
				//ARCHITECTURE

					if(false) {//isMostrarTodosResultadosReporte
						this.pagination.setiFirstResult(this.iNumeroPaginacionPagina);
						this.pagination.setiMaxResults(this.iNumeroPaginacion);

						//ARCHITECTURE
						if(Constantes.ISUSAEJBLOGICLAYER) {
						evaluacionempleadoLogic.setEvaluacionEmpleados(new ArrayList<EvaluacionEmpleado>());
						evaluacionempleadoLogic.getEvaluacionEmpleados().addAll(evaluacionempleadosAux);
						} else if(Constantes.ISUSAEJBREMOTE || Constantes.ISUSAEJBHOME) {
							evaluacionempleados=new ArrayList<EvaluacionEmpleado>();
							evaluacionempleados.addAll(evaluacionempleadosAux);
						}
						//ARCHITECTURE
					}
				}

			}
			else if(sAccionBusqueda.equals("FK_IdMes")) {
				this.sDetalleReporte=EvaluacionEmpleadoConstantesFunciones.getDetalleIndiceFK_IdMes(id_mesFK_IdMes);

				
				//ARCHITECTURE
				if(Constantes.ISUSAEJBLOGICLAYER) {

					finalQueryGlobal=Funciones.GetFinalQueryAppendBusqueda(finalQueryGlobal, this.sFinalQueryGeneral,finalQueryPaginacion);

					evaluacionempleadoLogic.getEvaluacionEmpleadosFK_IdMes(finalQueryGlobal,pagination,id_mesFK_IdMes);
				} else if(Constantes.ISUSAEJBREMOTE) {
				this.sDetalleReporte=EvaluacionEmpleadoConstantesFunciones.getDetalleIndiceFK_IdMes(id_mesFK_IdMes);

				
				} else if(Constantes.ISUSAEJBHOME) {
				this.sDetalleReporte=EvaluacionEmpleadoConstantesFunciones.getDetalleIndiceFK_IdMes(id_mesFK_IdMes);

				
				}
				//ARCHITECTURE

				Boolean isNoExiste=false;
				//ARCHITECTURE
				if(Constantes.ISUSAEJBLOGICLAYER) {
					isNoExiste=evaluacionempleadoLogic.getEvaluacionEmpleados()==null||evaluacionempleadoLogic.getEvaluacionEmpleados().size()==0;
				} else if(Constantes.ISUSAEJBREMOTE||Constantes.ISUSAEJBHOME) {
					isNoExiste=evaluacionempleados==null|| evaluacionempleados.size()==0;
				}
				//ARCHITECTURE

		if(false && sTipoArchivoReporte!=""&&sTipoArchivoReporte!=null) {//this.isTipoArchivoReporte
			if(false) {//isMostrarTodosResultadosReporte
				this.pagination.setiFirstResult(-1);
				this.pagination.setiMaxResults(-1);

				//ARCHITECTURE
				if(Constantes.ISUSAEJBLOGICLAYER) {
						evaluacionempleadosAux=new ArrayList<EvaluacionEmpleado>();
						evaluacionempleadosAux.addAll(evaluacionempleadoLogic.getEvaluacionEmpleados());
				} else if(Constantes.ISUSAEJBREMOTE || Constantes.ISUSAEJBHOME) {
							evaluacionempleadosAux=new ArrayList<EvaluacionEmpleado>();
							evaluacionempleadosAux.addAll(evaluacionempleados);
				}
				//ARCHITECTURE
								
				
				//ARCHITECTURE
				if(Constantes.ISUSAEJBLOGICLAYER) {
							finalQueryGlobal=Funciones.GetFinalQueryAppendBusqueda(finalQueryGlobal, this.sFinalQueryGeneral,"");
							evaluacionempleadoLogic.getEvaluacionEmpleadosFK_IdMes(finalQueryGlobal,pagination,id_mesFK_IdMes);
				} else if(Constantes.ISUSAEJBREMOTE) {
				this.sDetalleReporte=EvaluacionEmpleadoConstantesFunciones.getDetalleIndiceFK_IdMes(id_mesFK_IdMes);
						
				} else if(Constantes.ISUSAEJBHOME) {
				this.sDetalleReporte=EvaluacionEmpleadoConstantesFunciones.getDetalleIndiceFK_IdMes(id_mesFK_IdMes);
						
				}
				//ARCHITECTURE
					}
				//ARCHITECTURE
				if(Constantes.ISUSAEJBLOGICLAYER) {
					generarReporteEvaluacionEmpleados("FK_IdMes",evaluacionempleadoLogic.getEvaluacionEmpleados());
				} else if(Constantes.ISUSAEJBREMOTE || Constantes.ISUSAEJBHOME) {
					generarReporteEvaluacionEmpleados("FK_IdMes",evaluacionempleados);
				}
				//ARCHITECTURE

					if(false) {//isMostrarTodosResultadosReporte
						this.pagination.setiFirstResult(this.iNumeroPaginacionPagina);
						this.pagination.setiMaxResults(this.iNumeroPaginacion);

						//ARCHITECTURE
						if(Constantes.ISUSAEJBLOGICLAYER) {
						evaluacionempleadoLogic.setEvaluacionEmpleados(new ArrayList<EvaluacionEmpleado>());
						evaluacionempleadoLogic.getEvaluacionEmpleados().addAll(evaluacionempleadosAux);
						} else if(Constantes.ISUSAEJBREMOTE || Constantes.ISUSAEJBHOME) {
							evaluacionempleados=new ArrayList<EvaluacionEmpleado>();
							evaluacionempleados.addAll(evaluacionempleadosAux);
						}
						//ARCHITECTURE
					}
				}

			}
			else if(sAccionBusqueda.equals("FK_IdPeriodo")) {
				this.sDetalleReporte=EvaluacionEmpleadoConstantesFunciones.getDetalleIndiceFK_IdPeriodo(id_periodoFK_IdPeriodo);

				
				//ARCHITECTURE
				if(Constantes.ISUSAEJBLOGICLAYER) {

					finalQueryGlobal=Funciones.GetFinalQueryAppendBusqueda(finalQueryGlobal, this.sFinalQueryGeneral,finalQueryPaginacion);

					evaluacionempleadoLogic.getEvaluacionEmpleadosFK_IdPeriodo(finalQueryGlobal,pagination,id_periodoFK_IdPeriodo);
				} else if(Constantes.ISUSAEJBREMOTE) {
				this.sDetalleReporte=EvaluacionEmpleadoConstantesFunciones.getDetalleIndiceFK_IdPeriodo(id_periodoFK_IdPeriodo);

				
				} else if(Constantes.ISUSAEJBHOME) {
				this.sDetalleReporte=EvaluacionEmpleadoConstantesFunciones.getDetalleIndiceFK_IdPeriodo(id_periodoFK_IdPeriodo);

				
				}
				//ARCHITECTURE

				Boolean isNoExiste=false;
				//ARCHITECTURE
				if(Constantes.ISUSAEJBLOGICLAYER) {
					isNoExiste=evaluacionempleadoLogic.getEvaluacionEmpleados()==null||evaluacionempleadoLogic.getEvaluacionEmpleados().size()==0;
				} else if(Constantes.ISUSAEJBREMOTE||Constantes.ISUSAEJBHOME) {
					isNoExiste=evaluacionempleados==null|| evaluacionempleados.size()==0;
				}
				//ARCHITECTURE

		if(false && sTipoArchivoReporte!=""&&sTipoArchivoReporte!=null) {//this.isTipoArchivoReporte
			if(false) {//isMostrarTodosResultadosReporte
				this.pagination.setiFirstResult(-1);
				this.pagination.setiMaxResults(-1);

				//ARCHITECTURE
				if(Constantes.ISUSAEJBLOGICLAYER) {
						evaluacionempleadosAux=new ArrayList<EvaluacionEmpleado>();
						evaluacionempleadosAux.addAll(evaluacionempleadoLogic.getEvaluacionEmpleados());
				} else if(Constantes.ISUSAEJBREMOTE || Constantes.ISUSAEJBHOME) {
							evaluacionempleadosAux=new ArrayList<EvaluacionEmpleado>();
							evaluacionempleadosAux.addAll(evaluacionempleados);
				}
				//ARCHITECTURE
								
				
				//ARCHITECTURE
				if(Constantes.ISUSAEJBLOGICLAYER) {
							finalQueryGlobal=Funciones.GetFinalQueryAppendBusqueda(finalQueryGlobal, this.sFinalQueryGeneral,"");
							evaluacionempleadoLogic.getEvaluacionEmpleadosFK_IdPeriodo(finalQueryGlobal,pagination,id_periodoFK_IdPeriodo);
				} else if(Constantes.ISUSAEJBREMOTE) {
				this.sDetalleReporte=EvaluacionEmpleadoConstantesFunciones.getDetalleIndiceFK_IdPeriodo(id_periodoFK_IdPeriodo);
						
				} else if(Constantes.ISUSAEJBHOME) {
				this.sDetalleReporte=EvaluacionEmpleadoConstantesFunciones.getDetalleIndiceFK_IdPeriodo(id_periodoFK_IdPeriodo);
						
				}
				//ARCHITECTURE
					}
				//ARCHITECTURE
				if(Constantes.ISUSAEJBLOGICLAYER) {
					generarReporteEvaluacionEmpleados("FK_IdPeriodo",evaluacionempleadoLogic.getEvaluacionEmpleados());
				} else if(Constantes.ISUSAEJBREMOTE || Constantes.ISUSAEJBHOME) {
					generarReporteEvaluacionEmpleados("FK_IdPeriodo",evaluacionempleados);
				}
				//ARCHITECTURE

					if(false) {//isMostrarTodosResultadosReporte
						this.pagination.setiFirstResult(this.iNumeroPaginacionPagina);
						this.pagination.setiMaxResults(this.iNumeroPaginacion);

						//ARCHITECTURE
						if(Constantes.ISUSAEJBLOGICLAYER) {
						evaluacionempleadoLogic.setEvaluacionEmpleados(new ArrayList<EvaluacionEmpleado>());
						evaluacionempleadoLogic.getEvaluacionEmpleados().addAll(evaluacionempleadosAux);
						} else if(Constantes.ISUSAEJBREMOTE || Constantes.ISUSAEJBHOME) {
							evaluacionempleados=new ArrayList<EvaluacionEmpleado>();
							evaluacionempleados.addAll(evaluacionempleadosAux);
						}
						//ARCHITECTURE
					}
				}

			}
			else if(sAccionBusqueda.equals("FK_IdSemestre")) {
				this.sDetalleReporte=EvaluacionEmpleadoConstantesFunciones.getDetalleIndiceFK_IdSemestre(id_semestreFK_IdSemestre);

				
				//ARCHITECTURE
				if(Constantes.ISUSAEJBLOGICLAYER) {

					finalQueryGlobal=Funciones.GetFinalQueryAppendBusqueda(finalQueryGlobal, this.sFinalQueryGeneral,finalQueryPaginacion);

					evaluacionempleadoLogic.getEvaluacionEmpleadosFK_IdSemestre(finalQueryGlobal,pagination,id_semestreFK_IdSemestre);
				} else if(Constantes.ISUSAEJBREMOTE) {
				this.sDetalleReporte=EvaluacionEmpleadoConstantesFunciones.getDetalleIndiceFK_IdSemestre(id_semestreFK_IdSemestre);

				
				} else if(Constantes.ISUSAEJBHOME) {
				this.sDetalleReporte=EvaluacionEmpleadoConstantesFunciones.getDetalleIndiceFK_IdSemestre(id_semestreFK_IdSemestre);

				
				}
				//ARCHITECTURE

				Boolean isNoExiste=false;
				//ARCHITECTURE
				if(Constantes.ISUSAEJBLOGICLAYER) {
					isNoExiste=evaluacionempleadoLogic.getEvaluacionEmpleados()==null||evaluacionempleadoLogic.getEvaluacionEmpleados().size()==0;
				} else if(Constantes.ISUSAEJBREMOTE||Constantes.ISUSAEJBHOME) {
					isNoExiste=evaluacionempleados==null|| evaluacionempleados.size()==0;
				}
				//ARCHITECTURE

		if(false && sTipoArchivoReporte!=""&&sTipoArchivoReporte!=null) {//this.isTipoArchivoReporte
			if(false) {//isMostrarTodosResultadosReporte
				this.pagination.setiFirstResult(-1);
				this.pagination.setiMaxResults(-1);

				//ARCHITECTURE
				if(Constantes.ISUSAEJBLOGICLAYER) {
						evaluacionempleadosAux=new ArrayList<EvaluacionEmpleado>();
						evaluacionempleadosAux.addAll(evaluacionempleadoLogic.getEvaluacionEmpleados());
				} else if(Constantes.ISUSAEJBREMOTE || Constantes.ISUSAEJBHOME) {
							evaluacionempleadosAux=new ArrayList<EvaluacionEmpleado>();
							evaluacionempleadosAux.addAll(evaluacionempleados);
				}
				//ARCHITECTURE
								
				
				//ARCHITECTURE
				if(Constantes.ISUSAEJBLOGICLAYER) {
							finalQueryGlobal=Funciones.GetFinalQueryAppendBusqueda(finalQueryGlobal, this.sFinalQueryGeneral,"");
							evaluacionempleadoLogic.getEvaluacionEmpleadosFK_IdSemestre(finalQueryGlobal,pagination,id_semestreFK_IdSemestre);
				} else if(Constantes.ISUSAEJBREMOTE) {
				this.sDetalleReporte=EvaluacionEmpleadoConstantesFunciones.getDetalleIndiceFK_IdSemestre(id_semestreFK_IdSemestre);
						
				} else if(Constantes.ISUSAEJBHOME) {
				this.sDetalleReporte=EvaluacionEmpleadoConstantesFunciones.getDetalleIndiceFK_IdSemestre(id_semestreFK_IdSemestre);
						
				}
				//ARCHITECTURE
					}
				//ARCHITECTURE
				if(Constantes.ISUSAEJBLOGICLAYER) {
					generarReporteEvaluacionEmpleados("FK_IdSemestre",evaluacionempleadoLogic.getEvaluacionEmpleados());
				} else if(Constantes.ISUSAEJBREMOTE || Constantes.ISUSAEJBHOME) {
					generarReporteEvaluacionEmpleados("FK_IdSemestre",evaluacionempleados);
				}
				//ARCHITECTURE

					if(false) {//isMostrarTodosResultadosReporte
						this.pagination.setiFirstResult(this.iNumeroPaginacionPagina);
						this.pagination.setiMaxResults(this.iNumeroPaginacion);

						//ARCHITECTURE
						if(Constantes.ISUSAEJBLOGICLAYER) {
						evaluacionempleadoLogic.setEvaluacionEmpleados(new ArrayList<EvaluacionEmpleado>());
						evaluacionempleadoLogic.getEvaluacionEmpleados().addAll(evaluacionempleadosAux);
						} else if(Constantes.ISUSAEJBREMOTE || Constantes.ISUSAEJBHOME) {
							evaluacionempleados=new ArrayList<EvaluacionEmpleado>();
							evaluacionempleados.addAll(evaluacionempleadosAux);
						}
						//ARCHITECTURE
					}
				}

			}
			else if(sAccionBusqueda.equals("FK_IdSucursal")) {
				this.sDetalleReporte=EvaluacionEmpleadoConstantesFunciones.getDetalleIndiceFK_IdSucursal(id_sucursalFK_IdSucursal);

				
				//ARCHITECTURE
				if(Constantes.ISUSAEJBLOGICLAYER) {

					finalQueryGlobal=Funciones.GetFinalQueryAppendBusqueda(finalQueryGlobal, this.sFinalQueryGeneral,finalQueryPaginacion);

					evaluacionempleadoLogic.getEvaluacionEmpleadosFK_IdSucursal(finalQueryGlobal,pagination,id_sucursalFK_IdSucursal);
				} else if(Constantes.ISUSAEJBREMOTE) {
				this.sDetalleReporte=EvaluacionEmpleadoConstantesFunciones.getDetalleIndiceFK_IdSucursal(id_sucursalFK_IdSucursal);

				
				} else if(Constantes.ISUSAEJBHOME) {
				this.sDetalleReporte=EvaluacionEmpleadoConstantesFunciones.getDetalleIndiceFK_IdSucursal(id_sucursalFK_IdSucursal);

				
				}
				//ARCHITECTURE

				Boolean isNoExiste=false;
				//ARCHITECTURE
				if(Constantes.ISUSAEJBLOGICLAYER) {
					isNoExiste=evaluacionempleadoLogic.getEvaluacionEmpleados()==null||evaluacionempleadoLogic.getEvaluacionEmpleados().size()==0;
				} else if(Constantes.ISUSAEJBREMOTE||Constantes.ISUSAEJBHOME) {
					isNoExiste=evaluacionempleados==null|| evaluacionempleados.size()==0;
				}
				//ARCHITECTURE

		if(false && sTipoArchivoReporte!=""&&sTipoArchivoReporte!=null) {//this.isTipoArchivoReporte
			if(false) {//isMostrarTodosResultadosReporte
				this.pagination.setiFirstResult(-1);
				this.pagination.setiMaxResults(-1);

				//ARCHITECTURE
				if(Constantes.ISUSAEJBLOGICLAYER) {
						evaluacionempleadosAux=new ArrayList<EvaluacionEmpleado>();
						evaluacionempleadosAux.addAll(evaluacionempleadoLogic.getEvaluacionEmpleados());
				} else if(Constantes.ISUSAEJBREMOTE || Constantes.ISUSAEJBHOME) {
							evaluacionempleadosAux=new ArrayList<EvaluacionEmpleado>();
							evaluacionempleadosAux.addAll(evaluacionempleados);
				}
				//ARCHITECTURE
								
				
				//ARCHITECTURE
				if(Constantes.ISUSAEJBLOGICLAYER) {
							finalQueryGlobal=Funciones.GetFinalQueryAppendBusqueda(finalQueryGlobal, this.sFinalQueryGeneral,"");
							evaluacionempleadoLogic.getEvaluacionEmpleadosFK_IdSucursal(finalQueryGlobal,pagination,id_sucursalFK_IdSucursal);
				} else if(Constantes.ISUSAEJBREMOTE) {
				this.sDetalleReporte=EvaluacionEmpleadoConstantesFunciones.getDetalleIndiceFK_IdSucursal(id_sucursalFK_IdSucursal);
						
				} else if(Constantes.ISUSAEJBHOME) {
				this.sDetalleReporte=EvaluacionEmpleadoConstantesFunciones.getDetalleIndiceFK_IdSucursal(id_sucursalFK_IdSucursal);
						
				}
				//ARCHITECTURE
					}
				//ARCHITECTURE
				if(Constantes.ISUSAEJBLOGICLAYER) {
					generarReporteEvaluacionEmpleados("FK_IdSucursal",evaluacionempleadoLogic.getEvaluacionEmpleados());
				} else if(Constantes.ISUSAEJBREMOTE || Constantes.ISUSAEJBHOME) {
					generarReporteEvaluacionEmpleados("FK_IdSucursal",evaluacionempleados);
				}
				//ARCHITECTURE

					if(false) {//isMostrarTodosResultadosReporte
						this.pagination.setiFirstResult(this.iNumeroPaginacionPagina);
						this.pagination.setiMaxResults(this.iNumeroPaginacion);

						//ARCHITECTURE
						if(Constantes.ISUSAEJBLOGICLAYER) {
						evaluacionempleadoLogic.setEvaluacionEmpleados(new ArrayList<EvaluacionEmpleado>());
						evaluacionempleadoLogic.getEvaluacionEmpleados().addAll(evaluacionempleadosAux);
						} else if(Constantes.ISUSAEJBREMOTE || Constantes.ISUSAEJBHOME) {
							evaluacionempleados=new ArrayList<EvaluacionEmpleado>();
							evaluacionempleados.addAll(evaluacionempleadosAux);
						}
						//ARCHITECTURE
					}
				}

			}
			else if(sAccionBusqueda.equals("FK_IdTipoEvaluacionEmpleado")) {
				this.sDetalleReporte=EvaluacionEmpleadoConstantesFunciones.getDetalleIndiceFK_IdTipoEvaluacionEmpleado(id_tipo_evaluacion_empleadoFK_IdTipoEvaluacionEmpleado);

				
				//ARCHITECTURE
				if(Constantes.ISUSAEJBLOGICLAYER) {

					finalQueryGlobal=Funciones.GetFinalQueryAppendBusqueda(finalQueryGlobal, this.sFinalQueryGeneral,finalQueryPaginacion);

					evaluacionempleadoLogic.getEvaluacionEmpleadosFK_IdTipoEvaluacionEmpleado(finalQueryGlobal,pagination,id_tipo_evaluacion_empleadoFK_IdTipoEvaluacionEmpleado);
				} else if(Constantes.ISUSAEJBREMOTE) {
				this.sDetalleReporte=EvaluacionEmpleadoConstantesFunciones.getDetalleIndiceFK_IdTipoEvaluacionEmpleado(id_tipo_evaluacion_empleadoFK_IdTipoEvaluacionEmpleado);

				
				} else if(Constantes.ISUSAEJBHOME) {
				this.sDetalleReporte=EvaluacionEmpleadoConstantesFunciones.getDetalleIndiceFK_IdTipoEvaluacionEmpleado(id_tipo_evaluacion_empleadoFK_IdTipoEvaluacionEmpleado);

				
				}
				//ARCHITECTURE

				Boolean isNoExiste=false;
				//ARCHITECTURE
				if(Constantes.ISUSAEJBLOGICLAYER) {
					isNoExiste=evaluacionempleadoLogic.getEvaluacionEmpleados()==null||evaluacionempleadoLogic.getEvaluacionEmpleados().size()==0;
				} else if(Constantes.ISUSAEJBREMOTE||Constantes.ISUSAEJBHOME) {
					isNoExiste=evaluacionempleados==null|| evaluacionempleados.size()==0;
				}
				//ARCHITECTURE

		if(false && sTipoArchivoReporte!=""&&sTipoArchivoReporte!=null) {//this.isTipoArchivoReporte
			if(false) {//isMostrarTodosResultadosReporte
				this.pagination.setiFirstResult(-1);
				this.pagination.setiMaxResults(-1);

				//ARCHITECTURE
				if(Constantes.ISUSAEJBLOGICLAYER) {
						evaluacionempleadosAux=new ArrayList<EvaluacionEmpleado>();
						evaluacionempleadosAux.addAll(evaluacionempleadoLogic.getEvaluacionEmpleados());
				} else if(Constantes.ISUSAEJBREMOTE || Constantes.ISUSAEJBHOME) {
							evaluacionempleadosAux=new ArrayList<EvaluacionEmpleado>();
							evaluacionempleadosAux.addAll(evaluacionempleados);
				}
				//ARCHITECTURE
								
				
				//ARCHITECTURE
				if(Constantes.ISUSAEJBLOGICLAYER) {
							finalQueryGlobal=Funciones.GetFinalQueryAppendBusqueda(finalQueryGlobal, this.sFinalQueryGeneral,"");
							evaluacionempleadoLogic.getEvaluacionEmpleadosFK_IdTipoEvaluacionEmpleado(finalQueryGlobal,pagination,id_tipo_evaluacion_empleadoFK_IdTipoEvaluacionEmpleado);
				} else if(Constantes.ISUSAEJBREMOTE) {
				this.sDetalleReporte=EvaluacionEmpleadoConstantesFunciones.getDetalleIndiceFK_IdTipoEvaluacionEmpleado(id_tipo_evaluacion_empleadoFK_IdTipoEvaluacionEmpleado);
						
				} else if(Constantes.ISUSAEJBHOME) {
				this.sDetalleReporte=EvaluacionEmpleadoConstantesFunciones.getDetalleIndiceFK_IdTipoEvaluacionEmpleado(id_tipo_evaluacion_empleadoFK_IdTipoEvaluacionEmpleado);
						
				}
				//ARCHITECTURE
					}
				//ARCHITECTURE
				if(Constantes.ISUSAEJBLOGICLAYER) {
					generarReporteEvaluacionEmpleados("FK_IdTipoEvaluacionEmpleado",evaluacionempleadoLogic.getEvaluacionEmpleados());
				} else if(Constantes.ISUSAEJBREMOTE || Constantes.ISUSAEJBHOME) {
					generarReporteEvaluacionEmpleados("FK_IdTipoEvaluacionEmpleado",evaluacionempleados);
				}
				//ARCHITECTURE

					if(false) {//isMostrarTodosResultadosReporte
						this.pagination.setiFirstResult(this.iNumeroPaginacionPagina);
						this.pagination.setiMaxResults(this.iNumeroPaginacion);

						//ARCHITECTURE
						if(Constantes.ISUSAEJBLOGICLAYER) {
						evaluacionempleadoLogic.setEvaluacionEmpleados(new ArrayList<EvaluacionEmpleado>());
						evaluacionempleadoLogic.getEvaluacionEmpleados().addAll(evaluacionempleadosAux);
						} else if(Constantes.ISUSAEJBREMOTE || Constantes.ISUSAEJBHOME) {
							evaluacionempleados=new ArrayList<EvaluacionEmpleado>();
							evaluacionempleados.addAll(evaluacionempleadosAux);
						}
						//ARCHITECTURE
					}
				}

			}
			else if(sAccionBusqueda.equals("FK_IdTrimestre")) {
				this.sDetalleReporte=EvaluacionEmpleadoConstantesFunciones.getDetalleIndiceFK_IdTrimestre(id_trimestreFK_IdTrimestre);

				
				//ARCHITECTURE
				if(Constantes.ISUSAEJBLOGICLAYER) {

					finalQueryGlobal=Funciones.GetFinalQueryAppendBusqueda(finalQueryGlobal, this.sFinalQueryGeneral,finalQueryPaginacion);

					evaluacionempleadoLogic.getEvaluacionEmpleadosFK_IdTrimestre(finalQueryGlobal,pagination,id_trimestreFK_IdTrimestre);
				} else if(Constantes.ISUSAEJBREMOTE) {
				this.sDetalleReporte=EvaluacionEmpleadoConstantesFunciones.getDetalleIndiceFK_IdTrimestre(id_trimestreFK_IdTrimestre);

				
				} else if(Constantes.ISUSAEJBHOME) {
				this.sDetalleReporte=EvaluacionEmpleadoConstantesFunciones.getDetalleIndiceFK_IdTrimestre(id_trimestreFK_IdTrimestre);

				
				}
				//ARCHITECTURE

				Boolean isNoExiste=false;
				//ARCHITECTURE
				if(Constantes.ISUSAEJBLOGICLAYER) {
					isNoExiste=evaluacionempleadoLogic.getEvaluacionEmpleados()==null||evaluacionempleadoLogic.getEvaluacionEmpleados().size()==0;
				} else if(Constantes.ISUSAEJBREMOTE||Constantes.ISUSAEJBHOME) {
					isNoExiste=evaluacionempleados==null|| evaluacionempleados.size()==0;
				}
				//ARCHITECTURE

		if(false && sTipoArchivoReporte!=""&&sTipoArchivoReporte!=null) {//this.isTipoArchivoReporte
			if(false) {//isMostrarTodosResultadosReporte
				this.pagination.setiFirstResult(-1);
				this.pagination.setiMaxResults(-1);

				//ARCHITECTURE
				if(Constantes.ISUSAEJBLOGICLAYER) {
						evaluacionempleadosAux=new ArrayList<EvaluacionEmpleado>();
						evaluacionempleadosAux.addAll(evaluacionempleadoLogic.getEvaluacionEmpleados());
				} else if(Constantes.ISUSAEJBREMOTE || Constantes.ISUSAEJBHOME) {
							evaluacionempleadosAux=new ArrayList<EvaluacionEmpleado>();
							evaluacionempleadosAux.addAll(evaluacionempleados);
				}
				//ARCHITECTURE
								
				
				//ARCHITECTURE
				if(Constantes.ISUSAEJBLOGICLAYER) {
							finalQueryGlobal=Funciones.GetFinalQueryAppendBusqueda(finalQueryGlobal, this.sFinalQueryGeneral,"");
							evaluacionempleadoLogic.getEvaluacionEmpleadosFK_IdTrimestre(finalQueryGlobal,pagination,id_trimestreFK_IdTrimestre);
				} else if(Constantes.ISUSAEJBREMOTE) {
				this.sDetalleReporte=EvaluacionEmpleadoConstantesFunciones.getDetalleIndiceFK_IdTrimestre(id_trimestreFK_IdTrimestre);
						
				} else if(Constantes.ISUSAEJBHOME) {
				this.sDetalleReporte=EvaluacionEmpleadoConstantesFunciones.getDetalleIndiceFK_IdTrimestre(id_trimestreFK_IdTrimestre);
						
				}
				//ARCHITECTURE
					}
				//ARCHITECTURE
				if(Constantes.ISUSAEJBLOGICLAYER) {
					generarReporteEvaluacionEmpleados("FK_IdTrimestre",evaluacionempleadoLogic.getEvaluacionEmpleados());
				} else if(Constantes.ISUSAEJBREMOTE || Constantes.ISUSAEJBHOME) {
					generarReporteEvaluacionEmpleados("FK_IdTrimestre",evaluacionempleados);
				}
				//ARCHITECTURE

					if(false) {//isMostrarTodosResultadosReporte
						this.pagination.setiFirstResult(this.iNumeroPaginacionPagina);
						this.pagination.setiMaxResults(this.iNumeroPaginacion);

						//ARCHITECTURE
						if(Constantes.ISUSAEJBLOGICLAYER) {
						evaluacionempleadoLogic.setEvaluacionEmpleados(new ArrayList<EvaluacionEmpleado>());
						evaluacionempleadoLogic.getEvaluacionEmpleados().addAll(evaluacionempleadosAux);
						} else if(Constantes.ISUSAEJBREMOTE || Constantes.ISUSAEJBHOME) {
							evaluacionempleados=new ArrayList<EvaluacionEmpleado>();
							evaluacionempleados.addAll(evaluacionempleadosAux);
						}
						//ARCHITECTURE
					}
				}

			} 
		
		
		
		this.redimensionarTablaDatos();
		//this.refrescarForeignKeysDescripcionesEvaluacionEmpleado();
		
		
		if(this.conTotales) {
			this.crearFilaTotales();
		}		
		} catch (JRException e) {
			throw e;
		} catch(Exception e) {
			throw e;
      	} finally {
      		//this.finishProcessEvaluacionEmpleado();
      	}
		
	}				
	
	public void redimensionarTablaDatos() throws Exception {
		int iSizeTabla=0;
				
		iSizeTabla=this.getSizeTablaDatos();
		
		//ARCHITECTURE
		/*
		if(Constantes.ISUSAEJBLOGICLAYER) {	
			iSizeTabla=evaluacionempleadoLogic.getEvaluacionEmpleados().size();
		} else if(Constantes.ISUSAEJBREMOTE || Constantes.ISUSAEJBHOME) {
			iSizeTabla=evaluacionempleados.size();
		}
		*/
		//ARCHITECTURE
											
		this.redimensionarTablaDatos(iSizeTabla);		
	}
	
	public Integer getSizeTablaDatos() throws Exception {
		Integer iSizeTabla=0;
				
		//ARCHITECTURE
		if(Constantes.ISUSAEJBLOGICLAYER) {	
			iSizeTabla=evaluacionempleadoLogic.getEvaluacionEmpleados().size();
		} else if(Constantes.ISUSAEJBREMOTE || Constantes.ISUSAEJBHOME) {
			iSizeTabla=evaluacionempleados.size();
		}
		//ARCHITECTURE
											
		return iSizeTabla;		
	}
	
			
	public Boolean permiteMantenimiento(EvaluacionEmpleado evaluacionempleado) {
		Boolean permite=true;
		
		if(this.evaluacionempleado.getsType().equals(Constantes2.S_TOTALES)) {
			permite=false;
		}
		
		return permite;
	}
	
	public void traerValoresTablaTotales() throws Exception {
	}
	
	
	public void traerValoresTablaOrderBy() throws Exception {
		if(Constantes.ISUSAEJBLOGICLAYER) {
			this.arrOrderBy=EvaluacionEmpleadoConstantesFunciones.getOrderByListaEvaluacionEmpleado();							
		} else if(Constantes.ISUSAEJBREMOTE || Constantes.ISUSAEJBHOME) {
			this.arrOrderBy=EvaluacionEmpleadoConstantesFunciones.getOrderByListaEvaluacionEmpleado();
		}		
	}
	
	
	public Boolean existeFilaTotales() throws Exception {
		Boolean existe=false;
		
		if(Constantes.ISUSAEJBLOGICLAYER) {
			for(EvaluacionEmpleado evaluacionempleado:evaluacionempleadoLogic.getEvaluacionEmpleados()) {
				if(evaluacionempleado.getsType().equals(Constantes2.S_TOTALES)) {
					evaluacionempleadoTotales=evaluacionempleado;
					existe=true;
					break;
				}
			}
								
		} else if(Constantes.ISUSAEJBREMOTE || Constantes.ISUSAEJBHOME) {
			for(EvaluacionEmpleado evaluacionempleado:this.evaluacionempleados) {
				if(evaluacionempleado.getsType().equals(Constantes2.S_TOTALES)) {
					evaluacionempleadoTotales=evaluacionempleado;
					existe=true;
					break;
				}
			}
		}
		
		return existe;
	}
	
	public void crearFilaTotales() throws Exception {
		Boolean existe=false;
		
		existe=this.existeFilaTotales();
		
		if(!existe) {
			//SI NO ES UNO A UNO SE CREA FILA TOTALES
			this.evaluacionempleadoAux=new EvaluacionEmpleado();
			this.evaluacionempleadoAux.setsType(Constantes2.S_TOTALES);
			this.evaluacionempleadoAux.setIsNew(false);
			this.evaluacionempleadoAux.setIsChanged(false);
			this.evaluacionempleadoAux.setIsDeleted(false);
				
			if(Constantes.ISUSAEJBLOGICLAYER) {
				EvaluacionEmpleadoConstantesFunciones.TotalizarValoresFilaEvaluacionEmpleado(this.evaluacionempleadoLogic.getEvaluacionEmpleados(),this.evaluacionempleadoAux);
				
				this.evaluacionempleadoLogic.getEvaluacionEmpleados().add(this.evaluacionempleadoAux);
				
			} else if(Constantes.ISUSAEJBREMOTE || Constantes.ISUSAEJBHOME) {
				EvaluacionEmpleadoConstantesFunciones.TotalizarValoresFilaEvaluacionEmpleado(this.evaluacionempleados,this.evaluacionempleadoAux);
				
				this.evaluacionempleados.add(this.evaluacionempleadoAux);
			}
		}
	}
	
	public void quitarFilaTotales() throws Exception {
		evaluacionempleadoTotales=new EvaluacionEmpleado();
		Boolean existe=false;
		
		if(Constantes.ISUSAEJBLOGICLAYER) {
			existe=this.existeFilaTotales();
			
			if(existe) {
				this.evaluacionempleadoLogic.getEvaluacionEmpleados().remove(evaluacionempleadoTotales);
			}			
		} else if(Constantes.ISUSAEJBREMOTE || Constantes.ISUSAEJBHOME) {
			existe=this.existeFilaTotales();
			
			if(existe) {
				this.evaluacionempleados.remove(evaluacionempleadoTotales);
			}
		}
	}
	
	public void actualizarFilaTotales() throws Exception {
		evaluacionempleadoTotales=new EvaluacionEmpleado();
		Boolean existe=false;
		
		if(Constantes.ISUSAEJBLOGICLAYER) {
			for(EvaluacionEmpleado evaluacionempleado:evaluacionempleadoLogic.getEvaluacionEmpleados()) {
				if(evaluacionempleado.getsType().equals(Constantes2.S_TOTALES)) {
					evaluacionempleadoTotales=evaluacionempleado;
					existe=true;
					break;
				}
			}
			
			if(existe) {
				EvaluacionEmpleadoConstantesFunciones.TotalizarValoresFilaEvaluacionEmpleado(this.evaluacionempleadoLogic.getEvaluacionEmpleados(),evaluacionempleadoTotales);
			}			
		} else if(Constantes.ISUSAEJBREMOTE || Constantes.ISUSAEJBHOME) {
			for(EvaluacionEmpleado evaluacionempleado:this.evaluacionempleados) {
				if(evaluacionempleado.getsType().equals(Constantes2.S_TOTALES)) {
					evaluacionempleadoTotales=evaluacionempleado;
					existe=true;
					break;
				}
			}
			
			if(existe) {
				EvaluacionEmpleadoConstantesFunciones.TotalizarValoresFilaEvaluacionEmpleado(this.evaluacionempleados,evaluacionempleadoTotales);
			}
		}
	}		
	
	public void recargarInformacion()throws Exception {
		try {
			sAccionBusqueda="Todos";
			this.iNumeroPaginacionPagina=0;
			
			this.procesarBusqueda(sAccionBusqueda);
			
		} catch(Exception e) {
			FuncionesSwing.manageException(this, e,logger,EvaluacionEmpleadoConstantesFunciones.CLASSNAME);
		}	
	}		
	
	
	public void getEvaluacionEmpleadosFK_IdAnio()throws Exception {
		try {
			sAccionBusqueda="FK_IdAnio";
			this.iNumeroPaginacionPagina=0;
			this.procesarBusqueda(sAccionBusqueda);

		} catch(Exception e) {
			FuncionesSwing.manageException(this, e,logger);
		}
	}

	public void getEvaluacionEmpleadosFK_IdBimestre()throws Exception {
		try {
			sAccionBusqueda="FK_IdBimestre";
			this.iNumeroPaginacionPagina=0;
			this.procesarBusqueda(sAccionBusqueda);

		} catch(Exception e) {
			FuncionesSwing.manageException(this, e,logger);
		}
	}

	public void getEvaluacionEmpleadosFK_IdEjercicio()throws Exception {
		try {
			sAccionBusqueda="FK_IdEjercicio";
			this.iNumeroPaginacionPagina=0;
			this.procesarBusqueda(sAccionBusqueda);

		} catch(Exception e) {
			FuncionesSwing.manageException(this, e,logger);
		}
	}

	public void getEvaluacionEmpleadosFK_IdEmpleado()throws Exception {
		try {
			sAccionBusqueda="FK_IdEmpleado";
			this.iNumeroPaginacionPagina=0;
			this.procesarBusqueda(sAccionBusqueda);

		} catch(Exception e) {
			FuncionesSwing.manageException(this, e,logger);
		}
	}

	public void getEvaluacionEmpleadosFK_IdEmpleadoEvalua()throws Exception {
		try {
			sAccionBusqueda="FK_IdEmpleadoEvalua";
			this.iNumeroPaginacionPagina=0;
			this.procesarBusqueda(sAccionBusqueda);

		} catch(Exception e) {
			FuncionesSwing.manageException(this, e,logger);
		}
	}

	public void getEvaluacionEmpleadosFK_IdEmpresa()throws Exception {
		try {
			sAccionBusqueda="FK_IdEmpresa";
			this.iNumeroPaginacionPagina=0;
			this.procesarBusqueda(sAccionBusqueda);

		} catch(Exception e) {
			FuncionesSwing.manageException(this, e,logger);
		}
	}

	public void getEvaluacionEmpleadosFK_IdEstructura()throws Exception {
		try {
			sAccionBusqueda="FK_IdEstructura";
			this.iNumeroPaginacionPagina=0;
			this.procesarBusqueda(sAccionBusqueda);

		} catch(Exception e) {
			FuncionesSwing.manageException(this, e,logger);
		}
	}

	public void getEvaluacionEmpleadosFK_IdMes()throws Exception {
		try {
			sAccionBusqueda="FK_IdMes";
			this.iNumeroPaginacionPagina=0;
			this.procesarBusqueda(sAccionBusqueda);

		} catch(Exception e) {
			FuncionesSwing.manageException(this, e,logger);
		}
	}

	public void getEvaluacionEmpleadosFK_IdPeriodo()throws Exception {
		try {
			sAccionBusqueda="FK_IdPeriodo";
			this.iNumeroPaginacionPagina=0;
			this.procesarBusqueda(sAccionBusqueda);

		} catch(Exception e) {
			FuncionesSwing.manageException(this, e,logger);
		}
	}

	public void getEvaluacionEmpleadosFK_IdSemestre()throws Exception {
		try {
			sAccionBusqueda="FK_IdSemestre";
			this.iNumeroPaginacionPagina=0;
			this.procesarBusqueda(sAccionBusqueda);

		} catch(Exception e) {
			FuncionesSwing.manageException(this, e,logger);
		}
	}

	public void getEvaluacionEmpleadosFK_IdSucursal()throws Exception {
		try {
			sAccionBusqueda="FK_IdSucursal";
			this.iNumeroPaginacionPagina=0;
			this.procesarBusqueda(sAccionBusqueda);

		} catch(Exception e) {
			FuncionesSwing.manageException(this, e,logger);
		}
	}

	public void getEvaluacionEmpleadosFK_IdTipoEvaluacionEmpleado()throws Exception {
		try {
			sAccionBusqueda="FK_IdTipoEvaluacionEmpleado";
			this.iNumeroPaginacionPagina=0;
			this.procesarBusqueda(sAccionBusqueda);

		} catch(Exception e) {
			FuncionesSwing.manageException(this, e,logger);
		}
	}

	public void getEvaluacionEmpleadosFK_IdTrimestre()throws Exception {
		try {
			sAccionBusqueda="FK_IdTrimestre";
			this.iNumeroPaginacionPagina=0;
			this.procesarBusqueda(sAccionBusqueda);

		} catch(Exception e) {
			FuncionesSwing.manageException(this, e,logger);
		}
	}

	
	
	public void getEvaluacionEmpleadosFK_IdAnio(String sFinalQuery,Long id_anio)throws Exception {
		try {
			
			this.pagination=new Pagination();
			this.pagination.setiFirstResult(this.iNumeroPaginacionPagina);
			this.pagination.setiMaxResults(this.iNumeroPaginacion);

				//ARCHITECTURE
				if(Constantes.ISUSAEJBLOGICLAYER) {
					evaluacionempleadoLogic.getEvaluacionEmpleadosFK_IdAnio(sFinalQuery,this.pagination,id_anio);
				
				} else if(Constantes.ISUSAEJBREMOTE) {
				
				} else if(Constantes.ISUSAEJBHOME) {
				
				}
				//ARCHITECTURE
		} catch(Exception e) {
			throw e;
		}
	}

	public void getEvaluacionEmpleadosFK_IdBimestre(String sFinalQuery,Long id_bimestre)throws Exception {
		try {
			
			this.pagination=new Pagination();
			this.pagination.setiFirstResult(this.iNumeroPaginacionPagina);
			this.pagination.setiMaxResults(this.iNumeroPaginacion);

				//ARCHITECTURE
				if(Constantes.ISUSAEJBLOGICLAYER) {
					evaluacionempleadoLogic.getEvaluacionEmpleadosFK_IdBimestre(sFinalQuery,this.pagination,id_bimestre);
				
				} else if(Constantes.ISUSAEJBREMOTE) {
				
				} else if(Constantes.ISUSAEJBHOME) {
				
				}
				//ARCHITECTURE
		} catch(Exception e) {
			throw e;
		}
	}

	public void getEvaluacionEmpleadosFK_IdEjercicio(String sFinalQuery,Long id_ejercicio)throws Exception {
		try {
			
			this.pagination=new Pagination();
			this.pagination.setiFirstResult(this.iNumeroPaginacionPagina);
			this.pagination.setiMaxResults(this.iNumeroPaginacion);

				//ARCHITECTURE
				if(Constantes.ISUSAEJBLOGICLAYER) {
					evaluacionempleadoLogic.getEvaluacionEmpleadosFK_IdEjercicio(sFinalQuery,this.pagination,id_ejercicio);
				
				} else if(Constantes.ISUSAEJBREMOTE) {
				
				} else if(Constantes.ISUSAEJBHOME) {
				
				}
				//ARCHITECTURE
		} catch(Exception e) {
			throw e;
		}
	}

	public void getEvaluacionEmpleadosFK_IdEmpleado(String sFinalQuery,Long id_empleado)throws Exception {
		try {
			
			this.pagination=new Pagination();
			this.pagination.setiFirstResult(this.iNumeroPaginacionPagina);
			this.pagination.setiMaxResults(this.iNumeroPaginacion);

				//ARCHITECTURE
				if(Constantes.ISUSAEJBLOGICLAYER) {
					evaluacionempleadoLogic.getEvaluacionEmpleadosFK_IdEmpleado(sFinalQuery,this.pagination,id_empleado);
				
				} else if(Constantes.ISUSAEJBREMOTE) {
				
				} else if(Constantes.ISUSAEJBHOME) {
				
				}
				//ARCHITECTURE
		} catch(Exception e) {
			throw e;
		}
	}

	public void getEvaluacionEmpleadosFK_IdEmpleadoEvalua(String sFinalQuery,Long id_empleado_evalua)throws Exception {
		try {
			
			this.pagination=new Pagination();
			this.pagination.setiFirstResult(this.iNumeroPaginacionPagina);
			this.pagination.setiMaxResults(this.iNumeroPaginacion);

				//ARCHITECTURE
				if(Constantes.ISUSAEJBLOGICLAYER) {
					evaluacionempleadoLogic.getEvaluacionEmpleadosFK_IdEmpleadoEvalua(sFinalQuery,this.pagination,id_empleado_evalua);
				
				} else if(Constantes.ISUSAEJBREMOTE) {
				
				} else if(Constantes.ISUSAEJBHOME) {
				
				}
				//ARCHITECTURE
		} catch(Exception e) {
			throw e;
		}
	}

	public void getEvaluacionEmpleadosFK_IdEmpresa(String sFinalQuery,Long id_empresa)throws Exception {
		try {
			
			this.pagination=new Pagination();
			this.pagination.setiFirstResult(this.iNumeroPaginacionPagina);
			this.pagination.setiMaxResults(this.iNumeroPaginacion);

				//ARCHITECTURE
				if(Constantes.ISUSAEJBLOGICLAYER) {
					evaluacionempleadoLogic.getEvaluacionEmpleadosFK_IdEmpresa(sFinalQuery,this.pagination,id_empresa);
				
				} else if(Constantes.ISUSAEJBREMOTE) {
				
				} else if(Constantes.ISUSAEJBHOME) {
				
				}
				//ARCHITECTURE
		} catch(Exception e) {
			throw e;
		}
	}

	public void getEvaluacionEmpleadosFK_IdEstructura(String sFinalQuery,Long id_estructura)throws Exception {
		try {
			
			this.pagination=new Pagination();
			this.pagination.setiFirstResult(this.iNumeroPaginacionPagina);
			this.pagination.setiMaxResults(this.iNumeroPaginacion);

				//ARCHITECTURE
				if(Constantes.ISUSAEJBLOGICLAYER) {
					evaluacionempleadoLogic.getEvaluacionEmpleadosFK_IdEstructura(sFinalQuery,this.pagination,id_estructura);
				
				} else if(Constantes.ISUSAEJBREMOTE) {
				
				} else if(Constantes.ISUSAEJBHOME) {
				
				}
				//ARCHITECTURE
		} catch(Exception e) {
			throw e;
		}
	}

	public void getEvaluacionEmpleadosFK_IdMes(String sFinalQuery,Long id_mes)throws Exception {
		try {
			
			this.pagination=new Pagination();
			this.pagination.setiFirstResult(this.iNumeroPaginacionPagina);
			this.pagination.setiMaxResults(this.iNumeroPaginacion);

				//ARCHITECTURE
				if(Constantes.ISUSAEJBLOGICLAYER) {
					evaluacionempleadoLogic.getEvaluacionEmpleadosFK_IdMes(sFinalQuery,this.pagination,id_mes);
				
				} else if(Constantes.ISUSAEJBREMOTE) {
				
				} else if(Constantes.ISUSAEJBHOME) {
				
				}
				//ARCHITECTURE
		} catch(Exception e) {
			throw e;
		}
	}

	public void getEvaluacionEmpleadosFK_IdPeriodo(String sFinalQuery,Long id_periodo)throws Exception {
		try {
			
			this.pagination=new Pagination();
			this.pagination.setiFirstResult(this.iNumeroPaginacionPagina);
			this.pagination.setiMaxResults(this.iNumeroPaginacion);

				//ARCHITECTURE
				if(Constantes.ISUSAEJBLOGICLAYER) {
					evaluacionempleadoLogic.getEvaluacionEmpleadosFK_IdPeriodo(sFinalQuery,this.pagination,id_periodo);
				
				} else if(Constantes.ISUSAEJBREMOTE) {
				
				} else if(Constantes.ISUSAEJBHOME) {
				
				}
				//ARCHITECTURE
		} catch(Exception e) {
			throw e;
		}
	}

	public void getEvaluacionEmpleadosFK_IdSemestre(String sFinalQuery,Long id_semestre)throws Exception {
		try {
			
			this.pagination=new Pagination();
			this.pagination.setiFirstResult(this.iNumeroPaginacionPagina);
			this.pagination.setiMaxResults(this.iNumeroPaginacion);

				//ARCHITECTURE
				if(Constantes.ISUSAEJBLOGICLAYER) {
					evaluacionempleadoLogic.getEvaluacionEmpleadosFK_IdSemestre(sFinalQuery,this.pagination,id_semestre);
				
				} else if(Constantes.ISUSAEJBREMOTE) {
				
				} else if(Constantes.ISUSAEJBHOME) {
				
				}
				//ARCHITECTURE
		} catch(Exception e) {
			throw e;
		}
	}

	public void getEvaluacionEmpleadosFK_IdSucursal(String sFinalQuery,Long id_sucursal)throws Exception {
		try {
			
			this.pagination=new Pagination();
			this.pagination.setiFirstResult(this.iNumeroPaginacionPagina);
			this.pagination.setiMaxResults(this.iNumeroPaginacion);

				//ARCHITECTURE
				if(Constantes.ISUSAEJBLOGICLAYER) {
					evaluacionempleadoLogic.getEvaluacionEmpleadosFK_IdSucursal(sFinalQuery,this.pagination,id_sucursal);
				
				} else if(Constantes.ISUSAEJBREMOTE) {
				
				} else if(Constantes.ISUSAEJBHOME) {
				
				}
				//ARCHITECTURE
		} catch(Exception e) {
			throw e;
		}
	}

	public void getEvaluacionEmpleadosFK_IdTipoEvaluacionEmpleado(String sFinalQuery,Long id_tipo_evaluacion_empleado)throws Exception {
		try {
			
			this.pagination=new Pagination();
			this.pagination.setiFirstResult(this.iNumeroPaginacionPagina);
			this.pagination.setiMaxResults(this.iNumeroPaginacion);

				//ARCHITECTURE
				if(Constantes.ISUSAEJBLOGICLAYER) {
					evaluacionempleadoLogic.getEvaluacionEmpleadosFK_IdTipoEvaluacionEmpleado(sFinalQuery,this.pagination,id_tipo_evaluacion_empleado);
				
				} else if(Constantes.ISUSAEJBREMOTE) {
				
				} else if(Constantes.ISUSAEJBHOME) {
				
				}
				//ARCHITECTURE
		} catch(Exception e) {
			throw e;
		}
	}

	public void getEvaluacionEmpleadosFK_IdTrimestre(String sFinalQuery,Long id_trimestre)throws Exception {
		try {
			
			this.pagination=new Pagination();
			this.pagination.setiFirstResult(this.iNumeroPaginacionPagina);
			this.pagination.setiMaxResults(this.iNumeroPaginacion);

				//ARCHITECTURE
				if(Constantes.ISUSAEJBLOGICLAYER) {
					evaluacionempleadoLogic.getEvaluacionEmpleadosFK_IdTrimestre(sFinalQuery,this.pagination,id_trimestre);
				
				} else if(Constantes.ISUSAEJBREMOTE) {
				
				} else if(Constantes.ISUSAEJBHOME) {
				
				}
				//ARCHITECTURE
		} catch(Exception e) {
			throw e;
		}
	}

	
	public void onLoad()throws Exception {		
		try {		
			isEntroOnLoad=true;
			//INTENTA TRAER DATOS DE BUSQUEDA ANTERIOR
			this.traerDatosBusquedaDesdeSession();
					
			//SINO SE CUMPLE VIENE DE PADRE FOREIGN O BUSQUEDA ANTIGUA
			if(this.sAccionBusqueda.equals("")) {
				this.sAccionBusqueda="Todos";
			}
								
			this.procesarBusqueda(sAccionBusqueda);
			
		} catch (Exception e) {
			throw e;
		}
	}		
	
	public void inicializarPermisosEvaluacionEmpleado() {
		this.isPermisoTodoEvaluacionEmpleado=false;
		this.isPermisoNuevoEvaluacionEmpleado=false;
		this.isPermisoActualizarEvaluacionEmpleado=false;
		this.isPermisoActualizarOriginalEvaluacionEmpleado=false;
		this.isPermisoEliminarEvaluacionEmpleado=false;
		this.isPermisoGuardarCambiosEvaluacionEmpleado=false;
		this.isPermisoConsultaEvaluacionEmpleado=false;
		this.isPermisoBusquedaEvaluacionEmpleado=false;
		this.isPermisoReporteEvaluacionEmpleado=false;		
		this.isPermisoOrdenEvaluacionEmpleado=false;		
		this.isPermisoPaginacionMedioEvaluacionEmpleado=false;		
		this.isPermisoPaginacionAltoEvaluacionEmpleado=false;
		this.isPermisoPaginacionTodoEvaluacionEmpleado=false;
		this.isPermisoCopiarEvaluacionEmpleado=false;		
		this.isPermisoVerFormEvaluacionEmpleado=false;		
		this.isPermisoDuplicarEvaluacionEmpleado=false;		
		this.isPermisoOrdenEvaluacionEmpleado=false;		
	}
	
	public void setPermisosUsuarioEvaluacionEmpleado(Boolean isPermiso) {
		this.isPermisoTodoEvaluacionEmpleado=isPermiso;
		this.isPermisoNuevoEvaluacionEmpleado=isPermiso;
		this.isPermisoActualizarEvaluacionEmpleado=isPermiso;
		this.isPermisoActualizarOriginalEvaluacionEmpleado=isPermiso;
		this.isPermisoEliminarEvaluacionEmpleado=isPermiso;
		this.isPermisoGuardarCambiosEvaluacionEmpleado=isPermiso;
		this.isPermisoConsultaEvaluacionEmpleado=isPermiso;
		this.isPermisoBusquedaEvaluacionEmpleado=isPermiso;
		this.isPermisoReporteEvaluacionEmpleado=isPermiso;
		this.isPermisoOrdenEvaluacionEmpleado=isPermiso;		
		this.isPermisoPaginacionMedioEvaluacionEmpleado=isPermiso;		
		this.isPermisoPaginacionAltoEvaluacionEmpleado=isPermiso;		
		this.isPermisoPaginacionTodoEvaluacionEmpleado=isPermiso;		
		this.isPermisoCopiarEvaluacionEmpleado=isPermiso;		
		this.isPermisoVerFormEvaluacionEmpleado=isPermiso;		
		this.isPermisoDuplicarEvaluacionEmpleado=isPermiso;
		this.isPermisoOrdenEvaluacionEmpleado=isPermiso;
	}
	
	public void setPermisosMantenimientoUsuarioEvaluacionEmpleado(Boolean isPermiso) {
		//this.isPermisoTodoEvaluacionEmpleado=isPermiso;
		this.isPermisoNuevoEvaluacionEmpleado=isPermiso;
		this.isPermisoActualizarEvaluacionEmpleado=isPermiso;
		this.isPermisoActualizarOriginalEvaluacionEmpleado=isPermiso;
		this.isPermisoEliminarEvaluacionEmpleado=isPermiso;
		this.isPermisoGuardarCambiosEvaluacionEmpleado=isPermiso;
		//this.isPermisoConsultaEvaluacionEmpleado=isPermiso;
		//this.isPermisoBusquedaEvaluacionEmpleado=isPermiso;
		//this.isPermisoReporteEvaluacionEmpleado=isPermiso;
		//this.isPermisoOrdenEvaluacionEmpleado=isPermiso;		
		//this.isPermisoPaginacionMedioEvaluacionEmpleado=isPermiso;		
		//this.isPermisoPaginacionAltoEvaluacionEmpleado=isPermiso;		
		//this.isPermisoPaginacionTodoEvaluacionEmpleado=isPermiso;		
		//this.isPermisoCopiarEvaluacionEmpleado=isPermiso;		
		//this.isPermisoDuplicarEvaluacionEmpleado=isPermiso;
		//this.isPermisoOrdenEvaluacionEmpleado=isPermiso;
	}
	
	public void inicializarSetPermisosUsuarioEvaluacionEmpleadoClasesRelacionadas() throws Exception {
		ArrayList<String> arrPaginas=new ArrayList<String>();		
		ArrayList<Opcion> opcionsFinal=new ArrayList<Opcion>();	
		
		arrPaginas.add(CalificacionEmpleadoConstantesFunciones.SNOMBREOPCION);
		
		if(EvaluacionEmpleadoJInternalFrame.CON_LLAMADA_SIMPLE) {
			this.opcionsRelacionadas.addAll(this.sistemaReturnGeneral.getOpcionsRelacionadas());
			
		} else {
			if(Constantes.ISUSAEJBLOGICLAYER) {
				opcionsFinal=sistemaLogicAdditional.tienePermisosOpcionesEnPaginaWeb(this.usuarioActual, Constantes.LIDSISTEMAACTUAL, arrPaginas);
			} else if(Constantes.ISUSAEJBREMOTE) {
			} else if(Constantes.ISUSAEJBHOME) {
			}
			
			this.opcionsRelacionadas.addAll(opcionsFinal);
		}
		
		

		this.isTienePermisosCalificacionEmpleado=false;
		this.isTienePermisosCalificacionEmpleado=this.verificarGetPermisosUsuarioOpcionEvaluacionEmpleadoClaseRelacionada(this.opcionsRelacionadas,CalificacionEmpleadoConstantesFunciones.SNOMBREOPCION);
		
	}
	
	public Boolean tienePermisosUsuarioEnPaginaWebEvaluacionEmpleado(String sPagina) throws Exception {
		Boolean tienePermisos=false;
		
		if(Constantes.ISUSAEJBLOGICLAYER) {
			tienePermisos=sistemaLogicAdditional.tienePermisosEnPaginaWeb(this.usuarioActual, Constantes.LIDSISTEMAACTUAL, sPagina);
		} else if(Constantes.ISUSAEJBREMOTE) {
		} else if(Constantes.ISUSAEJBHOME) {
		}
		
		return tienePermisos;
	}
	
	public void inicializarSetPermisosUsuarioEvaluacionEmpleadoClasesRelacionadas(Boolean conPermiso) throws Exception {
		
		this.isTienePermisosCalificacionEmpleado=conPermiso;
	}
	
	public Boolean verificarGetPermisosUsuarioEvaluacionEmpleadoClaseRelacionada(ArrayList<String> arrPaginasFinal,String sPaginaActual) throws Exception {
		Boolean verificado=false;
		
		verificado=Funciones2.verificarGetPermisosUsuarioClaseRelacionada(arrPaginasFinal,sPaginaActual);				
		
		return verificado;
	}
	
	public Boolean verificarGetPermisosUsuarioOpcionEvaluacionEmpleadoClaseRelacionada(List<Opcion> opcionsFinal,String sPaginaActual) throws Exception {
		Boolean verificado=false;
		
		verificado=Funciones2.verificarGetPermisosUsuarioOpcionClaseRelacionada(opcionsFinal,sPaginaActual);				
		
		return verificado;
	}
	
	public void actualizarTabsSetPermisosUsuarioEvaluacionEmpleadoClasesRelacionadas() throws Exception {
		

		if(!this.isTienePermisosCalificacionEmpleado && this.jInternalFrameDetalleFormEvaluacionEmpleado!=null && this.jInternalFrameDetalleFormEvaluacionEmpleado.calificacionempleadoBeanSwingJInternalFrame!=null) {
			this.jInternalFrameDetalleFormEvaluacionEmpleado.jTabbedPaneRelacionesEvaluacionEmpleado.remove(this.jInternalFrameDetalleFormEvaluacionEmpleado.calificacionempleadoBeanSwingJInternalFrame.getContentPane());
		}
	}
	
	public void setPermisosUsuarioEvaluacionEmpleado() throws Exception {
		
		PerfilOpcion perfilOpcionUsuario=new PerfilOpcion();		
		Long idOpcion=this.opcionActual.getId();
		
		if(EvaluacionEmpleadoJInternalFrame.CON_LLAMADA_SIMPLE) {
			perfilOpcionUsuario=this.sistemaReturnGeneral.getPerfilOpcion();
			
		} else {
			if(this.evaluacionempleadoSessionBean.getEsGuardarRelacionado()) {
				idOpcion=0L;
			}
			
			if(Constantes.ISUSAEJBLOGICLAYER) {	
				perfilOpcionUsuario=sistemaLogicAdditional.traerPermisosPaginaWebPerfilOpcion(this.usuarioActual, Constantes.LIDSISTEMAACTUAL, EvaluacionEmpleadoConstantesFunciones.SNOMBREOPCION,idOpcion);				
			} else if(Constantes.ISUSAEJBREMOTE) {
			} else if(Constantes.ISUSAEJBHOME) {
			}
		}
		
		if(perfilOpcionUsuario!=null && perfilOpcionUsuario.getId()>0) {
			this.isPermisoNuevoEvaluacionEmpleado=perfilOpcionUsuario.getingreso()||perfilOpcionUsuario.gettodo();
			this.isPermisoActualizarEvaluacionEmpleado=perfilOpcionUsuario.getmodificacion()||perfilOpcionUsuario.gettodo();
			this.isPermisoActualizarOriginalEvaluacionEmpleado=this.isPermisoActualizarEvaluacionEmpleado;
			this.isPermisoEliminarEvaluacionEmpleado=perfilOpcionUsuario.geteliminacion()||perfilOpcionUsuario.gettodo();
			this.isPermisoGuardarCambiosEvaluacionEmpleado=perfilOpcionUsuario.getguardar_cambios()||perfilOpcionUsuario.gettodo();
			this.isPermisoConsultaEvaluacionEmpleado=perfilOpcionUsuario.getconsulta()||perfilOpcionUsuario.gettodo();
			this.isPermisoBusquedaEvaluacionEmpleado=perfilOpcionUsuario.getbusqueda()||perfilOpcionUsuario.gettodo();
			this.isPermisoTodoEvaluacionEmpleado=perfilOpcionUsuario.gettodo()||perfilOpcionUsuario.gettodo();
			this.isPermisoReporteEvaluacionEmpleado=perfilOpcionUsuario.getreporte()||perfilOpcionUsuario.gettodo();
			this.isPermisoOrdenEvaluacionEmpleado=perfilOpcionUsuario.getorden()||perfilOpcionUsuario.gettodo();
			this.isPermisoPaginacionMedioEvaluacionEmpleado=perfilOpcionUsuario.getpaginacion_medio()||perfilOpcionUsuario.gettodo();
			this.isPermisoPaginacionAltoEvaluacionEmpleado=perfilOpcionUsuario.getpaginacion_alto()||perfilOpcionUsuario.gettodo();
			this.isPermisoPaginacionTodoEvaluacionEmpleado=perfilOpcionUsuario.getpaginacion_todo()||perfilOpcionUsuario.gettodo();
			this.isPermisoCopiarEvaluacionEmpleado=perfilOpcionUsuario.getcopiar()||perfilOpcionUsuario.gettodo();
			this.isPermisoVerFormEvaluacionEmpleado=true;//perfilOpcionUsuario.getver_form()||perfilOpcionUsuario.gettodo();
			this.isPermisoDuplicarEvaluacionEmpleado=perfilOpcionUsuario.getduplicar()||perfilOpcionUsuario.gettodo();
			this.isPermisoOrdenEvaluacionEmpleado=perfilOpcionUsuario.getorden()||perfilOpcionUsuario.gettodo();
			
			if(this.evaluacionempleadoSessionBean.getEsGuardarRelacionado()) {
				this.opcionActual.setId(perfilOpcionUsuario.getid_opcion());
				
				this.jTableDatosEvaluacionEmpleado.setToolTipText(this.jTableDatosEvaluacionEmpleado.getToolTipText()+"_"+perfilOpcionUsuario.getid_opcion());		
			}
		} else {
			this.setPermisosUsuarioEvaluacionEmpleado(false);
		}
		
		//SI SE NECESITA PONER TODOS LOS PERMISOS POR DEFECTO
		//
		
	}
	
	public void setAccionesUsuarioEvaluacionEmpleado(Boolean esParaAccionesFormulario) throws Exception {		
		Reporte reporte=null;
		
		if(!esParaAccionesFormulario) {
			this.accions=new ArrayList<Accion>();
			
			if(EvaluacionEmpleadoJInternalFrame.CON_LLAMADA_SIMPLE) {
				this.accions=this.sistemaReturnGeneral.getAccions();
				
				
			} else {
				if(Constantes.ISUSAEJBLOGICLAYER) {	
					this.accions=sistemaLogicAdditional.getAccionesUsuario(this.usuarioActual,this.opcionActual,false);				
				} else if(Constantes.ISUSAEJBREMOTE) {
				} else if(Constantes.ISUSAEJBHOME) {
				}
			}
			
			if(this.accions.size()>0) {			
				for(Accion accion:this.accions) {
					reporte=new Reporte();
					reporte.setsCodigo(accion.getcodigo());
					reporte.setsDescripcion(accion.getnombre());
		
		
					this.tiposAcciones.add(reporte);
				}
			}	
			
			

			reporte=new Reporte();
			reporte.setsCodigo("");
			reporte.setsDescripcion("");

			this.tiposAcciones.add(reporte);
			
		} else {
			//ACCIONES FORMULARIO
			this.accionsFormulario=new ArrayList<Accion>();
			
			if(EvaluacionEmpleadoJInternalFrame.CON_LLAMADA_SIMPLE) {
				this.accionsFormulario=this.sistemaReturnGeneral.getAccionsFormulario();
			
			} else {
				if(Constantes.ISUSAEJBLOGICLAYER) {	
					this.accionsFormulario=sistemaLogicAdditional.getAccionesUsuario(this.usuarioActual,this.opcionActual,true);				
				} else if(Constantes.ISUSAEJBREMOTE) {
				} else if(Constantes.ISUSAEJBHOME) {
				}
			}
			
			if(this.accionsFormulario.size()>0) {			
				for(Accion accion:this.accionsFormulario) {
					reporte=new Reporte();
					reporte.setsCodigo(accion.getcodigo());
					reporte.setsDescripcion(accion.getnombre());
					
					this.tiposAccionesFormulario.add(reporte);
				}
			}	
			
			

			reporte=new Reporte();
			reporte.setsCodigo("");
			reporte.setsDescripcion("");

			this.tiposAccionesFormulario.add(reporte);
		}				
	}	 	
	
	public void setRelacionesUsuarioEvaluacionEmpleado() throws Exception {
		Reporte reporte=null;
		
		

		if(this.isTienePermisosCalificacionEmpleado && this.evaluacionempleadoConstantesFunciones.mostrarCalificacionEmpleadoEvaluacionEmpleado && !EvaluacionEmpleadoConstantesFunciones.ISGUARDARREL) {

			reporte=new Reporte();
			reporte.setsCodigo("Calificacion Empleado");
			reporte.setsDescripcion("Calificacion Empleado");
			this.tiposRelaciones.add(reporte);
		}
		
		
		//ORDENAR ALFABETICAMENTE
		Collections.sort(this.tiposRelaciones, new ReporteComparator());
		/*
		reporte=new Reporte();
		reporte.setsCodigo(accion.getcodigo());
		reporte.setsDescripcion(accion.getnombre());
			
		this.tiposRelaciones.add(reporte);
		*/
	}	
	
		
	@SuppressWarnings({ "unchecked", "rawtypes" } )
	public void inicializarCombosForeignKeyEvaluacionEmpleadoListas()throws Exception {
		try	{						
			
				this.empresasForeignKey=new ArrayList();
				this.sucursalsForeignKey=new ArrayList();
				this.ejerciciosForeignKey=new ArrayList();
				this.periodosForeignKey=new ArrayList();
				this.estructurasForeignKey=new ArrayList();
				this.empleadosForeignKey=new ArrayList();
				this.empleadoevaluasForeignKey=new ArrayList();
				this.tipoevaluacionempleadosForeignKey=new ArrayList();
				this.aniosForeignKey=new ArrayList();
				this.semestresForeignKey=new ArrayList();
				this.trimestresForeignKey=new ArrayList();
				this.bimestresForeignKey=new ArrayList();
				this.messForeignKey=new ArrayList();
		} catch(Exception e) {
			throw e;
		}		
	}
	
	public void cargarCombosTodosForeignKeyEvaluacionEmpleadoListas(Boolean cargarCombosDependencia)throws Exception {
		try	{
			
			ArrayList<String> arrColumnasGlobales=new ArrayList<String>();
			String  finalQueryGlobal="";
			String sFinalQueryCombo="";
			
			Modulo  moduloActualAux=new Modulo();
			
			if(EvaluacionEmpleadoJInternalFrame.ISLOAD_FKLOTE) {
				this.cargarCombosLoteForeignKeyEvaluacionEmpleadoListas(false);
			} else {
			
				this.cargarCombosForeignKeyEmpresaListas(cargarCombosDependencia,sFinalQueryCombo);
				this.cargarCombosForeignKeySucursalListas(cargarCombosDependencia,sFinalQueryCombo);
				this.cargarCombosForeignKeyEjercicioListas(cargarCombosDependencia,sFinalQueryCombo);
				this.cargarCombosForeignKeyPeriodoListas(cargarCombosDependencia,sFinalQueryCombo);
				this.cargarCombosForeignKeyEstructuraListas(cargarCombosDependencia,sFinalQueryCombo);
				this.cargarCombosForeignKeyEmpleadoListas(cargarCombosDependencia,sFinalQueryCombo);
				this.cargarCombosForeignKeyEmpleadoEvaluaListas(cargarCombosDependencia,sFinalQueryCombo);
				this.cargarCombosForeignKeyTipoEvaluacionEmpleadoListas(cargarCombosDependencia,sFinalQueryCombo);
				this.cargarCombosForeignKeyAnioListas(cargarCombosDependencia,sFinalQueryCombo);
				this.cargarCombosForeignKeySemestreListas(cargarCombosDependencia,sFinalQueryCombo);
				this.cargarCombosForeignKeyTrimestreListas(cargarCombosDependencia,sFinalQueryCombo);
				this.cargarCombosForeignKeyBimestreListas(cargarCombosDependencia,sFinalQueryCombo);
				this.cargarCombosForeignKeyMesListas(cargarCombosDependencia,sFinalQueryCombo);
			}
		} catch(Exception e) {
			throw e;
		}		
	}		
	
	

	public void cargarCombosForeignKeyEmpresaListas(Boolean cargarCombosDependencia,String sFinalQuery)throws Exception {
		try	{
			ArrayList<String> arrColumnasGlobales=new ArrayList<String>();

			String  finalQueryGlobal="";

			Modulo  moduloActualAux=new Modulo();

			if((this.empresasForeignKey==null||this.empresasForeignKey.size()<=0)) {
				this.arrDatoGeneral= new  ArrayList<DatoGeneral>();
				this.arrDatoGeneralNo= new  ArrayList<String>();

				arrColumnasGlobales=EmpresaConstantesFunciones.getArrayColumnasGlobalesEmpresa(this.arrDatoGeneral,this.arrDatoGeneralNo);
				finalQueryGlobal=Funciones.GetWhereGlobalConstants(this.parametroGeneralUsuario,this.moduloActual,true,false,arrColumnasGlobales,EmpresaConstantesFunciones.TABLENAME);

				finalQueryGlobal=Funciones.GetFinalQueryAppend(finalQueryGlobal, sFinalQuery);
				finalQueryGlobal=Funciones.GetFinalQueryAppend(finalQueryGlobal, "");

				finalQueryGlobal+=EmpresaConstantesFunciones.SFINALQUERY;

				this.cargarCombosEmpresasForeignKeyLista(finalQueryGlobal);
			}

		} catch(Exception e) {
			throw e;
		}
	}

	public void cargarCombosForeignKeySucursalListas(Boolean cargarCombosDependencia,String sFinalQuery)throws Exception {
		try	{
			ArrayList<String> arrColumnasGlobales=new ArrayList<String>();

			String  finalQueryGlobal="";

			Modulo  moduloActualAux=new Modulo();

			if((this.sucursalsForeignKey==null||this.sucursalsForeignKey.size()<=0)) {
				this.arrDatoGeneral= new  ArrayList<DatoGeneral>();
				this.arrDatoGeneralNo= new  ArrayList<String>();

				arrColumnasGlobales=SucursalConstantesFunciones.getArrayColumnasGlobalesSucursal(this.arrDatoGeneral,this.arrDatoGeneralNo);
				finalQueryGlobal=Funciones.GetWhereGlobalConstants(this.parametroGeneralUsuario,this.moduloActual,true,false,arrColumnasGlobales,SucursalConstantesFunciones.TABLENAME);

				finalQueryGlobal=Funciones.GetFinalQueryAppend(finalQueryGlobal, sFinalQuery);
				finalQueryGlobal=Funciones.GetFinalQueryAppend(finalQueryGlobal, "");

				finalQueryGlobal+=SucursalConstantesFunciones.SFINALQUERY;

				this.cargarCombosSucursalsForeignKeyLista(finalQueryGlobal);
			}

		} catch(Exception e) {
			throw e;
		}
	}

	public void cargarCombosForeignKeyEjercicioListas(Boolean cargarCombosDependencia,String sFinalQuery)throws Exception {
		try	{
			ArrayList<String> arrColumnasGlobales=new ArrayList<String>();

			String  finalQueryGlobal="";

			Modulo  moduloActualAux=new Modulo();

			if((this.ejerciciosForeignKey==null||this.ejerciciosForeignKey.size()<=0)) {
				this.arrDatoGeneral= new  ArrayList<DatoGeneral>();
				this.arrDatoGeneralNo= new  ArrayList<String>();

				arrColumnasGlobales=EjercicioConstantesFunciones.getArrayColumnasGlobalesEjercicio(this.arrDatoGeneral,this.arrDatoGeneralNo);
				finalQueryGlobal=Funciones.GetWhereGlobalConstants(this.parametroGeneralUsuario,this.moduloActual,true,false,arrColumnasGlobales,EjercicioConstantesFunciones.TABLENAME);

				finalQueryGlobal=Funciones.GetFinalQueryAppend(finalQueryGlobal, sFinalQuery);
				finalQueryGlobal=Funciones.GetFinalQueryAppend(finalQueryGlobal, "");

				finalQueryGlobal+=EjercicioConstantesFunciones.SFINALQUERY;

				this.cargarCombosEjerciciosForeignKeyLista(finalQueryGlobal);
			}

		} catch(Exception e) {
			throw e;
		}
	}

	public void cargarCombosForeignKeyPeriodoListas(Boolean cargarCombosDependencia,String sFinalQuery)throws Exception {
		try	{
			ArrayList<String> arrColumnasGlobales=new ArrayList<String>();

			String  finalQueryGlobal="";

			Modulo  moduloActualAux=new Modulo();

			if((this.periodosForeignKey==null||this.periodosForeignKey.size()<=0)) {
				this.arrDatoGeneral= new  ArrayList<DatoGeneral>();
				this.arrDatoGeneralNo= new  ArrayList<String>();

				arrColumnasGlobales=PeriodoConstantesFunciones.getArrayColumnasGlobalesPeriodo(this.arrDatoGeneral,this.arrDatoGeneralNo);
				finalQueryGlobal=Funciones.GetWhereGlobalConstants(this.parametroGeneralUsuario,this.moduloActual,true,false,arrColumnasGlobales,PeriodoConstantesFunciones.TABLENAME);

				finalQueryGlobal=Funciones.GetFinalQueryAppend(finalQueryGlobal, sFinalQuery);
				finalQueryGlobal=Funciones.GetFinalQueryAppend(finalQueryGlobal, "");

				finalQueryGlobal+=PeriodoConstantesFunciones.SFINALQUERY;

				this.cargarCombosPeriodosForeignKeyLista(finalQueryGlobal);
			}

		} catch(Exception e) {
			throw e;
		}
	}

	public void cargarCombosForeignKeyEstructuraListas(Boolean cargarCombosDependencia,String sFinalQuery)throws Exception {
		try	{
			ArrayList<String> arrColumnasGlobales=new ArrayList<String>();

			String  finalQueryGlobal="";

			Modulo  moduloActualAux=new Modulo();

			if((this.estructurasForeignKey==null||this.estructurasForeignKey.size()<=0)) {
				this.arrDatoGeneral= new  ArrayList<DatoGeneral>();
				this.arrDatoGeneralNo= new  ArrayList<String>();

				arrColumnasGlobales=EstructuraConstantesFunciones.getArrayColumnasGlobalesEstructura(this.arrDatoGeneral,this.arrDatoGeneralNo);
				finalQueryGlobal=Funciones.GetWhereGlobalConstants(this.parametroGeneralUsuario,this.moduloActual,true,false,arrColumnasGlobales,EstructuraConstantesFunciones.TABLENAME);

				finalQueryGlobal=Funciones.GetFinalQueryAppend(finalQueryGlobal, sFinalQuery);
				finalQueryGlobal=Funciones.GetFinalQueryAppend(finalQueryGlobal, "");

				finalQueryGlobal+=EstructuraConstantesFunciones.SFINALQUERY;

				this.cargarCombosEstructurasForeignKeyLista(finalQueryGlobal);
			}

		} catch(Exception e) {
			throw e;
		}
	}

	public void cargarCombosForeignKeyEmpleadoListas(Boolean cargarCombosDependencia,String sFinalQuery)throws Exception {
		try	{
			ArrayList<String> arrColumnasGlobales=new ArrayList<String>();

			String  finalQueryGlobal="";

			Modulo  moduloActualAux=new Modulo();

			if((this.empleadosForeignKey==null||this.empleadosForeignKey.size()<=0)) {
				this.arrDatoGeneral= new  ArrayList<DatoGeneral>();
				this.arrDatoGeneralNo= new  ArrayList<String>();

				arrColumnasGlobales=EmpleadoConstantesFunciones.getArrayColumnasGlobalesEmpleado(this.arrDatoGeneral,this.arrDatoGeneralNo);
				finalQueryGlobal=Funciones.GetWhereGlobalConstants(this.parametroGeneralUsuario,this.moduloActual,true,false,arrColumnasGlobales,EmpleadoConstantesFunciones.TABLENAME);

				finalQueryGlobal=Funciones.GetFinalQueryAppend(finalQueryGlobal, sFinalQuery);
				finalQueryGlobal=Funciones.GetFinalQueryAppend(finalQueryGlobal, "");

				finalQueryGlobal+=EmpleadoConstantesFunciones.SFINALQUERY;

				this.cargarCombosEmpleadosForeignKeyLista(finalQueryGlobal);
			}

		} catch(Exception e) {
			throw e;
		}
	}

	public void cargarCombosForeignKeyEmpleadoEvaluaListas(Boolean cargarCombosDependencia,String sFinalQuery)throws Exception {
		try	{
			ArrayList<String> arrColumnasGlobales=new ArrayList<String>();

			String  finalQueryGlobal="";

			Modulo  moduloActualAux=new Modulo();

			if((this.empleadoevaluasForeignKey==null||this.empleadoevaluasForeignKey.size()<=0)) {
				this.arrDatoGeneral= new  ArrayList<DatoGeneral>();
				this.arrDatoGeneralNo= new  ArrayList<String>();

				arrColumnasGlobales=EmpleadoConstantesFunciones.getArrayColumnasGlobalesEmpleado(this.arrDatoGeneral,this.arrDatoGeneralNo);
				finalQueryGlobal=Funciones.GetWhereGlobalConstants(this.parametroGeneralUsuario,this.moduloActual,true,false,arrColumnasGlobales,EmpleadoConstantesFunciones.TABLENAME);

				finalQueryGlobal=Funciones.GetFinalQueryAppend(finalQueryGlobal, sFinalQuery);
				finalQueryGlobal=Funciones.GetFinalQueryAppend(finalQueryGlobal, "");

				finalQueryGlobal+=EmpleadoConstantesFunciones.SFINALQUERY;

				this.cargarCombosEmpleadoEvaluasForeignKeyLista(finalQueryGlobal);
			}

		} catch(Exception e) {
			throw e;
		}
	}

	public void cargarCombosForeignKeyTipoEvaluacionEmpleadoListas(Boolean cargarCombosDependencia,String sFinalQuery)throws Exception {
		try	{
			ArrayList<String> arrColumnasGlobales=new ArrayList<String>();

			String  finalQueryGlobal="";

			Modulo  moduloActualAux=new Modulo();

			if((this.tipoevaluacionempleadosForeignKey==null||this.tipoevaluacionempleadosForeignKey.size()<=0)) {
				this.arrDatoGeneral= new  ArrayList<DatoGeneral>();
				this.arrDatoGeneralNo= new  ArrayList<String>();

				arrColumnasGlobales=TipoEvaluacionEmpleadoConstantesFunciones.getArrayColumnasGlobalesTipoEvaluacionEmpleado(this.arrDatoGeneral,this.arrDatoGeneralNo);
				finalQueryGlobal=Funciones.GetWhereGlobalConstants(this.parametroGeneralUsuario,this.moduloActual,true,false,arrColumnasGlobales,TipoEvaluacionEmpleadoConstantesFunciones.TABLENAME);

				finalQueryGlobal=Funciones.GetFinalQueryAppend(finalQueryGlobal, sFinalQuery);
				finalQueryGlobal=Funciones.GetFinalQueryAppend(finalQueryGlobal, "");

				finalQueryGlobal+=TipoEvaluacionEmpleadoConstantesFunciones.SFINALQUERY;

				this.cargarCombosTipoEvaluacionEmpleadosForeignKeyLista(finalQueryGlobal);
			}

		} catch(Exception e) {
			throw e;
		}
	}

	public void cargarCombosForeignKeyAnioListas(Boolean cargarCombosDependencia,String sFinalQuery)throws Exception {
		try	{
			ArrayList<String> arrColumnasGlobales=new ArrayList<String>();

			String  finalQueryGlobal="";

			Modulo  moduloActualAux=new Modulo();

			if((this.aniosForeignKey==null||this.aniosForeignKey.size()<=0)) {
				this.arrDatoGeneral= new  ArrayList<DatoGeneral>();
				this.arrDatoGeneralNo= new  ArrayList<String>();

				arrColumnasGlobales=AnioConstantesFunciones.getArrayColumnasGlobalesAnio(this.arrDatoGeneral,this.arrDatoGeneralNo);
				finalQueryGlobal=Funciones.GetWhereGlobalConstants(this.parametroGeneralUsuario,this.moduloActual,true,false,arrColumnasGlobales,AnioConstantesFunciones.TABLENAME);

				finalQueryGlobal=Funciones.GetFinalQueryAppend(finalQueryGlobal, sFinalQuery);
				finalQueryGlobal=Funciones.GetFinalQueryAppend(finalQueryGlobal, "");

				finalQueryGlobal+=AnioConstantesFunciones.SFINALQUERY;

				this.cargarCombosAniosForeignKeyLista(finalQueryGlobal);
			}

		} catch(Exception e) {
			throw e;
		}
	}

	public void cargarCombosForeignKeySemestreListas(Boolean cargarCombosDependencia,String sFinalQuery)throws Exception {
		try	{
			ArrayList<String> arrColumnasGlobales=new ArrayList<String>();

			String  finalQueryGlobal="";

			Modulo  moduloActualAux=new Modulo();

			if((this.semestresForeignKey==null||this.semestresForeignKey.size()<=0)) {
				this.arrDatoGeneral= new  ArrayList<DatoGeneral>();
				this.arrDatoGeneralNo= new  ArrayList<String>();

				arrColumnasGlobales=SemestreConstantesFunciones.getArrayColumnasGlobalesSemestre(this.arrDatoGeneral,this.arrDatoGeneralNo);
				finalQueryGlobal=Funciones.GetWhereGlobalConstants(this.parametroGeneralUsuario,this.moduloActual,true,false,arrColumnasGlobales,SemestreConstantesFunciones.TABLENAME);

				finalQueryGlobal=Funciones.GetFinalQueryAppend(finalQueryGlobal, sFinalQuery);
				finalQueryGlobal=Funciones.GetFinalQueryAppend(finalQueryGlobal, "");

				finalQueryGlobal+=SemestreConstantesFunciones.SFINALQUERY;

				this.cargarCombosSemestresForeignKeyLista(finalQueryGlobal);
			}

		} catch(Exception e) {
			throw e;
		}
	}

	public void cargarCombosForeignKeyTrimestreListas(Boolean cargarCombosDependencia,String sFinalQuery)throws Exception {
		try	{
			ArrayList<String> arrColumnasGlobales=new ArrayList<String>();

			String  finalQueryGlobal="";

			Modulo  moduloActualAux=new Modulo();

			if((this.trimestresForeignKey==null||this.trimestresForeignKey.size()<=0)) {
				this.arrDatoGeneral= new  ArrayList<DatoGeneral>();
				this.arrDatoGeneralNo= new  ArrayList<String>();

				arrColumnasGlobales=TrimestreConstantesFunciones.getArrayColumnasGlobalesTrimestre(this.arrDatoGeneral,this.arrDatoGeneralNo);
				finalQueryGlobal=Funciones.GetWhereGlobalConstants(this.parametroGeneralUsuario,this.moduloActual,true,false,arrColumnasGlobales,TrimestreConstantesFunciones.TABLENAME);

				finalQueryGlobal=Funciones.GetFinalQueryAppend(finalQueryGlobal, sFinalQuery);
				finalQueryGlobal=Funciones.GetFinalQueryAppend(finalQueryGlobal, "");

				finalQueryGlobal+=TrimestreConstantesFunciones.SFINALQUERY;

				this.cargarCombosTrimestresForeignKeyLista(finalQueryGlobal);
			}

		} catch(Exception e) {
			throw e;
		}
	}

	public void cargarCombosForeignKeyBimestreListas(Boolean cargarCombosDependencia,String sFinalQuery)throws Exception {
		try	{
			ArrayList<String> arrColumnasGlobales=new ArrayList<String>();

			String  finalQueryGlobal="";

			Modulo  moduloActualAux=new Modulo();

			if((this.bimestresForeignKey==null||this.bimestresForeignKey.size()<=0)) {
				this.arrDatoGeneral= new  ArrayList<DatoGeneral>();
				this.arrDatoGeneralNo= new  ArrayList<String>();

				arrColumnasGlobales=BimestreConstantesFunciones.getArrayColumnasGlobalesBimestre(this.arrDatoGeneral,this.arrDatoGeneralNo);
				finalQueryGlobal=Funciones.GetWhereGlobalConstants(this.parametroGeneralUsuario,this.moduloActual,true,false,arrColumnasGlobales,BimestreConstantesFunciones.TABLENAME);

				finalQueryGlobal=Funciones.GetFinalQueryAppend(finalQueryGlobal, sFinalQuery);
				finalQueryGlobal=Funciones.GetFinalQueryAppend(finalQueryGlobal, "");

				finalQueryGlobal+=BimestreConstantesFunciones.SFINALQUERY;

				this.cargarCombosBimestresForeignKeyLista(finalQueryGlobal);
			}

		} catch(Exception e) {
			throw e;
		}
	}

	public void cargarCombosForeignKeyMesListas(Boolean cargarCombosDependencia,String sFinalQuery)throws Exception {
		try	{
			ArrayList<String> arrColumnasGlobales=new ArrayList<String>();

			String  finalQueryGlobal="";

			Modulo  moduloActualAux=new Modulo();

			if((this.messForeignKey==null||this.messForeignKey.size()<=0)) {
				this.arrDatoGeneral= new  ArrayList<DatoGeneral>();
				this.arrDatoGeneralNo= new  ArrayList<String>();

				arrColumnasGlobales=MesConstantesFunciones.getArrayColumnasGlobalesMes(this.arrDatoGeneral,this.arrDatoGeneralNo);
				finalQueryGlobal=Funciones.GetWhereGlobalConstants(this.parametroGeneralUsuario,this.moduloActual,true,false,arrColumnasGlobales,MesConstantesFunciones.TABLENAME);

				finalQueryGlobal=Funciones.GetFinalQueryAppend(finalQueryGlobal, sFinalQuery);
				finalQueryGlobal=Funciones.GetFinalQueryAppend(finalQueryGlobal, "");

				finalQueryGlobal+=MesConstantesFunciones.SFINALQUERY;

				this.cargarCombosMessForeignKeyLista(finalQueryGlobal);
			}

		} catch(Exception e) {
			throw e;
		}
	}
	
	public void cargarCombosLoteForeignKeyEvaluacionEmpleadoListas(Boolean cargarCombosDependencia)throws Exception {
		try	{
			
			ArrayList<String> arrColumnasGlobales=new ArrayList<String>();
			String  finalQueryGlobal="";
			
			Modulo  moduloActualAux=new Modulo();
			
			
			EvaluacionEmpleadoParameterReturnGeneral evaluacionempleadoReturnGeneral=new EvaluacionEmpleadoParameterReturnGeneral();
						
			


				String finalQueryGlobalEmpresa="";

				if(((this.empresasForeignKey==null||this.empresasForeignKey.size()<=0) && this.evaluacionempleadoConstantesFunciones.cargarid_empresaEvaluacionEmpleado)
					 || (this.esRecargarFks && this.evaluacionempleadoConstantesFunciones.cargarid_empresaEvaluacionEmpleado)) {

					if(!this.evaluacionempleadoSessionBean.getisBusquedaDesdeForeignKeySesionEmpresa()) {

						this.arrDatoGeneral= new  ArrayList<DatoGeneral>();
						this.arrDatoGeneralNo= new  ArrayList<String>();


						arrColumnasGlobales=EmpresaConstantesFunciones.getArrayColumnasGlobalesEmpresa(this.arrDatoGeneral,this.arrDatoGeneralNo);
						finalQueryGlobalEmpresa=Funciones.GetWhereGlobalConstants(this.parametroGeneralUsuario,this.moduloActual,true,false,arrColumnasGlobales,EmpresaConstantesFunciones.TABLENAME);

						finalQueryGlobalEmpresa=Funciones.GetFinalQueryAppend(finalQueryGlobalEmpresa, "");
						finalQueryGlobalEmpresa+=EmpresaConstantesFunciones.SFINALQUERY;

						//this.cargarCombosEmpresasForeignKeyLista(finalQueryGlobal);
					} else {
						finalQueryGlobalEmpresa=" WHERE " + ConstantesSql.ID + "="+evaluacionempleadoSessionBean.getlidEmpresaActual();
					}
				} else {
					finalQueryGlobalEmpresa="NONE";
				}


				String finalQueryGlobalSucursal="";

				if(((this.sucursalsForeignKey==null||this.sucursalsForeignKey.size()<=0) && this.evaluacionempleadoConstantesFunciones.cargarid_sucursalEvaluacionEmpleado)
					 || (this.esRecargarFks && this.evaluacionempleadoConstantesFunciones.cargarid_sucursalEvaluacionEmpleado)) {

					if(!this.evaluacionempleadoSessionBean.getisBusquedaDesdeForeignKeySesionSucursal()) {

						this.arrDatoGeneral= new  ArrayList<DatoGeneral>();
						this.arrDatoGeneralNo= new  ArrayList<String>();


						arrColumnasGlobales=SucursalConstantesFunciones.getArrayColumnasGlobalesSucursal(this.arrDatoGeneral,this.arrDatoGeneralNo);
						finalQueryGlobalSucursal=Funciones.GetWhereGlobalConstants(this.parametroGeneralUsuario,this.moduloActual,true,false,arrColumnasGlobales,SucursalConstantesFunciones.TABLENAME);

						finalQueryGlobalSucursal=Funciones.GetFinalQueryAppend(finalQueryGlobalSucursal, "");
						finalQueryGlobalSucursal+=SucursalConstantesFunciones.SFINALQUERY;

						//this.cargarCombosSucursalsForeignKeyLista(finalQueryGlobal);
					} else {
						finalQueryGlobalSucursal=" WHERE " + ConstantesSql.ID + "="+evaluacionempleadoSessionBean.getlidSucursalActual();
					}
				} else {
					finalQueryGlobalSucursal="NONE";
				}


				String finalQueryGlobalEjercicio="";

				if(((this.ejerciciosForeignKey==null||this.ejerciciosForeignKey.size()<=0) && this.evaluacionempleadoConstantesFunciones.cargarid_ejercicioEvaluacionEmpleado)
					 || (this.esRecargarFks && this.evaluacionempleadoConstantesFunciones.cargarid_ejercicioEvaluacionEmpleado)) {

					if(!this.evaluacionempleadoSessionBean.getisBusquedaDesdeForeignKeySesionEjercicio()) {

						this.arrDatoGeneral= new  ArrayList<DatoGeneral>();
						this.arrDatoGeneralNo= new  ArrayList<String>();


						arrColumnasGlobales=EjercicioConstantesFunciones.getArrayColumnasGlobalesEjercicio(this.arrDatoGeneral,this.arrDatoGeneralNo);
						finalQueryGlobalEjercicio=Funciones.GetWhereGlobalConstants(this.parametroGeneralUsuario,this.moduloActual,true,false,arrColumnasGlobales,EjercicioConstantesFunciones.TABLENAME);

						finalQueryGlobalEjercicio=Funciones.GetFinalQueryAppend(finalQueryGlobalEjercicio, "");
						finalQueryGlobalEjercicio+=EjercicioConstantesFunciones.SFINALQUERY;

						//this.cargarCombosEjerciciosForeignKeyLista(finalQueryGlobal);
					} else {
						finalQueryGlobalEjercicio=" WHERE " + ConstantesSql.ID + "="+evaluacionempleadoSessionBean.getlidEjercicioActual();
					}
				} else {
					finalQueryGlobalEjercicio="NONE";
				}


				String finalQueryGlobalPeriodo="";

				if(((this.periodosForeignKey==null||this.periodosForeignKey.size()<=0) && this.evaluacionempleadoConstantesFunciones.cargarid_periodoEvaluacionEmpleado)
					 || (this.esRecargarFks && this.evaluacionempleadoConstantesFunciones.cargarid_periodoEvaluacionEmpleado)) {

					if(!this.evaluacionempleadoSessionBean.getisBusquedaDesdeForeignKeySesionPeriodo()) {

						this.arrDatoGeneral= new  ArrayList<DatoGeneral>();
						this.arrDatoGeneralNo= new  ArrayList<String>();


						arrColumnasGlobales=PeriodoConstantesFunciones.getArrayColumnasGlobalesPeriodo(this.arrDatoGeneral,this.arrDatoGeneralNo);
						finalQueryGlobalPeriodo=Funciones.GetWhereGlobalConstants(this.parametroGeneralUsuario,this.moduloActual,true,false,arrColumnasGlobales,PeriodoConstantesFunciones.TABLENAME);

						finalQueryGlobalPeriodo=Funciones.GetFinalQueryAppend(finalQueryGlobalPeriodo, "");
						finalQueryGlobalPeriodo+=PeriodoConstantesFunciones.SFINALQUERY;

						//this.cargarCombosPeriodosForeignKeyLista(finalQueryGlobal);
					} else {
						finalQueryGlobalPeriodo=" WHERE " + ConstantesSql.ID + "="+evaluacionempleadoSessionBean.getlidPeriodoActual();
					}
				} else {
					finalQueryGlobalPeriodo="NONE";
				}


				String finalQueryGlobalEstructura="";

				if(((this.estructurasForeignKey==null||this.estructurasForeignKey.size()<=0) && this.evaluacionempleadoConstantesFunciones.cargarid_estructuraEvaluacionEmpleado)
					 || (this.esRecargarFks && this.evaluacionempleadoConstantesFunciones.cargarid_estructuraEvaluacionEmpleado)) {

					if(!this.evaluacionempleadoSessionBean.getisBusquedaDesdeForeignKeySesionEstructura()) {

						this.arrDatoGeneral= new  ArrayList<DatoGeneral>();
						this.arrDatoGeneralNo= new  ArrayList<String>();


						arrColumnasGlobales=EstructuraConstantesFunciones.getArrayColumnasGlobalesEstructura(this.arrDatoGeneral,this.arrDatoGeneralNo);
						finalQueryGlobalEstructura=Funciones.GetWhereGlobalConstants(this.parametroGeneralUsuario,this.moduloActual,true,false,arrColumnasGlobales,EstructuraConstantesFunciones.TABLENAME);

						finalQueryGlobalEstructura=Funciones.GetFinalQueryAppend(finalQueryGlobalEstructura, "");
						finalQueryGlobalEstructura+=EstructuraConstantesFunciones.SFINALQUERY;

						//this.cargarCombosEstructurasForeignKeyLista(finalQueryGlobal);
					} else {
						finalQueryGlobalEstructura=" WHERE " + ConstantesSql.ID + "="+evaluacionempleadoSessionBean.getlidEstructuraActual();
					}
				} else {
					finalQueryGlobalEstructura="NONE";
				}


				String finalQueryGlobalEmpleado="";

				if(((this.empleadosForeignKey==null||this.empleadosForeignKey.size()<=0) && this.evaluacionempleadoConstantesFunciones.cargarid_empleadoEvaluacionEmpleado)
					 || (this.esRecargarFks && this.evaluacionempleadoConstantesFunciones.cargarid_empleadoEvaluacionEmpleado)) {

					if(!this.evaluacionempleadoSessionBean.getisBusquedaDesdeForeignKeySesionEmpleado()) {

						this.arrDatoGeneral= new  ArrayList<DatoGeneral>();
						this.arrDatoGeneralNo= new  ArrayList<String>();


						arrColumnasGlobales=EmpleadoConstantesFunciones.getArrayColumnasGlobalesEmpleado(this.arrDatoGeneral,this.arrDatoGeneralNo);
						finalQueryGlobalEmpleado=Funciones.GetWhereGlobalConstants(this.parametroGeneralUsuario,this.moduloActual,true,false,arrColumnasGlobales,EmpleadoConstantesFunciones.TABLENAME);

						finalQueryGlobalEmpleado=Funciones.GetFinalQueryAppend(finalQueryGlobalEmpleado, "");
						finalQueryGlobalEmpleado+=EmpleadoConstantesFunciones.SFINALQUERY;

						//this.cargarCombosEmpleadosForeignKeyLista(finalQueryGlobal);
					} else {
						finalQueryGlobalEmpleado=" WHERE " + ConstantesSql.ID + "="+evaluacionempleadoSessionBean.getlidEmpleadoActual();
					}
				} else {
					finalQueryGlobalEmpleado="NONE";
				}


				String finalQueryGlobalEmpleadoEvalua="";

				if(((this.empleadoevaluasForeignKey==null||this.empleadoevaluasForeignKey.size()<=0) && this.evaluacionempleadoConstantesFunciones.cargarid_empleado_evaluaEvaluacionEmpleado)
					 || (this.esRecargarFks && this.evaluacionempleadoConstantesFunciones.cargarid_empleado_evaluaEvaluacionEmpleado)) {

					if(!this.evaluacionempleadoSessionBean.getisBusquedaDesdeForeignKeySesionEmpleadoEvalua()) {

						this.arrDatoGeneral= new  ArrayList<DatoGeneral>();
						this.arrDatoGeneralNo= new  ArrayList<String>();


						arrColumnasGlobales=EmpleadoConstantesFunciones.getArrayColumnasGlobalesEmpleado(this.arrDatoGeneral,this.arrDatoGeneralNo);
						finalQueryGlobalEmpleadoEvalua=Funciones.GetWhereGlobalConstants(this.parametroGeneralUsuario,this.moduloActual,true,false,arrColumnasGlobales,EmpleadoConstantesFunciones.TABLENAME);

						finalQueryGlobalEmpleadoEvalua=Funciones.GetFinalQueryAppend(finalQueryGlobalEmpleadoEvalua, "");
						finalQueryGlobalEmpleadoEvalua+=EmpleadoConstantesFunciones.SFINALQUERY;

						//this.cargarCombosEmpleadoEvaluasForeignKeyLista(finalQueryGlobal);
					} else {
						finalQueryGlobalEmpleadoEvalua=" WHERE " + ConstantesSql.ID + "="+evaluacionempleadoSessionBean.getlidEmpleadoEvaluaActual();
					}
				} else {
					finalQueryGlobalEmpleadoEvalua="NONE";
				}


				String finalQueryGlobalTipoEvaluacionEmpleado="";

				if(((this.tipoevaluacionempleadosForeignKey==null||this.tipoevaluacionempleadosForeignKey.size()<=0) && this.evaluacionempleadoConstantesFunciones.cargarid_tipo_evaluacion_empleadoEvaluacionEmpleado)
					 || (this.esRecargarFks && this.evaluacionempleadoConstantesFunciones.cargarid_tipo_evaluacion_empleadoEvaluacionEmpleado)) {

					if(!this.evaluacionempleadoSessionBean.getisBusquedaDesdeForeignKeySesionTipoEvaluacionEmpleado()) {

						this.arrDatoGeneral= new  ArrayList<DatoGeneral>();
						this.arrDatoGeneralNo= new  ArrayList<String>();


						arrColumnasGlobales=TipoEvaluacionEmpleadoConstantesFunciones.getArrayColumnasGlobalesTipoEvaluacionEmpleado(this.arrDatoGeneral,this.arrDatoGeneralNo);
						finalQueryGlobalTipoEvaluacionEmpleado=Funciones.GetWhereGlobalConstants(this.parametroGeneralUsuario,this.moduloActual,true,false,arrColumnasGlobales,TipoEvaluacionEmpleadoConstantesFunciones.TABLENAME);

						finalQueryGlobalTipoEvaluacionEmpleado=Funciones.GetFinalQueryAppend(finalQueryGlobalTipoEvaluacionEmpleado, "");
						finalQueryGlobalTipoEvaluacionEmpleado+=TipoEvaluacionEmpleadoConstantesFunciones.SFINALQUERY;

						//this.cargarCombosTipoEvaluacionEmpleadosForeignKeyLista(finalQueryGlobal);
					} else {
						finalQueryGlobalTipoEvaluacionEmpleado=" WHERE " + ConstantesSql.ID + "="+evaluacionempleadoSessionBean.getlidTipoEvaluacionEmpleadoActual();
					}
				} else {
					finalQueryGlobalTipoEvaluacionEmpleado="NONE";
				}


				String finalQueryGlobalAnio="";

				if(((this.aniosForeignKey==null||this.aniosForeignKey.size()<=0) && this.evaluacionempleadoConstantesFunciones.cargarid_anioEvaluacionEmpleado)
					 || (this.esRecargarFks && this.evaluacionempleadoConstantesFunciones.cargarid_anioEvaluacionEmpleado)) {

					if(!this.evaluacionempleadoSessionBean.getisBusquedaDesdeForeignKeySesionAnio()) {

						this.arrDatoGeneral= new  ArrayList<DatoGeneral>();
						this.arrDatoGeneralNo= new  ArrayList<String>();


						arrColumnasGlobales=AnioConstantesFunciones.getArrayColumnasGlobalesAnio(this.arrDatoGeneral,this.arrDatoGeneralNo);
						finalQueryGlobalAnio=Funciones.GetWhereGlobalConstants(this.parametroGeneralUsuario,this.moduloActual,true,false,arrColumnasGlobales,AnioConstantesFunciones.TABLENAME);

						finalQueryGlobalAnio=Funciones.GetFinalQueryAppend(finalQueryGlobalAnio, "");
						finalQueryGlobalAnio+=AnioConstantesFunciones.SFINALQUERY;

						//this.cargarCombosAniosForeignKeyLista(finalQueryGlobal);
					} else {
						finalQueryGlobalAnio=" WHERE " + ConstantesSql.ID + "="+evaluacionempleadoSessionBean.getlidAnioActual();
					}
				} else {
					finalQueryGlobalAnio="NONE";
				}


				String finalQueryGlobalSemestre="";

				if(((this.semestresForeignKey==null||this.semestresForeignKey.size()<=0) && this.evaluacionempleadoConstantesFunciones.cargarid_semestreEvaluacionEmpleado)
					 || (this.esRecargarFks && this.evaluacionempleadoConstantesFunciones.cargarid_semestreEvaluacionEmpleado)) {

					if(!this.evaluacionempleadoSessionBean.getisBusquedaDesdeForeignKeySesionSemestre()) {

						this.arrDatoGeneral= new  ArrayList<DatoGeneral>();
						this.arrDatoGeneralNo= new  ArrayList<String>();


						arrColumnasGlobales=SemestreConstantesFunciones.getArrayColumnasGlobalesSemestre(this.arrDatoGeneral,this.arrDatoGeneralNo);
						finalQueryGlobalSemestre=Funciones.GetWhereGlobalConstants(this.parametroGeneralUsuario,this.moduloActual,true,false,arrColumnasGlobales,SemestreConstantesFunciones.TABLENAME);

						finalQueryGlobalSemestre=Funciones.GetFinalQueryAppend(finalQueryGlobalSemestre, "");
						finalQueryGlobalSemestre+=SemestreConstantesFunciones.SFINALQUERY;

						//this.cargarCombosSemestresForeignKeyLista(finalQueryGlobal);
					} else {
						finalQueryGlobalSemestre=" WHERE " + ConstantesSql.ID + "="+evaluacionempleadoSessionBean.getlidSemestreActual();
					}
				} else {
					finalQueryGlobalSemestre="NONE";
				}


				String finalQueryGlobalTrimestre="";

				if(((this.trimestresForeignKey==null||this.trimestresForeignKey.size()<=0) && this.evaluacionempleadoConstantesFunciones.cargarid_trimestreEvaluacionEmpleado)
					 || (this.esRecargarFks && this.evaluacionempleadoConstantesFunciones.cargarid_trimestreEvaluacionEmpleado)) {

					if(!this.evaluacionempleadoSessionBean.getisBusquedaDesdeForeignKeySesionTrimestre()) {

						this.arrDatoGeneral= new  ArrayList<DatoGeneral>();
						this.arrDatoGeneralNo= new  ArrayList<String>();


						arrColumnasGlobales=TrimestreConstantesFunciones.getArrayColumnasGlobalesTrimestre(this.arrDatoGeneral,this.arrDatoGeneralNo);
						finalQueryGlobalTrimestre=Funciones.GetWhereGlobalConstants(this.parametroGeneralUsuario,this.moduloActual,true,false,arrColumnasGlobales,TrimestreConstantesFunciones.TABLENAME);

						finalQueryGlobalTrimestre=Funciones.GetFinalQueryAppend(finalQueryGlobalTrimestre, "");
						finalQueryGlobalTrimestre+=TrimestreConstantesFunciones.SFINALQUERY;

						//this.cargarCombosTrimestresForeignKeyLista(finalQueryGlobal);
					} else {
						finalQueryGlobalTrimestre=" WHERE " + ConstantesSql.ID + "="+evaluacionempleadoSessionBean.getlidTrimestreActual();
					}
				} else {
					finalQueryGlobalTrimestre="NONE";
				}


				String finalQueryGlobalBimestre="";

				if(((this.bimestresForeignKey==null||this.bimestresForeignKey.size()<=0) && this.evaluacionempleadoConstantesFunciones.cargarid_bimestreEvaluacionEmpleado)
					 || (this.esRecargarFks && this.evaluacionempleadoConstantesFunciones.cargarid_bimestreEvaluacionEmpleado)) {

					if(!this.evaluacionempleadoSessionBean.getisBusquedaDesdeForeignKeySesionBimestre()) {

						this.arrDatoGeneral= new  ArrayList<DatoGeneral>();
						this.arrDatoGeneralNo= new  ArrayList<String>();


						arrColumnasGlobales=BimestreConstantesFunciones.getArrayColumnasGlobalesBimestre(this.arrDatoGeneral,this.arrDatoGeneralNo);
						finalQueryGlobalBimestre=Funciones.GetWhereGlobalConstants(this.parametroGeneralUsuario,this.moduloActual,true,false,arrColumnasGlobales,BimestreConstantesFunciones.TABLENAME);

						finalQueryGlobalBimestre=Funciones.GetFinalQueryAppend(finalQueryGlobalBimestre, "");
						finalQueryGlobalBimestre+=BimestreConstantesFunciones.SFINALQUERY;

						//this.cargarCombosBimestresForeignKeyLista(finalQueryGlobal);
					} else {
						finalQueryGlobalBimestre=" WHERE " + ConstantesSql.ID + "="+evaluacionempleadoSessionBean.getlidBimestreActual();
					}
				} else {
					finalQueryGlobalBimestre="NONE";
				}


				String finalQueryGlobalMes="";

				if(((this.messForeignKey==null||this.messForeignKey.size()<=0) && this.evaluacionempleadoConstantesFunciones.cargarid_mesEvaluacionEmpleado)
					 || (this.esRecargarFks && this.evaluacionempleadoConstantesFunciones.cargarid_mesEvaluacionEmpleado)) {

					if(!this.evaluacionempleadoSessionBean.getisBusquedaDesdeForeignKeySesionMes()) {

						this.arrDatoGeneral= new  ArrayList<DatoGeneral>();
						this.arrDatoGeneralNo= new  ArrayList<String>();


						arrColumnasGlobales=MesConstantesFunciones.getArrayColumnasGlobalesMes(this.arrDatoGeneral,this.arrDatoGeneralNo);
						finalQueryGlobalMes=Funciones.GetWhereGlobalConstants(this.parametroGeneralUsuario,this.moduloActual,true,false,arrColumnasGlobales,MesConstantesFunciones.TABLENAME);

						finalQueryGlobalMes=Funciones.GetFinalQueryAppend(finalQueryGlobalMes, "");
						finalQueryGlobalMes+=MesConstantesFunciones.SFINALQUERY;

						//this.cargarCombosMessForeignKeyLista(finalQueryGlobal);
					} else {
						finalQueryGlobalMes=" WHERE " + ConstantesSql.ID + "="+evaluacionempleadoSessionBean.getlidMesActual();
					}
				} else {
					finalQueryGlobalMes="NONE";
				}
			
			//ARCHITECTURE			
			if(Constantes.ISUSAEJBLOGICLAYER) {	
				evaluacionempleadoReturnGeneral=evaluacionempleadoLogic.cargarCombosLoteForeignKeyEvaluacionEmpleado(finalQueryGlobalEmpresa,finalQueryGlobalSucursal,finalQueryGlobalEjercicio,finalQueryGlobalPeriodo,finalQueryGlobalEstructura,finalQueryGlobalEmpleado,finalQueryGlobalEmpleadoEvalua,finalQueryGlobalTipoEvaluacionEmpleado,finalQueryGlobalAnio,finalQueryGlobalSemestre,finalQueryGlobalTrimestre,finalQueryGlobalBimestre,finalQueryGlobalMes);//WithConnection
			} else if(Constantes.ISUSAEJBREMOTE) {
			} else if(Constantes.ISUSAEJBHOME) {
			}			
			//ARCHITECTURE
			
			

			if(!finalQueryGlobalEmpresa.equals("NONE")) {
				this.empresasForeignKey=evaluacionempleadoReturnGeneral.getempresasForeignKey();
			}

			if(!finalQueryGlobalSucursal.equals("NONE")) {
				this.sucursalsForeignKey=evaluacionempleadoReturnGeneral.getsucursalsForeignKey();
			}

			if(!finalQueryGlobalEjercicio.equals("NONE")) {
				this.ejerciciosForeignKey=evaluacionempleadoReturnGeneral.getejerciciosForeignKey();
			}

			if(!finalQueryGlobalPeriodo.equals("NONE")) {
				this.periodosForeignKey=evaluacionempleadoReturnGeneral.getperiodosForeignKey();
			}

			if(!finalQueryGlobalEstructura.equals("NONE")) {
				this.estructurasForeignKey=evaluacionempleadoReturnGeneral.getestructurasForeignKey();
			}

			if(!finalQueryGlobalEmpleado.equals("NONE")) {
				this.empleadosForeignKey=evaluacionempleadoReturnGeneral.getempleadosForeignKey();
			}

			if(!finalQueryGlobalEmpleadoEvalua.equals("NONE")) {
				this.empleadoevaluasForeignKey=evaluacionempleadoReturnGeneral.getempleadoevaluasForeignKey();
			}

			if(!finalQueryGlobalTipoEvaluacionEmpleado.equals("NONE")) {
				this.tipoevaluacionempleadosForeignKey=evaluacionempleadoReturnGeneral.gettipoevaluacionempleadosForeignKey();
			}

			if(!finalQueryGlobalAnio.equals("NONE")) {
				this.aniosForeignKey=evaluacionempleadoReturnGeneral.getaniosForeignKey();
			}

			if(!finalQueryGlobalSemestre.equals("NONE")) {
				this.semestresForeignKey=evaluacionempleadoReturnGeneral.getsemestresForeignKey();
			}

			if(!finalQueryGlobalTrimestre.equals("NONE")) {
				this.trimestresForeignKey=evaluacionempleadoReturnGeneral.gettrimestresForeignKey();
			}

			if(!finalQueryGlobalBimestre.equals("NONE")) {
				this.bimestresForeignKey=evaluacionempleadoReturnGeneral.getbimestresForeignKey();
			}

			if(!finalQueryGlobalMes.equals("NONE")) {
				this.messForeignKey=evaluacionempleadoReturnGeneral.getmessForeignKey();
			}
			
			
		} catch(Exception e) {
			throw e;
		}		
	}
	
	public void addItemDefectoCombosTodosForeignKeyEvaluacionEmpleado()throws Exception {
		try {
			
			this.addItemDefectoCombosForeignKeyEmpresa();
			this.addItemDefectoCombosForeignKeySucursal();
			this.addItemDefectoCombosForeignKeyEjercicio();
			this.addItemDefectoCombosForeignKeyPeriodo();
			this.addItemDefectoCombosForeignKeyEstructura();
			this.addItemDefectoCombosForeignKeyEmpleado();
			this.addItemDefectoCombosForeignKeyEmpleadoEvalua();
			this.addItemDefectoCombosForeignKeyTipoEvaluacionEmpleado();
			this.addItemDefectoCombosForeignKeyAnio();
			this.addItemDefectoCombosForeignKeySemestre();
			this.addItemDefectoCombosForeignKeyTrimestre();
			this.addItemDefectoCombosForeignKeyBimestre();
			this.addItemDefectoCombosForeignKeyMes();
		} catch(Exception e) {
			throw e;
		}		
	}
	
	



	public void addItemDefectoCombosForeignKeyEmpresa()throws Exception {
		try {
			if(this.evaluacionempleadoSessionBean==null) {
				this.evaluacionempleadoSessionBean=new EvaluacionEmpleadoSessionBean();
			}

			if(!this.evaluacionempleadoSessionBean.getisBusquedaDesdeForeignKeySesionEmpresa()) {
				Empresa empresa=new Empresa();
				EmpresaConstantesFunciones.setEmpresaDescripcion(empresa,Constantes.SMENSAJE_ESCOJA_OPCION);
				empresa.setId(null);

				if(!EmpresaConstantesFunciones.ExisteEnLista(this.empresasForeignKey,empresa,true)) {

					this.empresasForeignKey.add(0,empresa);
				}
			}
		} catch(Exception e) {
			throw e;
		}
	}

	public void addItemDefectoCombosForeignKeySucursal()throws Exception {
		try {

			if(!this.evaluacionempleadoSessionBean.getisBusquedaDesdeForeignKeySesionSucursal()) {
				Sucursal sucursal=new Sucursal();
				SucursalConstantesFunciones.setSucursalDescripcion(sucursal,Constantes.SMENSAJE_ESCOJA_OPCION);
				sucursal.setId(null);

				if(!SucursalConstantesFunciones.ExisteEnLista(this.sucursalsForeignKey,sucursal,true)) {

					this.sucursalsForeignKey.add(0,sucursal);
				}
			}
		} catch(Exception e) {
			throw e;
		}
	}

	public void addItemDefectoCombosForeignKeyEjercicio()throws Exception {
		try {

			if(!this.evaluacionempleadoSessionBean.getisBusquedaDesdeForeignKeySesionEjercicio()) {
				Ejercicio ejercicio=new Ejercicio();
				EjercicioConstantesFunciones.setEjercicioDescripcion(ejercicio,Constantes.SMENSAJE_ESCOJA_OPCION);
				ejercicio.setId(null);

				if(!EjercicioConstantesFunciones.ExisteEnLista(this.ejerciciosForeignKey,ejercicio,true)) {

					this.ejerciciosForeignKey.add(0,ejercicio);
				}
			}
		} catch(Exception e) {
			throw e;
		}
	}

	public void addItemDefectoCombosForeignKeyPeriodo()throws Exception {
		try {

			if(!this.evaluacionempleadoSessionBean.getisBusquedaDesdeForeignKeySesionPeriodo()) {
				Periodo periodo=new Periodo();
				PeriodoConstantesFunciones.setPeriodoDescripcion(periodo,Constantes.SMENSAJE_ESCOJA_OPCION);
				periodo.setId(null);

				if(!PeriodoConstantesFunciones.ExisteEnLista(this.periodosForeignKey,periodo,true)) {

					this.periodosForeignKey.add(0,periodo);
				}
			}
		} catch(Exception e) {
			throw e;
		}
	}

	public void addItemDefectoCombosForeignKeyEstructura()throws Exception {
		try {

			if(!this.evaluacionempleadoSessionBean.getisBusquedaDesdeForeignKeySesionEstructura()) {
				Estructura estructura=new Estructura();
				EstructuraConstantesFunciones.setEstructuraDescripcion(estructura,Constantes.SMENSAJE_ESCOJA_OPCION);
				estructura.setId(null);

				if(!EstructuraConstantesFunciones.ExisteEnLista(this.estructurasForeignKey,estructura,true)) {

					this.estructurasForeignKey.add(0,estructura);
				}
			}
		} catch(Exception e) {
			throw e;
		}
	}

	public void addItemDefectoCombosForeignKeyEmpleado()throws Exception {
		try {

			if(!this.evaluacionempleadoSessionBean.getisBusquedaDesdeForeignKeySesionEmpleado()) {
				Empleado empleado=new Empleado();
				EmpleadoConstantesFunciones.setEmpleadoDescripcion(empleado,Constantes.SMENSAJE_ESCOJA_OPCION);
				empleado.setId(null);

				if(!EmpleadoConstantesFunciones.ExisteEnLista(this.empleadosForeignKey,empleado,true)) {

					this.empleadosForeignKey.add(0,empleado);
				}
			}
		} catch(Exception e) {
			throw e;
		}
	}

	public void addItemDefectoCombosForeignKeyEmpleadoEvalua()throws Exception {
		try {

			if(!this.evaluacionempleadoSessionBean.getisBusquedaDesdeForeignKeySesionEmpleadoEvalua()) {
				Empleado empleadoevalua=new Empleado();
				EmpleadoConstantesFunciones.setEmpleadoDescripcion(empleadoevalua,Constantes.SMENSAJE_ESCOJA_OPCION);
				empleadoevalua.setId(null);

				if(!EmpleadoConstantesFunciones.ExisteEnLista(this.empleadoevaluasForeignKey,empleadoevalua,true)) {

					this.empleadoevaluasForeignKey.add(0,empleadoevalua);
				}
			}
		} catch(Exception e) {
			throw e;
		}
	}

	public void addItemDefectoCombosForeignKeyTipoEvaluacionEmpleado()throws Exception {
		try {

			if(!this.evaluacionempleadoSessionBean.getisBusquedaDesdeForeignKeySesionTipoEvaluacionEmpleado()) {
				TipoEvaluacionEmpleado tipoevaluacionempleado=new TipoEvaluacionEmpleado();
				TipoEvaluacionEmpleadoConstantesFunciones.setTipoEvaluacionEmpleadoDescripcion(tipoevaluacionempleado,Constantes.SMENSAJE_ESCOJA_OPCION);
				tipoevaluacionempleado.setId(null);

				if(!TipoEvaluacionEmpleadoConstantesFunciones.ExisteEnLista(this.tipoevaluacionempleadosForeignKey,tipoevaluacionempleado,true)) {

					this.tipoevaluacionempleadosForeignKey.add(0,tipoevaluacionempleado);
				}
			}
		} catch(Exception e) {
			throw e;
		}
	}

	public void addItemDefectoCombosForeignKeyAnio()throws Exception {
		try {

			if(!this.evaluacionempleadoSessionBean.getisBusquedaDesdeForeignKeySesionAnio()) {
				Anio anio=new Anio();
				AnioConstantesFunciones.setAnioDescripcion(anio,Constantes.SMENSAJE_ESCOJA_OPCION);
				anio.setId(null);

				if(!AnioConstantesFunciones.ExisteEnLista(this.aniosForeignKey,anio,true)) {

					this.aniosForeignKey.add(0,anio);
				}
			}
		} catch(Exception e) {
			throw e;
		}
	}

	public void addItemDefectoCombosForeignKeySemestre()throws Exception {
		try {

			if(!this.evaluacionempleadoSessionBean.getisBusquedaDesdeForeignKeySesionSemestre()) {
				Semestre semestre=new Semestre();
				SemestreConstantesFunciones.setSemestreDescripcion(semestre,Constantes.SMENSAJE_ESCOJA_OPCION);
				semestre.setId(null);

				if(!SemestreConstantesFunciones.ExisteEnLista(this.semestresForeignKey,semestre,true)) {

					this.semestresForeignKey.add(0,semestre);
				}
			}
		} catch(Exception e) {
			throw e;
		}
	}

	public void addItemDefectoCombosForeignKeyTrimestre()throws Exception {
		try {

			if(!this.evaluacionempleadoSessionBean.getisBusquedaDesdeForeignKeySesionTrimestre()) {
				Trimestre trimestre=new Trimestre();
				TrimestreConstantesFunciones.setTrimestreDescripcion(trimestre,Constantes.SMENSAJE_ESCOJA_OPCION);
				trimestre.setId(null);

				if(!TrimestreConstantesFunciones.ExisteEnLista(this.trimestresForeignKey,trimestre,true)) {

					this.trimestresForeignKey.add(0,trimestre);
				}
			}
		} catch(Exception e) {
			throw e;
		}
	}

	public void addItemDefectoCombosForeignKeyBimestre()throws Exception {
		try {

			if(!this.evaluacionempleadoSessionBean.getisBusquedaDesdeForeignKeySesionBimestre()) {
				Bimestre bimestre=new Bimestre();
				BimestreConstantesFunciones.setBimestreDescripcion(bimestre,Constantes.SMENSAJE_ESCOJA_OPCION);
				bimestre.setId(null);

				if(!BimestreConstantesFunciones.ExisteEnLista(this.bimestresForeignKey,bimestre,true)) {

					this.bimestresForeignKey.add(0,bimestre);
				}
			}
		} catch(Exception e) {
			throw e;
		}
	}

	public void addItemDefectoCombosForeignKeyMes()throws Exception {
		try {

			if(!this.evaluacionempleadoSessionBean.getisBusquedaDesdeForeignKeySesionMes()) {
				Mes mes=new Mes();
				MesConstantesFunciones.setMesDescripcion(mes,Constantes.SMENSAJE_ESCOJA_OPCION);
				mes.setId(null);

				if(!MesConstantesFunciones.ExisteEnLista(this.messForeignKey,mes,true)) {

					this.messForeignKey.add(0,mes);
				}
			}
		} catch(Exception e) {
			throw e;
		}
	}
	
	public void initActionsCombosTodosForeignKeyEvaluacionEmpleado()throws Exception {
		try {
			
		} catch(Exception e) {
			throw e;
		}		
	}
	
	public void initActionsCombosTodosForeignKeyEvaluacionEmpleado(String sFormularioTipoBusqueda)throws Exception {
		try {
			
		} catch(Exception e) {
			throw e;
		}		
	}
	
	


	
	


	
	public void setVariablesGlobalesCombosForeignKeyEvaluacionEmpleado()throws Exception {	
		try {
			if(this.parametroGeneralUsuario!=null && this.parametroGeneralUsuario.getId()>0) {
			
				this.setActualEmpresaForeignKey(this.parametroGeneralUsuario.getid_empresa(),false,"Formulario");
				this.setActualSucursalForeignKey(this.parametroGeneralUsuario.getid_sucursal(),false,"Formulario");
				this.setActualEjercicioForeignKey(this.parametroGeneralUsuario.getid_ejercicio(),false,"Formulario");
				this.setActualPeriodoForeignKey(this.parametroGeneralUsuario.getid_periodo(),false,"Formulario");
			
			
				this.evaluacionempleado.setfecha(this.parametroGeneralUsuario.getfecha_sistema());
			}
			
			//INICIALIZA VARIABLES COMBOS GLOBALES AUXILIARES A FORMULARIO(Anio,Mes)
			this.setVariablesGlobalesAuxiliaresCombosForeignKeyEvaluacionEmpleado();
		
		} catch(Exception e) {
			throw e;
		}
	}
	
	public void setVariablesObjetoActualToFormularioForeignKeyEvaluacionEmpleado(EvaluacionEmpleado evaluacionempleado)throws Exception {	
		try {
			
			this.setActualEstructuraForeignKey(evaluacionempleado.getid_estructura(),false,"Formulario");
			this.setActualEmpleadoForeignKey(evaluacionempleado.getid_empleado(),false,"Formulario");
			this.setActualEmpleadoEvaluaForeignKey(evaluacionempleado.getid_empleado_evalua(),false,"Formulario");
			this.setActualTipoEvaluacionEmpleadoForeignKey(evaluacionempleado.getid_tipo_evaluacion_empleado(),false,"Formulario");
			this.setActualSemestreForeignKey(evaluacionempleado.getid_semestre(),false,"Formulario");
			this.setActualTrimestreForeignKey(evaluacionempleado.getid_trimestre(),false,"Formulario");
			this.setActualBimestreForeignKey(evaluacionempleado.getid_bimestre(),false,"Formulario");			
		} catch(Exception e) {
			throw e;
		}
	}
	
	public void setVariablesObjetoActualToListasForeignKeyEvaluacionEmpleado(EvaluacionEmpleado evaluacionempleado,String sTipoEvento)throws Exception {	
		try {
			
			
			
		} catch(Exception e) {
			throw e;
		}
	}
	
	/*
	public void setVariablesCombosFromBeanForeignKeyEvaluacionEmpleado()throws Exception {	
		try {
			
			this.setActualEstructuraForeignKey(this.evaluacionempleadoConstantesFunciones.getid_estructura(),false,"Formulario");
			this.setActualEmpleadoForeignKey(this.evaluacionempleadoConstantesFunciones.getid_empleado(),false,"Formulario");
			this.setActualEmpleadoEvaluaForeignKey(this.evaluacionempleadoConstantesFunciones.getid_empleado_evalua(),false,"Formulario");
			this.setActualTipoEvaluacionEmpleadoForeignKey(this.evaluacionempleadoConstantesFunciones.getid_tipo_evaluacion_empleado(),false,"Formulario");
			this.setActualSemestreForeignKey(this.evaluacionempleadoConstantesFunciones.getid_semestre(),false,"Formulario");
			this.setActualTrimestreForeignKey(this.evaluacionempleadoConstantesFunciones.getid_trimestre(),false,"Formulario");
			this.setActualBimestreForeignKey(this.evaluacionempleadoConstantesFunciones.getid_bimestre(),false,"Formulario");			
		} catch(Exception e) {
			throw e;
		}
	}
	*/
	
	public void setVariablesGlobalesAuxiliaresCombosForeignKeyEvaluacionEmpleado()throws Exception {	
		try {
			

				if(this.jInternalFrameDetalleFormEvaluacionEmpleado!=null) {
					Ejercicio ejercicioActual=(Ejercicio)this.jInternalFrameDetalleFormEvaluacionEmpleado.jComboBoxid_ejercicioEvaluacionEmpleado.getSelectedItem();
					this.setActualAnioForeignKey(ejercicioActual.getid_anio(),false,"Formulario");
				}

				if(this.jInternalFrameDetalleFormEvaluacionEmpleado!=null) {
					Periodo periodoActual=(Periodo)this.jInternalFrameDetalleFormEvaluacionEmpleado.jComboBoxid_periodoEvaluacionEmpleado.getSelectedItem();
					this.setActualMesForeignKey(periodoActual.getid_mes(),false,"Formulario");
				}
		
		} catch(Exception e) {
			throw e;
		}
	}
	
	public void setVariablesDefaultCombosForeignKeyEvaluacionEmpleado()throws Exception {	
		try {
			
		} catch(Exception e) {
			throw e;
		}
	}
	
	public void setVariablesParametroCombosForeignKeyEvaluacionEmpleado()throws Exception {	
		try {
			
		} catch(Exception e) {
			throw e;
		}
	}		
	
	public void cargarCombosParametroEvaluacionEmpleado()throws Exception {
		try	{
			ArrayList<String> arrColumnasGlobales=new ArrayList<String>();
			String  finalQueryGlobal="";
			
			//this.cargarDatosCliente();
			
			
			
		} catch(Exception e) {
			throw e;
		}		
	}
		
	public void cargarCombosFrameForeignKeyEvaluacionEmpleado()throws Exception {
		try {
			

			this.cargarCombosFrameEmpresasForeignKey("Todos");
			this.cargarCombosFrameSucursalsForeignKey("Todos");
			this.cargarCombosFrameEjerciciosForeignKey("Todos");
			this.cargarCombosFramePeriodosForeignKey("Todos");
			this.cargarCombosFrameEstructurasForeignKey("Todos");
			this.cargarCombosFrameEmpleadosForeignKey("Todos");
			this.cargarCombosFrameEmpleadoEvaluasForeignKey("Todos");
			this.cargarCombosFrameTipoEvaluacionEmpleadosForeignKey("Todos");
			this.cargarCombosFrameAniosForeignKey("Todos");
			this.cargarCombosFrameSemestresForeignKey("Todos");
			this.cargarCombosFrameTrimestresForeignKey("Todos");
			this.cargarCombosFrameBimestresForeignKey("Todos");
			this.cargarCombosFrameMessForeignKey("Todos");

		} catch(Exception e) {
			throw e;
		}		
	}		
	
	public void cargarCombosFrameForeignKeyEvaluacionEmpleado(String sFormularioTipoBusqueda)throws Exception {
		try {
			

			this.cargarCombosFrameEmpresasForeignKey(sFormularioTipoBusqueda);
			this.cargarCombosFrameSucursalsForeignKey(sFormularioTipoBusqueda);
			this.cargarCombosFrameEjerciciosForeignKey(sFormularioTipoBusqueda);
			this.cargarCombosFramePeriodosForeignKey(sFormularioTipoBusqueda);
			this.cargarCombosFrameEstructurasForeignKey(sFormularioTipoBusqueda);
			this.cargarCombosFrameEmpleadosForeignKey(sFormularioTipoBusqueda);
			this.cargarCombosFrameEmpleadoEvaluasForeignKey(sFormularioTipoBusqueda);
			this.cargarCombosFrameTipoEvaluacionEmpleadosForeignKey(sFormularioTipoBusqueda);
			this.cargarCombosFrameAniosForeignKey(sFormularioTipoBusqueda);
			this.cargarCombosFrameSemestresForeignKey(sFormularioTipoBusqueda);
			this.cargarCombosFrameTrimestresForeignKey(sFormularioTipoBusqueda);
			this.cargarCombosFrameBimestresForeignKey(sFormularioTipoBusqueda);
			this.cargarCombosFrameMessForeignKey(sFormularioTipoBusqueda);

		} catch(Exception e) {
			throw e;
		}		
	}	
	
	public void setItemDefectoCombosForeignKeyEvaluacionEmpleado()throws Exception {
		try {
			



			if(this.jInternalFrameDetalleFormEvaluacionEmpleado.jComboBoxid_empresaEvaluacionEmpleado!=null && this.jInternalFrameDetalleFormEvaluacionEmpleado.jComboBoxid_empresaEvaluacionEmpleado.getItemCount()>0) {
				this.jInternalFrameDetalleFormEvaluacionEmpleado.jComboBoxid_empresaEvaluacionEmpleado.setSelectedIndex(0);
			}

			if(this.jInternalFrameDetalleFormEvaluacionEmpleado.jComboBoxid_sucursalEvaluacionEmpleado!=null && this.jInternalFrameDetalleFormEvaluacionEmpleado.jComboBoxid_sucursalEvaluacionEmpleado.getItemCount()>0) {
				this.jInternalFrameDetalleFormEvaluacionEmpleado.jComboBoxid_sucursalEvaluacionEmpleado.setSelectedIndex(0);
			}

			if(this.jInternalFrameDetalleFormEvaluacionEmpleado.jComboBoxid_ejercicioEvaluacionEmpleado!=null && this.jInternalFrameDetalleFormEvaluacionEmpleado.jComboBoxid_ejercicioEvaluacionEmpleado.getItemCount()>0) {
				this.jInternalFrameDetalleFormEvaluacionEmpleado.jComboBoxid_ejercicioEvaluacionEmpleado.setSelectedIndex(0);
			}

			if(this.jInternalFrameDetalleFormEvaluacionEmpleado.jComboBoxid_periodoEvaluacionEmpleado!=null && this.jInternalFrameDetalleFormEvaluacionEmpleado.jComboBoxid_periodoEvaluacionEmpleado.getItemCount()>0) {
				this.jInternalFrameDetalleFormEvaluacionEmpleado.jComboBoxid_periodoEvaluacionEmpleado.setSelectedIndex(0);
			}

			if(this.jInternalFrameDetalleFormEvaluacionEmpleado.jComboBoxid_estructuraEvaluacionEmpleado!=null && this.jInternalFrameDetalleFormEvaluacionEmpleado.jComboBoxid_estructuraEvaluacionEmpleado.getItemCount()>0) {
				this.jInternalFrameDetalleFormEvaluacionEmpleado.jComboBoxid_estructuraEvaluacionEmpleado.setSelectedIndex(0);
			}

			if(this.jInternalFrameDetalleFormEvaluacionEmpleado.jComboBoxid_empleadoEvaluacionEmpleado!=null && this.jInternalFrameDetalleFormEvaluacionEmpleado.jComboBoxid_empleadoEvaluacionEmpleado.getItemCount()>0) {
				this.jInternalFrameDetalleFormEvaluacionEmpleado.jComboBoxid_empleadoEvaluacionEmpleado.setSelectedIndex(0);
			}

			if(this.jInternalFrameDetalleFormEvaluacionEmpleado.jComboBoxid_empleado_evaluaEvaluacionEmpleado!=null && this.jInternalFrameDetalleFormEvaluacionEmpleado.jComboBoxid_empleado_evaluaEvaluacionEmpleado.getItemCount()>0) {
				this.jInternalFrameDetalleFormEvaluacionEmpleado.jComboBoxid_empleado_evaluaEvaluacionEmpleado.setSelectedIndex(0);
			}

			if(this.jInternalFrameDetalleFormEvaluacionEmpleado.jComboBoxid_tipo_evaluacion_empleadoEvaluacionEmpleado!=null && this.jInternalFrameDetalleFormEvaluacionEmpleado.jComboBoxid_tipo_evaluacion_empleadoEvaluacionEmpleado.getItemCount()>0) {
				this.jInternalFrameDetalleFormEvaluacionEmpleado.jComboBoxid_tipo_evaluacion_empleadoEvaluacionEmpleado.setSelectedIndex(0);
			}

			if(this.jInternalFrameDetalleFormEvaluacionEmpleado.jComboBoxid_anioEvaluacionEmpleado!=null && this.jInternalFrameDetalleFormEvaluacionEmpleado.jComboBoxid_anioEvaluacionEmpleado.getItemCount()>0) {
				this.jInternalFrameDetalleFormEvaluacionEmpleado.jComboBoxid_anioEvaluacionEmpleado.setSelectedIndex(0);
			}

			if(this.jInternalFrameDetalleFormEvaluacionEmpleado.jComboBoxid_semestreEvaluacionEmpleado!=null && this.jInternalFrameDetalleFormEvaluacionEmpleado.jComboBoxid_semestreEvaluacionEmpleado.getItemCount()>0) {
				this.jInternalFrameDetalleFormEvaluacionEmpleado.jComboBoxid_semestreEvaluacionEmpleado.setSelectedIndex(0);
			}

			if(this.jInternalFrameDetalleFormEvaluacionEmpleado.jComboBoxid_trimestreEvaluacionEmpleado!=null && this.jInternalFrameDetalleFormEvaluacionEmpleado.jComboBoxid_trimestreEvaluacionEmpleado.getItemCount()>0) {
				this.jInternalFrameDetalleFormEvaluacionEmpleado.jComboBoxid_trimestreEvaluacionEmpleado.setSelectedIndex(0);
			}

			if(this.jInternalFrameDetalleFormEvaluacionEmpleado.jComboBoxid_bimestreEvaluacionEmpleado!=null && this.jInternalFrameDetalleFormEvaluacionEmpleado.jComboBoxid_bimestreEvaluacionEmpleado.getItemCount()>0) {
				this.jInternalFrameDetalleFormEvaluacionEmpleado.jComboBoxid_bimestreEvaluacionEmpleado.setSelectedIndex(0);
			}

			if(this.jInternalFrameDetalleFormEvaluacionEmpleado.jComboBoxid_mesEvaluacionEmpleado!=null && this.jInternalFrameDetalleFormEvaluacionEmpleado.jComboBoxid_mesEvaluacionEmpleado.getItemCount()>0) {
				this.jInternalFrameDetalleFormEvaluacionEmpleado.jComboBoxid_mesEvaluacionEmpleado.setSelectedIndex(0);
			}
		} catch(Exception e) {
			throw e;
		}		
	}		
	
	


























	
	

	public EvaluacionEmpleadoBeanSwingJInternalFrame() throws Exception {
		super(false,PaginaTipo.PRINCIPAL);
	}
	
	public EvaluacionEmpleadoBeanSwingJInternalFrame(Boolean cargarRelaciones,PaginaTipo paginaTipo) throws Exception {
		super(cargarRelaciones,paginaTipo);
	}
	
	public EvaluacionEmpleadoBeanSwingJInternalFrame(Boolean conGuardarRelaciones,Boolean esGuardarRelacionado,Boolean cargarRelaciones,PaginaTipo paginaTipo) throws Exception {
		super(cargarRelaciones,paginaTipo);
		
		this.evaluacionempleadoSessionBean=new EvaluacionEmpleadoSessionBean(); 
		this.evaluacionempleadoConstantesFunciones=new EvaluacionEmpleadoConstantesFunciones(); 
		this.evaluacionempleadoBean=new EvaluacionEmpleado();//(this.evaluacionempleadoConstantesFunciones); 		
		this.evaluacionempleadoReturnGeneral=new EvaluacionEmpleadoParameterReturnGeneral(); 
		
		this.evaluacionempleadoSessionBean.setConGuardarRelaciones(conGuardarRelaciones);
		this.evaluacionempleadoSessionBean.setEsGuardarRelacionado(esGuardarRelacionado);
				
	}
	
	public EvaluacionEmpleadoBeanSwingJInternalFrame(Boolean blncargarCombostrForeignKey,Boolean blnCargarInformacionInicial,JDesktopPane jdesktopPane,Usuario usuarioActual,ResumenUsuario resumenUsuarioActual,Modulo moduloActual,Opcion opcionActual,ParametroGeneralSg parametroGeneralSg,ParametroGeneralUsuario parametroGeneralUsuario,Boolean conGuardarRelaciones,Boolean esGuardarRelacionado,Boolean cargarRelaciones,Boolean cargarTodosDatos,PaginaTipo paginaTipo) throws Exception {
		this(blncargarCombostrForeignKey,blnCargarInformacionInicial,jdesktopPane,usuarioActual,resumenUsuarioActual,moduloActual,opcionActual,parametroGeneralSg,parametroGeneralUsuario,paginaTipo,conGuardarRelaciones,esGuardarRelacionado,cargarRelaciones,cargarTodosDatos);
	}
		
	public EvaluacionEmpleadoBeanSwingJInternalFrame(Boolean blncargarCombostrForeignKey,Boolean blnCargarInformacionInicial,JDesktopPane jdesktopPane,Usuario usuarioActual,ResumenUsuario resumenUsuarioActual,Modulo moduloActual,Opcion opcionActual,ParametroGeneralSg parametroGeneralSg,ParametroGeneralUsuario parametroGeneralUsuario,Boolean cargarRelaciones,Boolean cargarTodosDatos,PaginaTipo paginaTipo) throws Exception {
		this(blncargarCombostrForeignKey,blnCargarInformacionInicial,jdesktopPane,usuarioActual,resumenUsuarioActual,moduloActual,opcionActual,parametroGeneralSg,parametroGeneralUsuario,paginaTipo,false,false,cargarRelaciones,cargarTodosDatos);
	}	
	
	public EvaluacionEmpleadoBeanSwingJInternalFrame(Boolean blncargarCombostrForeignKey,Boolean blnCargarInformacionInicial,JDesktopPane jdesktopPane,Usuario usuarioActual,ResumenUsuario resumenUsuarioActual,Modulo moduloActual,Opcion opcionActual,ParametroGeneralSg parametroGeneralSg,ParametroGeneralUsuario parametroGeneralUsuario,PaginaTipo paginaTipo,Boolean conGuardarRelaciones,Boolean esGuardarRelacionado,Boolean cargarRelaciones,Boolean cargarTodosDatos) throws Exception //Boolean esParaBusquedaForeignKey
    {
		super(jdesktopPane,conGuardarRelaciones,esGuardarRelacionado,cargarRelaciones,usuarioActual,resumenUsuarioActual,moduloActual,opcionActual,parametroGeneralSg,parametroGeneralUsuario,paginaTipo);
		
		try {
			
			this.permiteRecargarForm=false;
			
			this.startProcessEvaluacionEmpleado(true);
			
			Boolean esParaBusquedaForeignKey=false;//ANTES USADO COMO PARAMETRO DEL CONSTRUCTOR
			
			if(paginaTipo.equals(PaginaTipo.BUSQUEDA)) {
				esParaBusquedaForeignKey=true;
			}
			
			
			
			//SE ASIGNA EN CLASE PADRE
			/*
			this.parametroGeneralSg=parametroGeneralSg;		
			this.parametroGeneralUsuario=parametroGeneralUsuario;	
			this.usuarioActual=usuarioActual;
			this.moduloActual=moduloActual;
			*/						
			
			long start_time=0;
			long end_time=0;
			
			if(Constantes2.ISDEVELOPING2) {
				start_time = System.currentTimeMillis();
			}
			
			if(!cargarTodosDatos) {
				this.sAccionBusqueda="NINGUNO";
			}
			
			this.evaluacionempleadoConstantesFunciones=new EvaluacionEmpleadoConstantesFunciones(); 
			this.evaluacionempleadoBean=new EvaluacionEmpleado();//this.evaluacionempleadoConstantesFunciones); 			
			this.evaluacionempleadoReturnGeneral=new EvaluacionEmpleadoParameterReturnGeneral(); 
		
			EvaluacionEmpleadoBeanSwingJInternalFrameAdditional.CargaInicialInicio(this, "NORMAL", null);
			
			this.setTitle(Funciones.GetTituloSistema(this.parametroGeneralSg,this.moduloActual,this.usuarioActual,"Evaluacion Empleado Mantenimiento",paginaTipo));			
			
			this.conTotales=false;
			
			
			
			this.evaluacionempleado=new EvaluacionEmpleado();
			this.evaluacionempleados = new ArrayList<EvaluacionEmpleado>();
			this.evaluacionempleadosAux = new ArrayList<EvaluacionEmpleado>();
			
			if(Constantes.ISUSAEJBLOGICLAYER) {
				this.evaluacionempleadoLogic=new EvaluacionEmpleadoLogic();
				this.evaluacionempleadoLogic.getNewConnexionToDeep("");
			}
			
			//this.evaluacionempleadoSessionBean.setConGuardarRelaciones(conGuardarRelaciones);
			//this.evaluacionempleadoSessionBean.setEsGuardarRelacionado(esGuardarRelacionado);
			
			this.jDesktopPane=jdesktopPane;
			
			if(this.jDesktopPane.getClass().equals(JDesktopPaneMe.class)) {
				this.constantes2=((JDesktopPaneMe)this.jDesktopPane).constantes2;
			}
			
			if(!Constantes.CON_VARIAS_VENTANAS) {
    			MainJFrame.cerrarJInternalFramesExistentes(this.jDesktopPane,this.jInternalFrameDetalleFormEvaluacionEmpleado);
				
				if(!this.conCargarMinimo) {
					
					if(this.jInternalFrameReporteDinamicoEvaluacionEmpleado!=null) {
						MainJFrame.cerrarJInternalFramesExistentes(this.jDesktopPane,this.jInternalFrameReporteDinamicoEvaluacionEmpleado);	
					}
					
					if(this.jInternalFrameImportacionEvaluacionEmpleado!=null) {
						MainJFrame.cerrarJInternalFramesExistentes(this.jDesktopPane,this.jInternalFrameImportacionEvaluacionEmpleado);							
					}
					
				}
				
				
				if(!this.conCargarMinimo) {
					
					if(this.jInternalFrameOrderByEvaluacionEmpleado!=null) {
						MainJFrame.cerrarJInternalFramesExistentes(this.jDesktopPane,this.jInternalFrameOrderByEvaluacionEmpleado);					
					}
					
				}
			}
			
			//DETALLE DATOS
			if(this.jInternalFrameDetalleFormEvaluacionEmpleado!=null) { //this.conCargarFormDetalle) {
				this.jDesktopPane.add(this.jInternalFrameDetalleFormEvaluacionEmpleado);
				this.jInternalFrameDetalleFormEvaluacionEmpleado.setVisible(false);
				this.jInternalFrameDetalleFormEvaluacionEmpleado.setSelected(false);						
			}
			
			if(!this.conCargarMinimo) {
				
				//REPORTE DINAMICO
				if(this.jInternalFrameReporteDinamicoEvaluacionEmpleado!=null) {
					this.jDesktopPane.add(this.jInternalFrameReporteDinamicoEvaluacionEmpleado);
					this.jInternalFrameReporteDinamicoEvaluacionEmpleado.setVisible(false);
					this.jInternalFrameReporteDinamicoEvaluacionEmpleado.setSelected(false);
				}
				
				//IMPORTACION
				if(this.jInternalFrameImportacionEvaluacionEmpleado!=null) {
					this.jDesktopPane.add(this.jInternalFrameImportacionEvaluacionEmpleado);
					this.jInternalFrameImportacionEvaluacionEmpleado.setVisible(false);
					this.jInternalFrameImportacionEvaluacionEmpleado.setSelected(false);
				}
				
				
			}
			
			
			if(!this.conCargarMinimo) {
				
				if(this.jInternalFrameOrderByEvaluacionEmpleado!=null) {
					this.jDesktopPane.add(this.jInternalFrameOrderByEvaluacionEmpleado);
					this.jInternalFrameOrderByEvaluacionEmpleado.setVisible(false);
					this.jInternalFrameOrderByEvaluacionEmpleado.setSelected(false);				
				}
				
			}
			
			
			//this.esParaBusquedaForeignKey=false;
			this.esParaBusquedaForeignKey=esParaBusquedaForeignKey;
			
			this.invalidValues=new InvalidValue[0];
			
			
			
			this.idEvaluacionEmpleadoActual=0L;
			this.rowIndexActual=0;
			
			
			this.iNumeroPaginacionPagina=0;
			this.iNumeroPaginacion=EvaluacionEmpleadoConstantesFunciones.INUMEROPAGINACION;
			this.pagination=new Pagination();
			this.datosCliente=new DatosCliente();
			this.lIdUsuarioSesion=0L;	
			this.sTipoArchivoReporte="";
			this.sTipoArchivoReporteDinamico="";
			this.sTipoReporte="";
			this.sTipoReporteDinamico="";
			this.sTipoPaginacion="";
			this.sTipoRelacion="";
			this.sTipoAccion="";
			this.sTipoAccionFormulario="";
			this.sTipoSeleccionar="";			
			this.sDetalleReporte="";
			this.sTipoReporteExtra="";
			this.sValorCampoGeneral="";
			this.sPathReporteDinamico="";			
			
			this.isMostrarNumeroPaginacion=false;
			this.isSeleccionarTodos=false;
			this.isSeleccionados=false;
			this.conGraficoReporte=false;
			this.isPostAccionNuevo=false;
			this.isPostAccionSinCerrar=false;
			this.isPostAccionSinMensaje=false;
			this.esReporteDinamico=false;
			this.esRecargarFks=false;
			this.esReporteAccionProceso=false;
			
			this.evaluacionempleadoReturnGeneral=new EvaluacionEmpleadoParameterReturnGeneral();
			
			this.evaluacionempleadoParameterGeneral=new EvaluacionEmpleadoParameterReturnGeneral();
			
			
			
			this.sistemaLogicAdditional=new SistemaLogicAdditional();
			
			this.sistemaLogicAdditional.setConnexion(this.evaluacionempleadoLogic.getConnexion());			
			
			
			
			
			
			
			
			//VERIFICAR GLOBAL
			this.cargarDatosCliente();			
			
			
			if(!this.evaluacionempleadoSessionBean.getEsGuardarRelacionado()) {
				if(Constantes.ISUSAEJBLOGICLAYER) {	
					if(!sistemaLogicAdditional.validarLicenciaCliente(this.datosCliente,this.moduloActual,this.usuarioActual)) {
					 	this.setVisible(false);
						throw new Exception(Mensajes.SERROR_CONTROLGLOBAL);
					}
					
				} else if(Constantes.ISUSAEJBREMOTE) {
					
				} else if(Constantes.ISUSAEJBHOME) {
				}
			}			
			
			//VERIFICAR GLOBAL
			
			//VERIFICAR SESSION ACTUAL
			//this.cargarDatosCliente();
			
			this.sistemaReturnGeneral=new SistemaParameterReturnGeneral();
			
			SistemaParameterReturnGeneralAdditional.inicializarSinSeguridad(this.sistemaReturnGeneral);
			
			if(EvaluacionEmpleadoJInternalFrame.CON_LLAMADA_SIMPLE) {
				if(this.evaluacionempleadoSessionBean.getEsGuardarRelacionado()) {
					this.opcionActual.setId(0L);
					
					//idOpcion=0L;					
				}
				
				ArrayList<String> arrPaginas=new ArrayList<String>();		
				ArrayList<Opcion> opcionsFinal=new ArrayList<Opcion>();	
				
				arrPaginas.add(CalificacionEmpleadoConstantesFunciones.SNOMBREOPCION);
		
				if(Constantes.ISUSAEJBLOGICLAYER) {	
					//this.sistemaReturnGeneral=sistemaLogicAdditional.validarCargarSesionUsuarioActualWithConnection(this.usuarioActual,this.datosCliente,this.resumenUsuarioActual,Constantes.LIDSISTEMAACTUAL,EvaluacionEmpleadoConstantesFunciones.SNOMBREOPCION,this.opcionActual,this.evaluacionempleadoSessionBean.getEsGuardarRelacionado(),this.evaluacionempleadoSessionBean.getConGuardarRelaciones(),arrPaginas);
					
					this.sistemaReturnGeneral=sistemaLogicAdditional.validarCargarSesionUsuarioActual(this.usuarioActual,this.datosCliente,this.resumenUsuarioActual,Constantes.LIDSISTEMAACTUAL,EvaluacionEmpleadoConstantesFunciones.SNOMBREOPCION,this.opcionActual,this.evaluacionempleadoSessionBean.getEsGuardarRelacionado(),this.evaluacionempleadoSessionBean.getConGuardarRelaciones(),arrPaginas);
					
					if(!this.sistemaReturnGeneral.getEsValidado()) {
					 	this.setVisible(false);
						throw new Exception(Mensajes.SERROR_SESIONACTUAL);
					}
				} else if(Constantes.ISUSAEJBREMOTE) {
				} else if(Constantes.ISUSAEJBHOME) {
					//FALTA
				}
			} else { 
				if(Constantes.ISUSAEJBLOGICLAYER) {	
					if(!sistemaLogicAdditional.validarSesionUsuarioActual(this.usuarioActual,this.datosCliente,this.resumenUsuarioActual)) {
					 	this.setVisible(false);
						throw new Exception(Mensajes.SERROR_SESIONACTUAL);
					}
				
				} else if(Constantes.ISUSAEJBREMOTE) {
					
				} else if(Constantes.ISUSAEJBHOME) {
				}
			} 
			//VERIFICAR SESSION ACTUAL
			
			
			this.sVisibilidadTablaBusquedas="table-row";
			this.sVisibilidadTablaElementos="none";
			this.sVisibilidadTablaAcciones="none";
			
			this.isVisibilidadCeldaNuevoEvaluacionEmpleado=false;
			this.isVisibilidadCeldaDuplicarEvaluacionEmpleado=true;
			this.isVisibilidadCeldaCopiarEvaluacionEmpleado=true;
			this.isVisibilidadCeldaVerFormEvaluacionEmpleado=true;
			this.isVisibilidadCeldaOrdenEvaluacionEmpleado=true;
			this.isVisibilidadCeldaNuevoRelacionesEvaluacionEmpleado=false;
			this.isVisibilidadCeldaModificarEvaluacionEmpleado=false;
			this.isVisibilidadCeldaActualizarEvaluacionEmpleado=false;
			this.isVisibilidadCeldaEliminarEvaluacionEmpleado=false;
			this.isVisibilidadCeldaCancelarEvaluacionEmpleado=false;
			this.isVisibilidadCeldaGuardarEvaluacionEmpleado=false;
			this.isVisibilidadCeldaGuardarCambiosEvaluacionEmpleado=false;
			
			
			this.isVisibilidadFK_IdAnio=true;
			this.isVisibilidadFK_IdBimestre=true;
			this.isVisibilidadFK_IdEjercicio=true;
			this.isVisibilidadFK_IdEmpleado=true;
			this.isVisibilidadFK_IdEmpleadoEvalua=true;
			this.isVisibilidadFK_IdEmpresa=true;
			this.isVisibilidadFK_IdEstructura=true;
			this.isVisibilidadFK_IdMes=true;
			this.isVisibilidadFK_IdPeriodo=true;
			this.isVisibilidadFK_IdSemestre=true;
			this.isVisibilidadFK_IdSucursal=true;
			this.isVisibilidadFK_IdTipoEvaluacionEmpleado=true;
			this.isVisibilidadFK_IdTrimestre=true;
			
			//ELEMENTOS TABLAS PARAMETOS
			
			
			
			//ELEMENTOS TABLAS PARAMETOS_FIN
			
			//this.actualizarEstadoCeldasBotonesEvaluacionEmpleado("n", isGuardarCambiosEnLote, isEsMantenimientoRelacionado);
						
			
			
			this.inicializarPermisosEvaluacionEmpleado();
			
			//INICIALIZAR FALSE, TALVEZ COMENTAR
			this.setPermisosUsuarioEvaluacionEmpleado(false);
			
			this.setPermisosUsuarioEvaluacionEmpleado();
			
			
			
			//FUNCIONALIDAD_RELACIONADO
			if(!this.evaluacionempleadoSessionBean.getEsGuardarRelacionado() 
				|| (this.evaluacionempleadoSessionBean.getEsGuardarRelacionado() && this.evaluacionempleadoSessionBean.getConGuardarRelaciones())) {
				
				this.inicializarSetPermisosUsuarioEvaluacionEmpleadoClasesRelacionadas();
			}
			
			if(this.evaluacionempleadoSessionBean.getConGuardarRelaciones()) {
				this.actualizarTabsSetPermisosUsuarioEvaluacionEmpleadoClasesRelacionadas();
			}
			
			
			
			//SOLO SE EJECUTA LA PRIMERA VEZ, BINDINGS SI FUNCIONA
			if(!EvaluacionEmpleadoJInternalFrame.ISBINDING_MANUAL) {
				this.inicializarActualizarBindingBotonesPermisosEvaluacionEmpleado();
			} else {
				this.inicializarActualizarBindingBotonesPermisosManualEvaluacionEmpleado();
			}
			
			if(!this.isPermisoBusquedaEvaluacionEmpleado) {
				//BYDAN_BUSQUEDAS
				
				this.jTabbedPaneBusquedasEvaluacionEmpleado.setVisible(false);				
				
			}
			
			
			
			//FUNCIONALIDAD_RELACIONADO
			if(!this.evaluacionempleadoSessionBean.getEsGuardarRelacionado()) {				
				this.tiposArchivosReportes=Funciones.getListTiposArchivosReportes();
				this.tiposArchivosReportesDinamico=Funciones.getListTiposArchivosReportes();
				this.tiposReportes=Funciones.getListTiposReportes(false);
				this.tiposReportesDinamico=Funciones.getListTiposReportesDinamico(false);
				
				
				this.tiposReportes.add(new Reporte("RELACIONES","RELACIONES"));
				this.tiposReportesDinamico.add(new Reporte("RELACIONES","RELACIONES"));
				
				this.tiposGraficosReportes=Funciones2.getListTiposGraficosReportes();
				this.tiposPaginacion=Funciones2.getListTiposPaginacion(this.isPermisoPaginacionMedioEvaluacionEmpleado,this.isPermisoPaginacionMedioEvaluacionEmpleado,this.isPermisoPaginacionTodoEvaluacionEmpleado);
				this.tiposSeleccionar=Funciones2.getListTiposSeleccionar();
				this.tiposSeleccionar.addAll(EvaluacionEmpleadoConstantesFunciones.getTiposSeleccionarEvaluacionEmpleado());
				
				this.tiposColumnasSelect=EvaluacionEmpleadoConstantesFunciones.getTiposSeleccionarEvaluacionEmpleado(true);
				
				this.tiposRelacionesSelect=new ArrayList<Reporte>();								
				
				this.cargarTiposRelacionesSelectEvaluacionEmpleado();				
				//this.tiposRelacionesSelect=EvaluacionEmpleadoConstantesFunciones.getTiposRelacionesEvaluacionEmpleado(true);
				
			} else {
				this.tiposArchivosReportes=new ArrayList<Reporte>();
				this.tiposArchivosReportesDinamico=new ArrayList<Reporte>();
				this.tiposReportes=new ArrayList<Reporte>();
				this.tiposReportesDinamico=new ArrayList<Reporte>();
				this.tiposGraficosReportes=new ArrayList<Reporte>();
				this.tiposPaginacion=new ArrayList<Reporte>();
				this.tiposSeleccionar=new ArrayList<Reporte>();			
				this.tiposColumnasSelect=new ArrayList<Reporte>();	
				this.tiposRelacionesSelect=new ArrayList<Reporte>();	
			}
						
			
			//FUNCIONALIDAD_RELACIONADO
			//if(!this.evaluacionempleadoSessionBean.getEsGuardarRelacionado()) {
				//SE ENCUENTRA MAS ADELANTE CON ACCIONES POR USUARIO
				//ACCIONES GENERALES Y POR USUARIO
				this.tiposRelaciones=Funciones2.getListTiposRelaciones();
				this.setRelacionesUsuarioEvaluacionEmpleado();
				
				this.tiposAcciones=Funciones2.getListTiposAcciones(false,false,true);
				this.setAccionesUsuarioEvaluacionEmpleado(false);	
				
				this.tiposAccionesFormulario=Funciones2.getListTiposAccionesFormulario(false,false,true);							
				this.setAccionesUsuarioEvaluacionEmpleado(true);	
				
				this.inicializarActualizarBindingtiposArchivosReportesAccionesEvaluacionEmpleado() ;
			
			/*
			} else {
				this.tiposAcciones=new ArrayList<Reporte>();
				this.tiposAccionesFormulario=new ArrayList<Reporte>();
			}
			*/						
			
			this.inicializarInvalidValues();
						
			this.arrDatoGeneral= new  ArrayList<DatoGeneral>();
			this.arrDatoGeneralNo= new  ArrayList<String>();
			
			
			
			this.arrOrderBy= new  ArrayList<OrderBy>();
			
			
			this.arrDatoGeneralMinimos= new  ArrayList<DatoGeneralMinimo>();
			
			
			this.traerValoresTablaOrderBy();			
			
			
			this.isGuardarCambiosEnLote=false;
			this.isCargarCombosDependencia=false;
			
			
			this.calificacionempleadoLogic=new CalificacionEmpleadoLogic(); 
			jasperPrint = null;												
			
			//FK
			
			this.empresaLogic=new EmpresaLogic();
			this.sucursalLogic=new SucursalLogic();
			this.ejercicioLogic=new EjercicioLogic();
			this.periodoLogic=new PeriodoLogic();
			this.estructuraLogic=new EstructuraLogic();
			this.empleadoLogic=new EmpleadoLogic();
			this.empleadoevaluaLogic=new EmpleadoLogic();
			this.tipoevaluacionempleadoLogic=new TipoEvaluacionEmpleadoLogic();
			this.anioLogic=new AnioLogic();
			this.semestreLogic=new SemestreLogic();
			this.trimestreLogic=new TrimestreLogic();
			this.bimestreLogic=new BimestreLogic();
			this.mesLogic=new MesLogic();
			
			//PARAMETROS
			
			
			/*
			if(Constantes.ISUSAEJBREMOTE || Constantes.ISUSAEJBHOME) {		
				hashtableEnv =  Funciones.getHashtableEnv();		
				initialContext = new InitialContext(hashtableEnv);	
			}
			*/
			/*
			if(Constantes.ISUSAEJBREMOTE) {
				evaluacionempleadoImplementable= (EvaluacionEmpleadoImplementable) initialContext.lookup(Constantes.SEJBPACKAGE+Constantes.SEJBSEPARATOR+EvaluacionEmpleadoConstantesFunciones.SEJBNAME+Constantes.SEJBSEPARATOR+Constantes.SEJBREMOTE);
			} else if(Constantes.ISUSAEJBHOME) {
				evaluacionempleadoImplementableHome= (EvaluacionEmpleadoImplementableHome) initialContext.lookup(Constantes.SEJBPACKAGE+Constantes.SEJBSEPARATOR+EvaluacionEmpleadoConstantesFunciones.SEJBNAME+Constantes.SEJBSEPARATOR+Constantes.SEJBLOCAL);
			}			
			*/
			
			
			this.evaluacionempleados= new ArrayList<EvaluacionEmpleado>();
			this.evaluacionempleadosEliminados= new ArrayList<EvaluacionEmpleado>();
						
			this.isEsNuevoEvaluacionEmpleado=false;
			this.esParaAccionDesdeFormularioEvaluacionEmpleado=false;
			this.isEsMantenimientoRelacionesRelacionadoUnico=false;
			this.isEsMantenimientoRelaciones=false;
			this.isEsMantenimientoRelacionado=false;
			this.isContieneImagenes=false;
			
			
			
			
			
			//INICIALIZAR LISTAS FK
			
			this.empresasForeignKey=new ArrayList<Empresa>() ;
			this.sucursalsForeignKey=new ArrayList<Sucursal>() ;
			this.ejerciciosForeignKey=new ArrayList<Ejercicio>() ;
			this.periodosForeignKey=new ArrayList<Periodo>() ;
			this.estructurasForeignKey=new ArrayList<Estructura>() ;
			this.empleadosForeignKey=new ArrayList<Empleado>() ;
			this.empleadoevaluasForeignKey=new ArrayList<Empleado>() ;
			this.tipoevaluacionempleadosForeignKey=new ArrayList<TipoEvaluacionEmpleado>() ;
			this.aniosForeignKey=new ArrayList<Anio>() ;
			this.semestresForeignKey=new ArrayList<Semestre>() ;
			this.trimestresForeignKey=new ArrayList<Trimestre>() ;
			this.bimestresForeignKey=new ArrayList<Bimestre>() ;
			this.messForeignKey=new ArrayList<Mes>() ;
			
			
			
			
			if(blncargarCombostrForeignKey) {
				this.cargarCombosForeignKeyEvaluacionEmpleado(this.isCargarCombosDependencia);
			}
			
			this.cargarCombosParametroEvaluacionEmpleado();
			
			
			
			
			
			//FUNCIONALIDAD_RELACIONADO
			if(!this.evaluacionempleadoSessionBean.getEsGuardarRelacionado()) {
				this.onLoad();
			}
						
			EvaluacionEmpleadoBeanSwingJInternalFrameAdditional.RecargarVentanaSegunOpcion(this,opcionActual);
			
			/*
			if(blnCargarInformacionInicial) {
				this.recargarInformacion();
			}
			*/
			//this.iNumeroPaginacionPagina=0;
			//this.iNumeroPaginacion=EvaluacionEmpleadoConstantesFunciones.INUMEROPAGINACION;
			
			this.actualizarEstadoCeldasBotonesEvaluacionEmpleado("n", isGuardarCambiosEnLote, isEsMantenimientoRelacionado);
			//SOLO LA PRIMERA VEZ HACE LOS BINDINGS, SOLO AHI FUNCIONA
			this.inicializarActualizarBindingEvaluacionEmpleado(true); 
			
			//SE REDIMENSIONA SINO NO SE ACTUALIZA
			this.redimensionarTablaDatos();
			
			
			this.initActions();
			
			;
						
			if(this.jInternalFrameDetalleFormEvaluacionEmpleado!=null) {//if(this.conCargarFormDetalle) {
				this.cargarMenuRelaciones();
			}
			
			//OBLIGA CARGAR DETALLE, MEJOR DESHABILITAR, FALTA TALVEZ PONER EN SELECCIONAR
			//MAYBE
			//this.updateControlesFormularioEvaluacionEmpleado();
			
			if(!this.conCargarMinimo) {
				this.updateBusquedasFormularioEvaluacionEmpleado();
			}
			
			EvaluacionEmpleadoBeanSwingJInternalFrameAdditional.CargaInicial(this, "NORMAL", null);
			
			
			//SE REALIZA ESTO PARA QUE SE PUEDA RECORRER TAB SIN IMPORTAR ORDEN
			Boolean existeTabBusqueda=false;
			
			if(!this.conCargarMinimo) {
				//BYDAN_BUSQUEDAS
				
				
				for(int i=0; i<this.jTabbedPaneBusquedasEvaluacionEmpleado.getTabCount(); i++) {
					this.jTabbedPaneBusquedasEvaluacionEmpleado.setSelectedIndex(i);
						
					if(!existeTabBusqueda) {
						existeTabBusqueda=true;
					}
				}
					
				if(existeTabBusqueda) {
					this.jTabbedPaneBusquedasEvaluacionEmpleado.setSelectedIndex(0);
				}	
				
				
			}
			
			
			if(Constantes.ISUSAEJBLOGICLAYER) {
				this.evaluacionempleadoLogic.commitNewConnexionToDeep();
			}
			
			
			if(Constantes2.ISDEVELOPING2) {
				end_time = System.currentTimeMillis();			
				String sTipo="Load Ventana";
				Funciones2.getMensajeTiempoEjecucion(start_time, end_time, sTipo,false);
			}  
			
			this.finishProcessEvaluacionEmpleado(true);
			
			this.dEnd=(double)System.currentTimeMillis();
			
			this.dDif=this.dEnd - this.dStart;
			
			if(Constantes.ISDEVELOPING) {
				System.out.println("Tiempo(ms) Carga EvaluacionEmpleado: " + this.dDif); 
			}
			
			this.permiteRecargarForm=true;
			
		} catch(Exception e) {
			
			if(Constantes.ISUSAEJBLOGICLAYER) {
				this.evaluacionempleadoLogic.rollbackNewConnexionToDeep();
			}
			
			FuncionesSwing.manageException(this, e,logger,EvaluacionEmpleadoConstantesFunciones.CLASSNAME);
		
		} finally {
			if(Constantes.ISUSAEJBLOGICLAYER) {
				this.evaluacionempleadoLogic.closeNewConnexionToDeep();
			}
		}	 
    }
	
	public void cargarTiposRelacionesSelectEvaluacionEmpleado() {
		Reporte reporte=new Reporte();
		
	

		reporte=new Reporte();
		reporte.setsCodigo(CalificacionEmpleadoConstantesFunciones.SCLASSWEBTITULO);
		reporte.setsDescripcion(CalificacionEmpleadoConstantesFunciones.SCLASSWEBTITULO);
		this.tiposRelacionesSelect.add(reporte);
	}
	
	
	
	public void jTabbedPaneChangeListenerGeneral(String sTipo,ChangeEvent evt) { 	  
		Boolean procesaCargarParteTab=false;
			
		try {
			int iIndex=0;		    			
			String sTitle="";
			
			//TABBED PANE RELACIONES
			if(sTipo.equals("RelacionesEvaluacionEmpleado")) {
				iIndex=this.jInternalFrameDetalleFormEvaluacionEmpleado.jTabbedPaneRelacionesEvaluacionEmpleado.getSelectedIndex();		    
			
				sTitle=this.jInternalFrameDetalleFormEvaluacionEmpleado.jTabbedPaneRelacionesEvaluacionEmpleado.getTitleAt(iIndex);
				
				Integer intSelectedRow = 0;	
			
				intSelectedRow = this.jTableDatosEvaluacionEmpleado.getSelectedRow();	
				
				

				if(sTitle.equals("Calificacion Empleados")) {
					if(!CalificacionEmpleadoJInternalFrame.ESTA_CARGADO_PORPARTE) {
						procesaCargarParteTab=true;
						this.startProcessEvaluacionEmpleado();

						this.cargarParteTabPanelRelacionadaCalificacionEmpleado(iIndex,intSelectedRow);
					}
					
				}
				
			}
			
			//TABBED PANE RELACIONES FIN(EXTRA TAB)
			;
			
  		} catch(Exception e) {
  			e.printStackTrace();
  		} finally {
			if(procesaCargarParteTab) {				
				this.finishProcessEvaluacionEmpleado();	
			}
		}
    }
	
	

	public void cargarParteTabPanelRelacionadaCalificacionEmpleado(int iIndex,int intSelectedRow) throws Exception {
		this.jInternalFrameDetalleFormEvaluacionEmpleado.cargarSessionConBeanSwingJInternalFrameCalificacionEmpleado(false,true,iIndex);
		this.jButtonCalificacionEmpleadoActionPerformed(null,intSelectedRow,false,true,null);
		this.redimensionarTablaPanelRelacionadaCalificacionEmpleado();

		//this.jTabbedPaneRelacionesEvaluacionEmpleado.updateUI();
		//this.jTabbedPaneRelacionesEvaluacionEmpleado.removeTabAt(iIndex);
		//this.jTabbedPaneRelacionesEvaluacionEmpleado.setSelectedIndex(iIndex);


	}
	
	public void jButtonRelacionActionPerformedGeneral(String sTipo,ActionEvent evt) { 	  
		try {
			
				 if(sTipo.equals("CalificacionEmpleado")) {
				int row=this.jTableDatosEvaluacionEmpleado.getSelectedRow();
				jButtonCalificacionEmpleadoActionPerformed(evt,row,true,false,null);
				}
  		} catch(Exception e) {
  			e.printStackTrace();
  		}
    }
	
	public void cargarMenuRelaciones() {	
		JMenuItem jmenuItem= new JMenuItem("General");
		String sLabelMenu="";
		
		if(!this.evaluacionempleadoSessionBean.getEsGuardarRelacionado()) {
			for(Reporte reporte:this.tiposRelaciones) {
			

				if(reporte.getsCodigo().equals("Calificacion Empleado")) {

					if(this.isTienePermisosCalificacionEmpleado && this.evaluacionempleadoConstantesFunciones.mostrarCalificacionEmpleadoEvaluacionEmpleado && !EvaluacionEmpleadoConstantesFunciones.ISGUARDARREL) {
						if(Constantes.ISDEVELOPING) {
							sLabelMenu="Calificacion Empleados"+"("+CalificacionEmpleadoConstantesFunciones.CLASSNAME+")";
						}

						jmenuItem = new JMenuItem(sLabelMenu);
						//jmenuItem.setMnemonic(KeyEvent.VK_S);
						//jmenuItem.setAccelerator(KeyStroke.getKeyStroke(KeyEvent.VK_S, ActionEvent.ALT_MASK));
						jmenuItem.setActionCommand("Calificacion Empleados");

						if(evaluacionempleadoConstantesFunciones.resaltarCalificacionEmpleadoEvaluacionEmpleado!=null) {
							jmenuItem.setBorderPainted(true);
							jmenuItem.setBorder(evaluacionempleadoConstantesFunciones.resaltarCalificacionEmpleadoEvaluacionEmpleado);
						}

						jmenuItem.setEnabled(this.evaluacionempleadoConstantesFunciones.activarCalificacionEmpleadoEvaluacionEmpleado);

						jmenuItem.addActionListener (new MenuItemRelacionActionListener(this,"CalificacionEmpleado"));

						

						this.jInternalFrameDetalleFormEvaluacionEmpleado.jmenuDetalleEvaluacionEmpleado.add(jmenuItem);

						
					}

					continue;
				}
			}
		}
	}		
	
	public void cargarCombosForeignKeyEvaluacionEmpleado(Boolean cargarCombosDependencia) throws Exception {   
		this.cargarCombosForeignKeyEvaluacionEmpleado(cargarCombosDependencia,true,true);
	}
	
	//CARGAR COMBOS EN LOTE
	public void cargarCombosForeignKeyEvaluacionEmpleado(Boolean cargarCombosDependencia,Boolean conInitActions,Boolean conSetVariablesGlobales) throws Exception {   
		this.cargarCombosTodosForeignKeyEvaluacionEmpleadoListas(cargarCombosDependencia);
				
		this.addItemDefectoCombosTodosForeignKeyEvaluacionEmpleado();
		
		this.cargarCombosFrameForeignKeyEvaluacionEmpleado();						
		
		if(conInitActions) {
			this.initActionsCombosTodosForeignKeyEvaluacionEmpleado();
		}
		
		if(conSetVariablesGlobales) {
			this.setVariablesGlobalesCombosForeignKeyEvaluacionEmpleado();
		}
	}
	
	

	public void cargarCombosForeignKeyEstructura(Boolean cargarCombosDependencia,Boolean conInitActions,Boolean conSetVariablesGlobales,String sFinalQueryCombo,String sFormularioTipoBusqueda) throws Exception {
		try {
				this.cargarCombosForeignKeyEstructuraListas(cargarCombosDependencia,sFinalQueryCombo);
				this.addItemDefectoCombosForeignKeyEstructura();
				this.cargarCombosFrameEstructurasForeignKey(sFormularioTipoBusqueda);

				if(conInitActions) {
				}

			this.recargarComboTablaEstructura(this.estructurasForeignKey);

		} catch(Exception e) {
			throw e;
		}
	}

	public void cargarCombosForeignKeyEmpleado(Boolean cargarCombosDependencia,Boolean conInitActions,Boolean conSetVariablesGlobales,String sFinalQueryCombo,String sFormularioTipoBusqueda) throws Exception {
		try {
				this.cargarCombosForeignKeyEmpleadoListas(cargarCombosDependencia,sFinalQueryCombo);
				this.addItemDefectoCombosForeignKeyEmpleado();
				this.cargarCombosFrameEmpleadosForeignKey(sFormularioTipoBusqueda);

				if(conInitActions) {
				}

			this.recargarComboTablaEmpleado(this.empleadosForeignKey);

		} catch(Exception e) {
			throw e;
		}
	}

	public void cargarCombosForeignKeyEmpleadoEvalua(Boolean cargarCombosDependencia,Boolean conInitActions,Boolean conSetVariablesGlobales,String sFinalQueryCombo,String sFormularioTipoBusqueda) throws Exception {
		try {
				this.cargarCombosForeignKeyEmpleadoEvaluaListas(cargarCombosDependencia,sFinalQueryCombo);
				this.addItemDefectoCombosForeignKeyEmpleadoEvalua();
				this.cargarCombosFrameEmpleadoEvaluasForeignKey(sFormularioTipoBusqueda);

				if(conInitActions) {
				}

			this.recargarComboTablaEmpleadoEvalua(this.empleadoevaluasForeignKey);

		} catch(Exception e) {
			throw e;
		}
	}

	public void cargarCombosForeignKeyTipoEvaluacionEmpleado(Boolean cargarCombosDependencia,Boolean conInitActions,Boolean conSetVariablesGlobales,String sFinalQueryCombo,String sFormularioTipoBusqueda) throws Exception {
		try {
				this.cargarCombosForeignKeyTipoEvaluacionEmpleadoListas(cargarCombosDependencia,sFinalQueryCombo);
				this.addItemDefectoCombosForeignKeyTipoEvaluacionEmpleado();
				this.cargarCombosFrameTipoEvaluacionEmpleadosForeignKey(sFormularioTipoBusqueda);

				if(conInitActions) {
				}

			this.recargarComboTablaTipoEvaluacionEmpleado(this.tipoevaluacionempleadosForeignKey);

		} catch(Exception e) {
			throw e;
		}
	}

	public void cargarCombosForeignKeyAnio(Boolean cargarCombosDependencia,Boolean conInitActions,Boolean conSetVariablesGlobales,String sFinalQueryCombo,String sFormularioTipoBusqueda) throws Exception {
		try {
				this.cargarCombosForeignKeyAnioListas(cargarCombosDependencia,sFinalQueryCombo);
				this.addItemDefectoCombosForeignKeyAnio();
				this.cargarCombosFrameAniosForeignKey(sFormularioTipoBusqueda);

				if(conInitActions) {
				}

			this.recargarComboTablaAnio(this.aniosForeignKey);

		} catch(Exception e) {
			throw e;
		}
	}

	public void cargarCombosForeignKeySemestre(Boolean cargarCombosDependencia,Boolean conInitActions,Boolean conSetVariablesGlobales,String sFinalQueryCombo,String sFormularioTipoBusqueda) throws Exception {
		try {
				this.cargarCombosForeignKeySemestreListas(cargarCombosDependencia,sFinalQueryCombo);
				this.addItemDefectoCombosForeignKeySemestre();
				this.cargarCombosFrameSemestresForeignKey(sFormularioTipoBusqueda);

				if(conInitActions) {
				}

			this.recargarComboTablaSemestre(this.semestresForeignKey);

		} catch(Exception e) {
			throw e;
		}
	}

	public void cargarCombosForeignKeyTrimestre(Boolean cargarCombosDependencia,Boolean conInitActions,Boolean conSetVariablesGlobales,String sFinalQueryCombo,String sFormularioTipoBusqueda) throws Exception {
		try {
				this.cargarCombosForeignKeyTrimestreListas(cargarCombosDependencia,sFinalQueryCombo);
				this.addItemDefectoCombosForeignKeyTrimestre();
				this.cargarCombosFrameTrimestresForeignKey(sFormularioTipoBusqueda);

				if(conInitActions) {
				}

			this.recargarComboTablaTrimestre(this.trimestresForeignKey);

		} catch(Exception e) {
			throw e;
		}
	}

	public void cargarCombosForeignKeyBimestre(Boolean cargarCombosDependencia,Boolean conInitActions,Boolean conSetVariablesGlobales,String sFinalQueryCombo,String sFormularioTipoBusqueda) throws Exception {
		try {
				this.cargarCombosForeignKeyBimestreListas(cargarCombosDependencia,sFinalQueryCombo);
				this.addItemDefectoCombosForeignKeyBimestre();
				this.cargarCombosFrameBimestresForeignKey(sFormularioTipoBusqueda);

				if(conInitActions) {
				}

			this.recargarComboTablaBimestre(this.bimestresForeignKey);

		} catch(Exception e) {
			throw e;
		}
	}

	public void cargarCombosForeignKeyMes(Boolean cargarCombosDependencia,Boolean conInitActions,Boolean conSetVariablesGlobales,String sFinalQueryCombo,String sFormularioTipoBusqueda) throws Exception {
		try {
				this.cargarCombosForeignKeyMesListas(cargarCombosDependencia,sFinalQueryCombo);
				this.addItemDefectoCombosForeignKeyMes();
				this.cargarCombosFrameMessForeignKey(sFormularioTipoBusqueda);

				if(conInitActions) {
				}

			this.recargarComboTablaMes(this.messForeignKey);

		} catch(Exception e) {
			throw e;
		}
	}
	
	public void jButtonNuevoEvaluacionEmpleadoActionPerformed(ActionEvent evt,Boolean esRelaciones) throws Exception {   
		try {
			EventoGlobalTipo eventoGlobalTipo=EventoGlobalTipo.FORM_RECARGAR;
			String sTipo="NUEVO_NORMAL";
			
			this.estaModoNuevo=true;
			
			if(this.evaluacionempleadoSessionBean.getConGuardarRelaciones()) {
				this.dStart=(double)System.currentTimeMillis();
			}
				
			//if(this.esUsoDesdeHijo) {
			//	eventoGlobalTipo=EventoGlobalTipo.FORM_HIJO_ACTUALIZAR;
			//}
											
			if(this.jInternalFrameDetalleFormEvaluacionEmpleado==null) { //if(!this.conCargarFormDetalle) {
				this.inicializarFormDetalle();
			}			
				
			EvaluacionEmpleadoBeanSwingJInternalFrameAdditional.procesarEventosVista(this.parametroGeneralUsuario,this.moduloActual,this.opcionActual,this.usuarioActual,this,FuncionTipo.BEFORE,ControlTipo.FORM,EventoTipo.LOAD,EventoSubTipo.NEW,"FORM",this.evaluacionempleado,new Object(),this.evaluacionempleadoParameterGeneral,this.evaluacionempleadoReturnGeneral);
			
			
			if(jTableDatosEvaluacionEmpleado.getRowCount()>=1) {
				jTableDatosEvaluacionEmpleado.removeRowSelectionInterval(0, jTableDatosEvaluacionEmpleado.getRowCount()-1);						
			}
			
			this.isEsNuevoEvaluacionEmpleado=true;
			
			//ESTABLECE SI ES RELACIONADO O NO 
			this.habilitarDeshabilitarTipoMantenimientoEvaluacionEmpleado(esRelaciones);
			
			this.nuevoPreparar(false); 
			this.habilitarDeshabilitarControlesEvaluacionEmpleado(true);			
			//this.evaluacionempleado=new EvaluacionEmpleado();
			//this.evaluacionempleado.setIsChanged(true);
			
			//NO FUNCIONA BINDINGS
			this.inicializarActualizarBindingBotonesEvaluacionEmpleado(false) ;						
			 
			//SI ES MANUAL
			//this.inicializarActualizarBindingBotonesManualEvaluacionEmpleado() ;
			
			if(EvaluacionEmpleadoJInternalFrame.CON_DATOS_FRAME) {
				this.abrirFrameDetalleEvaluacionEmpleado(esRelaciones);
			}
					
			//Se Duplica, sin sentido
			//this.actualizarInformacion("EVENTO_NUEVO",false,this.evaluacionempleado);	
			this.actualizarInformacion("INFO_PADRE",false,this.evaluacionempleado);				
			
			EvaluacionEmpleadoBeanSwingJInternalFrameAdditional.procesarEventosVista(this.parametroGeneralUsuario,this.moduloActual,this.opcionActual,this.usuarioActual,this,FuncionTipo.AFTER,ControlTipo.FORM,EventoTipo.LOAD,EventoSubTipo.NEW,"FORM",this.evaluacionempleado,new Object(),this.evaluacionempleadoParameterGeneral,this.evaluacionempleadoReturnGeneral);
			
			if(this.evaluacionempleadoSessionBean.getConGuardarRelaciones()) {
				this.dEnd=(double)System.currentTimeMillis();					
				this.dDif=this.dEnd - this.dStart;
					
				if(Constantes.ISDEVELOPING) {
					System.out.println("Tiempo(ms) Nuevo Preparar EvaluacionEmpleado: " + this.dDif); 
				}
			}
			
			//false para que pueda generar eventos
			this.estaModoNuevo=false;
							
			//Con this.estaModoNuevo=false;, se permite actualizar y usar eventos control al mismo tiempo (FuncionTipo.LAST)			
			EvaluacionEmpleadoBeanSwingJInternalFrameAdditional.procesarEventosVista(this.parametroGeneralUsuario,this.moduloActual,this.opcionActual,this.usuarioActual,this,FuncionTipo.LAST,ControlTipo.FORM,EventoTipo.CLIC,EventoSubTipo.NEW,sTipo,this.evaluacionempleado,new Object(),this.evaluacionempleadoParameterGeneral,this.evaluacionempleadoReturnGeneral);
			
		} catch(Exception e) {									
			FuncionesSwing.manageException(this, e,logger,EvaluacionEmpleadoConstantesFunciones.CLASSNAME);
			
		} finally {
			this.estaModoNuevo=false;			
		}
	}
	
	public void jButtonDuplicarEvaluacionEmpleadoActionPerformed(ActionEvent evt,Boolean esRelaciones) throws Exception {   
		try {
			Boolean soloDuplicarUno=false;
			Boolean conSeleccionarFilaTabla=false;
			
			this.estaModoNuevo=true;
			this.estaModoDuplicar=true;
			
			ArrayList<EvaluacionEmpleado> evaluacionempleadosSeleccionados=new ArrayList<EvaluacionEmpleado>();
			int intSelectedRow =-1;
			Integer iNumRowsSeleccionados=0;
			int[] arrNumRowsSeleccionados=null;
			
			//NO SE TOMA EN CUENTA, SI LOS SELECCIONADOS
			if(conSeleccionarFilaTabla) {
				arrNumRowsSeleccionados=this.jTableDatosEvaluacionEmpleado.getSelectedRows();
				iNumRowsSeleccionados=this.jTableDatosEvaluacionEmpleado.getSelectedRows().length;			
			}
			
			evaluacionempleadosSeleccionados=this.getEvaluacionEmpleadosSeleccionados(false);
				
			if((soloDuplicarUno && iNumRowsSeleccionados.equals(1)) || !soloDuplicarUno) {
				//LO HACE NUEVOPREPARAR
				//this.iIdNuevoEvaluacionEmpleado--;			
				//EvaluacionEmpleado evaluacionempleadoAux= new EvaluacionEmpleado();			
				//evaluacionempleadoAux.setId(this.iIdNuevoEvaluacionEmpleado);																
				
				//NO SE TOMA EN CUENTA, SI LOS SELECCIONADOS
				//EvaluacionEmpleado evaluacionempleadoOrigen=new EvaluacionEmpleado();
				//for(Integer iNumRowSeleccionado:arrNumRowsSeleccionados) {				
				
				for(EvaluacionEmpleado evaluacionempleadoOrigen : evaluacionempleadosSeleccionados) {
					if(conSeleccionarFilaTabla) {
						if(!soloDuplicarUno) {
							//NO SE TOMA EN CUENTA, SI LOS SELECCIONADOS
							//intSelectedRow =iNumRowSeleccionado;
						} else {
							intSelectedRow = this.jTableDatosEvaluacionEmpleado.getSelectedRow();
						}
						
						//ARCHITECTURE
						if(Constantes.ISUSAEJBLOGICLAYER) {
							evaluacionempleadoOrigen =(EvaluacionEmpleado) this.evaluacionempleadoLogic.getEvaluacionEmpleados().toArray()[this.jTableDatosEvaluacionEmpleado.convertRowIndexToModel(intSelectedRow)];
						} else if(Constantes.ISUSAEJBREMOTE || Constantes.ISUSAEJBHOME) {
							evaluacionempleadoOrigen =(EvaluacionEmpleado) this.evaluacionempleados.toArray()[this.jTableDatosEvaluacionEmpleado.convertRowIndexToModel(intSelectedRow)];
						}
					}
					
					this.aumentarTamanioFilaNuevaTablaEvaluacionEmpleado();
					
					if(this.conTotales) {
						this.quitarFilaTotales();
					}
					
					this.nuevoPreparar(true);
					
					this.evaluacionempleado.setsType("DUPLICADO");
					
					this.setCopiarVariablesObjetosEvaluacionEmpleado(evaluacionempleadoOrigen,this.evaluacionempleado,true,true);
					
					this.setVariablesFormularioToObjetoActualForeignKeysEvaluacionEmpleado(this.evaluacionempleado);
					
					//LO HACE NUEVOPREPARAR
					/*
					if(Constantes.ISUSAEJBLOGICLAYER) {				
						this.evaluacionempleadoLogic.getEvaluacionEmpleados().add(this.evaluacionempleadoAux);
					} else if(Constantes.ISUSAEJBREMOTE||Constantes.ISUSAEJBHOME) {
						this.evaluacionempleados.add(this.evaluacionempleadoAux);				
					}
					*/
				}
				
				this.inicializarActualizarBindingTablaEvaluacionEmpleado(false);
				
				this.jTableDatosEvaluacionEmpleado.setRowSelectionInterval(this.getIndiceNuevoEvaluacionEmpleado(), this.getIndiceNuevoEvaluacionEmpleado());
				
				int iLastRow =  this.jTableDatosEvaluacionEmpleado.getRowCount () - 1;
				Rectangle rectangle = this.jTableDatosEvaluacionEmpleado.getCellRect(iLastRow, 0, true);
				
				this.jTableDatosEvaluacionEmpleado.scrollRectToVisible(rectangle);
				
				//FILA TOTALES
				if(this.conTotales) {
					this.crearFilaTotales();
					
					this.inicializarActualizarBindingTablaEvaluacionEmpleado(false);
				}
			} else {
				throw new Exception("DEBE ESTAR SELECCIONADO 1 REGISTRO");
			}
			
		} catch(Exception e) {			
			FuncionesSwing.manageException(this, e,logger,EvaluacionEmpleadoConstantesFunciones.CLASSNAME);
		
		} finally {
			this.estaModoNuevo=false;
			this.estaModoDuplicar=false;
		}
	}
	
	public void jButtonCopiarEvaluacionEmpleadoActionPerformed(ActionEvent evt) throws Exception {   
		try {
			
			Boolean conSeleccionarFilaTabla=false;
			Integer iNumRowsSeleccionados=0;
			int[] intSelectedRows =null;
			int intSelectedRow =0;
			
			this.estaModoCopiar=true;
			
			ArrayList<EvaluacionEmpleado> evaluacionempleadosSeleccionados=new ArrayList<EvaluacionEmpleado>();									
		
			EvaluacionEmpleado evaluacionempleadoOrigen=new EvaluacionEmpleado();
			EvaluacionEmpleado evaluacionempleadoDestino=new EvaluacionEmpleado();
				
			evaluacionempleadosSeleccionados=this.getEvaluacionEmpleadosSeleccionados(false);
			
			if(conSeleccionarFilaTabla) {
				iNumRowsSeleccionados=this.jTableDatosEvaluacionEmpleado.getSelectedRows().length;	
			}
			
			if(iNumRowsSeleccionados.equals(2) || evaluacionempleadosSeleccionados.size()==2) {
				if(conSeleccionarFilaTabla) {
					intSelectedRows =this.jTableDatosEvaluacionEmpleado.getSelectedRows();
					intSelectedRow = intSelectedRows[0];	
									
					//ARCHITECTURE
					if(Constantes.ISUSAEJBLOGICLAYER) {
						evaluacionempleadoOrigen =(EvaluacionEmpleado) this.evaluacionempleadoLogic.getEvaluacionEmpleados().toArray()[this.jTableDatosEvaluacionEmpleado.convertRowIndexToModel(intSelectedRow)];
					} else if(Constantes.ISUSAEJBREMOTE || Constantes.ISUSAEJBHOME) {
						evaluacionempleadoOrigen =(EvaluacionEmpleado) this.evaluacionempleados.toArray()[this.jTableDatosEvaluacionEmpleado.convertRowIndexToModel(intSelectedRow)];
					}
					//ARCHITECTURE
					
					intSelectedRow = intSelectedRows[1];
					
					//ARCHITECTURE
					if(Constantes.ISUSAEJBLOGICLAYER) {
						evaluacionempleadoDestino =(EvaluacionEmpleado) this.evaluacionempleadoLogic.getEvaluacionEmpleados().toArray()[this.jTableDatosEvaluacionEmpleado.convertRowIndexToModel(intSelectedRow)];
					} else if(Constantes.ISUSAEJBREMOTE || Constantes.ISUSAEJBHOME) {
						evaluacionempleadoDestino =(EvaluacionEmpleado) this.evaluacionempleados.toArray()[this.jTableDatosEvaluacionEmpleado.convertRowIndexToModel(intSelectedRow)];
					}
					//ARCHITECTURE
				}
				
				evaluacionempleadoOrigen =evaluacionempleadosSeleccionados.get(0);
				evaluacionempleadoDestino =evaluacionempleadosSeleccionados.get(1);
				
				this.setCopiarVariablesObjetosEvaluacionEmpleado(evaluacionempleadoOrigen,evaluacionempleadoDestino,true,false);
				
				evaluacionempleadoDestino.setsType("DUPLICADO");
				
				//ARCHITECTURE
				if(Constantes.ISUSAEJBLOGICLAYER) {
					actualizarLista(evaluacionempleadoDestino,evaluacionempleadoLogic.getEvaluacionEmpleados());					
				} else if(Constantes.ISUSAEJBREMOTE||Constantes.ISUSAEJBHOME) {
					actualizarLista(evaluacionempleadoDestino,evaluacionempleados);
				}
				//ARCHITECTURE
				
				this.inicializarActualizarBindingTablaEvaluacionEmpleado(false);
				
				//this.jTableDatosEvaluacionEmpleado.setRowSelectionInterval(this.getIndiceNuevoEvaluacionEmpleado(), this.getIndiceNuevoEvaluacionEmpleado());
				
				int iLastRow =  this.jTableDatosEvaluacionEmpleado.getRowCount () - 1;
				Rectangle rectangle = this.jTableDatosEvaluacionEmpleado.getCellRect(iLastRow, 0, true);
				
				this.jTableDatosEvaluacionEmpleado.scrollRectToVisible(rectangle);
				
				//FILA TOTALES
				if(this.conTotales) {
					//this.crearFilaTotales();
					
					this.inicializarActualizarBindingTablaEvaluacionEmpleado(false);
				}
			} else {
				throw new Exception("DEBEN ESTAR SELECCIONADOS 2 REGISTROS");
			}
		} catch(Exception e) {
			FuncionesSwing.manageException(this, e,logger,EvaluacionEmpleadoConstantesFunciones.CLASSNAME);
		
		}  finally {
			this.estaModoCopiar=false;
		}
	}
	
	public void jButtonVerFormEvaluacionEmpleadoActionPerformed(ActionEvent evt) throws Exception {   
		try {
			
			if(this.jInternalFrameDetalleFormEvaluacionEmpleado==null) { //if(!this.conCargarFormDetalle) {
				this.inicializarFormDetalle();
			}
			
			this.jInternalFrameDetalleFormEvaluacionEmpleado.setSelected(true);
			
		} catch(Exception e) {
			FuncionesSwing.manageException(this, e,logger,EvaluacionEmpleadoConstantesFunciones.CLASSNAME);
		}
	}
	
	public void jButtonMostrarOcultarEvaluacionEmpleadoActionPerformed(ActionEvent evt) throws Exception {   
		try {
			Boolean isVisible=this.jPanelParametrosReportesEvaluacionEmpleado.isVisible();
			
			//BYDAN_BUSQUEDAS
			
			this.jTabbedPaneBusquedasEvaluacionEmpleado.setVisible(!isVisible);			
			
			
			this.jPanelParametrosReportesEvaluacionEmpleado.setVisible(!isVisible);
			this.jPanelPaginacionEvaluacionEmpleado.setVisible(!isVisible);
			this.jPanelAccionesEvaluacionEmpleado.setVisible(!isVisible);
							
		} catch(Exception e) {
			FuncionesSwing.manageException(this, e,logger,EvaluacionEmpleadoConstantesFunciones.CLASSNAME);
		}
	}
	
	public void jButtonCerrarEvaluacionEmpleadoActionPerformed(ActionEvent evt) throws Exception {   
		try {
			this.closingInternalFrameEvaluacionEmpleado();
			
			//if(this.jInternalFrameParent==null) {
				//this.dispose();
			/*} else {
				this.setVisible(false);
	        	this.setSelected(false);	
			}*/			
		} catch(Exception e) {
			FuncionesSwing.manageException(this, e,logger,EvaluacionEmpleadoConstantesFunciones.CLASSNAME);
		}
	}
	
	public void jButtonCerrarReporteDinamicoEvaluacionEmpleadoActionPerformed(ActionEvent evt) throws Exception {   
		try {
			
			this.cerrarFrameReporteDinamicoEvaluacionEmpleado();
			
						
		} catch(Exception e) {
			FuncionesSwing.manageException(this, e,logger,EvaluacionEmpleadoConstantesFunciones.CLASSNAME);
		}
	}
	
	public void jButtonCerrarImportacionEvaluacionEmpleadoActionPerformed(ActionEvent evt) throws Exception {   
		try {
			
			this.cerrarFrameImportacionEvaluacionEmpleado();
			
						
		} catch(Exception e) {
			FuncionesSwing.manageException(this, e,logger,EvaluacionEmpleadoConstantesFunciones.CLASSNAME);
		}
	}
	
	
	public void jButtonAbrirOrderByEvaluacionEmpleadoActionPerformed(ActionEvent evt) throws Exception {   
		try {
			
			
			this.abrirInicializarFrameOrderByEvaluacionEmpleado();
			
			this.abrirFrameOrderByEvaluacionEmpleado();
			
			
		} catch(Exception e) {
			FuncionesSwing.manageException(this, e,logger,EvaluacionEmpleadoConstantesFunciones.CLASSNAME);
		}
	}
	
	public void jButtonCerrarOrderByEvaluacionEmpleadoActionPerformed(ActionEvent evt) throws Exception {   
		try {
			
			this.cerrarFrameOrderByEvaluacionEmpleado();
			
						
		} catch(Exception e) {
			FuncionesSwing.manageException(this, e,logger,EvaluacionEmpleadoConstantesFunciones.CLASSNAME);
		}
	}
	
	public void abrirFrameDetalleEvaluacionEmpleado(Boolean esRelaciones) throws Exception {	    	        
	    try {
			//CAUSA PROBLEMAS, SE ADICIONA EN CONSTRUCTOR, LUEGO SOLO VISIBLE true y false
			//this.jDesktopPane.add(jInternalFrameDetalleFormEvaluacionEmpleado);
			
			if(!esRelaciones) {
				if(this.jInternalFrameDetalleFormEvaluacionEmpleado.isMaximum()) {
					this.jInternalFrameDetalleFormEvaluacionEmpleado.setMaximum(false);
				}								
				
	    		this.jInternalFrameDetalleFormEvaluacionEmpleado.setSize(this.jInternalFrameDetalleFormEvaluacionEmpleado.iWidthFormulario,this.jInternalFrameDetalleFormEvaluacionEmpleado.iHeightFormulario);
	    	} else {
				if(this.iWidthScroll<this.jInternalFrameDetalleFormEvaluacionEmpleado.iWidthFormularioMaximo) {
	    			this.jInternalFrameDetalleFormEvaluacionEmpleado.setSize(this.iWidthScroll,this.iHeightScroll);
				} else {
					if(!this.jInternalFrameDetalleFormEvaluacionEmpleado.isMaximum()) {
						this.jInternalFrameDetalleFormEvaluacionEmpleado.setMaximum(true);
					}
				}
				
				if(this.jInternalFrameDetalleFormEvaluacionEmpleado.jContentPaneDetalleEvaluacionEmpleado.getWidth() > this.getWidth()) {
					this.jInternalFrameDetalleFormEvaluacionEmpleado.jTabbedPaneRelacionesEvaluacionEmpleado.setMinimumSize(new Dimension(this.jInternalFrameDetalleFormEvaluacionEmpleado.jContentPaneDetalleEvaluacionEmpleado.getWidth(),EvaluacionEmpleadoConstantesFunciones.ALTO_TABPANE_RELACIONES));
					this.jInternalFrameDetalleFormEvaluacionEmpleado.jTabbedPaneRelacionesEvaluacionEmpleado.setMaximumSize(new Dimension(this.jInternalFrameDetalleFormEvaluacionEmpleado.jContentPaneDetalleEvaluacionEmpleado.getWidth(),EvaluacionEmpleadoConstantesFunciones.ALTO_TABPANE_RELACIONES));
					this.jInternalFrameDetalleFormEvaluacionEmpleado.jTabbedPaneRelacionesEvaluacionEmpleado.setPreferredSize(new Dimension(this.jInternalFrameDetalleFormEvaluacionEmpleado.jContentPaneDetalleEvaluacionEmpleado.getWidth(),EvaluacionEmpleadoConstantesFunciones.ALTO_TABPANE_RELACIONES));
					
					Dimension dimension=new Dimension(); 
					
					

					if(CalificacionEmpleadoJInternalFrame.ESTA_CARGADO_PORPARTE) {
						this.redimensionarTablaPanelRelacionadaCalificacionEmpleado();
					}
					
				}
	    	}
			
		
	       	this.jInternalFrameDetalleFormEvaluacionEmpleado.setVisible(true);
	        this.jInternalFrameDetalleFormEvaluacionEmpleado.setSelected(true);
		
	    } catch (final java.beans.PropertyVetoException e) {
		
			FuncionesSwing.manageException(this, e,logger,EvaluacionEmpleadoConstantesFunciones.CLASSNAME);
	    }
	}
	
	
	public void abrirInicializarFrameOrderByEvaluacionEmpleado() throws Exception {	    	        
	    try {
			if(this.jInternalFrameOrderByEvaluacionEmpleado==null) {
				
				if(!this.conCargarMinimo) {
					this.jInternalFrameOrderByEvaluacionEmpleado=new OrderByJInternalFrame(STIPO_TAMANIO_GENERAL,this.jButtonAbrirOrderByEvaluacionEmpleado,false,this);
				} else {
					this.jInternalFrameOrderByEvaluacionEmpleado=new OrderByJInternalFrame(STIPO_TAMANIO_GENERAL,this.jButtonAbrirOrderByEvaluacionEmpleado,true,this);
				}
				
				this.jDesktopPane.add(this.jInternalFrameOrderByEvaluacionEmpleado);
				this.jInternalFrameOrderByEvaluacionEmpleado.setVisible(false);
				this.jInternalFrameOrderByEvaluacionEmpleado.setSelected(false);
				
				this.jInternalFrameOrderByEvaluacionEmpleado.getjButtonCerrarOrderBy().addActionListener (new ButtonActionListener(this,"CerrarOrderByEvaluacionEmpleado"));
				
				this.inicializarActualizarBindingTablaOrderByEvaluacionEmpleado();
			}
		} catch (final Exception e) {
			
		}
	}
	
	
	
	public void abrirInicializarFrameImportacionEvaluacionEmpleado() throws Exception {	    	        
	    try {
			if(this.jInternalFrameImportacionEvaluacionEmpleado==null) {
				
				this.jInternalFrameImportacionEvaluacionEmpleado=new ImportacionJInternalFrame(EvaluacionEmpleadoConstantesFunciones.SCLASSWEBTITULO,this);			
				
				MainJFrame.cerrarJInternalFramesExistentes(this.jDesktopPane,this.jInternalFrameImportacionEvaluacionEmpleado);							
				
				this.jDesktopPane.add(this.jInternalFrameImportacionEvaluacionEmpleado);
				this.jInternalFrameImportacionEvaluacionEmpleado.setVisible(false);
				this.jInternalFrameImportacionEvaluacionEmpleado.setSelected(false);


				this.jInternalFrameImportacionEvaluacionEmpleado.getjButtonCerrarImportacion().addActionListener (new ButtonActionListener(this,"CerrarImportacionEvaluacionEmpleado"));
				this.jInternalFrameImportacionEvaluacionEmpleado.getjButtonGenerarImportacion().addActionListener (new ButtonActionListener(this,"GenerarImportacionEvaluacionEmpleado"));
				this.jInternalFrameImportacionEvaluacionEmpleado.getjButtonAbrirImportacion().addActionListener (new ButtonActionListener(this,"AbrirImportacionEvaluacionEmpleado"));


			}
		} catch (final Exception e) {
			
		}
	}		
	
	
	
	public void abrirInicializarFrameReporteDinamicoEvaluacionEmpleado() throws Exception {	    	        
	    try {
			
			if(this.jInternalFrameReporteDinamicoEvaluacionEmpleado==null) {
				this.jInternalFrameReporteDinamicoEvaluacionEmpleado=new ReporteDinamicoJInternalFrame(EvaluacionEmpleadoConstantesFunciones.SCLASSWEBTITULO,this);	
				
				MainJFrame.cerrarJInternalFramesExistentes(this.jDesktopPane,this.jInternalFrameReporteDinamicoEvaluacionEmpleado);	
	
	
				this.jDesktopPane.add(this.jInternalFrameReporteDinamicoEvaluacionEmpleado);
				this.jInternalFrameReporteDinamicoEvaluacionEmpleado.setVisible(false);
				this.jInternalFrameReporteDinamicoEvaluacionEmpleado.setSelected(false);
	
	
	
				this.jInternalFrameReporteDinamicoEvaluacionEmpleado.getjButtonCerrarReporteDinamico().addActionListener (new ButtonActionListener(this,"CerrarReporteDinamicoEvaluacionEmpleado"));
				this.jInternalFrameReporteDinamicoEvaluacionEmpleado.getjButtonGenerarReporteDinamico().addActionListener (new ButtonActionListener(this,"GenerarReporteDinamicoEvaluacionEmpleado"));
				this.jInternalFrameReporteDinamicoEvaluacionEmpleado.getjButtonGenerarExcelReporteDinamico().addActionListener (new ButtonActionListener(this,"GenerarExcelReporteDinamicoEvaluacionEmpleado"));
	
				this.inicializarActualizarBindingtiposArchivosReportesDinamicoAccionesManualEvaluacionEmpleado();
			}

		} catch (final Exception e) {
			
		}
	}	
	
	
	
		

	public void redimensionarTablaPanelRelacionadaCalificacionEmpleado() {
		Dimension dimension=new Dimension();

		dimension=this.jInternalFrameDetalleFormEvaluacionEmpleado.calificacionempleadoBeanSwingJInternalFrame.jScrollPanelDatosCalificacionEmpleado.getPreferredSize();
		dimension.setSize(this.jInternalFrameDetalleFormEvaluacionEmpleado.jContentPaneDetalleEvaluacionEmpleado.getWidth(),dimension.getHeight());

		this.jInternalFrameDetalleFormEvaluacionEmpleado.calificacionempleadoBeanSwingJInternalFrame.jScrollPanelDatosCalificacionEmpleado.setMinimumSize(dimension);
		this.jInternalFrameDetalleFormEvaluacionEmpleado.calificacionempleadoBeanSwingJInternalFrame.jScrollPanelDatosCalificacionEmpleado.setMaximumSize(dimension);
		this.jInternalFrameDetalleFormEvaluacionEmpleado.calificacionempleadoBeanSwingJInternalFrame.jScrollPanelDatosCalificacionEmpleado.setPreferredSize(dimension);


	}
					
	public void cerrarFrameDetalleEvaluacionEmpleado() throws Exception {	    	        
	    try {
			//this.jDesktopPane.add(jInternalFrameDetalleFormEvaluacionEmpleado);
			
	       	this.jInternalFrameDetalleFormEvaluacionEmpleado.setVisible(false);
	        this.jInternalFrameDetalleFormEvaluacionEmpleado.setSelected(false);
			
			//this.jInternalFrameDetalleFormEvaluacionEmpleado.dispose();
			//this.jInternalFrameDetalleFormEvaluacionEmpleado=null;
			
	    } catch (final java.beans.PropertyVetoException e) {
		
			FuncionesSwing.manageException(this, e,logger,EvaluacionEmpleadoConstantesFunciones.CLASSNAME);
	    }
	}
	
	
	public void abrirFrameReporteDinamicoEvaluacionEmpleado() throws Exception {	    	        
	    try {
			
			this.jInternalFrameReporteDinamicoEvaluacionEmpleado.setVisible(true);
	        this.jInternalFrameReporteDinamicoEvaluacionEmpleado.setSelected(true);			
			
	    } catch (final java.beans.PropertyVetoException e) {
		
			FuncionesSwing.manageException(this, e,logger,EvaluacionEmpleadoConstantesFunciones.CLASSNAME);
	    }		
	}
	
	
	
	public void abrirFrameImportacionEvaluacionEmpleado() throws Exception {	    	        		
	    try {			
			this.jInternalFrameImportacionEvaluacionEmpleado.setVisible(true);
	        this.jInternalFrameImportacionEvaluacionEmpleado.setSelected(true);			
			
	    } catch (final java.beans.PropertyVetoException e) {
		
			FuncionesSwing.manageException(this, e,logger,EvaluacionEmpleadoConstantesFunciones.CLASSNAME);
	    }		
	}	
	
	
	
	
	
	public void abrirFrameOrderByEvaluacionEmpleado() throws Exception {	    	        		
	    try {
			this.jInternalFrameOrderByEvaluacionEmpleado.setVisible(true);
	        this.jInternalFrameOrderByEvaluacionEmpleado.setSelected(true);			
			
	    } catch (final java.beans.PropertyVetoException e) {
		
			FuncionesSwing.manageException(this, e,logger,EvaluacionEmpleadoConstantesFunciones.CLASSNAME);
	    }		
	}
	
	
	
	public void cerrarFrameOrderByEvaluacionEmpleado() throws Exception {	    	        		
	    try {			
			this.jInternalFrameOrderByEvaluacionEmpleado.setVisible(false);
	        this.jInternalFrameOrderByEvaluacionEmpleado.setSelected(false);			
		
	    } catch (final java.beans.PropertyVetoException e) {
		
			FuncionesSwing.manageException(this, e,logger,EvaluacionEmpleadoConstantesFunciones.CLASSNAME);
	    }		
	}
	
	
	
	public void cerrarFrameReporteDinamicoEvaluacionEmpleado() throws Exception {			
	    try {
			this.jInternalFrameReporteDinamicoEvaluacionEmpleado.setVisible(false);
	        this.jInternalFrameReporteDinamicoEvaluacionEmpleado.setSelected(false);			
		
	    } catch (final java.beans.PropertyVetoException e) {
		
			FuncionesSwing.manageException(this, e,logger,EvaluacionEmpleadoConstantesFunciones.CLASSNAME);
	    }		
	}
	
	
	
	public void cerrarFrameImportacionEvaluacionEmpleado() throws Exception {	    	        		
	    try {
			this.jInternalFrameImportacionEvaluacionEmpleado.setVisible(false);
	        this.jInternalFrameImportacionEvaluacionEmpleado.setSelected(false);
		
	    } catch (final java.beans.PropertyVetoException e) {
		
			FuncionesSwing.manageException(this, e,logger,EvaluacionEmpleadoConstantesFunciones.CLASSNAME);
	    }		
	}
	
	
	

				public void abrirFrameTreeEstructura(String sTipoProceso) { //throws Exception
					try {
						//CAUSA PROBLEMAS, SE ADICIONA EN CONSTRUCTOR, LUEGO SOLO VISIBLE true y false
						//this.jDesktopPane.add(jInternalFrameTreeEstructura);
						EstructuraBeanSwingJInternalFrame estructuraBeanSwingJInternalFrame=new EstructuraBeanSwingJInternalFrame(true,true,this.jDesktopPane,this.usuarioActual,this.resumenUsuarioActual,this.moduloActual,this.opcionActual,this.parametroGeneralSg,this.parametroGeneralUsuario,PaginaTipo.BUSQUEDA,false,false,false,true);
						estructuraBeanSwingJInternalFrame.setJInternalFrameParent(this);
						estructuraBeanSwingJInternalFrame.jInternalFrameTreeEstructura.setsTipoProceso(sTipoProceso);

						if(sTipoProceso.equals("BUSQUEDA_FK")) {
							estructuraBeanSwingJInternalFrame.jInternalFrameTreeEstructura.sTipoBusqueda="Estructura";
						}

						estructuraBeanSwingJInternalFrame.getTodosEstructuraArbol();
						estructuraBeanSwingJInternalFrame.jInternalFrameTreeEstructura.setEstructuras(estructuraBeanSwingJInternalFrame.estructurasArbol);
						estructuraBeanSwingJInternalFrame.jInternalFrameTreeEstructura.CargarTreeEstructura();
						estructuraBeanSwingJInternalFrame.jInternalFrameTreeEstructura.setVisible(true);
						estructuraBeanSwingJInternalFrame.jInternalFrameTreeEstructura.setSelected(true);

						//SE CAMBIA PARENT ORIGINAL PARA QUE RETORNE EN ESTE FORMULARIO
						estructuraBeanSwingJInternalFrame.jInternalFrameTreeEstructura.jInternalFrameParent=this;
						TitledBorder titledBorderEvaluacionEmpleado=(TitledBorder)this.jScrollPanelDatosEvaluacionEmpleado.getBorder();
						TitledBorder titledBorderEstructura=(TitledBorder)estructuraBeanSwingJInternalFrame.jScrollPanelDatosEstructura.getBorder();

						titledBorderEstructura.setTitle(titledBorderEvaluacionEmpleado.getTitle() + " -> Estructura");


						if(!Constantes.CON_VARIAS_VENTANAS) {
							MainJFrame.cerrarJInternalFramesExistentes(this.jDesktopPane,estructuraBeanSwingJInternalFrame);
						}
						this.jDesktopPane.add(estructuraBeanSwingJInternalFrame);

					} catch (Exception e) {
						e.getStackTrace();
						//Funciones<%=getFrameworkDomain()%>.manageException(this, e,logger,<%=GetNombreClaseC(TablaBase.ToString())%>ConstantesFunciones.CLASSNAME);
					}
				}

				public void cerrarFrameTreeEstructura(EstructuraBeanSwingJInternalFrame jInternalFrameTreeEstructura) throws Exception {
					try {
						//jDesktopPane.add(jInternalFrameTreeEstructura);
						jInternalFrameTreeEstructura.setVisible(false);
						jInternalFrameTreeEstructura.setSelected(false);
						//jInternalFrameTreeEstructura.dispose();
						//jInternalFrameTreeEstructura=null;
					} catch (final java.beans.PropertyVetoException e) {
						FuncionesSwing.manageException(this, e,logger);
					}
				}
	
	public void jButtonModificarEvaluacionEmpleadoActionPerformed(ActionEvent evt) throws Exception {   
		try {
			this.modificarEvaluacionEmpleado(evt,-1,false);
		
		} catch(Exception e) {
			FuncionesSwing.manageException(this, e,logger,EvaluacionEmpleadoConstantesFunciones.CLASSNAME);
		}
	}
	
	public void modificarEvaluacionEmpleado(ActionEvent evt,int rowIndex,Boolean esRelaciones) throws Exception {   
		try {
			int intSelectedRow = 0;	
			
			if(rowIndex>=0) {
				intSelectedRow=rowIndex;
			} else {
				intSelectedRow = this.jTableDatosEvaluacionEmpleado.getSelectedRow();
			}
			
			this.habilitarDeshabilitarControlesEvaluacionEmpleado(true);
			//this.isEsNuevoEvaluacionEmpleado=false;
			
			//ARCHITECTURE
			if(Constantes.ISUSAEJBLOGICLAYER) {
				this.evaluacionempleado =(EvaluacionEmpleado) this.evaluacionempleadoLogic.getEvaluacionEmpleados().toArray()[this.jTableDatosEvaluacionEmpleado.convertRowIndexToModel(intSelectedRow)];
			} else if(Constantes.ISUSAEJBREMOTE || Constantes.ISUSAEJBHOME ) {
				this.evaluacionempleado =(EvaluacionEmpleado) this.evaluacionempleados.toArray()[this.jTableDatosEvaluacionEmpleado.convertRowIndexToModel(intSelectedRow)];
			}
			//ARCHITECTURE
			
			this.actualizarEstadoCeldasBotonesEvaluacionEmpleado("ae", isGuardarCambiosEnLote, isEsMantenimientoRelacionado);
			
			//NO FUNCIONA BINDINGS
			this.inicializarActualizarBindingBotonesEvaluacionEmpleado(false) ;
			
			if(evaluacionempleadoSessionBean.getConGuardarRelaciones()) {
			

				if(this.jInternalFrameDetalleFormEvaluacionEmpleado.calificacionempleadoBeanSwingJInternalFrame!=null && this.jInternalFrameDetalleFormEvaluacionEmpleado.calificacionempleadoBeanSwingJInternalFrame.calificacionempleadoSessionBean.getEsGuardarRelacionado() && CalificacionEmpleadoJInternalFrame.ESTA_CARGADO_PORPARTE) {
					this.jButtonCalificacionEmpleadoActionPerformed(null,intSelectedRow,false,true,null);
				}
			}
			
			if(EvaluacionEmpleadoJInternalFrame.CON_DATOS_FRAME) {
				this.abrirFrameDetalleEvaluacionEmpleado(esRelaciones);
			}
			
			//SI ES MANUAL
			//this.inicializarActualizarBindingBotonesManualEvaluacionEmpleado(false) ;
		
		} catch(Exception e) {
			FuncionesSwing.manageException(this, e,logger,EvaluacionEmpleadoConstantesFunciones.CLASSNAME);
		}
	}
	
	public void seleccionarFilaTablaEvaluacionEmpleadoActual() { 	  
		try {
			//SELECCIONA FILA A OBJETO ACTUAL
			Integer intSelectedRow = this.jTableDatosEvaluacionEmpleado.getSelectedRow();
					
			if(intSelectedRow!=null && intSelectedRow>-1) {
				//ARCHITECTURE
				if(Constantes.ISUSAEJBLOGICLAYER) {
					this.evaluacionempleado =(EvaluacionEmpleado) this.evaluacionempleadoLogic.getEvaluacionEmpleados().toArray()[this.jTableDatosEvaluacionEmpleado.convertRowIndexToModel(intSelectedRow)];
				} else if(Constantes.ISUSAEJBREMOTE || Constantes.ISUSAEJBHOME ) {
					this.evaluacionempleado =(EvaluacionEmpleado) this.evaluacionempleados.toArray()[this.jTableDatosEvaluacionEmpleado.convertRowIndexToModel(intSelectedRow)];
				}
				//ARCHITECTURE
				
				//System.out.println(this.banco);
			}
			
		} catch(Exception e) {
  			FuncionesSwing.manageException2(this, e,logger,EvaluacionEmpleadoConstantesFunciones.CLASSNAME);
  		}
    }	
	
	public void seleccionarEvaluacionEmpleado(ActionEvent evt,int rowIndex) throws Exception {   
		try {
			
			if(this.jInternalFrameDetalleFormEvaluacionEmpleado==null) { //if(!this.conCargarFormDetalle) {
				this.inicializarFormDetalle();
			}
			
			int intSelectedRow = 0;	
			
			if(rowIndex>=0) {
				intSelectedRow=rowIndex;
			} else {
				intSelectedRow = this.jTableDatosEvaluacionEmpleado.getSelectedRow();
			}
			
			//this.habilitarDeshabilitarControlesEvaluacionEmpleado(true);
			//this.isEsNuevoEvaluacionEmpleado=false;
			
			//ARCHITECTURE
			if(Constantes.ISUSAEJBLOGICLAYER) {
				this.evaluacionempleado =(EvaluacionEmpleado) this.evaluacionempleadoLogic.getEvaluacionEmpleados().toArray()[this.jTableDatosEvaluacionEmpleado.convertRowIndexToModel(intSelectedRow)];
			} else if(Constantes.ISUSAEJBREMOTE || Constantes.ISUSAEJBHOME ) {
				this.evaluacionempleado =(EvaluacionEmpleado) this.evaluacionempleados.toArray()[this.jTableDatosEvaluacionEmpleado.convertRowIndexToModel(intSelectedRow)];
			}
			//ARCHITECTURE
			
			this.jInternalFrameParent.setIdCombosCodigoDesdeBusquedaForeignKey(this.evaluacionempleado.getId(),this.sTipoBusqueda);
			
			this.dispose();
			
			//this.actualizarEstadoCeldasBotonesEvaluacionEmpleado("ae", isGuardarCambiosEnLote, isEsMantenimientoRelacionado);
			
			//NO FUNCIONA BINDINGS
			/*
			this.inicializarActualizarBindingBotonesEvaluacionEmpleado(false) ;
			
			if(EvaluacionEmpleadoJInternalFrame.CON_DATOS_FRAME) {
				this.abrirFrameDetalleEvaluacionEmpleado(esRelaciones);
			}
			*/
			
			//SI ES MANUAL
			//this.inicializarActualizarBindingBotonesManualEvaluacionEmpleado(false) ;
		
		} catch(Exception e) {
			FuncionesSwing.manageException(this, e,logger,EvaluacionEmpleadoConstantesFunciones.CLASSNAME);
		}
	}		
	
	public void setIdCombosCodigoDesdeBusquedaForeignKey(Long id,String sType)throws Exception{
		
		try {
		} catch(Exception e) {
			throw e;
		}
	}
	
					
	
	public void recargarComboTablaEstructura(List<Estructura> estructurasForeignKey)throws Exception{
		TableColumn tableColumnEstructura=this.jTableDatosEvaluacionEmpleado.getColumnModel().getColumn(Funciones2.getColumnIndexByName(this.jTableDatosEvaluacionEmpleado,EvaluacionEmpleadoConstantesFunciones.LABEL_IDESTRUCTURA));
		TableCellEditor tableCellEditorEstructura =tableColumnEstructura.getCellEditor();

		EstructuraTableCell estructuraTableCellFk=(EstructuraTableCell)tableCellEditorEstructura;

		if(estructuraTableCellFk!=null) {
			estructuraTableCellFk.setestructurasForeignKey(estructurasForeignKey);
		}


		//SIEMPRE rowActual<0 , NO USADO POR EL MOMENTO
		//COMBO DE FILA ACTUAL SE ACTUALIZA, LOS DEMAS USAN EL ANTERIOR COMBO
		//int intSelectedRow = -1;
		//intSelectedRow=this.jTableDatosEvaluacionEmpleado.getSelectedRow();

		//if(intSelectedRow<=0) {
			//estructuraTableCellFk.setRowActual(intSelectedRow);
			//estructuraTableCellFk.setestructurasForeignKeyActual(estructurasForeignKey);
		//}


		if(estructuraTableCellFk!=null) {
			estructuraTableCellFk.RecargarEstructurasForeignKey();
			//ACTUALIZA COMBOS DE TABLA-FIN
		}

	}	
	
	
	public void recargarComboTablaEmpleado(List<Empleado> empleadosForeignKey)throws Exception{
		TableColumn tableColumnEmpleado=this.jTableDatosEvaluacionEmpleado.getColumnModel().getColumn(Funciones2.getColumnIndexByName(this.jTableDatosEvaluacionEmpleado,EvaluacionEmpleadoConstantesFunciones.LABEL_IDEMPLEADO));
		TableCellEditor tableCellEditorEmpleado =tableColumnEmpleado.getCellEditor();

		EmpleadoTableCell empleadoTableCellFk=(EmpleadoTableCell)tableCellEditorEmpleado;

		if(empleadoTableCellFk!=null) {
			empleadoTableCellFk.setempleadosForeignKey(empleadosForeignKey);
		}


		//SIEMPRE rowActual<0 , NO USADO POR EL MOMENTO
		//COMBO DE FILA ACTUAL SE ACTUALIZA, LOS DEMAS USAN EL ANTERIOR COMBO
		//int intSelectedRow = -1;
		//intSelectedRow=this.jTableDatosEvaluacionEmpleado.getSelectedRow();

		//if(intSelectedRow<=0) {
			//empleadoTableCellFk.setRowActual(intSelectedRow);
			//empleadoTableCellFk.setempleadosForeignKeyActual(empleadosForeignKey);
		//}


		if(empleadoTableCellFk!=null) {
			empleadoTableCellFk.RecargarEmpleadosForeignKey();
			//ACTUALIZA COMBOS DE TABLA-FIN
		}

	}	
	
	
	public void recargarComboTablaEmpleadoEvalua(List<Empleado> empleadoevaluasForeignKey)throws Exception{
		TableColumn tableColumnEmpleadoEvalua=this.jTableDatosEvaluacionEmpleado.getColumnModel().getColumn(Funciones2.getColumnIndexByName(this.jTableDatosEvaluacionEmpleado,EvaluacionEmpleadoConstantesFunciones.LABEL_IDEMPLEADOEVALUA));
		TableCellEditor tableCellEditorEmpleadoEvalua =tableColumnEmpleadoEvalua.getCellEditor();

		EmpleadoTableCell empleadoTableCellFk=(EmpleadoTableCell)tableCellEditorEmpleadoEvalua;

		if(empleadoTableCellFk!=null) {
			empleadoTableCellFk.setempleadosForeignKey(empleadoevaluasForeignKey);
		}


		//SIEMPRE rowActual<0 , NO USADO POR EL MOMENTO
		//COMBO DE FILA ACTUAL SE ACTUALIZA, LOS DEMAS USAN EL ANTERIOR COMBO
		//int intSelectedRow = -1;
		//intSelectedRow=this.jTableDatosEvaluacionEmpleado.getSelectedRow();

		//if(intSelectedRow<=0) {
			//empleadoTableCellFk.setRowActual(intSelectedRow);
			//empleadoTableCellFk.setempleadosForeignKeyActual(empleadoevaluasForeignKey);
		//}


		if(empleadoTableCellFk!=null) {
			empleadoTableCellFk.RecargarEmpleadosForeignKey();
			//ACTUALIZA COMBOS DE TABLA-FIN
		}

	}	
	
	
	public void recargarComboTablaTipoEvaluacionEmpleado(List<TipoEvaluacionEmpleado> tipoevaluacionempleadosForeignKey)throws Exception{
		TableColumn tableColumnTipoEvaluacionEmpleado=this.jTableDatosEvaluacionEmpleado.getColumnModel().getColumn(Funciones2.getColumnIndexByName(this.jTableDatosEvaluacionEmpleado,EvaluacionEmpleadoConstantesFunciones.LABEL_IDTIPOEVALUACIONEMPLEADO));
		TableCellEditor tableCellEditorTipoEvaluacionEmpleado =tableColumnTipoEvaluacionEmpleado.getCellEditor();

		TipoEvaluacionEmpleadoTableCell tipoevaluacionempleadoTableCellFk=(TipoEvaluacionEmpleadoTableCell)tableCellEditorTipoEvaluacionEmpleado;

		if(tipoevaluacionempleadoTableCellFk!=null) {
			tipoevaluacionempleadoTableCellFk.settipoevaluacionempleadosForeignKey(tipoevaluacionempleadosForeignKey);
		}


		//SIEMPRE rowActual<0 , NO USADO POR EL MOMENTO
		//COMBO DE FILA ACTUAL SE ACTUALIZA, LOS DEMAS USAN EL ANTERIOR COMBO
		//int intSelectedRow = -1;
		//intSelectedRow=this.jTableDatosEvaluacionEmpleado.getSelectedRow();

		//if(intSelectedRow<=0) {
			//tipoevaluacionempleadoTableCellFk.setRowActual(intSelectedRow);
			//tipoevaluacionempleadoTableCellFk.settipoevaluacionempleadosForeignKeyActual(tipoevaluacionempleadosForeignKey);
		//}


		if(tipoevaluacionempleadoTableCellFk!=null) {
			tipoevaluacionempleadoTableCellFk.RecargarTipoEvaluacionEmpleadosForeignKey();
			//ACTUALIZA COMBOS DE TABLA-FIN
		}

	}	
	
	
	public void recargarComboTablaAnio(List<Anio> aniosForeignKey)throws Exception{
		TableColumn tableColumnAnio=this.jTableDatosEvaluacionEmpleado.getColumnModel().getColumn(Funciones2.getColumnIndexByName(this.jTableDatosEvaluacionEmpleado,EvaluacionEmpleadoConstantesFunciones.LABEL_IDANIO));
		TableCellEditor tableCellEditorAnio =tableColumnAnio.getCellEditor();

		AnioTableCell anioTableCellFk=(AnioTableCell)tableCellEditorAnio;

		if(anioTableCellFk!=null) {
			anioTableCellFk.setaniosForeignKey(aniosForeignKey);
		}


		//SIEMPRE rowActual<0 , NO USADO POR EL MOMENTO
		//COMBO DE FILA ACTUAL SE ACTUALIZA, LOS DEMAS USAN EL ANTERIOR COMBO
		//int intSelectedRow = -1;
		//intSelectedRow=this.jTableDatosEvaluacionEmpleado.getSelectedRow();

		//if(intSelectedRow<=0) {
			//anioTableCellFk.setRowActual(intSelectedRow);
			//anioTableCellFk.setaniosForeignKeyActual(aniosForeignKey);
		//}


		if(anioTableCellFk!=null) {
			anioTableCellFk.RecargarAniosForeignKey();
			//ACTUALIZA COMBOS DE TABLA-FIN
		}

	}	
	
	
	public void recargarComboTablaSemestre(List<Semestre> semestresForeignKey)throws Exception{
		TableColumn tableColumnSemestre=this.jTableDatosEvaluacionEmpleado.getColumnModel().getColumn(Funciones2.getColumnIndexByName(this.jTableDatosEvaluacionEmpleado,EvaluacionEmpleadoConstantesFunciones.LABEL_IDSEMESTRE));
		TableCellEditor tableCellEditorSemestre =tableColumnSemestre.getCellEditor();

		SemestreTableCell semestreTableCellFk=(SemestreTableCell)tableCellEditorSemestre;

		if(semestreTableCellFk!=null) {
			semestreTableCellFk.setsemestresForeignKey(semestresForeignKey);
		}


		//SIEMPRE rowActual<0 , NO USADO POR EL MOMENTO
		//COMBO DE FILA ACTUAL SE ACTUALIZA, LOS DEMAS USAN EL ANTERIOR COMBO
		//int intSelectedRow = -1;
		//intSelectedRow=this.jTableDatosEvaluacionEmpleado.getSelectedRow();

		//if(intSelectedRow<=0) {
			//semestreTableCellFk.setRowActual(intSelectedRow);
			//semestreTableCellFk.setsemestresForeignKeyActual(semestresForeignKey);
		//}


		if(semestreTableCellFk!=null) {
			semestreTableCellFk.RecargarSemestresForeignKey();
			//ACTUALIZA COMBOS DE TABLA-FIN
		}

	}	
	
	
	public void recargarComboTablaTrimestre(List<Trimestre> trimestresForeignKey)throws Exception{
		TableColumn tableColumnTrimestre=this.jTableDatosEvaluacionEmpleado.getColumnModel().getColumn(Funciones2.getColumnIndexByName(this.jTableDatosEvaluacionEmpleado,EvaluacionEmpleadoConstantesFunciones.LABEL_IDTRIMESTRE));
		TableCellEditor tableCellEditorTrimestre =tableColumnTrimestre.getCellEditor();

		TrimestreTableCell trimestreTableCellFk=(TrimestreTableCell)tableCellEditorTrimestre;

		if(trimestreTableCellFk!=null) {
			trimestreTableCellFk.settrimestresForeignKey(trimestresForeignKey);
		}


		//SIEMPRE rowActual<0 , NO USADO POR EL MOMENTO
		//COMBO DE FILA ACTUAL SE ACTUALIZA, LOS DEMAS USAN EL ANTERIOR COMBO
		//int intSelectedRow = -1;
		//intSelectedRow=this.jTableDatosEvaluacionEmpleado.getSelectedRow();

		//if(intSelectedRow<=0) {
			//trimestreTableCellFk.setRowActual(intSelectedRow);
			//trimestreTableCellFk.settrimestresForeignKeyActual(trimestresForeignKey);
		//}


		if(trimestreTableCellFk!=null) {
			trimestreTableCellFk.RecargarTrimestresForeignKey();
			//ACTUALIZA COMBOS DE TABLA-FIN
		}

	}	
	
	
	public void recargarComboTablaBimestre(List<Bimestre> bimestresForeignKey)throws Exception{
		TableColumn tableColumnBimestre=this.jTableDatosEvaluacionEmpleado.getColumnModel().getColumn(Funciones2.getColumnIndexByName(this.jTableDatosEvaluacionEmpleado,EvaluacionEmpleadoConstantesFunciones.LABEL_IDBIMESTRE));
		TableCellEditor tableCellEditorBimestre =tableColumnBimestre.getCellEditor();

		BimestreTableCell bimestreTableCellFk=(BimestreTableCell)tableCellEditorBimestre;

		if(bimestreTableCellFk!=null) {
			bimestreTableCellFk.setbimestresForeignKey(bimestresForeignKey);
		}


		//SIEMPRE rowActual<0 , NO USADO POR EL MOMENTO
		//COMBO DE FILA ACTUAL SE ACTUALIZA, LOS DEMAS USAN EL ANTERIOR COMBO
		//int intSelectedRow = -1;
		//intSelectedRow=this.jTableDatosEvaluacionEmpleado.getSelectedRow();

		//if(intSelectedRow<=0) {
			//bimestreTableCellFk.setRowActual(intSelectedRow);
			//bimestreTableCellFk.setbimestresForeignKeyActual(bimestresForeignKey);
		//}


		if(bimestreTableCellFk!=null) {
			bimestreTableCellFk.RecargarBimestresForeignKey();
			//ACTUALIZA COMBOS DE TABLA-FIN
		}

	}	
	
	
	public void recargarComboTablaMes(List<Mes> messForeignKey)throws Exception{
		TableColumn tableColumnMes=this.jTableDatosEvaluacionEmpleado.getColumnModel().getColumn(Funciones2.getColumnIndexByName(this.jTableDatosEvaluacionEmpleado,EvaluacionEmpleadoConstantesFunciones.LABEL_IDMES));
		TableCellEditor tableCellEditorMes =tableColumnMes.getCellEditor();

		MesTableCell mesTableCellFk=(MesTableCell)tableCellEditorMes;

		if(mesTableCellFk!=null) {
			mesTableCellFk.setmessForeignKey(messForeignKey);
		}


		//SIEMPRE rowActual<0 , NO USADO POR EL MOMENTO
		//COMBO DE FILA ACTUAL SE ACTUALIZA, LOS DEMAS USAN EL ANTERIOR COMBO
		//int intSelectedRow = -1;
		//intSelectedRow=this.jTableDatosEvaluacionEmpleado.getSelectedRow();

		//if(intSelectedRow<=0) {
			//mesTableCellFk.setRowActual(intSelectedRow);
			//mesTableCellFk.setmessForeignKeyActual(messForeignKey);
		//}


		if(mesTableCellFk!=null) {
			mesTableCellFk.RecargarMessForeignKey();
			//ACTUALIZA COMBOS DE TABLA-FIN
		}

	}	
	
	
	
	public void jButtonActualizarEvaluacionEmpleadoActionPerformed(ActionEvent evt) throws Exception {   
		try	{
			if(Constantes.ISUSAEJBLOGICLAYER) {
				this.evaluacionempleadoLogic.getNewConnexionToDeep("");
			}
			
			this.inicializarActualizarBindingParametrosReportesEvaluacionEmpleado(false);
			
			//if(!this.isEsNuevoEvaluacionEmpleado) {								
				int intSelectedRow = this.jTableDatosEvaluacionEmpleado.getSelectedRow();	
				
				//SE PIEDE INDICE SELECTED CON FILA TOTALES, ASEGURARSE QUE OBJETO ACTUAL ESTE EN FORMULARIO
				
				//ARCHITECTURE
				if(Constantes.ISUSAEJBLOGICLAYER) {
					this.evaluacionempleado =(EvaluacionEmpleado) this.evaluacionempleadoLogic.getEvaluacionEmpleados().toArray()[this.jTableDatosEvaluacionEmpleado.convertRowIndexToModel(intSelectedRow)];
				} else if(Constantes.ISUSAEJBREMOTE || Constantes.ISUSAEJBHOME) {
					this.evaluacionempleado =(EvaluacionEmpleado) this.evaluacionempleados.toArray()[this.jTableDatosEvaluacionEmpleado.convertRowIndexToModel(intSelectedRow)];
				}
				//ARCHITECTURE
				
			//}
				
			if(EvaluacionEmpleadoJInternalFrame.ISBINDING_MANUAL_TABLA) {
				this.setVariablesFormularioToObjetoActualEvaluacionEmpleado(this.evaluacionempleado,true);
				this.setVariablesFormularioToObjetoActualForeignKeysEvaluacionEmpleado(this.evaluacionempleado);
				
			}
			
			if(this.permiteMantenimiento(this.evaluacionempleado)) {	
				this.actualizar();
				
				if(!this.isGuardarCambiosEnLote && !this.evaluacionempleadoSessionBean.getEsGuardarRelacionado()) {
					this.procesarBusqueda(sAccionBusqueda);
					
					this.isEsNuevoEvaluacionEmpleado=true;
					this.inicializarActualizarBindingTablaEvaluacionEmpleado(false);
					this.isEsNuevoEvaluacionEmpleado=false;
				
				} else {					
					
					//PARA RELACIONADO ACTUALIZAR FILA TOTALES
					this.isEsNuevoEvaluacionEmpleado=true;
					this.procesoActualizarFilaTotales(false,"MANTENIMIENTO");
					this.isEsNuevoEvaluacionEmpleado=false;
				}
						
								
				//NO FUNCIONA BINDINGS
				this.inicializarActualizarBindingBotonesEvaluacionEmpleado(false);
				
				//SI ES MANUAL
				//this.inicializarActualizarBindingBotonesManualEvaluacionEmpleado(false);
				
				this.habilitarDeshabilitarControlesEvaluacionEmpleado(false);
			
												
				
				if(EvaluacionEmpleadoJInternalFrame.CON_DATOS_FRAME) {
					if(!this.isPostAccionSinCerrar) {
						this.cerrarFrameDetalleEvaluacionEmpleado();
					}
				}
				
				if(this.isPostAccionNuevo) {
					this.jButtonNuevoEvaluacionEmpleadoActionPerformed(evt,evaluacionempleadoSessionBean.getConGuardarRelaciones());
				} else {
					if(this.isPostAccionSinCerrar) {
						Integer intSelectedRowActual=this.getIndiceActualEvaluacionEmpleado(this.evaluacionempleado,intSelectedRow);
						
						if(intSelectedRow>-1) {
							this.jTableDatosEvaluacionEmpleado.setRowSelectionInterval(intSelectedRowActual, intSelectedRowActual);
							this.jButtonIdActionPerformed(evt,intSelectedRowActual,evaluacionempleadoSessionBean.getConGuardarRelaciones(),false);
						}
					}
				}
				
				this.cancelar(false);
				
			} else {
				JOptionPane.showMessageDialog(this,"ESTE REGISTRO NO PUEDE ACTUALIZARSE","EDITAR",JOptionPane.ERROR_MESSAGE);
			}
			
			if(Constantes.ISUSAEJBLOGICLAYER) {
				this.evaluacionempleadoLogic.commitNewConnexionToDeep();
			}
			
			
			if(this.jInternalFrameParent!=null) { //&& this.isEsMantenimientoRelacionado) {
				Boolean esUsoDesdeHijoLocal=true;
				String sTipo="Formulario";
				Boolean conIrServidorAplicacionParent=false;
				Long id=this.evaluacionempleado.getId();
				ArrayList<String> arrClasses=new ArrayList<String>();
				
				GeneralEntityParameterGeneral generalEntityParameterGeneral=new GeneralEntityParameterGeneral();
				
				generalEntityParameterGeneral.setEventoGlobalTipo(EventoGlobalTipo.FORM_HIJO_ACTUALIZAR);
				generalEntityParameterGeneral.setsDominio("Formulario");
				generalEntityParameterGeneral.setsDominioTipo(EvaluacionEmpleado.class.getName());
				
				this.jInternalFrameParent.setEventoParentGeneral(esUsoDesdeHijoLocal,"Formulario",EvaluacionEmpleado.class.getName(),sTipo,"FORMULARIO",esControlTabla,conIrServidorAplicacionParent,
					id,this, EventoGlobalTipo.FORM_HIJO_ACTUALIZAR,ControlTipo.FORM,EventoTipo.CHANGE,EventoSubTipo.CHANGED,arrClasses,
					evt,generalEntityParameterGeneral,this);
			}
			
		} catch(Exception e) {
			if(Constantes.ISUSAEJBLOGICLAYER) {
				this.evaluacionempleadoLogic.rollbackNewConnexionToDeep();
			}
			
			FuncionesSwing.manageException(this, e,logger,EvaluacionEmpleadoConstantesFunciones.CLASSNAME);
		
		} finally {
			if(Constantes.ISUSAEJBLOGICLAYER) {
				this.evaluacionempleadoLogic.closeNewConnexionToDeep();
			}
		}
	}
	
	public void jButtonEliminarEvaluacionEmpleadoActionPerformed(ActionEvent evt) throws Exception {   
		try	{
			
			if(Constantes.ISUSAEJBLOGICLAYER) {
				this.evaluacionempleadoLogic.getNewConnexionToDeep("");
			}
			
			int intSelectedRow = this.jTableDatosEvaluacionEmpleado.getSelectedRow();	       
							
			//ARCHITECTURE
			if(Constantes.ISUSAEJBLOGICLAYER) {
				this.evaluacionempleado =(EvaluacionEmpleado) this.evaluacionempleadoLogic.getEvaluacionEmpleados().toArray()[this.jTableDatosEvaluacionEmpleado.convertRowIndexToModel(intSelectedRow)];
				this.evaluacionempleado.setIsDeleted(true);
			} else if(Constantes.ISUSAEJBREMOTE || Constantes.ISUSAEJBHOME ) {
				this.evaluacionempleado =(EvaluacionEmpleado) this.evaluacionempleados.toArray()[this.jTableDatosEvaluacionEmpleado.convertRowIndexToModel(intSelectedRow)];
				this.evaluacionempleado.setIsDeleted(true);
			}
			//ARCHITECTURE
			
			if(this.permiteMantenimiento(this.evaluacionempleado)) {
				this.eliminar();
				
				if(!this.isGuardarCambiosEnLote && !this.evaluacionempleadoSessionBean.getEsGuardarRelacionado()) {
					this.procesarBusqueda(sAccionBusqueda);
				}
				
				((EvaluacionEmpleadoModel) this.jTableDatosEvaluacionEmpleado.getModel()).fireTableRowsDeleted(intSelectedRow,intSelectedRow);
				
				this.isEsNuevoEvaluacionEmpleado=true;
				this.inicializarActualizarBindingTablaEvaluacionEmpleado(false);
				this.isEsNuevoEvaluacionEmpleado=false;									
					
				//NO FUNCIONA BINDINGS
				this.inicializarActualizarBindingBotonesEvaluacionEmpleado(false);
				
				//SI ES MANUAL
				//this.inicializarActualizarBindingBotonesManualEvaluacionEmpleado(false);
				
				this.habilitarDeshabilitarControlesEvaluacionEmpleado(false);
				
				
				
				if(EvaluacionEmpleadoJInternalFrame.CON_DATOS_FRAME) {
					this.cerrarFrameDetalleEvaluacionEmpleado();
				}
			} else {
				JOptionPane.showMessageDialog(this,"ESTE REGISTRO NO PUEDE ACTUALIZARSE","EDITAR",JOptionPane.ERROR_MESSAGE);
			}	
			
			if(Constantes.ISUSAEJBLOGICLAYER) {
				this.evaluacionempleadoLogic.commitNewConnexionToDeep();
			}
			
		} catch(Exception e) {
			
			if(Constantes.ISUSAEJBLOGICLAYER) {
				this.evaluacionempleadoLogic.rollbackNewConnexionToDeep();
			}

			FuncionesSwing.manageException(this, e,logger,EvaluacionEmpleadoConstantesFunciones.CLASSNAME);
		
		} finally {
			if(Constantes.ISUSAEJBLOGICLAYER) {
				this.evaluacionempleadoLogic.closeNewConnexionToDeep();
			}
		}		
	}
		
	public void jButtonCancelarEvaluacionEmpleadoActionPerformed(ActionEvent evt) throws Exception {                                         	   	       
	  	try {
			if(jTableDatosEvaluacionEmpleado.getRowCount()>=1) {
				jTableDatosEvaluacionEmpleado.removeRowSelectionInterval(0, jTableDatosEvaluacionEmpleado.getRowCount()-1);						
			}
						
			this.invalidValues=new InvalidValue[0];
			this.habilitarDeshabilitarControlesEvaluacionEmpleado(false);
			this.cancelar(true);			
			this.inicializarActualizarBindingTablaEvaluacionEmpleado(false);
			
			//NO FUNCIONA BINDINGS
			this.inicializarActualizarBindingBotonesEvaluacionEmpleado(false) ;
			
			//SI ES MANUAL
			//this.inicializarActualizarBindingBotonesManualEvaluacionEmpleado(false) ;
			
			this.isEsNuevoEvaluacionEmpleado=false;
			
			if(EvaluacionEmpleadoJInternalFrame.CON_DATOS_FRAME) {
				this.cerrarFrameDetalleEvaluacionEmpleado();
			}
			
		} catch(Exception e) {
			FuncionesSwing.manageException(this, e,logger,EvaluacionEmpleadoConstantesFunciones.CLASSNAME);
		}
	}
	
	public void jButtonGuardarCambiosEvaluacionEmpleadoActionPerformed(ActionEvent evt) throws Exception {    		
		try	{
			
			if(Constantes.ISUSAEJBLOGICLAYER) {
				this.evaluacionempleadoLogic.getNewConnexionToDeep("");
			}
			
			//this.estaModoGuardarCambios=true;
			
	    	this.guardarCambios();
			
			if(!this.isErrorGuardar) {
				this.procesarBusqueda(this.sAccionBusqueda);
				
				//NO FUNCIONA BINDINGS
				this.inicializarActualizarBindingEvaluacionEmpleado(false);
				
				//SI ES MANUAL
				if(EvaluacionEmpleadoJInternalFrame.ISBINDING_MANUAL) {				
					//this.inicializarActualizarBindingManualEvaluacionEmpleado();				
				}
			}
			
			if(Constantes.ISUSAEJBLOGICLAYER) {
				this.evaluacionempleadoLogic.commitNewConnexionToDeep();
			}
			
		} catch(Exception e) {
			if(Constantes.ISUSAEJBLOGICLAYER) {
				this.evaluacionempleadoLogic.rollbackNewConnexionToDeep();
			}

			FuncionesSwing.manageException(this, e,logger,EvaluacionEmpleadoConstantesFunciones.CLASSNAME);
		
		} finally {
			if(Constantes.ISUSAEJBLOGICLAYER) {
				this.evaluacionempleadoLogic.closeNewConnexionToDeep();
			}
			
			//this.estaModoGuardarCambios=false;
		}
	}
	
	public void jButtonNuevoGuardarCambiosEvaluacionEmpleadoActionPerformed(ActionEvent evt) throws Exception {    		
		try	{
			
			this.estaModoNuevo=true;
			this.estaModoNuevoGuardarCambios=true;
			
			//LO HACE NUEVOPREPARAR
			//this.iIdNuevoEvaluacionEmpleado--;			
			//EvaluacionEmpleado evaluacionempleadoAux= new EvaluacionEmpleado();			
			//evaluacionempleadoAux.setId(this.iIdNuevoEvaluacionEmpleado);
			
			if(this.jInternalFrameDetalleFormEvaluacionEmpleado==null) { //if(!this.conCargarFormDetalle) {
				this.inicializarFormDetalle();
			}
			
			this.aumentarTamanioFilaNuevaTablaEvaluacionEmpleado();
			
			if(this.conTotales) {
				this.quitarFilaTotales();
			}
			
			this.nuevoPreparar(true);
			
			this.setVariablesFormularioToObjetoActualForeignKeysEvaluacionEmpleado(this.evaluacionempleado);
			
			this.evaluacionempleado.setsType("NUEVO_GUARDAR_CAMBIOS");
			
			//LO HACE NUEVOPREPARAR
			/*
			if(Constantes.ISUSAEJBLOGICLAYER) {				
				this.evaluacionempleadoLogic.getEvaluacionEmpleados().add(this.evaluacionempleadoAux);
			} else if(Constantes.ISUSAEJBREMOTE||Constantes.ISUSAEJBHOME) {
				this.evaluacionempleados.add(this.evaluacionempleadoAux);				
			}
			*/
			
			this.inicializarActualizarBindingTablaEvaluacionEmpleado(false);
			
			this.jTableDatosEvaluacionEmpleado.setRowSelectionInterval(this.getIndiceNuevoEvaluacionEmpleado(), this.getIndiceNuevoEvaluacionEmpleado());
			
			int iLastRow =  this.jTableDatosEvaluacionEmpleado.getRowCount () - 1;
			Rectangle rectangle = this.jTableDatosEvaluacionEmpleado.getCellRect(iLastRow, 0, true);
			
			this.jTableDatosEvaluacionEmpleado.scrollRectToVisible(rectangle);
			
			//FILA TOTALES
			if(this.conTotales) {
				this.crearFilaTotales();
				
				this.inicializarActualizarBindingTablaEvaluacionEmpleado(false);
			}

		} catch(Exception e) {									
			FuncionesSwing.manageException(this, e,logger,EvaluacionEmpleadoConstantesFunciones.CLASSNAME);
			
		} finally {
			this.estaModoNuevo=false;
			this.estaModoNuevoGuardarCambios=false;
		}
	}		
	
	public void jButtonRecargarInformacionEvaluacionEmpleadoActionPerformed(ActionEvent evt) throws Exception {    		
		try {
			this.iNumeroPaginacionPagina=0;
			
			if(Constantes.ISUSAEJBLOGICLAYER) {
				this.evaluacionempleadoLogic.getNewConnexionToDeep("");
			}
			
			this.inicializarActualizarBindingEvaluacionEmpleado(false,false);
			
	    	this.recargarInformacion();
			
			//NO FUNCIONA BINDINGS
			this.inicializarActualizarBindingEvaluacionEmpleado(false);
			
			//SI ES MANUAL
			if(EvaluacionEmpleadoJInternalFrame.ISBINDING_MANUAL) {
				//this.inicializarActualizarBindingManualEvaluacionEmpleado();
			}
			
			//this.abrirFrameTreeEvaluacionEmpleado();
			
			if(Constantes.ISUSAEJBLOGICLAYER) {
				this.evaluacionempleadoLogic.commitNewConnexionToDeep();
			}
			
		} catch(Exception e) {
			if(Constantes.ISUSAEJBLOGICLAYER) {
				this.evaluacionempleadoLogic.rollbackNewConnexionToDeep();
			}
			
			FuncionesSwing.manageException(this, e,logger,EvaluacionEmpleadoConstantesFunciones.CLASSNAME);
		
		} finally {
			if(Constantes.ISUSAEJBLOGICLAYER) {
				this.evaluacionempleadoLogic.closeNewConnexionToDeep();
			}
		}	
	}
	
	
	public void jButtonGenerarImportacionEvaluacionEmpleadoActionPerformed(ActionEvent evt) throws Exception {    				
		BufferedReader bufferedReader = null;
		String sXmlStringFile="";
		String sPath="";
		this.arrDatoGeneralMinimos= new  ArrayList<DatoGeneralMinimo>();
		DatoGeneralMinimo datoGeneralMinimo=new DatoGeneralMinimo();
		String sLine="";
		
		try {			
			if(JOptionPane.showConfirmDialog(this, "ESTA SEGURO DE PROCESAR IMPORTACION DE Evaluacion EmpleadoS ?", "MANTENIMIENTO DE Evaluacion Empleado", JOptionPane.OK_CANCEL_OPTION) == 0) {
				bufferedReader = new BufferedReader(new FileReader(this.jInternalFrameImportacionEvaluacionEmpleado.getFileImportacion().getAbsolutePath()));
								
				while ((sLine = bufferedReader.readLine()) != null) {
					datoGeneralMinimo=new DatoGeneralMinimo();
					datoGeneralMinimo.setsDescripcion(sLine);
					
					this.arrDatoGeneralMinimos.add(datoGeneralMinimo);
				}
				
				this.actualizarParametrosGeneralEvaluacionEmpleado();
						
				//ARCHITECTURE
				if(Constantes.ISUSAEJBLOGICLAYER) {						
					this.evaluacionempleadoReturnGeneral=evaluacionempleadoLogic.procesarImportacionEvaluacionEmpleadosWithConnection(this.parametroGeneralUsuario,this.moduloActual,this.opcionActual,this.usuarioActual,this.arrDatoGeneralMinimos,this.evaluacionempleadoParameterGeneral);
						
				} else if(Constantes.ISUSAEJBREMOTE) {
						
				} else if(Constantes.ISUSAEJBHOME) {
				}
				//ARCHITECTURE
						
				this.procesarEvaluacionEmpleadoReturnGeneral();
			}
		} catch(Exception e) {
			FuncionesSwing.manageException(this, e,logger,EvaluacionEmpleadoConstantesFunciones.CLASSNAME);
		
		} finally {			
			if (bufferedReader != null) {
				bufferedReader.close();
			}	
		}				
	}
	
	
	
	public void jButtonAbrirImportacionEvaluacionEmpleadoActionPerformed(ActionEvent evt) throws Exception {    				
		BufferedWriter bufferedWriter = null;
		String sXmlStringFile="";
		String sPath="";
		
		try {
			int iReturnArchivo = this.jInternalFrameImportacionEvaluacionEmpleado.getjFileChooserImportacion().showOpenDialog(this);
 
            if (iReturnArchivo == JFileChooser.APPROVE_OPTION) {
            	this.jInternalFrameImportacionEvaluacionEmpleado.setFileImportacion(this.jInternalFrameImportacionEvaluacionEmpleado.getjFileChooserImportacion().getSelectedFile());
            	
				this.jInternalFrameImportacionEvaluacionEmpleado.getjTextFieldPathArchivoImportacion().setText(this.jInternalFrameImportacionEvaluacionEmpleado.getFileImportacion().getName());
				
				//System.out.println("ARCHIVO ESCOGIDO: "+this.fileImportacionEvaluacionEmpleado.getName());
				
            } else {
                //System.out.println("CANCELAR SELECCION");
				this.jInternalFrameImportacionEvaluacionEmpleado.getjTextFieldPathArchivoImportacion().setText("SELECCION CANCELADA");
            }			
		} catch(Exception e) {
			FuncionesSwing.manageException(this, e,logger,EvaluacionEmpleadoConstantesFunciones.CLASSNAME);
		
		} finally {			
			if (bufferedWriter != null) {
				bufferedWriter.close();
			}	
		}		
	}
	
	
	public void jButtonGenerarReporteDinamicoEvaluacionEmpleadoActionPerformed(ActionEvent evt) throws Exception {    		
		BufferedWriter bufferedWriter = null;
		String sXmlStringFile="";
		String sPath="";
		
		try {	
		
		ArrayList<EvaluacionEmpleado> evaluacionempleadosSeleccionados=new ArrayList<EvaluacionEmpleado>();		

		evaluacionempleadosSeleccionados=this.getEvaluacionEmpleadosSeleccionados(true);
		
		
		this.sTipoReporteDinamico=((Reporte)this.jInternalFrameReporteDinamicoEvaluacionEmpleado.getjComboBoxTiposReportesDinamico().getSelectedItem()).getsCodigo();
		
		this.sTipoArchivoReporteDinamico=((Reporte)this.jInternalFrameReporteDinamicoEvaluacionEmpleado.getjComboBoxTiposArchivosReportesDinamico().getSelectedItem()).getsCodigo();			
		
		
		this.sTipoArchivoReporte=this.sTipoArchivoReporteDinamico;
		
		//this.sTipoReporteExtra="Base";
		
			InputStream reportFile=null;
			InputStream imageFile=null;
			
			imageFile=AuxiliarImagenes.class.getResourceAsStream("LogoReporte.jpg");			
				
		
		
			reportFile = AuxiliarReportes.class.getResourceAsStream("EvaluacionEmpleadoBaseDesign.jrxml");	
			
			sPath=this.parametroGeneralUsuario.getpath_exportar()+"EvaluacionEmpleadoBaseDesign.jrxml";
			
			sXmlStringFile=Funciones2.getStringFromInputStream(reportFile);
						
			bufferedWriter = new BufferedWriter(new FileWriter(sPath));
			
			
			sXmlStringFile=this.actualizarReporteDinamico(sXmlStringFile);
			
			
			bufferedWriter.write(sXmlStringFile);
			
			bufferedWriter.close();
			
			try{JasperCompileManager.compileReportToFile(sPath);}catch(Exception e){e.printStackTrace();}
			
			this.actualizarVariablesTipoReporte(false,true,false,sPath);
			
			/*
			this.esReporteDinamico=true;
			this.sPathReporteDinamico=sPath.replace(".jrxml",".jasper");
			this.sTipoReporteExtra="";
			*/
			
			this.generarReporteEvaluacionEmpleados("Todos",evaluacionempleadosSeleccionados );

			if(this.parametroGeneralUsuario.getcon_mensaje_confirmacion() && !this.evaluacionempleadoSessionBean.getEsGuardarRelacionado()) {//Constantes.ISMOSTRARMENSAJESMANTENIMIENTO && 
				//DEBE APARECER EL REPORTE DIRECTAMENTE
				//JOptionPane.showMessageDialog(this,"GENERADO CORRECTAMENTE:"+sPath,"MANTENIMIENTO DE Evaluacion Empleado",JOptionPane.INFORMATION_MESSAGE);
			}
			
		} catch(Exception e) {
			FuncionesSwing.manageException(this, e,logger,EvaluacionEmpleadoConstantesFunciones.CLASSNAME);
		
		} finally {			
			if (bufferedWriter != null) {
				bufferedWriter.close();
			}	
		}
	}		
	
	
	public String actualizarReporteDinamico(String sXmlStringFile) {				
		Reporte reporte=new Reporte();
		Integer iAnchoMaximoVertical=535;//781,782
		Integer iAnchoMaximoHorizontal=782;
		Integer iAnchoSum=0;
		Integer iAnchoColumna=0;
		
		Integer iAnchoMargenes=60;
		String sWidthGrafico="535";
		
		for(int index:this.jInternalFrameReporteDinamicoEvaluacionEmpleado.getjListColumnasSelectReporte().getSelectedIndices()) {
			reporte=(Reporte)this.jInternalFrameReporteDinamicoEvaluacionEmpleado.getjListColumnasSelectReporte().getModel().getElementAt(index);
			
			switch(reporte.getsCodigo()) {
				
				case EvaluacionEmpleadoConstantesFunciones.LABEL_IDEMPRESA:
					iAnchoColumna=100;

					if(iAnchoSum+iAnchoColumna<=iAnchoMaximoHorizontal) {
						sXmlStringFile=sXmlStringFile.replace("<!--col_Empresa_col", "");
						sXmlStringFile=sXmlStringFile.replace("col_Empresa_col-->", "");

						sXmlStringFile=sXmlStringFile.replace("colancho_Empresa_colancho", iAnchoColumna.toString());
						sXmlStringFile=sXmlStringFile.replace("colx_Empresa_colx", iAnchoSum.toString());

						iAnchoSum+=iAnchoColumna;
					}

					break;

				case EvaluacionEmpleadoConstantesFunciones.LABEL_IDSUCURSAL:
					iAnchoColumna=100;

					if(iAnchoSum+iAnchoColumna<=iAnchoMaximoHorizontal) {
						sXmlStringFile=sXmlStringFile.replace("<!--col_Sucursal_col", "");
						sXmlStringFile=sXmlStringFile.replace("col_Sucursal_col-->", "");

						sXmlStringFile=sXmlStringFile.replace("colancho_Sucursal_colancho", iAnchoColumna.toString());
						sXmlStringFile=sXmlStringFile.replace("colx_Sucursal_colx", iAnchoSum.toString());

						iAnchoSum+=iAnchoColumna;
					}

					break;

				case EvaluacionEmpleadoConstantesFunciones.LABEL_IDEJERCICIO:
					iAnchoColumna=100;

					if(iAnchoSum+iAnchoColumna<=iAnchoMaximoHorizontal) {
						sXmlStringFile=sXmlStringFile.replace("<!--col_Ejercicio_col", "");
						sXmlStringFile=sXmlStringFile.replace("col_Ejercicio_col-->", "");

						sXmlStringFile=sXmlStringFile.replace("colancho_Ejercicio_colancho", iAnchoColumna.toString());
						sXmlStringFile=sXmlStringFile.replace("colx_Ejercicio_colx", iAnchoSum.toString());

						iAnchoSum+=iAnchoColumna;
					}

					break;

				case EvaluacionEmpleadoConstantesFunciones.LABEL_IDPERIODO:
					iAnchoColumna=100;

					if(iAnchoSum+iAnchoColumna<=iAnchoMaximoHorizontal) {
						sXmlStringFile=sXmlStringFile.replace("<!--col_Periodo_col", "");
						sXmlStringFile=sXmlStringFile.replace("col_Periodo_col-->", "");

						sXmlStringFile=sXmlStringFile.replace("colancho_Periodo_colancho", iAnchoColumna.toString());
						sXmlStringFile=sXmlStringFile.replace("colx_Periodo_colx", iAnchoSum.toString());

						iAnchoSum+=iAnchoColumna;
					}

					break;

				case EvaluacionEmpleadoConstantesFunciones.LABEL_IDESTRUCTURA:
					iAnchoColumna=100;

					if(iAnchoSum+iAnchoColumna<=iAnchoMaximoHorizontal) {
						sXmlStringFile=sXmlStringFile.replace("<!--col_Estructura_col", "");
						sXmlStringFile=sXmlStringFile.replace("col_Estructura_col-->", "");

						sXmlStringFile=sXmlStringFile.replace("colancho_Estructura_colancho", iAnchoColumna.toString());
						sXmlStringFile=sXmlStringFile.replace("colx_Estructura_colx", iAnchoSum.toString());

						iAnchoSum+=iAnchoColumna;
					}

					break;

				case EvaluacionEmpleadoConstantesFunciones.LABEL_IDEMPLEADO:
					iAnchoColumna=100;

					if(iAnchoSum+iAnchoColumna<=iAnchoMaximoHorizontal) {
						sXmlStringFile=sXmlStringFile.replace("<!--col_Empleado_col", "");
						sXmlStringFile=sXmlStringFile.replace("col_Empleado_col-->", "");

						sXmlStringFile=sXmlStringFile.replace("colancho_Empleado_colancho", iAnchoColumna.toString());
						sXmlStringFile=sXmlStringFile.replace("colx_Empleado_colx", iAnchoSum.toString());

						iAnchoSum+=iAnchoColumna;
					}

					break;

				case EvaluacionEmpleadoConstantesFunciones.LABEL_IDEMPLEADOEVALUA:
					iAnchoColumna=100;

					if(iAnchoSum+iAnchoColumna<=iAnchoMaximoHorizontal) {
						sXmlStringFile=sXmlStringFile.replace("<!--col_EmpleadoEvalua_col", "");
						sXmlStringFile=sXmlStringFile.replace("col_EmpleadoEvalua_col-->", "");

						sXmlStringFile=sXmlStringFile.replace("colancho_EmpleadoEvalua_colancho", iAnchoColumna.toString());
						sXmlStringFile=sXmlStringFile.replace("colx_EmpleadoEvalua_colx", iAnchoSum.toString());

						iAnchoSum+=iAnchoColumna;
					}

					break;

				case EvaluacionEmpleadoConstantesFunciones.LABEL_IDTIPOEVALUACIONEMPLEADO:
					iAnchoColumna=100;

					if(iAnchoSum+iAnchoColumna<=iAnchoMaximoHorizontal) {
						sXmlStringFile=sXmlStringFile.replace("<!--col_TipoEvaluacionEmpleado_col", "");
						sXmlStringFile=sXmlStringFile.replace("col_TipoEvaluacionEmpleado_col-->", "");

						sXmlStringFile=sXmlStringFile.replace("colancho_TipoEvaluacionEmpleado_colancho", iAnchoColumna.toString());
						sXmlStringFile=sXmlStringFile.replace("colx_TipoEvaluacionEmpleado_colx", iAnchoSum.toString());

						iAnchoSum+=iAnchoColumna;
					}

					break;

				case EvaluacionEmpleadoConstantesFunciones.LABEL_FECHA:
					iAnchoColumna=50;

					if(iAnchoSum+iAnchoColumna<=iAnchoMaximoHorizontal) {
						sXmlStringFile=sXmlStringFile.replace("<!--col_cha_col", "");
						sXmlStringFile=sXmlStringFile.replace("col_cha_col-->", "");

						sXmlStringFile=sXmlStringFile.replace("colancho_cha_colancho", iAnchoColumna.toString());
						sXmlStringFile=sXmlStringFile.replace("colx_cha_colx", iAnchoSum.toString());

						iAnchoSum+=iAnchoColumna;
					}

					break;

				case EvaluacionEmpleadoConstantesFunciones.LABEL_ESTAEVALUADO:
					iAnchoColumna=50;

					if(iAnchoSum+iAnchoColumna<=iAnchoMaximoHorizontal) {
						sXmlStringFile=sXmlStringFile.replace("<!--col_taEvaluado_col", "");
						sXmlStringFile=sXmlStringFile.replace("col_taEvaluado_col-->", "");

						sXmlStringFile=sXmlStringFile.replace("colancho_taEvaluado_colancho", iAnchoColumna.toString());
						sXmlStringFile=sXmlStringFile.replace("colx_taEvaluado_colx", iAnchoSum.toString());

						iAnchoSum+=iAnchoColumna;
					}

					break;

				case EvaluacionEmpleadoConstantesFunciones.LABEL_IDANIO:
					iAnchoColumna=100;

					if(iAnchoSum+iAnchoColumna<=iAnchoMaximoHorizontal) {
						sXmlStringFile=sXmlStringFile.replace("<!--col_Anio_col", "");
						sXmlStringFile=sXmlStringFile.replace("col_Anio_col-->", "");

						sXmlStringFile=sXmlStringFile.replace("colancho_Anio_colancho", iAnchoColumna.toString());
						sXmlStringFile=sXmlStringFile.replace("colx_Anio_colx", iAnchoSum.toString());

						iAnchoSum+=iAnchoColumna;
					}

					break;

				case EvaluacionEmpleadoConstantesFunciones.LABEL_IDSEMESTRE:
					iAnchoColumna=100;

					if(iAnchoSum+iAnchoColumna<=iAnchoMaximoHorizontal) {
						sXmlStringFile=sXmlStringFile.replace("<!--col_Semestre_col", "");
						sXmlStringFile=sXmlStringFile.replace("col_Semestre_col-->", "");

						sXmlStringFile=sXmlStringFile.replace("colancho_Semestre_colancho", iAnchoColumna.toString());
						sXmlStringFile=sXmlStringFile.replace("colx_Semestre_colx", iAnchoSum.toString());

						iAnchoSum+=iAnchoColumna;
					}

					break;

				case EvaluacionEmpleadoConstantesFunciones.LABEL_IDTRIMESTRE:
					iAnchoColumna=100;

					if(iAnchoSum+iAnchoColumna<=iAnchoMaximoHorizontal) {
						sXmlStringFile=sXmlStringFile.replace("<!--col_Trimestre_col", "");
						sXmlStringFile=sXmlStringFile.replace("col_Trimestre_col-->", "");

						sXmlStringFile=sXmlStringFile.replace("colancho_Trimestre_colancho", iAnchoColumna.toString());
						sXmlStringFile=sXmlStringFile.replace("colx_Trimestre_colx", iAnchoSum.toString());

						iAnchoSum+=iAnchoColumna;
					}

					break;

				case EvaluacionEmpleadoConstantesFunciones.LABEL_IDBIMESTRE:
					iAnchoColumna=100;

					if(iAnchoSum+iAnchoColumna<=iAnchoMaximoHorizontal) {
						sXmlStringFile=sXmlStringFile.replace("<!--col_Bimestre_col", "");
						sXmlStringFile=sXmlStringFile.replace("col_Bimestre_col-->", "");

						sXmlStringFile=sXmlStringFile.replace("colancho_Bimestre_colancho", iAnchoColumna.toString());
						sXmlStringFile=sXmlStringFile.replace("colx_Bimestre_colx", iAnchoSum.toString());

						iAnchoSum+=iAnchoColumna;
					}

					break;

				case EvaluacionEmpleadoConstantesFunciones.LABEL_IDMES:
					iAnchoColumna=100;

					if(iAnchoSum+iAnchoColumna<=iAnchoMaximoHorizontal) {
						sXmlStringFile=sXmlStringFile.replace("<!--col_Mes_col", "");
						sXmlStringFile=sXmlStringFile.replace("col_Mes_col-->", "");

						sXmlStringFile=sXmlStringFile.replace("colancho_Mes_colancho", iAnchoColumna.toString());
						sXmlStringFile=sXmlStringFile.replace("colx_Mes_colx", iAnchoSum.toString());

						iAnchoSum+=iAnchoColumna;
					}

					break;

				case EvaluacionEmpleadoConstantesFunciones.LABEL_OBSERVACION1:
					iAnchoColumna=100;

					if(iAnchoSum+iAnchoColumna<=iAnchoMaximoHorizontal) {
						sXmlStringFile=sXmlStringFile.replace("<!--col_servacion1_col", "");
						sXmlStringFile=sXmlStringFile.replace("col_servacion1_col-->", "");

						sXmlStringFile=sXmlStringFile.replace("colancho_servacion1_colancho", iAnchoColumna.toString());
						sXmlStringFile=sXmlStringFile.replace("colx_servacion1_colx", iAnchoSum.toString());

						iAnchoSum+=iAnchoColumna;
					}

					break;

				case EvaluacionEmpleadoConstantesFunciones.LABEL_OBSERVACION2:
					iAnchoColumna=100;

					if(iAnchoSum+iAnchoColumna<=iAnchoMaximoHorizontal) {
						sXmlStringFile=sXmlStringFile.replace("<!--col_servacion2_col", "");
						sXmlStringFile=sXmlStringFile.replace("col_servacion2_col-->", "");

						sXmlStringFile=sXmlStringFile.replace("colancho_servacion2_colancho", iAnchoColumna.toString());
						sXmlStringFile=sXmlStringFile.replace("colx_servacion2_colx", iAnchoSum.toString());

						iAnchoSum+=iAnchoColumna;
					}

					break;

				case EvaluacionEmpleadoConstantesFunciones.LABEL_OBSERVACION3:
					iAnchoColumna=100;

					if(iAnchoSum+iAnchoColumna<=iAnchoMaximoHorizontal) {
						sXmlStringFile=sXmlStringFile.replace("<!--col_servacion3_col", "");
						sXmlStringFile=sXmlStringFile.replace("col_servacion3_col-->", "");

						sXmlStringFile=sXmlStringFile.replace("colancho_servacion3_colancho", iAnchoColumna.toString());
						sXmlStringFile=sXmlStringFile.replace("colx_servacion3_colx", iAnchoSum.toString());

						iAnchoSum+=iAnchoColumna;
					}

					break;

				case EvaluacionEmpleadoConstantesFunciones.LABEL_OBSERVACION4:
					iAnchoColumna=100;

					if(iAnchoSum+iAnchoColumna<=iAnchoMaximoHorizontal) {
						sXmlStringFile=sXmlStringFile.replace("<!--col_servacion4_col", "");
						sXmlStringFile=sXmlStringFile.replace("col_servacion4_col-->", "");

						sXmlStringFile=sXmlStringFile.replace("colancho_servacion4_colancho", iAnchoColumna.toString());
						sXmlStringFile=sXmlStringFile.replace("colx_servacion4_colx", iAnchoSum.toString());

						iAnchoSum+=iAnchoColumna;
					}

					break;
					
				default :
					break;
			}
		}
		
		iAnchoSum+=iAnchoMargenes;
		
		if(iAnchoSum>iAnchoMaximoVertical) {
			sXmlStringFile=sXmlStringFile.replace("595", "842");
			//sXmlStringFile=sXmlStringFile.replace("842", "595");
			sXmlStringFile=sXmlStringFile.replace("535", "782");
			sXmlStringFile=sXmlStringFile.replace("Portrait", "Landscape");			
			sWidthGrafico="782";
		
		} else {
			sXmlStringFile=sXmlStringFile.replace("842", "595");
			//sXmlStringFile=sXmlStringFile.replace("595", "842");
			sXmlStringFile=sXmlStringFile.replace("782", "535");
			sXmlStringFile=sXmlStringFile.replace("Landscape", "Portrait");
			sWidthGrafico="535";
		}
		
		if(this.jInternalFrameReporteDinamicoEvaluacionEmpleado.getjCheckBoxConGraficoDinamico().isSelected()) {
			sXmlStringFile=this.actualizarGraficoReporteDinamico(sXmlStringFile,sWidthGrafico);
		} else {
			sXmlStringFile=sXmlStringFile.replace("colancho_summary_colancho", "30");
		}
		
		return sXmlStringFile;
	}
	
	
	
	public String actualizarGraficoReporteDinamico(String sXmlStringFile,String sWidthGrafico) {		
		String strGrafico="";		
		String sTipo="NORMAL";
		String strCategorySeries="";
		String sNombreCampoCategoria="";
		String sNombreCampoCategoriaValor="";
		Reporte reporte=new Reporte();
		Reporte reporteCategoriaValor=new Reporte();
		Reporte reporteTipoGraficoReporte=new Reporte();
		Boolean existe=false;
		
		sXmlStringFile=sXmlStringFile.replace("colancho_summary_colancho", "280");
		
		//CATEGORIA GRAFICO				
		reporte=((Reporte)this.jInternalFrameReporteDinamicoEvaluacionEmpleado.getjComboBoxColumnaCategoriaGrafico().getSelectedItem());
				
		//TIPO GRAFICO REPORTE
		reporteTipoGraficoReporte=((Reporte)this.jInternalFrameReporteDinamicoEvaluacionEmpleado.getjComboBoxTiposGraficosReportesDinamico().getSelectedItem());
		
		String sTipoGraficoReporte=reporteTipoGraficoReporte.getsCodigo();
		
		switch(reporte.getsCodigo()) {
			
				case EvaluacionEmpleadoConstantesFunciones.LABEL_IDEMPRESA:
					sNombreCampoCategoria="id_empresa";
					break;

				case EvaluacionEmpleadoConstantesFunciones.LABEL_IDSUCURSAL:
					sNombreCampoCategoria="id_sucursal";
					break;

				case EvaluacionEmpleadoConstantesFunciones.LABEL_IDEJERCICIO:
					sNombreCampoCategoria="id_ejercicio";
					break;

				case EvaluacionEmpleadoConstantesFunciones.LABEL_IDPERIODO:
					sNombreCampoCategoria="id_periodo";
					break;

				case EvaluacionEmpleadoConstantesFunciones.LABEL_IDESTRUCTURA:
					sNombreCampoCategoria="id_estructura";
					break;

				case EvaluacionEmpleadoConstantesFunciones.LABEL_IDEMPLEADO:
					sNombreCampoCategoria="id_empleado";
					break;

				case EvaluacionEmpleadoConstantesFunciones.LABEL_IDEMPLEADOEVALUA:
					sNombreCampoCategoria="id_empleado_evalua";
					break;

				case EvaluacionEmpleadoConstantesFunciones.LABEL_IDTIPOEVALUACIONEMPLEADO:
					sNombreCampoCategoria="id_tipo_evaluacion_empleado";
					break;

				case EvaluacionEmpleadoConstantesFunciones.LABEL_FECHA:
					sNombreCampoCategoria="fecha";
					break;

				case EvaluacionEmpleadoConstantesFunciones.LABEL_ESTAEVALUADO:
					sNombreCampoCategoria="esta_evaluado";
					break;

				case EvaluacionEmpleadoConstantesFunciones.LABEL_IDANIO:
					sNombreCampoCategoria="id_anio";
					break;

				case EvaluacionEmpleadoConstantesFunciones.LABEL_IDSEMESTRE:
					sNombreCampoCategoria="id_semestre";
					break;

				case EvaluacionEmpleadoConstantesFunciones.LABEL_IDTRIMESTRE:
					sNombreCampoCategoria="id_trimestre";
					break;

				case EvaluacionEmpleadoConstantesFunciones.LABEL_IDBIMESTRE:
					sNombreCampoCategoria="id_bimestre";
					break;

				case EvaluacionEmpleadoConstantesFunciones.LABEL_IDMES:
					sNombreCampoCategoria="id_mes";
					break;

				case EvaluacionEmpleadoConstantesFunciones.LABEL_OBSERVACION1:
					sNombreCampoCategoria="observacion1";
					break;

				case EvaluacionEmpleadoConstantesFunciones.LABEL_OBSERVACION2:
					sNombreCampoCategoria="observacion2";
					break;

				case EvaluacionEmpleadoConstantesFunciones.LABEL_OBSERVACION3:
					sNombreCampoCategoria="observacion3";
					break;

				case EvaluacionEmpleadoConstantesFunciones.LABEL_OBSERVACION4:
					sNombreCampoCategoria="observacion4";
					break;
					
			default :
				break;
		}		
		//CATEGORIA GRAFICO
		
		//CATEGORIA VALOR				
		reporteCategoriaValor=((Reporte)this.jInternalFrameReporteDinamicoEvaluacionEmpleado.getjComboBoxColumnaCategoriaValor().getSelectedItem());
		
		switch(reporteCategoriaValor.getsCodigo()) {
			
				case EvaluacionEmpleadoConstantesFunciones.LABEL_IDEMPRESA:
					sNombreCampoCategoriaValor="id_empresa";
					break;

				case EvaluacionEmpleadoConstantesFunciones.LABEL_IDSUCURSAL:
					sNombreCampoCategoriaValor="id_sucursal";
					break;

				case EvaluacionEmpleadoConstantesFunciones.LABEL_IDEJERCICIO:
					sNombreCampoCategoriaValor="id_ejercicio";
					break;

				case EvaluacionEmpleadoConstantesFunciones.LABEL_IDPERIODO:
					sNombreCampoCategoriaValor="id_periodo";
					break;

				case EvaluacionEmpleadoConstantesFunciones.LABEL_IDESTRUCTURA:
					sNombreCampoCategoriaValor="id_estructura";
					break;

				case EvaluacionEmpleadoConstantesFunciones.LABEL_IDEMPLEADO:
					sNombreCampoCategoriaValor="id_empleado";
					break;

				case EvaluacionEmpleadoConstantesFunciones.LABEL_IDEMPLEADOEVALUA:
					sNombreCampoCategoriaValor="id_empleado_evalua";
					break;

				case EvaluacionEmpleadoConstantesFunciones.LABEL_IDTIPOEVALUACIONEMPLEADO:
					sNombreCampoCategoriaValor="id_tipo_evaluacion_empleado";
					break;

				case EvaluacionEmpleadoConstantesFunciones.LABEL_FECHA:
					sNombreCampoCategoriaValor="fecha";
					break;

				case EvaluacionEmpleadoConstantesFunciones.LABEL_ESTAEVALUADO:
					sNombreCampoCategoriaValor="esta_evaluado";
					break;

				case EvaluacionEmpleadoConstantesFunciones.LABEL_IDANIO:
					sNombreCampoCategoriaValor="id_anio";
					break;

				case EvaluacionEmpleadoConstantesFunciones.LABEL_IDSEMESTRE:
					sNombreCampoCategoriaValor="id_semestre";
					break;

				case EvaluacionEmpleadoConstantesFunciones.LABEL_IDTRIMESTRE:
					sNombreCampoCategoriaValor="id_trimestre";
					break;

				case EvaluacionEmpleadoConstantesFunciones.LABEL_IDBIMESTRE:
					sNombreCampoCategoriaValor="id_bimestre";
					break;

				case EvaluacionEmpleadoConstantesFunciones.LABEL_IDMES:
					sNombreCampoCategoriaValor="id_mes";
					break;

				case EvaluacionEmpleadoConstantesFunciones.LABEL_OBSERVACION1:
					sNombreCampoCategoriaValor="observacion1";
					break;

				case EvaluacionEmpleadoConstantesFunciones.LABEL_OBSERVACION2:
					sNombreCampoCategoriaValor="observacion2";
					break;

				case EvaluacionEmpleadoConstantesFunciones.LABEL_OBSERVACION3:
					sNombreCampoCategoriaValor="observacion3";
					break;

				case EvaluacionEmpleadoConstantesFunciones.LABEL_OBSERVACION4:
					sNombreCampoCategoriaValor="observacion4";
					break;
					
			default :
				break;
		}	
		//CATEGORIA VALOR
		
		//VALORES GRAFICO
		for(int index:this.jInternalFrameReporteDinamicoEvaluacionEmpleado.getjListColumnasValoresGrafico().getSelectedIndices()) {
			reporte=(Reporte)this.jInternalFrameReporteDinamicoEvaluacionEmpleado.getjListColumnasValoresGrafico().getModel().getElementAt(index);
			
			switch(reporte.getsCodigo()) {
				
				case EvaluacionEmpleadoConstantesFunciones.LABEL_IDEMPRESA:
					strCategorySeries+=FuncionesReporte.getStringCategoryGraficoNormalReporte(sTipoGraficoReporte,"Empresa",sNombreCampoCategoria,sNombreCampoCategoriaValor,"id_empresa");
					break;

				case EvaluacionEmpleadoConstantesFunciones.LABEL_IDSUCURSAL:
					strCategorySeries+=FuncionesReporte.getStringCategoryGraficoNormalReporte(sTipoGraficoReporte,"Sucursal",sNombreCampoCategoria,sNombreCampoCategoriaValor,"id_sucursal");
					break;

				case EvaluacionEmpleadoConstantesFunciones.LABEL_IDEJERCICIO:
					strCategorySeries+=FuncionesReporte.getStringCategoryGraficoNormalReporte(sTipoGraficoReporte,"Ejercicio",sNombreCampoCategoria,sNombreCampoCategoriaValor,"id_ejercicio");
					break;

				case EvaluacionEmpleadoConstantesFunciones.LABEL_IDPERIODO:
					strCategorySeries+=FuncionesReporte.getStringCategoryGraficoNormalReporte(sTipoGraficoReporte,"Periodo",sNombreCampoCategoria,sNombreCampoCategoriaValor,"id_periodo");
					break;

				case EvaluacionEmpleadoConstantesFunciones.LABEL_IDESTRUCTURA:
					strCategorySeries+=FuncionesReporte.getStringCategoryGraficoNormalReporte(sTipoGraficoReporte,"Estructura",sNombreCampoCategoria,sNombreCampoCategoriaValor,"id_estructura");
					break;

				case EvaluacionEmpleadoConstantesFunciones.LABEL_IDEMPLEADO:
					strCategorySeries+=FuncionesReporte.getStringCategoryGraficoNormalReporte(sTipoGraficoReporte,"Empleado",sNombreCampoCategoria,sNombreCampoCategoriaValor,"id_empleado");
					break;

				case EvaluacionEmpleadoConstantesFunciones.LABEL_IDEMPLEADOEVALUA:
					strCategorySeries+=FuncionesReporte.getStringCategoryGraficoNormalReporte(sTipoGraficoReporte,"Empleado Evalua",sNombreCampoCategoria,sNombreCampoCategoriaValor,"id_empleado_evalua");
					break;

				case EvaluacionEmpleadoConstantesFunciones.LABEL_IDTIPOEVALUACIONEMPLEADO:
					strCategorySeries+=FuncionesReporte.getStringCategoryGraficoNormalReporte(sTipoGraficoReporte,"Tipo Evaluacion Empleado",sNombreCampoCategoria,sNombreCampoCategoriaValor,"id_tipo_evaluacion_empleado");
					break;

				case EvaluacionEmpleadoConstantesFunciones.LABEL_FECHA:
					strCategorySeries+=FuncionesReporte.getStringCategoryGraficoNormalReporte(sTipoGraficoReporte,"Fecha",sNombreCampoCategoria,sNombreCampoCategoriaValor,"fecha");
					break;

				case EvaluacionEmpleadoConstantesFunciones.LABEL_ESTAEVALUADO:
					strCategorySeries+=FuncionesReporte.getStringCategoryGraficoNormalReporte(sTipoGraficoReporte,"Esta Evaluado",sNombreCampoCategoria,sNombreCampoCategoriaValor,"esta_evaluado");
					break;

				case EvaluacionEmpleadoConstantesFunciones.LABEL_IDANIO:
					strCategorySeries+=FuncionesReporte.getStringCategoryGraficoNormalReporte(sTipoGraficoReporte,"Anio",sNombreCampoCategoria,sNombreCampoCategoriaValor,"id_anio");
					break;

				case EvaluacionEmpleadoConstantesFunciones.LABEL_IDSEMESTRE:
					strCategorySeries+=FuncionesReporte.getStringCategoryGraficoNormalReporte(sTipoGraficoReporte,"Semestre",sNombreCampoCategoria,sNombreCampoCategoriaValor,"id_semestre");
					break;

				case EvaluacionEmpleadoConstantesFunciones.LABEL_IDTRIMESTRE:
					strCategorySeries+=FuncionesReporte.getStringCategoryGraficoNormalReporte(sTipoGraficoReporte,"Trimestre",sNombreCampoCategoria,sNombreCampoCategoriaValor,"id_trimestre");
					break;

				case EvaluacionEmpleadoConstantesFunciones.LABEL_IDBIMESTRE:
					strCategorySeries+=FuncionesReporte.getStringCategoryGraficoNormalReporte(sTipoGraficoReporte,"Bimestre",sNombreCampoCategoria,sNombreCampoCategoriaValor,"id_bimestre");
					break;

				case EvaluacionEmpleadoConstantesFunciones.LABEL_IDMES:
					strCategorySeries+=FuncionesReporte.getStringCategoryGraficoNormalReporte(sTipoGraficoReporte,"Mes",sNombreCampoCategoria,sNombreCampoCategoriaValor,"id_mes");
					break;

				case EvaluacionEmpleadoConstantesFunciones.LABEL_OBSERVACION1:
					strCategorySeries+=FuncionesReporte.getStringCategoryGraficoNormalReporte(sTipoGraficoReporte,"Observacion1",sNombreCampoCategoria,sNombreCampoCategoriaValor,"observacion1");
					break;

				case EvaluacionEmpleadoConstantesFunciones.LABEL_OBSERVACION2:
					strCategorySeries+=FuncionesReporte.getStringCategoryGraficoNormalReporte(sTipoGraficoReporte,"Observacion2",sNombreCampoCategoria,sNombreCampoCategoriaValor,"observacion2");
					break;

				case EvaluacionEmpleadoConstantesFunciones.LABEL_OBSERVACION3:
					strCategorySeries+=FuncionesReporte.getStringCategoryGraficoNormalReporte(sTipoGraficoReporte,"Observacion3",sNombreCampoCategoria,sNombreCampoCategoriaValor,"observacion3");
					break;

				case EvaluacionEmpleadoConstantesFunciones.LABEL_OBSERVACION4:
					strCategorySeries+=FuncionesReporte.getStringCategoryGraficoNormalReporte(sTipoGraficoReporte,"Observacion4",sNombreCampoCategoria,sNombreCampoCategoriaValor,"observacion4");
					break;
					
				default :
					break;
			}
		}
		//VALORES GRAFICO
		//if(sTipoGraficoReporte.equals("BARRAS") || sTipoGraficoReporte.equals("BARRAS_3D") || sTipoGraficoReporte.equals("BARRAS_XY") ||
		//   sTipoGraficoReporte.equals("PASTEL") || sTipoGraficoReporte.equals("PASTEL_3D") || sTipoGraficoReporte.equals("APILADO")) {
			
			existe=true;
			strGrafico=FuncionesReporte.getStringGraficoReporte(sTipoGraficoReporte,sWidthGrafico,strCategorySeries);			
		//}
		
		if(existe) {
			sXmlStringFile=sXmlStringFile.replace("<!--GRAFICO-->", strGrafico);
		}												
		
		return sXmlStringFile;
	}
	
	
	//@SuppressWarnings("deprecation")
	
	public void jButtonGenerarExcelReporteDinamicoEvaluacionEmpleadoActionPerformed(ActionEvent evt) throws Exception {		
		ArrayList<EvaluacionEmpleado> evaluacionempleadosSeleccionados=new ArrayList<EvaluacionEmpleado>();		
		
		evaluacionempleadosSeleccionados=this.getEvaluacionEmpleadosSeleccionados(true);
		
		String sTipo=Funciones2.getTipoExportar(this.parametroGeneralUsuario);
		Boolean conCabecera=this.parametroGeneralUsuario.getcon_exportar_cabecera();
		String sDelimiter=Funciones2.getTipoDelimiter(this.parametroGeneralUsuario);
		String sPath=this.parametroGeneralUsuario.getpath_exportar()+"evaluacionempleado";//.xls";
		
		String sFilaCabecera="";
		String sFilaDatos="";
		
		Boolean existeFilas=false;
		
		Workbook workbook = null;
		FileOutputStream fileOutputStream=null;
		Reporte reporte=new Reporte();
		
		try {
			
			if(sTipoArchivoReporte=="EXCEL2") {
				workbook = new HSSFWorkbook();
				sPath+=".xls";
			
			} else if(sTipoArchivoReporte=="EXCEL2_2") {
				workbook = new XSSFWorkbook();
				sPath+=".xlsx";			
			}
		
			Sheet sheet = workbook.createSheet("EvaluacionEmpleados");
						
		    			
			Integer iRow=0;
			Integer iCell=0;
			
			Row row = sheet.createRow(iRow);
			Cell cell = row.createCell(iCell);
			//cell.setCellValue("Blahblah");
			
			for(int index:this.jInternalFrameReporteDinamicoEvaluacionEmpleado.getjListColumnasSelectReporte().getSelectedIndices()) {
				reporte=(Reporte)this.jInternalFrameReporteDinamicoEvaluacionEmpleado.getjListColumnasSelectReporte().getModel().getElementAt(index);
				
				switch(reporte.getsCodigo()) {
					
				case EvaluacionEmpleadoConstantesFunciones.LABEL_IDEMPRESA:
					iRow=0;

					if(!existeFilas) {row = sheet.createRow(iRow);} else {row=sheet.getRow(iRow);}

					cell = row.createCell(iCell);
					cell.setCellValue(EvaluacionEmpleadoConstantesFunciones.LABEL_IDEMPRESA);
					iRow++;

					for(EvaluacionEmpleado evaluacionempleado:evaluacionempleadosSeleccionados) {
						if(!existeFilas) {row = sheet.createRow(iRow);} else {row=sheet.getRow(iRow);}

						cell = row.createCell(iCell);
						cell.setCellValue(evaluacionempleado.getempresa_descripcion());
						iRow++;
					}

					existeFilas=true;
					iCell++;
					break;

				case EvaluacionEmpleadoConstantesFunciones.LABEL_IDSUCURSAL:
					iRow=0;

					if(!existeFilas) {row = sheet.createRow(iRow);} else {row=sheet.getRow(iRow);}

					cell = row.createCell(iCell);
					cell.setCellValue(EvaluacionEmpleadoConstantesFunciones.LABEL_IDSUCURSAL);
					iRow++;

					for(EvaluacionEmpleado evaluacionempleado:evaluacionempleadosSeleccionados) {
						if(!existeFilas) {row = sheet.createRow(iRow);} else {row=sheet.getRow(iRow);}

						cell = row.createCell(iCell);
						cell.setCellValue(evaluacionempleado.getsucursal_descripcion());
						iRow++;
					}

					existeFilas=true;
					iCell++;
					break;

				case EvaluacionEmpleadoConstantesFunciones.LABEL_IDEJERCICIO:
					iRow=0;

					if(!existeFilas) {row = sheet.createRow(iRow);} else {row=sheet.getRow(iRow);}

					cell = row.createCell(iCell);
					cell.setCellValue(EvaluacionEmpleadoConstantesFunciones.LABEL_IDEJERCICIO);
					iRow++;

					for(EvaluacionEmpleado evaluacionempleado:evaluacionempleadosSeleccionados) {
						if(!existeFilas) {row = sheet.createRow(iRow);} else {row=sheet.getRow(iRow);}

						cell = row.createCell(iCell);
						cell.setCellValue(evaluacionempleado.getejercicio_descripcion());
						iRow++;
					}

					existeFilas=true;
					iCell++;
					break;

				case EvaluacionEmpleadoConstantesFunciones.LABEL_IDPERIODO:
					iRow=0;

					if(!existeFilas) {row = sheet.createRow(iRow);} else {row=sheet.getRow(iRow);}

					cell = row.createCell(iCell);
					cell.setCellValue(EvaluacionEmpleadoConstantesFunciones.LABEL_IDPERIODO);
					iRow++;

					for(EvaluacionEmpleado evaluacionempleado:evaluacionempleadosSeleccionados) {
						if(!existeFilas) {row = sheet.createRow(iRow);} else {row=sheet.getRow(iRow);}

						cell = row.createCell(iCell);
						cell.setCellValue(evaluacionempleado.getperiodo_descripcion());
						iRow++;
					}

					existeFilas=true;
					iCell++;
					break;

				case EvaluacionEmpleadoConstantesFunciones.LABEL_IDESTRUCTURA:
					iRow=0;

					if(!existeFilas) {row = sheet.createRow(iRow);} else {row=sheet.getRow(iRow);}

					cell = row.createCell(iCell);
					cell.setCellValue(EvaluacionEmpleadoConstantesFunciones.LABEL_IDESTRUCTURA);
					iRow++;

					for(EvaluacionEmpleado evaluacionempleado:evaluacionempleadosSeleccionados) {
						if(!existeFilas) {row = sheet.createRow(iRow);} else {row=sheet.getRow(iRow);}

						cell = row.createCell(iCell);
						cell.setCellValue(evaluacionempleado.getestructura_descripcion());
						iRow++;
					}

					existeFilas=true;
					iCell++;
					break;

				case EvaluacionEmpleadoConstantesFunciones.LABEL_IDEMPLEADO:
					iRow=0;

					if(!existeFilas) {row = sheet.createRow(iRow);} else {row=sheet.getRow(iRow);}

					cell = row.createCell(iCell);
					cell.setCellValue(EvaluacionEmpleadoConstantesFunciones.LABEL_IDEMPLEADO);
					iRow++;

					for(EvaluacionEmpleado evaluacionempleado:evaluacionempleadosSeleccionados) {
						if(!existeFilas) {row = sheet.createRow(iRow);} else {row=sheet.getRow(iRow);}

						cell = row.createCell(iCell);
						cell.setCellValue(evaluacionempleado.getempleado_descripcion());
						iRow++;
					}

					existeFilas=true;
					iCell++;
					break;

				case EvaluacionEmpleadoConstantesFunciones.LABEL_IDEMPLEADOEVALUA:
					iRow=0;

					if(!existeFilas) {row = sheet.createRow(iRow);} else {row=sheet.getRow(iRow);}

					cell = row.createCell(iCell);
					cell.setCellValue(EvaluacionEmpleadoConstantesFunciones.LABEL_IDEMPLEADOEVALUA);
					iRow++;

					for(EvaluacionEmpleado evaluacionempleado:evaluacionempleadosSeleccionados) {
						if(!existeFilas) {row = sheet.createRow(iRow);} else {row=sheet.getRow(iRow);}

						cell = row.createCell(iCell);
						cell.setCellValue(evaluacionempleado.getempleadoevalua_descripcion());
						iRow++;
					}

					existeFilas=true;
					iCell++;
					break;

				case EvaluacionEmpleadoConstantesFunciones.LABEL_IDTIPOEVALUACIONEMPLEADO:
					iRow=0;

					if(!existeFilas) {row = sheet.createRow(iRow);} else {row=sheet.getRow(iRow);}

					cell = row.createCell(iCell);
					cell.setCellValue(EvaluacionEmpleadoConstantesFunciones.LABEL_IDTIPOEVALUACIONEMPLEADO);
					iRow++;

					for(EvaluacionEmpleado evaluacionempleado:evaluacionempleadosSeleccionados) {
						if(!existeFilas) {row = sheet.createRow(iRow);} else {row=sheet.getRow(iRow);}

						cell = row.createCell(iCell);
						cell.setCellValue(evaluacionempleado.gettipoevaluacionempleado_descripcion());
						iRow++;
					}

					existeFilas=true;
					iCell++;
					break;

				case EvaluacionEmpleadoConstantesFunciones.LABEL_FECHA:
					iRow=0;

					if(!existeFilas) {row = sheet.createRow(iRow);} else {row=sheet.getRow(iRow);}

					cell = row.createCell(iCell);
					cell.setCellValue(EvaluacionEmpleadoConstantesFunciones.LABEL_FECHA);
					iRow++;

					for(EvaluacionEmpleado evaluacionempleado:evaluacionempleadosSeleccionados) {
						if(!existeFilas) {row = sheet.createRow(iRow);} else {row=sheet.getRow(iRow);}

						cell = row.createCell(iCell);
						cell.setCellValue(evaluacionempleado.getfecha());
						iRow++;
					}

					existeFilas=true;
					iCell++;
					break;

				case EvaluacionEmpleadoConstantesFunciones.LABEL_ESTAEVALUADO:
					iRow=0;

					if(!existeFilas) {row = sheet.createRow(iRow);} else {row=sheet.getRow(iRow);}

					cell = row.createCell(iCell);
					cell.setCellValue(EvaluacionEmpleadoConstantesFunciones.LABEL_ESTAEVALUADO);
					iRow++;

					for(EvaluacionEmpleado evaluacionempleado:evaluacionempleadosSeleccionados) {
						if(!existeFilas) {row = sheet.createRow(iRow);} else {row=sheet.getRow(iRow);}

						cell = row.createCell(iCell);
						cell.setCellValue(evaluacionempleado.getesta_evaluado());
						iRow++;
					}

					existeFilas=true;
					iCell++;
					break;

				case EvaluacionEmpleadoConstantesFunciones.LABEL_IDANIO:
					iRow=0;

					if(!existeFilas) {row = sheet.createRow(iRow);} else {row=sheet.getRow(iRow);}

					cell = row.createCell(iCell);
					cell.setCellValue(EvaluacionEmpleadoConstantesFunciones.LABEL_IDANIO);
					iRow++;

					for(EvaluacionEmpleado evaluacionempleado:evaluacionempleadosSeleccionados) {
						if(!existeFilas) {row = sheet.createRow(iRow);} else {row=sheet.getRow(iRow);}

						cell = row.createCell(iCell);
						cell.setCellValue(evaluacionempleado.getanio_descripcion());
						iRow++;
					}

					existeFilas=true;
					iCell++;
					break;

				case EvaluacionEmpleadoConstantesFunciones.LABEL_IDSEMESTRE:
					iRow=0;

					if(!existeFilas) {row = sheet.createRow(iRow);} else {row=sheet.getRow(iRow);}

					cell = row.createCell(iCell);
					cell.setCellValue(EvaluacionEmpleadoConstantesFunciones.LABEL_IDSEMESTRE);
					iRow++;

					for(EvaluacionEmpleado evaluacionempleado:evaluacionempleadosSeleccionados) {
						if(!existeFilas) {row = sheet.createRow(iRow);} else {row=sheet.getRow(iRow);}

						cell = row.createCell(iCell);
						cell.setCellValue(evaluacionempleado.getsemestre_descripcion());
						iRow++;
					}

					existeFilas=true;
					iCell++;
					break;

				case EvaluacionEmpleadoConstantesFunciones.LABEL_IDTRIMESTRE:
					iRow=0;

					if(!existeFilas) {row = sheet.createRow(iRow);} else {row=sheet.getRow(iRow);}

					cell = row.createCell(iCell);
					cell.setCellValue(EvaluacionEmpleadoConstantesFunciones.LABEL_IDTRIMESTRE);
					iRow++;

					for(EvaluacionEmpleado evaluacionempleado:evaluacionempleadosSeleccionados) {
						if(!existeFilas) {row = sheet.createRow(iRow);} else {row=sheet.getRow(iRow);}

						cell = row.createCell(iCell);
						cell.setCellValue(evaluacionempleado.gettrimestre_descripcion());
						iRow++;
					}

					existeFilas=true;
					iCell++;
					break;

				case EvaluacionEmpleadoConstantesFunciones.LABEL_IDBIMESTRE:
					iRow=0;

					if(!existeFilas) {row = sheet.createRow(iRow);} else {row=sheet.getRow(iRow);}

					cell = row.createCell(iCell);
					cell.setCellValue(EvaluacionEmpleadoConstantesFunciones.LABEL_IDBIMESTRE);
					iRow++;

					for(EvaluacionEmpleado evaluacionempleado:evaluacionempleadosSeleccionados) {
						if(!existeFilas) {row = sheet.createRow(iRow);} else {row=sheet.getRow(iRow);}

						cell = row.createCell(iCell);
						cell.setCellValue(evaluacionempleado.getbimestre_descripcion());
						iRow++;
					}

					existeFilas=true;
					iCell++;
					break;

				case EvaluacionEmpleadoConstantesFunciones.LABEL_IDMES:
					iRow=0;

					if(!existeFilas) {row = sheet.createRow(iRow);} else {row=sheet.getRow(iRow);}

					cell = row.createCell(iCell);
					cell.setCellValue(EvaluacionEmpleadoConstantesFunciones.LABEL_IDMES);
					iRow++;

					for(EvaluacionEmpleado evaluacionempleado:evaluacionempleadosSeleccionados) {
						if(!existeFilas) {row = sheet.createRow(iRow);} else {row=sheet.getRow(iRow);}

						cell = row.createCell(iCell);
						cell.setCellValue(evaluacionempleado.getmes_descripcion());
						iRow++;
					}

					existeFilas=true;
					iCell++;
					break;

				case EvaluacionEmpleadoConstantesFunciones.LABEL_OBSERVACION1:
					iRow=0;

					if(!existeFilas) {row = sheet.createRow(iRow);} else {row=sheet.getRow(iRow);}

					cell = row.createCell(iCell);
					cell.setCellValue(EvaluacionEmpleadoConstantesFunciones.LABEL_OBSERVACION1);
					iRow++;

					for(EvaluacionEmpleado evaluacionempleado:evaluacionempleadosSeleccionados) {
						if(!existeFilas) {row = sheet.createRow(iRow);} else {row=sheet.getRow(iRow);}

						cell = row.createCell(iCell);
						cell.setCellValue(evaluacionempleado.getobservacion1());
						iRow++;
					}

					existeFilas=true;
					iCell++;
					break;

				case EvaluacionEmpleadoConstantesFunciones.LABEL_OBSERVACION2:
					iRow=0;

					if(!existeFilas) {row = sheet.createRow(iRow);} else {row=sheet.getRow(iRow);}

					cell = row.createCell(iCell);
					cell.setCellValue(EvaluacionEmpleadoConstantesFunciones.LABEL_OBSERVACION2);
					iRow++;

					for(EvaluacionEmpleado evaluacionempleado:evaluacionempleadosSeleccionados) {
						if(!existeFilas) {row = sheet.createRow(iRow);} else {row=sheet.getRow(iRow);}

						cell = row.createCell(iCell);
						cell.setCellValue(evaluacionempleado.getobservacion2());
						iRow++;
					}

					existeFilas=true;
					iCell++;
					break;

				case EvaluacionEmpleadoConstantesFunciones.LABEL_OBSERVACION3:
					iRow=0;

					if(!existeFilas) {row = sheet.createRow(iRow);} else {row=sheet.getRow(iRow);}

					cell = row.createCell(iCell);
					cell.setCellValue(EvaluacionEmpleadoConstantesFunciones.LABEL_OBSERVACION3);
					iRow++;

					for(EvaluacionEmpleado evaluacionempleado:evaluacionempleadosSeleccionados) {
						if(!existeFilas) {row = sheet.createRow(iRow);} else {row=sheet.getRow(iRow);}

						cell = row.createCell(iCell);
						cell.setCellValue(evaluacionempleado.getobservacion3());
						iRow++;
					}

					existeFilas=true;
					iCell++;
					break;

				case EvaluacionEmpleadoConstantesFunciones.LABEL_OBSERVACION4:
					iRow=0;

					if(!existeFilas) {row = sheet.createRow(iRow);} else {row=sheet.getRow(iRow);}

					cell = row.createCell(iCell);
					cell.setCellValue(EvaluacionEmpleadoConstantesFunciones.LABEL_OBSERVACION4);
					iRow++;

					for(EvaluacionEmpleado evaluacionempleado:evaluacionempleadosSeleccionados) {
						if(!existeFilas) {row = sheet.createRow(iRow);} else {row=sheet.getRow(iRow);}

						cell = row.createCell(iCell);
						cell.setCellValue(evaluacionempleado.getobservacion4());
						iRow++;
					}

					existeFilas=true;
					iCell++;
					break;
					
					default :
						break;
				}
			}
			
			
			//if(conCabecera) {
			//	this.getFilaCabeceraExportarExcelEvaluacionEmpleado(row);				
			//	iRow++;
			//}				
			
			//for(EvaluacionEmpleado evaluacionempleadoAux:evaluacionempleadosSeleccionados) {
			//	row = sheet.createRow(iRow);
				
			//	this.getFilaDatosExportarExcelEvaluacionEmpleado(evaluacionempleadoAux,row);
				
			//	iRow++;
			//}
			
			
			
			fileOutputStream = new FileOutputStream(new File(sPath));
		    
			workbook.write(fileOutputStream);
			
			//fileOutputStream.close();
			
			Constantes2.S_PATH_ULTIMO_ARCHIVO=sPath;
			
			if(this.parametroGeneralUsuario.getcon_mensaje_confirmacion() && !this.evaluacionempleadoSessionBean.getEsGuardarRelacionado()) {//Constantes.ISMOSTRARMENSAJESMANTENIMIENTO && 
				JOptionPane.showMessageDialog(this,"EXPORTADO CORRECTAMENTE:"+sPath,"MANTENIMIENTO DE Evaluacion Empleado",JOptionPane.INFORMATION_MESSAGE);
			}
		} catch (Exception e) {
			throw e;
			
		} finally {			
       		if (fileOutputStream != null) {
				fileOutputStream.close();
			}			
		}				
	}	
	
	
	
	
	public void buscarPorId(Long idActual) throws Exception {    		
		try {
			if(Constantes.ISUSAEJBLOGICLAYER) {
				this.evaluacionempleadoLogic.getNewConnexionToDeep("");
			}
			
			this.idActual=idActual;
			this.iNumeroPaginacionPagina=0;
			
			this.procesarBusqueda("PorId");
				    	
			//NO FUNCIONA BINDINGS
			this.inicializarActualizarBindingEvaluacionEmpleado(false);
			
			//SI ES MANUAL
			if(EvaluacionEmpleadoJInternalFrame.ISBINDING_MANUAL) {
				//this.inicializarActualizarBindingManualEvaluacionEmpleado();
			}	
			
			if(Constantes.ISUSAEJBLOGICLAYER) {
				this.evaluacionempleadoLogic.commitNewConnexionToDeep();
			}
			
		} catch(Exception e) {
			
			if(Constantes.ISUSAEJBLOGICLAYER) {
				this.evaluacionempleadoLogic.rollbackNewConnexionToDeep();
			}
			
			FuncionesSwing.manageException(this, e,logger);
			
		} finally {
			if(Constantes.ISUSAEJBLOGICLAYER) {
				this.evaluacionempleadoLogic.closeNewConnexionToDeep();
			}
		}
	}
	
	public void jButtonAnterioresEvaluacionEmpleadoActionPerformed(ActionEvent evt) throws Exception {    		
		try	{
			//this.iNumeroPaginacion-=this.iNumeroPaginacion;
			/*
			if(this.iNumeroPaginacion<0) {
				this.iNumeroPaginacion=0;
			}
			*/
			//this.iNumeroPaginacionPagina=10;			
			
			if(Constantes.ISUSAEJBLOGICLAYER) {
				this.evaluacionempleadoLogic.getNewConnexionToDeep("");
			}
			
			this.anteriores();
			
			//NO FUNCIONA BINDINGS
			this.inicializarActualizarBindingEvaluacionEmpleado(false);
			
			//SI ES MANUAL
			if(EvaluacionEmpleadoJInternalFrame.ISBINDING_MANUAL) {
	    		//this.inicializarActualizarBindingManualEvaluacionEmpleado();
			}
			
			if(Constantes.ISUSAEJBLOGICLAYER) {
				this.evaluacionempleadoLogic.commitNewConnexionToDeep();
			}
			
		} catch(Exception e) {
			if(Constantes.ISUSAEJBLOGICLAYER) {
				this.evaluacionempleadoLogic.rollbackNewConnexionToDeep();
			}
			
			FuncionesSwing.manageException(this, e,logger,EvaluacionEmpleadoConstantesFunciones.CLASSNAME);
		
		} finally {
			if(Constantes.ISUSAEJBLOGICLAYER) {
				this.evaluacionempleadoLogic.closeNewConnexionToDeep();
			}
		}
	}
	
	public void jButtonSiguientesEvaluacionEmpleadoActionPerformed(ActionEvent evt) throws Exception {    		
		try	{
			//this.iNumeroPaginacion+=this.iNumeroPaginacion;
			//this.iNumeroPaginacionPagina=10;			
			
			if(Constantes.ISUSAEJBLOGICLAYER) {
				this.evaluacionempleadoLogic.getNewConnexionToDeep("");
			}
			
			this.siguientes();
			
			//NO FUNCIONA BINDINGS
			this.inicializarActualizarBindingEvaluacionEmpleado(false);
			
			//SI ES MANUAL
			if(EvaluacionEmpleadoJInternalFrame.ISBINDING_MANUAL) {
	    		//this.inicializarActualizarBindingManualEvaluacionEmpleado();
			}		
			
			if(Constantes.ISUSAEJBLOGICLAYER) {
				this.evaluacionempleadoLogic.commitNewConnexionToDeep();
			}
			
		} catch(Exception e) {
			if(Constantes.ISUSAEJBLOGICLAYER) {
				this.evaluacionempleadoLogic.rollbackNewConnexionToDeep();
			}
			
			FuncionesSwing.manageException(this, e,logger,EvaluacionEmpleadoConstantesFunciones.CLASSNAME);
		
		} finally {
			if(Constantes.ISUSAEJBLOGICLAYER) {
				this.evaluacionempleadoLogic.closeNewConnexionToDeep();
			}
		}
	}
	
	public void aumentarTamanioFilaNuevaTablaEvaluacionEmpleado() throws Exception {		
		Dimension dimensionMinimum=this.jTableDatosEvaluacionEmpleado.getMinimumSize();
		Dimension dimensionMaximum=this.jTableDatosEvaluacionEmpleado.getMaximumSize();
		Dimension dimensionPreferred=this.jTableDatosEvaluacionEmpleado.getPreferredSize();
	
		double iHeightConFilaNueva=dimensionPreferred.getHeight();
		
		iHeightConFilaNueva+=this.jTableDatosEvaluacionEmpleado.getRowHeight();
		
		dimensionMinimum.setSize(dimensionMinimum.getWidth(),iHeightConFilaNueva);
		dimensionMaximum.setSize(dimensionMaximum.getWidth(),iHeightConFilaNueva);
		dimensionPreferred.setSize(dimensionPreferred.getWidth(),iHeightConFilaNueva);
		
		this.jTableDatosEvaluacionEmpleado.setMinimumSize(dimensionMinimum);
		this.jTableDatosEvaluacionEmpleado.setMaximumSize(dimensionMaximum);
		this.jTableDatosEvaluacionEmpleado.setPreferredSize(dimensionPreferred);	
	}
	
	public void inicializarActualizarBindingEvaluacionEmpleado(Boolean esInicializar) throws Exception {
		this.inicializarActualizarBindingEvaluacionEmpleado(esInicializar,true);
	}
	
	public void inicializarActualizarBindingEvaluacionEmpleado(Boolean esInicializar,Boolean conTabla) throws Exception {		
		if(conTabla) {
			this.inicializarActualizarBindingTablaEvaluacionEmpleado(esInicializar);
		}
		
		this.inicializarActualizarBindingBotonesEvaluacionEmpleado(esInicializar);
		
		//FUNCIONALIDAD_RELACIONADO
		if(!this.evaluacionempleadoSessionBean.getEsGuardarRelacionado()) {
			try{this.inicializarActualizarBindingBusquedasEvaluacionEmpleado(esInicializar);}catch(Exception e){e.printStackTrace();}
			
			//this.inicializarActualizarBindingtiposArchivosReportesAccionesEvaluacionEmpleado(esInicializar) ;
			
			this.inicializarActualizarBindingParametrosReportesEvaluacionEmpleado(esInicializar) ;
		}
		
		if(esInicializar) {
			if( !EvaluacionEmpleadoJInternalFrame.ISBINDING_MANUAL_TABLA ||
			   	!EvaluacionEmpleadoJInternalFrame.ISBINDING_MANUAL) {
			   	
			}
		}
	}
	
	public void inicializarActualizarBindingManualEvaluacionEmpleado() throws Exception {		
		//NO SE NECESITA HACER BINDING OTRA VEZ
		//this.inicializarActualizarBindingTablaEvaluacionEmpleado();
		
		this.inicializarActualizarBindingBotonesManualEvaluacionEmpleado(true);
		
		//FUNCIONALIDAD_RELACIONADO
		if(!this.evaluacionempleadoSessionBean.getEsGuardarRelacionado()) {
			
			this.inicializarActualizarBindingBusquedasManualEvaluacionEmpleado();			
			
			
			//this.inicializarActualizarBindingtiposArchivosReportesAccionesEvaluacionEmpleado() ;
			
			this.inicializarActualizarBindingParametrosReportesPostAccionesManualEvaluacionEmpleado(false) ;			
			
		}
	}
	
	public void inicializarActualizarBindingParametrosReportesPostAccionesManualEvaluacionEmpleado(Boolean esSetControles) throws Exception {
		try	{					
			if(!esSetControles) {
				this.isSeleccionarTodos=this.jCheckBoxSeleccionarTodosEvaluacionEmpleado.isSelected();
				this.isSeleccionados=this.jCheckBoxSeleccionadosEvaluacionEmpleado.isSelected();
				
				
				this.conGraficoReporte=this.jCheckBoxConGraficoReporteEvaluacionEmpleado.isSelected();															
				
				
				if(this.jInternalFrameDetalleFormEvaluacionEmpleado!=null) {
				this.isPostAccionNuevo=this.jInternalFrameDetalleFormEvaluacionEmpleado.jCheckBoxPostAccionNuevoEvaluacionEmpleado.isSelected();
				this.isPostAccionSinCerrar=this.jInternalFrameDetalleFormEvaluacionEmpleado.jCheckBoxPostAccionSinCerrarEvaluacionEmpleado.isSelected();
				this.isPostAccionSinMensaje=this.jInternalFrameDetalleFormEvaluacionEmpleado.jCheckBoxPostAccionSinMensajeEvaluacionEmpleado.isSelected();
				}
			
			} else {
				this.jCheckBoxSeleccionarTodosEvaluacionEmpleado.setSelected(this.isSeleccionarTodos);
				this.jCheckBoxSeleccionadosEvaluacionEmpleado.setSelected(this.isSeleccionados);
				
				
				this.jCheckBoxConGraficoReporteEvaluacionEmpleado.setSelected(this.conGraficoReporte);				
				
				
				if(this.jInternalFrameDetalleFormEvaluacionEmpleado!=null) {
				this.jInternalFrameDetalleFormEvaluacionEmpleado.jCheckBoxPostAccionNuevoEvaluacionEmpleado.setSelected(this.isPostAccionNuevo);
				this.jInternalFrameDetalleFormEvaluacionEmpleado.jCheckBoxPostAccionSinCerrarEvaluacionEmpleado.setSelected(this.isPostAccionSinCerrar);
				this.jInternalFrameDetalleFormEvaluacionEmpleado.jCheckBoxPostAccionSinMensajeEvaluacionEmpleado.setSelected(this.isPostAccionSinMensaje);
				}
			}
			
			
			if(this.jComboBoxTiposPaginacionEvaluacionEmpleado.getSelectedItem()!=null) {
				this.sTipoPaginacion=((Reporte)this.jComboBoxTiposPaginacionEvaluacionEmpleado.getSelectedItem()).getsCodigo();			
			}
			
			
			
			if(this.jInternalFrameDetalleFormEvaluacionEmpleado!=null) {
			this.sTipoAccionFormulario=((Reporte)this.jInternalFrameDetalleFormEvaluacionEmpleado.jComboBoxTiposAccionesFormularioEvaluacionEmpleado.getSelectedItem()).getsCodigo();
			}
			
			
			
			if(!this.conCargarMinimo) {
				this.sTipoArchivoReporte=((Reporte)this.jComboBoxTiposArchivosReportesEvaluacionEmpleado.getSelectedItem()).getsCodigo();			
				
				if(this.jInternalFrameReporteDinamicoEvaluacionEmpleado!=null) {
					this.sTipoArchivoReporteDinamico=((Reporte)this.jInternalFrameReporteDinamicoEvaluacionEmpleado.getjComboBoxTiposArchivosReportesDinamico().getSelectedItem()).getsCodigo();			
				}
				
				this.sTipoRelacion=((Reporte)this.jComboBoxTiposRelacionesEvaluacionEmpleado.getSelectedItem()).getsCodigo();
									
				this.sTipoAccion=((Reporte)this.jComboBoxTiposAccionesEvaluacionEmpleado.getSelectedItem()).getsCodigo();
													
				this.sTipoSeleccionar=((Reporte)this.jComboBoxTiposSeleccionarEvaluacionEmpleado.getSelectedItem()).getsCodigo();
									
				this.sTipoReporte=((Reporte)this.jComboBoxTiposReportesEvaluacionEmpleado.getSelectedItem()).getsCodigo();							
					
				if(this.jInternalFrameReporteDinamicoEvaluacionEmpleado!=null) {
					this.sTipoReporteDinamico=((Reporte)this.jInternalFrameReporteDinamicoEvaluacionEmpleado.getjComboBoxTiposReportesDinamico().getSelectedItem()).getsCodigo();							
				}
				
				this.sTipoGraficoReporte=((Reporte)this.jComboBoxTiposGraficosReportesEvaluacionEmpleado.getSelectedItem()).getsCodigo();											
			}			
			
			this.sValorCampoGeneral=this.jTextFieldValorCampoGeneralEvaluacionEmpleado.getText();						
			
			
			
		} catch(Exception e) {
			throw e;
		}
	}
	
	public void inicializarActualizarBindingParametrosReportesEvaluacionEmpleado(Boolean esInicializar) throws Exception {
		try	{	
			if(EvaluacionEmpleadoJInternalFrame.ISBINDING_MANUAL) {
				this. inicializarActualizarBindingParametrosReportesPostAccionesManualEvaluacionEmpleado(false);
			} else {
			}
		} catch(Exception e) {
			throw e;
		}
	}	
	
	public void inicializarActualizarBindingtiposArchivosReportesAccionesEvaluacionEmpleado() throws Exception {
		try	{
			if(EvaluacionEmpleadoJInternalFrame.ISBINDING_MANUAL) {
				this.inicializarActualizarBindingtiposArchivosReportesAccionesManualEvaluacionEmpleado();
			} else {
			}
		} catch(Exception e) {
			throw e;
		}
	}
	
	@SuppressWarnings("unchecked")
	public void inicializarActualizarBindingtiposArchivosReportesAccionesManualFormDetalleEvaluacionEmpleado() throws Exception {
		//TIPOS ACCIONES FORMULARIO	
		this.jInternalFrameDetalleFormEvaluacionEmpleado.jComboBoxTiposAccionesFormularioEvaluacionEmpleado.removeAllItems();
				
		for(Reporte reporte:this.tiposAccionesFormulario) {
			this.jInternalFrameDetalleFormEvaluacionEmpleado.jComboBoxTiposAccionesFormularioEvaluacionEmpleado.addItem(reporte);
		}
		
		//TIPOS ACCIONES FORMULARIO
	}
	
	@SuppressWarnings("unchecked")
	public void inicializarActualizarBindingtiposArchivosReportesAccionesManualEvaluacionEmpleado() throws Exception {
		try	{
			
			//TIPOS ARCHIVOS REPORTES
			this.jComboBoxTiposArchivosReportesEvaluacionEmpleado.removeAllItems();
				
			for(Reporte reporte:this.tiposArchivosReportes) {
				this.jComboBoxTiposArchivosReportesEvaluacionEmpleado.addItem(reporte);
			}
			
			
				
			//TIPOS REPORTES
			this.jComboBoxTiposReportesEvaluacionEmpleado.removeAllItems();
				
			for(Reporte reporte:this.tiposReportes) {
				this.jComboBoxTiposReportesEvaluacionEmpleado.addItem(reporte);
			}
			
			
			//TIPOS GRAFICOS REPORTES
			this.jComboBoxTiposGraficosReportesEvaluacionEmpleado.removeAllItems();
				
			for(Reporte reporte:this.tiposGraficosReportes) {
				this.jComboBoxTiposGraficosReportesEvaluacionEmpleado.addItem(reporte);
			}
			
			
			//TIPOS PAGINACION
			this.jComboBoxTiposPaginacionEvaluacionEmpleado.removeAllItems();
				
			for(Reporte reporte:this.tiposPaginacion) {
				this.jComboBoxTiposPaginacionEvaluacionEmpleado.addItem(reporte);
			}
			
			
			if(!this.evaluacionempleadoSessionBean.getEsGuardarRelacionado()) {
				this.jComboBoxTiposPaginacionEvaluacionEmpleado.setSelectedItem(Funciones2.getTipoPaginacionDefecto("NORMAL",this.tiposPaginacion));
			} else {
				this.jComboBoxTiposPaginacionEvaluacionEmpleado.setSelectedItem(Funciones2.getTipoPaginacionDefecto("RELACIONADO",this.tiposPaginacion));
			}
				
				
			//TIPOS ACCIONES	
			this.jComboBoxTiposRelacionesEvaluacionEmpleado.removeAllItems();
				
			for(Reporte reporte:this.tiposRelaciones) {
				this.jComboBoxTiposRelacionesEvaluacionEmpleado.addItem(reporte);
			}
			
			//TIPOS ACCIONES
				
				
			//TIPOS ACCIONES	
			this.jComboBoxTiposAccionesEvaluacionEmpleado.removeAllItems();
				
			for(Reporte reporte:this.tiposAcciones) {
				this.jComboBoxTiposAccionesEvaluacionEmpleado.addItem(reporte);
			}
			
			//TIPOS ACCIONES			
			
			
			
			//TIPOS ACCIONES FORMULARIO	
			if(this.jInternalFrameDetalleFormEvaluacionEmpleado!=null) { //if(this.conCargarFormDetalle) {
				this.jInternalFrameDetalleFormEvaluacionEmpleado.jComboBoxTiposAccionesFormularioEvaluacionEmpleado.removeAllItems();
				
				for(Reporte reporte:this.tiposAccionesFormulario) {
					this.jInternalFrameDetalleFormEvaluacionEmpleado.jComboBoxTiposAccionesFormularioEvaluacionEmpleado.addItem(reporte);
				}
				
			}
			//TIPOS ACCIONES FORMULARIO
			
			
			
			//TIPOS SELECCIONAR
			this.jComboBoxTiposSeleccionarEvaluacionEmpleado.removeAllItems();
				
			for(Reporte reporte:this.tiposSeleccionar) {
				this.jComboBoxTiposSeleccionarEvaluacionEmpleado.addItem(reporte);
			}
			
			
			if(this.tiposSeleccionar!=null && this.tiposSeleccionar.size()>1) {
				this.jComboBoxTiposSeleccionarEvaluacionEmpleado.setSelectedIndex(1);
			}
				
			//REPORTE DINAMICO
			this.inicializarActualizarBindingtiposArchivosReportesDinamicoAccionesManualEvaluacionEmpleado();
							
			//TIPOS COLUMNAS SELECT
			//TIPOS SELECCIONAR
			
			
		} catch(Exception e) {
			throw e;
		}
	}		
	
	
	@SuppressWarnings("unchecked")
	public void inicializarActualizarBindingtiposArchivosReportesDinamicoAccionesManualEvaluacionEmpleado() throws Exception {
		try	{
			DefaultListModel<Reporte> defaultListModel=new DefaultListModel<Reporte>();
			
			
			//TIPOS ARCHIVOS REPORTES DINAMICO
			if(this.jInternalFrameReporteDinamicoEvaluacionEmpleado!=null) {
				this.jInternalFrameReporteDinamicoEvaluacionEmpleado.getjComboBoxTiposArchivosReportesDinamico().removeAllItems();
					
				for(Reporte reporte:this.tiposArchivosReportesDinamico) {
					this.jInternalFrameReporteDinamicoEvaluacionEmpleado.getjComboBoxTiposArchivosReportesDinamico().addItem(reporte);
				}
				
			}
			
			//TIPOS REPORTES DINAMICO
			if(this.jInternalFrameReporteDinamicoEvaluacionEmpleado!=null) {
				this.jInternalFrameReporteDinamicoEvaluacionEmpleado.getjComboBoxTiposReportesDinamico().removeAllItems();
					
				for(Reporte reporte:this.tiposReportesDinamico) {
					this.jInternalFrameReporteDinamicoEvaluacionEmpleado.getjComboBoxTiposReportesDinamico().addItem(reporte);
				}
				
			}
			
			defaultListModel=new DefaultListModel<Reporte>();
			
			if(this.jInternalFrameReporteDinamicoEvaluacionEmpleado!=null) {
				
				if(this.jInternalFrameReporteDinamicoEvaluacionEmpleado.getjListColumnasSelectReporte()!=null) {
					this.jInternalFrameReporteDinamicoEvaluacionEmpleado.getjListColumnasSelectReporte().removeAll();
						
					for(Reporte reporte:this.tiposColumnasSelect) {
						defaultListModel.addElement(reporte);
					}						
						
					this.jInternalFrameReporteDinamicoEvaluacionEmpleado.getjListColumnasSelectReporte().setModel(defaultListModel);									
						
				}	
					
				//TIPOS RELACIONES SELECT
				//TIPOS SELECCIONAR
				defaultListModel=new DefaultListModel<Reporte>();
				if(this.jInternalFrameReporteDinamicoEvaluacionEmpleado.getjListRelacionesSelectReporte()!=null) {
					this.jInternalFrameReporteDinamicoEvaluacionEmpleado.getjListRelacionesSelectReporte().removeAll();
						
					for(Reporte reporte:this.tiposRelacionesSelect) {
						defaultListModel.addElement(reporte);
					}						
						
					this.jInternalFrameReporteDinamicoEvaluacionEmpleado.getjListRelacionesSelectReporte().setModel(defaultListModel);									
						
				}	
				
			}
		} catch(Exception e) {
			throw e;
		}
	}	
	
	
	
	public void inicializarActualizarBindingBusquedasManualEvaluacionEmpleado()  throws Exception {				
		//BYDAN_BUSQUEDAS		
		
		if(this.jComboBoxid_anioFK_IdAnioEvaluacionEmpleado.getSelectedItem()!=null){this.id_anioFK_IdAnio=((Anio)this.jComboBoxid_anioFK_IdAnioEvaluacionEmpleado.getSelectedItem()).getId();}
		if(this.jComboBoxid_bimestreFK_IdBimestreEvaluacionEmpleado.getSelectedItem()!=null){this.id_bimestreFK_IdBimestre=((Bimestre)this.jComboBoxid_bimestreFK_IdBimestreEvaluacionEmpleado.getSelectedItem()).getId();}
		if(this.jComboBoxid_empleadoFK_IdEmpleadoEvaluacionEmpleado.getSelectedItem()!=null){this.id_empleadoFK_IdEmpleado=((Empleado)this.jComboBoxid_empleadoFK_IdEmpleadoEvaluacionEmpleado.getSelectedItem()).getId();}
		if(this.jComboBoxid_empleado_evaluaFK_IdEmpleadoEvaluaEvaluacionEmpleado.getSelectedItem()!=null){this.id_empleado_evaluaFK_IdEmpleadoEvalua=((Empleado)this.jComboBoxid_empleado_evaluaFK_IdEmpleadoEvaluaEvaluacionEmpleado.getSelectedItem()).getId();}
		if(this.jComboBoxid_estructuraFK_IdEstructuraEvaluacionEmpleado.getSelectedItem()!=null){this.id_estructuraFK_IdEstructura=((Estructura)this.jComboBoxid_estructuraFK_IdEstructuraEvaluacionEmpleado.getSelectedItem()).getId();}
		if(this.jComboBoxid_mesFK_IdMesEvaluacionEmpleado.getSelectedItem()!=null){this.id_mesFK_IdMes=((Mes)this.jComboBoxid_mesFK_IdMesEvaluacionEmpleado.getSelectedItem()).getId();}
		if(this.jComboBoxid_semestreFK_IdSemestreEvaluacionEmpleado.getSelectedItem()!=null){this.id_semestreFK_IdSemestre=((Semestre)this.jComboBoxid_semestreFK_IdSemestreEvaluacionEmpleado.getSelectedItem()).getId();}
		if(this.jComboBoxid_tipo_evaluacion_empleadoFK_IdTipoEvaluacionEmpleadoEvaluacionEmpleado.getSelectedItem()!=null){this.id_tipo_evaluacion_empleadoFK_IdTipoEvaluacionEmpleado=((TipoEvaluacionEmpleado)this.jComboBoxid_tipo_evaluacion_empleadoFK_IdTipoEvaluacionEmpleadoEvaluacionEmpleado.getSelectedItem()).getId();}
		if(this.jComboBoxid_trimestreFK_IdTrimestreEvaluacionEmpleado.getSelectedItem()!=null){this.id_trimestreFK_IdTrimestre=((Trimestre)this.jComboBoxid_trimestreFK_IdTrimestreEvaluacionEmpleado.getSelectedItem()).getId();}
		
	}
	
	
	
	
	public void inicializarActualizarBindingBusquedasEvaluacionEmpleado(Boolean esInicializar) throws Exception {				
		if(EvaluacionEmpleadoJInternalFrame.ISBINDING_MANUAL) {
			
			this.inicializarActualizarBindingBusquedasManualEvaluacionEmpleado();			
			
		} else {
		}
	}		
		
	public void inicializarActualizarBindingTablaEvaluacionEmpleado() throws Exception {
		this.inicializarActualizarBindingTablaEvaluacionEmpleado(false);
	}
	
	
	public void inicializarActualizarBindingTablaOrderByEvaluacionEmpleado() {
		//TABLA OrderBy	
		TableColumn tableColumn=new TableColumn();
		Integer iWidthTableDefinicionOrderBy=0;			
			
		this.jInternalFrameOrderByEvaluacionEmpleado.getjTableDatosOrderBy().setModel(new TablaGeneralOrderByModel(this.arrOrderBy));
					
		//DEFINIR RENDERERS OrderBy
		tableColumn=this.jInternalFrameOrderByEvaluacionEmpleado.getjTableDatosOrderBy().getColumnModel().getColumn(Funciones2.getColumnIndexByName(this.jInternalFrameOrderByEvaluacionEmpleado.getjTableDatosOrderBy(),OrderBy.ISSELECTED));			
		//tableColumn.addPropertyChangeListener(new EvaluacionEmpleadoPropertyChangeListener());
					
		tableColumn.setPreferredWidth(50); 	 
		tableColumn.setWidth(50); 	 
		tableColumn.setMinWidth(50);
		tableColumn.setMaxWidth(50);
				
		iWidthTableDefinicionOrderBy+=50;
					
		tableColumn=this.jInternalFrameOrderByEvaluacionEmpleado.getjTableDatosOrderBy().getColumnModel().getColumn(Funciones2.getColumnIndexByName(this.jInternalFrameOrderByEvaluacionEmpleado.getjTableDatosOrderBy(),OrderBy.NOMBRE));
		//tableColumn.addPropertyChangeListener(new EvaluacionEmpleadoPropertyChangeListener());
					
		tableColumn.setPreferredWidth(150); 	 
		tableColumn.setWidth(150); 	 
		tableColumn.setMinWidth(150);
		tableColumn.setMaxWidth(150);
				
		iWidthTableDefinicionOrderBy+=150;
					
		//tableColumn=this.jTableDatosEvaluacionEmpleadoOrderBy.getColumnModel().getColumn(Funciones2.getColumnIndexByName(this.jTableDatosEvaluacionEmpleadoOrderBy,OrderBy.NOMBREDB));			
		////tableColumn.addPropertyChangeListener(new EvaluacionEmpleadoPropertyChangeListener());
								
		tableColumn=this.jInternalFrameOrderByEvaluacionEmpleado.getjTableDatosOrderBy().getColumnModel().getColumn(Funciones2.getColumnIndexByName(this.jInternalFrameOrderByEvaluacionEmpleado.getjTableDatosOrderBy(),OrderBy.ESDESC));
		//tableColumn.addPropertyChangeListener(new EvaluacionEmpleadoPropertyChangeListener());
												
		tableColumn.setPreferredWidth(50); 	 
		tableColumn.setWidth(50); 	 
		tableColumn.setMinWidth(50);
		tableColumn.setMaxWidth(50);
				
		((AbstractTableModel) this.jInternalFrameOrderByEvaluacionEmpleado.getjTableDatosOrderBy().getModel()).fireTableDataChanged();
				
		iWidthTableDefinicionOrderBy+=50;
	}
	
	
	
	public void inicializarActualizarBindingTablaEvaluacionEmpleado(Boolean esInicializar) throws Exception {
		Boolean isNoExiste=false;
		Integer iCountNumeroColumnasNormal=0;
		Integer iCountNumeroColumnasFk=0;
		
		this.iWidthTableDefinicion=0;
		
		int iSizeTabla=0;
		
		iSizeTabla=this.getSizeTablaDatos();
		
	if(esInicializar || ConstantesSwing.FORZAR_INICIALIZAR_TABLA) {//esInicializar
		//ARCHITECTURE
		if(Constantes.ISUSAEJBLOGICLAYER) {
			isNoExiste=evaluacionempleadoLogic.getEvaluacionEmpleados().size()==0;
		} else if(Constantes.ISUSAEJBREMOTE || Constantes.ISUSAEJBHOME) {
			isNoExiste=evaluacionempleados.size()==0;
		}
		//ARCHITECTURE
			
		if(isNoExiste) {
			if(this.iNumeroPaginacion-this.iNumeroPaginacion>0) {
				this.iNumeroPaginacion-=this.iNumeroPaginacion;
			}
		}
		
		TableColumn tableColumn=new TableColumn();
		
		if(EvaluacionEmpleadoJInternalFrame.ISBINDING_MANUAL_TABLA) {
			
			//ARCHITECTURE
			if(Constantes.ISUSAEJBLOGICLAYER) {
				this.jTableDatosEvaluacionEmpleado.setModel(new EvaluacionEmpleadoModel(this.evaluacionempleadoLogic.getEvaluacionEmpleados(),this));
			} else if(Constantes.ISUSAEJBREMOTE || Constantes.ISUSAEJBHOME ) {
				this.jTableDatosEvaluacionEmpleado.setModel(new EvaluacionEmpleadoModel(this.evaluacionempleados,this));
			}
			//ARCHITECTURE
			
							
			
			
			if(this.jInternalFrameOrderByEvaluacionEmpleado!=null && this.jInternalFrameOrderByEvaluacionEmpleado.getjTableDatosOrderBy()!=null) {
				this.inicializarActualizarBindingTablaOrderByEvaluacionEmpleado();
			}
			
								
			//DEFINIR RENDERERS
			tableColumn=this.jTableDatosEvaluacionEmpleado.getColumnModel().getColumn(Funciones2.getColumnIndexByName(this.jTableDatosEvaluacionEmpleado,Constantes2.S_SELECCIONAR));
			//tableColumn.addPropertyChangeListener(new EvaluacionEmpleadoPropertyChangeListener());
			tableColumn.setCellRenderer(new BooleanRenderer(true,"Seleccionar "+EvaluacionEmpleadoConstantesFunciones.SCLASSWEBTITULO,evaluacionempleadoConstantesFunciones.resaltarSeleccionarEvaluacionEmpleado,true,false,"","",this));
			tableColumn.setCellEditor(new BooleanEditorRenderer(true,"Seleccionar "+EvaluacionEmpleadoConstantesFunciones.SCLASSWEBTITULO,evaluacionempleadoConstantesFunciones.resaltarSeleccionarEvaluacionEmpleado,false,"","",this));			
			
			tableColumn.setPreferredWidth(50); 	 
			tableColumn.setWidth(50); 	 
			tableColumn.setMinWidth(50); 
			tableColumn.setMaxWidth(50); 
			
			this.iWidthTableDefinicion+=50;
			
			


			tableColumn=this.jTableDatosEvaluacionEmpleado.getColumnModel().getColumn(Funciones2.getColumnIndexByName(this.jTableDatosEvaluacionEmpleado,EvaluacionEmpleadoConstantesFunciones.LABEL_ID));

		if(this.evaluacionempleadoConstantesFunciones.mostraridEvaluacionEmpleado && Funciones2.permiteMostarParaBusqueda(this.esParaBusquedaForeignKey,EvaluacionEmpleadoConstantesFunciones.LABEL_ID,false,iCountNumeroColumnasNormal++,iCountNumeroColumnasFk)) {
			tableColumn.setCellRenderer(new TextFieldRenderer(this.evaluacionempleadoConstantesFunciones.resaltaridEvaluacionEmpleado,this.evaluacionempleadoConstantesFunciones.activaridEvaluacionEmpleado,this,true,"idEvaluacionEmpleado","BASICO"));
			tableColumn.setCellEditor(new TextFieldEditorRenderer(this.evaluacionempleadoConstantesFunciones.resaltaridEvaluacionEmpleado,this.evaluacionempleadoConstantesFunciones.activaridEvaluacionEmpleado,this,true,"idEvaluacionEmpleado","BASICO",false));

			tableColumn.setPreferredWidth(50);
			tableColumn.setWidth(50);
			tableColumn.setMinWidth(50);
			tableColumn.setMaxWidth(50);

			this.iWidthTableDefinicion+=50;
		} else {
			Funciones2.setTableColumnOcultar(tableColumn);
		}


			tableColumn=this.jTableDatosEvaluacionEmpleado.getColumnModel().getColumn(Funciones2.getColumnIndexByName(this.jTableDatosEvaluacionEmpleado,EvaluacionEmpleadoConstantesFunciones.LABEL_IDEMPRESA));

		if(this.evaluacionempleadoConstantesFunciones.mostrarid_empresaEvaluacionEmpleado && Funciones2.permiteMostarParaBusqueda(this.esParaBusquedaForeignKey,EvaluacionEmpleadoConstantesFunciones.LABEL_IDEMPRESA,true,iCountNumeroColumnasNormal,iCountNumeroColumnasFk++) && Constantes.ISDEVELOPING) {
			tableColumn.setCellRenderer(new EmpresaTableCell(this.empresasForeignKey,this.evaluacionempleadoConstantesFunciones.resaltarid_empresaEvaluacionEmpleado,this,this.evaluacionempleadoConstantesFunciones.activarid_empresaEvaluacionEmpleado));
			tableColumn.setCellEditor(new EmpresaTableCell(this.empresasForeignKey,this.evaluacionempleadoConstantesFunciones.resaltarid_empresaEvaluacionEmpleado,this,this.evaluacionempleadoConstantesFunciones.activarid_empresaEvaluacionEmpleado,false,"id_empresaEvaluacionEmpleado","GLOBAL"));

			tableColumn.setPreferredWidth(Constantes.ISWING_ANCHO_COLUMNA + FuncionesSwing.getValorProporcion(Constantes.ISWING_ANCHO_CONTROL,0));
			tableColumn.setWidth(Constantes.ISWING_ANCHO_COLUMNA + FuncionesSwing.getValorProporcion(Constantes.ISWING_ANCHO_CONTROL,0));
			tableColumn.setMinWidth(Constantes.ISWING_ANCHO_COLUMNA + FuncionesSwing.getValorProporcion(Constantes.ISWING_ANCHO_CONTROL,0));
			tableColumn.setMaxWidth(Constantes.ISWING_ANCHO_COLUMNA + FuncionesSwing.getValorProporcion(Constantes.ISWING_ANCHO_CONTROL,0));

			this.iWidthTableDefinicion+=Constantes.ISWING_ANCHO_COLUMNA + FuncionesSwing.getValorProporcion(Constantes.ISWING_ANCHO_CONTROL,0);
			//tableColumn.addPropertyChangeListener(new EvaluacionEmpleadoPropertyChangeListener());
		} else {
			Funciones2.setTableColumnOcultar(tableColumn);
		}


			tableColumn=this.jTableDatosEvaluacionEmpleado.getColumnModel().getColumn(Funciones2.getColumnIndexByName(this.jTableDatosEvaluacionEmpleado,EvaluacionEmpleadoConstantesFunciones.LABEL_IDSUCURSAL));

		if(this.evaluacionempleadoConstantesFunciones.mostrarid_sucursalEvaluacionEmpleado && Funciones2.permiteMostarParaBusqueda(this.esParaBusquedaForeignKey,EvaluacionEmpleadoConstantesFunciones.LABEL_IDSUCURSAL,true,iCountNumeroColumnasNormal,iCountNumeroColumnasFk++) && Constantes.ISDEVELOPING) {
			tableColumn.setCellRenderer(new SucursalTableCell(this.sucursalsForeignKey,this.evaluacionempleadoConstantesFunciones.resaltarid_sucursalEvaluacionEmpleado,this,this.evaluacionempleadoConstantesFunciones.activarid_sucursalEvaluacionEmpleado));
			tableColumn.setCellEditor(new SucursalTableCell(this.sucursalsForeignKey,this.evaluacionempleadoConstantesFunciones.resaltarid_sucursalEvaluacionEmpleado,this,this.evaluacionempleadoConstantesFunciones.activarid_sucursalEvaluacionEmpleado,false,"id_sucursalEvaluacionEmpleado","GLOBAL"));

			tableColumn.setPreferredWidth(Constantes.ISWING_ANCHO_COLUMNA + FuncionesSwing.getValorProporcion(Constantes.ISWING_ANCHO_CONTROL,0));
			tableColumn.setWidth(Constantes.ISWING_ANCHO_COLUMNA + FuncionesSwing.getValorProporcion(Constantes.ISWING_ANCHO_CONTROL,0));
			tableColumn.setMinWidth(Constantes.ISWING_ANCHO_COLUMNA + FuncionesSwing.getValorProporcion(Constantes.ISWING_ANCHO_CONTROL,0));
			tableColumn.setMaxWidth(Constantes.ISWING_ANCHO_COLUMNA + FuncionesSwing.getValorProporcion(Constantes.ISWING_ANCHO_CONTROL,0));

			this.iWidthTableDefinicion+=Constantes.ISWING_ANCHO_COLUMNA + FuncionesSwing.getValorProporcion(Constantes.ISWING_ANCHO_CONTROL,0);
			//tableColumn.addPropertyChangeListener(new EvaluacionEmpleadoPropertyChangeListener());
		} else {
			Funciones2.setTableColumnOcultar(tableColumn);
		}


			tableColumn=this.jTableDatosEvaluacionEmpleado.getColumnModel().getColumn(Funciones2.getColumnIndexByName(this.jTableDatosEvaluacionEmpleado,EvaluacionEmpleadoConstantesFunciones.LABEL_IDEJERCICIO));

		if(this.evaluacionempleadoConstantesFunciones.mostrarid_ejercicioEvaluacionEmpleado && Funciones2.permiteMostarParaBusqueda(this.esParaBusquedaForeignKey,EvaluacionEmpleadoConstantesFunciones.LABEL_IDEJERCICIO,true,iCountNumeroColumnasNormal,iCountNumeroColumnasFk++) && Constantes.ISDEVELOPING) {
			tableColumn.setCellRenderer(new EjercicioTableCell(this.ejerciciosForeignKey,this.evaluacionempleadoConstantesFunciones.resaltarid_ejercicioEvaluacionEmpleado,this,this.evaluacionempleadoConstantesFunciones.activarid_ejercicioEvaluacionEmpleado));
			tableColumn.setCellEditor(new EjercicioTableCell(this.ejerciciosForeignKey,this.evaluacionempleadoConstantesFunciones.resaltarid_ejercicioEvaluacionEmpleado,this,this.evaluacionempleadoConstantesFunciones.activarid_ejercicioEvaluacionEmpleado,false,"id_ejercicioEvaluacionEmpleado","GLOBAL"));

			tableColumn.setPreferredWidth(Constantes.ISWING_ANCHO_COLUMNA + FuncionesSwing.getValorProporcion(Constantes.ISWING_ANCHO_CONTROL,0));
			tableColumn.setWidth(Constantes.ISWING_ANCHO_COLUMNA + FuncionesSwing.getValorProporcion(Constantes.ISWING_ANCHO_CONTROL,0));
			tableColumn.setMinWidth(Constantes.ISWING_ANCHO_COLUMNA + FuncionesSwing.getValorProporcion(Constantes.ISWING_ANCHO_CONTROL,0));
			tableColumn.setMaxWidth(Constantes.ISWING_ANCHO_COLUMNA + FuncionesSwing.getValorProporcion(Constantes.ISWING_ANCHO_CONTROL,0));

			this.iWidthTableDefinicion+=Constantes.ISWING_ANCHO_COLUMNA + FuncionesSwing.getValorProporcion(Constantes.ISWING_ANCHO_CONTROL,0);
			//tableColumn.addPropertyChangeListener(new EvaluacionEmpleadoPropertyChangeListener());
		} else {
			Funciones2.setTableColumnOcultar(tableColumn);
		}


			tableColumn=this.jTableDatosEvaluacionEmpleado.getColumnModel().getColumn(Funciones2.getColumnIndexByName(this.jTableDatosEvaluacionEmpleado,EvaluacionEmpleadoConstantesFunciones.LABEL_IDPERIODO));

		if(this.evaluacionempleadoConstantesFunciones.mostrarid_periodoEvaluacionEmpleado && Funciones2.permiteMostarParaBusqueda(this.esParaBusquedaForeignKey,EvaluacionEmpleadoConstantesFunciones.LABEL_IDPERIODO,true,iCountNumeroColumnasNormal,iCountNumeroColumnasFk++) && Constantes.ISDEVELOPING) {
			tableColumn.setCellRenderer(new PeriodoTableCell(this.periodosForeignKey,this.evaluacionempleadoConstantesFunciones.resaltarid_periodoEvaluacionEmpleado,this,this.evaluacionempleadoConstantesFunciones.activarid_periodoEvaluacionEmpleado));
			tableColumn.setCellEditor(new PeriodoTableCell(this.periodosForeignKey,this.evaluacionempleadoConstantesFunciones.resaltarid_periodoEvaluacionEmpleado,this,this.evaluacionempleadoConstantesFunciones.activarid_periodoEvaluacionEmpleado,false,"id_periodoEvaluacionEmpleado","GLOBAL"));

			tableColumn.setPreferredWidth(Constantes.ISWING_ANCHO_COLUMNA + FuncionesSwing.getValorProporcion(Constantes.ISWING_ANCHO_CONTROL,0));
			tableColumn.setWidth(Constantes.ISWING_ANCHO_COLUMNA + FuncionesSwing.getValorProporcion(Constantes.ISWING_ANCHO_CONTROL,0));
			tableColumn.setMinWidth(Constantes.ISWING_ANCHO_COLUMNA + FuncionesSwing.getValorProporcion(Constantes.ISWING_ANCHO_CONTROL,0));
			tableColumn.setMaxWidth(Constantes.ISWING_ANCHO_COLUMNA + FuncionesSwing.getValorProporcion(Constantes.ISWING_ANCHO_CONTROL,0));

			this.iWidthTableDefinicion+=Constantes.ISWING_ANCHO_COLUMNA + FuncionesSwing.getValorProporcion(Constantes.ISWING_ANCHO_CONTROL,0);
			//tableColumn.addPropertyChangeListener(new EvaluacionEmpleadoPropertyChangeListener());
		} else {
			Funciones2.setTableColumnOcultar(tableColumn);
		}


			tableColumn=this.jTableDatosEvaluacionEmpleado.getColumnModel().getColumn(Funciones2.getColumnIndexByName(this.jTableDatosEvaluacionEmpleado,EvaluacionEmpleadoConstantesFunciones.LABEL_IDESTRUCTURA));

		if(this.evaluacionempleadoConstantesFunciones.mostrarid_estructuraEvaluacionEmpleado && Funciones2.permiteMostarParaBusqueda(this.esParaBusquedaForeignKey,EvaluacionEmpleadoConstantesFunciones.LABEL_IDESTRUCTURA,true,iCountNumeroColumnasNormal,iCountNumeroColumnasFk++)) {
			tableColumn.setCellRenderer(new EstructuraTableCell(this.estructurasForeignKey,this.evaluacionempleadoConstantesFunciones.resaltarid_estructuraEvaluacionEmpleado,this,this.evaluacionempleadoConstantesFunciones.activarid_estructuraEvaluacionEmpleado));
			tableColumn.setCellEditor(new EstructuraTableCell(this.estructurasForeignKey,this.evaluacionempleadoConstantesFunciones.resaltarid_estructuraEvaluacionEmpleado,this,this.evaluacionempleadoConstantesFunciones.activarid_estructuraEvaluacionEmpleado,true,"id_estructuraEvaluacionEmpleado","BASICO"));

			tableColumn.setPreferredWidth(Constantes.ISWING_ANCHO_COLUMNA + FuncionesSwing.getValorProporcion(Constantes.ISWING_ANCHO_CONTROL,0));
			tableColumn.setWidth(Constantes.ISWING_ANCHO_COLUMNA + FuncionesSwing.getValorProporcion(Constantes.ISWING_ANCHO_CONTROL,0));
			tableColumn.setMinWidth(Constantes.ISWING_ANCHO_COLUMNA + FuncionesSwing.getValorProporcion(Constantes.ISWING_ANCHO_CONTROL,0));
			tableColumn.setMaxWidth(Constantes.ISWING_ANCHO_COLUMNA + FuncionesSwing.getValorProporcion(Constantes.ISWING_ANCHO_CONTROL,0));

			this.iWidthTableDefinicion+=Constantes.ISWING_ANCHO_COLUMNA + FuncionesSwing.getValorProporcion(Constantes.ISWING_ANCHO_CONTROL,0);
			//tableColumn.addPropertyChangeListener(new EvaluacionEmpleadoPropertyChangeListener());
		} else {
			Funciones2.setTableColumnOcultar(tableColumn);
		}


			tableColumn=this.jTableDatosEvaluacionEmpleado.getColumnModel().getColumn(Funciones2.getColumnIndexByName(this.jTableDatosEvaluacionEmpleado,EvaluacionEmpleadoConstantesFunciones.LABEL_IDEMPLEADO));

		if(this.evaluacionempleadoConstantesFunciones.mostrarid_empleadoEvaluacionEmpleado && Funciones2.permiteMostarParaBusqueda(this.esParaBusquedaForeignKey,EvaluacionEmpleadoConstantesFunciones.LABEL_IDEMPLEADO,true,iCountNumeroColumnasNormal,iCountNumeroColumnasFk++)) {
			tableColumn.setCellRenderer(new EmpleadoTableCell(this.empleadosForeignKey,this.evaluacionempleadoConstantesFunciones.resaltarid_empleadoEvaluacionEmpleado,this,this.evaluacionempleadoConstantesFunciones.activarid_empleadoEvaluacionEmpleado));
			tableColumn.setCellEditor(new EmpleadoTableCell(this.empleadosForeignKey,this.evaluacionempleadoConstantesFunciones.resaltarid_empleadoEvaluacionEmpleado,this,this.evaluacionempleadoConstantesFunciones.activarid_empleadoEvaluacionEmpleado,true,"id_empleadoEvaluacionEmpleado","BASICO"));

			tableColumn.setPreferredWidth(Constantes.ISWING_ANCHO_COLUMNA + FuncionesSwing.getValorProporcion(Constantes.ISWING_ANCHO_CONTROL,100));
			tableColumn.setWidth(Constantes.ISWING_ANCHO_COLUMNA + FuncionesSwing.getValorProporcion(Constantes.ISWING_ANCHO_CONTROL,100));
			tableColumn.setMinWidth(Constantes.ISWING_ANCHO_COLUMNA + FuncionesSwing.getValorProporcion(Constantes.ISWING_ANCHO_CONTROL,100));
			tableColumn.setMaxWidth(Constantes.ISWING_ANCHO_COLUMNA + FuncionesSwing.getValorProporcion(Constantes.ISWING_ANCHO_CONTROL,100));

			this.iWidthTableDefinicion+=Constantes.ISWING_ANCHO_COLUMNA + FuncionesSwing.getValorProporcion(Constantes.ISWING_ANCHO_CONTROL,100);
			//tableColumn.addPropertyChangeListener(new EvaluacionEmpleadoPropertyChangeListener());
		} else {
			Funciones2.setTableColumnOcultar(tableColumn);
		}


			tableColumn=this.jTableDatosEvaluacionEmpleado.getColumnModel().getColumn(Funciones2.getColumnIndexByName(this.jTableDatosEvaluacionEmpleado,EvaluacionEmpleadoConstantesFunciones.LABEL_IDEMPLEADOEVALUA));

		if(this.evaluacionempleadoConstantesFunciones.mostrarid_empleado_evaluaEvaluacionEmpleado && Funciones2.permiteMostarParaBusqueda(this.esParaBusquedaForeignKey,EvaluacionEmpleadoConstantesFunciones.LABEL_IDEMPLEADOEVALUA,true,iCountNumeroColumnasNormal,iCountNumeroColumnasFk++)) {
			tableColumn.setCellRenderer(new EmpleadoTableCell(this.empleadoevaluasForeignKey,this.evaluacionempleadoConstantesFunciones.resaltarid_empleado_evaluaEvaluacionEmpleado,this,this.evaluacionempleadoConstantesFunciones.activarid_empleado_evaluaEvaluacionEmpleado));
			tableColumn.setCellEditor(new EmpleadoTableCell(this.empleadoevaluasForeignKey,this.evaluacionempleadoConstantesFunciones.resaltarid_empleado_evaluaEvaluacionEmpleado,this,this.evaluacionempleadoConstantesFunciones.activarid_empleado_evaluaEvaluacionEmpleado,true,"id_empleado_evaluaEvaluacionEmpleado","BASICO"));

			tableColumn.setPreferredWidth(Constantes.ISWING_ANCHO_COLUMNA + FuncionesSwing.getValorProporcion(Constantes.ISWING_ANCHO_CONTROL,75));
			tableColumn.setWidth(Constantes.ISWING_ANCHO_COLUMNA + FuncionesSwing.getValorProporcion(Constantes.ISWING_ANCHO_CONTROL,75));
			tableColumn.setMinWidth(Constantes.ISWING_ANCHO_COLUMNA + FuncionesSwing.getValorProporcion(Constantes.ISWING_ANCHO_CONTROL,75));
			tableColumn.setMaxWidth(Constantes.ISWING_ANCHO_COLUMNA + FuncionesSwing.getValorProporcion(Constantes.ISWING_ANCHO_CONTROL,75));

			this.iWidthTableDefinicion+=Constantes.ISWING_ANCHO_COLUMNA + FuncionesSwing.getValorProporcion(Constantes.ISWING_ANCHO_CONTROL,75);
			//tableColumn.addPropertyChangeListener(new EvaluacionEmpleadoPropertyChangeListener());
		} else {
			Funciones2.setTableColumnOcultar(tableColumn);
		}


			tableColumn=this.jTableDatosEvaluacionEmpleado.getColumnModel().getColumn(Funciones2.getColumnIndexByName(this.jTableDatosEvaluacionEmpleado,EvaluacionEmpleadoConstantesFunciones.LABEL_IDTIPOEVALUACIONEMPLEADO));

		if(this.evaluacionempleadoConstantesFunciones.mostrarid_tipo_evaluacion_empleadoEvaluacionEmpleado && Funciones2.permiteMostarParaBusqueda(this.esParaBusquedaForeignKey,EvaluacionEmpleadoConstantesFunciones.LABEL_IDTIPOEVALUACIONEMPLEADO,true,iCountNumeroColumnasNormal,iCountNumeroColumnasFk++)) {
			tableColumn.setCellRenderer(new TipoEvaluacionEmpleadoTableCell(this.tipoevaluacionempleadosForeignKey,this.evaluacionempleadoConstantesFunciones.resaltarid_tipo_evaluacion_empleadoEvaluacionEmpleado,this,this.evaluacionempleadoConstantesFunciones.activarid_tipo_evaluacion_empleadoEvaluacionEmpleado));
			tableColumn.setCellEditor(new TipoEvaluacionEmpleadoTableCell(this.tipoevaluacionempleadosForeignKey,this.evaluacionempleadoConstantesFunciones.resaltarid_tipo_evaluacion_empleadoEvaluacionEmpleado,this,this.evaluacionempleadoConstantesFunciones.activarid_tipo_evaluacion_empleadoEvaluacionEmpleado,true,"id_tipo_evaluacion_empleadoEvaluacionEmpleado","BASICO"));

			tableColumn.setPreferredWidth(Constantes.ISWING_ANCHO_COLUMNA + FuncionesSwing.getValorProporcion(Constantes.ISWING_ANCHO_CONTROL,0));
			tableColumn.setWidth(Constantes.ISWING_ANCHO_COLUMNA + FuncionesSwing.getValorProporcion(Constantes.ISWING_ANCHO_CONTROL,0));
			tableColumn.setMinWidth(Constantes.ISWING_ANCHO_COLUMNA + FuncionesSwing.getValorProporcion(Constantes.ISWING_ANCHO_CONTROL,0));
			tableColumn.setMaxWidth(Constantes.ISWING_ANCHO_COLUMNA + FuncionesSwing.getValorProporcion(Constantes.ISWING_ANCHO_CONTROL,0));

			this.iWidthTableDefinicion+=Constantes.ISWING_ANCHO_COLUMNA + FuncionesSwing.getValorProporcion(Constantes.ISWING_ANCHO_CONTROL,0);
			//tableColumn.addPropertyChangeListener(new EvaluacionEmpleadoPropertyChangeListener());
		} else {
			Funciones2.setTableColumnOcultar(tableColumn);
		}


			tableColumn=this.jTableDatosEvaluacionEmpleado.getColumnModel().getColumn(Funciones2.getColumnIndexByName(this.jTableDatosEvaluacionEmpleado,EvaluacionEmpleadoConstantesFunciones.LABEL_FECHA));

		if(this.evaluacionempleadoConstantesFunciones.mostrarfechaEvaluacionEmpleado && Funciones2.permiteMostarParaBusqueda(this.esParaBusquedaForeignKey,EvaluacionEmpleadoConstantesFunciones.LABEL_FECHA,false,iCountNumeroColumnasNormal++,iCountNumeroColumnasFk)) {
			tableColumn.setCellRenderer(new DateRenderer(this.evaluacionempleadoConstantesFunciones.resaltarfechaEvaluacionEmpleado,this.evaluacionempleadoConstantesFunciones.activarfechaEvaluacionEmpleado,this,true,"fechaEvaluacionEmpleado","BASICO"));
			tableColumn.setCellEditor(new DateEditorRenderer(this.evaluacionempleadoConstantesFunciones.resaltarfechaEvaluacionEmpleado,this.evaluacionempleadoConstantesFunciones.activarfechaEvaluacionEmpleado,this,true,"fechaEvaluacionEmpleado","BASICO"));

			tableColumn.setPreferredWidth(Constantes.ISWING_ANCHO_COLUMNA + FuncionesSwing.getValorProporcion(Constantes.ISWING_ANCHO_CONTROL,30));
			tableColumn.setWidth(Constantes.ISWING_ANCHO_COLUMNA + FuncionesSwing.getValorProporcion(Constantes.ISWING_ANCHO_CONTROL,30));
			tableColumn.setMinWidth(Constantes.ISWING_ANCHO_COLUMNA + FuncionesSwing.getValorProporcion(Constantes.ISWING_ANCHO_CONTROL,30));
			tableColumn.setMaxWidth(Constantes.ISWING_ANCHO_COLUMNA + FuncionesSwing.getValorProporcion(Constantes.ISWING_ANCHO_CONTROL,30));

			this.iWidthTableDefinicion+=Constantes.ISWING_ANCHO_COLUMNA + FuncionesSwing.getValorProporcion(Constantes.ISWING_ANCHO_CONTROL,30);
			//tableColumn.addPropertyChangeListener(new EvaluacionEmpleadoPropertyChangeListener());
		} else {
			Funciones2.setTableColumnOcultar(tableColumn);
		}


			tableColumn=this.jTableDatosEvaluacionEmpleado.getColumnModel().getColumn(Funciones2.getColumnIndexByName(this.jTableDatosEvaluacionEmpleado,EvaluacionEmpleadoConstantesFunciones.LABEL_ESTAEVALUADO));

		if(this.evaluacionempleadoConstantesFunciones.mostraresta_evaluadoEvaluacionEmpleado && Funciones2.permiteMostarParaBusqueda(this.esParaBusquedaForeignKey,EvaluacionEmpleadoConstantesFunciones.LABEL_ESTAEVALUADO,false,iCountNumeroColumnasNormal++,iCountNumeroColumnasFk)) {
			tableColumn.setCellRenderer(new BooleanRenderer(this.evaluacionempleadoConstantesFunciones.resaltaresta_evaluadoEvaluacionEmpleado,this.evaluacionempleadoConstantesFunciones.activaresta_evaluadoEvaluacionEmpleado));
			tableColumn.setCellEditor(new BooleanEditorRenderer(this.evaluacionempleadoConstantesFunciones.resaltaresta_evaluadoEvaluacionEmpleado,this.evaluacionempleadoConstantesFunciones.activaresta_evaluadoEvaluacionEmpleado,this,true,"esta_evaluadoEvaluacionEmpleado","BASICO"));

			tableColumn.setPreferredWidth(Constantes.ISWING_ANCHO_COLUMNA);
			tableColumn.setWidth(Constantes.ISWING_ANCHO_COLUMNA);
			tableColumn.setMinWidth(Constantes.ISWING_ANCHO_COLUMNA);
			tableColumn.setMaxWidth(Constantes.ISWING_ANCHO_COLUMNA);

			this.iWidthTableDefinicion+=Constantes.ISWING_ANCHO_COLUMNA;
			//tableColumn.addPropertyChangeListener(new EvaluacionEmpleadoPropertyChangeListener());
		} else {
			Funciones2.setTableColumnOcultar(tableColumn);
		}


			tableColumn=this.jTableDatosEvaluacionEmpleado.getColumnModel().getColumn(Funciones2.getColumnIndexByName(this.jTableDatosEvaluacionEmpleado,EvaluacionEmpleadoConstantesFunciones.LABEL_IDANIO));

		if(this.evaluacionempleadoConstantesFunciones.mostrarid_anioEvaluacionEmpleado && Funciones2.permiteMostarParaBusqueda(this.esParaBusquedaForeignKey,EvaluacionEmpleadoConstantesFunciones.LABEL_IDANIO,true,iCountNumeroColumnasNormal,iCountNumeroColumnasFk++)) {
			tableColumn.setCellRenderer(new AnioTableCell(this.aniosForeignKey,this.evaluacionempleadoConstantesFunciones.resaltarid_anioEvaluacionEmpleado,this,this.evaluacionempleadoConstantesFunciones.activarid_anioEvaluacionEmpleado));
			tableColumn.setCellEditor(new AnioTableCell(this.aniosForeignKey,this.evaluacionempleadoConstantesFunciones.resaltarid_anioEvaluacionEmpleado,this,this.evaluacionempleadoConstantesFunciones.activarid_anioEvaluacionEmpleado,true,"id_anioEvaluacionEmpleado","BASICO"));

			tableColumn.setPreferredWidth(Constantes.ISWING_ANCHO_COLUMNA + FuncionesSwing.getValorProporcion(Constantes.ISWING_ANCHO_CONTROL,0));
			tableColumn.setWidth(Constantes.ISWING_ANCHO_COLUMNA + FuncionesSwing.getValorProporcion(Constantes.ISWING_ANCHO_CONTROL,0));
			tableColumn.setMinWidth(Constantes.ISWING_ANCHO_COLUMNA + FuncionesSwing.getValorProporcion(Constantes.ISWING_ANCHO_CONTROL,0));
			tableColumn.setMaxWidth(Constantes.ISWING_ANCHO_COLUMNA + FuncionesSwing.getValorProporcion(Constantes.ISWING_ANCHO_CONTROL,0));

			this.iWidthTableDefinicion+=Constantes.ISWING_ANCHO_COLUMNA + FuncionesSwing.getValorProporcion(Constantes.ISWING_ANCHO_CONTROL,0);
			//tableColumn.addPropertyChangeListener(new EvaluacionEmpleadoPropertyChangeListener());
		} else {
			Funciones2.setTableColumnOcultar(tableColumn);
		}


			tableColumn=this.jTableDatosEvaluacionEmpleado.getColumnModel().getColumn(Funciones2.getColumnIndexByName(this.jTableDatosEvaluacionEmpleado,EvaluacionEmpleadoConstantesFunciones.LABEL_IDSEMESTRE));

		if(this.evaluacionempleadoConstantesFunciones.mostrarid_semestreEvaluacionEmpleado && Funciones2.permiteMostarParaBusqueda(this.esParaBusquedaForeignKey,EvaluacionEmpleadoConstantesFunciones.LABEL_IDSEMESTRE,true,iCountNumeroColumnasNormal,iCountNumeroColumnasFk++)) {
			tableColumn.setCellRenderer(new SemestreTableCell(this.semestresForeignKey,this.evaluacionempleadoConstantesFunciones.resaltarid_semestreEvaluacionEmpleado,this,this.evaluacionempleadoConstantesFunciones.activarid_semestreEvaluacionEmpleado));
			tableColumn.setCellEditor(new SemestreTableCell(this.semestresForeignKey,this.evaluacionempleadoConstantesFunciones.resaltarid_semestreEvaluacionEmpleado,this,this.evaluacionempleadoConstantesFunciones.activarid_semestreEvaluacionEmpleado,true,"id_semestreEvaluacionEmpleado","BASICO"));

			tableColumn.setPreferredWidth(Constantes.ISWING_ANCHO_COLUMNA + FuncionesSwing.getValorProporcion(Constantes.ISWING_ANCHO_CONTROL,0));
			tableColumn.setWidth(Constantes.ISWING_ANCHO_COLUMNA + FuncionesSwing.getValorProporcion(Constantes.ISWING_ANCHO_CONTROL,0));
			tableColumn.setMinWidth(Constantes.ISWING_ANCHO_COLUMNA + FuncionesSwing.getValorProporcion(Constantes.ISWING_ANCHO_CONTROL,0));
			tableColumn.setMaxWidth(Constantes.ISWING_ANCHO_COLUMNA + FuncionesSwing.getValorProporcion(Constantes.ISWING_ANCHO_CONTROL,0));

			this.iWidthTableDefinicion+=Constantes.ISWING_ANCHO_COLUMNA + FuncionesSwing.getValorProporcion(Constantes.ISWING_ANCHO_CONTROL,0);
			//tableColumn.addPropertyChangeListener(new EvaluacionEmpleadoPropertyChangeListener());
		} else {
			Funciones2.setTableColumnOcultar(tableColumn);
		}


			tableColumn=this.jTableDatosEvaluacionEmpleado.getColumnModel().getColumn(Funciones2.getColumnIndexByName(this.jTableDatosEvaluacionEmpleado,EvaluacionEmpleadoConstantesFunciones.LABEL_IDTRIMESTRE));

		if(this.evaluacionempleadoConstantesFunciones.mostrarid_trimestreEvaluacionEmpleado && Funciones2.permiteMostarParaBusqueda(this.esParaBusquedaForeignKey,EvaluacionEmpleadoConstantesFunciones.LABEL_IDTRIMESTRE,true,iCountNumeroColumnasNormal,iCountNumeroColumnasFk++)) {
			tableColumn.setCellRenderer(new TrimestreTableCell(this.trimestresForeignKey,this.evaluacionempleadoConstantesFunciones.resaltarid_trimestreEvaluacionEmpleado,this,this.evaluacionempleadoConstantesFunciones.activarid_trimestreEvaluacionEmpleado));
			tableColumn.setCellEditor(new TrimestreTableCell(this.trimestresForeignKey,this.evaluacionempleadoConstantesFunciones.resaltarid_trimestreEvaluacionEmpleado,this,this.evaluacionempleadoConstantesFunciones.activarid_trimestreEvaluacionEmpleado,true,"id_trimestreEvaluacionEmpleado","BASICO"));

			tableColumn.setPreferredWidth(Constantes.ISWING_ANCHO_COLUMNA + FuncionesSwing.getValorProporcion(Constantes.ISWING_ANCHO_CONTROL,0));
			tableColumn.setWidth(Constantes.ISWING_ANCHO_COLUMNA + FuncionesSwing.getValorProporcion(Constantes.ISWING_ANCHO_CONTROL,0));
			tableColumn.setMinWidth(Constantes.ISWING_ANCHO_COLUMNA + FuncionesSwing.getValorProporcion(Constantes.ISWING_ANCHO_CONTROL,0));
			tableColumn.setMaxWidth(Constantes.ISWING_ANCHO_COLUMNA + FuncionesSwing.getValorProporcion(Constantes.ISWING_ANCHO_CONTROL,0));

			this.iWidthTableDefinicion+=Constantes.ISWING_ANCHO_COLUMNA + FuncionesSwing.getValorProporcion(Constantes.ISWING_ANCHO_CONTROL,0);
			//tableColumn.addPropertyChangeListener(new EvaluacionEmpleadoPropertyChangeListener());
		} else {
			Funciones2.setTableColumnOcultar(tableColumn);
		}


			tableColumn=this.jTableDatosEvaluacionEmpleado.getColumnModel().getColumn(Funciones2.getColumnIndexByName(this.jTableDatosEvaluacionEmpleado,EvaluacionEmpleadoConstantesFunciones.LABEL_IDBIMESTRE));

		if(this.evaluacionempleadoConstantesFunciones.mostrarid_bimestreEvaluacionEmpleado && Funciones2.permiteMostarParaBusqueda(this.esParaBusquedaForeignKey,EvaluacionEmpleadoConstantesFunciones.LABEL_IDBIMESTRE,true,iCountNumeroColumnasNormal,iCountNumeroColumnasFk++)) {
			tableColumn.setCellRenderer(new BimestreTableCell(this.bimestresForeignKey,this.evaluacionempleadoConstantesFunciones.resaltarid_bimestreEvaluacionEmpleado,this,this.evaluacionempleadoConstantesFunciones.activarid_bimestreEvaluacionEmpleado));
			tableColumn.setCellEditor(new BimestreTableCell(this.bimestresForeignKey,this.evaluacionempleadoConstantesFunciones.resaltarid_bimestreEvaluacionEmpleado,this,this.evaluacionempleadoConstantesFunciones.activarid_bimestreEvaluacionEmpleado,true,"id_bimestreEvaluacionEmpleado","BASICO"));

			tableColumn.setPreferredWidth(Constantes.ISWING_ANCHO_COLUMNA + FuncionesSwing.getValorProporcion(Constantes.ISWING_ANCHO_CONTROL,0));
			tableColumn.setWidth(Constantes.ISWING_ANCHO_COLUMNA + FuncionesSwing.getValorProporcion(Constantes.ISWING_ANCHO_CONTROL,0));
			tableColumn.setMinWidth(Constantes.ISWING_ANCHO_COLUMNA + FuncionesSwing.getValorProporcion(Constantes.ISWING_ANCHO_CONTROL,0));
			tableColumn.setMaxWidth(Constantes.ISWING_ANCHO_COLUMNA + FuncionesSwing.getValorProporcion(Constantes.ISWING_ANCHO_CONTROL,0));

			this.iWidthTableDefinicion+=Constantes.ISWING_ANCHO_COLUMNA + FuncionesSwing.getValorProporcion(Constantes.ISWING_ANCHO_CONTROL,0);
			//tableColumn.addPropertyChangeListener(new EvaluacionEmpleadoPropertyChangeListener());
		} else {
			Funciones2.setTableColumnOcultar(tableColumn);
		}


			tableColumn=this.jTableDatosEvaluacionEmpleado.getColumnModel().getColumn(Funciones2.getColumnIndexByName(this.jTableDatosEvaluacionEmpleado,EvaluacionEmpleadoConstantesFunciones.LABEL_IDMES));

		if(this.evaluacionempleadoConstantesFunciones.mostrarid_mesEvaluacionEmpleado && Funciones2.permiteMostarParaBusqueda(this.esParaBusquedaForeignKey,EvaluacionEmpleadoConstantesFunciones.LABEL_IDMES,true,iCountNumeroColumnasNormal,iCountNumeroColumnasFk++)) {
			tableColumn.setCellRenderer(new MesTableCell(this.messForeignKey,this.evaluacionempleadoConstantesFunciones.resaltarid_mesEvaluacionEmpleado,this,this.evaluacionempleadoConstantesFunciones.activarid_mesEvaluacionEmpleado));
			tableColumn.setCellEditor(new MesTableCell(this.messForeignKey,this.evaluacionempleadoConstantesFunciones.resaltarid_mesEvaluacionEmpleado,this,this.evaluacionempleadoConstantesFunciones.activarid_mesEvaluacionEmpleado,true,"id_mesEvaluacionEmpleado","BASICO"));

			tableColumn.setPreferredWidth(Constantes.ISWING_ANCHO_COLUMNA + FuncionesSwing.getValorProporcion(Constantes.ISWING_ANCHO_CONTROL,0));
			tableColumn.setWidth(Constantes.ISWING_ANCHO_COLUMNA + FuncionesSwing.getValorProporcion(Constantes.ISWING_ANCHO_CONTROL,0));
			tableColumn.setMinWidth(Constantes.ISWING_ANCHO_COLUMNA + FuncionesSwing.getValorProporcion(Constantes.ISWING_ANCHO_CONTROL,0));
			tableColumn.setMaxWidth(Constantes.ISWING_ANCHO_COLUMNA + FuncionesSwing.getValorProporcion(Constantes.ISWING_ANCHO_CONTROL,0));

			this.iWidthTableDefinicion+=Constantes.ISWING_ANCHO_COLUMNA + FuncionesSwing.getValorProporcion(Constantes.ISWING_ANCHO_CONTROL,0);
			//tableColumn.addPropertyChangeListener(new EvaluacionEmpleadoPropertyChangeListener());
		} else {
			Funciones2.setTableColumnOcultar(tableColumn);
		}


			tableColumn=this.jTableDatosEvaluacionEmpleado.getColumnModel().getColumn(Funciones2.getColumnIndexByName(this.jTableDatosEvaluacionEmpleado,EvaluacionEmpleadoConstantesFunciones.LABEL_OBSERVACION1));

		if(this.evaluacionempleadoConstantesFunciones.mostrarobservacion1EvaluacionEmpleado && Funciones2.permiteMostarParaBusqueda(this.esParaBusquedaForeignKey,EvaluacionEmpleadoConstantesFunciones.LABEL_OBSERVACION1,false,iCountNumeroColumnasNormal++,iCountNumeroColumnasFk)) {
			tableColumn.setCellRenderer(new LabelRenderer(this.evaluacionempleadoConstantesFunciones.resaltarobservacion1EvaluacionEmpleado,this.evaluacionempleadoConstantesFunciones.activarobservacion1EvaluacionEmpleado,this,true,"observacion1EvaluacionEmpleado","BASICO"));
			tableColumn.setCellEditor(new TextFieldEditorRenderer(this.evaluacionempleadoConstantesFunciones.resaltarobservacion1EvaluacionEmpleado,this.evaluacionempleadoConstantesFunciones.activarobservacion1EvaluacionEmpleado,this,true,"observacion1EvaluacionEmpleado","BASICO",false));

			tableColumn.setPreferredWidth(Constantes.ISWING_ANCHO_COLUMNA + FuncionesSwing.getValorProporcion(Constantes.ISWING_ANCHO_CONTROL,0));
			tableColumn.setWidth(Constantes.ISWING_ANCHO_COLUMNA + FuncionesSwing.getValorProporcion(Constantes.ISWING_ANCHO_CONTROL,0));
			tableColumn.setMinWidth(Constantes.ISWING_ANCHO_COLUMNA + FuncionesSwing.getValorProporcion(Constantes.ISWING_ANCHO_CONTROL,0));
			tableColumn.setMaxWidth(Constantes.ISWING_ANCHO_COLUMNA + FuncionesSwing.getValorProporcion(Constantes.ISWING_ANCHO_CONTROL,0));

			this.iWidthTableDefinicion+=Constantes.ISWING_ANCHO_COLUMNA + FuncionesSwing.getValorProporcion(Constantes.ISWING_ANCHO_CONTROL,0);
			//tableColumn.addPropertyChangeListener(new EvaluacionEmpleadoPropertyChangeListener());
		} else {
			Funciones2.setTableColumnOcultar(tableColumn);
		}


			tableColumn=this.jTableDatosEvaluacionEmpleado.getColumnModel().getColumn(Funciones2.getColumnIndexByName(this.jTableDatosEvaluacionEmpleado,EvaluacionEmpleadoConstantesFunciones.LABEL_OBSERVACION2));

		if(this.evaluacionempleadoConstantesFunciones.mostrarobservacion2EvaluacionEmpleado && Funciones2.permiteMostarParaBusqueda(this.esParaBusquedaForeignKey,EvaluacionEmpleadoConstantesFunciones.LABEL_OBSERVACION2,false,iCountNumeroColumnasNormal++,iCountNumeroColumnasFk)) {
			tableColumn.setCellRenderer(new LabelRenderer(this.evaluacionempleadoConstantesFunciones.resaltarobservacion2EvaluacionEmpleado,this.evaluacionempleadoConstantesFunciones.activarobservacion2EvaluacionEmpleado,this,true,"observacion2EvaluacionEmpleado","BASICO"));
			tableColumn.setCellEditor(new TextFieldEditorRenderer(this.evaluacionempleadoConstantesFunciones.resaltarobservacion2EvaluacionEmpleado,this.evaluacionempleadoConstantesFunciones.activarobservacion2EvaluacionEmpleado,this,true,"observacion2EvaluacionEmpleado","BASICO",false));

			tableColumn.setPreferredWidth(Constantes.ISWING_ANCHO_COLUMNA + FuncionesSwing.getValorProporcion(Constantes.ISWING_ANCHO_CONTROL,0));
			tableColumn.setWidth(Constantes.ISWING_ANCHO_COLUMNA + FuncionesSwing.getValorProporcion(Constantes.ISWING_ANCHO_CONTROL,0));
			tableColumn.setMinWidth(Constantes.ISWING_ANCHO_COLUMNA + FuncionesSwing.getValorProporcion(Constantes.ISWING_ANCHO_CONTROL,0));
			tableColumn.setMaxWidth(Constantes.ISWING_ANCHO_COLUMNA + FuncionesSwing.getValorProporcion(Constantes.ISWING_ANCHO_CONTROL,0));

			this.iWidthTableDefinicion+=Constantes.ISWING_ANCHO_COLUMNA + FuncionesSwing.getValorProporcion(Constantes.ISWING_ANCHO_CONTROL,0);
			//tableColumn.addPropertyChangeListener(new EvaluacionEmpleadoPropertyChangeListener());
		} else {
			Funciones2.setTableColumnOcultar(tableColumn);
		}


			tableColumn=this.jTableDatosEvaluacionEmpleado.getColumnModel().getColumn(Funciones2.getColumnIndexByName(this.jTableDatosEvaluacionEmpleado,EvaluacionEmpleadoConstantesFunciones.LABEL_OBSERVACION3));

		if(this.evaluacionempleadoConstantesFunciones.mostrarobservacion3EvaluacionEmpleado && Funciones2.permiteMostarParaBusqueda(this.esParaBusquedaForeignKey,EvaluacionEmpleadoConstantesFunciones.LABEL_OBSERVACION3,false,iCountNumeroColumnasNormal++,iCountNumeroColumnasFk)) {
			tableColumn.setCellRenderer(new LabelRenderer(this.evaluacionempleadoConstantesFunciones.resaltarobservacion3EvaluacionEmpleado,this.evaluacionempleadoConstantesFunciones.activarobservacion3EvaluacionEmpleado,this,true,"observacion3EvaluacionEmpleado","BASICO"));
			tableColumn.setCellEditor(new TextFieldEditorRenderer(this.evaluacionempleadoConstantesFunciones.resaltarobservacion3EvaluacionEmpleado,this.evaluacionempleadoConstantesFunciones.activarobservacion3EvaluacionEmpleado,this,true,"observacion3EvaluacionEmpleado","BASICO",false));

			tableColumn.setPreferredWidth(Constantes.ISWING_ANCHO_COLUMNA + FuncionesSwing.getValorProporcion(Constantes.ISWING_ANCHO_CONTROL,0));
			tableColumn.setWidth(Constantes.ISWING_ANCHO_COLUMNA + FuncionesSwing.getValorProporcion(Constantes.ISWING_ANCHO_CONTROL,0));
			tableColumn.setMinWidth(Constantes.ISWING_ANCHO_COLUMNA + FuncionesSwing.getValorProporcion(Constantes.ISWING_ANCHO_CONTROL,0));
			tableColumn.setMaxWidth(Constantes.ISWING_ANCHO_COLUMNA + FuncionesSwing.getValorProporcion(Constantes.ISWING_ANCHO_CONTROL,0));

			this.iWidthTableDefinicion+=Constantes.ISWING_ANCHO_COLUMNA + FuncionesSwing.getValorProporcion(Constantes.ISWING_ANCHO_CONTROL,0);
			//tableColumn.addPropertyChangeListener(new EvaluacionEmpleadoPropertyChangeListener());
		} else {
			Funciones2.setTableColumnOcultar(tableColumn);
		}


			tableColumn=this.jTableDatosEvaluacionEmpleado.getColumnModel().getColumn(Funciones2.getColumnIndexByName(this.jTableDatosEvaluacionEmpleado,EvaluacionEmpleadoConstantesFunciones.LABEL_OBSERVACION4));

		if(this.evaluacionempleadoConstantesFunciones.mostrarobservacion4EvaluacionEmpleado && Funciones2.permiteMostarParaBusqueda(this.esParaBusquedaForeignKey,EvaluacionEmpleadoConstantesFunciones.LABEL_OBSERVACION4,false,iCountNumeroColumnasNormal++,iCountNumeroColumnasFk)) {
			tableColumn.setCellRenderer(new LabelRenderer(this.evaluacionempleadoConstantesFunciones.resaltarobservacion4EvaluacionEmpleado,this.evaluacionempleadoConstantesFunciones.activarobservacion4EvaluacionEmpleado,this,true,"observacion4EvaluacionEmpleado","BASICO"));
			tableColumn.setCellEditor(new TextFieldEditorRenderer(this.evaluacionempleadoConstantesFunciones.resaltarobservacion4EvaluacionEmpleado,this.evaluacionempleadoConstantesFunciones.activarobservacion4EvaluacionEmpleado,this,true,"observacion4EvaluacionEmpleado","BASICO",false));

			tableColumn.setPreferredWidth(Constantes.ISWING_ANCHO_COLUMNA + FuncionesSwing.getValorProporcion(Constantes.ISWING_ANCHO_CONTROL,0));
			tableColumn.setWidth(Constantes.ISWING_ANCHO_COLUMNA + FuncionesSwing.getValorProporcion(Constantes.ISWING_ANCHO_CONTROL,0));
			tableColumn.setMinWidth(Constantes.ISWING_ANCHO_COLUMNA + FuncionesSwing.getValorProporcion(Constantes.ISWING_ANCHO_CONTROL,0));
			tableColumn.setMaxWidth(Constantes.ISWING_ANCHO_COLUMNA + FuncionesSwing.getValorProporcion(Constantes.ISWING_ANCHO_CONTROL,0));

			this.iWidthTableDefinicion+=Constantes.ISWING_ANCHO_COLUMNA + FuncionesSwing.getValorProporcion(Constantes.ISWING_ANCHO_CONTROL,0);
			//tableColumn.addPropertyChangeListener(new EvaluacionEmpleadoPropertyChangeListener());
		} else {
			Funciones2.setTableColumnOcultar(tableColumn);
		}
			
		} else {
		}			
					
		if(!this.evaluacionempleadoSessionBean.getEsGuardarRelacionado()
			&& !this.esParaBusquedaForeignKey) {
			

			if(this.isTienePermisosCalificacionEmpleado && this.evaluacionempleadoConstantesFunciones.mostrarCalificacionEmpleadoEvaluacionEmpleado && !EvaluacionEmpleadoConstantesFunciones.ISGUARDARREL) {
				tableColumn= new TableColumn();
				tableColumn.setIdentifier("Calificacion Empleados");
				tableColumn.setHeaderValue("Calificacion Empleados");
				tableColumn.setCellRenderer(new CalificacionEmpleadoTableCell(evaluacionempleadoConstantesFunciones.resaltarCalificacionEmpleadoEvaluacionEmpleado,this,this.evaluacionempleadoConstantesFunciones.activarCalificacionEmpleadoEvaluacionEmpleado));
				tableColumn.setCellEditor(new CalificacionEmpleadoTableCell(evaluacionempleadoConstantesFunciones.resaltarCalificacionEmpleadoEvaluacionEmpleado,this,this.evaluacionempleadoConstantesFunciones.activarCalificacionEmpleadoEvaluacionEmpleado));

				tableColumn.setPreferredWidth(Constantes.ISWING_ANCHO_CONTROL + FuncionesSwing.getValorProporcion(Constantes.ISWING_ANCHO_CONTROL,0));
				tableColumn.setWidth(Constantes.ISWING_ANCHO_CONTROL + FuncionesSwing.getValorProporcion(Constantes.ISWING_ANCHO_CONTROL,0));
				tableColumn.setMinWidth(Constantes.ISWING_ANCHO_CONTROL + FuncionesSwing.getValorProporcion(Constantes.ISWING_ANCHO_CONTROL,0));

				this.iWidthTableDefinicion+=Constantes.ISWING_ANCHO_CONTROL + FuncionesSwing.getValorProporcion(Constantes.ISWING_ANCHO_CONTROL,0);

				this.jTableDatosEvaluacionEmpleado.addColumn(tableColumn);
			}
		}
		
		if(true) {
			String sLabelColumnAccion="Editar";
			String sLabelColumnAccionEli="Eli";
			
			if(this.esParaBusquedaForeignKey)  {
				sLabelColumnAccion="Seleccionar";
				
				//LO MISMO QUE ELSE
				tableColumn= new TableColumn();
				tableColumn.setIdentifier(sLabelColumnAccion);
				tableColumn.setHeaderValue(sLabelColumnAccion);
				tableColumn.setCellRenderer(new IdTableCell(this,false,false,this.evaluacionempleadoSessionBean.getEsGuardarRelacionado()));
				tableColumn.setCellEditor(new IdTableCell(this,false,false,this.evaluacionempleadoSessionBean.getEsGuardarRelacionado()));
	
				tableColumn.setPreferredWidth(Constantes.ISWING_ANCHO_COLUMNA); 	 
				tableColumn.setWidth(Constantes.ISWING_ANCHO_COLUMNA); 	 
				tableColumn.setMinWidth(Constantes.ISWING_ANCHO_COLUMNA); 
				tableColumn.setMaxWidth(Constantes.ISWING_ANCHO_COLUMNA); 
				
				this.iWidthTableDefinicion+=Constantes.ISWING_ANCHO_COLUMNA;
				
				this.jTableDatosEvaluacionEmpleado.addColumn(tableColumn);
			
			} else {				
				
				//LO MISMO QUE IF
				
				tableColumn= new TableColumn();
				tableColumn.setIdentifier(sLabelColumnAccion);
				tableColumn.setHeaderValue(sLabelColumnAccion);
				tableColumn.setCellRenderer(new IdTableCell(this,false,false,this.evaluacionempleadoSessionBean.getEsGuardarRelacionado()));
				tableColumn.setCellEditor(new IdTableCell(this,false,false,this.evaluacionempleadoSessionBean.getEsGuardarRelacionado()));
		
				tableColumn.setPreferredWidth(Constantes.ISWING_ANCHO_COLUMNA); 	 
				tableColumn.setWidth(Constantes.ISWING_ANCHO_COLUMNA); 	 
				tableColumn.setMinWidth(Constantes.ISWING_ANCHO_COLUMNA); 
				tableColumn.setMaxWidth(Constantes.ISWING_ANCHO_COLUMNA); 
				
				this.iWidthTableDefinicion+=Constantes.ISWING_ANCHO_COLUMNA;
				
				this.jTableDatosEvaluacionEmpleado.addColumn(tableColumn);				
					
				//ELIMINAR
				if(this.isPermisoEliminarEvaluacionEmpleado && this.isPermisoGuardarCambiosEvaluacionEmpleado) {
					tableColumn= new TableColumn();
					tableColumn.setIdentifier(Constantes2.S_ELI);
					tableColumn.setHeaderValue(sLabelColumnAccionEli);
					tableColumn.setCellRenderer(new IdTableCell(this,false,true,this.evaluacionempleadoSessionBean.getEsGuardarRelacionado()));
					tableColumn.setCellEditor(new IdTableCell(this,false,true,this.evaluacionempleadoSessionBean.getEsGuardarRelacionado()));
			
					tableColumn.setPreferredWidth(65); 	 
					tableColumn.setWidth(65); 	 
					tableColumn.setMinWidth(65); 
					tableColumn.setMaxWidth(65);
					
					this.iWidthTableDefinicion+=65;
						
					this.jTableDatosEvaluacionEmpleado.addColumn(tableColumn);
				}
			}			
						
			if(this.conMaximoRelaciones && this.evaluacionempleadoSessionBean.getConGuardarRelaciones()) {
				if(this.conFuncionalidadRelaciones) {
					tableColumn= new TableColumn();
					tableColumn.setIdentifier("Editar Rel");
					tableColumn.setHeaderValue("Editar Rel");
					tableColumn.setCellRenderer(new IdTableCell(this,true,false));
					tableColumn.setCellEditor(new IdTableCell(this,true,false));
		
					tableColumn.setPreferredWidth(Constantes.ISWING_ANCHO_COLUMNA); 	 
					tableColumn.setWidth(Constantes.ISWING_ANCHO_COLUMNA); 	 
					tableColumn.setMinWidth(Constantes.ISWING_ANCHO_COLUMNA); 
					tableColumn.setMaxWidth(Constantes.ISWING_ANCHO_COLUMNA); 
					
					this.iWidthTableDefinicion+=Constantes.ISWING_ANCHO_COLUMNA;
				
					this.jTableDatosEvaluacionEmpleado.addColumn(tableColumn);
				}
			}
			
			/*
			tableColumn= new TableColumn();
			tableColumn.setIdentifier(Constantes2.S_SELECCIONAR);
			tableColumn.setHeaderValue(Constantes2.S_SELECCIONAR);
			tableColumn.setCellRenderer(new IdSeleccionarTableCell(this));
			tableColumn.setCellEditor(new IdSeleccionarTableCell(this));
			
			tableColumn.setPreferredWidth(30); 	 
			tableColumn.setWidth(30); 	 
			tableColumn.setMinWidth(30); 
			
			this.iWidthTableDefinicion+=30;
			
			this.jTableDatosEvaluacionEmpleado.addColumn(tableColumn);
			*/
		}
		
		Integer iUltimaColumna=0;//1
		Integer iNuevaPosicionColumna=0;
		
		
		//PERMITE ELIMINAR SIMPLE
		if(!this.esParaBusquedaForeignKey)  {
			if(this.isPermisoEliminarEvaluacionEmpleado && this.isPermisoGuardarCambiosEvaluacionEmpleado) {
				iUltimaColumna++;
			}	
		}
		
		//PERMITE EDITAR SIMPLE
		iUltimaColumna++;	
		
				
		if(this.conFuncionalidadRelaciones) {
			if(this.conMaximoRelaciones && this.evaluacionempleadoSessionBean.getConGuardarRelaciones()) {			
				//PERMITE EDITAR RELACIONES
				iUltimaColumna++;//2
			}
		}
		
		//MOVIA SELECCIONAR
		//iUltimaColumna++;
		
		if(!this.esParaBusquedaForeignKey)  {
			if(this.isPermisoEliminarEvaluacionEmpleado && this.isPermisoGuardarCambiosEvaluacionEmpleado) {
				//REUBICA ELIMINAR SIMPLE
				jTableDatosEvaluacionEmpleado.moveColumn(this.jTableDatosEvaluacionEmpleado.getColumnModel().getColumnCount()-iUltimaColumna, iNuevaPosicionColumna++);//-1,-2 o -3
					
				iUltimaColumna--;
			}
		}
		//REUBICA EDITAR SIMPLE
		jTableDatosEvaluacionEmpleado.moveColumn(this.jTableDatosEvaluacionEmpleado.getColumnModel().getColumnCount()-iUltimaColumna, iNuevaPosicionColumna++);//-1,-2 o -3				
		
		
		if(this.conFuncionalidadRelaciones) {
			if(this.conMaximoRelaciones && this.evaluacionempleadoSessionBean.getConGuardarRelaciones()) {	
				if(iUltimaColumna>1) {
					iUltimaColumna--;
				}
				
				//iNuevaPosicionColumna++;
				
				//REUBICA EDITAR RELACIONES
				jTableDatosEvaluacionEmpleado.moveColumn(this.jTableDatosEvaluacionEmpleado.getColumnModel().getColumnCount()-iUltimaColumna, iNuevaPosicionColumna++);//-1
			}
		}
		
		
		//REUBICABA SELECCIONAR
		/*
		if(iUltimaColumna>1) {
			iUltimaColumna--;
		}
		
		//iNuevaPosicionColumna++;
			
		//REUBICA SELECCIONAR FILA CHECK
		jTableDatosEvaluacionEmpleado.moveColumn(this.jTableDatosEvaluacionEmpleado.getColumnModel().getColumnCount()-iUltimaColumna, iNuevaPosicionColumna++);//-1		
		*/
		
		//DEFINEN HEADERS
		final TableCellRenderer tableHeaderDefaultCellRenderer = this.jTableDatosEvaluacionEmpleado.getTableHeader().getDefaultRenderer();
		
		this.jTableDatosEvaluacionEmpleado.getTableHeader().setDefaultRenderer(new TableCellRendererHeader(this.jTableDatosEvaluacionEmpleado,tableHeaderDefaultCellRenderer));
	    
		TableColumn column=null;
		
		if(!EvaluacionEmpleadoJInternalFrame.ISBINDING_MANUAL_TABLA) {
			for(int i = 0; i < this.jTableDatosEvaluacionEmpleado.getColumnModel().getColumnCount(); i++) { 
				column = this.jTableDatosEvaluacionEmpleado.getColumnModel().getColumn(i); 
				
				if(column.getIdentifier()!=null) {
					//SI SE UTILIZA UN HEADER ES GENERICO
					//column.setHeaderRenderer(new HeaderRenderer(column.getIdentifier().toString()));
				}
				
				if(column.getIdentifier()!=null && column.getIdentifier().equals(Constantes2.S_ELI)) {
					continue;
				}
				
				if(column.getIdentifier()!=null && column.getIdentifier().equals(Constantes2.S_SELECCIONAR)) {
					if(!EvaluacionEmpleadoJInternalFrame.ISBINDING_MANUAL_TABLA) {
						column.setPreferredWidth(50); 	 
						column.setWidth(50); 	 
						column.setMinWidth(50); 	
						column.setMaxWidth(50); 
						
						this.iWidthTableDefinicion+=50;
					}
					
				} else {
					if(!EvaluacionEmpleadoJInternalFrame.ISBINDING_MANUAL_TABLA) {
						column.setPreferredWidth(Constantes.ISWING_ANCHO_COLUMNA); 	 
						column.setWidth(Constantes.ISWING_ANCHO_COLUMNA); 	 
						column.setMinWidth(Constantes.ISWING_ANCHO_COLUMNA); 	
						column.setMaxWidth(Constantes.ISWING_ANCHO_COLUMNA); 	
						
						this.iWidthTableDefinicion+=Constantes.ISWING_ANCHO_COLUMNA;
					}
				}
			}
		}
		
		this.jTableDatosEvaluacionEmpleado.setSelectionBackground(FuncionesSwing.getColorSelectedBackground());
		this.jTableDatosEvaluacionEmpleado.setSelectionForeground(FuncionesSwing.getColorSelectedForeground());
		
		/*
		this.jTableDatosEvaluacionEmpleado.setDefaultRenderer(Object.class, new DefaultTableCellRenderer() {
			private static final long serialVersionUID = 1L;
			
		    @Override
		    public Component getTableCellRendererComponent(JTable table, Object value, boolean isSelected, boolean hasFocus, int row, int column) {
		        final Component component= super.getTableCellRendererComponent(table, value, isSelected, hasFocus, row, column);
		        //POR DEFECTO ES MEJOR, SE PIERDE DATOS AL SELECCIONAR BLANCO LETRAS BLANCAS
				component.setBackground(row % 2 == 0 ? FuncionesSwing.getColorTextFields(Constantes2.S_FONDOCONTROL_COLOR) : Funciones2.getColorFilaTabla2()); //FuncionesSwing.getColorTextFields(Constantes2.S_FONDOCONTROL_COLOR)
				component.setForeground(Funciones2.getColorTextoFilaTabla1());
				
				try {
		        	int iSize=-999;
		        	
		        	if(conTotales) {
						//FILA TOTALES OTRO COLOR, SI TABLA NO ES UNO A UNO
			        	if(Constantes.ISUSAEJBLOGICLAYER) {
							iSize=evaluacionempleadoLogic.getEvaluacionEmpleados().size()-1;
								
						} else if(Constantes.ISUSAEJBREMOTE || Constantes.ISUSAEJBHOME) {
							iSize=evaluacionempleados.size()-1;
						}
						
						if(iSize==row) {
							component.setBackground(Funciones2.getColorFilaTablaTotales());
						}
		        	}
					
					//POR EFICIENCIA NO UTILIZAR					
					//if (component instanceof JComponent) {
		            //    JComponent jcomponent = (JComponent) component;		                 		                
		        	//}				
					
				} catch (Exception e) {
					e.printStackTrace();
				}
				
		        return component;
		    }
		});
		*/
		
		//ESTA EN LA DEFINICION DE LA TABLA
		//this.jTableDatosEvaluacionEmpleado.setRowHeight(Constantes.ISWING_ALTO_FILA_TABLA);
		
		/*
		column=this.jTableDatosEvaluacionEmpleado.getColumnModel().getColumn(Funciones2.getColumnIndexByName(this.jTableDatosSistema,Constantes2.S_SELECCIONAR));
		
		if(column!=null) {
			column.setPreferredWidth(25); 	 
			column.setWidth(25); 	 
			column.setMinWidth(25); 	
		}
		*/
			
			//CopyTableToTableTotal();
		} else {
			
			this.actualizarVisualTableDatosEvaluacionEmpleado();
			
		}
	}
	
	/*
	//COPY_TABLES
	/* FALTARIA RESOLVER:
	   1 SOLO SCROLL PARA 2 TABLAS
	   COPIA EXACTA DE COLUMNAS DE UNA TABLA A OTRA, SI SE MODIFICA TAMANIO TAMBIEN LA OTRA
	*/
	
	public void jButtonIdActionPerformed(ActionEvent evt,int rowIndex,Boolean esRelaciones,Boolean esEliminar) { 
		try {
			if(!esEliminar) {
				this.estaModoSeleccionar=true;
				
				//this.isEsNuevoEvaluacionEmpleado=false;
					
				EvaluacionEmpleadoBeanSwingJInternalFrameAdditional.procesarEventosVista(this.parametroGeneralUsuario,this.moduloActual,this.opcionActual,this.usuarioActual,this,FuncionTipo.BEFORE,ControlTipo.FORM,EventoTipo.LOAD,EventoSubTipo.SELECTED,"FORM",this.evaluacionempleado,new Object(),this.evaluacionempleadoParameterGeneral,this.evaluacionempleadoReturnGeneral);
			
				if(this.evaluacionempleadoSessionBean.getConGuardarRelaciones()) {
					this.dStart=(double)System.currentTimeMillis();
				}
				
				if(this.jInternalFrameDetalleFormEvaluacionEmpleado==null) {
					this.inicializarFormDetalle();
				}
				
				this.inicializarInvalidValues();
				
				int intSelectedRow = 0;
				
				if(rowIndex>=0) {
					intSelectedRow=rowIndex;
					this.jTableDatosEvaluacionEmpleado.getSelectionModel().setSelectionInterval(intSelectedRow, intSelectedRow);
				} else {	
					intSelectedRow=this.jTableDatosEvaluacionEmpleado.getSelectedRow();	       
				}
				
				//ARCHITECTURE
				if(Constantes.ISUSAEJBLOGICLAYER) {
					this.evaluacionempleado =(EvaluacionEmpleado) this.evaluacionempleadoLogic.getEvaluacionEmpleados().toArray()[this.jTableDatosEvaluacionEmpleado.convertRowIndexToModel(intSelectedRow)];
				} else if(Constantes.ISUSAEJBREMOTE || Constantes.ISUSAEJBHOME ) {
					this.evaluacionempleado =(EvaluacionEmpleado) this.evaluacionempleados.toArray()[this.jTableDatosEvaluacionEmpleado.convertRowIndexToModel(intSelectedRow)];
				}
				//ARCHITECTURE
				
				//PUEDE SER PARA DUPLICADO O NUEVO TABLA
				
				if(this.evaluacionempleado.getsType().equals("DUPLICADO")
				   || this.evaluacionempleado.getsType().equals("NUEVO_GUARDAR_CAMBIOS")) {
					
					this.isEsNuevoEvaluacionEmpleado=true;
				
				} else {
					this.isEsNuevoEvaluacionEmpleado=false;	
				}
				
				//CONTROL VERSION ANTERIOR
				/*
				if(!this.evaluacionempleadoSessionBean.getEsGuardarRelacionado()) {
					if(this.evaluacionempleado.getId()>=0 && !this.evaluacionempleado.getIsNew()) {						
						this.isEsNuevoEvaluacionEmpleado=false;
						
					} else {
						this.isEsNuevoEvaluacionEmpleado=true;
					}
					
				} else {
					//CONTROLAR PARA RELACIONADO
				}
				*/
				
				//ESTABLECE SI ES RELACIONADO O NO 
				this.habilitarDeshabilitarTipoMantenimientoEvaluacionEmpleado(esRelaciones);						
				
				this.seleccionarEvaluacionEmpleado(evt,null,rowIndex);
				
				//SELECCIONA ACTUAL PERO AUN NO SE HA INGRESADO AL SISTEMA
				//SE DESHABILITA POR GUARDAR CAMBIOS
				/*
				if(this.evaluacionempleado.getId()<0) {
					this.isEsNuevoEvaluacionEmpleado=true;
				}
				*/
				
				if(!this.esParaBusquedaForeignKey) {
					this.modificarEvaluacionEmpleado(evt,rowIndex,esRelaciones);
				} else {
					this.seleccionarEvaluacionEmpleado(evt,rowIndex);
				}	
				
				if(this.evaluacionempleadoSessionBean.getConGuardarRelaciones()) {
					this.dEnd=(double)System.currentTimeMillis();					
					this.dDif=this.dEnd - this.dStart;
					
					if(Constantes.ISDEVELOPING) {
						System.out.println("Tiempo(ms) Seleccion EvaluacionEmpleado: " + this.dDif); 
					}
				}								
				
				EvaluacionEmpleadoBeanSwingJInternalFrameAdditional.procesarEventosVista(this.parametroGeneralUsuario,this.moduloActual,this.opcionActual,this.usuarioActual,this,FuncionTipo.AFTER,ControlTipo.FORM,EventoTipo.LOAD,EventoSubTipo.SELECTED,"FORM",this.evaluacionempleado,new Object(),this.evaluacionempleadoParameterGeneral,this.evaluacionempleadoReturnGeneral);
				
			} else {
				this.estaModoEliminarGuardarCambios=true;
				
				this.seleccionarEvaluacionEmpleado(evt,null,rowIndex);
				
				if(this.permiteMantenimiento(this.evaluacionempleado)) {
					if(this.evaluacionempleado.getId()>0) {
						this.evaluacionempleado.setIsDeleted(true);
						
						this.evaluacionempleadosEliminados.add(this.evaluacionempleado);
					}
					
					if(Constantes.ISUSAEJBLOGICLAYER) {				
						this.evaluacionempleadoLogic.getEvaluacionEmpleados().remove(this.evaluacionempleado);
					} else if(Constantes.ISUSAEJBREMOTE||Constantes.ISUSAEJBHOME) {
						this.evaluacionempleados.remove(this.evaluacionempleado);				
					}
					
					
					((EvaluacionEmpleadoModel) this.jTableDatosEvaluacionEmpleado.getModel()).fireTableRowsDeleted(rowIndex,rowIndex);
					
					this.actualizarFilaTotales();
					
					this.inicializarActualizarBindingTablaEvaluacionEmpleado(false);					
				}								
			}
			
		} catch(Exception e) {
			FuncionesSwing.manageException2(this, e,logger,EvaluacionEmpleadoConstantesFunciones.CLASSNAME);
			
		} finally {
			this.estaModoSeleccionar=false;				
			this.estaModoEliminarGuardarCambios=false;
		}
	}
	
	
	public void seleccionarEvaluacionEmpleado(ActionEvent evt,javax.swing.event.ListSelectionEvent evt2,int rowIndex) throws Exception { 
		try {
			//SI PUEDE SER NUEVO Y SELECCIONAR (PARA DUPLICAR Y NUEVO TABLA)
			//if(!this.isEsNuevoEvaluacionEmpleado) {
			
			if(this.jInternalFrameDetalleFormEvaluacionEmpleado==null) { //if(!this.conCargarFormDetalle) {
				this.inicializarFormDetalle();
			}
			
				int intSelectedRow = 0;
				
				if(rowIndex>=0) {
					intSelectedRow=rowIndex;
					this.jTableDatosEvaluacionEmpleado.getSelectionModel().setSelectionInterval(intSelectedRow, intSelectedRow);
				} else {	
					intSelectedRow=this.jTableDatosEvaluacionEmpleado.getSelectedRow();	       
				}
				
				//CUANDO SE RECARGA TABLA TAMBIEN SE SELECCIONA PERO CON -1 POR LO QUE SE NECESITA VALIDAR ANTES
				if(intSelectedRow<0) {
					return;
				}
				
				//ARCHITECTURE
				if(Constantes.ISUSAEJBLOGICLAYER) {
					this.evaluacionempleado =(EvaluacionEmpleado) this.evaluacionempleadoLogic.getEvaluacionEmpleados().toArray()[this.jTableDatosEvaluacionEmpleado.convertRowIndexToModel(intSelectedRow)];
				} else if(Constantes.ISUSAEJBREMOTE || Constantes.ISUSAEJBHOME ) {
					this.evaluacionempleado =(EvaluacionEmpleado) this.evaluacionempleados.toArray()[this.jTableDatosEvaluacionEmpleado.convertRowIndexToModel(intSelectedRow)];
				}
				
				if(EvaluacionEmpleadoJInternalFrame.ISBINDING_MANUAL_TABLA) {
					this.setVariablesObjetoActualToFormularioEvaluacionEmpleado(this.evaluacionempleado);
				}
				
				//ARCHITECTURE
				try {
					

					//Empresa
					if(!this.evaluacionempleadoConstantesFunciones.cargarid_empresaEvaluacionEmpleado || this.evaluacionempleadoConstantesFunciones.event_dependid_empresaEvaluacionEmpleado) {
						//this.cargarCombosEmpresasForeignKeyLista(" where id="+this.evaluacionempleado.getid_empresa());
									//this.inicializarActualizarBindingEvaluacionEmpleado(false,false);
						this.empresasForeignKey=new ArrayList<Empresa>();

						if(evaluacionempleado.getEmpresa()!=null) {
							this.empresasForeignKey.add(evaluacionempleado.getEmpresa());
						}

						this.addItemDefectoCombosForeignKeyEmpresa();
						this.cargarCombosFrameEmpresasForeignKey("Todos");
					}
					this.setActualEmpresaForeignKey(this.evaluacionempleado.getid_empresa(),false,"Formulario");

					//Sucursal
					if(!this.evaluacionempleadoConstantesFunciones.cargarid_sucursalEvaluacionEmpleado || this.evaluacionempleadoConstantesFunciones.event_dependid_sucursalEvaluacionEmpleado) {
						//this.cargarCombosSucursalsForeignKeyLista(" where id="+this.evaluacionempleado.getid_sucursal());
									//this.inicializarActualizarBindingEvaluacionEmpleado(false,false);
						this.sucursalsForeignKey=new ArrayList<Sucursal>();

						if(evaluacionempleado.getSucursal()!=null) {
							this.sucursalsForeignKey.add(evaluacionempleado.getSucursal());
						}

						this.addItemDefectoCombosForeignKeySucursal();
						this.cargarCombosFrameSucursalsForeignKey("Todos");
					}
					this.setActualSucursalForeignKey(this.evaluacionempleado.getid_sucursal(),false,"Formulario");

					//Ejercicio
					if(!this.evaluacionempleadoConstantesFunciones.cargarid_ejercicioEvaluacionEmpleado || this.evaluacionempleadoConstantesFunciones.event_dependid_ejercicioEvaluacionEmpleado) {
						//this.cargarCombosEjerciciosForeignKeyLista(" where id="+this.evaluacionempleado.getid_ejercicio());
									//this.inicializarActualizarBindingEvaluacionEmpleado(false,false);
						this.ejerciciosForeignKey=new ArrayList<Ejercicio>();

						if(evaluacionempleado.getEjercicio()!=null) {
							this.ejerciciosForeignKey.add(evaluacionempleado.getEjercicio());
						}

						this.addItemDefectoCombosForeignKeyEjercicio();
						this.cargarCombosFrameEjerciciosForeignKey("Todos");
					}
					this.setActualEjercicioForeignKey(this.evaluacionempleado.getid_ejercicio(),false,"Formulario");

					//Periodo
					if(!this.evaluacionempleadoConstantesFunciones.cargarid_periodoEvaluacionEmpleado || this.evaluacionempleadoConstantesFunciones.event_dependid_periodoEvaluacionEmpleado) {
						//this.cargarCombosPeriodosForeignKeyLista(" where id="+this.evaluacionempleado.getid_periodo());
									//this.inicializarActualizarBindingEvaluacionEmpleado(false,false);
						this.periodosForeignKey=new ArrayList<Periodo>();

						if(evaluacionempleado.getPeriodo()!=null) {
							this.periodosForeignKey.add(evaluacionempleado.getPeriodo());
						}

						this.addItemDefectoCombosForeignKeyPeriodo();
						this.cargarCombosFramePeriodosForeignKey("Todos");
					}
					this.setActualPeriodoForeignKey(this.evaluacionempleado.getid_periodo(),false,"Formulario");

					//Estructura
					if(!this.evaluacionempleadoConstantesFunciones.cargarid_estructuraEvaluacionEmpleado || this.evaluacionempleadoConstantesFunciones.event_dependid_estructuraEvaluacionEmpleado) {
						//this.cargarCombosEstructurasForeignKeyLista(" where id="+this.evaluacionempleado.getid_estructura());
									//this.inicializarActualizarBindingEvaluacionEmpleado(false,false);
						this.estructurasForeignKey=new ArrayList<Estructura>();

						if(evaluacionempleado.getEstructura()!=null) {
							this.estructurasForeignKey.add(evaluacionempleado.getEstructura());
						}

						this.addItemDefectoCombosForeignKeyEstructura();
						this.cargarCombosFrameEstructurasForeignKey("Todos");
					}
					this.setActualEstructuraForeignKey(this.evaluacionempleado.getid_estructura(),false,"Formulario");

					//Empleado
					if(!this.evaluacionempleadoConstantesFunciones.cargarid_empleadoEvaluacionEmpleado || this.evaluacionempleadoConstantesFunciones.event_dependid_empleadoEvaluacionEmpleado) {
						//this.cargarCombosEmpleadosForeignKeyLista(" where id="+this.evaluacionempleado.getid_empleado());
									//this.inicializarActualizarBindingEvaluacionEmpleado(false,false);
						this.empleadosForeignKey=new ArrayList<Empleado>();

						if(evaluacionempleado.getEmpleado()!=null) {
							this.empleadosForeignKey.add(evaluacionempleado.getEmpleado());
						}

						this.addItemDefectoCombosForeignKeyEmpleado();
						this.cargarCombosFrameEmpleadosForeignKey("Todos");
					}
					this.setActualEmpleadoForeignKey(this.evaluacionempleado.getid_empleado(),false,"Formulario");

					//EmpleadoEvalua
					if(!this.evaluacionempleadoConstantesFunciones.cargarid_empleado_evaluaEvaluacionEmpleado || this.evaluacionempleadoConstantesFunciones.event_dependid_empleado_evaluaEvaluacionEmpleado) {
						//this.cargarCombosEmpleadoEvaluasForeignKeyLista(" where id="+this.evaluacionempleado.getid_empleado_evalua());
									//this.inicializarActualizarBindingEvaluacionEmpleado(false,false);
						this.empleadoevaluasForeignKey=new ArrayList<Empleado>();

						if(evaluacionempleado.getEmpleadoEvalua()!=null) {
							this.empleadoevaluasForeignKey.add(evaluacionempleado.getEmpleadoEvalua());
						}

						this.addItemDefectoCombosForeignKeyEmpleadoEvalua();
						this.cargarCombosFrameEmpleadoEvaluasForeignKey("Todos");
					}
					this.setActualEmpleadoEvaluaForeignKey(this.evaluacionempleado.getid_empleado_evalua(),false,"Formulario");

					//TipoEvaluacionEmpleado
					if(!this.evaluacionempleadoConstantesFunciones.cargarid_tipo_evaluacion_empleadoEvaluacionEmpleado || this.evaluacionempleadoConstantesFunciones.event_dependid_tipo_evaluacion_empleadoEvaluacionEmpleado) {
						//this.cargarCombosTipoEvaluacionEmpleadosForeignKeyLista(" where id="+this.evaluacionempleado.getid_tipo_evaluacion_empleado());
									//this.inicializarActualizarBindingEvaluacionEmpleado(false,false);
						this.tipoevaluacionempleadosForeignKey=new ArrayList<TipoEvaluacionEmpleado>();

						if(evaluacionempleado.getTipoEvaluacionEmpleado()!=null) {
							this.tipoevaluacionempleadosForeignKey.add(evaluacionempleado.getTipoEvaluacionEmpleado());
						}

						this.addItemDefectoCombosForeignKeyTipoEvaluacionEmpleado();
						this.cargarCombosFrameTipoEvaluacionEmpleadosForeignKey("Todos");
					}
					this.setActualTipoEvaluacionEmpleadoForeignKey(this.evaluacionempleado.getid_tipo_evaluacion_empleado(),false,"Formulario");

					//Anio
					if(!this.evaluacionempleadoConstantesFunciones.cargarid_anioEvaluacionEmpleado || this.evaluacionempleadoConstantesFunciones.event_dependid_anioEvaluacionEmpleado) {
						//this.cargarCombosAniosForeignKeyLista(" where id="+this.evaluacionempleado.getid_anio());
									//this.inicializarActualizarBindingEvaluacionEmpleado(false,false);
						this.aniosForeignKey=new ArrayList<Anio>();

						if(evaluacionempleado.getAnio()!=null) {
							this.aniosForeignKey.add(evaluacionempleado.getAnio());
						}

						this.addItemDefectoCombosForeignKeyAnio();
						this.cargarCombosFrameAniosForeignKey("Todos");
					}
					this.setActualAnioForeignKey(this.evaluacionempleado.getid_anio(),false,"Formulario");

					//Semestre
					if(!this.evaluacionempleadoConstantesFunciones.cargarid_semestreEvaluacionEmpleado || this.evaluacionempleadoConstantesFunciones.event_dependid_semestreEvaluacionEmpleado) {
						//this.cargarCombosSemestresForeignKeyLista(" where id="+this.evaluacionempleado.getid_semestre());
									//this.inicializarActualizarBindingEvaluacionEmpleado(false,false);
						this.semestresForeignKey=new ArrayList<Semestre>();

						if(evaluacionempleado.getSemestre()!=null) {
							this.semestresForeignKey.add(evaluacionempleado.getSemestre());
						}

						this.addItemDefectoCombosForeignKeySemestre();
						this.cargarCombosFrameSemestresForeignKey("Todos");
					}
					this.setActualSemestreForeignKey(this.evaluacionempleado.getid_semestre(),false,"Formulario");

					//Trimestre
					if(!this.evaluacionempleadoConstantesFunciones.cargarid_trimestreEvaluacionEmpleado || this.evaluacionempleadoConstantesFunciones.event_dependid_trimestreEvaluacionEmpleado) {
						//this.cargarCombosTrimestresForeignKeyLista(" where id="+this.evaluacionempleado.getid_trimestre());
									//this.inicializarActualizarBindingEvaluacionEmpleado(false,false);
						this.trimestresForeignKey=new ArrayList<Trimestre>();

						if(evaluacionempleado.getTrimestre()!=null) {
							this.trimestresForeignKey.add(evaluacionempleado.getTrimestre());
						}

						this.addItemDefectoCombosForeignKeyTrimestre();
						this.cargarCombosFrameTrimestresForeignKey("Todos");
					}
					this.setActualTrimestreForeignKey(this.evaluacionempleado.getid_trimestre(),false,"Formulario");

					//Bimestre
					if(!this.evaluacionempleadoConstantesFunciones.cargarid_bimestreEvaluacionEmpleado || this.evaluacionempleadoConstantesFunciones.event_dependid_bimestreEvaluacionEmpleado) {
						//this.cargarCombosBimestresForeignKeyLista(" where id="+this.evaluacionempleado.getid_bimestre());
									//this.inicializarActualizarBindingEvaluacionEmpleado(false,false);
						this.bimestresForeignKey=new ArrayList<Bimestre>();

						if(evaluacionempleado.getBimestre()!=null) {
							this.bimestresForeignKey.add(evaluacionempleado.getBimestre());
						}

						this.addItemDefectoCombosForeignKeyBimestre();
						this.cargarCombosFrameBimestresForeignKey("Todos");
					}
					this.setActualBimestreForeignKey(this.evaluacionempleado.getid_bimestre(),false,"Formulario");

					//Mes
					if(!this.evaluacionempleadoConstantesFunciones.cargarid_mesEvaluacionEmpleado || this.evaluacionempleadoConstantesFunciones.event_dependid_mesEvaluacionEmpleado) {
						//this.cargarCombosMessForeignKeyLista(" where id="+this.evaluacionempleado.getid_mes());
									//this.inicializarActualizarBindingEvaluacionEmpleado(false,false);
						this.messForeignKey=new ArrayList<Mes>();

						if(evaluacionempleado.getMes()!=null) {
							this.messForeignKey.add(evaluacionempleado.getMes());
						}

						this.addItemDefectoCombosForeignKeyMes();
						this.cargarCombosFrameMessForeignKey("Todos");
					}
					this.setActualMesForeignKey(this.evaluacionempleado.getid_mes(),false,"Formulario");
				} catch(Exception e) {
					throw e;
				}
				
				this.actualizarEstadoCeldasBotonesEvaluacionEmpleado("s", this.isGuardarCambiosEnLote, this.isEsMantenimientoRelacionado);
				
				//NO FUNCIONA BINDING PERO SE MANTIENE
				this.inicializarActualizarBindingBotonesEvaluacionEmpleado(false) ;
				
				//SI ES MANUAL
				//this.inicializarActualizarBindingBotonesManualEvaluacionEmpleado() ;
			//}
		} catch(Exception e) {
			FuncionesSwing.manageException(this, e,logger,EvaluacionEmpleadoConstantesFunciones.CLASSNAME);
		}
	}
	
	public void setVariablesObjetoActualToFormularioTodoEvaluacionEmpleado(EvaluacionEmpleado evaluacionempleado) throws Exception { 
		this.setVariablesObjetoActualToFormularioTodoEvaluacionEmpleado(evaluacionempleado,false,"NINGUNO");
	}
	
	public void setVariablesObjetoActualToFormularioTodoEvaluacionEmpleado(EvaluacionEmpleado evaluacionempleado,Boolean conCargarListasDesdeObjetoActual,String sTipoEvento) throws Exception { 
		this.setVariablesObjetoActualToFormularioEvaluacionEmpleado(evaluacionempleado);
		
		if(conCargarListasDesdeObjetoActual) {
			this.setVariablesObjetoActualToListasForeignKeyEvaluacionEmpleado(evaluacionempleado,sTipoEvento);
		}
		
		this.setVariablesObjetoActualToFormularioForeignKeyEvaluacionEmpleado(evaluacionempleado);
	}
	
	public void setVariablesObjetoActualToFormularioEvaluacionEmpleado(EvaluacionEmpleado evaluacionempleado) throws Exception { 
		try {			
			Image imageActual=null;
			ImageIcon imageIcon = null;
			
			if(this.jInternalFrameDetalleFormEvaluacionEmpleado==null) { //if(!this.conCargarFormDetalle) {
				this.inicializarFormDetalle();
			}
			
			
			this.jInternalFrameDetalleFormEvaluacionEmpleado.jLabelidEvaluacionEmpleado.setText(evaluacionempleado.getId().toString());
			this.jInternalFrameDetalleFormEvaluacionEmpleado.jDateChooserfechaEvaluacionEmpleado.setDate(evaluacionempleado.getfecha());
			this.jInternalFrameDetalleFormEvaluacionEmpleado.jCheckBoxesta_evaluadoEvaluacionEmpleado.setSelected(evaluacionempleado.getesta_evaluado());
			this.jInternalFrameDetalleFormEvaluacionEmpleado.jTextAreaobservacion1EvaluacionEmpleado.setText(evaluacionempleado.getobservacion1());
			this.jInternalFrameDetalleFormEvaluacionEmpleado.jTextAreaobservacion2EvaluacionEmpleado.setText(evaluacionempleado.getobservacion2());
			this.jInternalFrameDetalleFormEvaluacionEmpleado.jTextAreaobservacion3EvaluacionEmpleado.setText(evaluacionempleado.getobservacion3());
			this.jInternalFrameDetalleFormEvaluacionEmpleado.jTextAreaobservacion4EvaluacionEmpleado.setText(evaluacionempleado.getobservacion4());
			
		} catch(Exception e) {
			throw e;
			//FuncionesSwing.manageException(this, e,logger,EvaluacionEmpleadoConstantesFunciones.CLASSNAME);
		}
	}
		
	public void actualizarInformacion(String sTipo,EvaluacionEmpleado evaluacionempleadoLocal) throws Exception {
		this.actualizarInformacion(sTipo,false,evaluacionempleadoLocal);
	}	
	
	public void actualizarInformacion(String sTipo,Boolean conParametroObjeto,EvaluacionEmpleado evaluacionempleadoLocal) throws Exception {
		
		if(!conParametroObjeto) {
			if(!this.getEsControlTabla()) {
				evaluacionempleadoLocal=this.evaluacionempleado;
			} else {
				evaluacionempleadoLocal=this.evaluacionempleadoAnterior;
			}
		}
		
		if(this.permiteMantenimiento(evaluacionempleadoLocal)) {
			if(sTipo.equals("EVENTO_CONTROL")) { // || sTipo.equals("EVENTO_NUEVO")
				if(!this.esControlTabla) {
					this.setVariablesFormularioToObjetoActualTodoEvaluacionEmpleado(evaluacionempleadoLocal,true);
					
					if(evaluacionempleadoSessionBean.getConGuardarRelaciones()) {
						this.actualizarRelaciones(evaluacionempleadoLocal);
					}
				}
			
			} else if(sTipo.equals("INFO_PADRE")) {
				
				if(this.evaluacionempleadoSessionBean.getEsGuardarRelacionado()) {
					this.actualizarRelacionFkPadreActual(evaluacionempleadoLocal);
				}
			}
		}
	}
	
	public void setVariablesFormularioToObjetoActualTodoEvaluacionEmpleado(EvaluacionEmpleado evaluacionempleado,Boolean conColumnasBase) throws Exception { 
		this.setVariablesFormularioToObjetoActualEvaluacionEmpleado(evaluacionempleado,conColumnasBase);
		this.setVariablesFormularioToObjetoActualForeignKeysEvaluacionEmpleado(evaluacionempleado);
	}
	
	public void setVariablesFormularioToObjetoActualEvaluacionEmpleado(EvaluacionEmpleado evaluacionempleado,Boolean conColumnasBase) throws Exception { 
		this.setVariablesFormularioToObjetoActualEvaluacionEmpleado(evaluacionempleado,conColumnasBase,true);
	}
	
	public void setVariablesFormularioToObjetoActualEvaluacionEmpleado(EvaluacionEmpleado evaluacionempleado,Boolean conColumnasBase,Boolean conInicializarInvalidValues) throws Exception { 
		String sMensajeCampoActual="";
		Boolean estaValidado=true;
		try {
			
			if(this.jInternalFrameDetalleFormEvaluacionEmpleado==null) { //if(!this.conCargarFormDetalle) {
				this.inicializarFormDetalle();
			}
			
			if(conInicializarInvalidValues) {
				this.inicializarInvalidValues();
			}
			
			

		try {
			if(this.jInternalFrameDetalleFormEvaluacionEmpleado.jLabelidEvaluacionEmpleado.getText()==null || this.jInternalFrameDetalleFormEvaluacionEmpleado.jLabelidEvaluacionEmpleado.getText()=="" || this.jInternalFrameDetalleFormEvaluacionEmpleado.jLabelidEvaluacionEmpleado.getText()=="Id") {
				this.jInternalFrameDetalleFormEvaluacionEmpleado.jLabelidEvaluacionEmpleado.setText("0");
			}

			if(conColumnasBase) {evaluacionempleado.setId(Long.parseLong(this.jInternalFrameDetalleFormEvaluacionEmpleado.jLabelidEvaluacionEmpleado.getText()));}
		} catch(Exception e) {
			estaValidado=false;
			sMensajeCampoActual+="\r\n"+EvaluacionEmpleadoConstantesFunciones.LABEL_ID+"-->"+ConstantesMensajes.SMENSAJEEXCEPCION_VALIDACIONVALOR;FuncionesSwing.mostrarCampoMensajeInvalido(false,this.jInternalFrameDetalleFormEvaluacionEmpleado.jLabelIdEvaluacionEmpleado,ConstantesMensajes.SMENSAJEEXCEPCION_VALIDACIONVALOR);
		}

		try {
			evaluacionempleado.setfecha(this.jInternalFrameDetalleFormEvaluacionEmpleado.jDateChooserfechaEvaluacionEmpleado.getDate());
		} catch(Exception e) {
			estaValidado=false;
			sMensajeCampoActual+="\r\n"+EvaluacionEmpleadoConstantesFunciones.LABEL_FECHA+"-->"+ConstantesMensajes.SMENSAJEEXCEPCION_VALIDACIONVALOR;FuncionesSwing.mostrarCampoMensajeInvalido(false,this.jInternalFrameDetalleFormEvaluacionEmpleado.jLabelfechaEvaluacionEmpleado,ConstantesMensajes.SMENSAJEEXCEPCION_VALIDACIONVALOR);
		}

		try {
			evaluacionempleado.setesta_evaluado(this.jInternalFrameDetalleFormEvaluacionEmpleado.jCheckBoxesta_evaluadoEvaluacionEmpleado.isSelected());
		} catch(Exception e) {
			estaValidado=false;
			sMensajeCampoActual+="\r\n"+EvaluacionEmpleadoConstantesFunciones.LABEL_ESTAEVALUADO+"-->"+ConstantesMensajes.SMENSAJEEXCEPCION_VALIDACIONVALOR;FuncionesSwing.mostrarCampoMensajeInvalido(false,this.jInternalFrameDetalleFormEvaluacionEmpleado.jLabelesta_evaluadoEvaluacionEmpleado,ConstantesMensajes.SMENSAJEEXCEPCION_VALIDACIONVALOR);
		}

		try {
			evaluacionempleado.setobservacion1(this.jInternalFrameDetalleFormEvaluacionEmpleado.jTextAreaobservacion1EvaluacionEmpleado.getText());
		} catch(Exception e) {
			estaValidado=false;
			sMensajeCampoActual+="\r\n"+EvaluacionEmpleadoConstantesFunciones.LABEL_OBSERVACION1+"-->"+ConstantesMensajes.SMENSAJEEXCEPCION_VALIDACIONVALOR;FuncionesSwing.mostrarCampoMensajeInvalido(false,this.jInternalFrameDetalleFormEvaluacionEmpleado.jLabelobservacion1EvaluacionEmpleado,ConstantesMensajes.SMENSAJEEXCEPCION_VALIDACIONVALOR);
		}

		try {
			evaluacionempleado.setobservacion2(this.jInternalFrameDetalleFormEvaluacionEmpleado.jTextAreaobservacion2EvaluacionEmpleado.getText());
		} catch(Exception e) {
			estaValidado=false;
			sMensajeCampoActual+="\r\n"+EvaluacionEmpleadoConstantesFunciones.LABEL_OBSERVACION2+"-->"+ConstantesMensajes.SMENSAJEEXCEPCION_VALIDACIONVALOR;FuncionesSwing.mostrarCampoMensajeInvalido(false,this.jInternalFrameDetalleFormEvaluacionEmpleado.jLabelobservacion2EvaluacionEmpleado,ConstantesMensajes.SMENSAJEEXCEPCION_VALIDACIONVALOR);
		}

		try {
			evaluacionempleado.setobservacion3(this.jInternalFrameDetalleFormEvaluacionEmpleado.jTextAreaobservacion3EvaluacionEmpleado.getText());
		} catch(Exception e) {
			estaValidado=false;
			sMensajeCampoActual+="\r\n"+EvaluacionEmpleadoConstantesFunciones.LABEL_OBSERVACION3+"-->"+ConstantesMensajes.SMENSAJEEXCEPCION_VALIDACIONVALOR;FuncionesSwing.mostrarCampoMensajeInvalido(false,this.jInternalFrameDetalleFormEvaluacionEmpleado.jLabelobservacion3EvaluacionEmpleado,ConstantesMensajes.SMENSAJEEXCEPCION_VALIDACIONVALOR);
		}

		try {
			evaluacionempleado.setobservacion4(this.jInternalFrameDetalleFormEvaluacionEmpleado.jTextAreaobservacion4EvaluacionEmpleado.getText());
		} catch(Exception e) {
			estaValidado=false;
			sMensajeCampoActual+="\r\n"+EvaluacionEmpleadoConstantesFunciones.LABEL_OBSERVACION4+"-->"+ConstantesMensajes.SMENSAJEEXCEPCION_VALIDACIONVALOR;FuncionesSwing.mostrarCampoMensajeInvalido(false,this.jInternalFrameDetalleFormEvaluacionEmpleado.jLabelobservacion4EvaluacionEmpleado,ConstantesMensajes.SMENSAJEEXCEPCION_VALIDACIONVALOR);
		}
			
			if(!estaValidado) {
				throw new Exception(sMensajeCampoActual);
			}
		} catch(NumberFormatException e) {
			throw new Exception(sMensajeCampoActual);
			//FuncionesSwing.manageException(this, e,logger,MovimientoInventarioConstantesFunciones.CLASSNAME);
		} catch(Exception e) {
			throw e;
			//FuncionesSwing.manageException(this, e,logger,EvaluacionEmpleadoConstantesFunciones.CLASSNAME);
		}
	}
	
	public void setVariablesForeignKeyObjetoBeanDefectoActualToObjetoActualEvaluacionEmpleado(EvaluacionEmpleado evaluacionempleadoBean,EvaluacionEmpleado evaluacionempleado,Boolean conDefault,Boolean conColumnasBase) throws Exception { 
		try {
			
			
		} catch(Exception e) {
			throw e;
			//FuncionesSwing.manageException(this, e,logger,EvaluacionEmpleadoConstantesFunciones.CLASSNAME);
		}
	}
	
	public void setCopiarVariablesObjetosEvaluacionEmpleado(EvaluacionEmpleado evaluacionempleadoOrigen,EvaluacionEmpleado evaluacionempleado,Boolean conDefault,Boolean conColumnasBase) throws Exception { 
		try {
			
			if(conColumnasBase) {if(conDefault || (!conDefault && evaluacionempleadoOrigen.getId()!=null && !evaluacionempleadoOrigen.getId().equals(0L))) {evaluacionempleado.setId(evaluacionempleadoOrigen.getId());}}
			if(conDefault || (!conDefault && evaluacionempleadoOrigen.getfecha()!=null && !evaluacionempleadoOrigen.getfecha().equals(new Date()))) {evaluacionempleado.setfecha(evaluacionempleadoOrigen.getfecha());}
			if(conDefault || (!conDefault && evaluacionempleadoOrigen.getesta_evaluado()!=null && !evaluacionempleadoOrigen.getesta_evaluado().equals(false))) {evaluacionempleado.setesta_evaluado(evaluacionempleadoOrigen.getesta_evaluado());}
			if(conDefault || (!conDefault && evaluacionempleadoOrigen.getobservacion1()!=null && !evaluacionempleadoOrigen.getobservacion1().equals(""))) {evaluacionempleado.setobservacion1(evaluacionempleadoOrigen.getobservacion1());}
			if(conDefault || (!conDefault && evaluacionempleadoOrigen.getobservacion2()!=null && !evaluacionempleadoOrigen.getobservacion2().equals(""))) {evaluacionempleado.setobservacion2(evaluacionempleadoOrigen.getobservacion2());}
			if(conDefault || (!conDefault && evaluacionempleadoOrigen.getobservacion3()!=null && !evaluacionempleadoOrigen.getobservacion3().equals(""))) {evaluacionempleado.setobservacion3(evaluacionempleadoOrigen.getobservacion3());}
			if(conDefault || (!conDefault && evaluacionempleadoOrigen.getobservacion4()!=null && !evaluacionempleadoOrigen.getobservacion4().equals(""))) {evaluacionempleado.setobservacion4(evaluacionempleadoOrigen.getobservacion4());}
			
		} catch(Exception e) {
			throw e;
			//FuncionesSwing.manageException(this, e,logger,EvaluacionEmpleadoConstantesFunciones.CLASSNAME);
		}
	}
	
	/*
	public void setVariablesObjetoBeanActualToFormularioEvaluacionEmpleado(EvaluacionEmpleado evaluacionempleado) throws Exception { 
		try {
			
			this.jInternalFrameDetalleFormEvaluacionEmpleado.jLabelidEvaluacionEmpleado.setText(evaluacionempleado.getId().toString());
			this.jInternalFrameDetalleFormEvaluacionEmpleado.jDateChooserfechaEvaluacionEmpleado.setDate(evaluacionempleado.getfecha());
			this.jInternalFrameDetalleFormEvaluacionEmpleado.jCheckBoxesta_evaluadoEvaluacionEmpleado.setSelected(evaluacionempleado.getesta_evaluado());
			this.jInternalFrameDetalleFormEvaluacionEmpleado.jTextAreaobservacion1EvaluacionEmpleado.setText(evaluacionempleado.getobservacion1());
			this.jInternalFrameDetalleFormEvaluacionEmpleado.jTextAreaobservacion2EvaluacionEmpleado.setText(evaluacionempleado.getobservacion2());
			this.jInternalFrameDetalleFormEvaluacionEmpleado.jTextAreaobservacion3EvaluacionEmpleado.setText(evaluacionempleado.getobservacion3());
			this.jInternalFrameDetalleFormEvaluacionEmpleado.jTextAreaobservacion4EvaluacionEmpleado.setText(evaluacionempleado.getobservacion4());
			
		} catch(Exception e) {
			FuncionesSwing.manageException(this, e,logger,EvaluacionEmpleadoConstantesFunciones.CLASSNAME);
		}
	}
	*/
	
	/*
	public void setVariablesObjetoBeanActualToFormularioEvaluacionEmpleado(EvaluacionEmpleadoBean evaluacionempleadoBean) throws Exception { 
		try {
			
			this.jInternalFrameDetalleFormEvaluacionEmpleado.jLabelidEvaluacionEmpleado.setText(evaluacionempleadoBean.getId().toString());
			this.jInternalFrameDetalleFormEvaluacionEmpleado.jDateChooserfechaEvaluacionEmpleado.setDate(evaluacionempleadoBean.getfecha());
			this.jInternalFrameDetalleFormEvaluacionEmpleado.jCheckBoxesta_evaluadoEvaluacionEmpleado.setSelected(evaluacionempleadoBean.getesta_evaluado());
			this.jInternalFrameDetalleFormEvaluacionEmpleado.jTextAreaobservacion1EvaluacionEmpleado.setText(evaluacionempleadoBean.getobservacion1());
			this.jInternalFrameDetalleFormEvaluacionEmpleado.jTextAreaobservacion2EvaluacionEmpleado.setText(evaluacionempleadoBean.getobservacion2());
			this.jInternalFrameDetalleFormEvaluacionEmpleado.jTextAreaobservacion3EvaluacionEmpleado.setText(evaluacionempleadoBean.getobservacion3());
			this.jInternalFrameDetalleFormEvaluacionEmpleado.jTextAreaobservacion4EvaluacionEmpleado.setText(evaluacionempleadoBean.getobservacion4());
			
		} catch(Exception e) {
			FuncionesSwing.manageException(this, e,logger,EvaluacionEmpleadoConstantesFunciones.CLASSNAME);
		}
	}
	*/
	
	/*
	public void setVariablesObjetoReturnGeneralToBeanEvaluacionEmpleado(EvaluacionEmpleadoParameterReturnGeneral evaluacionempleadoReturnGeneral,EvaluacionEmpleadoBean evaluacionempleadoBean,Boolean conDefault) throws Exception { 
		try {
			EvaluacionEmpleado evaluacionempleadoLocal=new EvaluacionEmpleado();
			
			evaluacionempleadoLocal=evaluacionempleadoReturnGeneral.getEvaluacionEmpleado();
			
			
			if(conColumnasBase) {if(conDefault || (!conDefault && evaluacionempleadoLocal.getId()!=null && !evaluacionempleadoLocal.getId().equals(0L))) {evaluacionempleadoBean.setId(evaluacionempleadoLocal.getId());}}
			if(conDefault || (!conDefault && evaluacionempleadoLocal.getfecha()!=null && !evaluacionempleadoLocal.getfecha().equals(new Date()))) {evaluacionempleadoBean.setfecha(evaluacionempleadoLocal.getfecha());}
			if(conDefault || (!conDefault && evaluacionempleadoLocal.getesta_evaluado()!=null && !evaluacionempleadoLocal.getesta_evaluado().equals(false))) {evaluacionempleadoBean.setesta_evaluado(evaluacionempleadoLocal.getesta_evaluado());}
			if(conDefault || (!conDefault && evaluacionempleadoLocal.getobservacion1()!=null && !evaluacionempleadoLocal.getobservacion1().equals(""))) {evaluacionempleadoBean.setobservacion1(evaluacionempleadoLocal.getobservacion1());}
			if(conDefault || (!conDefault && evaluacionempleadoLocal.getobservacion2()!=null && !evaluacionempleadoLocal.getobservacion2().equals(""))) {evaluacionempleadoBean.setobservacion2(evaluacionempleadoLocal.getobservacion2());}
			if(conDefault || (!conDefault && evaluacionempleadoLocal.getobservacion3()!=null && !evaluacionempleadoLocal.getobservacion3().equals(""))) {evaluacionempleadoBean.setobservacion3(evaluacionempleadoLocal.getobservacion3());}
			if(conDefault || (!conDefault && evaluacionempleadoLocal.getobservacion4()!=null && !evaluacionempleadoLocal.getobservacion4().equals(""))) {evaluacionempleadoBean.setobservacion4(evaluacionempleadoLocal.getobservacion4());}
			
		} catch(Exception e) {
			FuncionesSwing.manageException(this, e,logger,EvaluacionEmpleadoConstantesFunciones.CLASSNAME);
		}
	}
	*/
	
	@SuppressWarnings("rawtypes")
	public static void setActualComboBoxEvaluacionEmpleadoGenerico(Long idEvaluacionEmpleadoSeleccionado,JComboBox jComboBoxEvaluacionEmpleado,List<EvaluacionEmpleado> evaluacionempleadosLocal)throws Exception {
		try {
			EvaluacionEmpleado  evaluacionempleadoTemp=null;

			for(EvaluacionEmpleado evaluacionempleadoAux:evaluacionempleadosLocal) {
				if(evaluacionempleadoAux.getId()!=null && evaluacionempleadoAux.getId().equals(idEvaluacionEmpleadoSeleccionado)) {
					evaluacionempleadoTemp=evaluacionempleadoAux;
					break;
				}
			}

			jComboBoxEvaluacionEmpleado.setSelectedItem(evaluacionempleadoTemp);

		} catch(Exception e) {
			throw e;
		}
	}
	
	@SuppressWarnings("rawtypes")
	public static void setHotKeysComboBoxEvaluacionEmpleadoGenerico(JComboBox jComboBoxEvaluacionEmpleado,JInternalFrameBase jInternalFrameBase,String sNombreHotKeyAbstractAction,String sTipoBusqueda)throws Exception {
		try {
			//GLOBAL(id_empresa,id_sucursal,id_ejercicio)
			//BASICO(normal)
			//CON_BUSQUEDA(Permite buscar Fk)
			
			String sKeyStrokeName="";
			KeyStroke keyStrokeControl=null;
			
			if(!sTipoBusqueda.equals("GLOBAL")) {
				
				//BUSCAR
				sKeyStrokeName = FuncionesSwing.getKeyNameControl("CONTROL_BUSCAR");
				keyStrokeControl=FuncionesSwing.getKeyStrokeControl("CONTROL_BUSCAR");
				
				jComboBoxEvaluacionEmpleado.getInputMap().put(keyStrokeControl, sKeyStrokeName);
				jComboBoxEvaluacionEmpleado.getActionMap().put(sKeyStrokeName, new ButtonAbstractAction(jInternalFrameBase,sNombreHotKeyAbstractAction+"Busqueda"));
				//BUSCAR
				
				
				//ACTUALIZAR
				sKeyStrokeName = FuncionesSwing.getKeyNameControl("CONTROL_ACTUALIZAR");
				keyStrokeControl=FuncionesSwing.getKeyStrokeControl("CONTROL_ACTUALIZAR");
				
				jComboBoxEvaluacionEmpleado.getInputMap().put(keyStrokeControl, sKeyStrokeName);
				jComboBoxEvaluacionEmpleado.getActionMap().put(sKeyStrokeName, new ButtonAbstractAction(jInternalFrameBase,sNombreHotKeyAbstractAction+"Update"));
				//ACTUALIZAR
				
				if(sTipoBusqueda.contains("CON_EVENT_CHANGE")) {
					if(Constantes2.CON_COMBOBOX_ITEMLISTENER) {
						jComboBoxEvaluacionEmpleado.addFocusListener(new ComboBoxFocusListener(jInternalFrameBase,sNombreHotKeyAbstractAction));
						jComboBoxEvaluacionEmpleado.addActionListener(new ComboBoxActionListener(jInternalFrameBase,sNombreHotKeyAbstractAction));						
					}
					
					/*
					if(Constantes2.CON_COMBOBOX_ITEMLISTENER) {
						jComboBoxEvaluacionEmpleado.addItemListener(new ComboBoxItemListener(jInternalFrameBase,sNombreHotKeyAbstractAction));
					} else {
						jComboBoxEvaluacionEmpleado.addActionListener(new ComboBoxActionListener(jInternalFrameBase,sNombreHotKeyAbstractAction));
					}
					*/
				}								
				
				//CON_BUSQUEDA								
				if(sTipoBusqueda.contains("CON_BUSQUEDA")) {
					sKeyStrokeName = FuncionesSwing.getKeyNameControl("CONTROL_BUSQUEDA");
					keyStrokeControl=FuncionesSwing.getKeyStrokeControl("CONTROL_BUSQUEDA");
							
					jComboBoxEvaluacionEmpleado.getInputMap().put(keyStrokeControl, sKeyStrokeName);
					jComboBoxEvaluacionEmpleado.getActionMap().put(sKeyStrokeName, new ButtonAbstractAction(jInternalFrameBase,sNombreHotKeyAbstractAction));
				}
				//CON_BUSQUEDA
				
				
			}
		} catch(Exception e) {
			throw e;
		}
	}
	
	//PARA INICIALIZAR CONTROLES DE TABLA
	@SuppressWarnings("rawtypes")
	public void setHotKeysComboBoxGenerico(JComboBox jComboBox,JInternalFrameBase jInternalFrameBase,String sNombreHotKeyAbstractAction,String sTipoBusqueda) {
		if(sTipoBusqueda.contains("CON_EVENT_CHANGE")) {
			if(Constantes2.CON_COMBOBOX_ITEMLISTENER) {
				jComboBox.addItemListener(new ComboBoxItemListener(jInternalFrameBase,sNombreHotKeyAbstractAction));
				jComboBox.addFocusListener(new ComboBoxFocusListener(jInternalFrameBase,sNombreHotKeyAbstractAction));
			} else {
				jComboBox.addActionListener(new ComboBoxActionListener(jInternalFrameBase,sNombreHotKeyAbstractAction));
				jComboBox.addFocusListener(new ComboBoxFocusListener(jInternalFrameBase,sNombreHotKeyAbstractAction));
			}
		}
	}
	
	//PARA INICIALIZAR CONTROLES DE TABLA
	public void setHotKeysJTextFieldGenerico(JTextField jTextField,JInternalFrameBase jInternalFrameBase,String sNombreHotKeyAbstractAction,String sTipoBusqueda) {
		jTextField.addFocusListener(new TextFieldFocusListener(jInternalFrameBase,sNombreHotKeyAbstractAction));
		jTextField.addActionListener(new TextFieldActionListener(jInternalFrameBase,sNombreHotKeyAbstractAction));
	}
	
	//PARA INICIALIZAR CONTROLES DE TABLA
	public void setHotKeysJTextAreaGenerico(JTextArea jTextArea,JInternalFrameBase jInternalFrameBase,String sNombreHotKeyAbstractAction,String sTipoBusqueda) {
		jTextArea.addFocusListener(new TextAreaFocusListener(jInternalFrameBase,sNombreHotKeyAbstractAction));
		
		//NO EXISTE
		//jTextArea.addActionListener(new TextAreaActionListener(jInternalFrameBase,sNombreHotKeyAbstractAction));
	}
	
	//PARA INICIALIZAR CONTROLES DE TABLA
	public void setHotKeysJLabelGenerico(JLabel jLabel,JInternalFrameBase jInternalFrameBase,String sNombreHotKeyAbstractAction,String sTipoBusqueda) {
		jLabel.addFocusListener(new LabelFocusListener(jInternalFrameBase,sNombreHotKeyAbstractAction));
		
		//NO EXISTE
		//jLabel.addActionListener(new LabelActionListener(jInternalFrameBase,sNombreHotKeyAbstractAction));
	}
	
	//PARA INICIALIZAR CONTROLES DE TABLA
	public void setHotKeysJCheckBoxGenerico(JCheckBox jCheckBox,JInternalFrameBase jInternalFrameBase,String sNombreHotKeyAbstractAction,String sTipoBusqueda) {
		jCheckBox.addFocusListener(new CheckBoxFocusListener(jInternalFrameBase,sNombreHotKeyAbstractAction));
		
		//SI SE DEFINE AL CAMBIAR VALOR, ESTE NUEVO VALOR NO SE ENVIA AL EVENTO
		//jCheckBox.addItemListener(new CheckBoxItemListener(jInternalFrameBase,sNombreHotKeyAbstractAction));
	}
	
	//PARA INICIALIZAR CONTROLES DE TABLA
	public void setHotKeysJDateChooserGenerico(JDateChooser jDateChooser,JInternalFrameBase jInternalFrameBase,String sNombreHotKeyAbstractAction,String sTipoBusqueda) {
		FuncionesSwing.addDateListener(jDateChooser, jInternalFrameBase, sNombreHotKeyAbstractAction);
	}
	
	//PARA INICIALIZAR CONTROLES DE TABLA
	public void setHotKeysJButtonGenerico(JButton jButton,JInternalFrameBase jInternalFrameBase,String sNombreHotKeyAbstractAction,String sTipoBusqueda) {
		jButton.addActionListener(new ButtonActionListener(jInternalFrameBase,sNombreHotKeyAbstractAction));
	}
	
	public void jButtonRelacionActionPerformed(String sTipo,ActionEvent evt,int rowIndex,Boolean conInicializar,Boolean esRelacionado) {
		//ABRIR RELACIONES
		try {
			
		if(sTipo.equals("CalificacionEmpleado")) {
			jButtonCalificacionEmpleadoActionPerformed(evt,rowIndex,true,false,null);
		}
		} catch (Exception e) {
			FuncionesSwing.manageException2(this, e,logger,EvaluacionEmpleadoConstantesFunciones.CLASSNAME);
		}
	}
	
	public String getDescripcionFk(String sTipo,JTable table,Object value,int intSelectedRow) throws Exception {
		//DESCRIPCIONES FK		
		String sDescripcion="";
		
		if(Constantes.ISUSAEJBLOGICLAYER) {
			evaluacionempleado=(EvaluacionEmpleado) evaluacionempleadoLogic.getEvaluacionEmpleados().toArray()[table.convertRowIndexToModel(intSelectedRow)];
		} else if(Constantes.ISUSAEJBREMOTE) {
			evaluacionempleado =(EvaluacionEmpleado) evaluacionempleados.toArray()[table.convertRowIndexToModel(intSelectedRow)];
		}
					
		
		if(sTipo.equals("Empresa")) {
			//sDescripcion=this.getActualEmpresaForeignKeyDescripcion((Long)value);
			if(!evaluacionempleado.getIsNew() && !evaluacionempleado.getIsChanged() && !evaluacionempleado.getIsDeleted()) {
				sDescripcion=evaluacionempleado.getempresa_descripcion();
			} else {
				//sDescripcion=this.getActualEmpresaForeignKeyDescripcion((Long)value);
				sDescripcion=evaluacionempleado.getempresa_descripcion();
			}
		}

		if(sTipo.equals("Sucursal")) {
			//sDescripcion=this.getActualSucursalForeignKeyDescripcion((Long)value);
			if(!evaluacionempleado.getIsNew() && !evaluacionempleado.getIsChanged() && !evaluacionempleado.getIsDeleted()) {
				sDescripcion=evaluacionempleado.getsucursal_descripcion();
			} else {
				//sDescripcion=this.getActualSucursalForeignKeyDescripcion((Long)value);
				sDescripcion=evaluacionempleado.getsucursal_descripcion();
			}
		}

		if(sTipo.equals("Ejercicio")) {
			//sDescripcion=this.getActualEjercicioForeignKeyDescripcion((Long)value);
			if(!evaluacionempleado.getIsNew() && !evaluacionempleado.getIsChanged() && !evaluacionempleado.getIsDeleted()) {
				sDescripcion=evaluacionempleado.getejercicio_descripcion();
			} else {
				//sDescripcion=this.getActualEjercicioForeignKeyDescripcion((Long)value);
				sDescripcion=evaluacionempleado.getejercicio_descripcion();
			}
		}

		if(sTipo.equals("Periodo")) {
			//sDescripcion=this.getActualPeriodoForeignKeyDescripcion((Long)value);
			if(!evaluacionempleado.getIsNew() && !evaluacionempleado.getIsChanged() && !evaluacionempleado.getIsDeleted()) {
				sDescripcion=evaluacionempleado.getperiodo_descripcion();
			} else {
				//sDescripcion=this.getActualPeriodoForeignKeyDescripcion((Long)value);
				sDescripcion=evaluacionempleado.getperiodo_descripcion();
			}
		}

		if(sTipo.equals("Estructura")) {
			//sDescripcion=this.getActualEstructuraForeignKeyDescripcion((Long)value);
			if(!evaluacionempleado.getIsNew() && !evaluacionempleado.getIsChanged() && !evaluacionempleado.getIsDeleted()) {
				sDescripcion=evaluacionempleado.getestructura_descripcion();
			} else {
				//sDescripcion=this.getActualEstructuraForeignKeyDescripcion((Long)value);
				sDescripcion=evaluacionempleado.getestructura_descripcion();
			}
		}

		if(sTipo.equals("Empleado")) {
			//sDescripcion=this.getActualEmpleadoForeignKeyDescripcion((Long)value);
			if(!evaluacionempleado.getIsNew() && !evaluacionempleado.getIsChanged() && !evaluacionempleado.getIsDeleted()) {
				sDescripcion=evaluacionempleado.getempleado_descripcion();
			} else {
				//sDescripcion=this.getActualEmpleadoForeignKeyDescripcion((Long)value);
				sDescripcion=evaluacionempleado.getempleado_descripcion();
			}
		}

		if(sTipo.equals("EmpleadoEvalua")) {
			//sDescripcion=this.getActualEmpleadoEvaluaForeignKeyDescripcion((Long)value);
			if(!evaluacionempleado.getIsNew() && !evaluacionempleado.getIsChanged() && !evaluacionempleado.getIsDeleted()) {
				sDescripcion=evaluacionempleado.getempleadoevalua_descripcion();
			} else {
				//sDescripcion=this.getActualEmpleadoEvaluaForeignKeyDescripcion((Long)value);
				sDescripcion=evaluacionempleado.getempleadoevalua_descripcion();
			}
		}

		if(sTipo.equals("TipoEvaluacionEmpleado")) {
			//sDescripcion=this.getActualTipoEvaluacionEmpleadoForeignKeyDescripcion((Long)value);
			if(!evaluacionempleado.getIsNew() && !evaluacionempleado.getIsChanged() && !evaluacionempleado.getIsDeleted()) {
				sDescripcion=evaluacionempleado.gettipoevaluacionempleado_descripcion();
			} else {
				//sDescripcion=this.getActualTipoEvaluacionEmpleadoForeignKeyDescripcion((Long)value);
				sDescripcion=evaluacionempleado.gettipoevaluacionempleado_descripcion();
			}
		}

		if(sTipo.equals("Anio")) {
			//sDescripcion=this.getActualAnioForeignKeyDescripcion((Long)value);
			if(!evaluacionempleado.getIsNew() && !evaluacionempleado.getIsChanged() && !evaluacionempleado.getIsDeleted()) {
				sDescripcion=evaluacionempleado.getanio_descripcion();
			} else {
				//sDescripcion=this.getActualAnioForeignKeyDescripcion((Long)value);
				sDescripcion=evaluacionempleado.getanio_descripcion();
			}
		}

		if(sTipo.equals("Semestre")) {
			//sDescripcion=this.getActualSemestreForeignKeyDescripcion((Long)value);
			if(!evaluacionempleado.getIsNew() && !evaluacionempleado.getIsChanged() && !evaluacionempleado.getIsDeleted()) {
				sDescripcion=evaluacionempleado.getsemestre_descripcion();
			} else {
				//sDescripcion=this.getActualSemestreForeignKeyDescripcion((Long)value);
				sDescripcion=evaluacionempleado.getsemestre_descripcion();
			}
		}

		if(sTipo.equals("Trimestre")) {
			//sDescripcion=this.getActualTrimestreForeignKeyDescripcion((Long)value);
			if(!evaluacionempleado.getIsNew() && !evaluacionempleado.getIsChanged() && !evaluacionempleado.getIsDeleted()) {
				sDescripcion=evaluacionempleado.gettrimestre_descripcion();
			} else {
				//sDescripcion=this.getActualTrimestreForeignKeyDescripcion((Long)value);
				sDescripcion=evaluacionempleado.gettrimestre_descripcion();
			}
		}

		if(sTipo.equals("Bimestre")) {
			//sDescripcion=this.getActualBimestreForeignKeyDescripcion((Long)value);
			if(!evaluacionempleado.getIsNew() && !evaluacionempleado.getIsChanged() && !evaluacionempleado.getIsDeleted()) {
				sDescripcion=evaluacionempleado.getbimestre_descripcion();
			} else {
				//sDescripcion=this.getActualBimestreForeignKeyDescripcion((Long)value);
				sDescripcion=evaluacionempleado.getbimestre_descripcion();
			}
		}

		if(sTipo.equals("Mes")) {
			//sDescripcion=this.getActualMesForeignKeyDescripcion((Long)value);
			if(!evaluacionempleado.getIsNew() && !evaluacionempleado.getIsChanged() && !evaluacionempleado.getIsDeleted()) {
				sDescripcion=evaluacionempleado.getmes_descripcion();
			} else {
				//sDescripcion=this.getActualMesForeignKeyDescripcion((Long)value);
				sDescripcion=evaluacionempleado.getmes_descripcion();
			}
		}

		
		return sDescripcion;
	}
	
	public Color getColorFk(String sTipo,JTable table,Object value,int intSelectedRow) throws Exception {
		//DESCRIPCIONES FK		
		Color color=Color.WHITE;
		
		EvaluacionEmpleado evaluacionempleadoRow=new EvaluacionEmpleado();
		
		if(Constantes.ISUSAEJBLOGICLAYER) {
			evaluacionempleadoRow=(EvaluacionEmpleado) evaluacionempleadoLogic.getEvaluacionEmpleados().toArray()[table.convertRowIndexToModel(intSelectedRow)];
		} else if(Constantes.ISUSAEJBREMOTE) {
			evaluacionempleadoRow=(EvaluacionEmpleado) evaluacionempleados.toArray()[table.convertRowIndexToModel(intSelectedRow)];
		}
					
		
		
		return color;
	}
	
	
	
	
	public void jButtonCalificacionEmpleadoActionPerformed(ActionEvent evt,int rowIndex,Boolean conInicializar,Boolean esRelacionado,EvaluacionEmpleado evaluacionempleado) throws Exception {
			try {

				if(this.jInternalFrameDetalleFormEvaluacionEmpleado==null) {
					this.inicializarFormDetalle();
				}

				if(Constantes.ISUSAEJBLOGICLAYER) {
					this.evaluacionempleadoLogic.getNewConnexionToDeep("");
				}

				int intSelectedRow =rowIndex;

				if(intSelectedRow!=-1) {
					//ARCHITECTURE
					if(Constantes.ISUSAEJBLOGICLAYER) {
						this.evaluacionempleado = (EvaluacionEmpleado)this.evaluacionempleadoLogic.getEvaluacionEmpleados().toArray()[this.jTableDatosEvaluacionEmpleado.convertRowIndexToModel(intSelectedRow)];
					} else if(Constantes.ISUSAEJBREMOTE) {
						this.evaluacionempleado = (EvaluacionEmpleado)this.evaluacionempleados.toArray()[this.jTableDatosEvaluacionEmpleado.convertRowIndexToModel(intSelectedRow)];
					}
					//ARCHITECTURE
				} else {
					if(evaluacionempleado!=null) {
						this.evaluacionempleado = evaluacionempleado;
					} else {
						this.evaluacionempleado = new EvaluacionEmpleado();
					}
				}

				if(this.isTienePermisosCalificacionEmpleado && this.permiteMantenimiento(this.evaluacionempleado)) {
					CalificacionEmpleadoBeanSwingJInternalFrame calificacionempleadoBeanSwingJInternalFrame=null;

					if(conInicializar) {
						this.jInternalFrameDetalleFormEvaluacionEmpleado.calificacionempleadoBeanSwingJInternalFramePopup=new CalificacionEmpleadoBeanSwingJInternalFrame(false,false,this.jDesktopPane,this.usuarioActual,this.resumenUsuarioActual,this.moduloActual,this.opcionActual,this.parametroGeneralSg,this.parametroGeneralUsuario,PaginaTipo.SECUNDARIO,false,false,true,false);
						this.jInternalFrameDetalleFormEvaluacionEmpleado.calificacionempleadoBeanSwingJInternalFramePopup.setJInternalFrameParent(this);

						calificacionempleadoBeanSwingJInternalFrame=this.jInternalFrameDetalleFormEvaluacionEmpleado.calificacionempleadoBeanSwingJInternalFramePopup;
					} else {
						calificacionempleadoBeanSwingJInternalFrame=this.jInternalFrameDetalleFormEvaluacionEmpleado.calificacionempleadoBeanSwingJInternalFrame;
					}

					List<EvaluacionEmpleado> evaluacionempleados=new ArrayList<EvaluacionEmpleado>();
					evaluacionempleados.add(this.evaluacionempleado);
					if(!esRelacionado) {
						//calificacionempleadoBeanSwingJInternalFrame.calificacionempleadoSessionBean.setConGuardarRelaciones(false);
						//calificacionempleadoBeanSwingJInternalFrame.calificacionempleadoSessionBean.setEsGuardarRelacionado(false);
					}

					//DESHABILITA TEMPORALMENTE EVENTOS CHANGE DE TEXTOS,COMBOS,ETC
					calificacionempleadoBeanSwingJInternalFrame.estaModoSeleccionar=true;
					this.jInternalFrameDetalleFormEvaluacionEmpleado.cargarCalificacionEmpleadoBeanSwingJInternalFrame(evaluacionempleados,this.evaluacionempleado,calificacionempleadoBeanSwingJInternalFrame,/*conInicializar,*/calificacionempleadoBeanSwingJInternalFrame.calificacionempleadoSessionBean.getConGuardarRelaciones(),calificacionempleadoBeanSwingJInternalFrame.calificacionempleadoSessionBean.getEsGuardarRelacionado());
					calificacionempleadoBeanSwingJInternalFrame.estaModoSeleccionar=false;


					if(!esRelacionado) {
						calificacionempleadoBeanSwingJInternalFrame.actualizarEstadoPanelsCalificacionEmpleado("no_relacionado");

						calificacionempleadoBeanSwingJInternalFrame.redimensionarTablaDatosConTamanio(CalificacionEmpleadoConstantesFunciones.ITAMANIOFILATABLA + (CalificacionEmpleadoConstantesFunciones.ITAMANIOFILATABLA/2));

						calificacionempleadoBeanSwingJInternalFrame.setLocation(xOffset*(openFrameCount + Constantes.INUM_MAX_VENTANAS_REL_X), yOffset*(openFrameCount+Constantes.INUM_MAX_VENTANAS_REL_Y));

						TitledBorder titledBorderEvaluacionEmpleado=(TitledBorder)this.jScrollPanelDatosEvaluacionEmpleado.getBorder();
						TitledBorder titledBorderCalificacionEmpleado=(TitledBorder)calificacionempleadoBeanSwingJInternalFrame.jScrollPanelDatosCalificacionEmpleado.getBorder();

						titledBorderCalificacionEmpleado.setTitle(titledBorderEvaluacionEmpleado.getTitle() + " -> Calificacion Empleado");

						if(!Constantes.CON_VARIAS_VENTANAS) {
							MainJFrame.cerrarJInternalFramesExistentes(this.jDesktopPane,calificacionempleadoBeanSwingJInternalFrame);
						}

						calificacionempleadoBeanSwingJInternalFrame.setVisible(true);

						this.jDesktopPane.add(calificacionempleadoBeanSwingJInternalFrame);

						calificacionempleadoBeanSwingJInternalFrame.setSelected(true);
					}

				} else {
					if(!this.evaluacionempleadoSessionBean.getConGuardarRelaciones()) {
						JOptionPane.showMessageDialog(this,"NO TIENE PERMISOS PARA USAR LA FUNCIONALIDAD DE Calificacion Empleado",Constantes.SERROR,JOptionPane.ERROR_MESSAGE);
					}
				}
				if(Constantes.ISUSAEJBLOGICLAYER) {
					this.evaluacionempleadoLogic.commitNewConnexionToDeep();
				}

			}

			catch(Exception e) {
				if(Constantes.ISUSAEJBLOGICLAYER) {
					this.evaluacionempleadoLogic.rollbackNewConnexionToDeep();
				}


				FuncionesSwing.manageException2(this, e,logger,EvaluacionEmpleadoConstantesFunciones.CLASSNAME);
			} finally { 
				if(Constantes.ISUSAEJBLOGICLAYER) {
					this.evaluacionempleadoLogic.closeNewConnexionToDeep();
				}

			}
		}

	
	
	
	public void refrescarBindingTabla(Boolean blnSoloTabla) {
	}
	
	public void inicializarActualizarBindingBotonesManualEvaluacionEmpleado(Boolean esSetControles) {						
		if(esSetControles) {
			this.jButtonNuevoEvaluacionEmpleado.setVisible((this.isVisibilidadCeldaNuevoEvaluacionEmpleado && this.isPermisoNuevoEvaluacionEmpleado));			
			this.jButtonDuplicarEvaluacionEmpleado.setVisible((this.isVisibilidadCeldaDuplicarEvaluacionEmpleado && this.isPermisoDuplicarEvaluacionEmpleado));			
			this.jButtonCopiarEvaluacionEmpleado.setVisible((this.isVisibilidadCeldaCopiarEvaluacionEmpleado && this.isPermisoCopiarEvaluacionEmpleado));
			this.jButtonVerFormEvaluacionEmpleado.setVisible((this.isVisibilidadCeldaVerFormEvaluacionEmpleado && this.isPermisoVerFormEvaluacionEmpleado));
			
			this.jButtonAbrirOrderByEvaluacionEmpleado.setVisible((this.isVisibilidadCeldaOrdenEvaluacionEmpleado && this.isPermisoOrdenEvaluacionEmpleado));			
			
			this.jButtonNuevoRelacionesEvaluacionEmpleado.setVisible((this.isVisibilidadCeldaNuevoRelacionesEvaluacionEmpleado && this.isPermisoNuevoEvaluacionEmpleado));			
			this.jButtonNuevoGuardarCambiosEvaluacionEmpleado.setVisible((this.isVisibilidadCeldaNuevoEvaluacionEmpleado && this.isPermisoNuevoEvaluacionEmpleado && this.isPermisoGuardarCambiosEvaluacionEmpleado));
			
			if(this.jInternalFrameDetalleFormEvaluacionEmpleado!=null) {
			this.jInternalFrameDetalleFormEvaluacionEmpleado.jButtonModificarEvaluacionEmpleado.setVisible((this.isVisibilidadCeldaModificarEvaluacionEmpleado && this.isPermisoActualizarEvaluacionEmpleado));	
			this.jInternalFrameDetalleFormEvaluacionEmpleado.jButtonActualizarEvaluacionEmpleado.setVisible((this.isVisibilidadCeldaActualizarEvaluacionEmpleado && this.isPermisoActualizarEvaluacionEmpleado));	
			this.jInternalFrameDetalleFormEvaluacionEmpleado.jButtonEliminarEvaluacionEmpleado.setVisible((this.isVisibilidadCeldaEliminarEvaluacionEmpleado && this.isPermisoEliminarEvaluacionEmpleado));
			this.jInternalFrameDetalleFormEvaluacionEmpleado.jButtonCancelarEvaluacionEmpleado.setVisible(this.isVisibilidadCeldaCancelarEvaluacionEmpleado);							
			this.jInternalFrameDetalleFormEvaluacionEmpleado.jButtonGuardarCambiosEvaluacionEmpleado.setVisible((this.isVisibilidadCeldaGuardarEvaluacionEmpleado && this.isPermisoGuardarCambiosEvaluacionEmpleado));			
			
			}
						
			this.jButtonGuardarCambiosTablaEvaluacionEmpleado.setVisible((this.isVisibilidadCeldaGuardarCambiosEvaluacionEmpleado && this.isPermisoGuardarCambiosEvaluacionEmpleado));							
			
			//TOOLBAR
			
			this.jButtonNuevoToolBarEvaluacionEmpleado.setVisible((this.isVisibilidadCeldaNuevoEvaluacionEmpleado && this.isPermisoNuevoEvaluacionEmpleado));						
			this.jButtonDuplicarToolBarEvaluacionEmpleado.setVisible((this.isVisibilidadCeldaDuplicarEvaluacionEmpleado && this.isPermisoDuplicarEvaluacionEmpleado));						
			this.jButtonCopiarToolBarEvaluacionEmpleado.setVisible((this.isVisibilidadCeldaCopiarEvaluacionEmpleado && this.isPermisoCopiarEvaluacionEmpleado));			
			this.jButtonVerFormToolBarEvaluacionEmpleado.setVisible((this.isVisibilidadCeldaVerFormEvaluacionEmpleado && this.isPermisoVerFormEvaluacionEmpleado));			
			this.jButtonAbrirOrderByToolBarEvaluacionEmpleado.setVisible((this.isVisibilidadCeldaOrdenEvaluacionEmpleado && this.isPermisoOrdenEvaluacionEmpleado));
			this.jButtonNuevoRelacionesToolBarEvaluacionEmpleado.setVisible((this.isVisibilidadCeldaNuevoRelacionesEvaluacionEmpleado && this.isPermisoNuevoEvaluacionEmpleado));			
			this.jButtonNuevoGuardarCambiosToolBarEvaluacionEmpleado.setVisible((this.isVisibilidadCeldaNuevoEvaluacionEmpleado && this.isPermisoNuevoEvaluacionEmpleado && this.isPermisoGuardarCambiosEvaluacionEmpleado));			
			
			if(this.jInternalFrameDetalleFormEvaluacionEmpleado!=null) {
			this.jInternalFrameDetalleFormEvaluacionEmpleado.jButtonModificarToolBarEvaluacionEmpleado.setVisible((this.isVisibilidadCeldaModificarEvaluacionEmpleado && this.isPermisoActualizarEvaluacionEmpleado));	
			this.jInternalFrameDetalleFormEvaluacionEmpleado.jButtonActualizarToolBarEvaluacionEmpleado.setVisible((this.isVisibilidadCeldaActualizarEvaluacionEmpleado  && this.isPermisoActualizarEvaluacionEmpleado));	
			this.jInternalFrameDetalleFormEvaluacionEmpleado.jButtonEliminarToolBarEvaluacionEmpleado.setVisible((this.isVisibilidadCeldaEliminarEvaluacionEmpleado && this.isPermisoEliminarEvaluacionEmpleado));
			this.jInternalFrameDetalleFormEvaluacionEmpleado.jButtonCancelarToolBarEvaluacionEmpleado.setVisible(this.isVisibilidadCeldaCancelarEvaluacionEmpleado);				
			this.jInternalFrameDetalleFormEvaluacionEmpleado.jButtonGuardarCambiosToolBarEvaluacionEmpleado.setVisible((this.isVisibilidadCeldaGuardarEvaluacionEmpleado && this.isPermisoGuardarCambiosEvaluacionEmpleado));									
			}
			
			this.jButtonGuardarCambiosTablaToolBarEvaluacionEmpleado.setVisible((this.isVisibilidadCeldaGuardarCambiosEvaluacionEmpleado && this.isPermisoGuardarCambiosEvaluacionEmpleado));									
			
			//TOOLBAR
			
			//MENUS
			
			this.jMenuItemNuevoEvaluacionEmpleado.setVisible((this.isVisibilidadCeldaNuevoEvaluacionEmpleado && this.isPermisoNuevoEvaluacionEmpleado));			
			this.jMenuItemDuplicarEvaluacionEmpleado.setVisible((this.isVisibilidadCeldaDuplicarEvaluacionEmpleado && this.isPermisoDuplicarEvaluacionEmpleado));			
			this.jMenuItemCopiarEvaluacionEmpleado.setVisible((this.isVisibilidadCeldaCopiarEvaluacionEmpleado && this.isPermisoCopiarEvaluacionEmpleado));			
			this.jMenuItemVerFormEvaluacionEmpleado.setVisible((this.isVisibilidadCeldaVerFormEvaluacionEmpleado && this.isPermisoVerFormEvaluacionEmpleado));			
			this.jMenuItemAbrirOrderByEvaluacionEmpleado.setVisible((this.isVisibilidadCeldaOrdenEvaluacionEmpleado && this.isPermisoOrdenEvaluacionEmpleado));			
			//this.jMenuItemMostrarOcultarEvaluacionEmpleado.setVisible((this.isVisibilidadCeldaOrdenEvaluacionEmpleado && this.isPermisoOrdenEvaluacionEmpleado));
			this.jMenuItemDetalleAbrirOrderByEvaluacionEmpleado.setVisible((this.isVisibilidadCeldaOrdenEvaluacionEmpleado && this.isPermisoOrdenEvaluacionEmpleado));			
			//this.jMenuItemDetalleMostrarOcultarEvaluacionEmpleado.setVisible((this.isVisibilidadCeldaOrdenEvaluacionEmpleado && this.isPermisoOrdenEvaluacionEmpleado));			
			this.jMenuItemNuevoRelacionesEvaluacionEmpleado.setVisible((this.isVisibilidadCeldaNuevoRelacionesEvaluacionEmpleado && this.isPermisoNuevoEvaluacionEmpleado));			
			this.jMenuItemNuevoGuardarCambiosEvaluacionEmpleado.setVisible((this.isVisibilidadCeldaNuevoEvaluacionEmpleado && this.isPermisoNuevoEvaluacionEmpleado && this.isPermisoGuardarCambiosEvaluacionEmpleado));									
			
			if(this.jInternalFrameDetalleFormEvaluacionEmpleado!=null) {
			this.jInternalFrameDetalleFormEvaluacionEmpleado.jMenuItemModificarEvaluacionEmpleado.setVisible((this.isVisibilidadCeldaModificarEvaluacionEmpleado && this.isPermisoActualizarEvaluacionEmpleado));	
			this.jInternalFrameDetalleFormEvaluacionEmpleado.jMenuItemActualizarEvaluacionEmpleado.setVisible((this.isVisibilidadCeldaActualizarEvaluacionEmpleado && this.isPermisoActualizarEvaluacionEmpleado));	
			this.jInternalFrameDetalleFormEvaluacionEmpleado.jMenuItemEliminarEvaluacionEmpleado.setVisible((this.isVisibilidadCeldaEliminarEvaluacionEmpleado && this.isPermisoEliminarEvaluacionEmpleado));
			this.jInternalFrameDetalleFormEvaluacionEmpleado.jMenuItemCancelarEvaluacionEmpleado.setVisible(this.isVisibilidadCeldaCancelarEvaluacionEmpleado);				
			}
			
			this.jMenuItemGuardarCambiosEvaluacionEmpleado.setVisible((this.isVisibilidadCeldaGuardarEvaluacionEmpleado && this.isPermisoGuardarCambiosEvaluacionEmpleado));						
			this.jMenuItemGuardarCambiosTablaEvaluacionEmpleado.setVisible((this.isVisibilidadCeldaGuardarCambiosEvaluacionEmpleado && this.isPermisoGuardarCambiosEvaluacionEmpleado));						
			
			//MENUS
			
		} else {
			this.isVisibilidadCeldaNuevoEvaluacionEmpleado=this.jButtonNuevoEvaluacionEmpleado.isVisible();
			this.isVisibilidadCeldaDuplicarEvaluacionEmpleado=this.jButtonDuplicarEvaluacionEmpleado.isVisible();
			this.isVisibilidadCeldaCopiarEvaluacionEmpleado=this.jButtonCopiarEvaluacionEmpleado.isVisible();
			this.isVisibilidadCeldaVerFormEvaluacionEmpleado=this.jButtonVerFormEvaluacionEmpleado.isVisible();
			
			this.isVisibilidadCeldaOrdenEvaluacionEmpleado=this.jButtonAbrirOrderByEvaluacionEmpleado.isVisible();			
			
			this.isVisibilidadCeldaNuevoRelacionesEvaluacionEmpleado=this.jButtonNuevoRelacionesEvaluacionEmpleado.isVisible();
			this.isVisibilidadCeldaModificarEvaluacionEmpleado=this.jButtonModificarEvaluacionEmpleado.isVisible();
			
			if(this.jInternalFrameDetalleFormEvaluacionEmpleado!=null) {
			this.isVisibilidadCeldaActualizarEvaluacionEmpleado=this.jInternalFrameDetalleFormEvaluacionEmpleado.jButtonActualizarEvaluacionEmpleado.isVisible();
			this.isVisibilidadCeldaEliminarEvaluacionEmpleado=this.jInternalFrameDetalleFormEvaluacionEmpleado.jButtonEliminarEvaluacionEmpleado.isVisible();
			this.isVisibilidadCeldaCancelarEvaluacionEmpleado=this.jInternalFrameDetalleFormEvaluacionEmpleado.jButtonCancelarEvaluacionEmpleado.isVisible();
			this.isVisibilidadCeldaGuardarEvaluacionEmpleado=this.jInternalFrameDetalleFormEvaluacionEmpleado.jButtonGuardarCambiosEvaluacionEmpleado.isVisible();			
			}
			
			this.isVisibilidadCeldaGuardarCambiosEvaluacionEmpleado=this.jButtonGuardarCambiosTablaEvaluacionEmpleado.isVisible();
			
			//TOOLBAR
			
			this.isVisibilidadCeldaNuevoEvaluacionEmpleado=this.jButtonNuevoToolBarEvaluacionEmpleado.isVisible();
			this.isVisibilidadCeldaNuevoRelacionesEvaluacionEmpleado=this.jButtonNuevoRelacionesToolBarEvaluacionEmpleado.isVisible();
			
			if(this.jInternalFrameDetalleFormEvaluacionEmpleado!=null) {
			this.isVisibilidadCeldaModificarEvaluacionEmpleado=this.jInternalFrameDetalleFormEvaluacionEmpleado.jButtonModificarToolBarEvaluacionEmpleado.isVisible();
			this.isVisibilidadCeldaActualizarEvaluacionEmpleado=this.jInternalFrameDetalleFormEvaluacionEmpleado.jButtonActualizarToolBarEvaluacionEmpleado.isVisible();
			this.isVisibilidadCeldaEliminarEvaluacionEmpleado=this.jInternalFrameDetalleFormEvaluacionEmpleado.jButtonEliminarToolBarEvaluacionEmpleado.isVisible();
			this.isVisibilidadCeldaCancelarEvaluacionEmpleado=this.jInternalFrameDetalleFormEvaluacionEmpleado.jButtonCancelarToolBarEvaluacionEmpleado.isVisible();
			}
			
			this.isVisibilidadCeldaGuardarEvaluacionEmpleado=this.jButtonGuardarCambiosToolBarEvaluacionEmpleado.isVisible();
			this.isVisibilidadCeldaGuardarCambiosEvaluacionEmpleado=this.jButtonGuardarCambiosTablaToolBarEvaluacionEmpleado.isVisible();						
			
			//TOOLBAR
			
			//MENUS
			
			this.isVisibilidadCeldaNuevoEvaluacionEmpleado=this.jMenuItemNuevoEvaluacionEmpleado.isVisible();
			this.isVisibilidadCeldaNuevoRelacionesEvaluacionEmpleado=this.jMenuItemNuevoRelacionesEvaluacionEmpleado.isVisible();
			
			if(this.jInternalFrameDetalleFormEvaluacionEmpleado!=null) {
			this.isVisibilidadCeldaModificarEvaluacionEmpleado=this.jInternalFrameDetalleFormEvaluacionEmpleado.jMenuItemModificarEvaluacionEmpleado.isVisible();
			this.isVisibilidadCeldaActualizarEvaluacionEmpleado=this.jInternalFrameDetalleFormEvaluacionEmpleado.jMenuItemActualizarEvaluacionEmpleado.isVisible();
			this.isVisibilidadCeldaEliminarEvaluacionEmpleado=this.jInternalFrameDetalleFormEvaluacionEmpleado.jMenuItemEliminarEvaluacionEmpleado.isVisible();
			this.isVisibilidadCeldaCancelarEvaluacionEmpleado=this.jInternalFrameDetalleFormEvaluacionEmpleado.jMenuItemCancelarEvaluacionEmpleado.isVisible();
			}
			
			this.isVisibilidadCeldaGuardarEvaluacionEmpleado=this.jMenuItemGuardarCambiosEvaluacionEmpleado.isVisible();
			this.isVisibilidadCeldaGuardarCambiosEvaluacionEmpleado=this.jMenuItemGuardarCambiosTablaEvaluacionEmpleado.isVisible();						
			
			//MENUS
		}
	}
	
	public void inicializarActualizarBindingBotonesEvaluacionEmpleado(Boolean esInicializar) {
		if(EvaluacionEmpleadoJInternalFrame.ISBINDING_MANUAL) {			
			if(this.evaluacionempleadoSessionBean.getConGuardarRelaciones()) {
				//if(this.evaluacionempleadoSessionBean.getEsGuardarRelacionado()) {
				
				this.actualizarEstadoCeldasBotonesConGuardarRelacionesEvaluacionEmpleado();
			}
			
			this.inicializarActualizarBindingBotonesManualEvaluacionEmpleado(true);
			
		} else {	
		}
	}		
	
	public void inicializarActualizarBindingBotonesPermisosManualEvaluacionEmpleado() {
		this.jButtonNuevoEvaluacionEmpleado.setVisible(this.isPermisoNuevoEvaluacionEmpleado);			
		this.jButtonDuplicarEvaluacionEmpleado.setVisible(this.isPermisoDuplicarEvaluacionEmpleado);			
		this.jButtonCopiarEvaluacionEmpleado.setVisible(this.isPermisoCopiarEvaluacionEmpleado);			
		this.jButtonVerFormEvaluacionEmpleado.setVisible(this.isPermisoVerFormEvaluacionEmpleado);			
		
		this.jButtonAbrirOrderByEvaluacionEmpleado.setVisible(this.isPermisoOrdenEvaluacionEmpleado);					
		
		this.jButtonNuevoRelacionesEvaluacionEmpleado.setVisible(this.isPermisoNuevoEvaluacionEmpleado);			
		
		if(this.jInternalFrameDetalleFormEvaluacionEmpleado!=null) { //if(this.conCargarFormDetalle) {
			this.jInternalFrameDetalleFormEvaluacionEmpleado.jButtonModificarEvaluacionEmpleado.setVisible(this.isPermisoActualizarEvaluacionEmpleado);	
			this.jInternalFrameDetalleFormEvaluacionEmpleado.jButtonActualizarEvaluacionEmpleado.setVisible(this.isPermisoActualizarEvaluacionEmpleado);	
			this.jInternalFrameDetalleFormEvaluacionEmpleado.jButtonEliminarEvaluacionEmpleado.setVisible(this.isPermisoEliminarEvaluacionEmpleado);
			this.jInternalFrameDetalleFormEvaluacionEmpleado.jButtonCancelarEvaluacionEmpleado.setVisible(this.isVisibilidadCeldaCancelarEvaluacionEmpleado);						
			this.jInternalFrameDetalleFormEvaluacionEmpleado.jButtonGuardarCambiosEvaluacionEmpleado.setVisible(this.isPermisoGuardarCambiosEvaluacionEmpleado);							
		}
		
		this.jButtonGuardarCambiosTablaEvaluacionEmpleado.setVisible(this.isPermisoActualizarEvaluacionEmpleado);
	}
	
	public void inicializarActualizarBindingBotonesPermisosManualFormDetalleEvaluacionEmpleado() {
		this.jInternalFrameDetalleFormEvaluacionEmpleado.jButtonModificarEvaluacionEmpleado.setVisible(this.isPermisoActualizarEvaluacionEmpleado);	
		this.jInternalFrameDetalleFormEvaluacionEmpleado.jButtonActualizarEvaluacionEmpleado.setVisible(this.isPermisoActualizarEvaluacionEmpleado);	
		this.jInternalFrameDetalleFormEvaluacionEmpleado.jButtonEliminarEvaluacionEmpleado.setVisible(this.isPermisoEliminarEvaluacionEmpleado);
		this.jInternalFrameDetalleFormEvaluacionEmpleado.jButtonCancelarEvaluacionEmpleado.setVisible(this.isVisibilidadCeldaCancelarEvaluacionEmpleado);							
		this.jInternalFrameDetalleFormEvaluacionEmpleado.jButtonGuardarCambiosEvaluacionEmpleado.setVisible((this.isVisibilidadCeldaGuardarEvaluacionEmpleado && this.isPermisoGuardarCambiosEvaluacionEmpleado));			
	}
	
	public void inicializarActualizarBindingBotonesPermisosEvaluacionEmpleado() {
		if(EvaluacionEmpleadoJInternalFrame.ISBINDING_MANUAL) {
			this.inicializarActualizarBindingBotonesPermisosManualEvaluacionEmpleado();
		} else {
		}
	}
	
	
	public void refrescarBindingBotonesEvaluacionEmpleado() {
	}
	
	public void jTableDatosEvaluacionEmpleadoListSelectionListener(javax.swing.event.ListSelectionEvent evt) throws Exception { 
		try {
			this.seleccionarEvaluacionEmpleado(null,evt,-1);
		} catch(Exception e) {
			FuncionesSwing.manageException(this, e,logger,EvaluacionEmpleadoConstantesFunciones.CLASSNAME);
		}
	}
	
	
	public void jButtonidEvaluacionEmpleadoBusquedaActionPerformed(java.awt.event.ActionEvent evt) throws Exception {
		try {

				if(Constantes.ISUSAEJBLOGICLAYER) {
					this.evaluacionempleadoLogic.getNewConnexionToDeep("");
				}

				//TOCA TRAER NUEVAMENTE, YA QUE SE PIERDE REGISTRO ACTUAL
				int intSelectedRow = this.jTableDatosEvaluacionEmpleado.getSelectedRow();

				if(intSelectedRow>-1) {
					this.setVariablesFormularioToObjetoActualEvaluacionEmpleado(this.getevaluacionempleado(),true);
					this.setVariablesFormularioToObjetoActualForeignKeysEvaluacionEmpleado(this.evaluacionempleado);
					//ARCHITECTURE
					/*
					if(Constantes.ISUSAEJBLOGICLAYER) {
						this.evaluacionempleado =(EvaluacionEmpleado) this.evaluacionempleadoLogic.getEvaluacionEmpleados().toArray()[this.jTableDatosEvaluacionEmpleado.convertRowIndexToModel(intSelectedRow)];
					} else if(Constantes.ISUSAEJBREMOTE || Constantes.ISUSAEJBHOME) {
						this.evaluacionempleado =(EvaluacionEmpleado) this.evaluacionempleados.toArray()[this.jTableDatosEvaluacionEmpleado.convertRowIndexToModel(intSelectedRow)];
					}
					*/
					//ARCHITECTURE

				} else {
					if(this.evaluacionempleado==null) {
						this.evaluacionempleado = new EvaluacionEmpleado();
					}

					this.setVariablesFormularioToObjetoActualEvaluacionEmpleado(this.evaluacionempleado,true);
					this.setVariablesFormularioToObjetoActualForeignKeysEvaluacionEmpleado(this.evaluacionempleado);
				}

				if(this.evaluacionempleado.getId()!=null) {

					this.sAccionBusqueda="Query";

					this.sFinalQueryGeneral=" where id = "+this.evaluacionempleado.getId().toString()+" ";

					if(Constantes.ISDEVELOPING) {
						System.out.println(this.sFinalQueryGeneral);
					}

					this.procesarBusqueda(this.sAccionBusqueda);

					this.inicializarActualizarBindingEvaluacionEmpleado(false);
				}

				if(Constantes.ISUSAEJBLOGICLAYER) {
					this.evaluacionempleadoLogic.commitNewConnexionToDeep();
				}

			} catch(Exception e) {

				if(Constantes.ISUSAEJBLOGICLAYER) {
					this.evaluacionempleadoLogic.rollbackNewConnexionToDeep();
				}

				FuncionesSwing.manageException(this, e,logger,EvaluacionEmpleadoConstantesFunciones.CLASSNAME);

			} finally {
				if(Constantes.ISUSAEJBLOGICLAYER) {
					this.evaluacionempleadoLogic.closeNewConnexionToDeep();
				}

			}
		}

	public void jButtonid_empresaEvaluacionEmpleadoUpdateActionPerformed(java.awt.event.ActionEvent evt) throws Exception {
		try {

			if(Constantes.ISUSAEJBLOGICLAYER) {
				this.evaluacionempleadoLogic.getNewConnexionToDeep("");
			}

			Boolean idTienePermisoempresa=true;

			idTienePermisoempresa=this.tienePermisosUsuarioEnPaginaWebEvaluacionEmpleado(EmpresaConstantesFunciones.CLASSNAME);

			if(idTienePermisoempresa) {
				//TOCA TRAER NUEVAMENTE, YA QUE SE PIERDE REGISTRO ACTUAL
				int intSelectedRow = this.jTableDatosEvaluacionEmpleado.getSelectedRow();

				if(intSelectedRow<0 && this.jTableDatosEvaluacionEmpleado.getRowCount()>0) {
					intSelectedRow =0;
					this.jTableDatosEvaluacionEmpleado.setRowSelectionInterval(intSelectedRow,intSelectedRow);
				}
				//ARCHITECTURE
				/*
				if(Constantes.ISUSAEJBLOGICLAYER) {
					this.evaluacionempleado =(EvaluacionEmpleado) this.evaluacionempleadoLogic.getEvaluacionEmpleados().toArray()[this.jTableDatosEvaluacionEmpleado.convertRowIndexToModel(intSelectedRow)];
				} else if(Constantes.ISUSAEJBREMOTE || Constantes.ISUSAEJBHOME) {
					this.evaluacionempleado =(EvaluacionEmpleado) this.evaluacionempleados.toArray()[this.jTableDatosEvaluacionEmpleado.convertRowIndexToModel(intSelectedRow)];
				}
				*/
				//ARCHITECTURE

				this.setVariablesFormularioToObjetoActualEvaluacionEmpleado(this.getevaluacionempleado(),true);
				this.setVariablesFormularioToObjetoActualForeignKeysEvaluacionEmpleado(this.evaluacionempleado);

				this.empresaBeanSwingJInternalFrame=new EmpresaBeanSwingJInternalFrame(true,true,this.jDesktopPane,this.usuarioActual,this.resumenUsuarioActual,this.moduloActual,this.opcionActual,this.parametroGeneralSg,this.parametroGeneralUsuario,PaginaTipo.AUXILIAR,false,false,false,true);
				this.empresaBeanSwingJInternalFrame.setJInternalFrameParent(this);

				this.empresaBeanSwingJInternalFrame.getEmpresaLogic().setConnexion(this.evaluacionempleadoLogic.getConnexion());

				if(this.evaluacionempleado.getid_empresa()!=null) {
					this.empresaBeanSwingJInternalFrame.sTipoBusqueda="PorId";
					this.empresaBeanSwingJInternalFrame.setIdActual(this.evaluacionempleado.getid_empresa());
					this.empresaBeanSwingJInternalFrame.procesarBusqueda("PorId");
					this.empresaBeanSwingJInternalFrame.setsAccionBusqueda("PorId");
					this.empresaBeanSwingJInternalFrame.inicializarActualizarBindingTablaEmpresa();
				}

				JInternalFrameBase jinternalFrame =this.empresaBeanSwingJInternalFrame;
				jinternalFrame.setAutoscrolls(true);
				//frame.setSize(screenSize.width-inset*7 , screenSize.height-inset*9);
				jinternalFrame.setVisible(true); 


				TitledBorder titledBorderEvaluacionEmpleado=(TitledBorder)this.jScrollPanelDatosEvaluacionEmpleado.getBorder();
				TitledBorder titledBorderempresa=(TitledBorder)this.empresaBeanSwingJInternalFrame.jScrollPanelDatosEmpresa.getBorder();

				titledBorderempresa.setTitle(titledBorderEvaluacionEmpleado.getTitle() + " -> Empresa");


				if(!Constantes.CON_VARIAS_VENTANAS) {
					MainJFrame.cerrarJInternalFramesExistentes(this.jDesktopPane,jinternalFrame);
				}

				this.jDesktopPane.add(jinternalFrame);

				jinternalFrame.setSelected(true);
			} else {
				throw new Exception("NO TIENE PERMISO PARA TRABAJAR CON ESTA INFORMACION");
			}

			if(Constantes.ISUSAEJBLOGICLAYER) {
				this.evaluacionempleadoLogic.commitNewConnexionToDeep();
			}


		} catch(Exception e) {

			if(Constantes.ISUSAEJBLOGICLAYER) {
				this.evaluacionempleadoLogic.rollbackNewConnexionToDeep();
			}

			FuncionesSwing.manageException(this, e,logger,EvaluacionEmpleadoConstantesFunciones.CLASSNAME);

		} finally {
			if(Constantes.ISUSAEJBLOGICLAYER) {
				this.evaluacionempleadoLogic.closeNewConnexionToDeep();
			}

		}
	}

	public void jButtonid_empresaEvaluacionEmpleadoBusquedaActionPerformed(java.awt.event.ActionEvent evt) throws Exception {
		try {

				if(Constantes.ISUSAEJBLOGICLAYER) {
					this.evaluacionempleadoLogic.getNewConnexionToDeep("");
				}

				//TOCA TRAER NUEVAMENTE, YA QUE SE PIERDE REGISTRO ACTUAL
				int intSelectedRow = this.jTableDatosEvaluacionEmpleado.getSelectedRow();

				if(intSelectedRow>-1) {
					this.setVariablesFormularioToObjetoActualEvaluacionEmpleado(this.getevaluacionempleado(),true);
					this.setVariablesFormularioToObjetoActualForeignKeysEvaluacionEmpleado(this.evaluacionempleado);
					//ARCHITECTURE
					/*
					if(Constantes.ISUSAEJBLOGICLAYER) {
						this.evaluacionempleado =(EvaluacionEmpleado) this.evaluacionempleadoLogic.getEvaluacionEmpleados().toArray()[this.jTableDatosEvaluacionEmpleado.convertRowIndexToModel(intSelectedRow)];
					} else if(Constantes.ISUSAEJBREMOTE || Constantes.ISUSAEJBHOME) {
						this.evaluacionempleado =(EvaluacionEmpleado) this.evaluacionempleados.toArray()[this.jTableDatosEvaluacionEmpleado.convertRowIndexToModel(intSelectedRow)];
					}
					*/
					//ARCHITECTURE

				} else {
					if(this.evaluacionempleado==null) {
						this.evaluacionempleado = new EvaluacionEmpleado();
					}

					this.setVariablesFormularioToObjetoActualEvaluacionEmpleado(this.evaluacionempleado,true);
					this.setVariablesFormularioToObjetoActualForeignKeysEvaluacionEmpleado(this.evaluacionempleado);
				}

				if(this.evaluacionempleado.getid_empresa()!=null) {

					this.sAccionBusqueda="Query";

					this.sFinalQueryGeneral=" where id_empresa = "+this.evaluacionempleado.getid_empresa().toString()+" ";

					if(Constantes.ISDEVELOPING) {
						System.out.println(this.sFinalQueryGeneral);
					}

					this.procesarBusqueda(this.sAccionBusqueda);

					this.inicializarActualizarBindingEvaluacionEmpleado(false);
				}

				if(Constantes.ISUSAEJBLOGICLAYER) {
					this.evaluacionempleadoLogic.commitNewConnexionToDeep();
				}

			} catch(Exception e) {

				if(Constantes.ISUSAEJBLOGICLAYER) {
					this.evaluacionempleadoLogic.rollbackNewConnexionToDeep();
				}

				FuncionesSwing.manageException(this, e,logger,EvaluacionEmpleadoConstantesFunciones.CLASSNAME);

			} finally {
				if(Constantes.ISUSAEJBLOGICLAYER) {
					this.evaluacionempleadoLogic.closeNewConnexionToDeep();
				}

			}
		}

	public void jButtonid_sucursalEvaluacionEmpleadoUpdateActionPerformed(java.awt.event.ActionEvent evt) throws Exception {
		try {

			if(Constantes.ISUSAEJBLOGICLAYER) {
				this.evaluacionempleadoLogic.getNewConnexionToDeep("");
			}

			Boolean idTienePermisosucursal=true;

			idTienePermisosucursal=this.tienePermisosUsuarioEnPaginaWebEvaluacionEmpleado(SucursalConstantesFunciones.CLASSNAME);

			if(idTienePermisosucursal) {
				//TOCA TRAER NUEVAMENTE, YA QUE SE PIERDE REGISTRO ACTUAL
				int intSelectedRow = this.jTableDatosEvaluacionEmpleado.getSelectedRow();

				if(intSelectedRow<0 && this.jTableDatosEvaluacionEmpleado.getRowCount()>0) {
					intSelectedRow =0;
					this.jTableDatosEvaluacionEmpleado.setRowSelectionInterval(intSelectedRow,intSelectedRow);
				}
				//ARCHITECTURE
				/*
				if(Constantes.ISUSAEJBLOGICLAYER) {
					this.evaluacionempleado =(EvaluacionEmpleado) this.evaluacionempleadoLogic.getEvaluacionEmpleados().toArray()[this.jTableDatosEvaluacionEmpleado.convertRowIndexToModel(intSelectedRow)];
				} else if(Constantes.ISUSAEJBREMOTE || Constantes.ISUSAEJBHOME) {
					this.evaluacionempleado =(EvaluacionEmpleado) this.evaluacionempleados.toArray()[this.jTableDatosEvaluacionEmpleado.convertRowIndexToModel(intSelectedRow)];
				}
				*/
				//ARCHITECTURE

				this.setVariablesFormularioToObjetoActualEvaluacionEmpleado(this.getevaluacionempleado(),true);
				this.setVariablesFormularioToObjetoActualForeignKeysEvaluacionEmpleado(this.evaluacionempleado);

				this.sucursalBeanSwingJInternalFrame=new SucursalBeanSwingJInternalFrame(true,true,this.jDesktopPane,this.usuarioActual,this.resumenUsuarioActual,this.moduloActual,this.opcionActual,this.parametroGeneralSg,this.parametroGeneralUsuario,PaginaTipo.AUXILIAR,false,false,false,true);
				this.sucursalBeanSwingJInternalFrame.setJInternalFrameParent(this);

				this.sucursalBeanSwingJInternalFrame.getSucursalLogic().setConnexion(this.evaluacionempleadoLogic.getConnexion());

				if(this.evaluacionempleado.getid_sucursal()!=null) {
					this.sucursalBeanSwingJInternalFrame.sTipoBusqueda="PorId";
					this.sucursalBeanSwingJInternalFrame.setIdActual(this.evaluacionempleado.getid_sucursal());
					this.sucursalBeanSwingJInternalFrame.procesarBusqueda("PorId");
					this.sucursalBeanSwingJInternalFrame.setsAccionBusqueda("PorId");
					this.sucursalBeanSwingJInternalFrame.inicializarActualizarBindingTablaSucursal();
				}

				JInternalFrameBase jinternalFrame =this.sucursalBeanSwingJInternalFrame;
				jinternalFrame.setAutoscrolls(true);
				//frame.setSize(screenSize.width-inset*7 , screenSize.height-inset*9);
				jinternalFrame.setVisible(true); 


				TitledBorder titledBorderEvaluacionEmpleado=(TitledBorder)this.jScrollPanelDatosEvaluacionEmpleado.getBorder();
				TitledBorder titledBordersucursal=(TitledBorder)this.sucursalBeanSwingJInternalFrame.jScrollPanelDatosSucursal.getBorder();

				titledBordersucursal.setTitle(titledBorderEvaluacionEmpleado.getTitle() + " -> Sucursal");


				if(!Constantes.CON_VARIAS_VENTANAS) {
					MainJFrame.cerrarJInternalFramesExistentes(this.jDesktopPane,jinternalFrame);
				}

				this.jDesktopPane.add(jinternalFrame);

				jinternalFrame.setSelected(true);
			} else {
				throw new Exception("NO TIENE PERMISO PARA TRABAJAR CON ESTA INFORMACION");
			}

			if(Constantes.ISUSAEJBLOGICLAYER) {
				this.evaluacionempleadoLogic.commitNewConnexionToDeep();
			}


		} catch(Exception e) {

			if(Constantes.ISUSAEJBLOGICLAYER) {
				this.evaluacionempleadoLogic.rollbackNewConnexionToDeep();
			}

			FuncionesSwing.manageException(this, e,logger,EvaluacionEmpleadoConstantesFunciones.CLASSNAME);

		} finally {
			if(Constantes.ISUSAEJBLOGICLAYER) {
				this.evaluacionempleadoLogic.closeNewConnexionToDeep();
			}

		}
	}

	public void jButtonid_sucursalEvaluacionEmpleadoBusquedaActionPerformed(java.awt.event.ActionEvent evt) throws Exception {
		try {

				if(Constantes.ISUSAEJBLOGICLAYER) {
					this.evaluacionempleadoLogic.getNewConnexionToDeep("");
				}

				//TOCA TRAER NUEVAMENTE, YA QUE SE PIERDE REGISTRO ACTUAL
				int intSelectedRow = this.jTableDatosEvaluacionEmpleado.getSelectedRow();

				if(intSelectedRow>-1) {
					this.setVariablesFormularioToObjetoActualEvaluacionEmpleado(this.getevaluacionempleado(),true);
					this.setVariablesFormularioToObjetoActualForeignKeysEvaluacionEmpleado(this.evaluacionempleado);
					//ARCHITECTURE
					/*
					if(Constantes.ISUSAEJBLOGICLAYER) {
						this.evaluacionempleado =(EvaluacionEmpleado) this.evaluacionempleadoLogic.getEvaluacionEmpleados().toArray()[this.jTableDatosEvaluacionEmpleado.convertRowIndexToModel(intSelectedRow)];
					} else if(Constantes.ISUSAEJBREMOTE || Constantes.ISUSAEJBHOME) {
						this.evaluacionempleado =(EvaluacionEmpleado) this.evaluacionempleados.toArray()[this.jTableDatosEvaluacionEmpleado.convertRowIndexToModel(intSelectedRow)];
					}
					*/
					//ARCHITECTURE

				} else {
					if(this.evaluacionempleado==null) {
						this.evaluacionempleado = new EvaluacionEmpleado();
					}

					this.setVariablesFormularioToObjetoActualEvaluacionEmpleado(this.evaluacionempleado,true);
					this.setVariablesFormularioToObjetoActualForeignKeysEvaluacionEmpleado(this.evaluacionempleado);
				}

				if(this.evaluacionempleado.getid_sucursal()!=null) {

					this.sAccionBusqueda="Query";

					this.sFinalQueryGeneral=" where id_sucursal = "+this.evaluacionempleado.getid_sucursal().toString()+" ";

					if(Constantes.ISDEVELOPING) {
						System.out.println(this.sFinalQueryGeneral);
					}

					this.procesarBusqueda(this.sAccionBusqueda);

					this.inicializarActualizarBindingEvaluacionEmpleado(false);
				}

				if(Constantes.ISUSAEJBLOGICLAYER) {
					this.evaluacionempleadoLogic.commitNewConnexionToDeep();
				}

			} catch(Exception e) {

				if(Constantes.ISUSAEJBLOGICLAYER) {
					this.evaluacionempleadoLogic.rollbackNewConnexionToDeep();
				}

				FuncionesSwing.manageException(this, e,logger,EvaluacionEmpleadoConstantesFunciones.CLASSNAME);

			} finally {
				if(Constantes.ISUSAEJBLOGICLAYER) {
					this.evaluacionempleadoLogic.closeNewConnexionToDeep();
				}

			}
		}

	public void jButtonid_ejercicioEvaluacionEmpleadoUpdateActionPerformed(java.awt.event.ActionEvent evt) throws Exception {
		try {

			if(Constantes.ISUSAEJBLOGICLAYER) {
				this.evaluacionempleadoLogic.getNewConnexionToDeep("");
			}

			Boolean idTienePermisoejercicio=true;

			idTienePermisoejercicio=this.tienePermisosUsuarioEnPaginaWebEvaluacionEmpleado(EjercicioConstantesFunciones.CLASSNAME);

			if(idTienePermisoejercicio) {
				//TOCA TRAER NUEVAMENTE, YA QUE SE PIERDE REGISTRO ACTUAL
				int intSelectedRow = this.jTableDatosEvaluacionEmpleado.getSelectedRow();

				if(intSelectedRow<0 && this.jTableDatosEvaluacionEmpleado.getRowCount()>0) {
					intSelectedRow =0;
					this.jTableDatosEvaluacionEmpleado.setRowSelectionInterval(intSelectedRow,intSelectedRow);
				}
				//ARCHITECTURE
				/*
				if(Constantes.ISUSAEJBLOGICLAYER) {
					this.evaluacionempleado =(EvaluacionEmpleado) this.evaluacionempleadoLogic.getEvaluacionEmpleados().toArray()[this.jTableDatosEvaluacionEmpleado.convertRowIndexToModel(intSelectedRow)];
				} else if(Constantes.ISUSAEJBREMOTE || Constantes.ISUSAEJBHOME) {
					this.evaluacionempleado =(EvaluacionEmpleado) this.evaluacionempleados.toArray()[this.jTableDatosEvaluacionEmpleado.convertRowIndexToModel(intSelectedRow)];
				}
				*/
				//ARCHITECTURE

				this.setVariablesFormularioToObjetoActualEvaluacionEmpleado(this.getevaluacionempleado(),true);
				this.setVariablesFormularioToObjetoActualForeignKeysEvaluacionEmpleado(this.evaluacionempleado);

				this.ejercicioBeanSwingJInternalFrame=new EjercicioBeanSwingJInternalFrame(true,true,this.jDesktopPane,this.usuarioActual,this.resumenUsuarioActual,this.moduloActual,this.opcionActual,this.parametroGeneralSg,this.parametroGeneralUsuario,PaginaTipo.AUXILIAR,false,false,false,true);
				this.ejercicioBeanSwingJInternalFrame.setJInternalFrameParent(this);

				this.ejercicioBeanSwingJInternalFrame.getEjercicioLogic().setConnexion(this.evaluacionempleadoLogic.getConnexion());

				if(this.evaluacionempleado.getid_ejercicio()!=null) {
					this.ejercicioBeanSwingJInternalFrame.sTipoBusqueda="PorId";
					this.ejercicioBeanSwingJInternalFrame.setIdActual(this.evaluacionempleado.getid_ejercicio());
					this.ejercicioBeanSwingJInternalFrame.procesarBusqueda("PorId");
					this.ejercicioBeanSwingJInternalFrame.setsAccionBusqueda("PorId");
					this.ejercicioBeanSwingJInternalFrame.inicializarActualizarBindingTablaEjercicio();
				}

				JInternalFrameBase jinternalFrame =this.ejercicioBeanSwingJInternalFrame;
				jinternalFrame.setAutoscrolls(true);
				//frame.setSize(screenSize.width-inset*7 , screenSize.height-inset*9);
				jinternalFrame.setVisible(true); 


				TitledBorder titledBorderEvaluacionEmpleado=(TitledBorder)this.jScrollPanelDatosEvaluacionEmpleado.getBorder();
				TitledBorder titledBorderejercicio=(TitledBorder)this.ejercicioBeanSwingJInternalFrame.jScrollPanelDatosEjercicio.getBorder();

				titledBorderejercicio.setTitle(titledBorderEvaluacionEmpleado.getTitle() + " -> Ejercicio");


				if(!Constantes.CON_VARIAS_VENTANAS) {
					MainJFrame.cerrarJInternalFramesExistentes(this.jDesktopPane,jinternalFrame);
				}

				this.jDesktopPane.add(jinternalFrame);

				jinternalFrame.setSelected(true);
			} else {
				throw new Exception("NO TIENE PERMISO PARA TRABAJAR CON ESTA INFORMACION");
			}

			if(Constantes.ISUSAEJBLOGICLAYER) {
				this.evaluacionempleadoLogic.commitNewConnexionToDeep();
			}


		} catch(Exception e) {

			if(Constantes.ISUSAEJBLOGICLAYER) {
				this.evaluacionempleadoLogic.rollbackNewConnexionToDeep();
			}

			FuncionesSwing.manageException(this, e,logger,EvaluacionEmpleadoConstantesFunciones.CLASSNAME);

		} finally {
			if(Constantes.ISUSAEJBLOGICLAYER) {
				this.evaluacionempleadoLogic.closeNewConnexionToDeep();
			}

		}
	}

	public void jButtonid_ejercicioEvaluacionEmpleadoBusquedaActionPerformed(java.awt.event.ActionEvent evt) throws Exception {
		try {

				if(Constantes.ISUSAEJBLOGICLAYER) {
					this.evaluacionempleadoLogic.getNewConnexionToDeep("");
				}

				//TOCA TRAER NUEVAMENTE, YA QUE SE PIERDE REGISTRO ACTUAL
				int intSelectedRow = this.jTableDatosEvaluacionEmpleado.getSelectedRow();

				if(intSelectedRow>-1) {
					this.setVariablesFormularioToObjetoActualEvaluacionEmpleado(this.getevaluacionempleado(),true);
					this.setVariablesFormularioToObjetoActualForeignKeysEvaluacionEmpleado(this.evaluacionempleado);
					//ARCHITECTURE
					/*
					if(Constantes.ISUSAEJBLOGICLAYER) {
						this.evaluacionempleado =(EvaluacionEmpleado) this.evaluacionempleadoLogic.getEvaluacionEmpleados().toArray()[this.jTableDatosEvaluacionEmpleado.convertRowIndexToModel(intSelectedRow)];
					} else if(Constantes.ISUSAEJBREMOTE || Constantes.ISUSAEJBHOME) {
						this.evaluacionempleado =(EvaluacionEmpleado) this.evaluacionempleados.toArray()[this.jTableDatosEvaluacionEmpleado.convertRowIndexToModel(intSelectedRow)];
					}
					*/
					//ARCHITECTURE

				} else {
					if(this.evaluacionempleado==null) {
						this.evaluacionempleado = new EvaluacionEmpleado();
					}

					this.setVariablesFormularioToObjetoActualEvaluacionEmpleado(this.evaluacionempleado,true);
					this.setVariablesFormularioToObjetoActualForeignKeysEvaluacionEmpleado(this.evaluacionempleado);
				}

				if(this.evaluacionempleado.getid_ejercicio()!=null) {

					this.sAccionBusqueda="Query";

					this.sFinalQueryGeneral=" where id_ejercicio = "+this.evaluacionempleado.getid_ejercicio().toString()+" ";

					if(Constantes.ISDEVELOPING) {
						System.out.println(this.sFinalQueryGeneral);
					}

					this.procesarBusqueda(this.sAccionBusqueda);

					this.inicializarActualizarBindingEvaluacionEmpleado(false);
				}

				if(Constantes.ISUSAEJBLOGICLAYER) {
					this.evaluacionempleadoLogic.commitNewConnexionToDeep();
				}

			} catch(Exception e) {

				if(Constantes.ISUSAEJBLOGICLAYER) {
					this.evaluacionempleadoLogic.rollbackNewConnexionToDeep();
				}

				FuncionesSwing.manageException(this, e,logger,EvaluacionEmpleadoConstantesFunciones.CLASSNAME);

			} finally {
				if(Constantes.ISUSAEJBLOGICLAYER) {
					this.evaluacionempleadoLogic.closeNewConnexionToDeep();
				}

			}
		}

	public void jButtonid_periodoEvaluacionEmpleadoUpdateActionPerformed(java.awt.event.ActionEvent evt) throws Exception {
		try {

			if(Constantes.ISUSAEJBLOGICLAYER) {
				this.evaluacionempleadoLogic.getNewConnexionToDeep("");
			}

			Boolean idTienePermisoperiodo=true;

			idTienePermisoperiodo=this.tienePermisosUsuarioEnPaginaWebEvaluacionEmpleado(PeriodoConstantesFunciones.CLASSNAME);

			if(idTienePermisoperiodo) {
				//TOCA TRAER NUEVAMENTE, YA QUE SE PIERDE REGISTRO ACTUAL
				int intSelectedRow = this.jTableDatosEvaluacionEmpleado.getSelectedRow();

				if(intSelectedRow<0 && this.jTableDatosEvaluacionEmpleado.getRowCount()>0) {
					intSelectedRow =0;
					this.jTableDatosEvaluacionEmpleado.setRowSelectionInterval(intSelectedRow,intSelectedRow);
				}
				//ARCHITECTURE
				/*
				if(Constantes.ISUSAEJBLOGICLAYER) {
					this.evaluacionempleado =(EvaluacionEmpleado) this.evaluacionempleadoLogic.getEvaluacionEmpleados().toArray()[this.jTableDatosEvaluacionEmpleado.convertRowIndexToModel(intSelectedRow)];
				} else if(Constantes.ISUSAEJBREMOTE || Constantes.ISUSAEJBHOME) {
					this.evaluacionempleado =(EvaluacionEmpleado) this.evaluacionempleados.toArray()[this.jTableDatosEvaluacionEmpleado.convertRowIndexToModel(intSelectedRow)];
				}
				*/
				//ARCHITECTURE

				this.setVariablesFormularioToObjetoActualEvaluacionEmpleado(this.getevaluacionempleado(),true);
				this.setVariablesFormularioToObjetoActualForeignKeysEvaluacionEmpleado(this.evaluacionempleado);

				this.periodoBeanSwingJInternalFrame=new PeriodoBeanSwingJInternalFrame(true,true,this.jDesktopPane,this.usuarioActual,this.resumenUsuarioActual,this.moduloActual,this.opcionActual,this.parametroGeneralSg,this.parametroGeneralUsuario,PaginaTipo.AUXILIAR,false,false,false,true);
				this.periodoBeanSwingJInternalFrame.setJInternalFrameParent(this);

				this.periodoBeanSwingJInternalFrame.getPeriodoLogic().setConnexion(this.evaluacionempleadoLogic.getConnexion());

				if(this.evaluacionempleado.getid_periodo()!=null) {
					this.periodoBeanSwingJInternalFrame.sTipoBusqueda="PorId";
					this.periodoBeanSwingJInternalFrame.setIdActual(this.evaluacionempleado.getid_periodo());
					this.periodoBeanSwingJInternalFrame.procesarBusqueda("PorId");
					this.periodoBeanSwingJInternalFrame.setsAccionBusqueda("PorId");
					this.periodoBeanSwingJInternalFrame.inicializarActualizarBindingTablaPeriodo();
				}

				JInternalFrameBase jinternalFrame =this.periodoBeanSwingJInternalFrame;
				jinternalFrame.setAutoscrolls(true);
				//frame.setSize(screenSize.width-inset*7 , screenSize.height-inset*9);
				jinternalFrame.setVisible(true); 


				TitledBorder titledBorderEvaluacionEmpleado=(TitledBorder)this.jScrollPanelDatosEvaluacionEmpleado.getBorder();
				TitledBorder titledBorderperiodo=(TitledBorder)this.periodoBeanSwingJInternalFrame.jScrollPanelDatosPeriodo.getBorder();

				titledBorderperiodo.setTitle(titledBorderEvaluacionEmpleado.getTitle() + " -> Periodo");


				if(!Constantes.CON_VARIAS_VENTANAS) {
					MainJFrame.cerrarJInternalFramesExistentes(this.jDesktopPane,jinternalFrame);
				}

				this.jDesktopPane.add(jinternalFrame);

				jinternalFrame.setSelected(true);
			} else {
				throw new Exception("NO TIENE PERMISO PARA TRABAJAR CON ESTA INFORMACION");
			}

			if(Constantes.ISUSAEJBLOGICLAYER) {
				this.evaluacionempleadoLogic.commitNewConnexionToDeep();
			}


		} catch(Exception e) {

			if(Constantes.ISUSAEJBLOGICLAYER) {
				this.evaluacionempleadoLogic.rollbackNewConnexionToDeep();
			}

			FuncionesSwing.manageException(this, e,logger,EvaluacionEmpleadoConstantesFunciones.CLASSNAME);

		} finally {
			if(Constantes.ISUSAEJBLOGICLAYER) {
				this.evaluacionempleadoLogic.closeNewConnexionToDeep();
			}

		}
	}

	public void jButtonid_periodoEvaluacionEmpleadoBusquedaActionPerformed(java.awt.event.ActionEvent evt) throws Exception {
		try {

				if(Constantes.ISUSAEJBLOGICLAYER) {
					this.evaluacionempleadoLogic.getNewConnexionToDeep("");
				}

				//TOCA TRAER NUEVAMENTE, YA QUE SE PIERDE REGISTRO ACTUAL
				int intSelectedRow = this.jTableDatosEvaluacionEmpleado.getSelectedRow();

				if(intSelectedRow>-1) {
					this.setVariablesFormularioToObjetoActualEvaluacionEmpleado(this.getevaluacionempleado(),true);
					this.setVariablesFormularioToObjetoActualForeignKeysEvaluacionEmpleado(this.evaluacionempleado);
					//ARCHITECTURE
					/*
					if(Constantes.ISUSAEJBLOGICLAYER) {
						this.evaluacionempleado =(EvaluacionEmpleado) this.evaluacionempleadoLogic.getEvaluacionEmpleados().toArray()[this.jTableDatosEvaluacionEmpleado.convertRowIndexToModel(intSelectedRow)];
					} else if(Constantes.ISUSAEJBREMOTE || Constantes.ISUSAEJBHOME) {
						this.evaluacionempleado =(EvaluacionEmpleado) this.evaluacionempleados.toArray()[this.jTableDatosEvaluacionEmpleado.convertRowIndexToModel(intSelectedRow)];
					}
					*/
					//ARCHITECTURE

				} else {
					if(this.evaluacionempleado==null) {
						this.evaluacionempleado = new EvaluacionEmpleado();
					}

					this.setVariablesFormularioToObjetoActualEvaluacionEmpleado(this.evaluacionempleado,true);
					this.setVariablesFormularioToObjetoActualForeignKeysEvaluacionEmpleado(this.evaluacionempleado);
				}

				if(this.evaluacionempleado.getid_periodo()!=null) {

					this.sAccionBusqueda="Query";

					this.sFinalQueryGeneral=" where id_periodo = "+this.evaluacionempleado.getid_periodo().toString()+" ";

					if(Constantes.ISDEVELOPING) {
						System.out.println(this.sFinalQueryGeneral);
					}

					this.procesarBusqueda(this.sAccionBusqueda);

					this.inicializarActualizarBindingEvaluacionEmpleado(false);
				}

				if(Constantes.ISUSAEJBLOGICLAYER) {
					this.evaluacionempleadoLogic.commitNewConnexionToDeep();
				}

			} catch(Exception e) {

				if(Constantes.ISUSAEJBLOGICLAYER) {
					this.evaluacionempleadoLogic.rollbackNewConnexionToDeep();
				}

				FuncionesSwing.manageException(this, e,logger,EvaluacionEmpleadoConstantesFunciones.CLASSNAME);

			} finally {
				if(Constantes.ISUSAEJBLOGICLAYER) {
					this.evaluacionempleadoLogic.closeNewConnexionToDeep();
				}

			}
		}

	public void jButtonid_estructuraEvaluacionEmpleadoUpdateActionPerformed(java.awt.event.ActionEvent evt) throws Exception {
		try {

			if(Constantes.ISUSAEJBLOGICLAYER) {
				this.evaluacionempleadoLogic.getNewConnexionToDeep("");
			}

			Boolean idTienePermisoestructura=true;

			idTienePermisoestructura=this.tienePermisosUsuarioEnPaginaWebEvaluacionEmpleado(EstructuraConstantesFunciones.CLASSNAME);

			if(idTienePermisoestructura) {
				//TOCA TRAER NUEVAMENTE, YA QUE SE PIERDE REGISTRO ACTUAL
				int intSelectedRow = this.jTableDatosEvaluacionEmpleado.getSelectedRow();

				if(intSelectedRow<0 && this.jTableDatosEvaluacionEmpleado.getRowCount()>0) {
					intSelectedRow =0;
					this.jTableDatosEvaluacionEmpleado.setRowSelectionInterval(intSelectedRow,intSelectedRow);
				}
				//ARCHITECTURE
				/*
				if(Constantes.ISUSAEJBLOGICLAYER) {
					this.evaluacionempleado =(EvaluacionEmpleado) this.evaluacionempleadoLogic.getEvaluacionEmpleados().toArray()[this.jTableDatosEvaluacionEmpleado.convertRowIndexToModel(intSelectedRow)];
				} else if(Constantes.ISUSAEJBREMOTE || Constantes.ISUSAEJBHOME) {
					this.evaluacionempleado =(EvaluacionEmpleado) this.evaluacionempleados.toArray()[this.jTableDatosEvaluacionEmpleado.convertRowIndexToModel(intSelectedRow)];
				}
				*/
				//ARCHITECTURE

				this.setVariablesFormularioToObjetoActualEvaluacionEmpleado(this.getevaluacionempleado(),true);
				this.setVariablesFormularioToObjetoActualForeignKeysEvaluacionEmpleado(this.evaluacionempleado);

				this.estructuraBeanSwingJInternalFrame=new EstructuraBeanSwingJInternalFrame(true,true,this.jDesktopPane,this.usuarioActual,this.resumenUsuarioActual,this.moduloActual,this.opcionActual,this.parametroGeneralSg,this.parametroGeneralUsuario,PaginaTipo.AUXILIAR,false,false,false,true);
				this.estructuraBeanSwingJInternalFrame.setJInternalFrameParent(this);

				this.estructuraBeanSwingJInternalFrame.getEstructuraLogic().setConnexion(this.evaluacionempleadoLogic.getConnexion());

				if(this.evaluacionempleado.getid_estructura()!=null) {
					this.estructuraBeanSwingJInternalFrame.sTipoBusqueda="PorId";
					this.estructuraBeanSwingJInternalFrame.setIdActual(this.evaluacionempleado.getid_estructura());
					this.estructuraBeanSwingJInternalFrame.procesarBusqueda("PorId");
					this.estructuraBeanSwingJInternalFrame.setsAccionBusqueda("PorId");
					this.estructuraBeanSwingJInternalFrame.inicializarActualizarBindingTablaEstructura();
				}

				JInternalFrameBase jinternalFrame =this.estructuraBeanSwingJInternalFrame;
				jinternalFrame.setAutoscrolls(true);
				//frame.setSize(screenSize.width-inset*7 , screenSize.height-inset*9);
				jinternalFrame.setVisible(true); 


				TitledBorder titledBorderEvaluacionEmpleado=(TitledBorder)this.jScrollPanelDatosEvaluacionEmpleado.getBorder();
				TitledBorder titledBorderestructura=(TitledBorder)this.estructuraBeanSwingJInternalFrame.jScrollPanelDatosEstructura.getBorder();

				titledBorderestructura.setTitle(titledBorderEvaluacionEmpleado.getTitle() + " -> Estructura");


				if(!Constantes.CON_VARIAS_VENTANAS) {
					MainJFrame.cerrarJInternalFramesExistentes(this.jDesktopPane,jinternalFrame);
				}

				this.jDesktopPane.add(jinternalFrame);

				jinternalFrame.setSelected(true);
			} else {
				throw new Exception("NO TIENE PERMISO PARA TRABAJAR CON ESTA INFORMACION");
			}

			if(Constantes.ISUSAEJBLOGICLAYER) {
				this.evaluacionempleadoLogic.commitNewConnexionToDeep();
			}


		} catch(Exception e) {

			if(Constantes.ISUSAEJBLOGICLAYER) {
				this.evaluacionempleadoLogic.rollbackNewConnexionToDeep();
			}

			FuncionesSwing.manageException(this, e,logger,EvaluacionEmpleadoConstantesFunciones.CLASSNAME);

		} finally {
			if(Constantes.ISUSAEJBLOGICLAYER) {
				this.evaluacionempleadoLogic.closeNewConnexionToDeep();
			}

		}
	}

	public void jButtonid_estructuraEvaluacionEmpleadoBusquedaActionPerformed(java.awt.event.ActionEvent evt) throws Exception {
		try {

				if(Constantes.ISUSAEJBLOGICLAYER) {
					this.evaluacionempleadoLogic.getNewConnexionToDeep("");
				}

				//TOCA TRAER NUEVAMENTE, YA QUE SE PIERDE REGISTRO ACTUAL
				int intSelectedRow = this.jTableDatosEvaluacionEmpleado.getSelectedRow();

				if(intSelectedRow>-1) {
					this.setVariablesFormularioToObjetoActualEvaluacionEmpleado(this.getevaluacionempleado(),true);
					this.setVariablesFormularioToObjetoActualForeignKeysEvaluacionEmpleado(this.evaluacionempleado);
					//ARCHITECTURE
					/*
					if(Constantes.ISUSAEJBLOGICLAYER) {
						this.evaluacionempleado =(EvaluacionEmpleado) this.evaluacionempleadoLogic.getEvaluacionEmpleados().toArray()[this.jTableDatosEvaluacionEmpleado.convertRowIndexToModel(intSelectedRow)];
					} else if(Constantes.ISUSAEJBREMOTE || Constantes.ISUSAEJBHOME) {
						this.evaluacionempleado =(EvaluacionEmpleado) this.evaluacionempleados.toArray()[this.jTableDatosEvaluacionEmpleado.convertRowIndexToModel(intSelectedRow)];
					}
					*/
					//ARCHITECTURE

				} else {
					if(this.evaluacionempleado==null) {
						this.evaluacionempleado = new EvaluacionEmpleado();
					}

					this.setVariablesFormularioToObjetoActualEvaluacionEmpleado(this.evaluacionempleado,true);
					this.setVariablesFormularioToObjetoActualForeignKeysEvaluacionEmpleado(this.evaluacionempleado);
				}

				if(this.evaluacionempleado.getid_estructura()!=null) {

					this.sAccionBusqueda="Query";

					this.sFinalQueryGeneral=" where id_estructura = "+this.evaluacionempleado.getid_estructura().toString()+" ";

					if(Constantes.ISDEVELOPING) {
						System.out.println(this.sFinalQueryGeneral);
					}

					this.procesarBusqueda(this.sAccionBusqueda);

					this.inicializarActualizarBindingEvaluacionEmpleado(false);
				}

				if(Constantes.ISUSAEJBLOGICLAYER) {
					this.evaluacionempleadoLogic.commitNewConnexionToDeep();
				}

			} catch(Exception e) {

				if(Constantes.ISUSAEJBLOGICLAYER) {
					this.evaluacionempleadoLogic.rollbackNewConnexionToDeep();
				}

				FuncionesSwing.manageException(this, e,logger,EvaluacionEmpleadoConstantesFunciones.CLASSNAME);

			} finally {
				if(Constantes.ISUSAEJBLOGICLAYER) {
					this.evaluacionempleadoLogic.closeNewConnexionToDeep();
				}

			}
		}

	public void jButtonid_empleadoEvaluacionEmpleadoUpdateActionPerformed(java.awt.event.ActionEvent evt) throws Exception {
		try {

			if(Constantes.ISUSAEJBLOGICLAYER) {
				this.evaluacionempleadoLogic.getNewConnexionToDeep("");
			}

			Boolean idTienePermisoempleado=true;

			idTienePermisoempleado=this.tienePermisosUsuarioEnPaginaWebEvaluacionEmpleado(EmpleadoConstantesFunciones.CLASSNAME);

			if(idTienePermisoempleado) {
				//TOCA TRAER NUEVAMENTE, YA QUE SE PIERDE REGISTRO ACTUAL
				int intSelectedRow = this.jTableDatosEvaluacionEmpleado.getSelectedRow();

				if(intSelectedRow<0 && this.jTableDatosEvaluacionEmpleado.getRowCount()>0) {
					intSelectedRow =0;
					this.jTableDatosEvaluacionEmpleado.setRowSelectionInterval(intSelectedRow,intSelectedRow);
				}
				//ARCHITECTURE
				/*
				if(Constantes.ISUSAEJBLOGICLAYER) {
					this.evaluacionempleado =(EvaluacionEmpleado) this.evaluacionempleadoLogic.getEvaluacionEmpleados().toArray()[this.jTableDatosEvaluacionEmpleado.convertRowIndexToModel(intSelectedRow)];
				} else if(Constantes.ISUSAEJBREMOTE || Constantes.ISUSAEJBHOME) {
					this.evaluacionempleado =(EvaluacionEmpleado) this.evaluacionempleados.toArray()[this.jTableDatosEvaluacionEmpleado.convertRowIndexToModel(intSelectedRow)];
				}
				*/
				//ARCHITECTURE

				this.setVariablesFormularioToObjetoActualEvaluacionEmpleado(this.getevaluacionempleado(),true);
				this.setVariablesFormularioToObjetoActualForeignKeysEvaluacionEmpleado(this.evaluacionempleado);

				this.empleadoBeanSwingJInternalFrame=new EmpleadoBeanSwingJInternalFrame(true,true,this.jDesktopPane,this.usuarioActual,this.resumenUsuarioActual,this.moduloActual,this.opcionActual,this.parametroGeneralSg,this.parametroGeneralUsuario,PaginaTipo.AUXILIAR,false,false,false,true);
				this.empleadoBeanSwingJInternalFrame.setJInternalFrameParent(this);

				this.empleadoBeanSwingJInternalFrame.getEmpleadoLogic().setConnexion(this.evaluacionempleadoLogic.getConnexion());

				if(this.evaluacionempleado.getid_empleado()!=null) {
					this.empleadoBeanSwingJInternalFrame.sTipoBusqueda="PorId";
					this.empleadoBeanSwingJInternalFrame.setIdActual(this.evaluacionempleado.getid_empleado());
					this.empleadoBeanSwingJInternalFrame.procesarBusqueda("PorId");
					this.empleadoBeanSwingJInternalFrame.setsAccionBusqueda("PorId");
					this.empleadoBeanSwingJInternalFrame.inicializarActualizarBindingTablaEmpleado();
				}

				JInternalFrameBase jinternalFrame =this.empleadoBeanSwingJInternalFrame;
				jinternalFrame.setAutoscrolls(true);
				//frame.setSize(screenSize.width-inset*7 , screenSize.height-inset*9);
				jinternalFrame.setVisible(true); 


				TitledBorder titledBorderEvaluacionEmpleado=(TitledBorder)this.jScrollPanelDatosEvaluacionEmpleado.getBorder();
				TitledBorder titledBorderempleado=(TitledBorder)this.empleadoBeanSwingJInternalFrame.jScrollPanelDatosEmpleado.getBorder();

				titledBorderempleado.setTitle(titledBorderEvaluacionEmpleado.getTitle() + " -> Empleado");


				if(!Constantes.CON_VARIAS_VENTANAS) {
					MainJFrame.cerrarJInternalFramesExistentes(this.jDesktopPane,jinternalFrame);
				}

				this.jDesktopPane.add(jinternalFrame);

				jinternalFrame.setSelected(true);
			} else {
				throw new Exception("NO TIENE PERMISO PARA TRABAJAR CON ESTA INFORMACION");
			}

			if(Constantes.ISUSAEJBLOGICLAYER) {
				this.evaluacionempleadoLogic.commitNewConnexionToDeep();
			}


		} catch(Exception e) {

			if(Constantes.ISUSAEJBLOGICLAYER) {
				this.evaluacionempleadoLogic.rollbackNewConnexionToDeep();
			}

			FuncionesSwing.manageException(this, e,logger,EvaluacionEmpleadoConstantesFunciones.CLASSNAME);

		} finally {
			if(Constantes.ISUSAEJBLOGICLAYER) {
				this.evaluacionempleadoLogic.closeNewConnexionToDeep();
			}

		}
	}

	public void jButtonid_empleadoEvaluacionEmpleadoBusquedaActionPerformed(java.awt.event.ActionEvent evt) throws Exception {
		try {

				if(Constantes.ISUSAEJBLOGICLAYER) {
					this.evaluacionempleadoLogic.getNewConnexionToDeep("");
				}

				//TOCA TRAER NUEVAMENTE, YA QUE SE PIERDE REGISTRO ACTUAL
				int intSelectedRow = this.jTableDatosEvaluacionEmpleado.getSelectedRow();

				if(intSelectedRow>-1) {
					this.setVariablesFormularioToObjetoActualEvaluacionEmpleado(this.getevaluacionempleado(),true);
					this.setVariablesFormularioToObjetoActualForeignKeysEvaluacionEmpleado(this.evaluacionempleado);
					//ARCHITECTURE
					/*
					if(Constantes.ISUSAEJBLOGICLAYER) {
						this.evaluacionempleado =(EvaluacionEmpleado) this.evaluacionempleadoLogic.getEvaluacionEmpleados().toArray()[this.jTableDatosEvaluacionEmpleado.convertRowIndexToModel(intSelectedRow)];
					} else if(Constantes.ISUSAEJBREMOTE || Constantes.ISUSAEJBHOME) {
						this.evaluacionempleado =(EvaluacionEmpleado) this.evaluacionempleados.toArray()[this.jTableDatosEvaluacionEmpleado.convertRowIndexToModel(intSelectedRow)];
					}
					*/
					//ARCHITECTURE

				} else {
					if(this.evaluacionempleado==null) {
						this.evaluacionempleado = new EvaluacionEmpleado();
					}

					this.setVariablesFormularioToObjetoActualEvaluacionEmpleado(this.evaluacionempleado,true);
					this.setVariablesFormularioToObjetoActualForeignKeysEvaluacionEmpleado(this.evaluacionempleado);
				}

				if(this.evaluacionempleado.getid_empleado()!=null) {

					this.sAccionBusqueda="Query";

					this.sFinalQueryGeneral=" where id_empleado = "+this.evaluacionempleado.getid_empleado().toString()+" ";

					if(Constantes.ISDEVELOPING) {
						System.out.println(this.sFinalQueryGeneral);
					}

					this.procesarBusqueda(this.sAccionBusqueda);

					this.inicializarActualizarBindingEvaluacionEmpleado(false);
				}

				if(Constantes.ISUSAEJBLOGICLAYER) {
					this.evaluacionempleadoLogic.commitNewConnexionToDeep();
				}

			} catch(Exception e) {

				if(Constantes.ISUSAEJBLOGICLAYER) {
					this.evaluacionempleadoLogic.rollbackNewConnexionToDeep();
				}

				FuncionesSwing.manageException(this, e,logger,EvaluacionEmpleadoConstantesFunciones.CLASSNAME);

			} finally {
				if(Constantes.ISUSAEJBLOGICLAYER) {
					this.evaluacionempleadoLogic.closeNewConnexionToDeep();
				}

			}
		}

	public void jButtonid_empleado_evaluaEvaluacionEmpleadoUpdateActionPerformed(java.awt.event.ActionEvent evt) throws Exception {
		try {

			if(Constantes.ISUSAEJBLOGICLAYER) {
				this.evaluacionempleadoLogic.getNewConnexionToDeep("");
			}

			Boolean idTienePermisoempleadoevalua=true;

			idTienePermisoempleadoevalua=this.tienePermisosUsuarioEnPaginaWebEvaluacionEmpleado(EmpleadoConstantesFunciones.CLASSNAME);

			if(idTienePermisoempleadoevalua) {
				//TOCA TRAER NUEVAMENTE, YA QUE SE PIERDE REGISTRO ACTUAL
				int intSelectedRow = this.jTableDatosEvaluacionEmpleado.getSelectedRow();

				if(intSelectedRow<0 && this.jTableDatosEvaluacionEmpleado.getRowCount()>0) {
					intSelectedRow =0;
					this.jTableDatosEvaluacionEmpleado.setRowSelectionInterval(intSelectedRow,intSelectedRow);
				}
				//ARCHITECTURE
				/*
				if(Constantes.ISUSAEJBLOGICLAYER) {
					this.evaluacionempleado =(EvaluacionEmpleado) this.evaluacionempleadoLogic.getEvaluacionEmpleados().toArray()[this.jTableDatosEvaluacionEmpleado.convertRowIndexToModel(intSelectedRow)];
				} else if(Constantes.ISUSAEJBREMOTE || Constantes.ISUSAEJBHOME) {
					this.evaluacionempleado =(EvaluacionEmpleado) this.evaluacionempleados.toArray()[this.jTableDatosEvaluacionEmpleado.convertRowIndexToModel(intSelectedRow)];
				}
				*/
				//ARCHITECTURE

				this.setVariablesFormularioToObjetoActualEvaluacionEmpleado(this.getevaluacionempleado(),true);
				this.setVariablesFormularioToObjetoActualForeignKeysEvaluacionEmpleado(this.evaluacionempleado);

				this.empleadoevaluaBeanSwingJInternalFrame=new EmpleadoBeanSwingJInternalFrame(true,true,this.jDesktopPane,this.usuarioActual,this.resumenUsuarioActual,this.moduloActual,this.opcionActual,this.parametroGeneralSg,this.parametroGeneralUsuario,PaginaTipo.AUXILIAR,false,false,false,true);
				this.empleadoevaluaBeanSwingJInternalFrame.setJInternalFrameParent(this);

				this.empleadoevaluaBeanSwingJInternalFrame.getEmpleadoLogic().setConnexion(this.evaluacionempleadoLogic.getConnexion());

				if(this.evaluacionempleado.getid_empleado_evalua()!=null) {
					this.empleadoevaluaBeanSwingJInternalFrame.sTipoBusqueda="PorId";
					this.empleadoevaluaBeanSwingJInternalFrame.setIdActual(this.evaluacionempleado.getid_empleado_evalua());
					this.empleadoevaluaBeanSwingJInternalFrame.procesarBusqueda("PorId");
					this.empleadoevaluaBeanSwingJInternalFrame.setsAccionBusqueda("PorId");
					this.empleadoevaluaBeanSwingJInternalFrame.inicializarActualizarBindingTablaEmpleado();
				}

				JInternalFrameBase jinternalFrame =this.empleadoevaluaBeanSwingJInternalFrame;
				jinternalFrame.setAutoscrolls(true);
				//frame.setSize(screenSize.width-inset*7 , screenSize.height-inset*9);
				jinternalFrame.setVisible(true); 


				TitledBorder titledBorderEvaluacionEmpleado=(TitledBorder)this.jScrollPanelDatosEvaluacionEmpleado.getBorder();
				TitledBorder titledBorderempleadoevalua=(TitledBorder)this.empleadoevaluaBeanSwingJInternalFrame.jScrollPanelDatosEmpleado.getBorder();

				titledBorderempleadoevalua.setTitle(titledBorderEvaluacionEmpleado.getTitle() + " -> Empleado");


				if(!Constantes.CON_VARIAS_VENTANAS) {
					MainJFrame.cerrarJInternalFramesExistentes(this.jDesktopPane,jinternalFrame);
				}

				this.jDesktopPane.add(jinternalFrame);

				jinternalFrame.setSelected(true);
			} else {
				throw new Exception("NO TIENE PERMISO PARA TRABAJAR CON ESTA INFORMACION");
			}

			if(Constantes.ISUSAEJBLOGICLAYER) {
				this.evaluacionempleadoLogic.commitNewConnexionToDeep();
			}


		} catch(Exception e) {

			if(Constantes.ISUSAEJBLOGICLAYER) {
				this.evaluacionempleadoLogic.rollbackNewConnexionToDeep();
			}

			FuncionesSwing.manageException(this, e,logger,EvaluacionEmpleadoConstantesFunciones.CLASSNAME);

		} finally {
			if(Constantes.ISUSAEJBLOGICLAYER) {
				this.evaluacionempleadoLogic.closeNewConnexionToDeep();
			}

		}
	}

	public void jButtonid_empleado_evaluaEvaluacionEmpleadoBusquedaActionPerformed(java.awt.event.ActionEvent evt) throws Exception {
		try {

				if(Constantes.ISUSAEJBLOGICLAYER) {
					this.evaluacionempleadoLogic.getNewConnexionToDeep("");
				}

				//TOCA TRAER NUEVAMENTE, YA QUE SE PIERDE REGISTRO ACTUAL
				int intSelectedRow = this.jTableDatosEvaluacionEmpleado.getSelectedRow();

				if(intSelectedRow>-1) {
					this.setVariablesFormularioToObjetoActualEvaluacionEmpleado(this.getevaluacionempleado(),true);
					this.setVariablesFormularioToObjetoActualForeignKeysEvaluacionEmpleado(this.evaluacionempleado);
					//ARCHITECTURE
					/*
					if(Constantes.ISUSAEJBLOGICLAYER) {
						this.evaluacionempleado =(EvaluacionEmpleado) this.evaluacionempleadoLogic.getEvaluacionEmpleados().toArray()[this.jTableDatosEvaluacionEmpleado.convertRowIndexToModel(intSelectedRow)];
					} else if(Constantes.ISUSAEJBREMOTE || Constantes.ISUSAEJBHOME) {
						this.evaluacionempleado =(EvaluacionEmpleado) this.evaluacionempleados.toArray()[this.jTableDatosEvaluacionEmpleado.convertRowIndexToModel(intSelectedRow)];
					}
					*/
					//ARCHITECTURE

				} else {
					if(this.evaluacionempleado==null) {
						this.evaluacionempleado = new EvaluacionEmpleado();
					}

					this.setVariablesFormularioToObjetoActualEvaluacionEmpleado(this.evaluacionempleado,true);
					this.setVariablesFormularioToObjetoActualForeignKeysEvaluacionEmpleado(this.evaluacionempleado);
				}

				if(this.evaluacionempleado.getid_empleado_evalua()!=null) {

					this.sAccionBusqueda="Query";

					this.sFinalQueryGeneral=" where id_empleado_evalua = "+this.evaluacionempleado.getid_empleado_evalua().toString()+" ";

					if(Constantes.ISDEVELOPING) {
						System.out.println(this.sFinalQueryGeneral);
					}

					this.procesarBusqueda(this.sAccionBusqueda);

					this.inicializarActualizarBindingEvaluacionEmpleado(false);
				}

				if(Constantes.ISUSAEJBLOGICLAYER) {
					this.evaluacionempleadoLogic.commitNewConnexionToDeep();
				}

			} catch(Exception e) {

				if(Constantes.ISUSAEJBLOGICLAYER) {
					this.evaluacionempleadoLogic.rollbackNewConnexionToDeep();
				}

				FuncionesSwing.manageException(this, e,logger,EvaluacionEmpleadoConstantesFunciones.CLASSNAME);

			} finally {
				if(Constantes.ISUSAEJBLOGICLAYER) {
					this.evaluacionempleadoLogic.closeNewConnexionToDeep();
				}

			}
		}

	public void jButtonid_tipo_evaluacion_empleadoEvaluacionEmpleadoUpdateActionPerformed(java.awt.event.ActionEvent evt) throws Exception {
		try {

			if(Constantes.ISUSAEJBLOGICLAYER) {
				this.evaluacionempleadoLogic.getNewConnexionToDeep("");
			}

			Boolean idTienePermisotipoevaluacionempleado=true;

			idTienePermisotipoevaluacionempleado=this.tienePermisosUsuarioEnPaginaWebEvaluacionEmpleado(TipoEvaluacionEmpleadoConstantesFunciones.CLASSNAME);

			if(idTienePermisotipoevaluacionempleado) {
				//TOCA TRAER NUEVAMENTE, YA QUE SE PIERDE REGISTRO ACTUAL
				int intSelectedRow = this.jTableDatosEvaluacionEmpleado.getSelectedRow();

				if(intSelectedRow<0 && this.jTableDatosEvaluacionEmpleado.getRowCount()>0) {
					intSelectedRow =0;
					this.jTableDatosEvaluacionEmpleado.setRowSelectionInterval(intSelectedRow,intSelectedRow);
				}
				//ARCHITECTURE
				/*
				if(Constantes.ISUSAEJBLOGICLAYER) {
					this.evaluacionempleado =(EvaluacionEmpleado) this.evaluacionempleadoLogic.getEvaluacionEmpleados().toArray()[this.jTableDatosEvaluacionEmpleado.convertRowIndexToModel(intSelectedRow)];
				} else if(Constantes.ISUSAEJBREMOTE || Constantes.ISUSAEJBHOME) {
					this.evaluacionempleado =(EvaluacionEmpleado) this.evaluacionempleados.toArray()[this.jTableDatosEvaluacionEmpleado.convertRowIndexToModel(intSelectedRow)];
				}
				*/
				//ARCHITECTURE

				this.setVariablesFormularioToObjetoActualEvaluacionEmpleado(this.getevaluacionempleado(),true);
				this.setVariablesFormularioToObjetoActualForeignKeysEvaluacionEmpleado(this.evaluacionempleado);

				this.tipoevaluacionempleadoBeanSwingJInternalFrame=new TipoEvaluacionEmpleadoBeanSwingJInternalFrame(true,true,this.jDesktopPane,this.usuarioActual,this.resumenUsuarioActual,this.moduloActual,this.opcionActual,this.parametroGeneralSg,this.parametroGeneralUsuario,PaginaTipo.AUXILIAR,false,false,false,true);
				this.tipoevaluacionempleadoBeanSwingJInternalFrame.setJInternalFrameParent(this);

				this.tipoevaluacionempleadoBeanSwingJInternalFrame.getTipoEvaluacionEmpleadoLogic().setConnexion(this.evaluacionempleadoLogic.getConnexion());

				if(this.evaluacionempleado.getid_tipo_evaluacion_empleado()!=null) {
					this.tipoevaluacionempleadoBeanSwingJInternalFrame.sTipoBusqueda="PorId";
					this.tipoevaluacionempleadoBeanSwingJInternalFrame.setIdActual(this.evaluacionempleado.getid_tipo_evaluacion_empleado());
					this.tipoevaluacionempleadoBeanSwingJInternalFrame.procesarBusqueda("PorId");
					this.tipoevaluacionempleadoBeanSwingJInternalFrame.setsAccionBusqueda("PorId");
					this.tipoevaluacionempleadoBeanSwingJInternalFrame.inicializarActualizarBindingTablaTipoEvaluacionEmpleado();
				}

				JInternalFrameBase jinternalFrame =this.tipoevaluacionempleadoBeanSwingJInternalFrame;
				jinternalFrame.setAutoscrolls(true);
				//frame.setSize(screenSize.width-inset*7 , screenSize.height-inset*9);
				jinternalFrame.setVisible(true); 


				TitledBorder titledBorderEvaluacionEmpleado=(TitledBorder)this.jScrollPanelDatosEvaluacionEmpleado.getBorder();
				TitledBorder titledBordertipoevaluacionempleado=(TitledBorder)this.tipoevaluacionempleadoBeanSwingJInternalFrame.jScrollPanelDatosTipoEvaluacionEmpleado.getBorder();

				titledBordertipoevaluacionempleado.setTitle(titledBorderEvaluacionEmpleado.getTitle() + " -> Tipo Evaluacion Empleado");


				if(!Constantes.CON_VARIAS_VENTANAS) {
					MainJFrame.cerrarJInternalFramesExistentes(this.jDesktopPane,jinternalFrame);
				}

				this.jDesktopPane.add(jinternalFrame);

				jinternalFrame.setSelected(true);
			} else {
				throw new Exception("NO TIENE PERMISO PARA TRABAJAR CON ESTA INFORMACION");
			}

			if(Constantes.ISUSAEJBLOGICLAYER) {
				this.evaluacionempleadoLogic.commitNewConnexionToDeep();
			}


		} catch(Exception e) {

			if(Constantes.ISUSAEJBLOGICLAYER) {
				this.evaluacionempleadoLogic.rollbackNewConnexionToDeep();
			}

			FuncionesSwing.manageException(this, e,logger,EvaluacionEmpleadoConstantesFunciones.CLASSNAME);

		} finally {
			if(Constantes.ISUSAEJBLOGICLAYER) {
				this.evaluacionempleadoLogic.closeNewConnexionToDeep();
			}

		}
	}

	public void jButtonid_tipo_evaluacion_empleadoEvaluacionEmpleadoBusquedaActionPerformed(java.awt.event.ActionEvent evt) throws Exception {
		try {

				if(Constantes.ISUSAEJBLOGICLAYER) {
					this.evaluacionempleadoLogic.getNewConnexionToDeep("");
				}

				//TOCA TRAER NUEVAMENTE, YA QUE SE PIERDE REGISTRO ACTUAL
				int intSelectedRow = this.jTableDatosEvaluacionEmpleado.getSelectedRow();

				if(intSelectedRow>-1) {
					this.setVariablesFormularioToObjetoActualEvaluacionEmpleado(this.getevaluacionempleado(),true);
					this.setVariablesFormularioToObjetoActualForeignKeysEvaluacionEmpleado(this.evaluacionempleado);
					//ARCHITECTURE
					/*
					if(Constantes.ISUSAEJBLOGICLAYER) {
						this.evaluacionempleado =(EvaluacionEmpleado) this.evaluacionempleadoLogic.getEvaluacionEmpleados().toArray()[this.jTableDatosEvaluacionEmpleado.convertRowIndexToModel(intSelectedRow)];
					} else if(Constantes.ISUSAEJBREMOTE || Constantes.ISUSAEJBHOME) {
						this.evaluacionempleado =(EvaluacionEmpleado) this.evaluacionempleados.toArray()[this.jTableDatosEvaluacionEmpleado.convertRowIndexToModel(intSelectedRow)];
					}
					*/
					//ARCHITECTURE

				} else {
					if(this.evaluacionempleado==null) {
						this.evaluacionempleado = new EvaluacionEmpleado();
					}

					this.setVariablesFormularioToObjetoActualEvaluacionEmpleado(this.evaluacionempleado,true);
					this.setVariablesFormularioToObjetoActualForeignKeysEvaluacionEmpleado(this.evaluacionempleado);
				}

				if(this.evaluacionempleado.getid_tipo_evaluacion_empleado()!=null) {

					this.sAccionBusqueda="Query";

					this.sFinalQueryGeneral=" where id_tipo_evaluacion_empleado = "+this.evaluacionempleado.getid_tipo_evaluacion_empleado().toString()+" ";

					if(Constantes.ISDEVELOPING) {
						System.out.println(this.sFinalQueryGeneral);
					}

					this.procesarBusqueda(this.sAccionBusqueda);

					this.inicializarActualizarBindingEvaluacionEmpleado(false);
				}

				if(Constantes.ISUSAEJBLOGICLAYER) {
					this.evaluacionempleadoLogic.commitNewConnexionToDeep();
				}

			} catch(Exception e) {

				if(Constantes.ISUSAEJBLOGICLAYER) {
					this.evaluacionempleadoLogic.rollbackNewConnexionToDeep();
				}

				FuncionesSwing.manageException(this, e,logger,EvaluacionEmpleadoConstantesFunciones.CLASSNAME);

			} finally {
				if(Constantes.ISUSAEJBLOGICLAYER) {
					this.evaluacionempleadoLogic.closeNewConnexionToDeep();
				}

			}
		}

	public void jButtonfechaEvaluacionEmpleadoBusquedaActionPerformed(java.awt.event.ActionEvent evt) throws Exception {
		try {

				if(Constantes.ISUSAEJBLOGICLAYER) {
					this.evaluacionempleadoLogic.getNewConnexionToDeep("");
				}

				//TOCA TRAER NUEVAMENTE, YA QUE SE PIERDE REGISTRO ACTUAL
				int intSelectedRow = this.jTableDatosEvaluacionEmpleado.getSelectedRow();

				if(intSelectedRow>-1) {
					this.setVariablesFormularioToObjetoActualEvaluacionEmpleado(this.getevaluacionempleado(),true);
					this.setVariablesFormularioToObjetoActualForeignKeysEvaluacionEmpleado(this.evaluacionempleado);
					//ARCHITECTURE
					/*
					if(Constantes.ISUSAEJBLOGICLAYER) {
						this.evaluacionempleado =(EvaluacionEmpleado) this.evaluacionempleadoLogic.getEvaluacionEmpleados().toArray()[this.jTableDatosEvaluacionEmpleado.convertRowIndexToModel(intSelectedRow)];
					} else if(Constantes.ISUSAEJBREMOTE || Constantes.ISUSAEJBHOME) {
						this.evaluacionempleado =(EvaluacionEmpleado) this.evaluacionempleados.toArray()[this.jTableDatosEvaluacionEmpleado.convertRowIndexToModel(intSelectedRow)];
					}
					*/
					//ARCHITECTURE

				} else {
					if(this.evaluacionempleado==null) {
						this.evaluacionempleado = new EvaluacionEmpleado();
					}

					this.setVariablesFormularioToObjetoActualEvaluacionEmpleado(this.evaluacionempleado,true);
					this.setVariablesFormularioToObjetoActualForeignKeysEvaluacionEmpleado(this.evaluacionempleado);
				}

				if(this.evaluacionempleado.getfecha()!=null) {

					this.sAccionBusqueda="Query";

					this.sFinalQueryGeneral=" where fecha = '"+Funciones2.getStringPostgresDate(this.evaluacionempleado.getfecha())+"' ";

					if(Constantes.ISDEVELOPING) {
						System.out.println(this.sFinalQueryGeneral);
					}

					this.procesarBusqueda(this.sAccionBusqueda);

					this.inicializarActualizarBindingEvaluacionEmpleado(false);
				}

				if(Constantes.ISUSAEJBLOGICLAYER) {
					this.evaluacionempleadoLogic.commitNewConnexionToDeep();
				}

			} catch(Exception e) {

				if(Constantes.ISUSAEJBLOGICLAYER) {
					this.evaluacionempleadoLogic.rollbackNewConnexionToDeep();
				}

				FuncionesSwing.manageException(this, e,logger,EvaluacionEmpleadoConstantesFunciones.CLASSNAME);

			} finally {
				if(Constantes.ISUSAEJBLOGICLAYER) {
					this.evaluacionempleadoLogic.closeNewConnexionToDeep();
				}

			}
		}

	public void jButtonesta_evaluadoEvaluacionEmpleadoBusquedaActionPerformed(java.awt.event.ActionEvent evt) throws Exception {
		try {

				if(Constantes.ISUSAEJBLOGICLAYER) {
					this.evaluacionempleadoLogic.getNewConnexionToDeep("");
				}

				//TOCA TRAER NUEVAMENTE, YA QUE SE PIERDE REGISTRO ACTUAL
				int intSelectedRow = this.jTableDatosEvaluacionEmpleado.getSelectedRow();

				if(intSelectedRow>-1) {
					this.setVariablesFormularioToObjetoActualEvaluacionEmpleado(this.getevaluacionempleado(),true);
					this.setVariablesFormularioToObjetoActualForeignKeysEvaluacionEmpleado(this.evaluacionempleado);
					//ARCHITECTURE
					/*
					if(Constantes.ISUSAEJBLOGICLAYER) {
						this.evaluacionempleado =(EvaluacionEmpleado) this.evaluacionempleadoLogic.getEvaluacionEmpleados().toArray()[this.jTableDatosEvaluacionEmpleado.convertRowIndexToModel(intSelectedRow)];
					} else if(Constantes.ISUSAEJBREMOTE || Constantes.ISUSAEJBHOME) {
						this.evaluacionempleado =(EvaluacionEmpleado) this.evaluacionempleados.toArray()[this.jTableDatosEvaluacionEmpleado.convertRowIndexToModel(intSelectedRow)];
					}
					*/
					//ARCHITECTURE

				} else {
					if(this.evaluacionempleado==null) {
						this.evaluacionempleado = new EvaluacionEmpleado();
					}

					this.setVariablesFormularioToObjetoActualEvaluacionEmpleado(this.evaluacionempleado,true);
					this.setVariablesFormularioToObjetoActualForeignKeysEvaluacionEmpleado(this.evaluacionempleado);
				}

				if(this.evaluacionempleado.getesta_evaluado()!=null) {

					this.sAccionBusqueda="Query";

					this.sFinalQueryGeneral=" where esta_evaluado = "+this.evaluacionempleado.getesta_evaluado().toString()+" ";

					if(Constantes.ISDEVELOPING) {
						System.out.println(this.sFinalQueryGeneral);
					}

					this.procesarBusqueda(this.sAccionBusqueda);

					this.inicializarActualizarBindingEvaluacionEmpleado(false);
				}

				if(Constantes.ISUSAEJBLOGICLAYER) {
					this.evaluacionempleadoLogic.commitNewConnexionToDeep();
				}

			} catch(Exception e) {

				if(Constantes.ISUSAEJBLOGICLAYER) {
					this.evaluacionempleadoLogic.rollbackNewConnexionToDeep();
				}

				FuncionesSwing.manageException(this, e,logger,EvaluacionEmpleadoConstantesFunciones.CLASSNAME);

			} finally {
				if(Constantes.ISUSAEJBLOGICLAYER) {
					this.evaluacionempleadoLogic.closeNewConnexionToDeep();
				}

			}
		}

	public void jButtonid_anioEvaluacionEmpleadoUpdateActionPerformed(java.awt.event.ActionEvent evt) throws Exception {
		try {

			if(Constantes.ISUSAEJBLOGICLAYER) {
				this.evaluacionempleadoLogic.getNewConnexionToDeep("");
			}

			Boolean idTienePermisoanio=true;

			idTienePermisoanio=this.tienePermisosUsuarioEnPaginaWebEvaluacionEmpleado(AnioConstantesFunciones.CLASSNAME);

			if(idTienePermisoanio) {
				//TOCA TRAER NUEVAMENTE, YA QUE SE PIERDE REGISTRO ACTUAL
				int intSelectedRow = this.jTableDatosEvaluacionEmpleado.getSelectedRow();

				if(intSelectedRow<0 && this.jTableDatosEvaluacionEmpleado.getRowCount()>0) {
					intSelectedRow =0;
					this.jTableDatosEvaluacionEmpleado.setRowSelectionInterval(intSelectedRow,intSelectedRow);
				}
				//ARCHITECTURE
				/*
				if(Constantes.ISUSAEJBLOGICLAYER) {
					this.evaluacionempleado =(EvaluacionEmpleado) this.evaluacionempleadoLogic.getEvaluacionEmpleados().toArray()[this.jTableDatosEvaluacionEmpleado.convertRowIndexToModel(intSelectedRow)];
				} else if(Constantes.ISUSAEJBREMOTE || Constantes.ISUSAEJBHOME) {
					this.evaluacionempleado =(EvaluacionEmpleado) this.evaluacionempleados.toArray()[this.jTableDatosEvaluacionEmpleado.convertRowIndexToModel(intSelectedRow)];
				}
				*/
				//ARCHITECTURE

				this.setVariablesFormularioToObjetoActualEvaluacionEmpleado(this.getevaluacionempleado(),true);
				this.setVariablesFormularioToObjetoActualForeignKeysEvaluacionEmpleado(this.evaluacionempleado);

				this.anioBeanSwingJInternalFrame=new AnioBeanSwingJInternalFrame(true,true,this.jDesktopPane,this.usuarioActual,this.resumenUsuarioActual,this.moduloActual,this.opcionActual,this.parametroGeneralSg,this.parametroGeneralUsuario,PaginaTipo.AUXILIAR,false,false,false,true);
				this.anioBeanSwingJInternalFrame.setJInternalFrameParent(this);

				this.anioBeanSwingJInternalFrame.getAnioLogic().setConnexion(this.evaluacionempleadoLogic.getConnexion());

				if(this.evaluacionempleado.getid_anio()!=null) {
					this.anioBeanSwingJInternalFrame.sTipoBusqueda="PorId";
					this.anioBeanSwingJInternalFrame.setIdActual(this.evaluacionempleado.getid_anio());
					this.anioBeanSwingJInternalFrame.procesarBusqueda("PorId");
					this.anioBeanSwingJInternalFrame.setsAccionBusqueda("PorId");
					this.anioBeanSwingJInternalFrame.inicializarActualizarBindingTablaAnio();
				}

				JInternalFrameBase jinternalFrame =this.anioBeanSwingJInternalFrame;
				jinternalFrame.setAutoscrolls(true);
				//frame.setSize(screenSize.width-inset*7 , screenSize.height-inset*9);
				jinternalFrame.setVisible(true); 


				TitledBorder titledBorderEvaluacionEmpleado=(TitledBorder)this.jScrollPanelDatosEvaluacionEmpleado.getBorder();
				TitledBorder titledBorderanio=(TitledBorder)this.anioBeanSwingJInternalFrame.jScrollPanelDatosAnio.getBorder();

				titledBorderanio.setTitle(titledBorderEvaluacionEmpleado.getTitle() + " -> Anio");


				if(!Constantes.CON_VARIAS_VENTANAS) {
					MainJFrame.cerrarJInternalFramesExistentes(this.jDesktopPane,jinternalFrame);
				}

				this.jDesktopPane.add(jinternalFrame);

				jinternalFrame.setSelected(true);
			} else {
				throw new Exception("NO TIENE PERMISO PARA TRABAJAR CON ESTA INFORMACION");
			}

			if(Constantes.ISUSAEJBLOGICLAYER) {
				this.evaluacionempleadoLogic.commitNewConnexionToDeep();
			}


		} catch(Exception e) {

			if(Constantes.ISUSAEJBLOGICLAYER) {
				this.evaluacionempleadoLogic.rollbackNewConnexionToDeep();
			}

			FuncionesSwing.manageException(this, e,logger,EvaluacionEmpleadoConstantesFunciones.CLASSNAME);

		} finally {
			if(Constantes.ISUSAEJBLOGICLAYER) {
				this.evaluacionempleadoLogic.closeNewConnexionToDeep();
			}

		}
	}

	public void jButtonid_anioEvaluacionEmpleadoBusquedaActionPerformed(java.awt.event.ActionEvent evt) throws Exception {
		try {

				if(Constantes.ISUSAEJBLOGICLAYER) {
					this.evaluacionempleadoLogic.getNewConnexionToDeep("");
				}

				//TOCA TRAER NUEVAMENTE, YA QUE SE PIERDE REGISTRO ACTUAL
				int intSelectedRow = this.jTableDatosEvaluacionEmpleado.getSelectedRow();

				if(intSelectedRow>-1) {
					this.setVariablesFormularioToObjetoActualEvaluacionEmpleado(this.getevaluacionempleado(),true);
					this.setVariablesFormularioToObjetoActualForeignKeysEvaluacionEmpleado(this.evaluacionempleado);
					//ARCHITECTURE
					/*
					if(Constantes.ISUSAEJBLOGICLAYER) {
						this.evaluacionempleado =(EvaluacionEmpleado) this.evaluacionempleadoLogic.getEvaluacionEmpleados().toArray()[this.jTableDatosEvaluacionEmpleado.convertRowIndexToModel(intSelectedRow)];
					} else if(Constantes.ISUSAEJBREMOTE || Constantes.ISUSAEJBHOME) {
						this.evaluacionempleado =(EvaluacionEmpleado) this.evaluacionempleados.toArray()[this.jTableDatosEvaluacionEmpleado.convertRowIndexToModel(intSelectedRow)];
					}
					*/
					//ARCHITECTURE

				} else {
					if(this.evaluacionempleado==null) {
						this.evaluacionempleado = new EvaluacionEmpleado();
					}

					this.setVariablesFormularioToObjetoActualEvaluacionEmpleado(this.evaluacionempleado,true);
					this.setVariablesFormularioToObjetoActualForeignKeysEvaluacionEmpleado(this.evaluacionempleado);
				}

				if(this.evaluacionempleado.getid_anio()!=null) {

					this.sAccionBusqueda="Query";

					this.sFinalQueryGeneral=" where id_anio = "+this.evaluacionempleado.getid_anio().toString()+" ";

					if(Constantes.ISDEVELOPING) {
						System.out.println(this.sFinalQueryGeneral);
					}

					this.procesarBusqueda(this.sAccionBusqueda);

					this.inicializarActualizarBindingEvaluacionEmpleado(false);
				}

				if(Constantes.ISUSAEJBLOGICLAYER) {
					this.evaluacionempleadoLogic.commitNewConnexionToDeep();
				}

			} catch(Exception e) {

				if(Constantes.ISUSAEJBLOGICLAYER) {
					this.evaluacionempleadoLogic.rollbackNewConnexionToDeep();
				}

				FuncionesSwing.manageException(this, e,logger,EvaluacionEmpleadoConstantesFunciones.CLASSNAME);

			} finally {
				if(Constantes.ISUSAEJBLOGICLAYER) {
					this.evaluacionempleadoLogic.closeNewConnexionToDeep();
				}

			}
		}

	public void jButtonid_semestreEvaluacionEmpleadoUpdateActionPerformed(java.awt.event.ActionEvent evt) throws Exception {
		try {

			if(Constantes.ISUSAEJBLOGICLAYER) {
				this.evaluacionempleadoLogic.getNewConnexionToDeep("");
			}

			Boolean idTienePermisosemestre=true;

			idTienePermisosemestre=this.tienePermisosUsuarioEnPaginaWebEvaluacionEmpleado(SemestreConstantesFunciones.CLASSNAME);

			if(idTienePermisosemestre) {
				//TOCA TRAER NUEVAMENTE, YA QUE SE PIERDE REGISTRO ACTUAL
				int intSelectedRow = this.jTableDatosEvaluacionEmpleado.getSelectedRow();

				if(intSelectedRow<0 && this.jTableDatosEvaluacionEmpleado.getRowCount()>0) {
					intSelectedRow =0;
					this.jTableDatosEvaluacionEmpleado.setRowSelectionInterval(intSelectedRow,intSelectedRow);
				}
				//ARCHITECTURE
				/*
				if(Constantes.ISUSAEJBLOGICLAYER) {
					this.evaluacionempleado =(EvaluacionEmpleado) this.evaluacionempleadoLogic.getEvaluacionEmpleados().toArray()[this.jTableDatosEvaluacionEmpleado.convertRowIndexToModel(intSelectedRow)];
				} else if(Constantes.ISUSAEJBREMOTE || Constantes.ISUSAEJBHOME) {
					this.evaluacionempleado =(EvaluacionEmpleado) this.evaluacionempleados.toArray()[this.jTableDatosEvaluacionEmpleado.convertRowIndexToModel(intSelectedRow)];
				}
				*/
				//ARCHITECTURE

				this.setVariablesFormularioToObjetoActualEvaluacionEmpleado(this.getevaluacionempleado(),true);
				this.setVariablesFormularioToObjetoActualForeignKeysEvaluacionEmpleado(this.evaluacionempleado);

				this.semestreBeanSwingJInternalFrame=new SemestreBeanSwingJInternalFrame(true,true,this.jDesktopPane,this.usuarioActual,this.resumenUsuarioActual,this.moduloActual,this.opcionActual,this.parametroGeneralSg,this.parametroGeneralUsuario,PaginaTipo.AUXILIAR,false,false,false,true);
				this.semestreBeanSwingJInternalFrame.setJInternalFrameParent(this);

				this.semestreBeanSwingJInternalFrame.getSemestreLogic().setConnexion(this.evaluacionempleadoLogic.getConnexion());

				if(this.evaluacionempleado.getid_semestre()!=null) {
					this.semestreBeanSwingJInternalFrame.sTipoBusqueda="PorId";
					this.semestreBeanSwingJInternalFrame.setIdActual(this.evaluacionempleado.getid_semestre());
					this.semestreBeanSwingJInternalFrame.procesarBusqueda("PorId");
					this.semestreBeanSwingJInternalFrame.setsAccionBusqueda("PorId");
					this.semestreBeanSwingJInternalFrame.inicializarActualizarBindingTablaSemestre();
				}

				JInternalFrameBase jinternalFrame =this.semestreBeanSwingJInternalFrame;
				jinternalFrame.setAutoscrolls(true);
				//frame.setSize(screenSize.width-inset*7 , screenSize.height-inset*9);
				jinternalFrame.setVisible(true); 


				TitledBorder titledBorderEvaluacionEmpleado=(TitledBorder)this.jScrollPanelDatosEvaluacionEmpleado.getBorder();
				TitledBorder titledBordersemestre=(TitledBorder)this.semestreBeanSwingJInternalFrame.jScrollPanelDatosSemestre.getBorder();

				titledBordersemestre.setTitle(titledBorderEvaluacionEmpleado.getTitle() + " -> Semestre");


				if(!Constantes.CON_VARIAS_VENTANAS) {
					MainJFrame.cerrarJInternalFramesExistentes(this.jDesktopPane,jinternalFrame);
				}

				this.jDesktopPane.add(jinternalFrame);

				jinternalFrame.setSelected(true);
			} else {
				throw new Exception("NO TIENE PERMISO PARA TRABAJAR CON ESTA INFORMACION");
			}

			if(Constantes.ISUSAEJBLOGICLAYER) {
				this.evaluacionempleadoLogic.commitNewConnexionToDeep();
			}


		} catch(Exception e) {

			if(Constantes.ISUSAEJBLOGICLAYER) {
				this.evaluacionempleadoLogic.rollbackNewConnexionToDeep();
			}

			FuncionesSwing.manageException(this, e,logger,EvaluacionEmpleadoConstantesFunciones.CLASSNAME);

		} finally {
			if(Constantes.ISUSAEJBLOGICLAYER) {
				this.evaluacionempleadoLogic.closeNewConnexionToDeep();
			}

		}
	}

	public void jButtonid_semestreEvaluacionEmpleadoBusquedaActionPerformed(java.awt.event.ActionEvent evt) throws Exception {
		try {

				if(Constantes.ISUSAEJBLOGICLAYER) {
					this.evaluacionempleadoLogic.getNewConnexionToDeep("");
				}

				//TOCA TRAER NUEVAMENTE, YA QUE SE PIERDE REGISTRO ACTUAL
				int intSelectedRow = this.jTableDatosEvaluacionEmpleado.getSelectedRow();

				if(intSelectedRow>-1) {
					this.setVariablesFormularioToObjetoActualEvaluacionEmpleado(this.getevaluacionempleado(),true);
					this.setVariablesFormularioToObjetoActualForeignKeysEvaluacionEmpleado(this.evaluacionempleado);
					//ARCHITECTURE
					/*
					if(Constantes.ISUSAEJBLOGICLAYER) {
						this.evaluacionempleado =(EvaluacionEmpleado) this.evaluacionempleadoLogic.getEvaluacionEmpleados().toArray()[this.jTableDatosEvaluacionEmpleado.convertRowIndexToModel(intSelectedRow)];
					} else if(Constantes.ISUSAEJBREMOTE || Constantes.ISUSAEJBHOME) {
						this.evaluacionempleado =(EvaluacionEmpleado) this.evaluacionempleados.toArray()[this.jTableDatosEvaluacionEmpleado.convertRowIndexToModel(intSelectedRow)];
					}
					*/
					//ARCHITECTURE

				} else {
					if(this.evaluacionempleado==null) {
						this.evaluacionempleado = new EvaluacionEmpleado();
					}

					this.setVariablesFormularioToObjetoActualEvaluacionEmpleado(this.evaluacionempleado,true);
					this.setVariablesFormularioToObjetoActualForeignKeysEvaluacionEmpleado(this.evaluacionempleado);
				}

				if(this.evaluacionempleado.getid_semestre()!=null) {

					this.sAccionBusqueda="Query";

					this.sFinalQueryGeneral=" where id_semestre = "+this.evaluacionempleado.getid_semestre().toString()+" ";

					if(Constantes.ISDEVELOPING) {
						System.out.println(this.sFinalQueryGeneral);
					}

					this.procesarBusqueda(this.sAccionBusqueda);

					this.inicializarActualizarBindingEvaluacionEmpleado(false);
				}

				if(Constantes.ISUSAEJBLOGICLAYER) {
					this.evaluacionempleadoLogic.commitNewConnexionToDeep();
				}

			} catch(Exception e) {

				if(Constantes.ISUSAEJBLOGICLAYER) {
					this.evaluacionempleadoLogic.rollbackNewConnexionToDeep();
				}

				FuncionesSwing.manageException(this, e,logger,EvaluacionEmpleadoConstantesFunciones.CLASSNAME);

			} finally {
				if(Constantes.ISUSAEJBLOGICLAYER) {
					this.evaluacionempleadoLogic.closeNewConnexionToDeep();
				}

			}
		}

	public void jButtonid_trimestreEvaluacionEmpleadoUpdateActionPerformed(java.awt.event.ActionEvent evt) throws Exception {
		try {

			if(Constantes.ISUSAEJBLOGICLAYER) {
				this.evaluacionempleadoLogic.getNewConnexionToDeep("");
			}

			Boolean idTienePermisotrimestre=true;

			idTienePermisotrimestre=this.tienePermisosUsuarioEnPaginaWebEvaluacionEmpleado(TrimestreConstantesFunciones.CLASSNAME);

			if(idTienePermisotrimestre) {
				//TOCA TRAER NUEVAMENTE, YA QUE SE PIERDE REGISTRO ACTUAL
				int intSelectedRow = this.jTableDatosEvaluacionEmpleado.getSelectedRow();

				if(intSelectedRow<0 && this.jTableDatosEvaluacionEmpleado.getRowCount()>0) {
					intSelectedRow =0;
					this.jTableDatosEvaluacionEmpleado.setRowSelectionInterval(intSelectedRow,intSelectedRow);
				}
				//ARCHITECTURE
				/*
				if(Constantes.ISUSAEJBLOGICLAYER) {
					this.evaluacionempleado =(EvaluacionEmpleado) this.evaluacionempleadoLogic.getEvaluacionEmpleados().toArray()[this.jTableDatosEvaluacionEmpleado.convertRowIndexToModel(intSelectedRow)];
				} else if(Constantes.ISUSAEJBREMOTE || Constantes.ISUSAEJBHOME) {
					this.evaluacionempleado =(EvaluacionEmpleado) this.evaluacionempleados.toArray()[this.jTableDatosEvaluacionEmpleado.convertRowIndexToModel(intSelectedRow)];
				}
				*/
				//ARCHITECTURE

				this.setVariablesFormularioToObjetoActualEvaluacionEmpleado(this.getevaluacionempleado(),true);
				this.setVariablesFormularioToObjetoActualForeignKeysEvaluacionEmpleado(this.evaluacionempleado);

				this.trimestreBeanSwingJInternalFrame=new TrimestreBeanSwingJInternalFrame(true,true,this.jDesktopPane,this.usuarioActual,this.resumenUsuarioActual,this.moduloActual,this.opcionActual,this.parametroGeneralSg,this.parametroGeneralUsuario,PaginaTipo.AUXILIAR,false,false,false,true);
				this.trimestreBeanSwingJInternalFrame.setJInternalFrameParent(this);

				this.trimestreBeanSwingJInternalFrame.getTrimestreLogic().setConnexion(this.evaluacionempleadoLogic.getConnexion());

				if(this.evaluacionempleado.getid_trimestre()!=null) {
					this.trimestreBeanSwingJInternalFrame.sTipoBusqueda="PorId";
					this.trimestreBeanSwingJInternalFrame.setIdActual(this.evaluacionempleado.getid_trimestre());
					this.trimestreBeanSwingJInternalFrame.procesarBusqueda("PorId");
					this.trimestreBeanSwingJInternalFrame.setsAccionBusqueda("PorId");
					this.trimestreBeanSwingJInternalFrame.inicializarActualizarBindingTablaTrimestre();
				}

				JInternalFrameBase jinternalFrame =this.trimestreBeanSwingJInternalFrame;
				jinternalFrame.setAutoscrolls(true);
				//frame.setSize(screenSize.width-inset*7 , screenSize.height-inset*9);
				jinternalFrame.setVisible(true); 


				TitledBorder titledBorderEvaluacionEmpleado=(TitledBorder)this.jScrollPanelDatosEvaluacionEmpleado.getBorder();
				TitledBorder titledBordertrimestre=(TitledBorder)this.trimestreBeanSwingJInternalFrame.jScrollPanelDatosTrimestre.getBorder();

				titledBordertrimestre.setTitle(titledBorderEvaluacionEmpleado.getTitle() + " -> Trimestre");


				if(!Constantes.CON_VARIAS_VENTANAS) {
					MainJFrame.cerrarJInternalFramesExistentes(this.jDesktopPane,jinternalFrame);
				}

				this.jDesktopPane.add(jinternalFrame);

				jinternalFrame.setSelected(true);
			} else {
				throw new Exception("NO TIENE PERMISO PARA TRABAJAR CON ESTA INFORMACION");
			}

			if(Constantes.ISUSAEJBLOGICLAYER) {
				this.evaluacionempleadoLogic.commitNewConnexionToDeep();
			}


		} catch(Exception e) {

			if(Constantes.ISUSAEJBLOGICLAYER) {
				this.evaluacionempleadoLogic.rollbackNewConnexionToDeep();
			}

			FuncionesSwing.manageException(this, e,logger,EvaluacionEmpleadoConstantesFunciones.CLASSNAME);

		} finally {
			if(Constantes.ISUSAEJBLOGICLAYER) {
				this.evaluacionempleadoLogic.closeNewConnexionToDeep();
			}

		}
	}

	public void jButtonid_trimestreEvaluacionEmpleadoBusquedaActionPerformed(java.awt.event.ActionEvent evt) throws Exception {
		try {

				if(Constantes.ISUSAEJBLOGICLAYER) {
					this.evaluacionempleadoLogic.getNewConnexionToDeep("");
				}

				//TOCA TRAER NUEVAMENTE, YA QUE SE PIERDE REGISTRO ACTUAL
				int intSelectedRow = this.jTableDatosEvaluacionEmpleado.getSelectedRow();

				if(intSelectedRow>-1) {
					this.setVariablesFormularioToObjetoActualEvaluacionEmpleado(this.getevaluacionempleado(),true);
					this.setVariablesFormularioToObjetoActualForeignKeysEvaluacionEmpleado(this.evaluacionempleado);
					//ARCHITECTURE
					/*
					if(Constantes.ISUSAEJBLOGICLAYER) {
						this.evaluacionempleado =(EvaluacionEmpleado) this.evaluacionempleadoLogic.getEvaluacionEmpleados().toArray()[this.jTableDatosEvaluacionEmpleado.convertRowIndexToModel(intSelectedRow)];
					} else if(Constantes.ISUSAEJBREMOTE || Constantes.ISUSAEJBHOME) {
						this.evaluacionempleado =(EvaluacionEmpleado) this.evaluacionempleados.toArray()[this.jTableDatosEvaluacionEmpleado.convertRowIndexToModel(intSelectedRow)];
					}
					*/
					//ARCHITECTURE

				} else {
					if(this.evaluacionempleado==null) {
						this.evaluacionempleado = new EvaluacionEmpleado();
					}

					this.setVariablesFormularioToObjetoActualEvaluacionEmpleado(this.evaluacionempleado,true);
					this.setVariablesFormularioToObjetoActualForeignKeysEvaluacionEmpleado(this.evaluacionempleado);
				}

				if(this.evaluacionempleado.getid_trimestre()!=null) {

					this.sAccionBusqueda="Query";

					this.sFinalQueryGeneral=" where id_trimestre = "+this.evaluacionempleado.getid_trimestre().toString()+" ";

					if(Constantes.ISDEVELOPING) {
						System.out.println(this.sFinalQueryGeneral);
					}

					this.procesarBusqueda(this.sAccionBusqueda);

					this.inicializarActualizarBindingEvaluacionEmpleado(false);
				}

				if(Constantes.ISUSAEJBLOGICLAYER) {
					this.evaluacionempleadoLogic.commitNewConnexionToDeep();
				}

			} catch(Exception e) {

				if(Constantes.ISUSAEJBLOGICLAYER) {
					this.evaluacionempleadoLogic.rollbackNewConnexionToDeep();
				}

				FuncionesSwing.manageException(this, e,logger,EvaluacionEmpleadoConstantesFunciones.CLASSNAME);

			} finally {
				if(Constantes.ISUSAEJBLOGICLAYER) {
					this.evaluacionempleadoLogic.closeNewConnexionToDeep();
				}

			}
		}

	public void jButtonid_bimestreEvaluacionEmpleadoUpdateActionPerformed(java.awt.event.ActionEvent evt) throws Exception {
		try {

			if(Constantes.ISUSAEJBLOGICLAYER) {
				this.evaluacionempleadoLogic.getNewConnexionToDeep("");
			}

			Boolean idTienePermisobimestre=true;

			idTienePermisobimestre=this.tienePermisosUsuarioEnPaginaWebEvaluacionEmpleado(BimestreConstantesFunciones.CLASSNAME);

			if(idTienePermisobimestre) {
				//TOCA TRAER NUEVAMENTE, YA QUE SE PIERDE REGISTRO ACTUAL
				int intSelectedRow = this.jTableDatosEvaluacionEmpleado.getSelectedRow();

				if(intSelectedRow<0 && this.jTableDatosEvaluacionEmpleado.getRowCount()>0) {
					intSelectedRow =0;
					this.jTableDatosEvaluacionEmpleado.setRowSelectionInterval(intSelectedRow,intSelectedRow);
				}
				//ARCHITECTURE
				/*
				if(Constantes.ISUSAEJBLOGICLAYER) {
					this.evaluacionempleado =(EvaluacionEmpleado) this.evaluacionempleadoLogic.getEvaluacionEmpleados().toArray()[this.jTableDatosEvaluacionEmpleado.convertRowIndexToModel(intSelectedRow)];
				} else if(Constantes.ISUSAEJBREMOTE || Constantes.ISUSAEJBHOME) {
					this.evaluacionempleado =(EvaluacionEmpleado) this.evaluacionempleados.toArray()[this.jTableDatosEvaluacionEmpleado.convertRowIndexToModel(intSelectedRow)];
				}
				*/
				//ARCHITECTURE

				this.setVariablesFormularioToObjetoActualEvaluacionEmpleado(this.getevaluacionempleado(),true);
				this.setVariablesFormularioToObjetoActualForeignKeysEvaluacionEmpleado(this.evaluacionempleado);

				this.bimestreBeanSwingJInternalFrame=new BimestreBeanSwingJInternalFrame(true,true,this.jDesktopPane,this.usuarioActual,this.resumenUsuarioActual,this.moduloActual,this.opcionActual,this.parametroGeneralSg,this.parametroGeneralUsuario,PaginaTipo.AUXILIAR,false,false,false,true);
				this.bimestreBeanSwingJInternalFrame.setJInternalFrameParent(this);

				this.bimestreBeanSwingJInternalFrame.getBimestreLogic().setConnexion(this.evaluacionempleadoLogic.getConnexion());

				if(this.evaluacionempleado.getid_bimestre()!=null) {
					this.bimestreBeanSwingJInternalFrame.sTipoBusqueda="PorId";
					this.bimestreBeanSwingJInternalFrame.setIdActual(this.evaluacionempleado.getid_bimestre());
					this.bimestreBeanSwingJInternalFrame.procesarBusqueda("PorId");
					this.bimestreBeanSwingJInternalFrame.setsAccionBusqueda("PorId");
					this.bimestreBeanSwingJInternalFrame.inicializarActualizarBindingTablaBimestre();
				}

				JInternalFrameBase jinternalFrame =this.bimestreBeanSwingJInternalFrame;
				jinternalFrame.setAutoscrolls(true);
				//frame.setSize(screenSize.width-inset*7 , screenSize.height-inset*9);
				jinternalFrame.setVisible(true); 


				TitledBorder titledBorderEvaluacionEmpleado=(TitledBorder)this.jScrollPanelDatosEvaluacionEmpleado.getBorder();
				TitledBorder titledBorderbimestre=(TitledBorder)this.bimestreBeanSwingJInternalFrame.jScrollPanelDatosBimestre.getBorder();

				titledBorderbimestre.setTitle(titledBorderEvaluacionEmpleado.getTitle() + " -> Bimestre");


				if(!Constantes.CON_VARIAS_VENTANAS) {
					MainJFrame.cerrarJInternalFramesExistentes(this.jDesktopPane,jinternalFrame);
				}

				this.jDesktopPane.add(jinternalFrame);

				jinternalFrame.setSelected(true);
			} else {
				throw new Exception("NO TIENE PERMISO PARA TRABAJAR CON ESTA INFORMACION");
			}

			if(Constantes.ISUSAEJBLOGICLAYER) {
				this.evaluacionempleadoLogic.commitNewConnexionToDeep();
			}


		} catch(Exception e) {

			if(Constantes.ISUSAEJBLOGICLAYER) {
				this.evaluacionempleadoLogic.rollbackNewConnexionToDeep();
			}

			FuncionesSwing.manageException(this, e,logger,EvaluacionEmpleadoConstantesFunciones.CLASSNAME);

		} finally {
			if(Constantes.ISUSAEJBLOGICLAYER) {
				this.evaluacionempleadoLogic.closeNewConnexionToDeep();
			}

		}
	}

	public void jButtonid_bimestreEvaluacionEmpleadoBusquedaActionPerformed(java.awt.event.ActionEvent evt) throws Exception {
		try {

				if(Constantes.ISUSAEJBLOGICLAYER) {
					this.evaluacionempleadoLogic.getNewConnexionToDeep("");
				}

				//TOCA TRAER NUEVAMENTE, YA QUE SE PIERDE REGISTRO ACTUAL
				int intSelectedRow = this.jTableDatosEvaluacionEmpleado.getSelectedRow();

				if(intSelectedRow>-1) {
					this.setVariablesFormularioToObjetoActualEvaluacionEmpleado(this.getevaluacionempleado(),true);
					this.setVariablesFormularioToObjetoActualForeignKeysEvaluacionEmpleado(this.evaluacionempleado);
					//ARCHITECTURE
					/*
					if(Constantes.ISUSAEJBLOGICLAYER) {
						this.evaluacionempleado =(EvaluacionEmpleado) this.evaluacionempleadoLogic.getEvaluacionEmpleados().toArray()[this.jTableDatosEvaluacionEmpleado.convertRowIndexToModel(intSelectedRow)];
					} else if(Constantes.ISUSAEJBREMOTE || Constantes.ISUSAEJBHOME) {
						this.evaluacionempleado =(EvaluacionEmpleado) this.evaluacionempleados.toArray()[this.jTableDatosEvaluacionEmpleado.convertRowIndexToModel(intSelectedRow)];
					}
					*/
					//ARCHITECTURE

				} else {
					if(this.evaluacionempleado==null) {
						this.evaluacionempleado = new EvaluacionEmpleado();
					}

					this.setVariablesFormularioToObjetoActualEvaluacionEmpleado(this.evaluacionempleado,true);
					this.setVariablesFormularioToObjetoActualForeignKeysEvaluacionEmpleado(this.evaluacionempleado);
				}

				if(this.evaluacionempleado.getid_bimestre()!=null) {

					this.sAccionBusqueda="Query";

					this.sFinalQueryGeneral=" where id_bimestre = "+this.evaluacionempleado.getid_bimestre().toString()+" ";

					if(Constantes.ISDEVELOPING) {
						System.out.println(this.sFinalQueryGeneral);
					}

					this.procesarBusqueda(this.sAccionBusqueda);

					this.inicializarActualizarBindingEvaluacionEmpleado(false);
				}

				if(Constantes.ISUSAEJBLOGICLAYER) {
					this.evaluacionempleadoLogic.commitNewConnexionToDeep();
				}

			} catch(Exception e) {

				if(Constantes.ISUSAEJBLOGICLAYER) {
					this.evaluacionempleadoLogic.rollbackNewConnexionToDeep();
				}

				FuncionesSwing.manageException(this, e,logger,EvaluacionEmpleadoConstantesFunciones.CLASSNAME);

			} finally {
				if(Constantes.ISUSAEJBLOGICLAYER) {
					this.evaluacionempleadoLogic.closeNewConnexionToDeep();
				}

			}
		}

	public void jButtonid_mesEvaluacionEmpleadoUpdateActionPerformed(java.awt.event.ActionEvent evt) throws Exception {
		try {

			if(Constantes.ISUSAEJBLOGICLAYER) {
				this.evaluacionempleadoLogic.getNewConnexionToDeep("");
			}

			Boolean idTienePermisomes=true;

			idTienePermisomes=this.tienePermisosUsuarioEnPaginaWebEvaluacionEmpleado(MesConstantesFunciones.CLASSNAME);

			if(idTienePermisomes) {
				//TOCA TRAER NUEVAMENTE, YA QUE SE PIERDE REGISTRO ACTUAL
				int intSelectedRow = this.jTableDatosEvaluacionEmpleado.getSelectedRow();

				if(intSelectedRow<0 && this.jTableDatosEvaluacionEmpleado.getRowCount()>0) {
					intSelectedRow =0;
					this.jTableDatosEvaluacionEmpleado.setRowSelectionInterval(intSelectedRow,intSelectedRow);
				}
				//ARCHITECTURE
				/*
				if(Constantes.ISUSAEJBLOGICLAYER) {
					this.evaluacionempleado =(EvaluacionEmpleado) this.evaluacionempleadoLogic.getEvaluacionEmpleados().toArray()[this.jTableDatosEvaluacionEmpleado.convertRowIndexToModel(intSelectedRow)];
				} else if(Constantes.ISUSAEJBREMOTE || Constantes.ISUSAEJBHOME) {
					this.evaluacionempleado =(EvaluacionEmpleado) this.evaluacionempleados.toArray()[this.jTableDatosEvaluacionEmpleado.convertRowIndexToModel(intSelectedRow)];
				}
				*/
				//ARCHITECTURE

				this.setVariablesFormularioToObjetoActualEvaluacionEmpleado(this.getevaluacionempleado(),true);
				this.setVariablesFormularioToObjetoActualForeignKeysEvaluacionEmpleado(this.evaluacionempleado);

				this.mesBeanSwingJInternalFrame=new MesBeanSwingJInternalFrame(true,true,this.jDesktopPane,this.usuarioActual,this.resumenUsuarioActual,this.moduloActual,this.opcionActual,this.parametroGeneralSg,this.parametroGeneralUsuario,PaginaTipo.AUXILIAR,false,false,false,true);
				this.mesBeanSwingJInternalFrame.setJInternalFrameParent(this);

				this.mesBeanSwingJInternalFrame.getMesLogic().setConnexion(this.evaluacionempleadoLogic.getConnexion());

				if(this.evaluacionempleado.getid_mes()!=null) {
					this.mesBeanSwingJInternalFrame.sTipoBusqueda="PorId";
					this.mesBeanSwingJInternalFrame.setIdActual(this.evaluacionempleado.getid_mes());
					this.mesBeanSwingJInternalFrame.procesarBusqueda("PorId");
					this.mesBeanSwingJInternalFrame.setsAccionBusqueda("PorId");
					this.mesBeanSwingJInternalFrame.inicializarActualizarBindingTablaMes();
				}

				JInternalFrameBase jinternalFrame =this.mesBeanSwingJInternalFrame;
				jinternalFrame.setAutoscrolls(true);
				//frame.setSize(screenSize.width-inset*7 , screenSize.height-inset*9);
				jinternalFrame.setVisible(true); 


				TitledBorder titledBorderEvaluacionEmpleado=(TitledBorder)this.jScrollPanelDatosEvaluacionEmpleado.getBorder();
				TitledBorder titledBordermes=(TitledBorder)this.mesBeanSwingJInternalFrame.jScrollPanelDatosMes.getBorder();

				titledBordermes.setTitle(titledBorderEvaluacionEmpleado.getTitle() + " -> Mes");


				if(!Constantes.CON_VARIAS_VENTANAS) {
					MainJFrame.cerrarJInternalFramesExistentes(this.jDesktopPane,jinternalFrame);
				}

				this.jDesktopPane.add(jinternalFrame);

				jinternalFrame.setSelected(true);
			} else {
				throw new Exception("NO TIENE PERMISO PARA TRABAJAR CON ESTA INFORMACION");
			}

			if(Constantes.ISUSAEJBLOGICLAYER) {
				this.evaluacionempleadoLogic.commitNewConnexionToDeep();
			}


		} catch(Exception e) {

			if(Constantes.ISUSAEJBLOGICLAYER) {
				this.evaluacionempleadoLogic.rollbackNewConnexionToDeep();
			}

			FuncionesSwing.manageException(this, e,logger,EvaluacionEmpleadoConstantesFunciones.CLASSNAME);

		} finally {
			if(Constantes.ISUSAEJBLOGICLAYER) {
				this.evaluacionempleadoLogic.closeNewConnexionToDeep();
			}

		}
	}

	public void jButtonid_mesEvaluacionEmpleadoBusquedaActionPerformed(java.awt.event.ActionEvent evt) throws Exception {
		try {

				if(Constantes.ISUSAEJBLOGICLAYER) {
					this.evaluacionempleadoLogic.getNewConnexionToDeep("");
				}

				//TOCA TRAER NUEVAMENTE, YA QUE SE PIERDE REGISTRO ACTUAL
				int intSelectedRow = this.jTableDatosEvaluacionEmpleado.getSelectedRow();

				if(intSelectedRow>-1) {
					this.setVariablesFormularioToObjetoActualEvaluacionEmpleado(this.getevaluacionempleado(),true);
					this.setVariablesFormularioToObjetoActualForeignKeysEvaluacionEmpleado(this.evaluacionempleado);
					//ARCHITECTURE
					/*
					if(Constantes.ISUSAEJBLOGICLAYER) {
						this.evaluacionempleado =(EvaluacionEmpleado) this.evaluacionempleadoLogic.getEvaluacionEmpleados().toArray()[this.jTableDatosEvaluacionEmpleado.convertRowIndexToModel(intSelectedRow)];
					} else if(Constantes.ISUSAEJBREMOTE || Constantes.ISUSAEJBHOME) {
						this.evaluacionempleado =(EvaluacionEmpleado) this.evaluacionempleados.toArray()[this.jTableDatosEvaluacionEmpleado.convertRowIndexToModel(intSelectedRow)];
					}
					*/
					//ARCHITECTURE

				} else {
					if(this.evaluacionempleado==null) {
						this.evaluacionempleado = new EvaluacionEmpleado();
					}

					this.setVariablesFormularioToObjetoActualEvaluacionEmpleado(this.evaluacionempleado,true);
					this.setVariablesFormularioToObjetoActualForeignKeysEvaluacionEmpleado(this.evaluacionempleado);
				}

				if(this.evaluacionempleado.getid_mes()!=null) {

					this.sAccionBusqueda="Query";

					this.sFinalQueryGeneral=" where id_mes = "+this.evaluacionempleado.getid_mes().toString()+" ";

					if(Constantes.ISDEVELOPING) {
						System.out.println(this.sFinalQueryGeneral);
					}

					this.procesarBusqueda(this.sAccionBusqueda);

					this.inicializarActualizarBindingEvaluacionEmpleado(false);
				}

				if(Constantes.ISUSAEJBLOGICLAYER) {
					this.evaluacionempleadoLogic.commitNewConnexionToDeep();
				}

			} catch(Exception e) {

				if(Constantes.ISUSAEJBLOGICLAYER) {
					this.evaluacionempleadoLogic.rollbackNewConnexionToDeep();
				}

				FuncionesSwing.manageException(this, e,logger,EvaluacionEmpleadoConstantesFunciones.CLASSNAME);

			} finally {
				if(Constantes.ISUSAEJBLOGICLAYER) {
					this.evaluacionempleadoLogic.closeNewConnexionToDeep();
				}

			}
		}

	public void jButtonobservacion1EvaluacionEmpleadoBusquedaActionPerformed(java.awt.event.ActionEvent evt) throws Exception {
		try {

				if(Constantes.ISUSAEJBLOGICLAYER) {
					this.evaluacionempleadoLogic.getNewConnexionToDeep("");
				}

				//TOCA TRAER NUEVAMENTE, YA QUE SE PIERDE REGISTRO ACTUAL
				int intSelectedRow = this.jTableDatosEvaluacionEmpleado.getSelectedRow();

				if(intSelectedRow>-1) {
					this.setVariablesFormularioToObjetoActualEvaluacionEmpleado(this.getevaluacionempleado(),true);
					this.setVariablesFormularioToObjetoActualForeignKeysEvaluacionEmpleado(this.evaluacionempleado);
					//ARCHITECTURE
					/*
					if(Constantes.ISUSAEJBLOGICLAYER) {
						this.evaluacionempleado =(EvaluacionEmpleado) this.evaluacionempleadoLogic.getEvaluacionEmpleados().toArray()[this.jTableDatosEvaluacionEmpleado.convertRowIndexToModel(intSelectedRow)];
					} else if(Constantes.ISUSAEJBREMOTE || Constantes.ISUSAEJBHOME) {
						this.evaluacionempleado =(EvaluacionEmpleado) this.evaluacionempleados.toArray()[this.jTableDatosEvaluacionEmpleado.convertRowIndexToModel(intSelectedRow)];
					}
					*/
					//ARCHITECTURE

				} else {
					if(this.evaluacionempleado==null) {
						this.evaluacionempleado = new EvaluacionEmpleado();
					}

					this.setVariablesFormularioToObjetoActualEvaluacionEmpleado(this.evaluacionempleado,true);
					this.setVariablesFormularioToObjetoActualForeignKeysEvaluacionEmpleado(this.evaluacionempleado);
				}

				if(this.evaluacionempleado.getobservacion1()!=null) {

					this.sAccionBusqueda="Query";

					this.sFinalQueryGeneral=" where observacion1 like '%"+this.evaluacionempleado.getobservacion1()+"%' ";

					if(Constantes.ISDEVELOPING) {
						System.out.println(this.sFinalQueryGeneral);
					}

					this.procesarBusqueda(this.sAccionBusqueda);

					this.inicializarActualizarBindingEvaluacionEmpleado(false);
				}

				if(Constantes.ISUSAEJBLOGICLAYER) {
					this.evaluacionempleadoLogic.commitNewConnexionToDeep();
				}

			} catch(Exception e) {

				if(Constantes.ISUSAEJBLOGICLAYER) {
					this.evaluacionempleadoLogic.rollbackNewConnexionToDeep();
				}

				FuncionesSwing.manageException(this, e,logger,EvaluacionEmpleadoConstantesFunciones.CLASSNAME);

			} finally {
				if(Constantes.ISUSAEJBLOGICLAYER) {
					this.evaluacionempleadoLogic.closeNewConnexionToDeep();
				}

			}
		}

	public void jButtonobservacion2EvaluacionEmpleadoBusquedaActionPerformed(java.awt.event.ActionEvent evt) throws Exception {
		try {

				if(Constantes.ISUSAEJBLOGICLAYER) {
					this.evaluacionempleadoLogic.getNewConnexionToDeep("");
				}

				//TOCA TRAER NUEVAMENTE, YA QUE SE PIERDE REGISTRO ACTUAL
				int intSelectedRow = this.jTableDatosEvaluacionEmpleado.getSelectedRow();

				if(intSelectedRow>-1) {
					this.setVariablesFormularioToObjetoActualEvaluacionEmpleado(this.getevaluacionempleado(),true);
					this.setVariablesFormularioToObjetoActualForeignKeysEvaluacionEmpleado(this.evaluacionempleado);
					//ARCHITECTURE
					/*
					if(Constantes.ISUSAEJBLOGICLAYER) {
						this.evaluacionempleado =(EvaluacionEmpleado) this.evaluacionempleadoLogic.getEvaluacionEmpleados().toArray()[this.jTableDatosEvaluacionEmpleado.convertRowIndexToModel(intSelectedRow)];
					} else if(Constantes.ISUSAEJBREMOTE || Constantes.ISUSAEJBHOME) {
						this.evaluacionempleado =(EvaluacionEmpleado) this.evaluacionempleados.toArray()[this.jTableDatosEvaluacionEmpleado.convertRowIndexToModel(intSelectedRow)];
					}
					*/
					//ARCHITECTURE

				} else {
					if(this.evaluacionempleado==null) {
						this.evaluacionempleado = new EvaluacionEmpleado();
					}

					this.setVariablesFormularioToObjetoActualEvaluacionEmpleado(this.evaluacionempleado,true);
					this.setVariablesFormularioToObjetoActualForeignKeysEvaluacionEmpleado(this.evaluacionempleado);
				}

				if(this.evaluacionempleado.getobservacion2()!=null) {

					this.sAccionBusqueda="Query";

					this.sFinalQueryGeneral=" where observacion2 like '%"+this.evaluacionempleado.getobservacion2()+"%' ";

					if(Constantes.ISDEVELOPING) {
						System.out.println(this.sFinalQueryGeneral);
					}

					this.procesarBusqueda(this.sAccionBusqueda);

					this.inicializarActualizarBindingEvaluacionEmpleado(false);
				}

				if(Constantes.ISUSAEJBLOGICLAYER) {
					this.evaluacionempleadoLogic.commitNewConnexionToDeep();
				}

			} catch(Exception e) {

				if(Constantes.ISUSAEJBLOGICLAYER) {
					this.evaluacionempleadoLogic.rollbackNewConnexionToDeep();
				}

				FuncionesSwing.manageException(this, e,logger,EvaluacionEmpleadoConstantesFunciones.CLASSNAME);

			} finally {
				if(Constantes.ISUSAEJBLOGICLAYER) {
					this.evaluacionempleadoLogic.closeNewConnexionToDeep();
				}

			}
		}

	public void jButtonobservacion3EvaluacionEmpleadoBusquedaActionPerformed(java.awt.event.ActionEvent evt) throws Exception {
		try {

				if(Constantes.ISUSAEJBLOGICLAYER) {
					this.evaluacionempleadoLogic.getNewConnexionToDeep("");
				}

				//TOCA TRAER NUEVAMENTE, YA QUE SE PIERDE REGISTRO ACTUAL
				int intSelectedRow = this.jTableDatosEvaluacionEmpleado.getSelectedRow();

				if(intSelectedRow>-1) {
					this.setVariablesFormularioToObjetoActualEvaluacionEmpleado(this.getevaluacionempleado(),true);
					this.setVariablesFormularioToObjetoActualForeignKeysEvaluacionEmpleado(this.evaluacionempleado);
					//ARCHITECTURE
					/*
					if(Constantes.ISUSAEJBLOGICLAYER) {
						this.evaluacionempleado =(EvaluacionEmpleado) this.evaluacionempleadoLogic.getEvaluacionEmpleados().toArray()[this.jTableDatosEvaluacionEmpleado.convertRowIndexToModel(intSelectedRow)];
					} else if(Constantes.ISUSAEJBREMOTE || Constantes.ISUSAEJBHOME) {
						this.evaluacionempleado =(EvaluacionEmpleado) this.evaluacionempleados.toArray()[this.jTableDatosEvaluacionEmpleado.convertRowIndexToModel(intSelectedRow)];
					}
					*/
					//ARCHITECTURE

				} else {
					if(this.evaluacionempleado==null) {
						this.evaluacionempleado = new EvaluacionEmpleado();
					}

					this.setVariablesFormularioToObjetoActualEvaluacionEmpleado(this.evaluacionempleado,true);
					this.setVariablesFormularioToObjetoActualForeignKeysEvaluacionEmpleado(this.evaluacionempleado);
				}

				if(this.evaluacionempleado.getobservacion3()!=null) {

					this.sAccionBusqueda="Query";

					this.sFinalQueryGeneral=" where observacion3 like '%"+this.evaluacionempleado.getobservacion3()+"%' ";

					if(Constantes.ISDEVELOPING) {
						System.out.println(this.sFinalQueryGeneral);
					}

					this.procesarBusqueda(this.sAccionBusqueda);

					this.inicializarActualizarBindingEvaluacionEmpleado(false);
				}

				if(Constantes.ISUSAEJBLOGICLAYER) {
					this.evaluacionempleadoLogic.commitNewConnexionToDeep();
				}

			} catch(Exception e) {

				if(Constantes.ISUSAEJBLOGICLAYER) {
					this.evaluacionempleadoLogic.rollbackNewConnexionToDeep();
				}

				FuncionesSwing.manageException(this, e,logger,EvaluacionEmpleadoConstantesFunciones.CLASSNAME);

			} finally {
				if(Constantes.ISUSAEJBLOGICLAYER) {
					this.evaluacionempleadoLogic.closeNewConnexionToDeep();
				}

			}
		}

	public void jButtonobservacion4EvaluacionEmpleadoBusquedaActionPerformed(java.awt.event.ActionEvent evt) throws Exception {
		try {

				if(Constantes.ISUSAEJBLOGICLAYER) {
					this.evaluacionempleadoLogic.getNewConnexionToDeep("");
				}

				//TOCA TRAER NUEVAMENTE, YA QUE SE PIERDE REGISTRO ACTUAL
				int intSelectedRow = this.jTableDatosEvaluacionEmpleado.getSelectedRow();

				if(intSelectedRow>-1) {
					this.setVariablesFormularioToObjetoActualEvaluacionEmpleado(this.getevaluacionempleado(),true);
					this.setVariablesFormularioToObjetoActualForeignKeysEvaluacionEmpleado(this.evaluacionempleado);
					//ARCHITECTURE
					/*
					if(Constantes.ISUSAEJBLOGICLAYER) {
						this.evaluacionempleado =(EvaluacionEmpleado) this.evaluacionempleadoLogic.getEvaluacionEmpleados().toArray()[this.jTableDatosEvaluacionEmpleado.convertRowIndexToModel(intSelectedRow)];
					} else if(Constantes.ISUSAEJBREMOTE || Constantes.ISUSAEJBHOME) {
						this.evaluacionempleado =(EvaluacionEmpleado) this.evaluacionempleados.toArray()[this.jTableDatosEvaluacionEmpleado.convertRowIndexToModel(intSelectedRow)];
					}
					*/
					//ARCHITECTURE

				} else {
					if(this.evaluacionempleado==null) {
						this.evaluacionempleado = new EvaluacionEmpleado();
					}

					this.setVariablesFormularioToObjetoActualEvaluacionEmpleado(this.evaluacionempleado,true);
					this.setVariablesFormularioToObjetoActualForeignKeysEvaluacionEmpleado(this.evaluacionempleado);
				}

				if(this.evaluacionempleado.getobservacion4()!=null) {

					this.sAccionBusqueda="Query";

					this.sFinalQueryGeneral=" where observacion4 like '%"+this.evaluacionempleado.getobservacion4()+"%' ";

					if(Constantes.ISDEVELOPING) {
						System.out.println(this.sFinalQueryGeneral);
					}

					this.procesarBusqueda(this.sAccionBusqueda);

					this.inicializarActualizarBindingEvaluacionEmpleado(false);
				}

				if(Constantes.ISUSAEJBLOGICLAYER) {
					this.evaluacionempleadoLogic.commitNewConnexionToDeep();
				}

			} catch(Exception e) {

				if(Constantes.ISUSAEJBLOGICLAYER) {
					this.evaluacionempleadoLogic.rollbackNewConnexionToDeep();
				}

				FuncionesSwing.manageException(this, e,logger,EvaluacionEmpleadoConstantesFunciones.CLASSNAME);

			} finally {
				if(Constantes.ISUSAEJBLOGICLAYER) {
					this.evaluacionempleadoLogic.closeNewConnexionToDeep();
				}

			}
		}

	
	
	public void jButtonFK_IdAnioEvaluacionEmpleadoActionPerformed(ActionEvent evt) throws Exception {
		try {
			if(Constantes.ISUSAEJBLOGICLAYER) {
				this.evaluacionempleadoLogic.getNewConnexionToDeep("");
			}

			this.iNumeroPaginacionPagina=0;
			this.inicializarActualizarBindingEvaluacionEmpleado(false,false);

			this.getEvaluacionEmpleadosFK_IdAnio();

			this.inicializarActualizarBindingEvaluacionEmpleado(false);

			//if(EvaluacionEmpleadoBeanSwingJInternalFrame.ISBINDING_MANUAL) {
			//this.inicializarActualizarBindingEvaluacionEmpleado(false,false);
			//}

			if(Constantes.ISUSAEJBLOGICLAYER) {
				this.evaluacionempleadoLogic.commitNewConnexionToDeep();
			}
		} catch(Exception e) {
			if(Constantes.ISUSAEJBLOGICLAYER) {
				this.evaluacionempleadoLogic.rollbackNewConnexionToDeep();
			}

			FuncionesSwing.manageException(this, e,logger,EvaluacionEmpleadoConstantesFunciones.CLASSNAME);

		} finally {
			if(Constantes.ISUSAEJBLOGICLAYER) {
				this.evaluacionempleadoLogic.closeNewConnexionToDeep();
			}
		}
	}

	public void jButtonFK_IdBimestreEvaluacionEmpleadoActionPerformed(ActionEvent evt) throws Exception {
		try {
			if(Constantes.ISUSAEJBLOGICLAYER) {
				this.evaluacionempleadoLogic.getNewConnexionToDeep("");
			}

			this.iNumeroPaginacionPagina=0;
			this.inicializarActualizarBindingEvaluacionEmpleado(false,false);

			this.getEvaluacionEmpleadosFK_IdBimestre();

			this.inicializarActualizarBindingEvaluacionEmpleado(false);

			//if(EvaluacionEmpleadoBeanSwingJInternalFrame.ISBINDING_MANUAL) {
			//this.inicializarActualizarBindingEvaluacionEmpleado(false,false);
			//}

			if(Constantes.ISUSAEJBLOGICLAYER) {
				this.evaluacionempleadoLogic.commitNewConnexionToDeep();
			}
		} catch(Exception e) {
			if(Constantes.ISUSAEJBLOGICLAYER) {
				this.evaluacionempleadoLogic.rollbackNewConnexionToDeep();
			}

			FuncionesSwing.manageException(this, e,logger,EvaluacionEmpleadoConstantesFunciones.CLASSNAME);

		} finally {
			if(Constantes.ISUSAEJBLOGICLAYER) {
				this.evaluacionempleadoLogic.closeNewConnexionToDeep();
			}
		}
	}

	public void jButtonFK_IdEjercicioEvaluacionEmpleadoActionPerformed(ActionEvent evt) throws Exception {
		try {
			if(Constantes.ISUSAEJBLOGICLAYER) {
				this.evaluacionempleadoLogic.getNewConnexionToDeep("");
			}

			this.iNumeroPaginacionPagina=0;
			this.inicializarActualizarBindingEvaluacionEmpleado(false,false);

			this.getEvaluacionEmpleadosFK_IdEjercicio();

			this.inicializarActualizarBindingEvaluacionEmpleado(false);

			//if(EvaluacionEmpleadoBeanSwingJInternalFrame.ISBINDING_MANUAL) {
			//this.inicializarActualizarBindingEvaluacionEmpleado(false,false);
			//}

			if(Constantes.ISUSAEJBLOGICLAYER) {
				this.evaluacionempleadoLogic.commitNewConnexionToDeep();
			}
		} catch(Exception e) {
			if(Constantes.ISUSAEJBLOGICLAYER) {
				this.evaluacionempleadoLogic.rollbackNewConnexionToDeep();
			}

			FuncionesSwing.manageException(this, e,logger,EvaluacionEmpleadoConstantesFunciones.CLASSNAME);

		} finally {
			if(Constantes.ISUSAEJBLOGICLAYER) {
				this.evaluacionempleadoLogic.closeNewConnexionToDeep();
			}
		}
	}

	public void jButtonFK_IdEmpleadoEvaluacionEmpleadoActionPerformed(ActionEvent evt) throws Exception {
		try {
			if(Constantes.ISUSAEJBLOGICLAYER) {
				this.evaluacionempleadoLogic.getNewConnexionToDeep("");
			}

			this.iNumeroPaginacionPagina=0;
			this.inicializarActualizarBindingEvaluacionEmpleado(false,false);

			this.getEvaluacionEmpleadosFK_IdEmpleado();

			this.inicializarActualizarBindingEvaluacionEmpleado(false);

			//if(EvaluacionEmpleadoBeanSwingJInternalFrame.ISBINDING_MANUAL) {
			//this.inicializarActualizarBindingEvaluacionEmpleado(false,false);
			//}

			if(Constantes.ISUSAEJBLOGICLAYER) {
				this.evaluacionempleadoLogic.commitNewConnexionToDeep();
			}
		} catch(Exception e) {
			if(Constantes.ISUSAEJBLOGICLAYER) {
				this.evaluacionempleadoLogic.rollbackNewConnexionToDeep();
			}

			FuncionesSwing.manageException(this, e,logger,EvaluacionEmpleadoConstantesFunciones.CLASSNAME);

		} finally {
			if(Constantes.ISUSAEJBLOGICLAYER) {
				this.evaluacionempleadoLogic.closeNewConnexionToDeep();
			}
		}
	}

	public void jButtonFK_IdEmpleadoEvaluaEvaluacionEmpleadoActionPerformed(ActionEvent evt) throws Exception {
		try {
			if(Constantes.ISUSAEJBLOGICLAYER) {
				this.evaluacionempleadoLogic.getNewConnexionToDeep("");
			}

			this.iNumeroPaginacionPagina=0;
			this.inicializarActualizarBindingEvaluacionEmpleado(false,false);

			this.getEvaluacionEmpleadosFK_IdEmpleadoEvalua();

			this.inicializarActualizarBindingEvaluacionEmpleado(false);

			//if(EvaluacionEmpleadoBeanSwingJInternalFrame.ISBINDING_MANUAL) {
			//this.inicializarActualizarBindingEvaluacionEmpleado(false,false);
			//}

			if(Constantes.ISUSAEJBLOGICLAYER) {
				this.evaluacionempleadoLogic.commitNewConnexionToDeep();
			}
		} catch(Exception e) {
			if(Constantes.ISUSAEJBLOGICLAYER) {
				this.evaluacionempleadoLogic.rollbackNewConnexionToDeep();
			}

			FuncionesSwing.manageException(this, e,logger,EvaluacionEmpleadoConstantesFunciones.CLASSNAME);

		} finally {
			if(Constantes.ISUSAEJBLOGICLAYER) {
				this.evaluacionempleadoLogic.closeNewConnexionToDeep();
			}
		}
	}

	public void jButtonFK_IdEmpresaEvaluacionEmpleadoActionPerformed(ActionEvent evt) throws Exception {
		try {
			if(Constantes.ISUSAEJBLOGICLAYER) {
				this.evaluacionempleadoLogic.getNewConnexionToDeep("");
			}

			this.iNumeroPaginacionPagina=0;
			this.inicializarActualizarBindingEvaluacionEmpleado(false,false);

			this.getEvaluacionEmpleadosFK_IdEmpresa();

			this.inicializarActualizarBindingEvaluacionEmpleado(false);

			//if(EvaluacionEmpleadoBeanSwingJInternalFrame.ISBINDING_MANUAL) {
			//this.inicializarActualizarBindingEvaluacionEmpleado(false,false);
			//}

			if(Constantes.ISUSAEJBLOGICLAYER) {
				this.evaluacionempleadoLogic.commitNewConnexionToDeep();
			}
		} catch(Exception e) {
			if(Constantes.ISUSAEJBLOGICLAYER) {
				this.evaluacionempleadoLogic.rollbackNewConnexionToDeep();
			}

			FuncionesSwing.manageException(this, e,logger,EvaluacionEmpleadoConstantesFunciones.CLASSNAME);

		} finally {
			if(Constantes.ISUSAEJBLOGICLAYER) {
				this.evaluacionempleadoLogic.closeNewConnexionToDeep();
			}
		}
	}

	public void jButtonFK_IdEstructuraEvaluacionEmpleadoActionPerformed(ActionEvent evt) throws Exception {
		try {
			if(Constantes.ISUSAEJBLOGICLAYER) {
				this.evaluacionempleadoLogic.getNewConnexionToDeep("");
			}

			this.iNumeroPaginacionPagina=0;
			this.inicializarActualizarBindingEvaluacionEmpleado(false,false);

			this.getEvaluacionEmpleadosFK_IdEstructura();

			this.inicializarActualizarBindingEvaluacionEmpleado(false);

			//if(EvaluacionEmpleadoBeanSwingJInternalFrame.ISBINDING_MANUAL) {
			//this.inicializarActualizarBindingEvaluacionEmpleado(false,false);
			//}

			if(Constantes.ISUSAEJBLOGICLAYER) {
				this.evaluacionempleadoLogic.commitNewConnexionToDeep();
			}
		} catch(Exception e) {
			if(Constantes.ISUSAEJBLOGICLAYER) {
				this.evaluacionempleadoLogic.rollbackNewConnexionToDeep();
			}

			FuncionesSwing.manageException(this, e,logger,EvaluacionEmpleadoConstantesFunciones.CLASSNAME);

		} finally {
			if(Constantes.ISUSAEJBLOGICLAYER) {
				this.evaluacionempleadoLogic.closeNewConnexionToDeep();
			}
		}
	}

	public void jButtonFK_IdMesEvaluacionEmpleadoActionPerformed(ActionEvent evt) throws Exception {
		try {
			if(Constantes.ISUSAEJBLOGICLAYER) {
				this.evaluacionempleadoLogic.getNewConnexionToDeep("");
			}

			this.iNumeroPaginacionPagina=0;
			this.inicializarActualizarBindingEvaluacionEmpleado(false,false);

			this.getEvaluacionEmpleadosFK_IdMes();

			this.inicializarActualizarBindingEvaluacionEmpleado(false);

			//if(EvaluacionEmpleadoBeanSwingJInternalFrame.ISBINDING_MANUAL) {
			//this.inicializarActualizarBindingEvaluacionEmpleado(false,false);
			//}

			if(Constantes.ISUSAEJBLOGICLAYER) {
				this.evaluacionempleadoLogic.commitNewConnexionToDeep();
			}
		} catch(Exception e) {
			if(Constantes.ISUSAEJBLOGICLAYER) {
				this.evaluacionempleadoLogic.rollbackNewConnexionToDeep();
			}

			FuncionesSwing.manageException(this, e,logger,EvaluacionEmpleadoConstantesFunciones.CLASSNAME);

		} finally {
			if(Constantes.ISUSAEJBLOGICLAYER) {
				this.evaluacionempleadoLogic.closeNewConnexionToDeep();
			}
		}
	}

	public void jButtonFK_IdPeriodoEvaluacionEmpleadoActionPerformed(ActionEvent evt) throws Exception {
		try {
			if(Constantes.ISUSAEJBLOGICLAYER) {
				this.evaluacionempleadoLogic.getNewConnexionToDeep("");
			}

			this.iNumeroPaginacionPagina=0;
			this.inicializarActualizarBindingEvaluacionEmpleado(false,false);

			this.getEvaluacionEmpleadosFK_IdPeriodo();

			this.inicializarActualizarBindingEvaluacionEmpleado(false);

			//if(EvaluacionEmpleadoBeanSwingJInternalFrame.ISBINDING_MANUAL) {
			//this.inicializarActualizarBindingEvaluacionEmpleado(false,false);
			//}

			if(Constantes.ISUSAEJBLOGICLAYER) {
				this.evaluacionempleadoLogic.commitNewConnexionToDeep();
			}
		} catch(Exception e) {
			if(Constantes.ISUSAEJBLOGICLAYER) {
				this.evaluacionempleadoLogic.rollbackNewConnexionToDeep();
			}

			FuncionesSwing.manageException(this, e,logger,EvaluacionEmpleadoConstantesFunciones.CLASSNAME);

		} finally {
			if(Constantes.ISUSAEJBLOGICLAYER) {
				this.evaluacionempleadoLogic.closeNewConnexionToDeep();
			}
		}
	}

	public void jButtonFK_IdSemestreEvaluacionEmpleadoActionPerformed(ActionEvent evt) throws Exception {
		try {
			if(Constantes.ISUSAEJBLOGICLAYER) {
				this.evaluacionempleadoLogic.getNewConnexionToDeep("");
			}

			this.iNumeroPaginacionPagina=0;
			this.inicializarActualizarBindingEvaluacionEmpleado(false,false);

			this.getEvaluacionEmpleadosFK_IdSemestre();

			this.inicializarActualizarBindingEvaluacionEmpleado(false);

			//if(EvaluacionEmpleadoBeanSwingJInternalFrame.ISBINDING_MANUAL) {
			//this.inicializarActualizarBindingEvaluacionEmpleado(false,false);
			//}

			if(Constantes.ISUSAEJBLOGICLAYER) {
				this.evaluacionempleadoLogic.commitNewConnexionToDeep();
			}
		} catch(Exception e) {
			if(Constantes.ISUSAEJBLOGICLAYER) {
				this.evaluacionempleadoLogic.rollbackNewConnexionToDeep();
			}

			FuncionesSwing.manageException(this, e,logger,EvaluacionEmpleadoConstantesFunciones.CLASSNAME);

		} finally {
			if(Constantes.ISUSAEJBLOGICLAYER) {
				this.evaluacionempleadoLogic.closeNewConnexionToDeep();
			}
		}
	}

	public void jButtonFK_IdSucursalEvaluacionEmpleadoActionPerformed(ActionEvent evt) throws Exception {
		try {
			if(Constantes.ISUSAEJBLOGICLAYER) {
				this.evaluacionempleadoLogic.getNewConnexionToDeep("");
			}

			this.iNumeroPaginacionPagina=0;
			this.inicializarActualizarBindingEvaluacionEmpleado(false,false);

			this.getEvaluacionEmpleadosFK_IdSucursal();

			this.inicializarActualizarBindingEvaluacionEmpleado(false);

			//if(EvaluacionEmpleadoBeanSwingJInternalFrame.ISBINDING_MANUAL) {
			//this.inicializarActualizarBindingEvaluacionEmpleado(false,false);
			//}

			if(Constantes.ISUSAEJBLOGICLAYER) {
				this.evaluacionempleadoLogic.commitNewConnexionToDeep();
			}
		} catch(Exception e) {
			if(Constantes.ISUSAEJBLOGICLAYER) {
				this.evaluacionempleadoLogic.rollbackNewConnexionToDeep();
			}

			FuncionesSwing.manageException(this, e,logger,EvaluacionEmpleadoConstantesFunciones.CLASSNAME);

		} finally {
			if(Constantes.ISUSAEJBLOGICLAYER) {
				this.evaluacionempleadoLogic.closeNewConnexionToDeep();
			}
		}
	}

	public void jButtonFK_IdTipoEvaluacionEmpleadoEvaluacionEmpleadoActionPerformed(ActionEvent evt) throws Exception {
		try {
			if(Constantes.ISUSAEJBLOGICLAYER) {
				this.evaluacionempleadoLogic.getNewConnexionToDeep("");
			}

			this.iNumeroPaginacionPagina=0;
			this.inicializarActualizarBindingEvaluacionEmpleado(false,false);

			this.getEvaluacionEmpleadosFK_IdTipoEvaluacionEmpleado();

			this.inicializarActualizarBindingEvaluacionEmpleado(false);

			//if(EvaluacionEmpleadoBeanSwingJInternalFrame.ISBINDING_MANUAL) {
			//this.inicializarActualizarBindingEvaluacionEmpleado(false,false);
			//}

			if(Constantes.ISUSAEJBLOGICLAYER) {
				this.evaluacionempleadoLogic.commitNewConnexionToDeep();
			}
		} catch(Exception e) {
			if(Constantes.ISUSAEJBLOGICLAYER) {
				this.evaluacionempleadoLogic.rollbackNewConnexionToDeep();
			}

			FuncionesSwing.manageException(this, e,logger,EvaluacionEmpleadoConstantesFunciones.CLASSNAME);

		} finally {
			if(Constantes.ISUSAEJBLOGICLAYER) {
				this.evaluacionempleadoLogic.closeNewConnexionToDeep();
			}
		}
	}

	public void jButtonFK_IdTrimestreEvaluacionEmpleadoActionPerformed(ActionEvent evt) throws Exception {
		try {
			if(Constantes.ISUSAEJBLOGICLAYER) {
				this.evaluacionempleadoLogic.getNewConnexionToDeep("");
			}

			this.iNumeroPaginacionPagina=0;
			this.inicializarActualizarBindingEvaluacionEmpleado(false,false);

			this.getEvaluacionEmpleadosFK_IdTrimestre();

			this.inicializarActualizarBindingEvaluacionEmpleado(false);

			//if(EvaluacionEmpleadoBeanSwingJInternalFrame.ISBINDING_MANUAL) {
			//this.inicializarActualizarBindingEvaluacionEmpleado(false,false);
			//}

			if(Constantes.ISUSAEJBLOGICLAYER) {
				this.evaluacionempleadoLogic.commitNewConnexionToDeep();
			}
		} catch(Exception e) {
			if(Constantes.ISUSAEJBLOGICLAYER) {
				this.evaluacionempleadoLogic.rollbackNewConnexionToDeep();
			}

			FuncionesSwing.manageException(this, e,logger,EvaluacionEmpleadoConstantesFunciones.CLASSNAME);

		} finally {
			if(Constantes.ISUSAEJBLOGICLAYER) {
				this.evaluacionempleadoLogic.closeNewConnexionToDeep();
			}
		}
	}

	
	public void closingInternalFrameEvaluacionEmpleado() {
		if(this.jInternalFrameDetalleFormEvaluacionEmpleado!=null) {
		

		if(this.jInternalFrameDetalleFormEvaluacionEmpleado.calificacionempleadoBeanSwingJInternalFrame!=null) {
			this.jInternalFrameDetalleFormEvaluacionEmpleado.calificacionempleadoBeanSwingJInternalFrame.setVisible(false);
			this.jInternalFrameDetalleFormEvaluacionEmpleado.calificacionempleadoBeanSwingJInternalFrame.dispose();
			this.jInternalFrameDetalleFormEvaluacionEmpleado.calificacionempleadoBeanSwingJInternalFrame=null;
		}

		if(this.jInternalFrameDetalleFormEvaluacionEmpleado.calificacionempleadoBeanSwingJInternalFramePopup!=null) {
			this.jInternalFrameDetalleFormEvaluacionEmpleado.calificacionempleadoBeanSwingJInternalFramePopup.setVisible(false);
			this.jInternalFrameDetalleFormEvaluacionEmpleado.calificacionempleadoBeanSwingJInternalFramePopup.dispose();
			this.jInternalFrameDetalleFormEvaluacionEmpleado.calificacionempleadoBeanSwingJInternalFramePopup=null;
		}	
		
		
		}
		
		if(this.jInternalFrameDetalleFormEvaluacionEmpleado!=null) {
			this.jInternalFrameDetalleFormEvaluacionEmpleado.setVisible(false);	    			
			this.jInternalFrameDetalleFormEvaluacionEmpleado.dispose();
			this.jInternalFrameDetalleFormEvaluacionEmpleado=null;
		}
		
		
		if(this.jInternalFrameReporteDinamicoEvaluacionEmpleado!=null) {
			this.jInternalFrameReporteDinamicoEvaluacionEmpleado.setVisible(false);	    			
			this.jInternalFrameReporteDinamicoEvaluacionEmpleado.dispose();
			this.jInternalFrameReporteDinamicoEvaluacionEmpleado=null;
		}
		
		if(this.jInternalFrameImportacionEvaluacionEmpleado!=null) {
			this.jInternalFrameImportacionEvaluacionEmpleado.setVisible(false);	    			
			this.jInternalFrameImportacionEvaluacionEmpleado.dispose();
			this.jInternalFrameImportacionEvaluacionEmpleado=null;
		}		
		
		
		this.setVisible(false);
		this.dispose();
		//this=null;
	}
	
	
	
	public void jButtonActionPerformedGeneral(String sTipo,ActionEvent evt) { 	  
		try {			
			this.startProcessEvaluacionEmpleado();
			
			EvaluacionEmpleadoBeanSwingJInternalFrameAdditional.procesarEventosVista(this.parametroGeneralUsuario,this.moduloActual,this.opcionActual,this.usuarioActual,this,FuncionTipo.BEFORE,ControlTipo.BUTTON,EventoTipo.CLIC,EventoSubTipo.CLICKED,sTipo,this.evaluacionempleado,new Object(),this.evaluacionempleadoParameterGeneral,this.evaluacionempleadoReturnGeneral);
			
			
			if(sTipo.equals("NuevoEvaluacionEmpleado")) {
				jButtonNuevoEvaluacionEmpleadoActionPerformed(evt,false);
			} else if(sTipo.equals("DuplicarEvaluacionEmpleado")) {
				jButtonDuplicarEvaluacionEmpleadoActionPerformed(evt,false);
			} else if(sTipo.equals("CopiarEvaluacionEmpleado")) {
				jButtonCopiarEvaluacionEmpleadoActionPerformed(evt);
			} else if(sTipo.equals("VerFormEvaluacionEmpleado")) {
				jButtonVerFormEvaluacionEmpleadoActionPerformed(evt);
			} else if(sTipo.equals("NuevoToolBarEvaluacionEmpleado")) {
				jButtonNuevoEvaluacionEmpleadoActionPerformed(evt,false);
			} else if(sTipo.equals("DuplicarToolBarEvaluacionEmpleado")) {
				jButtonDuplicarEvaluacionEmpleadoActionPerformed(evt,false);
			} else if(sTipo.equals("MenuItemNuevoEvaluacionEmpleado")) {
				jButtonNuevoEvaluacionEmpleadoActionPerformed(evt,false);
			} else if(sTipo.equals("MenuItemDuplicarEvaluacionEmpleado")) {
				jButtonDuplicarEvaluacionEmpleadoActionPerformed(evt,false);
			} else if(sTipo.equals("NuevoRelacionesEvaluacionEmpleado")) {
				jButtonNuevoEvaluacionEmpleadoActionPerformed(evt,true);
			} else if(sTipo.equals("NuevoRelacionesToolBarEvaluacionEmpleado")) {
				jButtonNuevoEvaluacionEmpleadoActionPerformed(evt,true);
			} else if(sTipo.equals("MenuItemNuevoRelacionesEvaluacionEmpleado")) {
				jButtonNuevoEvaluacionEmpleadoActionPerformed(evt,true);
			} else if(sTipo.equals("ModificarEvaluacionEmpleado")) {
				jButtonModificarEvaluacionEmpleadoActionPerformed(evt);
			} else if(sTipo.equals("ModificarToolBarEvaluacionEmpleado")) {
				jButtonModificarEvaluacionEmpleadoActionPerformed(evt);
			} else if(sTipo.equals("MenuItemModificarEvaluacionEmpleado")) {
				jButtonModificarEvaluacionEmpleadoActionPerformed(evt);
			} else if(sTipo.equals("ActualizarEvaluacionEmpleado")) {
				jButtonActualizarEvaluacionEmpleadoActionPerformed(evt);
			} else if(sTipo.equals("ActualizarToolBarEvaluacionEmpleado")) {
				jButtonActualizarEvaluacionEmpleadoActionPerformed(evt);
			} else if(sTipo.equals("MenuItemActualizarEvaluacionEmpleado")) {
				jButtonActualizarEvaluacionEmpleadoActionPerformed(evt);
			} else if(sTipo.equals("EliminarEvaluacionEmpleado")) {
				jButtonEliminarEvaluacionEmpleadoActionPerformed(evt);
			} else if(sTipo.equals("EliminarToolBarEvaluacionEmpleado")) {
				jButtonEliminarEvaluacionEmpleadoActionPerformed(evt);
			} else if(sTipo.equals("MenuItemEliminarEvaluacionEmpleado")) {
				jButtonEliminarEvaluacionEmpleadoActionPerformed(evt);
			} else if(sTipo.equals("CancelarEvaluacionEmpleado")) {
				jButtonCancelarEvaluacionEmpleadoActionPerformed(evt);
			} else if(sTipo.equals("CancelarToolBarEvaluacionEmpleado")) {
				jButtonCancelarEvaluacionEmpleadoActionPerformed(evt);
			} else if(sTipo.equals("MenuItemCancelarEvaluacionEmpleado")) {
				jButtonCancelarEvaluacionEmpleadoActionPerformed(evt);
			} else if(sTipo.equals("CerrarEvaluacionEmpleado")) {
				jButtonCerrarEvaluacionEmpleadoActionPerformed(evt);
			} else if(sTipo.equals("CerrarToolBarEvaluacionEmpleado")) {
				jButtonCerrarEvaluacionEmpleadoActionPerformed(evt);
			} else if(sTipo.equals("MenuItemCerrarEvaluacionEmpleado")) {
				jButtonCerrarEvaluacionEmpleadoActionPerformed(evt);
			} else if(sTipo.equals("MostrarOcultarToolBarEvaluacionEmpleado")) {
				jButtonMostrarOcultarEvaluacionEmpleadoActionPerformed(evt);
			} else if(sTipo.equals("MenuItemDetalleCerrarEvaluacionEmpleado")) {
				jButtonCancelarEvaluacionEmpleadoActionPerformed(evt);
			} else if(sTipo.equals("GuardarCambiosEvaluacionEmpleado")) {
				jButtonGuardarCambiosEvaluacionEmpleadoActionPerformed(evt);
			} else if(sTipo.equals("GuardarCambiosToolBarEvaluacionEmpleado")) {
				jButtonGuardarCambiosEvaluacionEmpleadoActionPerformed(evt);
			} else if(sTipo.equals("CopiarToolBarEvaluacionEmpleado")) {
				jButtonCopiarEvaluacionEmpleadoActionPerformed(evt);
			} else if(sTipo.equals("VerFormToolBarEvaluacionEmpleado")) {
				jButtonVerFormEvaluacionEmpleadoActionPerformed(evt);
			} else if(sTipo.equals("MenuItemGuardarCambiosEvaluacionEmpleado")) {
				jButtonGuardarCambiosEvaluacionEmpleadoActionPerformed(evt);
			} else if(sTipo.equals("MenuItemCopiarEvaluacionEmpleado")) {
				jButtonCopiarEvaluacionEmpleadoActionPerformed(evt);
			} else if(sTipo.equals("MenuItemVerFormEvaluacionEmpleado")) {
				jButtonVerFormEvaluacionEmpleadoActionPerformed(evt);
			} else if(sTipo.equals("GuardarCambiosTablaEvaluacionEmpleado")) {
				jButtonGuardarCambiosEvaluacionEmpleadoActionPerformed(evt);
			} else if(sTipo.equals("GuardarCambiosTablaToolBarEvaluacionEmpleado")) {
				jButtonGuardarCambiosEvaluacionEmpleadoActionPerformed(evt);
			} else if(sTipo.equals("MenuItemGuardarCambiosTablaEvaluacionEmpleado")) {
				jButtonGuardarCambiosEvaluacionEmpleadoActionPerformed(evt);
			} else if(sTipo.equals("RecargarInformacionEvaluacionEmpleado")) {
				jButtonRecargarInformacionEvaluacionEmpleadoActionPerformed(evt);
			} else if(sTipo.equals("RecargarInformacionToolBarEvaluacionEmpleado")) {
				jButtonRecargarInformacionEvaluacionEmpleadoActionPerformed(evt);
			} else if(sTipo.equals("MenuItemRecargarInformacionEvaluacionEmpleado")) {
				jButtonRecargarInformacionEvaluacionEmpleadoActionPerformed(evt);
			}
			else if(sTipo.equals("AnterioresEvaluacionEmpleado")) {
				jButtonAnterioresEvaluacionEmpleadoActionPerformed(evt);
			} else if(sTipo.equals("AnterioresToolBarEvaluacionEmpleado")) {
				jButtonAnterioresEvaluacionEmpleadoActionPerformed(evt);
			} else if(sTipo.equals("MenuItemAnterioreEvaluacionEmpleado")) {
				jButtonAnterioresEvaluacionEmpleadoActionPerformed(evt);
			} else if(sTipo.equals("SiguientesEvaluacionEmpleado")) {
				jButtonSiguientesEvaluacionEmpleadoActionPerformed(evt);
			} else if(sTipo.equals("SiguientesToolBarEvaluacionEmpleado")) {
				jButtonSiguientesEvaluacionEmpleadoActionPerformed(evt);
			} else if(sTipo.equals("MenuItemSiguientesEvaluacionEmpleado")) {
				jButtonSiguientesEvaluacionEmpleadoActionPerformed(evt);
			} else if(sTipo.equals("MenuItemAbrirOrderByEvaluacionEmpleado") || sTipo.equals("MenuItemDetalleAbrirOrderByEvaluacionEmpleado")) {
				jButtonAbrirOrderByEvaluacionEmpleadoActionPerformed(evt);
			} else if(sTipo.equals("MenuItemMostrarOcultarEvaluacionEmpleado") || sTipo.equals("MenuItemDetalleMostrarOcultarEvaluacionEmpleado")) {
				jButtonMostrarOcultarEvaluacionEmpleadoActionPerformed(evt);
			} else if(sTipo.equals("NuevoGuardarCambiosEvaluacionEmpleado")) {
				jButtonNuevoGuardarCambiosEvaluacionEmpleadoActionPerformed(evt);
			} else if(sTipo.equals("NuevoGuardarCambiosToolBarEvaluacionEmpleado")) {
				jButtonNuevoGuardarCambiosEvaluacionEmpleadoActionPerformed(evt);
			} else if(sTipo.equals("MenuItemNuevoGuardarCambiosEvaluacionEmpleado")) {
				jButtonNuevoGuardarCambiosEvaluacionEmpleadoActionPerformed(evt);
			} 
			else if(sTipo.equals("CerrarReporteDinamicoEvaluacionEmpleado")) {
				jButtonCerrarReporteDinamicoEvaluacionEmpleadoActionPerformed(evt);
			} else if(sTipo.equals("GenerarReporteDinamicoEvaluacionEmpleado")) {
				jButtonGenerarReporteDinamicoEvaluacionEmpleadoActionPerformed(evt);
			} else if(sTipo.equals("GenerarExcelReporteDinamicoEvaluacionEmpleado")) {
				
				jButtonGenerarExcelReporteDinamicoEvaluacionEmpleadoActionPerformed(evt);
				
			} else if(sTipo.equals("CerrarImportacionEvaluacionEmpleado")) {
				jButtonCerrarImportacionEvaluacionEmpleadoActionPerformed(evt);
			} else if(sTipo.equals("GenerarImportacionEvaluacionEmpleado")) {
				
				jButtonGenerarImportacionEvaluacionEmpleadoActionPerformed(evt);
				
			} else if(sTipo.equals("AbrirImportacionEvaluacionEmpleado")) {
				
				jButtonAbrirImportacionEvaluacionEmpleadoActionPerformed(evt);
				
			} else if(sTipo.equals("TiposAccionesEvaluacionEmpleado")) {
				jComboBoxTiposAccionesEvaluacionEmpleadoActionListener(evt,false);
			} else if(sTipo.equals("TiposRelacionesEvaluacionEmpleado")) {
				jComboBoxTiposRelacionesEvaluacionEmpleadoActionListener(evt);
			} else if(sTipo.equals("TiposAccionesFormularioEvaluacionEmpleado")) {
				jComboBoxTiposAccionesEvaluacionEmpleadoActionListener(evt,true);
			} else if(sTipo.equals("TiposSeleccionarEvaluacionEmpleado")) {
				
				jComboBoxTiposSeleccionarEvaluacionEmpleadoActionListener(evt);
				
			} else if(sTipo.equals("ValorCampoGeneralEvaluacionEmpleado")) {
				jTextFieldValorCampoGeneralEvaluacionEmpleadoActionListener(evt);
			}
			
			
			else if(sTipo.equals("AbrirOrderByEvaluacionEmpleado")) {
				jButtonAbrirOrderByEvaluacionEmpleadoActionPerformed(evt);
				
			} else if(sTipo.equals("AbrirOrderByToolBarEvaluacionEmpleado")) {
				jButtonAbrirOrderByEvaluacionEmpleadoActionPerformed(evt);
				
			} else if(sTipo.equals("CerrarOrderByEvaluacionEmpleado")) {
				jButtonCerrarOrderByEvaluacionEmpleadoActionPerformed(evt);
			} 
						
			
			//BUSQUEDA GENERAL CAMPO
			else if(sTipo.equals("idEvaluacionEmpleadoBusqueda")) {
				this.jButtonidEvaluacionEmpleadoBusquedaActionPerformed(evt);
			}
			//ACTUALIZAR CAMPO
			else if(sTipo.equals("id_empresaEvaluacionEmpleadoUpdate")) {
				this.jButtonid_empresaEvaluacionEmpleadoUpdateActionPerformed(evt);
			}
			//BUSQUEDA GENERAL CAMPO
			else if(sTipo.equals("id_empresaEvaluacionEmpleadoBusqueda")) {
				this.jButtonid_empresaEvaluacionEmpleadoBusquedaActionPerformed(evt);
			}
			//ACTUALIZAR CAMPO
			else if(sTipo.equals("id_sucursalEvaluacionEmpleadoUpdate")) {
				this.jButtonid_sucursalEvaluacionEmpleadoUpdateActionPerformed(evt);
			}
			//BUSQUEDA GENERAL CAMPO
			else if(sTipo.equals("id_sucursalEvaluacionEmpleadoBusqueda")) {
				this.jButtonid_sucursalEvaluacionEmpleadoBusquedaActionPerformed(evt);
			}
			//ACTUALIZAR CAMPO
			else if(sTipo.equals("id_ejercicioEvaluacionEmpleadoUpdate")) {
				this.jButtonid_ejercicioEvaluacionEmpleadoUpdateActionPerformed(evt);
			}
			//BUSQUEDA GENERAL CAMPO
			else if(sTipo.equals("id_ejercicioEvaluacionEmpleadoBusqueda")) {
				this.jButtonid_ejercicioEvaluacionEmpleadoBusquedaActionPerformed(evt);
			}
			//ACTUALIZAR CAMPO
			else if(sTipo.equals("id_periodoEvaluacionEmpleadoUpdate")) {
				this.jButtonid_periodoEvaluacionEmpleadoUpdateActionPerformed(evt);
			}
			//BUSQUEDA GENERAL CAMPO
			else if(sTipo.equals("id_periodoEvaluacionEmpleadoBusqueda")) {
				this.jButtonid_periodoEvaluacionEmpleadoBusquedaActionPerformed(evt);
			}
			//ACTUALIZAR CAMPO
			else if(sTipo.equals("id_estructuraEvaluacionEmpleadoUpdate")) {
				this.jButtonid_estructuraEvaluacionEmpleadoUpdateActionPerformed(evt);
			}
			//BUSQUEDA GENERAL CAMPO
			else if(sTipo.equals("id_estructuraEvaluacionEmpleadoBusqueda")) {
				this.jButtonid_estructuraEvaluacionEmpleadoBusquedaActionPerformed(evt);
			}
			//ACTUALIZAR CAMPO
			else if(sTipo.equals("id_empleadoEvaluacionEmpleadoUpdate")) {
				this.jButtonid_empleadoEvaluacionEmpleadoUpdateActionPerformed(evt);
			}
			//BUSQUEDA GENERAL CAMPO
			else if(sTipo.equals("id_empleadoEvaluacionEmpleadoBusqueda")) {
				this.jButtonid_empleadoEvaluacionEmpleadoBusquedaActionPerformed(evt);
			}
			//ACTUALIZAR CAMPO
			else if(sTipo.equals("id_empleado_evaluaEvaluacionEmpleadoUpdate")) {
				this.jButtonid_empleado_evaluaEvaluacionEmpleadoUpdateActionPerformed(evt);
			}
			//BUSQUEDA GENERAL CAMPO
			else if(sTipo.equals("id_empleado_evaluaEvaluacionEmpleadoBusqueda")) {
				this.jButtonid_empleado_evaluaEvaluacionEmpleadoBusquedaActionPerformed(evt);
			}
			//ACTUALIZAR CAMPO
			else if(sTipo.equals("id_tipo_evaluacion_empleadoEvaluacionEmpleadoUpdate")) {
				this.jButtonid_tipo_evaluacion_empleadoEvaluacionEmpleadoUpdateActionPerformed(evt);
			}
			//BUSQUEDA GENERAL CAMPO
			else if(sTipo.equals("id_tipo_evaluacion_empleadoEvaluacionEmpleadoBusqueda")) {
				this.jButtonid_tipo_evaluacion_empleadoEvaluacionEmpleadoBusquedaActionPerformed(evt);
			}
			//BUSQUEDA GENERAL CAMPO
			else if(sTipo.equals("fechaEvaluacionEmpleadoBusqueda")) {
				this.jButtonfechaEvaluacionEmpleadoBusquedaActionPerformed(evt);
			}
			//BUSQUEDA GENERAL CAMPO
			else if(sTipo.equals("esta_evaluadoEvaluacionEmpleadoBusqueda")) {
				this.jButtonesta_evaluadoEvaluacionEmpleadoBusquedaActionPerformed(evt);
			}
			//ACTUALIZAR CAMPO
			else if(sTipo.equals("id_anioEvaluacionEmpleadoUpdate")) {
				this.jButtonid_anioEvaluacionEmpleadoUpdateActionPerformed(evt);
			}
			//BUSQUEDA GENERAL CAMPO
			else if(sTipo.equals("id_anioEvaluacionEmpleadoBusqueda")) {
				this.jButtonid_anioEvaluacionEmpleadoBusquedaActionPerformed(evt);
			}
			//ACTUALIZAR CAMPO
			else if(sTipo.equals("id_semestreEvaluacionEmpleadoUpdate")) {
				this.jButtonid_semestreEvaluacionEmpleadoUpdateActionPerformed(evt);
			}
			//BUSQUEDA GENERAL CAMPO
			else if(sTipo.equals("id_semestreEvaluacionEmpleadoBusqueda")) {
				this.jButtonid_semestreEvaluacionEmpleadoBusquedaActionPerformed(evt);
			}
			//ACTUALIZAR CAMPO
			else if(sTipo.equals("id_trimestreEvaluacionEmpleadoUpdate")) {
				this.jButtonid_trimestreEvaluacionEmpleadoUpdateActionPerformed(evt);
			}
			//BUSQUEDA GENERAL CAMPO
			else if(sTipo.equals("id_trimestreEvaluacionEmpleadoBusqueda")) {
				this.jButtonid_trimestreEvaluacionEmpleadoBusquedaActionPerformed(evt);
			}
			//ACTUALIZAR CAMPO
			else if(sTipo.equals("id_bimestreEvaluacionEmpleadoUpdate")) {
				this.jButtonid_bimestreEvaluacionEmpleadoUpdateActionPerformed(evt);
			}
			//BUSQUEDA GENERAL CAMPO
			else if(sTipo.equals("id_bimestreEvaluacionEmpleadoBusqueda")) {
				this.jButtonid_bimestreEvaluacionEmpleadoBusquedaActionPerformed(evt);
			}
			//ACTUALIZAR CAMPO
			else if(sTipo.equals("id_mesEvaluacionEmpleadoUpdate")) {
				this.jButtonid_mesEvaluacionEmpleadoUpdateActionPerformed(evt);
			}
			//BUSQUEDA GENERAL CAMPO
			else if(sTipo.equals("id_mesEvaluacionEmpleadoBusqueda")) {
				this.jButtonid_mesEvaluacionEmpleadoBusquedaActionPerformed(evt);
			}
			//BUSQUEDA GENERAL CAMPO
			else if(sTipo.equals("observacion1EvaluacionEmpleadoBusqueda")) {
				this.jButtonobservacion1EvaluacionEmpleadoBusquedaActionPerformed(evt);
			}
			//BUSQUEDA GENERAL CAMPO
			else if(sTipo.equals("observacion2EvaluacionEmpleadoBusqueda")) {
				this.jButtonobservacion2EvaluacionEmpleadoBusquedaActionPerformed(evt);
			}
			//BUSQUEDA GENERAL CAMPO
			else if(sTipo.equals("observacion3EvaluacionEmpleadoBusqueda")) {
				this.jButtonobservacion3EvaluacionEmpleadoBusquedaActionPerformed(evt);
			}
			//BUSQUEDA GENERAL CAMPO
			else if(sTipo.equals("observacion4EvaluacionEmpleadoBusqueda")) {
				this.jButtonobservacion4EvaluacionEmpleadoBusquedaActionPerformed(evt);
			}
			
			
			
			
			else if(sTipo.equals("FK_IdAnioEvaluacionEmpleado")) {
				this.jButtonFK_IdAnioEvaluacionEmpleadoActionPerformed(evt);
			}
			else if(sTipo.equals("FK_IdBimestreEvaluacionEmpleado")) {
				this.jButtonFK_IdBimestreEvaluacionEmpleadoActionPerformed(evt);
			}
			else if(sTipo.equals("FK_IdEmpleadoEvaluacionEmpleado")) {
				this.jButtonFK_IdEmpleadoEvaluacionEmpleadoActionPerformed(evt);
			}
			else if(sTipo.equals("FK_IdEmpleadoEvaluaEvaluacionEmpleado")) {
				this.jButtonFK_IdEmpleadoEvaluaEvaluacionEmpleadoActionPerformed(evt);
			}
			else if(sTipo.equals("FK_IdEstructuraEvaluacionEmpleado")) {
				this.jButtonFK_IdEstructuraEvaluacionEmpleadoActionPerformed(evt);
			}
			else if(sTipo.equals("FK_IdMesEvaluacionEmpleado")) {
				this.jButtonFK_IdMesEvaluacionEmpleadoActionPerformed(evt);
			}
			else if(sTipo.equals("FK_IdSemestreEvaluacionEmpleado")) {
				this.jButtonFK_IdSemestreEvaluacionEmpleadoActionPerformed(evt);
			}
			else if(sTipo.equals("FK_IdTipoEvaluacionEmpleadoEvaluacionEmpleado")) {
				this.jButtonFK_IdTipoEvaluacionEmpleadoEvaluacionEmpleadoActionPerformed(evt);
			}
			else if(sTipo.equals("FK_IdTrimestreEvaluacionEmpleado")) {
				this.jButtonFK_IdTrimestreEvaluacionEmpleadoActionPerformed(evt);
			}
			
			;
			
			
			EvaluacionEmpleadoBeanSwingJInternalFrameAdditional.procesarEventosVista(this.parametroGeneralUsuario,this.moduloActual,this.opcionActual,this.usuarioActual,this,FuncionTipo.AFTER,ControlTipo.BUTTON,EventoTipo.CLIC,EventoSubTipo.CLICKED,sTipo,this.evaluacionempleado,new Object(),this.evaluacionempleadoParameterGeneral,this.evaluacionempleadoReturnGeneral);
			
		} catch(Exception e) {
  			FuncionesSwing.manageException2(this, e,logger,EvaluacionEmpleadoConstantesFunciones.CLASSNAME);
			
  		} finally {
      		this.finishProcessEvaluacionEmpleado();
      	}
    }
	
	//FUNCIONA AL APLASTAR ENTER
	public void jTextFieldActionPerformedGeneral(String sTipo,ActionEvent evt) { 	  
		try {
			if(this.permiteManejarEventosControl()) {
				//SELECCIONA FILA A OBJETO ACTUAL			
				this.seleccionarFilaTablaEvaluacionEmpleadoActual();
			
				EventoGlobalTipo eventoGlobalTipo=EventoGlobalTipo.CONTROL_CHANGE;
				
				Boolean esControlTabla=false;
				Container containerParent=null;
				JTextField jTextField=null;
				
				
				//PARAMETROS LLAMAR FUNCION PARENT
				GeneralEntityParameterGeneral generalEntityParameterGeneral=new GeneralEntityParameterGeneral();			
				Boolean esUsoDesdeHijoLocal=false;
				Boolean conIrServidorAplicacionParent=false;	
				ArrayList<String> arrClasses=new ArrayList<String>();			
				//PARAMETROS LLAMAR FUNCION PARENT_FIN
				
				/*
				if(this.esUsoDesdeHijo) {
					eventoGlobalTipo=EventoGlobalTipo.FORM_HIJO_ACTUALIZAR;
				}
				*/
				
				ArrayList<Classe> classes=new ArrayList<Classe>();
				
				jTextField=(JTextField)evt.getSource();
				
				containerParent=jTextField.getParent();
						
				if(containerParent!=null && containerParent.getClass().equals(JTableMe.class)) {
					esControlTabla=true;
				}
						
				this.esControlTabla=esControlTabla;
				
				
				this.actualizarInformacion("EVENTO_CONTROL",false,this.evaluacionempleado);
				
				this.actualizarInformacion("INFO_PADRE",false,this.evaluacionempleado);
				
				EvaluacionEmpleadoBeanSwingJInternalFrameAdditional.procesarEventosVista(this.parametroGeneralUsuario,this.moduloActual,this.opcionActual,this.usuarioActual,this,FuncionTipo.BEFORE,ControlTipo.TEXTBOX,EventoTipo.CHANGE,EventoSubTipo.CHANGED,sTipo,this.evaluacionempleado,new Object(),this.evaluacionempleadoParameterGeneral,this.evaluacionempleadoReturnGeneral);
				
				


				
				EvaluacionEmpleadoBeanSwingJInternalFrameAdditional.procesarEventosVista(this.parametroGeneralUsuario,this.moduloActual,this.opcionActual,this.usuarioActual,this,FuncionTipo.AFTER,ControlTipo.TEXTBOX,EventoTipo.CHANGE,EventoSubTipo.CHANGED,sTipo,this.evaluacionempleado,new Object(),this.evaluacionempleadoParameterGeneral,this.evaluacionempleadoReturnGeneral);
				
				
				if(esUsoDesdeHijoLocal) {
					Long id=0L;
					
					generalEntityParameterGeneral.setEventoGlobalTipo(EventoGlobalTipo.FORM_HIJO_ACTUALIZAR);
					generalEntityParameterGeneral.setsDominio("Formulario");
					generalEntityParameterGeneral.setsDominioTipo(EvaluacionEmpleado.class.getName());
					
					if(this.jInternalFrameParent!=null) {
						this.jInternalFrameParent.setEventoParentGeneral(esUsoDesdeHijoLocal,"Formulario",EvaluacionEmpleado.class.getName(),sTipo,"TEXTFIELD",esControlTabla,conIrServidorAplicacionParent,
							id,jTextField, EventoGlobalTipo.FORM_HIJO_ACTUALIZAR,ControlTipo.TEXTBOX,EventoTipo.CHANGE,EventoSubTipo.CHANGED,arrClasses,
							evt,generalEntityParameterGeneral,null);
					}
				}			
				}
				
			} catch(Exception e) {
  				FuncionesSwing.manageException2(this, e,logger,EvaluacionEmpleadoConstantesFunciones.CLASSNAME);
  			}
    }
	
	public Boolean existeCambioValor(ControlTipo controlTipo,String sTipo) throws Exception {
		Boolean existeCambio=true;
		
		try {
			EvaluacionEmpleado evaluacionempleadoLocal=null;
			
			if(!this.getEsControlTabla()) {
				evaluacionempleadoLocal=this.evaluacionempleado;
			} else {
				evaluacionempleadoLocal=this.evaluacionempleadoAnterior;
			}
			
			if(controlTipo.equals(ControlTipo.TEXTBOX)) {
				


			}
		
		} catch(Exception e) {
  			FuncionesSwing.manageException2(this, e,logger,EvaluacionEmpleadoConstantesFunciones.CLASSNAME);
  		}
		
		return existeCambio;
	}
	
	public void jTextFieldFocusLostGeneral(String sTipo,java.awt.event.FocusEvent evt) { 	  
		try {
			if(this.permiteManejarEventosControl() && this.existeCambioValor(ControlTipo.TEXTBOX,sTipo)) {
				
				EventoGlobalTipo eventoGlobalTipo=EventoGlobalTipo.CONTROL_CHANGE;
				
				Boolean esControlTabla=false;
				JTextField jTextField=null;
				Container containerParent=null;
				Component componentOpposite=null;
				
				//PARAMETROS LLAMAR FUNCION PARENT
				GeneralEntityParameterGeneral generalEntityParameterGeneral=new GeneralEntityParameterGeneral();			
				Boolean esUsoDesdeHijoLocal=false;
				Boolean conIrServidorAplicacionParent=false;	
				ArrayList<String> arrClasses=new ArrayList<String>();			
				//PARAMETROS LLAMAR FUNCION PARENT_FIN
				
				/*
				if(this.esUsoDesdeHijo) {
					eventoGlobalTipo=EventoGlobalTipo.FORM_HIJO_ACTUALIZAR;
				}
				*/
				
				ArrayList<Classe> classes=new ArrayList<Classe>();
				
				jTextField=(JTextField)evt.getSource();
				
				containerParent=jTextField.getParent();
						
				componentOpposite=evt.getOppositeComponent();
				
				if((containerParent!=null && containerParent.getClass().equals(JTableMe.class))
					|| (componentOpposite!=null && componentOpposite.getClass().equals(JTableMe.class))
				) {					
					esControlTabla=true;
				}
				
				this.esControlTabla=esControlTabla;
				
				
				this.actualizarInformacion("EVENTO_CONTROL",false,this.evaluacionempleado);
				
				this.actualizarInformacion("INFO_PADRE",false,this.evaluacionempleado);
				
				EvaluacionEmpleadoBeanSwingJInternalFrameAdditional.procesarEventosVista(this.parametroGeneralUsuario,this.moduloActual,this.opcionActual,this.usuarioActual,this,FuncionTipo.BEFORE,ControlTipo.TEXTBOX,EventoTipo.CHANGE,EventoSubTipo.CHANGED,sTipo,this.evaluacionempleado,new Object(),this.evaluacionempleadoParameterGeneral,this.evaluacionempleadoReturnGeneral);
							
				
				


				
				EvaluacionEmpleadoBeanSwingJInternalFrameAdditional.procesarEventosVista(this.parametroGeneralUsuario,this.moduloActual,this.opcionActual,this.usuarioActual,this,FuncionTipo.AFTER,ControlTipo.TEXTBOX,EventoTipo.CHANGE,EventoSubTipo.CHANGED,sTipo,this.evaluacionempleado,new Object(),this.evaluacionempleadoParameterGeneral,this.evaluacionempleadoReturnGeneral);
				
				
				if(esUsoDesdeHijoLocal) {
					Long id=0L;
					
					generalEntityParameterGeneral.setEventoGlobalTipo(EventoGlobalTipo.FORM_HIJO_ACTUALIZAR);
					generalEntityParameterGeneral.setsDominio("Formulario");
					generalEntityParameterGeneral.setsDominioTipo(EvaluacionEmpleado.class.getName());
					
					if(this.jInternalFrameParent!=null) {
						this.jInternalFrameParent.setEventoParentGeneral(esUsoDesdeHijoLocal,"Formulario",EvaluacionEmpleado.class.getName(),sTipo,"TEXTFIELD",esControlTabla,conIrServidorAplicacionParent,
							id,jTextField, EventoGlobalTipo.FORM_HIJO_ACTUALIZAR,ControlTipo.TEXTBOX,EventoTipo.CHANGE,EventoSubTipo.CHANGED,arrClasses,
							evt,generalEntityParameterGeneral,null);
					}
				}			
			}
			
		} catch(Exception e) {
  			FuncionesSwing.manageException2(this, e,logger,EvaluacionEmpleadoConstantesFunciones.CLASSNAME);
  		}
    }
	
	public void jTextFieldFocusGainedGeneral(String sTipo,java.awt.event.FocusEvent evt) { 	  
		try {
			//SELECCIONA FILA A OBJETO ACTUAL			
			this.seleccionarFilaTablaEvaluacionEmpleadoActual();
			
			//SELECCIONA FILA A OBJETO ANTERIOR
			Integer intSelectedRow = this.jTableDatosEvaluacionEmpleado.getSelectedRow();
					
			if(intSelectedRow!=null && intSelectedRow>-1) {
				//ARCHITECTURE
				if(Constantes.ISUSAEJBLOGICLAYER) {
					this.evaluacionempleadoAnterior =(EvaluacionEmpleado) this.evaluacionempleadoLogic.getEvaluacionEmpleados().toArray()[this.jTableDatosEvaluacionEmpleado.convertRowIndexToModel(intSelectedRow)];
				} else if(Constantes.ISUSAEJBREMOTE || Constantes.ISUSAEJBHOME ) {
					this.evaluacionempleadoAnterior =(EvaluacionEmpleado) this.evaluacionempleados.toArray()[this.jTableDatosEvaluacionEmpleado.convertRowIndexToModel(intSelectedRow)];
				}
				//ARCHITECTURE
				
				//System.out.println(this.banco);
			}
			
		} catch(Exception e) {
  			FuncionesSwing.manageException2(this, e,logger,EvaluacionEmpleadoConstantesFunciones.CLASSNAME);
  		}
    }	
	
	//CUANDO SE CAMBIA ALGUN FORMATO(TIPO DE LETRA,NEGRILLA,ETC)
	public void jTextFieldChangedUpdateGeneral(String sTipo,JTextField jTextField,DocumentEvent evt) { 	  
		try {
			/*
			EventoGlobalTipo eventoGlobalTipo=EventoGlobalTipo.CONTROL_CHANGE;
			
			//System.out.println("UPDATE");
			
			Boolean esControlTabla=false;
			//JTextField jTextField=null;
			Container containerParent=null;
			Component componentOpposite=null;
			
			if(this.esUsoDesdeHijo) {
				eventoGlobalTipo=EventoGlobalTipo.FORM_HIJO_ACTUALIZAR;
			}
			
			EvaluacionEmpleadoBeanSwingJInternalFrameAdditional.procesarEventosVista(this.parametroGeneralUsuario,this.moduloActual,this.opcionActual,this.usuarioActual,this,FuncionTipo.BEFORE,ControlTipo.TEXTBOX,EventoTipo.CHANGE,EventoSubTipo.CHANGED,sTipo,this.evaluacionempleado,new Object(),this.evaluacionempleadoParameterGeneral,this.evaluacionempleadoReturnGeneral);
			
			ArrayList<Classe> classes=new ArrayList<Classe>();
			
			//jTextField=(JTextField)evt.getSource();
			
			containerParent=jTextField.getParent();
					
			componentOpposite=null;//evt.getOppositeComponent();
			
			if((containerParent!=null && containerParent.getClass().equals(JTableMe.class))
				|| (componentOpposite!=null && componentOpposite.getClass().equals(JTableMe.class))
			) {					
				esControlTabla=true;
			}
			
			this.esControlTabla=esControlTabla;
			
			


			
			EvaluacionEmpleadoBeanSwingJInternalFrameAdditional.procesarEventosVista(this.parametroGeneralUsuario,this.moduloActual,this.opcionActual,this.usuarioActual,this,FuncionTipo.AFTER,ControlTipo.TEXTBOX,EventoTipo.CHANGE,EventoSubTipo.CHANGED,sTipo,this.evaluacionempleado,new Object(),this.evaluacionempleadoParameterGeneral,this.evaluacionempleadoReturnGeneral);
			*/
  		} catch(Exception e) {
  			FuncionesSwing.manageException2(this, e,logger,EvaluacionEmpleadoConstantesFunciones.CLASSNAME);
  		}
    }
	
	//CUANDO SE QUITA ALGUN CARACTER
	public void jTextFieldRemoveUpdateGeneral(String sTipo,JTextField jTextField,DocumentEvent evt) { 	  
		try {
			//System.out.println("REMOVE");
			
  		} catch(Exception e) {
  			FuncionesSwing.manageException2(this, e,logger,EvaluacionEmpleadoConstantesFunciones.CLASSNAME);
  		}
    }
	
	//CUANDO SE INGRESA ALGUN CARACTER
	public void jTextFieldInsertUpdateGeneral(String sTipo,JTextField jTextField,DocumentEvent evt) { 	  
		try {
			//System.out.println("INSERT");
			
  		} catch(Exception e) {
  			FuncionesSwing.manageException2(this, e,logger,EvaluacionEmpleadoConstantesFunciones.CLASSNAME);
  		}
    }
	
	//FUNCIONA AL APLASTAR ENTER
	public void jFormattedTextFieldActionPerformedGeneral(String sTipo,ActionEvent evt) { 	  
		try {
			if(this.permiteManejarEventosControl()) {
				
				//SELECCIONA FILA A OBJETO ACTUAL			
				this.seleccionarFilaTablaEvaluacionEmpleadoActual();
				
				EventoGlobalTipo eventoGlobalTipo=EventoGlobalTipo.CONTROL_CHANGE;
				
				Boolean esControlTabla=false;
				Container containerParent=null;
				Container containerParentAux=null;
				JFormattedTextField JFormattedTextField=null;
				Component componentOpposite=null;
				
				//PARAMETROS LLAMAR FUNCION PARENT
				GeneralEntityParameterGeneral generalEntityParameterGeneral=new GeneralEntityParameterGeneral();			
				Boolean esUsoDesdeHijoLocal=false;
				Boolean conIrServidorAplicacionParent=false;	
				ArrayList<String> arrClasses=new ArrayList<String>();			
				//PARAMETROS LLAMAR FUNCION PARENT_FIN
				
				/*
				if(this.esUsoDesdeHijo) {
					eventoGlobalTipo=EventoGlobalTipo.FORM_HIJO_ACTUALIZAR;
				}
				*/
				ArrayList<Classe> classes=new ArrayList<Classe>();
				
				JFormattedTextField=(JFormattedTextField)evt.getSource();
				
				containerParentAux=JFormattedTextField.getParent();
				
				if(containerParentAux!=null && containerParentAux.getClass().equals(JDateChooser.class)) {
					containerParent=containerParentAux.getParent();
				}
				
				componentOpposite=null;//evt.getOppositeComponent();
				
				if((containerParent!=null && containerParent.getClass().equals(JTableMe.class))
					|| (componentOpposite!=null && componentOpposite.getClass().equals(JTableMe.class))
				) {					
					esControlTabla=true;
				}
				
				this.esControlTabla=esControlTabla;
				
				
				this.actualizarInformacion("EVENTO_CONTROL",false,this.evaluacionempleado);
				
				this.actualizarInformacion("INFO_PADRE",false,this.evaluacionempleado);
				
				EvaluacionEmpleadoBeanSwingJInternalFrameAdditional.procesarEventosVista(this.parametroGeneralUsuario,this.moduloActual,this.opcionActual,this.usuarioActual,this,FuncionTipo.BEFORE,ControlTipo.DATE,EventoTipo.CHANGE,EventoSubTipo.CHANGED,sTipo,this.evaluacionempleado,new Object(),this.evaluacionempleadoParameterGeneral,this.evaluacionempleadoReturnGeneral);
								
						
				


				
				EvaluacionEmpleadoBeanSwingJInternalFrameAdditional.procesarEventosVista(this.parametroGeneralUsuario,this.moduloActual,this.opcionActual,this.usuarioActual,this,FuncionTipo.AFTER,ControlTipo.DATE,EventoTipo.CHANGE,EventoSubTipo.CHANGED,sTipo,this.evaluacionempleado,new Object(),this.evaluacionempleadoParameterGeneral,this.evaluacionempleadoReturnGeneral);
				
				
				if(esUsoDesdeHijoLocal) {
					Long id=0L;
					
					generalEntityParameterGeneral.setEventoGlobalTipo(EventoGlobalTipo.FORM_HIJO_ACTUALIZAR);
					generalEntityParameterGeneral.setsDominio("Formulario");
					generalEntityParameterGeneral.setsDominioTipo(EvaluacionEmpleado.class.getName());
					
					if(this.jInternalFrameParent!=null) {
						this.jInternalFrameParent.setEventoParentGeneral(esUsoDesdeHijoLocal,"Formulario",EvaluacionEmpleado.class.getName(),sTipo,"DATE",esControlTabla,conIrServidorAplicacionParent,
							id,JFormattedTextField, EventoGlobalTipo.FORM_HIJO_ACTUALIZAR,ControlTipo.DATE,EventoTipo.CHANGE,EventoSubTipo.CHANGED,arrClasses,
							evt,generalEntityParameterGeneral,null);
					}
				}			
			}
			
		} catch(Exception e) {
  			FuncionesSwing.manageException2(this, e,logger,EvaluacionEmpleadoConstantesFunciones.CLASSNAME);
  		}
    }
	
	public void jFormattedTextFieldFocusLostGeneral(String sTipo,java.awt.event.FocusEvent evt) { 	  
		try {
			if(this.permiteManejarEventosControl() && this.existeCambioValor(ControlTipo.TEXTBOX,sTipo)) {
				EventoGlobalTipo eventoGlobalTipo=EventoGlobalTipo.CONTROL_CHANGE;
				
				Boolean esControlTabla=false;
				JTextField jTextField=null;
				Container containerParent=null;
				Container containerParentAux=null;
				Component componentOpposite=null;
				
				
				//PARAMETROS LLAMAR FUNCION PARENT
				GeneralEntityParameterGeneral generalEntityParameterGeneral=new GeneralEntityParameterGeneral();			
				Boolean esUsoDesdeHijoLocal=false;
				Boolean conIrServidorAplicacionParent=false;	
				ArrayList<String> arrClasses=new ArrayList<String>();			
				//PARAMETROS LLAMAR FUNCION PARENT_FIN
				
				/*
				if(this.esUsoDesdeHijo) {
					eventoGlobalTipo=EventoGlobalTipo.FORM_HIJO_ACTUALIZAR;
				}
				*/
				
				ArrayList<Classe> classes=new ArrayList<Classe>();
				
				jTextField=(JTextField)evt.getSource();
				
				containerParentAux=jTextField.getParent();
						
				if(containerParentAux!=null && containerParentAux.getClass().equals(JDateChooser.class)) {
					containerParent=containerParentAux.getParent();
				}
				
				componentOpposite=evt.getOppositeComponent();
				
				if((containerParent!=null && containerParent.getClass().equals(JTableMe.class))
					|| (componentOpposite!=null && componentOpposite.getClass().equals(JTableMe.class))
				) {					
					esControlTabla=true;
				}
				
				this.esControlTabla=esControlTabla;
				
				
				this.actualizarInformacion("EVENTO_CONTROL",false,this.evaluacionempleado);
				
				this.actualizarInformacion("INFO_PADRE",false,this.evaluacionempleado);
				
				EvaluacionEmpleadoBeanSwingJInternalFrameAdditional.procesarEventosVista(this.parametroGeneralUsuario,this.moduloActual,this.opcionActual,this.usuarioActual,this,FuncionTipo.BEFORE,ControlTipo.DATE,EventoTipo.CHANGE,EventoSubTipo.CHANGED,sTipo,this.evaluacionempleado,new Object(),this.evaluacionempleadoParameterGeneral,this.evaluacionempleadoReturnGeneral);
								
				
				


				
				EvaluacionEmpleadoBeanSwingJInternalFrameAdditional.procesarEventosVista(this.parametroGeneralUsuario,this.moduloActual,this.opcionActual,this.usuarioActual,this,FuncionTipo.AFTER,ControlTipo.DATE,EventoTipo.CHANGE,EventoSubTipo.CHANGED,sTipo,this.evaluacionempleado,new Object(),this.evaluacionempleadoParameterGeneral,this.evaluacionempleadoReturnGeneral);
				
				
				if(esUsoDesdeHijoLocal) {
					Long id=0L;
					
					generalEntityParameterGeneral.setEventoGlobalTipo(EventoGlobalTipo.FORM_HIJO_ACTUALIZAR);
					generalEntityParameterGeneral.setsDominio("Formulario");
					generalEntityParameterGeneral.setsDominioTipo(EvaluacionEmpleado.class.getName());
					
					if(this.jInternalFrameParent!=null) {
						this.jInternalFrameParent.setEventoParentGeneral(esUsoDesdeHijoLocal,"Formulario",EvaluacionEmpleado.class.getName(),sTipo,"TEXTFIELD",esControlTabla,conIrServidorAplicacionParent,
							id,jTextField, EventoGlobalTipo.FORM_HIJO_ACTUALIZAR,ControlTipo.TEXTBOX,EventoTipo.CHANGE,EventoSubTipo.CHANGED,arrClasses,
							evt,generalEntityParameterGeneral,null);
					}
				}			
			}
			
		} catch(Exception e) {
  			FuncionesSwing.manageException2(this, e,logger,EvaluacionEmpleadoConstantesFunciones.CLASSNAME);
  		}
    }
	
	public void jFormattedTextFieldFocusGainedGeneral(String sTipo,java.awt.event.FocusEvent evt) { 	  
		try {
			//SELECCIONA FILA A OBJETO ACTUAL			
			this.seleccionarFilaTablaEvaluacionEmpleadoActual();
			
			//SELECCIONA FILA A OBJETO ANTERIOR
			Integer intSelectedRow = this.jTableDatosEvaluacionEmpleado.getSelectedRow();
					
			if(intSelectedRow!=null && intSelectedRow>-1) {
				//ARCHITECTURE
				if(Constantes.ISUSAEJBLOGICLAYER) {
					this.evaluacionempleadoAnterior =(EvaluacionEmpleado) this.evaluacionempleadoLogic.getEvaluacionEmpleados().toArray()[this.jTableDatosEvaluacionEmpleado.convertRowIndexToModel(intSelectedRow)];
				} else if(Constantes.ISUSAEJBREMOTE || Constantes.ISUSAEJBHOME ) {
					this.evaluacionempleadoAnterior =(EvaluacionEmpleado) this.evaluacionempleados.toArray()[this.jTableDatosEvaluacionEmpleado.convertRowIndexToModel(intSelectedRow)];
				}
				//ARCHITECTURE
				
				//System.out.println(this.banco);
			}
			
		} catch(Exception e) {
  			FuncionesSwing.manageException2(this, e,logger,EvaluacionEmpleadoConstantesFunciones.CLASSNAME);
  		}
    }	
	
	public void jDateChooserFocusLostGeneral(String sTipo,java.awt.event.FocusEvent evt) { 	  
		try {
			if(this.permiteManejarEventosControl() && this.existeCambioValor(ControlTipo.DATE,sTipo)) {
				this.actualizarInformacion("EVENTO_CONTROL",false,this.evaluacionempleado);
				
				this.actualizarInformacion("INFO_PADRE",false,this.evaluacionempleado);
			}	
		} catch(Exception e) {
  			FuncionesSwing.manageException2(this, e,logger,EvaluacionEmpleadoConstantesFunciones.CLASSNAME);
  		}
    }	
	
	public void jDateChooserFocusGainedGeneral(String sTipo,java.awt.event.FocusEvent evt) { 	  
		try {
			//SELECCIONA FILA A OBJETO ACTUAL			
			this.seleccionarFilaTablaEvaluacionEmpleadoActual();
			
			//SELECCIONA FILA A OBJETO ANTERIOR
			Integer intSelectedRow = this.jTableDatosEvaluacionEmpleado.getSelectedRow();
					
			if(intSelectedRow!=null && intSelectedRow>-1) {
				//ARCHITECTURE
				if(Constantes.ISUSAEJBLOGICLAYER) {
					this.evaluacionempleadoAnterior =(EvaluacionEmpleado) this.evaluacionempleadoLogic.getEvaluacionEmpleados().toArray()[this.jTableDatosEvaluacionEmpleado.convertRowIndexToModel(intSelectedRow)];
				} else if(Constantes.ISUSAEJBREMOTE || Constantes.ISUSAEJBHOME ) {
					this.evaluacionempleadoAnterior =(EvaluacionEmpleado) this.evaluacionempleados.toArray()[this.jTableDatosEvaluacionEmpleado.convertRowIndexToModel(intSelectedRow)];
				}
				//ARCHITECTURE
				
				//System.out.println(this.banco);
			}
		} catch(Exception e) {
  			FuncionesSwing.manageException2(this, e,logger,EvaluacionEmpleadoConstantesFunciones.CLASSNAME);
  		}
    }	
	
	public void jDateChooserActionPerformedGeneral(String sTipo,ActionEvent evt) { 	  
		try {
			
			//SELECCIONA FILA A OBJETO ACTUAL			
			this.seleccionarFilaTablaEvaluacionEmpleadoActual();
				
			this.actualizarInformacion("EVENTO_CONTROL",false,this.evaluacionempleado);
			
			this.actualizarInformacion("INFO_PADRE",false,this.evaluacionempleado);
				
		} catch(Exception e) {
  			FuncionesSwing.manageException2(this, e,logger,EvaluacionEmpleadoConstantesFunciones.CLASSNAME);
  		}
    }	
	
	public void jTextAreaFocusLostGeneral(String sTipo,java.awt.event.FocusEvent evt) { 	  
		try {
			if(this.permiteManejarEventosControl() && this.existeCambioValor(ControlTipo.TEXTAREA,sTipo)) {
				EventoGlobalTipo eventoGlobalTipo=EventoGlobalTipo.CONTROL_CHANGE;
				
				Boolean esControlTabla=false;
				JTextArea jTextArea=null;
				Container containerParent=null;
				Component componentOpposite=null;
				
				//PARAMETROS LLAMAR FUNCION PARENT
				GeneralEntityParameterGeneral generalEntityParameterGeneral=new GeneralEntityParameterGeneral();			
				Boolean esUsoDesdeHijoLocal=false;
				Boolean conIrServidorAplicacionParent=false;	
				ArrayList<String> arrClasses=new ArrayList<String>();			
				//PARAMETROS LLAMAR FUNCION PARENT_FIN
				
				/*
				if(this.esUsoDesdeHijo) {
					eventoGlobalTipo=EventoGlobalTipo.FORM_HIJO_ACTUALIZAR;
				}
				*/
				
				ArrayList<Classe> classes=new ArrayList<Classe>();
				
				jTextArea=(JTextArea)evt.getSource();
				
				containerParent=jTextArea.getParent();
				componentOpposite=evt.getOppositeComponent();
				
				if((containerParent!=null && containerParent.getClass().equals(JTableMe.class))
					|| (componentOpposite!=null && componentOpposite.getClass().equals(JTableMe.class))
				) {
					esControlTabla=true;
				}
				
				this.esControlTabla=esControlTabla;
				
				
				this.actualizarInformacion("EVENTO_CONTROL",false,this.evaluacionempleado);
				
				this.actualizarInformacion("INFO_PADRE",false,this.evaluacionempleado);
				
				EvaluacionEmpleadoBeanSwingJInternalFrameAdditional.procesarEventosVista(this.parametroGeneralUsuario,this.moduloActual,this.opcionActual,this.usuarioActual,this,FuncionTipo.BEFORE,ControlTipo.TEXTAREA,EventoTipo.CHANGE,EventoSubTipo.CHANGED,sTipo,this.evaluacionempleado,new Object(),this.evaluacionempleadoParameterGeneral,this.evaluacionempleadoReturnGeneral);
							
				
				


				
				EvaluacionEmpleadoBeanSwingJInternalFrameAdditional.procesarEventosVista(this.parametroGeneralUsuario,this.moduloActual,this.opcionActual,this.usuarioActual,this,FuncionTipo.AFTER,ControlTipo.TEXTAREA,EventoTipo.CHANGE,EventoSubTipo.CHANGED,sTipo,this.evaluacionempleado,new Object(),this.evaluacionempleadoParameterGeneral,this.evaluacionempleadoReturnGeneral);
				
				
				if(esUsoDesdeHijoLocal) {
					Long id=0L;
					
					generalEntityParameterGeneral.setEventoGlobalTipo(EventoGlobalTipo.FORM_HIJO_ACTUALIZAR);
					generalEntityParameterGeneral.setsDominio("Formulario");
					generalEntityParameterGeneral.setsDominioTipo(EvaluacionEmpleado.class.getName());
					
					if(this.jInternalFrameParent!=null) {
						this.jInternalFrameParent.setEventoParentGeneral(esUsoDesdeHijoLocal,"Formulario",EvaluacionEmpleado.class.getName(),sTipo,"TEXTAREA",esControlTabla,conIrServidorAplicacionParent,
							id,jTextArea, EventoGlobalTipo.FORM_HIJO_ACTUALIZAR,ControlTipo.TEXTAREA,EventoTipo.CHANGE,EventoSubTipo.CHANGED,arrClasses,
							evt,generalEntityParameterGeneral,null);
					}
				}			
			}
			
		} catch(Exception e) {
  			FuncionesSwing.manageException2(this, e,logger,EvaluacionEmpleadoConstantesFunciones.CLASSNAME);
  		}
    }
	
	public void jTextAreaFocusGainedGeneral(String sTipo,java.awt.event.FocusEvent evt) { 	  
		try {
			if(this.permiteManejarEventosControl()) {
				//SELECCIONA FILA A OBJETO ACTUAL			
				this.seleccionarFilaTablaEvaluacionEmpleadoActual();
			
				//SELECCIONA FILA A OBJETO ANTERIOR
				Integer intSelectedRow = this.jTableDatosEvaluacionEmpleado.getSelectedRow();
						
				if(intSelectedRow!=null && intSelectedRow>-1) {
					//ARCHITECTURE
					if(Constantes.ISUSAEJBLOGICLAYER) {
						this.evaluacionempleadoAnterior =(EvaluacionEmpleado) this.evaluacionempleadoLogic.getEvaluacionEmpleados().toArray()[this.jTableDatosEvaluacionEmpleado.convertRowIndexToModel(intSelectedRow)];
					} else if(Constantes.ISUSAEJBREMOTE || Constantes.ISUSAEJBHOME ) {
						this.evaluacionempleadoAnterior =(EvaluacionEmpleado) this.evaluacionempleados.toArray()[this.jTableDatosEvaluacionEmpleado.convertRowIndexToModel(intSelectedRow)];
					}
					//ARCHITECTURE
					
					//System.out.println(this.banco);
				}
			}
		} catch(Exception e) {
  			FuncionesSwing.manageException2(this, e,logger,EvaluacionEmpleadoConstantesFunciones.CLASSNAME);
  		}
    }
	
	public void jTextAreaChangedUpdateGeneral(String sTipo,JTextArea jTextArea,DocumentEvent evt) { 	  
		try {
			/*
			EventoGlobalTipo eventoGlobalTipo=EventoGlobalTipo.CONTROL_CHANGE;
			
			//System.out.println("UPDATE");
			
			Boolean esControlTabla=false;
			//JTextArea jTextArea=null;
			Container containerParent=null;
			Component componentOpposite=null;
			
			if(this.esUsoDesdeHijo) {
				eventoGlobalTipo=EventoGlobalTipo.FORM_HIJO_ACTUALIZAR;
			}
			
			EvaluacionEmpleadoBeanSwingJInternalFrameAdditional.procesarEventosVista(this.parametroGeneralUsuario,this.moduloActual,this.opcionActual,this.usuarioActual,this,FuncionTipo.BEFORE,ControlTipo.TEXTAREA,EventoTipo.CHANGE,EventoSubTipo.CHANGED,sTipo,this.evaluacionempleado,new Object(),this.evaluacionempleadoParameterGeneral,this.evaluacionempleadoReturnGeneral);
			
			ArrayList<Classe> classes=new ArrayList<Classe>();
			
			//jTextArea=(JTextArea)evt.getSource();
			
			containerParent=jTextArea.getParent();
			componentOpposite=null;//evt.getOppositeComponent();
			
			if((containerParent!=null && containerParent.getClass().equals(JTableMe.class))
				|| (componentOpposite!=null && componentOpposite.getClass().equals(JTableMe.class))
			) {
				esControlTabla=true;
			}
			
			this.esControlTabla=esControlTabla;
			
			


			
			EvaluacionEmpleadoBeanSwingJInternalFrameAdditional.procesarEventosVista(this.parametroGeneralUsuario,this.moduloActual,this.opcionActual,this.usuarioActual,this,FuncionTipo.AFTER,ControlTipo.TEXTAREA,EventoTipo.CHANGE,EventoSubTipo.CHANGED,sTipo,this.evaluacionempleado,new Object(),this.evaluacionempleadoParameterGeneral,this.evaluacionempleadoReturnGeneral);
			
			*/
  		} catch(Exception e) {
  			FuncionesSwing.manageException2(this, e,logger,EvaluacionEmpleadoConstantesFunciones.CLASSNAME);
  		}
    }
	
	public void jTextAreaRemoveUpdateGeneral(String sTipo,JTextArea jTextArea,DocumentEvent evt) { 	  
		try {
			//System.out.println("REMOVE");
			
  		} catch(Exception e) {
  			FuncionesSwing.manageException2(this, e,logger,EvaluacionEmpleadoConstantesFunciones.CLASSNAME);
  		}
    }
	
	public void jTextAreaInsertUpdateGeneral(String sTipo,JTextArea jTextArea,DocumentEvent evt) { 	  
		try {
			
			//System.out.println("INSERT");
			
  		} catch(Exception e) {
  			FuncionesSwing.manageException2(this, e,logger,EvaluacionEmpleadoConstantesFunciones.CLASSNAME);
  		}
    }
	
	//NO EXISTE O NO ES APLICABLE
	public void jTextAreaActionPerformedGeneral(String sTipo,ActionEvent evt) { 	  
		try {
			//SELECCIONA FILA A OBJETO ACTUAL			
			this.seleccionarFilaTablaEvaluacionEmpleadoActual();
			
			this.actualizarInformacion("EVENTO_CONTROL",false,this.evaluacionempleado);
			
			this.actualizarInformacion("INFO_PADRE",false,this.evaluacionempleado);
				
		} catch(Exception e) {
  			FuncionesSwing.manageException2(this, e,logger,EvaluacionEmpleadoConstantesFunciones.CLASSNAME);
  		}
    }
	
	public void jLabelFocusLostGeneral(String sTipo,java.awt.event.FocusEvent evt) { 	  
		try {
			if(this.permiteManejarEventosControl()) {
				EventoGlobalTipo eventoGlobalTipo=EventoGlobalTipo.CONTROL_CHANGE;
				
				Boolean esControlTabla=false;
				JLabel jLabel=null;
				Container containerParent=null;
				Component componentOpposite=null;
				
				
				//PARAMETROS LLAMAR FUNCION PARENT
				GeneralEntityParameterGeneral generalEntityParameterGeneral=new GeneralEntityParameterGeneral();			
				Boolean esUsoDesdeHijoLocal=false;
				Boolean conIrServidorAplicacionParent=false;	
				ArrayList<String> arrClasses=new ArrayList<String>();			
				//PARAMETROS LLAMAR FUNCION PARENT_FIN
				
				
				/*
				if(this.esUsoDesdeHijo) {
					eventoGlobalTipo=EventoGlobalTipo.FORM_HIJO_ACTUALIZAR;
				}
				*/
				
				ArrayList<Classe> classes=new ArrayList<Classe>();
				
				jLabel=(JLabel)evt.getSource();
				
				containerParent=jLabel.getParent();
						
				componentOpposite=evt.getOppositeComponent();
				
				if((containerParent!=null && containerParent.getClass().equals(JTableMe.class))
					|| (componentOpposite!=null && componentOpposite.getClass().equals(JTableMe.class))
				) {					
					esControlTabla=true;
				}
				
				this.esControlTabla=esControlTabla;
				
				
				this.actualizarInformacion("EVENTO_CONTROL",false,this.evaluacionempleado);
				
				this.actualizarInformacion("INFO_PADRE",false,this.evaluacionempleado);
				
				EvaluacionEmpleadoBeanSwingJInternalFrameAdditional.procesarEventosVista(this.parametroGeneralUsuario,this.moduloActual,this.opcionActual,this.usuarioActual,this,FuncionTipo.BEFORE,ControlTipo.TEXTBOX,EventoTipo.CHANGE,EventoSubTipo.CHANGED,sTipo,this.evaluacionempleado,new Object(),this.evaluacionempleadoParameterGeneral,this.evaluacionempleadoReturnGeneral);
								
				
				


				
				EvaluacionEmpleadoBeanSwingJInternalFrameAdditional.procesarEventosVista(this.parametroGeneralUsuario,this.moduloActual,this.opcionActual,this.usuarioActual,this,FuncionTipo.AFTER,ControlTipo.TEXTBOX,EventoTipo.CHANGE,EventoSubTipo.CHANGED,sTipo,this.evaluacionempleado,new Object(),this.evaluacionempleadoParameterGeneral,this.evaluacionempleadoReturnGeneral);
				
				
				if(esUsoDesdeHijoLocal) {
					Long id=0L;
					
					generalEntityParameterGeneral.setEventoGlobalTipo(EventoGlobalTipo.FORM_HIJO_ACTUALIZAR);
					generalEntityParameterGeneral.setsDominio("Formulario");
					generalEntityParameterGeneral.setsDominioTipo(EvaluacionEmpleado.class.getName());
					
					if(this.jInternalFrameParent!=null) {
						this.jInternalFrameParent.setEventoParentGeneral(esUsoDesdeHijoLocal,"Formulario",EvaluacionEmpleado.class.getName(),sTipo,"TEXTFIELD",esControlTabla,conIrServidorAplicacionParent,
							id,jLabel, EventoGlobalTipo.FORM_HIJO_ACTUALIZAR,ControlTipo.TEXTBOX,EventoTipo.CHANGE,EventoSubTipo.CHANGED,arrClasses,
							evt,generalEntityParameterGeneral,null);
					}
				}			
			}	
			
		} catch(Exception e) {
  			FuncionesSwing.manageException2(this, e,logger,EvaluacionEmpleadoConstantesFunciones.CLASSNAME);
  		}
    }
	
	public void jLabelFocusGainedGeneral(String sTipo,java.awt.event.FocusEvent evt) { 	  
		try {
			//SELECCIONA FILA A OBJETO ACTUAL			
			this.seleccionarFilaTablaEvaluacionEmpleadoActual();
			
			//SELECCIONA FILA A OBJETO ANTERIOR
			Integer intSelectedRow = this.jTableDatosEvaluacionEmpleado.getSelectedRow();
					
			if(intSelectedRow!=null && intSelectedRow>-1) {
				//ARCHITECTURE
				if(Constantes.ISUSAEJBLOGICLAYER) {
					this.evaluacionempleadoAnterior =(EvaluacionEmpleado) this.evaluacionempleadoLogic.getEvaluacionEmpleados().toArray()[this.jTableDatosEvaluacionEmpleado.convertRowIndexToModel(intSelectedRow)];
				} else if(Constantes.ISUSAEJBREMOTE || Constantes.ISUSAEJBHOME ) {
					this.evaluacionempleadoAnterior =(EvaluacionEmpleado) this.evaluacionempleados.toArray()[this.jTableDatosEvaluacionEmpleado.convertRowIndexToModel(intSelectedRow)];
				}
				//ARCHITECTURE
				
				//System.out.println(this.banco);
			}
		} catch(Exception e) {
  			FuncionesSwing.manageException2(this, e,logger,EvaluacionEmpleadoConstantesFunciones.CLASSNAME);
  		}
    }
	
	//NO EXISTE O NO ES APLICABLE
	public void jLabelActionPerformedGeneral(String sTipo,ActionEvent evt) { 	  
		try {
			
			//SELECCIONA FILA A OBJETO ACTUAL			
			this.seleccionarFilaTablaEvaluacionEmpleadoActual();
				
			this.actualizarInformacion("EVENTO_CONTROL",false,this.evaluacionempleado);
			
			this.actualizarInformacion("INFO_PADRE",false,this.evaluacionempleado);
				
		} catch(Exception e) {
  			FuncionesSwing.manageException2(this, e,logger,EvaluacionEmpleadoConstantesFunciones.CLASSNAME);
  		}
    }
	
	public void jCheckBoxItemListenerGeneral(String sTipo,ItemEvent evt) { 	  
		try {
			if(this.permiteManejarEventosControl()) {
				//SELECCIONA FILA A OBJETO ACTUAL			
				this.seleccionarFilaTablaEvaluacionEmpleadoActual();
				
				EventoGlobalTipo eventoGlobalTipo=EventoGlobalTipo.CONTROL_CHANGE;
				
				Boolean esControlTabla=false;
				JCheckBox jCheckBox=null;
				Container containerParent=null;
				Component componentOpposite=null;
				
							
				//PARAMETROS LLAMAR FUNCION PARENT
				GeneralEntityParameterGeneral generalEntityParameterGeneral=new GeneralEntityParameterGeneral();			
				Boolean esUsoDesdeHijoLocal=false;
				Boolean conIrServidorAplicacionParent=false;	
				ArrayList<String> arrClasses=new ArrayList<String>();			
				//PARAMETROS LLAMAR FUNCION PARENT_FIN
				
				
				/*
				if(this.esUsoDesdeHijo) {
					eventoGlobalTipo=EventoGlobalTipo.FORM_HIJO_ACTUALIZAR;
				}
				*/
				
				ArrayList<Classe> classes=new ArrayList<Classe>();
				
				jCheckBox=(JCheckBox)evt.getSource();
				
				containerParent=jCheckBox.getParent();
						
				componentOpposite=null;//evt.getOppositeComponent();
				
				if((containerParent!=null && containerParent.getClass().equals(JTableMe.class))
					|| (componentOpposite!=null && componentOpposite.getClass().equals(JTableMe.class))
				) {					
					esControlTabla=true;
				}
				
				this.esControlTabla=esControlTabla;
				
				
				this.actualizarInformacion("EVENTO_CONTROL",false,this.evaluacionempleado);
				
				this.actualizarInformacion("INFO_PADRE",false,this.evaluacionempleado);
				
				EvaluacionEmpleadoBeanSwingJInternalFrameAdditional.procesarEventosVista(this.parametroGeneralUsuario,this.moduloActual,this.opcionActual,this.usuarioActual,this,FuncionTipo.BEFORE,ControlTipo.CHECKBOX,EventoTipo.CLIC,EventoSubTipo.CLICKED,sTipo,this.evaluacionempleado,new Object(),this.evaluacionempleadoParameterGeneral,this.evaluacionempleadoReturnGeneral);
												
				
				if(sTipo.equals("SeleccionarTodosEvaluacionEmpleado")) {
					jCheckBoxSeleccionarTodosEvaluacionEmpleadoItemListener(evt);
				
				} else if(sTipo.equals("SeleccionadosEvaluacionEmpleado")) {
					jCheckBoxSeleccionadosEvaluacionEmpleadoItemListener(evt);
				
				} else if(sTipo.equals("NuevoToolBarEvaluacionEmpleado")) {
					
				}
				
				


				
				
				EvaluacionEmpleadoBeanSwingJInternalFrameAdditional.procesarEventosVista(this.parametroGeneralUsuario,this.moduloActual,this.opcionActual,this.usuarioActual,this,FuncionTipo.AFTER,ControlTipo.CHECKBOX,EventoTipo.CLIC,EventoSubTipo.CLICKED,sTipo,this.evaluacionempleado,new Object(),this.evaluacionempleadoParameterGeneral,this.evaluacionempleadoReturnGeneral);
				
				
				if(esUsoDesdeHijoLocal) {
					Long id=0L;
					
					generalEntityParameterGeneral.setEventoGlobalTipo(EventoGlobalTipo.FORM_HIJO_ACTUALIZAR);
					generalEntityParameterGeneral.setsDominio("Formulario");
					generalEntityParameterGeneral.setsDominioTipo(EvaluacionEmpleado.class.getName());
					
					if(this.jInternalFrameParent!=null) {
						this.jInternalFrameParent.setEventoParentGeneral(esUsoDesdeHijoLocal,"Formulario",EvaluacionEmpleado.class.getName(),sTipo,"TEXTFIELD",esControlTabla,conIrServidorAplicacionParent,
							id,jCheckBox, EventoGlobalTipo.FORM_HIJO_ACTUALIZAR,ControlTipo.CHECKBOX,EventoTipo.CLIC,EventoSubTipo.CLICKED,arrClasses,
							evt,generalEntityParameterGeneral,null);
					}
				}			
			}	
			
  		} catch(Exception e) {
  			FuncionesSwing.manageException2(this, e,logger,EvaluacionEmpleadoConstantesFunciones.CLASSNAME);
  		}
    }
	
	public void jCheckBoxFocusLostGeneral(String sTipo,java.awt.event.FocusEvent evt) { 	  
		try {
			if(this.permiteManejarEventosControl() && this.existeCambioValor(ControlTipo.CHECKBOX,sTipo)) {
				EventoGlobalTipo eventoGlobalTipo=EventoGlobalTipo.CONTROL_CHANGE;
				
				Boolean esControlTabla=false;
				JCheckBox jCheckBox=null;
				Container containerParent=null;
				Component componentOpposite=null;
				
				
				//PARAMETROS LLAMAR FUNCION PARENT
				GeneralEntityParameterGeneral generalEntityParameterGeneral=new GeneralEntityParameterGeneral();			
				Boolean esUsoDesdeHijoLocal=false;
				Boolean conIrServidorAplicacionParent=false;	
				ArrayList<String> arrClasses=new ArrayList<String>();			
				//PARAMETROS LLAMAR FUNCION PARENT_FIN
				
				
				ArrayList<Classe> classes=new ArrayList<Classe>();
				
				jCheckBox=(JCheckBox)evt.getSource();
				
				containerParent=jCheckBox.getParent();
						
				componentOpposite=evt.getOppositeComponent();
				
				if((containerParent!=null && containerParent.getClass().equals(JTableMe.class))
					|| (componentOpposite!=null && componentOpposite.getClass().equals(JTableMe.class))
				) {					
					esControlTabla=true;
				}
				
				this.esControlTabla=esControlTabla;
				
				
				/*
				if(this.esUsoDesdeHijo) {
					eventoGlobalTipo=EventoGlobalTipo.FORM_HIJO_ACTUALIZAR;
				}
				*/
				
				//this.actualizarInformacion("EVENTO_CONTROL",false,this.evaluacionempleado);
				
				//this.actualizarInformacion("INFO_PADRE",false,this.evaluacionempleado);
				
				EvaluacionEmpleadoBeanSwingJInternalFrameAdditional.procesarEventosVista(this.parametroGeneralUsuario,this.moduloActual,this.opcionActual,this.usuarioActual,this,FuncionTipo.BEFORE,ControlTipo.CHECKBOX,EventoTipo.CLIC,EventoSubTipo.CLICKED,sTipo,this.evaluacionempleado,new Object(),this.evaluacionempleadoParameterGeneral,this.evaluacionempleadoReturnGeneral);
												
				
				


				
				
				EvaluacionEmpleadoBeanSwingJInternalFrameAdditional.procesarEventosVista(this.parametroGeneralUsuario,this.moduloActual,this.opcionActual,this.usuarioActual,this,FuncionTipo.AFTER,ControlTipo.CHECKBOX,EventoTipo.CLIC,EventoSubTipo.CLICKED,sTipo,this.evaluacionempleado,new Object(),this.evaluacionempleadoParameterGeneral,this.evaluacionempleadoReturnGeneral);
				
				
				if(esUsoDesdeHijoLocal) {
					Long id=0L;
				
					generalEntityParameterGeneral.setEventoGlobalTipo(EventoGlobalTipo.FORM_HIJO_ACTUALIZAR);
					generalEntityParameterGeneral.setsDominio("Formulario");
					generalEntityParameterGeneral.setsDominioTipo(EvaluacionEmpleado.class.getName());
					
					if(this.jInternalFrameParent!=null) {
						this.jInternalFrameParent.setEventoParentGeneral(esUsoDesdeHijoLocal,"Formulario",EvaluacionEmpleado.class.getName(),sTipo,"TEXTFIELD",esControlTabla,conIrServidorAplicacionParent,
							id,jCheckBox, EventoGlobalTipo.FORM_HIJO_ACTUALIZAR,ControlTipo.CHECKBOX,EventoTipo.CLIC,EventoSubTipo.CLICKED,arrClasses,
							evt,generalEntityParameterGeneral,null);
					}
				}			
			}
			
  		} catch(Exception e) {
  			FuncionesSwing.manageException2(this, e,logger,EvaluacionEmpleadoConstantesFunciones.CLASSNAME);
  		}
    }
	
	public void jCheckBoxFocusGainedGeneral(String sTipo,java.awt.event.FocusEvent evt) { 	  
		try {
			if(this.permiteManejarEventosControl()) {
				//SELECCIONA FILA A OBJETO ACTUAL			
				this.seleccionarFilaTablaEvaluacionEmpleadoActual();
			
				//SELECCIONA FILA A OBJETO ANTERIOR
				Integer intSelectedRow = this.jTableDatosEvaluacionEmpleado.getSelectedRow();
						
				if(intSelectedRow!=null && intSelectedRow>-1) {
					//ARCHITECTURE
					if(Constantes.ISUSAEJBLOGICLAYER) {
						this.evaluacionempleadoAnterior =(EvaluacionEmpleado) this.evaluacionempleadoLogic.getEvaluacionEmpleados().toArray()[this.jTableDatosEvaluacionEmpleado.convertRowIndexToModel(intSelectedRow)];
					} else if(Constantes.ISUSAEJBREMOTE || Constantes.ISUSAEJBHOME ) {
						this.evaluacionempleadoAnterior =(EvaluacionEmpleado) this.evaluacionempleados.toArray()[this.jTableDatosEvaluacionEmpleado.convertRowIndexToModel(intSelectedRow)];
					}
					//ARCHITECTURE
					
					//System.out.println(this.banco);
				}
			}
  		} catch(Exception e) {
  			FuncionesSwing.manageException2(this, e,logger,EvaluacionEmpleadoConstantesFunciones.CLASSNAME);
  		}
    }
	
	public void jCheckBoxActionPerformedGeneral(String sTipo,ActionEvent evt) { 	  
		try {
			if(this.permiteManejarEventosControl()) {
				
				//SELECCIONA FILA A OBJETO ACTUAL			
				this.seleccionarFilaTablaEvaluacionEmpleadoActual();
				
				this.actualizarInformacion("EVENTO_CONTROL",false,this.evaluacionempleado);
				
				this.actualizarInformacion("INFO_PADRE",false,this.evaluacionempleado);
				
				EvaluacionEmpleadoBeanSwingJInternalFrameAdditional.procesarEventosVista(this.parametroGeneralUsuario,this.moduloActual,this.opcionActual,this.usuarioActual,this,FuncionTipo.BEFORE,ControlTipo.CHECKBOX,EventoTipo.CLIC,EventoSubTipo.CLICKED,sTipo,this.evaluacionempleado,new Object(),this.evaluacionempleadoParameterGeneral,this.evaluacionempleadoReturnGeneral);
				
				
				EvaluacionEmpleadoBeanSwingJInternalFrameAdditional.procesarEventosVista(this.parametroGeneralUsuario,this.moduloActual,this.opcionActual,this.usuarioActual,this,FuncionTipo.AFTER,ControlTipo.CHECKBOX,EventoTipo.CLIC,EventoSubTipo.CLICKED,sTipo,this.evaluacionempleado,new Object(),this.evaluacionempleadoParameterGeneral,this.evaluacionempleadoReturnGeneral);
			}
			
  		} catch(Exception e) {
  			FuncionesSwing.manageException2(this, e,logger,EvaluacionEmpleadoConstantesFunciones.CLASSNAME);
  		}
    }
	
	//NO SE UTILIZA, SE USA EL DE ABAJO, IGUAL SE DEJA EL CODIGO COMO RESPALDO Y ES CASI IGUAL
	//ERROR:SI SE USA,AL HACER CLIC EN EL MISMO ELEMENTO O EJECUTAR SELECTEDITEM, SIEMPRE SE EJECUTA COMO SI ESCOGIERA OTRO ELEMENTO(NO DEBERIA)
	//@SuppressWarnings("rawtypes")
	public void jComboBoxActionPerformedGeneral(String sTipo,ActionEvent evt) {		
		try {
			/*		
			EventoGlobalTipo eventoGlobalTipo=EventoGlobalTipo.CONTROL_CHANGE;
			
			if(this.esUsoDesdeHijo) {
				eventoGlobalTipo=EventoGlobalTipo.FORM_HIJO_ACTUALIZAR;
			}
			
			Container containerParent=null;
			Component componentOpposite=null;
			Boolean esControlTabla=false;
				
			ArrayList<Classe> classes=new ArrayList<Classe>();
			
			EvaluacionEmpleadoBeanSwingJInternalFrameAdditional.procesarEventosVista(this.parametroGeneralUsuario,this.moduloActual,this.opcionActual,this.usuarioActual,this,FuncionTipo.BEFORE,ControlTipo.COMBOBOX,EventoTipo.CHANGE,EventoSubTipo.CLICKED,sTipo,this.evaluacionempleado,new Object(),this.evaluacionempleadoParameterGeneral,this.evaluacionempleadoReturnGeneral);
			JComboBox jComboBoxGenerico=null;						
			
			if(evt.getSource().getClass().equals(JComboBox.class)
				|| evt.getSource().getClass().equals(JComboBoxMe.class)) {
					
				jComboBoxGenerico=(JComboBox)evt.getSource();
				
				containerParent=jComboBoxGenerico.getParent();
				
				componentOpposite=null;//evt.getOppositeComponent();
				
				if((containerParent!=null && containerParent.getClass().equals(JTableMe.class))
					|| (componentOpposite!=null && componentOpposite.getClass().equals(JTableMe.class))
				) {					
					esControlTabla=true;
				}
				
				this.esControlTabla=esControlTabla;
			}
			
			String sFinalQueryCombo="";
			
			


			
			EvaluacionEmpleadoBeanSwingJInternalFrameAdditional.procesarEventosVista(this.parametroGeneralUsuario,this.moduloActual,this.opcionActual,this.usuarioActual,this,FuncionTipo.AFTER,ControlTipo.COMBOBOX,EventoTipo.CHANGE,EventoSubTipo.CHANGED,sTipo,this.evaluacionempleado,new Object(),this.evaluacionempleadoParameterGeneral,this.evaluacionempleadoReturnGeneral);
			*/						
  		} catch(Exception e) {
  			FuncionesSwing.manageException2(this, e,logger,EvaluacionEmpleadoConstantesFunciones.CLASSNAME);
  		}		
    }
	
	@SuppressWarnings("rawtypes")
	public void jComboBoxItemStateChangedGeneral(String sTipo,ItemEvent evt) { 	  
		try {
			if (evt.getStateChange() == ItemEvent.SELECTED && this.permiteManejarEventosControl()) {
				//SELECCIONA FILA A OBJETO ACTUAL			
				this.seleccionarFilaTablaEvaluacionEmpleadoActual();
			
				//PARAMETROS LLAMAR FUNCION PARENT
				GeneralEntityParameterGeneral generalEntityParameterGeneral=new GeneralEntityParameterGeneral();			
				Boolean esUsoDesdeHijoLocal=false;
				Boolean conIrServidorAplicacionParent=false;	
				ArrayList<String> arrClasses=new ArrayList<String>();			
				//PARAMETROS LLAMAR FUNCION PARENT_FIN
			
			
				EventoGlobalTipo eventoGlobalTipo=EventoGlobalTipo.CONTROL_CHANGE;
				
				/*
				if(this.esUsoDesdeHijo) {
					eventoGlobalTipo=EventoGlobalTipo.FORM_HIJO_ACTUALIZAR;
				}
				*/
				
				Container containerParent=null;
				Component componentOpposite=null;
				Boolean esControlTabla=false;
				
				ArrayList<Classe> classes=new ArrayList<Classe>();
				
				JComboBox jComboBoxGenerico=null;						
				
				if(evt.getSource().getClass().equals(JComboBox.class)
					|| evt.getSource().getClass().equals(JComboBoxMe.class)) {
						
					jComboBoxGenerico=(JComboBox)evt.getSource();
					
					containerParent=jComboBoxGenerico.getParent();
					
					componentOpposite=null;//evt.getOppositeComponent();
					
					if((containerParent!=null && containerParent.getClass().equals(JTableMe.class))
					|| (componentOpposite!=null && componentOpposite.getClass().equals(JTableMe.class))
					) {					
						esControlTabla=true;
					}		
					
					this.esControlTabla=esControlTabla;
				}
				
				
				this.actualizarInformacion("EVENTO_CONTROL",false,this.evaluacionempleado);
				
				this.actualizarInformacion("INFO_PADRE",false,this.evaluacionempleado);
				
				EvaluacionEmpleadoBeanSwingJInternalFrameAdditional.procesarEventosVista(this.parametroGeneralUsuario,this.moduloActual,this.opcionActual,this.usuarioActual,this,FuncionTipo.BEFORE,ControlTipo.COMBOBOX,EventoTipo.CHANGE,EventoSubTipo.CLICKED,sTipo,this.evaluacionempleado,new Object(),this.evaluacionempleadoParameterGeneral,this.evaluacionempleadoReturnGeneral);
				
				
				String sFinalQueryCombo="";
				
				


				
				EvaluacionEmpleadoBeanSwingJInternalFrameAdditional.procesarEventosVista(this.parametroGeneralUsuario,this.moduloActual,this.opcionActual,this.usuarioActual,this,FuncionTipo.AFTER,ControlTipo.COMBOBOX,EventoTipo.CHANGE,EventoSubTipo.CHANGED,sTipo,this.evaluacionempleado,new Object(),this.evaluacionempleadoParameterGeneral,this.evaluacionempleadoReturnGeneral);
				
				if(esUsoDesdeHijoLocal) {
					Long id=0L;
				
					generalEntityParameterGeneral.setEventoGlobalTipo(EventoGlobalTipo.FORM_HIJO_ACTUALIZAR);
					generalEntityParameterGeneral.setsDominio("Formulario");
					generalEntityParameterGeneral.setsDominioTipo(EvaluacionEmpleado.class.getName());
								
					if(this.jInternalFrameParent!=null) {
						this.jInternalFrameParent.setEventoParentGeneral(esUsoDesdeHijoLocal,"Formulario",EvaluacionEmpleado.class.getName(),sTipo,"COMBOBOX",esControlTabla,conIrServidorAplicacionParent,
							id,jComboBoxGenerico, EventoGlobalTipo.FORM_HIJO_ACTUALIZAR,ControlTipo.COMBOBOX,EventoTipo.CHANGE,EventoSubTipo.CHANGED,arrClasses,
							evt,generalEntityParameterGeneral,null);
					}
				}			
			}
  		} catch(Exception e) {
  			FuncionesSwing.manageException2(this, e,logger,EvaluacionEmpleadoConstantesFunciones.CLASSNAME);
  		}
    }
	
	//@SuppressWarnings("rawtypes")
	public void jComboBoxFocusLostGeneral(String sTipo,java.awt.event.FocusEvent evt) { 	  
		//MANEJADO EN ITEMLISTENER
		/*
		try {
			if(this.permiteManejarEventosControl()) {
				EventoGlobalTipo eventoGlobalTipo=EventoGlobalTipo.CONTROL_CHANGE;
				
				
				//if(this.esUsoDesdeHijo) {
				//	eventoGlobalTipo=EventoGlobalTipo.FORM_HIJO_ACTUALIZAR;
				//}
				
				
				Container containerParent=null;
				Component componentOpposite=null;
				Boolean esControlTabla=false;
				
				ArrayList<Classe> classes=new ArrayList<Classe>();
				
				//PARAMETROS LLAMAR FUNCION PARENT
				GeneralEntityParameterGeneral generalEntityParameterGeneral=new GeneralEntityParameterGeneral();			
				Boolean esUsoDesdeHijoLocal=false;
				Boolean conIrServidorAplicacionParent=false;	
				ArrayList<String> arrClasses=new ArrayList<String>();			
				//PARAMETROS LLAMAR FUNCION PARENT_FIN
			
				this.actualizarInformacion("EVENTO_CONTROL",false,this.evaluacionempleado);
				
				this.actualizarInformacion("INFO_PADRE",false,this.evaluacionempleado);
				
				EvaluacionEmpleadoBeanSwingJInternalFrameAdditional.procesarEventosVista(this.parametroGeneralUsuario,this.moduloActual,this.opcionActual,this.usuarioActual,this,FuncionTipo.BEFORE,ControlTipo.COMBOBOX,EventoTipo.CHANGE,EventoSubTipo.CLICKED,sTipo,this.evaluacionempleado,new Object(),this.evaluacionempleadoParameterGeneral,this.evaluacionempleadoReturnGeneral);
				JComboBox jComboBoxGenerico=null;						
				
				if(evt.getSource().getClass().equals(JComboBox.class)
					|| evt.getSource().getClass().equals(JComboBoxMe.class)) {
						
					jComboBoxGenerico=(JComboBox)evt.getSource();
					
					containerParent=jComboBoxGenerico.getParent();
					
					componentOpposite=evt.getOppositeComponent();
					
					if((containerParent!=null && containerParent.getClass().equals(JTableMe.class))
					|| (componentOpposite!=null && componentOpposite.getClass().equals(JTableMe.class))
					) {					
						esControlTabla=true;
					}
					
					this.esControlTabla=esControlTabla;
				}
				
				String sFinalQueryCombo="";
				
				


				
				EvaluacionEmpleadoBeanSwingJInternalFrameAdditional.procesarEventosVista(this.parametroGeneralUsuario,this.moduloActual,this.opcionActual,this.usuarioActual,this,FuncionTipo.AFTER,ControlTipo.COMBOBOX,EventoTipo.CHANGE,EventoSubTipo.CHANGED,sTipo,this.evaluacionempleado,new Object(),this.evaluacionempleadoParameterGeneral,this.evaluacionempleadoReturnGeneral);
				
				
				if(esUsoDesdeHijoLocal) {
					Long id=0L;
					
					generalEntityParameterGeneral.setEventoGlobalTipo(EventoGlobalTipo.FORM_HIJO_ACTUALIZAR);
					generalEntityParameterGeneral.setsDominio("Formulario");
					generalEntityParameterGeneral.setsDominioTipo(EvaluacionEmpleado.class.getName());
				
					if(this.jInternalFrameParent!=null) {
						this.jInternalFrameParent.setEventoParentGeneral(esUsoDesdeHijoLocal,"Formulario",EvaluacionEmpleado.class.getName(),sTipo,"TEXTFIELD",esControlTabla,conIrServidorAplicacionParent,
							id,jComboBoxGenerico, EventoGlobalTipo.FORM_HIJO_ACTUALIZAR,ControlTipo.COMBOBOX,EventoTipo.CHANGE,EventoSubTipo.CHANGED,arrClasses,
							evt,generalEntityParameterGeneral,null);
					}
				}			
			}
			
  		} catch(Exception e) {
  			FuncionesSwing.manageException2(this, e,logger,EvaluacionEmpleadoConstantesFunciones.CLASSNAME);
  		}
		
		*/
    }
	
	public void jComboBoxFocusGainedGeneral(String sTipo,java.awt.event.FocusEvent evt) { 	  
		try {
			//SELECCIONA FILA A OBJETO ACTUAL			
			this.seleccionarFilaTablaEvaluacionEmpleadoActual();
			
			//SELECCIONA FILA A OBJETO ANTERIOR
			Integer intSelectedRow = this.jTableDatosEvaluacionEmpleado.getSelectedRow();
					
			if(intSelectedRow!=null && intSelectedRow>-1) {
				//ARCHITECTURE
				if(Constantes.ISUSAEJBLOGICLAYER) {
					this.evaluacionempleadoAnterior =(EvaluacionEmpleado) this.evaluacionempleadoLogic.getEvaluacionEmpleados().toArray()[this.jTableDatosEvaluacionEmpleado.convertRowIndexToModel(intSelectedRow)];
				} else if(Constantes.ISUSAEJBREMOTE || Constantes.ISUSAEJBHOME ) {
					this.evaluacionempleadoAnterior =(EvaluacionEmpleado) this.evaluacionempleados.toArray()[this.jTableDatosEvaluacionEmpleado.convertRowIndexToModel(intSelectedRow)];
				}
				//ARCHITECTURE
				
				//System.out.println(this.banco);
			}
			
		} catch(Exception e) {
  			FuncionesSwing.manageException2(this, e,logger,EvaluacionEmpleadoConstantesFunciones.CLASSNAME);
  		}
    }		
	
	public void tableValueChangedGeneral(String sTipo,ListSelectionEvent evt) { 	  
		try {
			if(this.permiteManejarEventosControl()) {
				EvaluacionEmpleadoBeanSwingJInternalFrameAdditional.procesarEventosVista(this.parametroGeneralUsuario,this.moduloActual,this.opcionActual,this.usuarioActual,this,FuncionTipo.BEFORE,ControlTipo.TABLE,EventoTipo.CHANGE,EventoSubTipo.CHANGED,sTipo,this.evaluacionempleado,new Object(),this.evaluacionempleadoParameterGeneral,this.evaluacionempleadoReturnGeneral);
				
				if(sTipo.equals("TableDatosSeleccionarEvaluacionEmpleado")) {
					//BYDAN_DESHABILITADO
					//try {jTableDatosEvaluacionEmpleadoListSelectionListener(e);}catch(Exception e1){e1.printStackTrace();}
					
					//SOLO CUANDO MOUSE ES SOLTADO
					if (!evt.getValueIsAdjusting()) {
						//SELECCIONA FILA A OBJETO ACTUAL
						Integer intSelectedRow = this.jTableDatosEvaluacionEmpleado.getSelectedRow();
						
						if(intSelectedRow!=null && intSelectedRow>-1) {
							//ARCHITECTURE
							if(Constantes.ISUSAEJBLOGICLAYER) {
								this.evaluacionempleado =(EvaluacionEmpleado) this.evaluacionempleadoLogic.getEvaluacionEmpleados().toArray()[this.jTableDatosEvaluacionEmpleado.convertRowIndexToModel(intSelectedRow)];
							} else if(Constantes.ISUSAEJBREMOTE || Constantes.ISUSAEJBHOME ) {
								this.evaluacionempleado =(EvaluacionEmpleado) this.evaluacionempleados.toArray()[this.jTableDatosEvaluacionEmpleado.convertRowIndexToModel(intSelectedRow)];
							}
							//ARCHITECTURE
							
							//System.out.println(this.evaluacionempleado);
						}
					}
					
				} else if(sTipo.equals("jButtonCancelarEvaluacionEmpleado")) {
				
				}
				
				EvaluacionEmpleadoBeanSwingJInternalFrameAdditional.procesarEventosVista(this.parametroGeneralUsuario,this.moduloActual,this.opcionActual,this.usuarioActual,this,FuncionTipo.AFTER,ControlTipo.TABLE,EventoTipo.CHANGE,EventoSubTipo.CHANGED,sTipo,this.evaluacionempleado,new Object(),this.evaluacionempleadoParameterGeneral,this.evaluacionempleadoReturnGeneral);
			}
			
  		} catch(Exception e) {
  			FuncionesSwing.manageException2(this, e,logger,EvaluacionEmpleadoConstantesFunciones.CLASSNAME);
  		}
    }
	
	public void tableMouseAdapterGeneral(String sTipo,MouseEvent evt) { 	  
		try {
			EvaluacionEmpleadoBeanSwingJInternalFrameAdditional.procesarEventosVista(this.parametroGeneralUsuario,this.moduloActual,this.opcionActual,this.usuarioActual,this,FuncionTipo.BEFORE,ControlTipo.TABLE,EventoTipo.MOUSE,EventoSubTipo.CLICKED,sTipo,this.evaluacionempleado,new Object(),this.evaluacionempleadoParameterGeneral,this.evaluacionempleadoReturnGeneral);
			
			if(sTipo.equals("DatosSeleccionarEvaluacionEmpleado")) {
				if (evt.getClickCount() == 2) {
					jButtonIdActionPerformed(null,jTableDatosEvaluacionEmpleado.getSelectedRow(),false,false);
				}	
			} else if(sTipo.equals("jButtonCancelarEvaluacionEmpleado")) {
			
			}
			
			EvaluacionEmpleadoBeanSwingJInternalFrameAdditional.procesarEventosVista(this.parametroGeneralUsuario,this.moduloActual,this.opcionActual,this.usuarioActual,this,FuncionTipo.AFTER,ControlTipo.TABLE,EventoTipo.MOUSE,EventoSubTipo.CLICKED,sTipo,this.evaluacionempleado,new Object(),this.evaluacionempleadoParameterGeneral,this.evaluacionempleadoReturnGeneral);
  		} catch(Exception e) {
  			FuncionesSwing.manageException2(this, e,logger,EvaluacionEmpleadoConstantesFunciones.CLASSNAME);
  		}
    }
	
	;
	
	public void jButtonActionPerformedTecladoGeneral(String sTipo,ActionEvent evt) { 	  
		try {
			this.startProcessEvaluacionEmpleado();
			
			EvaluacionEmpleadoBeanSwingJInternalFrameAdditional.procesarEventosVista(this.parametroGeneralUsuario,this.moduloActual,this.opcionActual,this.usuarioActual,this,FuncionTipo.BEFORE,ControlTipo.KEY,EventoTipo.CLIC,EventoSubTipo.CLICKED,sTipo,this.evaluacionempleado,new Object(),this.evaluacionempleadoParameterGeneral,this.evaluacionempleadoReturnGeneral);
			
			if(sTipo.equals("NuevoEvaluacionEmpleado")) {
				jButtonNuevoEvaluacionEmpleadoActionPerformed(evt,false);
				
			} else if(sTipo.equals("DuplicarEvaluacionEmpleado")) {
				jButtonDuplicarEvaluacionEmpleadoActionPerformed(evt,false);
				
			} else if(sTipo.equals("CopiarEvaluacionEmpleado")) {
				jButtonCopiarEvaluacionEmpleadoActionPerformed(evt);
				
			} else if(sTipo.equals("VerFormEvaluacionEmpleado")) {
				jButtonVerFormEvaluacionEmpleadoActionPerformed(evt);
				
			} else if(sTipo.equals("NuevoRelacionesEvaluacionEmpleado")) {
				jButtonNuevoEvaluacionEmpleadoActionPerformed(evt,true);
				
			} else if(sTipo.equals("ModificarEvaluacionEmpleado")) {
				jButtonModificarEvaluacionEmpleadoActionPerformed(evt);
				
			} else if(sTipo.equals("ActualizarEvaluacionEmpleado")) {
				jButtonActualizarEvaluacionEmpleadoActionPerformed(evt);
				
			} else if(sTipo.equals("EliminarEvaluacionEmpleado")) {
				jButtonEliminarEvaluacionEmpleadoActionPerformed(evt);
				
			} else if(sTipo.equals("GuardarCambiosTablaEvaluacionEmpleado")) {
				jButtonGuardarCambiosEvaluacionEmpleadoActionPerformed(evt);
				
			} else if(sTipo.equals("CancelarEvaluacionEmpleado")) {
				jButtonCancelarEvaluacionEmpleadoActionPerformed(evt);
				
			} else if(sTipo.equals("CerrarEvaluacionEmpleado")) {
				jButtonCerrarEvaluacionEmpleadoActionPerformed(evt);
				
			} else if(sTipo.equals("GuardarCambiosEvaluacionEmpleado")) {
				jButtonGuardarCambiosEvaluacionEmpleadoActionPerformed(evt);
			
			} else if(sTipo.equals("NuevoGuardarCambiosEvaluacionEmpleado")) {
				jButtonNuevoGuardarCambiosEvaluacionEmpleadoActionPerformed(evt);
			
			} else if(sTipo.equals("AbrirOrderByEvaluacionEmpleado")) {
				jButtonAbrirOrderByEvaluacionEmpleadoActionPerformed(evt);
			
			} else if(sTipo.equals("RecargarInformacionEvaluacionEmpleado")) {
				jButtonRecargarInformacionEvaluacionEmpleadoActionPerformed(evt);
			
			} else if(sTipo.equals("AnterioresEvaluacionEmpleado")) {
				jButtonAnterioresEvaluacionEmpleadoActionPerformed(evt);			
			
			}  else if(sTipo.equals("SiguientesEvaluacionEmpleado")) {
				jButtonSiguientesEvaluacionEmpleadoActionPerformed(evt);			
			} 
			
			
			//BUSQUEDA GENERAL CAMPO
			else if(sTipo.equals("idEvaluacionEmpleadoBusqueda")) {
				this.jButtonidEvaluacionEmpleadoBusquedaActionPerformed(evt);
			}
			//ACTUALIZAR CAMPO
			else if(sTipo.equals("id_empresaEvaluacionEmpleadoUpdate")) {
				this.jButtonid_empresaEvaluacionEmpleadoUpdateActionPerformed(evt);
			}
			//BUSQUEDA GENERAL CAMPO
			else if(sTipo.equals("id_empresaEvaluacionEmpleadoBusqueda")) {
				this.jButtonid_empresaEvaluacionEmpleadoBusquedaActionPerformed(evt);
			}
			//ACTUALIZAR CAMPO
			else if(sTipo.equals("id_sucursalEvaluacionEmpleadoUpdate")) {
				this.jButtonid_sucursalEvaluacionEmpleadoUpdateActionPerformed(evt);
			}
			//BUSQUEDA GENERAL CAMPO
			else if(sTipo.equals("id_sucursalEvaluacionEmpleadoBusqueda")) {
				this.jButtonid_sucursalEvaluacionEmpleadoBusquedaActionPerformed(evt);
			}
			//ACTUALIZAR CAMPO
			else if(sTipo.equals("id_ejercicioEvaluacionEmpleadoUpdate")) {
				this.jButtonid_ejercicioEvaluacionEmpleadoUpdateActionPerformed(evt);
			}
			//BUSQUEDA GENERAL CAMPO
			else if(sTipo.equals("id_ejercicioEvaluacionEmpleadoBusqueda")) {
				this.jButtonid_ejercicioEvaluacionEmpleadoBusquedaActionPerformed(evt);
			}
			//ACTUALIZAR CAMPO
			else if(sTipo.equals("id_periodoEvaluacionEmpleadoUpdate")) {
				this.jButtonid_periodoEvaluacionEmpleadoUpdateActionPerformed(evt);
			}
			//BUSQUEDA GENERAL CAMPO
			else if(sTipo.equals("id_periodoEvaluacionEmpleadoBusqueda")) {
				this.jButtonid_periodoEvaluacionEmpleadoBusquedaActionPerformed(evt);
			}
			//ACTUALIZAR CAMPO
			else if(sTipo.equals("id_estructuraEvaluacionEmpleadoUpdate")) {
				this.jButtonid_estructuraEvaluacionEmpleadoUpdateActionPerformed(evt);
			}
			//BUSQUEDA GENERAL CAMPO
			else if(sTipo.equals("id_estructuraEvaluacionEmpleadoBusqueda")) {
				this.jButtonid_estructuraEvaluacionEmpleadoBusquedaActionPerformed(evt);
			}
			//ACTUALIZAR CAMPO
			else if(sTipo.equals("id_empleadoEvaluacionEmpleadoUpdate")) {
				this.jButtonid_empleadoEvaluacionEmpleadoUpdateActionPerformed(evt);
			}
			//BUSQUEDA GENERAL CAMPO
			else if(sTipo.equals("id_empleadoEvaluacionEmpleadoBusqueda")) {
				this.jButtonid_empleadoEvaluacionEmpleadoBusquedaActionPerformed(evt);
			}
			//ACTUALIZAR CAMPO
			else if(sTipo.equals("id_empleado_evaluaEvaluacionEmpleadoUpdate")) {
				this.jButtonid_empleado_evaluaEvaluacionEmpleadoUpdateActionPerformed(evt);
			}
			//BUSQUEDA GENERAL CAMPO
			else if(sTipo.equals("id_empleado_evaluaEvaluacionEmpleadoBusqueda")) {
				this.jButtonid_empleado_evaluaEvaluacionEmpleadoBusquedaActionPerformed(evt);
			}
			//ACTUALIZAR CAMPO
			else if(sTipo.equals("id_tipo_evaluacion_empleadoEvaluacionEmpleadoUpdate")) {
				this.jButtonid_tipo_evaluacion_empleadoEvaluacionEmpleadoUpdateActionPerformed(evt);
			}
			//BUSQUEDA GENERAL CAMPO
			else if(sTipo.equals("id_tipo_evaluacion_empleadoEvaluacionEmpleadoBusqueda")) {
				this.jButtonid_tipo_evaluacion_empleadoEvaluacionEmpleadoBusquedaActionPerformed(evt);
			}
			//BUSQUEDA GENERAL CAMPO
			else if(sTipo.equals("fechaEvaluacionEmpleadoBusqueda")) {
				this.jButtonfechaEvaluacionEmpleadoBusquedaActionPerformed(evt);
			}
			//BUSQUEDA GENERAL CAMPO
			else if(sTipo.equals("esta_evaluadoEvaluacionEmpleadoBusqueda")) {
				this.jButtonesta_evaluadoEvaluacionEmpleadoBusquedaActionPerformed(evt);
			}
			//ACTUALIZAR CAMPO
			else if(sTipo.equals("id_anioEvaluacionEmpleadoUpdate")) {
				this.jButtonid_anioEvaluacionEmpleadoUpdateActionPerformed(evt);
			}
			//BUSQUEDA GENERAL CAMPO
			else if(sTipo.equals("id_anioEvaluacionEmpleadoBusqueda")) {
				this.jButtonid_anioEvaluacionEmpleadoBusquedaActionPerformed(evt);
			}
			//ACTUALIZAR CAMPO
			else if(sTipo.equals("id_semestreEvaluacionEmpleadoUpdate")) {
				this.jButtonid_semestreEvaluacionEmpleadoUpdateActionPerformed(evt);
			}
			//BUSQUEDA GENERAL CAMPO
			else if(sTipo.equals("id_semestreEvaluacionEmpleadoBusqueda")) {
				this.jButtonid_semestreEvaluacionEmpleadoBusquedaActionPerformed(evt);
			}
			//ACTUALIZAR CAMPO
			else if(sTipo.equals("id_trimestreEvaluacionEmpleadoUpdate")) {
				this.jButtonid_trimestreEvaluacionEmpleadoUpdateActionPerformed(evt);
			}
			//BUSQUEDA GENERAL CAMPO
			else if(sTipo.equals("id_trimestreEvaluacionEmpleadoBusqueda")) {
				this.jButtonid_trimestreEvaluacionEmpleadoBusquedaActionPerformed(evt);
			}
			//ACTUALIZAR CAMPO
			else if(sTipo.equals("id_bimestreEvaluacionEmpleadoUpdate")) {
				this.jButtonid_bimestreEvaluacionEmpleadoUpdateActionPerformed(evt);
			}
			//BUSQUEDA GENERAL CAMPO
			else if(sTipo.equals("id_bimestreEvaluacionEmpleadoBusqueda")) {
				this.jButtonid_bimestreEvaluacionEmpleadoBusquedaActionPerformed(evt);
			}
			//ACTUALIZAR CAMPO
			else if(sTipo.equals("id_mesEvaluacionEmpleadoUpdate")) {
				this.jButtonid_mesEvaluacionEmpleadoUpdateActionPerformed(evt);
			}
			//BUSQUEDA GENERAL CAMPO
			else if(sTipo.equals("id_mesEvaluacionEmpleadoBusqueda")) {
				this.jButtonid_mesEvaluacionEmpleadoBusquedaActionPerformed(evt);
			}
			//BUSQUEDA GENERAL CAMPO
			else if(sTipo.equals("observacion1EvaluacionEmpleadoBusqueda")) {
				this.jButtonobservacion1EvaluacionEmpleadoBusquedaActionPerformed(evt);
			}
			//BUSQUEDA GENERAL CAMPO
			else if(sTipo.equals("observacion2EvaluacionEmpleadoBusqueda")) {
				this.jButtonobservacion2EvaluacionEmpleadoBusquedaActionPerformed(evt);
			}
			//BUSQUEDA GENERAL CAMPO
			else if(sTipo.equals("observacion3EvaluacionEmpleadoBusqueda")) {
				this.jButtonobservacion3EvaluacionEmpleadoBusquedaActionPerformed(evt);
			}
			//BUSQUEDA GENERAL CAMPO
			else if(sTipo.equals("observacion4EvaluacionEmpleadoBusqueda")) {
				this.jButtonobservacion4EvaluacionEmpleadoBusquedaActionPerformed(evt);
			}
			
			EvaluacionEmpleadoBeanSwingJInternalFrameAdditional.procesarEventosVista(this.parametroGeneralUsuario,this.moduloActual,this.opcionActual,this.usuarioActual,this,FuncionTipo.AFTER,ControlTipo.KEY,EventoTipo.CLIC,EventoSubTipo.CLICKED,sTipo,this.evaluacionempleado,new Object(),this.evaluacionempleadoParameterGeneral,this.evaluacionempleadoReturnGeneral);
  		} catch(Exception e) {
  			FuncionesSwing.manageException2(this, e,logger,EvaluacionEmpleadoConstantesFunciones.CLASSNAME);
			
  		}  finally {
      		this.finishProcessEvaluacionEmpleado();
      	}
    }
	
	public void internalFrameClosingInternalFrameGeneral(String sTipo,InternalFrameEvent evt) { 	  
		try {
			EvaluacionEmpleadoBeanSwingJInternalFrameAdditional.procesarEventosVista(this.parametroGeneralUsuario,this.moduloActual,this.opcionActual,this.usuarioActual,this,FuncionTipo.BEFORE,ControlTipo.WINDOW,EventoTipo.CLIC,EventoSubTipo.CLOSING,sTipo,this.evaluacionempleado,new Object(),this.evaluacionempleadoParameterGeneral,this.evaluacionempleadoReturnGeneral);
			
			if(sTipo.equals("CloseInternalFrameEvaluacionEmpleado")) {
				closingInternalFrameEvaluacionEmpleado();
				
			} else if(sTipo.equals("jButtonCancelarEvaluacionEmpleado")) {
				JInternalFrameBase jInternalFrameDetalleFormEvaluacionEmpleado = (JInternalFrameBase)evt.getSource();
	            	
	            EvaluacionEmpleadoBeanSwingJInternalFrame jInternalFrameParent=(EvaluacionEmpleadoBeanSwingJInternalFrame)jInternalFrameDetalleFormEvaluacionEmpleado.getjInternalFrameParent();
	            
				jInternalFrameParent.jButtonCancelarEvaluacionEmpleadoActionPerformed(null);
			}
			
			EvaluacionEmpleadoBeanSwingJInternalFrameAdditional.procesarEventosVista(this.parametroGeneralUsuario,this.moduloActual,this.opcionActual,this.usuarioActual,this,FuncionTipo.AFTER,ControlTipo.WINDOW,EventoTipo.CLIC,EventoSubTipo.CLOSING,sTipo,this.evaluacionempleado,new Object(),this.evaluacionempleadoParameterGeneral,this.evaluacionempleadoReturnGeneral);
  		} catch(Exception e) {
  			FuncionesSwing.manageException2(this, e,logger,EvaluacionEmpleadoConstantesFunciones.CLASSNAME);
  		}
    }
	
	public void recargarFormEvaluacionEmpleado(String sTipo,String sDominio,EventoGlobalTipo eventoGlobalTipo,ControlTipo controlTipo,EventoTipo eventoTipo,EventoSubTipo eventoSubTipo,String sTipoGeneral,ArrayList<Classe> classes,Boolean conIrServidorAplicacion) throws Exception {
		this.recargarFormEvaluacionEmpleado(sTipo,sDominio,eventoGlobalTipo,controlTipo,eventoTipo,eventoSubTipo,sTipoGeneral,classes,conIrServidorAplicacion,false);
	}
	
	public void recargarFormEvaluacionEmpleado(String sTipo,String sDominio,EventoGlobalTipo eventoGlobalTipo,ControlTipo controlTipo,EventoTipo eventoTipo,EventoSubTipo eventoSubTipo,String sTipoGeneral,ArrayList<Classe> classes,Boolean conIrServidorAplicacion,Boolean esControlTabla) throws Exception {
		if(this.permiteRecargarForm && this.permiteMantenimiento(this.evaluacionempleado)) {
			if(!esControlTabla) {
				if(EvaluacionEmpleadoJInternalFrame.ISBINDING_MANUAL_TABLA) {			
					this.setVariablesFormularioToObjetoActualEvaluacionEmpleado(this.evaluacionempleado,true,false);
					this.setVariablesFormularioToObjetoActualForeignKeysEvaluacionEmpleado(this.evaluacionempleado);			
				}
				
				if(this.evaluacionempleadoSessionBean.getEstaModoGuardarRelaciones()) {
					this.setVariablesFormularioRelacionesToObjetoActualEvaluacionEmpleado(this.evaluacionempleado,classes);				
				}
			
				if(conIrServidorAplicacion) {
					//ARCHITECTURE
					if(Constantes.ISUSAEJBLOGICLAYER) {						
						this.evaluacionempleadoReturnGeneral=evaluacionempleadoLogic.procesarEventosEvaluacionEmpleadosWithConnection(this.parametroGeneralUsuario,this.moduloActual,this.opcionActual,this.usuarioActual,eventoGlobalTipo,controlTipo,eventoTipo,eventoSubTipo,sTipo,this.evaluacionempleadoLogic.getEvaluacionEmpleados(),this.evaluacionempleado,this.evaluacionempleadoParameterGeneral,this.isEsNuevoEvaluacionEmpleado,classes);//this.evaluacionempleadoLogic.getEvaluacionEmpleado()//sTipoGeneral
									
					} else if(Constantes.ISUSAEJBREMOTE) {
									
					} else if(Constantes.ISUSAEJBHOME) {
					}
					//ARCHITECTURE
					
					//ACTUALIZA VARIABLES DEFECTO DESDE LOGIC A RETURN GENERAL Y LUEGO A BEAN
					//this.setVariablesObjetoReturnGeneralToBeanEvaluacionEmpleado(this.evaluacionempleadoReturnGeneral,this.evaluacionempleadoBean,false);
						
					//ACTUALIZA VARIABLES RELACIONES DEFECTO DESDE LOGIC A RETURN GENERAL Y LUEGO A BEAN
					if(this.evaluacionempleadoSessionBean.getEstaModoGuardarRelaciones()) {
						//this.setVariablesRelacionesObjetoReturnGeneralToBeanEvaluacionEmpleado(classes,this.evaluacionempleadoReturnGeneral,this.evaluacionempleadoBean,false);
					}
						
					if(this.evaluacionempleadoReturnGeneral.getConRecargarPropiedades()) {
						//INICIALIZA VARIABLES COMBOS NORMALES (FK)
						this.setVariablesObjetoActualToFormularioForeignKeyEvaluacionEmpleado(this.evaluacionempleadoReturnGeneral.getEvaluacionEmpleado());
							
						//INICIALIZA VARIABLES NORMALES A FORMULARIO(SIN FK)
						this.setVariablesObjetoActualToFormularioEvaluacionEmpleado(this.evaluacionempleadoReturnGeneral.getEvaluacionEmpleado());	
					}
						
					if(this.evaluacionempleadoReturnGeneral.getConRecargarRelaciones()) {
						//INICIALIZA VARIABLES RELACIONES A FORMULARIO
						this.setVariablesRelacionesObjetoActualToFormularioEvaluacionEmpleado(this.evaluacionempleadoReturnGeneral.getEvaluacionEmpleado(),classes);//this.evaluacionempleadoBean);	
					}									
					
				} else {				
					//INICIALIZA VARIABLES RELACIONES A FORMULARIO
					this.setVariablesRelacionesObjetoActualToFormularioEvaluacionEmpleado(this.evaluacionempleado,classes);//this.evaluacionempleadoBean);									
				}
			
				if(EvaluacionEmpleadoJInternalFrame.ISBINDING_MANUAL_TABLA) {
					this.setVariablesFormularioToObjetoActualEvaluacionEmpleado(this.evaluacionempleado,true,false);
					this.setVariablesFormularioToObjetoActualForeignKeysEvaluacionEmpleado(this.evaluacionempleado);				
				}
				
			} else {
				
				if(((controlTipo.equals(ControlTipo.TEXTBOX) || controlTipo.equals(ControlTipo.DATE)
					|| controlTipo.equals(ControlTipo.TEXTAREA) || controlTipo.equals(ControlTipo.COMBOBOX)
					)				
					&& eventoTipo.equals(EventoTipo.CHANGE)
					)
					
					|| (controlTipo.equals(ControlTipo.CHECKBOX) && eventoTipo.equals(EventoTipo.CLIC))
					
				) { // && sTipoGeneral.equals("TEXTBOX")
					
					if(this.evaluacionempleadoAnterior!=null) {
						this.evaluacionempleado=this.evaluacionempleadoAnterior;
					}
				}
				
				if(conIrServidorAplicacion) {
					//ARCHITECTURE
					if(Constantes.ISUSAEJBLOGICLAYER) {						
						this.evaluacionempleadoReturnGeneral=evaluacionempleadoLogic.procesarEventosEvaluacionEmpleadosWithConnection(this.parametroGeneralUsuario,this.moduloActual,this.opcionActual,this.usuarioActual,eventoGlobalTipo,controlTipo,eventoTipo,eventoSubTipo,sTipo,this.evaluacionempleadoLogic.getEvaluacionEmpleados(),this.evaluacionempleado,this.evaluacionempleadoParameterGeneral,this.isEsNuevoEvaluacionEmpleado,classes);//this.evaluacionempleadoLogic.getEvaluacionEmpleado()//sTipoGeneral
									
					} else if(Constantes.ISUSAEJBREMOTE) {
									
					} else if(Constantes.ISUSAEJBHOME) {
					}
					//ARCHITECTURE
				}
				
				//ARCHITECTURE
				if(Constantes.ISUSAEJBLOGICLAYER) {
					//NO ENTENDIBLE PORQUE PONER
					//if(this.evaluacionempleadoSessionBean.getEstaModoGuardarRelaciones() 
					//	|| this.evaluacionempleadoSessionBean.getEsGuardarRelacionado())	{
						actualizarLista(this.evaluacionempleadoReturnGeneral.getEvaluacionEmpleado(),evaluacionempleadoLogic.getEvaluacionEmpleados());
					//}
				} else if(Constantes.ISUSAEJBREMOTE||Constantes.ISUSAEJBHOME) {
					actualizarLista(this.evaluacionempleadoReturnGeneral.getEvaluacionEmpleado(),this.evaluacionempleados);
				}
				//ARCHITECTURE
				
				//this.jTableDatosEvaluacionEmpleado.repaint();
				
				//((AbstractTableModel) this.jTableDatosEvaluacionEmpleado.getModel()).fireTableDataChanged();
				
				this.actualizarVisualTableDatosEvaluacionEmpleado();
			}
		}
	}
	
	public void actualizarVisualTableDatosEvaluacionEmpleado() throws Exception {
		
		EvaluacionEmpleadoModel evaluacionempleadoModel=(EvaluacionEmpleadoModel)this.jTableDatosEvaluacionEmpleado.getModel();
		
		if(Constantes.ISUSAEJBLOGICLAYER) {
			evaluacionempleadoModel.evaluacionempleados=this.evaluacionempleadoLogic.getEvaluacionEmpleados();
		
		} else if(Constantes.ISUSAEJBREMOTE || Constantes.ISUSAEJBHOME ) {
			evaluacionempleadoModel.evaluacionempleados=this.evaluacionempleados;
		}
		
		
		((EvaluacionEmpleadoModel) this.jTableDatosEvaluacionEmpleado.getModel()).fireTableDataChanged();
	}
	
	public void actualizarVisualTableDatosEventosVistaEvaluacionEmpleado() throws Exception {
		
		//ARCHITECTURE
		if(Constantes.ISUSAEJBLOGICLAYER) {
			this.actualizarLista(this.getevaluacionempleadoAnterior(),this.evaluacionempleadoLogic.getEvaluacionEmpleados());
					
		} else if(Constantes.ISUSAEJBREMOTE||Constantes.ISUSAEJBHOME) {
			this.actualizarLista(this.getevaluacionempleadoAnterior(),this.evaluacionempleados);
		}
		//ARCHITECTURE
						
		this.actualizarFilaTotales();
						
		this.actualizarVisualTableDatosEvaluacionEmpleado();	
	}
	
	public void setVariablesRelacionesObjetoActualToFormularioEvaluacionEmpleado(EvaluacionEmpleado evaluacionempleado,ArrayList<Classe> classes) throws Exception { 
		try {
			
			for(Classe clas:classes) {
				if(clas.clas.equals(CalificacionEmpleado.class)) {
					this.jInternalFrameDetalleFormEvaluacionEmpleado.calificacionempleadoBeanSwingJInternalFrame.calificacionempleadoLogic.setCalificacionEmpleados(evaluacionempleado.getCalificacionEmpleados());
					this.jInternalFrameDetalleFormEvaluacionEmpleado.calificacionempleadoBeanSwingJInternalFrame.inicializarActualizarBindingTablaCalificacionEmpleado(false);
					break;
				}
			}
			
		} catch(Exception e) {
			FuncionesSwing.manageException(this, e,logger,EvaluacionEmpleadoConstantesFunciones.CLASSNAME);
		}
	}
	
	public void setEventoParentGeneral(Boolean esUsoDesdeHijo,String sDominio,String sDominioTipo,String sTipo,String sTipoGeneral,Boolean esControlTabla,Boolean conIrServidorAplicacion,
						Long id,Component control, EventoGlobalTipo eventoGlobalTipo,ControlTipo controlTipo,EventoTipo eventoTipo,EventoSubTipo eventoSubTipo,ArrayList<String> arrClasses,
						Object evt,GeneralEntityParameterReturnGeneral generalEntityParameterGeneral,Object otro) { 	  
		try {
			
			if(this.permiteManejarEventosControl()) {
				
				//BASE COPIADO DESDE TEXTFIELLOSTFOCUS
				
				//EventoGlobalTipo.FORM_HIJO_ACTUALIZAR;
				Boolean conTodasRelaciones=false;
				
				this.esUsoDesdeHijo=esUsoDesdeHijo;
										
				EvaluacionEmpleadoBeanSwingJInternalFrameAdditional.procesarEventosVista(this.parametroGeneralUsuario,this.moduloActual,this.opcionActual,this.usuarioActual,this,FuncionTipo.BEFORE,controlTipo,eventoTipo,eventoSubTipo,sTipo,this.evaluacionempleado,new Object(),generalEntityParameterGeneral,this.evaluacionempleadoReturnGeneral);
				
				ArrayList<Classe> classes=new ArrayList<Classe>();
				
				for(String sClasse:arrClasses) {
					if(sClasse.equals("TODOS")) {
						conTodasRelaciones=true;
						break;
					}
				}
				
				if(this.evaluacionempleadoSessionBean.getConGuardarRelaciones()) {
					if(conTodasRelaciones) {
						classes=EvaluacionEmpleadoConstantesFunciones.getClassesRelationshipsOfEvaluacionEmpleado(new ArrayList<Classe>(),DeepLoadType.NONE);
					} else {
						classes=EvaluacionEmpleadoConstantesFunciones.getClassesRelationshipsFromStringsOfEvaluacionEmpleado(arrClasses,DeepLoadType.NONE);
					}
				}
	
				this.classesActual=new ArrayList<Classe>();
				this.classesActual.addAll(classes);
	
				this.recargarFormEvaluacionEmpleado(sTipo,sDominio,eventoGlobalTipo,controlTipo,eventoTipo,eventoSubTipo,sTipoGeneral,classes,conIrServidorAplicacion,esControlTabla);
										
				EvaluacionEmpleadoBeanSwingJInternalFrameAdditional.procesarEventosVista(this.parametroGeneralUsuario,this.moduloActual,this.opcionActual,this.usuarioActual,this,FuncionTipo.AFTER,controlTipo,eventoTipo,eventoSubTipo,sTipo,this.evaluacionempleado,new Object(),generalEntityParameterGeneral,this.evaluacionempleadoReturnGeneral);
			}
			
		} catch(Exception e) {
  			FuncionesSwing.manageException2(this, e,logger,EvaluacionEmpleadoConstantesFunciones.CLASSNAME);
  		}
    }
	
	/*
	public void setVariablesRelacionesObjetoBeanActualToFormularioEvaluacionEmpleado(EvaluacionEmpleadoBean evaluacionempleadoBean) throws Exception { 
		try {
			
			for(Classe clas:classes) {
				if(clas.clas.equals(CalificacionEmpleado.class)) {
					this.jInternalFrameDetalleFormEvaluacionEmpleado.calificacionempleadoBeanSwingJInternalFrame.calificacionempleadoLogic.setCalificacionEmpleados(evaluacionempleado.getCalificacionEmpleados());
					this.jInternalFrameDetalleFormEvaluacionEmpleado.calificacionempleadoBeanSwingJInternalFrame.inicializarActualizarBindingTablaCalificacionEmpleado(false);
					break;
				}
			}
			
		} catch(Exception e) {
			FuncionesSwing.manageException(this, e,logger,EvaluacionEmpleadoConstantesFunciones.CLASSNAME);
		}
	}
	*/
	
	/*
	public void setVariablesRelacionesObjetoReturnGeneralToBeanEvaluacionEmpleado(ArrayList<Classe> classes,EvaluacionEmpleadoReturnGeneral evaluacionempleadoReturnGeneral,EvaluacionEmpleadoBean evaluacionempleadoBean,Boolean conDefault) throws Exception {
		
			this.evaluacionempleadoBean.setCalificacionEmpleados(evaluacionempleadoReturnGeneral.getEvaluacionEmpleado().getCalificacionEmpleados());
	}
	*/
	
	public void setVariablesFormularioRelacionesToObjetoActualEvaluacionEmpleado(EvaluacionEmpleado evaluacionempleado,ArrayList<Classe> classes) throws Exception {
		
			for(Classe clas:classes) {
				if(clas.clas.equals(CalificacionEmpleado.class)) {
					evaluacionempleado.setCalificacionEmpleados(this.jInternalFrameDetalleFormEvaluacionEmpleado.calificacionempleadoBeanSwingJInternalFrame.calificacionempleadoLogic.getCalificacionEmpleados());
					break;
				}
			}
	}
	
	public Boolean permiteManejarEventosControl() {
		Boolean permite=true;				
		
		if(this.estaModoNuevo || this.estaModoSeleccionar || this.estaModoEliminarGuardarCambios) {
			permite=false;
			
		} 
		
		//NO DEBE MEZCLARSE CONCEPTOS
		/*	
		if(!paraTabla && !this.permiteMantenimiento(this.evaluacionempleado)) {
			System.out.println("ERROR:EL OBJETO ACTUAL NO PUEDE SER FILA TOTALES");
				
			//JOptionPane.showMessageDialog(this,"EL OBJETO ACTUAL NO PUEDE SER FILA TOTALES","EVENTO",JOptionPane.ERROR_MESSAGE);			
		}
		*/
		
		return permite;
	}
	
	public void inicializarFormDetalle() throws Exception {
		
		this.jInternalFrameDetalleFormEvaluacionEmpleado = new EvaluacionEmpleadoDetalleFormJInternalFrame(jDesktopPane,this.evaluacionempleadoSessionBean.getConGuardarRelaciones(),this.evaluacionempleadoSessionBean.getEsGuardarRelacionado(),this.cargarRelaciones,usuarioActual,resumenUsuarioActual,moduloActual,opcionActual,parametroGeneralSg,parametroGeneralUsuario,paginaTipo);
		
		this.jDesktopPane.add(this.jInternalFrameDetalleFormEvaluacionEmpleado);
		this.jInternalFrameDetalleFormEvaluacionEmpleado.setVisible(false);
		this.jInternalFrameDetalleFormEvaluacionEmpleado.setSelected(false);						
		
		this.jInternalFrameDetalleFormEvaluacionEmpleado.setJInternalFrameParent(this);
		
		this.jInternalFrameDetalleFormEvaluacionEmpleado.evaluacionempleadoLogic=this.evaluacionempleadoLogic;
		
		this.cargarCombosFrameForeignKeyEvaluacionEmpleado("Formulario");
		
		this.inicializarActualizarBindingBotonesPermisosManualFormDetalleEvaluacionEmpleado();
		this.inicializarActualizarBindingtiposArchivosReportesAccionesManualFormDetalleEvaluacionEmpleado();
		
		this.initActionsFormDetalle();		
		
		this.initActionsCombosTodosForeignKeyEvaluacionEmpleado("Formulario");
		
		//TALVEZ conSetVariablesGlobales COMO if() 
		this.setVariablesGlobalesCombosForeignKeyEvaluacionEmpleado();
		
		this.cargarMenuRelaciones();
		
	}
	
	public void initActionsFormDetalle() {	
		
		this.jInternalFrameDetalleFormEvaluacionEmpleado.addInternalFrameListener(new InternalFrameInternalFrameAdapter(this,"jButtonCancelarEvaluacionEmpleado"));
		
		this.jInternalFrameDetalleFormEvaluacionEmpleado.jButtonModificarEvaluacionEmpleado.addActionListener(new ButtonActionListener(this,"ModificarEvaluacionEmpleado"));

		
		this.jInternalFrameDetalleFormEvaluacionEmpleado.jButtonModificarToolBarEvaluacionEmpleado.addActionListener(new ButtonActionListener(this,"ModificarToolBarEvaluacionEmpleado"));
					
		this.jInternalFrameDetalleFormEvaluacionEmpleado.jMenuItemModificarEvaluacionEmpleado.addActionListener(new ButtonActionListener(this,"MenuItemModificarEvaluacionEmpleado"));		
		
		
		
		this.jInternalFrameDetalleFormEvaluacionEmpleado.jButtonActualizarEvaluacionEmpleado.addActionListener (new ButtonActionListener(this,"ActualizarEvaluacionEmpleado"));
		
		
		this.jInternalFrameDetalleFormEvaluacionEmpleado.jButtonActualizarToolBarEvaluacionEmpleado.addActionListener(new ButtonActionListener(this,"ActualizarToolBarEvaluacionEmpleado"));
						
		this.jInternalFrameDetalleFormEvaluacionEmpleado.jMenuItemActualizarEvaluacionEmpleado.addActionListener (new ButtonActionListener(this,"MenuItemActualizarEvaluacionEmpleado"));		
		
		
		
		this.jInternalFrameDetalleFormEvaluacionEmpleado.jButtonEliminarEvaluacionEmpleado.addActionListener (new ButtonActionListener(this,"EliminarEvaluacionEmpleado"));
		
		
		this.jInternalFrameDetalleFormEvaluacionEmpleado.jButtonEliminarToolBarEvaluacionEmpleado.addActionListener (new ButtonActionListener(this,"EliminarToolBarEvaluacionEmpleado"));
								
		this.jInternalFrameDetalleFormEvaluacionEmpleado.jMenuItemEliminarEvaluacionEmpleado.addActionListener (new ButtonActionListener(this,"MenuItemEliminarEvaluacionEmpleado"));		
		
		
		
		this.jInternalFrameDetalleFormEvaluacionEmpleado.jButtonCancelarEvaluacionEmpleado.addActionListener (new ButtonActionListener(this,"CancelarEvaluacionEmpleado"));
		
		
		this.jInternalFrameDetalleFormEvaluacionEmpleado.jButtonCancelarToolBarEvaluacionEmpleado.addActionListener (new ButtonActionListener(this,"CancelarToolBarEvaluacionEmpleado"));
					
		this.jInternalFrameDetalleFormEvaluacionEmpleado.jMenuItemCancelarEvaluacionEmpleado.addActionListener (new ButtonActionListener(this,"MenuItemCancelarEvaluacionEmpleado"));		
		
		
		
		
		
		this.jInternalFrameDetalleFormEvaluacionEmpleado.jMenuItemDetalleCerrarEvaluacionEmpleado.addActionListener (new ButtonActionListener(this,"MenuItemDetalleCerrarEvaluacionEmpleado"));		
		
		
		
		this.jInternalFrameDetalleFormEvaluacionEmpleado.jButtonGuardarCambiosToolBarEvaluacionEmpleado.addActionListener (new ButtonActionListener(this,"GuardarCambiosToolBarEvaluacionEmpleado"));
		
		
		
		this.jInternalFrameDetalleFormEvaluacionEmpleado.jButtonGuardarCambiosToolBarEvaluacionEmpleado.addActionListener (new ButtonActionListener(this,"GuardarCambiosToolBarEvaluacionEmpleado"));
		
		
		
		this.jInternalFrameDetalleFormEvaluacionEmpleado.jComboBoxTiposAccionesFormularioEvaluacionEmpleado.addActionListener (new ButtonActionListener(this,"TiposAccionesFormularioEvaluacionEmpleado"));
		
		
				
		
		//BUSQUEDA GENERAL
		this.jInternalFrameDetalleFormEvaluacionEmpleado.jButtonidEvaluacionEmpleadoBusqueda.addActionListener(new ButtonActionListener(this,"idEvaluacionEmpleadoBusqueda"));
		//ACTUALIZAR FK
		this.jInternalFrameDetalleFormEvaluacionEmpleado.jButtonid_empresaEvaluacionEmpleadoUpdate.addActionListener(new ButtonActionListener(this,"id_empresaEvaluacionEmpleadoUpdate"));
		//BUSQUEDA GENERAL
		this.jInternalFrameDetalleFormEvaluacionEmpleado.jButtonid_empresaEvaluacionEmpleadoBusqueda.addActionListener(new ButtonActionListener(this,"id_empresaEvaluacionEmpleadoBusqueda"));
		//ACTUALIZAR FK
		this.jInternalFrameDetalleFormEvaluacionEmpleado.jButtonid_sucursalEvaluacionEmpleadoUpdate.addActionListener(new ButtonActionListener(this,"id_sucursalEvaluacionEmpleadoUpdate"));
		//BUSQUEDA GENERAL
		this.jInternalFrameDetalleFormEvaluacionEmpleado.jButtonid_sucursalEvaluacionEmpleadoBusqueda.addActionListener(new ButtonActionListener(this,"id_sucursalEvaluacionEmpleadoBusqueda"));
		//ACTUALIZAR FK
		this.jInternalFrameDetalleFormEvaluacionEmpleado.jButtonid_ejercicioEvaluacionEmpleadoUpdate.addActionListener(new ButtonActionListener(this,"id_ejercicioEvaluacionEmpleadoUpdate"));
		//BUSQUEDA GENERAL
		this.jInternalFrameDetalleFormEvaluacionEmpleado.jButtonid_ejercicioEvaluacionEmpleadoBusqueda.addActionListener(new ButtonActionListener(this,"id_ejercicioEvaluacionEmpleadoBusqueda"));
		//ACTUALIZAR FK
		this.jInternalFrameDetalleFormEvaluacionEmpleado.jButtonid_periodoEvaluacionEmpleadoUpdate.addActionListener(new ButtonActionListener(this,"id_periodoEvaluacionEmpleadoUpdate"));
		//BUSQUEDA GENERAL
		this.jInternalFrameDetalleFormEvaluacionEmpleado.jButtonid_periodoEvaluacionEmpleadoBusqueda.addActionListener(new ButtonActionListener(this,"id_periodoEvaluacionEmpleadoBusqueda"));
		//ACTUALIZAR FK
		this.jInternalFrameDetalleFormEvaluacionEmpleado.jButtonid_estructuraEvaluacionEmpleadoUpdate.addActionListener(new ButtonActionListener(this,"id_estructuraEvaluacionEmpleadoUpdate"));
		//BUSQUEDA GENERAL
		this.jInternalFrameDetalleFormEvaluacionEmpleado.jButtonid_estructuraEvaluacionEmpleadoBusqueda.addActionListener(new ButtonActionListener(this,"id_estructuraEvaluacionEmpleadoBusqueda"));
		//ACTUALIZAR FK
		this.jInternalFrameDetalleFormEvaluacionEmpleado.jButtonid_empleadoEvaluacionEmpleadoUpdate.addActionListener(new ButtonActionListener(this,"id_empleadoEvaluacionEmpleadoUpdate"));
		//BUSQUEDA GENERAL
		this.jInternalFrameDetalleFormEvaluacionEmpleado.jButtonid_empleadoEvaluacionEmpleadoBusqueda.addActionListener(new ButtonActionListener(this,"id_empleadoEvaluacionEmpleadoBusqueda"));
		//ACTUALIZAR FK
		this.jInternalFrameDetalleFormEvaluacionEmpleado.jButtonid_empleado_evaluaEvaluacionEmpleadoUpdate.addActionListener(new ButtonActionListener(this,"id_empleado_evaluaEvaluacionEmpleadoUpdate"));
		//BUSQUEDA GENERAL
		this.jInternalFrameDetalleFormEvaluacionEmpleado.jButtonid_empleado_evaluaEvaluacionEmpleadoBusqueda.addActionListener(new ButtonActionListener(this,"id_empleado_evaluaEvaluacionEmpleadoBusqueda"));
		//ACTUALIZAR FK
		this.jInternalFrameDetalleFormEvaluacionEmpleado.jButtonid_tipo_evaluacion_empleadoEvaluacionEmpleadoUpdate.addActionListener(new ButtonActionListener(this,"id_tipo_evaluacion_empleadoEvaluacionEmpleadoUpdate"));
		//BUSQUEDA GENERAL
		this.jInternalFrameDetalleFormEvaluacionEmpleado.jButtonid_tipo_evaluacion_empleadoEvaluacionEmpleadoBusqueda.addActionListener(new ButtonActionListener(this,"id_tipo_evaluacion_empleadoEvaluacionEmpleadoBusqueda"));
		//BUSQUEDA GENERAL
		this.jInternalFrameDetalleFormEvaluacionEmpleado.jButtonfechaEvaluacionEmpleadoBusqueda.addActionListener(new ButtonActionListener(this,"fechaEvaluacionEmpleadoBusqueda"));
		//BUSQUEDA GENERAL
		this.jInternalFrameDetalleFormEvaluacionEmpleado.jButtonesta_evaluadoEvaluacionEmpleadoBusqueda.addActionListener(new ButtonActionListener(this,"esta_evaluadoEvaluacionEmpleadoBusqueda"));
		//ACTUALIZAR FK
		this.jInternalFrameDetalleFormEvaluacionEmpleado.jButtonid_anioEvaluacionEmpleadoUpdate.addActionListener(new ButtonActionListener(this,"id_anioEvaluacionEmpleadoUpdate"));
		//BUSQUEDA GENERAL
		this.jInternalFrameDetalleFormEvaluacionEmpleado.jButtonid_anioEvaluacionEmpleadoBusqueda.addActionListener(new ButtonActionListener(this,"id_anioEvaluacionEmpleadoBusqueda"));
		//ACTUALIZAR FK
		this.jInternalFrameDetalleFormEvaluacionEmpleado.jButtonid_semestreEvaluacionEmpleadoUpdate.addActionListener(new ButtonActionListener(this,"id_semestreEvaluacionEmpleadoUpdate"));
		//BUSQUEDA GENERAL
		this.jInternalFrameDetalleFormEvaluacionEmpleado.jButtonid_semestreEvaluacionEmpleadoBusqueda.addActionListener(new ButtonActionListener(this,"id_semestreEvaluacionEmpleadoBusqueda"));
		//ACTUALIZAR FK
		this.jInternalFrameDetalleFormEvaluacionEmpleado.jButtonid_trimestreEvaluacionEmpleadoUpdate.addActionListener(new ButtonActionListener(this,"id_trimestreEvaluacionEmpleadoUpdate"));
		//BUSQUEDA GENERAL
		this.jInternalFrameDetalleFormEvaluacionEmpleado.jButtonid_trimestreEvaluacionEmpleadoBusqueda.addActionListener(new ButtonActionListener(this,"id_trimestreEvaluacionEmpleadoBusqueda"));
		//ACTUALIZAR FK
		this.jInternalFrameDetalleFormEvaluacionEmpleado.jButtonid_bimestreEvaluacionEmpleadoUpdate.addActionListener(new ButtonActionListener(this,"id_bimestreEvaluacionEmpleadoUpdate"));
		//BUSQUEDA GENERAL
		this.jInternalFrameDetalleFormEvaluacionEmpleado.jButtonid_bimestreEvaluacionEmpleadoBusqueda.addActionListener(new ButtonActionListener(this,"id_bimestreEvaluacionEmpleadoBusqueda"));
		//ACTUALIZAR FK
		this.jInternalFrameDetalleFormEvaluacionEmpleado.jButtonid_mesEvaluacionEmpleadoUpdate.addActionListener(new ButtonActionListener(this,"id_mesEvaluacionEmpleadoUpdate"));
		//BUSQUEDA GENERAL
		this.jInternalFrameDetalleFormEvaluacionEmpleado.jButtonid_mesEvaluacionEmpleadoBusqueda.addActionListener(new ButtonActionListener(this,"id_mesEvaluacionEmpleadoBusqueda"));
		//BUSQUEDA GENERAL
		this.jInternalFrameDetalleFormEvaluacionEmpleado.jButtonobservacion1EvaluacionEmpleadoBusqueda.addActionListener(new ButtonActionListener(this,"observacion1EvaluacionEmpleadoBusqueda"));
		//BUSQUEDA GENERAL
		this.jInternalFrameDetalleFormEvaluacionEmpleado.jButtonobservacion2EvaluacionEmpleadoBusqueda.addActionListener(new ButtonActionListener(this,"observacion2EvaluacionEmpleadoBusqueda"));
		//BUSQUEDA GENERAL
		this.jInternalFrameDetalleFormEvaluacionEmpleado.jButtonobservacion3EvaluacionEmpleadoBusqueda.addActionListener(new ButtonActionListener(this,"observacion3EvaluacionEmpleadoBusqueda"));
		//BUSQUEDA GENERAL
		this.jInternalFrameDetalleFormEvaluacionEmpleado.jButtonobservacion4EvaluacionEmpleadoBusqueda.addActionListener(new ButtonActionListener(this,"observacion4EvaluacionEmpleadoBusqueda"));
		
		
		;

		//TABBED PANE RELACIONES
		this.jInternalFrameDetalleFormEvaluacionEmpleado.jTabbedPaneRelacionesEvaluacionEmpleado.addChangeListener(new TabbedPaneChangeListener(this,"RelacionesEvaluacionEmpleado"));
		
		;		
		//TABBED PANE RELACIONES FIN(EXTRA TAB)	
	}
	
	public void initActions() {				
		this.addInternalFrameListener(new InternalFrameInternalFrameAdapter(this,"CloseInternalFrameEvaluacionEmpleado"));
		
		if(this.jInternalFrameDetalleFormEvaluacionEmpleado!=null) { //if(this.conCargarFormDetalle) {
			this.jInternalFrameDetalleFormEvaluacionEmpleado.addInternalFrameListener(new InternalFrameInternalFrameAdapter(this,"jButtonCancelarEvaluacionEmpleado"));
		}
		
		this.jTableDatosEvaluacionEmpleado.getSelectionModel().addListSelectionListener(new TableListSelectionListener(this,"TableDatosSeleccionarEvaluacionEmpleado"));
		
		this.jTableDatosEvaluacionEmpleado.addMouseListener(new TableMouseAdapter(this,"DatosSeleccionarEvaluacionEmpleado"));
		
		this.jButtonNuevoEvaluacionEmpleado.addActionListener(new ButtonActionListener(this,"NuevoEvaluacionEmpleado"));
		
		this.jButtonDuplicarEvaluacionEmpleado.addActionListener(new ButtonActionListener(this,"DuplicarEvaluacionEmpleado"));
		
		this.jButtonCopiarEvaluacionEmpleado.addActionListener(new ButtonActionListener(this,"CopiarEvaluacionEmpleado"));
		
		this.jButtonVerFormEvaluacionEmpleado.addActionListener(new ButtonActionListener(this,"VerFormEvaluacionEmpleado"));
		
		
		this.jButtonNuevoToolBarEvaluacionEmpleado.addActionListener(new ButtonActionListener(this,"NuevoToolBarEvaluacionEmpleado"));
			
		this.jButtonDuplicarToolBarEvaluacionEmpleado.addActionListener(new ButtonActionListener(this,"DuplicarToolBarEvaluacionEmpleado"));
			
		this.jMenuItemNuevoEvaluacionEmpleado.addActionListener (new ButtonActionListener(this,"MenuItemNuevoEvaluacionEmpleado"));
			
		this.jMenuItemDuplicarEvaluacionEmpleado.addActionListener (new ButtonActionListener(this,"MenuItemDuplicarEvaluacionEmpleado"));		
		
		
		this.jButtonNuevoRelacionesEvaluacionEmpleado.addActionListener (new ButtonActionListener(this,"NuevoRelacionesEvaluacionEmpleado"));
		
		
		this.jButtonNuevoRelacionesToolBarEvaluacionEmpleado.addActionListener(new ButtonActionListener(this,"NuevoRelacionesToolBarEvaluacionEmpleado"));
			
		this.jMenuItemNuevoRelacionesEvaluacionEmpleado.addActionListener(new ButtonActionListener(this,"MenuItemNuevoRelacionesEvaluacionEmpleado"));		
		
		
		if(this.jInternalFrameDetalleFormEvaluacionEmpleado!=null) { //if(this.conCargarFormDetalle) {
			this.jInternalFrameDetalleFormEvaluacionEmpleado.jButtonModificarEvaluacionEmpleado.addActionListener(new ButtonActionListener(this,"ModificarEvaluacionEmpleado"));
		}
		
		
		if(this.jInternalFrameDetalleFormEvaluacionEmpleado!=null) { //if(this.conCargarFormDetalle) {
			this.jInternalFrameDetalleFormEvaluacionEmpleado.jButtonModificarToolBarEvaluacionEmpleado.addActionListener(new ButtonActionListener(this,"ModificarToolBarEvaluacionEmpleado"));
			
			this.jInternalFrameDetalleFormEvaluacionEmpleado.jMenuItemModificarEvaluacionEmpleado.addActionListener(new ButtonActionListener(this,"MenuItemModificarEvaluacionEmpleado"));		
		}
		
		
		if(this.jInternalFrameDetalleFormEvaluacionEmpleado!=null) { //if(this.conCargarFormDetalle) {			
			this.jInternalFrameDetalleFormEvaluacionEmpleado.jButtonActualizarEvaluacionEmpleado.addActionListener (new ButtonActionListener(this,"ActualizarEvaluacionEmpleado"));
		}
		
		
		if(this.jInternalFrameDetalleFormEvaluacionEmpleado!=null) { //if(this.conCargarFormDetalle) {
			this.jInternalFrameDetalleFormEvaluacionEmpleado.jButtonActualizarToolBarEvaluacionEmpleado.addActionListener(new ButtonActionListener(this,"ActualizarToolBarEvaluacionEmpleado"));
				
			this.jInternalFrameDetalleFormEvaluacionEmpleado.jMenuItemActualizarEvaluacionEmpleado.addActionListener (new ButtonActionListener(this,"MenuItemActualizarEvaluacionEmpleado"));		
		}
		
		
		if(this.jInternalFrameDetalleFormEvaluacionEmpleado!=null) { //if(this.conCargarFormDetalle) {
			this.jInternalFrameDetalleFormEvaluacionEmpleado.jButtonEliminarEvaluacionEmpleado.addActionListener (new ButtonActionListener(this,"EliminarEvaluacionEmpleado"));
		}
		
		
		if(this.jInternalFrameDetalleFormEvaluacionEmpleado!=null) { //if(this.conCargarFormDetalle) {
			this.jInternalFrameDetalleFormEvaluacionEmpleado.jButtonEliminarToolBarEvaluacionEmpleado.addActionListener (new ButtonActionListener(this,"EliminarToolBarEvaluacionEmpleado"));
						
			this.jInternalFrameDetalleFormEvaluacionEmpleado.jMenuItemEliminarEvaluacionEmpleado.addActionListener (new ButtonActionListener(this,"MenuItemEliminarEvaluacionEmpleado"));		
		}
		
		
		if(this.jInternalFrameDetalleFormEvaluacionEmpleado!=null) { //if(this.conCargarFormDetalle) {
			this.jInternalFrameDetalleFormEvaluacionEmpleado.jButtonCancelarEvaluacionEmpleado.addActionListener (new ButtonActionListener(this,"CancelarEvaluacionEmpleado"));
		}
		
		
		if(this.jInternalFrameDetalleFormEvaluacionEmpleado!=null) { //if(this.conCargarFormDetalle) {
			this.jInternalFrameDetalleFormEvaluacionEmpleado.jButtonCancelarToolBarEvaluacionEmpleado.addActionListener (new ButtonActionListener(this,"CancelarToolBarEvaluacionEmpleado"));
			
			this.jInternalFrameDetalleFormEvaluacionEmpleado.jMenuItemCancelarEvaluacionEmpleado.addActionListener (new ButtonActionListener(this,"MenuItemCancelarEvaluacionEmpleado"));		
		}
		
		this.jButtonMostrarOcultarTablaToolBarEvaluacionEmpleado.addActionListener (new ButtonActionListener(this,"MostrarOcultarToolBarEvaluacionEmpleado"));		
		
		
		this.jButtonCerrarEvaluacionEmpleado.addActionListener (new ButtonActionListener(this,"CerrarEvaluacionEmpleado"));
		
		
		this.jButtonCerrarToolBarEvaluacionEmpleado.addActionListener (new ButtonActionListener(this,"CerrarToolBarEvaluacionEmpleado"));
			
		this.jMenuItemCerrarEvaluacionEmpleado.addActionListener (new ButtonActionListener(this,"MenuItemCerrarEvaluacionEmpleado"));
			
		if(this.jInternalFrameDetalleFormEvaluacionEmpleado!=null) { //if(this.conCargarFormDetalle) {
			this.jInternalFrameDetalleFormEvaluacionEmpleado.jMenuItemDetalleCerrarEvaluacionEmpleado.addActionListener (new ButtonActionListener(this,"MenuItemDetalleCerrarEvaluacionEmpleado"));		
		}
		
		
		if(this.jInternalFrameDetalleFormEvaluacionEmpleado!=null) { //if(this.conCargarFormDetalle) {
			this.jInternalFrameDetalleFormEvaluacionEmpleado.jButtonGuardarCambiosEvaluacionEmpleado.addActionListener (new ButtonActionListener(this,"GuardarCambiosEvaluacionEmpleado"));
		}
		
		
		if(this.jInternalFrameDetalleFormEvaluacionEmpleado!=null) { //if(this.conCargarFormDetalle) {
			this.jInternalFrameDetalleFormEvaluacionEmpleado.jButtonGuardarCambiosToolBarEvaluacionEmpleado.addActionListener (new ButtonActionListener(this,"GuardarCambiosToolBarEvaluacionEmpleado"));
		}
		
		this.jButtonCopiarToolBarEvaluacionEmpleado.addActionListener (new ButtonActionListener(this,"CopiarToolBarEvaluacionEmpleado"));
			
		this.jButtonVerFormToolBarEvaluacionEmpleado.addActionListener (new ButtonActionListener(this,"VerFormToolBarEvaluacionEmpleado"));
		
		this.jMenuItemGuardarCambiosEvaluacionEmpleado.addActionListener (new ButtonActionListener(this,"MenuItemGuardarCambiosEvaluacionEmpleado"));
			
		this.jMenuItemCopiarEvaluacionEmpleado.addActionListener (new ButtonActionListener(this,"MenuItemCopiarEvaluacionEmpleado"));		
		
		this.jMenuItemVerFormEvaluacionEmpleado.addActionListener (new ButtonActionListener(this,"MenuItemVerFormEvaluacionEmpleado"));		
		
		
		this.jButtonGuardarCambiosTablaEvaluacionEmpleado.addActionListener (new ButtonActionListener(this,"GuardarCambiosTablaEvaluacionEmpleado"));
		
		
		this.jButtonGuardarCambiosTablaToolBarEvaluacionEmpleado.addActionListener (new ButtonActionListener(this,"GuardarCambiosTablaToolBarEvaluacionEmpleado"));
			
		this.jMenuItemGuardarCambiosTablaEvaluacionEmpleado.addActionListener (new ButtonActionListener(this,"GuardarCambiosTablaEvaluacionEmpleado"));		
		
		
		
		this.jButtonRecargarInformacionEvaluacionEmpleado.addActionListener (new ButtonActionListener(this,"RecargarInformacionEvaluacionEmpleado"));
					
		this.jButtonRecargarInformacionToolBarEvaluacionEmpleado.addActionListener (new ButtonActionListener(this,"RecargarInformacionToolBarEvaluacionEmpleado"));
		
		this.jMenuItemRecargarInformacionEvaluacionEmpleado.addActionListener (new ButtonActionListener(this,"MenuItemRecargarInformacionEvaluacionEmpleado"));		
		
		
		
		this.jButtonAnterioresEvaluacionEmpleado.addActionListener (new ButtonActionListener(this,"AnterioresEvaluacionEmpleado"));
		
		
		this.jButtonAnterioresToolBarEvaluacionEmpleado.addActionListener (new ButtonActionListener(this,"AnterioresToolBarEvaluacionEmpleado"));
		
		this.jMenuItemAnterioresEvaluacionEmpleado.addActionListener (new ButtonActionListener(this,"MenuItemAnterioresEvaluacionEmpleado"));		
		
		
		this.jButtonSiguientesEvaluacionEmpleado.addActionListener (new ButtonActionListener(this,"SiguientesEvaluacionEmpleado"));
		
		
		this.jButtonSiguientesToolBarEvaluacionEmpleado.addActionListener (new ButtonActionListener(this,"SiguientesToolBarEvaluacionEmpleado"));
			
		this.jMenuItemSiguientesEvaluacionEmpleado.addActionListener (new ButtonActionListener(this,"MenuItemSiguientesEvaluacionEmpleado"));
			
		this.jMenuItemAbrirOrderByEvaluacionEmpleado.addActionListener (new ButtonActionListener(this,"MenuItemAbrirOrderByEvaluacionEmpleado"));
			
		this.jMenuItemMostrarOcultarEvaluacionEmpleado.addActionListener (new ButtonActionListener(this,"MenuItemMostrarOcultarEvaluacionEmpleado"));
			
		this.jMenuItemDetalleAbrirOrderByEvaluacionEmpleado.addActionListener (new ButtonActionListener(this,"MenuItemDetalleAbrirOrderByEvaluacionEmpleado"));
			
		this.jMenuItemDetalleMostarOcultarEvaluacionEmpleado.addActionListener (new ButtonActionListener(this,"MenuItemDetalleMostrarOcultarEvaluacionEmpleado"));		
		
		
		this.jButtonNuevoGuardarCambiosEvaluacionEmpleado.addActionListener (new ButtonActionListener(this,"NuevoGuardarCambiosEvaluacionEmpleado"));
		
		
		this.jButtonNuevoGuardarCambiosToolBarEvaluacionEmpleado.addActionListener (new ButtonActionListener(this,"NuevoGuardarCambiosToolBarEvaluacionEmpleado"));
			
		this.jMenuItemNuevoGuardarCambiosEvaluacionEmpleado.addActionListener (new ButtonActionListener(this,"MenuItemNuevoGuardarCambiosEvaluacionEmpleado"));		
		
		
		
		//SELECCIONAR TODOS
		
		this.jCheckBoxSeleccionarTodosEvaluacionEmpleado.addItemListener(new CheckBoxItemListener(this,"SeleccionarTodosEvaluacionEmpleado"));

		this.jCheckBoxSeleccionadosEvaluacionEmpleado.addItemListener(new CheckBoxItemListener(this,"SeleccionadosEvaluacionEmpleado"));
		
		if(this.jInternalFrameDetalleFormEvaluacionEmpleado!=null) { //if(this.conCargarFormDetalle) {
			this.jInternalFrameDetalleFormEvaluacionEmpleado.jComboBoxTiposAccionesFormularioEvaluacionEmpleado.addActionListener (new ButtonActionListener(this,"TiposAccionesFormularioEvaluacionEmpleado"));
		}
		
		
		this.jComboBoxTiposRelacionesEvaluacionEmpleado.addActionListener (new ButtonActionListener(this,"TiposRelacionesEvaluacionEmpleado"));
			
		this.jComboBoxTiposAccionesEvaluacionEmpleado.addActionListener (new ButtonActionListener(this,"TiposAccionesEvaluacionEmpleado"));
					
		this.jComboBoxTiposSeleccionarEvaluacionEmpleado.addActionListener (new ButtonActionListener(this,"TiposSeleccionarEvaluacionEmpleado"));
			
		this.jTextFieldValorCampoGeneralEvaluacionEmpleado.addActionListener (new ButtonActionListener(this,"ValorCampoGeneralEvaluacionEmpleado"));		
		
		
		if(this.jInternalFrameDetalleFormEvaluacionEmpleado!=null) { //if(this.conCargarFormDetalle) {
		
		
		
		//BUSQUEDA GENERAL
		this.jInternalFrameDetalleFormEvaluacionEmpleado.jButtonidEvaluacionEmpleadoBusqueda.addActionListener(new ButtonActionListener(this,"idEvaluacionEmpleadoBusqueda"));
		//ACTUALIZAR FK
		this.jInternalFrameDetalleFormEvaluacionEmpleado.jButtonid_empresaEvaluacionEmpleadoUpdate.addActionListener(new ButtonActionListener(this,"id_empresaEvaluacionEmpleadoUpdate"));
		//BUSQUEDA GENERAL
		this.jInternalFrameDetalleFormEvaluacionEmpleado.jButtonid_empresaEvaluacionEmpleadoBusqueda.addActionListener(new ButtonActionListener(this,"id_empresaEvaluacionEmpleadoBusqueda"));
		//ACTUALIZAR FK
		this.jInternalFrameDetalleFormEvaluacionEmpleado.jButtonid_sucursalEvaluacionEmpleadoUpdate.addActionListener(new ButtonActionListener(this,"id_sucursalEvaluacionEmpleadoUpdate"));
		//BUSQUEDA GENERAL
		this.jInternalFrameDetalleFormEvaluacionEmpleado.jButtonid_sucursalEvaluacionEmpleadoBusqueda.addActionListener(new ButtonActionListener(this,"id_sucursalEvaluacionEmpleadoBusqueda"));
		//ACTUALIZAR FK
		this.jInternalFrameDetalleFormEvaluacionEmpleado.jButtonid_ejercicioEvaluacionEmpleadoUpdate.addActionListener(new ButtonActionListener(this,"id_ejercicioEvaluacionEmpleadoUpdate"));
		//BUSQUEDA GENERAL
		this.jInternalFrameDetalleFormEvaluacionEmpleado.jButtonid_ejercicioEvaluacionEmpleadoBusqueda.addActionListener(new ButtonActionListener(this,"id_ejercicioEvaluacionEmpleadoBusqueda"));
		//ACTUALIZAR FK
		this.jInternalFrameDetalleFormEvaluacionEmpleado.jButtonid_periodoEvaluacionEmpleadoUpdate.addActionListener(new ButtonActionListener(this,"id_periodoEvaluacionEmpleadoUpdate"));
		//BUSQUEDA GENERAL
		this.jInternalFrameDetalleFormEvaluacionEmpleado.jButtonid_periodoEvaluacionEmpleadoBusqueda.addActionListener(new ButtonActionListener(this,"id_periodoEvaluacionEmpleadoBusqueda"));
		//ACTUALIZAR FK
		this.jInternalFrameDetalleFormEvaluacionEmpleado.jButtonid_estructuraEvaluacionEmpleadoUpdate.addActionListener(new ButtonActionListener(this,"id_estructuraEvaluacionEmpleadoUpdate"));
		//BUSQUEDA GENERAL
		this.jInternalFrameDetalleFormEvaluacionEmpleado.jButtonid_estructuraEvaluacionEmpleadoBusqueda.addActionListener(new ButtonActionListener(this,"id_estructuraEvaluacionEmpleadoBusqueda"));
		//ACTUALIZAR FK
		this.jInternalFrameDetalleFormEvaluacionEmpleado.jButtonid_empleadoEvaluacionEmpleadoUpdate.addActionListener(new ButtonActionListener(this,"id_empleadoEvaluacionEmpleadoUpdate"));
		//BUSQUEDA GENERAL
		this.jInternalFrameDetalleFormEvaluacionEmpleado.jButtonid_empleadoEvaluacionEmpleadoBusqueda.addActionListener(new ButtonActionListener(this,"id_empleadoEvaluacionEmpleadoBusqueda"));
		//ACTUALIZAR FK
		this.jInternalFrameDetalleFormEvaluacionEmpleado.jButtonid_empleado_evaluaEvaluacionEmpleadoUpdate.addActionListener(new ButtonActionListener(this,"id_empleado_evaluaEvaluacionEmpleadoUpdate"));
		//BUSQUEDA GENERAL
		this.jInternalFrameDetalleFormEvaluacionEmpleado.jButtonid_empleado_evaluaEvaluacionEmpleadoBusqueda.addActionListener(new ButtonActionListener(this,"id_empleado_evaluaEvaluacionEmpleadoBusqueda"));
		//ACTUALIZAR FK
		this.jInternalFrameDetalleFormEvaluacionEmpleado.jButtonid_tipo_evaluacion_empleadoEvaluacionEmpleadoUpdate.addActionListener(new ButtonActionListener(this,"id_tipo_evaluacion_empleadoEvaluacionEmpleadoUpdate"));
		//BUSQUEDA GENERAL
		this.jInternalFrameDetalleFormEvaluacionEmpleado.jButtonid_tipo_evaluacion_empleadoEvaluacionEmpleadoBusqueda.addActionListener(new ButtonActionListener(this,"id_tipo_evaluacion_empleadoEvaluacionEmpleadoBusqueda"));
		//BUSQUEDA GENERAL
		this.jInternalFrameDetalleFormEvaluacionEmpleado.jButtonfechaEvaluacionEmpleadoBusqueda.addActionListener(new ButtonActionListener(this,"fechaEvaluacionEmpleadoBusqueda"));
		//BUSQUEDA GENERAL
		this.jInternalFrameDetalleFormEvaluacionEmpleado.jButtonesta_evaluadoEvaluacionEmpleadoBusqueda.addActionListener(new ButtonActionListener(this,"esta_evaluadoEvaluacionEmpleadoBusqueda"));
		//ACTUALIZAR FK
		this.jInternalFrameDetalleFormEvaluacionEmpleado.jButtonid_anioEvaluacionEmpleadoUpdate.addActionListener(new ButtonActionListener(this,"id_anioEvaluacionEmpleadoUpdate"));
		//BUSQUEDA GENERAL
		this.jInternalFrameDetalleFormEvaluacionEmpleado.jButtonid_anioEvaluacionEmpleadoBusqueda.addActionListener(new ButtonActionListener(this,"id_anioEvaluacionEmpleadoBusqueda"));
		//ACTUALIZAR FK
		this.jInternalFrameDetalleFormEvaluacionEmpleado.jButtonid_semestreEvaluacionEmpleadoUpdate.addActionListener(new ButtonActionListener(this,"id_semestreEvaluacionEmpleadoUpdate"));
		//BUSQUEDA GENERAL
		this.jInternalFrameDetalleFormEvaluacionEmpleado.jButtonid_semestreEvaluacionEmpleadoBusqueda.addActionListener(new ButtonActionListener(this,"id_semestreEvaluacionEmpleadoBusqueda"));
		//ACTUALIZAR FK
		this.jInternalFrameDetalleFormEvaluacionEmpleado.jButtonid_trimestreEvaluacionEmpleadoUpdate.addActionListener(new ButtonActionListener(this,"id_trimestreEvaluacionEmpleadoUpdate"));
		//BUSQUEDA GENERAL
		this.jInternalFrameDetalleFormEvaluacionEmpleado.jButtonid_trimestreEvaluacionEmpleadoBusqueda.addActionListener(new ButtonActionListener(this,"id_trimestreEvaluacionEmpleadoBusqueda"));
		//ACTUALIZAR FK
		this.jInternalFrameDetalleFormEvaluacionEmpleado.jButtonid_bimestreEvaluacionEmpleadoUpdate.addActionListener(new ButtonActionListener(this,"id_bimestreEvaluacionEmpleadoUpdate"));
		//BUSQUEDA GENERAL
		this.jInternalFrameDetalleFormEvaluacionEmpleado.jButtonid_bimestreEvaluacionEmpleadoBusqueda.addActionListener(new ButtonActionListener(this,"id_bimestreEvaluacionEmpleadoBusqueda"));
		//ACTUALIZAR FK
		this.jInternalFrameDetalleFormEvaluacionEmpleado.jButtonid_mesEvaluacionEmpleadoUpdate.addActionListener(new ButtonActionListener(this,"id_mesEvaluacionEmpleadoUpdate"));
		//BUSQUEDA GENERAL
		this.jInternalFrameDetalleFormEvaluacionEmpleado.jButtonid_mesEvaluacionEmpleadoBusqueda.addActionListener(new ButtonActionListener(this,"id_mesEvaluacionEmpleadoBusqueda"));
		//BUSQUEDA GENERAL
		this.jInternalFrameDetalleFormEvaluacionEmpleado.jButtonobservacion1EvaluacionEmpleadoBusqueda.addActionListener(new ButtonActionListener(this,"observacion1EvaluacionEmpleadoBusqueda"));
		//BUSQUEDA GENERAL
		this.jInternalFrameDetalleFormEvaluacionEmpleado.jButtonobservacion2EvaluacionEmpleadoBusqueda.addActionListener(new ButtonActionListener(this,"observacion2EvaluacionEmpleadoBusqueda"));
		//BUSQUEDA GENERAL
		this.jInternalFrameDetalleFormEvaluacionEmpleado.jButtonobservacion3EvaluacionEmpleadoBusqueda.addActionListener(new ButtonActionListener(this,"observacion3EvaluacionEmpleadoBusqueda"));
		//BUSQUEDA GENERAL
		this.jInternalFrameDetalleFormEvaluacionEmpleado.jButtonobservacion4EvaluacionEmpleadoBusqueda.addActionListener(new ButtonActionListener(this,"observacion4EvaluacionEmpleadoBusqueda"));
		}
		
		if(!this.conCargarMinimo) {
		//BYDAN_BUSQUEDAS
		
		
			this.jButtonFK_IdAnioEvaluacionEmpleado.addActionListener(new ButtonActionListener(this,"FK_IdAnioEvaluacionEmpleado"));

			this.jButtonFK_IdBimestreEvaluacionEmpleado.addActionListener(new ButtonActionListener(this,"FK_IdBimestreEvaluacionEmpleado"));

			this.jButtonFK_IdEmpleadoEvaluacionEmpleado.addActionListener(new ButtonActionListener(this,"FK_IdEmpleadoEvaluacionEmpleado"));

			this.jButtonFK_IdEmpleadoEvaluaEvaluacionEmpleado.addActionListener(new ButtonActionListener(this,"FK_IdEmpleadoEvaluaEvaluacionEmpleado"));

			this.jButtonFK_IdEstructuraEvaluacionEmpleado.addActionListener(new ButtonActionListener(this,"FK_IdEstructuraEvaluacionEmpleado"));

			this.jButtonFK_IdMesEvaluacionEmpleado.addActionListener(new ButtonActionListener(this,"FK_IdMesEvaluacionEmpleado"));

			this.jButtonFK_IdSemestreEvaluacionEmpleado.addActionListener(new ButtonActionListener(this,"FK_IdSemestreEvaluacionEmpleado"));

			this.jButtonFK_IdTipoEvaluacionEmpleadoEvaluacionEmpleado.addActionListener(new ButtonActionListener(this,"FK_IdTipoEvaluacionEmpleadoEvaluacionEmpleado"));

			this.jButtonFK_IdTrimestreEvaluacionEmpleado.addActionListener(new ButtonActionListener(this,"FK_IdTrimestreEvaluacionEmpleado"));
		
		
		
			//REPORTE DINAMICO
			
			if(this.jInternalFrameReporteDinamicoEvaluacionEmpleado!=null) {
				this.jInternalFrameReporteDinamicoEvaluacionEmpleado.getjButtonCerrarReporteDinamico().addActionListener (new ButtonActionListener(this,"CerrarReporteDinamicoEvaluacionEmpleado"));
				this.jInternalFrameReporteDinamicoEvaluacionEmpleado.getjButtonGenerarReporteDinamico().addActionListener (new ButtonActionListener(this,"GenerarReporteDinamicoEvaluacionEmpleado"));
				this.jInternalFrameReporteDinamicoEvaluacionEmpleado.getjButtonGenerarExcelReporteDinamico().addActionListener (new ButtonActionListener(this,"GenerarExcelReporteDinamicoEvaluacionEmpleado"));
			}
			
			//this.jButtonCerrarReporteDinamicoEvaluacionEmpleado.addActionListener (new ButtonActionListener(this,"CerrarReporteDinamicoEvaluacionEmpleado"));				
			//this.jButtonGenerarReporteDinamicoEvaluacionEmpleado.addActionListener (new ButtonActionListener(this,"GenerarReporteDinamicoEvaluacionEmpleado"));
			//this.jButtonGenerarExcelReporteDinamicoEvaluacionEmpleado.addActionListener (new ButtonActionListener(this,"GenerarExcelReporteDinamicoEvaluacionEmpleado"));
				
				
			//IMPORTACION			
			if(this.jInternalFrameImportacionEvaluacionEmpleado!=null) {
				this.jInternalFrameImportacionEvaluacionEmpleado.getjButtonCerrarImportacion().addActionListener (new ButtonActionListener(this,"CerrarImportacionEvaluacionEmpleado"));
				this.jInternalFrameImportacionEvaluacionEmpleado.getjButtonGenerarImportacion().addActionListener (new ButtonActionListener(this,"GenerarImportacionEvaluacionEmpleado"));
				this.jInternalFrameImportacionEvaluacionEmpleado.getjButtonAbrirImportacion().addActionListener (new ButtonActionListener(this,"AbrirImportacionEvaluacionEmpleado"));
			}
			
			//ORDER BY
			this.jButtonAbrirOrderByEvaluacionEmpleado.addActionListener (new ButtonActionListener(this,"AbrirOrderByEvaluacionEmpleado"));
			
			this.jButtonAbrirOrderByToolBarEvaluacionEmpleado.addActionListener (new ButtonActionListener(this,"AbrirOrderByToolBarEvaluacionEmpleado"));			
			
			if(this.jInternalFrameOrderByEvaluacionEmpleado!=null) {
				this.jInternalFrameOrderByEvaluacionEmpleado.getjButtonCerrarOrderBy().addActionListener (new ButtonActionListener(this,"CerrarOrderByEvaluacionEmpleado"));				
			}
			
			
		}
		
		
		
		if(!this.conCargarMinimo) {
			if(this.jInternalFrameDetalleFormEvaluacionEmpleado!=null) { //if(this.conCargarFormDetalle) {
			;
			}
		}
		
		
		//TABBED PANE RELACIONES
		if(this.jInternalFrameDetalleFormEvaluacionEmpleado!=null) { //if(this.conCargarFormDetalle) {
			this.jInternalFrameDetalleFormEvaluacionEmpleado.jTabbedPaneRelacionesEvaluacionEmpleado.addChangeListener(new TabbedPaneChangeListener(this,"RelacionesEvaluacionEmpleado"));
		
		;
		}
		//TABBED PANE RELACIONES FIN(EXTRA TAB)		
	}
	
	/*
	public void initActions() {
		String sMapKey = "";
		InputMap inputMap =null;
		
		this.addInternalFrameListener(new javax.swing.event.InternalFrameAdapter() {
            public void internalFrameClosing(InternalFrameEvent event) {          	
            	try {
            		closingInternalFrameEvaluacionEmpleado();
				} catch (Exception e) {
					e.printStackTrace();
				}
            }
        });
		
		this.jInternalFrameDetalleFormEvaluacionEmpleado.addInternalFrameListener(new javax.swing.event.InternalFrameAdapter() {
	        public void internalFrameClosing(InternalFrameEvent event) {
	            JInternalFrameBase jInternalFrameDetalleFormEvaluacionEmpleado = (JInternalFrameBase)event.getSource();
	            	
	            EvaluacionEmpleadoBeanSwingJInternalFrame jInternalFrameParent=(EvaluacionEmpleadoBeanSwingJInternalFrame)jInternalFrameDetalleFormEvaluacionEmpleado.getjInternalFrameParent();
	                
	            try {
					jInternalFrameParent.jButtonCancelarEvaluacionEmpleadoActionPerformed(null);
					
					//jInternalFrameParent.dispose();
					//jInternalFrameParent=null;
					
				} catch (Exception e) {
					e.printStackTrace();
				}
	        }
	    });
			
		this.jTableDatosEvaluacionEmpleado.getSelectionModel().addListSelectionListener (
	                new ListSelectionListener() {
	                    public void valueChanged(ListSelectionEvent e) {
							//BYDAN_DESHABILITADO
	                    	//try {jTableDatosEvaluacionEmpleadoListSelectionListener(e);}catch(Exception e1){e1.printStackTrace();}
	                    }
	                }
	     );
		
		this.jTableDatosEvaluacionEmpleado.addMouseListener(new MouseAdapter() {
			   public void mouseClicked(MouseEvent evt) {
				      if (evt.getClickCount() == 2) {
				    	  jButtonIdActionPerformed(null,jTableDatosEvaluacionEmpleado.getSelectedRow(),false,false);
				      }
				   }
		});
		
		this.jButtonNuevoEvaluacionEmpleado.addActionListener (
	          new java.awt.event.ActionListener() {
	              public void actionPerformed(ActionEvent evt) {
	            	  try {jButtonNuevoEvaluacionEmpleadoActionPerformed(evt,false);}catch(Exception e){e.printStackTrace();}
	              }
	          }
        );
		
		this.jButtonNuevoToolBarEvaluacionEmpleado.addActionListener (
	          new java.awt.event.ActionListener() {
	              public void actionPerformed(ActionEvent evt) {
	            	  try {jButtonNuevoEvaluacionEmpleadoActionPerformed(evt,false);}catch(Exception e){e.printStackTrace();}
	              }
	          }
        );
		
		this.jMenuItemNuevoEvaluacionEmpleado.addActionListener (
	          new java.awt.event.ActionListener() {
	              public void actionPerformed(ActionEvent evt) {
	            	  try {jButtonNuevoEvaluacionEmpleadoActionPerformed(evt,false);}catch(Exception e){e.printStackTrace();}
	              }
	          }
        );
		
		sMapKey = "NuevoEvaluacionEmpleado";
		inputMap = this.jButtonNuevoEvaluacionEmpleado.getInputMap(JComponent.WHEN_IN_FOCUSED_WINDOW);
		inputMap.put(KeyStroke.getKeyStroke(KeyEvent.VK_N , KeyEvent.CTRL_MASK), sMapKey);
			
		this.jButtonNuevoEvaluacionEmpleado.getActionMap().put(sMapKey, new AbstractAction() {
			public static final long serialVersionUID = 1L;
			public void actionPerformed(ActionEvent evt) {
			    try {jButtonNuevoEvaluacionEmpleadoActionPerformed(evt,false);} catch (Exception e) {e.printStackTrace();}
			}
		});
		
		this.jButtonNuevoRelacionesEvaluacionEmpleado.addActionListener (
	          new java.awt.event.ActionListener() {
	              public void actionPerformed(ActionEvent evt) {
	            	  try {jButtonNuevoEvaluacionEmpleadoActionPerformed(evt,true);}catch(Exception e){e.printStackTrace();}
	              }
	          }
        );
		
		this.jButtonNuevoRelacionesToolBarEvaluacionEmpleado.addActionListener (
	          new java.awt.event.ActionListener() {
	              public void actionPerformed(ActionEvent evt) {
	            	  try {jButtonNuevoEvaluacionEmpleadoActionPerformed(evt,true);}catch(Exception e){e.printStackTrace();}
	              }
	          }
        );
		
		this.jMenuItemNuevoRelacionesEvaluacionEmpleado.addActionListener (
	          new java.awt.event.ActionListener() {
	              public void actionPerformed(ActionEvent evt) {
	            	  try {jButtonNuevoEvaluacionEmpleadoActionPerformed(evt,true);}catch(Exception e){e.printStackTrace();}
	              }
	          }
        );
		
		sMapKey = "NuevoRelacionesEvaluacionEmpleado";
		inputMap = this.jButtonNuevoRelacionesEvaluacionEmpleado.getInputMap(JComponent.WHEN_IN_FOCUSED_WINDOW);
		inputMap.put(KeyStroke.getKeyStroke(KeyEvent.VK_R , KeyEvent.CTRL_MASK), sMapKey);
			
		this.jButtonNuevoRelacionesEvaluacionEmpleado.getActionMap().put(sMapKey, new AbstractAction() {
			public static final long serialVersionUID = 1L;
			public void actionPerformed(ActionEvent evt) {
			    try {jButtonNuevoEvaluacionEmpleadoActionPerformed(evt,true);} catch (Exception e) {e.printStackTrace();}
			}
		});
		
		this.jButtonModificarEvaluacionEmpleado.addActionListener (
	          new java.awt.event.ActionListener() {
	              public void actionPerformed(ActionEvent evt) {
	            	  try {jButtonModificarEvaluacionEmpleadoActionPerformed(evt);}catch(Exception e){e.printStackTrace();}
	              }
	          }
        );
		
		this.jButtonModificarToolBarEvaluacionEmpleado.addActionListener (
	          new java.awt.event.ActionListener() {
	              public void actionPerformed(ActionEvent evt) {
	            	  try {jButtonModificarEvaluacionEmpleadoActionPerformed(evt);}catch(Exception e){e.printStackTrace();}
	              }
	          }
        );
		
		this.jMenuItemModificarEvaluacionEmpleado.addActionListener (
	          new java.awt.event.ActionListener() {
	              public void actionPerformed(ActionEvent evt) {
	            	  try {jButtonModificarEvaluacionEmpleadoActionPerformed(evt);}catch(Exception e){e.printStackTrace();}
	              }
	          }
        );
		
		sMapKey = "ModificarEvaluacionEmpleado";
		inputMap = this.jButtonModificarEvaluacionEmpleado.getInputMap(JComponent.WHEN_IN_FOCUSED_WINDOW);
		inputMap.put(KeyStroke.getKeyStroke(KeyEvent.VK_M , KeyEvent.CTRL_MASK), sMapKey);
			
		this.jButtonModificarEvaluacionEmpleado.getActionMap().put(sMapKey, new AbstractAction() {
			public static final long serialVersionUID = 1L;
			public void actionPerformed(ActionEvent evt) {
			    try {jButtonModificarEvaluacionEmpleadoActionPerformed(evt);} catch (Exception e) {e.printStackTrace();}
			}
		});
		
		this.jButtonActualizarEvaluacionEmpleado.addActionListener (
	          new java.awt.event.ActionListener() {
	              public void actionPerformed(ActionEvent evt) {
	            	  try {jButtonActualizarEvaluacionEmpleadoActionPerformed(evt);}catch(Exception e){e.printStackTrace();}
	              }
	          }
        );
		
		this.jButtonActualizarToolBarEvaluacionEmpleado.addActionListener (
	          new java.awt.event.ActionListener() {
	              public void actionPerformed(ActionEvent evt) {
	            	  try {jButtonActualizarEvaluacionEmpleadoActionPerformed(evt);}catch(Exception e){e.printStackTrace();}
	              }
	          }
        );
		
		this.jMenuItemActualizarEvaluacionEmpleado.addActionListener (
	          new java.awt.event.ActionListener() {
	              public void actionPerformed(ActionEvent evt) {
	            	  try {jButtonActualizarEvaluacionEmpleadoActionPerformed(evt);}catch(Exception e){e.printStackTrace();}
	              }
	          }
        );
		
		sMapKey = "ActualizarEvaluacionEmpleado";
		inputMap = this.jButtonActualizarEvaluacionEmpleado.getInputMap(JComponent.WHEN_IN_FOCUSED_WINDOW);
		inputMap.put(KeyStroke.getKeyStroke(KeyEvent.VK_G , KeyEvent.CTRL_MASK), sMapKey);
			
		this.jButtonActualizarEvaluacionEmpleado.getActionMap().put(sMapKey, new AbstractAction() {
			public static final long serialVersionUID = 1L;
			public void actionPerformed(ActionEvent evt) {
			    try {jButtonActualizarEvaluacionEmpleadoActionPerformed(evt);} catch (Exception e) {e.printStackTrace();}
			}
		});
		
		this.jButtonEliminarEvaluacionEmpleado.addActionListener (
	          new java.awt.event.ActionListener() {
	              public void actionPerformed(ActionEvent evt) {
	            	  try {jButtonEliminarEvaluacionEmpleadoActionPerformed(evt);}catch(Exception e){e.printStackTrace();}
	              }
	          }
        );
		
		this.jButtonEliminarToolBarEvaluacionEmpleado.addActionListener (
	          new java.awt.event.ActionListener() {
	              public void actionPerformed(ActionEvent evt) {
	            	  try {jButtonEliminarEvaluacionEmpleadoActionPerformed(evt);}catch(Exception e){e.printStackTrace();}
	              }
	          }
        );
				
		this.jMenuItemEliminarEvaluacionEmpleado.addActionListener (
	          new java.awt.event.ActionListener() {
	              public void actionPerformed(ActionEvent evt) {
	            	  try {jButtonEliminarEvaluacionEmpleadoActionPerformed(evt);}catch(Exception e){e.printStackTrace();}
	              }
	          }
        );
		
		sMapKey = "EliminarEvaluacionEmpleado";
		inputMap = this.jButtonEliminarEvaluacionEmpleado.getInputMap(JComponent.WHEN_IN_FOCUSED_WINDOW);
		inputMap.put(KeyStroke.getKeyStroke(KeyEvent.VK_E , KeyEvent.CTRL_MASK), sMapKey);
			
		this.jButtonEliminarEvaluacionEmpleado.getActionMap().put(sMapKey, new AbstractAction() {
			public static final long serialVersionUID = 1L;
			public void actionPerformed(ActionEvent evt) {
			    try {jButtonEliminarEvaluacionEmpleadoActionPerformed(evt);} catch (Exception e) {e.printStackTrace();}
			}
		});
		
		this.jButtonCancelarEvaluacionEmpleado.addActionListener (
	          new java.awt.event.ActionListener() {
	              public void actionPerformed(ActionEvent evt) {
	            	  try {jButtonCancelarEvaluacionEmpleadoActionPerformed(evt);}catch(Exception e){e.printStackTrace();}
	              }
	          }
        );
		
		this.jButtonCancelarToolBarEvaluacionEmpleado.addActionListener (
	          new java.awt.event.ActionListener() {
	              public void actionPerformed(ActionEvent evt) {
	            	  try {jButtonCancelarEvaluacionEmpleadoActionPerformed(evt);}catch(Exception e){e.printStackTrace();}
	              }
	          }
        );
		
		this.jMenuItemCancelarEvaluacionEmpleado.addActionListener (
	          new java.awt.event.ActionListener() {
	              public void actionPerformed(ActionEvent evt) {
	            	  try {jButtonCancelarEvaluacionEmpleadoActionPerformed(evt);}catch(Exception e){e.printStackTrace();}
	              }
	          }
        );
		
		sMapKey = "CancelarEvaluacionEmpleado";
		inputMap = this.jButtonCancelarEvaluacionEmpleado.getInputMap(JComponent.WHEN_IN_FOCUSED_WINDOW);
		inputMap.put(KeyStroke.getKeyStroke(KeyEvent.VK_Q , KeyEvent.CTRL_MASK), sMapKey);
			
		this.jButtonCancelarEvaluacionEmpleado.getActionMap().put(sMapKey, new AbstractAction() {
			public static final long serialVersionUID = 1L;
			public void actionPerformed(ActionEvent evt) {
			    try {jButtonCancelarEvaluacionEmpleadoActionPerformed(evt);} catch (Exception e) {e.printStackTrace();}
			}
		});
		
		this.jButtonCerrarEvaluacionEmpleado.addActionListener (
	          new java.awt.event.ActionListener() {
	              public void actionPerformed(ActionEvent evt) {
	            	  try {jButtonCerrarEvaluacionEmpleadoActionPerformed(evt);}catch(Exception e){e.printStackTrace();}
	              }
	          }
        );
		
		this.jButtonCerrarToolBarEvaluacionEmpleado.addActionListener (
	          new java.awt.event.ActionListener() {
	              public void actionPerformed(ActionEvent evt) {
	            	  try {jButtonCerrarEvaluacionEmpleadoActionPerformed(evt);}catch(Exception e){e.printStackTrace();}
	              }
	          }
        );
		
		this.jMenuItemCerrarEvaluacionEmpleado.addActionListener (
	          new java.awt.event.ActionListener() {
	              public void actionPerformed(ActionEvent evt) {
	            	  try {jButtonCerrarEvaluacionEmpleadoActionPerformed(evt);}catch(Exception e){e.printStackTrace();}
	              }
	          }
        );
		
		this.jMenuItemDetalleCerrarEvaluacionEmpleado.addActionListener (
	          new java.awt.event.ActionListener() {
	              public void actionPerformed(ActionEvent evt) {
	            	  //try {jButtonCerrarEvaluacionEmpleadoActionPerformed(evt);}catch(Exception e){e.printStackTrace();}
					try {jButtonCancelarEvaluacionEmpleadoActionPerformed(evt);}catch(Exception e){e.printStackTrace();}
	              }
	          }
        );
		
		sMapKey = "CerrarEvaluacionEmpleado";
		inputMap = this.jButtonCerrarEvaluacionEmpleado.getInputMap(JComponent.WHEN_IN_FOCUSED_WINDOW);
		inputMap.put(KeyStroke.getKeyStroke(KeyEvent.VK_C , KeyEvent.ALT_MASK), sMapKey);
			
		this.jButtonCerrarEvaluacionEmpleado.getActionMap().put(sMapKey, new AbstractAction() {
			public static final long serialVersionUID = 1L;
			public void actionPerformed(ActionEvent evt) {
			    try {jButtonCerrarEvaluacionEmpleadoActionPerformed(evt);} catch (Exception e) {e.printStackTrace();}
			}
		});
		
		this.jInternalFrameDetalleFormEvaluacionEmpleado.jButtonGuardarCambiosEvaluacionEmpleado.addActionListener (
	          new java.awt.event.ActionListener() {
	              public void actionPerformed(ActionEvent evt) {
	            	  try {jButtonGuardarCambiosEvaluacionEmpleadoActionPerformed(evt);}catch(Exception e){e.printStackTrace();}
	              }
	          }
        );
		
		this.jButtonGuardarCambiosToolBarEvaluacionEmpleado.addActionListener (
	          new java.awt.event.ActionListener() {
	              public void actionPerformed(ActionEvent evt) {
	            	  try {jButtonGuardarCambiosEvaluacionEmpleadoActionPerformed(evt);}catch(Exception e){e.printStackTrace();}
	              }
	          }
        );
		
		this.jMenuItemGuardarCambiosEvaluacionEmpleado.addActionListener (
	          new java.awt.event.ActionListener() {
	              public void actionPerformed(ActionEvent evt) {
	            	  try {jButtonGuardarCambiosEvaluacionEmpleadoActionPerformed(evt);}catch(Exception e){e.printStackTrace();}
	              }
	          }
        );
		
		this.jButtonGuardarCambiosTablaEvaluacionEmpleado.addActionListener (
	          new java.awt.event.ActionListener() {
	              public void actionPerformed(ActionEvent evt) {
	            	  try {jButtonGuardarCambiosEvaluacionEmpleadoActionPerformed(evt);}catch(Exception e){e.printStackTrace();}
	              }
	          }
        );
		
		this.jButtonGuardarCambiosTablaToolBarEvaluacionEmpleado.addActionListener (
	          new java.awt.event.ActionListener() {
	              public void actionPerformed(ActionEvent evt) {
	            	  try {jButtonGuardarCambiosEvaluacionEmpleadoActionPerformed(evt);}catch(Exception e){e.printStackTrace();}
	              }
	          }
        );
		
		this.jMenuItemGuardarCambiosTablaEvaluacionEmpleado.addActionListener (
	          new java.awt.event.ActionListener() {
	              public void actionPerformed(ActionEvent evt) {
	            	  try {jButtonGuardarCambiosEvaluacionEmpleadoActionPerformed(evt);}catch(Exception e){e.printStackTrace();}
	              }
	          }
        );
		
		sMapKey = "GuardarCambiosEvaluacionEmpleado";
		inputMap = this.jInternalFrameDetalleFormEvaluacionEmpleado.jButtonGuardarCambiosEvaluacionEmpleado.getInputMap(JComponent.WHEN_IN_FOCUSED_WINDOW);
		inputMap.put(KeyStroke.getKeyStroke(KeyEvent.VK_G , KeyEvent.CTRL_MASK), sMapKey);
			
		this.jInternalFrameDetalleFormEvaluacionEmpleado.jButtonGuardarCambiosEvaluacionEmpleado.getActionMap().put(sMapKey, new AbstractAction() {
			public static final long serialVersionUID = 1L;
			public void actionPerformed(ActionEvent evt) {
			    try {jButtonGuardarCambiosEvaluacionEmpleadoActionPerformed(evt);} catch (Exception e) {e.printStackTrace();}
			}
		});
		
		this.jButtonRecargarInformacionEvaluacionEmpleado.addActionListener (
	          new java.awt.event.ActionListener() {
	              public void actionPerformed(ActionEvent evt) {
	            	  try {jButtonRecargarInformacionEvaluacionEmpleadoActionPerformed(evt);}catch(Exception e){e.printStackTrace();}
	              }
	          }
        );
		
		this.jButtonRecargarInformacionToolBarEvaluacionEmpleado.addActionListener (
	          new java.awt.event.ActionListener() {
	              public void actionPerformed(ActionEvent evt) {
	            	  try {jButtonRecargarInformacionEvaluacionEmpleadoActionPerformed(evt);}catch(Exception e){e.printStackTrace();}
	              }
	          }
        );
		
		this.jMenuItemRecargarInformacionEvaluacionEmpleado.addActionListener (
	          new java.awt.event.ActionListener() {
	              public void actionPerformed(ActionEvent evt) {
	            	  try {jButtonRecargarInformacionEvaluacionEmpleadoActionPerformed(evt);}catch(Exception e){e.printStackTrace();}
	              }
	          }
        );
		
		
		this.jButtonAnterioresEvaluacionEmpleado.addActionListener (
	          new java.awt.event.ActionListener() {
	              public void actionPerformed(ActionEvent evt) {
	            	  try {jButtonAnterioresEvaluacionEmpleadoActionPerformed(evt);}catch(Exception e){e.printStackTrace();}
	              }
	          }
        );
		
		this.jButtonAnterioresToolBarEvaluacionEmpleado.addActionListener (
	          new java.awt.event.ActionListener() {
	              public void actionPerformed(ActionEvent evt) {
	            	  try {jButtonAnterioresEvaluacionEmpleadoActionPerformed(evt);}catch(Exception e){e.printStackTrace();}
	              }
	          }
        );
		
		this.jMenuItemAnterioresEvaluacionEmpleado.addActionListener (
	          new java.awt.event.ActionListener() {
	              public void actionPerformed(ActionEvent evt) {
	            	  try {jButtonAnterioresEvaluacionEmpleadoActionPerformed(evt);}catch(Exception e){e.printStackTrace();}
	              }
	          }
        );
		
		this.jButtonSiguientesEvaluacionEmpleado.addActionListener (
	          new java.awt.event.ActionListener() {
	              public void actionPerformed(ActionEvent evt) {
	            	  try {jButtonSiguientesEvaluacionEmpleadoActionPerformed(evt);}catch(Exception e){e.printStackTrace();}
	              }
	          }
        );
		
		this.jButtonSiguientesToolBarEvaluacionEmpleado.addActionListener (
	          new java.awt.event.ActionListener() {
	              public void actionPerformed(ActionEvent evt) {
	            	  try {jButtonSiguientesEvaluacionEmpleadoActionPerformed(evt);}catch(Exception e){e.printStackTrace();}
	              }
	          }
        );
		
		this.jMenuItemSiguientesEvaluacionEmpleado.addActionListener (
	          new java.awt.event.ActionListener() {
	              public void actionPerformed(ActionEvent evt) {
	            	  try {jButtonSiguientesEvaluacionEmpleadoActionPerformed(evt);}catch(Exception e){e.printStackTrace();}
	              }
	          }
        );
		
		this.jButtonNuevoGuardarCambiosEvaluacionEmpleado.addActionListener (
	          new java.awt.event.ActionListener() {
	              public void actionPerformed(ActionEvent evt) {
	            	  try {jButtonNuevoGuardarCambiosEvaluacionEmpleadoActionPerformed(evt);}catch(Exception e){e.printStackTrace();}
	              }
	          }
        );
		
		this.jButtonNuevoGuardarCambiosToolBarEvaluacionEmpleado.addActionListener (
	          new java.awt.event.ActionListener() {
	              public void actionPerformed(ActionEvent evt) {
	            	  try {jButtonNuevoGuardarCambiosEvaluacionEmpleadoActionPerformed(evt);}catch(Exception e){e.printStackTrace();}
	              }
	          }
        );
		
		this.jMenuItemNuevoGuardarCambiosEvaluacionEmpleado.addActionListener (
	          new java.awt.event.ActionListener() {
	              public void actionPerformed(ActionEvent evt) {
	            	  try {jButtonNuevoGuardarCambiosEvaluacionEmpleadoActionPerformed(evt);}catch(Exception e){e.printStackTrace();}
	              }
	          }
        );
		
		
		//SELECCIONAR TODOS
		this.jCheckBoxSeleccionarTodosEvaluacionEmpleado.addItemListener(new ItemListener() {		
			public void itemStateChanged(ItemEvent evt) {
				try {jCheckBoxSeleccionarTodosEvaluacionEmpleadoItemListener(evt);}catch(Exception e){e.printStackTrace();}
			}
		});

		this.jComboBoxTiposAccionesEvaluacionEmpleado.addActionListener (new ActionListener () {
			public void actionPerformed(ActionEvent e) {
				try {jComboBoxTiposAccionesEvaluacionEmpleadoActionListener(e);} catch (Exception e1) { e1.printStackTrace();}
			};
		});
		
		this.jComboBoxTiposSeleccionarEvaluacionEmpleado.addActionListener (new ActionListener () {
			public void actionPerformed(ActionEvent e) {
				try {jComboBoxTiposSeleccionarEvaluacionEmpleadoActionListener(e);} catch (Exception e1) { e1.printStackTrace();}
			};
		});
		
		this.jTextFieldValorCampoGeneralEvaluacionEmpleado.addActionListener (new ActionListener () {
			public void actionPerformed(ActionEvent e) {
				try {jTextFieldValorCampoGeneralEvaluacionEmpleadoActionListener(e);} catch (Exception e1) { e1.printStackTrace();}
			};
		});
		
		
		//BUSQUEDA GENERAL
		this.jInternalFrameDetalleFormEvaluacionEmpleado.jButtonidEvaluacionEmpleadoBusqueda.addActionListener(new ButtonActionListener(this,"idEvaluacionEmpleadoBusqueda"));
		//ACTUALIZAR FK
		this.jInternalFrameDetalleFormEvaluacionEmpleado.jButtonid_empresaEvaluacionEmpleadoUpdate.addActionListener(new ButtonActionListener(this,"id_empresaEvaluacionEmpleadoUpdate"));
		//BUSQUEDA GENERAL
		this.jInternalFrameDetalleFormEvaluacionEmpleado.jButtonid_empresaEvaluacionEmpleadoBusqueda.addActionListener(new ButtonActionListener(this,"id_empresaEvaluacionEmpleadoBusqueda"));
		//ACTUALIZAR FK
		this.jInternalFrameDetalleFormEvaluacionEmpleado.jButtonid_sucursalEvaluacionEmpleadoUpdate.addActionListener(new ButtonActionListener(this,"id_sucursalEvaluacionEmpleadoUpdate"));
		//BUSQUEDA GENERAL
		this.jInternalFrameDetalleFormEvaluacionEmpleado.jButtonid_sucursalEvaluacionEmpleadoBusqueda.addActionListener(new ButtonActionListener(this,"id_sucursalEvaluacionEmpleadoBusqueda"));
		//ACTUALIZAR FK
		this.jInternalFrameDetalleFormEvaluacionEmpleado.jButtonid_ejercicioEvaluacionEmpleadoUpdate.addActionListener(new ButtonActionListener(this,"id_ejercicioEvaluacionEmpleadoUpdate"));
		//BUSQUEDA GENERAL
		this.jInternalFrameDetalleFormEvaluacionEmpleado.jButtonid_ejercicioEvaluacionEmpleadoBusqueda.addActionListener(new ButtonActionListener(this,"id_ejercicioEvaluacionEmpleadoBusqueda"));
		//ACTUALIZAR FK
		this.jInternalFrameDetalleFormEvaluacionEmpleado.jButtonid_periodoEvaluacionEmpleadoUpdate.addActionListener(new ButtonActionListener(this,"id_periodoEvaluacionEmpleadoUpdate"));
		//BUSQUEDA GENERAL
		this.jInternalFrameDetalleFormEvaluacionEmpleado.jButtonid_periodoEvaluacionEmpleadoBusqueda.addActionListener(new ButtonActionListener(this,"id_periodoEvaluacionEmpleadoBusqueda"));
		//ACTUALIZAR FK
		this.jInternalFrameDetalleFormEvaluacionEmpleado.jButtonid_estructuraEvaluacionEmpleadoUpdate.addActionListener(new ButtonActionListener(this,"id_estructuraEvaluacionEmpleadoUpdate"));
		//BUSQUEDA GENERAL
		this.jInternalFrameDetalleFormEvaluacionEmpleado.jButtonid_estructuraEvaluacionEmpleadoBusqueda.addActionListener(new ButtonActionListener(this,"id_estructuraEvaluacionEmpleadoBusqueda"));
		//ACTUALIZAR FK
		this.jInternalFrameDetalleFormEvaluacionEmpleado.jButtonid_empleadoEvaluacionEmpleadoUpdate.addActionListener(new ButtonActionListener(this,"id_empleadoEvaluacionEmpleadoUpdate"));
		//BUSQUEDA GENERAL
		this.jInternalFrameDetalleFormEvaluacionEmpleado.jButtonid_empleadoEvaluacionEmpleadoBusqueda.addActionListener(new ButtonActionListener(this,"id_empleadoEvaluacionEmpleadoBusqueda"));
		//ACTUALIZAR FK
		this.jInternalFrameDetalleFormEvaluacionEmpleado.jButtonid_empleado_evaluaEvaluacionEmpleadoUpdate.addActionListener(new ButtonActionListener(this,"id_empleado_evaluaEvaluacionEmpleadoUpdate"));
		//BUSQUEDA GENERAL
		this.jInternalFrameDetalleFormEvaluacionEmpleado.jButtonid_empleado_evaluaEvaluacionEmpleadoBusqueda.addActionListener(new ButtonActionListener(this,"id_empleado_evaluaEvaluacionEmpleadoBusqueda"));
		//ACTUALIZAR FK
		this.jInternalFrameDetalleFormEvaluacionEmpleado.jButtonid_tipo_evaluacion_empleadoEvaluacionEmpleadoUpdate.addActionListener(new ButtonActionListener(this,"id_tipo_evaluacion_empleadoEvaluacionEmpleadoUpdate"));
		//BUSQUEDA GENERAL
		this.jInternalFrameDetalleFormEvaluacionEmpleado.jButtonid_tipo_evaluacion_empleadoEvaluacionEmpleadoBusqueda.addActionListener(new ButtonActionListener(this,"id_tipo_evaluacion_empleadoEvaluacionEmpleadoBusqueda"));
		//BUSQUEDA GENERAL
		this.jInternalFrameDetalleFormEvaluacionEmpleado.jButtonfechaEvaluacionEmpleadoBusqueda.addActionListener(new ButtonActionListener(this,"fechaEvaluacionEmpleadoBusqueda"));
		//BUSQUEDA GENERAL
		this.jInternalFrameDetalleFormEvaluacionEmpleado.jButtonesta_evaluadoEvaluacionEmpleadoBusqueda.addActionListener(new ButtonActionListener(this,"esta_evaluadoEvaluacionEmpleadoBusqueda"));
		//ACTUALIZAR FK
		this.jInternalFrameDetalleFormEvaluacionEmpleado.jButtonid_anioEvaluacionEmpleadoUpdate.addActionListener(new ButtonActionListener(this,"id_anioEvaluacionEmpleadoUpdate"));
		//BUSQUEDA GENERAL
		this.jInternalFrameDetalleFormEvaluacionEmpleado.jButtonid_anioEvaluacionEmpleadoBusqueda.addActionListener(new ButtonActionListener(this,"id_anioEvaluacionEmpleadoBusqueda"));
		//ACTUALIZAR FK
		this.jInternalFrameDetalleFormEvaluacionEmpleado.jButtonid_semestreEvaluacionEmpleadoUpdate.addActionListener(new ButtonActionListener(this,"id_semestreEvaluacionEmpleadoUpdate"));
		//BUSQUEDA GENERAL
		this.jInternalFrameDetalleFormEvaluacionEmpleado.jButtonid_semestreEvaluacionEmpleadoBusqueda.addActionListener(new ButtonActionListener(this,"id_semestreEvaluacionEmpleadoBusqueda"));
		//ACTUALIZAR FK
		this.jInternalFrameDetalleFormEvaluacionEmpleado.jButtonid_trimestreEvaluacionEmpleadoUpdate.addActionListener(new ButtonActionListener(this,"id_trimestreEvaluacionEmpleadoUpdate"));
		//BUSQUEDA GENERAL
		this.jInternalFrameDetalleFormEvaluacionEmpleado.jButtonid_trimestreEvaluacionEmpleadoBusqueda.addActionListener(new ButtonActionListener(this,"id_trimestreEvaluacionEmpleadoBusqueda"));
		//ACTUALIZAR FK
		this.jInternalFrameDetalleFormEvaluacionEmpleado.jButtonid_bimestreEvaluacionEmpleadoUpdate.addActionListener(new ButtonActionListener(this,"id_bimestreEvaluacionEmpleadoUpdate"));
		//BUSQUEDA GENERAL
		this.jInternalFrameDetalleFormEvaluacionEmpleado.jButtonid_bimestreEvaluacionEmpleadoBusqueda.addActionListener(new ButtonActionListener(this,"id_bimestreEvaluacionEmpleadoBusqueda"));
		//ACTUALIZAR FK
		this.jInternalFrameDetalleFormEvaluacionEmpleado.jButtonid_mesEvaluacionEmpleadoUpdate.addActionListener(new ButtonActionListener(this,"id_mesEvaluacionEmpleadoUpdate"));
		//BUSQUEDA GENERAL
		this.jInternalFrameDetalleFormEvaluacionEmpleado.jButtonid_mesEvaluacionEmpleadoBusqueda.addActionListener(new ButtonActionListener(this,"id_mesEvaluacionEmpleadoBusqueda"));
		//BUSQUEDA GENERAL
		this.jInternalFrameDetalleFormEvaluacionEmpleado.jButtonobservacion1EvaluacionEmpleadoBusqueda.addActionListener(new ButtonActionListener(this,"observacion1EvaluacionEmpleadoBusqueda"));
		//BUSQUEDA GENERAL
		this.jInternalFrameDetalleFormEvaluacionEmpleado.jButtonobservacion2EvaluacionEmpleadoBusqueda.addActionListener(new ButtonActionListener(this,"observacion2EvaluacionEmpleadoBusqueda"));
		//BUSQUEDA GENERAL
		this.jInternalFrameDetalleFormEvaluacionEmpleado.jButtonobservacion3EvaluacionEmpleadoBusqueda.addActionListener(new ButtonActionListener(this,"observacion3EvaluacionEmpleadoBusqueda"));
		//BUSQUEDA GENERAL
		this.jInternalFrameDetalleFormEvaluacionEmpleado.jButtonobservacion4EvaluacionEmpleadoBusqueda.addActionListener(new ButtonActionListener(this,"observacion4EvaluacionEmpleadoBusqueda"));
		
		
		this.jButtonFK_IdAnioEvaluacionEmpleado.addActionListener(new ButtonActionListener(this,"FK_IdAnioEvaluacionEmpleado"));

		this.jButtonFK_IdBimestreEvaluacionEmpleado.addActionListener(new ButtonActionListener(this,"FK_IdBimestreEvaluacionEmpleado"));

		this.jButtonFK_IdEmpleadoEvaluacionEmpleado.addActionListener(new ButtonActionListener(this,"FK_IdEmpleadoEvaluacionEmpleado"));

		this.jButtonFK_IdEmpleadoEvaluaEvaluacionEmpleado.addActionListener(new ButtonActionListener(this,"FK_IdEmpleadoEvaluaEvaluacionEmpleado"));

		this.jButtonFK_IdEstructuraEvaluacionEmpleado.addActionListener(new ButtonActionListener(this,"FK_IdEstructuraEvaluacionEmpleado"));

		this.jButtonFK_IdMesEvaluacionEmpleado.addActionListener(new ButtonActionListener(this,"FK_IdMesEvaluacionEmpleado"));

		this.jButtonFK_IdSemestreEvaluacionEmpleado.addActionListener(new ButtonActionListener(this,"FK_IdSemestreEvaluacionEmpleado"));

		this.jButtonFK_IdTipoEvaluacionEmpleadoEvaluacionEmpleado.addActionListener(new ButtonActionListener(this,"FK_IdTipoEvaluacionEmpleadoEvaluacionEmpleado"));

		this.jButtonFK_IdTrimestreEvaluacionEmpleado.addActionListener(new ButtonActionListener(this,"FK_IdTrimestreEvaluacionEmpleado"));

		
		//REPORTE DINAMICO
		this.jButtonCerrarReporteDinamicoEvaluacionEmpleado.addActionListener (
	          new java.awt.event.ActionListener() {
	              public void actionPerformed(ActionEvent evt) {
	            	  try {jButtonCerrarReporteDinamicoEvaluacionEmpleadoActionPerformed(evt);}catch(Exception e){e.printStackTrace();}
	              }
	          }
        );
		
		this.jButtonGenerarReporteDinamicoEvaluacionEmpleado.addActionListener (
	          new java.awt.event.ActionListener() {
	              public void actionPerformed(ActionEvent evt) {
	            	  try {jButtonGenerarReporteDinamicoEvaluacionEmpleadoActionPerformed(evt);}catch(Exception e){e.printStackTrace();}
	              }
	          }
        );
		
		this.jButtonGenerarExcelReporteDinamicoEvaluacionEmpleado.addActionListener (
	          new java.awt.event.ActionListener() {
	              public void actionPerformed(ActionEvent evt) {
	            	  try {jButtonGenerarExcelReporteDinamicoEvaluacionEmpleadoActionPerformed(evt);}catch(Exception e){e.printStackTrace();}
	              }
	          }
        );
		
		//IMPORTACION
		this.jButtonCerrarImportacionEvaluacionEmpleado.addActionListener (
	          new java.awt.event.ActionListener() {
	              public void actionPerformed(ActionEvent evt) {
	            	  try {jButtonCerrarImportacionEvaluacionEmpleadoActionPerformed(evt);}catch(Exception e){e.printStackTrace();}
	              }
	          }
        );
		
		this.jButtonGenerarImportacionEvaluacionEmpleado.addActionListener (
	          new java.awt.event.ActionListener() {
	              public void actionPerformed(ActionEvent evt) {
	            	  try {jButtonGenerarImportacionEvaluacionEmpleadoActionPerformed(evt);}catch(Exception e){e.printStackTrace();}
	              }
	          }
        );
		
		this.jButtonAbrirImportacionEvaluacionEmpleado.addActionListener (
	          new java.awt.event.ActionListener() {
	              public void actionPerformed(ActionEvent evt) {
	            	  try {jButtonAbrirImportacionEvaluacionEmpleadoActionPerformed(evt);}catch(Exception e){e.printStackTrace();}
	              }
	          }
        );
	}
	*/
	
	
	public void jComboBoxTiposSeleccionarEvaluacionEmpleadoActionListener(ActionEvent evt) throws Exception {    		
		try {			
			Reporte reporte=(Reporte)this.jComboBoxTiposSeleccionarEvaluacionEmpleado.getSelectedItem();
			
			//if(reporte.getsCodigo().equals("SELECCIONAR")) {
			//}					
		} catch(Exception e) {
			FuncionesSwing.manageException(this, e,logger,EvaluacionEmpleadoConstantesFunciones.CLASSNAME);
		}
	}	
	
	
	
	public void seleccionarTodosEvaluacionEmpleado(Boolean conSeleccionarTodos) throws Exception {    		
		try {
			if(Constantes.ISUSAEJBLOGICLAYER) {				
				for(EvaluacionEmpleado evaluacionempleadoAux:this.evaluacionempleadoLogic.getEvaluacionEmpleados()) {
					evaluacionempleadoAux.setIsSelected(conSeleccionarTodos);
				}			
			} else if(Constantes.ISUSAEJBREMOTE||Constantes.ISUSAEJBHOME) {
				for(EvaluacionEmpleado evaluacionempleadoAux:evaluacionempleados) {
					evaluacionempleadoAux.setIsSelected(conSeleccionarTodos);
				}
			}
		} catch(Exception e) {
			FuncionesSwing.manageException(this, e,logger,EvaluacionEmpleadoConstantesFunciones.CLASSNAME);
		}
	}
	
	public void jCheckBoxSeleccionarTodosEvaluacionEmpleadoItemListener(ItemEvent evt) throws Exception {    		
		try {			
			this.inicializarActualizarBindingEvaluacionEmpleado(false,false);
			
			//JCheckBox jCheckBox=(JCheckBox)evt.getSource();			
			//System.out.println("ok");		
			
			Boolean existe=false;
			
			if(sTipoSeleccionar.equals("COLUMNAS")) {
				existe=true;
				
				if(Constantes.ISUSAEJBLOGICLAYER) {				
					for(EvaluacionEmpleado evaluacionempleadoAux:this.evaluacionempleadoLogic.getEvaluacionEmpleados()) {
						evaluacionempleadoAux.setIsSelected(this.isSeleccionarTodos);
					}			
				} else if(Constantes.ISUSAEJBREMOTE||Constantes.ISUSAEJBHOME) {
					for(EvaluacionEmpleado evaluacionempleadoAux:evaluacionempleados) {
						evaluacionempleadoAux.setIsSelected(this.isSeleccionarTodos);
					}
				}
			} else {
				if(Constantes.ISUSAEJBLOGICLAYER) {
					for(EvaluacionEmpleado evaluacionempleadoAux:this.evaluacionempleadoLogic.getEvaluacionEmpleados()) {
					
						if(sTipoSeleccionar.equals(EvaluacionEmpleadoConstantesFunciones.LABEL_ESTAEVALUADO)) {
							existe=true;
							evaluacionempleadoAux.setesta_evaluado(this.isSeleccionarTodos);
						}
					}	
				} else if(Constantes.ISUSAEJBREMOTE||Constantes.ISUSAEJBHOME) {
					for(EvaluacionEmpleado evaluacionempleadoAux:evaluacionempleados) {
						
						if(sTipoSeleccionar.equals(EvaluacionEmpleadoConstantesFunciones.LABEL_ESTAEVALUADO)) {
							existe=true;
							evaluacionempleadoAux.setesta_evaluado(this.isSeleccionarTodos);
						}
					}
				}
			}
					
			if(existe) {
				this.inicializarActualizarBindingTablaEvaluacionEmpleado(false);
			} else {
				JOptionPane.showMessageDialog(this,"NO SE HA SELECCIONADO ALGUNA COLUMNA VALIDA","SELECCIONAR",JOptionPane.ERROR_MESSAGE);
			}	
			
			//TableCellRenderer tableCellRenderer=null;			
			
			//TableCellEditor tableCellEditor=null;						
						
			//FUNCIONA CON MODEL PERO SE DANA MANTENIMIENTO
			/*
			for(int i = 0; i < this.jTableDatosEvaluacionEmpleado.getRowCount(); i++) {				
				tableCellRenderer=this.jTableDatosSistema.getCellRenderer(i, 2);
				tableCellEditor=this.jTableDatosSistema.getCellEditor(i, 2);
				
				idSeleccionarTableCell=(IdSeleccionarTableCell)tableCellRenderer;				
				idSeleccionarTableCell.jCheckBoxId.setSelected(jCheckBox.isSelected());
				
				idSeleccionarTableCell=(IdSeleccionarTableCell)tableCellEditor;
				
				if(idSeleccionarTableCell.jCheckBoxId!=null) {
					idSeleccionarTableCell.jCheckBoxId.setSelected(jCheckBox.isSelected());
				}
				
				//System.out.println(idSeleccionarTableCell.valor);
				
				//this.jTableDatosEvaluacionEmpleado.getModel().setValueAt(jCheckBox.isSelected(), i, Funciones2.getColumnIndexByName(this.jTableDatosEvaluacionEmpleado,Constantes2.S_SELECCIONAR));
		    } 
			*/
					
		} catch(Exception e) {
			FuncionesSwing.manageException(this, e,logger,EvaluacionEmpleadoConstantesFunciones.CLASSNAME);
		}
	}
	
	public void jCheckBoxSeleccionadosEvaluacionEmpleadoItemListener(ItemEvent evt) throws Exception {    		
		try {			
			this.inicializarActualizarBindingEvaluacionEmpleado(false,false);
			
			//JCheckBox jCheckBox=(JCheckBox)evt.getSource();			
			//System.out.println("ok");		
			
			Boolean existe=false;
			int[] arrNumRowsSeleccionados=null;
			
			arrNumRowsSeleccionados=this.jTableDatosEvaluacionEmpleado.getSelectedRows();
			
			EvaluacionEmpleado evaluacionempleadoLocal=new EvaluacionEmpleado();
			
			//this.seleccionarTodosEvaluacionEmpleado(false);
			
			for(Integer iNumRowSeleccionado:arrNumRowsSeleccionados) {
				existe=true;
				
				if(Constantes.ISUSAEJBLOGICLAYER) {
					evaluacionempleadoLocal =(EvaluacionEmpleado) this.evaluacionempleadoLogic.getEvaluacionEmpleados().toArray()[this.jTableDatosEvaluacionEmpleado.convertRowIndexToModel(iNumRowSeleccionado)];
				} else if(Constantes.ISUSAEJBREMOTE || Constantes.ISUSAEJBHOME) {
					evaluacionempleadoLocal =(EvaluacionEmpleado) this.evaluacionempleados.toArray()[this.jTableDatosEvaluacionEmpleado.convertRowIndexToModel(iNumRowSeleccionado)];
				}
				
				evaluacionempleadoLocal.setIsSelected(this.isSeleccionados);
			}
			
			/*
			if(sTipoSeleccionar.equals("SELECCIONAR")) {
				existe=true;
				
				if(Constantes.ISUSAEJBLOGICLAYER) {				
					for(EvaluacionEmpleado evaluacionempleadoAux:this.evaluacionempleadoLogic.getEvaluacionEmpleados()) {
						evaluacionempleadoAux.setIsSelected(this.isSeleccionados);
					}			
				} else if(Constantes.ISUSAEJBREMOTE||Constantes.ISUSAEJBHOME) {
					for(EvaluacionEmpleado evaluacionempleadoAux:evaluacionempleados) {
						evaluacionempleadoAux.setIsSelected(this.isSeleccionados);
					}
				}
			}
			*/
			
			//if(existe) {
				this.inicializarActualizarBindingTablaEvaluacionEmpleado(false);
			/*
			} else {
				JOptionPane.showMessageDialog(this,"NO SE HA SELECCIONADO ALGUNA COLUMNA VALIDA","SELECCIONAR",JOptionPane.ERROR_MESSAGE);
			}	
			*/
			
			
			//TableCellRenderer tableCellRenderer=null;			
			
			//TableCellEditor tableCellEditor=null;						
						
			//FUNCIONA CON MODEL PERO SE DANA MANTENIMIENTO
			/*
			for(int i = 0; i < this.jTableDatosEvaluacionEmpleado.getRowCount(); i++) {				
				tableCellRenderer=this.jTableDatosSistema.getCellRenderer(i, 2);
				tableCellEditor=this.jTableDatosSistema.getCellEditor(i, 2);
				
				idSeleccionarTableCell=(IdSeleccionarTableCell)tableCellRenderer;				
				idSeleccionarTableCell.jCheckBoxId.setSelected(jCheckBox.isSelected());
				
				idSeleccionarTableCell=(IdSeleccionarTableCell)tableCellEditor;
				
				if(idSeleccionarTableCell.jCheckBoxId!=null) {
					idSeleccionarTableCell.jCheckBoxId.setSelected(jCheckBox.isSelected());
				}
				
				//System.out.println(idSeleccionarTableCell.valor);
				
				//this.jTableDatosEvaluacionEmpleado.getModel().setValueAt(jCheckBox.isSelected(), i, Funciones2.getColumnIndexByName(this.jTableDatosEvaluacionEmpleado,Constantes2.S_SELECCIONAR));
		    } 
			*/
					
		} catch(Exception e) {
			FuncionesSwing.manageException(this, e,logger,EvaluacionEmpleadoConstantesFunciones.CLASSNAME);
		}
	}
	
	public void jCheckBoxSeleccionarActualEvaluacionEmpleadoItemListener(ItemEvent evt,Long idActual) throws Exception {    		
		try {
			
		} catch(Exception e) {
			FuncionesSwing.manageException(this, e,logger,EvaluacionEmpleadoConstantesFunciones.CLASSNAME);
		}
	}
	
	public void ejecutarAuxiliarEvaluacionEmpleadoParaAjaxPostBack() throws Exception {    		
		try {
			
		} catch(Exception e) {
			FuncionesSwing.manageException(this, e,logger,EvaluacionEmpleadoConstantesFunciones.CLASSNAME);
		}
	}
	
	public void jTextFieldValorCampoGeneralEvaluacionEmpleadoActionListener(ActionEvent evt) throws Exception {    		
		try {
			this.inicializarActualizarBindingEvaluacionEmpleado(false,false);
			
			//System.out.println(this.jTextFieldValorCampoGeneralEvaluacionEmpleado.getText());		
			
			Boolean existe=false;
			
			if(Constantes.ISUSAEJBLOGICLAYER) {
				for(EvaluacionEmpleado evaluacionempleadoAux:this.evaluacionempleadoLogic.getEvaluacionEmpleados()) {
				
						if(sTipoSeleccionar.equals(EvaluacionEmpleadoConstantesFunciones.LABEL_FECHA)) {
							existe=true;
							evaluacionempleadoAux.setfecha(Funciones.ConvertToDate(this.sValorCampoGeneral));
						}
						 else if(sTipoSeleccionar.equals(EvaluacionEmpleadoConstantesFunciones.LABEL_OBSERVACION1)) {
							existe=true;
							evaluacionempleadoAux.setobservacion1(this.sValorCampoGeneral);
						}
						 else if(sTipoSeleccionar.equals(EvaluacionEmpleadoConstantesFunciones.LABEL_OBSERVACION2)) {
							existe=true;
							evaluacionempleadoAux.setobservacion2(this.sValorCampoGeneral);
						}
						 else if(sTipoSeleccionar.equals(EvaluacionEmpleadoConstantesFunciones.LABEL_OBSERVACION3)) {
							existe=true;
							evaluacionempleadoAux.setobservacion3(this.sValorCampoGeneral);
						}
						 else if(sTipoSeleccionar.equals(EvaluacionEmpleadoConstantesFunciones.LABEL_OBSERVACION4)) {
							existe=true;
							evaluacionempleadoAux.setobservacion4(this.sValorCampoGeneral);
						}
				}	
			} else if(Constantes.ISUSAEJBREMOTE||Constantes.ISUSAEJBHOME) {
				for(EvaluacionEmpleado evaluacionempleadoAux:evaluacionempleados) {
					
						if(sTipoSeleccionar.equals(EvaluacionEmpleadoConstantesFunciones.LABEL_FECHA)) {
							existe=true;
							evaluacionempleadoAux.setfecha(Funciones.ConvertToDate(this.sValorCampoGeneral));
						}
						 else if(sTipoSeleccionar.equals(EvaluacionEmpleadoConstantesFunciones.LABEL_OBSERVACION1)) {
							existe=true;
							evaluacionempleadoAux.setobservacion1(this.sValorCampoGeneral);
						}
						 else if(sTipoSeleccionar.equals(EvaluacionEmpleadoConstantesFunciones.LABEL_OBSERVACION2)) {
							existe=true;
							evaluacionempleadoAux.setobservacion2(this.sValorCampoGeneral);
						}
						 else if(sTipoSeleccionar.equals(EvaluacionEmpleadoConstantesFunciones.LABEL_OBSERVACION3)) {
							existe=true;
							evaluacionempleadoAux.setobservacion3(this.sValorCampoGeneral);
						}
						 else if(sTipoSeleccionar.equals(EvaluacionEmpleadoConstantesFunciones.LABEL_OBSERVACION4)) {
							existe=true;
							evaluacionempleadoAux.setobservacion4(this.sValorCampoGeneral);
						}
				}
			}
								
			if(existe) {
				this.inicializarActualizarBindingTablaEvaluacionEmpleado(false);
			} else {
				JOptionPane.showMessageDialog(this,"NO SE HA SELECCIONADO ALGUNA COLUMNA VALIDA","SELECCIONAR",JOptionPane.ERROR_MESSAGE);
			}			
		} catch(Exception e) {
			FuncionesSwing.manageException(this, e,logger,EvaluacionEmpleadoConstantesFunciones.CLASSNAME);
		}
	}
	
	public void jComboBoxTiposAccionesEvaluacionEmpleadoActionListener(ActionEvent evt,Boolean esParaAccionDesdeFormulario) throws Exception {    				
		Boolean conSplash=true;
		
		try {							
		
			this.inicializarActualizarBindingEvaluacionEmpleado(false,false);
			
			Reporte reporte=new Reporte();
			
			this.esParaAccionDesdeFormularioEvaluacionEmpleado=esParaAccionDesdeFormulario;
			
			if(!esParaAccionDesdeFormulario) {
				
				reporte=(Reporte)this.jComboBoxTiposAccionesEvaluacionEmpleado.getSelectedItem();
				
			} else {
				reporte=(Reporte)this.jInternalFrameDetalleFormEvaluacionEmpleado.jComboBoxTiposAccionesFormularioEvaluacionEmpleado.getSelectedItem();
			}
			String sTipoAccionLocal=this.sTipoAccion;
			
			if(!esParaAccionDesdeFormulario) {
				sTipoAccionLocal=this.sTipoAccion;
			} else {
				sTipoAccionLocal=this.sTipoAccionFormulario;
			}
			
			if(sTipoAccionLocal.equals("GENERAR REPORTE")) {//reporte.getsCodigo().equals("GENERAR REPORTE")) {
				if(this.isPermisoReporteEvaluacionEmpleado) {				
					conSplash=true;//false;										
					
					//this.startProcessEvaluacionEmpleado(conSplash);
				
					this.generarReporteEvaluacionEmpleadosSeleccionados();
				} else {
					JOptionPane.showMessageDialog(this,"NO TIENE PERMISO PARA GENERAR REPORTES","REPORTE",JOptionPane.ERROR_MESSAGE);					
				}
				if(!esParaAccionDesdeFormulario) {
					
					this.jComboBoxTiposAccionesEvaluacionEmpleado.setSelectedIndex(0);					
					
				} else {
					this.jInternalFrameDetalleFormEvaluacionEmpleado.jComboBoxTiposAccionesFormularioEvaluacionEmpleado.setSelectedIndex(0);					
				}
			} else if(sTipoAccionLocal.equals("GENERAR REPORTE DINAMICO")) {//reporte.getsCodigo().equals("GENERAR_REPORTE_GROUP_GENERICO")) {
				//SE GENERA REPORTE SEGUN TIPO REPORTE SELECCIONADO
				//this.mostrarReporteDinamicoEvaluacionEmpleadosSeleccionados();
				//this.jComboBoxTiposAccionesEvaluacionEmpleado.setSelectedIndex(0);					
			}  else if(sTipoAccionLocal.equals("GENERAR_REPORTE_GROUP_GENERICO")) {//reporte.getsCodigo().equals("GENERAR_REPORTE_GROUP_GENERICO")) {
				//SE GENERA REPORTE SEGUN TIPO REPORTE SELECCIONADO
				//this.generarReporteGroupGenericoEvaluacionEmpleadosSeleccionados(false);
				//this.jComboBoxTiposAccionesEvaluacionEmpleado.setSelectedIndex(0);					
			} else if(sTipoAccionLocal.equals("GENERAR_REPORTE_TOTALES_GROUP_GENERICO")) {//reporte.getsCodigo().equals("GENERAR_REPORTE_GROUP_GENERICO")) {
				//SE GENERA REPORTE SEGUN TIPO REPORTE SELECCIONADO
				//this.generarReporteGroupGenericoEvaluacionEmpleadosSeleccionados(true);
				//this.jComboBoxTiposAccionesEvaluacionEmpleado.setSelectedIndex(0);					
			} else if(sTipoAccionLocal.equals("EXPORTAR_DATOS")) {//reporte.getsCodigo().equals("GENERAR_REPORTE_GROUP_GENERICO")) {
				//this.startProcessEvaluacionEmpleado();
				
				this.exportarEvaluacionEmpleadosSeleccionados();
				if(!esParaAccionDesdeFormulario) {
					
					this.jComboBoxTiposAccionesEvaluacionEmpleado.setSelectedIndex(0);					
					
				} else {
					this.jInternalFrameDetalleFormEvaluacionEmpleado.jComboBoxTiposAccionesFormularioEvaluacionEmpleado.setSelectedIndex(0);					
				}					
			} else if(sTipoAccionLocal.equals("IMPORTAR_DATOS")) {//reporte.getsCodigo().equals("GENERAR_REPORTE_GROUP_GENERICO")) {
				this.mostrarImportacionEvaluacionEmpleados();
				//this.importarEvaluacionEmpleados();
				if(!esParaAccionDesdeFormulario) {
					
					this.jComboBoxTiposAccionesEvaluacionEmpleado.setSelectedIndex(0);					
					
				} else {
					this.jInternalFrameDetalleFormEvaluacionEmpleado.jComboBoxTiposAccionesFormularioEvaluacionEmpleado.setSelectedIndex(0);					
				}					
			} else if(sTipoAccionLocal.equals("EXPORTAR_DATOS_EXCEL")) {//reporte.getsCodigo().equals("GENERAR_REPORTE_GROUP_GENERICO")) {
				//this.startProcessEvaluacionEmpleado();
				//SE EXPORTA SEGUN TIPO ARCHIVO SELECCIONADO
				//this.exportarExcelEvaluacionEmpleadosSeleccionados();
				//this.jComboBoxTiposAccionesEvaluacionEmpleado.setSelectedIndex(0);					
			}  else if(sTipoAccionLocal.equals("RECARGAR_FK")) {//reporte.getsCodigo().equals("GENERAR_REPORTE_GROUP_GENERICO")) {								
				if(JOptionPane.showConfirmDialog(this, "ESTA SEGURO DE RECARGAR REFERENCIAS ?", "MANTENIMIENTO DE Evaluacion Empleado", JOptionPane.OK_CANCEL_OPTION) == 0) {
				
				//this.startProcessEvaluacionEmpleado();
				
					if(!esParaAccionDesdeFormulario || (esParaAccionDesdeFormulario && this.isEsNuevoEvaluacionEmpleado)) {
						this.esRecargarFks=true;
						this.cargarCombosForeignKeyEvaluacionEmpleado(false,false,false);
						this.esRecargarFks=false;
						
						JOptionPane.showMessageDialog(this,"PROCESO EJECUTADO CORRECTAMENTE","MANTENIMIENTO DE Evaluacion Empleado",JOptionPane.INFORMATION_MESSAGE);
					} else {
						JOptionPane.showMessageDialog(this,"ESTE PROCESO SOLO FUNCIONA AL INGRESAR UN NUEVO ELEMENTO","MANTENIMIENTO",JOptionPane.ERROR_MESSAGE);	
					}
					
					
				}
				
				if(!esParaAccionDesdeFormulario) {
					
					this.jComboBoxTiposAccionesEvaluacionEmpleado.setSelectedIndex(0);					
					
				} else {
					this.jInternalFrameDetalleFormEvaluacionEmpleado.jComboBoxTiposAccionesFormularioEvaluacionEmpleado.setSelectedIndex(0);					
				}	
			} 			
			else if(EvaluacionEmpleadoBeanSwingJInternalFrame.EsProcesoReporte(reporte.getsCodigo())){
				if(this.isPermisoReporteEvaluacionEmpleado) {				
					if(this.tieneElementosSeleccionados()) {
						this.quitarFilaTotales();
						
						conSplash=false;
						
						//this.startProcessEvaluacionEmpleado(conSplash);
					
						//this.actualizarParametrosGeneralEvaluacionEmpleado();
						
						this.generarReporteProcesoAccionEvaluacionEmpleadosSeleccionados(reporte.getsCodigo());
						
						if(!esParaAccionDesdeFormulario) {
							
							this.jComboBoxTiposAccionesEvaluacionEmpleado.setSelectedIndex(0);					
							
						} else {
							this.jInternalFrameDetalleFormEvaluacionEmpleado.jComboBoxTiposAccionesFormularioEvaluacionEmpleado.setSelectedIndex(0);					
						}
					} else {
						JOptionPane.showMessageDialog(this,"NO SE HA SELECCIONADO ALGUN ELEMENTO","SELECCIONAR",JOptionPane.ERROR_MESSAGE);
					}
				} else {
					JOptionPane.showMessageDialog(this,"NO TIENE PERMISO PARA GENERAR REPORTES","REPORTE",JOptionPane.ERROR_MESSAGE);					
				}
			} 
			else if(EvaluacionEmpleadoBeanSwingJInternalFrameAdditional.EsProcesoAccionNormal(reporte.getsCodigo())){
				if(this.tieneElementosSeleccionados()) {
					this.quitarFilaTotales();
					
					if(JOptionPane.showConfirmDialog(this, "ESTA SEGURO DE PROCESAR "+reporte.getsDescripcion()+" EN PROCESO Evaluacion EmpleadoS SELECCIONADOS?", "MANTENIMIENTO DE Evaluacion Empleado", JOptionPane.OK_CANCEL_OPTION) == 0) {
						//this.startProcessEvaluacionEmpleado();
				
						this.actualizarParametrosGeneralEvaluacionEmpleado();
						
						//ARCHITECTURE
						if(Constantes.ISUSAEJBLOGICLAYER) {						
							this.evaluacionempleadoReturnGeneral=evaluacionempleadoLogic.procesarAccionEvaluacionEmpleadosWithConnection(this.parametroGeneralUsuario,this.moduloActual,this.opcionActual,this.usuarioActual,sTipoAccionLocal,this.evaluacionempleadoLogic.getEvaluacionEmpleados(),this.evaluacionempleadoParameterGeneral);
						
						} else if(Constantes.ISUSAEJBREMOTE) {
						
						} else if(Constantes.ISUSAEJBHOME) {
						}
						//ARCHITECTURE
						
						this.procesarEvaluacionEmpleadoReturnGeneral();
					
					if(!esParaAccionDesdeFormulario) {
						
						this.jComboBoxTiposAccionesEvaluacionEmpleado.setSelectedIndex(0);					
						
					} else {
						this.jInternalFrameDetalleFormEvaluacionEmpleado.jComboBoxTiposAccionesFormularioEvaluacionEmpleado.setSelectedIndex(0);					
					}
					}
				} else {
					JOptionPane.showMessageDialog(this,"NO SE HA SELECCIONADO ALGUN ELEMENTO","SELECCIONAR",JOptionPane.ERROR_MESSAGE);
				}				
			} 
			else {
				if(this.tieneElementosSeleccionados()) {
					this.quitarFilaTotales();
					
					this.actualizarParametrosGeneralEvaluacionEmpleado();
					
					EvaluacionEmpleadoBeanSwingJInternalFrameAdditional.ProcesarAccion(reporte.getsCodigo(),reporte.getsDescripcion(),this);
					
					this.procesarEvaluacionEmpleadoReturnGeneral();
					
					if(!esParaAccionDesdeFormulario) {
						
						this.jComboBoxTiposAccionesEvaluacionEmpleado.setSelectedIndex(0);					
						
					} else {
						this.jInternalFrameDetalleFormEvaluacionEmpleado.jComboBoxTiposAccionesFormularioEvaluacionEmpleado.setSelectedIndex(0);					
					}
				} else {
					JOptionPane.showMessageDialog(this,"NO SE HA SELECCIONADO ALGUN ELEMENTO","SELECCIONAR",JOptionPane.ERROR_MESSAGE);
				}
			}
		} catch(Exception e) {
			this.esRecargarFks=false;
			
			FuncionesSwing.manageException(this, e,logger,EvaluacionEmpleadoConstantesFunciones.CLASSNAME);
		
		}  finally {
      		//this.finishProcessEvaluacionEmpleado(conSplash);
      	}
	}
	
	public void jComboBoxTiposRelacionesEvaluacionEmpleadoActionListener(ActionEvent evt) throws Exception {    				
		Boolean conSplash=true;
		
		try {			
			this.startProcessEvaluacionEmpleado();
			
			if(this.jInternalFrameDetalleFormEvaluacionEmpleado==null) { //if(!this.conCargarFormDetalle) {			
				this.inicializarFormDetalle();
			}
			
			ArrayList<EvaluacionEmpleado> evaluacionempleadosSeleccionados=new ArrayList<EvaluacionEmpleado>();		
			EvaluacionEmpleado evaluacionempleado=new EvaluacionEmpleado();
			
			int rowIndex=-1;//CON ESTO SE DESHABILITA SELECCION POR INDICE
			
			this.inicializarActualizarBindingEvaluacionEmpleado(false,false);
			
			Reporte reporte=new Reporte();
			
			
			reporte=(Reporte)this.jComboBoxTiposRelacionesEvaluacionEmpleado.getSelectedItem();
			
			
			
			
			evaluacionempleadosSeleccionados=this.getEvaluacionEmpleadosSeleccionados(true);
			//this.sTipoAccion;
			
			if(evaluacionempleadosSeleccionados.size()==1) {
				for(EvaluacionEmpleado evaluacionempleadoAux:evaluacionempleadosSeleccionados) {
					evaluacionempleado=evaluacionempleadoAux;
				}
				
				if(this.sTipoAccion.equals("NONE")) {
				
				}
				
				else if(this.sTipoRelacion.equals("Calificacion Empleado")) {
					jButtonCalificacionEmpleadoActionPerformed(null,rowIndex,true,false,evaluacionempleado);
				}
			} else {
				JOptionPane.showMessageDialog(this,"SELECCIONE SOLO UN REGISTRO","RELACIONES",JOptionPane.ERROR_MESSAGE);
			}
			
		} catch(Exception e) {
			FuncionesSwing.manageException(this, e,logger,EvaluacionEmpleadoConstantesFunciones.CLASSNAME);
		
		}  finally {
			this.finishProcessEvaluacionEmpleado();
			
      		//this.finishProcessEvaluacionEmpleado(conSplash);
      	}
	}
			
	public static Boolean EsProcesoReporte(String sTipoProceso) throws Exception {
		Boolean esProcesoAccionRepoorte=false;

		if(sTipoProceso.contains("REPORTE_")) {
			 esProcesoAccionRepoorte=true;
		}

		return esProcesoAccionRepoorte;
	}
	
	public void procesarEvaluacionEmpleadoReturnGeneral() throws Exception {
		if(this.evaluacionempleadoReturnGeneral.getConRetornoEstaProcesado()) {
			JOptionPane.showMessageDialog(this,this.evaluacionempleadoReturnGeneral.getsMensajeProceso(),"PROCESO",JOptionPane.INFORMATION_MESSAGE);
		}
		
		if(this.evaluacionempleadoReturnGeneral.getConMostrarMensaje()) {
			JOptionPane.showMessageDialog(this,this.evaluacionempleadoReturnGeneral.getsMensajeProceso(),"PROCESO",FuncionesSwing.getColorSelectedBackground(this.evaluacionempleadoReturnGeneral.getsTipoMensaje()));
		}
		
		if(this.evaluacionempleadoReturnGeneral.getConRecargarInformacion()) {
			this.procesarBusqueda(this.sAccionBusqueda);
			
			this.inicializarActualizarBindingEvaluacionEmpleado(false);
		}
		
		if(this.evaluacionempleadoReturnGeneral.getConRetornoLista() || this.evaluacionempleadoReturnGeneral.getConRetornoObjeto()) {
			if(this.evaluacionempleadoReturnGeneral.getConRetornoLista()) {
				//ARCHITECTURE
				if(Constantes.ISUSAEJBLOGICLAYER) {	
					this.evaluacionempleadoLogic.setEvaluacionEmpleados(this.evaluacionempleadoReturnGeneral.getEvaluacionEmpleados());
				} else if(Constantes.ISUSAEJBREMOTE) {
				} else if(Constantes.ISUSAEJBHOME) {
				}
				//ARCHITECTURE
			}
			
			if(this.evaluacionempleadoReturnGeneral.getConRetornoObjeto()) {
				//ARCHITECTURE
				if(Constantes.ISUSAEJBLOGICLAYER) {	
					this.evaluacionempleadoLogic.setEvaluacionEmpleado(this.evaluacionempleadoReturnGeneral.getEvaluacionEmpleado());
				} else if(Constantes.ISUSAEJBREMOTE) {
				} else if(Constantes.ISUSAEJBHOME) {
				}
				//ARCHITECTURE
			}
			
			this.inicializarActualizarBindingEvaluacionEmpleado(false);
		}
	}
	
	public void actualizarParametrosGeneralEvaluacionEmpleado() throws Exception {
		
		
	}
	
	public ArrayList<EvaluacionEmpleado> getEvaluacionEmpleadosSeleccionados(Boolean conSeleccionarTodosAutomatico) throws Exception {
		ArrayList<EvaluacionEmpleado> evaluacionempleadosSeleccionados=new ArrayList<EvaluacionEmpleado>();
		Boolean existe=false;
		
		if(!this.esParaAccionDesdeFormularioEvaluacionEmpleado) {
			if(Constantes.ISUSAEJBLOGICLAYER) {	
				
				for(EvaluacionEmpleado evaluacionempleadoAux:evaluacionempleadoLogic.getEvaluacionEmpleados()) {
					if(evaluacionempleadoAux.getIsSelected()) {
						evaluacionempleadosSeleccionados.add(evaluacionempleadoAux);				
					}
				}
				
			} else if(Constantes.ISUSAEJBREMOTE||Constantes.ISUSAEJBHOME) {
				for(EvaluacionEmpleado evaluacionempleadoAux:this.evaluacionempleados) {
					if(evaluacionempleadoAux.getIsSelected()) {
						evaluacionempleadosSeleccionados.add(evaluacionempleadoAux);				
					}
				}
			}
			
			if(evaluacionempleadosSeleccionados.size()>0) {
				existe=true;
			}
			
			//SI NO ESTA NINGUNO SELECCIONADO SE SELECCIONA TODOS
			if(!existe) {
				if(conSeleccionarTodosAutomatico) {
					if(Constantes.ISUSAEJBLOGICLAYER) {				
						evaluacionempleadosSeleccionados.addAll(this.evaluacionempleadoLogic.getEvaluacionEmpleados());
					} else if(Constantes.ISUSAEJBREMOTE||Constantes.ISUSAEJBHOME) {
						evaluacionempleadosSeleccionados.addAll(this.evaluacionempleados);				
					}
				}
			}
		} else {
			evaluacionempleadosSeleccionados.add(this.evaluacionempleado);
		}
		
		return evaluacionempleadosSeleccionados;
	}
	
	public void actualizarVariablesTipoReporte(Boolean esReporteNormal,Boolean esReporteDinamico,Boolean esReporteAccionProceso,String sPath) {
		if(esReporteNormal) {
			this.sTipoReporteExtra="";
			this.esReporteDinamico=false;
			this.sPathReporteDinamico="";
			this.esReporteAccionProceso=false;
			
		} else if(esReporteAccionProceso) {
			this.sTipoReporteExtra="";
			this.esReporteDinamico=false;
			this.sPathReporteDinamico="";
			this.esReporteAccionProceso=true;
			
		} else if(esReporteDinamico) {
			this.sTipoReporteExtra="";
			this.esReporteDinamico=true;
			this.esReporteAccionProceso=false;
			this.sPathReporteDinamico=sPath.replace(".jrxml",".jasper");			
		}
	}
	
	public void generarReporteEvaluacionEmpleadosSeleccionados() throws Exception {
		Boolean existe=false;
		
		if(this.sTipoReporte.equals("NORMAL") || this.sTipoReporte.equals("FORMULARIO")) {
			existe=true;								
			this.generarReporteNormalEvaluacionEmpleadosSeleccionados();
			
		} else if(this.sTipoReporte.equals("DINAMICO")) {
			existe=true;
			this.mostrarReporteDinamicoEvaluacionEmpleadosSeleccionados();
			
		} else if(this.sTipoReporte.equals("GRUPO_GENERICO")) {
			existe=true;
			this.generarReporteGroupGenericoEvaluacionEmpleadosSeleccionados(false);
			
		} else if(this.sTipoReporte.equals("TOTALES_GRUPO_GENERICO")) {
			existe=true;
			this.generarReporteGroupGenericoEvaluacionEmpleadosSeleccionados(true);
		}
		else if(this.sTipoReporte.equals("RELACIONES")) {
			//SI SE GENERA REPORTE RELACIONES
			existe=true;
			this.generarReporteRelacionesEvaluacionEmpleadosSeleccionados();
		}					
		
		if(!existe) {
			JOptionPane.showMessageDialog(this,"SELECCIONE UN TIPO DE REPORTE VALIDO","REPORTE DE Evaluacion Empleado",JOptionPane.ERROR_MESSAGE);
		}
	}
	
	public void generarReporteRelacionesEvaluacionEmpleadosSeleccionados() throws Exception {
		ArrayList<EvaluacionEmpleado> evaluacionempleadosSeleccionados=new ArrayList<EvaluacionEmpleado>();		
		
		evaluacionempleadosSeleccionados=this.getEvaluacionEmpleadosSeleccionados(true);
		
		this.actualizarVariablesTipoReporte(true,false,false,"");
					
		//this.sTipoReporteExtra="MasterRelaciones";
		
		/*
		this.sTipoReporteExtra="";
		this.esReporteDinamico=false;
		this.sPathReporteDinamico="";
		*/
		
		
		this.generarReporteEvaluacionEmpleados("Todos",evaluacionempleadosSeleccionados);
		
	}	
	
	public void generarReporteNormalEvaluacionEmpleadosSeleccionados() throws Exception {
		ArrayList<EvaluacionEmpleado> evaluacionempleadosSeleccionados=new ArrayList<EvaluacionEmpleado>();		
		
		evaluacionempleadosSeleccionados=this.getEvaluacionEmpleadosSeleccionados(true);
		
		this.actualizarVariablesTipoReporte(true,false,false,"");
								
		if(this.sTipoReporte.equals("FORMULARIO")) {
			this.sTipoReporteExtra="Vertical";					
		}
		
		/*
		this.sTipoReporteExtra="";
		this.esReporteDinamico=false;
		this.sPathReporteDinamico="";
		*/
		
		this.generarReporteEvaluacionEmpleados("Todos",evaluacionempleadosSeleccionados);
	}		
	
	public void generarReporteProcesoAccionEvaluacionEmpleadosSeleccionados(String sProcesoReporte) throws Exception {
		ArrayList<EvaluacionEmpleado> evaluacionempleadosSeleccionados=new ArrayList<EvaluacionEmpleado>();
		
		evaluacionempleadosSeleccionados=this.getEvaluacionEmpleadosSeleccionados(true);
		
		this.actualizarVariablesTipoReporte(false,false,true,"");
		
		/*
		this.esReporteDinamico=false;
		this.sPathReporteDinamico="";
		*/
		
		this.sTipoReporteExtra=sProcesoReporte.toLowerCase();
		
		this.esReporteAccionProceso=true;
		this.generarReporteEvaluacionEmpleados("Todos",evaluacionempleadosSeleccionados);
		this.esReporteAccionProceso=false;
	}
	
	
	public void mostrarReporteDinamicoEvaluacionEmpleadosSeleccionados() throws Exception {
		ArrayList<EvaluacionEmpleado> evaluacionempleadosSeleccionados=new ArrayList<EvaluacionEmpleado>();		
		
		
		this.abrirInicializarFrameReporteDinamicoEvaluacionEmpleado();
		
		
		evaluacionempleadosSeleccionados=this.getEvaluacionEmpleadosSeleccionados(true);
		
		this.sTipoReporteExtra="";
		//this.actualizarVariablesTipoReporte(true,false,false,"");
		
		
		this.abrirFrameReporteDinamicoEvaluacionEmpleado();
		
		
		//this.generarReporteEvaluacionEmpleados("Todos",evaluacionempleadosSeleccionados ,evaluacionempleadoImplementable,evaluacionempleadoImplementableHome);
	}
	
	public void mostrarImportacionEvaluacionEmpleados() throws Exception {
		//this.sTipoReporteExtra="";
		//this.actualizarVariablesTipoReporte(true,false,false,"");
		
		
		this.abrirInicializarFrameImportacionEvaluacionEmpleado();
		
		this.abrirFrameImportacionEvaluacionEmpleado();		
		
			
		//this.generarReporteEvaluacionEmpleados("Todos",evaluacionempleadosSeleccionados ,evaluacionempleadoImplementable,evaluacionempleadoImplementableHome);
	}
	
	public void importarEvaluacionEmpleados() throws Exception {		
	
	}
	
	public void exportarEvaluacionEmpleadosSeleccionados() throws Exception {
		Boolean existe=false;
		
		if(this.sTipoArchivoReporte.equals("EXCEL")) {
			existe=true;
			this.exportarExcelEvaluacionEmpleadosSeleccionados();
			
		} else if(this.sTipoArchivoReporte.equals("TEXTO")) {
			existe=true;
			this.exportarTextoEvaluacionEmpleadosSeleccionados();
		
		} else if(this.sTipoArchivoReporte.equals("XML")) {
			existe=true;
			this.exportarXmlEvaluacionEmpleadosSeleccionados();
		} 
		
		if(!existe) {
			JOptionPane.showMessageDialog(this,"SELECCIONE UN TIPO DE ARCHIVO VALIDO","EXPORTACION DE Evaluacion Empleado",JOptionPane.ERROR_MESSAGE);
		}
	}
	
	public void exportarTextoEvaluacionEmpleadosSeleccionados() throws Exception {
		ArrayList<EvaluacionEmpleado> evaluacionempleadosSeleccionados=new ArrayList<EvaluacionEmpleado>();		
		
		evaluacionempleadosSeleccionados=this.getEvaluacionEmpleadosSeleccionados(true);
		
		String sTipo=Funciones2.getTipoExportar(this.parametroGeneralUsuario);
		Boolean conCabecera=this.parametroGeneralUsuario.getcon_exportar_cabecera();
		String sDelimiter=Funciones2.getTipoDelimiter(this.parametroGeneralUsuario);
		String sPath=this.parametroGeneralUsuario.getpath_exportar()+"evaluacionempleado."+"txt";//Funciones2.getTipoExtensionArchivoExportar(this.parametroGeneralUsuario);
		
		String sFilaCabecera="";
		String sFilaDatos="";
		
		BufferedWriter bufferedWriter = null;
		FileWriter fileWriter=null;
		
		fileWriter=new FileWriter(sPath);
		
		bufferedWriter = new BufferedWriter(fileWriter);
		
		try {
			if(conCabecera) {
				sFilaCabecera=this.getFilaCabeceraExportarEvaluacionEmpleado(sDelimiter);
				
				bufferedWriter.write(sFilaCabecera);
			}				
			
			for(EvaluacionEmpleado evaluacionempleadoAux:evaluacionempleadosSeleccionados) {
				sFilaDatos=this.getFilaDatosExportarEvaluacionEmpleado(evaluacionempleadoAux,sDelimiter);
				
				bufferedWriter.write(sFilaDatos);
				
				//evaluacionempleadoAux.setsDetalleGeneralEntityReporte(evaluacionempleadoAux.toString());			
			}
			
			bufferedWriter.close();
			
			Constantes2.S_PATH_ULTIMO_ARCHIVO=sPath;
			
			if(this.parametroGeneralUsuario.getcon_mensaje_confirmacion() && !this.evaluacionempleadoSessionBean.getEsGuardarRelacionado()) {//Constantes.ISMOSTRARMENSAJESMANTENIMIENTO && 
				JOptionPane.showMessageDialog(this,"EXPORTADO CORRECTAMENTE:"+sPath,"MANTENIMIENTO DE Evaluacion Empleado",JOptionPane.INFORMATION_MESSAGE);
			}
		} catch (Exception e) {
			throw e;
			
		} finally {
       		if (bufferedWriter != null) {
				bufferedWriter.close();
			}
		}
	}
	
	public String getFilaCabeceraExportarEvaluacionEmpleado(String sDelimiter) {
		String sFilaCabecera="";
		
		
		sFilaCabecera+=EvaluacionEmpleadoConstantesFunciones.LABEL_ID;

		if(parametroGeneralUsuario.getcon_exportar_campo_version()){
			sFilaCabecera+=sDelimiter;
		sFilaCabecera+=EvaluacionEmpleadoConstantesFunciones.LABEL_VERSIONROW;
		}

		sFilaCabecera+=sDelimiter;
		sFilaCabecera+=EvaluacionEmpleadoConstantesFunciones.LABEL_IDEMPRESA;
		sFilaCabecera+=sDelimiter;
		sFilaCabecera+=EvaluacionEmpleadoConstantesFunciones.LABEL_IDSUCURSAL;
		sFilaCabecera+=sDelimiter;
		sFilaCabecera+=EvaluacionEmpleadoConstantesFunciones.LABEL_IDEJERCICIO;
		sFilaCabecera+=sDelimiter;
		sFilaCabecera+=EvaluacionEmpleadoConstantesFunciones.LABEL_IDPERIODO;
		sFilaCabecera+=sDelimiter;
		sFilaCabecera+=EvaluacionEmpleadoConstantesFunciones.LABEL_IDESTRUCTURA;
		sFilaCabecera+=sDelimiter;
		sFilaCabecera+=EvaluacionEmpleadoConstantesFunciones.LABEL_IDEMPLEADO;
		sFilaCabecera+=sDelimiter;
		sFilaCabecera+=EvaluacionEmpleadoConstantesFunciones.LABEL_IDEMPLEADOEVALUA;
		sFilaCabecera+=sDelimiter;
		sFilaCabecera+=EvaluacionEmpleadoConstantesFunciones.LABEL_IDTIPOEVALUACIONEMPLEADO;
		sFilaCabecera+=sDelimiter;
		sFilaCabecera+=EvaluacionEmpleadoConstantesFunciones.LABEL_FECHA;
		sFilaCabecera+=sDelimiter;
		sFilaCabecera+=EvaluacionEmpleadoConstantesFunciones.LABEL_ESTAEVALUADO;
		sFilaCabecera+=sDelimiter;
		sFilaCabecera+=EvaluacionEmpleadoConstantesFunciones.LABEL_IDANIO;
		sFilaCabecera+=sDelimiter;
		sFilaCabecera+=EvaluacionEmpleadoConstantesFunciones.LABEL_IDSEMESTRE;
		sFilaCabecera+=sDelimiter;
		sFilaCabecera+=EvaluacionEmpleadoConstantesFunciones.LABEL_IDTRIMESTRE;
		sFilaCabecera+=sDelimiter;
		sFilaCabecera+=EvaluacionEmpleadoConstantesFunciones.LABEL_IDBIMESTRE;
		sFilaCabecera+=sDelimiter;
		sFilaCabecera+=EvaluacionEmpleadoConstantesFunciones.LABEL_IDMES;
		sFilaCabecera+=sDelimiter;
		sFilaCabecera+=EvaluacionEmpleadoConstantesFunciones.LABEL_OBSERVACION1;
		sFilaCabecera+=sDelimiter;
		sFilaCabecera+=EvaluacionEmpleadoConstantesFunciones.LABEL_OBSERVACION2;
		sFilaCabecera+=sDelimiter;
		sFilaCabecera+=EvaluacionEmpleadoConstantesFunciones.LABEL_OBSERVACION3;
		sFilaCabecera+=sDelimiter;
		sFilaCabecera+=EvaluacionEmpleadoConstantesFunciones.LABEL_OBSERVACION4;
		
		return sFilaCabecera;
	}
	
	public String getFilaDatosExportarEvaluacionEmpleado(EvaluacionEmpleado evaluacionempleado,String sDelimiter) {
		String sFilaDatos="";
		
		sFilaDatos+="\r\n";
		
		
		sFilaDatos+=evaluacionempleado.getId().toString();

		if(parametroGeneralUsuario.getcon_exportar_campo_version()){
			sFilaDatos+=sDelimiter;
		sFilaDatos+=evaluacionempleado.getVersionRow().toString();
		}

		sFilaDatos+=sDelimiter;
		sFilaDatos+=evaluacionempleado.getempresa_descripcion();
		sFilaDatos+=sDelimiter;
		sFilaDatos+=evaluacionempleado.getsucursal_descripcion();
		sFilaDatos+=sDelimiter;
		sFilaDatos+=evaluacionempleado.getejercicio_descripcion();
		sFilaDatos+=sDelimiter;
		sFilaDatos+=evaluacionempleado.getperiodo_descripcion();
		sFilaDatos+=sDelimiter;
		sFilaDatos+=evaluacionempleado.getestructura_descripcion();
		sFilaDatos+=sDelimiter;
		sFilaDatos+=evaluacionempleado.getempleado_descripcion();
		sFilaDatos+=sDelimiter;
		sFilaDatos+=evaluacionempleado.getempleadoevalua_descripcion();
		sFilaDatos+=sDelimiter;
		sFilaDatos+=evaluacionempleado.gettipoevaluacionempleado_descripcion();
		sFilaDatos+=sDelimiter;
		sFilaDatos+=evaluacionempleado.getfecha().toString();
		sFilaDatos+=sDelimiter;
		sFilaDatos+=evaluacionempleado.getesta_evaluado().toString();
		sFilaDatos+=sDelimiter;
		sFilaDatos+=evaluacionempleado.getanio_descripcion();
		sFilaDatos+=sDelimiter;
		sFilaDatos+=evaluacionempleado.getsemestre_descripcion();
		sFilaDatos+=sDelimiter;
		sFilaDatos+=evaluacionempleado.gettrimestre_descripcion();
		sFilaDatos+=sDelimiter;
		sFilaDatos+=evaluacionempleado.getbimestre_descripcion();
		sFilaDatos+=sDelimiter;
		sFilaDatos+=evaluacionempleado.getmes_descripcion();
		sFilaDatos+=sDelimiter;
		sFilaDatos+=evaluacionempleado.getobservacion1();
		sFilaDatos+=sDelimiter;
		sFilaDatos+=evaluacionempleado.getobservacion2();
		sFilaDatos+=sDelimiter;
		sFilaDatos+=evaluacionempleado.getobservacion3();
		sFilaDatos+=sDelimiter;
		sFilaDatos+=evaluacionempleado.getobservacion4();
		
		return sFilaDatos;
	}
	
	//@SuppressWarnings("deprecation")
	public void exportarExcelEvaluacionEmpleadosSeleccionados() throws Exception {
		ArrayList<EvaluacionEmpleado> evaluacionempleadosSeleccionados=new ArrayList<EvaluacionEmpleado>();		
		
		evaluacionempleadosSeleccionados=this.getEvaluacionEmpleadosSeleccionados(true);
		
		String sTipo=Funciones2.getTipoExportar(this.parametroGeneralUsuario);
		Boolean conCabecera=this.parametroGeneralUsuario.getcon_exportar_cabecera();
		String sDelimiter=Funciones2.getTipoDelimiter(this.parametroGeneralUsuario);
		String sPath=this.parametroGeneralUsuario.getpath_exportar()+"evaluacionempleado.xls";
		
		String sFilaCabecera="";
		String sFilaDatos="";
		
		FileOutputStream fileOutputStream=null;
		
		try {
			HSSFWorkbook workbook = new HSSFWorkbook();
			HSSFSheet sheet = workbook.createSheet("EvaluacionEmpleados");
						
		    			
			Integer iRow=0;
			Integer iCell=0;
			
			HSSFRow row = sheet.createRow(iRow);
			HSSFCell cell = row.createCell(iCell);
			//cell.setCellValue("Blahblah");

			if(conCabecera) {
				this.getFilaCabeceraExportarExcelEvaluacionEmpleado(row);				
				iRow++;
			}				
			
			for(EvaluacionEmpleado evaluacionempleadoAux:evaluacionempleadosSeleccionados) {
				row = sheet.createRow(iRow);
				
				this.getFilaDatosExportarExcelEvaluacionEmpleado(evaluacionempleadoAux,row);
				
				iRow++;
			}
			
			
			fileOutputStream = new FileOutputStream(new File(sPath));
		    
			workbook.write(fileOutputStream);
			
			//fileOutputStream.close();
			
			Constantes2.S_PATH_ULTIMO_ARCHIVO=sPath;
			
			if(this.parametroGeneralUsuario.getcon_mensaje_confirmacion() && !this.evaluacionempleadoSessionBean.getEsGuardarRelacionado()) {//Constantes.ISMOSTRARMENSAJESMANTENIMIENTO && 
				JOptionPane.showMessageDialog(this,"EXPORTADO CORRECTAMENTE:"+sPath,"MANTENIMIENTO DE Evaluacion Empleado",JOptionPane.INFORMATION_MESSAGE);
			}
		} catch (Exception e) {
			throw e;
			
		} finally {			
       		if (fileOutputStream != null) {
				fileOutputStream.close();
			}			
		}
	}		
	
	public void exportarXmlEvaluacionEmpleadosSeleccionados() throws Exception {
		ArrayList<EvaluacionEmpleado> evaluacionempleadosSeleccionados=new ArrayList<EvaluacionEmpleado>();		
		
		evaluacionempleadosSeleccionados=this.getEvaluacionEmpleadosSeleccionados(true);
		
		//String sTipo=Funciones2.getTipoExportar(this.parametroGeneralUsuario);
		//Boolean conCabecera=this.parametroGeneralUsuario.getcon_exportar_cabecera();
		//String sDelimiter=Funciones2.getTipoDelimiter(this.parametroGeneralUsuario);
		String sPath=this.parametroGeneralUsuario.getpath_exportar()+"evaluacionempleado.xml";
		
		String sFilaCabecera="";
		String sFilaDatos="";
		
		DocumentBuilderFactory documentBuilderFactory=null;
		DocumentBuilder documentBuilder =null;
		
		try {
			documentBuilderFactory = DocumentBuilderFactory.newInstance();
			documentBuilder = documentBuilderFactory.newDocumentBuilder();
	
			Document document = documentBuilder.newDocument();
			Element elementRoot = document.createElement("evaluacionempleados");
			
			document.appendChild(elementRoot);
		    			
												
			Element element = null;//document.createElement("evaluacionempleado");
			//elementRoot.appendChild(element);
		
			for(EvaluacionEmpleado evaluacionempleadoAux:evaluacionempleadosSeleccionados) {
				element = document.createElement("evaluacionempleado");
				elementRoot.appendChild(element);
			
				this.setFilaDatosExportarXmlEvaluacionEmpleado(evaluacionempleadoAux,document,element);
			}
			
			TransformerFactory transformerFactory = TransformerFactory.newInstance();
			Transformer transformer = transformerFactory.newTransformer();
			DOMSource domSource = new DOMSource(document);
			
			StreamResult streamResult = new StreamResult(new File(sPath));
	
			transformer.transform(domSource, streamResult);
						
			Constantes2.S_PATH_ULTIMO_ARCHIVO=sPath;
			
			if(this.parametroGeneralUsuario.getcon_mensaje_confirmacion() && !this.evaluacionempleadoSessionBean.getEsGuardarRelacionado()) {//Constantes.ISMOSTRARMENSAJESMANTENIMIENTO && 
				JOptionPane.showMessageDialog(this,"EXPORTADO CORRECTAMENTE:"+sPath,"MANTENIMIENTO DE Evaluacion Empleado",JOptionPane.INFORMATION_MESSAGE);
			}
		} catch (Exception e) {
			throw e;
			
		} finally {			       				
		}
	}	
	
	//@SuppressWarnings("deprecation")
	public void getFilaCabeceraExportarExcelEvaluacionEmpleado(HSSFRow row) {
		Integer iColumn=0;
		
		
		HSSFCell cell =null;
		cell = row.createCell(iColumn++);cell.setCellValue(EvaluacionEmpleadoConstantesFunciones.LABEL_ID);

		if(parametroGeneralUsuario.getcon_exportar_campo_version()){
		cell = row.createCell(iColumn++);cell.setCellValue(EvaluacionEmpleadoConstantesFunciones.LABEL_VERSIONROW);
		}

		cell = row.createCell(iColumn++);cell.setCellValue(EvaluacionEmpleadoConstantesFunciones.LABEL_IDEMPRESA);
		cell = row.createCell(iColumn++);cell.setCellValue(EvaluacionEmpleadoConstantesFunciones.LABEL_IDSUCURSAL);
		cell = row.createCell(iColumn++);cell.setCellValue(EvaluacionEmpleadoConstantesFunciones.LABEL_IDEJERCICIO);
		cell = row.createCell(iColumn++);cell.setCellValue(EvaluacionEmpleadoConstantesFunciones.LABEL_IDPERIODO);
		cell = row.createCell(iColumn++);cell.setCellValue(EvaluacionEmpleadoConstantesFunciones.LABEL_IDESTRUCTURA);
		cell = row.createCell(iColumn++);cell.setCellValue(EvaluacionEmpleadoConstantesFunciones.LABEL_IDEMPLEADO);
		cell = row.createCell(iColumn++);cell.setCellValue(EvaluacionEmpleadoConstantesFunciones.LABEL_IDEMPLEADOEVALUA);
		cell = row.createCell(iColumn++);cell.setCellValue(EvaluacionEmpleadoConstantesFunciones.LABEL_IDTIPOEVALUACIONEMPLEADO);
		cell = row.createCell(iColumn++);cell.setCellValue(EvaluacionEmpleadoConstantesFunciones.LABEL_FECHA);
		cell = row.createCell(iColumn++);cell.setCellValue(EvaluacionEmpleadoConstantesFunciones.LABEL_ESTAEVALUADO);
		cell = row.createCell(iColumn++);cell.setCellValue(EvaluacionEmpleadoConstantesFunciones.LABEL_IDANIO);
		cell = row.createCell(iColumn++);cell.setCellValue(EvaluacionEmpleadoConstantesFunciones.LABEL_IDSEMESTRE);
		cell = row.createCell(iColumn++);cell.setCellValue(EvaluacionEmpleadoConstantesFunciones.LABEL_IDTRIMESTRE);
		cell = row.createCell(iColumn++);cell.setCellValue(EvaluacionEmpleadoConstantesFunciones.LABEL_IDBIMESTRE);
		cell = row.createCell(iColumn++);cell.setCellValue(EvaluacionEmpleadoConstantesFunciones.LABEL_IDMES);
		cell = row.createCell(iColumn++);cell.setCellValue(EvaluacionEmpleadoConstantesFunciones.LABEL_OBSERVACION1);
		cell = row.createCell(iColumn++);cell.setCellValue(EvaluacionEmpleadoConstantesFunciones.LABEL_OBSERVACION2);
		cell = row.createCell(iColumn++);cell.setCellValue(EvaluacionEmpleadoConstantesFunciones.LABEL_OBSERVACION3);
		cell = row.createCell(iColumn++);cell.setCellValue(EvaluacionEmpleadoConstantesFunciones.LABEL_OBSERVACION4);
	}
	
	//@SuppressWarnings("deprecation")
	public void getFilaDatosExportarExcelEvaluacionEmpleado(EvaluacionEmpleado evaluacionempleado,HSSFRow row) {
		Integer iColumn=0;
		
		
		HSSFCell cell =null;
		cell = row.createCell(iColumn++);cell.setCellValue(evaluacionempleado.getId());
		cell = row.createCell(iColumn++);cell.setCellValue(evaluacionempleado.getempresa_descripcion());
		cell = row.createCell(iColumn++);cell.setCellValue(evaluacionempleado.getsucursal_descripcion());
		cell = row.createCell(iColumn++);cell.setCellValue(evaluacionempleado.getejercicio_descripcion());
		cell = row.createCell(iColumn++);cell.setCellValue(evaluacionempleado.getperiodo_descripcion());
		cell = row.createCell(iColumn++);cell.setCellValue(evaluacionempleado.getestructura_descripcion());
		cell = row.createCell(iColumn++);cell.setCellValue(evaluacionempleado.getempleado_descripcion());
		cell = row.createCell(iColumn++);cell.setCellValue(evaluacionempleado.getempleadoevalua_descripcion());
		cell = row.createCell(iColumn++);cell.setCellValue(evaluacionempleado.gettipoevaluacionempleado_descripcion());
		cell = row.createCell(iColumn++);cell.setCellValue(evaluacionempleado.getfecha());
		cell = row.createCell(iColumn++);cell.setCellValue(evaluacionempleado.getesta_evaluado());
		cell = row.createCell(iColumn++);cell.setCellValue(evaluacionempleado.getanio_descripcion());
		cell = row.createCell(iColumn++);cell.setCellValue(evaluacionempleado.getsemestre_descripcion());
		cell = row.createCell(iColumn++);cell.setCellValue(evaluacionempleado.gettrimestre_descripcion());
		cell = row.createCell(iColumn++);cell.setCellValue(evaluacionempleado.getbimestre_descripcion());
		cell = row.createCell(iColumn++);cell.setCellValue(evaluacionempleado.getmes_descripcion());
		cell = row.createCell(iColumn++);cell.setCellValue(evaluacionempleado.getobservacion1());
		cell = row.createCell(iColumn++);cell.setCellValue(evaluacionempleado.getobservacion2());
		cell = row.createCell(iColumn++);cell.setCellValue(evaluacionempleado.getobservacion3());
		cell = row.createCell(iColumn++);cell.setCellValue(evaluacionempleado.getobservacion4());				
	}
	
	public void setFilaDatosExportarXmlEvaluacionEmpleado(EvaluacionEmpleado evaluacionempleado,Document document,Element element) {
		/*
		Element lastname = document.createElement("lastname");
		lastname.appendChild(document.createTextNode("mook kim"));
		element.appendChild(lastname);
		*/
		

		Element elementId = document.createElement(EvaluacionEmpleadoConstantesFunciones.ID);
		elementId.appendChild(document.createTextNode(evaluacionempleado.getId().toString().trim()));
		element.appendChild(elementId);

		if(parametroGeneralUsuario.getcon_exportar_campo_version()){

		Element elementVersionRow = document.createElement(EvaluacionEmpleadoConstantesFunciones.VERSIONROW);
		elementVersionRow.appendChild(document.createTextNode(evaluacionempleado.getVersionRow().toString().trim()));
		element.appendChild(elementVersionRow);
		}


		Element elementempresa_descripcion = document.createElement(EvaluacionEmpleadoConstantesFunciones.IDEMPRESA);
		elementempresa_descripcion.appendChild(document.createTextNode(evaluacionempleado.getempresa_descripcion()));
		element.appendChild(elementempresa_descripcion);

		Element elementsucursal_descripcion = document.createElement(EvaluacionEmpleadoConstantesFunciones.IDSUCURSAL);
		elementsucursal_descripcion.appendChild(document.createTextNode(evaluacionempleado.getsucursal_descripcion()));
		element.appendChild(elementsucursal_descripcion);

		Element elementejercicio_descripcion = document.createElement(EvaluacionEmpleadoConstantesFunciones.IDEJERCICIO);
		elementejercicio_descripcion.appendChild(document.createTextNode(evaluacionempleado.getejercicio_descripcion()));
		element.appendChild(elementejercicio_descripcion);

		Element elementperiodo_descripcion = document.createElement(EvaluacionEmpleadoConstantesFunciones.IDPERIODO);
		elementperiodo_descripcion.appendChild(document.createTextNode(evaluacionempleado.getperiodo_descripcion()));
		element.appendChild(elementperiodo_descripcion);

		Element elementestructura_descripcion = document.createElement(EvaluacionEmpleadoConstantesFunciones.IDESTRUCTURA);
		elementestructura_descripcion.appendChild(document.createTextNode(evaluacionempleado.getestructura_descripcion()));
		element.appendChild(elementestructura_descripcion);

		Element elementempleado_descripcion = document.createElement(EvaluacionEmpleadoConstantesFunciones.IDEMPLEADO);
		elementempleado_descripcion.appendChild(document.createTextNode(evaluacionempleado.getempleado_descripcion()));
		element.appendChild(elementempleado_descripcion);

		Element elementempleadoevalua_descripcion = document.createElement(EvaluacionEmpleadoConstantesFunciones.IDEMPLEADOEVALUA);
		elementempleadoevalua_descripcion.appendChild(document.createTextNode(evaluacionempleado.getempleadoevalua_descripcion()));
		element.appendChild(elementempleadoevalua_descripcion);

		Element elementtipoevaluacionempleado_descripcion = document.createElement(EvaluacionEmpleadoConstantesFunciones.IDTIPOEVALUACIONEMPLEADO);
		elementtipoevaluacionempleado_descripcion.appendChild(document.createTextNode(evaluacionempleado.gettipoevaluacionempleado_descripcion()));
		element.appendChild(elementtipoevaluacionempleado_descripcion);

		Element elementfecha = document.createElement(EvaluacionEmpleadoConstantesFunciones.FECHA);
		elementfecha.appendChild(document.createTextNode(evaluacionempleado.getfecha().toString().trim()));
		element.appendChild(elementfecha);

		Element elementesta_evaluado = document.createElement(EvaluacionEmpleadoConstantesFunciones.ESTAEVALUADO);
		elementesta_evaluado.appendChild(document.createTextNode(evaluacionempleado.getesta_evaluado().toString().trim()));
		element.appendChild(elementesta_evaluado);

		Element elementanio_descripcion = document.createElement(EvaluacionEmpleadoConstantesFunciones.IDANIO);
		elementanio_descripcion.appendChild(document.createTextNode(evaluacionempleado.getanio_descripcion()));
		element.appendChild(elementanio_descripcion);

		Element elementsemestre_descripcion = document.createElement(EvaluacionEmpleadoConstantesFunciones.IDSEMESTRE);
		elementsemestre_descripcion.appendChild(document.createTextNode(evaluacionempleado.getsemestre_descripcion()));
		element.appendChild(elementsemestre_descripcion);

		Element elementtrimestre_descripcion = document.createElement(EvaluacionEmpleadoConstantesFunciones.IDTRIMESTRE);
		elementtrimestre_descripcion.appendChild(document.createTextNode(evaluacionempleado.gettrimestre_descripcion()));
		element.appendChild(elementtrimestre_descripcion);

		Element elementbimestre_descripcion = document.createElement(EvaluacionEmpleadoConstantesFunciones.IDBIMESTRE);
		elementbimestre_descripcion.appendChild(document.createTextNode(evaluacionempleado.getbimestre_descripcion()));
		element.appendChild(elementbimestre_descripcion);

		Element elementmes_descripcion = document.createElement(EvaluacionEmpleadoConstantesFunciones.IDMES);
		elementmes_descripcion.appendChild(document.createTextNode(evaluacionempleado.getmes_descripcion()));
		element.appendChild(elementmes_descripcion);

		Element elementobservacion1 = document.createElement(EvaluacionEmpleadoConstantesFunciones.OBSERVACION1);
		elementobservacion1.appendChild(document.createTextNode(evaluacionempleado.getobservacion1().trim()));
		element.appendChild(elementobservacion1);

		Element elementobservacion2 = document.createElement(EvaluacionEmpleadoConstantesFunciones.OBSERVACION2);
		elementobservacion2.appendChild(document.createTextNode(evaluacionempleado.getobservacion2().trim()));
		element.appendChild(elementobservacion2);

		Element elementobservacion3 = document.createElement(EvaluacionEmpleadoConstantesFunciones.OBSERVACION3);
		elementobservacion3.appendChild(document.createTextNode(evaluacionempleado.getobservacion3().trim()));
		element.appendChild(elementobservacion3);

		Element elementobservacion4 = document.createElement(EvaluacionEmpleadoConstantesFunciones.OBSERVACION4);
		elementobservacion4.appendChild(document.createTextNode(evaluacionempleado.getobservacion4().trim()));
		element.appendChild(elementobservacion4);
	}
	
	public void generarReporteGroupGenericoEvaluacionEmpleadosSeleccionados(Boolean soloTotales) throws Exception {
		ArrayList<EvaluacionEmpleado> evaluacionempleadosSeleccionados=new ArrayList<EvaluacionEmpleado>();
		
		evaluacionempleadosSeleccionados=this.getEvaluacionEmpleadosSeleccionados(true);
		
		this.actualizarVariablesTipoReporte(true,false,false,"");
		
		/*
		this.esReporteDinamico=false;
		this.sPathReporteDinamico="";
		*/
		
		if(!soloTotales) {
			this.sTipoReporteExtra=Constantes2.S_REPORTE_EXTRA_GROUP_GENERICO;
		} else {
			this.sTipoReporteExtra=Constantes2.S_REPORTE_EXTRA_GROUP_TOTALES_GENERICO;
		}
		
		this.setColumnaDescripcionReporteGroupGenericoEvaluacionEmpleado(evaluacionempleadosSeleccionados);
		
		this.generarReporteEvaluacionEmpleados("Todos",evaluacionempleadosSeleccionados);
	}
	
	public void setColumnaDescripcionReporteGroupGenericoEvaluacionEmpleado(ArrayList<EvaluacionEmpleado> evaluacionempleadosSeleccionados) throws Exception {    		
		try {
			//FUNCIONA CON MODEL PERO SE DANA MANTENIMIENTO
			
			Boolean existe=false;
			
			for(EvaluacionEmpleado evaluacionempleadoAux:evaluacionempleadosSeleccionados) {
				evaluacionempleadoAux.setsDetalleGeneralEntityReporte(evaluacionempleadoAux.toString());
			
				if(sTipoSeleccionar.equals(EvaluacionEmpleadoConstantesFunciones.LABEL_IDEMPRESA)) {
					existe=true;
					evaluacionempleadoAux.setsDescripcionGeneralEntityReporte1(evaluacionempleadoAux.getempresa_descripcion());
				}
				 else if(sTipoSeleccionar.equals(EvaluacionEmpleadoConstantesFunciones.LABEL_IDSUCURSAL)) {
					existe=true;
					evaluacionempleadoAux.setsDescripcionGeneralEntityReporte1(evaluacionempleadoAux.getsucursal_descripcion());
				}
				 else if(sTipoSeleccionar.equals(EvaluacionEmpleadoConstantesFunciones.LABEL_IDEJERCICIO)) {
					existe=true;
					evaluacionempleadoAux.setsDescripcionGeneralEntityReporte1(evaluacionempleadoAux.getejercicio_descripcion());
				}
				 else if(sTipoSeleccionar.equals(EvaluacionEmpleadoConstantesFunciones.LABEL_IDPERIODO)) {
					existe=true;
					evaluacionempleadoAux.setsDescripcionGeneralEntityReporte1(evaluacionempleadoAux.getperiodo_descripcion());
				}
				 else if(sTipoSeleccionar.equals(EvaluacionEmpleadoConstantesFunciones.LABEL_IDESTRUCTURA)) {
					existe=true;
					evaluacionempleadoAux.setsDescripcionGeneralEntityReporte1(evaluacionempleadoAux.getestructura_descripcion());
				}
				 else if(sTipoSeleccionar.equals(EvaluacionEmpleadoConstantesFunciones.LABEL_IDEMPLEADO)) {
					existe=true;
					evaluacionempleadoAux.setsDescripcionGeneralEntityReporte1(evaluacionempleadoAux.getempleado_descripcion());
				}
				 else if(sTipoSeleccionar.equals(EvaluacionEmpleadoConstantesFunciones.LABEL_IDEMPLEADOEVALUA)) {
					existe=true;
					evaluacionempleadoAux.setsDescripcionGeneralEntityReporte1(evaluacionempleadoAux.getempleadoevalua_descripcion());
				}
				 else if(sTipoSeleccionar.equals(EvaluacionEmpleadoConstantesFunciones.LABEL_IDTIPOEVALUACIONEMPLEADO)) {
					existe=true;
					evaluacionempleadoAux.setsDescripcionGeneralEntityReporte1(evaluacionempleadoAux.gettipoevaluacionempleado_descripcion());
				}
				 else if(sTipoSeleccionar.equals(EvaluacionEmpleadoConstantesFunciones.LABEL_FECHA)) {
					existe=true;
					evaluacionempleadoAux.setsDescripcionGeneralEntityReporte1(Funciones2.getStringPostgresDate(evaluacionempleadoAux.getfecha()));
				}
				 else if(sTipoSeleccionar.equals(EvaluacionEmpleadoConstantesFunciones.LABEL_ESTAEVALUADO)) {
					existe=true;
					evaluacionempleadoAux.setsDescripcionGeneralEntityReporte1(Funciones2.getDescripcionBoolean(evaluacionempleadoAux.getesta_evaluado()));
				}
				 else if(sTipoSeleccionar.equals(EvaluacionEmpleadoConstantesFunciones.LABEL_IDANIO)) {
					existe=true;
					evaluacionempleadoAux.setsDescripcionGeneralEntityReporte1(evaluacionempleadoAux.getanio_descripcion());
				}
				 else if(sTipoSeleccionar.equals(EvaluacionEmpleadoConstantesFunciones.LABEL_IDSEMESTRE)) {
					existe=true;
					evaluacionempleadoAux.setsDescripcionGeneralEntityReporte1(evaluacionempleadoAux.getsemestre_descripcion());
				}
				 else if(sTipoSeleccionar.equals(EvaluacionEmpleadoConstantesFunciones.LABEL_IDTRIMESTRE)) {
					existe=true;
					evaluacionempleadoAux.setsDescripcionGeneralEntityReporte1(evaluacionempleadoAux.gettrimestre_descripcion());
				}
				 else if(sTipoSeleccionar.equals(EvaluacionEmpleadoConstantesFunciones.LABEL_IDBIMESTRE)) {
					existe=true;
					evaluacionempleadoAux.setsDescripcionGeneralEntityReporte1(evaluacionempleadoAux.getbimestre_descripcion());
				}
				 else if(sTipoSeleccionar.equals(EvaluacionEmpleadoConstantesFunciones.LABEL_IDMES)) {
					existe=true;
					evaluacionempleadoAux.setsDescripcionGeneralEntityReporte1(evaluacionempleadoAux.getmes_descripcion());
				}
				 else if(sTipoSeleccionar.equals(EvaluacionEmpleadoConstantesFunciones.LABEL_OBSERVACION1)) {
					existe=true;
					evaluacionempleadoAux.setsDescripcionGeneralEntityReporte1(evaluacionempleadoAux.getobservacion1());
				}
				 else if(sTipoSeleccionar.equals(EvaluacionEmpleadoConstantesFunciones.LABEL_OBSERVACION2)) {
					existe=true;
					evaluacionempleadoAux.setsDescripcionGeneralEntityReporte1(evaluacionempleadoAux.getobservacion2());
				}
				 else if(sTipoSeleccionar.equals(EvaluacionEmpleadoConstantesFunciones.LABEL_OBSERVACION3)) {
					existe=true;
					evaluacionempleadoAux.setsDescripcionGeneralEntityReporte1(evaluacionempleadoAux.getobservacion3());
				}
				 else if(sTipoSeleccionar.equals(EvaluacionEmpleadoConstantesFunciones.LABEL_OBSERVACION4)) {
					existe=true;
					evaluacionempleadoAux.setsDescripcionGeneralEntityReporte1(evaluacionempleadoAux.getobservacion4());
				}
			}	
											
			if(!existe) {
				JOptionPane.showMessageDialog(this,"NO SE HA SELECCIONADO ALGUNA COLUMNA VALIDA","SELECCIONAR",JOptionPane.ERROR_MESSAGE);
			}										
		} catch(Exception e) {
			FuncionesSwing.manageException(this, e,logger,EvaluacionEmpleadoConstantesFunciones.CLASSNAME);
		}
	}
	
	
	public void actualizarEstadoCeldasBotonesEvaluacionEmpleado(String sAccion,Boolean isGuardarCambiosEnLote,Boolean isEsMantenimientoRelacionado) throws Exception {
		if(sAccion=="n") {
			if(!this.esParaBusquedaForeignKey) {
				this.isVisibilidadCeldaNuevoEvaluacionEmpleado=true;
				this.isVisibilidadCeldaNuevoRelacionesEvaluacionEmpleado=true;
				this.isVisibilidadCeldaGuardarCambiosEvaluacionEmpleado=true;
			}
			
			this.isVisibilidadCeldaModificarEvaluacionEmpleado=false;
			this.isVisibilidadCeldaActualizarEvaluacionEmpleado=false;
			this.isVisibilidadCeldaEliminarEvaluacionEmpleado=false;
			this.isVisibilidadCeldaCancelarEvaluacionEmpleado=false;
			
			if(isEsMantenimientoRelacionado==false) {
				if(isGuardarCambiosEnLote==true) {
					this.isVisibilidadCeldaGuardarEvaluacionEmpleado=true;
				} else {
					this.isVisibilidadCeldaGuardarEvaluacionEmpleado=false;
				}
			}
		} else if(sAccion=="a") {
			this.isVisibilidadCeldaNuevoEvaluacionEmpleado=false;
			this.isVisibilidadCeldaNuevoRelacionesEvaluacionEmpleado=false;
			this.isVisibilidadCeldaGuardarCambiosEvaluacionEmpleado=false;
			this.isVisibilidadCeldaModificarEvaluacionEmpleado=false;
			this.isVisibilidadCeldaActualizarEvaluacionEmpleado=true;
			this.isVisibilidadCeldaEliminarEvaluacionEmpleado=false;
			this.isVisibilidadCeldaCancelarEvaluacionEmpleado=true;
			
			if(isEsMantenimientoRelacionado==false) {
				if(isGuardarCambiosEnLote==true) {
					this.isVisibilidadCeldaGuardarEvaluacionEmpleado=true;
				} else {
					this.isVisibilidadCeldaGuardarEvaluacionEmpleado=false;
				}
			}
		} else if(sAccion=="ae") {
			this.isVisibilidadCeldaNuevoEvaluacionEmpleado=false;
			this.isVisibilidadCeldaNuevoRelacionesEvaluacionEmpleado=false;
			this.isVisibilidadCeldaGuardarCambiosEvaluacionEmpleado=false;
			this.isVisibilidadCeldaModificarEvaluacionEmpleado=false;
			this.isVisibilidadCeldaActualizarEvaluacionEmpleado=true;
			this.isVisibilidadCeldaEliminarEvaluacionEmpleado=true;
			this.isVisibilidadCeldaCancelarEvaluacionEmpleado=true;
			
			if(isEsMantenimientoRelacionado==false) {
				if(isGuardarCambiosEnLote==true) {
					this.isVisibilidadCeldaGuardarEvaluacionEmpleado=true;
				} else {
					this.isVisibilidadCeldaGuardarEvaluacionEmpleado=false;
				}
			}
		}
		//Para Mantenimientos de tablas relacionados con mas de columnas minimas
		else if(sAccion=="ae2") {
			this.isVisibilidadCeldaNuevoEvaluacionEmpleado=false;
			this.isVisibilidadCeldaNuevoRelacionesEvaluacionEmpleado=false;
			this.isVisibilidadCeldaGuardarCambiosEvaluacionEmpleado=false;
			this.isVisibilidadCeldaModificarEvaluacionEmpleado=false;
			this.isVisibilidadCeldaActualizarEvaluacionEmpleado=true;
			this.isVisibilidadCeldaEliminarEvaluacionEmpleado=false;
			this.isVisibilidadCeldaCancelarEvaluacionEmpleado=true;
			
			if(isEsMantenimientoRelacionado==false) {
				if(isGuardarCambiosEnLote==true) {
					this.isVisibilidadCeldaGuardarEvaluacionEmpleado=false;
				} else {
					this.isVisibilidadCeldaGuardarEvaluacionEmpleado=false;
				}
			}
		} else if(sAccion=="c") {
			this.isVisibilidadCeldaNuevoEvaluacionEmpleado=true;
			this.isVisibilidadCeldaNuevoRelacionesEvaluacionEmpleado=true;
			this.isVisibilidadCeldaGuardarCambiosEvaluacionEmpleado=true;
			this.isVisibilidadCeldaModificarEvaluacionEmpleado=false;
			this.isVisibilidadCeldaActualizarEvaluacionEmpleado=false;
			this.isVisibilidadCeldaEliminarEvaluacionEmpleado=false;
			this.isVisibilidadCeldaCancelarEvaluacionEmpleado=false;
			
			if(isEsMantenimientoRelacionado==false) {
				if(isGuardarCambiosEnLote==true) {
					this.isVisibilidadCeldaGuardarEvaluacionEmpleado=true;
				} else {
					this.isVisibilidadCeldaGuardarEvaluacionEmpleado=false;
				}
			}
		} else if(sAccion=="t") {
			this.isVisibilidadCeldaNuevoEvaluacionEmpleado=false;
			this.isVisibilidadCeldaNuevoRelacionesEvaluacionEmpleado=false;
			this.isVisibilidadCeldaGuardarCambiosEvaluacionEmpleado=false;
			this.isVisibilidadCeldaActualizarEvaluacionEmpleado=false;
			this.isVisibilidadCeldaEliminarEvaluacionEmpleado=false;
			this.isVisibilidadCeldaCancelarEvaluacionEmpleado=false;
			
			if(isEsMantenimientoRelacionado==false) {
				if(isGuardarCambiosEnLote==true) {
					this.isVisibilidadCeldaGuardarEvaluacionEmpleado=false;
				} else {
					this.isVisibilidadCeldaGuardarEvaluacionEmpleado=false;
				}
			}
		}  else if(sAccion=="s"||sAccion=="s2") {
			this.isVisibilidadCeldaNuevoEvaluacionEmpleado=false;
			this.isVisibilidadCeldaNuevoRelacionesEvaluacionEmpleado=false;
			this.isVisibilidadCeldaGuardarCambiosEvaluacionEmpleado=false;
			this.isVisibilidadCeldaModificarEvaluacionEmpleado=true;
			this.isVisibilidadCeldaActualizarEvaluacionEmpleado=false;
			this.isVisibilidadCeldaEliminarEvaluacionEmpleado=false;
			this.isVisibilidadCeldaCancelarEvaluacionEmpleado=true;
			
			if(isEsMantenimientoRelacionado==false) {
				if(isGuardarCambiosEnLote==true) {
					this.isVisibilidadCeldaGuardarEvaluacionEmpleado=false;
				} else {
					this.isVisibilidadCeldaGuardarEvaluacionEmpleado=false;
				}
			}
		}
		
		//ACTUALIZA VISIBILIDAD PANELES
		if(EvaluacionEmpleadoJInternalFrame.CON_DATOS_FRAME && !this.esParaBusquedaForeignKey) {
			//SIEMPRE VISIBLE
			this.isVisibilidadCeldaNuevoEvaluacionEmpleado=true;
			this.isVisibilidadCeldaNuevoRelacionesEvaluacionEmpleado=true;
			this.isVisibilidadCeldaGuardarCambiosEvaluacionEmpleado=true;
		} else {
			this.actualizarEstadoPanelsEvaluacionEmpleado(sAccion);						
		}
		
		if(this.esParaBusquedaForeignKey) {
			this.isVisibilidadCeldaCopiarEvaluacionEmpleado=false;
			//this.isVisibilidadCeldaVerFormEvaluacionEmpleado=false;
			this.isVisibilidadCeldaDuplicarEvaluacionEmpleado=false;
		}
		
		//SI ES MANTENIMIENTO RELACIONES
		if(!evaluacionempleadoSessionBean.getConGuardarRelaciones()) {
			this.isVisibilidadCeldaNuevoRelacionesEvaluacionEmpleado=false;
		} else {
			this.isVisibilidadCeldaNuevoEvaluacionEmpleado=false;
			this.isVisibilidadCeldaGuardarCambiosEvaluacionEmpleado=false;
		}
		
		//SI ES MANTENIMIENTO RELACIONADO
		if(evaluacionempleadoSessionBean.getEsGuardarRelacionado()) {
			if(!evaluacionempleadoSessionBean.getConGuardarRelaciones()) {	
				this.isVisibilidadCeldaNuevoRelacionesEvaluacionEmpleado=false;												
			}
			
			this.jButtonCerrarEvaluacionEmpleado.setVisible(false);
		}
		
		//SI NO TIENE MAXIMO DE RELACIONES PERMITIDAS
		if(!this.conMaximoRelaciones) {
			this.isVisibilidadCeldaNuevoRelacionesEvaluacionEmpleado=false;
		}
		
		if(!this.permiteMantenimiento(this.evaluacionempleado)) {
			this.isVisibilidadCeldaActualizarEvaluacionEmpleado=false;
			this.isVisibilidadCeldaEliminarEvaluacionEmpleado=false;
		}
		
		
		
	}
	
	public void actualizarEstadoCeldasBotonesConGuardarRelacionesEvaluacionEmpleado() {
		this.isVisibilidadCeldaNuevoEvaluacionEmpleado=false;
		this.isVisibilidadCeldaGuardarCambiosEvaluacionEmpleado=false;
	}
	
	public void actualizarEstadoPanelsEvaluacionEmpleado(String sAccion) {
		if(sAccion=="n") {
			if(this.jScrollPanelDatosEdicionEvaluacionEmpleado!=null) {
				this.jScrollPanelDatosEdicionEvaluacionEmpleado.setVisible(false);			
			}
			
			//BYDAN_BUSQUEDAS
			
			if(this.jTabbedPaneBusquedasEvaluacionEmpleado!=null) {
				this.jTabbedPaneBusquedasEvaluacionEmpleado.setVisible(true);			
			}
			
			
			if(this.jScrollPanelDatosEvaluacionEmpleado!=null) {
				this.jScrollPanelDatosEvaluacionEmpleado.setVisible(true);
			}
			
			if(this.jPanelPaginacionEvaluacionEmpleado!=null) {
				this.jPanelPaginacionEvaluacionEmpleado.setVisible(true);
			}
			
			if(this.jPanelParametrosReportesEvaluacionEmpleado!=null) {
				this.jPanelParametrosReportesEvaluacionEmpleado.setVisible(true);		    
			}
			
		} else if(sAccion=="a") {				
			if(this.jScrollPanelDatosEdicionEvaluacionEmpleado!=null) {
				this.jScrollPanelDatosEdicionEvaluacionEmpleado.setVisible(true);			
			}
			
			//BYDAN_BUSQUEDAS
			
			if(this.jTabbedPaneBusquedasEvaluacionEmpleado!=null) {
				this.jTabbedPaneBusquedasEvaluacionEmpleado.setVisible(false);			
			}
			
			
			
			if(this.jScrollPanelDatosEvaluacionEmpleado!=null) {
				this.jScrollPanelDatosEvaluacionEmpleado.setVisible(false);
			}
			
			if(this.jPanelPaginacionEvaluacionEmpleado!=null) {
				this.jPanelPaginacionEvaluacionEmpleado.setVisible(false);
			}
			
			if(this.jPanelParametrosReportesEvaluacionEmpleado!=null) {
				this.jPanelParametrosReportesEvaluacionEmpleado.setVisible(false);
			}
						
		} else if(sAccion=="ae") {		
			if(this.jScrollPanelDatosEdicionEvaluacionEmpleado!=null) {
				this.jScrollPanelDatosEdicionEvaluacionEmpleado.setVisible(true);		
			}
			
			//BYDAN_BUSQUEDAS
			
			if(this.jTabbedPaneBusquedasEvaluacionEmpleado!=null) {
				this.jTabbedPaneBusquedasEvaluacionEmpleado.setVisible(false);			
			}
			
			
			if(this.jScrollPanelDatosEvaluacionEmpleado!=null) {
				this.jScrollPanelDatosEvaluacionEmpleado.setVisible(false);
			}
			
			if(this.jPanelPaginacionEvaluacionEmpleado!=null) {
				this.jPanelPaginacionEvaluacionEmpleado.setVisible(false);
			}
			
			if(this.jPanelParametrosReportesEvaluacionEmpleado!=null) {
				this.jPanelParametrosReportesEvaluacionEmpleado.setVisible(false);
			}
						
		}
		//Para Mantenimientos de tablas relacionados con mas de columnas minimas
		else if(sAccion=="ae2") {	
			if(this.jScrollPanelDatosEdicionEvaluacionEmpleado!=null) {
				this.jScrollPanelDatosEdicionEvaluacionEmpleado.setVisible(true);			
			}
			
			//BYDAN_BUSQUEDAS
			
			if(this.jTabbedPaneBusquedasEvaluacionEmpleado!=null) {
				this.jTabbedPaneBusquedasEvaluacionEmpleado.setVisible(false);			
			}
			
			
			if(this.jScrollPanelDatosEvaluacionEmpleado!=null) {
				this.jScrollPanelDatosEvaluacionEmpleado.setVisible(false);
			}
			
			if(this.jPanelPaginacionEvaluacionEmpleado!=null) {
				this.jPanelPaginacionEvaluacionEmpleado.setVisible(false);
			}
			
			if(this.jPanelParametrosReportesEvaluacionEmpleado!=null) {
				this.jPanelParametrosReportesEvaluacionEmpleado.setVisible(false);
			}
						
		} else if(sAccion=="c") {	
			if(this.jScrollPanelDatosEdicionEvaluacionEmpleado!=null) {
				this.jScrollPanelDatosEdicionEvaluacionEmpleado.setVisible(false);			
			}
			
			//BYDAN_BUSQUEDAS
			
			if(this.jTabbedPaneBusquedasEvaluacionEmpleado!=null) {
				this.jTabbedPaneBusquedasEvaluacionEmpleado.setVisible(true);			
			}
			
			
			if(this.jScrollPanelDatosEvaluacionEmpleado!=null) {
				this.jScrollPanelDatosEvaluacionEmpleado.setVisible(true);
			}
			
			if(this.jPanelPaginacionEvaluacionEmpleado!=null) {
				this.jPanelPaginacionEvaluacionEmpleado.setVisible(true);
			}
			
			if(this.jPanelParametrosReportesEvaluacionEmpleado!=null) {
				this.jPanelParametrosReportesEvaluacionEmpleado.setVisible(true);
			}
						
		} else if(sAccion=="t") {
			
			if(this.jScrollPanelDatosEdicionEvaluacionEmpleado!=null) {
				this.jScrollPanelDatosEdicionEvaluacionEmpleado.setVisible(false);
			}
			
			//BYDAN_BUSQUEDAS
			
			if(this.jTabbedPaneBusquedasEvaluacionEmpleado!=null) {
				this.jTabbedPaneBusquedasEvaluacionEmpleado.setVisible(true);			
			}
			
			
			if(this.jScrollPanelDatosEvaluacionEmpleado!=null) {
				this.jScrollPanelDatosEvaluacionEmpleado.setVisible(true);
			}
			
			if(this.jPanelPaginacionEvaluacionEmpleado!=null) {
				this.jPanelPaginacionEvaluacionEmpleado.setVisible(true);
			}
			
			if(this.jPanelParametrosReportesEvaluacionEmpleado!=null) {
				this.jPanelParametrosReportesEvaluacionEmpleado.setVisible(true);
			}
						
		}  else if(sAccion=="s"||sAccion=="s2") {
			if(this.jScrollPanelDatosEdicionEvaluacionEmpleado!=null) {
				this.jScrollPanelDatosEdicionEvaluacionEmpleado.setVisible(false);
			}
			
			//BYDAN_BUSQUEDAS
			
			if(this.jTabbedPaneBusquedasEvaluacionEmpleado!=null) {
				this.jTabbedPaneBusquedasEvaluacionEmpleado.setVisible(true);			
			}
			
			
			if(this.jScrollPanelDatosEvaluacionEmpleado!=null) {
				this.jScrollPanelDatosEvaluacionEmpleado.setVisible(true);
			}
			
			if(this.jPanelPaginacionEvaluacionEmpleado!=null) {
				this.jPanelPaginacionEvaluacionEmpleado.setVisible(true);
			}
			
			if(this.jPanelParametrosReportesEvaluacionEmpleado!=null) {
				this.jPanelParametrosReportesEvaluacionEmpleado.setVisible(true);
			}
			
		} 
		
		if(sAccion.equals("relacionado") || this.evaluacionempleadoSessionBean.getEsGuardarRelacionado()) {
			if(!this.conCargarMinimo) {
				//BYDAN_BUSQUEDAS
				
				if(this.jTabbedPaneBusquedasEvaluacionEmpleado!=null) {
					this.jTabbedPaneBusquedasEvaluacionEmpleado.setVisible(false);				
				}
				
			}
			
			if(this.jPanelParametrosReportesEvaluacionEmpleado!=null) {
				this.jPanelParametrosReportesEvaluacionEmpleado.setVisible(false);
			}
		
		} else if(sAccion.equals("no_relacionado") && !this.evaluacionempleadoSessionBean.getEsGuardarRelacionado()) {
			//BYDAN_BUSQUEDAS
			
			if(this.jTabbedPaneBusquedasEvaluacionEmpleado!=null) {
				this.jTabbedPaneBusquedasEvaluacionEmpleado.setVisible(true);			
			}
			
			if(this.jPanelParametrosReportesEvaluacionEmpleado!=null) {
				this.jPanelParametrosReportesEvaluacionEmpleado.setVisible(true);
			}
		}
	}	
	
	

	public void setVisibilidadBusquedasParaEmpresa(Boolean isParaEmpresa){
		//BYDAN_BUSQUEDAS
		
		if(!this.conCargarMinimo) {

			Boolean isParaEmpresaNegation=!isParaEmpresa;

			this.isVisibilidadFK_IdAnio=isParaEmpresaNegation;
			if(!this.isVisibilidadFK_IdAnio) {this.jTabbedPaneBusquedasEvaluacionEmpleado.remove(jPanelFK_IdAnioEvaluacionEmpleado);}

			this.isVisibilidadFK_IdBimestre=isParaEmpresaNegation;
			if(!this.isVisibilidadFK_IdBimestre) {this.jTabbedPaneBusquedasEvaluacionEmpleado.remove(jPanelFK_IdBimestreEvaluacionEmpleado);}

			this.isVisibilidadFK_IdEmpleado=isParaEmpresaNegation;
			if(!this.isVisibilidadFK_IdEmpleado) {this.jTabbedPaneBusquedasEvaluacionEmpleado.remove(jPanelFK_IdEmpleadoEvaluacionEmpleado);}

			this.isVisibilidadFK_IdEmpleadoEvalua=isParaEmpresaNegation;
			if(!this.isVisibilidadFK_IdEmpleadoEvalua) {this.jTabbedPaneBusquedasEvaluacionEmpleado.remove(jPanelFK_IdEmpleadoEvaluaEvaluacionEmpleado);}

			this.isVisibilidadFK_IdEstructura=isParaEmpresaNegation;
			if(!this.isVisibilidadFK_IdEstructura) {this.jTabbedPaneBusquedasEvaluacionEmpleado.remove(jPanelFK_IdEstructuraEvaluacionEmpleado);}

			this.isVisibilidadFK_IdMes=isParaEmpresaNegation;
			if(!this.isVisibilidadFK_IdMes) {this.jTabbedPaneBusquedasEvaluacionEmpleado.remove(jPanelFK_IdMesEvaluacionEmpleado);}

			this.isVisibilidadFK_IdSemestre=isParaEmpresaNegation;
			if(!this.isVisibilidadFK_IdSemestre) {this.jTabbedPaneBusquedasEvaluacionEmpleado.remove(jPanelFK_IdSemestreEvaluacionEmpleado);}

			this.isVisibilidadFK_IdTipoEvaluacionEmpleado=isParaEmpresaNegation;
			if(!this.isVisibilidadFK_IdTipoEvaluacionEmpleado) {this.jTabbedPaneBusquedasEvaluacionEmpleado.remove(jPanelFK_IdTipoEvaluacionEmpleadoEvaluacionEmpleado);}

			this.isVisibilidadFK_IdTrimestre=isParaEmpresaNegation;
			if(!this.isVisibilidadFK_IdTrimestre) {this.jTabbedPaneBusquedasEvaluacionEmpleado.remove(jPanelFK_IdTrimestreEvaluacionEmpleado);}
		}
		
	}

	public void setVisibilidadBusquedasParaSucursal(Boolean isParaSucursal){
		//BYDAN_BUSQUEDAS
		
		if(!this.conCargarMinimo) {

			Boolean isParaSucursalNegation=!isParaSucursal;

			this.isVisibilidadFK_IdAnio=isParaSucursalNegation;
			if(!this.isVisibilidadFK_IdAnio) {this.jTabbedPaneBusquedasEvaluacionEmpleado.remove(jPanelFK_IdAnioEvaluacionEmpleado);}

			this.isVisibilidadFK_IdBimestre=isParaSucursalNegation;
			if(!this.isVisibilidadFK_IdBimestre) {this.jTabbedPaneBusquedasEvaluacionEmpleado.remove(jPanelFK_IdBimestreEvaluacionEmpleado);}

			this.isVisibilidadFK_IdEmpleado=isParaSucursalNegation;
			if(!this.isVisibilidadFK_IdEmpleado) {this.jTabbedPaneBusquedasEvaluacionEmpleado.remove(jPanelFK_IdEmpleadoEvaluacionEmpleado);}

			this.isVisibilidadFK_IdEmpleadoEvalua=isParaSucursalNegation;
			if(!this.isVisibilidadFK_IdEmpleadoEvalua) {this.jTabbedPaneBusquedasEvaluacionEmpleado.remove(jPanelFK_IdEmpleadoEvaluaEvaluacionEmpleado);}

			this.isVisibilidadFK_IdEstructura=isParaSucursalNegation;
			if(!this.isVisibilidadFK_IdEstructura) {this.jTabbedPaneBusquedasEvaluacionEmpleado.remove(jPanelFK_IdEstructuraEvaluacionEmpleado);}

			this.isVisibilidadFK_IdMes=isParaSucursalNegation;
			if(!this.isVisibilidadFK_IdMes) {this.jTabbedPaneBusquedasEvaluacionEmpleado.remove(jPanelFK_IdMesEvaluacionEmpleado);}

			this.isVisibilidadFK_IdSemestre=isParaSucursalNegation;
			if(!this.isVisibilidadFK_IdSemestre) {this.jTabbedPaneBusquedasEvaluacionEmpleado.remove(jPanelFK_IdSemestreEvaluacionEmpleado);}

			this.isVisibilidadFK_IdTipoEvaluacionEmpleado=isParaSucursalNegation;
			if(!this.isVisibilidadFK_IdTipoEvaluacionEmpleado) {this.jTabbedPaneBusquedasEvaluacionEmpleado.remove(jPanelFK_IdTipoEvaluacionEmpleadoEvaluacionEmpleado);}

			this.isVisibilidadFK_IdTrimestre=isParaSucursalNegation;
			if(!this.isVisibilidadFK_IdTrimestre) {this.jTabbedPaneBusquedasEvaluacionEmpleado.remove(jPanelFK_IdTrimestreEvaluacionEmpleado);}
		}
		
	}

	public void setVisibilidadBusquedasParaEjercicio(Boolean isParaEjercicio){
		//BYDAN_BUSQUEDAS
		
		if(!this.conCargarMinimo) {

			Boolean isParaEjercicioNegation=!isParaEjercicio;

			this.isVisibilidadFK_IdAnio=isParaEjercicioNegation;
			if(!this.isVisibilidadFK_IdAnio) {this.jTabbedPaneBusquedasEvaluacionEmpleado.remove(jPanelFK_IdAnioEvaluacionEmpleado);}

			this.isVisibilidadFK_IdBimestre=isParaEjercicioNegation;
			if(!this.isVisibilidadFK_IdBimestre) {this.jTabbedPaneBusquedasEvaluacionEmpleado.remove(jPanelFK_IdBimestreEvaluacionEmpleado);}

			this.isVisibilidadFK_IdEmpleado=isParaEjercicioNegation;
			if(!this.isVisibilidadFK_IdEmpleado) {this.jTabbedPaneBusquedasEvaluacionEmpleado.remove(jPanelFK_IdEmpleadoEvaluacionEmpleado);}

			this.isVisibilidadFK_IdEmpleadoEvalua=isParaEjercicioNegation;
			if(!this.isVisibilidadFK_IdEmpleadoEvalua) {this.jTabbedPaneBusquedasEvaluacionEmpleado.remove(jPanelFK_IdEmpleadoEvaluaEvaluacionEmpleado);}

			this.isVisibilidadFK_IdEstructura=isParaEjercicioNegation;
			if(!this.isVisibilidadFK_IdEstructura) {this.jTabbedPaneBusquedasEvaluacionEmpleado.remove(jPanelFK_IdEstructuraEvaluacionEmpleado);}

			this.isVisibilidadFK_IdMes=isParaEjercicioNegation;
			if(!this.isVisibilidadFK_IdMes) {this.jTabbedPaneBusquedasEvaluacionEmpleado.remove(jPanelFK_IdMesEvaluacionEmpleado);}

			this.isVisibilidadFK_IdSemestre=isParaEjercicioNegation;
			if(!this.isVisibilidadFK_IdSemestre) {this.jTabbedPaneBusquedasEvaluacionEmpleado.remove(jPanelFK_IdSemestreEvaluacionEmpleado);}

			this.isVisibilidadFK_IdTipoEvaluacionEmpleado=isParaEjercicioNegation;
			if(!this.isVisibilidadFK_IdTipoEvaluacionEmpleado) {this.jTabbedPaneBusquedasEvaluacionEmpleado.remove(jPanelFK_IdTipoEvaluacionEmpleadoEvaluacionEmpleado);}

			this.isVisibilidadFK_IdTrimestre=isParaEjercicioNegation;
			if(!this.isVisibilidadFK_IdTrimestre) {this.jTabbedPaneBusquedasEvaluacionEmpleado.remove(jPanelFK_IdTrimestreEvaluacionEmpleado);}
		}
		
	}

	public void setVisibilidadBusquedasParaPeriodo(Boolean isParaPeriodo){
		//BYDAN_BUSQUEDAS
		
		if(!this.conCargarMinimo) {

			Boolean isParaPeriodoNegation=!isParaPeriodo;

			this.isVisibilidadFK_IdAnio=isParaPeriodoNegation;
			if(!this.isVisibilidadFK_IdAnio) {this.jTabbedPaneBusquedasEvaluacionEmpleado.remove(jPanelFK_IdAnioEvaluacionEmpleado);}

			this.isVisibilidadFK_IdBimestre=isParaPeriodoNegation;
			if(!this.isVisibilidadFK_IdBimestre) {this.jTabbedPaneBusquedasEvaluacionEmpleado.remove(jPanelFK_IdBimestreEvaluacionEmpleado);}

			this.isVisibilidadFK_IdEmpleado=isParaPeriodoNegation;
			if(!this.isVisibilidadFK_IdEmpleado) {this.jTabbedPaneBusquedasEvaluacionEmpleado.remove(jPanelFK_IdEmpleadoEvaluacionEmpleado);}

			this.isVisibilidadFK_IdEmpleadoEvalua=isParaPeriodoNegation;
			if(!this.isVisibilidadFK_IdEmpleadoEvalua) {this.jTabbedPaneBusquedasEvaluacionEmpleado.remove(jPanelFK_IdEmpleadoEvaluaEvaluacionEmpleado);}

			this.isVisibilidadFK_IdEstructura=isParaPeriodoNegation;
			if(!this.isVisibilidadFK_IdEstructura) {this.jTabbedPaneBusquedasEvaluacionEmpleado.remove(jPanelFK_IdEstructuraEvaluacionEmpleado);}

			this.isVisibilidadFK_IdMes=isParaPeriodoNegation;
			if(!this.isVisibilidadFK_IdMes) {this.jTabbedPaneBusquedasEvaluacionEmpleado.remove(jPanelFK_IdMesEvaluacionEmpleado);}

			this.isVisibilidadFK_IdSemestre=isParaPeriodoNegation;
			if(!this.isVisibilidadFK_IdSemestre) {this.jTabbedPaneBusquedasEvaluacionEmpleado.remove(jPanelFK_IdSemestreEvaluacionEmpleado);}

			this.isVisibilidadFK_IdTipoEvaluacionEmpleado=isParaPeriodoNegation;
			if(!this.isVisibilidadFK_IdTipoEvaluacionEmpleado) {this.jTabbedPaneBusquedasEvaluacionEmpleado.remove(jPanelFK_IdTipoEvaluacionEmpleadoEvaluacionEmpleado);}

			this.isVisibilidadFK_IdTrimestre=isParaPeriodoNegation;
			if(!this.isVisibilidadFK_IdTrimestre) {this.jTabbedPaneBusquedasEvaluacionEmpleado.remove(jPanelFK_IdTrimestreEvaluacionEmpleado);}
		}
		
	}

	public void setVisibilidadBusquedasParaEstructura(Boolean isParaEstructura){
		//BYDAN_BUSQUEDAS
		
		if(!this.conCargarMinimo) {

			Boolean isParaEstructuraNegation=!isParaEstructura;

			this.isVisibilidadFK_IdAnio=isParaEstructuraNegation;
			if(!this.isVisibilidadFK_IdAnio) {this.jTabbedPaneBusquedasEvaluacionEmpleado.remove(jPanelFK_IdAnioEvaluacionEmpleado);}

			this.isVisibilidadFK_IdBimestre=isParaEstructuraNegation;
			if(!this.isVisibilidadFK_IdBimestre) {this.jTabbedPaneBusquedasEvaluacionEmpleado.remove(jPanelFK_IdBimestreEvaluacionEmpleado);}

			this.isVisibilidadFK_IdEmpleado=isParaEstructuraNegation;
			if(!this.isVisibilidadFK_IdEmpleado) {this.jTabbedPaneBusquedasEvaluacionEmpleado.remove(jPanelFK_IdEmpleadoEvaluacionEmpleado);}

			this.isVisibilidadFK_IdEmpleadoEvalua=isParaEstructuraNegation;
			if(!this.isVisibilidadFK_IdEmpleadoEvalua) {this.jTabbedPaneBusquedasEvaluacionEmpleado.remove(jPanelFK_IdEmpleadoEvaluaEvaluacionEmpleado);}

			this.isVisibilidadFK_IdEstructura=isParaEstructura;
			if(!this.isVisibilidadFK_IdEstructura) {this.jTabbedPaneBusquedasEvaluacionEmpleado.remove(jPanelFK_IdEstructuraEvaluacionEmpleado);}

			this.isVisibilidadFK_IdMes=isParaEstructuraNegation;
			if(!this.isVisibilidadFK_IdMes) {this.jTabbedPaneBusquedasEvaluacionEmpleado.remove(jPanelFK_IdMesEvaluacionEmpleado);}

			this.isVisibilidadFK_IdSemestre=isParaEstructuraNegation;
			if(!this.isVisibilidadFK_IdSemestre) {this.jTabbedPaneBusquedasEvaluacionEmpleado.remove(jPanelFK_IdSemestreEvaluacionEmpleado);}

			this.isVisibilidadFK_IdTipoEvaluacionEmpleado=isParaEstructuraNegation;
			if(!this.isVisibilidadFK_IdTipoEvaluacionEmpleado) {this.jTabbedPaneBusquedasEvaluacionEmpleado.remove(jPanelFK_IdTipoEvaluacionEmpleadoEvaluacionEmpleado);}

			this.isVisibilidadFK_IdTrimestre=isParaEstructuraNegation;
			if(!this.isVisibilidadFK_IdTrimestre) {this.jTabbedPaneBusquedasEvaluacionEmpleado.remove(jPanelFK_IdTrimestreEvaluacionEmpleado);}
		}
		
	}

	public void setVisibilidadBusquedasParaEmpleado(Boolean isParaEmpleado){
		//BYDAN_BUSQUEDAS
		
		if(!this.conCargarMinimo) {

			Boolean isParaEmpleadoNegation=!isParaEmpleado;

			this.isVisibilidadFK_IdAnio=isParaEmpleadoNegation;
			if(!this.isVisibilidadFK_IdAnio) {this.jTabbedPaneBusquedasEvaluacionEmpleado.remove(jPanelFK_IdAnioEvaluacionEmpleado);}

			this.isVisibilidadFK_IdBimestre=isParaEmpleadoNegation;
			if(!this.isVisibilidadFK_IdBimestre) {this.jTabbedPaneBusquedasEvaluacionEmpleado.remove(jPanelFK_IdBimestreEvaluacionEmpleado);}

			this.isVisibilidadFK_IdEmpleado=isParaEmpleado;
			if(!this.isVisibilidadFK_IdEmpleado) {this.jTabbedPaneBusquedasEvaluacionEmpleado.remove(jPanelFK_IdEmpleadoEvaluacionEmpleado);}

			this.isVisibilidadFK_IdEmpleadoEvalua=isParaEmpleadoNegation;
			if(!this.isVisibilidadFK_IdEmpleadoEvalua) {this.jTabbedPaneBusquedasEvaluacionEmpleado.remove(jPanelFK_IdEmpleadoEvaluaEvaluacionEmpleado);}

			this.isVisibilidadFK_IdEstructura=isParaEmpleadoNegation;
			if(!this.isVisibilidadFK_IdEstructura) {this.jTabbedPaneBusquedasEvaluacionEmpleado.remove(jPanelFK_IdEstructuraEvaluacionEmpleado);}

			this.isVisibilidadFK_IdMes=isParaEmpleadoNegation;
			if(!this.isVisibilidadFK_IdMes) {this.jTabbedPaneBusquedasEvaluacionEmpleado.remove(jPanelFK_IdMesEvaluacionEmpleado);}

			this.isVisibilidadFK_IdSemestre=isParaEmpleadoNegation;
			if(!this.isVisibilidadFK_IdSemestre) {this.jTabbedPaneBusquedasEvaluacionEmpleado.remove(jPanelFK_IdSemestreEvaluacionEmpleado);}

			this.isVisibilidadFK_IdTipoEvaluacionEmpleado=isParaEmpleadoNegation;
			if(!this.isVisibilidadFK_IdTipoEvaluacionEmpleado) {this.jTabbedPaneBusquedasEvaluacionEmpleado.remove(jPanelFK_IdTipoEvaluacionEmpleadoEvaluacionEmpleado);}

			this.isVisibilidadFK_IdTrimestre=isParaEmpleadoNegation;
			if(!this.isVisibilidadFK_IdTrimestre) {this.jTabbedPaneBusquedasEvaluacionEmpleado.remove(jPanelFK_IdTrimestreEvaluacionEmpleado);}
		}
		
	}

	public void setVisibilidadBusquedasParaEmpleadoEvalua(Boolean isParaEmpleadoEvalua){
		//BYDAN_BUSQUEDAS
		
		if(!this.conCargarMinimo) {

			Boolean isParaEmpleadoEvaluaNegation=!isParaEmpleadoEvalua;

			this.isVisibilidadFK_IdAnio=isParaEmpleadoEvaluaNegation;
			if(!this.isVisibilidadFK_IdAnio) {this.jTabbedPaneBusquedasEvaluacionEmpleado.remove(jPanelFK_IdAnioEvaluacionEmpleado);}

			this.isVisibilidadFK_IdBimestre=isParaEmpleadoEvaluaNegation;
			if(!this.isVisibilidadFK_IdBimestre) {this.jTabbedPaneBusquedasEvaluacionEmpleado.remove(jPanelFK_IdBimestreEvaluacionEmpleado);}

			this.isVisibilidadFK_IdEmpleado=isParaEmpleadoEvaluaNegation;
			if(!this.isVisibilidadFK_IdEmpleado) {this.jTabbedPaneBusquedasEvaluacionEmpleado.remove(jPanelFK_IdEmpleadoEvaluacionEmpleado);}

			this.isVisibilidadFK_IdEmpleadoEvalua=isParaEmpleadoEvalua;
			if(!this.isVisibilidadFK_IdEmpleadoEvalua) {this.jTabbedPaneBusquedasEvaluacionEmpleado.remove(jPanelFK_IdEmpleadoEvaluaEvaluacionEmpleado);}

			this.isVisibilidadFK_IdEstructura=isParaEmpleadoEvaluaNegation;
			if(!this.isVisibilidadFK_IdEstructura) {this.jTabbedPaneBusquedasEvaluacionEmpleado.remove(jPanelFK_IdEstructuraEvaluacionEmpleado);}

			this.isVisibilidadFK_IdMes=isParaEmpleadoEvaluaNegation;
			if(!this.isVisibilidadFK_IdMes) {this.jTabbedPaneBusquedasEvaluacionEmpleado.remove(jPanelFK_IdMesEvaluacionEmpleado);}

			this.isVisibilidadFK_IdSemestre=isParaEmpleadoEvaluaNegation;
			if(!this.isVisibilidadFK_IdSemestre) {this.jTabbedPaneBusquedasEvaluacionEmpleado.remove(jPanelFK_IdSemestreEvaluacionEmpleado);}

			this.isVisibilidadFK_IdTipoEvaluacionEmpleado=isParaEmpleadoEvaluaNegation;
			if(!this.isVisibilidadFK_IdTipoEvaluacionEmpleado) {this.jTabbedPaneBusquedasEvaluacionEmpleado.remove(jPanelFK_IdTipoEvaluacionEmpleadoEvaluacionEmpleado);}

			this.isVisibilidadFK_IdTrimestre=isParaEmpleadoEvaluaNegation;
			if(!this.isVisibilidadFK_IdTrimestre) {this.jTabbedPaneBusquedasEvaluacionEmpleado.remove(jPanelFK_IdTrimestreEvaluacionEmpleado);}
		}
		
	}

	public void setVisibilidadBusquedasParaTipoEvaluacionEmpleado(Boolean isParaTipoEvaluacionEmpleado){
		//BYDAN_BUSQUEDAS
		
		if(!this.conCargarMinimo) {

			Boolean isParaTipoEvaluacionEmpleadoNegation=!isParaTipoEvaluacionEmpleado;

			this.isVisibilidadFK_IdAnio=isParaTipoEvaluacionEmpleadoNegation;
			if(!this.isVisibilidadFK_IdAnio) {this.jTabbedPaneBusquedasEvaluacionEmpleado.remove(jPanelFK_IdAnioEvaluacionEmpleado);}

			this.isVisibilidadFK_IdBimestre=isParaTipoEvaluacionEmpleadoNegation;
			if(!this.isVisibilidadFK_IdBimestre) {this.jTabbedPaneBusquedasEvaluacionEmpleado.remove(jPanelFK_IdBimestreEvaluacionEmpleado);}

			this.isVisibilidadFK_IdEmpleado=isParaTipoEvaluacionEmpleadoNegation;
			if(!this.isVisibilidadFK_IdEmpleado) {this.jTabbedPaneBusquedasEvaluacionEmpleado.remove(jPanelFK_IdEmpleadoEvaluacionEmpleado);}

			this.isVisibilidadFK_IdEmpleadoEvalua=isParaTipoEvaluacionEmpleadoNegation;
			if(!this.isVisibilidadFK_IdEmpleadoEvalua) {this.jTabbedPaneBusquedasEvaluacionEmpleado.remove(jPanelFK_IdEmpleadoEvaluaEvaluacionEmpleado);}

			this.isVisibilidadFK_IdEstructura=isParaTipoEvaluacionEmpleadoNegation;
			if(!this.isVisibilidadFK_IdEstructura) {this.jTabbedPaneBusquedasEvaluacionEmpleado.remove(jPanelFK_IdEstructuraEvaluacionEmpleado);}

			this.isVisibilidadFK_IdMes=isParaTipoEvaluacionEmpleadoNegation;
			if(!this.isVisibilidadFK_IdMes) {this.jTabbedPaneBusquedasEvaluacionEmpleado.remove(jPanelFK_IdMesEvaluacionEmpleado);}

			this.isVisibilidadFK_IdSemestre=isParaTipoEvaluacionEmpleadoNegation;
			if(!this.isVisibilidadFK_IdSemestre) {this.jTabbedPaneBusquedasEvaluacionEmpleado.remove(jPanelFK_IdSemestreEvaluacionEmpleado);}

			this.isVisibilidadFK_IdTipoEvaluacionEmpleado=isParaTipoEvaluacionEmpleado;
			if(!this.isVisibilidadFK_IdTipoEvaluacionEmpleado) {this.jTabbedPaneBusquedasEvaluacionEmpleado.remove(jPanelFK_IdTipoEvaluacionEmpleadoEvaluacionEmpleado);}

			this.isVisibilidadFK_IdTrimestre=isParaTipoEvaluacionEmpleadoNegation;
			if(!this.isVisibilidadFK_IdTrimestre) {this.jTabbedPaneBusquedasEvaluacionEmpleado.remove(jPanelFK_IdTrimestreEvaluacionEmpleado);}
		}
		
	}

	public void setVisibilidadBusquedasParaAnio(Boolean isParaAnio){
		//BYDAN_BUSQUEDAS
		
		if(!this.conCargarMinimo) {

			Boolean isParaAnioNegation=!isParaAnio;

			this.isVisibilidadFK_IdAnio=isParaAnio;
			if(!this.isVisibilidadFK_IdAnio) {this.jTabbedPaneBusquedasEvaluacionEmpleado.remove(jPanelFK_IdAnioEvaluacionEmpleado);}

			this.isVisibilidadFK_IdBimestre=isParaAnioNegation;
			if(!this.isVisibilidadFK_IdBimestre) {this.jTabbedPaneBusquedasEvaluacionEmpleado.remove(jPanelFK_IdBimestreEvaluacionEmpleado);}

			this.isVisibilidadFK_IdEmpleado=isParaAnioNegation;
			if(!this.isVisibilidadFK_IdEmpleado) {this.jTabbedPaneBusquedasEvaluacionEmpleado.remove(jPanelFK_IdEmpleadoEvaluacionEmpleado);}

			this.isVisibilidadFK_IdEmpleadoEvalua=isParaAnioNegation;
			if(!this.isVisibilidadFK_IdEmpleadoEvalua) {this.jTabbedPaneBusquedasEvaluacionEmpleado.remove(jPanelFK_IdEmpleadoEvaluaEvaluacionEmpleado);}

			this.isVisibilidadFK_IdEstructura=isParaAnioNegation;
			if(!this.isVisibilidadFK_IdEstructura) {this.jTabbedPaneBusquedasEvaluacionEmpleado.remove(jPanelFK_IdEstructuraEvaluacionEmpleado);}

			this.isVisibilidadFK_IdMes=isParaAnioNegation;
			if(!this.isVisibilidadFK_IdMes) {this.jTabbedPaneBusquedasEvaluacionEmpleado.remove(jPanelFK_IdMesEvaluacionEmpleado);}

			this.isVisibilidadFK_IdSemestre=isParaAnioNegation;
			if(!this.isVisibilidadFK_IdSemestre) {this.jTabbedPaneBusquedasEvaluacionEmpleado.remove(jPanelFK_IdSemestreEvaluacionEmpleado);}

			this.isVisibilidadFK_IdTipoEvaluacionEmpleado=isParaAnioNegation;
			if(!this.isVisibilidadFK_IdTipoEvaluacionEmpleado) {this.jTabbedPaneBusquedasEvaluacionEmpleado.remove(jPanelFK_IdTipoEvaluacionEmpleadoEvaluacionEmpleado);}

			this.isVisibilidadFK_IdTrimestre=isParaAnioNegation;
			if(!this.isVisibilidadFK_IdTrimestre) {this.jTabbedPaneBusquedasEvaluacionEmpleado.remove(jPanelFK_IdTrimestreEvaluacionEmpleado);}
		}
		
	}

	public void setVisibilidadBusquedasParaSemestre(Boolean isParaSemestre){
		//BYDAN_BUSQUEDAS
		
		if(!this.conCargarMinimo) {

			Boolean isParaSemestreNegation=!isParaSemestre;

			this.isVisibilidadFK_IdAnio=isParaSemestreNegation;
			if(!this.isVisibilidadFK_IdAnio) {this.jTabbedPaneBusquedasEvaluacionEmpleado.remove(jPanelFK_IdAnioEvaluacionEmpleado);}

			this.isVisibilidadFK_IdBimestre=isParaSemestreNegation;
			if(!this.isVisibilidadFK_IdBimestre) {this.jTabbedPaneBusquedasEvaluacionEmpleado.remove(jPanelFK_IdBimestreEvaluacionEmpleado);}

			this.isVisibilidadFK_IdEmpleado=isParaSemestreNegation;
			if(!this.isVisibilidadFK_IdEmpleado) {this.jTabbedPaneBusquedasEvaluacionEmpleado.remove(jPanelFK_IdEmpleadoEvaluacionEmpleado);}

			this.isVisibilidadFK_IdEmpleadoEvalua=isParaSemestreNegation;
			if(!this.isVisibilidadFK_IdEmpleadoEvalua) {this.jTabbedPaneBusquedasEvaluacionEmpleado.remove(jPanelFK_IdEmpleadoEvaluaEvaluacionEmpleado);}

			this.isVisibilidadFK_IdEstructura=isParaSemestreNegation;
			if(!this.isVisibilidadFK_IdEstructura) {this.jTabbedPaneBusquedasEvaluacionEmpleado.remove(jPanelFK_IdEstructuraEvaluacionEmpleado);}

			this.isVisibilidadFK_IdMes=isParaSemestreNegation;
			if(!this.isVisibilidadFK_IdMes) {this.jTabbedPaneBusquedasEvaluacionEmpleado.remove(jPanelFK_IdMesEvaluacionEmpleado);}

			this.isVisibilidadFK_IdSemestre=isParaSemestre;
			if(!this.isVisibilidadFK_IdSemestre) {this.jTabbedPaneBusquedasEvaluacionEmpleado.remove(jPanelFK_IdSemestreEvaluacionEmpleado);}

			this.isVisibilidadFK_IdTipoEvaluacionEmpleado=isParaSemestreNegation;
			if(!this.isVisibilidadFK_IdTipoEvaluacionEmpleado) {this.jTabbedPaneBusquedasEvaluacionEmpleado.remove(jPanelFK_IdTipoEvaluacionEmpleadoEvaluacionEmpleado);}

			this.isVisibilidadFK_IdTrimestre=isParaSemestreNegation;
			if(!this.isVisibilidadFK_IdTrimestre) {this.jTabbedPaneBusquedasEvaluacionEmpleado.remove(jPanelFK_IdTrimestreEvaluacionEmpleado);}
		}
		
	}

	public void setVisibilidadBusquedasParaTrimestre(Boolean isParaTrimestre){
		//BYDAN_BUSQUEDAS
		
		if(!this.conCargarMinimo) {

			Boolean isParaTrimestreNegation=!isParaTrimestre;

			this.isVisibilidadFK_IdAnio=isParaTrimestreNegation;
			if(!this.isVisibilidadFK_IdAnio) {this.jTabbedPaneBusquedasEvaluacionEmpleado.remove(jPanelFK_IdAnioEvaluacionEmpleado);}

			this.isVisibilidadFK_IdBimestre=isParaTrimestreNegation;
			if(!this.isVisibilidadFK_IdBimestre) {this.jTabbedPaneBusquedasEvaluacionEmpleado.remove(jPanelFK_IdBimestreEvaluacionEmpleado);}

			this.isVisibilidadFK_IdEmpleado=isParaTrimestreNegation;
			if(!this.isVisibilidadFK_IdEmpleado) {this.jTabbedPaneBusquedasEvaluacionEmpleado.remove(jPanelFK_IdEmpleadoEvaluacionEmpleado);}

			this.isVisibilidadFK_IdEmpleadoEvalua=isParaTrimestreNegation;
			if(!this.isVisibilidadFK_IdEmpleadoEvalua) {this.jTabbedPaneBusquedasEvaluacionEmpleado.remove(jPanelFK_IdEmpleadoEvaluaEvaluacionEmpleado);}

			this.isVisibilidadFK_IdEstructura=isParaTrimestreNegation;
			if(!this.isVisibilidadFK_IdEstructura) {this.jTabbedPaneBusquedasEvaluacionEmpleado.remove(jPanelFK_IdEstructuraEvaluacionEmpleado);}

			this.isVisibilidadFK_IdMes=isParaTrimestreNegation;
			if(!this.isVisibilidadFK_IdMes) {this.jTabbedPaneBusquedasEvaluacionEmpleado.remove(jPanelFK_IdMesEvaluacionEmpleado);}

			this.isVisibilidadFK_IdSemestre=isParaTrimestreNegation;
			if(!this.isVisibilidadFK_IdSemestre) {this.jTabbedPaneBusquedasEvaluacionEmpleado.remove(jPanelFK_IdSemestreEvaluacionEmpleado);}

			this.isVisibilidadFK_IdTipoEvaluacionEmpleado=isParaTrimestreNegation;
			if(!this.isVisibilidadFK_IdTipoEvaluacionEmpleado) {this.jTabbedPaneBusquedasEvaluacionEmpleado.remove(jPanelFK_IdTipoEvaluacionEmpleadoEvaluacionEmpleado);}

			this.isVisibilidadFK_IdTrimestre=isParaTrimestre;
			if(!this.isVisibilidadFK_IdTrimestre) {this.jTabbedPaneBusquedasEvaluacionEmpleado.remove(jPanelFK_IdTrimestreEvaluacionEmpleado);}
		}
		
	}

	public void setVisibilidadBusquedasParaBimestre(Boolean isParaBimestre){
		//BYDAN_BUSQUEDAS
		
		if(!this.conCargarMinimo) {

			Boolean isParaBimestreNegation=!isParaBimestre;

			this.isVisibilidadFK_IdAnio=isParaBimestreNegation;
			if(!this.isVisibilidadFK_IdAnio) {this.jTabbedPaneBusquedasEvaluacionEmpleado.remove(jPanelFK_IdAnioEvaluacionEmpleado);}

			this.isVisibilidadFK_IdBimestre=isParaBimestre;
			if(!this.isVisibilidadFK_IdBimestre) {this.jTabbedPaneBusquedasEvaluacionEmpleado.remove(jPanelFK_IdBimestreEvaluacionEmpleado);}

			this.isVisibilidadFK_IdEmpleado=isParaBimestreNegation;
			if(!this.isVisibilidadFK_IdEmpleado) {this.jTabbedPaneBusquedasEvaluacionEmpleado.remove(jPanelFK_IdEmpleadoEvaluacionEmpleado);}

			this.isVisibilidadFK_IdEmpleadoEvalua=isParaBimestreNegation;
			if(!this.isVisibilidadFK_IdEmpleadoEvalua) {this.jTabbedPaneBusquedasEvaluacionEmpleado.remove(jPanelFK_IdEmpleadoEvaluaEvaluacionEmpleado);}

			this.isVisibilidadFK_IdEstructura=isParaBimestreNegation;
			if(!this.isVisibilidadFK_IdEstructura) {this.jTabbedPaneBusquedasEvaluacionEmpleado.remove(jPanelFK_IdEstructuraEvaluacionEmpleado);}

			this.isVisibilidadFK_IdMes=isParaBimestreNegation;
			if(!this.isVisibilidadFK_IdMes) {this.jTabbedPaneBusquedasEvaluacionEmpleado.remove(jPanelFK_IdMesEvaluacionEmpleado);}

			this.isVisibilidadFK_IdSemestre=isParaBimestreNegation;
			if(!this.isVisibilidadFK_IdSemestre) {this.jTabbedPaneBusquedasEvaluacionEmpleado.remove(jPanelFK_IdSemestreEvaluacionEmpleado);}

			this.isVisibilidadFK_IdTipoEvaluacionEmpleado=isParaBimestreNegation;
			if(!this.isVisibilidadFK_IdTipoEvaluacionEmpleado) {this.jTabbedPaneBusquedasEvaluacionEmpleado.remove(jPanelFK_IdTipoEvaluacionEmpleadoEvaluacionEmpleado);}

			this.isVisibilidadFK_IdTrimestre=isParaBimestreNegation;
			if(!this.isVisibilidadFK_IdTrimestre) {this.jTabbedPaneBusquedasEvaluacionEmpleado.remove(jPanelFK_IdTrimestreEvaluacionEmpleado);}
		}
		
	}

	public void setVisibilidadBusquedasParaMes(Boolean isParaMes){
		//BYDAN_BUSQUEDAS
		
		if(!this.conCargarMinimo) {

			Boolean isParaMesNegation=!isParaMes;

			this.isVisibilidadFK_IdAnio=isParaMesNegation;
			if(!this.isVisibilidadFK_IdAnio) {this.jTabbedPaneBusquedasEvaluacionEmpleado.remove(jPanelFK_IdAnioEvaluacionEmpleado);}

			this.isVisibilidadFK_IdBimestre=isParaMesNegation;
			if(!this.isVisibilidadFK_IdBimestre) {this.jTabbedPaneBusquedasEvaluacionEmpleado.remove(jPanelFK_IdBimestreEvaluacionEmpleado);}

			this.isVisibilidadFK_IdEmpleado=isParaMesNegation;
			if(!this.isVisibilidadFK_IdEmpleado) {this.jTabbedPaneBusquedasEvaluacionEmpleado.remove(jPanelFK_IdEmpleadoEvaluacionEmpleado);}

			this.isVisibilidadFK_IdEmpleadoEvalua=isParaMesNegation;
			if(!this.isVisibilidadFK_IdEmpleadoEvalua) {this.jTabbedPaneBusquedasEvaluacionEmpleado.remove(jPanelFK_IdEmpleadoEvaluaEvaluacionEmpleado);}

			this.isVisibilidadFK_IdEstructura=isParaMesNegation;
			if(!this.isVisibilidadFK_IdEstructura) {this.jTabbedPaneBusquedasEvaluacionEmpleado.remove(jPanelFK_IdEstructuraEvaluacionEmpleado);}

			this.isVisibilidadFK_IdMes=isParaMes;
			if(!this.isVisibilidadFK_IdMes) {this.jTabbedPaneBusquedasEvaluacionEmpleado.remove(jPanelFK_IdMesEvaluacionEmpleado);}

			this.isVisibilidadFK_IdSemestre=isParaMesNegation;
			if(!this.isVisibilidadFK_IdSemestre) {this.jTabbedPaneBusquedasEvaluacionEmpleado.remove(jPanelFK_IdSemestreEvaluacionEmpleado);}

			this.isVisibilidadFK_IdTipoEvaluacionEmpleado=isParaMesNegation;
			if(!this.isVisibilidadFK_IdTipoEvaluacionEmpleado) {this.jTabbedPaneBusquedasEvaluacionEmpleado.remove(jPanelFK_IdTipoEvaluacionEmpleadoEvaluacionEmpleado);}

			this.isVisibilidadFK_IdTrimestre=isParaMesNegation;
			if(!this.isVisibilidadFK_IdTrimestre) {this.jTabbedPaneBusquedasEvaluacionEmpleado.remove(jPanelFK_IdTrimestreEvaluacionEmpleado);}
		}
		
	}
	
	

	public String registrarSesionEvaluacionEmpleadoParaCalificacionEmpleados() throws Exception {
		Boolean isPaginaPopupCalificacionEmpleado=false;

		try {

			if(this.evaluacionempleadoSessionBean==null) {
				this.evaluacionempleadoSessionBean=new EvaluacionEmpleadoSessionBean();
			}

			if(this.jInternalFrameDetalleFormEvaluacionEmpleado.calificacionempleadoSessionBean==null) {
				this.jInternalFrameDetalleFormEvaluacionEmpleado.calificacionempleadoSessionBean=new CalificacionEmpleadoSessionBean();
			}

			this.jInternalFrameDetalleFormEvaluacionEmpleado.calificacionempleadoSessionBean.setsPathNavegacionActual(evaluacionempleadoSessionBean.getsPathNavegacionActual()+Constantes.SHTMLFLECHA+CalificacionEmpleadoConstantesFunciones.SCLASSWEBTITULO);
			this.jInternalFrameDetalleFormEvaluacionEmpleado.calificacionempleadoSessionBean.setisPermiteRecargarInformacion(false);
			isPaginaPopupCalificacionEmpleado=this.jInternalFrameDetalleFormEvaluacionEmpleado.calificacionempleadoSessionBean.getisPaginaPopup();
			this.jInternalFrameDetalleFormEvaluacionEmpleado.calificacionempleadoSessionBean.setisPermiteNavegacionHaciaForeignKeyDesdeCalificacionEmpleado(true);
			this.jInternalFrameDetalleFormEvaluacionEmpleado.calificacionempleadoSessionBean.setsNombrePaginaNavegacionHaciaForeignKeyDesdeCalificacionEmpleado(EvaluacionEmpleadoConstantesFunciones.SNOMBREOPCION);
			this.jInternalFrameDetalleFormEvaluacionEmpleado.calificacionempleadoSessionBean.setisBusquedaDesdeForeignKeySesionEvaluacionEmpleado(true);
			this.jInternalFrameDetalleFormEvaluacionEmpleado.calificacionempleadoSessionBean.setlidEvaluacionEmpleadoActual(this.idEvaluacionEmpleadoActual);

			evaluacionempleadoSessionBean.setisBusquedaDesdeForeignKeySesionForeignKeyEvaluacionEmpleado(true);
			evaluacionempleadoSessionBean.setlIdEvaluacionEmpleadoActualForeignKey(this.idEvaluacionEmpleadoActual);

			String strPagina=Constantes.SNONE;
			SistemaLogicAdditional sistemaLogicAdditional=new SistemaLogicAdditional();

			guardarDatosBusquedaSession();

		} catch(Exception e) {
			FuncionesSwing.manageException(this, e,logger);
		}

		return "";
	}
	
	
	
	
	public void guardarDatosBusquedaSession() throws Exception {
		
		//EvaluacionEmpleadoSessionBean evaluacionempleadoSessionBean=new EvaluacionEmpleadoSessionBean();
		
		if(this.evaluacionempleadoSessionBean==null) {
			this.evaluacionempleadoSessionBean=new EvaluacionEmpleadoSessionBean();
		}
		
		this.evaluacionempleadoSessionBean.setsUltimaBusquedaEvaluacionEmpleado(this.getsAccionBusqueda());
		this.evaluacionempleadoSessionBean.setiNumeroPaginacion(this.getiNumeroPaginacion());
		this.evaluacionempleadoSessionBean.setiNumeroPaginacionPagina(this.getiNumeroPaginacionPagina());
		
		if(this.getsAccionBusqueda().equals("Todos")) {
			;
		}
		

		else if(this.getsAccionBusqueda().equals("FK_IdAnio")) {
			evaluacionempleadoSessionBean.setid_anio(this.getid_anioFK_IdAnio());	
		}
		else if(this.getsAccionBusqueda().equals("FK_IdBimestre")) {
			evaluacionempleadoSessionBean.setid_bimestre(this.getid_bimestreFK_IdBimestre());	
		}
		else if(this.getsAccionBusqueda().equals("FK_IdEjercicio")) {
			evaluacionempleadoSessionBean.setid_ejercicio(this.getid_ejercicioFK_IdEjercicio());	
		}
		else if(this.getsAccionBusqueda().equals("FK_IdEmpleado")) {
			evaluacionempleadoSessionBean.setid_empleado(this.getid_empleadoFK_IdEmpleado());	
		}
		else if(this.getsAccionBusqueda().equals("FK_IdEmpleadoEvalua")) {
			evaluacionempleadoSessionBean.setid_empleado_evalua(this.getid_empleado_evaluaFK_IdEmpleadoEvalua());	
		}
		else if(this.getsAccionBusqueda().equals("FK_IdEmpresa")) {
			evaluacionempleadoSessionBean.setid_empresa(this.getid_empresaFK_IdEmpresa());	
		}
		else if(this.getsAccionBusqueda().equals("FK_IdEstructura")) {
			evaluacionempleadoSessionBean.setid_estructura(this.getid_estructuraFK_IdEstructura());	
		}
		else if(this.getsAccionBusqueda().equals("FK_IdMes")) {
			evaluacionempleadoSessionBean.setid_mes(this.getid_mesFK_IdMes());	
		}
		else if(this.getsAccionBusqueda().equals("FK_IdPeriodo")) {
			evaluacionempleadoSessionBean.setid_periodo(this.getid_periodoFK_IdPeriodo());	
		}
		else if(this.getsAccionBusqueda().equals("FK_IdSemestre")) {
			evaluacionempleadoSessionBean.setid_semestre(this.getid_semestreFK_IdSemestre());	
		}
		else if(this.getsAccionBusqueda().equals("FK_IdSucursal")) {
			evaluacionempleadoSessionBean.setid_sucursal(this.getid_sucursalFK_IdSucursal());	
		}
		else if(this.getsAccionBusqueda().equals("FK_IdTipoEvaluacionEmpleado")) {
			evaluacionempleadoSessionBean.setid_tipo_evaluacion_empleado(this.getid_tipo_evaluacion_empleadoFK_IdTipoEvaluacionEmpleado());	
		}
		else if(this.getsAccionBusqueda().equals("FK_IdTrimestre")) {
			evaluacionempleadoSessionBean.setid_trimestre(this.getid_trimestreFK_IdTrimestre());	
		}
		
	}
	
	public void traerDatosBusquedaDesdeSession() throws Exception {
		//EvaluacionEmpleadoSessionBean evaluacionempleadoSessionBean=new EvaluacionEmpleadoSessionBean();
		
		if(this.evaluacionempleadoSessionBean==null) {
			this.evaluacionempleadoSessionBean=new EvaluacionEmpleadoSessionBean();
		}
		
		if(this.evaluacionempleadoSessionBean.getsUltimaBusquedaEvaluacionEmpleado()!=null&&!this.evaluacionempleadoSessionBean.getsUltimaBusquedaEvaluacionEmpleado().equals("")) {
			this.setsAccionBusqueda(evaluacionempleadoSessionBean.getsUltimaBusquedaEvaluacionEmpleado());
			this.setiNumeroPaginacion(evaluacionempleadoSessionBean.getiNumeroPaginacion());
			this.setiNumeroPaginacionPagina(evaluacionempleadoSessionBean.getiNumeroPaginacionPagina());		
				
			if(this.getsAccionBusqueda().equals("Todos")) {
				;
			}
			

			 else if(this.getsAccionBusqueda().equals("FK_IdAnio")) {
				this.setid_anioFK_IdAnio(evaluacionempleadoSessionBean.getid_anio());
				evaluacionempleadoSessionBean.setid_anio(null);
			}
			 else if(this.getsAccionBusqueda().equals("FK_IdBimestre")) {
				this.setid_bimestreFK_IdBimestre(evaluacionempleadoSessionBean.getid_bimestre());
				evaluacionempleadoSessionBean.setid_bimestre(-1L);
			}
			 else if(this.getsAccionBusqueda().equals("FK_IdEjercicio")) {
				this.setid_ejercicioFK_IdEjercicio(evaluacionempleadoSessionBean.getid_ejercicio());
				evaluacionempleadoSessionBean.setid_ejercicio(-1L);
			}
			 else if(this.getsAccionBusqueda().equals("FK_IdEmpleado")) {
				this.setid_empleadoFK_IdEmpleado(evaluacionempleadoSessionBean.getid_empleado());
				evaluacionempleadoSessionBean.setid_empleado(-1L);
			}
			 else if(this.getsAccionBusqueda().equals("FK_IdEmpleadoEvalua")) {
				this.setid_empleado_evaluaFK_IdEmpleadoEvalua(evaluacionempleadoSessionBean.getid_empleado_evalua());
				evaluacionempleadoSessionBean.setid_empleado_evalua(-1L);
			}
			 else if(this.getsAccionBusqueda().equals("FK_IdEmpresa")) {
				this.setid_empresaFK_IdEmpresa(evaluacionempleadoSessionBean.getid_empresa());
				evaluacionempleadoSessionBean.setid_empresa(-1L);
			}
			 else if(this.getsAccionBusqueda().equals("FK_IdEstructura")) {
				this.setid_estructuraFK_IdEstructura(evaluacionempleadoSessionBean.getid_estructura());
				evaluacionempleadoSessionBean.setid_estructura(-1L);
			}
			 else if(this.getsAccionBusqueda().equals("FK_IdMes")) {
				this.setid_mesFK_IdMes(evaluacionempleadoSessionBean.getid_mes());
				evaluacionempleadoSessionBean.setid_mes(null);
			}
			 else if(this.getsAccionBusqueda().equals("FK_IdPeriodo")) {
				this.setid_periodoFK_IdPeriodo(evaluacionempleadoSessionBean.getid_periodo());
				evaluacionempleadoSessionBean.setid_periodo(-1L);
			}
			 else if(this.getsAccionBusqueda().equals("FK_IdSemestre")) {
				this.setid_semestreFK_IdSemestre(evaluacionempleadoSessionBean.getid_semestre());
				evaluacionempleadoSessionBean.setid_semestre(-1L);
			}
			 else if(this.getsAccionBusqueda().equals("FK_IdSucursal")) {
				this.setid_sucursalFK_IdSucursal(evaluacionempleadoSessionBean.getid_sucursal());
				evaluacionempleadoSessionBean.setid_sucursal(-1L);
			}
			 else if(this.getsAccionBusqueda().equals("FK_IdTipoEvaluacionEmpleado")) {
				this.setid_tipo_evaluacion_empleadoFK_IdTipoEvaluacionEmpleado(evaluacionempleadoSessionBean.getid_tipo_evaluacion_empleado());
				evaluacionempleadoSessionBean.setid_tipo_evaluacion_empleado(-1L);
			}
			 else if(this.getsAccionBusqueda().equals("FK_IdTrimestre")) {
				this.setid_trimestreFK_IdTrimestre(evaluacionempleadoSessionBean.getid_trimestre());
				evaluacionempleadoSessionBean.setid_trimestre(-1L);
			}
		}
		
		this.evaluacionempleadoSessionBean.setsUltimaBusquedaEvaluacionEmpleado("");
		this.evaluacionempleadoSessionBean.setiNumeroPaginacion(EvaluacionEmpleadoConstantesFunciones.INUMEROPAGINACION);
		this.evaluacionempleadoSessionBean.setiNumeroPaginacionPagina(0);
		
	}
	
	public void procesoActualizarFilaTotales(Boolean esCampoValor,String sTipo) {
		try {
			this.actualizarFilaTotales();
				
			this.traerValoresTablaTotales();
			
			this.inicializarActualizarBindingTablaEvaluacionEmpleado(false);
			
			
			
			
		} catch (Exception e) {
			e.printStackTrace();
		}
	}
	
	
	public void updateBusquedasFormularioEvaluacionEmpleado() {
		this.updateBorderResaltarBusquedasFormularioEvaluacionEmpleado();
		this.updateVisibilidadBusquedasFormularioEvaluacionEmpleado();
		this.updateHabilitarBusquedasFormularioEvaluacionEmpleado();
	}
	
	public void updateBorderResaltarBusquedasFormularioEvaluacionEmpleado() {					
	//BYDAN_BUSQUEDAS
		
	int index=0;
		
	if(this.jTabbedPaneBusquedasEvaluacionEmpleado.getComponents().length>0) {
	

		if(this.evaluacionempleadoConstantesFunciones.resaltarFK_IdAnioEvaluacionEmpleado!=null) {
			index= this.jTabbedPaneBusquedasEvaluacionEmpleado.indexOfComponent(this.jPanelFK_IdAnioEvaluacionEmpleado);
			if(index>-1) {
				JPanel jPanel=(JPanel)this.jTabbedPaneBusquedasEvaluacionEmpleado.getComponent(index);
				jPanel.setBorder(this.evaluacionempleadoConstantesFunciones.resaltarFK_IdAnioEvaluacionEmpleado);
			}
		}

		if(this.evaluacionempleadoConstantesFunciones.resaltarFK_IdBimestreEvaluacionEmpleado!=null) {
			index= this.jTabbedPaneBusquedasEvaluacionEmpleado.indexOfComponent(this.jPanelFK_IdBimestreEvaluacionEmpleado);
			if(index>-1) {
				JPanel jPanel=(JPanel)this.jTabbedPaneBusquedasEvaluacionEmpleado.getComponent(index);
				jPanel.setBorder(this.evaluacionempleadoConstantesFunciones.resaltarFK_IdBimestreEvaluacionEmpleado);
			}
		}

		if(this.evaluacionempleadoConstantesFunciones.resaltarFK_IdEmpleadoEvaluacionEmpleado!=null) {
			index= this.jTabbedPaneBusquedasEvaluacionEmpleado.indexOfComponent(this.jPanelFK_IdEmpleadoEvaluacionEmpleado);
			if(index>-1) {
				JPanel jPanel=(JPanel)this.jTabbedPaneBusquedasEvaluacionEmpleado.getComponent(index);
				jPanel.setBorder(this.evaluacionempleadoConstantesFunciones.resaltarFK_IdEmpleadoEvaluacionEmpleado);
			}
		}

		if(this.evaluacionempleadoConstantesFunciones.resaltarFK_IdEmpleadoEvaluaEvaluacionEmpleado!=null) {
			index= this.jTabbedPaneBusquedasEvaluacionEmpleado.indexOfComponent(this.jPanelFK_IdEmpleadoEvaluaEvaluacionEmpleado);
			if(index>-1) {
				JPanel jPanel=(JPanel)this.jTabbedPaneBusquedasEvaluacionEmpleado.getComponent(index);
				jPanel.setBorder(this.evaluacionempleadoConstantesFunciones.resaltarFK_IdEmpleadoEvaluaEvaluacionEmpleado);
			}
		}

		if(this.evaluacionempleadoConstantesFunciones.resaltarFK_IdEstructuraEvaluacionEmpleado!=null) {
			index= this.jTabbedPaneBusquedasEvaluacionEmpleado.indexOfComponent(this.jPanelFK_IdEstructuraEvaluacionEmpleado);
			if(index>-1) {
				JPanel jPanel=(JPanel)this.jTabbedPaneBusquedasEvaluacionEmpleado.getComponent(index);
				jPanel.setBorder(this.evaluacionempleadoConstantesFunciones.resaltarFK_IdEstructuraEvaluacionEmpleado);
			}
		}

		if(this.evaluacionempleadoConstantesFunciones.resaltarFK_IdMesEvaluacionEmpleado!=null) {
			index= this.jTabbedPaneBusquedasEvaluacionEmpleado.indexOfComponent(this.jPanelFK_IdMesEvaluacionEmpleado);
			if(index>-1) {
				JPanel jPanel=(JPanel)this.jTabbedPaneBusquedasEvaluacionEmpleado.getComponent(index);
				jPanel.setBorder(this.evaluacionempleadoConstantesFunciones.resaltarFK_IdMesEvaluacionEmpleado);
			}
		}

		if(this.evaluacionempleadoConstantesFunciones.resaltarFK_IdSemestreEvaluacionEmpleado!=null) {
			index= this.jTabbedPaneBusquedasEvaluacionEmpleado.indexOfComponent(this.jPanelFK_IdSemestreEvaluacionEmpleado);
			if(index>-1) {
				JPanel jPanel=(JPanel)this.jTabbedPaneBusquedasEvaluacionEmpleado.getComponent(index);
				jPanel.setBorder(this.evaluacionempleadoConstantesFunciones.resaltarFK_IdSemestreEvaluacionEmpleado);
			}
		}

		if(this.evaluacionempleadoConstantesFunciones.resaltarFK_IdTipoEvaluacionEmpleadoEvaluacionEmpleado!=null) {
			index= this.jTabbedPaneBusquedasEvaluacionEmpleado.indexOfComponent(this.jPanelFK_IdTipoEvaluacionEmpleadoEvaluacionEmpleado);
			if(index>-1) {
				JPanel jPanel=(JPanel)this.jTabbedPaneBusquedasEvaluacionEmpleado.getComponent(index);
				jPanel.setBorder(this.evaluacionempleadoConstantesFunciones.resaltarFK_IdTipoEvaluacionEmpleadoEvaluacionEmpleado);
			}
		}

		if(this.evaluacionempleadoConstantesFunciones.resaltarFK_IdTrimestreEvaluacionEmpleado!=null) {
			index= this.jTabbedPaneBusquedasEvaluacionEmpleado.indexOfComponent(this.jPanelFK_IdTrimestreEvaluacionEmpleado);
			if(index>-1) {
				JPanel jPanel=(JPanel)this.jTabbedPaneBusquedasEvaluacionEmpleado.getComponent(index);
				jPanel.setBorder(this.evaluacionempleadoConstantesFunciones.resaltarFK_IdTrimestreEvaluacionEmpleado);
			}
		}
	}	
	
	}
	
	public void updateVisibilidadBusquedasFormularioEvaluacionEmpleado() {
	//BYDAN_BUSQUEDAS
	
	int index=0;
	JPanel jPanel=null;
		
	if(this.jTabbedPaneBusquedasEvaluacionEmpleado.getComponents().length>0) {
	

			index= this.jTabbedPaneBusquedasEvaluacionEmpleado.indexOfComponent(this.jPanelFK_IdAnioEvaluacionEmpleado);
			jPanel=(JPanel)this.jTabbedPaneBusquedasEvaluacionEmpleado.getComponent(index);
			//NO VALE SOLO PONIENDO VISIBLE=FALSE, HAY QUE USAR REMOVE
			jPanel.setVisible(this.evaluacionempleadoConstantesFunciones.mostrarFK_IdAnioEvaluacionEmpleado);
			if(!this.evaluacionempleadoConstantesFunciones.mostrarFK_IdAnioEvaluacionEmpleado && index>-1) {
				this.jTabbedPaneBusquedasEvaluacionEmpleado.remove(index);
			}

			index= this.jTabbedPaneBusquedasEvaluacionEmpleado.indexOfComponent(this.jPanelFK_IdBimestreEvaluacionEmpleado);
			jPanel=(JPanel)this.jTabbedPaneBusquedasEvaluacionEmpleado.getComponent(index);
			//NO VALE SOLO PONIENDO VISIBLE=FALSE, HAY QUE USAR REMOVE
			jPanel.setVisible(this.evaluacionempleadoConstantesFunciones.mostrarFK_IdBimestreEvaluacionEmpleado);
			if(!this.evaluacionempleadoConstantesFunciones.mostrarFK_IdBimestreEvaluacionEmpleado && index>-1) {
				this.jTabbedPaneBusquedasEvaluacionEmpleado.remove(index);
			}

			index= this.jTabbedPaneBusquedasEvaluacionEmpleado.indexOfComponent(this.jPanelFK_IdEmpleadoEvaluacionEmpleado);
			jPanel=(JPanel)this.jTabbedPaneBusquedasEvaluacionEmpleado.getComponent(index);
			//NO VALE SOLO PONIENDO VISIBLE=FALSE, HAY QUE USAR REMOVE
			jPanel.setVisible(this.evaluacionempleadoConstantesFunciones.mostrarFK_IdEmpleadoEvaluacionEmpleado);
			if(!this.evaluacionempleadoConstantesFunciones.mostrarFK_IdEmpleadoEvaluacionEmpleado && index>-1) {
				this.jTabbedPaneBusquedasEvaluacionEmpleado.remove(index);
			}

			index= this.jTabbedPaneBusquedasEvaluacionEmpleado.indexOfComponent(this.jPanelFK_IdEmpleadoEvaluaEvaluacionEmpleado);
			jPanel=(JPanel)this.jTabbedPaneBusquedasEvaluacionEmpleado.getComponent(index);
			//NO VALE SOLO PONIENDO VISIBLE=FALSE, HAY QUE USAR REMOVE
			jPanel.setVisible(this.evaluacionempleadoConstantesFunciones.mostrarFK_IdEmpleadoEvaluaEvaluacionEmpleado);
			if(!this.evaluacionempleadoConstantesFunciones.mostrarFK_IdEmpleadoEvaluaEvaluacionEmpleado && index>-1) {
				this.jTabbedPaneBusquedasEvaluacionEmpleado.remove(index);
			}

			index= this.jTabbedPaneBusquedasEvaluacionEmpleado.indexOfComponent(this.jPanelFK_IdEstructuraEvaluacionEmpleado);
			jPanel=(JPanel)this.jTabbedPaneBusquedasEvaluacionEmpleado.getComponent(index);
			//NO VALE SOLO PONIENDO VISIBLE=FALSE, HAY QUE USAR REMOVE
			jPanel.setVisible(this.evaluacionempleadoConstantesFunciones.mostrarFK_IdEstructuraEvaluacionEmpleado);
			if(!this.evaluacionempleadoConstantesFunciones.mostrarFK_IdEstructuraEvaluacionEmpleado && index>-1) {
				this.jTabbedPaneBusquedasEvaluacionEmpleado.remove(index);
			}

			index= this.jTabbedPaneBusquedasEvaluacionEmpleado.indexOfComponent(this.jPanelFK_IdMesEvaluacionEmpleado);
			jPanel=(JPanel)this.jTabbedPaneBusquedasEvaluacionEmpleado.getComponent(index);
			//NO VALE SOLO PONIENDO VISIBLE=FALSE, HAY QUE USAR REMOVE
			jPanel.setVisible(this.evaluacionempleadoConstantesFunciones.mostrarFK_IdMesEvaluacionEmpleado);
			if(!this.evaluacionempleadoConstantesFunciones.mostrarFK_IdMesEvaluacionEmpleado && index>-1) {
				this.jTabbedPaneBusquedasEvaluacionEmpleado.remove(index);
			}

			index= this.jTabbedPaneBusquedasEvaluacionEmpleado.indexOfComponent(this.jPanelFK_IdSemestreEvaluacionEmpleado);
			jPanel=(JPanel)this.jTabbedPaneBusquedasEvaluacionEmpleado.getComponent(index);
			//NO VALE SOLO PONIENDO VISIBLE=FALSE, HAY QUE USAR REMOVE
			jPanel.setVisible(this.evaluacionempleadoConstantesFunciones.mostrarFK_IdSemestreEvaluacionEmpleado);
			if(!this.evaluacionempleadoConstantesFunciones.mostrarFK_IdSemestreEvaluacionEmpleado && index>-1) {
				this.jTabbedPaneBusquedasEvaluacionEmpleado.remove(index);
			}

			index= this.jTabbedPaneBusquedasEvaluacionEmpleado.indexOfComponent(this.jPanelFK_IdTipoEvaluacionEmpleadoEvaluacionEmpleado);
			jPanel=(JPanel)this.jTabbedPaneBusquedasEvaluacionEmpleado.getComponent(index);
			//NO VALE SOLO PONIENDO VISIBLE=FALSE, HAY QUE USAR REMOVE
			jPanel.setVisible(this.evaluacionempleadoConstantesFunciones.mostrarFK_IdTipoEvaluacionEmpleadoEvaluacionEmpleado);
			if(!this.evaluacionempleadoConstantesFunciones.mostrarFK_IdTipoEvaluacionEmpleadoEvaluacionEmpleado && index>-1) {
				this.jTabbedPaneBusquedasEvaluacionEmpleado.remove(index);
			}

			index= this.jTabbedPaneBusquedasEvaluacionEmpleado.indexOfComponent(this.jPanelFK_IdTrimestreEvaluacionEmpleado);
			jPanel=(JPanel)this.jTabbedPaneBusquedasEvaluacionEmpleado.getComponent(index);
			//NO VALE SOLO PONIENDO VISIBLE=FALSE, HAY QUE USAR REMOVE
			jPanel.setVisible(this.evaluacionempleadoConstantesFunciones.mostrarFK_IdTrimestreEvaluacionEmpleado);
			if(!this.evaluacionempleadoConstantesFunciones.mostrarFK_IdTrimestreEvaluacionEmpleado && index>-1) {
				this.jTabbedPaneBusquedasEvaluacionEmpleado.remove(index);
			}
	}	
	
	}
	
	public void updateHabilitarBusquedasFormularioEvaluacionEmpleado() {
	
	//BYDAN_BUSQUEDAS		
		int index=0;
		JPanel jPanel=null;
			
		if(this.jTabbedPaneBusquedasEvaluacionEmpleado.getComponents().length>0) {
	

			index= this.jTabbedPaneBusquedasEvaluacionEmpleado.indexOfComponent(this.jPanelFK_IdAnioEvaluacionEmpleado);
			if(index>-1) {
				jPanel=(JPanel)this.jTabbedPaneBusquedasEvaluacionEmpleado.getComponent(index);
				//ENABLE PANE=FALSE NO FUNCIONA, ENABLEAT SI
				jPanel.setEnabled(this.evaluacionempleadoConstantesFunciones.activarFK_IdAnioEvaluacionEmpleado);
				this.jTabbedPaneBusquedasEvaluacionEmpleado.setEnabledAt(index,this.evaluacionempleadoConstantesFunciones.activarFK_IdAnioEvaluacionEmpleado);
			}

			index= this.jTabbedPaneBusquedasEvaluacionEmpleado.indexOfComponent(this.jPanelFK_IdBimestreEvaluacionEmpleado);
			if(index>-1) {
				jPanel=(JPanel)this.jTabbedPaneBusquedasEvaluacionEmpleado.getComponent(index);
				//ENABLE PANE=FALSE NO FUNCIONA, ENABLEAT SI
				jPanel.setEnabled(this.evaluacionempleadoConstantesFunciones.activarFK_IdBimestreEvaluacionEmpleado);
				this.jTabbedPaneBusquedasEvaluacionEmpleado.setEnabledAt(index,this.evaluacionempleadoConstantesFunciones.activarFK_IdBimestreEvaluacionEmpleado);
			}

			index= this.jTabbedPaneBusquedasEvaluacionEmpleado.indexOfComponent(this.jPanelFK_IdEmpleadoEvaluacionEmpleado);
			if(index>-1) {
				jPanel=(JPanel)this.jTabbedPaneBusquedasEvaluacionEmpleado.getComponent(index);
				//ENABLE PANE=FALSE NO FUNCIONA, ENABLEAT SI
				jPanel.setEnabled(this.evaluacionempleadoConstantesFunciones.activarFK_IdEmpleadoEvaluacionEmpleado);
				this.jTabbedPaneBusquedasEvaluacionEmpleado.setEnabledAt(index,this.evaluacionempleadoConstantesFunciones.activarFK_IdEmpleadoEvaluacionEmpleado);
			}

			index= this.jTabbedPaneBusquedasEvaluacionEmpleado.indexOfComponent(this.jPanelFK_IdEmpleadoEvaluaEvaluacionEmpleado);
			if(index>-1) {
				jPanel=(JPanel)this.jTabbedPaneBusquedasEvaluacionEmpleado.getComponent(index);
				//ENABLE PANE=FALSE NO FUNCIONA, ENABLEAT SI
				jPanel.setEnabled(this.evaluacionempleadoConstantesFunciones.activarFK_IdEmpleadoEvaluaEvaluacionEmpleado);
				this.jTabbedPaneBusquedasEvaluacionEmpleado.setEnabledAt(index,this.evaluacionempleadoConstantesFunciones.activarFK_IdEmpleadoEvaluaEvaluacionEmpleado);
			}

			index= this.jTabbedPaneBusquedasEvaluacionEmpleado.indexOfComponent(this.jPanelFK_IdEstructuraEvaluacionEmpleado);
			if(index>-1) {
				jPanel=(JPanel)this.jTabbedPaneBusquedasEvaluacionEmpleado.getComponent(index);
				//ENABLE PANE=FALSE NO FUNCIONA, ENABLEAT SI
				jPanel.setEnabled(this.evaluacionempleadoConstantesFunciones.activarFK_IdEstructuraEvaluacionEmpleado);
				this.jTabbedPaneBusquedasEvaluacionEmpleado.setEnabledAt(index,this.evaluacionempleadoConstantesFunciones.activarFK_IdEstructuraEvaluacionEmpleado);
			}

			index= this.jTabbedPaneBusquedasEvaluacionEmpleado.indexOfComponent(this.jPanelFK_IdMesEvaluacionEmpleado);
			if(index>-1) {
				jPanel=(JPanel)this.jTabbedPaneBusquedasEvaluacionEmpleado.getComponent(index);
				//ENABLE PANE=FALSE NO FUNCIONA, ENABLEAT SI
				jPanel.setEnabled(this.evaluacionempleadoConstantesFunciones.activarFK_IdMesEvaluacionEmpleado);
				this.jTabbedPaneBusquedasEvaluacionEmpleado.setEnabledAt(index,this.evaluacionempleadoConstantesFunciones.activarFK_IdMesEvaluacionEmpleado);
			}

			index= this.jTabbedPaneBusquedasEvaluacionEmpleado.indexOfComponent(this.jPanelFK_IdSemestreEvaluacionEmpleado);
			if(index>-1) {
				jPanel=(JPanel)this.jTabbedPaneBusquedasEvaluacionEmpleado.getComponent(index);
				//ENABLE PANE=FALSE NO FUNCIONA, ENABLEAT SI
				jPanel.setEnabled(this.evaluacionempleadoConstantesFunciones.activarFK_IdSemestreEvaluacionEmpleado);
				this.jTabbedPaneBusquedasEvaluacionEmpleado.setEnabledAt(index,this.evaluacionempleadoConstantesFunciones.activarFK_IdSemestreEvaluacionEmpleado);
			}

			index= this.jTabbedPaneBusquedasEvaluacionEmpleado.indexOfComponent(this.jPanelFK_IdTipoEvaluacionEmpleadoEvaluacionEmpleado);
			if(index>-1) {
				jPanel=(JPanel)this.jTabbedPaneBusquedasEvaluacionEmpleado.getComponent(index);
				//ENABLE PANE=FALSE NO FUNCIONA, ENABLEAT SI
				jPanel.setEnabled(this.evaluacionempleadoConstantesFunciones.activarFK_IdTipoEvaluacionEmpleadoEvaluacionEmpleado);
				this.jTabbedPaneBusquedasEvaluacionEmpleado.setEnabledAt(index,this.evaluacionempleadoConstantesFunciones.activarFK_IdTipoEvaluacionEmpleadoEvaluacionEmpleado);
			}

			index= this.jTabbedPaneBusquedasEvaluacionEmpleado.indexOfComponent(this.jPanelFK_IdTrimestreEvaluacionEmpleado);
			if(index>-1) {
				jPanel=(JPanel)this.jTabbedPaneBusquedasEvaluacionEmpleado.getComponent(index);
				//ENABLE PANE=FALSE NO FUNCIONA, ENABLEAT SI
				jPanel.setEnabled(this.evaluacionempleadoConstantesFunciones.activarFK_IdTrimestreEvaluacionEmpleado);
				this.jTabbedPaneBusquedasEvaluacionEmpleado.setEnabledAt(index,this.evaluacionempleadoConstantesFunciones.activarFK_IdTrimestreEvaluacionEmpleado);
			}
		}	
	
	}
	
	
	public void resaltarPanelBusquedaEvaluacionEmpleado(String sTipoBusqueda) {
		Boolean existe=false;
		//BYDAN_BUSQUEDAS
		
		int index=0;
		Border resaltar = Funciones2.getBorderResaltar(this.parametroGeneralUsuario,"TAB");

		if(sTipoBusqueda.equals("FK_IdAnio")) {
			index= this.jTabbedPaneBusquedasEvaluacionEmpleado.indexOfComponent(this.jPanelFK_IdAnioEvaluacionEmpleado);

			this.jTabbedPaneBusquedasEvaluacionEmpleado.setSelectedIndex(index);

			JPanel jPanel=(JPanel)this.jTabbedPaneBusquedasEvaluacionEmpleado.getComponent(index);

			this.evaluacionempleadoConstantesFunciones.setResaltarFK_IdAnioEvaluacionEmpleado(resaltar);

			jPanel.setBorder(this.evaluacionempleadoConstantesFunciones.resaltarFK_IdAnioEvaluacionEmpleado);
			existe=true;
		}
		else if(sTipoBusqueda.equals("FK_IdBimestre")) {
			index= this.jTabbedPaneBusquedasEvaluacionEmpleado.indexOfComponent(this.jPanelFK_IdBimestreEvaluacionEmpleado);

			this.jTabbedPaneBusquedasEvaluacionEmpleado.setSelectedIndex(index);

			JPanel jPanel=(JPanel)this.jTabbedPaneBusquedasEvaluacionEmpleado.getComponent(index);

			this.evaluacionempleadoConstantesFunciones.setResaltarFK_IdBimestreEvaluacionEmpleado(resaltar);

			jPanel.setBorder(this.evaluacionempleadoConstantesFunciones.resaltarFK_IdBimestreEvaluacionEmpleado);
			existe=true;
		}
		else if(sTipoBusqueda.equals("FK_IdEmpleado")) {
			index= this.jTabbedPaneBusquedasEvaluacionEmpleado.indexOfComponent(this.jPanelFK_IdEmpleadoEvaluacionEmpleado);

			this.jTabbedPaneBusquedasEvaluacionEmpleado.setSelectedIndex(index);

			JPanel jPanel=(JPanel)this.jTabbedPaneBusquedasEvaluacionEmpleado.getComponent(index);

			this.evaluacionempleadoConstantesFunciones.setResaltarFK_IdEmpleadoEvaluacionEmpleado(resaltar);

			jPanel.setBorder(this.evaluacionempleadoConstantesFunciones.resaltarFK_IdEmpleadoEvaluacionEmpleado);
			existe=true;
		}
		else if(sTipoBusqueda.equals("FK_IdEmpleadoEvalua")) {
			index= this.jTabbedPaneBusquedasEvaluacionEmpleado.indexOfComponent(this.jPanelFK_IdEmpleadoEvaluaEvaluacionEmpleado);

			this.jTabbedPaneBusquedasEvaluacionEmpleado.setSelectedIndex(index);

			JPanel jPanel=(JPanel)this.jTabbedPaneBusquedasEvaluacionEmpleado.getComponent(index);

			this.evaluacionempleadoConstantesFunciones.setResaltarFK_IdEmpleadoEvaluaEvaluacionEmpleado(resaltar);

			jPanel.setBorder(this.evaluacionempleadoConstantesFunciones.resaltarFK_IdEmpleadoEvaluaEvaluacionEmpleado);
			existe=true;
		}
		else if(sTipoBusqueda.equals("FK_IdEstructura")) {
			index= this.jTabbedPaneBusquedasEvaluacionEmpleado.indexOfComponent(this.jPanelFK_IdEstructuraEvaluacionEmpleado);

			this.jTabbedPaneBusquedasEvaluacionEmpleado.setSelectedIndex(index);

			JPanel jPanel=(JPanel)this.jTabbedPaneBusquedasEvaluacionEmpleado.getComponent(index);

			this.evaluacionempleadoConstantesFunciones.setResaltarFK_IdEstructuraEvaluacionEmpleado(resaltar);

			jPanel.setBorder(this.evaluacionempleadoConstantesFunciones.resaltarFK_IdEstructuraEvaluacionEmpleado);
			existe=true;
		}
		else if(sTipoBusqueda.equals("FK_IdMes")) {
			index= this.jTabbedPaneBusquedasEvaluacionEmpleado.indexOfComponent(this.jPanelFK_IdMesEvaluacionEmpleado);

			this.jTabbedPaneBusquedasEvaluacionEmpleado.setSelectedIndex(index);

			JPanel jPanel=(JPanel)this.jTabbedPaneBusquedasEvaluacionEmpleado.getComponent(index);

			this.evaluacionempleadoConstantesFunciones.setResaltarFK_IdMesEvaluacionEmpleado(resaltar);

			jPanel.setBorder(this.evaluacionempleadoConstantesFunciones.resaltarFK_IdMesEvaluacionEmpleado);
			existe=true;
		}
		else if(sTipoBusqueda.equals("FK_IdSemestre")) {
			index= this.jTabbedPaneBusquedasEvaluacionEmpleado.indexOfComponent(this.jPanelFK_IdSemestreEvaluacionEmpleado);

			this.jTabbedPaneBusquedasEvaluacionEmpleado.setSelectedIndex(index);

			JPanel jPanel=(JPanel)this.jTabbedPaneBusquedasEvaluacionEmpleado.getComponent(index);

			this.evaluacionempleadoConstantesFunciones.setResaltarFK_IdSemestreEvaluacionEmpleado(resaltar);

			jPanel.setBorder(this.evaluacionempleadoConstantesFunciones.resaltarFK_IdSemestreEvaluacionEmpleado);
			existe=true;
		}
		else if(sTipoBusqueda.equals("FK_IdTipoEvaluacionEmpleado")) {
			index= this.jTabbedPaneBusquedasEvaluacionEmpleado.indexOfComponent(this.jPanelFK_IdTipoEvaluacionEmpleadoEvaluacionEmpleado);

			this.jTabbedPaneBusquedasEvaluacionEmpleado.setSelectedIndex(index);

			JPanel jPanel=(JPanel)this.jTabbedPaneBusquedasEvaluacionEmpleado.getComponent(index);

			this.evaluacionempleadoConstantesFunciones.setResaltarFK_IdTipoEvaluacionEmpleadoEvaluacionEmpleado(resaltar);

			jPanel.setBorder(this.evaluacionempleadoConstantesFunciones.resaltarFK_IdTipoEvaluacionEmpleadoEvaluacionEmpleado);
			existe=true;
		}
		else if(sTipoBusqueda.equals("FK_IdTrimestre")) {
			index= this.jTabbedPaneBusquedasEvaluacionEmpleado.indexOfComponent(this.jPanelFK_IdTrimestreEvaluacionEmpleado);

			this.jTabbedPaneBusquedasEvaluacionEmpleado.setSelectedIndex(index);

			JPanel jPanel=(JPanel)this.jTabbedPaneBusquedasEvaluacionEmpleado.getComponent(index);

			this.evaluacionempleadoConstantesFunciones.setResaltarFK_IdTrimestreEvaluacionEmpleado(resaltar);

			jPanel.setBorder(this.evaluacionempleadoConstantesFunciones.resaltarFK_IdTrimestreEvaluacionEmpleado);
			existe=true;
		}
		

		if(existe) {
			
			this.jTtoolBarEvaluacionEmpleado.setBorder(resaltar);
			
		}
	}	
	
	//NO FUNCIONA
	public void windowClosed(WindowEvent e) {	
	}
		
	public void windowClosing(WindowEvent e) {	    	    
	}

	public void windowOpened(WindowEvent e) {	    
	}

	public void windowIconified(WindowEvent e) {	    
	}

	public void windowDeiconified(WindowEvent e) {	    
	}

	public void windowActivated(WindowEvent e) {	    
	}

	public void windowDeactivated(WindowEvent e) {	    
	}

	public void windowGainedFocus(WindowEvent e) {	    
	}

	public void windowLostFocus(WindowEvent e) {	    
	}
	
	public void updateControlesFormularioEvaluacionEmpleado() throws Exception {

		if(this.jInternalFrameDetalleFormEvaluacionEmpleado==null) { //if(!this.conCargarFormDetalle) {			
			this.inicializarFormDetalle();
		}
		
		this.updateBorderResaltarControlesFormularioEvaluacionEmpleado();
		this.updateVisibilidadResaltarControlesFormularioEvaluacionEmpleado();
		this.updateHabilitarResaltarControlesFormularioEvaluacionEmpleado();
		
	}
	
	public void updateBorderResaltarControlesFormularioEvaluacionEmpleado() throws Exception {
		if(this.jInternalFrameDetalleFormEvaluacionEmpleado==null) { //if(!this.conCargarFormDetalle) {
			this.inicializarFormDetalle();
		}
		
	
		if(this.evaluacionempleadoConstantesFunciones.resaltaridEvaluacionEmpleado!=null && this.jInternalFrameDetalleFormEvaluacionEmpleado!=null) {this.jInternalFrameDetalleFormEvaluacionEmpleado.jLabelidEvaluacionEmpleado.setBorder(this.evaluacionempleadoConstantesFunciones.resaltaridEvaluacionEmpleado);}
		if(this.evaluacionempleadoConstantesFunciones.resaltarid_empresaEvaluacionEmpleado!=null && this.jInternalFrameDetalleFormEvaluacionEmpleado!=null) {this.jInternalFrameDetalleFormEvaluacionEmpleado.jComboBoxid_empresaEvaluacionEmpleado.setBorder(this.evaluacionempleadoConstantesFunciones.resaltarid_empresaEvaluacionEmpleado);}
		if(this.evaluacionempleadoConstantesFunciones.resaltarid_sucursalEvaluacionEmpleado!=null && this.jInternalFrameDetalleFormEvaluacionEmpleado!=null) {this.jInternalFrameDetalleFormEvaluacionEmpleado.jComboBoxid_sucursalEvaluacionEmpleado.setBorder(this.evaluacionempleadoConstantesFunciones.resaltarid_sucursalEvaluacionEmpleado);}
		if(this.evaluacionempleadoConstantesFunciones.resaltarid_ejercicioEvaluacionEmpleado!=null && this.jInternalFrameDetalleFormEvaluacionEmpleado!=null) {this.jInternalFrameDetalleFormEvaluacionEmpleado.jComboBoxid_ejercicioEvaluacionEmpleado.setBorder(this.evaluacionempleadoConstantesFunciones.resaltarid_ejercicioEvaluacionEmpleado);}
		if(this.evaluacionempleadoConstantesFunciones.resaltarid_periodoEvaluacionEmpleado!=null && this.jInternalFrameDetalleFormEvaluacionEmpleado!=null) {this.jInternalFrameDetalleFormEvaluacionEmpleado.jComboBoxid_periodoEvaluacionEmpleado.setBorder(this.evaluacionempleadoConstantesFunciones.resaltarid_periodoEvaluacionEmpleado);}
		if(this.evaluacionempleadoConstantesFunciones.resaltarid_estructuraEvaluacionEmpleado!=null && this.jInternalFrameDetalleFormEvaluacionEmpleado!=null) {this.jInternalFrameDetalleFormEvaluacionEmpleado.jComboBoxid_estructuraEvaluacionEmpleado.setBorder(this.evaluacionempleadoConstantesFunciones.resaltarid_estructuraEvaluacionEmpleado);}
		if(this.evaluacionempleadoConstantesFunciones.resaltarid_empleadoEvaluacionEmpleado!=null && this.jInternalFrameDetalleFormEvaluacionEmpleado!=null) {this.jInternalFrameDetalleFormEvaluacionEmpleado.jComboBoxid_empleadoEvaluacionEmpleado.setBorder(this.evaluacionempleadoConstantesFunciones.resaltarid_empleadoEvaluacionEmpleado);}
		if(this.evaluacionempleadoConstantesFunciones.resaltarid_empleado_evaluaEvaluacionEmpleado!=null && this.jInternalFrameDetalleFormEvaluacionEmpleado!=null) {this.jInternalFrameDetalleFormEvaluacionEmpleado.jComboBoxid_empleado_evaluaEvaluacionEmpleado.setBorder(this.evaluacionempleadoConstantesFunciones.resaltarid_empleado_evaluaEvaluacionEmpleado);}
		if(this.evaluacionempleadoConstantesFunciones.resaltarid_tipo_evaluacion_empleadoEvaluacionEmpleado!=null && this.jInternalFrameDetalleFormEvaluacionEmpleado!=null) {this.jInternalFrameDetalleFormEvaluacionEmpleado.jComboBoxid_tipo_evaluacion_empleadoEvaluacionEmpleado.setBorder(this.evaluacionempleadoConstantesFunciones.resaltarid_tipo_evaluacion_empleadoEvaluacionEmpleado);}
		if(this.evaluacionempleadoConstantesFunciones.resaltarfechaEvaluacionEmpleado!=null && this.jInternalFrameDetalleFormEvaluacionEmpleado!=null) {this.jInternalFrameDetalleFormEvaluacionEmpleado.jDateChooserfechaEvaluacionEmpleado.setBorder(this.evaluacionempleadoConstantesFunciones.resaltarfechaEvaluacionEmpleado);}
		if(this.evaluacionempleadoConstantesFunciones.resaltaresta_evaluadoEvaluacionEmpleado!=null && this.jInternalFrameDetalleFormEvaluacionEmpleado!=null) {this.jInternalFrameDetalleFormEvaluacionEmpleado.jCheckBoxesta_evaluadoEvaluacionEmpleado.setBorderPainted(true);this.jInternalFrameDetalleFormEvaluacionEmpleado.jCheckBoxesta_evaluadoEvaluacionEmpleado.setBorder(this.evaluacionempleadoConstantesFunciones.resaltaresta_evaluadoEvaluacionEmpleado);}
		if(this.evaluacionempleadoConstantesFunciones.resaltarid_anioEvaluacionEmpleado!=null && this.jInternalFrameDetalleFormEvaluacionEmpleado!=null) {this.jInternalFrameDetalleFormEvaluacionEmpleado.jComboBoxid_anioEvaluacionEmpleado.setBorder(this.evaluacionempleadoConstantesFunciones.resaltarid_anioEvaluacionEmpleado);}
		if(this.evaluacionempleadoConstantesFunciones.resaltarid_semestreEvaluacionEmpleado!=null && this.jInternalFrameDetalleFormEvaluacionEmpleado!=null) {this.jInternalFrameDetalleFormEvaluacionEmpleado.jComboBoxid_semestreEvaluacionEmpleado.setBorder(this.evaluacionempleadoConstantesFunciones.resaltarid_semestreEvaluacionEmpleado);}
		if(this.evaluacionempleadoConstantesFunciones.resaltarid_trimestreEvaluacionEmpleado!=null && this.jInternalFrameDetalleFormEvaluacionEmpleado!=null) {this.jInternalFrameDetalleFormEvaluacionEmpleado.jComboBoxid_trimestreEvaluacionEmpleado.setBorder(this.evaluacionempleadoConstantesFunciones.resaltarid_trimestreEvaluacionEmpleado);}
		if(this.evaluacionempleadoConstantesFunciones.resaltarid_bimestreEvaluacionEmpleado!=null && this.jInternalFrameDetalleFormEvaluacionEmpleado!=null) {this.jInternalFrameDetalleFormEvaluacionEmpleado.jComboBoxid_bimestreEvaluacionEmpleado.setBorder(this.evaluacionempleadoConstantesFunciones.resaltarid_bimestreEvaluacionEmpleado);}
		if(this.evaluacionempleadoConstantesFunciones.resaltarid_mesEvaluacionEmpleado!=null && this.jInternalFrameDetalleFormEvaluacionEmpleado!=null) {this.jInternalFrameDetalleFormEvaluacionEmpleado.jComboBoxid_mesEvaluacionEmpleado.setBorder(this.evaluacionempleadoConstantesFunciones.resaltarid_mesEvaluacionEmpleado);}
		if(this.evaluacionempleadoConstantesFunciones.resaltarobservacion1EvaluacionEmpleado!=null && this.jInternalFrameDetalleFormEvaluacionEmpleado!=null) {this.jInternalFrameDetalleFormEvaluacionEmpleado.jTextAreaobservacion1EvaluacionEmpleado.setBorder(this.evaluacionempleadoConstantesFunciones.resaltarobservacion1EvaluacionEmpleado);}
		if(this.evaluacionempleadoConstantesFunciones.resaltarobservacion2EvaluacionEmpleado!=null && this.jInternalFrameDetalleFormEvaluacionEmpleado!=null) {this.jInternalFrameDetalleFormEvaluacionEmpleado.jTextAreaobservacion2EvaluacionEmpleado.setBorder(this.evaluacionempleadoConstantesFunciones.resaltarobservacion2EvaluacionEmpleado);}
		if(this.evaluacionempleadoConstantesFunciones.resaltarobservacion3EvaluacionEmpleado!=null && this.jInternalFrameDetalleFormEvaluacionEmpleado!=null) {this.jInternalFrameDetalleFormEvaluacionEmpleado.jTextAreaobservacion3EvaluacionEmpleado.setBorder(this.evaluacionempleadoConstantesFunciones.resaltarobservacion3EvaluacionEmpleado);}
		if(this.evaluacionempleadoConstantesFunciones.resaltarobservacion4EvaluacionEmpleado!=null && this.jInternalFrameDetalleFormEvaluacionEmpleado!=null) {this.jInternalFrameDetalleFormEvaluacionEmpleado.jTextAreaobservacion4EvaluacionEmpleado.setBorder(this.evaluacionempleadoConstantesFunciones.resaltarobservacion4EvaluacionEmpleado);}
	}
	
	public void updateVisibilidadResaltarControlesFormularioEvaluacionEmpleado() throws Exception {		
		if(this.jInternalFrameDetalleFormEvaluacionEmpleado==null) { //if(!this.conCargarFormDetalle) {
			this.inicializarFormDetalle();
		}
		
		if(this.jInternalFrameDetalleFormEvaluacionEmpleado!=null) {
	
		//this.jInternalFrameDetalleFormEvaluacionEmpleado.jLabelidEvaluacionEmpleado.setVisible(this.evaluacionempleadoConstantesFunciones.mostraridEvaluacionEmpleado);
		this.jInternalFrameDetalleFormEvaluacionEmpleado.jPanelidEvaluacionEmpleado.setVisible(this.evaluacionempleadoConstantesFunciones.mostraridEvaluacionEmpleado);
		//this.jInternalFrameDetalleFormEvaluacionEmpleado.jComboBoxid_empresaEvaluacionEmpleado.setVisible(this.evaluacionempleadoConstantesFunciones.mostrarid_empresaEvaluacionEmpleado);
		this.jInternalFrameDetalleFormEvaluacionEmpleado.jPanelid_empresaEvaluacionEmpleado.setVisible(this.evaluacionempleadoConstantesFunciones.mostrarid_empresaEvaluacionEmpleado);
		//this.jInternalFrameDetalleFormEvaluacionEmpleado.jComboBoxid_sucursalEvaluacionEmpleado.setVisible(this.evaluacionempleadoConstantesFunciones.mostrarid_sucursalEvaluacionEmpleado);
		this.jInternalFrameDetalleFormEvaluacionEmpleado.jPanelid_sucursalEvaluacionEmpleado.setVisible(this.evaluacionempleadoConstantesFunciones.mostrarid_sucursalEvaluacionEmpleado);
		//this.jInternalFrameDetalleFormEvaluacionEmpleado.jComboBoxid_ejercicioEvaluacionEmpleado.setVisible(this.evaluacionempleadoConstantesFunciones.mostrarid_ejercicioEvaluacionEmpleado);
		this.jInternalFrameDetalleFormEvaluacionEmpleado.jPanelid_ejercicioEvaluacionEmpleado.setVisible(this.evaluacionempleadoConstantesFunciones.mostrarid_ejercicioEvaluacionEmpleado);
		//this.jInternalFrameDetalleFormEvaluacionEmpleado.jComboBoxid_periodoEvaluacionEmpleado.setVisible(this.evaluacionempleadoConstantesFunciones.mostrarid_periodoEvaluacionEmpleado);
		this.jInternalFrameDetalleFormEvaluacionEmpleado.jPanelid_periodoEvaluacionEmpleado.setVisible(this.evaluacionempleadoConstantesFunciones.mostrarid_periodoEvaluacionEmpleado);
		//this.jInternalFrameDetalleFormEvaluacionEmpleado.jComboBoxid_estructuraEvaluacionEmpleado.setVisible(this.evaluacionempleadoConstantesFunciones.mostrarid_estructuraEvaluacionEmpleado);
		this.jInternalFrameDetalleFormEvaluacionEmpleado.jPanelid_estructuraEvaluacionEmpleado.setVisible(this.evaluacionempleadoConstantesFunciones.mostrarid_estructuraEvaluacionEmpleado);
		//this.jInternalFrameDetalleFormEvaluacionEmpleado.jComboBoxid_empleadoEvaluacionEmpleado.setVisible(this.evaluacionempleadoConstantesFunciones.mostrarid_empleadoEvaluacionEmpleado);
		this.jInternalFrameDetalleFormEvaluacionEmpleado.jPanelid_empleadoEvaluacionEmpleado.setVisible(this.evaluacionempleadoConstantesFunciones.mostrarid_empleadoEvaluacionEmpleado);
		//this.jInternalFrameDetalleFormEvaluacionEmpleado.jComboBoxid_empleado_evaluaEvaluacionEmpleado.setVisible(this.evaluacionempleadoConstantesFunciones.mostrarid_empleado_evaluaEvaluacionEmpleado);
		this.jInternalFrameDetalleFormEvaluacionEmpleado.jPanelid_empleado_evaluaEvaluacionEmpleado.setVisible(this.evaluacionempleadoConstantesFunciones.mostrarid_empleado_evaluaEvaluacionEmpleado);
		//this.jInternalFrameDetalleFormEvaluacionEmpleado.jComboBoxid_tipo_evaluacion_empleadoEvaluacionEmpleado.setVisible(this.evaluacionempleadoConstantesFunciones.mostrarid_tipo_evaluacion_empleadoEvaluacionEmpleado);
		this.jInternalFrameDetalleFormEvaluacionEmpleado.jPanelid_tipo_evaluacion_empleadoEvaluacionEmpleado.setVisible(this.evaluacionempleadoConstantesFunciones.mostrarid_tipo_evaluacion_empleadoEvaluacionEmpleado);
		//this.jInternalFrameDetalleFormEvaluacionEmpleado.jDateChooserfechaEvaluacionEmpleado.setVisible(this.evaluacionempleadoConstantesFunciones.mostrarfechaEvaluacionEmpleado);
		this.jInternalFrameDetalleFormEvaluacionEmpleado.jPanelfechaEvaluacionEmpleado.setVisible(this.evaluacionempleadoConstantesFunciones.mostrarfechaEvaluacionEmpleado);
		//this.jInternalFrameDetalleFormEvaluacionEmpleado.jCheckBoxesta_evaluadoEvaluacionEmpleado.setVisible(this.evaluacionempleadoConstantesFunciones.mostraresta_evaluadoEvaluacionEmpleado);
		this.jInternalFrameDetalleFormEvaluacionEmpleado.jPanelesta_evaluadoEvaluacionEmpleado.setVisible(this.evaluacionempleadoConstantesFunciones.mostraresta_evaluadoEvaluacionEmpleado);
		//this.jInternalFrameDetalleFormEvaluacionEmpleado.jComboBoxid_anioEvaluacionEmpleado.setVisible(this.evaluacionempleadoConstantesFunciones.mostrarid_anioEvaluacionEmpleado);
		this.jInternalFrameDetalleFormEvaluacionEmpleado.jPanelid_anioEvaluacionEmpleado.setVisible(this.evaluacionempleadoConstantesFunciones.mostrarid_anioEvaluacionEmpleado);
		//this.jInternalFrameDetalleFormEvaluacionEmpleado.jComboBoxid_semestreEvaluacionEmpleado.setVisible(this.evaluacionempleadoConstantesFunciones.mostrarid_semestreEvaluacionEmpleado);
		this.jInternalFrameDetalleFormEvaluacionEmpleado.jPanelid_semestreEvaluacionEmpleado.setVisible(this.evaluacionempleadoConstantesFunciones.mostrarid_semestreEvaluacionEmpleado);
		//this.jInternalFrameDetalleFormEvaluacionEmpleado.jComboBoxid_trimestreEvaluacionEmpleado.setVisible(this.evaluacionempleadoConstantesFunciones.mostrarid_trimestreEvaluacionEmpleado);
		this.jInternalFrameDetalleFormEvaluacionEmpleado.jPanelid_trimestreEvaluacionEmpleado.setVisible(this.evaluacionempleadoConstantesFunciones.mostrarid_trimestreEvaluacionEmpleado);
		//this.jInternalFrameDetalleFormEvaluacionEmpleado.jComboBoxid_bimestreEvaluacionEmpleado.setVisible(this.evaluacionempleadoConstantesFunciones.mostrarid_bimestreEvaluacionEmpleado);
		this.jInternalFrameDetalleFormEvaluacionEmpleado.jPanelid_bimestreEvaluacionEmpleado.setVisible(this.evaluacionempleadoConstantesFunciones.mostrarid_bimestreEvaluacionEmpleado);
		//this.jInternalFrameDetalleFormEvaluacionEmpleado.jComboBoxid_mesEvaluacionEmpleado.setVisible(this.evaluacionempleadoConstantesFunciones.mostrarid_mesEvaluacionEmpleado);
		this.jInternalFrameDetalleFormEvaluacionEmpleado.jPanelid_mesEvaluacionEmpleado.setVisible(this.evaluacionempleadoConstantesFunciones.mostrarid_mesEvaluacionEmpleado);
		//this.jInternalFrameDetalleFormEvaluacionEmpleado.jTextAreaobservacion1EvaluacionEmpleado.setVisible(this.evaluacionempleadoConstantesFunciones.mostrarobservacion1EvaluacionEmpleado);
		this.jInternalFrameDetalleFormEvaluacionEmpleado.jPanelobservacion1EvaluacionEmpleado.setVisible(this.evaluacionempleadoConstantesFunciones.mostrarobservacion1EvaluacionEmpleado);
		//this.jInternalFrameDetalleFormEvaluacionEmpleado.jTextAreaobservacion2EvaluacionEmpleado.setVisible(this.evaluacionempleadoConstantesFunciones.mostrarobservacion2EvaluacionEmpleado);
		this.jInternalFrameDetalleFormEvaluacionEmpleado.jPanelobservacion2EvaluacionEmpleado.setVisible(this.evaluacionempleadoConstantesFunciones.mostrarobservacion2EvaluacionEmpleado);
		//this.jInternalFrameDetalleFormEvaluacionEmpleado.jTextAreaobservacion3EvaluacionEmpleado.setVisible(this.evaluacionempleadoConstantesFunciones.mostrarobservacion3EvaluacionEmpleado);
		this.jInternalFrameDetalleFormEvaluacionEmpleado.jPanelobservacion3EvaluacionEmpleado.setVisible(this.evaluacionempleadoConstantesFunciones.mostrarobservacion3EvaluacionEmpleado);
		//this.jInternalFrameDetalleFormEvaluacionEmpleado.jTextAreaobservacion4EvaluacionEmpleado.setVisible(this.evaluacionempleadoConstantesFunciones.mostrarobservacion4EvaluacionEmpleado);
		this.jInternalFrameDetalleFormEvaluacionEmpleado.jPanelobservacion4EvaluacionEmpleado.setVisible(this.evaluacionempleadoConstantesFunciones.mostrarobservacion4EvaluacionEmpleado);
		}
	}
	
	public void updateHabilitarResaltarControlesFormularioEvaluacionEmpleado() throws Exception {
		if(this.jInternalFrameDetalleFormEvaluacionEmpleado==null) { //if(!this.conCargarFormDetalle) {
			this.inicializarFormDetalle();
		}
		
		if(this.jInternalFrameDetalleFormEvaluacionEmpleado!=null) {
	
		this.jInternalFrameDetalleFormEvaluacionEmpleado.jLabelidEvaluacionEmpleado.setEnabled(this.evaluacionempleadoConstantesFunciones.activaridEvaluacionEmpleado);
		this.jInternalFrameDetalleFormEvaluacionEmpleado.jComboBoxid_empresaEvaluacionEmpleado.setEnabled(this.evaluacionempleadoConstantesFunciones.activarid_empresaEvaluacionEmpleado);
		this.jInternalFrameDetalleFormEvaluacionEmpleado.jComboBoxid_sucursalEvaluacionEmpleado.setEnabled(this.evaluacionempleadoConstantesFunciones.activarid_sucursalEvaluacionEmpleado);
		this.jInternalFrameDetalleFormEvaluacionEmpleado.jComboBoxid_ejercicioEvaluacionEmpleado.setEnabled(this.evaluacionempleadoConstantesFunciones.activarid_ejercicioEvaluacionEmpleado);
		this.jInternalFrameDetalleFormEvaluacionEmpleado.jComboBoxid_periodoEvaluacionEmpleado.setEnabled(this.evaluacionempleadoConstantesFunciones.activarid_periodoEvaluacionEmpleado);
		this.jInternalFrameDetalleFormEvaluacionEmpleado.jComboBoxid_estructuraEvaluacionEmpleado.setEnabled(this.evaluacionempleadoConstantesFunciones.activarid_estructuraEvaluacionEmpleado);
		this.jInternalFrameDetalleFormEvaluacionEmpleado.jComboBoxid_empleadoEvaluacionEmpleado.setEnabled(this.evaluacionempleadoConstantesFunciones.activarid_empleadoEvaluacionEmpleado);
		this.jInternalFrameDetalleFormEvaluacionEmpleado.jComboBoxid_empleado_evaluaEvaluacionEmpleado.setEnabled(this.evaluacionempleadoConstantesFunciones.activarid_empleado_evaluaEvaluacionEmpleado);
		this.jInternalFrameDetalleFormEvaluacionEmpleado.jComboBoxid_tipo_evaluacion_empleadoEvaluacionEmpleado.setEnabled(this.evaluacionempleadoConstantesFunciones.activarid_tipo_evaluacion_empleadoEvaluacionEmpleado);
		this.jInternalFrameDetalleFormEvaluacionEmpleado.jDateChooserfechaEvaluacionEmpleado.setEnabled(this.evaluacionempleadoConstantesFunciones.activarfechaEvaluacionEmpleado);
		this.jInternalFrameDetalleFormEvaluacionEmpleado.jCheckBoxesta_evaluadoEvaluacionEmpleado.setEnabled(this.evaluacionempleadoConstantesFunciones.activaresta_evaluadoEvaluacionEmpleado);
		this.jInternalFrameDetalleFormEvaluacionEmpleado.jComboBoxid_anioEvaluacionEmpleado.setEnabled(this.evaluacionempleadoConstantesFunciones.activarid_anioEvaluacionEmpleado);
		this.jInternalFrameDetalleFormEvaluacionEmpleado.jComboBoxid_semestreEvaluacionEmpleado.setEnabled(this.evaluacionempleadoConstantesFunciones.activarid_semestreEvaluacionEmpleado);
		this.jInternalFrameDetalleFormEvaluacionEmpleado.jComboBoxid_trimestreEvaluacionEmpleado.setEnabled(this.evaluacionempleadoConstantesFunciones.activarid_trimestreEvaluacionEmpleado);
		this.jInternalFrameDetalleFormEvaluacionEmpleado.jComboBoxid_bimestreEvaluacionEmpleado.setEnabled(this.evaluacionempleadoConstantesFunciones.activarid_bimestreEvaluacionEmpleado);
		this.jInternalFrameDetalleFormEvaluacionEmpleado.jComboBoxid_mesEvaluacionEmpleado.setEnabled(this.evaluacionempleadoConstantesFunciones.activarid_mesEvaluacionEmpleado);
		this.jInternalFrameDetalleFormEvaluacionEmpleado.jTextAreaobservacion1EvaluacionEmpleado.setEnabled(this.evaluacionempleadoConstantesFunciones.activarobservacion1EvaluacionEmpleado);
		this.jInternalFrameDetalleFormEvaluacionEmpleado.jTextAreaobservacion2EvaluacionEmpleado.setEnabled(this.evaluacionempleadoConstantesFunciones.activarobservacion2EvaluacionEmpleado);
		this.jInternalFrameDetalleFormEvaluacionEmpleado.jTextAreaobservacion3EvaluacionEmpleado.setEnabled(this.evaluacionempleadoConstantesFunciones.activarobservacion3EvaluacionEmpleado);
		this.jInternalFrameDetalleFormEvaluacionEmpleado.jTextAreaobservacion4EvaluacionEmpleado.setEnabled(this.evaluacionempleadoConstantesFunciones.activarobservacion4EvaluacionEmpleado);
		}
	}
	
		
}